{"version":3,"file":"ptsecurity-mosaic-dropdown.mjs","sources":["../../../packages/mosaic/dropdown/dropdown.types.ts","../../../packages/mosaic/dropdown/dropdown-content.directive.ts","../../../packages/mosaic/dropdown/dropdown-item.component.ts","../../../packages/mosaic/dropdown/dropdown-item.html","../../../packages/mosaic/dropdown/dropdown-errors.ts","../../../packages/mosaic/dropdown/dropdown-animations.ts","../../../packages/mosaic/dropdown/dropdown.component.ts","../../../packages/mosaic/dropdown/dropdown.html","../../../packages/mosaic/dropdown/dropdown-trigger.directive.ts","../../../packages/mosaic/dropdown/dropdown.module.ts","../../../packages/mosaic/dropdown/ptsecurity-mosaic-dropdown.ts"],"sourcesContent":["import { FocusOrigin } from '@angular/cdk/a11y';\nimport { Direction } from '@angular/cdk/bidi';\nimport {\n    EventEmitter,\n    InjectionToken,\n    TemplateRef\n} from '@angular/core';\n\nimport { McDropdownContent } from './dropdown-content.directive';\n\n\nexport type DropdownPositionX = 'before' | 'after';\n\nexport type DropdownPositionY = 'above' | 'below';\n\n/** Reason why the menu was closed. */\nexport type DropdownCloseReason = void | 'click' | 'keydown' | 'tab';\n\n/**\n * Interface for a custom dropdown panel that can be used with `mcDropdownTriggerFor`.\n * @docs-private\n */\n// tslint:disable-next-line:naming-convention\nexport interface McDropdownPanel {\n    xPosition: DropdownPositionX;\n    yPosition: DropdownPositionY;\n    overlapTriggerX: boolean;\n    overlapTriggerY: boolean;\n    templateRef: TemplateRef<any>;\n    closed: EventEmitter<DropdownCloseReason>;\n    parent?: McDropdownPanel | undefined;\n    triggerWidth?: string;\n    direction?: Direction;\n    lazyContent?: McDropdownContent;\n    backdropClass?: string;\n    hasBackdrop?: boolean;\n    focusFirstItem(origin?: FocusOrigin): void;\n    resetActiveItem(): void;\n    setPositionClasses?(x: DropdownPositionX, y: DropdownPositionY): void;\n}\n\n\n/** Default `mc-dropdown` options that can be overridden. */\n// tslint:disable-next-line:naming-convention\nexport interface McDropdownDefaultOptions {\n    /** The x-axis position of the dropdown. */\n    xPosition: DropdownPositionX;\n\n    /** The y-axis position of the dropdown. */\n    yPosition: DropdownPositionY;\n\n    /** Whether the dropdown should overlap the dropdown trigger horizontally. */\n    overlapTriggerX: boolean;\n\n    /** Whether the dropdown should overlap the dropdown trigger vertically. */\n    overlapTriggerY: boolean;\n\n    /** Class to be applied to the dropdown's backdrop. */\n    backdropClass: string;\n\n    /** Whether the dropdown has a backdrop. */\n    hasBackdrop: boolean;\n}\n\n/**\n * Injection token used to provide the parent dropdown to dropdown-specific components.\n * @docs-private\n */\nexport const MC_DROPDOWN_PANEL = new InjectionToken<McDropdownPanel>('MC_DROPDOWN_PANEL');\n\n\n/** Injection token to be used to override the default options for `mc-dropdown`. */\nexport const MC_DROPDOWN_DEFAULT_OPTIONS =\n    new InjectionToken<McDropdownDefaultOptions>('mc-dropdown-default-options', {\n        providedIn: 'root',\n        factory: MC_DROPDOWN_DEFAULT_OPTIONS_FACTORY\n    });\n\n/** @docs-private */\n// tslint:disable-next-line:naming-convention\nexport function MC_DROPDOWN_DEFAULT_OPTIONS_FACTORY(): McDropdownDefaultOptions {\n    return {\n        overlapTriggerX: true,\n        overlapTriggerY: false,\n        xPosition: 'after',\n        yPosition: 'below',\n        backdropClass: 'cdk-overlay-transparent-backdrop',\n        hasBackdrop: false\n    };\n}\n","import { TemplatePortal, DomPortalOutlet } from '@angular/cdk/portal';\nimport { DOCUMENT } from '@angular/common';\nimport {\n    Directive,\n    TemplateRef,\n    ComponentFactoryResolver,\n    ApplicationRef,\n    Injector,\n    ViewContainerRef,\n    Inject,\n    OnDestroy\n} from '@angular/core';\nimport { Subject } from 'rxjs';\n\n\n/**\n * Dropdown content that will be rendered lazily once the dropdown is opened.\n */\n@Directive({\n    selector: 'ng-template[mcDropdownContent]'\n})\nexport class McDropdownContent implements OnDestroy {\n    /** Emits when the dropdown content has been attached. */\n    attached = new Subject<void>();\n    private portal: TemplatePortal;\n    private outlet: DomPortalOutlet;\n\n    constructor(\n        private template: TemplateRef<any>,\n        private componentFactoryResolver: ComponentFactoryResolver,\n        private appRef: ApplicationRef,\n        private injector: Injector,\n        private viewContainerRef: ViewContainerRef,\n        @Inject(DOCUMENT) private document: any\n    ) {}\n\n    /**\n     * Attaches the content with a particular context.\n     * @docs-private\n     */\n    attach(context: any = {}) {\n        if (!this.portal) {\n            this.portal = new TemplatePortal(this.template, this.viewContainerRef);\n        }\n\n        this.detach();\n\n        if (!this.outlet) {\n            this.outlet = new DomPortalOutlet(\n                this.document.createElement('div'),\n                this.componentFactoryResolver,\n                this.appRef,\n                this.injector\n            );\n        }\n\n        const element: HTMLElement = this.template.elementRef.nativeElement;\n\n        // Because we support opening the same dropdown from different triggers (which in turn have their\n        // own `OverlayRef` panel), we have to re-insert the host element every time, otherwise we\n        // risk it staying attached to a pane that's no longer in the DOM.\n        element.parentNode!.insertBefore(this.outlet.outletElement, element);\n        this.portal.attach(this.outlet, context);\n        this.attached.next();\n    }\n\n    /**\n     * Detaches the content.\n     * @docs-private\n     */\n    detach() {\n        if (this.portal?.isAttached) {\n            this.portal.detach();\n        }\n    }\n\n    ngOnDestroy() {\n        this.outlet?.dispose();\n    }\n}\n","import { FocusMonitor, FocusOrigin } from '@angular/cdk/a11y';\nimport {\n    ChangeDetectionStrategy,\n    Component,\n    ElementRef,\n    OnDestroy,\n    ViewEncapsulation,\n    Inject,\n    Optional,\n    AfterViewInit,\n    HostListener,\n    ContentChild\n} from '@angular/core';\nimport { IFocusableOption } from '@ptsecurity/cdk/a11y';\nimport { CanDisable, CanDisableCtor, mixinDisabled } from '@ptsecurity/mosaic/core';\nimport { McIcon } from '@ptsecurity/mosaic/icon';\nimport { Subject } from 'rxjs';\n\nimport { MC_DROPDOWN_PANEL, McDropdownPanel } from './dropdown.types';\n\n\n// Boilerplate for applying mixins to McDropdownItem.\n/** @docs-private */\nclass McDropdownItemBase {}\n// tslint:disable-next-line:naming-convention\nconst McDropdownItemMixinBase: CanDisableCtor & typeof McDropdownItemBase = mixinDisabled(McDropdownItemBase);\n\n/**\n * This directive is intended to be used inside an mc-dropdown tag.\n * It exists mostly to set the role attribute.\n */\n@Component({\n    selector: 'mc-dropdown-item, [mc-dropdown-item]',\n    exportAs: 'mcDropdownItem',\n    templateUrl: 'dropdown-item.html',\n    styleUrls: ['dropdown-item.scss'],\n    inputs: ['disabled'],\n    host: {\n        class: 'mc-dropdown-item',\n        '[class.mc-dropdown-item_with-icon]': 'icon',\n        '[class.mc-dropdown-item_highlighted]': 'highlighted',\n\n        '[attr.disabled]': 'disabled || null',\n        '[attr.tabindex]': 'getTabIndex()'\n    },\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None\n})\nexport class McDropdownItem extends McDropdownItemMixinBase implements\n    IFocusableOption, CanDisable, AfterViewInit, OnDestroy {\n\n    @ContentChild(McIcon) icon: McIcon;\n\n    /** Stream that emits when the dropdown item is hovered. */\n    readonly hovered = new Subject<McDropdownItem>();\n\n    /** Stream that emits when the menu item is focused. */\n    readonly focused = new Subject<McDropdownItem>();\n\n    /** Whether the dropdown item is highlighted. */\n    highlighted: boolean = false;\n\n    /** Whether the dropdown item acts as a trigger for a nested dropdown. */\n    isNested: boolean = false;\n\n    constructor(\n        private elementRef: ElementRef<HTMLElement>,\n        private focusMonitor: FocusMonitor,\n        @Inject(MC_DROPDOWN_PANEL) @Optional() public parentDropdownPanel?: McDropdownPanel\n    ) {\n        super();\n    }\n\n    ngAfterViewInit() {\n        if (this.focusMonitor) {\n            // Start monitoring the element so it gets the appropriate focused classes. We want\n            // to show the focus style for menu items only when the focus was not caused by a\n            // mouse or touch interaction.\n            this.focusMonitor.monitor(this.elementRef, false);\n        }\n    }\n\n    ngOnDestroy() {\n        if (this.focusMonitor) {\n            this.focusMonitor.stopMonitoring(this.elementRef);\n        }\n\n        this.hovered.complete();\n        this.focused.complete();\n    }\n\n    resetStyles() {\n        this.getHostElement().classList.remove('cdk-keyboard-focused');\n    }\n\n    /** Focuses the dropdown item. */\n    focus(origin?: FocusOrigin, options?: FocusOptions): void {\n        if (this.focusMonitor && origin) {\n            this.focusMonitor.focusVia(this.getHostElement(), origin, options);\n        } else {\n            this.getHostElement().focus(options);\n        }\n\n        this.focused.next(this);\n    }\n\n    /** Returns the host DOM element. */\n    getHostElement(): HTMLElement {\n        return this.elementRef.nativeElement;\n    }\n\n    /** Used to set the `tabindex`. */\n    getTabIndex(): string {\n        return this.disabled ? '-1' : '0';\n    }\n\n    /** Prevents the default element actions if it is disabled. */\n    // We have to use a `HostListener` here in order to support both Ivy and ViewEngine.\n    // In Ivy the `host` bindings will be merged when this class is extended, whereas in\n    // ViewEngine they're overwritten.\n    // TODO(crisbeto): we move this back into `host` once Ivy is turned on by default.\n    // tslint:disable-next-line:no-host-decorator-in-concrete\n    @HostListener('click', ['$event']) checkDisabled(event: Event): void {\n        if (this.disabled) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n    }\n\n    /** Emits to the hover stream. */\n    // We have to use a `HostListener` here in order to support both Ivy and ViewEngine.\n    // In Ivy the `host` bindings will be merged when this class is extended, whereas in\n    // ViewEngine they're overwritten.\n    // TODO(crisbeto): we move this back into `host` once Ivy is turned on by default.\n    // tslint:disable-next-line:no-host-decorator-in-concrete\n    @HostListener('mouseenter') handleMouseEnter() {\n        this.hovered.next(this);\n    }\n\n    /** Gets the label to be used when determining whether the option should be focused. */\n    getLabel(): string {\n        const clone = this.getHostElement().cloneNode(true) as HTMLElement;\n        const icons = clone.querySelectorAll('[mc-icon], .mc-icon');\n\n        // Strip away icons so they don't show up in the text.\n        // tslint:disable-next-line:prefer-for-of\n        for (let i = 0; i < icons.length; i++) {\n            const icon = icons[i];\n            icon.parentNode?.removeChild(icon);\n        }\n\n        return clone.textContent?.trim() || '';\n    }\n\n    haltDisabledEvents(event: Event) {\n        if (this.disabled) {\n            event.preventDefault();\n            event.stopImmediatePropagation();\n            event.stopPropagation();\n        }\n    }\n}\n","<div class=\"mc-dropdown-item-wrapper\">\n    <ng-content></ng-content>\n</div>\n<i *ngIf=\"isNested\" mc-icon=\"mc-angle-right-M_16\" class=\"mc-dropdown-trigger__icon\"></i>\n<div class=\"mc-dropdown-item-overlay\" (click)=\"haltDisabledEvents($event)\"></div>\n","/**\n * Throws an exception for the case when dropdown trigger doesn't have a valid mc-dropdown instance\n * @docs-private\n */\nexport function throwMcDropdownMissingError() {\n    throw Error(`mcDropdownTriggerFor: must pass in an mc-dropdown instance.\n    Example:\n      <mc-dropdown #dropdown=\"mcDropdown\"></mc-dropdown>\n      <button [mcDropdownTriggerFor]=\"dropdown\"></button>`);\n}\n\n/**\n * Throws an exception for the case when dropdown's x-position value isn't valid.\n * In other words, it doesn't match 'before' or 'after'.\n * @docs-private\n */\nexport function throwMcDropdownInvalidPositionX() {\n    throw Error(`xPosition value must be either 'before' or after'.\n      Example: <mc-dropdown [xPosition]=\"'before'\" #dropdown=\"mcDropdown\"></mc-dropdown>`);\n}\n\n/**\n * Throws an exception for the case when dropdown's y-position value isn't valid.\n * In other words, it doesn't match 'above' or 'below'.\n * @docs-private\n */\nexport function throwMcDropdownInvalidPositionY() {\n    throw Error(`yPosition value must be either 'above' or below'.\n      Example: <mc-dropdown [yPosition]=\"'above'\" #dropdown=\"mcDropdown\"></mc-dropdown>`);\n}\n","import {\n    trigger,\n    state,\n    style,\n    animate,\n    transition,\n    query,\n    group,\n    AnimationTriggerMetadata\n} from '@angular/animations';\n\n\n/**\n * Animations used by the mc-dropdown component.\n * @docs-private\n */\nexport const mcDropdownAnimations: {\n    readonly transformDropdown: AnimationTriggerMetadata;\n    readonly fadeInItems: AnimationTriggerMetadata;\n} = {\n    /**\n     * This animation controls the dropdown panel's entry and exit from the page.\n     *\n     * When the dropdown panel is added to the DOM, it scales in and fades in its border.\n     *\n     * When the dropdown panel is removed from the DOM, it simply fades out after a brief\n     * delay to display the ripple.\n     */\n    transformDropdown: trigger('transformDropdown', [\n        state('void', style({\n            opacity: 0,\n            transform: 'scale(0.8)'\n        })),\n        transition('void => enter', group([\n            query('.mc-dropdown__content', animate('50ms linear', style({opacity: 1}))),\n            animate('50ms cubic-bezier(0, 0, 0.2, 1)', style({transform: 'scale(1)'}))\n        ])),\n        transition('* => void', animate('50ms 25ms linear', style({opacity: 0})))\n    ]),\n\n\n    /**\n     * This animation fades in the background color and content of the dropdown panel\n     * after its containing element is scaled in.\n     */\n    fadeInItems: trigger('fadeInItems', [\n        // now. Remove next time we do breaking changes.\n        state('showing', style({opacity: 1})),\n        transition('void => *', [\n            style({opacity: 0}),\n            animate('200ms 60ms cubic-bezier(0.55, 0, 0.55, 0.2)')\n        ])\n    ])\n};\n\nexport const fadeInItems = mcDropdownAnimations.fadeInItems;\n\nexport const transformDropdown = mcDropdownAnimations.transformDropdown;\n","import { AnimationEvent } from '@angular/animations';\nimport { FocusOrigin } from '@angular/cdk/a11y';\nimport { Direction } from '@angular/cdk/bidi';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { DOWN_ARROW, UP_ARROW } from '@angular/cdk/keycodes';\nimport {\n    AfterContentInit,\n    ChangeDetectionStrategy,\n    Component,\n    ContentChild,\n    ContentChildren,\n    ElementRef,\n    EventEmitter,\n    Inject,\n    Input,\n    NgZone,\n    OnDestroy,\n    Output,\n    TemplateRef,\n    QueryList,\n    ViewChild,\n    ViewEncapsulation,\n    OnInit\n} from '@angular/core';\nimport { FocusKeyManager } from '@ptsecurity/cdk/a11y';\nimport { ESCAPE, LEFT_ARROW, RIGHT_ARROW } from '@ptsecurity/cdk/keycodes';\nimport { merge, Observable, Subject, Subscription } from 'rxjs';\nimport { startWith, switchMap, take } from 'rxjs/operators';\n\nimport { mcDropdownAnimations } from './dropdown-animations';\nimport { McDropdownContent } from './dropdown-content.directive';\nimport { throwMcDropdownInvalidPositionX, throwMcDropdownInvalidPositionY } from './dropdown-errors';\nimport { McDropdownItem } from './dropdown-item.component';\nimport {\n    DropdownPositionX,\n    DropdownPositionY,\n    MC_DROPDOWN_DEFAULT_OPTIONS,\n    MC_DROPDOWN_PANEL,\n    McDropdownDefaultOptions,\n    McDropdownPanel\n} from './dropdown.types';\n\n\n@Component({\n    selector: 'mc-dropdown',\n    exportAs: 'mcDropdown',\n    templateUrl: 'dropdown.html',\n    styleUrls: ['dropdown.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n    animations: [\n        mcDropdownAnimations.transformDropdown,\n        mcDropdownAnimations.fadeInItems\n    ],\n    providers: [\n        { provide: MC_DROPDOWN_PANEL, useExisting: McDropdown }\n    ]\n})\nexport class McDropdown implements AfterContentInit, McDropdownPanel, OnInit, OnDestroy {\n\n    @Input() navigationWithWrap: boolean = false;\n\n    /** Position of the dropdown in the X axis. */\n    @Input()\n    get xPosition(): DropdownPositionX {\n        return this._xPosition;\n    }\n\n    set xPosition(value: DropdownPositionX) {\n        if (value !== 'before' && value !== 'after') {\n            throwMcDropdownInvalidPositionX();\n        }\n        this._xPosition = value;\n        this.setPositionClasses();\n    }\n\n    /** Position of the dropdown in the Y axis. */\n    @Input()\n    get yPosition(): DropdownPositionY {\n        return this._yPosition;\n    }\n\n    set yPosition(value: DropdownPositionY) {\n        if (value !== 'above' && value !== 'below') {\n            throwMcDropdownInvalidPositionY();\n        }\n        this._yPosition = value;\n        this.setPositionClasses();\n    }\n\n    /** Whether the dropdown should overlap its trigger vertically. */\n    @Input()\n    get overlapTriggerY(): boolean {\n        return this._overlapTriggerY;\n    }\n\n    set overlapTriggerY(value: boolean) {\n        this._overlapTriggerY = coerceBooleanProperty(value);\n    }\n\n    /** Whether the dropdown should overlap its trigger horizontally. */\n    @Input()\n    get overlapTriggerX(): boolean {\n        return this._overlapTriggerX;\n    }\n\n    set overlapTriggerX(value: boolean) {\n        this._overlapTriggerX = coerceBooleanProperty(value);\n    }\n\n    /** Whether the dropdown has a backdrop. */\n    @Input()\n    get hasBackdrop(): boolean {\n        return this._hasBackdrop;\n    }\n\n    set hasBackdrop(value: boolean) {\n        this._hasBackdrop = coerceBooleanProperty(value);\n    }\n\n    /**\n     * This method takes classes set on the host mc-dropdown element and applies them on the\n     * dropdown template that displays in the overlay container.  Otherwise, it's difficult\n     * to style the containing dropdown from outside the component.\n     * @param classes list of class names\n     */\n    @Input('class')\n    set panelClass(classes: string) {\n        const previousPanelClass = this.previousPanelClass;\n\n        if (previousPanelClass && previousPanelClass.length) {\n            previousPanelClass\n                .split(' ')\n                .forEach((className: string) => this.classList[className] = false);\n        }\n\n        this.previousPanelClass = classes;\n\n        if (classes?.length) {\n            classes\n                .split(' ')\n                .forEach((className: string) => this.classList[className] = true);\n\n            this.elementRef.nativeElement.className = '';\n        }\n    }\n\n    private _xPosition: DropdownPositionX = this.defaultOptions.xPosition;\n    private _yPosition: DropdownPositionY = this.defaultOptions.yPosition;\n    private _overlapTriggerX: boolean = this.defaultOptions.overlapTriggerX;\n    private _overlapTriggerY: boolean = this.defaultOptions.overlapTriggerY;\n    private _hasBackdrop: boolean = this.defaultOptions.hasBackdrop;\n\n    triggerWidth: string = '';\n    /** Config object to be passed into the dropdown's ngClass */\n    classList: { [key: string]: boolean } = {};\n\n    /** Current state of the panel animation. */\n    panelAnimationState: 'void' | 'enter' = 'void';\n\n    /** Emits whenever an animation on the dropdown completes. */\n    animationDone = new Subject<AnimationEvent>();\n\n    /** Whether the dropdown is animating. */\n    isAnimating: boolean;\n\n    /** Parent dropdown of the current dropdown panel. */\n    parent: McDropdownPanel | undefined;\n\n    /** Layout direction of the dropdown. */\n    direction: Direction;\n\n    /** Class to be added to the backdrop element. */\n    @Input() backdropClass: string = this.defaultOptions.backdropClass;\n\n    /** @docs-private */\n    @ViewChild(TemplateRef, { static: false }) templateRef: TemplateRef<any>;\n\n    /**\n     * List of the items inside of a dropdown.\n     */\n    @ContentChildren(McDropdownItem, { descendants: true }) items: QueryList<McDropdownItem>;\n\n    /**\n     * Dropdown content that will be rendered lazily.\n     * @docs-private\n     */\n    @ContentChild(McDropdownContent, { static: false }) lazyContent: McDropdownContent;\n\n    /** Event emitted when the dropdown is closed. */\n    @Output() readonly closed = new EventEmitter<void | 'click' | 'keydown' | 'tab'>();\n\n    private previousPanelClass: string;\n\n    private keyManager: FocusKeyManager<McDropdownItem>;\n\n    /** Only the direct descendant menu items. */\n    private directDescendantItems = new QueryList<McDropdownItem>();\n\n    /** Subscription to tab events on the dropdown panel */\n    private tabSubscription = Subscription.EMPTY;\n\n    constructor(\n        private elementRef: ElementRef<HTMLElement>,\n        private ngZone: NgZone,\n        @Inject(MC_DROPDOWN_DEFAULT_OPTIONS) private defaultOptions: McDropdownDefaultOptions) { }\n\n    ngOnInit() {\n        this.setPositionClasses();\n    }\n\n    ngAfterContentInit() {\n        this.updateDirectDescendants();\n\n        this.keyManager = new FocusKeyManager<McDropdownItem>(this.directDescendantItems)\n            .withTypeAhead();\n\n        if (this.navigationWithWrap) {\n            this.keyManager.withWrap();\n        }\n\n        this.tabSubscription = this.keyManager.tabOut\n            .subscribe(() => this.closed.emit('tab'));\n\n        // If a user manually (programmatically) focuses a menu item, we need to reflect that focus\n        // change back to the key manager. Note that we don't need to unsubscribe here because focused\n        // is internal and we know that it gets completed on destroy.\n        this.directDescendantItems.changes\n            .pipe(\n                startWith(this.directDescendantItems),\n                switchMap((items) => merge(...items.map((item: McDropdownItem) => item.focused)))\n            )\n            .subscribe((focusedItem) => this.keyManager.updateActiveItem(focusedItem as McDropdownItem));\n    }\n\n    ngOnDestroy() {\n        this.directDescendantItems.destroy();\n        this.tabSubscription.unsubscribe();\n        this.closed.complete();\n    }\n\n    /** Stream that emits whenever the hovered dropdown item changes. */\n    hovered(): Observable<McDropdownItem> {\n        const itemChanges = this.directDescendantItems.changes as Observable<QueryList<McDropdownItem>>;\n\n        return itemChanges.pipe(\n            startWith(this.directDescendantItems),\n            switchMap((items) => merge(...items.map((item: McDropdownItem) => item.hovered)))\n        ) as Observable<McDropdownItem>;\n    }\n\n    /** Handle a keyboard event from the dropdown, delegating to the appropriate action. */\n    handleKeydown(event: KeyboardEvent) {\n        // tslint:disable-next-line:deprecation\n        const keyCode = event.keyCode;\n\n\n        switch (keyCode) {\n            case ESCAPE:\n                this.closed.emit('keydown');\n                break;\n            case LEFT_ARROW:\n                if (this.parent && this.direction === 'ltr') {\n                    this.closed.emit('keydown');\n                }\n                break;\n            case RIGHT_ARROW:\n                if (this.parent && this.direction === 'rtl') {\n                    this.closed.emit('keydown');\n                }\n                break;\n            default:\n                if (keyCode === UP_ARROW || keyCode === DOWN_ARROW) {\n                    this.keyManager.setFocusOrigin('keyboard');\n                }\n\n                this.keyManager.onKeydown(event);\n\n                return;\n        }\n\n        // Don't allow the event to propagate if we've already handled it, or it may\n        // end up reaching other overlays that were opened earlier.\n        event.stopPropagation();\n    }\n\n    /**\n     * Focus the first item in the dropdown.\n     * @param origin Action from which the focus originated. Used to set the correct styling.\n     */\n    focusFirstItem(origin: FocusOrigin = 'program'): void {\n        // When the content is rendered lazily, it takes a bit before the items are inside the DOM.\n        if (this.lazyContent) {\n            this.ngZone.onStable\n                .pipe(take(1))\n                .subscribe(() => this.keyManager.setFocusOrigin(origin).setFirstItemActive());\n        } else {\n            this.keyManager.setFocusOrigin(origin).setFirstItemActive();\n        }\n    }\n\n    /**\n     * Resets the active item in the dropdown. This is used when the dropdown is opened, allowing\n     * the user to start from the first option when pressing the down arrow.\n     */\n    resetActiveItem() {\n        this.keyManager.activeItem?.resetStyles();\n        this.keyManager.setActiveItem(-1);\n    }\n\n    /**\n     * Adds classes to the dropdown panel based on its position. Can be used by\n     * consumers to add specific styling based on the position.\n     * @param posX Position of the dropdown along the x axis.\n     * @param posY Position of the dropdown along the y axis.\n     * @docs-private\n     */\n    setPositionClasses(posX: DropdownPositionX = this.xPosition, posY: DropdownPositionY = this.yPosition) {\n        const classes = this.classList;\n        classes['mc-dropdown-before'] = posX === 'before';\n        classes['mc-dropdown-after'] = posX === 'after';\n        classes['mc-dropdown-above'] = posY === 'above';\n        classes['mc-dropdown-below'] = posY === 'below';\n    }\n\n    /** Starts the enter animation. */\n    startAnimation() {\n        this.panelAnimationState = 'enter';\n    }\n\n    /** Resets the panel animation to its initial state. */\n    resetAnimation() {\n        this.panelAnimationState = 'void';\n    }\n\n    /** Callback that is invoked when the panel animation completes. */\n    onAnimationDone(event: AnimationEvent) {\n        this.animationDone.next(event);\n        this.isAnimating = false;\n    }\n\n    onAnimationStart(event: AnimationEvent) {\n        this.isAnimating = true;\n\n        // Scroll the content element to the top as soon as the animation starts. This is necessary,\n        // because we move focus to the first item while it's still being animated, which can throw\n        // the browser off when it determines the scroll position. Alternatively we can move focus\n        // when the animation is done, however moving focus asynchronously will interrupt screen\n        // readers which are in the process of reading out the dropdown already. We take the `element`\n        // from the `event` since we can't use a `ViewChild` to access the pane.\n        if (event.toState === 'enter' && this.keyManager.activeItemIndex === 0) {\n            event.element.scrollTop = 0;\n        }\n    }\n\n    close() {\n        const focusOrigin = this.keyManager.getFocusOrigin() === 'keyboard' ? 'keydown' : 'click';\n\n        this.closed.emit(focusOrigin);\n    }\n\n    /**\n     * Sets up a stream that will keep track of any newly-added menu items and will update the list\n     * of direct descendants. We collect the descendants this way, because `_allItems` can include\n     * items that are part of child menus, and using a custom way of registering items is unreliable\n     * when it comes to maintaining the item order.\n     */\n    private updateDirectDescendants() {\n        this.items.changes\n            .pipe(startWith(this.items))\n            .subscribe((items: QueryList<McDropdownItem>) => {\n                this.directDescendantItems.reset(items.filter((item) => item.parentDropdownPanel === this));\n                this.directDescendantItems.notifyOnChanges();\n            });\n    }\n}\n","<ng-template>\n    <div class=\"mc-dropdown__panel\"\n         [ngClass]=\"classList\"\n         [class.mc-dropdown__panel_nested]=\"parent\"\n         [style.min-width]=\"triggerWidth\"\n         (keydown)=\"handleKeydown($event)\"\n         (click)=\"close()\"\n         [@transformDropdown]=\"panelAnimationState\"\n         (@transformDropdown.start)=\"onAnimationStart($event)\"\n         (@transformDropdown.done)=\"onAnimationDone($event)\"\n         tabindex=\"-1\">\n\n        <div class=\"mc-dropdown__content\">\n            <ng-content></ng-content>\n        </div>\n    </div>\n</ng-template>\n","import { FocusMonitor, FocusOrigin } from '@angular/cdk/a11y';\nimport { Direction, Directionality } from '@angular/cdk/bidi';\nimport {\n    FlexibleConnectedPositionStrategy,\n    HorizontalConnectionPos,\n    Overlay,\n    OverlayConfig,\n    OverlayRef,\n    VerticalConnectionPos,\n    ScrollStrategy\n} from '@angular/cdk/overlay';\nimport { normalizePassiveListenerOptions } from '@angular/cdk/platform';\nimport { TemplatePortal } from '@angular/cdk/portal';\nimport {\n    AfterContentInit,\n    Directive,\n    ElementRef,\n    EventEmitter,\n    Inject,\n    InjectionToken,\n    Input,\n    OnDestroy,\n    Optional,\n    Output,\n    Self,\n    ViewContainerRef\n} from '@angular/core';\nimport { LEFT_ARROW, RIGHT_ARROW, SPACE, ENTER, DOWN_ARROW } from '@ptsecurity/cdk/keycodes';\nimport { asapScheduler, merge, Observable, of as observableOf, Subscription } from 'rxjs';\nimport { delay, filter, take, takeUntil } from 'rxjs/operators';\n\nimport { throwMcDropdownMissingError } from './dropdown-errors';\nimport { McDropdownItem } from './dropdown-item.component';\nimport { McDropdown } from './dropdown.component';\nimport { DropdownCloseReason, DropdownPositionX, DropdownPositionY, McDropdownPanel } from './dropdown.types';\n\n\n/** Injection token that determines the scroll handling while the dropdown is open. */\nexport const MC_DROPDOWN_SCROLL_STRATEGY =\n    new InjectionToken<() => ScrollStrategy>('mc-dropdown-scroll-strategy');\n\n/** @docs-private */\n// tslint:disable-next-line:naming-convention\nexport function MC_DROPDOWN_SCROLL_STRATEGY_FACTORY(overlay: Overlay): () => ScrollStrategy {\n    return () => overlay.scrollStrategies.reposition();\n}\n\n/** @docs-private */\nexport const MC_DROPDOWN_SCROLL_STRATEGY_FACTORY_PROVIDER = {\n    provide: MC_DROPDOWN_SCROLL_STRATEGY,\n    deps: [Overlay],\n    useFactory: MC_DROPDOWN_SCROLL_STRATEGY_FACTORY\n};\n\n/** Default top padding of the nested dropdown panel. */\nexport const NESTED_PANEL_TOP_PADDING = 4;\nexport const NESTED_PANEL_LEFT_PADDING = 8;\n\n/** Options for binding a passive event listener. */\nconst passiveEventListenerOptions = normalizePassiveListenerOptions({passive: true});\n\n/**\n * This directive is intended to be used in conjunction with an mc-dropdown tag.  It is\n * responsible for toggling the display of the provided dropdown instance.\n */\n@Directive({\n    selector: `[mcDropdownTriggerFor]`,\n    exportAs: 'mcDropdownTrigger',\n    host: {\n        class: 'mc-dropdown-trigger',\n        '[class.mc-pressed]': 'opened',\n        '(mousedown)': 'handleMousedown($event)',\n        '(keydown)': 'handleKeydown($event)',\n        '(click)': 'handleClick($event)'\n    }\n})\nexport class McDropdownTrigger implements AfterContentInit, OnDestroy {\n    lastDestroyReason: DropdownCloseReason;\n\n    /** Data to be passed along to any lazily-rendered content. */\n    @Input('mcDropdownTriggerData') data: any;\n\n    @Input() openByArrowDown: boolean = true;\n\n    /**\n     * Whether focus should be restored when the menu is closed.\n     * Note that disabling this option can have accessibility implications\n     * and it's up to you to manage focus, if you decide to turn it off.\n     */\n    @Input('mcDropdownTriggerRestoreFocus') restoreFocus: boolean = true;\n\n    /** References the dropdown instance that the trigger is associated with. */\n    @Input('mcDropdownTriggerFor')\n    get dropdown() {\n        return this._dropdown;\n    }\n\n    set dropdown(dropdown: McDropdownPanel) {\n        if (dropdown === this._dropdown) { return; }\n\n        this._dropdown = dropdown;\n        this.closeSubscription.unsubscribe();\n\n        if (dropdown) {\n            this.closeSubscription = dropdown.closed\n                .asObservable()\n                .subscribe((reason) => {\n                    this.destroy(reason);\n\n                    // If a click closed the dropdown, we should close the entire chain of nested dropdowns.\n                    if (['click', 'tab'].includes(reason as string) && this.parent) {\n                        this.parent.closed.emit(reason);\n                    }\n                });\n        }\n    }\n\n    private _dropdown: McDropdownPanel;\n\n    /** Event emitted when the associated dropdown is opened. */\n    @Output() readonly dropdownOpened: EventEmitter<void> = new EventEmitter<void>();\n\n    /** Event emitted when the associated dropdown is closed. */\n    @Output() readonly dropdownClosed: EventEmitter<void> = new EventEmitter<void>();\n\n    // Tracking input type is necessary so it's possible to only auto-focus\n    // the first item of the list when the dropdown is opened via the keyboard\n    openedBy: Exclude<FocusOrigin, 'program' | null> | undefined;\n\n    /** The text direction of the containing app. */\n    get dir(): Direction {\n        return this._dir?.value === 'rtl' ? 'rtl' : 'ltr';\n    }\n\n    /** Whether the dropdown is open. */\n    get opened(): boolean {\n        return this._opened;\n    }\n\n    private _opened: boolean = false;\n\n    private portal: TemplatePortal;\n\n    private overlayRef: OverlayRef | null = null;\n\n    private closeSubscription = Subscription.EMPTY;\n\n    private hoverSubscription = Subscription.EMPTY;\n\n    constructor(\n        private overlay: Overlay,\n        private elementRef: ElementRef<HTMLElement>,\n        private viewContainerRef: ViewContainerRef,\n        @Inject(MC_DROPDOWN_SCROLL_STRATEGY) private scrollStrategy: any,\n        @Optional() private parent: McDropdown,\n        @Optional() @Self() private dropdownItemInstance: McDropdownItem,\n        @Optional() private _dir: Directionality,\n        private focusMonitor?: FocusMonitor\n    ) {\n        elementRef.nativeElement.addEventListener(\n            'touchstart',\n            this.handleTouchStart,\n            passiveEventListenerOptions\n        );\n\n        if (dropdownItemInstance) {\n            dropdownItemInstance.isNested = this.isNested();\n        }\n    }\n\n    ngAfterContentInit() {\n        this.check();\n        this.handleHover();\n    }\n\n    ngOnDestroy() {\n        if (this.overlayRef) {\n            this.overlayRef.dispose();\n            this.overlayRef = null;\n        }\n\n        this.elementRef.nativeElement.removeEventListener(\n            'touchstart',\n            this.handleTouchStart,\n            passiveEventListenerOptions\n        );\n\n        this.cleanUpSubscriptions();\n    }\n\n    /** Whether the dropdown triggers a nested dropdown or a top-level one. */\n    isNested(): boolean {\n        return !!(this.dropdownItemInstance && this.parent);\n    }\n\n    /** Toggles the dropdown between the open and closed states. */\n    toggle(): void {\n        // tslint:disable-next-line:no-void-expression\n        return this._opened ? this.close() : this.open();\n    }\n\n    /** Opens the dropdown. */\n    open(): void {\n        if (this._opened) { return; }\n\n        this.check();\n\n        const overlayRef = this.createOverlay();\n        const overlayConfig = overlayRef.getConfig();\n\n        this.setPosition(overlayConfig.positionStrategy as FlexibleConnectedPositionStrategy);\n\n        overlayConfig.hasBackdrop = this.dropdown.hasBackdrop ? !this.isNested() : this.dropdown.hasBackdrop;\n\n        overlayRef.attach(this.getPortal());\n\n        if (this.dropdown.lazyContent) {\n            this.dropdown.lazyContent.detach();\n\n            this.dropdown.lazyContent.attach(this.data);\n        }\n\n        this.closeSubscription = this.closingActions()\n            .subscribe(() => this.close());\n\n        this.init();\n\n        if (this.dropdown instanceof McDropdown) {\n            this.dropdown.startAnimation();\n        }\n    }\n\n    /** Closes the dropdown. */\n    close(): void {\n        this.dropdown.closed.emit();\n    }\n\n    /**\n     * Focuses the dropdown trigger.\n     */\n    focus(origin?: FocusOrigin, options?: FocusOptions) {\n        if (this.focusMonitor && origin) {\n            this.focusMonitor.focusVia(this.elementRef.nativeElement, origin, options);\n        } else {\n            this.elementRef.nativeElement.focus();\n        }\n    }\n\n    /** Handles mouse presses on the trigger. */\n    handleMousedown(event: MouseEvent): void {\n        // Since right or middle button clicks won't trigger the `click` event,\n        // we shouldn't consider the dropdown as opened by mouse in those cases.\n        this.openedBy = event.button === 0 ? 'mouse' : undefined;\n\n        // Since clicking on the trigger won't close the dropdown if it opens a nested dropdown,\n        // we should prevent focus from moving onto it via click to avoid the\n        // highlight from lingering on the dropdown item.\n        if (this.isNested()) {\n            event.preventDefault();\n        }\n    }\n\n    /** Handles key presses on the trigger. */\n    handleKeydown(event: KeyboardEvent) {\n        // tslint:disable-next-line:deprecation\n        const keyCode = event.keyCode;\n\n        if (keyCode === ENTER || keyCode === SPACE) {\n            this.openedBy = 'keyboard';\n\n            event.preventDefault();\n\n            if (this.isNested()) {\n                // Stop event propagation to avoid closing the parent dropdown.\n                event.stopPropagation();\n\n                this.open();\n            } else {\n                this.toggle();\n            }\n        }\n\n        if (\n            (this.isNested() &&\n                ((keyCode === RIGHT_ARROW && this.dir === 'ltr') || (keyCode === LEFT_ARROW && this.dir === 'rtl'))\n            ) ||\n            (!this.isNested() && (keyCode === DOWN_ARROW && this.openByArrowDown))\n        ) {\n            event.preventDefault();\n\n            this.openedBy = 'keyboard';\n            this.open();\n        }\n    }\n\n    /** Handles click events on the trigger. */\n    handleClick(event: MouseEvent): void {\n        if (this.isNested()) {\n            // Stop event propagation to avoid closing the parent dropdown.\n            event.stopPropagation();\n\n            this.open();\n        } else {\n            this.toggle();\n        }\n    }\n\n    /**\n     * Handles touch start events on the trigger.\n     * Needs to be an arrow function so we can easily use addEventListener and removeEventListener.\n     */\n    private handleTouchStart = () => this.openedBy = 'touch';\n\n    /** Closes the dropdown and does the necessary cleanup. */\n    private destroy(reason: DropdownCloseReason) {\n        if (!this.overlayRef || !this.opened) { return; }\n\n        this.lastDestroyReason = reason;\n\n        this.dropdown.resetActiveItem();\n\n        this.closeSubscription.unsubscribe();\n        this.overlayRef.detach();\n\n        if (this.restoreFocus && (reason === 'keydown' || !this.openedBy || !this.isNested())) {\n            this.focus(this.openedBy);\n        }\n\n        this.openedBy = undefined;\n\n        if (this.dropdown instanceof McDropdown) {\n            this.dropdown.resetAnimation();\n\n            const animationSubscription = this.dropdown.animationDone\n                .pipe(\n                    filter((event) => event.toState === 'void'),\n                    take(1)\n                );\n\n            if (this.dropdown.lazyContent) {\n                // Wait for the exit animation to finish before detaching the content.\n                animationSubscription\n                    .pipe(\n                        // Interrupt if the content got re-attached.\n                        takeUntil(this.dropdown.lazyContent.attached)\n                    )\n                    .subscribe({\n                        next: () => this.dropdown.lazyContent!.detach(),\n                        // No matter whether the content got re-attached, reset the this.dropdown.\n                        complete: () => this.setIsOpened(false)\n                    });\n            } else {\n                animationSubscription\n                    .subscribe(() => this.setIsOpened(false));\n            }\n        } else {\n            this.setIsOpened(false);\n\n            if (this.dropdown.lazyContent) {\n                this.dropdown.lazyContent.detach();\n            }\n        }\n    }\n\n    /**\n     * This method sets the dropdown state to open and focuses the first item if\n     * the dropdown was opened via the keyboard.\n     */\n    private init(): void {\n        this.dropdown.parent = this.isNested() ? this.parent : undefined;\n        this.dropdown.direction = this.dir;\n\n        if (!this.dropdown.parent) {\n            this.dropdown.triggerWidth = this.getWidth();\n        }\n\n        this.dropdown.focusFirstItem(this.openedBy || 'program');\n\n        this.setIsOpened(true);\n    }\n\n    // set state rather than toggle to support triggers sharing a dropdown\n    private setIsOpened(isOpen: boolean): void {\n        this._opened = isOpen;\n        // tslint:disable-next-line:no-void-expression\n        this._opened ? this.dropdownOpened.emit() : this.dropdownClosed.emit();\n\n        if (this.isNested()) {\n            this.dropdownItemInstance.highlighted = isOpen;\n        }\n    }\n\n    /**\n     * This method checks that a valid instance of McDropdown has been passed into\n     * mcDropdownTriggerFor. If not, an exception is thrown.\n     */\n    private check() {\n        if (!this.dropdown) {\n            throwMcDropdownMissingError();\n        }\n    }\n\n    /**\n     * This method creates the overlay from the provided dropdown's template and saves its\n     * OverlayRef so that it can be attached to the DOM when open is called.\n     */\n    private createOverlay(): OverlayRef {\n        if (!this.overlayRef) {\n            const config = this.getOverlayConfig();\n            this.subscribeToPositions(config.positionStrategy as FlexibleConnectedPositionStrategy);\n            this.overlayRef = this.overlay.create(config);\n\n            // Consume the `keydownEvents` in order to prevent them from going to another overlay.\n            // Ideally we'd also have our keyboard event logic in here, however doing so will\n            // break anybody that may have implemented the `McDropdownPanel` themselves.\n            this.overlayRef.keydownEvents()\n                .subscribe();\n        }\n\n        return this.overlayRef;\n    }\n\n    /**\n     * This method builds the configuration object needed to create the overlay, the OverlayState.\n     * @returns OverlayConfig\n     */\n    private getOverlayConfig(): OverlayConfig {\n        return new OverlayConfig({\n            positionStrategy: this.overlay.position()\n                .flexibleConnectedTo(this.elementRef)\n                .withLockedPosition()\n                .withTransformOriginOn('.mc-dropdown__panel'),\n            backdropClass: this.dropdown.backdropClass || 'cdk-overlay-transparent-backdrop',\n            scrollStrategy: this.scrollStrategy(),\n            direction: this.dir\n        });\n    }\n\n    /**\n     * Listens to changes in the position of the overlay and sets the correct classes\n     * on the dropdown based on the new position. This ensures the animation origin is always\n     * correct, even if a fallback position is used for the overlay.\n     */\n    private subscribeToPositions(position: FlexibleConnectedPositionStrategy): void {\n        if (this.dropdown.setPositionClasses) {\n            position.positionChanges\n                .subscribe((change) => {\n                    const posX: DropdownPositionX = change.connectionPair.overlayX === 'start' ? 'after' : 'before';\n                    const posY: DropdownPositionY = change.connectionPair.overlayY === 'top' ? 'below' : 'above';\n\n                    this.dropdown.setPositionClasses!(posX, posY);\n                });\n        }\n    }\n\n    /**\n     * Sets the appropriate positions on a position strategy\n     * so the overlay connects with the trigger correctly.\n     * @param positionStrategy Strategy whose position to update.\n     */\n    private setPosition(positionStrategy: FlexibleConnectedPositionStrategy) {\n        let [originX, originFallbackX, overlayX, overlayFallbackX]: HorizontalConnectionPos[] =\n            this.dropdown.xPosition === 'before' ?\n                ['end', 'start', 'end', 'start'] :\n                ['start', 'end', 'start', 'end'];\n\n        // tslint:disable-next-line:prefer-const\n        let [overlayY, overlayFallbackY, originY, originFallbackY]: VerticalConnectionPos[] =\n            this.dropdown.yPosition === 'above' ?\n                ['bottom', 'top', 'bottom', 'top'] :\n                ['top', 'bottom', 'top', 'bottom'];\n\n        let offsetY = 0;\n        let offsetX = 0;\n\n        if (this.isNested()) {\n            // When the dropdown is nested, it should always align itself\n            // to the edges of the trigger, instead of overlapping it.\n            overlayFallbackX = originX = this.dropdown.xPosition === 'before' ? 'start' : 'end';\n            originFallbackX = overlayX = originX === 'end' ? 'start' : 'end';\n            offsetY = overlayY === 'bottom' ? NESTED_PANEL_TOP_PADDING : -NESTED_PANEL_TOP_PADDING;\n            offsetX = NESTED_PANEL_LEFT_PADDING;\n        } else {\n            if (!this.dropdown.overlapTriggerY) {\n                originY = overlayY === 'top' ? 'bottom' : 'top';\n                originFallbackY = overlayFallbackY === 'top' ? 'bottom' : 'top';\n            }\n\n            if (!this.dropdown.overlapTriggerX) {\n                overlayFallbackX = originX = this.dropdown.xPosition === 'before' ? 'start' : 'end';\n                originFallbackX = overlayX = originX === 'end' ? 'start' : 'end';\n            }\n        }\n\n        positionStrategy.withPositions([\n            { originX, originY, overlayX, overlayY, offsetY, offsetX: -offsetX },\n            { originX: originFallbackX, originY, overlayX: overlayFallbackX, overlayY, offsetY, offsetX },\n            {\n                originX,\n                originY: originFallbackY,\n                overlayX,\n                overlayY: overlayFallbackY,\n                offsetY: -offsetY,\n                offsetX: -offsetX\n            },\n            {\n                originX: originFallbackX,\n                originY: originFallbackY,\n                overlayX: overlayFallbackX,\n                overlayY: overlayFallbackY,\n                offsetY: -offsetY,\n                offsetX: -offsetX\n            }\n        ]);\n    }\n\n    /** Cleans up the active subscriptions. */\n    private cleanUpSubscriptions(): void {\n        this.closeSubscription.unsubscribe();\n        this.hoverSubscription.unsubscribe();\n    }\n\n    /** Returns a stream that emits whenever an action that should close the dropdown occurs. */\n    private closingActions() {\n        const backdrop = this.overlayRef!.backdropClick();\n        const outsidePointerEvents = this.overlayRef!.outsidePointerEvents();\n        const detachments = this.overlayRef!.detachments();\n        const parentClose = this.parent ? this.parent.closed : observableOf();\n        const hover = this.parent ? this.parent.hovered()\n            .pipe(\n                filter((active) => active !== this.dropdownItemInstance),\n                filter(() => this._opened)\n            ) : observableOf();\n\n        return merge(\n            backdrop,\n            outsidePointerEvents,\n            parentClose as Observable<DropdownCloseReason>,\n            hover,\n            detachments\n        );\n    }\n\n    /** Handles the cases where the user hovers over the trigger. */\n    private handleHover() {\n        // Subscribe to changes in the hovered item in order to toggle the panel.\n        if (!this.isNested()) { return; }\n\n        this.hoverSubscription = this.parent.hovered()\n        // Since we might have multiple competing triggers for the same dropdown (e.g. a nested dropdown\n        // with different data and triggers), we have to delay it by a tick to ensure that\n        // it won't be closed immediately after it is opened.\n            .pipe(\n                filter((active) => active === this.dropdownItemInstance && !active.disabled),\n                delay(0, asapScheduler)\n            )\n            .subscribe(() => {\n                this.openedBy = 'mouse';\n\n                // If the same dropdown is used between multiple triggers, it might still be animating\n                // while the new trigger tries to re-open it. Wait for the animation to finish\n                // before doing so. Also interrupt if the user moves to another item.\n                if (this.dropdown instanceof McDropdown && this.dropdown.isAnimating) {\n                    // We need the `delay(0)` here in order to avoid\n                    // 'changed after checked' errors in some cases. See #12194.\n                    this.dropdown.animationDone\n                        .pipe(\n                            take(1),\n                            delay(0, asapScheduler),\n                            takeUntil(this.parent.hovered())\n                        )\n                        .subscribe(() => this.open());\n                } else {\n                    this.open();\n                }\n            });\n    }\n\n    /** Gets the portal that should be attached to the overlay. */\n    private getPortal(): TemplatePortal {\n        // Note that we can avoid this check by keeping the portal on the dropdown panel.\n        // While it would be cleaner, we'd have to introduce another required method on\n        // `McDropdownPanel`, making it harder to consume.\n        if (!this.portal || this.portal.templateRef !== this.dropdown.templateRef) {\n            this.portal = new TemplatePortal(this.dropdown.templateRef, this.viewContainerRef);\n        }\n\n        return this.portal;\n    }\n\n    private getWidth(): string {\n        const nativeElement = this.elementRef.nativeElement;\n\n        const { width, borderRightWidth, borderLeftWidth } = window.getComputedStyle(nativeElement);\n\n        return `${parseInt(width) - parseInt(borderRightWidth) - parseInt(borderLeftWidth)}px`;\n    }\n}\n","import { OverlayModule } from '@angular/cdk/overlay';\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { McIconModule } from '@ptsecurity/mosaic/icon';\n\nimport { McDropdownContent } from './dropdown-content.directive';\nimport { McDropdownItem } from './dropdown-item.component';\nimport { MC_DROPDOWN_SCROLL_STRATEGY_FACTORY_PROVIDER, McDropdownTrigger } from './dropdown-trigger.directive';\nimport { McDropdown } from './dropdown.component';\n\n\n@NgModule({\n    imports: [\n        CommonModule,\n        OverlayModule,\n        McIconModule\n    ],\n    exports: [\n        McDropdown,\n        McDropdownItem,\n        McDropdownTrigger,\n        McDropdownContent\n    ],\n    declarations: [\n        McDropdown,\n        McDropdownItem,\n        McDropdownTrigger,\n        McDropdownContent\n    ],\n    providers: [MC_DROPDOWN_SCROLL_STRATEGY_FACTORY_PROVIDER]\n})\nexport class McDropdownModule {}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"],"names":["i1","DOWN_ARROW","observableOf","i2.McDropdown","i3.McDropdownItem","i5"],"mappings":"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"}