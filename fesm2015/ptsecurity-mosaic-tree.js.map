{"version":3,"file":"ptsecurity-mosaic-tree.js","sources":["ng://@ptsecurity/mosaic/tree/node.directive.ts","ng://@ptsecurity/mosaic/tree/padding.directive.ts","ng://@ptsecurity/mosaic/tree/toggle.ts","ng://@ptsecurity/mosaic/tree/tree-option.component.ts","ng://@ptsecurity/mosaic/tree/tree-selection.component.ts","ng://@ptsecurity/mosaic/tree/tree.module.ts","ng://@ptsecurity/mosaic/tree/data-source/flat-data-source.ts","ng://@ptsecurity/mosaic/tree/data-source/nested-data-source.ts"],"sourcesContent":["import { Directive, Input } from '@angular/core';\nimport { CdkTreeNodeDef } from '@ptsecurity/cdk/tree';\n\n\n@Directive({\n    selector: '[mcTreeNodeDef]',\n    inputs: ['when: mcTreeNodeDefWhen'],\n    providers: [{ provide: CdkTreeNodeDef, useExisting: McTreeNodeDef }]\n})\nexport class McTreeNodeDef<T> extends CdkTreeNodeDef<T> {\n    @Input('mcTreeNode') data: T;\n}\n","import { Directive, Input, OnInit } from '@angular/core';\nimport { CdkTreeNodePadding } from '@ptsecurity/cdk/tree';\n\n\n@Directive({\n    selector: '[mcTreeNodePadding]',\n    providers: [{ provide: CdkTreeNodePadding, useExisting: McTreeNodePadding }]\n})\nexport class McTreeNodePadding<T> extends CdkTreeNodePadding<T> implements OnInit {\n    @Input('mcTreeNodePadding') level: number;\n\n    @Input('mcTreeNodePaddingIndent') indent: number;\n\n    baseLeftPadding: number = 12;\n    /* tslint:disable-next-line:naming-convention orthodox-getter-and-setter*/\n    _indent: number = 20;\n\n    withIcon: boolean;\n    iconWidth: number = 20;\n\n    get leftPadding(): number {\n        return (this.withIcon ? 0 : this.iconWidth) + this.baseLeftPadding;\n    }\n\n    paddingIndent(): string | null {\n        const nodeLevel = (this.treeNode.data && this.tree.treeControl.getLevel)\n            ? this.tree.treeControl.getLevel(this.treeNode.data)\n            : 0;\n\n        const level = this.level || nodeLevel;\n\n        return level > 0 ? `${(level * this._indent) + this.leftPadding}px` : `${this.leftPadding}px`;\n    }\n\n    ngOnInit(): void {\n        this.withIcon = this.tree.treeControl.isExpandable(this.treeNode.data);\n\n        this.setPadding();\n    }\n}\n","import { Component, Directive, Input, ViewEncapsulation } from '@angular/core';\nimport { CdkTree, CdkTreeNode } from '@ptsecurity/cdk/tree';\nimport { map } from 'rxjs/operators';\n\n\n@Component({\n    selector: 'mc-tree-node-toggle',\n    template: `\n        <i class=\"mc mc-icon mc-angle-down-S_16\"></i>\n    `,\n    host: {\n        class: 'mc-tree-node-toggle',\n        '[class.mc-opened]': 'iconState',\n        '[attr.disabled]': 'disabled || null',\n        '(click)': 'toggle($event)'\n    },\n    encapsulation: ViewEncapsulation.None\n})\nexport class McTreeNodeToggleComponent<T> {\n    disabled: boolean = false;\n\n    @Input() node: T;\n\n    @Input('cdkTreeNodeToggleRecursive')\n    get recursive(): boolean {\n        return this._recursive;\n    }\n\n    set recursive(value: boolean) {\n        this._recursive = value;\n    }\n\n    private _recursive = false;\n\n    get iconState(): any {\n        return this.disabled || this.tree.treeControl.isExpanded(this.node);\n    }\n\n    constructor(private tree: CdkTree<T>, private treeNode: CdkTreeNode<T>) {\n        this.tree.treeControl.filterValue\n            .pipe(map((value) => value.length > 0))\n            .subscribe((state: boolean) => this.disabled = state);\n    }\n\n    toggle(event: Event): void {\n        this.recursive\n            ? this.tree.treeControl.toggleDescendants(this.treeNode.data)\n            : this.tree.treeControl.toggle(this.treeNode.data);\n\n        event.stopPropagation();\n    }\n}\n\n@Directive({\n    selector: '[mcTreeNodeToggle]',\n    host: {\n        '[attr.disabled]': 'disabled || null',\n        '(click)': 'toggle($event)'\n    }\n})\nexport class McTreeNodeToggleDirective<T> {\n    disabled: boolean = false;\n\n    @Input('cdkTreeNodeToggleRecursive')\n    get recursive(): boolean {\n        return this._recursive;\n    }\n\n    set recursive(value: boolean) {\n        this._recursive = value;\n    }\n\n    private _recursive = false;\n\n    constructor(private tree: CdkTree<T>, private treeNode: CdkTreeNode<T>) {\n\n        this.tree.treeControl.filterValue\n            .pipe(map((value) => value.length > 0))\n            .subscribe((state: boolean) => this.disabled = state);\n    }\n\n    toggle(event: Event): void {\n        this.recursive\n            ? this.tree.treeControl.toggleDescendants(this.treeNode.data)\n            : this.tree.treeControl.toggle(this.treeNode.data);\n\n        event.stopPropagation();\n    }\n}\n","import { FocusOrigin } from '@angular/cdk/a11y';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport {\n    ChangeDetectorRef,\n    Component,\n    EventEmitter,\n    Input,\n    Output,\n    ElementRef,\n    Inject,\n    InjectionToken,\n    ChangeDetectionStrategy,\n    ViewEncapsulation,\n    AfterContentInit,\n    NgZone\n} from '@angular/core';\nimport { hasModifierKey } from '@ptsecurity/cdk/keycodes';\nimport { CdkTreeNode } from '@ptsecurity/cdk/tree';\nimport { CanDisable } from '@ptsecurity/mosaic/core';\nimport { Subject } from 'rxjs';\nimport { take } from 'rxjs/operators';\n\n\n// tslint:disable-next-line:naming-convention\nexport interface McTreeOptionEvent {\n    option: McTreeOption;\n}\n\n/**\n * Injection token used to provide the parent component to options.\n */\nexport const MC_TREE_OPTION_PARENT_COMPONENT = new InjectionToken<any>('MC_TREE_OPTION_PARENT_COMPONENT');\n\nexport class McTreeOptionChange {\n    constructor(public source: McTreeOption, public isUserInput = false) {}\n}\n\nlet uniqueIdCounter: number = 0;\n\n@Component({\n    selector: 'mc-tree-option',\n    exportAs: 'mcTreeOption',\n    templateUrl: './tree-option.html',\n    host: {\n        '[attr.id]': 'id',\n        '[attr.tabindex]': '-1',\n\n        '[attr.disabled]': 'disabled || null',\n\n        class: 'mc-tree-option',\n        '[class.mc-selected]': 'selected',\n        '[class.mc-focused]': 'hasFocus',\n\n        '(focus)': 'focus()',\n        '(blur)': 'blur()',\n\n        '(click)': 'selectViaInteraction($event)'\n    },\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n    providers: [{ provide: CdkTreeNode, useExisting: McTreeOption }]\n})\nexport class McTreeOption extends CdkTreeNode<McTreeOption> implements CanDisable, AfterContentInit {\n    readonly onFocus = new Subject<McTreeOptionEvent>();\n\n    readonly onBlur = new Subject<McTreeOptionEvent>();\n\n    get value(): any {\n        return this._value;\n    }\n\n    set value(value: any) {\n        this._value = value;\n    }\n\n    private _value: any;\n\n    @Input()\n    get disabled() {\n        return this._disabled || (this.tree && this.tree.disabled);\n    }\n\n    set disabled(value: any) {\n        const newValue = coerceBooleanProperty(value);\n\n        if (newValue !== this._disabled) {\n            this._disabled = newValue;\n        }\n    }\n\n    private _disabled: boolean = false;\n\n    @Input()\n    get showCheckbox() {\n        return this._showCheckbox !== undefined ? this._showCheckbox : this.tree.showCheckbox;\n    }\n\n    set showCheckbox(value: any) {\n        this._showCheckbox = coerceBooleanProperty(value);\n    }\n\n    private _showCheckbox: boolean;\n\n    @Output() readonly onSelectionChange = new EventEmitter<McTreeOptionChange>();\n\n    get selected(): boolean {\n        return this._selected;\n    }\n\n    set selected(value: boolean) {\n        const isSelected = coerceBooleanProperty(value);\n\n        if (isSelected !== this._selected) {\n            this.setSelected(isSelected);\n        }\n    }\n\n    private _selected: boolean = false;\n\n    get id(): string {\n        return this._id;\n    }\n\n    private _id = `mc-tree-option-${uniqueIdCounter++}`;\n\n    get multiple(): boolean {\n        return this.tree.multiple;\n    }\n\n    get viewValue(): string {\n        // TODO: Add input property alternative for node envs.\n        return (this.getHostElement().textContent || '').trim();\n    }\n\n    hasFocus: boolean = false;\n\n    constructor(\n        elementRef: ElementRef,\n        private changeDetectorRef: ChangeDetectorRef,\n        private ngZone: NgZone,\n        @Inject(MC_TREE_OPTION_PARENT_COMPONENT) public tree: any\n    ) {\n        super(elementRef, tree);\n    }\n\n    ngAfterContentInit(): void {\n        this.value = this.tree.treeControl.getValue(this.data);\n    }\n\n    toggle(): void {\n        this.selected = !this.selected;\n    }\n\n    setSelected(selected: boolean): void {\n        if (this._selected === selected || !this.tree.selectionModel) { return; }\n\n        this._selected = selected;\n\n        if (selected) {\n            this.tree.selectionModel.select(this.data);\n        } else {\n            this.tree.selectionModel.deselect(this.data);\n        }\n\n        this.changeDetectorRef.markForCheck();\n    }\n\n    focus(focusOrigin?: FocusOrigin) {\n        if (focusOrigin === 'program') { return; }\n\n        if (this.disabled || this.hasFocus) { return; }\n\n        this.elementRef.nativeElement.focus();\n\n        this.onFocus.next({ option: this });\n\n        Promise.resolve().then(() => {\n            this.hasFocus = true;\n\n            this.changeDetectorRef.markForCheck();\n        });\n    }\n\n    blur(): void {\n        // When animations are enabled, Angular may end up removing the option from the DOM a little\n        // earlier than usual, causing it to be blurred and throwing off the logic in the tree\n        // that moves focus not the next item. To work around the issue, we defer marking the option\n        // as not focused until the next time the zone stabilizes.\n        this.ngZone.onStable\n            .asObservable()\n            .pipe(take(1))\n            .subscribe(() => {\n                this.ngZone.run(() => {\n                    this.hasFocus = false;\n\n                    this.onBlur.next({ option: this });\n                });\n            });\n    }\n\n    getHeight(): number {\n        const clientRects = this.elementRef.nativeElement.getClientRects();\n\n        if (clientRects.length) {\n            return clientRects[0].height;\n        }\n\n        return 0;\n    }\n\n    select(): void {\n        if (!this._selected) {\n            this._selected = true;\n\n            this.changeDetectorRef.markForCheck();\n            this.emitSelectionChangeEvent();\n        }\n    }\n\n    deselect(): void {\n        if (this._selected) {\n            this._selected = false;\n\n            this.changeDetectorRef.markForCheck();\n        }\n    }\n\n    selectViaInteraction($event?: KeyboardEvent): void {\n        if (!this.disabled) {\n            this.changeDetectorRef.markForCheck();\n            this.emitSelectionChangeEvent(true);\n\n            const shiftKey = $event ? hasModifierKey($event, 'shiftKey') : false;\n            const ctrlKey = $event ? hasModifierKey($event, 'ctrlKey') : false;\n\n            this.tree.setSelectedOptionsByClick(this, shiftKey, ctrlKey);\n        }\n    }\n\n    emitSelectionChangeEvent(isUserInput = false): void {\n        this.onSelectionChange.emit(new McTreeOptionChange(this, isUserInput));\n    }\n\n    getHostElement(): HTMLElement {\n        return this.elementRef.nativeElement;\n    }\n\n    markForCheck() {\n        this.changeDetectorRef.markForCheck();\n    }\n}\n","/* tslint:disable:no-empty */\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { SelectionModel } from '@angular/cdk/collections';\nimport {\n    AfterContentInit,\n    Attribute,\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    ContentChildren,\n    ElementRef,\n    EventEmitter,\n    forwardRef,\n    Input,\n    IterableDiffer,\n    IterableDiffers,\n    Output,\n    QueryList,\n    ViewChild, ViewContainerRef,\n    ViewEncapsulation\n} from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { FocusKeyManager } from '@ptsecurity/cdk/a11y';\nimport {\n    hasModifierKey,\n    END,\n    ENTER,\n    HOME,\n    LEFT_ARROW,\n    PAGE_DOWN,\n    PAGE_UP,\n    RIGHT_ARROW,\n    SPACE,\n    DOWN_ARROW,\n    UP_ARROW\n} from '@ptsecurity/cdk/keycodes';\nimport { CdkTree, CdkTreeNodeOutlet, FlatTreeControl } from '@ptsecurity/cdk/tree';\nimport {\n    CanDisable,\n    getMcSelectNonArrayValueError,\n    HasTabIndex,\n    MultipleMode\n} from '@ptsecurity/mosaic/core';\nimport { merge, Observable, Subject, Subscription } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\n\nimport { MC_TREE_OPTION_PARENT_COMPONENT, McTreeOption, McTreeOptionEvent } from './tree-option.component';\n\n\nexport const MC_SELECTION_TREE_VALUE_ACCESSOR: any = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => McTreeSelection),\n    multi: true\n};\n\nexport class McTreeNavigationChange<T> {\n    constructor(public source: McTreeSelection<any>, public option: T) {}\n}\n\nexport class McTreeSelectionChange<T> {\n    constructor(public source: McTreeSelection<any>, public option: T) {}\n}\n\n// tslint:disable-next-line:naming-convention\ninterface SelectionModelOption {\n    id: number | string;\n    value: string;\n}\n\n\n@Component({\n    selector: 'mc-tree-selection',\n    exportAs: 'mcTreeSelection',\n    template: '<ng-container cdkTreeNodeOutlet></ng-container>',\n    styleUrls: ['./tree.scss'],\n    host: {\n        class: 'mc-tree-selection',\n\n        '[attr.tabindex]': 'tabIndex',\n        '[attr.disabled]': 'disabled || null',\n\n        '(blur)': 'blur()',\n        '(focus)': 'focus($event)',\n\n        '(keydown)': 'onKeyDown($event)',\n        '(window:resize)': 'updateScrollSize()'\n    },\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    providers: [\n        MC_SELECTION_TREE_VALUE_ACCESSOR,\n        { provide: MC_TREE_OPTION_PARENT_COMPONENT, useExisting: McTreeSelection },\n        { provide: CdkTree, useExisting: McTreeSelection }\n    ]\n})\nexport class McTreeSelection<T extends McTreeOption> extends CdkTree<T>\n    implements ControlValueAccessor, AfterContentInit, CanDisable, HasTabIndex {\n\n    @ViewChild(CdkTreeNodeOutlet, { static: true }) nodeOutlet: CdkTreeNodeOutlet;\n\n    @ContentChildren(McTreeOption) unorderedOptions: QueryList<T>;\n\n    renderedOptions = new QueryList<T>();\n\n    keyManager: FocusKeyManager<T>;\n\n    selectionModel: SelectionModel<SelectionModelOption>;\n\n    resetFocusedItemOnBlur: boolean = true;\n\n    @Input() treeControl: FlatTreeControl<T>;\n\n    @Output() readonly navigationChange = new EventEmitter<McTreeNavigationChange<T>>();\n\n    @Output() readonly selectionChange = new EventEmitter<McTreeSelectionChange<T>>();\n\n    multipleMode: MultipleMode | null = null;\n\n    userTabIndex: number | null = null;\n\n    private sortedNodes: T[] = [];\n\n    @Input()\n    get autoSelect(): boolean {\n        return this._autoSelect;\n    }\n\n    set autoSelect(value: boolean) {\n        this._autoSelect = coerceBooleanProperty(value);\n    }\n\n    private _autoSelect: boolean = true;\n\n    get optionFocusChanges(): Observable<McTreeOptionEvent> {\n        return merge(...this.renderedOptions.map((option) => option.onFocus));\n    }\n\n    get optionBlurChanges(): Observable<McTreeOptionEvent> {\n        return merge(...this.renderedOptions.map((option) => option.onBlur));\n    }\n\n    get multiple(): boolean {\n        return !!this.multipleMode;\n    }\n\n    @Input()\n    get noUnselectLast(): boolean {\n        return this._noUnselectLast;\n    }\n\n    set noUnselectLast(value: boolean) {\n        this._noUnselectLast = coerceBooleanProperty(value);\n    }\n\n    private _noUnselectLast: boolean = true;\n\n    @Input()\n    get disabled(): boolean {\n        return this._disabled;\n    }\n\n    set disabled(rawValue: boolean) {\n        const value = coerceBooleanProperty(rawValue);\n\n        if (this._disabled !== value) {\n            this._disabled = value;\n\n            this.markOptionsForCheck();\n        }\n    }\n\n    private _disabled: boolean = false;\n\n    @Input()\n    get tabIndex(): any {\n        return this.disabled ? -1 : this._tabIndex;\n    }\n\n    set tabIndex(value: any) {\n        this._tabIndex = value;\n        this.userTabIndex = value;\n    }\n\n    private _tabIndex = 0;\n\n    get showCheckbox(): boolean {\n        return this.multipleMode === MultipleMode.CHECKBOX;\n    }\n\n    private readonly destroy = new Subject<void>();\n\n    private optionFocusSubscription: Subscription | null;\n\n    private optionBlurSubscription: Subscription | null;\n\n    constructor(\n        private elementRef: ElementRef,\n        differs: IterableDiffers,\n        changeDetectorRef: ChangeDetectorRef,\n        @Attribute('multiple') multiple: MultipleMode\n    ) {\n        super(differs, changeDetectorRef);\n\n        if (multiple === MultipleMode.CHECKBOX || multiple === MultipleMode.KEYBOARD) {\n            this.multipleMode = multiple;\n        } else if (multiple !== null) {\n            this.multipleMode = MultipleMode.CHECKBOX;\n        }\n\n        if (this.multipleMode === MultipleMode.CHECKBOX) {\n            this.autoSelect = false;\n            this.noUnselectLast = false;\n        }\n\n        this.selectionModel = new SelectionModel<SelectionModelOption>(this.multiple);\n    }\n\n    ngAfterContentInit(): void {\n        this.unorderedOptions.changes.subscribe(this.updateRenderedOptions);\n\n        this.keyManager = new FocusKeyManager<T>(this.renderedOptions)\n            .withVerticalOrientation(true)\n            .withHorizontalOrientation(null);\n\n        this.keyManager.change\n            .pipe(takeUntil(this.destroy))\n            .subscribe(() => {\n                if (this.keyManager.activeItem) {\n                    this.emitNavigationEvent(this.keyManager.activeItem);\n\n                    // todo need check this logic\n                    if (this.autoSelect && !this.keyManager.activeItem.disabled) {\n                        this.updateOptionsFocus();\n                    }\n                }\n            });\n\n        this.keyManager.tabOut\n            .pipe(takeUntil(this.destroy))\n            .subscribe(() => this.allowFocusEscape());\n\n        this.selectionModel.changed\n            .pipe(takeUntil(this.destroy))\n            .subscribe(() => {\n                this.onChange(this.getSelectedValues());\n\n                this.renderedOptions.notifyOnChanges();\n            });\n\n        this.renderedOptions.changes\n            .pipe(takeUntil(this.destroy))\n            .subscribe((options) => {\n                this.resetOptions();\n\n                // Check to see if we need to update our tab index\n                this.updateTabIndex();\n\n                // todo need to do optimisation\n                options.forEach((option) => {\n                    option.deselect();\n\n                    this.getSelectedValues().forEach((selectedValue) => {\n                        if (option.value === selectedValue) {\n                            option.select();\n                        }\n                    });\n                });\n            });\n    }\n\n    ngOnDestroy(): void {\n        this.destroy.next();\n        this.destroy.complete();\n    }\n\n    focus($event): void {\n        if (this.renderedOptions.length === 0 || this.isFocusReceivedFromNestedOption($event)) { return; }\n\n        this.keyManager.setFirstItemActive();\n    }\n\n    blur() {\n        if (!this.hasFocusedOption() && this.resetFocusedItemOnBlur) {\n            this.keyManager.setActiveItem(-1);\n        }\n\n        this.onTouched();\n        this.changeDetectorRef.markForCheck();\n    }\n\n    onKeyDown(event: KeyboardEvent): void {\n        this.keyManager.setFocusOrigin('keyboard');\n        // tslint:disable-next-line: deprecation\n        const keyCode = event.keyCode;\n\n        switch (keyCode) {\n            case DOWN_ARROW:\n                this.keyManager.setNextItemActive();\n\n                break;\n            case UP_ARROW:\n                this.keyManager.setPreviousItemActive();\n\n                break;\n            case LEFT_ARROW:\n                if (this.keyManager.activeItem) {\n                    this.treeControl.collapse(this.keyManager.activeItem.data as T);\n                }\n\n                event.preventDefault();\n\n                return;\n            case RIGHT_ARROW:\n                if (this.keyManager.activeItem) {\n                    this.treeControl.expand(this.keyManager.activeItem.data as T);\n                }\n\n                event.preventDefault();\n\n                return;\n            case SPACE:\n            case ENTER:\n                this.toggleFocusedOption();\n                event.preventDefault();\n\n                break;\n            case HOME:\n                this.keyManager.setFirstItemActive();\n                event.preventDefault();\n\n                break;\n            case END:\n                this.keyManager.setLastItemActive();\n                event.preventDefault();\n\n                break;\n            case PAGE_UP:\n                this.keyManager.setPreviousPageItemActive();\n                event.preventDefault();\n\n                break;\n            case PAGE_DOWN:\n                this.keyManager.setNextPageItemActive();\n                event.preventDefault();\n\n                break;\n            default:\n                return;\n        }\n\n        if (this.keyManager.activeItem) {\n            this.setSelectedOptionsByKey(\n                this.keyManager.activeItem, hasModifierKey(event, 'shiftKey'), hasModifierKey(event, 'ctrlKey')\n            );\n        }\n    }\n\n    updateScrollSize(): void {\n        if (!this.renderedOptions.first) { return; }\n\n        this.keyManager.withScrollSize(Math.floor(this.getHeight() / this.renderedOptions.first.getHeight()));\n    }\n\n    setSelectedOptionsByKey(option: T, shiftKey: boolean, ctrlKey: boolean): void {\n        if (shiftKey && this.multiple) {\n            this.setSelectedOptions(option);\n        } else if (ctrlKey) {\n            if (!this.canDeselectLast(option)) { return; }\n        } else if (this.autoSelect) {\n            this.selectionModel.clear();\n            this.selectionModel.toggle(option.data);\n        }\n\n        this.emitChangeEvent(option);\n    }\n\n    setSelectedOptionsByClick(option: T, shiftKey: boolean, ctrlKey: boolean): void {\n        if (!shiftKey && !ctrlKey) {\n            this.keyManager.setActiveItem(option);\n        }\n\n        if (shiftKey && this.multiple) {\n            this.setSelectedOptions(option);\n        } else if (ctrlKey) {\n            if (!this.canDeselectLast(option)) { return; }\n\n            this.selectionModel.toggle(option.data);\n        } else if (this.autoSelect) {\n            this.selectionModel.clear();\n            this.selectionModel.toggle(option.data);\n        } else {\n            this.selectionModel.toggle(option.data);\n        }\n\n        this.emitChangeEvent(option);\n    }\n\n    setSelectedOptions(option: T): void {\n        const selectedOptionState = option.selected;\n\n        let fromIndex = this.keyManager.previousActiveItemIndex;\n        let toIndex = this.keyManager.previousActiveItemIndex = this.keyManager.activeItemIndex;\n\n        if (toIndex === fromIndex) { return; }\n\n        if (fromIndex > toIndex) {\n            [fromIndex, toIndex] = [toIndex, fromIndex];\n        }\n\n        this.renderedOptions\n            .toArray()\n            .slice(fromIndex, toIndex + 1)\n            .filter((item) => !item.disabled)\n            .forEach((renderedOption) => {\n                const isLastRenderedOption = renderedOption === this.keyManager.activeItem;\n\n                if (isLastRenderedOption && renderedOption.selected && this.noUnselectLast) { return; }\n\n                renderedOption.setSelected(!selectedOptionState);\n            });\n    }\n\n    setFocusedOption(option: T): void {\n        this.keyManager.setActiveItem(option);\n    }\n\n    toggleFocusedOption(): void {\n        const focusedOption = this.keyManager.activeItem;\n\n        if (focusedOption && (!focusedOption.selected || this.canDeselectLast(focusedOption))) {\n            focusedOption.toggle();\n            this.emitChangeEvent(focusedOption);\n        }\n    }\n\n    renderNodeChanges(\n        data: T[],\n        dataDiffer: IterableDiffer<T> = this.dataDiffer,\n        viewContainer: ViewContainerRef = this.nodeOutlet.viewContainer,\n        parentData?: T\n    ): void {\n        super.renderNodeChanges(data, dataDiffer, viewContainer, parentData);\n\n        this.sortedNodes = this.getSortedNodes(viewContainer);\n\n        this.updateScrollSize();\n\n        this.nodeOutlet.changeDetectorRef.detectChanges();\n    }\n\n    getHeight(): number {\n        const clientRects = this.elementRef.nativeElement.getClientRects();\n\n        if (clientRects.length) {\n            return clientRects[0].height;\n        }\n\n        return 0;\n    }\n\n    getItemHeight(): number {\n        return this.renderedOptions.first ? this.renderedOptions.first.getHeight() : 0;\n    }\n\n    emitNavigationEvent(option: T): void {\n        this.navigationChange.emit(new McTreeNavigationChange(this, option));\n    }\n\n    emitChangeEvent(option: T): void {\n        this.selectionChange.emit(new McTreeNavigationChange(this, option));\n    }\n\n    writeValue(value: any): void {\n        if (this.multiple && value && !Array.isArray(value)) {\n            throw getMcSelectNonArrayValueError();\n        }\n\n        if (this.renderedOptions.length) {\n            this.setOptionsFromValues(this.multiple ? value : [value]);\n        }\n    }\n\n    /** `View -> model callback called when value changes` */\n    onChange: (value: any) => void = () => {};\n\n    registerOnChange(fn: (value: any) => void): void {\n        this.onChange = fn;\n    }\n\n    /** `View -> model callback called when select has been touched` */\n    onTouched = () => {};\n\n    registerOnTouched(fn: () => {}): void {\n        this.onTouched = fn;\n    }\n\n    /**\n     * Sets the disabled state of the control. Implemented as a part of ControlValueAccessor.\n     */\n    setDisabledState(isDisabled: boolean): void {\n        this._disabled = isDisabled;\n        this.changeDetectorRef.markForCheck();\n    }\n\n    setOptionsFromValues(values: any[]): void {\n        this.selectionModel.clear();\n\n        const valuesToSelect = values.reduce((result, value) => {\n            return this.treeControl.hasValue(value) ? [...result, this.treeControl.hasValue(value)] : [...result];\n        }, []);\n\n        this.selectionModel.select(...valuesToSelect);\n    }\n\n    getSelectedValues(): any[] {\n        return this.selectionModel.selected.map((selected) => this.treeControl.getValue(selected));\n    }\n\n    protected updateTabIndex(): void {\n        this._tabIndex = this.renderedOptions.length === 0 ? -1 : 0;\n    }\n\n    private updateRenderedOptions = () => {\n        const orderedOptions: T[] = [];\n\n        this.sortedNodes.forEach((node) => {\n            const found = this.unorderedOptions.find((option) => option.value === this.treeControl.getValue(node));\n\n            if (found) {\n                orderedOptions.push(found);\n            }\n        });\n\n        this.renderedOptions.reset(orderedOptions);\n        this.renderedOptions.notifyOnChanges();\n    }\n\n    private getSortedNodes(viewContainer: ViewContainerRef) {\n        const array: T[] = [];\n\n        for (let i = 0; i < viewContainer.length; i++) {\n            const viewRef = viewContainer.get(i) as any;\n\n            array.push(viewRef.context.$implicit);\n        }\n\n        return array;\n    }\n\n    private allowFocusEscape() {\n        if (this._tabIndex !== -1) {\n            this._tabIndex = -1;\n\n            setTimeout(() => {\n                this._tabIndex = this.userTabIndex || 0;\n                this.changeDetectorRef.markForCheck();\n            });\n        }\n    }\n\n    private resetOptions() {\n        this.dropSubscriptions();\n        this.listenToOptionsFocus();\n    }\n\n    private dropSubscriptions() {\n        if (this.optionFocusSubscription) {\n            this.optionFocusSubscription.unsubscribe();\n            this.optionFocusSubscription = null;\n        }\n\n        if (this.optionBlurSubscription) {\n            this.optionBlurSubscription.unsubscribe();\n            this.optionBlurSubscription = null;\n        }\n    }\n\n    private listenToOptionsFocus(): void {\n        this.optionFocusSubscription = this.optionFocusChanges\n            .subscribe((event) => {\n                const index: number = this.renderedOptions.toArray().indexOf(event.option as T);\n\n                this.renderedOptions\n                    .filter((option) => option.hasFocus)\n                    .forEach((option) => option.hasFocus = false);\n\n                if (this.isValidIndex(index)) {\n                    this.keyManager.updateActiveItem(index);\n                }\n            });\n\n        this.optionBlurSubscription = this.optionBlurChanges\n            .subscribe(() => this.blur());\n    }\n\n    /**\n     * Utility to ensure all indexes are valid.\n     * @param index The index to be checked.\n     * @returns True if the index is valid for our list of options.\n     */\n    private isValidIndex(index: number): boolean {\n        return index >= 0 && index < this.renderedOptions.length;\n    }\n\n    /** Checks whether any of the options is focused. */\n    private hasFocusedOption() {\n        return this.renderedOptions.some((option) => option.hasFocus);\n    }\n\n    private markOptionsForCheck() {\n        if (this.renderedOptions.length) {\n            this.renderedOptions.forEach((option) => option.markForCheck());\n        }\n    }\n\n    private updateOptionsFocus() {\n        this.renderedOptions\n            .filter((option) => option.hasFocus)\n            .forEach((option) => option.hasFocus = false);\n    }\n\n    private canDeselectLast(option: McTreeOption): boolean {\n        return !(this.noUnselectLast && this.selectionModel.selected.length === 1 && option.selected);\n    }\n\n    private isFocusReceivedFromNestedOption($event: FocusEvent) {\n        if (!$event || !$event.relatedTarget) { return false; }\n\n        return ($event.relatedTarget as HTMLElement).classList.contains('mc-tree-option');\n    }\n}\n\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { CdkTreeModule } from '@ptsecurity/cdk/tree';\nimport { McPseudoCheckboxModule } from '@ptsecurity/mosaic/core';\n\nimport { McTreeNodeDef } from './node.directive';\nimport { McTreeNodePadding } from './padding.directive';\nimport { McTreeNodeToggleDirective, McTreeNodeToggleComponent } from './toggle';\nimport { McTreeOption } from './tree-option.component';\nimport { McTreeSelection } from './tree-selection.component';\n\n\nconst MC_TREE_DIRECTIVES = [\n    McTreeSelection,\n    McTreeOption,\n    McTreeNodeDef,\n    McTreeNodePadding,\n    McTreeNodeToggleComponent,\n    McTreeNodeToggleDirective\n];\n\n@NgModule({\n    imports: [CommonModule, CdkTreeModule, McPseudoCheckboxModule],\n    exports: MC_TREE_DIRECTIVES,\n    declarations: MC_TREE_DIRECTIVES\n})\nexport class McTreeModule {}\n","import { CollectionViewer, DataSource } from '@angular/cdk/collections';\nimport { FlatTreeControl, TreeControl } from '@ptsecurity/cdk/tree';\nimport { BehaviorSubject, merge, Observable } from 'rxjs';\nimport { map, take } from 'rxjs/operators';\n\n\n/**\n * Tree flattener to convert a normal type of node to node with children & level information.\n * Transform nested nodes of type `T` to flattened nodes of type `F`.\n *\n * For example, the input data of type `T` is nested, and contains its children data:\n *   SomeNode: {\n *     key: 'Fruits',\n *     children: [\n *       NodeOne: {\n *         key: 'Apple',\n *       },\n *       NodeTwo: {\n *        key: 'Pear',\n *      }\n *    ]\n *  }\n *  After flattener flatten the tree, the structure will become\n *  SomeNode: {\n *    key: 'Fruits',\n *    expandable: true,\n *    level: 1\n *  },\n *  NodeOne: {\n *    key: 'Apple',\n *    expandable: false,\n *    level: 2\n *  },\n *  NodeTwo: {\n *   key: 'Pear',\n *   expandable: false,\n *   level: 2\n * }\n * and the output flattened type is `F` with additional information.\n */\nexport class McTreeFlattener<T, F> {\n    constructor(\n        public transformFunction: (node: T, level: number, parent: F | null) => F,\n        public getLevel: (node: F) => number,\n        public isExpandable: (node: F) => boolean,\n        public getChildren: (node: T) => Observable<T[]> | T[] | undefined | null\n    ) {}\n\n    flattenNode(node: T, level: number, resultNodes: F[], parent: F | null): F[] {\n        const flatNode = this.transformFunction(node, level, parent);\n        resultNodes.push(flatNode);\n\n        if (this.isExpandable(flatNode)) {\n            const childrenNodes = this.getChildren(node);\n\n            if (childrenNodes) {\n                if (Array.isArray(childrenNodes)) {\n                    this.flattenChildren(childrenNodes, level, resultNodes, flatNode);\n                } else {\n                    childrenNodes\n                        .pipe(take(1))\n                        .subscribe((children) => {\n                            this.flattenChildren(children, level, resultNodes, flatNode);\n                        });\n                }\n            }\n        }\n\n        return resultNodes;\n    }\n\n    flattenChildren(children: T[], level: number, resultNodes: F[], parent: F | null): void {\n        children.forEach((child) => {\n            this.flattenNode(child, level + 1, resultNodes, parent);\n        });\n    }\n\n    /**\n     * Flatten a list of node type T to flattened version of node F.\n     * Please note that type T may be nested, and the length of `structuredData` may be different\n     * from that of returned list `F[]`.\n     */\n    flattenNodes(structuredData: T[]): F[] {\n        const resultNodes: F[] = [];\n        structuredData.forEach((node) => this.flattenNode(node, 0, resultNodes, null));\n\n        return resultNodes;\n    }\n\n    /**\n     * Expand flattened node with current expansion status.\n     * The returned list may have different length.\n     */\n    expandFlattenedNodes(nodes: F[], treeControl: TreeControl<F>): F[] {\n        const results: F[] = [];\n        const currentExpand: boolean[] = [];\n        currentExpand[0] = true;\n\n        nodes.forEach((node) => {\n            let expand = true;\n            for (let i = 0; i <= this.getLevel(node); i++) {\n                expand = expand && currentExpand[i];\n            }\n\n            if (expand) { results.push(node); }\n\n            if (this.isExpandable(node)) {\n                currentExpand[this.getLevel(node) + 1] = treeControl.isExpanded(node);\n            }\n        });\n\n        return results;\n    }\n}\n\nenum McTreeDataSourceChangeTypes {\n    Expansion = 'expansion',\n    Filter = 'filter'\n}\n\n/**\n * Data source for flat tree.\n * The data source need to handle expansion/collapsion of the tree node and change the data feed\n * to `McTree`.\n * The nested tree nodes of type `T` are flattened through `MсTreeFlattener`, and converted\n * to type `F` for `McTree` to consume.\n */\nexport class McTreeFlatDataSource<T, F> extends DataSource<F> {\n    flattenedData = new BehaviorSubject<F[]>([]);\n\n    expandedData = new BehaviorSubject<F[]>([]);\n\n    filteredData = new BehaviorSubject<F[]>([]);\n\n    get data() {\n        return this._data.value;\n    }\n\n    set data(value: T[]) {\n        this._data.next(value);\n\n        this.flattenedData.next(this.treeFlattener.flattenNodes(this.data));\n        this.treeControl.dataNodes = this.flattenedData.value;\n    }\n\n    private _data: BehaviorSubject<T[]>;\n\n    constructor(\n        private treeControl: FlatTreeControl<F>,\n        private treeFlattener: McTreeFlattener<T, F>,\n        initialData: T[] = []\n    ) {\n        super();\n\n        this._data = new BehaviorSubject<T[]>(initialData);\n    }\n\n    connect(collectionViewer: CollectionViewer): Observable<F[]> {\n        return merge(\n            collectionViewer.viewChange,\n            this.treeControl.expansionModel.changed\n                .pipe(map((value) => ({ type: McTreeDataSourceChangeTypes.Expansion, value }))),\n            this.treeControl.filterValue\n                .pipe(map((value) => ({ type: McTreeDataSourceChangeTypes.Filter, value }))),\n            this.flattenedData\n        )\n        .pipe(map((changeObj: any): any => {\n            if (changeObj.type === McTreeDataSourceChangeTypes.Filter) {\n                if (changeObj.value && changeObj.value.length > 0) {\n                    return this.filterHandler();\n                } else {\n                    return this.expansionHandler();\n                }\n            }\n\n            return this.expansionHandler();\n        }));\n    }\n\n    filterHandler(): F[] {\n        this.filteredData.next(this.treeControl.filterModel.selected);\n\n        return this.filteredData.value;\n    }\n\n    expansionHandler(): F[] {\n        const expandedNodes = this.treeFlattener.expandFlattenedNodes(this.flattenedData.value, this.treeControl);\n        this.expandedData.next(expandedNodes);\n\n        return this.expandedData.value;\n    }\n\n    disconnect() {\n        // no op\n    }\n}\n\n","import { CollectionViewer, DataSource } from '@angular/cdk/collections';\nimport { BehaviorSubject, merge, Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\n\n/**\n * Data source for nested tree.\n *\n * The data source for nested tree doesn't have to consider node flattener, or the way to expand\n * or collapse. The expansion/collapsion will be handled by TreeControl and each non-leaf node.\n */\nexport class McTreeNestedDataSource<T> extends DataSource<T> {\n\n    get data() {\n        return this._data.value;\n    }\n\n    set data(value: T[]) {\n        this._data.next(value);\n    }\n\n    /* tslint:disable-next-line:naming-convention */\n    private _data = new BehaviorSubject<T[]>([]);\n\n    connect(collectionViewer: CollectionViewer): Observable<T[]> {\n        return merge(...[collectionViewer.viewChange, this._data])\n            .pipe(map(() => this.data));\n    }\n\n    disconnect() {\n        // no op\n    }\n}\n\n"],"names":[],"mappings":"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"}