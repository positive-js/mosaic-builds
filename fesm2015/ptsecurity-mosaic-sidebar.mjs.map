{"version":3,"file":"ptsecurity-mosaic-sidebar.mjs","sources":["../../../packages/mosaic/sidebar/sidebar-animations.ts","../../../packages/mosaic/sidebar/sidebar.component.ts","../../../packages/mosaic/sidebar/sidebar.component.html","../../../packages/mosaic/sidebar/sidebar.module.ts","../../../packages/mosaic/sidebar/ptsecurity-mosaic-sidebar.ts"],"sourcesContent":["import { animate, AnimationTriggerMetadata, state, style, transition, trigger } from '@angular/animations';\n\n\nexport enum McSidebarAnimationState {\n    Opened = 'opened',\n    Closed = 'closed'\n}\n\nexport const mcSidebarAnimations: { readonly sidebarState: AnimationTriggerMetadata } = {\n    sidebarState: trigger('state', [\n        state(\n            'opened',\n            style({\n                minWidth: '{{ openedStateMinWidth }}',\n                width: '{{ openedStateWidth }}',\n                maxWidth: '{{ openedStateMaxWidth }}'\n            }),\n            { params: { openedStateMinWidth: '', openedStateWidth: '', openedStateMaxWidth: '' }}\n        ),\n        state(\n            'closed',\n            style({\n                minWidth: '{{ closedStateWidth }}',\n                width: '{{ closedStateWidth }}',\n                maxWidth: '{{ closedStateWidth }}'\n            }),\n            { params: { closedStateWidth: '' }}\n        ),\n        transition('opened => closed', [animate('0.1s')]),\n        transition('closed => opened', [animate('0.2s')])\n    ])\n};\n","import {\n    AfterContentInit,\n    ChangeDetectionStrategy,\n    Component,\n    ContentChild,\n    Directive, ElementRef,\n    EventEmitter,\n    Input,\n    NgZone,\n    OnDestroy, OnInit,\n    Output,\n    ViewEncapsulation\n} from '@angular/core';\nimport { isControl, isInput, isLeftBracket, isRightBracket } from '@ptsecurity/cdk/keycodes';\n\nimport { mcSidebarAnimations, McSidebarAnimationState } from './sidebar-animations';\n\n\nexport enum SidebarPositions {\n    Left = 'left',\n    Right = 'right'\n}\n\n// tslint:disable-next-line:naming-convention\ninterface McSidebarParams {\n    openedStateMinWidth: string;\n    openedStateWidth: string;\n    openedStateMaxWidth: string;\n\n    closedStateWidth: string;\n}\n\n\n@Directive({\n    selector: '[mc-sidebar-opened]',\n    exportAs: 'mcSidebarOpened'\n})\nexport class McSidebarOpened {\n    @Input() minWidth: string;\n    @Input() width: string;\n    @Input() maxWidth: string;\n}\n\n@Directive({\n    selector: '[mc-sidebar-closed]',\n    exportAs: 'mcSidebarClosed'\n})\nexport class McSidebarClosed {\n    @Input() width: string;\n}\n\n\n@Component({\n    selector: 'mc-sidebar',\n    exportAs: 'mcSidebar',\n    templateUrl: 'sidebar.component.html',\n    styleUrls: ['./sidebar.scss'],\n    host: {\n        class: 'mc-sidebar',\n        '[@state]': `{\n            value: animationState,\n            params: params\n        }`,\n        '(@state.start)': 'onAnimationStart()',\n        '(@state.done)': 'onAnimationDone()'\n    },\n    animations: [mcSidebarAnimations.sidebarState],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class McSidebar implements OnDestroy, OnInit, AfterContentInit {\n    @Input()\n    get opened(): boolean {\n        return this._opened;\n    }\n\n    set opened(value: boolean) {\n        if (this._opened) {\n            this.saveWidth();\n        }\n\n        this._opened = value;\n    }\n    private _opened: boolean = true;\n\n    @Input() position: SidebarPositions;\n\n    params: McSidebarParams = {\n        openedStateWidth: 'inherit',\n        openedStateMinWidth: 'inherit',\n        openedStateMaxWidth: 'inherit',\n\n        closedStateWidth: '32px'\n    };\n\n    @Output() readonly stateChanged: EventEmitter<boolean> = new EventEmitter<boolean>();\n\n    @ContentChild(McSidebarOpened, { static: false }) openedContent: McSidebarOpened;\n\n    @ContentChild(McSidebarClosed, { static: false }) closedContent: McSidebarClosed;\n\n    get animationState(): McSidebarAnimationState {\n        return this._opened ? McSidebarAnimationState.Opened : McSidebarAnimationState.Closed;\n    }\n\n    internalState: boolean = true;\n\n    private documentKeydownListener: (event: KeyboardEvent) => void;\n\n    constructor(private ngZone: NgZone, private elementRef: ElementRef) {}\n\n    ngOnInit(): void {\n        if (this.position === SidebarPositions.Left || this.position === SidebarPositions.Right) {\n            this.registerKeydownListener();\n        }\n    }\n\n    ngOnDestroy(): void {\n        if (this.position === SidebarPositions.Left || this.position === SidebarPositions.Right) {\n            this.unRegisterKeydownListener();\n        }\n    }\n\n    toggle(): void {\n        this.opened = !this.opened;\n    }\n\n    onAnimationStart() {\n        if (this._opened) {\n            this.internalState = this._opened;\n        }\n    }\n\n    onAnimationDone() {\n        this.internalState = this._opened;\n\n        this.stateChanged.emit(this._opened);\n    }\n\n    ngAfterContentInit(): void {\n        this.params = {\n            openedStateWidth: this.openedContent.width || 'inherit',\n            openedStateMinWidth: this.openedContent.minWidth || 'inherit',\n            openedStateMaxWidth: this.openedContent.maxWidth || 'inherit',\n\n            closedStateWidth: this.closedContent.width || '32px'\n        };\n    }\n\n    private registerKeydownListener(): void {\n        this.documentKeydownListener = (event) => {\n            if (isControl(event) || isInput(event)) { return; }\n\n            if (\n                (this.position === SidebarPositions.Left && isLeftBracket(event)) ||\n                (this.position === SidebarPositions.Right && isRightBracket(event))\n            ) {\n                this.ngZone.run(() => this._opened = !this._opened);\n            }\n        };\n\n        this.ngZone.runOutsideAngular(() => {\n            // tslint:disable-next-line: no-unbound-method\n            document.addEventListener('keypress', this.documentKeydownListener, true);\n        });\n    }\n\n    private unRegisterKeydownListener(): void {\n        // tslint:disable-next-line: no-unbound-method\n        document.removeEventListener('keypress', this.documentKeydownListener, true);\n    }\n\n    private saveWidth() {\n        this.params.openedStateWidth = `${this.elementRef.nativeElement.offsetWidth}px`;\n    }\n}\n","<ng-container [ngSwitch]=\"internalState\">\n    <ng-container *ngSwitchCase=\"true\">\n        <ng-content select=\"[mc-sidebar-opened]\"></ng-content>\n    </ng-container>\n\n    <ng-container *ngSwitchCase=\"false\">\n        <ng-content select=\"[mc-sidebar-closed]\"></ng-content>\n    </ng-container>\n</ng-container>\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { McSidebar, McSidebarClosed, McSidebarOpened } from './sidebar.component';\n\n\n@NgModule({\n    imports: [CommonModule],\n    declarations: [\n        McSidebarClosed,\n        McSidebarOpened,\n        McSidebar\n    ],\n    exports: [\n        McSidebarClosed,\n        McSidebarOpened,\n        McSidebar\n    ]\n})\nexport class McSidebarModule {}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"],"names":[],"mappings":";;;;;;;AAGA,IAAY,uBAGX,CAAA;AAHD,CAAA,UAAY,uBAAuB,EAAA;AAC/B,IAAA,uBAAA,CAAA,QAAA,CAAA,GAAA,QAAiB,CAAA;AACjB,IAAA,uBAAA,CAAA,QAAA,CAAA,GAAA,QAAiB,CAAA;AACrB,CAAC,EAHW,uBAAuB,KAAvB,uBAAuB,GAGlC,EAAA,CAAA,CAAA,CAAA;AAEM,MAAM,mBAAmB,GAAwD;AACpF,IAAA,YAAY,EAAE,OAAO,CAAC,OAAO,EAAE;AAC3B,QAAA,KAAK,CACD,QAAQ,EACR,KAAK,CAAC;AACF,YAAA,QAAQ,EAAE,2BAA2B;AACrC,YAAA,KAAK,EAAE,wBAAwB;AAC/B,YAAA,QAAQ,EAAE,2BAA2B;AACxC,SAAA,CAAC,EACF,EAAE,MAAM,EAAE,EAAE,mBAAmB,EAAE,EAAE,EAAE,gBAAgB,EAAE,EAAE,EAAE,mBAAmB,EAAE,EAAE,EAAE,EAAC,CACxF;AACD,QAAA,KAAK,CACD,QAAQ,EACR,KAAK,CAAC;AACF,YAAA,QAAQ,EAAE,wBAAwB;AAClC,YAAA,KAAK,EAAE,wBAAwB;AAC/B,YAAA,QAAQ,EAAE,wBAAwB;SACrC,CAAC,EACF,EAAE,MAAM,EAAE,EAAE,gBAAgB,EAAE,EAAE,EAAE,EAAC,CACtC;QACD,UAAU,CAAC,kBAAkB,EAAE,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC;QACjD,UAAU,CAAC,kBAAkB,EAAE,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC;KACpD,CAAC;CACL;;ACbW,IAAA,iBAGX;AAHD,CAAA,UAAY,gBAAgB,EAAA;AACxB,IAAA,gBAAA,CAAA,MAAA,CAAA,GAAA,MAAa,CAAA;AACb,IAAA,gBAAA,CAAA,OAAA,CAAA,GAAA,OAAe,CAAA;AACnB,CAAC,EAHW,gBAAgB,KAAhB,gBAAgB,GAG3B,EAAA,CAAA,CAAA,CAAA;MAgBY,eAAe,CAAA;;kJAAf,eAAe,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA;sIAAf,eAAe,EAAA,QAAA,EAAA,qBAAA,EAAA,MAAA,EAAA,EAAA,QAAA,EAAA,UAAA,EAAA,KAAA,EAAA,OAAA,EAAA,QAAA,EAAA,UAAA,EAAA,EAAA,QAAA,EAAA,CAAA,iBAAA,CAAA,EAAA,QAAA,EAAA,EAAA,EAAA,CAAA,CAAA;2FAAf,eAAe,EAAA,UAAA,EAAA,CAAA;kBAJ3B,SAAS;AAAC,YAAA,IAAA,EAAA,CAAA;AACP,oBAAA,QAAQ,EAAE,qBAAqB;AAC/B,oBAAA,QAAQ,EAAE,iBAAiB;iBAC9B,CAAA;8BAEY,QAAQ,EAAA,CAAA;sBAAhB,KAAK;gBACG,KAAK,EAAA,CAAA;sBAAb,KAAK;gBACG,QAAQ,EAAA,CAAA;sBAAhB,KAAK;;MAOG,eAAe,CAAA;;kJAAf,eAAe,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA;sIAAf,eAAe,EAAA,QAAA,EAAA,qBAAA,EAAA,MAAA,EAAA,EAAA,KAAA,EAAA,OAAA,EAAA,EAAA,QAAA,EAAA,CAAA,iBAAA,CAAA,EAAA,QAAA,EAAA,EAAA,EAAA,CAAA,CAAA;2FAAf,eAAe,EAAA,UAAA,EAAA,CAAA;kBAJ3B,SAAS;AAAC,YAAA,IAAA,EAAA,CAAA;AACP,oBAAA,QAAQ,EAAE,qBAAqB;AAC/B,oBAAA,QAAQ,EAAE,iBAAiB;iBAC9B,CAAA;8BAEY,KAAK,EAAA,CAAA;sBAAb,KAAK;;MAsBG,SAAS,CAAA;IAuClB,WAAoB,CAAA,MAAc,EAAU,UAAsB,EAAA;AAA9C,QAAA,IAAM,CAAA,MAAA,GAAN,MAAM,CAAQ;AAAU,QAAA,IAAU,CAAA,UAAA,GAAV,UAAU,CAAY;AA1B1D,QAAA,IAAO,CAAA,OAAA,GAAY,IAAI,CAAC;QAIhC,IAAA,CAAA,MAAM,GAAoB;AACtB,YAAA,gBAAgB,EAAE,SAAS;AAC3B,YAAA,mBAAmB,EAAE,SAAS;AAC9B,YAAA,mBAAmB,EAAE,SAAS;AAE9B,YAAA,gBAAgB,EAAE,MAAM;SAC3B,CAAC;AAEiB,QAAA,IAAA,CAAA,YAAY,GAA0B,IAAI,YAAY,EAAW,CAAC;AAUrF,QAAA,IAAa,CAAA,aAAA,GAAY,IAAI,CAAC;KAIwC;AAtCtE,IAAA,IACI,MAAM,GAAA;QACN,OAAO,IAAI,CAAC,OAAO,CAAC;KACvB;IAED,IAAI,MAAM,CAAC,KAAc,EAAA;QACrB,IAAI,IAAI,CAAC,OAAO,EAAE;YACd,IAAI,CAAC,SAAS,EAAE,CAAC;AACpB,SAAA;AAED,QAAA,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;KACxB;AAmBD,IAAA,IAAI,cAAc,GAAA;AACd,QAAA,OAAO,IAAI,CAAC,OAAO,GAAG,uBAAuB,CAAC,MAAM,GAAG,uBAAuB,CAAC,MAAM,CAAC;KACzF;IAQD,QAAQ,GAAA;AACJ,QAAA,IAAI,IAAI,CAAC,QAAQ,KAAK,gBAAgB,CAAC,IAAI,IAAI,IAAI,CAAC,QAAQ,KAAK,gBAAgB,CAAC,KAAK,EAAE;YACrF,IAAI,CAAC,uBAAuB,EAAE,CAAC;AAClC,SAAA;KACJ;IAED,WAAW,GAAA;AACP,QAAA,IAAI,IAAI,CAAC,QAAQ,KAAK,gBAAgB,CAAC,IAAI,IAAI,IAAI,CAAC,QAAQ,KAAK,gBAAgB,CAAC,KAAK,EAAE;YACrF,IAAI,CAAC,yBAAyB,EAAE,CAAC;AACpC,SAAA;KACJ;IAED,MAAM,GAAA;AACF,QAAA,IAAI,CAAC,MAAM,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC;KAC9B;IAED,gBAAgB,GAAA;QACZ,IAAI,IAAI,CAAC,OAAO,EAAE;AACd,YAAA,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,OAAO,CAAC;AACrC,SAAA;KACJ;IAED,eAAe,GAAA;AACX,QAAA,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,OAAO,CAAC;QAElC,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;KACxC;IAED,kBAAkB,GAAA;QACd,IAAI,CAAC,MAAM,GAAG;AACV,YAAA,gBAAgB,EAAE,IAAI,CAAC,aAAa,CAAC,KAAK,IAAI,SAAS;AACvD,YAAA,mBAAmB,EAAE,IAAI,CAAC,aAAa,CAAC,QAAQ,IAAI,SAAS;AAC7D,YAAA,mBAAmB,EAAE,IAAI,CAAC,aAAa,CAAC,QAAQ,IAAI,SAAS;AAE7D,YAAA,gBAAgB,EAAE,IAAI,CAAC,aAAa,CAAC,KAAK,IAAI,MAAM;SACvD,CAAC;KACL;IAEO,uBAAuB,GAAA;AAC3B,QAAA,IAAI,CAAC,uBAAuB,GAAG,CAAC,KAAK,KAAI;YACrC,IAAI,SAAS,CAAC,KAAK,CAAC,IAAI,OAAO,CAAC,KAAK,CAAC,EAAE;gBAAE,OAAO;AAAE,aAAA;AAEnD,YAAA,IACI,CAAC,IAAI,CAAC,QAAQ,KAAK,gBAAgB,CAAC,IAAI,IAAI,aAAa,CAAC,KAAK,CAAC;AAChE,iBAAC,IAAI,CAAC,QAAQ,KAAK,gBAAgB,CAAC,KAAK,IAAI,cAAc,CAAC,KAAK,CAAC,CAAC,EACrE;AACE,gBAAA,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,MAAM,IAAI,CAAC,OAAO,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;AACvD,aAAA;AACL,SAAC,CAAC;AAEF,QAAA,IAAI,CAAC,MAAM,CAAC,iBAAiB,CAAC,MAAK;;YAE/B,QAAQ,CAAC,gBAAgB,CAAC,UAAU,EAAE,IAAI,CAAC,uBAAuB,EAAE,IAAI,CAAC,CAAC;AAC9E,SAAC,CAAC,CAAC;KACN;IAEO,yBAAyB,GAAA;;QAE7B,QAAQ,CAAC,mBAAmB,CAAC,UAAU,EAAE,IAAI,CAAC,uBAAuB,EAAE,IAAI,CAAC,CAAC;KAChF;IAEO,SAAS,GAAA;AACb,QAAA,IAAI,CAAC,MAAM,CAAC,gBAAgB,GAAG,CAAG,EAAA,IAAI,CAAC,UAAU,CAAC,aAAa,CAAC,WAAW,IAAI,CAAC;KACnF;;4IAxGQ,SAAS,EAAA,IAAA,EAAA,CAAA,EAAA,KAAA,EAAA,EAAA,CAAA,MAAA,EAAA,EAAA,EAAA,KAAA,EAAA,EAAA,CAAA,UAAA,EAAA,CAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA;gIAAT,SAAS,EAAA,QAAA,EAAA,YAAA,EAAA,MAAA,EAAA,EAAA,MAAA,EAAA,QAAA,EAAA,QAAA,EAAA,UAAA,EAAA,EAAA,OAAA,EAAA,EAAA,YAAA,EAAA,cAAA,EAAA,EAAA,IAAA,EAAA,EAAA,SAAA,EAAA,EAAA,cAAA,EAAA,oBAAA,EAAA,aAAA,EAAA,mBAAA,EAAA,EAAA,UAAA,EAAA,EAAA,QAAA,EAAA,8EAAA,EAAA,EAAA,cAAA,EAAA,YAAA,EAAA,EAAA,OAAA,EAAA,CAAA,EAAA,YAAA,EAAA,eAAA,EAAA,KAAA,EAAA,IAAA,EAAA,SAAA,EA2BJ,eAAe,EAAA,WAAA,EAAA,IAAA,EAAA,EAAA,EAAA,YAAA,EAAA,eAAA,EAAA,KAAA,EAAA,IAAA,EAAA,SAAA,EAEf,eAAe,EAAA,WAAA,EAAA,IAAA,EAAA,CAAA,EAAA,QAAA,EAAA,CAAA,WAAA,CAAA,EAAA,QAAA,EAAA,EAAA,EAAA,QAAA,ECnGjC,uUASA,EAAA,MAAA,EAAA,CAAA,mHAAA,CAAA,EAAA,UAAA,EAAA,CAAA,EAAA,IAAA,EAAA,EAAA,CAAA,QAAA,EAAA,QAAA,EAAA,YAAA,EAAA,MAAA,EAAA,CAAA,UAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,EAAA,CAAA,YAAA,EAAA,QAAA,EAAA,gBAAA,EAAA,MAAA,EAAA,CAAA,cAAA,CAAA,EAAA,CAAA,EAAA,UAAA,EDyDgB,CAAC,mBAAmB,CAAC,YAAY,CAAC,EAAA,eAAA,EAAA,EAAA,CAAA,uBAAA,CAAA,MAAA,EAAA,aAAA,EAAA,EAAA,CAAA,iBAAA,CAAA,IAAA,EAAA,CAAA,CAAA;2FAIrC,SAAS,EAAA,UAAA,EAAA,CAAA;kBAlBrB,SAAS;+BACI,YAAY,EAAA,QAAA,EACZ,WAAW,EAGf,IAAA,EAAA;AACF,wBAAA,KAAK,EAAE,YAAY;AACnB,wBAAA,UAAU,EAAE,CAAA;;;AAGV,SAAA,CAAA;AACF,wBAAA,gBAAgB,EAAE,oBAAoB;AACtC,wBAAA,eAAe,EAAE,mBAAmB;AACvC,qBAAA,EAAA,UAAA,EACW,CAAC,mBAAmB,CAAC,YAAY,CAAC,EAAA,aAAA,EAC/B,iBAAiB,CAAC,IAAI,EAAA,eAAA,EACpB,uBAAuB,CAAC,MAAM,EAAA,QAAA,EAAA,uUAAA,EAAA,MAAA,EAAA,CAAA,mHAAA,CAAA,EAAA,CAAA;sHAI3C,MAAM,EAAA,CAAA;sBADT,KAAK;gBAcG,QAAQ,EAAA,CAAA;sBAAhB,KAAK;gBAUa,YAAY,EAAA,CAAA;sBAA9B,MAAM;gBAE2C,aAAa,EAAA,CAAA;sBAA9D,YAAY;gBAAC,IAAA,EAAA,CAAA,eAAe,EAAE,EAAE,MAAM,EAAE,KAAK,EAAE,CAAA;gBAEE,aAAa,EAAA,CAAA;sBAA9D,YAAY;gBAAC,IAAA,EAAA,CAAA,eAAe,EAAE,EAAE,MAAM,EAAE,KAAK,EAAE,CAAA;;;MEhFvC,eAAe,CAAA;;kJAAf,eAAe,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,QAAA,EAAA,CAAA,CAAA;AAAf,sCAAA,eAAA,CAAA,IAAA,GAAA,EAAA,CAAA,mBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,eAAe,iBAVpB,eAAe;QACf,eAAe;QACf,SAAS,CAAA,EAAA,OAAA,EAAA,CAJH,YAAY,CAAA,EAAA,OAAA,EAAA,CAOlB,eAAe;QACf,eAAe;QACf,SAAS,CAAA,EAAA,CAAA,CAAA;mJAGJ,eAAe,EAAA,OAAA,EAAA,CAZf,CAAC,YAAY,CAAC,CAAA,EAAA,CAAA,CAAA;2FAYd,eAAe,EAAA,UAAA,EAAA,CAAA;kBAb3B,QAAQ;AAAC,YAAA,IAAA,EAAA,CAAA;oBACN,OAAO,EAAE,CAAC,YAAY,CAAC;AACvB,oBAAA,YAAY,EAAE;wBACV,eAAe;wBACf,eAAe;wBACf,SAAS;AACZ,qBAAA;AACD,oBAAA,OAAO,EAAE;wBACL,eAAe;wBACf,eAAe;wBACf,SAAS;AACZ,qBAAA;iBACJ,CAAA;;;AClBD;;AAEG;;;;"}