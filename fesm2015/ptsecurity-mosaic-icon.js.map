{"version":3,"file":"ptsecurity-mosaic-icon.js","sources":["../../../packages/mosaic/icon/icon.component.ts","../../../packages/mosaic/icon/icon.module.ts","../../../packages/mosaic/icon/ptsecurity-mosaic-icon.ts"],"sourcesContent":["import {\n    Attribute,\n    ChangeDetectionStrategy,\n    Component,\n    Directive,\n    ElementRef,\n    ViewEncapsulation\n} from '@angular/core';\nimport { mixinColor, CanColor, CanColorCtor, ThemePalette } from '@ptsecurity/mosaic/core';\n\n\n@Directive({\n    selector: '[mc-icon]',\n    host: { class: 'mc mc-icon' }\n})\n// tslint:disable-next-line:naming-convention\nexport class McIconCSSStyler {}\n\n\nexport class McIconBase {\n    // tslint:disable-next-line:naming-convention\n    constructor(public _elementRef: ElementRef) {}\n}\n\n// tslint:disable-next-line: naming-convention\nexport const McIconMixinBase: CanColorCtor & typeof McIconBase = mixinColor(McIconBase, ThemePalette.Empty);\n\n\n@Component({\n    selector: `[mc-icon]`,\n    template: '<ng-content></ng-content>',\n    styleUrls: ['icon.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n    inputs: ['color']\n})\nexport class McIcon extends McIconMixinBase implements CanColor {\n    constructor(elementRef: ElementRef, @Attribute('mc-icon') iconName: string) {\n        super(elementRef);\n\n        if (iconName) {\n            elementRef.nativeElement.classList.add(iconName);\n        }\n    }\n\n    getHostElement() {\n        return this._elementRef.nativeElement;\n    }\n}\n","import { A11yModule } from '@angular/cdk/a11y';\nimport { PlatformModule } from '@angular/cdk/platform';\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport {\n    McIcon,\n    McIconCSSStyler\n} from './icon.component';\n\n\n@NgModule({\n    imports: [\n        CommonModule,\n        A11yModule,\n        PlatformModule\n    ],\n    exports: [\n        McIcon,\n        McIconCSSStyler\n    ],\n    declarations: [\n        McIcon,\n        McIconCSSStyler\n    ]\n})\nexport class McIconModule {}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"],"names":[],"mappings":";;;;;;AAeA;MACa,eAAe;;;YAL3B,SAAS,SAAC;gBACP,QAAQ,EAAE,WAAW;gBACrB,IAAI,EAAE,EAAE,KAAK,EAAE,YAAY,EAAE;aAChC;;MAKY,UAAU;;IAEnB,YAAmB,WAAuB;QAAvB,gBAAW,GAAX,WAAW,CAAY;KAAI;CACjD;AAED;MACa,eAAe,GAAqC,UAAU,CAAC,UAAU,EAAE,YAAY,CAAC,KAAK,EAAE;MAW/F,MAAO,SAAQ,eAAe;IACvC,YAAY,UAAsB,EAAwB,QAAgB;QACtE,KAAK,CAAC,UAAU,CAAC,CAAC;QAElB,IAAI,QAAQ,EAAE;YACV,UAAU,CAAC,aAAa,CAAC,SAAS,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;SACpD;KACJ;IAED,cAAc;QACV,OAAO,IAAI,CAAC,WAAW,CAAC,aAAa,CAAC;KACzC;;;YAnBJ,SAAS,SAAC;gBACP,QAAQ,EAAE,WAAW;gBACrB,QAAQ,EAAE,2BAA2B;gBAErC,eAAe,EAAE,uBAAuB,CAAC,MAAM;gBAC/C,aAAa,EAAE,iBAAiB,CAAC,IAAI;gBACrC,MAAM,EAAE,CAAC,OAAO,CAAC;;aACpB;;;;YA9BG,UAAU;yCAgC2B,SAAS,SAAC,SAAS;;;MCX/C,YAAY;;;YAfxB,QAAQ,SAAC;gBACN,OAAO,EAAE;oBACL,YAAY;oBACZ,UAAU;oBACV,cAAc;iBACjB;gBACD,OAAO,EAAE;oBACL,MAAM;oBACN,eAAe;iBAClB;gBACD,YAAY,EAAE;oBACV,MAAM;oBACN,eAAe;iBAClB;aACJ;;;ACzBD;;;;;;"}