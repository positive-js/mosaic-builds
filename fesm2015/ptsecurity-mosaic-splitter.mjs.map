{"version":3,"file":"ptsecurity-mosaic-splitter.mjs","sources":["../../../packages/mosaic/splitter/splitter.component.ts","../../../packages/mosaic/splitter/splitter.component.html","../../../packages/mosaic/splitter/splitter.module.ts","../../../packages/mosaic/splitter/ptsecurity-mosaic-splitter.ts"],"sourcesContent":["import { coerceBooleanProperty, coerceCssPixelValue, coerceNumberProperty } from '@angular/cdk/coercion';\nimport {\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    Directive,\n    ElementRef,\n    EventEmitter,\n    Input,\n    NgZone,\n    OnDestroy,\n    OnInit,\n    Output,\n    QueryList,\n    Renderer2,\n    ViewChild,\n    ViewChildren,\n    ViewEncapsulation\n} from '@angular/core';\n\n\ninterface IArea {\n    area: McSplitterAreaDirective;\n    index: number;\n    order: number;\n    initialSize: number;\n}\n\ninterface IPoint {\n    x: number;\n    y: number;\n}\n\nconst enum StyleProperty {\n    Flex = 'flex',\n    FlexBasis = 'flex-basis',\n    FlexDirection = 'flex-direction',\n    Height = 'height',\n    MaxWidth = 'max-width',\n    MinHeight = 'min-height',\n    MinWidth = 'minWidth',\n    OffsetHeight = 'offsetHeight',\n    OffsetWidth = 'offsetWidth',\n    Order = 'order',\n    Width = 'width',\n    Top = 'top',\n    Left = 'left',\n    Cursor = 'cursor'\n}\n\nexport enum Direction {\n    Horizontal = 'horizontal',\n    Vertical = 'vertical'\n}\n\n@Directive({\n    selector: 'mc-gutter',\n    host: {\n        class: 'mc-gutter',\n        '[class.mc-gutter_vertical]': 'isVertical',\n        '[class.mc-gutter_dragged]': 'dragged',\n        '(mousedown)': 'dragged = true'\n    }\n})\nexport class McGutterDirective implements OnInit {\n\n    @Input()\n    get direction(): Direction {\n        return this._direction;\n    }\n\n    set direction(direction: Direction) {\n        this._direction = direction;\n    }\n\n    private _direction: Direction = Direction.Vertical;\n\n\n    @Input()\n    get order(): number {\n        return this._order;\n    }\n\n    set order(order: number) {\n        this._order = coerceNumberProperty(order);\n    }\n\n    private _order: number = 0;\n\n\n    @Input()\n    get size(): number {\n        return this._size;\n    }\n\n    set size(size: number) {\n        this._size = coerceNumberProperty(size);\n    }\n\n    private _size: number = 6;\n\n    get isVertical(): boolean {\n        return this._direction === Direction.Vertical;\n    }\n\n    dragged: boolean = false;\n\n    constructor(\n        private elementRef: ElementRef,\n        private renderer: Renderer2\n    ) {}\n\n    ngOnInit(): void {\n        this.setStyle(StyleProperty.FlexBasis, coerceCssPixelValue(this.size));\n        this.setStyle(this.isVertical ? StyleProperty.Height : StyleProperty.Width, coerceCssPixelValue(this.size));\n        this.setStyle(StyleProperty.Order, this.order);\n\n        if (!this.isVertical) {\n            this.setStyle(StyleProperty.Height, '100%');\n        }\n\n        // fix IE issue with gutter icon. flex-direction is requied for flex alignment options\n        this.setStyle(StyleProperty.FlexDirection, this.isVertical ? 'row' : 'column');\n    }\n\n    getPosition(): IPoint {\n        return {\n            x: this.elementRef.nativeElement.offsetLeft,\n            y: this.elementRef.nativeElement.offsetTop\n        };\n    }\n\n    private setStyle(property: StyleProperty, value: string | number): void {\n        this.renderer.setStyle(this.elementRef.nativeElement, property, value);\n    }\n}\n\n@Directive({\n    selector: 'mc-gutter-ghost',\n    host: {\n        class: 'mc-gutter-ghost',\n        '[class.mc-gutter-ghost_vertical]': 'isVertical',\n        '[class.mc-gutter-ghost_visible]': 'visible'\n    }\n})\nexport class McGutterGhostDirective {\n    @Input() visible: boolean;\n\n    @Input()\n    get x(): number {\n        return this._x;\n    }\n\n    set x(x: number) {\n        this._x = x;\n        this.setStyle(StyleProperty.Left, coerceCssPixelValue(x));\n    }\n\n    private _x: number = 0;\n\n    @Input()\n    get y(): number {\n        return this._y;\n    }\n\n    set y(y: number) {\n        this._y = y;\n        this.setStyle(StyleProperty.Top, coerceCssPixelValue(y));\n    }\n\n    private _y: number = 0;\n\n\n    @Input()\n    get direction(): Direction {\n        return this._direction;\n    }\n\n    set direction(direction: Direction) {\n        this._direction = direction;\n        this.updateDimensions();\n    }\n\n    private _direction: Direction = Direction.Vertical;\n\n    @Input()\n    get size(): number {\n        return this._size;\n    }\n\n    set size(size: number) {\n        this._size = coerceNumberProperty(size);\n        this.updateDimensions();\n    }\n\n    private _size: number = 6;\n\n    get isVertical(): boolean {\n        return this.direction === Direction.Vertical;\n    }\n\n    constructor(\n        private elementRef: ElementRef,\n        private renderer: Renderer2\n    ) {}\n\n    private updateDimensions(): void {\n        this.setStyle(this.isVertical ? StyleProperty.Width : StyleProperty.Height, '100%');\n        this.setStyle(this.isVertical ? StyleProperty.Height : StyleProperty.Width, coerceCssPixelValue(this.size));\n    }\n\n    private setStyle(property: StyleProperty, value: string | number): void {\n        this.renderer.setStyle(this.elementRef.nativeElement, property, value);\n    }\n}\n\n\n@Component({\n    selector: 'mc-splitter',\n    exportAs: 'mcSplitter',\n    host: {\n        class: 'mc-splitter'\n    },\n    preserveWhitespaces: false,\n    styleUrls: ['splitter.scss'],\n    templateUrl: './splitter.component.html',\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class McSplitterComponent implements OnInit {\n    @Output() gutterPositionChange: EventEmitter<void> = new EventEmitter<void>();\n\n    readonly areas: IArea[] = [];\n\n    @ViewChildren(McGutterDirective) gutters: QueryList<McGutterDirective>;\n    @ViewChild(McGutterGhostDirective) ghost: McGutterGhostDirective;\n\n    get isDragging(): boolean {\n        return this._isDragging;\n    }\n    private _isDragging: boolean = false;\n\n    private readonly areaPositionDivider: number = 2;\n    private readonly listeners: (() => void)[] = [];\n\n\n    @Input()\n    get hideGutters(): boolean {\n        return this._hideGutters;\n    }\n\n    set hideGutters(value: boolean) {\n        this._hideGutters = coerceBooleanProperty(value);\n    }\n\n    private _hideGutters: boolean = false;\n\n\n    @Input()\n    get direction(): Direction {\n        return this._direction;\n    }\n\n    set direction(direction: Direction) {\n        this._direction = direction;\n    }\n\n    private _direction: Direction;\n\n    @Input()\n    get disabled(): boolean {\n        return this._disabled;\n    }\n\n    set disabled(disabled: boolean) {\n        this._disabled = coerceBooleanProperty(disabled);\n    }\n\n    private _disabled: boolean = false;\n\n\n    @Input()\n    get useGhost(): boolean {\n        return this._useGhost;\n    }\n\n    set useGhost(useGhost: boolean) {\n        this._useGhost = coerceBooleanProperty(useGhost);\n    }\n\n    private _useGhost: boolean = false;\n\n\n    @Input()\n    get gutterSize(): number {\n        return this._gutterSize;\n    }\n\n    set gutterSize(gutterSize: number) {\n        const size = coerceNumberProperty(gutterSize);\n        this._gutterSize = size > 0 ? size : this.gutterSize;\n    }\n\n    private _gutterSize: number = 6;\n\n    get resizing(): boolean {\n        return this._resizing;\n    }\n\n    private _resizing: boolean = false;\n\n    constructor(\n        public elementRef: ElementRef,\n        public changeDetectorRef: ChangeDetectorRef,\n        private ngZone: NgZone,\n        private renderer: Renderer2\n    ) {}\n\n    addArea(area: McSplitterAreaDirective): void {\n        const index: number = this.areas.length;\n        const order: number = index * this.areaPositionDivider;\n        const size: number = area.getSize();\n\n        area.setOrder(order);\n\n        this.areas.push({\n            area,\n            index,\n            order,\n            initialSize: size\n        });\n    }\n\n    ngOnInit(): void {\n        if (!this.direction) {\n            this.direction = Direction.Horizontal;\n        }\n\n        this.setStyle(StyleProperty.FlexDirection, this.isVertical() ? 'column' : 'row');\n    }\n\n    onMouseDown(event: MouseEvent, leftAreaIndex: number, rightAreaIndex: number) {\n        if (this.disabled) { return; }\n\n        event.preventDefault();\n\n        const startPoint: IPoint = {\n            x: event.screenX,\n            y: event.screenY\n        };\n\n        const leftArea = this.areas[leftAreaIndex];\n        const rightArea = this.areas[rightAreaIndex];\n\n        leftArea.initialSize = leftArea.area.getSize();\n        rightArea.initialSize = rightArea.area.getSize();\n\n        let currentGutter: McGutterDirective | undefined;\n\n        if (this.useGhost) {\n            // tslint:disable-next-line:no-magic-numbers\n            const gutterOrder = leftAreaIndex * 2 + 1;\n            currentGutter = this.gutters.find((gutter: McGutterDirective) => gutter.order === gutterOrder);\n\n            if (currentGutter) {\n                const gutterPosition = currentGutter.getPosition();\n\n                this.ghost.direction = currentGutter.direction;\n                this.ghost.size = currentGutter.size;\n                this.ghost.x = gutterPosition.x;\n                this.ghost.y = gutterPosition.y;\n\n                this.ghost.visible = true;\n                this.setStyle(StyleProperty.Cursor, currentGutter.direction === Direction.Vertical ? 'row-resize' : 'col-resize');\n            }\n        } else {\n            this.areas.forEach((item) => {\n                const size = item.area.getSize();\n\n                item.area.disableFlex();\n                item.area.setSize(size);\n            });\n        }\n\n\n        this.listeners.push(\n            this.renderer.listen(\n                'document',\n                'mouseup',\n                () => this.onMouseUp(leftArea, rightArea, currentGutter)\n            )\n        );\n\n        this.ngZone.runOutsideAngular(() => {\n            this.listeners.push(\n                this.renderer.listen(\n                    'document',\n                    'mousemove',\n                    (e: MouseEvent) => this.onMouseMove(e, startPoint, leftArea, rightArea, currentGutter)\n                )\n            );\n        });\n\n        this._isDragging = true;\n    }\n\n    removeArea(area: McSplitterAreaDirective): void {\n        let indexToRemove: number = -1;\n\n        this.areas.some((item, index) => {\n            if (item.area === area) {\n                indexToRemove = index;\n\n                return true;\n            }\n\n            return false;\n        });\n\n        if (indexToRemove === -1) { return; }\n\n        this.areas.splice(indexToRemove, 1);\n    }\n\n    isVertical(): boolean {\n        return this.direction === Direction.Vertical;\n    }\n\n    private updateGutter(): void {\n        this.gutters.forEach((gutter) => {\n            if (gutter.dragged) {\n                gutter.dragged = false;\n\n                this.changeDetectorRef.detectChanges();\n            }\n        });\n    }\n\n    private onMouseMove(\n        event: MouseEvent,\n        startPoint: IPoint,\n        leftArea: IArea,\n        rightArea: IArea,\n        currentGutter: McGutterDirective | undefined\n    ) {\n        if (!this.isDragging || this.disabled) { return; }\n\n        const endPoint: IPoint = {\n            x: event.screenX,\n            y: event.screenY\n        };\n\n        const offset = this.isVertical()\n            ? startPoint.y - endPoint.y\n            : startPoint.x - endPoint.x;\n\n        if (this.useGhost && currentGutter) {\n            const gutterPosition = currentGutter.getPosition();\n            const leftPos = leftArea.area.getPosition();\n            const rightPos = rightArea.area.getPosition();\n            const rightMin = rightArea.area.getMinSize() || 0;\n            const leftMin = leftArea.area.getMinSize() || 0;\n\n            const key = this.isVertical() ? 'y' : 'x';\n\n            const minPos = leftPos[key] - leftMin;\n            const maxPos = rightPos[key] + (rightArea.area.getSize() || 0) - rightMin - currentGutter.size;\n            const newPos = gutterPosition[key] - offset;\n\n            this.ghost[key] = newPos < minPos ? minPos : Math.min(newPos, maxPos);\n        } else {\n           this.resizeAreas(leftArea, rightArea, offset);\n        }\n    }\n\n    private resizeAreas(leftArea: IArea, rightArea: IArea, sizeOffset: number): void {\n        const newLeftAreaSize = leftArea.initialSize - sizeOffset;\n        const newRightAreaSize = rightArea.initialSize + sizeOffset;\n\n        const minLeftAreaSize = leftArea.area.getMinSize();\n        const minRightAreaSize = rightArea.area.getMinSize();\n\n        if (newLeftAreaSize < minLeftAreaSize || newRightAreaSize < minRightAreaSize) {\n            return;\n        } else if (newLeftAreaSize <= 0) {\n            leftArea.area.setSize(0);\n            rightArea.area.setSize(rightArea.initialSize + leftArea.initialSize);\n        } else if (newRightAreaSize <= 0) {\n            leftArea.area.setSize(rightArea.initialSize + leftArea.initialSize);\n            rightArea.area.setSize(0);\n        } else {\n            leftArea.area.setSize(newLeftAreaSize);\n            rightArea.area.setSize(newRightAreaSize);\n        }\n    }\n\n    private onMouseUp(\n        leftArea: IArea,\n        rightArea: IArea,\n        currentGutter: McGutterDirective | undefined\n    ) {\n        while (this.listeners.length > 0) {\n            const unsubscribe = this.listeners.pop();\n\n            if (unsubscribe) {\n                unsubscribe();\n            }\n        }\n\n        if (this.useGhost && currentGutter) {\n            const gutterPosition = currentGutter.getPosition();\n            const offset = this.ghost.direction === Direction.Vertical ?\n                gutterPosition.y - this.ghost.y :\n                gutterPosition.x - this.ghost.x;\n            this.resizeAreas(leftArea, rightArea, offset);\n            this.ghost.visible = false;\n            this.setStyle(StyleProperty.Cursor, 'unset');\n        }\n        this._isDragging = false;\n\n        this.updateGutter();\n\n        this.gutterPositionChange.emit();\n\n        this.changeDetectorRef.markForCheck();\n    }\n\n    private setStyle(property: StyleProperty, value: string | number) {\n        this.renderer.setStyle(this.elementRef.nativeElement, property, value);\n    }\n}\n\n@Directive({\n    selector: '[mc-splitter-area]',\n    host: {\n        class: 'mc-splitter-area',\n        '[class.mc-splitter-area_resizing]': 'isResizing()'\n    }\n})\nexport class McSplitterAreaDirective implements OnInit, OnDestroy {\n    @Output() sizeChange: EventEmitter<number> = new EventEmitter<number>();\n\n    constructor(\n        private elementRef: ElementRef,\n        private renderer: Renderer2,\n        private splitter: McSplitterComponent\n    ) {}\n\n    isResizing(): boolean {\n        return this.splitter.isDragging;\n    }\n\n    disableFlex(): void {\n        this.renderer.removeStyle(this.elementRef.nativeElement, 'flex');\n    }\n\n    ngOnInit(): void {\n        this.splitter.addArea(this);\n\n        this.removeStyle(StyleProperty.MaxWidth);\n\n        if (this.splitter.direction === Direction.Vertical) {\n            this.setStyle(StyleProperty.Width, '100%');\n            this.removeStyle(StyleProperty.Height);\n        } else {\n            this.setStyle(StyleProperty.Height, '100%');\n            this.removeStyle(StyleProperty.Width);\n        }\n\n        this.splitter.gutterPositionChange\n            .subscribe(this.emitSizeChange);\n    }\n\n    ngOnDestroy(): void {\n        this.splitter.removeArea(this);\n    }\n\n    setOrder(order: number): void {\n        this.setStyle(StyleProperty.Order, order);\n    }\n\n    setSize(size: number): void {\n        if (isNaN(size)) { return; }\n\n        this.setStyle(this.getSizeProperty(), coerceCssPixelValue(coerceNumberProperty(size)));\n    }\n\n    getSize(): number {\n        return this.elementRef.nativeElement[this.getOffsetSizeProperty()];\n    }\n\n    getPosition(): IPoint {\n        return {\n            x: this.elementRef.nativeElement.offsetLeft,\n            y: this.elementRef.nativeElement.offsetTop\n        };\n    }\n\n    getMinSize(): number {\n        const styles = getComputedStyle(this.elementRef.nativeElement);\n\n        return parseFloat(styles[this.getMinSizeProperty()]);\n    }\n\n    private isVertical(): boolean {\n        return this.splitter.direction === Direction.Vertical;\n    }\n\n    private getMinSizeProperty(): StyleProperty {\n        return this.isVertical()\n            ? StyleProperty.MinHeight\n            : StyleProperty.MinWidth;\n    }\n\n    private getOffsetSizeProperty(): StyleProperty {\n        return this.isVertical()\n            ? StyleProperty.OffsetHeight\n            : StyleProperty.OffsetWidth;\n    }\n\n    private getSizeProperty(): StyleProperty {\n        return this.isVertical()\n            ? StyleProperty.Height\n            : StyleProperty.Width;\n    }\n\n    private setStyle(style: StyleProperty, value: string | number) {\n        this.renderer.setStyle(this.elementRef.nativeElement, style, value);\n    }\n\n    private removeStyle(style: StyleProperty) {\n        this.renderer.removeStyle(this.elementRef.nativeElement, style);\n    }\n\n    private emitSizeChange = () => {\n        this.sizeChange.emit(this.getSize());\n    }\n}\n","<ng-content></ng-content>\n\n<ng-template ngFor let-area [ngForOf]=\"areas\" let-index=\"index\" let-last=\"last\">\n    <mc-gutter *ngIf=\"last === false\"\n               [direction]=\"direction\"\n               [attr.disabled]=\"disabled || null\"\n               [style.display]=\"hideGutters ? 'none' : 'flex'\"\n               [size]=\"gutterSize\"\n               [order]=\"index * 2 + 1\"\n               (mousedown)=\"onMouseDown($event, index, index + 1)\">\n    </mc-gutter>\n</ng-template>\n\n<mc-gutter-ghost *ngIf=\"useGhost\"></mc-gutter-ghost>\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { McIconModule } from '@ptsecurity/mosaic/icon';\n\nimport {\n    McGutterDirective,\n    McGutterGhostDirective,\n    McSplitterAreaDirective,\n    McSplitterComponent\n} from './splitter.component';\n\n\n@NgModule({\n    imports: [\n        CommonModule,\n        McIconModule\n    ],\n    exports: [\n        McGutterDirective,\n        McSplitterAreaDirective,\n        McSplitterComponent\n    ],\n    declarations: [\n        McGutterDirective,\n        McGutterGhostDirective,\n        McSplitterAreaDirective,\n        McSplitterComponent\n    ]\n})\nexport class McSplitterModule {\n}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"],"names":[],"mappings":"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"}