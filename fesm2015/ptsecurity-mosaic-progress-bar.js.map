{"version":3,"file":"ptsecurity-mosaic-progress-bar.js","sources":["../../../packages/mosaic/progress-bar/progress-bar.component.ts","../../../packages/mosaic/progress-bar/progress-bar.component.html","../../../packages/mosaic/progress-bar/progress-bar.module.ts","../../../packages/mosaic/progress-bar/ptsecurity-mosaic-progress-bar.ts"],"sourcesContent":["import {\n    ChangeDetectionStrategy,\n    Component,\n    ViewEncapsulation,\n    ElementRef,\n    Input\n} from '@angular/core';\nimport { CanColor, CanColorCtor, mixinColor, ThemePalette } from '@ptsecurity/mosaic/core';\n\n\nexport type ProgressBarMode = 'determinate' | 'indeterminate';\n\nlet idIterator = 0;\n\nconst MIN_PERCENT = 0;\nconst MAX_PERCENT = 100;\n\nexport class McProgressBarBase {\n    // tslint:disable-next-line:naming-convention\n    constructor(public _elementRef: ElementRef) {}\n}\n\n// tslint:disable-next-line:naming-convention\nexport const McProgressBarMixinBase:\n    CanColorCtor & typeof McProgressBarBase = mixinColor(McProgressBarBase, ThemePalette.Primary);\n\n@Component({\n    selector: 'mc-progress-bar',\n    templateUrl: './progress-bar.component.html',\n    styleUrls: ['./progress-bar.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n    inputs: ['color'],\n    host: {\n        class: 'mc-progress-bar',\n        '[attr.id]': 'id'\n    }\n})\nexport class McProgressBar extends McProgressBarMixinBase implements CanColor {\n    @Input() id: string = `mc-progress-bar-${idIterator++}`;\n    @Input() value: number = 0;\n    @Input() mode: ProgressBarMode = 'determinate';\n\n    constructor(elementRef: ElementRef) {\n        super(elementRef);\n    }\n\n    get percentage(): number {\n        return Math.max(MIN_PERCENT, Math.min(MAX_PERCENT, this.value)) / MAX_PERCENT;\n    }\n}\n","\n<div class=\"mc-progress-bar__inner\" [ngSwitch]=\"mode\" [id]=\"id\">\n    <div\n        *ngSwitchCase=\"'indeterminate'\"\n        class=\"mc-progress-bar__line mc-progress-bar__line--indeterminate\">\n    </div>\n    <div\n        *ngSwitchDefault\n        class=\"mc-progress-bar__line mc-progress-bar__line--determinate\"\n        [ngStyle]=\"{transform: 'scaleX(' + percentage + ')'}\">\n    </div>\n</div>\n","import { PlatformModule } from '@angular/cdk/platform';\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport {\n    McProgressBar\n} from './progress-bar.component';\n\n\n@NgModule({\n    imports: [\n        CommonModule,\n        PlatformModule\n    ],\n    exports: [\n        McProgressBar\n    ],\n    declarations: [\n        McProgressBar\n    ]\n})\nexport class McProgressBarModule {}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"],"names":[],"mappings":";;;;;;;AAYA,IAAI,UAAU,GAAG,CAAC,CAAC;AAEnB,MAAM,WAAW,GAAG,CAAC,CAAC;AACtB,MAAM,WAAW,GAAG,GAAG,CAAC;MAEX,iBAAiB;;IAE1B,YAAmB,WAAuB;QAAvB,gBAAW,GAAX,WAAW,CAAY;KAAI;CACjD;AAED;MACa,sBAAsB,GACW,UAAU,CAAC,iBAAiB,EAAE,YAAY,CAAC,OAAO,EAAE;MAcrF,aAAc,SAAQ,sBAAsB;IAKrD,YAAY,UAAsB;QAC9B,KAAK,CAAC,UAAU,CAAC,CAAC;QALb,OAAE,GAAW,mBAAmB,UAAU,EAAE,EAAE,CAAC;QAC/C,UAAK,GAAW,CAAC,CAAC;QAClB,SAAI,GAAoB,aAAa,CAAC;KAI9C;IAED,IAAI,UAAU;QACV,OAAO,IAAI,CAAC,GAAG,CAAC,WAAW,EAAE,IAAI,CAAC,GAAG,CAAC,WAAW,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,WAAW,CAAC;KACjF;;6HAXQ,aAAa;iHAAb,aAAa,gOCtC1B,kaAYA;2FD0Ba,aAAa;kBAZzB,SAAS;mBAAC;oBACP,QAAQ,EAAE,iBAAiB;oBAC3B,WAAW,EAAE,+BAA+B;oBAC5C,SAAS,EAAE,CAAC,qBAAqB,CAAC;oBAClC,eAAe,EAAE,uBAAuB,CAAC,MAAM;oBAC/C,aAAa,EAAE,iBAAiB,CAAC,IAAI;oBACrC,MAAM,EAAE,CAAC,OAAO,CAAC;oBACjB,IAAI,EAAE;wBACF,KAAK,EAAE,iBAAiB;wBACxB,WAAW,EAAE,IAAI;qBACpB;iBACJ;iGAEY,EAAE;sBAAV,KAAK;gBACG,KAAK;sBAAb,KAAK;gBACG,IAAI;sBAAZ,KAAK;;;MEpBG,mBAAmB;;mIAAnB,mBAAmB;oIAAnB,mBAAmB,iBAHxB,aAAa,aAPb,YAAY;QACZ,cAAc,aAGd,aAAa;oIAMR,mBAAmB,YAXnB;YACL,YAAY;YACZ,cAAc;SACjB;2FAQQ,mBAAmB;kBAZ/B,QAAQ;mBAAC;oBACN,OAAO,EAAE;wBACL,YAAY;wBACZ,cAAc;qBACjB;oBACD,OAAO,EAAE;wBACL,aAAa;qBAChB;oBACD,YAAY,EAAE;wBACV,aAAa;qBAChB;iBACJ;;;ACpBD;;;;;;"}