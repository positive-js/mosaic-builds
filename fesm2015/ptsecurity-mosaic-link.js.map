{"version":3,"file":"ptsecurity-mosaic-link.js","sources":["../../../packages/mosaic/link/link.component.ts","../../../packages/mosaic/link/link.module.ts"],"sourcesContent":["import { FocusMonitor } from '@angular/cdk/a11y';\nimport {\n    Input,\n    ElementRef,\n    OnDestroy,\n    ChangeDetectorRef,\n    Directive\n} from '@angular/core';\nimport {\n    CanDisable, CanDisableCtor,\n    HasTabIndex, HasTabIndexCtor,\n    mixinDisabled,\n    mixinTabIndex,\n    toBoolean\n} from '@ptsecurity/mosaic/core';\n\n\nexport class McLinkBase {\n    constructor(public elementRef: ElementRef) {}\n}\n\n// tslint:disable-next-line: naming-convention\nexport const McLinkMixinBase: HasTabIndexCtor & CanDisableCtor &\n    typeof McLinkBase = mixinTabIndex(mixinDisabled(McLinkBase));\n\n@Directive({\n    selector: 'a.mc-link',\n    exportAs: 'mcLink',\n    inputs: ['tabIndex'],\n    host: {\n        '[attr.disabled]': 'disabled || null',\n        '[attr.tabindex]': 'tabIndex'\n    }\n})\n\nexport class McLink extends McLinkMixinBase implements OnDestroy, HasTabIndex, CanDisable {\n    @Input()\n    get disabled() {\n        return this._disabled;\n    }\n\n    set disabled(value: any) {\n        const newValue = toBoolean(value);\n\n        if (newValue !== this._disabled) {\n            this._disabled = newValue;\n            this.changeDetector.markForCheck();\n        }\n    }\n\n    private _disabled = false;\n\n    constructor(\n        elementRef: ElementRef,\n        private focusMonitor: FocusMonitor,\n        private changeDetector: ChangeDetectorRef\n    ) {\n        super(elementRef);\n\n        this.focusMonitor.monitor(elementRef.nativeElement, true);\n    }\n\n    ngOnDestroy() {\n        this.focusMonitor.stopMonitoring(this.elementRef.nativeElement);\n    }\n\n    focus(): void {\n        this.getHostElement().focus();\n    }\n\n    getHostElement() {\n        return this.elementRef.nativeElement;\n    }\n}\n","import { A11yModule } from '@angular/cdk/a11y';\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { McLink } from './link.component';\n\n\n@NgModule({\n    imports: [\n        CommonModule,\n        A11yModule\n    ],\n    declarations: [McLink],\n    exports: [McLink]\n})\nexport class McLinkModule {}\n"],"names":[],"mappings":";;;;;;;;;;MAiBa,UAAU;;;;IACnB,YAAmB,UAAsB;QAAtB,eAAU,GAAV,UAAU,CAAY;KAAI;CAChD;;;IADe,gCAA6B;;;;MAIhC,eAAe,GACJ,aAAa,CAAC,aAAa,CAAC,UAAU,CAAC;MAYlD,MAAO,SAAQ,eAAe;;;;;;IAiBvC,YACI,UAAsB,EACd,YAA0B,EAC1B,cAAiC;QAEzC,KAAK,CAAC,UAAU,CAAC,CAAC;QAHV,iBAAY,GAAZ,YAAY,CAAc;QAC1B,mBAAc,GAAd,cAAc,CAAmB;QALrC,cAAS,GAAG,KAAK,CAAC;QAStB,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC,UAAU,CAAC,aAAa,EAAE,IAAI,CAAC,CAAC;KAC7D;;;;IAxBD,IACI,QAAQ;QACR,OAAO,IAAI,CAAC,SAAS,CAAC;KACzB;;;;;IAED,IAAI,QAAQ,CAAC,KAAU;;cACb,QAAQ,GAAG,SAAS,CAAC,KAAK,CAAC;QAEjC,IAAI,QAAQ,KAAK,IAAI,CAAC,SAAS,EAAE;YAC7B,IAAI,CAAC,SAAS,GAAG,QAAQ,CAAC;YAC1B,IAAI,CAAC,cAAc,CAAC,YAAY,EAAE,CAAC;SACtC;KACJ;;;;IAcD,WAAW;QACP,IAAI,CAAC,YAAY,CAAC,cAAc,CAAC,IAAI,CAAC,UAAU,CAAC,aAAa,CAAC,CAAC;KACnE;;;;IAED,KAAK;QACD,IAAI,CAAC,cAAc,EAAE,CAAC,KAAK,EAAE,CAAC;KACjC;;;;IAED,cAAc;QACV,OAAO,IAAI,CAAC,UAAU,CAAC,aAAa,CAAC;KACxC;;;YA/CJ,SAAS,SAAC;gBACP,QAAQ,EAAE,WAAW;gBACrB,QAAQ,EAAE,QAAQ;gBAClB,MAAM,EAAE,CAAC,UAAU,CAAC;gBACpB,IAAI,EAAE;oBACF,iBAAiB,EAAE,kBAAkB;oBACrC,iBAAiB,EAAE,UAAU;iBAChC;aACJ;;;;YA9BG,UAAU;YAHL,YAAY;YAKjB,iBAAiB;;;uBA+BhB,KAAK;;;;;;;IAcN,2BAA0B;;;;;IAItB,8BAAkC;;;;;IAClC,gCAAyC;;;;;;;;MCxCpC,YAAY;;;YARxB,QAAQ,SAAC;gBACN,OAAO,EAAE;oBACL,YAAY;oBACZ,UAAU;iBACb;gBACD,YAAY,EAAE,CAAC,MAAM,CAAC;gBACtB,OAAO,EAAE,CAAC,MAAM,CAAC;aACpB;;;;;;;;;;;;;;;;;;;;;;;"}