{"version":3,"file":"ptsecurity-mosaic-progress-bar.js","sources":["ng://@ptsecurity/mosaic/progress-bar/progress-bar.component.ts","ng://@ptsecurity/mosaic/progress-bar/progress-bar.module.ts"],"sourcesContent":["import {\n    ChangeDetectionStrategy,\n    Component,\n    ViewEncapsulation,\n    ElementRef,\n    Input\n} from '@angular/core';\nimport { CanColor, CanColorCtor, mixinColor, ThemePalette } from '@ptsecurity/mosaic/core';\n\n\nexport type ProgressBarMode = 'determinate' | 'indeterminate';\n\nlet idIterator = 0;\n\nconst MIN_PERCENT = 0;\nconst MAX_PERCENT = 100;\n\nexport class McProgressBarBase {\n    // tslint:disable-next-line:naming-convention\n    constructor(public _elementRef: ElementRef) {}\n}\n\n// tslint:disable-next-line:naming-convention\nexport const McProgressBarMixinBase:\n    CanColorCtor & typeof McProgressBarBase = mixinColor(McProgressBarBase, ThemePalette.Primary);\n\n@Component({\n    selector: 'mc-progress-bar',\n    templateUrl: './progress-bar.component.html',\n    styleUrls: ['./progress-bar.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n    inputs: ['color'],\n    host: {\n        class: 'mc-progress-bar',\n        '[attr.id]': 'id'\n    }\n})\nexport class McProgressBar extends McProgressBarMixinBase implements CanColor {\n    @Input() id: string = `mc-progress-bar-${idIterator++}`;\n    @Input() value: number = 0;\n    @Input() mode: ProgressBarMode = 'determinate';\n\n    constructor(elementRef: ElementRef) {\n        super(elementRef);\n    }\n\n    get percentage(): number {\n        return Math.max(MIN_PERCENT, Math.min(MAX_PERCENT, this.value)) / MAX_PERCENT;\n    }\n}\n","import { PlatformModule } from '@angular/cdk/platform';\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport {\n    McProgressBar\n} from './progress-bar.component';\n\n\n@NgModule({\n    imports: [\n        CommonModule,\n        PlatformModule\n    ],\n    exports: [\n        McProgressBar\n    ],\n    declarations: [\n        McProgressBar\n    ]\n})\nexport class McProgressBarModule {}\n"],"names":[],"mappings":";;;;;;;;;;;;IAYI,UAAU,GAAG,CAAC;;IAEZ,WAAW,GAAG,CAAC;;IACf,WAAW,GAAG,GAAG;;;IAInB,2BAAmB,WAAuB;QAAvB,gBAAW,GAAX,WAAW,CAAY;KAAI;IAClD,wBAAC;AAAD,CAAC,IAAA;;;IADe,wCAA8B;;;;IAIjC,sBAAsB,GACW,UAAU,CAAC,iBAAiB,EAAE,YAAY,CAAC,OAAO;;IAc7D,iCAAsB;IAKrD,uBAAY,UAAsB;QAAlC,YACI,kBAAM,UAAU,CAAC,SACpB;QANQ,QAAE,GAAW,qBAAmB,UAAU,EAAI,CAAC;QAC/C,WAAK,GAAW,CAAC,CAAC;QAClB,UAAI,GAAoB,aAAa,CAAC;;KAI9C;IAED,sBAAI,qCAAU;;;;QAAd;YACI,OAAO,IAAI,CAAC,GAAG,CAAC,WAAW,EAAE,IAAI,CAAC,GAAG,CAAC,WAAW,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,WAAW,CAAC;SACjF;;;OAAA;;gBAvBJ,SAAS,SAAC;oBACP,QAAQ,EAAE,iBAAiB;oBAC3B,4aAA4C;oBAE5C,eAAe,EAAE,uBAAuB,CAAC,MAAM;oBAC/C,aAAa,EAAE,iBAAiB,CAAC,IAAI;oBACrC,MAAM,EAAE,CAAC,OAAO,CAAC;oBACjB,IAAI,EAAE;wBACF,KAAK,EAAE,iBAAiB;wBACxB,WAAW,EAAE,IAAI;qBACpB;;iBACJ;;;;gBAjCG,UAAU;;;qBAmCT,KAAK;wBACL,KAAK;uBACL,KAAK;;IASV,oBAAC;CAAA,CAZkC,sBAAsB,GAYxD;;;IAXG,2BAAwD;;IACxD,8BAA2B;;IAC3B,6BAA+C;;;;;;;;;IChCnD;KAYmC;;gBAZlC,QAAQ,SAAC;oBACN,OAAO,EAAE;wBACL,YAAY;wBACZ,cAAc;qBACjB;oBACD,OAAO,EAAE;wBACL,aAAa;qBAChB;oBACD,YAAY,EAAE;wBACV,aAAa;qBAChB;iBACJ;;IACiC,0BAAC;CAZnC;;;;;;;;;;;;;;;;;;;;;;"}