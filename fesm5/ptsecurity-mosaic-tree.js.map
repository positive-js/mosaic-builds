{"version":3,"file":"ptsecurity-mosaic-tree.js","sources":["ng://@ptsecurity/mosaic/tree/node.directive.ts","ng://@ptsecurity/mosaic/tree/padding.directive.ts","ng://@ptsecurity/mosaic/tree/toggle.ts","ng://@ptsecurity/mosaic/tree/tree-option.component.ts","ng://@ptsecurity/mosaic/tree/tree-selection.component.ts","ng://@ptsecurity/mosaic/tree/tree.module.ts","ng://@ptsecurity/mosaic/tree/data-source/flat-data-source.ts","ng://@ptsecurity/mosaic/tree/data-source/nested-data-source.ts"],"sourcesContent":["import { Directive, Input } from '@angular/core';\nimport { CdkTreeNodeDef } from '@ptsecurity/cdk/tree';\n\n\n@Directive({\n    selector: '[mcTreeNodeDef]',\n    inputs: ['when: mcTreeNodeDefWhen'],\n    providers: [{ provide: CdkTreeNodeDef, useExisting: McTreeNodeDef }]\n})\nexport class McTreeNodeDef<T> extends CdkTreeNodeDef<T> {\n    @Input('mcTreeNode') data: T;\n}\n","import { Directive, Input, OnInit } from '@angular/core';\nimport { CdkTreeNodePadding } from '@ptsecurity/cdk/tree';\n\n\n@Directive({\n    selector: '[mcTreeNodePadding]',\n    providers: [{ provide: CdkTreeNodePadding, useExisting: McTreeNodePadding }]\n})\nexport class McTreeNodePadding<T> extends CdkTreeNodePadding<T> implements OnInit {\n    @Input('mcTreeNodePadding') level: number;\n\n    @Input('mcTreeNodePaddingIndent') indent: number;\n\n    baseLeftPadding: number = 12;\n    /* tslint:disable-next-line:naming-convention orthodox-getter-and-setter*/\n    _indent: number = 20;\n\n    withIcon: boolean;\n    iconWidth: number = 20;\n\n    get leftPadding(): number {\n        return (this.withIcon ? 0 : this.iconWidth) + this.baseLeftPadding;\n    }\n\n    paddingIndent(): string | null {\n        const nodeLevel = (this.treeNode.data && this.tree.treeControl.getLevel)\n            ? this.tree.treeControl.getLevel(this.treeNode.data)\n            : 0;\n\n        const level = this.level || nodeLevel;\n\n        return level > 0 ? `${(level * this._indent) + this.leftPadding}px` : `${this.leftPadding}px`;\n    }\n\n    ngOnInit(): void {\n        this.withIcon = this.tree.treeControl.isExpandable(this.treeNode.data);\n\n        this.setPadding();\n    }\n}\n","import { Component, Directive, Input, ViewEncapsulation } from '@angular/core';\nimport { CdkTree, CdkTreeNode, CdkTreeNodeToggle } from '@ptsecurity/cdk/tree';\nimport { map } from 'rxjs/operators';\n\n\n@Component({\n    selector: 'mc-tree-node-toggle',\n    template: `\n        <i class=\"mc mc-icon mc-angle-down-S_16\"></i>\n    `,\n    host: {\n        class: 'mc-tree-node-toggle',\n        '(click)': 'toggle($event)',\n        '[class.mc-opened]': 'iconState',\n        '[attr.disabled]': 'disabled || null'\n    },\n    encapsulation: ViewEncapsulation.None,\n    providers: [{ provide: CdkTreeNodeToggle, useExisting: McTreeNodeToggleComponent }]\n})\nexport class McTreeNodeToggleComponent<T> extends CdkTreeNodeToggle<T> {\n    disabled: boolean = false;\n\n    @Input() node: T;\n\n    get iconState(): any {\n        return this.disabled || this.tree.treeControl.isExpanded(this.node);\n    }\n\n    constructor(tree: CdkTree<T>, treeNode: CdkTreeNode<T>) {\n        super(tree, treeNode);\n\n        this.tree.treeControl.filterValue\n            .pipe(map((value) => value.length > 0))\n            .subscribe((state: boolean) => this.disabled = state);\n    }\n}\n\n@Directive({\n    selector: '[mcTreeNodeToggle]',\n    host: {\n        '(click)': 'toggle($event)',\n        '[attr.disabled]': 'disabled || null'\n    },\n    providers: [{ provide: CdkTreeNodeToggle, useExisting: McTreeNodeToggleDirective }]\n})\nexport class McTreeNodeToggleDirective<T> extends CdkTreeNodeToggle<T> {\n    disabled: boolean = false;\n\n    constructor(tree: CdkTree<T>, treeNode: CdkTreeNode<T>) {\n        super(tree, treeNode);\n\n        this.tree.treeControl.filterValue\n            .pipe(map((value) => value.length > 0))\n            .subscribe((state: boolean) => this.disabled = state);\n    }\n}\n","import { FocusOrigin } from '@angular/cdk/a11y';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport {\n    ChangeDetectorRef,\n    Component,\n    EventEmitter,\n    Input,\n    Output,\n    ElementRef,\n    Inject,\n    InjectionToken,\n    ChangeDetectionStrategy,\n    ViewEncapsulation,\n    AfterContentInit,\n    NgZone\n} from '@angular/core';\nimport { hasModifierKey } from '@ptsecurity/cdk/keycodes';\nimport { CdkTreeNode } from '@ptsecurity/cdk/tree';\nimport { CanDisable } from '@ptsecurity/mosaic/core';\nimport { Subject } from 'rxjs';\nimport { take } from 'rxjs/operators';\n\n\n// tslint:disable-next-line:naming-convention\nexport interface McTreeOptionEvent {\n    option: McTreeOption;\n}\n\n/**\n * Injection token used to provide the parent component to options.\n */\nexport const MC_TREE_OPTION_PARENT_COMPONENT = new InjectionToken<any>('MC_TREE_OPTION_PARENT_COMPONENT');\n\nexport class McTreeOptionChange {\n    constructor(public source: McTreeOption, public isUserInput = false) {}\n}\n\nlet uniqueIdCounter: number = 0;\n\n@Component({\n    selector: 'mc-tree-option',\n    exportAs: 'mcTreeOption',\n    templateUrl: './tree-option.html',\n    host: {\n        '[attr.id]': 'id',\n        '[attr.tabindex]': '-1',\n\n        '[attr.disabled]': 'disabled || null',\n\n        class: 'mc-tree-option',\n        '[class.mc-selected]': 'selected',\n        '[class.mc-focused]': 'hasFocus',\n\n        '(focus)': 'focus()',\n        '(blur)': 'blur()',\n\n        '(click)': 'selectViaInteraction($event)'\n    },\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n    providers: [{ provide: CdkTreeNode, useExisting: McTreeOption }]\n})\nexport class McTreeOption extends CdkTreeNode<McTreeOption> implements CanDisable, AfterContentInit {\n    readonly onFocus = new Subject<McTreeOptionEvent>();\n\n    readonly onBlur = new Subject<McTreeOptionEvent>();\n\n    get value(): any {\n        return this._value;\n    }\n\n    set value(value: any) {\n        this._value = value;\n    }\n\n    private _value: any;\n\n    @Input()\n    get disabled() {\n        return this._disabled || (this.tree && this.tree.disabled);\n    }\n\n    set disabled(value: any) {\n        const newValue = coerceBooleanProperty(value);\n\n        if (newValue !== this._disabled) {\n            this._disabled = newValue;\n        }\n    }\n\n    private _disabled: boolean = false;\n\n    @Input()\n    get showCheckbox() {\n        return this._showCheckbox !== undefined ? this._showCheckbox : this.tree.showCheckbox;\n    }\n\n    set showCheckbox(value: any) {\n        this._showCheckbox = coerceBooleanProperty(value);\n    }\n\n    private _showCheckbox: boolean;\n\n    @Output() readonly onSelectionChange = new EventEmitter<McTreeOptionChange>();\n\n    get selected(): boolean {\n        return this._selected;\n    }\n\n    set selected(value: boolean) {\n        const isSelected = coerceBooleanProperty(value);\n\n        if (isSelected !== this._selected) {\n            this.setSelected(isSelected);\n        }\n    }\n\n    private _selected: boolean = false;\n\n    get id(): string {\n        return this._id;\n    }\n\n    private _id = `mc-tree-option-${uniqueIdCounter++}`;\n\n    get multiple(): boolean {\n        return this.tree.multiple;\n    }\n\n    get viewValue(): string {\n        // TODO: Add input property alternative for node envs.\n        return (this.getHostElement().textContent || '').trim();\n    }\n\n    hasFocus: boolean = false;\n\n    constructor(\n        elementRef: ElementRef,\n        private changeDetectorRef: ChangeDetectorRef,\n        private ngZone: NgZone,\n        @Inject(MC_TREE_OPTION_PARENT_COMPONENT) public tree: any\n    ) {\n        super(elementRef, tree);\n    }\n\n    ngAfterContentInit(): void {\n        this.value = this.tree.treeControl.getValue(this.data);\n    }\n\n    toggle(): void {\n        this.selected = !this.selected;\n    }\n\n    setSelected(selected: boolean): void {\n        if (this._selected === selected || !this.tree.selectionModel) { return; }\n\n        this._selected = selected;\n\n        if (selected) {\n            this.tree.selectionModel.select(this.data);\n        } else {\n            this.tree.selectionModel.deselect(this.data);\n        }\n\n        this.changeDetectorRef.markForCheck();\n    }\n\n    focus(focusOrigin?: FocusOrigin) {\n        if (focusOrigin === 'program') { return; }\n\n        if (this.disabled || this.hasFocus) { return; }\n\n        this.elementRef.nativeElement.focus();\n\n        this.onFocus.next({ option: this });\n\n        Promise.resolve().then(() => {\n            this.hasFocus = true;\n\n            this.changeDetectorRef.markForCheck();\n        });\n    }\n\n    blur(): void {\n        // When animations are enabled, Angular may end up removing the option from the DOM a little\n        // earlier than usual, causing it to be blurred and throwing off the logic in the tree\n        // that moves focus not the next item. To work around the issue, we defer marking the option\n        // as not focused until the next time the zone stabilizes.\n        this.ngZone.onStable\n            .asObservable()\n            .pipe(take(1))\n            .subscribe(() => {\n                this.ngZone.run(() => {\n                    this.hasFocus = false;\n\n                    this.onBlur.next({ option: this });\n                });\n            });\n    }\n\n    getHeight(): number {\n        const clientRects = this.elementRef.nativeElement.getClientRects();\n\n        if (clientRects.length) {\n            return clientRects[0].height;\n        }\n\n        return 0;\n    }\n\n    select(): void {\n        if (!this._selected) {\n            this._selected = true;\n\n            this.changeDetectorRef.markForCheck();\n            this.emitSelectionChangeEvent();\n        }\n    }\n\n    deselect(): void {\n        if (this._selected) {\n            this._selected = false;\n\n            this.changeDetectorRef.markForCheck();\n        }\n    }\n\n    selectViaInteraction($event?: KeyboardEvent): void {\n        if (!this.disabled) {\n            this.changeDetectorRef.markForCheck();\n            this.emitSelectionChangeEvent(true);\n\n            const shiftKey = $event ? hasModifierKey($event, 'shiftKey') : false;\n            const ctrlKey = $event ? hasModifierKey($event, 'ctrlKey') : false;\n\n            this.tree.setSelectedOptionsByClick(this, shiftKey, ctrlKey);\n        }\n    }\n\n    emitSelectionChangeEvent(isUserInput = false): void {\n        this.onSelectionChange.emit(new McTreeOptionChange(this, isUserInput));\n    }\n\n    getHostElement(): HTMLElement {\n        return this.elementRef.nativeElement;\n    }\n\n    markForCheck() {\n        this.changeDetectorRef.markForCheck();\n    }\n}\n","/* tslint:disable:no-empty */\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { SelectionModel } from '@angular/cdk/collections';\nimport {\n    AfterContentInit,\n    Attribute,\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    ContentChildren,\n    ElementRef,\n    EventEmitter,\n    forwardRef,\n    Input,\n    IterableDiffer,\n    IterableDiffers,\n    Output,\n    QueryList,\n    ViewChild,\n    ViewEncapsulation\n} from '@angular/core';\nimport { NodeDef, ViewData } from '@angular/core/esm2015/src/view';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { FocusKeyManager } from '@ptsecurity/cdk/a11y';\nimport {\n    hasModifierKey,\n    END,\n    ENTER,\n    HOME,\n    LEFT_ARROW,\n    PAGE_DOWN,\n    PAGE_UP,\n    RIGHT_ARROW,\n    SPACE,\n    DOWN_ARROW,\n    UP_ARROW\n} from '@ptsecurity/cdk/keycodes';\nimport { CdkTree, CdkTreeNodeOutlet, FlatTreeControl } from '@ptsecurity/cdk/tree';\nimport {\n    CanDisable,\n    getMcSelectNonArrayValueError,\n    HasTabIndex,\n    MultipleMode\n} from '@ptsecurity/mosaic/core';\nimport { merge, Observable, Subject, Subscription } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\n\nimport { MC_TREE_OPTION_PARENT_COMPONENT, McTreeOption, McTreeOptionEvent } from './tree-option.component';\n\n\nexport const MC_SELECTION_TREE_VALUE_ACCESSOR: any = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => McTreeSelection),\n    multi: true\n};\n\nexport class McTreeNavigationChange<T> {\n    constructor(public source: McTreeSelection<any>, public option: T) {}\n}\n\nexport class McTreeSelectionChange<T> {\n    constructor(public source: McTreeSelection<any>, public option: T) {}\n}\n\n// tslint:disable-next-line:naming-convention\ninterface SelectionModelOption {\n    id: number | string;\n    value: string;\n}\n\n\n@Component({\n    selector: 'mc-tree-selection',\n    exportAs: 'mcTreeSelection',\n    template: '<ng-container cdkTreeNodeOutlet></ng-container>',\n    styleUrls: ['./tree.scss'],\n    host: {\n        class: 'mc-tree-selection',\n\n        '[attr.tabindex]': 'tabIndex',\n        '[attr.disabled]': 'disabled || null',\n\n        '(blur)': 'blur()',\n        '(focus)': 'focus($event)',\n\n        '(keydown)': 'onKeyDown($event)',\n        '(window:resize)': 'updateScrollSize()'\n    },\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    providers: [\n        MC_SELECTION_TREE_VALUE_ACCESSOR,\n        { provide: MC_TREE_OPTION_PARENT_COMPONENT, useExisting: McTreeSelection },\n        { provide: CdkTree, useExisting: McTreeSelection }\n    ]\n})\nexport class McTreeSelection<T extends McTreeOption> extends CdkTree<T>\n    implements ControlValueAccessor, AfterContentInit, CanDisable, HasTabIndex {\n\n    @ViewChild(CdkTreeNodeOutlet, { static: true }) nodeOutlet: CdkTreeNodeOutlet;\n\n    @ContentChildren(McTreeOption) renderedOptions: QueryList<T>;\n\n    keyManager: FocusKeyManager<T>;\n\n    selectionModel: SelectionModel<SelectionModelOption>;\n\n    resetFocusedItemOnBlur: boolean = true;\n\n    @Input() treeControl: FlatTreeControl<T>;\n\n    @Output() readonly navigationChange = new EventEmitter<McTreeNavigationChange<T>>();\n\n    @Output() readonly selectionChange = new EventEmitter<McTreeSelectionChange<T>>();\n\n    multipleMode: MultipleMode | null = null;\n\n    userTabIndex: number | null = null;\n\n    @Input()\n    get autoSelect(): boolean {\n        return this._autoSelect;\n    }\n\n    set autoSelect(value: boolean) {\n        this._autoSelect = coerceBooleanProperty(value);\n    }\n\n    private _autoSelect: boolean = true;\n\n    get optionFocusChanges(): Observable<McTreeOptionEvent> {\n        return merge(...this.renderedOptions.map((option) => option.onFocus));\n    }\n\n    get optionBlurChanges(): Observable<McTreeOptionEvent> {\n        return merge(...this.renderedOptions.map((option) => option.onBlur));\n    }\n\n    get multiple(): boolean {\n        return !!this.multipleMode;\n    }\n\n    @Input()\n    get noUnselectLast(): boolean {\n        return this._noUnselectLast;\n    }\n\n    set noUnselectLast(value: boolean) {\n        this._noUnselectLast = coerceBooleanProperty(value);\n    }\n\n    private _noUnselectLast: boolean = true;\n\n    @Input()\n    get disabled(): boolean {\n        return this._disabled;\n    }\n\n    set disabled(rawValue: boolean) {\n        const value = coerceBooleanProperty(rawValue);\n\n        if (this._disabled !== value) {\n            this._disabled = value;\n\n            this.markOptionsForCheck();\n        }\n    }\n\n    private _disabled: boolean = false;\n\n    @Input()\n    get tabIndex(): any {\n        return this.disabled ? -1 : this._tabIndex;\n    }\n\n    set tabIndex(value: any) {\n        this._tabIndex = value;\n        this.userTabIndex = value;\n    }\n\n    private _tabIndex = 0;\n\n    get showCheckbox(): boolean {\n        return this.multipleMode === MultipleMode.CHECKBOX;\n    }\n\n    private readonly destroy = new Subject<void>();\n\n    private optionFocusSubscription: Subscription | null;\n\n    private optionBlurSubscription: Subscription | null;\n\n    constructor(\n        private elementRef: ElementRef,\n        differs: IterableDiffers,\n        changeDetectorRef: ChangeDetectorRef,\n        @Attribute('multiple') multiple: MultipleMode\n    ) {\n        super(differs, changeDetectorRef);\n\n        if (multiple === MultipleMode.CHECKBOX || multiple === MultipleMode.KEYBOARD) {\n            this.multipleMode = multiple;\n        } else if (multiple !== null) {\n            this.multipleMode = MultipleMode.CHECKBOX;\n        }\n\n        if (this.multipleMode === MultipleMode.CHECKBOX) {\n            this.autoSelect = false;\n            this.noUnselectLast = false;\n        }\n\n        this.selectionModel = new SelectionModel<SelectionModelOption>(this.multiple);\n    }\n\n    ngAfterContentInit(): void {\n        this.keyManager = new FocusKeyManager<T>(this.renderedOptions)\n            .withVerticalOrientation(true)\n            .withHorizontalOrientation(null);\n\n        this.keyManager.change\n            .pipe(takeUntil(this.destroy))\n            .subscribe(() => {\n                if (this.keyManager.activeItem) {\n                    this.emitNavigationEvent(this.keyManager.activeItem);\n\n                    // todo need check this logic\n                    if (this.autoSelect && !this.keyManager.activeItem.disabled) {\n                        this.updateOptionsFocus();\n                    }\n                }\n            });\n\n        this.keyManager.tabOut\n            .pipe(takeUntil(this.destroy))\n            .subscribe(() => this.allowFocusEscape());\n\n        this.selectionModel.changed\n            .pipe(takeUntil(this.destroy))\n            .subscribe(() => {\n                this.onChange(this.getSelectedValues());\n\n                this.renderedOptions.notifyOnChanges();\n            });\n\n        this.renderedOptions.changes\n            .pipe(takeUntil(this.destroy))\n            .subscribe((options) => {\n                this.resetOptions();\n\n                // Check to see if we need to update our tab index\n                this.updateTabIndex();\n\n                // todo need to do optimisation\n                options.forEach((option) => {\n                    option.deselect();\n\n                    this.getSelectedValues().forEach((selectedValue) => {\n                        if (option.value === selectedValue) {\n                            option.select();\n                        }\n                    });\n                });\n            });\n    }\n\n    ngOnDestroy(): void {\n        this.destroy.next();\n        this.destroy.complete();\n    }\n\n    focus($event): void {\n        if (this.renderedOptions.length === 0 || this.isFocusReceivedFromNestedOption($event)) { return; }\n\n        this.keyManager.setFirstItemActive();\n    }\n\n    blur() {\n        if (!this.hasFocusedOption() && this.resetFocusedItemOnBlur) {\n            this.keyManager.setActiveItem(-1);\n        }\n\n        this.onTouched();\n        this.changeDetectorRef.markForCheck();\n    }\n\n    onKeyDown(event: KeyboardEvent): void {\n        this.keyManager.setFocusOrigin('keyboard');\n        // tslint:disable-next-line: deprecation\n        const keyCode = event.keyCode;\n\n        switch (keyCode) {\n            case DOWN_ARROW:\n                this.keyManager.setNextItemActive();\n\n                break;\n            case UP_ARROW:\n                this.keyManager.setPreviousItemActive();\n\n                break;\n            case LEFT_ARROW:\n                if (this.keyManager.activeItem) {\n                    this.treeControl.collapse(this.keyManager.activeItem.data as T);\n                }\n\n                event.preventDefault();\n\n                return;\n            case RIGHT_ARROW:\n                if (this.keyManager.activeItem) {\n                    this.treeControl.expand(this.keyManager.activeItem.data as T);\n                }\n\n                event.preventDefault();\n\n                return;\n            case SPACE:\n            case ENTER:\n                this.toggleFocusedOption();\n                event.preventDefault();\n\n                break;\n            case HOME:\n                this.keyManager.setFirstItemActive();\n                event.preventDefault();\n\n                break;\n            case END:\n                this.keyManager.setLastItemActive();\n                event.preventDefault();\n\n                break;\n            case PAGE_UP:\n                this.keyManager.setPreviousPageItemActive();\n                event.preventDefault();\n\n                break;\n            case PAGE_DOWN:\n                this.keyManager.setNextPageItemActive();\n                event.preventDefault();\n\n                break;\n            default:\n                return;\n        }\n\n        if (this.keyManager.activeItem) {\n            this.setSelectedOptionsByKey(\n                this.keyManager.activeItem, hasModifierKey(event, 'shiftKey'), hasModifierKey(event, 'ctrlKey')\n            );\n        }\n    }\n\n    updateScrollSize(): void {\n        if (!this.renderedOptions.first) { return; }\n\n        this.keyManager.withScrollSize(Math.floor(this.getHeight() / this.renderedOptions.first.getHeight()));\n    }\n\n    setSelectedOptionsByKey(option: T, shiftKey: boolean, ctrlKey: boolean): void {\n        if (shiftKey && this.multiple) {\n            this.setSelectedOptions(option);\n        } else if (ctrlKey) {\n            if (!this.canDeselectLast(option)) { return; }\n        } else if (this.autoSelect) {\n            this.selectionModel.clear();\n            this.selectionModel.toggle(option.data);\n        }\n\n        this.emitChangeEvent(option);\n    }\n\n    setSelectedOptionsByClick(option: T, shiftKey: boolean, ctrlKey: boolean): void {\n        if (!shiftKey && !ctrlKey) {\n            this.keyManager.setActiveItem(option);\n        }\n\n        if (shiftKey && this.multiple) {\n            this.setSelectedOptions(option);\n        } else if (ctrlKey) {\n            if (!this.canDeselectLast(option)) { return; }\n\n            this.selectionModel.toggle(option.data);\n        } else if (this.autoSelect) {\n            this.selectionModel.clear();\n            this.selectionModel.toggle(option.data);\n        } else {\n            this.selectionModel.toggle(option.data);\n        }\n\n        this.emitChangeEvent(option);\n    }\n\n    setSelectedOptions(option: T): void {\n        const selectedOptionState = option.selected;\n\n        let fromIndex = this.keyManager.previousActiveItemIndex;\n        let toIndex = this.keyManager.previousActiveItemIndex = this.keyManager.activeItemIndex;\n\n        if (toIndex === fromIndex) { return; }\n\n        if (fromIndex > toIndex) {\n            [fromIndex, toIndex] = [toIndex, fromIndex];\n        }\n\n        this.renderedOptions\n            .toArray()\n            .slice(fromIndex, toIndex + 1)\n            .filter((item) => !item.disabled)\n            .forEach((renderedOption) => {\n                const isLastRenderedOption = renderedOption === this.keyManager.activeItem;\n\n                if (isLastRenderedOption && renderedOption.selected && this.noUnselectLast) { return; }\n\n                renderedOption.setSelected(!selectedOptionState);\n            });\n    }\n\n    setFocusedOption(option: T): void {\n        this.keyManager.setActiveItem(option);\n    }\n\n    toggleFocusedOption(): void {\n        const focusedOption = this.keyManager.activeItem;\n\n        if (focusedOption && (!focusedOption.selected || this.canDeselectLast(focusedOption))) {\n            focusedOption.toggle();\n            this.emitChangeEvent(focusedOption);\n        }\n    }\n\n    renderNodeChanges(\n        data: T[],\n        dataDiffer: IterableDiffer<T> = this.dataDiffer,\n        viewContainer: any = this.nodeOutlet.viewContainer,\n        parentData?: T\n    ): void {\n        super.renderNodeChanges(data, dataDiffer, viewContainer, parentData);\n\n        const arrayOfInstances = [];\n        const changeDetectorRefs: any[] = [];\n\n        viewContainer._embeddedViews.forEach((view: ViewData) => {\n            const viewDef = view.def;\n\n            viewDef.nodes.forEach((node: NodeDef) => {\n                if (viewDef.nodeMatchedQueries === node.matchedQueryIds) {\n                    const nodeData: any = view.nodes[node.nodeIndex];\n\n                    arrayOfInstances.push(nodeData.instance as never);\n                    changeDetectorRefs.push(nodeData.instance.changeDetectorRef);\n                }\n            });\n        });\n\n        setTimeout(() => {\n            changeDetectorRefs.forEach((changeDetectorRef) => {\n                if (!changeDetectorRef.destroyed) {\n                    changeDetectorRef.detectChanges();\n                }\n            });\n        });\n\n        if (this.renderedOptions) {\n            this.renderedOptions.reset(arrayOfInstances);\n            this.renderedOptions.notifyOnChanges();\n        }\n\n        this.updateScrollSize();\n\n        this.nodeOutlet.changeDetectorRef.detectChanges();\n    }\n\n    getHeight(): number {\n        const clientRects = this.elementRef.nativeElement.getClientRects();\n\n        if (clientRects.length) {\n            return clientRects[0].height;\n        }\n\n        return 0;\n    }\n\n    getItemHeight(): number {\n        return this.renderedOptions.first ? this.renderedOptions.first.getHeight() : 0;\n    }\n\n    emitNavigationEvent(option: T): void {\n        this.navigationChange.emit(new McTreeNavigationChange(this, option));\n    }\n\n    emitChangeEvent(option: T): void {\n        this.selectionChange.emit(new McTreeNavigationChange(this, option));\n    }\n\n    writeValue(value: any): void {\n        if (this.multiple && value && !Array.isArray(value)) {\n            throw getMcSelectNonArrayValueError();\n        }\n\n        if (this.renderedOptions) {\n            this.setOptionsFromValues(this.multiple ? value : [value]);\n        }\n    }\n\n    /** `View -> model callback called when value changes` */\n    onChange: (value: any) => void = () => {};\n\n    registerOnChange(fn: (value: any) => void): void {\n        this.onChange = fn;\n    }\n\n    /** `View -> model callback called when select has been touched` */\n    onTouched = () => {};\n\n    registerOnTouched(fn: () => {}): void {\n        this.onTouched = fn;\n    }\n\n    /**\n     * Sets the disabled state of the control. Implemented as a part of ControlValueAccessor.\n     */\n    setDisabledState(isDisabled: boolean): void {\n        this._disabled = isDisabled;\n        this.changeDetectorRef.markForCheck();\n    }\n\n    setOptionsFromValues(values: any[]): void {\n        this.selectionModel.clear();\n\n        const valuesToSelect = values.reduce((result, value) => {\n            return this.treeControl.hasValue(value) ? [...result, this.treeControl.hasValue(value)] : [...result];\n        }, []);\n\n        this.selectionModel.select(...valuesToSelect);\n    }\n\n    getSelectedValues(): any[] {\n        return this.selectionModel.selected.map((selected) => this.treeControl.getValue(selected));\n    }\n\n    protected updateTabIndex(): void {\n        this._tabIndex = this.renderedOptions.length === 0 ? -1 : 0;\n    }\n\n    private allowFocusEscape() {\n        if (this._tabIndex !== -1) {\n            this._tabIndex = -1;\n\n            setTimeout(() => {\n                this._tabIndex = this.userTabIndex || 0;\n                this.changeDetectorRef.markForCheck();\n            });\n        }\n    }\n\n    private resetOptions() {\n        this.dropSubscriptions();\n        this.listenToOptionsFocus();\n    }\n\n    private dropSubscriptions() {\n        if (this.optionFocusSubscription) {\n            this.optionFocusSubscription.unsubscribe();\n            this.optionFocusSubscription = null;\n        }\n\n        if (this.optionBlurSubscription) {\n            this.optionBlurSubscription.unsubscribe();\n            this.optionBlurSubscription = null;\n        }\n    }\n\n    private listenToOptionsFocus(): void {\n        this.optionFocusSubscription = this.optionFocusChanges\n            .subscribe((event) => {\n                const index: number = this.renderedOptions.toArray().indexOf(event.option as T);\n\n                this.renderedOptions\n                    .filter((option) => option.hasFocus)\n                    .forEach((option) => option.hasFocus = false);\n\n                if (this.isValidIndex(index)) {\n                    this.keyManager.updateActiveItem(index);\n                }\n            });\n\n        this.optionBlurSubscription = this.optionBlurChanges\n            .subscribe(() => this.blur());\n    }\n\n    /**\n     * Utility to ensure all indexes are valid.\n     * @param index The index to be checked.\n     * @returns True if the index is valid for our list of options.\n     */\n    private isValidIndex(index: number): boolean {\n        return index >= 0 && index < this.renderedOptions.length;\n    }\n\n    /** Checks whether any of the options is focused. */\n    private hasFocusedOption() {\n        return this.renderedOptions.some((option) => option.hasFocus);\n    }\n\n    private markOptionsForCheck() {\n        if (this.renderedOptions) {\n            this.renderedOptions.forEach((option) => option.markForCheck());\n        }\n    }\n\n    private updateOptionsFocus() {\n        this.renderedOptions\n            .filter((option) => option.hasFocus)\n            .forEach((option) => option.hasFocus = false);\n    }\n\n    private canDeselectLast(option: McTreeOption): boolean {\n        return !(this.noUnselectLast && this.selectionModel.selected.length === 1 && option.selected);\n    }\n\n    private isFocusReceivedFromNestedOption($event: FocusEvent) {\n        if (!$event || !$event.relatedTarget) { return false; }\n\n        return ($event.relatedTarget as HTMLElement).classList.contains('mc-tree-option');\n    }\n}\n\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { CdkTreeModule } from '@ptsecurity/cdk/tree';\nimport { McPseudoCheckboxModule } from '@ptsecurity/mosaic/core';\n\nimport { McTreeNodeDef } from './node.directive';\nimport { McTreeNodePadding } from './padding.directive';\nimport { McTreeNodeToggleDirective, McTreeNodeToggleComponent } from './toggle';\nimport { McTreeOption } from './tree-option.component';\nimport { McTreeSelection } from './tree-selection.component';\n\n\nconst MC_TREE_DIRECTIVES = [\n    McTreeSelection,\n    McTreeOption,\n    McTreeNodeDef,\n    McTreeNodePadding,\n    McTreeNodeToggleComponent,\n    McTreeNodeToggleDirective\n];\n\n@NgModule({\n    imports: [CommonModule, CdkTreeModule, McPseudoCheckboxModule],\n    exports: MC_TREE_DIRECTIVES,\n    declarations: MC_TREE_DIRECTIVES\n})\nexport class McTreeModule {}\n","import { CollectionViewer, DataSource } from '@angular/cdk/collections';\nimport { FlatTreeControl, TreeControl } from '@ptsecurity/cdk/tree';\nimport { BehaviorSubject, merge, Observable } from 'rxjs';\nimport { map, take } from 'rxjs/operators';\n\n\n/**\n * Tree flattener to convert a normal type of node to node with children & level information.\n * Transform nested nodes of type `T` to flattened nodes of type `F`.\n *\n * For example, the input data of type `T` is nested, and contains its children data:\n *   SomeNode: {\n *     key: 'Fruits',\n *     children: [\n *       NodeOne: {\n *         key: 'Apple',\n *       },\n *       NodeTwo: {\n *        key: 'Pear',\n *      }\n *    ]\n *  }\n *  After flattener flatten the tree, the structure will become\n *  SomeNode: {\n *    key: 'Fruits',\n *    expandable: true,\n *    level: 1\n *  },\n *  NodeOne: {\n *    key: 'Apple',\n *    expandable: false,\n *    level: 2\n *  },\n *  NodeTwo: {\n *   key: 'Pear',\n *   expandable: false,\n *   level: 2\n * }\n * and the output flattened type is `F` with additional information.\n */\nexport class McTreeFlattener<T, F> {\n    constructor(\n        public transformFunction: (node: T, level: number, parent: F | null) => F,\n        public getLevel: (node: F) => number,\n        public isExpandable: (node: F) => boolean,\n        public getChildren: (node: T) => Observable<T[]> | T[] | undefined | null\n    ) {}\n\n    flattenNode(node: T, level: number, resultNodes: F[], parent: F | null): F[] {\n        const flatNode = this.transformFunction(node, level, parent);\n        resultNodes.push(flatNode);\n\n        if (this.isExpandable(flatNode)) {\n            const childrenNodes = this.getChildren(node);\n\n            if (childrenNodes) {\n                if (Array.isArray(childrenNodes)) {\n                    this.flattenChildren(childrenNodes, level, resultNodes, flatNode);\n                } else {\n                    childrenNodes\n                        .pipe(take(1))\n                        .subscribe((children) => {\n                            this.flattenChildren(children, level, resultNodes, flatNode);\n                        });\n                }\n            }\n        }\n\n        return resultNodes;\n    }\n\n    flattenChildren(children: T[], level: number, resultNodes: F[], parent: F | null): void {\n        children.forEach((child) => {\n            this.flattenNode(child, level + 1, resultNodes, parent);\n        });\n    }\n\n    /**\n     * Flatten a list of node type T to flattened version of node F.\n     * Please note that type T may be nested, and the length of `structuredData` may be different\n     * from that of returned list `F[]`.\n     */\n    flattenNodes(structuredData: T[]): F[] {\n        const resultNodes: F[] = [];\n        structuredData.forEach((node) => this.flattenNode(node, 0, resultNodes, null));\n\n        return resultNodes;\n    }\n\n    /**\n     * Expand flattened node with current expansion status.\n     * The returned list may have different length.\n     */\n    expandFlattenedNodes(nodes: F[], treeControl: TreeControl<F>): F[] {\n        const results: F[] = [];\n        const currentExpand: boolean[] = [];\n        currentExpand[0] = true;\n\n        nodes.forEach((node) => {\n            let expand = true;\n            for (let i = 0; i <= this.getLevel(node); i++) {\n                expand = expand && currentExpand[i];\n            }\n\n            if (expand) { results.push(node); }\n\n            if (this.isExpandable(node)) {\n                currentExpand[this.getLevel(node) + 1] = treeControl.isExpanded(node);\n            }\n        });\n\n        return results;\n    }\n}\n\nenum McTreeDataSourceChangeTypes {\n    Expansion = 'expansion',\n    Filter = 'filter'\n}\n\n/**\n * Data source for flat tree.\n * The data source need to handle expansion/collapsion of the tree node and change the data feed\n * to `McTree`.\n * The nested tree nodes of type `T` are flattened through `MсTreeFlattener`, and converted\n * to type `F` for `McTree` to consume.\n */\nexport class McTreeFlatDataSource<T, F> extends DataSource<F> {\n    flattenedData = new BehaviorSubject<F[]>([]);\n\n    expandedData = new BehaviorSubject<F[]>([]);\n\n    filteredData = new BehaviorSubject<F[]>([]);\n\n    get data() {\n        return this._data.value;\n    }\n\n    set data(value: T[]) {\n        this._data.next(value);\n\n        this.flattenedData.next(this.treeFlattener.flattenNodes(this.data));\n        this.treeControl.dataNodes = this.flattenedData.value;\n    }\n\n    private _data: BehaviorSubject<T[]>;\n\n    constructor(\n        private treeControl: FlatTreeControl<F>,\n        private treeFlattener: McTreeFlattener<T, F>,\n        initialData: T[] = []\n    ) {\n        super();\n\n        this._data = new BehaviorSubject<T[]>(initialData);\n    }\n\n    connect(collectionViewer: CollectionViewer): Observable<F[]> {\n        return merge(\n            collectionViewer.viewChange,\n            this.treeControl.expansionModel.changed\n                .pipe(map((value) => ({ type: McTreeDataSourceChangeTypes.Expansion, value }))),\n            this.treeControl.filterValue\n                .pipe(map((value) => ({ type: McTreeDataSourceChangeTypes.Filter, value }))),\n            this.flattenedData\n        )\n        .pipe(map((changeObj: any): any => {\n            if (changeObj.type === McTreeDataSourceChangeTypes.Filter) {\n                if (changeObj.value && changeObj.value.length > 0) {\n                    return this.filterHandler();\n                } else {\n                    return this.expansionHandler();\n                }\n            }\n\n            return this.expansionHandler();\n        }));\n    }\n\n    filterHandler(): F[] {\n        this.filteredData.next(this.treeControl.filterModel.selected);\n\n        return this.filteredData.value;\n    }\n\n    expansionHandler(): F[] {\n        const expandedNodes = this.treeFlattener.expandFlattenedNodes(this.flattenedData.value, this.treeControl);\n        this.expandedData.next(expandedNodes);\n\n        return this.expandedData.value;\n    }\n\n    disconnect() {\n        // no op\n    }\n}\n\n","import { CollectionViewer, DataSource } from '@angular/cdk/collections';\nimport { BehaviorSubject, merge, Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\n\n/**\n * Data source for nested tree.\n *\n * The data source for nested tree doesn't have to consider node flattener, or the way to expand\n * or collapse. The expansion/collapsion will be handled by TreeControl and each non-leaf node.\n */\nexport class McTreeNestedDataSource<T> extends DataSource<T> {\n\n    get data() {\n        return this._data.value;\n    }\n\n    set data(value: T[]) {\n        this._data.next(value);\n    }\n\n    /* tslint:disable-next-line:naming-convention */\n    private _data = new BehaviorSubject<T[]>([]);\n\n    connect(collectionViewer: CollectionViewer): Observable<T[]> {\n        return merge(...[collectionViewer.viewChange, this._data])\n            .pipe(map(() => this.data));\n    }\n\n    disconnect() {\n        // no op\n    }\n}\n\n"],"names":[],"mappings":"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"}