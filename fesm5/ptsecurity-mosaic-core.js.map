{"version":3,"file":"ptsecurity-mosaic-core.js","sources":["ng://@ptsecurity/mosaic/core/utils/utils.ts","ng://@ptsecurity/mosaic/core/common-behaviors/common-module.ts","ng://@ptsecurity/mosaic/core/common-behaviors/disabled.ts","ng://@ptsecurity/mosaic/core/common-behaviors/color.ts","ng://@ptsecurity/mosaic/core/common-behaviors/tabindex.ts","ng://@ptsecurity/mosaic/core/common-behaviors/error-state.ts","ng://@ptsecurity/mosaic/core/line/line.ts","ng://@ptsecurity/mosaic/core/error/error-options.ts","ng://@ptsecurity/mosaic/core/formatters/number/formatter.ts","ng://@ptsecurity/mosaic/core/formatters/index.ts","ng://@ptsecurity/mosaic/core/validation/validation.ts","ng://@ptsecurity/mosaic/core/highlight/highlight.pipe.ts","ng://@ptsecurity/mosaic/core/highlight/index.ts","ng://@ptsecurity/mosaic/core/select/events.ts","ng://@ptsecurity/mosaic/core/select/errors.ts","ng://@ptsecurity/mosaic/core/select/constants.ts","ng://@ptsecurity/mosaic/core/select/animations.ts","ng://@ptsecurity/mosaic/core/overlay/overlay-position-map.ts","ng://@ptsecurity/mosaic/core/animation/fade-animations.ts","ng://@ptsecurity/mosaic/core/animation/animation.ts","ng://@ptsecurity/mosaic/core/label/label-options.ts","ng://@ptsecurity/mosaic/core/selection/constants.ts","ng://@ptsecurity/mosaic/core/selection/pseudo-checkbox/pseudo-checkbox.ts","ng://@ptsecurity/mosaic/core/selection/pseudo-checkbox/pseudo-checkbox.module.ts","ng://@ptsecurity/mosaic/core/services/measure-scrollbar.service.ts","ng://@ptsecurity/mosaic/core/option/optgroup.ts","ng://@ptsecurity/mosaic/core/option/option.ts","ng://@ptsecurity/mosaic/core/option/option-module.ts"],"sourcesContent":["\nexport function isBoolean(val: any): val is boolean { return typeof val === 'boolean'; }\n\nexport function toBoolean(value: any): boolean {\n    return value != null && `${value}` !== 'false';\n}\n","import { BidiModule } from '@angular/cdk/bidi';\nimport { NgModule, InjectionToken, Optional, Inject, isDevMode } from '@angular/core';\n\n\n// Injection token that configures whether the Mosaic sanity checks are enabled.\nexport const MC_SANITY_CHECKS = new InjectionToken<boolean>('mc-sanity-checks', {\n    providedIn: 'root',\n    factory: mcSanityChecksFactory\n});\n\nexport function mcSanityChecksFactory(): boolean {\n    return true;\n}\n\n/**\n * Module that captures anything that should be loaded and/or run for *all* Mosaic\n * components. This includes Bidi, etc.\n *\n * This module should be imported to each top-level component module (e.g., McTabsModule).\n */\n@NgModule({\n    imports: [ BidiModule ],\n    exports: [ BidiModule ]\n})\nexport class McCommonModule {\n    // Whether we've done the global sanity checks (e.g. a theme is loaded, there is a doctype).\n    private hasDoneGlobalChecks = false;\n\n    // Reference to the global `document` object.\n    // tslint:disable-next-line: orthodox-getter-and-setter\n    private _document = typeof document === 'object' && document ? document : null;\n\n    // Reference to the global 'window' object.\n    // tslint:disable-next-line: orthodox-getter-and-setter\n    private _window = typeof window === 'object' && window ? window : null;\n\n    constructor(@Optional() @Inject(MC_SANITY_CHECKS) private _sanityChecksEnabled: boolean) {\n        if (this.areChecksEnabled() && !this.hasDoneGlobalChecks) {\n            this.checkDoctypeIsDefined();\n            this.checkThemeIsPresent();\n            this.hasDoneGlobalChecks = true;\n        }\n    }\n\n    // Whether any sanity checks are enabled\n    private areChecksEnabled(): boolean {\n        return this._sanityChecksEnabled && isDevMode() && !this.isTestEnv();\n    }\n\n    // Whether the code is running in tests.\n    private isTestEnv() {\n        // tslint:disable-next-line\n        return this._window && (this._window['__karma__'] || this._window['jasmine']);\n    }\n\n    private checkDoctypeIsDefined(): void {\n        if (this._document && !this._document.doctype) {\n            console.warn(\n                'Current document does not have a doctype. This may cause ' +\n                'some Mosaic components not to behave as expected.'\n            );\n        }\n    }\n\n    private checkThemeIsPresent(): void {\n        if (this._document && typeof getComputedStyle === 'function') {\n            const testElement = this._document.createElement('div');\n\n            testElement.classList.add('mc-theme-loaded-marker');\n            this._document.body.appendChild(testElement);\n\n            const computedStyle = getComputedStyle(testElement);\n\n            // In some situations, the computed style of the test element can be null. For example in\n            // Firefox, the computed style is null if an application is running inside of a hidden iframe.\n            // See: https://bugzilla.mozilla.org/show_bug.cgi?id=548397\n            if (computedStyle && computedStyle.display !== 'none') {\n                console.warn(\n                    'Could not find Mosaic core theme. Most Mosaic ' +\n                    'components may not work as expected. For more info refer ' +\n                    'to the theming guide: link there'\n                );\n            }\n\n            this._document.body.removeChild(testElement);\n        }\n    }\n}\n","import { coerceBooleanProperty } from '@angular/cdk/coercion';\n\nimport { Constructor } from './constructor';\n\n\n// tslint:disable-next-line naming-convention\nexport interface CanDisable {\n    disabled: boolean;\n}\n\n/** @docs-private */\nexport type CanDisableCtor = Constructor<CanDisable>;\n\nexport function mixinDisabled<T extends Constructor<{}>>(base: T): CanDisableCtor & T {\n    return class extends base {\n        get disabled() {\n            return this._disabled;\n        }\n\n        set disabled(value: any) {\n            this._disabled = coerceBooleanProperty(value);\n        }\n\n        private _disabled: boolean = false;\n\n        constructor(...args: any[]) {\n            // tslint:disable-next-line\n            super(...args);\n        }\n    };\n}\n","import { ElementRef } from '@angular/core';\n\nimport { Constructor } from './constructor';\n\n\n// tslint:disable-next-line:naming-convention\nexport interface CanColor {\n    color: ThemePalette;\n}\n\n/** @docs-private */\nexport type CanColorCtor = Constructor<CanColor>;\n\n// tslint:disable-next-line:naming-convention\nexport interface HasElementRef {\n    _elementRef: ElementRef;\n}\n\nexport enum ThemePalette {\n    Primary = 'primary',\n    Second = 'second',\n    Error = 'error',\n    Default = 'second',\n    Empty = ''\n}\n\n/** Mixin to augment a directive with a `color` property. */\nexport function mixinColor<T extends Constructor<HasElementRef>>(\n    base: T,\n    defaultColor: ThemePalette = ThemePalette.Default\n): CanColorCtor & T {\n    return class extends base {\n\n        get color(): ThemePalette {\n            return this._color;\n        }\n\n        set color(value: ThemePalette) {\n            const colorPalette = value || defaultColor;\n\n            if (colorPalette !== this._color) {\n                if (this._color) {\n                    this._elementRef.nativeElement.classList.remove(`mc-${this._color}`);\n                }\n\n                if (colorPalette) {\n                    this._elementRef.nativeElement.classList.add(`mc-${colorPalette}`);\n                }\n\n                this._color = colorPalette;\n            }\n        }\n\n        private _color: ThemePalette;\n\n        constructor(...args: any[]) {\n            super(...args);\n\n            this.color = defaultColor;\n        }\n    };\n}\n\n","import { Constructor } from './constructor';\nimport { CanDisable } from './disabled';\n\n\n// tslint:disable-next-line:naming-convention\nexport interface HasTabIndex {\n    tabIndex: number;\n}\n\nexport type HasTabIndexCtor = Constructor<HasTabIndex>;\n\n// Mixin to augment a directive with a `tabIndex` property.\nexport function mixinTabIndex<T extends Constructor<CanDisable>>(base: T, defaultTabIndex = 0): HasTabIndexCtor & T {\n    return class extends base {\n        get tabIndex(): number {\n            return this.disabled ? -1 : this._tabIndex;\n        }\n\n        set tabIndex(value: number) {\n            this._tabIndex = value != null ? value : defaultTabIndex;\n        }\n\n        private _tabIndex: number = defaultTabIndex;\n\n        constructor(...args: any[]) {\n            super(...args);\n        }\n    };\n}\n","import { FormControl, FormGroupDirective, NgControl, NgForm } from '@angular/forms';\nimport { Subject } from 'rxjs';\n\nimport { ErrorStateMatcher } from '../error/error-options';\n\nimport { Constructor } from './constructor';\n\n\n/** @docs-private */\n// tslint:disable-next-line:naming-convention\nexport interface CanUpdateErrorState {\n\n    readonly stateChanges: Subject<void>;\n\n    errorState: boolean;\n    errorStateMatcher: ErrorStateMatcher;\n\n    updateErrorState();\n}\n\n/** @docs-private */\nexport type CanUpdateErrorStateCtor = Constructor<CanUpdateErrorState>;\n\n/** @docs-private */\n// tslint:disable-next-line:naming-convention\nexport interface HasErrorState {\n    parentFormGroup: FormGroupDirective;\n    parentForm: NgForm;\n    defaultErrorStateMatcher: ErrorStateMatcher;\n    ngControl: NgControl;\n}\n\n/**\n * Mixin to augment a directive with updateErrorState method.\n * For component with `errorState` and need to update `errorState`.\n */\nexport function mixinErrorState<T extends Constructor<HasErrorState>>(base: T): CanUpdateErrorStateCtor & T {\n    return class extends base {\n        /** Whether the component is in an error state. */\n        errorState: boolean = false;\n\n        /**\n         * Stream that emits whenever the state of the input changes such that the wrapping\n         * `MatFormField` needs to run change detection.\n         */\n        readonly stateChanges = new Subject<void>();\n\n        errorStateMatcher: ErrorStateMatcher;\n\n        constructor(...args: any[]) {\n            super(...args);\n        }\n\n        updateErrorState() {\n            const oldState = this.errorState;\n            const parent = this.parentFormGroup || this.parentForm;\n            const matcher = this.errorStateMatcher || this.defaultErrorStateMatcher;\n            const control = this.ngControl ? this.ngControl.control as FormControl : null;\n            const newState = matcher.isErrorState(control, parent);\n\n            if (newState !== oldState) {\n                this.errorState = newState;\n                this.stateChanges.next();\n            }\n        }\n    };\n}\n","import { NgModule, Directive, ElementRef, QueryList } from '@angular/core';\n\n\n/**\n * Shared directive to count lines inside a text area, such as a list item.\n * Line elements can be extracted with a @ContentChildren(McLine) query, then\n * counted by checking the query list's length.\n */\n@Directive({\n    selector: '[mc-line], [mcLine]',\n    host: { class: 'mc-line' }\n})\nexport class McLine {}\n\n/**\n * Helper that takes a query list of lines and sets the correct class on the host.\n * @docs-private\n */\nexport class McLineSetter {\n    constructor(private _lines: QueryList<McLine>, private _element: ElementRef) {\n        this.setLineClass(this._lines.length);\n\n        this._lines.changes.subscribe(() => {\n            this.setLineClass(this._lines.length);\n        });\n    }\n\n    private setLineClass(count: number): void {\n        const minLineClassNumber = 2;\n        const maxLineClassNumber = 3;\n        this.resetClasses();\n        if (count === minLineClassNumber || count === maxLineClassNumber) {\n            this.setClass(`mc-${count}-line`, true);\n        } else if (count > maxLineClassNumber) {\n            this.setClass(`mc-multi-line`, true);\n        }\n    }\n\n    private resetClasses(): void {\n        this.setClass('mc-2-line', false);\n        this.setClass('mc-3-line', false);\n        this.setClass('mc-multi-line', false);\n    }\n\n    private setClass(className: string, isAdd: boolean): void {\n        if (isAdd) {\n            this._element.nativeElement.classList.add(className);\n        } else {\n            this._element.nativeElement.classList.remove(className);\n        }\n    }\n}\n\n@NgModule({\n    imports: [],\n    exports: [McLine],\n    declarations: [McLine]\n})\nexport class McLineModule {}\n","import { Injectable } from '@angular/core';\nimport { FormGroupDirective, NgForm, FormControl } from '@angular/forms';\n\n\n/** Error state matcher that matches when a control is invalid and dirty. */\n@Injectable()\nexport class ShowOnDirtyErrorStateMatcher implements ErrorStateMatcher {\n    isErrorState(control: FormControl | null, form: FormGroupDirective | NgForm | null): boolean {\n        return !!(control && control.invalid && (control.dirty || (form && form.submitted)));\n    }\n}\n\n/** Provider that defines how form controls behave with regards to displaying error messages. */\n@Injectable({ providedIn: 'root' })\nexport class ErrorStateMatcher {\n    isErrorState(control: FormControl | null, form: FormGroupDirective | NgForm | null): boolean {\n        return !!(control && control.invalid && (control.touched || (form && form.submitted)));\n    }\n}\n","/* tslint:disable:naming-convention */\nimport { Inject, Injectable, InjectionToken, Optional, Pipe, PipeTransform } from '@angular/core';\n\n\nexport const MC_LOCALE_ID = new InjectionToken<string>('McLocaleId');\n\nexport const DEFAULT_MC_LOCALE_ID = 'ru';\n\n\nfunction isEmpty(value: any): boolean {\n    return value == null || value === '' || value !== value;\n}\n\nfunction strToNumber(value: number | string): number {\n    if (typeof value === 'string' && !isNaN(Number(value) - parseFloat(value))) {\n        return Number(value);\n    }\n\n    if (typeof value !== 'number') {\n        throw new Error(`${value} is not a number`);\n    }\n\n    return value;\n}\n\nexport const NUMBER_FORMAT_REGEXP = /^(\\d+)?\\.((\\d+)(-(\\d+))?)?$/;\n\nconst minIntGroupPosition = 1;\nconst minFractionGroupPosition = 3;\nconst maxFractionGroupPosition = 5;\n\ninterface NumberFormatOptions {\n    useGrouping: boolean;\n\n    minimumIntegerDigits: number;\n    minimumFractionDigits: number;\n    maximumFractionDigits: number;\n    minimumSignificantDigits: number;\n    maximumSignificantDigits: number;\n\n    localeMatcher?: string;\n    style?: string;\n\n    currency?: string;\n    currencyDisplay?: string;\n}\n\nclass ParsedDigitsInfo {\n    minimumIntegerDigits: number;\n    minimumFractionDigits: number;\n    maximumFractionDigits: number;\n}\n\nfunction parseDigitsInfo(digitsInfo: string): ParsedDigitsInfo {\n    const parts = digitsInfo.match(NUMBER_FORMAT_REGEXP);\n\n    if (parts === null) {\n        throw new Error(`${digitsInfo} is not a valid digit info`);\n    }\n\n    const minIntPart = parts[minIntGroupPosition];\n    const minFractionPart = parts[minFractionGroupPosition];\n    const maxFractionPart = parts[maxFractionGroupPosition];\n\n    const result = new ParsedDigitsInfo();\n\n    if (minIntPart != null) {\n        result.minimumIntegerDigits = parseInt(minIntPart);\n    }\n\n    if (minFractionPart != null) {\n        result.minimumFractionDigits = parseInt(minFractionPart);\n    }\n\n    if (maxFractionPart != null) {\n        result.maximumFractionDigits = parseInt(maxFractionPart);\n    } else if (minFractionPart != null && result.minimumFractionDigits > result.maximumFractionDigits) {\n        result.maximumFractionDigits = result.minimumFractionDigits;\n    }\n\n    return result;\n}\n\n\n@Injectable({ providedIn: 'root' })\n@Pipe({name: 'mcNumber'})\nexport class McDecimalPipe implements PipeTransform {\n    constructor(@Optional() @Inject(MC_LOCALE_ID) private _locale: string) {}\n\n    /**\n     * @param value The number to be formatted.\n     * @param digitsInfo Decimal representation options, specified by a string\n     * in the following format:<br>\n     * <code>{minIntegerDigits}.{minFractionDigits}-{maxFractionDigits}</code>.\n     *   - `minIntegerDigits`: The minimum number of integer digits before the decimal point.\n     * Default is `1`.\n     *   - `minFractionDigits`: The minimum number of digits after the decimal point.\n     * Default is `0`.\n     *   - `maxFractionDigits`: The maximum number of digits after the decimal point.\n     * Default is `3`.\n     * @param locale A locale code for the locale format rules to use.\n     * When not supplied, uses the value of `MC_LOCALE_ID`, which is `ru` by default.\n     */\n    transform(value: any, digitsInfo?: string, locale?: string): string | null {\n        if (isEmpty(value)) { return null; }\n\n        const currentLocale = locale || this._locale || DEFAULT_MC_LOCALE_ID;\n\n        let parsedDigitsInfo;\n\n        if (digitsInfo) {\n            parsedDigitsInfo = parseDigitsInfo(digitsInfo);\n        }\n\n        const options: NumberFormatOptions = {\n            useGrouping: true,\n            minimumIntegerDigits: 1,\n            minimumFractionDigits: 0,\n            maximumFractionDigits: 3,\n            ...parsedDigitsInfo\n        };\n\n        try {\n            const num = strToNumber(value);\n\n            return Intl.NumberFormat.call(this, currentLocale, options).format(num);\n        } catch (error) {\n            throw Error(`InvalidPipeArgument: McDecimalPipe for pipe '${JSON.stringify(error.message)}'`);\n        }\n    }\n}\n","import { NgModule } from '@angular/core';\n\nimport { McDecimalPipe } from './number/formatter';\n\n\n@NgModule({\n    exports: [\n        McDecimalPipe\n    ],\n    declarations: [\n        McDecimalPipe\n    ]\n})\nexport class McFormattersModule {}\n\n\nexport * from './number/formatter';\n","import { InjectionToken } from '@angular/core';\nimport {\n    AbstractControl,\n    NgControl,\n    NgForm,\n    RequiredValidator,\n    ValidationErrors,\n    Validator,\n    ValidatorFn\n} from '@angular/forms';\n\n\n// tslint:disable-next-line:naming-convention\nexport interface McValidationOptions {\n    useValidation: boolean;\n}\n\nexport const MC_VALIDATION = new InjectionToken<McValidationOptions>(\n    'McUseValidation',\n    { factory: () => ({ useValidation: true }) }\n    );\n\n\nfunction setValidState(control: AbstractControl, validator: ValidatorFn): void {\n    if (!control) { return; }\n\n    control.clearValidators();\n    control.updateValueAndValidity({ emitEvent: false });\n    control.setValidators(validator);\n}\n\n\n/** This function do next:\n * - run validation on submitting parent form\n * - prevent validation in required validator if form doesn't submitted\n * - if control has focus validation will be prevented\n */\nexport function setMosaicValidation(component) {\n    const ngControl = component.ngControl;\n\n    if (!ngControl) { return; }\n\n    const parentForm: NgForm = component.parentForm || component.parentFormGroup;\n\n    if (parentForm) {\n        parentForm.ngSubmit.subscribe(() => {\n            // tslint:disable-next-line: no-unnecessary-type-assertion\n            ngControl.control!.updateValueAndValidity({ emitEvent: false });\n        });\n    }\n\n    if (component.ngModel) {\n        setMosaicValidationForModelControl(component, component.rawValidators, parentForm);\n    } else if (component.formControlName || component.ngControl) {\n        setMosaicValidationForFormControl(component, parentForm, ngControl);\n    }\n}\nexport function setMosaicValidationForModelControl(component, validators: Validator[], parentForm: NgForm) {\n    if (!validators) { return; }\n\n    validators.forEach((validator: Validator) => {\n        // tslint:disable-next-line: no-unbound-method\n        const originalValidate = validator.validate;\n\n        if (validator instanceof RequiredValidator) {\n            // changed required validation logic\n            validator.validate = (control: AbstractControl): ValidationErrors | null => {\n                if (parentForm && !parentForm.submitted) { return null; }\n\n                return originalValidate.call(validator, control);\n            };\n        } else {\n            // changed all other validation logic\n            validator.validate = (control: AbstractControl): ValidationErrors | null => {\n                if (component.focused) { return null; }\n\n                return originalValidate.call(validator, control);\n            };\n        }\n    });\n}\n\nexport function setMosaicValidationForFormControl(component, parentForm: NgForm, ngControl: NgControl) {\n    const originalValidator = ngControl.control!.validator;\n\n    // changed required validation logic after initialization\n    if (ngControl.invalid && ngControl.errors!.required) {\n        Promise.resolve().then(() => setValidState(ngControl.control!, originalValidator!));\n    }\n\n    // check dynamic updates\n    ngControl.statusChanges!\n        .subscribe(() => {\n            // changed required validation logic\n            if (ngControl.invalid && (parentForm && !parentForm.submitted) && ngControl.errors!.required) {\n                setValidState(ngControl.control!, originalValidator!);\n            }\n\n            // changed all other validation logic\n            if (ngControl.invalid && component.focused) {\n                setValidState(ngControl.control!, originalValidator!);\n            }\n        });\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n\n@Pipe({ name: 'mcHighlight' })\nexport class McHighlightPipe implements PipeTransform {\n    transform(value: any, args: any): any {\n        if (!args) { return value; }\n\n        return value.replace(new RegExp(`(${args})`, 'gi'), '<mark class=\"mc-highlight\">$1</mark>');\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { McHighlightPipe } from './highlight.pipe';\n\n\n@NgModule({\n    imports: [CommonModule],\n    exports: [McHighlightPipe],\n    declarations: [McHighlightPipe]\n})\nexport class McHighlightModule {}\n\n\nexport * from './highlight.pipe';\n","export const selectEvents = 'selectEvents';\n","/**\n * Returns an exception to be thrown when attempting to change a select's `multiple` option\n * after initialization.\n * @docs-private\n */\nexport function getMcSelectDynamicMultipleError(): Error {\n    return Error('Cannot change `multiple` mode of select after initialization.');\n}\n\n/**\n * Returns an exception to be thrown when attempting to assign a non-array value to a select\n * in `multiple` mode. Note that `undefined` and `null` are still valid values to allow for\n * resetting the value.\n * @docs-private\n */\nexport function getMcSelectNonArrayValueError(): Error {\n    return Error('Value must be an array in multiple-selection mode.');\n}\n\n/**\n * Returns an exception to be thrown when assigning a non-function value to the comparator\n * used to determine if a value corresponds to an option. Note that whether the function\n * actually takes two values and returns a boolean is not checked.\n */\nexport function getMcSelectNonFunctionValueError(): Error {\n    return Error('`compareWith` must be a function.');\n}\n","import { ScrollStrategy, Overlay, RepositionScrollStrategy } from '@angular/cdk/overlay';\nimport { InjectionToken } from '@angular/core';\n\n\n/** The max height of the select's overlay panel */\nexport const SELECT_PANEL_MAX_HEIGHT = 224;\n\n/** The panel's padding on the x-axis */\nexport const SELECT_PANEL_PADDING_X = 1;\n\n/** The panel's x axis padding if it is indented (e.g. there is an option group). */\n/* tslint:disable-next-line:no-magic-numbers */\nexport const SELECT_PANEL_INDENT_PADDING_X = SELECT_PANEL_PADDING_X * 2;\n\n/**\n * The select panel will only \"fit\" inside the viewport if it is positioned at\n * this value or more away from the viewport boundary.\n */\nexport const SELECT_PANEL_VIEWPORT_PADDING = 8;\n\n\n/** Injection token that determines the scroll handling while a select is open. */\nexport const MC_SELECT_SCROLL_STRATEGY =\n    new InjectionToken<() => ScrollStrategy>('mc-select-scroll-strategy');\n\n/** @docs-private */\nexport function mcSelectScrollStrategyProviderFactory(overlay: Overlay):\n    () => RepositionScrollStrategy {\n    return () => overlay.scrollStrategies.reposition();\n}\n\n/** @docs-private */\nexport const MC_SELECT_SCROLL_STRATEGY_PROVIDER = {\n    provide: MC_SELECT_SCROLL_STRATEGY,\n    deps: [Overlay],\n    useFactory: mcSelectScrollStrategyProviderFactory\n};\n","import {\n    animate,\n    AnimationTriggerMetadata,\n    state,\n    style,\n    transition,\n    trigger,\n    query,\n    animateChild,\n    group\n} from '@angular/animations';\n\n\n/**\n * The following are all the animations for the mc-select component, with each\n * const containing the metadata for one animation.\n *\n */\nexport const mcSelectAnimations: {\n    readonly transformPanel: AnimationTriggerMetadata;\n    readonly fadeInContent: AnimationTriggerMetadata;\n} = {\n    /**\n     * This animation transforms the select's overlay panel on and off the page.\n     *\n     * When the panel is attached to the DOM, it expands its width by the amount of padding, scales it\n     * up to 100% on the Y axis, fades in its border, and translates slightly up and to the\n     * side to ensure the option text correctly overlaps the trigger text.\n     *\n     * When the panel is removed from the DOM, it simply fades out linearly.\n     */\n    transformPanel: trigger('transformPanel', [\n        state('void', style({\n            transform: 'scaleY(0)',\n            minWidth: '100%',\n            opacity: 0\n        })),\n        transition('void => *', group([\n            query('@fadeInContent', animateChild()),\n            animate('150ms cubic-bezier(0.25, 0.8, 0.25, 1)')\n        ])),\n        transition('* => void', [\n            animate('250ms 100ms linear', style({ opacity: 0 }))\n        ])\n    ]),\n\n    /**\n     * This animation fades in the background color and text content of the\n     * select's options. It is time delayed to occur 100ms after the overlay\n     * panel has transformed in.\n     */\n    fadeInContent: trigger('fadeInContent', [\n        state('showing', style({ opacity: 1 })),\n        transition('void => showing', [\n            style({ opacity: 0 }),\n            animate('150ms 100ms cubic-bezier(0.55, 0, 0.55, 0.2)')\n        ])\n    ])\n};\n\n\n/**\n * @deprecated\n * @breaking-change 7.0.0\n */\nexport const transformPanel = mcSelectAnimations.transformPanel;\n\n/**\n * @deprecated\n * @breaking-change 7.0.0\n */\nexport const fadeInContent = mcSelectAnimations.fadeInContent;\n","import { ConnectionPositionPair } from '@angular/cdk/overlay';\n\n\nexport const POSITION_MAP: { [key: string]: ConnectionPositionPair } = {\n    top         : {\n        originX : 'center',\n        originY : 'top',\n        overlayX: 'center',\n        overlayY: 'bottom'\n    },\n    topCenter   : {\n        originX : 'center',\n        originY : 'top',\n        overlayX: 'center',\n        overlayY: 'bottom'\n    },\n    topLeft     : {\n        originX : 'start',\n        originY : 'top',\n        overlayX: 'start',\n        overlayY: 'bottom'\n    },\n    topRight    : {\n        originX : 'end',\n        originY : 'top',\n        overlayX: 'end',\n        overlayY: 'bottom'\n    },\n    right       : {\n        originX : 'end',\n        originY : 'center',\n        overlayX: 'start',\n        overlayY: 'center'\n    },\n    rightTop    : {\n        originX : 'end',\n        originY : 'top',\n        overlayX: 'start',\n        overlayY: 'top'\n    },\n    rightBottom : {\n        originX : 'end',\n        originY : 'bottom',\n        overlayX: 'start',\n        overlayY: 'bottom'\n    },\n    bottom      : {\n        originX : 'center',\n        originY : 'bottom',\n        overlayX: 'center',\n        overlayY: 'top'\n    },\n    bottomCenter: {\n        originX : 'center',\n        originY : 'bottom',\n        overlayX: 'center',\n        overlayY: 'top'\n    },\n    bottomLeft  : {\n        originX : 'start',\n        originY : 'bottom',\n        overlayX: 'start',\n        overlayY: 'top'\n    },\n    bottomRight : {\n        originX : 'end',\n        originY : 'bottom',\n        overlayX: 'end',\n        overlayY: 'top'\n    },\n    left        : {\n        originX : 'start',\n        originY : 'center',\n        overlayX: 'end',\n        overlayY: 'center'\n    },\n    leftTop     : {\n        originX : 'start',\n        originY : 'top',\n        overlayX: 'end',\n        overlayY: 'top'\n    },\n    leftBottom  : {\n        originX : 'start',\n        originY : 'bottom',\n        overlayX: 'end',\n        overlayY: 'bottom'\n    }\n};\n\nexport const DEFAULT_4_POSITIONS = objectValues([\n    POSITION_MAP.top, POSITION_MAP.right, POSITION_MAP.bottom, POSITION_MAP.left\n]);\n\nexport const EXTENDED_OVERLAY_POSITIONS = objectValues([\n    POSITION_MAP.top, POSITION_MAP.topLeft, POSITION_MAP.topRight, POSITION_MAP.right, POSITION_MAP.rightTop,\n    POSITION_MAP.rightBottom, POSITION_MAP.bottom, POSITION_MAP.bottomLeft, POSITION_MAP.bottomRight,\n    POSITION_MAP.left, POSITION_MAP.leftTop, POSITION_MAP.leftBottom\n]);\n\nexport const POSITION_TO_CSS_MAP: {[key: string]: string} = {\n    top: 'top',\n    topLeft: 'top-left',\n    topRight: 'top-right',\n    right: 'right',\n    rightTop: 'right-top',\n    rightBottom: 'right-bottom',\n    left: 'left',\n    leftTop: 'left-top',\n    leftBottom: 'left-bottom',\n    bottom: 'bottom',\n    bottomLeft: 'bottom-left',\n    bottomRight: 'bottom-right'\n};\n\nfunction arrayMap<T, S>(array: T[], iteratee: (item: T, index: number, arr: T[]) => S): S[] {\n    let index = -1;\n    const length = array == null ? 0 : array.length;\n    const result = Array(length);\n\n    while (++index < length) {\n        result[ index ] = iteratee(array[ index ], index, array);\n    }\n\n    return result;\n}\nfunction baseValues<T>(object: { [key: string]: T } | T[], props: string[]): T[] {\n    return arrayMap(props,  (key) => {\n        return object[ key ];\n    });\n}\nfunction objectValues<T>(object: { [key: string]: T } | T[]): T[] {\n    return object == null ? [] : baseValues(object, Object.keys(object));\n}\n","import {\n    animate,\n    state,\n    style,\n    transition,\n    trigger,\n    AnimationTriggerMetadata\n} from '@angular/animations';\n\n\nexport const fadeAnimation: AnimationTriggerMetadata =  trigger('fadeAnimation', [\n    state('void', style({ opacity: 0 })),\n    state('true', style({ opacity: 1 })),\n    state('false', style({ opacity: 0 })),\n    transition('* => true', animate('150ms cubic-bezier(0.0, 0.0, 0.2, 1)')),\n    transition('* => void', animate('150ms cubic-bezier(0.4, 0.0, 1, 1)'))\n]);\n","export enum AnimationCurves {\n    StandardCurve = 'cubic-bezier(0.4,0.0,0.2,1)',\n    DecelerationCurve = 'cubic-bezier(0.0,0.0,0.2,1)',\n    AccelerationCurve = 'cubic-bezier(0.4,0.0,1,1)',\n    SharpCurve = 'cubic-bezier(0.4,0.0,0.6,1)'\n}\n","import { InjectionToken } from '@angular/core';\n\n\n/** InjectionToken that can be used to specify the global label options. */\nexport const MC_LABEL_GLOBAL_OPTIONS =\n    new InjectionToken<LabelOptions>('mc-label-global-options');\n\n/** Type for the available floatLabel values. */\nexport type FloatLabelType = 'always' | 'never' | 'auto';\n\n/** Configurable options for floating labels. */\n// tslint:disable-next-line:naming-convention\nexport interface LabelOptions {\n    /**\n     * Whether the label should float `always`, `never`, or `auto` (only when necessary).\n     * Default behavior is assumed to be `auto`.\n     */\n    float?: FloatLabelType;\n}\n","export enum MultipleMode {\n    CHECKBOX = 'checkbox',\n    KEYBOARD = 'keyboard'\n}\n","import { Component, ViewEncapsulation, Input, ChangeDetectionStrategy } from '@angular/core';\n\n\nexport type McPseudoCheckboxState = 'unchecked' | 'checked' | 'indeterminate';\n\n/**\n * Component that shows a simplified checkbox without including any kind of \"real\" checkbox.\n * Meant to be used when the checkbox is purely decorative and a large number of them will be\n * included, such as for the options in a multi-select. Uses no SVGs or complex animations.\n * Note that theming is meant to be handled by the parent element, e.g.\n * `mc-primary .mc-pseudo-checkbox`.\n *\n * Note that this component will be completely invisible to screen-reader users. This is *not*\n * interchangeable with `<mc-checkbox>` and should *not* be used if the user would directly\n * interact with the checkbox. The pseudo-checkbox should only be used as an implementation detail\n * of more complex components that appropriately handle selected / checked state.\n * @docs-private\n */\n@Component({\n    selector: 'mc-pseudo-checkbox',\n    templateUrl: 'pseudo-checkbox.partial.html',\n    styleUrls: ['pseudo-checkbox.scss'],\n    host: {\n        class: 'mc-pseudo-checkbox',\n        '[class.mc-indeterminate]': 'state === \"indeterminate\"',\n        '[class.mc-checked]': 'state === \"checked\"',\n        '[class.mc-disabled]': 'disabled'\n    },\n    preserveWhitespaces: false,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None\n})\nexport class McPseudoCheckbox {\n    @Input() state: McPseudoCheckboxState = 'unchecked';\n\n    @Input() disabled: boolean = false;\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { McPseudoCheckbox } from './pseudo-checkbox';\n\n\n@NgModule({\n    imports: [CommonModule],\n    exports: [McPseudoCheckbox],\n    declarations: [McPseudoCheckbox]\n})\nexport class McPseudoCheckboxModule {}\n","import { DOCUMENT } from '@angular/common';\nimport { Inject, Injectable } from '@angular/core';\n\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class McMeasureScrollbarService {\n\n    get scrollBarWidth(): number {\n        if (this._scrollBarWidth) {\n            return this._scrollBarWidth;\n        }\n        this.initScrollBarWidth();\n\n        return this._scrollBarWidth;\n    }\n\n    private _scrollBarWidth: number;\n    private scrollbarMeasure = {\n        position: 'absolute',\n        top: '-9999px',\n        width: '50px',\n        height: '50px',\n        overflow: 'scroll'\n    };\n\n    constructor(\n        @Inject(DOCUMENT) private document: any\n    ) {\n        this.initScrollBarWidth();\n    }\n\n    initScrollBarWidth() {\n        const scrollDiv = this.document.createElement('div');\n\n        // tslint:disable-next-line\n        for (const scrollProp in this.scrollbarMeasure) {\n            if (this.scrollbarMeasure.hasOwnProperty(scrollProp)) {\n                scrollDiv.style[scrollProp] = this.scrollbarMeasure[scrollProp];\n            }\n        }\n\n        this.document.body.appendChild(scrollDiv);\n\n        const width = scrollDiv.offsetWidth - scrollDiv.clientWidth;\n\n        this.document.body.removeChild(scrollDiv);\n        this._scrollBarWidth = width;\n    }\n}\n","import { Component, ViewEncapsulation, Input, ChangeDetectionStrategy } from '@angular/core';\n\nimport { mixinDisabled, CanDisable, CanDisableCtor } from '../common-behaviors/index';\n\n\n/** @docs-private */\nexport class McOptgroupBase {}\n\n// tslint:disable-next-line: naming-convention\nexport const McOptgroupMixinBase: CanDisableCtor & typeof McOptgroupBase = mixinDisabled(McOptgroupBase);\n\nlet uniqueOptgroupIdCounter = 0;\n\n/**\n * Component that is used to group instances of `mc-option`.\n */\n@Component({\n    selector: 'mc-optgroup',\n    exportAs: 'mcOptgroup',\n    templateUrl: 'optgroup.html',\n    styleUrls: ['./optgroup.scss'],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    inputs: ['disabled'],\n    host: {\n        class: 'mc-optgroup',\n        '[class.mc-disabled]': 'disabled'\n    }\n})\nexport class McOptgroup extends McOptgroupMixinBase implements CanDisable {\n    @Input() label: string;\n\n    /** Unique id for the underlying label. */\n    labelId: string = `mc-optgroup-label-${uniqueOptgroupIdCounter++}`;\n}\n","import { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport {\n    AfterViewChecked,\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    ElementRef,\n    EventEmitter,\n    Inject,\n    InjectionToken,\n    Input,\n    OnDestroy,\n    Optional,\n    Output,\n    QueryList,\n    ViewEncapsulation\n} from '@angular/core';\nimport { ENTER, SPACE } from '@ptsecurity/cdk/keycodes';\nimport { Subject } from 'rxjs';\n\nimport { McOptgroup } from './optgroup';\n\n\n/**\n * Option IDs need to be unique across components, so this counter exists outside of\n * the component definition.\n */\nlet uniqueIdCounter = 0;\n\n/** Event object emitted by McOption when selected or deselected. */\nexport class McOptionSelectionChange {\n    constructor(public source: McOption, public isUserInput = false) {}\n}\n\n/**\n * Describes a parent component that manages a list of options.\n * Contains properties that the options can inherit.\n * @docs-private\n */\n// tslint:disable-next-line: naming-convention\nexport interface McOptionParentComponent {\n    multiple?: boolean;\n}\n\n/**\n * Injection token used to provide the parent component to options.\n */\nexport const MC_OPTION_PARENT_COMPONENT =\n    new InjectionToken<McOptionParentComponent>('MC_OPTION_PARENT_COMPONENT');\n\n/**\n * Single option inside of a `<mc-select>` element.\n */\n@Component({\n    selector: 'mc-option',\n    exportAs: 'mcOption',\n    host: {\n        '[attr.tabindex]': 'getTabIndex()',\n        class: 'mc-option',\n        '[class.mc-selected]': 'selected',\n        '[class.mc-option-multiple]': 'multiple',\n        '[class.mc-active]': 'active',\n        '[class.mc-disabled]': 'disabled',\n        '[id]': 'id',\n\n        '(click)': 'selectViaInteraction()',\n        '(keydown)': 'handleKeydown($event)'\n    },\n    styleUrls: ['option.scss'],\n    templateUrl: 'option.html',\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class McOption implements AfterViewChecked, OnDestroy {\n    /** The form value of the option. */\n    @Input() value: any;\n\n    @Input()\n    get showCheckbox() {\n        return this._showCheckbox === undefined ? this.multiple : this._showCheckbox;\n    }\n\n    set showCheckbox(value) {\n        this._showCheckbox = coerceBooleanProperty(value);\n    }\n\n    private _showCheckbox: boolean;\n\n    /** Event emitted when the option is selected or deselected. */\n    // tslint:disable-next-line:no-output-on-prefix\n    @Output() readonly onSelectionChange = new EventEmitter<McOptionSelectionChange>();\n\n    /** Emits when the state of the option changes and any parents have to be notified. */\n    readonly stateChanges = new Subject<void>();\n\n    /**\n     * The displayed value of the option. It is necessary to show the selected option in the\n     * select's trigger.\n     */\n    get viewValue(): string {\n        // TODO: Add input property alternative for node envs.\n        return (this.getHostElement().textContent || '').trim();\n    }\n\n    /** Whether the wrapping component is in multiple selection mode. */\n    get multiple() {\n        return this.parent && this.parent.multiple;\n    }\n\n    get id(): string {\n        return this._id;\n    }\n\n    private _id = `mc-option-${uniqueIdCounter++}`;\n\n    get selected(): boolean {\n        return this._selected;\n    }\n\n    private _selected = false;\n\n    @Input()\n    get disabled() {\n        return (this.group && this.group.disabled) || this._disabled;\n    }\n\n    set disabled(value: any) {\n        this._disabled = coerceBooleanProperty(value);\n    }\n\n    private _disabled = false;\n\n    /**\n     * Whether or not the option is currently active and ready to be selected.\n     * An active option displays styles as if it is focused, but the\n     * focus is actually retained somewhere else. This comes in handy\n     * for components like autocomplete where focus must remain on the input.\n     */\n    get active(): boolean {\n        return this._active;\n    }\n\n    private _active = false;\n\n    private mostRecentViewValue = '';\n\n    constructor(\n        private readonly element: ElementRef,\n        private readonly changeDetectorRef: ChangeDetectorRef,\n        @Optional() @Inject(MC_OPTION_PARENT_COMPONENT) private readonly parent: McOptionParentComponent,\n        @Optional() readonly group: McOptgroup\n    ) {}\n\n    ngAfterViewChecked() {\n        // Since parent components could be using the option's label to display the selected values\n        // (e.g. `mc-select`) and they don't have a way of knowing if the option's label has changed\n        // we have to check for changes in the DOM ourselves and dispatch an event. These checks are\n        // relatively cheap, however we still limit them only to selected options in order to avoid\n        // hitting the DOM too often.\n        if (this._selected) {\n            const viewValue = this.viewValue;\n\n            if (viewValue !== this.mostRecentViewValue) {\n                this.mostRecentViewValue = viewValue;\n                this.stateChanges.next();\n            }\n        }\n    }\n\n    ngOnDestroy() {\n        this.stateChanges.complete();\n    }\n\n    getHeight(): number {\n        // tslint:disable-next-line:naming-convention\n        const DOMRect: DOMRect = this.element.nativeElement.getClientRects()[0];\n\n        return DOMRect ? DOMRect.height : 0;\n    }\n\n    select(): void {\n        if (!this._selected) {\n            this._selected = true;\n\n            this.changeDetectorRef.markForCheck();\n            this.emitSelectionChangeEvent();\n        }\n    }\n\n    deselect(): void {\n        if (this._selected) {\n            this._selected = false;\n\n            this.changeDetectorRef.markForCheck();\n            this.emitSelectionChangeEvent();\n        }\n    }\n\n    focus(): void {\n        const element = this.getHostElement();\n\n        if (typeof element.focus === 'function') {\n            element.focus();\n        }\n    }\n\n    /**\n     * This method sets display styles on the option to make it appear\n     * active. This is used by the ActiveDescendantKeyManager so key\n     * events will display the proper options as active on arrow key events.\n     */\n    setActiveStyles(): void {\n        if (!this._active) {\n            this._active = true;\n            this.changeDetectorRef.markForCheck();\n        }\n    }\n\n    /**\n     * This method removes display styles on the option that made it appear\n     * active. This is used by the ActiveDescendantKeyManager so key\n     * events will display the proper options as active on arrow key events.\n     */\n    setInactiveStyles(): void {\n        if (this._active) {\n            this._active = false;\n            this.changeDetectorRef.markForCheck();\n        }\n    }\n\n    /** Gets the label to be used when determining whether the option should be focused. */\n    getLabel(): string {\n        return this.viewValue;\n    }\n\n    /** Ensures the option is selected when activated from the keyboard. */\n    handleKeydown(event: KeyboardEvent): void {\n        // tslint:disable-next-line\n        if (event.keyCode === ENTER || event.keyCode === SPACE) {\n            this.selectViaInteraction();\n\n            // Prevent the page from scrolling down and form submits.\n            event.preventDefault();\n        }\n    }\n\n    /**\n     * `Selects the option while indicating the selection came from the user. Used to\n     * determine if the select's view -> model callback should be invoked.`\n     */\n    selectViaInteraction(): void {\n        if (!this.disabled) {\n            this._selected = this.multiple ? !this._selected : true;\n\n            this.changeDetectorRef.markForCheck();\n            this.emitSelectionChangeEvent(true);\n        }\n    }\n\n    getTabIndex(): string {\n        return this.disabled ? '-1' : '0';\n    }\n\n    getHostElement(): HTMLElement {\n        return this.element.nativeElement;\n    }\n\n    /** Emits the selection change event. */\n    private emitSelectionChangeEvent(isUserInput = false): void {\n        this.onSelectionChange.emit(new McOptionSelectionChange(this, isUserInput));\n    }\n}\n\n/**\n * Counts the amount of option group labels that precede the specified option.\n * @param optionIndex Index of the option at which to start counting.\n * @param options Flat list of all of the options.\n * @param optionGroups Flat list of all of the option groups.\n * @docs-private\n */\nexport function countGroupLabelsBeforeOption(\n    optionIndex: number,\n    options: QueryList<McOption>,\n    optionGroups: QueryList<McOptgroup>\n): number {\n\n    if (optionGroups.length) {\n        const optionsArray = options.toArray();\n        const groups = optionGroups.toArray();\n\n        let groupCounter = 0;\n\n        for (let i = 0; i < optionIndex + 1; i++) {\n            if (optionsArray[i].group && optionsArray[i].group === groups[groupCounter]) {\n                groupCounter++;\n            }\n        }\n\n        return groupCounter;\n    }\n\n    return 0;\n}\n\n/**\n * Determines the position to which to scroll a panel in order for an option to be into view.\n * @param optionIndex Index of the option to be scrolled into the view.\n * @param optionHeight Height of the options.\n * @param currentScrollPosition Current scroll position of the panel.\n * @param panelHeight Height of the panel.\n * @docs-private\n */\nexport function getOptionScrollPosition(\n    optionIndex: number,\n    optionHeight: number,\n    currentScrollPosition: number,\n    panelHeight: number\n): number {\n    const optionOffset = optionIndex * optionHeight;\n\n    if (optionOffset < currentScrollPosition) { return optionOffset; }\n\n    if (optionOffset + optionHeight > currentScrollPosition + panelHeight) {\n        return Math.max(0, optionOffset - panelHeight + optionHeight);\n    }\n\n    return currentScrollPosition;\n}\n\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { McPseudoCheckboxModule } from '../selection/index';\n\nimport { McOptgroup } from './optgroup';\nimport { McOption } from './option';\n\n\n@NgModule({\n    imports: [CommonModule, McPseudoCheckboxModule],\n    exports: [McOption, McOptgroup],\n    declarations: [McOption, McOptgroup]\n})\nexport class McOptionModule {}\n"],"names":[],"mappings":"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"}