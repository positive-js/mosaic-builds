{"version":3,"file":"ptsecurity-mosaic-timepicker.js","sources":["ng://@ptsecurity/mosaic/timepicker/timepicker.constants.ts","ng://@ptsecurity/mosaic/timepicker/timepicker.ts","ng://@ptsecurity/mosaic/timepicker/timepicker.module.ts"],"sourcesContent":["// tslint:disable:naming-convention\nexport enum TimeParts {\n    hours,\n    minutes,\n    seconds\n}\n\nexport enum TimeFormats {\n    HHmmss = 'HH:mm:ss',\n    HHmm = 'HH:mm'\n}\n\nexport const TIMEFORMAT_PLACEHOLDERS: { [timeFormat: string]: string } = {\n    [TimeFormats.HHmmss]: '  :  :  ',\n    [TimeFormats.HHmm]: '  :  '\n};\n\nexport const DEFAULT_TIME_FORMAT: TimeFormats = TimeFormats.HHmm;\n\nexport const HOURS_MINUTES_SECONDS_REGEXP =\n    new RegExp(/^([0-9]|0[0-9]|1[0-9]|2[0-3]):([0-5][0-9]|[0-9]):([0-5][0-9]|[0-9])?$/);\nexport const HOURS_MINUTES_REGEXP = /^([0-9]|0[0-9]|1[0-9]|2[0-3]):([0-5][0-9]|[0-9])?$/;\nexport const HOURS_ONLY_REGEXP = /^([0-9]|0[0-9]|1[0-9]|2[0-3]):?$/;\n\nexport const SECONDS_PER_MINUTE: number = 59;\nexport const MINUTES_PER_HOUR: number = 59;\nexport const HOURS_PER_DAY: number = 23;\n\n// TODO Move it to common CDK\nexport const ARROW_UP_KEYCODE: string = 'ArrowUp';\nexport const ARROW_DOWN_KEYCODE: string = 'ArrowDown';\nexport const ARROW_LEFT_KEYCODE: string = 'ArrowLeft';\nexport const ARROW_RIGHT_KEYCODE: string = 'ArrowRight';\n","import { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport {\n    Directive,\n    DoCheck,\n    ElementRef,\n    forwardRef,\n    Inject,\n    Input,\n    OnDestroy,\n    Optional,\n    Renderer2,\n    Self\n} from '@angular/core';\nimport {\n    ControlValueAccessor,\n    FormControl,\n    FormGroupDirective,\n    NgControl,\n    NgForm,\n    ValidationErrors\n} from '@angular/forms';\nimport { DateAdapter } from '@ptsecurity/cdk/datetime';\nimport {\n    CanUpdateErrorState,\n    CanUpdateErrorStateCtor,\n    ErrorStateMatcher,\n    mixinErrorState\n} from '@ptsecurity/mosaic/core';\nimport { McFormFieldControl } from '@ptsecurity/mosaic/form-field';\nimport { MC_INPUT_VALUE_ACCESSOR } from '@ptsecurity/mosaic/input';\nimport {\n    noop,\n    Subject\n} from 'rxjs';\n\nimport {\n    ARROW_DOWN_KEYCODE,\n    ARROW_LEFT_KEYCODE,\n    ARROW_RIGHT_KEYCODE,\n    ARROW_UP_KEYCODE,\n    DEFAULT_TIME_FORMAT,\n    HOURS_PER_DAY,\n    HOURS_MINUTES_REGEXP,\n    HOURS_MINUTES_SECONDS_REGEXP,\n    HOURS_ONLY_REGEXP,\n    MINUTES_PER_HOUR,\n    SECONDS_PER_MINUTE,\n    TIMEFORMAT_PLACEHOLDERS,\n    TimeFormats,\n    TimeParts\n} from './timepicker.constants';\n\n\nlet uniqueComponentIdSuffix: number = 0;\n\nexport class McTimepickerBase {\n    constructor(\n        public defaultErrorStateMatcher: ErrorStateMatcher,\n        public parentForm: NgForm,\n        public parentFormGroup: FormGroupDirective,\n        public ngControl: NgControl) { }\n}\n\n// tslint:disable-next-line naming-convention\nexport const McTimepickerMixinBase:\n    CanUpdateErrorStateCtor & typeof McTimepickerBase = mixinErrorState(McTimepickerBase);\n\n@Directive({\n    selector: 'input[mcTimepicker]',\n    exportAs: 'mcTimepickerInput',\n    host: {\n        class: 'mc-timepicker mc-input',\n        // Native input properties that are overwritten by Angular inputs need to be synced with\n        // the native input element. Otherwise property bindings for those don't work.\n        '[attr.id]': 'id',\n        '[attr.placeholder]': 'placeholder',\n        '[disabled]': 'disabled',\n        '[required]': 'required',\n        '[attr.time-format]': 'timeFormat',\n        '[attr.min-time]': 'minTime',\n        '[attr.max-time]': 'maxTime',\n        '[attr.value]': 'value',\n        '[attr.aria-invalid]': 'errorState',\n\n        '(blur)': 'onBlur()',\n        '(focus)': 'focusChanged(true)',\n\n        '(input)': 'onInput()',\n        '(paste)': 'onPaste($event)',\n\n        '(keydown)': 'onKeyDown($event)'\n    },\n    providers: [\n        {\n            provide: McFormFieldControl,\n            useExisting: forwardRef(() => McTimepicker)\n        }\n    ]\n})\nexport class McTimepicker<D> extends McTimepickerMixinBase\n    implements McFormFieldControl<any>, OnDestroy, DoCheck, CanUpdateErrorState, ControlValueAccessor {\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    readonly stateChanges: Subject<void> = new Subject<void>();\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    focused: boolean = false;\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    controlType: string = 'mc-timepicker';\n\n    /** An object used to control when error messages are shown. */\n    @Input() errorStateMatcher: ErrorStateMatcher;\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    @Input() placeholder: string;\n\n    @Input()\n    get disabled(): boolean {\n        if (this.ngControl && this.ngControl.disabled !== null) { return this.ngControl.disabled; }\n\n        return this._disabled;\n    }\n\n    set disabled(value: boolean) {\n        this._disabled = coerceBooleanProperty(value);\n\n        // Browsers may not fire the blur event if the input is disabled too quickly.\n        // Reset from here to ensure that the element doesn't become stuck.\n        if (this.focused) {\n            this.focused = false;\n        }\n\n        this.stateChanges.next();\n    }\n\n    private _disabled: boolean;\n\n    @Input()\n    get id(): string {\n        return this._id;\n    }\n\n    set id(value: string) {\n        this._id = value || this.uid;\n    }\n\n    private _id: string;\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    @Input()\n    get required(): boolean {\n        return this._required;\n    }\n\n    set required(value: boolean) {\n        this._required = coerceBooleanProperty(value);\n    }\n\n    private _required: boolean;\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    @Input()\n    get value(): string {\n        return this.inputValueAccessor.value;\n    }\n\n    set value(value: string) {\n        if (value !== this.value) {\n            this.inputValueAccessor.value = value;\n            this.applyInputChanges();\n        }\n    }\n\n    @Input('time-format')\n    get timeFormat(): TimeFormats {\n        return this._timeFormat;\n    }\n\n    set timeFormat(formatValue: TimeFormats) {\n        this._timeFormat = Object\n            .keys(TimeFormats)\n            .map((timeFormatKey) => TimeFormats[timeFormatKey])\n            .indexOf(formatValue) > -1 ? formatValue : DEFAULT_TIME_FORMAT;\n\n        this.placeholder = TIMEFORMAT_PLACEHOLDERS[this._timeFormat];\n\n        setTimeout(() => this.applyInputChanges({ doTimestringReformat: true }));\n    }\n\n    private _timeFormat: TimeFormats;\n\n    @Input('min-time')\n    get minTime(): string | null {\n        return this._minTime;\n    }\n\n    set minTime(value: string | null) {\n        this._minTime = value;\n        (this.ngControl.control as FormControl).updateValueAndValidity();\n    }\n\n    private _minTime: string | null = null;\n\n    @Input('max-time')\n    get maxTime(): string | null {\n        return this._maxTime;\n    }\n\n    set maxTime(maxValue: string | null) {\n        this._maxTime = maxValue;\n        (this.ngControl.control as FormControl).updateValueAndValidity();\n    }\n\n    private _maxTime: string | null = null;\n\n    private readonly uid = `mc-timepicker-${uniqueComponentIdSuffix++}`;\n    private readonly inputValueAccessor: { value: any };\n\n    private originalValue: any;\n    private previousNativeValue: any;\n    private currentDateTimeInput: D | undefined;\n\n    private onChange: (value: any) => void;\n    private onTouched: () => void;\n\n    constructor(\n        private readonly elementRef: ElementRef,\n        @Optional() @Self() public ngControl: NgControl,\n        @Optional() parentForm: NgForm,\n        @Optional() parentFormGroup: FormGroupDirective,\n        defaultErrorStateMatcher: ErrorStateMatcher,\n        @Optional() @Self() @Inject(MC_INPUT_VALUE_ACCESSOR) inputValueAccessor: any,\n        private readonly renderer: Renderer2,\n        @Optional() private dateAdapter: DateAdapter<any>\n    ) {\n        super(defaultErrorStateMatcher, parentForm, parentFormGroup, ngControl);\n\n        if (!this.dateAdapter) {\n            throw Error(`McTimepicker: No provider found for DateAdapter. You must import one of the existing ` +\n                `modules at your application root or provide a custom implementation or use exists ones.`);\n        }\n\n        // If no input value accessor was explicitly specified, use the element as the input value\n        // accessor.\n        this.inputValueAccessor = inputValueAccessor || this.elementRef.nativeElement;\n\n        this.previousNativeValue = this.value;\n        this.onChange = noop;\n\n        // Force setter to be called in case id was not specified.\n        this.id = this.id;\n\n        this.placeholder = TIMEFORMAT_PLACEHOLDERS[DEFAULT_TIME_FORMAT];\n\n        if (this.ngControl) {\n            // Instead of NG_VALUE_ACCESSOR (https://github.com/angular/material2/issues/8158#issuecomment-344618103)\n            this.ngControl.valueAccessor = this;\n\n            // To avoid cyclic dependency https://stackoverflow.com/a/49578414\n            const control = this.ngControl.control as FormControl;\n            const myValidators = [\n                () => this.parseValidator(),\n                () => this.minTimeValidator(),\n                () => this.maxTimeValidator()\n            ];\n            const validators = control.validator\n                ? [control.validator, ...myValidators]\n                : myValidators;\n\n            control.setValidators(validators);\n            control.updateValueAndValidity();\n        }\n    }\n\n    ngOnDestroy(): void {\n        this.stateChanges.complete();\n    }\n\n    ngDoCheck(): void {\n        if (this.ngControl) {\n            // We need to re-evaluate this on every change detection cycle, because there are some\n            // error triggers that we can't subscribe to (e.g. parent form submissions). This means\n            // that whatever logic is in here has to be super lean or we risk destroying the performance.\n            this.updateErrorState();\n        }\n\n        // We need to dirty-check the native element's value, because there are some cases where\n        // we won't be notified when it changes (e.g. the consumer isn't using forms or they're\n        // updating the value using `emitEvent: false`).\n        this.dirtyCheckNativeValue();\n    }\n\n    focus(): void {\n        this.elementRef.nativeElement.focus();\n    }\n\n    focusChanged(isFocused: boolean): void {\n        if (isFocused !== this.focused) {\n            this.focused = isFocused;\n            this.onTouched();\n            this.stateChanges.next();\n        }\n    }\n\n    onBlur() {\n        this.applyInputChanges();\n        this.focusChanged(false);\n    }\n\n    onPaste($event) {\n        $event.preventDefault();\n        const clipboardUserInput: string = $event.clipboardData.getData('text');\n\n        if (this.getDateFromTimeString(clipboardUserInput) === undefined) { return; }\n\n        this.elementRef.nativeElement.value = clipboardUserInput;\n        this.onInput();\n    }\n\n    onInput() {\n        const initialCursorStart: number = this.elementRef.nativeElement.selectionStart;\n        const initialCursorEnd: number = this.elementRef.nativeElement.selectionEnd;\n        let isAutocompleteTriggered: boolean = false;\n\n        const {\n            hoursOnly,\n            hoursAndMinutes,\n            hoursAndMinutesAndSeconds\n        } = this.getParsedTimeParts(this.elementRef.nativeElement.value);\n\n        // tslint:disable no-magic-numbers\n        if (hoursOnly &&\n            hoursOnly[1] &&\n            hoursOnly[1].length === 2) {\n            isAutocompleteTriggered = true;\n        } else if (hoursAndMinutes &&\n            hoursAndMinutes[1].length === 1 &&\n            hoursAndMinutes[2] &&\n            hoursAndMinutes[2].length === 2) {\n            isAutocompleteTriggered = true;\n        } else if (hoursAndMinutesAndSeconds &&\n            hoursAndMinutesAndSeconds[1].length === 2 &&\n            hoursAndMinutesAndSeconds[2].length === 2 &&\n            hoursAndMinutesAndSeconds[3] &&\n            hoursAndMinutesAndSeconds[3].length === 2) {\n            isAutocompleteTriggered = true;\n        }\n        // tslint:enable no-magic-numbers\n\n        this.applyInputChanges({ doTimestringReformat: isAutocompleteTriggered });\n\n        this.elementRef.nativeElement.selectionStart = initialCursorStart;\n        this.elementRef.nativeElement.selectionEnd = initialCursorEnd;\n\n        if (isAutocompleteTriggered && this.ngControl.errors === null) {\n            this.createSelectionOfTimeComponentInInput(initialCursorStart + 1);\n        }\n    }\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    get empty(): boolean {\n        return !this.elementRef.nativeElement.value && !this.isBadInput();\n    }\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    onContainerClick() {\n        this.focus();\n    }\n\n    writeValue(value: D | null): void {\n        if (value !== null) {\n            this.saveOriginalValue(value);\n\n            this.renderer.setProperty(\n                this.elementRef.nativeElement,\n                'value',\n                this.getTimeStringFromDate(value, this.timeFormat)\n            );\n\n            this.applyInputChanges();\n        }\n    }\n\n    onKeyDown(event: KeyboardEvent): void {\n        const keyCode: string = this.getKeyCode(event);\n\n        if (keyCode === ARROW_UP_KEYCODE || keyCode === ARROW_DOWN_KEYCODE) {\n            this.upDownTimeByArrowKeys(event);\n        }\n\n        if (keyCode === ARROW_LEFT_KEYCODE || keyCode === ARROW_RIGHT_KEYCODE) {\n            this.switchSelectionBetweenTimeparts(event);\n        }\n\n    }\n\n    registerOnChange(fn: (value: D) => void): void {\n        this.onChange = fn;\n    }\n\n    registerOnTouched(fn: () => void): void {\n        this.onTouched = fn;\n    }\n\n    saveOriginalValue(value: D): void {\n        if (this.dateAdapter.isValid(value)) {\n            this.originalValue = value;\n        }\n    }\n\n    /** Does some manual dirty checking on the native input `value` property. */\n    private dirtyCheckNativeValue() {\n        const newValue = this.value;\n\n        if (this.previousNativeValue !== newValue) {\n            this.previousNativeValue = newValue;\n            this.stateChanges.next();\n        }\n    }\n\n    /** Checks whether the input is invalid based on the native validation. */\n    private isBadInput(): boolean {\n        const validity = (<HTMLInputElement> this.elementRef.nativeElement).validity;\n\n        return validity && validity.badInput;\n    }\n\n    private applyInputChanges(applyParams: { changedTime?: D; doTimestringReformat?: boolean } = {}): void {\n        const { changedTime, doTimestringReformat = true } = applyParams;\n        const timeToApply: D | undefined = changedTime ||\n            this.getDateFromTimeString(this.elementRef.nativeElement.value);\n        this.currentDateTimeInput = timeToApply;\n\n        if (doTimestringReformat && timeToApply !== undefined) {\n            const selectionStart: number = this.elementRef.nativeElement.selectionStart;\n            const selectionEnd: number = this.elementRef.nativeElement.selectionEnd;\n            this.renderer.setProperty(\n                this.elementRef.nativeElement,\n                'value',\n                this.getTimeStringFromDate(timeToApply, this.timeFormat)\n            );\n            this.elementRef.nativeElement.selectionStart = selectionStart;\n            this.elementRef.nativeElement.selectionEnd = selectionEnd;\n        }\n\n        (<FormControl> this.ngControl.control).updateValueAndValidity();\n        const result = this.ngControl.errors === null && timeToApply !== undefined ? timeToApply : null;\n        this.onChange(result);\n        this.stateChanges.next();\n    }\n\n    private upDownTimeByArrowKeys(event: KeyboardEvent): void {\n        event.preventDefault();\n\n        let changedTime: D | undefined = this.currentDateTimeInput;\n        if (changedTime !== undefined) {\n            const cursorPos = this.elementRef.nativeElement.selectionStart;\n\n            const modifiedTimePart = this.getTimeEditMetrics(cursorPos)\n                .modifiedTimePart;\n            const keyCode: string = this.getKeyCode(event);\n            if (keyCode === ARROW_UP_KEYCODE) { changedTime = this.incrementTime(changedTime, modifiedTimePart); }\n            if (keyCode === ARROW_DOWN_KEYCODE) { changedTime = this.decrementTime(changedTime, modifiedTimePart); }\n            this.applyInputChanges({ changedTime });\n            this.createSelectionOfTimeComponentInInput(cursorPos);\n        }\n    }\n\n    private switchSelectionBetweenTimeparts(event: KeyboardEvent): void {\n        const changedTime: D | undefined = this.currentDateTimeInput;\n        const keyCode: string = this.getKeyCode(event);\n\n        if (changedTime !== undefined) {\n            let cursorPos: number = this.elementRef.nativeElement.selectionStart;\n            if (keyCode === ARROW_LEFT_KEYCODE) {\n                cursorPos = this.getCursorPositionOfPrevTimePartStart(cursorPos, this.elementRef.nativeElement.value);\n            } else if (keyCode === ARROW_RIGHT_KEYCODE) {\n                cursorPos = this.getCursorPositionOfNextTimePartStart(cursorPos, this.elementRef.nativeElement.value);\n            }\n            this.createSelectionOfTimeComponentInInput(cursorPos);\n        }\n    }\n\n    /**\n     * @description Microsoft EDGE doesn't support KeyboaedEvent.code thus we need this helper\n     */\n    private getKeyCode(event: KeyboardEvent): string {\n        return event.code || event.key;\n    }\n\n    private createSelectionOfTimeComponentInInput(cursorPos: number): void {\n        setTimeout(() => {\n            const newEditParams = this.getTimeEditMetrics(cursorPos);\n            this.elementRef.nativeElement.selectionStart = newEditParams.cursorStartPosition;\n            this.elementRef.nativeElement.selectionEnd = newEditParams.cursorEndPosition;\n        });\n    }\n\n    private incrementTime(dateVal: D, whatToIncrement: TimeParts = TimeParts.seconds): D {\n        let { hours, minutes, seconds } = this.getTimeDigitsFromDate(dateVal);\n\n        switch (whatToIncrement) {\n            case TimeParts.hours:\n                hours++;\n                break;\n            case TimeParts.minutes:\n                minutes++;\n                break;\n            case TimeParts.seconds:\n                seconds++;\n                break;\n            default:\n        }\n\n        if (seconds > SECONDS_PER_MINUTE) { seconds = 0; }\n\n        if (minutes > MINUTES_PER_HOUR) { minutes = 0; }\n\n        if (hours > HOURS_PER_DAY) { hours = 0; }\n\n        return <D> this.getDateFromTimeDigits(hours, minutes, seconds);\n    }\n\n    /**\n     * @description Decrement part of time\n     */\n    private decrementTime(dateVal: D, whatToDecrement: TimeParts = TimeParts.seconds): D {\n        let { hours, minutes, seconds } = this.getTimeDigitsFromDate(dateVal);\n\n        switch (whatToDecrement) {\n            case TimeParts.hours:\n                hours--;\n                break;\n            case TimeParts.minutes:\n                minutes--;\n                break;\n            case TimeParts.seconds:\n                seconds--;\n                break;\n            default:\n        }\n\n        if (seconds < 0) { seconds = SECONDS_PER_MINUTE; }\n\n        if (minutes < 0) { minutes = MINUTES_PER_HOUR; }\n\n        if (hours < 0) { hours = HOURS_PER_DAY; }\n\n        return <D> this.getDateFromTimeDigits(hours, minutes, seconds);\n    }\n\n    private getCursorPositionOfPrevTimePartStart(cursorPos: number, timeString: string): number {\n        return cursorPos === 0 ? timeString.length : cursorPos - 1;\n    }\n\n    private getCursorPositionOfNextTimePartStart(\n        cursorPos: number, timeString: string, timeDevider: string = ':'\n    ): number {\n        const nextDividerPos: number = timeString.indexOf(timeDevider, cursorPos);\n\n        return nextDividerPos !== undefined ? nextDividerPos + 1 : 0;\n    }\n\n    /**\n     * @description Get params for arrow-keys (up/down) time valie edit.\n     * @param cursorPosition Current cursor position in timeString\n     */\n    private getTimeEditMetrics(cursorPosition: number): {\n        modifiedTimePart: TimeParts;\n        cursorStartPosition: number;\n        cursorEndPosition: number;\n    } {\n        const timeString: string = this.elementRef.nativeElement.value;\n        let modifiedTimePart: TimeParts;\n        let cursorStartPosition: number;\n        let cursorEndPosition: number;\n        const hoursIndex = 0;\n        const minutesIndex = timeString.indexOf(':', hoursIndex + 1);\n        const secondsIndex = minutesIndex !== -1 ? timeString.indexOf(':', minutesIndex + 1) : -1;\n\n        if (secondsIndex !== -1 && cursorPosition > secondsIndex) {\n            modifiedTimePart = TimeParts.seconds;\n            cursorStartPosition = secondsIndex + 1;\n            cursorEndPosition = timeString.length;\n        } else if (minutesIndex !== -1 && cursorPosition > minutesIndex) {\n            modifiedTimePart = TimeParts.minutes;\n            cursorStartPosition = minutesIndex + 1;\n            cursorEndPosition = secondsIndex > -1 ? secondsIndex : timeString.length;\n        } else {\n            modifiedTimePart = TimeParts.hours;\n            cursorStartPosition = hoursIndex;\n            cursorEndPosition = minutesIndex !== -1 ? minutesIndex : timeString.length;\n        }\n\n        return {\n            modifiedTimePart,\n            cursorStartPosition,\n            cursorEndPosition\n        };\n    }\n\n    /**\n     * @description Create time string for displaying inside input element of UI\n     */\n    private getTimeStringFromDate(value: D, timeFormat: TimeFormats = DEFAULT_TIME_FORMAT): string {\n        if (value === undefined || value === null) {\n            return '';\n        }\n\n        return this.dateAdapter.format(value, timeFormat);\n    }\n\n    private getParsedTimeParts(timeString: string): {\n        hoursOnly: any;\n        hoursAndMinutes: any;\n        hoursAndMinutesAndSeconds: any;\n    } {\n        const momentWrappedTime = this.dateAdapter.parse(timeString, [\n            'h:m a',\n            'h:m:s a',\n            'H:m',\n            'H:m:s'\n        ]);\n\n        const convertedTimeString = momentWrappedTime !== null\n            ? momentWrappedTime.format('H:m:s')\n            : '';\n\n        const hoursAndMinutesAndSeconds = convertedTimeString.match(HOURS_MINUTES_SECONDS_REGEXP);\n        const hoursAndMinutes = convertedTimeString.match(HOURS_MINUTES_REGEXP);\n        const hoursOnly = convertedTimeString.match(HOURS_ONLY_REGEXP);\n\n        return {\n            hoursOnly,\n            hoursAndMinutes,\n            hoursAndMinutesAndSeconds\n        };\n    }\n\n    /**\n     * @description Create Date object from separate parts of time\n     */\n    private getDateFromTimeDigits(hours: number, minutes: number, seconds: number = 0): D | undefined {\n        return this.getDateFromTimeString(`${hours}:${minutes}:${seconds}`);\n    }\n\n    private getDateFromTimeString(timeString: string): D | undefined {\n        if (timeString === undefined) { return; }\n\n        const {\n            hoursOnly,\n            hoursAndMinutes,\n            hoursAndMinutesAndSeconds\n        } = this.getParsedTimeParts(timeString);\n\n        if (timeString.trim().length === 0 ||\n            hoursOnly === null && hoursAndMinutes === null && hoursAndMinutesAndSeconds === null) {\n            return;\n        }\n\n        // tslint:disable no-magic-numbers\n        let hours: number = 0;\n        let minutes: number = 0;\n        let seconds: number = 0;\n\n        if (hoursOnly) {\n            hours = Number(hoursOnly[1]);\n        } else if (hoursAndMinutes) {\n            hours = Number(hoursAndMinutes[1]);\n            minutes = Number(hoursAndMinutes[2]);\n        } else if (hoursAndMinutesAndSeconds) {\n            hours = Number(hoursAndMinutesAndSeconds[1]);\n            minutes = Number(hoursAndMinutesAndSeconds[2]);\n            seconds = Number(hoursAndMinutesAndSeconds[3]);\n        }\n\n        const resultDate: D = this.dateAdapter.createDateTime(\n            this.dateAdapter.getYear(this.originalValue),\n            this.dateAdapter.getMonth(this.originalValue),\n            this.dateAdapter.getDate(this.originalValue),\n            hours,\n            minutes,\n            seconds,\n            0\n        );\n\n        return this.dateAdapter.isValid(resultDate) ? resultDate : undefined;\n    }\n\n    private getTimeDigitsFromDate(dateVal: D): { hours: number; minutes: number; seconds: number } {\n        return {\n            hours: this.dateAdapter.getHours(dateVal),\n            minutes: this.dateAdapter.getMinutes(dateVal),\n            seconds: this.dateAdapter.getSeconds(dateVal)\n        };\n    }\n\n    private parseValidator(): ValidationErrors | null {\n        return this.currentDateTimeInput === undefined ?\n            { mcTimepickerParse: { text: this.elementRef.nativeElement.value } } :\n            null;\n    }\n\n    private minTimeValidator(): ValidationErrors | null {\n        if (\n            this.minTime &&\n            this.currentDateTimeInput !== undefined &&\n            this.isTimeLowerThenMin(this.currentDateTimeInput)\n        ) {\n            return { mcTimepickerLowerThenMintime: { text: this.elementRef.nativeElement.value } };\n        }\n\n        return null;\n    }\n\n    private maxTimeValidator(): ValidationErrors | null {\n        if (\n            this.maxTime &&\n            this.currentDateTimeInput !== undefined &&\n            this.isTimeGreaterThenMax(this.currentDateTimeInput)\n        ) {\n            return { mcTimepickerHigherThenMaxtime: { text: this.elementRef.nativeElement.value } };\n        }\n\n        return null;\n    }\n\n    private isTimeLowerThenMin(timeToCompare: D): boolean {\n        if (timeToCompare === undefined || timeToCompare ===  null || this.minTime === null) {\n            return false;\n        }\n\n        return this.dateAdapter.compareDateTime(timeToCompare, this.getDateFromTimeString(this.minTime)) < 0;\n    }\n\n    private isTimeGreaterThenMax(timeToCompare: D): boolean {\n        if (timeToCompare === undefined || timeToCompare ===  null || this.maxTime === null) {\n            return false;\n        }\n\n        return this.dateAdapter.compareDateTime(timeToCompare, this.getDateFromTimeString(this.maxTime)) >= 0;\n    }\n}\n","import { A11yModule } from '@angular/cdk/a11y';\nimport { PlatformModule } from '@angular/cdk/platform';\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\n\nimport { McTimepicker } from './timepicker';\n\n\n@NgModule({\n    imports: [\n        CommonModule,\n        A11yModule,\n        PlatformModule,\n        FormsModule\n    ],\n    declarations: [McTimepicker],\n    exports: [McTimepicker]\n})\nexport class McTimepickerModule {}\n"],"names":[],"mappings":"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"}