{"version":3,"file":"ptsecurity-mosaic-timepicker.js","sources":["ng://@ptsecurity/mosaic/timepicker/timepicker.constants.ts","ng://@ptsecurity/mosaic/timepicker/timepicker.ts","ng://@ptsecurity/mosaic/timepicker/timepicker.module.ts"],"sourcesContent":["// tslint:disable:naming-convention\nexport enum TimeParts {\n    hours,\n    minutes,\n    seconds\n}\n\nexport enum TimeFormats {\n    HHmmss = 'HH:mm:ss',\n    HHmm = 'HH:mm'\n}\n\nexport const TIMEFORMAT_PLACEHOLDERS: { [timeFormat: string]: string } = {\n    [TimeFormats.HHmmss]: '  :  :  ',\n    [TimeFormats.HHmm]: '  :  '\n};\n\nexport const DEFAULT_TIME_FORMAT: TimeFormats = TimeFormats.HHmm;\n\nexport const HOURS_MINUTES_SECONDS_REGEXP = /^([0-1][0-9]|2[0-3]):?([0-5][0-9]):?([0-5][0-9])?$/;\nexport const HOURS_MINUTES_REGEXP = /^([0-1][0-9]|2[0-3]):?([0-5][0-9])?$/;\nexport const HOURS_ONLY_REGEXP = /^([0-1][0-9]|2[0-3]):?$/;\nexport const AM_PM_FORMAT_REGEXP = /^([0-1]?[0-9]):([0-5]?[0-9]) ([ap][m]?$)/i;\n\nexport const SECONDS_PER_MINUTE: number = 59;\nexport const MINUTES_PER_HOUR: number = 59;\nexport const HOURS_PER_DAY: number = 23;\n","import { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport {\n    Directive,\n    ElementRef,\n    forwardRef,\n    Input,\n    OnDestroy,\n    Optional,\n    Renderer2\n} from '@angular/core';\nimport {\n    AbstractControl,\n    ControlValueAccessor,\n    NG_VALIDATORS,\n    NG_VALUE_ACCESSOR,\n    ValidationErrors,\n    Validator,\n    ValidatorFn,\n    Validators\n} from '@angular/forms';\nimport { DateAdapter } from '@ptsecurity/cdk/datetime';\nimport {\n    BACKSPACE,\n    DELETE,\n    DOWN_ARROW,\n    hasModifierKey,\n    LEFT_ARROW,\n    RIGHT_ARROW,\n    UP_ARROW\n} from '@ptsecurity/cdk/keycodes';\nimport { McFormFieldControl } from '@ptsecurity/mosaic/form-field';\nimport { noop, Subject } from 'rxjs';\n\nimport {\n    DEFAULT_TIME_FORMAT,\n    HOURS_PER_DAY,\n    HOURS_MINUTES_REGEXP,\n    HOURS_MINUTES_SECONDS_REGEXP,\n    HOURS_ONLY_REGEXP,\n    MINUTES_PER_HOUR,\n    SECONDS_PER_MINUTE,\n    TIMEFORMAT_PLACEHOLDERS,\n    TimeFormats,\n    TimeParts,\n    AM_PM_FORMAT_REGEXP\n} from './timepicker.constants';\n\n\n/** @docs-private */\nexport const MC_TIMEPICKER_VALUE_ACCESSOR: any = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => McTimepicker),\n    multi: true\n};\n\n/** @docs-private */\nexport const MC_TIMEPICKER_VALIDATORS: any = {\n    provide: NG_VALIDATORS,\n    useExisting: forwardRef(() => McTimepicker),\n    multi: true\n};\n\n\nlet uniqueComponentIdSuffix: number = 0;\n\n\n@Directive({\n    selector: 'input[mcTimepicker]',\n    exportAs: 'mcTimepickerInput',\n    host: {\n        class: 'mc-timepicker mc-input',\n        // Native input properties that are overwritten by Angular inputs need to be synced with\n        // the native input element. Otherwise property bindings for those don't work.\n        '[attr.id]': 'id',\n        '[attr.placeholder]': 'placeholder',\n        '[attr.disabled]': 'disabled || null',\n        '[attr.required]': 'required',\n\n        '(blur)': 'onBlur()',\n        '(focus)': 'focusChanged(true)',\n\n        '(paste)': 'onPaste($event)',\n\n        '(keydown)': 'onKeyDown($event)'\n    },\n    providers: [\n        MC_TIMEPICKER_VALIDATORS,\n        MC_TIMEPICKER_VALUE_ACCESSOR,\n        { provide: McFormFieldControl, useExisting: McTimepicker }\n    ]\n})\nexport class McTimepicker<D> implements McFormFieldControl<D>, OnDestroy, ControlValueAccessor, Validator {\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    readonly stateChanges: Subject<void> = new Subject<void>();\n\n    readonly errorState: boolean;\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    focused: boolean = false;\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    controlType: string = 'mc-timepicker';\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    @Input() placeholder: string;\n    private lastValueValid = false;\n\n    private control: AbstractControl;\n\n    @Input()\n    get disabled(): boolean {\n        return this._disabled;\n    }\n\n    set disabled(value: boolean) {\n        this._disabled = coerceBooleanProperty(value);\n\n        // Browsers may not fire the blur event if the input is disabled too quickly.\n        // Reset from here to ensure that the element doesn't become stuck.\n        if (this.focused) {\n            this.focused = false;\n        }\n\n        this.stateChanges.next();\n    }\n\n    private _disabled: boolean;\n\n    @Input()\n    get id(): string {\n        return this._id;\n    }\n\n    set id(value: string) {\n        this._id = value || this.uid;\n    }\n\n    private _id: string;\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    @Input()\n    get required(): boolean {\n        return this._required;\n    }\n\n    set required(value: boolean) {\n        this._required = coerceBooleanProperty(value);\n    }\n\n    private _required: boolean;\n\n    @Input()\n    get format(): TimeFormats {\n        return this._format;\n    }\n\n    set format(formatValue: TimeFormats) {\n        this._format = Object\n            .keys(TimeFormats)\n            .map((timeFormatKey) => TimeFormats[timeFormatKey])\n            .indexOf(formatValue) > -1 ? formatValue : DEFAULT_TIME_FORMAT;\n\n        this.placeholder = TIMEFORMAT_PLACEHOLDERS[this._format];\n\n        if (this.value) {\n            this.updateView();\n        }\n    }\n\n    private _format: TimeFormats = DEFAULT_TIME_FORMAT;\n\n    @Input()\n    get min(): D | null {\n        return this._min;\n    }\n\n    set min(value: D | null) {\n        this._min = this.getValidDateOrNull(this.dateAdapter.deserialize(value));\n        this.validatorOnChange();\n    }\n\n    private _min: D | null = null;\n\n    @Input()\n    get max(): D | null {\n        return this._max;\n    }\n\n    set max(value: D | null) {\n        this._max = this.getValidDateOrNull(this.dateAdapter.deserialize(value));\n        this.validatorOnChange();\n    }\n\n    private _max: D | null = null;\n\n    @Input()\n    get value(): D | null {\n        return this._value;\n    }\n\n    set value(value: D | null) {\n        const newValue = this.dateAdapter.deserialize(value);\n\n        this.lastValueValid = !newValue || this.dateAdapter.isValid(newValue);\n\n        this._value = this.getValidDateOrNull(newValue);\n\n        this.updateView();\n    }\n\n    private _value: D | null;\n\n    get viewValue(): string {\n        return this.elementRef.nativeElement.value;\n    }\n\n    get ngControl(): any {\n        return this.control;\n    }\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    get empty(): boolean {\n        return !this.viewValue && !this.isBadInput();\n    }\n\n    get selectionStart(): number | null {\n        return this.elementRef.nativeElement.selectionStart;\n    }\n\n    set selectionStart(value: number | null) {\n        this.elementRef.nativeElement.selectionStart = value;\n    }\n\n    get selectionEnd(): number | null {\n        return this.elementRef.nativeElement.selectionEnd;\n    }\n\n    set selectionEnd(value: number | null) {\n        this.elementRef.nativeElement.selectionEnd = value;\n    }\n\n    private readonly uid = `mc-timepicker-${uniqueComponentIdSuffix++}`;\n\n    private validator: ValidatorFn | null;\n\n    private onChange: (value: any) => void;\n    private onTouched: () => void;\n\n    constructor(\n        private readonly elementRef: ElementRef,\n        @Optional() private dateAdapter: DateAdapter<any>,\n        private readonly renderer: Renderer2\n    ) {\n        if (!this.dateAdapter) {\n            throw Error(`McTimepicker: No provider found for DateAdapter. You must import one of the existing ` +\n                `modules at your application root or provide a custom implementation or use exists ones.`);\n        }\n\n        this.validator = Validators.compose([this.parseValidator, this.minValidator, this.maxValidator]);\n\n        this.onChange = noop;\n\n        // Force setter to be called in case id was not specified.\n        this.id = this.id;\n\n        this.placeholder = TIMEFORMAT_PLACEHOLDERS[DEFAULT_TIME_FORMAT];\n    }\n\n    ngOnDestroy(): void {\n        this.stateChanges.complete();\n    }\n\n    focus(): void {\n        this.elementRef.nativeElement.focus();\n    }\n\n    focusChanged(isFocused: boolean): void {\n        if (isFocused !== this.focused) {\n            this.focused = isFocused;\n            this.onTouched();\n            this.stateChanges.next();\n        }\n    }\n\n    onBlur() {\n        this.lastValueValid = !!this.getDateFromTimeString(this.viewValue);\n        this.control.updateValueAndValidity();\n        this.focusChanged(false);\n    }\n\n    onPaste($event) {\n        const newTimeObj = this.getDateFromTimeString($event.clipboardData.getData('text'));\n\n        if (!newTimeObj) { return; }\n\n        $event.preventDefault();\n\n        this.renderer.setProperty(\n            this.elementRef.nativeElement,\n            'value',\n            this.getTimeStringFromDate(newTimeObj, this.format)\n        );\n\n        this.value = newTimeObj;\n        this.onChange(newTimeObj);\n        this.stateChanges.next();\n    }\n\n    onInput() {\n        const newTimeObj = this.getDateFromTimeString(this.viewValue);\n\n        if (!newTimeObj) { return; }\n\n        const selectionStart = this.selectionStart;\n        const selectionEnd = this.selectionEnd;\n\n        this.renderer.setProperty(\n            this.elementRef.nativeElement,\n            'value',\n            this.getTimeStringFromDate(newTimeObj, this.format)\n        );\n\n        this.selectionStart = selectionStart;\n        this.selectionEnd = selectionEnd;\n\n        this.createSelectionOfTimeComponentInInput((selectionStart as number) + 1);\n\n        this.onChange(newTimeObj);\n        this.stateChanges.next();\n    }\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    onContainerClick() {\n        this.focus();\n    }\n\n    onKeyDown(event: KeyboardEvent): void {\n        // tslint:disable-next-line: deprecation\n        const keyCode = event.keyCode;\n\n        if (hasModifierKey(event) || [BACKSPACE, DELETE].includes(keyCode)) {\n            return;\n        } else if ([UP_ARROW, DOWN_ARROW].includes(keyCode)) {\n            event.preventDefault();\n\n            this.verticalArrowKeyHandler(keyCode);\n\n            return;\n        } else if ([LEFT_ARROW, RIGHT_ARROW].includes(keyCode)) {\n            this.horizontalArrowKeyHandler(keyCode);\n\n            return;\n        }\n\n        setTimeout(() => this.onInput());\n    }\n\n    validate(control: AbstractControl): ValidationErrors | null {\n        this.setControl(control);\n\n        return this.validator ? this.validator(control) : null;\n    }\n\n    registerOnValidatorChange(fn: () => void): void {\n        this.validatorOnChange = fn;\n    }\n\n    writeValue(value: D | null): void {\n        this.value = value;\n    }\n\n    registerOnChange(fn: (value: D) => void): void {\n        this.onChange = fn;\n    }\n\n    registerOnTouched(fn: () => void): void {\n        this.onTouched = fn;\n    }\n\n    setDisabledState(isDisabled: boolean): void {\n        this.disabled = isDisabled;\n    }\n\n    /** Checks whether the input is invalid based on the native validation. */\n    private isBadInput(): boolean {\n        const validity = (<HTMLInputElement> this.elementRef.nativeElement).validity;\n\n        return validity && validity.badInput;\n    }\n\n    private verticalArrowKeyHandler(keyCode: number): void {\n        if (!this.value) { return; }\n\n        let changedTime;\n\n        const newEditParams = this.getTimeEditMetrics(this.selectionStart as number);\n\n        if (keyCode === UP_ARROW) {\n            changedTime = this.incrementTime(this.value, newEditParams.modifiedTimePart);\n        }\n\n        if (keyCode === DOWN_ARROW) {\n            changedTime = this.decrementTime(this.value, newEditParams.modifiedTimePart);\n        }\n\n        this.value = changedTime;\n\n        this.selectionStart = newEditParams.cursorStartPosition;\n        this.selectionEnd = newEditParams.cursorEndPosition;\n\n        this.onChange(changedTime);\n        this.stateChanges.next();\n    }\n\n    private horizontalArrowKeyHandler(keyCode: number): void {\n        if (!this.value) { return; }\n\n        let cursorPos = this.selectionStart as number;\n\n        if (keyCode === LEFT_ARROW) {\n            cursorPos = cursorPos === 0 ? this.viewValue.length : cursorPos - 1;\n        } else if (keyCode === RIGHT_ARROW) {\n            const nextDividerPos: number = this.viewValue.indexOf(':', cursorPos);\n\n            cursorPos = nextDividerPos ? nextDividerPos + 1 : 0;\n        }\n\n        this.createSelectionOfTimeComponentInInput(cursorPos);\n    }\n\n    private createSelectionOfTimeComponentInInput(cursorPos: number): void {\n        setTimeout(() => {\n            const newEditParams = this.getTimeEditMetrics(cursorPos);\n\n            this.selectionStart = newEditParams.cursorStartPosition;\n            this.selectionEnd = newEditParams.cursorEndPosition;\n        });\n    }\n\n    private incrementTime(dateVal: D, whatToIncrement: TimeParts = TimeParts.seconds): D {\n        let hours = this.dateAdapter.getHours(dateVal);\n        let minutes = this.dateAdapter.getMinutes(dateVal);\n        let seconds = this.dateAdapter.getSeconds(dateVal);\n\n        switch (whatToIncrement) {\n            case TimeParts.hours:\n                hours++;\n                break;\n            case TimeParts.minutes:\n                minutes++;\n                break;\n            case TimeParts.seconds:\n                seconds++;\n                break;\n            default:\n        }\n\n        if (seconds > SECONDS_PER_MINUTE) { seconds = 0; }\n\n        if (minutes > MINUTES_PER_HOUR) { minutes = 0; }\n\n        if (hours > HOURS_PER_DAY) { hours = 0; }\n\n        return this.dateAdapter.createDateTime(\n            this.dateAdapter.getYear(this.value),\n            this.dateAdapter.getMonth(this.value),\n            this.dateAdapter.getDate(this.value),\n            hours,\n            minutes,\n            seconds,\n            this.dateAdapter.getMilliseconds(this.value)\n        );\n    }\n\n    private decrementTime(dateVal: D, whatToDecrement: TimeParts = TimeParts.seconds): D {\n        let hours = this.dateAdapter.getHours(dateVal);\n        let minutes = this.dateAdapter.getMinutes(dateVal);\n        let seconds = this.dateAdapter.getSeconds(dateVal);\n\n        switch (whatToDecrement) {\n            case TimeParts.hours:\n                hours--;\n                break;\n            case TimeParts.minutes:\n                minutes--;\n                break;\n            case TimeParts.seconds:\n                seconds--;\n                break;\n            default:\n        }\n\n        if (seconds < 0) { seconds = SECONDS_PER_MINUTE; }\n\n        if (minutes < 0) { minutes = MINUTES_PER_HOUR; }\n\n        if (hours < 0) { hours = HOURS_PER_DAY; }\n\n        return this.dateAdapter.createDateTime(\n            this.dateAdapter.getYear(this.value),\n            this.dateAdapter.getMonth(this.value),\n            this.dateAdapter.getDate(this.value),\n            hours,\n            minutes,\n            seconds,\n            this.dateAdapter.getMilliseconds(this.value)\n        );\n    }\n\n    /**\n     * @description Get params for arrow-keys (up/down) time valie edit.\n     * @param cursorPosition Current cursor position in timeString\n     */\n    private getTimeEditMetrics(cursorPosition: number): {\n        modifiedTimePart: TimeParts;\n        cursorStartPosition: number;\n        cursorEndPosition: number;\n    } {\n        const timeString: string = this.viewValue;\n        let modifiedTimePart: TimeParts;\n        let cursorStartPosition: number;\n        let cursorEndPosition: number;\n\n        const hoursIndex = 0;\n        const minutesIndex = timeString.indexOf(':', hoursIndex + 1);\n        const secondsIndex = minutesIndex !== -1 ? timeString.indexOf(':', minutesIndex + 1) : -1;\n\n        if (secondsIndex !== -1 && cursorPosition > secondsIndex) {\n            modifiedTimePart = TimeParts.seconds;\n            cursorStartPosition = secondsIndex + 1;\n            cursorEndPosition = timeString.length;\n        } else if (minutesIndex !== -1 && cursorPosition > minutesIndex) {\n            modifiedTimePart = TimeParts.minutes;\n            cursorStartPosition = minutesIndex + 1;\n            cursorEndPosition = secondsIndex > -1 ? secondsIndex : timeString.length;\n        } else {\n            modifiedTimePart = TimeParts.hours;\n            cursorStartPosition = hoursIndex;\n            cursorEndPosition = minutesIndex !== -1 ? minutesIndex : timeString.length;\n        }\n\n        return { modifiedTimePart, cursorStartPosition, cursorEndPosition };\n    }\n\n    /**\n     * @description Create time string for displaying inside input element of UI\n     */\n    private getTimeStringFromDate(value: D | null, timeFormat: TimeFormats): string {\n        if (!value || !this.dateAdapter.isValid(value)) { return ''; }\n\n        return this.dateAdapter.format(value, timeFormat);\n    }\n\n    private getDateFromTimeString(timeString: string): D | null {\n        if (!timeString) { return null; }\n\n        const hoursAndMinutesAndSeconds = timeString.match(HOURS_MINUTES_SECONDS_REGEXP);\n        const hoursAndMinutes = timeString.match(HOURS_MINUTES_REGEXP);\n        const hoursOnly = timeString.match(HOURS_ONLY_REGEXP);\n        const hoursAndMinutesInAmPm = timeString.match(AM_PM_FORMAT_REGEXP);\n\n        let hours: number = 0;\n        let minutes: number = 0;\n        let seconds: number = 0;\n\n        // tslint:disable:no-magic-numbers\n        if (hoursAndMinutesInAmPm) {\n            hours = Number(hoursAndMinutesInAmPm[1]);\n            minutes = Number(hoursAndMinutesInAmPm[2]);\n\n            if (/[p]/i.test(hoursAndMinutesInAmPm[3]) || (/[a]/i.test(hoursAndMinutesInAmPm[3]) && hours === 12)) {\n                hours += 12;\n            }\n        } else if (hoursAndMinutesAndSeconds) {\n            hours = Number(hoursAndMinutesAndSeconds[1]);\n            minutes = Number(hoursAndMinutesAndSeconds[2]);\n            seconds = Number(hoursAndMinutesAndSeconds[3]);\n        } else if (hoursAndMinutes) {\n            hours = Number(hoursAndMinutes[1]);\n            minutes = Number(hoursAndMinutes[2]);\n        } else if (hoursOnly) {\n            hours = Number(hoursOnly[1]);\n        } else {\n            return null;\n        }\n        // tslint:enable\n\n        const resultDate = this.dateAdapter.createDateTime(\n            this.dateAdapter.getYear(this.value),\n            this.dateAdapter.getMonth(this.value),\n            this.dateAdapter.getDate(this.value),\n            hours,\n            minutes,\n            seconds,\n            this.dateAdapter.getMilliseconds(this.value)\n        );\n\n        return this.getValidDateOrNull(resultDate);\n    }\n\n    private parseValidator: ValidatorFn = (): ValidationErrors | null => {\n        return this.lastValueValid ? null : { mcTimepickerParse: { text: this.viewValue } };\n    }\n\n    private minValidator: ValidatorFn = (control: AbstractControl): ValidationErrors | null => {\n        const controlValue = this.getValidDateOrNull(this.dateAdapter.deserialize(control.value));\n\n        return (!this.min || !controlValue || this.compareTime(this.min, controlValue) <= 0) ?\n            null :\n            { mcTimepickerLowerThenMin: { min: this.min, actual: controlValue } };\n    }\n\n    private maxValidator: ValidatorFn = (control: AbstractControl): ValidationErrors | null => {\n        const controlValue = this.getValidDateOrNull(this.dateAdapter.deserialize(control.value));\n\n        return (!this.max || !controlValue || this.compareTime(this.max, controlValue) >= 0) ?\n            null :\n            { mcTimepickerHigherThenMax: { max: this.max, actual: controlValue } };\n    }\n\n    private compareTime(first: D, second: D): number {\n        const result = this.dateAdapter.getHours(first) - this.dateAdapter.getHours(second) ||\n            this.dateAdapter.getMinutes(first) - this.dateAdapter.getMinutes(second);\n\n        if (TimeFormats.HHmm === this.format) {\n            return result;\n        } else if (TimeFormats.HHmmss === this.format) {\n            return result || this.dateAdapter.getSeconds(first) - this.dateAdapter.getSeconds(second);\n        } else {\n            throw Error(`Unknown format: ${this.format}`);\n        }\n    }\n\n    private getValidDateOrNull(obj: any): D | null {\n        return (this.dateAdapter.isDateInstance(obj) && this.dateAdapter.isValid(obj)) ? obj : null;\n    }\n\n    private updateView() {\n        const formattedValue = this.getTimeStringFromDate(this.value, this.format);\n\n        this.renderer.setProperty(this.elementRef.nativeElement, 'value', formattedValue);\n    }\n\n    private setControl(control: AbstractControl) {\n        if (!this.control) {\n            this.control = control;\n        }\n    }\n\n    // tslint:disable-next-line:no-empty\n    private validatorOnChange = () => {};\n}\n","import { A11yModule } from '@angular/cdk/a11y';\nimport { PlatformModule } from '@angular/cdk/platform';\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\n\nimport { McTimepicker } from './timepicker';\n\n\n@NgModule({\n    imports: [\n        CommonModule,\n        A11yModule,\n        PlatformModule,\n        FormsModule\n    ],\n    declarations: [McTimepicker],\n    exports: [McTimepicker]\n})\nexport class McTimepickerModule {}\n"],"names":[],"mappings":"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"}