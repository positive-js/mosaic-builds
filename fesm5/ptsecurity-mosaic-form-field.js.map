{"version":3,"file":"ptsecurity-mosaic-form-field.js","sources":["ng://@ptsecurity/mosaic/form-field/cleaner.ts","ng://@ptsecurity/mosaic/form-field/form-field-control.ts","ng://@ptsecurity/mosaic/form-field/form-field-errors.ts","ng://@ptsecurity/mosaic/form-field/hint.ts","ng://@ptsecurity/mosaic/form-field/prefix.ts","ng://@ptsecurity/mosaic/form-field/stepper.ts","ng://@ptsecurity/mosaic/form-field/suffix.ts","ng://@ptsecurity/mosaic/form-field/form-field.ts","ng://@ptsecurity/mosaic/form-field/form-field.module.ts"],"sourcesContent":["import { Component } from '@angular/core';\n\n\n@Component({\n    selector: 'mc-cleaner',\n    exportAs: 'mcCleaner',\n    template: '<i class=\"mc-icon_light\" mc-icon=\"mc-close-M_16\" color=\"second\"></i>',\n    host: {\n        class: 'mc-cleaner'\n    }\n})\nexport class McCleaner {}\n","import { NgControl } from '@angular/forms';\nimport { Observable } from 'rxjs';\n\n\n/** An interface which allows a control to work inside of a `MсFormField`. */\n// tslint:disable-next-line:naming-convention\nexport abstract class McFormFieldControl<T> {\n    /** The value of the control. */\n    value: T | null;\n\n    /**\n     * Stream that emits whenever the state of the control changes such that the parent `MсFormField`\n     * needs to run change detection.\n     */\n    readonly stateChanges: Observable<void>;\n\n    /** The element ID for this control. */\n    readonly id: string;\n\n    /** The placeholder for this control. */\n    readonly placeholder: string;\n\n    /** Gets the NgControl for this control. */\n    readonly ngControl: NgControl | null;\n\n    /** Whether the control is focused. */\n    readonly focused: boolean;\n\n    /** Whether the control is empty. */\n    readonly empty: boolean;\n\n    /** Whether the control is required. */\n    readonly required: boolean;\n\n    /** Whether the control is disabled. */\n    readonly disabled: boolean;\n\n    /** Whether the control is in an error state. */\n    readonly errorState: boolean;\n\n    /**\n     * An optional name for the control type that can be used to distinguish `mc-form-field` elements\n     * based on their control type. The form field will add a class,\n     * `mc-form-field-type-{{controlType}}` to its root element.\n     */\n    readonly controlType?: string;\n\n    /** Handles a click on the control's container. */\n    abstract onContainerClick(event: MouseEvent): void;\n\n    abstract focus(): void;\n}\n","export function getMcFormFieldMissingControlError(): Error {\n  return Error('mc-form-field must contain a McFormFieldControl.');\n}\n\nexport function getMcFormFieldYouCanNotUseCleanerInNumberInputError(): Error {\n  return Error(`You can't use mc-cleaner with input that have type=\"number\"`);\n}\n","import { Directive, Input } from '@angular/core';\n\n\nlet nextUniqueId = 0;\n\n@Directive({\n    selector: 'mc-hint',\n    host: {\n        class: 'mc-hint',\n        '[attr.id]': 'id'\n    }\n})\nexport class McHint {\n    @Input() id: string = `mc-hint-${nextUniqueId++}`;\n}\n","import { Directive } from '@angular/core';\n\n\n@Directive({\n    selector: '[mcPrefix]'\n})\nexport class McPrefix {}\n","import { Component, EventEmitter, Output } from '@angular/core';\n\n\n@Component({\n    selector: 'mc-stepper',\n    template: `\n        <i class=\"mc mc-icon mc-icon_light mc-second mc-stepper-step-up mc-angle-down-L_16\"\n           (mousedown)=\"onStepUp($event)\">\n        </i>\n        <i class=\"mc mc-icon mc-icon_light mc-second mc-stepper-step-down mc-angle-down-L_16\"\n           (mousedown)=\"onStepDown($event)\">\n        </i>\n    `\n})\nexport class McStepper {\n    @Output()\n    readonly stepUp: EventEmitter<void> = new EventEmitter<void>();\n    @Output()\n    readonly stepDown: EventEmitter<void> = new EventEmitter<void>();\n\n    connectTo(numberInput: any) {\n        if (!numberInput) { return; }\n\n        this.stepUp.subscribe(() => {\n            numberInput.stepUp(numberInput.step);\n        });\n\n        this.stepDown.subscribe(() => {\n            numberInput.stepDown(numberInput.step);\n        });\n    }\n\n    onStepUp($event: MouseEvent) {\n        this.stepUp.emit();\n        $event.preventDefault();\n    }\n\n    onStepDown($event: MouseEvent) {\n        this.stepDown.emit();\n        $event.preventDefault();\n    }\n}\n","import { Directive } from '@angular/core';\n\n\n@Directive({\n    selector: '[mcSuffix]'\n})\nexport class McSuffix {}\n","import {\n    AfterContentChecked,\n    AfterContentInit,\n    AfterViewInit,\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    ContentChild,\n    ContentChildren,\n    Directive,\n    ElementRef,\n    QueryList,\n    ViewChild,\n    ViewEncapsulation\n} from '@angular/core';\nimport { NgControl } from '@angular/forms';\nimport { ESCAPE } from '@ptsecurity/cdk/keycodes';\nimport { CanColor, CanColorCtor, mixinColor } from '@ptsecurity/mosaic/core';\nimport { EMPTY, merge } from 'rxjs';\nimport { startWith } from 'rxjs/operators';\n\nimport { McCleaner } from './cleaner';\nimport { McFormFieldControl } from './form-field-control';\nimport {\n    getMcFormFieldMissingControlError,\n    getMcFormFieldYouCanNotUseCleanerInNumberInputError\n} from './form-field-errors';\nimport { McHint } from './hint';\nimport { McPrefix } from './prefix';\nimport { McStepper } from './stepper';\nimport { McSuffix } from './suffix';\n\n\nlet nextUniqueId = 0;\n\nexport class McFormFieldBase {\n    // tslint:disable-next-line:naming-convention\n    constructor(public _elementRef: ElementRef) {}\n}\n\n// tslint:disable-next-line:naming-convention\nexport const McFormFieldMixinBase: CanColorCtor & typeof McFormFieldBase = mixinColor(McFormFieldBase);\n\n@Component({\n    selector: 'mc-form-field',\n    exportAs: 'mcFormField',\n    templateUrl: 'form-field.html',\n    // McInput is a directive and can't have styles, so we need to include its styles here.\n    // The McInput styles are fairly minimal so it shouldn't be a big deal for people who\n    // aren't using McInput.\n    styleUrls: [\n        'form-field.scss',\n        '../input/input.scss',\n        '../textarea/textarea.scss'\n    ],\n    host: {\n        class: 'mc-form-field',\n        '[class.mc-form-field_invalid]': 'control.errorState',\n        '[class.mc-form-field_has-prefix]': 'hasPrefix',\n        '[class.mc-form-field_has-suffix]': 'hasSuffix',\n        '[class.mc-form-field_has-cleaner]': 'canShowCleaner',\n        '[class.mc-form-field_has-stepper]': 'canShowStepper',\n        '[class.mc-disabled]': 'control.disabled',\n        '[class.mc-focused]': 'control.focused',\n        '[class.ng-untouched]': 'shouldForward(\"untouched\")',\n        '[class.ng-touched]': 'shouldForward(\"touched\")',\n        '[class.ng-pristine]': 'shouldForward(\"pristine\")',\n        '[class.ng-dirty]': 'shouldForward(\"dirty\")',\n        '[class.ng-valid]': 'shouldForward(\"valid\")',\n        '[class.ng-invalid]': 'shouldForward(\"invalid\")',\n        '[class.ng-pending]': 'shouldForward(\"pending\")',\n        '(keydown)': 'onKeyDown($event)',\n        '(mouseenter)': 'onHoverChanged(true)',\n        '(mouseleave)': 'onHoverChanged(false)'\n    },\n    inputs: ['color'],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\n\nexport class McFormField extends McFormFieldMixinBase implements\n    AfterContentInit, AfterContentChecked, AfterViewInit, CanColor {\n\n    @ContentChild(McFormFieldControl, { static: false }) control: McFormFieldControl<any>;\n    @ContentChild(McStepper, { static: false }) stepper: McStepper;\n    @ContentChild(McCleaner, { static: false }) cleaner: McCleaner | null;\n\n    @ContentChildren(McHint) hint: QueryList<McHint>;\n    @ContentChildren(McSuffix) suffix: QueryList<McSuffix>;\n    @ContentChildren(McPrefix) prefix: QueryList<McPrefix>;\n\n    @ViewChild('connectionContainer', { static: true }) connectionContainerRef: ElementRef;\n\n    // Unique id for the internal form field label.\n    labelId = `mc-form-field-label-${nextUniqueId++}`;\n\n    hovered: boolean = false;\n\n    canCleanerClearByEsc: boolean = true;\n\n    get hasHint(): boolean {\n        return this.hint && this.hint.length > 0;\n    }\n\n    get hasSuffix(): boolean {\n        return this.suffix && this.suffix.length > 0;\n    }\n\n    get hasPrefix(): boolean {\n        return this.prefix && this.prefix.length > 0;\n    }\n\n    get hasCleaner(): boolean {\n        return !!this.cleaner;\n    }\n\n    get hasStepper(): boolean {\n        return !!this.stepper;\n    }\n\n    get canShowCleaner(): boolean {\n        return this.hasCleaner &&\n        this.control &&\n        this.control.ngControl\n            ? this.control.ngControl.value && !this.control.disabled\n            : false;\n    }\n\n    get disabled(): boolean {\n        return this.control && this.control.disabled;\n    }\n\n    get canShowStepper(): boolean {\n        return this.control && !this.disabled && (this.control.focused || this.hovered);\n    }\n\n    // tslint:disable-next-line:naming-convention\n    constructor(public _elementRef: ElementRef, private _changeDetectorRef: ChangeDetectorRef) {\n        super(_elementRef);\n    }\n\n    ngAfterContentInit() {\n        if ((this.control as any).numberInput && this.hasCleaner) {\n            this.cleaner = null;\n            throw getMcFormFieldYouCanNotUseCleanerInNumberInputError();\n        }\n\n        this.validateControlChild();\n\n        if (this.control.controlType) {\n            this._elementRef.nativeElement.classList.add(`mc-form-field-type-${this.control.controlType}`);\n        }\n\n        // Subscribe to changes in the child control state in order to update the form field UI.\n        this.control.stateChanges\n            .pipe(startWith())\n            .subscribe(() => {\n                this._changeDetectorRef.markForCheck();\n            });\n\n        if (this.hasStepper) {\n            this.stepper.connectTo((this.control as any).numberInput);\n        }\n\n        // Run change detection if the value changes.\n        const valueChanges = this.control.ngControl && this.control.ngControl.valueChanges || EMPTY;\n\n        merge(valueChanges)\n            .subscribe(() => this._changeDetectorRef.markForCheck());\n    }\n\n    ngAfterContentChecked() {\n        this.validateControlChild();\n    }\n\n    ngAfterViewInit() {\n        // Avoid animations on load.\n        this._changeDetectorRef.detectChanges();\n    }\n\n    clearValue($event) {\n        $event.stopPropagation();\n\n        if (this.control && this.control.ngControl) {\n            this.control.ngControl.reset();\n            this.control.focus();\n        }\n    }\n\n    onContainerClick($event) {\n        if (this.control.onContainerClick) {\n            this.control.onContainerClick($event);\n        }\n    }\n\n    onKeyDown(event: KeyboardEvent): void {\n        // tslint:disable-next-line:deprecation\n        if (this.canCleanerClearByEsc && event.keyCode === ESCAPE && this.control.focused && this.hasCleaner) {\n            if (this.control && this.control.ngControl) {\n                this.control.ngControl.reset();\n            }\n\n            event.preventDefault();\n        }\n    }\n\n    onHoverChanged(isHovered: boolean) {\n        if (isHovered !== this.hovered) {\n            this.hovered = isHovered;\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n\n    /**\n     * Gets an ElementRef for the element that a overlay attached to the form-field should be\n     * positioned relative to.\n     */\n    getConnectedOverlayOrigin(): ElementRef {\n        return this.connectionContainerRef || this._elementRef;\n    }\n\n    /** Determines whether a class from the NgControl should be forwarded to the host element. */\n    shouldForward(prop: keyof NgControl): boolean {\n        const ngControl = this.control ? this.control.ngControl : null;\n\n        return ngControl && ngControl[prop];\n    }\n\n    /** Throws an error if the form field's control is missing. */\n    protected validateControlChild() {\n        if (!this.control) {\n            throw getMcFormFieldMissingControlError();\n        }\n    }\n}\n\n@Directive({\n    selector: 'mc-form-field[mcFormFieldWithoutBorders]',\n    exportAs: 'mcFormFieldWithoutBorders',\n    host: { class: 'mc-form-field_without-borders' }\n})\nexport class McFormFieldWithoutBorders {}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { McIconModule } from '@ptsecurity/mosaic/icon';\n\nimport { McCleaner } from './cleaner';\nimport { McFormField, McFormFieldWithoutBorders } from './form-field';\nimport { McHint } from './hint';\nimport { McPrefix } from './prefix';\nimport { McStepper } from './stepper';\nimport { McSuffix } from './suffix';\n\n\n@NgModule({\n    declarations: [\n        McFormField,\n        McFormFieldWithoutBorders,\n        McHint,\n        McPrefix,\n        McSuffix,\n        McCleaner,\n        McStepper\n    ],\n    imports: [CommonModule, McIconModule],\n    exports: [\n        McFormField,\n        McFormFieldWithoutBorders,\n        McHint,\n        McPrefix,\n        McSuffix,\n        McCleaner,\n        McStepper\n    ]\n})\nexport class McFormFieldModule {\n}\n"],"names":["nextUniqueId"],"mappings":"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"}