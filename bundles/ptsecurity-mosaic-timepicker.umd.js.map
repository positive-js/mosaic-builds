{"version":3,"file":"ptsecurity-mosaic-timepicker.umd.js","sources":["ng://@ptsecurity/mosaic/timepicker/timepicker.constants.ts","ng://@ptsecurity/mosaic/timepicker/timepicker.ts","ng://@ptsecurity/mosaic/timepicker/timepicker.module.ts"],"sourcesContent":["// tslint:disable:naming-convention\nexport enum TimeParts {\n    hours,\n    minutes,\n    seconds\n}\n\nexport enum TimeFormats {\n    HHmmss = 'HH:mm:ss',\n    HHmm = 'HH:mm'\n}\n\nexport const TIMEFORMAT_PLACEHOLDERS: { [timeFormat: string]: string } = {\n    [TimeFormats.HHmmss]: '  :  :  ',\n    [TimeFormats.HHmm]: '  :  '\n};\n\nexport const DEFAULT_TIME_FORMAT: TimeFormats = TimeFormats.HHmm;\n\nexport const HOURS_MINUTES_SECONDS_REGEXP = /^([0-1][0-9]|2[0-3]):?([0-5][0-9]):?([0-5][0-9])?$/;\nexport const HOURS_MINUTES_REGEXP = /^([0-1][0-9]|2[0-3]):?([0-5][0-9])?$/;\nexport const HOURS_ONLY_REGEXP = /^([0-1][0-9]|2[0-3]):?$/;\nexport const AM_PM_FORMAT_REGEXP = /^([0-1]?[0-9]):([0-5]?[0-9]) ([ap][m]?$)/i;\n\nexport const SECONDS_PER_MINUTE: number = 59;\nexport const MINUTES_PER_HOUR: number = 59;\nexport const HOURS_PER_DAY: number = 23;\n","import { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport {\n    Directive,\n    ElementRef,\n    forwardRef,\n    Input,\n    OnDestroy,\n    Optional,\n    Renderer2\n} from '@angular/core';\nimport {\n    AbstractControl,\n    ControlValueAccessor,\n    NG_VALIDATORS,\n    NG_VALUE_ACCESSOR,\n    ValidationErrors,\n    Validator,\n    ValidatorFn,\n    Validators\n} from '@angular/forms';\nimport { DateAdapter } from '@ptsecurity/cdk/datetime';\nimport {\n    DOWN_ARROW,\n    hasModifierKey,\n    LEFT_ARROW,\n    RIGHT_ARROW,\n    UP_ARROW\n} from '@ptsecurity/cdk/keycodes';\nimport { McFormFieldControl } from '@ptsecurity/mosaic/form-field';\nimport { noop, Subject } from 'rxjs';\n\nimport {\n    DEFAULT_TIME_FORMAT,\n    HOURS_PER_DAY,\n    HOURS_MINUTES_REGEXP,\n    HOURS_MINUTES_SECONDS_REGEXP,\n    HOURS_ONLY_REGEXP,\n    MINUTES_PER_HOUR,\n    SECONDS_PER_MINUTE,\n    TIMEFORMAT_PLACEHOLDERS,\n    TimeFormats,\n    TimeParts,\n    AM_PM_FORMAT_REGEXP\n} from './timepicker.constants';\n\n\n/** @docs-private */\nexport const MC_TIMEPICKER_VALUE_ACCESSOR: any = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => McTimepicker),\n    multi: true\n};\n\n/** @docs-private */\nexport const MC_TIMEPICKER_VALIDATORS: any = {\n    provide: NG_VALIDATORS,\n    useExisting: forwardRef(() => McTimepicker),\n    multi: true\n};\n\n\nlet uniqueComponentIdSuffix: number = 0;\n\n\n@Directive({\n    selector: 'input[mcTimepicker]',\n    exportAs: 'mcTimepickerInput',\n    host: {\n        class: 'mc-timepicker mc-input',\n        // Native input properties that are overwritten by Angular inputs need to be synced with\n        // the native input element. Otherwise property bindings for those don't work.\n        '[attr.id]': 'id',\n        '[attr.placeholder]': 'placeholder',\n        '[attr.disabled]': 'disabled || null',\n        '[attr.required]': 'required',\n\n        '(blur)': 'onBlur()',\n        '(focus)': 'focusChanged(true)',\n\n        '(paste)': 'onPaste($event)',\n\n        '(keydown)': 'onKeyDown($event)'\n    },\n    providers: [\n        MC_TIMEPICKER_VALIDATORS,\n        MC_TIMEPICKER_VALUE_ACCESSOR,\n        { provide: McFormFieldControl, useExisting: McTimepicker }\n    ]\n})\nexport class McTimepicker<D> implements McFormFieldControl<D>, OnDestroy, ControlValueAccessor, Validator {\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    readonly stateChanges: Subject<void> = new Subject<void>();\n\n    readonly errorState: boolean;\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    focused: boolean = false;\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    controlType: string = 'mc-timepicker';\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    @Input() placeholder: string;\n    private lastValueValid = false;\n\n    private control: AbstractControl;\n\n    @Input()\n    get disabled(): boolean {\n        return this._disabled;\n    }\n\n    set disabled(value: boolean) {\n        this._disabled = coerceBooleanProperty(value);\n\n        // Browsers may not fire the blur event if the input is disabled too quickly.\n        // Reset from here to ensure that the element doesn't become stuck.\n        if (this.focused) {\n            this.focused = false;\n        }\n\n        this.stateChanges.next();\n    }\n\n    private _disabled: boolean;\n\n    @Input()\n    get id(): string {\n        return this._id;\n    }\n\n    set id(value: string) {\n        this._id = value || this.uid;\n    }\n\n    private _id: string;\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    @Input()\n    get required(): boolean {\n        return this._required;\n    }\n\n    set required(value: boolean) {\n        this._required = coerceBooleanProperty(value);\n    }\n\n    private _required: boolean;\n\n    @Input()\n    get format(): TimeFormats {\n        return this._format;\n    }\n\n    set format(formatValue: TimeFormats) {\n        this._format = Object\n            .keys(TimeFormats)\n            .map((timeFormatKey) => TimeFormats[timeFormatKey])\n            .indexOf(formatValue) > -1 ? formatValue : DEFAULT_TIME_FORMAT;\n\n        this.placeholder = TIMEFORMAT_PLACEHOLDERS[this._format];\n\n        if (this.value) {\n            this.updateView();\n        }\n    }\n\n    private _format: TimeFormats = DEFAULT_TIME_FORMAT;\n\n    @Input()\n    get min(): D | null {\n        return this._min;\n    }\n\n    set min(value: D | null) {\n        this._min = this.getValidDateOrNull(this.dateAdapter.deserialize(value));\n        this.validatorOnChange();\n    }\n\n    private _min: D | null = null;\n\n    @Input()\n    get max(): D | null {\n        return this._max;\n    }\n\n    set max(value: D | null) {\n        this._max = this.getValidDateOrNull(this.dateAdapter.deserialize(value));\n        this.validatorOnChange();\n    }\n\n    private _max: D | null = null;\n\n    @Input()\n    get value(): D | null {\n        return this._value;\n    }\n\n    set value(value: D | null) {\n        const newValue = this.dateAdapter.deserialize(value);\n\n        this.lastValueValid = !newValue || this.dateAdapter.isValid(newValue);\n\n        this._value = this.getValidDateOrNull(newValue);\n\n        this.updateView();\n    }\n\n    private _value: D | null;\n\n    get viewValue(): string {\n        return this.elementRef.nativeElement.value;\n    }\n\n    get ngControl(): any {\n        return this.control;\n    }\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    get empty(): boolean {\n        return !this.viewValue && !this.isBadInput();\n    }\n\n    get selectionStart(): number | null {\n        return this.elementRef.nativeElement.selectionStart;\n    }\n\n    set selectionStart(value: number | null) {\n        this.elementRef.nativeElement.selectionStart = value;\n    }\n\n    get selectionEnd(): number | null {\n        return this.elementRef.nativeElement.selectionEnd;\n    }\n\n    set selectionEnd(value: number | null) {\n        this.elementRef.nativeElement.selectionEnd = value;\n    }\n\n    private readonly uid = `mc-timepicker-${uniqueComponentIdSuffix++}`;\n\n    private validator: ValidatorFn | null;\n\n    private onChange: (value: any) => void;\n    private onTouched: () => void;\n\n    constructor(\n        private readonly elementRef: ElementRef,\n        @Optional() private dateAdapter: DateAdapter<any>,\n        private readonly renderer: Renderer2\n    ) {\n        if (!this.dateAdapter) {\n            throw Error(`McTimepicker: No provider found for DateAdapter. You must import one of the existing ` +\n                `modules at your application root or provide a custom implementation or use exists ones.`);\n        }\n\n        this.validator = Validators.compose([this.parseValidator, this.minValidator, this.maxValidator]);\n\n        this.onChange = noop;\n\n        // Force setter to be called in case id was not specified.\n        this.id = this.id;\n\n        this.placeholder = TIMEFORMAT_PLACEHOLDERS[DEFAULT_TIME_FORMAT];\n    }\n\n    ngOnDestroy(): void {\n        this.stateChanges.complete();\n    }\n\n    focus(): void {\n        this.elementRef.nativeElement.focus();\n    }\n\n    focusChanged(isFocused: boolean): void {\n        if (isFocused !== this.focused) {\n            this.focused = isFocused;\n            this.onTouched();\n            this.stateChanges.next();\n        }\n    }\n\n    onBlur() {\n        this.lastValueValid = !!this.getDateFromTimeString(this.viewValue);\n        this.control.updateValueAndValidity();\n        this.focusChanged(false);\n    }\n\n    onPaste($event) {\n        const newTimeObj = this.getDateFromTimeString($event.clipboardData.getData('text'));\n\n        if (!newTimeObj) { return; }\n\n        $event.preventDefault();\n\n        this.renderer.setProperty(\n            this.elementRef.nativeElement,\n            'value',\n            this.getTimeStringFromDate(newTimeObj, this.format)\n        );\n\n        this.value = newTimeObj;\n        this.onChange(newTimeObj);\n        this.stateChanges.next();\n    }\n\n    onInput() {\n        const newTimeObj = this.getDateFromTimeString(this.viewValue);\n        this.lastValueValid = !!newTimeObj;\n\n        if (!newTimeObj) {\n            this.control.updateValueAndValidity();\n\n            return;\n        }\n\n        const selectionStart = this.selectionStart;\n        const selectionEnd = this.selectionEnd;\n\n        this.renderer.setProperty(\n            this.elementRef.nativeElement,\n            'value',\n            this.getTimeStringFromDate(newTimeObj, this.format)\n        );\n\n        this.selectionStart = selectionStart;\n        this.selectionEnd = selectionEnd;\n\n        this.createSelectionOfTimeComponentInInput((selectionStart as number) + 1);\n\n        this.onChange(newTimeObj);\n        this.stateChanges.next();\n    }\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    onContainerClick() {\n        this.focus();\n    }\n\n    onKeyDown(event: KeyboardEvent): void {\n        // tslint:disable-next-line: deprecation\n        const keyCode = event.keyCode;\n\n        if (hasModifierKey(event)) {\n            return;\n        } else if ([UP_ARROW, DOWN_ARROW].includes(keyCode)) {\n            event.preventDefault();\n\n            this.verticalArrowKeyHandler(keyCode);\n\n            return;\n        } else if ([LEFT_ARROW, RIGHT_ARROW].includes(keyCode)) {\n            this.horizontalArrowKeyHandler(keyCode);\n\n            return;\n        }\n\n        setTimeout(() => this.onInput());\n    }\n\n    validate(control: AbstractControl): ValidationErrors | null {\n        this.setControl(control);\n\n        return this.validator ? this.validator(control) : null;\n    }\n\n    registerOnValidatorChange(fn: () => void): void {\n        this.validatorOnChange = fn;\n    }\n\n    writeValue(value: D | null): void {\n        this.value = value;\n    }\n\n    registerOnChange(fn: (value: D) => void): void {\n        this.onChange = fn;\n    }\n\n    registerOnTouched(fn: () => void): void {\n        this.onTouched = fn;\n    }\n\n    setDisabledState(isDisabled: boolean): void {\n        this.disabled = isDisabled;\n    }\n\n    /** Checks whether the input is invalid based on the native validation. */\n    private isBadInput(): boolean {\n        const validity = (<HTMLInputElement> this.elementRef.nativeElement).validity;\n\n        return validity && validity.badInput;\n    }\n\n    private verticalArrowKeyHandler(keyCode: number): void {\n        if (!this.value) { return; }\n\n        let changedTime;\n\n        const newEditParams = this.getTimeEditMetrics(this.selectionStart as number);\n\n        if (keyCode === UP_ARROW) {\n            changedTime = this.incrementTime(this.value, newEditParams.modifiedTimePart);\n        }\n\n        if (keyCode === DOWN_ARROW) {\n            changedTime = this.decrementTime(this.value, newEditParams.modifiedTimePart);\n        }\n\n        this.value = changedTime;\n\n        this.selectionStart = newEditParams.cursorStartPosition;\n        this.selectionEnd = newEditParams.cursorEndPosition;\n\n        this.onChange(changedTime);\n        this.stateChanges.next();\n    }\n\n    private horizontalArrowKeyHandler(keyCode: number): void {\n        if (!this.value) { return; }\n\n        let cursorPos = this.selectionStart as number;\n\n        if (keyCode === LEFT_ARROW) {\n            cursorPos = cursorPos === 0 ? this.viewValue.length : cursorPos - 1;\n        } else if (keyCode === RIGHT_ARROW) {\n            const nextDividerPos: number = this.viewValue.indexOf(':', cursorPos);\n\n            cursorPos = nextDividerPos ? nextDividerPos + 1 : 0;\n        }\n\n        this.createSelectionOfTimeComponentInInput(cursorPos);\n    }\n\n    private createSelectionOfTimeComponentInInput(cursorPos: number): void {\n        setTimeout(() => {\n            const newEditParams = this.getTimeEditMetrics(cursorPos);\n\n            this.selectionStart = newEditParams.cursorStartPosition;\n            this.selectionEnd = newEditParams.cursorEndPosition;\n        });\n    }\n\n    private incrementTime(dateVal: D, whatToIncrement: TimeParts = TimeParts.seconds): D {\n        let hours = this.dateAdapter.getHours(dateVal);\n        let minutes = this.dateAdapter.getMinutes(dateVal);\n        let seconds = this.dateAdapter.getSeconds(dateVal);\n\n        switch (whatToIncrement) {\n            case TimeParts.hours:\n                hours++;\n                break;\n            case TimeParts.minutes:\n                minutes++;\n                break;\n            case TimeParts.seconds:\n                seconds++;\n                break;\n            default:\n        }\n\n        if (seconds > SECONDS_PER_MINUTE) { seconds = 0; }\n\n        if (minutes > MINUTES_PER_HOUR) { minutes = 0; }\n\n        if (hours > HOURS_PER_DAY) { hours = 0; }\n\n        return this.dateAdapter.createDateTime(\n            this.dateAdapter.getYear(this.value),\n            this.dateAdapter.getMonth(this.value),\n            this.dateAdapter.getDate(this.value),\n            hours,\n            minutes,\n            seconds,\n            this.dateAdapter.getMilliseconds(this.value)\n        );\n    }\n\n    private decrementTime(dateVal: D, whatToDecrement: TimeParts = TimeParts.seconds): D {\n        let hours = this.dateAdapter.getHours(dateVal);\n        let minutes = this.dateAdapter.getMinutes(dateVal);\n        let seconds = this.dateAdapter.getSeconds(dateVal);\n\n        switch (whatToDecrement) {\n            case TimeParts.hours:\n                hours--;\n                break;\n            case TimeParts.minutes:\n                minutes--;\n                break;\n            case TimeParts.seconds:\n                seconds--;\n                break;\n            default:\n        }\n\n        if (seconds < 0) { seconds = SECONDS_PER_MINUTE; }\n\n        if (minutes < 0) { minutes = MINUTES_PER_HOUR; }\n\n        if (hours < 0) { hours = HOURS_PER_DAY; }\n\n        return this.dateAdapter.createDateTime(\n            this.dateAdapter.getYear(this.value),\n            this.dateAdapter.getMonth(this.value),\n            this.dateAdapter.getDate(this.value),\n            hours,\n            minutes,\n            seconds,\n            this.dateAdapter.getMilliseconds(this.value)\n        );\n    }\n\n    /**\n     * @description Get params for arrow-keys (up/down) time valie edit.\n     * @param cursorPosition Current cursor position in timeString\n     */\n    private getTimeEditMetrics(cursorPosition: number): {\n        modifiedTimePart: TimeParts;\n        cursorStartPosition: number;\n        cursorEndPosition: number;\n    } {\n        const timeString: string = this.viewValue;\n        let modifiedTimePart: TimeParts;\n        let cursorStartPosition: number;\n        let cursorEndPosition: number;\n\n        const hoursIndex = 0;\n        const minutesIndex = timeString.indexOf(':', hoursIndex + 1);\n        const secondsIndex = minutesIndex !== -1 ? timeString.indexOf(':', minutesIndex + 1) : -1;\n\n        if (secondsIndex !== -1 && cursorPosition > secondsIndex) {\n            modifiedTimePart = TimeParts.seconds;\n            cursorStartPosition = secondsIndex + 1;\n            cursorEndPosition = timeString.length;\n        } else if (minutesIndex !== -1 && cursorPosition > minutesIndex) {\n            modifiedTimePart = TimeParts.minutes;\n            cursorStartPosition = minutesIndex + 1;\n            cursorEndPosition = secondsIndex > -1 ? secondsIndex : timeString.length;\n        } else {\n            modifiedTimePart = TimeParts.hours;\n            cursorStartPosition = hoursIndex;\n            cursorEndPosition = minutesIndex !== -1 ? minutesIndex : timeString.length;\n        }\n\n        return { modifiedTimePart, cursorStartPosition, cursorEndPosition };\n    }\n\n    /**\n     * @description Create time string for displaying inside input element of UI\n     */\n    private getTimeStringFromDate(value: D | null, timeFormat: TimeFormats): string {\n        if (!value || !this.dateAdapter.isValid(value)) { return ''; }\n\n        return this.dateAdapter.format(value, timeFormat);\n    }\n\n    private getDateFromTimeString(timeString: string): D | null {\n        if (!timeString) { return null; }\n\n        const hoursAndMinutesAndSeconds = timeString.match(HOURS_MINUTES_SECONDS_REGEXP);\n        const hoursAndMinutes = timeString.match(HOURS_MINUTES_REGEXP);\n        const hoursOnly = timeString.match(HOURS_ONLY_REGEXP);\n        const hoursAndMinutesInAmPm = timeString.match(AM_PM_FORMAT_REGEXP);\n\n        let hours: number = 0;\n        let minutes: number = 0;\n        let seconds: number = 0;\n\n        // tslint:disable:no-magic-numbers\n        if (hoursAndMinutesInAmPm) {\n            hours = Number(hoursAndMinutesInAmPm[1]);\n            minutes = Number(hoursAndMinutesInAmPm[2]);\n\n            if (/[p]/i.test(hoursAndMinutesInAmPm[3]) || (/[a]/i.test(hoursAndMinutesInAmPm[3]) && hours === 12)) {\n                hours += 12;\n            }\n        } else if (hoursAndMinutesAndSeconds) {\n            hours = Number(hoursAndMinutesAndSeconds[1]);\n            minutes = Number(hoursAndMinutesAndSeconds[2]);\n            seconds = Number(hoursAndMinutesAndSeconds[3]);\n        } else if (hoursAndMinutes) {\n            hours = Number(hoursAndMinutes[1]);\n            minutes = Number(hoursAndMinutes[2]);\n        } else if (hoursOnly) {\n            hours = Number(hoursOnly[1]);\n        } else {\n            return null;\n        }\n        // tslint:enable\n\n        const resultDate = this.dateAdapter.createDateTime(\n            this.dateAdapter.getYear(this.value),\n            this.dateAdapter.getMonth(this.value),\n            this.dateAdapter.getDate(this.value),\n            hours,\n            minutes,\n            seconds,\n            this.dateAdapter.getMilliseconds(this.value)\n        );\n\n        return this.getValidDateOrNull(resultDate);\n    }\n\n    private parseValidator: ValidatorFn = (): ValidationErrors | null => {\n        return this.empty || this.lastValueValid ? null : { mcTimepickerParse: { text: this.viewValue } };\n    }\n\n    private minValidator: ValidatorFn = (control: AbstractControl): ValidationErrors | null => {\n        const controlValue = this.getValidDateOrNull(this.dateAdapter.deserialize(control.value));\n\n        return (!this.min || !controlValue || this.compareTime(this.min, controlValue) <= 0) ?\n            null :\n            { mcTimepickerLowerThenMin: { min: this.min, actual: controlValue } };\n    }\n\n    private maxValidator: ValidatorFn = (control: AbstractControl): ValidationErrors | null => {\n        const controlValue = this.getValidDateOrNull(this.dateAdapter.deserialize(control.value));\n\n        return (!this.max || !controlValue || this.compareTime(this.max, controlValue) >= 0) ?\n            null :\n            { mcTimepickerHigherThenMax: { max: this.max, actual: controlValue } };\n    }\n\n    private compareTime(first: D, second: D): number {\n        const result = this.dateAdapter.getHours(first) - this.dateAdapter.getHours(second) ||\n            this.dateAdapter.getMinutes(first) - this.dateAdapter.getMinutes(second);\n\n        if (TimeFormats.HHmm === this.format) {\n            return result;\n        } else if (TimeFormats.HHmmss === this.format) {\n            return result || this.dateAdapter.getSeconds(first) - this.dateAdapter.getSeconds(second);\n        } else {\n            throw Error(`Unknown format: ${this.format}`);\n        }\n    }\n\n    private getValidDateOrNull(obj: any): D | null {\n        return (this.dateAdapter.isDateInstance(obj) && this.dateAdapter.isValid(obj)) ? obj : null;\n    }\n\n    private updateView() {\n        const formattedValue = this.getTimeStringFromDate(this.value, this.format);\n\n        this.renderer.setProperty(this.elementRef.nativeElement, 'value', formattedValue);\n    }\n\n    private setControl(control: AbstractControl) {\n        if (!this.control) {\n            this.control = control;\n        }\n    }\n\n    // tslint:disable-next-line:no-empty\n    private validatorOnChange = () => {};\n}\n","import { A11yModule } from '@angular/cdk/a11y';\nimport { PlatformModule } from '@angular/cdk/platform';\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\n\nimport { McTimepicker } from './timepicker';\n\n\n@NgModule({\n    imports: [\n        CommonModule,\n        A11yModule,\n        PlatformModule,\n        FormsModule\n    ],\n    declarations: [McTimepicker],\n    exports: [McTimepicker]\n})\nexport class McTimepickerModule {}\n"],"names":["NG_VALUE_ACCESSOR","forwardRef","NG_VALIDATORS","Subject","Validators","noop","coerceBooleanProperty","hasModifierKey","UP_ARROW","DOWN_ARROW","LEFT_ARROW","RIGHT_ARROW","Directive","McFormFieldControl","ElementRef","DateAdapter","Optional","Renderer2","Input","NgModule","CommonModule","A11yModule","PlatformModule","FormsModule"],"mappings":"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"}