{"version":3,"file":"mosaic-modal.umd.min.js","sources":["../../node_modules/tslib/tslib.es6.js","../../packages/mosaic/modal/modal.component.ts","../../packages/mosaic/modal/modal-control.service.ts","../../packages/mosaic/modal/modal-ref.class.ts","../../packages/mosaic/modal/modal-util.ts","../../packages/mosaic/modal/css-unit.pipe.ts","../../packages/mosaic/modal/modal.directive.ts","../../packages/mosaic/modal/modal.service.ts","../../packages/mosaic/modal/modal.module.ts"],"sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","import { Overlay, OverlayRef } from '@angular/cdk/overlay';\nimport { DOCUMENT } from '@angular/common';\nimport {\n    AfterViewInit, ChangeDetectionStrategy, ChangeDetectorRef,\n    Component,\n    ComponentFactoryResolver,\n    ComponentRef,\n    ElementRef,\n    EventEmitter,\n    Inject,\n    Injector,\n    Input,\n    OnChanges,\n    OnDestroy,\n    OnInit,\n    Output,\n    Renderer2,\n    SimpleChanges,\n    TemplateRef,\n    Type,\n    ViewChild,\n    ViewContainerRef, ViewEncapsulation\n} from '@angular/core';\nimport { ESCAPE } from '@ptsecurity/cdk/keycodes';\nimport { Observable } from 'rxjs';\n\nimport { McModalControlService } from './modal-control.service';\nimport { McModalRef } from './modal-ref.class';\n// tslint:disable-next-line\nimport ModalUtil from './modal-util';\nimport { IModalButtonOptions, IModalOptions, ModalType, OnClickCallback } from './modal.type';\n\n\n// Duration when perform animations (ms)\nexport const MODAL_ANIMATE_DURATION = 200;\n\ntype AnimationState = 'enter' | 'leave' | null;\n\n@Component({\n    selector: 'mc-modal',\n    templateUrl: './modal.component.html',\n    styleUrls: ['./modal.css'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n    host: {\n        '(keydown)': 'onKeyDown($event)'\n    }\n})\nexport class McModalComponent<T = any, R = any> extends McModalRef<T, R>\n    implements OnInit, OnChanges, AfterViewInit, OnDestroy, IModalOptions {\n\n    // tslint:disable-next-line:no-any\n    @Input() mcModalType: ModalType = 'default';\n\n    // The instance of component opened into the dialog.\n    @Input() mcComponent: Type<T>;\n    // If not specified, will use <ng-content>\n    @Input() mcContent: string | TemplateRef<{}> | Type<T>;\n    // available when mcContent is a component\n    @Input() mcComponentParams: T;\n    // Default Modal ONLY\n    @Input() mcFooter: string | TemplateRef<{}> | IModalButtonOptions<T>[];\n\n    @Input()\n    get mcVisible() { return this._mcVisible; }\n    set mcVisible(value) { this._mcVisible = value; }\n\n    _mcVisible = false;\n\n    @Output() mcVisibleChange = new EventEmitter<boolean>();\n\n    @Input() mcZIndex: number = 1000;\n    @Input() mcWidth: number | string = 480;\n    @Input() mcWrapClassName: string;\n    @Input() mcClassName: string;\n    @Input() mcStyle: object;\n    @Input() mcTitle: string | TemplateRef<{}>;\n    @Input() mcCloseByESC: boolean = true;\n\n    @Input()\n    get mcClosable() { return this._mcClosable; }\n    set mcClosable(value) { this._mcClosable = value; }\n    _mcClosable = true;\n\n    @Input()\n    get mcMask() { return this._mcMask; }\n    set mcMask(value) { this._mcMask = value; }\n    _mcMask = true;\n\n    @Input()\n    get mcMaskClosable() { return this._mcMaskClosable; }\n    set mcMaskClosable(value) { this._mcMaskClosable = value; }\n    _mcMaskClosable = true;\n\n    @Input() mcMaskStyle: object;\n    @Input() mcBodyStyle: object;\n\n    // Trigger when modal open(visible) after animations\n    @Output() mcAfterOpen = new EventEmitter<void>();\n    // Trigger when modal leave-animation over\n    @Output() mcAfterClose = new EventEmitter<R>();\n\n    // --- Predefined OK & Cancel buttons\n    @Input() mcOkText: string;\n    @Input() mcOkType = 'primary';\n\n    @Input()\n    get mcOkLoading() { return this._mcOkLoading; }\n    set mcOkLoading(value) { this._mcOkLoading = value; }\n    _mcOkLoading = false;\n\n    @Input() @Output() mcOnOk: EventEmitter<T> | OnClickCallback<T> = new EventEmitter<T>();\n    @Input() mcCancelText: string;\n\n    @Input()\n    get mcCancelLoading() { return this._mcCancelLoading; }\n    set mcCancelLoading(value) { this._mcCancelLoading = value; }\n    _mcCancelLoading = false;\n\n    @Input() @Output() mcOnCancel: EventEmitter<T> | OnClickCallback<T> = new EventEmitter<T>();\n\n    @ViewChild('modalContainer', { static: true }) modalContainer: ElementRef;\n    @ViewChild('bodyContainer', { read: ViewContainerRef, static: false}) bodyContainer: ViewContainerRef;\n    // Only aim to focus the ok button that needs to be auto focused\n    @ViewChild('autoFocusButtonOk', { read: ElementRef, static: false}) autoFocusButtonOk: ElementRef;\n\n    maskAnimationClassMap: object;\n    modalAnimationClassMap: object;\n    // The origin point that animation based on\n    transformOrigin = '0px 0px 0px';\n\n    // Observable alias for mcAfterOpen\n    get afterOpen(): Observable<void> {\n        return this.mcAfterOpen.asObservable();\n    }\n\n    // Observable alias for mcAfterClose\n    get afterClose(): Observable<R> {\n        return this.mcAfterClose.asObservable();\n    }\n\n    get okText(): string {\n        return this.mcOkText;\n    }\n\n    get cancelText(): string {\n        return this.mcCancelText;\n    }\n\n    // Indicate whether this dialog should hidden\n    get hidden(): boolean {\n        return !this.mcVisible && !this.animationState;\n    }\n\n    // Handle the reference when using mcContent as Component\n    private contentComponentRef: ComponentRef<T>;\n    // Current animation state\n    private animationState: AnimationState;\n    private container: HTMLElement | OverlayRef;\n\n    constructor(\n        private overlay: Overlay,\n        private renderer: Renderer2,\n        private cfr: ComponentFactoryResolver,\n        private elementRef: ElementRef,\n        private viewContainer: ViewContainerRef,\n        private modalControl: McModalControlService,\n        private changeDetector: ChangeDetectorRef,\n        @Inject(DOCUMENT) private document: any) {\n\n        super();\n    }\n\n    @Input() mcGetContainer: HTMLElement | OverlayRef | (() => HTMLElement | OverlayRef) = () => this.overlay.create();\n\n    ngOnInit() {\n\n        // Create component along without View\n        if (this.isComponent(this.mcContent)) {\n            this.createDynamicComponent(this.mcContent as Type<T>);\n        }\n\n        // Setup default button options\n        if (this.isModalButtons(this.mcFooter)) {\n            this.mcFooter = this.formatModalButtons(this.mcFooter as IModalButtonOptions<T>[]);\n        }\n\n\n        if (this.isComponent(this.mcComponent)) {\n            this.createDynamicComponent(this.mcComponent as Type<T>);\n        }\n\n        // Place the modal dom to elsewhere\n        this.container = typeof this.mcGetContainer === 'function' ? this.mcGetContainer() : this.mcGetContainer;\n        if (this.container instanceof HTMLElement) {\n            this.container.appendChild(this.elementRef.nativeElement);\n        } else if (this.container instanceof OverlayRef) {\n            // NOTE: only attach the dom to overlay, the view container is not changed actually\n            this.container.overlayElement.appendChild(this.elementRef.nativeElement);\n        }\n\n        // Register modal when afterOpen/afterClose is stable\n        this.modalControl.registerModal(this);\n    }\n\n    // [NOTE] NOT available when using by service!\n    // Because ngOnChanges never be called when using by service,\n    // here we can't support \"mcContent\"(Component) etc. as inputs that initialized dynamically.\n    // BUT: User also can change \"mcContent\" dynamically to trigger UI changes\n    // (provided you don't use \bComponent that needs initializations)\n    ngOnChanges(changes: SimpleChanges) {\n        if (changes.mcVisible) {\n            // Do not trigger animation while initializing\n            this.handleVisibleStateChange(this.mcVisible, !changes.mcVisible.firstChange);\n        }\n    }\n\n    ngAfterViewInit() {\n        // If using Component, it is the time to attach View while bodyContainer is ready\n        if (this.contentComponentRef) {\n            this.bodyContainer.insert(this.contentComponentRef.hostView);\n        }\n\n        if (this.autoFocusButtonOk) {\n            (this.autoFocusButtonOk.nativeElement as HTMLButtonElement).focus();\n        }\n    }\n\n    ngOnDestroy() {\n        if (this.container instanceof OverlayRef) {\n            this.container.dispose();\n        }\n    }\n\n    open() {\n        this.changeVisibleFromInside(true);\n    }\n\n    close(result?: R) {\n        this.changeVisibleFromInside(false, result);\n    }\n\n    // Destroy equals Close\n    destroy(result?: R) {\n        this.close(result);\n    }\n\n    triggerOk() {\n        this.onClickOkCancel('ok');\n    }\n\n    triggerCancel() {\n        this.onClickOkCancel('cancel');\n    }\n\n    getInstance(): McModalComponent {\n        return this;\n    }\n\n    getContentComponentRef(): ComponentRef<T> {\n        return this.contentComponentRef;\n    }\n\n    getContentComponent(): T {\n        return this.contentComponentRef && this.contentComponentRef.instance;\n    }\n\n    getElement(): HTMLElement {\n        return this.elementRef && this.elementRef.nativeElement;\n    }\n\n    onClickMask($event: MouseEvent) {\n        if (\n            this.mcMask &&\n            this.mcMaskClosable &&\n            ($event.target as HTMLElement).classList.contains('mc-modal-wrap') &&\n            this.mcVisible\n        ) {\n            this.onClickOkCancel('cancel');\n        }\n    }\n\n    // tslint:disable-next-line\n    isModalType(type: ModalType): boolean {\n        return this.mcModalType === type;\n    }\n\n    onKeyDown(event: KeyboardEvent): void {\n\n        if (event.keyCode === ESCAPE && this.container && (this.container instanceof OverlayRef)) {\n\n            this.close();\n            event.preventDefault();\n        }\n    }\n\n    // AoT\n    onClickCloseBtn() {\n        if (this.mcVisible) {\n            this.onClickOkCancel('cancel');\n        }\n    }\n\n    // AoT\n    // tslint:disable-next-line\n    onClickOkCancel(type: 'ok' | 'cancel') {\n        const trigger = { ok: this.mcOnOk, cancel: this.mcOnCancel }[type];\n        const loadingKey = { ok: 'mcOkLoading', cancel: 'mcCancelLoading' }[type];\n\n        if (trigger instanceof EventEmitter) {\n            trigger.emit(this.getContentComponent());\n        } else if (typeof trigger === 'function') {\n\n            const result = trigger(this.getContentComponent());\n            // Users can return \"false\" to prevent closing by default\n            const caseClose = (doClose: boolean | void | {}) => (doClose !== false) && this.close(doClose as R);\n\n            if (isPromise(result)) {\n                this[loadingKey] = true;\n                const handleThen = (doClose) => {\n                    this[loadingKey] = false;\n                    caseClose(doClose);\n                };\n                (result as Promise<void>).then(handleThen).catch(handleThen);\n            } else {\n                caseClose(result);\n            }\n        }\n    }\n\n    // AoT\n    isNonEmptyString(value: {}): boolean {\n        return typeof value === 'string' && value !== '';\n    }\n\n    // AoT\n    isTemplateRef(value: {}): boolean {\n        return value instanceof TemplateRef;\n    }\n\n    // AoT\n    isComponent(value: {}): boolean {\n        return value instanceof Type;\n    }\n\n    // AoT\n    isModalButtons(value: {}): boolean {\n        return Array.isArray(value) && value.length > 0;\n    }\n\n    // Do rest things when visible state changed\n    private handleVisibleStateChange(visible: boolean, animation: boolean = true, closeResult?: R): Promise<any> {\n        // Hide scrollbar at the first time when shown up\n        if (visible) {\n            this.changeBodyOverflow(1);\n        }\n\n        return Promise\n            .resolve(animation && this.animateTo(visible))\n            // Emit open/close event after animations over\n            .then(() => {\n                if (visible) {\n                    this.mcAfterOpen.emit();\n                } else {\n                    this.mcAfterClose.emit(closeResult);\n                    // Show/hide scrollbar when animation is over\n                    this.changeBodyOverflow();\n                }\n            });\n    }\n\n    // Lookup a button's property, if the prop is a function, call & then return the result, otherwise, return itself.\n    // AoT\n    // tslint:disable-next-line\n    getButtonCallableProp(options: IModalButtonOptions<T>, prop: string): {} {\n        const value = options[prop];\n        const args: any[] = [];\n        if (this.contentComponentRef) {\n            args.push(this.contentComponentRef.instance);\n        }\n\n        return typeof value === 'function' ? value.apply(options, args) : value;\n    }\n\n    // On mcFooter's modal button click\n    // AoT\n    // tslint:disable-next-line\n    onButtonClick(button: IModalButtonOptions<T>) {\n        // Call onClick directly\n        const result = this.getButtonCallableProp(button, 'onClick');\n        if (isPromise(result)) {\n            button.loading = true;\n            (result as Promise<{}>).then(() => button.loading = false).catch(() => button.loading = false);\n        }\n    }\n\n    // Change mcVisible from inside\n    private changeVisibleFromInside(visible: boolean, closeResult?: R): Promise<void> {\n        if (this.mcVisible !== visible) {\n            // Change mcVisible value immediately\n            this.mcVisible = visible;\n            this.mcVisibleChange.emit(visible);\n\n            return this.handleVisibleStateChange(visible, true, closeResult);\n        }\n\n        return Promise.resolve();\n    }\n\n    private changeAnimationState(state: AnimationState) {\n        this.animationState = state;\n        if (state) {\n            this.maskAnimationClassMap = {\n                [`fade-${state}`]: true,\n                [`fade-${state}-active`]: true\n            };\n            this.modalAnimationClassMap = {\n                [`zoom-${state}`]: true,\n                [`zoom-${state}-active`]: true\n            };\n        } else {\n            // @ts-ignore\n            this.maskAnimationClassMap = this.modalAnimationClassMap = null;\n        }\n\n        if (this.contentComponentRef) {\n            this.contentComponentRef.changeDetectorRef.markForCheck();\n        } else {\n            this.changeDetector.markForCheck();\n        }\n    }\n\n    private animateTo(isVisible: boolean): Promise<any> {\n        // Figure out the lastest click position when shows up\n        if (isVisible) {\n            // [NOTE] Using timeout due to the document.click event is fired later than visible change,\n            // so if not postponed to next event-loop, we can't get the lastest click position\n            window.setTimeout(() => this.updateTransformOrigin());\n        }\n\n        this.changeAnimationState(isVisible ? 'enter' : 'leave');\n\n        // Return when animation is over\n        return new Promise((resolve) => window.setTimeout(() => {\n            this.changeAnimationState(null);\n            resolve();\n        }, MODAL_ANIMATE_DURATION));\n    }\n\n    private formatModalButtons(buttons: IModalButtonOptions<T>[]): IModalButtonOptions<T>[] {\n        return buttons.map((button) => {\n\n            return {\n                ...{\n                    type: 'default',\n                    size: 'default',\n                    autoLoading: true,\n                    show: true,\n                    loading: false,\n                    disabled: false\n                },\n                ...button\n            };\n        });\n    }\n\n    /**\n     * Create a component dynamically but not attach to any View\n     * (this action will be executed when bodyContainer is ready)\n     * @param component Component class\n     */\n    private createDynamicComponent(component: Type<T>) {\n        const factory = this.cfr.resolveComponentFactory(component);\n        const childInjector = Injector.create({\n            providers: [{provide: McModalRef, useValue: this}],\n            parent: this.viewContainer.parentInjector\n        });\n\n        this.contentComponentRef = factory.create(childInjector);\n\n        if (this.mcComponentParams) {\n            Object.assign(this.contentComponentRef.instance, this.mcComponentParams);\n        }\n\n        // Do the first change detection immediately\n        // (or we do detection at ngAfterViewInit, multi-changes error will be thrown)\n        this.contentComponentRef.changeDetectorRef.detectChanges();\n    }\n\n    // Update transform-origin to the last click position on document\n    private updateTransformOrigin() {\n        const modalElement = this.modalContainer.nativeElement as HTMLElement;\n        const lastPosition = ModalUtil.getLastClickPosition();\n\n        if (lastPosition) {\n            // tslint:disable-next-line\n            this.transformOrigin = `${lastPosition.x - modalElement.offsetLeft}px ${lastPosition.y - modalElement.offsetTop}px 0px`;\n        }\n    }\n\n    /**\n     * Take care of the body's overflow to decide the existense of scrollbar\n     * @param plusNum The number that the openModals.length will increase soon\n     */\n    private changeBodyOverflow(plusNum: number = 0) {\n        const openModals = this.modalControl.openModals;\n\n        if (openModals.length + plusNum > 0) {\n            // tslint:disable-next-line\n            this.renderer.setStyle(this.document.body, 'overflow', 'hidden');\n        } else {\n            this.renderer.removeStyle(this.document.body, 'overflow');\n        }\n    }\n}\n\n////////////\n\nfunction isPromise(obj: {} | void): boolean {\n    // tslint:disable-next-line\n    return !!obj && (typeof obj === 'object' || typeof obj === 'function') && typeof (obj as Promise<{}>).then === 'function' && typeof (obj as Promise<{}>).catch === 'function';\n}\n","import { Injectable, Optional, SkipSelf } from '@angular/core';\nimport { Subject, Subscription } from 'rxjs';\n\nimport { McModalRef } from './modal-ref.class';\n\n\ninterface IRegisteredMeta {\n    modalRef: McModalRef;\n    afterOpenSubscription: Subscription;\n    afterCloseSubscription: Subscription;\n}\n\n@Injectable()\nexport class McModalControlService {\n\n    // Track singleton afterAllClose through over the injection tree\n    get afterAllClose(): Subject<void> {\n        return this.parentService ? this.parentService.afterAllClose : this.rootAfterAllClose!;\n    }\n\n    // Track singleton openModals array through over the injection tree\n    get openModals(): McModalRef[] {\n        return this.parentService ? this.parentService.openModals : this.rootOpenModals!;\n    }\n\n    // @ts-ignore\n    private rootOpenModals: McModalRef[] = this.parentService ? null : [];\n    // @ts-ignore\n    private rootAfterAllClose: Subject<void> = this.parentService ? null : new Subject<void>();\n    // @ts-ignore\n    private rootRegisteredMetaMap: Map<McModalRef, IRegisteredMeta> = this.parentService ? null : new Map();\n\n    // Registered modal for later usage\n    private get registeredMetaMap(): Map<McModalRef, IRegisteredMeta> {\n        return this.parentService ? this.parentService.registeredMetaMap : this.rootRegisteredMetaMap;\n    }\n\n    constructor(\n        @Optional() @SkipSelf() private parentService: McModalControlService) {\n    }\n\n    // Register a modal to listen its open/close\n    registerModal(modalRef: McModalRef): void {\n        if (!this.hasRegistered(modalRef)) {\n            const afterOpenSubscription = modalRef.afterOpen.subscribe(() => this.openModals.push(modalRef));\n            const afterCloseSubscription = modalRef.afterClose.subscribe(() => this.removeOpenModal(modalRef));\n\n            this.registeredMetaMap.set(modalRef, {modalRef, afterOpenSubscription, afterCloseSubscription});\n        }\n    }\n\n    hasRegistered(modalRef: McModalRef): boolean {\n        return this.registeredMetaMap.has(modalRef);\n    }\n\n    // Close all registered opened modals\n    closeAll(): void {\n        let i = this.openModals.length;\n\n        while (i--) {\n            this.openModals[i].close();\n        }\n    }\n\n    private removeOpenModal(modalRef: McModalRef): void {\n        const index = this.openModals.indexOf(modalRef);\n\n        if (index > -1) {\n            this.openModals.splice(index, 1);\n\n            if (!this.openModals.length) {\n                this.afterAllClose.next();\n            }\n        }\n    }\n}\n","import { Observable } from 'rxjs';\n\nimport { McModalComponent } from './modal.component';\n\n\n/**\n * API class that public to users to handle the modal instance.\n * McModalRef is aim to avoid accessing to the modal instance directly by users.\n */\nexport abstract class McModalRef<T = any, R = any> {\n    abstract afterOpen: Observable<void>;\n    abstract afterClose: Observable<R>;\n\n    abstract open(): void;\n\n    abstract close(result?: R): void;\n\n    abstract destroy(result?: R): void;\n\n    /**\n     * Trigger the mcOnOk/mcOnCancel by manual\n     */\n    abstract triggerOk(): void;\n\n    abstract triggerCancel(): void;\n\n    // /**\n    //  * Return the ComponentRef of mcContent when specify mcContent as a Component\n    //  * Note: this method may return undefined if the Component has not ready yet.\n    //    (it only available after Modal's ngOnInit)\n    //  */\n    // abstract getContentComponentRef(): ComponentRef<{}>;\n\n    /**\n     * Return the component instance of mcContent when specify mcContent as a Component\n     * Note: this method may return undefined if the Component has not ready yet.\n     * (it only available after Modal's ngOnInit)\n     */\n    abstract getContentComponent(): T;\n\n    /**\n     * Get the dom element of this Modal\n     */\n    abstract getElement(): HTMLElement;\n\n    /**\n     * Get the instance of the Modal itself\n     */\n    abstract getInstance(): McModalComponent;\n}\n","export interface IClickPosition {\n    x: number;\n    y: number;\n}\n\nexport class ModalUtil {\n    private lastPosition: IClickPosition;\n\n    constructor(private document: Document) {\n        this.lastPosition = {x: -1, y: -1};\n        this.listenDocumentClick();\n    }\n\n    getLastClickPosition(): IClickPosition {\n        return this.lastPosition;\n    }\n\n    listenDocumentClick(): void {\n        this.document.addEventListener('click', (event: MouseEvent) => {\n            this.lastPosition = {x: event.clientX, y: event.clientY};\n        });\n    }\n}\n\nexport default new ModalUtil(document);\n","import { Pipe, PipeTransform } from '@angular/core';\n\n\n@Pipe({\n    name: 'toCssUnit'\n})\nexport class CssUnitPipe implements PipeTransform {\n    transform(value: number | string, defaultUnit: string = 'px'): string {\n        const formatted = +value;\n\n        return isNaN(formatted) ? `${value}` : `${formatted}${defaultUnit}`;\n    }\n}\n","import { Directive } from '@angular/core';\n\n\n@Directive({\n    selector: `[mc-modal-title], mc-modal-title, [mcModalTitle]`,\n    host: {\n        class: 'mc-modal-header mc-modal-title'\n    }\n})\nexport class McModalTitle {}\n\n@Directive({\n    selector: `[mc-modal-body], mc-modal-body, [mcModalBody]`,\n    host: {\n        class: 'mc-modal-body'\n    }\n})\nexport class McModalBody {}\n\n@Directive({\n    selector: `[mc-modal-footer], mc-modal-footer, [mcModalFooter]`,\n    host: {\n        class: 'mc-modal-footer'\n    }\n})\nexport class McModalFooter {}\n","import { ComponentType, Overlay, OverlayRef } from '@angular/cdk/overlay';\nimport { ComponentPortal } from '@angular/cdk/portal';\nimport { ComponentRef, Injectable, TemplateRef } from '@angular/core';\nimport { ESCAPE } from '@ptsecurity/cdk/keycodes';\nimport { Observable } from 'rxjs';\nimport { filter } from 'rxjs/operators';\n\nimport { McModalControlService } from './modal-control.service';\nimport { McModalRef } from './modal-ref.class';\nimport { McModalComponent } from './modal.component';\nimport { ConfirmType, IModalOptions, IModalOptionsForService } from './modal.type';\n\n\n// A builder used for managing service creating modals\nexport class ModalBuilderForService {\n\n    // Modal ComponentRef, \"null\" means it has been destroyed\n    private modalRef: ComponentRef<McModalComponent> | null;\n    private overlayRef: OverlayRef;\n\n    constructor(private overlay: Overlay, options: IModalOptionsForService = {}) {\n        this.createModal();\n\n        if (!('mcGetContainer' in options)) {\n            options.mcGetContainer = undefined;\n        }\n\n        this.changeProps(options);\n        this.modalRef!.instance.open();\n        this.modalRef!.instance.mcAfterClose.subscribe(() => this.destroyModal());\n\n        this.overlayRef.keydownEvents()\n            // @ts-ignore\n            .pipe(filter((event: KeyboardEvent) => {\n                return event.keyCode === ESCAPE && options.mcCloseByESC;\n            }))\n            .subscribe(() => this.modalRef!.instance.close());\n    }\n\n    getInstance(): McModalComponent | null {\n        return this.modalRef && this.modalRef.instance;\n    }\n\n    destroyModal(): void {\n        if (this.modalRef) {\n            this.overlayRef.dispose();\n            this.modalRef = null;\n        }\n    }\n\n    private changeProps(options: IModalOptions): void {\n        if (this.modalRef) {\n            // here not limit user's inputs at runtime\n            Object.assign(this.modalRef.instance, options);\n        }\n    }\n\n    // Create component to ApplicationRef\n    private createModal(): void {\n        this.overlayRef = this.overlay.create();\n        this.modalRef = this.overlayRef.attach(new ComponentPortal(McModalComponent));\n    }\n}\n\n@Injectable()\nexport class McModalService {\n    // Track of the current close modals (we assume invisible is close this time)\n    get openModals(): McModalRef[] {\n        return this.modalControl.openModals;\n    }\n\n    get afterAllClose(): Observable<void> {\n        return this.modalControl.afterAllClose.asObservable();\n    }\n\n    constructor(\n        private overlay: Overlay,\n        private modalControl: McModalControlService) {\n    }\n\n    // Closes all of the currently-open dialogs\n    closeAll(): void {\n        this.modalControl.closeAll();\n    }\n\n    create<T>(options: IModalOptionsForService<T> = {}): McModalRef<T> {\n\n        if (typeof options.mcOnCancel !== 'function') {\n            // Leave a empty function to close this modal by default\n            // tslint:disable-next-line\n            options.mcOnCancel = () => {};\n        }\n\n        if (!('mcCloseByESC' in options)) {\n            options.mcCloseByESC = true;\n        }\n\n\n        if (!('mcWidth' in options)) {\n            // tslint:disable-next-line\n            options.mcWidth = 480;\n        }\n\n        return new ModalBuilderForService(this.overlay, options).getInstance()!;\n    }\n\n    confirm<T>(options: IModalOptionsForService<T> = {}, confirmType: ConfirmType = 'confirm'): McModalRef<T> {\n        if ('mcFooter' in options) {\n            console.warn(`The Confirm-Modal doesn't support \"mcFooter\", this property will be ignored.`);\n        }\n\n        // NOTE: only support function currently by calling confirm()\n        if (typeof options.mcOnOk !== 'function') {\n            // Leave a empty function to close this modal by default\n            // tslint:disable-next-line\n            options.mcOnOk = () => {};\n        }\n\n        options.mcModalType = 'confirm';\n        options.mcClassName = `mc-confirm mc-confirm-${confirmType} ${options.mcClassName || ''}`;\n        options.mcMaskClosable = false;\n\n        return this.create(options);\n    }\n\n    open<T>(options: IModalOptionsForService<T> = {}): McModalRef<T> {\n\n        options.mcModalType = 'custom';\n\n        return this.create(options);\n    }\n\n    success<T>(options: IModalOptionsForService<T> = {}): McModalRef<T> {\n        return this.simpleConfirm(options, 'success');\n    }\n\n    delete<T>(options: IModalOptionsForService<T> = {}): McModalRef<T> {\n        return this.simpleConfirm(options, 'warn');\n    }\n\n    private simpleConfirm<T>(options: IModalOptionsForService<T> = {}, confirmType: ConfirmType): McModalRef<T> {\n        // Remove the Cancel button if the user not specify a Cancel button\n        if (!('mcCancelText' in options)) {\n            // @ts-ignore\n            options.mcCancelText = null;\n        }\n\n        return this.confirm(options, confirmType);\n    }\n}\n","import { A11yModule } from '@angular/cdk/a11y';\nimport { OverlayModule } from '@angular/cdk/overlay';\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { McButtonModule } from '@ptsecurity/mosaic/button';\nimport { McIconModule } from '@ptsecurity/mosaic/icon';\n\nimport { CssUnitPipe } from './css-unit.pipe';\nimport { McModalControlService } from './modal-control.service';\nimport { McModalComponent } from './modal.component';\nimport { McModalBody, McModalFooter, McModalTitle } from './modal.directive';\nimport { McModalService } from './modal.service';\n\n\n@NgModule({\n    imports: [CommonModule, OverlayModule, A11yModule, McButtonModule, McIconModule],\n    exports: [\n        McModalComponent,\n        McModalTitle,\n        McModalBody,\n        McModalFooter\n    ],\n    declarations: [\n        McModalComponent,\n        McModalTitle,\n        McModalBody,\n        McModalFooter,\n        CssUnitPipe\n    ],\n    entryComponents: [McModalComponent],\n    providers: [McModalControlService, McModalService]\n})\nexport class McModalModule {}\n"],"names":["__extends","d","b","__","this","constructor","extendStatics","prototype","Object","create","isPromise","obj","then","catch","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__assign","assign","t","s","i","n","arguments","length","call","apply","McModalControlService","parentService","rootOpenModals","rootAfterAllClose","Subject","rootRegisteredMetaMap","Map","defineProperty","afterAllClose","openModals","registeredMetaMap","registerModal","modalRef","_this","hasRegistered","afterOpenSubscription","afterOpen","subscribe","push","afterCloseSubscription","afterClose","removeOpenModal","set","has","closeAll","close","index","indexOf","splice","next","type","Injectable","decorators","Optional","SkipSelf","McModalRef","ModalUtil","document","lastPosition","x","y","listenDocumentClick","getLastClickPosition","addEventListener","event","clientX","clientY","ModalUtil$1","McModalComponent","_super","overlay","renderer","cfr","elementRef","viewContainer","modalControl","changeDetector","mcModalType","_mcVisible","mcVisibleChange","EventEmitter","mcZIndex","mcWidth","mcCloseByESC","_mcClosable","_mcMask","_mcMaskClosable","mcAfterOpen","mcAfterClose","mcOkType","_mcOkLoading","mcOnOk","_mcCancelLoading","mcOnCancel","transformOrigin","mcGetContainer","tslib_1.__extends","value","asObservable","mcOkText","mcCancelText","mcVisible","animationState","ngOnInit","isComponent","mcContent","createDynamicComponent","isModalButtons","mcFooter","formatModalButtons","mcComponent","container","HTMLElement","appendChild","nativeElement","OverlayRef","overlayElement","ngOnChanges","changes","handleVisibleStateChange","firstChange","ngAfterViewInit","contentComponentRef","bodyContainer","insert","hostView","autoFocusButtonOk","focus","ngOnDestroy","dispose","open","changeVisibleFromInside","result","destroy","triggerOk","onClickOkCancel","triggerCancel","getInstance","getContentComponentRef","getContentComponent","instance","getElement","onClickMask","$event","mcMask","mcMaskClosable","classList","contains","isModalType","onKeyDown","keyCode","ESCAPE","preventDefault","onClickCloseBtn","trigger","ok","cancel","loadingKey","emit","caseClose_1","doClose","handleThen","isNonEmptyString","isTemplateRef","TemplateRef","Type","isArray","visible","animation","closeResult","changeBodyOverflow","Promise","resolve","animateTo","getButtonCallableProp","options","prop","args","onButtonClick","button","loading","changeAnimationState","state","maskAnimationClassMap","_a","modalAnimationClassMap","_b","changeDetectorRef","markForCheck","isVisible","window","setTimeout","updateTransformOrigin","buttons","map","tslib_1.__assign","size","autoLoading","show","disabled","component","factory","resolveComponentFactory","childInjector","Injector","providers","provide","useValue","parent","parentInjector","mcComponentParams","detectChanges","modalElement","modalContainer","offsetLeft","offsetTop","plusNum","setStyle","body","removeStyle","Component","selector","template","styles","changeDetection","ChangeDetectionStrategy","OnPush","encapsulation","ViewEncapsulation","None","host","(keydown)","Overlay","Renderer2","ComponentFactoryResolver","ElementRef","ViewContainerRef","ChangeDetectorRef","undefined","Inject","DOCUMENT","Input","Output","mcWrapClassName","mcClassName","mcStyle","mcTitle","mcClosable","mcMaskStyle","mcBodyStyle","mcOkLoading","mcCancelLoading","ViewChild","static","read","CssUnitPipe","transform","defaultUnit","formatted","isNaN","Pipe","name","McModalTitle","Directive","class","McModalBody","McModalFooter","ModalBuilderForService","createModal","changeProps","destroyModal","overlayRef","keydownEvents","pipe","filter","attach","ComponentPortal","McModalService","confirm","confirmType","console","warn","success","simpleConfirm","delete","McModalModule","NgModule","imports","CommonModule","OverlayModule","A11yModule","McButtonModule","McIconModule","exports","declarations","entryComponents"],"mappings":"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"}