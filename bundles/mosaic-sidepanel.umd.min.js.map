{"version":3,"file":"mosaic-sidepanel.umd.min.js","sources":["../../node_modules/tslib/tslib.es6.js","../../src/lib/sidepanel/sidepanel-directives.ts","../../src/lib/sidepanel/sidepanel-config.ts","../../src/lib/sidepanel/sidepanel-animations.ts","../../src/lib/sidepanel/sidepanel-container.component.ts","../../src/lib/sidepanel/sidepanel-ref.ts","../../src/lib/sidepanel/sidepanel.service.ts","../../src/lib/sidepanel/sidepanel.module.ts"],"sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","import { Component, Directive, ElementRef, Input, OnChanges, OnInit, Optional, SimpleChanges } from '@angular/core';\n\nimport { McSidepanelRef } from './sidepanel-ref';\nimport { McSidepanelService } from './sidepanel.service';\n\n\n/**\n * Button that will close the current sidepanel.\n */\n@Directive({\n    selector: 'button[mc-sidepanel-close], button[mcSidepanelClose]',\n    host: {\n        '(click)': 'sidepanelRef.close(sidepanelResult)',\n        class: 'mc-sidepanel-close',\n        type: 'button'\n    }\n})\nexport class McSidepanelClose implements OnInit, OnChanges {\n    @Input('mc-sidepanel-close') sidepanelResult: any;\n\n    @Input('mcSidepanelClose') mcSidepanelClose: any;\n\n    constructor(\n        @Optional() public sidepanelRef: McSidepanelRef,\n        private elementRef: ElementRef<HTMLElement>,\n        private sidepanelService: McSidepanelService\n    ) {}\n\n    ngOnInit() {\n        if (!this.sidepanelRef) {\n            // When this directive is included in a sidepanel via TemplateRef (rather than being\n            // in a Component), the SidepanelRef isn't available via injection because embedded\n            // views cannot be given a custom injector. Instead, we look up the SidepanelRef by\n            // ID.\n            // This must occur in `onInit`, as the ID binding for the sidepanel container won't\n            // be resolved at constructor time. We use setTimeout by same reason.\n            setTimeout(() => {\n                this.sidepanelRef = getClosestSidepanel(this.elementRef, this.sidepanelService.openedSidepanels)!;\n            });\n        }\n    }\n\n    ngOnChanges(changes: SimpleChanges) {\n        const proxiedChange = changes.mcSidepanelClose || changes.sidepanelResult;\n\n        if (proxiedChange) {\n            this.sidepanelResult = proxiedChange.currentValue;\n        }\n    }\n}\n\n/**\n * Header of a sidepanel.\n */\n@Component({\n    selector: 'mc-sidepanel-header',\n    template: `\n        <div class=\"mc-sidepanel-title\">\n            <ng-content></ng-content>\n        </div>\n        <button *ngIf=\"closeable\" mc-sidepanel-close>\n            <span class=\"mc-sidepanel-close-x\">\n                <i mc-icon=\"mc-close-L_16\" class=\"mc-icon mc-icon_light\" color=\"second\"></i>\n            </span>\n        </button>\n    `,\n    host: {\n        class: 'mc-sidepanel-header'\n    }\n})\nexport class McSidepanelHeader {\n    @Input() closeable: boolean;\n}\n\n/**\n * Scrollable content container of a sidepanel.\n */\n@Directive({\n    selector: 'mc-sidepanel-body, [mc-sidepanel-body], mcSidepanelBody',\n    host: {\n        class: 'mc-sidepanel-body'\n    }\n})\nexport class McSidepanelBody {}\n\n/**\n * Footer of a sidepanel.\n */\n@Directive({\n    selector: 'mc-sidepanel-footer, [mc-sidepanel-footer], mcSidepanelFooter',\n    host: {\n        class: 'mc-sidepanel-footer'\n    }\n})\nexport class McSidepanelFooter {}\n\n/**\n * Actions block of a sidepanel footer.\n */\n@Directive({\n    selector: 'mc-sidepanel-actions, [mc-sidepanel-actions], mcSidepanelActions',\n    host: {\n        class: 'mc-sidepanel-actions'\n    }\n})\nexport class McSidepanelActions {}\n\n/**\n * Finds the closest McSidepanelRef to an element by looking at the DOM.\n * @param element Element relative to which to look for a sidepanel.\n * @param openSidepanels References to the currently-open sidepanels.\n */\nfunction getClosestSidepanel(element: ElementRef<HTMLElement>, openSidepanels: McSidepanelRef[]) {\n    let parent: HTMLElement | null = element.nativeElement.parentElement;\n\n    while (parent && !parent.classList.contains('mc-sidepanel-container')) {\n        parent = parent.parentElement;\n    }\n\n    return parent ? openSidepanels.find((sidepanel) => sidepanel.id === parent!.id) : null;\n}\n","import { InjectionToken } from '@angular/core';\n\n\n/** Injection token that can be used to access the data that was passed in to a sidepanel. */\nexport const MC_SIDEPANEL_DATA = new InjectionToken<any>('McSidepanelData');\n\nexport enum McSidepanelPosition {\n    Right = 'right',\n    Left = 'left',\n    Top = 'top',\n    Bottom = 'bottom'\n}\n\nexport class McSidepanelConfig<D = any> {\n    /** ID for the sidepanel. If omitted, a unique one will be generated. */\n    id?: string;\n\n    /** Data being injected into the child component. */\n    data?: D | null = null;\n\n    position?: McSidepanelPosition = McSidepanelPosition.Right;\n\n    /** Whether the sidepanel has a backdrop. */\n    hasBackdrop?: boolean = true;\n\n    /** When we open multiple sidepanels, backdrop appears only once, except cases then this flag is true. */\n    requiredBackdrop?: boolean = false;\n\n    /** Whether the user can use escape or clicking outside to close the sidepanel. */\n    disableClose?: boolean = false;\n\n    /** Custom class for the overlay pane. */\n    overlayPanelClass?: string | string[] = '';\n}\n","import { animate, AnimationTriggerMetadata, state, style, transition, trigger } from '@angular/animations';\nimport { AnimationCurves } from '@ptsecurity/mosaic/core';\n\nimport { McSidepanelPosition } from './sidepanel-config';\n\n\nexport enum McSidepanelAnimationState {\n    Void = 'void',\n    Visible = 'visible',\n    Hidden = 'hidden'\n}\n\n// TODO Find a way to use dynamic keys and avoid error \"Expression form not supported.\"\n// tslint:disable-next-line\nexport const mcSidepanelTransformAnimation: Record<McSidepanelPosition, { in: string; out: string }> = {\n    right: { in: 'translateX(100%)', out: 'translateX(0%)' },\n    left: { in: 'translateX(-100%)', out: 'translateX(0%)' },\n    top: { in: 'translateY(-100%)', out: 'translateY(0%)' },\n    bottom: { in: 'translateY(100%)', out: 'translateY(0%)' }\n};\n\nexport const mcSidepanelAnimations: {\n    readonly sidepanelState: AnimationTriggerMetadata;\n} = {\n    sidepanelState: trigger('state', [\n        state('hidden',\n            style({ transform: '{{transformIn}}' }),\n            { params: { transformIn: mcSidepanelTransformAnimation[McSidepanelPosition.Right].in }}\n        ),\n        state('visible',\n            style({ transform: '{{transformOut}}' }),\n            { params: { transformOut: mcSidepanelTransformAnimation[McSidepanelPosition.Right].out }}\n        ),\n        transition('visible => void, visible => hidden',\n            animate(`200ms ${AnimationCurves.AccelerationCurve}`)),\n        transition('void => visible',\n            animate(`200ms ${AnimationCurves.DecelerationCurve}`))\n    ])\n};\n","import { AnimationEvent } from '@angular/animations';\nimport {\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    ComponentRef,\n    ElementRef,\n    EmbeddedViewRef,\n    EventEmitter, Inject, InjectionToken,\n    OnDestroy,\n    ViewChild,\n    ViewEncapsulation\n} from '@angular/core';\n\nimport { BasePortalOutlet, CdkPortalOutlet, ComponentPortal, TemplatePortal } from '@ptsecurity/cdk/portal';\n\nimport {\n    mcSidepanelAnimations,\n    McSidepanelAnimationState,\n    mcSidepanelTransformAnimation\n} from './sidepanel-animations';\n\nimport { McSidepanelConfig, McSidepanelPosition } from './sidepanel-config';\n\n\nexport const MC_SIDEPANEL_WITH_INDENT =\n    new InjectionToken<boolean>('mc-sidepanel-with-indent');\n\nexport const MC_SIDEPANEL_WITH_SHADOW =\n    new InjectionToken<boolean>('mc-sidepanel-with-shadow');\n\n@Component({\n    selector: 'mc-sidepanel-container',\n    templateUrl: './sidepanel-container.component.html',\n    styleUrls: ['./sidepanel.css'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n    animations: [mcSidepanelAnimations.sidepanelState],\n    host: {\n        class: 'mc-sidepanel-container',\n        tabindex: '-1',\n        role: 'dialog',\n        'aria-modal': 'true',\n        '[attr.id]': 'id',\n        '[@state]': `{\n            value: animationState,\n            params: animationTransform\n        }`,\n        '(@state.start)': 'onAnimation($event)',\n        '(@state.done)': 'onAnimation($event)'\n    }\n})\nexport class McSidepanelContainerComponent extends BasePortalOutlet implements OnDestroy {\n    /** ID for the container DOM element. */\n    id: string;\n\n    /** The portal outlet inside of this container into which the content will be loaded. */\n    @ViewChild(CdkPortalOutlet) portalOutlet: CdkPortalOutlet;\n\n    /** The state of the sidepanel animations. */\n    animationState: McSidepanelAnimationState = McSidepanelAnimationState.Void;\n\n    animationTransform: { transformIn: string; transformOut: string };\n\n    /** Emits whenever the state of the animation changes. */\n    animationStateChanged = new EventEmitter<AnimationEvent>();\n\n    /** Whether the component has been destroyed. */\n    private destroyed: boolean;\n\n    constructor(\n        private elementRef: ElementRef<HTMLElement>,\n        private changeDetectorRef: ChangeDetectorRef,\n        public sidepanelConfig: McSidepanelConfig,\n        @Inject(MC_SIDEPANEL_WITH_INDENT) public withIndent: boolean,\n        @Inject(MC_SIDEPANEL_WITH_SHADOW) public withShadow: boolean) {\n        super();\n    }\n\n    ngOnDestroy(): void {\n        this.destroyed = true;\n    }\n\n    /** Attach a component portal as content to this sidepanel container. */\n    attachComponentPortal<T>(portal: ComponentPortal<T>): ComponentRef<T> {\n        this.validatePortalAttached();\n        this.setAnimation();\n        this.setPanelClass();\n\n        return this.portalOutlet.attachComponentPortal(portal);\n    }\n\n    /** Attach a template portal as content to this sidepanel container. */\n    attachTemplatePortal<C>(portal: TemplatePortal<C>): EmbeddedViewRef<C> {\n        this.validatePortalAttached();\n        this.setAnimation();\n        this.setPanelClass();\n\n        return this.portalOutlet.attachTemplatePortal(portal);\n    }\n\n    /** Begin animation of the sidepanel entrance into view. */\n    enter(): void {\n        if (!this.destroyed) {\n            this.animationState = McSidepanelAnimationState.Visible;\n            this.changeDetectorRef.detectChanges();\n        }\n    }\n\n    /** Begin animation of the sidepanel exiting from view. */\n    exit(): void {\n        if (!this.destroyed) {\n            this.animationState = McSidepanelAnimationState.Hidden;\n            this.changeDetectorRef.markForCheck();\n        }\n    }\n\n    onAnimation(event: AnimationEvent) {\n        this.animationStateChanged.emit(event);\n    }\n\n    private setAnimation() {\n        const position: McSidepanelPosition = this.sidepanelConfig.position!;\n\n        this.animationTransform = {\n            transformIn: mcSidepanelTransformAnimation[position].in,\n            transformOut: mcSidepanelTransformAnimation[position].out\n        };\n    }\n\n    private setPanelClass() {\n        const element: HTMLElement = this.elementRef.nativeElement;\n        const position: McSidepanelPosition = this.sidepanelConfig.position!;\n\n        element.classList.add(`mc-sidepanel-container_${position}`);\n\n        if (this.withShadow) {\n            element.classList.add('mc-sidepanel-container_shadowed');\n        }\n    }\n\n    private validatePortalAttached() {\n        if (this.portalOutlet.hasAttached()) {\n            throw Error('Attempting to attach sidepanel content after content is already attached');\n        }\n    }\n}\n","import { ESCAPE } from '@ptsecurity/cdk/keycodes';\nimport { OverlayRef } from '@ptsecurity/cdk/overlay';\nimport { merge, Observable, Subject } from 'rxjs';\nimport { filter, take } from 'rxjs/operators';\n\nimport { McSidepanelAnimationState } from './sidepanel-animations';\nimport { McSidepanelConfig } from './sidepanel-config';\nimport { McSidepanelContainerComponent } from './sidepanel-container.component';\n\n\n// Counter for unique sidepanel ids.\nlet uniqueId = 0;\n\nexport class McSidepanelRef<T = any, R = any> {\n    readonly id: string;\n\n    /** Instance of the component making up the content of the sidepanel. */\n    instance: T;\n\n    /** Subject for notifying the user that the sidepanel has been closed and dismissed. */\n    private readonly afterClosed$ = new Subject<R | undefined>();\n\n    /** Subject for notifying the user that the sidepanel has opened and appeared. */\n    private readonly afterOpened$ = new Subject<void>();\n\n    /** Result to be passed down to the `afterDismissed` stream. */\n    private result: R | undefined;\n\n    constructor(\n        public containerInstance: McSidepanelContainerComponent,\n        private overlayRef: OverlayRef,\n        public config: McSidepanelConfig) {\n\n        this.id = this.config.id || `mc-sidepanel-${uniqueId++}`;\n        this.containerInstance.id = this.id;\n\n        // Emit when opening animation completes\n        containerInstance.animationStateChanged.pipe(\n            filter(\n                (event) => event.phaseName === 'done' && event.toState === McSidepanelAnimationState.Visible\n            ),\n            take(1)\n        ).subscribe(() => {\n            this.afterOpened$.next();\n            this.afterOpened$.complete();\n        });\n\n        // Dispose overlay when closing animation is complete\n        containerInstance.animationStateChanged.pipe(\n            filter(\n                (event) => event.phaseName === 'done' && event.toState === McSidepanelAnimationState.Hidden\n            ),\n            take(1)\n        ).subscribe(() => {\n            overlayRef.dispose();\n            this.afterClosed$.next(this.result);\n            this.afterClosed$.complete();\n        });\n\n        if (!containerInstance.sidepanelConfig.disableClose) {\n            merge(\n                overlayRef.backdropClick(),\n                overlayRef.keydownEvents().pipe(\n                    // tslint:disable:deprecation\n                    // keyCode is deprecated, but IE11 and Edge don't support code property, which we need use instead\n                    filter((event) => event.keyCode === ESCAPE)\n                )\n            ).subscribe(() => this.close());\n        }\n    }\n\n    close(result?: R): void {\n        if (!this.afterClosed$.closed) {\n            // Transition the backdrop in parallel to the sidepanel.\n            this.containerInstance.animationStateChanged.pipe(\n                filter((event) => event.phaseName === 'done'),\n                take(1)\n            ).subscribe(() => this.overlayRef.detachBackdrop());\n\n            this.result = result;\n            this.containerInstance.exit();\n        }\n    }\n\n    /** Gets an observable that is notified when the sidepanel is finished closing. */\n    afterClosed(): Observable<R | undefined> {\n        return this.afterClosed$.asObservable();\n    }\n\n    /** Gets an observable that is notified when the sidepanel has opened and appeared. */\n    afterOpened(): Observable<void> {\n        return this.afterOpened$.asObservable();\n    }\n}\n","import {\n    ComponentRef,\n    Inject,\n    Injectable,\n    InjectionToken,\n    Injector, OnDestroy,\n    Optional,\n    SkipSelf,\n    TemplateRef\n} from '@angular/core';\nimport { Overlay, OverlayConfig, OverlayRef } from '@ptsecurity/cdk/overlay';\nimport { ComponentPortal, IComponentType, PortalInjector, TemplatePortal } from '@ptsecurity/cdk/portal';\n\nimport { MC_SIDEPANEL_DATA, McSidepanelConfig } from './sidepanel-config';\nimport {\n    McSidepanelContainerComponent,\n    MC_SIDEPANEL_WITH_INDENT,\n    MC_SIDEPANEL_WITH_SHADOW\n} from './sidepanel-container.component';\nimport { McSidepanelRef } from './sidepanel-ref';\n\n\n/** Injection token that can be used to specify default sidepanel options. */\nexport const MC_SIDEPANEL_DEFAULT_OPTIONS =\n    new InjectionToken<McSidepanelConfig>('mc-sidepanel-default-options');\n\n@Injectable()\nexport class McSidepanelService implements OnDestroy {\n    private openedSidepanelsAtThisLevel: McSidepanelRef[] = [];\n\n    /** Keeps track of the currently-open sidepanels. */\n    get openedSidepanels(): McSidepanelRef[] {\n        return this.parentSidepanelService ? this.parentSidepanelService.openedSidepanels :\n            this.openedSidepanelsAtThisLevel;\n    }\n\n    constructor(\n        private overlay: Overlay,\n        private injector: Injector,\n        @Optional() @Inject(MC_SIDEPANEL_DEFAULT_OPTIONS) private defaultOptions: McSidepanelConfig,\n        @Optional() @SkipSelf() private parentSidepanelService: McSidepanelService) {\n    }\n\n    ngOnDestroy() {\n        // Only close the sidepanels at this level on destroy\n        // since the parent service may still be active.\n        this.closeSidepanels(this.openedSidepanelsAtThisLevel);\n    }\n\n    open<T, D = any>(componentOrTemplateRef: IComponentType<T> | TemplateRef<T>,\n                     config?: McSidepanelConfig<D>): McSidepanelRef<T> {\n        const fullConfig = {\n            ...(this.defaultOptions || new McSidepanelConfig()),\n            ...config\n        };\n\n        if (fullConfig.id && this.getSidepanelById(fullConfig.id)) {\n            throw Error(`Sidepanel with id \"${fullConfig.id}\" exists already. The sidepanel id must be unique.`);\n        }\n\n        const overlayRef = this.createOverlay(fullConfig);\n        const container = this.attachContainer(overlayRef, fullConfig);\n        const ref = new McSidepanelRef(container, overlayRef, fullConfig);\n\n        if (componentOrTemplateRef instanceof TemplateRef) {\n            container.attachTemplatePortal(new TemplatePortal<T>(componentOrTemplateRef, null!, {\n                $implicit: fullConfig.data,\n                sidepanelRef: ref\n            } as any));\n        } else {\n            const injector = this.createInjector(fullConfig, ref, container);\n            const portal = new ComponentPortal(componentOrTemplateRef, undefined, injector);\n            const contentRef = container.attachComponentPortal(portal);\n\n            ref.instance = contentRef.instance;\n        }\n\n        this.openedSidepanels.push(ref);\n        ref.afterClosed().subscribe(() => this.removeOpenSidepanel(ref));\n        container.enter();\n\n        return ref;\n    }\n\n    /**\n     * Closes all of the currently-open sidepanels.\n     */\n    closeAll(): void {\n        this.closeSidepanels(this.openedSidepanels);\n    }\n\n    /**\n     * Finds an open sidepanel by its id.\n     * @param id ID to use when looking up the sidepanel.\n     */\n    getSidepanelById(id: string): McSidepanelRef | undefined {\n        return this.openedSidepanels.find((sidepanel) => sidepanel.id === id);\n    }\n\n    /**\n     * Attaches the sidepanel container component to the overlay.\n     */\n    private attachContainer(overlayRef: OverlayRef, config: McSidepanelConfig): McSidepanelContainerComponent {\n        const openedSidepanelsWithSamePosition = this.getOpenedSidepanelsWithSamePosition(config);\n\n        const injector = new PortalInjector(this.injector, new WeakMap<any>([\n            [McSidepanelConfig, config],\n            [MC_SIDEPANEL_WITH_INDENT, openedSidepanelsWithSamePosition.length >= 1],\n            [MC_SIDEPANEL_WITH_SHADOW, openedSidepanelsWithSamePosition.length < 2] // tslint:disable-line\n        ]));\n\n        const containerPortal = new ComponentPortal(McSidepanelContainerComponent, undefined, injector);\n        const containerRef: ComponentRef<McSidepanelContainerComponent> = overlayRef.attach(containerPortal);\n\n        return containerRef.instance;\n    }\n\n    /**\n     * Creates a custom injector to be used inside the sidepanel. This allows a component loaded inside\n     * of a sidepanel to close itself and, optionally, to return a value.\n     * @param config Config object that is used to construct the sidepanel.\n     * @param sidepanelRef Reference to the sidepanel.\n     * @param sidepanelContainer Sidepanel container element that wraps all of the contents.\n     * @returns The custom injector that can be used inside the sidepanel.\n     */\n    private createInjector<T>(\n        config: McSidepanelConfig,\n        sidepanelRef: McSidepanelRef<T>,\n        sidepanelContainer: McSidepanelContainerComponent): PortalInjector {\n\n        // The McSidepanelContainerComponent is injected in the portal as the McSidepanelContainerComponent and\n        // the sidepanel's content are created out of the same ViewContainerRef and as such, are siblings for injector\n        // purposes. To allow the hierarchy that is expected, the McSidepanelContainerComponent is explicitly\n        // added to the injection tokens.\n        const injectionTokens = new WeakMap<any>([\n            [McSidepanelContainerComponent, sidepanelContainer],\n            [MC_SIDEPANEL_DATA, config.data],\n            [McSidepanelRef, sidepanelRef]\n        ]);\n\n        return new PortalInjector(this.injector, injectionTokens);\n    }\n\n    /**\n     * Creates a new overlay and places it in the correct location.\n     * @param config The user-specified sidepanel config.\n     */\n    private createOverlay(config: McSidepanelConfig): OverlayRef {\n        const overlayConfig = new OverlayConfig({\n            hasBackdrop: config.hasBackdrop,\n            backdropClass: this.getBackdropClass(config),\n            maxWidth: '100%',\n            panelClass: config.overlayPanelClass,\n            scrollStrategy: this.overlay.scrollStrategies.block(),\n            positionStrategy: this.overlay.position().global()\n        });\n\n        return this.overlay.create(overlayConfig);\n    }\n\n    private closeSidepanels(sidepanels: McSidepanelRef[]) {\n        const reversedOpenedSidepanels = [...sidepanels.reverse()];\n\n        reversedOpenedSidepanels.forEach((sidepanelRef: McSidepanelRef) => {\n            sidepanelRef.close();\n        });\n    }\n\n    private getBackdropClass(config: McSidepanelConfig): string {\n        const hasOpenedSidepanelWithBackdrop =\n            this.openedSidepanels.some((sidepanelRef) => sidepanelRef.config.hasBackdrop!);\n\n        return config.requiredBackdrop || !hasOpenedSidepanelWithBackdrop ? 'cdk-overlay-dark-backdrop' :\n            'cdk-overlay-transparent-backdrop';\n    }\n\n    private getOpenedSidepanelsWithSamePosition(config: McSidepanelConfig): McSidepanelRef[] {\n        return this.openedSidepanels.filter((sidepanelRef) => sidepanelRef.config.position === config.position);\n    }\n\n    /**\n     * Removes a sidepanel from the array of open sidepanels.\n     * @param sidepanelRef Sidepanel to be removed.\n     */\n    private removeOpenSidepanel(sidepanelRef: McSidepanelRef) {\n        const index = this.openedSidepanels.indexOf(sidepanelRef);\n\n        if (index > -1) {\n            this.openedSidepanels.splice(index, 1);\n        }\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { OverlayModule } from '@ptsecurity/cdk/overlay';\nimport { PortalModule } from '@ptsecurity/cdk/portal';\nimport { McCommonModule } from '@ptsecurity/mosaic/core';\nimport { McIconModule } from '@ptsecurity/mosaic/icon';\n\nimport { McSidepanelContainerComponent } from './sidepanel-container.component';\nimport {\n    McSidepanelActions,\n    McSidepanelBody,\n    McSidepanelClose,\n    McSidepanelFooter,\n    McSidepanelHeader\n} from './sidepanel-directives';\nimport { McSidepanelService } from './sidepanel.service';\n\n\n@NgModule({\n    imports: [\n        CommonModule,\n        OverlayModule,\n        PortalModule,\n        McCommonModule,\n        McIconModule\n    ],\n    providers: [McSidepanelService],\n    declarations: [\n        McSidepanelContainerComponent,\n        McSidepanelClose,\n        McSidepanelHeader,\n        McSidepanelBody,\n        McSidepanelFooter,\n        McSidepanelActions\n    ],\n    entryComponents: [McSidepanelContainerComponent],\n    exports: [\n        McSidepanelContainerComponent,\n        McSidepanelClose,\n        McSidepanelHeader,\n        McSidepanelBody,\n        McSidepanelFooter,\n        McSidepanelActions\n    ]\n})\nexport class McSidepanelModule {}\n"],"names":["__extends","d","b","__","this","constructor","extendStatics","prototype","Object","create","getClosestSidepanel","element","openSidepanels","parent","nativeElement","parentElement","classList","contains","find","sidepanel","id","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__assign","assign","t","s","i","n","arguments","length","call","apply","MC_SIDEPANEL_DATA","InjectionToken","Right","Left","Top","Bottom","McSidepanelConfig","data","position","McSidepanelPosition","hasBackdrop","requiredBackdrop","disableClose","overlayPanelClass","Void","Visible","Hidden","mcSidepanelTransformAnimation","right","in","out","left","top","bottom","mcSidepanelAnimations","sidepanelState","trigger","state","style","transform","params","transformIn","transformOut","transition","animate","AnimationCurves","AccelerationCurve","DecelerationCurve","MC_SIDEPANEL_WITH_INDENT","MC_SIDEPANEL_WITH_SHADOW","McSidepanelContainerComponent","_super","elementRef","changeDetectorRef","sidepanelConfig","withIndent","withShadow","_this","animationState","McSidepanelAnimationState","animationStateChanged","EventEmitter","tslib_1.__extends","ngOnDestroy","destroyed","attachComponentPortal","portal","validatePortalAttached","setAnimation","setPanelClass","portalOutlet","attachTemplatePortal","enter","detectChanges","exit","markForCheck","onAnimation","event","emit","animationTransform","add","hasAttached","Error","type","Component","args","selector","template","styles","changeDetection","ChangeDetectionStrategy","OnPush","encapsulation","ViewEncapsulation","None","animations","host","class","tabindex","role","aria-modal","[attr.id]","[@state]","(@state.start)","(@state.done)","ElementRef","ChangeDetectorRef","Boolean","decorators","Inject","ViewChild","CdkPortalOutlet","BasePortalOutlet","uniqueId","McSidepanelRef","containerInstance","overlayRef","config","afterClosed$","Subject","afterOpened$","pipe","filter","phaseName","toState","take","subscribe","next","complete","dispose","result","merge","backdropClick","keydownEvents","keyCode","ESCAPE","close","closed","detachBackdrop","afterClosed","asObservable","afterOpened","MC_SIDEPANEL_DEFAULT_OPTIONS","McSidepanelService","overlay","injector","defaultOptions","parentSidepanelService","openedSidepanelsAtThisLevel","defineProperty","openedSidepanels","closeSidepanels","open","componentOrTemplateRef","fullConfig","tslib_1.__assign","getSidepanelById","createOverlay","container","attachContainer","ref","TemplateRef","TemplatePortal","$implicit","sidepanelRef","createInjector","ComponentPortal","undefined","contentRef","instance","push","removeOpenSidepanel","closeAll","openedSidepanelsWithSamePosition","getOpenedSidepanelsWithSamePosition","PortalInjector","WeakMap","containerPortal","attach","sidepanelContainer","injectionTokens","overlayConfig","OverlayConfig","backdropClass","getBackdropClass","maxWidth","panelClass","scrollStrategy","scrollStrategies","block","positionStrategy","global","sidepanels","reverse","slice","forEach","hasOpenedSidepanelWithBackdrop","some","index","indexOf","splice","Injectable","Overlay","Injector","Optional","SkipSelf","McSidepanelClose","sidepanelService","ngOnInit","setTimeout","ngOnChanges","changes","proxiedChange","mcSidepanelClose","sidepanelResult","currentValue","Directive","(click)","Input","McSidepanelHeader","closeable","McSidepanelBody","McSidepanelFooter","McSidepanelActions","McSidepanelModule","NgModule","imports","CommonModule","OverlayModule","PortalModule","McCommonModule","McIconModule","providers","declarations","entryComponents","exports"],"mappings":"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"}