{"version":3,"file":"mosaic-tree.umd.min.js","sources":["../../node_modules/tslib/tslib.es6.js","../../src/lib/tree/node.ts","../../src/lib/tree/padding.ts","../../src/lib/tree/toggle.ts","../../src/lib/tree/tree-option.ts","../../src/lib/tree/tree-selection.ts","../../src/lib/tree/tree.module.ts","../../src/lib/tree/data-source/flat-data-source.ts","../../src/lib/tree/data-source/nested-data-source.ts"],"sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","import { Directive, Input } from '@angular/core';\n\nimport { CdkTreeNodeDef } from '@ptsecurity/cdk/tree';\n\n\n@Directive({\n    selector: '[mcTreeNodeDef]',\n    inputs: ['when: mcTreeNodeDefWhen'],\n    providers: [{ provide: CdkTreeNodeDef, useExisting: McTreeNodeDef }]\n})\nexport class McTreeNodeDef<T> extends CdkTreeNodeDef<T> {\n    @Input('mcTreeNode') data: T;\n}\n","import { Directive, Input, OnInit } from '@angular/core';\nimport { CdkTreeNodePadding } from '@ptsecurity/cdk/tree';\n\n\n@Directive({\n    selector: '[mcTreeNodePadding]',\n    providers: [{ provide: CdkTreeNodePadding, useExisting: McTreeNodePadding }]\n})\nexport class McTreeNodePadding<T> extends CdkTreeNodePadding<T> implements OnInit {\n    @Input('mcTreeNodePadding') level: number;\n\n    @Input('mcTreeNodePaddingIndent') indent: number;\n\n    baseLeftPadding: number = 12;\n    /* tslint:disable-next-line:naming-convention */\n    _indent: number = 20;\n\n    withIcon: boolean;\n    iconWidth: number = 20;\n\n    get leftPadding(): number {\n        return (this.withIcon ? 0 : this.iconWidth) + this.baseLeftPadding;\n    }\n\n    paddingIndent(): string | null {\n        const nodeLevel = (this.treeNode.data && this.tree.treeControl.getLevel)\n            ? this.tree.treeControl.getLevel(this.treeNode.data)\n            : null;\n\n        const level = this.level || nodeLevel;\n\n        return level ? `${(level * this._indent) + this.leftPadding}px` : `${this.baseLeftPadding}px`;\n    }\n\n    ngOnInit(): void {\n        this.withIcon = this.tree.treeControl.isExpandable(this.treeNode.data);\n\n        this.setPadding();\n    }\n}\n","import { Directive } from '@angular/core';\nimport { CdkTreeNodeToggle } from '@ptsecurity/cdk/tree';\n\n\n@Directive({\n    selector: '[mcTreeNodeToggle]',\n    host: {\n        '(click)': 'toggle($event)'\n    },\n    providers: [{ provide: CdkTreeNodeToggle, useExisting: McTreeNodeToggle }]\n})\nexport class McTreeNodeToggle<T> extends CdkTreeNodeToggle<T> {}\n","import {\n    ChangeDetectorRef,\n    Component,\n    EventEmitter,\n    Input,\n    Output,\n    ElementRef,\n    Inject,\n    Optional,\n    InjectionToken\n} from '@angular/core';\nimport { SelectionModel } from '@ptsecurity/cdk/collections';\nimport { CdkTreeNode } from '@ptsecurity/cdk/tree';\nimport { CanDisable, toBoolean } from '@ptsecurity/mosaic/core';\n\n\n/* tslint:disable-next-line:naming-convention */\nexport interface McTreeOptionParentComponent {\n    multiple: boolean;\n    selectionModel: SelectionModel<McTreeOption>;\n    setFocusedOption: any;\n}\n\n/**\n * Injection token used to provide the parent component to options.\n */\nexport const MC_TREE_OPTION_PARENT_COMPONENT =\n    new InjectionToken<McTreeOptionParentComponent>('MC_TREE_OPTION_PARENT_COMPONENT');\n\nexport class McTreeOptionChange {\n    constructor(public source: McTreeOption, public isUserInput = false) {}\n}\n\nlet uniqueIdCounter: number = 0;\n\n@Component({\n    selector: 'mc-tree-option',\n    exportAs: 'mcTreeOption',\n    host: {\n        '[attr.id]': 'id',\n        '[attr.tabindex]': 'getTabIndex()',\n\n        '[attr.disabled]': 'disabled || null',\n\n        class: 'mc-tree-option',\n        '[class.mc-selected]': 'selected',\n        '[class.mc-active]': 'active',\n\n        '(click)': 'selectViaInteraction()'\n    },\n    templateUrl: './tree-option.html',\n    providers: [{ provide: CdkTreeNode, useExisting: McTreeOption }]\n})\nexport class McTreeOption extends CdkTreeNode<McTreeOption> implements CanDisable {\n    @Output() readonly onSelectionChange = new EventEmitter<McTreeOptionChange>();\n\n    @Input() value: any;\n\n    @Input()\n    get disabled() {\n        return this._disabled;\n    }\n\n    set disabled(value: any) {\n        const newValue = toBoolean(value);\n\n        if (newValue !== this._disabled) {\n            this._disabled = newValue;\n        }\n    }\n\n    private _disabled: boolean = false;\n\n    // @Input()\n    // get selected(): boolean {\n    //     return this.treeSelection.selectionModel && this.treeSelection.selectionModel.isSelected(this) || false;\n    // }\n\n    get selected(): boolean {\n        return this._selected;\n    }\n\n    set selected(value: boolean) {\n        const isSelected = toBoolean(value);\n\n        if (isSelected !== this._selected) {\n            this.setSelected(isSelected);\n\n            // this.treeSelection._reportValueChange();\n        }\n    }\n\n    private _selected: boolean = false;\n\n    /**\n     * Whether or not the option is currently active and ready to be selected.\n     * An active option displays styles as if it is focused, but the\n     * focus is actually retained somewhere else. This comes in handy\n     * for components like autocomplete where focus must remain on the input.\n     */\n    get active(): boolean {\n        return this._active;\n    }\n\n    private _active = false;\n\n    get id(): string {\n        return this._id;\n    }\n\n    private _id = `mc-tree-option-${uniqueIdCounter++}`;\n\n    get multiple(): boolean {\n        return this.parent.multiple;\n    }\n\n    constructor(\n        protected elementRef: ElementRef,\n        protected changeDetectorRef: ChangeDetectorRef,\n        @Optional() @Inject(MC_TREE_OPTION_PARENT_COMPONENT) private readonly parent: McTreeOptionParentComponent\n    ) {\n        // todo any\n        super(elementRef, parent as any);\n    }\n\n    toggle(): void {\n        this.selected = !this.selected;\n    }\n\n    setSelected(selected: boolean) {\n        if (this._selected === selected || !this.parent.selectionModel) { return; }\n\n        this._selected = selected;\n\n        if (selected) {\n            this.parent.selectionModel.select(this);\n        } else {\n            this.parent.selectionModel.deselect(this);\n        }\n\n        // this._changeDetector.markForCheck();\n    }\n\n    /**\n     * This method sets display styles on the option to make it appear\n     * active. This is used by the ActiveDescendantKeyManager so key\n     * events will display the proper options as active on arrow key events.\n     */\n    setActiveStyles(): void {\n        if (!this._active) {\n            this._active = true;\n\n            this.changeDetectorRef.markForCheck();\n        }\n    }\n\n    /**\n     * This method removes display styles on the option that made it appear\n     * active. This is used by the ActiveDescendantKeyManager so key\n     * events will display the proper options as active on arrow key events.\n     */\n    setInactiveStyles(): void {\n        if (this._active) {\n            this._active = false;\n            this.changeDetectorRef.markForCheck();\n        }\n    }\n\n    getHeight(): number {\n        const clientRects = this.elementRef.nativeElement.getClientRects();\n        if (clientRects.length) {\n            return clientRects[0].height;\n        }\n\n        return 0;\n    }\n\n    focus(): void {\n        const element = this.getHostElement();\n\n        if (typeof element.focus === 'function') {\n            element.focus();\n        }\n    }\n\n    // todo старая реализация, нужно восстановить tree-selection\n    // handleClick(): void {\n    //     if (this.disabled) { return; }\n    //\n    //     this.treeSelection.setFocusedOption(this);\n    // }\n\n    /**\n     * The displayed value of the option. It is necessary to show the selected option in the\n     * select's trigger.\n     */\n    get viewValue(): string {\n        // TODO(kara): Add input property alternative for node envs.\n        return (this.getHostElement().textContent || '').trim();\n    }\n\n    select(): void {\n        if (!this._selected) {\n            this._selected = true;\n\n            this.changeDetectorRef.markForCheck();\n        }\n    }\n\n    deselect(): void {\n        if (this._selected) {\n            this._selected = false;\n\n            this.changeDetectorRef.markForCheck();\n        }\n    }\n\n    selectViaInteraction(): void {\n        if (!this.disabled) {\n            this._selected = this.multiple ? !this._selected : true;\n\n            this.changeDetectorRef.markForCheck();\n            this.emitSelectionChangeEvent(true);\n\n            if (this.parent.setFocusedOption) {\n                this.parent.setFocusedOption(this);\n            }\n        }\n    }\n\n    emitSelectionChangeEvent(isUserInput = false): void {\n        this.onSelectionChange.emit(new McTreeOptionChange(this, isUserInput));\n    }\n\n    getHostElement(): HTMLElement {\n        return this.elementRef.nativeElement;\n    }\n\n    getTabIndex(): string {\n        return this.disabled ? '-1' : '0';\n    }\n}\n","import {\n    AfterContentInit,\n    Attribute,\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    ContentChildren,\n    EventEmitter,\n    Input,\n    IterableDiffer,\n    IterableDiffers,\n    Output,\n    QueryList,\n    ViewChild,\n    ViewEncapsulation,\n    ElementRef\n} from '@angular/core';\nimport { NodeDef, ViewData } from '@angular/core/src/view';\nimport { ActiveDescendantKeyManager } from '@ptsecurity/cdk/a11y';\nimport { SelectionModel } from '@ptsecurity/cdk/collections';\nimport { END, ENTER, HOME, LEFT_ARROW, PAGE_DOWN, PAGE_UP, RIGHT_ARROW, SPACE } from '@ptsecurity/cdk/keycodes';\nimport { CdkTree, CdkTreeNodeOutlet } from '@ptsecurity/cdk/tree';\nimport {\n    CanDisable,\n    CanDisableCtor,\n    HasTabIndex,\n    HasTabIndexCtor,\n    mixinDisabled,\n    mixinTabIndex,\n    toBoolean\n} from '@ptsecurity/mosaic/core';\nimport { Subject } from 'rxjs';\n\nimport { MC_TREE_OPTION_PARENT_COMPONENT, McTreeOption } from './tree-option';\n\n\nexport class McTreeNavigationChange {\n    constructor(\n        public source: McTreeSelection,\n        public option: McTreeOption\n    ) {}\n}\n\nexport class McTreeSelectionChange {\n    constructor(public source: McTreeSelection, public option: McTreeOption) {}\n}\n\nclass McTreeSelectionBase<T> extends CdkTree<T> {\n    constructor(differs: IterableDiffers, changeDetectorRef: ChangeDetectorRef) {\n        super(differs, changeDetectorRef);\n    }\n}\n\n/* tslint:disable-next-line:naming-convention */\nconst McTreeSelectionBaseMixin: HasTabIndexCtor & CanDisableCtor &\n    typeof McTreeSelectionBase = mixinTabIndex(mixinDisabled(McTreeSelectionBase));\n\n\n@Component({\n    selector: 'mc-tree-selection',\n    exportAs: 'mcTreeSelection',\n    template: `<ng-container cdkTreeNodeOutlet></ng-container>`,\n    host: {\n        class: 'mc-tree-selection',\n\n        '[attr.tabindex]': 'tabIndex',\n\n        '(keydown)': 'onKeyDown($event)',\n        '(window:resize)': 'updateScrollSize()'\n    },\n    styleUrls: ['./tree.css'],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    providers: [\n        { provide: MC_TREE_OPTION_PARENT_COMPONENT, useExisting: McTreeSelection },\n        { provide: CdkTree, useExisting: McTreeSelection }\n    ]\n})\nexport class McTreeSelection extends McTreeSelectionBaseMixin<McTreeOption>\n    implements AfterContentInit, CanDisable, HasTabIndex {\n\n    @ViewChild(CdkTreeNodeOutlet) nodeOutlet: CdkTreeNodeOutlet;\n\n    @ContentChildren(McTreeOption) options: QueryList<McTreeOption>;\n\n    keyManager: ActiveDescendantKeyManager<McTreeOption>;\n\n    selectionModel: SelectionModel<McTreeOption>;\n\n    tabIndex: number;\n    multiple: boolean;\n    autoSelect: boolean;\n    noUnselect: boolean;\n\n    // todo temporary solution\n    withShift: boolean;\n    withCtrl: boolean;\n\n\n    @Output() readonly navigationChange = new EventEmitter<McTreeNavigationChange>();\n\n    @Output() readonly selectionChange = new EventEmitter<McTreeSelectionChange>();\n\n    @Input()\n    get disabled(): boolean {\n        return this._disabled;\n    }\n\n    set disabled(rawValue: boolean) {\n        const value = toBoolean(rawValue);\n\n        if (this._disabled !== value) {\n            this._disabled = value;\n\n            if (this._disabled) {\n                /* tslint:disable-next-line:no-console */\n                console.log('need disable all options');\n            } else {\n                /* tslint:disable-next-line:no-console */\n                console.log('need enable all options');\n            }\n        }\n    }\n\n    private _disabled: boolean = false;\n\n    private readonly destroy = new Subject<void>();\n\n    constructor(\n        private elementRef: ElementRef,\n        differs: IterableDiffers,\n        changeDetectorRef: ChangeDetectorRef,\n        @Attribute('tabindex') tabIndex: string,\n        @Attribute('multiple') multiple: string,\n        @Attribute('auto-select') autoSelect: string,\n        @Attribute('no-unselect') noUnselect: string\n    ) {\n        super(differs, changeDetectorRef);\n\n        this.tabIndex = parseInt(tabIndex) || 0;\n\n        this.multiple = multiple === null ? false : toBoolean(multiple);\n        this.autoSelect = autoSelect === null ? true : toBoolean(autoSelect);\n        this.noUnselect = noUnselect === null ? true : toBoolean(noUnselect);\n\n        this.selectionModel = new SelectionModel<McTreeOption>(this.multiple);\n    }\n\n    ngAfterContentInit(): void {\n        this.keyManager = new ActiveDescendantKeyManager<McTreeOption>(this.options)\n            .withVerticalOrientation(true)\n            .withHorizontalOrientation(null);\n    }\n\n    ngOnDestroy() {\n        this.destroy.next();\n\n        this.destroy.complete();\n    }\n\n    onKeyDown(event: KeyboardEvent) {\n        // tslint:disable-next-line: deprecation\n        const keyCode = event.keyCode;\n        this.withShift = event.shiftKey;\n        this.withCtrl = event.ctrlKey;\n\n        switch (keyCode) {\n            case LEFT_ARROW:\n                if (this.keyManager.activeItem) {\n                    this.treeControl.collapse(this.keyManager.activeItem.data);\n                }\n\n                event.preventDefault();\n\n                break;\n            case RIGHT_ARROW:\n                if (this.keyManager.activeItem) {\n                    this.treeControl.expand(this.keyManager.activeItem.data);\n                }\n\n                event.preventDefault();\n\n                break;\n            case SPACE:\n            case ENTER:\n                this.toggleFocusedOption();\n                event.preventDefault();\n\n                break;\n            case HOME:\n                this.keyManager.setFirstItemActive();\n                event.preventDefault();\n\n                break;\n            case END:\n                this.keyManager.setLastItemActive();\n                event.preventDefault();\n\n                break;\n            case PAGE_UP:\n                this.keyManager.setPreviousPageItemActive();\n                event.preventDefault();\n\n                break;\n            case PAGE_DOWN:\n                this.keyManager.setNextPageItemActive();\n                event.preventDefault();\n\n                break;\n            default:\n                this.keyManager.onKeydown(event);\n        }\n    }\n\n    updateScrollSize(): void {\n        if (!this.options.first) { return; }\n\n        this.keyManager.withScrollSize(Math.floor(this.getHeight() / this.options.first.getHeight()));\n    }\n\n    setFocusedOption(option: McTreeOption) {\n        this.keyManager.setActiveItem(option);\n\n        if (this.withShift && this.multiple) {\n            const previousIndex = this.keyManager.previousActiveItemIndex;\n            const activeIndex = this.keyManager.activeItemIndex;\n\n            if (previousIndex < activeIndex) {\n                this.options.forEach((item, index) => {\n                    if (index >= previousIndex && index <= activeIndex) { item.setSelected(true); }\n                });\n            } else {\n                this.options.forEach((item, index) => {\n                    if (index >= activeIndex && index <= previousIndex) { item.setSelected(true); }\n                });\n            }\n\n            this.withShift = false;\n        } else if (this.withCtrl) {\n            this.withCtrl = false;\n\n            if (!this.canDeselectLast(option)) { return; }\n\n            option.toggle();\n        } else {\n            if (this.autoSelect) {\n                this.options.forEach((item) => item.setSelected(false));\n                option.setSelected(true);\n            }\n        }\n\n        this.emitNavigationEvent(option);\n    }\n\n    toggleFocusedOption(): void {\n        const focusedIndex = this.keyManager.activeItemIndex;\n\n        if (focusedIndex != null && this.isValidIndex(focusedIndex)) {\n            const focusedOption: McTreeOption = this.options.toArray()[focusedIndex];\n\n            if (focusedOption && this.canDeselectLast(focusedOption)) {\n                focusedOption.toggle();\n\n                // Emit a change event because the focused option changed its state through user interaction.\n                this.emitChangeEvent(focusedOption);\n            }\n        }\n    }\n\n    renderNodeChanges(\n        data: McTreeOption[],\n        dataDiffer: IterableDiffer<McTreeOption> = this.dataDiffer,\n        viewContainer: any = this.nodeOutlet.viewContainer,\n        parentData?: McTreeOption\n    ): void {\n        super.renderNodeChanges(data, dataDiffer, viewContainer, parentData);\n\n        const arrayOfInstances = [];\n\n        viewContainer._embeddedViews.forEach((view: ViewData) => {\n            const viewDef = view.def;\n\n            viewDef.nodes.forEach((node: NodeDef) => {\n                if (viewDef.nodeMatchedQueries === node.matchedQueryIds) {\n                    const nodeData: any = view.nodes[node.nodeIndex];\n\n                    arrayOfInstances.push(nodeData.instance as never);\n                }\n            });\n        });\n\n        if (this.options) {\n            this.options.reset(arrayOfInstances);\n            this.options.notifyOnChanges();\n        }\n\n        this.updateScrollSize();\n    }\n\n    getHeight(): number {\n        const clientRects = this.elementRef.nativeElement.getClientRects();\n        if (clientRects.length) {\n            return clientRects[0].height;\n        }\n\n        return 0;\n    }\n\n    emitNavigationEvent(option: McTreeOption): void {\n        this.navigationChange.emit(new McTreeNavigationChange(this, option));\n    }\n\n    emitChangeEvent(option: McTreeOption): void {\n        this.selectionChange.emit(new McTreeNavigationChange(this, option));\n    }\n\n    private isValidIndex(index: number): boolean {\n        return index >= 0 && index < this.options.length;\n    }\n\n    private canDeselectLast(option: McTreeOption): boolean {\n        return !(this.noUnselect && this.selectionModel.selected.length === 1 && option.selected);\n    }\n}\n\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { CdkTreeModule } from '@ptsecurity/cdk/tree';\nimport { McPseudoCheckboxModule } from '@ptsecurity/mosaic/core';\n\nimport { McTreeNodeDef } from './node';\nimport { McTreeNodePadding } from './padding';\nimport { McTreeNodeToggle } from './toggle';\nimport { McTreeOption } from './tree-option';\nimport { McTreeSelection } from './tree-selection';\n\n\nconst MC_TREE_DIRECTIVES = [\n    McTreeSelection,\n    McTreeOption,\n    McTreeNodeDef,\n    McTreeNodePadding,\n    McTreeNodeToggle\n];\n\n@NgModule({\n    imports: [CommonModule, CdkTreeModule, McPseudoCheckboxModule],\n    exports: MC_TREE_DIRECTIVES,\n    declarations: MC_TREE_DIRECTIVES\n})\nexport class McTreeModule {}\n","import { ICollectionViewer, DataSource } from '@ptsecurity/cdk/collections';\nimport { FlatTreeControl, ITreeControl } from '@ptsecurity/cdk/tree';\nimport { BehaviorSubject, merge, Observable } from 'rxjs';\nimport { map, take } from 'rxjs/operators';\n\n\n/**\n * Tree flattener to convert a normal type of node to node with children & level information.\n * Transform nested nodes of type `T` to flattened nodes of type `F`.\n *\n * For example, the input data of type `T` is nested, and contains its children data:\n *   SomeNode: {\n *     key: 'Fruits',\n *     children: [\n *       NodeOne: {\n *         key: 'Apple',\n *       },\n *       NodeTwo: {\n *        key: 'Pear',\n *      }\n *    ]\n *  }\n *  After flattener flatten the tree, the structure will become\n *  SomeNode: {\n *    key: 'Fruits',\n *    expandable: true,\n *    level: 1\n *  },\n *  NodeOne: {\n *    key: 'Apple',\n *    expandable: false,\n *    level: 2\n *  },\n *  NodeTwo: {\n *   key: 'Pear',\n *   expandable: false,\n *   level: 2\n * }\n * and the output flattened type is `F` with additional information.\n */\nexport class McTreeFlattener<T, F> {\n    constructor(\n        public transformFunction: (node: T, level: number) => F,\n        public getLevel: (node: F) => number,\n        public isExpandable: (node: F) => boolean,\n        public getChildren: (node: T) => Observable<T[]>\n    ) {}\n\n    flattenNode(node: T, level: number, resultNodes: F[], parentMap: boolean[]): F[] {\n        const flatNode = this.transformFunction(node, level);\n        resultNodes.push(flatNode);\n\n        if (this.isExpandable(flatNode)) {\n            this.getChildren(node)\n                .pipe(take(1))\n                .subscribe((children) => {\n                    children.forEach((child, index) => {\n                        const childParentMap: boolean[] = parentMap.slice();\n                        childParentMap.push(index !== children.length - 1);\n\n                        this.flattenNode(child, level + 1, resultNodes, childParentMap);\n                    });\n                });\n        }\n\n        return resultNodes;\n    }\n\n    /**\n     * Flatten a list of node type T to flattened version of node F.\n     * Please note that type T may be nested, and the length of `structuredData` may be different\n     * from that of returned list `F[]`.\n     */\n    flattenNodes(structuredData: T[]): F[] {\n        const resultNodes: F[] = [];\n        structuredData.forEach((node) => this.flattenNode(node, 0, resultNodes, []));\n\n        return resultNodes;\n    }\n\n    /**\n     * Expand flattened node with current expansion status.\n     * The returned list may have different length.\n     */\n    expandFlattenedNodes(nodes: F[], treeControl: ITreeControl<F>): F[] {\n        const results: F[] = [];\n        const currentExpand: boolean[] = [];\n        currentExpand[0] = true;\n\n        nodes.forEach((node) => {\n            let expand = true;\n            for (let i = 0; i <= this.getLevel(node); i++) {\n                expand = expand && currentExpand[i];\n            }\n\n            if (expand) { results.push(node); }\n\n            if (this.isExpandable(node)) {\n                currentExpand[this.getLevel(node) + 1] = treeControl.isExpanded(node);\n            }\n        });\n\n        return results;\n    }\n}\n\n\n/**\n * Data source for flat tree.\n * The data source need to handle expansion/collapsion of the tree node and change the data feed\n * to `McTree`.\n * The nested tree nodes of type `T` are flattened through `MсTreeFlattener`, and converted\n * to type `F` for `McTree` to consume.\n */\nexport class McTreeFlatDataSource<T, F> extends DataSource<F> {\n    flattenedData = new BehaviorSubject<F[]>([]);\n\n    expandedData = new BehaviorSubject<F[]>([]);\n\n    get data() {\n        return this._data.value;\n    }\n\n    set data(value: T[]) {\n        this._data.next(value);\n\n        this.flattenedData.next(this.treeFlattener.flattenNodes(this.data));\n        this.treeControl.dataNodes = this.flattenedData.value;\n    }\n\n    private _data: BehaviorSubject<T[]>;\n\n    constructor(\n        private treeControl: FlatTreeControl<F>,\n        private treeFlattener: McTreeFlattener<T, F>,\n        initialData: T[] = []\n    ) {\n        super();\n\n        this._data = new BehaviorSubject<T[]>(initialData);\n    }\n\n    connect(collectionViewer: ICollectionViewer): Observable<F[]> {\n        const changes = [\n            collectionViewer.viewChange,\n            this.treeControl.expansionModel.changed,\n            this.flattenedData\n        ];\n\n        return merge(...changes)\n            .pipe(map(() => {\n                this.expandedData.next(\n                    this.treeFlattener.expandFlattenedNodes(this.flattenedData.value, this.treeControl)\n                );\n\n                return this.expandedData.value;\n            }));\n    }\n\n    disconnect() {\n        // no op\n    }\n}\n\n","import { ICollectionViewer, DataSource } from '@ptsecurity/cdk/collections';\nimport { BehaviorSubject, merge, Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\n\n/**\n * Data source for nested tree.\n *\n * The data source for nested tree doesn't have to consider node flattener, or the way to expand\n * or collapse. The expansion/collapsion will be handled by ITreeControl and each non-leaf node.\n */\nexport class McTreeNestedDataSource<T> extends DataSource<T> {\n\n    get data() {\n        return this._data.value;\n    }\n\n    set data(value: T[]) {\n        this._data.next(value);\n    }\n\n    /* tslint:disable-next-line:naming-convention */\n    private _data = new BehaviorSubject<T[]>([]);\n\n    connect(collectionViewer: ICollectionViewer): Observable<T[]> {\n        return merge(...[collectionViewer.viewChange, this._data])\n            .pipe(map(() => this.data));\n    }\n\n    disconnect() {\n        // no op\n    }\n}\n\n"],"names":["__extends","d","b","__","this","constructor","extendStatics","prototype","Object","create","setPrototypeOf","__proto__","Array","p","hasOwnProperty","McTreeNodeDef","_super","tslib_1.__extends","type","Directive","args","selector","inputs","providers","provide","CdkTreeNodeDef","useExisting","data","Input","McTreeNodePadding","_this","apply","arguments","baseLeftPadding","_indent","iconWidth","defineProperty","withIcon","paddingIndent","nodeLevel","treeNode","tree","treeControl","getLevel","level","leftPadding","ngOnInit","isExpandable","setPadding","CdkTreeNodePadding","indent","McTreeNodeToggle","host","(click)","CdkTreeNodeToggle","MC_TREE_OPTION_PARENT_COMPONENT","InjectionToken","McTreeOptionChange","source","isUserInput","uniqueIdCounter","McTreeOption","elementRef","changeDetectorRef","parent","call","onSelectionChange","EventEmitter","_disabled","_selected","_active","_id","value","newValue","toBoolean","isSelected","setSelected","multiple","toggle","selected","selectionModel","select","deselect","setActiveStyles","markForCheck","setInactiveStyles","getHeight","clientRects","nativeElement","getClientRects","length","height","focus","element","getHostElement","textContent","trim","selectViaInteraction","disabled","emitSelectionChangeEvent","setFocusedOption","emit","getTabIndex","Component","exportAs","[attr.id]","[attr.tabindex]","[attr.disabled]","class","[class.mc-selected]","[class.mc-active]","template","CdkTreeNode","ElementRef","ChangeDetectorRef","undefined","decorators","Optional","Inject","Output","McTreeNavigationChange","option","McTreeSelectionChange","McTreeSelectionBase","differs","CdkTree","McTreeSelectionBaseMixin","mixinTabIndex","mixinDisabled","McTreeSelection","tabIndex","autoSelect","noUnselect","navigationChange","selectionChange","destroy","Subject","parseInt","SelectionModel","rawValue","console","log","ngAfterContentInit","keyManager","ActiveDescendantKeyManager","options","withVerticalOrientation","withHorizontalOrientation","ngOnDestroy","next","complete","onKeyDown","event","keyCode","withShift","shiftKey","withCtrl","ctrlKey","LEFT_ARROW","activeItem","collapse","preventDefault","RIGHT_ARROW","expand","SPACE","ENTER","toggleFocusedOption","HOME","setFirstItemActive","END","setLastItemActive","PAGE_UP","setPreviousPageItemActive","PAGE_DOWN","setNextPageItemActive","onKeydown","updateScrollSize","first","withScrollSize","Math","floor","setActiveItem","previousIndex_1","previousActiveItemIndex","activeIndex_1","activeItemIndex","forEach","item","index","canDeselectLast","emitNavigationEvent","focusedIndex","isValidIndex","focusedOption","toArray","emitChangeEvent","renderNodeChanges","dataDiffer","viewContainer","parentData","nodeOutlet","arrayOfInstances","_embeddedViews","view","viewDef","def","nodes","node","nodeMatchedQueries","matchedQueryIds","nodeData","nodeIndex","push","reset","notifyOnChanges","(keydown)","(window:resize)","styles","encapsulation","ViewEncapsulation","None","changeDetection","ChangeDetectionStrategy","OnPush","IterableDiffers","String","Attribute","ViewChild","CdkTreeNodeOutlet","ContentChildren","MC_TREE_DIRECTIVES","McTreeModule","NgModule","imports","CommonModule","CdkTreeModule","McPseudoCheckboxModule","exports","declarations","McTreeFlattener","transformFunction","getChildren","flattenNode","resultNodes","parentMap","flatNode","pipe","take","subscribe","children","child","childParentMap","slice","flattenNodes","structuredData","expandFlattenedNodes","results","currentExpand","i","isExpanded","McTreeFlatDataSource","treeFlattener","initialData","flattenedData","BehaviorSubject","expandedData","_data","dataNodes","connect","collectionViewer","changes","viewChange","expansionModel","changed","merge","map","disconnect","DataSource","McTreeNestedDataSource"],"mappings":"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"}