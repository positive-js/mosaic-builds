{"version":3,"file":"mosaic-tree.umd.min.js","sources":["../../node_modules/tslib/tslib.es6.js","../../packages/mosaic/tree/node.directive.ts","../../packages/mosaic/tree/padding.directive.ts","../../packages/mosaic/tree/toggle.ts","../../packages/mosaic/tree/tree-option.component.ts","../../packages/mosaic/tree/tree-selection.component.ts","../../packages/mosaic/tree/tree.module.ts","../../packages/mosaic/tree/data-source/flat-data-source.ts","../../packages/mosaic/tree/data-source/nested-data-source.ts"],"sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","import { Directive, Input } from '@angular/core';\nimport { CdkTreeNodeDef } from '@ptsecurity/cdk/tree';\n\n\n@Directive({\n    selector: '[mcTreeNodeDef]',\n    inputs: ['when: mcTreeNodeDefWhen'],\n    providers: [{ provide: CdkTreeNodeDef, useExisting: McTreeNodeDef }]\n})\nexport class McTreeNodeDef<T> extends CdkTreeNodeDef<T> {\n    @Input('mcTreeNode') data: T;\n}\n","import { Directive, Input, OnInit } from '@angular/core';\nimport { CdkTreeNodePadding } from '@ptsecurity/cdk/tree';\n\n\n@Directive({\n    selector: '[mcTreeNodePadding]',\n    providers: [{ provide: CdkTreeNodePadding, useExisting: McTreeNodePadding }]\n})\nexport class McTreeNodePadding<T> extends CdkTreeNodePadding<T> implements OnInit {\n    @Input('mcTreeNodePadding') level: number;\n\n    @Input('mcTreeNodePaddingIndent') indent: number;\n\n    baseLeftPadding: number = 12;\n    /* tslint:disable-next-line:naming-convention orthodox-getter-and-setter*/\n    _indent: number = 20;\n\n    withIcon: boolean;\n    iconWidth: number = 20;\n\n    get leftPadding(): number {\n        return (this.withIcon ? 0 : this.iconWidth) + this.baseLeftPadding;\n    }\n\n    paddingIndent(): string | null {\n        const nodeLevel = (this.treeNode.data && this.tree.treeControl.getLevel)\n            ? this.tree.treeControl.getLevel(this.treeNode.data)\n            : null;\n\n        const level = this.level || nodeLevel;\n\n        return level ? `${(level * this._indent) + this.leftPadding}px` : `${this.baseLeftPadding}px`;\n    }\n\n    ngOnInit(): void {\n        this.withIcon = this.tree.treeControl.isExpandable(this.treeNode.data);\n\n        this.setPadding();\n    }\n}\n","import { Component, Directive, Input, ViewEncapsulation } from '@angular/core';\nimport { CdkTree, CdkTreeNode, CdkTreeNodeToggle } from '@ptsecurity/cdk/tree';\nimport { map } from 'rxjs/operators';\n\n\n@Component({\n    selector: 'mc-tree-node-toggle',\n    template: `\n        <i class=\"mc mc-icon mc-angle-down-S_16\"></i>\n    `,\n    host: {\n        class: 'mc-tree-node-toggle',\n        '(click)': 'toggle($event)',\n        '[class.mc-disabled]': 'disabled',\n        '[class.mc-opened]': 'iconState'\n    },\n    encapsulation: ViewEncapsulation.None,\n    providers: [{ provide: CdkTreeNodeToggle, useExisting: McTreeNodeToggleComponent }]\n})\nexport class McTreeNodeToggleComponent<T> extends CdkTreeNodeToggle<T> {\n    disabled: boolean = false;\n\n    @Input() node: T;\n\n    get iconState(): any {\n        return this.disabled || this.tree.treeControl.isExpanded(this.node);\n    }\n\n    constructor(tree: CdkTree<T>, treeNode: CdkTreeNode<T>) {\n        super(tree, treeNode);\n\n        this.tree.treeControl.filterValue\n            .pipe(map((value) => value.length > 0))\n            .subscribe((state: boolean) => this.disabled = state);\n    }\n}\n\n@Directive({\n    selector: '[mcTreeNodeToggle]',\n    host: {\n        '(click)': 'toggle($event)',\n        '[class.mc-disabled]': 'disabled'\n    },\n    providers: [{ provide: CdkTreeNodeToggle, useExisting: McTreeNodeToggleDirective }]\n})\nexport class McTreeNodeToggleDirective<T> extends CdkTreeNodeToggle<T> {\n    disabled: boolean = false;\n\n    constructor(tree: CdkTree<T>, treeNode: CdkTreeNode<T>) {\n        super(tree, treeNode);\n\n        this.tree.treeControl.filterValue\n            .pipe(map((value) => value.length > 0))\n            .subscribe((state: boolean) => this.disabled = state);\n    }\n}\n","import {\n    ChangeDetectorRef,\n    Component,\n    EventEmitter,\n    Input,\n    Output,\n    ElementRef,\n    Inject,\n    InjectionToken,\n    ChangeDetectionStrategy,\n    ViewEncapsulation,\n    OnInit,\n    OnDestroy,\n    AfterContentInit\n} from '@angular/core';\nimport { FocusMonitor } from '@ptsecurity/cdk/a11y';\nimport { CdkTreeNode } from '@ptsecurity/cdk/tree';\nimport { CanDisable, toBoolean } from '@ptsecurity/mosaic/core';\n\n\n/**\n * Injection token used to provide the parent component to options.\n */\nexport const MC_TREE_OPTION_PARENT_COMPONENT = new InjectionToken<any>('MC_TREE_OPTION_PARENT_COMPONENT');\n\nexport class McTreeOptionChange {\n    constructor(public source: McTreeOption, public isUserInput = false) {}\n}\n\nlet uniqueIdCounter: number = 0;\n\n@Component({\n    selector: 'mc-tree-option',\n    exportAs: 'mcTreeOption',\n    templateUrl: './tree-option.html',\n    host: {\n        '[attr.id]': 'id',\n        '[attr.tabindex]': 'getTabIndex()',\n\n        '[attr.disabled]': 'disabled || null',\n\n        class: 'mc-tree-option',\n        '[class.mc-selected]': 'selected',\n        '[class.mc-focused]': 'hasFocus',\n\n        '(focus)': 'handleFocus()',\n        '(blur)': 'handleBlur()',\n        '(click)': 'selectViaInteraction($event)'\n    },\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n    providers: [{ provide: CdkTreeNode, useExisting: McTreeOption }]\n})\nexport class McTreeOption extends CdkTreeNode<McTreeOption> implements OnInit, OnDestroy, CanDisable, AfterContentInit {\n    get value(): any {\n        return this._value;\n    }\n\n    set value(value: any) {\n        this._value = value;\n    }\n\n    private _value: any;\n\n    @Input()\n    get disabled() {\n        return this._disabled || (this.tree && this.tree.disabled);\n    }\n\n    set disabled(value: any) {\n        const newValue = toBoolean(value);\n\n        if (newValue !== this._disabled) {\n            this._disabled = newValue;\n        }\n    }\n\n    private _disabled: boolean = false;\n\n    @Output() readonly onSelectionChange = new EventEmitter<McTreeOptionChange>();\n\n    get selected(): boolean {\n        return this._selected;\n    }\n\n    set selected(value: boolean) {\n        const isSelected = toBoolean(value);\n\n        if (isSelected !== this._selected) {\n            this.setSelected(isSelected);\n        }\n    }\n\n    private _selected: boolean = false;\n\n    get id(): string {\n        return this._id;\n    }\n\n    private _id = `mc-tree-option-${uniqueIdCounter++}`;\n\n    get multiple(): boolean {\n        return this.tree.multiple;\n    }\n\n    get viewValue(): string {\n        // TODO: Add input property alternative for node envs.\n        return (this.getHostElement().textContent || '').trim();\n    }\n\n    hasFocus: boolean = false;\n\n    constructor(\n        elementRef: ElementRef,\n        private changeDetectorRef: ChangeDetectorRef,\n        private focusMonitor: FocusMonitor,\n        @Inject(MC_TREE_OPTION_PARENT_COMPONENT) public tree: any\n    ) {\n        super(elementRef, tree);\n    }\n\n    ngOnInit(): void {\n        this.focusMonitor.monitor(this.elementRef.nativeElement, false);\n    }\n\n    ngAfterContentInit(): void {\n        this.value = this.tree.treeControl.getValue(this.data);\n    }\n\n    ngOnDestroy(): void {\n        this.focusMonitor.stopMonitoring(this.elementRef.nativeElement);\n    }\n\n    toggle(): void {\n        this.selected = !this.selected;\n    }\n\n    setSelected(selected: boolean): void {\n        if (this._selected === selected || !this.tree.selectionModel) { return; }\n\n        this._selected = selected;\n\n        if (selected) {\n            this.tree.selectionModel.select(this.value);\n        } else {\n            this.tree.selectionModel.deselect(this.value);\n        }\n\n        this.changeDetectorRef.markForCheck();\n    }\n\n    handleFocus(): void {\n        if (this.disabled || this.hasFocus) { return; }\n\n        this.hasFocus = true;\n\n        if (this.tree.setFocusedOption) {\n            this.tree.setFocusedOption(this);\n        }\n    }\n\n    handleBlur(): void {\n        this.hasFocus = false;\n    }\n\n    focus(): void {\n        this.focusMonitor.focusVia(this.getHostElement(), 'keyboard');\n    }\n\n    getHeight(): number {\n        const clientRects = this.elementRef.nativeElement.getClientRects();\n\n        if (clientRects.length) {\n            return clientRects[0].height;\n        }\n\n        return 0;\n    }\n\n    select(): void {\n        if (!this._selected) {\n            this._selected = true;\n\n            this.changeDetectorRef.markForCheck();\n            this.emitSelectionChangeEvent();\n        }\n    }\n\n    deselect(): void {\n        if (this._selected) {\n            this._selected = false;\n\n            this.changeDetectorRef.markForCheck();\n        }\n    }\n\n    selectViaInteraction($event?: KeyboardEvent): void {\n        if (!this.disabled) {\n            this.changeDetectorRef.markForCheck();\n            this.emitSelectionChangeEvent(true);\n\n            if (this.tree.setSelectedOption) {\n                this.tree.setSelectedOption(this, $event);\n            }\n        }\n    }\n\n    emitSelectionChangeEvent(isUserInput = false): void {\n        this.onSelectionChange.emit(new McTreeOptionChange(this, isUserInput));\n    }\n\n    getHostElement(): HTMLElement {\n        return this.elementRef.nativeElement;\n    }\n\n    getTabIndex(): string {\n        return this.disabled ? '-1' : '0';\n    }\n\n    markForCheck() {\n        this.changeDetectorRef.markForCheck();\n    }\n}\n","/* tslint:disable:no-empty */\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { SelectionModel } from '@angular/cdk/collections';\nimport {\n    AfterContentInit,\n    Attribute,\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    ContentChildren,\n    EventEmitter,\n    Input,\n    IterableDiffer,\n    IterableDiffers,\n    Output,\n    QueryList,\n    ViewChild,\n    ViewEncapsulation,\n    ElementRef,\n    forwardRef\n} from '@angular/core';\nimport { NodeDef, ViewData } from '@angular/core/esm2015/src/view';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { FocusKeyManager } from '@ptsecurity/cdk/a11y';\nimport {\n    END,\n    ENTER,\n    hasModifierKey,\n    HOME,\n    LEFT_ARROW,\n    PAGE_DOWN,\n    PAGE_UP,\n    RIGHT_ARROW,\n    SPACE\n} from '@ptsecurity/cdk/keycodes';\nimport { CdkTree, CdkTreeNodeOutlet, FlatTreeControl } from '@ptsecurity/cdk/tree';\nimport {\n    CanDisable,\n    getMcSelectNonArrayValueError,\n    HasTabIndex\n} from '@ptsecurity/mosaic/core';\nimport { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\n\nimport { MC_TREE_OPTION_PARENT_COMPONENT, McTreeOption } from './tree-option.component';\n\n\nexport const MC_SELECTION_TREE_VALUE_ACCESSOR: any = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => McTreeSelection),\n    multi: true\n};\n\nexport class McTreeNavigationChange {\n    constructor(\n        public source: McTreeSelection,\n        public option: McTreeOption\n    ) {}\n}\n\nexport class McTreeSelectionChange {\n    constructor(public source: McTreeSelection, public option: McTreeOption) {}\n}\n\n// tslint:disable-next-line:naming-convention\ninterface SelectionModelOption {\n    id: number | string;\n    value: string;\n}\n\n\n@Component({\n    selector: 'mc-tree-selection',\n    exportAs: 'mcTreeSelection',\n    template: '<ng-container cdkTreeNodeOutlet></ng-container>',\n    host: {\n        class: 'mc-tree-selection',\n\n        '[tabindex]': 'tabIndex',\n\n        '(keydown)': 'onKeyDown($event)',\n        '(window:resize)': 'updateScrollSize()'\n    },\n    styleUrls: ['./tree.css'],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    providers: [\n        MC_SELECTION_TREE_VALUE_ACCESSOR,\n        { provide: MC_TREE_OPTION_PARENT_COMPONENT, useExisting: McTreeSelection },\n        { provide: CdkTree, useExisting: McTreeSelection }\n    ]\n})\nexport class McTreeSelection extends CdkTree<McTreeOption>\n    implements ControlValueAccessor, AfterContentInit, CanDisable, HasTabIndex {\n\n    @ViewChild(CdkTreeNodeOutlet, { static: true }) nodeOutlet: CdkTreeNodeOutlet;\n\n    @ContentChildren(McTreeOption) renderedOptions: QueryList<McTreeOption>;\n\n    keyManager: FocusKeyManager<McTreeOption>;\n\n    selectionModel: SelectionModel<SelectionModelOption>;\n\n    @Input() treeControl: FlatTreeControl<McTreeOption>;\n\n    @Output() readonly navigationChange = new EventEmitter<McTreeNavigationChange>();\n\n    @Output() readonly selectionChange = new EventEmitter<McTreeSelectionChange>();\n\n    @Input()\n    get multiple(): boolean {\n        return this._multiple;\n    }\n\n    set multiple(value: boolean) {\n        this._multiple = coerceBooleanProperty(value);\n    }\n\n    private _multiple: boolean = false;\n\n    @Input()\n    get autoSelect(): boolean {\n        return this._autoSelect;\n    }\n\n    set autoSelect(value: boolean) {\n        this._autoSelect = coerceBooleanProperty(value);\n    }\n\n    private _autoSelect: boolean = true;\n\n    @Input()\n    get noUnselectLast(): boolean {\n        return this._noUnselectLast;\n    }\n\n    set noUnselectLast(value: boolean) {\n        this._noUnselectLast = coerceBooleanProperty(value);\n    }\n\n    private _noUnselectLast: boolean = true;\n\n    @Input()\n    get disabled(): boolean {\n        return this._disabled;\n    }\n\n    set disabled(rawValue: boolean) {\n        const value = coerceBooleanProperty(rawValue);\n\n        if (this._disabled !== value) {\n            this._disabled = value;\n\n            this.markOptionsForCheck();\n        }\n    }\n\n    private _disabled: boolean = false;\n\n    get tabIndex(): number {\n        return this.disabled ? -1 : this._tabIndex;\n    }\n\n    set tabIndex(value: number) {\n        this._tabIndex = value != null ? value : 0;\n    }\n\n    private _tabIndex: number;\n\n    private readonly destroy = new Subject<void>();\n\n    constructor(\n        private elementRef: ElementRef,\n        differs: IterableDiffers,\n        changeDetectorRef: ChangeDetectorRef,\n        @Attribute('tabindex') tabIndex: string,\n        @Attribute('multiple') multiple: string\n    ) {\n        super(differs, changeDetectorRef);\n\n        this.tabIndex = parseInt(tabIndex) || 0;\n        this.multiple = multiple === null ? false : coerceBooleanProperty(multiple);\n\n        if (this.multiple) {\n            this.autoSelect = false;\n            this.noUnselectLast = false;\n        }\n\n        this.selectionModel = new SelectionModel<SelectionModelOption>(this.multiple);\n    }\n\n    ngAfterContentInit(): void {\n        this.keyManager = new FocusKeyManager<McTreeOption>(this.renderedOptions)\n            .withVerticalOrientation(true)\n            .withHorizontalOrientation(null);\n\n        this.keyManager.change\n            .pipe(takeUntil(this.destroy))\n            .subscribe(() => {\n                if (this.keyManager.activeItem) {\n                    this.emitNavigationEvent(this.keyManager.activeItem);\n                }\n            });\n\n        this.selectionModel.changed\n            .pipe(takeUntil(this.destroy))\n            .subscribe(() => {\n                this.onChange(this.getSelectedValues());\n\n                this.renderedOptions.notifyOnChanges();\n            });\n\n        this.renderedOptions.changes\n            .pipe(takeUntil(this.destroy))\n            .subscribe((options) => {\n                // todo need to do optimisation\n                options.forEach((option) => {\n                    option.deselect();\n\n                    this.getSelectedValues().forEach((selectedValue) => {\n                        if (option.value === selectedValue) {\n                            option.select();\n                        }\n                    });\n                });\n            });\n    }\n\n    ngOnDestroy(): void {\n        this.destroy.next();\n        this.destroy.complete();\n    }\n\n    onKeyDown(event: KeyboardEvent): void {\n        // tslint:disable-next-line: deprecation\n        const keyCode = event.keyCode;\n\n        switch (keyCode) {\n            case LEFT_ARROW:\n                if (this.keyManager.activeItem) {\n                    this.treeControl.collapse(this.keyManager.activeItem.data);\n                }\n\n                event.preventDefault();\n\n                return;\n            case RIGHT_ARROW:\n                if (this.keyManager.activeItem) {\n                    this.treeControl.expand(this.keyManager.activeItem.data);\n                }\n\n                event.preventDefault();\n\n                return;\n            case SPACE:\n            case ENTER:\n                this.toggleFocusedOption();\n                event.preventDefault();\n\n                break;\n            case HOME:\n                this.keyManager.setFirstItemActive();\n                event.preventDefault();\n\n                break;\n            case END:\n                this.keyManager.setLastItemActive();\n                event.preventDefault();\n\n                break;\n            case PAGE_UP:\n                this.keyManager.setPreviousPageItemActive();\n                event.preventDefault();\n\n                break;\n            case PAGE_DOWN:\n                this.keyManager.setNextPageItemActive();\n                event.preventDefault();\n\n                break;\n            default:\n                this.keyManager.onKeydown(event);\n        }\n\n        if (this.autoSelect && this.keyManager.activeItem) {\n            this.setSelectedOption(this.keyManager.activeItem);\n        }\n    }\n\n    updateScrollSize(): void {\n        if (!this.renderedOptions.first) { return; }\n\n        this.keyManager.withScrollSize(Math.floor(this.getHeight() / this.renderedOptions.first.getHeight()));\n    }\n\n    setSelectedOption(option: McTreeOption, $event?: KeyboardEvent): void {\n        const withShift = $event ? hasModifierKey($event, 'shiftKey') : false;\n        const withCtrl = $event ? hasModifierKey($event, 'ctrlKey') : false;\n\n        if (this.multiple) {\n            if (withShift) {\n                const previousIndex = this.keyManager.previousActiveItemIndex;\n                const activeIndex = this.keyManager.activeItemIndex;\n\n                if (previousIndex < activeIndex) {\n                    this.renderedOptions.forEach((item, index) => {\n                        if (index >= previousIndex && index <= activeIndex) { item.setSelected(true); }\n                    });\n                } else {\n                    this.renderedOptions.forEach((item, index) => {\n                        if (index >= activeIndex && index <= previousIndex) { item.setSelected(true); }\n                    });\n                }\n            } else if (withCtrl) {\n                if (!this.canDeselectLast(option)) { return; }\n\n                this.selectionModel.toggle(option.data);\n            } else {\n                this.selectionModel.toggle(option.data);\n            }\n        } else {\n            if (!this.canDeselectLast(option)) { return; }\n\n            if (this.autoSelect) {\n                this.selectionModel.deselect(...this.selectionModel.selected);\n                this.selectionModel.select(option.data);\n            }\n        }\n\n        this.emitChangeEvent(option);\n    }\n\n    setFocusedOption(option: McTreeOption): void {\n        this.keyManager.setActiveItem(option);\n    }\n\n    toggleFocusedOption(): void {\n        const focusedOption = this.keyManager.activeItem;\n\n        if (focusedOption) {\n            this.setSelectedOption(focusedOption);\n        }\n    }\n\n    renderNodeChanges(\n        data: McTreeOption[],\n        dataDiffer: IterableDiffer<McTreeOption> = this.dataDiffer,\n        viewContainer: any = this.nodeOutlet.viewContainer,\n        parentData?: McTreeOption\n    ): void {\n        super.renderNodeChanges(data, dataDiffer, viewContainer, parentData);\n\n        const arrayOfInstances = [];\n        const changeDetectorRefs: any[] = [];\n\n        viewContainer._embeddedViews.forEach((view: ViewData) => {\n            const viewDef = view.def;\n\n            viewDef.nodes.forEach((node: NodeDef) => {\n                if (viewDef.nodeMatchedQueries === node.matchedQueryIds) {\n                    const nodeData: any = view.nodes[node.nodeIndex];\n\n                    arrayOfInstances.push(nodeData.instance as never);\n                    changeDetectorRefs.push(nodeData.instance.changeDetectorRef);\n                }\n            });\n        });\n\n        setTimeout(() => {\n            changeDetectorRefs.forEach((changeDetectorRef) => {\n                if (!changeDetectorRef.destroyed) {\n                    changeDetectorRef.detectChanges();\n                }\n            });\n        });\n\n        if (this.renderedOptions) {\n            this.renderedOptions.reset(arrayOfInstances);\n            this.renderedOptions.notifyOnChanges();\n        }\n\n        this.updateScrollSize();\n\n        this.nodeOutlet.changeDetectorRef.detectChanges();\n    }\n\n    getHeight(): number {\n        const clientRects = this.elementRef.nativeElement.getClientRects();\n\n        if (clientRects.length) {\n            return clientRects[0].height;\n        }\n\n        return 0;\n    }\n\n    getItemHeight(): number {\n        return this.renderedOptions.first ? this.renderedOptions.first.getHeight() : 0;\n    }\n\n    emitNavigationEvent(option: McTreeOption): void {\n        this.navigationChange.emit(new McTreeNavigationChange(this, option));\n    }\n\n    emitChangeEvent(option: McTreeOption): void {\n        this.selectionChange.emit(new McTreeNavigationChange(this, option));\n    }\n\n    writeValue(value: any): void {\n        if (this.multiple && value && !Array.isArray(value)) {\n            throw getMcSelectNonArrayValueError();\n        }\n\n        if (this.renderedOptions) {\n            this.setOptionsFromValues(this.multiple ? value : [value]);\n        }\n    }\n\n    /** `View -> model callback called when value changes` */\n    onChange: (value: any) => void = () => {};\n\n    registerOnChange(fn: (value: any) => void): void {\n        this.onChange = fn;\n    }\n\n    /** `View -> model callback called when select has been touched` */\n    onTouched = () => {};\n\n    registerOnTouched(fn: () => {}): void {\n        this.onTouched = fn;\n    }\n\n    /**\n     * Sets the disabled state of the control. Implemented as a part of ControlValueAccessor.\n     */\n    setDisabledState(isDisabled: boolean): void {\n        this._disabled = isDisabled;\n        this.changeDetectorRef.markForCheck();\n    }\n\n    setOptionsFromValues(values: any[]): void {\n        this.selectionModel.clear();\n\n        const valuesToSelect = values.reduce((result, value) => {\n            return this.treeControl.hasValue(value) ? [...result, this.treeControl.hasValue(value)] : [...result];\n        }, []);\n\n        this.selectionModel.select(...valuesToSelect);\n    }\n\n    getSelectedValues(): any[] {\n        return this.selectionModel.selected.map((selected) => this.treeControl.getValue(selected));\n    }\n\n    private markOptionsForCheck() {\n        if (this.renderedOptions) {\n            this.renderedOptions.forEach((option) => option.markForCheck());\n        }\n    }\n\n    private canDeselectLast(option: McTreeOption): boolean {\n        return !(this.noUnselectLast && this.selectionModel.selected.length === 1 && option.selected);\n    }\n}\n\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { CdkTreeModule } from '@ptsecurity/cdk/tree';\nimport { McPseudoCheckboxModule } from '@ptsecurity/mosaic/core';\n\nimport { McTreeNodeDef } from './node.directive';\nimport { McTreeNodePadding } from './padding.directive';\nimport { McTreeNodeToggleDirective, McTreeNodeToggleComponent } from './toggle';\nimport { McTreeOption } from './tree-option.component';\nimport { McTreeSelection } from './tree-selection.component';\n\n\nconst MC_TREE_DIRECTIVES = [\n    McTreeSelection,\n    McTreeOption,\n    McTreeNodeDef,\n    McTreeNodePadding,\n    McTreeNodeToggleComponent,\n    McTreeNodeToggleDirective\n];\n\n@NgModule({\n    imports: [CommonModule, CdkTreeModule, McPseudoCheckboxModule],\n    exports: MC_TREE_DIRECTIVES,\n    declarations: MC_TREE_DIRECTIVES\n})\nexport class McTreeModule {}\n","import { CollectionViewer, DataSource } from '@angular/cdk/collections';\nimport { FlatTreeControl, TreeControl } from '@ptsecurity/cdk/tree';\nimport { BehaviorSubject, merge, Observable } from 'rxjs';\nimport { map, take } from 'rxjs/operators';\n\n\n/**\n * Tree flattener to convert a normal type of node to node with children & level information.\n * Transform nested nodes of type `T` to flattened nodes of type `F`.\n *\n * For example, the input data of type `T` is nested, and contains its children data:\n *   SomeNode: {\n *     key: 'Fruits',\n *     children: [\n *       NodeOne: {\n *         key: 'Apple',\n *       },\n *       NodeTwo: {\n *        key: 'Pear',\n *      }\n *    ]\n *  }\n *  After flattener flatten the tree, the structure will become\n *  SomeNode: {\n *    key: 'Fruits',\n *    expandable: true,\n *    level: 1\n *  },\n *  NodeOne: {\n *    key: 'Apple',\n *    expandable: false,\n *    level: 2\n *  },\n *  NodeTwo: {\n *   key: 'Pear',\n *   expandable: false,\n *   level: 2\n * }\n * and the output flattened type is `F` with additional information.\n */\nexport class McTreeFlattener<T, F> {\n    constructor(\n        public transformFunction: (node: T, level: number, parent: F | null) => F,\n        public getLevel: (node: F) => number,\n        public isExpandable: (node: F) => boolean,\n        public getChildren: (node: T) => Observable<T[]> | T[] | undefined | null\n    ) {}\n\n    flattenNode(node: T, level: number, resultNodes: F[], parent: F | null): F[] {\n        const flatNode = this.transformFunction(node, level, parent);\n        resultNodes.push(flatNode);\n\n        if (this.isExpandable(flatNode)) {\n            const childrenNodes = this.getChildren(node);\n\n            if (childrenNodes) {\n                if (Array.isArray(childrenNodes)) {\n                    this.flattenChildren(childrenNodes, level, resultNodes, flatNode);\n                } else {\n                    childrenNodes\n                        .pipe(take(1))\n                        .subscribe((children) => {\n                            this.flattenChildren(children, level, resultNodes, flatNode);\n                        });\n                }\n            }\n        }\n\n        return resultNodes;\n    }\n\n    flattenChildren(children: T[], level: number, resultNodes: F[], parent: F | null): void {\n        children.forEach((child) => {\n            this.flattenNode(child, level + 1, resultNodes, parent);\n        });\n    }\n\n    /**\n     * Flatten a list of node type T to flattened version of node F.\n     * Please note that type T may be nested, and the length of `structuredData` may be different\n     * from that of returned list `F[]`.\n     */\n    flattenNodes(structuredData: T[]): F[] {\n        const resultNodes: F[] = [];\n        structuredData.forEach((node) => this.flattenNode(node, 0, resultNodes, null));\n\n        return resultNodes;\n    }\n\n    /**\n     * Expand flattened node with current expansion status.\n     * The returned list may have different length.\n     */\n    expandFlattenedNodes(nodes: F[], treeControl: TreeControl<F>): F[] {\n        const results: F[] = [];\n        const currentExpand: boolean[] = [];\n        currentExpand[0] = true;\n\n        nodes.forEach((node) => {\n            let expand = true;\n            for (let i = 0; i <= this.getLevel(node); i++) {\n                expand = expand && currentExpand[i];\n            }\n\n            if (expand) { results.push(node); }\n\n            if (this.isExpandable(node)) {\n                currentExpand[this.getLevel(node) + 1] = treeControl.isExpanded(node);\n            }\n        });\n\n        return results;\n    }\n}\n\nenum McTreeDataSourceChangeTypes {\n    Expansion = 'expansion',\n    Filter = 'filter'\n}\n\n/**\n * Data source for flat tree.\n * The data source need to handle expansion/collapsion of the tree node and change the data feed\n * to `McTree`.\n * The nested tree nodes of type `T` are flattened through `MсTreeFlattener`, and converted\n * to type `F` for `McTree` to consume.\n */\nexport class McTreeFlatDataSource<T, F> extends DataSource<F> {\n    flattenedData = new BehaviorSubject<F[]>([]);\n\n    expandedData = new BehaviorSubject<F[]>([]);\n\n    filteredData = new BehaviorSubject<F[]>([]);\n\n    get data() {\n        return this._data.value;\n    }\n\n    set data(value: T[]) {\n        this._data.next(value);\n\n        this.flattenedData.next(this.treeFlattener.flattenNodes(this.data));\n        this.treeControl.dataNodes = this.flattenedData.value;\n    }\n\n    private _data: BehaviorSubject<T[]>;\n\n    constructor(\n        private treeControl: FlatTreeControl<F>,\n        private treeFlattener: McTreeFlattener<T, F>,\n        initialData: T[] = []\n    ) {\n        super();\n\n        this._data = new BehaviorSubject<T[]>(initialData);\n    }\n\n    connect(collectionViewer: CollectionViewer): Observable<F[]> {\n        return merge(\n            collectionViewer.viewChange,\n            this.treeControl.expansionModel.changed\n                .pipe(map((value) => ({ type: McTreeDataSourceChangeTypes.Expansion, value }))),\n            this.treeControl.filterValue\n                .pipe(map((value) => ({ type: McTreeDataSourceChangeTypes.Filter, value }))),\n            this.flattenedData\n        )\n        .pipe(map((changeObj: any): any => {\n            if (changeObj.type === McTreeDataSourceChangeTypes.Filter) {\n                if (changeObj.value && changeObj.value.length > 0) {\n                    return this.filterHandler();\n                } else {\n                    return this.expansionHandler();\n                }\n            }\n\n            return this.expansionHandler();\n        }));\n    }\n\n    filterHandler(): F[] {\n        this.filteredData.next(this.treeControl.filterModel.selected);\n\n        return this.filteredData.value;\n    }\n\n    expansionHandler(): F[] {\n        const expandedNodes = this.treeFlattener.expandFlattenedNodes(this.flattenedData.value, this.treeControl);\n        this.expandedData.next(expandedNodes);\n\n        return this.expandedData.value;\n    }\n\n    disconnect() {\n        // no op\n    }\n}\n\n","import { CollectionViewer, DataSource } from '@angular/cdk/collections';\nimport { BehaviorSubject, merge, Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\n\n/**\n * Data source for nested tree.\n *\n * The data source for nested tree doesn't have to consider node flattener, or the way to expand\n * or collapse. The expansion/collapsion will be handled by TreeControl and each non-leaf node.\n */\nexport class McTreeNestedDataSource<T> extends DataSource<T> {\n\n    get data() {\n        return this._data.value;\n    }\n\n    set data(value: T[]) {\n        this._data.next(value);\n    }\n\n    /* tslint:disable-next-line:naming-convention */\n    private _data = new BehaviorSubject<T[]>([]);\n\n    connect(collectionViewer: CollectionViewer): Observable<T[]> {\n        return merge(...[collectionViewer.viewChange, this._data])\n            .pipe(map(() => this.data));\n    }\n\n    disconnect() {\n        // no op\n    }\n}\n\n"],"names":["__extends","d","b","__","this","constructor","extendStatics","prototype","Object","create","setPrototypeOf","__proto__","Array","p","hasOwnProperty","McTreeNodeDef","_super","tslib_1.__extends","type","Directive","args","selector","inputs","providers","provide","CdkTreeNodeDef","useExisting","data","Input","McTreeNodePadding","_this","apply","arguments","baseLeftPadding","_indent","iconWidth","defineProperty","withIcon","paddingIndent","nodeLevel","treeNode","tree","treeControl","getLevel","level","leftPadding","ngOnInit","isExpandable","setPadding","CdkTreeNodePadding","indent","McTreeNodeToggleComponent","call","disabled","filterValue","pipe","map","value","length","subscribe","state","isExpanded","node","Component","template","host","class","(click)","[class.mc-disabled]","[class.mc-opened]","encapsulation","ViewEncapsulation","None","CdkTreeNodeToggle","CdkTree","CdkTreeNode","McTreeNodeToggleDirective","MC_TREE_OPTION_PARENT_COMPONENT","InjectionToken","McTreeOptionChange","source","isUserInput","uniqueIdCounter","McTreeOption","elementRef","changeDetectorRef","focusMonitor","_disabled","onSelectionChange","EventEmitter","_selected","_id","hasFocus","_value","newValue","toBoolean","isSelected","setSelected","multiple","getHostElement","textContent","trim","monitor","nativeElement","ngAfterContentInit","getValue","ngOnDestroy","stopMonitoring","toggle","selected","selectionModel","select","deselect","markForCheck","handleFocus","setFocusedOption","handleBlur","focus","focusVia","getHeight","clientRects","getClientRects","height","emitSelectionChangeEvent","selectViaInteraction","$event","setSelectedOption","emit","getTabIndex","exportAs","[attr.id]","[attr.tabindex]","[attr.disabled]","[class.mc-selected]","[class.mc-focused]","(focus)","(blur)","changeDetection","ChangeDetectionStrategy","OnPush","ElementRef","ChangeDetectorRef","FocusMonitor","undefined","decorators","Inject","Output","MC_SELECTION_TREE_VALUE_ACCESSOR","NG_VALUE_ACCESSOR","forwardRef","McTreeSelection","multi","McTreeNavigationChange","option","McTreeSelectionChange","differs","tabIndex","navigationChange","selectionChange","_multiple","_autoSelect","_noUnselectLast","destroy","Subject","onChange","onTouched","parseInt","coerceBooleanProperty","autoSelect","noUnselectLast","SelectionModel","rawValue","markOptionsForCheck","_tabIndex","keyManager","FocusKeyManager","renderedOptions","withVerticalOrientation","withHorizontalOrientation","change","takeUntil","activeItem","emitNavigationEvent","changed","getSelectedValues","notifyOnChanges","changes","options","forEach","selectedValue","next","complete","onKeyDown","event","keyCode","LEFT_ARROW","collapse","preventDefault","RIGHT_ARROW","expand","SPACE","ENTER","toggleFocusedOption","HOME","setFirstItemActive","END","setLastItemActive","PAGE_UP","setPreviousPageItemActive","PAGE_DOWN","setNextPageItemActive","onKeydown","updateScrollSize","first","withScrollSize","Math","floor","withShift","hasModifierKey","withCtrl","previousIndex_1","previousActiveItemIndex","activeIndex_1","activeItemIndex","item","index","canDeselectLast","_a","emitChangeEvent","setActiveItem","focusedOption","renderNodeChanges","dataDiffer","viewContainer","parentData","nodeOutlet","arrayOfInstances","changeDetectorRefs","_embeddedViews","view","viewDef","def","nodes","nodeMatchedQueries","matchedQueryIds","nodeData","nodeIndex","push","instance","setTimeout","destroyed","detectChanges","reset","getItemHeight","writeValue","isArray","getMcSelectNonArrayValueError","setOptionsFromValues","registerOnChange","fn","registerOnTouched","setDisabledState","isDisabled","values","clear","valuesToSelect","reduce","result","hasValue","concat","slice","[tabindex]","(keydown)","(window:resize)","styles","IterableDiffers","String","Attribute","ViewChild","CdkTreeNodeOutlet","static","ContentChildren","MC_TREE_DIRECTIVES","McTreeModule","NgModule","imports","CommonModule","CdkTreeModule","McPseudoCheckboxModule","exports","declarations","McTreeFlattener","transformFunction","getChildren","flattenNode","resultNodes","parent","flatNode","childrenNodes","flattenChildren","take","children","child","flattenNodes","structuredData","expandFlattenedNodes","results","currentExpand","i","Expansion","Filter","McTreeFlatDataSource","treeFlattener","initialData","flattenedData","BehaviorSubject","expandedData","filteredData","_data","dataNodes","connect","collectionViewer","merge","viewChange","expansionModel","McTreeDataSourceChangeTypes","changeObj","filterHandler","expansionHandler","filterModel","expandedNodes","disconnect","DataSource","McTreeNestedDataSource"],"mappings":"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"}