{"version":3,"file":"mosaic-tree.umd.min.js","sources":["../../node_modules/tslib/tslib.es6.js","../../packages/mosaic/tree/node.directive.ts","../../packages/mosaic/tree/padding.directive.ts","../../packages/mosaic/tree/toggle.ts","../../packages/mosaic/tree/tree-option.component.ts","../../packages/mosaic/tree/tree-selection.component.ts","../../packages/mosaic/tree/tree.module.ts","../../packages/mosaic/tree/data-source/flat-data-source.ts","../../packages/mosaic/tree/data-source/nested-data-source.ts"],"sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","import { Directive, Input } from '@angular/core';\n\nimport { CdkTreeNodeDef } from '@ptsecurity/cdk/tree';\n\n\n@Directive({\n    selector: '[mcTreeNodeDef]',\n    inputs: ['when: mcTreeNodeDefWhen'],\n    providers: [{ provide: CdkTreeNodeDef, useExisting: McTreeNodeDef }]\n})\nexport class McTreeNodeDef<T> extends CdkTreeNodeDef<T> {\n    @Input('mcTreeNode') data: T;\n}\n","import { Directive, Input, OnInit } from '@angular/core';\nimport { CdkTreeNodePadding } from '@ptsecurity/cdk/tree';\n\n\n@Directive({\n    selector: '[mcTreeNodePadding]',\n    providers: [{ provide: CdkTreeNodePadding, useExisting: McTreeNodePadding }]\n})\nexport class McTreeNodePadding<T> extends CdkTreeNodePadding<T> implements OnInit {\n    @Input('mcTreeNodePadding') level: number;\n\n    @Input('mcTreeNodePaddingIndent') indent: number;\n\n    baseLeftPadding: number = 12;\n    /* tslint:disable-next-line:naming-convention */\n    _indent: number = 20;\n\n    withIcon: boolean;\n    iconWidth: number = 20;\n\n    get leftPadding(): number {\n        return (this.withIcon ? 0 : this.iconWidth) + this.baseLeftPadding;\n    }\n\n    paddingIndent(): string | null {\n        const nodeLevel = (this.treeNode.data && this.tree.treeControl.getLevel)\n            ? this.tree.treeControl.getLevel(this.treeNode.data)\n            : null;\n\n        const level = this.level || nodeLevel;\n\n        return level ? `${(level * this._indent) + this.leftPadding}px` : `${this.baseLeftPadding}px`;\n    }\n\n    ngOnInit(): void {\n        this.withIcon = this.tree.treeControl.isExpandable(this.treeNode.data);\n\n        this.setPadding();\n    }\n}\n","import { Component, Directive, Input, ViewEncapsulation } from '@angular/core';\nimport { BaseTreeControl, CdkTree, CdkTreeNode, CdkTreeNodeToggle } from '@ptsecurity/cdk/tree';\n\n\n@Component({\n    selector: 'mc-tree-node-toggle',\n    template: `\n        <i class=\"mc mc-icon mc-angle-down-S_16\"></i>\n    `,\n    host: {\n        class: 'mc-tree-node-toggle',\n        '(click)': 'toggle($event)',\n        '[class.mc-disabled]': 'disabled',\n        '[class.mc-opened]': 'iconState'\n    },\n    encapsulation: ViewEncapsulation.None,\n    providers: [{ provide: CdkTreeNodeToggle, useExisting: McTreeNodeToggleComponent }]\n})\nexport class McTreeNodeToggleComponent<T> extends CdkTreeNodeToggle<T> {\n    disabled: boolean = false;\n\n    @Input() node: T;\n\n    get iconState(): any {\n        return this.disabled || this.tree.treeControl.isExpanded(this.node);\n    }\n\n    constructor(protected tree: CdkTree<T>, protected treeNode: CdkTreeNode<T>) {\n        super(tree, treeNode);\n\n        // todo может пересмотреть, как то не очень\n        (this.tree.treeControl as BaseTreeControl<T>).filterValue\n            .subscribe((value: string) => { this.disabled = value.length > 0; });\n    }\n}\n\n@Directive({\n    selector: '[mcTreeNodeToggle]',\n    host: {\n        '(click)': 'toggle($event)',\n        '[class.mc-disabled]': 'disabled'\n    },\n    providers: [{ provide: CdkTreeNodeToggle, useExisting: McTreeNodeToggleDirective }]\n})\nexport class McTreeNodeToggleDirective<T> extends CdkTreeNodeToggle<T> {\n    disabled: boolean = false;\n\n    constructor(protected tree: CdkTree<T>, protected treeNode: CdkTreeNode<T>) {\n        super(tree, treeNode);\n\n        // todo может пересмотреть, как то не очень\n        (this.tree.treeControl as BaseTreeControl<T>).filterValue\n            .subscribe((value: string) => { this.disabled = value.length > 0; });\n    }\n}\n","import { SelectionModel } from '@angular/cdk/collections';\nimport {\n    ChangeDetectorRef,\n    Component,\n    EventEmitter,\n    Input,\n    Output,\n    ElementRef,\n    Inject,\n    Optional,\n    InjectionToken, ChangeDetectionStrategy, ViewEncapsulation\n} from '@angular/core';\nimport { CdkTreeNode } from '@ptsecurity/cdk/tree';\nimport { CanDisable, toBoolean } from '@ptsecurity/mosaic/core';\n\n\n/* tslint:disable-next-line:naming-convention */\nexport interface McTreeOptionParentComponent {\n    multiple: boolean;\n    selectionModel: SelectionModel<any>;\n    setSelectedOption: any;\n    setFocusedOption: any;\n}\n\n/**\n * Injection token used to provide the parent component to options.\n */\nexport const MC_TREE_OPTION_PARENT_COMPONENT =\n    new InjectionToken<McTreeOptionParentComponent>('MC_TREE_OPTION_PARENT_COMPONENT');\n\nexport class McTreeOptionChange {\n    constructor(public source: McTreeOption, public isUserInput = false) {}\n}\n\nlet uniqueIdCounter: number = 0;\n\n@Component({\n    selector: 'mc-tree-option',\n    exportAs: 'mcTreeOption',\n    templateUrl: './tree-option.html',\n    host: {\n        '[attr.id]': 'id',\n        '[attr.tabindex]': 'getTabIndex()',\n\n        '[attr.disabled]': 'disabled || null',\n\n        class: 'mc-tree-option',\n        '[class.mc-selected]': 'selected',\n        '[class.mc-focused]': 'hasFocus',\n\n        '(focus)': 'handleFocus()',\n        '(blur)': 'handleBlur()',\n        '(click)': 'selectViaInteraction($event)'\n    },\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n    providers: [{ provide: CdkTreeNode, useExisting: McTreeOption }]\n})\nexport class McTreeOption extends CdkTreeNode<McTreeOption> implements CanDisable {\n    @Input()\n    get value(): any {\n        return this._value;\n    }\n\n    set value(value: any) {\n        this._value = value;\n    }\n\n    private _value: any;\n\n    @Input()\n    get disabled() {\n        return this._disabled;\n    }\n\n    set disabled(value: any) {\n        const newValue = toBoolean(value);\n\n        if (newValue !== this._disabled) {\n            this._disabled = newValue;\n        }\n    }\n\n    private _disabled: boolean = false;\n\n    @Output() readonly onSelectionChange = new EventEmitter<McTreeOptionChange>();\n\n    // @Input()\n    // get selected(): boolean {\n    //     return this.treeSelection.selectionModel && this.treeSelection.selectionModel.isSelected(this) || false;\n    // }\n\n    get selected(): boolean {\n        return this._selected;\n    }\n\n    set selected(value: boolean) {\n        const isSelected = toBoolean(value);\n\n        if (isSelected !== this._selected) {\n            this.setSelected(isSelected);\n            // this.treeSelection._reportValueChange();\n        }\n    }\n\n    private _selected: boolean = false;\n\n    get id(): string {\n        return this._id;\n    }\n\n    private _id = `mc-tree-option-${uniqueIdCounter++}`;\n\n    get multiple(): boolean {\n        return this.parent.multiple;\n    }\n\n    hasFocus: boolean = false;\n\n    constructor(\n        protected elementRef: ElementRef,\n        protected changeDetectorRef: ChangeDetectorRef,\n        @Optional() @Inject(MC_TREE_OPTION_PARENT_COMPONENT) private readonly parent: McTreeOptionParentComponent\n    ) {\n        // todo any\n        super(elementRef, parent as any);\n    }\n\n    toggle(): void {\n        this.selected = !this.selected;\n    }\n\n    setSelected(selected: boolean) {\n        if (this._selected === selected || !this.parent.selectionModel) { return; }\n\n        this._selected = selected;\n\n        if (selected) {\n            this.parent.selectionModel.select(this.value);\n        } else {\n            this.parent.selectionModel.deselect(this.value);\n        }\n\n        this.changeDetectorRef.markForCheck();\n    }\n\n    handleFocus() {\n        if (this.disabled || this.hasFocus) { return; }\n\n        this.hasFocus = true;\n\n        if (this.parent.setFocusedOption) {\n            this.parent.setFocusedOption(this);\n        }\n    }\n\n    handleBlur() {\n        this.hasFocus = false;\n    }\n\n    focus(): void {\n        const element = this.getHostElement();\n\n        if (typeof element.focus === 'function') {\n            element.focus();\n        }\n    }\n\n    getHeight(): number {\n        const clientRects = this.elementRef.nativeElement.getClientRects();\n\n        if (clientRects.length) {\n            return clientRects[0].height;\n        }\n\n        return 0;\n    }\n\n    get viewValue(): string {\n        // TODO: Add input property alternative for node envs.\n        return (this.getHostElement().textContent || '').trim();\n    }\n\n    select(): void {\n        if (!this._selected) {\n            this._selected = true;\n\n            this.changeDetectorRef.markForCheck();\n        }\n    }\n\n    deselect(): void {\n        if (this._selected) {\n            this._selected = false;\n\n            this.changeDetectorRef.markForCheck();\n        }\n    }\n\n    selectViaInteraction($event?: KeyboardEvent): void {\n        if (!this.disabled) {\n            this.changeDetectorRef.markForCheck();\n            this.emitSelectionChangeEvent(true);\n\n            if (this.parent.setSelectedOption) {\n                this.parent.setSelectedOption(this, $event);\n            }\n        }\n    }\n\n    emitSelectionChangeEvent(isUserInput = false): void {\n        this.onSelectionChange.emit(new McTreeOptionChange(this, isUserInput));\n    }\n\n    getHostElement(): HTMLElement {\n        return this.elementRef.nativeElement;\n    }\n\n    getTabIndex(): string {\n        return this.disabled ? '-1' : '0';\n    }\n}\n","import { SelectionModel } from '@angular/cdk/collections';\nimport {\n    AfterContentInit,\n    Attribute,\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    ContentChildren,\n    EventEmitter,\n    Input,\n    IterableDiffer,\n    IterableDiffers,\n    Output,\n    QueryList,\n    ViewChild,\n    ViewEncapsulation,\n    ElementRef,\n    Self,\n    Optional\n} from '@angular/core';\nimport { NodeDef, ViewData } from '@angular/core/esm2015/src/view';\nimport { ControlValueAccessor, NgControl } from '@angular/forms';\nimport { FocusKeyManager } from '@ptsecurity/cdk/a11y';\nimport {\n    END,\n    ENTER,\n    hasModifierKey,\n    HOME,\n    LEFT_ARROW,\n    PAGE_DOWN,\n    PAGE_UP,\n    RIGHT_ARROW,\n    SPACE\n} from '@ptsecurity/cdk/keycodes';\nimport { CdkTree, CdkTreeNodeOutlet } from '@ptsecurity/cdk/tree';\nimport {\n    CanDisable,\n    HasTabIndex,\n    toBoolean\n} from '@ptsecurity/mosaic/core';\nimport { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\n\nimport { MC_TREE_OPTION_PARENT_COMPONENT, McTreeOption } from './tree-option.component';\n\n\nexport class McTreeNavigationChange {\n    constructor(\n        public source: McTreeSelection,\n        public option: McTreeOption\n    ) {}\n}\n\nexport class McTreeSelectionChange {\n    constructor(public source: McTreeSelection, public option: McTreeOption) {}\n}\n\n\n@Component({\n    selector: 'mc-tree-selection',\n    exportAs: 'mcTreeSelection',\n    template: `<ng-container cdkTreeNodeOutlet></ng-container>`,\n    host: {\n        class: 'mc-tree-selection',\n\n        '[attr.tabindex]': 'tabIndex',\n\n        '(keydown)': 'onKeyDown($event)',\n        '(window:resize)': 'updateScrollSize()'\n    },\n    styleUrls: ['./tree.css'],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    providers: [\n        { provide: MC_TREE_OPTION_PARENT_COMPONENT, useExisting: McTreeSelection },\n        { provide: CdkTree, useExisting: McTreeSelection }\n    ]\n})\nexport class McTreeSelection extends CdkTree<any>\n    implements ControlValueAccessor, AfterContentInit, CanDisable, HasTabIndex {\n\n    @ViewChild(CdkTreeNodeOutlet, { static: true }) nodeOutlet: CdkTreeNodeOutlet;\n\n    @ContentChildren(McTreeOption) options: QueryList<McTreeOption>;\n\n    keyManager: FocusKeyManager<McTreeOption>;\n\n    selectionModel: SelectionModel<any>;\n\n    multiple: boolean;\n    autoSelect: boolean;\n    noUnselectLastSelected: boolean;\n\n    @Output() readonly navigationChange = new EventEmitter<McTreeNavigationChange>();\n\n    @Output() readonly selectionChange = new EventEmitter<McTreeSelectionChange>();\n\n    @Input()\n    get disabled(): boolean {\n        return this._disabled;\n    }\n\n    set disabled(rawValue: boolean) {\n        const value = toBoolean(rawValue);\n\n        if (this._disabled !== value) {\n            this._disabled = value;\n\n            if (this._disabled) {\n                /* tslint:disable-next-line:no-console */\n                console.log('need disable all options');\n            } else {\n                /* tslint:disable-next-line:no-console */\n                console.log('need enable all options');\n            }\n        }\n    }\n\n    private _disabled: boolean = false;\n\n    @Input()\n    get tabIndex(): number {\n        return this.disabled ? -1 : this._tabIndex;\n    }\n\n    set tabIndex(value: number) {\n        this._tabIndex = value != null ? value : 0;\n    }\n\n    private _tabIndex: number;\n\n    private readonly destroy = new Subject<void>();\n\n    constructor(\n        private elementRef: ElementRef,\n        differs: IterableDiffers,\n        changeDetectorRef: ChangeDetectorRef,\n        @Self() @Optional() public ngControl: NgControl,\n        @Attribute('multiple') multiple: string,\n        @Attribute('auto-select') autoSelect: string,\n        @Attribute('no-unselect') noUnselect: string\n    ) {\n        super(differs, changeDetectorRef);\n\n        if (this.ngControl) {\n            // Note: we provide the value accessor through here, instead of\n            // the `providers` to avoid running into a circular import.\n            this.ngControl.valueAccessor = this;\n        }\n\n        this.multiple = multiple === null ? false : toBoolean(multiple);\n        this.autoSelect = autoSelect === null ? true : toBoolean(autoSelect);\n        this.noUnselectLastSelected = noUnselect === null ? true : toBoolean(noUnselect);\n\n        this.selectionModel = new SelectionModel<any>(this.multiple);\n    }\n\n    ngAfterContentInit(): void {\n        this.keyManager = new FocusKeyManager<McTreeOption>(this.options)\n            .withVerticalOrientation(true)\n            .withHorizontalOrientation(null);\n\n        this.keyManager.change\n            .pipe(takeUntil(this.destroy))\n            .subscribe(() => {\n                if (this.keyManager.activeItem) {\n                    this.emitNavigationEvent(this.keyManager.activeItem);\n                }\n            });\n\n        this.selectionModel.changed\n            .pipe(takeUntil(this.destroy))\n            .subscribe((changeEvent) => {\n                this.onChange(changeEvent.source.selected);\n\n                this.options.notifyOnChanges();\n            });\n\n        this.options.changes\n            .pipe(takeUntil(this.destroy))\n            .subscribe((options) => {\n                options.forEach((option) => {\n                    option.deselect();\n\n                    this.selectionModel.selected.forEach((selectedOption) => {\n                        if (option.value === selectedOption) { option.select(); }\n                    });\n                });\n            });\n    }\n\n    ngOnDestroy() {\n        this.destroy.next();\n        this.destroy.complete();\n    }\n\n    onKeyDown(event: KeyboardEvent) {\n        // tslint:disable-next-line: deprecation\n        const keyCode = event.keyCode;\n\n        switch (keyCode) {\n            case LEFT_ARROW:\n                if (this.keyManager.activeItem) {\n                    this.treeControl.collapse(this.keyManager.activeItem.data);\n                }\n\n                event.preventDefault();\n\n                break;\n            case RIGHT_ARROW:\n                if (this.keyManager.activeItem) {\n                    this.treeControl.expand(this.keyManager.activeItem.data);\n                }\n\n                event.preventDefault();\n\n                break;\n            case SPACE:\n            case ENTER:\n                this.toggleFocusedOption();\n                event.preventDefault();\n\n                break;\n            case HOME:\n                this.keyManager.setFirstItemActive();\n                event.preventDefault();\n\n                break;\n            case END:\n                this.keyManager.setLastItemActive();\n                event.preventDefault();\n\n                break;\n            case PAGE_UP:\n                this.keyManager.setPreviousPageItemActive();\n                event.preventDefault();\n\n                break;\n            case PAGE_DOWN:\n                this.keyManager.setNextPageItemActive();\n                event.preventDefault();\n\n                break;\n            default:\n                this.keyManager.onKeydown(event);\n        }\n    }\n\n    updateScrollSize(): void {\n        if (!this.options.first) { return; }\n\n        this.keyManager.withScrollSize(Math.floor(this.getHeight() / this.options.first.getHeight()));\n    }\n\n    setSelectedOption(option: McTreeOption, $event?: KeyboardEvent) {\n        const withShift = $event ? hasModifierKey($event, 'shiftKey') : false;\n        const withCtrl = $event ? hasModifierKey($event, 'ctrlKey') : false;\n\n        if (this.multiple) {\n            if (!this.canDeselectLast(option)) { return; }\n\n            option.toggle();\n            this.emitChangeEvent(option);\n        } else if (withShift) {\n            const previousIndex = this.keyManager.previousActiveItemIndex;\n            const activeIndex = this.keyManager.activeItemIndex;\n\n            if (previousIndex < activeIndex) {\n                this.options.forEach((item, index) => {\n                    if (index >= previousIndex && index <= activeIndex) { item.setSelected(true); }\n                });\n            } else {\n                this.options.forEach((item, index) => {\n                    if (index >= activeIndex && index <= previousIndex) { item.setSelected(true); }\n                });\n            }\n            this.emitChangeEvent(option);\n        } else if (withCtrl) {\n            if (!this.canDeselectLast(option)) { return; }\n\n            option.toggle();\n            this.emitChangeEvent(option);\n        } else {\n            if (this.autoSelect) {\n                this.options.forEach((item) => item.setSelected(false));\n                option.setSelected(true);\n\n                this.emitChangeEvent(option);\n            }\n        }\n    }\n\n    setFocusedOption(option: McTreeOption): void {\n        this.keyManager.setActiveItem(option);\n    }\n\n    toggleFocusedOption(): void {\n        const focusedOption = this.keyManager.activeItem;\n\n        if (focusedOption) {\n            this.setSelectedOption(focusedOption);\n        }\n    }\n\n    renderNodeChanges(\n        data: McTreeOption[],\n        dataDiffer: IterableDiffer<McTreeOption> = this.dataDiffer,\n        viewContainer: any = this.nodeOutlet.viewContainer,\n        parentData?: McTreeOption\n    ): void {\n        super.renderNodeChanges(data, dataDiffer, viewContainer, parentData);\n\n        const arrayOfInstances = [];\n\n        viewContainer._embeddedViews.forEach((view: ViewData) => {\n            const viewDef = view.def;\n\n            viewDef.nodes.forEach((node: NodeDef) => {\n                if (viewDef.nodeMatchedQueries === node.matchedQueryIds) {\n                    const nodeData: any = view.nodes[node.nodeIndex];\n\n                    arrayOfInstances.push(nodeData.instance as never);\n\n                    setTimeout(() => {\n                        if (!nodeData.instance.changeDetectorRef.destroyed) {\n                            nodeData.instance.changeDetectorRef.detectChanges();\n                        }\n                    });\n                }\n            });\n        });\n\n        if (this.options) {\n            this.options.reset(arrayOfInstances);\n            this.options.notifyOnChanges();\n        }\n\n        this.updateScrollSize();\n\n        this.nodeOutlet.changeDetectorRef.detectChanges();\n    }\n\n    getHeight(): number {\n        const clientRects = this.elementRef.nativeElement.getClientRects();\n\n        if (clientRects.length) {\n            return clientRects[0].height;\n        }\n\n        return 0;\n    }\n\n    emitNavigationEvent(option: McTreeOption): void {\n        this.navigationChange.emit(new McTreeNavigationChange(this, option));\n    }\n\n    emitChangeEvent(option: McTreeOption): void {\n        this.selectionChange.emit(new McTreeNavigationChange(this, option));\n    }\n\n    writeValue(value: any): void {\n        if (this.options) {\n            this.setOptionsFromValues(this.multiple ? value : [value]);\n        }\n    }\n\n    /** `View -> model callback called when value changes` */\n    onChange: (value: any) => void = () => {};\n\n    registerOnChange(fn: (value: any) => void): void {\n        this.onChange = fn;\n    }\n\n    /** `View -> model callback called when select has been touched` */\n    onTouched = () => {};\n\n    registerOnTouched(fn: () => {}): void {\n        this.onTouched = fn;\n    }\n\n    setDisabledState(isDisabled: boolean): void {\n        this._disabled = isDisabled;\n        this.changeDetectorRef.markForCheck();\n        // this.stateChanges.next();\n    }\n\n    private getCorrespondOption(value: any): McTreeOption | undefined {\n        return this.options.find((option: McTreeOption) => {\n            try {\n                // Treat null as a special reset value.\n                return option.value != null && option.value === value;\n            } catch (error) {\n                console.warn(error);\n\n                return false;\n            }\n        });\n    }\n\n    private setOptionsFromValues(values: any[]): void {\n        this.selectionModel.clear();\n\n        values.forEach((value) => {\n            const correspondingOption = this.getCorrespondOption(value);\n\n            this.selectionModel.select(value);\n\n            if (correspondingOption) { correspondingOption.selected = true; }\n        });\n\n        this.options.notifyOnChanges();\n    }\n\n    private canDeselectLast(option: McTreeOption): boolean {\n        return !(this.noUnselectLastSelected && this.selectionModel.selected.length === 1 && option.selected);\n    }\n}\n\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { CdkTreeModule } from '@ptsecurity/cdk/tree';\nimport { McPseudoCheckboxModule } from '@ptsecurity/mosaic/core';\n\nimport { McTreeNodeDef } from './node.directive';\nimport { McTreeNodePadding } from './padding.directive';\nimport { McTreeNodeToggleDirective, McTreeNodeToggleComponent } from './toggle';\nimport { McTreeOption } from './tree-option.component';\nimport { McTreeSelection } from './tree-selection.component';\n\n\nconst MC_TREE_DIRECTIVES = [\n    McTreeSelection,\n    McTreeOption,\n    McTreeNodeDef,\n    McTreeNodePadding,\n    McTreeNodeToggleComponent,\n    McTreeNodeToggleDirective\n];\n\n@NgModule({\n    imports: [CommonModule, CdkTreeModule, McPseudoCheckboxModule],\n    exports: MC_TREE_DIRECTIVES,\n    declarations: MC_TREE_DIRECTIVES\n})\nexport class McTreeModule {}\n","import { CollectionViewer, DataSource } from '@angular/cdk/collections';\nimport { FlatTreeControl, TreeControl } from '@ptsecurity/cdk/tree';\nimport { BehaviorSubject, merge, Observable } from 'rxjs';\nimport { map, take } from 'rxjs/operators';\n\n\n/**\n * Tree flattener to convert a normal type of node to node with children & level information.\n * Transform nested nodes of type `T` to flattened nodes of type `F`.\n *\n * For example, the input data of type `T` is nested, and contains its children data:\n *   SomeNode: {\n *     key: 'Fruits',\n *     children: [\n *       NodeOne: {\n *         key: 'Apple',\n *       },\n *       NodeTwo: {\n *        key: 'Pear',\n *      }\n *    ]\n *  }\n *  After flattener flatten the tree, the structure will become\n *  SomeNode: {\n *    key: 'Fruits',\n *    expandable: true,\n *    level: 1\n *  },\n *  NodeOne: {\n *    key: 'Apple',\n *    expandable: false,\n *    level: 2\n *  },\n *  NodeTwo: {\n *   key: 'Pear',\n *   expandable: false,\n *   level: 2\n * }\n * and the output flattened type is `F` with additional information.\n */\nexport class McTreeFlattener<T, F> {\n    constructor(\n        public transformFunction: (node: T, level: number, parent: F | null) => F,\n        public getLevel: (node: F) => number,\n        public isExpandable: (node: F) => boolean,\n        public getChildren: (node: T) => Observable<T[]> | T[] | undefined | null\n    ) {}\n\n    flattenNode(node: T, level: number, resultNodes: F[], parent: F | null): F[] {\n        const flatNode = this.transformFunction(node, level, parent);\n        resultNodes.push(flatNode);\n\n        if (this.isExpandable(flatNode)) {\n            const childrenNodes = this.getChildren(node);\n\n            if (childrenNodes) {\n                if (Array.isArray(childrenNodes)) {\n                    this.flattenChildren(childrenNodes, level, resultNodes, flatNode);\n                } else {\n                    childrenNodes\n                        .pipe(take(1))\n                        .subscribe((children) => {\n                            this.flattenChildren(children, level, resultNodes, flatNode);\n                        });\n                }\n            }\n        }\n\n        return resultNodes;\n    }\n\n    flattenChildren(children: T[], level: number, resultNodes: F[], parent: F | null): void {\n        children.forEach((child) => {\n            this.flattenNode(child, level + 1, resultNodes, parent);\n        });\n    }\n\n    /**\n     * Flatten a list of node type T to flattened version of node F.\n     * Please note that type T may be nested, and the length of `structuredData` may be different\n     * from that of returned list `F[]`.\n     */\n    flattenNodes(structuredData: T[]): F[] {\n        const resultNodes: F[] = [];\n        structuredData.forEach((node) => this.flattenNode(node, 0, resultNodes, null));\n\n        return resultNodes;\n    }\n\n    /**\n     * Expand flattened node with current expansion status.\n     * The returned list may have different length.\n     */\n    expandFlattenedNodes(nodes: F[], treeControl: TreeControl<F>): F[] {\n        const results: F[] = [];\n        const currentExpand: boolean[] = [];\n        currentExpand[0] = true;\n\n        nodes.forEach((node) => {\n            let expand = true;\n            for (let i = 0; i <= this.getLevel(node); i++) {\n                expand = expand && currentExpand[i];\n            }\n\n            if (expand) { results.push(node); }\n\n            if (this.isExpandable(node)) {\n                currentExpand[this.getLevel(node) + 1] = treeControl.isExpanded(node);\n            }\n        });\n\n        return results;\n    }\n}\n\nenum McTreeDataSourceChangeTypes {\n    Expansion = 'expansion',\n    Filter = 'filter'\n}\n\n/**\n * Data source for flat tree.\n * The data source need to handle expansion/collapsion of the tree node and change the data feed\n * to `McTree`.\n * The nested tree nodes of type `T` are flattened through `MсTreeFlattener`, and converted\n * to type `F` for `McTree` to consume.\n */\nexport class McTreeFlatDataSource<T, F> extends DataSource<F> {\n    flattenedData = new BehaviorSubject<F[]>([]);\n\n    expandedData = new BehaviorSubject<F[]>([]);\n\n    filteredData = new BehaviorSubject<F[]>([]);\n\n    get data() {\n        return this._data.value;\n    }\n\n    set data(value: T[]) {\n        this._data.next(value);\n\n        this.flattenedData.next(this.treeFlattener.flattenNodes(this.data));\n        this.treeControl.dataNodes = this.flattenedData.value;\n    }\n\n    private _data: BehaviorSubject<T[]>;\n\n    constructor(\n        private treeControl: FlatTreeControl<F>,\n        private treeFlattener: McTreeFlattener<T, F>,\n        initialData: T[] = []\n    ) {\n        super();\n\n        this._data = new BehaviorSubject<T[]>(initialData);\n    }\n\n    connect(collectionViewer: CollectionViewer): Observable<F[]> {\n        return merge(\n            collectionViewer.viewChange,\n            this.treeControl.expansionModel.changed\n                .pipe(map((value) => ({ type: McTreeDataSourceChangeTypes.Expansion, value }))),\n            this.treeControl.filterValue\n                .pipe(map((value) => ({ type: McTreeDataSourceChangeTypes.Filter, value }))),\n            this.flattenedData\n        )\n        .pipe(map((changeObj: any): any => {\n            if (changeObj.type === McTreeDataSourceChangeTypes.Filter) {\n                if (changeObj.value && changeObj.value.length > 0) {\n                    return this.filterHandler();\n                } else {\n                    return this.expansionHandler();\n                }\n            }\n\n            return this.expansionHandler();\n        }));\n    }\n\n    filterHandler(): F[] {\n        this.filteredData.next(this.treeControl.filterModel.selected);\n\n        return this.filteredData.value;\n    }\n\n    expansionHandler(): F[] {\n        const expandedNodes = this.treeFlattener.expandFlattenedNodes(this.flattenedData.value, this.treeControl);\n        this.expandedData.next(expandedNodes);\n\n        return this.expandedData.value;\n    }\n\n    disconnect() {\n        // no op\n    }\n}\n\n","import { CollectionViewer, DataSource } from '@angular/cdk/collections';\nimport { BehaviorSubject, merge, Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\n\n/**\n * Data source for nested tree.\n *\n * The data source for nested tree doesn't have to consider node flattener, or the way to expand\n * or collapse. The expansion/collapsion will be handled by TreeControl and each non-leaf node.\n */\nexport class McTreeNestedDataSource<T> extends DataSource<T> {\n\n    get data() {\n        return this._data.value;\n    }\n\n    set data(value: T[]) {\n        this._data.next(value);\n    }\n\n    /* tslint:disable-next-line:naming-convention */\n    private _data = new BehaviorSubject<T[]>([]);\n\n    connect(collectionViewer: CollectionViewer): Observable<T[]> {\n        return merge(...[collectionViewer.viewChange, this._data])\n            .pipe(map(() => this.data));\n    }\n\n    disconnect() {\n        // no op\n    }\n}\n\n"],"names":["__extends","d","b","__","this","constructor","extendStatics","prototype","Object","create","setPrototypeOf","__proto__","Array","p","hasOwnProperty","McTreeNodeDef","_super","tslib_1.__extends","type","Directive","args","selector","inputs","providers","provide","CdkTreeNodeDef","useExisting","data","Input","McTreeNodePadding","_this","apply","arguments","baseLeftPadding","_indent","iconWidth","defineProperty","withIcon","paddingIndent","nodeLevel","treeNode","tree","treeControl","getLevel","level","leftPadding","ngOnInit","isExpandable","setPadding","CdkTreeNodePadding","indent","McTreeNodeToggleComponent","call","disabled","filterValue","subscribe","value","length","isExpanded","node","Component","template","host","class","(click)","[class.mc-disabled]","[class.mc-opened]","encapsulation","ViewEncapsulation","None","CdkTreeNodeToggle","CdkTree","CdkTreeNode","McTreeNodeToggleDirective","MC_TREE_OPTION_PARENT_COMPONENT","InjectionToken","McTreeOptionChange","source","isUserInput","uniqueIdCounter","McTreeOption","elementRef","changeDetectorRef","parent","_disabled","onSelectionChange","EventEmitter","_selected","_id","hasFocus","_value","newValue","toBoolean","isSelected","setSelected","multiple","toggle","selected","selectionModel","select","deselect","markForCheck","handleFocus","setFocusedOption","handleBlur","focus","element","getHostElement","getHeight","clientRects","nativeElement","getClientRects","height","textContent","trim","selectViaInteraction","$event","emitSelectionChangeEvent","setSelectedOption","emit","getTabIndex","exportAs","[attr.id]","[attr.tabindex]","[attr.disabled]","[class.mc-selected]","[class.mc-focused]","(focus)","(blur)","changeDetection","ChangeDetectionStrategy","OnPush","ElementRef","ChangeDetectorRef","undefined","decorators","Optional","Inject","Output","McTreeNavigationChange","option","McTreeSelectionChange","McTreeSelection","differs","ngControl","autoSelect","noUnselect","navigationChange","selectionChange","destroy","Subject","onChange","onTouched","valueAccessor","noUnselectLastSelected","SelectionModel","rawValue","console","log","_tabIndex","ngAfterContentInit","keyManager","FocusKeyManager","options","withVerticalOrientation","withHorizontalOrientation","change","pipe","takeUntil","activeItem","emitNavigationEvent","changed","changeEvent","notifyOnChanges","changes","forEach","selectedOption","ngOnDestroy","next","complete","onKeyDown","event","keyCode","LEFT_ARROW","collapse","preventDefault","RIGHT_ARROW","expand","SPACE","ENTER","toggleFocusedOption","HOME","setFirstItemActive","END","setLastItemActive","PAGE_UP","setPreviousPageItemActive","PAGE_DOWN","setNextPageItemActive","onKeydown","updateScrollSize","first","withScrollSize","Math","floor","withShift","hasModifierKey","withCtrl","canDeselectLast","emitChangeEvent","previousIndex_1","previousActiveItemIndex","activeIndex_1","activeItemIndex","item","index","setActiveItem","focusedOption","renderNodeChanges","dataDiffer","viewContainer","parentData","nodeOutlet","arrayOfInstances","_embeddedViews","view","viewDef","def","nodes","nodeMatchedQueries","matchedQueryIds","nodeData_1","nodeIndex","push","setTimeout","instance","destroyed","detectChanges","reset","writeValue","setOptionsFromValues","registerOnChange","fn","registerOnTouched","setDisabledState","isDisabled","getCorrespondOption","find","error","warn","values","clear","correspondingOption","(keydown)","(window:resize)","styles","IterableDiffers","NgControl","Self","String","Attribute","ViewChild","CdkTreeNodeOutlet","static","ContentChildren","tabIndex","MC_TREE_DIRECTIVES","McTreeModule","NgModule","imports","CommonModule","CdkTreeModule","McPseudoCheckboxModule","exports","declarations","McTreeFlattener","transformFunction","getChildren","flattenNode","resultNodes","flatNode","childrenNodes","isArray","flattenChildren","take","children","child","flattenNodes","structuredData","expandFlattenedNodes","results","currentExpand","i","Expansion","Filter","McTreeFlatDataSource","treeFlattener","initialData","flattenedData","BehaviorSubject","expandedData","filteredData","_data","dataNodes","connect","collectionViewer","merge","viewChange","expansionModel","map","McTreeDataSourceChangeTypes","changeObj","filterHandler","expansionHandler","filterModel","expandedNodes","disconnect","DataSource","McTreeNestedDataSource"],"mappings":"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"}