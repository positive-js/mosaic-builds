{"version":3,"file":"mosaic-tree.umd.min.js","sources":["../../node_modules/tslib/tslib.es6.js","../../src/lib/tree/node.ts","../../src/lib/tree/padding.ts","../../src/lib/tree/tree-selection.ts","../../src/lib/tree/tree.module.ts","../../src/lib/tree/data-source/flat-data-source.ts","../../src/lib/tree/data-source/nested-data-source.ts"],"sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","import { Directive, Input } from '@angular/core';\n\nimport { CdkTreeNodeDef } from '@ptsecurity/cdk/tree';\n\n\n@Directive({\n    selector: '[mcTreeNodeDef]',\n    inputs: ['when: mcTreeNodeDefWhen'],\n    providers: [{ provide: CdkTreeNodeDef, useExisting: McTreeNodeDef }]\n})\nexport class McTreeNodeDef<T> extends CdkTreeNodeDef<T> {\n    @Input('mcTreeNode') data: T;\n}\n","import { Directive, Input, OnInit } from '@angular/core';\nimport { CdkTreeNodePadding } from '@ptsecurity/cdk/tree';\n\n\n@Directive({\n    selector: '[mcTreeNodePadding]',\n    providers: [{ provide: CdkTreeNodePadding, useExisting: McTreeNodePadding }]\n})\nexport class McTreeNodePadding<T> extends CdkTreeNodePadding<T> implements OnInit {\n    get leftPadding(): number {\n        return (this._withIcon ? 0 : this._iconWidth) + this._baseLeftPadding;\n    }\n\n    _baseLeftPadding: number = 6;\n    _iconWidth: number = 20;\n    _indent: number = 16;\n\n    @Input('mcTreeNodePadding') level: number;\n\n    @Input('mcTreeNodePaddingIndent') indent: number;\n\n    _withIcon: boolean;\n\n    _paddingIndent(): string | null {\n        const nodeLevel = (this._treeNode.data && this._tree.treeControl.getLevel)\n            ? this._tree.treeControl.getLevel(this._treeNode.data)\n            : null;\n\n        const level = this._level || nodeLevel;\n\n        return level ? `${(level * this._indent) + this.leftPadding}px` : `${this._baseLeftPadding}px`;\n    }\n\n    ngOnInit(): void {\n        this._withIcon = this._tree.treeControl.isExpandable(this._treeNode.data);\n        this._setPadding();\n    }\n}\n","import {\n    AfterContentInit,\n    Attribute,\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component, ContentChildren, EventEmitter, forwardRef, Input, IterableDiffer,\n    IterableDiffers, Output, QueryList,\n    ViewChild,\n    ViewEncapsulation,\n    Directive, ElementRef, Inject\n} from '@angular/core';\nimport { NodeDef, ViewData } from '@angular/core/src/view';\n\nimport { SelectionModel } from '@ptsecurity/cdk/collections';\nimport { CdkTreeNode, CdkTree, CdkTreeNodeOutlet } from '@ptsecurity/cdk/tree';\n\nimport { CanDisable, HasTabIndex, mixinDisabled, mixinTabIndex, toBoolean } from '@ptsecurity/mosaic/core';\n\nimport { FocusKeyManager } from '@ptsecurity/cdk/a11y';\n\nimport { END, ENTER, HOME, LEFT_ARROW, PAGE_DOWN, PAGE_UP, RIGHT_ARROW, SPACE } from '@ptsecurity/cdk/keycodes';\n\n\n/**\n * Wrapper for the CdkTree node with Material design styles.\n */\n@Directive({\n    exportAs: 'mcTreeNodeOption',\n    selector: 'mc-tree-node-option',\n    host: {\n        tabindex: '-1',\n        '[class.mc-selected]': 'selected',\n        '[class.mc-focused]': '_hasFocus',\n        '[attr.aria-expanded]': 'isExpanded',\n        '[attr.aria-level]': 'role === \"treeitem\" ? level : null',\n        class: 'mc-tree-node',\n\n        '(focus)': '_handleFocus()',\n        '(blur)': '_handleBlur()',\n\n        '(click)': '_handleClick()'\n    },\n    providers: [\n        { provide: CdkTreeNode, useExisting: McTreeNodeOption }\n    ]\n})\nexport class McTreeNodeOption<T> extends CdkTreeNode<T> implements CanDisable {\n    @Input() role: 'treeitem' | 'group' = 'treeitem';\n\n    @Input()\n    get disabled() {\n        return this._disabled;\n    }\n\n    set disabled(value: any) {\n        const newValue = toBoolean(value);\n\n        if (newValue !== this._disabled) {\n            this._disabled = newValue;\n        }\n    }\n\n    @Input()\n    get selected(): boolean {\n        return this.treeSelection.selectedOptions && this.treeSelection.selectedOptions.isSelected(this) || false;\n    }\n\n    set selected(value: boolean) {\n        const isSelected = toBoolean(value);\n\n        if (isSelected !== this._selected) {\n            this.setSelected(isSelected);\n\n            // this.treeSelection._reportValueChange();\n        }\n    }\n\n    private _hasFocus: boolean = false;\n\n    private _disabled: boolean = false;\n    private _selected: boolean = false;\n\n    constructor(\n        protected _elementRef: ElementRef,\n        @Inject(forwardRef(() => McTreeSelection))\n        protected treeSelection: McTreeSelection<T>\n    ) {\n        super(_elementRef, treeSelection);\n    }\n\n    focus(): void {\n        this._elementRef.nativeElement.focus();\n\n        this.treeSelection.setFocusedOption(this);\n    }\n\n    toggle(): void {\n        this.selected = !this.selected;\n    }\n\n    setSelected(selected: boolean) {\n        if (this._selected === selected || !this.treeSelection.selectedOptions) { return; }\n\n        this._selected = selected;\n\n        if (selected) {\n            this.treeSelection.selectedOptions.select(this);\n        } else {\n            this.treeSelection.selectedOptions.deselect(this);\n        }\n\n        // this._changeDetector.markForCheck();\n    }\n\n    _getHeight(): number {\n        return this._elementRef.nativeElement.getClientRects()[0].height;\n    }\n\n    _handleFocus(): void {\n        if (this.disabled || this._hasFocus) { return; }\n\n        this._hasFocus = true;\n    }\n\n    _handleBlur(): void {\n        this._hasFocus = false;\n    }\n\n    _handleClick(): void {\n        if (this.disabled) { return; }\n\n        this.treeSelection.setFocusedOption(this);\n    }\n}\n\nexport const _McTreeSelectionBase = mixinTabIndex(mixinDisabled(CdkTree));\n\nexport class McTreeNavigationChange {\n    constructor(\n        public source: McTreeSelection<any>,\n        public option: McTreeNodeOption<any>\n    ) {}\n}\n\nexport class McTreeSelectionChange {\n    constructor(\n        public source: McTreeSelection<any>,\n        public option: McTreeNodeOption<any>\n    ) {}\n}\n\n@Component({\n    exportAs: 'mcTreeSelection',\n    selector: 'mc-tree-selection',\n    template: `<ng-container cdkTreeNodeOutlet></ng-container>`,\n    host: {\n        '[tabIndex]': 'tabIndex',\n        class: 'mc-tree-selection',\n        role: 'tree-selection',\n        '(keydown)': '_onKeyDown($event)',\n        '(window:resize)': 'updateScrollSize()'\n    },\n    styleUrls: ['./tree.css'],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    providers: [{ provide: CdkTree, useExisting: McTreeSelection }]\n})\nexport class McTreeSelection<T> extends _McTreeSelectionBase<T>\n    implements AfterContentInit, CanDisable, HasTabIndex {\n    // Outlets within the tree's template where the dataNodes will be inserted.\n    @ViewChild(CdkTreeNodeOutlet) _nodeOutlet: CdkTreeNodeOutlet;\n\n    @ContentChildren(forwardRef(() => McTreeNodeOption)) options: QueryList<McTreeNodeOption<T>>;\n\n    _keyManager: FocusKeyManager<McTreeNodeOption<T>>;\n\n    selectedOptions: SelectionModel<McTreeNodeOption<T>>;\n\n    _disabled: boolean = false;\n    tabIndex: number;\n    multiple: boolean;\n    autoSelect: boolean;\n    noUnselect: boolean;\n\n    // todo temporary solution\n    withShift: boolean;\n    withCtrl: boolean;\n\n    @Input()\n    get disabled(): boolean {\n        return this._disabled;\n    }\n\n    set disabled(rawValue: boolean) {\n        const value = toBoolean(rawValue);\n\n        if (this._disabled !== value) {\n            this._disabled = value;\n\n            if (this._disabled) {\n                console.log('need disable all options');\n            } else {\n                console.log('need enable all options');\n            }\n        }\n    }\n\n    @Output() readonly navigationChange = new EventEmitter<McTreeNavigationChange>();\n\n    @Output() readonly selectionChange = new EventEmitter<McTreeSelectionChange>();\n\n    constructor(\n        private _elementRef: ElementRef,\n        _differs: IterableDiffers,\n        _changeDetectorRef: ChangeDetectorRef,\n        @Attribute('tabindex') tabIndex: string,\n        @Attribute('multiple') multiple: string,\n        @Attribute('auto-select') autoSelect: string,\n        @Attribute('no-unselect') noUnselect: string\n    ) {\n        super(_differs, _changeDetectorRef);\n\n        this.tabIndex = parseInt(tabIndex) || 0;\n\n        this.multiple = multiple === null ? true : toBoolean(multiple);\n        this.autoSelect = autoSelect === null ? true : toBoolean(autoSelect);\n        this.noUnselect = noUnselect === null ? true : toBoolean(noUnselect);\n\n        this.selectedOptions = new SelectionModel<McTreeNodeOption<T>>(this.multiple);\n    }\n\n    _onKeyDown(event: KeyboardEvent) {\n        const keyCode = event.keyCode;\n        this.withShift = event.shiftKey;\n        this.withCtrl = event.ctrlKey;\n\n        switch (keyCode) {\n            case LEFT_ARROW:\n                if (this._keyManager.activeItem) {\n                    this.treeControl.collapse(this._keyManager.activeItem.data);\n                }\n\n                event.preventDefault();\n\n                break;\n            case RIGHT_ARROW:\n                if (this._keyManager.activeItem) {\n                    this.treeControl.expand(this._keyManager.activeItem.data);\n                }\n\n                event.preventDefault();\n\n                break;\n            case SPACE:\n            case ENTER:\n                this.toggleFocusedOption();\n                event.preventDefault();\n\n                break;\n            case HOME:\n                this._keyManager.setFirstItemActive();\n                event.preventDefault();\n\n                break;\n            case END:\n                this._keyManager.setLastItemActive();\n                event.preventDefault();\n\n                break;\n            case PAGE_UP:\n                this._keyManager.setPreviousPageItemActive();\n                event.preventDefault();\n\n                break;\n            case PAGE_DOWN:\n                this._keyManager.setNextPageItemActive();\n                event.preventDefault();\n\n                break;\n            default:\n                this._keyManager.onKeydown(event);\n        }\n    }\n\n    ngAfterContentInit(): void {\n        this._keyManager = new FocusKeyManager<McTreeNodeOption<T>>(this.options)\n            .withTypeAhead()\n            .withVerticalOrientation(true)\n            .withHorizontalOrientation(null);\n    }\n\n    updateScrollSize(): void {\n        if (!this.options.first) { return; }\n\n        this._keyManager.withScrollSize(Math.floor(this._getHeight() / this.options.first._getHeight()));\n    }\n\n    setFocusedOption(option: McTreeNodeOption<T>): void {\n        this._keyManager.updateActiveItem(option);\n\n        if (this.withShift && this.multiple) {\n            const previousIndex = this._keyManager.previousActiveItemIndex;\n            const activeIndex = this._keyManager.activeItemIndex;\n\n            if (previousIndex < activeIndex) {\n                this.options.forEach((item, index) => {\n                    if (index >= previousIndex && index <= activeIndex) { item.setSelected(true); }\n                });\n            } else {\n                this.options.forEach((item, index) => {\n                    if (index >= activeIndex && index <= previousIndex) { item.setSelected(true); }\n                });\n            }\n\n            this.withShift = false;\n        } else if (this.withCtrl) {\n            this.withCtrl = false;\n\n            if (!this._canDeselectLast(option)) { return; }\n\n            option.toggle();\n        } else {\n            if (this.autoSelect) {\n                this.options.forEach((item) => item.setSelected(false));\n                option.setSelected(true);\n            }\n        }\n\n        this._emitNavigationEvent(option);\n    }\n\n    // Toggles the selected state of the currently focused option.\n    toggleFocusedOption(): void {\n        const focusedIndex = this._keyManager.activeItemIndex;\n\n        if (focusedIndex != null && this._isValidIndex(focusedIndex)) {\n            const focusedOption: McTreeNodeOption<T> = this.options.toArray()[focusedIndex];\n\n            if (focusedOption && this._canDeselectLast(focusedOption)) {\n                focusedOption.toggle();\n\n                // Emit a change event because the focused option changed its state through user interaction.\n                this._emitChangeEvent(focusedOption);\n            }\n        }\n    }\n\n    renderNodeChanges(\n        data: T[],\n        dataDiffer: IterableDiffer<T> = this._dataDiffer,\n        viewContainer: any = this._nodeOutlet.viewContainer,\n        parentData?: T\n    ) {\n        super.renderNodeChanges(data, dataDiffer, viewContainer, parentData);\n\n        const arrayOfInstances = [];\n\n        viewContainer._embeddedViews.forEach((view: ViewData) => {\n            const viewDef = view.def;\n\n            viewDef.nodes.forEach((node: NodeDef) => {\n                if (viewDef.nodeMatchedQueries === node.matchedQueryIds) {\n                    const nodeData: any = view.nodes[node.nodeIndex];\n\n                    arrayOfInstances.push(nodeData.instance as never);\n                }\n            });\n        });\n\n        if (this.options) {\n            this.options.reset(arrayOfInstances);\n            this.options.notifyOnChanges();\n        }\n\n        this.updateScrollSize();\n    }\n\n    _getHeight(): number {\n        return this._elementRef.nativeElement.getClientRects()[0].height;\n    }\n\n    _emitNavigationEvent(option: McTreeNodeOption<T>): void {\n        this.navigationChange.emit(new McTreeNavigationChange(this, option));\n    }\n\n    _emitChangeEvent(option: McTreeNodeOption<T>): void {\n        this.selectionChange.emit(new McTreeNavigationChange(this, option));\n    }\n\n    /**\n     * Utility to ensure all indexes are valid.\n     * @param index The index to be checked.\n     * @returns True if the index is valid for our list of options.\n     */\n    private _isValidIndex(index: number): boolean {\n        return index >= 0 && index < this.options.length;\n    }\n\n    private _canDeselectLast(option: McTreeNodeOption<T>): boolean {\n        return !(this.noUnselect && this.selectedOptions.selected.length === 1 && option.selected);\n    }\n}\n\n","import { NgModule } from '@angular/core';\n\nimport { CommonModule } from '@angular/common';\nimport { CdkTreeModule } from '@ptsecurity/cdk/tree';\n\nimport { McTreeNodeDef } from './node';\nimport { McTreeNodePadding } from './padding';\nimport { McTreeSelection, McTreeNodeOption } from './tree-selection';\n\n\nconst MC_TREE_DIRECTIVES = [\n    McTreeNodeDef,\n    McTreeNodePadding,\n    McTreeSelection,\n    McTreeNodeOption\n];\n\n@NgModule({\n    imports: [CommonModule, CdkTreeModule],\n    exports: MC_TREE_DIRECTIVES,\n    declarations: MC_TREE_DIRECTIVES\n})\nexport class McTreeModule {}\n","import { ICollectionViewer, DataSource } from '@ptsecurity/cdk/collections';\nimport { FlatTreeControl, ITreeControl } from '@ptsecurity/cdk/tree';\nimport { BehaviorSubject, merge, Observable } from 'rxjs';\nimport { map, take } from 'rxjs/operators';\n\n\n/**\n * Tree flattener to convert a normal type of node to node with children & level information.\n * Transform nested nodes of type `T` to flattened nodes of type `F`.\n *\n * For example, the input data of type `T` is nested, and contains its children data:\n *   SomeNode: {\n *     key: 'Fruits',\n *     children: [\n *       NodeOne: {\n *         key: 'Apple',\n *       },\n *       NodeTwo: {\n *        key: 'Pear',\n *      }\n *    ]\n *  }\n *  After flattener flatten the tree, the structure will become\n *  SomeNode: {\n *    key: 'Fruits',\n *    expandable: true,\n *    level: 1\n *  },\n *  NodeOne: {\n *    key: 'Apple',\n *    expandable: false,\n *    level: 2\n *  },\n *  NodeTwo: {\n *   key: 'Pear',\n *   expandable: false,\n *   level: 2\n * }\n * and the output flattened type is `F` with additional information.\n */\nexport class McTreeFlattener<T, F> {\n\n    constructor(public transformFunction: (node: T, level: number) => F,\n                public getLevel: (node: F) => number,\n                public isExpandable: (node: F) => boolean,\n                public getChildren: (node: T) => Observable<T[]>) {\n    }\n\n    _flattenNode(node: T, level: number,\n                 resultNodes: F[], parentMap: boolean[]): F[] {\n        const flatNode = this.transformFunction(node, level);\n        resultNodes.push(flatNode);\n\n        if (this.isExpandable(flatNode)) {\n            this.getChildren(node).pipe(take(1)).subscribe((children) => {\n                children.forEach((child, index) => {\n                    const childParentMap: boolean[] = parentMap.slice();\n                    childParentMap.push(index !== children.length - 1);\n                    this._flattenNode(child, level + 1, resultNodes, childParentMap);\n                });\n            });\n        }\n\n        return resultNodes;\n    }\n\n    /**\n     * Flatten a list of node type T to flattened version of node F.\n     * Please note that type T may be nested, and the length of `structuredData` may be different\n     * from that of returned list `F[]`.\n     */\n    flattenNodes(structuredData: T[]): F[] {\n        const resultNodes: F[] = [];\n        structuredData.forEach((node) => this._flattenNode(node, 0, resultNodes, []));\n\n        return resultNodes;\n    }\n\n    /**\n     * Expand flattened node with current expansion status.\n     * The returned list may have different length.\n     */\n    expandFlattenedNodes(nodes: F[], treeControl: ITreeControl<F>): F[] {\n        const results: F[] = [];\n        const currentExpand: boolean[] = [];\n        currentExpand[0] = true;\n\n        nodes.forEach((node) => {\n            let expand = true;\n            for (let i = 0; i <= this.getLevel(node); i++) {\n                expand = expand && currentExpand[i];\n            }\n\n            if (expand) { results.push(node); }\n\n            if (this.isExpandable(node)) {\n                currentExpand[this.getLevel(node) + 1] = treeControl.isExpanded(node);\n            }\n        });\n\n        return results;\n    }\n}\n\n\n/**\n * Data source for flat tree.\n * The data source need to handle expansion/collapsion of the tree node and change the data feed\n * to `McTree`.\n * The nested tree nodes of type `T` are flattened through `MсTreeFlattener`, and converted\n * to type `F` for `McTree` to consume.\n */\nexport class McTreeFlatDataSource<T, F> extends DataSource<F> {\n    _flattenedData = new BehaviorSubject<F[]>([]);\n\n    _expandedData = new BehaviorSubject<F[]>([]);\n\n    _data: BehaviorSubject<T[]>;\n\n    get data() {\n        return this._data.value;\n    }\n\n    set data(value: T[]) {\n        this._data.next(value);\n        this._flattenedData.next(this.treeFlattener.flattenNodes(this.data));\n        this.treeControl.dataNodes = this._flattenedData.value;\n    }\n\n    constructor(private treeControl: FlatTreeControl<F>,\n                private treeFlattener: McTreeFlattener<T, F>,\n                initialData: T[] = []) {\n        super();\n        this._data = new BehaviorSubject<T[]>(initialData);\n    }\n\n    connect(collectionViewer: ICollectionViewer): Observable<F[]> {\n        const changes = [\n            collectionViewer.viewChange,\n            this.treeControl.expansionModel.onChange!,\n            this._flattenedData\n        ];\n\n        return merge(...changes).pipe(map(() => {\n            this._expandedData.next(\n                this.treeFlattener.expandFlattenedNodes(this._flattenedData.value, this.treeControl));\n\n            return this._expandedData.value;\n        }));\n    }\n\n    disconnect() {\n        // no op\n    }\n}\n\n","import { ICollectionViewer, DataSource } from '@ptsecurity/cdk/collections';\nimport { BehaviorSubject, merge, Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\n\n/**\n * Data source for nested tree.\n *\n * The data source for nested tree doesn't have to consider node flattener, or the way to expand\n * or collapse. The expansion/collapsion will be handled by ITreeControl and each non-leaf node.\n */\nexport class McTreeNestedDataSource<T> extends DataSource<T> {\n    _data = new BehaviorSubject<T[]>([]);\n\n    /**\n     * Data for the nested tree\n     */\n    get data() {\n        return this._data.value;\n    }\n\n    set data(value: T[]) {\n        this._data.next(value);\n    }\n\n    connect(collectionViewer: ICollectionViewer): Observable<T[]> {\n        return merge(...[collectionViewer.viewChange, this._data])\n            .pipe(map(() => this.data));\n    }\n\n    disconnect() {\n        // no op\n    }\n}\n\n"],"names":["__extends","d","b","__","this","constructor","extendStatics","prototype","Object","create","__decorate","decorators","target","key","desc","c","arguments","length","r","getOwnPropertyDescriptor","Reflect","decorate","i","defineProperty","__param","paramIndex","decorator","__metadata","metadataKey","metadataValue","metadata","setPrototypeOf","__proto__","Array","p","hasOwnProperty","McTreeNodeDef","_super","tslib_1.__extends","McTreeNodeDef_1","tslib_1.__decorate","Input","Directive","selector","inputs","providers","provide","CdkTreeNodeDef","useExisting","McTreeNodePadding","_this","apply","_baseLeftPadding","_iconWidth","_indent","McTreeNodePadding_1","get","_withIcon","_paddingIndent","nodeLevel","_treeNode","data","_tree","treeControl","getLevel","level","_level","leftPadding","ngOnInit","isExpandable","_setPadding","CdkTreeNodePadding","McTreeNodeOption","_elementRef","treeSelection","call","role","_hasFocus","_disabled","_selected","McTreeNodeOption_1","set","value","newValue","toBoolean","selectedOptions","isSelected","setSelected","focus","nativeElement","setFocusedOption","toggle","selected","select","deselect","_getHeight","getClientRects","height","_handleFocus","disabled","_handleBlur","_handleClick","exportAs","host","tabindex","[class.mc-selected]","[class.mc-focused]","[attr.aria-expanded]","[attr.aria-level]","class","(focus)","(blur)","(click)","CdkTreeNode","tslib_1.__param","Inject","forwardRef","McTreeSelection","tslib_1.__metadata","ElementRef","_McTreeSelectionBase","mixinTabIndex","mixinDisabled","CdkTree","McTreeNavigationChange","source","option","McTreeSelectionChange","_differs","_changeDetectorRef","tabIndex","multiple","autoSelect","noUnselect","navigationChange","EventEmitter","selectionChange","parseInt","SelectionModel","McTreeSelection_1","rawValue","console","log","_onKeyDown","event","keyCode","withShift","shiftKey","withCtrl","ctrlKey","LEFT_ARROW","_keyManager","activeItem","collapse","preventDefault","RIGHT_ARROW","expand","SPACE","ENTER","toggleFocusedOption","HOME","setFirstItemActive","END","setLastItemActive","PAGE_UP","setPreviousPageItemActive","PAGE_DOWN","setNextPageItemActive","onKeydown","ngAfterContentInit","FocusKeyManager","options","withTypeAhead","withVerticalOrientation","withHorizontalOrientation","updateScrollSize","first","withScrollSize","Math","floor","updateActiveItem","previousIndex_1","previousActiveItemIndex","activeIndex_1","activeItemIndex","forEach","item","index","_canDeselectLast","_emitNavigationEvent","focusedIndex","_isValidIndex","focusedOption","toArray","_emitChangeEvent","renderNodeChanges","dataDiffer","viewContainer","parentData","_dataDiffer","_nodeOutlet","arrayOfInstances","_embeddedViews","view","viewDef","def","nodes","node","nodeMatchedQueries","matchedQueryIds","nodeData","nodeIndex","push","instance","reset","notifyOnChanges","emit","ViewChild","CdkTreeNodeOutlet","ContentChildren","QueryList","Output","Component","template","[tabIndex]","(keydown)","(window:resize)","styles","encapsulation","ViewEncapsulation","None","changeDetection","ChangeDetectionStrategy","OnPush","Attribute","IterableDiffers","ChangeDetectorRef","String","MC_TREE_DIRECTIVES","McTreeModule","NgModule","imports","CommonModule","CdkTreeModule","exports","declarations","McTreeFlattener","transformFunction","getChildren","_flattenNode","resultNodes","parentMap","flatNode","pipe","take","subscribe","children","child","childParentMap","slice","flattenNodes","structuredData","expandFlattenedNodes","results","currentExpand","isExpanded","McTreeFlatDataSource","treeFlattener","initialData","_flattenedData","BehaviorSubject","_expandedData","_data","next","dataNodes","connect","collectionViewer","changes","viewChange","expansionModel","onChange","merge","map","disconnect","DataSource","McTreeNestedDataSource"],"mappings":"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"}