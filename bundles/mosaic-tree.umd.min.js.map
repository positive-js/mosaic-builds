{"version":3,"file":"mosaic-tree.umd.min.js","sources":["../../node_modules/tslib/tslib.es6.js","../../packages/mosaic/tree/node.directive.ts","../../packages/mosaic/tree/padding.directive.ts","../../packages/mosaic/tree/toggle.ts","../../packages/mosaic/tree/tree-option.component.ts","../../packages/mosaic/tree/tree-selection.component.ts","../../packages/mosaic/tree/tree.module.ts","../../packages/mosaic/tree/data-source/flat-data-source.ts","../../packages/mosaic/tree/data-source/nested-data-source.ts"],"sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","import { Directive, Input } from '@angular/core';\n\nimport { CdkTreeNodeDef } from '@ptsecurity/cdk/tree';\n\n\n@Directive({\n    selector: '[mcTreeNodeDef]',\n    inputs: ['when: mcTreeNodeDefWhen'],\n    providers: [{ provide: CdkTreeNodeDef, useExisting: McTreeNodeDef }]\n})\nexport class McTreeNodeDef<T> extends CdkTreeNodeDef<T> {\n    @Input('mcTreeNode') data: T;\n}\n","import { Directive, Input, OnInit } from '@angular/core';\nimport { CdkTreeNodePadding } from '@ptsecurity/cdk/tree';\n\n\n@Directive({\n    selector: '[mcTreeNodePadding]',\n    providers: [{ provide: CdkTreeNodePadding, useExisting: McTreeNodePadding }]\n})\nexport class McTreeNodePadding<T> extends CdkTreeNodePadding<T> implements OnInit {\n    @Input('mcTreeNodePadding') level: number;\n\n    @Input('mcTreeNodePaddingIndent') indent: number;\n\n    baseLeftPadding: number = 12;\n    /* tslint:disable-next-line:naming-convention */\n    _indent: number = 20;\n\n    withIcon: boolean;\n    iconWidth: number = 20;\n\n    get leftPadding(): number {\n        return (this.withIcon ? 0 : this.iconWidth) + this.baseLeftPadding;\n    }\n\n    paddingIndent(): string | null {\n        const nodeLevel = (this.treeNode.data && this.tree.treeControl.getLevel)\n            ? this.tree.treeControl.getLevel(this.treeNode.data)\n            : null;\n\n        const level = this.level || nodeLevel;\n\n        return level ? `${(level * this._indent) + this.leftPadding}px` : `${this.baseLeftPadding}px`;\n    }\n\n    ngOnInit(): void {\n        this.withIcon = this.tree.treeControl.isExpandable(this.treeNode.data);\n\n        this.setPadding();\n    }\n}\n","import { Component, Directive, Input, ViewEncapsulation } from '@angular/core';\nimport { BaseTreeControl, CdkTree, CdkTreeNode, CdkTreeNodeToggle } from '@ptsecurity/cdk/tree';\n\n\n@Component({\n    selector: 'mc-tree-node-toggle',\n    template: `\n        <i class=\"mc mc-icon mc-angle-down-S_16\"></i>\n    `,\n    host: {\n        class: 'mc-tree-node-toggle',\n        '(click)': 'toggle($event)',\n        '[class.mc-disabled]': 'disabled',\n        '[class.mc-opened]': 'iconState'\n    },\n    encapsulation: ViewEncapsulation.None,\n    providers: [{ provide: CdkTreeNodeToggle, useExisting: McTreeNodeToggleComponent }]\n})\nexport class McTreeNodeToggleComponent<T> extends CdkTreeNodeToggle<T> {\n    disabled: boolean = false;\n\n    @Input() node: T;\n\n    get iconState(): any {\n        return this.disabled || this.tree.treeControl.isExpanded(this.node);\n    }\n\n    constructor(protected tree: CdkTree<T>, protected treeNode: CdkTreeNode<T>) {\n        super(tree, treeNode);\n\n        // todo может пересмотреть, как то не очень\n        (this.tree.treeControl as BaseTreeControl<T>).filterValue\n            .subscribe((value: string) => { this.disabled = value.length > 0; });\n    }\n}\n\n@Directive({\n    selector: '[mcTreeNodeToggle]',\n    host: {\n        '(click)': 'toggle($event)',\n        '[class.mc-disabled]': 'disabled'\n    },\n    providers: [{ provide: CdkTreeNodeToggle, useExisting: McTreeNodeToggleDirective }]\n})\nexport class McTreeNodeToggleDirective<T> extends CdkTreeNodeToggle<T> {\n    disabled: boolean = false;\n\n    constructor(protected tree: CdkTree<T>, protected treeNode: CdkTreeNode<T>) {\n        super(tree, treeNode);\n\n        // todo может пересмотреть, как то не очень\n        (this.tree.treeControl as BaseTreeControl<T>).filterValue\n            .subscribe((value: string) => { this.disabled = value.length > 0; });\n    }\n}\n","import { SelectionModel } from '@angular/cdk/collections';\nimport {\n    ChangeDetectorRef,\n    Component,\n    EventEmitter,\n    Input,\n    Output,\n    ElementRef,\n    Inject,\n    Optional,\n    InjectionToken, ChangeDetectionStrategy, ViewEncapsulation, OnInit, OnDestroy\n} from '@angular/core';\nimport { FocusMonitor } from '@ptsecurity/cdk/a11y';\nimport { CdkTreeNode } from '@ptsecurity/cdk/tree';\nimport { CanDisable, toBoolean } from '@ptsecurity/mosaic/core';\n\n\n/* tslint:disable-next-line:naming-convention */\nexport interface McTreeOptionParentComponent {\n    multiple: boolean;\n    selectionModel: SelectionModel<any>;\n    setSelectedOption: any;\n    setFocusedOption: any;\n}\n\n/**\n * Injection token used to provide the parent component to options.\n */\nexport const MC_TREE_OPTION_PARENT_COMPONENT =\n    new InjectionToken<McTreeOptionParentComponent>('MC_TREE_OPTION_PARENT_COMPONENT');\n\nexport class McTreeOptionChange {\n    constructor(public source: McTreeOption, public isUserInput = false) {}\n}\n\nlet uniqueIdCounter: number = 0;\n\n@Component({\n    selector: 'mc-tree-option',\n    exportAs: 'mcTreeOption',\n    templateUrl: './tree-option.html',\n    host: {\n        '[attr.id]': 'id',\n        '[attr.tabindex]': 'getTabIndex()',\n\n        '[attr.disabled]': 'disabled || null',\n\n        class: 'mc-tree-option',\n        '[class.mc-selected]': 'selected',\n        '[class.mc-focused]': 'hasFocus',\n\n        '(focus)': 'handleFocus()',\n        '(blur)': 'handleBlur()',\n        '(click)': 'selectViaInteraction($event)'\n    },\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n    providers: [{ provide: CdkTreeNode, useExisting: McTreeOption }]\n})\nexport class McTreeOption extends CdkTreeNode<McTreeOption> implements OnInit, OnDestroy, CanDisable {\n    @Input()\n    get value(): any {\n        return this._value;\n    }\n\n    set value(value: any) {\n        this._value = value;\n    }\n\n    private _value: any;\n\n    @Input()\n    get disabled() {\n        return this._disabled;\n    }\n\n    set disabled(value: any) {\n        const newValue = toBoolean(value);\n\n        if (newValue !== this._disabled) {\n            this._disabled = newValue;\n        }\n    }\n\n    private _disabled: boolean = false;\n\n    @Output() readonly onSelectionChange = new EventEmitter<McTreeOptionChange>();\n\n    get selected(): boolean {\n        return this._selected;\n    }\n\n    set selected(value: boolean) {\n        const isSelected = toBoolean(value);\n\n        if (isSelected !== this._selected) {\n            this.setSelected(isSelected);\n            // this.treeSelection._reportValueChange();\n        }\n    }\n\n    private _selected: boolean = false;\n\n    get id(): string {\n        return this._id;\n    }\n\n    private _id = `mc-tree-option-${uniqueIdCounter++}`;\n\n    get multiple(): boolean {\n        return this.parent.multiple;\n    }\n\n    hasFocus: boolean = false;\n\n    constructor(\n        protected elementRef: ElementRef,\n        protected changeDetectorRef: ChangeDetectorRef,\n        private focusMonitor: FocusMonitor,\n        @Optional() @Inject(MC_TREE_OPTION_PARENT_COMPONENT) private readonly parent: McTreeOptionParentComponent\n    ) {\n        // todo any\n        super(elementRef, parent as any);\n    }\n\n    ngOnInit() {\n        this.focusMonitor.monitor(this.elementRef.nativeElement, false);\n    }\n\n    ngOnDestroy(): void {\n        this.focusMonitor.stopMonitoring(this.elementRef.nativeElement);\n    }\n\n    toggle(): void {\n        this.selected = !this.selected;\n    }\n\n    setSelected(selected: boolean) {\n        if (this._selected === selected || !this.parent.selectionModel) { return; }\n\n        this._selected = selected;\n\n        if (selected) {\n            this.parent.selectionModel.select(this.value);\n        } else {\n            this.parent.selectionModel.deselect(this.value);\n        }\n\n        this.changeDetectorRef.markForCheck();\n    }\n\n    handleFocus() {\n        if (this.disabled || this.hasFocus) { return; }\n\n        this.hasFocus = true;\n\n        if (this.parent.setFocusedOption) {\n            this.parent.setFocusedOption(this);\n        }\n    }\n\n    handleBlur() {\n        this.hasFocus = false;\n    }\n\n    focus(): void {\n        const element = this.getHostElement();\n\n        if (typeof element.focus === 'function') {\n            element.focus();\n        }\n    }\n\n    getHeight(): number {\n        const clientRects = this.elementRef.nativeElement.getClientRects();\n\n        if (clientRects.length) {\n            return clientRects[0].height;\n        }\n\n        return 0;\n    }\n\n    get viewValue(): string {\n        // TODO: Add input property alternative for node envs.\n        return (this.getHostElement().textContent || '').trim();\n    }\n\n    select(): void {\n        if (!this._selected) {\n            this._selected = true;\n\n            this.changeDetectorRef.markForCheck();\n        }\n    }\n\n    deselect(): void {\n        if (this._selected) {\n            this._selected = false;\n\n            this.changeDetectorRef.markForCheck();\n        }\n    }\n\n    selectViaInteraction($event?: KeyboardEvent): void {\n        if (!this.disabled) {\n            this.changeDetectorRef.markForCheck();\n            this.emitSelectionChangeEvent(true);\n\n            if (this.parent.setSelectedOption) {\n                this.parent.setSelectedOption(this, $event);\n            }\n        }\n    }\n\n    emitSelectionChangeEvent(isUserInput = false): void {\n        this.onSelectionChange.emit(new McTreeOptionChange(this, isUserInput));\n    }\n\n    getHostElement(): HTMLElement {\n        return this.elementRef.nativeElement;\n    }\n\n    getTabIndex(): string {\n        return this.disabled ? '-1' : '0';\n    }\n}\n","import { SelectionModel } from '@angular/cdk/collections';\nimport {\n    AfterContentInit,\n    Attribute,\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    ContentChildren,\n    EventEmitter,\n    Input,\n    IterableDiffer,\n    IterableDiffers,\n    Output,\n    QueryList,\n    ViewChild,\n    ViewEncapsulation,\n    ElementRef,\n    Self,\n    Optional\n} from '@angular/core';\nimport { NodeDef, ViewData } from '@angular/core/esm2015/src/view';\nimport { ControlValueAccessor, NgControl } from '@angular/forms';\nimport { FocusKeyManager } from '@ptsecurity/cdk/a11y';\nimport {\n    END,\n    ENTER,\n    hasModifierKey,\n    HOME,\n    LEFT_ARROW,\n    PAGE_DOWN,\n    PAGE_UP,\n    RIGHT_ARROW,\n    SPACE\n} from '@ptsecurity/cdk/keycodes';\nimport { CdkTree, CdkTreeNodeOutlet } from '@ptsecurity/cdk/tree';\nimport {\n    CanDisable,\n    HasTabIndex,\n    toBoolean\n} from '@ptsecurity/mosaic/core';\nimport { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\n\nimport { MC_TREE_OPTION_PARENT_COMPONENT, McTreeOption } from './tree-option.component';\n\n\nexport class McTreeNavigationChange {\n    constructor(\n        public source: McTreeSelection,\n        public option: McTreeOption\n    ) {}\n}\n\nexport class McTreeSelectionChange {\n    constructor(public source: McTreeSelection, public option: McTreeOption) {}\n}\n\n\n@Component({\n    selector: 'mc-tree-selection',\n    exportAs: 'mcTreeSelection',\n    template: `<ng-container cdkTreeNodeOutlet></ng-container>`,\n    host: {\n        class: 'mc-tree-selection',\n\n        '[attr.tabindex]': 'tabIndex',\n\n        '(keydown)': 'onKeyDown($event)',\n        '(window:resize)': 'updateScrollSize()'\n    },\n    styleUrls: ['./tree.css'],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    providers: [\n        { provide: MC_TREE_OPTION_PARENT_COMPONENT, useExisting: McTreeSelection },\n        { provide: CdkTree, useExisting: McTreeSelection }\n    ]\n})\nexport class McTreeSelection extends CdkTree<any>\n    implements ControlValueAccessor, AfterContentInit, CanDisable, HasTabIndex {\n\n    @ViewChild(CdkTreeNodeOutlet, { static: true }) nodeOutlet: CdkTreeNodeOutlet;\n\n    @ContentChildren(McTreeOption) options: QueryList<McTreeOption>;\n\n    keyManager: FocusKeyManager<McTreeOption>;\n\n    selectionModel: SelectionModel<any>;\n\n    multiple: boolean;\n    autoSelect: boolean;\n    noUnselectLastSelected: boolean;\n\n    @Output() readonly navigationChange = new EventEmitter<McTreeNavigationChange>();\n\n    @Output() readonly selectionChange = new EventEmitter<McTreeSelectionChange>();\n\n    @Input()\n    get disabled(): boolean {\n        return this._disabled;\n    }\n\n    set disabled(rawValue: boolean) {\n        const value = toBoolean(rawValue);\n\n        if (this._disabled !== value) {\n            this._disabled = value;\n\n            if (this._disabled) {\n                /* tslint:disable-next-line:no-console */\n                console.log('need disable all options');\n            } else {\n                /* tslint:disable-next-line:no-console */\n                console.log('need enable all options');\n            }\n        }\n    }\n\n    private _disabled: boolean = false;\n\n    @Input()\n    get tabIndex(): number {\n        return this.disabled ? -1 : this._tabIndex;\n    }\n\n    set tabIndex(value: number) {\n        this._tabIndex = value != null ? value : 0;\n    }\n\n    private _tabIndex: number;\n\n    private readonly destroy = new Subject<void>();\n\n    constructor(\n        private elementRef: ElementRef,\n        differs: IterableDiffers,\n        changeDetectorRef: ChangeDetectorRef,\n        @Self() @Optional() public ngControl: NgControl,\n        @Attribute('multiple') multiple: string,\n        @Attribute('auto-select') autoSelect: string,\n        @Attribute('no-unselect') noUnselect: string\n    ) {\n        super(differs, changeDetectorRef);\n\n        if (this.ngControl) {\n            // Note: we provide the value accessor through here, instead of\n            // the `providers` to avoid running into a circular import.\n            this.ngControl.valueAccessor = this;\n        }\n\n        this.multiple = multiple === null ? false : toBoolean(multiple);\n        this.autoSelect = autoSelect === null ? true : toBoolean(autoSelect);\n        this.noUnselectLastSelected = noUnselect === null ? true : toBoolean(noUnselect);\n\n        this.selectionModel = new SelectionModel<any>(this.multiple);\n    }\n\n    ngAfterContentInit(): void {\n        this.keyManager = new FocusKeyManager<McTreeOption>(this.options)\n            .withVerticalOrientation(true)\n            .withHorizontalOrientation(null);\n\n        this.keyManager.change\n            .pipe(takeUntil(this.destroy))\n            .subscribe(() => {\n                if (this.keyManager.activeItem) {\n                    this.emitNavigationEvent(this.keyManager.activeItem);\n                }\n            });\n\n        this.selectionModel.changed\n            .pipe(takeUntil(this.destroy))\n            .subscribe((changeEvent) => {\n                this.onChange(changeEvent.source.selected);\n\n                this.options.notifyOnChanges();\n            });\n\n        this.options.changes\n            .pipe(takeUntil(this.destroy))\n            .subscribe((options) => {\n                options.forEach((option) => {\n                    option.deselect();\n\n                    this.selectionModel.selected.forEach((selectedOption) => {\n                        if (option.value === selectedOption) { option.select(); }\n                    });\n                });\n            });\n    }\n\n    ngOnDestroy() {\n        this.destroy.next();\n        this.destroy.complete();\n    }\n\n    onKeyDown(event: KeyboardEvent) {\n        // tslint:disable-next-line: deprecation\n        const keyCode = event.keyCode;\n\n        switch (keyCode) {\n            case LEFT_ARROW:\n                if (this.keyManager.activeItem) {\n                    this.treeControl.collapse(this.keyManager.activeItem.data);\n                }\n\n                event.preventDefault();\n\n                break;\n            case RIGHT_ARROW:\n                if (this.keyManager.activeItem) {\n                    this.treeControl.expand(this.keyManager.activeItem.data);\n                }\n\n                event.preventDefault();\n\n                break;\n            case SPACE:\n            case ENTER:\n                this.toggleFocusedOption();\n                event.preventDefault();\n\n                break;\n            case HOME:\n                this.keyManager.setFirstItemActive();\n                event.preventDefault();\n\n                break;\n            case END:\n                this.keyManager.setLastItemActive();\n                event.preventDefault();\n\n                break;\n            case PAGE_UP:\n                this.keyManager.setPreviousPageItemActive();\n                event.preventDefault();\n\n                break;\n            case PAGE_DOWN:\n                this.keyManager.setNextPageItemActive();\n                event.preventDefault();\n\n                break;\n            default:\n                this.keyManager.onKeydown(event);\n        }\n    }\n\n    updateScrollSize(): void {\n        if (!this.options.first) { return; }\n\n        this.keyManager.withScrollSize(Math.floor(this.getHeight() / this.options.first.getHeight()));\n    }\n\n    setSelectedOption(option: McTreeOption, $event?: KeyboardEvent) {\n        const withShift = $event ? hasModifierKey($event, 'shiftKey') : false;\n        const withCtrl = $event ? hasModifierKey($event, 'ctrlKey') : false;\n\n        if (this.multiple) {\n            if (!this.canDeselectLast(option)) { return; }\n\n            option.toggle();\n            this.emitChangeEvent(option);\n        } else if (withShift) {\n            const previousIndex = this.keyManager.previousActiveItemIndex;\n            const activeIndex = this.keyManager.activeItemIndex;\n\n            if (previousIndex < activeIndex) {\n                this.options.forEach((item, index) => {\n                    if (index >= previousIndex && index <= activeIndex) { item.setSelected(true); }\n                });\n            } else {\n                this.options.forEach((item, index) => {\n                    if (index >= activeIndex && index <= previousIndex) { item.setSelected(true); }\n                });\n            }\n            this.emitChangeEvent(option);\n        } else if (withCtrl) {\n            if (!this.canDeselectLast(option)) { return; }\n\n            option.toggle();\n            this.emitChangeEvent(option);\n        } else {\n            if (this.autoSelect) {\n                this.options.forEach((item) => item.setSelected(false));\n                option.setSelected(true);\n\n                this.emitChangeEvent(option);\n            }\n        }\n    }\n\n    setFocusedOption(option: McTreeOption): void {\n        this.keyManager.setActiveItem(option);\n    }\n\n    toggleFocusedOption(): void {\n        const focusedOption = this.keyManager.activeItem;\n\n        if (focusedOption) {\n            this.setSelectedOption(focusedOption);\n        }\n    }\n\n    renderNodeChanges(\n        data: McTreeOption[],\n        dataDiffer: IterableDiffer<McTreeOption> = this.dataDiffer,\n        viewContainer: any = this.nodeOutlet.viewContainer,\n        parentData?: McTreeOption\n    ): void {\n        super.renderNodeChanges(data, dataDiffer, viewContainer, parentData);\n\n        const arrayOfInstances = [];\n        const changeDetectorRefs: any[] = [];\n\n        viewContainer._embeddedViews.forEach((view: ViewData) => {\n            const viewDef = view.def;\n\n            viewDef.nodes.forEach((node: NodeDef) => {\n                if (viewDef.nodeMatchedQueries === node.matchedQueryIds) {\n                    const nodeData: any = view.nodes[node.nodeIndex];\n\n                    arrayOfInstances.push(nodeData.instance as never);\n                    changeDetectorRefs.push(nodeData.instance.changeDetectorRef);\n                }\n            });\n        });\n\n        setTimeout(() => {\n            changeDetectorRefs.forEach((changeDetectorRef) => {\n                if (!changeDetectorRef.destroyed) {\n                    changeDetectorRef.detectChanges();\n                }\n            });\n        });\n\n        if (this.options) {\n            this.options.reset(arrayOfInstances);\n            this.options.notifyOnChanges();\n        }\n\n        this.updateScrollSize();\n\n        this.nodeOutlet.changeDetectorRef.detectChanges();\n    }\n\n    getHeight(): number {\n        const clientRects = this.elementRef.nativeElement.getClientRects();\n\n        if (clientRects.length) {\n            return clientRects[0].height;\n        }\n\n        return 0;\n    }\n\n    emitNavigationEvent(option: McTreeOption): void {\n        this.navigationChange.emit(new McTreeNavigationChange(this, option));\n    }\n\n    emitChangeEvent(option: McTreeOption): void {\n        this.selectionChange.emit(new McTreeNavigationChange(this, option));\n    }\n\n    writeValue(value: any): void {\n        if (this.options) {\n            this.setOptionsFromValues(this.multiple ? value : [value]);\n        }\n    }\n\n    /** `View -> model callback called when value changes` */\n    onChange: (value: any) => void = () => {};\n\n    registerOnChange(fn: (value: any) => void): void {\n        this.onChange = fn;\n    }\n\n    /** `View -> model callback called when select has been touched` */\n    onTouched = () => {};\n\n    registerOnTouched(fn: () => {}): void {\n        this.onTouched = fn;\n    }\n\n    setDisabledState(isDisabled: boolean): void {\n        this._disabled = isDisabled;\n        this.changeDetectorRef.markForCheck();\n        // this.stateChanges.next();\n    }\n\n    private getCorrespondOption(value: any): McTreeOption | undefined {\n        return this.options.find((option: McTreeOption) => {\n            try {\n                // Treat null as a special reset value.\n                return option.value != null && option.value === value;\n            } catch (error) {\n                console.warn(error);\n\n                return false;\n            }\n        });\n    }\n\n    private setOptionsFromValues(values: any[]): void {\n        this.selectionModel.clear();\n\n        values.forEach((value) => {\n            const correspondingOption = this.getCorrespondOption(value);\n\n            this.selectionModel.select(value);\n\n            if (correspondingOption) { correspondingOption.selected = true; }\n        });\n\n        this.options.notifyOnChanges();\n    }\n\n    private canDeselectLast(option: McTreeOption): boolean {\n        return !(this.noUnselectLastSelected && this.selectionModel.selected.length === 1 && option.selected);\n    }\n}\n\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { CdkTreeModule } from '@ptsecurity/cdk/tree';\nimport { McPseudoCheckboxModule } from '@ptsecurity/mosaic/core';\n\nimport { McTreeNodeDef } from './node.directive';\nimport { McTreeNodePadding } from './padding.directive';\nimport { McTreeNodeToggleDirective, McTreeNodeToggleComponent } from './toggle';\nimport { McTreeOption } from './tree-option.component';\nimport { McTreeSelection } from './tree-selection.component';\n\n\nconst MC_TREE_DIRECTIVES = [\n    McTreeSelection,\n    McTreeOption,\n    McTreeNodeDef,\n    McTreeNodePadding,\n    McTreeNodeToggleComponent,\n    McTreeNodeToggleDirective\n];\n\n@NgModule({\n    imports: [CommonModule, CdkTreeModule, McPseudoCheckboxModule],\n    exports: MC_TREE_DIRECTIVES,\n    declarations: MC_TREE_DIRECTIVES\n})\nexport class McTreeModule {}\n","import { CollectionViewer, DataSource } from '@angular/cdk/collections';\nimport { FlatTreeControl, TreeControl } from '@ptsecurity/cdk/tree';\nimport { BehaviorSubject, merge, Observable } from 'rxjs';\nimport { map, take } from 'rxjs/operators';\n\n\n/**\n * Tree flattener to convert a normal type of node to node with children & level information.\n * Transform nested nodes of type `T` to flattened nodes of type `F`.\n *\n * For example, the input data of type `T` is nested, and contains its children data:\n *   SomeNode: {\n *     key: 'Fruits',\n *     children: [\n *       NodeOne: {\n *         key: 'Apple',\n *       },\n *       NodeTwo: {\n *        key: 'Pear',\n *      }\n *    ]\n *  }\n *  After flattener flatten the tree, the structure will become\n *  SomeNode: {\n *    key: 'Fruits',\n *    expandable: true,\n *    level: 1\n *  },\n *  NodeOne: {\n *    key: 'Apple',\n *    expandable: false,\n *    level: 2\n *  },\n *  NodeTwo: {\n *   key: 'Pear',\n *   expandable: false,\n *   level: 2\n * }\n * and the output flattened type is `F` with additional information.\n */\nexport class McTreeFlattener<T, F> {\n    constructor(\n        public transformFunction: (node: T, level: number, parent: F | null) => F,\n        public getLevel: (node: F) => number,\n        public isExpandable: (node: F) => boolean,\n        public getChildren: (node: T) => Observable<T[]> | T[] | undefined | null\n    ) {}\n\n    flattenNode(node: T, level: number, resultNodes: F[], parent: F | null): F[] {\n        const flatNode = this.transformFunction(node, level, parent);\n        resultNodes.push(flatNode);\n\n        if (this.isExpandable(flatNode)) {\n            const childrenNodes = this.getChildren(node);\n\n            if (childrenNodes) {\n                if (Array.isArray(childrenNodes)) {\n                    this.flattenChildren(childrenNodes, level, resultNodes, flatNode);\n                } else {\n                    childrenNodes\n                        .pipe(take(1))\n                        .subscribe((children) => {\n                            this.flattenChildren(children, level, resultNodes, flatNode);\n                        });\n                }\n            }\n        }\n\n        return resultNodes;\n    }\n\n    flattenChildren(children: T[], level: number, resultNodes: F[], parent: F | null): void {\n        children.forEach((child) => {\n            this.flattenNode(child, level + 1, resultNodes, parent);\n        });\n    }\n\n    /**\n     * Flatten a list of node type T to flattened version of node F.\n     * Please note that type T may be nested, and the length of `structuredData` may be different\n     * from that of returned list `F[]`.\n     */\n    flattenNodes(structuredData: T[]): F[] {\n        const resultNodes: F[] = [];\n        structuredData.forEach((node) => this.flattenNode(node, 0, resultNodes, null));\n\n        return resultNodes;\n    }\n\n    /**\n     * Expand flattened node with current expansion status.\n     * The returned list may have different length.\n     */\n    expandFlattenedNodes(nodes: F[], treeControl: TreeControl<F>): F[] {\n        const results: F[] = [];\n        const currentExpand: boolean[] = [];\n        currentExpand[0] = true;\n\n        nodes.forEach((node) => {\n            let expand = true;\n            for (let i = 0; i <= this.getLevel(node); i++) {\n                expand = expand && currentExpand[i];\n            }\n\n            if (expand) { results.push(node); }\n\n            if (this.isExpandable(node)) {\n                currentExpand[this.getLevel(node) + 1] = treeControl.isExpanded(node);\n            }\n        });\n\n        return results;\n    }\n}\n\nenum McTreeDataSourceChangeTypes {\n    Expansion = 'expansion',\n    Filter = 'filter'\n}\n\n/**\n * Data source for flat tree.\n * The data source need to handle expansion/collapsion of the tree node and change the data feed\n * to `McTree`.\n * The nested tree nodes of type `T` are flattened through `MсTreeFlattener`, and converted\n * to type `F` for `McTree` to consume.\n */\nexport class McTreeFlatDataSource<T, F> extends DataSource<F> {\n    flattenedData = new BehaviorSubject<F[]>([]);\n\n    expandedData = new BehaviorSubject<F[]>([]);\n\n    filteredData = new BehaviorSubject<F[]>([]);\n\n    get data() {\n        return this._data.value;\n    }\n\n    set data(value: T[]) {\n        this._data.next(value);\n\n        this.flattenedData.next(this.treeFlattener.flattenNodes(this.data));\n        this.treeControl.dataNodes = this.flattenedData.value;\n    }\n\n    private _data: BehaviorSubject<T[]>;\n\n    constructor(\n        private treeControl: FlatTreeControl<F>,\n        private treeFlattener: McTreeFlattener<T, F>,\n        initialData: T[] = []\n    ) {\n        super();\n\n        this._data = new BehaviorSubject<T[]>(initialData);\n    }\n\n    connect(collectionViewer: CollectionViewer): Observable<F[]> {\n        return merge(\n            collectionViewer.viewChange,\n            this.treeControl.expansionModel.changed\n                .pipe(map((value) => ({ type: McTreeDataSourceChangeTypes.Expansion, value }))),\n            this.treeControl.filterValue\n                .pipe(map((value) => ({ type: McTreeDataSourceChangeTypes.Filter, value }))),\n            this.flattenedData\n        )\n        .pipe(map((changeObj: any): any => {\n            if (changeObj.type === McTreeDataSourceChangeTypes.Filter) {\n                if (changeObj.value && changeObj.value.length > 0) {\n                    return this.filterHandler();\n                } else {\n                    return this.expansionHandler();\n                }\n            }\n\n            return this.expansionHandler();\n        }));\n    }\n\n    filterHandler(): F[] {\n        this.filteredData.next(this.treeControl.filterModel.selected);\n\n        return this.filteredData.value;\n    }\n\n    expansionHandler(): F[] {\n        const expandedNodes = this.treeFlattener.expandFlattenedNodes(this.flattenedData.value, this.treeControl);\n        this.expandedData.next(expandedNodes);\n\n        return this.expandedData.value;\n    }\n\n    disconnect() {\n        // no op\n    }\n}\n\n","import { CollectionViewer, DataSource } from '@angular/cdk/collections';\nimport { BehaviorSubject, merge, Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\n\n/**\n * Data source for nested tree.\n *\n * The data source for nested tree doesn't have to consider node flattener, or the way to expand\n * or collapse. The expansion/collapsion will be handled by TreeControl and each non-leaf node.\n */\nexport class McTreeNestedDataSource<T> extends DataSource<T> {\n\n    get data() {\n        return this._data.value;\n    }\n\n    set data(value: T[]) {\n        this._data.next(value);\n    }\n\n    /* tslint:disable-next-line:naming-convention */\n    private _data = new BehaviorSubject<T[]>([]);\n\n    connect(collectionViewer: CollectionViewer): Observable<T[]> {\n        return merge(...[collectionViewer.viewChange, this._data])\n            .pipe(map(() => this.data));\n    }\n\n    disconnect() {\n        // no op\n    }\n}\n\n"],"names":["__extends","d","b","__","this","constructor","extendStatics","prototype","Object","create","setPrototypeOf","__proto__","Array","p","hasOwnProperty","McTreeNodeDef","_super","tslib_1.__extends","type","Directive","args","selector","inputs","providers","provide","CdkTreeNodeDef","useExisting","data","Input","McTreeNodePadding","_this","apply","arguments","baseLeftPadding","_indent","iconWidth","defineProperty","withIcon","paddingIndent","nodeLevel","treeNode","tree","treeControl","getLevel","level","leftPadding","ngOnInit","isExpandable","setPadding","CdkTreeNodePadding","indent","McTreeNodeToggleComponent","call","disabled","filterValue","subscribe","value","length","isExpanded","node","Component","template","host","class","(click)","[class.mc-disabled]","[class.mc-opened]","encapsulation","ViewEncapsulation","None","CdkTreeNodeToggle","CdkTree","CdkTreeNode","McTreeNodeToggleDirective","MC_TREE_OPTION_PARENT_COMPONENT","InjectionToken","McTreeOptionChange","source","isUserInput","uniqueIdCounter","McTreeOption","elementRef","changeDetectorRef","focusMonitor","parent","_disabled","onSelectionChange","EventEmitter","_selected","_id","hasFocus","_value","newValue","toBoolean","isSelected","setSelected","multiple","monitor","nativeElement","ngOnDestroy","stopMonitoring","toggle","selected","selectionModel","select","deselect","markForCheck","handleFocus","setFocusedOption","handleBlur","focus","element","getHostElement","getHeight","clientRects","getClientRects","height","textContent","trim","selectViaInteraction","$event","emitSelectionChangeEvent","setSelectedOption","emit","getTabIndex","exportAs","[attr.id]","[attr.tabindex]","[attr.disabled]","[class.mc-selected]","[class.mc-focused]","(focus)","(blur)","changeDetection","ChangeDetectionStrategy","OnPush","ElementRef","ChangeDetectorRef","FocusMonitor","undefined","decorators","Optional","Inject","Output","McTreeNavigationChange","option","McTreeSelectionChange","McTreeSelection","differs","ngControl","autoSelect","noUnselect","navigationChange","selectionChange","destroy","Subject","onChange","onTouched","valueAccessor","noUnselectLastSelected","SelectionModel","rawValue","console","log","_tabIndex","ngAfterContentInit","keyManager","FocusKeyManager","options","withVerticalOrientation","withHorizontalOrientation","change","pipe","takeUntil","activeItem","emitNavigationEvent","changed","changeEvent","notifyOnChanges","changes","forEach","selectedOption","next","complete","onKeyDown","event","keyCode","LEFT_ARROW","collapse","preventDefault","RIGHT_ARROW","expand","SPACE","ENTER","toggleFocusedOption","HOME","setFirstItemActive","END","setLastItemActive","PAGE_UP","setPreviousPageItemActive","PAGE_DOWN","setNextPageItemActive","onKeydown","updateScrollSize","first","withScrollSize","Math","floor","withShift","hasModifierKey","withCtrl","canDeselectLast","emitChangeEvent","previousIndex_1","previousActiveItemIndex","activeIndex_1","activeItemIndex","item","index","setActiveItem","focusedOption","renderNodeChanges","dataDiffer","viewContainer","parentData","nodeOutlet","arrayOfInstances","changeDetectorRefs","_embeddedViews","view","viewDef","def","nodes","nodeMatchedQueries","matchedQueryIds","nodeData","nodeIndex","push","instance","setTimeout","destroyed","detectChanges","reset","writeValue","setOptionsFromValues","registerOnChange","fn","registerOnTouched","setDisabledState","isDisabled","getCorrespondOption","find","error","warn","values","clear","correspondingOption","(keydown)","(window:resize)","styles","IterableDiffers","NgControl","Self","String","Attribute","ViewChild","CdkTreeNodeOutlet","static","ContentChildren","tabIndex","MC_TREE_DIRECTIVES","McTreeModule","NgModule","imports","CommonModule","CdkTreeModule","McPseudoCheckboxModule","exports","declarations","McTreeFlattener","transformFunction","getChildren","flattenNode","resultNodes","flatNode","childrenNodes","isArray","flattenChildren","take","children","child","flattenNodes","structuredData","expandFlattenedNodes","results","currentExpand","i","Expansion","Filter","McTreeFlatDataSource","treeFlattener","initialData","flattenedData","BehaviorSubject","expandedData","filteredData","_data","dataNodes","connect","collectionViewer","merge","viewChange","expansionModel","map","McTreeDataSourceChangeTypes","changeObj","filterHandler","expansionHandler","filterModel","expandedNodes","disconnect","DataSource","McTreeNestedDataSource"],"mappings":"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"}