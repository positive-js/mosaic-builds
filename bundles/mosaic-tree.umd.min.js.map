{"version":3,"file":"mosaic-tree.umd.min.js","sources":["../../node_modules/tslib/tslib.es6.js","../../packages/mosaic/tree/node.directive.ts","../../packages/mosaic/tree/padding.directive.ts","../../packages/mosaic/tree/toggle.ts","../../packages/mosaic/tree/tree-option.component.ts","../../packages/mosaic/tree/tree-selection.component.ts","../../packages/mosaic/tree/tree.module.ts","../../packages/mosaic/tree/data-source/flat-data-source.ts","../../packages/mosaic/tree/data-source/nested-data-source.ts"],"sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","import { Directive, Input } from '@angular/core';\nimport { CdkTreeNodeDef } from '@ptsecurity/cdk/tree';\n\n\n@Directive({\n    selector: '[mcTreeNodeDef]',\n    inputs: ['when: mcTreeNodeDefWhen'],\n    providers: [{ provide: CdkTreeNodeDef, useExisting: McTreeNodeDef }]\n})\nexport class McTreeNodeDef<T> extends CdkTreeNodeDef<T> {\n    @Input('mcTreeNode') data: T;\n}\n","import { Directive, Input, OnInit } from '@angular/core';\nimport { CdkTreeNodePadding } from '@ptsecurity/cdk/tree';\n\n\n@Directive({\n    selector: '[mcTreeNodePadding]',\n    providers: [{ provide: CdkTreeNodePadding, useExisting: McTreeNodePadding }]\n})\nexport class McTreeNodePadding<T> extends CdkTreeNodePadding<T> implements OnInit {\n    @Input('mcTreeNodePadding') level: number;\n\n    @Input('mcTreeNodePaddingIndent') indent: number;\n\n    baseLeftPadding: number = 12;\n    /* tslint:disable-next-line:naming-convention orthodox-getter-and-setter*/\n    _indent: number = 20;\n\n    withIcon: boolean;\n    iconWidth: number = 20;\n\n    get leftPadding(): number {\n        return (this.withIcon ? 0 : this.iconWidth) + this.baseLeftPadding;\n    }\n\n    paddingIndent(): string | null {\n        const nodeLevel = (this.treeNode.data && this.tree.treeControl.getLevel)\n            ? this.tree.treeControl.getLevel(this.treeNode.data)\n            : 0;\n\n        const level = this.level || nodeLevel;\n\n        return level > 0 ? `${(level * this._indent) + this.leftPadding}px` : `${this.leftPadding}px`;\n    }\n\n    ngOnInit(): void {\n        this.withIcon = this.tree.treeControl.isExpandable(this.treeNode.data);\n\n        this.setPadding();\n    }\n}\n","import { Component, Directive, Input, ViewEncapsulation } from '@angular/core';\nimport { CdkTree, CdkTreeNode, CdkTreeNodeToggle } from '@ptsecurity/cdk/tree';\nimport { map } from 'rxjs/operators';\n\n\n@Component({\n    selector: 'mc-tree-node-toggle',\n    template: `\n        <i class=\"mc mc-icon mc-angle-down-S_16\"></i>\n    `,\n    host: {\n        class: 'mc-tree-node-toggle',\n        '(click)': 'toggle($event)',\n        '[class.mc-disabled]': 'disabled',\n        '[class.mc-opened]': 'iconState'\n    },\n    encapsulation: ViewEncapsulation.None,\n    providers: [{ provide: CdkTreeNodeToggle, useExisting: McTreeNodeToggleComponent }]\n})\nexport class McTreeNodeToggleComponent<T> extends CdkTreeNodeToggle<T> {\n    disabled: boolean = false;\n\n    @Input() node: T;\n\n    get iconState(): any {\n        return this.disabled || this.tree.treeControl.isExpanded(this.node);\n    }\n\n    constructor(tree: CdkTree<T>, treeNode: CdkTreeNode<T>) {\n        super(tree, treeNode);\n\n        this.tree.treeControl.filterValue\n            .pipe(map((value) => value.length > 0))\n            .subscribe((state: boolean) => this.disabled = state);\n    }\n}\n\n@Directive({\n    selector: '[mcTreeNodeToggle]',\n    host: {\n        '(click)': 'toggle($event)',\n        '[class.mc-disabled]': 'disabled'\n    },\n    providers: [{ provide: CdkTreeNodeToggle, useExisting: McTreeNodeToggleDirective }]\n})\nexport class McTreeNodeToggleDirective<T> extends CdkTreeNodeToggle<T> {\n    disabled: boolean = false;\n\n    constructor(tree: CdkTree<T>, treeNode: CdkTreeNode<T>) {\n        super(tree, treeNode);\n\n        this.tree.treeControl.filterValue\n            .pipe(map((value) => value.length > 0))\n            .subscribe((state: boolean) => this.disabled = state);\n    }\n}\n","import { FocusOrigin } from '@angular/cdk/a11y';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport {\n    ChangeDetectorRef,\n    Component,\n    EventEmitter,\n    Input,\n    Output,\n    ElementRef,\n    Inject,\n    InjectionToken,\n    ChangeDetectionStrategy,\n    ViewEncapsulation,\n    AfterContentInit,\n    NgZone\n} from '@angular/core';\nimport { hasModifierKey } from '@ptsecurity/cdk/keycodes';\nimport { CdkTreeNode } from '@ptsecurity/cdk/tree';\nimport { CanDisable } from '@ptsecurity/mosaic/core';\nimport { Subject } from 'rxjs';\nimport { take } from 'rxjs/operators';\n\n\n// tslint:disable-next-line:naming-convention\nexport interface McTreeOptionEvent {\n    option: McTreeOption;\n}\n\n/**\n * Injection token used to provide the parent component to options.\n */\nexport const MC_TREE_OPTION_PARENT_COMPONENT = new InjectionToken<any>('MC_TREE_OPTION_PARENT_COMPONENT');\n\nexport class McTreeOptionChange {\n    constructor(public source: McTreeOption, public isUserInput = false) {}\n}\n\nlet uniqueIdCounter: number = 0;\n\n@Component({\n    selector: 'mc-tree-option',\n    exportAs: 'mcTreeOption',\n    templateUrl: './tree-option.html',\n    host: {\n        '[attr.id]': 'id',\n        '[attr.tabindex]': '-1',\n\n        '[attr.disabled]': 'disabled || null',\n\n        class: 'mc-tree-option',\n        '[class.mc-selected]': 'selected',\n        '[class.mc-focused]': 'hasFocus',\n\n        '(focus)': 'focus()',\n        '(blur)': 'blur()',\n\n        '(click)': 'selectViaInteraction($event)'\n    },\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n    providers: [{ provide: CdkTreeNode, useExisting: McTreeOption }]\n})\nexport class McTreeOption extends CdkTreeNode<McTreeOption> implements CanDisable, AfterContentInit {\n    readonly onFocus = new Subject<McTreeOptionEvent>();\n\n    readonly onBlur = new Subject<McTreeOptionEvent>();\n\n    get value(): any {\n        return this._value;\n    }\n\n    set value(value: any) {\n        this._value = value;\n    }\n\n    private _value: any;\n\n    @Input()\n    get disabled() {\n        return this._disabled || (this.tree && this.tree.disabled);\n    }\n\n    set disabled(value: any) {\n        const newValue = coerceBooleanProperty(value);\n\n        if (newValue !== this._disabled) {\n            this._disabled = newValue;\n        }\n    }\n\n    private _disabled: boolean = false;\n\n    @Input()\n    get showCheckbox() {\n        return this._showCheckbox !== undefined ? this._showCheckbox : this.tree.showCheckbox;\n    }\n\n    set showCheckbox(value: any) {\n        this._showCheckbox = coerceBooleanProperty(value);\n    }\n\n    private _showCheckbox: boolean;\n\n    @Output() readonly onSelectionChange = new EventEmitter<McTreeOptionChange>();\n\n    get selected(): boolean {\n        return this._selected;\n    }\n\n    set selected(value: boolean) {\n        const isSelected = coerceBooleanProperty(value);\n\n        if (isSelected !== this._selected) {\n            this.setSelected(isSelected);\n        }\n    }\n\n    private _selected: boolean = false;\n\n    get id(): string {\n        return this._id;\n    }\n\n    private _id = `mc-tree-option-${uniqueIdCounter++}`;\n\n    get multiple(): boolean {\n        return this.tree.multiple;\n    }\n\n    get viewValue(): string {\n        // TODO: Add input property alternative for node envs.\n        return (this.getHostElement().textContent || '').trim();\n    }\n\n    hasFocus: boolean = false;\n\n    constructor(\n        elementRef: ElementRef,\n        private changeDetectorRef: ChangeDetectorRef,\n        private ngZone: NgZone,\n        @Inject(MC_TREE_OPTION_PARENT_COMPONENT) public tree: any\n    ) {\n        super(elementRef, tree);\n    }\n\n    ngAfterContentInit(): void {\n        this.value = this.tree.treeControl.getValue(this.data);\n    }\n\n    toggle(): void {\n        this.selected = !this.selected;\n    }\n\n    setSelected(selected: boolean): void {\n        if (this._selected === selected || !this.tree.selectionModel) { return; }\n\n        this._selected = selected;\n\n        if (selected) {\n            this.tree.selectionModel.select(this.data);\n        } else {\n            this.tree.selectionModel.deselect(this.data);\n        }\n\n        this.changeDetectorRef.markForCheck();\n    }\n\n    focus(focusOrigin?: FocusOrigin) {\n        if (focusOrigin === 'program') { return; }\n\n        if (this.disabled || this.hasFocus) { return; }\n\n        this.elementRef.nativeElement.focus();\n\n        this.onFocus.next({ option: this });\n\n        Promise.resolve().then(() => {\n            this.hasFocus = true;\n\n            this.changeDetectorRef.markForCheck();\n        });\n    }\n\n    blur(): void {\n        // When animations are enabled, Angular may end up removing the option from the DOM a little\n        // earlier than usual, causing it to be blurred and throwing off the logic in the tree\n        // that moves focus not the next item. To work around the issue, we defer marking the option\n        // as not focused until the next time the zone stabilizes.\n        this.ngZone.onStable\n            .asObservable()\n            .pipe(take(1))\n            .subscribe(() => {\n                this.ngZone.run(() => {\n                    this.hasFocus = false;\n\n                    this.onBlur.next({ option: this });\n                });\n            });\n    }\n\n    getHeight(): number {\n        const clientRects = this.elementRef.nativeElement.getClientRects();\n\n        if (clientRects.length) {\n            return clientRects[0].height;\n        }\n\n        return 0;\n    }\n\n    select(): void {\n        if (!this._selected) {\n            this._selected = true;\n\n            this.changeDetectorRef.markForCheck();\n            this.emitSelectionChangeEvent();\n        }\n    }\n\n    deselect(): void {\n        if (this._selected) {\n            this._selected = false;\n\n            this.changeDetectorRef.markForCheck();\n        }\n    }\n\n    selectViaInteraction($event?: KeyboardEvent): void {\n        if (!this.disabled) {\n            this.changeDetectorRef.markForCheck();\n            this.emitSelectionChangeEvent(true);\n\n            const shiftKey = $event ? hasModifierKey($event, 'shiftKey') : false;\n            const ctrlKey = $event ? hasModifierKey($event, 'ctrlKey') : false;\n\n            this.tree.setSelectedOptionsByClick(this, shiftKey, ctrlKey);\n        }\n    }\n\n    emitSelectionChangeEvent(isUserInput = false): void {\n        this.onSelectionChange.emit(new McTreeOptionChange(this, isUserInput));\n    }\n\n    getHostElement(): HTMLElement {\n        return this.elementRef.nativeElement;\n    }\n\n    markForCheck() {\n        this.changeDetectorRef.markForCheck();\n    }\n}\n","/* tslint:disable:no-empty */\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { SelectionModel } from '@angular/cdk/collections';\nimport {\n    AfterContentInit,\n    Attribute,\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    ContentChildren,\n    ElementRef,\n    EventEmitter,\n    forwardRef,\n    Input,\n    IterableDiffer,\n    IterableDiffers,\n    Output,\n    QueryList,\n    ViewChild,\n    ViewEncapsulation\n} from '@angular/core';\nimport { NodeDef, ViewData } from '@angular/core/esm2015/src/view';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { FocusKeyManager } from '@ptsecurity/cdk/a11y';\nimport {\n    hasModifierKey,\n    END,\n    ENTER,\n    HOME,\n    LEFT_ARROW,\n    PAGE_DOWN,\n    PAGE_UP,\n    RIGHT_ARROW,\n    SPACE,\n    DOWN_ARROW,\n    UP_ARROW\n} from '@ptsecurity/cdk/keycodes';\nimport { CdkTree, CdkTreeNodeOutlet, FlatTreeControl } from '@ptsecurity/cdk/tree';\nimport { CanDisable, getMcSelectNonArrayValueError, HasTabIndex, MultipleMode } from '@ptsecurity/mosaic/core';\nimport { merge, Observable, Subject, Subscription } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\n\nimport { MC_TREE_OPTION_PARENT_COMPONENT, McTreeOption, McTreeOptionEvent } from './tree-option.component';\n\n\nexport const MC_SELECTION_TREE_VALUE_ACCESSOR: any = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => McTreeSelection),\n    multi: true\n};\n\nexport class McTreeNavigationChange<T> {\n    constructor(public source: McTreeSelection<any>, public option: T) {}\n}\n\nexport class McTreeSelectionChange<T> {\n    constructor(public source: McTreeSelection<any>, public option: T) {}\n}\n\n// tslint:disable-next-line:naming-convention\ninterface SelectionModelOption {\n    id: number | string;\n    value: string;\n}\n\n\n@Component({\n    selector: 'mc-tree-selection',\n    exportAs: 'mcTreeSelection',\n    template: '<ng-container cdkTreeNodeOutlet></ng-container>',\n    host: {\n        class: 'mc-tree-selection',\n\n        '[attr.tabindex]': 'tabIndex',\n\n        '(focus)': 'focus()',\n        '(blur)': 'blur()',\n\n        '(keydown)': 'onKeyDown($event)',\n        '(window:resize)': 'updateScrollSize()'\n    },\n    styleUrls: ['./tree.css'],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    providers: [\n        MC_SELECTION_TREE_VALUE_ACCESSOR,\n        { provide: MC_TREE_OPTION_PARENT_COMPONENT, useExisting: McTreeSelection },\n        { provide: CdkTree, useExisting: McTreeSelection }\n    ]\n})\nexport class McTreeSelection<T extends McTreeOption> extends CdkTree<T>\n    implements ControlValueAccessor, AfterContentInit, CanDisable, HasTabIndex {\n\n    @ViewChild(CdkTreeNodeOutlet, { static: true }) nodeOutlet: CdkTreeNodeOutlet;\n\n    @ContentChildren(McTreeOption) renderedOptions: QueryList<T>;\n\n    keyManager: FocusKeyManager<T>;\n\n    selectionModel: SelectionModel<SelectionModelOption>;\n\n    resetFocusedItemOnBlur: boolean = true;\n\n    @Input() treeControl: FlatTreeControl<T>;\n\n    @Output() readonly navigationChange = new EventEmitter<McTreeNavigationChange<T>>();\n\n    @Output() readonly selectionChange = new EventEmitter<McTreeSelectionChange<T>>();\n\n    multipleMode: MultipleMode | null = null;\n\n    userTabIndex: number | null = null;\n\n    get optionFocusChanges(): Observable<McTreeOptionEvent> {\n        return merge(...this.renderedOptions.map((option) => option.onFocus));\n    }\n\n    get optionBlurChanges(): Observable<McTreeOptionEvent> {\n        return merge(...this.renderedOptions.map((option) => option.onBlur));\n    }\n\n    get multiple(): boolean {\n        return !!this.multipleMode;\n    }\n\n    @Input()\n    get autoSelect(): boolean {\n        return this._autoSelect;\n    }\n\n    set autoSelect(value: boolean) {\n        this._autoSelect = coerceBooleanProperty(value);\n    }\n\n    private _autoSelect: boolean = true;\n\n    @Input()\n    get noUnselectLast(): boolean {\n        return this._noUnselectLast;\n    }\n\n    set noUnselectLast(value: boolean) {\n        this._noUnselectLast = coerceBooleanProperty(value);\n    }\n\n    private _noUnselectLast: boolean = true;\n\n    @Input()\n    get disabled(): boolean {\n        return this._disabled;\n    }\n\n    set disabled(rawValue: boolean) {\n        const value = coerceBooleanProperty(rawValue);\n\n        if (this._disabled !== value) {\n            this._disabled = value;\n\n            this.markOptionsForCheck();\n        }\n    }\n\n    private _disabled: boolean = false;\n\n    @Input()\n    get tabIndex(): any {\n        return this._tabIndex;\n    }\n\n    set tabIndex(value: any) {\n        this._tabIndex = value;\n        this.userTabIndex = value;\n    }\n\n    private _tabIndex = 0;\n\n    get showCheckbox(): boolean {\n        return this.multipleMode === MultipleMode.CHECKBOX;\n    }\n\n    private readonly destroy = new Subject<void>();\n\n    private optionFocusSubscription: Subscription | null;\n\n    private optionBlurSubscription: Subscription | null;\n\n    constructor(\n        private elementRef: ElementRef,\n        differs: IterableDiffers,\n        changeDetectorRef: ChangeDetectorRef,\n        @Attribute('tabindex') tabIndex: string,\n        @Attribute('multiple') multiple: string\n    ) {\n        super(differs, changeDetectorRef);\n\n        this.tabIndex = parseInt(tabIndex) || 0;\n\n        if (multiple === MultipleMode.CHECKBOX || multiple === MultipleMode.KEYBOARD) {\n            this.multipleMode = multiple;\n        } else if (multiple !== null) {\n            this.multipleMode = MultipleMode.CHECKBOX;\n        }\n\n        if (this.multipleMode === MultipleMode.CHECKBOX) {\n            this.autoSelect = false;\n            this.noUnselectLast = false;\n        }\n\n        this.selectionModel = new SelectionModel<SelectionModelOption>(this.multiple);\n    }\n\n    ngAfterContentInit(): void {\n        this.keyManager = new FocusKeyManager<T>(this.renderedOptions)\n            .withVerticalOrientation(true)\n            .withHorizontalOrientation(null);\n\n        this.keyManager.change\n            .pipe(takeUntil(this.destroy))\n            .subscribe(() => {\n                if (this.keyManager.activeItem) {\n                    this.emitNavigationEvent(this.keyManager.activeItem);\n\n                    // todo need check this logic\n                    if (this.autoSelect && !this.keyManager.activeItem.disabled) {\n                        this.updateOptionsFocus();\n                    }\n                }\n            });\n\n        this.keyManager.tabOut\n            .pipe(takeUntil(this.destroy))\n            .subscribe(() => this.allowFocusEscape());\n\n        this.selectionModel.changed\n            .pipe(takeUntil(this.destroy))\n            .subscribe(() => {\n                this.onChange(this.getSelectedValues());\n\n                this.renderedOptions.notifyOnChanges();\n            });\n\n        this.renderedOptions.changes\n            .pipe(takeUntil(this.destroy))\n            .subscribe((options) => {\n                this.resetOptions();\n\n                // Check to see if we need to update our tab index\n                this.updateTabIndex();\n\n                // todo need to do optimisation\n                options.forEach((option) => {\n                    option.deselect();\n\n                    this.getSelectedValues().forEach((selectedValue) => {\n                        if (option.value === selectedValue) {\n                            option.select();\n                        }\n                    });\n                });\n            });\n    }\n\n    ngOnDestroy(): void {\n        this.destroy.next();\n        this.destroy.complete();\n    }\n\n    focus(): void {\n        if (this.renderedOptions.length === 0) { return; }\n\n        this.keyManager.setFirstItemActive();\n    }\n\n    blur() {\n        if (!this.hasFocusedOption() && this.resetFocusedItemOnBlur) {\n            this.keyManager.setActiveItem(-1);\n        }\n\n        this.onTouched();\n        this.changeDetectorRef.markForCheck();\n    }\n\n    onKeyDown(event: KeyboardEvent): void {\n        this.keyManager.setFocusOrigin('keyboard');\n        // tslint:disable-next-line: deprecation\n        const keyCode = event.keyCode;\n\n        switch (keyCode) {\n            case DOWN_ARROW:\n                this.keyManager.setNextItemActive();\n\n                break;\n            case UP_ARROW:\n                this.keyManager.setPreviousItemActive();\n\n                break;\n            case LEFT_ARROW:\n                if (this.keyManager.activeItem) {\n                    this.treeControl.collapse(this.keyManager.activeItem.data as T);\n                }\n\n                event.preventDefault();\n\n                return;\n            case RIGHT_ARROW:\n                if (this.keyManager.activeItem) {\n                    this.treeControl.expand(this.keyManager.activeItem.data as T);\n                }\n\n                event.preventDefault();\n\n                return;\n            case SPACE:\n            case ENTER:\n                this.toggleFocusedOption();\n                event.preventDefault();\n\n                break;\n            case HOME:\n                this.keyManager.setFirstItemActive();\n                event.preventDefault();\n\n                break;\n            case END:\n                this.keyManager.setLastItemActive();\n                event.preventDefault();\n\n                break;\n            case PAGE_UP:\n                this.keyManager.setPreviousPageItemActive();\n                event.preventDefault();\n\n                break;\n            case PAGE_DOWN:\n                this.keyManager.setNextPageItemActive();\n                event.preventDefault();\n\n                break;\n            default:\n                return;\n        }\n\n        if (this.keyManager.activeItem) {\n            this.setSelectedOptionsByKey(\n                this.keyManager.activeItem, hasModifierKey(event, 'shiftKey'), hasModifierKey(event, 'ctrlKey')\n            );\n        }\n    }\n\n    updateScrollSize(): void {\n        if (!this.renderedOptions.first) { return; }\n\n        this.keyManager.withScrollSize(Math.floor(this.getHeight() / this.renderedOptions.first.getHeight()));\n    }\n\n    setSelectedOptionsByKey(option: T, shiftKey: boolean, ctrlKey: boolean): void {\n        if (shiftKey && this.multiple) {\n            this.setSelectedOptions(option);\n        } else if (ctrlKey) {\n            if (!this.canDeselectLast(option)) { return; }\n        } else if (this.autoSelect) {\n            this.selectionModel.clear();\n            this.selectionModel.toggle(option.data);\n        }\n\n        this.emitChangeEvent(option);\n    }\n\n    setSelectedOptionsByClick(option: T, shiftKey: boolean, ctrlKey: boolean): void {\n        if (!shiftKey && !ctrlKey) {\n            this.keyManager.setActiveItem(option);\n        }\n\n        if (shiftKey && this.multiple) {\n            this.setSelectedOptions(option);\n        } else if (ctrlKey) {\n            if (!this.canDeselectLast(option)) { return; }\n\n            this.selectionModel.toggle(option.data);\n        } else if (this.autoSelect) {\n            this.selectionModel.clear();\n            this.selectionModel.toggle(option.data);\n        } else {\n            this.selectionModel.toggle(option.data);\n        }\n\n        this.emitChangeEvent(option);\n    }\n\n    setSelectedOptions(option: T): void {\n        const selectedOptionState = option.selected;\n\n        let fromIndex = this.keyManager.previousActiveItemIndex;\n        let toIndex = this.keyManager.previousActiveItemIndex = this.keyManager.activeItemIndex;\n\n        if (toIndex === fromIndex) { return; }\n\n        if (fromIndex > toIndex) {\n            [fromIndex, toIndex] = [toIndex, fromIndex];\n        }\n\n        this.renderedOptions\n            .toArray()\n            .slice(fromIndex, toIndex + 1)\n            .filter((item) => !item.disabled)\n            .forEach((renderedOption) => {\n                const isLastRenderedOption = renderedOption === this.keyManager.activeItem;\n\n                if (isLastRenderedOption && renderedOption.selected && this.noUnselectLast) { return; }\n\n                renderedOption.setSelected(!selectedOptionState);\n            });\n    }\n\n    setFocusedOption(option: T): void {\n        this.keyManager.setActiveItem(option);\n    }\n\n    toggleFocusedOption(): void {\n        const focusedOption = this.keyManager.activeItem;\n\n        if (focusedOption && (!focusedOption.selected || this.canDeselectLast(focusedOption))) {\n            focusedOption.toggle();\n            this.emitChangeEvent(focusedOption);\n        }\n    }\n\n    renderNodeChanges(\n        data: T[],\n        dataDiffer: IterableDiffer<T> = this.dataDiffer,\n        viewContainer: any = this.nodeOutlet.viewContainer,\n        parentData?: T\n    ): void {\n        super.renderNodeChanges(data, dataDiffer, viewContainer, parentData);\n\n        const arrayOfInstances = [];\n        const changeDetectorRefs: any[] = [];\n\n        viewContainer._embeddedViews.forEach((view: ViewData) => {\n            const viewDef = view.def;\n\n            viewDef.nodes.forEach((node: NodeDef) => {\n                if (viewDef.nodeMatchedQueries === node.matchedQueryIds) {\n                    const nodeData: any = view.nodes[node.nodeIndex];\n\n                    arrayOfInstances.push(nodeData.instance as never);\n                    changeDetectorRefs.push(nodeData.instance.changeDetectorRef);\n                }\n            });\n        });\n\n        setTimeout(() => {\n            changeDetectorRefs.forEach((changeDetectorRef) => {\n                if (!changeDetectorRef.destroyed) {\n                    changeDetectorRef.detectChanges();\n                }\n            });\n        });\n\n        if (this.renderedOptions) {\n            this.renderedOptions.reset(arrayOfInstances);\n            this.renderedOptions.notifyOnChanges();\n        }\n\n        this.updateScrollSize();\n\n        this.nodeOutlet.changeDetectorRef.detectChanges();\n    }\n\n    getHeight(): number {\n        const clientRects = this.elementRef.nativeElement.getClientRects();\n\n        if (clientRects.length) {\n            return clientRects[0].height;\n        }\n\n        return 0;\n    }\n\n    getItemHeight(): number {\n        return this.renderedOptions.first ? this.renderedOptions.first.getHeight() : 0;\n    }\n\n    emitNavigationEvent(option: T): void {\n        this.navigationChange.emit(new McTreeNavigationChange(this, option));\n    }\n\n    emitChangeEvent(option: T): void {\n        this.selectionChange.emit(new McTreeNavigationChange(this, option));\n    }\n\n    writeValue(value: any): void {\n        if (this.multiple && value && !Array.isArray(value)) {\n            throw getMcSelectNonArrayValueError();\n        }\n\n        if (this.renderedOptions) {\n            this.setOptionsFromValues(this.multiple ? value : [value]);\n        }\n    }\n\n    /** `View -> model callback called when value changes` */\n    onChange: (value: any) => void = () => {};\n\n    registerOnChange(fn: (value: any) => void): void {\n        this.onChange = fn;\n    }\n\n    /** `View -> model callback called when select has been touched` */\n    onTouched = () => {};\n\n    registerOnTouched(fn: () => {}): void {\n        this.onTouched = fn;\n    }\n\n    /**\n     * Sets the disabled state of the control. Implemented as a part of ControlValueAccessor.\n     */\n    setDisabledState(isDisabled: boolean): void {\n        this._disabled = isDisabled;\n        this.changeDetectorRef.markForCheck();\n    }\n\n    setOptionsFromValues(values: any[]): void {\n        this.selectionModel.clear();\n\n        const valuesToSelect = values.reduce((result, value) => {\n            return this.treeControl.hasValue(value) ? [...result, this.treeControl.hasValue(value)] : [...result];\n        }, []);\n\n        this.selectionModel.select(...valuesToSelect);\n    }\n\n    getSelectedValues(): any[] {\n        return this.selectionModel.selected.map((selected) => this.treeControl.getValue(selected));\n    }\n\n    protected updateTabIndex(): void {\n        this._tabIndex = this.renderedOptions.length === 0 ? -1 : 0;\n    }\n\n    private allowFocusEscape() {\n        if (this._tabIndex !== -1) {\n            this._tabIndex = -1;\n\n            setTimeout(() => {\n                this._tabIndex = this.userTabIndex || 0;\n                this.changeDetectorRef.markForCheck();\n            });\n        }\n    }\n\n    private resetOptions() {\n        this.dropSubscriptions();\n        this.listenToOptionsFocus();\n    }\n\n    private dropSubscriptions() {\n        if (this.optionFocusSubscription) {\n            this.optionFocusSubscription.unsubscribe();\n            this.optionFocusSubscription = null;\n        }\n\n        if (this.optionBlurSubscription) {\n            this.optionBlurSubscription.unsubscribe();\n            this.optionBlurSubscription = null;\n        }\n    }\n\n    private listenToOptionsFocus(): void {\n        this.optionFocusSubscription = this.optionFocusChanges\n            .subscribe((event) => {\n                const index: number = this.renderedOptions.toArray().indexOf(event.option as T);\n\n                this.renderedOptions\n                    .filter((option) => option.hasFocus)\n                    .forEach((option) => option.hasFocus = false);\n\n                if (this.isValidIndex(index)) {\n                    this.keyManager.updateActiveItem(index);\n                }\n            });\n\n        this.optionBlurSubscription = this.optionBlurChanges\n            .subscribe(() => this.blur());\n    }\n\n    /**\n     * Utility to ensure all indexes are valid.\n     * @param index The index to be checked.\n     * @returns True if the index is valid for our list of options.\n     */\n    private isValidIndex(index: number): boolean {\n        return index >= 0 && index < this.renderedOptions.length;\n    }\n\n    /** Checks whether any of the options is focused. */\n    private hasFocusedOption() {\n        return this.renderedOptions.some((option) => option.hasFocus);\n    }\n\n    private markOptionsForCheck() {\n        if (this.renderedOptions) {\n            this.renderedOptions.forEach((option) => option.markForCheck());\n        }\n    }\n\n    private updateOptionsFocus() {\n        this.renderedOptions\n            .filter((option) => option.hasFocus)\n            .forEach((option) => option.hasFocus = false);\n    }\n\n    private canDeselectLast(option: McTreeOption): boolean {\n        return !(this.noUnselectLast && this.selectionModel.selected.length === 1 && option.selected);\n    }\n}\n\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { CdkTreeModule } from '@ptsecurity/cdk/tree';\nimport { McPseudoCheckboxModule } from '@ptsecurity/mosaic/core';\n\nimport { McTreeNodeDef } from './node.directive';\nimport { McTreeNodePadding } from './padding.directive';\nimport { McTreeNodeToggleDirective, McTreeNodeToggleComponent } from './toggle';\nimport { McTreeOption } from './tree-option.component';\nimport { McTreeSelection } from './tree-selection.component';\n\n\nconst MC_TREE_DIRECTIVES = [\n    McTreeSelection,\n    McTreeOption,\n    McTreeNodeDef,\n    McTreeNodePadding,\n    McTreeNodeToggleComponent,\n    McTreeNodeToggleDirective\n];\n\n@NgModule({\n    imports: [CommonModule, CdkTreeModule, McPseudoCheckboxModule],\n    exports: MC_TREE_DIRECTIVES,\n    declarations: MC_TREE_DIRECTIVES\n})\nexport class McTreeModule {}\n","import { CollectionViewer, DataSource } from '@angular/cdk/collections';\nimport { FlatTreeControl, TreeControl } from '@ptsecurity/cdk/tree';\nimport { BehaviorSubject, merge, Observable } from 'rxjs';\nimport { map, take } from 'rxjs/operators';\n\n\n/**\n * Tree flattener to convert a normal type of node to node with children & level information.\n * Transform nested nodes of type `T` to flattened nodes of type `F`.\n *\n * For example, the input data of type `T` is nested, and contains its children data:\n *   SomeNode: {\n *     key: 'Fruits',\n *     children: [\n *       NodeOne: {\n *         key: 'Apple',\n *       },\n *       NodeTwo: {\n *        key: 'Pear',\n *      }\n *    ]\n *  }\n *  After flattener flatten the tree, the structure will become\n *  SomeNode: {\n *    key: 'Fruits',\n *    expandable: true,\n *    level: 1\n *  },\n *  NodeOne: {\n *    key: 'Apple',\n *    expandable: false,\n *    level: 2\n *  },\n *  NodeTwo: {\n *   key: 'Pear',\n *   expandable: false,\n *   level: 2\n * }\n * and the output flattened type is `F` with additional information.\n */\nexport class McTreeFlattener<T, F> {\n    constructor(\n        public transformFunction: (node: T, level: number, parent: F | null) => F,\n        public getLevel: (node: F) => number,\n        public isExpandable: (node: F) => boolean,\n        public getChildren: (node: T) => Observable<T[]> | T[] | undefined | null\n    ) {}\n\n    flattenNode(node: T, level: number, resultNodes: F[], parent: F | null): F[] {\n        const flatNode = this.transformFunction(node, level, parent);\n        resultNodes.push(flatNode);\n\n        if (this.isExpandable(flatNode)) {\n            const childrenNodes = this.getChildren(node);\n\n            if (childrenNodes) {\n                if (Array.isArray(childrenNodes)) {\n                    this.flattenChildren(childrenNodes, level, resultNodes, flatNode);\n                } else {\n                    childrenNodes\n                        .pipe(take(1))\n                        .subscribe((children) => {\n                            this.flattenChildren(children, level, resultNodes, flatNode);\n                        });\n                }\n            }\n        }\n\n        return resultNodes;\n    }\n\n    flattenChildren(children: T[], level: number, resultNodes: F[], parent: F | null): void {\n        children.forEach((child) => {\n            this.flattenNode(child, level + 1, resultNodes, parent);\n        });\n    }\n\n    /**\n     * Flatten a list of node type T to flattened version of node F.\n     * Please note that type T may be nested, and the length of `structuredData` may be different\n     * from that of returned list `F[]`.\n     */\n    flattenNodes(structuredData: T[]): F[] {\n        const resultNodes: F[] = [];\n        structuredData.forEach((node) => this.flattenNode(node, 0, resultNodes, null));\n\n        return resultNodes;\n    }\n\n    /**\n     * Expand flattened node with current expansion status.\n     * The returned list may have different length.\n     */\n    expandFlattenedNodes(nodes: F[], treeControl: TreeControl<F>): F[] {\n        const results: F[] = [];\n        const currentExpand: boolean[] = [];\n        currentExpand[0] = true;\n\n        nodes.forEach((node) => {\n            let expand = true;\n            for (let i = 0; i <= this.getLevel(node); i++) {\n                expand = expand && currentExpand[i];\n            }\n\n            if (expand) { results.push(node); }\n\n            if (this.isExpandable(node)) {\n                currentExpand[this.getLevel(node) + 1] = treeControl.isExpanded(node);\n            }\n        });\n\n        return results;\n    }\n}\n\nenum McTreeDataSourceChangeTypes {\n    Expansion = 'expansion',\n    Filter = 'filter'\n}\n\n/**\n * Data source for flat tree.\n * The data source need to handle expansion/collapsion of the tree node and change the data feed\n * to `McTree`.\n * The nested tree nodes of type `T` are flattened through `MсTreeFlattener`, and converted\n * to type `F` for `McTree` to consume.\n */\nexport class McTreeFlatDataSource<T, F> extends DataSource<F> {\n    flattenedData = new BehaviorSubject<F[]>([]);\n\n    expandedData = new BehaviorSubject<F[]>([]);\n\n    filteredData = new BehaviorSubject<F[]>([]);\n\n    get data() {\n        return this._data.value;\n    }\n\n    set data(value: T[]) {\n        this._data.next(value);\n\n        this.flattenedData.next(this.treeFlattener.flattenNodes(this.data));\n        this.treeControl.dataNodes = this.flattenedData.value;\n    }\n\n    private _data: BehaviorSubject<T[]>;\n\n    constructor(\n        private treeControl: FlatTreeControl<F>,\n        private treeFlattener: McTreeFlattener<T, F>,\n        initialData: T[] = []\n    ) {\n        super();\n\n        this._data = new BehaviorSubject<T[]>(initialData);\n    }\n\n    connect(collectionViewer: CollectionViewer): Observable<F[]> {\n        return merge(\n            collectionViewer.viewChange,\n            this.treeControl.expansionModel.changed\n                .pipe(map((value) => ({ type: McTreeDataSourceChangeTypes.Expansion, value }))),\n            this.treeControl.filterValue\n                .pipe(map((value) => ({ type: McTreeDataSourceChangeTypes.Filter, value }))),\n            this.flattenedData\n        )\n        .pipe(map((changeObj: any): any => {\n            if (changeObj.type === McTreeDataSourceChangeTypes.Filter) {\n                if (changeObj.value && changeObj.value.length > 0) {\n                    return this.filterHandler();\n                } else {\n                    return this.expansionHandler();\n                }\n            }\n\n            return this.expansionHandler();\n        }));\n    }\n\n    filterHandler(): F[] {\n        this.filteredData.next(this.treeControl.filterModel.selected);\n\n        return this.filteredData.value;\n    }\n\n    expansionHandler(): F[] {\n        const expandedNodes = this.treeFlattener.expandFlattenedNodes(this.flattenedData.value, this.treeControl);\n        this.expandedData.next(expandedNodes);\n\n        return this.expandedData.value;\n    }\n\n    disconnect() {\n        // no op\n    }\n}\n\n","import { CollectionViewer, DataSource } from '@angular/cdk/collections';\nimport { BehaviorSubject, merge, Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\n\n/**\n * Data source for nested tree.\n *\n * The data source for nested tree doesn't have to consider node flattener, or the way to expand\n * or collapse. The expansion/collapsion will be handled by TreeControl and each non-leaf node.\n */\nexport class McTreeNestedDataSource<T> extends DataSource<T> {\n\n    get data() {\n        return this._data.value;\n    }\n\n    set data(value: T[]) {\n        this._data.next(value);\n    }\n\n    /* tslint:disable-next-line:naming-convention */\n    private _data = new BehaviorSubject<T[]>([]);\n\n    connect(collectionViewer: CollectionViewer): Observable<T[]> {\n        return merge(...[collectionViewer.viewChange, this._data])\n            .pipe(map(() => this.data));\n    }\n\n    disconnect() {\n        // no op\n    }\n}\n\n"],"names":["__extends","d","b","__","this","constructor","extendStatics","prototype","Object","create","setPrototypeOf","__proto__","Array","p","hasOwnProperty","McTreeNodeDef","_super","tslib_1.__extends","type","Directive","args","selector","inputs","providers","provide","CdkTreeNodeDef","useExisting","data","Input","McTreeNodePadding","_this","apply","arguments","baseLeftPadding","_indent","iconWidth","defineProperty","withIcon","paddingIndent","nodeLevel","treeNode","tree","treeControl","getLevel","level","leftPadding","ngOnInit","isExpandable","setPadding","CdkTreeNodePadding","indent","McTreeNodeToggleComponent","call","disabled","filterValue","pipe","map","value","length","subscribe","state","isExpanded","node","Component","template","host","class","(click)","[class.mc-disabled]","[class.mc-opened]","encapsulation","ViewEncapsulation","None","CdkTreeNodeToggle","CdkTree","CdkTreeNode","McTreeNodeToggleDirective","MC_TREE_OPTION_PARENT_COMPONENT","InjectionToken","McTreeOptionChange","source","isUserInput","uniqueIdCounter","McTreeOption","elementRef","changeDetectorRef","ngZone","onFocus","Subject","onBlur","_disabled","onSelectionChange","EventEmitter","_selected","_id","hasFocus","_value","newValue","coerceBooleanProperty","undefined","_showCheckbox","showCheckbox","isSelected","setSelected","multiple","getHostElement","textContent","trim","ngAfterContentInit","getValue","toggle","selected","selectionModel","select","deselect","markForCheck","focus","focusOrigin","nativeElement","next","option","Promise","resolve","then","blur","onStable","asObservable","take","run","getHeight","clientRects","getClientRects","height","emitSelectionChangeEvent","selectViaInteraction","$event","shiftKey","hasModifierKey","ctrlKey","setSelectedOptionsByClick","emit","exportAs","[attr.id]","[attr.tabindex]","[attr.disabled]","[class.mc-selected]","[class.mc-focused]","(focus)","(blur)","changeDetection","ChangeDetectionStrategy","OnPush","ElementRef","ChangeDetectorRef","NgZone","decorators","Inject","Output","MC_SELECTION_TREE_VALUE_ACCESSOR","NG_VALUE_ACCESSOR","forwardRef","McTreeSelection","multi","McTreeNavigationChange","McTreeSelectionChange","differs","tabIndex","resetFocusedItemOnBlur","navigationChange","selectionChange","multipleMode","userTabIndex","_autoSelect","_noUnselectLast","_tabIndex","destroy","onChange","onTouched","parseInt","MultipleMode","CHECKBOX","KEYBOARD","autoSelect","noUnselectLast","SelectionModel","merge","renderedOptions","rawValue","markOptionsForCheck","keyManager","FocusKeyManager","withVerticalOrientation","withHorizontalOrientation","change","takeUntil","activeItem","emitNavigationEvent","updateOptionsFocus","tabOut","allowFocusEscape","changed","getSelectedValues","notifyOnChanges","changes","options","resetOptions","updateTabIndex","forEach","selectedValue","ngOnDestroy","complete","setFirstItemActive","hasFocusedOption","setActiveItem","onKeyDown","event","setFocusOrigin","keyCode","DOWN_ARROW","setNextItemActive","UP_ARROW","setPreviousItemActive","LEFT_ARROW","collapse","preventDefault","RIGHT_ARROW","expand","SPACE","ENTER","toggleFocusedOption","HOME","END","setLastItemActive","PAGE_UP","setPreviousPageItemActive","PAGE_DOWN","setNextPageItemActive","setSelectedOptionsByKey","updateScrollSize","first","withScrollSize","Math","floor","setSelectedOptions","canDeselectLast","clear","emitChangeEvent","selectedOptionState","fromIndex","previousActiveItemIndex","toIndex","activeItemIndex","_a","toArray","slice","filter","item","renderedOption","setFocusedOption","focusedOption","renderNodeChanges","dataDiffer","viewContainer","parentData","nodeOutlet","arrayOfInstances","changeDetectorRefs","_embeddedViews","view","viewDef","def","nodes","nodeMatchedQueries","matchedQueryIds","nodeData","nodeIndex","push","instance","setTimeout","destroyed","detectChanges","reset","getItemHeight","writeValue","isArray","getMcSelectNonArrayValueError","setOptionsFromValues","registerOnChange","fn","registerOnTouched","setDisabledState","isDisabled","values","valuesToSelect","reduce","result","hasValue","concat","dropSubscriptions","listenToOptionsFocus","optionFocusSubscription","unsubscribe","optionBlurSubscription","optionFocusChanges","index","indexOf","isValidIndex","updateActiveItem","optionBlurChanges","some","(keydown)","(window:resize)","styles","IterableDiffers","String","Attribute","ViewChild","CdkTreeNodeOutlet","static","ContentChildren","MC_TREE_DIRECTIVES","McTreeModule","NgModule","imports","CommonModule","CdkTreeModule","McPseudoCheckboxModule","exports","declarations","McTreeFlattener","transformFunction","getChildren","flattenNode","resultNodes","parent","flatNode","childrenNodes","flattenChildren","children","child","flattenNodes","structuredData","expandFlattenedNodes","results","currentExpand","i","Expansion","Filter","McTreeFlatDataSource","treeFlattener","initialData","flattenedData","BehaviorSubject","expandedData","filteredData","_data","dataNodes","connect","collectionViewer","viewChange","expansionModel","McTreeDataSourceChangeTypes","changeObj","filterHandler","expansionHandler","filterModel","expandedNodes","disconnect","DataSource","McTreeNestedDataSource"],"mappings":"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"}