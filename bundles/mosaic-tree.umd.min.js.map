{"version":3,"file":"mosaic-tree.umd.min.js","sources":["../../node_modules/tslib/tslib.es6.js","../../src/lib/tree/node.ts","../../src/lib/tree/padding.ts","../../src/lib/tree/tree.ts","../../src/lib/tree/tree.module.ts","../../src/lib/tree/data-source/flat-data-source.ts","../../src/lib/tree/data-source/nested-data-source.ts"],"sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","import { Directive, Input } from '@angular/core';\n\nimport { CdkTreeNodeDef } from '@ptsecurity/cdk/tree';\n\n\n@Directive({\n    selector: '[mcTreeNodeDef]',\n    inputs: ['when: mcTreeNodeDefWhen'],\n    providers: [{ provide: CdkTreeNodeDef, useExisting: McTreeNodeDef }]\n})\nexport class McTreeNodeDef<T> extends CdkTreeNodeDef<T> {\n    @Input('mcTreeNode') data: T;\n}\n","import { AfterContentInit, ContentChild, Directive, Input } from '@angular/core';\nimport { CdkTreeNodePadding } from '@ptsecurity/cdk/tree';\nimport { McIcon } from '@ptsecurity/mosaic/icon';\n\n\n/**\n * Wrapper for the CdkTree padding with Material design styles.\n */\n@Directive({\n    selector: '[mcTreeNodePadding]',\n    providers: [{ provide: CdkTreeNodePadding, useExisting: McTreeNodePadding }]\n})\nexport class McTreeNodePadding<T> extends CdkTreeNodePadding<T> implements AfterContentInit {\n    get leftPadding(): number {\n        return (this._innerIcon ? 0 : this._iconWidth) + this._baseLeftPadding;\n    }\n\n    _baseLeftPadding: number = 6;\n    _iconWidth: number = 20;\n    _indent: number = 16;\n\n    /** The level of depth of the tree node. The padding will be `level * indent` pixels. */\n    @Input('mcTreeNodePadding') level: number;\n\n    /** The indent for each level. Default number 40px from material design menu sub-menu spec. */\n    @Input('matTreeNodePaddingIndent') indent: number;\n\n    @ContentChild(McIcon) _innerIcon: McIcon;\n\n    _paddingIndent(): string | null {\n        const nodeLevel = (this._treeNode.data && this._tree.treeControl.getLevel)\n            ? this._tree.treeControl.getLevel(this._treeNode.data)\n            : null;\n\n        const level = this._level || nodeLevel;\n\n        return level ? `${(level * this._indent) + this.leftPadding}px` : `${this._baseLeftPadding}px`;\n    }\n\n    ngAfterContentInit(): void {\n        this._setPadding();\n    }\n}\n","import {\n    AfterContentInit,\n    Attribute,\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component, ContentChildren, EventEmitter, forwardRef, Input, IterableDiffer,\n    IterableDiffers, Output, QueryList,\n    ViewChild,\n    ViewEncapsulation,\n    Directive, ElementRef, Inject\n} from '@angular/core';\nimport { NodeDef, ViewData } from '@angular/core/src/view';\n\nimport { SelectionModel } from '@ptsecurity/cdk/collections';\nimport { CdkTreeNode, CdkTree, CdkTreeNodeOutlet } from '@ptsecurity/cdk/tree';\n\nimport { CanDisable, HasTabIndex, mixinDisabled, mixinTabIndex, toBoolean } from '@ptsecurity/mosaic/core';\n\nimport { FocusKeyManager } from '@ptsecurity/cdk/a11y';\n\nimport { END, ENTER, HOME, LEFT_ARROW, PAGE_DOWN, PAGE_UP, RIGHT_ARROW, SPACE } from '@ptsecurity/cdk/keycodes';\n\n\n/**\n * Wrapper for the CdkTree node with Material design styles.\n */\n@Directive({\n    exportAs: 'mcTreeNodeOption',\n    selector: 'mc-tree-node-option',\n    host: {\n        tabindex: '-1',\n        '[class.mc-selected]': 'selected',\n        '[class.mc-focused]': '_hasFocus',\n        '[attr.aria-expanded]': 'isExpanded',\n        '[attr.aria-level]': 'role === \"treeitem\" ? level : null',\n        class: 'mc-tree-node',\n\n        '(focus)': '_handleFocus()',\n        '(blur)': '_handleBlur()',\n\n        '(click)': '_handleClick()'\n    },\n    providers: [\n        { provide: CdkTreeNode, useExisting: McTreeNodeOption }\n    ]\n})\nexport class McTreeNodeOption<T> extends CdkTreeNode<T> implements CanDisable {\n    @Input() role: 'treeitem' | 'group' = 'treeitem';\n\n    @Input()\n    get disabled() {\n        return this._disabled;\n    }\n\n    set disabled(value: any) {\n        const newValue = toBoolean(value);\n\n        if (newValue !== this._disabled) {\n            this._disabled = newValue;\n        }\n    }\n\n    @Input()\n    get selected(): boolean {\n        return this.treeSelection.selectedOptions && this.treeSelection.selectedOptions.isSelected(this) || false;\n    }\n\n    set selected(value: boolean) {\n        const isSelected = toBoolean(value);\n\n        if (isSelected !== this._selected) {\n            this.setSelected(isSelected);\n\n            // this.treeSelection._reportValueChange();\n        }\n    }\n\n    private _hasFocus: boolean = false;\n\n    private _disabled: boolean = false;\n    private _selected: boolean = false;\n\n    constructor(\n        protected _elementRef: ElementRef,\n        @Inject(forwardRef(() => McTreeSelection))\n        protected treeSelection: McTreeSelection<T>\n    ) {\n        super(_elementRef, treeSelection);\n    }\n\n    focus(): void {\n        this._elementRef.nativeElement.focus();\n\n        this.treeSelection.setFocusedOption(this);\n    }\n\n    toggle(): void {\n        this.selected = !this.selected;\n    }\n\n    setSelected(selected: boolean) {\n        if (this._selected === selected || !this.treeSelection.selectedOptions) { return; }\n\n        this._selected = selected;\n\n        if (selected) {\n            this.treeSelection.selectedOptions.select(this);\n        } else {\n            this.treeSelection.selectedOptions.deselect(this);\n        }\n\n        // this._changeDetector.markForCheck();\n    }\n\n    _handleFocus(): void {\n        if (this.disabled || this._hasFocus) { return; }\n\n        this._hasFocus = true;\n    }\n\n    _handleBlur(): void {\n        this._hasFocus = false;\n    }\n\n    _handleClick(): void {\n        if (this.disabled) { return; }\n\n        this.treeSelection.setFocusedOption(this);\n    }\n}\n\nexport const _McTreeSelectionBase = mixinTabIndex(mixinDisabled(CdkTree));\n\nexport class McTreeNavigationChange {\n    constructor(\n        public source: McTreeSelection<any>,\n        public option: McTreeNodeOption<any>\n    ) {}\n}\n\nexport class McTreeSelectionChange {\n    constructor(\n        public source: McTreeSelection<any>,\n        public option: McTreeNodeOption<any>\n    ) {}\n}\n\n@Component({\n    exportAs: 'mcTreeSelection',\n    selector: 'mc-tree-selection',\n    template: `<ng-container cdkTreeNodeOutlet></ng-container>`,\n    host: {\n        '[tabIndex]': 'tabIndex',\n        class: 'mc-tree',\n        role: 'tree-selection',\n        '(keydown)': '_onKeyDown($event)'\n    },\n    styleUrls: ['./tree.css'],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    providers: [{ provide: CdkTree, useExisting: McTreeSelection }]\n})\nexport class McTreeSelection<T> extends _McTreeSelectionBase<T>\n    implements AfterContentInit, CanDisable, HasTabIndex {\n    // Outlets within the tree's template where the dataNodes will be inserted.\n    @ViewChild(CdkTreeNodeOutlet) _nodeOutlet: CdkTreeNodeOutlet;\n\n    @ContentChildren(forwardRef(() => McTreeNodeOption)) options: QueryList<McTreeNodeOption<T>>;\n\n    _keyManager: FocusKeyManager<McTreeNodeOption<T>>;\n\n    selectedOptions: SelectionModel<McTreeNodeOption<T>>;\n\n    _disabled: boolean = false;\n    tabIndex: number;\n    multiple: boolean;\n    autoSelect: boolean;\n\n    @Input()\n    get disabled(): boolean {\n        return this._disabled;\n    }\n\n    set disabled(rawValue: boolean) {\n        const value = toBoolean(rawValue);\n\n        if (this._disabled !== value) {\n            this._disabled = value;\n\n            if (this._disabled) {\n                console.log('need disable all options');\n            } else {\n                console.log('need enable all options');\n            }\n        }\n    }\n\n    @Output() readonly navigationChange = new EventEmitter<McTreeNavigationChange>();\n\n    @Output() readonly selectionChange = new EventEmitter<McTreeSelectionChange>();\n\n    constructor(\n        _differs: IterableDiffers,\n        _changeDetectorRef: ChangeDetectorRef,\n        @Attribute('tabindex') tabIndex: string,\n        @Attribute('multiple') multiple: string,\n        @Attribute('auto-select') autoSelect: string\n    ) {\n        super(_differs, _changeDetectorRef);\n\n        this.tabIndex = parseInt(tabIndex) || 0;\n\n        this.multiple = multiple === null ? true : toBoolean(multiple);\n        this.autoSelect = autoSelect === null ? true : toBoolean(autoSelect);\n\n        this.selectedOptions = new SelectionModel<McTreeNodeOption<T>>(this.multiple);\n    }\n\n    _onKeyDown(event: KeyboardEvent) {\n        const keyCode = event.keyCode;\n\n        switch (keyCode) {\n            case LEFT_ARROW:\n                if (this._keyManager.activeItem) {\n                    this.treeControl.collapse(this._keyManager.activeItem.data);\n                }\n\n                event.preventDefault();\n\n                break;\n            case RIGHT_ARROW:\n                if (this._keyManager.activeItem) {\n                    this.treeControl.expand(this._keyManager.activeItem.data);\n                }\n                event.preventDefault();\n\n                break;\n            case SPACE:\n            case ENTER:\n                this.toggleFocusedOption();\n\n                event.preventDefault();\n\n                break;\n            case HOME:\n                console.log('need set focus on first node');\n                event.preventDefault();\n\n                break;\n            case END:\n                console.log('need set focus on last node');\n                event.preventDefault();\n\n                break;\n            case PAGE_UP:\n                console.log('need do scroll page and set focus on first in viewport');\n\n                event.preventDefault();\n\n                break;\n            case PAGE_DOWN:\n                console.log('need do scroll page and set focus on last in viewport');\n\n                event.preventDefault();\n\n                break;\n            default:\n                this._keyManager.onKeydown(event);\n        }\n    }\n\n    ngAfterContentInit(): void {\n        this._keyManager = new FocusKeyManager<McTreeNodeOption<T>>(this.options)\n            .withTypeAhead()\n            .withVerticalOrientation(true)\n            .withHorizontalOrientation(null);\n    }\n\n    setFocusedOption(option: McTreeNodeOption<T>): void {\n        this._keyManager.updateActiveItem(option);\n\n        if (this.autoSelect) {\n            this.options.forEach((item) => item.setSelected(false));\n            option.setSelected(true);\n        }\n\n        this._emitNavigationEvent(option);\n    }\n\n    // Toggles the selected state of the currently focused option.\n    toggleFocusedOption(): void {\n        const focusedIndex = this._keyManager.activeItemIndex;\n\n        if (focusedIndex != null && this._isValidIndex(focusedIndex)) {\n            const focusedOption: McTreeNodeOption<T> = this.options.toArray()[focusedIndex];\n\n            if (focusedOption && this._canUnselectLast(focusedOption)) {\n                focusedOption.toggle();\n\n                // Emit a change event because the focused option changed its state through user interaction.\n                this._emitChangeEvent(focusedOption);\n            }\n        }\n    }\n\n    renderNodeChanges(\n        data: T[],\n        dataDiffer: IterableDiffer<T> = this._dataDiffer,\n        viewContainer: any = this._nodeOutlet.viewContainer,\n        parentData?: T\n    ) {\n        super.renderNodeChanges(data, dataDiffer, viewContainer, parentData);\n\n        const arrayOfInstances = [];\n\n        viewContainer._embeddedViews.forEach((view: ViewData) => {\n            const viewDef = view.def;\n\n            viewDef.nodes.forEach((node: NodeDef) => {\n                if (viewDef.nodeMatchedQueries === node.matchedQueryIds) {\n                    const nodeData: any = view.nodes[node.nodeIndex];\n\n                    arrayOfInstances.push(nodeData.instance as never);\n                }\n            });\n        });\n\n        if (this.options) {\n            this.options.reset(arrayOfInstances);\n            this.options.notifyOnChanges();\n        }\n    }\n\n    _emitNavigationEvent(option: McTreeNodeOption<T>): void {\n        this.navigationChange.emit(new McTreeNavigationChange(this, option));\n    }\n\n    _emitChangeEvent(option: McTreeNodeOption<T>): void {\n        this.selectionChange.emit(new McTreeNavigationChange(this, option));\n    }\n\n    /**\n     * Utility to ensure all indexes are valid.\n     * @param index The index to be checked.\n     * @returns True if the index is valid for our list of options.\n     */\n    private _isValidIndex(index: number): boolean {\n        return index >= 0 && index < this.options.length;\n    }\n\n    private _canUnselectLast(_option: McTreeNodeOption<T>): boolean {\n        return true;\n        // return !(this.noUnselect && this.selectedOptions.selected.length === 1 && listOption.selected);\n    }\n}\n\n","import { NgModule } from '@angular/core';\n\nimport { CommonModule } from '@angular/common';\nimport { CdkTreeModule } from '@ptsecurity/cdk/tree';\n\nimport { McTreeNodeDef } from './node';\nimport { McTreeNodePadding } from './padding';\nimport { McTreeSelection, McTreeNodeOption } from './tree';\n\n\nconst MC_TREE_DIRECTIVES = [\n    McTreeNodeDef,\n    McTreeNodePadding,\n    McTreeSelection,\n    McTreeNodeOption\n];\n\n@NgModule({\n    imports: [CommonModule, CdkTreeModule],\n    exports: MC_TREE_DIRECTIVES,\n    declarations: MC_TREE_DIRECTIVES\n})\nexport class McTreeModule {}\n","import { ICollectionViewer, DataSource } from '@ptsecurity/cdk/collections';\nimport { FlatTreeControl, ITreeControl } from '@ptsecurity/cdk/tree';\nimport { BehaviorSubject, merge, Observable } from 'rxjs';\nimport { map, take } from 'rxjs/operators';\n\n\n/**\n * Tree flattener to convert a normal type of node to node with children & level information.\n * Transform nested nodes of type `T` to flattened nodes of type `F`.\n *\n * For example, the input data of type `T` is nested, and contains its children data:\n *   SomeNode: {\n *     key: 'Fruits',\n *     children: [\n *       NodeOne: {\n *         key: 'Apple',\n *       },\n *       NodeTwo: {\n *        key: 'Pear',\n *      }\n *    ]\n *  }\n *  After flattener flatten the tree, the structure will become\n *  SomeNode: {\n *    key: 'Fruits',\n *    expandable: true,\n *    level: 1\n *  },\n *  NodeOne: {\n *    key: 'Apple',\n *    expandable: false,\n *    level: 2\n *  },\n *  NodeTwo: {\n *   key: 'Pear',\n *   expandable: false,\n *   level: 2\n * }\n * and the output flattened type is `F` with additional information.\n */\nexport class McTreeFlattener<T, F> {\n\n    constructor(public transformFunction: (node: T, level: number) => F,\n                public getLevel: (node: F) => number,\n                public isExpandable: (node: F) => boolean,\n                public getChildren: (node: T) => Observable<T[]>) {\n    }\n\n    _flattenNode(node: T, level: number,\n                 resultNodes: F[], parentMap: boolean[]): F[] {\n        const flatNode = this.transformFunction(node, level);\n        resultNodes.push(flatNode);\n\n        if (this.isExpandable(flatNode)) {\n            this.getChildren(node).pipe(take(1)).subscribe((children) => {\n                children.forEach((child, index) => {\n                    const childParentMap: boolean[] = parentMap.slice();\n                    childParentMap.push(index !== children.length - 1);\n                    this._flattenNode(child, level + 1, resultNodes, childParentMap);\n                });\n            });\n        }\n\n        return resultNodes;\n    }\n\n    /**\n     * Flatten a list of node type T to flattened version of node F.\n     * Please note that type T may be nested, and the length of `structuredData` may be different\n     * from that of returned list `F[]`.\n     */\n    flattenNodes(structuredData: T[]): F[] {\n        const resultNodes: F[] = [];\n        structuredData.forEach((node) => this._flattenNode(node, 0, resultNodes, []));\n\n        return resultNodes;\n    }\n\n    /**\n     * Expand flattened node with current expansion status.\n     * The returned list may have different length.\n     */\n    expandFlattenedNodes(nodes: F[], treeControl: ITreeControl<F>): F[] {\n        const results: F[] = [];\n        const currentExpand: boolean[] = [];\n        currentExpand[0] = true;\n\n        nodes.forEach((node) => {\n            let expand = true;\n            for (let i = 0; i <= this.getLevel(node); i++) {\n                expand = expand && currentExpand[i];\n            }\n\n            if (expand) { results.push(node); }\n\n            if (this.isExpandable(node)) {\n                currentExpand[this.getLevel(node) + 1] = treeControl.isExpanded(node);\n            }\n        });\n\n        return results;\n    }\n}\n\n\n/**\n * Data source for flat tree.\n * The data source need to handle expansion/collapsion of the tree node and change the data feed\n * to `McTree`.\n * The nested tree nodes of type `T` are flattened through `MсTreeFlattener`, and converted\n * to type `F` for `McTree` to consume.\n */\nexport class McTreeFlatDataSource<T, F> extends DataSource<F> {\n    _flattenedData = new BehaviorSubject<F[]>([]);\n\n    _expandedData = new BehaviorSubject<F[]>([]);\n\n    _data: BehaviorSubject<T[]>;\n\n    get data() {\n        return this._data.value;\n    }\n\n    set data(value: T[]) {\n        this._data.next(value);\n        this._flattenedData.next(this.treeFlattener.flattenNodes(this.data));\n        this.treeControl.dataNodes = this._flattenedData.value;\n    }\n\n    constructor(private treeControl: FlatTreeControl<F>,\n                private treeFlattener: McTreeFlattener<T, F>,\n                initialData: T[] = []) {\n        super();\n        this._data = new BehaviorSubject<T[]>(initialData);\n    }\n\n    connect(collectionViewer: ICollectionViewer): Observable<F[]> {\n        const changes = [\n            collectionViewer.viewChange,\n            this.treeControl.expansionModel.onChange!,\n            this._flattenedData\n        ];\n\n        return merge(...changes).pipe(map(() => {\n            this._expandedData.next(\n                this.treeFlattener.expandFlattenedNodes(this._flattenedData.value, this.treeControl));\n\n            return this._expandedData.value;\n        }));\n    }\n\n    disconnect() {\n        // no op\n    }\n}\n\n","import { ICollectionViewer, DataSource } from '@ptsecurity/cdk/collections';\nimport { BehaviorSubject, merge, Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\n\n/**\n * Data source for nested tree.\n *\n * The data source for nested tree doesn't have to consider node flattener, or the way to expand\n * or collapse. The expansion/collapsion will be handled by ITreeControl and each non-leaf node.\n */\nexport class McTreeNestedDataSource<T> extends DataSource<T> {\n    _data = new BehaviorSubject<T[]>([]);\n\n    /**\n     * Data for the nested tree\n     */\n    get data() {\n        return this._data.value;\n    }\n\n    set data(value: T[]) {\n        this._data.next(value);\n    }\n\n    connect(collectionViewer: ICollectionViewer): Observable<T[]> {\n        return merge(...[collectionViewer.viewChange, this._data])\n            .pipe(map(() => this.data));\n    }\n\n    disconnect() {\n        // no op\n    }\n}\n\n"],"names":["__extends","d","b","__","this","constructor","extendStatics","prototype","Object","create","setPrototypeOf","__proto__","Array","p","hasOwnProperty","tslib_1.__extends","McTreeNodeDef","_super","type","Directive","args","selector","inputs","providers","provide","CdkTreeNodeDef","useExisting","data","Input","_this","_baseLeftPadding","_iconWidth","_indent","McTreeNodePadding","defineProperty","_innerIcon","_paddingIndent","nodeLevel","_treeNode","_tree","treeControl","getLevel","level","_level","leftPadding","ngAfterContentInit","_setPadding","CdkTreeNodePadding","indent","ContentChild","McIcon","McTreeNodeOption","_elementRef","treeSelection","call","role","_hasFocus","_disabled","_selected","value","newValue","toBoolean","selectedOptions","isSelected","setSelected","focus","nativeElement","setFocusedOption","toggle","selected","select","deselect","_handleFocus","disabled","_handleBlur","_handleClick","exportAs","host","tabindex","[class.mc-selected]","[class.mc-focused]","[attr.aria-expanded]","[attr.aria-level]","class","(focus)","(blur)","(click)","CdkTreeNode","ElementRef","McTreeSelection","decorators","Inject","forwardRef","_McTreeSelectionBase","mixinTabIndex","mixinDisabled","CdkTree","McTreeNavigationChange","source","option","McTreeSelectionChange","_differs","_changeDetectorRef","tabIndex","multiple","autoSelect","navigationChange","EventEmitter","selectionChange","parseInt","SelectionModel","rawValue","console","log","_onKeyDown","event","keyCode","LEFT_ARROW","_keyManager","activeItem","collapse","preventDefault","RIGHT_ARROW","expand","SPACE","ENTER","toggleFocusedOption","HOME","END","PAGE_UP","PAGE_DOWN","onKeydown","FocusKeyManager","options","withTypeAhead","withVerticalOrientation","withHorizontalOrientation","updateActiveItem","forEach","item","_emitNavigationEvent","focusedIndex","activeItemIndex","_isValidIndex","focusedOption","toArray","_canUnselectLast","_emitChangeEvent","renderNodeChanges","dataDiffer","viewContainer","parentData","_dataDiffer","_nodeOutlet","arrayOfInstances","_embeddedViews","view","viewDef","def","nodes","node","nodeMatchedQueries","matchedQueryIds","nodeData","nodeIndex","push","reset","notifyOnChanges","emit","index","length","_option","Component","template","[tabIndex]","(keydown)","styles","encapsulation","ViewEncapsulation","None","changeDetection","ChangeDetectionStrategy","OnPush","IterableDiffers","ChangeDetectorRef","undefined","Attribute","ViewChild","CdkTreeNodeOutlet","ContentChildren","Output","MC_TREE_DIRECTIVES","NgModule","imports","CommonModule","CdkTreeModule","exports","declarations","McTreeModule","McTreeFlattener","transformFunction","isExpandable","getChildren","_flattenNode","resultNodes","parentMap","flatNode","pipe","take","subscribe","children","child","childParentMap","slice","flattenNodes","structuredData","expandFlattenedNodes","results","currentExpand","i","isExpanded","McTreeFlatDataSource","treeFlattener","initialData","_flattenedData","BehaviorSubject","_expandedData","_data","next","dataNodes","connect","collectionViewer","changes","viewChange","expansionModel","merge","apply","map","disconnect","DataSource","McTreeNestedDataSource"],"mappings":"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"}