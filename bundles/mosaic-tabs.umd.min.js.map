{"version":3,"file":"mosaic-tabs.umd.min.js","sources":["../../src/lib/tabs/tab-nav-bar/tab-nav-bar.ts","../../src/lib/tabs/tabs.module.ts","../../node_modules/tslib/tslib.es6.js","../../src/lib/tabs/tab-content.ts","../../src/lib/tabs/tab-label.ts","../../src/lib/tabs/tab.ts","../../src/lib/tabs/tabs-animations.ts","../../src/lib/tabs/tab-body.ts","../../src/lib/tabs/tab-label-wrapper.ts","../../src/lib/tabs/tab-header.ts","../../src/lib/tabs/tab-group.ts"],"sourcesContent":["import {\n    Attribute,\n    ChangeDetectionStrategy,\n    Component,\n    Directive,\n    ElementRef,\n    Input,\n    OnDestroy,\n    ViewEncapsulation\n} from '@angular/core';\nimport { FocusMonitor } from '@ptsecurity/cdk/a11y';\nimport {\n    CanColor,\n    CanColorCtor,\n    CanDisable,\n    CanDisableCtor,\n    HasTabIndex,\n    HasTabIndexCtor,\n    mixinColor,\n    mixinDisabled,\n    mixinTabIndex\n} from '@ptsecurity/mosaic/core';\n\n\n// Boilerplate for applying mixins to McTabNav.\n/** @docs-private */\nexport class McTabNavBase {\n    // tslint:disable-next-line:naming-convention\n    constructor(public _elementRef: ElementRef) {}\n}\nexport const mcTabNavMixinBase: CanColorCtor &\n    typeof McTabNavBase = mixinColor(McTabNavBase);\n\n/**\n * Navigation component matching the styles of the tab group header.\n */\n@Component({\n    selector: '[mc-tab-nav-bar]',\n    exportAs: 'mcTabNavBar, mcTabNav',\n    inputs: ['color'],\n    templateUrl: 'tab-nav-bar.html',\n    styleUrls: ['tab-nav-bar.css'],\n    host: { class: 'mc-tab-nav-bar' },\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class McTabNav extends mcTabNavMixinBase\n    implements CanColor {\n        constructor(elementRef: ElementRef) {\n            super(elementRef);\n        }\n     }\n\n// Boilerplate for applying mixins to McTabLink.\nexport class McTabLinkBase {}\nexport const mcTabLinkMixinBase: HasTabIndexCtor & CanDisableCtor &\n    typeof McTabLinkBase = mixinTabIndex(mixinDisabled(McTabLinkBase));\n\n/**\n * Link inside of a `mc-tab-nav-bar`.\n */\n@Directive({\n    selector: '[mc-tab-link], [mcTabLink]',\n    exportAs: 'mcTabLink',\n    inputs: ['disabled', 'tabIndex'],\n    host: {\n        class: 'mc-tab-link',\n        '[attr.aria-current]': 'active',\n        '[attr.aria-disabled]': 'disabled.toString()',\n        '[attr.tabIndex]': 'tabIndex',\n        '[class.mc-disabled]': 'disabled',\n        '[class.mc-active]': 'active'\n    }\n})\nexport class McTabLink extends mcTabLinkMixinBase\n    implements OnDestroy, CanDisable, HasTabIndex {\n    /** Whether the link is active. */\n    @Input()\n    get active(): boolean {\n        return this.isActive;\n    }\n    set active(value: boolean) {\n        if (value !== this.isActive) {\n            this.isActive = value;\n        }\n    }\n\n    /** Whether the tab link is active or not. */\n    protected isActive: boolean = false;\n\n    constructor(\n        public elementRef: ElementRef,\n        @Attribute('tabindex') tabIndex: string,\n        private focusMonitor: FocusMonitor\n    ) {\n        super();\n\n        this.tabIndex = parseInt(tabIndex) || 0;\n        this.focusMonitor.monitor(this.elementRef.nativeElement);\n    }\n\n    ngOnDestroy() {\n        this.focusMonitor.stopMonitoring(this.elementRef.nativeElement);\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { A11yModule } from '@ptsecurity/cdk/a11y';\nimport { PortalModule } from '@ptsecurity/cdk/portal';\nimport { McCommonModule } from '@ptsecurity/mosaic/core';\n\nimport { McTab } from './tab';\nimport { McTabBody, McTabBodyPortal } from './tab-body';\nimport { McTabContent } from './tab-content';\nimport {\n    McTabGroup,\n    McLightTabsCssStyler,\n    McAlignTabsCenterCssStyler,\n    McAlignTabsEndCssStyler,\n    McStretchTabsCssStyler\n} from './tab-group';\nimport { McTabHeader } from './tab-header';\nimport { McTabLabel } from './tab-label';\nimport { McTabLabelWrapper } from './tab-label-wrapper';\nimport { McTabLink, McTabNav } from './tab-nav-bar/tab-nav-bar';\n\n\n@NgModule({\n    imports: [\n        CommonModule,\n        McCommonModule,\n        PortalModule,\n        A11yModule,\n        BrowserAnimationsModule\n    ],\n    // Don't export all components because some are only to be used internally.\n    exports: [\n        McCommonModule,\n        McTabGroup,\n        McTabLabel,\n        McTab,\n        McTabNav,\n        McTabLink,\n        McTabContent,\n        McLightTabsCssStyler,\n        McAlignTabsCenterCssStyler,\n        McAlignTabsEndCssStyler,\n        McStretchTabsCssStyler\n    ],\n    declarations: [\n        McTabGroup,\n        McTabLabel,\n        McTab,\n        McTabLabelWrapper,\n        McTabNav,\n        McTabLink,\n        McTabBody,\n        McTabBodyPortal,\n        McTabHeader,\n        McTabContent,\n        McLightTabsCssStyler,\n        McAlignTabsCenterCssStyler,\n        McAlignTabsEndCssStyler,\n        McStretchTabsCssStyler\n    ]\n})\nexport class McTabsModule {}\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","import { Directive, TemplateRef } from '@angular/core';\n\n\n/** Decorates the `ng-template` tags and reads out the template from it. */\n@Directive({ selector: '[mcTabContent]' })\nexport class McTabContent {\n    constructor(public template: TemplateRef<any>) { }\n}\n","import { Directive } from '@angular/core';\nimport { CdkPortal } from '@ptsecurity/cdk/portal';\n\n\n/** Used to flag tab labels for use with the portal directive */\n@Directive({\n    selector: '[mc-tab-label], [mcTabLabel]'\n})\nexport class McTabLabel extends CdkPortal {}\n\n// TODO: workaround for https://github.com/angular/material2/issues/12760\n(McTabLabel as any).ctorParameters = () => (CdkPortal as any).ctorParameters;\n","import {\n    ChangeDetectionStrategy,\n    Component,\n    ContentChild,\n    Input,\n    OnChanges,\n    OnDestroy,\n    OnInit,\n    SimpleChanges,\n    TemplateRef,\n    ViewChild,\n    ViewContainerRef,\n    ViewEncapsulation\n} from '@angular/core';\nimport { TemplatePortal } from '@ptsecurity/cdk/portal';\nimport {\n    CanDisable,\n    CanDisableCtor,\n    mixinDisabled\n} from '@ptsecurity/mosaic/core';\nimport { Subject } from 'rxjs';\n\nimport { McTabContent } from './tab-content';\nimport { McTabLabel } from './tab-label';\n\n\nexport class McTabBase {}\nexport const mcTabMixinBase: CanDisableCtor & typeof McTabBase = mixinDisabled(\n    McTabBase\n);\n\n@Component({\n    selector: 'mc-tab',\n    // Create a template for the content of the <mc-tab> so that we can grab a reference to this\n    // TemplateRef and use it in a Portal to render the tab content in the appropriate place in the\n    // tab-group.\n    template: '<ng-template><ng-content></ng-content></ng-template>',\n    inputs: ['disabled'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n    exportAs: 'mcTab'\n})\nexport class McTab extends mcTabMixinBase\n    implements OnInit, CanDisable, OnChanges, OnDestroy {\n    /** @docs-private */\n    get content(): TemplatePortal | null {\n        return this.contentPortal;\n    }\n    /** Content for the tab label given by `<ng-template mc-tab-label>`. */\n    @ContentChild(McTabLabel)\n    templateLabel: McTabLabel;\n\n    /**\n     * Template provided in the tab content that will be used if present, used to enable lazy-loading\n     */\n    @ContentChild(McTabContent, { read: TemplateRef })\n    explicitContent: TemplateRef<any>;\n\n    /** Template inside the McTab view that contains an `<ng-content>`. */\n    @ViewChild(TemplateRef)\n    implicitContent: TemplateRef<any>;\n\n    /** Plain text label for the tab, used when there is no template label. */\n    @Input('label')\n    textLabel: string = '';\n\n    /** Aria label for the tab. */\n    @Input('aria-label')\n    ariaLabel: string;\n\n    /**\n     * Reference to the element that the tab is labelled by.\n     * Will be cleared if `aria-label` is set at the same time.\n     */\n    @Input('aria-labelledby')\n    ariaLabelledby: string;\n\n    /** Emits whenever the internal state of the tab changes. */\n    readonly stateChanges = new Subject<void>();\n\n    /**\n     * The relatively indexed position where 0 represents the center, negative is left, and positive\n     * represents the right.\n     */\n    position: number | null = null;\n\n    /**\n     * The initial relatively index origin of the tab if it was created and selected after there\n     * was already a selected tab. Provides context of what position the tab should originate from.\n     */\n    origin: number | null = null;\n\n    /**\n     * Whether the tab is currently active.\n     */\n    isActive = false;\n\n    /** Portal that will be the hosted content of the tab */\n    private contentPortal: TemplatePortal | null = null;\n\n    constructor(private viewContainerRef: ViewContainerRef) {\n        super();\n    }\n\n    ngOnChanges(changes: SimpleChanges): void {\n        if (\n            changes.hasOwnProperty('textLabel') ||\n            changes.hasOwnProperty('disabled')\n        ) {\n            this.stateChanges.next();\n        }\n    }\n\n    ngOnDestroy(): void {\n        this.stateChanges.complete();\n    }\n\n    ngOnInit(): void {\n        this.contentPortal = new TemplatePortal(\n            this.explicitContent || this.implicitContent,\n            this.viewContainerRef\n        );\n    }\n}\n","import {\n    animate,\n    state,\n    style,\n    transition,\n    trigger,\n    AnimationTriggerMetadata\n} from '@angular/animations';\n\n\nexport const mcTabsAnimations: {\n    readonly translateTab: AnimationTriggerMetadata;\n} = {\n    /** Animation translates a tab along the X axis. */\n    translateTab: trigger('translateTab', [\n        // Note: transitions to `none` instead of 0, because some browsers might blur the content.\n        state(\n            'center, void, left-origin-center, right-origin-center',\n            style({ transform: 'none' })\n        ),\n\n        // If the tab is either on the left or right, we additionally add a `min-height` of 1px\n        // in order to ensure that the element has a height before its state changes. This is\n        // necessary because Chrome does seem to skip the transition in RTL mode if the element does\n        // not have a static height and is not rendered. See related issue: #9465\n        state(\n            'left',\n            style({ transform: 'translate3d(-100%, 0, 0)', minHeight: '1px' })\n        ),\n        state(\n            'right',\n            style({ transform: 'translate3d(100%, 0, 0)', minHeight: '1px' })\n        ),\n\n        transition(\n            '* => left, * => right, left => center, right => center',\n            animate('{{animationDuration}} cubic-bezier(0.35, 0, 0.25, 1)')\n        ),\n        transition('void => left-origin-center', [\n            style({ transform: 'translate3d(-100%, 0, 0)' }),\n            animate('{{animationDuration}} cubic-bezier(0.35, 0, 0.25, 1)')\n        ]),\n        transition('void => right-origin-center', [\n            style({ transform: 'translate3d(100%, 0, 0)' }),\n            animate('{{animationDuration}} cubic-bezier(0.35, 0, 0.25, 1)')\n        ])\n    ])\n};\n","import { AnimationEvent } from '@angular/animations';\nimport {\n    Component,\n    ChangeDetectorRef,\n    Input,\n    Inject,\n    Output,\n    EventEmitter,\n    OnDestroy,\n    OnInit,\n    ElementRef,\n    Directive,\n    Optional,\n    ViewEncapsulation,\n    ChangeDetectionStrategy,\n    ComponentFactoryResolver,\n    ViewContainerRef,\n    forwardRef,\n    ViewChild\n} from '@angular/core';\nimport { Directionality, Direction } from '@ptsecurity/cdk/bidi';\nimport { TemplatePortal, CdkPortalOutlet, PortalHostDirective } from '@ptsecurity/cdk/portal';\nimport { Subscription } from 'rxjs';\nimport { startWith } from 'rxjs/operators';\n\nimport { mcTabsAnimations } from './tabs-animations';\n\n\n/**\n * These position states are used internally as animation states for the tab body. Setting the\n * position state to left, right, or center will transition the tab body from its current\n * position to its respective state. If there is not current position (void, in the case of a new\n * tab body), then there will be no transition animation to its state.\n *\n * In the case of a new tab body that should immediately be centered with an animating transition,\n * then left-origin-center or right-origin-center can be used, which will use left or right as its\n * psuedo-prior state.\n */\nexport type McTabBodyPositionState =\n    'left' | 'center' | 'right' | 'left-origin-center' | 'right-origin-center';\n\n/**\n * The origin state is an internally used state that is set on a new tab body indicating if it\n * began to the left or right of the prior selected index. For example, if the selected index was\n * set to 1, and a new tab is created and selected at index 2, then the tab body would have an\n * origin of right because its index was greater than the prior selected index.\n */\nexport type McTabBodyOriginState = 'left' | 'right';\n\n/**\n * The portal host directive for the contents of the tab.\n * @docs-private\n */\n@Directive({\n    selector: '[mcTabBodyHost]'\n})\nexport class McTabBodyPortal extends CdkPortalOutlet implements OnInit, OnDestroy {\n    /** Subscription to events for when the tab body begins centering. */\n    private centeringSub = Subscription.EMPTY;\n    /** Subscription to events for when the tab body finishes leaving from center position. */\n    private leavingSub = Subscription.EMPTY;\n\n    constructor(\n        componentFactoryResolver: ComponentFactoryResolver,\n        viewContainerRef: ViewContainerRef,\n        @Inject(forwardRef(() => McTabBody)) private host: McTabBody) {\n        super(componentFactoryResolver, viewContainerRef);\n    }\n\n    /** Set initial visibility or set up subscription for changing visibility. */\n    ngOnInit(): void {\n        super.ngOnInit();\n\n        this.centeringSub = this.host.beforeCentering\n            .pipe(startWith(this.host.isCenterPosition(this.host.bodyPosition)))\n            .subscribe((isCentering: boolean) => {\n                if (isCentering && !this.hasAttached()) {\n                    this.attach(this.host.content);\n                }\n            });\n\n        this.leavingSub = this.host.afterLeavingCenter.subscribe(() => {\n            this.detach();\n        });\n    }\n\n    /** Clean up centering subscription. */\n    ngOnDestroy(): void {\n        super.ngOnDestroy();\n        this.centeringSub.unsubscribe();\n        this.leavingSub.unsubscribe();\n    }\n}\n\n/**\n * Wrapper for the contents of a tab.\n * @docs-private\n */\n@Component({\n    selector: 'mc-tab-body',\n    templateUrl: 'tab-body.html',\n    styleUrls: ['tab-body.css'],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    animations: [mcTabsAnimations.translateTab],\n    host: {\n        class: 'mc-tab-body'\n    }\n})\nexport class McTabBody implements OnInit, OnDestroy {\n\n    /** The shifted index position of the tab body, where zero represents the active center tab. */\n    @Input()\n    set position(position: number) {\n        this.positionIndex = position;\n        this.computePositionAnimationState();\n    }\n\n    /** Tab body position state. Used by the animation trigger for the current state. */\n    bodyPosition: McTabBodyPositionState;\n\n    /** Event emitted when the tab begins to animate towards the center as the active tab. */\n    @Output() readonly onCentering: EventEmitter<number> = new EventEmitter<number>();\n\n    /** Event emitted before the centering of the tab begins. */\n    @Output() readonly beforeCentering: EventEmitter<boolean> = new EventEmitter<boolean>();\n\n    /** Event emitted before the centering of the tab begins. */\n    @Output() readonly afterLeavingCenter: EventEmitter<boolean> = new EventEmitter<boolean>();\n\n    /** Event emitted when the tab completes its animation towards the center. */\n    @Output() readonly onCentered: EventEmitter<void> = new EventEmitter<void>(true);\n\n    /** The portal host inside of this container into which the tab body content will be loaded. */\n    @ViewChild(PortalHostDirective) portalHost: PortalHostDirective;\n\n    /** The tab body content to display. */\n    @Input('content') content: TemplatePortal;\n\n    /** Position that will be used when the tab is immediately becoming visible after creation. */\n    @Input() origin: number;\n\n    // Note that the default value will always be overwritten by `McTabBody`, but we need one\n    // anyway to prevent the animations module from throwing an error if the body is used on its own.\n    /** Duration for the tab's animation. */\n    @Input() animationDuration: string = '0ms';\n\n    /** Current position of the tab-body in the tab-group. Zero means that the tab is visible. */\n    private positionIndex: number;\n\n    /** Subscription to the directionality change observable. */\n    private dirChangeSubscription = Subscription.EMPTY;\n\n    constructor(private elementRef: ElementRef<HTMLElement>,\n                @Optional() private dir: Directionality,\n                changeDetectorRef: ChangeDetectorRef) {\n\n        if (this.dir && changeDetectorRef) {\n            this.dirChangeSubscription = this.dir.change.subscribe((direction: Direction) => {\n                this.computePositionAnimationState(direction);\n                changeDetectorRef.markForCheck();\n            });\n        }\n    }\n\n    /**\n     * After initialized, check if the content is centered and has an origin. If so, set the\n     * special position states that transition the tab from the left or right before centering.\n     */\n    ngOnInit() {\n        if (this.bodyPosition === 'center' && this.origin != null) {\n            this.bodyPosition = this.computePositionFromOrigin();\n        }\n    }\n\n    ngOnDestroy() {\n        this.dirChangeSubscription.unsubscribe();\n    }\n\n    onTranslateTabStarted(e: AnimationEvent): void {\n        const isCentering = this.isCenterPosition(e.toState);\n        this.beforeCentering.emit(isCentering);\n        if (isCentering) {\n            this.onCentering.emit(this.elementRef.nativeElement.clientHeight);\n        }\n    }\n\n    onTranslateTabComplete(e: AnimationEvent): void {\n        // If the transition to the center is complete, emit an event.\n        if (this.isCenterPosition(e.toState) && this.isCenterPosition(this.bodyPosition)) {\n            this.onCentered.emit();\n        }\n\n        if (this.isCenterPosition(e.fromState) && !this.isCenterPosition(this.bodyPosition)) {\n            this.afterLeavingCenter.emit();\n        }\n    }\n\n    /** The text direction of the containing app. */\n    getLayoutDirection(): Direction {\n        return this.dir && this.dir.value === 'rtl' ? 'rtl' : 'ltr';\n    }\n\n    /** Whether the provided position state is considered center, regardless of origin. */\n    isCenterPosition(position: McTabBodyPositionState | string): boolean {\n        return position === 'center' ||\n            position === 'left-origin-center' ||\n            position === 'right-origin-center';\n    }\n\n    /** Computes the position state that will be used for the tab-body animation trigger. */\n    private computePositionAnimationState(dir: Direction = this.getLayoutDirection()) {\n        if (this.positionIndex < 0) {\n            this.bodyPosition = dir === 'ltr' ? 'left' : 'right';\n        } else if (this.positionIndex > 0) {\n            this.bodyPosition = dir === 'ltr' ? 'right' : 'left';\n        } else {\n            this.bodyPosition = 'center';\n        }\n    }\n\n    /**\n     * Computes the position state based on the specified origin position. This is used if the\n     * tab is becoming visible immediately after creation.\n     */\n    private computePositionFromOrigin(): McTabBodyPositionState {\n        const dir = this.getLayoutDirection();\n\n        if ((dir === 'ltr' && this.origin <= 0) || (dir === 'rtl' && this.origin > 0)) {\n            return 'left-origin-center';\n        }\n\n        return 'right-origin-center';\n    }\n}\n","import { Directive, ElementRef } from '@angular/core';\nimport {\n    CanDisable,\n    CanDisableCtor,\n    mixinDisabled\n} from '@ptsecurity/mosaic/core';\n\n\n// Boilerplate for applying mixins to McTabLabelWrapper.\n/** @docs-private */\nexport class McTabLabelWrapperBase {}\nexport const mcTabLabelWrapperMixinBase: CanDisableCtor &\n    typeof McTabLabelWrapperBase = mixinDisabled(McTabLabelWrapperBase);\n\n/**\n * Used in the `mc-tab-group` view to display tab labels.\n * @docs-private\n */\n@Directive({\n    selector: '[mcTabLabelWrapper]',\n    inputs: ['disabled'],\n    host: {\n        '[class.mc-disabled]': 'disabled',\n        '[attr.aria-disabled]': '!!disabled'\n    }\n})\nexport class McTabLabelWrapper extends mcTabLabelWrapperMixinBase implements CanDisable {\n    constructor(public elementRef: ElementRef) {\n        super();\n    }\n\n    /** Sets focus on the wrapper element */\n    focus(): void {\n        this.elementRef.nativeElement.focus();\n    }\n\n    getOffsetLeft(): number {\n        return this.elementRef.nativeElement.offsetLeft;\n    }\n\n    getOffsetWidth(): number {\n        return this.elementRef.nativeElement.offsetWidth;\n    }\n}\n","import {\n    AfterContentChecked,\n    AfterContentInit,\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    ContentChildren,\n    ElementRef,\n    EventEmitter,\n    Input,\n    NgZone,\n    OnDestroy,\n    Optional,\n    Output,\n    QueryList,\n    ViewChild,\n    ViewEncapsulation\n} from '@angular/core';\nimport { FocusKeyManager } from '@ptsecurity/cdk/a11y';\nimport { Direction, Directionality } from '@ptsecurity/cdk/bidi';\nimport { coerceNumberProperty } from '@ptsecurity/cdk/coercion';\nimport { END, ENTER, HOME, SPACE } from '@ptsecurity/cdk/keycodes';\nimport { ViewportRuler } from '@ptsecurity/cdk/scrolling';\nimport { merge, of as observableOf, Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\n\nimport { McTabLabelWrapper } from './tab-label-wrapper';\n\n\nconst VIEWPORT_THROTTLE_TIME = 150;\nconst SCROLL_DISTANCE_DELIMITER = 3;\n\n\n/**\n * The directions that scrolling can go in when the header's tabs exceed the header width. 'After'\n * will scroll the header towards the end of the tabs list and 'before' will scroll towards the\n * beginning of the list.\n */\nexport type ScrollDirection = 'after' | 'before';\n\n/**\n * The distance in pixels that will be overshot when scrolling a tab label into view. This helps\n * provide a small affordance to the label next to it.\n */\nconst EXAGGERATED_OVERSCROLL = 60;\n\n// Boilerplate for applying mixins to McTabHeader.\n/** @docs-private */\nexport class McTabHeaderBase {}\n\n/**\n * The header of the tab group which displays a list of all the tabs in the tab group.\n * When the tabs list's width exceeds the width of the header container,\n * then arrows will be displayed to allow the user to scroll\n * left and right across the header.\n * @docs-private\n */\n@Component({\n    selector: 'mc-tab-header',\n    templateUrl: 'tab-header.html',\n    styleUrls: ['tab-header.css'],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    host: {\n        class: 'mc-tab-header',\n        '[class.mc-tab-header__pagination-controls_enabled]':\n            'showPaginationControls',\n        '[class.mc-tab-header_rtl]': 'getLayoutDirection() == \\'rtl\\''\n    }\n})\nexport class McTabHeader extends McTabHeaderBase\n    implements AfterContentChecked, AfterContentInit, OnDestroy {\n    /** The index of the active tab. */\n    @Input()\n    get selectedIndex(): number {\n        return this._selectedIndex;\n    }\n    set selectedIndex(value: number) {\n        const coercedValue = coerceNumberProperty(value);\n        this.selectedIndexChanged = this._selectedIndex !== coercedValue;\n        this._selectedIndex = coercedValue;\n\n        if (this.keyManager) {\n            this.keyManager.updateActiveItem(coercedValue);\n        }\n    }\n\n    /** Tracks which element has focus; used for keyboard navigation */\n    get focusIndex(): number {\n        return this.keyManager ? this.keyManager.activeItemIndex! : 0;\n    }\n\n    /** When the focus index is set, we must manually send focus to the correct label */\n    set focusIndex(value: number) {\n        if (\n            !this.isValidIndex(value) ||\n            this.focusIndex === value ||\n            !this.keyManager\n        ) {\n            return;\n        }\n\n        this.keyManager.setActiveItem(value);\n    }\n\n    /** Sets the distance in pixels that the tab header should be transformed in the X-axis. */\n    get scrollDistance(): number {\n        return this._scrollDistance;\n    }\n    set scrollDistance(v: number) {\n        this._scrollDistance = Math.max(\n            0,\n            Math.min(this.getMaxScrollDistance(), v)\n        );\n\n        // Mark that the scroll distance has changed so that after the view is checked, the CSS\n        // transformation can move the header.\n        this.scrollDistanceChanged = true;\n        this.checkScrollingControls();\n    }\n\n    @ContentChildren(McTabLabelWrapper)\n    labelWrappers: QueryList<McTabLabelWrapper>;\n    @ViewChild('tabListContainer')\n    tabListContainer: ElementRef;\n    @ViewChild('tabList')\n    tabList: ElementRef;\n\n    /** Whether the controls for pagination should be displayed */\n    showPaginationControls = false;\n\n    /** Whether the tab list can be scrolled more towards the end of the tab label list. */\n    disableScrollAfter = true;\n\n    /** Whether the tab list can be scrolled more towards the beginning of the tab label list. */\n    disableScrollBefore = true;\n\n    /** Event emitted when the option is selected. */\n    @Output()\n    readonly selectFocusedIndex = new EventEmitter();\n\n    /** Event emitted when a label is focused. */\n    @Output()\n    readonly indexFocused = new EventEmitter();\n\n    /** The distance in pixels that the tab labels should be translated to the left. */\n    private _scrollDistance = 0;\n\n    /** Whether the header should scroll to the selected index after the view has been checked. */\n    private selectedIndexChanged = false;\n\n    /** Emits when the component is destroyed. */\n    private readonly destroyed = new Subject<void>();\n\n    /**\n     * The number of tab labels that are displayed on the header. When this changes, the header\n     * should re-evaluate the scroll position.\n     */\n    private tabLabelCount: number;\n\n    /** Whether the scroll distance has changed and should be applied after the view is checked. */\n    private scrollDistanceChanged: boolean;\n\n    /** Used to manage focus between the tabs. */\n    private keyManager: FocusKeyManager<McTabLabelWrapper>;\n\n    private _selectedIndex: number = 0;\n\n    constructor(\n        private elementRef: ElementRef,\n        private changeDetectorRef: ChangeDetectorRef,\n        private viewportRuler: ViewportRuler,\n        @Optional() private dir: Directionality,\n        private ngZone: NgZone\n    ) {\n        super();\n    }\n\n    ngAfterContentChecked(): void {\n        // If the number of tab labels have changed, check if scrolling should be enabled\n        if (this.tabLabelCount !== this.labelWrappers.length) {\n            this.updatePagination();\n            this.tabLabelCount = this.labelWrappers.length;\n            this.changeDetectorRef.markForCheck();\n        }\n\n        // If the selected index has changed, scroll to the label and check if the scrolling controls\n        // should be disabled.\n        if (this.selectedIndexChanged) {\n            this.scrollToLabel(this._selectedIndex);\n            this.checkScrollingControls();\n            this.selectedIndexChanged = false;\n            this.changeDetectorRef.markForCheck();\n        }\n\n        // If the scroll distance has been changed (tab selected, focused, scroll controls activated),\n        // then translate the header to reflect this.\n        if (this.scrollDistanceChanged) {\n            this.updateTabScrollPosition();\n            this.scrollDistanceChanged = false;\n            this.changeDetectorRef.markForCheck();\n        }\n    }\n\n    handleKeydown(event: KeyboardEvent) {\n        switch (event.keyCode) {\n            case HOME:\n                this.keyManager.setFirstItemActive();\n                event.preventDefault();\n                break;\n            case END:\n                this.keyManager.setLastItemActive();\n                event.preventDefault();\n                break;\n            case ENTER:\n            case SPACE:\n                this.selectFocusedIndex.emit(this.focusIndex);\n                event.preventDefault();\n                break;\n            default:\n                this.keyManager.onKeydown(event);\n        }\n    }\n\n    ngAfterContentInit() {\n        const dirChange = this.dir ? this.dir.change : observableOf(null);\n        const resize = this.viewportRuler.change(VIEWPORT_THROTTLE_TIME);\n        const realign = () => {\n            this.updatePagination();\n        };\n\n        this.keyManager = new FocusKeyManager(this.labelWrappers)\n            .withHorizontalOrientation(this.getLayoutDirection())\n            .withWrap();\n\n        this.keyManager.updateActiveItem(0);\n\n        // Defer the first call in order to allow for slower browsers to lay out the elements.\n        // This helps in cases where the user lands directly on a page with paginated tabs.\n        typeof requestAnimationFrame === undefined\n            ? realign()\n            : requestAnimationFrame(realign);\n\n        // On dir change or window resize, update the orientation of\n        // the key manager if the direction has changed.\n        merge(dirChange, resize)\n            .pipe(takeUntil(this.destroyed))\n            .subscribe(() => {\n                realign();\n                this.keyManager.withHorizontalOrientation(\n                    this.getLayoutDirection()\n                );\n            });\n\n        // If there is a change in the focus key manager we need to emit the `indexFocused`\n        // event in order to provide a public event that notifies about focus changes. Also we realign\n        // the tabs container by scrolling the new focused tab into the visible section.\n        this.keyManager.change\n            .pipe(takeUntil(this.destroyed))\n            .subscribe((newFocusIndex) => {\n                this.indexFocused.emit(newFocusIndex);\n                this.setTabFocus(newFocusIndex);\n            });\n    }\n\n    ngOnDestroy() {\n        this.destroyed.next();\n        this.destroyed.complete();\n    }\n\n    /**\n     * Callback for when the MutationObserver detects that the content has changed.\n     */\n    onContentChanges() {\n        const zoneCallback = () => {\n            this.updatePagination();\n            this.changeDetectorRef.markForCheck();\n        };\n\n        // The content observer runs outside the `NgZone` by default, which\n        // means that we need to bring the callback back in ourselves.\n        this.ngZone.run(zoneCallback);\n    }\n\n    /**\n     * Updating the view whether pagination should be enabled or not\n     */\n    updatePagination() {\n        this.checkPaginationEnabled();\n        this.checkScrollingControls();\n        this.updateTabScrollPosition();\n    }\n\n    /**\n     * Determines if an index is valid.  If the tabs are not ready yet, we assume that the user is\n     * providing a valid index and return true.\n     */\n    isValidIndex(index: number): boolean {\n        if (!this.labelWrappers) {\n            return true;\n        }\n\n        const tab = this.labelWrappers\n            ? this.labelWrappers.toArray()[index]\n            : null;\n\n        return !!tab && !tab.disabled;\n    }\n\n    /**\n     * Sets focus on the HTML element for the label wrapper and scrolls it into the view if\n     * scrolling is enabled.\n     */\n    setTabFocus(tabIndex: number) {\n        if (this.showPaginationControls) {\n            this.scrollToLabel(tabIndex);\n        }\n\n        if (this.labelWrappers && this.labelWrappers.length) {\n            this.labelWrappers.toArray()[tabIndex].focus();\n\n            // Do not let the browser manage scrolling to focus the element, this will be handled\n            // by using translation. In LTR, the scroll left should be 0. In RTL, the scroll width\n            // should be the full width minus the offset width.\n            const containerEl = this.tabListContainer.nativeElement;\n            const dir = this.getLayoutDirection();\n\n            if (dir === 'ltr') {\n                containerEl.scrollLeft = 0;\n            } else {\n                containerEl.scrollLeft =\n                    containerEl.scrollWidth - containerEl.offsetWidth;\n            }\n        }\n    }\n\n    /** The layout direction of the containing app. */\n    getLayoutDirection(): Direction {\n        return this.dir && this.dir.value === 'rtl' ? 'rtl' : 'ltr';\n    }\n\n    /** Performs the CSS transformation on the tab list that will cause the list to scroll. */\n    updateTabScrollPosition() {\n        const scrollDistance = this.scrollDistance;\n        const translateX =\n            this.getLayoutDirection() === 'ltr'\n                ? -scrollDistance\n                : scrollDistance;\n\n        // Don't use `translate3d` here because we don't want to create a new layer. A new layer\n        // seems to cause flickering and overflow in Internet Explorer.\n        // See: https://github.com/angular/material2/issues/10276\n        this.tabList.nativeElement.style.transform = `translateX(${translateX}px)`;\n    }\n\n    /**\n     * Moves the tab list in the 'before' or 'after' direction (towards the beginning of the list or\n     * the end of the list, respectively). The distance to scroll is computed to be a third of the\n     * length of the tab list view window.\n     *\n     * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n     * should be called sparingly.\n     */\n    scrollHeader(scrollDir: ScrollDirection) {\n        const viewLength = this.tabListContainer.nativeElement.offsetWidth;\n\n        // Move the scroll distance one-third the length of the tab list's viewport.\n        this.scrollDistance +=\n            ((scrollDir === 'before' ? -1 : 1) * viewLength) / SCROLL_DISTANCE_DELIMITER;\n    }\n\n    /**\n     * Moves the tab list such that the desired tab label (marked by index) is moved into view.\n     *\n     * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n     * should be called sparingly.\n     */\n    scrollToLabel(labelIndex: number) {\n        const selectedLabel = this.labelWrappers\n            ? this.labelWrappers.toArray()[labelIndex]\n            : null;\n\n        if (!selectedLabel) {\n            return;\n        }\n\n        // The view length is the visible width of the tab labels.\n        const viewLength = this.tabListContainer.nativeElement.offsetWidth;\n\n        let labelBeforePos: number;\n        let labelAfterPos: number;\n\n        if (this.getLayoutDirection() === 'ltr') {\n            labelBeforePos = selectedLabel.getOffsetLeft();\n            labelAfterPos = labelBeforePos + selectedLabel.getOffsetWidth();\n        } else {\n            labelAfterPos =\n                this.tabList.nativeElement.offsetWidth -\n                selectedLabel.getOffsetLeft();\n            labelBeforePos = labelAfterPos - selectedLabel.getOffsetWidth();\n        }\n\n        const beforeVisiblePos = this.scrollDistance;\n        const afterVisiblePos = this.scrollDistance + viewLength;\n\n        if (labelBeforePos < beforeVisiblePos) {\n            // Scroll header to move label to the before direction\n            this.scrollDistance -=\n                beforeVisiblePos - labelBeforePos + EXAGGERATED_OVERSCROLL;\n        } else if (labelAfterPos > afterVisiblePos) {\n            // Scroll header to move label to the after direction\n            this.scrollDistance +=\n                labelAfterPos - afterVisiblePos + EXAGGERATED_OVERSCROLL;\n        }\n    }\n\n    /**\n     * Evaluate whether the pagination controls should be displayed. If the scroll width of the\n     * tab list is wider than the size of the header container, then the pagination controls should\n     * be shown.\n     *\n     * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n     * should be called sparingly.\n     */\n    checkPaginationEnabled() {\n        const isEnabled =\n            this.tabList.nativeElement.scrollWidth >\n            this.elementRef.nativeElement.offsetWidth;\n\n        if (!isEnabled) {\n            this.scrollDistance = 0;\n        }\n\n        if (isEnabled !== this.showPaginationControls) {\n            this.changeDetectorRef.markForCheck();\n        }\n\n        this.showPaginationControls = isEnabled;\n    }\n\n    /**\n     * Evaluate whether the before and after controls should be enabled or disabled.\n     * If the header is at the beginning of the list (scroll distance is equal to 0) then disable the\n     * before button. If the header is at the end of the list (scroll distance is equal to the\n     * maximum distance we can scroll), then disable the after button.\n     *\n     * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n     * should be called sparingly.\n     */\n    checkScrollingControls() {\n        // Check if the pagination arrows should be activated.\n        this.disableScrollBefore = this.scrollDistance === 0;\n        this.disableScrollAfter =\n            this.scrollDistance === this.getMaxScrollDistance();\n        this.changeDetectorRef.markForCheck();\n    }\n\n    /**\n     * Determines what is the maximum length in pixels that can be set for the scroll distance. This\n     * is equal to the difference in width between the tab list container and tab header container.\n     *\n     * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n     * should be called sparingly.\n     */\n    getMaxScrollDistance(): number {\n        const lengthOfTabList = this.tabList.nativeElement.scrollWidth;\n        const viewLength = this.tabListContainer.nativeElement.offsetWidth;\n\n        return lengthOfTabList - viewLength || 0;\n    }\n}\n","import {\n    AfterContentChecked,\n    AfterContentInit,\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    ContentChildren,\n    ElementRef,\n    EventEmitter,\n    Input,\n    OnDestroy,\n    Output,\n    QueryList,\n    ViewChild,\n    ViewEncapsulation,\n    InjectionToken,\n    Inject,\n    Optional,\n    Directive, Attribute\n} from '@angular/core';\nimport { coerceBooleanProperty, coerceNumberProperty } from '@ptsecurity/cdk/coercion';\nimport {\n    CanColor,\n    CanColorCtor,\n    mixinColor,\n    mixinDisabled\n} from '@ptsecurity/mosaic/core';\nimport { merge, Subscription } from 'rxjs';\n\nimport { McTab } from './tab';\nimport { McTabHeader } from './tab-header';\n\n\n@Directive({\n    selector: 'mc-tab-group[mc-light-tabs], [mc-tab-nav-bar][mc-light-tabs]',\n    host: { class: 'mc-tab-group_light' }\n})\nexport class McLightTabsCssStyler { }\n\n@Directive({\n    selector: 'mc-tab-group[mc-align-tabs-center], [mc-tab-nav-bar][mc-align-tabs-center]',\n    host: { class: 'mc-tab-group_align-labels-center' }\n})\nexport class McAlignTabsCenterCssStyler { }\n\n@Directive({\n    selector: 'mc-tab-group[mc-align-tabs-end], [mc-tab-nav-bar][mc-align-tabs-end]',\n    host: { class: 'mc-tab-group_align-labels-end' }\n})\nexport class McAlignTabsEndCssStyler { }\n\n@Directive({\n    selector: 'mc-tab-group[mc-stretch-tabs], [mc-tab-nav-bar][mc-stretch-tabs]',\n    host: { class: 'mc-tab-group_stretch-labels' }\n})\nexport class McStretchTabsCssStyler { }\n\n/** Used to generate unique ID's for each tab component */\nlet nextId = 0;\n\n/** A simple change event emitted on focus or selection changes. */\nexport class McTabChangeEvent {\n    /** Index of the currently-selected tab. */\n    index: number;\n    /** Reference to the currently-selected tab. */\n    tab: McTab;\n}\n\n/** Possible positions for the tab header. */\nexport type McTabHeaderPosition = 'above' | 'below';\n\n/** Object that can be used to configure the default options for the tabs module. */\nexport interface IMcTabsConfig {\n    /** Duration for the tab animation. Must be a valid CSS value (e.g. 600ms). */\n    animationDuration?: string;\n}\n\n/** Injection token that can be used to provide the default options the tabs module. */\nexport const MC_TABS_CONFIG = new InjectionToken('MC_TABS_CONFIG');\n\n// Boilerplate for applying mixins to McTabGroup.\n/** @docs-private */\nexport class McTabGroupBase {\n    // tslint:disable-next-line:naming-convention\n    constructor(public _elementRef: ElementRef) { }\n}\nexport const mcTabGroupMixinBase:\n    CanColorCtor &\n    typeof McTabGroupBase =\n    mixinColor(mixinDisabled(McTabGroupBase));\n\n/**\n * Tab-group component.  Supports basic tab pairs (label + content) and includes\n * keyboard navigation.\n */\n@Component({\n    selector: 'mc-tab-group',\n    exportAs: 'mcTabGroup',\n    templateUrl: 'tab-group.html',\n    styleUrls: ['tab-group.css'],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    inputs: ['color'],\n    host: {\n        class: 'mc-tab-group',\n        '[class.mc-tab-group_dynamic-height]': 'dynamicHeight',\n        '[class.mc-tab-group_inverted-header]': 'headerPosition === \"below\"'\n    }\n})\nexport class McTabGroup extends mcTabGroupMixinBase implements AfterContentInit,\n    AfterContentChecked, OnDestroy, CanColor {\n    lightTab: boolean;\n\n    /** Whether the tab group should grow to the size of the active tab. */\n    @Input()\n    get dynamicHeight(): boolean { return this._dynamicHeight; }\n    set dynamicHeight(value: boolean) { this._dynamicHeight = coerceBooleanProperty(value); }\n\n    /** The index of the active tab. */\n    @Input()\n    get selectedIndex(): number | null { return this._selectedIndex; }\n    set selectedIndex(value: number | null) {\n        this.indexToSelect = coerceNumberProperty(value, null);\n    }\n\n    @ContentChildren(McTab) tabs: QueryList<McTab>;\n\n    @ViewChild('tabBodyWrapper') tabBodyWrapper: ElementRef;\n\n    @ViewChild('tabHeader') tabHeader: McTabHeader;\n\n    /** Position of the tab header. */\n    @Input() headerPosition: McTabHeaderPosition = 'above';\n\n    /** Duration for the tab animation. Must be a valid CSS value (e.g. 600ms). */\n    @Input() animationDuration: string;\n\n    /** Output to enable support for two-way binding on `[(selectedIndex)]` */\n    @Output() readonly selectedIndexChange: EventEmitter<number> = new EventEmitter<number>();\n\n    /** Event emitted when focus has changed within a tab group. */\n    @Output() readonly focusChange: EventEmitter<McTabChangeEvent> =\n        new EventEmitter<McTabChangeEvent>();\n\n    /** Event emitted when the body animation has completed */\n    @Output() readonly animationDone: EventEmitter<void> = new EventEmitter<void>();\n\n    /** Event emitted when the tab selection has changed. */\n    @Output() readonly selectedTabChange: EventEmitter<McTabChangeEvent> =\n        new EventEmitter<McTabChangeEvent>(true);\n\n    /** The tab index that should be selected after the content has been checked. */\n    private indexToSelect: number | null = 0;\n\n    /** Snapshot of the height of the tab body wrapper before another tab is activated. */\n    private tabBodyWrapperHeight: number = 0;\n\n    /** Subscription to tabs being added/removed. */\n    private tabsSubscription = Subscription.EMPTY;\n\n    /** Subscription to changes in the tab labels. */\n    private tabLabelSubscription = Subscription.EMPTY;\n    private _dynamicHeight: boolean = false;\n    private _selectedIndex: number | null = null;\n\n    private groupId: number;\n\n    constructor(\n        elementRef: ElementRef,\n        private changeDetectorRef: ChangeDetectorRef,\n        @Attribute('mc-light-tabs') lightTabs: string,\n        @Inject(MC_TABS_CONFIG) @Optional() defaultConfig?: IMcTabsConfig\n    ) {\n        super(elementRef);\n\n        this.lightTab = coerceBooleanProperty(lightTabs);\n\n        this.groupId = nextId++;\n        this.animationDuration = defaultConfig && defaultConfig.animationDuration ?\n            defaultConfig.animationDuration : '0ms';\n    }\n\n    /**\n     * After the content is checked, this component knows what tabs have been defined\n     * and what the selected index should be. This is where we can know exactly what position\n     * each tab should be in according to the new selected index, and additionally we know how\n     * a new selected tab should transition in (from the left or right).\n     */\n    ngAfterContentChecked() {\n        // Don't clamp the `indexToSelect` immediately in the setter because it can happen that\n        // the amount of tabs changes before the actual change detection runs.\n        const indexToSelect = this.indexToSelect = this.clampTabIndex(this.indexToSelect);\n\n        // If there is a change in selected index, emit a change event. Should not trigger if\n        // the selected index has not yet been initialized.\n        if (this._selectedIndex !== indexToSelect) {\n            const isFirstRun = this._selectedIndex == null;\n\n            if (!isFirstRun) {\n                this.selectedTabChange.emit(this.createChangeEvent(indexToSelect));\n            }\n\n            // Changing these values after change detection has run\n            // since the checked content may contain references to them.\n            Promise.resolve().then(() => {\n                this.tabs.forEach((tab, index) => tab.isActive = index === indexToSelect);\n\n                if (!isFirstRun) {\n                    this.selectedIndexChange.emit(indexToSelect);\n                }\n            });\n        }\n\n        // Setup the position for each tab and optionally setup an origin on the next selected tab.\n        this.tabs.forEach((tab: McTab, index: number) => {\n            tab.position = index - indexToSelect;\n\n            // If there is already a selected tab, then set up an origin for the next selected tab\n            // if it doesn't have one already.\n            if (this._selectedIndex != null && tab.position === 0 && !tab.origin) {\n                tab.origin = indexToSelect - this._selectedIndex;\n            }\n        });\n\n        if (this._selectedIndex !== indexToSelect) {\n            this._selectedIndex = indexToSelect;\n            this.changeDetectorRef.markForCheck();\n        }\n    }\n\n    ngAfterContentInit() {\n        this.subscribeToTabLabels();\n\n        // Subscribe to changes in the amount of tabs, in order to be\n        // able to re-render the content as new tabs are added or removed.\n        this.tabsSubscription = this.tabs.changes.subscribe(() => {\n            const indexToSelect = this.clampTabIndex(this.indexToSelect);\n\n            // Maintain the previously-selected tab if a new tab is added or removed and there is no\n            // explicit change that selects a different tab.\n            if (indexToSelect === this._selectedIndex) {\n                const tabs = this.tabs.toArray();\n\n                for (let i = 0; i < tabs.length; i++) {\n                    if (tabs[i].isActive) {\n                        // Assign both to the `_indexToSelect` and `_selectedIndex` so we don't fire a changed\n                        // event, otherwise the consumer may end up in an infinite loop in some edge cases like\n                        // adding a tab within the `selectedIndexChange` event.\n                        this.indexToSelect = this._selectedIndex = i;\n                        break;\n                    }\n                }\n            }\n\n            this.subscribeToTabLabels();\n            this.changeDetectorRef.markForCheck();\n        });\n    }\n\n    ngOnDestroy() {\n        this.tabsSubscription.unsubscribe();\n        this.tabLabelSubscription.unsubscribe();\n    }\n\n    focusChanged(index: number) {\n        this.focusChange.emit(this.createChangeEvent(index));\n    }\n\n    /** Returns a unique id for each tab label element */\n    getTabLabelId(i: number): string {\n        return `mc-tab-label-${this.groupId}-${i}`;\n    }\n\n    /** Returns a unique id for each tab content element */\n    getTabContentId(i: number): string {\n        return `mc-tab-content-${this.groupId}-${i}`;\n    }\n\n    /**\n     * Sets the height of the body wrapper to the height of the activating tab if dynamic\n     * height property is true.\n     */\n    setTabBodyWrapperHeight(tabHeight: number): void {\n        if (!this._dynamicHeight || !this.tabBodyWrapperHeight) { return; }\n\n        const wrapper: HTMLElement = this.tabBodyWrapper.nativeElement;\n\n        wrapper.style.height = `${this.tabBodyWrapperHeight}px`;\n\n        // This conditional forces the browser to paint the height so that\n        // the animation to the new height can have an origin.\n        if (this.tabBodyWrapper.nativeElement.offsetHeight) {\n            wrapper.style.height = `${tabHeight}px`;\n        }\n    }\n\n    /** Removes the height of the tab body wrapper. */\n    removeTabBodyWrapperHeight(): void {\n        this.tabBodyWrapperHeight = this.tabBodyWrapper.nativeElement.clientHeight;\n        this.tabBodyWrapper.nativeElement.style.height = '';\n        this.animationDone.emit();\n    }\n\n    /** Handle click events, setting new selected index if appropriate. */\n    handleClick(tab: McTab, tabHeader: McTabHeader, index: number) {\n        if (!tab.disabled) {\n            this.selectedIndex = tabHeader.focusIndex = index;\n        }\n    }\n\n    /** Retrieves the tabindex for the tab. */\n    getTabIndex(tab: McTab, index: number): number | null {\n        if (tab.disabled) {\n            return null;\n        }\n\n        return this.selectedIndex === index ? 0 : -1;\n    }\n\n    private createChangeEvent(index: number): McTabChangeEvent {\n        const event = new McTabChangeEvent();\n        event.index = index;\n        if (this.tabs && this.tabs.length) {\n            event.tab = this.tabs.toArray()[index];\n        }\n\n        return event;\n    }\n\n    /**\n     * Subscribes to changes in the tab labels. This is needed, because the @Input for the label is\n     * on the McTab component, whereas the data binding is inside the McTabGroup. In order for the\n     * binding to be updated, we need to subscribe to changes in it and trigger change detection\n     * manually.\n     */\n    private subscribeToTabLabels() {\n        if (this.tabLabelSubscription) {\n            this.tabLabelSubscription.unsubscribe();\n        }\n\n        this.tabLabelSubscription = merge(...this.tabs.map((tab) => tab.stateChanges))\n            .subscribe(() => this.changeDetectorRef.markForCheck());\n    }\n\n    /** Clamps the given index to the bounds of 0 and the tabs length. */\n    private clampTabIndex(index: number | null): number {\n        // Note the `|| 0`, which ensures that values like NaN can't get through\n        // and which would otherwise throw the component into an infinite loop\n        // (since Mch.max(NaN, 0) === NaN).\n        return Math.min(this.tabs.length - 1, Math.max(index || 0, 0));\n    }\n}\n"],"names":["tslib_1.__extends","McTabLink","_super","Object","defineProperty","prototype","get","this","isActive","set","value","ngOnDestroy","focusMonitor","stopMonitoring","elementRef","nativeElement","tslib_1.__decorate","Input","Directive","selector","exportAs","inputs","host","class","[attr.aria-current]","[attr.aria-disabled]","[attr.tabIndex]","[class.mc-disabled]","[class.mc-active]","tslib_1.__param","Attribute","tslib_1.__metadata","ElementRef","String","FocusMonitor","mcTabLinkMixinBase","McTabsModule","NgModule","imports","CommonModule","McCommonModule","PortalModule","A11yModule","BrowserAnimationsModule","exports","McTabGroup","McTabLabel","McTab","McTabNav","McTabContent","McLightTabsCssStyler","McAlignTabsCenterCssStyler","McAlignTabsEndCssStyler","McStretchTabsCssStyler","declarations","McTabLabelWrapper","McTabBody","McTabBodyPortal","McTabHeader","__extends","d","b","__","constructor","extendStatics","create","__decorate","decorators","target","key","desc","c","arguments","length","r","getOwnPropertyDescriptor","Reflect","decorate","i","__param","paramIndex","decorator","__metadata","metadataKey","metadataValue","metadata","setPrototypeOf","__proto__","Array","p","hasOwnProperty","template","TemplateRef","CdkPortal","ctorParameters","McTabBase","mcTabMixinBase","mixinDisabled","viewContainerRef","_this","call","textLabel","stateChanges","Subject","position","origin","contentPortal","ngOnChanges","changes","next","complete","ngOnInit","TemplatePortal","explicitContent","implicitContent","ContentChild","read","ViewChild","Component","changeDetection","ChangeDetectionStrategy","OnPush","encapsulation","ViewEncapsulation","None","ViewContainerRef","mcTabsAnimations","translateTab","trigger","state","style","transform","minHeight","transition","animate","componentFactoryResolver","centeringSub","Subscription","EMPTY","leavingSub","beforeCentering","pipe","startWith","isCenterPosition","bodyPosition","subscribe","isCentering","hasAttached","attach","content","afterLeavingCenter","detach","unsubscribe","Inject","forwardRef","ComponentFactoryResolver","CdkPortalOutlet","dir","changeDetectorRef","onCentering","EventEmitter","onCentered","animationDuration","dirChangeSubscription","change","direction","computePositionAnimationState","markForCheck","positionIndex","computePositionFromOrigin","onTranslateTabStarted","e","toState","emit","clientHeight","onTranslateTabComplete","fromState","getLayoutDirection","Output","PortalHostDirective","styles","animations","Optional","Directionality","ChangeDetectorRef","McTabLabelWrapperBase","mcTabLabelWrapperMixinBase","focus","getOffsetLeft","offsetLeft","getOffsetWidth","offsetWidth","McTabHeaderBase","viewportRuler","ngZone","showPaginationControls","disableScrollAfter","disableScrollBefore","selectFocusedIndex","indexFocused","_scrollDistance","selectedIndexChanged","destroyed","_selectedIndex","coercedValue","coerceNumberProperty","keyManager","updateActiveItem","activeItemIndex","isValidIndex","focusIndex","setActiveItem","v","Math","max","min","getMaxScrollDistance","scrollDistanceChanged","checkScrollingControls","ngAfterContentChecked","tabLabelCount","labelWrappers","updatePagination","scrollToLabel","updateTabScrollPosition","handleKeydown","event","keyCode","HOME","setFirstItemActive","preventDefault","END","setLastItemActive","ENTER","SPACE","onKeydown","ngAfterContentInit","dirChange","observableOf","resize","realign","FocusKeyManager","withHorizontalOrientation","withWrap","undefined","requestAnimationFrame","merge","takeUntil","newFocusIndex","setTabFocus","onContentChanges","zoneCallback","run","checkPaginationEnabled","index","tab","toArray","disabled","tabIndex","containerEl","tabListContainer","scrollLeft","scrollWidth","scrollDistance","translateX","tabList","scrollHeader","scrollDir","viewLength","labelIndex","selectedLabel","labelBeforePos","labelAfterPos","beforeVisiblePos","afterVisiblePos","isEnabled","ContentChildren","QueryList","[class.mc-tab-header__pagination-controls_enabled]","[class.mc-tab-header_rtl]","ViewportRuler","NgZone","nextId","McTabChangeEvent","MC_TABS_CONFIG","InjectionToken","McTabGroupBase","_elementRef","mcTabGroupMixinBase","mixinColor","lightTabs","defaultConfig","headerPosition","selectedIndexChange","focusChange","animationDone","selectedTabChange","indexToSelect","tabBodyWrapperHeight","tabsSubscription","tabLabelSubscription","_dynamicHeight","lightTab","coerceBooleanProperty","groupId","clampTabIndex","isFirstRun_1","createChangeEvent","Promise","resolve","then","tabs","forEach","subscribeToTabLabels","focusChanged","getTabLabelId","getTabContentId","setTabBodyWrapperHeight","tabHeight","wrapper","tabBodyWrapper","height","offsetHeight","removeTabBodyWrapperHeight","handleClick","tabHeader","selectedIndex","getTabIndex","apply","map","[class.mc-tab-group_dynamic-height]","[class.mc-tab-group_inverted-header]","McTabNavBase","mcTabNavMixinBase","McTabLinkBase","mixinTabIndex","parseInt","monitor"],"mappings":";;;;;;2rCEuBA,SAAgB2D,GAAUC,EAAGC,GAEzB,QAASC,KAAOvD,KAAKwD,YAAcH,EADnCI,EAAcJ,EAAGC,GAEjBD,EAAEvD,UAAkB,OAANwD,EAAa1D,OAAO8D,OAAOJ,IAAMC,EAAGzD,UAAYwD,EAAExD,UAAW,GAAIyD,IAwBnF,QAAgBI,GAAWC,EAAYC,EAAQC,EAAKC,GAChD,GAA2HV,GAAvHW,EAAIC,UAAUC,OAAQC,EAAIH,EAAI,EAAIH,EAAkB,OAATE,EAAgBA,EAAOnE,OAAOwE,yBAAyBP,EAAQC,GAAOC,CACrH,IAAuB,gBAAZM,UAAoD,kBAArBA,SAAQC,SAAyBH,EAAIE,QAAQC,SAASV,EAAYC,EAAQC,EAAKC,OACpH,KAAK,GAAIQ,GAAIX,EAAWM,OAAS,EAAGK,GAAK,EAAGA,KAASlB,EAAIO,EAAWW,MAAIJ,GAAKH,EAAI,EAAIX,EAAEc,GAAKH,EAAI,EAAIX,EAAEQ,EAAQC,EAAKK,GAAKd,EAAEQ,EAAQC,KAASK,EAChJ,OAAOH,GAAI,GAAKG,GAAKvE,OAAOC,eAAegE,EAAQC,EAAKK,GAAIA,EAGhE,QAAgBK,GAAQC,EAAYC,GAChC,MAAO,UAAUb,EAAQC,GAAOY,EAAUb,EAAQC,EAAKW,IAG3D,QAAgBE,GAAWC,EAAaC,GACpC,GAAuB,gBAAZR,UAAoD,kBAArBA,SAAQS,SAAyB,MAAOT,SAAQS,SAASF,EAAaC,GA9CpH,GAAIpB,GAAgB,SAASJ,EAAGC,GAI5B,OAHAG,EAAgB7D,OAAOmF,iBAChBC,uBAA2BC,QAAS,SAAU5B,EAAGC,GAAKD,EAAE2B,UAAY1B,IACvE,SAAUD,EAAGC,GAAK,IAAK,GAAI4B,KAAK5B,GAAOA,EAAE6B,eAAeD,KAAI7B,EAAE6B,GAAK5B,EAAE4B,MACpD7B,EAAGC,ICf5BZ,EAAA,WACI,QAAJA,GAAuB0C,GAAApF,KAAvBoF,SAAuBA,EACvB,MAFa1C,GAAbjC,GADCE,EAAAA,WAAYC,SAAU,mBAEvBY,EAAA,qBAAiC6D,EAAAA,eADpB3C,MCGbH,EAAA,SAAA5C,GAAA,QAAA4C,oDAA2C,MAAX9C,GAAhC8C,EAAA5C,GAAa4C,EAAb9B,GAHCE,EAAAA,WACGC,SAAU,kCAED2B,IAAmB+C,EAAAA,UAG/B/C,GAAmBgD,eAAiB,WAAM,MAACD,GAAAA,UAAkBC,eCe9D,IAAAC,GAAA,WAAA,QAAAA,MAAwB,MAAxBA,MACaC,EAAoDC,EAAAA,cAC7DF,GAcJhD,EAAA,SAAA7C,GA0DI,QAAJ6C,GAAwBmD,GAApB,GAAJC,GACQjG,EADRkG,KAAA7F,OAAAA,WAAwB4F,GAAxBD,iBAAwBA,EApCpBC,EAAJE,UAAwB,GAcXF,EAAbG,aAA4B,GAAIC,GAAAA,QAM5BJ,EAAJK,SAA8B,KAM1BL,EAAJM,OAA4B,KAKxBN,EAAJ3F,UAAe,EAGH2F,EAAZO,cAAmD,OAyBnD,MAjF2B1G,GAA3B+C,EAAA7C,GAGIC,OAAJC,eAAQ2C,EAAR1C,UAAA,WAAAC,IAAI,WACI,MAAOC,MAAKmG,+CA0DhB3D,EAAJ1C,UAAAsG,YAAI,SAAYC,IAEJA,EAAQlB,eAAe,cACvBkB,EAAQlB,eAAe,cAEvBnF,KAAK+F,aAAaO,QAI1B9D,EAAJ1C,UAAAM,YAAI,WACIJ,KAAK+F,aAAaQ,YAGtB/D,EAAJ1C,UAAA0G,SAAI,WACIxG,KAAKmG,cAAgB,GAAIM,GAAAA,eACrBzG,KAAK0G,iBAAmB1G,KAAK2G,gBAC7B3G,KAAK2F,mBAtEblF,GADCmG,EAAAA,aAAarE,GAClBf,EAAA,cAAmBe,IAAnBC,EAAA1C,UAAA,oBAAA,IAMIW,GADCmG,EAAAA,aAAalE,GAAgBmE,KAAMxB,EAAAA,cACxC7D,EAAA,cAAqB6D,EAAAA,cAArB7C,EAAA1C,UAAA,sBAAA,IAIIW,GADCqG,EAAAA,UAAUzB,EAAAA,aACf7D,EAAA,cAAqB6D,EAAAA,cAArB7C,EAAA1C,UAAA,sBAAA,IAIIW,GADCC,EAAAA,MAAM,kCACX8B,EAAA1C,UAAA,gBAAA,IAIIW,GADCC,EAAAA,MAAM,uCACX8B,EAAA1C,UAAA,gBAAA,IAOIW,GADCC,EAAAA,MAAM,4CACX8B,EAAA1C,UAAA,qBAAA,IAjCa0C,EAAb/B,GAXCsG,EAAAA,WACGnG,SAAU,SAIVwE,SAAU,uDACVtE,QAAS,YACTkG,gBAAiBC,EAAAA,wBAAwBC,OACzCC,cAAeC,EAAAA,kBAAkBC,KACjCxG,SAAU,UA4DdW,EAAA,qBAA0C8F,EAAAA,oBA1D7B9E,IAAciD,GChCd8B,GAITC,aAAcC,EAAAA,QAAQ,gBAElBC,EAAAA,MACI,wDACAC,EAAAA,OAAQC,UAAW,UAOvBF,EAAAA,MACI,OACAC,EAAAA,OAAQC,UAAW,2BAA4BC,UAAW,SAE9DH,EAAAA,MACI,QACAC,EAAAA,OAAQC,UAAW,0BAA2BC,UAAW,SAG7DC,EAAAA,WACI,yDACAC,EAAAA,QAAQ,yDAEZD,EAAAA,WAAW,8BACPH,EAAAA,OAAQC,UAAW,6BACnBG,EAAAA,QAAQ,0DAEZD,EAAAA,WAAW,+BACPH,EAAAA,OAAQC,UAAW,4BACnBG,EAAAA,QAAQ,6DCYpB7E,EAAA,SAAAvD,GAMI,QAAJuD,GACQ8E,EACArC,EAC6C5E,GAHjD,GAAJ6E,GAIQjG,EAJRkG,KAAA7F,KAIcgI,EAA0BrC,IAJxC3F,WAGqD4F,GAArD7E,KAAqDA,EAPzC6E,EAAZqC,aAA2BC,EAAAA,aAAaC,MAE5BvC,EAAZwC,WAAyBF,EAAAA,aAAaC,QAgCtC,MApCqC1I,GAArCyD,EAAAvD,GAcIuD,EAAJpD,UAAA0G,SAAI,WAAA,GAAJZ,GAAA5F,IACQL,GAARG,UAAc0G,SAAdX,KAAA7F,MAEQA,KAAKiI,aAAejI,KAAKe,KAAKsH,gBACzBC,KAAKC,EAAAA,UAAUvI,KAAKe,KAAKyH,iBAAiBxI,KAAKe,KAAK0H,gBACpDC,UAAU,SAACC,GACJA,IAAgB/C,EAAKgD,eACrBhD,EAAKiD,OAAOjD,EAAK7E,KAAK+H,WAIlC9I,KAAKoI,WAAapI,KAAKe,KAAKgI,mBAAmBL,UAAU,WACrD9C,EAAKoD,YAKb9F,EAAJpD,UAAAM,YAAI,WACIT,EAARG,UAAcM,YAAdyF,KAAA7F,MACQA,KAAKiI,aAAagB,cAClBjJ,KAAKoI,WAAWa,eAlCX/F,EAAbzC,GAHCE,EAAAA,WACGC,SAAU,oBAWLU,EAAT,EAAS4H,EAAAA,OAAOC,EAAAA,WAAW,WAAM,MAAAlG,OAFjCzB,EAAA,qBAAkC4H,EAAAA,yBACR9B,EAAAA,iBACiCrE,KAT9CC,IAAwBmG,EAAAA,iBAqDrCpG,EAAA,WA4CI,QAAJA,GAAwB1C,EACY+I,EACpBC,GAFZ,GAAJ3D,GAAA5F,IAAwBA,MAAxBO,WAAwBA,EACYP,KAApCsJ,IAAoCA,EAhCbtJ,KAAvBwJ,YAA2D,GAAIC,GAAAA,aAGxCzJ,KAAvBqI,gBAAgE,GAAIoB,GAAAA,aAG7CzJ,KAAvB+I,mBAAmE,GAAIU,GAAAA,aAGhDzJ,KAAvB0J,WAAwD,GAAID,GAAAA,cAAmB,GAclEzJ,KAAb2J,kBAAyC,MAM7B3J,KAAZ4J,sBAAoC1B,EAAAA,aAAaC,MAMrCnI,KAAKsJ,KAAOC,IACZvJ,KAAK4J,sBAAwB5J,KAAKsJ,IAAIO,OAAOnB,UAAU,SAACoB,GACpDlE,EAAKmE,8BAA8BD,GACnCP,EAAkBS,kBA0ElC,MAzHIpK,QAAJC,eAAQoD,EAARnD,UAAA,YAAAI,IAAI,SAAa+F,GACTjG,KAAKiK,cAAgBhE,EACrBjG,KAAK+J,iEAsDT9G,EAAJnD,UAAA0G,SAAI,WAC8B,WAAtBxG,KAAKyI,cAA4C,MAAfzI,KAAKkG,SACvClG,KAAKyI,aAAezI,KAAKkK,8BAIjCjH,EAAJnD,UAAAM,YAAI,WACIJ,KAAK4J,sBAAsBX,eAG/BhG,EAAJnD,UAAAqK,sBAAI,SAAsBC,GAClB,GAAMzB,GAAc3I,KAAKwI,iBAAiB4B,EAAEC,QAC5CrK,MAAKqI,gBAAgBiC,KAAK3B,GACtBA,GACA3I,KAAKwJ,YAAYc,KAAKtK,KAAKO,WAAWC,cAAc+J,eAI5DtH,EAAJnD,UAAA0K,uBAAI,SAAuBJ,GAEfpK,KAAKwI,iBAAiB4B,EAAEC,UAAYrK,KAAKwI,iBAAiBxI,KAAKyI,eAC/DzI,KAAK0J,WAAWY,OAGhBtK,KAAKwI,iBAAiB4B,EAAEK,aAAezK,KAAKwI,iBAAiBxI,KAAKyI,eAClEzI,KAAK+I,mBAAmBuB,QAKhCrH,EAAJnD,UAAA4K,mBAAI,WACI,MAAO1K,MAAKsJ,KAA0B,QAAnBtJ,KAAKsJ,IAAInJ,MAAkB,MAAQ,OAI1D8C,EAAJnD,UAAA0I,iBAAI,SAAiBvC,GACb,MAAoB,WAAbA,GACU,uBAAbA,GACa,wBAAbA,GAIAhD,EAAZnD,UAAAiK,8BAAI,SAAsCT,OAA1C,KAAAA,IAA0CA,EAAiBtJ,KAAK0K,sBACpD1K,KAAKiK,cAAgB,EACrBjK,KAAKyI,aAAuB,QAARa,EAAgB,OAAS,QACtCtJ,KAAKiK,cAAgB,EAC5BjK,KAAKyI,aAAuB,QAARa,EAAgB,QAAU,OAE9CtJ,KAAKyI,aAAe,UAQpBxF,EAAZnD,UAAAoK,0BAAI,WACI,GAAMZ,GAAMtJ,KAAK0K,oBAEjB,OAAa,QAARpB,GAAiBtJ,KAAKkG,QAAU,GAAe,QAARoD,GAAiBtJ,KAAKkG,OAAS,EAChE,qBAGJ,uBAvHXzF,GADCC,EAAAA,iEAILuC,EAAAnD,UAAA,WAAA,MAMcW,GAATkK,EAAAA,SAALnJ,EAAA,cAAoCiI,EAAAA,eAApCxG,EAAAnD,UAAA,kBAAA,IAGcW,GAATkK,EAAAA,SAALnJ,EAAA,cAAwCiI,EAAAA,eAAxCxG,EAAAnD,UAAA,sBAAA,IAGcW,GAATkK,EAAAA,SAALnJ,EAAA,cAA2CiI,EAAAA,eAA3CxG,EAAAnD,UAAA,yBAAA,IAGcW,GAATkK,EAAAA,SAALnJ,EAAA,cAAmCiI,EAAAA,eAAnCxG,EAAAnD,UAAA,iBAAA,IAGoCW,GAA/BqG,EAAAA,UAAU8D,EAAAA,qBAAfpJ,EAAA,cAAgDoJ,EAAAA,sBAAhD3H,EAAAnD,UAAA,iBAAA,IAGsBW,GAAjBC,EAAAA,MAAM,WAAXc,EAAA,cAA+BiF,EAAAA,iBAA/BxD,EAAAnD,UAAA,cAAA,IAGaW,GAARC,EAAAA,iCAALuC,EAAAnD,UAAA,aAAA,IAKaW,GAARC,EAAAA,iCAALuC,EAAAnD,UAAA,wBAAA,IApCamD,EAAbxC,GAXCsG,EAAAA,WACGnG,SAAU,cACVwE,SAAJ,mSACIyF,QAAS,uHACT1D,cAAeC,EAAAA,kBAAkBC,KACjCL,gBAAiBC,EAAAA,wBAAwBC,OACzC4D,YAAavD,EAAiBC,cAC9BzG,MACIC,MAAO,iBAgDEM,EAAjB,EAAiByJ,EAAAA,YADjBvJ,EAAA,qBAAoCC,EAAAA,WACKuJ,EAAAA,eACNC,EAAAA,qBA9CtBhI,MCnGbiI,EAAA,WAAA,QAAAA,MAAoC,MAApCA,MACaC,EACsBzF,EAAAA,cAAcwF,GAcjDlI,EAAA,SAAArD,GACI,QAAJqD,GAAuBzC,GAAnB,GAAJqF,GACQjG,EADRkG,KAAA7F,OAAAA,WAAuB4F,GAAvBrF,WAAuBA,IAgBvB,MAjBuCd,GAAvCuD,EAAArD,GAMIqD,EAAJlD,UAAAsL,MAAI,WACIpL,KAAKO,WAAWC,cAAc4K,SAGlCpI,EAAJlD,UAAAuL,cAAI,WACI,MAAOrL,MAAKO,WAAWC,cAAc8K,YAGzCtI,EAAJlD,UAAAyL,eAAI,WACI,MAAOvL,MAAKO,WAAWC,cAAcgL,aAfhCxI,EAAbvC,GARCE,EAAAA,WACGC,SAAU,sBACVE,QAAS,YACTC,MACIK,sBAAuB,WACvBF,uBAAwB,gBAIhCM,EAAA,qBAAmCC,EAAAA,cADtBuB,IAA0BmI,GCsBvCM,EAAA,WAAA,QAAAA,MAA8B,MAA9BA,MAsBAtI,EAAA,SAAAxD,GAkGI,QAAJwD,GACgB5C,EACAgJ,EACAmC,EACYpC,EACZqC,GALZ,GAAJ/F,GAOQjG,EAPRkG,KAAA7F,OAAAA,WACgB4F,GAAhBrF,WAAgBA,EACAqF,EAAhB2D,kBAAgBA,EACA3D,EAAhB8F,cAAgBA,EACY9F,EAA5B0D,IAA4BA,EACZ1D,EAAhB+F,OAAgBA,EA5CZ/F,EAAJgG,wBAA6B,EAGzBhG,EAAJiG,oBAAyB,EAGrBjG,EAAJkG,qBAA0B,EAIblG,EAAbmG,mBAAkC,GAAItC,GAAAA,aAIzB7D,EAAboG,aAA4B,GAAIvC,GAAAA,aAGpB7D,EAAZqG,gBAA8B,EAGlBrG,EAAZsG,sBAAmC,EAGdtG,EAArBuG,UAAiC,GAAInG,GAAAA,QAczBJ,EAAZwG,eAAqC,IAgTrC,MAhZiC3M,GAAjC0D,EAAAxD,GAIIC,OAAJC,eAAQsD,EAARrD,UAAA,iBAAAC,IAAI,WACI,MAAOC,MAAKoM,gBAEpBlM,IAAI,SAAkBC,GACd,GAAMkM,GAAeC,EAAAA,qBAAqBnM,EAC1CH,MAAKkM,qBAAuBlM,KAAKoM,iBAAmBC,EACpDrM,KAAKoM,eAAiBC,EAElBrM,KAAKuM,YACLvM,KAAKuM,WAAWC,iBAAiBH,oCAKzCzM,OAAJC,eAAQsD,EAARrD,UAAA,cAAAC,IAAI,WACI,MAAOC,MAAKuM,WAAavM,KAAKuM,WAAWE,gBAAmB,GAIpEvM,IAAI,SAAeC,GAENH,KAAK0M,aAAavM,IACnBH,KAAK2M,aAAexM,GACnBH,KAAKuM,YAKVvM,KAAKuM,WAAWK,cAAczM,oCAIlCP,OAAJC,eAAQsD,EAARrD,UAAA,kBAAAC,IAAI,WACI,MAAOC,MAAKiM,iBAEpB/L,IAAI,SAAmB2M,GACf7M,KAAKiM,gBAAkBa,KAAKC,IACxB,EACAD,KAAKE,IAAIhN,KAAKiN,uBAAwBJ,IAK1C7M,KAAKkN,uBAAwB,EAC7BlN,KAAKmN,0DA4DThK,EAAJrD,UAAAsN,sBAAI,WAEQpN,KAAKqN,gBAAkBrN,KAAKsN,cAAcpJ,SAC1ClE,KAAKuN,mBACLvN,KAAKqN,cAAgBrN,KAAKsN,cAAcpJ,OACxClE,KAAKuJ,kBAAkBS,gBAKvBhK,KAAKkM,uBACLlM,KAAKwN,cAAcxN,KAAKoM,gBACxBpM,KAAKmN,yBACLnN,KAAKkM,sBAAuB,EAC5BlM,KAAKuJ,kBAAkBS,gBAKvBhK,KAAKkN,wBACLlN,KAAKyN,0BACLzN,KAAKkN,uBAAwB,EAC7BlN,KAAKuJ,kBAAkBS,iBAI/B7G,EAAJrD,UAAA4N,cAAI,SAAcC,GACV,OAAQA,EAAMC,SACV,IAAKC,GAAAA,KACD7N,KAAKuM,WAAWuB,qBAChBH,EAAMI,gBACN,MACJ,KAAKC,GAAAA,IACDhO,KAAKuM,WAAW0B,oBAChBN,EAAMI,gBACN,MACJ,KAAKG,GAAAA,MACL,IAAKC,GAAAA,MACDnO,KAAK+L,mBAAmBzB,KAAKtK,KAAK2M,YAClCgB,EAAMI,gBACN,MACJ,SACI/N,KAAKuM,WAAW6B,UAAUT,KAItCxK,EAAJrD,UAAAuO,mBAAI,WAAA,GAAJzI,GAAA5F,KACcsO,EAAYtO,KAAKsJ,IAAMtJ,KAAKsJ,IAAIO,OAAS0E,EAAAA,GAAa,MACtDC,EAASxO,KAAK0L,cAAc7B,OArMX,KAsMjB4E,EAAU,WACZ7I,EAAK2H,mBAGTvN,MAAKuM,WAAa,GAAImC,GAAAA,gBAAgB1O,KAAKsN,eACtCqB,0BAA0B3O,KAAK0K,sBAC/BkE,WAEL5O,KAAKuM,WAAWC,iBAAiB,OAIAqC,WAA1BC,uBACDL,IACAK,sBAAsBL,GAI5BM,EAAAA,MAAMT,EAAWE,GACZlG,KAAK0G,EAAAA,UAAUhP,KAAKmM,YACpBzD,UAAU,WACP+F,IACA7I,EAAK2G,WAAWoC,0BACZ/I,EAAK8E,wBAOjB1K,KAAKuM,WAAW1C,OACXvB,KAAK0G,EAAAA,UAAUhP,KAAKmM,YACpBzD,UAAU,SAACuG,GACRrJ,EAAKoG,aAAa1B,KAAK2E,GACvBrJ,EAAKsJ,YAAYD,MAI7B9L,EAAJrD,UAAAM,YAAI,WACIJ,KAAKmM,UAAU7F,OACftG,KAAKmM,UAAU5F,YAMnBpD,EAAJrD,UAAAqP,iBAAI,WAAA,GAAJvJ,GAAA5F,KACcoP,EAAe,WACjBxJ,EAAK2H,mBACL3H,EAAK2D,kBAAkBS,eAK3BhK,MAAK2L,OAAO0D,IAAID,IAMpBjM,EAAJrD,UAAAyN,iBAAI,WACIvN,KAAKsP,yBACLtP,KAAKmN,yBACLnN,KAAKyN,2BAOTtK,EAAJrD,UAAA4M,aAAI,SAAa6C,GACT,IAAKvP,KAAKsN,cACN,OAAO,CAGX,IAAMkC,GAAMxP,KAAKsN,cACXtN,KAAKsN,cAAcmC,UAAUF,GAC7B,IAEN,SAASC,IAAQA,EAAIE,UAOzBvM,EAAJrD,UAAAoP,YAAI,SAAYS,GAKR,GAJI3P,KAAK4L,wBACL5L,KAAKwN,cAAcmC,GAGnB3P,KAAKsN,eAAiBtN,KAAKsN,cAAcpJ,OAAQ,CACjDlE,KAAKsN,cAAcmC,UAAUE,GAAUvE,OAKvC,IAAMwE,GAAc5P,KAAK6P,iBAAiBrP,cACpC8I,EAAMtJ,KAAK0K,oBAGbkF,GAAYE,WADJ,QAARxG,EACyB,EAGrBsG,EAAYG,YAAcH,EAAYpE,cAMtDrI,EAAJrD,UAAA4K,mBAAI,WACI,MAAO1K,MAAKsJ,KAA0B,QAAnBtJ,KAAKsJ,IAAInJ,MAAkB,MAAQ,OAI1DgD,EAAJrD,UAAA2N,wBAAI,WACI,GAAMuC,GAAiBhQ,KAAKgQ,eACtBC,EAC4B,QAA9BjQ,KAAK0K,sBACEsF,EACDA,CAKVhQ,MAAKkQ,QAAQ1P,cAAcmH,MAAMC,UAAY,cAAcqI,EAAnE,OAWI9M,EAAJrD,UAAAqQ,aAAI,SAAaC,GACT,GAAMC,GAAarQ,KAAK6P,iBAAiBrP,cAAcgL,WAGvDxL,MAAKgQ,iBACe,WAAdI,GAA0B,EAAI,GAAKC,EAlVf,GA2V9BlN,EAAJrD,UAAA0N,cAAI,SAAc8C,GACV,GAAMC,GAAgBvQ,KAAKsN,cACrBtN,KAAKsN,cAAcmC,UAAUa,GAC7B,IAEN,IAAKC,EAAL,CAKA,GAEIC,GACAC,EAHEJ,EAAarQ,KAAK6P,iBAAiBrP,cAAcgL,WAKrB,SAA9BxL,KAAK0K,sBACL8F,EAAiBD,EAAclF,gBAC/BoF,EAAgBD,EAAiBD,EAAchF,mBAE/CkF,EACIzQ,KAAKkQ,QAAQ1P,cAAcgL,YAC3B+E,EAAclF,gBAClBmF,EAAiBC,EAAgBF,EAAchF,iBAGnD,IAAMmF,GAAmB1Q,KAAKgQ,eACxBW,EAAkB3Q,KAAKgQ,eAAiBK,CAE1CG,GAAiBE,EAEjB1Q,KAAKgQ,gBACDU,EAAmBF,EA5WJ,GA6WZC,EAAgBE,IAEvB3Q,KAAKgQ,gBACDS,EAAgBE,EAhXD,MA4X3BxN,EAAJrD,UAAAwP,uBAAI,WACI,GAAMsB,GACF5Q,KAAKkQ,QAAQ1P,cAAcuP,YAC3B/P,KAAKO,WAAWC,cAAcgL,WAE7BoF,KACD5Q,KAAKgQ,eAAiB,GAGtBY,IAAc5Q,KAAK4L,wBACnB5L,KAAKuJ,kBAAkBS,eAG3BhK,KAAK4L,uBAAyBgF,GAYlCzN,EAAJrD,UAAAqN,uBAAI,WAEInN,KAAK8L,oBAA8C,IAAxB9L,KAAKgQ,eAChChQ,KAAK6L,mBACD7L,KAAKgQ,iBAAmBhQ,KAAKiN,uBACjCjN,KAAKuJ,kBAAkBS,gBAU3B7G,EAAJrD,UAAAmN,qBAAI,WAII,MAHwBjN,MAAKkQ,QAAQ1P,cAAcuP,YAChC/P,KAAK6P,iBAAiBrP,cAAcgL,aAEhB,GA1Y3C/K,GADCC,EAAAA,iEAGLyC,EAAArD,UAAA,gBAAA,MA8CIW,GADCoQ,EAAAA,gBAAgB7N,GACrBxB,EAAA,cAAmBsP,EAAAA,YAAnB3N,EAAArD,UAAA,oBAAA,IAEIW,GADCqG,EAAAA,UAAU,oBACftF,EAAA,cAAsBC,EAAAA,aAAtB0B,EAAArD,UAAA,uBAAA,IAEIW,GADCqG,EAAAA,UAAU,WACftF,EAAA,cAAaC,EAAAA,aAAb0B,EAAArD,UAAA,cAAA,IAaIW,GADCkK,EAAAA,kCACLxH,EAAArD,UAAA,yBAAA,IAIIW,GADCkK,EAAAA,kCACLxH,EAAArD,UAAA,mBAAA,IAzEaqD,EAAb1C,GAbCsG,EAAAA,WACGnG,SAAU,gBACVwE,SAAJ,2vBACIyF,QAAS,44CACT1D,cAAeC,EAAAA,kBAAkBC,KACjCL,gBAAiBC,EAAAA,wBAAwBC,OACzCnG,MACIC,MAAO,gBACP+P,qDACI,yBACJC,4BAA6B,mCAyG5B1P,EAAT,EAASyJ,EAAAA,YAHTvJ,EAAA,qBAA4BC,EAAAA,WACOwJ,EAAAA,kBACJgG,EAAAA,cACEjG,EAAAA,eACTkG,EAAAA,UAvGX/N,IAAoBsI,GCjCjC9I,EAAA,WAAA,QAAAA,MAAoC,MAAvBA,GAAblC,GAJCE,EAAAA,WACGC,SAAU,+DACVG,MAAQC,MAAO,yBAEN2B,MAMbC,EAAA,WAAA,QAAAA,MAA0C,MAA7BA,GAAbnC,GAJCE,EAAAA,WACGC,SAAU,6EACVG,MAAQC,MAAO,uCAEN4B,MAMbC,EAAA,WAAA,QAAAA,MAAuC,MAA1BA,GAAbpC,GAJCE,EAAAA,WACGC,SAAU,uEACVG,MAAQC,MAAO,oCAEN6B,MAMbC,EAAA,WAAA,QAAAA,MAAsC,MAAzBA,GAAbrC,GAJCE,EAAAA,WACGC,SAAU,mEACVG,MAAQC,MAAO,kCAEN8B,MAGTqO,EAAS,EAGbC,EAAA,WAAA,QAAAA,MAKA,MAAAA,MAYaC,EAAiB,GAAIC,GAAAA,eAAe,kBAIjDC,EAAA,WAEI,QAAJA,GAAuBC,GAAAxR,KAAvBwR,YAAuBA,EACvB,MAAAD,MACaE,EAGTC,EAAAA,WAAWhM,EAAAA,cAAc6L,IAoB7BjP,EAAA,SAAA3C,GA0DI,QAAJ2C,GACQ/B,EACQgJ,EACoBoI,EACQC,GAJxC,GAAJhM,GAMQjG,EANRkG,KAAA7F,KAMcO,IANdP,WAEgB4F,GAAhB2D,kBAAgBA,EArCH3D,EAAbiM,eAAmD,QAM5BjM,EAAvBkM,oBAAmE,GAAIrI,GAAAA,aAGhD7D,EAAvBmM,YACQ,GAAItI,GAAAA,aAGW7D,EAAvBoM,cAA2D,GAAIvI,GAAAA,aAGxC7D,EAAvBqM,kBACQ,GAAIxI,GAAAA,cAA+B,GAG/B7D,EAAZsM,cAA2C,EAG/BtM,EAAZuM,qBAA2C,EAG/BvM,EAAZwM,iBAA+BlK,EAAAA,aAAaC,MAGhCvC,EAAZyM,qBAAmCnK,EAAAA,aAAaC,MACpCvC,EAAZ0M,gBAAsC,EAC1B1M,EAAZwG,eAA4C,KAYpCxG,EAAK2M,SAAWC,EAAAA,sBAAsBb,GAEtC/L,EAAK6M,QAAUtB,IACfvL,EAAK+D,kBAAoBiI,GAAiBA,EAAcjI,kBACpDiI,EAAcjI,kBAAoB,QA4K9C,MAlPgClK,GAAhC6C,EAAA3C,GAMIC,OAAJC,eAAQyC,EAARxC,UAAA,iBAAAC,IAAI,WAA+B,MAAOC,MAAKsS,gBAC/CpS,IAAI,SAAkBC,GAAkBH,KAAKsS,eAAiBE,EAAAA,sBAAsBrS,oCAIhFP,OAAJC,eAAQyC,EAARxC,UAAA,iBAAAC,IAAI,WAAqC,MAAOC,MAAKoM,gBACrDlM,IAAI,SAAkBC,GACdH,KAAKkS,cAAgB5F,EAAAA,qBAAqBnM,EAAO,uCAkErDmC,EAAJxC,UAAAsN,sBAAI,WAAA,GAAJxH,GAAA5F,KAGckS,EAAgBlS,KAAKkS,cAAgBlS,KAAK0S,cAAc1S,KAAKkS,cAInE,IAAIlS,KAAKoM,iBAAmB8F,EAAe,CACvC,GAAMS,GAAoC,MAAvB3S,KAAKoM,cAEnBuG,IACD3S,KAAKiS,kBAAkB3H,KAAKtK,KAAK4S,kBAAkBV,IAKvDW,QAAQC,UAAUC,KAAK,WACnBnN,EAAKoN,KAAKC,QAAQ,SAACzD,EAAKD,GAAU,MAAAC,GAAIvP,SAAWsP,IAAU2C,IAEtDS,GACD/M,EAAKkM,oBAAoBxH,KAAK4H,KAM1ClS,KAAKgT,KAAKC,QAAQ,SAACzD,EAAYD,GAC3BC,EAAIvJ,SAAWsJ,EAAQ2C,EAII,MAAvBtM,EAAKwG,gBAA2C,IAAjBoD,EAAIvJ,UAAmBuJ,EAAItJ,SAC1DsJ,EAAItJ,OAASgM,EAAgBtM,EAAKwG,kBAItCpM,KAAKoM,iBAAmB8F,IACxBlS,KAAKoM,eAAiB8F,EACtBlS,KAAKuJ,kBAAkBS,iBAI/B1H,EAAJxC,UAAAuO,mBAAI,WAAA,GAAJzI,GAAA5F,IACQA,MAAKkT,uBAILlT,KAAKoS,iBAAmBpS,KAAKgT,KAAK3M,QAAQqC,UAAU,WAKhD,GAJsB9C,EAAK8M,cAAc9M,EAAKsM,iBAIxBtM,EAAKwG,eAGvB,IAAK,GAFC4G,GAAOpN,EAAKoN,KAAKvD,UAEdlL,EAAI,EAAGA,EAAIyO,EAAK9O,OAAQK,IAC7B,GAAIyO,EAAKzO,GAAGtE,SAAU,CAIlB2F,EAAKsM,cAAgBtM,EAAKwG,eAAiB7H,CAC3C,OAKZqB,EAAKsN,uBACLtN,EAAK2D,kBAAkBS,kBAI/B1H,EAAJxC,UAAAM,YAAI,WACIJ,KAAKoS,iBAAiBnJ,cACtBjJ,KAAKqS,qBAAqBpJ,eAG9B3G,EAAJxC,UAAAqT,aAAI,SAAa5D,GACTvP,KAAK+R,YAAYzH,KAAKtK,KAAK4S,kBAAkBrD,KAIjDjN,EAAJxC,UAAAsT,cAAI,SAAc7O,GACV,MAAO,gBAAgBvE,KAAKyS,QAApC,IAA+ClO,GAI3CjC,EAAJxC,UAAAuT,gBAAI,SAAgB9O,GACZ,MAAO,kBAAkBvE,KAAKyS,QAAtC,IAAiDlO,GAO7CjC,EAAJxC,UAAAwT,wBAAI,SAAwBC,GACpB,GAAKvT,KAAKsS,gBAAmBtS,KAAKmS,qBAAlC,CAEA,GAAMqB,GAAuBxT,KAAKyT,eAAejT,aAEjDgT,GAAQ7L,MAAM+L,OAAY1T,KAAKmS,qBAAvC,KAIYnS,KAAKyT,eAAejT,cAAcmT,eAClCH,EAAQ7L,MAAM+L,OAAYH,EAAtC,QAKIjR,EAAJxC,UAAA8T,2BAAI,WACI5T,KAAKmS,qBAAuBnS,KAAKyT,eAAejT,cAAc+J,aAC9DvK,KAAKyT,eAAejT,cAAcmH,MAAM+L,OAAS,GACjD1T,KAAKgS,cAAc1H,QAIvBhI,EAAJxC,UAAA+T,YAAI,SAAYrE,EAAYsE,EAAwBvE,GACvCC,EAAIE,WACL1P,KAAK+T,cAAgBD,EAAUnH,WAAa4C,IAKpDjN,EAAJxC,UAAAkU,YAAI,SAAYxE,EAAYD,GACpB,MAAIC,GAAIE,SACG,KAGJ1P,KAAK+T,gBAAkBxE,EAAQ,GAAK,GAGvCjN,EAAZxC,UAAA8S,kBAAI,SAA0BrD,GACtB,GAAM5B,GAAQ,GAAIyD,EAMlB,OALAzD,GAAM4B,MAAQA,EACVvP,KAAKgT,MAAQhT,KAAKgT,KAAK9O,SACvByJ,EAAM6B,IAAMxP,KAAKgT,KAAKvD,UAAUF,IAG7B5B,GASHrL,EAAZxC,UAAAoT,qBAAI,WAAA,GAAJtN,GAAA5F,IACYA,MAAKqS,sBACLrS,KAAKqS,qBAAqBpJ,cAG9BjJ,KAAKqS,qBAAuBtD,EAAAA,MAApCkF,UAAA,GAA6CjU,KAAKgT,KAAKkB,IAAI,SAAC1E,GAAQ,MAAAA,GAAIzJ,gBAC3D2C,UAAU,WAAM,MAAA9C,GAAK2D,kBAAkBS,kBAIxC1H,EAAZxC,UAAA4S,cAAI,SAAsBnD,GAIlB,MAAOzC,MAAKE,IAAIhN,KAAKgT,KAAK9O,OAAS,EAAG4I,KAAKC,IAAIwC,GAAS,EAAG,KA1O/D9O,GADCC,EAAAA,mEACL4B,EAAAxC,UAAA,gBAAA,MAKIW,GADCC,EAAAA,iEACL4B,EAAAxC,UAAA,gBAAA,MAK4BW,GAAvBoQ,EAAAA,gBAAgBrO,GAArBhB,EAAA,cAAkCsP,EAAAA,YAAlCxO,EAAAxC,UAAA,WAAA,IAEiCW,GAA5BqG,EAAAA,UAAU,kBAAftF,EAAA,cAAiDC,EAAAA,aAAjDa,EAAAxC,UAAA,qBAAA,IAE4BW,GAAvBqG,EAAAA,UAAU,aAAftF,EAAA,cAAuC2B,IAAvCb,EAAAxC,UAAA,gBAAA,IAGaW,GAARC,EAAAA,iCAAL4B,EAAAxC,UAAA,qBAAA,IAGaW,GAARC,EAAAA,iCAAL4B,EAAAxC,UAAA,wBAAA,IAGcW,GAATkK,EAAAA,SAALnJ,EAAA,cAA4CiI,EAAAA,eAA5CnH,EAAAxC,UAAA,0BAAA,IAGcW,GAATkK,EAAAA,SAALnJ,EAAA,cAAoCiI,EAAAA,eACpCnH,EAAAxC,UAAA,kBAAA,IAGcW,GAATkK,EAAAA,SAALnJ,EAAA,cAAsCiI,EAAAA,eAAtCnH,EAAAxC,UAAA,oBAAA,IAGcW,GAATkK,EAAAA,SAALnJ,EAAA,cAA0CiI,EAAAA,eAC1CnH,EAAAxC,UAAA,wBAAA,IAxCawC,EAAb7B,GAdCsG,EAAAA,WACGnG,SAAU,eACVC,SAAU,aACVuE,SAAJ,s+CACIyF,QAAS,s0FACT1D,cAAeC,EAAAA,kBAAkBC,KACjCL,gBAAiBC,EAAAA,wBAAwBC,OACzCpG,QAAS,SACTC,MACIC,MAAO,eACPmT,sCAAuC,gBACvCC,uCAAwC,gCAgEvC9S,EAAT,EAASC,EAAAA,UAAU,kBACVD,EAAT,EAAS4H,EAAAA,OAAOmI,IAAiB/P,EAAjC,EAAiCyJ,EAAAA,YAHjCvJ,EAAA,qBAAoBC,EAAAA,WACewJ,EAAAA,kBAAnCvJ,OAAA9B,UA5Da0C,IAAmBmP,GVnFhC4C,EAAA,WAEI,QAAJA,GAAuB7C,GAAAxR,KAAvBwR,YAAuBA,EACvB,MAAA6C,MACaC,EACa5C,EAAAA,WAAW2C,GAerC5R,EAAA,SAAA9C,GAEQ,QAAR8C,GAAoBlC,GACpB,MAAYZ,GAAZkG,KAAA7F,KAAkBO,IAAlBP,KAEK,MALyBP,GAA9BgD,EAAA9C,GAAa8C,EAAbhC,GAVCsG,EAAAA,WACGnG,SAAU,mBACVC,SAAU,wBACVC,QAAS,SACTsE,SAAJ,4DACIyF,QAAS,q4GACT9J,MAAQC,MAAO,kBACfmG,cAAeC,EAAAA,kBAAkBC,KACjCL,gBAAiBC,EAAAA,wBAAwBC,SAI7C1F,EAAA,qBAAgCC,EAAAA,cAFnBgB,IAAiB6R,GAQ9BC,EAAA,WAAA,QAAAA,MAA4B,MAA5BA,MACa3S,EACc4S,EAAAA,cAAc9O,EAAAA,cAAc6O,IAkBvD7U,EAAA,SAAAC,GAgBI,QAAJD,GACea,EACgBoP,EACftP,GAHZ,GAAJuF,GAKQjG,EALRkG,KAAA7F,OAAAA,WACe4F,GAAfrF,WAAeA,EAECqF,EAAhBvF,aAAgBA,EALFuF,EAAd3F,UAAkC,EAS1B2F,EAAK+J,SAAW8E,SAAS9E,IAAa,EACtC/J,EAAKvF,aAAaqU,QAAQ9O,EAAKrF,WAAWC;qDAMlD,MA9B+Bf,GAA/BC,EAAAC,GAIIC,OAAJC,eAAQH,EAARI,UAAA,UAAAC,IAAI,WACI,MAAOC,MAAKC,UAEpBC,IAAI,SAAWC,GACHA,IAAUH,KAAKC,WACfD,KAAKC,SAAWE,oCAkBxBT,EAAJI,UAAAM,YAAI,WACIJ,KAAKK,aAAaC,eAAeN,KAAKO,WAAWC,gBAxBrDC,GADCC,EAAAA,mEAGLhB,EAAAI,UAAA,SAAA,MANaJ,EAAbe,GAbCE,EAAAA,WACGC,SAAU,6BACVC,SAAU,YACVC,QAAS,WAAY,YACrBC,MACIC,MAAO,cACPC,sBAAuB,SACvBC,uBAAwB,sBACxBC,kBAAmB,WACnBC,sBAAuB,WACvBC,oBAAqB,YAqBpBC,EAAT,EAASC,EAAAA,UAAU,aADnBC,EAAA,qBAA2BC,EAAAA,WAA3BC,OAE8BC,EAAAA,gBAnBjBjC,IAAkBkC,GCZ/BC,EAAA,WAAA,QAAAA,MAA2B,MAAdA,GAAbpB,GAvCCqB,EAAAA,UACGC,SACIC,EAAAA,aACAC,EAAAA,eACAC,EAAAA,aACAC,EAAAA,WACAC,EAAAA,yBAGJC,SACIJ,EAAAA,eACAK,EACAC,EACAC,EACAC,EACA/C,EACAgD,EACAC,EACAC,EACAC,EACAC,GAEJC,cACIT,EACAC,EACAC,EACAQ,EACAP,EACA/C,EACAuD,EACAC,EACAC,EACAT,EACAC,EACAC,EACAC,EACAC,MAGKjB"}