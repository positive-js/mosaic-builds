{"version":3,"file":"mosaic-tabs.umd.min.js","sources":["../../src/lib/tabs/tab-nav-bar/tab-nav-bar.ts","../../src/lib/tabs/tabs.module.ts","../../node_modules/tslib/tslib.es6.js","../../src/lib/tabs/tab-content.ts","../../src/lib/tabs/tab-label.ts","../../src/lib/tabs/tab.ts","../../src/lib/tabs/tabs-animations.ts","../../src/lib/tabs/tab-body.ts","../../src/lib/tabs/tab-label-wrapper.ts","../../src/lib/tabs/tab-header.ts","../../src/lib/tabs/tab-group.ts"],"sourcesContent":["import {\n    Attribute,\n    ChangeDetectionStrategy,\n    Component,\n    Directive,\n    ElementRef,\n    Input,\n    OnDestroy,\n    ViewEncapsulation\n} from '@angular/core';\nimport { FocusMonitor } from '@ptsecurity/cdk/a11y';\nimport {\n    CanColor,\n    CanColorCtor,\n    CanDisable,\n    CanDisableCtor,\n    HasTabIndex,\n    HasTabIndexCtor,\n    mixinColor,\n    mixinDisabled,\n    mixinTabIndex\n} from '@ptsecurity/mosaic/core';\n\n\n// Boilerplate for applying mixins to McTabNav.\n/** @docs-private */\nexport class McTabNavBase {\n    // tslint:disable-next-line:naming-convention\n    constructor(public _elementRef: ElementRef) {}\n}\nexport const mcTabNavMixinBase: CanColorCtor &\n    typeof McTabNavBase = mixinColor(McTabNavBase);\n\n/**\n * Navigation component matching the styles of the tab group header.\n */\n@Component({\n    selector: '[mc-tab-nav-bar]',\n    exportAs: 'mcTabNavBar, mcTabNav',\n    inputs: ['color'],\n    templateUrl: 'tab-nav-bar.html',\n    styleUrls: ['tab-nav-bar.css'],\n    host: { class: 'mc-tab-nav-bar' },\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class McTabNav extends mcTabNavMixinBase\n    implements CanColor {\n        constructor(elementRef: ElementRef) {\n            super(elementRef);\n        }\n     }\n\n// Boilerplate for applying mixins to McTabLink.\nexport class McTabLinkBase {}\nexport const mcTabLinkMixinBase: HasTabIndexCtor & CanDisableCtor &\n    typeof McTabLinkBase = mixinTabIndex(mixinDisabled(McTabLinkBase));\n\n/**\n * Link inside of a `mc-tab-nav-bar`.\n */\n@Directive({\n    selector: '[mc-tab-link], [mcTabLink]',\n    exportAs: 'mcTabLink',\n    inputs: ['disabled', 'tabIndex'],\n    host: {\n        class: 'mc-tab-link',\n        '[attr.aria-current]': 'active',\n        '[attr.aria-disabled]': 'disabled.toString()',\n        '[attr.tabIndex]': 'tabIndex',\n        '[class.mc-disabled]': 'disabled',\n        '[class.mc-active]': 'active'\n    }\n})\nexport class McTabLink extends mcTabLinkMixinBase\n    implements OnDestroy, CanDisable, HasTabIndex {\n    /** Whether the link is active. */\n    @Input()\n    get active(): boolean {\n        return this.isActive;\n    }\n    set active(value: boolean) {\n        if (value !== this.isActive) {\n            this.isActive = value;\n        }\n    }\n\n    /** Whether the tab link is active or not. */\n    protected isActive: boolean = false;\n\n    constructor(\n        public elementRef: ElementRef,\n        @Attribute('tabindex') tabIndex: string,\n        private focusMonitor: FocusMonitor\n    ) {\n        super();\n\n        this.tabIndex = parseInt(tabIndex) || 0;\n        this.focusMonitor.monitor(this.elementRef.nativeElement);\n    }\n\n    ngOnDestroy() {\n        this.focusMonitor.stopMonitoring(this.elementRef.nativeElement);\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { A11yModule } from '@ptsecurity/cdk/a11y';\nimport { PortalModule } from '@ptsecurity/cdk/portal';\nimport { McCommonModule } from '@ptsecurity/mosaic/core';\n\nimport { McTab } from './tab';\nimport { McTabBody, McTabBodyPortal } from './tab-body';\nimport { McTabContent } from './tab-content';\nimport {\n    McTabGroup,\n    McLightTabsCssStyler,\n    McAlignTabsCenterCssStyler,\n    McAlignTabsEndCssStyler,\n    McStretchTabsCssStyler\n} from './tab-group';\nimport { McTabHeader } from './tab-header';\nimport { McTabLabel } from './tab-label';\nimport { McTabLabelWrapper } from './tab-label-wrapper';\nimport { McTabLink, McTabNav } from './tab-nav-bar/tab-nav-bar';\n\n\n@NgModule({\n    imports: [\n        CommonModule,\n        McCommonModule,\n        PortalModule,\n        A11yModule\n    ],\n    // Don't export all components because some are only to be used internally.\n    exports: [\n        McCommonModule,\n        McTabGroup,\n        McTabLabel,\n        McTab,\n        McTabNav,\n        McTabLink,\n        McTabContent,\n        McLightTabsCssStyler,\n        McAlignTabsCenterCssStyler,\n        McAlignTabsEndCssStyler,\n        McStretchTabsCssStyler\n    ],\n    declarations: [\n        McTabGroup,\n        McTabLabel,\n        McTab,\n        McTabLabelWrapper,\n        McTabNav,\n        McTabLink,\n        McTabBody,\n        McTabBodyPortal,\n        McTabHeader,\n        McTabContent,\n        McLightTabsCssStyler,\n        McAlignTabsCenterCssStyler,\n        McAlignTabsEndCssStyler,\n        McStretchTabsCssStyler\n    ]\n})\nexport class McTabsModule {}\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","import { Directive, TemplateRef } from '@angular/core';\n\n\n/** Decorates the `ng-template` tags and reads out the template from it. */\n@Directive({ selector: '[mcTabContent]' })\nexport class McTabContent {\n    constructor(public template: TemplateRef<any>) { }\n}\n","import { Directive } from '@angular/core';\nimport { CdkPortal } from '@ptsecurity/cdk/portal';\n\n\n/** Used to flag tab labels for use with the portal directive */\n@Directive({\n    selector: '[mc-tab-label], [mcTabLabel]'\n})\nexport class McTabLabel extends CdkPortal {}\n\n// TODO: workaround for https://github.com/angular/material2/issues/12760\n(McTabLabel as any).ctorParameters = () => (CdkPortal as any).ctorParameters;\n","import {\n    ChangeDetectionStrategy,\n    Component,\n    ContentChild,\n    Input,\n    OnChanges,\n    OnDestroy,\n    OnInit,\n    SimpleChanges,\n    TemplateRef,\n    ViewChild,\n    ViewContainerRef,\n    ViewEncapsulation\n} from '@angular/core';\nimport { TemplatePortal } from '@ptsecurity/cdk/portal';\nimport {\n    CanDisable,\n    CanDisableCtor,\n    mixinDisabled\n} from '@ptsecurity/mosaic/core';\nimport { Subject } from 'rxjs';\n\nimport { McTabContent } from './tab-content';\nimport { McTabLabel } from './tab-label';\n\n\nexport class McTabBase {}\nexport const mcTabMixinBase: CanDisableCtor & typeof McTabBase = mixinDisabled(\n    McTabBase\n);\n\n@Component({\n    selector: 'mc-tab',\n    // Create a template for the content of the <mc-tab> so that we can grab a reference to this\n    // TemplateRef and use it in a Portal to render the tab content in the appropriate place in the\n    // tab-group.\n    template: '<ng-template><ng-content></ng-content></ng-template>',\n    inputs: ['disabled'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n    exportAs: 'mcTab'\n})\nexport class McTab extends mcTabMixinBase\n    implements OnInit, CanDisable, OnChanges, OnDestroy {\n    /** @docs-private */\n    get content(): TemplatePortal | null {\n        return this.contentPortal;\n    }\n    /** Content for the tab label given by `<ng-template mc-tab-label>`. */\n    @ContentChild(McTabLabel)\n    templateLabel: McTabLabel;\n\n    /**\n     * Template provided in the tab content that will be used if present, used to enable lazy-loading\n     */\n    @ContentChild(McTabContent, { read: TemplateRef })\n    explicitContent: TemplateRef<any>;\n\n    /** Template inside the McTab view that contains an `<ng-content>`. */\n    @ViewChild(TemplateRef)\n    implicitContent: TemplateRef<any>;\n\n    /** Plain text label for the tab, used when there is no template label. */\n    @Input('label')\n    textLabel: string = '';\n\n    /** Aria label for the tab. */\n    @Input('aria-label')\n    ariaLabel: string;\n\n    /**\n     * Reference to the element that the tab is labelled by.\n     * Will be cleared if `aria-label` is set at the same time.\n     */\n    @Input('aria-labelledby')\n    ariaLabelledby: string;\n\n    /** Emits whenever the internal state of the tab changes. */\n    readonly stateChanges = new Subject<void>();\n\n    /**\n     * The relatively indexed position where 0 represents the center, negative is left, and positive\n     * represents the right.\n     */\n    position: number | null = null;\n\n    /**\n     * The initial relatively index origin of the tab if it was created and selected after there\n     * was already a selected tab. Provides context of what position the tab should originate from.\n     */\n    origin: number | null = null;\n\n    /**\n     * Whether the tab is currently active.\n     */\n    isActive = false;\n\n    /** Portal that will be the hosted content of the tab */\n    private contentPortal: TemplatePortal | null = null;\n\n    constructor(private viewContainerRef: ViewContainerRef) {\n        super();\n    }\n\n    ngOnChanges(changes: SimpleChanges): void {\n        if (\n            changes.hasOwnProperty('textLabel') ||\n            changes.hasOwnProperty('disabled')\n        ) {\n            this.stateChanges.next();\n        }\n    }\n\n    ngOnDestroy(): void {\n        this.stateChanges.complete();\n    }\n\n    ngOnInit(): void {\n        this.contentPortal = new TemplatePortal(\n            this.explicitContent || this.implicitContent,\n            this.viewContainerRef\n        );\n    }\n}\n","import {\n    animate,\n    state,\n    style,\n    transition,\n    trigger,\n    AnimationTriggerMetadata\n} from '@angular/animations';\n\n\nexport const mcTabsAnimations: {\n    readonly translateTab: AnimationTriggerMetadata;\n} = {\n    /** Animation translates a tab along the X axis. */\n    translateTab: trigger('translateTab', [\n        // Note: transitions to `none` instead of 0, because some browsers might blur the content.\n        state(\n            'center, void, left-origin-center, right-origin-center',\n            style({ transform: 'none' })\n        ),\n\n        // If the tab is either on the left or right, we additionally add a `min-height` of 1px\n        // in order to ensure that the element has a height before its state changes. This is\n        // necessary because Chrome does seem to skip the transition in RTL mode if the element does\n        // not have a static height and is not rendered. See related issue: #9465\n        state(\n            'left',\n            style({ transform: 'translate3d(-100%, 0, 0)', minHeight: '1px' })\n        ),\n        state(\n            'right',\n            style({ transform: 'translate3d(100%, 0, 0)', minHeight: '1px' })\n        ),\n\n        transition(\n            '* => left, * => right, left => center, right => center',\n            animate('{{animationDuration}} cubic-bezier(0.35, 0, 0.25, 1)')\n        ),\n        transition('void => left-origin-center', [\n            style({ transform: 'translate3d(-100%, 0, 0)' }),\n            animate('{{animationDuration}} cubic-bezier(0.35, 0, 0.25, 1)')\n        ]),\n        transition('void => right-origin-center', [\n            style({ transform: 'translate3d(100%, 0, 0)' }),\n            animate('{{animationDuration}} cubic-bezier(0.35, 0, 0.25, 1)')\n        ])\n    ])\n};\n","import { AnimationEvent } from '@angular/animations';\nimport {\n    Component,\n    ChangeDetectorRef,\n    Input,\n    Inject,\n    Output,\n    EventEmitter,\n    OnDestroy,\n    OnInit,\n    ElementRef,\n    Directive,\n    Optional,\n    ViewEncapsulation,\n    ChangeDetectionStrategy,\n    ComponentFactoryResolver,\n    ViewContainerRef,\n    forwardRef,\n    ViewChild\n} from '@angular/core';\nimport { Directionality, Direction } from '@ptsecurity/cdk/bidi';\nimport { TemplatePortal, CdkPortalOutlet, PortalHostDirective } from '@ptsecurity/cdk/portal';\nimport { Subscription } from 'rxjs';\nimport { startWith } from 'rxjs/operators';\n\nimport { mcTabsAnimations } from './tabs-animations';\n\n\n/**\n * These position states are used internally as animation states for the tab body. Setting the\n * position state to left, right, or center will transition the tab body from its current\n * position to its respective state. If there is not current position (void, in the case of a new\n * tab body), then there will be no transition animation to its state.\n *\n * In the case of a new tab body that should immediately be centered with an animating transition,\n * then left-origin-center or right-origin-center can be used, which will use left or right as its\n * psuedo-prior state.\n */\nexport type McTabBodyPositionState =\n    'left' | 'center' | 'right' | 'left-origin-center' | 'right-origin-center';\n\n/**\n * The origin state is an internally used state that is set on a new tab body indicating if it\n * began to the left or right of the prior selected index. For example, if the selected index was\n * set to 1, and a new tab is created and selected at index 2, then the tab body would have an\n * origin of right because its index was greater than the prior selected index.\n */\nexport type McTabBodyOriginState = 'left' | 'right';\n\n/**\n * Wrapper for the contents of a tab.\n * @docs-private\n */\n@Component({\n    selector: 'mc-tab-body',\n    templateUrl: 'tab-body.html',\n    styleUrls: ['tab-body.css'],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    animations: [mcTabsAnimations.translateTab],\n    host: {\n        class: 'mc-tab-body'\n    }\n})\nexport class McTabBody implements OnInit, OnDestroy {\n\n    /** The shifted index position of the tab body, where zero represents the active center tab. */\n    @Input()\n    set position(position: number) {\n        this.positionIndex = position;\n        this.computePositionAnimationState();\n    }\n\n    /** Tab body position state. Used by the animation trigger for the current state. */\n    bodyPosition: McTabBodyPositionState;\n\n    /** Event emitted when the tab begins to animate towards the center as the active tab. */\n    @Output() readonly onCentering: EventEmitter<number> = new EventEmitter<number>();\n\n    /** Event emitted before the centering of the tab begins. */\n    @Output() readonly beforeCentering: EventEmitter<boolean> = new EventEmitter<boolean>();\n\n    /** Event emitted before the centering of the tab begins. */\n    @Output() readonly afterLeavingCenter: EventEmitter<boolean> = new EventEmitter<boolean>();\n\n    /** Event emitted when the tab completes its animation towards the center. */\n    @Output() readonly onCentered: EventEmitter<void> = new EventEmitter<void>(true);\n\n    /** The portal host inside of this container into which the tab body content will be loaded. */\n    @ViewChild(PortalHostDirective) portalHost: PortalHostDirective;\n\n    /** The tab body content to display. */\n    @Input('content') content: TemplatePortal;\n\n    /** Position that will be used when the tab is immediately becoming visible after creation. */\n    @Input() origin: number;\n\n    // Note that the default value will always be overwritten by `McTabBody`, but we need one\n    // anyway to prevent the animations module from throwing an error if the body is used on its own.\n    /** Duration for the tab's animation. */\n    @Input() animationDuration: string = '0ms';\n\n    /** Current position of the tab-body in the tab-group. Zero means that the tab is visible. */\n    private positionIndex: number;\n\n    /** Subscription to the directionality change observable. */\n    private dirChangeSubscription = Subscription.EMPTY;\n\n    constructor(private elementRef: ElementRef<HTMLElement>,\n                @Optional() private dir: Directionality,\n                changeDetectorRef: ChangeDetectorRef) {\n\n        if (this.dir && changeDetectorRef) {\n            this.dirChangeSubscription = this.dir.change.subscribe((direction: Direction) => {\n                this.computePositionAnimationState(direction);\n                changeDetectorRef.markForCheck();\n            });\n        }\n    }\n\n    /**\n     * After initialized, check if the content is centered and has an origin. If so, set the\n     * special position states that transition the tab from the left or right before centering.\n     */\n    ngOnInit() {\n        if (this.bodyPosition === 'center' && this.origin != null) {\n            this.bodyPosition = this.computePositionFromOrigin();\n        }\n    }\n\n    ngOnDestroy() {\n        this.dirChangeSubscription.unsubscribe();\n    }\n\n    onTranslateTabStarted(e: AnimationEvent): void {\n        const isCentering = this.isCenterPosition(e.toState);\n        this.beforeCentering.emit(isCentering);\n        if (isCentering) {\n            this.onCentering.emit(this.elementRef.nativeElement.clientHeight);\n        }\n    }\n\n    onTranslateTabComplete(e: AnimationEvent): void {\n        // If the transition to the center is complete, emit an event.\n        if (this.isCenterPosition(e.toState) && this.isCenterPosition(this.bodyPosition)) {\n            this.onCentered.emit();\n        }\n\n        if (this.isCenterPosition(e.fromState) && !this.isCenterPosition(this.bodyPosition)) {\n            this.afterLeavingCenter.emit();\n        }\n    }\n\n    /** The text direction of the containing app. */\n    getLayoutDirection(): Direction {\n        return this.dir && this.dir.value === 'rtl' ? 'rtl' : 'ltr';\n    }\n\n    /** Whether the provided position state is considered center, regardless of origin. */\n    isCenterPosition(position: McTabBodyPositionState | string): boolean {\n        return position === 'center' ||\n            position === 'left-origin-center' ||\n            position === 'right-origin-center';\n    }\n\n    /** Computes the position state that will be used for the tab-body animation trigger. */\n    private computePositionAnimationState(dir: Direction = this.getLayoutDirection()) {\n        if (this.positionIndex < 0) {\n            this.bodyPosition = dir === 'ltr' ? 'left' : 'right';\n        } else if (this.positionIndex > 0) {\n            this.bodyPosition = dir === 'ltr' ? 'right' : 'left';\n        } else {\n            this.bodyPosition = 'center';\n        }\n    }\n\n    /**\n     * Computes the position state based on the specified origin position. This is used if the\n     * tab is becoming visible immediately after creation.\n     */\n    private computePositionFromOrigin(): McTabBodyPositionState {\n        const dir = this.getLayoutDirection();\n\n        if ((dir === 'ltr' && this.origin <= 0) || (dir === 'rtl' && this.origin > 0)) {\n            return 'left-origin-center';\n        }\n\n        return 'right-origin-center';\n    }\n}\n\n/**\n * The portal host directive for the contents of the tab.\n * @docs-private\n */\n@Directive({\n    selector: '[mcTabBodyHost]'\n})\nexport class McTabBodyPortal extends CdkPortalOutlet implements OnInit, OnDestroy {\n    /** Subscription to events for when the tab body begins centering. */\n    private centeringSub = Subscription.EMPTY;\n    /** Subscription to events for when the tab body finishes leaving from center position. */\n    private leavingSub = Subscription.EMPTY;\n\n    constructor(\n        componentFactoryResolver: ComponentFactoryResolver,\n        viewContainerRef: ViewContainerRef,\n        @Inject(forwardRef(() => McTabBody)) private host: McTabBody) {\n        super(componentFactoryResolver, viewContainerRef);\n    }\n\n    /** Set initial visibility or set up subscription for changing visibility. */\n    ngOnInit(): void {\n        super.ngOnInit();\n\n        this.centeringSub = this.host.beforeCentering\n            .pipe(startWith(this.host.isCenterPosition(this.host.bodyPosition)))\n            .subscribe((isCentering: boolean) => {\n                if (isCentering && !this.hasAttached()) {\n                    this.attach(this.host.content);\n                }\n            });\n\n        this.leavingSub = this.host.afterLeavingCenter.subscribe(() => {\n            this.detach();\n        });\n    }\n\n    /** Clean up centering subscription. */\n    ngOnDestroy(): void {\n        super.ngOnDestroy();\n        this.centeringSub.unsubscribe();\n        this.leavingSub.unsubscribe();\n    }\n}\n","import { Directive, ElementRef } from '@angular/core';\nimport {\n    CanDisable,\n    CanDisableCtor,\n    mixinDisabled\n} from '@ptsecurity/mosaic/core';\n\n\n// Boilerplate for applying mixins to McTabLabelWrapper.\n/** @docs-private */\nexport class McTabLabelWrapperBase {}\nexport const mcTabLabelWrapperMixinBase: CanDisableCtor &\n    typeof McTabLabelWrapperBase = mixinDisabled(McTabLabelWrapperBase);\n\n/**\n * Used in the `mc-tab-group` view to display tab labels.\n * @docs-private\n */\n@Directive({\n    selector: '[mcTabLabelWrapper]',\n    inputs: ['disabled'],\n    host: {\n        '[class.mc-disabled]': 'disabled',\n        '[attr.aria-disabled]': '!!disabled'\n    }\n})\nexport class McTabLabelWrapper extends mcTabLabelWrapperMixinBase implements CanDisable {\n    constructor(public elementRef: ElementRef) {\n        super();\n    }\n\n    /** Sets focus on the wrapper element */\n    focus(): void {\n        this.elementRef.nativeElement.focus();\n    }\n\n    getOffsetLeft(): number {\n        return this.elementRef.nativeElement.offsetLeft;\n    }\n\n    getOffsetWidth(): number {\n        return this.elementRef.nativeElement.offsetWidth;\n    }\n}\n","import {\n    AfterContentChecked,\n    AfterContentInit,\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    ContentChildren,\n    ElementRef,\n    EventEmitter,\n    Input,\n    NgZone,\n    OnDestroy,\n    Optional,\n    Output,\n    QueryList,\n    ViewChild,\n    ViewEncapsulation\n} from '@angular/core';\nimport { FocusKeyManager } from '@ptsecurity/cdk/a11y';\nimport { Direction, Directionality } from '@ptsecurity/cdk/bidi';\nimport { coerceNumberProperty } from '@ptsecurity/cdk/coercion';\nimport { END, ENTER, HOME, SPACE } from '@ptsecurity/cdk/keycodes';\nimport { ViewportRuler } from '@ptsecurity/cdk/scrolling';\nimport { merge, of as observableOf, Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\n\nimport { McTabLabelWrapper } from './tab-label-wrapper';\n\n\nconst VIEWPORT_THROTTLE_TIME = 150;\nconst SCROLL_DISTANCE_DELIMITER = 3;\n\n\n/**\n * The directions that scrolling can go in when the header's tabs exceed the header width. 'After'\n * will scroll the header towards the end of the tabs list and 'before' will scroll towards the\n * beginning of the list.\n */\nexport type ScrollDirection = 'after' | 'before';\n\n/**\n * The distance in pixels that will be overshot when scrolling a tab label into view. This helps\n * provide a small affordance to the label next to it.\n */\nconst EXAGGERATED_OVERSCROLL = 60;\n\n// Boilerplate for applying mixins to McTabHeader.\n/** @docs-private */\nexport class McTabHeaderBase {}\n\n/**\n * The header of the tab group which displays a list of all the tabs in the tab group.\n * When the tabs list's width exceeds the width of the header container,\n * then arrows will be displayed to allow the user to scroll\n * left and right across the header.\n * @docs-private\n */\n@Component({\n    selector: 'mc-tab-header',\n    templateUrl: 'tab-header.html',\n    styleUrls: ['tab-header.css'],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    host: {\n        class: 'mc-tab-header',\n        '[class.mc-tab-header__pagination-controls_enabled]':\n            'showPaginationControls',\n        '[class.mc-tab-header_rtl]': 'getLayoutDirection() == \\'rtl\\''\n    }\n})\nexport class McTabHeader extends McTabHeaderBase\n    implements AfterContentChecked, AfterContentInit, OnDestroy {\n    /** The index of the active tab. */\n    @Input()\n    get selectedIndex(): number {\n        return this._selectedIndex;\n    }\n    set selectedIndex(value: number) {\n        const coercedValue = coerceNumberProperty(value);\n        this.selectedIndexChanged = this._selectedIndex !== coercedValue;\n        this._selectedIndex = coercedValue;\n\n        if (this.keyManager) {\n            this.keyManager.updateActiveItem(coercedValue);\n        }\n    }\n\n    /** Tracks which element has focus; used for keyboard navigation */\n    get focusIndex(): number {\n        return this.keyManager ? this.keyManager.activeItemIndex! : 0;\n    }\n\n    /** When the focus index is set, we must manually send focus to the correct label */\n    set focusIndex(value: number) {\n        if (\n            !this.isValidIndex(value) ||\n            this.focusIndex === value ||\n            !this.keyManager\n        ) {\n            return;\n        }\n\n        this.keyManager.setActiveItem(value);\n    }\n\n    /** Sets the distance in pixels that the tab header should be transformed in the X-axis. */\n    get scrollDistance(): number {\n        return this._scrollDistance;\n    }\n    set scrollDistance(v: number) {\n        this._scrollDistance = Math.max(\n            0,\n            Math.min(this.getMaxScrollDistance(), v)\n        );\n\n        // Mark that the scroll distance has changed so that after the view is checked, the CSS\n        // transformation can move the header.\n        this.scrollDistanceChanged = true;\n        this.checkScrollingControls();\n    }\n\n    @ContentChildren(McTabLabelWrapper)\n    labelWrappers: QueryList<McTabLabelWrapper>;\n    @ViewChild('tabListContainer')\n    tabListContainer: ElementRef;\n    @ViewChild('tabList')\n    tabList: ElementRef;\n\n    /** Whether the controls for pagination should be displayed */\n    showPaginationControls = false;\n\n    /** Whether the tab list can be scrolled more towards the end of the tab label list. */\n    disableScrollAfter = true;\n\n    /** Whether the tab list can be scrolled more towards the beginning of the tab label list. */\n    disableScrollBefore = true;\n\n    /** Event emitted when the option is selected. */\n    @Output()\n    readonly selectFocusedIndex: EventEmitter<number> = new EventEmitter<number>();\n\n    /** Event emitted when a label is focused. */\n    @Output()\n    readonly indexFocused: EventEmitter<number> = new EventEmitter<number>();\n\n    /** The distance in pixels that the tab labels should be translated to the left. */\n    private _scrollDistance = 0;\n\n    /** Whether the header should scroll to the selected index after the view has been checked. */\n    private selectedIndexChanged = false;\n\n    /** Emits when the component is destroyed. */\n    private readonly destroyed = new Subject<void>();\n\n    /**\n     * The number of tab labels that are displayed on the header. When this changes, the header\n     * should re-evaluate the scroll position.\n     */\n    private tabLabelCount: number;\n\n    /** Whether the scroll distance has changed and should be applied after the view is checked. */\n    private scrollDistanceChanged: boolean;\n\n    /** Used to manage focus between the tabs. */\n    private keyManager: FocusKeyManager<McTabLabelWrapper>;\n\n    /** Cached text content of the header. */\n    private currentTextContent: string;\n\n    private _selectedIndex: number = 0;\n\n    constructor(\n        private elementRef: ElementRef,\n        private changeDetectorRef: ChangeDetectorRef,\n        private viewportRuler: ViewportRuler,\n        @Optional() private dir: Directionality,\n        private ngZone: NgZone\n    ) {\n        super();\n    }\n\n    ngAfterContentChecked(): void {\n        // If the number of tab labels have changed, check if scrolling should be enabled\n        if (this.tabLabelCount !== this.labelWrappers.length) {\n            this.updatePagination();\n            this.tabLabelCount = this.labelWrappers.length;\n            this.changeDetectorRef.markForCheck();\n        }\n\n        // If the selected index has changed, scroll to the label and check if the scrolling controls\n        // should be disabled.\n        if (this.selectedIndexChanged) {\n            this.scrollToLabel(this._selectedIndex);\n            this.checkScrollingControls();\n            this.selectedIndexChanged = false;\n            this.changeDetectorRef.markForCheck();\n        }\n\n        // If the scroll distance has been changed (tab selected, focused, scroll controls activated),\n        // then translate the header to reflect this.\n        if (this.scrollDistanceChanged) {\n            this.updateTabScrollPosition();\n            this.scrollDistanceChanged = false;\n            this.changeDetectorRef.markForCheck();\n        }\n    }\n\n    handleKeydown(event: KeyboardEvent) {\n        switch (event.keyCode) {\n            case HOME:\n                this.keyManager.setFirstItemActive();\n                event.preventDefault();\n                break;\n            case END:\n                this.keyManager.setLastItemActive();\n                event.preventDefault();\n                break;\n            case ENTER:\n            case SPACE:\n                this.selectFocusedIndex.emit(this.focusIndex);\n                event.preventDefault();\n                break;\n            default:\n                this.keyManager.onKeydown(event);\n        }\n    }\n\n    ngAfterContentInit() {\n        const dirChange = this.dir ? this.dir.change : observableOf(null);\n        const resize = this.viewportRuler.change(VIEWPORT_THROTTLE_TIME);\n        const realign = () => {\n            this.updatePagination();\n        };\n\n        this.keyManager = new FocusKeyManager(this.labelWrappers)\n            .withHorizontalOrientation(this.getLayoutDirection())\n            .withWrap();\n\n        this.keyManager.updateActiveItem(0);\n\n        // Defer the first call in order to allow for slower browsers to lay out the elements.\n        // This helps in cases where the user lands directly on a page with paginated tabs.\n        typeof requestAnimationFrame === undefined\n            ? realign()\n            : requestAnimationFrame(realign);\n\n        // On dir change or window resize, update the orientation of\n        // the key manager if the direction has changed.\n        merge(dirChange, resize)\n            .pipe(takeUntil(this.destroyed))\n            .subscribe(() => {\n                realign();\n                this.keyManager.withHorizontalOrientation(\n                    this.getLayoutDirection()\n                );\n            });\n\n        // If there is a change in the focus key manager we need to emit the `indexFocused`\n        // event in order to provide a public event that notifies about focus changes. Also we realign\n        // the tabs container by scrolling the new focused tab into the visible section.\n        this.keyManager.change\n            .pipe(takeUntil(this.destroyed))\n            .subscribe((newFocusIndex) => {\n                this.indexFocused.emit(newFocusIndex);\n                this.setTabFocus(newFocusIndex);\n            });\n    }\n\n    ngOnDestroy() {\n        this.destroyed.next();\n        this.destroyed.complete();\n    }\n\n    /**\n     * Callback for when the MutationObserver detects that the content has changed.\n     */\n    onContentChanges() {\n        const textContent = this.elementRef.nativeElement.textContent;\n\n        // We need to diff the text content of the header, because the MutationObserver callback\n        // will fire even if the text content didn't change which is inefficient and is prone\n        // to infinite loops if a poorly constructed expression is passed in.\n\n        if (textContent !== this.currentTextContent) {\n            this.currentTextContent = textContent;\n\n            const zoneCallback = () => {\n                this.updatePagination();\n                this.changeDetectorRef.markForCheck();\n            };\n\n            // The content observer runs outside the `NgZone` by default, which\n            // means that we need to bring the callback back in ourselves.\n            // TODO: Remove null check for `_ngZone` once it's a required parameter.\n            this.ngZone ? this.ngZone.run(zoneCallback) : zoneCallback();\n        }\n    }\n\n    /**\n     * Updating the view whether pagination should be enabled or not\n     *\n     * WARNING: Calling this method can be very costly in terms of performance.  It should be called\n     * as infrequently as possible from outside of the Tabs component as it causes a reflow of the\n     * page.\n     */\n    updatePagination() {\n        this.checkPaginationEnabled();\n        this.checkScrollingControls();\n        this.updateTabScrollPosition();\n    }\n\n    /**\n     * Determines if an index is valid.  If the tabs are not ready yet, we assume that the user is\n     * providing a valid index and return true.\n     */\n    isValidIndex(index: number): boolean {\n        if (!this.labelWrappers) {\n            return true;\n        }\n\n        const tab = this.labelWrappers\n            ? this.labelWrappers.toArray()[index]\n            : null;\n\n        return !!tab && !tab.disabled;\n    }\n\n    /**\n     * Sets focus on the HTML element for the label wrapper and scrolls it into the view if\n     * scrolling is enabled.\n     */\n    setTabFocus(tabIndex: number) {\n        if (this.showPaginationControls) {\n            this.scrollToLabel(tabIndex);\n        }\n\n        if (this.labelWrappers && this.labelWrappers.length) {\n            this.labelWrappers.toArray()[tabIndex].focus();\n\n            // Do not let the browser manage scrolling to focus the element, this will be handled\n            // by using translation. In LTR, the scroll left should be 0. In RTL, the scroll width\n            // should be the full width minus the offset width.\n            const containerEl = this.tabListContainer.nativeElement;\n            const dir = this.getLayoutDirection();\n\n            if (dir === 'ltr') {\n                containerEl.scrollLeft = 0;\n            } else {\n                containerEl.scrollLeft =\n                    containerEl.scrollWidth - containerEl.offsetWidth;\n            }\n        }\n    }\n\n    /** The layout direction of the containing app. */\n    getLayoutDirection(): Direction {\n        return this.dir && this.dir.value === 'rtl' ? 'rtl' : 'ltr';\n    }\n\n    /** Performs the CSS transformation on the tab list that will cause the list to scroll. */\n    updateTabScrollPosition() {\n        const scrollDistance = this.scrollDistance;\n        const translateX =\n            this.getLayoutDirection() === 'ltr'\n                ? -scrollDistance\n                : scrollDistance;\n\n        // Don't use `translate3d` here because we don't want to create a new layer. A new layer\n        // seems to cause flickering and overflow in Internet Explorer.\n        // See: https://github.com/angular/material2/issues/10276\n        // We round the `transform` here, because transforms with sub-pixel precision cause some\n        // browsers to blur the content of the element.\n        this.tabList.nativeElement.style.transform = `translateX(${Math.round(translateX)}px)`;\n\n        // Setting the `transform` on IE will change the scroll offset of the parent, causing the\n        // position to be thrown off in some cases. We have to reset it ourselves to ensure that\n        // it doesn't get thrown off.\n        this.tabList.nativeElement.scrollLeft = 0;\n    }\n\n    /**\n     * Moves the tab list in the 'before' or 'after' direction (towards the beginning of the list or\n     * the end of the list, respectively). The distance to scroll is computed to be a third of the\n     * length of the tab list view window.\n     *\n     * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n     * should be called sparingly.\n     */\n    scrollHeader(scrollDir: ScrollDirection) {\n        const viewLength = this.tabListContainer.nativeElement.offsetWidth;\n\n        // Move the scroll distance one-third the length of the tab list's viewport.\n        this.scrollDistance +=\n            ((scrollDir === 'before' ? -1 : 1) * viewLength) / SCROLL_DISTANCE_DELIMITER;\n    }\n\n    /**\n     * Moves the tab list such that the desired tab label (marked by index) is moved into view.\n     *\n     * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n     * should be called sparingly.\n     */\n    scrollToLabel(labelIndex: number) {\n        const selectedLabel = this.labelWrappers\n            ? this.labelWrappers.toArray()[labelIndex]\n            : null;\n\n        if (!selectedLabel) {\n            return;\n        }\n\n        // The view length is the visible width of the tab labels.\n        const viewLength = this.tabListContainer.nativeElement.offsetWidth;\n\n        let labelBeforePos: number;\n        let labelAfterPos: number;\n\n        if (this.getLayoutDirection() === 'ltr') {\n            labelBeforePos = selectedLabel.getOffsetLeft();\n            labelAfterPos = labelBeforePos + selectedLabel.getOffsetWidth();\n        } else {\n            labelAfterPos =\n                this.tabList.nativeElement.offsetWidth -\n                selectedLabel.getOffsetLeft();\n            labelBeforePos = labelAfterPos - selectedLabel.getOffsetWidth();\n        }\n\n        const beforeVisiblePos = this.scrollDistance;\n        const afterVisiblePos = this.scrollDistance + viewLength;\n\n        if (labelBeforePos < beforeVisiblePos) {\n            // Scroll header to move label to the before direction\n            this.scrollDistance -=\n                beforeVisiblePos - labelBeforePos + EXAGGERATED_OVERSCROLL;\n        } else if (labelAfterPos > afterVisiblePos) {\n            // Scroll header to move label to the after direction\n            this.scrollDistance +=\n                labelAfterPos - afterVisiblePos + EXAGGERATED_OVERSCROLL;\n        }\n    }\n\n    /**\n     * Evaluate whether the pagination controls should be displayed. If the scroll width of the\n     * tab list is wider than the size of the header container, then the pagination controls should\n     * be shown.\n     *\n     * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n     * should be called sparingly.\n     */\n    checkPaginationEnabled() {\n        const isEnabled =\n            this.tabList.nativeElement.scrollWidth >\n            this.elementRef.nativeElement.offsetWidth;\n\n        if (!isEnabled) {\n            this.scrollDistance = 0;\n        }\n\n        if (isEnabled !== this.showPaginationControls) {\n            this.changeDetectorRef.markForCheck();\n        }\n\n        this.showPaginationControls = isEnabled;\n    }\n\n    /**\n     * Evaluate whether the before and after controls should be enabled or disabled.\n     * If the header is at the beginning of the list (scroll distance is equal to 0) then disable the\n     * before button. If the header is at the end of the list (scroll distance is equal to the\n     * maximum distance we can scroll), then disable the after button.\n     *\n     * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n     * should be called sparingly.\n     */\n    checkScrollingControls() {\n        // Check if the pagination arrows should be activated.\n        this.disableScrollBefore = this.scrollDistance === 0;\n        this.disableScrollAfter =\n            this.scrollDistance === this.getMaxScrollDistance();\n        this.changeDetectorRef.markForCheck();\n    }\n\n    /**\n     * Determines what is the maximum length in pixels that can be set for the scroll distance. This\n     * is equal to the difference in width between the tab list container and tab header container.\n     *\n     * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n     * should be called sparingly.\n     */\n    getMaxScrollDistance(): number {\n        const lengthOfTabList = this.tabList.nativeElement.scrollWidth;\n        const viewLength = this.tabListContainer.nativeElement.offsetWidth;\n\n        return lengthOfTabList - viewLength || 0;\n    }\n}\n","import {\n    AfterContentChecked,\n    AfterContentInit,\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    ContentChildren,\n    ElementRef,\n    EventEmitter,\n    Input,\n    OnDestroy,\n    Output,\n    QueryList,\n    ViewChild,\n    ViewEncapsulation,\n    InjectionToken,\n    Inject,\n    Optional,\n    Directive, Attribute\n} from '@angular/core';\nimport { coerceBooleanProperty, coerceNumberProperty } from '@ptsecurity/cdk/coercion';\nimport {\n    CanColor,\n    CanColorCtor,\n    mixinColor,\n    mixinDisabled\n} from '@ptsecurity/mosaic/core';\nimport { merge, Subscription } from 'rxjs';\n\nimport { McTab } from './tab';\nimport { McTabHeader } from './tab-header';\n\n\n@Directive({\n    selector: 'mc-tab-group[mc-light-tabs], [mc-tab-nav-bar][mc-light-tabs]',\n    host: { class: 'mc-tab-group_light' }\n})\nexport class McLightTabsCssStyler { }\n\n@Directive({\n    selector: 'mc-tab-group[mc-align-tabs-center], [mc-tab-nav-bar][mc-align-tabs-center]',\n    host: { class: 'mc-tab-group_align-labels-center' }\n})\nexport class McAlignTabsCenterCssStyler { }\n\n@Directive({\n    selector: 'mc-tab-group[mc-align-tabs-end], [mc-tab-nav-bar][mc-align-tabs-end]',\n    host: { class: 'mc-tab-group_align-labels-end' }\n})\nexport class McAlignTabsEndCssStyler { }\n\n@Directive({\n    selector: 'mc-tab-group[mc-stretch-tabs], [mc-tab-nav-bar][mc-stretch-tabs]',\n    host: { class: 'mc-tab-group_stretch-labels' }\n})\nexport class McStretchTabsCssStyler { }\n\n/** Used to generate unique ID's for each tab component */\nlet nextId = 0;\n\n/** A simple change event emitted on focus or selection changes. */\nexport class McTabChangeEvent {\n    /** Index of the currently-selected tab. */\n    index: number;\n    /** Reference to the currently-selected tab. */\n    tab: McTab;\n}\n\n/** Possible positions for the tab header. */\nexport type McTabHeaderPosition = 'above' | 'below';\n\n/** Object that can be used to configure the default options for the tabs module. */\nexport interface IMcTabsConfig {\n    /** Duration for the tab animation. Must be a valid CSS value (e.g. 600ms). */\n    animationDuration?: string;\n}\n\n/** Injection token that can be used to provide the default options the tabs module. */\nexport const MC_TABS_CONFIG = new InjectionToken('MC_TABS_CONFIG');\n\n// Boilerplate for applying mixins to McTabGroup.\n/** @docs-private */\nexport class McTabGroupBase {\n    // tslint:disable-next-line:naming-convention\n    constructor(public _elementRef: ElementRef) { }\n}\nexport const mcTabGroupMixinBase:\n    CanColorCtor &\n    typeof McTabGroupBase =\n    mixinColor(mixinDisabled(McTabGroupBase));\n\n/**\n * Tab-group component.  Supports basic tab pairs (label + content) and includes\n * keyboard navigation.\n */\n@Component({\n    selector: 'mc-tab-group',\n    exportAs: 'mcTabGroup',\n    templateUrl: 'tab-group.html',\n    styleUrls: ['tab-group.css'],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    inputs: ['color'],\n    host: {\n        class: 'mc-tab-group',\n        '[class.mc-tab-group_dynamic-height]': 'dynamicHeight',\n        '[class.mc-tab-group_inverted-header]': 'headerPosition === \"below\"'\n    }\n})\nexport class McTabGroup extends mcTabGroupMixinBase implements AfterContentInit,\n    AfterContentChecked, OnDestroy, CanColor {\n    lightTab: boolean;\n\n    /** Whether the tab group should grow to the size of the active tab. */\n    @Input()\n    get dynamicHeight(): boolean { return this._dynamicHeight; }\n    set dynamicHeight(value: boolean) { this._dynamicHeight = coerceBooleanProperty(value); }\n\n    /** The index of the active tab. */\n    @Input()\n    get selectedIndex(): number | null { return this._selectedIndex; }\n    set selectedIndex(value: number | null) {\n        this.indexToSelect = coerceNumberProperty(value, null);\n    }\n\n    @ContentChildren(McTab) tabs: QueryList<McTab>;\n\n    @ViewChild('tabBodyWrapper') tabBodyWrapper: ElementRef;\n\n    @ViewChild('tabHeader') tabHeader: McTabHeader;\n\n    /** Position of the tab header. */\n    @Input() headerPosition: McTabHeaderPosition = 'above';\n\n    /** Duration for the tab animation. Must be a valid CSS value (e.g. 600ms). */\n    @Input() animationDuration: string;\n\n    /** Output to enable support for two-way binding on `[(selectedIndex)]` */\n    @Output() readonly selectedIndexChange: EventEmitter<number> = new EventEmitter<number>();\n\n    /** Event emitted when focus has changed within a tab group. */\n    @Output() readonly focusChange: EventEmitter<McTabChangeEvent> =\n        new EventEmitter<McTabChangeEvent>();\n\n    /** Event emitted when the body animation has completed */\n    @Output() readonly animationDone: EventEmitter<void> = new EventEmitter<void>();\n\n    /** Event emitted when the tab selection has changed. */\n    @Output() readonly selectedTabChange: EventEmitter<McTabChangeEvent> =\n        new EventEmitter<McTabChangeEvent>(true);\n\n    /** The tab index that should be selected after the content has been checked. */\n    private indexToSelect: number | null = 0;\n\n    /** Snapshot of the height of the tab body wrapper before another tab is activated. */\n    private tabBodyWrapperHeight: number = 0;\n\n    /** Subscription to tabs being added/removed. */\n    private tabsSubscription = Subscription.EMPTY;\n\n    /** Subscription to changes in the tab labels. */\n    private tabLabelSubscription = Subscription.EMPTY;\n    private _dynamicHeight: boolean = false;\n    private _selectedIndex: number | null = null;\n\n    private groupId: number;\n\n    constructor(\n        elementRef: ElementRef,\n        private changeDetectorRef: ChangeDetectorRef,\n        @Attribute('mc-light-tabs') lightTabs: string,\n        @Inject(MC_TABS_CONFIG) @Optional() defaultConfig?: IMcTabsConfig\n    ) {\n        super(elementRef);\n\n        this.lightTab = coerceBooleanProperty(lightTabs);\n\n        this.groupId = nextId++;\n        this.animationDuration = defaultConfig && defaultConfig.animationDuration ?\n            defaultConfig.animationDuration : '0ms';\n    }\n\n    /**\n     * After the content is checked, this component knows what tabs have been defined\n     * and what the selected index should be. This is where we can know exactly what position\n     * each tab should be in according to the new selected index, and additionally we know how\n     * a new selected tab should transition in (from the left or right).\n     */\n    ngAfterContentChecked() {\n        // Don't clamp the `indexToSelect` immediately in the setter because it can happen that\n        // the amount of tabs changes before the actual change detection runs.\n        const indexToSelect = this.indexToSelect = this.clampTabIndex(this.indexToSelect);\n\n        // If there is a change in selected index, emit a change event. Should not trigger if\n        // the selected index has not yet been initialized.\n        if (this._selectedIndex !== indexToSelect) {\n            const isFirstRun = this._selectedIndex == null;\n\n            if (!isFirstRun) {\n                this.selectedTabChange.emit(this.createChangeEvent(indexToSelect));\n            }\n\n            // Changing these values after change detection has run\n            // since the checked content may contain references to them.\n            Promise.resolve().then(() => {\n                this.tabs.forEach((tab, index) => tab.isActive = index === indexToSelect);\n\n                if (!isFirstRun) {\n                    this.selectedIndexChange.emit(indexToSelect);\n                }\n            });\n        }\n\n        // Setup the position for each tab and optionally setup an origin on the next selected tab.\n        this.tabs.forEach((tab: McTab, index: number) => {\n            tab.position = index - indexToSelect;\n\n            // If there is already a selected tab, then set up an origin for the next selected tab\n            // if it doesn't have one already.\n            if (this._selectedIndex != null && tab.position === 0 && !tab.origin) {\n                tab.origin = indexToSelect - this._selectedIndex;\n            }\n        });\n\n        if (this._selectedIndex !== indexToSelect) {\n            this._selectedIndex = indexToSelect;\n            this.changeDetectorRef.markForCheck();\n        }\n    }\n\n    ngAfterContentInit() {\n        this.subscribeToTabLabels();\n\n        // Subscribe to changes in the amount of tabs, in order to be\n        // able to re-render the content as new tabs are added or removed.\n        this.tabsSubscription = this.tabs.changes.subscribe(() => {\n            const indexToSelect = this.clampTabIndex(this.indexToSelect);\n\n            // Maintain the previously-selected tab if a new tab is added or removed and there is no\n            // explicit change that selects a different tab.\n            if (indexToSelect === this._selectedIndex) {\n                const tabs = this.tabs.toArray();\n\n                for (let i = 0; i < tabs.length; i++) {\n                    if (tabs[i].isActive) {\n                        // Assign both to the `_indexToSelect` and `_selectedIndex` so we don't fire a changed\n                        // event, otherwise the consumer may end up in an infinite loop in some edge cases like\n                        // adding a tab within the `selectedIndexChange` event.\n                        this.indexToSelect = this._selectedIndex = i;\n                        break;\n                    }\n                }\n            }\n\n            this.subscribeToTabLabels();\n            this.changeDetectorRef.markForCheck();\n        });\n    }\n\n    ngOnDestroy() {\n        this.tabsSubscription.unsubscribe();\n        this.tabLabelSubscription.unsubscribe();\n    }\n\n    focusChanged(index: number) {\n        this.focusChange.emit(this.createChangeEvent(index));\n    }\n\n    /** Returns a unique id for each tab label element */\n    getTabLabelId(i: number): string {\n        return `mc-tab-label-${this.groupId}-${i}`;\n    }\n\n    /** Returns a unique id for each tab content element */\n    getTabContentId(i: number): string {\n        return `mc-tab-content-${this.groupId}-${i}`;\n    }\n\n    /**\n     * Sets the height of the body wrapper to the height of the activating tab if dynamic\n     * height property is true.\n     */\n    setTabBodyWrapperHeight(tabHeight: number): void {\n        if (!this._dynamicHeight || !this.tabBodyWrapperHeight) { return; }\n\n        const wrapper: HTMLElement = this.tabBodyWrapper.nativeElement;\n\n        wrapper.style.height = `${this.tabBodyWrapperHeight}px`;\n\n        // This conditional forces the browser to paint the height so that\n        // the animation to the new height can have an origin.\n        if (this.tabBodyWrapper.nativeElement.offsetHeight) {\n            wrapper.style.height = `${tabHeight}px`;\n        }\n    }\n\n    /** Removes the height of the tab body wrapper. */\n    removeTabBodyWrapperHeight(): void {\n        this.tabBodyWrapperHeight = this.tabBodyWrapper.nativeElement.clientHeight;\n        this.tabBodyWrapper.nativeElement.style.height = '';\n        this.animationDone.emit();\n    }\n\n    /** Handle click events, setting new selected index if appropriate. */\n    handleClick(tab: McTab, tabHeader: McTabHeader, index: number) {\n        if (!tab.disabled) {\n            this.selectedIndex = tabHeader.focusIndex = index;\n        }\n    }\n\n    /** Retrieves the tabindex for the tab. */\n    getTabIndex(tab: McTab, index: number): number | null {\n        if (tab.disabled) {\n            return null;\n        }\n\n        return this.selectedIndex === index ? 0 : -1;\n    }\n\n    private createChangeEvent(index: number): McTabChangeEvent {\n        const event = new McTabChangeEvent();\n        event.index = index;\n        if (this.tabs && this.tabs.length) {\n            event.tab = this.tabs.toArray()[index];\n        }\n\n        return event;\n    }\n\n    /**\n     * Subscribes to changes in the tab labels. This is needed, because the @Input for the label is\n     * on the McTab component, whereas the data binding is inside the McTabGroup. In order for the\n     * binding to be updated, we need to subscribe to changes in it and trigger change detection\n     * manually.\n     */\n    private subscribeToTabLabels() {\n        if (this.tabLabelSubscription) {\n            this.tabLabelSubscription.unsubscribe();\n        }\n\n        this.tabLabelSubscription = merge(...this.tabs.map((tab) => tab.stateChanges))\n            .subscribe(() => this.changeDetectorRef.markForCheck());\n    }\n\n    /** Clamps the given index to the bounds of 0 and the tabs length. */\n    private clampTabIndex(index: number | null): number {\n        // Note the `|| 0`, which ensures that values like NaN can't get through\n        // and which would otherwise throw the component into an infinite loop\n        // (since Mch.max(NaN, 0) === NaN).\n        return Math.min(this.tabs.length - 1, Math.max(index || 0, 0));\n    }\n}\n"],"names":["_this","focusMonitor","isActive","tabIndex","parseInt","monitor","elementRef","nativeElement","tslib_1.__extends","McTabLink","_super","Object","defineProperty","prototype","get","this","set","value","ngOnDestroy","stopMonitoring","tslib_1.__decorate","Input","Directive","selector","exportAs","inputs","host","class","[attr.aria-current]","[attr.aria-disabled]","[attr.tabIndex]","[class.mc-disabled]","[class.mc-active]","tslib_1.__param","Attribute","tslib_1.__metadata","ElementRef","String","FocusMonitor","mcTabLinkMixinBase","McTabsModule","NgModule","imports","CommonModule","McCommonModule","PortalModule","A11yModule","exports","McTabGroup","McTabLabel","McTab","McTabNav","McTabContent","McLightTabsCssStyler","McAlignTabsCenterCssStyler","McAlignTabsEndCssStyler","McStretchTabsCssStyler","declarations","McTabLabelWrapper","McTabBody","McTabBodyPortal","McTabHeader","__extends","d","b","__","constructor","extendStatics","create","__decorate","decorators","target","key","desc","c","arguments","length","r","getOwnPropertyDescriptor","Reflect","decorate","i","__param","paramIndex","decorator","__metadata","metadataKey","metadataValue","metadata","setPrototypeOf","__proto__","Array","p","hasOwnProperty","template","TemplateRef","CdkPortal","ctorParameters","McTabBase","mcTabMixinBase","mixinDisabled","viewContainerRef","call","textLabel","stateChanges","Subject","position","origin","contentPortal","ngOnChanges","changes","next","complete","ngOnInit","TemplatePortal","explicitContent","implicitContent","ContentChild","read","ViewChild","Component","changeDetection","ChangeDetectionStrategy","OnPush","encapsulation","ViewEncapsulation","None","ViewContainerRef","mcTabsAnimations","translateTab","trigger","state","style","transform","minHeight","transition","animate","dir","changeDetectorRef","onCentering","EventEmitter","beforeCentering","afterLeavingCenter","onCentered","animationDuration","dirChangeSubscription","Subscription","EMPTY","change","subscribe","direction","computePositionAnimationState","markForCheck","positionIndex","bodyPosition","computePositionFromOrigin","unsubscribe","onTranslateTabStarted","e","isCentering","isCenterPosition","toState","emit","clientHeight","onTranslateTabComplete","fromState","getLayoutDirection","Output","PortalHostDirective","styles","animations","Optional","Directionality","ChangeDetectorRef","componentFactoryResolver","centeringSub","leavingSub","pipe","startWith","hasAttached","attach","content","detach","Inject","forwardRef","ComponentFactoryResolver","CdkPortalOutlet","McTabLabelWrapperBase","mcTabLabelWrapperMixinBase","focus","getOffsetLeft","offsetLeft","getOffsetWidth","offsetWidth","McTabHeaderBase","viewportRuler","ngZone","showPaginationControls","disableScrollAfter","disableScrollBefore","selectFocusedIndex","indexFocused","_scrollDistance","selectedIndexChanged","destroyed","_selectedIndex","coercedValue","coerceNumberProperty","keyManager","updateActiveItem","activeItemIndex","isValidIndex","focusIndex","setActiveItem","v","Math","max","min","getMaxScrollDistance","scrollDistanceChanged","checkScrollingControls","ngAfterContentChecked","tabLabelCount","labelWrappers","updatePagination","scrollToLabel","updateTabScrollPosition","handleKeydown","event","keyCode","HOME","setFirstItemActive","preventDefault","END","setLastItemActive","ENTER","SPACE","onKeydown","ngAfterContentInit","dirChange","observableOf","resize","realign","FocusKeyManager","withHorizontalOrientation","withWrap","undefined","requestAnimationFrame","merge","takeUntil","newFocusIndex","setTabFocus","onContentChanges","textContent","currentTextContent","zoneCallback","run","checkPaginationEnabled","index","tab","toArray","disabled","containerEl","tabListContainer","scrollLeft","scrollWidth","scrollDistance","translateX","tabList","round","scrollHeader","scrollDir","viewLength","labelIndex","selectedLabel","labelBeforePos","labelAfterPos","beforeVisiblePos","afterVisiblePos","isEnabled","ContentChildren","QueryList","[class.mc-tab-header__pagination-controls_enabled]","[class.mc-tab-header_rtl]","ViewportRuler","NgZone","nextId","McTabChangeEvent","MC_TABS_CONFIG","InjectionToken","McTabGroupBase","_elementRef","mcTabGroupMixinBase","mixinColor","lightTabs","defaultConfig","headerPosition","selectedIndexChange","focusChange","animationDone","selectedTabChange","indexToSelect","tabBodyWrapperHeight","tabsSubscription","tabLabelSubscription","_dynamicHeight","lightTab","coerceBooleanProperty","groupId","clampTabIndex","isFirstRun_1","createChangeEvent","Promise","resolve","then","tabs","forEach","subscribeToTabLabels","focusChanged","getTabLabelId","getTabContentId","setTabBodyWrapperHeight","tabHeight","wrapper","tabBodyWrapper","height","offsetHeight","removeTabBodyWrapperHeight","handleClick","tabHeader","selectedIndex","getTabIndex","apply","map","[class.mc-tab-group_dynamic-height]","[class.mc-tab-group_inverted-header]","McTabNavBase","mcTabNavMixinBase","McTabLinkBase","mixinTabIndex"],"mappings":"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"}