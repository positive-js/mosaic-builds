{"version":3,"file":"mosaic-tabs.umd.min.js","sources":["../../packages/mosaic/tabs/tabs.module.ts","../../node_modules/tslib/tslib.es6.js","../../packages/mosaic/tabs/tab-content.ts","../../packages/mosaic/tabs/tab-label.ts","../../packages/mosaic/tabs/tab.ts","../../packages/mosaic/tabs/tabs-animations.ts","../../packages/mosaic/tabs/tab-body.ts","../../packages/mosaic/tabs/tab-label-wrapper.ts","../../packages/mosaic/tabs/tab-header.ts","../../packages/mosaic/tabs/tab-group.ts","../../packages/mosaic/tabs/tab-nav-bar/tab-nav-bar.ts"],"sourcesContent":["import { A11yModule } from '@angular/cdk/a11y';\nimport { PortalModule } from '@angular/cdk/portal';\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { McCommonModule } from '@ptsecurity/mosaic/core';\n\nimport { McTab } from './tab';\nimport { McTabBody, McTabBodyPortal } from './tab-body';\nimport { McTabContent } from './tab-content';\nimport {\n    McTabGroup,\n    McLightTabsCssStyler,\n    McAlignTabsCenterCssStyler,\n    McAlignTabsEndCssStyler,\n    McStretchTabsCssStyler\n} from './tab-group';\nimport { McTabHeader } from './tab-header';\nimport { McTabLabel } from './tab-label';\nimport { McTabLabelWrapper } from './tab-label-wrapper';\nimport { McTabLink, McTabNav } from './tab-nav-bar/tab-nav-bar';\n\n\n@NgModule({\n    imports: [\n        CommonModule,\n        McCommonModule,\n        PortalModule,\n        A11yModule\n    ],\n    // Don't export all components because some are only to be used internally.\n    exports: [\n        McCommonModule,\n        McTabGroup,\n        McTabLabel,\n        McTab,\n        McTabNav,\n        McTabLink,\n        McTabContent,\n        McLightTabsCssStyler,\n        McAlignTabsCenterCssStyler,\n        McAlignTabsEndCssStyler,\n        McStretchTabsCssStyler\n    ],\n    declarations: [\n        McTabGroup,\n        McTabLabel,\n        McTab,\n        McTabLabelWrapper,\n        McTabNav,\n        McTabLink,\n        McTabBody,\n        McTabBodyPortal,\n        McTabHeader,\n        McTabContent,\n        McLightTabsCssStyler,\n        McAlignTabsCenterCssStyler,\n        McAlignTabsEndCssStyler,\n        McStretchTabsCssStyler\n    ]\n})\nexport class McTabsModule {}\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","import { Directive, TemplateRef } from '@angular/core';\n\n\n/** Decorates the `ng-template` tags and reads out the template from it. */\n@Directive({ selector: '[mcTabContent]' })\nexport class McTabContent {\n    constructor(public template: TemplateRef<any>) { }\n}\n","import { CdkPortal } from '@angular/cdk/portal';\nimport { Directive } from '@angular/core';\n\n\n/** Used to flag tab labels for use with the portal directive */\n@Directive({\n    selector: '[mc-tab-label], [mcTabLabel]'\n})\nexport class McTabLabel extends CdkPortal {}\n\n// TODO: workaround for https://github.com/angular/material2/issues/12760\n(McTabLabel as any).ctorParameters = () => (CdkPortal as any).ctorParameters;\n","import { TemplatePortal } from '@angular/cdk/portal';\nimport {\n    ChangeDetectionStrategy,\n    Component,\n    ContentChild,\n    Input,\n    OnChanges,\n    OnDestroy,\n    OnInit,\n    SimpleChanges,\n    TemplateRef,\n    ViewChild,\n    ViewContainerRef,\n    ViewEncapsulation\n} from '@angular/core';\nimport {\n    CanDisable,\n    CanDisableCtor,\n    mixinDisabled\n} from '@ptsecurity/mosaic/core';\nimport { Subject } from 'rxjs';\n\nimport { McTabContent } from './tab-content';\nimport { McTabLabel } from './tab-label';\n\n\nexport class McTabBase {}\n// tslint:disable-next-line:naming-convention\nexport const McTabMixinBase: CanDisableCtor & typeof McTabBase = mixinDisabled(\n    McTabBase\n);\n\n@Component({\n    selector: 'mc-tab',\n    // Create a template for the content of the <mc-tab> so that we can grab a reference to this\n    // TemplateRef and use it in a Portal to render the tab content in the appropriate place in the\n    // tab-group.\n    template: '<ng-template><ng-content></ng-content></ng-template>',\n    inputs: ['disabled'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n    exportAs: 'mcTab'\n})\nexport class McTab extends McTabMixinBase\n    implements OnInit, CanDisable, OnChanges, OnDestroy {\n    /** @docs-private */\n    get content(): TemplatePortal | null {\n        return this.contentPortal;\n    }\n    /** Content for the tab label given by `<ng-template mc-tab-label>`. */\n    @ContentChild(McTabLabel, {static: false})\n    templateLabel: McTabLabel;\n\n    /**\n     * Template provided in the tab content that will be used if present, used to enable lazy-loading\n     */\n    @ContentChild(McTabContent, { read: TemplateRef, static: true })\n    explicitContent: TemplateRef<any>;\n\n    /** Template inside the McTab view that contains an `<ng-content>`. */\n    @ViewChild(TemplateRef, {static: true})\n    implicitContent: TemplateRef<any>;\n\n    /** Plain text label for the tab, used when there is no template label. */\n    @Input('label')\n    textLabel: string = '';\n\n    @Input('tabId')\n    tabId: string;\n\n    /** Aria label for the tab. */\n    @Input('aria-label')\n    ariaLabel: string;\n\n    /**\n     * Reference to the element that the tab is labelled by.\n     * Will be cleared if `aria-label` is set at the same time.\n     */\n    @Input('aria-labelledby')\n    ariaLabelledby: string;\n\n    /** Emits whenever the internal state of the tab changes. */\n    readonly stateChanges = new Subject<void>();\n\n    /**\n     * The relatively indexed position where 0 represents the center, negative is left, and positive\n     * represents the right.\n     */\n    position: number | null = null;\n\n    /**\n     * The initial relatively index origin of the tab if it was created and selected after there\n     * was already a selected tab. Provides context of what position the tab should originate from.\n     */\n    origin: number | null = null;\n\n    /**\n     * Whether the tab is currently active.\n     */\n    isActive = false;\n\n    /** Portal that will be the hosted content of the tab */\n    private contentPortal: TemplatePortal | null = null;\n\n    constructor(private viewContainerRef: ViewContainerRef) {\n        super();\n    }\n\n    ngOnChanges(changes: SimpleChanges): void {\n        if (\n            changes.hasOwnProperty('textLabel') ||\n            changes.hasOwnProperty('disabled')\n        ) {\n            this.stateChanges.next();\n        }\n    }\n\n    ngOnDestroy(): void {\n        this.stateChanges.complete();\n    }\n\n    ngOnInit(): void {\n        this.contentPortal = new TemplatePortal(\n            this.explicitContent || this.implicitContent,\n            this.viewContainerRef\n        );\n    }\n}\n","import {\n    animate,\n    state,\n    style,\n    transition,\n    trigger,\n    AnimationTriggerMetadata\n} from '@angular/animations';\n\n\nexport const mcTabsAnimations: {\n    readonly translateTab: AnimationTriggerMetadata;\n} = {\n    /** Animation translates a tab along the X axis. */\n    translateTab: trigger('translateTab', [\n        // Note: transitions to `none` instead of 0, because some browsers might blur the content.\n        state(\n            'center, void, left-origin-center, right-origin-center',\n            style({ transform: 'none' })\n        ),\n\n        // If the tab is either on the left or right, we additionally add a `min-height` of 1px\n        // in order to ensure that the element has a height before its state changes. This is\n        // necessary because Chrome does seem to skip the transition in RTL mode if the element does\n        // not have a static height and is not rendered. See related issue: #9465\n        state(\n            'left',\n            style({ transform: 'translate3d(-100%, 0, 0)', minHeight: '1px' })\n        ),\n        state(\n            'right',\n            style({ transform: 'translate3d(100%, 0, 0)', minHeight: '1px' })\n        ),\n\n        transition(\n            '* => left, * => right, left => center, right => center',\n            animate('{{animationDuration}} cubic-bezier(0.35, 0, 0.25, 1)')\n        ),\n        transition('void => left-origin-center', [\n            style({ transform: 'translate3d(-100%, 0, 0)' }),\n            animate('{{animationDuration}} cubic-bezier(0.35, 0, 0.25, 1)')\n        ]),\n        transition('void => right-origin-center', [\n            style({ transform: 'translate3d(100%, 0, 0)' }),\n            animate('{{animationDuration}} cubic-bezier(0.35, 0, 0.25, 1)')\n        ])\n    ])\n};\n","import { AnimationEvent } from '@angular/animations';\nimport { Directionality, Direction } from '@angular/cdk/bidi';\nimport { TemplatePortal, CdkPortalOutlet } from '@angular/cdk/portal';\nimport {\n    Component,\n    ChangeDetectorRef,\n    Input,\n    Inject,\n    Output,\n    EventEmitter,\n    OnDestroy,\n    OnInit,\n    ElementRef,\n    Directive,\n    Optional,\n    ViewEncapsulation,\n    ChangeDetectionStrategy,\n    ComponentFactoryResolver,\n    ViewContainerRef,\n    forwardRef,\n    ViewChild\n} from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { startWith } from 'rxjs/operators';\n\nimport { mcTabsAnimations } from './tabs-animations';\n\n\n/**\n * These position states are used internally as animation states for the tab body. Setting the\n * position state to left, right, or center will transition the tab body from its current\n * position to its respective state. If there is not current position (void, in the case of a new\n * tab body), then there will be no transition animation to its state.\n *\n * In the case of a new tab body that should immediately be centered with an animating transition,\n * then left-origin-center or right-origin-center can be used, which will use left or right as its\n * psuedo-prior state.\n */\nexport type McTabBodyPositionState =\n    'left' | 'center' | 'right' | 'left-origin-center' | 'right-origin-center';\n\n/**\n * The origin state is an internally used state that is set on a new tab body indicating if it\n * began to the left or right of the prior selected index. For example, if the selected index was\n * set to 1, and a new tab is created and selected at index 2, then the tab body would have an\n * origin of right because its index was greater than the prior selected index.\n */\nexport type McTabBodyOriginState = 'left' | 'right';\n\n/**\n * Wrapper for the contents of a tab.\n * @docs-private\n */\n@Component({\n    selector: 'mc-tab-body',\n    templateUrl: 'tab-body.html',\n    styleUrls: ['tab-body.css'],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    animations: [mcTabsAnimations.translateTab],\n    host: {\n        class: 'mc-tab-body'\n    }\n})\nexport class McTabBody implements OnInit, OnDestroy {\n\n    /** The shifted index position of the tab body, where zero represents the active center tab. */\n    @Input()\n    set position(position: number) {\n        this.positionIndex = position;\n        this.computePositionAnimationState();\n    }\n\n    /** Tab body position state. Used by the animation trigger for the current state. */\n    bodyPosition: McTabBodyPositionState;\n\n    /** Event emitted when the tab begins to animate towards the center as the active tab. */\n    @Output() readonly onCentering: EventEmitter<number> = new EventEmitter<number>();\n\n    /** Event emitted before the centering of the tab begins. */\n    @Output() readonly beforeCentering: EventEmitter<boolean> = new EventEmitter<boolean>();\n\n    /** Event emitted before the centering of the tab begins. */\n    @Output() readonly afterLeavingCenter: EventEmitter<boolean> = new EventEmitter<boolean>();\n\n    /** Event emitted when the tab completes its animation towards the center. */\n    @Output() readonly onCentered: EventEmitter<void> = new EventEmitter<void>(true);\n\n    /** The portal host inside of this container into which the tab body content will be loaded. */\n    @ViewChild(CdkPortalOutlet, {static: false}) portalHost: CdkPortalOutlet;\n\n    /** The tab body content to display. */\n    @Input('content') content: TemplatePortal;\n\n    /** Position that will be used when the tab is immediately becoming visible after creation. */\n    @Input() origin: number;\n\n    // Note that the default value will always be overwritten by `McTabBody`, but we need one\n    // anyway to prevent the animations module from throwing an error if the body is used on its own.\n    /** Duration for the tab's animation. */\n    @Input() animationDuration: string = '0ms';\n\n    /** Current position of the tab-body in the tab-group. Zero means that the tab is visible. */\n    private positionIndex: number;\n\n    /** Subscription to the directionality change observable. */\n    private dirChangeSubscription = Subscription.EMPTY;\n\n    constructor(private elementRef: ElementRef<HTMLElement>,\n                @Optional() private dir: Directionality,\n                changeDetectorRef: ChangeDetectorRef) {\n\n        if (this.dir && changeDetectorRef) {\n            this.dirChangeSubscription = this.dir.change.subscribe((direction: Direction) => {\n                this.computePositionAnimationState(direction);\n                changeDetectorRef.markForCheck();\n            });\n        }\n    }\n\n    /**\n     * After initialized, check if the content is centered and has an origin. If so, set the\n     * special position states that transition the tab from the left or right before centering.\n     */\n    ngOnInit() {\n        if (this.bodyPosition === 'center' && this.origin != null) {\n            this.bodyPosition = this.computePositionFromOrigin();\n        }\n    }\n\n    ngOnDestroy() {\n        this.dirChangeSubscription.unsubscribe();\n    }\n\n    onTranslateTabStarted(e: AnimationEvent): void {\n        const isCentering = this.isCenterPosition(e.toState);\n        this.beforeCentering.emit(isCentering);\n        if (isCentering) {\n            this.onCentering.emit(this.elementRef.nativeElement.clientHeight);\n        }\n    }\n\n    onTranslateTabComplete(e: AnimationEvent): void {\n        // If the transition to the center is complete, emit an event.\n        if (this.isCenterPosition(e.toState) && this.isCenterPosition(this.bodyPosition)) {\n            this.onCentered.emit();\n        }\n\n        if (this.isCenterPosition(e.fromState) && !this.isCenterPosition(this.bodyPosition)) {\n            this.afterLeavingCenter.emit();\n        }\n    }\n\n    /** The text direction of the containing app. */\n    getLayoutDirection(): Direction {\n        return this.dir && this.dir.value === 'rtl' ? 'rtl' : 'ltr';\n    }\n\n    /** Whether the provided position state is considered center, regardless of origin. */\n    isCenterPosition(position: McTabBodyPositionState | string): boolean {\n        return position === 'center' ||\n            position === 'left-origin-center' ||\n            position === 'right-origin-center';\n    }\n\n    /** Computes the position state that will be used for the tab-body animation trigger. */\n    private computePositionAnimationState(dir: Direction = this.getLayoutDirection()) {\n        if (this.positionIndex < 0) {\n            this.bodyPosition = dir === 'ltr' ? 'left' : 'right';\n        } else if (this.positionIndex > 0) {\n            this.bodyPosition = dir === 'ltr' ? 'right' : 'left';\n        } else {\n            this.bodyPosition = 'center';\n        }\n    }\n\n    /**\n     * Computes the position state based on the specified origin position. This is used if the\n     * tab is becoming visible immediately after creation.\n     */\n    private computePositionFromOrigin(): McTabBodyPositionState {\n        const dir = this.getLayoutDirection();\n\n        if ((dir === 'ltr' && this.origin <= 0) || (dir === 'rtl' && this.origin > 0)) {\n            return 'left-origin-center';\n        }\n\n        return 'right-origin-center';\n    }\n}\n\n/**\n * The portal host directive for the contents of the tab.\n * @docs-private\n */\n@Directive({\n    selector: '[mcTabBodyHost]'\n})\nexport class McTabBodyPortal extends CdkPortalOutlet implements OnInit, OnDestroy {\n    /** Subscription to events for when the tab body begins centering. */\n    private centeringSub = Subscription.EMPTY;\n    /** Subscription to events for when the tab body finishes leaving from center position. */\n    private leavingSub = Subscription.EMPTY;\n\n    constructor(\n        componentFactoryResolver: ComponentFactoryResolver,\n        viewContainerRef: ViewContainerRef,\n        @Inject(forwardRef(() => McTabBody)) private host: McTabBody) {\n        super(componentFactoryResolver, viewContainerRef);\n    }\n\n    /** Set initial visibility or set up subscription for changing visibility. */\n    ngOnInit(): void {\n        super.ngOnInit();\n\n        this.centeringSub = this.host.beforeCentering\n            .pipe(startWith(this.host.isCenterPosition(this.host.bodyPosition)))\n            .subscribe((isCentering: boolean) => {\n                if (isCentering && !this.hasAttached()) {\n                    this.attach(this.host.content);\n                }\n            });\n\n        this.leavingSub = this.host.afterLeavingCenter.subscribe(() => {\n            this.detach();\n        });\n    }\n\n    /** Clean up centering subscription. */\n    ngOnDestroy(): void {\n        super.ngOnDestroy();\n        this.centeringSub.unsubscribe();\n        this.leavingSub.unsubscribe();\n    }\n}\n","import { Directive, ElementRef } from '@angular/core';\nimport {\n    CanDisable,\n    CanDisableCtor,\n    mixinDisabled\n} from '@ptsecurity/mosaic/core';\n\n\n// Boilerplate for applying mixins to McTabLabelWrapper.\n/** @docs-private */\nexport class McTabLabelWrapperBase {}\n// tslint:disable-next-line:naming-convention\nexport const McTabLabelWrapperMixinBase: CanDisableCtor &\n    typeof McTabLabelWrapperBase = mixinDisabled(McTabLabelWrapperBase);\n\n/**\n * Used in the `mc-tab-group` view to display tab labels.\n * @docs-private\n */\n@Directive({\n    selector: '[mcTabLabelWrapper]',\n    inputs: ['disabled'],\n    host: {\n        '[class.mc-disabled]': 'disabled',\n        '[attr.aria-disabled]': '!!disabled'\n    }\n})\nexport class McTabLabelWrapper extends McTabLabelWrapperMixinBase implements CanDisable {\n    constructor(public elementRef: ElementRef) {\n        super();\n    }\n\n    /** Sets focus on the wrapper element */\n    focus(): void {\n        this.elementRef.nativeElement.focus();\n    }\n\n    getOffsetLeft(): number {\n        return this.elementRef.nativeElement.offsetLeft;\n    }\n\n    getOffsetWidth(): number {\n        return this.elementRef.nativeElement.offsetWidth;\n    }\n}\n","import { Direction, Directionality } from '@angular/cdk/bidi';\nimport { coerceNumberProperty } from '@angular/cdk/coercion';\nimport { ViewportRuler } from '@angular/cdk/scrolling';\nimport {\n    AfterContentChecked,\n    AfterContentInit,\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    ContentChildren,\n    ElementRef,\n    EventEmitter,\n    Input,\n    NgZone,\n    OnDestroy,\n    Optional,\n    Output,\n    QueryList,\n    ViewChild,\n    ViewEncapsulation\n} from '@angular/core';\nimport { FocusKeyManager } from '@ptsecurity/cdk/a11y';\nimport { END, ENTER, HOME, SPACE } from '@ptsecurity/cdk/keycodes';\nimport { merge, of as observableOf, Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\n\nimport { McTabLabelWrapper } from './tab-label-wrapper';\n\n\nconst VIEWPORT_THROTTLE_TIME = 150;\nconst SCROLL_DISTANCE_DELIMITER = 3;\n\n\n/**\n * The directions that scrolling can go in when the header's tabs exceed the header width. 'After'\n * will scroll the header towards the end of the tabs list and 'before' will scroll towards the\n * beginning of the list.\n */\nexport type ScrollDirection = 'after' | 'before';\n\n/**\n * The distance in pixels that will be overshot when scrolling a tab label into view. This helps\n * provide a small affordance to the label next to it.\n */\nconst EXAGGERATED_OVERSCROLL = 60;\n\n// Boilerplate for applying mixins to McTabHeader.\n/** @docs-private */\nexport class McTabHeaderBase {}\n\n/**\n * The header of the tab group which displays a list of all the tabs in the tab group.\n * When the tabs list's width exceeds the width of the header container,\n * then arrows will be displayed to allow the user to scroll\n * left and right across the header.\n * @docs-private\n */\n@Component({\n    selector: 'mc-tab-header',\n    templateUrl: 'tab-header.html',\n    styleUrls: ['tab-header.css'],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    host: {\n        class: 'mc-tab-header',\n        '[class.mc-tab-header__pagination-controls_enabled]':\n            'showPaginationControls',\n        '[class.mc-tab-header_rtl]': 'getLayoutDirection() == \\'rtl\\''\n    }\n})\nexport class McTabHeader extends McTabHeaderBase\n    implements AfterContentChecked, AfterContentInit, OnDestroy {\n    /** The index of the active tab. */\n    @Input()\n    get selectedIndex(): number {\n        return this._selectedIndex;\n    }\n    set selectedIndex(value: number) {\n        const coercedValue = coerceNumberProperty(value);\n        this.selectedIndexChanged = this._selectedIndex !== coercedValue;\n        this._selectedIndex = coercedValue;\n\n        if (this.keyManager) {\n            this.keyManager.updateActiveItem(coercedValue);\n        }\n    }\n\n    /** Tracks which element has focus; used for keyboard navigation */\n    get focusIndex(): number {\n        return this.keyManager ? this.keyManager.activeItemIndex : 0;\n    }\n\n    /** When the focus index is set, we must manually send focus to the correct label */\n    set focusIndex(value: number) {\n        if (\n            !this.isValidIndex(value) ||\n            this.focusIndex === value ||\n            !this.keyManager\n        ) {\n            return;\n        }\n\n        this.keyManager.setActiveItem(value);\n    }\n\n    /** Sets the distance in pixels that the tab header should be transformed in the X-axis. */\n    get scrollDistance(): number {\n        return this._scrollDistance;\n    }\n    set scrollDistance(v: number) {\n        this._scrollDistance = Math.max(\n            0,\n            Math.min(this.getMaxScrollDistance(), v)\n        );\n\n        // Mark that the scroll distance has changed so that after the view is checked, the CSS\n        // transformation can move the header.\n        this.scrollDistanceChanged = true;\n        this.checkScrollingControls();\n    }\n\n    @ContentChildren(McTabLabelWrapper)\n    labelWrappers: QueryList<McTabLabelWrapper>;\n    @ViewChild('tabListContainer', {static: true})\n    tabListContainer: ElementRef;\n    @ViewChild('tabList', {static: true})\n    tabList: ElementRef;\n\n    /** Whether the controls for pagination should be displayed */\n    showPaginationControls = false;\n\n    /** Whether the tab list can be scrolled more towards the end of the tab label list. */\n    disableScrollAfter = true;\n\n    /** Whether the tab list can be scrolled more towards the beginning of the tab label list. */\n    disableScrollBefore = true;\n\n    /** Event emitted when the option is selected. */\n    @Output()\n    readonly selectFocusedIndex: EventEmitter<number> = new EventEmitter<number>();\n\n    /** Event emitted when a label is focused. */\n    @Output()\n    readonly indexFocused: EventEmitter<number> = new EventEmitter<number>();\n\n    /** The distance in pixels that the tab labels should be translated to the left. */\n    private _scrollDistance = 0;\n\n    /** Whether the header should scroll to the selected index after the view has been checked. */\n    private selectedIndexChanged = false;\n\n    /** Emits when the component is destroyed. */\n    private readonly destroyed = new Subject<void>();\n\n    /**\n     * The number of tab labels that are displayed on the header. When this changes, the header\n     * should re-evaluate the scroll position.\n     */\n    private tabLabelCount: number;\n\n    /** Whether the scroll distance has changed and should be applied after the view is checked. */\n    private scrollDistanceChanged: boolean;\n\n    /** Used to manage focus between the tabs. */\n    private keyManager: FocusKeyManager<McTabLabelWrapper>;\n\n    /** Cached text content of the header. */\n    private currentTextContent: string;\n\n    private _selectedIndex: number = 0;\n\n    constructor(\n        private elementRef: ElementRef,\n        private changeDetectorRef: ChangeDetectorRef,\n        private viewportRuler: ViewportRuler,\n        @Optional() private dir: Directionality,\n        private ngZone: NgZone\n    ) {\n        super();\n    }\n\n    ngAfterContentChecked(): void {\n        // If the number of tab labels have changed, check if scrolling should be enabled\n        if (this.tabLabelCount !== this.labelWrappers.length) {\n            this.updatePagination();\n            this.tabLabelCount = this.labelWrappers.length;\n            this.changeDetectorRef.markForCheck();\n        }\n\n        // If the selected index has changed, scroll to the label and check if the scrolling controls\n        // should be disabled.\n        if (this.selectedIndexChanged) {\n            this.scrollToLabel(this._selectedIndex);\n            this.checkScrollingControls();\n            this.selectedIndexChanged = false;\n            this.changeDetectorRef.markForCheck();\n        }\n\n        // If the scroll distance has been changed (tab selected, focused, scroll controls activated),\n        // then translate the header to reflect this.\n        if (this.scrollDistanceChanged) {\n            this.updateTabScrollPosition();\n            this.scrollDistanceChanged = false;\n            this.changeDetectorRef.markForCheck();\n        }\n    }\n\n    handleKeydown(event: KeyboardEvent) {\n        // tslint:disable-next-line: deprecation\n        switch (event.keyCode) {\n            case HOME:\n                this.keyManager.setFirstItemActive();\n                event.preventDefault();\n                break;\n            case END:\n                this.keyManager.setLastItemActive();\n                event.preventDefault();\n                break;\n            case ENTER:\n            case SPACE:\n                this.selectFocusedIndex.emit(this.focusIndex);\n                event.preventDefault();\n                break;\n            default:\n                this.keyManager.onKeydown(event);\n        }\n    }\n\n    ngAfterContentInit() {\n        const dirChange = this.dir ? this.dir.change : observableOf(null);\n        const resize = this.viewportRuler.change(VIEWPORT_THROTTLE_TIME);\n        const realign = () => {\n            this.updatePagination();\n        };\n\n        this.keyManager = new FocusKeyManager(this.labelWrappers)\n            .withHorizontalOrientation(this.getLayoutDirection())\n            .withWrap();\n\n        this.keyManager.updateActiveItem(0);\n\n        // Defer the first call in order to allow for slower browsers to lay out the elements.\n        // This helps in cases where the user lands directly on a page with paginated tabs.\n        typeof requestAnimationFrame === undefined\n            ? realign()\n            : requestAnimationFrame(realign);\n\n        // On dir change or window resize, update the orientation of\n        // the key manager if the direction has changed.\n        merge(dirChange, resize)\n            .pipe(takeUntil(this.destroyed))\n            .subscribe(() => {\n                realign();\n                this.keyManager.withHorizontalOrientation(\n                    this.getLayoutDirection()\n                );\n            });\n\n        // If there is a change in the focus key manager we need to emit the `indexFocused`\n        // event in order to provide a public event that notifies about focus changes. Also we realign\n        // the tabs container by scrolling the new focused tab into the visible section.\n        this.keyManager.change\n            .pipe(takeUntil(this.destroyed))\n            .subscribe((newFocusIndex) => {\n                this.indexFocused.emit(newFocusIndex);\n                this.setTabFocus(newFocusIndex);\n            });\n    }\n\n    ngOnDestroy() {\n        this.destroyed.next();\n        this.destroyed.complete();\n    }\n\n    /**\n     * Callback for when the MutationObserver detects that the content has changed.\n     */\n    onContentChanges() {\n        const textContent = this.elementRef.nativeElement.textContent;\n\n        // We need to diff the text content of the header, because the MutationObserver callback\n        // will fire even if the text content didn't change which is inefficient and is prone\n        // to infinite loops if a poorly constructed expression is passed in.\n\n        if (textContent !== this.currentTextContent) {\n            this.currentTextContent = textContent;\n\n            const zoneCallback = () => {\n                this.updatePagination();\n                this.changeDetectorRef.markForCheck();\n            };\n\n            // The content observer runs outside the `NgZone` by default, which\n            // means that we need to bring the callback back in ourselves.\n            // TODO: Remove null check for `_ngZone` once it's a required parameter.\n            this.ngZone ? this.ngZone.run(zoneCallback) : zoneCallback();\n        }\n    }\n\n    /**\n     * Updating the view whether pagination should be enabled or not\n     *\n     * WARNING: Calling this method can be very costly in terms of performance.  It should be called\n     * as infrequently as possible from outside of the Tabs component as it causes a reflow of the\n     * page.\n     */\n    updatePagination() {\n        this.checkPaginationEnabled();\n        this.checkScrollingControls();\n        this.updateTabScrollPosition();\n    }\n\n    /**\n     * Determines if an index is valid.  If the tabs are not ready yet, we assume that the user is\n     * providing a valid index and return true.\n     */\n    isValidIndex(index: number): boolean {\n        if (!this.labelWrappers) {\n            return true;\n        }\n\n        const tab = this.labelWrappers\n            ? this.labelWrappers.toArray()[index]\n            : null;\n\n        return !!tab && !tab.disabled;\n    }\n\n    /**\n     * Sets focus on the HTML element for the label wrapper and scrolls it into the view if\n     * scrolling is enabled.\n     */\n    setTabFocus(tabIndex: number) {\n        if (this.showPaginationControls) {\n            this.scrollToLabel(tabIndex);\n        }\n\n        if (this.labelWrappers && this.labelWrappers.length) {\n            this.labelWrappers.toArray()[tabIndex].focus();\n\n            // Do not let the browser manage scrolling to focus the element, this will be handled\n            // by using translation. In LTR, the scroll left should be 0. In RTL, the scroll width\n            // should be the full width minus the offset width.\n            const containerEl = this.tabListContainer.nativeElement;\n            const dir = this.getLayoutDirection();\n\n            if (dir === 'ltr') {\n                containerEl.scrollLeft = 0;\n            } else {\n                containerEl.scrollLeft =\n                    containerEl.scrollWidth - containerEl.offsetWidth;\n            }\n        }\n    }\n\n    /** The layout direction of the containing app. */\n    getLayoutDirection(): Direction {\n        return this.dir && this.dir.value === 'rtl' ? 'rtl' : 'ltr';\n    }\n\n    /** Performs the CSS transformation on the tab list that will cause the list to scroll. */\n    updateTabScrollPosition() {\n        const scrollDistance = this.scrollDistance;\n        const translateX =\n            this.getLayoutDirection() === 'ltr'\n                ? -scrollDistance\n                : scrollDistance;\n\n        // Don't use `translate3d` here because we don't want to create a new layer. A new layer\n        // seems to cause flickering and overflow in Internet Explorer.\n        // See: https://github.com/angular/material2/issues/10276\n        // We round the `transform` here, because transforms with sub-pixel precision cause some\n        // browsers to blur the content of the element.\n        this.tabList.nativeElement.style.transform = `translateX(${Math.round(translateX)}px)`;\n\n        // Setting the `transform` on IE will change the scroll offset of the parent, causing the\n        // position to be thrown off in some cases. We have to reset it ourselves to ensure that\n        // it doesn't get thrown off.\n        this.tabList.nativeElement.scrollLeft = 0;\n    }\n\n    /**\n     * Moves the tab list in the 'before' or 'after' direction (towards the beginning of the list or\n     * the end of the list, respectively). The distance to scroll is computed to be a third of the\n     * length of the tab list view window.\n     *\n     * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n     * should be called sparingly.\n     */\n    scrollHeader(scrollDir: ScrollDirection) {\n        const viewLength = this.tabListContainer.nativeElement.offsetWidth;\n\n        // Move the scroll distance one-third the length of the tab list's viewport.\n        this.scrollDistance +=\n            ((scrollDir === 'before' ? -1 : 1) * viewLength) / SCROLL_DISTANCE_DELIMITER;\n    }\n\n    /**\n     * Moves the tab list such that the desired tab label (marked by index) is moved into view.\n     *\n     * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n     * should be called sparingly.\n     */\n    scrollToLabel(labelIndex: number) {\n        const selectedLabel = this.labelWrappers\n            ? this.labelWrappers.toArray()[labelIndex]\n            : null;\n\n        if (!selectedLabel) {\n            return;\n        }\n\n        // The view length is the visible width of the tab labels.\n        const viewLength: number = this.tabListContainer.nativeElement.offsetWidth;\n\n        let labelBeforePos: number;\n        let labelAfterPos: number;\n\n        if (this.getLayoutDirection() === 'ltr') {\n            labelBeforePos = selectedLabel.getOffsetLeft();\n            labelAfterPos = labelBeforePos + selectedLabel.getOffsetWidth();\n        } else {\n            labelAfterPos =\n                this.tabList.nativeElement.offsetWidth -\n                selectedLabel.getOffsetLeft();\n            labelBeforePos = labelAfterPos - selectedLabel.getOffsetWidth();\n        }\n\n        const beforeVisiblePos = this.scrollDistance;\n        const afterVisiblePos = this.scrollDistance + viewLength;\n\n        if (labelBeforePos < beforeVisiblePos) {\n            // Scroll header to move label to the before direction\n            this.scrollDistance -=\n                beforeVisiblePos - labelBeforePos + EXAGGERATED_OVERSCROLL;\n        } else if (labelAfterPos > afterVisiblePos) {\n            // Scroll header to move label to the after direction\n            this.scrollDistance +=\n                labelAfterPos - afterVisiblePos + EXAGGERATED_OVERSCROLL;\n        }\n    }\n\n    /**\n     * Evaluate whether the pagination controls should be displayed. If the scroll width of the\n     * tab list is wider than the size of the header container, then the pagination controls should\n     * be shown.\n     *\n     * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n     * should be called sparingly.\n     */\n    checkPaginationEnabled() {\n        const isEnabled =\n            this.tabList.nativeElement.scrollWidth >\n            this.elementRef.nativeElement.offsetWidth;\n\n        if (!isEnabled) {\n            this.scrollDistance = 0;\n        }\n\n        if (isEnabled !== this.showPaginationControls) {\n            this.changeDetectorRef.markForCheck();\n        }\n\n        this.showPaginationControls = isEnabled;\n    }\n\n    /**\n     * Evaluate whether the before and after controls should be enabled or disabled.\n     * If the header is at the beginning of the list (scroll distance is equal to 0) then disable the\n     * before button. If the header is at the end of the list (scroll distance is equal to the\n     * maximum distance we can scroll), then disable the after button.\n     *\n     * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n     * should be called sparingly.\n     */\n    checkScrollingControls() {\n        // Check if the pagination arrows should be activated.\n        this.disableScrollBefore = this.scrollDistance === 0;\n        this.disableScrollAfter =\n            this.scrollDistance === this.getMaxScrollDistance();\n        this.changeDetectorRef.markForCheck();\n    }\n\n    /**\n     * Determines what is the maximum length in pixels that can be set for the scroll distance. This\n     * is equal to the difference in width between the tab list container and tab header container.\n     *\n     * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n     * should be called sparingly.\n     */\n    getMaxScrollDistance(): number {\n        const lengthOfTabList = this.tabList.nativeElement.scrollWidth;\n        const viewLength = this.tabListContainer.nativeElement.offsetWidth;\n\n        return lengthOfTabList - viewLength || 0;\n    }\n}\n","import { coerceBooleanProperty, coerceNumberProperty } from '@angular/cdk/coercion';\nimport {\n    AfterContentChecked,\n    AfterContentInit,\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    ContentChildren,\n    ElementRef,\n    EventEmitter,\n    Input,\n    OnDestroy,\n    Output,\n    QueryList,\n    ViewChild,\n    ViewEncapsulation,\n    InjectionToken,\n    Inject,\n    Optional,\n    Directive, Attribute\n} from '@angular/core';\nimport {\n    CanColor,\n    CanColorCtor,\n    mixinColor,\n    mixinDisabled\n} from '@ptsecurity/mosaic/core';\nimport { merge, Subscription } from 'rxjs';\n\nimport { McTab } from './tab';\nimport { McTabHeader } from './tab-header';\n\n\n@Directive({\n    selector: 'mc-tab-group[mc-light-tabs], [mc-tab-nav-bar][mc-light-tabs]',\n    host: { class: 'mc-tab-group_light' }\n})\nexport class McLightTabsCssStyler { }\n\n@Directive({\n    selector: 'mc-tab-group[mc-align-tabs-center], [mc-tab-nav-bar][mc-align-tabs-center]',\n    host: { class: 'mc-tab-group_align-labels-center' }\n})\nexport class McAlignTabsCenterCssStyler { }\n\n@Directive({\n    selector: 'mc-tab-group[mc-align-tabs-end], [mc-tab-nav-bar][mc-align-tabs-end]',\n    host: { class: 'mc-tab-group_align-labels-end' }\n})\nexport class McAlignTabsEndCssStyler { }\n\n@Directive({\n    selector: 'mc-tab-group[mc-stretch-tabs], [mc-tab-nav-bar][mc-stretch-tabs]',\n    host: { class: 'mc-tab-group_stretch-labels' }\n})\nexport class McStretchTabsCssStyler { }\n\n/** Used to generate unique ID's for each tab component */\nlet nextId = 0;\n\n/** A simple change event emitted on focus or selection changes. */\nexport class McTabChangeEvent {\n    /** Index of the currently-selected tab. */\n    index: number;\n    /** Reference to the currently-selected tab. */\n    tab: McTab;\n}\n\n/** Possible positions for the tab header. */\nexport type McTabHeaderPosition = 'above' | 'below';\n\n/** Object that can be used to configure the default options for the tabs module. */\nexport interface IMcTabsConfig {\n    /** Duration for the tab animation. Must be a valid CSS value (e.g. 600ms). */\n    animationDuration?: string;\n}\n\n/** Injection token that can be used to provide the default options the tabs module. */\nexport const MC_TABS_CONFIG = new InjectionToken<string>('MC_TABS_CONFIG');\n\n// Boilerplate for applying mixins to McTabGroup.\n/** @docs-private */\nexport class McTabGroupBase {\n    // tslint:disable-next-line:naming-convention\n    constructor(public _elementRef: ElementRef) { }\n}\n// tslint:disable-next-line:naming-convention\nexport const McTabGroupMixinBase:\n    CanColorCtor &\n    typeof McTabGroupBase =\n    mixinColor(mixinDisabled(McTabGroupBase));\n\n/**\n * Tab-group component.  Supports basic tab pairs (label + content) and includes\n * keyboard navigation.\n */\n@Component({\n    selector: 'mc-tab-group',\n    exportAs: 'mcTabGroup',\n    templateUrl: 'tab-group.html',\n    styleUrls: ['tab-group.css'],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    inputs: ['color'],\n    host: {\n        class: 'mc-tab-group',\n        '[class.mc-tab-group_dynamic-height]': 'dynamicHeight',\n        '[class.mc-tab-group_inverted-header]': 'headerPosition === \"below\"'\n    }\n})\nexport class McTabGroup extends McTabGroupMixinBase implements AfterContentInit,\n    AfterContentChecked, OnDestroy, CanColor {\n    lightTab: boolean;\n\n    /** Whether the tab group should grow to the size of the active tab. */\n    @Input()\n    get dynamicHeight(): boolean { return this._dynamicHeight; }\n    set dynamicHeight(value: boolean) { this._dynamicHeight = coerceBooleanProperty(value); }\n\n    /** The index of the active tab. */\n    @Input()\n    get selectedIndex(): number | null { return this._selectedIndex; }\n    set selectedIndex(value: number | null) {\n        this.indexToSelect = coerceNumberProperty(value, null);\n    }\n\n    @ContentChildren(McTab) tabs: QueryList<McTab>;\n\n    @ViewChild('tabBodyWrapper', {static: false}) tabBodyWrapper: ElementRef;\n\n    @ViewChild('tabHeader', {static: false}) tabHeader: McTabHeader;\n\n    /** Position of the tab header. */\n    @Input() headerPosition: McTabHeaderPosition = 'above';\n\n    /** Duration for the tab animation. Must be a valid CSS value (e.g. 600ms). */\n    @Input() animationDuration: string;\n\n    /** Output to enable support for two-way binding on `[(selectedIndex)]` */\n    @Output() readonly selectedIndexChange: EventEmitter<number> = new EventEmitter<number>();\n\n    /** Event emitted when focus has changed within a tab group. */\n    @Output() readonly focusChange: EventEmitter<McTabChangeEvent> =\n        new EventEmitter<McTabChangeEvent>();\n\n    /** Event emitted when the body animation has completed */\n    @Output() readonly animationDone: EventEmitter<void> = new EventEmitter<void>();\n\n    /** Event emitted when the tab selection has changed. */\n    @Output() readonly selectedTabChange: EventEmitter<McTabChangeEvent> =\n        new EventEmitter<McTabChangeEvent>(true);\n\n    /** The tab index that should be selected after the content has been checked. */\n    private indexToSelect: number | null = 0;\n\n    /** Snapshot of the height of the tab body wrapper before another tab is activated. */\n    private tabBodyWrapperHeight: number = 0;\n\n    /** Subscription to tabs being added/removed. */\n    private tabsSubscription = Subscription.EMPTY;\n\n    /** Subscription to changes in the tab labels. */\n    private tabLabelSubscription = Subscription.EMPTY;\n    private _dynamicHeight: boolean = false;\n    private _selectedIndex: number | null = null;\n\n    private groupId: number;\n\n    constructor(\n        elementRef: ElementRef,\n        private changeDetectorRef: ChangeDetectorRef,\n        @Attribute('mc-light-tabs') lightTabs: string,\n        @Inject(MC_TABS_CONFIG) @Optional() defaultConfig?: IMcTabsConfig\n    ) {\n        super(elementRef);\n\n        this.lightTab = coerceBooleanProperty(lightTabs);\n\n        this.groupId = nextId++;\n        this.animationDuration = defaultConfig && defaultConfig.animationDuration ?\n            defaultConfig.animationDuration : '0ms';\n    }\n\n    /**\n     * After the content is checked, this component knows what tabs have been defined\n     * and what the selected index should be. This is where we can know exactly what position\n     * each tab should be in according to the new selected index, and additionally we know how\n     * a new selected tab should transition in (from the left or right).\n     */\n    ngAfterContentChecked() {\n        // Don't clamp the `indexToSelect` immediately in the setter because it can happen that\n        // the amount of tabs changes before the actual change detection runs.\n        const indexToSelect = this.indexToSelect = this.clampTabIndex(this.indexToSelect);\n\n        // If there is a change in selected index, emit a change event. Should not trigger if\n        // the selected index has not yet been initialized.\n        if (this._selectedIndex !== indexToSelect) {\n            const isFirstRun = this._selectedIndex == null;\n\n            if (!isFirstRun) {\n                this.selectedTabChange.emit(this.createChangeEvent(indexToSelect));\n            }\n\n            // Changing these values after change detection has run\n            // since the checked content may contain references to them.\n            Promise.resolve().then(() => {\n                this.tabs.forEach((tab, index) => tab.isActive = index === indexToSelect);\n\n                if (!isFirstRun) {\n                    this.selectedIndexChange.emit(indexToSelect);\n                }\n            });\n        }\n\n        // Setup the position for each tab and optionally setup an origin on the next selected tab.\n        this.tabs.forEach((tab: McTab, index: number) => {\n            tab.position = index - indexToSelect;\n\n            // If there is already a selected tab, then set up an origin for the next selected tab\n            // if it doesn't have one already.\n            if (this._selectedIndex != null && tab.position === 0 && !tab.origin) {\n                tab.origin = indexToSelect - this._selectedIndex;\n            }\n        });\n\n        if (this._selectedIndex !== indexToSelect) {\n            this._selectedIndex = indexToSelect;\n            this.changeDetectorRef.markForCheck();\n        }\n    }\n\n    ngAfterContentInit() {\n        this.subscribeToTabLabels();\n\n        // Subscribe to changes in the amount of tabs, in order to be\n        // able to re-render the content as new tabs are added or removed.\n        this.tabsSubscription = this.tabs.changes.subscribe(() => {\n            const indexToSelect = this.clampTabIndex(this.indexToSelect);\n\n            // Maintain the previously-selected tab if a new tab is added or removed and there is no\n            // explicit change that selects a different tab.\n            if (indexToSelect === this._selectedIndex) {\n                const tabs = this.tabs.toArray();\n\n                for (let i = 0; i < tabs.length; i++) {\n                    if (tabs[i].isActive) {\n                        // Assign both to the `_indexToSelect` and `_selectedIndex` so we don't fire a changed\n                        // event, otherwise the consumer may end up in an infinite loop in some edge cases like\n                        // adding a tab within the `selectedIndexChange` event.\n                        this.indexToSelect = this._selectedIndex = i;\n                        break;\n                    }\n                }\n            }\n\n            this.subscribeToTabLabels();\n            this.changeDetectorRef.markForCheck();\n        });\n    }\n\n    ngOnDestroy() {\n        this.tabsSubscription.unsubscribe();\n        this.tabLabelSubscription.unsubscribe();\n    }\n\n    focusChanged(index: number) {\n        this.focusChange.emit(this.createChangeEvent(index));\n    }\n\n    /** Returns a unique id for each tab label element */\n    getTabLabelId(i: number): string {\n        return `mc-tab-label-${this.groupId}-${i}`;\n    }\n\n    /** Returns a unique id for each tab content element */\n    getTabContentId(i: number): string {\n        return `mc-tab-content-${this.groupId}-${i}`;\n    }\n\n    /**\n     * Sets the height of the body wrapper to the height of the activating tab if dynamic\n     * height property is true.\n     */\n    setTabBodyWrapperHeight(tabHeight: number): void {\n        if (!this._dynamicHeight || !this.tabBodyWrapperHeight) { return; }\n\n        const wrapper: HTMLElement = this.tabBodyWrapper.nativeElement;\n\n        wrapper.style.height = `${this.tabBodyWrapperHeight}px`;\n\n        // This conditional forces the browser to paint the height so that\n        // the animation to the new height can have an origin.\n        if (this.tabBodyWrapper.nativeElement.offsetHeight) {\n            wrapper.style.height = `${tabHeight}px`;\n        }\n    }\n\n    /** Removes the height of the tab body wrapper. */\n    removeTabBodyWrapperHeight(): void {\n        this.tabBodyWrapperHeight = this.tabBodyWrapper.nativeElement.clientHeight;\n        this.tabBodyWrapper.nativeElement.style.height = '';\n        this.animationDone.emit();\n    }\n\n    /** Handle click events, setting new selected index if appropriate. */\n    handleClick(tab: McTab, tabHeader: McTabHeader, index: number) {\n        if (!tab.disabled) {\n            this.selectedIndex = tabHeader.focusIndex = index;\n        }\n    }\n\n    /** Retrieves the tabindex for the tab. */\n    getTabIndex(tab: McTab, index: number): number | null {\n        if (tab.disabled) {\n            return null;\n        }\n\n        return this.selectedIndex === index ? 0 : -1;\n    }\n\n    private createChangeEvent(index: number): McTabChangeEvent {\n        const event = new McTabChangeEvent();\n        event.index = index;\n        if (this.tabs && this.tabs.length) {\n            event.tab = this.tabs.toArray()[index];\n        }\n\n        return event;\n    }\n\n    /**\n     * Subscribes to changes in the tab labels. This is needed, because the @Input for the label is\n     * on the McTab component, whereas the data binding is inside the McTabGroup. In order for the\n     * binding to be updated, we need to subscribe to changes in it and trigger change detection\n     * manually.\n     */\n    private subscribeToTabLabels() {\n        if (this.tabLabelSubscription) {\n            this.tabLabelSubscription.unsubscribe();\n        }\n\n        this.tabLabelSubscription = merge(...this.tabs.map((tab) => tab.stateChanges))\n            .subscribe(() => this.changeDetectorRef.markForCheck());\n    }\n\n    /** Clamps the given index to the bounds of 0 and the tabs length. */\n    private clampTabIndex(index: number | null): number {\n        // Note the `|| 0`, which ensures that values like NaN can't get through\n        // and which would otherwise throw the component into an infinite loop\n        // (since Mch.max(NaN, 0) === NaN).\n        return Math.min(this.tabs.length - 1, Math.max(index || 0, 0));\n    }\n}\n","import { FocusMonitor } from '@angular/cdk/a11y';\nimport {\n    Attribute,\n    ChangeDetectionStrategy,\n    Component,\n    Directive,\n    ElementRef,\n    Input,\n    OnDestroy,\n    ViewEncapsulation\n} from '@angular/core';\nimport {\n    CanColor,\n    CanColorCtor,\n    CanDisable,\n    CanDisableCtor,\n    HasTabIndex,\n    HasTabIndexCtor,\n    mixinColor,\n    mixinDisabled,\n    mixinTabIndex\n} from '@ptsecurity/mosaic/core';\n\n\n// Boilerplate for applying mixins to McTabNav.\n/** @docs-private */\nexport class McTabNavBase {\n    // tslint:disable-next-line:naming-convention\n    constructor(public _elementRef: ElementRef) {}\n}\n// tslint:disable-next-line:naming-convention\nexport const McTabNavMixinBase: CanColorCtor &\n    typeof McTabNavBase = mixinColor(McTabNavBase);\n\n/**\n * Navigation component matching the styles of the tab group header.\n */\n@Component({\n    selector: '[mc-tab-nav-bar]',\n    exportAs: 'mcTabNavBar, mcTabNav',\n    inputs: ['color'],\n    templateUrl: 'tab-nav-bar.html',\n    styleUrls: ['tab-nav-bar.css'],\n    host: { class: 'mc-tab-nav-bar' },\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class McTabNav extends McTabNavMixinBase\n    implements CanColor {\n        constructor(elementRef: ElementRef) {\n            super(elementRef);\n        }\n     }\n\n// Boilerplate for applying mixins to McTabLink.\nexport class McTabLinkBase {}\n// tslint:disable-next-line:naming-convention\nexport const McTabLinkMixinBase: HasTabIndexCtor & CanDisableCtor &\n    typeof McTabLinkBase = mixinTabIndex(mixinDisabled(McTabLinkBase));\n\n/**\n * Link inside of a `mc-tab-nav-bar`.\n */\n@Directive({\n    selector: '[mc-tab-link], [mcTabLink]',\n    exportAs: 'mcTabLink',\n    inputs: ['disabled', 'tabIndex'],\n    host: {\n        class: 'mc-tab-link',\n        '[attr.aria-current]': 'active',\n        '[attr.aria-disabled]': 'disabled.toString()',\n        '[attr.tabIndex]': 'tabIndex',\n        '[class.mc-disabled]': 'disabled',\n        '[class.mc-active]': 'active'\n    }\n})\nexport class McTabLink extends McTabLinkMixinBase\n    implements OnDestroy, CanDisable, HasTabIndex {\n    /** Whether the link is active. */\n    @Input()\n    get active(): boolean {\n        return this.isActive;\n    }\n    set active(value: boolean) {\n        if (value !== this.isActive) {\n            this.isActive = value;\n        }\n    }\n\n    /** Whether the tab link is active or not. */\n    protected isActive: boolean = false;\n\n    constructor(\n        public elementRef: ElementRef,\n        @Attribute('tabindex') tabIndex: string,\n        private focusMonitor: FocusMonitor\n    ) {\n        super();\n\n        this.tabIndex = parseInt(tabIndex) || 0;\n        this.focusMonitor.monitor(this.elementRef.nativeElement);\n    }\n\n    ngOnDestroy() {\n        this.focusMonitor.stopMonitoring(this.elementRef.nativeElement);\n    }\n}\n"],"names":["McTabsModule","__extends","d","b","__","this","constructor","extendStatics","prototype","Object","create","setPrototypeOf","__proto__","Array","p","hasOwnProperty","McTabContent","template","type","Directive","args","selector","TemplateRef","McTabLabel","_super","tslib_1.__extends","CdkPortal","ctorParameters","McTabBase","McTabMixinBase","mixinDisabled","McTab","viewContainerRef","_this","call","textLabel","stateChanges","Subject","position","origin","isActive","contentPortal","defineProperty","ngOnChanges","changes","next","ngOnDestroy","complete","ngOnInit","TemplatePortal","explicitContent","implicitContent","Component","inputs","changeDetection","ChangeDetectionStrategy","OnPush","encapsulation","ViewEncapsulation","None","exportAs","ViewContainerRef","templateLabel","ContentChild","static","read","ViewChild","Input","tabId","ariaLabel","ariaLabelledby","mcTabsAnimations","translateTab","trigger","state","style","transform","minHeight","transition","animate","McTabBody","elementRef","dir","changeDetectorRef","onCentering","EventEmitter","beforeCentering","afterLeavingCenter","onCentered","animationDuration","dirChangeSubscription","Subscription","EMPTY","change","subscribe","direction","computePositionAnimationState","markForCheck","positionIndex","bodyPosition","computePositionFromOrigin","unsubscribe","onTranslateTabStarted","e","isCentering","isCenterPosition","toState","emit","nativeElement","clientHeight","onTranslateTabComplete","fromState","getLayoutDirection","value","styles","animations","host","class","ElementRef","Directionality","decorators","Optional","ChangeDetectorRef","Output","portalHost","CdkPortalOutlet","content","McTabBodyPortal","componentFactoryResolver","centeringSub","leavingSub","pipe","startWith","hasAttached","attach","detach","ComponentFactoryResolver","Inject","forwardRef","McTabLabelWrapperBase","McTabLabelWrapperMixinBase","McTabLabelWrapper","focus","getOffsetLeft","offsetLeft","getOffsetWidth","offsetWidth","[class.mc-disabled]","[attr.aria-disabled]","McTabHeaderBase","McTabHeader","viewportRuler","ngZone","showPaginationControls","disableScrollAfter","disableScrollBefore","selectFocusedIndex","indexFocused","_scrollDistance","selectedIndexChanged","destroyed","_selectedIndex","coercedValue","coerceNumberProperty","keyManager","updateActiveItem","activeItemIndex","isValidIndex","focusIndex","setActiveItem","v","Math","max","min","getMaxScrollDistance","scrollDistanceChanged","checkScrollingControls","ngAfterContentChecked","tabLabelCount","labelWrappers","length","updatePagination","scrollToLabel","updateTabScrollPosition","handleKeydown","event","keyCode","HOME","setFirstItemActive","preventDefault","END","setLastItemActive","ENTER","SPACE","onKeydown","ngAfterContentInit","dirChange","observableOf","resize","realign","FocusKeyManager","withHorizontalOrientation","withWrap","undefined","requestAnimationFrame","merge","takeUntil","newFocusIndex","setTabFocus","onContentChanges","textContent","currentTextContent","zoneCallback","run","checkPaginationEnabled","index","tab","toArray","disabled","tabIndex","containerEl","tabListContainer","scrollLeft","scrollWidth","scrollDistance","translateX","tabList","round","scrollHeader","scrollDir","viewLength","labelIndex","selectedLabel","labelBeforePos","labelAfterPos","beforeVisiblePos","afterVisiblePos","isEnabled","[class.mc-tab-header__pagination-controls_enabled]","[class.mc-tab-header_rtl]","ViewportRuler","NgZone","selectedIndex","ContentChildren","McLightTabsCssStyler","McAlignTabsCenterCssStyler","McAlignTabsEndCssStyler","McStretchTabsCssStyler","nextId","McTabChangeEvent","MC_TABS_CONFIG","InjectionToken","McTabGroupBase","_elementRef","McTabGroupMixinBase","mixinColor","McTabGroup","lightTabs","defaultConfig","headerPosition","selectedIndexChange","focusChange","animationDone","selectedTabChange","indexToSelect","tabBodyWrapperHeight","tabsSubscription","tabLabelSubscription","_dynamicHeight","lightTab","coerceBooleanProperty","groupId","clampTabIndex","isFirstRun_1","createChangeEvent","Promise","resolve","then","tabs","forEach","subscribeToTabLabels","i","focusChanged","getTabLabelId","getTabContentId","setTabBodyWrapperHeight","tabHeight","wrapper","tabBodyWrapper","height","offsetHeight","removeTabBodyWrapperHeight","handleClick","tabHeader","getTabIndex","apply","map","[class.mc-tab-group_dynamic-height]","[class.mc-tab-group_inverted-header]","String","Attribute","dynamicHeight","McTabNavBase","McTabNavMixinBase","McTabNav","McTabLinkBase","McTabLinkMixinBase","mixinTabIndex","McTabLink","focusMonitor","parseInt","monitor","stopMonitoring","[attr.aria-current]","[attr.tabIndex]","[class.mc-active]","FocusMonitor","active","NgModule","imports","CommonModule","McCommonModule","PortalModule","A11yModule","exports","declarations"],"mappings":"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"}