{"version":3,"file":"mosaic-moment-adapter.umd.min.js","sources":["../../packages/mosaic-moment-adapter/adapter/index.ts","../../node_modules/tslib/tslib.es6.js","../../packages/mosaic-moment-adapter/adapter/moment-date-adapter.ts","../../packages/mosaic-moment-adapter/adapter/locales/en-US.ts","../../packages/mosaic-moment-adapter/adapter/locales/ru-RU.ts","../../packages/mosaic-moment-adapter/adapter/moment-date-formats.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\nimport { DateAdapter, MC_DATE_FORMATS, MC_DATE_LOCALE } from '@ptsecurity/cdk/datetime';\n\nimport { MC_MOMENT_DATE_ADAPTER_OPTIONS, MomentDateAdapter } from './moment-date-adapter';\nimport { MC_MOMENT_DATE_FORMATS } from './moment-date-formats';\n\n\nexport * from './moment-date-adapter';\nexport * from './moment-date-formats';\n\n@NgModule({\n    providers: [\n        {\n            provide: DateAdapter,\n            useClass: MomentDateAdapter,\n            deps: [ MC_DATE_LOCALE, MC_MOMENT_DATE_ADAPTER_OPTIONS ]\n        }\n    ]\n})\nexport class MomentDateModule {}\n\n@NgModule({\n    imports: [MomentDateModule],\n    providers: [{\n        provide: MC_DATE_FORMATS, useValue: MC_MOMENT_DATE_FORMATS\n    }]\n})\nexport class McMomentDateModule {}\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","// tslint:disable:no-magic-numbers\nimport { Inject, Injectable, InjectionToken, Optional } from '@angular/core';\nimport {\n    DateAdapter,\n    MC_DATE_LOCALE,\n    IFormatterRangeTemplate,\n    IFormatterRelativeTemplate,\n    IFormatterAbsoluteTemplate\n} from '@ptsecurity/cdk/datetime';\nimport * as MessageFormat from 'messageformat';\n// Depending on whether rollup is used, moment needs to be imported differently.\n// Since Moment.js doesn't have a default export, we normally need to import using the `* as`\n// syntax. However, rollup creates a synthetic default module and we thus need to import it using\n// the `default as` syntax.\nimport * as _moment from 'moment';\n// tslint:disable:no-duplicate-imports\n// @ts-ignore (look at tsconfig)\nimport { default as _rollupMoment, Moment } from 'moment';\nimport { unitOfTime } from 'moment';\n\nimport { enUS } from './locales/en-US';\nimport { ruRU } from './locales/ru-RU';\nimport { IFormatterConfig } from './locales/IFormatterConfig';\n\n\nconst moment = _rollupMoment || _moment;\n\n/** Configurable options for {@see MomentDateAdapter}. */\nexport interface IMcMomentDateAdapterOptions {\n    /**\n     * Turns the use of utc dates on or off.\n     * {@default false}\n     */\n    useUtc: boolean;\n    /**\n     * whether should parse method try guess date format\n     * {@default false}\n     */\n    findDateFormat: boolean;\n}\n\n/** InjectionToken for moment date adapter to configure options. */\nexport const MC_MOMENT_DATE_ADAPTER_OPTIONS = new InjectionToken<IMcMomentDateAdapterOptions>(\n    'MC_MOMENT_DATE_ADAPTER_OPTIONS', {\n        providedIn: 'root',\n        factory: MC_MOMENT_DATE_ADAPTER_OPTIONS_FACTORY\n    });\n\n/** @docs-private */\n// tslint:disable:naming-convention\nexport function MC_MOMENT_DATE_ADAPTER_OPTIONS_FACTORY(): IMcMomentDateAdapterOptions {\n    return {\n        useUtc: false,\n        findDateFormat: false\n    };\n}\n\n/** Creates an array and fills it with values. */\nfunction range<T>(length: number, valueFunction: (index: number) => T): T[] {\n    const valuesArray = Array(length);\n\n    for (let i = 0; i < length; i++) {\n        valuesArray[i] = valueFunction(i);\n    }\n\n    return valuesArray;\n}\n\n@Injectable()\nexport class MomentDateAdapter extends DateAdapter<Moment> {\n\n    private messageformat: MessageFormat;\n\n    private readonly invalidDateErrorText: string = 'Invalid date';\n\n    private formatterConfig: IFormatterConfig;\n\n    private get momentWithLocale(): Moment {\n        return moment().locale(this.locale);\n    }\n\n    private localeData: {\n        firstDayOfWeek: number;\n        longMonths: string[];\n        shortMonths: string[];\n        dates: string[];\n        longDaysOfWeek: string[];\n        shortDaysOfWeek: string[];\n        narrowDaysOfWeek: string[];\n    };\n\n    constructor(\n        @Optional() @Inject(MC_DATE_LOCALE) dateLocale: string,\n        @Optional() @Inject(MC_MOMENT_DATE_ADAPTER_OPTIONS)\n        private options?: IMcMomentDateAdapterOptions\n    ) {\n        super();\n\n        this.setLocale(dateLocale || moment.locale());\n\n        this.configureTranslator(this.locale);\n    }\n\n    setLocale(locale: string): void {\n        super.setLocale(locale);\n\n        let momentLocaleData = moment.localeData(locale);\n\n        // This is our customs translations\n        const i18nLocals = ['en', 'ru'];\n\n        if (i18nLocals.indexOf(locale) !== -1) {\n            this.formatterConfig = locale === 'en' ? enUS : ruRU;\n\n            momentLocaleData = moment.updateLocale(locale, {\n                monthsShort: {\n                    format: this.formatterConfig.monthNames.short.formatted,\n                    standalone: this.formatterConfig.monthNames.short.standalone\n                },\n                weekdaysShort: this.formatterConfig.dayOfWeekNames.short,\n                weekdays: this.formatterConfig.dayOfWeekNames.long\n            });\n        }\n\n        this.localeData = {\n            firstDayOfWeek: momentLocaleData.firstDayOfWeek(),\n            longMonths: momentLocaleData.months(),\n            shortMonths: momentLocaleData.monthsShort(),\n            dates: range(31, (i) => this.createDate(2017, 0, i + 1).format('D')),\n            longDaysOfWeek: momentLocaleData.weekdays(),\n            shortDaysOfWeek: momentLocaleData.weekdaysShort(),\n            narrowDaysOfWeek: momentLocaleData.weekdaysMin()\n        };\n    }\n\n    getYear(date: Moment): number {\n        return this.clone(date).year();\n    }\n\n    getMonth(date: Moment): number {\n        return this.clone(date).month();\n    }\n\n    getDate(date: Moment): number {\n        return this.clone(date).date();\n    }\n\n    getHours(date: Moment): number {\n        return this.clone(date).hours();\n    }\n\n    getMinutes(date: Moment): number {\n        return this.clone(date).minutes();\n    }\n\n    getSeconds(date: Moment): number {\n        return this.clone(date).seconds();\n    }\n\n    getMilliseconds(date: Moment): number {\n        return this.clone(date).milliseconds();\n    }\n\n    getTime(date: Moment): number {\n        return date.valueOf();\n    }\n\n    getDayOfWeek(date: Moment): number {\n        return this.clone(date).day();\n    }\n\n    getMonthNames(style: 'long' | 'short' | 'narrow'): string[] {\n        // Moment.js doesn't support narrow month names\n        return style === 'long' ? this.localeData.longMonths : this.localeData.shortMonths;\n    }\n\n    getDateNames(): string[] {\n        return this.localeData.dates;\n    }\n\n    getDayOfWeekNames(style: 'long' | 'short' | 'narrow'): string[] {\n        if (style === 'long') {\n            return this.localeData.longDaysOfWeek;\n        }\n\n        if (style === 'short') {\n            return this.localeData.shortDaysOfWeek;\n        }\n\n        return this.localeData.narrowDaysOfWeek;\n    }\n\n    getYearName(date: Moment): string {\n        return this.clone(date).format('YYYY');\n    }\n\n    getFirstDayOfWeek(): number {\n        return this.localeData.firstDayOfWeek;\n    }\n\n    getNumDaysInMonth(date: Moment): number {\n        return this.clone(date).daysInMonth();\n    }\n\n    clone(date: Moment): Moment {\n        return date.clone().locale(this.locale);\n    }\n\n    createDate(year: number, month: number, date: number): Moment {\n        // Moment.js will create an invalid date if any of the components are out of bounds, but we\n        // explicitly check each case so we can throw more descriptive errors.\n        if (month < 0 || month > 11) {\n            throw Error(`Invalid month index \"${month}\". Month index has to be between 0 and 11.`);\n        }\n\n        if (date < 1) {\n            throw Error(`Invalid date \"${date}\". Date has to be greater than 0.`);\n        }\n\n        const result = this.createMoment({year, month, date}).locale(this.locale);\n\n        // If the result isn't valid, the date must have been out of bounds for this month.\n        if (!result.isValid()) {\n            throw Error(`Invalid date \"${date}\" for month with index \"${month}\".`);\n        }\n\n        return result;\n    }\n\n    createDateTime(\n        year: number, month: number, date: number, hours: number, minutes: number, seconds: number, milliseconds: number\n    ): Moment {\n        const newDate = this.createDate(year, month, date);\n\n        newDate.hours(hours);\n        newDate.minutes(minutes);\n        newDate.seconds(seconds);\n        newDate.milliseconds(milliseconds);\n\n        return newDate;\n    }\n\n    today(): Moment {\n        return this.createMoment().locale(this.locale);\n    }\n\n    parse(value: any, parseFormat: string | string[]): Moment | null {\n        if (value) {\n            if (value && typeof value === 'string') {\n                if (this.options && this.options.findDateFormat) {\n                    return this.findFormat(value);\n                }\n\n                return parseFormat\n                    ? this.createMoment(value, parseFormat, this.locale)\n                    : this.createMoment(value).locale(this.locale);\n            }\n\n            return this.createMoment(value).locale(this.locale);\n        }\n\n        return null;\n    }\n\n    format(date: Moment, displayFormat: string): string {\n        // tslint:disable:no-parameter-reassignment\n        date = this.clone(date);\n        if (!this.isValid(date)) {\n            throw Error('MomentDateAdapter: Cannot format invalid date.');\n        }\n\n        return date.format(displayFormat);\n    }\n\n    addCalendarYears(date: Moment, years: number): Moment {\n        return this.clone(date).add({ years });\n    }\n\n    addCalendarMonths(date: Moment, months: number): Moment {\n        return this.clone(date).add({ months });\n    }\n\n    addCalendarDays(date: Moment, days: number): Moment {\n        return this.clone(date).add({ days });\n    }\n\n    toIso8601(date: Moment): string {\n        return this.clone(date).format();\n    }\n\n    /** https://www.ietf.org/rfc/rfc3339.txt */\n    deserialize(value: any): Moment | null {\n        let date;\n        if (value instanceof Date) {\n            date = this.createMoment(value).locale(this.locale);\n        } else if (this.isDateInstance(value)) {\n            // Note: assumes that cloning also sets the correct locale.\n            return this.clone(value);\n        }\n        if (typeof value === 'string') {\n            if (!value) {\n                return null;\n            }\n            date = this.createMoment(value, moment.ISO_8601).locale(this.locale);\n        }\n        if (date && this.isValid(date)) {\n            return this.createMoment(date).locale(this.locale);\n        }\n\n        return super.deserialize(value);\n    }\n\n    isDateInstance(obj: any): boolean {\n        return moment.isMoment(obj);\n    }\n\n    isValid(date: Moment): boolean {\n        return this.clone(date).isValid();\n    }\n\n    invalid(): Moment {\n        return moment.invalid();\n    }\n\n    relativeDate(date: Moment, template: IFormatterRelativeTemplate): string {\n        if (!this.isDateInstance(date)) { throw new Error(this.invalidDateErrorText); }\n\n        const now = this.momentWithLocale;\n\n        const totalSeconds = now.diff(date, 'seconds');\n        const totalMinutes = now.diff(date, 'minutes');\n\n        const isToday = now.isSame(date, 'day');\n        const isYesterday = now.add(-1, 'days').isSame(date, 'day');\n\n        const templateVariables = {...this.formatterConfig.variables, ...template.variables};\n        const variables = this.compileVariables(date, templateVariables);\n        let newTemplate;\n\n        if (totalSeconds <= 59) { // seconds ago\n            variables.SECONDS_PASSED = totalSeconds;\n            newTemplate = template.SECONDS_AGO;\n\n        } else if (totalMinutes <= 59) { // minutes ago\n            variables.MINUTES_PASSED = totalMinutes;\n            newTemplate = template.MINUTES_AGO;\n\n        } else if (isToday) { // today\n            newTemplate = template.TODAY;\n\n        } else if (isYesterday) { // yesterday\n            newTemplate = template.YESTERDAY;\n\n        } else { // before yesterday\n            newTemplate = template.BEFORE_YESTERDAY;\n        }\n\n        return this.messageformat.compile(newTemplate)(variables);\n    }\n\n    relativeShortDate(date: Moment): string {\n        return this.relativeDate(date, this.formatterConfig.relativeTemplates.short);\n    }\n\n    relativeLongDate(date: Moment): string {\n        return this.relativeDate(date, this.formatterConfig.relativeTemplates.long);\n    }\n\n    absoluteDate(date: Moment, params: IFormatterAbsoluteTemplate, datetime = false): string {\n        if (!this.isDateInstance(date)) { throw new Error(this.invalidDateErrorText); }\n\n        const variables = {...this.formatterConfig.variables, ...params.variables};\n        const template = datetime ? params.DATETIME : params.DATE;\n\n        return this.messageformat.compile(template)(this.compileVariables(date, variables));\n    }\n\n    absoluteShortDate(date: Moment): string {\n        return this.absoluteDate(date, this.formatterConfig.absoluteTemplates.short);\n    }\n\n    absoluteShortDateTime(date: Moment): string {\n        return this.absoluteDate(date, this.formatterConfig.absoluteTemplates.short, true);\n    }\n\n    absoluteLongDate(date: Moment): string {\n        return this.absoluteDate(date, this.formatterConfig.absoluteTemplates.long);\n    }\n\n    absoluteLongDateTime(date: Moment): string {\n        return this.absoluteDate(date, this.formatterConfig.absoluteTemplates.long, true);\n    }\n\n    openedRangeDate(startDate: Moment | null, endDate: Moment | null, template: IFormatterRangeTemplate) {\n        if (!moment.isMoment(startDate) && !moment.isMoment(endDate)) {\n            throw new Error(this.invalidDateErrorText);\n        }\n\n        const variables = { ...this.formatterConfig.variables, ...template.variables };\n        let params = {};\n\n        if (startDate) {\n            const startDateVariables = this.compileVariables(startDate, variables);\n\n            params = {\n                ...variables,\n                START_DATE: this.messageformat.compile(template.START_DATE)(startDateVariables),\n                RANGE_TYPE: 'onlyStart'\n            };\n        } else if (endDate) {\n            const endDateVariables = this.compileVariables(endDate, variables);\n\n            params = {\n                ...variables,\n                END_DATE: this.messageformat.compile(template.END_DATE)(endDateVariables),\n                RANGE_TYPE: 'onlyEnd'\n            };\n        }\n\n        return this.messageformat.compile(template.DATE)(params);\n    }\n\n    openedRangeDateTime(startDate: Moment | null, endDate: Moment | null, template: IFormatterRangeTemplate) {\n        console.log('openedRangeDateTime: '); // tslint:disable-line:no-console\n        if (!moment.isMoment(startDate) && !moment.isMoment(endDate)) {\n            throw new Error(this.invalidDateErrorText);\n        }\n\n        const variables = { ...this.formatterConfig.variables, ...template.variables };\n        let params = {};\n\n        if (startDate) {\n            const startDateVariables = this.compileVariables(startDate, variables);\n\n            params = {\n                ...variables,\n                START_DATETIME: this.messageformat.compile(template.START_DATETIME)(startDateVariables),\n                RANGE_TYPE: 'onlyStart'\n            };\n        } else if (endDate) {\n            const endDateVariables = this.compileVariables(endDate, variables);\n\n            params = {\n                ...variables,\n                END_DATETIME: this.messageformat.compile(template.END_DATETIME)(endDateVariables),\n                RANGE_TYPE: 'onlyEnd'\n            };\n        }\n\n        return this.messageformat.compile(template.DATETIME)(params);\n    }\n\n    rangeDate(startDate: Moment, endDate: Moment, template: IFormatterRangeTemplate): string {\n        if (!this.isDateInstance(startDate) || !this.isDateInstance(endDate)) {\n            throw new Error(this.invalidDateErrorText);\n        }\n\n        const variables = { ...this.formatterConfig.variables, ...template.variables };\n        const sameMonth = this.isSame('month', startDate, endDate);\n\n        const startDateVariables = this.compileVariables(startDate, variables);\n        startDateVariables.SAME_MONTH = sameMonth;\n\n        const endDateVariables = this.compileVariables(endDate, variables);\n        endDateVariables.SAME_MONTH = sameMonth;\n\n        const bothCurrentYear =\n            startDateVariables.CURRENT_YEAR === 'yes' &&\n            endDateVariables.CURRENT_YEAR === 'yes';\n        startDateVariables.CURRENT_YEAR = bothCurrentYear ? 'yes' : 'no';\n        endDateVariables.CURRENT_YEAR = bothCurrentYear ? 'yes' : 'no';\n\n        const params = {\n            ...variables,\n            START_DATE: this.messageformat.compile(template.START_DATE)(startDateVariables),\n            END_DATE: this.messageformat.compile(template.END_DATE)(endDateVariables),\n            SAME_MONTH: sameMonth\n        };\n\n        return this.messageformat.compile(template.DATE)(params);\n    }\n\n    rangeDateTime(startDate: Moment, endDate: Moment, template: IFormatterRangeTemplate): string {\n        if (!this.isDateInstance(startDate) || !this.isDateInstance(endDate)) {\n            throw new Error(this.invalidDateErrorText);\n        }\n\n        const variables = {...this.formatterConfig.variables, ...template.variables};\n        const sameMonth = this.isSame('month', startDate, endDate);\n        const sameDay = this.isSame('day', startDate, endDate);\n\n        const startDateVariables = this.compileVariables(startDate, variables);\n        startDateVariables.SAME_MONTH = sameMonth;\n        startDateVariables.SAME_DAY = sameDay;\n\n        const endDateVariables = this.compileVariables(endDate, variables);\n        endDateVariables.SAME_MONTH = sameMonth;\n        endDateVariables.SAME_DAY = sameDay;\n\n        const bothCurrentYear =\n            startDateVariables.CURRENT_YEAR === 'yes' &&\n            endDateVariables.CURRENT_YEAR === 'yes';\n        startDateVariables.CURRENT_YEAR = bothCurrentYear ? 'yes' : 'no';\n        endDateVariables.CURRENT_YEAR = bothCurrentYear ? 'yes' : 'no';\n\n        const params = {...variables,\n            START_DATETIME: this.messageformat.compile(template.START_DATETIME)(startDateVariables),\n            END_DATETIME: this.messageformat.compile(template.END_DATETIME)(endDateVariables),\n            SAME_MONTH: sameMonth,\n            SAME_DAY: sameDay};\n\n        return this.messageformat.compile(template.DATETIME)(params);\n    }\n\n    rangeShortDate(startDate: Moment | null, endDate?: Moment): string {\n        const rangeTemplates = this.formatterConfig.rangeTemplates;\n\n        if (startDate && endDate) {\n            return this.rangeDate(startDate, endDate, rangeTemplates.closedRange.short);\n        }\n\n        return this.openedRangeDate(startDate, endDate || null, rangeTemplates.openedRange.short);\n    }\n\n    rangeShortDateTime(startDate: Moment | null, endDate?: Moment): string {\n        const rangeTemplates = this.formatterConfig.rangeTemplates;\n\n        if (startDate && endDate) {\n            return this.rangeDateTime(startDate, endDate, rangeTemplates.closedRange.short);\n        }\n\n        return this.openedRangeDateTime(startDate, endDate || null, rangeTemplates.openedRange.short);\n    }\n\n    rangeLongDate(startDate: Moment | null, endDate?: Moment): string {\n        const rangeTemplates = this.formatterConfig.rangeTemplates;\n\n        if (startDate && endDate) {\n            return this.rangeDate(startDate, endDate, rangeTemplates.closedRange.long);\n        }\n\n        return this.openedRangeDate(startDate, endDate || null, rangeTemplates.openedRange.long);\n    }\n\n    rangeLongDateTime(startDate: Moment | null, endDate?: Moment): string {\n        const rangeTemplates = this.formatterConfig.rangeTemplates;\n\n        if (startDate && endDate) {\n            return this.rangeDateTime(startDate, endDate, rangeTemplates.closedRange.long);\n        }\n\n        return this.openedRangeDateTime(startDate, endDate || null, rangeTemplates.openedRange.long);\n    }\n\n    rangeMiddleDateTime(startDate: Moment, endDate: Moment): string {\n        return this.rangeDateTime(startDate, endDate, this.formatterConfig.rangeTemplates.closedRange.middle);\n    }\n\n    /** Creates a Moment instance while respecting the current UTC settings. */\n    private createMoment(...args: any[]): Moment {\n        return (this.options && this.options.useUtc) ? moment.utc(...args) : moment(...args);\n    }\n\n    private compileVariables(date: Moment, variables: any): any {\n        const compiledVariables: any = {};\n\n        // tslint:disable-next-line:no-for-in\n        for (const key in variables) {\n            if (!variables.hasOwnProperty(key)) {\n                continue;\n            }\n\n            const value = variables[key];\n            compiledVariables[key] = date.format(value);\n        }\n\n        compiledVariables.CURRENT_YEAR = this.isCurrentYear(date);\n\n        return compiledVariables;\n    }\n\n    private isCurrentYear(value: Moment): 'yes' | 'no' {\n        return this.momentWithLocale.isSame(value, 'year') ? 'yes' : 'no';\n    }\n\n    private isSame(unit: unitOfTime.StartOf, startDate: Moment, endDate: Moment): string {\n        return startDate.isSame(endDate, unit) ? 'yes' : 'no';\n    }\n\n    private configureTranslator(locale: string): void {\n        this.messageformat = new MessageFormat(locale);\n    }\n\n    private isNumeric(value: any): boolean {\n        return !isNaN(parseFloat(value)) && isFinite(value);\n    }\n\n    private findFormat(value: string): Moment | null {\n        if (!value) {\n            return null;\n        }\n\n        // default test - iso\n        const isoDate =  this.createMoment(value, moment.ISO_8601, this.locale);\n\n        if (isoDate.isValid()) {\n            return isoDate;\n        }\n\n        if (this.isNumeric(value)) {\n            // unix time sec\n            return this.createMoment(value, 'X', this.locale);\n        }\n\n        // long months naming: D MMM YYYY, MMM Do YYYY with short case support\n        if (\n            /^\\d{1,2}\\s\\S+\\s(\\d{2}|\\d{4})$/.test(value.trim()) ||\n            /^\\S+\\s\\d{1,2}[a-z]{2}\\s(\\d{2}|\\d{4})$/.test(value.trim())\n        ) {\n            return this.parseWithSpace(value);\n        }\n\n        // slash notation: DD/MM/YYYY, MM/DD/YYYY with short case support\n        if (/^\\d{1,2}\\/\\d{1,2}\\/(\\d{2}|\\d{4})$/.test(value)) {\n            return this.parseWithSlash(value);\n        }\n\n        // dash notation: DD-MM-YYYY, YYYY-DD-MM with short case support\n        if (/(^(\\d{1,2}|\\d{4})-\\d{1,2}-\\d{1,2}$)|(^\\d{1,2}-\\d{1,2}-(\\d{2}|\\d{4})$)/.test(value)) {\n           return this.parseWithDash(value);\n        }\n\n        // dot notation: DD.MM.YYYY with short case support\n        if (/^\\d{1,2}\\.\\d{1,2}\\.(\\d{2}|\\d{4})$/.test(value)) {\n            return this.parseWithDot(value);\n        }\n\n        return null;\n    }\n\n    private parseWithSpace(value: string): Moment | null {\n        switch (this.locale) {\n            case 'ru':\n                return this.createMoment(value, 'DD MMMM YYYY', this.locale);\n            case 'en':\n                // 16 Feb 2019 vs Feb 16th 2019, covers Feb and February cases\n                if (this.isNumeric(value[0])) {\n                    return this.createMoment(value, 'D MMMM YYYY', this.locale);\n                }\n\n                return this.createMoment(value, 'MMMM Do YYYY', this.locale);\n            default:\n                throw new Error(`Locale ${this.locale} is not supported`);\n        }\n    }\n\n    private parseWithSlash(value: string): Moment | null {\n        switch (this.locale) {\n            case 'ru':\n                return this.createMoment(value, 'DD/MM/YYYY', this.locale);\n            // todo do we use generalized locales? en vs en-US; until not we try to guess\n            case 'en':\n                // US vs UK\n                const parts = value.split('/');\n                const datePartsCount = 3;\n                if (parts.length !== datePartsCount) {\n                    return null;\n                }\n\n                const firstPart = parts[0].trim();\n                const secondPart = parts[1].trim();\n\n                if (!this.isNumeric(firstPart) || !this.isNumeric(secondPart)) {\n                    return null;\n                }\n\n                const monthsInYears = 12;\n\n                const canFirstBeMonth = +firstPart <= monthsInYears;\n                const canSecondByMonth = +secondPart <= monthsInYears;\n\n                // first two parts cannot be month\n                if (!canFirstBeMonth && !canSecondByMonth) {\n                    return null;\n                }\n\n                const canDetermineWhereMonth = canFirstBeMonth && canSecondByMonth;\n\n                if (canDetermineWhereMonth) {\n                    // use US format by default\n                    return this.createMoment(value, 'MM/DD/YYYY', this.locale);\n                }\n\n                return canFirstBeMonth && !canSecondByMonth\n                    ? this.createMoment(value, 'MM/DD/YYYY', this.locale)\n                    : this.createMoment(value, 'DD/MM/YYYY', this.locale);\n            default:\n                throw new Error(`Locale ${this.locale} is not supported`);\n        }\n    }\n\n    private parseWithDash(value: string): Moment | null {\n        // leading year vs finishing year\n        const parts = value.split('-');\n        if (parts[0].length === 0) {\n            return null;\n        }\n\n        const maxDayOrMonthCharsCount = 2;\n\n        return parts[0].length <= maxDayOrMonthCharsCount\n            ? this.createMoment(value, 'DD-MM-YYYY', this.locale)\n            : this.createMoment(value, 'YYYY-MM-DD', this.locale);\n    }\n\n    private parseWithDot(value: string): Moment | null {\n        // covers two cases YYYY and YY (for current year)\n        return this.createMoment(value, 'DD.MM.YYYY', this.locale);\n    }\n}\n","import { IFormatterConfig } from './IFormatterConfig';\n\n\nexport const enUS: IFormatterConfig = {\n    variables: {\n        SECONDS: 's',\n        MINUTES: 'm',\n        TIME: 'HH:mm',\n\n        DAY: 'D',\n        MONTH: 'MMM',\n        YEAR: 'YYYY',\n\n        DATE: 'MMMM\\u00A0D',\n        SHORT_DATE: 'MMM\\u00A0D',\n\n        DASH: '\\u2013',\n        LONG_DASH: '\\u202F\\u2013\\u2009',\n\n        NBSP: '\\u00A0'\n    },\n\n    monthNames: {\n        long: [\n            'January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September',\n            'October', 'November', 'December'\n        ],\n        short: {\n            standalone: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],\n            formatted: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec']\n        },\n        narrow: ['J', 'F', 'M', 'A', 'M', 'J', 'J', 'A', 'S', 'O', 'N', 'D']\n    },\n\n    dayOfWeekNames: {\n        long: ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'],\n        short: ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'],\n        narrow: ['S', 'M', 'T', 'W', 'T', 'F', 'S']\n    },\n\n    relativeTemplates: {\n        short: {\n            SECONDS_AGO: 'Just now',\n            MINUTES_AGO: '{MINUTES_PASSED}{NBSP}min ago',\n            TODAY: '{TIME}',\n            YESTERDAY: 'Yesterday, {TIME}',\n            BEFORE_YESTERDAY: '{CURRENT_YEAR, select, yes{{SHORT_DATE}, {TIME}} other{{SHORT_DATE}, {YEAR}}}'\n        },\n        long: {\n            SECONDS_AGO: 'Just now',\n            MINUTES_AGO: '{MINUTES_PASSED, plural, =1{#{NBSP}minute} other{#{NBSP}minutes}} ago',\n            TODAY: '{TIME}',\n            YESTERDAY: 'Yesterday, {TIME}',\n            BEFORE_YESTERDAY: '{CURRENT_YEAR, select, yes{{DATE}, {TIME}} other{{DATE}, {YEAR}}}'\n        }\n    },\n    absoluteTemplates: {\n        short: {\n            DATE: '{CURRENT_YEAR, select, yes{{SHORT_DATE}} other{{SHORT_DATE}, {YEAR}}}',\n            DATETIME: '{CURRENT_YEAR, select, yes{{SHORT_DATE}, {TIME}} other{{SHORT_DATE}, {YEAR}, {TIME}}}'\n        },\n        long: {\n            DATE: '{CURRENT_YEAR, select, yes{{DATE}} other{{DATE}, {YEAR}}}',\n            DATETIME: '{CURRENT_YEAR, select, yes{{DATE}, {TIME}} other{{DATE}, {YEAR}, {TIME}}}'\n        }\n    },\n    rangeTemplates: {\n        closedRange: {\n            short: {\n                START_DATE: '{CURRENT_YEAR, select, yes{{SHORT_DATE}} other{{SHORT_DATE}, {YEAR}}}',\n                END_DATE: `{\n                    SAME_MONTH,\n                    select,\n                        yes{{DAY}}\n                        other{{\n                            CURRENT_YEAR,\n                            select,\n                                yes{{SHORT_DATE}}\n                                other{{SHORT_DATE}, {YEAR}}\n                        }}\n                }`,\n                DATE: `{\n                    SAME_MONTH,\n                    select,\n                        yes{{START_DATE}{DASH}{END_DATE}}\n                        other{{START_DATE}{LONG_DASH}{END_DATE}}\n                }`,\n\n                START_DATETIME: `{\n                    SAME_DAY,\n                    select,\n                        yes{{TIME}}\n                        other{{\n                            CURRENT_YEAR,\n                            select,\n                                yes{{SHORT_DATE}, {TIME}}\n                                other{{SHORT_DATE}, {YEAR}, {TIME}}\n                        }}\n                }`,\n                END_DATETIME: `{\n                    SAME_DAY,\n                    select,\n                        yes{{\n                            CURRENT_YEAR,\n                            select,\n                                yes{{TIME}, {SHORT_DATE}}\n                                other{{TIME}, {SHORT_DATE}, {YEAR}}\n                        }}\n                        other{{\n                            CURRENT_YEAR,\n                            select,\n                                yes{{SHORT_DATE}, {TIME}}\n                                other{{SHORT_DATE}, {YEAR}, {TIME}}\n                        }}\n                }`,\n                DATETIME: `{\n                    SAME_DAY,\n                    select,\n                        yes{{START_DATETIME}{DASH}{END_DATETIME}}\n                        other{{START_DATETIME}{LONG_DASH}{END_DATETIME}}\n                }`\n            },\n            middle: {\n                START_DATE: `{\n                    SAME_MONTH,\n                    select,\n                        yes{{DAY}}\n                        other{{\n                            CURRENT_YEAR,\n                            select,\n                                yes{{DATE}}\n                                other{{DATE}, {YEAR}}\n                        }}\n                }`,\n                END_DATE: '{CURRENT_YEAR, select, yes{{DATE}} other{{DATE}, {YEAR}}}',\n                DATE: `{\n                    SAME_MONTH,\n                    select,\n                        yes{{START_DATE}{DASH}{END_DATE}}\n                        other{{START_DATE}{LONG_DASH}{END_DATE}}\n                }`,\n\n                START_DATETIME: `{\n                    SAME_DAY,\n                    select,\n                        yes{{TIME}}\n                        other{{\n                            CURRENT_YEAR,\n                            select,\n                                yes{{DATE}, {TIME}}\n                                other{{DATE}, {YEAR}, {TIME}}\n                        }}\n                }`,\n                END_DATETIME: `{\n                    SAME_DAY,\n                    select,\n                        yes{{\n                            CURRENT_YEAR,\n                            select,\n                                yes{{TIME}, {DATE}}\n                                other{{TIME}, {DATE}, {YEAR}}\n                        }}\n                        other{{\n                            CURRENT_YEAR,\n                            select,\n                                yes{{DATE}, {TIME}}\n                                other{{DATE}, {YEAR}, {TIME}}\n                        }}\n                }`,\n                DATETIME: `{\n                    SAME_DAY,\n                    select,\n                        yes{{START_DATETIME}{DASH}{END_DATETIME}}\n                        other{{START_DATETIME}{LONG_DASH}{END_DATETIME}}\n                }`\n            },\n            long: {\n                START_DATE: '{CURRENT_YEAR, select, yes{{DATE}} other{{DATE}, {YEAR}}}',\n                END_DATE: `{\n                    SAME_MONTH,\n                    select,\n                        yes{{DAY}}\n                        other{{\n                            CURRENT_YEAR,\n                            select,\n                                yes{{DATE}}\n                                other{{DATE}, {YEAR}}\n                        }}\n                }`,\n                DATE: `{\n                    SAME_MONTH,\n                    select,\n                        yes{{START_DATE}{DASH}{END_DATE}}\n                        other{{START_DATE}{LONG_DASH}{END_DATE}}\n                }`,\n\n                START_DATETIME: `{\n                    SAME_DAY,\n                    select,\n                        yes{{\n                            CURRENT_YEAR,\n                            select,\n                                yes{{DATE}, from{NBSP}{TIME}}\n                                other{{DATE}, {YEAR}, from{NBSP}{TIME}}\n                        }}\n                        other{{\n                            CURRENT_YEAR,\n                            select,\n                                yes{{DATE}, {TIME}}\n                                other{{DATE}, {YEAR}, {TIME}}\n                        }}\n                }`,\n                END_DATETIME: `{\n                    SAME_DAY,\n                    select,\n                        yes{to{NBSP}{TIME}}\n                        other{{\n                            CURRENT_YEAR,\n                            select,\n                                yes{{DATE}, {TIME}}\n                                other{{DATE}, {YEAR}, {TIME}}\n                        }}\n                }`,\n                DATETIME: `{\n                    SAME_DAY,\n                    select,\n                        yes{{START_DATETIME} {END_DATETIME}}\n                        other{From {START_DATETIME} to{NBSP}{END_DATETIME}}\n                }`\n            }\n        },\n        openedRange: {\n            short: {\n                START_DATE: `{\n                    CURRENT_YEAR,\n                    select,\n                        yes{{SHORT_DATE}}\n                        other{{SHORT_DATE} {YEAR}}\n                }`,\n                END_DATE: '{CURRENT_YEAR, select, yes{{SHORT_DATE}} other{{SHORT_DATE} {YEAR}}}',\n                DATE: `{\n                    RANGE_TYPE,\n                    select,\n                        onlyStart{From{NBSP}{START_DATE}}\n                        other{Until{NBSP}{END_DATE}}\n                }`,\n\n                START_DATETIME: `{\n                    CURRENT_YEAR,\n                    select,\n                        yes{{SHORT_DATE}, {TIME}}\n                        other{{SHORT_DATE} {YEAR}, {TIME}}\n                }`,\n                END_DATETIME: `{\n                    CURRENT_YEAR,\n                    select,\n                        yes{{SHORT_DATE}, {TIME}}\n                        other{{SHORT_DATE} {YEAR}, {TIME}}\n                }`,\n                DATETIME: `{\n                    RANGE_TYPE,\n                    select,\n                        onlyStart{From{NBSP}{START_DATETIME}}\n                        other{Until{NBSP}{END_DATETIME}}\n                }`\n            },\n            long: {\n                START_DATE: `{\n                    CURRENT_YEAR,\n                    select,\n                        yes{{DATE}}\n                        other{{DATE} {YEAR}}\n                }`,\n                END_DATE: '{CURRENT_YEAR, select, yes{{DATE}} other{{DATE} {YEAR}}}',\n                DATE: `{\n                    RANGE_TYPE,\n                    select,\n                        onlyStart{From{NBSP}{START_DATE}}\n                        other{Until{NBSP}{END_DATE}}\n                }`,\n\n                START_DATETIME: `{\n                    CURRENT_YEAR,\n                    select,\n                        yes{{DATE}, {TIME}}\n                        other{{DATE} {YEAR}, {TIME}}\n                }`,\n                END_DATETIME: `{\n                    CURRENT_YEAR,\n                    select,\n                        yes{{DATE}, {TIME}}\n                        other{{DATE} {YEAR}, {TIME}}\n                }`,\n                DATETIME: `{\n                    RANGE_TYPE,\n                    select,\n                        onlyStart{From{NBSP}{START_DATETIME}}\n                        other{Until{NBSP}{END_DATETIME}}\n                }`\n            }\n        }\n    }\n};\n","import { IFormatterConfig } from './IFormatterConfig';\n\n\nexport const ruRU: IFormatterConfig = {\n    variables: {\n        SECONDS: 's',\n        MINUTES: 'm',\n        TIME: 'HH:mm',\n\n        DAY: 'D',\n        MONTH: 'MMM',\n        YEAR: 'YYYY',\n\n        DATE: 'D\\u00A0MMMM',\n        SHORT_DATE: 'D\\u00A0MMM',\n\n        DASH: '\\u2013',\n        LONG_DASH: '\\u202F\\u2014\\u2009',\n\n        NBSP: '\\u00A0'\n    },\n\n    monthNames: {\n        long: [\n            'Январь', 'Февраль', 'Март', 'Апрель', 'Май', 'Июнь', 'Июль', 'Август', 'Сентябрь',\n            'Октябрь', 'Ноябрь', 'Декабрь'\n        ],\n        short: {\n            standalone: ['янв', 'фев', 'март', 'апр', 'май', 'июнь', 'июль', 'авг', 'сен', 'окт', 'ноя', 'дек'],\n            formatted: ['янв', 'фев', 'мар', 'апр', 'мая', 'июня', 'июля', 'авг', 'сен', 'окт', 'ноя', 'дек']\n        },\n        narrow: ['Я', 'Ф', 'М', 'А', 'М', 'И', 'И', 'А', 'С', 'О', 'Н', 'Д']\n    },\n\n    dayOfWeekNames: {\n        long: ['Воскресенье', 'Понедельник', 'Вторник', 'Среда', 'Четверг', 'Пятница', 'Суббота'],\n        short: ['вс', 'пн', 'вт', 'ср', 'чт', 'пт', 'сб'],\n        narrow: ['В', 'П', 'В', 'С', 'Ч', 'П', 'С']\n    },\n\n    relativeTemplates: {\n        short: {\n            SECONDS_AGO: 'Только что',\n            MINUTES_AGO: '{MINUTES_PASSED}{NBSP}мин назад',\n            TODAY: '{TIME}',\n            YESTERDAY: 'Вчера, {TIME}',\n            BEFORE_YESTERDAY: '{CURRENT_YEAR, select, yes{{SHORT_DATE}, {TIME}} other{{SHORT_DATE}, {YEAR}}}'\n        },\n        long: {\n            SECONDS_AGO: 'Только что',\n            MINUTES_AGO: '{MINUTES_PASSED, plural, =1{#{NBSP}минуту} =2{#{NBSP}минуты} other{#{NBSP}минут}} назад',\n            TODAY: '{TIME}',\n            YESTERDAY: 'Вчера, {TIME}',\n            BEFORE_YESTERDAY: '{CURRENT_YEAR, select, yes{{DATE}, {TIME}} other{{DATE}, {YEAR}}}'\n        }\n    },\n    absoluteTemplates: {\n        short: {\n            DATE: '{CURRENT_YEAR, select, yes{{SHORT_DATE}} other{{SHORT_DATE} {YEAR}}}',\n            DATETIME: '{CURRENT_YEAR, select, yes{{SHORT_DATE}, {TIME}} other{{SHORT_DATE} {YEAR}, {TIME}}}'\n        },\n        long: {\n            DATE: '{CURRENT_YEAR, select, yes{{DATE}} other{{DATE} {YEAR}}}',\n            DATETIME: '{CURRENT_YEAR, select, yes{{DATE}, {TIME}} other{{DATE} {YEAR}, {TIME}}}'\n        }\n    },\n    rangeTemplates: {\n        closedRange: {\n            short: {\n                START_DATE: `{\n                    SAME_MONTH,\n                    select,\n                        yes{{DAY}}\n                        other{{\n                            CURRENT_YEAR,\n                            select,\n                                yes{{SHORT_DATE}}\n                                other{{SHORT_DATE} {YEAR}}\n                        }}\n                }`,\n                END_DATE: '{CURRENT_YEAR, select, yes{{SHORT_DATE}} other{{SHORT_DATE} {YEAR}}}',\n                DATE: `{\n                    SAME_MONTH,\n                    select,\n                        yes{{START_DATE}{DASH}{END_DATE}}\n                        other{{START_DATE}{LONG_DASH}{END_DATE}}\n                }`,\n\n                START_DATETIME: `{\n                    SAME_DAY,\n                    select,\n                        yes{{TIME}}\n                        other{{\n                            CURRENT_YEAR,\n                            select,\n                                yes{{SHORT_DATE}, {TIME}}\n                                other{{SHORT_DATE} {YEAR}, {TIME}}\n                        }}\n                }`,\n                END_DATETIME: `{\n                    SAME_DAY,\n                    select,\n                        yes{{\n                            CURRENT_YEAR,\n                            select,\n                                yes{{TIME}, {SHORT_DATE}}\n                                other{{TIME}, {SHORT_DATE} {YEAR}}\n                        }}\n                        other{{\n                            CURRENT_YEAR,\n                            select,\n                                yes{{SHORT_DATE}, {TIME}}\n                                other{{SHORT_DATE} {YEAR}, {TIME}}\n                        }}\n                }`,\n                DATETIME: `{\n                    SAME_DAY,\n                    select,\n                        yes{{START_DATETIME}{DASH}{END_DATETIME}}\n                        other{{START_DATETIME}{LONG_DASH}{END_DATETIME}}\n                }`\n            },\n            middle: {\n                START_DATE: `{\n                    SAME_MONTH,\n                    select,\n                        yes{{DAY}}\n                        other{{\n                            CURRENT_YEAR,\n                            select,\n                                yes{{DATE}}\n                                other{{DATE} {YEAR}}\n                        }}\n                }`,\n                END_DATE: '{CURRENT_YEAR, select, yes{{DATE}} other{{DATE} {YEAR}}}',\n                DATE: `{\n                    SAME_MONTH,\n                    select,\n                        yes{{START_DATE}{DASH}{END_DATE}}\n                        other{{START_DATE}{LONG_DASH}{END_DATE}}\n                }`,\n\n                START_DATETIME: `{\n                    SAME_DAY,\n                    select,\n                        yes{{TIME}}\n                        other{{\n                            CURRENT_YEAR,\n                            select,\n                                yes{{DATE}, {TIME}}\n                                other{{DATE} {YEAR}, {TIME}}\n                        }}\n                }`,\n                END_DATETIME: `{\n                    SAME_DAY,\n                    select,\n                        yes{{\n                            CURRENT_YEAR,\n                            select,\n                                yes{{TIME}, {DATE}}\n                                other{{TIME}, {DATE} {YEAR}}\n                        }}\n                        other{{\n                            CURRENT_YEAR,\n                            select,\n                                yes{{DATE}, {TIME}}\n                                other{{DATE} {YEAR}, {TIME}}\n                        }}\n                }`,\n                DATETIME: `{\n                    SAME_DAY,\n                    select,\n                        yes{{START_DATETIME}{DASH}{END_DATETIME}}\n                        other{{START_DATETIME}{LONG_DASH}{END_DATETIME}}\n                }`\n            },\n            long: {\n                START_DATE: `{\n                    SAME_MONTH,\n                    select,\n                        yes{{DAY}}\n                        other{{\n                            CURRENT_YEAR,\n                            select,\n                                yes{{DATE}}\n                                other{{DATE} {YEAR}}\n                        }}\n                }`,\n                END_DATE: '{CURRENT_YEAR, select, yes{{DATE}} other{{DATE} {YEAR}}}',\n                DATE: `{\n                    SAME_MONTH,\n                    select,\n                        yes{{START_DATE}{DASH}{END_DATE}}\n                        other{{START_DATE}{LONG_DASH}{END_DATE}}\n                }`,\n\n                START_DATETIME: `{\n                    SAME_DAY,\n                    select,\n                        yes{{\n                            CURRENT_YEAR,\n                            select,\n                                yes{{DATE}, с{NBSP}{TIME}}\n                                other{{DATE} {YEAR}, с{NBSP}{TIME}}\n                        }}\n                        other{{\n                            CURRENT_YEAR,\n                            select,\n                                yes{{DATE}, {TIME}}\n                                other{{DATE} {YEAR}, {TIME}}\n                        }}\n                }`,\n                END_DATETIME: `{\n                    SAME_DAY,\n                    select,\n                        yes{по{NBSP}{TIME}}\n                        other{{\n                            CURRENT_YEAR,\n                            select,\n                                yes{{DATE}, {TIME}}\n                                other{{DATE} {YEAR}, {TIME}}\n                        }}\n                }`,\n                DATETIME: `{\n                    SAME_DAY,\n                    select,\n                        yes{{START_DATETIME} {END_DATETIME}}\n                        other{С{NBSP}{START_DATETIME} по{NBSP}{END_DATETIME}}\n                }`\n            }\n        },\n        openedRange: {\n            short: {\n                START_DATE: `{\n                    CURRENT_YEAR,\n                    select,\n                        yes{{SHORT_DATE}}\n                        other{{SHORT_DATE} {YEAR}}\n                }`,\n                END_DATE: '{CURRENT_YEAR, select, yes{{SHORT_DATE}} other{{SHORT_DATE} {YEAR}}}',\n                DATE: `{\n                    RANGE_TYPE,\n                    select,\n                        onlyStart{С{NBSP}{START_DATE}}\n                        other{По{NBSP}{END_DATE}}\n                }`,\n\n                START_DATETIME: `{\n                    CURRENT_YEAR,\n                    select,\n                        yes{{SHORT_DATE}, {TIME}}\n                        other{{SHORT_DATE} {YEAR}, {TIME}}\n                }`,\n                END_DATETIME: `{\n                    CURRENT_YEAR,\n                    select,\n                        yes{{SHORT_DATE}, {TIME}}\n                        other{{SHORT_DATE} {YEAR}, {TIME}}\n                }`,\n                DATETIME: `{\n                    RANGE_TYPE,\n                    select,\n                        onlyStart{С{NBSP}{START_DATETIME}}\n                        other{По{NBSP}{END_DATETIME}}\n                }`\n            },\n            long: {\n                START_DATE: `{\n                    CURRENT_YEAR,\n                    select,\n                        yes{{DATE}}\n                        other{{DATE} {YEAR}}\n                }`,\n                END_DATE: '{CURRENT_YEAR, select, yes{{DATE}} other{{DATE} {YEAR}}}',\n                DATE: `{\n                    RANGE_TYPE,\n                    select,\n                        onlyStart{С{NBSP}{START_DATE}}\n                        other{По{NBSP}{END_DATE}}\n                }`,\n\n                START_DATETIME: `{\n                    CURRENT_YEAR,\n                    select,\n                        yes{{DATE}, {TIME}}\n                        other{{DATE} {YEAR}, {TIME}}\n                }`,\n                END_DATETIME: `{\n                    CURRENT_YEAR,\n                    select,\n                        yes{{DATE}, {TIME}}\n                        other{{DATE} {YEAR}, {TIME}}\n                }`,\n                DATETIME: `{\n                    RANGE_TYPE,\n                    select,\n                        onlyStart{С{NBSP}{START_DATETIME}}\n                        other{По{NBSP}{END_DATETIME}}\n                }`\n            }\n        }\n    }\n};\n","import { McDateFormats } from '@ptsecurity/cdk/datetime';\n\n\nexport const MC_MOMENT_DATE_FORMATS: McDateFormats = {\n    parse: {\n        dateInput: 'L'\n    },\n    display: {\n        dateInput: 'L',\n        monthYearLabel: 'MMM YYYY',\n        dateA11yLabel: 'LL',\n        monthYearA11yLabel: 'MMMM YYYY'\n    }\n};\n"],"names":["type","NgModule","args","imports","MomentDateModule","providers","provide","MC_DATE_FORMATS","useValue","ɵ0","McMomentDateModule","__extends","d","b","__","this","constructor","extendStatics","prototype","Object","create","MC_MOMENT_DATE_ADAPTER_OPTIONS_FACTORY","useUtc","findDateFormat","range","length","valueFunction","valuesArray","Array","i","setPrototypeOf","__proto__","p","hasOwnProperty","__assign","assign","t","s","n","arguments","call","apply","enUS","variables","SECONDS","MINUTES","TIME","DAY","MONTH","YEAR","DATE","SHORT_DATE","DASH","LONG_DASH","NBSP","monthNames","long","short","standalone","formatted","narrow","dayOfWeekNames","relativeTemplates","SECONDS_AGO","MINUTES_AGO","TODAY","YESTERDAY","BEFORE_YESTERDAY","absoluteTemplates","DATETIME","rangeTemplates","closedRange","START_DATE","END_DATE","START_DATETIME","END_DATETIME","middle","openedRange","ruRU","moment","_rollupMoment","_moment","MC_MOMENT_DATE_ADAPTER_OPTIONS","InjectionToken","providedIn","factory","MomentDateAdapter","_super","dateLocale","options","_this","invalidDateErrorText","setLocale","locale","configureTranslator","tslib_1.__extends","defineProperty","momentLocaleData","localeData","indexOf","formatterConfig","updateLocale","monthsShort","format","weekdaysShort","weekdays","firstDayOfWeek","longMonths","months","shortMonths","dates","createDate","longDaysOfWeek","shortDaysOfWeek","narrowDaysOfWeek","weekdaysMin","getYear","date","clone","year","getMonth","month","getDate","getHours","hours","getMinutes","minutes","getSeconds","seconds","getMilliseconds","milliseconds","getTime","valueOf","getDayOfWeek","day","getMonthNames","style","getDateNames","getDayOfWeekNames","getYearName","getFirstDayOfWeek","getNumDaysInMonth","daysInMonth","Error","result","createMoment","isValid","createDateTime","newDate","today","parse","value","parseFormat","findFormat","displayFormat","addCalendarYears","years","add","addCalendarMonths","addCalendarDays","days","toIso8601","deserialize","Date","isDateInstance","ISO_8601","obj","isMoment","invalid","relativeDate","template","newTemplate","now","momentWithLocale","totalSeconds","diff","totalMinutes","isToday","isSame","isYesterday","templateVariables","tslib_1.__assign","compileVariables","SECONDS_PASSED","MINUTES_PASSED","messageformat","compile","relativeShortDate","relativeLongDate","absoluteDate","params","datetime","absoluteShortDate","absoluteShortDateTime","absoluteLongDate","absoluteLongDateTime","openedRangeDate","startDate","endDate","startDateVariables","RANGE_TYPE","endDateVariables","openedRangeDateTime","console","log","rangeDate","sameMonth","SAME_MONTH","bothCurrentYear","CURRENT_YEAR","rangeDateTime","sameDay","SAME_DAY","rangeShortDate","rangeShortDateTime","rangeLongDate","rangeLongDateTime","rangeMiddleDateTime","_i","utc","compiledVariables","key","isCurrentYear","unit","MessageFormat","isNumeric","isNaN","parseFloat","isFinite","isoDate","test","trim","parseWithSpace","parseWithSlash","parseWithDash","parseWithDot","parts","split","firstPart","secondPart","canFirstBeMonth","canSecondByMonth","Injectable","String","decorators","Optional","Inject","MC_DATE_LOCALE","undefined","DateAdapter","MC_MOMENT_DATE_FORMATS","dateInput","display","monthYearLabel","dateA11yLabel","monthYearA11yLabel","useClass","deps"],"mappings":"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"}