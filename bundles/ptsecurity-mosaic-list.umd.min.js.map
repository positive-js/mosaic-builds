{"version":3,"sources":["../../../node_modules/tslib/tslib.es6.js","ng://@ptsecurity/mosaic/list/list-selection.component.ts","ng://@ptsecurity/mosaic/list/list.component.ts","ng://@ptsecurity/mosaic/list/list.module.ts"],"names":["extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__extends","__","this","constructor","prototype","create","__values","o","s","Symbol","iterator","m","i","call","length","next","value","done","TypeError","__read","n","r","e","ar","push","error","__spread","arguments","concat","McListOption","elementRef","changeDetector","ngZone","listSelection","group","hasFocus","onFocus","Subject","onBlur","_disabled","_selected","defineProperty","disabled","newValue","toBoolean","markForCheck","undefined","_showCheckbox","showCheckbox","coerceBooleanProperty","selectionModel","isSelected","setSelected","reportValueChange","ngOnInit","_this","wasSelected_1","Promise","resolve","then","selected","ngOnDestroy","removeOptionFromList","toggle","getLabel","text","nativeElement","textContent","select","deselect","getHeight","getClientRects","height","handleClick","$event","setSelectedOptionsByClick","hasModifierKey","focus","option","blur","onStable","asObservable","pipe","take","subscribe","run","getHostElement","Component","args","exportAs","selector","host","[attr.tabindex]","class","[class.mc-selected]","[class.mc-focused]","[class.mc-disabled]","(focus)","(blur)","(click)","template","encapsulation","ViewEncapsulation","None","preserveWhitespaces","changeDetection","ChangeDetectionStrategy","OnPush","ElementRef","ChangeDetectorRef","NgZone","McListSelection","decorators","type","Inject","forwardRef","McOptgroup","Optional","ContentChildren","McLine","ViewChild","static","Input","MC_SELECTION_LIST_VALUE_ACCESSOR","provide","NG_VALUE_ACCESSOR","useExisting","multi","source","McListSelectionMixinBase","mixinTabIndex","mixinDisabled","McListSelectionBase","element","changeDetectorRef","tabIndex","autoSelect","noUnselect","multiple","_super","horizontal","_tabIndex","selectionChange","EventEmitter","destroyed","onTouched","onChange","_","MultipleMode","CHECKBOX","KEYBOARD","multipleMode","parseInt","SelectionModel","merge","apply","options","map","ngAfterContentInit","keyManager","FocusKeyManager","withTypeAhead","withVerticalOrientation","withHorizontalOrientation","tabOut","takeUntil","setTimeout","tempValues","setOptionsFromValues","changed","event","_c","added","_d","_e","removed","_f","changes","startWith","resetOptions","updateTabIndex","updateScrollSize","complete","setFirstItemActive","hasFocusedOption","setActiveItem","selectAll","forEach","deselectAll","first","withScrollSize","Math","floor","shiftKey","ctrlKey","setSelectedOptions","canDeselectLast","item","emitChangeEvent","setSelectedOptionsByKey","selectedOptionState","fromIndex","previousActiveItemIndex","toIndex","activeItemIndex","_a","toArray","slice","filter","renderedOption","activeItem","writeValue","values","registerOnChange","fn","registerOnTouched","setDisabledState","isDisabled","getSelectedOptionValues","toggleFocusedOption","focusedIndex","isValidIndex","focusedOption","listOption","optionIndex","getOptionIndex","setPreviousItemActive","setNextItemActive","onKeyDown","keyCode","SPACE","ENTER","TAB","DOWN_ARROW","UP_ARROW","HOME","END","setLastItemActive","PAGE_UP","setPreviousPageItemActive","PAGE_DOWN","setNextPageItemActive","preventDefault","emit","McListSelectionChange","dropSubscriptions","listenToOptionsFocus","optionFocusSubscription","unsubscribe","optionBlurSubscription","optionFocusChanges","index","indexOf","updateActiveItem","optionBlurChanges","some","getOptionByValue","find","Boolean","inputs","(keydown)","(window:resize)","providers","Attribute","descendants","Output","McList","McListBase","McListItem","_element","McLineSetter","lines","handleFocus","classList","add","handleBlur","remove","McListItemBase","McListModule","NgModule","imports","CommonModule","A11yModule","McPseudoCheckboxModule","McLineModule","McOptionModule","exports","declarations"],"mappings":"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","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n","/* tslint:disable:no-empty */\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { SelectionModel } from '@angular/cdk/collections';\nimport {\n    AfterContentInit,\n    Attribute,\n    ChangeDetectionStrategy,\n    Component,\n    ContentChildren,\n    ElementRef,\n    EventEmitter,\n    forwardRef,\n    Input,\n    Output,\n    QueryList,\n    ViewEncapsulation,\n    ChangeDetectorRef,\n    Inject,\n    OnDestroy,\n    OnInit,\n    ViewChild,\n    NgZone,\n    Optional\n} from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { FocusKeyManager, IFocusableOption } from '@ptsecurity/cdk/a11y';\nimport {\n    DOWN_ARROW,\n    END,\n    ENTER,\n    hasModifierKey,\n    HOME,\n    PAGE_DOWN,\n    PAGE_UP,\n    SPACE,\n    TAB,\n    UP_ARROW\n} from '@ptsecurity/cdk/keycodes';\nimport {\n    McLine,\n    CanDisable,\n    mixinDisabled,\n    toBoolean,\n    CanDisableCtor,\n    HasTabIndexCtor,\n    mixinTabIndex,\n    HasTabIndex,\n    MultipleMode,\n    McOptgroup\n} from '@ptsecurity/mosaic/core';\nimport { merge, Observable, Subject, Subscription } from 'rxjs';\nimport { startWith, take, takeUntil } from 'rxjs/operators';\n\n\n// tslint:disable-next-line:naming-convention\nexport interface McOptionEvent {\n    option: McListOption;\n}\n\n/**\n * Component for list-options of selection-list. Each list-option can automatically\n * generate a checkbox and can put current item into the selectionModel of selection-list\n * if the current item is selected.\n */\n@Component({\n    exportAs: 'mcListOption',\n    selector: 'mc-list-option',\n    host: {\n        '[attr.tabindex]': 'tabIndex',\n\n        class: 'mc-list-option mc-no-select',\n        '[class.mc-selected]': 'selected',\n        '[class.mc-focused]': 'hasFocus',\n        '[class.mc-disabled]': 'disabled',\n\n        '(focus)': 'focus()',\n        '(blur)': 'blur()',\n        '(click)': 'handleClick($event)'\n    },\n    templateUrl: 'list-option.html',\n    encapsulation: ViewEncapsulation.None,\n    preserveWhitespaces: false,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class McListOption implements OnDestroy, OnInit, IFocusableOption {\n    hasFocus: boolean = false;\n\n    readonly onFocus = new Subject<McOptionEvent>();\n\n    readonly onBlur = new Subject<McOptionEvent>();\n\n    @ContentChildren(McLine) lines: QueryList<McLine>;\n\n    @ViewChild('text', { static: false }) text: ElementRef;\n\n    // Whether the label should appear before or after the checkbox. Defaults to 'after'\n    @Input() checkboxPosition: 'before' | 'after';\n\n    @Input() value: any;\n\n    @Input()\n    get disabled() {\n        return (this.listSelection && this.listSelection.disabled) || (this.group && this.group.disabled) ||\n            this._disabled;\n    }\n\n    set disabled(value: any) {\n        const newValue = toBoolean(value);\n\n        if (newValue !== this._disabled) {\n            this._disabled = newValue;\n            this.changeDetector.markForCheck();\n        }\n    }\n\n    private _disabled = false;\n\n    @Input()\n    get showCheckbox() {\n        return this._showCheckbox !== undefined ? this._showCheckbox : this.listSelection.showCheckbox;\n    }\n\n    set showCheckbox(value: any) {\n        this._showCheckbox = coerceBooleanProperty(value);\n    }\n\n    private _showCheckbox: boolean;\n\n    @Input()\n    get selected(): boolean {\n        return this.listSelection.selectionModel && this.listSelection.selectionModel.isSelected(this) || false;\n    }\n\n    set selected(value: boolean) {\n        const isSelected = toBoolean(value);\n\n        if (isSelected !== this._selected) {\n            this.setSelected(isSelected);\n\n            this.listSelection.reportValueChange();\n        }\n    }\n\n    private _selected = false;\n\n    get tabIndex(): any {\n        return this.disabled ? null : -1;\n    }\n\n    constructor(\n        private elementRef: ElementRef<HTMLElement>,\n        private changeDetector: ChangeDetectorRef,\n        private ngZone: NgZone,\n        @Inject(forwardRef(() => McListSelection)) public listSelection: McListSelection,\n        @Optional() readonly group: McOptgroup\n    ) {}\n\n    ngOnInit() {\n        if (this._selected) {\n            // List options that are selected at initialization can't be reported properly to the form\n            // control. This is because it takes some time until the selection-list knows about all\n            // available options. Also it can happen that the ControlValueAccessor has an initial value\n            // that should be used instead. Deferring the value change report to the next tick ensures\n            // that the form control value is not being overwritten.\n            const wasSelected = this._selected;\n\n            Promise.resolve().then(() => {\n                if (this._selected || wasSelected) {\n                    this.selected = true;\n                    this.changeDetector.markForCheck();\n                }\n            });\n        }\n    }\n\n    ngOnDestroy(): void {\n        if (this.selected) {\n            // We have to delay this until the next tick in order\n            // to avoid changed after checked errors.\n            Promise.resolve().then(() => this.selected = false);\n        }\n\n        this.listSelection.removeOptionFromList(this);\n    }\n\n    toggle(): void {\n        this.selected = !this.selected;\n    }\n\n    getLabel() {\n        return this.text ? this.text.nativeElement.textContent : '';\n    }\n\n    setSelected(selected: boolean) {\n        if (this._selected === selected || !this.listSelection.selectionModel) { return; }\n\n        this._selected = selected;\n\n        if (selected) {\n            this.listSelection.selectionModel.select(this);\n        } else {\n            this.listSelection.selectionModel.deselect(this);\n        }\n\n        this.changeDetector.markForCheck();\n    }\n\n    getHeight(): number {\n        return this.elementRef.nativeElement.getClientRects()[0].height;\n    }\n\n    handleClick($event) {\n        if (this.disabled) { return; }\n\n        this.listSelection.setSelectedOptionsByClick(\n            this, hasModifierKey($event, 'shiftKey'), hasModifierKey($event, 'ctrlKey')\n        );\n    }\n\n    focus() {\n        if (!this.hasFocus) {\n            this.elementRef.nativeElement.focus();\n\n            this.onFocus.next({ option: this });\n\n            Promise.resolve().then(() => {\n                this.hasFocus = true;\n\n                this.changeDetector.markForCheck();\n            });\n        }\n    }\n\n    blur(): void {\n        // When animations are enabled, Angular may end up removing the option from the DOM a little\n        // earlier than usual, causing it to be blurred and throwing off the logic in the list\n        // that moves focus not the next item. To work around the issue, we defer marking the option\n        // as not focused until the next time the zone stabilizes.\n        this.ngZone.onStable\n            .asObservable()\n            .pipe(take(1))\n            .subscribe(() => {\n                this.ngZone.run(() => {\n                    this.hasFocus = false;\n\n                    this.onBlur.next({ option: this });\n                });\n            });\n    }\n\n    getHostElement(): HTMLElement {\n        return this.elementRef.nativeElement;\n    }\n}\n\n\nexport const MC_SELECTION_LIST_VALUE_ACCESSOR: any = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => McListSelection),\n    multi: true\n};\n\nexport class McListSelectionChange {\n    constructor(public source: McListSelection, public option: McListOption) {}\n}\n\n\nexport class McListSelectionBase {}\n\n// tslint:disable-next-line:naming-convention\nexport const McListSelectionMixinBase: CanDisableCtor & HasTabIndexCtor & typeof McListSelectionBase\n    = mixinTabIndex(mixinDisabled(McListSelectionBase));\n\n@Component({\n    exportAs: 'mcListSelection',\n    selector: 'mc-list-selection',\n    template: '<ng-content></ng-content>',\n    styleUrls: ['./list.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n    inputs: ['disabled'],\n    host: {\n        '[attr.tabindex]': 'tabIndex',\n\n        class: 'mc-list-selection',\n\n        '(focus)': 'focus()',\n        '(blur)': 'blur()',\n        '(keydown)': 'onKeyDown($event)',\n        '(window:resize)': 'updateScrollSize()'\n    },\n    providers: [MC_SELECTION_LIST_VALUE_ACCESSOR],\n    preserveWhitespaces: false\n})\nexport class McListSelection extends McListSelectionMixinBase implements CanDisable, HasTabIndex, AfterContentInit,\n    ControlValueAccessor {\n\n    keyManager: FocusKeyManager<McListOption>;\n\n    @ContentChildren(McListOption, { descendants: true }) options: QueryList<McListOption>;\n\n    autoSelect: boolean;\n    noUnselect: boolean;\n\n    multipleMode: MultipleMode | null;\n\n    get multiple(): boolean {\n        return !!this.multipleMode;\n    }\n\n    @Input() horizontal: boolean = false;\n\n    @Input()\n    get tabIndex(): any {\n        return this._tabIndex;\n    }\n\n    set tabIndex(value: any) {\n        this._tabIndex = value;\n    }\n\n    private _tabIndex = 0;\n\n    get showCheckbox(): boolean {\n        return this.multipleMode === MultipleMode.CHECKBOX;\n    }\n\n    // Emits a change event whenever the selected state of an option changes.\n    @Output() readonly selectionChange: EventEmitter<McListSelectionChange> = new EventEmitter<McListSelectionChange>();\n\n    selectionModel: SelectionModel<McListOption>;\n\n    get optionFocusChanges(): Observable<McOptionEvent> {\n        return merge(...this.options.map((option) => option.onFocus));\n    }\n\n    get optionBlurChanges(): Observable<McOptionEvent> {\n        return merge(...this.options.map((option) => option.onBlur));\n    }\n\n    // Used for storing the values that were assigned before the options were initialized.\n    private tempValues: string[] | null;\n\n    /** Emits whenever the component is destroyed. */\n    private readonly destroyed = new Subject<void>();\n\n    private optionFocusSubscription: Subscription | null;\n\n    private optionBlurSubscription: Subscription | null;\n\n    constructor(\n        private element: ElementRef,\n        private changeDetectorRef: ChangeDetectorRef,\n        @Attribute('tabindex') tabIndex: string,\n        @Attribute('auto-select') autoSelect: string,\n        @Attribute('no-unselect') noUnselect: string,\n        @Attribute('multiple') multiple: string\n    ) {\n        super();\n\n        this.autoSelect = autoSelect === null ? true : toBoolean(autoSelect);\n        this.noUnselect = noUnselect === null ? true : toBoolean(noUnselect);\n\n        if (multiple === MultipleMode.CHECKBOX || multiple === MultipleMode.KEYBOARD) {\n            this.multipleMode = multiple;\n        } else if (multiple !== null) {\n            this.multipleMode = MultipleMode.CHECKBOX;\n        }\n\n        if (this.multipleMode === MultipleMode.CHECKBOX) {\n            this.autoSelect = false;\n            this.noUnselect = false;\n        }\n\n        this._tabIndex = parseInt(tabIndex) || 0;\n\n        this.selectionModel = new SelectionModel<McListOption>(this.multiple);\n    }\n\n    ngAfterContentInit(): void {\n        this.horizontal = toBoolean(this.horizontal);\n\n        this.keyManager = new FocusKeyManager<McListOption>(this.options)\n            .withTypeAhead()\n            .withVerticalOrientation(!this.horizontal)\n            .withHorizontalOrientation(this.horizontal ? 'ltr' : null);\n\n        this.keyManager.tabOut\n            .pipe(takeUntil(this.destroyed))\n            .subscribe(() => {\n                this._tabIndex = -1;\n\n                setTimeout(() => {\n                    this._tabIndex = 0;\n                    this.changeDetectorRef.markForCheck();\n                });\n            });\n\n        if (this.tempValues) {\n            this.setOptionsFromValues(this.tempValues);\n            this.tempValues = null;\n        }\n\n        this.selectionModel.changed\n            .pipe(takeUntil(this.destroyed))\n            .subscribe((event) => {\n                for (const item of event.added) { item.selected = true; }\n\n                for (const item of event.removed) { item.selected = false; }\n            });\n\n        this.options.changes\n            .pipe(startWith(null), takeUntil(this.destroyed))\n            .subscribe(() => {\n                this.resetOptions();\n\n                // Check to see if we need to update our tab index\n                this.updateTabIndex();\n            });\n\n        this.updateScrollSize();\n    }\n\n    ngOnDestroy() {\n        this.destroyed.next();\n\n        this.destroyed.complete();\n    }\n\n    focus(): void {\n        if (this.options.length === 0) { return; }\n\n        this.keyManager.setFirstItemActive();\n    }\n\n    blur() {\n        if (!this.hasFocusedOption()) {\n            this.keyManager.setActiveItem(-1);\n        }\n\n        this.onTouched();\n        this.changeDetectorRef.markForCheck();\n    }\n\n    selectAll() {\n        this.options.forEach((option) => option.setSelected(true));\n\n        this.reportValueChange();\n    }\n\n    deselectAll() {\n        this.options.forEach((option) => option.setSelected(false));\n\n        this.reportValueChange();\n    }\n\n    updateScrollSize(): void {\n        if (this.horizontal || !this.options.first) { return; }\n\n        this.keyManager.withScrollSize(Math.floor(this.getHeight() / this.options.first.getHeight()));\n    }\n\n    setSelectedOptionsByClick(option: McListOption, shiftKey: boolean, ctrlKey: boolean): void {\n        if (shiftKey && this.multiple) {\n            this.setSelectedOptions(option);\n        } else if (ctrlKey) {\n            if (!this.canDeselectLast(option)) { return; }\n\n            this.selectionModel.toggle(option);\n        } else {\n            if (this.autoSelect) {\n                this.options.forEach((item) => item.setSelected(false));\n                option.setSelected(true);\n            }\n        }\n\n        this.emitChangeEvent(option);\n        this.reportValueChange();\n    }\n\n    setSelectedOptionsByKey(option: McListOption, shiftKey: boolean, ctrlKey: boolean): void {\n        if (shiftKey && this.multiple) {\n            this.setSelectedOptions(option);\n        } else if (ctrlKey) {\n            if (!this.canDeselectLast(option)) { return; }\n        } else {\n            if (this.autoSelect) {\n                this.options.forEach((item) => item.setSelected(false));\n                option.setSelected(true);\n            }\n        }\n\n        this.emitChangeEvent(option);\n        this.reportValueChange();\n    }\n\n    setSelectedOptions(option: McListOption): void {\n        const selectedOptionState = option.selected;\n\n        let fromIndex = this.keyManager.previousActiveItemIndex;\n        let toIndex = this.keyManager.previousActiveItemIndex = this.keyManager.activeItemIndex;\n\n        if (toIndex === fromIndex) { return; }\n\n        if (fromIndex > toIndex) {\n            [fromIndex, toIndex] = [toIndex, fromIndex];\n        }\n\n        this.options\n            .toArray()\n            .slice(fromIndex, toIndex + 1)\n            .filter((item) => !item.disabled)\n            .forEach((renderedOption) => {\n                const isLastRenderedOption = renderedOption === this.keyManager.activeItem;\n\n                if (isLastRenderedOption && renderedOption.selected && this.noUnselect) { return; }\n\n                renderedOption.setSelected(!selectedOptionState);\n            });\n    }\n\n    // Implemented as part of ControlValueAccessor.\n    writeValue(values: string[]): void {\n        if (this.options) {\n            this.setOptionsFromValues(values || []);\n        } else {\n            this.tempValues = values;\n        }\n    }\n\n    // Implemented as part of ControlValueAccessor.\n    registerOnChange(fn: (value: any) => void): void {\n        this.onChange = fn;\n    }\n\n    // Implemented as part of ControlValueAccessor.\n    registerOnTouched(fn: () => void): void {\n        this.onTouched = fn;\n    }\n\n    // Implemented as a part of ControlValueAccessor.\n    setDisabledState(isDisabled: boolean): void {\n        if (this.options) {\n            this.options.forEach((option) => option.disabled = isDisabled);\n        }\n    }\n\n    getSelectedOptionValues(): string[] {\n        return this.options.filter((option) => option.selected).map((option) => option.value);\n    }\n\n    // Toggles the selected state of the currently focused option.\n    toggleFocusedOption(): void {\n        const focusedIndex = this.keyManager.activeItemIndex;\n\n        if (focusedIndex != null && this.isValidIndex(focusedIndex)) {\n            const focusedOption: McListOption = this.options.toArray()[focusedIndex];\n\n            if (focusedOption && this.canDeselectLast(focusedOption)) {\n                focusedOption.toggle();\n\n                // Emit a change event because the focused option changed its state through user interaction.\n                this.emitChangeEvent(focusedOption);\n            }\n        }\n    }\n\n    canDeselectLast(listOption: McListOption): boolean {\n        return !(this.noUnselect && this.selectionModel.selected.length === 1 && listOption.selected);\n    }\n\n    getHeight(): number {\n        return this.element.nativeElement.getClientRects()[0].height;\n    }\n\n    // View to model callback that should be called if the list or its options lost focus.\n    // tslint:disable-next-line:no-empty\n    onTouched: () => void = () => {};\n\n    // Removes an option from the selection list and updates the active item.\n    removeOptionFromList(option: McListOption) {\n        if (option.hasFocus) {\n            const optionIndex = this.getOptionIndex(option);\n\n            // Check whether the option is the last item\n            if (optionIndex > 0) {\n                this.keyManager.setPreviousItemActive();\n            } else if (optionIndex === 0 && this.options.length > 1) {\n                this.keyManager.setNextItemActive();\n            }\n        }\n    }\n\n    onKeyDown(event: KeyboardEvent) {\n        // tslint:disable-next-line: deprecation\n        const keyCode = event.keyCode;\n\n        switch (keyCode) {\n            case SPACE:\n            case ENTER:\n                this.toggleFocusedOption();\n\n                break;\n\n            case TAB:\n                this.keyManager.tabOut.next();\n\n                return;\n\n            case DOWN_ARROW:\n                this.keyManager.setNextItemActive();\n\n                break;\n            case UP_ARROW:\n                this.keyManager.setPreviousItemActive();\n\n                break;\n            case HOME:\n                this.keyManager.setFirstItemActive();\n\n                break;\n            case END:\n                this.keyManager.setLastItemActive();\n\n                break;\n            case PAGE_UP:\n                this.keyManager.setPreviousPageItemActive();\n\n                break;\n            case PAGE_DOWN:\n                this.keyManager.setNextPageItemActive();\n\n                break;\n            default:\n                return;\n        }\n\n        event.preventDefault();\n\n        this.setSelectedOptionsByKey(\n            this.keyManager.activeItem as McListOption,\n            hasModifierKey(event, 'shiftKey'),\n            hasModifierKey(event, 'ctrlKey')\n        );\n    }\n\n    // Reports a value change to the ControlValueAccessor\n    reportValueChange() {\n        if (this.options) {\n            this.onChange(this.getSelectedOptionValues());\n        }\n    }\n\n    // Emits a change event if the selected state of an option changed.\n    emitChangeEvent(option: McListOption) {\n        this.selectionChange.emit(new McListSelectionChange(this, option));\n    }\n\n    protected updateTabIndex(): void {\n        this._tabIndex = this.options.length === 0 ? -1 : 0;\n    }\n\n    private resetOptions() {\n        this.dropSubscriptions();\n        this.listenToOptionsFocus();\n    }\n\n    private dropSubscriptions() {\n        if (this.optionFocusSubscription) {\n            this.optionFocusSubscription.unsubscribe();\n            this.optionFocusSubscription = null;\n        }\n\n        if (this.optionBlurSubscription) {\n            this.optionBlurSubscription.unsubscribe();\n            this.optionBlurSubscription = null;\n        }\n    }\n\n    private listenToOptionsFocus(): void {\n        this.optionFocusSubscription = this.optionFocusChanges\n            .subscribe((event) => {\n                const index: number = this.options.toArray().indexOf(event.option);\n\n                if (this.isValidIndex(index)) {\n                    this.keyManager.updateActiveItem(index);\n                }\n            });\n\n        this.optionBlurSubscription = this.optionBlurChanges\n            .subscribe(() => this.blur());\n    }\n\n    /** Checks whether any of the options is focused. */\n    private hasFocusedOption() {\n        return this.options.some((option) => option.hasFocus);\n    }\n\n    // Returns the option with the specified value.\n    private getOptionByValue(value: string): McListOption | undefined {\n        return this.options.find((option) => option.value === value);\n    }\n\n    // Sets the selected options based on the specified values.\n    private setOptionsFromValues(values: string[]) {\n        this.options.forEach((option) => option.setSelected(false));\n\n        values\n            .map((value) => this.getOptionByValue(value))\n            .filter(Boolean)\n            .forEach((option) => option!.setSelected(true));\n    }\n\n    /**\n     * Utility to ensure all indexes are valid.\n     * @param index The index to be checked.\n     * @returns True if the index is valid for our list of options.\n     */\n    private isValidIndex(index: number): boolean {\n        return index >= 0 && index < this.options.length;\n    }\n\n    // Returns the index of the specified list option.\n    private getOptionIndex(option: McListOption): number {\n        return this.options.toArray().indexOf(option);\n    }\n\n    // View to model callback that should be called whenever the selected options change.\n    private onChange: (value: any) => void = (_: any) => {};\n}\n","// todo пока не делаем, перенесено из материала, но у нас в доках таких простых списков нет.\nimport {\n    AfterContentInit, ChangeDetectionStrategy, Component, ContentChildren, ElementRef, QueryList,\n    ViewEncapsulation\n} from '@angular/core';\nimport { McLine, McLineSetter } from '@ptsecurity/mosaic/core';\n\n\nexport class McListBase {}\n\n@Component({\n    selector: 'mc-list',\n    host: { class: 'mc-list' },\n    template: '<ng-content></ng-content>',\n    styleUrls: ['./list.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None\n})\nexport class McList extends McListBase {}\n\n\n// Boilerplate for applying mixins to McListItem.\nexport class McListItemBase {}\n\n@Component({\n    selector: 'mc-list-item, a[mc-list-item]',\n    host: {\n        class: 'mc-list-item',\n        '(focus)': 'handleFocus()',\n        '(blur)': 'handleBlur()'\n    },\n    templateUrl: './list-item.html',\n    encapsulation: ViewEncapsulation.None,\n    preserveWhitespaces: false,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class McListItem extends McListItemBase implements AfterContentInit {\n    @ContentChildren(McLine) lines: QueryList<McLine>;\n\n\n    constructor(private _element: ElementRef) {\n        super();\n    }\n\n    ngAfterContentInit() {\n        // tslint:disable-next-line:no-unused-expression\n        new McLineSetter(this.lines, this._element);\n    }\n\n    handleFocus() {\n        this._element.nativeElement.classList.add('mc-focused');\n    }\n\n    handleBlur() {\n        this._element.nativeElement.classList.remove('mc-focused');\n    }\n\n    getHostElement(): HTMLElement {\n        return this._element.nativeElement;\n    }\n}\n","import { A11yModule } from '@angular/cdk/a11y';\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { McLineModule, McOptionModule, McPseudoCheckboxModule } from '@ptsecurity/mosaic/core';\n\nimport { McListSelection, McListOption } from './list-selection.component';\nimport { McList, McListItem } from './list.component';\n\n\n@NgModule({\n    imports: [\n        CommonModule,\n        A11yModule,\n        McPseudoCheckboxModule,\n        McLineModule,\n        McOptionModule\n    ],\n    exports: [\n        McList,\n        McListSelection,\n        McListItem,\n        McListOption,\n        McOptionModule\n    ],\n    declarations: [\n        McList,\n        McListSelection,\n        McListItem,\n        McListOption\n    ]\n})\nexport class McListModule {}\n"]}