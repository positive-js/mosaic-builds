{"version":3,"file":"mosaic-tags.umd.js","sources":["../../src/lib/tags/tag.module.ts","../../src/lib/tags/tag-input.ts","../../src/lib/tags/tag-list.component.ts","../../src/lib/tags/tag.component.ts","../../src/lib/tags/tag-default-options.ts","../../node_modules/tslib/tslib.es6.js"],"sourcesContent":["import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { ENTER } from '@ptsecurity/cdk/keycodes';\nimport { PlatformModule } from '@ptsecurity/cdk/platform';\n\nimport { MC_TAGS_DEFAULT_OPTIONS, McTagsDefaultOptions } from './tag-default-options';\nimport { McTagInput } from './tag-input';\nimport { McTagList } from './tag-list.component';\nimport { McTag, McTagAvatar, McTagRemove, McTagTrailingIcon } from './tag.component';\n\n\n@NgModule({\n    imports: [CommonModule, PlatformModule],\n    exports: [\n        McTagList,\n        McTag,\n        McTagInput,\n        McTagTrailingIcon,\n        McTagAvatar,\n        McTagRemove\n    ],\n    declarations: [\n        McTagList,\n        McTag,\n        McTagInput,\n        McTagTrailingIcon,\n        McTagAvatar,\n        McTagRemove\n    ],\n    providers: [{\n        provide: MC_TAGS_DEFAULT_OPTIONS,\n        // tslint:disable-next-line: no-object-literal-type-assertion\n        useValue: { separatorKeyCodes: [ENTER] } as McTagsDefaultOptions\n    }]\n})\nexport class McTagsModule {}\n","import { Directive, ElementRef, EventEmitter, Inject, Input, OnChanges, Output } from '@angular/core';\nimport { coerceBooleanProperty } from '@ptsecurity/cdk/coercion';\nimport { hasModifierKey } from '@ptsecurity/cdk/keycodes';\n\nimport { MC_TAGS_DEFAULT_OPTIONS, McTagsDefaultOptions } from './tag-default-options';\nimport { McTagList } from './tag-list.component';\nimport { McTagTextControl } from './tag-text-control';\n\n\n/** Represents an input event on a `mcTagInput`. */\n// tslint:disable-next-line: naming-convention\nexport interface McTagInputEvent {\n    /** The native `<input>` element that the event is being fired for. */\n    input: HTMLInputElement;\n\n    /** The value of the input. */\n    value: string;\n}\n\n// Increasing integer for generating unique ids.\nlet nextUniqueId = 0;\n\n/**\n * Directive that adds tag-specific behaviors to an input element inside `<mc-form-field>`.\n * May be placed inside or outside of an `<mc-tag-list>`.\n */\n@Directive({\n    selector: 'input[mcTagInputFor]',\n    exportAs: 'mcTagInput, mcTagInputFor',\n    host: {\n        class: 'mc-tag-input mc-input-element',\n        '[id]': 'id',\n        '[attr.disabled]': 'disabled || null',\n        '[attr.placeholder]': 'placeholder || null',\n        '[attr.aria-invalid]': '_tagList && _tagList.ngControl ? _tagList.ngControl.invalid : null',\n        '(keydown)': 'keydown($event)',\n        '(blur)': 'blur()',\n        '(focus)': 'onFocus()',\n        '(input)': 'onInput()'\n    }\n})\nexport class McTagInput implements McTagTextControl, OnChanges {\n    /** Whether the control is focused. */\n    focused: boolean = false;\n\n    /**\n     * The list of key codes that will trigger a tagEnd event.\n     *\n     * Defaults to `[ENTER]`.\n     */\n    @Input('mcTagInputSeparatorKeyCodes')\n    separatorKeyCodes: number[] | Set<number> = this.defaultOptions.separatorKeyCodes;\n\n    /** Emitted when a tag is to be added. */\n    @Output('mcTagInputTokenEnd')\n    tagEnd: EventEmitter<McTagInputEvent> = new EventEmitter<McTagInputEvent>();\n\n    /** The input's placeholder text. */\n    @Input() placeholder: string = '';\n\n    /** Unique id for the input. */\n    @Input() id: string = `mc-tag-list-input-${nextUniqueId++}`;\n\n    /** Register input for tag list */\n    @Input('mcTagInputFor')\n    set tagList(value: McTagList) {\n        if (value) {\n            this._tagList = value;\n            this._tagList.registerInput(this);\n        }\n    }\n\n    // tslint:disable-next-line: naming-convention\n    _tagList: McTagList;\n\n    /**\n     * Whether or not the tagEnd event will be emitted when the input is blurred.\n     */\n    @Input('mcTagInputAddOnBlur')\n    get addOnBlur(): boolean {\n        return this._addOnBlur;\n    }\n\n    set addOnBlur(value: boolean) {\n        this._addOnBlur = coerceBooleanProperty(value);\n    }\n\n    private _addOnBlur: boolean = false;\n\n    /** Whether the input is disabled. */\n    @Input()\n    get disabled(): boolean {\n        return this._disabled || (this._tagList && this._tagList.disabled);\n    }\n\n    set disabled(value: boolean) {\n        this._disabled = coerceBooleanProperty(value);\n    }\n\n    private _disabled: boolean = false;\n\n    /** Whether the input is empty. */\n    get empty(): boolean {\n        return !this.inputElement.value;\n    }\n\n    /** The native input element to which this directive is attached. */\n    private inputElement: HTMLInputElement;\n\n    constructor(\n        private elementRef: ElementRef<HTMLInputElement>,\n        @Inject(MC_TAGS_DEFAULT_OPTIONS) private defaultOptions: McTagsDefaultOptions\n    ) {\n        // tslint:disable-next-line: no-unnecessary-type-assertion\n        this.inputElement = this.elementRef.nativeElement as HTMLInputElement;\n    }\n\n    ngOnChanges() {\n        this._tagList.stateChanges.next();\n    }\n\n    /** Utility method to make host definition/tests more clear. */\n    keydown(event?: KeyboardEvent) {\n        this.emittagEnd(event);\n    }\n\n    /** Checks to see if the blur should emit the (tagEnd) event. */\n    blur() {\n        if (this.addOnBlur) {\n            this.emittagEnd();\n        }\n\n        this.focused = false;\n        // Blur the tag list if it is not focused\n        if (!this._tagList.focused) {\n            this._tagList.blur();\n        }\n\n        this._tagList.stateChanges.next();\n    }\n\n    /** Checks to see if the (tagEnd) event needs to be emitted. */\n    emittagEnd(event?: KeyboardEvent) {\n        if (!this.inputElement.value && !!event) {\n            this._tagList.keydown(event);\n        }\n\n        if (!event || this.isSeparatorKey(event)) {\n            this.tagEnd.emit({ input: this.inputElement, value: this.inputElement.value });\n\n            if (event) {\n                event.preventDefault();\n            }\n        }\n    }\n\n    onInput() {\n        // Let tag list know whenever the value changes.\n        this._tagList.stateChanges.next();\n    }\n\n    onFocus() {\n        this.focused = true;\n        this._tagList.stateChanges.next();\n    }\n\n    /** Focuses the input. */\n    focus(): void {\n        this.inputElement.focus();\n    }\n\n    /** Checks whether a keycode is one of the configured separators. */\n    private isSeparatorKey(event: KeyboardEvent) {\n        if (hasModifierKey(event)) { return false; }\n\n        const separators = this.separatorKeyCodes;\n        // tslint:disable-next-line: deprecation\n        const keyCode = event.keyCode;\n\n        return Array.isArray(separators) ? separators.indexOf(keyCode) > -1 : separators.has(keyCode);\n    }\n}\n","import {\n    AfterContentInit,\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    ContentChildren,\n    DoCheck,\n    ElementRef,\n    EventEmitter,\n    Input,\n    OnDestroy,\n    OnInit,\n    Optional,\n    Output,\n    QueryList,\n    Self,\n    ViewEncapsulation\n} from '@angular/core';\nimport { ControlValueAccessor, FormGroupDirective, NgControl, NgForm } from '@angular/forms';\nimport { FocusKeyManager } from '@ptsecurity/cdk/a11y';\nimport { Directionality } from '@ptsecurity/cdk/bidi';\nimport { coerceBooleanProperty } from '@ptsecurity/cdk/coercion';\nimport { SelectionModel } from '@ptsecurity/cdk/collections';\nimport { BACKSPACE, END, HOME } from '@ptsecurity/cdk/keycodes';\nimport {\n    CanUpdateErrorState,\n    CanUpdateErrorStateCtor,\n    ErrorStateMatcher,\n    mixinErrorState\n} from '@ptsecurity/mosaic/core';\nimport { McFormFieldControl } from '@ptsecurity/mosaic/form-field';\nimport { merge, Observable, Subject, Subscription } from 'rxjs';\nimport { startWith, takeUntil } from 'rxjs/operators';\n\nimport { McTagTextControl } from './tag-text-control';\nimport { McTag, McTagEvent, McTagSelectionChange } from './tag.component';\n\n\nexport class McTagListBase {\n    constructor(\n        public defaultErrorStateMatcher: ErrorStateMatcher,\n        public parentForm: NgForm,\n        public parentFormGroup: FormGroupDirective,\n        public ngControl: NgControl\n    ) {\n    }\n}\n\n// tslint:disable-next-line:naming-convention\nexport const _McTagListMixinBase: CanUpdateErrorStateCtor & typeof McTagListBase = mixinErrorState(McTagListBase);\n\n\n// Increasing integer for generating unique ids for tag-list components.\nlet nextUniqueId = 0;\n\n/** Change event object that is emitted when the tag list value has changed. */\nexport class McTagListChange {\n    constructor(public source: McTagList, public value: any) {}\n}\n\n\n@Component({\n    selector: 'mc-tag-list',\n    exportAs: 'mcTagList',\n    template: '<ng-content></ng-content>',\n    host: {\n        class: 'mc-tag-list',\n        '[attr.tabindex]': 'disabled ? null : _tabIndex',\n        '[class.mc-disabled]': 'disabled',\n        '[class.mc-invalid]': 'errorState',\n        '[class.mc-required]': 'required',\n        '(focus)': 'focus()',\n        '(blur)': 'blur()',\n        '(keydown)': 'keydown($event)',\n        '[id]': 'uid'\n    },\n    providers: [{ provide: McFormFieldControl, useExisting: McTagList }],\n    styleUrls: ['tag-list.css'],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class McTagList extends _McTagListMixinBase implements McFormFieldControl<any>,\n    ControlValueAccessor, AfterContentInit, DoCheck, OnInit, OnDestroy, CanUpdateErrorState {\n\n    readonly controlType: string = 'mc-tag-list';\n\n    /** Combined stream of all of the child tags' selection change events. */\n    get tagSelectionChanges(): Observable<McTagSelectionChange> {\n        return merge(...this.tags.map((tag) => tag.selectionChange));\n    }\n\n    /** Combined stream of all of the child tags' focus change events. */\n    get tagFocusChanges(): Observable<McTagEvent> {\n        return merge(...this.tags.map((tag) => tag.onFocus));\n    }\n\n    /** Combined stream of all of the child tags' blur change events. */\n    get tagBlurChanges(): Observable<McTagEvent> {\n        return merge(...this.tags.map((tag) => tag.onBlur));\n    }\n\n    /** Combined stream of all of the child tags' remove change events. */\n    get tagRemoveChanges(): Observable<McTagEvent> {\n        return merge(...this.tags.map((tag) => tag.destroyed));\n    }\n\n    /** The array of selected tags inside tag list. */\n    get selected(): McTag[] | McTag {\n        return this.multiple ? this.selectionModel.selected : this.selectionModel.selected[0];\n    }\n\n    /** Whether the user should be allowed to select multiple tags. */\n    @Input()\n    get multiple(): boolean {\n        return this._multiple;\n    }\n\n    set multiple(value: boolean) {\n        this._multiple = coerceBooleanProperty(value);\n    }\n\n    /**\n     * A function to compare the option values with the selected values. The first argument\n     * is a value from an option. The second is a value from the selection. A boolean\n     * should be returned.\n     */\n    @Input()\n    get compareWith(): (o1: any, o2: any) => boolean {\n        return this._compareWith;\n    }\n\n    set compareWith(fn: (o1: any, o2: any) => boolean) {\n        this._compareWith = fn;\n\n        if (this.selectionModel) {\n            // A different comparator means the selection could change.\n            this.initializeSelection();\n        }\n    }\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    @Input()\n    get value(): any {\n        return this._value;\n    }\n\n    set value(value: any) {\n        this.writeValue(value);\n        this._value = value;\n    }\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    get id(): string {\n        return this.tagInput ? this.tagInput.id : this.uid;\n    }\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    @Input()\n    get required(): boolean {\n        return this._required;\n    }\n\n    set required(value: boolean) {\n        this._required = coerceBooleanProperty(value);\n        this.stateChanges.next();\n    }\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    @Input()\n    get placeholder(): string {\n        return this.tagInput ? this.tagInput.placeholder : this._placeholder;\n    }\n\n    set placeholder(value: string) {\n        this._placeholder = value;\n        this.stateChanges.next();\n    }\n\n    /** Whether any tags or the mcTagInput inside of this tag-list has focus. */\n    get focused(): boolean {\n        return (this.tagInput && this.tagInput.focused) || this.hasFocusedTag();\n    }\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    get empty(): boolean {\n        return (!this.tagInput || this.tagInput.empty) && this.tags.length === 0;\n    }\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    get shouldLabelFloat(): boolean {\n        return !this.empty || this.focused;\n    }\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    @Input()\n    get disabled(): boolean {\n        return this.ngControl ? !!this.ngControl.disabled : this._disabled;\n    }\n\n    set disabled(value: boolean) {\n        this._disabled = coerceBooleanProperty(value);\n        this.syncTagsDisabledState();\n    }\n\n    /**\n     * Whether or not this tag list is selectable. When a tag list is not selectable,\n     * the selected states for all the tags inside the tag list are always ignored.\n     */\n    @Input()\n    get selectable(): boolean {\n        return this._selectable;\n    }\n\n    set selectable(value: boolean) {\n        this._selectable = coerceBooleanProperty(value);\n\n        if (this.tags) {\n            this.tags.forEach((tag) => tag.tagListSelectable = this._selectable);\n        }\n    }\n\n    @Input()\n    set tabIndex(value: number) {\n        this.userTabIndex = value;\n        this._tabIndex = value;\n    }\n\n    /**\n     * Event that emits whenever the raw value of the tag-list changes. This is here primarily\n     * to facilitate the two-way binding for the `value` input.\n     * @docs-private\n     */\n    @Output() readonly valueChange: EventEmitter<any> = new EventEmitter<any>();\n\n    uid: string = `mc-tag-list-${nextUniqueId++}`;\n\n    /**\n     * User defined tab index.\n     * When it is not null, use user defined tab index. Otherwise use tabIndex\n     */\n    userTabIndex: number | null = null;\n\n    keyManager: FocusKeyManager<McTag>;\n\n    selectionModel: SelectionModel<McTag>;\n\n    tagChanges = new EventEmitter<any>();\n\n    /** An object used to control when error messages are shown. */\n    @Input() errorStateMatcher: ErrorStateMatcher;\n\n    /** Orientation of the tag list. */\n    @Input('orientation') orientation: 'horizontal' | 'vertical' = 'horizontal';\n\n    /** Event emitted when the selected tag list value has been changed by the user. */\n    @Output() readonly change: EventEmitter<McTagListChange> = new EventEmitter<McTagListChange>();\n\n    /** The tag components contained within this tag list. */\n    @ContentChildren(McTag) tags: QueryList<McTag>;\n\n    _tabIndex = 0;\n\n    private _value: any;\n\n    private _required: boolean = false;\n\n    private _placeholder: string;\n\n    private _disabled: boolean = false;\n\n    private _selectable: boolean = true;\n\n    /** The tag input to add more tags */\n    private tagInput: McTagTextControl;\n\n    private _multiple: boolean = false;\n\n    /**\n     * When a tag is destroyed, we store the index of the destroyed tag until the tags\n     * query list notifies about the update. This is necessary because we cannot determine an\n     * appropriate tag that should receive focus until the array of tags updated completely.\n     */\n    private lastDestroyedTagIndex: number | null = null;\n\n    /** Subject that emits when the component has been destroyed. */\n    private destroyed = new Subject<void>();\n\n    /** Subscription to focus changes in the tags. */\n    private tagFocusSubscription: Subscription | null;\n\n    /** Subscription to blur changes in the tags. */\n    private tagBlurSubscription: Subscription | null;\n\n    /** Subscription to selection changes in tags. */\n    private tagSelectionSubscription: Subscription | null;\n\n    /** Subscription to remove changes in tags. */\n    private tagRemoveSubscription: Subscription | null;\n\n    constructor(\n        protected elementRef: ElementRef<HTMLElement>,\n        private changeDetectorRef: ChangeDetectorRef,\n        defaultErrorStateMatcher: ErrorStateMatcher,\n        @Optional() private dir: Directionality,\n        @Optional() parentForm: NgForm,\n        @Optional() parentFormGroup: FormGroupDirective,\n        @Optional() @Self() public ngControl: NgControl\n    ) {\n        super(defaultErrorStateMatcher, parentForm, parentFormGroup, ngControl);\n\n        if (this.ngControl) {\n            this.ngControl.valueAccessor = this;\n        }\n    }\n\n    ngAfterContentInit() {\n        this.keyManager = new FocusKeyManager<McTag>(this.tags)\n            .withVerticalOrientation()\n            .withHorizontalOrientation(this.dir ? this.dir.value : 'ltr');\n\n        if (this.dir) {\n            this.dir.change\n                .pipe(takeUntil(this.destroyed))\n                .subscribe((dir) => this.keyManager.withHorizontalOrientation(dir));\n        }\n\n        // Prevents the tag list from capturing focus and redirecting\n        // it back to the first tag when the user tabs out.\n        this.keyManager.tabOut\n            .pipe(takeUntil(this.destroyed))\n            .subscribe(() => {\n                this._tabIndex = -1;\n\n                setTimeout(() => {\n                    this._tabIndex = this.userTabIndex || 0;\n                    this.changeDetectorRef.markForCheck();\n                });\n            });\n\n        // When the list changes, re-subscribe\n        this.tags.changes\n            .pipe(startWith(null), takeUntil(this.destroyed))\n            .subscribe(() => {\n                if (this.disabled) {\n                    // Since this happens after the content has been\n                    // checked, we need to defer it to the next tick.\n                    Promise.resolve().then(() => { this.syncTagsDisabledState(); });\n                }\n\n                this.resetTags();\n\n                // Reset tags selected/deselected status\n                this.initializeSelection();\n\n                // Check to see if we need to update our tab index\n                this.updateTabIndex();\n\n                // Check to see if we have a destroyed tag and need to refocus\n                this.updateFocusForDestroyedTags();\n\n                // Defer setting the value in order to avoid the \"Expression\n                // has changed after it was checked\" errors from Angular.\n                Promise.resolve().then(() => { this.tagChanges.emit(this.tags.toArray()); });\n\n                this.stateChanges.next();\n            });\n    }\n\n    ngOnInit() {\n        this.selectionModel = new SelectionModel<McTag>(this.multiple, undefined, false);\n        this.stateChanges.next();\n    }\n\n    ngDoCheck() {\n        if (this.ngControl) {\n            // We need to re-evaluate this on every change detection cycle, because there are some\n            // error triggers that we can't subscribe to (e.g. parent form submissions). This means\n            // that whatever logic is in here has to be super lean or we risk destroying the performance.\n            this.updateErrorState();\n        }\n    }\n\n    ngOnDestroy() {\n        this.destroyed.next();\n        this.destroyed.complete();\n        this.stateChanges.complete();\n\n        this.dropSubscriptions();\n    }\n\n    // tslint:disable-next-line:no-empty\n    onTouched = () => {};\n\n    // tslint:disable-next-line:no-empty\n    onChange: (value: any) => void = () => {};\n\n    /** Associates an HTML input element with this tag list. */\n    registerInput(inputElement: McTagTextControl): void {\n        this.tagInput = inputElement;\n    }\n\n    // Implemented as part of ControlValueAccessor.\n    writeValue(value: any): void {\n        if (this.tags) {\n            this.setSelectionByValue(value, false);\n        }\n    }\n\n    // Implemented as part of ControlValueAccessor.\n    registerOnChange(fn: (value: any) => void): void {\n        this.onChange = fn;\n    }\n\n    // Implemented as part of ControlValueAccessor.\n    registerOnTouched(fn: () => void): void {\n        this.onTouched = fn;\n    }\n\n    // Implemented as part of ControlValueAccessor.\n    setDisabledState(isDisabled: boolean): void {\n        this.disabled = isDisabled;\n        this.stateChanges.next();\n    }\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    onContainerClick(event: MouseEvent) {\n        if (!this.originatesFromTag(event)) {\n            this.focus();\n        }\n    }\n\n    /**\n     * Focuses the first non-disabled tag in this tag list, or the associated input when there\n     * are no eligible tags.\n     */\n    focus(): void {\n        if (this.disabled) { return; }\n\n        // TODO: ARIA says this should focus the first `selected` tag if any are selected.\n        // Focus on first element if there's no tagInput inside tag-list\n        if (this.tagInput && this.tagInput.focused) {\n            // do nothing\n        } else if (this.tags.length > 0) {\n            this.keyManager.setFirstItemActive();\n            this.stateChanges.next();\n        } else {\n            this.focusInput();\n            this.stateChanges.next();\n        }\n    }\n\n    /** Attempt to focus an input if we have one. */\n    focusInput() {\n        if (this.tagInput) {\n            this.tagInput.focus();\n        }\n    }\n\n    /**\n     * Pass events to the keyboard manager. Available here for tests.\n     */\n    keydown(event: KeyboardEvent) {\n        const target = event.target as HTMLElement;\n\n        // If they are on an empty input and hit backspace, focus the last tag\n        // tslint:disable-next-line: deprecation\n        if (event.keyCode === BACKSPACE && this.isInputEmpty(target)) {\n            this.keyManager.setLastItemActive();\n            event.preventDefault();\n        } else if (target && target.classList.contains('mc-tag')) {\n            // tslint:disable-next-line: deprecation\n            if (event.keyCode === HOME) {\n                this.keyManager.setFirstItemActive();\n                event.preventDefault();\n            // tslint:disable-next-line: deprecation\n            } else if (event.keyCode === END) {\n                this.keyManager.setLastItemActive();\n                event.preventDefault();\n            } else {\n                this.keyManager.onKeydown(event);\n            }\n\n            this.stateChanges.next();\n        }\n    }\n\n    setSelectionByValue(value: any, isUserInput: boolean = true) {\n        this.clearSelection();\n        this.tags.forEach((tag) => tag.deselect());\n\n        if (Array.isArray(value)) {\n            value.forEach((currentValue) => this.selectValue(currentValue, isUserInput));\n            this.sortValues();\n        } else {\n            const correspondingTag = this.selectValue(value, isUserInput);\n\n            // Shift focus to the active item. Note that we shouldn't do this in multiple\n            // mode, because we don't know what tag the user interacted with last.\n            if (correspondingTag && isUserInput) {\n                this.keyManager.setActiveItem(correspondingTag);\n            }\n        }\n    }\n\n    /** When blurred, mark the field as touched when focus moved outside the tag list. */\n    blur() {\n        if (!this.hasFocusedTag()) {\n            this.keyManager.setActiveItem(-1);\n        }\n\n        if (!this.disabled) {\n            if (this.tagInput) {\n                // If there's a tag input, we should check whether the focus moved to tag input.\n                // If the focus is not moved to tag input, mark the field as touched. If the focus moved\n                // to tag input, do nothing.\n                // Timeout is needed to wait for the focus() event trigger on tag input.\n                setTimeout(() => {\n                    if (!this.focused) {\n                        this.markAsTouched();\n                    }\n                });\n            } else {\n                // If there's no tag input, then mark the field as touched.\n                this.markAsTouched();\n            }\n        }\n    }\n\n    /** Mark the field as touched */\n    markAsTouched() {\n        this.onTouched();\n        this.changeDetectorRef.markForCheck();\n        this.stateChanges.next();\n    }\n\n    /**\n     * Check the tab index as you should not be allowed to focus an empty list.\n     */\n    protected updateTabIndex(): void {\n        // If we have 0 tags, we should not allow keyboard focus\n        this._tabIndex = this.userTabIndex || (this.tags.length === 0 ? -1 : 0);\n    }\n\n    /**\n     * If the amount of tags changed, we need to update the\n     * key manager state and focus the next closest tag.\n     */\n    protected updateFocusForDestroyedTags() {\n        if (this.lastDestroyedTagIndex != null && this.tags.length) {\n            const newTagIndex = Math.min(this.lastDestroyedTagIndex, this.tags.length - 1);\n            this.keyManager.setActiveItem(newTagIndex);\n        } else if (this.tags.length === 0) {\n            this.focusInput();\n        }\n\n        this.lastDestroyedTagIndex = null;\n    }\n\n    private _compareWith = (o1: any, o2: any) => o1 === o2;\n\n    /**\n     * Utility to ensure all indexes are valid.\n     *\n     * @param index The index to be checked.\n     * @returns True if the index is valid for our list of tags.\n     */\n    private isValidIndex(index: number): boolean {\n        return index >= 0 && index < this.tags.length;\n    }\n\n    private isInputEmpty(element: HTMLElement): boolean {\n        if (element && element.nodeName.toLowerCase() === 'input') {\n            const input = element as HTMLInputElement;\n\n            return !input.value;\n        }\n\n        return false;\n    }\n\n    /**\n     * Finds and selects the tag based on its value.\n     * @returns Tag that has the corresponding value.\n     */\n    private selectValue(value: any, isUserInput: boolean = true): McTag | undefined {\n\n        const correspondingTag = this.tags.find((tag) => {\n            return tag.value != null && this._compareWith(tag.value, value);\n        });\n\n        if (correspondingTag) {\n            if (isUserInput) {\n                correspondingTag.selectViaInteraction();\n            } else {\n                correspondingTag.select();\n            }\n\n            this.selectionModel.select(correspondingTag);\n        }\n\n        return correspondingTag;\n    }\n\n    private initializeSelection(): void {\n        // Defer setting the value in order to avoid the \"Expression\n        // has changed after it was checked\" errors from Angular.\n        Promise.resolve().then(() => {\n            if (this.ngControl || this._value) {\n                this.setSelectionByValue(this.ngControl ? this.ngControl.value : this._value, false);\n                this.stateChanges.next();\n            }\n        });\n    }\n\n    /**\n     * Deselects every tag in the list.\n     * @param skip Tag that should not be deselected.\n     */\n    private clearSelection(skip?: McTag): void {\n        this.selectionModel.clear();\n        this.tags.forEach((tag) => {\n            if (tag !== skip) {\n                tag.deselect();\n            }\n        });\n        this.stateChanges.next();\n    }\n\n    /**\n     * Sorts the model values, ensuring that they keep the same\n     * order that they have in the panel.\n     */\n    private sortValues(): void {\n        if (this._multiple) {\n            this.selectionModel.clear();\n\n            this.tags.forEach((tag) => {\n                if (tag.selected) {\n                    this.selectionModel.select(tag);\n                }\n            });\n            this.stateChanges.next();\n        }\n    }\n\n    /** Emits change event to set the model value. */\n    private propagateChanges(fallbackValue?: any): void {\n        let valueToEmit: any = null;\n\n        if (Array.isArray(this.selected)) {\n            valueToEmit = this.selected.map((tag) => tag.value);\n        } else {\n            valueToEmit = this.selected ? this.selected.value : fallbackValue;\n        }\n        this._value = valueToEmit;\n        this.change.emit(new McTagListChange(this, valueToEmit));\n        this.valueChange.emit(valueToEmit);\n        this.onChange(valueToEmit);\n        this.changeDetectorRef.markForCheck();\n    }\n\n    private resetTags() {\n        this.dropSubscriptions();\n        this.listenToTagsFocus();\n        this.listenToTagsSelection();\n        this.listenToTagsRemoved();\n    }\n\n    private dropSubscriptions() {\n        if (this.tagFocusSubscription) {\n            this.tagFocusSubscription.unsubscribe();\n            this.tagFocusSubscription = null;\n        }\n\n        if (this.tagBlurSubscription) {\n            this.tagBlurSubscription.unsubscribe();\n            this.tagBlurSubscription = null;\n        }\n\n        if (this.tagSelectionSubscription) {\n            this.tagSelectionSubscription.unsubscribe();\n            this.tagSelectionSubscription = null;\n        }\n\n        if (this.tagRemoveSubscription) {\n            this.tagRemoveSubscription.unsubscribe();\n            this.tagRemoveSubscription = null;\n        }\n    }\n\n    /** Listens to user-generated selection events on each tag. */\n    private listenToTagsSelection(): void {\n        this.tagSelectionSubscription = this.tagSelectionChanges.subscribe((event) => {\n            if (event.source.selected) {\n                this.selectionModel.select(event.source);\n            } else {\n                this.selectionModel.deselect(event.source);\n            }\n\n            // For single selection tag list, make sure the deselected value is unselected.\n            if (!this.multiple) {\n                this.tags.forEach((tag) => {\n                    if (!this.selectionModel.isSelected(tag) && tag.selected) {\n                        tag.deselect();\n                    }\n                });\n            }\n\n            if (event.isUserInput) {\n                this.propagateChanges();\n            }\n        });\n    }\n\n    /** Listens to user-generated selection events on each tag. */\n    private listenToTagsFocus(): void {\n        this.tagFocusSubscription = this.tagFocusChanges.subscribe((event) => {\n            const tagIndex: number = this.tags.toArray().indexOf(event.tag);\n\n            if (this.isValidIndex(tagIndex)) {\n                this.keyManager.updateActiveItem(tagIndex);\n            }\n            this.stateChanges.next();\n        });\n\n        this.tagBlurSubscription = this.tagBlurChanges.subscribe(() => {\n            this.blur();\n            this.stateChanges.next();\n        });\n    }\n\n    private listenToTagsRemoved(): void {\n        this.tagRemoveSubscription = this.tagRemoveChanges.subscribe((event) => {\n            const tag = event.tag;\n            const tagIndex = this.tags.toArray().indexOf(event.tag);\n\n            // In case the tag that will be removed is currently focused, we temporarily store\n            // the index in order to be able to determine an appropriate sibling tag that will\n            // receive focus.\n            if (this.isValidIndex(tagIndex) && tag.hasFocus) {\n                this.lastDestroyedTagIndex = tagIndex;\n            }\n        });\n    }\n\n    /** Checks whether an event comes from inside a tag element. */\n    private originatesFromTag(event: Event): boolean {\n        let currentElement = event.target as HTMLElement | null;\n\n        while (currentElement && currentElement !== this.elementRef.nativeElement) {\n            if (currentElement.classList.contains('mc-tag')) {\n                return true;\n            }\n\n            currentElement = currentElement.parentElement;\n        }\n\n        return false;\n    }\n\n    /** Checks whether any of the tags is focused. */\n    private hasFocusedTag() {\n        return this.tags.some((tag) => tag.hasFocus);\n    }\n\n    /** Syncs the list's disabled state with the individual tags. */\n    private syncTagsDisabledState() {\n        if (this.tags) {\n            this.tags.forEach((tag) => {\n                tag.disabled = this._disabled;\n            });\n        }\n    }\n}\n\n","import {\n    ChangeDetectionStrategy,\n    Component,\n    ContentChild,\n    ContentChildren,\n    Directive,\n    ElementRef,\n    EventEmitter,\n    forwardRef,\n    Input,\n    NgZone,\n    OnDestroy,\n    Output,\n    QueryList,\n    ViewEncapsulation\n} from '@angular/core';\nimport { IFocusableOption } from '@ptsecurity/cdk/a11y';\nimport { coerceBooleanProperty } from '@ptsecurity/cdk/coercion';\nimport { BACKSPACE, DELETE, SPACE } from '@ptsecurity/cdk/keycodes';\nimport {\n    CanColor,\n    CanColorCtor,\n    CanDisable,\n    CanDisableCtor,\n    mixinColor,\n    mixinDisabled\n} from '@ptsecurity/mosaic/core';\nimport { McIcon } from '@ptsecurity/mosaic/icon';\nimport { Subject } from 'rxjs';\nimport { take } from 'rxjs/operators';\n\n\n// tslint:disable-next-line:naming-convention\nexport interface McTagEvent {\n    tag: McTag;\n}\n\n/** Event object emitted by McTag when selected or deselected. */\nexport class McTagSelectionChange {\n    constructor(public source: McTag, public selected: boolean, public isUserInput = false) {}\n}\n\n\nconst TAG_ATTRIBUTE_NAMES = ['mc-basic-tag'];\n\n/**\n * Dummy directive to add CSS class to tag avatar.\n * @docs-private\n */\n@Directive({\n    selector: 'mc-tag-avatar, [mcTagAvatar]',\n    host: { class: 'mc-tag-avatar' }\n})\nexport class McTagAvatar {}\n\n/**\n * Dummy directive to add CSS class to tag trailing icon.\n * @docs-private\n */\n@Directive({\n    selector: 'mc-tag-trailing-icon, [mcTagTrailingIcon]',\n    host: { class: 'mc-tag-trailing-icon' }\n})\nexport class McTagTrailingIcon {}\n\nexport class McTagBase {\n    // tslint:disable-next-line:naming-convention\n    constructor(public _elementRef: ElementRef) {\n    }\n}\n\n// tslint:disable-next-line:naming-convention\nexport const _McTagMixinBase: CanColorCtor & CanDisableCtor & typeof McTagBase = mixinColor(mixinDisabled(McTagBase));\n\n\n@Component({\n    selector: 'mc-tag, [mc-tag], mc-basic-tag, [mc-basic-tag]',\n    exportAs: 'mcTag',\n    templateUrl: 'tag.partial.html',\n    styleUrls: ['./tag.css'],\n    inputs: ['color', 'disabled'],\n    host: {\n        class: 'mc-tag',\n        '[attr.tabindex]': 'disabled ? null : -1',\n        '[class.mc-tag-selected]': 'selected',\n        '[class.mc-tag-with-avatar]': 'avatar',\n        '[class.mc-tag-with-trailing-icon]': 'trailingIcon || removeIcon',\n        '[class.mc-tag-disabled]': 'disabled',\n        '[class.mc-disabled]': 'disabled',\n        '[attr.disabled]': 'disabled || null',\n        '(click)': 'handleClick($event)',\n        '(keydown)': 'handleKeydown($event)',\n        '(focus)': 'focus()',\n        '(blur)': 'blur()'\n    },\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None\n})\nexport class McTag extends _McTagMixinBase implements IFocusableOption, OnDestroy, CanColor, CanDisable {\n    /** Emits when the tag is focused. */\n    readonly onFocus = new Subject<McTagEvent>();\n\n    /** Emits when the tag is blured. */\n    readonly onBlur = new Subject<McTagEvent>();\n\n    nativeElement: HTMLElement;\n\n    /** Whether the tag has focus. */\n    hasFocus: boolean = false;\n\n    /** Whether the tag list is selectable */\n    tagListSelectable: boolean = true;\n\n    @ContentChildren(McIcon) contentChildren: QueryList<McIcon>;\n\n    /** The tag avatar */\n    @ContentChild(McTagAvatar) avatar: McTagAvatar;\n\n    /** The tag's trailing icon. */\n    @ContentChild(McTagTrailingIcon) trailingIcon: McTagTrailingIcon;\n\n    /** The tag's remove toggler. */\n    @ContentChild(forwardRef(() => McTagRemove)) removeIcon: McTagRemove;\n\n    /** Emitted when the tag is selected or deselected. */\n    @Output() readonly selectionChange: EventEmitter<McTagSelectionChange> =\n        new EventEmitter<McTagSelectionChange>();\n\n    /** Emitted when the tag is destroyed. */\n    @Output() readonly destroyed: EventEmitter<McTagEvent> = new EventEmitter<McTagEvent>();\n\n    /** Emitted when a tag is to be removed. */\n    @Output() readonly removed: EventEmitter<McTagEvent> = new EventEmitter<McTagEvent>();\n\n    /** Whether the tag is selected. */\n    @Input()\n    get selected(): boolean {\n        return this._selected;\n    }\n\n    set selected(value: boolean) {\n        const coercedValue = coerceBooleanProperty(value);\n\n        if (coercedValue !== this._selected) {\n            this._selected = coercedValue;\n            this.dispatchSelectionChange();\n        }\n    }\n\n    private _selected: boolean = false;\n\n    /** The value of the tag. Defaults to the content inside `<mc-tag>` tags. */\n    @Input()\n    get value(): any {\n        return this._value !== undefined\n            ? this._value\n            : this.elementRef.nativeElement.textContent;\n    }\n\n    set value(value: any) {\n        this._value = value;\n    }\n\n    private _value: any;\n\n    /**\n     * Whether or not the tag is selectable. When a tag is not selectable,\n     * changes to its selected state are always ignored. By default a tag is\n     * selectable, and it becomes non-selectable if its parent tag list is\n     * not selectable.\n     */\n    @Input()\n    get selectable(): boolean {\n        return this._selectable && this.tagListSelectable;\n    }\n\n    set selectable(value: boolean) {\n        this._selectable = coerceBooleanProperty(value);\n    }\n\n    private _selectable: boolean = true;\n\n    /**\n     * Determines whether or not the tag displays the remove styling and emits (removed) events.\n     */\n    @Input()\n    get removable(): boolean {\n        return this._removable;\n    }\n\n    set removable(value: boolean) {\n        this._removable = coerceBooleanProperty(value);\n    }\n\n    private _removable: boolean = true;\n\n    get disabled() {\n        return this._disabled;\n    }\n\n    set disabled(value: any) {\n        if (value !== this.disabled) {\n            this._disabled = value;\n        }\n    }\n\n    private _disabled: boolean = false;\n\n    constructor(public elementRef: ElementRef, private _ngZone: NgZone) {\n        super(elementRef);\n\n        this.addHostClassName();\n\n        this.nativeElement = elementRef.nativeElement;\n    }\n\n    ngAfterContentInit() {\n        this.addClassModificatorForIcons();\n    }\n\n    addClassModificatorForIcons() {\n        const icons = this.contentChildren.map((item) => item._elementRef.nativeElement);\n\n        if (icons.length === 1) {\n            const iconElement = icons[0];\n\n            if (!iconElement.previousElementSibling && !iconElement.nextElementSibling) {\n                if (iconElement.nextSibling) {\n                    iconElement.classList.add('mc-icon_left');\n                    this.nativeElement.classList.add('mc-left-icon');\n                }\n\n                if (iconElement.previousSibling) {\n                    iconElement.classList.add('mc-icon_right');\n                    this.nativeElement.classList.add('mc-right-icon');\n                }\n            }\n        } else if (icons.length > 1) {\n            const firstIconElement = icons[0];\n            const secondIconElement = icons[1];\n\n            firstIconElement.classList.add('mc-icon_left');\n            secondIconElement.classList.add('mc-icon_right');\n        }\n    }\n\n    addHostClassName() {\n        // Add class for the different tags\n        for (const attr of TAG_ATTRIBUTE_NAMES) {\n            if (\n                this.elementRef.nativeElement.hasAttribute(attr) ||\n                this.elementRef.nativeElement.tagName.toLowerCase() === attr\n            ) {\n                    (this.elementRef.nativeElement as HTMLElement).classList.add(attr);\n\n                    return;\n            }\n        }\n        (this.elementRef.nativeElement as HTMLElement).classList.add('mc-standard-tag');\n    }\n\n    ngOnDestroy() {\n        this.destroyed.emit({ tag: this });\n    }\n\n    select(): void {\n        if (!this._selected) {\n            this._selected = true;\n            this.dispatchSelectionChange();\n        }\n    }\n\n    deselect(): void {\n        if (this._selected) {\n            this._selected = false;\n            this.dispatchSelectionChange();\n        }\n    }\n\n    selectViaInteraction(): void {\n        if (!this._selected) {\n            this._selected = true;\n            this.dispatchSelectionChange(true);\n        }\n    }\n\n    toggleSelected(isUserInput: boolean = false): boolean {\n        this._selected = !this.selected;\n        this.dispatchSelectionChange(isUserInput);\n\n        return this.selected;\n    }\n\n    /** Allows for programmatic focusing of the tag. */\n    focus(): void {\n        if (!this.hasFocus) {\n            this.elementRef.nativeElement.focus();\n            this.onFocus.next({ tag: this });\n        }\n        this.hasFocus = true;\n    }\n\n    /**\n     * Allows for programmatic removal of the tag. Called by the McTagList when the DELETE or\n     * BACKSPACE keys are pressed.\n     *\n     * Informs any listeners of the removal request. Does not remove the tag from the DOM.\n     */\n    remove(): void {\n        if (this.removable) {\n            this.removed.emit({ tag: this });\n        }\n    }\n\n    handleClick(event: Event) {\n        if (this.disabled) {\n            event.preventDefault();\n        } else {\n            event.stopPropagation();\n        }\n    }\n\n    handleKeydown(event: KeyboardEvent): void {\n        if (this.disabled) { return; }\n\n        // tslint:disable-next-line: deprecation\n        switch (event.keyCode) {\n            case DELETE:\n            case BACKSPACE:\n                // If we are removable, remove the focused tag\n                this.remove();\n                // Always prevent so page navigation does not occur\n                event.preventDefault();\n                break;\n            case SPACE:\n                // If we are selectable, toggle the focused tag\n                if (this.selectable) {\n                    this.toggleSelected(true);\n                }\n\n                // Always prevent space from scrolling the page since the list has focus\n                event.preventDefault();\n                break;\n            default:\n        }\n    }\n\n    blur(): void {\n        // When animations are enabled, Angular may end up removing the tag from the DOM a little\n        // earlier than usual, causing it to be blurred and throwing off the logic in the tag list\n        // that moves focus not the next item. To work around the issue, we defer marking the tag\n        // as not focused until the next time the zone stabilizes.\n        this._ngZone.onStable\n            .asObservable()\n            .pipe(take(1))\n            .subscribe(() => {\n                this._ngZone.run(() => {\n                    this.hasFocus = false;\n                    this.onBlur.next({ tag: this });\n                });\n            });\n    }\n\n    private dispatchSelectionChange(isUserInput = false) {\n        this.selectionChange.emit({\n            source: this,\n            isUserInput,\n            selected: this._selected\n        });\n    }\n}\n\n\n/**\n * Applies proper (click) support and adds styling for use with the Material Design \"cancel\" icon\n * available at https://material.io/icons/#ic_cancel.\n *\n * Example:\n *\n *     `<mc-tag>\n *       <mc-icon mcTagRemove>cancel</mc-icon>\n *     </mc-tag>`\n *\n * You *may* use a custom icon, but you may need to override the `mc-tag-remove` positioning\n * styles to properly center the icon within the tag.\n */\n@Directive({\n    selector: '[mcTagRemove]',\n    host: {\n        class: 'mc-tag-remove mc-tag-trailing-icon',\n        '(click)': 'handleClick($event)'\n    }\n})\nexport class McTagRemove {\n    constructor(protected parentTag: McTag) {}\n\n    /** Calls the parent tag's public `remove()` method if applicable. */\n    handleClick(event: Event): void {\n        if (this.parentTag.removable) {\n            this.parentTag.remove();\n        }\n\n        // We need to stop event propagation because otherwise the event will bubble up to the\n        // form field and cause the `onContainerClick` method to be invoked. This method would then\n        // reset the focused tag that has been focused after tag removal. Usually the parent\n        // the parent click listener of the `McTag` would prevent propagation, but it can happen\n        // that the tag is being removed before the event bubbles up.\n        event.stopPropagation();\n    }\n}\n","import { InjectionToken } from '@angular/core';\n\n\n/** Default options, for the chips module, that can be overridden. */\n// tslint:disable-next-line: naming-convention\nexport interface McTagsDefaultOptions {\n    /** The list of key codes that will trigger a chipEnd event. */\n    separatorKeyCodes: number[] | Set<number>;\n}\n\n/** Injection token to be used to override the default options for the chips module. */\nexport const MC_TAGS_DEFAULT_OPTIONS = new InjectionToken<McTagsDefaultOptions>('mc-tags-default-options');\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n"],"names":["CommonModule","PlatformModule","NgModule","ENTER","Input","Output","Inject","ElementRef","Directive","hasModifierKey","coerceBooleanProperty","nextUniqueId","EventEmitter","ContentChildren","NgControl","Optional","Self","FormGroupDirective","NgForm","Directionality","ErrorStateMatcher","ChangeDetectorRef","ChangeDetectionStrategy","ViewEncapsulation","McFormFieldControl","Component","END","HOME","BACKSPACE","SelectionModel","startWith","takeUntil","FocusKeyManager","merge","Subject","tslib_1.__extends","mixinErrorState","ContentChild","forwardRef","McIcon","NgZone","take","SPACE","DELETE","mixinColor","mixinDisabled","InjectionToken"],"mappings":"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"}