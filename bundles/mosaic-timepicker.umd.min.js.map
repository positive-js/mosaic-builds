{"version":3,"file":"mosaic-timepicker.umd.min.js","sources":["../../node_modules/tslib/tslib.es6.js","../../src/lib/timepicker/timepicker.constants.ts","../../src/lib/timepicker/timepicker.ts","../../src/lib/timepicker/timepicker.module.ts"],"sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","export enum TimeParts {\n    hours,\n    minutes,\n    seconds\n}\n\nexport enum TimeFormats {\n    HHmmss = 'HH:mm:ss',\n    HHmm = 'HH:mm'\n}\n\nexport const TIMEFORMAT_PLACEHOLDERS: { [timeFormat: string]: string } = {\n    [TimeFormats.HHmmss]: '  :  :  ',\n    [TimeFormats.HHmm]: '  :  '\n};\n\nexport const DEFAULT_TIME_FORMAT: TimeFormats = TimeFormats.HHmm;\n\nexport const HOURS_MINUTES_SECONDS_REGEXP =\n    new RegExp(/^([0-9]|0[0-9]|1[0-9]|2[0-3]):([0-5][0-9]|[0-9]):([0-5][0-9]|[0-9])?$/);\nexport const HOURS_MINUTES_REGEXP = /^([0-9]|0[0-9]|1[0-9]|2[0-3]):([0-5][0-9]|[0-9])?$/;\nexport const HOURS_ONLY_REGEXP = /^([0-9]|0[0-9]|1[0-9]|2[0-3]):?$/;\n\nexport const SECONDS_PER_MINUTE: number = 59;\nexport const MINUTES_PER_HOUR: number = 59;\nexport const HOURS_PER_DAY: number = 23;\n\n// TODO Move it to common CDK\nexport const ARROW_UP_KEYCODE: string = 'ArrowUp';\nexport const ARROW_DOWN_KEYCODE: string = 'ArrowDown';\nexport const ARROW_LEFT_KEYCODE: string = 'ArrowLeft';\nexport const ARROW_RIGHT_KEYCODE: string = 'ArrowRight';\n","import {\n    Directive,\n    DoCheck,\n    ElementRef,\n    forwardRef,\n    Inject,\n    Input,\n    OnChanges,\n    OnDestroy,\n    Optional,\n    Renderer2,\n    Self\n} from '@angular/core';\nimport {\n    ControlValueAccessor,\n    FormControl,\n    FormGroupDirective,\n    NG_VALIDATORS,\n    NgControl,\n    NgForm,\n    ValidationErrors,\n    ValidatorFn,\n    Validators\n} from '@angular/forms';\nimport { coerceBooleanProperty } from '@ptsecurity/cdk/coercion';\nimport {\n    CanUpdateErrorState,\n    CanUpdateErrorStateCtor,\n    ErrorStateMatcher,\n    mixinErrorState\n} from '@ptsecurity/mosaic/core';\nimport { McFormFieldControl } from '@ptsecurity/mosaic/form-field';\nimport { MC_INPUT_VALUE_ACCESSOR } from '@ptsecurity/mosaic/input';\nimport {\n    noop,\n    Subject\n} from 'rxjs';\n\nimport {\n    ARROW_DOWN_KEYCODE,\n    ARROW_LEFT_KEYCODE,\n    ARROW_RIGHT_KEYCODE,\n    ARROW_UP_KEYCODE,\n    DEFAULT_TIME_FORMAT,\n    HOURS_PER_DAY,\n    HOURS_MINUTES_REGEXP,\n    HOURS_MINUTES_SECONDS_REGEXP,\n    HOURS_ONLY_REGEXP,\n    MINUTES_PER_HOUR,\n    SECONDS_PER_MINUTE,\n    TIMEFORMAT_PLACEHOLDERS,\n    TimeFormats,\n    TimeParts\n} from './timepicker.constants';\n\n\nlet uniqueComponentIdSuffix: number = 0;\n\nconst formValidators: WeakMap<FormControl, ValidatorFn | null> = new WeakMap();\nconst formValidatorOnChangeRegistrators: WeakMap<FormControl, () => void> = new WeakMap();\nconst validatorOnChange = (c: FormControl) => {\n    const validatorOnChangeHandler = formValidatorOnChangeRegistrators.get(c);\n\n    if (validatorOnChangeHandler !== undefined) { validatorOnChangeHandler(); }\n};\n\nexport class McTimepickerBase {\n    constructor(\n        public defaultErrorStateMatcher: ErrorStateMatcher,\n        public parentForm: NgForm,\n        public parentFormGroup: FormGroupDirective,\n        public ngControl: NgControl) { }\n}\n\n// tslint:disable-next-line naming-convention\nexport const McTimepickerMixinBase:\n    CanUpdateErrorStateCtor &\n    typeof McTimepickerBase = mixinErrorState(McTimepickerBase);\n\n@Directive({\n    selector: 'input[mcTimepicker]',\n    exportAs: 'mcTimepickerInput',\n    host: {\n        class: 'mc-timepicker mc-input',\n        // Native input properties that are overwritten by Angular inputs need to be synced with\n        // the native input element. Otherwise property bindings for those don't work.\n        '[attr.id]': 'id',\n        '[attr.placeholder]': 'placeholder',\n        '[disabled]': 'disabled',\n        '[required]': 'required',\n        '[attr.time-format]': 'timeFormat',\n        '[attr.min-time]': 'minTime',\n        '[attr.max-time]': 'maxTime',\n        '[attr.value]': 'value',\n        '[attr.aria-invalid]': 'errorState',\n        '(blur)': 'onBlur()',\n        '(focus)': 'focusChanged(true)',\n        '(input)': 'onInput()',\n        '(paste)': 'onPaste($event)',\n        '(keydown)': 'onKeyDown($event)'\n    },\n    providers: [\n        {\n            provide: NG_VALIDATORS,\n            useValue: {\n                validate(c: FormControl) {\n                    // TODO This is `workaround` to bind singleton-like Validator implementation to\n                    // context of each validated component. This MUST be realized in proper way!\n                    if (this.__validatorOnChangeHandler !== undefined) {\n                        formValidatorOnChangeRegistrators.set(c, this.__validatorOnChangeHandler);\n                        this.__validatorOnChangeHandler = undefined;\n                    }\n                    const validator = formValidators.get(c);\n\n                    return validator ? validator(c) : null;\n                },\n                registerOnValidatorChange(fn: () => void): void {\n                    this.__validatorOnChangeHandler = fn;\n                }\n            },\n            multi: true\n        },\n        {\n            provide: McFormFieldControl,\n            useExisting: forwardRef(() => McTimepicker)\n        }\n    ]\n\n})\nexport class McTimepicker extends McTimepickerMixinBase\n    implements McFormFieldControl<any>,\n        OnChanges,\n        OnDestroy,\n        DoCheck,\n        CanUpdateErrorState,\n        ControlValueAccessor {\n\n    /** An object used to control when error messages are shown. */\n    @Input() errorStateMatcher: ErrorStateMatcher;\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    focused: boolean = false;\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    readonly stateChanges: Subject<void> = new Subject<void>();\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    controlType: string = 'mc-timepicker';\n\n    @Input()\n    get disabled(): boolean {\n        if (this.ngControl && this.ngControl.disabled !== null) { return this.ngControl.disabled; }\n\n        return this._disabled;\n    }\n\n    set disabled(value: boolean) {\n        this._disabled = coerceBooleanProperty(value);\n\n        // Browsers may not fire the blur event if the input is disabled too quickly.\n        // Reset from here to ensure that the element doesn't become stuck.\n        if (this.focused) {\n            this.focused = false;\n        }\n\n        this.stateChanges.next();\n    }\n\n    @Input()\n    get id(): string { return this._id; }\n\n    set id(value: string) { this._id = value || this.uid; }\n\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    @Input() placeholder: string;\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    @Input()\n    get required(): boolean { return this._required; }\n\n    set required(value: boolean) { this._required = coerceBooleanProperty(value); }\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    @Input()\n    get value(): string { return this.inputValueAccessor.value; }\n\n    set value(value: string) {\n        if (value !== this.value) {\n            this.inputValueAccessor.value = value;\n            this.applyInputChanges();\n        }\n    }\n\n    @Input('time-format')\n    get timeFormat(): TimeFormats { return this._timeFormat; }\n\n    set timeFormat(formatValue: TimeFormats) {\n        this._timeFormat = Object\n            .keys(TimeFormats)\n            .map((timeFormatKey) => TimeFormats[timeFormatKey])\n            .indexOf(formatValue) > -1 ? formatValue : DEFAULT_TIME_FORMAT;\n\n        validatorOnChange(<FormControl> this.ngControl.control);\n        this.placeholder = TIMEFORMAT_PLACEHOLDERS[this._timeFormat];\n    }\n\n    @Input('min-time')\n    get minTime(): string | null { return this._minTime; }\n\n    set minTime(minValue: string | null) {\n        this._minTime = minValue;\n        this.minDateTime = minValue !== null ? this.getDateFromTimeString(minValue) : undefined;\n        validatorOnChange(<FormControl> this.ngControl.control);\n    }\n\n    @Input('max-time')\n    get maxTime(): string | null { return this._maxTime; }\n\n    set maxTime(maxValue: string | null) {\n        this._maxTime = maxValue;\n        this.maxDateTime = maxValue !== null ? this.getDateFromTimeString(maxValue) : undefined;\n        validatorOnChange(<FormControl> this.ngControl.control);\n    }\n\n    private _id: string;\n    private readonly uid = `mc-timepicker-${uniqueComponentIdSuffix++}`;\n    private _disabled: boolean;\n    private _required: boolean;\n    private previousNativeValue: any;\n    private readonly inputValueAccessor: { value: any };\n    private onChange: (value: any) => void;\n    private onTouched: () => void;\n    private _timeFormat: TimeFormats;\n    private _minTime: string | null = null;\n    private minDateTime: Date | undefined;\n    private _maxTime: string | null = null;\n    private maxDateTime: Date | undefined;\n    private currentDateTimeInput: Date | undefined;\n\n    constructor(private readonly elementRef: ElementRef,\n                @Optional() @Self() public ngControl: NgControl,\n                @Optional() parentForm: NgForm,\n                @Optional() parentFormGroup: FormGroupDirective,\n                defaultErrorStateMatcher: ErrorStateMatcher,\n                @Optional() @Self() @Inject(MC_INPUT_VALUE_ACCESSOR) inputValueAccessor: any,\n                private readonly renderer: Renderer2) {\n        super(defaultErrorStateMatcher, parentForm, parentFormGroup, ngControl);\n\n        // If no input value accessor was explicitly specified, use the element as the input value\n        // accessor.\n        this.inputValueAccessor = inputValueAccessor || this.elementRef.nativeElement;\n\n        this.previousNativeValue = this.value;\n        this.onChange = noop;\n\n        // Force setter to be called in case id was not specified.\n        this.id = this.id;\n\n        this.placeholder = TIMEFORMAT_PLACEHOLDERS[DEFAULT_TIME_FORMAT];\n\n        // Instead of NG_VALUE_ACCESSOR (https://github.com/angular/material2/issues/8158#issuecomment-344618103)\n        if (this.ngControl) { this.ngControl.valueAccessor = this; }\n\n        // Substitute initial empty validator with validator linked to directive object instance (workaround)\n\n        formValidators.set(\n            <FormControl> this.ngControl.control,\n            Validators.compose([\n                () => this.parseValidator(),\n                () => this.minTimeValidator(),\n                () => this.maxTimeValidator()\n            ])\n        );\n    }\n\n    ngOnChanges(): void {\n        this.stateChanges.next();\n    }\n\n    ngOnDestroy(): void {\n        this.stateChanges.complete();\n    }\n\n    ngDoCheck(): void {\n        if (this.ngControl) {\n            // We need to re-evaluate this on every change detection cycle, because there are some\n            // error triggers that we can't subscribe to (e.g. parent form submissions). This means\n            // that whatever logic is in here has to be super lean or we risk destroying the performance.\n            this.updateErrorState();\n        }\n\n        // We need to dirty-check the native element's value, because there are some cases where\n        // we won't be notified when it changes (e.g. the consumer isn't using forms or they're\n        // updating the value using `emitEvent: false`).\n        this.dirtyCheckNativeValue();\n    }\n\n    focus(): void {\n        this.elementRef.nativeElement.focus();\n    }\n\n    focusChanged(isFocused: boolean): void {\n        if (isFocused !== this.focused) {\n            this.focused = isFocused;\n            this.onTouched();\n            this.stateChanges.next();\n        }\n    }\n\n    onBlur() {\n        this.applyInputChanges();\n        this.focusChanged(false);\n    }\n\n    onPaste($event) {\n        $event.preventDefault();\n        const clipboardUserInput: string = $event.clipboardData.getData('text');\n\n        if (this.getDateFromTimeString(clipboardUserInput) === undefined) { return; }\n\n        this.elementRef.nativeElement.value = clipboardUserInput;\n        this.onInput();\n    }\n\n    onInput() {\n        const initialCursorStart: number = this.elementRef.nativeElement.selectionStart;\n        const initialCursorEnd: number = this.elementRef.nativeElement.selectionEnd;\n        let isAutocompleteTriggered: boolean = false;\n\n        const {\n            hoursOnly,\n            hoursAndMinutes,\n            hoursAndMinutesAndSeconds\n        } = this.getParsedTimeParts(this.elementRef.nativeElement.value);\n\n        // tslint:disable no-magic-numbers\n        if (hoursOnly &&\n            hoursOnly[1] &&\n            hoursOnly[1].length === 2) {\n            isAutocompleteTriggered = true;\n        } else if (hoursAndMinutes &&\n            hoursAndMinutes[1].length === 1 &&\n            hoursAndMinutes[2] &&\n            hoursAndMinutes[2].length === 2) {\n            isAutocompleteTriggered = true;\n        } else if (hoursAndMinutesAndSeconds &&\n            hoursAndMinutesAndSeconds[1].length === 2 &&\n            hoursAndMinutesAndSeconds[2].length === 2 &&\n            hoursAndMinutesAndSeconds[3] &&\n            hoursAndMinutesAndSeconds[3].length === 2) {\n            isAutocompleteTriggered = true;\n        }\n        // tslint:enable no-magic-numbers\n\n        this.applyInputChanges({ doTimestringReformat: isAutocompleteTriggered });\n\n        this.elementRef.nativeElement.selectionStart = initialCursorStart;\n        this.elementRef.nativeElement.selectionEnd = initialCursorEnd;\n\n        if (isAutocompleteTriggered && this.ngControl.errors === null) {\n            this.createSelectionOfTimeComponentInInput(initialCursorStart + 1);\n        }\n    }\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    get empty(): boolean {\n        return !this.elementRef.nativeElement.value && !this.isBadInput();\n    }\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    onContainerClick() {\n        this.focus();\n    }\n\n    writeValue(value: Date | null): void {\n        if (value !== null) {\n            this.renderer.setProperty(this.elementRef.nativeElement,\n                'value',\n                this.getTimeStringFromDate(value, this.timeFormat)\n            );\n        }\n        this.onChange(value || null);\n        this.applyInputChanges();\n    }\n\n    onKeyDown(event: KeyboardEvent): void {\n\n        const keyCode: string = this.getKeyCode(event);\n\n        if (keyCode === ARROW_UP_KEYCODE || keyCode === ARROW_DOWN_KEYCODE) {\n            this.upDownTimeByArrowKeys(event);\n        }\n        if (keyCode === ARROW_LEFT_KEYCODE || keyCode === ARROW_RIGHT_KEYCODE) {\n            this.switchSelectionBetweenTimeparts(event);\n        }\n    }\n\n    registerOnChange(fn: (value: Date) => void): void {\n        this.onChange = fn;\n    }\n\n    registerOnTouched(fn: () => void): void {\n        this.onTouched = fn;\n    }\n\n    /** Does some manual dirty checking on the native input `value` property. */\n    private dirtyCheckNativeValue() {\n        const newValue = this.value;\n\n        if (this.previousNativeValue !== newValue) {\n            this.previousNativeValue = newValue;\n            this.stateChanges.next();\n        }\n    }\n\n    /** Checks whether the input is invalid based on the native validation. */\n    private isBadInput(): boolean {\n        const validity = (<HTMLInputElement> this.elementRef.nativeElement).validity;\n\n        return validity && validity.badInput;\n    }\n\n    private applyInputChanges(applyParams: {\n        changedTime?: Date;\n        doTimestringReformat?: boolean;\n    } = {}): void {\n        const { changedTime, doTimestringReformat = true } = applyParams;\n        const timeToApply: Date | undefined = changedTime ||\n            this.getDateFromTimeString(this.elementRef.nativeElement.value);\n        this.currentDateTimeInput = timeToApply;\n\n        if (doTimestringReformat && timeToApply !== undefined) {\n            const selectionStart: number = this.elementRef.nativeElement.selectionStart;\n            const selectionEnd: number = this.elementRef.nativeElement.selectionEnd;\n            this.renderer.setProperty(\n                this.elementRef.nativeElement,\n                'value',\n                this.getTimeStringFromDate(timeToApply, this.timeFormat));\n            this.elementRef.nativeElement.selectionStart = selectionStart;\n            this.elementRef.nativeElement.selectionEnd = selectionEnd;\n        }\n\n        (<FormControl> this.ngControl.control).updateValueAndValidity();\n        const result = this.ngControl.errors === null && timeToApply !== undefined ? timeToApply : null;\n        this.onChange(result);\n        this.stateChanges.next();\n    }\n\n    private upDownTimeByArrowKeys(event: KeyboardEvent): void {\n        event.preventDefault();\n\n        let changedTime: Date | undefined = this.currentDateTimeInput;\n        if (changedTime !== undefined) {\n            const cursorPos = this.elementRef.nativeElement.selectionStart;\n\n            const modifiedTimePart = this.getTimeEditMetrics(cursorPos)\n                .modifiedTimePart;\n            const keyCode: string = this.getKeyCode(event);\n            if (keyCode === ARROW_UP_KEYCODE) { changedTime = this.incrementTime(changedTime, modifiedTimePart); }\n            if (keyCode === ARROW_DOWN_KEYCODE) { changedTime = this.decrementTime(changedTime, modifiedTimePart); }\n            this.applyInputChanges({ changedTime });\n            this.createSelectionOfTimeComponentInInput(cursorPos);\n        }\n    }\n\n    private switchSelectionBetweenTimeparts(event: KeyboardEvent): void {\n        const changedTime: Date | undefined = this.currentDateTimeInput;\n        const keyCode: string = this.getKeyCode(event);\n\n        if (changedTime !== undefined) {\n            let cursorPos: number = this.elementRef.nativeElement.selectionStart;\n            if (keyCode === ARROW_LEFT_KEYCODE) {\n                cursorPos = this.getCursorPositionOfPrevTimePartStart(cursorPos, this.elementRef.nativeElement.value);\n            } else if (keyCode === ARROW_RIGHT_KEYCODE) {\n                cursorPos = this.getCursorPositionOfNextTimePartStart(cursorPos, this.elementRef.nativeElement.value);\n            }\n            this.createSelectionOfTimeComponentInInput(cursorPos);\n        }\n    }\n\n    /**\n     * @description Microsoft EDGE doesn't support KeyboaedEvent.code thus we need this helper\n     */\n    private getKeyCode(event: KeyboardEvent): string {\n        return event.code || event.key;\n    }\n\n    private createSelectionOfTimeComponentInInput(cursorPos: number): void {\n        setTimeout(() => {\n            const newEditParams = this.getTimeEditMetrics(cursorPos);\n            this.elementRef.nativeElement.selectionStart = newEditParams.cursorStartPosition;\n            this.elementRef.nativeElement.selectionEnd = newEditParams.cursorEndPosition;\n        });\n    }\n\n    private incrementTime(dateVal: Date,\n                          whatToIncrement: TimeParts = TimeParts.seconds): Date {\n        let { hours, minutes, seconds } = this.getTimeDigitsFromDate(dateVal);\n\n        switch (whatToIncrement) {\n            case TimeParts.hours:\n                hours++;\n                break;\n            case TimeParts.minutes:\n                minutes++;\n                break;\n            case TimeParts.seconds:\n                seconds++;\n                break;\n            default:\n        }\n\n        if (seconds > SECONDS_PER_MINUTE) { seconds = 0; }\n\n        if (minutes > MINUTES_PER_HOUR) { minutes = 0; }\n\n        if (hours > HOURS_PER_DAY) { hours = 0; }\n\n        return <Date> this.getDateFromTimeDigits(hours, minutes, seconds);\n    }\n\n    /**\n     * @description Decrement part of time\n     */\n    private decrementTime(dateVal: Date,\n                          whatToDecrement: TimeParts = TimeParts.seconds): Date {\n        let { hours, minutes, seconds } = this.getTimeDigitsFromDate(dateVal);\n\n        switch (whatToDecrement) {\n            case TimeParts.hours:\n                hours--;\n                break;\n            case TimeParts.minutes:\n                minutes--;\n                break;\n            case TimeParts.seconds:\n                seconds--;\n                break;\n            default:\n        }\n\n        if (seconds < 0) { seconds = SECONDS_PER_MINUTE; }\n\n        if (minutes < 0) { minutes = MINUTES_PER_HOUR; }\n\n        if (hours < 0) { hours = HOURS_PER_DAY; }\n\n        return <Date> this.getDateFromTimeDigits(hours, minutes, seconds);\n    }\n\n    private getCursorPositionOfPrevTimePartStart(cursorPos: number, timeString: string): number {\n        return cursorPos === 0 ? timeString.length : cursorPos - 1;\n    }\n\n    private getCursorPositionOfNextTimePartStart(cursorPos: number,\n                                                 timeString: string,\n                                                 timeDevider: string = ':'): number {\n        const nextDividerPos: number = timeString.indexOf(timeDevider, cursorPos);\n\n        return nextDividerPos !== undefined ? nextDividerPos + 1 : 0;\n    }\n\n    /**\n     * @description Get params for arrow-keys (up/down) time valie edit.\n     * @param cursorPosition Current cursor position in timeString\n     */\n    private getTimeEditMetrics(cursorPosition: number): {\n        modifiedTimePart: TimeParts;\n        cursorStartPosition: number;\n        cursorEndPosition: number;\n    } {\n        const timeString: string = this.elementRef.nativeElement.value;\n        let modifiedTimePart: TimeParts;\n        let cursorStartPosition: number;\n        let cursorEndPosition: number;\n        const hoursIndex = 0;\n        const minutesIndex = timeString.indexOf(':', hoursIndex + 1);\n        const secondsIndex = minutesIndex !== -1 ? timeString.indexOf(':', minutesIndex + 1) : -1;\n\n        if (secondsIndex !== -1 && cursorPosition > secondsIndex) {\n            modifiedTimePart = TimeParts.seconds;\n            cursorStartPosition = secondsIndex + 1;\n            cursorEndPosition = timeString.length;\n        } else if (minutesIndex !== -1 && cursorPosition > minutesIndex) {\n            modifiedTimePart = TimeParts.minutes;\n            cursorStartPosition = minutesIndex + 1;\n            cursorEndPosition = secondsIndex > -1 ? secondsIndex : timeString.length;\n        } else {\n            modifiedTimePart = TimeParts.hours;\n            cursorStartPosition = hoursIndex;\n            cursorEndPosition = minutesIndex !== -1 ? minutesIndex : timeString.length;\n        }\n\n        return {\n            modifiedTimePart,\n            cursorStartPosition,\n            cursorEndPosition\n        };\n    }\n\n    /**\n     * @description Create time string for displaying inside input element of UI\n     */\n    private getTimeStringFromDate(tempVal: Date,\n                                  timeFormat: TimeFormats = DEFAULT_TIME_FORMAT): string {\n        const hours: string = this.getNumberWithLeadingZero(tempVal.getHours());\n        const minutes: string = this.getNumberWithLeadingZero(tempVal.getMinutes());\n        const seconds: string = this.getNumberWithLeadingZero(tempVal.getSeconds());\n\n        const formattedTimeGenerators = {\n            [TimeFormats.HHmm]: () => `${hours}:${minutes}`,\n            [TimeFormats.HHmmss]: () => `${hours}:${minutes}:${seconds}`\n        };\n\n        return formattedTimeGenerators[timeFormat]();\n    }\n\n    private getParsedTimeParts(timeString: string): {\n        hoursOnly: any;\n        hoursAndMinutes: any;\n        hoursAndMinutesAndSeconds: any;\n    } {\n        const hoursAndMinutesAndSeconds = timeString.match(HOURS_MINUTES_SECONDS_REGEXP);\n        const hoursAndMinutes = timeString.match(HOURS_MINUTES_REGEXP);\n        const hoursOnly = timeString.match(HOURS_ONLY_REGEXP);\n\n        return {\n            hoursOnly,\n            hoursAndMinutes,\n            hoursAndMinutesAndSeconds\n        };\n    }\n\n    /**\n     * @description Create Date object from separate parts of time\n     */\n    private getDateFromTimeDigits(hours: number, minutes: number, seconds: number = 0): Date | undefined {\n        return this.getDateFromTimeString(`${hours}:${minutes}:${seconds}`);\n    }\n\n    private getDateFromTimeString(timeString: string | undefined): Date | undefined {\n        // TODO Use moment-js\n        if (timeString === undefined) { return; }\n\n        const {\n            hoursOnly,\n            hoursAndMinutes,\n            hoursAndMinutesAndSeconds\n        } = this.getParsedTimeParts(timeString);\n\n        if (timeString.trim().length === 0 ||\n            hoursOnly === null && hoursAndMinutes === null && hoursAndMinutesAndSeconds === null) {\n            return;\n        }\n\n        // tslint:disable no-magic-numbers\n        let hours: number = 0;\n        let minutes: number = 0;\n        let seconds: number = 0;\n\n        if (hoursOnly) {\n            hours = Number(hoursOnly[1]);\n        } else if (hoursAndMinutes) {\n            hours = Number(hoursAndMinutes[1]);\n            minutes = Number(hoursAndMinutes[2]);\n        } else if (hoursAndMinutesAndSeconds) {\n            hours = Number(hoursAndMinutesAndSeconds[1]);\n            minutes = Number(hoursAndMinutesAndSeconds[2]);\n            seconds = Number(hoursAndMinutesAndSeconds[3]);\n        }\n        // const timestamp: number = Date.parse(fullDateString);\n        const resultDate: Date = new Date(1970, 0, 1, hours, minutes, seconds);\n        // tslint:enable no-magic-numbers\n\n        return isNaN(resultDate.getTime()) ? undefined : resultDate;\n    }\n\n    private getNumberWithLeadingZero(digit: number): string {\n        const MAX_DIGIT_WITH_LEADING_ZERO: number = 9;\n\n        return digit > MAX_DIGIT_WITH_LEADING_ZERO ? `${digit}` : `0${digit}`;\n    }\n\n    private getTimeDigitsFromDate(dateVal: Date): { hours: number; minutes: number; seconds: number } {\n        return {\n            hours: dateVal.getHours(),\n            minutes: dateVal.getMinutes(),\n            seconds: dateVal.getSeconds()\n        };\n    }\n\n    private parseValidator(): ValidationErrors | null {\n        return this.currentDateTimeInput === undefined ?\n            { mcTimepickerParse: { text: this.elementRef.nativeElement.value } } :\n            null;\n    }\n\n    private minTimeValidator(): ValidationErrors | null {\n\n        if (this.currentDateTimeInput !== undefined &&\n            this.minDateTime !== undefined &&\n            this.isTimeLowerThenMin(this.currentDateTimeInput)) {\n            return { mcTimepickerLowerThenMintime: { text: this.elementRef.nativeElement.value } };\n        }\n\n        return null;\n    }\n\n    private maxTimeValidator(): ValidationErrors | null {\n        if (this.currentDateTimeInput !== undefined &&\n            this.maxDateTime !== undefined &&\n            this.isTimeGreaterThenMax(this.currentDateTimeInput)) {\n            return { mcTimepickerHigherThenMaxtime: { text: this.elementRef.nativeElement.value } };\n        }\n\n        return null;\n    }\n\n    private isTimeLowerThenMin(timeToCompare: Date): boolean {\n        return timeToCompare.getTime() - (<Date> this.minDateTime).getTime() < 0;\n    }\n\n    private isTimeGreaterThenMax(timeToCompare: Date): boolean {\n        return timeToCompare.getTime() - (<Date> this.maxDateTime).getTime() >= 0;\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\n\nimport { A11yModule } from '@ptsecurity/cdk/a11y';\nimport { PlatformModule } from '@ptsecurity/cdk/platform';\n\nimport { McTimepicker } from './timepicker';\n\n\n@NgModule({\n    imports: [\n        CommonModule,\n        A11yModule,\n        PlatformModule,\n        FormsModule\n    ],\n    declarations: [\n        McTimepicker\n    ],\n    exports: [\n        McTimepicker\n    ]\n})\nexport class McTimepickerModule {}\n"],"names":["__extends","d","b","__","this","constructor","extendStatics","prototype","Object","create","__decorate","decorators","target","key","desc","c","arguments","length","r","getOwnPropertyDescriptor","Reflect","decorate","i","defineProperty","__param","paramIndex","decorator","__metadata","metadataKey","metadataValue","metadata","setPrototypeOf","__proto__","Array","p","hasOwnProperty","TimeParts","TimeFormats","TIMEFORMAT_PLACEHOLDERS","_a","HHmmss","HHmm","DEFAULT_TIME_FORMAT","HOURS_MINUTES_SECONDS_REGEXP","RegExp","HOURS_MINUTES_REGEXP","HOURS_ONLY_REGEXP","uniqueComponentIdSuffix","formValidators","WeakMap","formValidatorOnChangeRegistrators","validatorOnChange","validatorOnChangeHandler","get","undefined","McTimepickerBase","defaultErrorStateMatcher","parentForm","parentFormGroup","ngControl","McTimepickerMixinBase","mixinErrorState","ɵ1","validate","__validatorOnChangeHandler","set","validator","registerOnValidatorChange","fn","McTimepicker","_super","elementRef","inputValueAccessor","renderer","_this","call","focused","stateChanges","Subject","controlType","uid","_minTime","_maxTime","nativeElement","previousNativeValue","value","onChange","noop","id","placeholder","valueAccessor","control","Validators","compose","parseValidator","minTimeValidator","maxTimeValidator","tslib_1.__extends","McTimepicker_1","disabled","_disabled","coerceBooleanProperty","next","_id","_required","applyInputChanges","_timeFormat","formatValue","keys","map","timeFormatKey","indexOf","minValue","minDateTime","getDateFromTimeString","maxValue","maxDateTime","ngOnChanges","ngOnDestroy","complete","ngDoCheck","updateErrorState","dirtyCheckNativeValue","focus","focusChanged","isFocused","onTouched","onBlur","onPaste","$event","preventDefault","clipboardUserInput","clipboardData","getData","onInput","initialCursorStart","selectionStart","initialCursorEnd","selectionEnd","isAutocompleteTriggered","getParsedTimeParts","hoursOnly","hoursAndMinutes","hoursAndMinutesAndSeconds","doTimestringReformat","errors","createSelectionOfTimeComponentInInput","isBadInput","onContainerClick","writeValue","setProperty","getTimeStringFromDate","timeFormat","onKeyDown","event","keyCode","getKeyCode","upDownTimeByArrowKeys","switchSelectionBetweenTimeparts","registerOnChange","registerOnTouched","newValue","validity","badInput","applyParams","changedTime","timeToApply","currentDateTimeInput","updateValueAndValidity","result","cursorPos","modifiedTimePart","getTimeEditMetrics","incrementTime","decrementTime","getCursorPositionOfPrevTimePartStart","getCursorPositionOfNextTimePartStart","code","setTimeout","newEditParams","cursorStartPosition","cursorEndPosition","dateVal","whatToIncrement","seconds","getTimeDigitsFromDate","hours","minutes","getDateFromTimeDigits","whatToDecrement","timeString","timeDevider","nextDividerPos","cursorPosition","minutesIndex","hoursIndex","secondsIndex","tempVal","getNumberWithLeadingZero","getHours","getMinutes","getSeconds","match","trim","Number","resultDate","Date","isNaN","getTime","digit","mcTimepickerParse","text","isTimeLowerThenMin","mcTimepickerLowerThenMintime","isTimeGreaterThenMax","mcTimepickerHigherThenMaxtime","timeToCompare","tslib_1.__decorate","Input","tslib_1.__metadata","ErrorStateMatcher","Directive","selector","exportAs","host","class","[attr.id]","[attr.placeholder]","[disabled]","[required]","[attr.time-format]","[attr.min-time]","[attr.max-time]","[attr.value]","[attr.aria-invalid]","(blur)","(focus)","(input)","(paste)","(keydown)","providers","provide","NG_VALIDATORS","useValue","multi","McFormFieldControl","useExisting","forwardRef","tslib_1.__param","Optional","Self","Inject","MC_INPUT_VALUE_ACCESSOR","ElementRef","NgControl","NgForm","FormGroupDirective","Renderer2","McTimepickerModule","NgModule","imports","CommonModule","A11yModule","PlatformModule","FormsModule","declarations","exports"],"mappings":"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"}