{"version":3,"file":"mosaic-timepicker.umd.min.js","sources":["../../node_modules/tslib/tslib.es6.js","../../src/lib/timepicker/timepicker.constants.ts","../../src/lib/timepicker/timepicker.ts","../../src/lib/timepicker/timepicker.module.ts"],"sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","export enum TimeParts {\n    hours,\n    minutes,\n    seconds\n}\n\nexport enum TimeFormats {\n    HHmmss = 'HH:mm:ss',\n    HHmm = 'HH:mm'\n}\n\nexport const TIMEFORMAT_PLACEHOLDERS: { [timeFormat: string]: string } = {\n    'hh:mm:ss': '  :  :  ',\n    'hh:mm': '  :  '\n};\n\nexport const DEFAULT_TIME_FORMAT: TimeFormats = TimeFormats.HHmm;\n\nexport const HOURS_MINUTES_SECONDS_REGEXP =\n    new RegExp(/^([0-9]|0[0-9]|1[0-9]|2[0-3]):([0-5][0-9]|[0-9]):([0-5][0-9]|[0-9])?$/);\nexport const HOURS_MINUTES_REGEXP = /^([0-9]|0[0-9]|1[0-9]|2[0-3]):([0-5][0-9]|[0-9])?$/;\nexport const HOURS_ONLY_REGEXP = /^([0-9]|0[0-9]|1[0-9]|2[0-3]):?$/;\n\nexport const SECONDS_PER_MINUTE: number = 59;\nexport const MINUTES_PER_HOUR: number = 59;\nexport const HOURS_PER_DAY: number = 23;\n\n// TODO Move it to common CDK\nexport const ARROW_UP_KEYCODE: string = 'ArrowUp';\nexport const ARROW_DOWN_KEYCODE: string = 'ArrowDown';\nexport const ARROW_LEFT_KEYCODE: string = 'ArrowLeft';\nexport const ARROW_RIGHT_KEYCODE: string = 'ArrowRight';\n","import {\n    Directive,\n    DoCheck,\n    ElementRef,\n    forwardRef,\n    Inject,\n    InjectionToken,\n    Input,\n    OnChanges,\n    OnDestroy,\n    Optional,\n    Renderer2,\n    Self\n} from '@angular/core';\nimport {\n    ControlValueAccessor,\n    FormControl,\n    FormGroupDirective,\n    NG_VALIDATORS,\n    NgControl,\n    NgForm,\n    ValidationErrors,\n    ValidatorFn,\n    Validators\n} from '@angular/forms';\nimport {\n    noop,\n    Subject\n} from 'rxjs';\n\nimport { coerceBooleanProperty } from '@ptsecurity/cdk/coercion';\nimport {\n    CanUpdateErrorState,\n    CanUpdateErrorStateCtor,\n    ErrorStateMatcher,\n    mixinErrorState\n} from '@ptsecurity/mosaic/core';\nimport { McFormFieldControl } from '@ptsecurity/mosaic/form-field';\n\nimport {\n    ARROW_DOWN_KEYCODE,\n    ARROW_LEFT_KEYCODE,\n    ARROW_RIGHT_KEYCODE,\n    ARROW_UP_KEYCODE,\n    DEFAULT_TIME_FORMAT,\n    HOURS_PER_DAY,\n    HOURS_MINUTES_REGEXP,\n    HOURS_MINUTES_SECONDS_REGEXP,\n    HOURS_ONLY_REGEXP,\n    MINUTES_PER_HOUR,\n    SECONDS_PER_MINUTE,\n    TIMEFORMAT_PLACEHOLDERS,\n    TimeFormats,\n    TimeParts\n} from './timepicker.constants';\n\n\nlet _uniqueComponentIdSuffix: number = 0;\nlet _validatorOnChange: () => void = noop;\nlet _validator: ValidatorFn | null = () => null;\n\nexport const MC_INPUT_VALUE_ACCESSOR =\n    new InjectionToken<{ value: any }>('MC_INPUT_VALUE_ACCESSOR');\n\nexport class McTimepickerBase {\n    constructor(\n        public _defaultErrorStateMatcher: ErrorStateMatcher,\n        public _parentForm: NgForm,\n        public _parentFormGroup: FormGroupDirective,\n        public ngControl: NgControl) { }\n}\n\nexport const McTimepickerMixinBase:\n    CanUpdateErrorStateCtor &\n    typeof McTimepickerBase = mixinErrorState(McTimepickerBase);\n\n@Directive({\n    selector: 'input[mcTimepicker]',\n    exportAs: 'mcTimepickerInput',\n    host: {\n        class: 'mc-timepicker mc-input',\n        // Native input properties that are overwritten by Angular inputs need to be synced with\n        // the native input element. Otherwise property bindings for those don't work.\n        '[attr.id]': 'id',\n        '[attr.placeholder]': 'placeholder',\n        '[disabled]': 'disabled',\n        '[required]': 'required',\n        '[attr.time-format]': 'timeFormat',\n        '[attr.min-time]': 'minTime',\n        '[attr.max-time]': 'maxTime',\n        '[attr.value]': 'value',\n        '(blur)': 'onBlur()',\n        '(focus)': 'focusChanged(true)',\n        '(input)': 'onInput()',\n        '(paste)': 'onPaste($event)',\n        '(keydown)': 'onKeyDown($event)'\n    },\n    providers: [\n        {\n            provide: NG_VALIDATORS,\n            useValue: {\n                validate(c) { return _validator ? _validator(c) : null; },\n                registerOnValidatorChange(fn: () => void): void { _validatorOnChange = fn; }\n            },\n            multi: true\n        },\n        {\n            provide: McFormFieldControl,\n            useExisting: forwardRef(() => McTimepicker)\n        }\n    ]\n\n})\nexport class McTimepicker extends McTimepickerMixinBase\n    implements McFormFieldControl<any>,\n        OnChanges,\n        OnDestroy,\n        DoCheck,\n        CanUpdateErrorState,\n        ControlValueAccessor {\n\n    /** An object used to control when error messages are shown. */\n    @Input() errorStateMatcher: ErrorStateMatcher;\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    focused: boolean = false;\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    readonly stateChanges: Subject<void> = new Subject<void>();\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    controlType: string = 'mc-timepicker';\n\n    @Input()\n    get disabled(): boolean {\n        if (this.ngControl && this.ngControl.disabled !== null) { return this.ngControl.disabled; }\n\n        return this._disabled;\n    }\n\n    set disabled(value: boolean) {\n        this._disabled = coerceBooleanProperty(value);\n\n        // Browsers may not fire the blur event if the input is disabled too quickly.\n        // Reset from here to ensure that the element doesn't become stuck.\n        if (this.focused) {\n            this.focused = false;\n        }\n\n        this.stateChanges.next();\n    }\n\n    @Input()\n    get id(): string { return this._id; }\n\n    set id(value: string) { this._id = value || this._uid; }\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    @Input() placeholder: string;\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    @Input()\n    get required(): boolean { return this._required; }\n\n    set required(value: boolean) { this._required = coerceBooleanProperty(value); }\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    @Input()\n    get value(): string { return this._inputValueAccessor.value; }\n\n    set value(value: string) {\n        if (value !== this.value) {\n            this._inputValueAccessor.value = value;\n            this._applyInputChanges();\n        }\n    }\n\n    @Input('time-format')\n    get timeFormat(): TimeFormats { return this._timeFormat; }\n\n    set timeFormat(formatValue: TimeFormats) {\n        this._timeFormat = Object\n            .keys(TimeFormats)\n            .map((timeFormatKey) => TimeFormats[timeFormatKey])\n            .indexOf(formatValue) > -1 ? formatValue : DEFAULT_TIME_FORMAT;\n\n        _validatorOnChange();\n        this.placeholder = TIMEFORMAT_PLACEHOLDERS[this._timeFormat.toLowerCase()];\n    }\n\n    @Input('min-time')\n    get minTime(): string | null { return this._minTime; }\n\n    set minTime(minValue: string | null) {\n        this._minTime = minValue;\n        this._minDTime = minValue !== null ? this._getDateFromTimeString(minValue) : undefined;\n        _validatorOnChange();\n    }\n\n    @Input('max-time')\n    get maxTime(): string | null { return this._maxTime; }\n\n    set maxTime(maxValue: string | null) {\n        this._maxTime = maxValue;\n        this._maxDTime = maxValue !== null ? this._getDateFromTimeString(maxValue) : undefined;\n        _validatorOnChange();\n    }\n\n    private _id: string;\n    private readonly _uid = `mc-timepicker-${_uniqueComponentIdSuffix++}`;\n    private _disabled: boolean;\n    private _required: boolean;\n    private _previousNativeValue: any;\n    private readonly _inputValueAccessor: { value: any };\n    private _onChange: (value: any) => void;\n    private _onTouched: () => void;\n    private _timeFormat: TimeFormats;\n    private _minTime: string | null = null;\n    private _minDTime: Date | undefined;\n    private _maxTime: string | null = null;\n    private _maxDTime: Date | undefined;\n    private _currentDTimeInput: Date | undefined;\n\n    constructor(private readonly _elementRef: ElementRef,\n                @Optional() @Self() public ngControl: NgControl,\n                @Optional() _parentForm: NgForm,\n                @Optional() _parentFormGroup: FormGroupDirective,\n                _defaultErrorStateMatcher: ErrorStateMatcher,\n                @Optional() @Self() @Inject(MC_INPUT_VALUE_ACCESSOR) inputValueAccessor: any,\n                private readonly _renderer: Renderer2) {\n        super(_defaultErrorStateMatcher, _parentForm, _parentFormGroup, ngControl);\n\n        // If no input value accessor was explicitly specified, use the element as the input value\n        // accessor.\n        this._inputValueAccessor = inputValueAccessor || this._elementRef.nativeElement;\n\n        this._previousNativeValue = this.value;\n        this._onChange = noop;\n\n        // Force setter to be called in case id was not specified.\n        this.id = this.id;\n\n        // Instead of NG_VALUE_ACCESSOR (https://github.com/angular/material2/issues/8158#issuecomment-344618103)\n        if (this.ngControl) { this.ngControl.valueAccessor = this; }\n\n        // Substitute initial empty validator with validator linked to directive object instance (workaround)\n        _validator = Validators.compose([\n            () => this._parseValidator(),\n            () => this._minTimeValidator(),\n            () => this._maxTimeValidator()\n        ]);\n    }\n\n    ngOnChanges(): void {\n        this.stateChanges.next();\n    }\n\n    ngOnDestroy(): void {\n        this.stateChanges.complete();\n    }\n\n    ngDoCheck(): void {\n        if (this.ngControl) {\n            // We need to re-evaluate this on every change detection cycle, because there are some\n            // error triggers that we can't subscribe to (e.g. parent form submissions). This means\n            // that whatever logic is in here has to be super lean or we risk destroying the performance.\n            this.updateErrorState();\n        }\n\n        // We need to dirty-check the native element's value, because there are some cases where\n        // we won't be notified when it changes (e.g. the consumer isn't using forms or they're\n        // updating the value using `emitEvent: false`).\n        this._dirtyCheckNativeValue();\n    }\n\n    focus(): void {\n        this._elementRef.nativeElement.focus();\n    }\n\n    focusChanged(isFocused: boolean): void {\n        if (isFocused !== this.focused) {\n            this.focused = isFocused;\n            this._onTouched();\n            this.stateChanges.next();\n        }\n    }\n\n    onBlur() {\n        this._applyInputChanges();\n        this.focusChanged(false);\n    }\n\n    onPaste($event) {\n        $event.preventDefault();\n        const clipboardUserInput: string = $event.clipboardData.getData('text');\n\n        if (this._getDateFromTimeString(clipboardUserInput) === undefined) { return; }\n\n        this._elementRef.nativeElement.value = clipboardUserInput;\n        this.onInput();\n    }\n\n    onInput() {\n        const initialCursorStart: number = this._elementRef.nativeElement.selectionStart;\n        const initialCursorEnd: number = this._elementRef.nativeElement.selectionEnd;\n        let isAutocompleteTriggered: boolean = false;\n\n        const {\n            hoursOnly,\n            hoursAndMinutes,\n            hoursAndMinutesAndSeconds\n        } = this._getParsedTimeParts(this._elementRef.nativeElement.value);\n\n        // tslint:disable no-magic-numbers\n        if (hoursOnly &&\n            hoursOnly[1] &&\n            hoursOnly[1].length === 2) {\n            isAutocompleteTriggered = true;\n        } else if (hoursAndMinutes &&\n            hoursAndMinutes[1].length === 1 &&\n            hoursAndMinutes[2] &&\n            hoursAndMinutes[2].length === 2) {\n            isAutocompleteTriggered = true;\n        } else if (hoursAndMinutesAndSeconds &&\n            hoursAndMinutesAndSeconds[1].length === 2 &&\n            hoursAndMinutesAndSeconds[2].length === 2 &&\n            hoursAndMinutesAndSeconds[3] &&\n            hoursAndMinutesAndSeconds[3].length === 2) {\n            isAutocompleteTriggered = true;\n        }\n        // tslint:enable no-magic-numbers\n\n        this._applyInputChanges({ doTimestringReformat: isAutocompleteTriggered });\n\n        this._elementRef.nativeElement.selectionStart = initialCursorStart;\n        this._elementRef.nativeElement.selectionEnd = initialCursorEnd;\n\n        if (isAutocompleteTriggered && this.ngControl.errors === null) {\n            this._createSelectionOfTimeComponentInInput(initialCursorStart + 1);\n        }\n    }\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    get empty(): boolean {\n        return !this._elementRef.nativeElement.value && !this._isBadInput();\n    }\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    onContainerClick() {\n        this.focus();\n    }\n\n    writeValue(value: Date | null): void {\n        if (value !== null) {\n            this._renderer.setProperty(this._elementRef.nativeElement,\n                'value',\n                this._getTimeStringFromDate(value, this.timeFormat)\n            );\n        }\n        this._onChange(value || null);\n        this._applyInputChanges();\n    }\n\n    onKeyDown(event: KeyboardEvent): void {\n\n        const keyCode: string = this._getKeyCode(event);\n\n        if (keyCode === ARROW_UP_KEYCODE || keyCode === ARROW_DOWN_KEYCODE) {\n            this._upDownTimeByArrowKeys(event);\n        }\n        if (keyCode === ARROW_LEFT_KEYCODE || keyCode === ARROW_RIGHT_KEYCODE) {\n            this._switchSelectionBetweenTimeparts(event);\n        }\n    }\n\n    registerOnChange(fn: (value: Date) => void): void {\n        this._onChange = fn;\n    }\n\n    registerOnTouched(fn: () => void): void {\n        this._onTouched = fn;\n    }\n\n    /** Does some manual dirty checking on the native input `value` property. */\n    private _dirtyCheckNativeValue() {\n        const newValue = this.value;\n\n        if (this._previousNativeValue !== newValue) {\n            this._previousNativeValue = newValue;\n            this.stateChanges.next();\n        }\n    }\n\n    /** Checks whether the input is invalid based on the native validation. */\n    private _isBadInput(): boolean {\n        const validity = (<HTMLInputElement> this._elementRef.nativeElement).validity;\n\n        return validity && validity.badInput;\n    }\n\n    private _applyInputChanges(applyParams: {\n        changedTime?: Date;\n        doTimestringReformat?: boolean;\n    } = {}): void {\n        const { changedTime, doTimestringReformat = true } = applyParams;\n\n        const timeToApply: Date | undefined = changedTime ||\n            this._getDateFromTimeString(this._elementRef.nativeElement.value);\n        this._currentDTimeInput = timeToApply;\n\n        if (doTimestringReformat && timeToApply !== undefined) {\n            this._renderer.setProperty(\n                this._elementRef.nativeElement,\n                'value',\n                this._getTimeStringFromDate(timeToApply, this.timeFormat));\n        }\n\n        (<FormControl> this.ngControl.control).updateValueAndValidity();\n        const result = this.ngControl.errors === null && timeToApply !== undefined ? timeToApply : null;\n        this._onChange(result);\n        this.stateChanges.next();\n    }\n\n    private _upDownTimeByArrowKeys(event: KeyboardEvent): void {\n        event.preventDefault();\n\n        let changedTime: Date | undefined = this._currentDTimeInput;\n        if (changedTime !== undefined) {\n            const cursorPos = this._elementRef.nativeElement.selectionStart;\n\n            const modifiedTimePart = this._getTimeEditMetrics(cursorPos)\n                .modifiedTimePart;\n            const keyCode: string = this._getKeyCode(event);\n            if (keyCode === ARROW_UP_KEYCODE) { changedTime = this._incrementTime(changedTime, modifiedTimePart); }\n            if (keyCode === ARROW_DOWN_KEYCODE) { changedTime = this._decrementTime(changedTime, modifiedTimePart); }\n            this._applyInputChanges({ changedTime });\n            this._createSelectionOfTimeComponentInInput(cursorPos);\n        }\n    }\n\n    private _switchSelectionBetweenTimeparts(event: KeyboardEvent): void {\n        const changedTime: Date | undefined = this._currentDTimeInput;\n        const keyCode: string = this._getKeyCode(event);\n\n        if (changedTime !== undefined) {\n            let cursorPos: number = this._elementRef.nativeElement.selectionStart;\n            if (keyCode === ARROW_LEFT_KEYCODE) {\n                cursorPos = this._getCursorPositionOfPrevTimePartStart(cursorPos, this._elementRef.nativeElement.value);\n            } else if (keyCode === ARROW_RIGHT_KEYCODE) {\n                cursorPos = this._getCursorPositionOfNextTimePartStart(cursorPos, this._elementRef.nativeElement.value);\n            }\n            this._createSelectionOfTimeComponentInInput(cursorPos);\n        }\n    }\n\n    /**\n     * @description Microsoft EDGE doesn't support KeyboaedEvent.code thus we need this helper\n     */\n    private _getKeyCode(event: KeyboardEvent): string {\n        return event.code || event.key;\n    }\n\n    private _createSelectionOfTimeComponentInInput(cursorPos: number): void {\n        setTimeout(() => {\n            const newEditParams = this._getTimeEditMetrics(cursorPos);\n            this._elementRef.nativeElement.selectionStart = newEditParams.cursorStartPosition;\n            this._elementRef.nativeElement.selectionEnd = newEditParams.cursorEndPosition;\n        });\n    }\n\n    private _incrementTime(dateVal: Date,\n                           whatToIncrement: TimeParts = TimeParts.seconds): Date {\n        let { hours, minutes, seconds } = this._getTimeDigitsFromDate(dateVal);\n\n        switch (whatToIncrement) {\n            case TimeParts.hours:\n                hours++;\n                break;\n            case TimeParts.minutes:\n                minutes++;\n                break;\n            case TimeParts.seconds:\n                seconds++;\n                break;\n            default:\n        }\n\n        if (seconds > SECONDS_PER_MINUTE) { seconds = 0; }\n\n        if (minutes > MINUTES_PER_HOUR) { minutes = 0; }\n\n        if (hours > HOURS_PER_DAY) { hours = 0; }\n\n        return <Date> this._getDateFromTimeDigits(hours, minutes, seconds);\n    }\n\n    /**\n     * @description Decrement part of time\n     */\n    private _decrementTime(dateVal: Date,\n                           whatToDecrement: TimeParts = TimeParts.seconds): Date {\n        let { hours, minutes, seconds } = this._getTimeDigitsFromDate(dateVal);\n\n        switch (whatToDecrement) {\n            case TimeParts.hours:\n                hours--;\n                break;\n            case TimeParts.minutes:\n                minutes--;\n                break;\n            case TimeParts.seconds:\n                seconds--;\n                break;\n            default:\n        }\n\n        if (seconds < 0) { seconds = SECONDS_PER_MINUTE; }\n\n        if (minutes < 0) { minutes = MINUTES_PER_HOUR; }\n\n        if (hours < 0) { hours = HOURS_PER_DAY; }\n\n        return <Date> this._getDateFromTimeDigits(hours, minutes, seconds);\n    }\n\n    private _getCursorPositionOfPrevTimePartStart(cursorPos: number, timeString: string): number {\n        return cursorPos === 0 ? timeString.length : cursorPos - 1;\n    }\n\n    private _getCursorPositionOfNextTimePartStart(cursorPos: number,\n                                                  timeString: string,\n                                                  timeDevider: string = ':'): number {\n        const nextDividerPos: number = timeString.indexOf(timeDevider, cursorPos);\n\n        return nextDividerPos !== undefined ? nextDividerPos + 1 : 0;\n    }\n\n    /**\n     * @description Get params for arrow-keys (up/down) time valie edit.\n     * @param cursorPosition Current cursor position in timeString\n     */\n    private _getTimeEditMetrics(cursorPosition: number): {\n        modifiedTimePart: TimeParts;\n        cursorStartPosition: number;\n        cursorEndPosition: number;\n    } {\n        const timeString: string = this._elementRef.nativeElement.value;\n        let modifiedTimePart: TimeParts;\n        let cursorStartPosition: number;\n        let cursorEndPosition: number;\n        const hoursIndex = 0;\n        const minutesIndex = timeString.indexOf(':', hoursIndex + 1);\n        const secondsIndex = minutesIndex !== -1 ? timeString.indexOf(':', minutesIndex + 1) : -1;\n\n        if (secondsIndex !== -1 && cursorPosition > secondsIndex) {\n            modifiedTimePart = TimeParts.seconds;\n            cursorStartPosition = secondsIndex + 1;\n            cursorEndPosition = timeString.length;\n        } else if (minutesIndex !== -1 && cursorPosition > minutesIndex) {\n            modifiedTimePart = TimeParts.minutes;\n            cursorStartPosition = minutesIndex + 1;\n            cursorEndPosition = secondsIndex > -1 ? secondsIndex : timeString.length;\n        } else {\n            modifiedTimePart = TimeParts.hours;\n            cursorStartPosition = hoursIndex;\n            cursorEndPosition = minutesIndex !== -1 ? minutesIndex : timeString.length;\n        }\n\n        return {\n            modifiedTimePart,\n            cursorStartPosition,\n            cursorEndPosition\n        };\n    }\n\n    /**\n     * @description Create time string for displaying inside input element of UI\n     */\n    private _getTimeStringFromDate(tempVal: Date,\n                                   timeFormat: TimeFormats = DEFAULT_TIME_FORMAT): string {\n        const hours: string = this._getNumberWithLeadingZero(tempVal.getHours());\n        const minutes: string = this._getNumberWithLeadingZero(tempVal.getMinutes());\n        const seconds: string = this._getNumberWithLeadingZero(tempVal.getSeconds());\n\n        const formattedTimeGenerators = {\n            [TimeFormats.HHmm]: () => `${hours}:${minutes}`,\n            [TimeFormats.HHmmss]: () => `${hours}:${minutes}:${seconds}`\n        };\n\n        return formattedTimeGenerators[timeFormat]();\n    }\n\n    private _getParsedTimeParts(timeString: string): {\n        hoursOnly: any;\n        hoursAndMinutes: any;\n        hoursAndMinutesAndSeconds: any;\n    } {\n        const hoursAndMinutesAndSeconds = timeString.match(HOURS_MINUTES_SECONDS_REGEXP);\n        const hoursAndMinutes = timeString.match(HOURS_MINUTES_REGEXP);\n        const hoursOnly = timeString.match(HOURS_ONLY_REGEXP);\n\n        return {\n            hoursOnly,\n            hoursAndMinutes,\n            hoursAndMinutesAndSeconds\n        };\n    }\n\n    /**\n     * @description Create Date object from separate parts of time\n     */\n    private _getDateFromTimeDigits(hours: number, minutes: number, seconds: number = 0): Date | undefined {\n        return this._getDateFromTimeString(`${hours}:${minutes}:${seconds}`);\n    }\n\n    private _getDateFromTimeString(timeString: string | undefined): Date | undefined {\n        // TODO Use moment-js\n        if (timeString === undefined) { return; }\n\n        const {\n            hoursOnly,\n            hoursAndMinutes,\n            hoursAndMinutesAndSeconds\n        } = this._getParsedTimeParts(timeString);\n\n        if (timeString.trim().length === 0 ||\n            hoursOnly === null && hoursAndMinutes === null && hoursAndMinutesAndSeconds === null) {\n            return;\n        }\n\n        // tslint:disable no-magic-numbers\n        let hours: number = 0;\n        let minutes: number = 0;\n        let seconds: number = 0;\n\n        if (hoursOnly) {\n            hours = Number(hoursOnly[1]);\n        } else if (hoursAndMinutes) {\n            hours = Number(hoursAndMinutes[1]);\n            minutes = Number(hoursAndMinutes[2]);\n        } else if (hoursAndMinutesAndSeconds) {\n            hours = Number(hoursAndMinutesAndSeconds[1]);\n            minutes = Number(hoursAndMinutesAndSeconds[2]);\n            seconds = Number(hoursAndMinutesAndSeconds[3]);\n        }\n        // const timestamp: number = Date.parse(fullDateString);\n        const resultDate: Date = new Date(1970, 0, 1, hours, minutes, seconds);\n        // tslint:enable no-magic-numbers\n\n        return isNaN(resultDate.getTime()) ? undefined : resultDate;\n    }\n\n    private _getNumberWithLeadingZero(digit: number): string {\n        const MAX_DIGIT_WITH_LEADING_ZERO: number = 9;\n\n        return digit > MAX_DIGIT_WITH_LEADING_ZERO ? `${digit}` : `0${digit}`;\n    }\n\n    private _getTimeDigitsFromDate(dateVal: Date): { hours: number; minutes: number; seconds: number } {\n        return {\n            hours: dateVal.getHours(),\n            minutes: dateVal.getMinutes(),\n            seconds: dateVal.getSeconds()\n        };\n    }\n\n    private _parseValidator(): ValidationErrors | null {\n        return this._currentDTimeInput === undefined ?\n            { mcTimepickerParse: { text: this._elementRef.nativeElement.value } } :\n            null;\n    }\n\n    private _minTimeValidator(): ValidationErrors | null {\n\n        if (this._currentDTimeInput !== undefined &&\n            this._minDTime !== undefined &&\n            this._isTimeLowerThenMin(this._currentDTimeInput)) {\n            return { mcTimepickerLowerThenMintime: { text: this._elementRef.nativeElement.value } };\n        }\n\n        return null;\n    }\n\n    private _maxTimeValidator(): ValidationErrors | null {\n        if (this._currentDTimeInput !== undefined &&\n            this._maxDTime !== undefined &&\n            this._isTimeGreaterThenMax(this._currentDTimeInput)) {\n            return { mcTimepickerHigherThenMaxtime: { text: this._elementRef.nativeElement.value } };\n        }\n\n        return null;\n    }\n\n    private _isTimeLowerThenMin(timeToCompare: Date): boolean {\n        return timeToCompare.getTime() - (<Date> this._minDTime).getTime() < 0;\n    }\n\n    private _isTimeGreaterThenMax(timeToCompare: Date): boolean {\n        return timeToCompare.getTime() - (<Date> this._maxDTime).getTime() >= 0;\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\n\nimport { A11yModule } from '@ptsecurity/cdk/a11y';\nimport { PlatformModule } from '@ptsecurity/cdk/platform';\n\nimport { McTimepicker } from './timepicker';\n\n\n@NgModule({\n    imports: [\n        CommonModule,\n        A11yModule,\n        PlatformModule,\n        FormsModule\n    ],\n    declarations: [\n        McTimepicker\n    ],\n    exports: [\n        McTimepicker\n    ]\n})\nexport class McTimepickerModule {}\n"],"names":["__extends","d","b","__","this","constructor","extendStatics","prototype","Object","create","__decorate","decorators","target","key","desc","c","arguments","length","r","getOwnPropertyDescriptor","Reflect","decorate","i","defineProperty","__param","paramIndex","decorator","__metadata","metadataKey","metadataValue","metadata","setPrototypeOf","__proto__","Array","p","hasOwnProperty","TimeParts","TimeFormats","TIMEFORMAT_PLACEHOLDERS","hh:mm:ss","hh:mm","DEFAULT_TIME_FORMAT","HHmm","HOURS_MINUTES_SECONDS_REGEXP","RegExp","HOURS_MINUTES_REGEXP","HOURS_ONLY_REGEXP","_uniqueComponentIdSuffix","_validatorOnChange","noop","_validator","MC_INPUT_VALUE_ACCESSOR","InjectionToken","McTimepickerBase","_defaultErrorStateMatcher","_parentForm","_parentFormGroup","ngControl","McTimepickerMixinBase","mixinErrorState","ɵ1","validate","registerOnValidatorChange","fn","McTimepicker","_super","_elementRef","inputValueAccessor","_renderer","_this","call","focused","stateChanges","Subject","controlType","_uid","_minTime","_maxTime","_inputValueAccessor","nativeElement","_previousNativeValue","value","_onChange","id","valueAccessor","Validators","compose","_parseValidator","_minTimeValidator","_maxTimeValidator","tslib_1.__extends","McTimepicker_1","get","disabled","_disabled","set","coerceBooleanProperty","next","_id","_required","_applyInputChanges","_timeFormat","formatValue","keys","map","timeFormatKey","indexOf","placeholder","toLowerCase","minValue","_minDTime","_getDateFromTimeString","undefined","maxValue","_maxDTime","ngOnChanges","ngOnDestroy","complete","ngDoCheck","updateErrorState","_dirtyCheckNativeValue","focus","focusChanged","isFocused","_onTouched","onBlur","onPaste","$event","preventDefault","clipboardUserInput","clipboardData","getData","onInput","initialCursorStart","selectionStart","initialCursorEnd","selectionEnd","isAutocompleteTriggered","_a","_getParsedTimeParts","hoursOnly","hoursAndMinutes","hoursAndMinutesAndSeconds","doTimestringReformat","errors","_createSelectionOfTimeComponentInInput","_isBadInput","onContainerClick","writeValue","setProperty","_getTimeStringFromDate","timeFormat","onKeyDown","event","keyCode","_getKeyCode","_upDownTimeByArrowKeys","_switchSelectionBetweenTimeparts","registerOnChange","registerOnTouched","newValue","validity","badInput","applyParams","changedTime","timeToApply","_currentDTimeInput","control","updateValueAndValidity","result","cursorPos","modifiedTimePart","_getTimeEditMetrics","_incrementTime","_decrementTime","_getCursorPositionOfPrevTimePartStart","_getCursorPositionOfNextTimePartStart","code","setTimeout","newEditParams","cursorStartPosition","cursorEndPosition","dateVal","whatToIncrement","seconds","_getTimeDigitsFromDate","hours","minutes","_getDateFromTimeDigits","whatToDecrement","timeString","timeDevider","nextDividerPos","cursorPosition","minutesIndex","hoursIndex","secondsIndex","tempVal","_getNumberWithLeadingZero","getHours","getMinutes","getSeconds","HHmmss","match","trim","Number","resultDate","Date","isNaN","getTime","digit","mcTimepickerParse","text","_isTimeLowerThenMin","mcTimepickerLowerThenMintime","_isTimeGreaterThenMax","mcTimepickerHigherThenMaxtime","timeToCompare","tslib_1.__decorate","Input","tslib_1.__metadata","ErrorStateMatcher","Directive","selector","exportAs","host","class","[attr.id]","[attr.placeholder]","[disabled]","[required]","[attr.time-format]","[attr.min-time]","[attr.max-time]","[attr.value]","(blur)","(focus)","(input)","(paste)","(keydown)","providers","provide","NG_VALIDATORS","useValue","multi","McFormFieldControl","useExisting","forwardRef","tslib_1.__param","Optional","Self","Inject","ElementRef","NgControl","NgForm","FormGroupDirective","Renderer2","McTimepickerModule","NgModule","imports","CommonModule","A11yModule","PlatformModule","FormsModule","declarations","exports"],"mappings":"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"}