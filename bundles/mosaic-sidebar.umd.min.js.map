{"version":3,"file":"mosaic-sidebar.umd.min.js","sources":["../../packages/mosaic/sidebar/sidebar-animations.ts","../../packages/mosaic/sidebar/sidebar.component.ts","../../packages/mosaic/sidebar/sidebar.module.ts"],"sourcesContent":["import { animate, AnimationTriggerMetadata, state, style, transition, trigger } from '@angular/animations';\n\n\nexport enum McSidebarAnimationState {\n    Opened = 'opened',\n    Closed = 'closed'\n}\n\nexport const mcSidebarAnimations: {\n    readonly sidebarState: AnimationTriggerMetadata;\n} = {\n    sidebarState: trigger('state', [\n        state('opened', style({\n                minWidth: '{{ openedStateMinWidth }}',\n                width: '{{ openedStateWidth }}',\n                maxWidth: '{{ openedStateMaxWidth }}'\n            }),\n            { params: { openedStateMinWidth: '', openedStateWidth: '', openedStateMaxWidth: '' }}\n        ),\n        state('closed', style({\n                minWidth: '{{ closedStateWidth }}',\n                width: '{{ closedStateWidth }}',\n                maxWidth: '{{ closedStateWidth }}'\n            }),\n            { params: { closedStateWidth: '' }}\n        ),\n        transition('opened => closed', [animate('0.1s')]),\n        transition('closed => opened', [animate('0.2s')])\n    ])\n};\n","import {\n    AfterContentInit,\n    ChangeDetectionStrategy,\n    Component,\n    ContentChild,\n    Directive, ElementRef,\n    EventEmitter,\n    Input,\n    NgZone,\n    OnDestroy, OnInit,\n    Output,\n    ViewEncapsulation\n} from '@angular/core';\nimport { isControl, isInput, isLeftBracket, isRightBracket } from '@ptsecurity/cdk/keycodes';\n\nimport { mcSidebarAnimations, McSidebarAnimationState } from './sidebar-animations';\n\n\nexport enum SidebarPositions {\n    Left = 'left',\n    Right = 'right'\n}\n\n// tslint:disable-next-line:naming-convention\ninterface McSidebarParams {\n    openedStateMinWidth: string;\n    openedStateWidth: string;\n    openedStateMaxWidth: string;\n\n    closedStateWidth: string;\n}\n\n\n@Directive({\n    selector: '[mc-sidebar-opened]',\n    exportAs: 'mcSidebarOpened'\n})\nexport class McSidebarOpened {\n    @Input() minWidth: string;\n    @Input() width: string;\n    @Input() maxWidth: string;\n}\n\n@Directive({\n    selector: '[mc-sidebar-closed]',\n    exportAs: 'mcSidebarClosed'\n})\nexport class McSidebarClosed {\n    @Input() width: string;\n}\n\n\n@Component({\n    selector: 'mc-sidebar',\n    exportAs: 'mcSidebar',\n    templateUrl: 'sidebar.component.html',\n    styleUrls: ['./sidebar.css'],\n    host: {\n        class: 'mc-sidebar',\n        '[@state]': `{\n            value: animationState,\n            params: params\n        }`,\n        '(@state.start)': 'onAnimationStart()',\n        '(@state.done)': 'onAnimationDone()'\n    },\n    animations: [mcSidebarAnimations.sidebarState],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class McSidebar implements OnDestroy, OnInit, AfterContentInit {\n    @Input()\n    get opened(): boolean {\n        return this._opened;\n    }\n\n    set opened(value: boolean) {\n        if (this.needSaveAndRestoreWidth && this._opened) {\n            this.saveWidth();\n        }\n\n        this._opened = value;\n    }\n    private _opened: boolean = true;\n\n    @Input() position: SidebarPositions;\n\n    params: McSidebarParams;\n\n    @Output() readonly stateChanged: EventEmitter<boolean> = new EventEmitter<boolean>();\n\n    @ContentChild(McSidebarOpened, { static: false }) openedContent: McSidebarOpened;\n\n    @ContentChild(McSidebarClosed, { static: false }) closedContent: McSidebarClosed;\n\n\n    get animationState(): McSidebarAnimationState {\n        return this._opened ? McSidebarAnimationState.Opened : McSidebarAnimationState.Closed;\n    }\n\n    internalState: boolean = true;\n\n    private needSaveAndRestoreWidth: boolean = false;\n\n    private documentKeydownListener: (event: KeyboardEvent) => void;\n\n    constructor(private ngZone: NgZone, private elementRef: ElementRef) {}\n\n    ngOnInit(): void {\n        if (this.position === SidebarPositions.Left || this.position === SidebarPositions.Right) {\n            this.registerKeydownListener();\n        }\n    }\n\n    ngOnDestroy(): void {\n        if (this.position === SidebarPositions.Left || this.position === SidebarPositions.Right) {\n            this.unRegisterKeydownListener();\n        }\n    }\n\n    toggle(): void {\n        this.opened = !this.opened;\n    }\n\n    onAnimationStart() {\n        if (this._opened) {\n            this.internalState = this._opened;\n        }\n    }\n\n    onAnimationDone() {\n        this.internalState = this._opened;\n\n        this.stateChanged.emit(this._opened);\n    }\n\n    ngAfterContentInit(): void {\n        if (!this.openedContent.width) {\n            this.needSaveAndRestoreWidth = true;\n        }\n\n        this.params = {\n            openedStateWidth: this.openedContent.width || 'inherit',\n            openedStateMinWidth: this.openedContent.minWidth || 'inherit',\n            openedStateMaxWidth: this.openedContent.maxWidth || 'inherit',\n\n            closedStateWidth: this.closedContent.width || '32px'\n        };\n    }\n\n    private registerKeydownListener(): void {\n        this.documentKeydownListener = (event) => {\n            if (isControl(event) || isInput(event)) { return; }\n\n            if (\n                (this.position === SidebarPositions.Left && isLeftBracket(event)) ||\n                (this.position === SidebarPositions.Right && isRightBracket(event))\n            ) {\n                this.ngZone.run(() => this._opened = !this._opened);\n            }\n        };\n\n        this.ngZone.runOutsideAngular(() => {\n            // tslint:disable-next-line: no-unbound-method\n            document.addEventListener('keypress', this.documentKeydownListener, true);\n        });\n    }\n\n    private unRegisterKeydownListener(): void {\n        // tslint:disable-next-line: no-unbound-method\n        document.removeEventListener('keypress', this.documentKeydownListener, true);\n    }\n\n    private saveWidth() {\n        this.params.openedStateWidth = `${this.elementRef.nativeElement.offsetWidth}px`;\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { McSidebar, McSidebarClosed, McSidebarOpened } from './sidebar.component';\n\n\n@NgModule({\n    imports: [CommonModule],\n    declarations: [\n        McSidebarClosed,\n        McSidebarOpened,\n        McSidebar\n    ],\n    exports: [\n        McSidebarClosed,\n        McSidebarOpened,\n        McSidebar\n    ]\n})\nexport class McSidebarModule {}\n"],"names":["Opened","Closed","mcSidebarAnimations","sidebarState","trigger","state","style","minWidth","width","maxWidth","params","openedStateMinWidth","openedStateWidth","openedStateMaxWidth","closedStateWidth","transition","animate","Left","Right","McSidebarOpened","type","Directive","args","selector","exportAs","Input","McSidebarClosed","McSidebar","ngZone","elementRef","this","_opened","stateChanged","EventEmitter","internalState","needSaveAndRestoreWidth","Object","defineProperty","prototype","value","saveWidth","McSidebarAnimationState","ngOnInit","position","SidebarPositions","registerKeydownListener","ngOnDestroy","unRegisterKeydownListener","toggle","opened","onAnimationStart","onAnimationDone","emit","ngAfterContentInit","openedContent","closedContent","_this","documentKeydownListener","event","isControl","isInput","isLeftBracket","isRightBracket","run","runOutsideAngular","document","addEventListener","removeEventListener","nativeElement","offsetWidth","Component","template","styles","host","class","[@state]","(@state.start)","(@state.done)","animations","encapsulation","ViewEncapsulation","None","changeDetection","ChangeDetectionStrategy","OnPush","NgZone","ElementRef","Output","ContentChild","static","McSidebarModule","NgModule","imports","CommonModule","declarations","exports"],"mappings":"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"}