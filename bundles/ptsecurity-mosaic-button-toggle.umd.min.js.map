{"version":3,"sources":["../../../node_modules/tslib/tslib.es6.js","ng://@ptsecurity/mosaic/button-toggle/button-toggle.component.ts","ng://@ptsecurity/mosaic/button-toggle/button-toggle.module.ts"],"names":["__read","o","n","m","Symbol","iterator","r","e","i","call","ar","next","done","push","value","error","MC_BUTTON_TOGGLE_GROUP_VALUE_ACCESSOR","provide","NG_VALUE_ACCESSOR","useExisting","forwardRef","McButtonToggleGroup","multi","source","this","_changeDetector","valueChange","EventEmitter","change","_vertical","_multiple","_disabled","controlValueAccessorChangeFn","onTouched","Object","defineProperty","prototype","coerceBooleanProperty","selected","selectionModel","multiple","map","toggle","undefined","newValue","setSelectionByValue","emit","buttonToggles","forEach","markForCheck","ngOnInit","SelectionModel","ngAfterContentInit","_a","select","apply","arguments","length","concat","__spread","filter","checked","disabled","writeValue","registerOnChange","fn","registerOnTouched","setDisabledState","isDisabled","emitChangeEvent","Array","isArray","event","McButtonToggleChange","syncButtonToggle","isUserInput","deselect","isSelected","isPrechecked","rawValue","some","_this","Error","clearSelection","currentValue","selectValue","clear","correspondingOption","find","Directive","args","selector","providers","host","role","class","[class.mc-button-toggle_vertical]","exportAs","ChangeDetectorRef","Input","ContentChildren","McButtonToggle","Output","buttonToggleGroup","changeDetectorRef","focusMonitor","element","isSingleSelector","_checked","type","monitor","nativeElement","ngOnDestroy","group","stopMonitoring","Promise","resolve","then","focus","onToggleClick","newChecked","Component","template","encapsulation","ViewEncapsulation","None","changeDetection","ChangeDetectionStrategy","OnPush","[class.mc-button-toggle-standalone]","decorators","Optional","FocusMonitor","ElementRef","ViewChild","McButton","static","McButtonToggleModule","NgModule","imports","McCommonModule","McButtonModule","exports","declarations"],"mappings":"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","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __createBinding(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (p !== \"default\" && !exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n","import { FocusMonitor } from '@angular/cdk/a11y';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { SelectionModel } from '@angular/cdk/collections';\nimport {\n    AfterContentInit,\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    ContentChildren,\n    Directive,\n    ElementRef,\n    EventEmitter,\n    forwardRef,\n    Input,\n    OnDestroy,\n    OnInit,\n    Optional,\n    Output,\n    QueryList,\n    ViewEncapsulation,\n    ViewChild\n} from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { McButton } from '@ptsecurity/mosaic/button';\n\n\n/** Acceptable types for a button toggle. */\nexport type ToggleType = 'checkbox' | 'radio';\n\n/**\n * Provider Expression that allows mc-button-toggle-group to register as a ControlValueAccessor.\n * This allows it to support [(ngModel)].\n * @docs-private\n */\nexport const MC_BUTTON_TOGGLE_GROUP_VALUE_ACCESSOR: any = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => McButtonToggleGroup),\n    multi: true\n};\n\n/** Change event object emitted by MсButtonToggle. */\nexport class McButtonToggleChange {\n    constructor(\n        /** The MсButtonToggle that emits the event. */\n        public source: McButtonToggle,\n        /** The value assigned to the MсButtonToggle. */\n        public value: any\n    ) {}\n}\n\n/** Exclusive selection button toggle group that behaves like a radio-button group. */\n@Directive({\n    selector: 'mc-button-toggle-group',\n    providers: [MC_BUTTON_TOGGLE_GROUP_VALUE_ACCESSOR],\n    host: {\n        role: 'group',\n        class: 'mc-button-toggle-group',\n        '[class.mc-button-toggle_vertical]': 'vertical'\n    },\n    exportAs: 'mcButtonToggleGroup'\n})\nexport class McButtonToggleGroup implements ControlValueAccessor, OnInit, AfterContentInit {\n\n    /** Whether the toggle group is vertical. */\n    @Input()\n    get vertical(): boolean {\n        return this._vertical;\n    }\n\n    set vertical(value: boolean) {\n        this._vertical = coerceBooleanProperty(value);\n    }\n\n    /** Value of the toggle group. */\n    @Input()\n    get value(): any {\n        const selected = this.selectionModel ? this.selectionModel.selected : [];\n\n        if (this.multiple) {\n            return selected.map((toggle) => toggle.value);\n        }\n\n        return selected[0] ? selected[0].value : undefined;\n    }\n\n    set value(newValue: any) {\n        this.setSelectionByValue(newValue);\n        this.valueChange.emit(this.value);\n    }\n\n    /** Selected button toggles in the group. */\n    get selected(): any {\n        const selected = this.selectionModel.selected;\n\n        return this.multiple ? selected : (selected[0] || null);\n    }\n\n    /** Whether multiple button toggles can be selected. */\n    @Input()\n    get multiple(): boolean {\n        return this._multiple;\n    }\n\n    set multiple(value: boolean) {\n        this._multiple = coerceBooleanProperty(value);\n    }\n\n    /** Child button toggle buttons. */\n    @ContentChildren(forwardRef(() => McButtonToggle)) buttonToggles: QueryList<McButtonToggle>;\n\n    /** Whether multiple button toggle group is disabled. */\n    @Input()\n    get disabled(): boolean {\n        return this._disabled;\n    }\n\n    set disabled(value: boolean) {\n        this._disabled = coerceBooleanProperty(value);\n\n        if (!this.buttonToggles) { return; }\n\n        this.buttonToggles.forEach((toggle) => toggle.markForCheck());\n    }\n\n    /**\n     * Event that emits whenever the value of the group changes.\n     * Used to facilitate two-way data binding.\n     * @docs-private\n     */\n    @Output() readonly valueChange = new EventEmitter<any>();\n\n    /** Event emitted when the group's value changes. */\n    @Output() readonly change: EventEmitter<McButtonToggleChange> = new EventEmitter<McButtonToggleChange>();\n    private _vertical = false;\n    private _multiple = false;\n    private _disabled = false;\n    private selectionModel: SelectionModel<McButtonToggle>;\n\n    /**\n     * Reference to the raw value that the consumer tried to assign. The real\n     * value will exclude any values from this one that don't correspond to a\n     * toggle. Useful for the cases where the value is assigned before the toggles\n     * have been initialized or at the same that they're being swapped out.\n     */\n    private rawValue: any;\n\n    constructor(private _changeDetector: ChangeDetectorRef) {}\n\n    /**\n     * The method to be called in order to update ngModel.\n     * Now `ngModel` binding is not supported in multiple selection mode.\n     */\n    // tslint:disable-next-line:no-empty\n    controlValueAccessorChangeFn: (value: any) => void = () => {};\n\n    /** onTouch function registered via registerOnTouch (ControlValueAccessor). */\n    // tslint:disable-next-line:no-empty\n    onTouched: () => any = () => {};\n\n    ngOnInit() {\n        this.selectionModel = new SelectionModel<McButtonToggle>(this.multiple, undefined, false);\n    }\n\n    ngAfterContentInit() {\n        this.selectionModel.select(...this.buttonToggles.filter((toggle) => toggle.checked));\n        this.disabled = this._disabled;\n    }\n\n    /**\n     * Sets the model value. Implemented as part of ControlValueAccessor.\n     * @param value Value to be set to the model.\n     */\n    writeValue(value: any) {\n        this.value = value;\n        this._changeDetector.markForCheck();\n    }\n\n    // Implemented as part of ControlValueAccessor.\n    registerOnChange(fn: (value: any) => void) {\n        this.controlValueAccessorChangeFn = fn;\n    }\n\n    // Implemented as part of ControlValueAccessor.\n    registerOnTouched(fn: any) {\n        this.onTouched = fn;\n    }\n\n    // Implemented as part of ControlValueAccessor.\n    setDisabledState(isDisabled: boolean): void {\n        this.disabled = isDisabled;\n    }\n\n    /** Dispatch change event with current selection and group value. */\n    emitChangeEvent(): void {\n        const selected = this.selected;\n        const source = Array.isArray(selected) ? selected[selected.length - 1] : selected;\n        const event = new McButtonToggleChange(source, this.value);\n        this.controlValueAccessorChangeFn(event.value);\n        this.change.emit(event);\n    }\n\n    /**\n     * Syncs a button toggle's selected state with the model value.\n     * @param toggle Toggle to be synced.\n     * @param select Whether the toggle should be selected.\n     * @param isUserInput Whether the change was a result of a user interaction.\n     */\n    syncButtonToggle(toggle: McButtonToggle, select: boolean, isUserInput = false) {\n        // Deselect the currently-selected toggle, if we're in single-selection\n        // mode and the button being toggled isn't selected at the moment.\n        if (!this.multiple && this.selected && !toggle.checked) {\n            (this.selected as McButtonToggle).checked = false;\n        }\n\n        if (select) {\n            this.selectionModel.select(toggle);\n        } else {\n            this.selectionModel.deselect(toggle);\n        }\n\n        // Only emit the change event for user input.\n        if (isUserInput) {\n            this.emitChangeEvent();\n        }\n\n        // Note: we emit this one no matter whether it was a user interaction, because\n        // it is used by Angular to sync up the two-way data binding.\n        this.valueChange.emit(this.value);\n    }\n\n    /** Checks whether a button toggle is selected. */\n    isSelected(toggle: McButtonToggle) {\n        return this.selectionModel.isSelected(toggle);\n    }\n\n    /** Determines whether a button toggle should be checked on init. */\n    isPrechecked(toggle: McButtonToggle) {\n        if (this.rawValue === undefined) {\n            return false;\n        }\n\n        if (this.multiple && Array.isArray(this.rawValue)) {\n            return this.rawValue.some((value) => toggle.value != null && value === toggle.value);\n        }\n\n        return toggle.value === this.rawValue;\n    }\n\n    /** Updates the selection state of the toggles in the group based on a value. */\n    private setSelectionByValue(value: any | any[]) {\n        this.rawValue = value;\n\n        if (!this.buttonToggles) {\n            return;\n        }\n\n        if (this.multiple && value) {\n            if (!Array.isArray(value)) {\n                throw Error('Value must be an array in multiple-selection mode.');\n            }\n\n            this.clearSelection();\n            value.forEach((currentValue: any) => this.selectValue(currentValue));\n        } else {\n            this.clearSelection();\n            this.selectValue(value);\n        }\n    }\n\n    /** Clears the selected toggles. */\n    private clearSelection() {\n        this.selectionModel.clear();\n        this.buttonToggles.forEach((toggle) => toggle.checked = false);\n    }\n\n    /** Selects a value if there's a toggle that corresponds to it. */\n    private selectValue(value: any) {\n        const correspondingOption = this.buttonToggles.find((toggle) => {\n            return toggle.value != null && toggle.value === value;\n        });\n\n        if (correspondingOption) {\n            correspondingOption.checked = true;\n            this.selectionModel.select(correspondingOption);\n        }\n    }\n}\n\n/** Single button inside of a toggle group. */\n@Component({\n    selector: 'mc-button-toggle',\n    exportAs: 'mcButtonToggle',\n    template: `\n        <button\n            mc-button\n            type=\"button\"\n            [class.mc-active]=\"checked\"\n            [disabled]=\"disabled\"\n            [tabIndex]=\"tabIndex\"\n            (click)=\"onToggleClick()\">\n            <ng-content></ng-content>\n        </button>\n    `,\n    styleUrls: ['button-toggle.scss'],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    host: {\n        class: 'mc-button-toggle',\n        '[class.mc-button-toggle-standalone]': '!buttonToggleGroup'\n    }\n})\nexport class McButtonToggle implements OnInit, OnDestroy {\n\n    /** Whether the button is checked. */\n    @Input()\n    get checked(): boolean {\n        return this.buttonToggleGroup ? this.buttonToggleGroup.isSelected(this) : this._checked;\n    }\n\n    set checked(value: boolean) {\n        const newValue = coerceBooleanProperty(value);\n\n        if (newValue !== this._checked) {\n            this._checked = newValue;\n\n            if (this.buttonToggleGroup) {\n                this.buttonToggleGroup.syncButtonToggle(this, this._checked);\n            }\n\n            this.changeDetectorRef.markForCheck();\n        }\n    }\n\n    // tslint:disable-next-line:no-reserved-keywords\n    type: ToggleType;\n\n    @ViewChild(McButton, { static: false }) mcButton: McButton;\n\n    /** McButtonToggleGroup reads this to assign its own value. */\n    @Input() value: any;\n\n    /** Tabindex for the toggle. */\n    @Input() tabIndex: number | null;\n\n    @Input()\n    get disabled(): boolean {\n        return this._disabled || (this.buttonToggleGroup && this.buttonToggleGroup.disabled);\n    }\n\n    set disabled(value: boolean) {\n        this._disabled = coerceBooleanProperty(value);\n    }\n\n    /** Event emitted when the group value changes. */\n    @Output() readonly change: EventEmitter<McButtonToggleChange> = new EventEmitter<McButtonToggleChange>();\n\n    private isSingleSelector = false;\n    private _checked = false;\n    private _disabled: boolean = false;\n\n    constructor(\n        @Optional() public buttonToggleGroup: McButtonToggleGroup,\n        private changeDetectorRef: ChangeDetectorRef,\n        private focusMonitor: FocusMonitor,\n        private element: ElementRef\n    ) {}\n\n    ngOnInit() {\n        this.isSingleSelector = this.buttonToggleGroup && !this.buttonToggleGroup.multiple;\n        this.type = this.isSingleSelector ? 'radio' : 'checkbox';\n\n        if (this.buttonToggleGroup && this.buttonToggleGroup.isPrechecked(this)) {\n            this.checked = true;\n        }\n\n        this.focusMonitor.monitor(this.element.nativeElement, true);\n    }\n\n    ngOnDestroy() {\n        const group = this.buttonToggleGroup;\n\n        this.focusMonitor.stopMonitoring(this.element.nativeElement);\n\n        // Remove the toggle from the selection once it's destroyed. Needs to happen\n        // on the next tick in order to avoid \"changed after checked\" errors.\n        if (group && group.isSelected(this)) {\n            Promise.resolve().then(() => group.syncButtonToggle(this, false));\n        }\n    }\n\n    /** Focuses the button. */\n    focus(): void {\n        this.element.nativeElement.focus();\n    }\n\n    /** Checks the button toggle due to an interaction with the underlying native button. */\n    onToggleClick() {\n        if (this.disabled) { return; }\n\n        const newChecked = this.isSingleSelector ? true : !this._checked;\n\n        if (newChecked !== this._checked) {\n            this._checked = newChecked;\n            if (this.buttonToggleGroup) {\n                this.buttonToggleGroup.syncButtonToggle(this, this._checked, true);\n                this.buttonToggleGroup.onTouched();\n            }\n        }\n        // Emit a change event when it's the single selector\n        this.change.emit(new McButtonToggleChange(this, this.value));\n    }\n\n    /**\n     * Marks the button toggle as needing checking for change detection.\n     * This method is exposed because the parent button toggle group will directly\n     * update bound properties of the radio button.\n     */\n    markForCheck() {\n        // When the group value changes, the button will not be notified.\n        // Use `markForCheck` to explicit update button toggle's status.\n        this.changeDetectorRef.markForCheck();\n    }\n}\n","import { NgModule } from '@angular/core';\nimport { McButtonModule } from '@ptsecurity/mosaic/button';\nimport { McCommonModule } from '@ptsecurity/mosaic/core';\n\nimport { McButtonToggle, McButtonToggleGroup } from './button-toggle.component';\n\n\n@NgModule({\n    imports: [McCommonModule, McButtonModule],\n    exports: [McCommonModule, McButtonToggleGroup, McButtonToggle],\n    declarations: [McButtonToggleGroup, McButtonToggle]\n})\nexport class McButtonToggleModule {}\n"]}