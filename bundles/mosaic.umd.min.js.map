{"version":3,"file":"mosaic.umd.min.js","sources":["../../src/lib/tooltip/tooltip.component.ts","../../src/lib/tooltip/tooltip.module.ts","../../src/lib/version.ts","../../src/lib/core/select/events.ts","../../src/lib/core/select/constants.ts","../../src/lib/select/select.component.ts","../../src/lib/timepicker/timepicker.constants.ts","../../src/lib/sidepanel/sidepanel-container.component.ts","../../src/lib/sidepanel/sidepanel-ref.ts","../../src/lib/sidepanel/sidepanel.service.ts","../../src/lib/sidepanel/sidepanel-directives.ts","../../src/lib/sidepanel/sidepanel.module.ts","../../src/lib/splitter/splitter.component.ts","../../src/lib/splitter/splitter.module.ts","../../src/lib/toggle/toggle.component.ts","../../src/lib/toggle/toggle.module.ts","../../src/lib/tree-select/tree-select.component.ts","../../src/lib/tree-select/tree-select.module.ts","../../src/lib/textarea/textarea.component.ts","../../src/lib/textarea/textarea.module.ts","../../src/lib/timepicker/timepicker.ts","../../src/lib/timepicker/timepicker.module.ts","../../src/lib/sidepanel/sidepanel-config.ts","../../src/lib/sidepanel/sidepanel-animations.ts","../../src/lib/select/select.module.ts","../../src/lib/tabs/tab-body.ts","../../src/lib/tabs/tab-label-wrapper.ts","../../src/lib/tabs/tab-header.ts","../../src/lib/tabs/tab-group.ts","../../src/lib/tabs/tab-nav-bar/tab-nav-bar.ts","../../src/lib/tabs/tabs.module.ts","../../src/lib/tag/tag.component.ts","../../src/lib/tag/tag.module.ts","../../src/lib/navbar/navbar.component.ts","../../src/lib/navbar/navbar.module.ts","../../src/lib/progress-bar/progress-bar.component.ts","../../src/lib/progress-bar/progress-bar.module.ts","../../src/lib/progress-spinner/progress-spinner.component.ts","../../src/lib/progress-spinner/progress-spinner.module.ts","../../src/lib/radio/radio.component.ts","../../src/lib/radio/radio.module.ts","../../src/lib/tree/node.ts","../../src/lib/tree/padding.ts","../../src/lib/tree/toggle.ts","../../src/lib/tree/tree-option.ts","../../src/lib/tree/tree-selection.ts","../../src/lib/tree/tree.module.ts","../../src/lib/tree/data-source/flat-data-source.ts","../../src/lib/tree/data-source/nested-data-source.ts","../../src/lib/tabs/tab-content.ts","../../src/lib/tabs/tab-label.ts","../../src/lib/tabs/tab.ts","../../src/lib/tabs/tabs-animations.ts","../../src/lib/modal/modal-control.service.ts","../../src/lib/modal/modal-ref.class.ts","../../src/lib/modal/modal-util.ts","../../src/lib/modal/modal.component.ts","../../src/lib/modal/css-unit.pipe.ts","../../src/lib/modal/modal.service.ts","../../src/lib/modal/modal.module.ts","../../src/lib/dropdown/dropdown.component.ts","../../src/lib/dropdown/dropdown-trigger.ts","../../src/lib/dropdown/dropdown.module.ts","../../src/lib/layout/content.component.ts","../../src/lib/layout/footer.component.ts","../../src/lib/layout/header.component.ts","../../src/lib/layout/layout.component.ts","../../src/lib/layout/sidebar.component.ts","../../src/lib/layout/layout.module.ts","../../src/lib/list/list-selection.component.ts","../../src/lib/list/list.component.ts","../../src/lib/list/list.module.ts","../../src/lib/link/link.component.ts","../../src/lib/link/link.module.ts","../../src/lib/datepicker/calendar.ts","../../src/lib/datepicker/datepicker-animations.ts","../../src/lib/datepicker/datepicker.ts","../../src/lib/datepicker/datepicker-input.ts","../../src/lib/datepicker/datepicker-toggle.ts","../../src/lib/datepicker/datepicker-module.ts","../../src/lib/divider/divider.component.ts","../../src/lib/divider/divider.module.ts","../../src/lib/dropdown/dropdown-content.ts","../../src/lib/dropdown/dropdown-panel.ts","../../src/lib/dropdown/dropdown-item.ts","../../src/lib/dropdown/dropdown-animations.ts","../../src/lib/input/input.ts","../../src/lib/input/input-number-validators.ts","../../src/lib/input/input.module.ts","../../src/lib/datepicker/datepicker-intl.ts","../../src/lib/datepicker/calendar-body.ts","../../src/lib/datepicker/month-view.ts","../../src/lib/datepicker/multi-year-view.ts","../../src/lib/datepicker/year-view.ts","../../src/lib/button/button.component.ts","../../src/lib/button/button.module.ts","../../src/lib/card/card.component.ts","../../src/lib/card/card.module.ts","../../src/lib/checkbox/checkbox-config.ts","../../src/lib/checkbox/checkbox.ts","../../src/lib/checkbox/checkbox-required-validator.ts","../../src/lib/checkbox/checkbox-module.ts","../../src/lib/form-field/cleaner.ts","../../src/lib/form-field/form-field-control.ts","../../src/lib/form-field/form-field-number-control.ts","../../src/lib/form-field/hint.ts","../../src/lib/form-field/prefix.ts","../../src/lib/form-field/stepper.ts","../../src/lib/form-field/suffix.ts","../../src/lib/form-field/form-field.ts","../../src/lib/form-field/form-field.module.ts","../../src/lib/input/input-value-accessor.ts","../../src/lib/input/stepperUtils.ts","../../node_modules/tslib/tslib.es6.js","../../src/lib/core/utils/utils.ts","../../src/lib/core/common-behaviors/common-module.ts","../../src/lib/core/common-behaviors/disabled.ts","../../src/lib/core/common-behaviors/color.ts","../../src/lib/core/common-behaviors/tabindex.ts","../../src/lib/core/common-behaviors/error-state.ts","../../src/lib/core/option/option.ts","../../src/lib/core/overlay/overlay-position-map.ts","../../src/lib/core/select/errors.ts","../../src/lib/form-field/form-field-errors.ts","../../src/lib/input/input-errors.ts","../../src/lib/datepicker/datepicker-errors.ts","../../src/lib/dropdown/dropdown-errors.ts","../../src/lib/core/line/line.ts","../../src/lib/core/error/error-options.ts","../../src/lib/core/selection/pseudo-checkbox/pseudo-checkbox.ts","../../src/lib/core/selection/index.ts","../../src/lib/core/services/measure-scrollbar.service.ts","../../src/lib/core/option/optgroup.ts","../../src/lib/core/option/index.ts","../../src/lib/core/label/label-options.ts","../../src/lib/core/animation/fade-animations.ts","../../src/lib/core/animation/animation.ts","../../src/lib/core/select/animations.ts","../../src/lib/icon/icon.component.ts","../../src/lib/icon/icon.module.ts"],"sourcesContent":["import {\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    Directive,\n    ElementRef,\n    EventEmitter,\n    HostBinding,\n    Inject,\n    InjectionToken,\n    Input,\n    NgZone,\n    OnDestroy,\n    OnInit,\n    Optional,\n    Output,\n    TemplateRef,\n    ViewContainerRef,\n    ViewEncapsulation\n} from '@angular/core';\nimport { Directionality } from '@ptsecurity/cdk/bidi';\nimport { coerceBooleanProperty } from '@ptsecurity/cdk/coercion';\nimport { ESCAPE } from '@ptsecurity/cdk/keycodes';\nimport {\n    ConnectedOverlayPositionChange,\n    ConnectionPositionPair,\n    Overlay,\n    OverlayRef,\n    ScrollDispatcher,\n    IScrollStrategy,\n    FlexibleConnectedPositionStrategy,\n    IOverlayConnectionPosition,\n    IOriginConnectionPosition,\n    HorizontalConnectionPos,\n    VerticalConnectionPos\n} from '@ptsecurity/cdk/overlay';\nimport { ComponentPortal } from '@ptsecurity/cdk/portal';\nimport {\n    fadeAnimation,\n    DEFAULT_4_POSITIONS,\n    POSITION_MAP\n} from '@ptsecurity/mosaic/core';\nimport { BehaviorSubject, Observable, Subject } from 'rxjs';\nimport { distinctUntilChanged, takeUntil } from 'rxjs/operators';\n\n\n@Component({\n    selector: 'mc-tooltip-component',\n    inputs: [\n        'mcMouseEnterDelay',\n        'mcMouseLeaveDelay',\n        'mcTitle',\n        'mcVisible',\n        'mcTrigger',\n        'mcPlacement'\n    ],\n    outputs: ['mcVisibleChange'],\n    animations: [ fadeAnimation ],\n    templateUrl: './tooltip.component.html',\n    preserveWhitespaces: false,\n    styleUrls: ['./tooltip.css'],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    host: {\n        '(body:click)': 'this.handleBodyInteraction()'\n    }\n})\nexport class McTooltipComponent {\n    prefix = 'mc-tooltip_placement';\n    positions: ConnectionPositionPair[] = [ ...DEFAULT_4_POSITIONS ];\n    classMap = {};\n    isTitleString: boolean;\n    showTid: number;\n    hideTid: number;\n    availablePositions: any;\n    $visible: Observable<boolean>;\n\n    @Output() mcVisibleChange: EventEmitter<boolean> = new EventEmitter();\n\n    @Input() mcMouseEnterDelay = 400;\n\n    @Input() mcMouseLeaveDelay = 0;\n\n    @Input()\n    get mcTitle(): string | TemplateRef<void> {\n        return this._mcTitle;\n    }\n    set mcTitle(value: string | TemplateRef<void>) {\n        this.isTitleString = !(value instanceof TemplateRef);\n\n        if (this.isTitleString) {\n            this._mcTitle = value;\n        }\n    }\n    private _mcTitle: string | TemplateRef<void>;\n\n    @Input()\n    get mcTrigger(): string {\n        return this._mcTrigger;\n    }\n    set mcTrigger(value: string) {\n        this._mcTrigger = value;\n    }\n    private _mcTrigger: string = 'hover';\n\n    @Input()\n    get mcPlacement(): string {\n        return this._mcPlacement;\n    }\n    set mcPlacement(value: string) {\n        if (value !== this._mcPlacement) {\n            this._mcPlacement = value;\n            this.positions.unshift(POSITION_MAP[ this.mcPlacement ]);\n        } else if (!value) {\n            this._mcPlacement = 'top';\n        }\n    }\n    private _mcPlacement: string = 'top';\n\n    @Input()\n    get mcVisible(): boolean {\n        return this._mcVisible.value;\n    }\n    set mcVisible(value: boolean) {\n        const visible = coerceBooleanProperty(value);\n\n        if (this._mcVisible.value !== visible) {\n            this._mcVisible.next(visible);\n            this.mcVisibleChange.emit(visible);\n        }\n    }\n    private _mcVisible: BehaviorSubject<boolean> = new BehaviorSubject<boolean>(false);\n\n    /** Subject for notifying that the tooltip has been hidden from the view */\n    private readonly onHideSubject: Subject<any> = new Subject();\n    private closeOnInteraction: boolean = false;\n\n    constructor(public cdr: ChangeDetectorRef) {\n        this.availablePositions = POSITION_MAP;\n        this.$visible = this._mcVisible.asObservable();\n    }\n\n    show(): void {\n        if (this.hideTid) {\n            clearTimeout(this.hideTid);\n        }\n\n        if (!this.isContentEmpty()) {\n            if (this.mcTrigger !== 'manual') {\n                this.closeOnInteraction = true;\n            }\n            this.showTid = setTimeout(() => {\n                this.mcVisible = true;\n                this.mcVisibleChange.emit(true);\n\n                // Mark for check so if any parent component has set the\n                // ChangeDetectionStrategy to OnPush it will be checked anyways\n                this.markForCheck();\n            }, this.mcMouseEnterDelay);\n        }\n    }\n\n    hide(): void {\n        if (this.showTid) {\n            clearTimeout(this.showTid);\n        }\n\n        this.hideTid = setTimeout(() => {\n            this.mcVisible = false;\n            this.mcVisibleChange.emit(false);\n            this.onHideSubject.next();\n\n            // Mark for check so if any parent component has set the\n            // ChangeDetectionStrategy to OnPush it will be checked anyways\n            this.markForCheck();\n        }, this.mcMouseLeaveDelay);\n    }\n\n    setClassMap(): void {\n        this.classMap = `${this.prefix}-${this.mcPlacement}`;\n    }\n\n    isContentEmpty(): boolean {\n        return this.isTitleString ? (this.mcTitle === '' || !this.mcTitle) : false;\n    }\n\n    /** Returns an observable that notifies when the tooltip has been hidden from view. */\n    afterHidden(): Observable<void> {\n        return this.onHideSubject.asObservable();\n    }\n\n    markForCheck(): void {\n        this.cdr.markForCheck();\n    }\n\n    handleBodyInteraction(): void {\n        if (this.closeOnInteraction) {\n            this.hide();\n        }\n    }\n}\n\nexport const MC_TOOLTIP_SCROLL_STRATEGY =\n    new InjectionToken<() => IScrollStrategy>('mc-tooltip-scroll-strategy');\n\n/** @docs-private */\nexport function mcTooltipScrollStrategyFactory(overlay: Overlay): () => IScrollStrategy {\n    return () => overlay.scrollStrategies.reposition({scrollThrottle: 20});\n}\n\n/** @docs-private */\nexport const MC_TOOLTIP_SCROLL_STRATEGY_FACTORY_PROVIDER = {\n    provide: MC_TOOLTIP_SCROLL_STRATEGY,\n    deps: [Overlay],\n    useFactory: mcTooltipScrollStrategyFactory\n};\n\n/** Creates an error to be thrown if the user supplied an invalid tooltip position. */\nexport function getMcTooltipInvalidPositionError(position: string) {\n    return Error(`McTooltip position \"${position}\" is invalid.`);\n}\n\nconst VIEWPORT_MARGIN: number = 8;\n\n@Directive({\n    selector: '[mcTooltip], [attribute^=\"mcTooltip\"]',\n    exportAs: 'mcTooltip',\n    host: {\n        '(keydown)': 'handleKeydown($event)',\n        '(touchend)': 'handleTouchend()'\n    }\n})\nexport class McTooltip implements OnInit, OnDestroy {\n    isTooltipOpen: boolean = false;\n    isDynamicTooltip = false;\n    parentDisabled: boolean = false;\n    overlayRef: OverlayRef | null;\n    portal: ComponentPortal<McTooltipComponent>;\n    availablePositions: any;\n    tooltip: McTooltipComponent | null;\n\n    @Output() mcVisibleChange = new EventEmitter<boolean>();\n    private $unsubscribe = new Subject<void>();\n\n    @Input('mcTooltip')\n    get mcTitle(): string {\n        return this._mcTitle;\n    }\n    set mcTitle(title: string) {\n        this._mcTitle = title;\n        this.updateCompValue('mcTitle', title);\n    }\n    private _mcTitle: string;\n\n    @Input('mcTitle')\n    set setTitle(title: string) {\n        this.mcTitle = title;\n    }\n\n    @Input('mcTooltipDisabled')\n    get disabled(): boolean { return this._disabled; }\n    set disabled(value) {\n        this._disabled = coerceBooleanProperty(value);\n    }\n    private _disabled: boolean = false;\n\n    @Input('mcMouseEnterDelay')\n    get mcMouseEnterDelay(): number {\n        return this._mcMouseEnterDelay;\n    }\n    set mcMouseEnterDelay(value: number) {\n        this._mcMouseEnterDelay = value;\n        this.updateCompValue('mcMouseEnterDelay', value);\n    }\n    private _mcMouseEnterDelay: number;\n\n    @Input('mcMouseLeaveDelay')\n    get mcMouseLeaveDelay(): number {\n        return this._mcMouseLeaveDelay;\n    }\n    set mcMouseLeaveDelay(value: number) {\n        this._mcMouseLeaveDelay = value;\n        this.updateCompValue('mcMouseLeaveDelay', value);\n    }\n    private _mcMouseLeaveDelay: number;\n\n    @Input('mcTrigger')\n    get mcTrigger(): string {\n        return this._mcTrigger;\n    }\n    set mcTrigger(value: string) {\n        if (value) {\n            this._mcTrigger = value;\n            this.updateCompValue('mcTrigger', value);\n        } else {\n            this._mcTrigger = 'hover';\n        }\n    }\n    private _mcTrigger: string = 'hover';\n\n    @Input('mcPlacement')\n    get mcPlacement(): string {\n        return this._mcPlacement;\n    }\n    set mcPlacement(value: string) {\n        if (value) {\n            this._mcPlacement = value;\n            this.updateCompValue('mcPlacement', value);\n        } else {\n            this._mcPlacement = 'top';\n        }\n    }\n    private _mcPlacement: string = 'top';\n\n    @Input('mcTooltipClass')\n    get mcTooltipClass() { return this._mcTooltipClass; }\n    set mсTooltipClass(value: string | string[] | Set<string> | {[key: string]: any}) {\n        this._mcTooltipClass = value;\n\n        if (this.tooltip) {\n            this.tooltip.setClassMap();\n        }\n    }\n    private _mcTooltipClass: string | string[] | Set<string> | {[key: string]: any};\n\n    @Input('mcVisible')\n    get mcVisible(): boolean {\n        return this._mcVisible;\n    }\n    set mcVisible(externalValue: boolean) {\n        const value = coerceBooleanProperty(externalValue);\n        this._mcVisible = value;\n        this.updateCompValue('mcVisible', value);\n\n        if (value) {\n            this.show();\n        }\n    }\n    private _mcVisible: boolean;\n\n    @HostBinding('class.mc-tooltip-open')\n    get isOpen(): boolean {\n        return this.isTooltipOpen;\n    }\n\n    @HostBinding('class.disabled')\n    get isParentDisabled(): boolean {\n        return this.parentDisabled;\n    }\n\n    private manualListeners = new Map<string, EventListenerOrEventListenerObject>();\n    private readonly destroyed = new Subject<void>();\n\n    constructor(\n        private overlay: Overlay,\n        private elementRef: ElementRef,\n        private ngZone: NgZone,\n        private scrollDispatcher: ScrollDispatcher,\n        private hostView: ViewContainerRef,\n        @Inject(MC_TOOLTIP_SCROLL_STRATEGY) private scrollStrategy,\n        @Optional() private direction: Directionality) {\n            this.availablePositions = POSITION_MAP;\n        }\n\n    /** Create the overlay config and position strategy */\n    createOverlay(): OverlayRef {\n        if (this.overlayRef) {\n            return this.overlayRef;\n        }\n\n        // Create connected position strategy that listens for scroll events to reposition.\n        const strategy = this.overlay.position()\n            .flexibleConnectedTo(this.elementRef)\n            .withTransformOriginOn('.mc-tooltip')\n            .withFlexibleDimensions(false)\n            .withViewportMargin(VIEWPORT_MARGIN)\n            .withPositions([ ...DEFAULT_4_POSITIONS ]);\n\n        const scrollableAncestors = this.scrollDispatcher\n            .getAncestorScrollContainers(this.elementRef);\n\n        strategy.withScrollableContainers(scrollableAncestors);\n\n        strategy.positionChanges.pipe(takeUntil(this.destroyed)).subscribe((change) => {\n            if (this.tooltip) {\n                this.onPositionChange(change);\n                if (change.scrollableViewProperties.isOverlayClipped && this.tooltip.mcVisible) {\n                    // After position changes occur and the overlay is clipped by\n                    // a parent scrollable then close the tooltip.\n                    this.ngZone.run(() => this.hide());\n                }\n            }\n        });\n\n        this.overlayRef = this.overlay.create({\n            direction: this.direction,\n            positionStrategy: strategy,\n            panelClass: 'mc-tooltip-panel',\n            scrollStrategy: this.scrollStrategy()\n        });\n\n        this.updatePosition();\n\n        this.overlayRef.detachments()\n            .pipe(takeUntil(this.destroyed))\n            .subscribe(() => this.detach());\n\n        return this.overlayRef;\n    }\n\n    detach() {\n        if (this.overlayRef && this.overlayRef.hasAttached()) {\n            this.overlayRef.detach();\n        }\n\n        this.tooltip = null;\n    }\n\n    onPositionChange($event: ConnectedOverlayPositionChange): void {\n        let updatedPlacement = this.mcPlacement;\n        Object.keys(this.availablePositions).some((key) => {\n            if ($event.connectionPair.originX === this.availablePositions[key].originX &&\n                $event.connectionPair.originY === this.availablePositions[key].originY &&\n                $event.connectionPair.overlayX === this.availablePositions[key].overlayX &&\n                $event.connectionPair.overlayY === this.availablePositions[key].overlayY) {\n                updatedPlacement = key;\n\n                return true;\n            }\n\n            return false;\n        });\n        this.updateCompValue('mcPlacement', updatedPlacement);\n\n        if (this.tooltip) {\n            this.tooltip.setClassMap();\n            this.tooltip.markForCheck();\n        }\n\n        this.handlePositioningUpdate();\n    }\n\n    handlePositioningUpdate() {\n        if (!this.overlayRef) {\n            this.overlayRef = this.createOverlay();\n        }\n        if (this.mcPlacement === 'right' || this.mcPlacement === 'left') {\n            const pos =\n                (this.overlayRef.overlayElement.clientHeight -\n                    this.hostView.element.nativeElement.clientHeight) / 2; // tslint:disable-line\n            const currentContainer = this.overlayRef.overlayElement.style.top || '0px';\n            this.overlayRef.overlayElement.style.top =\n                `${parseInt(currentContainer.split('px')[0], 10) + pos - 1}px`;\n            // TODO: обновлять положение стрелки\\указателя\\\"дятла\"\n        }\n    }\n\n    // tslint:disable-next-line:no-any\n    updateCompValue(key: string, value: any): void {\n        if (this.isDynamicTooltip && value) {\n            if (this.tooltip) {\n                this.tooltip[key] = value;\n            }\n        }\n    }\n\n    ngOnInit(): void {\n        this.initElementRefListeners();\n    }\n\n    ngOnDestroy(): void {\n        if (this.overlayRef) {\n            this.overlayRef.dispose();\n        }\n        this.manualListeners.forEach((listener, event) =>\n            this.elementRef.nativeElement.removeEventListener(event, listener));\n        this.manualListeners.clear();\n\n        this.$unsubscribe.next();\n        this.$unsubscribe.complete();\n    }\n\n    handleKeydown(e: KeyboardEvent) {\n        if (this.isTooltipOpen && e.keyCode === ESCAPE) { // tslint:disable-line\n            this.hide();\n        }\n    }\n\n    handleTouchend() {\n        this.hide();\n    }\n\n    initElementRefListeners() {\n        if (this.mcTrigger === 'hover') {\n\n            this.manualListeners\n                .set('mouseenter', () => this.show())\n                .set('mouseleave', () => this.hide())\n                .forEach((listener, event) => this.elementRef.nativeElement.addEventListener(event, listener));\n        }\n\n        if (this.mcTrigger === 'focus') {\n\n            this.manualListeners\n                .set('focus', () => this.show())\n                .set('blur', () => this.hide())\n                .forEach((listener, event) => this.elementRef.nativeElement.addEventListener(event, listener));\n        }\n    }\n\n    show(): void {\n        if (!this.disabled) {\n            if (!this.tooltip) {\n                const overlayRef = this.createOverlay();\n                this.detach();\n\n                this.portal = this.portal || new ComponentPortal(McTooltipComponent, this.hostView);\n\n                this.tooltip = overlayRef.attach(this.portal).instance;\n                this.tooltip.afterHidden()\n                    .pipe(takeUntil(this.destroyed))\n                    .subscribe(() => this.detach());\n                this.isDynamicTooltip = true;\n                const properties = [\n                    'mcTitle',\n                    'mcPlacement',\n                    'mcTrigger',\n                    'mcTooltipDisabled',\n                    'mcMouseEnterDelay',\n                    'mcMouseLeaveDelay',\n                    'mсTooltipClass',\n                    'mcVisible'\n                ];\n                properties.forEach((property) => this.updateCompValue(property, this[ property ]));\n                this.tooltip.mcVisibleChange.pipe(takeUntil(this.$unsubscribe), distinctUntilChanged())\n                    .subscribe((data) => {\n                        this.mcVisible = data;\n                        this.mcVisibleChange.emit(data);\n                        this.isTooltipOpen = data;\n                    });\n            }\n            this.updatePosition();\n            this.tooltip.show();\n        }\n    }\n\n    hide(): void {\n        if (this.tooltip) {\n            this.tooltip.hide();\n        }\n    }\n\n    /** Updates the position of the current tooltip. */\n    updatePosition() {\n        if (!this.overlayRef) {\n            this.overlayRef = this.createOverlay();\n        }\n        const position =\n            this.overlayRef.getConfig().positionStrategy as FlexibleConnectedPositionStrategy;\n        const origin = this.getOrigin();\n        const overlay = this.getOverlayPosition();\n\n        position.withPositions([\n            {...origin.main, ...overlay.main},\n            {...origin.fallback, ...overlay.fallback}\n        ]);\n    }\n\n    /**\n     * Returns the origin position and a fallback position based on the user's position preference.\n     * The fallback position is the inverse of the origin (e.g. `'below' -> 'above'`).\n     */\n    getOrigin(): {main: IOriginConnectionPosition; fallback: IOriginConnectionPosition} {\n        const position = this.mcPlacement;\n        const isLtr = !this.direction || this.direction.value === 'ltr';\n        let originPosition: IOriginConnectionPosition;\n\n        if (position === 'top' || position === 'bottom') {\n            originPosition = {originX: 'center', originY: position === 'top' ? 'top' : 'bottom'};\n        } else if (\n            position === 'top' ||\n            (position === 'left' && isLtr) ||\n            (position === 'right' && !isLtr)) {\n            originPosition = {originX: 'start', originY: 'center'};\n        } else if (\n            position === 'bottom' ||\n            (position === 'right' && isLtr) ||\n            (position === 'left' && !isLtr)) {\n            originPosition = {originX: 'end', originY: 'center'};\n        } else {\n            throw getMcTooltipInvalidPositionError(position);\n        }\n\n        const {x, y} = this.invertPosition(originPosition.originX, originPosition.originY);\n\n        return {\n            main: originPosition,\n            fallback: {originX: x, originY: y}\n        };\n    }\n\n    /** Returns the overlay position and a fallback position based on the user's preference */\n    getOverlayPosition(): {main: IOverlayConnectionPosition; fallback: IOverlayConnectionPosition} {\n        const position = this.mcPlacement;\n        const isLtr = !this.direction || this.direction.value === 'ltr';\n        let overlayPosition: IOverlayConnectionPosition;\n\n        if (position === 'top') {\n            overlayPosition = {overlayX: 'center', overlayY: 'bottom'};\n        } else if (position === 'bottom') {\n            overlayPosition = {overlayX: 'center', overlayY: 'top'};\n        } else if (\n            position === 'top' ||\n            (position === 'left' && isLtr) ||\n            (position === 'right' && !isLtr)) {\n            overlayPosition = {overlayX: 'end', overlayY: 'center'};\n        } else if (\n            position === 'bottom' ||\n            (position === 'right' && isLtr) ||\n            (position === 'left' && !isLtr)) {\n            overlayPosition = {overlayX: 'start', overlayY: 'center'};\n        } else {\n            throw getMcTooltipInvalidPositionError(position);\n        }\n\n        const {x, y} = this.invertPosition(overlayPosition.overlayX, overlayPosition.overlayY);\n\n        return {\n            main: overlayPosition,\n            fallback: {overlayX: x, overlayY: y}\n        };\n    }\n\n    /** Inverts an overlay position. */\n    private invertPosition(x: HorizontalConnectionPos, y: VerticalConnectionPos) {\n        let newX: HorizontalConnectionPos = x;\n        let newY: VerticalConnectionPos = y;\n        if (this.mcPlacement === 'top' || this.mcPlacement === 'bottom') {\n            if (y === 'top') {\n                newY = 'bottom';\n            } else if (y === 'bottom') {\n                newY = 'top';\n            }\n        } else {\n            if (x === 'end') {\n                newX = 'start';\n            } else if (x === 'start') {\n                newX = 'end';\n            }\n        }\n\n        return {x: newX, y: newY};\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { OverlayModule } from '@ptsecurity/cdk/overlay';\n\nimport {\n    McTooltipComponent,\n    McTooltip,\n    MC_TOOLTIP_SCROLL_STRATEGY_FACTORY_PROVIDER\n} from './tooltip.component';\n\n\n@NgModule({\n    declarations: [McTooltipComponent, McTooltip],\n    exports: [McTooltipComponent, McTooltip],\n    imports: [CommonModule, OverlayModule],\n    providers: [MC_TOOLTIP_SCROLL_STRATEGY_FACTORY_PROVIDER],\n    entryComponents: [McTooltipComponent]\n})\nexport class McToolTipModule {\n}\n","import { Version } from '@angular/core';\n\n\nexport const VERSION = new Version('1.0.0-beta.3-dc52656');\n","export const selectEvents = 'selectEvents';\n","import { InjectionToken } from '@angular/core';\nimport { IScrollStrategy, Overlay, RepositionScrollStrategy } from '@ptsecurity/cdk/overlay';\n\n\n/** The max height of the select's overlay panel */\nexport const SELECT_PANEL_MAX_HEIGHT = 224;\n\n/** The panel's padding on the x-axis */\nexport const SELECT_PANEL_PADDING_X = 1;\n\n/** The panel's x axis padding if it is indented (e.g. there is an option group). */\n/* tslint:disable-next-line:no-magic-numbers */\nexport const SELECT_PANEL_INDENT_PADDING_X = SELECT_PANEL_PADDING_X * 2;\n\n/**\n * The select panel will only \"fit\" inside the viewport if it is positioned at\n * this value or more away from the viewport boundary.\n */\nexport const SELECT_PANEL_VIEWPORT_PADDING = 8;\n\n\n/** Injection token that determines the scroll handling while a select is open. */\nexport const MC_SELECT_SCROLL_STRATEGY =\n    new InjectionToken<() => IScrollStrategy>('mc-select-scroll-strategy');\n\n/** @docs-private */\nexport function mcSelectScrollStrategyProviderFactory(overlay: Overlay):\n    () => RepositionScrollStrategy {\n    return () => overlay.scrollStrategies.reposition();\n}\n\n/** @docs-private */\nexport const MC_SELECT_SCROLL_STRATEGY_PROVIDER = {\n    provide: MC_SELECT_SCROLL_STRATEGY,\n    deps: [Overlay],\n    useFactory: mcSelectScrollStrategyProviderFactory\n};\n","/* tslint:disable:no-empty */\n\nimport { ActiveDescendantKeyManager } from '@ptsecurity/cdk/a11y';\nimport { Directionality } from '@ptsecurity/cdk/bidi';\nimport { coerceBooleanProperty } from '@ptsecurity/cdk/coercion';\nimport { SelectionModel } from '@ptsecurity/cdk/collections';\nimport {\n    DOWN_ARROW,\n    END,\n    ENTER,\n    HOME,\n    LEFT_ARROW,\n    RIGHT_ARROW,\n    SPACE,\n    UP_ARROW,\n    A\n} from '@ptsecurity/cdk/keycodes';\nimport {\n    CdkConnectedOverlay,\n    ViewportRuler\n} from '@ptsecurity/cdk/overlay';\n\nimport {\n    AfterContentInit, AfterViewInit,\n    Attribute,\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    ContentChild,\n    ContentChildren,\n    Directive,\n    DoCheck,\n    ElementRef,\n    EventEmitter,\n    Inject,\n    Input,\n    isDevMode,\n    NgZone,\n    OnChanges,\n    OnDestroy,\n    OnInit,\n    Optional,\n    Output,\n    QueryList, Renderer2,\n    Self,\n    SimpleChanges,\n    ViewChild, ViewChildren,\n    ViewEncapsulation\n} from '@angular/core';\nimport { ControlValueAccessor, FormGroupDirective, NgControl, NgForm } from '@angular/forms';\nimport {\n    countGroupLabelsBeforeOption,\n    getOptionScrollPosition,\n    CanDisable,\n    CanDisableCtor,\n    CanUpdateErrorState,\n    CanUpdateErrorStateCtor,\n    ErrorStateMatcher,\n    HasTabIndex,\n    HasTabIndexCtor,\n    MC_OPTION_PARENT_COMPONENT,\n    McOptgroup,\n    McOption,\n    McOptionSelectionChange,\n    mixinDisabled,\n    mixinErrorState,\n    mixinTabIndex,\n    mcSelectAnimations,\n\n    SELECT_PANEL_INDENT_PADDING_X,\n    SELECT_PANEL_MAX_HEIGHT,\n    SELECT_PANEL_PADDING_X,\n    SELECT_PANEL_VIEWPORT_PADDING,\n\n    getMcSelectDynamicMultipleError,\n    getMcSelectNonFunctionValueError,\n    getMcSelectNonArrayValueError,\n    MC_SELECT_SCROLL_STRATEGY\n} from '@ptsecurity/mosaic/core';\n\nimport { McFormField, McFormFieldControl } from '@ptsecurity/mosaic/form-field';\nimport { McTag } from '@ptsecurity/mosaic/tag';\n\n\nimport { defer, merge, Observable, Subject } from 'rxjs';\nimport {\n    filter,\n    map,\n    startWith,\n    switchMap,\n    take,\n    takeUntil,\n    distinctUntilChanged\n} from 'rxjs/operators';\n\n\nlet nextUniqueId = 0;\n\n/** The height of the select items in `em` units. */\nexport const SELECT_ITEM_HEIGHT_EM = 2;\n\n/** Change event object that is emitted when the select value has changed. */\nexport class McSelectChange {\n    constructor(public source: McSelect, public value: any) {}\n}\n\nexport class McSelectBase {\n    constructor(\n        public elementRef: ElementRef,\n        public defaultErrorStateMatcher: ErrorStateMatcher,\n        public parentForm: NgForm,\n        public parentFormGroup: FormGroupDirective,\n        public ngControl: NgControl\n    ) {}\n}\n\nconst McSelectMixinBase: CanDisableCtor & HasTabIndexCtor & CanUpdateErrorStateCtor &\n    typeof McSelectBase = mixinTabIndex(mixinDisabled(mixinErrorState(McSelectBase)));\n\n\n@Directive({ selector: 'mc-select-trigger' })\nexport class McSelectTrigger {}\n\n\n@Component({\n    selector: 'mc-select',\n    exportAs: 'mcSelect',\n    templateUrl: 'select.html',\n    styleUrls: ['./select.css'],\n    inputs: ['disabled', 'tabIndex'],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    host: {\n        '[attr.id]': 'id',\n        '[attr.tabindex]': 'tabIndex',\n        class: 'mc-select',\n        '[class.mc-disabled]': 'disabled',\n        '[class.mc-select-invalid]': 'errorState',\n        '[class.mc-select-required]': 'required',\n        '(keydown)': 'handleKeydown($event)',\n        '(focus)': 'onFocus()',\n        '(blur)': 'onBlur()',\n        '(window:resize)': 'calculateHiddenItems()'\n    },\n    animations: [\n        mcSelectAnimations.transformPanel,\n        mcSelectAnimations.fadeInContent\n    ],\n    providers: [\n        { provide: McFormFieldControl, useExisting: McSelect },\n        { provide: MC_OPTION_PARENT_COMPONENT, useExisting: McSelect }\n    ]\n})\nexport class McSelect extends McSelectMixinBase implements\n    AfterContentInit, AfterViewInit, OnChanges, OnDestroy, OnInit, DoCheck, ControlValueAccessor, CanDisable,\n    HasTabIndex, McFormFieldControl<any>, CanUpdateErrorState {\n\n    /** A name for this control that can be used by `mc-form-field`. */\n    controlType = 'mc-select';\n\n    hiddenItems: number = 0;\n    oneMoreText: string = '...ещё';\n\n    /** The last measured value for the trigger's client bounding rect. */\n    triggerRect: ClientRect;\n\n    /** The cached font-size of the trigger element. */\n    triggerFontSize = 0;\n\n    /** Deals with the selection logic. */\n    selectionModel: SelectionModel<McOption>;\n\n    /** Manages keyboard events for options in the panel. */\n    keyManager: ActiveDescendantKeyManager<McOption>;\n\n    /** The IDs of child options to be passed to the aria-owns attribute. */\n    optionIds: string = '';\n\n    /** The value of the select panel's transform-origin property. */\n    transformOrigin: string = 'top';\n\n    /** Whether the panel's animation is done. */\n    panelDoneAnimating: boolean = false;\n\n    /** Emits when the panel element is finished transforming in. */\n    panelDoneAnimatingStream = new Subject<string>();\n\n    /** Strategy that will be used to handle scrolling while the select panel is open. */\n    scrollStrategy = this._scrollStrategyFactory();\n\n    /**\n     * The y-offset of the overlay panel in relation to the trigger's top start corner.\n     * This must be adjusted to align the selected option text over the trigger text.\n     * when the panel opens. Will change based on the y-position of the selected option.\n     */\n    offsetY = 0;\n\n    /**\n     * This position config ensures that the top \"start\" corner of the overlay\n     * is aligned with with the top \"start\" of the origin by default (overlapping\n     * the trigger completely). If the panel cannot fit below the trigger, it\n     * will fall back to a position above the trigger.\n     */\n    positions = [\n        {\n            originX: 'start',\n            originY: 'bottom',\n            overlayX: 'start',\n            overlayY: 'top'\n        },\n        {\n            originX: 'start',\n            originY: 'top',\n            overlayX: 'start',\n            overlayY: 'bottom'\n        }\n    ];\n\n    @ViewChild('trigger') trigger: ElementRef;\n\n    @ViewChild('panel') panel: ElementRef;\n\n    @ViewChild(CdkConnectedOverlay) overlayDir: CdkConnectedOverlay;\n\n    @ViewChildren(McTag) tags: QueryList<McTag>;\n\n    /** User-supplied override of the trigger element. */\n    @ContentChild(McSelectTrigger) customTrigger: McSelectTrigger;\n\n    /** All of the defined select options. */\n    @ContentChildren(McOption, { descendants: true }) options: QueryList<McOption>;\n\n    /** All of the defined groups of options. */\n    @ContentChildren(McOptgroup) optionGroups: QueryList<McOptgroup>;\n\n    /** Classes to be passed to the select panel. Supports the same syntax as `ngClass`. */\n    @Input() panelClass: string | string[] | Set<string> | { [key: string]: any };\n\n    /** Object used to control when error messages are shown. */\n    @Input() errorStateMatcher: ErrorStateMatcher;\n\n    /**\n     * Function used to sort the values in a select in multiple mode.\n     * Follows the same logic as `Array.prototype.sort`.\n     */\n    @Input() sortComparator: (a: McOption, b: McOption, options: McOption[]) => number;\n\n    /** Combined stream of all of the child options' change events. */\n    readonly optionSelectionChanges: Observable<McOptionSelectionChange> = defer(() => {\n        if (this.options) {\n            return merge(...this.options.map((option) => option.onSelectionChange));\n        }\n\n        return this._ngZone.onStable\n            .asObservable()\n            .pipe(take(1), switchMap(() => this.optionSelectionChanges));\n    });\n\n    /** Event emitted when the select panel has been toggled. */\n    @Output() readonly openedChange: EventEmitter<boolean> = new EventEmitter<boolean>();\n\n    /** Event emitted when the select has been opened. */\n    @Output('opened') readonly openedStream: Observable<void> =\n        this.openedChange.pipe(filter((o) => o), map(() => {}));\n\n    /** Event emitted when the select has been closed. */\n    @Output('closed') readonly closedStream: Observable<void> =\n        this.openedChange.pipe(filter((o) => !o), map(() => {}));\n\n    /** Event emitted when the selected value has been changed by the user. */\n    @Output() readonly selectionChange: EventEmitter<McSelectChange> = new EventEmitter<McSelectChange>();\n\n    /**\n     * Event that emits whenever the raw value of the select changes. This is here primarily\n     * to facilitate the two-way binding for the `value` input.\n     * @docs-private\n     */\n    @Output() readonly valueChange: EventEmitter<any> = new EventEmitter<any>();\n\n    @Input()\n    get placeholder(): string {\n        return this._placeholder;\n    }\n\n    set placeholder(value: string) {\n        this._placeholder = value;\n\n        this.stateChanges.next();\n    }\n\n    private _placeholder: string;\n\n    @Input()\n    get required(): boolean {\n        return this._required;\n    }\n\n    set required(value: boolean) {\n        this._required = coerceBooleanProperty(value);\n\n        this.stateChanges.next();\n    }\n\n    private _required: boolean = false;\n\n    @Input()\n    get multiple(): boolean {\n        return this._multiple;\n    }\n\n    set multiple(value: boolean) {\n        if (this.selectionModel) {\n            throw getMcSelectDynamicMultipleError();\n        }\n\n        this._multiple = coerceBooleanProperty(value);\n    }\n\n    private _multiple: boolean = false;\n\n    /**\n     * Function to compare the option values with the selected values. The first argument\n     * is a value from an option. The second is a value from the selection. A boolean\n     * should be returned.\n     */\n    @Input()\n    get compareWith() {\n        return this._compareWith;\n    }\n\n    set compareWith(fn: (o1: any, o2: any) => boolean) {\n        /* tslint:disable-next-line:strict-type-predicates */\n        if (typeof fn !== 'function') {\n            throw getMcSelectNonFunctionValueError();\n        }\n\n        this._compareWith = fn;\n\n        if (this.selectionModel) {\n            // A different comparator means the selection could change.\n            this.initializeSelection();\n        }\n    }\n\n    /** Value of the select control. */\n    @Input()\n    get value(): any {\n        return this._value;\n    }\n\n    set value(newValue: any) {\n        if (newValue !== this._value) {\n            this.writeValue(newValue);\n            this._value = newValue;\n        }\n    }\n\n    private _value: any;\n\n    @Input()\n    get id(): string {\n        return this._id;\n    }\n\n    set id(value: string) {\n        this._id = value || this.uid;\n        this.stateChanges.next();\n    }\n\n    private _id: string;\n\n    /** Whether the select is focused. */\n    get focused(): boolean {\n        return this._focused || this._panelOpen;\n    }\n\n    /**\n     * @deprecated Setter to be removed as this property is intended to be readonly.\n     * @breaking-change 8.0.0\n     */\n    set focused(value: boolean) {\n        this._focused = value;\n    }\n\n    private _focused = false;\n\n    get panelOpen(): boolean {\n        return this._panelOpen;\n    }\n\n    private _panelOpen = false;\n\n    /** The scroll position of the overlay panel, calculated to center the selected option. */\n    private scrollTop = 0;\n\n    /** Unique id for this input. */\n    private readonly uid = `mc-select-${nextUniqueId++}`;\n\n    /** Emits whenever the component is destroyed. */\n    private readonly destroy = new Subject<void>();\n\n    constructor(\n        private readonly _viewportRuler: ViewportRuler,\n        private readonly _changeDetectorRef: ChangeDetectorRef,\n        private readonly _ngZone: NgZone,\n        private readonly _renderer: Renderer2,\n        defaultErrorStateMatcher: ErrorStateMatcher,\n        elementRef: ElementRef,\n        @Optional() private readonly _dir: Directionality,\n        @Optional() parentForm: NgForm,\n        @Optional() parentFormGroup: FormGroupDirective,\n        @Optional() private readonly _parentFormField: McFormField,\n        @Self() @Optional() public ngControl: NgControl,\n        @Attribute('tabindex') tabIndex: string,\n        @Inject(MC_SELECT_SCROLL_STRATEGY) private readonly _scrollStrategyFactory\n    ) {\n        super(elementRef, defaultErrorStateMatcher, parentForm, parentFormGroup, ngControl);\n\n        if (this.ngControl) {\n            // Note: we provide the value accessor through here, instead of\n            // the `providers` to avoid running into a circular import.\n            this.ngControl.valueAccessor = this;\n        }\n\n        this.tabIndex = parseInt(tabIndex) || 0;\n\n        // Force setter to be called in case id was not specified.\n        this.id = this.id;\n    }\n\n    ngOnInit() {\n        this.selectionModel = new SelectionModel<McOption>(this.multiple);\n        this.stateChanges.next();\n\n        // We need `distinctUntilChanged` here, because some browsers will\n        // fire the animation end event twice for the same animation. See:\n        // https://github.com/angular/angular/issues/24084\n        this.panelDoneAnimatingStream\n            .pipe(distinctUntilChanged(), takeUntil(this.destroy))\n            .subscribe(() => {\n                if (this.panelOpen) {\n                    this.scrollTop = 0;\n                    this.openedChange.emit(true);\n                } else {\n                    this.openedChange.emit(false);\n                    this.panelDoneAnimating = false;\n                    this.overlayDir.offsetX = 0;\n                    this._changeDetectorRef.markForCheck();\n                }\n            });\n    }\n\n    ngAfterContentInit() {\n        this.initKeyManager();\n\n        this.selectionModel.changed\n            .pipe(takeUntil(this.destroy))\n            .subscribe((event) => {\n                event.added.forEach((option) => option.select());\n                event.removed.forEach((option) => option.deselect());\n            });\n\n        this.options.changes\n            .pipe(startWith(null), takeUntil(this.destroy))\n            .subscribe(() => {\n                this.resetOptions();\n                this.initializeSelection();\n            });\n    }\n\n    ngAfterViewInit(): void {\n        this.tags.changes\n            .subscribe(() => {\n                setTimeout(() => this.calculateHiddenItems(), 0);\n            });\n    }\n\n    ngDoCheck() {\n        if (this.ngControl) { this.updateErrorState(); }\n    }\n\n    ngOnChanges(changes: SimpleChanges) {\n        // Updating the disabled state is handled by `mixinDisabled`, but we need to additionally let\n        // the parent form field know to run change detection when the disabled state changes.\n        if (changes.disabled) {\n            this.stateChanges.next();\n        }\n    }\n\n    ngOnDestroy() {\n        this.destroy.next();\n        this.destroy.complete();\n        this.stateChanges.complete();\n    }\n\n    /** `View -> model callback called when value changes` */\n    _onChange: (value: any) => void = () => {};\n\n    /** `View -> model callback called when select has been touched` */\n    _onTouched = () => {};\n\n    /** Toggles the overlay panel open or closed. */\n    toggle(): void {\n        if (this.panelOpen) {\n            this.close();\n        } else {\n            this.open();\n        }\n    }\n\n    /** Opens the overlay panel. */\n    open(): void {\n        if (this.disabled || !this.options || !this.options.length || this._panelOpen) { return; }\n\n        this.triggerRect = this.trigger.nativeElement.getBoundingClientRect();\n        // Note: The computed font-size will be a string pixel value (e.g. \"16px\").\n        // `parseInt` ignores the trailing 'px' and converts this to a number.\n        this.triggerFontSize = parseInt(getComputedStyle(this.trigger.nativeElement)['font-size']);\n\n        this._panelOpen = true;\n        this.keyManager.withHorizontalOrientation(null);\n        this.calculateOverlayPosition();\n        this.highlightCorrectOption();\n        this._changeDetectorRef.markForCheck();\n\n        // Set the font size on the panel element once it exists.\n        this._ngZone.onStable.asObservable()\n            .pipe(take(1))\n            .subscribe(() => {\n                if (this.triggerFontSize && this.overlayDir.overlayRef && this.overlayDir.overlayRef.overlayElement) {\n                    this.overlayDir.overlayRef.overlayElement.style.fontSize = `${this.triggerFontSize}px`;\n                }\n            });\n    }\n\n    /** Closes the overlay panel and focuses the host element. */\n    close(): void {\n        if (this._panelOpen) {\n            this._panelOpen = false;\n            this.keyManager.withHorizontalOrientation(this.isRtl() ? 'rtl' : 'ltr');\n            this._changeDetectorRef.markForCheck();\n            this._onTouched();\n        }\n    }\n\n    /**\n     * Sets the select's value. Part of the ControlValueAccessor interface\n     * required to integrate with Angular's core forms API.\n     *\n     * @param value New value to be written to the model.\n     */\n    writeValue(value: any): void {\n        if (this.options) {\n            this.setSelectionByValue(value);\n        }\n    }\n\n    /**\n     * Saves a callback function to be invoked when the select's value\n     * changes from user input. Part of the ControlValueAccessor interface\n     * required to integrate with Angular's core forms API.\n     *\n     * @param fn Callback to be triggered when the value changes.\n     */\n    registerOnChange(fn: (value: any) => void): void {\n        this._onChange = fn;\n    }\n\n    /**\n     * Saves a callback function to be invoked when the select is blurred\n     * by the user. Part of the ControlValueAccessor interface required\n     * to integrate with Angular's core forms API.\n     *\n     * @param fn Callback to be triggered when the component has been touched.\n     */\n    registerOnTouched(fn: () => {}): void {\n        this._onTouched = fn;\n    }\n\n    /**\n     * Disables the select. Part of the ControlValueAccessor interface required\n     * to integrate with Angular's core forms API.\n     *\n     * @param isDisabled Sets whether the component is disabled.\n     */\n    setDisabledState(isDisabled: boolean): void {\n        this.disabled = isDisabled;\n        this._changeDetectorRef.markForCheck();\n        this.stateChanges.next();\n    }\n\n    get selected(): McOption | McOption[] {\n        return this.multiple ? this.selectionModel.selected : this.selectionModel.selected[0];\n    }\n\n    get triggerValue(): string {\n        if (this.empty) { return ''; }\n\n        if (this._multiple) {\n            const selectedOptions = this.selectionModel.selected.map((option) => option.viewValue);\n\n            if (this.isRtl()) { selectedOptions.reverse(); }\n\n            return selectedOptions.join(', ');\n        }\n\n        return this.selectionModel.selected[0].viewValue;\n    }\n\n    get triggerValues(): McOption[] {\n        if (this.empty) { return []; }\n\n        if (this._multiple) {\n            const selectedOptions = this.selectionModel.selected;\n\n            if (this.isRtl()) { selectedOptions.reverse(); }\n\n            return selectedOptions;\n        }\n\n        return [this.selectionModel.selected[0]];\n    }\n\n    get empty(): boolean {\n        return !this.selectionModel || this.selectionModel.isEmpty();\n    }\n\n    isRtl(): boolean {\n        return this._dir ? this._dir.value === 'rtl' : false;\n    }\n\n    handleKeydown(event: KeyboardEvent): void {\n        if (!this.disabled) {\n            if (this.panelOpen) {\n                this.handleOpenKeydown(event);\n            } else {\n                this.handleClosedKeydown(event);\n            }\n        }\n    }\n\n    /**\n     * When the panel content is done fading in, the panelDoneAnimating property is\n     * set so the proper class can be added to the panel.\n     */\n    onFadeInDone(): void {\n        this.panelDoneAnimating = this.panelOpen;\n        this._changeDetectorRef.markForCheck();\n    }\n\n    onFocus() {\n        if (!this.disabled) {\n            this._focused = true;\n\n            this.stateChanges.next();\n        }\n    }\n\n    /**\n     * Calls the touched callback only if the panel is closed. Otherwise, the trigger will\n     * \"blur\" to the panel when it opens, causing a false positive.\n     */\n    onBlur() {\n        this._focused = false;\n\n        if (!this.disabled && !this.panelOpen) {\n            this._onTouched();\n            this._changeDetectorRef.markForCheck();\n            this.stateChanges.next();\n        }\n    }\n\n    /**\n     * Callback that is invoked when the overlay panel has been attached.\n     */\n    onAttached(): void {\n        this.overlayDir.positionChange\n            .pipe(take(1))\n            .subscribe(() => {\n                this._changeDetectorRef.detectChanges();\n                this.calculateOverlayOffsetX();\n                this.panel.nativeElement.scrollTop = this.scrollTop;\n            });\n    }\n\n    /** Returns the theme to be used on the panel. */\n    getPanelTheme(): string {\n        return this._parentFormField ? `mc-${this._parentFormField.color}` : '';\n    }\n\n    /** Focuses the select element. */\n    focus(): void {\n        this.elementRef.nativeElement.focus();\n    }\n\n    /**\n     * Calculates the scroll position of the select's overlay panel.\n     *\n     * Attempts to center the selected option in the panel. If the option is\n     * too high or too low in the panel to be scrolled to the center, it clamps the\n     * scroll position to the min or max scroll positions respectively.\n     */\n    calculateOverlayScroll(selectedIndex: number, scrollBuffer: number, maxScroll: number): number {\n        const itemHeight = this.getItemHeight();\n        const optionOffsetFromScrollTop = itemHeight * selectedIndex;\n\n        /* tslint:disable-next-line:no-magic-numbers */\n        const halfOptionHeight = itemHeight / 2;\n\n        // Starts at the optionOffsetFromScrollTop, which scrolls the option to the top of the\n        // scroll container, then subtracts the scroll buffer to scroll the option down to\n        // the center of the overlay panel. Half the option height must be re-added to the\n        // scrollTop so the option is centered based on its middle, not its top edge.\n        const optimalScrollPosition = optionOffsetFromScrollTop - scrollBuffer + halfOptionHeight;\n\n        return Math.min(Math.max(0, optimalScrollPosition), maxScroll);\n    }\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    onContainerClick() {\n        this.focus();\n        this.open();\n    }\n\n    /** Invoked when an option is clicked. */\n    onRemoveMatcherItem(option: McOption, $event): void {\n        $event.stopPropagation();\n\n        option.deselect();\n    }\n\n    calculateHiddenItems(): void {\n        if (this.empty || !this.multiple) { return; }\n\n        let visibleItems: number = 0;\n        const totalItemsWidth = this.getTotalItemsWidthInMatcher();\n        let totalVisibleItemsWidth: number = 0;\n        const itemMargin: number = 4;\n\n        this.tags.forEach((tag) => {\n            if (tag.nativeElement.offsetTop < tag.nativeElement.offsetHeight) {\n                totalVisibleItemsWidth += tag.nativeElement.getBoundingClientRect().width + itemMargin;\n                visibleItems++;\n            }\n        });\n\n        this.hiddenItems = (this.selected as ArrayLike<McOption>).length - visibleItems;\n\n        if (this.hiddenItems) {\n            const itemsCounter = this.trigger.nativeElement.querySelector('.mc-select__match-hidden-text');\n            const matcherList = this.trigger.nativeElement.querySelector('.mc-select__match-list');\n\n            const itemsCounterShowed = itemsCounter.offsetTop < itemsCounter.offsetHeight;\n            // const itemsCounterWidth: number = itemsCounter.getBoundingClientRect().width;\n            const itemsCounterWidth: number = 86;\n\n            const matcherListWidth: number = matcherList.getBoundingClientRect().width;\n            const matcherWidth: number = matcherListWidth + itemsCounterWidth;\n\n            if (itemsCounterShowed && (totalItemsWidth < matcherWidth)) { this.hiddenItems = 0; }\n\n            if (\n                totalVisibleItemsWidth === matcherListWidth ||\n                (totalVisibleItemsWidth + itemsCounterWidth) < matcherListWidth\n            ) {\n                this._changeDetectorRef.markForCheck();\n\n                return ;\n            } else if (!itemsCounterShowed && (totalItemsWidth + itemsCounterWidth) > matcherWidth) {\n                this.hiddenItems++;\n            }\n        }\n\n        this._changeDetectorRef.markForCheck();\n    }\n\n    private getTotalItemsWidthInMatcher(): number {\n        const triggerClone = this.trigger.nativeElement.cloneNode(true);\n        triggerClone.querySelector('.mc-select__match-hidden-text').remove();\n\n        this._renderer.setStyle(triggerClone, 'position', 'absolute');\n        this._renderer.setStyle(triggerClone, 'visibility', 'hidden');\n        this._renderer.setStyle(triggerClone, 'top', '-100%');\n        this._renderer.setStyle(triggerClone, 'left', '0');\n\n        this._renderer.appendChild(this.trigger.nativeElement, triggerClone);\n\n        let totalItemsWidth: number = 0;\n        const itemMargin: number = 4;\n        triggerClone.querySelectorAll('mc-tag').forEach((item) => {\n            totalItemsWidth += item.getBoundingClientRect().width as number + itemMargin;\n        });\n\n        triggerClone.remove();\n\n        return totalItemsWidth;\n    }\n\n    /** Handles keyboard events while the select is closed. */\n    private handleClosedKeydown(event: KeyboardEvent): void {\n        /* tslint:disable-next-line */\n        const keyCode = event.keyCode;\n        const isArrowKey = keyCode === DOWN_ARROW || keyCode === UP_ARROW ||\n            keyCode === LEFT_ARROW || keyCode === RIGHT_ARROW;\n        const isOpenKey = keyCode === ENTER || keyCode === SPACE;\n\n        // Open the select on ALT + arrow key to match the native <select>\n        if (isOpenKey || ((this.multiple || event.altKey) && isArrowKey)) {\n            event.preventDefault(); // prevents the page from scrolling down when pressing space\n            this.open();\n        } else if (!this.multiple) {\n            this.keyManager.onKeydown(event);\n        }\n    }\n\n    /** Handles keyboard events when the selected is open. */\n    private handleOpenKeydown(event: KeyboardEvent): void {\n        /* tslint:disable-next-line */\n        const keyCode = event.keyCode;\n        const isArrowKey = keyCode === DOWN_ARROW || keyCode === UP_ARROW;\n        const manager = this.keyManager;\n\n        if (keyCode === HOME || keyCode === END) {\n            event.preventDefault();\n\n            if (keyCode === HOME) {\n                manager.setFirstItemActive();\n            } else {\n                manager.setLastItemActive();\n            }\n\n        } else if (isArrowKey && event.altKey) {\n            // Close the select on ALT + arrow key to match the native <select>\n            event.preventDefault();\n            this.close();\n        } else if ((keyCode === ENTER || keyCode === SPACE) && manager.activeItem) {\n            event.preventDefault();\n            manager.activeItem.selectViaInteraction();\n        } else if (this._multiple && keyCode === A && event.ctrlKey) {\n            event.preventDefault();\n            const hasDeselectedOptions = this.options.some((option) => !option.selected);\n            this.options.forEach((option) => {\n                if (hasDeselectedOptions && !option.disabled) {\n                    option.select();\n                } else {\n                    option.deselect();\n                }\n            });\n        } else {\n            const previouslyFocusedIndex = manager.activeItemIndex;\n\n            manager.onKeydown(event);\n\n            if (this._multiple && isArrowKey && event.shiftKey && manager.activeItem &&\n                manager.activeItemIndex !== previouslyFocusedIndex) {\n                manager.activeItem.selectViaInteraction();\n            }\n        }\n    }\n\n    private initializeSelection(): void {\n        // Defer setting the value in order to avoid the \"Expression\n        // has changed after it was checked\" errors from Angular.\n        Promise.resolve().then(() => {\n            this.setSelectionByValue(this.ngControl ? this.ngControl.value : this._value);\n        });\n    }\n\n    /**\n     * Sets the selected option based on a value. If no option can be\n     * found with the designated value, the select trigger is cleared.\n     */\n    private setSelectionByValue(value: any | any[]): void {\n        if (this.multiple && value) {\n            if (!Array.isArray(value)) {\n                throw getMcSelectNonArrayValueError();\n            }\n\n            this.selectionModel.clear();\n            value.forEach((currentValue: any) => this.selectValue(currentValue));\n            this.sortValues();\n        } else {\n            this.selectionModel.clear();\n            const correspondingOption = this.selectValue(value);\n\n            // Shift focus to the active item. Note that we shouldn't do this in multiple\n            // mode, because we don't know what option the user interacted with last.\n            if (correspondingOption) {\n                this.keyManager.setActiveItem(correspondingOption);\n            }\n        }\n\n        this._changeDetectorRef.markForCheck();\n    }\n\n    /**\n     * Finds and selects and option based on its value.\n     * @returns Option that has the corresponding value.\n     */\n    private selectValue(value: any): McOption | undefined {\n        const correspondingOption = this.options.find((option: McOption) => {\n            try {\n                // Treat null as a special reset value.\n                return option.value != null && this._compareWith(option.value, value);\n            } catch (error) {\n                if (isDevMode()) {\n                    // Notify developers of errors in their comparator.\n                    console.warn(error);\n                }\n\n                return false;\n            }\n        });\n\n        if (correspondingOption) {\n            this.selectionModel.select(correspondingOption);\n        }\n\n        return correspondingOption;\n    }\n\n    /** Sets up a key manager to listen to keyboard events on the overlay panel. */\n    private initKeyManager() {\n        this.keyManager = new ActiveDescendantKeyManager<McOption>(this.options)\n            .withTypeAhead()\n            .withVerticalOrientation()\n            .withHorizontalOrientation(this.isRtl() ? 'rtl' : 'ltr');\n\n        this.keyManager.tabOut\n            .pipe(takeUntil(this.destroy))\n            .subscribe(() => {\n                // Restore focus to the trigger before closing. Ensures that the focus\n                // position won't be lost if the user got focus into the overlay.\n                this.focus();\n                this.close();\n            });\n\n        this.keyManager.change\n            .pipe(takeUntil(this.destroy))\n            .subscribe(() => {\n                if (this._panelOpen && this.panel) {\n                    this.scrollActiveOptionIntoView();\n                } else if (!this._panelOpen && !this.multiple && this.keyManager.activeItem) {\n                    this.keyManager.activeItem.selectViaInteraction();\n                }\n            });\n    }\n\n    /** Drops current option subscriptions and IDs and resets from scratch. */\n    private resetOptions(): void {\n        const changedOrDestroyed = merge(this.options.changes, this.destroy);\n\n        this.optionSelectionChanges\n            .pipe(takeUntil(changedOrDestroyed))\n            .subscribe((event) => {\n                this.onSelect(event.source, event.isUserInput);\n\n                if (event.isUserInput && !this.multiple && this._panelOpen) {\n                    this.close();\n                    this.focus();\n                }\n            });\n\n        // Listen to changes in the internal state of the options and react accordingly.\n        // Handles cases like the labels of the selected options changing.\n        merge(...this.options.map((option) => option.stateChanges))\n            .pipe(takeUntil(changedOrDestroyed))\n            .subscribe(() => {\n                this._changeDetectorRef.markForCheck();\n                this.stateChanges.next();\n            });\n\n        this.setOptionIds();\n    }\n\n    /** Invoked when an option is clicked. */\n    private onSelect(option: McOption, isUserInput: boolean): void {\n        const wasSelected = this.selectionModel.isSelected(option);\n\n        if (option.value == null && !this._multiple) {\n            option.deselect();\n            this.selectionModel.clear();\n            this.propagateChanges(option.value);\n        } else {\n            if (option.selected) {\n                this.selectionModel.select(option);\n            } else {\n                this.selectionModel.deselect(option);\n            }\n\n            if (isUserInput) {\n                this.keyManager.setActiveItem(option);\n            }\n\n            if (this.multiple) {\n                this.sortValues();\n\n                if (isUserInput) {\n                    // In case the user selected the option with their mouse, we\n                    // want to restore focus back to the trigger, in order to\n                    // prevent the select keyboard controls from clashing with\n                    // the ones from `mc-option`.\n                    this.focus();\n                }\n            }\n        }\n\n        if (wasSelected !== this.selectionModel.isSelected(option)) {\n            this.propagateChanges();\n        }\n\n        this.stateChanges.next();\n    }\n\n    /** Sorts the selected values in the selected based on their order in the panel. */\n    private sortValues() {\n        if (this.multiple) {\n            const options = this.options.toArray();\n\n            this.selectionModel.sort((a, b) => {\n                return this.sortComparator ? this.sortComparator(a, b, options) :\n                    options.indexOf(a) - options.indexOf(b);\n            });\n            this.stateChanges.next();\n        }\n    }\n\n    /** Emits change event to set the model value. */\n    private propagateChanges(fallbackValue?: any): void {\n        let valueToEmit: any = null;\n\n        if (this.multiple) {\n            valueToEmit = (this.selected as McOption[]).map((option) => option.value);\n        } else {\n            valueToEmit = this.selected ? (this.selected as McOption).value : fallbackValue;\n        }\n\n        this._value = valueToEmit;\n        this.valueChange.emit(valueToEmit);\n        this._onChange(valueToEmit);\n        this.selectionChange.emit(new McSelectChange(this, valueToEmit));\n        this._changeDetectorRef.markForCheck();\n    }\n\n    /** Records option IDs to pass to the aria-owns property. */\n    private setOptionIds() {\n        this.optionIds = this.options.map((option) => option.id).join(' ');\n    }\n\n    /**\n     * Highlights the selected item. If no option is selected, it will highlight\n     * the first item instead.\n     */\n    private highlightCorrectOption(): void {\n        if (this.keyManager) {\n            if (this.empty) {\n                this.keyManager.setFirstItemActive();\n            } else {\n                this.keyManager.setActiveItem(this.selectionModel.selected[0]);\n            }\n        }\n    }\n\n    /** Scrolls the active option into view. */\n    private scrollActiveOptionIntoView(): void {\n        const activeOptionIndex = this.keyManager.activeItemIndex || 0;\n        const labelCount = countGroupLabelsBeforeOption(activeOptionIndex, this.options, this.optionGroups);\n\n        this.panel.nativeElement.scrollTop = getOptionScrollPosition(\n            activeOptionIndex + labelCount,\n            this.getItemHeight(),\n            this.panel.nativeElement.scrollTop,\n            SELECT_PANEL_MAX_HEIGHT\n        );\n    }\n\n    /** Gets the index of the provided option in the option list. */\n    private getOptionIndex(option: McOption): number | undefined {\n        /* tslint:disable-next-line */\n        return this.options.reduce((result: number, current: McOption, index: number) => {\n            /* tslint:disable-next-line:strict-type-predicates */\n            return result === undefined ? (option === current ? index : undefined) : result;\n        }, undefined);\n    }\n\n    /** Calculates the scroll position and x- and y-offsets of the overlay panel. */\n    private calculateOverlayPosition(): void {\n        const itemHeight = this.getItemHeight();\n        const items = this.getItemCount();\n        const panelHeight = Math.min(items * itemHeight, SELECT_PANEL_MAX_HEIGHT);\n        const scrollContainerHeight = items * itemHeight;\n\n        // The farthest the panel can be scrolled before it hits the bottom\n        const maxScroll = scrollContainerHeight - panelHeight;\n\n        // If no value is selected we open the popup to the first item.\n        let selectedOptionOffset =\n            this.empty ? 0 : this.getOptionIndex(this.selectionModel.selected[0])!;\n\n        selectedOptionOffset += countGroupLabelsBeforeOption(selectedOptionOffset, this.options, this.optionGroups);\n\n        // We must maintain a scroll buffer so the selected option will be scrolled to the\n        // center of the overlay panel rather than the top.\n        /* tslint:disable-next-line:no-magic-numbers */\n        const scrollBuffer = panelHeight / 2;\n        this.scrollTop = this.calculateOverlayScroll(selectedOptionOffset, scrollBuffer, maxScroll);\n        this.offsetY = this.calculateOverlayOffsetY();\n\n        this.checkOverlayWithinViewport(maxScroll);\n    }\n\n    /**\n     * Sets the x-offset of the overlay panel in relation to the trigger's top start corner.\n     * This must be adjusted to align the selected option text over the trigger text when\n     * the panel opens. Will change based on LTR or RTL text direction. Note that the offset\n     * can't be calculated until the panel has been attached, because we need to know the\n     * content width in order to constrain the panel within the viewport.\n     */\n    private calculateOverlayOffsetX(): void {\n        const overlayRect = this.overlayDir.overlayRef.overlayElement.getBoundingClientRect();\n        const viewportSize = this._viewportRuler.getViewportSize();\n        const isRtl = this.isRtl();\n        /* tslint:disable-next-line:no-magic-numbers */\n        const paddingWidth = SELECT_PANEL_PADDING_X * 2;\n        let offsetX: number;\n\n        const selected = this.selectionModel.selected[0] || this.options.first;\n        offsetX = selected && selected.group ? SELECT_PANEL_INDENT_PADDING_X : SELECT_PANEL_PADDING_X;\n\n        // Invert the offset in LTR.\n        if (!isRtl) { offsetX *= -1; }\n\n        // Determine how much the select overflows on each side.\n        const leftOverflow = 0 - (overlayRect.left + offsetX - (isRtl ? paddingWidth : 0));\n        const rightOverflow = overlayRect.right + offsetX - viewportSize.width\n            + (isRtl ? 0 : paddingWidth);\n\n        // If the element overflows on either side, reduce the offset to allow it to fit.\n        if (leftOverflow > 0) {\n            offsetX += leftOverflow + SELECT_PANEL_VIEWPORT_PADDING;\n        } else if (rightOverflow > 0) {\n            offsetX -= rightOverflow + SELECT_PANEL_VIEWPORT_PADDING;\n        }\n\n        // Set the offset directly in order to avoid having to go through change detection and\n        // potentially triggering \"changed after it was checked\" errors. Round the value to avoid\n        // blurry content in some browsers.\n        this.overlayDir.offsetX = Math.round(offsetX);\n        this.overlayDir.overlayRef.updatePosition();\n    }\n\n    /**\n     * Calculates the y-offset of the select's overlay panel in relation to the\n     * top start corner of the trigger. It has to be adjusted in order for the\n     * selected option to be aligned over the trigger when the panel opens.\n     */\n    private calculateOverlayOffsetY(): number {\n        // const itemHeight = this.getItemHeight();\n        // const optionHeightAdjustment = (itemHeight - this.triggerRect.height) / 2;\n\n        // todo I'm not sure that we will use it\n        return 0;\n        // return Math.round(-optionHeightAdjustment);\n    }\n\n    /**\n     * Checks that the attempted overlay position will fit within the viewport.\n     * If it will not fit, tries to adjust the scroll position and the associated\n     * y-offset so the panel can open fully on-screen. If it still won't fit,\n     * sets the offset back to 0 to allow the fallback position to take over.\n     */\n    private checkOverlayWithinViewport(maxScroll: number): void {\n        const itemHeight = this.getItemHeight();\n        const viewportSize = this._viewportRuler.getViewportSize();\n\n        const topSpaceAvailable = this.triggerRect.top - SELECT_PANEL_VIEWPORT_PADDING;\n        const bottomSpaceAvailable =\n            viewportSize.height - this.triggerRect.bottom - SELECT_PANEL_VIEWPORT_PADDING;\n\n        const panelHeightTop = Math.abs(this.offsetY);\n        const totalPanelHeight =\n            Math.min(this.getItemCount() * itemHeight, SELECT_PANEL_MAX_HEIGHT);\n        const panelHeightBottom = totalPanelHeight - panelHeightTop - this.triggerRect.height;\n\n        if (panelHeightBottom > bottomSpaceAvailable) {\n            this.adjustPanelUp(panelHeightBottom, bottomSpaceAvailable);\n        } else if (panelHeightTop > topSpaceAvailable) {\n            this.adjustPanelDown(panelHeightTop, topSpaceAvailable, maxScroll);\n        } else {\n            this.transformOrigin = this.getOriginBasedOnOption();\n        }\n    }\n\n    /** Adjusts the overlay panel up to fit in the viewport. */\n    private adjustPanelUp(panelHeightBottom: number, bottomSpaceAvailable: number) {\n        // Browsers ignore fractional scroll offsets, so we need to round.\n        const distanceBelowViewport = Math.round(panelHeightBottom - bottomSpaceAvailable);\n\n        // Scrolls the panel up by the distance it was extending past the boundary, then\n        // adjusts the offset by that amount to move the panel up into the viewport.\n        this.scrollTop -= distanceBelowViewport;\n        this.offsetY -= distanceBelowViewport;\n        this.transformOrigin = this.getOriginBasedOnOption();\n\n        // If the panel is scrolled to the very top, it won't be able to fit the panel\n        // by scrolling, so set the offset to 0 to allow the fallback position to take\n        // effect.\n        if (this.scrollTop <= 0) {\n            this.scrollTop = 0;\n            this.offsetY = 0;\n            this.transformOrigin = `50% bottom 0px`;\n        }\n    }\n\n    /** Adjusts the overlay panel down to fit in the viewport. */\n    private adjustPanelDown(panelHeightTop: number, topSpaceAvailable: number, maxScroll: number) {\n        // Browsers ignore fractional scroll offsets, so we need to round.\n        const distanceAboveViewport = Math.round(panelHeightTop - topSpaceAvailable);\n\n        // Scrolls the panel down by the distance it was extending past the boundary, then\n        // adjusts the offset by that amount to move the panel down into the viewport.\n        this.scrollTop += distanceAboveViewport;\n        this.offsetY += distanceAboveViewport;\n        this.transformOrigin = this.getOriginBasedOnOption();\n\n        // If the panel is scrolled to the very bottom, it won't be able to fit the\n        // panel by scrolling, so set the offset to 0 to allow the fallback position\n        // to take effect.\n        if (this.scrollTop >= maxScroll) {\n            this.scrollTop = maxScroll;\n            this.offsetY = 0;\n            this.transformOrigin = `50% top 0px`;\n\n            return;\n        }\n    }\n\n    /** Sets the transform origin point based on the selected option. */\n    private getOriginBasedOnOption(): string {\n        const itemHeight = this.getItemHeight();\n        /* tslint:disable-next-line:no-magic-numbers */\n        const optionHeightAdjustment = (itemHeight - this.triggerRect.height) / 2;\n        /* tslint:disable-next-line:no-magic-numbers */\n        const originY = Math.abs(this.offsetY) - optionHeightAdjustment + itemHeight / 2;\n\n        return `50% ${originY}px 0px`;\n    }\n\n    /** Calculates the amount of items in the select. This includes options and group labels. */\n    private getItemCount(): number {\n        return this.options.length + this.optionGroups.length;\n    }\n\n    /** Calculates the height of the select's options. */\n    private getItemHeight(): number {\n        // todo доделать\n        /* tslint:disable-next-line:no-magic-numbers */\n        return 32;\n        // return this.triggerFontSize * SELECT_ITEM_HEIGHT_EM;\n    }\n\n    /** Comparison function to specify which option is displayed. Defaults to object equality. */\n    private _compareWith = (o1: any, o2: any) => o1 === o2;\n}\n","export enum TimeParts {\n    hours,\n    minutes,\n    seconds\n}\n\nexport enum TimeFormats {\n    HHmmss = 'HH:mm:ss',\n    HHmm = 'HH:mm'\n}\n\nexport const TIMEFORMAT_PLACEHOLDERS: { [timeFormat: string]: string } = {\n    [TimeFormats.HHmmss]: '  :  :  ',\n    [TimeFormats.HHmm]: '  :  '\n};\n\nexport const DEFAULT_TIME_FORMAT: TimeFormats = TimeFormats.HHmm;\n\nexport const HOURS_MINUTES_SECONDS_REGEXP =\n    new RegExp(/^([0-9]|0[0-9]|1[0-9]|2[0-3]):([0-5][0-9]|[0-9]):([0-5][0-9]|[0-9])?$/);\nexport const HOURS_MINUTES_REGEXP = /^([0-9]|0[0-9]|1[0-9]|2[0-3]):([0-5][0-9]|[0-9])?$/;\nexport const HOURS_ONLY_REGEXP = /^([0-9]|0[0-9]|1[0-9]|2[0-3]):?$/;\n\nexport const SECONDS_PER_MINUTE: number = 59;\nexport const MINUTES_PER_HOUR: number = 59;\nexport const HOURS_PER_DAY: number = 23;\n\n// TODO Move it to common CDK\nexport const ARROW_UP_KEYCODE: string = 'ArrowUp';\nexport const ARROW_DOWN_KEYCODE: string = 'ArrowDown';\nexport const ARROW_LEFT_KEYCODE: string = 'ArrowLeft';\nexport const ARROW_RIGHT_KEYCODE: string = 'ArrowRight';\n","import { AnimationEvent } from '@angular/animations';\nimport {\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    ComponentRef,\n    ElementRef,\n    EmbeddedViewRef,\n    EventEmitter, Inject, InjectionToken,\n    OnDestroy,\n    ViewChild,\n    ViewEncapsulation\n} from '@angular/core';\n\nimport { BasePortalOutlet, CdkPortalOutlet, ComponentPortal, TemplatePortal } from '@ptsecurity/cdk/portal';\n\nimport {\n    mcSidepanelAnimations,\n    McSidepanelAnimationState,\n    mcSidepanelTransformAnimation\n} from './sidepanel-animations';\n\nimport { McSidepanelConfig, McSidepanelPosition } from './sidepanel-config';\n\n\nexport const MC_SIDEPANEL_WITH_INDENT =\n    new InjectionToken<boolean>('mc-sidepanel-with-indent');\n\nexport const MC_SIDEPANEL_WITH_SHADOW =\n    new InjectionToken<boolean>('mc-sidepanel-with-shadow');\n\n@Component({\n    selector: 'mc-sidepanel-container',\n    templateUrl: './sidepanel-container.component.html',\n    styleUrls: ['./sidepanel.css'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n    animations: [mcSidepanelAnimations.sidepanelState],\n    host: {\n        class: 'mc-sidepanel-container',\n        tabindex: '-1',\n        role: 'dialog',\n        'aria-modal': 'true',\n        '[attr.id]': 'id',\n        '[@state]': `{\n            value: animationState,\n            params: animationTransform\n        }`,\n        '(@state.start)': 'onAnimation($event)',\n        '(@state.done)': 'onAnimation($event)'\n    }\n})\nexport class McSidepanelContainerComponent extends BasePortalOutlet implements OnDestroy {\n    /** ID for the container DOM element. */\n    id: string;\n\n    /** The portal outlet inside of this container into which the content will be loaded. */\n    @ViewChild(CdkPortalOutlet) portalOutlet: CdkPortalOutlet;\n\n    /** The state of the sidepanel animations. */\n    animationState: McSidepanelAnimationState = McSidepanelAnimationState.Void;\n\n    animationTransform: { transformIn: string; transformOut: string };\n\n    /** Emits whenever the state of the animation changes. */\n    animationStateChanged = new EventEmitter<AnimationEvent>();\n\n    /** Whether the component has been destroyed. */\n    private destroyed: boolean;\n\n    constructor(\n        private elementRef: ElementRef<HTMLElement>,\n        private changeDetectorRef: ChangeDetectorRef,\n        public sidepanelConfig: McSidepanelConfig,\n        @Inject(MC_SIDEPANEL_WITH_INDENT) public withIndent: boolean,\n        @Inject(MC_SIDEPANEL_WITH_SHADOW) public withShadow: boolean) {\n        super();\n    }\n\n    ngOnDestroy(): void {\n        this.destroyed = true;\n    }\n\n    /** Attach a component portal as content to this sidepanel container. */\n    attachComponentPortal<T>(portal: ComponentPortal<T>): ComponentRef<T> {\n        this.validatePortalAttached();\n        this.setAnimation();\n        this.setPanelClass();\n\n        return this.portalOutlet.attachComponentPortal(portal);\n    }\n\n    /** Attach a template portal as content to this sidepanel container. */\n    attachTemplatePortal<C>(portal: TemplatePortal<C>): EmbeddedViewRef<C> {\n        this.validatePortalAttached();\n        this.setAnimation();\n        this.setPanelClass();\n\n        return this.portalOutlet.attachTemplatePortal(portal);\n    }\n\n    /** Begin animation of the sidepanel entrance into view. */\n    enter(): void {\n        if (!this.destroyed) {\n            this.animationState = McSidepanelAnimationState.Visible;\n            this.changeDetectorRef.detectChanges();\n        }\n    }\n\n    /** Begin animation of the sidepanel exiting from view. */\n    exit(): void {\n        if (!this.destroyed) {\n            this.animationState = McSidepanelAnimationState.Hidden;\n            this.changeDetectorRef.markForCheck();\n        }\n    }\n\n    onAnimation(event: AnimationEvent) {\n        this.animationStateChanged.emit(event);\n    }\n\n    private setAnimation() {\n        const position: McSidepanelPosition = this.sidepanelConfig.position!;\n\n        this.animationTransform = {\n            transformIn: mcSidepanelTransformAnimation[position].in,\n            transformOut: mcSidepanelTransformAnimation[position].out\n        };\n    }\n\n    private setPanelClass() {\n        const element: HTMLElement = this.elementRef.nativeElement;\n        const position: McSidepanelPosition = this.sidepanelConfig.position!;\n\n        element.classList.add(`mc-sidepanel-container_${position}`);\n\n        if (this.withShadow) {\n            element.classList.add('mc-sidepanel-container_shadowed');\n        }\n    }\n\n    private validatePortalAttached() {\n        if (this.portalOutlet.hasAttached()) {\n            throw Error('Attempting to attach sidepanel content after content is already attached');\n        }\n    }\n}\n","import { ESCAPE } from '@ptsecurity/cdk/keycodes';\nimport { OverlayRef } from '@ptsecurity/cdk/overlay';\nimport { merge, Observable, Subject } from 'rxjs';\nimport { filter, take } from 'rxjs/operators';\n\nimport { McSidepanelAnimationState } from './sidepanel-animations';\nimport { McSidepanelConfig } from './sidepanel-config';\nimport { McSidepanelContainerComponent } from './sidepanel-container.component';\n\n\n// Counter for unique sidepanel ids.\nlet uniqueId = 0;\n\nexport class McSidepanelRef<T = any, R = any> {\n    readonly id: string;\n\n    /** Instance of the component making up the content of the sidepanel. */\n    instance: T;\n\n    /** Subject for notifying the user that the sidepanel has been closed and dismissed. */\n    private readonly afterClosed$ = new Subject<R | undefined>();\n\n    /** Subject for notifying the user that the sidepanel has opened and appeared. */\n    private readonly afterOpened$ = new Subject<void>();\n\n    /** Result to be passed down to the `afterDismissed` stream. */\n    private result: R | undefined;\n\n    constructor(\n        public containerInstance: McSidepanelContainerComponent,\n        private overlayRef: OverlayRef,\n        public config: McSidepanelConfig) {\n\n        this.id = this.config.id || `mc-sidepanel-${uniqueId++}`;\n        this.containerInstance.id = this.id;\n\n        // Emit when opening animation completes\n        containerInstance.animationStateChanged.pipe(\n            filter(\n                (event) => event.phaseName === 'done' && event.toState === McSidepanelAnimationState.Visible\n            ),\n            take(1)\n        ).subscribe(() => {\n            this.afterOpened$.next();\n            this.afterOpened$.complete();\n        });\n\n        // Dispose overlay when closing animation is complete\n        containerInstance.animationStateChanged.pipe(\n            filter(\n                (event) => event.phaseName === 'done' && event.toState === McSidepanelAnimationState.Hidden\n            ),\n            take(1)\n        ).subscribe(() => {\n            overlayRef.dispose();\n            this.afterClosed$.next(this.result);\n            this.afterClosed$.complete();\n        });\n\n        if (!containerInstance.sidepanelConfig.disableClose) {\n            merge(\n                overlayRef.backdropClick(),\n                overlayRef.keydownEvents().pipe(\n                    // tslint:disable:deprecation\n                    // keyCode is deprecated, but IE11 and Edge don't support code property, which we need use instead\n                    filter((event) => event.keyCode === ESCAPE)\n                )\n            ).subscribe(() => this.close());\n        }\n    }\n\n    close(result?: R): void {\n        if (!this.afterClosed$.closed) {\n            // Transition the backdrop in parallel to the sidepanel.\n            this.containerInstance.animationStateChanged.pipe(\n                filter((event) => event.phaseName === 'done'),\n                take(1)\n            ).subscribe(() => this.overlayRef.detachBackdrop());\n\n            this.result = result;\n            this.containerInstance.exit();\n        }\n    }\n\n    /** Gets an observable that is notified when the sidepanel is finished closing. */\n    afterClosed(): Observable<R | undefined> {\n        return this.afterClosed$.asObservable();\n    }\n\n    /** Gets an observable that is notified when the sidepanel has opened and appeared. */\n    afterOpened(): Observable<void> {\n        return this.afterOpened$.asObservable();\n    }\n}\n","import {\n    ComponentRef,\n    Inject,\n    Injectable,\n    InjectionToken,\n    Injector, OnDestroy,\n    Optional,\n    SkipSelf,\n    TemplateRef\n} from '@angular/core';\nimport { Overlay, OverlayConfig, OverlayRef } from '@ptsecurity/cdk/overlay';\nimport { ComponentPortal, IComponentType, PortalInjector, TemplatePortal } from '@ptsecurity/cdk/portal';\n\nimport { MC_SIDEPANEL_DATA, McSidepanelConfig } from './sidepanel-config';\nimport {\n    McSidepanelContainerComponent,\n    MC_SIDEPANEL_WITH_INDENT,\n    MC_SIDEPANEL_WITH_SHADOW\n} from './sidepanel-container.component';\nimport { McSidepanelRef } from './sidepanel-ref';\n\n\n/** Injection token that can be used to specify default sidepanel options. */\nexport const MC_SIDEPANEL_DEFAULT_OPTIONS =\n    new InjectionToken<McSidepanelConfig>('mc-sidepanel-default-options');\n\n@Injectable()\nexport class McSidepanelService implements OnDestroy {\n    private openedSidepanelsAtThisLevel: McSidepanelRef[] = [];\n\n    /** Keeps track of the currently-open sidepanels. */\n    get openedSidepanels(): McSidepanelRef[] {\n        return this.parentSidepanelService ? this.parentSidepanelService.openedSidepanels :\n            this.openedSidepanelsAtThisLevel;\n    }\n\n    constructor(\n        private overlay: Overlay,\n        private injector: Injector,\n        @Optional() @Inject(MC_SIDEPANEL_DEFAULT_OPTIONS) private defaultOptions: McSidepanelConfig,\n        @Optional() @SkipSelf() private parentSidepanelService: McSidepanelService) {\n    }\n\n    ngOnDestroy() {\n        // Only close the sidepanels at this level on destroy\n        // since the parent service may still be active.\n        this.closeSidepanels(this.openedSidepanelsAtThisLevel);\n    }\n\n    open<T, D = any>(componentOrTemplateRef: IComponentType<T> | TemplateRef<T>,\n                     config?: McSidepanelConfig<D>): McSidepanelRef<T> {\n        const fullConfig = {\n            ...(this.defaultOptions || new McSidepanelConfig()),\n            ...config\n        };\n\n        if (fullConfig.id && this.getSidepanelById(fullConfig.id)) {\n            throw Error(`Sidepanel with id \"${fullConfig.id}\" exists already. The sidepanel id must be unique.`);\n        }\n\n        const overlayRef = this.createOverlay(fullConfig);\n        const container = this.attachContainer(overlayRef, fullConfig);\n        const ref = new McSidepanelRef(container, overlayRef, fullConfig);\n\n        if (componentOrTemplateRef instanceof TemplateRef) {\n            container.attachTemplatePortal(new TemplatePortal<T>(componentOrTemplateRef, null!, {\n                $implicit: fullConfig.data,\n                sidepanelRef: ref\n            } as any));\n        } else {\n            const injector = this.createInjector(fullConfig, ref, container);\n            const portal = new ComponentPortal(componentOrTemplateRef, undefined, injector);\n            const contentRef = container.attachComponentPortal(portal);\n\n            ref.instance = contentRef.instance;\n        }\n\n        this.openedSidepanels.push(ref);\n        ref.afterClosed().subscribe(() => this.removeOpenSidepanel(ref));\n        container.enter();\n\n        return ref;\n    }\n\n    /**\n     * Closes all of the currently-open sidepanels.\n     */\n    closeAll(): void {\n        this.closeSidepanels(this.openedSidepanels);\n    }\n\n    /**\n     * Finds an open sidepanel by its id.\n     * @param id ID to use when looking up the sidepanel.\n     */\n    getSidepanelById(id: string): McSidepanelRef | undefined {\n        return this.openedSidepanels.find((sidepanel) => sidepanel.id === id);\n    }\n\n    /**\n     * Attaches the sidepanel container component to the overlay.\n     */\n    private attachContainer(overlayRef: OverlayRef, config: McSidepanelConfig): McSidepanelContainerComponent {\n        const openedSidepanelsWithSamePosition = this.getOpenedSidepanelsWithSamePosition(config);\n\n        const injector = new PortalInjector(this.injector, new WeakMap<any>([\n            [McSidepanelConfig, config],\n            [MC_SIDEPANEL_WITH_INDENT, openedSidepanelsWithSamePosition.length >= 1],\n            [MC_SIDEPANEL_WITH_SHADOW, openedSidepanelsWithSamePosition.length < 2] // tslint:disable-line\n        ]));\n\n        const containerPortal = new ComponentPortal(McSidepanelContainerComponent, undefined, injector);\n        const containerRef: ComponentRef<McSidepanelContainerComponent> = overlayRef.attach(containerPortal);\n\n        return containerRef.instance;\n    }\n\n    /**\n     * Creates a custom injector to be used inside the sidepanel. This allows a component loaded inside\n     * of a sidepanel to close itself and, optionally, to return a value.\n     * @param config Config object that is used to construct the sidepanel.\n     * @param sidepanelRef Reference to the sidepanel.\n     * @param sidepanelContainer Sidepanel container element that wraps all of the contents.\n     * @returns The custom injector that can be used inside the sidepanel.\n     */\n    private createInjector<T>(\n        config: McSidepanelConfig,\n        sidepanelRef: McSidepanelRef<T>,\n        sidepanelContainer: McSidepanelContainerComponent): PortalInjector {\n\n        // The McSidepanelContainerComponent is injected in the portal as the McSidepanelContainerComponent and\n        // the sidepanel's content are created out of the same ViewContainerRef and as such, are siblings for injector\n        // purposes. To allow the hierarchy that is expected, the McSidepanelContainerComponent is explicitly\n        // added to the injection tokens.\n        const injectionTokens = new WeakMap<any>([\n            [McSidepanelContainerComponent, sidepanelContainer],\n            [MC_SIDEPANEL_DATA, config.data],\n            [McSidepanelRef, sidepanelRef]\n        ]);\n\n        return new PortalInjector(this.injector, injectionTokens);\n    }\n\n    /**\n     * Creates a new overlay and places it in the correct location.\n     * @param config The user-specified sidepanel config.\n     */\n    private createOverlay(config: McSidepanelConfig): OverlayRef {\n        const overlayConfig = new OverlayConfig({\n            hasBackdrop: config.hasBackdrop,\n            backdropClass: this.getBackdropClass(config),\n            maxWidth: '100%',\n            panelClass: config.overlayPanelClass,\n            scrollStrategy: this.overlay.scrollStrategies.block(),\n            positionStrategy: this.overlay.position().global()\n        });\n\n        return this.overlay.create(overlayConfig);\n    }\n\n    private closeSidepanels(sidepanels: McSidepanelRef[]) {\n        const reversedOpenedSidepanels = [...sidepanels.reverse()];\n\n        reversedOpenedSidepanels.forEach((sidepanelRef: McSidepanelRef) => {\n            sidepanelRef.close();\n        });\n    }\n\n    private getBackdropClass(config: McSidepanelConfig): string {\n        const hasOpenedSidepanelWithBackdrop =\n            this.openedSidepanels.some((sidepanelRef) => sidepanelRef.config.hasBackdrop!);\n\n        return config.requiredBackdrop || !hasOpenedSidepanelWithBackdrop ? 'cdk-overlay-dark-backdrop' :\n            'cdk-overlay-transparent-backdrop';\n    }\n\n    private getOpenedSidepanelsWithSamePosition(config: McSidepanelConfig): McSidepanelRef[] {\n        return this.openedSidepanels.filter((sidepanelRef) => sidepanelRef.config.position === config.position);\n    }\n\n    /**\n     * Removes a sidepanel from the array of open sidepanels.\n     * @param sidepanelRef Sidepanel to be removed.\n     */\n    private removeOpenSidepanel(sidepanelRef: McSidepanelRef) {\n        const index = this.openedSidepanels.indexOf(sidepanelRef);\n\n        if (index > -1) {\n            this.openedSidepanels.splice(index, 1);\n        }\n    }\n}\n","import { Component, Directive, ElementRef, Input, OnChanges, OnInit, Optional, SimpleChanges } from '@angular/core';\n\nimport { McSidepanelRef } from './sidepanel-ref';\nimport { McSidepanelService } from './sidepanel.service';\n\n\n/**\n * Button that will close the current sidepanel.\n */\n@Directive({\n    selector: 'button[mc-sidepanel-close], button[mcSidepanelClose]',\n    host: {\n        '(click)': 'sidepanelRef.close(sidepanelResult)',\n        class: 'mc-sidepanel-close',\n        type: 'button'\n    }\n})\nexport class McSidepanelClose implements OnInit, OnChanges {\n    @Input('mc-sidepanel-close') sidepanelResult: any;\n\n    @Input('mcSidepanelClose') mcSidepanelClose: any;\n\n    constructor(\n        @Optional() public sidepanelRef: McSidepanelRef,\n        private elementRef: ElementRef<HTMLElement>,\n        private sidepanelService: McSidepanelService\n    ) {}\n\n    ngOnInit() {\n        if (!this.sidepanelRef) {\n            // When this directive is included in a sidepanel via TemplateRef (rather than being\n            // in a Component), the SidepanelRef isn't available via injection because embedded\n            // views cannot be given a custom injector. Instead, we look up the SidepanelRef by\n            // ID.\n            // This must occur in `onInit`, as the ID binding for the sidepanel container won't\n            // be resolved at constructor time. We use setTimeout by same reason.\n            setTimeout(() => {\n                this.sidepanelRef = getClosestSidepanel(this.elementRef, this.sidepanelService.openedSidepanels)!;\n            });\n        }\n    }\n\n    ngOnChanges(changes: SimpleChanges) {\n        const proxiedChange = changes.mcSidepanelClose || changes.sidepanelResult;\n\n        if (proxiedChange) {\n            this.sidepanelResult = proxiedChange.currentValue;\n        }\n    }\n}\n\n/**\n * Header of a sidepanel.\n */\n@Component({\n    selector: 'mc-sidepanel-header',\n    template: `\n        <div class=\"mc-sidepanel-title\">\n            <ng-content></ng-content>\n        </div>\n        <button *ngIf=\"closeable\" mc-sidepanel-close>\n            <span class=\"mc-sidepanel-close-x\">\n                <i mc-icon=\"mc-close-L_16\" class=\"mc-icon mc-icon_light\" color=\"second\"></i>\n            </span>\n        </button>\n    `,\n    host: {\n        class: 'mc-sidepanel-header'\n    }\n})\nexport class McSidepanelHeader {\n    @Input() closeable: boolean;\n}\n\n/**\n * Scrollable content container of a sidepanel.\n */\n@Directive({\n    selector: 'mc-sidepanel-body, [mc-sidepanel-body], mcSidepanelBody',\n    host: {\n        class: 'mc-sidepanel-body'\n    }\n})\nexport class McSidepanelBody {}\n\n/**\n * Footer of a sidepanel.\n */\n@Directive({\n    selector: 'mc-sidepanel-footer, [mc-sidepanel-footer], mcSidepanelFooter',\n    host: {\n        class: 'mc-sidepanel-footer'\n    }\n})\nexport class McSidepanelFooter {}\n\n/**\n * Actions block of a sidepanel footer.\n */\n@Directive({\n    selector: 'mc-sidepanel-actions, [mc-sidepanel-actions], mcSidepanelActions',\n    host: {\n        class: 'mc-sidepanel-actions'\n    }\n})\nexport class McSidepanelActions {}\n\n/**\n * Finds the closest McSidepanelRef to an element by looking at the DOM.\n * @param element Element relative to which to look for a sidepanel.\n * @param openSidepanels References to the currently-open sidepanels.\n */\nfunction getClosestSidepanel(element: ElementRef<HTMLElement>, openSidepanels: McSidepanelRef[]) {\n    let parent: HTMLElement | null = element.nativeElement.parentElement;\n\n    while (parent && !parent.classList.contains('mc-sidepanel-container')) {\n        parent = parent.parentElement;\n    }\n\n    return parent ? openSidepanels.find((sidepanel) => sidepanel.id === parent!.id) : null;\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { OverlayModule } from '@ptsecurity/cdk/overlay';\nimport { PortalModule } from '@ptsecurity/cdk/portal';\nimport { McCommonModule } from '@ptsecurity/mosaic/core';\nimport { McIconModule } from '@ptsecurity/mosaic/icon';\n\nimport { McSidepanelContainerComponent } from './sidepanel-container.component';\nimport {\n    McSidepanelActions,\n    McSidepanelBody,\n    McSidepanelClose,\n    McSidepanelFooter,\n    McSidepanelHeader\n} from './sidepanel-directives';\nimport { McSidepanelService } from './sidepanel.service';\n\n\n@NgModule({\n    imports: [\n        CommonModule,\n        OverlayModule,\n        PortalModule,\n        McCommonModule,\n        McIconModule\n    ],\n    providers: [McSidepanelService],\n    declarations: [\n        McSidepanelContainerComponent,\n        McSidepanelClose,\n        McSidepanelHeader,\n        McSidepanelBody,\n        McSidepanelFooter,\n        McSidepanelActions\n    ],\n    entryComponents: [McSidepanelContainerComponent],\n    exports: [\n        McSidepanelContainerComponent,\n        McSidepanelClose,\n        McSidepanelHeader,\n        McSidepanelBody,\n        McSidepanelFooter,\n        McSidepanelActions\n    ]\n})\nexport class McSidepanelModule {}\n","import {\n    ChangeDetectionStrategy,\n    Component,\n    Directive,\n    ElementRef,\n    Input,\n    NgZone, OnDestroy,\n    OnInit,\n    Renderer2,\n    ViewEncapsulation\n} from '@angular/core';\n\nimport { coerceBooleanProperty, coerceCssPixelValue, coerceNumberProperty } from '@ptsecurity/cdk/coercion';\n\n\ninterface IArea {\n    area: McSplitterAreaDirective;\n    index: number;\n    order: number;\n    initialSize: number;\n}\n\ninterface IPoint {\n    x: number;\n    y: number;\n}\n\n\nconst enum AttributeProperty {\n    Disabled = 'disabled'\n}\n\nconst enum Cursor {\n    Default = 'default',\n    ResizeColumn = 'col-resize',\n    ResizeRow = 'row-resize'\n}\n\nconst enum StyleProperty {\n    Cursor = 'cursor',\n    Flex = 'flex',\n    FlexBasis = 'flex-basis',\n    FlexDirection = 'flex-direction',\n    Height = 'height',\n    MaxWidth = 'max-width',\n    MinHeight = 'min-height',\n    MinWidth = 'minWidth',\n    OffsetHeight = 'offsetHeight',\n    OffsetWidth = 'offsetWidth',\n    Order = 'order',\n    Width = 'width'\n}\n\nconst enum State {\n    Disabled = 'disabled',\n    Horizontal = 'horizontal',\n    Vertical = 'vertical'\n}\n\nexport const enum Direction {\n    Horizontal = 'horizontal',\n    Vertical = 'vertical'\n}\n\n@Component({\n    selector: 'mc-splitter',\n    preserveWhitespaces: false,\n    styleUrls: ['splitter.css'],\n    templateUrl: './splitter.component.html',\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class McSplitterComponent implements OnInit {\n    readonly areas: IArea[] = [];\n\n    private _direction: Direction;\n    private _disabled: boolean = false;\n    private _gutterSize: number = 6;\n\n    private isDragging: boolean = false;\n\n    private readonly areaPositionDivider: number = 2;\n    private readonly listeners: (() => void)[] = [];\n\n    @Input()\n    set direction(direction: Direction) {\n        this._direction = direction;\n    }\n\n    get direction(): Direction {\n        return this._direction;\n    }\n\n    @Input()\n    set disabled(disabled: boolean) {\n        this._disabled = coerceBooleanProperty(disabled);\n    }\n\n    get disabled(): boolean {\n        return this._disabled;\n    }\n\n    @Input()\n    set gutterSize(gutterSize: number) {\n        const size = coerceNumberProperty(gutterSize);\n        this._gutterSize = size > 0 ? size : this.gutterSize;\n    }\n\n    get gutterSize(): number {\n        return this._gutterSize;\n    }\n\n    constructor(private elementRef: ElementRef,\n                private ngZone: NgZone,\n                private renderer: Renderer2) {}\n\n    addArea(area: McSplitterAreaDirective): void {\n        const index: number = this.areas.length;\n        const order: number = index * this.areaPositionDivider;\n        const size: number = area.getSize();\n\n        area.setOrder(order);\n\n        this.areas.push({\n            area,\n            index,\n            order,\n            initialSize: size\n        });\n    }\n\n    ngOnInit(): void {\n        if (!this.direction) {\n            this.direction = Direction.Horizontal;\n        }\n\n        this.setStyle(StyleProperty.FlexDirection, this.isVertical() ? 'column' : 'row');\n    }\n\n    onMouseDown(event: MouseEvent, leftAreaIndex: number, rightAreaIndex: number) {\n        if (this.disabled) {\n            return;\n        }\n\n        const leftArea = this.areas[leftAreaIndex];\n        const rightArea = this.areas[rightAreaIndex];\n\n        const startPoint: IPoint = {\n            x: event.screenX,\n            y: event.screenY\n        };\n\n        leftArea.initialSize = leftArea.area.getSize();\n        rightArea.initialSize = rightArea.area.getSize();\n\n        this.areas.forEach((item) => {\n            const size = item.area.getSize();\n            item.area.disableFlex();\n            item.area.setSize(size);\n        });\n\n        this.ngZone.runOutsideAngular(() => {\n            this.listeners.push(\n                this.renderer.listen(\n                    'document',\n                    'mouseup',\n                    () => this.onMouseUp()\n                )\n            );\n        });\n\n        this.ngZone.runOutsideAngular(() => {\n            this.listeners.push(\n                this.renderer.listen(\n                    'document',\n                    'mousemove',\n                    (e: MouseEvent) => this.onMouseMove(e, startPoint, leftArea, rightArea)\n                )\n            );\n        });\n\n        this.isDragging = true;\n    }\n\n    removeArea(area: McSplitterAreaDirective): void {\n        let indexToRemove: number = -1;\n\n        this.areas.some((item, index) => {\n            if (item.area === area) {\n                indexToRemove = index;\n\n                return true;\n            }\n\n            return false;\n        });\n\n        if (indexToRemove === -1) {\n            return;\n        }\n\n        this.areas.splice(indexToRemove, 1);\n    }\n\n    private isVertical(): boolean {\n        return this.direction === Direction.Vertical;\n    }\n\n    private onMouseMove(event: MouseEvent, startPoint: IPoint, leftArea: IArea, rightArea: IArea) {\n        if (!this.isDragging || this.disabled) {\n            return;\n        }\n\n        const endPoint: IPoint = {\n            x: event.screenX,\n            y: event.screenY\n        };\n\n        const offset = this.isVertical()\n            ? startPoint.y - endPoint.y\n            : startPoint.x - endPoint.x;\n\n        const newLeftAreaSize = leftArea.initialSize - offset;\n        const newRightAreaSize = rightArea.initialSize + offset;\n\n        const minLeftAreaSize = leftArea.area.getMinSize();\n        const minRightAreaSize = rightArea.area.getMinSize();\n\n        if (newLeftAreaSize <= minLeftAreaSize || newRightAreaSize <= minRightAreaSize) {\n            const rightAreaOffset = leftArea.initialSize - minLeftAreaSize;\n\n            leftArea.area.setSize(minLeftAreaSize);\n            rightArea.area.setSize(rightArea.initialSize + rightAreaOffset);\n        } else if (newLeftAreaSize <= 0) {\n            leftArea.area.setSize(0);\n            rightArea.area.setSize(rightArea.initialSize + leftArea.initialSize);\n        } else if (newRightAreaSize <= 0) {\n            leftArea.area.setSize(rightArea.initialSize + leftArea.initialSize);\n            rightArea.area.setSize(0);\n        } else {\n            leftArea.area.setSize(newLeftAreaSize);\n            rightArea.area.setSize(newRightAreaSize);\n        }\n    }\n\n    private onMouseUp() {\n        while (this.listeners.length > 0) {\n            const unsubscribe = this.listeners.pop();\n\n            if (unsubscribe) {\n                unsubscribe();\n            }\n        }\n\n        this.isDragging = false;\n    }\n\n    private setStyle(property: StyleProperty, value: string | number) {\n        this.renderer.setStyle(this.elementRef.nativeElement, property, value);\n    }\n}\n\n@Directive({\n    selector: 'mc-gutter'\n})\nexport class McGutterDirective implements OnInit {\n    private _direction: Direction = Direction.Vertical;\n    private _disabled: boolean = false;\n    private _order: number = 0;\n    private _size: number = 6;\n\n    @Input()\n    set direction(direction: Direction) {\n        this._direction = direction;\n    }\n\n    get direction(): Direction {\n        return this._direction;\n    }\n\n    @Input()\n    set disabled(disabled: boolean) {\n        this._disabled = coerceBooleanProperty(disabled);\n    }\n\n    get disabled(): boolean {\n        return this._disabled;\n    }\n\n    @Input()\n    set order(order: number) {\n        this._order = coerceNumberProperty(order);\n    }\n\n    get order(): number {\n        return this._order;\n    }\n\n    @Input()\n    set size(size: number) {\n        this._size = coerceNumberProperty(size);\n    }\n\n    get size(): number {\n        return this._size;\n    }\n\n    constructor(private renderer: Renderer2,\n                private elementRef: ElementRef) {\n    }\n\n    ngOnInit(): void {\n        this.setStyle(StyleProperty.Cursor, this.getCursor(this.getState()));\n        this.setStyle(StyleProperty.FlexBasis, coerceCssPixelValue(this.size));\n        this.setStyle(this.isVertical() ? StyleProperty.Height : StyleProperty.Width, coerceCssPixelValue(this.size));\n        this.setStyle(StyleProperty.Order, this.order);\n\n        if (!this.isVertical()) {\n            this.setStyle(StyleProperty.Height, '100%');\n        }\n\n        if (this.disabled) {\n            this.setAttr(AttributeProperty.Disabled, 'true');\n        }\n\n        // fix IE issue with gutter icon. flex-direction is requied for flex alignment options\n        this.setStyle(StyleProperty.FlexDirection, this.isVertical() ? 'row' : 'column');\n    }\n\n    private isVertical(): boolean {\n        return this.direction === Direction.Vertical;\n    }\n\n    private getCursor(state: State): string {\n        switch (state) {\n            case State.Disabled:\n                return Cursor.Default;\n            case State.Vertical:\n                return  Cursor.ResizeRow;\n            case State.Horizontal:\n                return Cursor.ResizeColumn;\n            default:\n                throw Error(`Unknown gutter state for cursor: ${state}`);\n        }\n    }\n\n    private getState(): State {\n        return this.disabled\n            ? State.Disabled\n            : this.direction === Direction.Vertical\n                ? State.Vertical\n                : State.Horizontal;\n    }\n\n    private setStyle(property: StyleProperty, value: string | number) {\n        this.renderer.setStyle(this.elementRef.nativeElement, property, value);\n    }\n\n    private setAttr(attribute: AttributeProperty, value: string) {\n        this.renderer.setAttribute(this.elementRef.nativeElement, attribute, value);\n    }\n}\n\n@Directive({\n    selector: 'mc-splitter-area'\n})\nexport class McSplitterAreaDirective implements OnInit, OnDestroy {\n    constructor(private elementRef: ElementRef,\n                private renderer: Renderer2,\n                private splitter: McSplitterComponent) {}\n\n    disableFlex(): void {\n        this.renderer.removeStyle(this.elementRef.nativeElement, 'flex');\n    }\n\n    ngOnInit(): void {\n        this.splitter.addArea(this);\n\n        this.removeStyle(StyleProperty.MaxWidth);\n        this.setStyle(StyleProperty.Flex, '1');\n\n        if (this.splitter.direction === Direction.Vertical) {\n            this.setStyle(StyleProperty.Width, '100%');\n            this.removeStyle(StyleProperty.Height);\n        } else {\n            this.setStyle(StyleProperty.Height, '100%');\n            this.removeStyle(StyleProperty.Width);\n        }\n    }\n\n    ngOnDestroy(): void {\n        this.splitter.removeArea(this);\n    }\n\n    setOrder(order: number): void {\n        this.setStyle(StyleProperty.Order, order);\n    }\n\n    setSize(size: number): void {\n        const sz = coerceNumberProperty(size);\n        this.setStyle(this.getSizeProperty(), coerceCssPixelValue(sz));\n    }\n\n    getSize(): number {\n        return this.elementRef.nativeElement[this.getOffsetSizeProperty()];\n    }\n\n    getMinSize(): number {\n        const styles = getComputedStyle(this.elementRef.nativeElement);\n\n        return parseFloat(styles[this.getMinSizeProperty()]);\n    }\n\n    private isVertical(): boolean {\n        return this.splitter.direction === Direction.Vertical;\n    }\n\n    private getMinSizeProperty(): StyleProperty {\n        return this.isVertical()\n            ? StyleProperty.MinHeight\n            : StyleProperty.MinWidth;\n    }\n\n    private getOffsetSizeProperty(): StyleProperty {\n        return this.isVertical()\n            ? StyleProperty.OffsetHeight\n            : StyleProperty.OffsetWidth;\n    }\n\n    private getSizeProperty(): StyleProperty {\n        return this.isVertical()\n            ? StyleProperty.Height\n            : StyleProperty.Width;\n    }\n\n    private setStyle(style: StyleProperty, value: string | number) {\n        this.renderer.setStyle(this.elementRef.nativeElement, style, value);\n    }\n\n    private removeStyle(style: StyleProperty) {\n        this.renderer.removeStyle(this.elementRef.nativeElement, style);\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { McIconModule } from '@ptsecurity/mosaic/icon';\n\nimport { McGutterDirective, McSplitterAreaDirective, McSplitterComponent } from './splitter.component';\n\n\n@NgModule({\n    imports: [\n        CommonModule,\n        McIconModule\n    ],\n    exports: [\n        McGutterDirective,\n        McSplitterAreaDirective,\n        McSplitterComponent\n    ],\n    declarations: [\n        McGutterDirective,\n        McSplitterAreaDirective,\n        McSplitterComponent\n    ]\n})\nexport class McSplitterModule {\n}\n","import { animate, state, style, transition, trigger } from '@angular/animations';\nimport {\n    Attribute,\n    ChangeDetectionStrategy, ChangeDetectorRef,\n    Component,\n    ElementRef, EventEmitter, forwardRef,\n    Input, Output, ViewChild,\n    ViewEncapsulation\n} from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { FocusMonitor } from '@ptsecurity/cdk/a11y';\nimport {\n    ThemePalette,\n    CanColor, CanColorCtor,\n    CanDisable, CanDisableCtor,\n    HasTabIndex, HasTabIndexCtor,\n    mixinColor,\n    mixinDisabled,\n    mixinTabIndex\n} from '@ptsecurity/mosaic/core';\n\n\nlet nextUniqueId = 0;\n\ntype ToggleLabelPositionType = 'left' | 'right';\n\nexport class McToggleBase {\n    constructor(public _elementRef: ElementRef) {}\n}\n\nexport const _McToggleMixinBase:\n    HasTabIndexCtor &\n    CanDisableCtor &\n    CanColorCtor &\n    typeof McToggleBase = mixinTabIndex(mixinColor(mixinDisabled(McToggleBase), ThemePalette.Primary));\n\nexport class McToggleChange {\n    source: McToggleComponent;\n    checked: boolean;\n}\n\n@Component({\n    selector: 'mc-toggle',\n    exportAs: 'mcToggle',\n    templateUrl: './toggle.component.html',\n    styleUrls: ['./toggle.css'],\n    providers: [\n        {provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => McToggleComponent), multi: true}\n    ],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n    inputs: ['disabled', 'color', 'tabIndex'],\n    host: {\n        class: 'mc-toggle',\n        '[id]': 'id',\n        '[attr.id]': 'id',\n        '[class.mc-disabled]': 'disabled',\n        '[class.mc-toggle_off]': '!checked'\n    },\n    animations: [\n        trigger('switch', [\n            state('true' , style({ left: '50%' })),\n            state('false', style({ left: '1px' })),\n            transition('true <=> false', animate('150ms'))\n        ])\n    ]\n})\nexport class McToggleComponent extends _McToggleMixinBase\n    implements ControlValueAccessor, CanColor, CanDisable, HasTabIndex {\n\n    @ViewChild('input') _inputElement: ElementRef;\n\n    @Input() labelPosition: ToggleLabelPositionType = 'right';\n\n    @Input('aria-label') ariaLabel: string = '';\n    @Input('aria-labelledby') ariaLabelledby: string | null = null;\n\n    private _uniqueId: string = `mc-toggle-${++nextUniqueId}`;\n\n    // tslint:disable:member-ordering\n    @Input() id: string = this._uniqueId;\n\n    get inputId(): string {\n        return `${this.id || this._uniqueId}-input`;\n    }\n\n    @Input() name: string | null = null;\n\n    @Input() value: string;\n\n    private _disabled: boolean = false;\n\n    @Input()\n    get disabled() {\n        return this._disabled;\n    }\n\n    set disabled(value: any) {\n        if (value !== this._disabled) {\n            this._disabled = value;\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n\n    private _checked: boolean = false;\n\n    get checked() {\n        return this._checked;\n    }\n\n    @Input()\n    set checked(value: boolean) {\n        if (value !== this._checked) {\n            this._checked = value;\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n\n    @Output() readonly change: EventEmitter<McToggleChange> =\n        new EventEmitter<McToggleChange>();\n\n    constructor(public _elementRef: ElementRef,\n                private _focusMonitor: FocusMonitor,\n                private _changeDetectorRef: ChangeDetectorRef,\n                @Attribute('tabindex') tabIndex: string\n    ) {\n        super(_elementRef);\n\n        this.tabIndex = parseInt(tabIndex) || 0;\n\n        this._focusMonitor.monitor(this._elementRef.nativeElement, true);\n    }\n\n    ngOnDestroy() {\n        this._focusMonitor.stopMonitoring(this._elementRef.nativeElement);\n    }\n\n    focus(): void {\n        this._focusMonitor.focusVia(this._inputElement.nativeElement, 'keyboard');\n    }\n\n    _getAriaChecked(): boolean {\n        return this.checked;\n    }\n\n    _onInteractionEvent(event: Event) {\n        event.stopPropagation();\n    }\n\n    _onLabelTextChange() {\n        this._changeDetectorRef.markForCheck();\n    }\n\n    _onInputClick(event: MouseEvent) {\n        event.stopPropagation();\n        this._updateModelValue();\n        this._emitChangeEvent();\n    }\n\n    writeValue(value: any) {\n        this.checked = !!value;\n    }\n\n    registerOnChange(fn: any) {\n        this._onChangeCallback = fn;\n    }\n\n    registerOnTouched(fn: any) {\n        this._onTouchedCallback = fn;\n    }\n\n    setDisabledState(isDisabled: boolean) {\n        this.disabled = isDisabled;\n    }\n\n    // tslint:disable-next-line:no-empty\n    private _onTouchedCallback = () => {};\n\n    // tslint:disable-next-line:no-empty\n    private _onChangeCallback = (_: any) => {};\n\n    private _updateModelValue() {\n        this._checked = !this.checked;\n        this._onChangeCallback(this.checked);\n        this._onTouchedCallback();\n    }\n\n    private _emitChangeEvent() {\n        const event = new McToggleChange();\n        event.source = this;\n        event.checked = this.checked;\n\n        this._onChangeCallback(this.checked);\n        this.change.emit(event);\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { A11yModule } from '@ptsecurity/cdk/a11y';\nimport { McCommonModule } from '@ptsecurity/mosaic/core';\n\nimport { McToggleComponent } from './toggle.component';\n\n\n@NgModule({\n    imports: [CommonModule, A11yModule, McCommonModule],\n    exports: [McToggleComponent],\n    declarations: [McToggleComponent]\n})\nexport class McToggleModule {\n}\n","/* tslint:disable:no-empty */\n\nimport {\n    AfterContentInit,\n    AfterViewInit,\n    Attribute,\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    ContentChild,\n    Directive,\n    DoCheck,\n    ElementRef,\n    EventEmitter,\n    Inject,\n    Input,\n    isDevMode,\n    NgZone,\n    OnChanges,\n    OnDestroy,\n    OnInit,\n    Optional,\n    Output,\n    QueryList,\n    Renderer2,\n    Self,\n    SimpleChanges,\n    ViewChild,\n    ViewChildren,\n    ViewEncapsulation\n} from '@angular/core';\nimport { ControlValueAccessor, FormGroupDirective, NgControl, NgForm } from '@angular/forms';\nimport { Directionality } from '@ptsecurity/cdk/bidi';\nimport { coerceBooleanProperty } from '@ptsecurity/cdk/coercion';\nimport { SelectionModel } from '@ptsecurity/cdk/collections';\nimport {\n    DOWN_ARROW,\n    END,\n    ENTER,\n    HOME,\n    LEFT_ARROW,\n    RIGHT_ARROW,\n    SPACE,\n    UP_ARROW,\n    A\n} from '@ptsecurity/cdk/keycodes';\nimport {\n    CdkConnectedOverlay,\n    ViewportRuler\n} from '@ptsecurity/cdk/overlay';\nimport { CdkTree } from '@ptsecurity/cdk/tree';\nimport {\n    getOptionScrollPosition,\n    CanDisable,\n    CanUpdateErrorState,\n    ErrorStateMatcher,\n    HasTabIndex,\n    CanDisableCtor,\n    HasTabIndexCtor,\n    CanUpdateErrorStateCtor,\n    mixinTabIndex,\n    mixinDisabled,\n    mixinErrorState,\n    mcSelectAnimations,\n\n    SELECT_PANEL_MAX_HEIGHT,\n    SELECT_PANEL_PADDING_X,\n    SELECT_PANEL_VIEWPORT_PADDING,\n\n    getMcSelectDynamicMultipleError,\n    getMcSelectNonFunctionValueError,\n    getMcSelectNonArrayValueError,\n    MC_SELECT_SCROLL_STRATEGY\n} from '@ptsecurity/mosaic/core';\nimport { McFormField, McFormFieldControl } from '@ptsecurity/mosaic/form-field';\nimport { McTag } from '@ptsecurity/mosaic/tag';\nimport { McTreeSelection, McTreeOption } from '@ptsecurity/mosaic/tree';\nimport { defer, merge, Observable, Subject } from 'rxjs';\nimport {\n    filter,\n    map,\n    startWith,\n    switchMap,\n    take,\n    takeUntil,\n    distinctUntilChanged\n} from 'rxjs/operators';\n\n\nlet nextUniqueId = 0;\n\n/** Change event object that is emitted when the select value has changed. */\nexport class McTreeSelectChange {\n    constructor(public source: McTreeOption, public value: any, public isUserInput = false) {}\n}\n\n\n@Directive({ selector: 'mc-tree-select-trigger' })\nexport class McTreeSelectTrigger {}\n\n\nclass McTreeSelectBase {\n    constructor(\n        public elementRef: ElementRef,\n        public defaultErrorStateMatcher: ErrorStateMatcher,\n        public parentForm: NgForm,\n        public parentFormGroup: FormGroupDirective,\n        public ngControl: NgControl\n    ) {}\n}\n\n// tslint:disable-next-line:naming-convention\nconst McTreeSelectMixinBase: CanDisableCtor & HasTabIndexCtor & CanUpdateErrorStateCtor &\n    typeof McTreeSelectBase = mixinTabIndex(mixinDisabled(mixinErrorState(McTreeSelectBase)));\n\n\n@Component({\n    selector: 'mc-tree-select',\n    exportAs: 'mcTreeSelect',\n    templateUrl: 'tree-select.html',\n    styleUrls: ['./tree-select.css'],\n    inputs: ['disabled', 'tabIndex'],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    host: {\n        '[attr.id]': 'id',\n        '[attr.tabindex]': 'tabIndex',\n\n        class: 'mc-tree-select',\n        '[class.mc-disabled]': 'disabled',\n        '[class.mc-select-invalid]': 'errorState',\n        '[class.mc-select-required]': 'required',\n\n        '(keydown)': 'handleKeydown($event)',\n        '(focus)': 'onFocus()',\n        '(blur)': 'onBlur()',\n        '(window:resize)': 'calculateHiddenItems()'\n    },\n    animations: [\n        mcSelectAnimations.transformPanel,\n        mcSelectAnimations.fadeInContent\n    ],\n    providers: [\n        { provide: McFormFieldControl, useExisting: McTreeSelect },\n        { provide: CdkTree, useExisting: McTreeSelect }\n    ]\n})\nexport class McTreeSelect extends McTreeSelectMixinBase implements\n    AfterContentInit, AfterViewInit, OnChanges, OnDestroy, OnInit, DoCheck, ControlValueAccessor,\n    CanDisable, HasTabIndex, McFormFieldControl<any>, CanUpdateErrorState {\n\n    /** A name for this control that can be used by `mc-form-field`. */\n    controlType = 'mc-select';\n\n    hiddenItems: number = 0;\n    oneMoreText: string = '...ещё';\n\n    /** The last measured value for the trigger's client bounding rect. */\n    triggerRect: ClientRect;\n\n    /** The cached font-size of the trigger element. */\n    triggerFontSize = 0;\n\n    /** Deals with the selection logic. */\n    selectionModel: SelectionModel<McTreeOption>;\n\n    /** The IDs of child options to be passed to the aria-owns attribute. */\n    optionIds: string = '';\n\n    /** The value of the select panel's transform-origin property. */\n    transformOrigin: string = 'top';\n\n    /** Whether the panel's animation is done. */\n    panelDoneAnimating: boolean = false;\n\n    /** Emits when the panel element is finished transforming in. */\n    panelDoneAnimatingStream = new Subject<string>();\n\n    /** Strategy that will be used to handle scrolling while the select panel is open. */\n    scrollStrategy = this.scrollStrategyFactory();\n\n    /**\n     * The y-offset of the overlay panel in relation to the trigger's top start corner.\n     * This must be adjusted to align the selected option text over the trigger text.\n     * when the panel opens. Will change based on the y-position of the selected option.\n     */\n    offsetY = 0;\n\n    /**\n     * This position config ensures that the top \"start\" corner of the overlay\n     * is aligned with with the top \"start\" of the origin by default (overlapping\n     * the trigger completely). If the panel cannot fit below the trigger, it\n     * will fall back to a position above the trigger.\n     */\n    positions = [\n        {\n            originX: 'start',\n            originY: 'bottom',\n            overlayX: 'start',\n            overlayY: 'top'\n        },\n        {\n            originX: 'start',\n            originY: 'top',\n            overlayX: 'start',\n            overlayY: 'bottom'\n        }\n    ];\n\n    @ViewChild('trigger') trigger: ElementRef;\n\n    @ViewChild('panel') panel: ElementRef;\n\n    @ViewChild(CdkConnectedOverlay) overlayDir: CdkConnectedOverlay;\n\n    @ViewChildren(McTag) tags: QueryList<McTag>;\n\n    /** User-supplied override of the trigger element. */\n    @ContentChild(McTreeSelectTrigger) customTrigger: McTreeSelectTrigger;\n\n    @ContentChild(McTreeSelection) tree: McTreeSelection;\n\n    /** Event emitted when the select panel has been toggled. */\n    @Output() readonly openedChange: EventEmitter<boolean> = new EventEmitter<boolean>();\n\n    /** Event emitted when the select has been opened. */\n    @Output('opened') readonly openedStream: Observable<void> =\n        this.openedChange.pipe(filter((o) => o), map(() => {}));\n\n    /** Event emitted when the select has been closed. */\n    @Output('closed') readonly closedStream: Observable<void> =\n        this.openedChange.pipe(filter((o) => !o), map(() => {}));\n\n    /** Event emitted when the selected value has been changed by the user. */\n    @Output() readonly selectionChange = new EventEmitter<McTreeSelectChange>();\n\n    /**\n     * Event that emits whenever the raw value of the select changes. This is here primarily\n     * to facilitate the two-way binding for the `value` input.\n     * @docs-private\n     */\n    @Output() readonly valueChange: EventEmitter<any> = new EventEmitter<any>();\n\n    /** Classes to be passed to the select panel. Supports the same syntax as `ngClass`. */\n    @Input() panelClass: string | string[] | Set<string> | { [key: string]: any };\n\n    /** Object used to control when error messages are shown. */\n    @Input() errorStateMatcher: ErrorStateMatcher;\n\n    /**\n     * Function used to sort the values in a select in multiple mode.\n     * Follows the same logic as `Array.prototype.sort`.\n     */\n    @Input() sortComparator: (\n        a: McTreeOption, b: McTreeOption, options: McTreeOption[]\n    ) => number;\n\n    /** Combined stream of all of the child options' change events. */\n    readonly optionSelectionChanges: Observable<McTreeSelectChange> = defer(() => {\n        if (this.options) {\n            return merge(...this.options.map((option) => option.onSelectionChange));\n        }\n\n        return this.ngZone.onStable\n            .asObservable()\n            .pipe(take(1), switchMap(() => this.optionSelectionChanges));\n    });\n\n    options: QueryList<McTreeOption>;\n\n    private originalOnKeyDown: (event: KeyboardEvent) => void;\n\n    @Input()\n    get placeholder(): string {\n        return this._placeholder;\n    }\n\n    set placeholder(value: string) {\n        this._placeholder = value;\n\n        this.stateChanges.next();\n    }\n\n    private _placeholder: string;\n\n    @Input()\n    get required(): boolean {\n        return this._required;\n    }\n\n    set required(value: boolean) {\n        this._required = coerceBooleanProperty(value);\n\n        this.stateChanges.next();\n    }\n\n    private _required: boolean = false;\n\n    @Input()\n    get multiple(): boolean {\n        return this._multiple;\n    }\n\n    set multiple(value: boolean) {\n        if (this.selectionModel) {\n            throw getMcSelectDynamicMultipleError();\n        }\n\n        this._multiple = coerceBooleanProperty(value);\n    }\n\n    private _multiple: boolean = false;\n\n    @Input()\n    get autoSelect(): boolean {\n        if (this.multiple) { return false; }\n\n        return this._autoSelect;\n    }\n\n    set autoSelect(value: boolean) {\n        this._autoSelect = coerceBooleanProperty(value);\n    }\n\n    private _autoSelect: boolean = true;\n\n    /**\n     * Function to compare the option values with the selected values. The first argument\n     * is a value from an option. The second is a value from the selection. A boolean\n     * should be returned.\n     */\n    @Input()\n    get compareWith() {\n        return this._compareWith;\n    }\n\n    set compareWith(fn: (o1: any, o2: any) => boolean) {\n        /* tslint:disable-next-line:strict-type-predicates */\n        if (typeof fn !== 'function') {\n            throw getMcSelectNonFunctionValueError();\n        }\n\n        this._compareWith = fn;\n\n        if (this.selectionModel) {\n            // A different comparator means the selection could change.\n            this.initializeSelection();\n        }\n    }\n\n    /** Value of the select control. */\n    @Input()\n    get value(): any {\n        return this._value;\n    }\n\n    set value(newValue: any) {\n        if (newValue !== this._value) {\n            this.writeValue(newValue);\n            this._value = newValue;\n        }\n    }\n\n    private _value: any;\n\n    @Input()\n    get id(): string {\n        return this._id;\n    }\n\n    set id(value: string) {\n        this._id = value || this.uid;\n        this.stateChanges.next();\n    }\n\n    private _id: string;\n\n    /** Whether the select is focused. */\n    get focused(): boolean {\n        return this._focused || this._panelOpen;\n    }\n\n    /**\n     * @deprecated Setter to be removed as this property is intended to be readonly.\n     * @breaking-change 8.0.0\n     */\n    set focused(value: boolean) {\n        this._focused = value;\n    }\n\n    private _focused = false;\n\n    get panelOpen(): boolean {\n        return this._panelOpen;\n    }\n\n    private _panelOpen = false;\n\n    /** The scroll position of the overlay panel, calculated to center the selected option. */\n    private scrollTop = 0;\n\n    /** Unique id for this input. */\n    private readonly uid = `mc-select-${nextUniqueId++}`;\n\n    /** Emits whenever the component is destroyed. */\n    private readonly destroy = new Subject<void>();\n\n    constructor(\n        private readonly viewportRuler: ViewportRuler,\n        readonly changeDetectorRef: ChangeDetectorRef,\n        private readonly ngZone: NgZone,\n        private readonly renderer: Renderer2,\n        defaultErrorStateMatcher: ErrorStateMatcher,\n        public elementRef: ElementRef,\n        @Optional() private readonly dir: Directionality,\n        @Optional() parentForm: NgForm,\n        @Optional() parentFormGroup: FormGroupDirective,\n        @Optional() private readonly parentFormField: McFormField,\n        @Self() @Optional() public ngControl: NgControl,\n        @Attribute('tabindex') tabIndex: string,\n        @Inject(MC_SELECT_SCROLL_STRATEGY) private readonly scrollStrategyFactory\n    ) {\n        super(elementRef, defaultErrorStateMatcher, parentForm, parentFormGroup, ngControl);\n\n        if (this.ngControl) {\n            // Note: we provide the value accessor through here, instead of\n            // the `providers` to avoid running into a circular import.\n            this.ngControl.valueAccessor = this;\n        }\n\n        this.tabIndex = parseInt(tabIndex) || 0;\n\n        // Force setter to be called in case id was not specified.\n        this.id = this.id;\n    }\n\n    ngOnInit() {\n        if (this.tree) {\n            this.tree.multiple = this.multiple;\n        }\n\n        this.stateChanges.next();\n\n        // We need `distinctUntilChanged` here, because some browsers will\n        // fire the animation end event twice for the same animation. See:\n        // https://github.com/angular/angular/issues/24084\n        this.panelDoneAnimatingStream\n            .pipe(distinctUntilChanged(), takeUntil(this.destroy))\n            .subscribe(() => {\n                if (this.panelOpen) {\n                    this.scrollTop = 0;\n                    this.openedChange.emit(true);\n                } else {\n                    this.openedChange.emit(false);\n                    this.panelDoneAnimating = false;\n                    this.overlayDir.offsetX = 0;\n                    this.changeDetectorRef.markForCheck();\n                }\n            });\n    }\n\n    ngAfterContentInit() {\n        if (!this.tree) { return; }\n\n        this.initKeyManager();\n\n        this.selectionModel = this.tree.selectionModel = new SelectionModel<McTreeOption>(this.multiple);\n        this.options = this.tree.options;\n        this.tree.autoSelect = this.autoSelect;\n\n        this.selectionModel.changed\n            .pipe(takeUntil(this.destroy))\n            .subscribe((event) => {\n                event.added.forEach((option) => option.select());\n                event.removed.forEach((option) => option.deselect());\n            });\n    }\n\n    ngAfterViewInit() {\n        if (!this.tree) { return; }\n\n        this.tags.changes\n            .subscribe(() => {\n                setTimeout(() => this.calculateHiddenItems(), 0);\n            });\n\n        this.options.changes\n            .pipe(startWith(null), takeUntil(this.destroy))\n            .subscribe(() => {\n                this.updateSelectedOptions();\n\n                this.resetOptions();\n            });\n    }\n\n    ngDoCheck() {\n        if (this.ngControl) { this.updateErrorState(); }\n    }\n\n    ngOnChanges(changes: SimpleChanges) {\n        // Updating the disabled state is handled by `mixinDisabled`, but we need to additionally let\n        // the parent form field know to run change detection when the disabled state changes.\n        if (changes.disabled) {\n            this.stateChanges.next();\n        }\n    }\n\n    ngOnDestroy() {\n        this.destroy.next();\n\n        this.destroy.complete();\n        this.stateChanges.complete();\n    }\n\n    /** `View -> model callback called when value changes` */\n    onChange: (value: any) => void = () => {};\n\n    /** `View -> model callback called when select has been touched` */\n    onTouched = () => {};\n\n    toggle() {\n        if (this.panelOpen) {\n            this.close();\n        } else {\n            this.open();\n        }\n    }\n\n    open() {\n        if (this.disabled || !this.options || !this.options.length || this._panelOpen) { return; }\n\n        this.triggerRect = this.trigger.nativeElement.getBoundingClientRect();\n        // Note: The computed font-size will be a string pixel value (e.g. \"16px\").\n        // `parseInt` ignores the trailing 'px' and converts this to a number.\n        this.triggerFontSize = parseInt(getComputedStyle(this.trigger.nativeElement)['font-size']);\n\n        this._panelOpen = true;\n        // this.tree.keyManager.withHorizontalOrientation(null);\n        this.calculateOverlayPosition();\n        this.highlightCorrectOption();\n        this.changeDetectorRef.markForCheck();\n\n        // Set the font size on the panel element once it exists.\n        this.ngZone.onStable.asObservable()\n            .pipe(take(1))\n            .subscribe(() => {\n                if (this.triggerFontSize && this.overlayDir.overlayRef &&\n                    this.overlayDir.overlayRef.overlayElement) {\n                    this.overlayDir.overlayRef.overlayElement.style.fontSize = `${this.triggerFontSize}px`;\n                }\n            });\n    }\n\n    /** Closes the overlay panel and focuses the host element. */\n    close() {\n        if (this._panelOpen) {\n            this._panelOpen = false;\n\n            // this.tree.keyManager.setActiveItem(-1);\n\n            // this.tree.keyManager.withHorizontalOrientation(this.isRtl() ? 'rtl' : 'ltr');\n            this.changeDetectorRef.markForCheck();\n            this.onTouched();\n        }\n    }\n\n    /**\n     * Sets the select's value. Part of the ControlValueAccessor interface\n     * required to integrate with Angular's core forms API.\n     *\n     * @param value New value to be written to the model.\n     */\n    // todo нужно доделать!\n    writeValue(value: any) {\n        if (this.options) {\n            this.setSelectionByValue(value);\n        }\n    }\n\n    /**\n     * Saves a callback function to be invoked when the select's value\n     * changes from user input. Part of the ControlValueAccessor interface\n     * required to integrate with Angular's core forms API.\n     *\n     * @param fn Callback to be triggered when the value changes.\n     */\n    registerOnChange(fn: (value: any) => void) {\n        this.onChange = fn;\n    }\n\n    /**\n     * Saves a callback function to be invoked when the select is blurred\n     * by the user. Part of the ControlValueAccessor interface required\n     * to integrate with Angular's core forms API.\n     *\n     * @param fn Callback to be triggered when the component has been touched.\n     */\n    registerOnTouched(fn: () => {}) {\n        this.onTouched = fn;\n    }\n\n    /**\n     * Disables the select. Part of the ControlValueAccessor interface required\n     * to integrate with Angular's core forms API.\n     *\n     * @param isDisabled Sets whether the component is disabled.\n     */\n    setDisabledState(isDisabled: boolean) {\n        this.disabled = isDisabled;\n        this.changeDetectorRef.markForCheck();\n        this.stateChanges.next();\n    }\n\n    get selected(): McTreeOption | McTreeOption[] {\n        return this.multiple ? this.selectionModel.selected : this.selectionModel.selected[0];\n    }\n\n    get triggerValue(): string {\n        if (this.empty) { return ''; }\n\n        return (this.selected as McTreeOption).viewValue;\n    }\n\n    get triggerValues(): McTreeOption[] {\n        if (this.empty) { return []; }\n\n        const selectedOptions = this.selectionModel.selected;\n\n        if (this.isRtl()) { selectedOptions.reverse(); }\n\n        return selectedOptions;\n    }\n\n    get empty(): boolean {\n        return !this.selectionModel || this.selectionModel.isEmpty();\n    }\n\n    isRtl(): boolean {\n        return this.dir ? this.dir.value === 'rtl' : false;\n    }\n\n    handleKeydown(event: KeyboardEvent) {\n        if (!this.disabled) {\n            if (this.panelOpen) {\n                this.handleOpenKeydown(event);\n            } else {\n                this.handleClosedKeydown(event);\n            }\n        }\n    }\n\n    /**\n     * When the panel content is done fading in, the panelDoneAnimating property is\n     * set so the proper class can be added to the panel.\n     */\n    onFadeInDone() {\n        this.panelDoneAnimating = this.panelOpen;\n        this.changeDetectorRef.markForCheck();\n    }\n\n    onFocus() {\n        if (!this.disabled) {\n            this._focused = true;\n\n            this.stateChanges.next();\n        }\n    }\n\n    /**\n     * Calls the touched callback only if the panel is closed. Otherwise, the trigger will\n     * \"blur\" to the panel when it opens, causing a false positive.\n     */\n    onBlur() {\n        this._focused = false;\n\n        if (!this.disabled && !this.panelOpen) {\n            this.onTouched();\n            this.changeDetectorRef.markForCheck();\n            this.stateChanges.next();\n        }\n    }\n\n    /** Callback that is invoked when the overlay panel has been attached. */\n    onAttached() {\n        this.overlayDir.positionChange\n            .pipe(take(1))\n            .subscribe(() => {\n                this.changeDetectorRef.detectChanges();\n                this.calculateOverlayOffsetX();\n                this.panel.nativeElement.scrollTop = this.scrollTop;\n            });\n    }\n\n    /** Returns the theme to be used on the panel. */\n    getPanelTheme(): string {\n        return this.parentFormField ? `mc-${this.parentFormField.color}` : '';\n    }\n\n    /** Focuses the select element. */\n    focus() {\n        this.elementRef.nativeElement.focus();\n    }\n\n    /**\n     * Calculates the scroll position of the select's overlay panel.\n     *\n     * Attempts to center the selected option in the panel. If the option is\n     * too high or too low in the panel to be scrolled to the center, it clamps the\n     * scroll position to the min or max scroll positions respectively.\n     */\n    calculateOverlayScroll(selectedIndex: number, scrollBuffer: number, maxScroll: number): number {\n        const itemHeight = this.getItemHeight();\n        const optionOffsetFromScrollTop = itemHeight * selectedIndex;\n\n        /* tslint:disable-next-line:no-magic-numbers */\n        const halfOptionHeight = itemHeight / 2;\n\n        // Starts at the optionOffsetFromScrollTop, which scrolls the option to the top of the\n        // scroll container, then subtracts the scroll buffer to scroll the option down to\n        // the center of the overlay panel. Half the option height must be re-added to the\n        // scrollTop so the option is centered based on its middle, not its top edge.\n        const optimalScrollPosition = optionOffsetFromScrollTop - scrollBuffer + halfOptionHeight;\n\n        return Math.min(Math.max(0, optimalScrollPosition), maxScroll);\n    }\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    onContainerClick() {\n        this.focus();\n        this.open();\n    }\n\n    /** Invoked when an option is clicked. */\n    onRemoveSelectedOption(selectedOption: McTreeOption, $event) {\n        $event.stopPropagation();\n\n        this.options.forEach((option) => {\n            if (option.data === selectedOption.data) { option.deselect(); }\n        });\n\n        this.selectionModel.deselect(selectedOption);\n    }\n\n    calculateHiddenItems() {\n        if (this.empty || !this.multiple) { return; }\n\n        let visibleItems: number = 0;\n        const totalItemsWidth = this.getTotalItemsWidthInMatcher();\n        let totalVisibleItemsWidth: number = 0;\n        const itemMargin: number = 4;\n\n        this.tags.forEach((tag) => {\n            if (tag.nativeElement.offsetTop < tag.nativeElement.offsetHeight) {\n                totalVisibleItemsWidth += tag.nativeElement.getBoundingClientRect().width + itemMargin;\n                visibleItems++;\n            }\n        });\n\n        this.hiddenItems = this.selectionModel.selected.length - visibleItems;\n\n        if (this.hiddenItems) {\n            const itemsCounter = this.trigger.nativeElement.querySelector('.mc-tree-select__match-hidden-text');\n            const matcherList = this.trigger.nativeElement.querySelector('.mc-tree-select__match-list');\n\n            const itemsCounterShowed = itemsCounter.offsetTop < itemsCounter.offsetHeight;\n            // const itemsCounterWidth: number = itemsCounter.getBoundingClientRect().width;\n            const itemsCounterWidth: number = 86;\n\n            const matcherListWidth: number = matcherList.getBoundingClientRect().width;\n            const matcherWidth: number = matcherListWidth + itemsCounterWidth;\n\n            if (itemsCounterShowed && (totalItemsWidth < matcherWidth)) { this.hiddenItems = 0; }\n\n            if (\n                totalVisibleItemsWidth === matcherListWidth ||\n                (totalVisibleItemsWidth + itemsCounterWidth) < matcherListWidth\n            ) {\n                this.changeDetectorRef.markForCheck();\n\n                return ;\n            } else if (!itemsCounterShowed && (totalItemsWidth + itemsCounterWidth) > matcherWidth) {\n                this.hiddenItems++;\n            }\n        }\n\n        this.changeDetectorRef.markForCheck();\n    }\n\n    private updateSelectedOptions(): void {\n        this.selectionModel.selected.forEach((selectedOption) => {\n            this.options.forEach((option) => {\n                if (option.data === selectedOption.data) {\n                    this.selectionModel.deselect(selectedOption);\n                    this.selectionModel.select(option);\n\n                    option.select();\n                }\n            });\n        });\n    }\n\n    private getTotalItemsWidthInMatcher(): number {\n        const triggerClone = this.trigger.nativeElement.cloneNode(true);\n        triggerClone.querySelector('.mc-tree-select__match-hidden-text').remove();\n\n        this.renderer.setStyle(triggerClone, 'position', 'absolute');\n        this.renderer.setStyle(triggerClone, 'visibility', 'hidden');\n        this.renderer.setStyle(triggerClone, 'top', '-100%');\n        this.renderer.setStyle(triggerClone, 'left', '0');\n\n        this.renderer.appendChild(this.trigger.nativeElement, triggerClone);\n\n        let totalItemsWidth: number = 0;\n        const itemMargin: number = 4;\n        triggerClone.querySelectorAll('mc-tag').forEach((item) => {\n            totalItemsWidth += item.getBoundingClientRect().width as number + itemMargin;\n        });\n\n        triggerClone.remove();\n\n        return totalItemsWidth;\n    }\n\n    private handleClosedKeydown(event: KeyboardEvent) {\n        /* tslint:disable-next-line */\n        const keyCode = event.keyCode;\n        const isArrowKey = keyCode === DOWN_ARROW || keyCode === UP_ARROW ||\n            keyCode === LEFT_ARROW || keyCode === RIGHT_ARROW;\n        const isOpenKey = keyCode === ENTER || keyCode === SPACE;\n\n        // Open the select on ALT + arrow key to match the native <select>\n        if (isOpenKey || ((this.multiple || event.altKey) && isArrowKey)) {\n            // prevents the page from scrolling down when pressing space\n            event.preventDefault();\n\n            this.open();\n        } else if (!this.multiple) {\n            this.tree.keyManager.onKeydown(event);\n        }\n    }\n\n    private handleOpenKeydown(event: KeyboardEvent) {\n        /* tslint:disable-next-line */\n        const keyCode = event.keyCode;\n        const isArrowKey = keyCode === DOWN_ARROW || keyCode === UP_ARROW;\n\n        if (isArrowKey && event.altKey) {\n            // Close the select on ALT + arrow key to match the native <select>\n            event.preventDefault();\n\n            this.close();\n        } else if (keyCode === LEFT_ARROW || keyCode === RIGHT_ARROW) {\n            return this.originalOnKeyDown.call(this.tree, event);\n        } else if (keyCode === HOME || keyCode === END) {\n            event.preventDefault();\n\n            if (keyCode === HOME) {\n                this.tree.keyManager.setFirstItemActive();\n            } else {\n                this.tree.keyManager.setLastItemActive();\n            }\n        } else if ((keyCode === ENTER || keyCode === SPACE) && this.tree.keyManager.activeItem) {\n            event.preventDefault();\n\n            this.tree.keyManager.activeItem.selectViaInteraction();\n        } else if (this.multiple && keyCode === A && event.ctrlKey) {\n            event.preventDefault();\n\n            const hasDeselectedOptions = this.options.some((option) => !option.selected);\n\n            this.options.forEach((option) => {\n                if (hasDeselectedOptions && !option.disabled) {\n                    option.select();\n                } else {\n                    option.deselect();\n                }\n            });\n        } else {\n            const previouslyFocusedIndex = this.tree.keyManager.activeItemIndex;\n\n            this.tree.keyManager.onKeydown(event);\n\n            if (this.multiple && isArrowKey && event.shiftKey && this.tree.keyManager.activeItem &&\n                this.tree.keyManager.activeItemIndex !== previouslyFocusedIndex) {\n                this.tree.keyManager.activeItem.selectViaInteraction();\n            }\n        }\n    }\n\n    private initializeSelection() {\n        // Defer setting the value in order to avoid the \"Expression\n        // has changed after it was checked\" errors from Angular.\n        Promise.resolve().then(() => {\n            this.setSelectionByValue(this.ngControl ? this.ngControl.value : this._value);\n        });\n    }\n\n    /**\n     * Sets the selected option based on a value. If no option can be\n     * found with the designated value, the select trigger is cleared.\n     */\n    private setSelectionByValue(value: any | any[]) {\n        if (this.multiple && value) {\n            if (!Array.isArray(value)) { throw getMcSelectNonArrayValueError(); }\n\n            this.selectionModel.clear();\n            value.forEach((currentValue: any) => this.selectValue(currentValue));\n            this.sortValues();\n        } else {\n            this.selectionModel.clear();\n            const correspondingOption = this.selectValue(value);\n\n            // Shift focus to the active item. Note that we shouldn't do this in multiple\n            // mode, because we don't know what option the user interacted with last.\n            if (correspondingOption) {\n                this.tree.keyManager.setActiveItem(correspondingOption);\n            }\n        }\n\n        this.changeDetectorRef.markForCheck();\n    }\n\n    /**\n     * Finds and selects and option based on its value.\n     * @returns Option that has the corresponding value.\n     */\n    private selectValue(value: any): McTreeOption | undefined {\n        const correspondingOption = this.options.find((option: McTreeOption) => {\n            try {\n                // Treat null as a special reset value.\n                return option.value != null && this._compareWith(option.value, value);\n            } catch (error) {\n                if (isDevMode()) {\n                    // Notify developers of errors in their comparator.\n                    console.warn(error);\n                }\n\n                return false;\n            }\n        });\n\n        if (correspondingOption) {\n            this.selectionModel.select(correspondingOption);\n        }\n\n        return correspondingOption;\n    }\n\n    private initKeyManager() {\n        this.originalOnKeyDown = this.tree.onKeyDown;\n\n        this.tree.onKeyDown = () => {};\n\n        this.tree.keyManager.tabOut\n            .pipe(takeUntil(this.destroy))\n            .subscribe(() => {\n                // Restore focus to the trigger before closing. Ensures that the focus\n                // position won't be lost if the user got focus into the overlay.\n                this.focus();\n                this.close();\n            });\n\n        this.tree.keyManager.change\n            .pipe(takeUntil(this.destroy))\n            .subscribe(() => {\n                if (this._panelOpen && this.panel) {\n                    this.scrollActiveOptionIntoView();\n                } else if (!this._panelOpen && !this.multiple && this.tree.keyManager.activeItem) {\n                    this.tree.keyManager.activeItem.selectViaInteraction();\n                }\n            });\n    }\n\n    /** Drops current option subscriptions and IDs and resets from scratch. */\n    private resetOptions() {\n        const changedOrDestroyed = merge(this.options.changes, this.destroy);\n\n        this.optionSelectionChanges\n            .pipe(takeUntil(changedOrDestroyed))\n            .subscribe((event) => {\n                this.onSelect(event.source, event.isUserInput);\n\n                if (event.isUserInput && !this.multiple && this._panelOpen) {\n                    this.close();\n                    this.focus();\n                }\n            });\n\n        // Listen to changes in the internal state of the options and react accordingly.\n        // Handles cases like the labels of the selected options changing.\n        // merge(...this.options.map((option) => option.stateChanges))\n        //     .pipe(takeUntil(changedOrDestroyed))\n        //     .subscribe(() => {\n        //         this.changeDetectorRef.markForCheck();\n        //         this.stateChanges.next();\n        //     });\n\n        this.setOptionIds();\n    }\n\n    /** Invoked when an option is clicked. */\n    private onSelect(option: McTreeOption, isUserInput: boolean) {\n        const wasSelected = this.selectionModel.isSelected(option);\n\n        if (option.value == null && !this.multiple) {\n            option.deselect();\n            this.selectionModel.clear();\n            this.propagateChanges(option.value);\n        } else {\n            if (option.selected) {\n                this.selectionModel.select(option);\n            } else {\n                this.selectionModel.deselect(option);\n            }\n\n            if (isUserInput) {\n                this.tree.keyManager.setActiveItem(option);\n            }\n\n            if (this.multiple) {\n                this.sortValues();\n\n                if (isUserInput) {\n                    // In case the user selected the option with their mouse, we\n                    // want to restore focus back to the trigger, in order to\n                    // prevent the select keyboard controls from clashing with\n                    // the ones from `mc-option`.\n                    this.focus();\n                }\n            }\n        }\n\n        if (wasSelected !== this.selectionModel.isSelected(option)) {\n            this.propagateChanges();\n        }\n\n        this.stateChanges.next();\n    }\n\n    /** Sorts the selected values in the selected based on their order in the panel. */\n    private sortValues() {\n        if (this.multiple) {\n            const options = this.options.toArray();\n\n            this.selectionModel.sort((a, b) => {\n                return this.sortComparator ? this.sortComparator(a, b, options) :\n                    options.indexOf(a) - options.indexOf(b);\n            });\n            this.stateChanges.next();\n        }\n    }\n\n    /** Emits change event to set the model value. */\n    private propagateChanges(fallbackValue?: any) {\n        let valueToEmit: any = null;\n\n        if (this.multiple) {\n            valueToEmit = (this.selected as any).map((option) => option.value);\n        } else {\n            valueToEmit = this.selected ? (this.selected as any).value : fallbackValue;\n        }\n\n        this._value = valueToEmit;\n        this.valueChange.emit(valueToEmit);\n        this.onChange(valueToEmit);\n        this.selectionChange.emit(new McTreeSelectChange(this as any, valueToEmit));\n        this.changeDetectorRef.markForCheck();\n    }\n\n    /** Records option IDs to pass to the aria-owns property. */\n    private setOptionIds() {\n        this.optionIds = this.options.map((option) => option.id).join(' ');\n    }\n\n    /**\n     * Highlights the selected item. If no option is selected, it will highlight\n     * the first item instead.\n     */\n    private highlightCorrectOption() {\n        if (this.tree.keyManager) {\n            if (this.empty) {\n                this.tree.keyManager.setFirstItemActive();\n            } else {\n                this.tree.keyManager.setActiveItem(this.selectionModel.selected[0]);\n            }\n        }\n    }\n\n    /** Scrolls the active option into view. */\n    private scrollActiveOptionIntoView() {\n        const activeOptionIndex = this.tree.keyManager.activeItemIndex || 0;\n\n        this.panel.nativeElement.scrollTop = getOptionScrollPosition(\n            activeOptionIndex,\n            this.getItemHeight(),\n            this.panel.nativeElement.scrollTop,\n            SELECT_PANEL_MAX_HEIGHT\n        );\n    }\n\n    /** Gets the index of the provided option in the option list. */\n    private getOptionIndex(option: McTreeOption): number | undefined {\n        // todo разобраться с этим срачем!\n        return this.options.reduce((result: number, current: McTreeOption, index: number) => {\n            /* tslint:disable-next-line:strict-type-predicates */\n            return result === undefined ? (option === current ? index : undefined) : result;\n        }, undefined);\n    }\n\n    /** Calculates the scroll position and x- and y-offsets of the overlay panel. */\n    private calculateOverlayPosition() {\n        const itemHeight = this.getItemHeight();\n        const items = this.getItemCount();\n        const panelHeight = Math.min(items * itemHeight, SELECT_PANEL_MAX_HEIGHT);\n        const scrollContainerHeight = items * itemHeight;\n\n        // The farthest the panel can be scrolled before it hits the bottom\n        const maxScroll = scrollContainerHeight - panelHeight;\n\n        // If no value is selected we open the popup to the first item.\n        const selectedOptionOffset =\n            this.empty ? 0 : this.getOptionIndex(this.selectionModel.selected[0])!;\n\n        // We must maintain a scroll buffer so the selected option will be scrolled to the\n        // center of the overlay panel rather than the top.\n        /* tslint:disable-next-line:no-magic-numbers */\n        const scrollBuffer = panelHeight / 2;\n        this.scrollTop = this.calculateOverlayScroll(selectedOptionOffset, scrollBuffer, maxScroll);\n        this.offsetY = this.calculateOverlayOffsetY();\n\n        this.checkOverlayWithinViewport(maxScroll);\n    }\n\n    /**\n     * Sets the x-offset of the overlay panel in relation to the trigger's top start corner.\n     * This must be adjusted to align the selected option text over the trigger text when\n     * the panel opens. Will change based on LTR or RTL text direction. Note that the offset\n     * can't be calculated until the panel has been attached, because we need to know the\n     * content width in order to constrain the panel within the viewport.\n     */\n    private calculateOverlayOffsetX() {\n        const overlayRect = this.overlayDir.overlayRef.overlayElement.getBoundingClientRect();\n        const viewportSize = this.viewportRuler.getViewportSize();\n        const isRtl = this.isRtl();\n        /* tslint:disable-next-line:no-magic-numbers */\n        const paddingWidth = SELECT_PANEL_PADDING_X * 2;\n        let offsetX: number = SELECT_PANEL_PADDING_X;\n\n        // Invert the offset in LTR.\n        if (!isRtl) { offsetX *= -1; }\n\n        // Determine how much the select overflows on each side.\n        const leftOverflow = 0 - (overlayRect.left + offsetX - (isRtl ? paddingWidth : 0));\n        const rightOverflow = overlayRect.right + offsetX - viewportSize.width\n            + (isRtl ? 0 : paddingWidth);\n\n        // If the element overflows on either side, reduce the offset to allow it to fit.\n        if (leftOverflow > 0) {\n            offsetX += leftOverflow + SELECT_PANEL_VIEWPORT_PADDING;\n        } else if (rightOverflow > 0) {\n            offsetX -= rightOverflow + SELECT_PANEL_VIEWPORT_PADDING;\n        }\n\n        // Set the offset directly in order to avoid having to go through change detection and\n        // potentially triggering \"changed after it was checked\" errors. Round the value to avoid\n        // blurry content in some browsers.\n        this.overlayDir.offsetX = Math.round(offsetX);\n        this.overlayDir.overlayRef.updatePosition();\n    }\n\n    /**\n     * Calculates the y-offset of the select's overlay panel in relation to the\n     * top start corner of the trigger. It has to be adjusted in order for the\n     * selected option to be aligned over the trigger when the panel opens.\n     */\n    private calculateOverlayOffsetY(): number {\n        // const itemHeight = this.getItemHeight();\n        // const optionHeightAdjustment = (itemHeight - this.triggerRect.height) / 2;\n\n        // todo I'm not sure that we will use it\n        return 0;\n        // return Math.round(-optionHeightAdjustment);\n    }\n\n    /**\n     * Checks that the attempted overlay position will fit within the viewport.\n     * If it will not fit, tries to adjust the scroll position and the associated\n     * y-offset so the panel can open fully on-screen. If it still won't fit,\n     * sets the offset back to 0 to allow the fallback position to take over.\n     */\n    private checkOverlayWithinViewport(maxScroll: number) {\n        const itemHeight = this.getItemHeight();\n        const viewportSize = this.viewportRuler.getViewportSize();\n\n        const topSpaceAvailable = this.triggerRect.top - SELECT_PANEL_VIEWPORT_PADDING;\n        const bottomSpaceAvailable =\n            viewportSize.height - this.triggerRect.bottom - SELECT_PANEL_VIEWPORT_PADDING;\n\n        const panelHeightTop = Math.abs(this.offsetY);\n        const totalPanelHeight =\n            Math.min(this.getItemCount() * itemHeight, SELECT_PANEL_MAX_HEIGHT);\n        const panelHeightBottom = totalPanelHeight - panelHeightTop - this.triggerRect.height;\n\n        if (panelHeightBottom > bottomSpaceAvailable) {\n            this.adjustPanelUp(panelHeightBottom, bottomSpaceAvailable);\n        } else if (panelHeightTop > topSpaceAvailable) {\n            this.adjustPanelDown(panelHeightTop, topSpaceAvailable, maxScroll);\n        } else {\n            this.transformOrigin = this.getOriginBasedOnOption();\n        }\n    }\n\n    /** Adjusts the overlay panel up to fit in the viewport. */\n    private adjustPanelUp(panelHeightBottom: number, bottomSpaceAvailable: number) {\n        // Browsers ignore fractional scroll offsets, so we need to round.\n        const distanceBelowViewport = Math.round(panelHeightBottom - bottomSpaceAvailable);\n\n        // Scrolls the panel up by the distance it was extending past the boundary, then\n        // adjusts the offset by that amount to move the panel up into the viewport.\n        this.scrollTop -= distanceBelowViewport;\n        this.offsetY -= distanceBelowViewport;\n        this.transformOrigin = this.getOriginBasedOnOption();\n\n        // If the panel is scrolled to the very top, it won't be able to fit the panel\n        // by scrolling, so set the offset to 0 to allow the fallback position to take\n        // effect.\n        if (this.scrollTop <= 0) {\n            this.scrollTop = 0;\n            this.offsetY = 0;\n            this.transformOrigin = `50% bottom 0px`;\n        }\n    }\n\n    /** Adjusts the overlay panel down to fit in the viewport. */\n    private adjustPanelDown(panelHeightTop: number, topSpaceAvailable: number, maxScroll: number) {\n        // Browsers ignore fractional scroll offsets, so we need to round.\n        const distanceAboveViewport = Math.round(panelHeightTop - topSpaceAvailable);\n\n        // Scrolls the panel down by the distance it was extending past the boundary, then\n        // adjusts the offset by that amount to move the panel down into the viewport.\n        this.scrollTop += distanceAboveViewport;\n        this.offsetY += distanceAboveViewport;\n        this.transformOrigin = this.getOriginBasedOnOption();\n\n        // If the panel is scrolled to the very bottom, it won't be able to fit the\n        // panel by scrolling, so set the offset to 0 to allow the fallback position\n        // to take effect.\n        if (this.scrollTop >= maxScroll) {\n            this.scrollTop = maxScroll;\n            this.offsetY = 0;\n            this.transformOrigin = `50% top 0px`;\n\n            return;\n        }\n    }\n\n    /** Sets the transform origin point based on the selected option. */\n    private getOriginBasedOnOption(): string {\n        const itemHeight = this.getItemHeight();\n        /* tslint:disable-next-line:no-magic-numbers */\n        const optionHeightAdjustment = (itemHeight - this.triggerRect.height) / 2;\n        /* tslint:disable-next-line:no-magic-numbers */\n        const originY = Math.abs(this.offsetY) - optionHeightAdjustment + itemHeight / 2;\n\n        return `50% ${originY}px 0px`;\n    }\n\n    /** Calculates the amount of items in the select. This includes options and group labels. */\n    private getItemCount(): number {\n        return this.options.length;\n    }\n\n    /** Calculates the height of the select's options. */\n    private getItemHeight(): number {\n        // todo доделать\n        /* tslint:disable-next-line:no-magic-numbers */\n        return 32;\n        // return this.triggerFontSize * SELECT_ITEM_HEIGHT_EM;\n    }\n\n    /** Comparison function to specify which option is displayed. Defaults to object equality. */\n    private _compareWith = (o1: any, o2: any) => o1 === o2;\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { OverlayModule } from '@ptsecurity/cdk/overlay';\nimport { CdkTreeModule } from '@ptsecurity/cdk/tree';\nimport { MC_SELECT_SCROLL_STRATEGY_PROVIDER, McPseudoCheckboxModule } from '@ptsecurity/mosaic/core';\nimport { McIconModule } from '@ptsecurity/mosaic/icon';\nimport { McTagModule } from '@ptsecurity/mosaic/tag';\nimport { McTreeModule } from '@ptsecurity/mosaic/tree';\n\nimport { McTreeSelect, McTreeSelectTrigger } from './tree-select.component';\n\n\n@NgModule({\n    imports: [\n        CommonModule,\n        OverlayModule,\n        CdkTreeModule,\n        McTreeModule,\n        McIconModule,\n        McTagModule,\n        McPseudoCheckboxModule\n    ],\n    exports: [McTreeSelect, McTreeSelectTrigger, CommonModule],\n    declarations: [McTreeSelect, McTreeSelectTrigger],\n    providers: [MC_SELECT_SCROLL_STRATEGY_PROVIDER]\n})\nexport class McTreeSelectModule {}\n","import {\n    Directive, DoCheck, ElementRef, Inject,\n    Input, OnChanges, OnDestroy, Optional,\n    Self, InjectionToken, NgZone, OnInit\n} from '@angular/core';\nimport { FormGroupDirective, NgControl, NgForm } from '@angular/forms';\nimport { coerceBooleanProperty } from '@ptsecurity/cdk/coercion';\nimport {\n    CanUpdateErrorState,\n    CanUpdateErrorStateCtor,\n    ErrorStateMatcher,\n    mixinErrorState\n} from '@ptsecurity/mosaic/core';\nimport { McFormFieldControl } from '@ptsecurity/mosaic/form-field';\nimport { fromEvent, Subscription, Subject } from 'rxjs';\nimport { distinctUntilChanged, map } from 'rxjs/operators';\n\n\nexport const MC_TEXTAREA_VALUE_ACCESSOR =\n    new InjectionToken<{ value: any }>('MC_TEXTAREA_VALUE_ACCESSOR');\n\nlet nextUniqueId = 0;\n\nconst ROW_SEPARATOR = '\\n';\n\nexport class McTextareaBase {\n    constructor(public defaultErrorStateMatcher: ErrorStateMatcher,\n                public parentForm: NgForm,\n                public parentFormGroup: FormGroupDirective,\n                public ngControl: NgControl) {\n    }\n}\n\n// tslint:disable-next-line:naming-convention\nexport const McTextareaMixinBase: CanUpdateErrorStateCtor & typeof McTextareaBase = mixinErrorState(McTextareaBase);\n\n@Directive({\n    selector: 'textarea[mcTextarea]',\n    exportAs: 'mcTextarea',\n    host: {\n        class: 'mc-textarea',\n        '[class.mc-textarea-resizable]': '!canGrow',\n        '[attr.id]': 'id',\n        '[attr.placeholder]': 'placeholder',\n        '[attr.aria-invalid]': 'errorState',\n        '[disabled]': 'disabled',\n        '[required]': 'required',\n        '(blur)': 'focusChanged(false)',\n        '(focus)': 'focusChanged(true)'\n    },\n    providers: [{ provide: McFormFieldControl, useExisting: McTextarea }]\n})\nexport class McTextarea extends McTextareaMixinBase implements McFormFieldControl<any>, OnInit, OnChanges,\n    OnDestroy, DoCheck, CanUpdateErrorState {\n\n    @Input() canGrow: boolean = true;\n\n    /** An object used to control when error messages are shown. */\n    @Input() errorStateMatcher: ErrorStateMatcher;\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    focused: boolean = false;\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    readonly stateChanges: Subject<void> = new Subject<void>();\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    controlType: string = 'mc-textarea';\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    @Input()\n    get disabled(): boolean {\n        if (this.ngControl && this.ngControl.disabled !== null) {\n            return this.ngControl.disabled;\n        }\n\n        return this._disabled;\n    }\n\n    set disabled(value: boolean) {\n        this._disabled = coerceBooleanProperty(value);\n\n        if (this.focused) {\n            this.focused = false;\n            this.stateChanges.next();\n        }\n    }\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    @Input()\n    get id(): string {\n        return this._id;\n    }\n\n    set id(value: string) {\n        this._id = value || this.uid;\n    }\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    @Input() placeholder: string;\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    @Input()\n    get required(): boolean {\n        return this._required;\n    }\n\n    set required(value: boolean) {\n        this._required = coerceBooleanProperty(value);\n    }\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    @Input()\n    get value(): string {\n        return this.valueAccessor.value;\n    }\n\n    set value(value: string) {\n        if (value !== this.value) {\n            this.valueAccessor.value = value;\n            this.stateChanges.next();\n        }\n    }\n\n    protected uid = `mc-textsrea-${nextUniqueId++}`;\n    protected previousNativeValue: any;\n    protected _disabled = false;\n    protected _id: string;\n    protected _required = false;\n\n    private valueAccessor: { value: any };\n    private growSubscription: Subscription;\n\n    private lineHeight: number = 0;\n    private freeRowsHeight: number = 0;\n    private minHeight: number = 0;\n\n    constructor(protected elementRef: ElementRef,\n                @Optional() @Self() public ngControl: NgControl,\n                @Optional() parentForm: NgForm,\n                @Optional() parentFormGroup: FormGroupDirective,\n                defaultErrorStateMatcher: ErrorStateMatcher,\n                @Optional() @Self() @Inject(MC_TEXTAREA_VALUE_ACCESSOR) inputValueAccessor: any,\n                private ngZone: NgZone) {\n        super(defaultErrorStateMatcher, parentForm, parentFormGroup, ngControl);\n        // If no input value accessor was explicitly specified, use the element as the textarea value\n        // accessor.\n        this.valueAccessor = inputValueAccessor || this.elementRef.nativeElement;\n\n        this.previousNativeValue = this.value;\n\n        // Force setter to be called in case id was not specified.\n        this.id = this.id;\n\n        const growObserver = fromEvent(elementRef.nativeElement, 'input')\n            /*.pipe(\n                map((event: any) => this.getGrowHeight()),\n                // map((event: any) => event.target.scrollHeight),\n                distinctUntilChanged()\n            )*/;\n        this.growSubscription = growObserver.subscribe(this.grow.bind(this));\n    }\n\n    ngOnInit() {\n        setTimeout(() => this.grow(), 0);\n        this.lineHeight = parseInt(getComputedStyle(this.elementRef.nativeElement).lineHeight!, 10);\n\n        const paddingTop = parseInt(getComputedStyle(this.elementRef.nativeElement).paddingTop!, 10);\n        const paddingBottom = parseInt(getComputedStyle(this.elementRef.nativeElement).paddingBottom!, 10);\n\n        // tslint:disable-next-line:no-magic-numbers\n        this.minHeight = this.lineHeight * 2 + paddingTop + paddingBottom;\n        this.freeRowsHeight = this.lineHeight;\n    }\n\n    ngOnChanges() {\n        this.stateChanges.next();\n    }\n\n    ngOnDestroy() {\n        this.stateChanges.complete();\n        this.growSubscription.unsubscribe();\n    }\n\n    ngDoCheck() {\n        if (this.ngControl) {\n            // We need to re-evaluate this on every change detection cycle, because there are some\n            // error triggers that we can't subscribe to (e.g. parent form submissions). This means\n            // that whatever logic is in here has to be super lean or we risk destroying the performance.\n            this.updateErrorState();\n        }\n\n        // We need to dirty-check the native element's value, because there are some cases where\n        // we won't be notified when it changes (e.g. the consumer isn't using forms or they're\n        // updating the value using `emitEvent: false`).\n        this.dirtyCheckNativeValue();\n    }\n\n    /** Grow textarea height to avoid vertical scroll  */\n    grow() {\n        if (!this.canGrow) {\n            return;\n        }\n\n        this.ngZone.runOutsideAngular(() => {\n            const textarea = this.elementRef.nativeElement;\n\n            const outerHeight = parseInt(window.getComputedStyle(textarea).height!, 10);\n            const diff = outerHeight - textarea.clientHeight;\n\n            textarea.style.height = 0; // this line is important to height recalculation\n\n            const height = Math.max(this.minHeight, textarea.scrollHeight + diff + this.freeRowsHeight);\n            textarea.style.height = `${height}px`;\n        });\n    }\n\n    /** Focuses the textarea. */\n    focus(): void {\n        this.elementRef.nativeElement.focus();\n    }\n\n    /** Callback for the cases where the focused state of the textarea changes. */\n    focusChanged(isFocused: boolean) {\n        if (isFocused !== this.focused) {\n            this.focused = isFocused;\n            this.stateChanges.next();\n        }\n    }\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    get empty(): boolean {\n        return !this.elementRef.nativeElement.value && !this.isBadInput();\n    }\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    onContainerClick() {\n        this.focus();\n    }\n\n    /** Does some manual dirty checking on the native textarea `value` property. */\n    protected dirtyCheckNativeValue() {\n        const newValue = this.value;\n\n        if (this.previousNativeValue !== newValue) {\n            this.previousNativeValue = newValue;\n            this.stateChanges.next();\n        }\n    }\n\n    /** Checks whether the textarea is invalid based on the native validation. */\n    protected isBadInput(): boolean {\n        // The `validity` property won't be present on platform-server.\n        const validity = (this.elementRef.nativeElement as HTMLTextAreaElement).validity;\n\n        return validity && validity.badInput;\n    }\n\n    private getGrowHeight(): number {\n        const textarea = this.elementRef.nativeElement;\n        const outerHeight = parseInt(window.getComputedStyle(textarea).height!.toString(), 10);\n        const diff = outerHeight - textarea.clientHeight;\n\n        return Math.max(this.minHeight, textarea.scrollHeight + diff);\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { A11yModule } from '@ptsecurity/cdk/a11y';\nimport { McCommonModule } from '@ptsecurity/mosaic/core';\n\nimport { McTextarea } from './textarea.component';\n\n\n@NgModule({\n    imports: [CommonModule, A11yModule, McCommonModule, FormsModule],\n    exports: [McTextarea],\n    declarations: [McTextarea]\n})\nexport class McTextareaModule {\n}\n","import {\n    Directive,\n    DoCheck,\n    ElementRef,\n    forwardRef,\n    Inject,\n    Input,\n    OnChanges,\n    OnDestroy,\n    Optional,\n    Renderer2,\n    Self\n} from '@angular/core';\nimport {\n    ControlValueAccessor,\n    FormControl,\n    FormGroupDirective,\n    NG_VALIDATORS,\n    NgControl,\n    NgForm,\n    ValidationErrors,\n    ValidatorFn,\n    Validators\n} from '@angular/forms';\nimport { coerceBooleanProperty } from '@ptsecurity/cdk/coercion';\nimport {\n    CanUpdateErrorState,\n    CanUpdateErrorStateCtor,\n    ErrorStateMatcher,\n    mixinErrorState\n} from '@ptsecurity/mosaic/core';\nimport { McFormFieldControl } from '@ptsecurity/mosaic/form-field';\nimport { MC_INPUT_VALUE_ACCESSOR } from '@ptsecurity/mosaic/input';\nimport {\n    noop,\n    Subject\n} from 'rxjs';\n\nimport {\n    ARROW_DOWN_KEYCODE,\n    ARROW_LEFT_KEYCODE,\n    ARROW_RIGHT_KEYCODE,\n    ARROW_UP_KEYCODE,\n    DEFAULT_TIME_FORMAT,\n    HOURS_PER_DAY,\n    HOURS_MINUTES_REGEXP,\n    HOURS_MINUTES_SECONDS_REGEXP,\n    HOURS_ONLY_REGEXP,\n    MINUTES_PER_HOUR,\n    SECONDS_PER_MINUTE,\n    TIMEFORMAT_PLACEHOLDERS,\n    TimeFormats,\n    TimeParts\n} from './timepicker.constants';\n\n\nlet uniqueComponentIdSuffix: number = 0;\n\nconst formValidators: WeakMap<FormControl, ValidatorFn | null> = new WeakMap();\nconst formValidatorOnChangeRegistrators: WeakMap<FormControl, () => void> = new WeakMap();\nconst validatorOnChange = (c: FormControl) => {\n    const validatorOnChangeHandler = formValidatorOnChangeRegistrators.get(c);\n\n    if (validatorOnChangeHandler !== undefined) { validatorOnChangeHandler(); }\n};\n\nexport class McTimepickerBase {\n    constructor(\n        public defaultErrorStateMatcher: ErrorStateMatcher,\n        public parentForm: NgForm,\n        public parentFormGroup: FormGroupDirective,\n        public ngControl: NgControl) { }\n}\n\n// tslint:disable-next-line naming-convention\nexport const McTimepickerMixinBase:\n    CanUpdateErrorStateCtor &\n    typeof McTimepickerBase = mixinErrorState(McTimepickerBase);\n\n@Directive({\n    selector: 'input[mcTimepicker]',\n    exportAs: 'mcTimepickerInput',\n    host: {\n        class: 'mc-timepicker mc-input',\n        // Native input properties that are overwritten by Angular inputs need to be synced with\n        // the native input element. Otherwise property bindings for those don't work.\n        '[attr.id]': 'id',\n        '[attr.placeholder]': 'placeholder',\n        '[disabled]': 'disabled',\n        '[required]': 'required',\n        '[attr.time-format]': 'timeFormat',\n        '[attr.min-time]': 'minTime',\n        '[attr.max-time]': 'maxTime',\n        '[attr.value]': 'value',\n        '[attr.aria-invalid]': 'errorState',\n        '(blur)': 'onBlur()',\n        '(focus)': 'focusChanged(true)',\n        '(input)': 'onInput()',\n        '(paste)': 'onPaste($event)',\n        '(keydown)': 'onKeyDown($event)'\n    },\n    providers: [\n        {\n            provide: NG_VALIDATORS,\n            useValue: {\n                validate(c: FormControl) {\n                    // TODO This is `workaround` to bind singleton-like Validator implementation to\n                    // context of each validated component. This MUST be realized in proper way!\n                    if (this.__validatorOnChangeHandler !== undefined) {\n                        formValidatorOnChangeRegistrators.set(c, this.__validatorOnChangeHandler);\n                        this.__validatorOnChangeHandler = undefined;\n                    }\n                    const validator = formValidators.get(c);\n\n                    return validator ? validator(c) : null;\n                },\n                registerOnValidatorChange(fn: () => void): void {\n                    this.__validatorOnChangeHandler = fn;\n                }\n            },\n            multi: true\n        },\n        {\n            provide: McFormFieldControl,\n            useExisting: forwardRef(() => McTimepicker)\n        }\n    ]\n\n})\nexport class McTimepicker extends McTimepickerMixinBase\n    implements McFormFieldControl<any>,\n        OnChanges,\n        OnDestroy,\n        DoCheck,\n        CanUpdateErrorState,\n        ControlValueAccessor {\n\n    /** An object used to control when error messages are shown. */\n    @Input() errorStateMatcher: ErrorStateMatcher;\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    focused: boolean = false;\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    readonly stateChanges: Subject<void> = new Subject<void>();\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    controlType: string = 'mc-timepicker';\n\n    @Input()\n    get disabled(): boolean {\n        if (this.ngControl && this.ngControl.disabled !== null) { return this.ngControl.disabled; }\n\n        return this._disabled;\n    }\n\n    set disabled(value: boolean) {\n        this._disabled = coerceBooleanProperty(value);\n\n        // Browsers may not fire the blur event if the input is disabled too quickly.\n        // Reset from here to ensure that the element doesn't become stuck.\n        if (this.focused) {\n            this.focused = false;\n        }\n\n        this.stateChanges.next();\n    }\n\n    @Input()\n    get id(): string { return this._id; }\n\n    set id(value: string) { this._id = value || this.uid; }\n\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    @Input() placeholder: string;\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    @Input()\n    get required(): boolean { return this._required; }\n\n    set required(value: boolean) { this._required = coerceBooleanProperty(value); }\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    @Input()\n    get value(): string { return this.inputValueAccessor.value; }\n\n    set value(value: string) {\n        if (value !== this.value) {\n            this.inputValueAccessor.value = value;\n            this.applyInputChanges();\n        }\n    }\n\n    @Input('time-format')\n    get timeFormat(): TimeFormats { return this._timeFormat; }\n\n    set timeFormat(formatValue: TimeFormats) {\n        this._timeFormat = Object\n            .keys(TimeFormats)\n            .map((timeFormatKey) => TimeFormats[timeFormatKey])\n            .indexOf(formatValue) > -1 ? formatValue : DEFAULT_TIME_FORMAT;\n\n        validatorOnChange(<FormControl> this.ngControl.control);\n        this.placeholder = TIMEFORMAT_PLACEHOLDERS[this._timeFormat];\n    }\n\n    @Input('min-time')\n    get minTime(): string | null { return this._minTime; }\n\n    set minTime(minValue: string | null) {\n        this._minTime = minValue;\n        this.minDateTime = minValue !== null ? this.getDateFromTimeString(minValue) : undefined;\n        validatorOnChange(<FormControl> this.ngControl.control);\n    }\n\n    @Input('max-time')\n    get maxTime(): string | null { return this._maxTime; }\n\n    set maxTime(maxValue: string | null) {\n        this._maxTime = maxValue;\n        this.maxDateTime = maxValue !== null ? this.getDateFromTimeString(maxValue) : undefined;\n        validatorOnChange(<FormControl> this.ngControl.control);\n    }\n\n    private _id: string;\n    private readonly uid = `mc-timepicker-${uniqueComponentIdSuffix++}`;\n    private _disabled: boolean;\n    private _required: boolean;\n    private previousNativeValue: any;\n    private readonly inputValueAccessor: { value: any };\n    private onChange: (value: any) => void;\n    private onTouched: () => void;\n    private _timeFormat: TimeFormats;\n    private _minTime: string | null = null;\n    private minDateTime: Date | undefined;\n    private _maxTime: string | null = null;\n    private maxDateTime: Date | undefined;\n    private currentDateTimeInput: Date | undefined;\n\n    constructor(private readonly elementRef: ElementRef,\n                @Optional() @Self() public ngControl: NgControl,\n                @Optional() parentForm: NgForm,\n                @Optional() parentFormGroup: FormGroupDirective,\n                defaultErrorStateMatcher: ErrorStateMatcher,\n                @Optional() @Self() @Inject(MC_INPUT_VALUE_ACCESSOR) inputValueAccessor: any,\n                private readonly renderer: Renderer2) {\n        super(defaultErrorStateMatcher, parentForm, parentFormGroup, ngControl);\n\n        // If no input value accessor was explicitly specified, use the element as the input value\n        // accessor.\n        this.inputValueAccessor = inputValueAccessor || this.elementRef.nativeElement;\n\n        this.previousNativeValue = this.value;\n        this.onChange = noop;\n\n        // Force setter to be called in case id was not specified.\n        this.id = this.id;\n\n        this.placeholder = TIMEFORMAT_PLACEHOLDERS[DEFAULT_TIME_FORMAT];\n\n        // Instead of NG_VALUE_ACCESSOR (https://github.com/angular/material2/issues/8158#issuecomment-344618103)\n        if (this.ngControl) { this.ngControl.valueAccessor = this; }\n\n        // Substitute initial empty validator with validator linked to directive object instance (workaround)\n\n        formValidators.set(\n            <FormControl> this.ngControl.control,\n            Validators.compose([\n                () => this.parseValidator(),\n                () => this.minTimeValidator(),\n                () => this.maxTimeValidator()\n            ])\n        );\n    }\n\n    ngOnChanges(): void {\n        this.stateChanges.next();\n    }\n\n    ngOnDestroy(): void {\n        this.stateChanges.complete();\n    }\n\n    ngDoCheck(): void {\n        if (this.ngControl) {\n            // We need to re-evaluate this on every change detection cycle, because there are some\n            // error triggers that we can't subscribe to (e.g. parent form submissions). This means\n            // that whatever logic is in here has to be super lean or we risk destroying the performance.\n            this.updateErrorState();\n        }\n\n        // We need to dirty-check the native element's value, because there are some cases where\n        // we won't be notified when it changes (e.g. the consumer isn't using forms or they're\n        // updating the value using `emitEvent: false`).\n        this.dirtyCheckNativeValue();\n    }\n\n    focus(): void {\n        this.elementRef.nativeElement.focus();\n    }\n\n    focusChanged(isFocused: boolean): void {\n        if (isFocused !== this.focused) {\n            this.focused = isFocused;\n            this.onTouched();\n            this.stateChanges.next();\n        }\n    }\n\n    onBlur() {\n        this.applyInputChanges();\n        this.focusChanged(false);\n    }\n\n    onPaste($event) {\n        $event.preventDefault();\n        const clipboardUserInput: string = $event.clipboardData.getData('text');\n\n        if (this.getDateFromTimeString(clipboardUserInput) === undefined) { return; }\n\n        this.elementRef.nativeElement.value = clipboardUserInput;\n        this.onInput();\n    }\n\n    onInput() {\n        const initialCursorStart: number = this.elementRef.nativeElement.selectionStart;\n        const initialCursorEnd: number = this.elementRef.nativeElement.selectionEnd;\n        let isAutocompleteTriggered: boolean = false;\n\n        const {\n            hoursOnly,\n            hoursAndMinutes,\n            hoursAndMinutesAndSeconds\n        } = this.getParsedTimeParts(this.elementRef.nativeElement.value);\n\n        // tslint:disable no-magic-numbers\n        if (hoursOnly &&\n            hoursOnly[1] &&\n            hoursOnly[1].length === 2) {\n            isAutocompleteTriggered = true;\n        } else if (hoursAndMinutes &&\n            hoursAndMinutes[1].length === 1 &&\n            hoursAndMinutes[2] &&\n            hoursAndMinutes[2].length === 2) {\n            isAutocompleteTriggered = true;\n        } else if (hoursAndMinutesAndSeconds &&\n            hoursAndMinutesAndSeconds[1].length === 2 &&\n            hoursAndMinutesAndSeconds[2].length === 2 &&\n            hoursAndMinutesAndSeconds[3] &&\n            hoursAndMinutesAndSeconds[3].length === 2) {\n            isAutocompleteTriggered = true;\n        }\n        // tslint:enable no-magic-numbers\n\n        this.applyInputChanges({ doTimestringReformat: isAutocompleteTriggered });\n\n        this.elementRef.nativeElement.selectionStart = initialCursorStart;\n        this.elementRef.nativeElement.selectionEnd = initialCursorEnd;\n\n        if (isAutocompleteTriggered && this.ngControl.errors === null) {\n            this.createSelectionOfTimeComponentInInput(initialCursorStart + 1);\n        }\n    }\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    get empty(): boolean {\n        return !this.elementRef.nativeElement.value && !this.isBadInput();\n    }\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    onContainerClick() {\n        this.focus();\n    }\n\n    writeValue(value: Date | null): void {\n        if (value !== null) {\n            this.renderer.setProperty(this.elementRef.nativeElement,\n                'value',\n                this.getTimeStringFromDate(value, this.timeFormat)\n            );\n        }\n        this.onChange(value || null);\n        this.applyInputChanges();\n    }\n\n    onKeyDown(event: KeyboardEvent): void {\n\n        const keyCode: string = this.getKeyCode(event);\n\n        if (keyCode === ARROW_UP_KEYCODE || keyCode === ARROW_DOWN_KEYCODE) {\n            this.upDownTimeByArrowKeys(event);\n        }\n        if (keyCode === ARROW_LEFT_KEYCODE || keyCode === ARROW_RIGHT_KEYCODE) {\n            this.switchSelectionBetweenTimeparts(event);\n        }\n    }\n\n    registerOnChange(fn: (value: Date) => void): void {\n        this.onChange = fn;\n    }\n\n    registerOnTouched(fn: () => void): void {\n        this.onTouched = fn;\n    }\n\n    /** Does some manual dirty checking on the native input `value` property. */\n    private dirtyCheckNativeValue() {\n        const newValue = this.value;\n\n        if (this.previousNativeValue !== newValue) {\n            this.previousNativeValue = newValue;\n            this.stateChanges.next();\n        }\n    }\n\n    /** Checks whether the input is invalid based on the native validation. */\n    private isBadInput(): boolean {\n        const validity = (<HTMLInputElement> this.elementRef.nativeElement).validity;\n\n        return validity && validity.badInput;\n    }\n\n    private applyInputChanges(applyParams: {\n        changedTime?: Date;\n        doTimestringReformat?: boolean;\n    } = {}): void {\n        const { changedTime, doTimestringReformat = true } = applyParams;\n        const timeToApply: Date | undefined = changedTime ||\n            this.getDateFromTimeString(this.elementRef.nativeElement.value);\n        this.currentDateTimeInput = timeToApply;\n\n        if (doTimestringReformat && timeToApply !== undefined) {\n            const selectionStart: number = this.elementRef.nativeElement.selectionStart;\n            const selectionEnd: number = this.elementRef.nativeElement.selectionEnd;\n            this.renderer.setProperty(\n                this.elementRef.nativeElement,\n                'value',\n                this.getTimeStringFromDate(timeToApply, this.timeFormat));\n            this.elementRef.nativeElement.selectionStart = selectionStart;\n            this.elementRef.nativeElement.selectionEnd = selectionEnd;\n        }\n\n        (<FormControl> this.ngControl.control).updateValueAndValidity();\n        const result = this.ngControl.errors === null && timeToApply !== undefined ? timeToApply : null;\n        this.onChange(result);\n        this.stateChanges.next();\n    }\n\n    private upDownTimeByArrowKeys(event: KeyboardEvent): void {\n        event.preventDefault();\n\n        let changedTime: Date | undefined = this.currentDateTimeInput;\n        if (changedTime !== undefined) {\n            const cursorPos = this.elementRef.nativeElement.selectionStart;\n\n            const modifiedTimePart = this.getTimeEditMetrics(cursorPos)\n                .modifiedTimePart;\n            const keyCode: string = this.getKeyCode(event);\n            if (keyCode === ARROW_UP_KEYCODE) { changedTime = this.incrementTime(changedTime, modifiedTimePart); }\n            if (keyCode === ARROW_DOWN_KEYCODE) { changedTime = this.decrementTime(changedTime, modifiedTimePart); }\n            this.applyInputChanges({ changedTime });\n            this.createSelectionOfTimeComponentInInput(cursorPos);\n        }\n    }\n\n    private switchSelectionBetweenTimeparts(event: KeyboardEvent): void {\n        const changedTime: Date | undefined = this.currentDateTimeInput;\n        const keyCode: string = this.getKeyCode(event);\n\n        if (changedTime !== undefined) {\n            let cursorPos: number = this.elementRef.nativeElement.selectionStart;\n            if (keyCode === ARROW_LEFT_KEYCODE) {\n                cursorPos = this.getCursorPositionOfPrevTimePartStart(cursorPos, this.elementRef.nativeElement.value);\n            } else if (keyCode === ARROW_RIGHT_KEYCODE) {\n                cursorPos = this.getCursorPositionOfNextTimePartStart(cursorPos, this.elementRef.nativeElement.value);\n            }\n            this.createSelectionOfTimeComponentInInput(cursorPos);\n        }\n    }\n\n    /**\n     * @description Microsoft EDGE doesn't support KeyboaedEvent.code thus we need this helper\n     */\n    private getKeyCode(event: KeyboardEvent): string {\n        return event.code || event.key;\n    }\n\n    private createSelectionOfTimeComponentInInput(cursorPos: number): void {\n        setTimeout(() => {\n            const newEditParams = this.getTimeEditMetrics(cursorPos);\n            this.elementRef.nativeElement.selectionStart = newEditParams.cursorStartPosition;\n            this.elementRef.nativeElement.selectionEnd = newEditParams.cursorEndPosition;\n        });\n    }\n\n    private incrementTime(dateVal: Date,\n                          whatToIncrement: TimeParts = TimeParts.seconds): Date {\n        let { hours, minutes, seconds } = this.getTimeDigitsFromDate(dateVal);\n\n        switch (whatToIncrement) {\n            case TimeParts.hours:\n                hours++;\n                break;\n            case TimeParts.minutes:\n                minutes++;\n                break;\n            case TimeParts.seconds:\n                seconds++;\n                break;\n            default:\n        }\n\n        if (seconds > SECONDS_PER_MINUTE) { seconds = 0; }\n\n        if (minutes > MINUTES_PER_HOUR) { minutes = 0; }\n\n        if (hours > HOURS_PER_DAY) { hours = 0; }\n\n        return <Date> this.getDateFromTimeDigits(hours, minutes, seconds);\n    }\n\n    /**\n     * @description Decrement part of time\n     */\n    private decrementTime(dateVal: Date,\n                          whatToDecrement: TimeParts = TimeParts.seconds): Date {\n        let { hours, minutes, seconds } = this.getTimeDigitsFromDate(dateVal);\n\n        switch (whatToDecrement) {\n            case TimeParts.hours:\n                hours--;\n                break;\n            case TimeParts.minutes:\n                minutes--;\n                break;\n            case TimeParts.seconds:\n                seconds--;\n                break;\n            default:\n        }\n\n        if (seconds < 0) { seconds = SECONDS_PER_MINUTE; }\n\n        if (minutes < 0) { minutes = MINUTES_PER_HOUR; }\n\n        if (hours < 0) { hours = HOURS_PER_DAY; }\n\n        return <Date> this.getDateFromTimeDigits(hours, minutes, seconds);\n    }\n\n    private getCursorPositionOfPrevTimePartStart(cursorPos: number, timeString: string): number {\n        return cursorPos === 0 ? timeString.length : cursorPos - 1;\n    }\n\n    private getCursorPositionOfNextTimePartStart(cursorPos: number,\n                                                 timeString: string,\n                                                 timeDevider: string = ':'): number {\n        const nextDividerPos: number = timeString.indexOf(timeDevider, cursorPos);\n\n        return nextDividerPos !== undefined ? nextDividerPos + 1 : 0;\n    }\n\n    /**\n     * @description Get params for arrow-keys (up/down) time valie edit.\n     * @param cursorPosition Current cursor position in timeString\n     */\n    private getTimeEditMetrics(cursorPosition: number): {\n        modifiedTimePart: TimeParts;\n        cursorStartPosition: number;\n        cursorEndPosition: number;\n    } {\n        const timeString: string = this.elementRef.nativeElement.value;\n        let modifiedTimePart: TimeParts;\n        let cursorStartPosition: number;\n        let cursorEndPosition: number;\n        const hoursIndex = 0;\n        const minutesIndex = timeString.indexOf(':', hoursIndex + 1);\n        const secondsIndex = minutesIndex !== -1 ? timeString.indexOf(':', minutesIndex + 1) : -1;\n\n        if (secondsIndex !== -1 && cursorPosition > secondsIndex) {\n            modifiedTimePart = TimeParts.seconds;\n            cursorStartPosition = secondsIndex + 1;\n            cursorEndPosition = timeString.length;\n        } else if (minutesIndex !== -1 && cursorPosition > minutesIndex) {\n            modifiedTimePart = TimeParts.minutes;\n            cursorStartPosition = minutesIndex + 1;\n            cursorEndPosition = secondsIndex > -1 ? secondsIndex : timeString.length;\n        } else {\n            modifiedTimePart = TimeParts.hours;\n            cursorStartPosition = hoursIndex;\n            cursorEndPosition = minutesIndex !== -1 ? minutesIndex : timeString.length;\n        }\n\n        return {\n            modifiedTimePart,\n            cursorStartPosition,\n            cursorEndPosition\n        };\n    }\n\n    /**\n     * @description Create time string for displaying inside input element of UI\n     */\n    private getTimeStringFromDate(tempVal: Date,\n                                  timeFormat: TimeFormats = DEFAULT_TIME_FORMAT): string {\n        const hours: string = this.getNumberWithLeadingZero(tempVal.getHours());\n        const minutes: string = this.getNumberWithLeadingZero(tempVal.getMinutes());\n        const seconds: string = this.getNumberWithLeadingZero(tempVal.getSeconds());\n\n        const formattedTimeGenerators = {\n            [TimeFormats.HHmm]: () => `${hours}:${minutes}`,\n            [TimeFormats.HHmmss]: () => `${hours}:${minutes}:${seconds}`\n        };\n\n        return formattedTimeGenerators[timeFormat]();\n    }\n\n    private getParsedTimeParts(timeString: string): {\n        hoursOnly: any;\n        hoursAndMinutes: any;\n        hoursAndMinutesAndSeconds: any;\n    } {\n        const hoursAndMinutesAndSeconds = timeString.match(HOURS_MINUTES_SECONDS_REGEXP);\n        const hoursAndMinutes = timeString.match(HOURS_MINUTES_REGEXP);\n        const hoursOnly = timeString.match(HOURS_ONLY_REGEXP);\n\n        return {\n            hoursOnly,\n            hoursAndMinutes,\n            hoursAndMinutesAndSeconds\n        };\n    }\n\n    /**\n     * @description Create Date object from separate parts of time\n     */\n    private getDateFromTimeDigits(hours: number, minutes: number, seconds: number = 0): Date | undefined {\n        return this.getDateFromTimeString(`${hours}:${minutes}:${seconds}`);\n    }\n\n    private getDateFromTimeString(timeString: string | undefined): Date | undefined {\n        // TODO Use moment-js\n        if (timeString === undefined) { return; }\n\n        const {\n            hoursOnly,\n            hoursAndMinutes,\n            hoursAndMinutesAndSeconds\n        } = this.getParsedTimeParts(timeString);\n\n        if (timeString.trim().length === 0 ||\n            hoursOnly === null && hoursAndMinutes === null && hoursAndMinutesAndSeconds === null) {\n            return;\n        }\n\n        // tslint:disable no-magic-numbers\n        let hours: number = 0;\n        let minutes: number = 0;\n        let seconds: number = 0;\n\n        if (hoursOnly) {\n            hours = Number(hoursOnly[1]);\n        } else if (hoursAndMinutes) {\n            hours = Number(hoursAndMinutes[1]);\n            minutes = Number(hoursAndMinutes[2]);\n        } else if (hoursAndMinutesAndSeconds) {\n            hours = Number(hoursAndMinutesAndSeconds[1]);\n            minutes = Number(hoursAndMinutesAndSeconds[2]);\n            seconds = Number(hoursAndMinutesAndSeconds[3]);\n        }\n        // const timestamp: number = Date.parse(fullDateString);\n        const resultDate: Date = new Date(1970, 0, 1, hours, minutes, seconds);\n        // tslint:enable no-magic-numbers\n\n        return isNaN(resultDate.getTime()) ? undefined : resultDate;\n    }\n\n    private getNumberWithLeadingZero(digit: number): string {\n        const MAX_DIGIT_WITH_LEADING_ZERO: number = 9;\n\n        return digit > MAX_DIGIT_WITH_LEADING_ZERO ? `${digit}` : `0${digit}`;\n    }\n\n    private getTimeDigitsFromDate(dateVal: Date): { hours: number; minutes: number; seconds: number } {\n        return {\n            hours: dateVal.getHours(),\n            minutes: dateVal.getMinutes(),\n            seconds: dateVal.getSeconds()\n        };\n    }\n\n    private parseValidator(): ValidationErrors | null {\n        return this.currentDateTimeInput === undefined ?\n            { mcTimepickerParse: { text: this.elementRef.nativeElement.value } } :\n            null;\n    }\n\n    private minTimeValidator(): ValidationErrors | null {\n\n        if (this.currentDateTimeInput !== undefined &&\n            this.minDateTime !== undefined &&\n            this.isTimeLowerThenMin(this.currentDateTimeInput)) {\n            return { mcTimepickerLowerThenMintime: { text: this.elementRef.nativeElement.value } };\n        }\n\n        return null;\n    }\n\n    private maxTimeValidator(): ValidationErrors | null {\n        if (this.currentDateTimeInput !== undefined &&\n            this.maxDateTime !== undefined &&\n            this.isTimeGreaterThenMax(this.currentDateTimeInput)) {\n            return { mcTimepickerHigherThenMaxtime: { text: this.elementRef.nativeElement.value } };\n        }\n\n        return null;\n    }\n\n    private isTimeLowerThenMin(timeToCompare: Date): boolean {\n        return timeToCompare.getTime() - (<Date> this.minDateTime).getTime() < 0;\n    }\n\n    private isTimeGreaterThenMax(timeToCompare: Date): boolean {\n        return timeToCompare.getTime() - (<Date> this.maxDateTime).getTime() >= 0;\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\n\nimport { A11yModule } from '@ptsecurity/cdk/a11y';\nimport { PlatformModule } from '@ptsecurity/cdk/platform';\n\nimport { McTimepicker } from './timepicker';\n\n\n@NgModule({\n    imports: [\n        CommonModule,\n        A11yModule,\n        PlatformModule,\n        FormsModule\n    ],\n    declarations: [\n        McTimepicker\n    ],\n    exports: [\n        McTimepicker\n    ]\n})\nexport class McTimepickerModule {}\n","import { InjectionToken } from '@angular/core';\n\n\n/** Injection token that can be used to access the data that was passed in to a sidepanel. */\nexport const MC_SIDEPANEL_DATA = new InjectionToken<any>('McSidepanelData');\n\nexport enum McSidepanelPosition {\n    Right = 'right',\n    Left = 'left',\n    Top = 'top',\n    Bottom = 'bottom'\n}\n\nexport class McSidepanelConfig<D = any> {\n    /** ID for the sidepanel. If omitted, a unique one will be generated. */\n    id?: string;\n\n    /** Data being injected into the child component. */\n    data?: D | null = null;\n\n    position?: McSidepanelPosition = McSidepanelPosition.Right;\n\n    /** Whether the sidepanel has a backdrop. */\n    hasBackdrop?: boolean = true;\n\n    /** When we open multiple sidepanels, backdrop appears only once, except cases then this flag is true. */\n    requiredBackdrop?: boolean = false;\n\n    /** Whether the user can use escape or clicking outside to close the sidepanel. */\n    disableClose?: boolean = false;\n\n    /** Custom class for the overlay pane. */\n    overlayPanelClass?: string | string[] = '';\n}\n","import { animate, AnimationTriggerMetadata, state, style, transition, trigger } from '@angular/animations';\nimport { AnimationCurves } from '@ptsecurity/mosaic/core';\n\nimport { McSidepanelPosition } from './sidepanel-config';\n\n\nexport enum McSidepanelAnimationState {\n    Void = 'void',\n    Visible = 'visible',\n    Hidden = 'hidden'\n}\n\n// TODO Find a way to use dynamic keys and avoid error \"Expression form not supported.\"\n// tslint:disable-next-line\nexport const mcSidepanelTransformAnimation: Record<McSidepanelPosition, { in: string; out: string }> = {\n    right: { in: 'translateX(100%)', out: 'translateX(0%)' },\n    left: { in: 'translateX(-100%)', out: 'translateX(0%)' },\n    top: { in: 'translateY(-100%)', out: 'translateY(0%)' },\n    bottom: { in: 'translateY(100%)', out: 'translateY(0%)' }\n};\n\nexport const mcSidepanelAnimations: {\n    readonly sidepanelState: AnimationTriggerMetadata;\n} = {\n    sidepanelState: trigger('state', [\n        state('hidden',\n            style({ transform: '{{transformIn}}' }),\n            { params: { transformIn: mcSidepanelTransformAnimation[McSidepanelPosition.Right].in }}\n        ),\n        state('visible',\n            style({ transform: '{{transformOut}}' }),\n            { params: { transformOut: mcSidepanelTransformAnimation[McSidepanelPosition.Right].out }}\n        ),\n        transition('visible => void, visible => hidden',\n            animate(`200ms ${AnimationCurves.AccelerationCurve}`)),\n        transition('void => visible',\n            animate(`200ms ${AnimationCurves.DecelerationCurve}`))\n    ])\n};\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { OverlayModule } from '@ptsecurity/cdk/overlay';\nimport { MC_SELECT_SCROLL_STRATEGY_PROVIDER, McOptionModule } from '@ptsecurity/mosaic/core';\nimport { McFormFieldModule } from '@ptsecurity/mosaic/form-field';\nimport { McIconModule } from '@ptsecurity/mosaic/icon';\nimport { McTagModule } from '@ptsecurity/mosaic/tag';\n\nimport { McSelect, McSelectTrigger } from './select.component';\n\n\n@NgModule({\n    imports: [\n        CommonModule,\n        OverlayModule,\n        McOptionModule,\n        McIconModule,\n        McTagModule\n    ],\n    exports: [McFormFieldModule, McSelect, McSelectTrigger, McOptionModule, CommonModule],\n    declarations: [McSelect, McSelectTrigger],\n    providers: [MC_SELECT_SCROLL_STRATEGY_PROVIDER]\n})\nexport class McSelectModule {}\n","import { AnimationEvent } from '@angular/animations';\nimport {\n    Component,\n    ChangeDetectorRef,\n    Input,\n    Inject,\n    Output,\n    EventEmitter,\n    OnDestroy,\n    OnInit,\n    ElementRef,\n    Directive,\n    Optional,\n    ViewEncapsulation,\n    ChangeDetectionStrategy,\n    ComponentFactoryResolver,\n    ViewContainerRef,\n    forwardRef,\n    ViewChild\n} from '@angular/core';\nimport { Directionality, Direction } from '@ptsecurity/cdk/bidi';\nimport { TemplatePortal, CdkPortalOutlet, PortalHostDirective } from '@ptsecurity/cdk/portal';\nimport { Subscription } from 'rxjs';\nimport { startWith } from 'rxjs/operators';\n\nimport { mcTabsAnimations } from './tabs-animations';\n\n\n/**\n * These position states are used internally as animation states for the tab body. Setting the\n * position state to left, right, or center will transition the tab body from its current\n * position to its respective state. If there is not current position (void, in the case of a new\n * tab body), then there will be no transition animation to its state.\n *\n * In the case of a new tab body that should immediately be centered with an animating transition,\n * then left-origin-center or right-origin-center can be used, which will use left or right as its\n * psuedo-prior state.\n */\nexport type McTabBodyPositionState =\n    'left' | 'center' | 'right' | 'left-origin-center' | 'right-origin-center';\n\n/**\n * The origin state is an internally used state that is set on a new tab body indicating if it\n * began to the left or right of the prior selected index. For example, if the selected index was\n * set to 1, and a new tab is created and selected at index 2, then the tab body would have an\n * origin of right because its index was greater than the prior selected index.\n */\nexport type McTabBodyOriginState = 'left' | 'right';\n\n/**\n * Wrapper for the contents of a tab.\n * @docs-private\n */\n@Component({\n    selector: 'mc-tab-body',\n    templateUrl: 'tab-body.html',\n    styleUrls: ['tab-body.css'],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    animations: [mcTabsAnimations.translateTab],\n    host: {\n        class: 'mc-tab-body'\n    }\n})\nexport class McTabBody implements OnInit, OnDestroy {\n\n    /** The shifted index position of the tab body, where zero represents the active center tab. */\n    @Input()\n    set position(position: number) {\n        this.positionIndex = position;\n        this.computePositionAnimationState();\n    }\n\n    /** Tab body position state. Used by the animation trigger for the current state. */\n    bodyPosition: McTabBodyPositionState;\n\n    /** Event emitted when the tab begins to animate towards the center as the active tab. */\n    @Output() readonly onCentering: EventEmitter<number> = new EventEmitter<number>();\n\n    /** Event emitted before the centering of the tab begins. */\n    @Output() readonly beforeCentering: EventEmitter<boolean> = new EventEmitter<boolean>();\n\n    /** Event emitted before the centering of the tab begins. */\n    @Output() readonly afterLeavingCenter: EventEmitter<boolean> = new EventEmitter<boolean>();\n\n    /** Event emitted when the tab completes its animation towards the center. */\n    @Output() readonly onCentered: EventEmitter<void> = new EventEmitter<void>(true);\n\n    /** The portal host inside of this container into which the tab body content will be loaded. */\n    @ViewChild(PortalHostDirective) portalHost: PortalHostDirective;\n\n    /** The tab body content to display. */\n    @Input('content') content: TemplatePortal;\n\n    /** Position that will be used when the tab is immediately becoming visible after creation. */\n    @Input() origin: number;\n\n    // Note that the default value will always be overwritten by `McTabBody`, but we need one\n    // anyway to prevent the animations module from throwing an error if the body is used on its own.\n    /** Duration for the tab's animation. */\n    @Input() animationDuration: string = '0ms';\n\n    /** Current position of the tab-body in the tab-group. Zero means that the tab is visible. */\n    private positionIndex: number;\n\n    /** Subscription to the directionality change observable. */\n    private dirChangeSubscription = Subscription.EMPTY;\n\n    constructor(private elementRef: ElementRef<HTMLElement>,\n                @Optional() private dir: Directionality,\n                changeDetectorRef: ChangeDetectorRef) {\n\n        if (this.dir && changeDetectorRef) {\n            this.dirChangeSubscription = this.dir.change.subscribe((direction: Direction) => {\n                this.computePositionAnimationState(direction);\n                changeDetectorRef.markForCheck();\n            });\n        }\n    }\n\n    /**\n     * After initialized, check if the content is centered and has an origin. If so, set the\n     * special position states that transition the tab from the left or right before centering.\n     */\n    ngOnInit() {\n        if (this.bodyPosition === 'center' && this.origin != null) {\n            this.bodyPosition = this.computePositionFromOrigin();\n        }\n    }\n\n    ngOnDestroy() {\n        this.dirChangeSubscription.unsubscribe();\n    }\n\n    onTranslateTabStarted(e: AnimationEvent): void {\n        const isCentering = this.isCenterPosition(e.toState);\n        this.beforeCentering.emit(isCentering);\n        if (isCentering) {\n            this.onCentering.emit(this.elementRef.nativeElement.clientHeight);\n        }\n    }\n\n    onTranslateTabComplete(e: AnimationEvent): void {\n        // If the transition to the center is complete, emit an event.\n        if (this.isCenterPosition(e.toState) && this.isCenterPosition(this.bodyPosition)) {\n            this.onCentered.emit();\n        }\n\n        if (this.isCenterPosition(e.fromState) && !this.isCenterPosition(this.bodyPosition)) {\n            this.afterLeavingCenter.emit();\n        }\n    }\n\n    /** The text direction of the containing app. */\n    getLayoutDirection(): Direction {\n        return this.dir && this.dir.value === 'rtl' ? 'rtl' : 'ltr';\n    }\n\n    /** Whether the provided position state is considered center, regardless of origin. */\n    isCenterPosition(position: McTabBodyPositionState | string): boolean {\n        return position === 'center' ||\n            position === 'left-origin-center' ||\n            position === 'right-origin-center';\n    }\n\n    /** Computes the position state that will be used for the tab-body animation trigger. */\n    private computePositionAnimationState(dir: Direction = this.getLayoutDirection()) {\n        if (this.positionIndex < 0) {\n            this.bodyPosition = dir === 'ltr' ? 'left' : 'right';\n        } else if (this.positionIndex > 0) {\n            this.bodyPosition = dir === 'ltr' ? 'right' : 'left';\n        } else {\n            this.bodyPosition = 'center';\n        }\n    }\n\n    /**\n     * Computes the position state based on the specified origin position. This is used if the\n     * tab is becoming visible immediately after creation.\n     */\n    private computePositionFromOrigin(): McTabBodyPositionState {\n        const dir = this.getLayoutDirection();\n\n        if ((dir === 'ltr' && this.origin <= 0) || (dir === 'rtl' && this.origin > 0)) {\n            return 'left-origin-center';\n        }\n\n        return 'right-origin-center';\n    }\n}\n\n/**\n * The portal host directive for the contents of the tab.\n * @docs-private\n */\n@Directive({\n    selector: '[mcTabBodyHost]'\n})\nexport class McTabBodyPortal extends CdkPortalOutlet implements OnInit, OnDestroy {\n    /** Subscription to events for when the tab body begins centering. */\n    private centeringSub = Subscription.EMPTY;\n    /** Subscription to events for when the tab body finishes leaving from center position. */\n    private leavingSub = Subscription.EMPTY;\n\n    constructor(\n        componentFactoryResolver: ComponentFactoryResolver,\n        viewContainerRef: ViewContainerRef,\n        @Inject(forwardRef(() => McTabBody)) private host: McTabBody) {\n        super(componentFactoryResolver, viewContainerRef);\n    }\n\n    /** Set initial visibility or set up subscription for changing visibility. */\n    ngOnInit(): void {\n        super.ngOnInit();\n\n        this.centeringSub = this.host.beforeCentering\n            .pipe(startWith(this.host.isCenterPosition(this.host.bodyPosition)))\n            .subscribe((isCentering: boolean) => {\n                if (isCentering && !this.hasAttached()) {\n                    this.attach(this.host.content);\n                }\n            });\n\n        this.leavingSub = this.host.afterLeavingCenter.subscribe(() => {\n            this.detach();\n        });\n    }\n\n    /** Clean up centering subscription. */\n    ngOnDestroy(): void {\n        super.ngOnDestroy();\n        this.centeringSub.unsubscribe();\n        this.leavingSub.unsubscribe();\n    }\n}\n","import { Directive, ElementRef } from '@angular/core';\nimport {\n    CanDisable,\n    CanDisableCtor,\n    mixinDisabled\n} from '@ptsecurity/mosaic/core';\n\n\n// Boilerplate for applying mixins to McTabLabelWrapper.\n/** @docs-private */\nexport class McTabLabelWrapperBase {}\nexport const mcTabLabelWrapperMixinBase: CanDisableCtor &\n    typeof McTabLabelWrapperBase = mixinDisabled(McTabLabelWrapperBase);\n\n/**\n * Used in the `mc-tab-group` view to display tab labels.\n * @docs-private\n */\n@Directive({\n    selector: '[mcTabLabelWrapper]',\n    inputs: ['disabled'],\n    host: {\n        '[class.mc-disabled]': 'disabled',\n        '[attr.aria-disabled]': '!!disabled'\n    }\n})\nexport class McTabLabelWrapper extends mcTabLabelWrapperMixinBase implements CanDisable {\n    constructor(public elementRef: ElementRef) {\n        super();\n    }\n\n    /** Sets focus on the wrapper element */\n    focus(): void {\n        this.elementRef.nativeElement.focus();\n    }\n\n    getOffsetLeft(): number {\n        return this.elementRef.nativeElement.offsetLeft;\n    }\n\n    getOffsetWidth(): number {\n        return this.elementRef.nativeElement.offsetWidth;\n    }\n}\n","import {\n    AfterContentChecked,\n    AfterContentInit,\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    ContentChildren,\n    ElementRef,\n    EventEmitter,\n    Input,\n    NgZone,\n    OnDestroy,\n    Optional,\n    Output,\n    QueryList,\n    ViewChild,\n    ViewEncapsulation\n} from '@angular/core';\nimport { FocusKeyManager } from '@ptsecurity/cdk/a11y';\nimport { Direction, Directionality } from '@ptsecurity/cdk/bidi';\nimport { coerceNumberProperty } from '@ptsecurity/cdk/coercion';\nimport { END, ENTER, HOME, SPACE } from '@ptsecurity/cdk/keycodes';\nimport { ViewportRuler } from '@ptsecurity/cdk/scrolling';\nimport { merge, of as observableOf, Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\n\nimport { McTabLabelWrapper } from './tab-label-wrapper';\n\n\nconst VIEWPORT_THROTTLE_TIME = 150;\nconst SCROLL_DISTANCE_DELIMITER = 3;\n\n\n/**\n * The directions that scrolling can go in when the header's tabs exceed the header width. 'After'\n * will scroll the header towards the end of the tabs list and 'before' will scroll towards the\n * beginning of the list.\n */\nexport type ScrollDirection = 'after' | 'before';\n\n/**\n * The distance in pixels that will be overshot when scrolling a tab label into view. This helps\n * provide a small affordance to the label next to it.\n */\nconst EXAGGERATED_OVERSCROLL = 60;\n\n// Boilerplate for applying mixins to McTabHeader.\n/** @docs-private */\nexport class McTabHeaderBase {}\n\n/**\n * The header of the tab group which displays a list of all the tabs in the tab group.\n * When the tabs list's width exceeds the width of the header container,\n * then arrows will be displayed to allow the user to scroll\n * left and right across the header.\n * @docs-private\n */\n@Component({\n    selector: 'mc-tab-header',\n    templateUrl: 'tab-header.html',\n    styleUrls: ['tab-header.css'],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    host: {\n        class: 'mc-tab-header',\n        '[class.mc-tab-header__pagination-controls_enabled]':\n            'showPaginationControls',\n        '[class.mc-tab-header_rtl]': 'getLayoutDirection() == \\'rtl\\''\n    }\n})\nexport class McTabHeader extends McTabHeaderBase\n    implements AfterContentChecked, AfterContentInit, OnDestroy {\n    /** The index of the active tab. */\n    @Input()\n    get selectedIndex(): number {\n        return this._selectedIndex;\n    }\n    set selectedIndex(value: number) {\n        const coercedValue = coerceNumberProperty(value);\n        this.selectedIndexChanged = this._selectedIndex !== coercedValue;\n        this._selectedIndex = coercedValue;\n\n        if (this.keyManager) {\n            this.keyManager.updateActiveItem(coercedValue);\n        }\n    }\n\n    /** Tracks which element has focus; used for keyboard navigation */\n    get focusIndex(): number {\n        return this.keyManager ? this.keyManager.activeItemIndex! : 0;\n    }\n\n    /** When the focus index is set, we must manually send focus to the correct label */\n    set focusIndex(value: number) {\n        if (\n            !this.isValidIndex(value) ||\n            this.focusIndex === value ||\n            !this.keyManager\n        ) {\n            return;\n        }\n\n        this.keyManager.setActiveItem(value);\n    }\n\n    /** Sets the distance in pixels that the tab header should be transformed in the X-axis. */\n    get scrollDistance(): number {\n        return this._scrollDistance;\n    }\n    set scrollDistance(v: number) {\n        this._scrollDistance = Math.max(\n            0,\n            Math.min(this.getMaxScrollDistance(), v)\n        );\n\n        // Mark that the scroll distance has changed so that after the view is checked, the CSS\n        // transformation can move the header.\n        this.scrollDistanceChanged = true;\n        this.checkScrollingControls();\n    }\n\n    @ContentChildren(McTabLabelWrapper)\n    labelWrappers: QueryList<McTabLabelWrapper>;\n    @ViewChild('tabListContainer')\n    tabListContainer: ElementRef;\n    @ViewChild('tabList')\n    tabList: ElementRef;\n\n    /** Whether the controls for pagination should be displayed */\n    showPaginationControls = false;\n\n    /** Whether the tab list can be scrolled more towards the end of the tab label list. */\n    disableScrollAfter = true;\n\n    /** Whether the tab list can be scrolled more towards the beginning of the tab label list. */\n    disableScrollBefore = true;\n\n    /** Event emitted when the option is selected. */\n    @Output()\n    readonly selectFocusedIndex: EventEmitter<number> = new EventEmitter<number>();\n\n    /** Event emitted when a label is focused. */\n    @Output()\n    readonly indexFocused: EventEmitter<number> = new EventEmitter<number>();\n\n    /** The distance in pixels that the tab labels should be translated to the left. */\n    private _scrollDistance = 0;\n\n    /** Whether the header should scroll to the selected index after the view has been checked. */\n    private selectedIndexChanged = false;\n\n    /** Emits when the component is destroyed. */\n    private readonly destroyed = new Subject<void>();\n\n    /**\n     * The number of tab labels that are displayed on the header. When this changes, the header\n     * should re-evaluate the scroll position.\n     */\n    private tabLabelCount: number;\n\n    /** Whether the scroll distance has changed and should be applied after the view is checked. */\n    private scrollDistanceChanged: boolean;\n\n    /** Used to manage focus between the tabs. */\n    private keyManager: FocusKeyManager<McTabLabelWrapper>;\n\n    /** Cached text content of the header. */\n    private currentTextContent: string;\n\n    private _selectedIndex: number = 0;\n\n    constructor(\n        private elementRef: ElementRef,\n        private changeDetectorRef: ChangeDetectorRef,\n        private viewportRuler: ViewportRuler,\n        @Optional() private dir: Directionality,\n        private ngZone: NgZone\n    ) {\n        super();\n    }\n\n    ngAfterContentChecked(): void {\n        // If the number of tab labels have changed, check if scrolling should be enabled\n        if (this.tabLabelCount !== this.labelWrappers.length) {\n            this.updatePagination();\n            this.tabLabelCount = this.labelWrappers.length;\n            this.changeDetectorRef.markForCheck();\n        }\n\n        // If the selected index has changed, scroll to the label and check if the scrolling controls\n        // should be disabled.\n        if (this.selectedIndexChanged) {\n            this.scrollToLabel(this._selectedIndex);\n            this.checkScrollingControls();\n            this.selectedIndexChanged = false;\n            this.changeDetectorRef.markForCheck();\n        }\n\n        // If the scroll distance has been changed (tab selected, focused, scroll controls activated),\n        // then translate the header to reflect this.\n        if (this.scrollDistanceChanged) {\n            this.updateTabScrollPosition();\n            this.scrollDistanceChanged = false;\n            this.changeDetectorRef.markForCheck();\n        }\n    }\n\n    handleKeydown(event: KeyboardEvent) {\n        switch (event.keyCode) {\n            case HOME:\n                this.keyManager.setFirstItemActive();\n                event.preventDefault();\n                break;\n            case END:\n                this.keyManager.setLastItemActive();\n                event.preventDefault();\n                break;\n            case ENTER:\n            case SPACE:\n                this.selectFocusedIndex.emit(this.focusIndex);\n                event.preventDefault();\n                break;\n            default:\n                this.keyManager.onKeydown(event);\n        }\n    }\n\n    ngAfterContentInit() {\n        const dirChange = this.dir ? this.dir.change : observableOf(null);\n        const resize = this.viewportRuler.change(VIEWPORT_THROTTLE_TIME);\n        const realign = () => {\n            this.updatePagination();\n        };\n\n        this.keyManager = new FocusKeyManager(this.labelWrappers)\n            .withHorizontalOrientation(this.getLayoutDirection())\n            .withWrap();\n\n        this.keyManager.updateActiveItem(0);\n\n        // Defer the first call in order to allow for slower browsers to lay out the elements.\n        // This helps in cases where the user lands directly on a page with paginated tabs.\n        typeof requestAnimationFrame === undefined\n            ? realign()\n            : requestAnimationFrame(realign);\n\n        // On dir change or window resize, update the orientation of\n        // the key manager if the direction has changed.\n        merge(dirChange, resize)\n            .pipe(takeUntil(this.destroyed))\n            .subscribe(() => {\n                realign();\n                this.keyManager.withHorizontalOrientation(\n                    this.getLayoutDirection()\n                );\n            });\n\n        // If there is a change in the focus key manager we need to emit the `indexFocused`\n        // event in order to provide a public event that notifies about focus changes. Also we realign\n        // the tabs container by scrolling the new focused tab into the visible section.\n        this.keyManager.change\n            .pipe(takeUntil(this.destroyed))\n            .subscribe((newFocusIndex) => {\n                this.indexFocused.emit(newFocusIndex);\n                this.setTabFocus(newFocusIndex);\n            });\n    }\n\n    ngOnDestroy() {\n        this.destroyed.next();\n        this.destroyed.complete();\n    }\n\n    /**\n     * Callback for when the MutationObserver detects that the content has changed.\n     */\n    onContentChanges() {\n        const textContent = this.elementRef.nativeElement.textContent;\n\n        // We need to diff the text content of the header, because the MutationObserver callback\n        // will fire even if the text content didn't change which is inefficient and is prone\n        // to infinite loops if a poorly constructed expression is passed in.\n\n        if (textContent !== this.currentTextContent) {\n            this.currentTextContent = textContent;\n\n            const zoneCallback = () => {\n                this.updatePagination();\n                this.changeDetectorRef.markForCheck();\n            };\n\n            // The content observer runs outside the `NgZone` by default, which\n            // means that we need to bring the callback back in ourselves.\n            // TODO: Remove null check for `_ngZone` once it's a required parameter.\n            this.ngZone ? this.ngZone.run(zoneCallback) : zoneCallback();\n        }\n    }\n\n    /**\n     * Updating the view whether pagination should be enabled or not\n     *\n     * WARNING: Calling this method can be very costly in terms of performance.  It should be called\n     * as infrequently as possible from outside of the Tabs component as it causes a reflow of the\n     * page.\n     */\n    updatePagination() {\n        this.checkPaginationEnabled();\n        this.checkScrollingControls();\n        this.updateTabScrollPosition();\n    }\n\n    /**\n     * Determines if an index is valid.  If the tabs are not ready yet, we assume that the user is\n     * providing a valid index and return true.\n     */\n    isValidIndex(index: number): boolean {\n        if (!this.labelWrappers) {\n            return true;\n        }\n\n        const tab = this.labelWrappers\n            ? this.labelWrappers.toArray()[index]\n            : null;\n\n        return !!tab && !tab.disabled;\n    }\n\n    /**\n     * Sets focus on the HTML element for the label wrapper and scrolls it into the view if\n     * scrolling is enabled.\n     */\n    setTabFocus(tabIndex: number) {\n        if (this.showPaginationControls) {\n            this.scrollToLabel(tabIndex);\n        }\n\n        if (this.labelWrappers && this.labelWrappers.length) {\n            this.labelWrappers.toArray()[tabIndex].focus();\n\n            // Do not let the browser manage scrolling to focus the element, this will be handled\n            // by using translation. In LTR, the scroll left should be 0. In RTL, the scroll width\n            // should be the full width minus the offset width.\n            const containerEl = this.tabListContainer.nativeElement;\n            const dir = this.getLayoutDirection();\n\n            if (dir === 'ltr') {\n                containerEl.scrollLeft = 0;\n            } else {\n                containerEl.scrollLeft =\n                    containerEl.scrollWidth - containerEl.offsetWidth;\n            }\n        }\n    }\n\n    /** The layout direction of the containing app. */\n    getLayoutDirection(): Direction {\n        return this.dir && this.dir.value === 'rtl' ? 'rtl' : 'ltr';\n    }\n\n    /** Performs the CSS transformation on the tab list that will cause the list to scroll. */\n    updateTabScrollPosition() {\n        const scrollDistance = this.scrollDistance;\n        const translateX =\n            this.getLayoutDirection() === 'ltr'\n                ? -scrollDistance\n                : scrollDistance;\n\n        // Don't use `translate3d` here because we don't want to create a new layer. A new layer\n        // seems to cause flickering and overflow in Internet Explorer.\n        // See: https://github.com/angular/material2/issues/10276\n        // We round the `transform` here, because transforms with sub-pixel precision cause some\n        // browsers to blur the content of the element.\n        this.tabList.nativeElement.style.transform = `translateX(${Math.round(translateX)}px)`;\n\n        // Setting the `transform` on IE will change the scroll offset of the parent, causing the\n        // position to be thrown off in some cases. We have to reset it ourselves to ensure that\n        // it doesn't get thrown off.\n        this.tabList.nativeElement.scrollLeft = 0;\n    }\n\n    /**\n     * Moves the tab list in the 'before' or 'after' direction (towards the beginning of the list or\n     * the end of the list, respectively). The distance to scroll is computed to be a third of the\n     * length of the tab list view window.\n     *\n     * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n     * should be called sparingly.\n     */\n    scrollHeader(scrollDir: ScrollDirection) {\n        const viewLength = this.tabListContainer.nativeElement.offsetWidth;\n\n        // Move the scroll distance one-third the length of the tab list's viewport.\n        this.scrollDistance +=\n            ((scrollDir === 'before' ? -1 : 1) * viewLength) / SCROLL_DISTANCE_DELIMITER;\n    }\n\n    /**\n     * Moves the tab list such that the desired tab label (marked by index) is moved into view.\n     *\n     * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n     * should be called sparingly.\n     */\n    scrollToLabel(labelIndex: number) {\n        const selectedLabel = this.labelWrappers\n            ? this.labelWrappers.toArray()[labelIndex]\n            : null;\n\n        if (!selectedLabel) {\n            return;\n        }\n\n        // The view length is the visible width of the tab labels.\n        const viewLength = this.tabListContainer.nativeElement.offsetWidth;\n\n        let labelBeforePos: number;\n        let labelAfterPos: number;\n\n        if (this.getLayoutDirection() === 'ltr') {\n            labelBeforePos = selectedLabel.getOffsetLeft();\n            labelAfterPos = labelBeforePos + selectedLabel.getOffsetWidth();\n        } else {\n            labelAfterPos =\n                this.tabList.nativeElement.offsetWidth -\n                selectedLabel.getOffsetLeft();\n            labelBeforePos = labelAfterPos - selectedLabel.getOffsetWidth();\n        }\n\n        const beforeVisiblePos = this.scrollDistance;\n        const afterVisiblePos = this.scrollDistance + viewLength;\n\n        if (labelBeforePos < beforeVisiblePos) {\n            // Scroll header to move label to the before direction\n            this.scrollDistance -=\n                beforeVisiblePos - labelBeforePos + EXAGGERATED_OVERSCROLL;\n        } else if (labelAfterPos > afterVisiblePos) {\n            // Scroll header to move label to the after direction\n            this.scrollDistance +=\n                labelAfterPos - afterVisiblePos + EXAGGERATED_OVERSCROLL;\n        }\n    }\n\n    /**\n     * Evaluate whether the pagination controls should be displayed. If the scroll width of the\n     * tab list is wider than the size of the header container, then the pagination controls should\n     * be shown.\n     *\n     * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n     * should be called sparingly.\n     */\n    checkPaginationEnabled() {\n        const isEnabled =\n            this.tabList.nativeElement.scrollWidth >\n            this.elementRef.nativeElement.offsetWidth;\n\n        if (!isEnabled) {\n            this.scrollDistance = 0;\n        }\n\n        if (isEnabled !== this.showPaginationControls) {\n            this.changeDetectorRef.markForCheck();\n        }\n\n        this.showPaginationControls = isEnabled;\n    }\n\n    /**\n     * Evaluate whether the before and after controls should be enabled or disabled.\n     * If the header is at the beginning of the list (scroll distance is equal to 0) then disable the\n     * before button. If the header is at the end of the list (scroll distance is equal to the\n     * maximum distance we can scroll), then disable the after button.\n     *\n     * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n     * should be called sparingly.\n     */\n    checkScrollingControls() {\n        // Check if the pagination arrows should be activated.\n        this.disableScrollBefore = this.scrollDistance === 0;\n        this.disableScrollAfter =\n            this.scrollDistance === this.getMaxScrollDistance();\n        this.changeDetectorRef.markForCheck();\n    }\n\n    /**\n     * Determines what is the maximum length in pixels that can be set for the scroll distance. This\n     * is equal to the difference in width between the tab list container and tab header container.\n     *\n     * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n     * should be called sparingly.\n     */\n    getMaxScrollDistance(): number {\n        const lengthOfTabList = this.tabList.nativeElement.scrollWidth;\n        const viewLength = this.tabListContainer.nativeElement.offsetWidth;\n\n        return lengthOfTabList - viewLength || 0;\n    }\n}\n","import {\n    AfterContentChecked,\n    AfterContentInit,\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    ContentChildren,\n    ElementRef,\n    EventEmitter,\n    Input,\n    OnDestroy,\n    Output,\n    QueryList,\n    ViewChild,\n    ViewEncapsulation,\n    InjectionToken,\n    Inject,\n    Optional,\n    Directive, Attribute\n} from '@angular/core';\nimport { coerceBooleanProperty, coerceNumberProperty } from '@ptsecurity/cdk/coercion';\nimport {\n    CanColor,\n    CanColorCtor,\n    mixinColor,\n    mixinDisabled\n} from '@ptsecurity/mosaic/core';\nimport { merge, Subscription } from 'rxjs';\n\nimport { McTab } from './tab';\nimport { McTabHeader } from './tab-header';\n\n\n@Directive({\n    selector: 'mc-tab-group[mc-light-tabs], [mc-tab-nav-bar][mc-light-tabs]',\n    host: { class: 'mc-tab-group_light' }\n})\nexport class McLightTabsCssStyler { }\n\n@Directive({\n    selector: 'mc-tab-group[mc-align-tabs-center], [mc-tab-nav-bar][mc-align-tabs-center]',\n    host: { class: 'mc-tab-group_align-labels-center' }\n})\nexport class McAlignTabsCenterCssStyler { }\n\n@Directive({\n    selector: 'mc-tab-group[mc-align-tabs-end], [mc-tab-nav-bar][mc-align-tabs-end]',\n    host: { class: 'mc-tab-group_align-labels-end' }\n})\nexport class McAlignTabsEndCssStyler { }\n\n@Directive({\n    selector: 'mc-tab-group[mc-stretch-tabs], [mc-tab-nav-bar][mc-stretch-tabs]',\n    host: { class: 'mc-tab-group_stretch-labels' }\n})\nexport class McStretchTabsCssStyler { }\n\n/** Used to generate unique ID's for each tab component */\nlet nextId = 0;\n\n/** A simple change event emitted on focus or selection changes. */\nexport class McTabChangeEvent {\n    /** Index of the currently-selected tab. */\n    index: number;\n    /** Reference to the currently-selected tab. */\n    tab: McTab;\n}\n\n/** Possible positions for the tab header. */\nexport type McTabHeaderPosition = 'above' | 'below';\n\n/** Object that can be used to configure the default options for the tabs module. */\nexport interface IMcTabsConfig {\n    /** Duration for the tab animation. Must be a valid CSS value (e.g. 600ms). */\n    animationDuration?: string;\n}\n\n/** Injection token that can be used to provide the default options the tabs module. */\nexport const MC_TABS_CONFIG = new InjectionToken('MC_TABS_CONFIG');\n\n// Boilerplate for applying mixins to McTabGroup.\n/** @docs-private */\nexport class McTabGroupBase {\n    // tslint:disable-next-line:naming-convention\n    constructor(public _elementRef: ElementRef) { }\n}\nexport const mcTabGroupMixinBase:\n    CanColorCtor &\n    typeof McTabGroupBase =\n    mixinColor(mixinDisabled(McTabGroupBase));\n\n/**\n * Tab-group component.  Supports basic tab pairs (label + content) and includes\n * keyboard navigation.\n */\n@Component({\n    selector: 'mc-tab-group',\n    exportAs: 'mcTabGroup',\n    templateUrl: 'tab-group.html',\n    styleUrls: ['tab-group.css'],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    inputs: ['color'],\n    host: {\n        class: 'mc-tab-group',\n        '[class.mc-tab-group_dynamic-height]': 'dynamicHeight',\n        '[class.mc-tab-group_inverted-header]': 'headerPosition === \"below\"'\n    }\n})\nexport class McTabGroup extends mcTabGroupMixinBase implements AfterContentInit,\n    AfterContentChecked, OnDestroy, CanColor {\n    lightTab: boolean;\n\n    /** Whether the tab group should grow to the size of the active tab. */\n    @Input()\n    get dynamicHeight(): boolean { return this._dynamicHeight; }\n    set dynamicHeight(value: boolean) { this._dynamicHeight = coerceBooleanProperty(value); }\n\n    /** The index of the active tab. */\n    @Input()\n    get selectedIndex(): number | null { return this._selectedIndex; }\n    set selectedIndex(value: number | null) {\n        this.indexToSelect = coerceNumberProperty(value, null);\n    }\n\n    @ContentChildren(McTab) tabs: QueryList<McTab>;\n\n    @ViewChild('tabBodyWrapper') tabBodyWrapper: ElementRef;\n\n    @ViewChild('tabHeader') tabHeader: McTabHeader;\n\n    /** Position of the tab header. */\n    @Input() headerPosition: McTabHeaderPosition = 'above';\n\n    /** Duration for the tab animation. Must be a valid CSS value (e.g. 600ms). */\n    @Input() animationDuration: string;\n\n    /** Output to enable support for two-way binding on `[(selectedIndex)]` */\n    @Output() readonly selectedIndexChange: EventEmitter<number> = new EventEmitter<number>();\n\n    /** Event emitted when focus has changed within a tab group. */\n    @Output() readonly focusChange: EventEmitter<McTabChangeEvent> =\n        new EventEmitter<McTabChangeEvent>();\n\n    /** Event emitted when the body animation has completed */\n    @Output() readonly animationDone: EventEmitter<void> = new EventEmitter<void>();\n\n    /** Event emitted when the tab selection has changed. */\n    @Output() readonly selectedTabChange: EventEmitter<McTabChangeEvent> =\n        new EventEmitter<McTabChangeEvent>(true);\n\n    /** The tab index that should be selected after the content has been checked. */\n    private indexToSelect: number | null = 0;\n\n    /** Snapshot of the height of the tab body wrapper before another tab is activated. */\n    private tabBodyWrapperHeight: number = 0;\n\n    /** Subscription to tabs being added/removed. */\n    private tabsSubscription = Subscription.EMPTY;\n\n    /** Subscription to changes in the tab labels. */\n    private tabLabelSubscription = Subscription.EMPTY;\n    private _dynamicHeight: boolean = false;\n    private _selectedIndex: number | null = null;\n\n    private groupId: number;\n\n    constructor(\n        elementRef: ElementRef,\n        private changeDetectorRef: ChangeDetectorRef,\n        @Attribute('mc-light-tabs') lightTabs: string,\n        @Inject(MC_TABS_CONFIG) @Optional() defaultConfig?: IMcTabsConfig\n    ) {\n        super(elementRef);\n\n        this.lightTab = coerceBooleanProperty(lightTabs);\n\n        this.groupId = nextId++;\n        this.animationDuration = defaultConfig && defaultConfig.animationDuration ?\n            defaultConfig.animationDuration : '0ms';\n    }\n\n    /**\n     * After the content is checked, this component knows what tabs have been defined\n     * and what the selected index should be. This is where we can know exactly what position\n     * each tab should be in according to the new selected index, and additionally we know how\n     * a new selected tab should transition in (from the left or right).\n     */\n    ngAfterContentChecked() {\n        // Don't clamp the `indexToSelect` immediately in the setter because it can happen that\n        // the amount of tabs changes before the actual change detection runs.\n        const indexToSelect = this.indexToSelect = this.clampTabIndex(this.indexToSelect);\n\n        // If there is a change in selected index, emit a change event. Should not trigger if\n        // the selected index has not yet been initialized.\n        if (this._selectedIndex !== indexToSelect) {\n            const isFirstRun = this._selectedIndex == null;\n\n            if (!isFirstRun) {\n                this.selectedTabChange.emit(this.createChangeEvent(indexToSelect));\n            }\n\n            // Changing these values after change detection has run\n            // since the checked content may contain references to them.\n            Promise.resolve().then(() => {\n                this.tabs.forEach((tab, index) => tab.isActive = index === indexToSelect);\n\n                if (!isFirstRun) {\n                    this.selectedIndexChange.emit(indexToSelect);\n                }\n            });\n        }\n\n        // Setup the position for each tab and optionally setup an origin on the next selected tab.\n        this.tabs.forEach((tab: McTab, index: number) => {\n            tab.position = index - indexToSelect;\n\n            // If there is already a selected tab, then set up an origin for the next selected tab\n            // if it doesn't have one already.\n            if (this._selectedIndex != null && tab.position === 0 && !tab.origin) {\n                tab.origin = indexToSelect - this._selectedIndex;\n            }\n        });\n\n        if (this._selectedIndex !== indexToSelect) {\n            this._selectedIndex = indexToSelect;\n            this.changeDetectorRef.markForCheck();\n        }\n    }\n\n    ngAfterContentInit() {\n        this.subscribeToTabLabels();\n\n        // Subscribe to changes in the amount of tabs, in order to be\n        // able to re-render the content as new tabs are added or removed.\n        this.tabsSubscription = this.tabs.changes.subscribe(() => {\n            const indexToSelect = this.clampTabIndex(this.indexToSelect);\n\n            // Maintain the previously-selected tab if a new tab is added or removed and there is no\n            // explicit change that selects a different tab.\n            if (indexToSelect === this._selectedIndex) {\n                const tabs = this.tabs.toArray();\n\n                for (let i = 0; i < tabs.length; i++) {\n                    if (tabs[i].isActive) {\n                        // Assign both to the `_indexToSelect` and `_selectedIndex` so we don't fire a changed\n                        // event, otherwise the consumer may end up in an infinite loop in some edge cases like\n                        // adding a tab within the `selectedIndexChange` event.\n                        this.indexToSelect = this._selectedIndex = i;\n                        break;\n                    }\n                }\n            }\n\n            this.subscribeToTabLabels();\n            this.changeDetectorRef.markForCheck();\n        });\n    }\n\n    ngOnDestroy() {\n        this.tabsSubscription.unsubscribe();\n        this.tabLabelSubscription.unsubscribe();\n    }\n\n    focusChanged(index: number) {\n        this.focusChange.emit(this.createChangeEvent(index));\n    }\n\n    /** Returns a unique id for each tab label element */\n    getTabLabelId(i: number): string {\n        return `mc-tab-label-${this.groupId}-${i}`;\n    }\n\n    /** Returns a unique id for each tab content element */\n    getTabContentId(i: number): string {\n        return `mc-tab-content-${this.groupId}-${i}`;\n    }\n\n    /**\n     * Sets the height of the body wrapper to the height of the activating tab if dynamic\n     * height property is true.\n     */\n    setTabBodyWrapperHeight(tabHeight: number): void {\n        if (!this._dynamicHeight || !this.tabBodyWrapperHeight) { return; }\n\n        const wrapper: HTMLElement = this.tabBodyWrapper.nativeElement;\n\n        wrapper.style.height = `${this.tabBodyWrapperHeight}px`;\n\n        // This conditional forces the browser to paint the height so that\n        // the animation to the new height can have an origin.\n        if (this.tabBodyWrapper.nativeElement.offsetHeight) {\n            wrapper.style.height = `${tabHeight}px`;\n        }\n    }\n\n    /** Removes the height of the tab body wrapper. */\n    removeTabBodyWrapperHeight(): void {\n        this.tabBodyWrapperHeight = this.tabBodyWrapper.nativeElement.clientHeight;\n        this.tabBodyWrapper.nativeElement.style.height = '';\n        this.animationDone.emit();\n    }\n\n    /** Handle click events, setting new selected index if appropriate. */\n    handleClick(tab: McTab, tabHeader: McTabHeader, index: number) {\n        if (!tab.disabled) {\n            this.selectedIndex = tabHeader.focusIndex = index;\n        }\n    }\n\n    /** Retrieves the tabindex for the tab. */\n    getTabIndex(tab: McTab, index: number): number | null {\n        if (tab.disabled) {\n            return null;\n        }\n\n        return this.selectedIndex === index ? 0 : -1;\n    }\n\n    private createChangeEvent(index: number): McTabChangeEvent {\n        const event = new McTabChangeEvent();\n        event.index = index;\n        if (this.tabs && this.tabs.length) {\n            event.tab = this.tabs.toArray()[index];\n        }\n\n        return event;\n    }\n\n    /**\n     * Subscribes to changes in the tab labels. This is needed, because the @Input for the label is\n     * on the McTab component, whereas the data binding is inside the McTabGroup. In order for the\n     * binding to be updated, we need to subscribe to changes in it and trigger change detection\n     * manually.\n     */\n    private subscribeToTabLabels() {\n        if (this.tabLabelSubscription) {\n            this.tabLabelSubscription.unsubscribe();\n        }\n\n        this.tabLabelSubscription = merge(...this.tabs.map((tab) => tab.stateChanges))\n            .subscribe(() => this.changeDetectorRef.markForCheck());\n    }\n\n    /** Clamps the given index to the bounds of 0 and the tabs length. */\n    private clampTabIndex(index: number | null): number {\n        // Note the `|| 0`, which ensures that values like NaN can't get through\n        // and which would otherwise throw the component into an infinite loop\n        // (since Mch.max(NaN, 0) === NaN).\n        return Math.min(this.tabs.length - 1, Math.max(index || 0, 0));\n    }\n}\n","import {\n    Attribute,\n    ChangeDetectionStrategy,\n    Component,\n    Directive,\n    ElementRef,\n    Input,\n    OnDestroy,\n    ViewEncapsulation\n} from '@angular/core';\nimport { FocusMonitor } from '@ptsecurity/cdk/a11y';\nimport {\n    CanColor,\n    CanColorCtor,\n    CanDisable,\n    CanDisableCtor,\n    HasTabIndex,\n    HasTabIndexCtor,\n    mixinColor,\n    mixinDisabled,\n    mixinTabIndex\n} from '@ptsecurity/mosaic/core';\n\n\n// Boilerplate for applying mixins to McTabNav.\n/** @docs-private */\nexport class McTabNavBase {\n    // tslint:disable-next-line:naming-convention\n    constructor(public _elementRef: ElementRef) {}\n}\nexport const mcTabNavMixinBase: CanColorCtor &\n    typeof McTabNavBase = mixinColor(McTabNavBase);\n\n/**\n * Navigation component matching the styles of the tab group header.\n */\n@Component({\n    selector: '[mc-tab-nav-bar]',\n    exportAs: 'mcTabNavBar, mcTabNav',\n    inputs: ['color'],\n    templateUrl: 'tab-nav-bar.html',\n    styleUrls: ['tab-nav-bar.css'],\n    host: { class: 'mc-tab-nav-bar' },\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class McTabNav extends mcTabNavMixinBase\n    implements CanColor {\n        constructor(elementRef: ElementRef) {\n            super(elementRef);\n        }\n     }\n\n// Boilerplate for applying mixins to McTabLink.\nexport class McTabLinkBase {}\nexport const mcTabLinkMixinBase: HasTabIndexCtor & CanDisableCtor &\n    typeof McTabLinkBase = mixinTabIndex(mixinDisabled(McTabLinkBase));\n\n/**\n * Link inside of a `mc-tab-nav-bar`.\n */\n@Directive({\n    selector: '[mc-tab-link], [mcTabLink]',\n    exportAs: 'mcTabLink',\n    inputs: ['disabled', 'tabIndex'],\n    host: {\n        class: 'mc-tab-link',\n        '[attr.aria-current]': 'active',\n        '[attr.aria-disabled]': 'disabled.toString()',\n        '[attr.tabIndex]': 'tabIndex',\n        '[class.mc-disabled]': 'disabled',\n        '[class.mc-active]': 'active'\n    }\n})\nexport class McTabLink extends mcTabLinkMixinBase\n    implements OnDestroy, CanDisable, HasTabIndex {\n    /** Whether the link is active. */\n    @Input()\n    get active(): boolean {\n        return this.isActive;\n    }\n    set active(value: boolean) {\n        if (value !== this.isActive) {\n            this.isActive = value;\n        }\n    }\n\n    /** Whether the tab link is active or not. */\n    protected isActive: boolean = false;\n\n    constructor(\n        public elementRef: ElementRef,\n        @Attribute('tabindex') tabIndex: string,\n        private focusMonitor: FocusMonitor\n    ) {\n        super();\n\n        this.tabIndex = parseInt(tabIndex) || 0;\n        this.focusMonitor.monitor(this.elementRef.nativeElement);\n    }\n\n    ngOnDestroy() {\n        this.focusMonitor.stopMonitoring(this.elementRef.nativeElement);\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { A11yModule } from '@ptsecurity/cdk/a11y';\nimport { PortalModule } from '@ptsecurity/cdk/portal';\nimport { McCommonModule } from '@ptsecurity/mosaic/core';\n\nimport { McTab } from './tab';\nimport { McTabBody, McTabBodyPortal } from './tab-body';\nimport { McTabContent } from './tab-content';\nimport {\n    McTabGroup,\n    McLightTabsCssStyler,\n    McAlignTabsCenterCssStyler,\n    McAlignTabsEndCssStyler,\n    McStretchTabsCssStyler\n} from './tab-group';\nimport { McTabHeader } from './tab-header';\nimport { McTabLabel } from './tab-label';\nimport { McTabLabelWrapper } from './tab-label-wrapper';\nimport { McTabLink, McTabNav } from './tab-nav-bar/tab-nav-bar';\n\n\n@NgModule({\n    imports: [\n        CommonModule,\n        McCommonModule,\n        PortalModule,\n        A11yModule\n    ],\n    // Don't export all components because some are only to be used internally.\n    exports: [\n        McCommonModule,\n        McTabGroup,\n        McTabLabel,\n        McTab,\n        McTabNav,\n        McTabLink,\n        McTabContent,\n        McLightTabsCssStyler,\n        McAlignTabsCenterCssStyler,\n        McAlignTabsEndCssStyler,\n        McStretchTabsCssStyler\n    ],\n    declarations: [\n        McTabGroup,\n        McTabLabel,\n        McTab,\n        McTabLabelWrapper,\n        McTabNav,\n        McTabLink,\n        McTabBody,\n        McTabBodyPortal,\n        McTabHeader,\n        McTabContent,\n        McLightTabsCssStyler,\n        McAlignTabsCenterCssStyler,\n        McAlignTabsEndCssStyler,\n        McStretchTabsCssStyler\n    ]\n})\nexport class McTabsModule {}\n","import {\n    ElementRef,\n    QueryList,\n    ContentChildren,\n    Component,\n    ChangeDetectionStrategy,\n    ViewEncapsulation\n} from '@angular/core';\n\nimport {\n    mixinColor,\n    CanColor,\n    CanColorCtor,\n    CanDisable,\n    CanDisableCtor,\n    mixinDisabled\n} from '@ptsecurity/mosaic/core';\nimport { McIcon } from '@ptsecurity/mosaic/icon';\n\n\nexport class McTagBase {\n    constructor(public _elementRef: ElementRef) {}\n}\n\nexport const _McTagMixinBase: CanColorCtor & CanDisableCtor & typeof McTagBase = mixinColor(mixinDisabled(McTagBase));\n\n\n@Component({\n    selector: 'mc-tag',\n    templateUrl: 'tag.partial.html',\n    styleUrls: ['./tag.css'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n    host: {\n        class: 'mc-tag',\n        '[class.mc-disabled]': 'disabled'\n    },\n    inputs: ['color', 'disabled']\n})\nexport class McTag extends _McTagMixinBase implements CanColor, CanDisable {\n    @ContentChildren(McIcon) contentChildren: QueryList<McIcon>;\n\n    nativeElement: HTMLElement;\n\n    private _disabled: boolean = false;\n\n    get disabled() {\n        return this._disabled;\n    }\n\n    set disabled(value: any) {\n        if (value !== this.disabled) { this._disabled = value; }\n    }\n\n    constructor(elementRef: ElementRef) {\n        super(elementRef);\n\n        this.nativeElement = elementRef.nativeElement;\n    }\n\n    ngAfterContentInit() {\n        this._addClassModificatorForIcons();\n    }\n\n    _addClassModificatorForIcons() {\n        const icons = this.contentChildren.map((item) => item._elementRef.nativeElement);\n\n        if (icons.length === 1) {\n            const iconElement = icons[0];\n\n            if (!iconElement.previousElementSibling && !iconElement.nextElementSibling) {\n                if (iconElement.nextSibling) {\n                    iconElement.classList.add('mc-icon_left');\n                    this.nativeElement.classList.add('mc-left-icon');\n                }\n\n                if (iconElement.previousSibling) {\n                    iconElement.classList.add('mc-icon_right');\n                    this.nativeElement.classList.add('mc-right-icon');\n                }\n            }\n        } else if (icons.length > 1) {\n            const firstIconElement = icons[0];\n            const secondIconElement = icons[1];\n\n            firstIconElement.classList.add('mc-icon_left');\n            secondIconElement.classList.add('mc-icon_right');\n        }\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { PlatformModule } from '@ptsecurity/cdk/platform';\n\nimport { McTag } from './tag.component';\n\n\n@NgModule({\n    imports: [\n        CommonModule,\n        PlatformModule\n    ],\n    exports: [\n        McTag\n    ],\n    declarations: [\n        McTag\n    ]\n})\nexport class McTagModule {}\n","import { fromEvent, Observable, Subscription } from 'rxjs';\nimport { debounceTime } from 'rxjs/operators';\n\nimport {\n    AfterViewInit,\n    Component, Directive,\n    ElementRef,\n    HostBinding,\n    Input,\n    OnDestroy,\n    OnInit,\n    ViewEncapsulation,\n    ContentChild,\n    TemplateRef,\n    ChangeDetectorRef,\n    ChangeDetectionStrategy,\n    ViewChild\n} from '@angular/core';\nimport { FocusMonitor, FocusOrigin } from '@ptsecurity/cdk/a11y';\nimport { SPACE } from '@ptsecurity/cdk/keycodes';\nimport { Platform } from '@ptsecurity/cdk/platform';\nimport { CanDisable, CanDisableCtor, mixinDisabled } from '@ptsecurity/mosaic/core';\n\n\nconst COLLAPSED_CLASS: string = 'mc-navbar-collapsed-title';\nconst MC_ICON = 'mc-icon';\nconst MC_NAVBAR = 'mc-navbar';\nconst MC_NAVBAR_CONTAINER = 'mc-navbar-container';\nconst MC_NAVBAR_ITEM = 'mc-navbar-item';\nconst MC_NAVBAR_BRAND = 'mc-navbar-brand';\nconst MC_NAVBAR_TITLE = 'mc-navbar-title';\nconst MC_NAVBAR_LOGO = 'mc-navbar-logo';\n\nexport type McNavbarContainerPositionType = 'left' | 'right';\n\nexport interface IMcNavbarDropdownItem {\n    link?: string;\n    text: string;\n}\n\n@Directive({\n    selector: MC_NAVBAR_LOGO,\n    host: {\n        class: MC_NAVBAR_LOGO\n    }\n})\nexport class McNavbarLogo {}\n\n@Directive({\n    selector: MC_NAVBAR_BRAND,\n    host: {\n        class: MC_NAVBAR_BRAND\n    }\n})\nexport class McNavbarBrand {}\n\n@Directive({\n    selector: MC_NAVBAR_TITLE,\n    host: {\n        class: MC_NAVBAR_TITLE\n    }\n})\nexport class McNavbarTitle {}\n\nexport class McNavbarItemBase {\n    constructor(public _elementRef: ElementRef) {}\n}\n\nexport const _McNavbarMixinBase: CanDisableCtor & typeof McNavbarItemBase = mixinDisabled(McNavbarItemBase);\n\n@Component({\n    selector: MC_NAVBAR_ITEM,\n    template: `\n        <a\n            [attr.tabindex]=\\\"disabled ? -1 : tabIndex\\\"\n            (click)=\"handleClickByItem()\"\n            (keydown)=\"handleKeydown($event)\"\n            class=\"mc-navbar-item\"\n        >\n            <ng-content></ng-content>\n            <i *ngIf=\"hasDropdownContent\" mc-icon=\"mc-angle-down-M_16\"></i>\n        </a>\n        <ul\n            #dropdownContent\n            *ngIf=\"hasDropdownContent\"\n            [ngClass]=\"{ 'is-collapsed': isCollapsed }\"\n            class=\"mc-navbar-dropdown\"\n        >\n            <li\n                *ngFor=\"let item of dropdownItems\"\n                (click)=\"handleClickByDropdownItem()\"\n                class=\"mc-navbar-dropdown-item\"\n            >\n                <ng-container *ngIf=\"dropdownItemTmpl\">\n                    <ng-container *ngTemplateOutlet=\"dropdownItemTmpl; context: { $implicit: item }\"></ng-container>\n                </ng-container>\n                <a\n                    *ngIf=\"!dropdownItemTmpl\"\n                    [attr.href]=\"item.link\"\n                    [ngClass]=\"{ 'is-active': isActiveDropdownLink(item.link) }\"\n                    class=\"mc-navbar-dropdown-link\"\n                >{{ item.text }}</a>\n            </li>\n        </ul>\n    `,\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    inputs: ['disabled'],\n    host: {\n        '[attr.disabled]': 'disabled || null',\n        '[attr.tabindex]': '-1'\n    }\n})\nexport class McNavbarItem extends _McNavbarMixinBase implements OnInit, AfterViewInit, OnDestroy, CanDisable {\n\n    @Input()\n    tabIndex: number = 0;\n\n    @Input()\n    dropdownItems: IMcNavbarDropdownItem[] = [];\n\n    @Input()\n    set collapsedTitle(value: string) {\n        this.elementRef.nativeElement.setAttribute('computedTitle', encodeURI(value));\n    }\n\n    @ContentChild('dropdownItemTmpl', { read: TemplateRef })\n    dropdownItemTmpl: TemplateRef<IMcNavbarDropdownItem>;\n\n    @ViewChild('dropdownContent', { read: ElementRef })\n    dropdownContent: ElementRef;\n\n    get hasDropdownContent() {\n        return this.dropdownItems.length > 0;\n    }\n\n    isCollapsed: boolean = true;\n\n    private _subscription: Subscription = new Subscription();\n    private _focusMonitor$: Observable<FocusOrigin>;\n\n    private get _dropdownElements(): HTMLElement[] {\n        return this.dropdownContent ? this.dropdownContent.nativeElement.querySelectorAll('li > *') : [];\n    }\n\n    constructor(\n        public  elementRef: ElementRef,\n        private _focusMonitor: FocusMonitor,\n        private _platform: Platform,\n        private _cdRef: ChangeDetectorRef\n    ) {\n        super(elementRef);\n    }\n\n    ngOnInit() {\n        this.denyClickIfDisabled();\n\n        this._focusMonitor$ = this._focusMonitor.monitor(this.elementRef.nativeElement, true);\n\n        if (this.hasDropdownContent) {\n            this.listenClickOutside();\n        }\n    }\n\n    ngAfterViewInit() {\n        if (!this.hasDropdownContent) {\n            return;\n        }\n\n        this.startListenFocusDropdownItems();\n    }\n\n    ngOnDestroy() {\n        this._subscription.unsubscribe();\n        this._focusMonitor.stopMonitoring(this.elementRef.nativeElement);\n        this.stopListenFocusDropdownItems();\n    }\n\n    isActiveDropdownLink(link: string): boolean {\n        if (!this._platform.isBrowser) {\n            return false;\n        }\n\n        return window.location.href.indexOf(link) >= 0;\n    }\n\n    handleClickByItem() {\n        this.toggleDropdown();\n    }\n\n    handleKeydown($event: KeyboardEvent) {\n        const isNavbarItem = ($event.target as HTMLElement).classList.contains(MC_NAVBAR_ITEM);\n\n        // tslint:disable-next-line\n        if (this.hasDropdownContent && $event.keyCode === SPACE && isNavbarItem) {\n            this.toggleDropdown();\n        }\n    }\n\n    handleClickByDropdownItem() {\n        this.forceCloseDropdown();\n    }\n\n    private listenClickOutside() {\n        this._subscription.add(\n            this._focusMonitor$.subscribe((origin) => {\n                if (origin === null) {\n                    this.forceCloseDropdown();\n                }\n            })\n        );\n    }\n\n    private toggleDropdown() {\n        this.isCollapsed = !this.isCollapsed;\n    }\n\n    private forceCloseDropdown() {\n        this.isCollapsed = true;\n        this._cdRef.detectChanges();\n    }\n\n    private startListenFocusDropdownItems() {\n        this._dropdownElements.forEach((el) => {\n            this._focusMonitor.monitor(el, true);\n        });\n    }\n\n    private stopListenFocusDropdownItems() {\n        this._dropdownElements.forEach((el) => {\n            this._focusMonitor.stopMonitoring(el);\n        });\n    }\n\n    // This method is required due to angular 2 issue https://github.com/angular/angular/issues/11200\n    private denyClickIfDisabled() {\n        const events: Event[] = this.elementRef.nativeElement.eventListeners('click');\n\n        events.forEach((event) => this.elementRef.nativeElement.removeEventListener('click', event));\n\n        this.elementRef.nativeElement.addEventListener('click', (event: MouseEvent) => {\n            if (this.elementRef.nativeElement.hasAttribute('disabled')) {\n                event.stopImmediatePropagation();\n            }\n        }, true);\n\n        events.forEach((event) => this.elementRef.nativeElement.addEventListener('click', event));\n    }\n}\n\n@Directive({\n    selector: MC_NAVBAR_CONTAINER\n})\nexport class McNavbarContainer {\n    @Input()\n    position: McNavbarContainerPositionType = 'left';\n\n    @HostBinding('class')\n    get cssClasses(): string {\n        return this.position === 'left' ? 'mc-navbar-left' : 'mc-navbar-right';\n    }\n}\n\nclass CollapsibleItem {\n    private _collapsed: boolean = false;\n\n    constructor(\n        public element: HTMLElement,\n        public width: number\n    ) {}\n\n    processCollapsed(collapsed: boolean) {\n        this._collapsed = collapsed;\n\n        this.updateCollapsedClass();\n    }\n\n    private updateCollapsedClass() {\n        if (this._collapsed) {\n            this.element.classList.add(COLLAPSED_CLASS);\n        } else {\n            this.element.classList.remove(COLLAPSED_CLASS);\n        }\n\n    }\n}\n\nclass CachedItemWidth {\n\n    get canCollapse(): boolean {\n        return this.itemsForCollapse.length > 0;\n    }\n\n    private _collapsedItemsWidth: number;\n\n    get collapsedItemsWidth(): number {\n        if (this._collapsedItemsWidth !== undefined) {\n            return this._collapsedItemsWidth;\n        }\n\n        this.calculateAndCacheCollapsedItemsWidth();\n\n        return this._collapsedItemsWidth;\n    }\n\n    constructor(\n        public element: HTMLElement,\n        public width: number,\n        public itemsForCollapse: CollapsibleItem[] = []\n    ) {}\n\n    processCollapsed(collapsed: boolean) {\n        if (this.itemsForCollapse.length > 0) {\n            this.updateTitle(collapsed);\n        }\n\n        this.itemsForCollapse.forEach((item) => item.processCollapsed(collapsed));\n    }\n\n    private calculateAndCacheCollapsedItemsWidth() {\n        this._collapsedItemsWidth = this.itemsForCollapse\n            .reduce((acc, item) => acc + item.width, 0);\n    }\n\n    private getTitle(): string {\n        const computedTitle = this.element.getAttribute('computedTitle');\n\n        return computedTitle\n            ? decodeURI(computedTitle)\n            : (this.itemsForCollapse.length > 0 ? this.itemsForCollapse[0].element.innerText : '');\n    }\n\n    private updateTitle(collapsed: boolean) {\n        if (collapsed) {\n            this.element.setAttribute('title', this.getTitle());\n        } else {\n            this.element.removeAttribute('title');\n        }\n    }\n}\n\n\n@Component({\n    selector: MC_NAVBAR,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    template: `\n        <nav class=\"mc-navbar\">\n            <ng-content select=\"[${MC_NAVBAR_CONTAINER}],${MC_NAVBAR_CONTAINER}\"></ng-content>\n        </nav>\n    `,\n    styleUrls: ['./navbar.css'],\n    encapsulation: ViewEncapsulation.None\n})\nexport class McNavbar implements AfterViewInit, OnDestroy {\n\n    private readonly forceRecalculateItemsWidth: boolean = false;\n    private readonly resizeDebounceInterval: number = 100;\n    private readonly firstLevelElement: string = MC_NAVBAR_CONTAINER;\n    private readonly secondLevelElements: string[] = [\n        MC_NAVBAR_ITEM,\n        MC_NAVBAR_BRAND,\n        MC_NAVBAR_TITLE\n    ];\n\n    private _totalItemsWidths: number;\n    private _itemsWidths: CachedItemWidth[];\n\n    private get maxAllowedWidth(): number {\n        return this._elementRef.nativeElement.querySelector('nav').getBoundingClientRect().width;\n    }\n\n    private get itemsWidths(): CachedItemWidth[] {\n        if (this._itemsWidths !== undefined && !this.forceRecalculateItemsWidth) {\n            return this._itemsWidths;\n        }\n\n        this.calculateAndCacheItemsWidth();\n\n        return this._itemsWidths;\n    }\n\n    private get totalItemsWidth(): number {\n        if (this._totalItemsWidths !== undefined && !this.forceRecalculateItemsWidth) {\n            return this._totalItemsWidths;\n        }\n\n        this.calculateAndCacheTotalItemsWidth();\n\n        return this._totalItemsWidths;\n    }\n\n    private _resizeSubscription: Subscription;\n\n    constructor(\n        private _elementRef: ElementRef\n    ) {\n        const resizeObserver = fromEvent(window, 'resize')\n            .pipe(debounceTime(this.resizeDebounceInterval));\n\n        this._resizeSubscription = resizeObserver.subscribe(this.updateCollapsed.bind(this));\n    }\n\n    updateCollapsed(): void {\n        let collapseDelta = this.totalItemsWidth - this.maxAllowedWidth;\n\n        for (let i = this.itemsWidths.length - 1; i >= 0; i--) {\n            const item = this.itemsWidths[i];\n\n            if (!item.canCollapse) {\n                continue;\n            }\n\n            item.processCollapsed(collapseDelta > 0);\n            collapseDelta -= item.collapsedItemsWidth;\n        }\n    }\n\n    ngAfterViewInit(): void {\n        // Note: this wait is required for loading and rendering fonts for icons;\n        // unfortunately we cannot control font rendering\n        setTimeout(() => this.updateCollapsed(), 0);\n    }\n\n    ngOnDestroy() {\n        this._resizeSubscription.unsubscribe();\n    }\n\n    private calculateAndCacheTotalItemsWidth() {\n        this._totalItemsWidths = this.itemsWidths\n            .reduce((acc, item) => acc + item.width, 0);\n    }\n\n    private getOuterElementWidth(element: HTMLElement): number {\n        const baseWidth  = element.getBoundingClientRect().width;\n        const marginRight = parseInt(getComputedStyle(element).getPropertyValue('margin-right'));\n        const marginLeft = parseInt(getComputedStyle(element).getPropertyValue('margin-left'));\n\n        return baseWidth + marginRight + marginLeft;\n    }\n\n    private calculateAndCacheItemsWidth() {\n        const allItemsSelector = this.secondLevelElements\n            .map((e: string) => `${this.firstLevelElement}>${e}`);\n        const allItems: HTMLElement[] = Array.from(this._elementRef.nativeElement.querySelectorAll(allItemsSelector));\n\n        this._itemsWidths = allItems\n            .map((el) => new CachedItemWidth(el, this.getOuterElementWidth(el), this.getItemsForCollapse(el)));\n    }\n\n    private getItemsForCollapse(element: HTMLElement): CollapsibleItem[] {\n        const icon = element.querySelector(`[${MC_ICON}],${MC_NAVBAR_LOGO},[${MC_NAVBAR_LOGO}]`);\n\n        if (!icon) {\n            return [];\n        }\n\n        return Array.from(element.querySelectorAll(MC_NAVBAR_TITLE))\n            .map((el) => new CollapsibleItem(<HTMLElement> el, el.getBoundingClientRect().width));\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { A11yModule } from '@ptsecurity/cdk/a11y';\nimport { PlatformModule } from '@ptsecurity/cdk/platform';\n\nimport { McIconModule } from '@ptsecurity/mosaic/icon';\n\nimport {\n    McNavbar,\n    McNavbarContainer,\n    McNavbarItem,\n    McNavbarTitle,\n    McNavbarBrand,\n    McNavbarLogo\n} from './navbar.component';\n\n\n@NgModule({\n    imports: [\n        CommonModule,\n        A11yModule,\n        PlatformModule,\n        McIconModule\n    ],\n    exports: [\n        McNavbar,\n        McNavbarContainer,\n        McNavbarTitle,\n        McNavbarItem,\n        McNavbarBrand,\n        McNavbarLogo\n    ],\n    declarations: [\n        McNavbar,\n        McNavbarContainer,\n        McNavbarTitle,\n        McNavbarItem,\n        McNavbarBrand,\n        McNavbarLogo\n    ]\n})\nexport class McNavbarModule {}\n","import {\n    ChangeDetectionStrategy,\n    Component,\n    ViewEncapsulation,\n    ElementRef,\n    Input\n} from '@angular/core';\nimport { CanColor, CanColorCtor, mixinColor, ThemePalette } from '@ptsecurity/mosaic/core';\n\n\nexport type ProgressBarMode = 'determinate' | 'indeterminate';\n\nlet idIterator = 0;\n\nconst MIN_PERCENT = 0;\nconst MAX_PERCENT = 100;\n\nexport class McProgressBarBase {\n    constructor(public _elementRef: ElementRef) {}\n}\n\nexport const _McProgressBarMixinBase:\n    CanColorCtor &\n    typeof McProgressBarBase =\n        mixinColor(McProgressBarBase);\n\n@Component({\n    selector: 'mc-progress-bar',\n    templateUrl: './progress-bar.component.html',\n    styleUrls: ['./progress-bar.css'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n    host: {\n        class: 'mc-progress-bar',\n        '[attr.id]': 'id'\n    }\n})\nexport class McProgressBar extends _McProgressBarMixinBase implements CanColor {\n    @Input() id: string = `mc-progress-bar-${idIterator++}`;\n    @Input() value: number = 0;\n    @Input() mode: ProgressBarMode = 'determinate';\n    @Input() color: ThemePalette = ThemePalette.Primary;\n\n    constructor(elementRef: ElementRef) {\n        super(elementRef);\n    }\n\n    get percentage(): number {\n        return Math.max(MIN_PERCENT, Math.min(MAX_PERCENT, this.value)) / MAX_PERCENT;\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { PlatformModule } from '@ptsecurity/cdk/platform';\n\nimport {\n    McProgressBar\n} from './progress-bar.component';\n\n\n@NgModule({\n    imports: [\n        CommonModule,\n        PlatformModule\n    ],\n    exports: [\n        McProgressBar\n    ],\n    declarations: [\n        McProgressBar\n    ]\n})\nexport class McProgressBarModule {}\n","import {\n    ChangeDetectionStrategy,\n    Component,\n    ViewEncapsulation,\n    ElementRef,\n    Input\n} from '@angular/core';\nimport { CanColor, CanColorCtor, mixinColor, ThemePalette } from '@ptsecurity/mosaic/core';\n\n\nexport type ProgressSpinnerMode = 'determinate' | 'indeterminate';\n\nlet idIterator = 0;\n\nconst MIN_PERCENT = 0;\nconst MAX_PERCENT = 100;\n\nexport class McProgressSpinnerBase {\n    constructor(public _elementRef: ElementRef) {}\n}\n\nexport const _McProgressSpinnerMixinBase:\n    CanColorCtor &\n    typeof McProgressSpinnerBase =\n        mixinColor(McProgressSpinnerBase);\n\nconst MAX_DASH_ARRAY = 273;\n\n@Component({\n    selector: 'mc-progress-spinner',\n    templateUrl: './progress-spinner.component.html',\n    styleUrls: ['./progress-spinner.css'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n    host: {\n        class: 'mc-progress-spinner',\n        '[attr.id]': 'id'\n    }\n})\nexport class McProgressSpinner extends _McProgressSpinnerMixinBase implements CanColor {\n    @Input() id: string = `mc-progress-spinner-${idIterator++}`;\n    @Input() value: number = 0;\n    @Input() mode: ProgressSpinnerMode = 'determinate';\n    @Input() color: ThemePalette = ThemePalette.Primary;\n\n    constructor(elementRef: ElementRef) {\n        super(elementRef);\n    }\n\n    get percentage(): number {\n        return Math.max(MIN_PERCENT, Math.min(MAX_PERCENT, this.value)) / MAX_PERCENT;\n    }\n\n    get dashOffsetPercent(): string {\n        return `${MAX_DASH_ARRAY - this.percentage * MAX_DASH_ARRAY}%`;\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { PlatformModule } from '@ptsecurity/cdk/platform';\n\nimport { McProgressSpinner } from './progress-spinner.component';\n\n\n@NgModule({\n    imports: [\n        CommonModule,\n        PlatformModule\n    ],\n    exports: [\n        McProgressSpinner\n    ],\n    declarations: [\n        McProgressSpinner\n    ]\n})\nexport class McProgressSpinnerModule {}\n","import {\n    AfterContentInit,\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component, ContentChildren, Directive, ElementRef, EventEmitter, forwardRef,\n    Input, OnDestroy, OnInit, Optional, Output, QueryList,\n    ViewChild,\n    ViewEncapsulation\n} from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\n\nimport { UniqueSelectionDispatcher } from '@ptsecurity/cdk/collections';\n\nimport {\n    CanColor, CanColorCtor,\n    CanDisable, CanDisableCtor,\n    HasTabIndex, HasTabIndexCtor,\n    mixinColor,\n    mixinDisabled,\n    mixinTabIndex,\n    toBoolean\n} from '@ptsecurity/mosaic/core';\n\n\n// Increasing integer for generating unique ids for radio components.\nlet nextUniqueId = 0;\n\n/** Change event object emitted by McRadio. */\nexport class McRadioChange {\n    constructor(\n        /** The McRadioButton that emits the change event. */\n        public source: McRadioButton,\n        /** The value of the McRadioButton. */\n        public value: any) {}\n}\n\n// Boilerplate for applying mixins to McRadioGroup.\n/** @docs-private */\nexport class McRadioGroupBase {}\nexport const _McRadioGroupMixinBase: CanDisableCtor & typeof McRadioGroupBase = mixinDisabled(McRadioGroupBase);\n\n/**\n * Provider Expression that allows mc-radio-group to register as a ControlValueAccessor. This\n * allows it to support [(ngModel)] and ngControl.\n * @docs-private\n */\nexport const MC_RADIO_GROUP_CONTROL_VALUE_ACCESSOR: any = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => McRadioGroup),\n    multi: true\n};\n\n@Directive({\n    selector: 'mc-radio-group',\n    exportAs: 'mcRadioGroup',\n    providers: [MC_RADIO_GROUP_CONTROL_VALUE_ACCESSOR],\n    host: {\n        role: 'radiogroup',\n        class: 'mc-radio-group'\n    },\n    inputs: ['disabled']\n})\nexport class McRadioGroup extends _McRadioGroupMixinBase\n    implements AfterContentInit, ControlValueAccessor, CanDisable {\n\n    /** Name of the radio button group. All radio buttons inside this group will use this name. */\n    @Input()\n    get name(): string { return this._name; }\n    set name(value: string) {\n        this._name = value;\n        this.updateRadioButtonNames();\n    }\n\n    /** Whether the labels should appear after or before the radio-buttons. Defaults to 'after' */\n    @Input()\n    get labelPosition(): 'before' | 'after' {\n        return this._labelPosition;\n    }\n    set labelPosition(v) {\n        this._labelPosition = v === 'before' ? 'before' : 'after';\n        this.markRadiosForCheck();\n    }\n\n    /** Value of the radio button. */\n    @Input()\n    get value(): any { return this._value; }\n    set value(newValue: any) {\n        if (this._value !== newValue) {\n            // Set this before proceeding to ensure no circular loop occurs with selection.\n            this._value = newValue;\n\n            this.updateSelectedRadioFromValue();\n            this.checkSelectedRadioButton();\n        }\n    }\n\n    /** Whether the radio button is selected. */\n    @Input()\n    get selected() { return this._selected; }\n    set selected(selected: McRadioButton | null) {\n        this._selected = selected;\n        this.value = selected ? selected.value : null;\n        this.checkSelectedRadioButton();\n    }\n\n    /** Whether the radio group is disabled */\n    @Input()\n    get disabled(): boolean { return this._disabled; }\n    set disabled(value) {\n        this._disabled = toBoolean(value);\n        this.markRadiosForCheck();\n    }\n\n    /** Whether the radio group is required */\n    @Input()\n    get required(): boolean { return this._required; }\n    set required(value: boolean) {\n        this._required = toBoolean(value);\n        this.markRadiosForCheck();\n    }\n\n    /**\n     * Event emitted when the group value changes.\n     * Change events are only emitted when the value changes due to user interaction with\n     * a radio button (the same behavior as `<input type-\"radio\">`).\n     */\n    @Output() readonly change: EventEmitter<McRadioChange> = new EventEmitter<McRadioChange>();\n\n    /** Child radio buttons. */\n    @ContentChildren(forwardRef(() => McRadioButton), { descendants: true })\n    _radios: QueryList<McRadioButton>;\n\n    /**\n     * Selected value for group. Should equal the value of the selected radio button if there *is*\n     * a corresponding radio button with a matching value. If there is *not* such a corresponding\n     * radio button, this value persists to be applied in case a new radio button is added with a\n     * matching value.\n     */\n    private _value: any = null;\n\n    /** The HTML name attribute applied to radio buttons in this group. */\n    private _name: string = `mc-radio-group-${nextUniqueId++}`;\n\n    /** The currently selected radio button. Should match value. */\n    private _selected: McRadioButton | null = null;\n\n    /** Whether the `value` has been set to its initial value. */\n    private _isInitialized: boolean = false;\n\n    /** Whether the labels should appear after or before the radio-buttons. Defaults to 'after' */\n    private _labelPosition: 'before' | 'after' = 'after';\n\n    /** Whether the radio group is disabled. */\n    private _disabled: boolean = false;\n\n    /** Whether the radio group is required. */\n    private _required: boolean = false;\n\n    constructor(\n        private readonly _changeDetector: ChangeDetectorRef\n    ) {\n        super();\n    }\n\n    /** The method to be called in order to update ngModel */\n    // tslint:disable-next-line\n    controlValueAccessorChangeFn: (value: any) => void = () => {};\n\n    /**\n     * onTouch function registered via registerOnTouch (ControlValueAccessor).\n     * @docs-private\n     */\n    // tslint:disable-next-line\n    onTouched: () => any = () => {};\n\n    checkSelectedRadioButton() {\n        if (this._selected && !this._selected.checked) {\n            this._selected.checked = true;\n        }\n    }\n\n    /**\n     * Initialize properties once content children are available.\n     * This allows us to propagate relevant attributes to associated buttons.\n     */\n    ngAfterContentInit() {\n        // Mark this component as initialized in AfterContentInit because the initial value can\n        // possibly be set by NgModel on McRadioGroup, and it is possible that the OnInit of the\n        // NgModel occurs *after* the OnInit of the McRadioGroup.\n        this._isInitialized = true;\n    }\n\n    /**\n     * Mark this group as being \"touched\" (for ngModel). Meant to be called by the contained\n     * radio buttons upon their blur.\n     */\n    touch() {\n        if (this.onTouched) {\n            this.onTouched();\n        }\n    }\n\n    /** Dispatch change event with current selection and group value. */\n    emitChangeEvent(): void {\n        if (this._isInitialized) {\n            this.change.emit(new McRadioChange(this._selected!, this._value));\n        }\n    }\n\n    markRadiosForCheck() {\n        if (this._radios) {\n            this._radios.forEach((radio) => radio.markForCheck());\n        }\n    }\n\n    /**\n     * Sets the model value. Implemented as part of ControlValueAccessor.\n     */\n    writeValue(value: any) {\n        this.value = value;\n        this._changeDetector.markForCheck();\n    }\n\n    /**\n     * Registers a callback to be triggered when the model value changes.\n     * Implemented as part of ControlValueAccessor.\n     * @param fn Callback to be registered.\n     */\n    registerOnChange(fn: (value: any) => void) {\n        this.controlValueAccessorChangeFn = fn;\n    }\n\n    /**\n     * Registers a callback to be triggered when the control is touched.\n     * Implemented as part of ControlValueAccessor.\n     * @param fn Callback to be registered.\n     */\n    registerOnTouched(fn: any) {\n        this.onTouched = fn;\n    }\n\n    /**\n     * Sets the disabled state of the control. Implemented as a part of ControlValueAccessor.\n     * @param isDisabled Whether the control should be disabled.\n     */\n    setDisabledState(isDisabled: boolean) {\n        this.disabled = isDisabled;\n        this._changeDetector.markForCheck();\n    }\n\n    private updateRadioButtonNames(): void {\n        if (this._radios) {\n            this._radios.forEach((radio) => {\n                radio.name = this.name;\n            });\n        }\n    }\n\n    /** Updates the `selected` radio button from the internal _value state. */\n    private updateSelectedRadioFromValue(): void {\n        // If the value already matches the selected radio, do nothing.\n        const isAlreadySelected = this._selected !== null && this._selected.value === this._value;\n\n        if (this._radios != null && !isAlreadySelected) {\n            this._selected = null;\n            this._radios.forEach((radio) => {\n                radio.checked = this.value === radio.value;\n                if (radio.checked) {\n                    this._selected = radio;\n                }\n            });\n        }\n    }\n}\n\n\n// Boilerplate for applying mixins to McRadioButton.\n/** @docs-private */\nexport class McRadioButtonBase {\n    // Since the disabled property is manually defined for the McRadioButton and isn't set up in\n    // the mixin base class. To be able to use the tabindex mixin, a disabled property must be\n    // defined to properly work.\n    disabled: boolean;\n\n    constructor(public _elementRef: ElementRef) {}\n}\n\nexport const _McRadioButtonMixinBase:\n    CanColorCtor &\n    HasTabIndexCtor &\n    typeof McRadioButtonBase =\n        mixinColor(mixinTabIndex(McRadioButtonBase));\n\n\n@Component({\n    selector: 'mc-radio-button',\n    templateUrl: 'radio.component.html',\n    styleUrls: ['radio.css'],\n    inputs: ['color', 'tabIndex'],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    exportAs: 'mcRadioButton',\n    host: {\n        class: 'mc-radio-button',\n        '[attr.id]': 'id',\n        '[class.mc-checked]': 'checked',\n        '[class.mc-disabled]': 'disabled',\n        '(focus)': '_inputElement.nativeElement.focus()'\n    }\n})\nexport class McRadioButton extends _McRadioButtonMixinBase\n    implements OnInit, OnDestroy, CanColor, HasTabIndex {\n\n    private readonly _uniqueId: string = `mc-radio-${++nextUniqueId}`;\n\n    /* tslint:disable:member-ordering */\n\n    /** The unique ID for the radio button. */\n    @Input() id: string = this._uniqueId;\n\n    /** Analog to HTML 'name' attribute used to group radios for unique selection. */\n    @Input() name: string;\n\n    /** Used to set the 'aria-label' attribute on the underlying input element. */\n    @Input('aria-label') ariaLabel: string;\n\n    /** The 'aria-labelledby' attribute takes precedence as the element's text alternative. */\n    @Input('aria-labelledby') ariaLabelledby: string;\n\n    /** The 'aria-describedby' attribute is read after the element's label and field type. */\n    @Input('aria-describedby') ariaDescribedby: string;\n\n    /** Whether this radio button is checked. */\n    @Input()\n    get checked(): boolean { return this._checked; }\n    set checked(value: boolean) {\n        const newCheckedState = toBoolean(value);\n\n        if (this._checked !== newCheckedState) {\n            this._checked = newCheckedState;\n\n            if (newCheckedState && this.radioGroup && this.radioGroup.value !== this.value) {\n                this.radioGroup.selected = this;\n            } else if (!newCheckedState && this.radioGroup && this.radioGroup.value === this.value) {\n                // When unchecking the selected radio button, update the selected radio\n                // property on the group.\n                this.radioGroup.selected = null;\n            }\n\n            if (newCheckedState) {\n                // Notify all radio buttons with the same name to un-check.\n                this._radioDispatcher.notify(this.id, this.name);\n            }\n            this._changeDetector.markForCheck();\n        }\n    }\n\n    /** The value of this radio button. */\n    @Input()\n    get value(): any { return this._value; }\n    set value(value: any) {\n        if (this._value !== value) {\n            this._value = value;\n            if (this.radioGroup != null) {\n                if (!this.checked) {\n                    // Update checked when the value changed to match the radio group's value\n                    this.checked = this.radioGroup.value === value;\n                }\n                if (this.checked) {\n                    this.radioGroup.selected = this;\n                }\n            }\n        }\n    }\n\n    /** Whether the radio button is disabled. */\n    @Input()\n    get disabled(): boolean {\n        return this._disabled || (this.radioGroup != null && this.radioGroup.disabled);\n    }\n    set disabled(value: boolean) {\n        const newDisabledState = toBoolean(value);\n\n        if (this._disabled !== newDisabledState) {\n\n            this._disabled = newDisabledState;\n            this._changeDetector.markForCheck();\n        }\n    }\n\n    /** Whether the radio button is required. */\n    @Input()\n    get required(): boolean {\n        return this._required || (this.radioGroup && this.radioGroup.required);\n    }\n    set required(value: boolean) {\n        this._required = toBoolean(value);\n    }\n\n    /** Whether the label should appear after or before the radio button. Defaults to 'after' */\n    @Input()\n    get labelPosition(): 'before' | 'after' {\n        return this._labelPosition || (this.radioGroup && this.radioGroup.labelPosition) || 'after';\n    }\n    set labelPosition(value) {\n        this._labelPosition = value;\n    }\n    private _labelPosition: 'before' | 'after';\n\n    /** The native `<input type=radio>` element */\n    @ViewChild('input') _inputElement: ElementRef;\n\n    /**\n     * Event emitted when the checked state of this radio button changes.\n     * Change events are only emitted when the value changes due to user interaction with\n     * the radio button (the same behavior as `<input type-\"radio\">`).\n     */\n    @Output() readonly change: EventEmitter<McRadioChange> = new EventEmitter<McRadioChange>();\n\n    /** The parent radio group. May or may not be present. */\n    radioGroup: McRadioGroup;\n\n    @Input()\n    isFocused: boolean = false;\n\n    /** ID of the native input element inside `<mc-radio-button>` */\n    get inputId(): string { return `${this.id || this._uniqueId}-input`; }\n\n    /** Whether this radio is checked. */\n    private _checked: boolean = false;\n\n    /** Whether this radio is disabled. */\n    private _disabled: boolean;\n\n    /** Whether this radio is required. */\n    private _required: boolean;\n\n    /** Value assigned to this radio. */\n    private _value: any = null;\n\n    /** Unregister function for _radioDispatcher */\n    // tslint:disable-next-line\n    private readonly removeUniqueSelectionListener: () => void = () => {};\n\n    constructor(\n        @Optional() radioGroup: McRadioGroup,\n        elementRef: ElementRef,\n        private readonly _changeDetector: ChangeDetectorRef,\n        private readonly _radioDispatcher: UniqueSelectionDispatcher\n    ) {\n\n        super(elementRef);\n\n        this.radioGroup = radioGroup;\n\n        this.removeUniqueSelectionListener =\n            _radioDispatcher.listen((id: string, name: string) => {\n                if (id !== this.id && name === this.name) {\n                    this.checked = false;\n                }\n            });\n    }\n\n    ngOnInit() {\n        if (this.radioGroup) {\n            // If the radio is inside a radio group, determine if it should be checked\n            this.checked = this.radioGroup.value === this._value;\n            // Copy name from parent radio group\n            this.name = this.radioGroup.name;\n        }\n    }\n\n    ngOnDestroy() {\n        this.removeUniqueSelectionListener();\n    }\n\n    /** Focuses the radio button. */\n    // tslint:disable-next-line\n    focus(): void {}\n\n    /**\n     * Marks the radio button as needing checking for change detection.\n     * This method is exposed because the parent radio group will directly\n     * update bound properties of the radio button.\n     */\n    markForCheck() {\n        // When group value changes, the button will not be notified. Use `markForCheck` to explicit\n        // update radio button's status\n        this._changeDetector.markForCheck();\n    }\n\n    onInputClick(event: Event) {\n        // We have to stop propagation for click events on the visual hidden input element.\n        // By default, when a user clicks on a label element, a generated click event will be\n        // dispatched on the associated input element. Since we are using a label element as our\n        // root container, the click event on the `radio-button` will be executed twice.\n        // The real click event will bubble up, and the generated click event also tries to bubble up.\n        // This will lead to multiple click events.\n        // Preventing bubbling for the second event will solve that issue.\n        event.stopPropagation();\n    }\n\n    onInputChange(event: Event) {\n        // We always have to stop propagation on the change event.\n        // Otherwise the change event, from the input element, will bubble up and\n        // emit its event object to the `change` output.\n        event.stopPropagation();\n\n        const groupValueChanged = this.radioGroup && this.value !== this.radioGroup.value;\n        this.checked = true;\n        this.emitChangeEvent();\n\n        if (this.radioGroup) {\n            this.radioGroup.controlValueAccessorChangeFn(this.value);\n            this.radioGroup.touch();\n            if (groupValueChanged) {\n                this.radioGroup.emitChangeEvent();\n            }\n        }\n    }\n\n    /** Dispatch change event with current value. */\n    private emitChangeEvent(): void {\n        this.change.emit(new McRadioChange(this, this._value));\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { A11yModule } from '@ptsecurity/cdk/a11y';\nimport { McCommonModule } from '@ptsecurity/mosaic/core';\n\nimport { McRadioButton, McRadioGroup } from './radio.component';\n\n\n@NgModule({\n    imports: [CommonModule, A11yModule, McCommonModule],\n    exports: [McRadioGroup, McRadioButton],\n    declarations: [McRadioGroup, McRadioButton]\n})\nexport class McRadioModule {\n}\n","import { Directive, Input } from '@angular/core';\n\nimport { CdkTreeNodeDef } from '@ptsecurity/cdk/tree';\n\n\n@Directive({\n    selector: '[mcTreeNodeDef]',\n    inputs: ['when: mcTreeNodeDefWhen'],\n    providers: [{ provide: CdkTreeNodeDef, useExisting: McTreeNodeDef }]\n})\nexport class McTreeNodeDef<T> extends CdkTreeNodeDef<T> {\n    @Input('mcTreeNode') data: T;\n}\n","import { Directive, Input, OnInit } from '@angular/core';\nimport { CdkTreeNodePadding } from '@ptsecurity/cdk/tree';\n\n\n@Directive({\n    selector: '[mcTreeNodePadding]',\n    providers: [{ provide: CdkTreeNodePadding, useExisting: McTreeNodePadding }]\n})\nexport class McTreeNodePadding<T> extends CdkTreeNodePadding<T> implements OnInit {\n    @Input('mcTreeNodePadding') level: number;\n\n    @Input('mcTreeNodePaddingIndent') indent: number;\n\n    baseLeftPadding: number = 12;\n    /* tslint:disable-next-line:naming-convention */\n    _indent: number = 20;\n\n    withIcon: boolean;\n    iconWidth: number = 20;\n\n    get leftPadding(): number {\n        return (this.withIcon ? 0 : this.iconWidth) + this.baseLeftPadding;\n    }\n\n    paddingIndent(): string | null {\n        const nodeLevel = (this.treeNode.data && this.tree.treeControl.getLevel)\n            ? this.tree.treeControl.getLevel(this.treeNode.data)\n            : null;\n\n        const level = this.level || nodeLevel;\n\n        return level ? `${(level * this._indent) + this.leftPadding}px` : `${this.baseLeftPadding}px`;\n    }\n\n    ngOnInit(): void {\n        this.withIcon = this.tree.treeControl.isExpandable(this.treeNode.data);\n\n        this.setPadding();\n    }\n}\n","import { Directive } from '@angular/core';\nimport { CdkTreeNodeToggle } from '@ptsecurity/cdk/tree';\n\n\n@Directive({\n    selector: '[mcTreeNodeToggle]',\n    host: {\n        '(click)': 'toggle($event)'\n    },\n    providers: [{ provide: CdkTreeNodeToggle, useExisting: McTreeNodeToggle }]\n})\nexport class McTreeNodeToggle<T> extends CdkTreeNodeToggle<T> {}\n","import {\n    ChangeDetectorRef,\n    Component,\n    EventEmitter,\n    Input,\n    Output,\n    ElementRef,\n    Inject,\n    Optional,\n    InjectionToken\n} from '@angular/core';\nimport { SelectionModel } from '@ptsecurity/cdk/collections';\nimport { CdkTreeNode } from '@ptsecurity/cdk/tree';\nimport { CanDisable, toBoolean } from '@ptsecurity/mosaic/core';\n\n\n/* tslint:disable-next-line:naming-convention */\nexport interface McTreeOptionParentComponent {\n    multiple: boolean;\n    selectionModel: SelectionModel<McTreeOption>;\n    setFocusedOption: any;\n}\n\n/**\n * Injection token used to provide the parent component to options.\n */\nexport const MC_TREE_OPTION_PARENT_COMPONENT =\n    new InjectionToken<McTreeOptionParentComponent>('MC_TREE_OPTION_PARENT_COMPONENT');\n\nexport class McTreeOptionChange {\n    constructor(public source: McTreeOption, public isUserInput = false) {}\n}\n\nlet uniqueIdCounter: number = 0;\n\n@Component({\n    selector: 'mc-tree-option',\n    exportAs: 'mcTreeOption',\n    host: {\n        '[attr.id]': 'id',\n        '[attr.tabindex]': 'getTabIndex()',\n\n        '[attr.disabled]': 'disabled || null',\n\n        class: 'mc-tree-option',\n        '[class.mc-selected]': 'selected',\n        '[class.mc-active]': 'active',\n\n        '(click)': 'selectViaInteraction()'\n    },\n    templateUrl: './tree-option.html',\n    providers: [{ provide: CdkTreeNode, useExisting: McTreeOption }]\n})\nexport class McTreeOption extends CdkTreeNode<McTreeOption> implements CanDisable {\n    @Output() readonly onSelectionChange = new EventEmitter<McTreeOptionChange>();\n\n    @Input() value: any;\n\n    @Input()\n    get disabled() {\n        return this._disabled;\n    }\n\n    set disabled(value: any) {\n        const newValue = toBoolean(value);\n\n        if (newValue !== this._disabled) {\n            this._disabled = newValue;\n        }\n    }\n\n    private _disabled: boolean = false;\n\n    // @Input()\n    // get selected(): boolean {\n    //     return this.treeSelection.selectionModel && this.treeSelection.selectionModel.isSelected(this) || false;\n    // }\n\n    get selected(): boolean {\n        return this._selected;\n    }\n\n    set selected(value: boolean) {\n        const isSelected = toBoolean(value);\n\n        if (isSelected !== this._selected) {\n            this.setSelected(isSelected);\n\n            // this.treeSelection._reportValueChange();\n        }\n    }\n\n    private _selected: boolean = false;\n\n    /**\n     * Whether or not the option is currently active and ready to be selected.\n     * An active option displays styles as if it is focused, but the\n     * focus is actually retained somewhere else. This comes in handy\n     * for components like autocomplete where focus must remain on the input.\n     */\n    get active(): boolean {\n        return this._active;\n    }\n\n    private _active = false;\n\n    get id(): string {\n        return this._id;\n    }\n\n    private _id = `mc-tree-option-${uniqueIdCounter++}`;\n\n    get multiple(): boolean {\n        return this.parent.multiple;\n    }\n\n    constructor(\n        protected elementRef: ElementRef,\n        protected changeDetectorRef: ChangeDetectorRef,\n        @Optional() @Inject(MC_TREE_OPTION_PARENT_COMPONENT) private readonly parent: McTreeOptionParentComponent\n    ) {\n        // todo any\n        super(elementRef, parent as any);\n    }\n\n    toggle(): void {\n        this.selected = !this.selected;\n    }\n\n    setSelected(selected: boolean) {\n        if (this._selected === selected || !this.parent.selectionModel) { return; }\n\n        this._selected = selected;\n\n        if (selected) {\n            this.parent.selectionModel.select(this);\n        } else {\n            this.parent.selectionModel.deselect(this);\n        }\n\n        // this._changeDetector.markForCheck();\n    }\n\n    /**\n     * This method sets display styles on the option to make it appear\n     * active. This is used by the ActiveDescendantKeyManager so key\n     * events will display the proper options as active on arrow key events.\n     */\n    setActiveStyles(): void {\n        if (!this._active) {\n            this._active = true;\n\n            this.changeDetectorRef.markForCheck();\n        }\n    }\n\n    /**\n     * This method removes display styles on the option that made it appear\n     * active. This is used by the ActiveDescendantKeyManager so key\n     * events will display the proper options as active on arrow key events.\n     */\n    setInactiveStyles(): void {\n        if (this._active) {\n            this._active = false;\n            this.changeDetectorRef.markForCheck();\n        }\n    }\n\n    getHeight(): number {\n        const clientRects = this.elementRef.nativeElement.getClientRects();\n        if (clientRects.length) {\n            return clientRects[0].height;\n        }\n\n        return 0;\n    }\n\n    focus(): void {\n        const element = this.getHostElement();\n\n        if (typeof element.focus === 'function') {\n            element.focus();\n        }\n    }\n\n    // todo старая реализация, нужно восстановить tree-selection\n    // handleClick(): void {\n    //     if (this.disabled) { return; }\n    //\n    //     this.treeSelection.setFocusedOption(this);\n    // }\n\n    /**\n     * The displayed value of the option. It is necessary to show the selected option in the\n     * select's trigger.\n     */\n    get viewValue(): string {\n        // TODO(kara): Add input property alternative for node envs.\n        return (this.getHostElement().textContent || '').trim();\n    }\n\n    select(): void {\n        if (!this._selected) {\n            this._selected = true;\n\n            this.changeDetectorRef.markForCheck();\n        }\n    }\n\n    deselect(): void {\n        if (this._selected) {\n            this._selected = false;\n\n            this.changeDetectorRef.markForCheck();\n        }\n    }\n\n    selectViaInteraction(): void {\n        if (!this.disabled) {\n            this._selected = this.multiple ? !this._selected : true;\n\n            this.changeDetectorRef.markForCheck();\n            this.emitSelectionChangeEvent(true);\n\n            if (this.parent.setFocusedOption) {\n                this.parent.setFocusedOption(this);\n            }\n        }\n    }\n\n    emitSelectionChangeEvent(isUserInput = false): void {\n        this.onSelectionChange.emit(new McTreeOptionChange(this, isUserInput));\n    }\n\n    getHostElement(): HTMLElement {\n        return this.elementRef.nativeElement;\n    }\n\n    getTabIndex(): string {\n        return this.disabled ? '-1' : '0';\n    }\n}\n","import {\n    AfterContentInit,\n    Attribute,\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    ContentChildren,\n    EventEmitter,\n    Input,\n    IterableDiffer,\n    IterableDiffers,\n    Output,\n    QueryList,\n    ViewChild,\n    ViewEncapsulation,\n    ElementRef\n} from '@angular/core';\nimport { NodeDef, ViewData } from '@angular/core/src/view';\nimport { ActiveDescendantKeyManager } from '@ptsecurity/cdk/a11y';\nimport { SelectionModel } from '@ptsecurity/cdk/collections';\nimport { END, ENTER, HOME, LEFT_ARROW, PAGE_DOWN, PAGE_UP, RIGHT_ARROW, SPACE } from '@ptsecurity/cdk/keycodes';\nimport { CdkTree, CdkTreeNodeOutlet } from '@ptsecurity/cdk/tree';\nimport {\n    CanDisable,\n    CanDisableCtor,\n    HasTabIndex,\n    HasTabIndexCtor,\n    mixinDisabled,\n    mixinTabIndex,\n    toBoolean\n} from '@ptsecurity/mosaic/core';\nimport { Subject } from 'rxjs';\n\nimport { MC_TREE_OPTION_PARENT_COMPONENT, McTreeOption } from './tree-option';\n\n\nexport class McTreeNavigationChange {\n    constructor(\n        public source: McTreeSelection,\n        public option: McTreeOption\n    ) {}\n}\n\nexport class McTreeSelectionChange {\n    constructor(public source: McTreeSelection, public option: McTreeOption) {}\n}\n\nclass McTreeSelectionBase<T> extends CdkTree<T> {\n    constructor(differs: IterableDiffers, changeDetectorRef: ChangeDetectorRef) {\n        super(differs, changeDetectorRef);\n    }\n}\n\n/* tslint:disable-next-line:naming-convention */\nconst McTreeSelectionBaseMixin: HasTabIndexCtor & CanDisableCtor &\n    typeof McTreeSelectionBase = mixinTabIndex(mixinDisabled(McTreeSelectionBase));\n\n\n@Component({\n    selector: 'mc-tree-selection',\n    exportAs: 'mcTreeSelection',\n    template: `<ng-container cdkTreeNodeOutlet></ng-container>`,\n    host: {\n        class: 'mc-tree-selection',\n\n        '[attr.tabindex]': 'tabIndex',\n\n        '(keydown)': 'onKeyDown($event)',\n        '(window:resize)': 'updateScrollSize()'\n    },\n    styleUrls: ['./tree.css'],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    providers: [\n        { provide: MC_TREE_OPTION_PARENT_COMPONENT, useExisting: McTreeSelection },\n        { provide: CdkTree, useExisting: McTreeSelection }\n    ]\n})\nexport class McTreeSelection extends McTreeSelectionBaseMixin<McTreeOption>\n    implements AfterContentInit, CanDisable, HasTabIndex {\n\n    @ViewChild(CdkTreeNodeOutlet) nodeOutlet: CdkTreeNodeOutlet;\n\n    @ContentChildren(McTreeOption) options: QueryList<McTreeOption>;\n\n    keyManager: ActiveDescendantKeyManager<McTreeOption>;\n\n    selectionModel: SelectionModel<McTreeOption>;\n\n    tabIndex: number;\n    multiple: boolean;\n    autoSelect: boolean;\n    noUnselect: boolean;\n\n    // todo temporary solution\n    withShift: boolean;\n    withCtrl: boolean;\n\n\n    @Output() readonly navigationChange = new EventEmitter<McTreeNavigationChange>();\n\n    @Output() readonly selectionChange = new EventEmitter<McTreeSelectionChange>();\n\n    @Input()\n    get disabled(): boolean {\n        return this._disabled;\n    }\n\n    set disabled(rawValue: boolean) {\n        const value = toBoolean(rawValue);\n\n        if (this._disabled !== value) {\n            this._disabled = value;\n\n            if (this._disabled) {\n                /* tslint:disable-next-line:no-console */\n                console.log('need disable all options');\n            } else {\n                /* tslint:disable-next-line:no-console */\n                console.log('need enable all options');\n            }\n        }\n    }\n\n    private _disabled: boolean = false;\n\n    private readonly destroy = new Subject<void>();\n\n    constructor(\n        private elementRef: ElementRef,\n        differs: IterableDiffers,\n        changeDetectorRef: ChangeDetectorRef,\n        @Attribute('tabindex') tabIndex: string,\n        @Attribute('multiple') multiple: string,\n        @Attribute('auto-select') autoSelect: string,\n        @Attribute('no-unselect') noUnselect: string\n    ) {\n        super(differs, changeDetectorRef);\n\n        this.tabIndex = parseInt(tabIndex) || 0;\n\n        this.multiple = multiple === null ? false : toBoolean(multiple);\n        this.autoSelect = autoSelect === null ? true : toBoolean(autoSelect);\n        this.noUnselect = noUnselect === null ? true : toBoolean(noUnselect);\n\n        this.selectionModel = new SelectionModel<McTreeOption>(this.multiple);\n    }\n\n    ngAfterContentInit(): void {\n        this.keyManager = new ActiveDescendantKeyManager<McTreeOption>(this.options)\n            // .withTypeAhead()\n            .withVerticalOrientation(true)\n            .withHorizontalOrientation(null);\n    }\n\n    ngOnDestroy() {\n        this.destroy.next();\n\n        this.destroy.complete();\n    }\n\n    onKeyDown(event: KeyboardEvent) {\n        const keyCode = event.keyCode;\n        this.withShift = event.shiftKey;\n        this.withCtrl = event.ctrlKey;\n\n        switch (keyCode) {\n            case LEFT_ARROW:\n                if (this.keyManager.activeItem) {\n                    this.treeControl.collapse(this.keyManager.activeItem.data);\n                }\n\n                event.preventDefault();\n\n                break;\n            case RIGHT_ARROW:\n                if (this.keyManager.activeItem) {\n                    this.treeControl.expand(this.keyManager.activeItem.data);\n                }\n\n                event.preventDefault();\n\n                break;\n            case SPACE:\n            case ENTER:\n                this.toggleFocusedOption();\n                event.preventDefault();\n\n                break;\n            case HOME:\n                this.keyManager.setFirstItemActive();\n                event.preventDefault();\n\n                break;\n            case END:\n                this.keyManager.setLastItemActive();\n                event.preventDefault();\n\n                break;\n            case PAGE_UP:\n                this.keyManager.setPreviousPageItemActive();\n                event.preventDefault();\n\n                break;\n            case PAGE_DOWN:\n                this.keyManager.setNextPageItemActive();\n                event.preventDefault();\n\n                break;\n            default:\n                this.keyManager.onKeydown(event);\n        }\n    }\n\n    updateScrollSize(): void {\n        if (!this.options.first) { return; }\n\n        this.keyManager.withScrollSize(Math.floor(this.getHeight() / this.options.first.getHeight()));\n    }\n\n    setFocusedOption(option: McTreeOption) {\n        this.keyManager.setActiveItem(option);\n\n        if (this.withShift && this.multiple) {\n            const previousIndex = this.keyManager.previousActiveItemIndex;\n            const activeIndex = this.keyManager.activeItemIndex;\n\n            if (previousIndex < activeIndex) {\n                this.options.forEach((item, index) => {\n                    if (index >= previousIndex && index <= activeIndex) { item.setSelected(true); }\n                });\n            } else {\n                this.options.forEach((item, index) => {\n                    if (index >= activeIndex && index <= previousIndex) { item.setSelected(true); }\n                });\n            }\n\n            this.withShift = false;\n        } else if (this.withCtrl) {\n            this.withCtrl = false;\n\n            if (!this.canDeselectLast(option)) { return; }\n\n            option.toggle();\n        } else {\n            if (this.autoSelect) {\n                this.options.forEach((item) => item.setSelected(false));\n                option.setSelected(true);\n            }\n        }\n\n        this.emitNavigationEvent(option);\n    }\n\n    toggleFocusedOption(): void {\n        const focusedIndex = this.keyManager.activeItemIndex;\n\n        if (focusedIndex != null && this.isValidIndex(focusedIndex)) {\n            const focusedOption: McTreeOption = this.options.toArray()[focusedIndex];\n\n            if (focusedOption && this.canDeselectLast(focusedOption)) {\n                focusedOption.toggle();\n\n                // Emit a change event because the focused option changed its state through user interaction.\n                this.emitChangeEvent(focusedOption);\n            }\n        }\n    }\n\n    renderNodeChanges(\n        data: McTreeOption[],\n        dataDiffer: IterableDiffer<McTreeOption> = this.dataDiffer,\n        viewContainer: any = this.nodeOutlet.viewContainer,\n        parentData?: McTreeOption\n    ): void {\n        super.renderNodeChanges(data, dataDiffer, viewContainer, parentData);\n\n        const arrayOfInstances = [];\n\n        viewContainer._embeddedViews.forEach((view: ViewData) => {\n            const viewDef = view.def;\n\n            viewDef.nodes.forEach((node: NodeDef) => {\n                if (viewDef.nodeMatchedQueries === node.matchedQueryIds) {\n                    const nodeData: any = view.nodes[node.nodeIndex];\n\n                    arrayOfInstances.push(nodeData.instance as never);\n                }\n            });\n        });\n\n        if (this.options) {\n            this.options.reset(arrayOfInstances);\n            this.options.notifyOnChanges();\n        }\n\n        this.updateScrollSize();\n    }\n\n    getHeight(): number {\n        const clientRects = this.elementRef.nativeElement.getClientRects();\n        if (clientRects.length) {\n            return clientRects[0].height;\n        }\n\n        return 0;\n    }\n\n    emitNavigationEvent(option: McTreeOption): void {\n        this.navigationChange.emit(new McTreeNavigationChange(this, option));\n    }\n\n    emitChangeEvent(option: McTreeOption): void {\n        this.selectionChange.emit(new McTreeNavigationChange(this, option));\n    }\n\n    private isValidIndex(index: number): boolean {\n        return index >= 0 && index < this.options.length;\n    }\n\n    private canDeselectLast(option: McTreeOption): boolean {\n        return !(this.noUnselect && this.selectionModel.selected.length === 1 && option.selected);\n    }\n}\n\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { CdkTreeModule } from '@ptsecurity/cdk/tree';\nimport { McPseudoCheckboxModule } from '@ptsecurity/mosaic/core';\n\nimport { McTreeNodeDef } from './node';\nimport { McTreeNodePadding } from './padding';\nimport { McTreeNodeToggle } from './toggle';\nimport { McTreeOption } from './tree-option';\nimport { McTreeSelection } from './tree-selection';\n\n\nconst MC_TREE_DIRECTIVES = [\n    McTreeSelection,\n    McTreeOption,\n    McTreeNodeDef,\n    McTreeNodePadding,\n    McTreeNodeToggle\n];\n\n@NgModule({\n    imports: [CommonModule, CdkTreeModule, McPseudoCheckboxModule],\n    exports: MC_TREE_DIRECTIVES,\n    declarations: MC_TREE_DIRECTIVES\n})\nexport class McTreeModule {}\n","import { ICollectionViewer, DataSource } from '@ptsecurity/cdk/collections';\nimport { FlatTreeControl, ITreeControl } from '@ptsecurity/cdk/tree';\nimport { BehaviorSubject, merge, Observable } from 'rxjs';\nimport { map, take } from 'rxjs/operators';\n\n\n/**\n * Tree flattener to convert a normal type of node to node with children & level information.\n * Transform nested nodes of type `T` to flattened nodes of type `F`.\n *\n * For example, the input data of type `T` is nested, and contains its children data:\n *   SomeNode: {\n *     key: 'Fruits',\n *     children: [\n *       NodeOne: {\n *         key: 'Apple',\n *       },\n *       NodeTwo: {\n *        key: 'Pear',\n *      }\n *    ]\n *  }\n *  After flattener flatten the tree, the structure will become\n *  SomeNode: {\n *    key: 'Fruits',\n *    expandable: true,\n *    level: 1\n *  },\n *  NodeOne: {\n *    key: 'Apple',\n *    expandable: false,\n *    level: 2\n *  },\n *  NodeTwo: {\n *   key: 'Pear',\n *   expandable: false,\n *   level: 2\n * }\n * and the output flattened type is `F` with additional information.\n */\nexport class McTreeFlattener<T, F> {\n    constructor(\n        public transformFunction: (node: T, level: number) => F,\n        public getLevel: (node: F) => number,\n        public isExpandable: (node: F) => boolean,\n        public getChildren: (node: T) => Observable<T[]>\n    ) {}\n\n    flattenNode(node: T, level: number, resultNodes: F[], parentMap: boolean[]): F[] {\n        const flatNode = this.transformFunction(node, level);\n        resultNodes.push(flatNode);\n\n        if (this.isExpandable(flatNode)) {\n            this.getChildren(node)\n                .pipe(take(1))\n                .subscribe((children) => {\n                    children.forEach((child, index) => {\n                        const childParentMap: boolean[] = parentMap.slice();\n                        childParentMap.push(index !== children.length - 1);\n\n                        this.flattenNode(child, level + 1, resultNodes, childParentMap);\n                    });\n                });\n        }\n\n        return resultNodes;\n    }\n\n    /**\n     * Flatten a list of node type T to flattened version of node F.\n     * Please note that type T may be nested, and the length of `structuredData` may be different\n     * from that of returned list `F[]`.\n     */\n    flattenNodes(structuredData: T[]): F[] {\n        const resultNodes: F[] = [];\n        structuredData.forEach((node) => this.flattenNode(node, 0, resultNodes, []));\n\n        return resultNodes;\n    }\n\n    /**\n     * Expand flattened node with current expansion status.\n     * The returned list may have different length.\n     */\n    expandFlattenedNodes(nodes: F[], treeControl: ITreeControl<F>): F[] {\n        const results: F[] = [];\n        const currentExpand: boolean[] = [];\n        currentExpand[0] = true;\n\n        nodes.forEach((node) => {\n            let expand = true;\n            for (let i = 0; i <= this.getLevel(node); i++) {\n                expand = expand && currentExpand[i];\n            }\n\n            if (expand) { results.push(node); }\n\n            if (this.isExpandable(node)) {\n                currentExpand[this.getLevel(node) + 1] = treeControl.isExpanded(node);\n            }\n        });\n\n        return results;\n    }\n}\n\n\n/**\n * Data source for flat tree.\n * The data source need to handle expansion/collapsion of the tree node and change the data feed\n * to `McTree`.\n * The nested tree nodes of type `T` are flattened through `MсTreeFlattener`, and converted\n * to type `F` for `McTree` to consume.\n */\nexport class McTreeFlatDataSource<T, F> extends DataSource<F> {\n    flattenedData = new BehaviorSubject<F[]>([]);\n\n    expandedData = new BehaviorSubject<F[]>([]);\n\n    get data() {\n        return this._data.value;\n    }\n\n    set data(value: T[]) {\n        this._data.next(value);\n\n        this.flattenedData.next(this.treeFlattener.flattenNodes(this.data));\n        this.treeControl.dataNodes = this.flattenedData.value;\n    }\n\n    private _data: BehaviorSubject<T[]>;\n\n    constructor(\n        private treeControl: FlatTreeControl<F>,\n        private treeFlattener: McTreeFlattener<T, F>,\n        initialData: T[] = []\n    ) {\n        super();\n\n        this._data = new BehaviorSubject<T[]>(initialData);\n    }\n\n    connect(collectionViewer: ICollectionViewer): Observable<F[]> {\n        const changes = [\n            collectionViewer.viewChange,\n            this.treeControl.expansionModel.changed,\n            this.flattenedData\n        ];\n\n        return merge(...changes)\n            .pipe(map(() => {\n                this.expandedData.next(\n                    this.treeFlattener.expandFlattenedNodes(this.flattenedData.value, this.treeControl)\n                );\n\n                return this.expandedData.value;\n            }));\n    }\n\n    disconnect() {\n        // no op\n    }\n}\n\n","import { ICollectionViewer, DataSource } from '@ptsecurity/cdk/collections';\nimport { BehaviorSubject, merge, Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\n\n/**\n * Data source for nested tree.\n *\n * The data source for nested tree doesn't have to consider node flattener, or the way to expand\n * or collapse. The expansion/collapsion will be handled by ITreeControl and each non-leaf node.\n */\nexport class McTreeNestedDataSource<T> extends DataSource<T> {\n\n    get data() {\n        return this._data.value;\n    }\n\n    set data(value: T[]) {\n        this._data.next(value);\n    }\n\n    /* tslint:disable-next-line:naming-convention */\n    private _data = new BehaviorSubject<T[]>([]);\n\n    connect(collectionViewer: ICollectionViewer): Observable<T[]> {\n        return merge(...[collectionViewer.viewChange, this._data])\n            .pipe(map(() => this.data));\n    }\n\n    disconnect() {\n        // no op\n    }\n}\n\n","import { Directive, TemplateRef } from '@angular/core';\n\n\n/** Decorates the `ng-template` tags and reads out the template from it. */\n@Directive({ selector: '[mcTabContent]' })\nexport class McTabContent {\n    constructor(public template: TemplateRef<any>) { }\n}\n","import { Directive } from '@angular/core';\nimport { CdkPortal } from '@ptsecurity/cdk/portal';\n\n\n/** Used to flag tab labels for use with the portal directive */\n@Directive({\n    selector: '[mc-tab-label], [mcTabLabel]'\n})\nexport class McTabLabel extends CdkPortal {}\n\n// TODO: workaround for https://github.com/angular/material2/issues/12760\n(McTabLabel as any).ctorParameters = () => (CdkPortal as any).ctorParameters;\n","import {\n    ChangeDetectionStrategy,\n    Component,\n    ContentChild,\n    Input,\n    OnChanges,\n    OnDestroy,\n    OnInit,\n    SimpleChanges,\n    TemplateRef,\n    ViewChild,\n    ViewContainerRef,\n    ViewEncapsulation\n} from '@angular/core';\nimport { TemplatePortal } from '@ptsecurity/cdk/portal';\nimport {\n    CanDisable,\n    CanDisableCtor,\n    mixinDisabled\n} from '@ptsecurity/mosaic/core';\nimport { Subject } from 'rxjs';\n\nimport { McTabContent } from './tab-content';\nimport { McTabLabel } from './tab-label';\n\n\nexport class McTabBase {}\nexport const mcTabMixinBase: CanDisableCtor & typeof McTabBase = mixinDisabled(\n    McTabBase\n);\n\n@Component({\n    selector: 'mc-tab',\n    // Create a template for the content of the <mc-tab> so that we can grab a reference to this\n    // TemplateRef and use it in a Portal to render the tab content in the appropriate place in the\n    // tab-group.\n    template: '<ng-template><ng-content></ng-content></ng-template>',\n    inputs: ['disabled'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n    exportAs: 'mcTab'\n})\nexport class McTab extends mcTabMixinBase\n    implements OnInit, CanDisable, OnChanges, OnDestroy {\n    /** @docs-private */\n    get content(): TemplatePortal | null {\n        return this.contentPortal;\n    }\n    /** Content for the tab label given by `<ng-template mc-tab-label>`. */\n    @ContentChild(McTabLabel)\n    templateLabel: McTabLabel;\n\n    /**\n     * Template provided in the tab content that will be used if present, used to enable lazy-loading\n     */\n    @ContentChild(McTabContent, { read: TemplateRef })\n    explicitContent: TemplateRef<any>;\n\n    /** Template inside the McTab view that contains an `<ng-content>`. */\n    @ViewChild(TemplateRef)\n    implicitContent: TemplateRef<any>;\n\n    /** Plain text label for the tab, used when there is no template label. */\n    @Input('label')\n    textLabel: string = '';\n\n    /** Aria label for the tab. */\n    @Input('aria-label')\n    ariaLabel: string;\n\n    /**\n     * Reference to the element that the tab is labelled by.\n     * Will be cleared if `aria-label` is set at the same time.\n     */\n    @Input('aria-labelledby')\n    ariaLabelledby: string;\n\n    /** Emits whenever the internal state of the tab changes. */\n    readonly stateChanges = new Subject<void>();\n\n    /**\n     * The relatively indexed position where 0 represents the center, negative is left, and positive\n     * represents the right.\n     */\n    position: number | null = null;\n\n    /**\n     * The initial relatively index origin of the tab if it was created and selected after there\n     * was already a selected tab. Provides context of what position the tab should originate from.\n     */\n    origin: number | null = null;\n\n    /**\n     * Whether the tab is currently active.\n     */\n    isActive = false;\n\n    /** Portal that will be the hosted content of the tab */\n    private contentPortal: TemplatePortal | null = null;\n\n    constructor(private viewContainerRef: ViewContainerRef) {\n        super();\n    }\n\n    ngOnChanges(changes: SimpleChanges): void {\n        if (\n            changes.hasOwnProperty('textLabel') ||\n            changes.hasOwnProperty('disabled')\n        ) {\n            this.stateChanges.next();\n        }\n    }\n\n    ngOnDestroy(): void {\n        this.stateChanges.complete();\n    }\n\n    ngOnInit(): void {\n        this.contentPortal = new TemplatePortal(\n            this.explicitContent || this.implicitContent,\n            this.viewContainerRef\n        );\n    }\n}\n","import {\n    animate,\n    state,\n    style,\n    transition,\n    trigger,\n    AnimationTriggerMetadata\n} from '@angular/animations';\n\n\nexport const mcTabsAnimations: {\n    readonly translateTab: AnimationTriggerMetadata;\n} = {\n    /** Animation translates a tab along the X axis. */\n    translateTab: trigger('translateTab', [\n        // Note: transitions to `none` instead of 0, because some browsers might blur the content.\n        state(\n            'center, void, left-origin-center, right-origin-center',\n            style({ transform: 'none' })\n        ),\n\n        // If the tab is either on the left or right, we additionally add a `min-height` of 1px\n        // in order to ensure that the element has a height before its state changes. This is\n        // necessary because Chrome does seem to skip the transition in RTL mode if the element does\n        // not have a static height and is not rendered. See related issue: #9465\n        state(\n            'left',\n            style({ transform: 'translate3d(-100%, 0, 0)', minHeight: '1px' })\n        ),\n        state(\n            'right',\n            style({ transform: 'translate3d(100%, 0, 0)', minHeight: '1px' })\n        ),\n\n        transition(\n            '* => left, * => right, left => center, right => center',\n            animate('{{animationDuration}} cubic-bezier(0.35, 0, 0.25, 1)')\n        ),\n        transition('void => left-origin-center', [\n            style({ transform: 'translate3d(-100%, 0, 0)' }),\n            animate('{{animationDuration}} cubic-bezier(0.35, 0, 0.25, 1)')\n        ]),\n        transition('void => right-origin-center', [\n            style({ transform: 'translate3d(100%, 0, 0)' }),\n            animate('{{animationDuration}} cubic-bezier(0.35, 0, 0.25, 1)')\n        ])\n    ])\n};\n","import { Injectable, Optional, SkipSelf } from '@angular/core';\nimport { Subject, Subscription } from 'rxjs';\n\nimport { McModalRef } from './modal-ref.class';\n\n\ninterface IRegisteredMeta {\n    modalRef: McModalRef;\n    afterOpenSubscription: Subscription;\n    afterCloseSubscription: Subscription;\n}\n\n@Injectable()\nexport class McModalControlService {\n\n    // Track singleton afterAllClose through over the injection tree\n    get afterAllClose(): Subject<void> {\n        return this.parentService ? this.parentService.afterAllClose : this.rootAfterAllClose;\n    }\n\n    // Track singleton openModals array through over the injection tree\n    get openModals(): McModalRef[] {\n        return this.parentService ? this.parentService.openModals : this.rootOpenModals;\n    }\n\n    // @ts-ignore\n    private rootOpenModals: McModalRef[] = this.parentService ? null : [];\n    // @ts-ignore\n    private rootAfterAllClose: Subject<void> = this.parentService ? null : new Subject<void>();\n    // @ts-ignore\n    private rootRegisteredMetaMap: Map<McModalRef, IRegisteredMeta> = this.parentService ? null : new Map();\n\n    // Registered modal for later usage\n    private get registeredMetaMap(): Map<McModalRef, IRegisteredMeta> {\n        return this.parentService ? this.parentService.registeredMetaMap : this.rootRegisteredMetaMap;\n    }\n\n    constructor(\n        @Optional() @SkipSelf() private parentService: McModalControlService) {\n    }\n\n    // Register a modal to listen its open/close\n    registerModal(modalRef: McModalRef): void {\n        if (!this.hasRegistered(modalRef)) {\n            const afterOpenSubscription = modalRef.afterOpen.subscribe(() => this.openModals.push(modalRef));\n            const afterCloseSubscription = modalRef.afterClose.subscribe(() => this.removeOpenModal(modalRef));\n\n            this.registeredMetaMap.set(modalRef, {modalRef, afterOpenSubscription, afterCloseSubscription});\n        }\n    }\n\n    hasRegistered(modalRef: McModalRef): boolean {\n        return this.registeredMetaMap.has(modalRef);\n    }\n\n    // Close all registered opened modals\n    closeAll(): void {\n        let i = this.openModals.length;\n\n        while (i--) {\n            this.openModals[i].close();\n        }\n    }\n\n    private removeOpenModal(modalRef: McModalRef): void {\n        const index = this.openModals.indexOf(modalRef);\n\n        if (index > -1) {\n            this.openModals.splice(index, 1);\n\n            if (!this.openModals.length) {\n                this.afterAllClose.next();\n            }\n        }\n    }\n}\n","import { Observable } from 'rxjs';\n\nimport { McModalComponent } from './modal.component';\n\n\n/**\n * API class that public to users to handle the modal instance.\n * McModalRef is aim to avoid accessing to the modal instance directly by users.\n */\nexport abstract class McModalRef<T = any, R = any> {\n    abstract afterOpen: Observable<void>;\n    abstract afterClose: Observable<R>;\n\n    abstract open(): void;\n\n    abstract close(result?: R): void;\n\n    abstract destroy(result?: R): void;\n\n    /**\n     * Trigger the nzOnOk/nzOnCancel by manual\n     */\n    abstract triggerOk(): void;\n\n    abstract triggerCancel(): void;\n\n    // /**\n    //  * Return the ComponentRef of nzContent when specify nzContent as a Component\n    //  * Note: this method may return undefined if the Component has not ready yet.\n    //    (it only available after Modal's ngOnInit)\n    //  */\n    // abstract getContentComponentRef(): ComponentRef<{}>;\n\n    /**\n     * Return the component instance of nzContent when specify nzContent as a Component\n     * Note: this method may return undefined if the Component has not ready yet.\n     * (it only available after Modal's ngOnInit)\n     */\n    abstract getContentComponent(): T;\n\n    /**\n     * Get the dom element of this Modal\n     */\n    abstract getElement(): HTMLElement;\n\n    /**\n     * Get the instance of the Modal itself\n     */\n    abstract getInstance(): McModalComponent;\n}\n","export interface IClickPosition {\n    x: number;\n    y: number;\n}\n\nexport class ModalUtil {\n    private lastPosition: IClickPosition;\n\n    constructor(private document: Document) {\n        this.lastPosition = {x: -1, y: -1};\n        this.listenDocumentClick();\n    }\n\n    getLastClickPosition(): IClickPosition {\n        return this.lastPosition;\n    }\n\n    listenDocumentClick(): void {\n        this.document.addEventListener('click', (event: MouseEvent) => {\n            this.lastPosition = {x: event.clientX, y: event.clientY};\n        });\n    }\n}\n\nexport default new ModalUtil(document);\n","import { DOCUMENT } from '@angular/common';\nimport {\n    AfterViewInit, ChangeDetectionStrategy, ChangeDetectorRef,\n    Component,\n    ComponentFactoryResolver,\n    ComponentRef,\n    ElementRef,\n    EventEmitter,\n    Inject,\n    Injector,\n    Input,\n    OnChanges,\n    OnDestroy,\n    OnInit,\n    Output,\n    Renderer2,\n    SimpleChanges,\n    TemplateRef,\n    Type,\n    ViewChild,\n    ViewContainerRef, ViewEncapsulation\n} from '@angular/core';\nimport { ESCAPE } from '@ptsecurity/cdk/keycodes';\nimport { Overlay, OverlayRef } from '@ptsecurity/cdk/overlay';\nimport { McMeasureScrollbarService } from '@ptsecurity/mosaic/core';\nimport { Observable } from 'rxjs';\n\nimport { McModalControlService } from './modal-control.service';\nimport { McModalRef } from './modal-ref.class';\n// tslint:disable-next-line\nimport ModalUtil from './modal-util';\nimport { IModalButtonOptions, IModalOptions, ModalType, OnClickCallback } from './modal.type';\n\n\n// Duration when perform animations (ms)\nexport const MODAL_ANIMATE_DURATION = 200;\n\ntype AnimationState = 'enter' | 'leave' | null;\n\n@Component({\n    selector: 'mc-modal',\n    templateUrl: './modal.component.html',\n    styleUrls: ['./modal.css'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n    host: {\n        '(keydown)': 'onKeyDown($event)'\n    }\n})\nexport class McModalComponent<T = any, R = any> extends McModalRef<T, R>\n    implements OnInit, OnChanges, AfterViewInit, OnDestroy, IModalOptions {\n\n    // tslint:disable-next-line:no-any\n    @Input() mcModalType: ModalType = 'default';\n    // If not specified, will use <ng-content>\n    @Input() mcContent: string | TemplateRef<{}> | Type<T>;\n    // available when mcContent is a component\n    @Input() mcComponentParams: object;\n    // Default Modal ONLY\n    @Input() mcFooter: string | TemplateRef<{}> | IModalButtonOptions<T>[];\n\n    @Input()\n    get mcVisible() { return this._mcVisible; }\n    set mcVisible(value) { this._mcVisible = value; }\n    _mcVisible = false;\n\n    @Output() mcVisibleChange = new EventEmitter<boolean>();\n\n    @Input() mcZIndex: number = 1000;\n    @Input() mcWidth: number | string = 480;\n    @Input() mcWrapClassName: string;\n    @Input() mcClassName: string;\n    @Input() mcStyle: object;\n    @Input() mcTitle: string | TemplateRef<{}>;\n    @Input() mcCloseByESC: boolean = true;\n\n    @Input()\n    get mcClosable() { return this._mcClosable; }\n    set mcClosable(value) { this._mcClosable = value; }\n    _mcClosable = true;\n\n    @Input()\n    get mcMask() { return this._mcMask; }\n    set mcMask(value) { this._mcMask = value; }\n    _mcMask = true;\n\n    @Input()\n    get mcMaskClosable() { return this._mcMaskClosable; }\n    set mcMaskClosable(value) { this._mcMaskClosable = value; }\n    _mcMaskClosable = true;\n\n    @Input() mcMaskStyle: object;\n    @Input() mcBodyStyle: object;\n\n    // Trigger when modal open(visible) after animations\n    @Output() mcAfterOpen = new EventEmitter<void>();\n    // Trigger when modal leave-animation over\n    @Output() mcAfterClose = new EventEmitter<R>();\n\n    // --- Predefined OK & Cancel buttons\n    @Input() mcOkText: string;\n    @Input() mcOkType = 'primary';\n\n    @Input()\n    get mcOkLoading() { return this._mcOkLoading; }\n    set mcOkLoading(value) { this._mcOkLoading = value; }\n    _mcOkLoading = false;\n\n    @Input() @Output() mcOnOk: EventEmitter<T> | OnClickCallback<T> = new EventEmitter<T>();\n    // Only aim to focus the ok button that needs to be auto focused\n    @ViewChild('autoFocusButtonOk', {read: ElementRef}) autoFocusButtonOk: ElementRef;\n    @Input() mcCancelText: string;\n\n    @Input()\n    get mcCancelLoading() { return this._mcCancelLoading; }\n    set mcCancelLoading(value) { this._mcCancelLoading = value; }\n    _mcCancelLoading = false;\n\n    @Input() @Output() mcOnCancel: EventEmitter<T> | OnClickCallback<T> = new EventEmitter<T>();\n    @ViewChild('modalContainer') modalContainer: ElementRef;\n    @ViewChild('bodyContainer', {read: ViewContainerRef}) bodyContainer: ViewContainerRef;\n    maskAnimationClassMap: object;\n    modalAnimationClassMap: object;\n    // The origin point that animation based on\n    transformOrigin = '0px 0px 0px';\n\n    // Observable alias for mcAfterOpen\n    get afterOpen(): Observable<void> {\n        return this.mcAfterOpen.asObservable();\n    }\n\n    // Observable alias for mcAfterClose\n    get afterClose(): Observable<R> {\n        return this.mcAfterClose.asObservable();\n    }\n\n    get okText(): string {\n        return this.mcOkText;\n    }\n\n    get cancelText(): string {\n        return this.mcCancelText;\n    }\n\n    // Indicate whether this dialog should hidden\n    get hidden(): boolean {\n        return !this.mcVisible && !this.animationState;\n    }\n\n    // Handle the reference when using mcContent as Component\n    private contentComponentRef: ComponentRef<T>;\n    // Current animation state\n    private animationState: AnimationState;\n    private container: HTMLElement | OverlayRef;\n\n    constructor(\n        private overlay: Overlay,\n        private renderer: Renderer2,\n        private cfr: ComponentFactoryResolver,\n        private elementRef: ElementRef,\n        private viewContainer: ViewContainerRef,\n        private mcMeasureScrollbarService: McMeasureScrollbarService,\n        private modalControl: McModalControlService,\n        private changeDetector: ChangeDetectorRef,\n        @Inject(DOCUMENT) private document: any) {\n\n        super();\n    }\n\n    @Input() mcGetContainer: HTMLElement | OverlayRef | (() => HTMLElement | OverlayRef) = () => this.overlay.create();\n\n    ngOnInit() {\n\n        // Create component along without View\n        if (this.isComponent(this.mcContent)) {\n            this.createDynamicComponent(this.mcContent as Type<T>);\n        }\n\n        // Setup default button options\n        if (this.isModalButtons(this.mcFooter)) {\n            this.mcFooter = this.formatModalButtons(this.mcFooter as IModalButtonOptions<T>[]);\n        }\n\n        // Place the modal dom to elsewhere\n        this.container = typeof this.mcGetContainer === 'function' ? this.mcGetContainer() : this.mcGetContainer;\n        if (this.container instanceof HTMLElement) {\n            this.container.appendChild(this.elementRef.nativeElement);\n        } else if (this.container instanceof OverlayRef) {\n            // NOTE: only attach the dom to overlay, the view container is not changed actually\n            this.container.overlayElement.appendChild(this.elementRef.nativeElement);\n        }\n\n        // Register modal when afterOpen/afterClose is stable\n        this.modalControl.registerModal(this);\n    }\n\n    // [NOTE] NOT available when using by service!\n    // Because ngOnChanges never be called when using by service,\n    // here we can't support \"mcContent\"(Component) etc. as inputs that initialized dynamically.\n    // BUT: User also can change \"mcContent\" dynamically to trigger UI changes\n    // (provided you don't use \bComponent that needs initializations)\n    ngOnChanges(changes: SimpleChanges) {\n        if (changes.mcVisible) {\n            // Do not trigger animation while initializing\n            this.handleVisibleStateChange(this.mcVisible, !changes.mcVisible.firstChange);\n        }\n    }\n\n    ngAfterViewInit() {\n        // If using Component, it is the time to attach View while bodyContainer is ready\n        if (this.contentComponentRef) {\n            this.bodyContainer.insert(this.contentComponentRef.hostView);\n        }\n\n        if (this.autoFocusButtonOk) {\n            (this.autoFocusButtonOk.nativeElement as HTMLButtonElement).focus();\n        }\n    }\n\n    ngOnDestroy() {\n        if (this.container instanceof OverlayRef) {\n            this.container.dispose();\n        }\n    }\n\n    open() {\n        this.changeVisibleFromInside(true);\n    }\n\n    close(result?: R) {\n        this.changeVisibleFromInside(false, result);\n    }\n\n    // Destroy equals Close\n    destroy(result?: R) {\n        this.close(result);\n    }\n\n    triggerOk() {\n        this.onClickOkCancel('ok');\n    }\n\n    triggerCancel() {\n        this.onClickOkCancel('cancel');\n    }\n\n    getInstance(): McModalComponent {\n        return this;\n    }\n\n    getContentComponentRef(): ComponentRef<T> {\n        return this.contentComponentRef;\n    }\n\n    getContentComponent(): T {\n        return this.contentComponentRef && this.contentComponentRef.instance;\n    }\n\n    getElement(): HTMLElement {\n        return this.elementRef && this.elementRef.nativeElement;\n    }\n\n    onClickMask($event: MouseEvent) {\n        if (\n            this.mcMask &&\n            this.mcMaskClosable &&\n            ($event.target as HTMLElement).classList.contains('mc-modal-wrap') &&\n            this.mcVisible\n        ) {\n            this.onClickOkCancel('cancel');\n        }\n    }\n\n    // tslint:disable-next-line\n    isModalType(type: ModalType): boolean {\n        return this.mcModalType === type;\n    }\n\n    onKeyDown(event: KeyboardEvent): void {\n\n        if (event.keyCode === ESCAPE && this.container && (this.container instanceof OverlayRef)) {\n\n            this.close();\n            event.preventDefault();\n        }\n    }\n\n    // AoT\n    onClickCloseBtn() {\n        if (this.mcVisible) {\n            this.onClickOkCancel('cancel');\n        }\n    }\n\n    // AoT\n    // tslint:disable-next-line\n    onClickOkCancel(type: 'ok' | 'cancel') {\n        const trigger = { ok: this.mcOnOk, cancel: this.mcOnCancel }[type];\n        const loadingKey = { ok: 'mcOkLoading', cancel: 'mcCancelLoading' }[type];\n\n        if (trigger instanceof EventEmitter) {\n            trigger.emit(this.getContentComponent());\n        } else if (typeof trigger === 'function') {\n\n            const result = trigger(this.getContentComponent());\n            // Users can return \"false\" to prevent closing by default\n            const caseClose = (doClose: boolean | void | {}) => (doClose !== false) && this.close(doClose as R);\n\n            if (isPromise(result)) {\n                this[loadingKey] = true;\n                const handleThen = (doClose) => {\n                    this[loadingKey] = false;\n                    caseClose(doClose);\n                };\n                (result as Promise<void>).then(handleThen).catch(handleThen);\n            } else {\n                caseClose(result);\n            }\n        }\n    }\n\n    // AoT\n    isNonEmptyString(value: {}): boolean {\n        return typeof value === 'string' && value !== '';\n    }\n\n    // AoT\n    isTemplateRef(value: {}): boolean {\n        return value instanceof TemplateRef;\n    }\n\n    // AoT\n    isComponent(value: {}): boolean {\n        return value instanceof Type;\n    }\n\n    // AoT\n    isModalButtons(value: {}): boolean {\n        return Array.isArray(value) && value.length > 0;\n    }\n\n    // Do rest things when visible state changed\n    private handleVisibleStateChange(visible: boolean, animation: boolean = true, closeResult?: R): Promise<any> {\n        // Hide scrollbar at the first time when shown up\n        if (visible) {\n            this.changeBodyOverflow(1);\n        }\n\n        return Promise\n            .resolve(animation && this.animateTo(visible))\n            // Emit open/close event after animations over\n            .then(() => {\n                if (visible) {\n                    this.mcAfterOpen.emit();\n                } else {\n                    this.mcAfterClose.emit(closeResult);\n                    // Show/hide scrollbar when animation is over\n                    this.changeBodyOverflow();\n                }\n            });\n    }\n\n    // Lookup a button's property, if the prop is a function, call & then return the result, otherwise, return itself.\n    // AoT\n    // tslint:disable-next-line\n    getButtonCallableProp(options: IModalButtonOptions<T>, prop: string): {} {\n        const value = options[prop];\n        const args: any[] = [];\n        if (this.contentComponentRef) {\n            args.push(this.contentComponentRef.instance);\n        }\n\n        return typeof value === 'function' ? value.apply(options, args) : value;\n    }\n\n    // On mcFooter's modal button click\n    // AoT\n    // tslint:disable-next-line\n    onButtonClick(button: IModalButtonOptions<T>) {\n        // Call onClick directly\n        const result = this.getButtonCallableProp(button, 'onClick');\n        if (isPromise(result)) {\n            button.loading = true;\n            (result as Promise<{}>).then(() => button.loading = false).catch(() => button.loading = false);\n        }\n    }\n\n    // Change mcVisible from inside\n    private changeVisibleFromInside(visible: boolean, closeResult?: R): Promise<void> {\n        if (this.mcVisible !== visible) {\n            // Change mcVisible value immediately\n            this.mcVisible = visible;\n            this.mcVisibleChange.emit(visible);\n\n            return this.handleVisibleStateChange(visible, true, closeResult);\n        }\n\n        return Promise.resolve();\n    }\n\n    private changeAnimationState(state: AnimationState) {\n        this.animationState = state;\n        if (state) {\n            this.maskAnimationClassMap = {\n                [`fade-${state}`]: true,\n                [`fade-${state}-active`]: true\n            };\n            this.modalAnimationClassMap = {\n                [`zoom-${state}`]: true,\n                [`zoom-${state}-active`]: true\n            };\n        } else {\n            // @ts-ignore\n            this.maskAnimationClassMap = this.modalAnimationClassMap = null;\n        }\n\n        if (this.contentComponentRef) {\n            this.contentComponentRef.changeDetectorRef.markForCheck();\n        } else {\n            this.changeDetector.markForCheck();\n        }\n    }\n\n    private animateTo(isVisible: boolean): Promise<any> {\n        // Figure out the lastest click position when shows up\n        if (isVisible) {\n            // [NOTE] Using timeout due to the document.click event is fired later than visible change,\n            // so if not postponed to next event-loop, we can't get the lastest click position\n            window.setTimeout(() => this.updateTransformOrigin());\n        }\n\n        this.changeAnimationState(isVisible ? 'enter' : 'leave');\n\n        // Return when animation is over\n        return new Promise((resolve) => window.setTimeout(() => {\n            this.changeAnimationState(null);\n            resolve();\n        }, MODAL_ANIMATE_DURATION));\n    }\n\n    private formatModalButtons(buttons: IModalButtonOptions<T>[]): IModalButtonOptions<T>[] {\n        return buttons.map((button) => {\n\n            return {\n                ...{\n                    type: 'default',\n                    size: 'default',\n                    autoLoading: true,\n                    show: true,\n                    loading: false,\n                    disabled: false\n                },\n                ...button\n            };\n        });\n    }\n\n    /**\n     * Create a component dynamically but not attach to any View\n     * (this action will be executed when bodyContainer is ready)\n     * @param component Component class\n     */\n    private createDynamicComponent(component: Type<T>) {\n        const factory = this.cfr.resolveComponentFactory(component);\n        const childInjector = Injector.create({\n            providers: [{provide: McModalRef, useValue: this}],\n            parent: this.viewContainer.parentInjector\n        });\n\n        this.contentComponentRef = factory.create(childInjector);\n\n        if (this.mcComponentParams) {\n            Object.assign(this.contentComponentRef.instance, this.mcComponentParams);\n        }\n\n        // Do the first change detection immediately\n        // (or we do detection at ngAfterViewInit, multi-changes error will be thrown)\n        this.contentComponentRef.changeDetectorRef.detectChanges();\n\n\n    }\n\n    // Update transform-origin to the last click position on document\n    private updateTransformOrigin() {\n        const modalElement = this.modalContainer.nativeElement as HTMLElement;\n        const lastPosition = ModalUtil.getLastClickPosition();\n\n        if (lastPosition) {\n            // tslint:disable-next-line\n            this.transformOrigin = `${lastPosition.x - modalElement.offsetLeft}px ${lastPosition.y - modalElement.offsetTop}px 0px`;\n        }\n    }\n\n    /**\n     * Take care of the body's overflow to decide the existense of scrollbar\n     * @param plusNum The number that the openModals.length will increase soon\n     */\n    private changeBodyOverflow(plusNum: number = 0) {\n        const openModals = this.modalControl.openModals;\n\n        if (openModals.length + plusNum > 0) {\n            // tslint:disable-next-line\n            this.renderer.setStyle(this.document.body, 'padding-right', `${this.mcMeasureScrollbarService.scrollBarWidth}px`);\n            this.renderer.setStyle(this.document.body, 'overflow', 'hidden');\n        } else {\n            this.renderer.removeStyle(this.document.body, 'padding-right');\n            this.renderer.removeStyle(this.document.body, 'overflow');\n        }\n    }\n}\n\n////////////\n\nfunction isPromise(obj: {} | void): boolean {\n    // tslint:disable-next-line\n    return !!obj && (typeof obj === 'object' || typeof obj === 'function') && typeof (obj as Promise<{}>).then === 'function' && typeof (obj as Promise<{}>).catch === 'function';\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n\n@Pipe({\n    name: 'toCssUnit'\n})\nexport class CssUnitPipe implements PipeTransform {\n    transform(value: number | string, defaultUnit: string = 'px'): string {\n        const formatted = +value;\n\n        return isNaN(formatted) ? `${value}` : `${formatted}${defaultUnit}`;\n    }\n}\n","import { ComponentRef, Injectable } from '@angular/core';\n\nimport { Observable } from 'rxjs';\nimport { filter } from 'rxjs/operators';\n\nimport { ESCAPE } from '@ptsecurity/cdk/keycodes';\nimport { Overlay, OverlayRef } from '@ptsecurity/cdk/overlay';\nimport { ComponentPortal } from '@ptsecurity/cdk/portal';\n\nimport { McModalControlService } from './modal-control.service';\nimport { McModalRef } from './modal-ref.class';\nimport { McModalComponent } from './modal.component';\nimport { ConfirmType, IModalOptions, IModalOptionsForService } from './modal.type';\n\n\n// A builder used for managing service creating modals\nexport class ModalBuilderForService {\n\n    // Modal ComponentRef, \"null\" means it has been destroyed\n    private modalRef: ComponentRef<McModalComponent>;\n    private overlayRef: OverlayRef;\n\n    constructor(private overlay: Overlay, options: IModalOptionsForService = {}) {\n        this.createModal();\n\n        if (!('mcGetContainer' in options)) {\n            options.mcGetContainer = null;\n        }\n\n        this.changeProps(options);\n        this.modalRef.instance.open();\n        this.modalRef.instance.mcAfterClose.subscribe(() => this.destroyModal());\n\n        this.overlayRef.keydownEvents()\n            // @ts-ignore\n            .pipe(filter((event: KeyboardEvent) => {\n                return event.keyCode === ESCAPE && options.mcCloseByESC;\n            }))\n            .subscribe(() => this.modalRef.instance.close());\n    }\n\n    getInstance(): McModalComponent {\n        return this.modalRef && this.modalRef.instance;\n    }\n\n    destroyModal(): void {\n        if (this.modalRef) {\n            this.overlayRef.dispose();\n            // @ts-ignore\n            this.modalRef = null;\n        }\n    }\n\n    private changeProps(options: IModalOptions): void {\n        if (this.modalRef) {\n            // here not limit user's inputs at runtime\n            Object.assign(this.modalRef.instance, options);\n        }\n    }\n\n    // Create component to ApplicationRef\n    private createModal(): void {\n        this.overlayRef = this.overlay.create();\n        this.modalRef = this.overlayRef.attach(new ComponentPortal(McModalComponent));\n    }\n}\n\n@Injectable()\nexport class McModalService {\n    // Track of the current close modals (we assume invisible is close this time)\n    get openModals(): McModalRef[] {\n        return this.modalControl.openModals;\n    }\n\n    get afterAllClose(): Observable<void> {\n        return this.modalControl.afterAllClose.asObservable();\n    }\n\n    constructor(\n        private overlay: Overlay,\n        private modalControl: McModalControlService) {\n    }\n\n    // Closes all of the currently-open dialogs\n    closeAll(): void {\n        this.modalControl.closeAll();\n    }\n\n    create<T>(options: IModalOptionsForService<T> = {}): McModalRef<T> {\n\n        if (typeof options.mcOnCancel !== 'function') {\n            // Leave a empty function to close this modal by default\n            // tslint:disable-next-line\n            options.mcOnCancel = () => {};\n        }\n\n        if (!('mcCloseByESC' in options)) {\n            options.mcCloseByESC = true;\n        }\n\n\n        if (!('mcWidth' in options)) {\n            // tslint:disable-next-line\n            options.mcWidth = 480;\n        }\n\n        return new ModalBuilderForService(this.overlay, options).getInstance();\n    }\n\n    confirm<T>(options: IModalOptionsForService<T> = {}, confirmType: ConfirmType = 'confirm'): McModalRef<T> {\n        if ('mcFooter' in options) {\n            console.warn(`The Confirm-Modal doesn't support \"mcFooter\", this property will be ignored.`);\n        }\n\n        // NOTE: only support function currently by calling confirm()\n        if (typeof options.mcOnOk !== 'function') {\n            // Leave a empty function to close this modal by default\n            // tslint:disable-next-line\n            options.mcOnOk = () => {};\n        }\n\n        options.mcModalType = 'confirm';\n        options.mcClassName = `mc-confirm mc-confirm-${confirmType} ${options.mcClassName || ''}`;\n        options.mcMaskClosable = false;\n\n        return this.create(options);\n    }\n\n    success<T>(options: IModalOptionsForService<T> = {}): McModalRef<T> {\n        return this.simpleConfirm(options, 'success');\n    }\n\n    delete<T>(options: IModalOptionsForService<T> = {}): McModalRef<T> {\n        return this.simpleConfirm(options, 'warn');\n    }\n\n    private simpleConfirm<T>(options: IModalOptionsForService<T> = {}, confirmType: ConfirmType): McModalRef<T> {\n        // Remove the Cancel button if the user not specify a Cancel button\n        if (!('mcCancelText' in options)) {\n            // @ts-ignore\n            options.mcCancelText = null;\n        }\n\n        return this.confirm(options, confirmType);\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { OverlayModule } from '@ptsecurity/cdk/overlay';\nimport { McButtonModule } from '@ptsecurity/mosaic/button';\nimport { McIconModule } from '@ptsecurity/mosaic/icon';\n\nimport { CssUnitPipe } from './css-unit.pipe';\nimport { McModalControlService } from './modal-control.service';\nimport { McModalComponent } from './modal.component';\nimport { McModalService } from './modal.service';\n\n\n@NgModule({\n    imports: [ CommonModule, OverlayModule, McButtonModule, McIconModule ],\n    exports: [ McModalComponent ],\n    declarations: [ McModalComponent, CssUnitPipe ],\n    entryComponents: [ McModalComponent ],\n    providers: [ McModalControlService, McModalService ]\n})\nexport class McModalModule { }\n","import { AnimationEvent } from '@angular/animations';\nimport {\n    AfterContentInit,\n    ChangeDetectionStrategy,\n    Component,\n    ContentChild,\n    ContentChildren,\n    ElementRef,\n    EventEmitter,\n    Inject,\n    InjectionToken,\n    Input,\n    NgZone,\n    OnDestroy,\n    Output,\n    TemplateRef,\n    QueryList,\n    ViewChild,\n    ViewEncapsulation,\n    OnInit\n} from '@angular/core';\nimport { FocusKeyManager, FocusOrigin } from '@ptsecurity/cdk/a11y';\nimport { Direction } from '@ptsecurity/cdk/bidi';\nimport { coerceBooleanProperty } from '@ptsecurity/cdk/coercion';\nimport { ESCAPE, DOWN_ARROW, UP_ARROW } from '@ptsecurity/cdk/keycodes';\nimport { Subject, Subscription } from 'rxjs';\nimport { take } from 'rxjs/operators';\n\nimport { mcDropdownAnimations } from './dropdown-animations';\nimport { McDropdownContent } from './dropdown-content';\nimport { throwMcDropdownInvalidPositionX, throwMcDropdownInvalidPositionY } from './dropdown-errors';\nimport { McDropdownItem } from './dropdown-item';\nimport { MC_DROPDOWN_PANEL, McDropdownPanel } from './dropdown-panel';\nimport { DropdownPositionX, DropdownPositionY } from './dropdown-positions';\n\n\n/** Default `mc-dropdown` options that can be overridden. */\n// tslint:disable-next-line:interface-name\nexport interface McDropdownDefaultOptions {\n    /** The x-axis position of the dropdown. */\n    xPosition: DropdownPositionX;\n\n    /** The y-axis position of the dropdown. */\n    yPosition: DropdownPositionY;\n\n    /** Whether the dropdown should overlap the dropdown trigger. */\n    overlapTrigger: boolean;\n\n    /** Class to be applied to the dropdown's backdrop. */\n    backdropClass: string;\n\n    /** Whether the dropdown has a backdrop. */\n    hasBackdrop?: boolean;\n}\n\n/** Injection token to be used to override the default options for `mc-dropdown`. */\nexport const MC_DROPDOWN_DEFAULT_OPTIONS =\n    new InjectionToken<McDropdownDefaultOptions>('mc-dropdown-default-options', {\n        providedIn: 'root',\n        factory: MC_DROPDOWN_DEFAULT_OPTIONS_FACTORY\n    });\n\n/** @docs-private */\nexport function MC_DROPDOWN_DEFAULT_OPTIONS_FACTORY(): McDropdownDefaultOptions {\n    return {\n        overlapTrigger: false,\n        xPosition: 'after',\n        yPosition: 'below',\n        backdropClass: 'cdk-overlay-transparent-backdrop'\n    };\n}\n\n@Component({\n    selector: 'mc-dropdown',\n    templateUrl: 'dropdown.html',\n    styleUrls: ['dropdown.css'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n    exportAs: 'mcDropdown',\n    animations: [\n        mcDropdownAnimations.transformDropdown,\n        mcDropdownAnimations.fadeInItems\n    ],\n    providers: [\n        { provide: MC_DROPDOWN_PANEL, useExisting: McDropdown }\n    ]\n})\nexport class McDropdown implements AfterContentInit, McDropdownPanel<McDropdownItem>, OnInit, OnDestroy {\n\n    /** Position of the dropdown in the X axis. */\n    @Input()\n    get xPosition(): DropdownPositionX { return this._xPosition; }\n    set xPosition(value: DropdownPositionX) {\n        if (value !== 'before' && value !== 'after') {\n            throwMcDropdownInvalidPositionX();\n        }\n\n        this._xPosition = value;\n        this.setPositionClasses();\n    }\n\n    /** Position of the dropdown in the Y axis. */\n    @Input()\n    get yPosition(): DropdownPositionY { return this._yPosition; }\n    set yPosition(value: DropdownPositionY) {\n        if (value !== 'above' && value !== 'below') {\n            throwMcDropdownInvalidPositionY();\n        }\n\n        this._yPosition = value;\n        this.setPositionClasses();\n    }\n\n    /** Whether the dropdown should overlap its trigger. */\n    @Input()\n    get overlapTrigger(): boolean { return this._overlapTrigger; }\n    set overlapTrigger(value: boolean) {\n        this._overlapTrigger = coerceBooleanProperty(value);\n    }\n\n    /** Whether the dropdown has a backdrop. */\n    @Input()\n    get hasBackdrop(): boolean | undefined { return this._hasBackdrop; }\n    set hasBackdrop(value: boolean | undefined) {\n        this._hasBackdrop = coerceBooleanProperty(value);\n    }\n\n    /**\n     * This method takes classes set on the host mc-dropdown element and applies them on the\n     * dropdown template that displays in the overlay container.  Otherwise, it's difficult\n     * to style the containing dropdown from outside the component.\n     * @param classes list of class names\n     */\n    @Input('class')\n    set panelClass(classes: string) {\n        if (classes && classes.length) {\n            this._classList = classes.split(' ').reduce((obj: any, className: string) => {\n                obj[className] = true;\n\n                return obj;\n            }, {});\n\n            this._elementRef.nativeElement.className = '';\n        }\n    }\n\n    /** Config object to be passed into the dropdown's ngClass */\n    _classList: {[key: string]: boolean} = {};\n\n    /** Current state of the panel animation. */\n    _panelAnimationState: 'void' | 'enter' = 'void';\n\n    /** Emits whenever an animation on the dropdown completes. */\n    _animationDone = new Subject<AnimationEvent>();\n\n    /** Whether the dropdown is animating. */\n    _isAnimating: boolean;\n\n    /** Layout direction of the dropdown. */\n    direction: Direction;\n\n    /** Class to be added to the backdrop element. */\n    @Input() backdropClass: string = this._defaultOptions.backdropClass;\n\n    /** @docs-private */\n    @ViewChild(TemplateRef) templateRef: TemplateRef<any>;\n\n    /**\n     * List of the items inside of a dropdown.\n     */\n    @ContentChildren(McDropdownItem) items: QueryList<McDropdownItem>;\n\n    /**\n     * Dropdown content that will be rendered lazily.\n     * @docs-private\n     */\n    @ContentChild(McDropdownContent) lazyContent: McDropdownContent;\n\n    /** Event emitted when the dropdown is closed. */\n    @Output() readonly closed: EventEmitter<void | 'click' | 'keydown' | 'tab'> =\n        new EventEmitter<void | 'click' | 'keydown' | 'tab'>();\n\n    private _keyManager: FocusKeyManager<McDropdownItem>;\n    private _xPosition: DropdownPositionX = this._defaultOptions.xPosition;\n    private _yPosition: DropdownPositionY = this._defaultOptions.yPosition;\n\n    /** Dropdown items inside the current dropdown. */\n    private _items: McDropdownItem[] = [];\n\n    /** Emits whenever the amount of dropdown items changes. */\n    private _itemChanges = new Subject<McDropdownItem[]>();\n\n    /** Subscription to tab events on the dropdown panel */\n    private _tabSubscription = Subscription.EMPTY;\n    private _overlapTrigger: boolean = this._defaultOptions.overlapTrigger;\n    private _hasBackdrop: boolean | undefined = this._defaultOptions.hasBackdrop;\n\n    constructor(\n        private _elementRef: ElementRef<HTMLElement>,\n        private _ngZone: NgZone,\n        @Inject(MC_DROPDOWN_DEFAULT_OPTIONS) private _defaultOptions: McDropdownDefaultOptions) { }\n\n    ngOnInit() {\n        this.setPositionClasses();\n    }\n\n    ngAfterContentInit() {\n        this._keyManager = new FocusKeyManager<McDropdownItem>(this.items).withWrap().withTypeAhead();\n        this._tabSubscription = this._keyManager.tabOut.subscribe(() => this.closed.emit('tab'));\n    }\n\n    ngOnDestroy() {\n        this._tabSubscription.unsubscribe();\n        this.closed.complete();\n    }\n\n    /** Handle a keyboard event from the dropdown, delegating to the appropriate action. */\n    _handleKeydown(event: KeyboardEvent) {\n\n        // tslint:disable-next-line:deprecation\n        switch (event.keyCode) {\n            case ESCAPE:\n                this.closed.emit('keydown');\n                break;\n            case UP_ARROW:\n            case DOWN_ARROW:\n                this._keyManager.setFocusOrigin('keyboard');\n                this._keyManager.onKeydown(event);\n                break;\n            default:\n                // todo зачем обрабатывать лишние события ?\n                this._keyManager.onKeydown(event);\n        }\n    }\n\n    /**\n     * Focus the first item in the dropdown.\n     * @param origin Action from which the focus originated. Used to set the correct styling.\n     */\n    focusFirstItem(origin: FocusOrigin = 'program'): void {\n        // When the content is rendered lazily, it takes a bit before the items are inside the DOM.\n        if (this.lazyContent) {\n            this._ngZone.onStable.asObservable()\n                .pipe(take(1))\n                .subscribe(() => this._keyManager.setFocusOrigin(origin).setFirstItemActive());\n        } else {\n            this._keyManager.setFocusOrigin(origin).setFirstItemActive();\n        }\n    }\n\n    /**\n     * Resets the active item in the dropdown. This is used when the dropdown is opened, allowing\n     * the user to start from the first option when pressing the down arrow.\n     */\n    resetActiveItem() {\n        this._keyManager.setActiveItem(-1);\n    }\n\n    /**\n     * Registers a dropdown item with the dropdown.\n     * @docs-private\n     */\n    addItem(item: McDropdownItem) {\n        // We register the items through this method, rather than picking them up through\n        // `ContentChildren`, because we need the items to be picked up by their closest\n        // `mc-dropdown` ancestor. If we used `@ContentChildren(McDropdownItem, {descendants: true})`,\n        // all descendant items will bleed into the top-level dropdown in the case where the consumer\n        // has `mc-dropdown` instances nested inside each other.\n        if (this._items.indexOf(item) === -1) {\n            this._items.push(item);\n            this._itemChanges.next(this._items);\n        }\n    }\n\n    /**\n     * Removes an item from the dropdown.\n     * @docs-private\n     */\n    removeItem(item: McDropdownItem) {\n        const index = this._items.indexOf(item);\n\n        if (this._items.indexOf(item) > -1) {\n            this._items.splice(index, 1);\n            this._itemChanges.next(this._items);\n        }\n    }\n\n    /**\n     * Adds classes to the dropdown panel based on its position. Can be used by\n     * consumers to add specific styling based on the position.\n     * @param posX Position of the dropdown along the x axis.\n     * @param posY Position of the dropdown along the y axis.\n     * @docs-private\n     */\n    setPositionClasses(posX: DropdownPositionX = this.xPosition, posY: DropdownPositionY = this.yPosition) {\n        const classes = this._classList;\n        classes['mc-dropdown-before'] = posX === 'before';\n        classes['mc-dropdown-after'] = posX === 'after';\n        classes['mc-dropdown-above'] = posY === 'above';\n        classes['mc-dropdown-below'] = posY === 'below';\n    }\n\n    /** Starts the enter animation. */\n    _startAnimation() {\n        this._panelAnimationState = 'enter';\n    }\n\n    /** Resets the panel animation to its initial state. */\n    _resetAnimation() {\n        this._panelAnimationState = 'void';\n    }\n\n    /** Callback that is invoked when the panel animation completes. */\n    _onAnimationDone(event: AnimationEvent) {\n        this._animationDone.next(event);\n        this._isAnimating = false;\n\n        // Scroll the content element to the top once the animation is done. This is necessary, because\n        // we move focus to the first item while it's still being animated, which can throw the browser\n        // off when it determines the scroll position. Alternatively we can move focus when the\n        // animation is done, however moving focus asynchronously will interrupt screen readers\n        // which are in the process of reading out the dropdown already. We take the `element` from\n        // the `event` since we can't use a `ViewChild` to access the pane.\n        if (event.toState === 'enter' && this._keyManager.activeItemIndex === 0) {\n            event.element.scrollTop = 0;\n        }\n    }\n}\n","import {\n    AfterContentInit,\n    Directive,\n    ElementRef,\n    EventEmitter,\n    Inject,\n    InjectionToken,\n    Input,\n    OnDestroy, OnInit,\n    Optional,\n    Output,\n    ViewContainerRef\n} from '@angular/core';\nimport { FocusMonitor, FocusOrigin } from '@ptsecurity/cdk/a11y';\nimport { Direction, Directionality } from '@ptsecurity/cdk/bidi';\nimport {\n    FlexibleConnectedPositionStrategy,\n    HorizontalConnectionPos,\n    Overlay,\n    OverlayConfig,\n    OverlayRef,\n    VerticalConnectionPos,\n    IScrollStrategy\n} from '@ptsecurity/cdk/overlay';\nimport { TemplatePortal } from '@ptsecurity/cdk/portal';\nimport { merge, Subscription } from 'rxjs';\nimport { filter, take, takeUntil } from 'rxjs/operators';\n\nimport { throwMcDropdownMissingError } from './dropdown-errors';\nimport { McDropdownPanel } from './dropdown-panel';\nimport { McDropdown } from './dropdown.component';\n\n\n/** Injection token that determines the scroll handling while the dropdown is open. */\nexport const MC_DROPDOWN_SCROLL_STRATEGY =\n    new InjectionToken<() => IScrollStrategy>('mc-dropdown-scroll-strategy');\n\n/** @docs-private */\nexport function MC_DROPDOWN_SCROLL_STRATEGY_FACTORY(overlay: Overlay): () => IScrollStrategy {\n    return () => overlay.scrollStrategies.reposition();\n}\n\n/** @docs-private */\nexport const MC_DROPDOWN_SCROLL_STRATEGY_FACTORY_PROVIDER = {\n    provide: MC_DROPDOWN_SCROLL_STRATEGY,\n    deps: [Overlay],\n    useFactory: MC_DROPDOWN_SCROLL_STRATEGY_FACTORY\n};\n\n/**\n * This directive is intended to be used in conjunction with an mc-dropdown tag.  It is\n * responsible for toggling the display of the provided dropdown instance.\n */\n@Directive({\n    selector: `[mcDropdownTriggerFor]`,\n    host: {\n        '(touchstart)': '_openedBy = \"touch\"',\n        '(click)': 'toggle()'\n    },\n    exportAs: 'mcDropdownTrigger'\n})\nexport class McDropdownTrigger implements OnInit, AfterContentInit, OnDestroy {\n\n    /** Whether the dropdown is open. */\n    get opened(): boolean {\n        return this._opened;\n    }\n\n    /** The text direction of the containing app. */\n    get dir(): Direction {\n        return this._dir && this._dir.value === 'rtl' ? 'rtl' : 'ltr';\n    }\n\n    // Tracking input type is necessary so it's possible to only auto-focus\n    // the first item of the list when the dropdown is opened via the keyboard\n    _openedBy: 'mouse' | 'touch' | null = null;\n\n    /** References the dropdown instance that the trigger is associated with. */\n    @Input('mcDropdownTriggerFor') dropdown: McDropdownPanel;\n\n    /** Data to be passed along to any lazily-rendered content. */\n    @Input('mcDropdownTriggerData') data: any;\n\n    /** Event emitted when the associated dropdown is opened. */\n    @Output() readonly dropdownOpened: EventEmitter<void> = new EventEmitter<void>();\n\n    /** Event emitted when the associated dropdown is closed. */\n    @Output() readonly dropdownClosed: EventEmitter<void> = new EventEmitter<void>();\n\n    private _portal: TemplatePortal;\n    private _overlayRef: OverlayRef | null = null;\n    private _opened: boolean = false;\n    private _closeSubscription = Subscription.EMPTY;\n    private _hoverSubscription = Subscription.EMPTY;\n\n    constructor(private _overlay: Overlay,\n                private _element: ElementRef<HTMLElement>,\n                private _viewContainerRef: ViewContainerRef,\n                @Inject(MC_DROPDOWN_SCROLL_STRATEGY) private _scrollStrategy: any,\n                @Optional() private _dir: Directionality,\n                private _focusMonitor?: FocusMonitor) {}\n\n    ngOnInit(): void {\n        this.dropdown.closed = this.dropdown.closed || new EventEmitter<void | 'click' | 'keydown' | 'tab'>();\n    }\n\n    ngAfterContentInit() {\n        this._check();\n\n        this.dropdown.closed.asObservable().subscribe(() => {\n            this._destroy();\n        });\n    }\n\n    ngOnDestroy() {\n        if (this._overlayRef) {\n            this._overlayRef.dispose();\n            this._overlayRef = null;\n        }\n\n        this._cleanUpSubscriptions();\n    }\n\n    /** Toggles the dropdown between the open and closed states. */\n    toggle(): void {\n        // tslint:disable-next-line:no-void-expression\n        return this._opened ? this.close() : this.open();\n    }\n\n    /** Opens the dropdown. */\n    open(): void {\n        if (this._opened) {\n            return;\n        }\n\n        this._check();\n\n        const overlayRef = this._createOverlay();\n        this._setPosition(overlayRef.getConfig().positionStrategy as FlexibleConnectedPositionStrategy);\n        overlayRef.attach(this._portal);\n\n        if (this.dropdown.lazyContent) {\n            this.dropdown.lazyContent.attach(this.data);\n        }\n\n        this._closeSubscription = this._closingActions().subscribe(() => this.close());\n        this._init();\n\n        if (this.dropdown instanceof McDropdown) {\n            this.dropdown._startAnimation();\n        }\n    }\n\n    /** Closes the dropdown. */\n    close(): void {\n        this.dropdown.closed.emit();\n    }\n\n    /**\n     * Focuses the dropdown trigger.\n     * @param origin Source of the dropdown trigger's focus.\n     */\n    focus(origin: FocusOrigin = 'program') {\n        if (this._focusMonitor) {\n            this._focusMonitor.focusVia(this._element.nativeElement, origin);\n        } else {\n            this._element.nativeElement.focus();\n        }\n    }\n\n    /** Closes the dropdown and does the necessary cleanup. */\n    private _destroy() {\n        if (!this._overlayRef || !this.opened) {\n            return;\n        }\n\n        const dropdown = this.dropdown;\n\n        this._closeSubscription.unsubscribe();\n        this._overlayRef.detach();\n\n        if (dropdown instanceof McDropdown) {\n            dropdown._resetAnimation();\n\n            if (dropdown.lazyContent) {\n                // Wait for the exit animation to finish before detaching the content.\n                dropdown._animationDone\n                    .pipe(\n                        filter((event) => event.toState === 'void'),\n                        take(1),\n                        // Interrupt if the content got re-attached.\n                        takeUntil(dropdown.lazyContent._attached)\n                    )\n                    .subscribe(() => dropdown.lazyContent.detach(), undefined, () => {\n                        // No matter whether the content got re-attached, reset the dropdown.\n                        this._reset();\n                    });\n            } else {\n                this._reset();\n            }\n        } else {\n            this._reset();\n\n            if (dropdown.lazyContent) {\n                dropdown.lazyContent.detach();\n            }\n        }\n    }\n\n    /**\n     * This method sets the dropdown state to open and focuses the first item if\n     * the dropdown was opened via the keyboard.\n     */\n    private _init(): void {\n        this.dropdown.direction = this.dir;\n        this._setIsOpened(true);\n        this.dropdown.focusFirstItem(this._openedBy || 'program');\n    }\n\n    /**\n     * This method resets the dropdown when it's closed, most importantly restoring\n     * focus to the dropdown trigger if the dropdown was opened via the keyboard.\n     */\n    private _reset(): void {\n        this._setIsOpened(false);\n\n        // We should reset focus if the user is navigating using a keyboard or\n        // if we have a top-level trigger which might cause focus to be lost\n        // when clicking on the backdrop.\n        if (!this._openedBy) {\n            // Note that the focus style will show up both for `program` and\n            // `keyboard` so we don't have to specify which one it is.\n            this.focus();\n        } else {\n            this.focus(this._openedBy);\n        }\n\n        this._openedBy = null;\n    }\n\n    // set state rather than toggle to support triggers sharing a dropdown\n    private _setIsOpened(isOpen: boolean): void {\n        this._opened = isOpen;\n        // tslint:disable-next-line:no-void-expression\n        this._opened ? this.dropdownOpened.emit() : this.dropdownClosed.emit();\n    }\n\n    /**\n     * This method checks that a valid instance of Dropdown has been passed into\n     * mcDropdownTriggerFor. If not, an exception is thrown.\n     */\n    private _check() {\n        if (!this.dropdown) {\n            throwMcDropdownMissingError();\n        }\n    }\n\n    /**\n     * This method creates the overlay from the provided dropdown's template and saves its\n     * OverlayRef so that it can be attached to the DOM when open is called.\n     */\n    private _createOverlay(): OverlayRef {\n        if (!this._overlayRef) {\n            this._portal = new TemplatePortal(this.dropdown.templateRef, this._viewContainerRef);\n            const config = this._getOverlayConfig();\n            this._subscribeToPositions(config.positionStrategy as FlexibleConnectedPositionStrategy);\n            this._overlayRef = this._overlay.create(config);\n\n            // Consume the `keydownEvents` in order to prevent them from going to another overlay.\n            // Ideally we'd also have our keyboard event logic in here, however doing so will\n            // break anybody that may have implemented the `McDropdownPanel` themselves.\n            this._overlayRef.keydownEvents().subscribe();\n        }\n\n        return this._overlayRef;\n    }\n\n    /**\n     * This method builds the configuration object needed to create the overlay, the OverlayState.\n     * @returns OverlayConfig\n     */\n    private _getOverlayConfig(): OverlayConfig {\n        return new OverlayConfig({\n            positionStrategy: this._overlay.position()\n                .flexibleConnectedTo(this._element)\n                .withLockedPosition()\n                .withTransformOriginOn('.mc-dropdown__panel'),\n            hasBackdrop: this.dropdown.hasBackdrop === null || this.dropdown.hasBackdrop === undefined\n                ? true\n                : this.dropdown.hasBackdrop,\n            backdropClass: this.dropdown.backdropClass || 'cdk-overlay-transparent-backdrop',\n            scrollStrategy: this._scrollStrategy(),\n            direction: this._dir\n        });\n    }\n\n    /**\n     * Listens to changes in the position of the overlay and sets the correct classes\n     * on the dropdown based on the new position. This ensures the animation origin is always\n     * correct, even if a fallback position is used for the overlay.\n     */\n    private _subscribeToPositions(position: FlexibleConnectedPositionStrategy): void {\n        if (this.dropdown.setPositionClasses) {\n            // todo possibly we should not recompute positions there\n            /*position.positionChanges.subscribe((change) => {\n                const posX: DropdownPositionX = change.connectionPair.overlayX === 'start' ? 'after' : 'before';\n                const posY: DropdownPositionY = change.connectionPair.overlayY === 'top' ? 'below' : 'above';\n\n                this.dropdown.setPositionClasses!(posX, posY);\n            });*/\n            position.positionChanges.subscribe(() => {\n                this.dropdown.setPositionClasses!(this.dropdown.xPosition, this.dropdown.yPosition);\n            });\n        }\n    }\n\n    /**\n     * Sets the appropriate positions on a position strategy\n     * so the overlay connects with the trigger correctly.\n     * @param positionStrategy Strategy whose position to update.\n     */\n    private _setPosition(positionStrategy: FlexibleConnectedPositionStrategy) {\n        const [originX, originFallbackX]: HorizontalConnectionPos[] =\n            this.dropdown.xPosition === 'before' ? ['end', 'start'] : ['start', 'end'];\n\n        const [overlayY, overlayFallbackY]: VerticalConnectionPos[] =\n            this.dropdown.yPosition === 'above' ? ['bottom', 'top'] : ['top', 'bottom'];\n\n        let [originY, originFallbackY] = [overlayY, overlayFallbackY];\n        const [overlayX, overlayFallbackX] = [originX, originFallbackX];\n        const offsetY = 0;\n\n        if (!this.dropdown.overlapTrigger) {\n            originY = overlayY === 'top' ? 'bottom' : 'top';\n            originFallbackY = overlayFallbackY === 'top' ? 'bottom' : 'top';\n        }\n\n        positionStrategy.withPositions([\n            {originX, originY, overlayX, overlayY, offsetY},\n            {originX: originFallbackX, originY, overlayX: overlayFallbackX, overlayY, offsetY},\n            {\n                originX,\n                originY: originFallbackY,\n                overlayX,\n                overlayY: overlayFallbackY,\n                offsetY: -offsetY\n            },\n            {\n                originX: originFallbackX,\n                originY: originFallbackY,\n                overlayX: overlayFallbackX,\n                overlayY: overlayFallbackY,\n                offsetY: -offsetY\n            }\n        ]);\n    }\n\n    /** Cleans up the active subscriptions. */\n    private _cleanUpSubscriptions(): void {\n        this._closeSubscription.unsubscribe();\n        this._hoverSubscription.unsubscribe();\n    }\n\n    /** Returns a stream that emits whenever an action that should close the dropdown occurs. */\n    private _closingActions() {\n        const backdrop = this._overlayRef!.backdropClick();\n        const detachments = this._overlayRef!.detachments();\n\n        return merge(backdrop, detachments);\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { OverlayModule } from '@ptsecurity/cdk/overlay';\n\nimport { McDropdownContent } from './dropdown-content';\nimport { McDropdownItem } from './dropdown-item';\nimport { MC_DROPDOWN_SCROLL_STRATEGY_FACTORY_PROVIDER, McDropdownTrigger } from './dropdown-trigger';\nimport { McDropdown } from './dropdown.component';\n\n\n@NgModule({\n    imports: [\n        CommonModule,\n        OverlayModule\n    ],\n    exports: [McDropdown, McDropdownItem, McDropdownTrigger, McDropdownContent],\n    declarations: [McDropdown, McDropdownItem, McDropdownTrigger, McDropdownContent],\n    providers: [MC_DROPDOWN_SCROLL_STRATEGY_FACTORY_PROVIDER]\n})\nexport class McDropdownModule {}\n","import { Component } from '@angular/core';\n\n\n@Component({\n    selector: 'mc-content',\n    preserveWhitespaces: false,\n    templateUrl: './content.component.html',\n    styles: [\n        `:host {\n            display: block;\n        }`\n    ],\n    host: {\n        '[class.mc-layout-content]': 'true'\n    }\n})\nexport class McContentComponent {\n}\n","import { Component } from '@angular/core';\n\n\n@Component({\n    selector: 'mc-footer',\n    preserveWhitespaces: false,\n    templateUrl: './footer.component.html',\n    styles: [\n        `:host {\n            display: block;\n        }`\n    ],\n    host: {\n        '[class.mc-layout-footer]': 'true'\n    }\n})\nexport class McFooterComponent {\n}\n","import { Component } from '@angular/core';\n\n\n@Component({\n    selector : 'mc-header',\n    preserveWhitespaces: false,\n    templateUrl: './header.component.html',\n    styles: [\n        `:host {\n            display: block;\n        }`\n    ],\n    host: {\n        '[class.mc-layout-header]': 'true'\n    }\n})\nexport class McHeaderComponent {\n}\n","import { ChangeDetectionStrategy, Component, ViewEncapsulation } from '@angular/core';\n\n\n@Component({\n    selector: 'mc-layout',\n    preserveWhitespaces: false,\n    styleUrls: ['layout.css'],\n    templateUrl: './layout.component.html',\n    host: {\n        '[class.mc-layout]': 'true',\n        '[class.mc-layout-has-sidebar]': 'hasSidebar'\n    },\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class McLayoutComponent {\n    hasSidebar = false;\n}\n","import {\n    ChangeDetectionStrategy,\n    Component,\n    EventEmitter,\n    Host,\n    Input,\n    OnInit,\n    Optional,\n    Output\n} from '@angular/core';\nimport { toBoolean } from '@ptsecurity/mosaic/core';\n\nimport { McLayoutComponent } from './layout.component';\n\n\n@Component({\n    selector: 'mc-sidebar',\n    preserveWhitespaces: false,\n    templateUrl: './sidebar.component.html',\n    host: {\n        '[class.mc-layout-sidebar]': 'true',\n        '[class.mc-layout-sidebar-collapsed]': 'mcCollapsed',\n        '[style.flex]': 'mcFlex',\n        '[style.max-width.px]': 'mcWidth',\n        '[style.min-width.px]': 'mcWidth',\n        '[style.width.px]': 'mcWidth'\n    },\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class McSidebarComponent implements OnInit {\n\n    @Input() _mcWidth = 200;\n    @Input() mcCollapsedWidth = 80;\n\n    @Input()\n    set mcCollapsible(value: boolean) {\n        this.collapsible = toBoolean(value);\n    }\n\n    get mcCollapsible(): boolean {\n        return this.collapsible;\n    }\n\n    @Input()\n    set mcCollapsed(value: boolean) {\n        this.collapsed = toBoolean(value);\n    }\n\n    get mcCollapsed(): boolean {\n        return this.collapsed;\n    }\n\n    // tslint:disable-next-line\n    @Output() mcCollapsedChange = new EventEmitter();\n\n    private collapsed = false;\n    private collapsible = false;\n\n    get mcFlex(): string {\n        if (this.mcCollapsed) {\n            return `0 0 ${this.mcCollapsedWidth}px`;\n        } else {\n            return `0 0 ${this.mcWidth}px`;\n        }\n    }\n\n    get mcWidth(): number {\n        if (this.mcCollapsed) {\n            return this.mcCollapsedWidth;\n        } else {\n            return this._mcWidth;\n        }\n    }\n\n    constructor(\n        @Optional() @Host() private mcLayoutComponent: McLayoutComponent) {\n    }\n\n    ngOnInit() {\n        if (this.mcLayoutComponent) {\n            this.mcLayoutComponent.hasSidebar = true;\n        }\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { McContentComponent } from './content.component';\nimport { McFooterComponent } from './footer.component';\nimport { McHeaderComponent } from './header.component';\nimport { McLayoutComponent } from './layout.component';\nimport { McSidebarComponent } from './sidebar.component';\n\n\n@NgModule({\n    imports: [ CommonModule ],\n    exports: [\n        McLayoutComponent,\n        McContentComponent,\n        McFooterComponent,\n        McHeaderComponent,\n        McSidebarComponent\n    ],\n    declarations: [\n        McLayoutComponent,\n        McContentComponent,\n        McFooterComponent,\n        McHeaderComponent,\n        McSidebarComponent\n    ]\n})\nexport class McLayoutModule {\n}\n","import {\n    AfterContentInit,\n    Attribute,\n    ChangeDetectionStrategy,\n    Component,\n    ContentChildren,\n    ElementRef,\n    EventEmitter,\n    forwardRef,\n    Input,\n    Output,\n    QueryList,\n    ViewEncapsulation,\n    ChangeDetectorRef,\n    Inject,\n    OnDestroy,\n    OnInit,\n    ViewChild\n} from '@angular/core';\n\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\n\nimport { Subscription } from 'rxjs';\n\nimport { FocusKeyManager, IFocusableOption } from '@ptsecurity/cdk/a11y';\nimport { SelectionModel } from '@ptsecurity/cdk/collections';\nimport { END, ENTER, HOME, PAGE_DOWN, PAGE_UP, SPACE } from '@ptsecurity/cdk/keycodes';\n\nimport {\n    McLine,\n    McLineSetter,\n    CanDisable,\n    mixinDisabled,\n    toBoolean, CanDisableCtor\n} from '@ptsecurity/mosaic/core';\n\n\n/**\n * Component for list-options of selection-list. Each list-option can automatically\n * generate a checkbox and can put current item into the selectionModel of selection-list\n * if the current item is selected.\n */\n@Component({\n    exportAs: 'mcListOption',\n    selector: 'mc-list-option',\n    host: {\n        tabindex: '-1',\n\n        class: 'mc-list-option',\n        '[class.mc-selected]': 'selected',\n        '[class.mc-focused]': '_hasFocus',\n        '(focus)': '_handleFocus()',\n        '(blur)': '_handleBlur()',\n        '(click)': '_handleClick()'\n    },\n    templateUrl: 'list-option.html',\n    encapsulation: ViewEncapsulation.None,\n    preserveWhitespaces: false,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class McListOption implements AfterContentInit, OnDestroy, OnInit, IFocusableOption {\n    _hasFocus: boolean = false;\n\n    @ContentChildren(McLine) _lines: QueryList<McLine>;\n\n    @ViewChild('text') _text: ElementRef;\n\n    // Whether the label should appear before or after the checkbox. Defaults to 'after'\n    @Input() checkboxPosition: 'before' | 'after' = 'after';\n\n    @Input() value: any;\n\n    @Input()\n    get disabled() {\n        return this._disabled || (this.listSelection && this.listSelection.disabled);\n    }\n\n    set disabled(value: any) {\n        const newValue = toBoolean(value);\n\n        if (newValue !== this._disabled) {\n            this._disabled = newValue;\n            this._changeDetector.markForCheck();\n        }\n    }\n\n    @Input()\n    get selected(): boolean {\n        return this.listSelection.selectedOptions && this.listSelection.selectedOptions.isSelected(this) || false;\n    }\n\n    set selected(value: boolean) {\n        const isSelected = toBoolean(value);\n\n        if (isSelected !== this._selected) {\n            this.setSelected(isSelected);\n\n            this.listSelection._reportValueChange();\n        }\n    }\n\n    private _lineSetter: McLineSetter;\n    private _selected = false;\n    private _disabled = false;\n\n    constructor(\n        private _element: ElementRef,\n        private _changeDetector: ChangeDetectorRef,\n        @Inject(forwardRef(() => McListSelection))\n        public listSelection: McListSelection\n    ) {}\n\n    ngOnInit() {\n        if (this._selected) {\n            // List options that are selected at initialization can't be reported properly to the form\n            // control. This is because it takes some time until the selection-list knows about all\n            // available options. Also it can happen that the ControlValueAccessor has an initial value\n            // that should be used instead. Deferring the value change report to the next tick ensures\n            // that the form control value is not being overwritten.\n            const wasSelected = this._selected;\n\n            Promise.resolve().then(() => {\n                if (this._selected || wasSelected) {\n                    this.selected = true;\n                    this._changeDetector.markForCheck();\n                }\n            });\n        }\n    }\n\n    ngAfterContentInit() {\n        this._lineSetter = new McLineSetter(this._lines, this._element);\n    }\n\n    ngOnDestroy(): void {\n        if (this.selected) {\n            // We have to delay this until the next tick in order\n            // to avoid changed after checked errors.\n            Promise.resolve().then(() => this.selected = false);\n        }\n\n        this.listSelection._removeOptionFromList(this);\n    }\n\n    toggle(): void {\n        this.selected = !this.selected;\n    }\n\n    focus(): void {\n        this._element.nativeElement.focus();\n\n        this.listSelection.setFocusedOption(this);\n    }\n\n    getLabel() {\n        return this._text ? this._text.nativeElement.textContent : '';\n    }\n\n    setSelected(selected: boolean) {\n        if (this._selected === selected || !this.listSelection.selectedOptions) { return; }\n\n        this._selected = selected;\n\n        if (selected) {\n            this.listSelection.selectedOptions.select(this);\n        } else {\n            this.listSelection.selectedOptions.deselect(this);\n        }\n\n        this._changeDetector.markForCheck();\n    }\n\n    _getHeight(): number {\n        return this._element.nativeElement.getClientRects()[0].height;\n    }\n\n    _handleClick() {\n        if (this.disabled) { return; }\n\n        this.listSelection.setFocusedOption(this);\n    }\n\n    _handleFocus() {\n        if (this.disabled || this._hasFocus) { return; }\n\n        this._hasFocus = true;\n    }\n\n    _handleBlur() {\n        this._hasFocus = false;\n\n        this.listSelection._onTouched();\n    }\n\n    _getHostElement(): HTMLElement {\n        return this._element.nativeElement;\n    }\n}\n\n\nexport const MC_SELECTION_LIST_VALUE_ACCESSOR: any = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => McListSelection),\n    multi: true\n};\n\n// Change event that is being fired whenever the selected state of an option changes. */\nexport class McListSelectionChange {\n    constructor(\n        // Reference to the selection list that emitted the event.\n        public source: McListSelection,\n        // Reference to the option that has been changed.\n        public option: McListOption\n    ) {}\n}\n\n\nexport class McListSelectionBase {}\n\nexport const _McListSelectionMixinBase: CanDisableCtor & typeof McListSelectionBase\n    = mixinDisabled(McListSelectionBase);\n\n@Component({\n    exportAs: 'mcListSelection',\n    selector: 'mc-list-selection',\n    template: '<ng-content></ng-content>',\n    styleUrls: ['./list.css'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n    inputs: ['disabled', 'tabIndex'],\n    host: {\n        class: 'mc-list-selection',\n        '[tabIndex]': 'tabIndex',\n        '(focus)': 'focus()',\n        '(blur)': '_onTouched()',\n        '(keydown)': '_onKeyDown($event)',\n        '(window:resize)': 'updateScrollSize()'\n    },\n    providers: [MC_SELECTION_LIST_VALUE_ACCESSOR],\n    preserveWhitespaces: false\n})\nexport class McListSelection extends _McListSelectionMixinBase implements\n    IFocusableOption, CanDisable, AfterContentInit, ControlValueAccessor {\n\n    _keyManager: FocusKeyManager<McListOption>;\n\n    // The option components contained within this selection-list.\n    @ContentChildren(McListOption) options: QueryList<McListOption>;\n\n    tabIndex: number;\n\n    autoSelect: boolean;\n    noUnselect: boolean;\n    multiple: boolean;\n\n    // todo temporary solution\n    withShift: boolean;\n    withCtrl: boolean;\n\n    @Input() horizontal: boolean = false;\n\n    // Emits a change event whenever the selected state of an option changes.\n    @Output() readonly selectionChange: EventEmitter<McListSelectionChange> = new EventEmitter<McListSelectionChange>();\n\n    selectedOptions: SelectionModel<McListOption>;\n\n    // Used for storing the values that were assigned before the options were initialized.\n    private _tempValues: string[] | null;\n\n    private _modelChanges = Subscription.EMPTY;\n\n    constructor(\n        private _element: ElementRef,\n        @Attribute('tabindex') tabIndex: string,\n        @Attribute('auto-select') autoSelect: string,\n        @Attribute('no-unselect') noUnselect: string,\n        @Attribute('multiple') multiple: string\n    ) {\n        super();\n\n        this.autoSelect = autoSelect === null ? true : toBoolean(autoSelect);\n        this.multiple = multiple === null ? true : toBoolean(multiple);\n        this.noUnselect = noUnselect === null ? true : toBoolean(noUnselect);\n\n        this.tabIndex = parseInt(tabIndex) || 0;\n\n        this.selectedOptions = new SelectionModel<McListOption>(this.multiple);\n    }\n\n    ngAfterContentInit(): void {\n        this.horizontal = toBoolean(this.horizontal);\n\n        this._keyManager = new FocusKeyManager<McListOption>(this.options)\n            .withTypeAhead()\n            .withVerticalOrientation(!this.horizontal)\n            .withHorizontalOrientation(this.horizontal ? 'ltr' : null);\n\n        if (this._tempValues) {\n            this._setOptionsFromValues(this._tempValues);\n            this._tempValues = null;\n        }\n\n        // Sync external changes to the model back to the options.\n        this._modelChanges = this.selectedOptions.onChange!.subscribe((event) => {\n            for (const item of event.added) {\n                item.selected = true;\n            }\n\n            for (const item of event.removed) {\n                item.selected = false;\n            }\n        });\n\n        this.updateScrollSize();\n    }\n\n    ngOnDestroy() {\n        this._modelChanges.unsubscribe();\n    }\n\n    focus() {\n        this._element.nativeElement.focus();\n    }\n\n    selectAll() {\n        this.options.forEach((option) => option.setSelected(true));\n\n        this._reportValueChange();\n    }\n\n    deselectAll() {\n        this.options.forEach((option) => option.setSelected(false));\n\n        this._reportValueChange();\n    }\n\n    updateScrollSize(): void {\n        if (this.horizontal || !this.options.first) { return; }\n\n        this._keyManager.withScrollSize(Math.floor(this._getHeight() / this.options.first._getHeight()));\n    }\n\n    // Sets the focused option of the selection-list.\n    setFocusedOption(option: McListOption): void {\n        this._keyManager.updateActiveItem(option);\n\n        if (this.withShift && this.multiple) {\n            const previousIndex = this._keyManager.previousActiveItemIndex;\n            const activeIndex = this._keyManager.activeItemIndex;\n\n            if (previousIndex < activeIndex) {\n                this.options.forEach((item, index) => {\n                    if (index >= previousIndex && index <= activeIndex) { item.setSelected(true); }\n                });\n            } else {\n                this.options.forEach((item, index) => {\n                    if (index >= activeIndex && index <= previousIndex) { item.setSelected(true); }\n                });\n            }\n\n            this.withShift = false;\n        } else if (this.withCtrl) {\n            this.withCtrl = false;\n\n            if (!this._canDeselectLast(option)) { return; }\n\n            option.toggle();\n        } else {\n            if (this.autoSelect) {\n                this.options.forEach((item) => item.setSelected(false));\n                option.setSelected(true);\n            }\n        }\n\n        this._emitChangeEvent(option);\n        this._reportValueChange();\n    }\n\n    // Implemented as part of ControlValueAccessor.\n    writeValue(values: string[]): void {\n        if (this.options) {\n            this._setOptionsFromValues(values || []);\n        } else {\n            this._tempValues = values;\n        }\n    }\n\n    // Implemented as part of ControlValueAccessor.\n    registerOnChange(fn: (value: any) => void): void {\n        this._onChange = fn;\n    }\n\n    // Implemented as part of ControlValueAccessor.\n    registerOnTouched(fn: () => void): void {\n        this._onTouched = fn;\n    }\n\n    // Implemented as a part of ControlValueAccessor.\n    setDisabledState(isDisabled: boolean): void {\n        if (this.options) {\n            this.options.forEach((option) => option.disabled = isDisabled);\n        }\n    }\n\n    getSelectedOptionValues(): string[] {\n        return this.options.filter((option) => option.selected).map((option) => option.value);\n    }\n\n    // Toggles the selected state of the currently focused option.\n    toggleFocusedOption(): void {\n        const focusedIndex = this._keyManager.activeItemIndex;\n\n        if (focusedIndex != null && this._isValidIndex(focusedIndex)) {\n            const focusedOption: McListOption = this.options.toArray()[focusedIndex];\n\n            if (focusedOption && this._canDeselectLast(focusedOption)) {\n                focusedOption.toggle();\n\n                // Emit a change event because the focused option changed its state through user interaction.\n                this._emitChangeEvent(focusedOption);\n            }\n        }\n    }\n\n    _canDeselectLast(listOption: McListOption): boolean {\n        return !(this.noUnselect && this.selectedOptions.selected.length === 1 && listOption.selected);\n    }\n\n    _getHeight(): number {\n        return this._element.nativeElement.getClientRects()[0].height;\n    }\n\n    // View to model callback that should be called if the list or its options lost focus.\n    _onTouched: () => void = () => {};\n\n    // Removes an option from the selection list and updates the active item.\n    _removeOptionFromList(option: McListOption) {\n        if (option._hasFocus) {\n            const optionIndex = this._getOptionIndex(option);\n\n            // Check whether the option is the last item\n            if (optionIndex > 0) {\n                this._keyManager.setPreviousItemActive();\n            } else if (optionIndex === 0 && this.options.length > 1) {\n                this._keyManager.setNextItemActive();\n            }\n        }\n    }\n\n    _onKeyDown(event: KeyboardEvent) {\n        const keyCode = event.keyCode;\n        this.withShift = event.shiftKey;\n        this.withCtrl = event.ctrlKey;\n\n        switch (keyCode) {\n            case SPACE:\n            case ENTER:\n                this.toggleFocusedOption();\n                event.preventDefault();\n\n                break;\n            case HOME:\n                this._keyManager.setFirstItemActive();\n                event.preventDefault();\n\n                break;\n            case END:\n                this._keyManager.setLastItemActive();\n                event.preventDefault();\n\n                break;\n            case PAGE_UP:\n                if (!this.horizontal) { this._keyManager.setPreviousPageItemActive(); }\n\n                event.preventDefault();\n\n                break;\n            case PAGE_DOWN:\n                if (!this.horizontal) { this._keyManager.setNextPageItemActive(); }\n\n                event.preventDefault();\n\n                break;\n            default:\n                this._keyManager.onKeydown(event);\n        }\n    }\n\n    // Reports a value change to the ControlValueAccessor\n    _reportValueChange() {\n        if (this.options) {\n            this._onChange(this.getSelectedOptionValues());\n        }\n    }\n\n    // Emits a change event if the selected state of an option changed.\n    _emitChangeEvent(option: McListOption) {\n        this.selectionChange.emit(new McListSelectionChange(this, option));\n    }\n\n    // Returns the option with the specified value.\n    private _getOptionByValue(value: string): McListOption | undefined {\n        return this.options.find((option) => option.value === value);\n    }\n\n    // Sets the selected options based on the specified values.\n    private _setOptionsFromValues(values: string[]) {\n        this.options.forEach((option) => option.setSelected(false));\n\n        values\n            .map((value) => this._getOptionByValue(value))\n            .filter(Boolean)\n            .forEach((option) => option!.setSelected(true));\n    }\n\n    /**\n     * Utility to ensure all indexes are valid.\n     * @param index The index to be checked.\n     * @returns True if the index is valid for our list of options.\n     */\n    private _isValidIndex(index: number): boolean {\n        return index >= 0 && index < this.options.length;\n    }\n\n    // Returns the index of the specified list option.\n    private _getOptionIndex(option: McListOption): number {\n        return this.options.toArray().indexOf(option);\n    }\n\n    // View to model callback that should be called whenever the selected options change.\n    private _onChange: (value: any) => void = (_: any) => {};\n}\n","// todo пока не делаем, перенесено из материала, но у нас в доках таких простых списков нет.\nimport {\n    AfterContentInit, ChangeDetectionStrategy, Component, ContentChildren, Directive, ElementRef, QueryList,\n    ViewEncapsulation\n} from '@angular/core';\n\nimport { McLine, McLineSetter } from '@ptsecurity/mosaic/core';\n\n\nexport class McListBase {}\n\n@Component({\n    selector: 'mc-list',\n    host: { class: 'mc-list' },\n    template: '<ng-content></ng-content>',\n    styleUrls: ['./list.css'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None\n})\nexport class McList extends McListBase {}\n\n\n/**\n * Directive whose purpose is to add the mc- CSS styling to this selector.\n * @docs-private\n */\n@Directive({\n    selector: '[mc-subheader], [mcSubheader]',\n    host: { class: 'mc-subheader' }\n})\nexport class McListSubheaderCssStyler {}\n\n\n// Boilerplate for applying mixins to McListItem.\nexport class McListItemBase {}\n\n@Component({\n    selector: 'mc-list-item, a[mc-list-item]',\n    host: {\n        class: 'mc-list-item',\n        '(focus)': '_handleFocus()',\n        '(blur)': '_handleBlur()'\n    },\n    templateUrl: './list-item.html',\n    encapsulation: ViewEncapsulation.None,\n    preserveWhitespaces: false,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class McListItem extends McListItemBase implements AfterContentInit {\n    @ContentChildren(McLine) _lines: QueryList<McLine>;\n\n    private _lineSetter: McLineSetter;\n\n    constructor(private _element: ElementRef) {\n        super();\n    }\n\n    ngAfterContentInit() {\n        this._lineSetter = new McLineSetter(this._lines, this._element);\n    }\n\n    _handleFocus() {\n        this._element.nativeElement.classList.add('mc-focused');\n    }\n\n    _handleBlur() {\n        this._element.nativeElement.classList.remove('mc-focused');\n    }\n\n    _getHostElement(): HTMLElement {\n        return this._element.nativeElement;\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { A11yModule } from '@ptsecurity/cdk/a11y';\n\nimport { McLineModule } from '@ptsecurity/mosaic/core';\n\nimport { McListSelection, McListOption } from './list-selection.component';\nimport { McList, McListItem, McListSubheaderCssStyler } from './list.component';\n\n\n@NgModule({\n    imports: [\n        CommonModule,\n        A11yModule,\n        McLineModule\n    ],\n    exports: [\n        McList,\n        McListSelection,\n        McListItem,\n        McListOption,\n        McListSubheaderCssStyler\n    ],\n    declarations: [\n        McList,\n        McListSelection,\n        McListItem,\n        McListOption,\n        McListSubheaderCssStyler\n    ]\n})\nexport class McListModule {}\n","import {\n    Input,\n    Attribute,\n    Component,\n    ElementRef,\n    OnDestroy,\n    ViewEncapsulation,\n    ChangeDetectionStrategy,\n    ChangeDetectorRef\n} from '@angular/core';\n\nimport { FocusMonitor } from '@ptsecurity/cdk/a11y';\nimport {\n    CanDisable, CanDisableCtor,\n    HasTabIndex, HasTabIndexCtor,\n    mixinDisabled,\n    mixinTabIndex,\n    toBoolean\n} from '@ptsecurity/mosaic/core';\n\n\nexport class McLinkBase {\n    constructor(public _elementRef: ElementRef) {\n    }\n}\n\nexport const _McLinkBase: HasTabIndexCtor & CanDisableCtor & typeof McLinkBase\n    = mixinTabIndex(mixinDisabled(McLinkBase));\n\n@Component({\n    selector: 'a.mc-link',\n    template: `<ng-content></ng-content>`,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n    exportAs: 'mcLink',\n    styleUrls: ['./link.css'],\n    inputs: ['disabled'],\n    host: {\n        '[attr.disabled]': 'disabled || null',\n        '[attr.tabindex]': 'tabIndex'\n    }\n})\n\nexport class McLink extends _McLinkBase implements OnDestroy, HasTabIndex, CanDisable {\n\n    @Input()\n    get disabled() {\n        return this._disabled;\n    }\n\n    set disabled(value: any) {\n        const newValue = toBoolean(value);\n\n        if (newValue !== this._disabled) {\n            this._disabled = newValue;\n            this._changeDetector.markForCheck();\n        }\n    }\n\n    private _disabled = false;\n\n    constructor(\n        @Attribute('tabindex') tabIndex: string,\n        public elementRef: ElementRef,\n        private _focusMonitor: FocusMonitor,\n        private _changeDetector: ChangeDetectorRef) {\n\n        super(elementRef);\n        this._focusMonitor.monitor(elementRef.nativeElement, true);\n        this.tabIndex = parseInt(tabIndex) || 0;\n    }\n\n    ngOnDestroy() {\n        this._focusMonitor.stopMonitoring(this.elementRef.nativeElement);\n    }\n\n    focus(): void {\n        this._getHostElement().focus();\n    }\n\n    _getHostElement() {\n        return this.elementRef.nativeElement;\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { A11yModule } from '@ptsecurity/cdk/a11y';\n\nimport { McLink } from './link.component';\n\n\n@NgModule({\n    imports: [\n        CommonModule,\n        A11yModule\n    ],\n    declarations: [McLink],\n    exports: [McLink]\n})\nexport class McLinkModule {}\n","import {\n    AfterContentInit,\n    AfterViewChecked,\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    EventEmitter,\n    forwardRef,\n    Inject,\n    Input,\n    OnChanges,\n    OnDestroy,\n    Optional,\n    Output,\n    SimpleChanges,\n    ViewChild,\n    ViewEncapsulation\n} from '@angular/core';\nimport { DateAdapter, MC_DATE_FORMATS, McDateFormats } from '@ptsecurity/cdk/datetime';\nimport { ComponentPortal, IComponentType, Portal } from '@ptsecurity/cdk/portal';\nimport { Subject, Subscription } from 'rxjs';\n\nimport { McCalendarCellCssClasses } from './calendar-body';\nimport { createMissingDateImplError } from './datepicker-errors';\nimport { McDatepickerIntl } from './datepicker-intl';\nimport { McMonthView } from './month-view';\nimport { McMultiYearView, yearsPerPage } from './multi-year-view';\nimport { McYearView } from './year-view';\n\n\n/**\n * Possible views for the calendar.\n * @docs-private\n */\nexport type McCalendarView = 'month' | 'year' | 'multi-year';\n\n/** Default header for McCalendar */\n@Component({\n    selector: 'mc-calendar-header',\n    templateUrl: 'calendar-header.html',\n    exportAs: 'mcCalendarHeader',\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class McCalendarHeader<D> {\n    constructor(private intl: McDatepickerIntl,\n                @Inject(forwardRef(() => McCalendar)) public calendar: McCalendar<D>,\n                @Optional() private dateAdapter: DateAdapter<D>,\n                @Optional() @Inject(MC_DATE_FORMATS) private dateFormats: McDateFormats,\n                changeDetectorRef: ChangeDetectorRef) {\n\n        this.calendar.stateChanges.subscribe(() => changeDetectorRef.markForCheck());\n    }\n\n    /** The label for the current calendar view. */\n    get periodButtonText(): string {\n        if (this.calendar.currentView === 'month') {\n            const label = this.dateAdapter\n                .format(this.calendar.activeDate, this.dateFormats.display.monthYearLabel);\n\n            return label[0].toLocaleUpperCase() + label.substr(1);\n        }\n\n        if (this.calendar.currentView === 'year') {\n            return this.dateAdapter.getYearName(this.calendar.activeDate);\n        }\n\n        const activeYear = this.dateAdapter.getYear(this.calendar.activeDate);\n        const firstYearInView = this.dateAdapter.getYearName(\n            // tslint:disable-next-line:no-magic-numbers\n            this.dateAdapter.createDate(activeYear - activeYear % 24, 0, 1));\n        const lastYearInView = this.dateAdapter.getYearName(\n            // tslint:disable-next-line:no-magic-numbers\n            this.dateAdapter.createDate(activeYear + yearsPerPage - 1 - activeYear % 24, 0, 1));\n\n        return `${firstYearInView} \\u2013 ${lastYearInView}`;\n    }\n\n    get periodButtonLabel(): string {\n        return this.calendar.currentView === 'month' ?\n            this.intl.switchToMultiYearViewLabel : this.intl.switchToMonthViewLabel;\n    }\n\n    /** The label for the previous button. */\n    get prevButtonLabel(): string {\n        return {\n            month: this.intl.prevMonthLabel,\n            year: this.intl.prevYearLabel,\n            'multi-year': this.intl.prevMultiYearLabel\n        }[this.calendar.currentView];\n    }\n\n    /** The label for the next button. */\n    get nextButtonLabel(): string {\n        return {\n            month: this.intl.nextMonthLabel,\n            year: this.intl.nextYearLabel,\n            'multi-year': this.intl.nextMultiYearLabel\n        }[this.calendar.currentView];\n    }\n\n    /** Handles user clicks on the period label. */\n    currentPeriodClicked(): void {\n        this.calendar.currentView = this.calendar.currentView === 'month' ? 'multi-year' : 'month';\n    }\n\n    /** Handles user clicks on the previous button. */\n    previousClicked(): void {\n        this.calendar.activeDate = this.calendar.currentView === 'month' ?\n            this.dateAdapter.addCalendarMonths(this.calendar.activeDate, -1) :\n            this.dateAdapter.addCalendarYears(\n                this.calendar.activeDate, this.calendar.currentView === 'year' ? -1 : -yearsPerPage\n            );\n    }\n\n    /** Handles user clicks on the next button. */\n    nextClicked(): void {\n        this.calendar.activeDate = this.calendar.currentView === 'month' ?\n            this.dateAdapter.addCalendarMonths(this.calendar.activeDate, 1) :\n            this.dateAdapter.addCalendarYears(\n                this.calendar.activeDate,\n                this.calendar.currentView === 'year' ? 1 : yearsPerPage\n            );\n    }\n\n    /** Whether the previous period button is enabled. */\n    previousEnabled(): boolean {\n        if (!this.calendar.minDate) {\n            return true;\n        }\n\n        return !this.calendar.minDate ||\n            !this.isSameView(this.calendar.activeDate, this.calendar.minDate);\n    }\n\n    /** Whether the next period button is enabled. */\n    nextEnabled(): boolean {\n        return !this.calendar.maxDate ||\n            !this.isSameView(this.calendar.activeDate, this.calendar.maxDate);\n    }\n\n    /** Whether the two dates represent the same view in the current view mode (month or year). */\n    private isSameView(date1: D, date2: D): boolean {\n        if (this.calendar.currentView === 'month') {\n            return this.dateAdapter.getYear(date1) === this.dateAdapter.getYear(date2) &&\n                this.dateAdapter.getMonth(date1) === this.dateAdapter.getMonth(date2);\n        }\n        if (this.calendar.currentView === 'year') {\n            return this.dateAdapter.getYear(date1) === this.dateAdapter.getYear(date2);\n        }\n\n        // Otherwise we are in 'multi-year' view.\n        return Math.floor(this.dateAdapter.getYear(date1) / yearsPerPage) ===\n            Math.floor(this.dateAdapter.getYear(date2) / yearsPerPage);\n    }\n}\n\n/**\n * A calendar that is used as part of the datepicker.\n * @docs-private\n */\n@Component({\n    selector: 'mc-calendar',\n    templateUrl: 'calendar.html',\n    styleUrls: ['calendar.css'],\n    host: {\n        class: 'mc-calendar'\n    },\n    exportAs: 'mcCalendar',\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class McCalendar<D> implements AfterContentInit, AfterViewChecked, OnDestroy, OnChanges {\n\n    /** A date representing the period (month or year) to start the calendar in. */\n    @Input()\n    get startAt(): D | null {\n        return this._startAt;\n    }\n\n    set startAt(value: D | null) {\n        this._startAt = this.getValidDateOrNull(this.dateAdapter.deserialize(value));\n    }\n\n    /** The currently selected date. */\n    @Input()\n    get selected(): D | null {\n        return this._selected;\n    }\n\n    set selected(value: D | null) {\n        this._selected = this.getValidDateOrNull(this.dateAdapter.deserialize(value));\n    }\n\n    /** The minimum selectable date. */\n    @Input()\n    get minDate(): D | null {\n        return this._minDate;\n    }\n\n    set minDate(value: D | null) {\n        this._minDate = this.getValidDateOrNull(this.dateAdapter.deserialize(value));\n    }\n\n    /** The maximum selectable date. */\n    @Input()\n    get maxDate(): D | null {\n        return this._maxDate;\n    }\n\n    set maxDate(value: D | null) {\n        this._maxDate = this.getValidDateOrNull(this.dateAdapter.deserialize(value));\n    }\n\n    /**\n     * The current active date. This determines which time period is shown and which date is\n     * highlighted when using keyboard navigation.\n     */\n    get activeDate(): D {\n        return this.clampedActiveDate;\n    }\n\n    set activeDate(value: D) {\n        this.clampedActiveDate = this.dateAdapter.clampDate(value, this.minDate, this.maxDate);\n        this.stateChanges.next();\n    }\n\n    /** Whether the calendar is in month view. */\n    get currentView(): McCalendarView {\n        return this._currentView;\n    }\n\n    set currentView(value: McCalendarView) {\n        this._currentView = value;\n        this.moveFocusOnNextTick = true;\n    }\n\n    /** An input indicating the type of the header component, if set. */\n    @Input() headerComponent: IComponentType<any>;\n\n    /** A portal containing the header component type for this calendar. */\n    calendarHeaderPortal: Portal<any>;\n\n    /** Whether the calendar should be started in month or year view. */\n    @Input() startView: McCalendarView = 'month';\n\n    /** Function used to filter which dates are selectable. */\n    @Input() dateFilter: (date: D) => boolean;\n\n    /** Function that can be used to add custom CSS classes to dates. */\n    @Input() dateClass: (date: D) => McCalendarCellCssClasses;\n\n    /** Emits when the currently selected date changes. */\n    @Output() readonly selectedChange: EventEmitter<D> = new EventEmitter<D>();\n\n    /**\n     * Emits the year chosen in multiyear view.\n     * This doesn't imply a change on the selected date.\n     */\n    @Output() readonly yearSelected: EventEmitter<D> = new EventEmitter<D>();\n\n    /**\n     * Emits the month chosen in year view.\n     * This doesn't imply a change on the selected date.\n     */\n    @Output() readonly monthSelected: EventEmitter<D> = new EventEmitter<D>();\n\n    /** Emits when any date is selected. */\n    @Output() readonly userSelection: EventEmitter<void> = new EventEmitter<void>();\n\n    /** Reference to the current month view component. */\n    @ViewChild(McMonthView) monthView: McMonthView<D>;\n\n    /** Reference to the current year view component. */\n    @ViewChild(McYearView) yearView: McYearView<D>;\n\n    /** Reference to the current multi-year view component. */\n    @ViewChild(McMultiYearView) multiYearView: McMultiYearView<D>;\n\n    /**\n     * Emits whenever there is a state change that the header may need to respond to.\n     */\n    stateChanges = new Subject<void>();\n\n    private intlChanges: Subscription;\n\n    /**\n     * Used for scheduling that focus should be moved to the active cell on the next tick.\n     * We need to schedule it, rather than do it immediately, because we have to wait\n     * for Angular to re-evaluate the view children.\n     */\n    private moveFocusOnNextTick = false;\n    private _startAt: D | null;\n    private _selected: D | null;\n    private _minDate: D | null;\n    private _maxDate: D | null;\n    private clampedActiveDate: D;\n    private _currentView: McCalendarView;\n\n    constructor(\n        intl: McDatepickerIntl,\n        @Optional() private dateAdapter: DateAdapter<D>,\n        @Optional() @Inject(MC_DATE_FORMATS) private dateFormats: McDateFormats,\n        private changeDetectorRef: ChangeDetectorRef\n    ) {\n        if (!this.dateAdapter) {\n            throw createMissingDateImplError('DateAdapter');\n        }\n\n        if (!this.dateFormats) {\n            throw createMissingDateImplError('MC_DATE_FORMATS');\n        }\n\n        this.intlChanges = intl.changes.subscribe(() => {\n            changeDetectorRef.markForCheck();\n            this.stateChanges.next();\n        });\n    }\n\n    ngAfterContentInit() {\n        this.calendarHeaderPortal = new ComponentPortal(this.headerComponent || McCalendarHeader);\n        this.activeDate = this.startAt || this.dateAdapter.today();\n\n        // Assign to the private property since we don't want to move focus on init.\n        this._currentView = this.startView;\n    }\n\n    ngAfterViewChecked() {\n        if (this.moveFocusOnNextTick) {\n            this.moveFocusOnNextTick = false;\n            this.focusActiveCell();\n        }\n    }\n\n    ngOnDestroy() {\n        this.intlChanges.unsubscribe();\n        this.stateChanges.complete();\n    }\n\n    ngOnChanges(changes: SimpleChanges) {\n        const change = changes.minDate || changes.maxDate || changes.dateFilter;\n\n        if (change && !change.firstChange) {\n            const view = this.getCurrentViewComponent();\n\n            if (view) {\n                // We need to `detectChanges` manually here, because the `minDate`, `maxDate` etc. are\n                // passed down to the view via data bindings which won't be up-to-date when we call `init`.\n                this.changeDetectorRef.detectChanges();\n                view.init();\n            }\n        }\n\n        this.stateChanges.next();\n    }\n\n    focusActiveCell() {\n        this.getCurrentViewComponent().focusActiveCell();\n    }\n\n    /** Updates today's date after an update of the active date */\n    updateTodaysDate() {\n        const view = this.currentView === 'month' ? this.monthView :\n            (this.currentView === 'year' ? this.yearView : this.multiYearView);\n\n        view.ngAfterContentInit();\n    }\n\n    /** Handles date selection in the month view. */\n    dateSelected(date: D): void {\n        if (!this.dateAdapter.sameDate(date, this.selected)) {\n            this.selectedChange.emit(date);\n        }\n    }\n\n    /** Handles year selection in the multiyear view. */\n    yearSelectedInMultiYearView(normalizedYear: D) {\n        this.yearSelected.emit(normalizedYear);\n    }\n\n    /** Handles month selection in the year view. */\n    monthSelectedInYearView(normalizedMonth: D) {\n        this.monthSelected.emit(normalizedMonth);\n    }\n\n    userSelected(): void {\n        this.userSelection.emit();\n    }\n\n    /** Handles year/month selection in the multi-year/year views. */\n    goToDateInView(date: D, view: 'month' | 'year' | 'multi-year'): void {\n        this.activeDate = date;\n        this.currentView = view;\n    }\n\n    /**\n     * @param obj The object to check.\n     * @returns The given object if it is both a date instance and valid, otherwise null.\n     */\n    private getValidDateOrNull(obj: any): D | null {\n        return (this.dateAdapter.isDateInstance(obj) && this.dateAdapter.isValid(obj)) ? obj : null;\n    }\n\n    /** Returns the component instance that corresponds to the current calendar view. */\n    private getCurrentViewComponent() {\n        return this.monthView || this.yearView || this.multiYearView;\n    }\n}\n","import {\n    animate,\n    state,\n    style,\n    transition,\n    trigger,\n    AnimationTriggerMetadata\n} from '@angular/animations';\n\n\n/**\n * Animations used by the mosaic datepicker.\n * @docs-private\n */\nexport const mcDatepickerAnimations: {\n    readonly transformPanel: AnimationTriggerMetadata;\n    readonly fadeInCalendar: AnimationTriggerMetadata;\n} = {\n    /** Transforms the height of the datepicker's calendar. */\n    transformPanel: trigger('transformPanel', [\n        state('void', style({\n            opacity: 0,\n            transform: 'scale(1, 0.8)'\n        })),\n        transition('void => enter', animate('120ms cubic-bezier(0, 0, 0.2, 1)', style({\n            opacity: 1,\n            transform: 'scale(1, 1)'\n        }))),\n        transition('* => void', animate('100ms linear', style({ opacity: 0 })))\n    ]),\n\n    /** Fades in the content of the calendar. */\n    fadeInCalendar: trigger('fadeInCalendar', [\n        state('void', style({ opacity: 0 })),\n        state('enter', style({ opacity: 1 })),\n\n        // need to keep it until #12440 gets in, otherwise the exit animation will look glitchy.\n        transition('void => *', animate('120ms 100ms cubic-bezier(0.55, 0, 0.55, 0.2)'))\n    ])\n};\n\n// todo should be put into polyfils\n// https://github.com/angular/angular/issues/24769\nif (!Element.prototype.matches) {\n    Element.prototype.matches = (Element.prototype as any).msMatchesSelector;\n}\n","// tslint:disable:no-unbound-method\n// tslint:disable:no-magic-numbers\nimport { DOCUMENT } from '@angular/common';\nimport {\n    AfterViewInit,\n    ChangeDetectionStrategy,\n    Component,\n    ComponentRef,\n    ElementRef,\n    EventEmitter,\n    Inject,\n    InjectionToken,\n    Input,\n    NgZone,\n    OnDestroy,\n    Optional,\n    Output,\n    ViewChild,\n    ViewContainerRef,\n    ViewEncapsulation\n} from '@angular/core';\nimport { Directionality } from '@ptsecurity/cdk/bidi';\nimport { coerceBooleanProperty } from '@ptsecurity/cdk/coercion';\nimport { DateAdapter } from '@ptsecurity/cdk/datetime';\nimport { ESCAPE, UP_ARROW } from '@ptsecurity/cdk/keycodes';\nimport {\n    Overlay,\n    OverlayConfig,\n    OverlayRef,\n    IPositionStrategy,\n    IScrollStrategy\n} from '@ptsecurity/cdk/overlay';\nimport { ComponentPortal, IComponentType } from '@ptsecurity/cdk/portal';\nimport {\n    CanColor,\n    CanColorCtor,\n    mixinColor,\n    ThemePalette\n} from '@ptsecurity/mosaic/core';\nimport { McFormFieldControl } from '@ptsecurity/mosaic/form-field';\nimport { merge, Observable, Subject, Subscription } from 'rxjs';\nimport { filter, take } from 'rxjs/operators';\n\nimport { McCalendar } from './calendar';\nimport { McCalendarCellCssClasses } from './calendar-body';\nimport { mcDatepickerAnimations } from './datepicker-animations';\nimport { createMissingDateImplError } from './datepicker-errors';\nimport { McDatepickerInput } from './datepicker-input';\n\n\n/** Used to generate a unique ID for each datepicker instance. */\nlet datepickerUid = 0;\n\n/** Injection token that determines the scroll handling while the calendar is open. */\nexport const MC_DATEPICKER_SCROLL_STRATEGY =\n    new InjectionToken<() => IScrollStrategy>('mc-datepicker-scroll-strategy');\n\n/** @docs-private */\n// tslint:disable-next-line:naming-convention\nexport function MC_DATEPICKER_SCROLL_STRATEGY_FACTORY(overlay: Overlay): () => IScrollStrategy {\n    return () => overlay.scrollStrategies.reposition();\n}\n\n/** @docs-private */\nexport const MC_DATEPICKER_SCROLL_STRATEGY_FACTORY_PROVIDER = {\n    provide: MC_DATEPICKER_SCROLL_STRATEGY,\n    deps: [Overlay],\n    useFactory: MC_DATEPICKER_SCROLL_STRATEGY_FACTORY\n};\n\n// Boilerplate for applying mixins to McDatepickerContent.\n/** @docs-private */\nexport class McDatepickerContentBase {\n    // tslint:disable-next-line:naming-convention\n    constructor(public _elementRef: ElementRef) {\n    }\n}\n\n// tslint:disable-next-line:naming-convention\nexport const McDatepickerContentMixinBase: CanColorCtor & typeof McDatepickerContentBase =\n    mixinColor(McDatepickerContentBase);\n\n/**\n * Component used as the content for the datepicker dialog and popup. We use this instead of using\n * McCalendar directly as the content so we can control the initial focus. This also gives us a\n * place to put additional features of the popup that are not part of the calendar itself in the\n * future. (e.g. confirmation buttons).\n * @docs-private\n */\n@Component({\n    selector: 'mc-datepicker__content',\n    templateUrl: 'datepicker-content.html',\n    styleUrls: ['datepicker-content.css'],\n    host: {\n        class: 'mc-datepicker__content',\n        '[@transformPanel]': '\"enter\"'\n    },\n    animations: [\n        mcDatepickerAnimations.transformPanel,\n        mcDatepickerAnimations.fadeInCalendar\n    ],\n    exportAs: 'mcDatepickerContent',\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    inputs: ['color']\n})\nexport class McDatepickerContent<D> extends McDatepickerContentMixinBase\n    implements AfterViewInit, CanColor {\n\n    /** Reference to the internal calendar component. */\n    @ViewChild(McCalendar) calendar: McCalendar<D>;\n\n    /** Reference to the datepicker that created the overlay. */\n    datepicker: McDatepicker<D>;\n\n    /** Whether the datepicker is above or below the input. */\n    isAbove: boolean;\n\n    constructor(elementRef: ElementRef) {\n        super(elementRef);\n    }\n\n    ngAfterViewInit() {\n        this.calendar.focusActiveCell();\n    }\n}\n\n\n// TODO: We use a component instead of a directive here so the user can use implicit\n// template reference variables (e.g. #d vs #d=\"mcDatepicker\"). We can change this to a directive\n// if angular adds support for `exportAs: '$implicit'` on directives.\n/** Component responsible for managing the datepicker popup/dialog. */\n@Component({\n    selector: 'mc-datepicker',\n    template: '',\n    exportAs: 'mcDatepicker',\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n    providers: [{ provide: McFormFieldControl, useExisting: McDatepicker }]\n})\nexport class McDatepicker<D> implements OnDestroy, CanColor {\n\n    /** The date to open the calendar to initially. */\n    @Input()\n    get startAt(): D | null {\n        // If an explicit startAt is set we start there, otherwise we start at whatever the currently\n        // selected value is.\n        return this._startAt || (this.datepickerInput ? this.datepickerInput.value : null);\n    }\n\n    set startAt(value: D | null) {\n        this._startAt = this.getValidDateOrNull(this.dateAdapter.deserialize(value));\n    }\n\n    /** Color palette to use on the datepicker's calendar. */\n    @Input()\n    get color(): ThemePalette {\n        // @ts-ignore:next-line\n        return this._color ||\n            (this.datepickerInput ? this.datepickerInput.getThemePalette() : undefined);\n    }\n\n    set color(value: ThemePalette) {\n        this._color = value;\n    }\n\n    /** Whether the datepicker pop-up should be disabled. */\n    @Input()\n    get disabled(): boolean {\n        return this._disabled === undefined && this.datepickerInput ?\n            this.datepickerInput.disabled : !!this._disabled;\n    }\n\n    set disabled(value: boolean) {\n        const newValue = coerceBooleanProperty(value);\n\n        if (newValue !== this._disabled) {\n            this._disabled = newValue;\n            this.disabledChange.next(newValue);\n        }\n    }\n\n    /** Whether the calendar is open. */\n    @Input()\n    get opened(): boolean {\n        return this._opened;\n    }\n\n    set opened(value: boolean) {\n        if (value) {\n            this.open();\n        } else {\n            this.close();\n        }\n    }\n\n    /** The currently selected date. */\n    get selected(): D | null {\n        return this.validSelected;\n    }\n\n    set selected(value: D | null) {\n        this.validSelected = value;\n    }\n\n    /** The minimum selectable date. */\n    get minDate(): D | null {\n        return this.datepickerInput && this.datepickerInput.min;\n    }\n\n    /** The maximum selectable date. */\n    get maxDate(): D | null {\n        return this.datepickerInput && this.datepickerInput.max;\n    }\n\n    get dateFilter(): (date: D | null) => boolean {\n        return this.datepickerInput && this.datepickerInput.dateFilter;\n    }\n\n\n    get value(): D | null {\n        return this.selected;\n    }\n\n    /** An input indicating the type of the custom header component for the calendar, if set. */\n    @Input() calendarHeaderComponent: IComponentType<any>;\n\n    /** The view that the calendar should start in. */\n    @Input() startView: 'month' | 'year' | 'multi-year' = 'month';\n\n    /**\n     * Emits selected year in multiyear view.\n     * This doesn't imply a change on the selected date.\n     */\n    @Output() readonly yearSelected: EventEmitter<D> = new EventEmitter<D>();\n\n    /**\n     * Emits selected month in year view.\n     * This doesn't imply a change on the selected date.\n     */\n    @Output() readonly monthSelected: EventEmitter<D> = new EventEmitter<D>();\n\n    /** Classes to be passed to the date picker panel. Supports the same syntax as `ngClass`. */\n    @Input() panelClass: string | string[];\n\n    /** Function that can be used to add custom CSS classes to dates. */\n    @Input() dateClass: (date: D) => McCalendarCellCssClasses;\n\n    /** Emits when the datepicker has been opened. */\n    @Output('opened') openedStream: EventEmitter<void> = new EventEmitter<void>();\n\n    /** Emits when the datepicker has been closed. */\n    @Output('closed') closedStream: EventEmitter<void> = new EventEmitter<void>();\n\n    /** The id for the datepicker calendar. */\n    id: string = `mc-datepicker-${datepickerUid++}`;\n\n    /** A reference to the overlay when the calendar is opened as a popup. */\n    popupRef: OverlayRef;\n\n    /** The input element this datepicker is associated with. */\n    datepickerInput: McDatepickerInput<D>;\n\n    readonly stateChanges: Observable<void> = new Subject<void>();\n\n    /** Emits when the datepicker is disabled. */\n    readonly disabledChange = new Subject<boolean>();\n\n    /** Emits new selected date when selected date changes. */\n    readonly selectedChanged = new Subject<D>();\n    private scrollStrategy: () => IScrollStrategy;\n    private _startAt: D | null;\n    private _disabled: boolean;\n    private _opened = false;\n    private validSelected: D | null = null;\n    private _color: ThemePalette;\n\n    /** A portal containing the calendar for this datepicker. */\n    private calendarPortal: ComponentPortal<McDatepickerContent<D>>;\n\n    /** Reference to the component instantiated in popup mode. */\n    private popupComponentRef: ComponentRef<McDatepickerContent<D>> | null;\n\n    /** The element that was focused before the datepicker was opened. */\n    private focusedElementBeforeOpen: HTMLElement | null = null;\n\n    /** Subscription to value changes in the associated input element. */\n    private inputSubscription = Subscription.EMPTY;\n\n    constructor(private overlay: Overlay,\n                private ngZone: NgZone,\n                private viewContainerRef: ViewContainerRef,\n                @Inject(MC_DATEPICKER_SCROLL_STRATEGY) scrollStrategy: any,\n                @Optional() private dateAdapter: DateAdapter<D>,\n                @Optional() private dir: Directionality,\n                @Optional() @Inject(DOCUMENT) private document: any) {\n        if (!this.dateAdapter) {\n            throw createMissingDateImplError('DateAdapter');\n        }\n\n        this.scrollStrategy = scrollStrategy;\n    }\n\n    ngOnDestroy() {\n        this.close();\n        this.inputSubscription.unsubscribe();\n        this.disabledChange.complete();\n\n        if (this.popupRef) {\n            this.popupRef.dispose();\n            this.popupComponentRef = null;\n        }\n    }\n\n    /** Selects the given date */\n    select(date: D): void {\n        const oldValue = this.selected;\n        this.selected = date;\n        if (!this.dateAdapter.sameDate(oldValue, this.selected)) {\n            this.selectedChanged.next(date);\n        }\n    }\n\n    /** Emits the selected year in multiyear view */\n    selectYear(normalizedYear: D): void {\n        this.yearSelected.emit(normalizedYear);\n    }\n\n    /** Emits selected month in year view */\n    selectMonth(normalizedMonth: D): void {\n        this.monthSelected.emit(normalizedMonth);\n    }\n\n    /**\n     * Register an input with this datepicker.\n     * @param input The datepicker input to register with this datepicker.\n     */\n    registerInput(input: McDatepickerInput<D>): void {\n        if (this.datepickerInput) {\n            throw Error('A McDatepicker can only be associated with a single input.');\n        }\n        this.datepickerInput = input;\n        this.inputSubscription =\n            this.datepickerInput.valueChange.subscribe((value: D | null) => this.selected = value);\n    }\n\n    /** Open the calendar. */\n    open(): void {\n        if (this._opened || this.disabled) {\n            return;\n        }\n        if (!this.datepickerInput) {\n            throw Error('Attempted to open an McDatepicker with no associated input.');\n        }\n        if (this.document) {\n            this.focusedElementBeforeOpen = this.document.activeElement;\n        }\n\n        this.openAsPopup();\n\n        this._opened = true;\n        this.openedStream.emit();\n    }\n\n    /** Close the calendar. */\n    close(): void {\n        if (!this._opened) {\n            return;\n        }\n\n        if (this.popupRef && this.popupRef.hasAttached()) {\n            this.popupRef.detach();\n        }\n\n        if (this.calendarPortal && this.calendarPortal.isAttached) {\n            this.calendarPortal.detach();\n        }\n\n        const completeClose = () => {\n            // The `_opened` could've been reset already if\n            // we got two events in quick succession.\n            if (this._opened) {\n                this._opened = false;\n                this.closedStream.emit();\n                this.focusedElementBeforeOpen = null;\n            }\n        };\n\n        if (this.focusedElementBeforeOpen &&\n            typeof this.focusedElementBeforeOpen.focus === 'function') {\n            // Because IE moves focus asynchronously, we can't count on it being restored before we've\n            // marked the datepicker as closed. If the event fires out of sequence and the element that\n            // we're refocusing opens the datepicker on focus, the user could be stuck with not being\n            // able to close the calendar at all. We work around it by making the logic, that marks\n            // the datepicker as closed, async as well.\n            this.focusedElementBeforeOpen.focus();\n            setTimeout(completeClose);\n        } else {\n            completeClose();\n        }\n    }\n\n    /** Open the calendar as a popup. */\n    private openAsPopup(): void {\n        if (!this.calendarPortal) {\n            this.calendarPortal = new ComponentPortal<McDatepickerContent<D>>(McDatepickerContent,\n                this.viewContainerRef);\n        }\n\n        if (!this.popupRef) {\n            this.createPopup();\n        }\n\n        if (!this.popupRef.hasAttached()) {\n            this.popupComponentRef = this.popupRef.attach(this.calendarPortal);\n            this.popupComponentRef.instance.datepicker = this;\n            this.setColor();\n\n            // Update the position once the calendar has rendered.\n            this.ngZone.onStable.asObservable().pipe(take(1)).subscribe(() => {\n                this.popupRef.updatePosition();\n            });\n        }\n    }\n\n    /** Create the popup. */\n    private createPopup(): void {\n        const overlayConfig = new OverlayConfig({\n            positionStrategy: this.createPopupPositionStrategy(),\n            hasBackdrop: true,\n            backdropClass: 'mc-overlay-transparent-backdrop',\n            direction: this.dir,\n            scrollStrategy: this.scrollStrategy(),\n            panelClass: 'mc-datepicker__popup'\n        });\n\n        this.popupRef = this.overlay.create(overlayConfig);\n        this.popupRef.overlayElement.setAttribute('role', 'dialog');\n\n        merge(\n            this.popupRef.backdropClick(),\n            this.popupRef.detachments(),\n            this.popupRef.keydownEvents().pipe(filter((event) => {\n                // Closing on alt + up is only valid when there's an input associated with the datepicker.\n                // tslint:disable-next-line:deprecation\n                return event.keyCode === ESCAPE || (this.datepickerInput && event.altKey && event.keyCode === UP_ARROW);\n            }))\n        ).subscribe(() => this.close());\n    }\n\n    /** Create the popup PositionStrategy. */\n    private createPopupPositionStrategy(): IPositionStrategy {\n        return this.overlay.position()\n            .flexibleConnectedTo(this.datepickerInput.elementRef)\n            .withTransformOriginOn('.mc-datepicker__content')\n            .withFlexibleDimensions(false)\n            .withViewportMargin(8)\n            .withLockedPosition()\n            .withPositions([\n                {\n                    originX: 'start',\n                    originY: 'bottom',\n                    overlayX: 'start',\n                    overlayY: 'top'\n                },\n                {\n                    originX: 'start',\n                    originY: 'top',\n                    overlayX: 'start',\n                    overlayY: 'bottom'\n                },\n                {\n                    originX: 'end',\n                    originY: 'bottom',\n                    overlayX: 'end',\n                    overlayY: 'top'\n                },\n                {\n                    originX: 'end',\n                    originY: 'top',\n                    overlayX: 'end',\n                    overlayY: 'bottom'\n                }\n            ]);\n    }\n\n    /**\n     * @param obj The object to check.\n     * @returns The given object if it is both a date instance and valid, otherwise null.\n     */\n    private getValidDateOrNull(obj: any): D | null {\n        return (this.dateAdapter.isDateInstance(obj) && this.dateAdapter.isValid(obj)) ? obj : null;\n    }\n\n    /** Passes the current theme color along to the calendar overlay. */\n    private setColor(): void {\n        const color = this.color;\n        if (this.popupComponentRef) {\n            this.popupComponentRef.instance.color = color;\n        }\n    }\n}\n","// tslint:disable:no-empty\nimport {\n    Directive,\n    ElementRef,\n    EventEmitter,\n    forwardRef,\n    Inject,\n    Input,\n    OnDestroy,\n    Optional,\n    Output\n} from '@angular/core';\nimport {\n    AbstractControl,\n    ControlValueAccessor,\n    NG_VALIDATORS,\n    NG_VALUE_ACCESSOR,\n    ValidationErrors,\n    Validator,\n    ValidatorFn,\n    Validators\n} from '@angular/forms';\nimport { coerceBooleanProperty } from '@ptsecurity/cdk/coercion';\nimport { DateAdapter, MC_DATE_FORMATS, McDateFormats } from '@ptsecurity/cdk/datetime';\nimport { DOWN_ARROW } from '@ptsecurity/cdk/keycodes';\nimport { ThemePalette } from '@ptsecurity/mosaic/core';\nimport { McFormField } from '@ptsecurity/mosaic/form-field';\nimport { MC_INPUT_VALUE_ACCESSOR } from '@ptsecurity/mosaic/input';\nimport { Subscription } from 'rxjs';\n\nimport { McDatepicker } from './datepicker';\nimport { createMissingDateImplError } from './datepicker-errors';\n\n\n/** @docs-private */\nexport const MC_DATEPICKER_VALUE_ACCESSOR: any = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => McDatepickerInput),\n    multi: true\n};\n\n/** @docs-private */\nexport const MC_DATEPICKER_VALIDATORS: any = {\n    provide: NG_VALIDATORS,\n    useExisting: forwardRef(() => McDatepickerInput),\n    multi: true\n};\n\n\n/**\n * An event used for datepicker input and change events. We don't always have access to a native\n * input or change event because the event may have been triggered by the user clicking on the\n * calendar popup. For consistency, we always use McDatepickerInputEvent instead.\n */\nexport class McDatepickerInputEvent<D> {\n    /** The new value for the target datepicker input. */\n    value: D | null;\n\n    constructor(\n        /** Reference to the datepicker input component that emitted the event. */\n        public target: McDatepickerInput<D>,\n        /** Reference to the native input element associated with the datepicker input. */\n        public targetElement: HTMLElement) {\n        this.value = this.target.value;\n    }\n}\n\n\n/** Directive used to connect an input to a McDatepicker. */\n@Directive({\n    selector: 'input[mcDatepicker]',\n    providers: [\n        MC_DATEPICKER_VALUE_ACCESSOR,\n        MC_DATEPICKER_VALIDATORS,\n        { provide: MC_INPUT_VALUE_ACCESSOR, useExisting: McDatepickerInput }\n    ],\n    host: {\n        '[attr.aria-haspopup]': 'true',\n        '[attr.aria-owns]': '(datepicker?.opened && datepicker.id) || null',\n        '[attr.min]': 'min ? dateAdapter.toIso8601(min) : null',\n        '[attr.max]': 'max ? dateAdapter.toIso8601(max) : null',\n        '[disabled]': 'disabled',\n        '(input)': 'onInput($event.target.value)',\n        '(change)': 'onChange()',\n        '(blur)': 'onBlur()',\n        '(keydown)': 'onKeydown($event)'\n    },\n    exportAs: 'mcDatepickerInput'\n})\nexport class McDatepickerInput<D> implements ControlValueAccessor, OnDestroy, Validator {\n    /** The datepicker that this input is associated with. */\n    @Input()\n    set mcDatepicker(value: McDatepicker<D>) {\n        if (!value) {\n            return;\n        }\n\n        this.datepicker = value;\n        this.datepicker.registerInput(this);\n        this.datepickerSubscription.unsubscribe();\n\n        this.datepickerSubscription = this.datepicker.selectedChanged.subscribe((selected: D) => {\n            this.value = selected;\n            this.cvaOnChange(selected);\n            this.onTouched();\n            this.dateInput.emit(new McDatepickerInputEvent(this, this.elementRef.nativeElement));\n            this.dateChange.emit(new McDatepickerInputEvent(this, this.elementRef.nativeElement));\n        });\n    }\n\n    /** Function that can be used to filter out dates within the datepicker. */\n    @Input()\n    set mcDatepickerFilter(value: (date: D | null) => boolean) {\n        this.dateFilter = value;\n        this.validatorOnChange();\n    }\n\n    /** The value of the input. */\n    @Input()\n    get value(): D | null {\n        return this._value;\n    }\n\n    set value(value: D | null) {\n        // tslint:disable-next-line:no-parameter-reassignment\n        value = this.dateAdapter.deserialize(value);\n        this.lastValueValid = !value || this.dateAdapter.isValid(value);\n        // tslint:disable-next-line:no-parameter-reassignment\n        value = this.getValidDateOrNull(value);\n        const oldDate = this.value;\n        this._value = value;\n        this.formatValue(value);\n\n        if (!this.dateAdapter.sameDate(oldDate, value)) {\n            this.valueChange.emit(value);\n        }\n    }\n\n    /** The minimum valid date. */\n    @Input()\n    get min(): D | null {\n        return this._min;\n    }\n\n    set min(value: D | null) {\n        this._min = this.getValidDateOrNull(this.dateAdapter.deserialize(value));\n        this.validatorOnChange();\n    }\n\n    /** The maximum valid date. */\n    @Input()\n    get max(): D | null {\n        return this._max;\n    }\n\n    set max(value: D | null) {\n        this._max = this.getValidDateOrNull(this.dateAdapter.deserialize(value));\n        this.validatorOnChange();\n    }\n\n    /** Whether the datepicker-input is disabled. */\n    @Input()\n    get disabled(): boolean {\n        return !!this._disabled;\n    }\n\n    set disabled(value: boolean) {\n        const newValue = coerceBooleanProperty(value);\n        const element = this.elementRef.nativeElement;\n\n        if (this._disabled !== newValue) {\n            this._disabled = newValue;\n            this.disabledChange.emit(newValue);\n        }\n\n        // We need to null check the `blur` method, because it's undefined during SSR.\n        if (newValue && element.blur) {\n            // Normally, native input elements automatically blur if they turn disabled. This behavior\n            // is problematic, because it would mean that it triggers another change detection cycle,\n            // which then causes a changed after checked error if the input element was focused before.\n            element.blur();\n        }\n    }\n\n    datepicker: McDatepicker<D>;\n    dateFilter: (date: D | null) => boolean;\n\n    /** Emits when a `change` event is fired on this `<input>`. */\n    @Output() readonly dateChange: EventEmitter<McDatepickerInputEvent<D>> =\n        new EventEmitter<McDatepickerInputEvent<D>>();\n\n    /** Emits when an `input` event is fired on this `<input>`. */\n    @Output() readonly dateInput: EventEmitter<McDatepickerInputEvent<D>> =\n        new EventEmitter<McDatepickerInputEvent<D>>();\n\n    /** Emits when the value changes (either due to user input or programmatic change). */\n    valueChange = new EventEmitter<D | null>();\n\n    /** Emits when the disabled state has changed */\n    disabledChange = new EventEmitter<boolean>();\n    private _value: D | null;\n    private _min: D | null;\n    private _max: D | null;\n    private _disabled: boolean;\n\n    private datepickerSubscription = Subscription.EMPTY;\n\n    private localeSubscription = Subscription.EMPTY;\n\n    /** Whether the last value set on the input was valid. */\n    private lastValueValid = false;\n\n    constructor(\n        public elementRef: ElementRef<HTMLInputElement>,\n        @Optional() public dateAdapter: DateAdapter<D>,\n        @Optional() @Inject(MC_DATE_FORMATS) private dateFormats: McDateFormats,\n        @Optional() private formField: McFormField\n    ) {\n        if (!this.dateAdapter) {\n            throw createMissingDateImplError('DateAdapter');\n        }\n\n        if (!this.dateFormats) {\n            throw createMissingDateImplError('MC_DATE_FORMATS');\n        }\n\n        // Update the displayed date when the locale changes.\n        this.localeSubscription = dateAdapter.localeChanges.subscribe(() => {\n            this.value = this.value;\n        });\n    }\n\n    onTouched = () => {\n    }\n\n    ngOnDestroy() {\n        this.datepickerSubscription.unsubscribe();\n        this.localeSubscription.unsubscribe();\n        this.valueChange.complete();\n        this.disabledChange.complete();\n    }\n\n    /** @docs-private */\n    registerOnValidatorChange(fn: () => void): void {\n        this.validatorOnChange = fn;\n    }\n\n    /** @docs-private */\n    validate(c: AbstractControl): ValidationErrors | null {\n        return this.validator ? this.validator(c) : null;\n    }\n\n    // Implemented as part of ControlValueAccessor.\n    writeValue(value: D): void {\n        this.value = value;\n    }\n\n    // Implemented as part of ControlValueAccessor.\n    registerOnChange(fn: (value: any) => void): void {\n        this.cvaOnChange = fn;\n    }\n\n    // Implemented as part of ControlValueAccessor.\n    registerOnTouched(fn: () => void): void {\n        this.onTouched = fn;\n    }\n\n    // Implemented as part of ControlValueAccessor.\n    setDisabledState(isDisabled: boolean): void {\n        this.disabled = isDisabled;\n    }\n\n    onKeydown(event: KeyboardEvent) {\n        // tslint:disable-next-line:deprecation\n        const isAltDownArrow = event.altKey && event.keyCode === DOWN_ARROW;\n\n        if (this.datepicker && isAltDownArrow && !this.elementRef.nativeElement.readOnly) {\n            this.datepicker.open();\n            event.preventDefault();\n        }\n    }\n\n    onInput(value: string) {\n        let date = this.dateAdapter.parse(value, this.dateFormats.parse.dateInput);\n        this.lastValueValid = !date || this.dateAdapter.isValid(date);\n        date = this.getValidDateOrNull(date);\n\n        if (!this.dateAdapter.sameDate(date, this._value)) {\n            this._value = date;\n            this.cvaOnChange(date);\n            this.valueChange.emit(date);\n            this.dateInput.emit(new McDatepickerInputEvent(this, this.elementRef.nativeElement));\n        }\n    }\n\n    onChange() {\n        this.dateChange.emit(new McDatepickerInputEvent(this, this.elementRef.nativeElement));\n    }\n\n    /** Returns the palette used by the input's form field, if any. */\n    getThemePalette(): ThemePalette | undefined {\n        return this.formField ? this.formField.color : undefined;\n    }\n\n    /** Handles blur events on the input. */\n    onBlur() {\n        // Reformat the input only if we have a valid value.\n        if (this.value) {\n            this.formatValue(this.value);\n        }\n\n        this.onTouched();\n    }\n\n    private cvaOnChange: (value: any) => void = () => {\n    }\n\n    private validatorOnChange = () => {\n    }\n\n    /** The form control validator for whether the input parses. */\n    private parseValidator: ValidatorFn = (): ValidationErrors | null => {\n        return this.lastValueValid ?\n            null : { mcDatepickerParse: { text: this.elementRef.nativeElement.value } };\n    }\n\n    /** The form control validator for the min date. */\n    private minValidator: ValidatorFn = (control: AbstractControl): ValidationErrors | null => {\n        const controlValue = this.getValidDateOrNull(this.dateAdapter.deserialize(control.value));\n\n        return (!this.min || !controlValue ||\n            this.dateAdapter.compareDate(this.min, controlValue) <= 0) ?\n            null : { mcDatepickerMin: { min: this.min, actual: controlValue } };\n    }\n\n    /** The form control validator for the max date. */\n    private maxValidator: ValidatorFn = (control: AbstractControl): ValidationErrors | null => {\n        const controlValue = this.getValidDateOrNull(this.dateAdapter.deserialize(control.value));\n\n        return (!this.max || !controlValue ||\n            this.dateAdapter.compareDate(this.max, controlValue) >= 0) ?\n            null : { mcDatepickerMax: { max: this.max, actual: controlValue } };\n    }\n\n    /** The form control validator for the date filter. */\n    private filterValidator: ValidatorFn = (control: AbstractControl): ValidationErrors | null => {\n        const controlValue = this.getValidDateOrNull(this.dateAdapter.deserialize(control.value));\n\n        return !this.dateFilter || !controlValue || this.dateFilter(controlValue) ?\n            null : { mcDatepickerFilter: true };\n    }\n\n    /** Formats a value and sets it on the input element. */\n    private formatValue(value: D | null) {\n        this.elementRef.nativeElement.value =\n            value ? this.dateAdapter.format(value, this.dateFormats.display.dateInput) : '';\n    }\n\n    /** The combined form control validator for this input. */\n        // tslint:disable:member-ordering\n    private validator: ValidatorFn | null =\n        Validators.compose([\n            this.parseValidator,\n            this.minValidator,\n            this.maxValidator,\n            this.filterValidator\n        ]);\n\n    /**\n     * @param obj The object to check.\n     * @returns The given object if it is both a date instance and valid, otherwise null.\n     */\n    private getValidDateOrNull(obj: any): D | null {\n        return (this.dateAdapter.isDateInstance(obj) && this.dateAdapter.isValid(obj)) ? obj : null;\n    }\n}\n","import {\n    AfterContentInit,\n    Attribute,\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    ContentChild,\n    Directive,\n    Input,\n    OnChanges,\n    OnDestroy,\n    SimpleChanges,\n    ViewEncapsulation,\n    ViewChild\n} from '@angular/core';\nimport { coerceBooleanProperty } from '@ptsecurity/cdk/coercion';\nimport { McButton } from '@ptsecurity/mosaic/button';\nimport { merge, of as observableOf, Subscription } from 'rxjs';\n\nimport { McDatepicker } from './datepicker';\nimport { McDatepickerIntl } from './datepicker-intl';\n\n\n/** Can be used to override the icon of a `mcDatepickerToggle`. */\n@Directive({\n    selector: '[mcDatepickerToggleIcon]'\n})\nexport class McDatepickerToggleIcon {\n}\n\n\n@Component({\n    selector: 'mc-datepicker-toggle',\n    templateUrl: 'datepicker-toggle.html',\n    styleUrls: ['datepicker-toggle.css'],\n    host: {\n        class: 'mc-datepicker-toggle',\n        // Always set the tabindex to -1 so that it doesn't overlap with any custom tabindex the\n        // consumer may have provided, while still being able to receive focus.\n        '[attr.tabindex]': '-1',\n        '[class.mc-datepicker-toggle_active]': 'datepicker && datepicker.opened',\n        '[class.mc-warn]': 'datepicker && datepicker.color === \"error\"',\n        '(focus)': 'button.focus()'\n    },\n    exportAs: 'mcDatepickerToggle',\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class McDatepickerToggle<D> implements AfterContentInit, OnChanges, OnDestroy {\n\n    /** Whether the toggle button is disabled. */\n    @Input()\n    get disabled(): boolean {\n        return this._disabled === undefined ? this.datepicker.disabled : !!this._disabled;\n    }\n\n    set disabled(value: boolean) {\n        this._disabled = coerceBooleanProperty(value);\n    }\n\n    /** Datepicker instance that the button will toggle. */\n    @Input('for') datepicker: McDatepicker<D>;\n\n    /** Tabindex for the toggle. */\n    @Input() tabIndex: number | null;\n\n    /** Custom icon set by the consumer. */\n    @ContentChild(McDatepickerToggleIcon) customIcon: McDatepickerToggleIcon;\n\n    /** Underlying button element. */\n    @ViewChild('button') button: McButton;\n    private stateChanges = Subscription.EMPTY;\n\n    private _disabled: boolean;\n\n    constructor(\n        public intl: McDatepickerIntl,\n        private changeDetectorRef: ChangeDetectorRef,\n        @Attribute('tabindex') defaultTabIndex: string\n    ) {\n        const parsedTabIndex = Number(defaultTabIndex);\n        this.tabIndex = (parsedTabIndex || parsedTabIndex === 0) ? parsedTabIndex : null;\n    }\n\n    ngOnChanges(changes: SimpleChanges) {\n        if (changes.datepicker) {\n            this.watchStateChanges();\n        }\n    }\n\n    ngOnDestroy() {\n        this.stateChanges.unsubscribe();\n    }\n\n    ngAfterContentInit() {\n        this.watchStateChanges();\n    }\n\n    open(event: Event): void {\n        if (this.datepicker && !this.disabled) {\n            this.datepicker.open();\n            event.stopPropagation();\n        }\n    }\n\n    private watchStateChanges() {\n        const datepickerDisabled = this.datepicker ? this.datepicker.disabledChange : observableOf();\n        const inputDisabled = this.datepicker && this.datepicker.datepickerInput ?\n            this.datepicker.datepickerInput.disabledChange : observableOf();\n        const datepickerToggled = this.datepicker ?\n            merge(this.datepicker.openedStream, this.datepicker.closedStream) :\n            observableOf();\n\n        this.stateChanges.unsubscribe();\n        this.stateChanges = merge(\n            this.intl.changes,\n            datepickerDisabled,\n            inputDisabled,\n            datepickerToggled\n        ).subscribe(() => this.changeDetectorRef.markForCheck());\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { A11yModule } from '@ptsecurity/cdk/a11y';\nimport { OverlayModule } from '@ptsecurity/cdk/overlay';\nimport { PortalModule } from '@ptsecurity/cdk/portal';\nimport { McButtonModule } from '@ptsecurity/mosaic/button';\nimport { McIconModule } from '@ptsecurity/mosaic/icon';\n\nimport { McCalendar, McCalendarHeader } from './calendar';\nimport { McCalendarBody } from './calendar-body';\nimport {\n    McDatepicker,\n    McDatepickerContent,\n    MC_DATEPICKER_SCROLL_STRATEGY_FACTORY_PROVIDER\n} from './datepicker';\nimport { McDatepickerInput } from './datepicker-input';\nimport { McDatepickerIntl } from './datepicker-intl';\nimport { McDatepickerToggle, McDatepickerToggleIcon } from './datepicker-toggle';\nimport { McMonthView } from './month-view';\nimport { McMultiYearView } from './multi-year-view';\nimport { McYearView } from './year-view';\n\n\n@NgModule({\n    imports: [\n        CommonModule,\n        McButtonModule,\n        OverlayModule,\n        A11yModule,\n        PortalModule,\n        McButtonModule,\n        McIconModule\n    ],\n    exports: [\n        McCalendar,\n        McCalendarBody,\n        McDatepicker,\n        McDatepickerContent,\n        McDatepickerInput,\n        McDatepickerToggle,\n        McDatepickerToggleIcon,\n        McMonthView,\n        McYearView,\n        McMultiYearView,\n        McCalendarHeader\n    ],\n    declarations: [\n        McCalendar,\n        McCalendarBody,\n        McDatepicker,\n        McDatepickerContent,\n        McDatepickerInput,\n        McDatepickerToggle,\n        McDatepickerToggleIcon,\n        McMonthView,\n        McYearView,\n        McMultiYearView,\n        McCalendarHeader\n    ],\n    providers: [\n        McDatepickerIntl,\n        MC_DATEPICKER_SCROLL_STRATEGY_FACTORY_PROVIDER\n    ],\n    entryComponents: [\n        McDatepickerContent,\n        McCalendarHeader\n    ]\n})\nexport class McDatepickerModule {\n}\n","import { ChangeDetectionStrategy, Component, Input, ViewEncapsulation } from '@angular/core';\nimport { coerceBooleanProperty } from '@ptsecurity/cdk/coercion';\n\n\n@Component({\n    selector: 'mc-divider',\n    host: {\n        class: 'mc-divider',\n        role: 'separator',\n        '[attr.aria-orientation]': 'vertical ? \"vertical\" : \"horizontal\"',\n        '[class.mc-divider-vertical]': 'vertical',\n        '[class.mc-divider-inset]': 'inset'\n    },\n    template: '',\n    styleUrls: ['divider.css'],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    preserveWhitespaces: false\n})\nexport class McDivider {\n    // Whether the divider is vertically aligned.\n    @Input()\n    get vertical(): boolean {\n        return this._vertical;\n    }\n\n    set vertical(value: boolean) {\n        this._vertical = coerceBooleanProperty(value);\n    }\n\n    private _vertical: boolean = false;\n\n    // Whether the divider is an inset divider.\n    @Input()\n    get inset(): boolean {\n        return this._inset;\n    }\n\n    set inset(value: boolean) {\n        this._inset = coerceBooleanProperty(value);\n    }\n\n    private _inset: boolean = false;\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { McDivider } from './divider.component';\n\n\n@NgModule({\n    imports: [CommonModule],\n    exports: [McDivider],\n    declarations: [McDivider]\n})\nexport class McDividerModule {\n}\n","import { DOCUMENT } from '@angular/common';\nimport {\n    Directive,\n    TemplateRef,\n    ComponentFactoryResolver,\n    ApplicationRef,\n    Injector,\n    ViewContainerRef,\n    Inject,\n    OnDestroy\n} from '@angular/core';\nimport { TemplatePortal, DomPortalOutlet } from '@ptsecurity/cdk/portal';\nimport { Subject } from 'rxjs';\n\n\n/**\n * Dropdown content that will be rendered lazily once the dropdown is opened.\n */\n@Directive({\n    selector: 'ng-template[mcDropdownContent]'\n})\nexport class McDropdownContent implements OnDestroy {\n\n    /** Emits when the dropdown content has been attached. */\n    _attached = new Subject<void>();\n    private _portal: TemplatePortal;\n    private _outlet: DomPortalOutlet;\n\n    constructor(\n        private _template: TemplateRef<any>,\n        private _componentFactoryResolver: ComponentFactoryResolver,\n        private _appRef: ApplicationRef,\n        private _injector: Injector,\n        private _viewContainerRef: ViewContainerRef,\n        @Inject(DOCUMENT) private _document: any) {}\n\n    /**\n     * Attaches the content with a particular context.\n     * @docs-private\n     */\n    attach(context: any = {}) {\n        if (!this._portal) {\n            this._portal = new TemplatePortal(this._template, this._viewContainerRef);\n        }\n\n        this.detach();\n\n        if (!this._outlet) {\n            this._outlet = new DomPortalOutlet(this._document.createElement('div'),\n                this._componentFactoryResolver, this._appRef, this._injector);\n        }\n\n        const element: HTMLElement = this._template.elementRef.nativeElement;\n\n        // Because we support opening the same dropdown from different triggers (which in turn have their\n        // own `OverlayRef` panel), we have to re-insert the host element every time, otherwise we\n        // risk it staying attached to a pane that's no longer in the DOM.\n        element.parentNode!.insertBefore(this._outlet.outletElement, element);\n        this._portal.attach(this._outlet, context);\n        this._attached.next();\n    }\n\n    /**\n     * Detaches the content.\n     * @docs-private\n     */\n    detach() {\n        if (this._portal.isAttached) {\n            this._portal.detach();\n        }\n    }\n\n    ngOnDestroy() {\n        if (this._outlet) {\n            this._outlet.dispose();\n        }\n    }\n}\n","import { EventEmitter, TemplateRef, InjectionToken } from '@angular/core';\nimport { FocusOrigin } from '@ptsecurity/cdk/a11y';\nimport { Direction } from '@ptsecurity/cdk/bidi';\n\nimport { McDropdownContent } from './dropdown-content';\nimport { DropdownPositionX, DropdownPositionY } from './dropdown-positions';\n\n\n/**\n * Injection token used to provide the parent dropdown to dropdown-specific components.\n * @docs-private\n */\nexport const MC_DROPDOWN_PANEL = new InjectionToken<McDropdownPanel>('MC_DROPDOWN_PANEL');\n\n/**\n * Interface for a custom dropdown panel that can be used with `mcDropdownTriggerFor`.\n * @docs-private\n */\n// tslint:disable-next-line:interface-name\nexport interface McDropdownPanel<T = any> {\n    xPosition: DropdownPositionX;\n    yPosition: DropdownPositionY;\n    overlapTrigger: boolean;\n    templateRef: TemplateRef<any>;\n    closed: EventEmitter<void | 'click' | 'keydown' | 'tab'>;\n    direction?: Direction;\n    lazyContent?: McDropdownContent;\n    backdropClass?: string;\n    hasBackdrop?: boolean;\n    focusFirstItem(origin?: FocusOrigin): void;\n    resetActiveItem(): void;\n    setPositionClasses?(x: DropdownPositionX, y: DropdownPositionY): void;\n    addItem?(item: T): void;\n    removeItem?(item: T): void;\n}\n","import { DOCUMENT } from '@angular/common';\nimport {\n    ChangeDetectionStrategy,\n    Component,\n    ElementRef,\n    OnDestroy,\n    ViewEncapsulation,\n    Inject,\n    Optional\n} from '@angular/core';\nimport { IFocusableOption, FocusMonitor, FocusOrigin } from '@ptsecurity/cdk/a11y';\nimport {\n    CanDisable, CanDisableCtor,\n    mixinDisabled\n} from '@ptsecurity/mosaic/core';\n\nimport { MC_DROPDOWN_PANEL, McDropdownPanel } from './dropdown-panel';\n\n\n// Boilerplate for applying mixins to McDropdownItem.\n/** @docs-private */\nexport class McDropdownItemBase {}\nexport const _McDropdownItemMixinBase: CanDisableCtor & typeof McDropdownItemBase =\n    mixinDisabled(McDropdownItemBase);\n\n/**\n * This directive is intended to be used inside an mc-dropdown tag.\n * It exists mostly to set the role attribute.\n */\n@Component({\n    selector: 'mc-dropdown-item, [mc-dropdown-item]',\n    exportAs: 'mcDropdownItem',\n    inputs: ['disabled'],\n    host: {\n        role: 'dropdown-item',\n        class: 'mc-dropdown__item',\n        '[attr.tabindex]': '_getTabIndex()',\n        '[attr.disabled]': 'disabled || null',\n        '(click)': '_checkDisabled($event)'\n    },\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n    template: `<ng-content></ng-content>`\n})\nexport class McDropdownItem extends _McDropdownItemMixinBase\n    implements IFocusableOption, CanDisable, OnDestroy {\n\n    private _document: Document;\n\n    constructor(\n        private _elementRef: ElementRef<HTMLElement>,\n        @Inject(DOCUMENT) document: any,\n        private _focusMonitor: FocusMonitor,\n        @Inject(MC_DROPDOWN_PANEL) @Optional() private _parentDropdownPanel?: McDropdownPanel<McDropdownItem>) {\n        super();\n\n        if (_focusMonitor) {\n            // Start monitoring the element so it gets the appropriate focused classes. We want\n            // to show the focus style for dropdown items only when the focus was not caused by a\n            // mouse or touch interaction.\n            _focusMonitor.monitor(this._elementRef.nativeElement, false);\n        }\n\n        if (_parentDropdownPanel && _parentDropdownPanel.addItem) {\n            _parentDropdownPanel.addItem(this);\n        }\n\n        this._document = document;\n    }\n\n    /** Focuses the dropdown item. */\n    focus(origin: FocusOrigin = 'program'): void {\n        if (this._focusMonitor) {\n            this._focusMonitor.focusVia(this._getHostElement(), origin);\n        } else {\n            this._getHostElement().focus();\n        }\n    }\n\n    ngOnDestroy() {\n        if (this._focusMonitor) {\n            this._focusMonitor.stopMonitoring(this._elementRef.nativeElement);\n        }\n\n        if (this._parentDropdownPanel && this._parentDropdownPanel.removeItem) {\n            this._parentDropdownPanel.removeItem(this);\n        }\n    }\n\n    /** Used to set the `tabindex`. */\n    _getTabIndex(): string {\n        return this.disabled ? '-1' : '0';\n    }\n\n    /** Returns the host DOM element. */\n    _getHostElement(): HTMLElement {\n        return this._elementRef.nativeElement;\n    }\n\n    /** Prevents the default element actions if it is disabled. */\n    _checkDisabled(event: Event): void {\n        if (this.disabled) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n    }\n\n    /** Gets the label to be used when determining whether the option should be focused. */\n    getLabel(): string {\n        const element: HTMLElement = this._elementRef.nativeElement;\n        // tslint:disable-next-line:no-magic-numbers\n        const textNodeType = this._document ? this._document.TEXT_NODE : 3;\n        let output = '';\n\n        if (element.childNodes) {\n            const length = element.childNodes.length;\n\n            // Go through all the top-level text nodes and extract their text.\n            // We skip anything that's not a text node to prevent the text from\n            // being thrown off by something like an icon.\n            for (let i = 0; i < length; i++) {\n                if (element.childNodes[i].nodeType === textNodeType) {\n                    output += element.childNodes[i].textContent;\n                }\n            }\n        }\n\n        return output.trim();\n    }\n}\n","import {\n    trigger,\n    state,\n    style,\n    animate,\n    transition,\n    query,\n    group,\n    AnimationTriggerMetadata\n} from '@angular/animations';\n\n\n/**\n * Animations used by the mc-dropdown component.\n * Animation duration and timing values are based on:\n * https://material.io/guidelines/components/menus.html#menus-usage\n * @docs-private\n */\nexport const mcDropdownAnimations: {\n    readonly transformDropdown: AnimationTriggerMetadata;\n    readonly fadeInItems: AnimationTriggerMetadata;\n} = {\n    /**\n     * This animation controls the dropdown panel's entry and exit from the page.\n     *\n     * When the dropdown panel is added to the DOM, it scales in and fades in its border.\n     *\n     * When the dropdown panel is removed from the DOM, it simply fades out after a brief\n     * delay to display the ripple.\n     */\n    transformDropdown: trigger('transformDropdown', [\n        state('void', style({\n            opacity: 0,\n            transform: 'scale(0.8)'\n        })),\n        transition('void => enter', group([\n            query('.mc-dropdown__content', animate('50ms linear', style({opacity: 1}))),\n            animate('50ms cubic-bezier(0, 0, 0.2, 1)', style({transform: 'scale(1)'}))\n        ])),\n        transition('* => void', animate('50ms 25ms linear', style({opacity: 0})))\n    ]),\n\n\n    /**\n     * This animation fades in the background color and content of the dropdown panel\n     * after its containing element is scaled in.\n     */\n    fadeInItems: trigger('fadeInItems', [\n        // now. Remove next time we do breaking changes.\n        state('showing', style({opacity: 1})),\n        transition('void => *', [\n            style({opacity: 0}),\n            animate('200ms 60ms cubic-bezier(0.55, 0, 0.55, 0.2)')\n        ])\n    ])\n};\n\nexport const fadeInItems = mcDropdownAnimations.fadeInItems;\n\nexport const transformDropdown = mcDropdownAnimations.transformDropdown;\n","import {\n    Attribute,\n    Directive, DoCheck, ElementRef, Inject, Input, OnChanges,\n    OnDestroy, Optional, Self\n} from '@angular/core';\nimport {\n    FormGroupDirective,\n    NgControl,\n    NgForm, NgModel\n} from '@angular/forms';\nimport { coerceBooleanProperty } from '@ptsecurity/cdk/coercion';\nimport {\n    END, C, V, X, A, DELETE, BACKSPACE, TAB, ENTER,\n    ESCAPE, ZERO, NINE, NUMPAD_ZERO, NUMPAD_NINE, NUMPAD_MINUS, DASH,\n    FF_MINUS, LEFT_ARROW, RIGHT_ARROW, HOME, UP_ARROW, DOWN_ARROW, F1, F12\n} from '@ptsecurity/cdk/keycodes';\nimport { getSupportedInputTypes, Platform } from '@ptsecurity/cdk/platform';\nimport {\n    CanUpdateErrorState,\n    CanUpdateErrorStateCtor,\n    ErrorStateMatcher,\n    mixinErrorState\n} from '@ptsecurity/mosaic/core';\nimport { McFormFieldControl, McFormFieldNumberControl } from '@ptsecurity/mosaic/form-field';\nimport { Subject } from 'rxjs';\n\nimport { getMcInputUnsupportedTypeError } from './input-errors';\nimport { MC_INPUT_VALUE_ACCESSOR } from './input-value-accessor';\nimport { stepDown, stepUp } from './stepperUtils';\n\n\nconst MC_INPUT_INVALID_TYPES = [\n    'button',\n    'checkbox',\n    'file',\n    'hidden',\n    'image',\n    'radio',\n    'range',\n    'reset',\n    'submit'\n];\n\nexport const BIG_STEP = 10;\nexport const SMALL_STEP = 1;\n\nlet nextUniqueId = 0;\n\nexport class McInputBase {\n    constructor(public defaultErrorStateMatcher: ErrorStateMatcher,\n                public parentForm: NgForm,\n                public parentFormGroup: FormGroupDirective,\n                public ngControl: NgControl) {\n    }\n}\n\nexport const _McInputMixinBase: CanUpdateErrorStateCtor & typeof McInputBase = mixinErrorState(McInputBase);\n\n\n@Directive({\n    selector: `input[mcInput][type=\"number\"]`,\n    exportAs: 'mcNumericalInput',\n    providers: [NgModel, { provide: McFormFieldNumberControl, useExisting: McNumberInput }],\n    host: {\n        '(blur)': '_focusChanged(false)',\n        '(focus)': '_focusChanged(true)',\n        '(paste)': 'onPaste($event)',\n        '(keydown)': 'onKeyDown($event)'\n    }\n})\nexport class McNumberInput implements McFormFieldNumberControl<any> {\n\n    /**\n     * Implemented as part of McFormFieldNumberControl.\n     * @docs-private\n     */\n    @Input()\n    bigStep: number;\n\n    /**\n     * Implemented as part of McFormFieldNumberControl.\n     * @docs-private\n     */\n    @Input()\n    step: number;\n\n    @Input()\n    min: number;\n\n    @Input()\n    max: number;\n\n    /**\n     * Implemented as part of McFormFieldNumberControl.\n     * @docs-private\n     */\n    value: any;\n\n    /**\n     * Implemented as part of McFormFieldNumberControl.\n     * @docs-private\n     */\n    focused: boolean = false;\n\n    /**\n     * Implemented as part of McFormFieldNumberControl.\n     * @docs-private\n     */\n    readonly stateChanges: Subject<void> = new Subject<void>();\n\n    private readonly _host: HTMLInputElement;\n\n    constructor(\n        private _platform: Platform ,\n        private _elementRef: ElementRef,\n        private _model: NgModel,\n        @Attribute('step') step: string,\n        @Attribute('big-step') bigStep: string,\n        @Attribute('min') min: string,\n        @Attribute('max') max: string\n    ) {\n        this.step = this.isDigit(step) ? parseFloat(step) : SMALL_STEP;\n        this.bigStep = this.isDigit(bigStep) ? parseFloat(bigStep) : BIG_STEP;\n        this.min = this.isDigit(min) ? parseFloat(min) : -Infinity;\n        this.max = this.isDigit(max) ? parseFloat(max) : Infinity;\n\n        this._host = this._elementRef.nativeElement;\n\n        const self = this;\n\n        if ('valueAsNumber' in this._host) {\n            Object.defineProperty(Object.getPrototypeOf(this._host), 'valueAsNumber', {\n                // tslint:disable-next-line:no-reserved-keywords\n                get() {\n                    const res = parseFloat(self.normalizeSplitter(this.value));\n\n                    return isNaN(res) ? null : res;\n                }\n            });\n        }\n    }\n\n    _focusChanged(isFocused: boolean) {\n        if (isFocused !== this.focused) {\n            this.focused = isFocused;\n            this.stateChanges.next();\n        }\n    }\n\n    onKeyDown(event: KeyboardEvent) {\n        // tslint:disable-next-line:deprecation\n        const keyCode = event.keyCode;\n\n        const isCtrlA = (e) => e.keyCode === A && (e.ctrlKey || e.metaKey);\n        const isCtrlC = (e) => e.keyCode === C && (e.ctrlKey || e.metaKey);\n        const isCtrlV = (e) => e.keyCode === V && (e.ctrlKey || e.metaKey);\n        const isCtrlX = (e) => e.keyCode === X && (e.ctrlKey || e.metaKey);\n\n        const isFKey = (e) => e.keyCode >= F1 && e.keyCode <= F12;\n\n        const isNumber = (e) => (e.keyCode >= ZERO && e.keyCode <= NINE) ||\n            (e.keyCode >= NUMPAD_ZERO && e.keyCode <= NUMPAD_NINE);\n\n        const minuses = [NUMPAD_MINUS, DASH, FF_MINUS];\n        const serviceKeys = [DELETE, BACKSPACE, TAB, ESCAPE, ENTER];\n        const arrows = [LEFT_ARROW, RIGHT_ARROW];\n        const allowedKeys =  [HOME, END].concat(arrows).concat(serviceKeys).concat(minuses);\n\n        const isIEPeriod = (e) => e.key === '.' || e.key === 'Decimal';\n        const isNotIEPeriod = (e) => e.key === '.' || e.key === ',';\n\n        // Decimal is for IE\n        const isPeriod = (e) => this._platform.EDGE || this._platform.TRIDENT\n            ? isIEPeriod(e)\n            : isNotIEPeriod(e);\n\n        if (allowedKeys.indexOf(keyCode) !== -1 ||\n            isCtrlA(event) ||\n            isCtrlC(event) ||\n            isCtrlV(event) ||\n            isCtrlX(event) ||\n            isFKey(event) ||\n            isPeriod(event)\n        ) {\n            // let it happen, don't do anything\n            return;\n        }\n        // Ensure that it is not a number and stop the keypress\n        if (event.shiftKey || !isNumber(event)) {\n            event.preventDefault();\n\n            // process steps\n            const step = event.shiftKey ? this.bigStep : this.step;\n\n            if (keyCode === UP_ARROW) {\n                this.stepUp(step);\n            }\n\n            if (keyCode === DOWN_ARROW) {\n                this.stepDown(step);\n            }\n        }\n    }\n\n    onPaste(event) {\n        let value = event.clipboardData.getData('text');\n        value = this.normalizeSplitter(value);\n\n        if (!this.isDigit(value)) {\n            event.preventDefault();\n        }\n    }\n\n    stepUp(step: number) {\n        this._elementRef.nativeElement.focus();\n        const res = stepUp(this._host.valueAsNumber, this.max, this.min, step);\n        this._host.value = res === null ? '' : res.toString();\n        this._model.update.emit(this._host.valueAsNumber);\n    }\n\n    stepDown(step: number) {\n        this._elementRef.nativeElement.focus();\n        const res = stepDown(this._host.valueAsNumber, this.max, this.min, step);\n        this._host.value = res === null ? '' : res.toString();\n        this._model.update.emit(this._host.valueAsNumber);\n    }\n\n    private normalizeSplitter(value: string): string {\n        return value ? value.replace(/,/g, '.') : value;\n    }\n\n    private isDigit(value: string): boolean {\n        return this.isFloat(value) || this.isInt(value);\n    }\n\n    private isFloat(value: string): boolean {\n        return /^-?\\d+\\.\\d+$/.test(value);\n    }\n\n    private isInt(value: string): boolean {\n        return /^-?\\d+$/.test(value);\n    }\n}\n\n@Directive({\n    selector: `input[mcInput]`,\n    exportAs: 'mcInput',\n    host: {\n        class: 'mc-input',\n        // Native input properties that are overwritten by Angular inputs need to be synced with\n        // the native input element. Otherwise property bindings for those don't work.\n        '[attr.id]': 'id',\n        '[attr.placeholder]': 'placeholder',\n        '[disabled]': 'disabled',\n        '[required]': 'required',\n        '(blur)': '_focusChanged(false)',\n        '(focus)': '_focusChanged(true)',\n        '(input)': '_onInput()'\n    },\n    providers: [{ provide: McFormFieldControl, useExisting: McInput }]\n})\nexport class McInput extends _McInputMixinBase implements McFormFieldControl<any>, OnChanges,\n    OnDestroy, DoCheck, CanUpdateErrorState {\n\n    /** An object used to control when error messages are shown. */\n    @Input() errorStateMatcher: ErrorStateMatcher;\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    focused: boolean = false;\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    readonly stateChanges: Subject<void> = new Subject<void>();\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    controlType: string = 'mc-input';\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    @Input()\n    get disabled(): boolean {\n        if (this.ngControl && this.ngControl.disabled !== null) {\n            return this.ngControl.disabled;\n        }\n\n        return this._disabled;\n    }\n\n    set disabled(value: boolean) {\n        this._disabled = coerceBooleanProperty(value);\n\n        // Browsers may not fire the blur event if the input is disabled too quickly.\n        // Reset from here to ensure that the element doesn't become stuck.\n        if (this.focused) {\n            this.focused = false;\n            this.stateChanges.next();\n        }\n    }\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    @Input()\n    get id(): string {\n        return this._id;\n    }\n\n    set id(value: string) {\n        this._id = value || this._uid;\n    }\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    @Input() placeholder: string;\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    @Input()\n    get required(): boolean {\n        return this._required;\n    }\n\n    set required(value: boolean) {\n        this._required = coerceBooleanProperty(value);\n    }\n\n    // tslint:disable no-reserved-keywords\n    /** Input type of the element. */\n    @Input()\n    get type(): string {\n        return this._type;\n    }\n\n    set type(value: string) {\n        this._type = value || 'text';\n        this._validateType();\n\n        // When using Angular inputs, developers are no longer able to set the properties on the native\n        // input element. To ensure that bindings for `type` work, we need to sync the setter\n        // with the native property. Textarea elements don't support the type property or attribute.\n        if (getSupportedInputTypes().has(this._type)) {\n            this._elementRef.nativeElement.type = this._type;\n        }\n    }\n    // tslint:enable no-reserved-keywords\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    @Input()\n    get value(): string {\n        return this._inputValueAccessor.value;\n    }\n\n    set value(value: string) {\n        if (value !== this.value) {\n            this._inputValueAccessor.value = value;\n            this.stateChanges.next();\n        }\n    }\n\n    protected _uid = `mc-input-${nextUniqueId++}`;\n    protected _previousNativeValue: any;\n    protected _disabled = false;\n    protected _id: string;\n    protected _required = false;\n    protected _type = 'text';\n    protected _neverEmptyInputTypes = [\n        'date',\n        'datetime',\n        'datetime-local',\n        'month',\n        'time',\n        'week'\n    ].filter((t) => getSupportedInputTypes().has(t));\n\n    private _inputValueAccessor: { value: any };\n\n    constructor(protected _elementRef: ElementRef,\n                @Optional() @Self() public ngControl: NgControl,\n                @Optional() parentForm: NgForm,\n                @Optional() parentFormGroup: FormGroupDirective,\n                defaultErrorStateMatcher: ErrorStateMatcher,\n                @Optional() @Self() @Inject(MC_INPUT_VALUE_ACCESSOR) inputValueAccessor: any) {\n        super(defaultErrorStateMatcher, parentForm, parentFormGroup, ngControl);\n        // If no input value accessor was explicitly specified, use the element as the input value\n        // accessor.\n        this._inputValueAccessor = inputValueAccessor || this._elementRef.nativeElement;\n\n        this._previousNativeValue = this.value;\n\n        // Force setter to be called in case id was not specified.\n        this.id = this.id;\n    }\n\n    ngOnChanges() {\n        this.stateChanges.next();\n    }\n\n    ngOnDestroy() {\n        this.stateChanges.complete();\n    }\n\n    ngDoCheck() {\n        if (this.ngControl) {\n            // We need to re-evaluate this on every change detection cycle, because there are some\n            // error triggers that we can't subscribe to (e.g. parent form submissions). This means\n            // that whatever logic is in here has to be super lean or we risk destroying the performance.\n            this.updateErrorState();\n        }\n\n        // We need to dirty-check the native element's value, because there are some cases where\n        // we won't be notified when it changes (e.g. the consumer isn't using forms or they're\n        // updating the value using `emitEvent: false`).\n        this._dirtyCheckNativeValue();\n    }\n\n    /** Focuses the input. */\n    focus(): void {\n        this._elementRef.nativeElement.focus();\n    }\n\n    /** Callback for the cases where the focused state of the input changes. */\n    _focusChanged(isFocused: boolean) {\n        if (isFocused !== this.focused) {\n            this.focused = isFocused;\n            this.stateChanges.next();\n        }\n    }\n\n    _onInput() {\n        // This is a noop function and is used to let Angular know whenever the value changes.\n        // Angular will run a new change detection each time the `input` event has been dispatched.\n        // It's necessary that Angular recognizes the value change, because when floatingLabel\n        // is set to false and Angular forms aren't used, the placeholder won't recognize the\n        // value changes and will not disappear.\n        // Listening to the input event wouldn't be necessary when the input is using the\n        // FormsModule or ReactiveFormsModule, because Angular forms also listens to input events.\n    }\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    get empty(): boolean {\n        return !this._isNeverEmpty() && !this._elementRef.nativeElement.value && !this._isBadInput();\n    }\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    onContainerClick() {\n        this.focus();\n    }\n\n    /** Does some manual dirty checking on the native input `value` property. */\n    protected _dirtyCheckNativeValue() {\n        const newValue = this.value;\n\n        if (this._previousNativeValue !== newValue) {\n            this._previousNativeValue = newValue;\n            this.stateChanges.next();\n        }\n    }\n\n    /** Make sure the input is a supported type. */\n    protected _validateType() {\n        if (MC_INPUT_INVALID_TYPES.indexOf(this._type) > -1) {\n            throw getMcInputUnsupportedTypeError(this._type);\n        }\n    }\n\n    /** Checks whether the input type is one of the types that are never empty. */\n    protected _isNeverEmpty() {\n        return this._neverEmptyInputTypes.indexOf(this._type) > -1;\n    }\n\n    /** Checks whether the input is invalid based on the native validation. */\n    protected _isBadInput() {\n        // The `validity` property won't be present on platform-server.\n        const validity = (this._elementRef.nativeElement as HTMLInputElement).validity;\n\n        return validity && validity.badInput;\n    }\n}\n\n@Directive({\n    selector: 'input[mcInputMonospace]',\n    exportAs: 'McInputMonospace',\n    host: { class: 'mc-input_monospace' }\n})\nexport class McInputMono {\n}\n","import { Directive, forwardRef, Input, OnChanges, Provider, SimpleChanges } from '@angular/core';\nimport { AbstractControl, NG_VALIDATORS, ValidationErrors, Validator, ValidatorFn, Validators } from '@angular/forms';\n\n\nexport const MIN_VALIDATOR: Provider = {\n    provide: NG_VALIDATORS,\n    useExisting: forwardRef(() => MinValidator),\n    multi: true\n};\n\n/**\n * A directive which installs the {@link MinValidator} for any `formControlName`,\n * `formControl`, or control with `ngModel` that also has a `min` attribute.\n *\n * @experimental\n */\n@Directive({\n    selector: '[min][formControlName],[min][formControl],[min][ngModel]',\n    providers: [MIN_VALIDATOR],\n    host: {'[attr.min]': 'min ? min : null'}\n})\nexport class MinValidator implements Validator, OnChanges {\n\n    @Input() min: string;\n    private _validator: ValidatorFn;\n    private _onChange: () => void;\n\n    ngOnChanges(changes: SimpleChanges): void {\n        if ('min' in changes) {\n            this._createValidator();\n            if (this._onChange) { this._onChange(); }\n        }\n    }\n\n    validate(c: AbstractControl): ValidationErrors | null { return this._validator(c); }\n\n    registerOnValidatorChange(fn: () => void): void { this._onChange = fn; }\n\n    private _createValidator(): void { this._validator = Validators.min(parseInt(this.min, 10)); }\n}\n\n\nexport const MAX_VALIDATOR: Provider = {\n    provide: NG_VALIDATORS,\n    useExisting: forwardRef(() => MaxValidator),\n    multi: true\n};\n\n/**\n * A directive which installs the {@link MaxValidator} for any `formControlName`,\n * `formControl`, or control with `ngModel` that also has a `min` attribute.\n *\n * @experimental\n */\n@Directive({\n    selector: '[max][formControlName],[max][formControl],[max][ngModel]',\n    providers: [MAX_VALIDATOR],\n    host: {\n        '[attr.max]': 'max ? max : null'\n    }\n})\nexport class MaxValidator implements Validator,\n    OnChanges {\n\n    @Input() max: string;\n    private _validator: ValidatorFn;\n    private _onChange: () => void;\n\n    ngOnChanges(changes: SimpleChanges): void {\n        if ('max' in changes) {\n            this._createValidator();\n            if (this._onChange) { this._onChange(); }\n        }\n    }\n\n    validate(c: AbstractControl): ValidationErrors | null { return this._validator(c); }\n\n    registerOnValidatorChange(fn: () => void): void { this._onChange = fn; }\n\n    private _createValidator(): void { this._validator = Validators.max(parseInt(this.max, 10)); }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { A11yModule } from '@ptsecurity/cdk/a11y';\nimport { McCommonModule } from '@ptsecurity/mosaic/core';\n\nimport { McInput, McInputMono, McNumberInput } from './input';\nimport { MaxValidator, MinValidator } from './input-number-validators';\n\n\n@NgModule({\n    imports: [CommonModule, A11yModule, McCommonModule, FormsModule],\n    exports: [McInput, McNumberInput, McInputMono, MinValidator, MaxValidator],\n    declarations: [McInput, McNumberInput, McInputMono, MinValidator, MaxValidator ]\n})\nexport class McInputModule {\n}\n","import { Injectable } from '@angular/core';\nimport { Subject } from 'rxjs';\n\n\n/** Datepicker data that requires internationalization. */\n@Injectable({ providedIn: 'root' })\nexport class McDatepickerIntl {\n    /**\n     * Stream that emits whenever the labels here are changed. Use this to notify\n     * components if the labels have changed after initialization.\n     */\n    readonly changes: Subject<void> = new Subject<void>();\n\n    /** A label for the calendar popup (used by screen readers). */\n    calendarLabel: string = 'Calendar';\n\n    /** A label for the button used to open the calendar popup (used by screen readers). */\n    openCalendarLabel: string = 'Open calendar';\n\n    /** A label for the previous month button (used by screen readers). */\n    prevMonthLabel: string = 'Previous month';\n\n    /** A label for the next month button (used by screen readers). */\n    nextMonthLabel: string = 'Next month';\n\n    /** A label for the previous year button (used by screen readers). */\n    prevYearLabel: string = 'Previous year';\n\n    /** A label for the next year button (used by screen readers). */\n    nextYearLabel: string = 'Next year';\n\n    /** A label for the previous multi-year button (used by screen readers). */\n    prevMultiYearLabel: string = 'Previous 20 years';\n\n    /** A label for the next multi-year button (used by screen readers). */\n    nextMultiYearLabel: string = 'Next 20 years';\n\n    /** A label for the 'switch to month view' button (used by screen readers). */\n    switchToMonthViewLabel: string = 'Choose date';\n\n    /** A label for the 'switch to year view' button (used by screen readers). */\n    switchToMultiYearViewLabel: string = 'Choose month and year';\n}\n","// tslint:disable:no-magic-numbers\nimport {\n    ChangeDetectionStrategy,\n    Component,\n    ElementRef,\n    EventEmitter,\n    Input,\n    Output,\n    ViewEncapsulation,\n    NgZone,\n    OnChanges,\n    SimpleChanges\n} from '@angular/core';\nimport { take } from 'rxjs/operators';\n\n\n/**\n * Extra CSS classes that can be associated with a calendar cell.\n */\nexport type McCalendarCellCssClasses = string | string[] | Set<string> | { [key: string]: any };\n\n/**\n * An internal class that represents the data corresponding to a single calendar cell.\n * @docs-private\n */\nexport class McCalendarCell {\n    constructor(\n        public value: number,\n        public displayValue: string,\n        public ariaLabel: string,\n        public enabled: boolean,\n        public cssClasses?: McCalendarCellCssClasses\n    ) {\n    }\n}\n\n\n/**\n * An internal component used to display calendar data in a table.\n * @docs-private\n */\n@Component({\n    selector: '[mc-calendar-body]',\n    templateUrl: 'calendar-body.html',\n    styleUrls: ['calendar-body.css'],\n    host: {\n        class: 'mc-calendar__body',\n        role: 'grid',\n        'aria-readonly': 'true'\n    },\n    exportAs: 'mcCalendarBody',\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class McCalendarBody implements OnChanges {\n    /** The label for the table. (e.g. \"Jan 2017\"). */\n    @Input() label: string;\n\n    /** The cells to display in the table. */\n    @Input() rows: McCalendarCell[][];\n\n    /** The value in the table that corresponds to today. */\n    @Input() todayValue: number;\n\n    /** The value in the table that is currently selected. */\n    @Input() selectedValue: number;\n\n    /** The minimum number of free cells needed to fit the label in the first row. */\n    @Input() labelMinRequiredCells: number;\n\n    /** The number of columns in the table. */\n    @Input() numCols = 7;\n\n    /** The cell number of the active cell in the table. */\n    @Input() activeCell = 0;\n\n    /**\n     * The aspect ratio (width / height) to use for the cells in the table. This aspect ratio will be\n     * maintained even as the table resizes.\n     */\n    @Input() cellAspectRatio = 1;\n\n    /** Emits when a new value is selected. */\n    @Output() readonly selectedValueChange: EventEmitter<number> = new EventEmitter<number>();\n\n    /** The number of blank cells to put at the beginning for the first row. */\n    firstRowOffset: number;\n\n    /** Padding for the individual date cells. */\n    cellPadding: string;\n\n    /** Width of an individual cell. */\n    cellWidth: string;\n\n    constructor(private elementRef: ElementRef<HTMLElement>, private ngZone: NgZone) {\n    }\n\n    cellClicked(cell: McCalendarCell): void {\n        if (cell.enabled) {\n            this.selectedValueChange.emit(cell.value);\n        }\n    }\n\n    ngOnChanges(changes: SimpleChanges) {\n        const columnChanges = changes.numCols;\n        // tslint:disable-next-line:no-this-assignment\n        const { rows, numCols } = this;\n\n        if (changes.rows || columnChanges) {\n            this.firstRowOffset = rows && rows.length && rows[0].length ? numCols - rows[0].length : 0;\n        }\n\n        if (changes.cellAspectRatio || columnChanges || !this.cellPadding) {\n            this.cellPadding = `${this.cellAspectRatio * 50 / numCols}%`;\n        }\n\n        if (columnChanges || !this.cellWidth) {\n            this.cellWidth = `${100 / numCols}%`;\n        }\n    }\n\n    isActiveCell(rowIndex: number, colIndex: number): boolean {\n        let cellNumber = rowIndex * this.numCols + colIndex;\n\n        // Account for the fact that the first row may not have as many cells.\n        if (rowIndex) {\n            cellNumber -= this.firstRowOffset;\n        }\n\n        return cellNumber === this.activeCell;\n    }\n\n    /** Focuses the active cell after the microtask queue is empty. */\n    focusActiveCell() {\n        this.ngZone.runOutsideAngular(() => {\n            this.ngZone.onStable.asObservable().pipe(take(1)).subscribe(() => {\n                const activeCell: HTMLElement | null =\n                    this.elementRef.nativeElement.querySelector('.mc-calendar__body_active');\n\n                if (activeCell) {\n                    activeCell.focus();\n                }\n            });\n        });\n    }\n}\n","// tslint:disable:no-magic-numbers\nimport {\n    AfterContentInit,\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    EventEmitter,\n    Inject,\n    Input,\n    Optional,\n    Output,\n    ViewEncapsulation,\n    ViewChild\n} from '@angular/core';\nimport { Directionality } from '@ptsecurity/cdk/bidi';\nimport { DateAdapter, MC_DATE_FORMATS, McDateFormats } from '@ptsecurity/cdk/datetime';\nimport {\n    DOWN_ARROW,\n    END,\n    ENTER,\n    HOME,\n    LEFT_ARROW,\n    PAGE_DOWN,\n    PAGE_UP,\n    RIGHT_ARROW,\n    UP_ARROW,\n    SPACE\n} from '@ptsecurity/cdk/keycodes';\n\nimport { McCalendarBody, McCalendarCell, McCalendarCellCssClasses } from './calendar-body';\nimport { createMissingDateImplError } from './datepicker-errors';\n\n\nconst DAYS_PER_WEEK = 7;\n\n\n/**\n * An internal component used to display a single month in the datepicker.\n * @docs-private\n */\n@Component({\n    selector: 'mc-month-view',\n    templateUrl: 'month-view.html',\n    exportAs: 'mcMonthView',\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class McMonthView<D> implements AfterContentInit {\n    /**\n     * The date to display in this month view (everything other than the month and year is ignored).\n     */\n    @Input()\n    get activeDate(): D {\n        return this._activeDate;\n    }\n\n    set activeDate(value: D) {\n        const oldActiveDate = this._activeDate;\n        const validDate =\n            this.getValidDateOrNull(this.dateAdapter.deserialize(value)) || this.dateAdapter.today();\n        this._activeDate = this.dateAdapter.clampDate(validDate, this.minDate, this.maxDate);\n\n        if (!this.hasSameMonthAndYear(oldActiveDate, this._activeDate)) {\n            this.init();\n        }\n    }\n\n    /** The currently selected date. */\n    @Input()\n    get selected(): D | null {\n        return this._selected;\n    }\n\n    set selected(value: D | null) {\n        this._selected = this.getValidDateOrNull(this.dateAdapter.deserialize(value));\n        this.selectedDate = this.getDateInCurrentMonth(this._selected);\n    }\n\n    /** The minimum selectable date. */\n    @Input()\n    get minDate(): D | null {\n        return this._minDate;\n    }\n\n    set minDate(value: D | null) {\n        this._minDate = this.getValidDateOrNull(this.dateAdapter.deserialize(value));\n    }\n\n    /** The maximum selectable date. */\n    @Input()\n    get maxDate(): D | null {\n        return this._maxDate;\n    }\n\n    set maxDate(value: D | null) {\n        this._maxDate = this.getValidDateOrNull(this.dateAdapter.deserialize(value));\n    }\n\n    /** Function used to filter which dates are selectable. */\n    @Input() dateFilter: (date: D) => boolean;\n\n    /** Function that can be used to add custom CSS classes to dates. */\n    @Input() dateClass: (date: D) => McCalendarCellCssClasses;\n\n    /** Emits when a new date is selected. */\n    @Output() readonly selectedChange: EventEmitter<D | null> = new EventEmitter<D | null>();\n\n    /** Emits when any date is selected. */\n    @Output() readonly userSelection: EventEmitter<void> = new EventEmitter<void>();\n\n    /** Emits when any date is activated. */\n    @Output() readonly activeDateChange: EventEmitter<D> = new EventEmitter<D>();\n\n    /** The body of calendar table */\n    @ViewChild(McCalendarBody) mcCalendarBody: McCalendarBody;\n\n    /** The label for this month (e.g. \"January 2017\"). */\n    monthLabel: string;\n\n    /** Grid of calendar cells representing the dates of the month. */\n    weeks: McCalendarCell[][];\n\n    /** The number of blank cells in the first row before the 1st of the month. */\n    firstWeekOffset: number;\n\n    /**\n     * The date of the month that the currently selected Date falls on.\n     * Null if the currently selected Date is in another month.\n     */\n    selectedDate: number | null;\n\n    /** The date of the month that today falls on. Null if today is in another month. */\n    todayDate: number | null;\n\n    /** The names of the weekdays. */\n    weekdays: { long: string; narrow: string }[];\n    private _activeDate: D;\n    private _selected: D | null;\n    private _minDate: D | null;\n    private _maxDate: D | null;\n\n    constructor(\n        private changeDetectorRef: ChangeDetectorRef,\n        @Optional() @Inject(MC_DATE_FORMATS) private dateFormats: McDateFormats,\n        @Optional() public dateAdapter: DateAdapter<D>,\n        @Optional() private dir?: Directionality\n    ) {\n\n        if (!this.dateAdapter) {\n            throw createMissingDateImplError('DateAdapter');\n        }\n\n        if (!this.dateFormats) {\n            throw createMissingDateImplError('MC_DATE_FORMATS');\n        }\n\n        const firstDayOfWeek = this.dateAdapter.getFirstDayOfWeek();\n        const narrowWeekdays = this.dateAdapter.getDayOfWeekNames('narrow');\n        const longWeekdays = this.dateAdapter.getDayOfWeekNames('long');\n\n        // Rotate the labels for days of the week based on the configured first day of the week.\n        const weekdays = longWeekdays.map((long, i) => {\n            return { long, narrow: narrowWeekdays[i] };\n        });\n        this.weekdays = weekdays.slice(firstDayOfWeek).concat(weekdays.slice(0, firstDayOfWeek));\n\n        this._activeDate = this.dateAdapter.today();\n    }\n\n    ngAfterContentInit() {\n        this.init();\n    }\n\n    /** Handles when a new date is selected. */\n    dateSelected(date: number) {\n        if (this.selectedDate !== date) {\n            const selectedYear = this.dateAdapter.getYear(this.activeDate);\n            const selectedMonth = this.dateAdapter.getMonth(this.activeDate);\n            const selectedDate = this.dateAdapter.createDate(selectedYear, selectedMonth, date);\n\n            this.selectedChange.emit(selectedDate);\n        }\n\n        this.userSelection.emit();\n    }\n\n    /** Handles keydown events on the calendar body when calendar is in month view. */\n    handleCalendarBodyKeydown(event: KeyboardEvent): void {\n        // TODO(mmalerba): We currently allow keyboard navigation to disabled dates, but just prevent\n        // disabled ones from being selected. This may not be ideal, we should look into whether\n        // navigation should skip over disabled dates, and if so, how to implement that efficiently.\n\n        const oldActiveDate = this._activeDate;\n        const isRtl = this.isRtl();\n\n        // tslint:disable-next-line:deprecation\n        switch (event.keyCode) {\n            case LEFT_ARROW:\n                this.activeDate = this.dateAdapter.addCalendarDays(this._activeDate, isRtl ? 1 : -1);\n                break;\n            case RIGHT_ARROW:\n                this.activeDate = this.dateAdapter.addCalendarDays(this._activeDate, isRtl ? -1 : 1);\n                break;\n            case UP_ARROW:\n                this.activeDate = this.dateAdapter.addCalendarDays(this._activeDate, -7);\n                break;\n            case DOWN_ARROW:\n                this.activeDate = this.dateAdapter.addCalendarDays(this._activeDate, 7);\n                break;\n            case HOME:\n                this.activeDate = this.dateAdapter.addCalendarDays(this._activeDate,\n                    1 - this.dateAdapter.getDate(this._activeDate));\n                break;\n            case END:\n                this.activeDate = this.dateAdapter.addCalendarDays(this._activeDate,\n                    (this.dateAdapter.getNumDaysInMonth(this._activeDate) -\n                        this.dateAdapter.getDate(this._activeDate)));\n                break;\n            case PAGE_UP:\n                this.activeDate = event.altKey ?\n                    this.dateAdapter.addCalendarYears(this._activeDate, -1) :\n                    this.dateAdapter.addCalendarMonths(this._activeDate, -1);\n                break;\n            case PAGE_DOWN:\n                this.activeDate = event.altKey ?\n                    this.dateAdapter.addCalendarYears(this._activeDate, 1) :\n                    this.dateAdapter.addCalendarMonths(this._activeDate, 1);\n                break;\n            case ENTER:\n            case SPACE:\n                if (!this.dateFilter || this.dateFilter(this._activeDate)) {\n                    this.dateSelected(this.dateAdapter.getDate(this._activeDate));\n                    this.userSelection.emit();\n                    // Prevent unexpected default actions such as form submission.\n                    event.preventDefault();\n                }\n\n                return;\n            default:\n                // Don't prevent default or focus active cell on keys that we don't explicitly handle.\n                return;\n        }\n\n        if (this.dateAdapter.compareDate(oldActiveDate, this.activeDate)) {\n            this.activeDateChange.emit(this.activeDate);\n        }\n\n        this.focusActiveCell();\n        // Prevent unexpected default actions such as form submission.\n        event.preventDefault();\n    }\n\n    /** Initializes this month view. */\n    init() {\n        this.selectedDate = this.getDateInCurrentMonth(this.selected);\n        this.todayDate = this.getDateInCurrentMonth(this.dateAdapter.today());\n        this.monthLabel =\n            this.dateAdapter.getMonthNames('short')[this.dateAdapter.getMonth(this.activeDate)];\n\n        this.monthLabel = this.monthLabel[0].toLocaleUpperCase() + this.monthLabel.substr(1);\n\n        const firstOfMonth = this.dateAdapter.createDate(this.dateAdapter.getYear(this.activeDate),\n            this.dateAdapter.getMonth(this.activeDate), 1);\n        this.firstWeekOffset =\n            (DAYS_PER_WEEK + this.dateAdapter.getDayOfWeek(firstOfMonth) -\n                this.dateAdapter.getFirstDayOfWeek()) % DAYS_PER_WEEK;\n\n        this.createWeekCells();\n        this.changeDetectorRef.markForCheck();\n    }\n\n    /** Focuses the active cell after the microtask queue is empty. */\n    focusActiveCell() {\n        this.mcCalendarBody.focusActiveCell();\n    }\n\n    /** Creates McCalendarCells for the dates in this month. */\n    private createWeekCells() {\n        const daysInMonth = this.dateAdapter.getNumDaysInMonth(this.activeDate);\n        const dateNames = this.dateAdapter.getDateNames();\n\n        this.weeks = [[]];\n\n        for (let i = 0, cell = this.firstWeekOffset; i < daysInMonth; i++, cell++) {\n            if (cell === DAYS_PER_WEEK) {\n                this.weeks.push([]);\n                cell = 0;\n            }\n            const date = this.dateAdapter.createDate(\n                this.dateAdapter.getYear(this.activeDate),\n                this.dateAdapter.getMonth(this.activeDate), i + 1);\n            const enabled = this.shouldEnableDate(date);\n            const ariaLabel = this.dateAdapter.format(date, this.dateFormats.display.dateA11yLabel);\n            const cellClasses = this.dateClass ? this.dateClass(date) : undefined;\n\n            this.weeks[this.weeks.length - 1]\n                .push(new McCalendarCell(i + 1, dateNames[i], ariaLabel, enabled, cellClasses));\n        }\n    }\n\n    /** Date filter for the month */\n    private shouldEnableDate(date: D): boolean {\n        return !!date &&\n            (!this.dateFilter || this.dateFilter(date)) &&\n            (!this.minDate || this.dateAdapter.compareDate(date, this.minDate) >= 0) &&\n            (!this.maxDate || this.dateAdapter.compareDate(date, this.maxDate) <= 0);\n    }\n\n    /**\n     * Gets the date in this month that the given Date falls on.\n     * Returns null if the given Date is in another month.\n     */\n    private getDateInCurrentMonth(date: D | null): number | null {\n        return date && this.hasSameMonthAndYear(date, this.activeDate) ?\n            this.dateAdapter.getDate(date) : null;\n    }\n\n    /** Checks whether the 2 dates are non-null and fall within the same month of the same year. */\n    private hasSameMonthAndYear(d1: D | null, d2: D | null): boolean {\n        return !!(d1 && d2 && this.dateAdapter.getMonth(d1) === this.dateAdapter.getMonth(d2) &&\n            this.dateAdapter.getYear(d1) === this.dateAdapter.getYear(d2));\n    }\n\n    /**\n     * @param obj The object to check.\n     * @returns The given object if it is both a date instance and valid, otherwise null.\n     */\n    private getValidDateOrNull(obj: any): D | null {\n        return (this.dateAdapter.isDateInstance(obj) && this.dateAdapter.isValid(obj)) ? obj : null;\n    }\n\n    /** Determines whether the user has the RTL layout direction. */\n    private isRtl() {\n        return this.dir && this.dir.value === 'rtl';\n    }\n}\n","// tslint:disable:no-magic-numbers\nimport {\n    AfterContentInit,\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    EventEmitter,\n    Input,\n    Optional,\n    Output,\n    ViewChild,\n    ViewEncapsulation\n} from '@angular/core';\nimport { Directionality } from '@ptsecurity/cdk/bidi';\nimport { DateAdapter } from '@ptsecurity/cdk/datetime';\nimport {\n    DOWN_ARROW,\n    END,\n    ENTER,\n    HOME,\n    LEFT_ARROW,\n    PAGE_DOWN,\n    PAGE_UP,\n    RIGHT_ARROW,\n    UP_ARROW,\n    SPACE\n} from '@ptsecurity/cdk/keycodes';\n\nimport { McCalendarBody, McCalendarCell } from './calendar-body';\nimport { createMissingDateImplError } from './datepicker-errors';\n\n\nexport const yearsPerPage = 24;\n\nexport const yearsPerRow = 4;\n\n\n/**\n * An internal component used to display a year selector in the datepicker.\n * @docs-private\n */\n@Component({\n    selector: 'mc-multi-year-view',\n    templateUrl: 'multi-year-view.html',\n    exportAs: 'mcMultiYearView',\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class McMultiYearView<D> implements AfterContentInit {\n    /** The date to display in this multi-year view (everything other than the year is ignored). */\n    @Input()\n    get activeDate(): D {\n        return this._activeDate;\n    }\n\n    set activeDate(value: D) {\n        const oldActiveDate = this._activeDate;\n        const validDate =\n            this.getValidDateOrNull(this.dateAdapter.deserialize(value)) || this.dateAdapter.today();\n        this._activeDate = this.dateAdapter.clampDate(validDate, this.minDate, this.maxDate);\n\n        if (Math.floor(this.dateAdapter.getYear(oldActiveDate) / yearsPerPage) !==\n            Math.floor(this.dateAdapter.getYear(this._activeDate) / yearsPerPage)) {\n            this.init();\n        }\n    }\n\n    /** The currently selected date. */\n    @Input()\n    get selected(): D | null {\n        return this._selected;\n    }\n\n    set selected(value: D | null) {\n        this._selected = this.getValidDateOrNull(this.dateAdapter.deserialize(value));\n        this.selectedYear = this._selected && this.dateAdapter.getYear(this._selected);\n    }\n\n    /** The minimum selectable date. */\n    @Input()\n    get minDate(): D | null {\n        return this._minDate;\n    }\n\n    set minDate(value: D | null) {\n        this._minDate = this.getValidDateOrNull(this.dateAdapter.deserialize(value));\n    }\n\n    /** The maximum selectable date. */\n    @Input()\n    get maxDate(): D | null {\n        return this._maxDate;\n    }\n\n    set maxDate(value: D | null) {\n        this._maxDate = this.getValidDateOrNull(this.dateAdapter.deserialize(value));\n    }\n\n    /** A function used to filter which dates are selectable. */\n    @Input() dateFilter: (date: D) => boolean;\n\n    /** Emits when a new year is selected. */\n    @Output() readonly selectedChange: EventEmitter<D> = new EventEmitter<D>();\n\n    /** Emits the selected year. This doesn't imply a change on the selected date */\n    @Output() readonly yearSelected: EventEmitter<D> = new EventEmitter<D>();\n\n    /** Emits when any date is activated. */\n    @Output() readonly activeDateChange: EventEmitter<D> = new EventEmitter<D>();\n\n    /** The body of calendar table */\n    @ViewChild(McCalendarBody) mcCalendarBody: McCalendarBody;\n\n    /** Grid of calendar cells representing the currently displayed years. */\n    years: McCalendarCell[][];\n\n    /** The year that today falls on. */\n    todayYear: number;\n\n    /** The year of the selected date. Null if the selected date is null. */\n    selectedYear: number | null;\n    private _activeDate: D;\n    private _selected: D | null;\n    private _minDate: D | null;\n    private _maxDate: D | null;\n\n    constructor(\n        private changeDetectorRef: ChangeDetectorRef,\n        @Optional() public dateAdapter: DateAdapter<D>,\n        @Optional() private dir?: Directionality\n    ) {\n        if (!this.dateAdapter) {\n            throw createMissingDateImplError('DateAdapter');\n        }\n\n        this._activeDate = this.dateAdapter.today();\n    }\n\n    ngAfterContentInit() {\n        this.init();\n    }\n\n    /** Initializes this multi-year view. */\n    init() {\n        this.todayYear = this.dateAdapter.getYear(this.dateAdapter.today());\n        const activeYear = this.dateAdapter.getYear(this._activeDate);\n        const activeOffset = activeYear % yearsPerPage;\n        this.years = [];\n        for (let i = 0, row: number[] = []; i < yearsPerPage; i++) {\n            row.push(activeYear - activeOffset + i);\n            if (row.length === yearsPerRow) {\n                this.years.push(row.map((year) => this.createCellForYear(year)));\n                row = [];\n            }\n        }\n        this.changeDetectorRef.markForCheck();\n    }\n\n    /** Handles when a new year is selected. */\n    onYearSelected(year: number) {\n        this.yearSelected.emit(this.dateAdapter.createDate(year, 0, 1));\n        const month = this.dateAdapter.getMonth(this.activeDate);\n        const daysInMonth =\n            this.dateAdapter.getNumDaysInMonth(this.dateAdapter.createDate(year, month, 1));\n        this.selectedChange.emit(this.dateAdapter.createDate(year, month,\n            Math.min(this.dateAdapter.getDate(this.activeDate), daysInMonth)));\n    }\n\n    /** Handles keydown events on the calendar body when calendar is in multi-year view. */\n    handleCalendarBodyKeydown(event: KeyboardEvent): void {\n        // TODO(mmalerba): We currently allow keyboard navigation to disabled dates, but just prevent\n        // disabled ones from being selected. This may not be ideal, we should look into whether\n        // navigation should skip over disabled dates, and if so, how to implement that efficiently.\n\n        const oldActiveDate = this._activeDate;\n        const isRtl = this.isRtl();\n\n        // tslint:disable-next-line:deprecation\n        switch (event.keyCode) {\n            case LEFT_ARROW:\n                this.activeDate = this.dateAdapter.addCalendarYears(this._activeDate, isRtl ? 1 : -1);\n                break;\n            case RIGHT_ARROW:\n                this.activeDate = this.dateAdapter.addCalendarYears(this._activeDate, isRtl ? -1 : 1);\n                break;\n            case UP_ARROW:\n                this.activeDate = this.dateAdapter.addCalendarYears(this._activeDate, -yearsPerRow);\n                break;\n            case DOWN_ARROW:\n                this.activeDate = this.dateAdapter.addCalendarYears(this._activeDate, yearsPerRow);\n                break;\n            case HOME:\n                this.activeDate = this.dateAdapter.addCalendarYears(this._activeDate,\n                    -this.dateAdapter.getYear(this._activeDate) % yearsPerPage);\n                break;\n            case END:\n                this.activeDate = this.dateAdapter.addCalendarYears(this._activeDate,\n                    yearsPerPage - this.dateAdapter.getYear(this._activeDate) % yearsPerPage - 1);\n                break;\n            case PAGE_UP:\n                this.activeDate =\n                    this.dateAdapter.addCalendarYears(\n                        this._activeDate, event.altKey ? -yearsPerPage * 10 : -yearsPerPage);\n                break;\n            case PAGE_DOWN:\n                this.activeDate =\n                    this.dateAdapter.addCalendarYears(\n                        this._activeDate, event.altKey ? yearsPerPage * 10 : yearsPerPage);\n                break;\n            case ENTER:\n            case SPACE:\n                this.onYearSelected(this.dateAdapter.getYear(this._activeDate));\n                break;\n            default:\n                // Don't prevent default or focus active cell on keys that we don't explicitly handle.\n                return;\n        }\n\n        if (this.dateAdapter.compareDate(oldActiveDate, this.activeDate)) {\n            this.activeDateChange.emit(this.activeDate);\n        }\n\n        this.focusActiveCell();\n        // Prevent unexpected default actions such as form submission.\n        event.preventDefault();\n    }\n\n    getActiveCell(): number {\n        return this.dateAdapter.getYear(this.activeDate) % yearsPerPage;\n    }\n\n    /** Focuses the active cell after the microtask queue is empty. */\n    focusActiveCell() {\n        this.mcCalendarBody.focusActiveCell();\n    }\n\n    /** Creates an McCalendarCell for the given year. */\n    private createCellForYear(year: number) {\n        const yearName = this.dateAdapter.getYearName(this.dateAdapter.createDate(year, 0, 1));\n\n        return new McCalendarCell(year, yearName, yearName, this.shouldEnableYear(year));\n    }\n\n    /** Whether the given year is enabled. */\n    private shouldEnableYear(year: number) {\n        // disable if the year is greater than maxDate lower than minDate\n        if (year === undefined || year === null ||\n            (this.maxDate && year > this.dateAdapter.getYear(this.maxDate)) ||\n            (this.minDate && year < this.dateAdapter.getYear(this.minDate))) {\n            return false;\n        }\n\n        // enable if it reaches here and there's no filter defined\n        if (!this.dateFilter) {\n            return true;\n        }\n\n        const firstOfYear = this.dateAdapter.createDate(year, 0, 1);\n\n        // If any date in the year is enabled count the year as enabled.\n        for (let date = firstOfYear; this.dateAdapter.getYear(date) === year;\n             date = this.dateAdapter.addCalendarDays(date, 1)) {\n            if (this.dateFilter(date)) {\n                return true;\n            }\n        }\n\n        return false;\n    }\n\n    /**\n     * @param obj The object to check.\n     * @returns The given object if it is both a date instance and valid, otherwise null.\n     */\n    private getValidDateOrNull(obj: any): D | null {\n        return (this.dateAdapter.isDateInstance(obj) && this.dateAdapter.isValid(obj)) ? obj : null;\n    }\n\n    /** Determines whether the user has the RTL layout direction. */\n    private isRtl() {\n        return this.dir && this.dir.value === 'rtl';\n    }\n}\n","import {\n    AfterContentInit,\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    EventEmitter,\n    Inject,\n    Input,\n    Optional,\n    Output,\n    ViewChild,\n    ViewEncapsulation\n} from '@angular/core';\nimport { Directionality } from '@ptsecurity/cdk/bidi';\nimport { DateAdapter, MC_DATE_FORMATS, McDateFormats } from '@ptsecurity/cdk/datetime';\nimport {\n    DOWN_ARROW,\n    END,\n    ENTER,\n    HOME,\n    LEFT_ARROW,\n    PAGE_DOWN,\n    PAGE_UP,\n    RIGHT_ARROW,\n    UP_ARROW,\n    SPACE\n} from '@ptsecurity/cdk/keycodes';\n\nimport { McCalendarBody, McCalendarCell } from './calendar-body';\nimport { createMissingDateImplError } from './datepicker-errors';\n\n\n/**\n * An internal component used to display a single year in the datepicker.\n * @docs-private\n */\n@Component({\n    selector: 'mc-year-view',\n    templateUrl: 'year-view.html',\n    exportAs: 'mcYearView',\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class McYearView<D> implements AfterContentInit {\n    /** The date to display in this year view (everything other than the year is ignored). */\n    @Input()\n    get activeDate(): D {\n        return this._activeDate;\n    }\n\n    set activeDate(value: D) {\n        const oldActiveDate = this._activeDate;\n        const validDate =\n            this.getValidDateOrNull(this.dateAdapter.deserialize(value)) || this.dateAdapter.today();\n        this._activeDate = this.dateAdapter.clampDate(validDate, this.minDate, this.maxDate);\n\n        if (this.dateAdapter.getYear(oldActiveDate) !== this.dateAdapter.getYear(this._activeDate)) {\n            this.init();\n        }\n    }\n\n    /** The currently selected date. */\n    @Input()\n    get selected(): D | null {\n        return this._selected;\n    }\n\n    set selected(value: D | null) {\n        this._selected = this.getValidDateOrNull(this.dateAdapter.deserialize(value));\n        this.selectedMonth = this.getMonthInCurrentYear(this._selected);\n    }\n\n    /** The minimum selectable date. */\n    @Input()\n    get minDate(): D | null {\n        return this._minDate;\n    }\n\n    set minDate(value: D | null) {\n        this._minDate = this.getValidDateOrNull(this.dateAdapter.deserialize(value));\n    }\n\n    /** The maximum selectable date. */\n    @Input()\n    get maxDate(): D | null {\n        return this._maxDate;\n    }\n\n    set maxDate(value: D | null) {\n        this._maxDate = this.getValidDateOrNull(this.dateAdapter.deserialize(value));\n    }\n\n    /** A function used to filter which dates are selectable. */\n    @Input() dateFilter: (date: D) => boolean;\n\n    /** Emits when a new month is selected. */\n    @Output() readonly selectedChange: EventEmitter<D> = new EventEmitter<D>();\n\n    /** Emits the selected month. This doesn't imply a change on the selected date */\n    @Output() readonly monthSelected: EventEmitter<D> = new EventEmitter<D>();\n\n    /** Emits when any date is activated. */\n    @Output() readonly activeDateChange: EventEmitter<D> = new EventEmitter<D>();\n\n    /** The body of calendar table */\n    @ViewChild(McCalendarBody) mcCalendarBody: McCalendarBody;\n\n    /** Grid of calendar cells representing the months of the year. */\n    months: McCalendarCell[][];\n\n    /** The label for this year (e.g. \"2017\"). */\n    yearLabel: string;\n\n    /** The month in this year that today falls on. Null if today is in a different year. */\n    todayMonth: number | null;\n\n    /**\n     * The month in this year that the selected Date falls on.\n     * Null if the selected Date is in a different year.\n     */\n    selectedMonth: number | null;\n    private _activeDate: D;\n    private _selected: D | null;\n    private _minDate: D | null;\n    private _maxDate: D | null;\n\n    constructor(\n        private changeDetectorRef: ChangeDetectorRef,\n        @Optional() @Inject(MC_DATE_FORMATS) private dateFormats: McDateFormats,\n        @Optional() public dateAdapter: DateAdapter<D>,\n        @Optional() private dir?: Directionality\n    ) {\n        if (!this.dateAdapter) {\n            throw createMissingDateImplError('DateAdapter');\n        }\n\n        if (!this.dateFormats) {\n            throw createMissingDateImplError('MC_DATE_FORMATS');\n        }\n\n        this._activeDate = this.dateAdapter.today();\n    }\n\n    ngAfterContentInit() {\n        this.init();\n    }\n\n    /** Handles when a new month is selected. */\n    onMonthSelected(month: number) {\n        const normalizedDate =\n            this.dateAdapter.createDate(this.dateAdapter.getYear(this.activeDate), month, 1);\n\n        this.monthSelected.emit(normalizedDate);\n\n        const daysInMonth = this.dateAdapter.getNumDaysInMonth(normalizedDate);\n\n        this.selectedChange.emit(this.dateAdapter.createDate(\n            this.dateAdapter.getYear(this.activeDate), month,\n            Math.min(this.dateAdapter.getDate(this.activeDate), daysInMonth)));\n    }\n\n    /** Handles keydown events on the calendar body when calendar is in year view. */\n    handleCalendarBodyKeydown(event: KeyboardEvent): void {\n        // TODO(mmalerba): We currently allow keyboard navigation to disabled dates, but just prevent\n        // disabled ones from being selected. This may not be ideal, we should look into whether\n        // navigation should skip over disabled dates, and if so, how to implement that efficiently.\n\n        const oldActiveDate = this._activeDate;\n        const isRtl = this.isRtl();\n\n        const VERTICAL_SHIFT = 4;\n        const PAGE_SHIFT = 10;\n        const MAX_MONTH_INDEX = 11;\n\n        // tslint:disable-next-line:deprecation\n        switch (event.keyCode) {\n            case LEFT_ARROW:\n                this.activeDate = this.dateAdapter.addCalendarMonths(this._activeDate, isRtl ? 1 : -1);\n                break;\n            case RIGHT_ARROW:\n                this.activeDate = this.dateAdapter.addCalendarMonths(this._activeDate, isRtl ? -1 : 1);\n                break;\n            case UP_ARROW:\n                this.activeDate = this.dateAdapter.addCalendarMonths(this._activeDate, -VERTICAL_SHIFT);\n                break;\n            case DOWN_ARROW:\n                this.activeDate = this.dateAdapter.addCalendarMonths(this._activeDate, VERTICAL_SHIFT);\n                break;\n            case HOME:\n                this.activeDate = this.dateAdapter.addCalendarMonths(this._activeDate,\n                    -this.dateAdapter.getMonth(this._activeDate));\n                break;\n            case END:\n                this.activeDate = this.dateAdapter.addCalendarMonths(this._activeDate,\n                    MAX_MONTH_INDEX - this.dateAdapter.getMonth(this._activeDate));\n                break;\n            case PAGE_UP:\n                this.activeDate =\n                    this.dateAdapter.addCalendarYears(this._activeDate, event.altKey ? -PAGE_SHIFT : -1);\n                break;\n            case PAGE_DOWN:\n                this.activeDate =\n                    this.dateAdapter.addCalendarYears(this._activeDate, event.altKey ? PAGE_SHIFT : 1);\n                break;\n            case ENTER:\n            case SPACE:\n                this.onMonthSelected(this.dateAdapter.getMonth(this._activeDate));\n                break;\n            default:\n                // Don't prevent default or focus active cell on keys that we don't explicitly handle.\n                return;\n        }\n\n        if (this.dateAdapter.compareDate(oldActiveDate, this.activeDate)) {\n            this.activeDateChange.emit(this.activeDate);\n        }\n\n        this.focusActiveCell();\n        // Prevent unexpected default actions such as form submission.\n        event.preventDefault();\n    }\n\n    /** Initializes this year view. */\n    init() {\n        this.selectedMonth = this.getMonthInCurrentYear(this.selected);\n        this.todayMonth = this.getMonthInCurrentYear(this.dateAdapter.today());\n        this.yearLabel = this.dateAdapter.getYearName(this.activeDate);\n\n        const monthNames = this.dateAdapter.getMonthNames('short');\n\n        // First row of months only contains 5 elements so we can fit the year label on the same row.\n        // tslint:disable-next-line:no-magic-numbers\n        this.months = [[0, 1, 2, 3], [4, 5, 6, 7], [8, 9, 10, 11]].map((row) => row.map(\n            (month) => this.createCellForMonth(month, monthNames[month])));\n        this.changeDetectorRef.markForCheck();\n    }\n\n    /** Focuses the active cell after the microtask queue is empty. */\n    focusActiveCell() {\n        this.mcCalendarBody.focusActiveCell();\n    }\n\n    /**\n     * Gets the month in this year that the given Date falls on.\n     * Returns null if the given Date is in another year.\n     */\n    private getMonthInCurrentYear(date: D | null) {\n        return date && this.dateAdapter.getYear(date) === this.dateAdapter.getYear(this.activeDate) ?\n            this.dateAdapter.getMonth(date) : null;\n    }\n\n    /** Creates an McCalendarCell for the given month. */\n    private createCellForMonth(month: number, monthName: string) {\n        const ariaLabel = this.dateAdapter.format(\n            this.dateAdapter.createDate(this.dateAdapter.getYear(this.activeDate), month, 1),\n            this.dateFormats.display.monthYearA11yLabel);\n\n        const newMonthName = monthName[0].toLocaleUpperCase() + monthName.substr(1);\n\n        return new McCalendarCell(\n            month, newMonthName, ariaLabel, this.shouldEnableMonth(month));\n    }\n\n    /** Whether the given month is enabled. */\n    private shouldEnableMonth(month: number) {\n\n        const activeYear = this.dateAdapter.getYear(this.activeDate);\n\n        if (month === undefined || month === null ||\n            this.isYearAndMonthAfterMaxDate(activeYear, month) ||\n            this.isYearAndMonthBeforeMinDate(activeYear, month)) {\n            return false;\n        }\n\n        if (!this.dateFilter) {\n            return true;\n        }\n\n        const firstOfMonth = this.dateAdapter.createDate(activeYear, month, 1);\n\n        // If any date in the month is enabled count the month as enabled.\n        for (let date = firstOfMonth; this.dateAdapter.getMonth(date) === month;\n             date = this.dateAdapter.addCalendarDays(date, 1)) {\n            if (this.dateFilter(date)) {\n                return true;\n            }\n        }\n\n        return false;\n    }\n\n    /**\n     * Tests whether the combination month/year is after this.maxDate, considering\n     * just the month and year of this.maxDate\n     */\n    private isYearAndMonthAfterMaxDate(year: number, month: number) {\n        if (this.maxDate) {\n            const maxYear = this.dateAdapter.getYear(this.maxDate);\n            const maxMonth = this.dateAdapter.getMonth(this.maxDate);\n\n            return year > maxYear || (year === maxYear && month > maxMonth);\n        }\n\n        return false;\n    }\n\n    /**\n     * Tests whether the combination month/year is before this.minDate, considering\n     * just the month and year of this.minDate\n     */\n    private isYearAndMonthBeforeMinDate(year: number, month: number) {\n        if (this.minDate) {\n            const minYear = this.dateAdapter.getYear(this.minDate);\n            const minMonth = this.dateAdapter.getMonth(this.minDate);\n\n            return year < minYear || (year === minYear && month < minMonth);\n        }\n\n        return false;\n    }\n\n    /**\n     * @param obj The object to check.\n     * @returns The given object if it is both a date instance and valid, otherwise null.\n     */\n    private getValidDateOrNull(obj: any): D | null {\n        return (this.dateAdapter.isDateInstance(obj) && this.dateAdapter.isValid(obj)) ? obj : null;\n    }\n\n    /** Determines whether the user has the RTL layout direction. */\n    private isRtl() {\n        return this.dir && this.dir.value === 'rtl';\n    }\n}\n","import {\n    ChangeDetectionStrategy,\n    Component,\n    Directive,\n    ElementRef,\n    OnDestroy,\n    QueryList,\n    ViewEncapsulation,\n    ContentChildren\n} from '@angular/core';\n\nimport { FocusMonitor } from '@ptsecurity/cdk/a11y';\n\nimport { mixinColor, mixinDisabled, CanColor, CanDisable, CanDisableCtor, CanColorCtor } from '@ptsecurity/mosaic/core';\nimport { McIcon } from '@ptsecurity/mosaic/icon';\n\n\n@Directive({\n    selector: 'button[mc-button], a[mc-button]',\n    host: { class: 'mc-button' }\n})\nexport class McButtonCSSStyler {}\n\n\n@Directive({\n    selector: 'button[mc-icon-button], a[mc-icon-button]',\n    queries: {\n        contentChildren: new ContentChildren(McIcon)\n    },\n    host: { class: 'mc-icon-button' }\n})\nexport class McIconButtonCSSStyler {\n    nativeElement: Element;\n\n    contentChildren: QueryList<McIcon>;\n\n    constructor(elementRef: ElementRef) {\n        this.nativeElement = elementRef.nativeElement;\n    }\n\n    ngAfterContentInit() {\n        this._addClassModificatorForIcons();\n    }\n\n    _addClassModificatorForIcons() {\n        const twoIcons = 2;\n        const icons = this.contentChildren.map((item) => item._elementRef.nativeElement);\n\n        if (icons.length === 1) {\n            const iconElement = icons[0];\n            const COMMENT_NODE = 8;\n\n            if (!iconElement.previousElementSibling && !iconElement.nextElementSibling) {\n                if (iconElement.nextSibling && iconElement.nextSibling.nodeType !== COMMENT_NODE) {\n                    iconElement.classList.add('mc-icon_left');\n                    this.nativeElement.classList.add('mc-icon-button_left');\n                }\n\n                if (iconElement.previousSibling && iconElement.previousSibling.nodeType !== COMMENT_NODE) {\n                    iconElement.classList.add('mc-icon_right');\n                    this.nativeElement.classList.add('mc-icon-button_right');\n                }\n            }\n        } else if (icons.length === twoIcons) {\n            const firstIconElement = icons[0];\n            const secondIconElement = icons[1];\n\n            firstIconElement.classList.add('mc-icon_left');\n            secondIconElement.classList.add('mc-icon_right');\n        }\n    }\n}\n\n\nexport class McButtonBase {\n    constructor(public _elementRef: ElementRef) {}\n}\n\nexport const _McButtonMixinBase:\n    CanDisableCtor &\n    CanColorCtor &\n    typeof McButtonBase =\n        mixinColor(mixinDisabled(McButtonBase));\n\n\n@Component({\n    selector: `\n        button[mc-button],\n        button[mc-xs-button],\n        button[mc-sm-button],\n        button[mc-lg-button],\n        button[mc-xl-button]\n    `,\n    templateUrl: './button.component.html',\n    styleUrls: ['./button.css'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n    inputs: ['disabled', 'color'],\n    host: {\n        '[disabled]': 'disabled || null'\n    }\n})\nexport class McButton extends _McButtonMixinBase implements OnDestroy, CanDisable, CanColor {\n    constructor(elementRef: ElementRef, private _focusMonitor: FocusMonitor) {\n        super(elementRef);\n\n        this._focusMonitor.monitor(this._elementRef.nativeElement, true);\n    }\n\n    ngOnDestroy() {\n        this._focusMonitor.stopMonitoring(this._elementRef.nativeElement);\n    }\n\n    focus(): void {\n        this._getHostElement().focus();\n    }\n\n    _getHostElement() {\n        return this._elementRef.nativeElement;\n    }\n}\n\n\n@Component({\n    selector: 'a[mc-button], a[mc-xs-button], a[mc-sm-button], a[mc-lg-button], a[mc-xl-button]',\n    templateUrl: './button.component.html',\n    styleUrls: ['./button.css'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n    inputs: ['disabled', 'color'],\n    host: {\n        '[attr.tabindex]': 'disabled ? -1 : 0',\n        '[attr.disabled]': 'disabled || null',\n        '(click)': '_haltDisabledEvents($event)'\n    }\n})\nexport class McAnchor extends McButton {\n    constructor(focusMonitor: FocusMonitor, elementRef: ElementRef) {\n        super(elementRef, focusMonitor);\n    }\n\n    _haltDisabledEvents(event: Event) {\n        if (this.disabled) {\n            event.preventDefault();\n            event.stopImmediatePropagation();\n        }\n    }\n}\n\n\n@Component({\n    selector: 'button[mc-icon-button]',\n    templateUrl: './button.component.html',\n    styleUrls: ['./button.css'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n    inputs: ['disabled', 'color'],\n    host: {\n        '[attr.tabindex]': 'disabled ? -1 : 0',\n        '[attr.disabled]': 'disabled || null'\n    }\n})\nexport class McIconButton extends McButton {\n    constructor(focusMonitor: FocusMonitor, elementRef: ElementRef) {\n        super(elementRef, focusMonitor);\n    }\n\n    _haltDisabledEvents(event: Event) {\n        if (this.disabled) {\n            event.preventDefault();\n            event.stopImmediatePropagation();\n        }\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { A11yModule } from '@ptsecurity/cdk/a11y';\nimport { PlatformModule } from '@ptsecurity/cdk/platform';\n\nimport {\n    McButton,\n    McAnchor,\n    McIconButton,\n    McButtonCSSStyler,\n    McIconButtonCSSStyler\n} from './button.component';\n\n\n@NgModule({\n    imports: [\n        CommonModule,\n        A11yModule,\n        PlatformModule\n    ],\n    exports: [\n        McButton,\n        McAnchor,\n        McIconButton,\n        McButtonCSSStyler,\n        McIconButtonCSSStyler\n    ],\n    declarations: [\n        McButton,\n        McAnchor,\n        McIconButton,\n        McButtonCSSStyler,\n        McIconButtonCSSStyler\n    ]\n})\nexport class McButtonModule {}\n","import {\n    Output,\n    ChangeDetectionStrategy,\n    Component,\n    ElementRef, Input,\n    OnDestroy, EventEmitter,\n    ViewEncapsulation, HostBinding\n} from '@angular/core';\n\nimport { FocusMonitor } from '@ptsecurity/cdk/a11y';\nimport { SPACE } from '@ptsecurity/cdk/keycodes';\n\n\n@Component({\n    selector: 'mc-card',\n    templateUrl: './card.component.html',\n    styleUrls: ['./card.component.css'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n    inputs: ['color'],\n    host: {\n        class: 'mc-card',\n        '[class.mc-card_readonly]': 'readonly',\n        '[class.mc-card_selected]': 'selected',\n        '(keydown)': 'onKeyDown($event)',\n        '(click)': 'onClick($event)'\n    }\n})\nexport class McCard implements OnDestroy {\n    get tabIndex(): number | null {\n        return this.readonly ? null : this._tabIndex;\n    }\n\n    @HostBinding('attr.tabIndex')\n    @Input()\n    set tabIndex(value: number | null) {\n        this._tabIndex = value;\n    }\n\n    @Input()\n    readonly = false;\n\n    @Input()\n    selected = false;\n\n    @Output()\n    selectedChange = new EventEmitter<boolean>();\n\n    private _tabIndex: number | null = 0;\n\n    constructor(private _elementRef: ElementRef, private _focusMonitor: FocusMonitor) {\n        this._focusMonitor.monitor(this._elementRef.nativeElement, false);\n    }\n\n    ngOnDestroy() {\n        this._focusMonitor.stopMonitoring(this._elementRef.nativeElement);\n    }\n\n    focus(): void {\n        this.hostElement.focus();\n    }\n\n    onClick($event: MouseEvent) {\n        if (!this.readonly) {\n            $event.stopPropagation();\n\n            this.selectedChange.emit(!this.selected);\n        }\n    }\n\n    private get hostElement() {\n        return this._elementRef.nativeElement;\n    }\n\n    onKeyDown($event: KeyboardEvent) {\n        switch ($event.keyCode) {\n            case SPACE:\n                if (!this.readonly) {\n                    $event.preventDefault();\n                    this.selectedChange.emit(!this.selected);\n                }\n                break;\n            default:\n        }\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { A11yModule } from '@ptsecurity/cdk/a11y';\nimport { PlatformModule } from '@ptsecurity/cdk/platform';\n\nimport {\n    McCard\n} from './card.component';\n\n\n@NgModule({\n    imports: [\n        CommonModule,\n        A11yModule,\n        PlatformModule\n    ],\n    exports: [McCard],\n    declarations: [McCard]\n})\nexport class McCardModule {}\n","import { InjectionToken } from '@angular/core';\n\n\n/**\n * Checkbox click action when user click on input element.\n * noop: Do not toggle checked or indeterminate.\n * check: Only toggle checked status, ignore indeterminate.\n * check-indeterminate: Toggle checked status, set indeterminate to false. Default behavior.\n * undefined: Same as `check-indeterminate`.\n */\nexport type McCheckboxClickAction = 'noop' | 'check' | 'check-indeterminate' | undefined;\n\n/**\n * Injection token that can be used to specify the checkbox click behavior.\n */\nexport const MC_CHECKBOX_CLICK_ACTION =\n    new InjectionToken<McCheckboxClickAction>('mc-checkbox-click-action');\n","import {\n    AfterViewInit,\n    Attribute,\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    ElementRef,\n    EventEmitter,\n    forwardRef,\n    Inject,\n    Input,\n    OnDestroy,\n    Optional,\n    Output,\n    ViewChild,\n    ViewEncapsulation\n} from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { FocusMonitor, FocusOrigin } from '@ptsecurity/cdk/a11y';\nimport {\n    CanColor, CanColorCtor,\n    CanDisable, CanDisableCtor,\n    HasTabIndex, HasTabIndexCtor,\n    mixinColor,\n    mixinDisabled,\n    mixinTabIndex,\n    toBoolean\n} from '@ptsecurity/mosaic/core';\n\nimport { MC_CHECKBOX_CLICK_ACTION, McCheckboxClickAction } from './checkbox-config';\n\n\n// Increasing integer for generating unique ids for checkbox components.\nlet nextUniqueId = 0;\n\n/**\n * Provider Expression that allows mc-checkbox to register as a ControlValueAccessor.\n * This allows it to support [(ngModel)].\n * @docs-private\n */\nexport const MC_CHECKBOX_CONTROL_VALUE_ACCESSOR: any = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => McCheckbox),\n    multi: true\n};\n\n/**\n * Represents the different states that require custom transitions between them.\n * @docs-private\n */\nexport enum TransitionCheckState {\n    /** The initial state of the component before any user interaction. */\n    Init,\n    /** The state representing the component when it's becoming checked. */\n    Checked,\n    /** The state representing the component when it's becoming unchecked. */\n    Unchecked,\n    /** The state representing the component when it's becoming indeterminate. */\n    Indeterminate\n}\n\n/** Change event object emitted by McCheckbox. */\nexport class McCheckboxChange {\n    /** The source McCheckbox of the event. */\n    source: McCheckbox;\n    /** The new `checked` value of the checkbox. */\n    checked: boolean;\n}\n\n// Boilerplate for applying mixins to McCheckbox.\n/** @docs-private */\nexport class McCheckboxBase {\n    constructor(public _elementRef: ElementRef) {\n    }\n}\n\nexport const _McCheckboxMixinBase:\n    HasTabIndexCtor &\n    CanColorCtor &\n    CanDisableCtor &\n    typeof McCheckboxBase =\n        mixinTabIndex(mixinColor(mixinDisabled(McCheckboxBase)));\n\n\n/**\n * A mosaic checkbox component. Supports all of the functionality of an HTML5 checkbox,\n * and exposes a similar API. A McCheckbox can be either checked, unchecked, indeterminate, or\n * disabled. Note that all additional accessibility attributes are taken care of by the component,\n * so there is no need to provide them yourself. However, if you want to omit a label and still\n * have the checkbox be accessible, you may supply an [aria-label] input.\n */\n@Component({\n    selector: 'mc-checkbox',\n    templateUrl: 'checkbox.html',\n    styleUrls: ['checkbox.css'],\n    exportAs: 'mcCheckbox',\n    host: {\n        class: 'mc-checkbox',\n        '[id]': 'id',\n        '[attr.id]': 'id',\n        '[class.mc-indeterminate]': 'indeterminate',\n        '[class.mc-checked]': 'checked',\n        '[class.mc-disabled]': 'disabled',\n        '[class.mc-checkbox-label-before]': 'labelPosition == \"before\"'\n    },\n    providers: [MC_CHECKBOX_CONTROL_VALUE_ACCESSOR],\n    inputs: ['color', 'tabIndex'],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class McCheckbox extends _McCheckboxMixinBase implements ControlValueAccessor,\n    AfterViewInit, OnDestroy, CanColor, CanDisable, HasTabIndex {\n\n    /**\n     * Attached to the aria-label attribute of the host element. In most cases, arial-labelledby will\n     * take precedence so this may be omitted.\n     */\n    @Input('aria-label') ariaLabel: string = '';\n\n    /**\n     * Users can specify the `aria-labelledby` attribute which will be forwarded to the input element\n     */\n    @Input('aria-labelledby') ariaLabelledby: string | null = null;\n\n    private _uniqueId: string = `mc-checkbox-${++nextUniqueId}`;\n\n    /** A unique id for the checkbox input. If none is supplied, it will be auto-generated. */\n    @Input() id: string = this._uniqueId;\n\n    /** Returns the unique id for the visual hidden input. */\n    get inputId(): string {\n        return `${this.id || this._uniqueId}-input`;\n    }\n\n    /** Whether the checkbox is required. */\n    @Input()\n    get required(): boolean {\n        return this._required;\n    }\n\n    set required(value: boolean) {\n        this._required = toBoolean(value);\n    }\n\n    private _required: boolean;\n\n    /** Whether the label should appear after or before the checkbox. Defaults to 'after' */\n    @Input() labelPosition: 'before' | 'after' = 'after';\n\n    /** Name value will be applied to the input element if present */\n    @Input() name: string | null = null;\n\n    /** Event emitted when the checkbox's `checked` value changes. */\n    @Output() readonly change: EventEmitter<McCheckboxChange> =\n        new EventEmitter<McCheckboxChange>();\n\n    /** Event emitted when the checkbox's `indeterminate` value changes. */\n    @Output() readonly indeterminateChange: EventEmitter<boolean> = new EventEmitter<boolean>();\n\n    /** The value attribute of the native input element */\n    @Input() value: string;\n\n    /** The native `<input type=\"checkbox\">` element */\n    @ViewChild('input') _inputElement: ElementRef;\n\n    /**\n     * Called when the checkbox is blurred. Needed to properly implement ControlValueAccessor.\n     * @docs-private\n     */\n    _onTouched: () => any = () => {\n    }\n\n    private _currentAnimationClass: string = '';\n\n    private _currentCheckState: TransitionCheckState = TransitionCheckState.Init;\n\n    private _controlValueAccessorChangeFn: (value: any) => void = () => {\n    }\n\n    constructor(elementRef: ElementRef,\n                private _changeDetectorRef: ChangeDetectorRef,\n                private _focusMonitor: FocusMonitor,\n                @Attribute('tabindex') tabIndex: string,\n                @Optional() @Inject(MC_CHECKBOX_CLICK_ACTION)\n                private _clickAction: McCheckboxClickAction) {\n        super(elementRef);\n\n        this.tabIndex = parseInt(tabIndex) || 0;\n    }\n\n    ngAfterViewInit() {\n        this._focusMonitor\n            .monitor(this._inputElement.nativeElement)\n            .subscribe((focusOrigin) => this._onInputFocusChange(focusOrigin));\n    }\n\n    ngOnDestroy() {\n        this._focusMonitor.stopMonitoring(this._inputElement.nativeElement);\n    }\n\n    /**\n     * Whether the checkbox is checked.\n     */\n    @Input()\n    get checked(): boolean {\n        return this._checked;\n    }\n\n    set checked(value: boolean) {\n        if (value != this.checked) {\n            this._checked = value;\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n\n    private _checked: boolean = false;\n\n    /**\n     * Whether the checkbox is disabled. This fully overrides the implementation provided by\n     * mixinDisabled, but the mixin is still required because mixinTabIndex requires it.\n     */\n    @Input()\n    get disabled() {\n        return this._disabled;\n    }\n\n    set disabled(value: any) {\n        if (value != this.disabled) {\n            this._disabled = value;\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n\n    private _disabled: boolean = false;\n\n    /**\n     * Whether the checkbox is indeterminate. This is also known as \"mixed\" mode and can be used to\n     * represent a checkbox with three states, e.g. a checkbox that represents a nested list of\n     * checkable items. Note that whenever checkbox is manually clicked, indeterminate is immediately\n     * set to false.\n     */\n    @Input()\n    get indeterminate(): boolean {\n        return this._indeterminate;\n    }\n\n    set indeterminate(value: boolean) {\n        const changed = value != this._indeterminate;\n        this._indeterminate = value;\n\n        if (changed) {\n            if (this._indeterminate) {\n                this._transitionCheckState(TransitionCheckState.Indeterminate);\n            } else {\n                this._transitionCheckState(\n                    this.checked ? TransitionCheckState.Checked : TransitionCheckState.Unchecked);\n            }\n            this.indeterminateChange.emit(this._indeterminate);\n        }\n    }\n\n    private _indeterminate: boolean = false;\n\n    /** Method being called whenever the label text changes. */\n    _onLabelTextChange() {\n        // This method is getting called whenever the label of the checkbox changes.\n        // Since the checkbox uses the OnPush strategy we need to notify it about the change\n        // that has been recognized by the cdkObserveContent directive.\n        this._changeDetectorRef.markForCheck();\n    }\n\n    // Implemented as part of ControlValueAccessor.\n    writeValue(value: any) {\n        this.checked = !!value;\n    }\n\n    // Implemented as part of ControlValueAccessor.\n    registerOnChange(fn: (value: any) => void) {\n        this._controlValueAccessorChangeFn = fn;\n    }\n\n    // Implemented as part of ControlValueAccessor.\n    registerOnTouched(fn: any) {\n        this._onTouched = fn;\n    }\n\n    // Implemented as part of ControlValueAccessor.\n    setDisabledState(isDisabled: boolean) {\n        this.disabled = isDisabled;\n    }\n\n    _getAriaChecked(): 'true' | 'false' | 'mixed' {\n        return this.checked ? 'true' : (this.indeterminate ? 'mixed' : 'false');\n    }\n\n    private _transitionCheckState(newState: TransitionCheckState) {\n        const oldState = this._currentCheckState;\n        const element: HTMLElement = this._elementRef.nativeElement;\n\n        if (oldState === newState) {\n            return;\n        }\n        if (this._currentAnimationClass.length > 0) {\n            element.classList.remove(this._currentAnimationClass);\n        }\n\n        this._currentCheckState = newState;\n\n        if (this._currentAnimationClass.length > 0) {\n            element.classList.add(this._currentAnimationClass);\n        }\n    }\n\n    private _emitChangeEvent() {\n        const event = new McCheckboxChange();\n        event.source = this;\n        event.checked = this.checked;\n\n        this._controlValueAccessorChangeFn(this.checked);\n        this.change.emit(event);\n    }\n\n    /** Function is called whenever the focus changes for the input element. */\n    private _onInputFocusChange(focusOrigin: FocusOrigin) {\n        if (focusOrigin) {\n            this._onTouched();\n        }\n    }\n\n    /** Toggles the `checked` state of the checkbox. */\n    toggle(): void {\n        this.checked = !this.checked;\n    }\n\n    /**\n     * Event handler for checkbox input element.\n     * Toggles checked state if element is not disabled.\n     * Do not toggle on (change) event since IE doesn't fire change event when\n     *   indeterminate checkbox is clicked.\n     * @param event\n     */\n    _onInputClick(event: Event) {\n        // We have to stop propagation for click events on the visual hidden input element.\n        // By default, when a user clicks on a label element, a generated click event will be\n        // dispatched on the associated input element. Since we are using a label element as our\n        // root container, the click event on the `checkbox` will be executed twice.\n        // The real click event will bubble up, and the generated click event also tries to bubble up.\n        // This will lead to multiple click events.\n        // Preventing bubbling for the second event will solve that issue.\n        event.stopPropagation();\n\n        // If resetIndeterminate is false, and the current state is indeterminate, do nothing on click\n        if (!this.disabled && this._clickAction !== 'noop') {\n            // When user manually click on the checkbox, `indeterminate` is set to false.\n            if (this.indeterminate && this._clickAction !== 'check') {\n\n                Promise.resolve().then(() => {\n                    this._indeterminate = false;\n                    this.indeterminateChange.emit(this._indeterminate);\n                });\n            }\n\n            this.toggle();\n            this._transitionCheckState(\n                this._checked ? TransitionCheckState.Checked : TransitionCheckState.Unchecked);\n\n            // Emit our custom change event if the native input emitted one.\n            // It is important to only emit it, if the native input triggered one, because\n            // we don't want to trigger a change event, when the `checked` variable changes for example.\n            this._emitChangeEvent();\n        } else if (!this.disabled && this._clickAction === 'noop') {\n            // Reset native input when clicked with noop. The native checkbox becomes checked after\n            // click, reset it to be align with `checked` value of `mc-checkbox`.\n            this._inputElement.nativeElement.checked = this.checked;\n            this._inputElement.nativeElement.indeterminate = this.indeterminate;\n        }\n    }\n\n    /** Focuses the checkbox. */\n    focus(): void {\n        this._focusMonitor.focusVia(this._inputElement.nativeElement, 'keyboard');\n    }\n\n    _onInteractionEvent(event: Event) {\n        // We always have to stop propagation on the change event.\n        // Otherwise the change event, from the input element, will bubble up and\n        // emit its event object to the `change` output.\n        event.stopPropagation();\n    }\n}\n","import {\n    Directive,\n    forwardRef,\n    Provider\n} from '@angular/core';\nimport {\n    CheckboxRequiredValidator,\n    NG_VALIDATORS\n} from '@angular/forms';\n\n\nexport const MC_CHECKBOX_REQUIRED_VALIDATOR: Provider = {\n    provide: NG_VALIDATORS,\n    useExisting: forwardRef(() => McCheckboxRequiredValidator),\n    multi: true\n};\n\n/**\n * Validator for Mosaic checkbox's required attribute in template-driven checkbox.\n * Current CheckboxRequiredValidator only work with `input type=checkbox` and does not\n * work with `mc-checkbox`.\n */\n@Directive({\n    selector: `mc-checkbox[required][formControlName],\n             mc-checkbox[required][formControl], mc-checkbox[required][ngModel]`,\n    providers: [MC_CHECKBOX_REQUIRED_VALIDATOR],\n    host: { '[attr.required]': 'required ? \"\" : null' }\n})\nexport class McCheckboxRequiredValidator extends CheckboxRequiredValidator {\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { McCheckbox } from './checkbox';\nimport { McCheckboxRequiredValidator } from './checkbox-required-validator';\n\n\n@NgModule({\n    imports: [CommonModule],\n    exports: [McCheckbox, McCheckboxRequiredValidator],\n    declarations: [McCheckbox, McCheckboxRequiredValidator]\n})\nexport class McCheckboxModule {\n}\n","import { Component } from '@angular/core';\n\n\n@Component({\n    selector: 'mc-cleaner',\n    template: '<i class=\"mc-icon_light\" mc-icon=\"mc-close-M_16\" color=\"second\"></i>'\n})\nexport class McCleaner {}\n","import { NgControl } from '@angular/forms';\nimport { Observable } from 'rxjs';\n\n\n/** An interface which allows a control to work inside of a `MсFormField`. */\nexport abstract class McFormFieldControl<T> {\n    /** The value of the control. */\n    value: T | null;\n\n    /**\n     * Stream that emits whenever the state of the control changes such that the parent `MсFormField`\n     * needs to run change detection.\n     */\n    readonly stateChanges: Observable<void>;\n\n    /** The element ID for this control. */\n    readonly id: string;\n\n    /** The placeholder for this control. */\n    readonly placeholder: string;\n\n    /** Gets the NgControl for this control. */\n    readonly ngControl: NgControl | null;\n\n    /** Whether the control is focused. */\n    readonly focused: boolean;\n\n    /** Whether the control is empty. */\n    readonly empty: boolean;\n\n    /** Whether the control is required. */\n    readonly required: boolean;\n\n    /** Whether the control is disabled. */\n    readonly disabled: boolean;\n\n    /** Whether the control is in an error state. */\n    readonly errorState: boolean;\n\n    /**\n     * An optional name for the control type that can be used to distinguish `mc-form-field` elements\n     * based on their control type. The form field will add a class,\n     * `mc-form-field-type-{{controlType}}` to its root element.\n     */\n    readonly controlType?: string;\n\n    /** Handles a click on the control's container. */\n    abstract onContainerClick(event: MouseEvent): void;\n}\n","import { Observable } from 'rxjs';\n\n\n/** An interface which allows a control to work inside of a `MсFormField`. */\nexport abstract class McFormFieldNumberControl<T> {\n    /** The value of the control. */\n    value: T | null;\n\n    /**\n     * Stream that emits whenever the state of the control changes such that the parent `MсFormField`\n     * needs to run change detection.\n     */\n    readonly stateChanges: Observable<void>;\n\n    /** the number step */\n    step: number;\n\n    /** the number big step */\n    bigStep: number;\n\n    /** Whether the control is focused. */\n    readonly focused: boolean;\n\n    /** Handles step up and down */\n    abstract stepUp(step: number): void;\n\n    abstract stepDown(step: number): void;\n}\n","import { Directive, Input } from '@angular/core';\n\n\nlet nextUniqueId = 0;\n\n@Directive({\n    selector: 'mc-hint',\n    host: {\n        class: 'mc-hint',\n        '[attr.id]': 'id'\n    }\n})\nexport class McHint {\n    @Input() id: string = `mc-hint-${nextUniqueId++}`;\n}\n","import { Directive } from '@angular/core';\n\n\n@Directive({\n    selector: '[mcPrefix]'\n})\nexport class McPrefix {\n}\n","import { Component, EventEmitter, Output } from '@angular/core';\n\n\n@Component({\n    selector: 'mc-stepper',\n    template: `\n        <i class=\"mc mc-icon mc-icon_light mc-second mc-stepper-step-up mc-angle-down-L_16\"\n           (mousedown)=\"onStepUp($event)\">\n        </i>\n        <i class=\"mc mc-icon mc-icon_light mc-second mc-stepper-step-down mc-angle-down-L_16\"\n           (mousedown)=\"onStepDown($event)\">\n        </i>\n    `\n})\nexport class McStepper {\n    @Output()\n    readonly stepUp: EventEmitter<void> = new EventEmitter<void>();\n    @Output()\n    readonly stepDown: EventEmitter<void> = new EventEmitter<void>();\n\n    onStepUp($event: MouseEvent) {\n        this.stepUp.emit();\n        $event.preventDefault();\n    }\n\n    onStepDown($event: MouseEvent) {\n        this.stepDown.emit();\n        $event.preventDefault();\n    }\n}\n","import { Directive } from '@angular/core';\n\n\n@Directive({\n    selector: '[mcSuffix]'\n})\nexport class McSuffix {\n}\n","import {\n    AfterContentChecked,\n    AfterContentInit,\n    AfterViewInit,\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    ContentChild,\n    ContentChildren, Directive,\n    ElementRef,\n    QueryList,\n    ViewEncapsulation\n} from '@angular/core';\nimport { NgControl } from '@angular/forms';\nimport { ESCAPE } from '@ptsecurity/cdk/keycodes';\nimport { CanColor, CanColorCtor, mixinColor } from '@ptsecurity/mosaic/core';\nimport { EMPTY, merge } from 'rxjs';\nimport { startWith } from 'rxjs/operators';\n\n\nimport { McCleaner } from './cleaner';\nimport { McFormFieldControl } from './form-field-control';\nimport { getMcFormFieldMissingControlError } from './form-field-errors';\nimport { McFormFieldNumberControl } from './form-field-number-control';\nimport { McHint } from './hint';\nimport { McPrefix } from './prefix';\nimport { McStepper } from './stepper';\nimport { McSuffix } from './suffix';\n\n\nlet nextUniqueId = 0;\n\nexport class McFormFieldBase {\n    constructor(public _elementRef: ElementRef) {}\n}\n\nexport const _McFormFieldMixinBase: CanColorCtor & typeof McFormFieldBase = mixinColor(McFormFieldBase);\n\n@Component({\n    selector: 'mc-form-field',\n    exportAs: 'mcFormField',\n    templateUrl: 'form-field.html',\n    // McInput is a directive and can't have styles, so we need to include its styles here.\n    // The McInput styles are fairly minimal so it shouldn't be a big deal for people who\n    // aren't using McInput.\n    styleUrls: [\n        'form-field.css',\n        '../input/input.css',\n        '../textarea/textarea.css'\n    ],\n    host: {\n        class: 'mc-form-field',\n        '[class.mc-form-field_invalid]': '_control.errorState',\n        '[class.mc-disabled]': '_control.disabled',\n        '[class.mc-form-field_has-prefix]': 'hasPrefix',\n        '[class.mc-form-field_has-suffix]': 'hasSuffix',\n        '[class.mc-form-field_has-cleaner]': 'canShowCleaner',\n        '[class.mc-form-field_has-stepper]': 'canShowStepper',\n        '[class.mc-focused]': '_control.focused',\n        '[class.ng-untouched]': '_shouldForward(\"untouched\")',\n        '[class.ng-touched]': '_shouldForward(\"touched\")',\n        '[class.ng-pristine]': '_shouldForward(\"pristine\")',\n        '[class.ng-dirty]': '_shouldForward(\"dirty\")',\n        '[class.ng-valid]': '_shouldForward(\"valid\")',\n        '[class.ng-invalid]': '_shouldForward(\"invalid\")',\n        '[class.ng-pending]': '_shouldForward(\"pending\")',\n        '(keydown)': 'onKeyDown($event)',\n        '(mouseenter)': 'onHoverChanged(true)',\n        '(mouseleave)': 'onHoverChanged(false)'\n    },\n    inputs: ['color'],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\n\nexport class McFormField extends _McFormFieldMixinBase implements\n    AfterContentInit, AfterContentChecked, AfterViewInit, CanColor {\n\n    @ContentChild(McFormFieldControl) _control: McFormFieldControl<any>;\n    @ContentChild(McFormFieldNumberControl) _numberControl: McFormFieldNumberControl<any>;\n    @ContentChild(McStepper) _stepper: McStepper;\n\n    @ContentChildren(McHint) _hint: QueryList<McHint>;\n    @ContentChildren(McSuffix) _suffix: QueryList<McSuffix>;\n    @ContentChildren(McPrefix) _prefix: QueryList<McPrefix>;\n    @ContentChildren(McCleaner) _cleaner: QueryList<McCleaner>;\n\n    // Unique id for the internal form field label.\n    _labelId = `mc-form-field-label-${nextUniqueId++}`;\n\n    hovered: boolean = false;\n\n    constructor(public _elementRef: ElementRef, private _changeDetectorRef: ChangeDetectorRef) {\n        super(_elementRef);\n    }\n\n    ngAfterContentInit() {\n        this._validateControlChild();\n\n        if (this._control.controlType) {\n            this._elementRef.nativeElement.classList\n                .add(`mc-form-field-type-${this._control.controlType}`);\n\n            if (this._numberControl && this.hasStepper) {\n                this._stepper.stepUp.subscribe(this.onStepUp.bind(this));\n                this._stepper.stepDown.subscribe(this.onStepDown.bind(this));\n            }\n        }\n\n        // Subscribe to changes in the child control state in order to update the form field UI.\n        this._control.stateChanges.pipe(startWith())\n            .subscribe(() => {\n                this._changeDetectorRef.markForCheck();\n            });\n\n        if (this._numberControl) {\n            this._numberControl.stateChanges.pipe(startWith())\n                .subscribe(() => {\n                    this._changeDetectorRef.markForCheck();\n                });\n        }\n\n        // Run change detection if the value changes.\n        const valueChanges = this._control.ngControl && this._control.ngControl.valueChanges || EMPTY;\n\n        merge(valueChanges)\n            .subscribe(() => this._changeDetectorRef.markForCheck());\n    }\n\n    ngAfterContentChecked() {\n        this._validateControlChild();\n    }\n\n    ngAfterViewInit() {\n        // Avoid animations on load.\n        this._changeDetectorRef.detectChanges();\n    }\n\n    clearValue($event) {\n        $event.stopPropagation();\n\n        if (this._control && this._control.ngControl) {\n            this._control.ngControl.reset();\n        }\n    }\n\n    onContainerClick($event) {\n        if (this._control.onContainerClick) {\n            this._control.onContainerClick($event);\n        }\n    }\n\n    onKeyDown(event: KeyboardEvent): void {\n        // tslint:disable-next-line:deprecation\n        if (event.keyCode === ESCAPE && this._control.focused && this.hasCleaner) {\n            if (this._control && this._control.ngControl) {\n                this._control.ngControl.reset();\n            }\n\n            event.preventDefault();\n        }\n    }\n\n    onHoverChanged(isHovered: boolean) {\n        if (isHovered !== this.hovered) {\n            this.hovered  = isHovered;\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n\n    onStepUp() {\n        if (this._numberControl) {\n            this._numberControl.stepUp(this._numberControl.step);\n        }\n    }\n\n    onStepDown() {\n        if (this._numberControl) {\n            this._numberControl.stepDown(this._numberControl.step);\n        }\n    }\n\n    /** Determines whether a class from the NgControl should be forwarded to the host element. */\n    _shouldForward(prop: keyof NgControl): boolean {\n        const ngControl = this._control ? this._control.ngControl : null;\n\n        return ngControl && ngControl[prop];\n    }\n\n    /** Throws an error if the form field's control is missing. */\n    protected _validateControlChild() {\n        if (!this._control) {\n            throw getMcFormFieldMissingControlError();\n        }\n    }\n\n    get hasHint(): boolean {\n        return this._hint && this._hint.length > 0;\n    }\n\n    get hasSuffix(): boolean {\n        return this._suffix && this._suffix.length > 0;\n    }\n\n    get hasPrefix(): boolean {\n        return this._prefix && this._prefix.length > 0;\n    }\n\n    get hasCleaner(): boolean {\n        return this._cleaner && this._cleaner.length > 0;\n    }\n\n    get hasStepper(): boolean {\n        return !!this._stepper;\n    }\n\n    get canShowCleaner(): boolean {\n        return this.hasCleaner &&\n            this._control &&\n            this._control.ngControl\n                ? this._control.ngControl.value && !this._control.disabled\n                : false;\n    }\n\n\n    get disabled(): boolean {\n        return this._control && this._control.disabled;\n    }\n\n    get canShowStepper(): boolean {\n        return this._numberControl &&\n            !this.disabled &&\n            (\n                this._numberControl.focused ||\n                this.hovered\n            );\n    }\n}\n\n@Directive({\n    selector: 'mc-form-field[mcFormFieldWithoutBorders]',\n    exportAs: 'mcFormFieldWithoutBorders',\n    host: { class: 'mc-form-field_without-borders' }\n})\nexport class McFormFieldWithoutBorders {}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { McIconModule } from '@ptsecurity/mosaic/icon';\n\nimport { McCleaner } from './cleaner';\nimport { McFormField, McFormFieldWithoutBorders } from './form-field';\nimport { McHint } from './hint';\nimport { McPrefix } from './prefix';\nimport { McStepper } from './stepper';\nimport { McSuffix } from './suffix';\n\n\n@NgModule({\n    declarations: [\n        McFormField,\n        McFormFieldWithoutBorders,\n        McHint,\n        McPrefix,\n        McSuffix,\n        McCleaner,\n        McStepper\n    ],\n    imports: [CommonModule, McIconModule],\n    exports: [\n        McFormField,\n        McFormFieldWithoutBorders,\n        McHint,\n        McPrefix,\n        McSuffix,\n        McCleaner,\n        McStepper\n    ]\n})\nexport class McFormFieldModule {\n}\n","import { InjectionToken } from '@angular/core';\n\n\nexport const MC_INPUT_VALUE_ACCESSOR =\n    new InjectionToken<{ value: any }>('MC_INPUT_VALUE_ACCESSOR');\n","function sanitizeNumber(value: number): number | null {\n    return !isFinite(value) || isNaN(value)\n        ? null\n        : value;\n}\n\nfunction getPrecision(value: number): number {\n    const arr = value.toString().split('.');\n\n    return arr.length === 1\n        ? 1\n        // tslint:disable-next-line:no-magic-numbers\n        :  Math.pow(10, arr[1].length);\n}\n\nfunction add(value1: number, value2: number) {\n    const precision = Math.max(getPrecision(value1), getPrecision(value2));\n\n    const res = (value1 * precision + value2 * precision) / precision;\n\n    return sanitizeNumber(res);\n}\n\nexport const stepUp = (value: number | null,\n                       max: number,\n                       min: number,\n                       step: number\n): number | null => {\n    let res;\n\n    if (value === null) {\n        res = add(min, step);\n\n        return res === null ? null : Math.min(res, max);\n    }\n\n    res = add(value, step);\n\n    return res === null ? null : Math.max(Math.min(res, max), min);\n};\n\nexport const stepDown = (value: number | null,\n                         max: number,\n                         min: number,\n                         step: number\n): number | null => {\n    let res;\n\n    if (value === null) {\n        res = add(max, -step);\n\n        return res === null ? null : Math.max(res, min);\n    }\n\n    res = add(value, -step);\n\n    return res === null ? null : Math.min(Math.max(res, min), max);\n};\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","\nexport function isBoolean(val: any): val is boolean { return typeof val === 'boolean'; }\n\nexport function toBoolean(value: any): boolean {\n    return value != null && `${value}` !== 'false';\n}\n","import { NgModule, InjectionToken, Optional, Inject, isDevMode } from '@angular/core';\nimport { BidiModule } from '@ptsecurity/cdk/bidi';\n\n\n// Injection token that configures whether the Mosaic sanity checks are enabled.\nexport const MC_SANITY_CHECKS = new InjectionToken<boolean>('mc-sanity-checks', {\n    providedIn: 'root',\n    factory: MC_SANITY_CHECKS_FACTORY\n});\n\nexport function MC_SANITY_CHECKS_FACTORY(): boolean {\n    return true;\n}\n\n/**\n * Module that captures anything that should be loaded and/or run for *all* Mosaic\n * components. This includes Bidi, etc.\n *\n * This module should be imported to each top-level component module (e.g., McTabsModule).\n */\n@NgModule({\n    imports: [ BidiModule ],\n    exports: [ BidiModule ]\n})\nexport class McCommonModule {\n    // Whether we've done the global sanity checks (e.g. a theme is loaded, there is a doctype).\n    private _hasDoneGlobalChecks = false;\n\n    // Reference to the global `document` object.\n    private _document = typeof document === 'object' && document ? document : null;\n\n    // Reference to the global 'window' object.\n    private _window = typeof window === 'object' && window ? window : null;\n\n    constructor(@Optional() @Inject(MC_SANITY_CHECKS) private _sanityChecksEnabled: boolean) {\n        if (this._areChecksEnabled() && !this._hasDoneGlobalChecks) {\n            this._checkDoctypeIsDefined();\n            this._checkThemeIsPresent();\n            this._hasDoneGlobalChecks = true;\n        }\n    }\n\n    // Whether any sanity checks are enabled\n    private _areChecksEnabled(): boolean {\n        return this._sanityChecksEnabled && isDevMode() && !this._isTestEnv();\n    }\n\n    // Whether the code is running in tests.\n    private _isTestEnv() {\n        // tslint:disable-next-line\n        return this._window && (this._window['__karma__'] || this._window['jasmine']);\n    }\n\n    private _checkDoctypeIsDefined(): void {\n        if (this._document && !this._document.doctype) {\n            console.warn(\n                'Current document does not have a doctype. This may cause ' +\n                'some Mosaic components not to behave as expected.'\n            );\n        }\n    }\n\n    private _checkThemeIsPresent(): void {\n        if (this._document && typeof getComputedStyle === 'function') {\n            const testElement = this._document.createElement('div');\n\n            testElement.classList.add('mc-theme-loaded-marker');\n            this._document.body.appendChild(testElement);\n\n            const computedStyle = getComputedStyle(testElement);\n\n            // In some situations, the computed style of the test element can be null. For example in\n            // Firefox, the computed style is null if an application is running inside of a hidden iframe.\n            // See: https://bugzilla.mozilla.org/show_bug.cgi?id=548397\n            if (computedStyle && computedStyle.display !== 'none') {\n                console.warn(\n                    'Could not find Mosaic core theme. Most Mosaic ' +\n                    'components may not work as expected. For more info refer ' +\n                    'to the theming guide: link there'\n                );\n            }\n\n            this._document.body.removeChild(testElement);\n        }\n    }\n}\n","import { coerceBooleanProperty } from '@ptsecurity/cdk/coercion';\n\nimport { Constructor } from './constructor';\n\n\nexport interface CanDisable {\n    disabled: boolean;\n}\n\n/** @docs-private */\nexport type CanDisableCtor = Constructor<CanDisable>;\n\nexport function mixinDisabled<T extends Constructor<{}>>(base: T): CanDisableCtor & T {\n    return class extends base {\n        get disabled() {\n            return this._disabled;\n        }\n\n        set disabled(value: any) {\n            this._disabled = coerceBooleanProperty(value);\n        }\n\n        private _disabled: boolean = false;\n\n        constructor(...args: any[]) {\n            // tslint:disable-next-line\n            super(...args);\n        }\n    };\n}\n","import { ElementRef } from '@angular/core';\n\nimport { Constructor } from './constructor';\n\n\nexport interface CanColor {\n    color: ThemePalette;\n}\n\n/** @docs-private */\nexport type CanColorCtor = Constructor<CanColor>;\n\nexport interface HasElementRef {\n    _elementRef: ElementRef;\n}\n\nexport enum ThemePalette {\n    Primary = 'primary',\n    Second = 'second',\n    Error = 'error',\n    Default = 'second',\n    Empty = ''\n}\n\n/** Mixin to augment a directive with a `color` property. */\nexport function mixinColor<T extends Constructor<HasElementRef>>(\n    base: T,\n    defaultColor: ThemePalette = ThemePalette.Default\n): CanColorCtor & T {\n    return class extends base {\n\n        private _color: ThemePalette;\n\n        get color(): ThemePalette {\n            return this._color;\n        }\n\n        set color(value: ThemePalette) {\n            const colorPalette = value || defaultColor;\n\n            if (colorPalette !== this._color) {\n                if (this._color) {\n                    this._elementRef.nativeElement.classList.remove(`mc-${this._color}`);\n                }\n\n                if (colorPalette) {\n                    this._elementRef.nativeElement.classList.add(`mc-${colorPalette}`);\n                }\n\n                this._color = colorPalette;\n            }\n        }\n\n        constructor(...args: any[]) {\n            super(...args);\n\n            this.color = defaultColor;\n        }\n    };\n}\n\n","import { Constructor } from './constructor';\nimport { CanDisable } from './disabled';\n\n\nexport interface HasTabIndex {\n    tabIndex: number;\n}\n\nexport type HasTabIndexCtor = Constructor<HasTabIndex>;\n\n// Mixin to augment a directive with a `tabIndex` property.\nexport function mixinTabIndex<T extends Constructor<CanDisable>>(base: T, defaultTabIndex = 0): HasTabIndexCtor & T {\n    return class extends base {\n        get tabIndex(): number {\n            return this.disabled ? -1 : this._tabIndex;\n        }\n\n        set tabIndex(value: number) {\n            this._tabIndex = value != null ? value : defaultTabIndex;\n        }\n\n        private _tabIndex: number = defaultTabIndex;\n\n        constructor(...args: any[]) {\n            super(...args);\n        }\n    };\n}\n","import { FormControl, FormGroupDirective, NgControl, NgForm } from '@angular/forms';\nimport { Subject } from 'rxjs';\n\nimport { ErrorStateMatcher } from '../error/error-options';\n\nimport { Constructor } from './constructor';\n\n\n/** @docs-private */\nexport interface CanUpdateErrorState {\n\n    readonly stateChanges: Subject<void>;\n\n    errorState: boolean;\n    errorStateMatcher: ErrorStateMatcher;\n\n    updateErrorState();\n}\n\n/** @docs-private */\nexport type CanUpdateErrorStateCtor = Constructor<CanUpdateErrorState>;\n\n/** @docs-private */\nexport interface HasErrorState {\n    parentFormGroup: FormGroupDirective;\n    parentForm: NgForm;\n    defaultErrorStateMatcher: ErrorStateMatcher;\n    ngControl: NgControl;\n}\n\n/**\n * Mixin to augment a directive with updateErrorState method.\n * For component with `errorState` and need to update `errorState`.\n */\nexport function mixinErrorState<T extends Constructor<HasErrorState>>(base: T): CanUpdateErrorStateCtor & T {\n    return class extends base {\n        /** Whether the component is in an error state. */\n        errorState: boolean = false;\n\n        /**\n         * Stream that emits whenever the state of the input changes such that the wrapping\n         * `MatFormField` needs to run change detection.\n         */\n        readonly stateChanges = new Subject<void>();\n\n        errorStateMatcher: ErrorStateMatcher;\n\n        constructor(...args: any[]) {\n            super(...args);\n        }\n\n        updateErrorState() {\n            const oldState = this.errorState;\n            const parent = this.parentFormGroup || this.parentForm;\n            const matcher = this.errorStateMatcher || this.defaultErrorStateMatcher;\n            const control = this.ngControl ? this.ngControl.control as FormControl : null;\n            const newState = matcher.isErrorState(control, parent);\n\n            if (newState !== oldState) {\n                this.errorState = newState;\n                this.stateChanges.next();\n            }\n        }\n    };\n}\n","import {\n    AfterViewChecked,\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    ElementRef,\n    EventEmitter,\n    Inject,\n    InjectionToken,\n    Input,\n    OnDestroy,\n    Optional,\n    Output,\n    QueryList,\n    ViewEncapsulation\n} from '@angular/core';\nimport { coerceBooleanProperty } from '@ptsecurity/cdk/coercion';\nimport { ENTER, SPACE } from '@ptsecurity/cdk/keycodes';\nimport { Subject } from 'rxjs';\n\nimport { McOptgroup } from './optgroup';\n\n\n/**\n * Option IDs need to be unique across components, so this counter exists outside of\n * the component definition.\n */\nlet uniqueIdCounter = 0;\n\n/** Event object emitted by McOption when selected or deselected. */\nexport class McOptionSelectionChange {\n    constructor(public source: McOption, public isUserInput = false) {}\n}\n\n/**\n * Describes a parent component that manages a list of options.\n * Contains properties that the options can inherit.\n * @docs-private\n */\nexport interface IMcOptionParentComponent {\n    multiple?: boolean;\n}\n\n/**\n * Injection token used to provide the parent component to options.\n */\nexport const MC_OPTION_PARENT_COMPONENT =\n    new InjectionToken<IMcOptionParentComponent>('MC_OPTION_PARENT_COMPONENT');\n\n/**\n * Single option inside of a `<mc-select>` element.\n */\n@Component({\n    selector: 'mc-option',\n    exportAs: 'mcOption',\n    host: {\n        '[attr.tabindex]': 'getTabIndex()',\n        class: 'mc-option',\n        '[class.mc-selected]': 'selected',\n        '[class.mc-option-multiple]': 'multiple',\n        '[class.mc-active]': 'active',\n        '[class.mc-disabled]': 'disabled',\n        '[id]': 'id',\n\n        '(click)': 'selectViaInteraction()',\n        '(keydown)': 'handleKeydown($event)'\n    },\n    styleUrls: ['./option.css'],\n    templateUrl: './option.html',\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class McOption implements AfterViewChecked, OnDestroy {\n    /** The form value of the option. */\n    @Input() value: any;\n\n    /** Event emitted when the option is selected or deselected. */\n    // tslint:disable-next-line:no-output-on-prefix\n    @Output() readonly onSelectionChange = new EventEmitter<McOptionSelectionChange>();\n\n    /** Emits when the state of the option changes and any parents have to be notified. */\n    readonly stateChanges = new Subject<void>();\n\n    /**\n     * The displayed value of the option. It is necessary to show the selected option in the\n     * select's trigger.\n     */\n    get viewValue(): string {\n        // TODO(kara): Add input property alternative for node envs.\n        return (this.getHostElement().textContent || '').trim();\n    }\n\n    /** Whether the wrapping component is in multiple selection mode. */\n    get multiple() {\n        return this.parent && this.parent.multiple;\n    }\n\n    get id(): string {\n        return this._id;\n    }\n\n    private _id = `mc-option-${uniqueIdCounter++}`;\n\n    get selected(): boolean {\n        return this._selected;\n    }\n\n    private _selected = false;\n\n    @Input()\n    get disabled() {\n        return (this.group && this.group.disabled) || this._disabled;\n    }\n\n    set disabled(value: any) {\n        this._disabled = coerceBooleanProperty(value);\n    }\n\n    private _disabled = false;\n\n    /**\n     * Whether or not the option is currently active and ready to be selected.\n     * An active option displays styles as if it is focused, but the\n     * focus is actually retained somewhere else. This comes in handy\n     * for components like autocomplete where focus must remain on the input.\n     */\n    get active(): boolean {\n        return this._active;\n    }\n\n    private _active = false;\n\n    private mostRecentViewValue = '';\n\n    constructor(\n        private readonly element: ElementRef,\n        private readonly changeDetectorRef: ChangeDetectorRef,\n        @Optional() @Inject(MC_OPTION_PARENT_COMPONENT) private readonly parent: IMcOptionParentComponent,\n        @Optional() readonly group: McOptgroup\n    ) {}\n\n    ngAfterViewChecked() {\n        // Since parent components could be using the option's label to display the selected values\n        // (e.g. `mc-select`) and they don't have a way of knowing if the option's label has changed\n        // we have to check for changes in the DOM ourselves and dispatch an event. These checks are\n        // relatively cheap, however we still limit them only to selected options in order to avoid\n        // hitting the DOM too often.\n        if (this._selected) {\n            const viewValue = this.viewValue;\n\n            if (viewValue !== this.mostRecentViewValue) {\n                this.mostRecentViewValue = viewValue;\n                this.stateChanges.next();\n            }\n        }\n    }\n\n    ngOnDestroy() {\n        this.stateChanges.complete();\n    }\n\n    select(): void {\n        if (!this._selected) {\n            this._selected = true;\n\n            this.changeDetectorRef.markForCheck();\n            this.emitSelectionChangeEvent();\n        }\n    }\n\n    deselect(): void {\n        if (this._selected) {\n            this._selected = false;\n\n            this.changeDetectorRef.markForCheck();\n            this.emitSelectionChangeEvent();\n        }\n    }\n\n    focus(): void {\n        const element = this.getHostElement();\n\n        if (typeof element.focus === 'function') {\n            element.focus();\n        }\n    }\n\n    /**\n     * This method sets display styles on the option to make it appear\n     * active. This is used by the ActiveDescendantKeyManager so key\n     * events will display the proper options as active on arrow key events.\n     */\n    setActiveStyles(): void {\n        if (!this._active) {\n            this._active = true;\n            this.changeDetectorRef.markForCheck();\n        }\n    }\n\n    /**\n     * This method removes display styles on the option that made it appear\n     * active. This is used by the ActiveDescendantKeyManager so key\n     * events will display the proper options as active on arrow key events.\n     */\n    setInactiveStyles(): void {\n        if (this._active) {\n            this._active = false;\n            this.changeDetectorRef.markForCheck();\n        }\n    }\n\n    /** Gets the label to be used when determining whether the option should be focused. */\n    getLabel(): string {\n        return this.viewValue;\n    }\n\n    /** Ensures the option is selected when activated from the keyboard. */\n    handleKeydown(event: KeyboardEvent): void {\n        // tslint:disable-next-line\n        if (event.keyCode === ENTER || event.keyCode === SPACE) {\n            this.selectViaInteraction();\n\n            // Prevent the page from scrolling down and form submits.\n            event.preventDefault();\n        }\n    }\n\n    /**\n     * `Selects the option while indicating the selection came from the user. Used to\n     * determine if the select's view -> model callback should be invoked.`\n     */\n    selectViaInteraction(): void {\n        if (!this.disabled) {\n            this._selected = this.multiple ? !this._selected : true;\n\n            this.changeDetectorRef.markForCheck();\n            this.emitSelectionChangeEvent(true);\n        }\n    }\n\n    getTabIndex(): string {\n        return this.disabled ? '-1' : '0';\n    }\n\n    getHostElement(): HTMLElement {\n        return this.element.nativeElement;\n    }\n\n    /** Emits the selection change event. */\n    private emitSelectionChangeEvent(isUserInput = false): void {\n        this.onSelectionChange.emit(new McOptionSelectionChange(this, isUserInput));\n    }\n}\n\n/**\n * Counts the amount of option group labels that precede the specified option.\n * @param optionIndex Index of the option at which to start counting.\n * @param options Flat list of all of the options.\n * @param optionGroups Flat list of all of the option groups.\n * @docs-private\n */\nexport function countGroupLabelsBeforeOption(\n    optionIndex: number,\n    options: QueryList<McOption>,\n    optionGroups: QueryList<McOptgroup>\n): number {\n\n    if (optionGroups.length) {\n        const optionsArray = options.toArray();\n        const groups = optionGroups.toArray();\n\n        let groupCounter = 0;\n\n        for (let i = 0; i < optionIndex + 1; i++) {\n            if (optionsArray[i].group && optionsArray[i].group === groups[groupCounter]) {\n                groupCounter++;\n            }\n        }\n\n        return groupCounter;\n    }\n\n    return 0;\n}\n\n/**\n * Determines the position to which to scroll a panel in order for an option to be into view.\n * @param optionIndex Index of the option to be scrolled into the view.\n * @param optionHeight Height of the options.\n * @param currentScrollPosition Current scroll position of the panel.\n * @param panelHeight Height of the panel.\n * @docs-private\n */\nexport function getOptionScrollPosition(\n    optionIndex: number,\n    optionHeight: number,\n    currentScrollPosition: number,\n    panelHeight: number\n): number {\n    const optionOffset = optionIndex * optionHeight;\n\n    if (optionOffset < currentScrollPosition) { return optionOffset; }\n\n    if (optionOffset + optionHeight > currentScrollPosition + panelHeight) {\n        return Math.max(0, optionOffset - panelHeight + optionHeight);\n    }\n\n    return currentScrollPosition;\n}\n\n","import { ConnectionPositionPair } from '@ptsecurity/cdk/overlay';\n\n\nexport const POSITION_MAP: { [key: string]: ConnectionPositionPair } = {\n    top         : {\n        originX : 'center',\n        originY : 'top',\n        overlayX: 'center',\n        overlayY: 'bottom'\n    },\n    topCenter   : {\n        originX : 'center',\n        originY : 'top',\n        overlayX: 'center',\n        overlayY: 'bottom',\n        offsetX : undefined,\n        offsetY : undefined\n    },\n    topLeft     : {\n        originX : 'start',\n        originY : 'top',\n        overlayX: 'start',\n        overlayY: 'bottom',\n        offsetX : undefined,\n        offsetY : undefined\n    },\n    topRight    : {\n        originX : 'end',\n        originY : 'top',\n        overlayX: 'end',\n        overlayY: 'bottom',\n        offsetX : undefined,\n        offsetY : undefined\n    },\n    right       : {\n        originX : 'end',\n        originY : 'center',\n        overlayX: 'start',\n        overlayY: 'center'\n    },\n    rightTop    : {\n        originX : 'end',\n        originY : 'top',\n        overlayX: 'start',\n        overlayY: 'top',\n        offsetX : undefined,\n        offsetY : undefined\n    },\n    rightBottom : {\n        originX : 'end',\n        originY : 'bottom',\n        overlayX: 'start',\n        overlayY: 'bottom',\n        offsetX : undefined,\n        offsetY : undefined\n    },\n    bottom      : {\n        originX : 'center',\n        originY : 'bottom',\n        overlayX: 'center',\n        overlayY: 'top'\n    },\n    bottomCenter: {\n        originX : 'center',\n        originY : 'bottom',\n        overlayX: 'center',\n        overlayY: 'top'\n    },\n    bottomLeft  : {\n        originX : 'start',\n        originY : 'bottom',\n        overlayX: 'start',\n        overlayY: 'top'\n    },\n    bottomRight : {\n        originX : 'end',\n        originY : 'bottom',\n        overlayX: 'end',\n        overlayY: 'top'\n    },\n    left        : {\n        originX : 'start',\n        originY : 'center',\n        overlayX: 'end',\n        overlayY: 'center'\n    },\n    leftTop     : {\n        originX : 'start',\n        originY : 'top',\n        overlayX: 'end',\n        overlayY: 'top'\n    },\n    leftBottom  : {\n        originX : 'start',\n        originY : 'bottom',\n        overlayX: 'end',\n        overlayY: 'bottom'\n    }\n};\n\nexport const DEFAULT_4_POSITIONS = _objectValues([\n    POSITION_MAP.top, POSITION_MAP.right, POSITION_MAP.bottom, POSITION_MAP.left\n]);\n\nfunction arrayMap<T, S>(array: T[], iteratee: (item: T, index: number, arr: T[]) => S): S[] {\n    let index = -1;\n    const length = array == null ? 0 : array.length;\n    const result = Array(length);\n\n    while (++index < length) {\n        result[ index ] = iteratee(array[ index ], index, array);\n    }\n\n    return result;\n}\nfunction baseValues<T>(object: { [key: string]: T } | T[], props: string[]): T[] {\n    return arrayMap(props,  (key) => {\n        return object[ key ];\n    });\n}\nfunction _objectValues<T>(object: { [key: string]: T } | T[]): T[] {\n    return object == null ? [] : baseValues(object, Object.keys(object));\n}\n","/**\n * Returns an exception to be thrown when attempting to change a select's `multiple` option\n * after initialization.\n * @docs-private\n */\nexport function getMcSelectDynamicMultipleError(): Error {\n    return Error('Cannot change `multiple` mode of select after initialization.');\n}\n\n/**\n * Returns an exception to be thrown when attempting to assign a non-array value to a select\n * in `multiple` mode. Note that `undefined` and `null` are still valid values to allow for\n * resetting the value.\n * @docs-private\n */\nexport function getMcSelectNonArrayValueError(): Error {\n    return Error('Value must be an array in multiple-selection mode.');\n}\n\n/**\n * Returns an exception to be thrown when assigning a non-function value to the comparator\n * used to determine if a value corresponds to an option. Note that whether the function\n * actually takes two values and returns a boolean is not checked.\n */\nexport function getMcSelectNonFunctionValueError(): Error {\n    return Error('`compareWith` must be a function.');\n}\n","export function getMcFormFieldMissingControlError(): Error {\n  return Error('mc-form-field must contain a McFormFieldControl.');\n}\n","export function getMcInputUnsupportedTypeError(inputType: string): Error {\n    return Error(`Input type \"${inputType}\" isn't supported by mcInput.`);\n}\n","/** @docs-private */\nexport function createMissingDateImplError(provider: string) {\n    return Error(\n        `McDatepicker: No provider found for ${provider}. You must import one of the existing ` +\n        `modules at your application root or provide a custom implementation or use exists ones.`);\n}\n","export function throwMcDropdownMissingError() {\n    throw Error(`mcDropdownTriggerFor: must pass in an mc-dropdown instance.\n    Example:\n      <mc-dropdown #dropdown=\"mcDropdown\"></mc-dropdown>\n      <button [mcDropdownTriggerFor]=\"dropdown\"></button>`);\n}\n\n/**\n * Throws an exception for the case when dropdown's x-position value isn't valid.\n * In other words, it doesn't match 'before' or 'after'.\n * @docs-private\n */\nexport function throwMcDropdownInvalidPositionX() {\n    throw Error(`xPosition value must be either 'before' or after'.\n      Example: <mc-dropdown xPosition=\"before\" #dropdown=\"mcDropdown\"></mc-dropdown>`);\n}\n\n/**\n * Throws an exception for the case when dropdown's y-position value isn't valid.\n * In other words, it doesn't match 'above' or 'below'.\n * @docs-private\n */\nexport function throwMcDropdownInvalidPositionY() {\n    throw Error(`yPosition value must be either 'above' or below'.\n      Example: <mc-dropdown yPosition=\"above\" #dropdown=\"mcDropdown\"></mc-dropdown>`);\n}\n","import { NgModule, Directive, ElementRef, QueryList } from '@angular/core';\n\n\n/**\n * Shared directive to count lines inside a text area, such as a list item.\n * Line elements can be extracted with a @ContentChildren(McLine) query, then\n * counted by checking the query list's length.\n */\n@Directive({\n    selector: '[mc-line], [mcLine]',\n    host: { class: 'mc-line' }\n})\nexport class McLine {}\n\n/**\n * Helper that takes a query list of lines and sets the correct class on the host.\n * @docs-private\n */\nexport class McLineSetter {\n    constructor(private _lines: QueryList<McLine>, private _element: ElementRef) {\n        this._setLineClass(this._lines.length);\n\n        this._lines.changes.subscribe(() => {\n            this._setLineClass(this._lines.length);\n        });\n    }\n\n    private _setLineClass(count: number): void {\n        this._resetClasses();\n        if (count === 2 || count === 3) {\n            this._setClass(`mc-${count}-line`, true);\n        } else if (count > 3) {\n            this._setClass(`mc-multi-line`, true);\n        }\n    }\n\n    private _resetClasses(): void {\n        this._setClass('mc-2-line', false);\n        this._setClass('mc-3-line', false);\n        this._setClass('mc-multi-line', false);\n    }\n\n    private _setClass(className: string, isAdd: boolean): void {\n        if (isAdd) {\n            this._element.nativeElement.classList.add(className);\n        } else {\n            this._element.nativeElement.classList.remove(className);\n        }\n    }\n}\n\n@NgModule({\n    imports: [],\n    exports: [McLine],\n    declarations: [McLine]\n})\nexport class McLineModule {}\n","import { Injectable } from '@angular/core';\nimport { FormGroupDirective, NgForm, FormControl } from '@angular/forms';\n\n\n/** Error state matcher that matches when a control is invalid and dirty. */\n@Injectable()\nexport class ShowOnDirtyErrorStateMatcher implements ErrorStateMatcher {\n    isErrorState(control: FormControl | null, form: FormGroupDirective | NgForm | null): boolean {\n        return !!(control && control.invalid && (control.dirty || (form && form.submitted)));\n    }\n}\n\n/** Provider that defines how form controls behave with regards to displaying error messages. */\n@Injectable({ providedIn: 'root' })\nexport class ErrorStateMatcher {\n    isErrorState(control: FormControl | null, form: FormGroupDirective | NgForm | null): boolean {\n        return !!(control && control.invalid && (control.touched || (form && form.submitted)));\n    }\n}\n","import { Component, ViewEncapsulation, Input, ChangeDetectionStrategy } from '@angular/core';\n\n\nexport type McPseudoCheckboxState = 'unchecked' | 'checked' | 'indeterminate';\n\n/**\n * Component that shows a simplified checkbox without including any kind of \"real\" checkbox.\n * Meant to be used when the checkbox is purely decorative and a large number of them will be\n * included, such as for the options in a multi-select. Uses no SVGs or complex animations.\n * Note that theming is meant to be handled by the parent element, e.g.\n * `mc-primary .mc-pseudo-checkbox`.\n *\n * Note that this component will be completely invisible to screen-reader users. This is *not*\n * interchangeable with `<mc-checkbox>` and should *not* be used if the user would directly\n * interact with the checkbox. The pseudo-checkbox should only be used as an implementation detail\n * of more complex components that appropriately handle selected / checked state.\n * @docs-private\n */\n@Component({\n    encapsulation: ViewEncapsulation.None,\n    preserveWhitespaces: false,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    selector: 'mc-pseudo-checkbox',\n    styleUrls: ['pseudo-checkbox.css'],\n    templateUrl: 'pseudo-checkbox.partial.html',\n    host: {\n        class: 'mc-pseudo-checkbox',\n        '[class.mc-indeterminate]': 'state === \"indeterminate\"',\n        '[class.mc-checked]': 'state === \"checked\"',\n        '[class.mc-disabled]': 'disabled'\n    }\n})\nexport class McPseudoCheckbox {\n    @Input() state: McPseudoCheckboxState = 'unchecked';\n\n    @Input() disabled: boolean = false;\n}\n","import { NgModule } from '@angular/core';\n\nimport { McPseudoCheckbox } from './pseudo-checkbox/pseudo-checkbox';\n\n\n@NgModule({\n    exports: [McPseudoCheckbox],\n    declarations: [McPseudoCheckbox]\n})\nexport class McPseudoCheckboxModule {}\n\n\nexport * from './pseudo-checkbox/pseudo-checkbox';\n","import { DOCUMENT } from '@angular/common';\nimport { Inject, Injectable } from '@angular/core';\n\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class McMeasureScrollbarService {\n\n    get scrollBarWidth(): number {\n        if (this._scrollbarWidth) {\n            return this._scrollbarWidth;\n        }\n        this.initScrollBarWidth();\n\n        return this._scrollbarWidth;\n    }\n\n    private _scrollbarWidth: number;\n    private scrollbarMeasure = {\n        position: 'absolute',\n        top: '-9999px',\n        width: '50px',\n        height: '50px',\n        overflow: 'scroll'\n    };\n\n    constructor(\n        @Inject(DOCUMENT) private document: any\n    ) {\n        this.initScrollBarWidth();\n    }\n\n    initScrollBarWidth() {\n        const scrollDiv = this.document.createElement('div');\n\n        // tslint:disable-next-line\n        for (const scrollProp in this.scrollbarMeasure) {\n            if (this.scrollbarMeasure.hasOwnProperty(scrollProp)) {\n                scrollDiv.style[scrollProp] = this.scrollbarMeasure[scrollProp];\n            }\n        }\n\n        this.document.body.appendChild(scrollDiv);\n\n        const width = scrollDiv.offsetWidth - scrollDiv.clientWidth;\n\n        this.document.body.removeChild(scrollDiv);\n        this._scrollbarWidth = width;\n    }\n}\n","import { Component, ViewEncapsulation, Input, ChangeDetectionStrategy } from '@angular/core';\n\nimport { mixinDisabled, CanDisable, CanDisableCtor } from '../common-behaviors/index';\n\n\n// Boilerplate for applying mixins to McOptgroup.\n/** @docs-private */\nexport class McOptgroupBase {}\n\nexport const McOptgroupMixinBase: CanDisableCtor & typeof McOptgroupBase = mixinDisabled(McOptgroupBase);\n\n// Counter for unique group ids.\nlet uniqueOptgroupIdCounter = 0;\n\n/**\n * Component that is used to group instances of `mc-option`.\n */\n@Component({\n    selector: 'mc-optgroup',\n    exportAs: 'mcOptgroup',\n    templateUrl: 'optgroup.html',\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    inputs: ['disabled'],\n    styleUrls: ['optgroup.css'],\n    host: {\n        class: 'mc-optgroup',\n        role: 'group',\n        '[class.mc-optgroup-disabled]': 'disabled',\n        '[attr.aria-disabled]': 'disabled.toString()',\n        '[attr.aria-labelledby]': 'labelId'\n    }\n})\nexport class McOptgroup extends McOptgroupMixinBase implements CanDisable {\n    /** Label for the option group. */\n    @Input() label: string;\n\n    /** Unique id for the underlying label. */\n    labelId: string = `mc-optgroup-label-${uniqueOptgroupIdCounter++}`;\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { McPseudoCheckboxModule } from '../selection/index';\n\nimport { McOptgroup } from './optgroup';\nimport { McOption } from './option';\n\n\n@NgModule({\n    imports: [CommonModule, McPseudoCheckboxModule],\n    exports: [McOption, McOptgroup],\n    declarations: [McOption, McOptgroup]\n})\nexport class McOptionModule {}\n\n\nexport * from './option';\nexport * from './optgroup';\n","import { InjectionToken } from '@angular/core';\n\n\n/** InjectionToken that can be used to specify the global label options. */\nexport const MC_LABEL_GLOBAL_OPTIONS =\n    new InjectionToken<LabelOptions>('mc-label-global-options');\n\n/** Type for the available floatLabel values. */\nexport type FloatLabelType = 'always' | 'never' | 'auto';\n\n/** Configurable options for floating labels. */\nexport interface LabelOptions {\n    /**\n     * Whether the label should float `always`, `never`, or `auto` (only when necessary).\n     * Default behavior is assumed to be `auto`.\n     */\n    float?: FloatLabelType;\n}\n","import {\n    animate,\n    state,\n    style,\n    transition,\n    trigger,\n    AnimationTriggerMetadata\n} from '@angular/animations';\n\n\nexport const fadeAnimation: AnimationTriggerMetadata =  trigger('fadeAnimation', [\n    state('void', style({ opacity: 0 })),\n    state('true', style({ opacity: 1 })),\n    state('false', style({ opacity: 0 })),\n    transition('* => true', animate('150ms cubic-bezier(0.0, 0.0, 0.2, 1)')),\n    transition('* => void', animate('150ms cubic-bezier(0.4, 0.0, 1, 1)'))\n]);\n","export enum AnimationCurves {\n    StandardCurve = 'cubic-bezier(0.4,0.0,0.2,1)',\n    DecelerationCurve = 'cubic-bezier(0.0,0.0,0.2,1)',\n    AccelerationCurve = 'cubic-bezier(0.4,0.0,1,1)',\n    SharpCurve = 'cubic-bezier(0.4,0.0,0.6,1)'\n}\n","import {\n    animate,\n    AnimationTriggerMetadata,\n    state,\n    style,\n    transition,\n    trigger,\n    query,\n    animateChild,\n    group\n} from '@angular/animations';\n\n\n/**\n * The following are all the animations for the mc-select component, with each\n * const containing the metadata for one animation.\n *\n * The values below match the implementation of the AngularJS Material mc-select animation.\n */\nexport const mcSelectAnimations: {\n    readonly transformPanel: AnimationTriggerMetadata;\n    readonly fadeInContent: AnimationTriggerMetadata;\n} = {\n    /**\n     * This animation transforms the select's overlay panel on and off the page.\n     *\n     * When the panel is attached to the DOM, it expands its width by the amount of padding, scales it\n     * up to 100% on the Y axis, fades in its border, and translates slightly up and to the\n     * side to ensure the option text correctly overlaps the trigger text.\n     *\n     * When the panel is removed from the DOM, it simply fades out linearly.\n     */\n    transformPanel: trigger('transformPanel', [\n        state('void', style({\n            transform: 'scaleY(0)',\n            minWidth: '100%',\n            opacity: 0\n        })),\n        transition('void => *', group([\n            query('@fadeInContent', animateChild()),\n            animate('150ms cubic-bezier(0.25, 0.8, 0.25, 1)')\n        ])),\n        transition('* => void', [\n            animate('250ms 100ms linear', style({ opacity: 0 }))\n        ])\n    ]),\n\n    /**\n     * This animation fades in the background color and text content of the\n     * select's options. It is time delayed to occur 100ms after the overlay\n     * panel has transformed in.\n     */\n    fadeInContent: trigger('fadeInContent', [\n        state('showing', style({ opacity: 1 })),\n        transition('void => showing', [\n            style({ opacity: 0 }),\n            animate('150ms 100ms cubic-bezier(0.55, 0, 0.55, 0.2)')\n        ])\n    ])\n};\n\n\n/**\n * @deprecated\n * @breaking-change 7.0.0\n */\nexport const transformPanel = mcSelectAnimations.transformPanel;\n\n/**\n * @deprecated\n * @breaking-change 7.0.0\n */\nexport const fadeInContent = mcSelectAnimations.fadeInContent;\n","import {\n    Attribute,\n    ChangeDetectionStrategy,\n    Component,\n    Directive,\n    ElementRef,\n    ViewEncapsulation\n} from '@angular/core';\n\nimport { mixinColor, CanColor, CanColorCtor, ThemePalette } from '@ptsecurity/mosaic/core';\n\n\n@Directive({\n    selector: '[mc-icon]',\n    host: { class: 'mc mc-icon' }\n})\nexport class McIconCSSStyler {}\n\n\nexport class McIconBase {\n    constructor(public _elementRef: ElementRef) {}\n}\n\nexport const _McIconMixinBase: CanColorCtor & typeof McIconBase = mixinColor(McIconBase, ThemePalette.Empty);\n\n\n@Component({\n    selector: `[mc-icon]`,\n    template: '<ng-content></ng-content>',\n    styleUrls: ['./icon.css'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n    inputs: ['color']\n})\nexport class McIcon extends _McIconMixinBase implements CanColor {\n    constructor(elementRef: ElementRef, @Attribute('mc-icon') iconName: string) {\n        super(elementRef);\n\n        elementRef.nativeElement.classList.add(iconName);\n    }\n\n    _getHostElement() {\n        return this._elementRef.nativeElement;\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { A11yModule } from '@ptsecurity/cdk/a11y';\nimport { PlatformModule } from '@ptsecurity/cdk/platform';\n\nimport {\n    McIcon,\n    McIconCSSStyler\n} from './icon.component';\n\n\n@NgModule({\n    imports: [\n        CommonModule,\n        A11yModule,\n        PlatformModule\n    ],\n    exports: [\n        McIcon,\n        McIconCSSStyler\n    ],\n    declarations: [\n        McIcon,\n        McIconCSSStyler\n    ]\n})\nexport class McIconModule {}\n"],"names":["Object","defineProperty","McTooltip","prototype","get","this","_mcTrigger","set","value","updateCompValue","_mcPlacement","_mcTooltipClass","tooltip","setClassMap","_mcVisible","externalValue","coerceBooleanProperty","show","isTooltipOpen","parentDisabled","createOverlay","_this","overlayRef","strategy","overlay","position","flexibleConnectedTo","elementRef","withTransformOriginOn","withFlexibleDimensions","withViewportMargin","withPositions","DEFAULT_4_POSITIONS","slice","scrollableAncestors","scrollDispatcher","getAncestorScrollContainers","withScrollableContainers","positionChanges","pipe","takeUntil","destroyed","subscribe","change","onPositionChange","scrollableViewProperties","isOverlayClipped","mcVisible","ngZone","run","hide","create","direction","positionStrategy","panelClass","scrollStrategy","updatePosition","detachments","detach","hasAttached","$event","updatedPlacement","mcPlacement","keys","availablePositions","some","key","connectionPair","originX","originY","overlayX","overlayY","markForCheck","handlePositioningUpdate","pos","overlayElement","clientHeight","hostView","element","nativeElement","currentContainer","style","top","parseInt","split","isDynamicTooltip","ngOnInit","initElementRefListeners","ngOnDestroy","dispose","manualListeners","forEach","listener","event","removeEventListener","clear","$unsubscribe","next","complete","handleKeydown","e","keyCode","ESCAPE","handleTouchend","mcTrigger","addEventListener","disabled","portal","ComponentPortal","McTooltipComponent","attach","instance","afterHidden","property","mcVisibleChange","distinctUntilChanged","data","emit","getConfig","origin","getOrigin","getOverlayPosition","tslib_1.__assign","main","fallback","originPosition","isLtr","getMcTooltipInvalidPositionError","_a","invertPosition","x","y","overlayPosition","newX","newY","tslib_1.__decorate","Output","Input","HostBinding","Directive","selector","exportAs","host","(keydown)","(touchend)","tslib_1.__param","Inject","MC_TOOLTIP_SCROLL_STRATEGY","Optional","tslib_1.__metadata","Overlay","ElementRef","NgZone","ScrollDispatcher","ViewContainerRef","Directionality","McToolTipModule","NgModule","declarations","exports","imports","CommonModule","OverlayModule","providers","MC_TOOLTIP_SCROLL_STRATEGY_FACTORY_PROVIDER","entryComponents","VERSION","Version","SELECT_PANEL_PADDING_X","validatePortalAttached","setAnimation","setPanelClass","portalOutlet","attachComponentPortal","McSidepanelContainerComponent","attachTemplatePortal","enter","animationState","McSidepanelAnimationState","Visible","changeDetectorRef","detectChanges","exit","Hidden","onAnimation","animationStateChanged","sidepanelConfig","animationTransform","transformIn","mcSidepanelTransformAnimation","in","transformOut","out","classList","add","withShadow","Error","ViewChild","CdkPortalOutlet","Component","template","styles","changeDetection","ChangeDetectionStrategy","OnPush","encapsulation","ViewEncapsulation","None","animations","mcSidepanelAnimations","sidepanelState","class","tabindex","role","aria-modal","[attr.id]","[@state]","(@state.start)","(@state.done)","MC_SIDEPANEL_WITH_INDENT","MC_SIDEPANEL_WITH_SHADOW","ChangeDetectorRef","McSidepanelConfig","Boolean","BasePortalOutlet","uniqueId","McSidepanelRef","containerInstance","config","afterClosed$","Subject","afterOpened$","id","filter","phaseName","toState","take","result","disableClose","merge","backdropClick","keydownEvents","close","closed","detachBackdrop","afterClosed","asObservable","afterOpened","MC_SIDEPANEL_DEFAULT_OPTIONS","InjectionToken","McSidepanelService","injector","defaultOptions","parentSidepanelService","openedSidepanelsAtThisLevel","openedSidepanels","closeSidepanels","open","componentOrTemplateRef","fullConfig","getSidepanelById","container","attachContainer","ref","TemplateRef","TemplatePortal","$implicit","sidepanelRef","createInjector","undefined","contentRef","push","removeOpenSidepanel","closeAll","find","sidepanel","openedSidepanelsWithSamePosition","getOpenedSidepanelsWithSamePosition","PortalInjector","WeakMap","length","containerPortal","sidepanelContainer","injectionTokens","MC_SIDEPANEL_DATA","overlayConfig","OverlayConfig","hasBackdrop","backdropClass","getBackdropClass","maxWidth","overlayPanelClass","scrollStrategies","block","global","sidepanels","reverse","hasOpenedSidepanelWithBackdrop","requiredBackdrop","index","indexOf","splice","Injectable","SkipSelf","Injector","McSidepanelClose","sidepanelService","setTimeout","getClosestSidepanel","ngOnChanges","changes","proxiedChange","mcSidepanelClose","sidepanelResult","currentValue","(click)","type","McSidepanelHeader","McSidepanelBody","McSidepanelFooter","McSidepanelActions","McSidepanelModule","PortalModule","McCommonModule","McIconModule","McSplitterComponent","renderer","areas","_disabled","_gutterSize","isDragging","areaPositionDivider","listeners","_direction","gutterSize","size","coerceNumberProperty","addArea","area","order","getSize","setOrder","initialSize","setStyle","isVertical","onMouseDown","leftAreaIndex","rightAreaIndex","leftArea","rightArea","startPoint","screenX","screenY","item","disableFlex","setSize","runOutsideAngular","listen","onMouseUp","onMouseMove","removeArea","indexToRemove","endPoint","offset","newLeftAreaSize","newRightAreaSize","minLeftAreaSize","getMinSize","minRightAreaSize","rightAreaOffset","unsubscribe","pop","preserveWhitespaces","Renderer2","McGutterDirective","_order","_size","getCursor","getState","coerceCssPixelValue","setAttr","state","attribute","setAttribute","McSplitterAreaDirective","splitter","removeStyle","sz","getSizeProperty","getOffsetSizeProperty","getComputedStyle","parseFloat","getMinSizeProperty","McSplitterModule","nextUniqueId","McToggleBase","_elementRef","_McToggleMixinBase","mixinTabIndex","mixinColor","mixinDisabled","ThemePalette","Primary","McToggleChange","McToggleComponent","_super","_focusMonitor","_changeDetectorRef","tabIndex","call","labelPosition","ariaLabel","ariaLabelledby","_uniqueId","name","_checked","EventEmitter","_onTouchedCallback","_onChangeCallback","_","monitor","tslib_1.__extends","McToggleComponent_1","stopMonitoring","focus","focusVia","_inputElement","_getAriaChecked","checked","_onInteractionEvent","stopPropagation","_onLabelTextChange","_onInputClick","_updateModelValue","_emitChangeEvent","writeValue","registerOnChange","fn","registerOnTouched","setDisabledState","isDisabled","source","provide","NG_VALUE_ACCESSOR","useExisting","forwardRef","multi","inputs","[id]","[class.mc-disabled]","[class.mc-toggle_off]","trigger","left","transition","animate","Attribute","FocusMonitor","String","McToggleModule","A11yModule","cdr","prefix","positions","classMap","mcMouseEnterDelay","mcMouseLeaveDelay","BehaviorSubject","onHideSubject","closeOnInteraction","POSITION_MAP","$visible","_mcTitle","isTitleString","unshift","visible","hideTid","clearTimeout","isContentEmpty","showTid","mcTitle","handleBodyInteraction","outputs","fadeAnimation","(body:click)","deps","useFactory","mcTooltipScrollStrategyFactory","Map","title","_mcMouseEnterDelay","_mcMouseLeaveDelay","preventDefault","tree","keyManager","activeItem","selectViaInteraction","McTreeSelect","initializeSelection","Promise","resolve","then","setSelectionByValue","ngControl","_value","multiple","Array","isArray","getMcSelectNonArrayValueError","selectionModel","selectValue","sortValues","correspondingOption","setActiveItem","options","option","_compareWith","error","isDevMode","console","warn","select","initKeyManager","originalOnKeyDown","onKeyDown","tabOut","destroy","_panelOpen","panel","scrollActiveOptionIntoView","resetOptions","changedOrDestroyed","optionSelectionChanges","onSelect","isUserInput","setOptionIds","wasSelected","isSelected","selected","deselect","propagateChanges","stateChanges","options_1","toArray","sort","a","b","sortComparator","fallbackValue","valueToEmit","map","valueChange","onChange","selectionChange","McTreeSelectChange","optionIds","join","highlightCorrectOption","empty","setFirstItemActive","activeOptionIndex","activeItemIndex","scrollTop","getOptionScrollPosition","getItemHeight","getOptionIndex","reduce","current","calculateOverlayPosition","itemHeight","items","getItemCount","panelHeight","Math","min","scrollContainerHeight","maxScroll","selectedOptionOffset","scrollBuffer","calculateOverlayScroll","offsetY","calculateOverlayOffsetY","checkOverlayWithinViewport","calculateOverlayOffsetX","overlayRect","overlayDir","getBoundingClientRect","viewportSize","viewportRuler","getViewportSize","isRtl","offsetX","leftOverflow","rightOverflow","right","width","round","topSpaceAvailable","triggerRect","bottomSpaceAvailable","height","bottom","panelHeightTop","abs","totalPanelHeight","panelHeightBottom","adjustPanelUp","adjustPanelDown","transformOrigin","getOriginBasedOnOption","distanceBelowViewport","distanceAboveViewport","optionHeightAdjustment","CdkConnectedOverlay","ViewChildren","McTag","QueryList","ContentChild","McTreeSelectTrigger","McTreeSelection","Observable","ErrorStateMatcher","McTreeSelect_1","[attr.tabindex]","[class.mc-select-invalid]","[class.mc-select-required]","(focus)","(blur)","(window:resize)","mcSelectAnimations","transformPanel","fadeInContent","McFormFieldControl","CdkTree","Self","MC_SELECT_SCROLL_STRATEGY","ViewportRuler","NgForm","FormGroupDirective","McFormField","NgControl","McTreeSelectMixinBase","McTreeSelectModule","CdkTreeModule","McTreeModule","McTagModule","McPseudoCheckboxModule","MC_SELECT_SCROLL_STRATEGY_PROVIDER","MC_TEXTAREA_VALUE_ACCESSOR","McTextareaBase","defaultErrorStateMatcher","parentForm","parentFormGroup","McTextareaMixinBase","mixinErrorState","McTextarea","inputValueAccessor","canGrow","focused","controlType","uid","_required","lineHeight","freeRowsHeight","minHeight","valueAccessor","previousNativeValue","growObserver","fromEvent","growSubscription","grow","bind","McTextarea_1","_id","paddingTop","paddingBottom","ngDoCheck","updateErrorState","dirtyCheckNativeValue","textarea","outerHeight","window","diff","max","scrollHeight","focusChanged","isFocused","isBadInput","onContainerClick","newValue","validity","badInput","getGrowHeight","toString","[class.mc-textarea-resizable]","[attr.placeholder]","[attr.aria-invalid]","[disabled]","[required]","McTextareaModule","FormsModule","TimeParts","TimeFormats","TIMEFORMAT_PLACEHOLDERS","HHmmss","HHmm","DEFAULT_TIME_FORMAT","HOURS_MINUTES_SECONDS_REGEXP","RegExp","HOURS_MINUTES_REGEXP","HOURS_ONLY_REGEXP","uniqueComponentIdSuffix","formValidators","formValidatorOnChangeRegistrators","validatorOnChange","c","validatorOnChangeHandler","McTimepickerBase","McTimepickerMixinBase","ɵ1","validate","__validatorOnChangeHandler","validator","registerOnValidatorChange","McTimepicker","_minTime","_maxTime","noop","placeholder","control","Validators","compose","parseValidator","minTimeValidator","maxTimeValidator","McTimepicker_1","applyInputChanges","_timeFormat","formatValue","timeFormatKey","minValue","minDateTime","getDateFromTimeString","maxValue","maxDateTime","onTouched","onBlur","onPaste","clipboardUserInput","clipboardData","getData","onInput","initialCursorStart","selectionStart","initialCursorEnd","selectionEnd","isAutocompleteTriggered","getParsedTimeParts","hoursOnly","hoursAndMinutes","hoursAndMinutesAndSeconds","doTimestringReformat","errors","createSelectionOfTimeComponentInInput","setProperty","getTimeStringFromDate","timeFormat","getKeyCode","upDownTimeByArrowKeys","switchSelectionBetweenTimeparts","applyParams","changedTime","timeToApply","currentDateTimeInput","updateValueAndValidity","cursorPos","modifiedTimePart","getTimeEditMetrics","incrementTime","decrementTime","getCursorPositionOfPrevTimePartStart","getCursorPositionOfNextTimePartStart","code","newEditParams","cursorStartPosition","cursorEndPosition","dateVal","whatToIncrement","seconds","getTimeDigitsFromDate","hours","minutes","getDateFromTimeDigits","whatToDecrement","timeString","timeDevider","nextDividerPos","cursorPosition","minutesIndex","hoursIndex","secondsIndex","tempVal","getNumberWithLeadingZero","getHours","getMinutes","getSeconds","match","trim","Number","resultDate","Date","isNaN","getTime","digit","mcTimepickerParse","text","isTimeLowerThenMin","mcTimepickerLowerThenMintime","isTimeGreaterThenMax","mcTimepickerHigherThenMaxtime","timeToCompare","[attr.time-format]","[attr.min-time]","[attr.max-time]","[attr.value]","(input)","(paste)","NG_VALIDATORS","useValue","MC_INPUT_VALUE_ACCESSOR","McTimepickerModule","PlatformModule","McSidepanelPosition","Right","transform","params","AnimationCurves","AccelerationCurve","DecelerationCurve","withIndent","Void","o","closedStream","openedChange","_multiple","_focused","_onChange","_onTouched","o1","o2","McSelect","McSelect_1","_placeholder","getMcSelectDynamicMultipleError","getMcSelectNonFunctionValueError","SelectionModel","panelDoneAnimatingStream","panelOpen","panelDoneAnimating","ngAfterContentInit","changed","added","removed","startWith","ngAfterViewInit","tags","calculateHiddenItems","toggle","triggerFontSize","withHorizontalOrientation","_ngZone","onStable","fontSize","selectedOptions","viewValue","isEmpty","_dir","handleOpenKeydown","handleClosedKeydown","onFadeInDone","onFocus","onAttached","positionChange","getPanelTheme","_parentFormField","color","selectedIndex","optionOffsetFromScrollTop","halfOptionHeight","optimalScrollPosition","onRemoveMatcherItem","visibleItems","totalItemsWidth","getTotalItemsWidthInMatcher","totalVisibleItemsWidth","tag","offsetTop","offsetHeight","hiddenItems","itemsCounter","querySelector","matcherList","itemsCounterShowed","matcherListWidth","matcherWidth","triggerClone","cloneNode","remove","_renderer","appendChild","querySelectorAll","isArrowKey","DOWN_ARROW","UP_ARROW","LEFT_ARROW","RIGHT_ARROW","ENTER","SPACE","altKey","onKeydown","manager","HOME","END","setLastItemActive","A","ctrlKey","hasDeselectedOptions_1","previouslyFocusedIndex","shiftKey","ActiveDescendantKeyManager","withTypeAhead","withVerticalOrientation","apply","McSelectChange","labelCount","countGroupLabelsBeforeOption","optionGroups","_viewportRuler","first","group","McSelectTrigger","ContentChildren","McOption","descendants","McOptgroup","MC_OPTION_PARENT_COMPONENT","McSelectMixinBase","McSelectModule","McOptionModule","McFormFieldModule","McTreeSelectBase","dir","parentFormField","scrollStrategyFactory","oneMoreText","openedStream","defer","onSelectionChange","switchMap","_autoSelect","autoSelect","updateSelectedOptions","onRemoveSelectedOption","selectedOption","onCentered","animationDuration","dirChangeSubscription","Subscription","EMPTY","computePositionAnimationState","McTabBody","positionIndex","bodyPosition","computePositionFromOrigin","onTranslateTabStarted","isCentering","isCenterPosition","beforeCentering","onCentering","onTranslateTabComplete","fromState","afterLeavingCenter","getLayoutDirection","PortalHostDirective","mcTabsAnimations","translateTab","McTabBodyPortal","componentFactoryResolver","viewContainerRef","centeringSub","leavingSub","content","ComponentFactoryResolver","McTabLabelWrapperBase","mcTabLabelWrapperMixinBase","McTabLabelWrapper","getOffsetLeft","offsetLeft","getOffsetWidth","offsetWidth","[attr.aria-disabled]","McTabHeaderBase","McTabHeader","showPaginationControls","disableScrollAfter","disableScrollBefore","selectFocusedIndex","indexFocused","_scrollDistance","selectedIndexChanged","_selectedIndex","coercedValue","updateActiveItem","isValidIndex","focusIndex","v","getMaxScrollDistance","scrollDistanceChanged","checkScrollingControls","ngAfterContentChecked","tabLabelCount","labelWrappers","updatePagination","scrollToLabel","updateTabScrollPosition","dirChange","observableOf","resize","realign","FocusKeyManager","withWrap","requestAnimationFrame","newFocusIndex","setTabFocus","onContentChanges","textContent","currentTextContent","zoneCallback","checkPaginationEnabled","tab","containerEl","tabListContainer","scrollLeft","scrollWidth","scrollDistance","translateX","tabList","scrollHeader","scrollDir","viewLength","labelIndex","selectedLabel","labelBeforePos","labelAfterPos","beforeVisiblePos","afterVisiblePos","isEnabled","[class.mc-tab-header__pagination-controls_enabled]","[class.mc-tab-header_rtl]","McLightTabsCssStyler","McAlignTabsCenterCssStyler","McAlignTabsEndCssStyler","McStretchTabsCssStyler","nextId","McTabChangeEvent","MC_TABS_CONFIG","McTabGroupBase","mcTabGroupMixinBase","McTabGroup","lightTabs","defaultConfig","headerPosition","selectedIndexChange","focusChange","animationDone","selectedTabChange","indexToSelect","tabBodyWrapperHeight","tabsSubscription","tabLabelSubscription","_dynamicHeight","lightTab","groupId","clampTabIndex","isFirstRun_1","createChangeEvent","tabs","isActive","subscribeToTabLabels","i","getTabLabelId","getTabContentId","setTabBodyWrapperHeight","tabHeight","wrapper","tabBodyWrapper","removeTabBodyWrapperHeight","handleClick","tabHeader","getTabIndex","McTab","[class.mc-tab-group_dynamic-height]","[class.mc-tab-group_inverted-header]","McTabNavBase","mcTabNavMixinBase","McTabNav","McTabLinkBase","mcTabLinkMixinBase","McTabLink","focusMonitor","[attr.aria-current]","[attr.tabIndex]","[class.mc-active]","McTabsModule","McTabLabel","McTabContent","McTagBase","_McTagMixinBase","_addClassModificatorForIcons","icons","contentChildren","iconElement","previousElementSibling","nextElementSibling","nextSibling","previousSibling","firstIconElement","secondIconElement","McIcon","McSelectBase","_scrollStrategyFactory","McNavbar","McNavbarModule","McNavbarContainer","McNavbarTitle","McNavbarItem","McNavbarBrand","McNavbarLogo","idIterator","McProgressBarBase","_McProgressBarMixinBase","McProgressBar","mode","McProgressBarModule","McProgressSpinnerBase","_McProgressSpinnerMixinBase","McProgressSpinner","percentage","McProgressSpinnerModule","McRadioChange","McRadioGroupBase","_McRadioGroupMixinBase","MC_RADIO_GROUP_CONTROL_VALUE_ACCESSOR","McRadioGroup","_changeDetector","_name","_selected","_isInitialized","_labelPosition","controlValueAccessorChangeFn","updateRadioButtonNames","markRadiosForCheck","updateSelectedRadioFromValue","checkSelectedRadioButton","toBoolean","touch","emitChangeEvent","_radios","radio","isAlreadySelected","McRadioButton","McRadioButtonBase","_McRadioButtonMixinBase","radioGroup","_radioDispatcher","removeUniqueSelectionListener","newCheckedState","notify","newDisabledState","required","onInputClick","onInputChange","groupValueChanged","[class.mc-checked]","UniqueSelectionDispatcher","McRadioModule","McTreeNodeDef","McTreeNodeDef_1","CdkTreeNodeDef","McTreeNodePadding","arguments","baseLeftPadding","_indent","iconWidth","McTreeNodePadding_1","withIcon","paddingIndent","nodeLevel","treeNode","treeControl","getLevel","level","leftPadding","isExpandable","setPadding","CdkTreeNodePadding","McTreeNodeToggle","McTreeNodeToggle_1","CdkTreeNodeToggle","MC_TREE_OPTION_PARENT_COMPONENT","McTreeOptionChange","uniqueIdCounter","McTreeOption","parent","_active","McTreeOption_1","setSelected","setActiveStyles","setInactiveStyles","getHeight","clientRects","getClientRects","getHostElement","emitSelectionChangeEvent","setFocusedOption","[attr.disabled]","[class.mc-selected]","CdkTreeNode","McTreeNavigationChange","McTreeSelectionChange","McTreeSelectionBase","differs","McTreeSelectionBaseMixin","noUnselect","navigationChange","McTreeSelection_1","rawValue","log","withShift","withCtrl","collapse","expand","toggleFocusedOption","PAGE_UP","setPreviousPageItemActive","PAGE_DOWN","setNextPageItemActive","updateScrollSize","withScrollSize","floor","previousIndex_1","previousActiveItemIndex","activeIndex_1","canDeselectLast","emitNavigationEvent","focusedIndex","focusedOption","renderNodeChanges","dataDiffer","viewContainer","parentData","nodeOutlet","arrayOfInstances","_embeddedViews","view","viewDef","def","nodes","node","nodeMatchedQueries","matchedQueryIds","nodeData","nodeIndex","reset","notifyOnChanges","CdkTreeNodeOutlet","IterableDiffers","MC_TREE_DIRECTIVES","McTreeFlattener","transformFunction","getChildren","flattenNode","resultNodes","parentMap","flatNode","children","child","childParentMap","flattenNodes","structuredData","expandFlattenedNodes","results","currentExpand","isExpanded","McTreeFlatDataSource","treeFlattener","initialData","flattenedData","expandedData","_data","dataNodes","connect","collectionViewer","viewChange","expansionModel","disconnect","DataSource","McTreeNestedDataSource","CdkPortal","ctorParameters","McTabBase","mcTabMixinBase","textLabel","contentPortal","hasOwnProperty","explicitContent","implicitContent","read","McModalControlService","parentService","openModals","rootOpenModals","registeredMetaMap","rootRegisteredMetaMap","registerModal","modalRef","hasRegistered","afterOpenSubscription","afterOpen","afterCloseSubscription","afterClose","removeOpenModal","has","afterAllClose","McModalRef","ModalUtil","document","lastPosition","listenDocumentClick","getLastClickPosition","clientX","clientY","ModalUtil$1","McModalComponent","cfr","mcMeasureScrollbarService","modalControl","changeDetector","mcModalType","mcZIndex","mcWidth","mcCloseByESC","_mcClosable","_mcMask","_mcMaskClosable","mcAfterOpen","mcAfterClose","mcOkType","_mcOkLoading","mcOnOk","_mcCancelLoading","mcOnCancel","mcGetContainer","mcOkText","mcCancelText","isComponent","mcContent","createDynamicComponent","isModalButtons","mcFooter","formatModalButtons","HTMLElement","OverlayRef","handleVisibleStateChange","firstChange","contentComponentRef","bodyContainer","insert","autoFocusButtonOk","changeVisibleFromInside","triggerOk","onClickOkCancel","triggerCancel","getInstance","getContentComponentRef","getContentComponent","getElement","onClickMask","mcMask","mcMaskClosable","target","contains","isModalType","onClickCloseBtn","ok","cancel","loadingKey","caseClose_1","doClose","isPromise","handleThen","catch","isNonEmptyString","isTemplateRef","Type","animation","closeResult","changeBodyOverflow","animateTo","getButtonCallableProp","prop","args","onButtonClick","button","loading","changeAnimationState","maskAnimationClassMap","modalAnimationClassMap","_b","isVisible","updateTransformOrigin","buttons","autoLoading","component","factory","resolveComponentFactory","childInjector","parentInjector","mcComponentParams","assign","modalElement","modalContainer","plusNum","body","scrollBarWidth","DOCUMENT","McMeasureScrollbarService","CssUnitPipe","defaultUnit","formatted","Pipe","ModalBuilderForService","createModal","changeProps","destroyModal","McModalService","confirm","confirmType","mcClassName","success","simpleConfirm","delete","McModalModule","McButtonModule","MC_NAVBAR_CONTAINER","MC_NAVBAR_ITEM","MC_NAVBAR_BRAND","MC_NAVBAR_TITLE","McNavbarItemBase","_McNavbarMixinBase","_platform","_cdRef","dropdownItems","isCollapsed","_subscription","encodeURI","dropdownContent","denyClickIfDisabled","_focusMonitor$","hasDropdownContent","listenClickOutside","startListenFocusDropdownItems","stopListenFocusDropdownItems","isActiveDropdownLink","link","isBrowser","location","href","handleClickByItem","toggleDropdown","isNavbarItem","handleClickByDropdownItem","forceCloseDropdown","_dropdownElements","el","events","eventListeners","hasAttribute","stopImmediatePropagation","Platform","CollapsibleItem","_collapsed","processCollapsed","collapsed","updateCollapsedClass","CachedItemWidth","itemsForCollapse","_collapsedItemsWidth","calculateAndCacheCollapsedItemsWidth","updateTitle","acc","getTitle","computedTitle","getAttribute","decodeURI","innerText","removeAttribute","forceRecalculateItemsWidth","resizeDebounceInterval","firstLevelElement","secondLevelElements","resizeObserver","debounceTime","_resizeSubscription","updateCollapsed","_itemsWidths","calculateAndCacheItemsWidth","_totalItemsWidths","calculateAndCacheTotalItemsWidth","collapseDelta","maxAllowedWidth","itemsWidths","canCollapse","collapsedItemsWidth","getOuterElementWidth","getPropertyValue","allItemsSelector","allItems","from","getItemsForCollapse","McDropdown","resetActiveItem","_keyManager","addItem","_items","_itemChanges","removeItem","setPositionClasses","posX","posY","xPosition","yPosition","classes","_classList","_startAnimation","_panelAnimationState","_resetAnimation","_onAnimationDone","_animationDone","_isAnimating","McDropdownItem","McDropdownContent","McDropdown_1","mcDropdownAnimations","transformDropdown","fadeInItems","MC_DROPDOWN_PANEL","MC_DROPDOWN_DEFAULT_OPTIONS","MC_DROPDOWN_SCROLL_STRATEGY","MC_DROPDOWN_SCROLL_STRATEGY_FACTORY_PROVIDER","MC_DROPDOWN_SCROLL_STRATEGY_FACTORY","McDropdownTrigger","_overlay","_element","_viewContainerRef","_scrollStrategy","_openedBy","dropdownOpened","dropdownClosed","_overlayRef","_opened","_closeSubscription","_hoverSubscription","dropdown","_check","_destroy","_cleanUpSubscriptions","_createOverlay","_setPosition","_portal","lazyContent","_closingActions","_init","opened","_attached","_reset","_setIsOpened","focusFirstItem","isOpen","throwMcDropdownMissingError","templateRef","_getOverlayConfig","_subscribeToPositions","withLockedPosition","originFallbackX","overlayFallbackY","_c","originFallbackY","_d","overlayFallbackX","overlapTrigger","backdrop","(touchstart)","McDropdownModule","McContentComponent","[class.mc-layout-content]","McFooterComponent","[class.mc-layout-footer]","McHeaderComponent","[class.mc-layout-header]","McLayoutComponent","hasSidebar","[class.mc-layout]","[class.mc-layout-has-sidebar]","McSidebarComponent","mcLayoutComponent","_mcWidth","mcCollapsedWidth","mcCollapsedChange","collapsible","mcCollapsed","[class.mc-layout-sidebar]","[class.mc-layout-sidebar-collapsed]","[style.flex]","[style.max-width.px]","[style.min-width.px]","[style.width.px]","Host","McLayoutModule","McListOption","listSelection","_hasFocus","checkboxPosition","_reportValueChange","wasSelected_1","_lineSetter","McLineSetter","_lines","_removeOptionFromList","getLabel","_text","_getHeight","_handleClick","_handleFocus","_handleBlur","_getHostElement","McLine","[class.mc-focused]","McListSelection","MC_SELECTION_LIST_VALUE_ACCESSOR","McListSelectionChange","McListSelectionBase","_McListSelectionMixinBase","horizontal","_modelChanges","_tempValues","_setOptionsFromValues","_i","selectAll","deselectAll","_canDeselectLast","values","getSelectedOptionValues","_isValidIndex","listOption","optionIndex","_getOptionIndex","setPreviousItemActive","setNextItemActive","_onKeyDown","_getOptionByValue","[tabIndex]","McListBase","McList","McListSubheaderCssStyler","McListItemBase","McListItem","McListModule","McLineModule","McLinkBase","_McLinkBase","McLink","McLinkModule","rootAfterAllClose","activeDate","startAt","dateAdapter","today","_currentView","startView","McCalendar","ngAfterViewChecked","moveFocusOnNextTick","focusActiveCell","intlChanges","minDate","maxDate","dateFilter","getCurrentViewComponent","init","updateTodaysDate","currentView","monthView","yearView","multiYearView","dateSelected","date","sameDate","selectedChange","yearSelectedInMultiYearView","normalizedYear","yearSelected","monthSelectedInYearView","normalizedMonth","monthSelected","userSelected","userSelection","goToDateInView","getValidDateOrNull","obj","isDateInstance","isValid","McMonthView","McYearView","McMultiYearView","MC_DATE_FORMATS","McDatepickerIntl","DateAdapter","mcDatepickerAnimations","opacity","fadeInCalendar","Element","matches","msMatchesSelector","datepickerUid","MC_DATEPICKER_SCROLL_STRATEGY","MC_DATEPICKER_SCROLL_STRATEGY_FACTORY_PROVIDER","MC_DATEPICKER_SCROLL_STRATEGY_FACTORY","McDatepickerContentBase","McDatepickerContentMixinBase","McDatepickerContent","calendar","[@transformPanel]","McDatepicker","disabledChange","selectedChanged","validSelected","focusedElementBeforeOpen","inputSubscription","createMissingDateImplError","McDatepicker_1","_startAt","datepickerInput","deserialize","_color","getThemePalette","popupRef","popupComponentRef","oldValue","selectYear","selectMonth","registerInput","input","activeElement","openAsPopup","calendarPortal","isAttached","completeClose","createPopup","datepicker","setColor","createPopupPositionStrategy","MC_DATEPICKER_VALUE_ACCESSOR","McDatepickerInput","MC_DATEPICKER_VALIDATORS","McDatepickerInputEvent","targetElement","dateFormats","formField","dateChange","dateInput","datepickerSubscription","localeSubscription","lastValueValid","cvaOnChange","mcDatepickerParse","minValidator","controlValue","compareDate","mcDatepickerMin","actual","maxValidator","mcDatepickerMax","filterValidator","mcDatepickerFilter","localeChanges","McDatepickerInput_1","oldDate","_min","_max","blur","isAltDownArrow","readOnly","parse","format","display","[attr.aria-haspopup]","[attr.aria-owns]","[attr.min]","[attr.max]","(change)","McDatepickerToggleIcon","McDatepickerToggle","intl","defaultTabIndex","parsedTabIndex","watchStateChanges","datepickerDisabled","inputDisabled","datepickerToggled","McButton","[class.mc-datepicker-toggle_active]","[class.mc-warn]","McDatepickerModule","McCalendarBody","McCalendarHeader","McDivider","_vertical","_inset","[attr.aria-orientation]","[class.mc-divider-vertical]","[class.mc-divider-inset]","McDividerModule","_template","_componentFactoryResolver","_appRef","_injector","_document","context","_outlet","DomPortalOutlet","createElement","parentNode","insertBefore","outletElement","ApplicationRef","McDropdownItemBase","_McDropdownItemMixinBase","_parentDropdownPanel","_getTabIndex","_checkDisabled","textNodeType","TEXT_NODE","output","childNodes","length_1","nodeType","query","providedIn","MC_DROPDOWN_DEFAULT_OPTIONS_FACTORY","_defaultOptions","_xPosition","_yPosition","_tabSubscription","_overlapTrigger","_hasBackdrop","throwMcDropdownInvalidPositionX","throwMcDropdownInvalidPositionY","className","_handleKeydown","setFocusOrigin","McInputMono","MIN_VALIDATOR","MinValidator","_createValidator","_validator","MAX_VALIDATOR","MaxValidator","McInputModule","McInput","McNumberInput","calendarLabel","openCalendarLabel","prevMonthLabel","nextMonthLabel","prevYearLabel","nextYearLabel","prevMultiYearLabel","nextMultiYearLabel","switchToMonthViewLabel","switchToMultiYearViewLabel","McCalendarCell","displayValue","enabled","cssClasses","numCols","activeCell","cellAspectRatio","selectedValueChange","cellClicked","cell","columnChanges","rows","firstRowOffset","cellPadding","cellWidth","isActiveCell","rowIndex","colIndex","cellNumber","aria-readonly","activeDateChange","firstDayOfWeek","getFirstDayOfWeek","narrowWeekdays","getDayOfWeekNames","longWeekdays","weekdays","long","narrow","concat","_activeDate","oldActiveDate","validDate","clampDate","hasSameMonthAndYear","selectedDate","getDateInCurrentMonth","_minDate","_maxDate","selectedYear","getYear","selectedMonth","getMonth","createDate","handleCalendarBodyKeydown","addCalendarDays","getDate","getNumDaysInMonth","addCalendarYears","addCalendarMonths","todayDate","monthLabel","getMonthNames","toLocaleUpperCase","substr","firstOfMonth","firstWeekOffset","getDayOfWeek","createWeekCells","mcCalendarBody","daysInMonth","dateNames","getDateNames","weeks","shouldEnableDate","dateA11yLabel","cellClasses","dateClass","d1","d2","todayYear","activeYear","activeOffset","years","row","year","createCellForYear","onYearSelected","month","yearsPerPage","getActiveCell","yearName","getYearName","shouldEnableYear","firstOfYear","getMonthInCurrentYear","onMonthSelected","normalizedDate","todayMonth","yearLabel","monthNames","months","createCellForMonth","monthName","monthYearA11yLabel","newMonthName","shouldEnableMonth","isYearAndMonthAfterMaxDate","isYearAndMonthBeforeMinDate","maxYear","maxMonth","minYear","minMonth","label","monthYearLabel","multi-year","currentPeriodClicked","previousClicked","nextClicked","previousEnabled","isSameView","nextEnabled","date1","date2","clampedActiveDate","calendarHeaderPortal","headerComponent","McIconButton","McAnchor","McButtonCSSStyler","McIconButtonCSSStyler","McCard","readonly","_tabIndex","hostElement","onClick","[class.mc-card_readonly]","[class.mc-card_selected]","McCardModule","MC_CHECKBOX_CLICK_ACTION","MC_CHECKBOX_CONTROL_VALUE_ACCESSOR","McCheckbox","TransitionCheckState","McCheckboxChange","McCheckboxBase","_McCheckboxMixinBase","_clickAction","indeterminateChange","_currentAnimationClass","_currentCheckState","Init","_controlValueAccessorChangeFn","_indeterminate","focusOrigin","_onInputFocusChange","_transitionCheckState","Indeterminate","Checked","Unchecked","indeterminate","newState","oldState","[class.mc-indeterminate]","[class.mc-checkbox-label-before]","MC_CHECKBOX_REQUIRED_VALIDATOR","McCheckboxRequiredValidator","[attr.required]","CheckboxRequiredValidator","McCheckboxModule","McCleaner","McFormFieldNumberControl","McHint","McPrefix","McStepper","stepUp","stepDown","onStepUp","onStepDown","McSuffix","McFormFieldBase","_McFormFieldMixinBase","_labelId","hovered","_validateControlChild","_control","_numberControl","hasStepper","_stepper","valueChanges","clearValue","hasCleaner","onHoverChanged","isHovered","step","_shouldForward","getMcFormFieldMissingControlError","_hint","_suffix","_prefix","_cleaner","[class.mc-form-field_invalid]","[class.mc-form-field_has-prefix]","[class.mc-form-field_has-suffix]","[class.mc-form-field_has-cleaner]","[class.mc-form-field_has-stepper]","[class.ng-untouched]","[class.ng-touched]","[class.ng-pristine]","[class.ng-dirty]","[class.ng-valid]","[class.ng-invalid]","[class.ng-pending]","(mouseenter)","(mouseleave)","McFormFieldWithoutBorders","res","MC_INPUT_INVALID_TYPES","BIG_STEP","SMALL_STEP","McInputBase","_McInputMixinBase","_model","bigStep","isDigit","Infinity","_host","self","getPrototypeOf","normalizeSplitter","McNumberInput_1","_focusChanged","minuses","NUMPAD_MINUS","DASH","FF_MINUS","serviceKeys","DELETE","BACKSPACE","TAB","arrows","allowedKeys","isIEPeriod","isNotIEPeriod","metaKey","C","V","X","F1","F12","EDGE","TRIDENT","ZERO","NINE","NUMPAD_ZERO","NUMPAD_NINE","valueAsNumber","update","replace","isFloat","isInt","test","NgModel","_uid","_type","_neverEmptyInputTypes","t","getSupportedInputTypes","_inputValueAccessor","_previousNativeValue","McInput_1","_validateType","_dirtyCheckNativeValue","_onInput","_isNeverEmpty","_isBadInput","getMcInputUnsupportedTypeError","__extends","d","__","constructor","extendStatics","__decorate","decorators","desc","r","getOwnPropertyDescriptor","Reflect","decorate","__param","paramIndex","decorator","__metadata","metadataKey","metadataValue","metadata","isBoolean","val","MC_SANITY_CHECKS_FACTORY","base","class_1","defaultColor","Default","colorPalette","errorState","matcher","errorStateMatcher","isErrorState","optionsArray","groups","groupCounter","optionHeight","currentScrollPosition","optionOffset","arrayMap","array","iteratee","baseValues","object","props","mcSelectScrollStrategyProviderFactory","reposition","inputType","sanitizeNumber","isFinite","getPrecision","arr","pow","value1","value2","precision","provider","openSidepanels","parentElement","scrollThrottle","setPrototypeOf","__proto__","p","__assign","s","n","MC_SANITY_CHECKS","_sanityChecksEnabled","_hasDoneGlobalChecks","_window","_areChecksEnabled","_checkDoctypeIsDefined","_checkThemeIsPresent","_isTestEnv","doctype","testElement","computedStyle","removeChild","BidiModule","_setLineClass","count","_resetClasses","_setClass","isAdd","ShowOnDirtyErrorStateMatcher","form","invalid","dirty","submitted","touched","McPseudoCheckbox","scrollbarMeasure","overflow","initScrollBarWidth","_scrollbarWidth","scrollDiv","scrollProp","clientWidth","McOptgroupBase","McOptgroupMixinBase","uniqueOptgroupIdCounter","labelId","[class.mc-optgroup-disabled]","[attr.aria-labelledby]","McOptionSelectionChange","mostRecentViewValue","[class.mc-option-multiple]","MC_LABEL_GLOBAL_OPTIONS","topCenter","topLeft","topRight","rightTop","rightBottom","bottomCenter","bottomLeft","bottomRight","leftTop","leftBottom","minWidth","animateChild","McIconCSSStyler","McIconBase","_McIconMixinBase","Empty","iconName","queries","McButtonBase","_McButtonMixinBase","_haltDisabledEvents"],"mappings":";;;;;;65CiHuBA,SAAgB4mE,GAAUC,EAAG5kD,GAEzB,QAAS6kD,KAAOzmE,KAAK0mE,YAAcF,EADnCG,EAAcH,EAAG5kD,GAEjB4kD,EAAE1mE,UAAkB,OAAN8hB,EAAajiB,OAAOmD,OAAO8e,IAAM6kD,EAAG3mE,UAAY8hB,EAAE9hB,UAAW,GAAI2mE,IAwBnF,QAAgBG,GAAWC,EAAYrwB,EAAQ3yC,EAAKijE,GAChD,GAA2HN,GAAvHn6C,EAAI2d,UAAU74B,OAAQ41D,EAAI16C,EAAI,EAAImqB,EAAkB,OAATswB,EAAgBA,EAAOnnE,OAAOqnE,yBAAyBxwB,EAAQ3yC,GAAOijE,CACrH,IAAuB,gBAAZG,UAAoD,kBAArBA,SAAQC,SAAyBH,EAAIE,QAAQC,SAASL,EAAYrwB,EAAQ3yC,EAAKijE,OACpH,KAAK,GAAInjC,GAAIkjC,EAAW11D,OAAS,EAAGwyB,GAAK,EAAGA,KAAS6iC,EAAIK,EAAWljC,MAAIojC,GAAK16C,EAAI,EAAIm6C,EAAEO,GAAK16C,EAAI,EAAIm6C,EAAEhwB,EAAQ3yC,EAAKkjE,GAAKP,EAAEhwB,EAAQ3yC,KAASkjE,EAChJ,OAAO16C,GAAI,GAAK06C,GAAKpnE,OAAOC,eAAe42C,EAAQ3yC,EAAKkjE,GAAIA,EAGhE,QAAgBI,GAAQC,EAAYC,GAChC,MAAO,UAAU7wB,EAAQ3yC,GAAOwjE,EAAU7wB,EAAQ3yC,EAAKujE,IAG3D,QAAgBE,GAAWC,EAAaC,GACpC,GAAuB,gBAAZP,UAAoD,kBAArBA,SAAQQ,SAAyB,MAAOR,SAAQQ,SAASF,EAAaC,GC7DpH,QAAgBE,GAAUC,GAA4B,MAAsB,iBAARA,GAEpE,QAAgBr/B,GAAUnoC,GACtB,MAAgB,OAATA,GAAiB,GAAGA,GAAY,QCM3C,QAAgBynE,KACZ,OAAO,ECCX,QAAgBjvD,GAAyCkvD,GACrD,MAAJ,UAAA7uD,GAWQ,QAAR8uD,KAAA,IAAoB,GAApBjwB,MAAAsP,EAAA,EAAoBA,EAApBnd,UAAA74B,OAAoBg2C,IAAAtP,EAApBsP,GAAAnd,UAAAmd,EAAQ,IAARnmD,GAAAgY,EAAA8gB,MAAA95B,KAEqB63C,IAFrB73C,WAFgBgB,GAAhBmT,WAAqC,IAMjC,MAfqB6F,GAAzB8tD,EAAA9uD,GACQrZ,OAARC,eAAYkoE,EAAZhoE,UAAA,YAAAC,IAAQ,WACI,MAAOC,MAAKmU,WAGxBjU,IAAQ,SAAaC,GACTH,KAAKmU,UAAYxT,EAAAA,sBAAsBR,oCASnD2nE,GAfyBD,GCYzB,QAAgBnvD,GACZmvD,EACAE,GAEA,WAFJ,KAAAA,IAAIA,EAA6BnvD,EAAAA,aAAaovD,SAE9C,SAAAhvD,GAwBQ,QAAR8uD,KAAA,IAAoB,GAApBjwB,MAAAsP,EAAA,EAAoBA,EAApBnd,UAAA74B,OAAoBg2C,IAAAtP,EAApBsP,GAAAnd,UAAAmd,EAAQ,IAARnmD,GAAAgY,EAAA8gB,MAAA95B,KACqB63C,IADrB73C,WAGYgB,GAAK+1B,MAAQgxC,IAErB,MA7BqB/tD,GAAzB8tD,EAAA9uD,GAIQrZ,OAARC,eAAYkoE,EAAZhoE,UAAA,SAAAC,IAAQ,WACI,MAAOC,MAAKotD,QAGxBltD,IAAQ,SAAUC,GACN,GAAM8nE,GAAe9nE,GAAS4nE,CAE1BE,KAAiBjoE,KAAKotD,SAClBptD,KAAKotD,QACLptD,KAAKuY,YAAY7T,cAAckH,UAAUysB,OAAO,MAAMr4B,KAAKotD,QAG3D6a,GACAjoE,KAAKuY,YAAY7T,cAAckH,UAAUC,IAAI,MAAMo8D,GAGvDjoE,KAAKotD,OAAS6a,oCAS9BH,GA7ByBD,GClBzB,QAAgBpvD,GAAiDovD,EAAS7W,GACtE,WADJ,KAAAA,IAA0EA,EAA1E,GACA,SAAAh4C,GAWQ,QAAR8uD,KAAA,IAAoB,GAApBjwB,MAAAsP,EAAA,EAAoBA,EAApBnd,UAAA74B,OAAoBg2C,IAAAtP,EAApBsP,GAAAnd,UAAAmd,EAAQ,IAARnmD,GAAAgY,EAAA8gB,MAAA95B,KACqB63C,IADrB73C,WAFgBgB,GAAhBw8D,UAAoCxM,IAKhC,MAdqBh3C,GAAzB8tD,EAAA9uD,GACQrZ,OAARC,eAAYkoE,EAAZhoE,UAAA,YAAAC,IAAQ,WACI,MAAOC,MAAKqG,UAAY,EAAIrG,KAAKw9D,WAG7Ct9D,IAAQ,SAAaC,GACTH,KAAKw9D,UAAqB,MAATr9D,EAAgBA,EAAQ6wD,mCAQrD8W,GAdyBD,GCsBzB,QAAgBr/C,GAAsDq/C,GAClE,MAAJ,UAAA7uD,GAYQ,QAAR8uD,KAAA,IAAoB,GAApBjwB,MAAAsP,EAAA,EAAoBA,EAApBnd,UAAA74B,OAAoBg2C,IAAAtP,EAApBsP,GAAAnd,UAAAmd,EAAQ,IAARnmD,GAAAgY,EAAA8gB,MAAA95B,KACqB63C,IADrB73C,WAVQgB,GAARknE,YAA8B,EAMblnE,EAAjBugB,aAAgC,GAAItT,GAAAA,UAoBhC,MA5BqB+L,GAAzB8tD,EAAA9uD,GAgBQ8uD,EAARhoE,UAAAiqB,iBAAQ,WACI,GAAMq1C,GAAWp/D,KAAKkoE,WAChB38B,EAASvrC,KAAKsoB,iBAAmBtoB,KAAKqoB,WACtC8/C,EAAUnoE,KAAKooE,mBAAqBpoE,KAAKooB,yBACzC+E,EAAUntB,KAAKif,UAAYjf,KAAKif,UAAUkO,QAAyB,KACnEgyC,EAAWgJ,EAAQE,aAAal7C,EAASoe,EAE3C4zB,KAAaC,IACbp/D,KAAKkoE,WAAa/I,EAClBn/D,KAAKuhB,aAAa3b,SAGlCkiE,GA5ByBD,GCkOzB,QAAgB5tC,GACZ0tB,EACA/nC,EACAsa,GAGA,GAAIA,EAAa/oB,OAAQ,CAMrB,IAAK,GALCm3D,GAAe1oD,EAAQ6B,UACvB8mD,EAASruC,EAAazY,UAExB+mD,EAAe,EAEV7kC,EAAI,EAAGA,EAAIgkB,EAAc,EAAGhkB,IAC7B2kC,EAAa3kC,GAAGtJ,OAASiuC,EAAa3kC,GAAGtJ,QAAUkuC,EAAOC,IAC1DA,GAIR,OAAOA,GAGX,MAAO,GAWX,QAAgB3lD,GACZ8kC,EACA8gB,EACAC,EACAplD,GAEA,GAAMqlD,GAAehhB,EAAc8gB,CAEnC,OAAIE,GAAeD,EAAgCC,EAE/CA,EAAeF,EAAeC,EAAwBplD,EAC/CC,KAAK8G,IAAI,EAAGs+C,EAAerlD,EAAcmlD,GAG7CC,EC3MX,QAASE,GAAeC,EAAYC,GAKhC,IAJA,GAAIx2D,IAAS,EACPnB,EAAkB,MAAT03D,EAAgB,EAAIA,EAAM13D,OACnC3C,EAAS4Q,MAAMjO,KAEZmB,EAAQnB,GACb3C,EAAQ8D,GAAUw2D,EAASD,EAAOv2D,GAASA,EAAOu2D,EAGtD,OAAOr6D,GAEX,QAASu6D,GAAcC,EAAoCC,GACvD,MAAOL,GAASK,EAAQ,SAACplE,GACrB,MAAOmlE,GAAQnlE,KChHvB,QAAgBkxB,KACZ,MAAOhpB,OAAM,iEASjB,QAAgBuT,KACZ,MAAOvT,OAAM,sDAQjB,QAAgBipB,KACZ,MAAOjpB,OAAM,qCtHCjB,QAAgBm9D,GAAsC/nE,GAElD,MAAO,YAAM,MAAAA,GAAQ4Q,iBAAiBo3D,cuH5B1C,QAAgB7H,KACd,MAAOv1D,OAAM,oDCDf,QAAgBu6D,GAA+B8C,GAC3C,MAAOr9D,OAAM,eAAeq9D,EAAhC,kCZDA,QAASC,GAAelpE,GACpB,OAAQmpE,SAASnpE,IAAUkyB,MAAMlyB,GAC3B,KACAA,EAGV,QAASopE,GAAappE,GAClB,GAAMqpE,GAAMrpE,EAAM4qB,WAAWhmB,MAAM,IAEnC,OAAsB,KAAfykE,EAAIr4D,OACL,EAECoS,KAAKkmD,IAAI,GAAID,EAAI,GAAGr4D,QAG/B,QAAStF,GAAI69D,EAAgBC,GACzB,GAAMC,GAAYrmD,KAAK8G,IAAIk/C,EAAaG,GAASH,EAAaI,GAI9D,OAAON,IAFMK,EAASE,EAAYD,EAASC,GAAaA,GajB5D,QAAgB7c,GAA2B8c,GACvC,MAAO99D,OACH,uCAAuC89D,EAD/C,iIjDyDA,QAAgB1d,GAAsChrD,GAClD,MAAO,YAAM,MAAAA,GAAQ4Q,iBAAiBo3D,ckD5D1C,QAAgBpmB,KACZ,KAAMh3C,OAAM,kMAWhB,QAAgBqoD,KACZ,KAAMroD,OAAM,+IAShB,QAAgBsoD,KACZ,KAAMtoD,OAAM,6IlEwChB,QAAgB8nD,KACZ,OACInQ,gBAAgB,EAChB5D,UAAW,QACXC,UAAW,QACXpuC,cAAe,oCC9BvB,QAAgBuvC,GAAoC//C,GAChD,MAAO,YAAM,MAAAA,GAAQ4Q,iBAAiBo3D,cL0d1C,QAASlyB,GAAUgU,GAEf,QAASA,IAAuB,gBAARA,IAAmC,kBAARA,KAA4D,kBAA7BA,GAAoBlsC,MAA6D,kBAA9BksC,GAAoB9T,M9CnZ7J,QAASpkC,GAAoBtO,EAAkCqlE,GAG3D,IAFA,GAAIv+B,GAA6B9mC,EAAQC,cAAcqlE,cAEhDx+B,IAAWA,EAAO3/B,UAAU6qC,SAAS,2BACxClL,EAASA,EAAOw+B,aAGpB,OAAOx+B,GAASu+B,EAAej5D,KAAK,SAACC,GAAc,MAAAA,GAAU3C,KAAOo9B,EAAQp9B,KAAM,KVuFtF,QAAgB8P,GAA+B9c,GAC3C,MAAO,YAAM,MAAAA,GAAQ4Q,iBAAiBo3D,YAAYa,eAAgB,MAWtE,QAAgBtiE,GAAiCtG,GAC7C,MAAO2K,OAAM,uBAAuB3K,EAAxC,iBiH3MA,GAAIulE,GAAgB,SAASH,EAAG5kD,GAI5B,OAHA+kD,EAAgBhnE,OAAOsqE,iBAChBC,uBAA2B9qD,QAAS,SAAUonD,EAAG5kD,GAAK4kD,EAAE0D,UAAYtoD,IACvE,SAAU4kD,EAAG5kD,GAAK,IAAK,GAAIuoD,KAAKvoD,GAAOA,EAAEgwB,eAAeu4B,KAAI3D,EAAE2D,GAAKvoD,EAAEuoD,MACpD3D,EAAG5kD,IASjBwoD,GAAW,WAQlB,MAPAA,IAAWzqE,OAAOo5C,QAAU,SAAkB6sB,GAC1C,IAAK,GAAIyE,GAAG1mC,EAAI,EAAG2mC,EAAItgC,UAAU74B,OAAQwyB,EAAI2mC,EAAG3mC,IAAK,CACjD0mC,EAAIrgC,UAAUrG,EACd,KAAK,GAAIwmC,KAAKE,GAAO1qE,OAAOG,UAAU8xC,eAAex4B,KAAKixD,EAAGF,KAAIvE,EAAEuE,GAAKE,EAAEF,IAE9E,MAAOvE,IAEJwE,GAAStwC,MAAM95B,KAAMgqC,YEhCnBugC,GAAmB,GAAIn7D,GAAAA,eAAwB,oBACxDwkD,WAAY,OACZlb,QAASkvB,IAiBb9zD,GAAA,WAUI,QAAJA,GAA8D02D,GAAAxqE,KAA9DwqE,qBAA8DA,EARlDxqE,KAAZyqE,sBAAmC,EAGvBzqE,KAAZuyD,UAA4C,gBAAbrf,WAAyBA,SAAWA,SAAW,KAGlElzC,KAAZ0qE,QAAwC,gBAAXvgD,SAAuBA,OAASA,OAAS,KAG1DnqB,KAAK2qE,sBAAwB3qE,KAAKyqE,uBAClCzqE,KAAK4qE,yBACL5qE,KAAK6qE,uBACL7qE,KAAKyqE,sBAAuB,GA+CxC,MA1CY32D,GAAZhU,UAAA6qE,kBAAI,WACI,MAAO3qE,MAAKwqE,sBAAwBxqD,EAAAA,cAAgBhgB,KAAK8qE,cAIrDh3D,EAAZhU,UAAAgrE,WAAI,WAEI,MAAO9qE,MAAK0qE,UAAY1qE,KAAK0qE,QAAmB,WAAK1qE,KAAK0qE,QAAiB,UAGvE52D,EAAZhU,UAAA8qE,uBAAI,WACQ5qE,KAAKuyD,YAAcvyD,KAAKuyD,UAAUwY,SAClC9qD,QAAQC,KACJ,+GAMJpM,EAAZhU,UAAA+qE,qBAAI,WACI,GAAI7qE,KAAKuyD,WAAyC,kBAArBt6C,kBAAiC,CAC1D,GAAM+yD,GAAchrE,KAAKuyD,UAAUI,cAAc,MAEjDqY,GAAYp/D,UAAUC,IAAI,0BAC1B7L,KAAKuyD,UAAUpZ,KAAK5gB,YAAYyyC,EAEhC,IAAMC,GAAgBhzD,iBAAiB+yD,EAKnCC,IAA2C,SAA1BA,EAAc1a,SAC/BtwC,QAAQC,KACJ,2IAMRlgB,KAAKuyD,UAAUpZ,KAAK+xB,YAAYF,KA1D/Bl3D,EAAb5L,GAJCsB,EAAAA,UACGG,SAAWwhE,EAAAA,YACXzhE,SAAWyhE,EAAAA,cAYEviE,EAAjB,EAAiBG,EAAAA,YAAYH,EAA7B,EAA6BC,EAAAA,OAAO0hE,uCAVvBz2D,OERb,SAAY8E,GACRA,EAAJ,QAAA,UACIA,EAAJ,OAAA,SACIA,EAAJ,MAAA,QACIA,EAAJ,QAAA,SACIA,EAAJ,MAAA,IALYA,EAAAA,eAAAA,EAAAA,iBUJZ,IAAA4tC,IAAA,WAAA,QAAAA,MAAqB,MAARA,GAAbt+C,GAJCI,EAAAA,WACGC,SAAU,sBACVE,MAAQqE,MAAO,cAEN05C,MAMbV,GAAA,WACI,QAAJA,GAAwBC,EAAmC1E,GAAvD,GAAJrgD,GAAAhB,IAAwBA,MAAxB+lD,OAAwBA,EAAmC/lD,KAA3DqhD,SAA2DA,EACnDrhD,KAAKorE,cAAcprE,KAAK+lD,OAAO50C,QAE/BnR,KAAK+lD,OAAO9yC,QAAQ5Q,UAAU,WAC1BrB,EAAKoqE,cAAcpqE,EAAK+kD,OAAO50C,UA0B3C,MAtBY20C,GAAZhmD,UAAAsrE,cAAI,SAAsBC,GAClBrrE,KAAKsrE,gBACS,IAAVD,GAAyB,IAAVA,EACfrrE,KAAKurE,UAAU,MAAMF,EAAjC,SAA+C,GAC5BA,EAAQ,GACfrrE,KAAKurE,UAAU,iBAAiB,IAIhCzlB,EAAZhmD,UAAAwrE,cAAI,WACItrE,KAAKurE,UAAU,aAAa,GAC5BvrE,KAAKurE,UAAU,aAAa,GAC5BvrE,KAAKurE,UAAU,iBAAiB,IAG5BzlB,EAAZhmD,UAAAyrE,UAAI,SAAkBjX,EAAmBkX,GAC7BA,EACAxrE,KAAKqhD,SAAS38C,cAAckH,UAAUC,IAAIyoD,GAE1Ct0D,KAAKqhD,SAAS38C,cAAckH,UAAUysB,OAAOi8B,IAGzDxO,KAOA0C,GAAA,WAAA,QAAAA,MAA2B,MAAdA,GAAbtgD,GALCsB,EAAAA,UACGG,WACAD,SAAU88C,IACV/8C,cAAe+8C,OAENgC,MClDbijB,GAAA,WAAA,QAAAA,MAIA,MAHIA,GAAJ3rE,UAAAuoE,aAAI,SAAal7C,EAA6Bu+C,GACtC,SAAUv+C,GAAWA,EAAQw+C,UAAYx+C,EAAQy+C,OAAUF,GAAQA,EAAKG,aAFnEJ,EAAbvjE,GADCuK,EAAAA,cACYg5D,MAQbllD,GAAA,WAAA,QAAAA,MAdA,MAeIA,GAAJzmB,UAAAuoE,aAAI,SAAal7C,EAA6Bu+C,GACtC,SAAUv+C,GAAWA,EAAQw+C,UAAYx+C,EAAQ2+C,SAAYJ,GAAQA,EAAKG,gHAFrEtlD,EAAbre,GADCuK,EAAAA,YAAamhD,WAAY,UACbrtC,MCkBbwlD,GAAA,WAdA,QAAAA,KAea/rE,KAAbwX,MAA4C,YAE/BxX,KAAbqG,UAAiC,EACjC,MAHa6B,IAARE,EAAAA,iCAAL2jE,EAAAjsE,UAAA,YAAA,IAEaoI,GAARE,EAAAA,kCAAL2jE,EAAAjsE,UAAA,eAAA,IAHaisE,EAAb7jE,GAdCgE,EAAAA,WACGM,cAAeC,EAAAA,kBAAkBC,KACjCqK,qBAAqB,EACrB1K,gBAAiBC,EAAAA,wBAAwBC,OACzChE,SAAU,qBACV6D,QAAS,qqBACTD,SAAJ,4GACI1D,MACIqE,MAAO,qBACPuyD,2BAA4B,4BAC5B51B,qBAAsB,sBACtB7tB,sBAAuB,eAGlBmwD,MCvBb/jD,GAAA,WAAA,QAAAA,MAAqC,MAAxBA,GAAb9f,GAJCsB,EAAAA,UACGE,SAAUqiE,IACVtiE,cAAesiE,OAEN/jD,MCFbsxB,GAAA,WAoBI,QAAJA,GACkCpG,GAAAlzC,KAAlCkzC,SAAkCA,EATtBlzC,KAAZgsE,kBACQ5qE,SAAU,WACVyD,IAAK,UACLggB,MAAO,OACPK,OAAQ,OACR+mD,SAAU,UAMVjsE,KAAKksE,qBA9Bb,MASIvsE,QAAJC,eAAQ05C,EAARx5C,UAAA,kBAAAC,IAAI,WACI,MAAIC,MAAKmsE,gBACEnsE,KAAKmsE,iBAEhBnsE,KAAKksE,qBAEElsE,KAAKmsE,kDAkBhB7yB,EAAJx5C,UAAAosE,mBAAI,WACI,GAAME,GAAYpsE,KAAKkzC,SAASyf,cAAc,MAG9C,KAAK,GAAM0Z,KAAcrsE,MAAKgsE,iBACtBhsE,KAAKgsE,iBAAiBp6B,eAAey6B,KACrCD,EAAUxnE,MAAMynE,GAAcrsE,KAAKgsE,iBAAiBK,GAI5DrsE,MAAKkzC,SAASiG,KAAK5gB,YAAY6zC,EAE/B,IAAMvnD,GAAQunD,EAAUnuC,YAAcmuC,EAAUE,WAEhDtsE,MAAKkzC,SAASiG,KAAK+xB,YAAYkB,GAC/BpsE,KAAKmsE,gBAAkBtnD,4HAzClBy0B,EAAbpxC,GAHCuK,EAAAA,YACGmhD,WAAY,SAuBPhrD,EAAT,EAASC,EAAAA,OAAOwwC,EAAAA,4CArBHC,MCAbizB,GAAA,WAAA,QAAAA,MAA6B,MAA7BA,MAEaC,GAA8D7zD,EAAc4zD,IAGrFE,GAA0B,EAqB9B/xC,GAAA,SAAA1hB,GAhBA,QAAA0hB,KAAA,GAAA15B,GAAA,OAAAgY,GAAAA,EAAA8gB,MAAA95B,KAAAgqC,YAAAhqC,WAqBIgB,GAAJ0rE,QAAsB,qBAAqBD,OAC3C,MANgCzyD,GAAhC0gB,EAAA1hB,GAEa9Q,GAARE,EAAAA,iCAALsyB,EAAA56B,UAAA,YAAA,IAFa46B,EAAbxyB,GAhBCgE,EAAAA,WACG3D,SAAU,cACVC,SAAU,aACV2D,SAAJ,gIACIK,cAAeC,EAAAA,kBAAkBC,KACjCL,gBAAiBC,EAAAA,wBAAwBC,OACzCmP,QAAS,YACTtP,QAAS,2HACT3D,MACIqE,MAAO,cACPE,KAAM,QACN2/D,+BAAgC,WAChCzuC,uBAAwB,sBACxB0uC,yBAA0B,cAGrBlyC,IAAmB8xC,IZN5BnhC,GAAkB,EAGtBwhC,GAAA,WACI,QAAJA,GAAuBzxD,EAAyB4F,OAAhD,KAAAA,IAAgDA,GAAhD,GAAuBhhB,KAAvBob,OAAuBA,EAAyBpb,KAAhDghB,YAAgDA,EAChD,MAAA6rD,MAcalyC,GACT,GAAIvrB,GAAAA,eAAyC,8BAyBjDorB,GAAA,WA8DI,QAAJA,GACyB/1B,EACAsG,EACgDwgC,EAC5ClR,GAHJr6B,KAAzByE,QAAyBA,EACAzE,KAAzB+K,kBAAyBA,EACgD/K,KAAzEurC,OAAyEA,EAC5CvrC,KAA7Bq6B,MAA6BA,EA5DNr6B,KAAvBu7B,kBAA2C,GAAI5hB,GAAAA,aAGlC3Z,KAAbuhB,aAA4B,GAAItT,GAAAA,QAoBpBjO,KAAZ2pB,IAAkB,aAAa0hB,KAMnBrrC,KAAZ8nC,WAAwB,EAWZ9nC,KAAZmU,WAAwB,EAYZnU,KAAZwrC,SAAsB,EAEVxrC,KAAZ8sE,oBAAkC,GAwHlC,MArKIntE,QAAJC,eAAQ46B,EAAR16B,UAAA,aAAAC,IAAI,WAEI,OAAQC,KAAKgsC,iBAAiB3L,aAAe,IAAIpO,wCAIrDtyB,OAAJC,eAAQ46B,EAAR16B,UAAA,YAAAC,IAAI,WACI,MAAOC,MAAKurC,QAAUvrC,KAAKurC,OAAOpsB,0CAGtCxf,OAAJC,eAAQ46B,EAAR16B,UAAA,MAAAC,IAAI,WACI,MAAOC,MAAK2pB,qCAKhBhqB,OAAJC,eAAQ46B,EAAR16B,UAAA,YAAAC,IAAI,WACI,MAAOC,MAAK8nC,2CAMhBnoC,OAAJC,eAAQ46B,EAAR16B,UAAA,YAAAC,IAAI,WACI,MAAQC,MAAKq6B,OAASr6B,KAAKq6B,MAAMh0B,UAAarG,KAAKmU,WAG3DjU,IAAI,SAAaC,GACTH,KAAKmU,UAAYxT,EAAAA,sBAAsBR,oCAW3CR,OAAJC,eAAQ46B,EAAR16B,UAAA,UAAAC,IAAI,WACI,MAAOC,MAAKwrC,yCAchBhR,EAAJ16B,UAAAupD,mBAAI,WAMI,GAAIrpD,KAAK8nC,UAAW,CAChB,GAAM1R,GAAYp2B,KAAKo2B,SAEnBA,KAAcp2B,KAAK8sE,sBACnB9sE,KAAK8sE,oBAAsB12C,EAC3Bp2B,KAAKuhB,aAAa3b,UAK9B40B,EAAJ16B,UAAAqF,YAAI,WACInF,KAAKuhB,aAAa1b,YAGtB20B,EAAJ16B,UAAAqgB,OAAI,WACSngB,KAAK8nC,YACN9nC,KAAK8nC,WAAY,EAEjB9nC,KAAK+K,kBAAkB5G,eACvBnE,KAAKisC,6BAIbzR,EAAJ16B,UAAAuhB,SAAI,WACQrhB,KAAK8nC,YACL9nC,KAAK8nC,WAAY,EAEjB9nC,KAAK+K,kBAAkB5G,eACvBnE,KAAKisC,6BAIbzR,EAAJ16B,UAAAqa,MAAI,WACI,GAAM1V,GAAUzE,KAAKgsC,gBAEQ,mBAAlBvnC,GAAQ0V,OACf1V,EAAQ0V,SAShBqgB,EAAJ16B,UAAA6rC,gBAAI,WACS3rC,KAAKwrC,UACNxrC,KAAKwrC,SAAU,EACfxrC,KAAK+K,kBAAkB5G,iBAS/Bq2B,EAAJ16B,UAAA8rC,kBAAI,WACQ5rC,KAAKwrC,UACLxrC,KAAKwrC,SAAU,EACfxrC,KAAK+K,kBAAkB5G,iBAK/Bq2B,EAAJ16B,UAAAmmD,SAAI,WACI,MAAOjmD,MAAKo2B,WAIhBoE,EAAJ16B,UAAAgG,cAAI,SAAcN,GAENA,EAAMQ,UAAY8yB,EAAAA,OAAStzB,EAAMQ,UAAY+yB,EAAAA,QAC7C/4B,KAAK0e,uBAGLlZ,EAAM8Y,mBAQdkc,EAAJ16B,UAAA4e,qBAAI,WACS1e,KAAKqG,WACNrG,KAAK8nC,WAAY9nC,KAAKmf,WAAYnf,KAAK8nC,UAEvC9nC,KAAK+K,kBAAkB5G,eACvBnE,KAAKisC,0BAAyB,KAItCzR,EAAJ16B,UAAAukC,YAAI,WACI,MAAOrkC,MAAKqG,SAAW,KAAO,KAGlCm0B,EAAJ16B,UAAAksC,eAAI,WACI,MAAOhsC,MAAKyE,QAAQC,eAIhB81B,EAAZ16B,UAAAmsC,yBAAI,SAAiCjrB,OAArC,KAAAA,IAAqCA,GAArC,GACQhhB,KAAKu7B,kBAAkBv0B,KAAK,GAAI6lE,IAAwB7sE,KAAMghB,KAhLzD9Y,GAARE,EAAAA,iCAALoyB,EAAA16B,UAAA,YAAA,IAIcoI,GAATC,EAAAA,kCAALqyB,EAAA16B,UAAA,wBAAA,IAgCIoI,GADCE,EAAAA,iEAGLoyB,EAAA16B,UAAA,WAAA,MAxCa06B,EAAbtyB,GApBCgE,EAAAA,WACG3D,SAAU,YACVC,SAAU,WACVC,MACIge,kBAAmB,gBACnB3Z,MAAO,YACPs/B,sBAAuB,WACvB2gC,6BAA8B,WAC9B7nC,oBAAqB,SACrBtpB,sBAAuB,WACvBD,OAAQ,KAERrI,UAAW,yBACX5K,YAAa,yBAEjB0D,QAAS,2iBACTD,SAAJ,6NACIK,cAAeC,EAAAA,kBAAkBC,KACjCL,gBAAiBC,EAAAA,wBAAwBC,SAmEpC3D,EAAT,EAASG,EAAAA,YAAYH,EAArB,EAAqBC,EAAAA,OAAO8xB,KACnB/xB,EAAT,EAASG,EAAAA,YAHTC,EAAA,qBAAkCE,EAAAA,WACUsE,EAAAA,kBAA5C7N,OAEoC+6B,MAlEvBF,Ma1DbM,GAAA,WAAA,QAAAA,MAA6B,MAAhBA,GAAb5yB,GALCsB,EAAAA,UACGG,SAAUC,EAAAA,aAAcoe,IACxBte,SAAU8wB,GAAUE,IACpBjxB,cAAe+wB,GAAUE,OAEhBI,MCVAkyC,GACT,GAAI59D,GAAAA,eAA6B,2BCKxByO,GAA2C/B,EAAAA,QAAQ,iBAC5DtE,EAAAA,MAAM,OAAQ5S,EAAAA,OAAQ+mD,QAAS,KAC/Bn0C,EAAAA,MAAM,OAAQ5S,EAAAA,OAAQ+mD,QAAS,KAC/Bn0C,EAAAA,MAAM,QAAS5S,EAAAA,OAAQ+mD,QAAS,KAChC3vC,EAAAA,WAAW,YAAaC,EAAAA,QAAQ,yCAChCD,EAAAA,WAAW,YAAaC,EAAAA,QAAQ,0CCfpC,SAAY6X,GACRA,EAAJ,cAAA,8BACIA,EAAJ,kBAAA,8BACIA,EAAJ,kBAAA,4BACIA,EAAJ,WAAA,+BAJYA,EAAAA,kBAAAA,EAAAA,oBfGZ,IAAa9W,KACTnY,KACId,QAAU,SACVC,QAAU,MACVC,SAAU,SACVC,SAAU,UAEd+oE,WACIlpE,QAAU,SACVC,QAAU,MACVC,SAAU,SACVC,SAAU,SACVugB,YAAUjU,GACVsT,YAAUtT,IAEd08D,SACInpE,QAAU,QACVC,QAAU,MACVC,SAAU,QACVC,SAAU,SACVugB,YAAUjU,GACVsT,YAAUtT,IAEd28D,UACIppE,QAAU,MACVC,QAAU,MACVC,SAAU,MACVC,SAAU,SACVugB,YAAUjU,GACVsT,YAAUtT,IAEdoU,OACI7gB,QAAU,MACVC,QAAU,SACVC,SAAU,QACVC,SAAU,UAEdkpE,UACIrpE,QAAU,MACVC,QAAU,MACVC,SAAU,QACVC,SAAU,MACVugB,YAAUjU,GACVsT,YAAUtT,IAEd68D,aACItpE,QAAU,MACVC,QAAU,SACVC,SAAU,QACVC,SAAU,SACVugB,YAAUjU,GACVsT,YAAUtT,IAEd2U,QACIphB,QAAU,SACVC,QAAU,SACVC,SAAU,SACVC,SAAU,OAEdopE,cACIvpE,QAAU,SACVC,QAAU,SACVC,SAAU,SACVC,SAAU,OAEdqpE,YACIxpE,QAAU,QACVC,QAAU,SACVC,SAAU,QACVC,SAAU,OAEdspE,aACIzpE,QAAU,MACVC,QAAU,SACVC,SAAU,MACVC,SAAU,OAEd6X,MACIhY,QAAU,QACVC,QAAU,SACVC,SAAU,MACVC,SAAU,UAEdupE,SACI1pE,QAAU,QACVC,QAAU,MACVC,SAAU,MACVC,SAAU,OAEdwpE,YACI3pE,QAAU,QACVC,QAAU,SACVC,SAAU,MACVC,SAAU,WAILvC,GAoBb,SAA0BqnE,GACtB,MAAiB,OAAVA,KAAsBD,EAAWC,EAAQrpE,OAAO+D,KAAKslE,MApB5DhsD,GAAanY,IAAKmY,GAAa4H,MAAO5H,GAAamI,OAAQnI,GAAajB,OrH/E/DsL,GACT,GAAIjY,GAAAA,eAAsC,6BASjC6Y,IACT5M,QAASgM,GACTtJ,MAAO9U,EAAAA,SACP+U,WAAYkrD,GqIhBHniD,IAaTC,eAAgBlL,EAAAA,QAAQ,kBACpBtE,EAAAA,MAAM,OAAQ5S,EAAAA,OACVgvB,UAAW,YACX+5C,SAAU,OACVhiB,QAAS,KAEb3vC,EAAAA,WAAW,YAAaqe,EAAAA,OACpBs5B,EAAAA,MAAM,iBAAkBia,EAAAA,gBACxB3xD,EAAAA,QAAQ,6CAEZD,EAAAA,WAAW,aACPC,EAAAA,QAAQ,qBAAsBrX,EAAAA,OAAQ+mD,QAAS,SASvD1kC,cAAenL,EAAAA,QAAQ,iBACnBtE,EAAAA,MAAM,UAAW5S,EAAAA,OAAQ+mD,QAAS,KAClC3vC,EAAAA,WAAW,mBACPpX,EAAAA,OAAQ+mD,QAAS,IACjB1vC,EAAAA,QAAQ,qDCxCpB4xD,GAAA,WAAA,QAAAA,MAA8B,MAAjBA,GAAb3lE,GAJCI,EAAAA,WACGC,SAAU,YACVE,MAAQqE,MAAO,iBAEN+gE,MAGbC,GAAA,WACI,QAAJA,GAAuBv1D,GAAAvY,KAAvBuY,YAAuBA,EACvB,MAAAu1D,MAEaC,GAAqDr1D,EAAWo1D,GAAYl1D,EAAAA,aAAao1D,OAWtG9nC,GAAA,SAAAltB,GACI,QAAJktB,GAAgB5kC,EAA8C2sE,GAA1D,GAAJjtE,GACQgY,EADRI,KAAApZ,KACcsB,IADdtB,WAGQsB,GAAWoD,cAAckH,UAAUC,IAAIoiE,KAM/C,MAV4Bj0D,GAA5BksB,EAAAltB,GAOIktB,EAAJpmC,UAAAymD,gBAAI,WACI,MAAOvmD,MAAKuY,YAAY7T,eARnBwhC,EAAbh+B,GARCgE,EAAAA,WACG3D,SAAU,YACV4D,SAAU,4BACVC,QAAS,wPACTC,gBAAiBC,EAAAA,wBAAwBC,OACzCC,cAAeC,EAAAA,kBAAkBC,KACjCgP,QAAS,WAG4B9S,EAAzC,EAAyCsT,EAAAA,UAAU,YAAnDlT,EAAA,qBAA4BE,EAAAA,WAA5BkT,UADa8pB,IAAe6nC,ICP5Bh6D,GAAA,WAAA,QAAAA,MAA2B,MAAdA,GAAb7L,GAfCsB,EAAAA,UACGG,SACIC,EAAAA,aACA0S,EAAAA,WACAmX,EAAAA,gBAEJ/pB,SACIw8B,GACA2nC,IAEJpkE,cACIy8B,GACA2nC,OAGK95D,M7CNbqpD,GAAA,WAAA,QAAAA,MAAgC,MAAnBA,GAAbl1D,GAJCI,EAAAA,WACGC,SAAU,kCACVE,MAAQqE,MAAO,gBAENswD,MAUbC,GAAA,WAKI,QAAJA,GAAgB/7D,GACRtB,KAAK0E,cAAgBpD,EAAWoD,cAkCxC,MA/BI24D,GAAJv9D,UAAAu1B,mBAAI,WACIr1B,KAAKwlC,gCAGT63B,EAAJv9D,UAAA0lC,6BAAI,WACI,GACMC,GAAQzlC,KAAK0lC,gBAAgB1jB,IAAI,SAACpM,GAAS,MAAAA,GAAK2C,YAAY7T,eAElE,IAAqB,IAAjB+gC,EAAMt0B,OAAc,CACpB,GAAMw0B,GAAcF,EAAM,EAGrBE,GAAYC,wBAA2BD,EAAYE,qBAChDF,EAAYG,aAHC,IAGcH,EAAYG,YAAY4tB,WACnD/tB,EAAY/5B,UAAUC,IAAI,gBAC1B7L,KAAK0E,cAAckH,UAAUC,IAAI,wBAGjC85B,EAAYI,iBARC,IAQkBJ,EAAYI,gBAAgB2tB,WAC3D/tB,EAAY/5B,UAAUC,IAAI,iBAC1B7L,KAAK0E,cAAckH,UAAUC,IAAI,8BAGtC,IAlBU,IAkBN45B,EAAMt0B,OAAqB,CAClC,GAAM60B,GAAmBP,EAAM,GACzBQ,EAAoBR,EAAM,EAEhCO,GAAiBp6B,UAAUC,IAAI,gBAC/Bo6B,EAAkBr6B,UAAUC,IAAI,mBArC/BwxD,EAAbn1D,GAPCI,EAAAA,WACGC,SAAU,4CACV2lE,SACIxoC,gBAAiB,GAAInL,GAAAA,gBAAgB2L,KAEzCz9B,MAAQqE,MAAO,oBAOnB9D,EAAA,qBAA4BE,EAAAA,cALfm0D,MA2Cb8Q,GAAA,WACI,QAAJA,GAAuB51D,GAAAvY,KAAvBuY,YAAuBA,EACvB,MAAA41D,MAEaC,GAIL11D,EAAWC,EAAcw1D,KAoBjC7c,GAAA,SAAAt4C,GACI,QAAJs4C,GAAgBhwD,EAAgC2X,GAA5C,GAAJjY,GACQgY,EADRI,KAAApZ,KACcsB,IADdtB,WAAgDgB,GAAhDiY,cAAgDA,EAGxCjY,EAAKiY,cAAcc,QAAQ/Y,EAAKuX,YAAY7T,eAAe,KAcnE,MAlB8BsV,GAA9Bs3C,EAAAt4C,GAOIs4C,EAAJxxD,UAAAqF,YAAI,WACInF,KAAKiZ,cAAciB,eAAela,KAAKuY,YAAY7T,gBAGvD4sD,EAAJxxD,UAAAqa,MAAI,WACIna,KAAKumD,kBAAkBpsC,SAG3Bm3C,EAAJxxD,UAAAymD,gBAAI,WACI,MAAOvmD,MAAKuY,YAAY7T,eAhBnB4sD,EAAbppD,GAjBCgE,EAAAA,WACG3D,SAAU,gKAOV4D,SAAJ,sGACIC,QAAS,4hGACTC,gBAAiBC,EAAAA,wBAAwBC,OACzCC,cAAeC,EAAAA,kBAAkBC,KACjCgP,QAAS,WAAY,SACrBjT,MACI0iB,aAAc,sBAItBniB,EAAA,qBAA4BE,EAAAA,WAAmCiT,EAAAA,gBADlDm1C,IAAiB8c,IAkC9BjR,GAAA,SAAAnkD,GACI,QAAJmkD,GAAgBp4B,EAA4BzjC,GAC5C,MAAQ0X,GAARI,KAAApZ,KAAcsB,EAAYyjC,IAA1B/kC,KASA,MAX8Bga,GAA9BmjD,EAAAnkD,GAKImkD,EAAJr9D,UAAAuuE,oBAAI,SAAoB7oE,GACZxF,KAAKqG,WACLb,EAAM8Y,iBACN9Y,EAAMk3C,6BARLygB,EAAbj1D,GAbCgE,EAAAA,WACG3D,SAAU,mFACV4D,SAAJ,sGACIC,QAAS,4hGACTC,gBAAiBC,EAAAA,wBAAwBC,OACzCC,cAAeC,EAAAA,kBAAkBC,KACjCgP,QAAS,WAAY,SACrBjT,MACIge,kBAAmB,oBACnB0lB,kBAAmB,mBACnB74B,UAAW,iCAInBtK,EAAA,qBAA8BmT,EAAAA,aAA0BjT,EAAAA,cAD3Ci0D,IAAiB7L,IA0B9B4L,GAAA,SAAAlkD,GACI,QAAJkkD,GAAgBn4B,EAA4BzjC,GAC5C,MAAQ0X,GAARI,KAAApZ,KAAcsB,EAAYyjC,IAA1B/kC,KASA,MAXkCga,GAAlCkjD,EAAAlkD,GAKIkkD,EAAJp9D,UAAAuuE,oBAAI,SAAoB7oE,GACZxF,KAAKqG,WACLb,EAAM8Y,iBACN9Y,EAAMk3C,6BARLwgB,EAAbh1D,GAZCgE,EAAAA,WACG3D,SAAU,yBACV4D,SAAJ,sGACIC,QAAS;oiGACTC,gBAAiBC,EAAAA,wBAAwBC,OACzCC,cAAeC,EAAAA,kBAAkBC,KACjCgP,QAAS,WAAY,SACrBjT,MACIge,kBAAmB,oBACnB0lB,kBAAmB,sBAI3BnjC,EAAA,qBAA8BmT,EAAAA,aAA0BjT,EAAAA,cAD3Cg0D,IAAqB5L,IC9HlC/W,GAAA,WAAA,QAAAA,MAA6B,MAAhBA,GAAbryC,GArBCsB,EAAAA,UACGG,SACIC,EAAAA,aACA0S,EAAAA,WACAmX,EAAAA,gBAEJ/pB,SACI4nD,GACA6L,GACAD,GACAE,GACAC,IAEJ5zD,cACI6nD,GACA6L,GACAD,GACAE,GACAC,OAGK9iB,MCRb+iB,GAAA,WAsBI,QAAJA,GAAwB/kD,EAAiCU,GAAjCjZ,KAAxBuY,YAAwBA,EAAiCvY,KAAzDiZ,cAAyDA,EAVrDjZ,KAAJu9D,UAAe,EAGXv9D,KAAJohB,UAAe,EAGXphB,KAAJsqD,eAAqB,GAAI3wC,GAAAA,aAEb3Z,KAAZw9D,UAAuC,EAG/Bx9D,KAAKiZ,cAAcc,QAAQ/Z,KAAKuY,YAAY7T,eAAe,GAkCnE,MAxDI/E,QAAJC,eAAQ09D,EAARx9D,UAAA,YAAAC,IAAI,WACI,MAAOC,MAAKu9D,SAAW,KAAOv9D,KAAKw9D,WAK3Ct9D,IAAI,SAAaC,GACTH,KAAKw9D,UAAYr9D,mCAkBrBm9D,EAAJx9D,UAAAqF,YAAI,WACInF,KAAKiZ,cAAciB,eAAela,KAAKuY,YAAY7T,gBAGvD44D,EAAJx9D,UAAAqa,MAAI,WACIna,KAAKy9D,YAAYtjD,SAGrBmjD,EAAJx9D,UAAA49D,QAAI,SAAQn6D,GACCvD,KAAKu9D,WACNh6D,EAAOkX,kBAEPza,KAAKsqD,eAAetjD,MAAMhH,KAAKohB,YAIvCzhB,OAAJC,eAAgB09D,EAAhBx9D,UAAA,eAAAC,IAAI,WACI,MAAOC,MAAKuY,YAAY7T,+CAG5B44D,EAAJx9D,UAAAwgB,UAAI,SAAU/c,GACN,OAAQA,EAAOyC,SACX,IAAK+yB,GAAAA,MACI/4B,KAAKu9D,WACNh6D,EAAO+a,iBACPte,KAAKsqD,eAAetjD,MAAMhH,KAAKohB,aA5C/ClZ,GAFCG,EAAAA,YAAY,iBACZD,EAAAA,iEAGLk1D,EAAAx9D,UAAA,WAAA,MAGIoI,GADCE,EAAAA,iCACLk1D,EAAAx9D,UAAA,eAAA,IAGIoI,GADCE,EAAAA,iCACLk1D,EAAAx9D,UAAA,eAAA,IAGIoI,GADCC,EAAAA,kCACLm1D,EAAAx9D,UAAA,qBAAA,IAlBaw9D,EAAbp1D,GAfCgE,EAAAA,WACG3D,SAAU,UACV4D,SAAJ,gEACIC,QAAS,gWACTC,gBAAiBC,EAAAA,wBAAwBC,OACzCC,cAAeC,EAAAA,kBAAkBC,KACjCgP,QAAS,SACTjT,MACIqE,MAAO,UACP6wD,2BAA4B,WAC5BC,2BAA4B,WAC5Bl1D,YAAa,oBACb4K,UAAW,qBAyBnBtK,EAAA,qBAAqCE,EAAAA,WAAmCiT,EAAAA,gBAtB3DmhD,MCRbO,GAAA,WAAA,QAAAA,MAA2B,MAAdA,GAAb31D,GATCsB,EAAAA,UACGG,SACIC,EAAAA,aACA0S,EAAAA,WACAmX,EAAAA,gBAEJ/pB,SAAU4zD,IACV7zD,cAAe6zD,OAENO,MCLAC,GACT,GAAI1uD,GAAAA,eAAsC,4BCiB1CiJ,GAAe,EAON0lD,IACT1iD,QAASC,EAAAA,kBACTC,YAAaC,EAAAA,WAAW,WAAM,MAAAwiD,MAC9BviD,OAAO,IAOX,SAAYwiD,GAERA,EAAJA,EAAA,KAAA,GAAA,OAEIA,EAAJA,EAAA,QAAA,GAAA,UAEIA,EAAJA,EAAA,UAAA,GAAA,YAEIA,EAAJA,EAAA,cAAA,GAAA,iBARYA,EAAAA,uBAAAA,EAAAA,yBAYZ,IAAAC,IAAA,WAAA,QAAAA,MAKA,MAAAA,MAIAC,GAAA,WACI,QAAJA,GAAuB5lD,GAAAvY,KAAvBuY,YAAuBA,EAEvB,MAAA4lD,MAEaC,GAKL3lD,EAAcC,EAAWC,EAAcwlD,MA6B/CH,GAAA,SAAAhlD,GAqEI,QAAJglD,GAAgB18D,EACQ4X,EACAD,EACeE,EAEfklD,GALpB,GAAJr9D,GAMQgY,EANRI,KAAApZ,KAMcsB,IANdtB,WACwBgB,GAAxBkY,mBAAwBA,EACAlY,EAAxBiY,cAAwBA,EAGAjY,EAAxBq9D,aAAwBA,EAnECr9D,EAAzBsY,UAA6C,GAKftY,EAA9BuY,eAA8D,KAElDvY,EAAZwY,UAAgC,kBAAiBnB,GAGpCrX,EAAbmN,GAA0BnN,EAAKwY,UAoBlBxY,EAAbqY,cAAiD,QAGpCrY,EAAbyY,KAAmC,KAGZzY,EAAvBsB,OACQ,GAAIqX,GAAAA,aAGW3Y,EAAvBs9D,oBAAoE,GAAI3kD,GAAAA,aAYpE3Y,EAAJyzB,WAA4B,aAGhBzzB,EAAZu9D,uBAA6C,GAEjCv9D,EAAZw9D,mBAAuDP,EAAAA,qBAAqBQ,KAEhEz9D,EAAZ09D,8BAAkE,aAuCtD19D,EAAZ0Y,UAAgC,EAkBpB1Y,EAAZmT,WAAiC,EA4BrBnT,EAAZ29D,gBAAsC,EA1E9B39D,EAAKmY,SAAWrU,SAASqU,IAAa,IA0M9C,MAvRgCa,GAAhCgkD,EAAAhlD,GAoBIrZ,OAAJC,eAAQo+D,EAARl+D,UAAA,WAAAC,IAAI,WACI,OAAUC,KAAKmO,IAAMnO,KAAKwZ,WAAlC,0CAKI7Z,OAAJC,eAAQo+D,EAARl+D,UAAA,YAAAC,IAAI,WACI,MAAOC,MAAK+oB,WAGpB7oB,IAAI,SAAaC,GACTH,KAAK+oB,UAAYuf,EAAUnoC,oCAiD/B69D,EAAJl+D,UAAA41B,gBAAI,WAAA,GAAJ10B,GAAAhB,IACQA,MAAKiZ,cACAc,QAAQ/Z,KAAKqa,cAAc3V,eAC3BrC,UAAU,SAACu8D,GAAgB,MAAA59D,GAAK69D,oBAAoBD,MAG7DZ,EAAJl+D,UAAAqF,YAAI,WACInF,KAAKiZ,cAAciB,eAAela,KAAKqa,cAAc3V,gBAOzD/E,OAAJC,eAAQo+D,EAARl+D,UAAA,WAAAC,IAAI,WACI,MAAOC,MAAK0Z,UAGpBxZ,IAAI,SAAYC,GACJA,GAASH,KAAKua,UACdva,KAAK0Z,SAAWvZ,EAChBH,KAAKkZ,mBAAmB/U,iDAWhCxE,OAAJC,eAAQo+D,EAARl+D,UAAA,YAAAC,IAAI,WACI,MAAOC,MAAKmU,WAGpBjU,IAAI,SAAaC,GACLA,GAASH,KAAKqG,WACdrG,KAAKmU,UAAYhU,EACjBH,KAAKkZ,mBAAmB/U,iDAahCxE,OAAJC,eAAQo+D,EAARl+D,UAAA,iBAAAC,IAAI,WACI,MAAOC,MAAK2+D,gBAGpBz+D,IAAI,SAAkBC,GACd,GAAMm1B,GAAUn1B,GAASH,KAAK2+D,cAC9B3+D,MAAK2+D,eAAiBx+D,EAElBm1B,IACIt1B,KAAK2+D,eACL3+D,KAAK8+D,sBAAsBb,EAAAA,qBAAqBc,eAEhD/+D,KAAK8+D,sBACD9+D,KAAKua,QAAU0jD,EAAAA,qBAAqBe,QAAUf,EAAAA,qBAAqBgB,WAE3Ej/D,KAAKs+D,oBAAoBt3D,KAAKhH,KAAK2+D,kDAO3CX,EAAJl+D,UAAA4a,mBAAI,WAII1a,KAAKkZ,mBAAmB/U,gBAI5B65D,EAAJl+D,UAAAgb,WAAI,SAAW3a,GACPH,KAAKua,UAAYpa,GAIrB69D,EAAJl+D,UAAAib,iBAAI,SAAiBC,GACbhb,KAAK0+D,8BAAgC1jD,GAIzCgjD,EAAJl+D,UAAAmb,kBAAI,SAAkBD,GACdhb,KAAKy0B,WAAazZ,GAItBgjD,EAAJl+D,UAAAob,iBAAI,SAAiBC,GACbnb,KAAKqG,SAAW8U,GAGpB6iD,EAAJl+D,UAAAwa,gBAAI,WACI,MAAOta,MAAKua,QAAU,OAAUva,KAAKk/D,cAAgB,QAAU,SAG3DlB,EAAZl+D,UAAAg/D,sBAAI,SAA8BK,GAC1B,GAAMC,GAAWp/D,KAAKw+D,mBAChB/5D,EAAuBzE,KAAKuY,YAAY7T,aAE1C06D,KAAaD,IAGbn/D,KAAKu+D,uBAAuBptD,OAAS,GACrC1M,EAAQmH,UAAUysB,OAAOr4B,KAAKu+D,wBAGlCv+D,KAAKw+D,mBAAqBW,EAEtBn/D,KAAKu+D,uBAAuBptD,OAAS,GACrC1M,EAAQmH,UAAUC,IAAI7L,KAAKu+D,0BAI3BP,EAAZl+D,UAAA+a,iBAAI,WACI,GAAMrV,GAAQ,GAAI04D,GAClB14D,GAAM4V,OAASpb,KACfwF,EAAM+U,QAAUva,KAAKua,QAErBva,KAAK0+D,8BAA8B1+D,KAAKua,SACxCva,KAAKsC,OAAO0E,KAAKxB,IAIbw4D,EAAZl+D,UAAA++D,oBAAI,SAA4BD,GACpBA,GACA5+D,KAAKy0B,cAKbupC,EAAJl+D,UAAA+1B,OAAI,WACI71B,KAAKua,SAAWva,KAAKua,SAUzByjD,EAAJl+D,UAAA6a,cAAI,SAAcnV,GAAd,GAAJxE,GAAAhB,IAQQwF,GAAMiV,kBAGDza,KAAKqG,UAAkC,SAAtBrG,KAAKq+D,aAkBfr+D,KAAKqG,UAAkC,SAAtBrG,KAAKq+D,eAG9Br+D,KAAKqa,cAAc3V,cAAc6V,QAAUva,KAAKua,QAChDva,KAAKqa,cAAc3V,cAAcw6D,cAAgBl/D,KAAKk/D,gBApBlDl/D,KAAKk/D,eAAuC,UAAtBl/D,KAAKq+D,cAE3Bx/C,QAAQC,UAAUC,KAAK,WACnB/d,EAAK29D,gBAAiB,EACtB39D,EAAKs9D,oBAAoBt3D,KAAKhG,EAAK29D,kBAI3C3+D,KAAK61B,SACL71B,KAAK8+D,sBACD9+D,KAAK0Z,SAAWukD,EAAAA,qBAAqBe,QAAUf,EAAAA,qBAAqBgB,WAKxEj/D,KAAK6a,qBAUbmjD,EAAJl+D,UAAAqa,MAAI,WACIna,KAAKiZ,cAAcmB,SAASpa,KAAKqa,cAAc3V,cAAe,aAGlEs5D,EAAJl+D,UAAA0a,oBAAI,SAAoBhV,GAIhBA,EAAMiV,mBA9QWvS,GAApBE,EAAAA,MAAM,uCAAX41D,EAAAl+D,UAAA,gBAAA,IAK8BoI,GAAzBE,EAAAA,MAAM,4CAAX41D,EAAAl+D,UAAA,qBAAA,IAKaoI,GAARE,EAAAA,iCAAL41D,EAAAl+D,UAAA,SAAA,IASIoI,GADCE,EAAAA,mEAGL41D,EAAAl+D,UAAA,WAAA,MASaoI,GAARE,EAAAA,iCAAL41D,EAAAl+D,UAAA,oBAAA,IAGaoI,GAARE,EAAAA,iCAAL41D,EAAAl+D,UAAA,WAAA,IAGcoI,GAATC,EAAAA,SAALa,EAAA,cAA+B2Q,EAAAA,eAC/BqkD,EAAAl+D,UAAA,aAAA,IAGcoI,GAATC,EAAAA,SAALa,EAAA,cAA4C2Q,EAAAA,eAA5CqkD,EAAAl+D,UAAA,0BAAA,IAGaoI,GAARE,EAAAA,iCAAL41D,EAAAl+D,UAAA,YAAA,IAGwBoI,GAAnB8D,EAAAA,UAAU,SAAfhD,EAAA,cAAuCE,EAAAA,aAAvC80D,EAAAl+D,UAAA,oBAAA,IAyCIoI,GADCE,EAAAA,mEAGL41D,EAAAl+D,UAAA,UAAA,MAgBIoI,GADCE,EAAAA,iEAGL41D,EAAAl+D,UAAA,WAAA,MAkBIoI,GADCE,EAAAA,mEAGL41D,EAAAl+D,UAAA,gBAAA,MAtIak+D,EAAb91D,GAnBCgE,EAAAA,WACG3D,SAAU,cACV4D,SAAJ,26BACIC,QAAS,w6CACT5D,SAAU,aACVC,MACIqE,MAAO,cACP6O,OAAQ,KACRzO,YAAa,KACbmyD,2BAA4B,gBAC5B51B,qBAAsB,UACtB7tB,sBAAuB,WACvB0jD,mCAAoC,6BAExCx1D,WAAYi0D,IACZriD,QAAS,QAAS,YAClBlP,cAAeC,EAAAA,kBAAkBC,KACjCL,gBAAiBC,EAAAA,wBAAwBC,SA0E5B3D,EAAjB,EAAiBsT,EAAAA,UAAU,aACVtT,EAAjB,EAAiBG,EAAAA,YAAYH,EAA7B,EAA6BC,EAAAA,OAAOi1D,KAJpC90D,EAAA,qBAA4BE,EAAAA,WACgBsE,EAAAA,kBACL2O,EAAAA,aAAvCC,OAAAzc,UAvEaq+D,IAAmBI,ICnGnBmB,IACTlkD,QAASgY,EAAAA,cACT9X,YAAaC,EAAAA,WAAW,WAAM,MAAAgkD,MAC9B/jD,OAAO,GAcX+jD,GAAA,SAAAxmD,GAAA,QAAAwmD,oDACA,MADiDxlD,GAAjDwlD,EAAAxmD,GAAawmD,EAAbt3D,GANCI,EAAAA,WACGC,SAAU,2HAEVuB,WAAYy1D,IACZ92D,MAAQg3D,kBAAmB,2BAElBD,IAAoCE,EAAAA,2BChBjDC,GAAA,WAAA,QAAAA,MACA,MADaA,GAAbz3D,GALCsB,EAAAA,UACGG,SAAUC,EAAAA,cACVF,SAAUs0D,GAAYwB,IACtB/1D,cAAeu0D,GAAYwB,OAElBG,MCLbC,GAAA,WAAA,QAAAA,MAAwB,MAAXA,GAAb13D,GAJCgE,EAAAA,WACG3D,SAAU,aACV4D,SAAU,0EAEDyzD,MCFb14C,GAAA,WAAA,QAAAA,MA2CA,MAAAA,MC5CA24C,GAAA,WAAA,QAAAA,MAuBA,MAAAA,MCxBIxnD,GAAe,EASnBynD,GAAA,WAPA,QAAAA,KAQa9/D,KAAbmO,GAA0B,WAAWkK,KACrC,MADanQ,IAARE,EAAAA,iCAAL03D,EAAAhgE,UAAA,SAAA,IADaggE,EAAb53D,GAPCI,EAAAA,WACGC,SAAU,UACVE,MACIqE,MAAO,UACPI,YAAa,SAGR4yD,MCNbC,GAAA,WAAA,QAAAA,MACA,MADaA,GAAb73D,GAHCI,EAAAA,WACGC,SAAU,gBAEDw3D,MCQbC,GAAA,WAXA,QAAAA,KAaahgE,KAAbigE,OAA0C,GAAItmD,GAAAA,aAEjC3Z,KAAbkgE,SAA4C,GAAIvmD,GAAAA,aAWhD,MATIqmD,GAAJlgE,UAAAqgE,SAAI,SAAS58D,GACLvD,KAAKigE,OAAOj5D,OACZzD,EAAO+a,kBAGX0hD,EAAJlgE,UAAAsgE,WAAI,SAAW78D,GACPvD,KAAKkgE,SAASl5D,OACdzD,EAAO+a,kBAXXpW,GADCC,EAAAA,SACLa,EAAA,cAAqB2Q,EAAAA,eAArBqmD,EAAAlgE,UAAA,aAAA,IAEIoI,GADCC,EAAAA,SACLa,EAAA,cAAuB2Q,EAAAA,eAAvBqmD,EAAAlgE,UAAA,eAAA,IAJakgE,EAAb93D,GAXCgE,EAAAA,WACG3D,SAAU,aACV4D,SAAU,8TASD6zD,MCRbK,GAAA,WAAA,QAAAA,MACA,MADaA,GAAbn4D,GAHCI,EAAAA,WACGC,SAAU,gBAED83D,MCwBThoD,GAAe,EAEnBioD,GAAA,WACI,QAAJA,GAAuB/nD,GAAAvY,KAAvBuY,YAAuBA,EACvB,MAAA+nD,MAEaC,GAA+D7nD,EAAW4nD,IAuCvF74C,GAAA,SAAAzO,GAiBI,QAAJyO,GAAuBlP,EAAiCW,GAApD,GAAJlY,GACQgY,EADRI,KAAApZ,KACcuY,IADdvY,WAAuBgB,GAAvBuX,YAAuBA,EAAiCvX,EAAxDkY,mBAAwDA,EAJpDlY,EAAJw/D,SAAe,uBAAuBnoD,KAElCrX,EAAJy/D,SAAuB,IAlBvB,MAGiCzmD,GAAjCyN,EAAAzO,GAqBIyO,EAAJ3nB,UAAAu1B,mBAAI,WAAA,GAAJr0B,GAAAhB,IACQA,MAAK0gE,wBAED1gE,KAAK2gE,SAAS93C,cACd7oB,KAAKuY,YAAY7T,cAAckH,UAC1BC,IAAI,sBAAsB7L,KAAK2gE,SAAS93C,aAEzC7oB,KAAK4gE,gBAAkB5gE,KAAK6gE,aAC5B7gE,KAAK8gE,SAASb,OAAO59D,UAAUrC,KAAKmgE,SAAS12C,KAAKzpB,OAClDA,KAAK8gE,SAASZ,SAAS79D,UAAUrC,KAAKogE,WAAW32C,KAAKzpB,SAK9DA,KAAK2gE,SAASp/C,aAAarf,KAAKuzB,EAAAA,aAC3BpzB,UAAU,WACPrB,EAAKkY,mBAAmB/U,iBAG5BnE,KAAK4gE,gBACL5gE,KAAK4gE,eAAer/C,aAAarf,KAAKuzB,EAAAA,aACjCpzB,UAAU,WACPrB,EAAKkY,mBAAmB/U,gBAKpC,IAAM48D,GAAe/gE,KAAK2gE,SAAS1hD,WAAajf,KAAK2gE,SAAS1hD,UAAU8hD,cAAgB7kC,EAAAA,KAExFxtB,GAAAA,MAAMqyD,GACD1+D,UAAU,WAAM,MAAArB,GAAKkY,mBAAmB/U,kBAGjDsjB,EAAJ3nB,UAAAu/B,sBAAI,WACIr/B,KAAK0gE,yBAGTj5C,EAAJ3nB,UAAA41B,gBAAI,WAEI11B,KAAKkZ,mBAAmBlO,iBAG5Byc,EAAJ3nB,UAAAkhE,WAAI,SAAWz9D,GACPA,EAAOkX,kBAEHza,KAAK2gE,UAAY3gE,KAAK2gE,SAAS1hD,WAC/Bjf,KAAK2gE,SAAS1hD,UAAUkwB,SAIhC1nB,EAAJ3nB,UAAA4qB,iBAAI,SAAiBnnB,GACTvD,KAAK2gE,SAASj2C,kBACd1qB,KAAK2gE,SAASj2C,iBAAiBnnB,IAIvCkkB,EAAJ3nB,UAAAwgB,UAAI,SAAU9a,GAEFA,EAAMQ,UAAYC,EAAAA,QAAUjG,KAAK2gE,SAAS/3C,SAAW5oB,KAAKihE,aACtDjhE,KAAK2gE,UAAY3gE,KAAK2gE,SAAS1hD,WAC/Bjf,KAAK2gE,SAAS1hD,UAAUkwB,QAG5B3pC,EAAM8Y,mBAIdmJ,EAAJ3nB,UAAAohE,eAAI,SAAeC,GACPA,IAAcnhE,KAAKygE,UACnBzgE,KAAKygE,QAAWU,EAChBnhE,KAAKkZ,mBAAmB/U,iBAIhCsjB,EAAJ3nB,UAAAqgE,SAAI,WACQngE,KAAK4gE,gBACL5gE,KAAK4gE,eAAeX,OAAOjgE,KAAK4gE,eAAeQ,OAIvD35C,EAAJ3nB,UAAAsgE,WAAI,WACQpgE,KAAK4gE,gBACL5gE,KAAK4gE,eAAeV,SAASlgE,KAAK4gE,eAAeQ,OAKzD35C,EAAJ3nB,UAAAuhE,eAAI,SAAezpB,GACX,GAAM34B,GAAYjf,KAAK2gE,SAAW3gE,KAAK2gE,SAAS1hD,UAAY,IAE5D,OAAOA,IAAaA,EAAU24B,IAIxBnwB,EAAd3nB,UAAA4gE,sBAAI,WACI,IAAK1gE,KAAK2gE,SACN,KAAMW,MAId3hE,OAAJC,eAAQ6nB,EAAR3nB,UAAA,WAAAC,IAAI,WACI,MAAOC,MAAKuhE,OAASvhE,KAAKuhE,MAAMpwD,OAAS,mCAG7CxR,OAAJC,eAAQ6nB,EAAR3nB,UAAA,aAAAC,IAAI,WACI,MAAOC,MAAKwhE,SAAWxhE,KAAKwhE,QAAQrwD,OAAS,mCAGjDxR,OAAJC,eAAQ6nB,EAAR3nB,UAAA,aAAAC,IAAI,WACI,MAAOC,MAAKyhE,SAAWzhE,KAAKyhE,QAAQtwD,OAAS,mCAGjDxR,OAAJC,eAAQ6nB,EAAR3nB,UAAA,cAAAC,IAAI,WACI,MAAOC,MAAK0hE,UAAY1hE,KAAK0hE,SAASvwD,OAAS,mCAGnDxR,OAAJC,eAAQ6nB,EAAR3nB,UAAA,cAAAC,IAAI,WACI,QAASC,KAAK8gE,0CAGlBnhE,OAAJC,eAAQ6nB,EAAR3nB,UAAA,kBAAAC,IAAI,WACI,SAAOC,KAAKihE,YACRjhE,KAAK2gE,UACL3gE,KAAK2gE,SAAS1hD,aACRjf,KAAK2gE,SAAS1hD,UAAU9e,QAAUH,KAAK2gE,SAASt6D,2CAK9D1G,OAAJC,eAAQ6nB,EAAR3nB,UAAA,YAAAC,IAAI,WACI,MAAOC,MAAK2gE,UAAY3gE,KAAK2gE,SAASt6D,0CAG1C1G,OAAJC,eAAQ6nB,EAAR3nB,UAAA,kBAAAC,IAAI,WACI,MAAOC,MAAK4gE,iBACP5gE,KAAKqG,WAEFrG,KAAK4gE,eAAeh4C,SACpB5oB,KAAKygE,0CA5JiBv4D,GAAjCie,EAAAA,aAAae,IAAlBle,EAAA,cAAgDke,KAAhDO,EAAA3nB,UAAA,eAAA,IAC4CoI,GAAvCie,EAAAA,aAAa05C,IAAlB72D,EAAA,cAA4D62D,KAA5Dp4C,EAAA3nB,UAAA,qBAAA,IAC6BoI,GAAxBie,EAAAA,aAAa65C,IAAlBh3D,EAAA,cAAuCg3D,KAAvCv4C,EAAA3nB,UAAA,eAAA,IAE6BoI,GAAxBqyB,EAAAA,gBAAgBulC,IAArB92D,EAAA,cAAoCkd,EAAAA,YAApCuB,EAAA3nB,UAAA,YAAA,IAC+BoI,GAA1BqyB,EAAAA,gBAAgB8lC,IAArBr3D,EAAA,cAAwCkd,EAAAA,YAAxCuB,EAAA3nB,UAAA,cAAA,IAC+BoI,GAA1BqyB,EAAAA,gBAAgBwlC,IAArB/2D,EAAA,cAAwCkd,EAAAA,YAAxCuB,EAAA3nB,UAAA,cAAA,IACgCoI,GAA3BqyB,EAAAA,gBAAgBqlC,IAArB52D,EAAA,cAA0Ckd,EAAAA,YAA1CuB,EAAA3nB,UAAA,eAAA,IAVa2nB,EAAbvf,GArCCgE,EAAAA,WACG3D,SAAU,gBACVC,SAAU,cACV2D,SAAJ,iqBAIIC,QAAS,+rEACb3D,MACQqE,MAAR,gBACQ60D,gCAAR,sBACA/lD,sBAAA,oBACQgmD,mCAAR,YACQC,mCAAR,YACQC,oCAAR,iBACQC,oCAAR,iBACQtb,qBAAR,mBACQub,uBAAR,8BACQC,qBAAR,4BACQC,sBAAR,6BACQC,mBAAoB,0BACpBC,mBAAR,0BACQC,qBAAsB,4BACtBC,qBAAR,4BACQ55D,YAAR,oBACQ65D,eAAR,uBACQC,eAAR,yBAEA9mD,QAAA,SACAlP,cAAAC,EAAAA,kBAAAC,KACAL,gBAAAC,EAAAA,wBAAAC,SAEAvD,EAAA,qBAAAE,EAAAA,WAAAsE,EAAAA,qBACAia,IAEA84C,IAEAkC,GAAA,WAkKA,QAAAA,MAIA,MAtKAA,GAAAv6D,GAyKAI,EAAAA,WAAAC,SAAA,2CAAAC,SAAA,4BAAAC,MAAAqE,MAAA,oCAJA21D,MC9MA1nC,GAAA,WAAA,QAAAA,MACA,MADaA,GAAb7yB,GArBCsB,EAAAA,UACGC,cACIge,GACAg7C,GACA3C,GACAC,GACAM,GACAT,GACAI,IAEJr2D,SAAUC,EAAAA,aAAcmK,IACxBrK,SACI+d,GACAg7C,GACA3C,GACAC,GACAM,GACAT,GACAI,OAGKjlC,MC/BAxH,GACT,GAAInkB,GAAAA,eAA+B,2BCmB1B6wD,GAAS,SAAC9/D,EACAkqB,EACA7G,EACA49C,GAEnB,GAAIsB,EAEJ,OAAc,QAAVviE,GACAuiE,EAAM72D,EAAI2X,EAAK49C,GAEA,OAARsB,EAAe,KAAOn/C,KAAKC,IAAIk/C,EAAKr4C,KAG/Cq4C,EAAM72D,EAAI1L,EAAOihE,GAEF,OAARsB,EAAe,KAAOn/C,KAAK8G,IAAI9G,KAAKC,IAAIk/C,EAAKr4C,GAAM7G,KAGjD08C,GAAW,SAAC//D,EACAkqB,EACA7G,EACA49C,GAErB,GAAIsB,EAEJ,OAAc,QAAVviE,GACAuiE,EAAM72D,EAAIwe,GAAM+2C,GAED,OAARsB,EAAe,KAAOn/C,KAAK8G,IAAIq4C,EAAKl/C,KAG/Ck/C,EAAM72D,EAAI1L,GAAQihE,GAEH,OAARsB,EAAe,KAAOn/C,KAAKC,IAAID,KAAK8G,IAAIq4C,EAAKl/C,GAAM6G,K1BzBxDs4C,IACF,SACA,WACA,OACA,SACA,QACA,QACA,QACA,QACA,UAGSC,GAAW,GACXC,GAAa,EAEtBxqD,GAAe,EAEnByqD,GAAA,WACI,QAAJA,GAAuB16C,EACAC,EACAC,EACArJ,GAHAjf,KAAvBooB,yBAAuBA,EACApoB,KAAvBqoB,WAAuBA,EACAroB,KAAvBsoB,gBAAuBA,EACAtoB,KAAvBif,UAAuBA,EAEvB,MAAA6jD,MAEaC,GAAkEv6C,EAAgBs6C,IAc/F5N,GAAA,WA0CI,QAAJA,GACgBpa,EACAviC,EACAyqD,EACW5B,EACI6B,EACLz/C,EACA6G,GANVrqB,KAAhB86C,UAAgBA,EACA96C,KAAhBuY,YAAgBA,EACAvY,KAAhBgjE,OAAgBA,EAbZhjE,KAAJ4oB,SAAuB,EAMV5oB,KAAbuhB,aAA2C,GAAItT,GAAAA,QAavCjO,KAAKohE,KAAOphE,KAAKkjE,QAAQ9B,GAAQlpD,WAAWkpD,GAAQyB,GACpD7iE,KAAKijE,QAAUjjE,KAAKkjE,QAAQD,GAAW/qD,WAAW+qD,GAAWL,GAC7D5iE,KAAKwjB,IAAMxjB,KAAKkjE,QAAQ1/C,GAAOtL,WAAWsL,IAAQ2/C,EAAAA,EAClDnjE,KAAKqqB,IAAMrqB,KAAKkjE,QAAQ74C,GAAOnS,WAAWmS,GAAO84C,EAAAA,EAEjDnjE,KAAKojE,MAAQpjE,KAAKuY,YAAY7T,aAE9B,IAAM2+D,GAAOrjE,IAET,kBAAmBA,MAAKojE,OACxBzjE,OAAOC,eAAeD,OAAO2jE,eAAetjE,KAAKojE,OAAQ,iBAErDrjE,IAAhB,WACoB,GAAM2iE,GAAMxqD,WAAWmrD,EAAKE,kBAAkBvjE,KAAKG,OAEnD,OAAOkyB,OAAMqwC,GAAO,KAAOA,KAlE/Cc,EAAatO,EAwETA,EAAJp1D,UAAA2jE,cAAI,SAAcj5C,GACNA,IAAcxqB,KAAK4oB,UACnB5oB,KAAK4oB,QAAU4B,EACfxqB,KAAKuhB,aAAa3b,SAI1BsvD,EAAJp1D,UAAAwgB,UAAI,SAAU9a,GAAV,GAAJxE,GAAAhB,KAEcgG,EAAUR,EAAMQ,QAYhB09D,GAAWC,EAAAA,aAAcC,EAAAA,KAAMC,EAAAA,UAC/BC,GAAeC,EAAAA,OAAQC,EAAAA,UAAWC,EAAAA,IAAKh+D,EAAAA,OAAQ6yB,EAAAA,OAC/CorC,GAAUtrC,EAAAA,WAAYC,EAAAA,aACtBsrC,GAAgBhrC,EAAAA,KAAMC,EAAAA,KAAKs+B,OAAOwM,GAAQxM,OAAOoM,GAAapM,OAAOgM,GAErEU,EAAa,SAACr+D,GAAM,MAAU,MAAVA,EAAElC,KAAyB,YAAVkC,EAAElC,KACvCwgE,EAAgB,SAACt+D,GAAM,MAAU,MAAVA,EAAElC,KAAyB,MAAVkC,EAAElC,IAOhD,OAAsC,IAAlCsgE,EAAY5xD,QAAQvM,IAvBR,SAACD,GAAM,MAAAA,GAAEC,UAAYszB,EAAAA,IAAMvzB,EAAEwzB,SAAWxzB,EAAEu+D,UAwB9C9+D,IAvBI,SAACO,GAAM,MAAAA,GAAEC,UAAYu+D,EAAAA,IAAMx+D,EAAEwzB,SAAWxzB,EAAEu+D,UAwB9C9+D,IAvBI,SAACO,GAAM,MAAAA,GAAEC,UAAYw+D,EAAAA,IAAMz+D,EAAEwzB,SAAWxzB,EAAEu+D,UAwB9C9+D,IAvBI,SAACO,GAAM,MAAAA,GAAEC,UAAYy+D,EAAAA,IAAM1+D,EAAEwzB,SAAWxzB,EAAEu+D,UAwB9C9+D,IAtBG,SAACO,GAAM,MAAAA,GAAEC,SAAW0+D,EAAAA,IAAM3+D,EAAEC,SAAW2+D,EAAAA,KAuB3Cn/D,IATM,SAACO,GAAM,MAAA/E,GAAK85C,UAAU8pB,MAAQ5jE,EAAK85C,UAAU+pB,QACxDT,EAAWr+D,GACXs+D,EAAct+D,IAQPP,MAMTA,EAAMk0B,WA5BO,SAAC3zB,GAAM,MAACA,GAAEC,SAAW8+D,EAAAA,MAAQ/+D,EAAEC,SAAW++D,EAAAA,MACtDh/D,EAAEC,SAAWg/D,EAAAA,aAAej/D,EAAEC,SAAWi/D,EAAAA,aA2Bdz/D,IAAQ,CACpCA,EAAM8Y,gBAGN,IAAM8iD,GAAO57D,EAAMk0B,SAAW15B,KAAKijE,QAAUjjE,KAAKohE,IAE9Cp7D,KAAY2yB,EAAAA,UACZ34B,KAAKigE,OAAOmB,GAGZp7D,IAAY0yB,EAAAA,YACZ14B,KAAKkgE,SAASkB,KAK1BlM,EAAJp1D,UAAAuuB,QAAI,SAAQ7oB,GACJ,GAAIrF,GAAQqF,EAAM+oB,cAAcC,QAAQ,OACxCruB,GAAQH,KAAKujE,kBAAkBpjE,GAE1BH,KAAKkjE,QAAQ/iE,IACdqF,EAAM8Y,kBAId42C,EAAJp1D,UAAAmgE,OAAI,SAAOmB,GACHphE,KAAKuY,YAAY7T,cAAcyV,OAC/B,IAAMuoD,GAAMzC,GAAOjgE,KAAKojE,MAAM8B,cAAellE,KAAKqqB,IAAKrqB,KAAKwjB,IAAK49C,EACjEphE,MAAKojE,MAAMjjE,MAAgB,OAARuiE,EAAe,GAAKA,EAAI33C,WAC3C/qB,KAAKgjE,OAAOmC,OAAOn+D,KAAKhH,KAAKojE,MAAM8B,gBAGvChQ,EAAJp1D,UAAAogE,SAAI,SAASkB,GACLphE,KAAKuY,YAAY7T,cAAcyV,OAC/B,IAAMuoD,GAAMxC,GAASlgE,KAAKojE,MAAM8B,cAAellE,KAAKqqB,IAAKrqB,KAAKwjB,IAAK49C,EACnEphE,MAAKojE,MAAMjjE,MAAgB,OAARuiE,EAAe,GAAKA,EAAI33C,WAC3C/qB,KAAKgjE,OAAOmC,OAAOn+D,KAAKhH,KAAKojE,MAAM8B,gBAG/BhQ,EAAZp1D,UAAAyjE,kBAAI,SAA0BpjE,GACtB,MAAOA,GAAQA,EAAMilE,QAAQ,KAAM,KAAOjlE,GAGtC+0D,EAAZp1D,UAAAojE,QAAI,SAAgB/iE,GACZ,MAAOH,MAAKqlE,QAAQllE,IAAUH,KAAKslE,MAAMnlE,IAGrC+0D,EAAZp1D,UAAAulE,QAAI,SAAgBllE,GACZ,MAAO,eAAeolE,KAAKplE,IAGvB+0D,EAAZp1D,UAAAwlE,MAAI,SAAcnlE,GACV,MAAO,UAAUolE,KAAKplE,SAE9B,OArKI+H,IADCE,EAAAA,iCACL8sD,EAAAp1D,UAAA,cAAA,IAOIoI,GADCE,EAAAA,iCACL8sD,EAAAp1D,UAAA,WAAA,IAGIoI,GADCE,EAAAA,iCACL8sD,EAAAp1D,UAAA,UAAA,IAGIoI,GADCE,EAAAA,iCACL8sD,EAAAp1D,UAAA,UAAA,IApBao1D,EAAbsO,EAAAt7D,GAXCI,EAAAA,WACGC,SAAU,gCACVC,SAAU,mBACVsB,WAAY07D,EAAAA,SAAWnqD,QAASwkD,GAA0BtkD,YAAaioD,IACvE/6D,MACIoe,SAAU,uBACVD,UAAW,sBACXwM,UAAW,kBACX1qB,YAAa,uBAiDZE,EAAT,EAASsT,EAAAA,UAAU,SACVtT,EAAT,EAASsT,EAAAA,UAAU,aACVtT,EAAT,EAASsT,EAAAA,UAAU,QACVtT,EAAT,EAASsT,EAAAA,UAAU,QANnBlT,EAAA,qBAA2B2zC,EAAAA,SACEzzC,EAAAA,WACLs8D,EAAAA,QAAxBppD,OAAAA,OAAAA,OAAAA,UA7Ca84C,MA+LbD,GAAA,SAAAj8C,GAqII,QAAJi8C,GAA0B18C,EACiB0G,EACfoJ,EACAC,EACZF,EACqDM,GALjE,GAAJ1nB,GAMQgY,EANRI,KAAApZ,KAMcooB,EAA0BC,EAAYC,EAAiBrJ,IANrEjf,WAA0BgB,GAA1BuX,YAA0BA,EACiBvX,EAA3Cie,UAA2CA,EA5HvCje,EAAJ4nB,SAAuB,EAMV5nB,EAAbugB,aAA2C,GAAItT,GAAAA,QAM3CjN,EAAJ6nB,YAA0B,WA8FZ7nB,EAAdykE,KAAqB,YAAYptD,KAEnBrX,EAAdmT,WAA0B,EAEZnT,EAAd+nB,WAA0B,EACZ/nB,EAAd0kE,MAAsB,OACR1kE,EAAd2kE,uBACQ,OACA,WACA,iBACA,QACA,OACA,QACFv3D,OAAO,SAACw3D,GAAM,MAAAC,GAAAA,yBAAyB/yB,IAAI8yB,KAazC5kE,EAAK8kE,oBAAsBp9C,GAAsB1nB,EAAKuX,YAAY7T,cAElE1D,EAAK+kE,qBAAuB/kE,EAAKb,MAGjCa,EAAKmN,GAAKnN,EAAKmN,KAnJM6L,EAA7Bi7C,EAAAj8C,GAAAgtD,EAAa/Q,EA6BTt1D,OAAJC,eAAQq1D,EAARn1D,UAAA,YAAAC,IAAI,WACI,MAAIC,MAAKif,WAAyC,OAA5Bjf,KAAKif,UAAU5Y,SAC1BrG,KAAKif,UAAU5Y,SAGnBrG,KAAKmU,WAGpBjU,IAAI,SAAaC,GACTH,KAAKmU,UAAYxT,EAAAA,sBAAsBR,GAInCH,KAAK4oB,UACL5oB,KAAK4oB,SAAU,EACf5oB,KAAKuhB,aAAa3b,yCAS1BjG,OAAJC,eAAQq1D,EAARn1D,UAAA,MAAAC,IAAI,WACI,MAAOC,MAAK2pB,KAGpBzpB,IAAI,SAAOC,GACHH,KAAK2pB,IAAMxpB,GAASH,KAAKylE,sCAc7B9lE,OAAJC,eAAQq1D,EAARn1D,UAAA,YAAAC,IAAI,WACI,MAAOC,MAAK+oB,WAGpB7oB,IAAI,SAAaC,GACTH,KAAK+oB,UAAYpoB,EAAAA,sBAAsBR,oCAM3CR,OAAJC,eAAQq1D,EAARn1D,UAAA,QAAAC,IAAI,WACI,MAAOC,MAAK0lE,OAGpBxlE,IAAI,SAASC,GACLH,KAAK0lE,MAAQvlE,GAAS,OACtBH,KAAKimE,gBAKDJ,EAAAA,yBAAyB/yB,IAAI9yC,KAAK0lE,SAClC1lE,KAAKuY,YAAY7T,cAAc6O,KAAOvT,KAAK0lE,wCAUnD/lE,OAAJC,eAAQq1D,EAARn1D,UAAA,SAAAC,IAAI,WACI,MAAOC,MAAK8lE,oBAAoB3lE,OAGxCD,IAAI,SAAUC,GACFA,IAAUH,KAAKG,QACfH,KAAK8lE,oBAAoB3lE,MAAQA,EACjCH,KAAKuhB,aAAa3b,yCAsC1BqvD,EAAJn1D,UAAAkT,YAAI,WACIhT,KAAKuhB,aAAa3b,QAGtBqvD,EAAJn1D,UAAAqF,YAAI,WACInF,KAAKuhB,aAAa1b,YAGtBovD,EAAJn1D,UAAAgqB,UAAI,WACQ9pB,KAAKif,WAILjf,KAAK+pB,mBAMT/pB,KAAKkmE,0BAITjR,EAAJn1D,UAAAqa,MAAI,WACIna,KAAKuY,YAAY7T,cAAcyV,SAInC86C,EAAJn1D,UAAA2jE,cAAI,SAAcj5C,GACNA,IAAcxqB,KAAK4oB,UACnB5oB,KAAK4oB,QAAU4B,EACfxqB,KAAKuhB,aAAa3b,SAI1BqvD,EAAJn1D,UAAAqmE,SAAI,aAcAxmE,OAAJC,eAAQq1D,EAARn1D,UAAA,SAAAC,IAAI,WACI,OAAQC,KAAKomE,kBAAoBpmE,KAAKuY,YAAY7T,cAAcvE,QAAUH,KAAKqmE,+CAOnFpR,EAAJn1D,UAAA4qB,iBAAI,WACI1qB,KAAKma,SAIC86C,EAAdn1D,UAAAomE,uBAAI,WACI,GAAMv7C,GAAW3qB,KAAKG,KAElBH,MAAK+lE,uBAAyBp7C,IAC9B3qB,KAAK+lE,qBAAuBp7C,EAC5B3qB,KAAKuhB,aAAa3b,SAKhBqvD,EAAdn1D,UAAAmmE,cAAI,WACI,GAAItD,GAAuBpwD,QAAQvS,KAAK0lE,QAAU,EAC9C,KAAMY,GAA+BtmE,KAAK0lE,QAKxCzQ,EAAdn1D,UAAAsmE,cAAI,WACI,MAAOpmE,MAAK2lE,sBAAsBpzD,QAAQvS,KAAK0lE,QAAU,GAInDzQ,EAAdn1D,UAAAumE,YAAI,WAEI,GAAMz7C,GAAY5qB,KAAKuY,YAAY7T,cAAmCkmB,QAEtE,OAAOA,IAAYA,EAASC,eAEpC,OA5Oa3iB,IAARE,EAAAA,QAALY,EAAA,cAAgCud,KAAhC0uC,EAAAn1D,UAAA,wBAAA,IAyBIoI,GADCE,EAAAA,mEAOL6sD,EAAAn1D,UAAA,WAAA,MAkBIoI,GADCE,EAAAA,iEAGL6sD,EAAAn1D,UAAA,KAAA,MAUaoI,GAARE,EAAAA,iCAAL6sD,EAAAn1D,UAAA,kBAAA,IAOIoI,GADCE,EAAAA,mEAGL6sD,EAAAn1D,UAAA,WAAA,MASIoI,GADCE,EAAAA,iEAGL6sD,EAAAn1D,UAAA,OAAA,MAoBIoI,GADCE,EAAAA,iEAGL6sD,EAAAn1D,UAAA,QAAA,MA3Gam1D,EAAb+Q,EAAA99D,GAjBCI,EAAAA,WACGC,SAAU,iBACVC,SAAU,UACVC,MACIqE,MAAO,WAGPI,YAAa,KACb+d,qBAAsB,cACtBE,aAAc,WACdC,aAAc,WACdvE,SAAU,uBACVD,UAAW,sBACXuM,UAAW,cAEfrpB,YAAcuR,QAAS6L,GAAoB3L,YAAayqD,MAwI3Cp9D,EAAjB,EAAiBG,EAAAA,YAAYH,EAA7B,EAA6Bwe,EAAAA,QACZxe,EAAjB,EAAiBG,EAAAA,YACAH,EAAjB,EAAiBG,EAAAA,YAEAH,EAAjB,EAAiBG,EAAAA,YAAYH,EAA7B,EAA6Bwe,EAAAA,QAAQxe,EAArC,EAAqCC,EAAAA,OAAO0qB,KAL5CvqB,EAAA,qBAAuCE,EAAAA,WACewe,EAAAA,UACdH,EAAAA,OACKC,EAAAA,mBACHjB,GAA1C5mB,UAzIas1D,IAAgB8N,IAuP7BtO,GAAA,WAAA,QAAAA,MACA,MADaA,GAAbvsD,GALCI,EAAAA,WACGC,SAAU,0BACVC,SAAU,mBACVC,MAAQqE,MAAO;+BAEN2nD,MCxfAC,IACTr5C,QAASgY,EAAAA,cACT9X,YAAaC,EAAAA,WAAW,WAAM,MAAAm5C,MAC9Bl5C,OAAO,GAcXk5C,GAAA,WAAA,QAAAA,MAkBA,MAZIA,GAAJ70D,UAAAkT,YAAI,SAAYC,GACJ,OAASA,KACTjT,KAAK40D,mBACD50D,KAAKw0B,WAAax0B,KAAKw0B,cAInCmgC,EAAJ70D,UAAA4sB,SAAI,SAASL,GAA+C,MAAOrsB,MAAK60D,WAAWxoC,IAE/EsoC,EAAJ70D,UAAA+sB,0BAAI,SAA0B7R,GAAwBhb,KAAKw0B,UAAYxZ,GAE3D25C,EAAZ70D,UAAA80D,iBAAI,WAAmC50D,KAAK60D,WAAaznC,EAAAA,WAAW5J,IAAI1e,SAAS9E,KAAKwjB,IAAK,MAf9Etb,GAARE,EAAAA,iCAALusD,EAAA70D,UAAA,UAAA,IAFa60D,EAAbzsD,GALCI,EAAAA,WACGC,SAAU,2DACVuB,WAAY4qD,IACZjsD,MAAOioD,aAAc,uBAEZiE,MAqBAG,IACTz5C,QAASgY,EAAAA,cACT9X,YAAaC,EAAAA,WAAW,WAAM,MAAAu5C,MAC9Bt5C,OAAO,GAgBXs5C,GAAA,WAAA,QAAAA,MAmBA,MAZIA,GAAJj1D,UAAAkT,YAAI,SAAYC,GACJ,OAASA,KACTjT,KAAK40D,mBACD50D,KAAKw0B,WAAax0B,KAAKw0B,cAInCugC,EAAJj1D,UAAA4sB,SAAI,SAASL,GAA+C,MAAOrsB,MAAK60D,WAAWxoC,IAE/E0oC,EAAJj1D,UAAA+sB,0BAAI,SAA0B7R,GAAwBhb,KAAKw0B,UAAYxZ,GAE3D+5C,EAAZj1D,UAAA80D,iBAAI,WAAmC50D,KAAK60D,WAAaznC,EAAAA,WAAW/C,IAAIvlB,SAAS9E,KAAKqqB,IAAK,MAf9EniB,GAARE,EAAAA,iCAAL2sD,EAAAj1D,UAAA,UAAA,IAHai1D,EAAb7sD,GAPCI,EAAAA,WACGC,SAAU,2DACVuB,WAAYgrD,IACZrsD,MACIkoD,aAAc,uBAGToE,MC9CbC,GAAA,WAAA,QAAAA,MACA,MADaA,GAAb9sD,GALCsB,EAAAA,UACGG,SAAUC,EAAAA,aAAc0S,EAAAA,WAAYxI,GAAgBwX,EAAAA,aACpD5hB,SAAUurD,GAASC,GAAeT,GAAaE,GAAcI,IAC7DtrD,cAAewrD,GAASC,GAAeT,GAAaE,GAAcI,OAEzDC,MCTbxJ,GAAA,WADA,QAAAA,KAMaxrD,KAAbiT,QAAsC,GAAIhF,GAAAA,QAGtCjO,KAAJm1D,cAA4B,WAGxBn1D,KAAJo1D,kBAAgC,gBAG5Bp1D,KAAJq1D,eAA6B,iBAGzBr1D,KAAJs1D,eAA6B,aAGzBt1D,KAAJu1D,cAA4B,gBAGxBv1D,KAAJw1D,cAA4B,YAGxBx1D,KAAJy1D,mBAAiC,oBAG7Bz1D,KAAJ01D,mBAAiC,gBAG7B11D,KAAJ21D,uBAAqC,cAGjC31D,KAAJ41D,2BAAyC,wBAzCzC,0GAMapK,EAAbtjD,GADCuK,EAAAA,YAAamhD,WAAY,UACbpI,MCmBbqK,GAAA,WACI,QAAJA,GACe11D,EACA21D,EACAx8C,EACAy8C,EACAC,GAJAh2D,KAAfG,MAAeA,EACAH,KAAf81D,aAAeA,EACA91D,KAAfsZ,UAAeA,EACAtZ,KAAf+1D,QAAeA,EACA/1D,KAAfg2D,WAAeA,EAGf,MAAAH,MAoBAnE,GAAA,WAwCI,QAAJA,GAAwBpwD,EAA6CqB,GAA7C3C,KAAxBsB,WAAwBA,EAA6CtB,KAArE2C,OAAqEA,EAvBxD3C,KAAbi2D,QAAuB,EAGVj2D,KAAbk2D,WAA0B,EAMbl2D,KAAbm2D,gBAA+B,EAGRn2D,KAAvBo2D,oBAAmE,GAAIz8C,GAAAA,aA8DvE,MAhDI+3C,GAAJ5xD,UAAAu2D,YAAI,SAAYC,GACJA,EAAKP,SACL/1D,KAAKo2D,oBAAoBpvD,KAAKsvD,EAAKn2D,QAI3CuxD,EAAJ5xD,UAAAkT,YAAI,SAAYC,GACR,GAAMsjD,GAAgBtjD,EAAQgjD,QAExBtuD,EAAd3H,KAAgBw2D,EAAhB7uD,EAAA6uD,KAAsBP,EAAtBtuD,EAAAsuD,SAEYhjD,EAAQujD,MAAQD,KAChBv2D,KAAKy2D,eAAiBD,GAAQA,EAAKrlD,QAAUqlD,EAAK,GAAGrlD,OAAS8kD,EAAUO,EAAK,GAAGrlD,OAAS,IAGzF8B,EAAQkjD,iBAAmBI,IAAkBv2D,KAAK02D,eAClD12D,KAAK02D,YAAwC,GAAvB12D,KAAKm2D,gBAAuBF,EAA9D,MAGYM,GAAkBv2D,KAAK22D,YACvB32D,KAAK22D,UAAe,IAAMV,EAAtC,MAIIvE,EAAJ5xD,UAAA82D,aAAI,SAAaC,EAAkBC,GAC3B,GAAIC,GAAaF,EAAW72D,KAAKi2D,QAAUa,CAO3C,OAJID,KACAE,GAAc/2D,KAAKy2D,gBAGhBM,IAAe/2D,KAAKk2D,YAI/BxE,EAAJ5xD,UAAAypD,gBAAI,WAAA,GAAJvoD,GAAAhB,IACQA,MAAK2C,OAAOoT,kBAAkB,WAC1B/U,EAAK2B,OAAOszB,SAAShnB,eAAe/M,KAAKqM,EAAAA,KAAK,IAAIlM,UAAU,WACxD,GAAM6zD,GACFl1D,EAAKM,WAAWoD,cAAcozB,cAAc,4BAE5Co+B,IACAA,EAAW/7C,aApFlBjS,GAARE,EAAAA,iCAALspD,EAAA5xD,UAAA,YAAA,IAGaoI,GAARE,EAAAA,gCAALspD,EAAA5xD,UAAA,WAAA,IAGaoI,GAARE,EAAAA,iCAALspD,EAAA5xD,UAAA,iBAAA,IAGaoI,GAARE,EAAAA,iCAALspD,EAAA5xD,UAAA,oBAAA,IAGaoI,GAARE,EAAAA,iCAALspD,EAAA5xD,UAAA,4BAAA,IAGaoI,GAARE,EAAAA,iCAALspD,EAAA5xD,UAAA,cAAA,IAGaoI,GAARE,EAAAA,iCAALspD,EAAA5xD,UAAA,iBAAA,IAMaoI,GAARE,EAAAA,iCAALspD,EAAA5xD,UAAA,sBAAA,IAGcoI,GAATC,EAAAA,SAALa,EAAA,cAA4C2Q,EAAAA,eAA5C+3C,EAAA5xD,UAAA,0BAAA,IA7Ba4xD,EAAbxpD,GAbCgE,EAAAA,WACG3D,SAAU,qBACV4D,SAAJ,0xCACIC,QAAS,kgCACT3D,MACIqE,MAAO,oBACPE,KAAM,OACNgqD,gBAAiB,QAErBxuD,SAAU,iBACVgE,cAAeC,EAAAA,kBAAkBC,KACjCL,gBAAiBC,EAAAA,wBAAwBC,SA0C7CvD,EAAA,qBAAoCE,EAAAA,WAAyCC,EAAAA,UAxChEuoD,MCPbtG,GAAA,WA8FI,QAAJA,GACgBrgD,EACqC4jD,EAC1B3F,EACC/tB,GAGpB,GANQj7B,KAAhB+K,kBAAgBA,EACqC/K,KAArD2uD,YAAqDA,EAC1B3uD,KAA3BgpD,YAA2BA,EACChpD,KAA5Bi7B,IAA4BA,EAxCLj7B,KAAvBsqD,eAAgE,GAAI3wC,GAAAA,aAG7C3Z,KAAvB8qD,cAA2D,GAAInxC,GAAAA,aAGxC3Z,KAAvBi3D,iBAA2D,GAAIt9C,GAAAA,cAqClD3Z,KAAKgpD,YACN,KAAM+D,GAA2B,cAGrC,KAAK/sD,KAAK2uD,YACN,KAAM5B,GAA2B,kBAGrC,IAAMmK,GAAiBl3D,KAAKgpD,YAAYmO,oBAClCC,EAAiBp3D,KAAKgpD,YAAYqO,kBAAkB,UACpDC,EAAet3D,KAAKgpD,YAAYqO,kBAAkB,QAGlDE,EAAWD,EAAat1C,IAAI,SAACw1C,EAAM7zB,GACrC,OAAS6zB,KAArBA,EAA2BC,OAAQL,EAAezzB,KAE1C3jC,MAAKu3D,SAAWA,EAAS31D,MAAMs1D,GAAgBQ,OAAOH,EAAS31D,MAAM,EAAGs1D,IAExEl3D,KAAK23D,YAAc33D,KAAKgpD,YAAYC,QAyK5C,MA3RItpD,QAAJC,eAAQwrD,EAARtrD,UAAA,cAAAC,IAAI,WACI,MAAOC,MAAK23D,aAGpBz3D,IAAI,SAAeC,GACX,GAAMy3D,GAAgB53D,KAAK23D,YACrBE,EACF73D,KAAKgrD,mBAAmBhrD,KAAKgpD,YAAYmE,YAAYhtD,KAAWH,KAAKgpD,YAAYC,OACrFjpD,MAAK23D,YAAc33D,KAAKgpD,YAAY8O,UAAUD,EAAW73D,KAAKypD,QAASzpD,KAAK0pD,SAEvE1pD,KAAK+3D,oBAAoBH,EAAe53D,KAAK23D,cAC9C33D,KAAK6pD,wCAMblqD,OAAJC,eAAQwrD,EAARtrD,UAAA,YAAAC,IAAI,WACI,MAAOC,MAAK8nC,WAGpB5nC,IAAI,SAAaC,GACTH,KAAK8nC,UAAY9nC,KAAKgrD,mBAAmBhrD,KAAKgpD,YAAYmE,YAAYhtD,IACtEH,KAAKg4D,aAAeh4D,KAAKi4D,sBAAsBj4D,KAAK8nC,4CAKxDnoC,OAAJC,eAAQwrD,EAARtrD,UAAA,WAAAC,IAAI,WACI,MAAOC,MAAKk4D,UAGpBh4D,IAAI,SAAYC,GACRH,KAAKk4D,SAAWl4D,KAAKgrD,mBAAmBhrD,KAAKgpD,YAAYmE,YAAYhtD,qCAKzER,OAAJC,eAAQwrD,EAARtrD,UAAA,WAAAC,IAAI,WACI,MAAOC,MAAKm4D,UAGpBj4D,IAAI,SAAYC,GACRH,KAAKm4D,SAAWn4D,KAAKgrD,mBAAmBhrD,KAAKgpD,YAAYmE,YAAYhtD,qCA0EzEirD,EAAJtrD,UAAAu1B,mBAAI,WACIr1B,KAAK6pD,QAITuB,EAAJtrD,UAAAqqD,aAAI,SAAaC,GACT,GAAIpqD,KAAKg4D,eAAiB5N,EAAM,CAC5B,GAAMgO,GAAep4D,KAAKgpD,YAAYqP,QAAQr4D,KAAK8oD,YAC7CwP,EAAgBt4D,KAAKgpD,YAAYuP,SAASv4D,KAAK8oD,YAC/CkP,EAAeh4D,KAAKgpD,YAAYwP,WAAWJ,EAAcE,EAAelO,EAE9EpqD,MAAKsqD,eAAetjD,KAAKgxD,GAG7Bh4D,KAAK8qD,cAAc9jD,QAIvBokD,EAAJtrD,UAAA24D,0BAAI,SAA0BjzD,GAKtB,GAAMoyD,GAAgB53D,KAAK23D,YACrBnzC,EAAQxkB,KAAKwkB,OAGnB,QAAQhf,EAAMQ,SACV,IAAK4yB,GAAAA,WACD54B,KAAK8oD,WAAa9oD,KAAKgpD,YAAY0P,gBAAgB14D,KAAK23D,YAAanzC,EAAQ,GAAK,EAClF,MACJ,KAAKqU,GAAAA,YACD74B,KAAK8oD,WAAa9oD,KAAKgpD,YAAY0P,gBAAgB14D,KAAK23D,YAAanzC,GAAS,EAAI,EAClF,MACJ,KAAKmU,GAAAA,SACD34B,KAAK8oD,WAAa9oD,KAAKgpD,YAAY0P,gBAAgB14D,KAAK23D,aAAc,EACtE,MACJ,KAAKj/B,GAAAA,WACD14B,KAAK8oD,WAAa9oD,KAAKgpD,YAAY0P,gBAAgB14D,KAAK23D,YAAa,EACrE,MACJ,KAAKx+B,GAAAA,KACDn5B,KAAK8oD,WAAa9oD,KAAKgpD,YAAY0P,gBAAgB14D,KAAK23D,YACpD,EAAI33D,KAAKgpD,YAAY2P,QAAQ34D,KAAK23D,aACtC,MACJ,KAAKv+B,GAAAA,IACDp5B,KAAK8oD,WAAa9oD,KAAKgpD,YAAY0P,gBAAgB14D,KAAK23D,YACnD33D,KAAKgpD,YAAY4P,kBAAkB54D,KAAK23D,aACrC33D,KAAKgpD,YAAY2P,QAAQ34D,KAAK23D,aACtC,MACJ,KAAKtqB,GAAAA,QACDrtC,KAAK8oD,WAAatjD,EAAMwzB,OACpBh5B,KAAKgpD,YAAY6P,iBAAiB74D,KAAK23D,aAAc,GACrD33D,KAAKgpD,YAAY8P,kBAAkB94D,KAAK23D,aAAc,EAC1D,MACJ,KAAKpqB,GAAAA,UACDvtC,KAAK8oD,WAAatjD,EAAMwzB,OACpBh5B,KAAKgpD,YAAY6P,iBAAiB74D,KAAK23D,YAAa,GACpD33D,KAAKgpD,YAAY8P,kBAAkB94D,KAAK23D,YAAa,EACzD,MACJ,KAAK7+B,GAAAA,MACL,IAAKC,GAAAA,MAQD,YAPK/4B,KAAK2pD,aAAc3pD,KAAK2pD,WAAW3pD,KAAK23D,eACzC33D,KAAKmqD,aAAanqD,KAAKgpD,YAAY2P,QAAQ34D,KAAK23D,cAChD33D,KAAK8qD,cAAc9jD,OAEnBxB,EAAM8Y,kBAId,SAEI,OAGJte,KAAKgpD,YAAYsG,YAAYsI,EAAe53D,KAAK8oD,aACjD9oD,KAAKi3D,iBAAiBjwD,KAAKhH,KAAK8oD,YAGpC9oD,KAAKupD,kBAEL/jD,EAAM8Y,kBAIV8sC,EAAJtrD,UAAA+pD,KAAI,WACI7pD,KAAKg4D,aAAeh4D,KAAKi4D,sBAAsBj4D,KAAKohB,UACpDphB,KAAK+4D,UAAY/4D,KAAKi4D,sBAAsBj4D,KAAKgpD,YAAYC,SAC7DjpD,KAAKg5D,WACDh5D,KAAKgpD,YAAYiQ,cAAc,SAASj5D,KAAKgpD,YAAYuP,SAASv4D,KAAK8oD,aAE3E9oD,KAAKg5D,WAAah5D,KAAKg5D,WAAW,GAAGE,oBAAsBl5D,KAAKg5D,WAAWG,OAAO,EAElF,IAAMC,GAAep5D,KAAKgpD,YAAYwP,WAAWx4D,KAAKgpD,YAAYqP,QAAQr4D,KAAK8oD,YAC3E9oD,KAAKgpD,YAAYuP,SAASv4D,KAAK8oD,YAAa,EAChD9oD,MAAKq5D,iBAtOS,EAuOOr5D,KAAKgpD,YAAYsQ,aAAaF,GAC3Cp5D,KAAKgpD,YAAYmO,qBAxOX,EA0Odn3D,KAAKu5D,kBACLv5D,KAAK+K,kBAAkB5G,gBAI3BinD,EAAJtrD,UAAAypD,gBAAI,WACIvpD,KAAKw5D,eAAejQ,mBAIhB6B,EAAZtrD,UAAAy5D,gBAAI,WACI,GAAME,GAAcz5D,KAAKgpD,YAAY4P,kBAAkB54D,KAAK8oD,YACtD4Q,EAAY15D,KAAKgpD,YAAY2Q,cAEnC35D,MAAK45D,UAEL,KAAK,GAAIj2B,GAAI,EAAG2yB,EAAOt2D,KAAKq5D,gBAAiB11B,EAAI81B,EAAa91B,IAAK2yB,IAAQ,CA1P7D,IA2PNA,IACAt2D,KAAK45D,MAAMlpD,SACX4lD,EAAO,EAEX,IAAMlM,GAAOpqD,KAAKgpD,YAAYwP,WAC1Bx4D,KAAKgpD,YAAYqP,QAAQr4D,KAAK8oD,YAC9B9oD,KAAKgpD,YAAYuP,SAASv4D,KAAK8oD,YAAanlB,EAAI,GAC9CoyB,EAAU/1D,KAAK65D,iBAAiBzP,GAChC9wC,EAAYtZ,KAAKgpD,YAAYsH,OAAOlG,EAAMpqD,KAAK2uD,YAAY4B,QAAQuJ,eACnEC,EAAc/5D,KAAKg6D,UAAYh6D,KAAKg6D,UAAU5P,OAAQ55C,EAE5DxQ,MAAK45D,MAAM55D,KAAK45D,MAAMzoD,OAAS,GAC1BT,KAAK,GAAImlD,IAAelyB,EAAI,EAAG+1B,EAAU/1B,GAAIrqB,EAAWy8C,EAASgE,MAKtE3O,EAAZtrD,UAAA+5D,iBAAI,SAAyBzP,GACrB,QAASA,KACHpqD,KAAK2pD,YAAc3pD,KAAK2pD,WAAWS,OACnCpqD,KAAKypD,SAAWzpD,KAAKgpD,YAAYsG,YAAYlF,EAAMpqD,KAAKypD,UAAY,MACpEzpD,KAAK0pD,SAAW1pD,KAAKgpD,YAAYsG,YAAYlF,EAAMpqD,KAAK0pD,UAAY,IAOtE0B,EAAZtrD,UAAAm4D,sBAAI,SAA8B7N,GAC1B,MAAOA,IAAQpqD,KAAK+3D,oBAAoB3N,EAAMpqD,KAAK8oD,YAC/C9oD,KAAKgpD,YAAY2P,QAAQvO,GAAQ,MAIjCgB,EAAZtrD,UAAAi4D,oBAAI,SAA4BkC,EAAcC,GACtC,SAAUD,IAAMC,GAAMl6D,KAAKgpD,YAAYuP,SAAS0B,KAAQj6D,KAAKgpD,YAAYuP,SAAS2B,IAC9El6D,KAAKgpD,YAAYqP,QAAQ4B,KAAQj6D,KAAKgpD,YAAYqP,QAAQ6B,KAO1D9O,EAAZtrD,UAAAkrD,mBAAI,SAA2BC,GACvB,MAAQjrD,MAAKgpD,YAAYkC,eAAeD,IAAQjrD,KAAKgpD,YAAYmC,QAAQF,GAAQA,EAAM,MAInFG,EAAZtrD,UAAA0kB,MAAI,WACI,MAAOxkB,MAAKi7B,KAA0B,QAAnBj7B,KAAKi7B,IAAI96B,OAzRhC+H,GADCE,EAAAA,iEAGLgjD,EAAAtrD,UAAA,aAAA,MAeIoI,GADCE,EAAAA,iEAGLgjD,EAAAtrD,UAAA,WAAA,MASIoI,GADCE,EAAAA,iEAGLgjD,EAAAtrD,UAAA,UAAA,MAQIoI,GADCE,EAAAA,iEAGLgjD,EAAAtrD,UAAA,UAAA,MAOaoI,GAARE,EAAAA,mCAALgjD,EAAAtrD,UAAA,iBAAA,IAGaoI,GAARE,EAAAA,mCAALgjD,EAAAtrD,UAAA,gBAAA,IAGcoI,GAATC,EAAAA,SAALa,EAAA,cAAuC2Q,EAAAA,eAAvCyxC,EAAAtrD,UAAA,qBAAA,IAGcoI,GAATC,EAAAA,SAALa,EAAA,cAAsC2Q,EAAAA,eAAtCyxC,EAAAtrD,UAAA,oBAAA,IAGcoI,GAATC,EAAAA,SAALa,EAAA,cAAyC2Q,EAAAA,eAAzCyxC,EAAAtrD,UAAA,uBAAA,IAG+BoI,GAA1B8D,EAAAA,UAAU0lD,IAAf1oD,EAAA,cAA+C0oD,KAA/CtG,EAAAtrD,UAAA,qBAAA,IAnEasrD,EAAbljD,GAPCgE,EAAAA,WACG3D,SAAU,gBACV4D,SAAJ,yjBACI3D,SAAU,cACVgE,cAAeC,EAAAA,kBAAkBC,KACjCL,gBAAiBC,EAAAA,wBAAwBC,SAkGpC3D,EAAT,EAASG,EAAAA,YAAYH,EAArB,EAAqBC,EAAAA,OAAO0iD,EAAAA,kBACnB3iD,EAAT,EAASG,EAAAA,YACAH,EAAT,EAASG,EAAAA,YAHTC,EAAA,qBAAmCwE,EAAAA,kBAAnC7N,OAEwC8rD,EAAAA,YACNniD,EAAAA,kBAlGrB8hD,MCCbE,GAAA,WA8EI,QAAJA,GACgBvgD,EACWi+C,EACC/tB,GAEpB,GAJQj7B,KAAhB+K,kBAAgBA,EACW/K,KAA3BgpD,YAA2BA,EACChpD,KAA5Bi7B,IAA4BA,EA3BLj7B,KAAvBsqD,eAAyD,GAAI3wC,GAAAA,aAGtC3Z,KAAvByqD,aAAuD,GAAI9wC,GAAAA,aAGpC3Z,KAAvBi3D,iBAA2D,GAAIt9C,GAAAA,cAuBlD3Z,KAAKgpD,YACN,KAAM+D,GAA2B,cAGrC/sD,MAAK23D,YAAc33D,KAAKgpD,YAAYC,QAmJ5C,MAvOItpD,QAAJC,eAAQ0rD,EAARxrD,UAAA,cAAAC,IAAI,WACI,MAAOC,MAAK23D,aAGpBz3D,IAAI,SAAeC,GACX,GAAMy3D,GAAgB53D,KAAK23D,YACrBE,EACF73D,KAAKgrD,mBAAmBhrD,KAAKgpD,YAAYmE,YAAYhtD,KAAWH,KAAKgpD,YAAYC,OACrFjpD,MAAK23D,YAAc33D,KAAKgpD,YAAY8O,UAAUD,EAAW73D,KAAKypD,QAASzpD,KAAK0pD,SAExEnmC,KAAKoqB,MAAM3tC,KAAKgpD,YAAYqP,QAAQT,GA7BpB,MA8BhBr0C,KAAKoqB,MAAM3tC,KAAKgpD,YAAYqP,QAAQr4D,KAAK23D,aA9BzB,KA+BhB33D,KAAK6pD,wCAMblqD,OAAJC,eAAQ0rD,EAARxrD,UAAA,YAAAC,IAAI,WACI,MAAOC,MAAK8nC,WAGpB5nC,IAAI,SAAaC,GACTH,KAAK8nC,UAAY9nC,KAAKgrD,mBAAmBhrD,KAAKgpD,YAAYmE,YAAYhtD,IACtEH,KAAKo4D,aAAep4D,KAAK8nC,WAAa9nC,KAAKgpD,YAAYqP,QAAQr4D,KAAK8nC,4CAKxEnoC,OAAJC,eAAQ0rD,EAARxrD,UAAA,WAAAC,IAAI,WACI,MAAOC,MAAKk4D,UAGpBh4D,IAAI,SAAYC,GACRH,KAAKk4D,SAAWl4D,KAAKgrD,mBAAmBhrD,KAAKgpD,YAAYmE,YAAYhtD,qCAKzER,OAAJC,eAAQ0rD,EAARxrD,UAAA,WAAAC,IAAI,WACI,MAAOC,MAAKm4D,UAGpBj4D,IAAI,SAAYC,GACRH,KAAKm4D,SAAWn4D,KAAKgrD,mBAAmBhrD,KAAKgpD,YAAYmE,YAAYhtD,qCA2CzEmrD,EAAJxrD,UAAAu1B,mBAAI,WACIr1B,KAAK6pD,QAITyB,EAAJxrD,UAAA+pD,KAAI,WAAA,GAAJ7oD,GAAAhB,IACQA,MAAKm6D,UAAYn6D,KAAKgpD,YAAYqP,QAAQr4D,KAAKgpD,YAAYC,QAC3D,IAAMmR,GAAap6D,KAAKgpD,YAAYqP,QAAQr4D,KAAK23D,aAC3C0C,EAAeD,EAlHD,EAmHpBp6D,MAAKs6D,QACL,KAAK,GAAI32B,GAAI,EAAG42B,KAAoB52B,EApHhB,GAoHkCA,IAClD42B,EAAI7pD,KAAK0pD,EAAaC,EAAe12B,GAnHtB,IAoHX42B,EAAIppD,SACJnR,KAAKs6D,MAAM5pD,KAAK6pD,EAAIv4C,IAAI,SAACw4C,GAAS,MAAAx5D,GAAKy5D,kBAAkBD,MACzDD,KAGRv6D,MAAK+K,kBAAkB5G,gBAI3BmnD,EAAJxrD,UAAA46D,eAAI,SAAeF,GACXx6D,KAAKyqD,aAAazjD,KAAKhH,KAAKgpD,YAAYwP,WAAWgC,EAAM,EAAG,GAC5D,IAAMG,GAAQ36D,KAAKgpD,YAAYuP,SAASv4D,KAAK8oD,YACvC2Q,EACFz5D,KAAKgpD,YAAY4P,kBAAkB54D,KAAKgpD,YAAYwP,WAAWgC,EAAMG,EAAO,GAChF36D,MAAKsqD,eAAetjD,KAAKhH,KAAKgpD,YAAYwP,WAAWgC,EAAMG,EACvDp3C,KAAKC,IAAIxjB,KAAKgpD,YAAY2P,QAAQ34D,KAAK8oD,YAAa2Q,MAI5DnO,EAAJxrD,UAAA24D,0BAAI,SAA0BjzD,GAKtB,GAAMoyD,GAAgB53D,KAAK23D,YACrBnzC,EAAQxkB,KAAKwkB,OAGnB,QAAQhf,EAAMQ,SACV,IAAK4yB,GAAAA,WACD54B,KAAK8oD,WAAa9oD,KAAKgpD,YAAY6P,iBAAiB74D,KAAK23D,YAAanzC,EAAQ,GAAK,EACnF,MACJ,KAAKqU,GAAAA,YACD74B,KAAK8oD,WAAa9oD,KAAKgpD,YAAY6P,iBAAiB74D,KAAK23D,YAAanzC,GAAS,EAAI,EACnF,MACJ,KAAKmU,GAAAA,SACD34B,KAAK8oD,WAAa9oD,KAAKgpD,YAAY6P,iBAAiB74D,KAAK23D,aAxJ9C,EAyJX,MACJ,KAAKj/B,GAAAA,WACD14B,KAAK8oD,WAAa9oD,KAAKgpD,YAAY6P,iBAAiB74D,KAAK23D,YA3J9C,EA4JX,MACJ,KAAKx+B,GAAAA,KACDn5B,KAAK8oD,WAAa9oD,KAAKgpD,YAAY6P,iBAAiB74D,KAAK23D,aACpD33D,KAAKgpD,YAAYqP,QAAQr4D,KAAK23D,aAjKvB,GAkKZ,MACJ,KAAKv+B,GAAAA,IACDp5B,KAAK8oD,WAAa9oD,KAAKgpD,YAAY6P,iBAAiB74D,KAAK23D,YApK7C,GAqKO33D,KAAKgpD,YAAYqP,QAAQr4D,KAAK23D,aArKrC,GAqKmE,EAC/E,MACJ,KAAKtqB,GAAAA,QACDrtC,KAAK8oD,WACD9oD,KAAKgpD,YAAY6P,iBACb74D,KAAK23D,YAAanyD,EAAMwzB,QAAS,KA1K7B,GA2KZ,MACJ,KAAKuU,GAAAA,UACDvtC,KAAK8oD,WACD9oD,KAAKgpD,YAAY6P,iBACb74D,KAAK23D,YAAanyD,EAAMwzB,OAAS4hC,IA/K7B,GAgLZ,MACJ,KAAK9hC,GAAAA,MACL,IAAKC,GAAAA,MACD/4B,KAAK06D,eAAe16D,KAAKgpD,YAAYqP,QAAQr4D,KAAK23D,aAClD,MACJ,SAEI,OAGJ33D,KAAKgpD,YAAYsG,YAAYsI,EAAe53D,KAAK8oD,aACjD9oD,KAAKi3D,iBAAiBjwD,KAAKhH,KAAK8oD,YAGpC9oD,KAAKupD,kBAEL/jD,EAAM8Y,kBAGVgtC,EAAJxrD,UAAA+6D,cAAI,WACI,MAAO76D,MAAKgpD,YAAYqP,QAAQr4D,KAAK8oD,YApMjB,IAwMxBwC,EAAJxrD,UAAAypD,gBAAI,WACIvpD,KAAKw5D,eAAejQ,mBAIhB+B,EAAZxrD,UAAA26D,kBAAI,SAA0BD,GACtB,GAAMM,GAAW96D,KAAKgpD,YAAY+R,YAAY/6D,KAAKgpD,YAAYwP,WAAWgC,EAAM,EAAG,GAEnF,OAAO,IAAI3E,IAAe2E,EAAMM,EAAUA,EAAU96D,KAAKg7D,iBAAiBR,KAItElP,EAAZxrD,UAAAk7D,iBAAI,SAAyBR,GAErB,OAAahqD,KAATgqD,GAA+B,OAATA,GACrBx6D,KAAK0pD,SAAW8Q,EAAOx6D,KAAKgpD,YAAYqP,QAAQr4D,KAAK0pD,UACrD1pD,KAAKypD,SAAW+Q,EAAOx6D,KAAKgpD,YAAYqP,QAAQr4D,KAAKypD,SACtD,OAAO,CAIX,KAAKzpD,KAAK2pD,WACN,OAAO,CAMX,KAAK,GAHCsR,GAAcj7D,KAAKgpD,YAAYwP,WAAWgC,EAAM,EAAG,GAGhDpQ,EAAO6Q,EAAaj7D,KAAKgpD,YAAYqP,QAAQjO,KAAUoQ,EAC3DpQ,EAAOpqD,KAAKgpD,YAAY0P,gBAAgBtO,EAAM,GAC/C,GAAIpqD,KAAK2pD,WAAWS,GAChB,OAAO,CAIf,QAAO,GAOHkB,EAAZxrD,UAAAkrD,mBAAI,SAA2BC,GACvB,MAAQjrD,MAAKgpD,YAAYkC,eAAeD,IAAQjrD,KAAKgpD,YAAYmC,QAAQF,GAAQA,EAAM,MAInFK,EAAZxrD,UAAA0kB,MAAI,WACI,MAAOxkB,MAAKi7B,KAA0B,QAAnBj7B,KAAKi7B,IAAI96B,OArOhC+H,GADCE,EAAAA,iEAGLkjD,EAAAxrD,UAAA,aAAA,MAgBIoI,GADCE,EAAAA,iEAGLkjD,EAAAxrD,UAAA,WAAA,MASIoI,GADCE,EAAAA,iEAGLkjD,EAAAxrD,UAAA,UAAA,MAQIoI,GADCE,EAAAA,iEAGLkjD,EAAAxrD,UAAA,UAAA,MAOaoI,GAARE,EAAAA,mCAALkjD,EAAAxrD,UAAA,iBAAA,IAGcoI,GAATC,EAAAA,SAALa,EAAA,cAAuC2Q,EAAAA,eAAvC2xC,EAAAxrD,UAAA,qBAAA,IAGcoI,GAATC,EAAAA,SAALa,EAAA,cAAqC2Q,EAAAA,eAArC2xC,EAAAxrD,UAAA,mBAAA,IAGcoI,GAATC,EAAAA,SAALa,EAAA,cAAyC2Q,EAAAA,eAAzC2xC,EAAAxrD,UAAA,uBAAA,IAG+BoI,GAA1B8D,EAAAA,UAAU0lD,IAAf1oD,EAAA,cAA+C0oD,KAA/CpG,EAAAxrD,UAAA,qBAAA,IA/DawrD,EAAbpjD,GAPCgE,EAAAA,WACG3D,SAAU,qBACV4D,SAAJ,ibACI3D,SAAU,kBACVgE,cAAeC,EAAAA,kBAAkBC,KACjCL,gBAAiBC,EAAAA,wBAAwBC,SAkFpC3D,EAAT,EAASG,EAAAA,YACAH,EAAT,EAASG,EAAAA,YAFTC,EAAA,qBAAmCwE,EAAAA,kBACKi+C,EAAAA,YACNniD,EAAAA,kBAjFrBgiD,MCLbD,GAAA,WAmFI,QAAJA,GACgBtgD,EACqC4jD,EAC1B3F,EACC/tB,GAEpB,GALQj7B,KAAhB+K,kBAAgBA,EACqC/K,KAArD2uD,YAAqDA,EAC1B3uD,KAA3BgpD,YAA2BA,EACChpD,KAA5Bi7B,IAA4BA,EAlCLj7B,KAAvBsqD,eAAyD,GAAI3wC,GAAAA,aAGtC3Z,KAAvB4qD,cAAwD,GAAIjxC,GAAAA,aAGrC3Z,KAAvBi3D,iBAA2D,GAAIt9C,GAAAA,cA8BlD3Z,KAAKgpD,YACN,KAAM+D,GAA2B,cAGrC,KAAK/sD,KAAK2uD,YACN,KAAM5B,GAA2B,kBAGrC/sD,MAAK23D,YAAc33D,KAAKgpD,YAAYC,QAiM5C,MA/RItpD,QAAJC,eAAQyrD,EAARvrD,UAAA,cAAAC,IAAI,WACI,MAAOC,MAAK23D,aAGpBz3D,IAAI,SAAeC,GACX,GAAMy3D,GAAgB53D,KAAK23D,YACrBE,EACF73D,KAAKgrD,mBAAmBhrD,KAAKgpD,YAAYmE,YAAYhtD,KAAWH,KAAKgpD,YAAYC,OACrFjpD,MAAK23D,YAAc33D,KAAKgpD,YAAY8O,UAAUD,EAAW73D,KAAKypD,QAASzpD,KAAK0pD,SAExE1pD,KAAKgpD,YAAYqP,QAAQT,KAAmB53D,KAAKgpD,YAAYqP,QAAQr4D,KAAK23D,cAC1E33D,KAAK6pD,wCAMblqD,OAAJC,eAAQyrD,EAARvrD,UAAA,YAAAC,IAAI,WACI,MAAOC,MAAK8nC,WAGpB5nC,IAAI,SAAaC,GACTH,KAAK8nC,UAAY9nC,KAAKgrD,mBAAmBhrD,KAAKgpD,YAAYmE,YAAYhtD,IACtEH,KAAKs4D,cAAgBt4D,KAAKk7D,sBAAsBl7D,KAAK8nC,4CAKzDnoC,OAAJC,eAAQyrD,EAARvrD,UAAA,WAAAC,IAAI,WACI,MAAOC,MAAKk4D,UAGpBh4D,IAAI,SAAYC,GACRH,KAAKk4D,SAAWl4D,KAAKgrD,mBAAmBhrD,KAAKgpD,YAAYmE,YAAYhtD,qCAKzER,OAAJC,eAAQyrD,EAARvrD,UAAA,WAAAC,IAAI,WACI,MAAOC,MAAKm4D,UAGpBj4D,IAAI,SAAYC,GACRH,KAAKm4D,SAAWn4D,KAAKgrD,mBAAmBhrD,KAAKgpD,YAAYmE,YAAYhtD,qCAsDzEkrD,EAAJvrD,UAAAu1B,mBAAI,WACIr1B,KAAK6pD,QAITwB,EAAJvrD,UAAAq7D,gBAAI,SAAgBR,GACZ,GAAMS,GACFp7D,KAAKgpD,YAAYwP,WAAWx4D,KAAKgpD,YAAYqP,QAAQr4D,KAAK8oD,YAAa6R,EAAO,EAElF36D,MAAK4qD,cAAc5jD,KAAKo0D,EAExB,IAAM3B,GAAcz5D,KAAKgpD,YAAY4P,kBAAkBwC,EAEvDp7D,MAAKsqD,eAAetjD,KAAKhH,KAAKgpD,YAAYwP,WACtCx4D,KAAKgpD,YAAYqP,QAAQr4D,KAAK8oD,YAAa6R,EAC3Cp3C,KAAKC,IAAIxjB,KAAKgpD,YAAY2P,QAAQ34D,KAAK8oD,YAAa2Q,MAI5DpO,EAAJvrD,UAAA24D,0BAAI,SAA0BjzD,GAKtB,GAAMoyD,GAAgB53D,KAAK23D,YACrBnzC,EAAQxkB,KAAKwkB,OAOnB,QAAQhf,EAAMQ,SACV,IAAK4yB,GAAAA,WACD54B,KAAK8oD,WAAa9oD,KAAKgpD,YAAY8P,kBAAkB94D,KAAK23D,YAAanzC,EAAQ,GAAK,EACpF,MACJ,KAAKqU,GAAAA,YACD74B,KAAK8oD,WAAa9oD,KAAKgpD,YAAY8P,kBAAkB94D,KAAK23D,YAAanzC,GAAS,EAAI,EACpF,MACJ,KAAKmU,GAAAA,SACD34B,KAAK8oD,WAAa9oD,KAAKgpD,YAAY8P,kBAAkB94D,KAAK23D,aAb3C,EAcf,MACJ,KAAKj/B,GAAAA,WACD14B,KAAK8oD,WAAa9oD,KAAKgpD,YAAY8P,kBAAkB94D,KAAK23D,YAhB3C,EAiBf,MACJ,KAAKx+B,GAAAA,KACDn5B,KAAK8oD,WAAa9oD,KAAKgpD,YAAY8P,kBAAkB94D,KAAK23D,aACrD33D,KAAKgpD,YAAYuP,SAASv4D,KAAK23D,aACpC,MACJ,KAAKv+B,GAAAA,IACDp5B,KAAK8oD,WAAa9oD,KAAKgpD,YAAY8P,kBAAkB94D,KAAK23D,YArB1C,GAsBM33D,KAAKgpD,YAAYuP,SAASv4D,KAAK23D,aACrD,MACJ,KAAKtqB,GAAAA,QACDrtC,KAAK8oD,WACD9oD,KAAKgpD,YAAY6P,iBAAiB74D,KAAK23D,YAAanyD,EAAMwzB,QA3BnD,IA2B2E,EACtF,MACJ,KAAKuU,GAAAA,UACDvtC,KAAK8oD,WACD9oD,KAAKgpD,YAAY6P,iBAAiB74D,KAAK23D,YAAanyD,EAAMwzB,OA/BnD,GA+ByE,EACpF,MACJ,KAAKF,GAAAA,MACL,IAAKC,GAAAA,MACD/4B,KAAKm7D,gBAAgBn7D,KAAKgpD,YAAYuP,SAASv4D,KAAK23D,aACpD,MACJ,SAEI,OAGJ33D,KAAKgpD,YAAYsG,YAAYsI,EAAe53D,KAAK8oD,aACjD9oD,KAAKi3D,iBAAiBjwD,KAAKhH,KAAK8oD,YAGpC9oD,KAAKupD,kBAEL/jD,EAAM8Y,kBAIV+sC,EAAJvrD,UAAA+pD,KAAI,WAAA,GAAJ7oD,GAAAhB,IACQA,MAAKs4D,cAAgBt4D,KAAKk7D,sBAAsBl7D,KAAKohB,UACrDphB,KAAKq7D,WAAar7D,KAAKk7D,sBAAsBl7D,KAAKgpD,YAAYC,SAC9DjpD,KAAKs7D,UAAYt7D,KAAKgpD,YAAY+R,YAAY/6D,KAAK8oD,WAEnD,IAAMyS,GAAav7D,KAAKgpD,YAAYiQ,cAAc,QAIlDj5D,MAAKw7D,SAAW,EAAG,EAAG,EAAG,IAAK,EAAG,EAAG,EAAG,IAAK,EAAG,EAAG,GAAI,KAAKx5C,IAAI,SAACu4C,GAAQ,MAAAA,GAAIv4C,IACxE,SAAC24C,GAAU,MAAA35D,GAAKy6D,mBAAmBd,EAAOY,EAAWZ,QACzD36D,KAAK+K,kBAAkB5G,gBAI3BknD,EAAJvrD,UAAAypD,gBAAI,WACIvpD,KAAKw5D,eAAejQ,mBAOhB8B,EAAZvrD,UAAAo7D,sBAAI,SAA8B9Q,GAC1B,MAAOA,IAAQpqD,KAAKgpD,YAAYqP,QAAQjO,KAAUpqD,KAAKgpD,YAAYqP,QAAQr4D,KAAK8oD,YAC5E9oD,KAAKgpD,YAAYuP,SAASnO,GAAQ,MAIlCiB,EAAZvrD,UAAA27D,mBAAI,SAA2Bd,EAAee,GACtC,GAAMpiD,GAAYtZ,KAAKgpD,YAAYsH,OAC/BtwD,KAAKgpD,YAAYwP,WAAWx4D,KAAKgpD,YAAYqP,QAAQr4D,KAAK8oD,YAAa6R,EAAO,GAC9E36D,KAAK2uD,YAAY4B,QAAQoL,oBAEvBC,EAAeF,EAAU,GAAGxC,oBAAsBwC,EAAUvC,OAAO,EAEzE,OAAO,IAAItD,IACP8E,EAAOiB,EAActiD,EAAWtZ,KAAK67D,kBAAkBlB,KAIvDtP,EAAZvrD,UAAA+7D,kBAAI,SAA0BlB,GAEtB,GAAMP,GAAap6D,KAAKgpD,YAAYqP,QAAQr4D,KAAK8oD,WAEjD,QAAct4C,KAAVmqD,GAAiC,OAAVA,GACvB36D,KAAK87D,2BAA2B1B,EAAYO,IAC5C36D,KAAK+7D,4BAA4B3B,EAAYO,GAC7C,OAAO,CAGX,KAAK36D,KAAK2pD,WACN,OAAO,CAMX,KAAK,GAHCyP,GAAep5D,KAAKgpD,YAAYwP,WAAW4B,EAAYO,EAAO,GAG3DvQ,EAAOgP,EAAcp5D,KAAKgpD,YAAYuP,SAASnO,KAAUuQ,EAC7DvQ,EAAOpqD,KAAKgpD,YAAY0P,gBAAgBtO,EAAM,GAC/C,GAAIpqD,KAAK2pD,WAAWS,GAChB,OAAO,CAIf,QAAO,GAOHiB,EAAZvrD,UAAAg8D,2BAAI,SAAmCtB,EAAcG,GAC7C,GAAI36D,KAAK0pD,QAAS,CACd,GAAMsS,GAAUh8D,KAAKgpD,YAAYqP,QAAQr4D,KAAK0pD,SACxCuS,EAAWj8D,KAAKgpD,YAAYuP,SAASv4D,KAAK0pD,QAEhD,OAAO8Q,GAAOwB,GAAYxB,IAASwB,GAAWrB,EAAQsB,EAG1D,OAAO,GAOH5Q,EAAZvrD,UAAAi8D,4BAAI,SAAoCvB,EAAcG,GAC9C,GAAI36D,KAAKypD,QAAS,CACd,GAAMyS,GAAUl8D,KAAKgpD,YAAYqP,QAAQr4D,KAAKypD,SACxC0S,EAAWn8D,KAAKgpD,YAAYuP,SAASv4D,KAAKypD,QAEhD,OAAO+Q,GAAO0B,GAAY1B,IAAS0B,GAAWvB,EAAQwB,EAG1D,OAAO,GAOH9Q,EAAZvrD,UAAAkrD,mBAAI,SAA2BC,GACvB,MAAQjrD,MAAKgpD,YAAYkC,eAAeD,IAAQjrD,KAAKgpD,YAAYmC,QAAQF,GAAQA,EAAM,MAInFI,EAAZvrD,UAAA0kB,MAAI,WACI,MAAOxkB,MAAKi7B,KAA0B,QAAnBj7B,KAAKi7B,IAAI96B,OA7RhC+H,GADCE,EAAAA,iEAGLijD,EAAAvrD,UAAA,aAAA,MAeIoI,GADCE,EAAAA,iEAGLijD,EAAAvrD,UAAA,WAAA,MASIoI,GADCE,EAAAA,iEAGLijD,EAAAvrD,UAAA,UAAA,MAQIoI,GADCE,EAAAA,iEAGLijD,EAAAvrD,UAAA,UAAA,MAOaoI,GAARE,EAAAA,mCAALijD,EAAAvrD,UAAA,iBAAA,IAGcoI,GAATC,EAAAA,SAALa,EAAA,cAAuC2Q,EAAAA,eAAvC0xC,EAAAvrD,UAAA,qBAAA,IAGcoI,GAATC,EAAAA,SAALa,EAAA,cAAsC2Q,EAAAA,eAAtC0xC,EAAAvrD,UAAA,oBAAA,IAGcoI,GAATC,EAAAA,SAALa,EAAA,cAAyC2Q,EAAAA,eAAzC0xC,EAAAvrD,UAAA,uBAAA,IAG+BoI,GAA1B8D,EAAAA,UAAU0lD,IAAf1oD,EAAA,cAA+C0oD,KAA/CrG,EAAAvrD,UAAA,qBAAA,IA9DaurD,EAAbnjD,GAPCgE,EAAAA,WACG3D,SAAU,eACV4D,SAAJ,sfACI3D,SAAU,aACVgE,cAAeC,EAAAA,kBAAkBC,KACjCL,gBAAiBC,EAAAA,wBAAwBC,SAuFpC3D,EAAT,EAASG,EAAAA,YAAYH,EAArB,EAAqBC,EAAAA,OAAO0iD,EAAAA,kBACnB3iD,EAAT,EAASG,EAAAA,YACAH,EAAT,EAASG,EAAAA,YAHTC,EAAA,qBAAmCwE,EAAAA,kBAAnC7N,OAEwC8rD,EAAAA,YACNniD,EAAAA,kBAvFrB+hD,MnBCbsG,GAAA,WACI,QAAJA,GAAwBZ,EACqCxE,EACzBvD,EACyB2F,EAC7C5jD,GAJQ/K,KAAxB+wD,KAAwBA,EACqC/wD,KAA7DusD,SAA6DA,EACzBvsD,KAApCgpD,YAAoCA,EACyBhpD,KAA7D2uD,YAA6DA,EAGrD3uD,KAAKusD,SAAShrC,aAAalf,UAAU,WAAM,MAAA0I,GAAkB5G,iBAwGrE,MApGIxE,QAAJC,eAAQ+xD,EAAR7xD,UAAA,oBAAAC,IAAI,WACI,GAAkC,UAA9BC,KAAKusD,SAASxC,YAAyB,CACvC,GAAMqS,GAAQp8D,KAAKgpD,YACdsH,OAAOtwD,KAAKusD,SAASzD,WAAY9oD,KAAK2uD,YAAY4B,QAAQ8L,eAE/D,OAAOD,GAAM,GAAGlD,oBAAsBkD,EAAMjD,OAAO,GAGvD,GAAkC,SAA9Bn5D,KAAKusD,SAASxC,YACd,MAAO/pD,MAAKgpD,YAAY+R,YAAY/6D,KAAKusD,SAASzD,WAGtD,IAAMsR,GAAap6D,KAAKgpD,YAAYqP,QAAQr4D,KAAKusD,SAASzD,WAQ1D,OAPwB9oD,MAAKgpD,YAAY+R,YAErC/6D,KAAKgpD,YAAYwP,WAAW4B,EAAaA,EAAa,GAAI,EAAG,IAKzE,MAJ+Bp6D,KAAKgpD,YAAY+R,YAEpC/6D,KAAKgpD,YAAYwP,WAAW4B,EkBzCZ,GlByCwC,EAAIA,EAAa,GAAI,EAAG,qCAKxFz6D,OAAJC,eAAQ+xD,EAAR7xD,UAAA,qBAAAC,IAAI,WACI,MAAqC,UAA9BC,KAAKusD,SAASxC,YACjB/pD,KAAK+wD,KAAK6E,2BAA6B51D,KAAK+wD,KAAK4E,wDAIzDh2D,OAAJC,eAAQ+xD,EAAR7xD,UAAA,mBAAAC,IAAI,WACI,OACI46D,MAAO36D,KAAK+wD,KAAKsE,eACjBmF,KAAMx6D,KAAK+wD,KAAKwE,cAChB+G,aAAct8D,KAAK+wD,KAAK0E,oBAC1Bz1D,KAAKusD,SAASxC,8CAIpBpqD,OAAJC,eAAQ+xD,EAAR7xD,UAAA,mBAAAC,IAAI,WACI,OACI46D,MAAO36D,KAAK+wD,KAAKuE,eACjBkF,KAAMx6D,KAAK+wD,KAAKyE,cAChB8G,aAAct8D,KAAK+wD,KAAK2E,oBAC1B11D,KAAKusD,SAASxC,8CAIpB4H,EAAJ7xD,UAAAy8D,qBAAI,WACIv8D,KAAKusD,SAASxC,YAA4C,UAA9B/pD,KAAKusD,SAASxC,YAA0B,aAAe,SAIvF4H,EAAJ7xD,UAAA08D,gBAAI,WACIx8D,KAAKusD,SAASzD,WAA2C,UAA9B9oD,KAAKusD,SAASxC,YACrC/pD,KAAKgpD,YAAY8P,kBAAkB94D,KAAKusD,SAASzD,YAAa,GAC9D9oD,KAAKgpD,YAAY6P,iBACb74D,KAAKusD,SAASzD,WAA0C,SAA9B9oD,KAAKusD,SAASxC,aAA0B,GkB/EtD,KlBoFxB4H,EAAJ7xD,UAAA28D,YAAI,WACIz8D,KAAKusD,SAASzD,WAA2C,UAA9B9oD,KAAKusD,SAASxC,YACrC/pD,KAAKgpD,YAAY8P,kBAAkB94D,KAAKusD,SAASzD,WAAY,GAC7D9oD,KAAKgpD,YAAY6P,iBACb74D,KAAKusD,SAASzD,WACgB,SAA9B9oD,KAAKusD,SAASxC,YAAyB,EkBzF3B,KlB8FxB4H,EAAJ7xD,UAAA48D,gBAAI,WACI,OAAK18D,KAAKusD,SAAS9C,WAIXzpD,KAAKusD,SAAS9C,UACjBzpD,KAAK28D,WAAW38D,KAAKusD,SAASzD,WAAY9oD,KAAKusD,SAAS9C,WAIjEkI,EAAJ7xD,UAAA88D,YAAI,WACI,OAAQ58D,KAAKusD,SAAS7C,UACjB1pD,KAAK28D,WAAW38D,KAAKusD,SAASzD,WAAY9oD,KAAKusD,SAAS7C,UAIzDiI,EAAZ7xD,UAAA68D,WAAI,SAAmBE,EAAUC,GACzB,MAAkC,UAA9B98D,KAAKusD,SAASxC,YACP/pD,KAAKgpD,YAAYqP,QAAQwE,KAAW78D,KAAKgpD,YAAYqP,QAAQyE,IAChE98D,KAAKgpD,YAAYuP,SAASsE,KAAW78D,KAAKgpD,YAAYuP,SAASuE,GAErC,SAA9B98D,KAAKusD,SAASxC,YACP/pD,KAAKgpD,YAAYqP,QAAQwE,KAAW78D,KAAKgpD,YAAYqP,QAAQyE,GAIjEv5C,KAAKoqB,MAAM3tC,KAAKgpD,YAAYqP,QAAQwE,GkBxHvB,MlByHhBt5C,KAAKoqB,MAAM3tC,KAAKgpD,YAAYqP,QAAQyE,GkBzHpB,KlBYfnL,EAAbzpD,GAPCgE,EAAAA,WACG3D,SAAU,qBACV4D,SAAJ,s3BACI3D,SAAU,mBACVgE,cAAeC,EAAAA,kBAAkBC,KACjCL,gBAAiBC,EAAAA,wBAAwBC,SAI5B3D,EAAjB,EAAiBC,EAAAA,OAAO2S,EAAAA,WAAW,WAAM,MAAA4tC,QACxBxgD,EAAjB,EAAiBG,EAAAA,YACAH,EAAjB,EAAiBG,EAAAA,YAAYH,EAA7B,EAA6BC,EAAAA,OAAO0iD,EAAAA,kBAHpCviD,EAAA,qBAA8BwiD,GACyCpC,GACtBqC,EAAAA,YAAjD9rD,OAEmC6N,EAAAA,qBALtBmkD,MAgIbvI,GAAA,WA+HI,QAAJA,GACQ2H,EACoB/H,EACyB2F,EACrC5jD,GAJZ,GAAJ/J,GAAAhB,IAMQ,IAJoBA,KAA5BgpD,YAA4BA,EACyBhpD,KAArD2uD,YAAqDA,EACrC3uD,KAAhB+K,kBAAgBA,EA3DH/K,KAAbmpD,UAAyC,QASlBnpD,KAAvBsqD,eAAyD,GAAI3wC,GAAAA,aAMtC3Z,KAAvByqD,aAAuD,GAAI9wC,GAAAA,aAMpC3Z,KAAvB4qD,cAAwD,GAAIjxC,GAAAA,aAGrC3Z,KAAvB8qD,cAA2D,GAAInxC,GAAAA,aAc3D3Z,KAAJuhB,aAAmB,GAAItT,GAAAA,QASXjO,KAAZspD,qBAAkC,GAcrBtpD,KAAKgpD,YACN,KAAM+D,GAA2B,cAGrC,KAAK/sD,KAAK2uD,YACN,KAAM5B,GAA2B,kBAGrC/sD,MAAKwpD,YAAcuH,EAAK99C,QAAQ5Q,UAAU,WACtC0I,EAAkB5G,eAClBnD,EAAKugB,aAAa3b,SA4F9B,MAvOIjG,QAAJC,eAAQwpD,EAARtpD,UAAA,WAAAC,IAAI,WACI,MAAOC,MAAKitD,UAGpB/sD,IAAI,SAAYC,GACRH,KAAKitD,SAAWjtD,KAAKgrD,mBAAmBhrD,KAAKgpD,YAAYmE,YAAYhtD,qCAKzER,OAAJC,eAAQwpD,EAARtpD,UAAA,YAAAC,IAAI,WACI,MAAOC,MAAK8nC,WAGpB5nC,IAAI,SAAaC,GACTH,KAAK8nC,UAAY9nC,KAAKgrD,mBAAmBhrD,KAAKgpD,YAAYmE,YAAYhtD,qCAK1ER,OAAJC,eAAQwpD,EAARtpD,UAAA,WAAAC,IAAI,WACI,MAAOC,MAAKk4D,UAGpBh4D,IAAI,SAAYC,GACRH,KAAKk4D,SAAWl4D,KAAKgrD,mBAAmBhrD,KAAKgpD,YAAYmE,YAAYhtD,qCAKzER,OAAJC,eAAQwpD,EAARtpD,UAAA,WAAAC,IAAI,WACI,MAAOC,MAAKm4D,UAGpBj4D,IAAI,SAAYC,GACRH,KAAKm4D,SAAWn4D,KAAKgrD,mBAAmBhrD,KAAKgpD,YAAYmE,YAAYhtD,qCAOzER,OAAJC,eAAQwpD,EAARtpD,UAAA,cAAAC,IAAI,WACI,MAAOC,MAAK+8D,mBAGpB78D,IAAI,SAAeC,GACXH,KAAK+8D,kBAAoB/8D,KAAKgpD,YAAY8O,UAAU33D,EAAOH,KAAKypD,QAASzpD,KAAK0pD,SAC9E1pD,KAAKuhB,aAAa3b,wCAItBjG,OAAJC,eAAQwpD,EAARtpD,UAAA,eAAAC,IAAI,WACI,MAAOC,MAAKkpD,cAGpBhpD,IAAI,SAAgBC,GACZH,KAAKkpD,aAAe/oD,EACpBH,KAAKspD,qBAAsB,mCAqF/BF,EAAJtpD,UAAAu1B,mBAAI,WACIr1B,KAAKg9D,qBAAuB,GAAIz2D,GAAAA,gBAAgBvG,KAAKi9D,iBAAmBtL;0EACxE3xD,KAAK8oD,WAAa9oD,KAAK+oD,SAAW/oD,KAAKgpD,YAAYC,QAGnDjpD,KAAKkpD,aAAelpD,KAAKmpD,WAG7BC,EAAJtpD,UAAAupD,mBAAI,WACQrpD,KAAKspD,sBACLtpD,KAAKspD,qBAAsB,EAC3BtpD,KAAKupD,oBAIbH,EAAJtpD,UAAAqF,YAAI,WACInF,KAAKwpD,YAAY3yC,cACjB7W,KAAKuhB,aAAa1b,YAGtBujD,EAAJtpD,UAAAkT,YAAI,SAAYC,GACR,GAAM3Q,GAAS2Q,EAAQw2C,SAAWx2C,EAAQy2C,SAAWz2C,EAAQ02C,UAE7D,IAAIrnD,IAAWA,EAAOkzC,YAAa,CAC/B,GAAM9G,GAAO1uC,KAAK4pD,yBAEdlb,KAGA1uC,KAAK+K,kBAAkBC,gBACvB0jC,EAAKmb,QAIb7pD,KAAKuhB,aAAa3b,QAGtBwjD,EAAJtpD,UAAAypD,gBAAI,WACIvpD,KAAK4pD,0BAA0BL,mBAInCH,EAAJtpD,UAAAgqD,iBAAI,YACsC,UAArB9pD,KAAK+pD,YAA0B/pD,KAAKgqD,UACvB,SAArBhqD,KAAK+pD,YAAyB/pD,KAAKiqD,SAAWjqD,KAAKkqD,eAEnD70B,sBAIT+zB,EAAJtpD,UAAAqqD,aAAI,SAAaC,GACJpqD,KAAKgpD,YAAYqB,SAASD,EAAMpqD,KAAKohB,WACtCphB,KAAKsqD,eAAetjD,KAAKojD,IAKjChB,EAAJtpD,UAAAyqD,4BAAI,SAA4BC,GACxBxqD,KAAKyqD,aAAazjD,KAAKwjD,IAI3BpB,EAAJtpD,UAAA4qD,wBAAI,SAAwBC,GACpB3qD,KAAK4qD,cAAc5jD,KAAK2jD,IAG5BvB,EAAJtpD,UAAA+qD,aAAI,WACI7qD,KAAK8qD,cAAc9jD,QAIvBoiD,EAAJtpD,UAAAirD,eAAI,SAAeX,EAAS1b,GACpB1uC,KAAK8oD,WAAasB,EAClBpqD,KAAK+pD,YAAcrb,GAOf0a,EAAZtpD,UAAAkrD,mBAAI,SAA2BC,GACvB,MAAQjrD,MAAKgpD,YAAYkC,eAAeD,IAAQjrD,KAAKgpD,YAAYmC,QAAQF,GAAQA,EAAM,MAInF7B,EAAZtpD,UAAA8pD,wBAAI,WACI,MAAO5pD,MAAKgqD,WAAahqD,KAAKiqD,UAAYjqD,KAAKkqD,eArOnDhiD,GADCE,EAAAA,iEAGLghD,EAAAtpD,UAAA,UAAA,MAQIoI,GADCE,EAAAA,iEAGLghD,EAAAtpD,UAAA,WAAA,MAQIoI,GADCE,EAAAA,iEAGLghD,EAAAtpD,UAAA,UAAA,MAQIoI,GADCE,EAAAA,iEAGLghD,EAAAtpD,UAAA,UAAA,MA8BaoI,GAARE,EAAAA,iCAALghD,EAAAtpD,UAAA,sBAAA,IAMaoI,GAARE,EAAAA,iCAALghD,EAAAtpD,UAAA,gBAAA,IAGaoI,GAARE,EAAAA,mCAALghD,EAAAtpD,UAAA,iBAAA,IAGaoI,GAARE,EAAAA,mCAALghD,EAAAtpD,UAAA,gBAAA,IAGcoI,GAATC,EAAAA,SAALa,EAAA,cAAuC2Q,EAAAA,eAAvCyvC,EAAAtpD,UAAA,qBAAA,IAMcoI,GAATC,EAAAA,SAALa,EAAA,cAAqC2Q,EAAAA,eAArCyvC,EAAAtpD,UAAA,mBAAA,IAMcoI,GAATC,EAAAA,SAALa,EAAA,cAAsC2Q,EAAAA,eAAtCyvC,EAAAtpD,UAAA,oBAAA,IAGcoI,GAATC,EAAAA,SAALa,EAAA,cAAsC2Q,EAAAA,eAAtCyvC,EAAAtpD,UAAA,oBAAA,IAG4BoI,GAAvB8D,EAAAA,UAAUo/C,IAAfpiD,EAAA,cAAuCoiD,KAAvChC,EAAAtpD,UAAA,gBAAA,IAG2BoI,GAAtB8D,EAAAA,UAAUq/C,IAAfriD,EAAA,cAAqCqiD,KAArCjC,EAAAtpD,UAAA,eAAA,IAGgCoI,GAA3B8D,EAAAA,UAAUs/C,IAAftiD,EAAA,cAA+CsiD,KAA/ClC,EAAAtpD,UAAA,oBAAA,IAzGaspD,EAAblhD,GAXCgE,EAAAA,WACG3D,SAAU,cACV4D,SAAJ,i/BACIC,QAAS,mhCACT3D,MACIqE,MAAO,eAEXtE,SAAU,aACVgE,cAAeC,EAAAA,kBAAkBC,KACjCL,gBAAiBC,EAAAA,wBAAwBC,SAmIpC3D,EAAT,EAASG,EAAAA,YACAH,EAAT,EAASG,EAAAA,YAAYH,EAArB,EAAqBC,EAAAA,OAAO0iD,EAAAA,kBAF5BviD,EAAA,qBAAcwiD,GAC2BC,EAAAA,YAAzC9rD,OAEmC6N,EAAAA,qBAnItB47C,MC9JAsC,IAKT1kC,eAAgBlL,EAAAA,QAAQ,kBACpBtE,EAAAA,MAAM,OAAQ5S,EAAAA,OACV+mD,QAAS,EACT/3B,UAAW,mBAEf5X,EAAAA,WAAW,gBAAiBC,EAAAA,QAAQ,mCAAoCrX,EAAAA,OACpE+mD,QAAS,EACT/3B,UAAW,kBAEf5X,EAAAA,WAAW,YAAaC,EAAAA,QAAQ,eAAgBrX,EAAAA,OAAQ+mD,QAAS,QAIrEC,eAAgB9vC,EAAAA,QAAQ,kBACpBtE,EAAAA,MAAM,OAAQ5S,EAAAA,OAAQ+mD,QAAS,KAC/Bn0C,EAAAA,MAAM,QAAS5S,EAAAA,OAAQ+mD,QAAS,KAGhC3vC,EAAAA,WAAW,YAAaC,EAAAA,QAAQ,mDAMnC4vC,SAAQ/rD,UAAUgsD,UACnBD,QAAQ/rD,UAAUgsD,QAAWD,QAAQ/rD,UAAkBisD,kBCO3D,IAAIC,IAAgB,EAGPC,GACT,GAAI78C,GAAAA,eAAsC,iCASjC88C,IACT7wC,QAAS4wC,GACTluC,MAAO9U,EAAAA,SACP+U,WAAYmuC,GAKhBC,GAAA,WAEI,QAAJA,GAAuB7zC,GAAAvY,KAAvBuY,YAAuBA,EAEvB,MAAA6zC,MAGaC,GACT3zC,EAAW0zC,IA0BfE,GAAA,SAAAtzC,GAYI,QAAJszC,GAAgBhrD,GAChB,MAAQ0X,GAARI,KAAApZ,KAAcsB,IAAdtB,KAMA,MAnB4Cga,GAA5CsyC,EAAAtzC,GAgBIszC,EAAJxsD,UAAA41B,gBAAI,WACI11B,KAAKusD,SAAShD,mBAbKrhD,GAAtB8D,EAAAA,UAAUo9C,IAAfpgD,EAAA,cAAqCogD,KAArCkD,EAAAxsD,UAAA,eAAA,IAJawsD,EAAbpkD,GAjBCgE,EAAAA,WACG3D,SAAU,yBACV4D,SAAJ,qkBACIC,QAAS,qYACT3D,MACIqE,MAAO,yBACP0/C,oBAAqB,WAEzB7/C,YACI++C,GAAuB1kC,eACvB0kC,GAAuBE,gBAE3BpjD,SAAU,sBACVgE,cAAeC,EAAAA,kBAAkBC,KACjCL,gBAAiBC,EAAAA,wBAAwBC,OACzCmP,QAAS,WAcb1S,EAAA,qBAA4BE,EAAAA,cAZfojD,IAA+BD,IAkC5CI,GAAA,WAqJI,QAAJA,GAAwBtrD,EACAwB,EACA26B,EAC+Bp6B,EACnB8lD,EACA/tB,EACkBiY,GAC9C,GAPgBlzC,KAAxBmB,QAAwBA,EACAnB,KAAxB2C,OAAwBA,EACA3C,KAAxBs9B,iBAAwBA,EAEYt9B,KAApCgpD,YAAoCA,EACAhpD,KAApCi7B,IAAoCA,EACkBj7B,KAAtDkzC,SAAsDA,EAnEzClzC,KAAbmpD,UAA0D,QAMnCnpD,KAAvByqD,aAAuD,GAAI9wC,GAAAA,aAMpC3Z,KAAvB4qD,cAAwD,GAAIjxC,GAAAA,aAStC3Z,KAAtBq7B,aAAyD,GAAI1hB,GAAAA,aAGvC3Z,KAAtBo0B,aAAyD,GAAIza,GAAAA,aAGzD3Z,KAAJmO,GAAiB,iBAAiB69C,KAQrBhsD,KAAbuhB,aAA8C,GAAItT,GAAAA,QAGrCjO,KAAb0sD,eAA8B,GAAIz+C,GAAAA,QAGrBjO,KAAb2sD,gBAA+B,GAAI1+C,GAAAA,QAIvBjO,KAAZ4hD,SAAsB,EACV5hD,KAAZ4sD,cAAsC,KAU1B5sD,KAAZ6sD,yBAA2D,KAG/C7sD,KAAZ8sD,kBAAgC7wB,EAAAA,aAAaC,OAShCl8B,KAAKgpD,YACN,KAAM+D,GAA2B,cAGrC/sD,MAAKkD,eAAiBA,EAhK9B8pD,EAAaP,EAIT9sD,OAAJC,eAAQ6sD,EAAR3sD,UAAA,WAAAC,IAAI,WAGI,MAAOC,MAAKitD,WAAajtD,KAAKktD,gBAAkBltD,KAAKktD,gBAAgB/sD,MAAQ,OAGrFD,IAAI,SAAYC,GACRH,KAAKitD,SAAWjtD,KAAKgrD,mBAAmBhrD,KAAKgpD,YAAYmE,YAAYhtD,qCAKzER,OAAJC,eAAQ6sD,EAAR3sD,UAAA,SAAAC,IAAI,WAEI,MAAOC,MAAKotD,SACPptD,KAAKktD,gBAAkBltD,KAAKktD,gBAAgBG,sBAAoB78C,KAG7EtQ,IAAI,SAAUC,GACNH,KAAKotD,OAASjtD,mCAKlBR,OAAJC,eAAQ6sD,EAAR3sD,UAAA,YAAAC,IAAI,WACI,WAA0ByQ,KAAnBxQ,KAAKmU,WAA2BnU,KAAKktD,gBACxCltD,KAAKktD,gBAAgB7mD,WAAarG,KAAKmU,WAGnDjU,IAAI,SAAaC,GACT,GAAMwqB,GAAWhqB,EAAAA,sBAAsBR,EAEnCwqB,KAAa3qB,KAAKmU,YAClBnU,KAAKmU,UAAYwW,EACjB3qB,KAAK0sD,eAAe9mD,KAAK+kB,qCAMjChrB,OAAJC,eAAQ6sD,EAAR3sD,UAAA,UAAAC,IAAI,WACI,MAAOC,MAAK4hD,SAGpB1hD,IAAI,SAAWC,GACHA,EACAH,KAAK4P,OAEL5P,KAAK6O,yCAKblP,OAAJC,eAAQ6sD,EAAR3sD,UAAA,YAAAC,IAAI,WACI,MAAOC,MAAK4sD,eAGpB1sD,IAAI,SAAaC,GACTH,KAAK4sD,cAAgBzsD,mCAIzBR,OAAJC,eAAQ6sD,EAAR3sD,UAAA,WAAAC,IAAI,WACI,MAAOC,MAAKktD,iBAAmBltD,KAAKktD,gBAAgB1pC,qCAIxD7jB,OAAJC,eAAQ6sD,EAAR3sD,UAAA,WAAAC,IAAI,WACI,MAAOC,MAAKktD,iBAAmBltD,KAAKktD,gBAAgB7iC,qCAGxD1qB,OAAJC,eAAQ6sD,EAAR3sD,UAAA,cAAAC,IAAI,WACI,MAAOC,MAAKktD,iBAAmBltD,KAAKktD,gBAAgBvD,4CAIxDhqD,OAAJC,eAAQ6sD,EAAR3sD,UAAA,SAAAC,IAAI,WACI,MAAOC,MAAKohB,0CAkFhBqrC,EAAJ3sD,UAAAqF,YAAI,WACInF,KAAK6O,QACL7O,KAAK8sD,kBAAkBj2C,cACvB7W,KAAK0sD,eAAe7mD,WAEhB7F,KAAKstD,WACLttD,KAAKstD,SAASloD,UACdpF,KAAKutD,kBAAoB,OAKjCd,EAAJ3sD,UAAAqgB,OAAI,SAAOiqC,GACH,GAAMoD,GAAWxtD,KAAKohB,QACtBphB,MAAKohB,SAAWgpC,EACXpqD,KAAKgpD,YAAYqB,SAASmD,EAAUxtD,KAAKohB,WAC1CphB,KAAK2sD,gBAAgB/mD,KAAKwkD,IAKlCqC,EAAJ3sD,UAAA2tD,WAAI,SAAWjD,GACPxqD,KAAKyqD,aAAazjD,KAAKwjD,IAI3BiC,EAAJ3sD,UAAA4tD,YAAI,SAAY/C,GACR3qD,KAAK4qD,cAAc5jD,KAAK2jD,IAO5B8B,EAAJ3sD,UAAA6tD,cAAI,SAAcC,GAAd,GAAJ5sD,GAAAhB,IACQ,IAAIA,KAAKktD,gBACL,KAAMnhD,OAAM,6DAEhB/L,MAAKktD,gBAAkBU,EACvB5tD,KAAK8sD,kBACD9sD,KAAKktD,gBAAgBjrC,YAAY5f,UAAU,SAAClC,GAAoB,MAAAa,GAAKogB,SAAWjhB,KAIxFssD,EAAJ3sD,UAAA8P,KAAI,WACI,IAAI5P,KAAK4hD,UAAW5hD,KAAKqG,SAAzB,CAGA,IAAKrG,KAAKktD,gBACN,KAAMnhD,OAAM,8DAEZ/L,MAAKkzC,WACLlzC,KAAK6sD,yBAA2B7sD,KAAKkzC,SAAS2a,eAGlD7tD,KAAK8tD,cAEL9tD,KAAK4hD,SAAU,EACf5hD,KAAKq7B,aAAar0B,SAItBylD,EAAJ3sD,UAAA+O,MAAI,WAAA,GAAJ7N,GAAAhB,IACQ,IAAKA,KAAK4hD,QAAV,CAII5hD,KAAKstD,UAAYttD,KAAKstD,SAAShqD,eAC/BtD,KAAKstD,SAASjqD,SAGdrD,KAAK+tD,gBAAkB/tD,KAAK+tD,eAAeC,YAC3ChuD,KAAK+tD,eAAe1qD,QAGxB,IAAM4qD,GAAgB,WAGdjtD,EAAK4gD,UACL5gD,EAAK4gD,SAAU,EACf5gD,EAAKozB,aAAaptB,OAClBhG,EAAK6rD,yBAA2B,MAIpC7sD,MAAK6sD,0BAC0C,kBAAxC7sD,MAAK6sD,yBAAyB1yC,OAMrCna,KAAK6sD,yBAAyB1yC,QAC9BrH,WAAWm7C,IAEXA,MAKAxB,EAAZ3sD,UAAAguD,YAAI,WAAA,GAAJ9sD,GAAAhB,IACaA,MAAK+tD,iBACN/tD,KAAK+tD,eAAiB,GAAIxnD,GAAAA,gBAAwC+lD,GAC9DtsD,KAAKs9B,mBAGRt9B,KAAKstD,UACNttD,KAAKkuD,cAGJluD,KAAKstD,SAAShqD,gBACftD,KAAKutD,kBAAoBvtD,KAAKstD,SAAS7mD,OAAOzG,KAAK+tD,gBACnD/tD,KAAKutD,kBAAkB7mD,SAASynD,WAAanuD,KAC7CA,KAAKouD,WAGLpuD,KAAK2C,OAAOszB,SAAShnB,eAAe/M,KAAKqM,EAAAA,KAAK,IAAIlM,UAAU,WACxDrB,EAAKssD,SAASnqD,qBAMlBspD,EAAZ3sD,UAAAouD,YAAI,WAAA,GAAJltD,GAAAhB,KACcwR,EAAgB,GAAIC,GAAAA,eACtBzO,iBAAkBhD,KAAKquD,8BACvB38C,aAAa,EACbC,cAAe,kCACf5O,UAAW/C,KAAKi7B,IAChB/3B,eAAgBlD,KAAKkD,iBACrBD,WAAY,wBAGhBjD,MAAKstD,SAAWttD,KAAKmB,QAAQ2B,OAAO0O,GACpCxR,KAAKstD,SAAShpD,eAAeoT,aAAa,OAAQ,UAElDhJ,EAAAA,MACI1O,KAAKstD,SAAS3+C,gBACd3O,KAAKstD,SAASlqD,cACdpD,KAAKstD,SAAS1+C,gBAAgB1M,KAAKkM,EAAAA,OAAO,SAAC5I,GAGvC,MAAOA,GAAMQ,UAAYC,EAAAA,QAAWjF,EAAKksD,iBAAmB1nD,EAAMwzB,QAAUxzB,EAAMQ,UAAY2yB,EAAAA,aAEpGt2B,UAAU,WAAM,MAAArB,GAAK6N,WAInB49C,EAAZ3sD,UAAAuuD,4BAAI,WACI,MAAOruD,MAAKmB,QAAQC,WACfC,oBAAoBrB,KAAKktD,gBAAgB5rD,YACzCC,sBAAsB,2BACtBC,wBAAuB,GACvBC,mBAAmB,GACnB0hD,qBACAzhD,gBAEOqC,QAAS,QACTC,QAAS,SACTC,SAAU,QACVC,SAAU,QAGVH,QAAS,QACTC,QAAS,MACTC,SAAU,QACVC,SAAU,WAGVH,QAAS,MACTC,QAAS,SACTC,SAAU,MACVC,SAAU,QAGVH,QAAS,MACTC,QAAS,MACTC,SAAU,MACVC,SAAU,aASlBuoD,EAAZ3sD,UAAAkrD,mBAAI,SAA2BC,GACvB,MAAQjrD,MAAKgpD,YAAYkC,eAAeD,IAAQjrD,KAAKgpD,YAAYmC,QAAQF,GAAQA,EAAM,MAInFwB,EAAZ3sD,UAAAsuD,SAAI,WACI,GAAMr3B,GAAQ/2B,KAAK+2B,KACf/2B,MAAKutD,oBACLvtD,KAAKutD,kBAAkB7mD,SAASqwB,MAAQA,SAGpD,OArWI7uB,IADCE,EAAAA,iEAKLqkD,EAAA3sD,UAAA,UAAA,MAQIoI,GADCE,EAAAA,iEAKLqkD,EAAA3sD,UAAA,QAAA,MAQIoI,GADCE,EAAAA,mEAILqkD,EAAA3sD,UAAA,WAAA,MAaIoI,GADCE,EAAAA,mEAGLqkD,EAAA3sD,UAAA,SAAA,MAuCaoI,GAARE,EAAAA,iCAALqkD,EAAA3sD,UAAA,8BAAA,IAGaoI,GAARE,EAAAA,iCAALqkD,EAAA3sD,UAAA,gBAAA,IAMcoI,GAATC,EAAAA,SAALa,EAAA,cAAqC2Q,EAAAA,eAArC8yC,EAAA3sD,UAAA,mBAAA,IAMcoI,GAATC,EAAAA,SAALa,EAAA,cAAsC2Q,EAAAA,eAAtC8yC,EAAA3sD,UAAA,oBAAA,IAGaoI,GAARE,EAAAA,iCAALqkD,EAAA3sD,UAAA,iBAAA,IAGaoI,GAARE,EAAAA,mCAALqkD,EAAA3sD,UAAA,gBAAA,IAGsBoI,GAAjBC,EAAAA,OAAO,UAAZa,EAAA,cAAoC2Q,EAAAA,eAApC8yC,EAAA3sD,UAAA,mBAAA,IAGsBoI,GAAjBC,EAAAA,OAAO,UAAZa,EAAA,cAAoC2Q,EAAAA,eAApC8yC,EAAA3sD,UAAA,mBAAA,IAhHa2sD,EAAbO,EAAA9kD,GARCgE,EAAAA,WACG3D,SAAU,gBACV4D,SAAU,GACV3D,SAAU,eACV6D,gBAAiBC,EAAAA,wBAAwBC,OACzCC,cAAeC,EAAAA,kBAAkBC,KACjC5C,YAAcuR,QAAS6L,GAAoB3L,YAAayxC,MA0J3CpkD,EAAjB,EAAiBC,EAAAA,OAAOojD,KACPrjD,EAAjB,EAAiBG,EAAAA,YACAH,EAAjB,EAAiBG,EAAAA,YACAH,EAAjB,EAAiBG,EAAAA,YAAYH,EAA7B,EAA6BC,EAAAA,OAAOwwC,EAAAA,WANpCrwC,EAAA,qBAAiCC,EAAAA,QACDE,EAAAA,OACUE,EAAAA,iBAA1C1J,OAEiD8rD,EAAAA,YACRniD,EAAAA,eAAzC3J,UA1Ja8sD,MCzGA6B,IACTjzC,QAASC,EAAAA,kBACTC,YAAaC,EAAAA,WAAW,WAAM,MAAA+yC,MAC9B9yC,OAAO,GAIE+yC,IACTnzC,QAASgY,EAAAA,cACT9X,YAAaC,EAAAA,WAAW,WAAM,MAAA+yC,MAC9B9yC,OAAO,GASXgzC,GAAA,WAII,QAAJA,GAEejY,EAEAkY,GAFA1uD,KAAfw2C,OAAeA,EAEAx2C,KAAf0uD,cAAeA,EACP1uD,KAAKG,MAAQH,KAAKw2C,OAAOr2C,MAEjC,MAAAsuD,MAwBAF,GAAA,WA2HI,QAAJA,GACejtD,EACY0nD,EAC0B2F,EACzBC,GAJxB,GAAJ5tD,GAAAhB,IAMQ,IALOA,KAAfsB,WAAeA,EACYtB,KAA3BgpD,YAA2BA,EAC0BhpD,KAArD2uD,YAAqDA,EACzB3uD,KAA5B4uD,UAA4BA,EA5BL5uD,KAAvB6uD,WACQ,GAAIl1C,GAAAA,aAGW3Z,KAAvB8uD,UACQ,GAAIn1C,GAAAA,aAGR3Z,KAAJiiB,YAAkB,GAAItI,GAAAA,aAGlB3Z,KAAJ0sD,eAAqB,GAAI/yC,GAAAA,aAMb3Z,KAAZ+uD,uBAAqC9yB,EAAAA,aAAaC,MAEtCl8B,KAAZgvD,mBAAiC/yB,EAAAA,aAAaC,MAGlCl8B,KAAZivD,gBAA6B,EAsBzBjvD,KAAJmuB,UAAgB,aAkFJnuB,KAAZkvD,YAAgD,aAGpClvD,KAAZosB,kBAAgC,aAIpBpsB,KAAZstB,eAA0C,WAClC,MAAOtsB,GAAKiuD,eACR,MAASE,mBAAqB18B,KAAMzxB,EAAKM,WAAWoD,cAAcvE,SAIlEH,KAAZovD,aAAwC,SAACjiC,GACjC,GAAMkiC,GAAeruD,EAAKgqD,mBAAmBhqD,EAAKgoD,YAAYmE,YAAYhgC,EAAQhtB,OAElF,QAASa,EAAKwiB,MAAQ6rC,GAClBruD,EAAKgoD,YAAYsG,YAAYtuD,EAAKwiB,IAAK6rC,IAAiB,EACxD,MAASE,iBAAmB/rC,IAAKxiB,EAAKwiB,IAAKgsC,OAAQH,KAInDrvD,KAAZyvD,aAAwC,SAACtiC,GACjC,GAAMkiC,GAAeruD,EAAKgqD,mBAAmBhqD,EAAKgoD,YAAYmE,YAAYhgC,EAAQhtB,OAElF,QAASa,EAAKqpB,MAAQglC,GAClBruD,EAAKgoD,YAAYsG,YAAYtuD,EAAKqpB,IAAKglC,IAAiB,EACxD,MAASK,iBAAmBrlC,IAAKrpB,EAAKqpB,IAAKmlC,OAAQH,KAInDrvD,KAAZ2vD,gBAA2C,SAACxiC,GACpC,GAAMkiC,GAAeruD,EAAKgqD,mBAAmBhqD,EAAKgoD,YAAYmE,YAAYhgC,EAAQhtB,OAElF,OAAQa,GAAK2oD,YAAe0F,IAAgBruD,EAAK2oD,WAAW0F,IAC/CO,oBAAoB,GAA7B,MAWA5vD,KAAZ4sB,UACQQ,EAAAA,WAAWC,SACPrtB,KAAKstB,eACLttB,KAAKovD,aACLpvD,KAAKyvD,aACLzvD,KAAK2vD,mBAnJJ3vD,KAAKgpD,YACN,KAAM+D,GAA2B,cAGrC,KAAK/sD,KAAK2uD,YACN,KAAM5B,GAA2B,kBAIrC/sD,MAAKgvD,mBAAqBhG,EAAY6G,cAAcxtD,UAAU,WAC1DrB,EAAKb,MAAQa,EAAKb,QA3I9B2vD,EAAavB,EAGT5uD,OAAJC,eAAQ2uD,EAARzuD,UAAA,gBAAAI,IAAI,SAAiBC,GADjB,GAAJa,GAAAhB,IAEaG,KAILH,KAAKmuD,WAAahuD,EAClBH,KAAKmuD,WAAWR,cAAc3tD,MAC9BA,KAAK+uD,uBAAuBl4C,cAE5B7W,KAAK+uD,uBAAyB/uD,KAAKmuD,WAAWxB,gBAAgBtqD,UAAU,SAAC+e,GACrEpgB,EAAKb,MAAQihB,EACbpgB,EAAKkuD,YAAY9tC,GACjBpgB,EAAKmtB,YACLntB,EAAK8tD,UAAU9nD,KAAK,GAAIynD,IAAuBztD,EAAMA,EAAKM,WAAWoD,gBACrE1D,EAAK6tD,WAAW7nD,KAAK,GAAIynD,IAAuBztD,EAAMA,EAAKM,WAAWoD,oDAM9E/E,OAAJC,eAAQ2uD,EAARzuD,UAAA,sBAAAI,IAAI,SAAuBC,GACnBH,KAAK2pD,WAAaxpD,EAClBH,KAAKosB,qDAKTzsB,OAAJC,eAAQ2uD,EAARzuD,UAAA,SAAAC,IAAI,WACI,MAAOC,MAAKkf,QAGpBhf,IAAI,SAAUC,GAENA,EAAQH,KAAKgpD,YAAYmE,YAAYhtD,GACrCH,KAAKivD,gBAAkB9uD,GAASH,KAAKgpD,YAAYmC,QAAQhrD,GAEzDA,EAAQH,KAAKgrD,mBAAmB7qD,EAChC,IAAM4vD,GAAU/vD,KAAKG,KACrBH,MAAKkf,OAAS/e,EACdH,KAAK4tB,YAAYztB,GAEZH,KAAKgpD,YAAYqB,SAAS0F,EAAS5vD,IACpCH,KAAKiiB,YAAYjb,KAAK7G,oCAM9BR,OAAJC,eAAQ2uD,EAARzuD,UAAA,OAAAC,IAAI,WACI,MAAOC,MAAKgwD,MAGpB9vD,IAAI,SAAQC,GACJH,KAAKgwD,KAAOhwD,KAAKgrD,mBAAmBhrD,KAAKgpD,YAAYmE,YAAYhtD,IACjEH,KAAKosB,qDAKTzsB,OAAJC,eAAQ2uD,EAARzuD,UAAA,OAAAC,IAAI,WACI,MAAOC,MAAKiwD,MAGpB/vD,IAAI,SAAQC,GACJH,KAAKiwD,KAAOjwD,KAAKgrD,mBAAmBhrD,KAAKgpD,YAAYmE,YAAYhtD,IACjEH,KAAKosB,qDAKTzsB,OAAJC,eAAQ2uD,EAARzuD,UAAA,YAAAC,IAAI,WACI,QAASC,KAAKmU,WAGtBjU,IAAI,SAAaC,GACT,GAAMwqB,GAAWhqB,EAAAA,sBAAsBR,GACjCsE,EAAUzE,KAAKsB,WAAWoD,aAE5B1E,MAAKmU,YAAcwW,IACnB3qB,KAAKmU,UAAYwW,EACjB3qB,KAAK0sD,eAAe1lD,KAAK2jB,IAIzBA,GAAYlmB,EAAQyrD,MAIpBzrD,EAAQyrD,wCAuDhB3B,EAAJzuD,UAAAqF,YAAI,WACInF,KAAK+uD,uBAAuBl4C,cAC5B7W,KAAKgvD,mBAAmBn4C,cACxB7W,KAAKiiB,YAAYpc,WACjB7F,KAAK0sD,eAAe7mD,YAIxB0oD,EAAJzuD,UAAA+sB,0BAAI,SAA0B7R,GACtBhb,KAAKosB,kBAAoBpR,GAI7BuzC,EAAJzuD,UAAA4sB,SAAI,SAASL,GACL,MAAOrsB,MAAK4sB,UAAY5sB,KAAK4sB,UAAUP,GAAK,MAIhDkiC,EAAJzuD,UAAAgb,WAAI,SAAW3a,GACPH,KAAKG,MAAQA,GAIjBouD,EAAJzuD,UAAAib,iBAAI,SAAiBC,GACbhb,KAAKkvD,YAAcl0C,GAIvBuzC,EAAJzuD,UAAAmb,kBAAI,SAAkBD,GACdhb,KAAKmuB,UAAYnT,GAIrBuzC,EAAJzuD,UAAAob,iBAAI,SAAiBC,GACbnb,KAAKqG,SAAW8U,GAGpBozC,EAAJzuD,UAAAm5B,UAAI,SAAUzzB,GAEN,GAAM2qD,GAAiB3qD,EAAMwzB,QAAUxzB,EAAMQ,UAAY0yB,EAAAA,UAErD14B,MAAKmuD,YAAcgC,IAAmBnwD,KAAKsB,WAAWoD,cAAc0rD,WACpEpwD,KAAKmuD,WAAWv+C,OAChBpK,EAAM8Y,mBAIdiwC,EAAJzuD,UAAA2uB,QAAI,SAAQtuB,GACJ,GAAIiqD,GAAOpqD,KAAKgpD,YAAYqH,MAAMlwD,EAAOH,KAAK2uD,YAAY0B,MAAMvB,UAChE9uD,MAAKivD,gBAAkB7E,GAAQpqD,KAAKgpD,YAAYmC,QAAQf,GACxDA,EAAOpqD,KAAKgrD,mBAAmBZ,GAE1BpqD,KAAKgpD,YAAYqB,SAASD,EAAMpqD,KAAKkf,UACtClf,KAAKkf,OAASkrC,EACdpqD,KAAKkvD,YAAY9E,GACjBpqD,KAAKiiB,YAAYjb,KAAKojD,GACtBpqD,KAAK8uD,UAAU9nD,KAAK,GAAIynD,IAAuBzuD,KAAMA,KAAKsB,WAAWoD,kBAI7E6pD,EAAJzuD,UAAAoiB,SAAI,WACIliB,KAAK6uD,WAAW7nD,KAAK,GAAIynD,IAAuBzuD,KAAMA,KAAKsB,WAAWoD,iBAI1E6pD,EAAJzuD,UAAAutD,gBAAI,WACI,MAAOrtD,MAAK4uD,UAAY5uD,KAAK4uD,UAAU73B,UAAQvmB,IAInD+9C,EAAJzuD,UAAAsuB,OAAI,WAEQpuB,KAAKG,OACLH,KAAK4tB,YAAY5tB,KAAKG,OAG1BH,KAAKmuB,aA0CDogC,EAAZzuD,UAAA8tB,YAAI,SAAoBztB,GAChBH,KAAKsB,WAAWoD,cAAcvE,MAC1BA,EAAQH,KAAKgpD,YAAYsH,OAAOnwD,EAAOH,KAAK2uD,YAAY4B,QAAQzB,WAAa,IAiB7EP,EAAZzuD,UAAAkrD,mBAAI,SAA2BC,GACvB,MAAQjrD,MAAKgpD,YAAYkC,eAAeD,IAAQjrD,KAAKgpD,YAAYmC,QAAQF,GAAQA,EAAM,WAE/F,OA3RI/iD,IADCE,EAAAA,QACLY,EAAA,cAA4ByjD,IAA5BzjD,EAAA,qBAA4ByjD,MAgB5B8B,EAAAzuD,UAAA,eAAA,MAIIoI,GADCE,EAAAA,qEAILmmD,EAAAzuD,UAAA,qBAAA,MAIIoI,GADCE,EAAAA,iEAGLmmD,EAAAzuD,UAAA,QAAA,MAmBIoI,GADCE,EAAAA,iEAGLmmD,EAAAzuD,UAAA,MAAA,MASIoI,GADCE,EAAAA,iEAGLmmD,EAAAzuD,UAAA,MAAA,MASIoI,GADCE,EAAAA,mEAGLmmD,EAAAzuD,UAAA,WAAA,MAwBcoI,GAATC,EAAAA,SAALa,EAAA,cAAmC2Q,EAAAA,eACnC40C,EAAAzuD,UAAA,iBAAA,IAGcoI,GAATC,EAAAA,SAALa,EAAA,cAAkC2Q,EAAAA,eAClC40C,EAAAzuD,UAAA,gBAAA,IAxGayuD,EAAbuB,EAAA5nD,GApBCI,EAAAA,WACGC,SAAU,sBACVuB,WACIwkD,GACAE,IACEnzC,QAASkY,GAAyBhY,YAAau0C,IAErDrnD,MACI+nD,uBAAwB,OACxBC,mBAAoB,gDACpBC,aAAc,0CACdC,aAAc,0CACdxlC,aAAc,WACdgI,UAAW,+BACXy9B,WAAY,aACZ/pC,SAAU,WACVne,YAAa,qBAEjBF,SAAU,sBA+HLI,EAAT,EAASG,EAAAA,YACAH,EAAT,EAASG,EAAAA,YAAYH,EAArB,EAAqBC,EAAAA,OAAO0iD,EAAAA,kBACnB3iD,EAAT,EAASG,EAAAA,YAHTC,EAAA,qBAA2BE,EAAAA,WACauiD,EAAAA,YAAxC9rD,OAEuC8nB,MA/H1B8mC,MC9DbsC,GAAA,WAAA,QAAAA,MACA,MADaA,GAAb3oD,GAHCI,EAAAA,WACGC,SAAU,8BAEDsoD,MAqBbC,GAAA,WA2BI,QAAJA,GACeC,EACChmD,EACeimD,GAFhBhxD,KAAf+wD,KAAeA,EACC/wD,KAAhB+K,kBAAgBA,EANJ/K,KAAZuhB,aAA2B0a,EAAAA,aAAaC,KAShC,IAAM+0B,GAAiB/+B,OAAO8+B,EAC9BhxD,MAAKmZ,SAAY83C,GAAqC,IAAnBA,EAAwBA,EAAiB,KAwCpF,MArEItxD,QAAJC,eAAQkxD,EAARhxD,UAAA,YAAAC,IAAI,WACI,WAA0ByQ,KAAnBxQ,KAAKmU,UAA0BnU,KAAKmuD,WAAW9nD,WAAarG,KAAKmU,WAGhFjU,IAAI,SAAaC,GACTH,KAAKmU,UAAYxT,EAAAA,sBAAsBR,oCA2B3C2wD,EAAJhxD,UAAAkT,YAAI,SAAYC,GACJA,EAAQk7C,YACRnuD,KAAKkxD,qBAIbJ,EAAJhxD,UAAAqF,YAAI,WACInF,KAAKuhB,aAAa1K,eAGtBi6C,EAAJhxD,UAAAu1B,mBAAI,WACIr1B,KAAKkxD,qBAGTJ,EAAJhxD,UAAA8P,KAAI,SAAKpK,GACGxF,KAAKmuD,aAAenuD,KAAKqG,WACzBrG,KAAKmuD,WAAWv+C,OAChBpK,EAAMiV,oBAINq2C,EAAZhxD,UAAAoxD,kBAAI,WAAA,GAAJlwD,GAAAhB,KACcmxD,EAAqBnxD,KAAKmuD,WAAanuD,KAAKmuD,WAAWzB,eAAiB9sB,EAAAA,KACxEwxB,EAAgBpxD,KAAKmuD,YAAcnuD,KAAKmuD,WAAWjB,gBACrDltD,KAAKmuD,WAAWjB,gBAAgBR,eAAiB9sB,EAAAA,KAC/CyxB,EAAoBrxD,KAAKmuD,WAC3Bz/C,EAAAA,MAAM1O,KAAKmuD,WAAW9yB,aAAcr7B,KAAKmuD,WAAW/5B,cACpDwL,EAAAA,IAEJ5/B,MAAKuhB,aAAa1K,cAClB7W,KAAKuhB,aAAe7S,EAAAA,MAChB1O,KAAK+wD,KAAK99C,QACVk+C,EACAC,EACAC,GACFhvD,UAAU,WAAM,MAAArB,GAAK+J,kBAAkB5G,kBAnE7C+D,GADCE,EAAAA,mEAGL0oD,EAAAhxD,UAAA,WAAA,MAOkBoI,GAAbE,EAAAA,MAAM,OAAXY,EAAA,cAA8ByjD,KAA9BqE,EAAAhxD,UAAA,iBAAA,IAGaoI,GAARE,EAAAA,iCAAL0oD,EAAAhxD,UAAA,eAAA,IAG0CoI,GAArCie,EAAAA,aAAa0qC,IAAlB7nD,EAAA,cAAsD6nD,KAAtDC,EAAAhxD,UAAA,iBAAA,IAGyBoI,GAApB8D,EAAAA,UAAU,UAAfhD,EAAA,cAAiCsoD,KAAjCR,EAAAhxD,UAAA,aAAA,IAtBagxD,EAAb5oD,GAjBCgE,EAAAA,WACG3D,SAAU,uBACV4D,SAAJ,gZACIC,QAAS,q4BACT3D,MACIqE,MAAO,uBAGP2Z,kBAAmB,KACnB8qC,sCAAuC,kCACvCC,kBAAmB,6CACnB5qC,UAAW,kBAEfpe,SAAU,qBACVgE,cAAeC,EAAAA,kBAAkBC,KACjCL,gBAAiBC,EAAAA,wBAAwBC,SAgCpC3D,EAAT,EAASsT,EAAAA,UAAU,aAFnBlT,EAAA,qBAAqBwiD,GACch+C,EAAAA,kBAAnC4O,UA7Ba00C,MCoBbW,GAAA,WAAA,QAAAA,MACA,MADaA,GAAbvpD,GA7CCsB,EAAAA,UACGG,SACIC,EAAAA,aACA2wC,GACA1wC,EAAAA,cACAyS,EAAAA,WACAzI,EAAAA,aACA0mC,GACAxmC,IAEJrK,SACI0/C,GACAsI,GACAjF,GACAH,GACAiC,GACAuC,GACAD,GACAzF,GACAC,GACAC,GACAqG,IAEJloD,cACI2/C,GACAsI,GACAjF,GACAH,GACAiC,GACAuC,GACAD,GACAzF,GACAC,GACAC,GACAqG,IAEJ7nD,WACI0hD,GACAU,IAEJliD,iBACIsiD,GACAqF,OAGKF,MCjDbG,GAAA,WAfA,QAAAA,KA0BY5xD,KAAZ6xD,WAAiC,EAYrB7xD,KAAZ8xD,QAA8B,EAC9B,MArBInyD,QAAJC,eAAQgyD,EAAR9xD,UAAA,YAAAC,IAAI,WACI,MAAOC,MAAK6xD,WAGpB3xD,IAAI,SAAaC,GACTH,KAAK6xD,UAAYlxD,EAAAA,sBAAsBR,oCAO3CR,OAAJC,eAAQgyD,EAAR9xD,UAAA,SAAAC,IAAI,WACI,MAAOC,MAAK8xD,QAGpB5xD,IAAI,SAAUC,GACNH,KAAK8xD,OAASnxD,EAAAA,sBAAsBR,oCAjBxC+H,GADCE,EAAAA,mEAGLwpD,EAAA9xD,UAAA,WAAA,MAUIoI,GADCE,EAAAA,mEAGLwpD,EAAA9xD,UAAA,QAAA,MAjBa8xD,EAAb1pD,GAfCgE,EAAAA,WACG3D,SAAU,aACVE,MACIqE,MAAO,aACPE,KAAM,YACN+kD,0BAA2B,uCAC3BC,8BAA+B,WAC/BC,2BAA4B,SAEhC9lD,SAAU,GACVC,QAAS,wSACTI,cAAeC,EAAAA,kBAAkBC,KACjCL,gBAAiBC,EAAAA,wBAAwBC,OACzCwK,qBAAqB,KAEZ66C,MCRbM,GAAA,WAAA,QAAAA,MACA,MADaA,GAAbhqD,GALCsB,EAAAA,UACGG,SAAUC,EAAAA,cACVF,SAAUkoD,IACVnoD,cAAemoD,OAENM,MCUbzR,GAAA,WAOI,QAAJA,GACgB0R,EACAC,EACAC,EACAC,EACAhR,EACkBiR,GALlBvyD,KAAhBmyD,UAAgBA,EACAnyD,KAAhBoyD,0BAAgBA,EACApyD,KAAhBqyD,QAAgBA,EACAryD,KAAhBsyD,UAAgBA,EACAtyD,KAAhBshD,kBAAgBA,EACkBthD,KAAlCuyD,UAAkCA,EAV9BvyD,KAAJ0iD,UAAgB,GAAIz0C,GAAAA,QAqDpB,MArCIwyC,GAAJ3gD,UAAA2G,OAAI,SAAO+rD,OAAX,KAAAA,IAAWA,MACExyD,KAAKqiD,UACNriD,KAAKqiD,QAAU,GAAIjyC,GAAAA,eAAepQ,KAAKmyD,UAAWnyD,KAAKshD,oBAG3DthD,KAAKqD,SAEArD,KAAKyyD,UACNzyD,KAAKyyD,QAAU,GAAIC,GAAAA,gBAAgB1yD,KAAKuyD,UAAUI,cAAc,OAC5D3yD,KAAKoyD,0BAA2BpyD,KAAKqyD,QAASryD,KAAKsyD,WAG3D,IAAM7tD,GAAuBzE,KAAKmyD,UAAU7wD,WAAWoD,aAKvDD,GAAQmuD,WAAYC,aAAa7yD,KAAKyyD,QAAQK,cAAeruD,GAC7DzE,KAAKqiD,QAAQ57C,OAAOzG,KAAKyyD,QAASD,GAClCxyD,KAAK0iD,UAAU98C,QAOnB66C,EAAJ3gD,UAAAuD,OAAI,WACQrD,KAAKqiD,QAAQ2L,YACbhuD,KAAKqiD,QAAQh/C,UAIrBo9C,EAAJ3gD,UAAAqF,YAAI,WACQnF,KAAKyyD,SACLzyD,KAAKyyD,QAAQrtD,WArDZq7C,EAAbv4C,GAHCI,EAAAA,WACGC,SAAU,mCAeLK,EAAT,EAASC,EAAAA,OAAOwwC,EAAAA,WALhBrwC,EAAA,qBAA2BmH,EAAAA,YACgButB,EAAAA,yBAClBq1B,EAAAA,eACEpgD,EAAAA,SACQtJ,EAAAA,iBAAnC1J,UAZa8gD,MCTAK,GAAoB,GAAI1xC,GAAAA,eAAgC,qBCSrE4jD,GAAA,WAAA,QAAAA,MAAiC,MAAjCA,MACaC,GACTt6C,EAAcq6C,IAqBlBxS,GAAA,SAAAxnC,GAKI,QAAJwnC,GACgBjoC,EACU26B,EACVj6B,EACuCi6C,GAJnD,GAAJlyD,GAKQgY,EALRI,KAAApZ,OAAAA,WACgBgB,GAAhBuX,YAAgBA,EAEAvX,EAAhBiY,cAAgBA,EACuCjY,EAAvDkyD,qBAAuDA,EAG3Cj6C,GAIAA,EAAcc,QAAQ/Y,EAAKuX,YAAY7T,eAAe,GAGtDwuD,GAAwBA,EAAqB3T,SAC7C2T,EAAqB3T,QAAQv+C,GAGjCA,EAAKuxD,UAAYrf,IA8DzB,MArFoCl5B,GAApCwmC,EAAAxnC,GA2BIwnC,EAAJ1gD,UAAAqa,MAAI,SAAMjT,OAAV,KAAAA,IAAUA,EAAV,WACYlH,KAAKiZ,cACLjZ,KAAKiZ,cAAcmB,SAASpa,KAAKumD,kBAAmBr/C,GAEpDlH,KAAKumD,kBAAkBpsC,SAI/BqmC,EAAJ1gD,UAAAqF,YAAI,WACQnF,KAAKiZ,eACLjZ,KAAKiZ,cAAciB,eAAela,KAAKuY,YAAY7T,eAGnD1E,KAAKkzD,sBAAwBlzD,KAAKkzD,qBAAqBxT,YACvD1/C,KAAKkzD,qBAAqBxT,WAAW1/C,OAK7CwgD,EAAJ1gD,UAAAqzD,aAAI,WACI,MAAOnzD,MAAKqG,SAAW,KAAO,KAIlCm6C,EAAJ1gD,UAAAymD,gBAAI,WACI,MAAOvmD,MAAKuY,YAAY7T,eAI5B87C,EAAJ1gD,UAAAszD,eAAI,SAAe5tD,GACPxF,KAAKqG,WACLb,EAAM8Y,iBACN9Y,EAAMiV,oBAKd+lC,EAAJ1gD,UAAAmmD,SAAI,WACI,GAAMxhD,GAAuBzE,KAAKuY,YAAY7T,cAExC2uD,EAAerzD,KAAKuyD,UAAYvyD,KAAKuyD,UAAUe,UAAY,EAC7DC,EAAS,EAEb,IAAI9uD,EAAQ+uD,WAMR,IAAK,GALCC,GAAShvD,EAAQ+uD,WAAWriD,OAKzBwyB,EAAI,EAAGA,EAAI8vB,EAAQ9vB,IACpBl/B,EAAQ+uD,WAAW7vB,GAAG+vB,WAAaL,IACnCE,GAAU9uD,EAAQ+uD,WAAW7vB,GAAGtD,YAK5C,OAAOkzB,GAAOthC,QAnFTuuB,EAAbt4C,GAfCgE,EAAAA,WACG3D,SAAU,uCACVC,SAAU,iBACVkT,QAAS,YACTjT,MACIuE,KAAM,gBACNF,MAAO,oBACP2Z,kBAAmB,iBACnB0lB,kBAAmB,mBACnB74B,UAAW,0BAEfjH,gBAAiBC,EAAAA,wBAAwBC,OACzCC,cAAeC,EAAAA,kBAAkBC,KACjCP,SAAU,8BASLvD,EAAT,EAASC,EAAAA,OAAOwwC,EAAAA,WAEPzwC,EAAT,EAASC,EAAAA,OAAOi4C,KAAoBl4C,EAApC,EAAoCG,EAAAA,YAHpCC,EAAA,qBAA6BE,EAAAA,WAA7BvJ,OAE+Bwc,EAAAA,aAF/Bxc,UANa6gD,IAAuByS,IC1BvBtS,IAYTC,kBAAmB9kC,EAAAA,QAAQ,qBACvBtE,EAAAA,MAAM,OAAQ5S,EAAAA,OACV+mD,QAAS,EACT/3B,UAAW,gBAEf5X,EAAAA,WAAW,gBAAiBqe,EAAAA,OACxBs5B,EAAAA,MAAM,wBAAyB13C,EAAAA,QAAQ,cAAerX,EAAAA,OAAO+mD,QAAS,MACtE1vC,EAAAA,QAAQ,kCAAmCrX,EAAAA,OAAOgvB,UAAW,iBAEjE5X,EAAAA,WAAW,YAAaC,EAAAA,QAAQ,mBAAoBrX,EAAAA,OAAO+mD,QAAS,QAQxE9K,YAAa/kC,EAAAA,QAAQ,eAEjBtE,EAAAA,MAAM,UAAW5S,EAAAA,OAAO+mD,QAAS,KACjC3vC,EAAAA,WAAW,aACPpX,EAAAA,OAAO+mD,QAAS,IAChB1vC,EAAAA,QAAQ,oDAKP4kC,GAAcF,GAAqBE,YAEnCD,GAAoBD,GAAqBC,kBzBHzCG,GACT,GAAI3xC,GAAAA,eAAyC,+BACzCwkD,WAAY,OACZlb,QAASmb,IA4BjBzU,GAAA,WA8GI,QAAJA,GACgB7mC,EACAyd,EACqC89B,GAFrC9zD,KAAhBuY,YAAgBA,EACAvY,KAAhBg2B,QAAgBA,EACqCh2B,KAArD8zD,gBAAqDA,EArDjD9zD,KAAJigD,cAGIjgD,KAAJmgD,qBAA6C,OAGzCngD,KAAJsgD,eAAqB,GAAIryC,GAAAA,QASZjO,KAAb2R,cAAqC3R,KAAK8zD,gBAAgBniD,cAiBnC3R,KAAvB8O,OACQ,GAAI6K,GAAAA,aAGA3Z,KAAZ+zD,WAA4C/zD,KAAK8zD,gBAAgBhU,UACrD9/C,KAAZg0D,WAA4Ch0D,KAAK8zD,gBAAgB/T,UAGrD//C,KAAZw/C,UAGYx/C,KAAZy/C,aAA2B,GAAIxxC,GAAAA,QAGnBjO,KAAZi0D,iBAA+Bh4B,EAAAA,aAAaC,MAChCl8B,KAAZk0D,gBAAuCl0D,KAAK8zD,gBAAgBpQ,eAChD1jD,KAAZm0D,aAAgDn0D,KAAK8zD,gBAAgBpiD,YA5GrEgvC,EAAatB,EAITz/C,OAAJC,eAAQw/C,EAARt/C,UAAA,aAAAC,IAAI,WAAqC,MAAOC,MAAK+zD,YACrD7zD,IAAI,SAAcC,GACI,WAAVA,GAAgC,UAAVA,GACtBi0D,IAGJp0D,KAAK+zD,WAAa5zD,EAClBH,KAAK2/C,sDAKThgD,OAAJC,eAAQw/C,EAARt/C,UAAA,aAAAC,IAAI,WAAqC,MAAOC,MAAKg0D,YACrD9zD,IAAI,SAAcC,GACI,UAAVA,GAA+B,UAAVA,GACrBk0D,IAGJr0D,KAAKg0D,WAAa7zD,EAClBH,KAAK2/C,sDAKThgD,OAAJC,eAAQw/C,EAARt/C,UAAA,kBAAAC,IAAI,WAAgC,MAAOC,MAAKk0D,iBAChDh0D,IAAI,SAAmBC,GACfH,KAAKk0D,gBAAkBvzD,EAAAA,sBAAsBR,oCAKjDR,OAAJC,eAAQw/C,EAARt/C,UAAA,eAAAC,IAAI,WAAyC,MAAOC,MAAKm0D,cACzDj0D,IAAI,SAAgBC,GACZH,KAAKm0D,aAAexzD,EAAAA,sBAAsBR,oCAU9CR,OAAJC,eAAQw/C,EAARt/C,UAAA,cAAAI,IAAI,SAAe8/C,GACPA,GAAWA,EAAQ7uC,SACnBnR,KAAKigD,WAAaD,EAAQj7C,MAAM,KAAKie,OAAO,SAACioC,EAAUqJ,GAGnD,MAFArJ,GAAIqJ,IAAa,EAEVrJ,OAGXjrD,KAAKuY,YAAY7T,cAAc4vD,UAAY,qCA4DnDlV,EAAJt/C,UAAAmF,SAAI,WACIjF,KAAK2/C,sBAGTP,EAAJt/C,UAAAu1B,mBAAI,WAAA,GAAJr0B,GAAAhB,IACQA,MAAKs/C,YAAc,GAAIvf,GAAAA,gBAAgC//B,KAAKojB,OAAO4c,WAAWpG,gBAC9E55B,KAAKi0D,iBAAmBj0D,KAAKs/C,YAAY/+B,OAAOle,UAAU,WAAM,MAAArB,GAAK8N,OAAO9H,KAAK,UAGrFo4C,EAAJt/C,UAAAqF,YAAI,WACInF,KAAKi0D,iBAAiBp9C,cACtB7W,KAAK8O,OAAOjJ,YAIhBu5C,EAAJt/C,UAAAy0D,eAAI,SAAe/uD,GAGX,OAAQA,EAAMQ,SACV,IAAKC,GAAAA,OACDjG,KAAK8O,OAAO9H,KAAK,UACjB,MACJ,KAAK2xB,GAAAA,SACL,IAAKD,GAAAA,WACD14B,KAAKs/C,YAAYkV,eAAe,YAChCx0D,KAAKs/C,YAAYrmB,UAAUzzB,EAC3B,MACJ,SAEIxF,KAAKs/C,YAAYrmB,UAAUzzB,KAQvC45C,EAAJt/C,UAAA+iD,eAAI,SAAe37C,GAAf,GAAJlG,GAAAhB,SAAA,KAAAkH,IAAmBA,EAAnB,WAEYlH,KAAKsiD,YACLtiD,KAAKg2B,QAAQC,SAAShnB,eACjB/M,KAAKqM,EAAAA,KAAK,IACVlM,UAAU,WAAM,MAAArB,GAAKs+C,YAAYkV,eAAettD,GAAQub,uBAE7DziB,KAAKs/C,YAAYkV,eAAettD,GAAQub;4DAQhD28B,EAAJt/C,UAAAu/C,gBAAI,WACIr/C,KAAKs/C,YAAY3/B,eAAe,IAOpCy/B,EAAJt/C,UAAAy/C,QAAI,SAAQ3pC,IAM+B,IAA/B5V,KAAKw/C,OAAOjtC,QAAQqD,KACpB5V,KAAKw/C,OAAO9uC,KAAKkF,GACjB5V,KAAKy/C,aAAa75C,KAAK5F,KAAKw/C,UAQpCJ,EAAJt/C,UAAA4/C,WAAI,SAAW9pC,GACP,GAAMtD,GAAQtS,KAAKw/C,OAAOjtC,QAAQqD,EAE9B5V,MAAKw/C,OAAOjtC,QAAQqD,IAAS,IAC7B5V,KAAKw/C,OAAOhtC,OAAOF,EAAO,GAC1BtS,KAAKy/C,aAAa75C,KAAK5F,KAAKw/C,UAWpCJ,EAAJt/C,UAAA6/C,mBAAI,SAAmBC,EAA0CC,OAAjE,KAAAD,IAAuBA,EAA0B5/C,KAAK8/C,eAAtD,KAAAD,IAAiEA,EAA0B7/C,KAAK+/C,UACxF,IAAMC,GAAUhgD,KAAKigD,UACrBD,GAAQ,sBAAiC,WAATJ,EAChCI,EAAQ,qBAAgC,UAATJ,EAC/BI,EAAQ,qBAAgC,UAATH,EAC/BG,EAAQ,qBAAgC,UAATH,GAInCT,EAAJt/C,UAAAogD,gBAAI,WACIlgD,KAAKmgD,qBAAuB,SAIhCf,EAAJt/C,UAAAsgD,gBAAI,WACIpgD,KAAKmgD,qBAAuB,QAIhCf,EAAJt/C,UAAAugD,iBAAI,SAAiB76C,GACbxF,KAAKsgD,eAAe16C,KAAKJ,GACzBxF,KAAKugD,cAAe,EAQE,UAAlB/6C,EAAM8I,SAA4D,IAArCtO,KAAKs/C,YAAY38B,kBAC9Cnd,EAAMf,QAAQme,UAAY,SAGtC,OA5OI1a,IADCE,EAAAA,iEACLg3C,EAAAt/C,UAAA,YAAA,MAYIoI,GADCE,EAAAA,iEACLg3C,EAAAt/C,UAAA,YAAA,MAYIoI,GADCE,EAAAA,mEACLg3C,EAAAt/C,UAAA,iBAAA,MAOIoI,GADCE,EAAAA,iEACLg3C,EAAAt/C,UAAA,cAAA,MAYIoI,GADCE,EAAAA,MAAM,kEAWXg3C,EAAAt/C,UAAA,aAAA,MAkBaoI,GAARE,EAAAA,iCAALg3C,EAAAt/C,UAAA,oBAAA,IAG4BoI,GAAvB8D,EAAAA,UAAUmE,EAAAA,aAAfnH,EAAA,cAAyCmH,EAAAA,cAAzCivC,EAAAt/C,UAAA,kBAAA,IAKqCoI,GAAhCqyB,EAAAA,gBAAgBimB,IAArBx3C,EAAA,cAA4Ckd,EAAAA,YAA5Ck5B,EAAAt/C,UAAA,YAAA,IAMqCoI,GAAhCie,EAAAA,aAAas6B,IAAlBz3C,EAAA,cAAkDy3C,KAAlDrB,EAAAt/C,UAAA,kBAAA,IAGcoI,GAATC,EAAAA,SAALa,EAAA,cAA+B2Q,EAAAA,eAC/BylC,EAAAt/C,UAAA,aAAA,IA7Fas/C,EAAbsB,EAAAx4C,GAfCgE,EAAAA,WACG3D,SAAU,cACV4D,SAAJ,gYACIC,QAAS,+mBACTC,gBAAiBC,EAAAA,wBAAwBC,OACzCC,cAAeC,EAAAA,kBAAkBC,KACjClE,SAAU,aACVmE,YACIg0C,GAAqBC,kBACrBD,GAAqBE,aAEzB/2C,YACMuR,QAASylC,GAAmBvlC,YAAamlC,MAoH1C93C,EAAT,EAASC,EAAAA,OAAOk4C,KAFhB/3C,EAAA,qBAA6BE,EAAAA,WACJC,EAAAA,OAAzBxJ,UAhHay/C,MCrDA4B,GACT,GAAI5xC,GAAAA,eAAsC,+BAQjC6xC,IACT5lC,QAAS2lC,GACTjjC,MAAO9U,EAAAA,SACP+U,WAAYkjC,GAehBC,GAAA,WAkCI,QAAJA,GAAwBC,EACAC,EACAC,EACqCC,EACzBjrB,EACZrd,GALAjZ,KAAxBohD,SAAwBA,EACAphD,KAAxBqhD,SAAwBA,EACArhD,KAAxBshD,kBAAwBA,EACqCthD,KAA7DuhD,gBAA6DA,EACzBvhD,KAApCs2B,KAAoCA,EACZt2B,KAAxBiZ,cAAwBA,EAzBpBjZ,KAAJwhD,UAA0C,KASnBxhD,KAAvByhD,eAA4D,GAAI9nC,GAAAA,aAGzC3Z,KAAvB0hD,eAA4D,GAAI/nC,GAAAA,aAGpD3Z,KAAZ2hD,YAA6C,KACjC3hD,KAAZ4hD,SAA+B,EACnB5hD,KAAZ6hD,mBAAiC5lB,EAAAA,aAAaC,MAClCl8B,KAAZ8hD,mBAAiC7lB,EAAAA,aAAaC,MAqR9C,MAlTIv8B,QAAJC,eAAQuhD,EAARrhD,UAAA,UAAAC,IAAI,WACI,MAAOC,MAAK4hD,yCAIhBjiD,OAAJC,eAAQuhD,EAARrhD,UAAA,OAAAC,IAAI,WACI,MAAOC,MAAKs2B,MAA4B,QAApBt2B,KAAKs2B,KAAKn2B,MAAkB,MAAQ,uCAgC5DghD,EAAJrhD,UAAAmF,SAAI,WACIjF,KAAK+hD,SAASjzC,OAAS9O,KAAK+hD,SAASjzC,QAAU,GAAI6K,GAAAA,cAGvDwnC,EAAJrhD,UAAAu1B,mBAAI,WAAA,GAAJr0B,GAAAhB,IACQA,MAAKgiD,SAELhiD,KAAK+hD,SAASjzC,OAAOG,eAAe5M,UAAU,WAC1CrB,EAAKihD,cAIbd,EAAJrhD,UAAAqF,YAAI,WACQnF,KAAK2hD,cACL3hD,KAAK2hD,YAAYv8C,UACjBpF,KAAK2hD,YAAc,MAGvB3hD,KAAKkiD,yBAITf,EAAJrhD,UAAA+1B,OAAI,WAEI,MAAO71B,MAAK4hD,QAAU5hD,KAAK6O,QAAU7O,KAAK4P,QAI9CuxC,EAAJrhD,UAAA8P,KAAI,WAAA,GAAJ5O,GAAAhB,IACQ,KAAIA,KAAK4hD,QAAT,CAIA5hD,KAAKgiD,QAEL,IAAM/gD,GAAajB,KAAKmiD,gBACxBniD,MAAKoiD,aAAanhD,EAAWgG,YAAYjE,kBACzC/B,EAAWwF,OAAOzG,KAAKqiD,SAEnBriD,KAAK+hD,SAASO,aACdtiD,KAAK+hD,SAASO,YAAY77C,OAAOzG,KAAK+G,MAG1C/G,KAAK6hD,mBAAqB7hD,KAAKuiD,kBAAkBlgD,UAAU,WAAM,MAAArB,GAAK6N,UACtE7O,KAAKwiD,QAEDxiD,KAAK+hD,mBAAoB3C,KACzBp/C,KAAK+hD,SAAS7B,oBAKtBiB,EAAJrhD,UAAA+O,MAAI,WACI7O,KAAK+hD,SAASjzC,OAAO9H,QAOzBm6C,EAAJrhD,UAAAqa,MAAI,SAAMjT,OAAV,KAAAA,IAAUA,EAAV,WACYlH,KAAKiZ,cACLjZ,KAAKiZ,cAAcmB,SAASpa,KAAKqhD,SAAS38C,cAAewC,GAEzDlH,KAAKqhD,SAAS38C,cAAcyV,SAK5BgnC,EAAZrhD,UAAAmiD,SAAI,WAAA,GAAJjhD,GAAAhB,IACQ,IAAKA,KAAK2hD,aAAgB3hD,KAAKyiD,OAA/B,CAIA,GAAMV,GAAW/hD,KAAK+hD,QAEtB/hD,MAAK6hD,mBAAmBhrC,cACxB7W,KAAK2hD,YAAYt+C,SAEb0+C,YAAoB3C,KACpB2C,EAAS3B,kBAEL2B,EAASO,YAETP,EAASzB,eACJp+C,KACGkM,EAAAA,OAAO,SAAC5I,GAAU,MAAkB,SAAlBA,EAAM8I,UACxBC,EAAAA,KAAK,GAELpM,EAAAA,UAAU4/C,EAASO,YAAYI,YAElCrgD,UAAU,WAAM,MAAA0/C,GAASO,YAAYj/C,cAAUmN,GAAW,WAEvDxP,EAAK2hD,WAGb3iD,KAAK2iD,WAGT3iD,KAAK2iD,SAEDZ,EAASO,aACTP,EAASO,YAAYj/C,YASzB89C,EAAZrhD,UAAA0iD,MAAI,WACIxiD,KAAK+hD,SAASh/C,UAAY/C,KAAKi7B,IAC/Bj7B,KAAK4iD,cAAa,GAClB5iD,KAAK+hD,SAASc,eAAe7iD,KAAKwhD,WAAa,YAO3CL,EAAZrhD,UAAA6iD,OAAI,WACI3iD,KAAK4iD,cAAa,GAKb5iD,KAAKwhD,UAKNxhD,KAAKma,MAAMna,KAAKwhD,WAFhBxhD,KAAKma,QAKTna,KAAKwhD,UAAY,MAIbL,EAAZrhD,UAAA8iD,aAAI,SAAqBE,GACjB9iD,KAAK4hD,QAAUkB,EAEf9iD,KAAK4hD,QAAU5hD,KAAKyhD,eAAez6C,OAAShH,KAAK0hD,eAAe16C,QAO5Dm6C,EAAZrhD,UAAAkiD,OAAI,WACShiD,KAAK+hD,UACNgB,KAQA5B,EAAZrhD,UAAAqiD,eAAI,WACI,IAAKniD,KAAK2hD,YAAa,CACnB3hD,KAAKqiD,QAAU,GAAIjyC,GAAAA,eAAepQ,KAAK+hD,SAASiB,YAAahjD,KAAKshD,kBAClE,IAAMvzC,GAAS/N,KAAKijD,mBACpBjjD,MAAKkjD,sBAAsBn1C,EAAO/K,kBAClChD,KAAK2hD,YAAc3hD,KAAKohD,SAASt+C,OAAOiL,GAKxC/N,KAAK2hD,YAAY/yC,gBAAgBvM,YAGrC,MAAOrC,MAAK2hD,aAORR,EAAZrhD,UAAAmjD,kBAAI,WACI,MAAO,IAAIxxC,GAAAA,eACPzO,iBAAkBhD,KAAKohD,SAAShgD,WAC3BC,oBAAoBrB,KAAKqhD,UACzB8B,qBACA5hD,sBAAsB,uBAC3BmQ,YAA2C,OAA9B1R,KAAK+hD,SAASrwC,iBAAsDlB,KAA9BxQ,KAAK+hD,SAASrwC,aAE3D1R,KAAK+hD,SAASrwC,YACpBC,cAAe3R,KAAK+hD,SAASpwC,eAAiB,mCAC9CzO,eAAgBlD,KAAKuhD,kBACrBx+C,UAAW/C,KAAKs2B,QAShB6qB,EAAZrhD,UAAAojD,sBAAI,SAA8B9hD,GAA9B,GAAJJ,GAAAhB,IACYA,MAAK+hD,SAASpC,oBAQdv+C,EAASa,gBAAgBI,UAAU,WAC/BrB,EAAK+gD,SAASpC,mBAAoB3+C,EAAK+gD,SAASjC,UAAW9+C,EAAK+gD,SAAShC,cAU7EoB,EAAZrhD,UAAAsiD,aAAI,SAAqBp/C,GACX,GAAA2E,GAAd,WAAA3H,KAAA+hD,SAAAjC,WAAA,MAAA,UAAA,QAAA,OAAe/7C,EAAf4D,EAAA,GAAwBy7C,EAAxBz7C,EAAA,GAGcywC,EAAd,UAAAp4C,KAAA+hD,SAAAhC,WAAA,SAAA,QAAA,MAAA,UAAe77C,EAAfk0C,EAAA,GAAyBiL,EAAzBjL,EAAA,GAGYkL,GAAZp/C,EAAAm/C,GAAar/C,EAAbs/C,EAAA,GAAsBC,EAAtBD,EAAA,GACcE,GAAdz/C,EAAAq/C,GAAen/C,EAAfu/C,EAAA,GAAyBC,EAAzBD,EAAA,EAGaxjD,MAAK+hD,SAAS2B,iBACf1/C,EAAuB,QAAbE,EAAqB,SAAW,MAC1Cq/C,EAAuC,QAArBF,EAA6B,SAAW,OAG9DrgD,EAAiBtB,gBACZqC,QAAbA,EAAsBC,QAAtBA,EAA+BC,SAA/BA,EAAyCC,SAAzCA,EAAmD4f,QAR3B,IASX/f,QAASq/C,EAAiBp/C,QAAvCA,EAAgDC,SAAUw/C,EAAkBv/C,SAA5EA,EAAsF4f,QAT9D,IAWR/f,QAAhBA,EACgBC,QAASu/C,EACTt/C,SAAhBA,EACgBC,SAAUm/C,EACVv/B,SAfQ,IAkBR/f,QAASq/C,EACTp/C,QAASu/C,EACTt/C,SAAUw/C,EACVv/C,SAAUm/C,EACVv/B,SAtBQ,MA4BZq9B,EAAZrhD,UAAAoiD,sBAAI,WACIliD,KAAK6hD,mBAAmBhrC,cACxB7W,KAAK8hD,mBAAmBjrC,eAIpBsqC,EAAZrhD,UAAAyiD,gBAAI,WACI,GAAMoB,GAAW3jD,KAAK2hD,YAAahzC,gBAC7BvL,EAAcpD,KAAK2hD,YAAav+C,aAEtC,OAAOsL,GAAAA,MAAMi1C,EAAUvgD,IAlSI8E,GAA9BE,EAAAA,MAAM,iDAAX+4C,EAAArhD,UAAA,eAAA,IAGoCoI,GAA/BE,EAAAA,MAAM,kDAAX+4C,EAAArhD,UAAA,WAAA,IAGcoI,GAATC,EAAAA,SAALa,EAAA,cAAuC2Q,EAAAA,eAAvCwnC,EAAArhD,UAAA,qBAAA,IAGcoI,GAATC,EAAAA,SAALa,EAAA,cAAuC2Q,EAAAA,eAAvCwnC,EAAArhD,UAAA,qBAAA,IA1BaqhD,EAAbj5C,GARCI,EAAAA,WACGC,SAAU,yBACVE,MACIm7C,eAAgB,sBAChBtwC,UAAW,YAEf9K,SAAU,sBAuCGI,EAAjB,EAAiBC,EAAAA,OAAOm4C,KACPp4C,EAAjB,EAAiBG,EAAAA,YAJjBC,EAAA,qBAAkCC,EAAAA,QACAC,EAAAA,WACSG,EAAAA,iBAA3C1J,OAE0C2J,EAAAA,eACF6S,EAAAA,gBAvC3BglC,MC1Cb0C,GAAA,WAAA,QAAAA,MAA+B,MAAlBA,GAAb37C,GATCsB,EAAAA,UACGG,SACIC,EAAAA,aACAC,EAAAA,eAEJH,SAAU01C,GAAYoB,GAAgBW,GAAmBV,IACzDh3C,cAAe21C,GAAYoB,GAAgBW,GAAmBV,IAC9D32C,WAAYm3C,OAEH4C,MCHbC,GAAA,WAAA,QAAAA,MACA,MADaA,GAAb57C,GAbCgE,EAAAA,WACG3D,SAAU,aACVwO,qBAAqB,EACrB5K,SAAJ,4BACIC,QACI,mDAIJ3D,MACIs7C,4BAA6B,WAGxBD,MCAbE,GAAA,WAAA,QAAAA,MACA,MADaA,GAAb97C,GAbCgE,EAAAA,WACG3D,SAAU,YACVwO,qBAAqB,EACrB5K,SAAJ,4BACIC,QACI,mDAIJ3D,MACIw7C,2BAA4B,WAGvBD,MCAbE,GAAA,WAAA,QAAAA,MACA,MADaA,GAAbh8C,GAbCgE,EAAAA,WACG3D,SAAW,YACXwO,qBAAqB,EACrB5K,SAAJ,4BACIC,QACI,mDAIJ3D,MACI07C,2BAA4B,WAGvBD,MCDbE,GAAA,WAZA,QAAAA,KAaIpkD,KAAJqkD,YAAiB,EACjB,MAFaD,GAAbl8C,GAZCgE,EAAAA,WACG3D,SAAU,YACVwO,qBAAqB,EACrB3K,QAAS,sfACTD,SAAJ,4BACI1D,MACI67C,oBAAqB,OACrBC,gCAAiC,cAErC/3C,cAAeC,EAAAA,kBAAkBC,KACjCL,gBAAiBC,EAAAA,wBAAwBC,UAEhC63C,MCcbI,GAAA,WA6CI,QAAJA,GACoCC,GAAAzkD,KAApCykD,kBAAoCA,EA5CvBzkD,KAAb0kD,SAAwB,IACX1kD,KAAb2kD,iBAAgC,GAqBlB3kD,KAAd4kD,kBAAkC,GAAIjrC,GAAAA,aAE1B3Z,KAAZ+8C,WAAwB,EACZ/8C,KAAZ6kD,aAA0B,EA2B1B,MAhDIllD,QAAJC,eAAQ4kD,EAAR1kD,UAAA,iBAIAC,IAAI,WACI,MAAOC,MAAK6kD,aALpB3kD,IAAI,SAAkBC,GACdH,KAAK6kD,YAAcvc,EAAUnoC,oCAQjCR,OAAJC,eAAQ4kD,EAAR1kD,UAAA,eAIAC,IAAI,WACI,MAAOC,MAAK+8C,WALpB78C,IAAI,SAAgBC,GACZH,KAAK+8C,UAAYzU,EAAUnoC,oCAa/BR,OAAJC,eAAQ4kD,EAAR1kD,UAAA,UAAAC,IAAI,WACI,MAAIC,MAAK8kD,YACE,OAAO9kD,KAAK2kD,iBAA/B,KAEmB,OAAO3kD,KAAKg0C,QAA/B,sCAIIr0C,OAAJC,eAAQ4kD,EAAR1kD,UAAA,WAAAC,IAAI,WACI,MAAIC,MAAK8kD,YACE9kD,KAAK2kD,iBAEL3kD,KAAK0kD,0CAQpBF,EAAJ1kD,UAAAmF,SAAI,WACQjF,KAAKykD,oBACLzkD,KAAKykD,kBAAkBJ,YAAa,IAjDnCn8C,GAARE,EAAAA,iCAALo8C,EAAA1kD,UAAA,eAAA,IACaoI,GAARE,EAAAA,iCAALo8C,EAAA1kD,UAAA,uBAAA,IAGIoI,GADCE,EAAAA,mEAGLo8C,EAAA1kD,UAAA,gBAAA,MAOIoI,GADCE,EAAAA,mEAGLo8C,EAAA1kD,UAAA,cAAA,MAOcoI,GAATC,EAAAA,kCAALq8C,EAAA1kD,UAAA,wBAAA,IAxBa0kD,EAAbt8C,GAdCgE,EAAAA,WACG3D,SAAU,aACVwO,qBAAqB,EACrB5K,SAAJ,0EACI1D,MACIs8C,4BAA6B,OAC7BC,sCAAuC,cACvCC,eAAgB,SAChBC,uBAAwB,UACxBC,uBAAwB,UACxBC,mBAAoB,WAExB/4C,gBAAiBC,EAAAA,wBAAwBC,SAgDpC3D,EAAT,EAASG,EAAAA,YAAYH,EAArB,EAAqBy8C,EAAAA,QAArBr8C,EAAA,qBAAuDo7C,MA9C1CI,MCFbc,GAAA,WAAA,QAAAA,MACA,MADaA,GAAbp9C,GAjBCsB,EAAAA,UACGG,SAAWC,EAAAA,cACXF,SACI06C,GACAN,GACAE,GACAE,GACAM,IAEJ/6C,cACI26C,GACAN,GACAE,GACAE,GACAM,OAGKc,MCiCbC,GAAA,WA6CI,QAAJA,GACgBlE,EACAzZ,EAED4d,GAHCxlD,KAAhBqhD,SAAgBA,EACArhD,KAAhB4nC,gBAAgBA,EAED5nC,KAAfwlD,cAAeA,EAhDXxlD,KAAJylD,WAAyB,EAOZzlD,KAAb0lD,iBAAoD,QAkCxC1lD,KAAZ8nC,WAAwB,EACZ9nC,KAAZmU,WAAwB,EA8FxB,MA5HIxU,QAAJC,eAAQ2lD,EAARzlD,UAAA,YAAAC,IAAI,WACI,MAAOC,MAAKmU,WAAcnU,KAAKwlD,eAAiBxlD,KAAKwlD,cAAcn/C,UAG3EnG,IAAI,SAAaC,GACT,GAAMwqB,GAAW2d,EAAUnoC,EAEvBwqB,KAAa3qB,KAAKmU,YAClBnU,KAAKmU,UAAYwW,EACjB3qB,KAAK4nC,gBAAgBzjC,iDAK7BxE,OAAJC,eAAQ2lD,EAARzlD,UAAA,YAAAC,IAAI,WACI,MAAOC,MAAKwlD,cAAcrvB,iBAAmBn2B,KAAKwlD,cAAcrvB,gBAAgBhV,WAAWnhB,QAAS,GAG5GE,IAAI,SAAaC,GACT,GAAMghB,GAAamnB,EAAUnoC,EAEzBghB,KAAenhB,KAAK8nC,YACpB9nC,KAAK0rC,YAAYvqB,GAEjBnhB,KAAKwlD,cAAcG,uDAe3BJ,EAAJzlD,UAAAmF,SAAI,WAAA,GAAJjE,GAAAhB,IACQ,IAAIA,KAAK8nC,UAAW,CAMhB,GAAM8d,GAAc5lD,KAAK8nC,SAEzBjpB,SAAQC,UAAUC,KAAK,YACf/d,EAAK8mC,WAAa8d,KAClB5kD,EAAKogB,UAAW,EAChBpgB,EAAK4mC,gBAAgBzjC,oBAMrCohD,EAAJzlD,UAAAu1B,mBAAI,WACIr1B,KAAK6lD,YAAc,GAAIC,IAAa9lD,KAAK+lD,OAAQ/lD,KAAKqhD,WAG1DkE,EAAJzlD,UAAAqF,YAAI,WAAA,GAAJnE,GAAAhB,IACYA,MAAKohB,UAGLvC,QAAQC,UAAUC,KAAK,WAAM,MAAA/d,GAAKogB,UAAW,IAGjDphB,KAAKwlD,cAAcQ,sBAAsBhmD,OAG7CulD,EAAJzlD,UAAA+1B,OAAI,WACI71B,KAAKohB,UAAYphB,KAAKohB,UAG1BmkC,EAAJzlD,UAAAqa,MAAI,WACIna,KAAKqhD,SAAS38C,cAAcyV,QAE5Bna,KAAKwlD,cAActZ,iBAAiBlsC,OAGxCulD,EAAJzlD,UAAAmmD,SAAI,WACI,MAAOjmD,MAAKkmD,MAAQlmD,KAAKkmD,MAAMxhD,cAAc27B,YAAc,IAG/DklB,EAAJzlD,UAAA4rC,YAAI,SAAYtqB,GACJphB,KAAK8nC,YAAc1mB,GAAaphB,KAAKwlD,cAAcrvB,kBAEvDn2B,KAAK8nC,UAAY1mB,EAEbA,EACAphB,KAAKwlD,cAAcrvB,gBAAgBhW,OAAOngB,MAE1CA,KAAKwlD,cAAcrvB,gBAAgB9U,SAASrhB,MAGhDA,KAAK4nC,gBAAgBzjC,iBAGzBohD,EAAJzlD,UAAAqmD,WAAI,WACI,MAAOnmD,MAAKqhD,SAAS38C,cAAcqnC,iBAAiB,GAAG7mB,QAG3DqgC,EAAJzlD,UAAAsmD,aAAI,WACQpmD,KAAKqG,UAETrG,KAAKwlD,cAActZ,iBAAiBlsC,OAGxCulD,EAAJzlD,UAAAumD,aAAI,WACQrmD,KAAKqG,UAAYrG,KAAKylD,YAE1BzlD,KAAKylD,WAAY,IAGrBF,EAAJzlD,UAAAwmD,YAAI,WACItmD,KAAKylD,WAAY,EAEjBzlD,KAAKwlD,cAAc/wB,cAGvB8wB,EAAJzlD,UAAAymD,gBAAI,WACI,MAAOvmD,MAAKqhD,SAAS38C,eApIAwD,GAAxBqyB,EAAAA,gBAAgBisB,IAArBx9C,EAAA,cAAqCkd,EAAAA,YAArCq/B,EAAAzlD,UAAA,aAAA,IAEuBoI,GAAlB8D,EAAAA,UAAU,QAAfhD,EAAA,cAA8BE,EAAAA,aAA9Bq8C,EAAAzlD,UAAA,YAAA,IAGaoI,GAARE,EAAAA,iCAALm9C,EAAAzlD,UAAA,uBAAA,IAEaoI,GAARE,EAAAA,iCAALm9C,EAAAzlD,UAAA,YAAA,IAGIoI,GADCE,EAAAA,iEAGLm9C,EAAAzlD,UAAA,WAAA,MAYIoI,GADCE,EAAAA,mEAGLm9C,EAAAzlD,UAAA,WAAA,MA7BaylD,EAAbr9C,GAlBCgE,EAAAA,WACG1D,SAAU,eACVD,SAAU,iBACVE,MACIsE,SAAU,KAEVD,MAAO,iBACPs/B,sBAAuB,WACvBqa,qBAAsB,YACtB7/B,UAAW,iBACXC,SAAU,gBACVvT,UAAW,kBAEfnH,SAAJ,0GACIK,cAAeC,EAAAA,kBAAkBC,KACjCqK,qBAAqB,EACrB1K,gBAAiBC,EAAAA,wBAAwBC,SAkDpC3D,EAAT,EAASC,EAAAA,OAAO2S,EAAAA,WAAW,WAAM,MAAAkrC,QAFjC19C,EAAA,qBAA0BE,EAAAA,WACOsE,EAAAA,kBAEHk5C,MAjDjBnB,MA4IAoB,IACTtrC,QAASC,EAAAA,kBACTC,YAAaC,EAAAA,WAAW,WAAM,MAAAkrC,MAC9BjrC,OAAO,GAIXmrC,GAAA,WACI,QAAJA,GAEexrC,EAEAyE,GAFA7f,KAAfob,OAAeA,EAEApb,KAAf6f,OAAeA,EAEf,MAAA+mC,MAGAC,GAAA,WAAA,QAAAA,MAAkC,MAAlCA,MAEaC,GACPnuC,EAAckuC,IAqBpBH,GAAA,SAAA1tC,GA8BI,QAAJ0tC,GACgBrF,EACeloC,EACGuiB,EACAiR,EACHxtB,GAL3B,GAAJne,GAOQgY,EAPRI,KAAApZ,OAAAA,WACgBgB,GAAhBqgD,SAAgBA,EAbHrgD,EAAb+lD,YAAmC,EAGZ/lD,EAAvBmhB,gBAA8E,GAAIxI,GAAAA,aAOtE3Y,EAAZgmD,cAA4B/qB,EAAAA,aAAaC,MAoKrCl7B,EAAJyzB,WAA6B,aAiGjBzzB,EAAZwzB,UAA8C,SAAC1a,KA1PvC9Y,EAAK06B,WAA4B,OAAfA,GAA6B4M,EAAU5M,GACzD16B,EAAKme,SAAwB,OAAbA,GAA2BmpB,EAAUnpB,GACrDne,EAAK2rC,WAA4B,OAAfA,GAA6BrE,EAAUqE,GAEzD3rC,EAAKmY,SAAWrU,SAASqU,IAAa,EAEtCnY,EAAKm1B,gBAAkB,GAAIlB,GAAAA,eAA6Bj0B,EAAKme,YAqPrE,MAlSqCnF,GAArC0sC,EAAA1tC,GAgDI0tC,EAAJ5mD,UAAAu1B,mBAAI,WACIr1B,KAAK+mD,WAAaze,EAAUtoC,KAAK+mD,YAEjC/mD,KAAKs/C,YAAc,GAAIvf,GAAAA,gBAA8B//B,KAAK4f,SACrDga,gBACAC,yBAAyB75B,KAAK+mD,YAC9BhxB,0BAA0B/1B,KAAK+mD,WAAa,MAAQ,MAErD/mD,KAAKinD,cACLjnD,KAAKknD,sBAAsBlnD,KAAKinD,aAChCjnD,KAAKinD,YAAc,MAIvBjnD,KAAKgnD,cAAgBhnD,KAAKm2B,gBAAgBjU,SAAU7f,UAAU,SAACmD,GAC3D,IAAmB,GAA/B2hD,GAAA,EAA+Bx/C,EAAAnC,EAAM+vB,MAAN4xB,EAA/Bx/C,EAAAwJ,OAA+Bg2C,IAAa,CAA3B,GAAMvxC,GAAvBjO,EAAAw/C,EACgBvxC,GAAKwL,UAAW,EAGpB,IAAmB,GAA/Bg3B,GAAA,EAA+BkL,EAAA99C,EAAMgwB,QAAN4iB,EAA/BkL,EAAAnyC,OAA+BinC,IAAe,CAA7B,GAAMxiC,GAAvB0tC,EAAAlL,EACgBxiC,GAAKwL,UAAW,KAIxBphB,KAAKytC,oBAGTiZ,EAAJ5mD,UAAAqF,YAAI,WACInF,KAAKgnD,cAAcnwC,eAGvB6vC,EAAJ5mD,UAAAqa,MAAI,WACIna,KAAKqhD,SAAS38C,cAAcyV,SAGhCusC,EAAJ5mD,UAAAsnD,UAAI,WACIpnD,KAAK4f,QAAQta,QAAQ,SAACua,GAAW,MAAAA,GAAO6rB,aAAY,KAEpD1rC,KAAK2lD,sBAGTe,EAAJ5mD,UAAAunD,YAAI,WACIrnD,KAAK4f,QAAQta,QAAQ,SAACua,GAAW,MAAAA,GAAO6rB,aAAY,KAEpD1rC,KAAK2lD,sBAGTe,EAAJ5mD,UAAA2tC,iBAAI,YACQztC,KAAK+mD,YAAe/mD,KAAK4f,QAAQwa,OAErCp6B,KAAKs/C,YAAY5R,eAAenqB,KAAKoqB,MAAM3tC,KAAKmmD,aAAenmD,KAAK4f,QAAQwa,MAAM+rB,gBAItFO,EAAJ5mD,UAAAosC,iBAAI,SAAiBrsB,GAGb,GAFA7f,KAAKs/C,YAAYxgB,iBAAiBjf,GAE9B7f,KAAKgtC,WAAahtC,KAAKmf,SAAU,CACjC,GAAMyuB,GAAgB5tC,KAAKs/C,YAAYzR,wBACjCC,EAAc9tC,KAAKs/C,YAAY38B,eAEjCirB,GAAgBE,EAChB9tC,KAAK4f,QAAQta,QAAQ,SAACsQ,EAAMtD,GACpBA,GAASs7B,GAAiBt7B,GAASw7B,GAAel4B,EAAK81B,aAAY,KAG3E1rC,KAAK4f,QAAQta,QAAQ,SAACsQ,EAAMtD,GACpBA,GAASw7B,GAAex7B,GAASs7B,GAAiBh4B,EAAK81B,aAAY,KAI/E1rC,KAAKgtC,WAAY,MACd,IAAIhtC,KAAKitC,SAAU,CAGtB,GAFAjtC,KAAKitC,UAAW,GAEXjtC,KAAKsnD,iBAAiBznC,GAAW,MAEtCA,GAAOgW,aAEH71B,MAAK07B,aACL17B,KAAK4f,QAAQta,QAAQ,SAACsQ,GAAS,MAAAA,GAAK81B,aAAY,KAChD7rB,EAAO6rB,aAAY,GAI3B1rC,MAAK6a,iBAAiBgF,GACtB7f,KAAK2lD,sBAITe,EAAJ5mD,UAAAgb,WAAI,SAAWysC,GACHvnD,KAAK4f,QACL5f,KAAKknD,sBAAsBK,OAE3BvnD,KAAKinD,YAAcM,GAK3Bb,EAAJ5mD,UAAAib,iBAAI,SAAiBC,GACbhb,KAAKw0B,UAAYxZ,GAIrB0rC,EAAJ5mD,UAAAmb,kBAAI,SAAkBD,GACdhb,KAAKy0B,WAAazZ,GAItB0rC,EAAJ5mD,UAAAob,iBAAI,SAAiBC,GACTnb,KAAK4f,SACL5f,KAAK4f,QAAQta,QAAQ,SAACua,GAAW,MAAAA,GAAOxZ,SAAW8U,KAI3DurC,EAAJ5mD,UAAA0nD,wBAAI,WACI,MAAOxnD,MAAK4f,QAAQxR,OAAO,SAACyR,GAAW,MAAAA,GAAOuB,WAAUY,IAAI,SAACnC,GAAW,MAAAA,GAAO1f,SAInFumD,EAAJ5mD,UAAAstC,oBAAI,WACI,GAAMa,GAAejuC,KAAKs/C,YAAY38B,eAEtC,IAAoB,MAAhBsrB,GAAwBjuC,KAAKynD,cAAcxZ,GAAe,CAC1D,GAAMC,GAA8BluC,KAAK4f,QAAQ6B,UAAUwsB,EAEvDC,IAAiBluC,KAAKsnD,iBAAiBpZ,KACvCA,EAAcrY,SAGd71B,KAAK6a,iBAAiBqzB,MAKlCwY,EAAJ5mD,UAAAwnD,iBAAI,SAAiBI,GACb,QAAS1nD,KAAK2sC,YAAuD,IAAzC3sC,KAAKm2B,gBAAgB/U,SAASjQ,QAAgBu2C,EAAWtmC,WAGzFslC,EAAJ5mD,UAAAqmD,WAAI,WACI,MAAOnmD,MAAKqhD,SAAS38C,cAAcqnC,iBAAiB,GAAG7mB,QAO3DwhC,EAAJ5mD,UAAAkmD,sBAAI,SAAsBnmC,GAClB,GAAIA,EAAO4lC,UAAW,CAClB,GAAMkC,GAAc3nD,KAAK4nD,gBAAgB/nC,EAGrC8nC,GAAc,EACd3nD,KAAKs/C,YAAYuI,wBACM,IAAhBF,GAAqB3nD,KAAK4f,QAAQzO,OAAS,GAClDnR,KAAKs/C,YAAYwI,sBAK7BpB,EAAJ5mD,UAAAioD,WAAI,SAAWviD,GACP,GAAMQ,GAAUR,EAAMQ,OAItB,QAHAhG,KAAKgtC,UAAYxnC,EAAMk0B,SACvB15B,KAAKitC,SAAWznC,EAAM+zB,QAEdvzB,GACJ,IAAK+yB,GAAAA,MACL,IAAKD,GAAAA,MACD94B,KAAKotC,sBACL5nC,EAAM8Y,gBAEN,MACJ,KAAK6a,GAAAA,KACDn5B,KAAKs/C,YAAY78B,qBACjBjd,EAAM8Y,gBAEN,MACJ,KAAK8a,GAAAA,IACDp5B,KAAKs/C,YAAYjmB,oBACjB7zB,EAAM8Y,gBAEN,MACJ,KAAK+uB,GAAAA,QACIrtC,KAAK+mD,YAAc/mD,KAAKs/C,YAAYhS,4BAEzC9nC,EAAM8Y,gBAEN,MACJ,KAAKivB,GAAAA,UACIvtC,KAAK+mD,YAAc/mD,KAAKs/C,YAAY9R,wBAEzChoC,EAAM8Y,gBAEN,MACJ,SACIte,KAAKs/C,YAAYrmB,UAAUzzB,KAKvCkhD,EAAJ5mD,UAAA6lD,mBAAI,WACQ3lD,KAAK4f,SACL5f,KAAKw0B,UAAUx0B,KAAKwnD,4BAK5Bd,EAAJ5mD,UAAA+a,iBAAI,SAAiBgF,GACb7f,KAAKmiB,gBAAgBnb,KAAK,GAAI4/C,IAAsB5mD,KAAM6f,KAItD6mC,EAAZ5mD,UAAAkoD,kBAAI,SAA0B7nD,GACtB,MAAOH,MAAK4f,QAAQ/O,KAAK,SAACgP,GAAW,MAAAA,GAAO1f,QAAUA,KAIlDumD,EAAZ5mD,UAAAonD,sBAAI,SAA8BK,GAA9B,GAAJvmD,GAAAhB,IACQA,MAAK4f,QAAQta,QAAQ,SAACua,GAAW,MAAAA,GAAO6rB,aAAY,KAEpD6b,EACKvlC,IAAI,SAAC7hB,GAAU,MAAAa,GAAKgnD,kBAAkB7nD,KACtCiO,OAAOV,SACPpI,QAAQ,SAACua,GAAW,MAAAA,GAAQ6rB,aAAY,MAQzCgb,EAAZ5mD,UAAA2nD,cAAI,SAAsBn1C,GAClB,MAAOA,IAAS,GAAKA,EAAQtS,KAAK4f,QAAQzO,QAItCu1C,EAAZ5mD,UAAA8nD,gBAAI,SAAwB/nC,GACpB,MAAO7f,MAAK4f,QAAQ6B,UAAUlP,QAAQsN,IAvRX3X,GAA9BqyB,EAAAA,gBAAgBgrB,IAArBv8C,EAAA,cAA4Ckd,EAAAA,YAA5CwgC,EAAA5mD,UAAA,cAAA,IAYaoI,GAARE,EAAAA,kCAALs+C,EAAA5mD,UAAA,iBAAA,IAGcoI,GAATC,EAAAA,SAALa,EAAA,cAAwC2Q,EAAAA,eAAxC+sC,EAAA5mD,UAAA,sBAAA,IArBa4mD,EAAbx+C,GAnBCgE,EAAAA,WACG1D,SAAU,kBACVD,SAAU,oBACV4D,SAAU,4BACVC,QAAS,orGACTC,gBAAiBC,EAAAA,wBAAwBC,OACzCC,cAAeC,EAAAA,kBAAkBC,KACjCgP,QAAS,WAAY,YACrBjT,MACIqE,MAAO,oBACPm7C,aAAc,WACdrhC,UAAW,UACXC,SAAU,eACVne,YAAa,qBACboe,kBAAmB,sBAEvBhd,WAAY68C,IACZ5vC,qBAAqB,IAkChBnO,EAAT,EAASsT,EAAAA,UAAU,aACVtT,EAAT,EAASsT,EAAAA,UAAU,gBACVtT,EAAT,EAASsT,EAAAA,UAAU,gBACVtT,EAAT,EAASsT,EAAAA,UAAU,aAJnBlT,EAAA,qBAA0BE,EAAAA,WAA1BkT,OAAAA,OAAAA,OAAAA,UA/BasqC,IAAwBI,ICxOrCoB,GAAA,WAAA,QAAAA,MAAyB,MAAzBA,MAUAC,GAAA,SAAAnvC,GAAA,QAAAmvC,oDAAwC,MAAZnuC,GAA5BmuC,EAAAnvC,GAAamvC,EAAbjgD,GARCgE,EAAAA,WACG3D,SAAU,UACVE,MAAQqE,MAAO,WACfX,SAAU,4BACVC,QAAS,orGACTC,gBAAiBC,EAAAA,wBAAwBC,OACzCC,cAAeC,EAAAA,kBAAkBC,QAExBy7C,IAAeD,IAW5BE,GAAA,WAAA,QAAAA,MAAuC,MAA1BA,GAAblgD,GAJCI,EAAAA,WACGC,SAAU,gCACVE,MAAQqE,MAAO,mBAENs7C,MAIbC,GAAA,WAAA,QAAAA,MAA6B,MAA7BA,MAcAC,GAAA,SAAAtvC,GAKI,QAAJsvC,GAAwBjH,GAApB,GAAJrgD,GACQgY,EADRI,KAAApZ,OAAAA,WAAwBgB,GAAxBqgD,SAAwBA,IAmBxB,MAxBgCrnC,GAAhCsuC,EAAAtvC,GASIsvC,EAAJxoD,UAAAu1B,mBAAI,WACIr1B,KAAK6lD,YAAc,GAAIC,IAAa9lD,KAAK+lD,OAAQ/lD,KAAKqhD,WAG1DiH,EAAJxoD,UAAAumD,aAAI,WACIrmD,KAAKqhD,SAAS38C,cAAckH,UAAUC,IAAI,eAG9Cy8C,EAAJxoD,UAAAwmD,YAAI,WACItmD,KAAKqhD,SAAS38C,cAAckH,UAAUysB,OAAO,eAGjDiwB,EAAJxoD,UAAAymD,gBAAI,WACI,MAAOvmD,MAAKqhD,SAAS38C,eArBAwD,GAAxBqyB,EAAAA,gBAAgBisB,IAArBx9C,EAAA,cAAqCkd,EAAAA,YAArCoiC,EAAAxoD,UAAA,aAAA,IADawoD,EAAbpgD,GAZCgE,EAAAA,WACG3D,SAAU,gCACVE,MACIqE,MAAO,eACP8Z,UAAW,iBACXC,SAAU,iBAEd1a,SAAJ,yNACIK,cAAeC,EAAAA,kBAAkBC,KACjCqK,qBAAqB,EACrB1K,gBAAiBC,EAAAA,wBAAwBC,SAO7CvD,EAAA,qBAAkCE,EAAAA,cALrBo/C,IAAmBD,IChBhCE,GAAA,WAAA,QAAAA,MAA2B,MAAdA,GAAbrgD,GArBCsB,EAAAA,UACGG,SACIC,EAAAA,aACA0S,EAAAA,WACAksC,IAEJ9+C,SACIy+C,GACAzB,GACA4B,GACA/C,GACA6C,IAEJ3+C,cACI0+C,GACAzB,GACA4B,GACA/C,GACA6C,OAGKG,MCXbE,GAAA,WACI,QAAJA,GAAuBlwC,GAAAvY,KAAvBuY,YAAuBA,EAEvB,MAAAkwC,MAEaC,GACPjwC,EAAcE,EAAc8vC,KAgBlCE,GAAA,SAAA3vC,GAkBI,QAAJ2vC,GAC+BxvC,EAChB7X,EACC2X,EACA2uB,GAJZ,GAAJ5mC,GAMQgY,EANRI,KAAApZ,KAMcsB,IANdtB,WAEegB,GAAfM,WAAeA,EACCN,EAAhBiY,cAAgBA,EACAjY,EAAhB4mC,gBAAgBA,EANJ5mC,EAAZmT,WAAwB,EAShBnT,EAAKiY,cAAcc,QAAQzY,EAAWoD,eAAe,GACrD1D,EAAKmY,SAAWrU,SAASqU,IAAa,IAc9C,MAxC4Ba,GAA5B2uC,EAAA3vC,GAGIrZ,OAAJC,eAAQ+oD,EAAR7oD,UAAA,YAAAC,IAAI,WACI,MAAOC,MAAKmU,WAGpBjU,IAAI,SAAaC,GACT,GAAMwqB,GAAW2d,EAAUnoC,EAEvBwqB,KAAa3qB,KAAKmU,YAClBnU,KAAKmU,UAAYwW,EACjB3qB,KAAK4nC,gBAAgBzjC,iDAiB7BwkD,EAAJ7oD,UAAAqF,YAAI,WACInF,KAAKiZ,cAAciB,eAAela,KAAKsB,WAAWoD,gBAGtDikD,EAAJ7oD,UAAAqa,MAAI,WACIna,KAAKumD,kBAAkBpsC,SAG3BwuC,EAAJ7oD,UAAAymD,gBAAI,WACI,MAAOvmD,MAAKsB,WAAWoD,eAnC3BwD,GADCE,EAAAA,iEAGLugD,EAAA7oD,UAAA,WAAA,MALa6oD,EAAbzgD,GAdCgE,EAAAA,WACG3D,SAAU,YACV4D,SAAU,4BACVE,gBAAiBC,EAAAA,wBAAwBC,OACzCC,cAAeC,EAAAA,kBAAkBC,KACjClE,SAAU,SACV4D,QAAS,mgCACTsP,QAAS,YACTjT,MACI0jC,kBAAmB,mBACnB1lB,kBAAmB,cAuBlB7d,EAAT,EAASsT,EAAAA,UAAU,aACnBlT,EAAA,qBAAAoT,OAA2BlT,EAAAA,WACIiT,EAAAA,aACE3O,EAAAA,qBAtBpBm7C,IAAeD,IC3B5BE,GAAA,WAAA,QAAAA,MAA2B,MAAdA,GAAb1gD,GARCsB,EAAAA,UACGG,SACIC,EAAAA,aACA0S,EAAAA,YAEJ7S,cAAek/C,IACfj/C,SAAUi/C,OAEDC,MpBHb5W,GAAA,WAwBI,QAAJA,GACwCC,GAAAjyC,KAAxCiyC,cAAwCA,EAZ5BjyC,KAAZmyC,eAA2CnyC,KAAKiyC,cAAgB,QAEpDjyC,KAAZ6oD,kBAA+C7oD,KAAKiyC,cAAgB,KAAO,GAAIhkC,GAAAA,QAEnEjO,KAAZqyC,sBAAsEryC,KAAKiyC,cAAgB,KAAO,GAAI/zB,KA6CtG,MA3DIve,QAAJC,eAAQoyC,EAARlyC,UAAA,iBAAAC,IAAI,WACI,MAAOC,MAAKiyC,cAAgBjyC,KAAKiyC,cAAcc,cAAgB/yC,KAAK6oD;mHAIxElpD,OAAJC,eAAQoyC,EAARlyC,UAAA,cAAAC,IAAI,WACI,MAAOC,MAAKiyC,cAAgBjyC,KAAKiyC,cAAcC,WAAalyC,KAAKmyC,gDAWrExyC,OAAJC,eAAgBoyC,EAAhBlyC,UAAA,qBAAAC,IAAI,WACI,MAAOC,MAAKiyC,cAAgBjyC,KAAKiyC,cAAcG,kBAAoBpyC,KAAKqyC,uDAQ5EL,EAAJlyC,UAAAwyC,cAAI,SAAcC,GAAd,GAAJvxC,GAAAhB,IACQ,KAAKA,KAAKwyC,cAAcD,GAAW,CAC/B,GAAME,GAAwBF,EAASG,UAAUrwC,UAAU,WAAM,MAAArB,GAAKkxC,WAAWxhC,KAAK6hC,KAChFI,EAAyBJ,EAASK,WAAWvwC,UAAU,WAAM,MAAArB,GAAK6xC,gBAAgBN,IAExFvyC,MAAKoyC,kBAAkBlyC,IAAIqyC,GAAWA,SAAlDA,EAA4DE,sBAA5DA,EAAmFE,uBAAnFA,MAIIX,EAAJlyC,UAAA0yC,cAAI,SAAcD,GACV,MAAOvyC,MAAKoyC,kBAAkBU,IAAIP,IAItCP,EAAJlyC,UAAA8Q,SAAI,WAGI,IAFA,GAAI+yB,GAAI3jC,KAAKkyC,WAAW/gC,OAEjBwyB,KACH3jC,KAAKkyC,WAAWvO,GAAG90B,SAInBmjC,EAAZlyC,UAAA+yC,gBAAI,SAAwBN,GACpB,GAAMjgC,GAAQtS,KAAKkyC,WAAW3/B,QAAQggC,EAElCjgC,IAAS,IACTtS,KAAKkyC,WAAW1/B,OAAOF,EAAO,GAEzBtS,KAAKkyC,WAAW/gC,QACjBnR,KAAK+yC,cAAcntC,SA1DtBosC,EAAb9pC,GADCuK,EAAAA,aA0BQ7J,EAAT,EAASG,EAAAA,YAAYH,EAArB,EAAqB8J,EAAAA,YAArB1J,EAAA,qBAAuDgpC,KAzB1CA,MCJbgB,GAAA,WAAA,QAAAA,MAwCA,MAAAA,MC5CAC,GAAA,WAGI,QAAJA,GAAwBC,GAAAlzC,KAAxBkzC,SAAwBA,EAChBlzC,KAAKmzC,cAAgBtrC,GAAI,EAAGC,GAAI,GAChC9H,KAAKozC,sBAYb,MATIH,GAAJnzC,UAAAuzC,qBAAI,WACI,MAAOrzC,MAAKmzC,cAGhBF,EAAJnzC,UAAAszC,oBAAI,WAAA,GAAJpyC,GAAAhB,IACQA,MAAKkzC,SAAS9sC,iBAAiB,QAAS,SAACZ,GACrCxE,EAAKmyC,cAAgBtrC,EAAGrC,EAAM8tC,QAASxrC,EAAGtC,EAAM+tC,YAG5DN,KAEAO,GAAe,GAAIP,IAAUC,UCyB7BO,GAAA,SAAAz6B,GA0GI,QAAJy6B,GACgBtyC,EACA8S,EACAy/B,EACApyC,EACA+sC,EACAsF,EACAC,EACAC,EACkBX,GAT9B,GAAJlyC,GAWQgY,EAXRI,KAAApZ,OAAAA,WACgBgB,GAAhBG,QAAgBA,EACAH,EAAhBiT,SAAgBA,EACAjT,EAAhB0yC,IAAgBA,EACA1yC,EAAhBM,WAAgBA,EACAN,EAAhBqtC,cAAgBA,EACArtC,EAAhB2yC,0BAAgBA,EACA3yC,EAAhB4yC,aAAgBA,EACA5yC,EAAhB6yC,eAAgBA,EACkB7yC,EAAlCkyC,SAAkCA,EA/GrBlyC,EAAb8yC,YAAsC,UAWlC9yC,EAAJP,YAAiB,EAEHO,EAAd6F,gBAAgC,GAAI8S,GAAAA,aAEvB3Y,EAAb+yC,SAAgC,IACnB/yC,EAAbgzC,QAAwC,IAK3BhzC,EAAbizC,cAAqC,EAKjCjzC,EAAJkzC,aAAkB,EAKdlzC,EAAJmzC,SAAc,EAKVnzC,EAAJozC,iBAAsB,EAMRpzC,EAAdqzC,YAA4B,GAAI16B,GAAAA,aAElB3Y,EAAdszC,aAA6B,GAAI36B,GAAAA,aAIpB3Y,EAAbuzC,SAAwB,UAKpBvzC,EAAJwzC,cAAmB,EAEIxzC,EAAvByzC,OAAsE,GAAI96B,GAAAA,aAQtE3Y,EAAJ0zC,kBAAuB,EAEA1zC,EAAvB2zC,WAA0E,GAAIh7B,GAAAA,aAM1E3Y,EAAJ0kB,gBAAsB,cA6CT1kB,EAAb4zC,eAA2F,WAAM,MAAA5zC,GAAKG,QAAQ2B,YAoV9G,MA5cwDkX,GAAxDy5B,EAAAz6B,GAaIrZ,OAAJC,eAAQ6zC,EAAR3zC,UAAA,aAAAC,IAAI,WAAkB,MAAOC,MAAKS,YAClCP,IAAI,SAAcC,GAASH,KAAKS,WAAaN,mCAczCR,OAAJC,eAAQ6zC,EAAR3zC,UAAA,cAAAC,IAAI,WAAmB,MAAOC,MAAKk0C,aACnCh0C,IAAI,SAAeC,GAASH,KAAKk0C,YAAc/zC,mCAI3CR,OAAJC,eAAQ6zC,EAAR3zC,UAAA,UAAAC,IAAI,WAAe,MAAOC,MAAKm0C,SAC/Bj0C,IAAI,SAAWC,GAASH,KAAKm0C,QAAUh0C,mCAInCR,OAAJC,eAAQ6zC,EAAR3zC,UAAA,kBAAAC,IAAI,WAAuB,MAAOC,MAAKo0C,iBACvCl0C,IAAI,SAAmBC,GAASH,KAAKo0C,gBAAkBj0C,mCAgBnDR,OAAJC,eAAQ6zC,EAAR3zC,UAAA,eAAAC,IAAI,WAAoB,MAAOC,MAAKw0C,cACpCt0C,IAAI,SAAgBC,GAASH,KAAKw0C,aAAer0C,mCAS7CR,OAAJC,eAAQ6zC,EAAR3zC,UAAA,mBAAAC,IAAI,WAAwB,MAAOC,MAAK00C,kBACxCx0C,IAAI,SAAoBC,GAASH,KAAK00C,iBAAmBv0C,mCAYrDR,OAAJC,eAAQ6zC,EAAR3zC,UAAA,aAAAC,IAAI,WACI,MAAOC,MAAKq0C,YAAYplC,gDAI5BtP,OAAJC,eAAQ6zC,EAAR3zC,UAAA,cAAAC,IAAI,WACI,MAAOC,MAAKs0C,aAAarlC,gDAG7BtP,OAAJC,eAAQ6zC,EAAR3zC,UAAA,UAAAC,IAAI,WACI,MAAOC,MAAK60C,0CAGhBl1C,OAAJC,eAAQ6zC,EAAR3zC,UAAA,cAAAC,IAAI,WACI,MAAOC,MAAK80C,8CAIhBn1C,OAAJC,eAAQ6zC,EAAR3zC,UAAA,UAAAC,IAAI,WACI,OAAQC,KAAK0C,YAAc1C,KAAK4K,gDAyBpC6oC,EAAJ3zC,UAAAmF,SAAI,WAGQjF,KAAK+0C,YAAY/0C,KAAKg1C,YACtBh1C,KAAKi1C,uBAAuBj1C,KAAKg1C,WAIjCh1C,KAAKk1C,eAAel1C,KAAKm1C,YACzBn1C,KAAKm1C,SAAWn1C,KAAKo1C,mBAAmBp1C,KAAKm1C,WAIjDn1C,KAAKgQ,UAA2C,kBAAxBhQ,MAAK40C,eAAgC50C,KAAK40C,iBAAmB50C,KAAK40C,eACtF50C,KAAKgQ,oBAAqBqlC,aAC1Br1C,KAAKgQ,UAAUuoB,YAAYv4B,KAAKsB,WAAWoD,eACpC1E,KAAKgQ,oBAAqBslC,GAAAA,YAEjCt1C,KAAKgQ,UAAU1L,eAAei0B,YAAYv4B,KAAKsB,WAAWoD,eAI9D1E,KAAK4zC,aAAatB,cAActyC,OAQpCyzC,EAAJ3zC,UAAAkT,YAAI,SAAYC,GACJA,EAAQvQ,WAER1C,KAAKu1C,yBAAyBv1C,KAAK0C,WAAYuQ,EAAQvQ,UAAU8yC,cAIzE/B,EAAJ3zC,UAAA41B,gBAAI,WAEQ11B,KAAKy1C,qBACLz1C,KAAK01C,cAAcC,OAAO31C,KAAKy1C,oBAAoBjxC,UAGnDxE,KAAK41C,mBACJ51C,KAAK41C,kBAAkBlxC,cAAoCyV,SAIpEs5B,EAAJ3zC,UAAAqF,YAAI,WACQnF,KAAKgQ,oBAAqBslC,GAAAA,YAC1Bt1C,KAAKgQ,UAAU5K,WAIvBquC,EAAJ3zC,UAAA8P,KAAI,WACI5P,KAAK61C,yBAAwB,IAGjCpC,EAAJ3zC,UAAA+O,MAAI,SAAML,GACFxO,KAAK61C,yBAAwB,EAAOrnC,IAIxCilC,EAAJ3zC,UAAA0gB,QAAI,SAAQhS,GACJxO,KAAK6O,MAAML,IAGfilC,EAAJ3zC,UAAAg2C,UAAI,WACI91C,KAAK+1C,gBAAgB,OAGzBtC,EAAJ3zC,UAAAk2C,cAAI,WACIh2C,KAAK+1C,gBAAgB,WAGzBtC,EAAJ3zC,UAAAm2C,YAAI,WACI,MAAOj2C,OAGXyzC,EAAJ3zC,UAAAo2C,uBAAI,WACI,MAAOl2C,MAAKy1C,qBAGhBhC,EAAJ3zC,UAAAq2C,oBAAI,WACI,MAAOn2C,MAAKy1C,qBAAuBz1C,KAAKy1C,oBAAoB/uC,UAGhE+sC,EAAJ3zC,UAAAs2C,WAAI,WACI,MAAOp2C,MAAKsB,YAActB,KAAKsB,WAAWoD,eAG9C+uC,EAAJ3zC,UAAAu2C,YAAI,SAAY9yC,GAEJvD,KAAKs2C,QACLt2C,KAAKu2C,gBACJhzC,EAAOizC,OAAuB5qC,UAAU6qC,SAAS,kBAClDz2C,KAAK0C,WAEL1C,KAAK+1C,gBAAgB,WAK7BtC,EAAJ3zC,UAAA42C,YAAI,SAAYnjC,GACR,MAAOvT,MAAK8zC,cAAgBvgC,GAGhCkgC,EAAJ3zC,UAAAwgB,UAAI,SAAU9a,GAEFA,EAAMQ,UAAYC,EAAAA,QAAUjG,KAAKgQ,WAAchQ,KAAKgQ,oBAAqBslC,GAAAA,aAEzEt1C,KAAK6O,QACLrJ,EAAM8Y,mBAKdm1B,EAAJ3zC,UAAA62C,gBAAI,WACQ32C,KAAK0C,WACL1C,KAAK+1C,gBAAgB,WAM7BtC,EAAJ3zC,UAAAi2C,gBAAI,SAAgBxiC,GAAhB,GAAJvS,GAAAhB,KACc8b,GAAY86B,GAAI52C,KAAKy0C,OAAQoC,OAAQ72C,KAAK20C,YAAaphC,GACvDujC,GAAeF,GAAI,cAAeC,OAAQ,mBAAoBtjC,EAEpE,IAAIuI,YAAmBnC,GAAAA,aACnBmC,EAAQ9U,KAAKhH,KAAKm2C,2BACf,IAAuB,kBAAZr6B,GAAwB,CAEtC,GAAMtN,GAASsN,EAAQ9b,KAAKm2C,uBAEtBY,EAAY,SAACC,GAAiC,OAAa,IAAZA,GAAsBh2C,EAAK6N,MAAMmoC,GAEtF,IAAIC,EAAUzoC,GAAS,CACnBxO,KAAK82C,IAAc,CACnB,IAAMI,GAAa,SAACF,GAChBh2C,EAAK81C,IAAc,EACnBC,EAAUC,GAEbxoC,GAAyBuQ,KAAKm4B,GAAYC,MAAMD,OAEjDH,GAAUvoC,KAMtBilC,EAAJ3zC,UAAAs3C,iBAAI,SAAiBj3C,GACb,MAAwB,gBAAVA,IAAgC,KAAVA,GAIxCszC,EAAJ3zC,UAAAu3C,cAAI,SAAcl3C,GACV,MAAOA,aAAiBgQ,GAAAA,aAI5BsjC,EAAJ3zC,UAAAi1C,YAAI,SAAY50C,GACR,MAAOA,aAAiBm3C,GAAAA,MAI5B7D,EAAJ3zC,UAAAo1C,eAAI,SAAe/0C,GACX,MAAOif,OAAMC,QAAQlf,IAAUA,EAAMgR,OAAS,GAI1CsiC,EAAZ3zC,UAAAy1C,yBAAI,SAAiCl4B,EAAkBk6B,EAA2BC,GAA9E,GAAJx2C,GAAAhB,IAMQ,YANR,KAAAu3C,IAAuDA,GAAvD,GAEYl6B,GACArd,KAAKy3C,mBAAmB,GAGrB54B,QACFC,QAAQy4B,GAAav3C,KAAK03C,UAAUr6B,IAEpC0B,KAAK,WACE1B,EACArc,EAAKqzC,YAAYrtC,QAEjBhG,EAAKszC,aAAattC,KAAKwwC,GAEvBx2C,EAAKy2C,yBAQrBhE,EAAJ3zC,UAAA63C,sBAAI,SAAsB/3B,EAAiCg4B,GACnD,GAAMz3C,GAAQyf,EAAQg4B,GAChBC,IAKN,OAJI73C,MAAKy1C,qBACLoC,EAAKnnC,KAAK1Q,KAAKy1C,oBAAoB/uC,UAGf,kBAAVvG,GAAuBA,EAAM25B,MAAMla,EAASi4B,GAAQ13C,GAMtEszC,EAAJ3zC,UAAAg4C,cAAI,SAAcC,GAEV,GAAMvpC,GAASxO,KAAK23C,sBAAsBI,EAAQ,UAC9Cd,GAAUzoC,KACVupC,EAAOC,SAAU,EAChBxpC,EAAuBuQ,KAAK,WAAM,MAAAg5B,GAAOC,SAAU,IAAOb,MAAM,WAAM,MAAAY,GAAOC,SAAU,MAKxFvE,EAAZ3zC,UAAA+1C,wBAAI,SAAgCx4B,EAAkBm6B,GAC9C,MAAIx3C,MAAK0C,YAAc2a,GAEnBrd,KAAK0C,UAAY2a,EACjBrd,KAAK6G,gBAAgBG,KAAKqW,GAEnBrd,KAAKu1C,yBAAyBl4B,GAAS,EAAMm6B,IAGjD34B,QAAQC,WAGX20B,EAAZ3zC,UAAAm4C,qBAAI,SAA6BzgC,UACzBxX,MAAK4K,eAAiB4M,EAClBA,GACAxX,KAAKk4C,uBAAjBvwC,KACgBA,EAAC,QAAQ6P,IAAU,EACnB7P,EAAC,QAAQ6P,EAAzB,YAA0C,EAC1C7P,GACY3H,KAAKm4C,wBAAjBC,KACgBA,EAAC,QAAQ5gC,IAAU,EACnB4gC,EAAC,QAAQ5gC,EAAzB,YAA0C,EAC1C4gC,IAGYp4C,KAAKk4C,sBAAwBl4C,KAAKm4C,uBAAyB,KAG3Dn4C,KAAKy1C,oBACLz1C,KAAKy1C,oBAAoB1qC,kBAAkB5G,eAE3CnE,KAAK6zC,eAAe1vC,gBAIpBsvC,EAAZ3zC,UAAA43C,UAAI,SAAkBW,GAAlB,GAAJr3C,GAAAhB,IAWQ,OATIq4C,IAGAluB,OAAOrX,WAAW,WAAM,MAAA9R,GAAKs3C,0BAGjCt4C,KAAKi4C,qBAAqBI,EAAY,QAAU,SAGzC,GAAIx5B,SAAQ,SAACC,GAAY,MAAAqL,QAAOrX,WAAW,WAC9C9R,EAAKi3C,qBAAqB,MAC1Bn5B,KAjZ0B,QAqZ1B20B,EAAZ3zC,UAAAs1C,mBAAI,SAA2BmD,GACvB,MAAOA,GAAQv2B,IAAI,SAAC+1B,GAEhB,MAAZ1wC,KAEoBkM,KAAM,UACNmB,KAAM,UACN8jC,aAAa,EACb53C,MAAM,EACNo3C,SAAS,EACT3xC,UAAU,GAEX0xC,MAUPtE,EAAZ3zC,UAAAm1C,uBAAI,SAA+BwD,GAC3B,GAAMC,GAAU14C,KAAK0zC,IAAIiF,wBAAwBF,GAC3CG,EAAgBjmC,EAAAA,SAAS7P,QAC3BgH,YAAauR,QAAS23B,GAAY1f,SAAUtzB,OAC5CurC,OAAQvrC,KAAKquC,cAAcwK,gBAG/B74C,MAAKy1C,oBAAsBiD,EAAQ51C,OAAO81C,GAEtC54C,KAAK84C,mBACLn5C,OAAOo5C,OAAO/4C,KAAKy1C,oBAAoB/uC,SAAU1G,KAAK84C,mBAK1D94C,KAAKy1C,oBAAoB1qC,kBAAkBC,iBAMvCyoC,EAAZ3zC,UAAAw4C,sBAAI,WACI,GAAMU,GAAeh5C,KAAKi5C,eAAev0C,cACnCyuC,EAAeF,GAAUI,sBAE3BF,KAEAnzC,KAAK0lB,gBAAqBytB,EAAatrC,EAAImxC,EAAajb,WAApE,OAAoFoV,EAAarrC,EAAIkxC,EAAathB,WAAlH,WAQY+b,EAAZ3zC,UAAA23C,mBAAI,SAA2ByB,OAA/B,KAAAA,IAA+BA,EAA/B,GAC2Bl5C,KAAK4zC,aAAa1B,WAEtB/gC,OAAS+nC,EAAU,GAE9Bl5C,KAAKiU,SAASiB,SAASlV,KAAKkzC,SAASiG,KAAM,gBAAoBn5C,KAAK2zC,0BAA0ByF,eAA1G,MACYp5C,KAAKiU,SAASiB,SAASlV,KAAKkzC,SAASiG,KAAM,WAAY,YAEvDn5C,KAAKiU,SAAS4D,YAAY7X,KAAKkzC,SAASiG,KAAM,iBAC9Cn5C,KAAKiU,SAAS4D,YAAY7X,KAAKkzC,SAASiG,KAAM,cArc7CjxC,GAARE,EAAAA,iCAALqrC,EAAA3zC,UAAA,kBAAA,IAEaoI,GAARE,EAAAA,iCAALqrC,EAAA3zC,UAAA,gBAAA,IAEaoI,GAARE,EAAAA,iCAALqrC,EAAA3zC,UAAA,wBAAA,IAEaoI,GAARE,EAAAA,iCAALqrC,EAAA3zC,UAAA,eAAA,IAGIoI,GADCE,EAAAA,iEACLqrC,EAAA3zC,UAAA,YAAA,MAIcoI,GAATC,EAAAA,kCAALsrC,EAAA3zC,UAAA,sBAAA,IAEaoI,GAARE,EAAAA,iCAALqrC,EAAA3zC,UAAA,eAAA,IACaoI,GAARE,EAAAA,iCAALqrC,EAAA3zC,UAAA,cAAA,IACaoI,GAARE,EAAAA,iCAALqrC,EAAA3zC,UAAA,sBAAA,IACaoI,GAARE,EAAAA,iCAALqrC,EAAA3zC,UAAA,kBAAA,IACaoI,GAARE,EAAAA,iCAALqrC,EAAA3zC,UAAA,cAAA,IACaoI,GAARE,EAAAA,iCAALqrC,EAAA3zC,UAAA,cAAA,IACaoI,GAARE,EAAAA,kCAALqrC,EAAA3zC,UAAA,mBAAA,IAGIoI,GADCE,EAAAA,iEACLqrC,EAAA3zC,UAAA,aAAA,MAKIoI,GADCE,EAAAA,iEACLqrC,EAAA3zC,UAAA,SAAA,MAKIoI,GADCE,EAAAA,iEACLqrC,EAAA3zC,UAAA,iBAAA,MAIaoI,GAARE,EAAAA,iCAALqrC,EAAA3zC,UAAA,kBAAA,IACaoI,GAARE,EAAAA,iCAALqrC,EAAA3zC,UAAA,kBAAA,IAGcoI,GAATC,EAAAA,kCAALsrC,EAAA3zC,UAAA,kBAAA,IAEcoI,GAATC,EAAAA,kCAALsrC,EAAA3zC,UAAA,mBAAA,IAGaoI,GAARE,EAAAA,iCAALqrC,EAAA3zC,UAAA,eAAA,IACaoI,GAARE,EAAAA,iCAALqrC,EAAA3zC,UAAA,eAAA,IAGIoI,GADCE,EAAAA,iEACLqrC,EAAA3zC,UAAA,cAAA,MAIuBoI,GAAlBE,EAAAA,QAASD,EAAAA,kCAAdsrC,EAAA3zC,UAAA,aAAA,IAEwDoI,GAAnD8D,EAAAA,UAAU,qBAAsB+lC,KAAM7oC,EAAAA,aAA3CF,EAAA,cAA2EE,EAAAA,aAA3EuqC,EAAA3zC,UAAA,wBAAA,IACaoI,GAARE,EAAAA,iCAALqrC,EAAA3zC,UAAA,mBAAA,IAGIoI,GADCE,EAAAA,iEACLqrC,EAAA3zC,UAAA,kBAAA,MAIuBoI,GAAlBE,EAAAA,QAASD,EAAAA,kCAAdsrC,EAAA3zC,UAAA,iBAAA,IACiCoI,GAA5B8D,EAAAA,UAAU,kBAAfhD,EAAA,cAAiDE,EAAAA,aAAjDuqC,EAAA3zC,UAAA,qBAAA,IAC0DoI,GAArD8D,EAAAA,UAAU,iBAAkB+lC,KAAM1oC,EAAAA,mBAAvCL,EAAA,cAAyEK,EAAAA,mBAAzEoqC,EAAA3zC,UAAA,oBAAA,IAiDaoI,GAARE,EAAAA,iCAALqrC,EAAA3zC,UAAA,qBAAA,IAxHa2zC,EAAbvrC,GAVCgE,EAAAA,WACG3D,SAAU,WACV4D,SAAJ,quHACIC,QAAS,8lGACTC,gBAAiBC,EAAAA,wBAAwBC,OACzCC,cAAeC,EAAAA,kBAAkBC,KACjCjE,MACIC,YAAa,uBAsHZE,EAAT,EAASC,EAAAA,OAAOwwC,EAAAA,WARhBrwC,EAAA,qBAAyBC,EAAAA,QACC+N,EAAAA,UACL0mB,EAAAA,yBACOx0B,EAAAA,WACGG,EAAAA,iBACYiwC,GACbtH,GACExkC,EAAAA,kBAAhC7N,UAlHa8zC,IAA2CT,IC3CxDuG,GAAA,WAAA,QAAAA,MAMA,MALIA,GAAJz5C,UAAA8zB,UAAI,SAAUzzB,EAAwBq5C,OAAtC,KAAAA,IAAsCA,EAAtC,KACQ,IAAMC,IAAat5C,CAEnB,OAAOkyB,OAAMonB,GAAa,GAAGt5C,EAAU,GAAGs5C,EAAYD,GAJjDD,EAAbrxC,GAHCwxC,EAAAA,MACGjgC,KAAM,eAEG8/B,MCUbI,GAAA,WAMI,QAAJA,GAAwBx4C,EAAkBye,OAA1C,KAAAA,IAA0CA,KAAtC,IAAJ5e,GAAAhB,IAAwBA,MAAxBmB,QAAwBA,EAChBnB,KAAK45C,cAEC,kBAAoBh6B,KACtBA,EAAQg1B,eAAiB,MAG7B50C,KAAK65C,YAAYj6B,GACjB5f,KAAKuyC,SAAS7rC,SAASkJ,OACvB5P,KAAKuyC,SAAS7rC,SAAS4tC,aAAajyC,UAAU,WAAM,MAAArB,GAAK84C,iBAEzD95C,KAAKiB,WAAW2N,gBAEX1M,KAAKkM,EAAAA,OAAO,SAAC5I,GACV,MAAOA,GAAMQ,UAAYC,EAAAA,QAAU2Z,EAAQq0B,gBAE9C5xC,UAAU,WAAM,MAAArB,GAAKuxC,SAAS7rC,SAASmI,UA2BpD,MAxBI8qC,GAAJ75C,UAAAm2C,YAAI,WACI,MAAOj2C,MAAKuyC,UAAYvyC,KAAKuyC,SAAS7rC,UAG1CizC,EAAJ75C,UAAAg6C,aAAI,WACQ95C,KAAKuyC,WACLvyC,KAAKiB,WAAWmE,UAEhBpF,KAAKuyC,SAAW,OAIhBoH,EAAZ75C,UAAA+5C,YAAI,SAAoBj6B,GACZ5f,KAAKuyC,UAEL5yC,OAAOo5C,OAAO/4C,KAAKuyC,SAAS7rC,SAAUkZ,IAKtC+5B,EAAZ75C,UAAA85C,YAAI,WACI55C,KAAKiB,WAAajB,KAAKmB,QAAQ2B,SAC/B9C,KAAKuyC,SAAWvyC,KAAKiB,WAAWwF,OAAO,GAAIF,GAAAA,gBAAgBktC,MAEnEkG,KAGAI,GAAA,WAUI,QAAJA,GACgB54C,EACAyyC,GADA5zC,KAAhBmB,QAAgBA,EACAnB,KAAhB4zC,aAAgBA,EAiEhB,MA3EIj0C,QAAJC,eAAQm6C,EAARj6C,UAAA,cAAAC,IAAI,WACI,MAAOC,MAAK4zC,aAAa1B,4CAG7BvyC,OAAJC,eAAQm6C,EAARj6C,UAAA,iBAAAC,IAAI,WACI,MAAOC,MAAK4zC,aAAab,cAAc9jC,gDAS3C8qC,EAAJj6C,UAAA8Q,SAAI,WACI5Q,KAAK4zC,aAAahjC,YAGtBmpC,EAAJj6C,UAAAgD,OAAI,SAAU8c,GAkBN,WAlBR,KAAAA,IAAcA,MAE4B,kBAAvBA,GAAQ+0B,aAGf/0B,EAAQ+0B,WAAa,cAGnB,gBAAkB/0B,KACpBA,EAAQq0B,cAAe,GAIrB,WAAar0B,KAEfA,EAAQo0B,QAAU,KAGf,GAAI2F,IAAuB35C,KAAKmB,QAASye,GAASq2B,eAG7D8D,EAAJj6C,UAAAk6C,QAAI,SAAWp6B,EAA0Cq6B,GAgBjD,WAhBR,KAAAr6B,IAAeA,UAAf,KAAAq6B,IAAyDA,EAAzD,WACY,YAAcr6B,IACdK,QAAQC,KAAK,iFAIa,kBAAnBN,GAAQ60B,SAGf70B,EAAQ60B,OAAS,cAGrB70B,EAAQk0B,YAAc,UACtBl0B,EAAQs6B,YAAc,yBAAyBD,EAAvD,KAAsEr6B,EAAQs6B,aAAe,IACrFt6B,EAAQ22B,gBAAiB,EAElBv2C,KAAK8C,OAAO8c,IAGvBm6B,EAAJj6C,UAAAq6C,QAAI,SAAWv6B,GACP,WADR,KAAAA,IAAeA,MACA5f,KAAKo6C,cAAcx6B,EAAS,YAGvCm6B,EAAJj6C,UAAAu6C,OAAI,SAAUz6B,GACN,WADR,KAAAA,IAAcA,MACC5f,KAAKo6C,cAAcx6B,EAAS,SAG/Bm6B,EAAZj6C,UAAAs6C,cAAI,SAAyBx6B,EAA0Cq6B,GAO/D,WAPR,KAAAr6B,IAA6BA,MAEf,gBAAkBA,KAEpBA,EAAQk1B,aAAe,MAGpB90C,KAAKg6C,QAAQp6B,EAASq6B,IA3ExBF,EAAb7xC,GADCuK,EAAAA,aAYDzJ,EAAA,qBAAyBC,EAAAA,QACK+oC,MAZjB+H,MChDbO,GAAA,WAAA,QAAAA,MAA6B,MAAhBA,GAAbpyC,GAPCsB,EAAAA,UACGG,SAAWC,EAAAA,aAAcC,EAAAA,cAAe0wC,GAAgBxmC,IACxDrK,SAAW+pC,IACXhqC,cAAgBgqC,GAAkB8F,IAClCvvC,iBAAmBypC,IACnB3pC,WAAakoC,GAAuB+H,OAE3BO,M1BOPE,GAAsB,sBACtBC,GAAiB,iBACjBC,GAAkB,kBAClBC,GAAkB,kBAgBxBhU,GAAA,WAAA,QAAAA,MAA2B,MAAdA,GAAbz+B,GANCI,EAAAA,WACGC,SAVmB,iBAWnBE,MACIqE,MAZe,qBAeV65B,MAQbD,GAAA,WAAA,QAAAA,MAA4B,MAAfA,GAAbx+B,GANCI,EAAAA,WACGC,SAAUmyC,GACVjyC,MACIqE,MAAO4tC,OAGFhU,MAQbF,GAAA,WAAA,QAAAA,MAA4B,MAAfA,GAAbt+B,GANCI,EAAAA,WACGC,SAAUoyC,GACVlyC,MACIqE,MAAO6tC,OAGFnU,MAEboU,GAAA,WACI,QAAJA,GAAuBriC,GAAAvY,KAAvBuY,YAAuBA,EACvB,MAAAqiC,MAEaC,GAA+DliC,EAAciiC,IA6C1FnU,GAAA,SAAAztB,GAgCI,QAAJytB,GACgBnlC,EACA2X,EACA6hC,EACAC,GAJZ,GAAJ/5C,GAMQgY,EANRI,KAAApZ,KAMcsB,IANdtB,WACgBgB,GAAhBM,WAAgBA,EACAN,EAAhBiY,cAAgBA,EACAjY,EAAhB85C,UAAgBA,EACA95C,EAAhB+5C,OAAgBA,EAjCZ/5C,EAAJmY,SAAuB,EAGnBnY,EAAJg6C,iBAiBIh6C,EAAJi6C,aAA2B,EAEfj6C,EAAZk6C,cAA0C,GAAIjf,GAAAA,eA8G9C,MAvIkCjiB,GAAlCysB,EAAAztB,GASIrZ,OAAJC,eAAQ6mC,EAAR3mC,UAAA,kBAAAI,IAAI,SAAmBC,GACfH,KAAKsB,WAAWoD,cAAcgT,aAAa,gBAAiByjC,UAAUh7C,qCAS1ER,OAAJC,eAAQ6mC,EAAR3mC,UAAA,sBAAAC,IAAI,WACI,MAAOC,MAAKg7C,cAAc7pC,OAAS,mCAQvCxR,OAAJC,eAAgB6mC,EAAhB3mC,UAAA,qBAAAC,IAAI,WACI,MAAOC,MAAKo7C,gBAAkBp7C,KAAKo7C,gBAAgB12C,cAAc8zB,iBAAiB,8CAYtFiO,EAAJ3mC,UAAAmF,SAAI,WACIjF,KAAKq7C,sBAELr7C,KAAKs7C,eAAiBt7C,KAAKiZ,cAAcc,QAAQ/Z,KAAKsB,WAAWoD,eAAe,GAE5E1E,KAAKu7C,oBACLv7C,KAAKw7C,sBAIb/U,EAAJ3mC,UAAA41B,gBAAI,WACS11B,KAAKu7C,oBAIVv7C,KAAKy7C,iCAGThV,EAAJ3mC,UAAAqF,YAAI,WACInF,KAAKk7C,cAAcrkC,cACnB7W,KAAKiZ,cAAciB,eAAela,KAAKsB,WAAWoD,eAClD1E,KAAK07C,gCAGTjV,EAAJ3mC,UAAA67C,qBAAI,SAAqBC,GACjB,QAAK57C,KAAK86C,UAAUe,WAIb1xB,OAAO2xB,SAASC,KAAKxpC,QAAQqpC,IAAS,GAGjDnV,EAAJ3mC,UAAAk8C,kBAAI,WACIh8C,KAAKi8C,kBAGTxV,EAAJ3mC,UAAAgG,cAAI,SAAcvC,GACV,GAAM24C,GAAgB34C,EAAOizC,OAAuB5qC,UAAU6qC,SAASgE,GAGnEz6C,MAAKu7C,oBAAsBh4C,EAAOyC,UAAY+yB,EAAAA,OAASmjB,GACvDl8C,KAAKi8C,kBAIbxV,EAAJ3mC,UAAAq8C,0BAAI,WACIn8C,KAAKo8C,sBAGD3V,EAAZ3mC,UAAA07C,mBAAI,WAAA,GAAJx6C,GAAAhB,IACQA,MAAKk7C,cAAcrvC,IACf7L,KAAKs7C,eAAej5C,UAAU,SAAC6E,GACZ,OAAXA,GACAlG,EAAKo7C,yBAMb3V,EAAZ3mC,UAAAm8C,eAAI,WACIj8C,KAAKi7C,aAAej7C,KAAKi7C,aAGrBxU,EAAZ3mC,UAAAs8C,mBAAI,WACIp8C,KAAKi7C,aAAc,EACnBj7C,KAAK+6C,OAAO/vC,iBAGRy7B,EAAZ3mC,UAAA27C,8BAAI,WAAA,GAAJz6C,GAAAhB,IACQA,MAAKq8C,kBAAkB/2C,QAAQ,SAACg3C,GAC5Bt7C,EAAKiY,cAAcc,QAAQuiC,GAAI,MAI/B7V,EAAZ3mC,UAAA47C,6BAAI,WAAA,GAAJ16C,GAAAhB,IACQA,MAAKq8C,kBAAkB/2C,QAAQ,SAACg3C,GAC5Bt7C,EAAKiY,cAAciB,eAAeoiC,MAKlC7V,EAAZ3mC,UAAAu7C,oBAAI,WAAA,GAAJr6C,GAAAhB,KACcu8C,EAAkBv8C,KAAKsB,WAAWoD,cAAc83C,eAAe,QAErED,GAAOj3C,QAAQ,SAACE,GAAU,MAAAxE,GAAKM,WAAWoD,cAAce,oBAAoB,QAASD,KAErFxF,KAAKsB,WAAWoD,cAAc0B,iBAAiB,QAAS,SAACZ,GACjDxE,EAAKM,WAAWoD,cAAc+3C,aAAa,aAC3Cj3C,EAAMk3C,6BAEX,GAEHH,EAAOj3C,QAAQ,SAACE,GAAU,MAAAxE,GAAKM,WAAWoD,cAAc0B,iBAAiB,QAASZ,MAlItF0C,GADCE,EAAAA,iCACLq+B,EAAA3mC,UAAA,eAAA,IAGIoI,GADCE,EAAAA,gCACLq+B,EAAA3mC,UAAA,oBAAA,IAGIoI,GADCE,EAAAA,iEAGLq+B,EAAA3mC,UAAA,iBAAA,MAGIoI,GADCie,EAAAA,aAAa,oBAAsB4rB,KAAM5hC,EAAAA,cAC9CnH,EAAA,cAAsBmH,EAAAA,cAAtBs2B,EAAA3mC,UAAA,uBAAA,IAGIoI,GADC8D,EAAAA,UAAU,mBAAqB+lC,KAAM7oC,EAAAA,aAC1CF,EAAA,cAAqBE,EAAAA,aAArBu9B,EAAA3mC,UAAA,sBAAA,IAjBa2mC,EAAbv+B,GA3CCgE,EAAAA,WACG3D,SAAUkyC,GACVtuC,SAAU,suCAiCVK,cAAeC,EAAAA,kBAAkBC,KACjCL,gBAAiBC,EAAAA,wBAAwBC,OACzCmP,QAAS,YACTjT,MACI0jC,kBAAmB,mBACnB1lB,kBAAmB,QAoC3Bzd,EAAA,qBAA4BE,EAAAA,WACGiT,EAAAA,aACJwgC,EAAAA,SACHnvC,EAAAA,qBApCXi5B,IAAqBoU,IA4IlCtU,GAAA,WAHA,QAAAA,KAKIvmC,KAAJoB,SAA8C,OAM9C,MAHIzB,QAAJC,eAAQ2mC,EAARzmC,UAAA,cAAAC,IAAI,WACI,MAAyB,SAAlBC,KAAKoB,SAAsB,iBAAmB,mDAJzD8G,GADCE,EAAAA,iCACLm+B,EAAAzmC,UAAA,eAAA,IAGIoI,GADCG,EAAAA,YAAY,4DAGjBk+B,EAAAzmC,UAAA,aAAA,MAPaymC,EAAbr+B,GAHCI,EAAAA,WACGC,SAAUiyC,MAEDjU,MAUbqW,GAAA,WAGI,QAAJA,GACen4C,EACAogB,GADA7kB,KAAfyE,QAAeA,EACAzE,KAAf6kB,MAAeA,EAJH7kB,KAAZ68C,YAAkC,EAqBlC,MAdID,GAAJ98C,UAAAg9C,iBAAI,SAAiBC,GACb/8C,KAAK68C,WAAaE,EAElB/8C,KAAKg9C,wBAGDJ,EAAZ98C,UAAAk9C,qBAAI,WACQh9C,KAAK68C,WACL78C,KAAKyE,QAAQmH,UAAUC,IA/PH,6BAiQpB7L,KAAKyE,QAAQmH,UAAUysB,OAjQH,8BAqQhCukB,KAEAK,GAAA,WAkBI,QAAJA,GACex4C,EACAogB,EACAq4B,OAAf,KAAAA,IAAeA,MAFAl9C,KAAfyE,QAAeA,EACAzE,KAAf6kB,MAAeA,EACA7kB,KAAfk9C,iBAAeA,EA+Bf,MAlDIv9C,QAAJC,eAAQq9C,EAARn9C,UAAA,eAAAC,IAAI,WACI,MAAOC,MAAKk9C,iBAAiB/rC,OAAS,mCAK1CxR,OAAJC,eAAQq9C,EAARn9C,UAAA,uBAAAC,IAAI,WACI,WAAkCyQ,KAA9BxQ,KAAKm9C,qBACEn9C,KAAKm9C,sBAGhBn9C,KAAKo9C,uCAEEp9C,KAAKm9C,uDAShBF,EAAJn9C,UAAAg9C,iBAAI,SAAiBC,GACT/8C,KAAKk9C,iBAAiB/rC,OAAS,GAC/BnR,KAAKq9C,YAAYN,GAGrB/8C,KAAKk9C,iBAAiB53C,QAAQ,SAACsQ,GAAS,MAAAA,GAAKknC,iBAAiBC,MAG1DE,EAAZn9C,UAAAs9C,qCAAI,WACIp9C,KAAKm9C,qBAAuBn9C,KAAKk9C,iBAC5Bl6B,OAAO,SAACs6B,EAAK1nC,GAAS,MAAA0nC,GAAM1nC,EAAKiP,OAAO,IAGzCo4B,EAAZn9C,UAAAy9C,SAAI,WACI,GAAMC,GAAgBx9C,KAAKyE,QAAQg5C,aAAa,gBAEhD,OAAOD,GACDE,UAAUF,GACTx9C,KAAKk9C,iBAAiB/rC,OAAS,EAAInR,KAAKk9C,iBAAiB,GAAGz4C,QAAQk5C,UAAY,IAGnFV,EAAZn9C,UAAAu9C,YAAI,SAAoBN,GACZA,EACA/8C,KAAKyE,QAAQiT,aAAa,QAAS1X,KAAKu9C,YAExCv9C,KAAKyE,QAAQm5C,gBAAgB,UAGzCX,KAcA5W,GAAA,WAwCI,QAAJA,GACgB9tB,GAAAvY,KAAhBuY,YAAgBA,EAvCKvY,KAArB69C,4BAA2D,EACtC79C,KAArB89C,uBAAsD,IACjC99C,KAArB+9C,kBAAiDvD,GAC5Bx6C,KAArBg+C,qBACQvD,GACAC,GACAC,GAmCA,IAAMsD,GAAiB30B,EAAAA,UAAUa,OAAQ,UACpCjoB,KAAKg8C,EAAAA,aAAal+C,KAAK89C,wBAE5B99C,MAAKm+C,oBAAsBF,EAAe57C,UAAUrC,KAAKo+C,gBAAgB30B,KAAKzpB,OA4DtF,MA5FIL,QAAJC,eAAgBymC,EAAhBvmC,UAAA,mBAAAC,IAAI,WACI,MAAOC,MAAKuY,YAAY7T,cAAcozB,cAAc,OAAO1T,wBAAwBS,uCAGvFllB,OAAJC,eAAgBymC,EAAhBvmC,UAAA,eAAAC,IAAI,WACI,WAA0ByQ,KAAtBxQ,KAAKq+C,cAA+Br+C,KAAK69C,4BAI7C79C,KAAKs+C,8BAEEt+C,KAAKq+C,cALDr+C,KAAKq+C,8CAQpB1+C,OAAJC,eAAgBymC,EAAhBvmC,UAAA,mBAAAC,IAAI,WACI,WAA+ByQ,KAA3BxQ,KAAKu+C,mBAAoCv+C,KAAK69C,4BAIlD79C,KAAKw+C,mCAEEx+C,KAAKu+C,mBALDv+C,KAAKu+C,mDAmBpBlY,EAAJvmC,UAAAs+C,gBAAI,WAGI,IAAK,GAFDK,GAAgBz+C,KAAKs3B,gBAAkBt3B,KAAK0+C,gBAEvC/a,EAAI3jC,KAAK2+C,YAAYxtC,OAAS,EAAGwyB,GAAK,EAAGA,IAAK,CACnD,GAAM/tB,GAAO5V,KAAK2+C,YAAYhb,EAEzB/tB,GAAKgpC,cAIVhpC,EAAKknC,iBAAiB2B,EAAgB,GACtCA,GAAiB7oC,EAAKipC,uBAI9BxY,EAAJvmC,UAAA41B,gBAAI,WAAA,GAAJ10B,GAAAhB,IAGQ8S,YAAW,WAAM,MAAA9R,GAAKo9C,mBAAmB,IAG7C/X,EAAJvmC,UAAAqF,YAAI,WACInF,KAAKm+C,oBAAoBtnC,eAGrBwvB,EAAZvmC,UAAA0+C,iCAAI,WACIx+C,KAAKu+C,kBAAoBv+C,KAAK2+C,YACzB37B,OAAO,SAACs6B,EAAK1nC,GAAS,MAAA0nC,GAAM1nC,EAAKiP,OAAO,IAGzCwhB,EAAZvmC,UAAAg/C,qBAAI,SAA6Br6C,GAKzB,MAJmBA,GAAQ2f,wBAAwBS,MAC/B/f,SAASmT,iBAAiBxT,GAASs6C,iBAAiB,iBACrDj6C,SAASmT,iBAAiBxT,GAASs6C,iBAAiB,iBAKnE1Y,EAAZvmC,UAAAw+C,4BAAI,WAAA,GAAJt9C,GAAAhB,KACcg/C,EAAmBh/C,KAAKg+C,oBACzBh8B,IAAI,SAACjc,GAAc,MAAG/E,GAAK+8C,kBAAxC,IAA6Dh4C,IAC/Ck5C,EAA0B7/B,MAAM8/B,KAAKl/C,KAAKuY,YAAY7T,cAAc8zB,iBAAiBwmB,GAE3Fh/C,MAAKq+C,aAAeY,EACfj9B,IAAI,SAACs6B,GAAO,MAAA,IAAIW,IAAgBX,EAAIt7C,EAAK89C,qBAAqBxC,GAAKt7C,EAAKm+C,oBAAoB7C,OAG7FjW,EAAZvmC,UAAAq/C,oBAAI,SAA4B16C,GAGxB,MAFaA,GAAQqzB,cAAc,6CAM5B1Y,MAAM8/B,KAAKz6C,EAAQ+zB,iBAAiBmiB,KACtC34B,IAAI,SAACs6B,GAAO,MAAA,IAAIM,IAA8BN,EAAIA,EAAGl4B,wBAAwBS,aAxG7EwhB,EAAbn+B,GAXCgE,EAAAA,WACG3D,SA7Tc,YA8Td8D,gBAAiBC,EAAAA,wBAAwBC,OACzCJ,SAAU,uEAEqBquC,GAFnC,KAE2DA,GAF3D,wCAKIpuC,QAAS;+4DACTI,cAAeC,EAAAA,kBAAkBC,OA2CrC1D,EAAA,qBAA6BE,EAAAA,cAzChBm9B,MCvTbC,GAAA,WAAA,QAAAA,MAA6B,MAAhBA,GAAbp+B,GAxBCsB,EAAAA,UACGG,SACIC,EAAAA,aACA0S,EAAAA,WACAmX,EAAAA,eACA1f,IAEJrK,SACI28B,GACAE,GACAC,GACAC,GACAC,GACAC,IAEJl9B,cACI48B,GACAE,GACAC,GACAC,GACAC,GACAC,OAGKL,MC9BTM,GAAa,EAKjBC,GAAA,WACI,QAAJA,GAAuBtuB,GAAAvY,KAAvBuY,YAAuBA,EACvB,MAAAsuB,MAEaC,GAGLpuB,EAAWmuB,IAanBE,GAAA,SAAA/tB,GAMI,QAAJ+tB,GAAgBzlC,GAAZ,GAAJN,GACQgY,EADRI,KAAApZ,KACcsB,IADdtB,WALagB,GAAbmN,GAA0B,mBAAmBy4B,KAChC5lC,EAAbb,MAA6B,EAChBa,EAAbgmC,KAAqC,cACxBhmC,EAAb+1B,MAAmCne,EAAAA,aAAaC,UAShD,MAbmCmB,GAAnC+sB,EAAA/tB,GAUIrZ,OAAJC,eAAQmnC,EAARjnC,UAAA,cAAAC,IAAI,WACI,MAAOwjB,MAAK8G,IAlCA,EAkCiB9G,KAAKC,IAjCtB,IAiCuCxjB,KAAKG,QAjC5C,qCAuBP+H,GAARE,EAAAA,iCAAL2+B,EAAAjnC,UAAA,SAAA,IACaoI,GAARE,EAAAA,iCAAL2+B,EAAAjnC,UAAA,YAAA,IACaoI,GAARE,EAAAA,iCAAL2+B,EAAAjnC,UAAA,WAAA,IACaoI,GAARE,EAAAA,iCAAL2+B,EAAAjnC,UAAA,YAAA,IAJainC,EAAb7+B,GAXCgE,EAAAA,WACG3D,SAAU,kBACV4D,SAAJ,gVACIC,QAAS,ydACTC,gBAAiBC,EAAAA,wBAAwBC,OACzCC,cAAeC,EAAAA,kBAAkBC,KACjCjE,MACIqE,MAAO,kBACPI,YAAa,QASrBlE,EAAA,qBAA4BE,EAAAA,cANf69B,IAAsBD,ICfnCG,GAAA,WAAA,QAAAA,MAAkC,MAArBA,GAAb/+B,GAZCsB,EAAAA,UACGG,SACIC,EAAAA,aACA6pB,EAAAA,gBAEJ/pB,SACIq9B,IAEJt9B,cACIs9B,OAGKE,MCVTL,GAAa,EAKjBM,GAAA,WACI,QAAJA,GAAuB3uB,GAAAvY,KAAvBuY,YAAuBA,EACvB,MAAA2uB,MAEaC,GAGLzuB,EAAWwuB,IAenBE,GAAA,SAAApuB,GAMI,QAAJouB,GAAgB9lC,GAAZ,GAAJN,GACQgY,EADRI,KAAApZ,KACcsB,IADdtB,WALagB,GAAbmN,GAA0B,uBAAuBy4B,KACpC5lC,EAAbb,MAA6B,EAChBa,EAAbgmC,KAAyC,cAC5BhmC,EAAb+1B,MAAmCne,EAAAA,aAAaC,UAahD,MAjBuCmB,GAAvCotB,EAAApuB,GAUIrZ,OAAJC,eAAQwnC,EAARtnC,UAAA,cAAAC,IAAI,WACI,MAAOwjB,MAAK8G,IApCA,EAoCiB9G,KAAKC,IAnCtB,IAmCuCxjB,KAAKG,QAnC5C,qCAsChBR,OAAJC,eAAQwnC,EAARtnC,UAAA,qBAAAC,IAAI,WACI,MA5Be,KAAA,IA4BYC,KAAKqnC,WAAxC,qCAdan/B,GAARE,EAAAA,iCAALg/B,EAAAtnC,UAAA,SAAA,IACaoI,GAARE,EAAAA,iCAALg/B,EAAAtnC,UAAA,YAAA,IACaoI,GAARE,EAAAA,iCAALg/B,EAAAtnC,UAAA,WAAA,IACaoI,GAARE,EAAAA,iCAALg/B,EAAAtnC,UAAA,YAAA,IAJasnC,EAAbl/B,GAXCgE,EAAAA,WACG3D,SAAU,sBACV4D,SAAJ,2aACIC,QAAS,8pBACTC,gBAAiBC,EAAAA,wBAAwBC,OACzCC,cAAeC,EAAAA,kBAAkBC,KACjCjE,MACIqE,MAAO,sBACPI,YAAa,QASrBlE,EAAA,qBAA4BE,EAAAA,cANfk+B,IAA0BD,ICnBvCG,GAAA,WAAA,QAAAA,MAAsC,MAAzBA,GAAbp/B,GAZCsB,EAAAA,UACGG,SACIC,EAAAA,aACA6pB,EAAAA,gBAEJ/pB,SACI09B,IAEJ39B,cACI29B,OAGKE,MCKTjvB,GAAe,EAGnBkvB,GAAA,WACI,QAAJA,GAEensB,EAEAjb,GAFAH,KAAfob,OAAeA,EAEApb,KAAfG,MAAeA,EACf,MAAAonC,MAIAC,GAAA,WAAA,QAAAA,MAA+B,MAA/BA,MACaC,GAAmE9uB,EAAc6uB,IAOjFE,IACTrsB,QAASC,EAAAA,kBACTC,YAAaC,EAAAA,WAAW,WAAM,MAAAmsB,MAC9BlsB,OAAO,GAaXksB,GAAA,SAAA3uB,GAgGI,QAAJ2uB,GACyBC,GADrB,GAAJ5mC,GAGQgY,EAHRI,KAAApZ,OAAAA,WACyBgB,GAAzB4mC,gBAAyBA,EAjCF5mC,EAAvBsB,OAA6D,GAAIqX,GAAAA,aAYrD3Y,EAAZke,OAA0B,KAGdle,EAAZ6mC,MAA4B,kBAAkBxvB,KAGlCrX,EAAZ8mC,UAA8C,KAGlC9mC,EAAZ+mC,gBAAsC,EAG1B/mC,EAAZgnC,eAAiD,QAGrChnC,EAAZmT,WAAiC,EAGrBnT,EAAZ+nB,WAAiC,EAU7B/nB,EAAJinC,6BAAyD,aAOrDjnC,EAAJmtB,UAA2B,eAoG3B,MAnNkCnU,GAAlC2tB,EAAA3uB,GAKIrZ,OAAJC,eAAQ+nC,EAAR7nC,UAAA,QAAAC,IAAI,WAAqB,MAAOC,MAAK6nC,OACrC3nC,IAAI,SAASC,GACLH,KAAK6nC,MAAQ1nC,EACbH,KAAKkoC,0DAKTvoC,OAAJC,eAAQ+nC,EAAR7nC,UAAA,iBAAAC,IAAI,WACI,MAAOC,MAAKgoC,gBAEpB9nC,IAAI,SAAkB++B,GACdj/B,KAAKgoC,eAAuB,WAAN/I,EAAiB,SAAW,QAClDj/B,KAAKmoC,sDAKTxoC,OAAJC,eAAQ+nC,EAAR7nC,UAAA,SAAAC,IAAI,WAAmB,MAAOC,MAAKkf,QACnChf,IAAI,SAAUyqB,GACF3qB,KAAKkf,SAAWyL,IAEhB3qB,KAAKkf,OAASyL,EAEd3qB,KAAKooC,+BACLpoC,KAAKqoC,6DAMb1oC,OAAJC,eAAQ+nC,EAAR7nC,UAAA,YAAAC,IAAI,WAAiB,MAAOC,MAAK8nC,WACjC5nC,IAAI,SAAakhB,GACTphB,KAAK8nC,UAAY1mB,EACjBphB,KAAKG,MAAQihB,EAAWA,EAASjhB,MAAQ,KACzCH,KAAKqoC,4DAKT1oC,OAAJC,eAAQ+nC,EAAR7nC,UAAA,YAAAC,IAAI,WAA0B,MAAOC,MAAKmU,WAC1CjU,IAAI,SAAaC,GACTH,KAAKmU,UAAYm0B,EAAUnoC,GAC3BH,KAAKmoC,sDAKTxoC,OAAJC,eAAQ+nC,EAAR7nC,UAAA,YAAAC,IAAI,WAA0B,MAAOC,MAAK+oB,WAC1C7oB,IAAI,SAAaC,GACTH,KAAK+oB,UAAYuf,EAAUnoC,GAC3BH,KAAKmoC,sDAyDTR,EAAJ7nC,UAAAuoC,yBAAI,WACQroC,KAAK8nC,YAAc9nC,KAAK8nC,UAAUvtB,UAClCva,KAAK8nC,UAAUvtB,SAAU,IAQjCotB,EAAJ7nC,UAAAu1B,mBAAI,WAIIr1B,KAAK+nC,gBAAiB,GAO1BJ,EAAJ7nC,UAAAyoC,MAAI,WACQvoC,KAAKmuB,WACLnuB,KAAKmuB,aAKbwZ,EAAJ7nC,UAAA0oC,gBAAI,WACQxoC,KAAK+nC,gBACL/nC,KAAKsC,OAAO0E,KAAK,GAAIugC,IAAcvnC,KAAK8nC,UAAY9nC,KAAKkf,UAIjEyoB,EAAJ7nC,UAAAqoC,mBAAI,WACQnoC,KAAKyoC,SACLzoC,KAAKyoC,QAAQnjC,QAAQ,SAACojC,GAAU,MAAAA,GAAMvkC,kBAO9CwjC,EAAJ7nC,UAAAgb,WAAI,SAAW3a,GACPH,KAAKG,MAAQA,EACbH,KAAK4nC,gBAAgBzjC,gBAQzBwjC,EAAJ7nC,UAAAib,iBAAI,SAAiBC,GACbhb,KAAKioC,6BAA+BjtB,GAQxC2sB,EAAJ7nC,UAAAmb,kBAAI,SAAkBD,GACdhb,KAAKmuB,UAAYnT,GAOrB2sB,EAAJ7nC,UAAAob,iBAAI,SAAiBC,GACbnb,KAAKqG,SAAW8U,EAChBnb,KAAK4nC,gBAAgBzjC,gBAGjBwjC,EAAZ7nC,UAAAooC,uBAAI,WAAA,GAAJlnC,GAAAhB,IACYA,MAAKyoC,SACLzoC,KAAKyoC,QAAQnjC,QAAQ,SAACojC,GAClBA,EAAMjvB,KAAOzY,EAAKyY,QAMtBkuB,EAAZ7nC,UAAAsoC,6BAAI,WAAA,GAAJpnC,GAAAhB,KAEc2oC,EAAuC,OAAnB3oC,KAAK8nC,WAAsB9nC,KAAK8nC,UAAU3nC,QAAUH,KAAKkf,MAE/D,OAAhBlf,KAAKyoC,SAAoBE,IACzB3oC,KAAK8nC,UAAY,KACjB9nC,KAAKyoC,QAAQnjC,QAAQ,SAACojC,GAClBA,EAAMnuB,QAAUvZ,EAAKb,QAAUuoC,EAAMvoC,MACjCuoC,EAAMnuB,UACNvZ,EAAK8mC,UAAYY,OAzMjCxgC,GADCE,EAAAA,iEACLu/B,EAAA7nC,UAAA,OAAA,MAQIoI,GADCE,EAAAA,iEAGLu/B,EAAA7nC,UAAA,gBAAA,MAQIoI,GADCE,EAAAA,iEACLu/B,EAAA7nC,UAAA,QAAA,MAaIoI,GADCE,EAAAA,iEACLu/B,EAAA7nC,UAAA,WAAA,MASIoI,GADCE,EAAAA,kEACLu/B,EAAA7nC,UAAA,WAAA,MAQIoI,GADCE,EAAAA,mEACLu/B,EAAA7nC,UAAA,WAAA,MAWcoI,GAATC,EAAAA,SAALa,EAAA,cAA+B2Q,EAAAA,eAA/BguB,EAAA7nC,UAAA,aAAA,IAIIoI,GADCqyB,EAAAA,gBAAgB/e,EAAAA,WAAW,WAAM,MAAAotB,OAAkBnO,aAAa,IACrEzxB,EAAA,cAAakd,EAAAA,YAAbyhB,EAAA7nC,UAAA,cAAA,IApEa6nC,EAAbz/B,GAVCI,EAAAA,WACGC,SAAU,iBACVC,SAAU,eACVsB,WAAY49B,IACZj/B,MACIuE,KAAM,aACNF,MAAO,kBAEX4O,QAAS,cAmGb1S,EAAA,qBAA0CwE,EAAAA,qBAjG7Bm6B,IAAqBF,IAwNlCoB,GAAA,WAMI,QAAJA,GAAuBtwB,GAAAvY,KAAvBuY,YAAuBA,EACvB,MAAAswB,MAEaC,GAILpwB,EAAWD,EAAcowB,KAmBjCD,GAAA,SAAA5vB,GAsII,QAAJ4vB,GACoBG,EACZznC,EACiBsmC,EACAoB,GAJrB,GAAJhoC,GAOQgY,EAPRI,KAAApZ,KAOcsB,IAPdtB,WAGyBgB,GAAzB4mC,gBAAyBA,EACA5mC,EAAzBgoC,iBAAyBA,EAvIJhoC,EAArBwY,UAAyC,eAAcnB,GAK1CrX,EAAbmN,GAA0BnN,EAAKwY,UAmGRxY,EAAvBsB,OAA6D,GAAIqX,GAAAA,aAM7D3Y,EAAJwpB,WAAyB,EAMbxpB,EAAZ0Y,UAAgC,EASpB1Y,EAAZke,OAA0B,KAILle,EAArBioC,8BAAiE,aAWzDjoC,EAAK+nC,WAAaA,EAElB/nC,EAAKioC,8BACDD,EAAiBhzB,OAAO,SAAC7H,EAAYsL,GAC7BtL,IAAOnN,EAAKmN,IAAMsL,IAASzY,EAAKyY,OAChCzY,EAAKuZ,SAAU,OAmEnC,MAvNmCP,GAAnC4uB,EAAA5vB,GAwBIrZ,OAAJC,eAAQgpC,EAAR9oC,UAAA,WAAAC,IAAI,WAAyB,MAAOC,MAAK0Z,UACzCxZ,IAAI,SAAYC,GACR,GAAM+oC,GAAkBZ,EAAUnoC,EAE9BH,MAAK0Z,WAAawvB,IAClBlpC,KAAK0Z,SAAWwvB,EAEZA,GAAmBlpC,KAAK+oC,YAAc/oC,KAAK+oC,WAAW5oC,QAAUH,KAAKG,MACrEH,KAAK+oC,WAAW3nB,SAAWphB,MACnBkpC,GAAmBlpC,KAAK+oC,YAAc/oC,KAAK+oC,WAAW5oC,QAAUH,KAAKG,QAG7EH,KAAK+oC,WAAW3nB,SAAW,MAG3B8nB,GAEAlpC,KAAKgpC,iBAAiBG,OAAOnpC,KAAKmO,GAAInO,KAAKyZ,MAE/CzZ,KAAK4nC,gBAAgBzjC,iDAM7BxE,OAAJC,eAAQgpC,EAAR9oC,UAAA,SAAAC,IAAI,WAAmB,MAAOC,MAAKkf,QACnChf,IAAI,SAAUC,GACFH,KAAKkf,SAAW/e,IAChBH,KAAKkf,OAAS/e,EACS,MAAnBH,KAAK+oC,aACA/oC,KAAKua,UAENva,KAAKua,QAAUva,KAAK+oC,WAAW5oC,QAAUA,GAEzCH,KAAKua,UACLva,KAAK+oC,WAAW3nB,SAAWphB,yCAQ3CL,OAAJC,eAAQgpC,EAAR9oC,UAAA,YAAAC,IAAI,WACI,MAAOC,MAAKmU,WAAiC,MAAnBnU,KAAK+oC,YAAsB/oC,KAAK+oC,WAAW1iC,UAE7EnG,IAAI,SAAaC,GACT,GAAMipC,GAAmBd,EAAUnoC,EAE/BH,MAAKmU,YAAci1B,IAEnBppC,KAAKmU,UAAYi1B,EACjBppC,KAAK4nC,gBAAgBzjC,iDAM7BxE,OAAJC,eAAQgpC,EAAR9oC,UAAA,YAAAC,IAAI,WACI,MAAOC,MAAK+oB,WAAc/oB,KAAK+oC,YAAc/oC,KAAK+oC,WAAWM,UAErEnpC,IAAI,SAAaC,GACTH,KAAK+oB,UAAYuf,EAAUnoC,oCAK/BR,OAAJC,eAAQgpC,EAAR9oC,UAAA,iBAAAC,IAAI,WACI,MAAOC,MAAKgoC,gBAAmBhoC,KAAK+oC,YAAc/oC,KAAK+oC,WAAW1vB,eAAkB,SAE5FnZ,IAAI,SAAkBC,GACdH,KAAKgoC,eAAiB7nC,mCAqB1BR,OAAJC,eAAQgpC,EAAR9oC,UAAA,WAAAC,IAAI,WAAwB,OAAUC,KAAKmO,IAAMnO,KAAKwZ,WAAtD,0CAqCIovB,EAAJ9oC,UAAAmF,SAAI,WACQjF,KAAK+oC,aAEL/oC,KAAKua,QAAUva,KAAK+oC,WAAW5oC,QAAUH,KAAKkf,OAE9Clf,KAAKyZ,KAAOzZ,KAAK+oC,WAAWtvB,OAIpCmvB,EAAJ9oC,UAAAqF,YAAI,WACInF,KAAKipC,iCAKTL,EAAJ9oC,UAAAqa,MAAI,aAOAyuB,EAAJ9oC,UAAAqE,aAAI,WAGInE,KAAK4nC,gBAAgBzjC,gBAGzBykC,EAAJ9oC,UAAAwpC,aAAI,SAAa9jC,GAQTA,EAAMiV,mBAGVmuB,EAAJ9oC,UAAAypC,cAAI,SAAc/jC,GAIVA,EAAMiV,iBAEN,IAAM+uB,GAAoBxpC,KAAK+oC,YAAc/oC,KAAKG,QAAUH,KAAK+oC,WAAW5oC,KAC5EH,MAAKua,SAAU,EACfva,KAAKwoC,kBAEDxoC,KAAK+oC,aACL/oC,KAAK+oC,WAAWd,6BAA6BjoC,KAAKG,OAClDH,KAAK+oC,WAAWR,QACZiB,GACAxpC,KAAK+oC,WAAWP,oBAMpBI,EAAZ9oC,UAAA0oC,gBAAI,WACIxoC,KAAKsC,OAAO0E,KAAK,GAAIugC,IAAcvnC,KAAMA,KAAKkf,UA7MzChX,GAARE,EAAAA,iCAALwgC,EAAA9oC,UAAA,SAAA,IAGaoI,GAARE,EAAAA,iCAALwgC,EAAA9oC,UAAA,WAAA,IAGyBoI,GAApBE,EAAAA,MAAM,uCAAXwgC,EAAA9oC,UAAA,gBAAA,IAG8BoI,GAAzBE,EAAAA,MAAM,4CAAXwgC,EAAA9oC,UAAA,qBAAA,IAG+BoI,GAA1BE,EAAAA,MAAM,6CAAXwgC,EAAA9oC,UAAA,sBAAA,IAIIoI,GADCE,EAAAA,mEACLwgC,EAAA9oC,UAAA,UAAA,MAyBIoI,GADCE,EAAAA,iEACLwgC,EAAA9oC,UAAA,QAAA,MAkBIoI,GADCE,EAAAA,mEAGLwgC,EAAA9oC,UAAA,WAAA,MAaIoI,GADCE,EAAAA,mEAGLwgC,EAAA9oC,UAAA,WAAA,MAOIoI,GADCE,EAAAA,iEAGLwgC,EAAA9oC,UAAA,gBAAA,MAOwBoI,GAAnB8D,EAAAA,UAAU,SAAfhD,EAAA,cAAuCE,EAAAA,aAAvC0/B,EAAA9oC,UAAA,oBAAA,IAOcoI,GAATC,EAAAA,SAALa,EAAA,cAA+B2Q,EAAAA,eAA/BivB,EAAA9oC,UAAA,aAAA,IAMIoI,GADCE,EAAAA,kCACLwgC,EAAA9oC,UAAA,gBAAA,IAjHa8oC,EAAb1gC,GAhBCgE,EAAAA,WACG3D,SAAU,kBACV4D,SAAJ,opBACIC,QAAS,i3BACTsP,QAAS,QAAS,YAClBlP,cAAeC,EAAAA,kBAAkBC,KACjCL,gBAAiBC,EAAAA,wBAAwBC,OACzC/D,SAAU,gBACVC,MACIqE,MAAO,kBACPI,YAAa,KACbu8B,qBAAsB,UACtB7tB,sBAAuB,WACvBgL,UAAW,yCA0IVhe,EAAT,EAASG,EAAAA,YAATC,EAAA,qBAAgC2+B,GACZz+B,EAAAA,WACsBsE,EAAAA,kBACCk8B,EAAAA,6BA1I9Bd,IAAsBE,ICxSnCa,GAAA,WAAA,QAAAA,MACA,MADaA,GAAbzhC,GALCsB,EAAAA,UACGG,SAAUC,EAAAA,aAAc0S,EAAAA,WAAYxI,IACpCpK,SAAUi+B,GAAciB,IACxBn/B,cAAek+B,GAAciB,OAEpBe,MCJbC,GAAA,SAAA5wB,GAAA,QAAA4wB,oDAAsC5vB,EAAtC4vB,EAAA5wB,GAAA6wB,EAAaD,OAEb,OADyB1hC,IAApBE,EAAAA,MAAM,uCAAXwhC,EAAA9pC,UAAA,WAAA,IADa8pC,EAAbC,EAAA3hC,GALCI,EAAAA,WACGC,SAAU,kBACVmT,QAAS,2BACT5R,YAAcuR,QAASyuB,EAAAA,eAAgBvuB,YAAasuB,OAE3CD,IAAyBE,EAAAA,gBCFtCC,GAAA,SAAA/wB,GAJA,QAAA+wB,KAAA,GAAA/oC,GAAA,OAAAgY,GAAAA,EAAA8gB,MAAA95B,KAAAgqC,YAAAhqC,WASIgB,GAAJipC,gBAA8B,GAE1BjpC,EAAJkpC,QAAsB,GAGlBlpC,EAAJmpC,UAAwB,KAVkBnwB,EAA1C+vB,EAAA/wB,GAAAoxB,EAAaL,EAYTpqC,OAAJC,eAAQmqC,EAARjqC,UAAA,eAAAC,IAAI,WACI,OAAQC,KAAKqqC,SAAW,EAAIrqC,KAAKmqC,WAAanqC,KAAKiqC,iDAGvDF,EAAJjqC,UAAAwqC,cAAI,WACI,GAAMC,GAAavqC,KAAKwqC,SAASzjC,MAAQ/G,KAAKue,KAAKksB,YAAYC,SACzD1qC,KAAKue,KAAKksB,YAAYC,SAAS1qC,KAAKwqC,SAASzjC,MAC7C,KAEA4jC,EAAQ3qC,KAAK2qC,OAASJ,CAE5B,OAAOI,GAAYA,EAAQ3qC,KAAKkqC,QAAWlqC,KAAK4qC,YAAxD,KAA6E5qC,KAAKiqC,gBAAlF,MAGIF,EAAJjqC,UAAAmF,SAAI,WACIjF,KAAKqqC,SAAWrqC,KAAKue,KAAKksB,YAAYI,aAAa7qC,KAAKwqC,SAASzjC,MAEjE/G,KAAK8qC,mBAEb,OA9BgC5iC,IAA3BE,EAAAA,MAAM,8CAAX2hC,EAAAjqC,UAAA,YAAA,IAEsCoI,GAAjCE,EAAAA,MAAM,oDAAX2hC,EAAAjqC,UAAA,aAAA,IAHaiqC,EAAbK,EAAAliC,GAJCI,EAAAA,WACGC,SAAU,sBACVuB,YAAcuR,QAAS0vB,EAAAA,mBAAoBxvB,YAAa6uB,OAE/CL,IAA6BgB,EAAAA,oBCG1CC,GAAA,SAAAhyB,GAAA,QAAAgyB,oDAAyChxB,EAAzCgxB,EAAAhyB,GAAAiyB,EAAaD,OAAkD,OAAlDA,GAAbC,EAAA/iC,GAPCI,EAAAA,WACGC,SAAU,qBACVE,MACI6K,UAAW,kBAEfxJ,YAAcuR,QAAS6vB,EAAAA,kBAAmB3vB,YAAa0vB,OAE9CD,IAA4BE,EAAAA,mBCe5BC,GACT,GAAI/7B,GAAAA,eAA4C,mCAEpDg8B,GAAA,WACI,QAAJA,GAAuBhwB,EAA6B4F,OAApD,KAAAA,IAAoDA,GAApD,GAAuBhhB,KAAvBob,OAAuBA,EAA6Bpb,KAApDghB,YAAoDA,EACpD,MAAAoqB,MAEIC,GAA0B,EAoB9BC,GAAA,SAAAtyB,GA+DI,QAAJsyB,GACkBhqC,EACAyJ,EAC4DwgC,GAH1E,GAAJvqC,GAMQgY,EAARI,KAAApZ,KAAcsB,EAAYiqC,IAA1BvrC,WALkBgB,GAAlBM,WAAkBA,EACAN,EAAlB+J,kBAAkBA,EAC4D/J,EAA9EuqC,OAA8EA,EAjEvDvqC,EAAvBu6B,kBAA2C,GAAI5hB,GAAAA,aAiBnC3Y,EAAZmT,WAAiC,EAqBrBnT,EAAZ8mC,WAAiC,EAYrB9mC,EAAZwqC,SAAsB,EAMVxqC,EAAZ2oB,IAAkB,kBAAkB0hB,OAzDFrxB,EAAlCsxB,EAAAtyB,GAAAyyB,EAAaH,EAMT3rC,OAAJC,eAAQ0rC,EAARxrC,UAAA,YAAAC,IAAI,WACI,MAAOC,MAAKmU,WAGpBjU,IAAI,SAAaC,GACT,GAAMwqB,GAAW2d,EAAUnoC,EAEvBwqB,KAAa3qB,KAAKmU,YAClBnU,KAAKmU,UAAYwW,oCAWzBhrB,OAAJC,eAAQ0rC,EAARxrC,UAAA,YAAAC,IAAI,WACI,MAAOC,MAAK8nC,WAGpB5nC,IAAI,SAAaC,GACT,GAAMghB,GAAamnB,EAAUnoC,EAEzBghB,KAAenhB,KAAK8nC,WACpB9nC,KAAK0rC,YAAYvqB,oCAczBxhB,OAAJC,eAAQ0rC,EAARxrC,UAAA,UAAAC,IAAI,WACI,MAAOC,MAAKwrC,yCAKhB7rC,OAAJC,eAAQ0rC,EAARxrC,UAAA,MAAAC,IAAI,WACI,MAAOC,MAAK2pB,qCAKhBhqB,OAAJC,eAAQ0rC,EAARxrC,UAAA,YAAAC,IAAI,WACI,MAAOC,MAAKurC,OAAOpsB,0CAYvBmsB,EAAJxrC,UAAA+1B,OAAI,WACI71B,KAAKohB,UAAYphB,KAAKohB,UAG1BkqB,EAAJxrC,UAAA4rC,YAAI,SAAYtqB,GACJphB,KAAK8nC,YAAc1mB,GAAaphB,KAAKurC,OAAOhsB,iBAEhDvf,KAAK8nC,UAAY1mB,EAEbA,EACAphB,KAAKurC,OAAOhsB,eAAeY,OAAOngB,MAElCA,KAAKurC,OAAOhsB,eAAe8B,SAASrhB,QAW5CsrC,EAAJxrC,UAAA6rC,gBAAI,WACS3rC,KAAKwrC,UACNxrC,KAAKwrC,SAAU,EAEfxrC,KAAK+K,kBAAkB5G,iBAS/BmnC,EAAJxrC,UAAA8rC,kBAAI,WACQ5rC,KAAKwrC,UACLxrC,KAAKwrC,SAAU,EACfxrC,KAAK+K,kBAAkB5G,iBAI/BmnC,EAAJxrC,UAAA+rC,UAAI,WACI,GAAMC,GAAc9rC,KAAKsB,WAAWoD,cAAcqnC,gBAClD,OAAID,GAAY36B,OACL26B,EAAY,GAAG5mB,OAGnB,GAGXomB,EAAJxrC,UAAAqa,MAAI,WACI,GAAM1V,GAAUzE,KAAKgsC,gBAEQ,mBAAlBvnC,GAAQ0V,OACf1V,EAAQ0V,SAehBxa,OAAJC,eAAQ0rC,EAARxrC,UAAA,aAAAC,IAAI,WAEI,OAAQC,KAAKgsC,iBAAiB3L,aAAe,IAAIpO,wCAGrDqZ,EAAJxrC,UAAAqgB,OAAI,WACSngB,KAAK8nC,YACN9nC,KAAK8nC,WAAY,EAEjB9nC,KAAK+K,kBAAkB5G,iBAI/BmnC,EAAJxrC,UAAAuhB,SAAI,WACQrhB,KAAK8nC,YACL9nC,KAAK8nC,WAAY,EAEjB9nC,KAAK+K,kBAAkB5G,iBAI/BmnC,EAAJxrC,UAAA4e,qBAAI,WACS1e,KAAKqG,WACNrG,KAAK8nC,WAAY9nC,KAAKmf,WAAYnf,KAAK8nC,UAEvC9nC,KAAK+K,kBAAkB5G,eACvBnE,KAAKisC,0BAAyB,GAE1BjsC,KAAKurC,OAAOW,kBACZlsC,KAAKurC,OAAOW,iBAAiBlsC,QAKzCsrC,EAAJxrC,UAAAmsC,yBAAI,SAAyBjrB,OAA7B,KAAAA,IAA6BA,GAA7B,GACQhhB,KAAKu7B,kBAAkBv0B,KAAK,GAAIokC,IAAmBprC,KAAMghB,KAG7DsqB,EAAJxrC,UAAAksC,eAAI,WACI,MAAOhsC,MAAKsB,WAAWoD,eAG3B4mC,EAAJxrC,UAAAukC,YAAI,WACI,MAAOrkC,MAAKqG,SAAW,KAAO,UAEtC,OA3Lc6B,IAATC,EAAAA,kCAALmjC,EAAAxrC,UAAA,wBAAA,IAEaoI,GAARE,EAAAA,iCAALkjC,EAAAxrC,UAAA,YAAA,IAGIoI,GADCE,EAAAA,iEAGLkjC,EAAAxrC,UAAA,WAAA,MARawrC,EAAbG,EAAAvjC,GAlBCgE,EAAAA,WACG3D,SAAU,iBACVC,SAAU,eACVC,MACIyE,YAAa,KACbuZ,kBAAmB,gBAEnB0lB,kBAAmB,mBAEnBr/B,MAAO,iBACPs/B,sBAAuB,WACvBlH,oBAAqB,SAErB5xB,UAAW,0BAEfnH,SAAJ,yQACIrC,YAAcuR,QAASgxB,EAAAA,YAAa9wB,YAAakwB,MAoE5C7iC,EAAT,EAASG,EAAAA,YAAYH,EAArB,EAAqBC,EAAAA,OAAOsiC,KAF5BniC,EAAA,qBAA8BE,EAAAA,WACOsE,EAAAA,kBAArC7N,UAjEa2rC,IAAqBe,EAAAA,aCjBlCC,GAAA,WACI,QAAJA,GACelxB,EACAyE,GADA7f,KAAfob,OAAeA,EACApb,KAAf6f,OAAeA,EAEf,MAAAysB,MAEAC,GAAA,WACI,QAAJA,GAAuBnxB,EAAgCyE,GAAhC7f,KAAvBob,OAAuBA,EAAgCpb,KAAvD6f,OAAuDA,EACvD,MAAA0sB,MAEAC,GAAA,SAAAxzB,GACI,QAAJwzB,GAAgBC,EAA0B1hC,GAC1C,MAAQiO,GAARI,KAAApZ,KAAcysC,EAAS1hC,IAAvB/K,KAEA,MAJqCga,GAArCwyB,EAAAxzB,GAIAwzB,GAJqCrlB,EAAAA,SAO/BulB,GAC2Bj0B,EAAcE,EAAc6zB,KAuB7DnmB,GAAA,SAAArN,GAkDI,QAAJqN,GACgB/kB,EACRmrC,EACA1hC,EACuBoO,EACAgG,EACGuc,EACAiR,GAP9B,GAAJ3rC,GASQgY,EATRI,KAAApZ,KAScysC,EAAS1hC,IATvB/K,WACgBgB,GAAhBM,WAAgBA,EA9BON,EAAvB4rC,iBAA0C,GAAIjzB,GAAAA,aAEvB3Y,EAAvBmhB,gBAAyC,GAAIxI,GAAAA,aAuBjC3Y,EAAZmT,WAAiC,EAEZnT,EAArBwf,QAA+B,GAAIvS,GAAAA,QAa3BjN,EAAKmY,SAAWrU,SAASqU,IAAa,EAEtCnY,EAAKme,SAAwB,OAAbA,GAA4BmpB,EAAUnpB,GACtDne,EAAK06B,WAA4B,OAAfA,GAA6B4M,EAAU5M,GACzD16B,EAAK2rC,WAA4B,OAAfA,GAA6BrE,EAAUqE,GAEzD3rC,EAAKue,eAAiB,GAAI0V,GAAAA,eAA6Bj0B,EAAKme,YAnE/BnF,EAArCqM,EAAArN,GAAA6zB,EAAaxmB,EA0BT1mB,OAAJC,eAAQymB,EAARvmB,UAAA,YAAAC,IAAI,WACI,MAAOC,MAAKmU,WAGpBjU,IAAI,SAAa4sC,GACT,GAAM3sC,GAAQmoC,EAAUwE,EAEpB9sC,MAAKmU,YAAchU,IACnBH,KAAKmU,UAAYhU,EAEbH,KAAKmU,UAEL8L,QAAQ8sB,IAAI,4BAGZ9sB,QAAQ8sB,IAAI,6DA6BxB1mB,EAAJvmB,UAAAu1B,mBAAI,WACIr1B,KAAKwe,WAAa,GAAImb,GAAAA,2BAAyC35B,KAAK4f,SAE/Dia,yBAAwB,GACxB9D,0BAA0B,OAGnC1P,EAAJvmB,UAAAqF,YAAI,WACInF,KAAKwgB,QAAQ5a,OAEb5F,KAAKwgB,QAAQ3a,YAGjBwgB,EAAJvmB,UAAAwgB,UAAI,SAAU9a,GACN,GAAMQ,GAAUR,EAAMQ,OAItB,QAHAhG,KAAKgtC,UAAYxnC,EAAMk0B,SACvB15B,KAAKitC,SAAWznC,EAAM+zB,QAEdvzB,GACJ,IAAK4yB,GAAAA,WACG54B,KAAKwe,WAAWC,YAChBze,KAAKyqC,YAAYyC,SAASltC,KAAKwe,WAAWC,WAAW1X,MAGzDvB,EAAM8Y,gBAEN,MACJ,KAAKua,GAAAA,YACG74B,KAAKwe,WAAWC,YAChBze,KAAKyqC,YAAY0C,OAAOntC,KAAKwe,WAAWC,WAAW1X,MAGvDvB,EAAM8Y,gBAEN,MACJ,KAAKya,GAAAA,MACL,IAAKD,GAAAA,MACD94B,KAAKotC,sBACL5nC,EAAM8Y,gBAEN,MACJ,KAAK6a,GAAAA,KACDn5B,KAAKwe,WAAWiE,qBAChBjd,EAAM8Y,gBAEN,MACJ,KAAK8a,GAAAA,IACDp5B,KAAKwe,WAAW6a,oBAChB7zB,EAAM8Y,gBAEN,MACJ,KAAK+uB,GAAAA,QACDrtC,KAAKwe,WAAW8uB,4BAChB9nC,EAAM8Y,gBAEN,MACJ,KAAKivB,GAAAA,UACDvtC,KAAKwe,WAAWgvB,wBAChBhoC,EAAM8Y,gBAEN,MACJ,SACIte,KAAKwe,WAAWya,UAAUzzB,KAItC6gB,EAAJvmB,UAAA2tC,iBAAI,WACSztC,KAAK4f,QAAQwa,OAElBp6B,KAAKwe,WAAWkvB,eAAenqB,KAAKoqB,MAAM3tC,KAAK6rC,YAAc7rC,KAAK4f,QAAQwa,MAAMyR,eAGpFxlB,EAAJvmB,UAAAosC,iBAAI,SAAiBrsB,GAGb,GAFA7f,KAAKwe,WAAWmB,cAAcE,GAE1B7f,KAAKgtC,WAAahtC,KAAKmf,SAAU,CACjC,GAAMyuB,GAAgB5tC,KAAKwe,WAAWqvB,wBAChCC,EAAc9tC,KAAKwe,WAAWmE,eAEhCirB,GAAgBE,EAChB9tC,KAAK4f,QAAQta,QAAQ,SAACsQ,EAAMtD,GACpBA,GAASs7B,GAAiBt7B,GAASw7B,GAAel4B,EAAK81B,aAAY,KAG3E1rC,KAAK4f,QAAQta,QAAQ,SAACsQ,EAAMtD,GACpBA,GAASw7B,GAAex7B,GAASs7B,GAAiBh4B,EAAK81B,aAAY,KAI/E1rC,KAAKgtC,WAAY,MACd,IAAIhtC,KAAKitC,SAAU,CAGtB,GAFAjtC,KAAKitC,UAAW,GAEXjtC,KAAK+tC,gBAAgBluB,GAAW,MAErCA,GAAOgW,aAEH71B,MAAK07B,aACL17B,KAAK4f,QAAQta,QAAQ,SAACsQ,GAAS,MAAAA,GAAK81B,aAAY,KAChD7rB,EAAO6rB,aAAY,GAI3B1rC,MAAKguC,oBAAoBnuB,IAG7BwG,EAAJvmB,UAAAstC,oBAAI,WACI,GAAMa,GAAejuC,KAAKwe,WAAWmE,eAErC,IAAoB,MAAhBsrB,GAAwBjuC,KAAK++B,aAAakP,GAAe,CACzD,GAAMC,GAA8BluC,KAAK4f,QAAQ6B,UAAUwsB,EAEvDC,IAAiBluC,KAAK+tC,gBAAgBG,KACtCA,EAAcrY,SAGd71B,KAAKwoC,gBAAgB0F,MAKjC7nB,EAAJvmB,UAAAquC,kBAAI,SACIpnC,EACAqnC,EACAC,EACAC,OAFR,KAAAF,IAAQA,EAA2CpuC,KAAKouC,gBACxD,KAAAC,IAAQA,EAAqBruC,KAAKuuC,WAAWF,eAGrCr1B,EAARlZ,UAAcquC,kBAAd/0B,KAAApZ,KAAgC+G,EAAMqnC,EAAYC,EAAeC,EAEzD,IAAME,KAENH,GAAcI,eAAenpC,QAAQ,SAACopC,GAClC,GAAMC,GAAUD,EAAKE,GAErBD,GAAQE,MAAMvpC,QAAQ,SAACwpC,GACnB,GAAIH,EAAQI,qBAAuBD,EAAKE,gBAAiB,CACrD,GAAMC,GAAgBP,EAAKG,MAAMC,EAAKI,UAEtCV,GAAiB99B,KAAKu+B,EAASvoC,eAKvC1G,KAAK4f,UACL5f,KAAK4f,QAAQuvB,MAAMX,GACnBxuC,KAAK4f,QAAQwvB,mBAGjBpvC,KAAKytC,oBAGTpnB,EAAJvmB,UAAA+rC,UAAI,WACI,GAAMC,GAAc9rC,KAAKsB,WAAWoD,cAAcqnC,gBAClD,OAAID,GAAY36B,OACL26B,EAAY,GAAG5mB,OAGnB,GAGXmB,EAAJvmB,UAAAkuC,oBAAI,SAAoBnuB,GAChB7f,KAAK4sC,iBAAiB5lC,KAAK,GAAIslC,IAAuBtsC,KAAM6f,KAGhEwG,EAAJvmB,UAAA0oC,gBAAI,SAAgB3oB,GACZ7f,KAAKmiB,gBAAgBnb,KAAK,GAAIslC,IAAuBtsC,KAAM6f,KAGvDwG,EAAZvmB,UAAAi/B,aAAI,SAAqBzsB,GACjB,MAAOA,IAAS,GAAKA,EAAQtS,KAAK4f,QAAQzO,QAGtCkV,EAAZvmB,UAAAiuC,gBAAI,SAAwBluB,GACpB,QAAS7f,KAAK2sC,YAAsD,IAAxC3sC,KAAKuf,eAAe6B,SAASjQ,QAAgB0O,EAAOuB,gBAExF,OAlPkClZ,IAA7B8D,EAAAA,UAAUqjC,EAAAA,mBAAfrmC,EAAA,cAA8CqmC,EAAAA,oBAA9ChpB,EAAAvmB,UAAA,iBAAA,IAEmCoI,GAA9BqyB,EAAAA,gBAAgB+Q,IAArBtiC,EAAA,cAA4Ckd,EAAAA,YAA5CG,EAAAvmB,UAAA,cAAA,IAgBcoI,GAATC,EAAAA,kCAALke,EAAAvmB,UAAA,uBAAA,IAEcoI,GAATC,EAAAA,kCAALke,EAAAvmB,UAAA,sBAAA,IAGIoI,GADCE,EAAAA,mEAGLie,EAAAvmB,UAAA,WAAA,MA5BaumB,EAAbwmB,EAAA3kC,GApBCgE,EAAAA,WACG3D,SAAU,oBACVC,SAAU,kBACV2D,SAAU,kDACV1D,MACIqE,MAAO,oBAEP2Z,kBAAmB,WAEnB/d,YAAa,oBACboe,kBAAmB,sBAEvB1a,QAAS,qdACTI,cAAeC,EAAAA,kBAAkBC,KACjCL,gBAAiBC,EAAAA,wBAAwBC,OACzCzC,YACMuR,QAAS8vB,GAAiC5vB,YAAasxB,IACvDxxB,QAAS8L,EAAAA,QAAS5L,YAAasxB,MAyDhCjkC,EAAT,EAASsT,EAAAA,UAAU,aACVtT,EAAT,EAASsT,EAAAA,UAAU,aACVtT,EAAT,EAASsT,EAAAA,UAAU,gBACVtT,EAAT,EAASsT,EAAAA,UAAU,gBANnBlT,EAAA,qBAA4BE,EAAAA,WACXomC,EAAAA,gBACU9hC,EAAAA,kBAA3B4O,OAAAA,OAAAA,OAAAA,UArDaiK,IAAwBqmB,IClE/B6C,IACFlpB,GACAilB,GACA1B,GACAG,GACAiB,IAQJljB,GAAA,WAAA,QAAAA,MAA2B,MAAdA,GAAb5f,GALCsB,EAAAA,UACGG,SAAUC,EAAAA,aAAcie,EAAAA,cAAeG,IACvCte,QAAS6lC,GACT9lC,aAAc8lC,MAELznB,MCeb0nB,GAAA,WACI,QAAJA,GACeC,EACA/E,EACAG,EACA6E,GAHA1vC,KAAfyvC,kBAAeA,EACAzvC,KAAf0qC,SAAeA,EACA1qC,KAAf6qC,aAAeA,EACA7qC,KAAf0vC,YAAeA,EA2Df,MAxDIF,GAAJ1vC,UAAA6vC,YAAI,SAAYb,EAASnE,EAAeiF,EAAkBC,GAAtD,GAAJ7uC,GAAAhB,KACc8vC,EAAW9vC,KAAKyvC,kBAAkBX,EAAMnE,EAgB9C,OAfAiF,GAAYl/B,KAAKo/B,GAEb9vC,KAAK6qC,aAAaiF,IAClB9vC,KAAK0vC,YAAYZ,GACZ5sC,KAAKqM,EAAAA,KAAK,IACVlM,UAAU,SAAC0tC,GACRA,EAASzqC,QAAQ,SAAC0qC,EAAO19B,GACrB,GAAM29B,GAA4BJ,EAAUjuC,OAC5CquC,GAAev/B,KAAK4B,IAAUy9B,EAAS5+B,OAAS,GAEhDnQ,EAAK2uC,YAAYK,EAAOrF,EAAQ,EAAGiF,EAAaK,OAKzDL,GAQXJ,EAAJ1vC,UAAAowC,aAAI,SAAaC,GAAb,GAAJnvC,GAAAhB,KACc4vC,IAGN,OAFAO,GAAe7qC,QAAQ,SAACwpC,GAAS,MAAA9tC,GAAK2uC,YAAYb,EAAM,EAAGc,QAEpDA,GAOXJ,EAAJ1vC,UAAAswC,qBAAI,SAAqBvB,EAAYpE,GAAjC,GAAJzpC,GAAAhB,KACcqwC,KACAC,IAgBN,OAfAA,GAAc,IAAK,EAEnBzB,EAAMvpC,QAAQ,SAACwpC,GAEX,IAAK,GADD3B,IAAS,EACJxJ,EAAI,EAAGA,GAAK3iC,EAAK0pC,SAASoE,GAAOnL,IACtCwJ,EAASA,GAAUmD,EAAc3M,EAGjCwJ,IAAUkD,EAAQ3/B,KAAKo+B,GAEvB9tC,EAAK6pC,aAAaiE,KAClBwB,EAActvC,EAAK0pC,SAASoE,GAAQ,GAAKrE,EAAY8F,WAAWzB,MAIjEuB,GAEfb,KAUAgB,GAAA,SAAAx3B,GAkBI,QAAJw3B,GACgB/F,EACAgG,EACRC,OAAR,KAAAA,IAAQA,KAHJ,IAAJ1vC,GAKQgY,EALRI,KAAApZ,OAAAA,WACgBgB,GAAhBypC,YAAgBA,EACAzpC,EAAhByvC,cAAgBA,EAnBZzvC,EAAJ2vC,cAAoB,GAAI9zB,GAAAA,oBAEpB7b,EAAJ4vC,aAAmB,GAAI/zB,GAAAA,oBAsBf7b,EAAK6vC,MAAQ,GAAIh0B,GAAAA,gBAAqB6zB,KAuB9C,MAhDgD12B,GAAhDw2B,EAAAx3B,GAKIrZ,OAAJC,eAAQ4wC,EAAR1wC,UAAA,QAAAC,IAAI,WACI,MAAOC,MAAK6wC,MAAM1wC,OAG1BD,IAAI,SAASC,GACLH,KAAK6wC,MAAMjrC,KAAKzF,GAEhBH,KAAK2wC,cAAc/qC,KAAK5F,KAAKywC,cAAcP,aAAalwC,KAAK+G,OAC7D/G,KAAKyqC,YAAYqG,UAAY9wC,KAAK2wC,cAAcxwC,uCAepDqwC,EAAJ1wC,UAAAixC,QAAI,SAAQC,GAAR,GAAJhwC,GAAAhB,KACciT,GACF+9B,EAAiBC,WACjBjxC,KAAKyqC,YAAYyG,eAAe5b,QAChCt1B,KAAK2wC,cAGT,OAAOjiC,GAAAA,MAAforB,UAAA,GAAwB7mB,GACX/Q,KAAK8f,EAAAA,IAAI,WAKN,MAJAhhB,GAAK4vC,aAAahrC,KACd5E,EAAKyvC,cAAcL,qBAAqBpvC,EAAK2vC,cAAcxwC,MAAOa,EAAKypC,cAGpEzpC,EAAK4vC,aAAazwC,UAIrCqwC,EAAJ1wC,UAAAqxC,WAAI,aAGJX,GAhDgDY,EAAAA,YCvGhDC,GAAA,SAAAr4B,GAAA,QAAAq4B,KAAA,GAAArwC,GAAA,OAAAgY,GAAAA,EAAA8gB,MAAA95B,KAAAgqC,YAAAhqC,WAWYgB,GAAZ6vC,MAAoB,GAAIh0B,GAAAA,sBAUxB,MArB+C7C,GAA/Cq3B,EAAAr4B,GAEIrZ,OAAJC,eAAQyxC,EAARvxC,UAAA,QAAAC,IAAI,WACI,MAAOC,MAAK6wC,MAAM1wC,OAG1BD,IAAI,SAASC,GACLH,KAAK6wC,MAAMjrC,KAAKzF,oCAMpBkxC,EAAJvxC,UAAAixC,QAAI,SAAQC,GAAR,GAAJhwC,GAAAhB,IACQ,OAAO0O,GAAAA,MAAforB,UAAA,IAAyBkX,EAAiBC,WAAYjxC,KAAK6wC,QAC9C3uC,KAAK8f,EAAAA,IAAI,WAAM,MAAAhhB,GAAK+F,SAG7BsqC,EAAJvxC,UAAAqxC,WAAI,aAGJE,GArB+CD,EAAAA,YCN/C/L,GAAA,WACI,QAAJA,GAAuBl5B,GAAAnM,KAAvBmM,SAAuBA,EACvB,MAFak5B,GAAbn9B,GADCI,EAAAA,WAAYC,SAAU,mBAEvBS,EAAA,qBAAiCmH,EAAAA,eADpBk1B,MCGbD,GAAA,SAAApsB,GAAA,QAAAosB,oDAA2C,MAAXprB,GAAhCorB,EAAApsB,GAAaosB,EAAbl9B,GAHCI,EAAAA,WACGC,SAAU,kCAED68B,IAAmBkM,EAAAA,UAG/BlM,IAAmBmM,eAAiB,WAAM,MAACD,GAAAA,UAAkBC,eCe9D,QAAAC,GAAA,WAAA,QAAAA,MAAwB,MAAxBA,MACaC,GAAoD94B,EAC7D64B,IAcJlN,GAAA,SAAAtrB,GA0DI,QAAJsrB,GAAwBhH,GAApB,GAAJt8B,GACQgY,EADRI,KAAApZ,OAAAA,WAAwBgB,GAAxBs8B,iBAAwBA,EApCpBt8B,EAAJ0wC,UAAwB,GAcX1wC,EAAbugB,aAA4B,GAAItT,GAAAA,QAM5BjN,EAAJI,SAA8B,KAM1BJ,EAAJkG,OAA4B,KAKxBlG,EAAJyiC,UAAe,EAGHziC,EAAZ2wC,cAAmD,OAyBnD,MAjF2B33B,GAA3BsqB,EAAAtrB,GAGIrZ,OAAJC,eAAQ0kC,EAARxkC,UAAA,WAAAC,IAAI,WACI,MAAOC,MAAK2xC,+CA0DhBrN,EAAJxkC,UAAAkT,YAAI,SAAYC,IAEJA,EAAQ2+B,eAAe,cACvB3+B,EAAQ2+B,eAAe,cAEvB5xC,KAAKuhB,aAAa3b,QAI1B0+B,EAAJxkC,UAAAqF,YAAI,WACInF,KAAKuhB,aAAa1b,YAGtBy+B,EAAJxkC,UAAAmF,SAAI,WACIjF,KAAK2xC,cAAgB,GAAIvhC,GAAAA,eACrBpQ,KAAK6xC,iBAAmB7xC,KAAK8xC,gBAC7B9xC,KAAKs9B,mBAtEbp1B,GADCie,EAAAA,aAAaif,IAClBp8B,EAAA,cAAmBo8B,KAAnBd,EAAAxkC,UAAA,oBAAA,IAMIoI,GADCie,EAAAA,aAAakf,IAAgB0M,KAAM5hC,EAAAA,cACxCnH,EAAA,cAAqBmH,EAAAA,cAArBm0B,EAAAxkC,UAAA,sBAAA,IAIIoI,GADC8D,EAAAA,UAAUmE,EAAAA,aACfnH,EAAA,cAAqBmH,EAAAA,cAArBm0B,EAAAxkC,UAAA,sBAAA,IAIIoI,GADCE,EAAAA,MAAM,kCACXk8B,EAAAxkC,UAAA,gBAAA,IAIIoI,GADCE,EAAAA,MAAM,uCACXk8B,EAAAxkC,UAAA,gBAAA,IAOIoI,GADCE,EAAAA,MAAM,4CACXk8B,EAAAxkC,UAAA,qBAAA,IAjCawkC,EAAbp8B,GAXCgE,EAAAA,WACG3D,SAAU,SAIV4D,SAAU,uDACVuP,QAAS,YACTrP,gBAAiBC,EAAAA,wBAAwBC,OACzCC,cAAeC,EAAAA,kBAAkBC,KACjClE,SAAU,UA4DdQ,EAAA,qBAA0CK,EAAAA,oBA1D7Bi7B,IAAcmN,IChCdvU,IAITC,aAAcrhB,EAAAA,QAAQ,gBAElBtE,EAAAA,MACI,wDACA5S,EAAAA,OAAQgvB,UAAW,UAOvBpc,EAAAA,MACI,OACA5S,EAAAA,OAAQgvB,UAAW,2BAA4B1K,UAAW,SAE9D1R,EAAAA,MACI,QACA5S,EAAAA,OAAQgvB,UAAW,0BAA2B1K,UAAW,SAG7DlN,EAAAA,WACI,yDACAC,EAAAA,QAAQ,yDAEZD,EAAAA,WAAW,8BACPpX,EAAAA,OAAQgvB,UAAW,6BACnB3X,EAAAA,QAAQ,0DAEZD,EAAAA,WAAW,+BACPpX,EAAAA,OAAQgvB,UAAW,4BACnB3X,EAAAA,QAAQ,6D3BoBpBmgB,GAAA,WA4CI,QAAJA,GAAwB96B,EACY25B,EACpBlwB,GAFZ,GAAJ/J,GAAAhB,IAAwBA,MAAxBsB,WAAwBA,EACYtB,KAApCi7B,IAAoCA,EAhCbj7B,KAAvB48B,YAA2D,GAAIjjB,GAAAA,aAGxC3Z,KAAvB28B,gBAAgE,GAAIhjB,GAAAA,aAG7C3Z,KAAvB+8B,mBAAmE,GAAIpjB,GAAAA;2CAGhD3Z,KAAvB87B,WAAwD,GAAIniB,GAAAA,cAAmB,GAclE3Z,KAAb+7B,kBAAyC,MAM7B/7B,KAAZg8B,sBAAoCC,EAAAA,aAAaC,MAMrCl8B,KAAKi7B,KAAOlwB,IACZ/K,KAAKg8B,sBAAwBh8B,KAAKi7B,IAAI34B,OAAOD,UAAU,SAACU,GACpD/B,EAAKm7B,8BAA8Bp5B,GACnCgI,EAAkB5G,kBA0ElC,MAzHIxE,QAAJC,eAAQw8B,EAARt8B,UAAA,YAAAI,IAAI,SAAakB,GACTpB,KAAKq8B,cAAgBj7B,EACrBpB,KAAKm8B,iEAsDTC,EAAJt8B,UAAAmF,SAAI,WAC8B,WAAtBjF,KAAKs8B,cAA4C,MAAft8B,KAAKkH,SACvClH,KAAKs8B,aAAet8B,KAAKu8B,8BAIjCH,EAAJt8B,UAAAqF,YAAI,WACInF,KAAKg8B,sBAAsBnlB,eAG/BulB,EAAJt8B,UAAA08B,sBAAI,SAAsBz2B,GAClB,GAAM02B,GAAcz8B,KAAK08B,iBAAiB32B,EAAEuI,QAC5CtO,MAAK28B,gBAAgB31B,KAAKy1B,GACtBA,GACAz8B,KAAK48B,YAAY51B,KAAKhH,KAAKsB,WAAWoD,cAAcH,eAI5D63B,EAAJt8B,UAAA+8B,uBAAI,SAAuB92B,GAEf/F,KAAK08B,iBAAiB32B,EAAEuI,UAAYtO,KAAK08B,iBAAiB18B,KAAKs8B,eAC/Dt8B,KAAK87B,WAAW90B,OAGhBhH,KAAK08B,iBAAiB32B,EAAE+2B,aAAe98B,KAAK08B,iBAAiB18B,KAAKs8B,eAClEt8B,KAAK+8B,mBAAmB/1B,QAKhCo1B,EAAJt8B,UAAAk9B,mBAAI,WACI,MAAOh9B,MAAKi7B,KAA0B,QAAnBj7B,KAAKi7B,IAAI96B,MAAkB,MAAQ,OAI1Di8B,EAAJt8B,UAAA48B,iBAAI,SAAiBt7B,GACb,MAAoB,WAAbA,GACU,uBAAbA,GACa,wBAAbA,GAIAg7B,EAAZt8B,UAAAq8B,8BAAI,SAAsClB,OAA1C,KAAAA,IAA0CA,EAAiBj7B,KAAKg9B,sBACpDh9B,KAAKq8B,cAAgB,EACrBr8B,KAAKs8B,aAAuB,QAARrB,EAAgB,OAAS,QACtCj7B,KAAKq8B,cAAgB,EAC5Br8B,KAAKs8B,aAAuB,QAARrB,EAAgB,QAAU,OAE9Cj7B,KAAKs8B,aAAe,UAQpBF,EAAZt8B,UAAAy8B,0BAAI,WACI,GAAMtB,GAAMj7B,KAAKg9B,oBAEjB,OAAa,QAAR/B,GAAiBj7B,KAAKkH,QAAU,GAAe,QAAR+zB,GAAiBj7B,KAAKkH,OAAS,EAChE,qBAGJ,uBAvHXgB,GADCE,EAAAA,iEAILg0B,EAAAt8B,UAAA,WAAA,MAMcoI,GAATC,EAAAA,SAALa,EAAA,cAAoC2Q,EAAAA,eAApCyiB,EAAAt8B,UAAA,kBAAA,IAGcoI,GAATC,EAAAA,SAALa,EAAA,cAAwC2Q,EAAAA,eAAxCyiB,EAAAt8B,UAAA,sBAAA,IAGcoI,GAATC,EAAAA,SAALa,EAAA,cAA2C2Q,EAAAA,eAA3CyiB,EAAAt8B,UAAA,yBAAA,IAGcoI,GAATC,EAAAA,SAALa,EAAA,cAAmC2Q,EAAAA,eAAnCyiB,EAAAt8B,UAAA,iBAAA,IAGoCoI,GAA/B8D,EAAAA,UAAUixB,EAAAA,qBAAfj0B,EAAA,cAAgDi0B,EAAAA,sBAAhDb,EAAAt8B,UAAA,iBAAA,IAGsBoI,GAAjBE,EAAAA,MAAM,WAAXY,EAAA,cAA+BoH,EAAAA,iBAA/BgsB,EAAAt8B,UAAA,cAAA,IAGaoI,GAARE,EAAAA,iCAALg0B,EAAAt8B,UAAA,aAAA,IAKaoI,GAARE,EAAAA,iCAALg0B,EAAAt8B,UAAA,wBAAA,IApCas8B,EAAbl0B,GAXCgE,EAAAA,WACG3D,SAAU,cACV4D,SAAJ,mSACIC,QAAS,uHACTI,cAAeC,EAAAA,kBAAkBC,KACjCL,gBAAiBC,EAAAA,wBAAwBC,OACzCI,YAAauwB,GAAiBC,cAC9B10B,MACIqE,MAAO,iBAgDElE,EAAjB,EAAiBG,EAAAA,YADjBC,EAAA,qBAAoCE,EAAAA,WACKI,EAAAA,eACNkE,EAAAA,qBA9CtB4uB,MAsIbgB,GAAA,SAAApkB,GAMI,QAAJokB,GACQC,EACAC,EAC6C70B,GAHjD,GAAJzH,GAIQgY,EAJRI,KAAApZ,KAIcq9B,EAA0BC,IAJxCt9B,WAGqDgB,GAArDyH,KAAqDA,EAPzCzH,EAAZu8B,aAA2BtB,EAAAA,aAAaC,MAE5Bl7B,EAAZw8B,WAAyBvB,EAAAA,aAAaC,QAgCtC,MApCqCliB,GAArCojB,EAAApkB,GAcIokB,EAAJt9B,UAAAmF,SAAI,WAAA,GAAJjE,GAAAhB,IACQgZ,GAARlZ,UAAcmF,SAAdmU,KAAApZ,MAEQA,KAAKu9B,aAAev9B,KAAKyI,KAAKk0B,gBACzBz6B,KAAKuzB,EAAAA,UAAUz1B,KAAKyI,KAAKi0B,iBAAiB18B,KAAKyI,KAAK6zB,gBACpDj6B,UAAU,SAACo6B,GACJA,IAAgBz7B,EAAKsC,eACrBtC,EAAKyF,OAAOzF,EAAKyH,KAAKg1B,WAIlCz9B,KAAKw9B,WAAax9B,KAAKyI,KAAKs0B,mBAAmB16B,UAAU,WACrDrB,EAAKqC,YAKb+5B,EAAJt9B,UAAAqF,YAAI,WACI6T,EAARlZ,UAAcqF,YAAdiU,KAAApZ,MACQA,KAAKu9B,aAAa1mB,cAClB7W,KAAKw9B,WAAW3mB,eAlCXumB,EAAbl1B,GAHCI,EAAAA,WACGC,SAAU,oBAWLK,EAAT,EAASC,EAAAA,OAAO2S,EAAAA,WAAW,WAAM,MAAA4gB,QAFjCpzB,EAAA,qBAAkC00B,EAAAA,yBACRr0B,EAAAA,iBACiC+yB,MAT9CgB,IAAwBnxB,EAAAA,iBC5LrC0xB,GAAA,WAAA,QAAAA,MAAoC,MAApCA,MACaC,GACsBjlB,EAAcglB,IAcjDE,GAAA,SAAA7kB,GACI,QAAJ6kB,GAAuBv8B,GAAnB,GAAJN,GACQgY,EADRI,KAAApZ,OAAAA,WAAuBgB,GAAvBM,WAAuBA,IAgBvB,MAjBuC0Y,GAAvC6jB,EAAA7kB,GAMI6kB,EAAJ/9B,UAAAqa,MAAI,WACIna,KAAKsB,WAAWoD,cAAcyV,SAGlC0jB,EAAJ/9B,UAAAg+B,cAAI,WACI,MAAO99B,MAAKsB,WAAWoD,cAAcq5B,YAGzCF,EAAJ/9B,UAAAk+B,eAAI,WACI,MAAOh+B,MAAKsB,WAAWoD,cAAcu5B,aAfhCJ,EAAb31B,GARCI,EAAAA,WACGC,SAAU,sBACVmT,QAAS,YACTjT,MACImT,sBAAuB,WACvBsiB,uBAAwB,gBAIhCl1B,EAAA,qBAAmCE,EAAAA,cADtB20B,IAA0BD,ICsBvCO,GAAA,WAAA,QAAAA,MAA8B,MAA9BA,MAsBAC,GAAA,SAAAplB,GAqGI,QAAJolB,GACgB98B,EACAyJ,EACAuZ,EACY2W,EACZt4B,GALZ,GAAJ3B,GAOQgY,EAPRI,KAAApZ,OAAAA,WACgBgB,GAAhBM,WAAgBA,EACAN,EAAhB+J,kBAAgBA,EACA/J,EAAhBsjB,cAAgBA,EACYtjB,EAA5Bi6B,IAA4BA,EACZj6B,EAAhB2B,OAAgBA,EA/CZ3B,EAAJq9B,wBAA6B,EAGzBr9B,EAAJs9B,oBAAyB,EAGrBt9B,EAAJu9B,qBAA0B,EAIbv9B,EAAbw9B,mBAAwD,GAAI7kB,GAAAA,aAI/C3Y,EAAby9B,aAAkD,GAAI9kB,GAAAA,aAG1C3Y,EAAZ09B,gBAA8B,EAGlB19B,EAAZ29B,sBAAmC,EAGd39B,EAArBoB,UAAiC,GAAI6L,GAAAA,QAiBzBjN,EAAZ49B,eAAqC,IAsUrC,MAzaiC5kB,GAAjCokB,EAAAplB,GAIIrZ,OAAJC,eAAQw+B,EAARt+B,UAAA,iBAAAC,IAAI,WACI,MAAOC,MAAK4+B,gBAEpB1+B,IAAI,SAAkBC,GACd,GAAM0+B,GAAelqB,EAAAA,qBAAqBxU,EAC1CH,MAAK2+B,qBAAuB3+B,KAAK4+B,iBAAmBC,EACpD7+B,KAAK4+B,eAAiBC,EAElB7+B,KAAKwe,YACLxe,KAAKwe,WAAWsgB,iBAAiBD,oCAKzCl/B,OAAJC,eAAQw+B,EAARt+B,UAAA,cAAAC,IAAI,WACI,MAAOC,MAAKwe,WAAaxe,KAAKwe,WAAWmE,gBAAmB,GAIpEziB,IAAI,SAAeC,GAENH,KAAK++B,aAAa5+B,IACnBH,KAAKg/B,aAAe7+B,GACnBH,KAAKwe,YAKVxe,KAAKwe,WAAWmB,cAAcxf,oCAIlCR,OAAJC,eAAQw+B,EAARt+B,UAAA,kBAAAC,IAAI,WACI,MAAOC,MAAK0+B,iBAEpBx+B,IAAI,SAAmB++B,GACfj/B,KAAK0+B,gBAAkBnb,KAAK8G,IACxB,EACA9G,KAAKC,IAAIxjB,KAAKk/B,uBAAwBD,IAK1Cj/B,KAAKm/B,uBAAwB,EAC7Bn/B,KAAKo/B,0DA+DThB,EAAJt+B,UAAAu/B,sBAAI,WAEQr/B,KAAKs/B,gBAAkBt/B,KAAKu/B,cAAcpuB,SAC1CnR,KAAKw/B,mBACLx/B,KAAKs/B,cAAgBt/B,KAAKu/B,cAAcpuB,OACxCnR,KAAK+K,kBAAkB5G,gBAKvBnE,KAAK2+B,uBACL3+B,KAAKy/B,cAAcz/B,KAAK4+B,gBACxB5+B,KAAKo/B,yBACLp/B,KAAK2+B,sBAAuB,EAC5B3+B,KAAK+K,kBAAkB5G,gBAKvBnE,KAAKm/B,wBACLn/B,KAAK0/B,0BACL1/B,KAAKm/B,uBAAwB,EAC7Bn/B,KAAK+K,kBAAkB5G,iBAI/Bi6B,EAAJt+B,UAAAgG,cAAI,SAAcN,GACV,OAAQA,EAAMQ,SACV,IAAKmzB,GAAAA,KACDn5B,KAAKwe,WAAWiE,qBAChBjd,EAAM8Y,gBACN,MACJ,KAAK8a,GAAAA,IACDp5B,KAAKwe,WAAW6a,oBAChB7zB,EAAM8Y,gBACN,MACJ,KAAKwa,GAAAA,MACL,IAAKC,GAAAA,MACD/4B,KAAKw+B,mBAAmBx3B,KAAKhH,KAAKg/B,YAClCx5B,EAAM8Y,gBACN,MACJ,SACIte,KAAKwe,WAAWya,UAAUzzB,KAItC44B,EAAJt+B,UAAAu1B,mBAAI,WAAA,GAAJr0B,GAAAhB,KACc2/B,EAAY3/B,KAAKi7B,IAAMj7B,KAAKi7B,IAAI34B,OAASs9B,EAAAA,GAAa,MACtDC,EAAS7/B,KAAKskB,cAAchiB,OAxMX,KAyMjBw9B,EAAU,WACZ9+B,EAAKw+B,mBAGTx/B,MAAKwe,WAAa,GAAIuhB,GAAAA,gBAAgB//B,KAAKu/B,eACtCxJ,0BAA0B/1B,KAAKg9B,sBAC/BgD,WAELhgC,KAAKwe,WAAWsgB,iBAAiB,OAIAtuB,WAA1ByvB,uBACDH,IACAG,sBAAsBH,GAI5BpxB,EAAAA,MAAMixB,EAAWE,GACZ39B,KAAKC,EAAAA,UAAUnC,KAAKoC,YACpBC,UAAU,WACPy9B,IACA9+B,EAAKwd,WAAWuX,0BACZ/0B,EAAKg8B,wBAOjBh9B,KAAKwe,WAAWlc,OACXJ,KAAKC,EAAAA,UAAUnC,KAAKoC,YACpBC,UAAU,SAAC69B,GACRl/B,EAAKy9B,aAAaz3B,KAAKk5B,GACvBl/B,EAAKm/B,YAAYD,MAI7B9B,EAAJt+B,UAAAqF,YAAI,WACInF,KAAKoC,UAAUwD,OACf5F,KAAKoC,UAAUyD,YAMnBu4B,EAAJt+B,UAAAsgC,iBAAI,WAAA,GAAJp/B,GAAAhB,KACcqgC,EAAcrgC,KAAKsB,WAAWoD,cAAc27B,WAMlD,IAAIA,IAAgBrgC,KAAKsgC,mBAAoB,CACzCtgC,KAAKsgC,mBAAqBD,CAE1B,IAAME,GAAe,WACjBv/B,EAAKw+B,mBACLx+B,EAAK+J,kBAAkB5G,eAM3BnE,MAAK2C,OAAS3C,KAAK2C,OAAOC,IAAI29B,GAAgBA,MAWtDnC,EAAJt+B,UAAA0/B,iBAAI,WACIx/B,KAAKwgC,yBACLxgC,KAAKo/B,yBACLp/B,KAAK0/B,2BAOTtB,EAAJt+B,UAAAi/B,aAAI,SAAazsB,GACT,IAAKtS,KAAKu/B,cACN,OAAO,CAGX,IAAMkB,GAAMzgC,KAAKu/B,cACXv/B,KAAKu/B,cAAc9d,UAAUnP,GAC7B,IAEN,SAASmuB,IAAQA,EAAIp6B,UAOzB+3B,EAAJt+B,UAAAqgC,YAAI,SAAYhnB,GAKR,GAJInZ,KAAKq+B,wBACLr+B,KAAKy/B,cAActmB,GAGnBnZ,KAAKu/B,eAAiBv/B,KAAKu/B,cAAcpuB,OAAQ,CACjDnR,KAAKu/B,cAAc9d,UAAUtI,GAAUgB,OAKvC,IAAMumB,GAAc1gC,KAAK2gC,iBAAiBj8B,cACpCu2B,EAAMj7B,KAAKg9B,oBAGb0D,GAAYE,WADJ,QAAR3F,EACyB,EAGrByF,EAAYG,YAAcH,EAAYzC,cAMtDG,EAAJt+B,UAAAk9B,mBAAI,WACI,MAAOh9B,MAAKi7B,KAA0B,QAAnBj7B,KAAKi7B,IAAI96B,MAAkB,MAAQ,OAI1Di+B,EAAJt+B,UAAA4/B,wBAAI,WACI,GAAMoB,GAAiB9gC,KAAK8gC,eACtBC,EAC4B,QAA9B/gC,KAAKg9B,sBACE8D,EACDA,CAOV9gC,MAAKghC,QAAQt8B,cAAcE,MAAMgvB,UAAY,cAAcrQ,KAAKuB,MAAMic,GAA9E,MAKQ/gC,KAAKghC,QAAQt8B,cAAck8B,WAAa,GAW5CxC,EAAJt+B,UAAAmhC,aAAI,SAAaC,GACT,GAAMC,GAAanhC,KAAK2gC,iBAAiBj8B,cAAcu5B,WAGvDj+B,MAAK8gC,iBACe,WAAdI,GAA0B,EAAI,GAAKC,EA3Wf,GAoX9B/C,EAAJt+B,UAAA2/B,cAAI,SAAc2B,GACV,GAAMC,GAAgBrhC,KAAKu/B,cACrBv/B,KAAKu/B,cAAc9d,UAAU2f,GAC7B,IAEN,IAAKC,EAAL,CAKA,GAEIC,GACAC,EAHEJ,EAAanhC,KAAK2gC,iBAAiBj8B,cAAcu5B,WAKrB,SAA9Bj+B,KAAKg9B,sBACLsE,EAAiBD,EAAcvD,gBAC/ByD,EAAgBD,EAAiBD,EAAcrD,mBAE/CuD,EACIvhC,KAAKghC,QAAQt8B,cAAcu5B,YAC3BoD,EAAcvD,gBAClBwD,EAAiBC,EAAgBF,EAAcrD,iBAGnD,IAAMwD,GAAmBxhC,KAAK8gC,eACxBW,EAAkBzhC,KAAK8gC,eAAiBK,CAE1CG,GAAiBE,EAEjBxhC,KAAK8gC,gBACDU,EAAmBF,EArYJ,GAsYZC,EAAgBE,IAEvBzhC,KAAK8gC,gBACDS,EAAgBE,EAzYD,MAqZ3BrD,EAAJt+B,UAAA0gC,uBAAI,WACI,GAAMkB,GACF1hC,KAAKghC,QAAQt8B,cAAcm8B,YAC3B7gC,KAAKsB,WAAWoD,cAAcu5B,WAE7ByD,KACD1hC,KAAK8gC,eAAiB,GAGtBY,IAAc1hC,KAAKq+B,wBACnBr+B,KAAK+K,kBAAkB5G,eAG3BnE,KAAKq+B,uBAAyBqD,GAYlCtD,EAAJt+B,UAAAs/B,uBAAI,WAEIp/B,KAAKu+B,oBAA8C,IAAxBv+B,KAAK8gC,eAChC9gC,KAAKs+B,mBACDt+B,KAAK8gC,iBAAmB9gC,KAAKk/B,uBACjCl/B,KAAK+K,kBAAkB5G,gBAU3Bi6B,EAAJt+B,UAAAo/B,qBAAI,WAII,MAHwBl/B,MAAKghC,QAAQt8B,cAAcm8B,YAChC7gC,KAAK2gC,iBAAiBj8B,cAAcu5B,aAEhB,GAna3C/1B,GADCE,EAAAA,iEAGLg2B,EAAAt+B,UAAA,gBAAA,MA8CIoI,GADCqyB,EAAAA,gBAAgBsD,IACrB70B,EAAA,cAAmBkd,EAAAA,YAAnBkY,EAAAt+B,UAAA,oBAAA,IAEIoI,GADC8D,EAAAA,UAAU,oBACfhD,EAAA,cAAsBE,EAAAA,aAAtBk1B,EAAAt+B,UAAA,uBAAA,IAEIoI,GADC8D,EAAAA,UAAU,WACfhD,EAAA,cAAaE,EAAAA,aAAbk1B,EAAAt+B,UAAA,cAAA,IAaIoI,GADCC,EAAAA,SACLa,EAAA,cAAiC2Q,EAAAA,eAAjCykB,EAAAt+B,UAAA,yBAAA,IAIIoI,GADCC,EAAAA,SACLa,EAAA,cAA2B2Q,EAAAA,eAA3BykB,EAAAt+B,UAAA,mBAAA,IAzEas+B,EAAbl2B,GAbCgE,EAAAA,WACG3D,SAAU,gBACV4D,SAAJ,2vBACIC,QAAS,44CACTI,cAAeC,EAAAA,kBAAkBC,KACjCL,gBAAiBC,EAAAA,wBAAwBC,OACzC9D,MACIqE,MAAO,gBACP60B,qDACI,yBACJC,4BAA6B,mCA4G5Bh5B,EAAT,EAASG,EAAAA,YAHTC,EAAA,qBAA4BE,EAAAA,WACOsE,EAAAA,kBACJ8Z,EAAAA,cACEhe,EAAAA,eACTH,EAAAA,UA1GXi1B,IAAoBD,ICjCjC0D,GAAA,WAAA,QAAAA,MAAoC,MAAvBA,GAAb35B,GAJCI,EAAAA,WACGC,SAAU,+DACVE,MAAQqE,MAAO,yBAEN+0B,MAMbC,GAAA,WAAA,QAAAA,MAA0C,MAA7BA,GAAb55B,GAJCI,EAAAA,WACGC,SAAU,6EACVE,MAAQqE,MAAO,uCAENg1B,MAMbC,GAAA,WAAA,QAAAA,MAAuC,MAA1BA,GAAb75B,GAJCI,EAAAA,WACGC,SAAU,uEACVE,MAAQqE,MAAO,oCAENi1B,MAMbC,GAAA,WAAA,QAAAA,MAAsC,MAAzBA,GAAb95B,GAJCI,EAAAA,WACGC,SAAU,mEACVE,MAAQqE,MAAO,kCAENk1B,MAGTC,GAAS,EAGbC,GAAA,WAAA,QAAAA,MAKA,MAAAA,MAYaC,GAAiB,GAAI/yB,GAAAA,eAAe,kBAIjDgzB,GAAA,WAEI,QAAJA,GAAuB7pB,GAAAvY,KAAvBuY,YAAuBA,EACvB,MAAA6pB,MACaC,GAGT3pB,EAAWC,EAAcypB,KAoB7BE,GAAA,SAAAtpB,GA0DI,QAAJspB,GACQhhC,EACQyJ,EACoBw3B,EACQC,GAJxC,GAAJxhC,GAMQgY,EANRI,KAAApZ,KAMcsB,IANdtB,WAEgBgB,GAAhB+J,kBAAgBA,EArCH/J,EAAbyhC,eAAmD,QAM5BzhC,EAAvB0hC,oBAAmE,GAAI/oB,GAAAA,aAGhD3Y,EAAvB2hC,YACQ,GAAIhpB,GAAAA,aAGW3Y,EAAvB4hC,cAA2D,GAAIjpB,GAAAA,aAGxC3Y,EAAvB6hC,kBACQ,GAAIlpB,GAAAA,cAA+B,GAG/B3Y,EAAZ8hC,cAA2C,EAG/B9hC,EAAZ+hC,qBAA2C,EAG/B/hC,EAAZgiC,iBAA+B/G,EAAAA,aAAaC,MAGhCl7B,EAAZiiC,qBAAmChH,EAAAA,aAAaC,MACpCl7B,EAAZkiC,gBAAsC,EAC1BliC,EAAZ49B,eAA4C,KAYpC59B,EAAKmiC,SAAWxiC,EAAAA,sBAAsB4hC,GAEtCvhC,EAAKoiC,QAAUnB,KACfjhC,EAAK+6B,kBAAoByG,GAAiBA,EAAczG,kBACpDyG,EAAczG,kBAAoB,QA4K9C,MAlPgC/hB,GAAhCsoB,EAAAtpB,GAMIrZ,OAAJC,eAAQ0iC,EAARxiC,UAAA,iBAAAC,IAAI,WAA+B,MAAOC,MAAKkjC,gBAC/ChjC,IAAI,SAAkBC,GAAkBH,KAAKkjC,eAAiBviC,EAAAA,sBAAsBR,oCAIhFR,OAAJC,eAAQ0iC,EAARxiC,UAAA,iBAAAC,IAAI,WAAqC,MAAOC,MAAK4+B,gBACrD1+B,IAAI,SAAkBC,GACdH,KAAK8iC,cAAgBnuB,EAAAA,qBAAqBxU,EAAO,uCAkErDmiC,EAAJxiC,UAAAu/B,sBAAI,WAAA,GAAJr+B,GAAAhB,KAGc8iC,EAAgB9iC,KAAK8iC,cAAgB9iC,KAAKqjC,cAAcrjC,KAAK8iC,cAInE,IAAI9iC,KAAK4+B,iBAAmBkE,EAAe,CACvC,GAAMQ,GAAoC,MAAvBtjC,KAAK4+B,cAEnB0E,IACDtjC,KAAK6iC,kBAAkB77B,KAAKhH,KAAKujC,kBAAkBT,IAKvDjkB,QAAQC,UAAUC,KAAK,WACnB/d,EAAKwiC,KAAKl+B,QAAQ,SAACm7B,EAAKnuB,GAAU,MAAAmuB,GAAIgD,SAAWnxB,IAAUwwB,IAEtDQ,GACDtiC,EAAK0hC,oBAAoB17B,KAAK87B,KAM1C9iC,KAAKwjC,KAAKl+B,QAAQ,SAACm7B,EAAYnuB,GAC3BmuB,EAAIr/B,SAAWkR,EAAQwwB,EAII,MAAvB9hC,EAAK49B,gBAA2C,IAAjB6B,EAAIr/B,UAAmBq/B,EAAIv5B,SAC1Du5B,EAAIv5B,OAAS47B,EAAgB9hC,EAAK49B,kBAItC5+B,KAAK4+B,iBAAmBkE,IACxB9iC,KAAK4+B,eAAiBkE,EACtB9iC,KAAK+K,kBAAkB5G,iBAI/Bm+B,EAAJxiC,UAAAu1B,mBAAI,WAAA,GAAJr0B,GAAAhB,IACQA,MAAK0jC,uBAIL1jC,KAAKgjC,iBAAmBhjC,KAAKwjC,KAAKvwB,QAAQ5Q,UAAU,WAKhD,GAJsBrB,EAAKqiC,cAAcriC,EAAK8hC,iBAIxB9hC,EAAK49B,eAGvB,IAAK,GAFC4E,GAAOxiC,EAAKwiC,KAAK/hB,UAEdkiB,EAAI,EAAGA,EAAIH,EAAKryB,OAAQwyB,IAC7B,GAAIH,EAAKG,GAAGF,SAAU,CAIlBziC,EAAK8hC,cAAgB9hC,EAAK49B,eAAiB+E,CAC3C,OAKZ3iC,EAAK0iC,uBACL1iC,EAAK+J,kBAAkB5G,kBAI/Bm+B,EAAJxiC,UAAAqF,YAAI,WACInF,KAAKgjC,iBAAiBnsB,cACtB7W,KAAKijC,qBAAqBpsB,eAG9ByrB,EAAJxiC,UAAAyqB,aAAI,SAAajY,GACTtS,KAAK2iC,YAAY37B,KAAKhH,KAAKujC,kBAAkBjxB,KAIjDgwB,EAAJxiC,UAAA8jC,cAAI,SAAcD,GACV,MAAO,gBAAgB3jC,KAAKojC,QAApC,IAA+CO,GAI3CrB,EAAJxiC,UAAA+jC,gBAAI,SAAgBF,GACZ,MAAO,kBAAkB3jC,KAAKojC,QAAtC,IAAiDO,GAO7CrB,EAAJxiC,UAAAgkC,wBAAI,SAAwBC,GACpB,GAAK/jC,KAAKkjC,gBAAmBljC,KAAK+iC,qBAAlC,CAEA,GAAMiB,GAAuBhkC,KAAKikC,eAAev/B,aAEjDs/B,GAAQp/B,MAAMsgB,OAAYllB,KAAK+iC,qBAAvC,KAIY/iC,KAAKikC,eAAev/B,cAAcizB,eAClCqM,EAAQp/B,MAAMsgB,OAAY6e,EAAtC,QAKIzB,EAAJxiC,UAAAokC,2BAAI,WACIlkC,KAAK+iC,qBAAuB/iC,KAAKikC,eAAev/B,cAAcH,aAC9DvE,KAAKikC,eAAev/B,cAAcE,MAAMsgB,OAAS,GACjDllB,KAAK4iC,cAAc57B,QAIvBs7B,EAAJxiC,UAAAqkC,YAAI,SAAY1D,EAAY2D,EAAwB9xB,GACvCmuB,EAAIp6B,WACLrG,KAAKg3B,cAAgBoN,EAAUpF,WAAa1sB,IAKpDgwB,EAAJxiC,UAAAukC,YAAI,SAAY5D,EAAYnuB,GACpB,MAAImuB,GAAIp6B,SACG,KAGJrG,KAAKg3B,gBAAkB1kB,EAAQ,GAAK,GAGvCgwB,EAAZxiC,UAAAyjC,kBAAI,SAA0BjxB,GACtB,GAAM9M,GAAQ,GAAI08B,GAMlB,OALA18B,GAAM8M,MAAQA,EACVtS,KAAKwjC,MAAQxjC,KAAKwjC,KAAKryB,SACvB3L,EAAMi7B,IAAMzgC,KAAKwjC,KAAK/hB,UAAUnP,IAG7B9M,GASH88B,EAAZxiC,UAAA4jC,qBAAI,WAAA,GAAJ1iC,GAAAhB,IACYA,MAAKijC,sBACLjjC,KAAKijC,qBAAqBpsB,cAG9B7W,KAAKijC,qBAAuBv0B,EAAAA,MAApCorB,UAAA,GAA6C95B,KAAKwjC,KAAKxhB,IAAI,SAACye,GAAQ,MAAAA,GAAIlf,gBAC3Dlf,UAAU,WAAM,MAAArB,GAAK+J,kBAAkB5G,kBAIxCm+B,EAAZxiC,UAAAujC,cAAI,SAAsB/wB,GAIlB,MAAOiR,MAAKC,IAAIxjB,KAAKwjC,KAAKryB,OAAS,EAAGoS,KAAK8G,IAAI/X,GAAS,EAAG,KA1O/DpK,GADCE,EAAAA,mEACLk6B,EAAAxiC,UAAA,gBAAA,MAKIoI,GADCE,EAAAA,iEACLk6B,EAAAxiC,UAAA,gBAAA,MAK4BoI,GAAvBqyB,EAAAA,gBAAgB+J,IAArBt7B,EAAA,cAAkCkd,EAAAA,YAAlCoc,EAAAxiC,UAAA,WAAA,IAEiCoI,GAA5B8D,EAAAA,UAAU,kBAAfhD,EAAA,cAAiDE,EAAAA,aAAjDo5B,EAAAxiC,UAAA,qBAAA,IAE4BoI,GAAvB8D,EAAAA,UAAU,aAAfhD,EAAA,cAAuCo1B,KAAvCkE,EAAAxiC,UAAA,gBAAA,IAGaoI,GAARE,EAAAA,iCAALk6B,EAAAxiC,UAAA,qBAAA,IAGaoI,GAARE,EAAAA,iCAALk6B,EAAAxiC,UAAA,wBAAA,IAGcoI,GAATC,EAAAA,SAALa,EAAA,cAA4C2Q,EAAAA,eAA5C2oB,EAAAxiC,UAAA,0BAAA,IAGcoI,GAATC,EAAAA,SAALa,EAAA,cAAoC2Q,EAAAA,eACpC2oB,EAAAxiC,UAAA,kBAAA,IAGcoI,GAATC,EAAAA,SAALa,EAAA,cAAsC2Q,EAAAA,eAAtC2oB,EAAAxiC,UAAA,oBAAA,IAGcoI,GAATC,EAAAA,SAALa,EAAA,cAA0C2Q,EAAAA,eAC1C2oB,EAAAxiC,UAAA,wBAAA,IAxCawiC,EAAbp6B,GAdCgE,EAAAA,WACG3D,SAAU,eACVC,SAAU,aACV2D,SAAJ,s+CACIC,QAAS,s0FACTI,cAAeC,EAAAA,kBAAkBC,KACjCL,gBAAiBC,EAAAA,wBAAwBC,OACzCmP,QAAS,SACTjT,MACIqE,MAAO,eACPy3B,sCAAuC,gBACvCC,uCAAwC,gCAgEvC57B,EAAT,EAASsT,EAAAA,UAAU,kBACVtT,EAAT,EAASC,EAAAA,OAAOs5B,KAAiBv5B,EAAjC,EAAiCG,EAAAA,YAHjCC,EAAA,qBAAoBE,EAAAA,WACesE,EAAAA,kBAAnC4O,OAAAzc,UA5Da2iC,IAAmBD,ICnFhCoC,GAAA,WAEI,QAAJA,GAAuBlsB,GAAAvY,KAAvBuY,YAAuBA,EACvB,MAAAksB,MACaC,GACahsB,EAAW+rB,IAerCE,GAAA,SAAA3rB,GAEQ,QAAR2rB,GAAoBrjC,GACpB,MAAY0X,GAAZI,KAAApZ,KAAkBsB,IAAlBtB,KAEK,MALyBga,GAA9B2qB,EAAA3rB,GAAa2rB,EAAbz8B,GAVCgE,EAAAA,WACG3D,SAAU,mBACVC,SAAU,wBACVkT,QAAS,SACTvP,SAAJ,4DACIC,QAAS,q4GACT3D,MAAQqE,MAAO,kBACfN,cAAeC,EAAAA,kBAAkBC,KACjCL,gBAAiBC,EAAAA,wBAAwBC,SAI7CvD,EAAA,qBAAgCE,EAAAA,cAFnBy7B,IAAiBD,IAQ9BE,GAAA,WAAA,QAAAA,MAA4B,MAA5BA,MACaC,GACcpsB,EAAcE,EAAcisB,KAkBvDE,GAAA,SAAA9rB,GAgBI,QAAJ8rB,GACexjC,EACgB6X,EACf4rB,GAHZ,GAAJ/jC,GAKQgY,EALRI,KAAApZ,OAAAA,WACegB,GAAfM,WAAeA,EAECN,EAAhB+jC,aAAgBA,EALF/jC,EAAdyiC,UAAkC,EAS1BziC,EAAKmY,SAAWrU,SAASqU,IAAa,EACtCnY,EAAK+jC,aAAahrB,QAAQ/Y,EAAKM,WAAWoD,iBAMlD,MA9B+BsV,GAA/B8qB,EAAA9rB,GAIIrZ,OAAJC,eAAQklC,EAARhlC,UAAA,UAAAC,IAAI,WACI,MAAOC,MAAKyjC,UAEpBvjC,IAAI,SAAWC,GACHA,IAAUH,KAAKyjC,WACfzjC,KAAKyjC,SAAWtjC,oCAkBxB2kC,EAAJhlC,UAAAqF,YAAI,WACInF,KAAK+kC,aAAa7qB,eAAela,KAAKsB,WAAWoD,gBAxBrDwD,GADCE,EAAAA,mEAGL08B,EAAAhlC,UAAA,SAAA,MANaglC,EAAb58B,GAbCI,EAAAA,WACGC,SAAU,6BACVC,SAAU,YACVkT,QAAS,WAAY,YACrBjT,MACIqE,MAAO,cACPk4B,sBAAuB,SACvB9G,uBAAwB,sBACxB+G,kBAAmB,WACnBrpB,sBAAuB,WACvBspB,oBAAqB,YAqBpBt8B,EAAT,EAASsT,EAAAA,UAAU,aADnBlT,EAAA,qBAA2BE,EAAAA,WAA3BkT,OAE8BD,EAAAA,gBAnBjB2oB,IAAkBD,ICd/BM,GAAA,WAAA,QAAAA,MAA2B,MAAdA,GAAbj9B,GAtCCsB,EAAAA,UACGG,SACIC,EAAAA,aACAkK,GACAD,EAAAA,aACAyI,EAAAA,YAGJ5S,SACIoK,GACAwuB,GACA8C,GACAd,GACAK,GACAG,GACAO,GACAxD,GACAC,GACAC,GACAC,IAEJv4B,cACI64B,GACA8C,GACAd,GACAzG,GACA8G,GACAG,GACA1I,GACAgB,GACAgB,GACAiH,GACAxD,GACAC,GACAC,GACAC,OAGKmD,MCxCbG,GAAA,WACI,QAAJA,GAAuB/sB,GAAAvY,KAAvBuY,YAAuBA,EACvB,MAAA+sB,MAEaC,GAAoE7sB,EAAWC,EAAc2sB,KAe1Grf,GAAA,SAAAjN,GAeI,QAAJiN,GAAgB3kB,GAAZ,GAAJN,GACQgY,EADRI,KAAApZ,KACcsB,IADdtB,WAVYgB,GAAZmT,WAAiC,EAazBnT,EAAK0D,cAAgBpD,EAAWoD,gBAgCxC,MAlD2BsV,GAA3BiM,EAAAjN,GAOIrZ,OAAJC,eAAQqmB,EAARnmB,UAAA,YAAAC,IAAI,WACI,MAAOC,MAAKmU,WAGpBjU,IAAI,SAAaC,GACLA,IAAUH,KAAKqG,WAAYrG,KAAKmU,UAAYhU,oCASpD8lB,EAAJnmB,UAAAu1B,mBAAI,WACIr1B,KAAKwlC,gCAGTvf,EAAJnmB,UAAA0lC,6BAAI,WACI,GAAMC,GAAQzlC,KAAK0lC,gBAAgB1jB,IAAI,SAACpM,GAAS,MAAAA,GAAK2C,YAAY7T,eAElE,IAAqB,IAAjB+gC,EAAMt0B,OAAc,CACpB,GAAMw0B,GAAcF,EAAM,EAErBE,GAAYC,wBAA2BD,EAAYE,qBAChDF,EAAYG,cACZH,EAAY/5B,UAAUC,IAAI,gBAC1B7L,KAAK0E,cAAckH,UAAUC,IAAI,iBAGjC85B,EAAYI,kBACZJ,EAAY/5B,UAAUC,IAAI,iBAC1B7L,KAAK0E,cAAckH,UAAUC,IAAI,uBAGtC,IAAI45B,EAAMt0B,OAAS,EAAG,CACzB,GAAM60B,GAAmBP,EAAM,GACzBQ,EAAoBR,EAAM,EAEhCO,GAAiBp6B,UAAUC,IAAI,gBAC/Bo6B,EAAkBr6B,UAAUC,IAAI,mBA9Cf3D,GAAxBqyB,EAAAA,gBAAgB2L,IAArBl9B,EAAA,cAA8Ckd,EAAAA,YAA9CD,EAAAnmB,UAAA,sBAAA,IADammB,EAAb/d,GAZCgE,EAAAA,WACG3D,SAAU,SACV4D,SAAJ,+KACIC,QAAS,8rBACTC,gBAAiBC,EAAAA,wBAAwBC,OACzCC,cAAeC,EAAAA,kBAAkBC,KACjCjE,MACIqE,MAAO,SACP8O,sBAAuB,YAE3BF,QAAS,QAAS,cAiBtB1S,EAAA,qBAA4BE,EAAAA,cAff+c,IAAcsf,ICnB3Bxd,GAAA,WAAA,QAAAA,MAA0B,MAAbA,GAAb7f,GAZCsB,EAAAA,UACGG,SACIC,EAAAA,aACA6pB,EAAAA,gBAEJ/pB,SACIuc,IAEJxc,cACIwc,OAGK8B,M3B4ET1P,GAAe,EAMnB0hB,GAAA,WACI,QAAJA,GAAuB3e,EAAyBjb,GAAzBH,KAAvBob,OAAuBA,EAAyBpb,KAAhDG,MAAgDA,EAChD,MAAA45B,MAEAoM,GAAA,WACI,QAAJA,GACe7kC,EACA8mB,EACAC,EACAC,EACArJ,GAJAjf,KAAfsB,WAAeA,EACAtB,KAAfooB,yBAAeA,EACApoB,KAAfqoB,WAAeA,EACAroB,KAAfsoB,gBAAeA,EACAtoB,KAAfif,UAAeA,EAEf,MAAAknB,MAEMvL,GACoBniB,EAAcE,EAAc6P,EAAgB2d,MAItE7L,GAAA,WAAA,QAAAA,MAA8B,MAAjBA,GAAbpyB,GADCI,EAAAA,WAAYC,SAAU,uBACV+xB,MAgCb1F,GAAA,SAAA5b,GAwPI,QAAJ4b,GACyBuF,EACAjhB,EACA8c,EACAsC,EACjBlQ,EACA9mB,EAC6Bg1B,EACjBjO,EACAC,EACiBwO,EACF7X,EACJ9F,EAC6BitB,GAbxD,GAAJplC,GAeQgY,EAfRI,KAAApZ,KAecsB,EAAY8mB,EAA0BC,EAAYC,EAAiBrJ,IAfjFjf,WACyBgB,GAAzBm5B,eAAyBA,EACAn5B,EAAzBkY,mBAAyBA,EACAlY,EAAzBg1B,QAAyBA,EACAh1B,EAAzBs3B,UAAyBA,EAGYt3B,EAArCs1B,KAAqCA,EAGAt1B,EAArC81B,iBAAqCA,EACF91B,EAAnCie,UAAmCA,EAEyBje,EAA5DolC,uBAA4DA,EAhQxDplC,EAAJ6nB,YAAkB,YAEd7nB,EAAJ42B,YAA0B,EACtB52B,EAAJo6B,YAA0B,SAMtBp6B,EAAJ80B,gBAAsB,EASlB90B,EAAJqhB,UAAwB,GAGpBrhB,EAAJ0kB,gBAA8B,MAG1B1kB,EAAJo0B,oBAAkC,EAG9Bp0B,EAAJk0B,yBAA+B,GAAIjnB,GAAAA,QAG/BjN,EAAJkC,eAAqBlC,EAAKolC,yBAOtBplC,EAAJ8iB,QAAc,EAQV9iB,EAAJyb,YAEY1Y,QAAS,QACTC,QAAS,SACTC,SAAU,QACVC,SAAU,QAGVH,QAAS,QACTC,QAAS,MACTC,SAAU,QACVC,SAAU,WAkCTlD,EAAb8f,uBAA2Ewa,EAAAA,MAAM,WACzE,MAAIt6B,GAAK4e,QACElR,EAAAA,MAAnBorB,UAAA,GAA4B94B,EAAK4e,QAAQoC,IAAI,SAACnC,GAAW,MAAAA,GAAO0b,qBAGjDv6B,EAAKg1B,QAAQC,SACfhnB,eACA/M,KAAKqM,EAAAA,KAAK,GAAIitB,EAAAA,UAAU,WAAM,MAAAx6B,GAAK8f,4BAIzB9f,EAAvBqzB,aAA6D,GAAI1a,GAAAA,aAGlC3Y,EAA/Bq6B,aACQr6B,EAAKqzB,aAAanyB,KAAKkM,EAAAA,OAAO,SAAC+lB;wDAAM,MAAAA,KAAInS,EAAAA,IAAI,eAGtBhhB,EAA/BozB,aACQpzB,EAAKqzB,aAAanyB,KAAKkM,EAAAA,OAAO,SAAC+lB,GAAM,OAACA,IAAInS,EAAAA,IAAI,eAG/BhhB,EAAvBmhB,gBAAuE,GAAIxI,GAAAA,aAOpD3Y,EAAvBihB,YAAwD,GAAItI,GAAAA,aA0BhD3Y,EAAZ+nB,WAAiC,EAerB/nB,EAAZszB,WAAiC,EAkErBtzB,EAAZuzB,UAAuB,EAMXvzB,EAAZyf,YAAyB,EAGbzf,EAAZ4hB,UAAwB,EAGH5hB,EAArB8nB,IAA2B,aAAazQ,KAGnBrX,EAArBwf,QAA+B,GAAIvS,GAAAA,QAiG/BjN,EAAJwzB,UAAsC,aAGlCxzB,EAAJyzB,WAAiB,aA8vBLzzB,EAAZ8e,aAA2B,SAAC4U,EAASC,GAAY,MAAAD,KAAOC,GA/0B5C3zB,EAAKie,YAGLje,EAAKie,UAAUkK,cAAgBnoB,GAGnCA,EAAKmY,SAAWrU,SAASqU,IAAa,EAGtCnY,EAAKmN,GAAKnN,EAAKmN,KAlRO6L,EAA9B4a,EAAA5b,GAAA6b,EAAaD,EA+HTj1B,OAAJC,eAAQg1B,EAAR90B,UAAA,eAAAC,IAAI,WACI,MAAOC,MAAK80B,cAGpB50B,IAAI,SAAgBC,GACZH,KAAK80B,aAAe30B,EAEpBH,KAAKuhB,aAAa3b,wCAMtBjG,OAAJC,eAAQg1B,EAAR90B,UAAA,YAAAC,IAAI,WACI,MAAOC,MAAK+oB,WAGpB7oB,IAAI,SAAaC,GACTH,KAAK+oB,UAAYpoB,EAAAA,sBAAsBR,GAEvCH,KAAKuhB,aAAa3b,wCAMtBjG,OAAJC,eAAQg1B,EAAR90B,UAAA,YAAAC,IAAI,WACI,MAAOC,MAAKs0B,WAGpBp0B,IAAI,SAAaC,GACT,GAAIH,KAAKuf,eACL,KAAMwV,IAGV/0B,MAAKs0B,UAAY3zB,EAAAA,sBAAsBR,oCAW3CR,OAAJC,eAAQg1B,EAAR90B,UAAA,eAAAC,IAAI,WACI,MAAOC,MAAK8f,cAGpB5f,IAAI,SAAgB8a,GAEZ,GAAkB,kBAAPA,GACP,KAAMga,IAGVh1B,MAAK8f,aAAe9E,EAEhBhb,KAAKuf,gBAELvf,KAAK4e,uDAMbjf,OAAJC,eAAQg1B,EAAR90B,UAAA,SAAAC,IAAI,WACI,MAAOC,MAAKkf,QAGpBhf,IAAI,SAAUyqB,GACFA,IAAa3qB,KAAKkf,SAClBlf,KAAK8a,WAAW6P,GAChB3qB,KAAKkf,OAASyL,oCAOtBhrB,OAAJC,eAAQg1B,EAAR90B,UAAA,MAAAC,IAAI,WACI,MAAOC,MAAK2pB,KAGpBzpB,IAAI,SAAOC,GACHH,KAAK2pB,IAAMxpB,GAASH,KAAK8oB,IACzB9oB,KAAKuhB,aAAa3b,wCAMtBjG,OAAJC,eAAQg1B,EAAR90B,UAAA,WAAAC,IAAI,WACI,MAAOC,MAAKu0B,UAAYv0B,KAAKygB,YAOrCvgB,IAAI,SAAYC,GACRH,KAAKu0B,SAAWp0B,mCAKpBR,OAAJC,eAAQg1B,EAAR90B,UAAA,aAAAC,IAAI,WACI,MAAOC,MAAKygB,4CA2ChBmU,EAAJ90B,UAAAmF,SAAI,WAAA,GAAJjE,GAAAhB,IACQA,MAAKuf,eAAiB,GAAI0V,GAAAA,eAAyBj1B,KAAKmf,UACxDnf,KAAKuhB,aAAa3b,OAKlB5F,KAAKk1B,yBACAhzB,KAAK4E,EAAAA,uBAAwB3E,EAAAA,UAAUnC,KAAKwgB,UAC5Cne,UAAU,WACHrB,EAAKm0B,WACLn0B,EAAK4hB,UAAY,EACjB5hB,EAAKqzB,aAAartB,MAAK,KAEvBhG,EAAKqzB,aAAartB,MAAK,GACvBhG,EAAKo0B,oBAAqB,EAC1Bp0B,EAAKmjB,WAAWM,QAAU,EAC1BzjB,EAAKkY,mBAAmB/U,mBAKxCywB,EAAJ90B,UAAAu1B,mBAAI,WAAA,GAAJr0B,GAAAhB,IACQA,MAAKogB,iBAELpgB,KAAKuf,eAAe+V,QACfpzB,KAAKC,EAAAA,UAAUnC,KAAKwgB,UACpBne,UAAU,SAACmD,GACRA,EAAM+vB,MAAMjwB,QAAQ,SAACua,GAAW,MAAAA,GAAOM,WACvC3a,EAAMgwB,QAAQlwB,QAAQ,SAACua,GAAW,MAAAA,GAAOwB,eAGjDrhB,KAAK4f,QAAQ3M,QACR/Q,KAAKuzB,EAAAA,UAAU,MAAOtzB,EAAAA,UAAUnC,KAAKwgB,UACrCne,UAAU,WACPrB,EAAK4f,eACL5f,EAAK4d,yBAIjBgW,EAAJ90B,UAAA41B,gBAAI,WAAA,GAAJ10B,GAAAhB,IACQA,MAAK21B,KAAK1iB,QACL5Q,UAAU,WACPyQ,WAAW,WAAM,MAAA9R,GAAK40B,wBAAwB,MAI1DhB,EAAJ90B,UAAAgqB,UAAI,WACQ9pB,KAAKif,WAAajf,KAAK+pB,oBAG/B6K,EAAJ90B,UAAAkT,YAAI,SAAYC,GAGJA,EAAQ5M,UACRrG,KAAKuhB,aAAa3b,QAI1BgvB,EAAJ90B,UAAAqF,YAAI,WACInF,KAAKwgB,QAAQ5a,OACb5F,KAAKwgB,QAAQ3a,WACb7F,KAAKuhB,aAAa1b,YAUtB+uB,EAAJ90B,UAAA+1B,OAAI,WACQ71B,KAAKm1B,UACLn1B,KAAK6O,QAEL7O,KAAK4P,QAKbglB,EAAJ90B,UAAA8P,KAAI,WAAA,GAAJ5O,GAAAhB,MACYA,KAAKqG,UAAarG,KAAK4f,SAAY5f,KAAK4f,QAAQzO,SAAUnR,KAAKygB,aAEnEzgB,KAAKglB,YAAchlB,KAAK8b,QAAQpX,cAAc0f,wBAG9CpkB,KAAK81B,gBAAkBhxB,SAASmT,iBAAiBjY,KAAK8b,QAAQpX,eAAe,cAE7E1E,KAAKygB,YAAa,EAClBzgB,KAAKwe,WAAWuX,0BAA0B,MAC1C/1B,KAAKkjB,2BACLljB,KAAKuiB,yBACLviB,KAAKkZ,mBAAmB/U,eAGxBnE,KAAKg2B,QAAQC,SAAShnB,eACjB/M,KAAKqM,EAAAA,KAAK,IACVlM,UAAU,WACHrB,EAAK80B,iBAAmB90B,EAAKmjB,WAAWljB,YAAcD,EAAKmjB,WAAWljB,WAAWqD,iBACjFtD,EAAKmjB,WAAWljB,WAAWqD,eAAeM,MAAMsxB,SAAcl1B,EAAK80B,gBAAvF,UAMIlB,EAAJ90B,UAAA+O,MAAI,WACQ7O,KAAKygB,aACLzgB,KAAKygB,YAAa,EAClBzgB,KAAKwe,WAAWuX,0BAA0B/1B,KAAKwkB,QAAU,MAAQ,OACjExkB,KAAKkZ,mBAAmB/U,eACxBnE,KAAKy0B,eAUbG,EAAJ90B,UAAAgb,WAAI,SAAW3a,GACHH,KAAK4f,SACL5f,KAAKgf,oBAAoB7e,IAWjCy0B,EAAJ90B,UAAAib,iBAAI,SAAiBC,GACbhb,KAAKw0B,UAAYxZ,GAUrB4Z,EAAJ90B,UAAAmb,kBAAI,SAAkBD,GACdhb,KAAKy0B,WAAazZ,GAStB4Z,EAAJ90B,UAAAob,iBAAI,SAAiBC,GACbnb,KAAKqG,SAAW8U,EAChBnb,KAAKkZ,mBAAmB/U,eACxBnE,KAAKuhB,aAAa3b,QAGtBjG,OAAJC,eAAQg1B,EAAR90B,UAAA,YAAAC,IAAI,WACI,MAAOC,MAAKmf,SAAWnf,KAAKuf,eAAe6B,SAAWphB,KAAKuf,eAAe6B,SAAS,oCAGvFzhB,OAAJC,eAAQg1B,EAAR90B,UAAA,gBAAAC,IAAI,WACI,GAAIC,KAAKwiB,MAAS,MAAO,EAEzB,IAAIxiB,KAAKs0B,UAAW,CAChB,GAAM6B,GAAkBn2B,KAAKuf,eAAe6B,SAASY,IAAI,SAACnC,GAAW,MAAAA,GAAOuW,WAI5E,OAFIp2B,MAAKwkB,SAAW2R,EAAgBhkB,UAE7BgkB,EAAgB7T,KAAK,MAGhC,MAAOtiB,MAAKuf,eAAe6B,SAAS,GAAGgV,2CAG3Cz2B,OAAJC,eAAQg1B,EAAR90B,UAAA,iBAAAC,IAAI,WACI,GAAIC,KAAKwiB,MAAS,QAElB,IAAIxiB,KAAKs0B,UAAW,CAChB,GAAM6B,GAAkBn2B,KAAKuf,eAAe6B,QAI5C,OAFIphB,MAAKwkB,SAAW2R,EAAgBhkB,UAE7BgkB,EAGX,OAAQn2B,KAAKuf,eAAe6B,SAAS,qCAGzCzhB,OAAJC,eAAQg1B,EAAR90B,UAAA,SAAAC,IAAI,WACI,OAAQC,KAAKuf,gBAAkBvf,KAAKuf,eAAe8W,2CAGvDzB,EAAJ90B,UAAA0kB,MAAI,WACI,QAAOxkB,KAAKs2B,MAA2B,QAApBt2B,KAAKs2B,KAAKn2B,OAGjCy0B,EAAJ90B,UAAAgG,cAAI,SAAcN,GACLxF,KAAKqG,WACFrG,KAAKm1B,UACLn1B,KAAKu2B,kBAAkB/wB,GAEvBxF,KAAKw2B,oBAAoBhxB,KASrCovB,EAAJ90B,UAAA22B,aAAI,WACIz2B,KAAKo1B,mBAAqBp1B,KAAKm1B,UAC/Bn1B,KAAKkZ,mBAAmB/U,gBAG5BywB,EAAJ90B,UAAA42B,QAAI,WACS12B,KAAKqG,WACNrG,KAAKu0B,UAAW,EAEhBv0B,KAAKuhB,aAAa3b,SAQ1BgvB,EAAJ90B,UAAAsuB,OAAI,WACIpuB,KAAKu0B,UAAW,EAEXv0B,KAAKqG,UAAarG,KAAKm1B,YACxBn1B,KAAKy0B,aACLz0B,KAAKkZ,mBAAmB/U,eACxBnE,KAAKuhB,aAAa3b,SAO1BgvB,EAAJ90B,UAAA62B,WAAI,WAAA,GAAJ31B,GAAAhB,IACQA,MAAKmkB,WAAWyS,eACX10B,KAAKqM,EAAAA,KAAK,IACVlM,UAAU,WACPrB,EAAKkY,mBAAmBlO,gBACxBhK,EAAKijB,0BACLjjB,EAAK0f,MAAMhc,cAAcke,UAAY5hB,EAAK4hB,aAKtDgS,EAAJ90B,UAAA+2B,cAAI,WACI,MAAO72B,MAAK82B,iBAAmB,MAAM92B,KAAK82B,iBAAiBC,MAAU,IAIzEnC,EAAJ90B,UAAAqa,MAAI,WACIna,KAAKsB,WAAWoD,cAAcyV,SAUlCya,EAAJ90B,UAAA+jB,uBAAI,SAAuBmT,EAAuBpT,EAAsBF,GAChE,GAAMP,GAAanjB,KAAK8iB,gBAClBmU,EAA4B9T,EAAa6T,EAGzCE,EAAmB/T,EAAa,EAMhCgU,EAAwBF,EAA4BrT,EAAesT,CAEzE,OAAO3T,MAAKC,IAAID,KAAK8G,IAAI,EAAG8M,GAAwBzT,IAOxDkR,EAAJ90B,UAAA4qB,iBAAI,WACI1qB,KAAKma,QACLna,KAAK4P,QAITglB,EAAJ90B,UAAAs3B,oBAAI,SAAoBvX,EAAkBtc,GAClCA,EAAOkX,kBAEPoF,EAAOwB,YAGXuT,EAAJ90B,UAAA81B,qBAAI,WACI,IAAI51B,KAAKwiB,OAAUxiB,KAAKmf,SAAxB,CAEA,GAAIkY,GAAuB,EACrBC,EAAkBt3B,KAAKu3B,8BACzBC,EAAiC,CAYrC,IATAx3B,KAAK21B,KAAKrwB,QAAQ,SAACmyB,GACXA,EAAI/yB,cAAcgzB,UAAYD,EAAI/yB,cAAcizB,eAChDH,GAA0BC,EAAI/yB,cAAc0f,wBAAwBS,MAJjD,EAKnBwS,OAIRr3B,KAAK43B,YAAe53B,KAAKohB,SAAiCjQ,OAASkmB,EAE/Dr3B,KAAK43B,YAAa,CAClB,GAAMC,GAAe73B,KAAK8b,QAAQpX,cAAcozB,cAAc,iCACxDC,EAAc/3B,KAAK8b,QAAQpX,cAAcozB,cAAc,0BAEvDE,EAAqBH,EAAaH,UAAYG,EAAaF,aAI3DM,EAA2BF,EAAY3T,wBAAwBS,MAC/DqT,EAAuBD,EAHK,EAOlC,IAFID,GAAuBV,EAAkBY,IAAiBl4B,KAAK43B,YAAc,GAG7EJ,IAA2BS,GAC1BT,EAT6B,GASiBS,EAI/C,WAFAj4B,MAAKkZ,mBAAmB/U,gBAGhB6zB,GAAuBV,EAdD,GAcwCY,GACtEl4B,KAAK43B,cAIb53B,KAAKkZ,mBAAmB/U,iBAGpBywB,EAAZ90B,UAAAy3B,4BAAI,WACI,GAAMY,GAAen4B,KAAK8b,QAAQpX,cAAc0zB,WAAU,EAC1DD,GAAaL,cAAc,iCAAiCO,SAE5Dr4B,KAAKs4B,UAAUpjB,SAASijB,EAAc,WAAY,YAClDn4B,KAAKs4B,UAAUpjB,SAASijB,EAAc,aAAc,UACpDn4B,KAAKs4B,UAAUpjB,SAASijB,EAAc,MAAO,SAC7Cn4B,KAAKs4B,UAAUpjB,SAASijB,EAAc,OAAQ,KAE9Cn4B,KAAKs4B,UAAUC,YAAYv4B,KAAK8b,QAAQpX,cAAeyzB,EAEvD,IAAIb,GAA0B,CAQ9B,OANAa,GAAaK,iBAAiB,UAAUlzB,QAAQ,SAACsQ,GAC7C0hB,GAAmB1hB,EAAKwO,wBAAwBS,MAFzB,IAK3BsT,EAAaE,SAENf,GAIH1C,EAAZ90B,UAAA02B,oBAAI,SAA4BhxB,GAExB,GAAMQ,GAAUR,EAAMQ,QAChByyB,EAAazyB,IAAY0yB,EAAAA,YAAc1yB,IAAY2yB,EAAAA,UACrD3yB,IAAY4yB,EAAAA,YAAc5yB,IAAY6yB,EAAAA,WACxB7yB,KAAY8yB,EAAAA,OAAS9yB,IAAY+yB,EAAAA,QAGhC/4B,KAAKmf,UAAY3Z,EAAMwzB,SAAWP,GACjDjzB,EAAM8Y,iBACNte,KAAK4P,QACG5P,KAAKmf,UACbnf,KAAKwe,WAAWya,UAAUzzB,IAK1BovB,EAAZ90B,UAAAy2B,kBAAI,SAA0B/wB,GAEtB,GAAMQ,GAAUR,EAAMQ,QAChByyB,EAAazyB,IAAY0yB,EAAAA,YAAc1yB,IAAY2yB,EAAAA,SACnDO,EAAUl5B,KAAKwe,UAErB,IAAIxY,IAAYmzB,EAAAA,MAAQnzB,IAAYozB,EAAAA,IAChC5zB,EAAM8Y,iBAEFtY,IAAYmzB,EAAAA,KACZD,EAAQzW,qBAERyW,EAAQG,wBAGT,IAAIZ,GAAcjzB,EAAMwzB,OAE3BxzB,EAAM8Y,iBACNte,KAAK6O,YACF,IAAK7I,IAAY8yB,EAAAA,OAAS9yB,IAAY+yB,EAAAA,QAAUG,EAAQza,WAGxD,GAAIze,KAAKs0B,WAAatuB,IAAYszB,EAAAA,GAAK9zB,EAAM+zB,QAAS,CACzD/zB,EAAM8Y,gBACN,IAAMkb,GAAuBx5B,KAAK4f,QAAQhc,KAAK,SAACic,GAAW,OAACA,EAAOuB,UACnEphB,MAAK4f,QAAQta,QAAQ,SAACua,GACd2Z,IAAyB3Z,EAAOxZ,SAChCwZ,EAAOM,SAEPN,EAAOwB,iBAGZ,CACH,GAAMoY,GAAyBP,EAAQvW,eAEvCuW,GAAQD,UAAUzzB,GAEdxF,KAAKs0B,WAAamE,GAAcjzB,EAAMk0B,UAAYR,EAAQza,YAC1Dya,EAAQvW,kBAAoB8W,GAC5BP,EAAQza,WAAWC,2BAnBvBlZ,GAAM8Y,iBACN4a,EAAQza,WAAWC,wBAuBnBkW,EAAZ90B,UAAA8e,oBAAI,WAAA,GAAJ5d,GAAAhB,IAGQ6e,SAAQC,UAAUC,KAAK,WACnB/d,EAAKge,oBAAoBhe,EAAKie,UAAYje,EAAKie,UAAU9e,MAAQa,EAAKke,WAQtE0V,EAAZ90B,UAAAkf,oBAAI,SAA4B7e,GAA5B,GAAJa,GAAAhB,IACQ,IAAIA,KAAKmf,UAAYhf,EAAO,CACxB,IAAKif,MAAMC,QAAQlf,GACf,KAAMmf,IAGVtf,MAAKuf,eAAe7Z,QACpBvF,EAAMmF,QAAQ,SAAC+N,GAAsB,MAAArS,GAAKwe,YAAYnM,KACtDrT,KAAKyf,iBACF,CACHzf,KAAKuf,eAAe7Z,OACpB,IAAMga,GAAsB1f,KAAKwf,YAAYrf,EAIzCuf,IACA1f,KAAKwe,WAAWmB,cAAcD,GAItC1f,KAAKkZ,mBAAmB/U,gBAOpBywB,EAAZ90B,UAAA0f,YAAI,SAAoBrf,GAApB,GAAJa,GAAAhB,KACc0f,EAAsB1f,KAAK4f,QAAQ/O,KAAK,SAACgP,GAC3C,IAEI,MAAuB,OAAhBA,EAAO1f,OAAiBa,EAAK8e,aAAaD,EAAO1f,MAAOA,GACjE,MAAO4f,GAML,MALIC,GAAAA,aAEAC,QAAQC,KAAKH,IAGV,IAQf,OAJIL,IACA1f,KAAKuf,eAAeY,OAAOT,GAGxBA,GAIHkV,EAAZ90B,UAAAsgB,eAAI,WAAA,GAAJpf,GAAAhB,IACQA,MAAKwe,WAAa,GAAImb,GAAAA,2BAAqC35B,KAAK4f,SAC3Dga,gBACAC,0BACA9D,0BAA0B/1B,KAAKwkB,QAAU,MAAQ,OAEtDxkB,KAAKwe,WAAW+B,OACXre,KAAKC,EAAAA,UAAUnC,KAAKwgB,UACpBne,UAAU,WAGPrB,EAAKmZ,QACLnZ,EAAK6N,UAGb7O,KAAKwe,WAAWlc,OACXJ,KAAKC,EAAAA,UAAUnC,KAAKwgB,UACpBne,UAAU,WACHrB,EAAKyf,YAAczf,EAAK0f,MACxB1f,EAAK2f,6BACG3f,EAAKyf,YAAezf,EAAKme,WAAYne,EAAKwd,WAAWC,YAC7Dzd,EAAKwd,WAAWC,WAAWC,0BAMnCkW,EAAZ90B,UAAA8gB,aAAI,WAAA,GAAJ5f,GAAAhB,KACc6gB,EAAqBnS,EAAAA,MAAM1O,KAAK4f,QAAQ3M,QAASjT,KAAKwgB,QAE5DxgB,MAAK8gB,uBACA5e,KAAKC,EAAAA,UAAU0e,IACfxe,UAAU,SAACmD,GACRxE,EAAK+f,SAASvb,EAAM4V,OAAQ5V,EAAMwb,aAE9Bxb,EAAMwb,cAAgBhgB,EAAKme,UAAYne,EAAKyf,aAC5Czf,EAAK6N,QACL7N,EAAKmZ,WAMjBzL,EAAAA,MAARorB,UAAA,GAAiB95B,KAAK4f,QAAQoC,IAAI,SAACnC,GAAW,MAAAA,GAAO0B,gBACxCrf,KAAKC,EAAAA,UAAU0e,IACfxe,UAAU,WACPrB,EAAKkY,mBAAmB/U,eACxBnD,EAAKugB,aAAa3b,SAG1B5F,KAAKihB,gBAID2T,EAAZ90B,UAAAihB,SAAI,SAAiBlB,EAAkBmB,GAC/B,GAAME,GAAclhB,KAAKuf,eAAe4B,WAAWtB,EAE/B,OAAhBA,EAAO1f,OAAkBH,KAAKs0B,WAK1BzU,EAAOuB,SACPphB,KAAKuf,eAAeY,OAAON,GAE3B7f,KAAKuf,eAAe8B,SAASxB,GAG7BmB,GACAhhB,KAAKwe,WAAWmB,cAAcE,GAG9B7f,KAAKmf,WACLnf,KAAKyf,aAEDuB,GAKAhhB,KAAKma,WAtBb0F,EAAOwB,WACPrhB,KAAKuf,eAAe7Z,QACpB1F,KAAKshB,iBAAiBzB,EAAO1f,QAyB7B+gB,IAAgBlhB,KAAKuf,eAAe4B,WAAWtB,IAC/C7f,KAAKshB,mBAGTthB,KAAKuhB,aAAa3b,QAIdgvB,EAAZ90B,UAAA2f,WAAI,WAAA,GAAJze,GAAAhB,IACQ,IAAIA,KAAKmf,SAAU,CACf,GAAMqC,GAAUxhB,KAAK4f,QAAQ6B,SAE7BzhB,MAAKuf,eAAemC,KAAK,SAACC,EAAGC,GACzB,MAAO5gB,GAAK6gB,eAAiB7gB,EAAK6gB,eAAeF,EAAGC,EAAGJ,GACnDA,EAAQjP,QAAQoP,GAAKH,EAAQjP,QAAQqP,KAE7C5hB,KAAKuhB,aAAa3b,SAKlBgvB,EAAZ90B,UAAAwhB,iBAAI,SAAyBQ,GACrB,GAAIC,GAAmB,IAGnBA,GADA/hB,KAAKmf,SACUnf,KAAKohB,SAAwBY,IAAI,SAACnC,GAAW,MAAAA,GAAO1f,QAErDH,KAAKohB,SAAYphB,KAAKohB,SAAsBjhB,MAAQ2hB,EAGtE9hB,KAAKkf,OAAS6C,EACd/hB,KAAKiiB,YAAYjb,KAAK+a,GACtB/hB,KAAKw0B,UAAUzS,GACf/hB,KAAKmiB,gBAAgBnb,KAAK,GAAI+yB,IAAe/5B,KAAM+hB,IACnD/hB,KAAKkZ,mBAAmB/U,gBAIpBywB,EAAZ90B,UAAAmhB,aAAI,WACIjhB,KAAKqiB,UAAYriB,KAAK4f,QAAQoC,IAAI,SAACnC,GAAW,MAAAA,GAAO1R,KAAImU,KAAK,MAO1DsS,EAAZ90B,UAAAyiB,uBAAI,WACQviB,KAAKwe,aACDxe,KAAKwiB,MACLxiB,KAAKwe,WAAWiE,qBAEhBziB,KAAKwe,WAAWmB,cAAc3f,KAAKuf,eAAe6B,SAAS,MAM/DwT,EAAZ90B,UAAA6gB,2BAAI,WACI,GAAM+B,GAAoB1iB,KAAKwe,WAAWmE,iBAAmB,EACvDqX,EAAaC,EAA6BvX,EAAmB1iB,KAAK4f,QAAS5f,KAAKk6B,aAEtFl6B,MAAK0gB,MAAMhc,cAAcke,UAAYC,EACjCH,EAAoBsX,EACpBh6B,KAAK8iB,gBACL9iB,KAAK0gB,MAAMhc,cAAcke,UD7iCE,MCmjC3BgS,EAAZ90B,UAAAijB,eAAI,SAAuBlD,GAEnB,MAAO7f,MAAK4f,QAAQoD,OAAO,SAACxU,EAAgByU,EAAmB3Q,GAE3D,WAAkB9B,KAAXhC,EAAwBqR,IAAWoD,EAAU3Q,MAAQ9B,GAAahC,OAC1EgC,KAICokB,EAAZ90B,UAAAojB,yBAAI,WACI,GAAMC,GAAanjB,KAAK8iB,gBAClBM,EAAQpjB,KAAKqjB,eACbC,EAAcC,KAAKC,IAAIJ,EAAQD,ED/jCN,KCgkCzBM,EAAwBL,EAAQD,EAGhCO,EAAYD,EAAwBH,EAGtCK,EACA3jB,KAAKwiB,MAAQ,EAAIxiB,KAAK+iB,eAAe/iB,KAAKuf,eAAe6B,SAAS,GAEtEuC,IAAwBsW,EAA6BtW,EAAsB3jB,KAAK4f,QAAS5f,KAAKk6B,aAK9F,IAAMtW,GAAeN,EAAc,CACnCtjB,MAAK4iB,UAAY5iB,KAAK6jB,uBAAuBF,EAAsBC,EAAcF,GACjF1jB,KAAK8jB,QAAU9jB,KAAK+jB,0BAEpB/jB,KAAKgkB,2BAA2BN,IAU5BkR,EAAZ90B,UAAAmkB,wBAAI,WACI,GAKIQ,GALEP,EAAclkB,KAAKmkB,WAAWljB,WAAWqD,eAAe8f,wBACxDC,EAAerkB,KAAKm6B,eAAe5V,kBACnCC,EAAQxkB,KAAKwkB,QAKbpD,EAAWphB,KAAKuf,eAAe6B,SAAS,IAAMphB,KAAK4f,QAAQwa,KACjE3V,GAAUrD,GAAYA,EAASiZ,MD9lCMlwB,EAJP,ECqmCzBqa,IAASC,IAAY,EAG1B,IAAMC,GAAe,GAAKR,EAAYnI,KAAO0I,GAAWD,EAVnCra,EAU0D,IACzEwa,EAAgBT,EAAYU,MAAQH,EAAUJ,EAAaQ,OAC1DL,EAAQ,EAZMra,EAejBua,GAAe,EACfD,GAAWC,EDpmCsB,ECqmC1BC,EAAgB,IACvBF,GAAWE,EDtmCsB,GC4mCrC3kB,KAAKmkB,WAAWM,QAAUlB,KAAKuB,MAAML,GACrCzkB,KAAKmkB,WAAWljB,WAAWkC,kBAQvByxB,EAAZ90B,UAAAikB,wBAAI,WAKI,MAAO,IAUH6Q,EAAZ90B,UAAAkkB,2BAAI,SAAmCN,GAC/B,GAAMP,GAAanjB,KAAK8iB,gBAClBuB,EAAerkB,KAAKm6B,eAAe5V,kBAEnCQ,EAAoB/kB,KAAKglB,YAAYngB,IDxoCN,ECyoC/BogB,EACFZ,EAAaa,OAASllB,KAAKglB,YAAYG,OD1oCN,EC4oC/BC,EAAiB7B,KAAK8B,IAAIrlB,KAAK8jB,SAC/BwB,EACF/B,KAAKC,IAAIxjB,KAAKqjB,eAAiBF,ED3pCJ,KC4pCzBoC,EAAoBD,EAAmBF,EAAiBplB,KAAKglB,YAAYE,MAE3EK,GAAoBN,EACpBjlB,KAAKwlB,cAAcD,EAAmBN,GAC/BG,EAAiBL,EACxB/kB,KAAKylB,gBAAgBL,EAAgBL,EAAmBrB,GAExD1jB,KAAK0lB,gBAAkB1lB,KAAK2lB,0BAK5BiP,EAAZ90B,UAAA0lB,cAAI,SAAsBD,EAA2BN,GAE7C,GAAMW,GAAwBrC,KAAKuB,MAAMS,EAAoBN,EAI7DjlB,MAAK4iB,WAAagD,EAClB5lB,KAAK8jB,SAAW8B,EAChB5lB,KAAK0lB,gBAAkB1lB,KAAK2lB,yBAKxB3lB,KAAK4iB,WAAa,IAClB5iB,KAAK4iB,UAAY,EACjB5iB,KAAK8jB,QAAU,EACf9jB,KAAK0lB,gBAAkB,mBAKvBkP,EAAZ90B,UAAA2lB,gBAAI,SAAwBL,EAAwBL,EAA2BrB,GAEvE,GAAMmC,GAAwBtC,KAAKuB,MAAMM,EAAiBL,EAW1D,IAPA/kB,KAAK4iB,WAAaiD,EAClB7lB,KAAK8jB,SAAW+B,EAChB7lB,KAAK0lB,gBAAkB1lB,KAAK2lB,yBAKxB3lB,KAAK4iB,WAAac,EAKlB,MAJA1jB,MAAK4iB,UAAYc,EACjB1jB,KAAK8jB,QAAU,OACf9jB,KAAK0lB,gBAAkB,gBAOvBkP,EAAZ90B,UAAA6lB,uBAAI,WACI,GAAMxC,GAAanjB,KAAK8iB,gBAElBgD,GAA0B3C,EAAanjB,KAAKglB,YAAYE,QAAU,CAIxE,OAAO,QAFS3B,KAAK8B,IAAIrlB,KAAK8jB,SAAWgC,EAAyB3C,EAAa,GAEvF,UAIYyR,EAAZ90B,UAAAujB,aAAI,WACI,MAAOrjB,MAAK4f,QAAQzO,OAASnR,KAAKk6B,aAAa/oB,QAI3CyjB,EAAZ90B,UAAAgjB,cAAI,WAGI,MAAO,UAMf,OAxhC0B5a,IAArB8D,EAAAA,UAAU,WAAfhD,EAAA,cAAmCE,EAAAA,aAAnC0rB,EAAA90B,UAAA,cAAA,IAEwBoI,GAAnB8D,EAAAA,UAAU,SAAfhD,EAAA,cAA+BE,EAAAA,aAA/B0rB,EAAA90B,UAAA,YAAA,IAEoCoI,GAA/B8D,EAAAA,UAAU+Z,EAAAA,qBAAf/c,EAAA,cAAgD+c,EAAAA,sBAAhD6O,EAAA90B,UAAA,iBAAA,IAEyBoI,GAApB8d,EAAAA,aAAaC,IAAlBjd,EAAA,cAA+Bkd,EAAAA,YAA/B0O,EAAA90B,UAAA,WAAA,IAGmCoI,GAA9Bie,EAAAA,aAAamU,IAAlBtxB,EAAA,cAAkDsxB,KAAlD1F,EAAA90B,UAAA,oBAAA,IAGsDoI,GAAjDqyB,EAAAA,gBAAgBC,IAAYC,aAAa,IAA9CzxB,EAAA,cAA+Dkd,EAAAA,YAA/D0O,EAAA90B,UAAA,cAAA,IAGiCoI,GAA5BqyB,EAAAA,gBAAgBG,IAArB1xB,EAAA,cAA+Ckd,EAAAA,YAA/C0O,EAAA90B,UAAA,mBAAA,IAGaoI,GAARE,EAAAA,iCAALwsB,EAAA90B,UAAA,iBAAA,IAGaoI,GAARE,EAAAA,QAALY,EAAA,cAAgCud,KAAhCqO,EAAA90B,UAAA,wBAAA,IAMaoI,GAARE,EAAAA,mCAALwsB,EAAA90B,UAAA,qBAAA,IAccoI,GAATC,EAAAA,SAALa,EAAA,cAAqC2Q,EAAAA,eAArCib,EAAA90B,UAAA,mBAAA,IAGsBoI,GAAjBC,EAAAA,OAAO,UAAZa,EAAA,cAA6Csd,EAAAA,aAC7CsO,EAAA90B,UAAA,mBAAA,IAGsBoI,GAAjBC,EAAAA,OAAO,UAAZa,EAAA,cAA6Csd,EAAAA,aAC7CsO,EAAA90B,UAAA,mBAAA,IAGcoI,GAATC,EAAAA,SAALa,EAAA,cAAwC2Q,EAAAA,eAAxCib,EAAA90B,UAAA,sBAAA,IAOcoI,GAATC,EAAAA,SAALa,EAAA,cAAoC2Q,EAAAA,eAApCib,EAAA90B,UAAA,kBAAA,IAGIoI,GADCE,EAAAA,iEAGLwsB,EAAA90B,UAAA,cAAA,MAWIoI,GADCE,EAAAA,mEAGLwsB,EAAA90B,UAAA,WAAA,MAWIoI,GADCE,EAAAA,mEAGLwsB,EAAA90B,UAAA,WAAA,MAkBIoI,GADCE,EAAAA,qEAGLwsB,EAAA90B,UAAA,cAAA,MAkBIoI,GADCE,EAAAA,iEAGLwsB,EAAA90B,UAAA,QAAA,MAYIoI,GADCE,EAAAA,iEAGLwsB,EAAA90B,UAAA,KAAA,MAjNa80B,EAAbC,EAAA3sB,GA7BCgE,EAAAA,WACG3D,SAAU,YACVC,SAAU,WACV2D,SAAJ,0lEACIC,QAAS,mmEACTsP,QAAS,WAAY,YACrBlP,cAAeC,EAAAA,kBAAkBC,KACjCL,gBAAiBC,EAAAA,wBAAwBC,OACzC9D,MACIyE,YAAa,KACbuZ,kBAAmB,WACnB3Z,MAAO,YACP8O,sBAAuB,WACvB8K,4BAA6B,aAC7BC,6BAA8B,WAC9Bje,YAAa,wBACbke,UAAW,YACXC,SAAU,WACVC,kBAAmB,0BAEvBna,YACIoa,GAAmBC,eACnBD,GAAmBE,eAEvBnd,YACMuR,QAAS6L,GAAoB3L,YAAasZ,IAC1CxZ,QAASsf,GAA4Bpf,YAAasZ,MAkQnDjsB,EAAT,EAASG,EAAAA,YACAH,EAAT,EAASG,EAAAA,YACAH,EAAT,EAASG,EAAAA,YACAH,EAAT,EAASG,EAAAA,YACAH,EAAT,GAASwe,EAAAA,QAAQxe,EAAjB,GAAiBG,EAAAA,YACRH,EAAT,GAASsT,EAAAA,UAAU,aACVtT,EAAT,GAASC,EAAAA,OAAOwe,KAZhBre,EAAA,qBAAyCse,EAAAA,cACI9Z,EAAAA,kBACXrE,EAAAA,OACE6N,EAAAA,UACFuP,GACdrd,EAAAA,WACuBI,EAAAA,eACXie,EAAAA,OACKC,EAAAA,mBACkBC,GACTC,EAAAA,UAA9CtL,OAAAzc,UAnQai1B,IAAiBgG,ImBjI9BC,GAAA,WAAA,QAAAA,MAA6B,MAAhBA,GAAb3yB,GAZCsB,EAAAA,UACGG,SACIC,EAAAA,aACAC,EAAAA,cACAixB,GACA/mB,GACAgU,IAEJre,SAAUqxB,GAAmBnG,GAAU0F,GAAiBQ,GAAgBlxB,EAAAA,cACxEH,cAAemrB,GAAU0F,IACzBxwB,WAAYme,OAEH4S,MRiETxiB,GAAe,EAGnB+J,GAAA,WACI,QAAJA,GAAuBhH,EAA6Bjb,EAAmB6gB,OAAvE,KAAAA,IAAuEA,GAAvE,GAAuBhhB,KAAvBob,OAAuBA,EAA6Bpb,KAApDG,MAAoDA,EAAmBH,KAAvEghB,YAAuEA,EACvE,MAAAoB,MAIAgE,GAAA,WAAA,QAAAA,MAAkC,MAArBA,GAAble,GADCI,EAAAA,WAAYC,SAAU,4BACV6d,MAGb4U,GAAA,WACI,QAAJA,GACe15B,EACA8mB,EACAC,EACAC,EACArJ,GAJAjf,KAAfsB,WAAeA,EACAtB,KAAfooB,yBAAeA,EACApoB,KAAfqoB,WAAeA,EACAroB,KAAfsoB,gBAAeA,EACAtoB,KAAfif,UAAeA,EAEf,MAAA+b,MAGMrT,GACwBlP,EAAcE,EAAc6P,EAAgBwS,MAkC1Erc,GAAA,SAAA3F,GAoQI,QAAJ2F,GACyB2F,EACRvZ,EACQpI,EACAsR,EACjBmU,EACO9mB,EACsB25B,EACjB5S,EACAC,EACiB4S,EACFjc,EACJ9F,EAC6BgiB,GAbxD,GAAJn6B,GAeQgY,EAfRI,KAAApZ,KAecsB,EAAY8mB,EAA0BC,EAAYC,EAAiBrJ,IAfjFjf,WACyBgB,GAAzBsjB,cAAyBA,EACRtjB,EAAjB+J,kBAAiBA,EACQ/J,EAAzB2B,OAAyBA,EACA3B,EAAzBiT,SAAyBA,EAEVjT,EAAfM,WAAeA,EACsBN,EAArCi6B,IAAqCA,EAGAj6B,EAArCk6B,gBAAqCA,EACFl6B,EAAnCie,UAAmCA,EAEyBje,EAA5Dm6B,sBAA4DA,EA5QxDn6B,EAAJ6nB,YAAkB,YAEd7nB,EAAJ42B,YAA0B,EACtB52B,EAAJo6B,YAA0B,SAMtBp6B,EAAJ80B,gBAAsB,EAMlB90B,EAAJqhB,UAAwB,GAGpBrhB,EAAJ0kB,gBAA8B,MAG1B1kB,EAAJo0B,oBAAkC,EAG9Bp0B,EAAJk0B,yBAA+B,GAAIjnB,GAAAA,QAG/BjN,EAAJkC,eAAqBlC,EAAKm6B,wBAOtBn6B,EAAJ8iB,QAAc,EAQV9iB,EAAJyb,YAEY1Y,QAAS,QACTC,QAAS,SACTC,SAAU,QACVC,SAAU,QAGVH,QAAS,QACTC,QAAS,MACTC,SAAU,QACVC,SAAU,WAkBClD,EAAvBqzB,aAA6D,GAAI1a,GAAAA,aAGlC3Y,EAA/Bq6B,aACQr6B,EAAKqzB,aAAanyB,KAAKkM,EAAAA,OAAO,SAAC+lB,GAAM,MAAAA,KAAInS,EAAAA,IAAI,eAGtBhhB,EAA/BozB,aACQpzB,EAAKqzB,aAAanyB,KAAKkM,EAAAA,OAAO,SAAC+lB,GAAM,OAACA,IAAInS,EAAAA,IAAI,eAG/BhhB,EAAvBmhB,gBAAyC,GAAIxI,GAAAA,aAOtB3Y,EAAvBihB,YAAwD,GAAItI,GAAAA,aAiB/C3Y,EAAb8f,uBAAsEwa,EAAAA,MAAM,WACpE,MAAIt6B,GAAK4e,QACElR,EAAAA,MAAnBorB,UAAA,GAA4B94B,EAAK4e,QAAQoC,IAAI,SAACnC,GAAW,MAAAA,GAAO0b,qBAGjDv6B,EAAK2B,OAAOszB,SACdhnB,eACA/M,KAAKqM,EAAAA,KAAK,GAAIitB,EAAAA,UAAU,WAAM,MAAAx6B,GAAK8f,4BA+BpC9f,EAAZ+nB,WAAiC,EAerB/nB,EAAZszB,WAAiC,EAarBtzB,EAAZy6B,aAAmC,EAkEvBz6B,EAAZuzB,UAAuB,EAMXvzB,EAAZyf,YAAyB,EAGbzf,EAAZ4hB,UAAwB,EAGH5hB,EAArB8nB,IAA2B,aAAazQ,KAGnBrX,EAArBwf,QAA+B,GAAIvS,GAAAA,QA8G/BjN,EAAJkhB,SAAqC,aAGjClhB,EAAJmtB,UAAgB,aA8vBJntB,EAAZ8e,aAA2B,SAAC4U,EAASC,GAAY,MAAAD,KAAOC,GA51B5C3zB,EAAKie,YAGLje,EAAKie,UAAUkK,cAAgBnoB,GAGnCA,EAAKmY,SAAWrU,SAASqU,IAAa,EAGtCnY,EAAKmN,GAAKnN,EAAKmN,KA9RW6L,EAAlC2E,EAAA3F,GAAAwN,EAAa7H,EA8HThf,OAAJC,eAAQ+e,EAAR7e,UAAA,eAAAC,IAAI,WACI,MAAOC,MAAK80B,cAGpB50B,IAAI,SAAgBC,GACZH,KAAK80B,aAAe30B,EAEpBH,KAAKuhB,aAAa3b,wCAMtBjG,OAAJC,eAAQ+e,EAAR7e,UAAA,YAAAC,IAAI,WACI,MAAOC,MAAK+oB,WAGpB7oB,IAAI,SAAaC,GACTH,KAAK+oB,UAAYpoB,EAAAA,sBAAsBR,GAEvCH,KAAKuhB,aAAa3b,wCAMtBjG,OAAJC,eAAQ+e,EAAR7e,UAAA,YAAAC,IAAI,WACI,MAAOC,MAAKs0B,WAGpBp0B,IAAI,SAAaC,GACT,GAAIH,KAAKuf,eACL,KAAMwV,IAGV/0B,MAAKs0B,UAAY3zB,EAAAA,sBAAsBR,oCAM3CR,OAAJC,eAAQ+e,EAAR7e,UAAA,cAAAC,IAAI,WACI,OAAIC,KAAKmf,UAEFnf,KAAKy7B,aAGpBv7B,IAAI,SAAeC,GACXH,KAAKy7B,YAAc96B,EAAAA,sBAAsBR,oCAW7CR,OAAJC,eAAQ+e,EAAR7e,UAAA,eAAAC,IAAI,WACI,MAAOC,MAAK8f,cAGpB5f,IAAI,SAAgB8a,GAEZ,GAAkB,kBAAPA,GACP,KAAMga,IAGVh1B,MAAK8f,aAAe9E,EAEhBhb,KAAKuf,gBAELvf,KAAK4e,uDAMbjf,OAAJC,eAAQ+e,EAAR7e,UAAA,SAAAC,IAAI,WACI,MAAOC,MAAKkf,QAGpBhf,IAAI,SAAUyqB,GACFA,IAAa3qB,KAAKkf,SAClBlf,KAAK8a,WAAW6P,GAChB3qB,KAAKkf,OAASyL,oCAOtBhrB,OAAJC,eAAQ+e,EAAR7e,UAAA,MAAAC,IAAI,WACI,MAAOC,MAAK2pB,KAGpBzpB,IAAI,SAAOC,GACHH,KAAK2pB,IAAMxpB,GAASH,KAAK8oB,IACzB9oB,KAAKuhB,aAAa3b,wCAMtBjG,OAAJC,eAAQ+e,EAAR7e,UAAA,WAAAC,IAAI,WACI,MAAOC,MAAKu0B,UAAYv0B,KAAKygB,YAOrCvgB,IAAI,SAAYC,GACRH,KAAKu0B,SAAWp0B,mCAKpBR,OAAJC,eAAQ+e,EAAR7e,UAAA,aAAAC,IAAI,WACI,MAAOC,MAAKygB,4CA2ChB9B,EAAJ7e,UAAAmF,SAAI,WAAA,GAAJjE,GAAAhB,IACYA,MAAKue,OACLve,KAAKue,KAAKY,SAAWnf,KAAKmf,UAG9Bnf,KAAKuhB,aAAa3b,OAKlB5F,KAAKk1B,yBACAhzB,KAAK4E,EAAAA,uBAAwB3E,EAAAA,UAAUnC,KAAKwgB,UAC5Cne,UAAU,WACHrB,EAAKm0B,WACLn0B,EAAK4hB,UAAY,EACjB5hB,EAAKqzB,aAAartB,MAAK,KAEvBhG,EAAKqzB,aAAartB,MAAK,GACvBhG,EAAKo0B,oBAAqB,EAC1Bp0B,EAAKmjB,WAAWM,QAAU,EAC1BzjB,EAAK+J,kBAAkB5G,mBAKvCwa,EAAJ7e,UAAAu1B,mBAAI,WACSr1B,KAAKue,OAEVve,KAAKogB,iBAELpgB,KAAKuf,eAAiBvf,KAAKue,KAAKgB,eAAiB,GAAI0V,GAAAA,eAA6Bj1B,KAAKmf,UACvFnf,KAAK4f,QAAU5f,KAAKue,KAAKqB,QACzB5f,KAAKue,KAAKmd,WAAa17B,KAAK07B,WAE5B17B,KAAKuf,eAAe+V,QACfpzB,KAAKC,EAAAA,UAAUnC,KAAKwgB,UACpBne,UAAU,SAACmD,GACRA,EAAM+vB,MAAMjwB,QAAQ,SAACua,GAAW,MAAAA,GAAOM,WACvC3a,EAAMgwB,QAAQlwB,QAAQ,SAACua,GAAW,MAAAA,GAAOwB,iBAIrD1C,EAAJ7e,UAAA41B,gBAAI,WAAA,GAAJ10B,GAAAhB,IACaA,MAAKue,OAEVve,KAAK21B,KAAK1iB,QACL5Q,UAAU,WACPyQ,WAAW,WAAM,MAAA9R,GAAK40B,wBAAwB,KAGtD51B,KAAK4f,QAAQ3M,QACR/Q,KAAKuzB,EAAAA,UAAU,MAAOtzB,EAAAA,UAAUnC,KAAKwgB,UACrCne,UAAU,WACPrB,EAAK26B,wBAEL36B,EAAK4f,mBAIjBjC,EAAJ7e,UAAAgqB,UAAI,WACQ9pB,KAAKif,WAAajf,KAAK+pB,oBAG/BpL,EAAJ7e,UAAAkT,YAAI,SAAYC,GAGJA,EAAQ5M,UACRrG,KAAKuhB,aAAa3b,QAI1B+Y,EAAJ7e,UAAAqF,YAAI,WACInF,KAAKwgB,QAAQ5a,OAEb5F,KAAKwgB,QAAQ3a,WACb7F,KAAKuhB,aAAa1b,YAStB8Y,EAAJ7e,UAAA+1B,OAAI,WACQ71B,KAAKm1B,UACLn1B,KAAK6O,QAEL7O,KAAK4P,QAIb+O,EAAJ7e,UAAA8P,KAAI,WAAA,GAAJ5O,GAAAhB,MACYA,KAAKqG,UAAarG,KAAK4f,SAAY5f,KAAK4f,QAAQzO,SAAUnR,KAAKygB,aAEnEzgB,KAAKglB,YAAchlB,KAAK8b,QAAQpX,cAAc0f,wBAG9CpkB,KAAK81B,gBAAkBhxB,SAASmT,iBAAiBjY,KAAK8b,QAAQpX,eAAe,cAE7E1E,KAAKygB,YAAa,EAElBzgB,KAAKkjB,2BACLljB,KAAKuiB,yBACLviB,KAAK+K,kBAAkB5G,eAGvBnE,KAAK2C,OAAOszB,SAAShnB,eAChB/M,KAAKqM,EAAAA,KAAK,IACVlM,UAAU,WACHrB,EAAK80B,iBAAmB90B,EAAKmjB,WAAWljB,YACxCD,EAAKmjB,WAAWljB,WAAWqD,iBAC3BtD,EAAKmjB,WAAWljB,WAAWqD,eAAeM,MAAMsxB,SAAcl1B,EAAK80B,gBAAvF,UAMInX,EAAJ7e,UAAA+O,MAAI,WACQ7O,KAAKygB,aACLzgB,KAAKygB,YAAa,EAKlBzgB,KAAK+K,kBAAkB5G,eACvBnE,KAAKmuB,cAWbxP,EAAJ7e,UAAAgb,WAAI,SAAW3a,GACHH,KAAK4f,SACL5f,KAAKgf,oBAAoB7e,IAWjCwe,EAAJ7e,UAAAib,iBAAI,SAAiBC,GACbhb,KAAKkiB,SAAWlH,GAUpB2D,EAAJ7e,UAAAmb,kBAAI,SAAkBD,GACdhb,KAAKmuB,UAAYnT,GASrB2D,EAAJ7e,UAAAob,iBAAI,SAAiBC,GACbnb,KAAKqG,SAAW8U,EAChBnb,KAAK+K,kBAAkB5G,eACvBnE,KAAKuhB,aAAa3b,QAGtBjG,OAAJC,eAAQ+e,EAAR7e,UAAA,YAAAC,IAAI,WACI,MAAOC,MAAKmf,SAAWnf,KAAKuf,eAAe6B,SAAWphB,KAAKuf,eAAe6B,SAAS,oCAGvFzhB,OAAJC,eAAQ+e,EAAR7e,UAAA,gBAAAC,IAAI,WACI,MAAIC,MAAKwiB,MAAgB,GAEjBxiB,KAAKohB,SAA0BgV,2CAG3Cz2B,OAAJC,eAAQ+e,EAAR7e,UAAA,iBAAAC,IAAI,WACI,GAAIC,KAAKwiB,MAAS,QAElB,IAAM2T,GAAkBn2B,KAAKuf,eAAe6B,QAI5C,OAFIphB,MAAKwkB,SAAW2R,EAAgBhkB,UAE7BgkB,mCAGXx2B,OAAJC,eAAQ+e,EAAR7e,UAAA,SAAAC,IAAI,WACI,OAAQC,KAAKuf,gBAAkBvf,KAAKuf,eAAe8W,2CAGvD1X,EAAJ7e,UAAA0kB,MAAI,WACI,QAAOxkB,KAAKi7B,KAAyB,QAAnBj7B,KAAKi7B,IAAI96B,OAG/Bwe,EAAJ7e,UAAAgG,cAAI,SAAcN,GACLxF,KAAKqG,WACFrG,KAAKm1B,UACLn1B,KAAKu2B,kBAAkB/wB,GAEvBxF,KAAKw2B,oBAAoBhxB,KASrCmZ,EAAJ7e,UAAA22B,aAAI,WACIz2B,KAAKo1B,mBAAqBp1B,KAAKm1B,UAC/Bn1B,KAAK+K,kBAAkB5G,gBAG3Bwa,EAAJ7e,UAAA42B,QAAI,WACS12B,KAAKqG,WACNrG,KAAKu0B,UAAW,EAEhBv0B,KAAKuhB,aAAa3b,SAQ1B+Y,EAAJ7e,UAAAsuB,OAAI,WACIpuB,KAAKu0B,UAAW,EAEXv0B,KAAKqG,UAAarG,KAAKm1B,YACxBn1B,KAAKmuB,YACLnuB,KAAK+K,kBAAkB5G,eACvBnE,KAAKuhB,aAAa3b,SAK1B+Y,EAAJ7e,UAAA62B,WAAI,WAAA,GAAJ31B,GAAAhB,IACQA,MAAKmkB,WAAWyS,eACX10B,KAAKqM,EAAAA,KAAK,IACVlM,UAAU,WACPrB,EAAK+J,kBAAkBC,gBACvBhK,EAAKijB,0BACLjjB,EAAK0f,MAAMhc,cAAcke,UAAY5hB,EAAK4hB,aAKtDjE,EAAJ7e,UAAA+2B,cAAI,WACI,MAAO72B,MAAKk7B,gBAAkB,MAAMl7B,KAAKk7B,gBAAgBnE,MAAU,IAIvEpY,EAAJ7e,UAAAqa,MAAI,WACIna,KAAKsB,WAAWoD,cAAcyV,SAUlCwE,EAAJ7e,UAAA+jB,uBAAI,SAAuBmT,EAAuBpT,EAAsBF,GAChE,GAAMP,GAAanjB,KAAK8iB,gBAClBmU,EAA4B9T,EAAa6T,EAGzCE,EAAmB/T,EAAa,EAMhCgU,EAAwBF,EAA4BrT,EAAesT,CAEzE,OAAO3T,MAAKC,IAAID,KAAK8G,IAAI,EAAG8M,GAAwBzT,IAOxD/E,EAAJ7e,UAAA4qB,iBAAI,WACI1qB,KAAKma,QACLna,KAAK4P,QAIT+O,EAAJ7e,UAAA87B,uBAAI,SAAuBC,EAA8Bt4B,GACjDA,EAAOkX,kBAEPza,KAAK4f,QAAQta,QAAQ,SAACua,GACdA,EAAO9Y,OAAS80B,EAAe90B,MAAQ8Y,EAAOwB,aAGtDrhB,KAAKuf,eAAe8B,SAASwa,IAGjCld,EAAJ7e,UAAA81B,qBAAI,WACI,IAAI51B,KAAKwiB,OAAUxiB,KAAKmf,SAAxB,CAEA,GAAIkY,GAAuB,EACrBC,EAAkBt3B,KAAKu3B,8BACzBC,EAAiC,CAYrC,IATAx3B,KAAK21B,KAAKrwB,QAAQ,SAACmyB,GACXA,EAAI/yB,cAAcgzB,UAAYD,EAAI/yB,cAAcizB,eAChDH,GAA0BC,EAAI/yB,cAAc0f,wBAAwBS,MAJjD,EAKnBwS,OAIRr3B,KAAK43B,YAAc53B,KAAKuf,eAAe6B,SAASjQ,OAASkmB,EAErDr3B,KAAK43B,YAAa,CAClB,GAAMC,GAAe73B,KAAK8b,QAAQpX,cAAcozB,cAAc,sCACxDC,EAAc/3B,KAAK8b,QAAQpX,cAAcozB,cAAc,+BAEvDE,EAAqBH,EAAaH,UAAYG,EAAaF,aAI3DM,EAA2BF,EAAY3T,wBAAwBS,MAC/DqT,EAAuBD,EAHK,EAOlC,IAFID,GAAuBV,EAAkBY,IAAiBl4B,KAAK43B,YAAc,GAG7EJ,IAA2BS,GAC1BT,EAT6B,GASiBS,EAI/C,WAFAj4B,MAAK+K,kBAAkB5G,gBAGf6zB,GAAuBV,EAdD,GAcwCY,GACtEl4B,KAAK43B,cAIb53B,KAAK+K,kBAAkB5G,iBAGnBwa,EAAZ7e,UAAA67B,sBAAI,WAAA,GAAJ36B,GAAAhB,IACQA,MAAKuf,eAAe6B,SAAS9b,QAAQ,SAACu2B,GAClC76B,EAAK4e,QAAQta,QAAQ,SAACua,GACdA,EAAO9Y,OAAS80B,EAAe90B,OAC/B/F,EAAKue,eAAe8B,SAASwa,GAC7B76B,EAAKue,eAAeY,OAAON,GAE3BA,EAAOM,eAMfxB,EAAZ7e,UAAAy3B,4BAAI,WACI,GAAMY,GAAen4B,KAAK8b,QAAQpX,cAAc0zB,WAAU,EAC1DD,GAAaL,cAAc,sCAAsCO,SAEjEr4B,KAAKiU,SAASiB,SAASijB,EAAc,WAAY,YACjDn4B,KAAKiU,SAASiB,SAASijB,EAAc,aAAc,UACnDn4B,KAAKiU,SAASiB,SAASijB,EAAc,MAAO,SAC5Cn4B,KAAKiU,SAASiB,SAASijB,EAAc,OAAQ,KAE7Cn4B,KAAKiU,SAASskB,YAAYv4B,KAAK8b,QAAQpX,cAAeyzB,EAEtD,IAAIb,GAA0B,CAQ9B,OANAa,GAAaK,iBAAiB,UAAUlzB,QAAQ,SAACsQ,GAC7C0hB,GAAmB1hB,EAAKwO,wBAAwBS,MAFzB,IAK3BsT,EAAaE,SAENf,GAGH3Y,EAAZ7e,UAAA02B,oBAAI,SAA4BhxB,GAExB,GAAMQ,GAAUR,EAAMQ,QAChByyB,EAAazyB,IAAY0yB,EAAAA,YAAc1yB,IAAY2yB,EAAAA,UACrD3yB,IAAY4yB,EAAAA,YAAc5yB,IAAY6yB,EAAAA,WACxB7yB,KAAY8yB,EAAAA,OAAS9yB,IAAY+yB,EAAAA,QAGhC/4B,KAAKmf,UAAY3Z,EAAMwzB,SAAWP,GAEjDjzB,EAAM8Y,iBAENte,KAAK4P,QACG5P,KAAKmf,UACbnf,KAAKue,KAAKC,WAAWya,UAAUzzB,IAI/BmZ,EAAZ7e,UAAAy2B,kBAAI,SAA0B/wB,GAEtB,GAAMQ,GAAUR,EAAMQ,QAChByyB,EAAazyB,IAAY0yB,EAAAA,YAAc1yB,IAAY2yB,EAAAA,QAEzD,IAAIF,GAAcjzB,EAAMwzB,OAEpBxzB,EAAM8Y,iBAENte,KAAK6O,YACF,CAAA,GAAI7I,IAAY4yB,EAAAA,YAAc5yB,IAAY6yB,EAAAA,YAC7C,MAAO74B,MAAKqgB,kBAAkBjH,KAAKpZ,KAAKue,KAAM/Y,EAC3C,IAAIQ,IAAYmzB,EAAAA,MAAQnzB,IAAYozB,EAAAA,IACvC5zB,EAAM8Y,iBAEFtY,IAAYmzB,EAAAA,KACZn5B,KAAKue,KAAKC,WAAWiE,qBAErBziB,KAAKue,KAAKC,WAAW6a,wBAEtB,IAAKrzB,IAAY8yB,EAAAA,OAAS9yB,IAAY+yB,EAAAA,QAAU/4B,KAAKue,KAAKC,WAAWC,WAIrE,GAAIze,KAAKmf,UAAYnZ,IAAYszB,EAAAA,GAAK9zB,EAAM+zB,QAAS,CACxD/zB,EAAM8Y,gBAEN,IAAMkb,GAAuBx5B,KAAK4f,QAAQhc,KAAK,SAACic,GAAW,OAACA,EAAOuB,UAEnEphB,MAAK4f,QAAQta,QAAQ,SAACua,GACd2Z,IAAyB3Z,EAAOxZ,SAChCwZ,EAAOM,SAEPN,EAAOwB,iBAGZ,CACH,GAAMoY,GAAyBz5B,KAAKue,KAAKC,WAAWmE,eAEpD3iB,MAAKue,KAAKC,WAAWya,UAAUzzB,GAE3BxF,KAAKmf,UAAYsZ,GAAcjzB,EAAMk0B,UAAY15B,KAAKue,KAAKC,WAAWC,YACtEze,KAAKue,KAAKC,WAAWmE,kBAAoB8W,GACzCz5B,KAAKue,KAAKC,WAAWC,WAAWC;oKAtBpClZ,GAAM8Y,iBAENte,KAAKue,KAAKC,WAAWC,WAAWC,yBAyBhCC,EAAZ7e,UAAA8e,oBAAI,WAAA,GAAJ5d,GAAAhB,IAGQ6e,SAAQC,UAAUC,KAAK,WACnB/d,EAAKge,oBAAoBhe,EAAKie,UAAYje,EAAKie,UAAU9e,MAAQa,EAAKke,WAQtEP,EAAZ7e,UAAAkf,oBAAI,SAA4B7e,GAA5B,GAAJa,GAAAhB,IACQ,IAAIA,KAAKmf,UAAYhf,EAAO,CACxB,IAAKif,MAAMC,QAAQlf,GAAU,KAAMmf,IAEnCtf,MAAKuf,eAAe7Z,QACpBvF,EAAMmF,QAAQ,SAAC+N,GAAsB,MAAArS,GAAKwe,YAAYnM,KACtDrT,KAAKyf,iBACF,CACHzf,KAAKuf,eAAe7Z,OACpB,IAAMga,GAAsB1f,KAAKwf,YAAYrf,EAIzCuf,IACA1f,KAAKue,KAAKC,WAAWmB,cAAcD,GAI3C1f,KAAK+K,kBAAkB5G,gBAOnBwa,EAAZ7e,UAAA0f,YAAI,SAAoBrf,GAApB,GAAJa,GAAAhB,KACc0f,EAAsB1f,KAAK4f,QAAQ/O,KAAK,SAACgP,GAC3C,IAEI,MAAuB,OAAhBA,EAAO1f,OAAiBa,EAAK8e,aAAaD,EAAO1f,MAAOA,GACjE,MAAO4f,GAML,MALIC,GAAAA,aAEAC,QAAQC,KAAKH,IAGV,IAQf,OAJIL,IACA1f,KAAKuf,eAAeY,OAAOT,GAGxBA,GAGHf,EAAZ7e,UAAAsgB,eAAI,WAAA,GAAJpf,GAAAhB,IACQA,MAAKqgB,kBAAoBrgB,KAAKue,KAAK+B,UAEnCtgB,KAAKue,KAAK+B,UAAY,aAEtBtgB,KAAKue,KAAKC,WAAW+B,OAChBre,KAAKC,EAAAA,UAAUnC,KAAKwgB,UACpBne,UAAU,WAGPrB,EAAKmZ,QACLnZ,EAAK6N,UAGb7O,KAAKue,KAAKC,WAAWlc,OAChBJ,KAAKC,EAAAA,UAAUnC,KAAKwgB,UACpBne,UAAU,WACHrB,EAAKyf,YAAczf,EAAK0f,MACxB1f,EAAK2f,6BACG3f,EAAKyf,YAAezf,EAAKme,WAAYne,EAAKud,KAAKC,WAAWC,YAClEzd,EAAKud,KAAKC,WAAWC,WAAWC,0BAMxCC,EAAZ7e,UAAA8gB,aAAI,WAAA,GAAJ5f,GAAAhB,KACc6gB,EAAqBnS,EAAAA,MAAM1O,KAAK4f,QAAQ3M,QAASjT,KAAKwgB,QAE5DxgB,MAAK8gB,uBACA5e,KAAKC,EAAAA,UAAU0e,IACfxe,UAAU,SAACmD,GACRxE,EAAK+f,SAASvb,EAAM4V,OAAQ5V,EAAMwb,aAE9Bxb,EAAMwb,cAAgBhgB,EAAKme,UAAYne,EAAKyf,aAC5Czf,EAAK6N,QACL7N,EAAKmZ,WAajBna,KAAKihB,gBAIDtC,EAAZ7e,UAAAihB,SAAI,SAAiBlB,EAAsBmB,GACnC,GAAME,GAAclhB,KAAKuf,eAAe4B,WAAWtB,EAE/B,OAAhBA,EAAO1f,OAAkBH,KAAKmf,UAK1BU,EAAOuB,SACPphB,KAAKuf,eAAeY,OAAON,GAE3B7f,KAAKuf,eAAe8B,SAASxB,GAG7BmB,GACAhhB,KAAKue,KAAKC,WAAWmB,cAAcE,GAGnC7f,KAAKmf,WACLnf,KAAKyf,aAEDuB,GAKAhhB,KAAKma,WAtBb0F,EAAOwB,WACPrhB,KAAKuf,eAAe7Z,QACpB1F,KAAKshB,iBAAiBzB,EAAO1f,QAyB7B+gB,IAAgBlhB,KAAKuf,eAAe4B,WAAWtB,IAC/C7f,KAAKshB,mBAGTthB,KAAKuhB,aAAa3b,QAId+Y,EAAZ7e,UAAA2f,WAAI,WAAA,GAAJze,GAAAhB,IACQ,IAAIA,KAAKmf,SAAU,CACf,GAAMqC,GAAUxhB,KAAK4f,QAAQ6B,SAE7BzhB,MAAKuf,eAAemC,KAAK,SAACC,EAAGC,GACzB,MAAO5gB,GAAK6gB,eAAiB7gB,EAAK6gB,eAAeF,EAAGC,EAAGJ,GACnDA,EAAQjP,QAAQoP,GAAKH,EAAQjP,QAAQqP,KAE7C5hB,KAAKuhB,aAAa3b,SAKlB+Y,EAAZ7e,UAAAwhB,iBAAI,SAAyBQ,GACrB,GAAIC,GAAmB,IAGnBA,GADA/hB,KAAKmf,SACUnf,KAAKohB,SAAiBY,IAAI,SAACnC,GAAW,MAAAA,GAAO1f,QAE9CH,KAAKohB,SAAYphB,KAAKohB,SAAiBjhB,MAAQ2hB,EAGjE9hB,KAAKkf,OAAS6C,EACd/hB,KAAKiiB,YAAYjb,KAAK+a,GACtB/hB,KAAKkiB,SAASH,GACd/hB,KAAKmiB,gBAAgBnb,KAAK,GAAIob,IAAmBpiB,KAAa+hB,IAC9D/hB,KAAK+K,kBAAkB5G,gBAInBwa,EAAZ7e,UAAAmhB,aAAI,WACIjhB,KAAKqiB,UAAYriB,KAAK4f,QAAQoC,IAAI,SAACnC,GAAW,MAAAA,GAAO1R,KAAImU,KAAK,MAO1D3D,EAAZ7e,UAAAyiB,uBAAI,WACQviB,KAAKue,KAAKC,aACNxe,KAAKwiB,MACLxiB,KAAKue,KAAKC,WAAWiE,qBAErBziB,KAAKue,KAAKC,WAAWmB,cAAc3f,KAAKuf,eAAe6B,SAAS,MAMpEzC,EAAZ7e,UAAA6gB,2BAAI,WACI,GAAM+B,GAAoB1iB,KAAKue,KAAKC,WAAWmE,iBAAmB,CAElE3iB,MAAK0gB,MAAMhc,cAAcke,UAAYC,EACjCH,EACA1iB,KAAK8iB,gBACL9iB,KAAK0gB,MAAMhc,cAAcke,UZrkCE,MY2kC3BjE,EAAZ7e,UAAAijB,eAAI,SAAuBlD,GAEnB,MAAO7f,MAAK4f,QAAQoD,OAAO,SAACxU,EAAgByU,EAAuB3Q,GAE/D,WAAkB9B,KAAXhC,EAAwBqR,IAAWoD,EAAU3Q,MAAQ9B,GAAahC,OAC1EgC,KAICmO,EAAZ7e,UAAAojB,yBAAI,WACI,GAAMC,GAAanjB,KAAK8iB,gBAClBM,EAAQpjB,KAAKqjB,eACbC,EAAcC,KAAKC,IAAIJ,EAAQD,EZvlCN,KYwlCzBM,EAAwBL,EAAQD,EAGhCO,EAAYD,EAAwBH,EAGpCK,EACF3jB,KAAKwiB,MAAQ,EAAIxiB,KAAK+iB,eAAe/iB,KAAKuf,eAAe6B,SAAS,IAKhEwC,EAAeN,EAAc,CACnCtjB,MAAK4iB,UAAY5iB,KAAK6jB,uBAAuBF,EAAsBC,EAAcF,GACjF1jB,KAAK8jB,QAAU9jB,KAAK+jB,0BAEpB/jB,KAAKgkB,2BAA2BN,IAU5B/E,EAAZ7e,UAAAmkB,wBAAI,WACI,GAAMC,GAAclkB,KAAKmkB,WAAWljB,WAAWqD,eAAe8f,wBACxDC,EAAerkB,KAAKskB,cAAcC,kBAClCC,EAAQxkB,KAAKwkB,QAGfC,EZrnC0B,CYwnCzBD,KAASC,IAAY,EAG1B,IAAMC,GAAe,GAAKR,EAAYnI,KAAO0I,GAAWD,EAPnCra,EAO0D,IACzEwa,EAAgBT,EAAYU,MAAQH,EAAUJ,EAAaQ,OAC1DL,EAAQ,EATMra,EAYjBua,GAAe,EACfD,GAAWC,EZvnCsB,EYwnC1BC,EAAgB,IACvBF,GAAWE,EZznCsB,GY+nCrC3kB,KAAKmkB,WAAWM,QAAUlB,KAAKuB,MAAML,GACrCzkB,KAAKmkB,WAAWljB,WAAWkC,kBAQvBwb,EAAZ7e,UAAAikB,wBAAI,WAKI,MAAO,IAUHpF,EAAZ7e,UAAAkkB,2BAAI,SAAmCN,GAC/B,GAAMP,GAAanjB,KAAK8iB,gBAClBuB,EAAerkB,KAAKskB,cAAcC,kBAElCQ,EAAoB/kB,KAAKglB,YAAYngB,IZ3pCN,EY4pC/BogB,EACFZ,EAAaa,OAASllB,KAAKglB,YAAYG,OZ7pCN,EY+pC/BC,EAAiB7B,KAAK8B,IAAIrlB,KAAK8jB,SAC/BwB,EACF/B,KAAKC,IAAIxjB,KAAKqjB,eAAiBF,EZ9qCJ,KY+qCzBoC,EAAoBD,EAAmBF,EAAiBplB,KAAKglB,YAAYE,MAE3EK,GAAoBN,EACpBjlB,KAAKwlB,cAAcD,EAAmBN,GAC/BG,EAAiBL,EACxB/kB,KAAKylB,gBAAgBL,EAAgBL,EAAmBrB,GAExD1jB,KAAK0lB,gBAAkB1lB,KAAK2lB,0BAK5BhH,EAAZ7e,UAAA0lB,cAAI,SAAsBD,EAA2BN,GAE7C,GAAMW,GAAwBrC,KAAKuB,MAAMS,EAAoBN,EAI7DjlB,MAAK4iB,WAAagD,EAClB5lB,KAAK8jB,SAAW8B,EAChB5lB,KAAK0lB,gBAAkB1lB,KAAK2lB,yBAKxB3lB,KAAK4iB,WAAa,IAClB5iB,KAAK4iB,UAAY,EACjB5iB,KAAK8jB,QAAU,EACf9jB,KAAK0lB,gBAAkB,mBAKvB/G,EAAZ7e,UAAA2lB,gBAAI,SAAwBL,EAAwBL,EAA2BrB,GAEvE,GAAMmC,GAAwBtC,KAAKuB,MAAMM,EAAiBL,EAW1D,IAPA/kB,KAAK4iB,WAAaiD,EAClB7lB,KAAK8jB,SAAW+B,EAChB7lB,KAAK0lB,gBAAkB1lB,KAAK2lB,yBAKxB3lB,KAAK4iB,WAAac,EAKlB,MAJA1jB,MAAK4iB,UAAYc,EACjB1jB,KAAK8jB,QAAU,OACf9jB,KAAK0lB,gBAAkB,gBAOvB/G,EAAZ7e,UAAA6lB,uBAAI,WACI,GAAMxC,GAAanjB,KAAK8iB,gBAElBgD,GAA0B3C,EAAanjB,KAAKglB,YAAYE,QAAU,CAIxE,OAAO,QAFS3B,KAAK8B,IAAIrlB,KAAK8jB,SAAWgC,EAAyB3C,EAAa,GAEvF,UAIYxE,EAAZ7e,UAAAujB,aAAI,WACI,MAAOrjB,MAAK4f,QAAQzO,QAIhBwN,EAAZ7e,UAAAgjB,cAAI,WAGI,MAAO,UAMf,OApjC0B5a,IAArB8D,EAAAA,UAAU,WAAfhD,EAAA,cAAmCE,EAAAA,aAAnCyV,EAAA7e,UAAA,cAAA,IAEwBoI,GAAnB8D,EAAAA,UAAU,SAAfhD,EAAA,cAA+BE,EAAAA,aAA/ByV,EAAA7e,UAAA,YAAA,IAEoCoI,GAA/B8D,EAAAA,UAAU+Z,EAAAA,qBAAf/c,EAAA,cAAgD+c,EAAAA,sBAAhDpH,EAAA7e,UAAA,iBAAA,IAEyBoI,GAApB8d,EAAAA,aAAaC,IAAlBjd,EAAA,cAA+Bkd,EAAAA,YAA/BvH,EAAA7e,UAAA,WAAA,IAGuCoI,GAAlCie,EAAAA,aAAaC,IAAlBpd,EAAA,cAAsDod,KAAtDzH,EAAA7e,UAAA,oBAAA,IAEmCoI,GAA9Bie,EAAAA,aAAaE,IAAlBrd,EAAA,cAAyCqd,KAAzC1H,EAAA7e,UAAA,WAAA,IAGcoI,GAATC,EAAAA,SAALa,EAAA,cAAqC2Q,EAAAA,eAArCgF,EAAA7e,UAAA,mBAAA,IAGsBoI,GAAjBC,EAAAA,OAAO,UAAZa,EAAA,cAA6Csd,EAAAA,aAC7C3H,EAAA7e,UAAA,mBAAA,IAGsBoI,GAAjBC,EAAAA,OAAO,UAAZa,EAAA,cAA6Csd,EAAAA,aAC7C3H,EAAA7e,UAAA,mBAAA,IAGcoI,GAATC,EAAAA,kCAALwW,EAAA7e,UAAA,sBAAA,IAOcoI,GAATC,EAAAA,SAALa,EAAA,cAAoC2Q,EAAAA,eAApCgF,EAAA7e,UAAA,kBAAA,IAGaoI,GAARE,EAAAA,iCAALuW,EAAA7e,UAAA,iBAAA,IAGaoI,GAARE,EAAAA,QAALY,EAAA,cAAgCud,KAAhC5H,EAAA7e,UAAA,wBAAA,IAMaoI,GAARE,EAAAA,mCAELuW,EAAA7e,UAAA,qBAAA,IAkBIoI,GADCE,EAAAA,iEAGLuW,EAAA7e,UAAA,cAAA,MAWIoI,GADCE,EAAAA,mEAGLuW,EAAA7e,UAAA,WAAA,MAWIoI,GADCE,EAAAA,mEAGLuW,EAAA7e,UAAA,WAAA,MAaIoI,GADCE,EAAAA,mEAKLuW,EAAA7e,UAAA,aAAA,MAcIoI,GADCE,EAAAA,qEAGLuW,EAAA7e,UAAA,cAAA,MAkBIoI,GADCE,EAAAA,iEAGLuW,EAAA7e,UAAA,QAAA,MAYIoI,GADCE,EAAAA,iEAGLuW,EAAA7e,UAAA,KAAA,MA7Na6e,EAAb6H,EAAAte,GA/BCgE,EAAAA,WACG3D,SAAU,iBACVC,SAAU,eACV2D,SAAJ,+pEACIC,QAAS,qxFACTsP,QAAS,WAAY,YACrBlP,cAAeC,EAAAA,kBAAkBC,KACjCL,gBAAiBC,EAAAA,wBAAwBC,OACzC9D,MACIyE,YAAa,KACbuZ,kBAAmB,WAEnB3Z,MAAO,iBACP8O,sBAAuB,WACvB8K,4BAA6B,aAC7BC,6BAA8B,WAE9Bje,YAAa,wBACbke,UAAW,YACXC,SAAU,WACVC,kBAAmB,0BAEvBna,YACIoa,GAAmBC,eACnBD,GAAmBE,eAEvBnd,YACMuR,QAAS6L,GAAoB3L,YAAaiL,IAC1CnL,QAAS8L,EAAAA,QAAS5L,YAAaiL,MA8QhC5d,EAAT,EAASG,EAAAA,YACAH,EAAT,EAASG,EAAAA,YACAH,EAAT,EAASG,EAAAA,YACAH,EAAT,EAASG,EAAAA,YACAH,EAAT,GAASwe,EAAAA,QAAQxe,EAAjB,GAAiBG,EAAAA,YACRH,EAAT,GAASsT,EAAAA,UAAU,aACVtT,EAAT,GAASC,EAAAA,OAAOwe,KAZhBre,EAAA,qBAAwCse,EAAAA,cACJ9Z,EAAAA,kBACHrE,EAAAA,OACE6N,EAAAA,UACDuP,GACPrd,EAAAA,WACeI,EAAAA,eACVie,EAAAA,OACKC,EAAAA,mBACiBC,GACRC,EAAAA,UAA9CtL,OAAAzc,UA/Qagf,IAAqBgJ,ICzHlCC,GAAA,WAAA,QAAAA,MAAiC,MAApBA,GAAb1f,GAdCsB,EAAAA,UACGG,SACIC,EAAAA,aACAC,EAAAA,cACAge,EAAAA,cACAC,GACA/T,GACAgU,GACAC,IAEJte,SAAUiV,GAAcyH,GAAqBxc,EAAAA,cAC7CH,cAAekV,GAAcyH,IAC7Btc,WAAYme,OAEHL,MCRAM,GACT,GAAI9Y,GAAAA,eAA+B,8BAEnCiJ,GAAe,EAInB8P,GAAA,WACI,QAAJA,GAAuBC,EACAC,EACAC,EACArJ,GAHAjf,KAAvBooB,yBAAuBA,EACApoB,KAAvBqoB,WAAuBA,EACAroB,KAAvBsoB,gBAAuBA,EACAtoB,KAAvBif,UAAuBA,EAEvB,MAAAkJ,MAGaI,GAAuEC,EAAgBL,IAkBpGM,GAAA,SAAAzP,GA6GI,QAAJyP,GAA0BnnB,EACiB2d,EACfoJ,EACAC,EACZF,EACwDM,EAChD/lB,GANpB,GAAJ3B,GAOQgY,EAPRI,KAAApZ,KAOcooB,EAA0BC,EAAYC,EAAiBrJ,IAPrEjf,IAA0BgB,GAA1BM,WAA0BA,EACiBN,EAA3Cie,UAA2CA,EAKnBje,EAAxB2B,OAAwBA,EAhHX3B,EAAb2nB,SAAgC,EAS5B3nB,EAAJ4nB,SAAuB,EAMV5nB,EAAbugB,aAA2C,GAAItT,GAAAA,QAM3CjN,EAAJ6nB,YAA0B,cAwEZ7nB,EAAd8nB,IAAoB,eAAezQ,KAErBrX,EAAdmT,WAA0B,EAEZnT,EAAd+nB,WAA0B,EAKd/nB,EAAZgoB,WAAiC,EACrBhoB,EAAZioB,eAAqC,EACzBjoB,EAAZkoB,UAAgC,EAYxBloB,EAAKmoB,cAAgBT,GAAsB1nB,EAAKM,WAAWoD,cAE3D1D,EAAKooB,oBAAsBpoB,EAAKb,MAGhCa,EAAKmN,GAAKnN,EAAKmN,EAEf,IAAMkb,GAAeC,EAAAA,UAAUhoB,EAAWoD,cAAe,eAMzD1D,GAAKuoB,iBAAmBF,EAAahnB,UAAUrB,EAAKwoB,KAAKC,KAAKzoB,MApItCgZ,EAAhCyO,EAAAzP,GAAA0Q,EAAajB,EA+BT9oB,OAAJC,eAAQ6oB,EAAR3oB,UAAA,YAAAC,IAAI,WACI,MAAIC,MAAKif,WAAyC,OAA5Bjf,KAAKif,UAAU5Y,SAC1BrG,KAAKif,UAAU5Y,SAGnBrG,KAAKmU,WAGpBjU,IAAI,SAAaC,GACTH,KAAKmU,UAAYxT,EAAAA,sBAAsBR,GAEnCH,KAAK4oB,UACL5oB,KAAK4oB,SAAU,EACf5oB,KAAKuhB,aAAa3b,yCAS1BjG,OAAJC,eAAQ6oB,EAAR3oB,UAAA,MAAAC,IAAI,WACI,MAAOC,MAAK2pB,KAGpBzpB,IAAI,SAAOC,GACHH,KAAK2pB,IAAMxpB,GAASH,KAAK8oB,qCAc7BnpB,OAAJC,eAAQ6oB,EAAR3oB,UAAA,YAAAC,IAAI,WACI,MAAOC,MAAK+oB,WAGpB7oB,IAAI,SAAaC,GACTH,KAAK+oB,UAAYpoB,EAAAA,sBAAsBR,oCAQ3CR,OAAJC,eAAQ6oB,EAAR3oB,UAAA,SAAAC,IAAI,WACI,MAAOC,MAAKmpB,cAAchpB,OAGlCD,IAAI,SAAUC,GACFA,IAAUH,KAAKG,QACfH,KAAKmpB,cAAchpB,MAAQA,EAC3BH,KAAKuhB,aAAa3b,yCA2C1B6iB,EAAJ3oB,UAAAmF,SAAI,WAAA,GAAJjE,GAAAhB,IACQ8S,YAAW,WAAM,MAAA9R,GAAKwoB,QAAQ,GAC9BxpB,KAAKgpB,WAAalkB,SAASmT,iBAAiBjY,KAAKsB,WAAWoD,eAAeskB,WAAa,GAExF,IAAMY,GAAa9kB,SAASmT,iBAAiBjY,KAAKsB,WAAWoD,eAAeklB,WAAa,IACnFC,EAAgB/kB,SAASmT,iBAAiBjY,KAAKsB,WAAWoD,eAAemlB,cAAgB,GAG/F7pB,MAAKkpB,UAA8B,EAAlBlpB,KAAKgpB,WAAiBY,EAAaC,EACpD7pB,KAAKipB,eAAiBjpB,KAAKgpB,YAG/BP,EAAJ3oB,UAAAkT,YAAI,WACIhT,KAAKuhB,aAAa3b,QAGtB6iB,EAAJ3oB,UAAAqF,YAAI,WACInF,KAAKuhB,aAAa1b,WAClB7F,KAAKupB,iBAAiB1S,eAG1B4R,EAAJ3oB,UAAAgqB,UAAI,WACQ9pB,KAAKif,WAILjf,KAAK+pB,mBAMT/pB,KAAKgqB,yBAITvB,EAAJ3oB,UAAA0pB,KAAI,WAAA,GAAJxoB,GAAAhB,IACaA,MAAK2oB,SAIV3oB,KAAK2C,OAAOoT,kBAAkB,WAC1B,GAAMkU,GAAWjpB,EAAKM,WAAWoD,cAE3BwlB,EAAcplB,SAASqlB,OAAOlS,iBAAiBgS,GAAU/E,OAAS,IAClEkF,EAAOF,EAAcD,EAAS1lB,YAEpC0lB,GAASrlB,MAAMsgB,OAAS,CAExB,IAAMA,GAAS3B,KAAK8G,IAAIrpB,EAAKkoB,UAAWe,EAASK,aAAeF,EAAOppB,EAAKioB,eAC5EgB,GAASrlB,MAAMsgB,OAAYA,EAAvC,QAKIuD,EAAJ3oB,UAAAqa,MAAI,WACIna,KAAKsB,WAAWoD,cAAcyV,SAIlCsO,EAAJ3oB,UAAAyqB,aAAI,SAAaC,GACLA,IAAcxqB,KAAK4oB,UACnB5oB,KAAK4oB,QAAU4B,EACfxqB,KAAKuhB,aAAa3b,SAQ1BjG,OAAJC,eAAQ6oB,EAAR3oB,UAAA,SAAAC,IAAI,WACI,OAAQC,KAAKsB,WAAWoD,cAAcvE,QAAUH,KAAKyqB,8CAOzDhC,EAAJ3oB,UAAA4qB,iBAAI,WACI1qB,KAAKma,SAICsO,EAAd3oB,UAAAkqB,sBAAI,WACI,GAAMW,GAAW3qB,KAAKG,KAElBH,MAAKopB,sBAAwBuB,IAC7B3qB,KAAKopB,oBAAsBuB,EAC3B3qB,KAAKuhB,aAAa3b,SAKhB6iB,EAAd3oB,UAAA2qB,WAAI,WAEI,GAAMG,GAAY5qB,KAAKsB,WAAWoD,cAAsCkmB,QAExE,OAAOA,IAAYA,EAASC,UAGxBpC,EAAZ3oB,UAAAgrB,cAAI,WACI,GAAMb,GAAWjqB,KAAKsB,WAAWoD,cAC3BwlB,EAAcplB,SAASqlB,OAAOlS,iBAAiBgS,GAAU/E,OAAQ6F,WAAY,IAC7EX,EAAOF,EAAcD,EAAS1lB,YAEpC,OAAOgf,MAAK8G,IAAIrqB,KAAKkpB,UAAWe,EAASK,aAAeF,SAEhE,OAhPaliB,IAARE,EAAAA,kCAALqgB,EAAA3oB,UAAA,cAAA,IAGaoI,GAARE,EAAAA,QAALY,EAAA,cAAgCud,KAAhCkC,EAAA3oB,UAAA,wBAAA,IAyBIoI,GADCE,EAAAA,mEAOLqgB,EAAA3oB,UAAA,WAAA,MAgBIoI,GADCE,EAAAA,iEAGLqgB,EAAA3oB,UAAA,KAAA,MAUaoI,GAARE,EAAAA,iCAALqgB,EAAA3oB,UAAA,kBAAA,IAOIoI,GADCE,EAAAA,mEAGLqgB,EAAA3oB,UAAA,WAAA,MAWIoI,GADCE,EAAAA,iEAGLqgB,EAAA3oB,UAAA,QAAA,MAvFa2oB,EAAbiB,EAAAxhB,GAhBCI,EAAAA,WACGC,SAAU,uBACVC,SAAU,aACVC,MACIqE,MAAO,cACPke,gCAAiC,WACjC9d,YAAa,KACb+d,qBAAsB,cACtBC,sBAAuB,aACvBC,aAAc,WACdC,aAAc,WACdvE,SAAU,sBACVD,UAAW,sBAEf9c,YAAcuR,QAAS6L,GAAoB3L,YAAamO,MAgH3C9gB,EAAjB,EAAiBG,EAAAA,YAAYH,EAA7B,EAA6Bwe,EAAAA,QACZxe,EAAjB,EAAiBG,EAAAA,YACAH,EAAjB,EAAiBG,EAAAA,YAEAH,EAAjB,EAAiBG,EAAAA,YAAYH,EAA7B,EAA6Bwe,EAAAA,QAAQxe,EAArC,EAAqCC,EAAAA,OAAOqf,KAL5Clf,EAAA,qBAAsCE,EAAAA,WACgBwe,EAAAA,UACdH,EAAAA,OACKC,EAAAA,mBACHjB,GAA1C5mB,OAEgCwJ,EAAAA,UAnHnBsf,IAAmBF,ICtChC8C,GAAA,WAAA,QAAAA,MACA,MADaA,GAAbnjB,GALCsB,EAAAA,UACGG,SAAUC,EAAAA,aAAc0S,EAAAA,WAAYxI,GAAgBwX,EAAAA,aACpD5hB,SAAU+e,IACVhf,cAAegf,OAEN4C,Obdb,SAAYE,GACRA,EAAJA,EAAA,MAAA,GAAA,QACIA,EAAJA,EAAA,QAAA,GAAA,UACIA,EAAJA,EAAA,QAAA,GAAA,WAHYA,EAAAA,YAAAA,EAAAA,eAMZ,SAAYC,GACRA,EAAJ,OAAA,WACIA,EAAJ,KAAA,SAFYA,EAAAA,cAAAA,EAAAA,gBAKZ,IAAaC,KAAb9jB,MACIA,GAAC6jB,EAAAA,YAAYE,QAAS,WACtB/jB,GAAC6jB,EAAAA,YAAYG,MAAO,QACxBhkB,IAEaikB,GAAmCJ,EAAAA,YAAYG,KAE/CE,GACT,GAAIC,QAAO,yEACFC,GAAuB,qDACvBC,GAAoB,mCcmC7BC,GAAkC,EAEhCC,GAA2D,GAAIhb,SAC/Dib,GAAsE,GAAIjb,SAC1Ekb,GAAoB,SAACC,GACvB,GAAMC,GAA2BH,GAAkCpsB,IAAIssB,OAEtC7b,KAA7B8b,GAA0CA,WAGlDC,GAAA,WACI,QAAJA,GACenE,EACAC,EACAC,EACArJ,GAHAjf,KAAfooB,yBAAeA,EACApoB,KAAfqoB,WAAeA,EACAroB,KAAfsoB,gBAAeA,EACAtoB,KAAfif,UAAeA,EACf,MAAAsN,MAGaC,GAEiBhE,EAAgB+D,IA2B9CE,IACgBC,SAAhB,SAAyBL,OAGmC7b,KAApCxQ,KAAK2sB,6BACLR,GAAkCjsB,IAAImsB,EAAGrsB,KAAK2sB,4BAC9C3sB,KAAK2sB,+BAA6Bnc,GAEtC,IAAMoc,GAAYV,GAAensB,IAAIssB,EAErC,OAAOO,GAAYA,EAAUP,GAAK,MAEtCQ,0BAAA,SAA0B7R,GACtBhb,KAAK2sB,2BAA6B3R,IAYtD8R,GAAA,SAAA9T,GAiII,QAAJ8T,GAAiCxrB,EACU2d,EACfoJ,EACAC,EACZF,EACqDM,EACpCzU,GAN7B,GAAJjT,GAOQgY,EAPRI,KAAApZ,KAOcooB,EAA0BC,EAAYC,EAAiBrJ,IAPrEjf,WAAiCgB,GAAjCM,WAAiCA,EACUN,EAA3Cie,UAA2CA,EAKVje,EAAjCiT,SAAiCA,EAxH7BjT,EAAJ4nB,SAAuB,EAMV5nB,EAAbugB,aAA2C,GAAItT,GAAAA,QAM3CjN,EAAJ6nB,YAA0B,gBAwFL7nB,EAArB8nB,IAA2B,iBAAiBmD,KAQhCjrB,EAAZ+rB,SAAsC,KAE1B/rB,EAAZgsB,SAAsC,KAe9BhsB,EAAK0nB,mBAAqBA,GAAsB1nB,EAAKM,WAAWoD,cAEhE1D,EAAKooB,oBAAsBpoB,EAAKb,MAChCa,EAAKkhB,SAAW+K,EAAAA,KAGhBjsB,EAAKmN,GAAKnN,EAAKmN,GAEfnN,EAAKksB,YAAczB,GAAwBG,IAGvC5qB,EAAKie,YAAaje,EAAKie,UAAUkK,cAAgBnoB,GAIrDkrB,GAAehsB,IACGc,EAAKie,UAAUkO,QAC7BC,EAAAA,WAAWC,SACP,WAAM,MAAArsB,GAAKssB,kBACX,WAAM,MAAAtsB,GAAKusB,oBACX,WAAM,MAAAvsB,GAAKwsB,yBAhKOxT,EAAlC8S,EAAA9T,GAAAyU,EAAaX,EA8BTntB,OAAJC,eAAQktB,EAARhtB,UAAA,YAAAC,IAAI,WACI,MAAIC,MAAKif,WAAyC,OAA5Bjf,KAAKif,UAAU5Y,SAA4BrG,KAAKif,UAAU5Y,SAEzErG,KAAKmU,WAGpBjU,IAAI,SAAaC,GACTH,KAAKmU,UAAYxT,EAAAA,sBAAsBR,GAInCH,KAAK4oB,UACL5oB,KAAK4oB,SAAU,GAGnB5oB,KAAKuhB,aAAa3b,wCAItBjG,OAAJC,eAAQktB,EAARhtB,UAAA,MAAAC,IAAI,WAAmB,MAAOC,MAAK2pB,KAEnCzpB,IAAI,SAAOC,GAAiBH,KAAK2pB,IAAMxpB,GAASH,KAAK8oB,qCAcjDnpB,OAAJC,eAAQktB,EAARhtB,UAAA,YAAAC,IAAI,WAA0B,MAAOC,MAAK+oB,WAE1C7oB,IAAI,SAAaC,GAAkBH,KAAK+oB,UAAYpoB,EAAAA,sBAAsBR,oCAOtER,OAAJC,eAAQktB,EAARhtB,UAAA,SAAAC,IAAI,WAAsB,MAAOC,MAAK0oB,mBAAmBvoB,OAEzDD,IAAI,SAAUC,GACFA,IAAUH,KAAKG,QACfH,KAAK0oB,mBAAmBvoB,MAAQA,EAChCH,KAAK0tB,sDAKb/tB,OAAJC,eAAQktB,EAARhtB,UAAA,cAAAC,IAAI,WAAgC,MAAOC,MAAK2tB,aAEhDztB,IAAI,SAAe0tB,GACX5tB,KAAK2tB,YAAchuB,OACd+D,KAAK8nB,EAAAA,aACLxJ,IAAI,SAAC6L,GAAkB,MAAArC,GAAAA,YAAYqC,KACnCtb,QAAQqb,IAAgB,EAAIA,EAAchC,GAE/CQ,GAAgCpsB,KAAKif,UAAUkO,SAC/CntB,KAAKktB,YAAczB,GAAwBzrB,KAAK2tB,8CAIpDhuB,OAAJC,eAAQktB,EAARhtB,UAAA,WAAAC,IAAI,WAA+B,MAAOC,MAAK+sB,UAE/C7sB,IAAI,SAAY4tB,GACR9tB,KAAK+sB,SAAWe,EAChB9tB,KAAK+tB,YAA2B,OAAbD,EAAoB9tB,KAAKguB,sBAAsBF,OAAYtd,GAC9E4b,GAAgCpsB,KAAKif,UAAUkO,0CAInDxtB,OAAJC,eAAQktB,EAARhtB,UAAA,WAAAC,IAAI,WAA+B,MAAOC,MAAKgtB,UAE/C9sB,IAAI,SAAY+tB,GACRjuB,KAAKgtB,SAAWiB,EAChBjuB,KAAKkuB,YAA2B,OAAbD,EAAoBjuB,KAAKguB,sBAAsBC,OAAYzd,GAC9E4b,GAAgCpsB,KAAKif,UAAUkO,0CAsDnDL,EAAJhtB,UAAAkT,YAAI,WACIhT,KAAKuhB,aAAa3b,QAGtBknB,EAAJhtB,UAAAqF,YAAI,WACInF,KAAKuhB,aAAa1b,YAGtBinB,EAAJhtB,UAAAgqB,UAAI,WACQ9pB,KAAKif,WAILjf,KAAK+pB,mBAMT/pB,KAAKgqB,yBAGT8C,EAAJhtB,UAAAqa,MAAI,WACIna,KAAKsB,WAAWoD,cAAcyV,SAGlC2S,EAAJhtB,UAAAyqB,aAAI,SAAaC,GACLA,IAAcxqB,KAAK4oB,UACnB5oB,KAAK4oB,QAAU4B,EACfxqB,KAAKmuB,YACLnuB,KAAKuhB,aAAa3b,SAI1BknB,EAAJhtB,UAAAsuB,OAAI,WACIpuB,KAAK0tB,oBACL1tB,KAAKuqB,cAAa,IAGtBuC,EAAJhtB,UAAAuuB,QAAI,SAAQ9qB,GACJA,EAAO+a,gBACP,IAAMgQ,GAA6B/qB,EAAOgrB,cAAcC,QAAQ,YAEThe,KAAnDxQ,KAAKguB,sBAAsBM,KAE/BtuB,KAAKsB,WAAWoD,cAAcvE,MAAQmuB,EACtCtuB,KAAKyuB,YAGT3B,EAAJhtB,UAAA2uB,QAAI,WACI,GAAMC,GAA6B1uB,KAAKsB,WAAWoD,cAAciqB,eAC3DC,EAA2B5uB,KAAKsB,WAAWoD,cAAcmqB,aAC3DC,GAAmC,EAEjCnnB,EAAd3H,KAAA+uB,mBAAA/uB,KAAAsB,WAAAoD,cAAAvE,OACY6uB,EADZrnB,EAAAqnB,UAEYC,EAFZtnB,EAAAsnB,gBAGYC,EAHZvnB,EAAAunB,yBAOYF,IACAA,EAAU,IACc,IAAxBA,EAAU,GAAG7d,OACb2d,GAA0B,EACnBG,GACuB,IAA9BA,EAAgB,GAAG9d,QACnB8d,EAAgB,IACc,IAA9BA,EAAgB,GAAG9d,OACnB2d,GAA0B,EACnBI,GACiC,IAAxCA,EAA0B,GAAG/d,QACW,IAAxC+d,EAA0B,GAAG/d,QAC7B+d,EAA0B,IACc,IAAxCA,EAA0B,GAAG/d,SAC7B2d,GAA0B,GAI9B9uB,KAAK0tB,mBAAoByB,qBAAsBL,IAE/C9uB,KAAKsB,WAAWoD,cAAciqB,eAAiBD,EAC/C1uB,KAAKsB,WAAWoD,cAAcmqB,aAAeD,EAEzCE,GAAqD,OAA1B9uB,KAAKif,UAAUmQ,QAC1CpvB,KAAKqvB,sCAAsCX,EAAqB,IAQxE/uB,OAAJC,eAAQktB,EAARhtB,UAAA,SAAAC,IAAI,WACI,OAAQC,KAAKsB,WAAWoD,cAAcvE,QAAUH,KAAKyqB,8CAOzDqC,EAAJhtB,UAAA4qB,iBAAI,WACI1qB,KAAKma,SAGT2S,EAAJhtB,UAAAgb,WAAI,SAAW3a,GACO,OAAVA,GACAH,KAAKiU,SAASqb,YAAYtvB,KAAKsB,WAAWoD,cACtC,QACA1E,KAAKuvB,sBAAsBpvB,EAAOH,KAAKwvB,aAG/CxvB,KAAKkiB,SAAS/hB,GAAS,MACvBH,KAAK0tB,qBAGTZ,EAAJhtB,UAAAwgB,UAAI,SAAU9a,GAEN,GAAMQ,GAAkBhG,KAAKyvB,WAAWjqB,EdhYR,ackY5BQ,GdjY8B,cciYEA,GAChChG,KAAK0vB,sBAAsBlqB,GdjYG,ccmY9BQ,GdlY+B,eckYGA,GAClChG,KAAK2vB,gCAAgCnqB,IAI7CsnB,EAAJhtB,UAAAib,iBAAI,SAAiBC,GACbhb,KAAKkiB,SAAWlH,GAGpB8R,EAAJhtB,UAAAmb,kBAAI,SAAkBD,GACdhb,KAAKmuB,UAAYnT,GAIb8R,EAAZhtB,UAAAkqB,sBAAI,WACI,GAAMW,GAAW3qB,KAAKG,KAElBH,MAAKopB,sBAAwBuB,IAC7B3qB,KAAKopB,oBAAsBuB,EAC3B3qB,KAAKuhB,aAAa3b,SAKlBknB,EAAZhtB,UAAA2qB,WAAI,WACI,GAAMG,GAA+B5qB,KAAKsB,WAAWoD,cAAekmB,QAEpE,OAAOA,IAAYA,EAASC,UAGxBiC,EAAZhtB,UAAA4tB,kBAAI,SAA0BkC,OAA9B,KAAAA,IAA8BA,KAId,IAAAC,GAAhBD,EAAAC,YAA6BloB,EAA7BioB,EAAAT,qBAA6BA,MAA7B,KAAAxnB,GAAAA,EACcmoB,EAAgCD,GAClC7vB,KAAKguB,sBAAsBhuB,KAAKsB,WAAWoD,cAAcvE,MAG7D,IAFAH,KAAK+vB,qBAAuBD,EAExBX,OAAwC3e,KAAhBsf,EAA2B,CACnD,GAAMnB,GAAyB3uB,KAAKsB,WAAWoD,cAAciqB,eACvDE,EAAuB7uB,KAAKsB,WAAWoD,cAAcmqB,YAC3D7uB,MAAKiU,SAASqb,YACVtvB,KAAKsB,WAAWoD,cAChB,QACA1E,KAAKuvB,sBAAsBO,EAAa9vB,KAAKwvB,aACjDxvB,KAAKsB,WAAWoD,cAAciqB,eAAiBA,EAC/C3uB,KAAKsB,WAAWoD,cAAcmqB,aAAeA,EAGlC7uB,KAAKif,UAAUkO,QAAS6C,wBACvC,IAAMxhB,GAAmC,OAA1BxO,KAAKif,UAAUmQ,YAAmC5e,KAAhBsf,EAA4BA,EAAc,IAC3F9vB,MAAKkiB,SAAS1T,GACdxO,KAAKuhB,aAAa3b,QAGdknB,EAAZhtB,UAAA4vB,sBAAI,SAA8BlqB,GAC1BA,EAAM8Y,gBAEN,IAAIuR,GAAgC7vB,KAAK+vB,oBACzC,QAAoBvf,KAAhBqf,EAA2B,CAC3B,GAAMI,GAAYjwB,KAAKsB,WAAWoD,cAAciqB,eAE1CuB,EAAmBlwB,KAAKmwB,mBAAmBF,GAC5CC,iBACClqB,EAAkBhG,KAAKyvB,WAAWjqB,EdtcZ,acucxBQ,IAAgC6pB,EAAc7vB,KAAKowB,cAAcP,EAAaK,IdtcpD,ccuc1BlqB,IAAkC6pB,EAAc7vB,KAAKqwB,cAAcR,EAAaK,IACpFlwB,KAAK0tB,mBAAoBmC,YAArCA,IACY7vB,KAAKqvB,sCAAsCY,KAI3CnD,EAAZhtB,UAAA6vB,gCAAI,SAAwCnqB,GACpC,GAAMqqB,GAAgC7vB,KAAK+vB,qBACrC/pB,EAAkBhG,KAAKyvB,WAAWjqB,EAExC,QAAoBgL,KAAhBqf,EAA2B,CAC3B,GAAII,GAAoBjwB,KAAKsB,WAAWoD,cAAciqB,cdjdxB,eckd1B3oB,EACAiqB,EAAYjwB,KAAKswB,qCAAqCL,EAAWjwB,KAAKsB,WAAWoD,cAAcvE,OdldpE,ecmdpB6F,IACPiqB,EAAYjwB,KAAKuwB,qCAAqCN,EAAWjwB,KAAKsB,WAAWoD,cAAcvE,QAEnGH,KAAKqvB,sCAAsCY,KAO3CnD,EAAZhtB,UAAA2vB,WAAI,SAAmBjqB,GACf,MAAOA,GAAMgrB,MAAQhrB,EAAM3B,KAGvBipB,EAAZhtB,UAAAuvB,sCAAI,SAA8CY,GAA9C,GAAJjvB,GAAAhB,IACQ8S,YAAW,WACP,GAAM2d,GAAgBzvB,EAAKmvB,mBAAmBF,EAC9CjvB,GAAKM,WAAWoD,cAAciqB,eAAiB8B,EAAcC,oBAC7D1vB,EAAKM,WAAWoD,cAAcmqB,aAAe4B,EAAcE,qBAI3D7D,EAAZhtB,UAAAswB,cAAI,SAAsBQ,EACAC,OAA1B,KAAAA,IAA0BA,EAA6BtF,EAAAA,UAAUuF,QACrD,IAAAnpB,GAAZ3H,KAAA+wB,sBAAAH,GAAcI,EAAdrpB,EAAAqpB,MAAqBC,EAArBtpB,EAAAspB,QAA8BH,EAA9BnpB,EAAAmpB,OAEQ,QAAQD,GACJ,IAAKtF,GAAAA,UAAUyF,MACXA,GACA,MACJ,KAAKzF,GAAAA,UAAU0F,QACXA,GACA,MACJ,KAAK1F,GAAAA,UAAUuF,QACXA,IAWR,MANIA,GdlgB8B,KckgBEA,EAAU,GAE1CG,EdngB4B,KcmgBEA,EAAU,GAExCD,EdpgByB,KcogBAA,EAAQ,GAEvBhxB,KAAKkxB,sBAAsBF,EAAOC,EAASH,IAMrDhE,EAAZhtB,UAAAuwB,cAAI,SAAsBO,EACAO,OAA1B,KAAAA,IAA0BA,EAA6B5F,EAAAA,UAAUuF,QACrD,IAAAnpB,GAAZ3H,KAAA+wB,sBAAAH,GAAcI,EAAdrpB,EAAAqpB,MAAqBC,EAArBtpB,EAAAspB,QAA8BH,EAA9BnpB,EAAAmpB,OAEQ,QAAQK,GACJ,IAAK5F,GAAAA,UAAUyF,MACXA,GACA,MACJ,KAAKzF,GAAAA,UAAU0F,QACXA,GACA,MACJ,KAAK1F,GAAAA,UAAUuF,QACXA,IAWR,MANIA,GAAU,IAAKA,Ed/hBe,IciiB9BG,EAAU,IAAKA,EdhiBa,IckiB5BD,EAAQ,IAAKA,EdjiBY,IcmiBfhxB,KAAKkxB,sBAAsBF,EAAOC,EAASH,IAGrDhE,EAAZhtB,UAAAwwB,qCAAI,SAA6CL,EAAmBmB,GAC5D,MAAqB,KAAdnB,EAAkBmB,EAAWjgB,OAAS8e,EAAY,GAGrDnD,EAAZhtB,UAAAywB,qCAAI,SAA6CN,EACAmB,EACAC,OAAjD,KAAAA,IAAiDA,EAAjD,IACQ,IAAMC,GAAyBF,EAAW7e,QAAQ8e,EAAapB,EAE/D,YAA0Bzf,KAAnB8gB,EAA+BA,EAAiB,EAAI,GAOvDxE,EAAZhtB,UAAAqwB,mBAAI,SAA2BoB,GAKvB,GACIrB,GACAQ,EACAC,EAHES,EAAqBpxB,KAAKsB,WAAWoD,cAAcvE,MAKnDqxB,EAAeJ,EAAW7e,QAAQ,IAAKkf,GACvCC,GAAiC,IAAlBF,EAAsBJ,EAAW7e,QAAQ,IAAKif,EAAe,IAAM,CAgBxF,QAdsB,IAAlBE,GAAuBH,EAAiBG,GACxCxB,EAAmB3E,EAAAA,UAAUuF,QAC7BJ,EAAsBgB,EAAe,EACrCf,EAAoBS,EAAWjgB,SACN,IAAlBqgB,GAAuBD,EAAiBC,GAC/CtB,EAAmB3E,EAAAA,UAAU0F,QAC7BP,EAAsBc,EAAe,EACrCb,EAAoBe,GAAgB,EAAIA,EAAeN,EAAWjgB,SAElE+e,EAAmB3E,EAAAA,UAAUyF,MAC7BN,EAde,EAefC,GAAsC,IAAlBa,EAAsBA,EAAeJ,EAAWjgB,SAIpE+e,iBAAZA,EACYQ,oBAAZA,EACYC,kBAAZA,IAOY7D,EAAZhtB,UAAAyvB,sBAAI,SAA8BoC,EACAnC,OAAlC,KAAAA,IAAkCA,EAAlC5D,UACcoF,EAAgBhxB,KAAK4xB,yBAAyBD,EAAQE,YACtDZ,EAAkBjxB,KAAK4xB,yBAAyBD,EAAQG,cACxDhB,EAAkB9wB,KAAK4xB,yBAAyBD,EAAQI,aAO9D,QALRpqB,KACYA,EAAC6jB,EAAAA,YAAYG,MAAO,WAAM,MAAGqF,GAAzC,IAAkDC,GACtCtpB,EAAC6jB,EAAAA,YAAYE,QAAS,WAAM,MAAGsF,GAA3C,IAAoDC,EAApD,IAA+DH,GAC/DnpB,GAEuC6nB,MAG3B1C,EAAZhtB,UAAAivB,mBAAI,SAA2BqC,GAKvB,GAAMlC,GAA4BkC,EAAWY,MAAMnG,IAC7CoD,EAAkBmC,EAAWY,MAAMjG,GAGzC,QACIiD,UAHcoC,EAAWY,MAAMhG,IAI/BiD,gBAAZA,EACYC,0BAAZA,IAOYpC,EAAZhtB,UAAAoxB,sBAAI,SAA8BF,EAAeC,EAAiBH,GAC1D,WADR,KAAAA,IAAkEA,EAAlE,GACe9wB,KAAKguB,sBAAyBgD,EAA7C,IAAsDC,EAAtD,IAAiEH,IAGrDhE,EAAZhtB,UAAAkuB,sBAAI,SAA8BoD,GAE1B,OAAmB5gB,KAAf4gB,EAAJ,CAEM,GAAAzpB,GAAd3H,KAAA+uB,mBAAAqC,GACYpC,EADZrnB,EAAAqnB,UAEYC,EAFZtnB,EAAAsnB,gBAGYC,EAHZvnB,EAAAunB,yBAMQ,IAAiC,IAA7BkC,EAAWa,OAAO9gB,SACJ,OAAd6d,GAA0C,OAApBC,GAA0D,OAA9BC,GADtD,CAMA,GAAI8B,GAAgB,EAChBC,EAAkB,EAClBH,EAAkB,CAElB9B,GACAgC,EAAQkB,OAAOlD,EAAU,IAClBC,GACP+B,EAAQkB,OAAOjD,EAAgB,IAC/BgC,EAAUiB,OAAOjD,EAAgB,KAC1BC,IACP8B,EAAQkB,OAAOhD,EAA0B,IACzC+B,EAAUiB,OAAOhD,EAA0B,IAC3C4B,EAAUoB,OAAOhD,EAA0B,IAG/C,IAAMiD,GAAmB,GAAIC,MAAK,KAAM,EAAG,EAAGpB,EAAOC,EAASH,EAG9D,OAAOuB,OAAMF,EAAWG,eAAa9hB,GAAY2hB,KAG7CrF,EAAZhtB,UAAA8xB,yBAAI,SAAiCW,GAG7B,MAAOA,GAFqC,EAEC,GAAGA,EAAU,IAAIA,GAG1DzF,EAAZhtB,UAAAixB,sBAAI,SAA8BH,GAC1B,OACII,MAAOJ,EAAQiB,WACfZ,QAASL,EAAQkB,aACjBhB,QAASF,EAAQmB,eAIjBjF,EAAZhtB,UAAAwtB,eAAI,WACI,WAAqC9c,KAA9BxQ,KAAK+vB,sBACNyC,mBAAqBC,KAAMzyB,KAAKsB,WAAWoD,cAAcvE,QAC3D,MAGA2sB,EAAZhtB,UAAAytB,iBAAI,WAEI,WAAkC/c,KAA9BxQ,KAAK+vB,0BACgBvf,KAArBxQ,KAAK+tB,aACL/tB,KAAK0yB,mBAAmB1yB,KAAK+vB,uBACpB4C,8BAAgCF,KAAMzyB,KAAKsB,WAAWoD,cAAcvE,QAG1E,MAGH2sB,EAAZhtB,UAAA0tB,iBAAI,WACI,WAAkChd,KAA9BxQ,KAAK+vB,0BACgBvf,KAArBxQ,KAAKkuB,aACLluB,KAAK4yB,qBAAqB5yB,KAAK+vB,uBACtB8C,+BAAiCJ,KAAMzyB,KAAKsB,WAAWoD,cAAcvE,QAG3E,MAGH2sB,EAAZhtB,UAAA4yB,mBAAI,SAA2BI,GACvB,MAAOA,GAAcR,UAAoBtyB,KAAK+tB,YAAauE,UAAY,GAGnExF,EAAZhtB,UAAA8yB,qBAAI,SAA6BE,GACzB,MAAOA,GAAcR,UAAoBtyB,KAAKkuB,YAAaoE,WAAa,QAEhF,OApmBapqB,IAARE,EAAAA,QAALY,EAAA,cAAgCud,KAAhCuG,EAAAhtB,UAAA,wBAAA,IAqBIoI,GADCE,EAAAA,mEAKL0kB,EAAAhtB,UAAA,WAAA,MAeIoI,GADCE,EAAAA,iEACL0kB,EAAAhtB,UAAA,KAAA,MASaoI,GAARE,EAAAA,iCAAL0kB,EAAAhtB,UAAA,kBAAA,IAOIoI,GADCE,EAAAA,mEACL0kB,EAAAhtB,UAAA,WAAA,MASIoI,GADCE,EAAAA,iEACL0kB,EAAAhtB,UAAA,QAAA,MAUIoI,GADCE,EAAAA,MAAM,wEACX0kB,EAAAhtB,UAAA,aAAA,MAaIoI,GADCE,EAAAA,MAAM,qEACX0kB,EAAAhtB,UAAA,UAAA,MASIoI,GADCE,EAAAA,MAAM,qEACX0kB,EAAAhtB,UAAA,UAAA,MA1GagtB,EAAbW,EAAAvlB,GAlDCI,EAAAA,WACGC,SAAU,sBACVC,SAAU,oBACVC,MACIqE,MAAO,yBAGPI,YAAa,KACb+d,qBAAsB,cACtBE,aAAc,WACdC,aAAc,WACd2H,qBAAsB,aACtBC,kBAAmB,UACnBC,kBAAmB,UACnBC,eAAgB,QAChBhI,sBAAuB,aACvBrE,SAAU,WACVD,UAAW,qBACXuM,UAAW,YACXC,UAAW,kBACX1qB,YAAa,qBAEjBoB,YAEQuR,QAASgY,EAAAA,cACTC,SAAZ7G,GAgBYhR,OAAO,IAGPJ,QAAS6L,GACT3L,YAAaC,EAAAA,WAAW,WAAM,MAAAiS,SAuIzB7kB,EAAjB,EAAiBG,EAAAA,YAAYH,EAA7B,EAA6Bwe,EAAAA,QACZxe,EAAjB,EAAiBG,EAAAA,YACAH,EAAjB,EAAiBG,EAAAA,YAEAH,EAAjB,EAAiBG,EAAAA,YAAYH,EAA7B,EAA6Bwe,EAAAA,QAAQxe,EAArC,EAAqCC,EAAAA,OAAO0qB,KAL5CvqB,EAAA,qBAA6CE,EAAAA,WACSwe,EAAAA,UACdH,EAAAA,OACKC,EAAAA,mBACHjB,GAA1C5mB,OAE2CqX,EAAAA,aAvI9B8V,IAAqBN,ICzGlCgH,GAAA,WAAA,QAAAA,MAAiC,MAApBA,GAAbtrB,GAdCsB,EAAAA,UACGG,SACIC,EAAAA,aACA0S,EAAAA,WACAmX,EAAAA,eACAnI,EAAAA,aAEJ7hB,cACIqjB,IAEJpjB,SACIojB,OAGK0G,MCpBAjiB,GAAoB,GAAInC,GAAAA,eAAoB,oBAEzD,SAAYskB,GACRA,EAAJ,MAAA,QACIA,EAAJ,KAAA,OACIA,EAAJ,IAAA,MACIA,EAAJ,OAAA,UAJYA,EAAAA,sBAAAA,EAAAA,wBAOZ,ICPY7oB,IDOZ4C,GAAA,WAAA,QAAAA,KAKIzN,KAAJ+G,KAAsB,KAElB/G,KAAJoB,SAAqCsyB,EAAAA,oBAAoBC,MAGrD3zB,KAAJ0R,aAA4B,EAGxB1R,KAAJqS,kBAAiC,EAG7BrS,KAAJyO,cAA6B,EAGzBzO,KAAJ8R,kBAA4C,GAC5C,MAAArE,OC3BA,SAAY5C,GACRA,EAAJ,KAAA,OACIA,EAAJ,QAAA,UACIA,EAAJ,OAAA,UAHYA,KAAAA,OAQZ,IAAaW,KACToZ,OAASnZ,GAAI,mBAAoBE,IAAK,kBACtCoQ,MAAQtQ,GAAI,oBAAqBE,IAAK,kBACtC9G,KAAO4G,GAAI,oBAAqBE,IAAK,kBACrCwZ,QAAU1Z,GAAI,mBAAoBE,IAAK,mBAG9BiB,IAGTC,eAAgBiP,EAAAA,QAAQ,SACpBtE,EAAAA,MAAM,SACF5S,EAAAA,OAAQgvB,UAAW,qBACjBC,QAAUtoB,YAAaC,GAA8BkoB,EAAAA,oBAAoBC,OAAOloB,MAEtF+L,EAAAA,MAAM,UACF5S,EAAAA,OAAQgvB,UAAW,sBACjBC,QAAUnoB,aAAcF,GAA8BkoB,EAAAA,oBAAoBC,OAAOhoB,OAEvFqQ,EAAAA,WAAW,qCACPC,EAAAA,QAAQ,SAAS6X,EAAAA,gBAAgBC,oBACrC/X,EAAAA,WAAW,kBACPC,EAAAA,QAAQ,SAAS6X,EAAAA,gBAAgBE,uBhBXhC1mB,GACT,GAAI8B,GAAAA,eAAwB,4BAEnB7B,GACT,GAAI6B,GAAAA,eAAwB,4BAuBhC3E,GAAA,SAAAuO,GAkBI,QAAJvO,GACgBnJ,EACAyJ,EACDM,EACkC4oB,EACAnoB,GAL7C,GAAJ9K,GAMQgY,EANRI,KAAApZ,OAAAA,WACgBgB,GAAhBM,WAAgBA,EACAN,EAAhB+J,kBAAgBA,EACD/J,EAAfqK,gBAAeA,EACkCrK,EAAjDizB,WAAiDA,EACAjzB,EAAjD8K,WAAiDA,EAf7C9K,EAAJ4J,eAAgDC,GAA0BqpB,KAKtElzB,EAAJoK,sBAA4B,GAAIuO,GAAAA,eAiFhC,MA9FmDK,GAAnDvP,EAAAuO,GA2BIvO,EAAJ3K,UAAAqF,YAAI,WACInF,KAAKoC,WAAY,GAIrBqI,EAAJ3K,UAAA0K,sBAAI,SAAyBlE;8CAKrB,MAJAtG,MAAKoK,yBACLpK,KAAKqK,eACLrK,KAAKsK,gBAEEtK,KAAKuK,aAAaC,sBAAsBlE,IAInDmE,EAAJ3K,UAAA4K,qBAAI,SAAwBpE,GAKpB,MAJAtG,MAAKoK,yBACLpK,KAAKqK,eACLrK,KAAKsK,gBAEEtK,KAAKuK,aAAaG,qBAAqBpE,IAIlDmE,EAAJ3K,UAAA6K,MAAI,WACS3K,KAAKoC,YACNpC,KAAK4K,eAAiBC,GAA0BC,QAChD9K,KAAK+K,kBAAkBC,kBAK/BP,EAAJ3K,UAAAmL,KAAI,WACSjL,KAAKoC,YACNpC,KAAK4K,eAAiBC,GAA0BK,OAChDlL,KAAK+K,kBAAkB5G,iBAI/BsG,EAAJ3K,UAAAqL,YAAI,SAAY3F,GACRxF,KAAKoL,sBAAsBpE,KAAKxB,IAG5BiF,EAAZ3K,UAAAuK,aAAI,WACI,GAAMjJ,GAAgCpB,KAAKqL,gBAAgBjK,QAE3DpB,MAAKsL,oBACDC,YAAaC,GAA8BpK,GAAUqK,GACrDC,aAAcF,GAA8BpK,GAAUuK,MAItDlB,EAAZ3K,UAAAwK,cAAI,WACI,GAAM7F,GAAuBzE,KAAKsB,WAAWoD,cACvCtD,EAAgCpB,KAAKqL,gBAAgBjK,QAE3DqD,GAAQmH,UAAUC,IAAI,0BAA0BzK,GAE5CpB,KAAK8L,YACLrH,EAAQmH,UAAUC,IAAI,oCAItBpB,EAAZ3K,UAAAsK,uBAAI,WACI,GAAIpK,KAAKuK,aAAajH,cAClB,KAAMyI,OAAM,6EAtFQ7D,GAA3B8D,EAAAA,UAAUC,EAAAA,iBAAfjD,EAAA,cAA8CiD,EAAAA,kBAA9CxB,EAAA3K,UAAA,mBAAA,IALa2K,EAAbvC,GArBCgE,EAAAA,WACG3D,SAAU,yBACV4D,SAAJ,0NACIC,QAAS,imFACTC,gBAAiBC,EAAAA,wBAAwBC,OACzCC,cAAeC,EAAAA,kBAAkBC,KACjCC,YAAaC,GAAsBC,gBACnCpE,MACIqE,MAAO,yBACPC,SAAU,KACVC,KAAM,SACNC,aAAc,OACdC,YAAa,KACbC,WAAY,2FAIZC,iBAAkB,sBAClBC,gBAAiB,yBAyBhBzE,EAAT,EAASC,EAAAA,OAAOyE,KACP1E,EAAT,EAASC,EAAAA,OAAO0E,KAJhBvE,EAAA,qBAA4BE,EAAAA,WACOsE,EAAAA,kBACHC,GAAhCC,QAAAA,WArBajD,IAAsCkD,EAAAA,kBCzC/CC,GAAW,EAEfC,GAAA,WAeI,QAAJA,GACeC,EACC7M,EACD8M,GAHX,GAAJ/M,GAAAhB,IACeA,MAAf8N,kBAAeA,EACC9N,KAAhBiB,WAAgBA,EACDjB,KAAf+N,OAAeA,EAXM/N,KAArBgO,aAAoC,GAAIC,GAAAA,QAGnBjO,KAArBkO,aAAoC,GAAID,GAAAA,QAUhCjO,KAAKmO,GAAKnO,KAAK+N,OAAOI,IAAM,gBAAgBP,KAC5C5N,KAAK8N,kBAAkBK,GAAKnO,KAAKmO,GAGjCL,EAAkB1C,sBAAsBlJ,KACpCkM,EAAAA,OACI,SAAC5I,GAAU,MAAoB,SAApBA,EAAM6I,WAAwB7I,EAAM8I,UAAYzD,GAA0BC,UAEzFyD,EAAAA,KAAK,IACPlM,UAAU,WACRrB,EAAKkN,aAAatI,OAClB5E,EAAKkN,aAAarI,aAItBiI,EAAkB1C,sBAAsBlJ,KACpCkM,EAAAA,OACI,SAAC5I,GAAU,MAAoB,SAApBA,EAAM6I,WAAwB7I,EAAM8I,UAAYzD,GAA0BK,SAEzFqD,EAAAA,KAAK,IACPlM,UAAU,WACRpB,EAAWmE,UACXpE,EAAKgN,aAAapI,KAAK5E,EAAKwN,QAC5BxN,EAAKgN,aAAanI,aAGjBiI,EAAkBzC,gBAAgBoD,cACnCC,EAAAA,MACIzN,EAAW0N,gBACX1N,EAAW2N,gBAAgB1M,KAGvBkM,EAAAA,OAAO,SAAC5I,GAAU,MAAAA,GAAMQ,UAAYC,EAAAA,WAE1C5D,UAAU,WAAM,MAAArB,GAAK6N,UA0BnC,MAtBIhB,GAAJ/N,UAAA+O,MAAI,SAAML,GAAN,GAAJxN,GAAAhB,IACaA,MAAKgO,aAAac,SAEnB9O,KAAK8N,kBAAkB1C,sBAAsBlJ,KACzCkM,EAAAA,OAAO,SAAC5I,GAAU,MAAoB,SAApBA,EAAM6I,YACxBE,EAAAA,KAAK,IACPlM,UAAU,WAAM,MAAArB,GAAKC,WAAW8N,mBAElC/O,KAAKwO,OAASA,EACdxO,KAAK8N,kBAAkB7C,SAK/B4C,EAAJ/N,UAAAkP,YAAI,WACI,MAAOhP,MAAKgO,aAAaiB,gBAI7BpB,EAAJ/N,UAAAoP,YAAI,WACI,MAAOlP,MAAKkO,aAAae,gBAEjCpB,KCtEasB,GACT,GAAIC,GAAAA,eAAkC,gCAG1CC,GAAA,WASI,QAAJA,GACgBlO,EACAmO,EACkDC,EAC1BC,GAHxBxP,KAAhBmB,QAAgBA,EACAnB,KAAhBsP,SAAgBA,EACkDtP,KAAlEuP,eAAkEA,EAC1BvP,KAAxCwP,uBAAwCA,EAZ5BxP,KAAZyP,+BAmKA,MAhKI9P,QAAJC,eAAQyP,EAARvP,UAAA,oBAAAC,IAAI,WACI,MAAOC,MAAKwP,uBAAyBxP,KAAKwP,uBAAuBE,iBAC7D1P,KAAKyP,6DAUbJ,EAAJvP,UAAAqF,YAAI,WAGInF,KAAK2P,gBAAgB3P,KAAKyP,8BAG9BJ,EAAJvP,UAAA8P,KAAI,SAAiBC,EACA9B,GADjB,GAAJ/M,GAAAhB,KAEc8P,EAAdzI,MACgBrH,KAAKuP,gBAAkB,GAAI9B,IAC5BM,EAGP,IAAI+B,EAAW3B,IAAMnO,KAAK+P,iBAAiBD,EAAW3B,IAClD,KAAMpC,OAAM,sBAAsB+D,EAAW3B,GAAzD,qDAGQ,IAAMlN,GAAajB,KAAKe,cAAc+O,GAChCE,EAAYhQ,KAAKiQ,gBAAgBhP,EAAY6O,GAC7CI,EAAM,GAAIrC,IAAemC,EAAW/O,EAAY6O,EAEtD,IAAID,YAAkCM,GAAAA,YAClCH,EAAUtF,qBAAqB,GAAI0F,GAAAA,eAAkBP,EAAwB,MACzEQ,UAAWP,EAAW/I,KACtBuJ,aAAcJ,SAEf,CACH,GAAMZ,GAAWtP,KAAKuQ,eAAeT,EAAYI,EAAKF,GAChD1J,EAAS,GAAIC,GAAAA,gBAAgBsJ,MAAwBW,GAAWlB,GAChEmB,EAAaT,EAAUxF,sBAAsBlE,EAEnD4J,GAAIxJ,SAAW+J,EAAW/J,SAO9B,MAJA1G,MAAK0P,iBAAiBgB,KAAKR,GAC3BA,EAAIlB,cAAc3M,UAAU,WAAM,MAAArB,GAAK2P,oBAAoBT,KAC3DF,EAAUrF,QAEHuF,GAMXb,EAAJvP,UAAA8Q,SAAI,WACI5Q,KAAK2P,gBAAgB3P,KAAK0P,mBAO9BL,EAAJvP,UAAAiQ,iBAAI,SAAiB5B,GACb,MAAOnO,MAAK0P,iBAAiBmB,KAAK,SAACC,GAAc,MAAAA,GAAU3C,KAAOA,KAM9DkB,EAAZvP,UAAAmQ,gBAAI,SAAwBhP,EAAwB8M,GAC5C,GAAMgD,GAAmC/Q,KAAKgR,oCAAoCjD,GAE5EuB,EAAW,GAAI2B,GAAAA,eAAejR,KAAKsP,SAAU,GAAI4B,WAClDzD,GAAmBM,IACnBT,GAA0ByD,EAAiCI,QAAU,IACrE5D,GAA0BwD,EAAiCI,OAAS,MAGnEC,EAAkB,GAAI7K,GAAAA,gBAAgBkE,OAA+B+F,GAAWlB,EAGtF,OAFkErO,GAAWwF,OAAO2K,GAEhE1K,UAWhB2I,EAAZvP,UAAAyQ,eAAI,SACIxC,EACAuC,EACAe,GAMA,GAAMC,GAAkB,GAAIJ,WACvBzG,GAA+B4G,IAC/BE,GAAmBxD,EAAOhH,OAC1B8G,GAAgByC,IAGrB,OAAO,IAAIW,GAAAA,eAAejR,KAAKsP,SAAUgC,IAOrCjC,EAAZvP,UAAAiB,cAAI,SAAsBgN,GAClB,GAAMyD,GAAgB,GAAIC,GAAAA,eACtBC,YAAa3D,EAAO2D,YACpBC,cAAe3R,KAAK4R,iBAAiB7D,GACrC8D,SAAU,OACV5O,WAAY8K,EAAO+D,kBACnB5O,eAAgBlD,KAAKmB,QAAQ4Q,iBAAiBC,QAC9ChP,iBAAkBhD,KAAKmB,QAAQC,WAAW6Q,UAG9C,OAAOjS,MAAKmB,QAAQ2B,OAAO0O,IAGvBnC,EAAZvP,UAAA6P,gBAAI,SAAwBuC,GACiBA,EAAWC,UAAxDvQ,QAEiC0D,QAAQ,SAACgL,GAC9BA,EAAazB,WAIbQ,EAAZvP,UAAA8R,iBAAI,SAAyB7D,GACrB,GAAMqE,GACFpS,KAAK0P,iBAAiB9L,KAAK,SAAC0M,GAAiB,MAAAA,GAAavC,OAAO2D,aAErE,OAAO3D,GAAOsE,mBAAqBD,EAAiC,4BAChE,oCAGA/C,EAAZvP,UAAAkR,oCAAI,SAA4CjD,GACxC,MAAO/N,MAAK0P,iBAAiBtB,OAAO,SAACkC,GAAiB,MAAAA,GAAavC,OAAO3M,WAAa2M,EAAO3M,YAO1FiO,EAAZvP,UAAA6Q,oBAAI,SAA4BL,GACxB,GAAMgC,GAAQtS,KAAK0P,iBAAiB6C,QAAQjC,EAExCgC,IAAS,GACTtS,KAAK0P,iBAAiB8C,OAAOF,EAAO,IAjKnCjD,EAAbnH,GADCuK,EAAAA,aAaQ7J,EAAT,EAASG,EAAAA,YAAYH,EAArB,EAAqBC,EAAAA,OAAOsG,KACnBvG,EAAT,EAASG,EAAAA,YAAYH,EAArB,EAAqB8J,EAAAA,YAHrB1J,EAAA,qBAAyBC,EAAAA,QACC0J,EAAAA,SACwDlF,GAClB4B,KAbnDA,MCVbuD,GAAA,WAKI,QAAJA,GAC2BtC,EACXhP,EACAuR,GAFW7S,KAA3BsQ,aAA2BA,EACXtQ,KAAhBsB,WAAgBA,EACAtB,KAAhB6S,iBAAgBA,EAwBhB,MArBID,GAAJ9S,UAAAmF,SAAI,WAAA,GAAJjE,GAAAhB,IACaA,MAAKsQ,cAONwC,WAAW,WACP9R,EAAKsP,aAAeyC,EAAoB/R,EAAKM,WAAYN,EAAK6R,iBAAiBnD,qBAK3FkD,EAAJ9S,UAAAkT,YAAI,SAAYC,GACR,GAAMC,GAAgBD,EAAQE,kBAAoBF,EAAQG,eAEtDF,KACAlT,KAAKoT,gBAAkBF,EAAcG,eA5BhBnL,GAA5BE,EAAAA,MAAM,+CAAXwK,EAAA9S,UAAA,sBAAA,IAE+BoI,GAA1BE,EAAAA,MAAM,6CAAXwK,EAAA9S,UAAA,uBAAA,IAHa8S,EAAb1K,GARCI,EAAAA,WACGC,SAAU,uDACVE,MACI6K,UAAW,sCACXxG,MAAO,qBACPyG,KAAM,YASL3K,EAAT,EAASG,EAAAA,YAATC,EAAA,qBAAyC6E,GACb3E,EAAAA,WACMmG,MARrBuD,MAqDbY,GAAA,WAAA,QAAAA,MAEA,MADatL,IAARE,EAAAA,kCAALoL,EAAA1T,UAAA,gBAAA,IADa0T,EAAbtL,GAhBCgE,EAAAA,WACG3D,SAAU,sBACV4D,SAAU,wVAUV1D,MACIqE,MAAO,0BAGF0G,MAabC,GAAA,WAAA,QAAAA,MAA8B,MAAjBA,GAAbvL,GANCI,EAAAA,WACGC,SAAU,0DACVE,MACIqE,MAAO,wBAGF2G,MAWbC,GAAA,WAAA,QAAAA,MAAgC,MAAnBA,GAAbxL,GANCI,EAAAA,WACGC,SAAU,gEACVE,MACIqE,MAAO,0BAGF4G,MAWbC,GAAA,WAAA,QAAAA,MAAiC,MAApBA,GAAbzL,GANCI,EAAAA,WACGC,SAAU,mEACVE,MACIqE,MAAO,2BAGF6G,MC5DbC,GAAA,WAAA,QAAAA,MAAgC,MAAnBA,GAAb1L,GA3BCsB,EAAAA,UACGG,SACIC,EAAAA,aACAC,EAAAA,cACAgK,EAAAA,aACAC,GACAC,IAEJjK,WAAYuF,IACZ5F,cACIgB,GACAmI,GACAY,GACAC,GACAC,GACAC,IAEJ3J,iBAAkBS,IAClBf,SACIe,GACAmI,GACAY,GACAC,GACAC,GACAC,OAGKC,MC2BbI,GAAA,WAwCI,QAAJA,GAAwB1S,EACAqB,EACAsR,GAFAjU,KAAxBsB,WAAwBA,EACAtB,KAAxB2C,OAAwBA,EACA3C,KAAxBiU,SAAwBA,EAzCXjU,KAAbkU,SAGYlU,KAAZmU,WAAiC,EACrBnU,KAAZoU,YAAkC,EAEtBpU,KAAZqU,YAAkC,EAEbrU,KAArBsU,oBAAmD,EAC9BtU,KAArBuU,aAkLA,MA/KI5U,QAAJC,eAAQoU,EAARlU,UAAA,aAIAC,IAAI,WACI,MAAOC,MAAKwU,YALpBtU,IAAI,SAAc6C,GACV/C,KAAKwU,WAAazR,mCAQtBpD,OAAJC,eAAQoU,EAARlU,UAAA,YAIAC,IAAI,WACI,MAAOC,MAAKmU,WALpBjU,IAAI,SAAamG,GACTrG,KAAKmU,UAAYxT,EAAAA,sBAAsB0F,oCAQ3C1G,OAAJC,eAAQoU,EAARlU,UAAA,cAKAC,IAAI,WACI,MAAOC,MAAKoU,aANpBlU,IAAI,SAAeuU,GACX,GAAMC,GAAOC,EAAAA,qBAAqBF,EAClCzU,MAAKoU,YAAcM,EAAO,EAAIA,EAAO1U,KAAKyU,4CAW9CT,EAAJlU,UAAA8U,QAAI,SAAQC,GACJ,GAAMvC,GAAgBtS,KAAKkU,MAAM/C,OAC3B2D,EAAgBxC,EAAQtS,KAAKsU,oBAC7BI,EAAeG,EAAKE,SAE1BF,GAAKG,SAASF,GAEd9U,KAAKkU,MAAMxD,MACPmE,KAAZA,EACYvC,MAAZA,EACYwC,MAAZA,EACYG,YAAaP,KAIrBV,EAAJlU,UAAAmF,SAAI,WACSjF,KAAK+C,YACN/C,KAAK+C,UAAjB,cAGQ/C,KAAKkV,SAAb,iBAAmDlV,KAAKmV,aAAe,SAAW,QAG9EnB,EAAJlU,UAAAsV,YAAI,SAAY5P,EAAmB6P,EAAuBC,GAAtD,GAAJtU,GAAAhB,IACQ,KAAIA,KAAKqG,SAAT,CAIA,GAAMkP,GAAWvV,KAAKkU,MAAMmB,GACtBG,EAAYxV,KAAKkU,MAAMoB,GAEvBG,GACF5N,EAAGrC,EAAMkQ,QACT5N,EAAGtC,EAAMmQ,QAGbJ,GAASN,YAAcM,EAASV,KAAKE,UACrCS,EAAUP,YAAcO,EAAUX,KAAKE,UAEvC/U,KAAKkU,MAAM5O,QAAQ,SAACsQ,GAChB,GAAMlB,GAAOkB,EAAKf,KAAKE,SACvBa,GAAKf,KAAKgB,cACVD,EAAKf,KAAKiB,QAAQpB,KAGtB1U,KAAK2C,OAAOoT,kBAAkB,WAC1B/U,EAAKuT,UAAU7D,KACX1P,EAAKiT,SAAS+B,OACV,WACA,UACA,WAAM,MAAAhV,GAAKiV,iBAKvBjW,KAAK2C,OAAOoT,kBAAkB,WAC1B/U,EAAKuT,UAAU7D,KACX1P,EAAKiT,SAAS+B,OACV,WACA,YACA,SAACjQ,GAAkB,MAAA/E,GAAKkV,YAAYnQ,EAAG0P,EAAYF,EAAUC,QAKzExV,KAAKqU,YAAa,IAGtBL,EAAJlU,UAAAqW,WAAI,SAAWtB,GACP,GAAIuB,IAAyB,CAE7BpW,MAAKkU,MAAMtQ,KAAK,SAACgS,EAAMtD,GACnB,MAAIsD,GAAKf,OAASA,IACduB,EAAgB9D,GAET,MAMQ,IAAnB8D,GAIJpW,KAAKkU,MAAM1B,OAAO4D,EAAe,IAG7BpC,EAAZlU,UAAAqV,WAAI,WACI,MAAR,aAAenV,KAAK+C,WAGRiR,EAAZlU,UAAAoW,YAAI,SAAoB1Q,EAAmBiQ,EAAoBF,EAAiBC,GACxE,GAAKxV,KAAKqU,aAAcrU,KAAKqG,SAA7B,CAIA,GAAMgQ,IACFxO,EAAGrC,EAAMkQ,QACT5N,EAAGtC,EAAMmQ,SAGPW,EAAStW,KAAKmV,aACdM,EAAW3N,EAAIuO,EAASvO,EACxB2N,EAAW5N,EAAIwO,EAASxO,EAExB0O,EAAkBhB,EAASN,YAAcqB,EACzCE,EAAmBhB,EAAUP,YAAcqB,EAE3CG,EAAkBlB,EAASV,KAAK6B,aAChCC,EAAmBnB,EAAUX,KAAK6B,YAExC,IAAIH,GAAmBE,GAAmBD,GAAoBG,EAAkB,CAC5E,GAAMC,GAAkBrB,EAASN,YAAcwB,CAE/ClB,GAASV,KAAKiB,QAAQW,GACtBjB,EAAUX,KAAKiB,QAAQN,EAAUP,YAAc2B,OACxCL,IAAmB,GAC1BhB,EAASV,KAAKiB,QAAQ,GACtBN,EAAUX,KAAKiB,QAAQN,EAAUP,YAAcM,EAASN,cACjDuB,GAAoB,GAC3BjB,EAASV,KAAKiB,QAAQN,EAAUP,YAAcM,EAASN,aACvDO,EAAUX,KAAKiB,QAAQ,KAEvBP,EAASV,KAAKiB,QAAQS,GACtBf,EAAUX,KAAKiB,QAAQU,MAIvBxC,EAAZlU,UAAAmW,UAAI,WACI,KAAOjW,KAAKuU,UAAUpD,OAAS,GAAG,CAC9B,GAAM0F,GAAc7W,KAAKuU,UAAUuC,KAE/BD,IACAA,IAIR7W,KAAKqU,YAAa,GAGdL,EAAZlU,UAAAoV,SAAI,SAAiBtO,EAAyBzG,GACtCH,KAAKiU,SAASiB,SAASlV,KAAKsB,WAAWoD,cAAekC,EAAUzG,IA7KpE+H,GADCE,EAAAA,iEAGL4L,EAAAlU,UAAA,YAAA,MAOIoI,GADCE,EAAAA,mEAGL4L,EAAAlU,UAAA,WAAA,MAOIoI,GADCE,EAAAA,iEAIL4L,EAAAlU,UAAA,aAAA,MAlCakU,EAAb9L,GARCgE,EAAAA,WACG3D,SAAU,cACVwO,qBAAqB,EACrB3K,QAAS,qQACTD,SAAJ,0aACIK,cAAeC,EAAAA,kBAAkBC,KACjCL,gBAAiBC,EAAAA,wBAAwBC,SA0C7CvD,EAAA,qBAAoCE,EAAAA,WACJC,EAAAA,OACE6N,EAAAA,aA1CrBhD,MAiMbiD,GAAA,WA0CI,QAAJA,GAAwBhD,EACA3S,GADAtB,KAAxBiU,SAAwBA,EACAjU,KAAxBsB,WAAwBA,EA1CZtB,KAAZwU,WAAA,WACYxU,KAAZmU,WAAiC,EACrBnU,KAAZkX,OAA6B,EACjBlX,KAAZmX,MAA4B,EA4F5B,MAzFIxX,QAAJC,eAAQqX,EAARnX,UAAA,aAIAC,IAAI,WACI,MAAOC,MAAKwU,YALpBtU,IAAI,SAAc6C,GACV/C,KAAKwU,WAAazR,mCAQtBpD,OAAJC,eAAQqX,EAARnX,UAAA,YAIAC,IAAI,WACI,MAAOC,MAAKmU,WALpBjU,IAAI,SAAamG,GACTrG,KAAKmU,UAAYxT,EAAAA,sBAAsB0F,oCAQ3C1G,OAAJC,eAAQqX,EAARnX,UAAA,SAIAC,IAAI,WACI,MAAOC,MAAKkX,QALpBhX,IAAI,SAAU4U,GACN9U,KAAKkX,OAASvC,EAAAA,qBAAqBG,oCAQvCnV,OAAJC,eAAQqX,EAARnX,UAAA,QAIAC,IAAI,WACI,MAAOC,MAAKmX,OALpBjX,IAAI,SAASwU,GACL1U,KAAKmX,MAAQxC,EAAAA,qBAAqBD,oCAWtCuC,EAAJnX,UAAAmF,SAAI,WACIjF,KAAKkV,SAAb,SAA4ClV,KAAKoX,UAAUpX,KAAKqX,aACxDrX,KAAKkV,SAAb,aAA+CoC,EAAAA,oBAAoBtX,KAAK0U,OAChE1U,KAAKkV,SAASlV,KAAKmV,aAA3B,SAAA,QAAsFmC,EAAAA,oBAAoBtX,KAAK0U,OACvG1U,KAAKkV,SAAb,QAA2ClV,KAAK8U,OAEnC9U,KAAKmV,cACNnV,KAAKkV,SAAjB,SAAgD,QAGpClV,KAAKqG,UACLrG,KAAKuX,QAAjB,WAAqD,QAI7CvX,KAAKkV,SAAb,iBAAmDlV,KAAKmV,aAAe,MAAQ,WAGnE8B,EAAZnX,UAAAqV,WAAI,WACI,MAAR,aAAenV,KAAK+C,WAGRkU,EAAZnX,UAAAsX,UAAI,SAAkBI,GACd,OAAQA,GACJ,IAAZ,WACgB,MAAhB,SACY,KAAZ,WACgB,MAAhB,YACY,KAAZ,aACgB,MAAhB,YACY,SACI,KAAMzL,OAAM,oCAAoCyL,KAIpDP,EAAZnX,UAAAuX,SAAI,WACI,MAAOrX,MAAKqG,SACpB,WACA,aAAcrG,KAAK+C,UACnB,WACA,cAGYkU,EAAZnX,UAAAoV,SAAI,SAAiBtO,EAAyBzG,GACtCH,KAAKiU,SAASiB,SAASlV,KAAKsB,WAAWoD,cAAekC,EAAUzG,IAG5D8W,EAAZnX,UAAAyX,QAAI,SAAgBE,EAA8BtX,GAC1CH,KAAKiU,SAASyD,aAAa1X,KAAKsB,WAAWoD,cAAe+S,EAAWtX,IAvFzE+H,GADCE,EAAAA,iEAGL6O,EAAAnX,UAAA,YAAA,MAOIoI,GADCE,EAAAA,mEAGL6O,EAAAnX,UAAA,WAAA,MAOIoI,GADCE,EAAAA,iEAGL6O,EAAAnX,UAAA,QAAA,MAOIoI,GADCE,EAAAA,iEAGL6O,EAAAnX,UAAA,OAAA,MApCamX,EAAb/O,GAHCI,EAAAA,WACGC,SAAU,cA4CdS,EAAA,qBAAkCgO,EAAAA,UACE9N,EAAAA,cA3CvB+N,MAqGbU,GAAA,WACI,QAAJA,GAAwBrW,EACA2S,EACA2D,GAFA5X,KAAxBsB,WAAwBA,EACAtB,KAAxBiU,SAAwBA,EACAjU,KAAxB4X,SAAwBA,EAyExB,MAvEID,GAAJ7X,UAAA+V,YAAI,WACI7V,KAAKiU,SAAS4D,YAAY7X,KAAKsB,WAAWoD,cAAe,SAG7DiT,EAAJ7X,UAAAmF,SAAI,WACIjF,KAAK4X,SAAShD,QAAQ5U,MAEtBA,KAAK6X,YAAb,aACQ7X,KAAKkV,SAAb,OAA0C,KAE1C,aAAYlV,KAAK4X,SAAS7U,WACd/C,KAAKkV,SAAjB,QAA+C,QACnClV,KAAK6X,YAAjB,YAEY7X,KAAKkV,SAAjB,SAAgD,QACpClV,KAAK6X,YAAjB,WAIIF,EAAJ7X,UAAAqF,YAAI,WACInF,KAAK4X,SAASzB,WAAWnW,OAG7B2X,EAAJ7X,UAAAkV,SAAI,SAASF,GACL9U,KAAKkV,SAAb,QAA2CJ,IAGvC6C,EAAJ7X,UAAAgW,QAAI,SAAQpB,GACJ,GAAMoD,GAAKnD,EAAAA,qBAAqBD,EAChC1U,MAAKkV,SAASlV,KAAK+X,kBAAmBT,EAAAA,oBAAoBQ,KAG9DH,EAAJ7X,UAAAiV,QAAI,WACI,MAAO/U,MAAKsB,WAAWoD,cAAc1E,KAAKgY,0BAG9CL,EAAJ7X,UAAA4W,WAAI,WACI,GAAMtK,GAAS6L,iBAAiBjY,KAAKsB,WAAWoD,cAEhD,OAAOwT,YAAW9L,EAAOpM,KAAKmY,wBAG1BR,EAAZ7X,UAAAqV,WAAI,WACI,MAAR,aAAenV,KAAK4X,SAAS7U,WAGjB4U,EAAZ7X,UAAAqY,mBAAI,WACI,MAAOnY,MAAKmV,aACpB,aACA,YAGYwC,EAAZ7X,UAAAkY,sBAAI,WACI,MAAOhY,MAAKmV,aACpB,eACA,eAGYwC,EAAZ7X,UAAAiY,gBAAI,WACI,MAAO/X,MAAKmV,aACpB,SACA,SAGYwC,EAAZ7X,UAAAoV,SAAI,SAAiBtQ,EAAsBzE,GACnCH,KAAKiU,SAASiB,SAASlV,KAAKsB,WAAWoD,cAAeE,EAAOzE,IAGzDwX,EAAZ7X,UAAA+X,YAAI,SAAoBjT,GAChB5E,KAAKiU,SAAS4D,YAAY7X,KAAKsB,WAAWoD,cAAeE,IA1EpD+S,EAAbzP,GAHCI,EAAAA,WACGC,SAAU,qBAGdS,EAAA,qBAAoCE,EAAAA,WACF8N,EAAAA,UACAhD,MAHrB2D,MCtVbS,GAAA,WAAA,QAAAA,MACA,MADaA,GAAblQ,GAhBCsB,EAAAA,UACGG,SACIC,EAAAA,aACAmK,IAEJrK,SACIuN,GACAU,GACA3D,IAEJvK,cACIwN,GACAU,GACA3D,OAGKoE,MCFTC,GAAe,EAInBC,GAAA,WACI,QAAJA,GAAuBC,GAAAvY,KAAvBuY,YAAuBA,EACvB,MAAAD,MAEaE,GAIaC,EAAcC,EAAWC,EAAcL,IAAeM,EAAAA,aAAaC,UAE7FC,GAAA,WAAA,QAAAA,MAGA,MAAAA,MA4BAC,GAAA,SAAAC,GAsDI,QAAJD,GAAuBR,EACCU,EACAC,EACeC,GAHnC,GAAJnY,GAKQgY,EALRI,KAAApZ,KAKcuY,IALdvY,WAAuBgB,GAAvBuX,YAAuBA,EACCvX,EAAxBiY,cAAwBA,EACAjY,EAAxBkY,mBAAwBA,EAnDXlY,EAAbqY,cAAsD,QAE7BrY,EAAzBsY,UAA6C,GACftY,EAA9BuY,eAA8D,KAElDvY,EAAZwY,UAAgC,gBAAenB,GAGlCrX,EAAbmN,GAA0BnN,EAAKwY,UAMlBxY,EAAbyY,KAAmC,KAIvBzY,EAAZmT,WAAiC,EAcrBnT,EAAZ0Y,UAAgC,EAcT1Y,EAAvBsB,OACQ,GAAIqX,GAAAA,aAyDA3Y,EAAZ4Y,mBAAiC,aAGrB5Y,EAAZ6Y,kBAAgC,SAACC,KAnDzB9Y,EAAKmY,SAAWrU,SAASqU,IAAa,EAEtCnY,EAAKiY,cAAcc,QAAQ/Y,EAAKuX,YAAY7T,eAAe,KA/D5BsV,EAAvCjB,EAAAC,GAAAiB,EAAalB,EAeTpZ,OAAJC,eAAQmZ,EAARjZ,UAAA,WAAAC,IAAI,WACI,OAAUC,KAAKmO,IAAMnO,KAAKwZ,WAAlC,0CAUI7Z,OAAJC,eAAQmZ,EAARjZ,UAAA,YAAAC,IAAI,WACI,MAAOC,MAAKmU,WAGpBjU,IAAI,SAAaC,GACLA,IAAUH,KAAKmU,YACfnU,KAAKmU,UAAYhU,EACjBH,KAAKkZ,mBAAmB/U,iDAMhCxE,OAAJC,eAAQmZ,EAARjZ,UAAA,WAAAC,IAAI,WACI,MAAOC,MAAK0Z,UAIpBxZ,IAAI,SAAYC,GACJA,IAAUH,KAAK0Z,WACf1Z,KAAK0Z,SAAWvZ,EAChBH,KAAKkZ,mBAAmB/U,iDAmBhC4U,EAAJjZ,UAAAqF,YAAI,WACInF,KAAKiZ,cAAciB,eAAela,KAAKuY,YAAY7T,gBAGvDqU,EAAJjZ,UAAAqa,MAAI,WACIna,KAAKiZ,cAAcmB,SAASpa,KAAKqa,cAAc3V,cAAe,aAGlEqU,EAAJjZ,UAAAwa,gBAAI,WACI,MAAOta,MAAKua,SAGhBxB,EAAJjZ,UAAA0a,oBAAI,SAAoBhV,GAChBA,EAAMiV,mBAGV1B,EAAJjZ,UAAA4a,mBAAI,WACI1a,KAAKkZ,mBAAmB/U,gBAG5B4U,EAAJjZ,UAAA6a,cAAI,SAAcnV,GACVA,EAAMiV,kBACNza,KAAK4a,oBACL5a,KAAK6a,oBAGT9B,EAAJjZ,UAAAgb,WAAI,SAAW3a,GACPH,KAAKua,UAAYpa,GAGrB4Y,EAAJjZ,UAAAib,iBAAI,SAAiBC,GACbhb,KAAK6Z,kBAAoBmB,GAG7BjC,EAAJjZ,UAAAmb,kBAAI,SAAkBD,GACdhb,KAAK4Z,mBAAqBoB,GAG9BjC,EAAJjZ,UAAAob,iBAAI,SAAiBC,GACbnb,KAAKqG,SAAW8U,GASZpC,EAAZjZ,UAAA8a,kBAAI,WACI5a,KAAK0Z,UAAY1Z,KAAKua,QACtBva,KAAK6Z,kBAAkB7Z,KAAKua,SAC5Bva,KAAK4Z,sBAGDb,EAAZjZ,UAAA+a,iBAAI,WACI,GAAMrV,GAAQ,GAAIsT,GAClBtT,GAAM4V,OAASpb,KACfwF,EAAM+U,QAAUva,KAAKua,QAErBva,KAAK6Z,kBAAkB7Z,KAAKua,SAC5Bva,KAAKsC,OAAO0E,KAAKxB,SAEzB,OA7HwB0C,IAAnB8D,EAAAA,UAAU,SAAfhD,EAAA,cAAuCE,EAAAA,aAAvC6P,EAAAjZ,UAAA,oBAAA,IAEaoI,GAARE,EAAAA,iCAAL2Q,EAAAjZ,UAAA,oBAAA,IAEyBoI,GAApBE,EAAAA,MAAM,uCAAX2Q,EAAAjZ,UAAA,gBAAA,IAC8BoI,GAAzBE,EAAAA,MAAM,4CAAX2Q,EAAAjZ,UAAA,qBAAA,IAKaoI,GAARE,EAAAA,iCAAL2Q,EAAAjZ,UAAA,SAAA,IAMaoI,GAARE,EAAAA,iCAAL2Q,EAAAjZ,UAAA,WAAA,IAEaoI,GAARE,EAAAA,iCAAL2Q,EAAAjZ,UAAA,YAAA,IAKIoI,GADCE,EAAAA,iEAGL2Q,EAAAjZ,UAAA,WAAA,MAgBIoI,GADCE,EAAAA,mEAML2Q,EAAAjZ,UAAA,UAAA,MAEcoI,GAATC,EAAAA,SAALa,EAAA,cAA+B2Q,EAAAA,eAC/BZ,EAAAjZ,UAAA,aAAA,IApDaiZ,EAAbkB,EAAA/R,GA1BCgE,EAAAA,WACG3D,SAAU,YACVC,SAAU,WACV2D,SAAJ,26BACIC,QAAS,yzCACTtC,YACKuR,QAASC,EAAAA,kBAAmBC,YAAaC,EAAAA,WAAW,WAAM,MAAAvB,KAAoBwB,OAAO,IAE1FpP,gBAAiBC,EAAAA,wBAAwBC,OACzCC,cAAeC,EAAAA,kBAAkBC,KACjCgP,QAAS,WAAY,QAAS,YAC9BjT,MACIqE,MAAO,YACP6O,OAAQ,KACRzO,YAAa,KACb0O,sBAAuB,WACvBC,wBAAyB,YAE7BlP,YACImP,EAAAA,QAAQ,UACJtE,EAAAA,MAAM,OAAS5S,EAAAA,OAAQmX,KAAM,SAC7BvE,EAAAA,MAAM,QAAS5S,EAAAA,OAAQmX,KAAM,SAC7BC,EAAAA,WAAW,iBAAkBC,EAAAA,QAAQ,eA6DhCrT,EAAjB,EAAiBsT,EAAAA,UAAU,aAH3BlT,EAAA,qBAAoCE,EAAAA,WACGiT,EAAAA,aACK3O,EAAAA,kBAA5C4O,UAxDarD,IAA0BP,ICtDvC6D,GAAA,WAAA,QAAAA,MACA,MADaA,GAAbnU,GALCsB,EAAAA,UACGG,SAAUC,EAAAA,aAAc0S,EAAAA,WAAYxI,IACpCpK,SAAUqP,IACVtP,cAAesP,OAENsD,MfsDb7V,GAAA,WAsEI,QAAJA,GAAuB+V,GAAAvc,KAAvBuc,IAAuBA,EArEnBvc,KAAJwc,OAAa,uBACTxc,KAAJyc,UAA+C9a,GAA/CC,QACI5B,KAAJ0c,YAOc1c,KAAd6G,gBAAuD,GAAI8S,GAAAA,aAE9C3Z,KAAb2c,kBAAiC,IAEpB3c,KAAb4c,kBAAiC,EAsBrB5c,KAAZC,WAAiC,QAcrBD,KAAZK,aAAmC,MAcvBL,KAAZS,WAAmD,GAAIoc,GAAAA,iBAAyB,GAG3D7c,KAArB8c,cAAmD,GAAI7O,GAAAA,QAC3CjO,KAAZ+c,oBAA0C,EAGlC/c,KAAK2D,mBAAqBqZ,GAC1Bhd,KAAKid,SAAWjd,KAAKS,WAAWwO,eA6DxC,MApHItP,QAAJC,eAAQ4G,EAAR1G,UAAA,WAAAC,IAAI,WACI,MAAOC,MAAKkd,UAEpBhd,IAAI,SAAYC,GACRH,KAAKmd,gBAAkBhd,YAAiBgQ,GAAAA,aAEpCnQ,KAAKmd,gBACLnd,KAAKkd,SAAW/c,oCAMxBR,OAAJC,eAAQ4G,EAAR1G,UAAA,aAAAC,IAAI,WACI,MAAOC,MAAKC,YAEpBC,IAAI,SAAcC,GACVH,KAAKC,WAAaE,mCAKtBR,OAAJC,eAAQ4G,EAAR1G,UAAA,eAAAC,IAAI,WACI,MAAOC,MAAKK,cAEpBH,IAAI,SAAgBC,GACRA,IAAUH,KAAKK,cACfL,KAAKK,aAAeF,EACpBH,KAAKyc,UAAUW,QAAQJ,GAAchd,KAAKyD,eAClCtD,IACRH,KAAKK,aAAe,wCAM5BV,OAAJC,eAAQ4G,EAAR1G,UAAA,aAAAC,IAAI,WACI,MAAOC,MAAKS,WAAWN,OAE/BD,IAAI,SAAcC,GACV,GAAMkd,GAAU1c,EAAAA,sBAAsBR,EAElCH,MAAKS,WAAWN,QAAUkd,IAC1Brd,KAAKS,WAAWmF,KAAKyX,GACrBrd,KAAK6G,gBAAgBG,KAAKqW,qCAclC7W,EAAJ1G,UAAAc,KAAI,WAAA,GAAJI,GAAAhB,IACYA,MAAKsd,SACLC,aAAavd,KAAKsd,SAGjBtd,KAAKwd,mBACiB,WAAnBxd,KAAKmG,YACLnG,KAAK+c,oBAAqB,GAE9B/c,KAAKyd,QAAU3K,WAAW,WACtB9R,EAAK0B,WAAY,EACjB1B,EAAK6F,gBAAgBG,MAAK,GAI1BhG,EAAKmD,gBACNnE,KAAK2c,qBAIhBnW,EAAJ1G,UAAA+C,KAAI,WAAA,GAAJ7B,GAAAhB,IACYA,MAAKyd,SACLF,aAAavd,KAAKyd,SAGtBzd,KAAKsd,QAAUxK,WAAW,WACtB9R,EAAK0B,WAAY,EACjB1B,EAAK6F,gBAAgBG,MAAK,GAC1BhG,EAAK8b,cAAclX,OAInB5E,EAAKmD,gBACNnE,KAAK4c,oBAGZpW,EAAJ1G,UAAAU,YAAI,WACIR,KAAK0c,SAAc1c,KAAKwc,OAAhC,IAA0Cxc,KAAKyD,aAG3C+C,EAAJ1G,UAAA0d,eAAI,WACI,QAAOxd,KAAKmd,gBAAkC,KAAjBnd,KAAK0d,UAAmB1d,KAAK0d,UAI9DlX,EAAJ1G,UAAA6G,YAAI,WACI,MAAO3G,MAAK8c,cAAc7N,gBAG9BzI,EAAJ1G,UAAAqE,aAAI,WACInE,KAAKuc,IAAIpY,gBAGbqC,EAAJ1G,UAAA6d,sBAAI,WACQ3d,KAAK+c,oBACL/c,KAAK6C,QAxHHqF,GAATC,EAAAA,SAALa,EAAA,cAA+B2Q,EAAAA,eAA/BnT,EAAA1G,UAAA,sBAAA,IAEaoI,GAARE,EAAAA,iCAAL5B,EAAA1G,UAAA,wBAAA,IAEaoI,GAARE,EAAAA,iCAAL5B,EAAA1G,UAAA,wBAAA,IAGIoI,GADCE,EAAAA,iEAGL5B,EAAA1G,UAAA,UAAA,MAWIoI,GADCE,EAAAA,iEAGL5B,EAAA1G,UAAA,YAAA,MAOIoI,GADCE,EAAAA,iEAGL5B,EAAA1G,UAAA,cAAA,MAYIoI,GADCE,EAAAA,mEAGL5B,EAAA1G,UAAA,YAAA,MAvDa0G,EAAb0B,GArBCgE,EAAAA,WACG3D,SAAU,uBACVmT,QACI,oBACA,oBACA,UACA,YACA,YACA,eAEJkC,SAAU,mBACVjR,YAAckR,IACd1R,SAAJ,yPACI4K,qBAAqB,EACrB3K,QAAS,ymEACTI,cAAeC,EAAAA,kBAAkBC,KACjCL,gBAAiBC,EAAAA,wBAAwBC,OACzC9D,MACIqV,eAAgB,kCAyExB9U,EAAA,qBAA4BwE,EAAAA,qBAtEfhH,MAuIAsC,GACT,GAAIsG,GAAAA,eAAsC,8BAQjCrF,IACTsR,QAASvS,GACTiV,MAAO9U,EAAAA,SACP+U,WAAYC,GAkBhBpe,GAAA,WAyHI,QAAJA,GACgBsB,EACAG,EACAqB,EACAb,EACA0C,EACoCtB,EACxBH,GANZ/C,KAAhBmB,QAAgBA,EACAnB,KAAhBsB,WAAgBA,EACAtB,KAAhB2C,OAAgBA,EACA3C,KAAhB8B,iBAAgBA,EACA9B,KAAhBwE,SAAgBA,EACoCxE,KAApDkD,eAAoDA,EACxBlD,KAA5B+C,UAA4BA,EA/HxB/C,KAAJa,eAA6B,EACzBb,KAAJgF,kBAAuB,EACnBhF,KAAJc,gBAA8B,EAMhBd,KAAd6G,gBAAgC,GAAI8S,GAAAA,aACxB3Z,KAAZ2F,aAA2B,GAAIsI,GAAAA,QAsBnBjO,KAAZmU,WAAiC,EAkCrBnU,KAAZC,WAAiC,QAcrBD,KAAZK,aAAmC,MAsCvBL,KAAZqF,gBAA8B,GAAI6Y,KACble,KAArBoC,UAAiC,GAAI6L,GAAAA,QAUzBjO,KAAK2D,mBAAqBqZ,GAoStC,MAxZIrd,QAAJC,eAAQC,EAARC,UAAA,WAAAC,IAAI,WACI,MAAOC,MAAKkd,UAEpBhd,IAAI,SAAYie,GACRne,KAAKkd,SAAWiB,EAChBne,KAAKI,gBAAgB,UAAW+d,oCAKpCxe,OAAJC,eAAQC,EAARC,UAAA,YAAAI,IAAI,SAAaie,GACTne,KAAK0d,QAAUS,mCAInBxe,OAAJC,eAAQC,EAARC,UAAA,YAAAC,IAAI,WAA0B,MAAOC,MAAKmU,WAC1CjU,IAAI,SAAaC,GACTH,KAAKmU,UAAYxT,EAAAA,sBAAsBR,oCAK3CR,OAAJC,eAAQC,EAARC,UAAA,qBAAAC,IAAI,WACI,MAAOC,MAAKoe,oBAEpBle,IAAI,SAAsBC,GAClBH,KAAKoe,mBAAqBje,EAC1BH,KAAKI,gBAAgB,oBAAqBD,oCAK9CR,OAAJC,eAAQC,EAARC,UAAA,qBAAAC,IAAI,WACI,MAAOC,MAAKqe,oBAEpBne,IAAI,SAAsBC,GAClBH,KAAKqe,mBAAqBle,EAC1BH,KAAKI,gBAAgB,oBAAqBD;gCAK9CR,OAAJC,eAAQC,EAARC,UAAA,aAAAC,IAAI,WACI,MAAOC,MAAKC,YAEpBC,IAAI,SAAcC,GACNA,GACAH,KAAKC,WAAaE,EAClBH,KAAKI,gBAAgB,YAAaD,IAElCH,KAAKC,WAAa,yCAM1BN,OAAJC,eAAQC,EAARC,UAAA,eAAAC,IAAI,WACI,MAAOC,MAAKK,cAEpBH,IAAI,SAAgBC,GACRA,GACAH,KAAKK,aAAeF,EACpBH,KAAKI,gBAAgB,cAAeD,IAEpCH,KAAKK,aAAe,uCAM5BV,OAAJC,eAAQC,EAARC,UAAA,kBAAAC,IAAI,WAAuB,MAAOC,MAAKM,iDACnCX,OAAJC,eAAQC,EAARC,UAAA,kBAAAI,IAAI,SAAmBC,GACfH,KAAKM,gBAAkBH,EAEnBH,KAAKO,SACLP,KAAKO,QAAQC,+CAMrBb,OAAJC,eAAQC,EAARC,UAAA,aAAAC,IAAI,WACI,MAAOC,MAAKS,YAEpBP,IAAI,SAAcQ,GACV,GAAMP,GAAQQ,EAAAA,sBAAsBD,EACpCV,MAAKS,WAAaN,EAClBH,KAAKI,gBAAgB,YAAaD,GAE9BA,GACAH,KAAKY,wCAMbjB,OAAJC,eAAQC,EAARC,UAAA,UAAAC,IAAI,WACI,MAAOC,MAAKa,+CAIhBlB,OAAJC,eAAQC,EAARC,UAAA,oBAAAC,IAAI,WACI,MAAOC,MAAKc,gDAkBhBjB,EAAJC,UAAAiB,cAAI,WAAA,GAAJC,GAAAhB,IACQ,IAAIA,KAAKiB,WACL,MAAOjB,MAAKiB,UAIhB,IAAMC,GAAWlB,KAAKmB,QAAQC,WACzBC,oBAAoBrB,KAAKsB,YACzBC,sBAAsB,eACtBC,wBAAuB,GACvBC,mBAzJmB,GA0JnBC,cAAmBC,GAAhCC,SAEcC,EAAsB7B,KAAK8B,iBAC5BC,4BAA4B/B,KAAKsB,WA4BtC,OA1BAJ,GAASc,yBAAyBH,GAElCX,EAASe,gBAAgBC,KAAKC,EAAAA,UAAUnC,KAAKoC,YAAYC,UAAU,SAACC,GAC5DtB,EAAKT,UACLS,EAAKuB,iBAAiBD,GAClBA,EAAOE,yBAAyBC,kBAAoBzB,EAAKT,QAAQmC,WAGjE1B,EAAK2B,OAAOC,IAAI,WAAM,MAAA5B,GAAK6B,YAKvC7C,KAAKiB,WAAajB,KAAKmB,QAAQ2B,QAC3BC,UAAW/C,KAAK+C,UAChBC,iBAAkB9B,EAClB+B,WAAY,mBACZC,eAAgBlD,KAAKkD,mBAGzBlD,KAAKmD,iBAELnD,KAAKiB,WAAWmC,cACXlB,KAAKC,EAAAA,UAAUnC,KAAKoC,YACpBC,UAAU,WAAM,MAAArB,GAAKqC,WAEnBrD,KAAKiB,YAGhBpB,EAAJC,UAAAuD,OAAI,WACQrD,KAAKiB,YAAcjB,KAAKiB,WAAWqC,eACnCtD,KAAKiB,WAAWoC,SAGpBrD,KAAKO,QAAU,MAGnBV,EAAJC,UAAAyC,iBAAI,SAAiBgB,GAAjB,GAAJvC,GAAAhB,KACYwD,EAAmBxD,KAAKyD,WAC5B9D,QAAO+D,KAAK1D,KAAK2D,oBAAoBC,KAAK,SAACC,GACvC,MAAIN,GAAOO,eAAeC,UAAY/C,EAAK2C,mBAAmBE,GAAKE,SAC/DR,EAAOO,eAAeE,UAAYhD,EAAK2C,mBAAmBE,GAAKG,SAC/DT,EAAOO,eAAeG,WAAajD,EAAK2C,mBAAmBE,GAAKI,UAChEV,EAAOO,eAAeI,WAAalD,EAAK2C,mBAAmBE,GAAKK,WAChEV,EAAmBK,GAEZ,KAKf7D,KAAKI,gBAAgB,cAAeoD,GAEhCxD,KAAKO,UACLP,KAAKO,QAAQC,cACbR,KAAKO,QAAQ4D,gBAGjBnE,KAAKoE,2BAGTvE,EAAJC,UAAAsE,wBAAI,WAII,GAHKpE,KAAKiB,aACNjB,KAAKiB,WAAajB,KAAKe,iBAEF,UAArBf,KAAKyD,aAAgD,SAArBzD,KAAKyD,YAAwB,CAC7D,GAAMY,IACDrE,KAAKiB,WAAWqD,eAAeC,aAC5BvE,KAAKwE,SAASC,QAAQC,cAAcH,cAAgB,EACtDI,EAAmB3E,KAAKiB,WAAWqD,eAAeM,MAAMC,KAAO,KACrE7E,MAAKiB,WAAWqD,eAAeM,MAAMC,IAC9BC,SAASH,EAAiBI,MAAM,MAAM,GAAI,IAAMV,EAAM,EAAzE,OAMIxE,EAAJC,UAAAM,gBAAI,SAAgByD,EAAa1D,GACrBH,KAAKgF,kBAAoB7E,GACrBH,KAAKO,UACLP,KAAKO,QAAQsD,GAAO1D,IAKhCN,EAAJC,UAAAmF,SAAI,WACIjF,KAAKkF,2BAGTrF,EAAJC,UAAAqF,YAAI,WAAA,GAAJnE,GAAAhB,IACYA,MAAKiB,YACLjB,KAAKiB,WAAWmE,UAEpBpF,KAAKqF,gBAAgBC,QAAQ,SAACC,EAAUC,GACpC,MAAAxE,GAAKM,WAAWoD,cAAce,oBAAoBD,EAAOD,KAC7DvF,KAAKqF,gBAAgBK,QAErB1F,KAAK2F,aAAaC,OAClB5F,KAAK2F,aAAaE,YAGtBhG,EAAJC,UAAAgG,cAAI,SAAcC,GACN/F,KAAKa,eAAiBkF,EAAEC,UAAYC,EAAAA,QACpCjG,KAAK6C,QAIbhD,EAAJC,UAAAoG,eAAI,WACIlG,KAAK6C,QAGThD,EAAJC,UAAAoF,wBAAI,WAAA,GAAJlE,GAAAhB,IAC+B,WAAnBA,KAAKmG,WAELnG,KAAKqF,gBACAnF,IAAI,aAAc,WAAM,MAAAc,GAAKJ,SAC7BV,IAAI,aAAc,WAAM,MAAAc,GAAK6B,SAC7ByC,QAAQ,SAACC,EAAUC,GAAU,MAAAxE,GAAKM,WAAWoD,cAAc0B,iBAAiBZ,EAAOD,KAGrE,UAAnBvF,KAAKmG,WAELnG,KAAKqF,gBACAnF,IAAI,QAAS,WAAM,MAAAc,GAAKJ,SACxBV,IAAI,OAAQ,WAAM,MAAAc,GAAK6B,SACvByC,QAAQ,SAACC,EAAUC,GAAU,MAAAxE,GAAKM,WAAWoD,cAAc0B,iBAAiBZ,EAAOD,MAIhG1F,EAAJC,UAAAc,KAAI,WAAA,GAAJI,GAAAhB,IACQ,KAAKA,KAAKqG,SAAU,CAChB,IAAKrG,KAAKO,QAAS,CACf,GAAMU,GAAajB,KAAKe,eACxBf,MAAKqD,SAELrD,KAAKsG,OAAStG,KAAKsG,QAAU,GAAIC,GAAAA,gBAAgBC,GAAoBxG,KAAKwE,UAE1ExE,KAAKO,QAAUU,EAAWwF,OAAOzG,KAAKsG,QAAQI,SAC9C1G,KAAKO,QAAQoG,cACRzE,KAAKC,EAAAA,UAAUnC,KAAKoC,YACpBC,UAAU,WAAM,MAAArB,GAAKqC,WAC1BrD,KAAKgF,kBAAmB,GAEpB,UACA,cACA,YACA,oBACA,oBACA,oBACA,iBACA,aAEOM,QAAQ,SAACsB,GAAa,MAAA5F,GAAKZ,gBAAgBwG,EAAU5F,EAAM4F,MACtE5G,KAAKO,QAAQsG,gBAAgB3E,KAAKC,EAAAA,UAAUnC,KAAK2F,cAAemB,EAAAA,wBAC3DzE,UAAU,SAAC0E,GACR/F,EAAK0B,UAAYqE,EACjB/F,EAAK6F,gBAAgBG,KAAKD,GAC1B/F,EAAKH,cAAgBkG,IAGjC/G,KAAKmD,iBACLnD,KAAKO,QAAQK,SAIrBf,EAAJC,UAAA+C,KAAI,WACQ7C,KAAKO,SACLP,KAAKO,QAAQsC,QAKrBhD,EAAJC,UAAAqD,eAAI,WACSnD,KAAKiB,aACNjB,KAAKiB,WAAajB,KAAKe,gBAE3B,IAAMK,GACFpB,KAAKiB,WAAWgG,YAAYjE,iBAC1BkE,EAASlH,KAAKmH,YACdhG,EAAUnB,KAAKoH,oBAErBhG,GAASM,eACjB2F,MAAgBH,EAAOI,KAASnG,EAAQmG,MACxCD,MAAgBH,EAAOK,SAAapG,EAAQoG,aAQxC1H,EAAJC,UAAAqH,UAAI,WACI,GAEIK,GAFEpG,EAAWpB,KAAKyD,YAChBgE,GAASzH,KAAK+C,WAAsC,QAAzB/C,KAAK+C,UAAU5C,KAGhD,IAAiB,QAAbiB,GAAmC,WAAbA,EACtBoG,GAAkBzD,QAAS,SAAUC,QAAsB,QAAb5C,EAAqB,MAAQ,cACxE,IACU,QAAbA,GACc,SAAbA,GAAuBqG,GACV,UAAbrG,IAAyBqG,EAC1BD,GAAkBzD,QAAS,QAASC,QAAS,cAC1C,CAAA,KACU,WAAb5C,GACc,UAAbA,GAAwBqG,GACX,SAAbrG,IAAwBqG,GAGzB,KAAMC,GAAiCtG,EAFvCoG,IAAkBzD,QAAS,MAAOC,QAAS,UAKzC,GAAA2D,GAAd3H,KAAA4H,eAAAJ,EAAAzD,QAAAyD,EAAAxD,QAEQ,QACIsD,KAAME,EACND,UAAWxD,QAJvB4D,EAAAE,EAImC7D,QAJnC2D,EAAAG,KASIjI,EAAJC,UAAAsH,mBAAI,WACI,GAEIW,GAFE3G,EAAWpB,KAAKyD,YAChBgE,GAASzH,KAAK+C,WAAsC,QAAzB/C,KAAK+C,UAAU5C,KAGhD,IAAiB,QAAbiB,EACA2G,GAAmB9D,SAAU,SAAUC,SAAU,cAC9C,IAAiB,WAAb9C,EACP2G,GAAmB9D,SAAU,SAAUC,SAAU,WAC9C,IACU,QAAb9C,GACc,SAAbA,GAAuBqG,GACV,UAAbrG,IAAyBqG,EAC1BM,GAAmB9D,SAAU,MAAOC,SAAU,cAC3C,CAAA,KACU,WAAb9C,GACc,UAAbA,GAAwBqG,GACX,SAAbrG,IAAwBqG,GAGzB,KAAMC,GAAiCtG,EAFvC2G,IAAmB9D,SAAU,QAASC,SAAU,UAK9C,GAAAyD,GAAd3H,KAAA4H,eAAAG,EAAA9D,SAAA8D,EAAA7D,SAEQ,QACIoD,KAAMS,EACNR,UAAWtD,SAJvB0D,EAAAE,EAIoC3D,SAJpCyD,EAAAG,KASYjI,EAAZC,UAAA8H,eAAI,SAAuBC,EAA4BC,GAC/C,GAAIE,GAAgCH,EAChCI,EAA8BH,CAelC,OAdyB,QAArB9H,KAAKyD,aAA8C,WAArBzD,KAAKyD,YACzB,QAANqE,EACAG,EAAO,SACM,WAANH,IACPG,EAAO,OAGD,QAANJ,EACAG,EAAO,QACM,UAANH,IACPG,EAAO,QAIPH,EAAGG,EAAMF,EAAGG,IA1ZdC,GAATC,EAAAA,kCAALtI,EAAAC,UAAA,sBAAA,IAIIoI,GADCE,EAAAA,MAAM,sEAGXvI,EAAAC,UAAA,UAAA,MAQIoI,GADCE,EAAAA,MAAM,oEAGXvI,EAAAC,UAAA,WAAA,MAGIoI,GADCE,EAAAA,MAAM,+EACXvI,EAAAC,UAAA,WAAA,MAOIoI,GADCE,EAAAA,MAAM,8EAGXvI,EAAAC,UAAA,oBAAA,MAQIoI,GADCE,EAAAA,MAAM,8EAGXvI,EAAAC,UAAA,oBAAA,MAQIoI,GADCE,EAAAA,MAAM,sEAGXvI,EAAAC,UAAA,YAAA,MAYIoI,GADCE,EAAAA,MAAM,wEAGXvI,EAAAC,UAAA,cAAA,MAYIoI,GADCE,EAAAA,MAAM,qEACXvI,EAAAC,UAAA,iBAAA,MAWIoI,GADCE,EAAAA,MAAM,wEAGXvI,EAAAC,UAAA,YAAA,MAaIoI,GADCG,EAAAA,YAAY,6EAGjBxI,EAAAC,UAAA,SAAA,MAGIoI,GADCG,EAAAA,YAAY,sEAGjBxI,EAAAC,UAAA,mBAAA,MApHaD,EAAbqI,GARCI,EAAAA,WACGC,SAAU,wCACVC,SAAU,YACVC,MACIC,YAAa,wBACbC,aAAc,sBAkIbC,EAAT,EAASC,EAAAA,OAAOC,KACPF,EAAT,EAASG,EAAAA,YANTC,EAAA,qBAAyBC,EAAAA,QACGC,EAAAA,WACJC,EAAAA,OACUC,EAAAA,iBACRC,EAAAA,iBAA1B1J,OAEuC2J,EAAAA,kBAhI1BzJ,MCtNb0J,GAAA,WAAA,QAAAA,MACA,MADaA,GAAbrB,GAPCsB,EAAAA,UACGC,cAAejD,GAAoB3G,IACnC6J,SAAUlD,GAAoB3G,IAC9B8J,SAAUC,EAAAA,aAAcC,EAAAA,eACxBC,WAAYC,IACZC,iBAAkBxD,OAET+C,MCfAU,GAAU,GAAIC,GAAAA,QAAQ,4sBCHP,oJCKW,6BAGD,kCAIOC,kCAMA,uwICiFR,+gBC5EK,sBACF,mBACH,sBAGG,+BACE,iCACA,kCACC"}