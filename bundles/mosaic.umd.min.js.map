{"version":3,"file":"mosaic.umd.min.js","sources":["../../src/lib/tooltip/tooltip.component.ts","../../src/lib/tooltip/tooltip.module.ts","../../src/lib/version.ts","../../src/lib/timepicker/timepicker.constants.ts","../../src/lib/select/select.component.ts","../../src/lib/select/select.module.ts","../../src/lib/splitter/splitter.component.ts","../../src/lib/splitter/splitter.module.ts","../../src/lib/toggle/toggle.component.ts","../../src/lib/toggle/toggle.module.ts","../../src/lib/tabs/tab-group.ts","../../src/lib/tabs/tab-nav-bar/tab-nav-bar.ts","../../src/lib/tabs/tabs.module.ts","../../src/lib/tag/tag.component.ts","../../src/lib/tag/tag.module.ts","../../src/lib/textarea/textarea.component.ts","../../src/lib/textarea/textarea.module.ts","../../src/lib/timepicker/timepicker.ts","../../src/lib/timepicker/timepicker.module.ts","../../src/lib/select/select-animations.ts","../../src/lib/tree/tree-selection.ts","../../src/lib/tree/tree.module.ts","../../src/lib/tree/data-source/flat-data-source.ts","../../src/lib/tree/data-source/nested-data-source.ts","../../src/lib/tabs/tab-content.ts","../../src/lib/tabs/tab-label.ts","../../src/lib/tabs/tab.ts","../../src/lib/tabs/tabs-animations.ts","../../src/lib/tabs/tab-body.ts","../../src/lib/tabs/tab-label-wrapper.ts","../../src/lib/tabs/tab-header.ts","../../src/lib/modal/modal.service.ts","../../src/lib/modal/modal.module.ts","../../src/lib/navbar/navbar.component.ts","../../src/lib/navbar/navbar.module.ts","../../src/lib/progress-bar/progress-bar.component.ts","../../src/lib/progress-bar/progress-bar.module.ts","../../src/lib/progress-spinner/progress-spinner.component.ts","../../src/lib/progress-spinner/progress-spinner.module.ts","../../src/lib/radio/radio.component.ts","../../src/lib/radio/radio.module.ts","../../src/lib/tree/node.ts","../../src/lib/tree/padding.ts","../../src/lib/list/list-selection.component.ts","../../src/lib/list/list.component.ts","../../src/lib/list/list.module.ts","../../src/lib/link/link.component.ts","../../src/lib/link/link.module.ts","../../src/lib/modal/modal-control.service.ts","../../src/lib/modal/modal-ref.class.ts","../../src/lib/modal/modal-util.ts","../../src/lib/modal/modal.component.ts","../../src/lib/modal/css-unit.pipe.ts","../../src/lib/form-field/form-field.ts","../../src/lib/form-field/form-field.module.ts","../../src/lib/input/input-value-accessor.ts","../../src/lib/input/stepperUtils.ts","../../src/lib/input/input.ts","../../src/lib/input/input-number-validators.ts","../../src/lib/input/input.module.ts","../../src/lib/layout/content.component.ts","../../src/lib/layout/footer.component.ts","../../src/lib/layout/header.component.ts","../../src/lib/layout/layout.component.ts","../../src/lib/layout/sidebar.component.ts","../../src/lib/layout/layout.module.ts","../../src/lib/button/button.component.ts","../../src/lib/button/button.module.ts","../../src/lib/card/card.component.ts","../../src/lib/card/card.module.ts","../../src/lib/checkbox/checkbox-config.ts","../../src/lib/checkbox/checkbox.ts","../../src/lib/checkbox/checkbox-required-validator.ts","../../src/lib/checkbox/checkbox-module.ts","../../src/lib/divider/divider.component.ts","../../src/lib/divider/divider.module.ts","../../src/lib/dropdown/dropdown-content.ts","../../src/lib/dropdown/dropdown-panel.ts","../../src/lib/dropdown/dropdown-item.ts","../../src/lib/dropdown/dropdown-animations.ts","../../src/lib/dropdown/dropdown.component.ts","../../src/lib/dropdown/dropdown-trigger.ts","../../src/lib/dropdown/dropdown.module.ts","../../src/lib/form-field/cleaner.ts","../../src/lib/form-field/form-field-control.ts","../../src/lib/form-field/form-field-number-control.ts","../../src/lib/form-field/hint.ts","../../src/lib/form-field/prefix.ts","../../src/lib/form-field/stepper.ts","../../src/lib/form-field/suffix.ts","../../node_modules/tslib/tslib.es6.js","../../src/lib/core/utils/utils.ts","../../src/lib/core/common-behaviors/common-module.ts","../../src/lib/core/common-behaviors/disabled.ts","../../src/lib/core/common-behaviors/color.ts","../../src/lib/core/common-behaviors/tabindex.ts","../../src/lib/core/common-behaviors/error-state.ts","../../src/lib/core/option/option.ts","../../src/lib/core/overlay/overlay-position-map.ts","../../src/lib/dropdown/dropdown-errors.ts","../../src/lib/form-field/form-field-errors.ts","../../src/lib/input/input-errors.ts","../../src/lib/select/select-errors.ts","../../src/lib/core/line/line.ts","../../src/lib/core/error/error-options.ts","../../src/lib/core/selection/pseudo-checkbox/pseudo-checkbox.ts","../../src/lib/core/selection/index.ts","../../src/lib/core/services/measure-scrollbar.service.ts","../../src/lib/core/option/optgroup.ts","../../src/lib/core/option/index.ts","../../src/lib/core/label/label-options.ts","../../src/lib/core/animation/fade-animations.ts","../../src/lib/icon/icon.component.ts","../../src/lib/icon/icon.module.ts"],"sourcesContent":["import {\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    Directive,\n    ElementRef,\n    EventEmitter,\n    HostBinding,\n    Inject,\n    InjectionToken,\n    Input,\n    NgZone,\n    OnDestroy,\n    OnInit,\n    Optional,\n    Output,\n    TemplateRef,\n    ViewContainerRef,\n    ViewEncapsulation\n} from '@angular/core';\nimport { Directionality } from '@ptsecurity/cdk/bidi';\nimport { coerceBooleanProperty } from '@ptsecurity/cdk/coercion';\nimport { ESCAPE } from '@ptsecurity/cdk/keycodes';\nimport {\n    ConnectedOverlayPositionChange,\n    ConnectionPositionPair,\n    Overlay,\n    OverlayRef,\n    ScrollDispatcher,\n    IScrollStrategy,\n    FlexibleConnectedPositionStrategy,\n    IOverlayConnectionPosition,\n    IOriginConnectionPosition,\n    HorizontalConnectionPos,\n    VerticalConnectionPos\n} from '@ptsecurity/cdk/overlay';\nimport { ComponentPortal } from '@ptsecurity/cdk/portal';\nimport {\n    fadeAnimation,\n    DEFAULT_4_POSITIONS,\n    POSITION_MAP\n} from '@ptsecurity/mosaic/core';\nimport { BehaviorSubject, Observable, Subject } from 'rxjs';\nimport { distinctUntilChanged, takeUntil } from 'rxjs/operators';\n\n\n@Component({\n    selector: 'mc-tooltip-component',\n    inputs: [\n        'mcMouseEnterDelay',\n        'mcMouseLeaveDelay',\n        'mcTitle',\n        'mcVisible',\n        'mcTrigger',\n        'mcPlacement'\n    ],\n    outputs: ['mcVisibleChange'],\n    animations: [ fadeAnimation ],\n    templateUrl: './tooltip.component.html',\n    preserveWhitespaces: false,\n    styleUrls: ['./tooltip.css'],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    host: {\n        '(body:click)': 'this.handleBodyInteraction()'\n    }\n})\nexport class McTooltipComponent {\n    prefix = 'mc-tooltip_placement';\n    positions: ConnectionPositionPair[] = [ ...DEFAULT_4_POSITIONS ];\n    classMap = {};\n    isTitleString: boolean;\n    showTid: number;\n    hideTid: number;\n    availablePositions: any;\n    $visible: Observable<boolean>;\n\n    @Output() mcVisibleChange: EventEmitter<boolean> = new EventEmitter();\n\n    @Input() mcMouseEnterDelay = 400;\n\n    @Input() mcMouseLeaveDelay = 0;\n\n    @Input()\n    get mcTitle(): string | TemplateRef<void> {\n        return this._mcTitle;\n    }\n    set mcTitle(value: string | TemplateRef<void>) {\n        this.isTitleString = !(value instanceof TemplateRef);\n\n        if (this.isTitleString) {\n            this._mcTitle = value;\n        }\n    }\n    private _mcTitle: string | TemplateRef<void>;\n\n    @Input()\n    get mcTrigger(): string {\n        return this._mcTrigger;\n    }\n    set mcTrigger(value: string) {\n        this._mcTrigger = value;\n    }\n    private _mcTrigger: string = 'hover';\n\n    @Input()\n    get mcPlacement(): string {\n        return this._mcPlacement;\n    }\n    set mcPlacement(value: string) {\n        if (value !== this._mcPlacement) {\n            this._mcPlacement = value;\n            this.positions.unshift(POSITION_MAP[ this.mcPlacement ]);\n        } else if (!value) {\n            this._mcPlacement = 'top';\n        }\n    }\n    private _mcPlacement: string = 'top';\n\n    @Input()\n    get mcVisible(): boolean {\n        return this._mcVisible.value;\n    }\n    set mcVisible(value: boolean) {\n        const visible = coerceBooleanProperty(value);\n\n        if (this._mcVisible.value !== visible) {\n            this._mcVisible.next(visible);\n            this.mcVisibleChange.emit(visible);\n        }\n    }\n    private _mcVisible: BehaviorSubject<boolean> = new BehaviorSubject<boolean>(false);\n\n    /** Subject for notifying that the tooltip has been hidden from the view */\n    private readonly onHideSubject: Subject<any> = new Subject();\n    private closeOnInteraction: boolean = false;\n\n    constructor(public cdr: ChangeDetectorRef) {\n        this.availablePositions = POSITION_MAP;\n        this.$visible = this._mcVisible.asObservable();\n    }\n\n    show(): void {\n        if (this.hideTid) {\n            clearTimeout(this.hideTid);\n        }\n\n        if (!this.isContentEmpty()) {\n            if (this.mcTrigger !== 'manual') {\n                this.closeOnInteraction = true;\n            }\n            this.showTid = setTimeout(() => {\n                this.mcVisible = true;\n                this.mcVisibleChange.emit(true);\n\n                // Mark for check so if any parent component has set the\n                // ChangeDetectionStrategy to OnPush it will be checked anyways\n                this.markForCheck();\n            }, this.mcMouseEnterDelay);\n        }\n    }\n\n    hide(): void {\n        if (this.showTid) {\n            clearTimeout(this.showTid);\n        }\n\n        this.hideTid = setTimeout(() => {\n            this.mcVisible = false;\n            this.mcVisibleChange.emit(false);\n            this.onHideSubject.next();\n\n            // Mark for check so if any parent component has set the\n            // ChangeDetectionStrategy to OnPush it will be checked anyways\n            this.markForCheck();\n        }, this.mcMouseLeaveDelay);\n    }\n\n    setClassMap(): void {\n        this.classMap = `${this.prefix}-${this.mcPlacement}`;\n    }\n\n    isContentEmpty(): boolean {\n        return this.isTitleString ? (this.mcTitle === '' || !this.mcTitle) : false;\n    }\n\n    /** Returns an observable that notifies when the tooltip has been hidden from view. */\n    afterHidden(): Observable<void> {\n        return this.onHideSubject.asObservable();\n    }\n\n    markForCheck(): void {\n        this.cdr.markForCheck();\n    }\n\n    handleBodyInteraction(): void {\n        if (this.closeOnInteraction) {\n            this.hide();\n        }\n    }\n}\n\nexport const MC_TOOLTIP_SCROLL_STRATEGY =\n    new InjectionToken<() => IScrollStrategy>('mc-tooltip-scroll-strategy');\n\n/** @docs-private */\nexport function mcTooltipScrollStrategyFactory(overlay: Overlay): () => IScrollStrategy {\n    return () => overlay.scrollStrategies.reposition({scrollThrottle: 20});\n}\n\n/** @docs-private */\nexport const MC_TOOLTIP_SCROLL_STRATEGY_FACTORY_PROVIDER = {\n    provide: MC_TOOLTIP_SCROLL_STRATEGY,\n    deps: [Overlay],\n    useFactory: mcTooltipScrollStrategyFactory\n};\n\n/** Creates an error to be thrown if the user supplied an invalid tooltip position. */\nexport function getMcTooltipInvalidPositionError(position: string) {\n    return Error(`McTooltip position \"${position}\" is invalid.`);\n}\n\nconst VIEWPORT_MARGIN: number = 8;\n\n@Directive({\n    selector: '[mcTooltip], [attribute^=\"mcTooltip\"]',\n    exportAs: 'mcTooltip',\n    host: {\n        '(keydown)': 'handleKeydown($event)',\n        '(touchend)': 'handleTouchend()'\n    }\n})\nexport class McTooltip implements OnInit, OnDestroy {\n    isTooltipOpen: boolean = false;\n    isDynamicTooltip = false;\n    parentDisabled: boolean = false;\n    overlayRef: OverlayRef | null;\n    portal: ComponentPortal<McTooltipComponent>;\n    availablePositions: any;\n    tooltip: McTooltipComponent | null;\n\n    @Output() mcVisibleChange = new EventEmitter<boolean>();\n    private $unsubscribe = new Subject<void>();\n\n    @Input('mcTooltip')\n    get mcTitle(): string {\n        return this._mcTitle;\n    }\n    set mcTitle(title: string) {\n        this._mcTitle = title;\n        this.updateCompValue('mcTitle', title);\n    }\n    private _mcTitle: string;\n\n    @Input('mcTitle')\n    set setTitle(title: string) {\n        this.mcTitle = title;\n    }\n\n    @Input('mcTooltipDisabled')\n    get disabled(): boolean { return this._disabled; }\n    set disabled(value) {\n        this._disabled = coerceBooleanProperty(value);\n    }\n    private _disabled: boolean = false;\n\n    @Input('mcMouseEnterDelay')\n    get mcMouseEnterDelay(): number {\n        return this._mcMouseEnterDelay;\n    }\n    set mcMouseEnterDelay(value: number) {\n        this._mcMouseEnterDelay = value;\n        this.updateCompValue('mcMouseEnterDelay', value);\n    }\n    private _mcMouseEnterDelay: number;\n\n    @Input('mcMouseLeaveDelay')\n    get mcMouseLeaveDelay(): number {\n        return this._mcMouseLeaveDelay;\n    }\n    set mcMouseLeaveDelay(value: number) {\n        this._mcMouseLeaveDelay = value;\n        this.updateCompValue('mcMouseLeaveDelay', value);\n    }\n    private _mcMouseLeaveDelay: number;\n\n    @Input('mcTrigger')\n    get mcTrigger(): string {\n        return this._mcTrigger;\n    }\n    set mcTrigger(value: string) {\n        if (value) {\n            this._mcTrigger = value;\n            this.updateCompValue('mcTrigger', value);\n        } else {\n            this._mcTrigger = 'hover';\n        }\n    }\n    private _mcTrigger: string = 'hover';\n\n    @Input('mcPlacement')\n    get mcPlacement(): string {\n        return this._mcPlacement;\n    }\n    set mcPlacement(value: string) {\n        if (value) {\n            this._mcPlacement = value;\n            this.updateCompValue('mcPlacement', value);\n        } else {\n            this._mcPlacement = 'top';\n        }\n    }\n    private _mcPlacement: string = 'top';\n\n    @Input('mcTooltipClass')\n    get mcTooltipClass() { return this._mcTooltipClass; }\n    set mсTooltipClass(value: string | string[] | Set<string> | {[key: string]: any}) {\n        this._mcTooltipClass = value;\n\n        if (this.tooltip) {\n            this.tooltip.setClassMap();\n        }\n    }\n    private _mcTooltipClass: string | string[] | Set<string> | {[key: string]: any};\n\n    @Input('mcVisible')\n    get mcVisible(): boolean {\n        return this._mcVisible;\n    }\n    set mcVisible(externalValue: boolean) {\n        const value = coerceBooleanProperty(externalValue);\n        this._mcVisible = value;\n        this.updateCompValue('mcVisible', value);\n\n        if (value) {\n            this.show();\n        }\n    }\n    private _mcVisible: boolean;\n\n    @HostBinding('class.mc-tooltip-open')\n    get isOpen(): boolean {\n        return this.isTooltipOpen;\n    }\n\n    @HostBinding('class.disabled')\n    get isParentDisabled(): boolean {\n        return this.parentDisabled;\n    }\n\n    private manualListeners = new Map<string, EventListenerOrEventListenerObject>();\n    private readonly destroyed = new Subject<void>();\n\n    constructor(\n        private overlay: Overlay,\n        private elementRef: ElementRef,\n        private ngZone: NgZone,\n        private scrollDispatcher: ScrollDispatcher,\n        private hostView: ViewContainerRef,\n        @Inject(MC_TOOLTIP_SCROLL_STRATEGY) private scrollStrategy,\n        @Optional() private direction: Directionality) {\n            this.availablePositions = POSITION_MAP;\n        }\n\n    /** Create the overlay config and position strategy */\n    createOverlay(): OverlayRef {\n        if (this.overlayRef) {\n            return this.overlayRef;\n        }\n\n        // Create connected position strategy that listens for scroll events to reposition.\n        const strategy = this.overlay.position()\n            .flexibleConnectedTo(this.elementRef)\n            .withTransformOriginOn('.mc-tooltip')\n            .withFlexibleDimensions(false)\n            .withViewportMargin(VIEWPORT_MARGIN)\n            .withPositions([ ...DEFAULT_4_POSITIONS ]);\n\n        const scrollableAncestors = this.scrollDispatcher\n            .getAncestorScrollContainers(this.elementRef);\n\n        strategy.withScrollableContainers(scrollableAncestors);\n\n        strategy.positionChanges.pipe(takeUntil(this.destroyed)).subscribe((change) => {\n            if (this.tooltip) {\n                this.onPositionChange(change);\n                if (change.scrollableViewProperties.isOverlayClipped && this.tooltip.mcVisible) {\n                    // After position changes occur and the overlay is clipped by\n                    // a parent scrollable then close the tooltip.\n                    this.ngZone.run(() => this.hide());\n                }\n            }\n        });\n\n        this.overlayRef = this.overlay.create({\n            direction: this.direction,\n            positionStrategy: strategy,\n            panelClass: 'mc-tooltip-panel',\n            scrollStrategy: this.scrollStrategy()\n        });\n\n        this.updatePosition();\n\n        this.overlayRef.detachments()\n            .pipe(takeUntil(this.destroyed))\n            .subscribe(() => this.detach());\n\n        return this.overlayRef;\n    }\n\n    detach() {\n        if (this.overlayRef && this.overlayRef.hasAttached()) {\n            this.overlayRef.detach();\n        }\n\n        this.tooltip = null;\n    }\n\n    onPositionChange($event: ConnectedOverlayPositionChange): void {\n        let updatedPlacement = this.mcPlacement;\n        Object.keys(this.availablePositions).some((key) => {\n            if ($event.connectionPair.originX === this.availablePositions[key].originX &&\n                $event.connectionPair.originY === this.availablePositions[key].originY &&\n                $event.connectionPair.overlayX === this.availablePositions[key].overlayX &&\n                $event.connectionPair.overlayY === this.availablePositions[key].overlayY) {\n                updatedPlacement = key;\n\n                return true;\n            }\n\n            return false;\n        });\n        this.updateCompValue('mcPlacement', updatedPlacement);\n\n        if (this.tooltip) {\n            this.tooltip.setClassMap();\n            this.tooltip.markForCheck();\n        }\n\n        this.handlePositioningUpdate();\n    }\n\n    handlePositioningUpdate() {\n        if (!this.overlayRef) {\n            this.overlayRef = this.createOverlay();\n        }\n        if (this.mcPlacement === 'right' || this.mcPlacement === 'left') {\n            const pos =\n                (this.overlayRef.overlayElement.clientHeight -\n                    this.hostView.element.nativeElement.clientHeight) / 2; // tslint:disable-line\n            const currentContainer = this.overlayRef.overlayElement.style.top || '0px';\n            this.overlayRef.overlayElement.style.top =\n                `${parseInt(currentContainer.split('px')[0], 10) + pos - 1}px`;\n            // TODO: обновлять положение стрелки\\указателя\\\"дятла\"\n        }\n    }\n\n    // tslint:disable-next-line:no-any\n    updateCompValue(key: string, value: any): void {\n        if (this.isDynamicTooltip && value) {\n            if (this.tooltip) {\n                this.tooltip[key] = value;\n            }\n        }\n    }\n\n    ngOnInit(): void {\n        this.initElementRefListeners();\n    }\n\n    ngOnDestroy(): void {\n        if (this.overlayRef) {\n            this.overlayRef.dispose();\n        }\n        this.manualListeners.forEach((listener, event) =>\n            this.elementRef.nativeElement.removeEventListener(event, listener));\n        this.manualListeners.clear();\n\n        this.$unsubscribe.next();\n        this.$unsubscribe.complete();\n    }\n\n    handleKeydown(e: KeyboardEvent) {\n        if (this.isTooltipOpen && e.keyCode === ESCAPE) { // tslint:disable-line\n            this.hide();\n        }\n    }\n\n    handleTouchend() {\n        this.hide();\n    }\n\n    initElementRefListeners() {\n        if (this.mcTrigger === 'hover') {\n\n            this.manualListeners\n                .set('mouseenter', () => this.show())\n                .set('mouseleave', () => this.hide())\n                .forEach((listener, event) => this.elementRef.nativeElement.addEventListener(event, listener));\n        }\n\n        if (this.mcTrigger === 'focus') {\n\n            this.manualListeners\n                .set('focus', () => this.show())\n                .set('blur', () => this.hide())\n                .forEach((listener, event) => this.elementRef.nativeElement.addEventListener(event, listener));\n        }\n    }\n\n    show(): void {\n        if (!this.disabled) {\n            if (!this.tooltip) {\n                const overlayRef = this.createOverlay();\n                this.detach();\n\n                this.portal = this.portal || new ComponentPortal(McTooltipComponent, this.hostView);\n\n                this.tooltip = overlayRef.attach(this.portal).instance;\n                this.tooltip.afterHidden()\n                    .pipe(takeUntil(this.destroyed))\n                    .subscribe(() => this.detach());\n                this.isDynamicTooltip = true;\n                const properties = [\n                    'mcTitle',\n                    'mcPlacement',\n                    'mcTrigger',\n                    'mcTooltipDisabled',\n                    'mcMouseEnterDelay',\n                    'mcMouseLeaveDelay',\n                    'mсTooltipClass',\n                    'mcVisible'\n                ];\n                properties.forEach((property) => this.updateCompValue(property, this[ property ]));\n                this.tooltip.mcVisibleChange.pipe(takeUntil(this.$unsubscribe), distinctUntilChanged())\n                    .subscribe((data) => {\n                        this.mcVisible = data;\n                        this.mcVisibleChange.emit(data);\n                        this.isTooltipOpen = data;\n                    });\n            }\n            this.updatePosition();\n            this.tooltip.show();\n        }\n    }\n\n    hide(): void {\n        if (this.tooltip) {\n            this.tooltip.hide();\n        }\n    }\n\n    /** Updates the position of the current tooltip. */\n    updatePosition() {\n        if (!this.overlayRef) {\n            this.overlayRef = this.createOverlay();\n        }\n        const position =\n            this.overlayRef.getConfig().positionStrategy as FlexibleConnectedPositionStrategy;\n        const origin = this.getOrigin();\n        const overlay = this.getOverlayPosition();\n\n        position.withPositions([\n            {...origin.main, ...overlay.main},\n            {...origin.fallback, ...overlay.fallback}\n        ]);\n    }\n\n    /**\n     * Returns the origin position and a fallback position based on the user's position preference.\n     * The fallback position is the inverse of the origin (e.g. `'below' -> 'above'`).\n     */\n    getOrigin(): {main: IOriginConnectionPosition; fallback: IOriginConnectionPosition} {\n        const position = this.mcPlacement;\n        const isLtr = !this.direction || this.direction.value === 'ltr';\n        let originPosition: IOriginConnectionPosition;\n\n        if (position === 'top' || position === 'bottom') {\n            originPosition = {originX: 'center', originY: position === 'top' ? 'top' : 'bottom'};\n        } else if (\n            position === 'top' ||\n            (position === 'left' && isLtr) ||\n            (position === 'right' && !isLtr)) {\n            originPosition = {originX: 'start', originY: 'center'};\n        } else if (\n            position === 'bottom' ||\n            (position === 'right' && isLtr) ||\n            (position === 'left' && !isLtr)) {\n            originPosition = {originX: 'end', originY: 'center'};\n        } else {\n            throw getMcTooltipInvalidPositionError(position);\n        }\n\n        const {x, y} = this.invertPosition(originPosition.originX, originPosition.originY);\n\n        return {\n            main: originPosition,\n            fallback: {originX: x, originY: y}\n        };\n    }\n\n    /** Returns the overlay position and a fallback position based on the user's preference */\n    getOverlayPosition(): {main: IOverlayConnectionPosition; fallback: IOverlayConnectionPosition} {\n        const position = this.mcPlacement;\n        const isLtr = !this.direction || this.direction.value === 'ltr';\n        let overlayPosition: IOverlayConnectionPosition;\n\n        if (position === 'top') {\n            overlayPosition = {overlayX: 'center', overlayY: 'bottom'};\n        } else if (position === 'bottom') {\n            overlayPosition = {overlayX: 'center', overlayY: 'top'};\n        } else if (\n            position === 'top' ||\n            (position === 'left' && isLtr) ||\n            (position === 'right' && !isLtr)) {\n            overlayPosition = {overlayX: 'end', overlayY: 'center'};\n        } else if (\n            position === 'bottom' ||\n            (position === 'right' && isLtr) ||\n            (position === 'left' && !isLtr)) {\n            overlayPosition = {overlayX: 'start', overlayY: 'center'};\n        } else {\n            throw getMcTooltipInvalidPositionError(position);\n        }\n\n        const {x, y} = this.invertPosition(overlayPosition.overlayX, overlayPosition.overlayY);\n\n        return {\n            main: overlayPosition,\n            fallback: {overlayX: x, overlayY: y}\n        };\n    }\n\n    /** Inverts an overlay position. */\n    private invertPosition(x: HorizontalConnectionPos, y: VerticalConnectionPos) {\n        let newX: HorizontalConnectionPos = x;\n        let newY: VerticalConnectionPos = y;\n        if (this.mcPlacement === 'top' || this.mcPlacement === 'bottom') {\n            if (y === 'top') {\n                newY = 'bottom';\n            } else if (y === 'bottom') {\n                newY = 'top';\n            }\n        } else {\n            if (x === 'end') {\n                newX = 'start';\n            } else if (x === 'start') {\n                newX = 'end';\n            }\n        }\n\n        return {x: newX, y: newY};\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { OverlayModule } from '@ptsecurity/cdk/overlay';\n\nimport {\n    McTooltipComponent,\n    McTooltip,\n    MC_TOOLTIP_SCROLL_STRATEGY_FACTORY_PROVIDER\n} from './tooltip.component';\n\n\n@NgModule({\n    declarations: [McTooltipComponent, McTooltip],\n    exports: [McTooltipComponent, McTooltip],\n    imports: [CommonModule, OverlayModule],\n    providers: [MC_TOOLTIP_SCROLL_STRATEGY_FACTORY_PROVIDER],\n    entryComponents: [McTooltipComponent]\n})\nexport class McToolTipModule {\n}\n","import { Version } from '@angular/core';\n\n\nexport const VERSION = new Version('1.0.0-beta.0-eed4b64');\n","export enum TimeParts {\n    hours,\n    minutes,\n    seconds\n}\n\nexport enum TimeFormats {\n    HHmmss = 'HH:mm:ss',\n    HHmm = 'HH:mm'\n}\n\nexport const TIMEFORMAT_PLACEHOLDERS: { [timeFormat: string]: string } = {\n    [TimeFormats.HHmmss]: '  :  :  ',\n    [TimeFormats.HHmm]: '  :  '\n};\n\nexport const DEFAULT_TIME_FORMAT: TimeFormats = TimeFormats.HHmm;\n\nexport const HOURS_MINUTES_SECONDS_REGEXP =\n    new RegExp(/^([0-9]|0[0-9]|1[0-9]|2[0-3]):([0-5][0-9]|[0-9]):([0-5][0-9]|[0-9])?$/);\nexport const HOURS_MINUTES_REGEXP = /^([0-9]|0[0-9]|1[0-9]|2[0-3]):([0-5][0-9]|[0-9])?$/;\nexport const HOURS_ONLY_REGEXP = /^([0-9]|0[0-9]|1[0-9]|2[0-3]):?$/;\n\nexport const SECONDS_PER_MINUTE: number = 59;\nexport const MINUTES_PER_HOUR: number = 59;\nexport const HOURS_PER_DAY: number = 23;\n\n// TODO Move it to common CDK\nexport const ARROW_UP_KEYCODE: string = 'ArrowUp';\nexport const ARROW_DOWN_KEYCODE: string = 'ArrowDown';\nexport const ARROW_LEFT_KEYCODE: string = 'ArrowLeft';\nexport const ARROW_RIGHT_KEYCODE: string = 'ArrowRight';\n","/* tslint:disable:no-empty */\n\nimport { ActiveDescendantKeyManager } from '@ptsecurity/cdk/a11y';\nimport { Directionality } from '@ptsecurity/cdk/bidi';\nimport { coerceBooleanProperty } from '@ptsecurity/cdk/coercion';\nimport { SelectionModel } from '@ptsecurity/cdk/collections';\nimport {\n    DOWN_ARROW,\n    END,\n    ENTER,\n    HOME,\n    LEFT_ARROW,\n    RIGHT_ARROW,\n    SPACE,\n    UP_ARROW,\n    A\n} from '@ptsecurity/cdk/keycodes';\nimport {\n    CdkConnectedOverlay,\n    Overlay,\n    RepositionScrollStrategy,\n    IScrollStrategy,\n    ViewportRuler\n} from '@ptsecurity/cdk/overlay';\n\nimport {\n    AfterContentInit, AfterViewInit,\n    Attribute,\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    ContentChild,\n    ContentChildren,\n    Directive,\n    DoCheck,\n    ElementRef,\n    EventEmitter,\n    Inject,\n    InjectionToken,\n    Input,\n    isDevMode,\n    NgZone,\n    OnChanges,\n    OnDestroy,\n    OnInit,\n    Optional,\n    Output,\n    QueryList, Renderer2,\n    Self,\n    SimpleChanges,\n    ViewChild, ViewChildren,\n    ViewEncapsulation\n} from '@angular/core';\nimport { ControlValueAccessor, FormGroupDirective, NgControl, NgForm } from '@angular/forms';\nimport {\n    _countGroupLabelsBeforeOption,\n    _getOptionScrollPosition,\n    CanDisable,\n    CanDisableCtor,\n    CanUpdateErrorState,\n    CanUpdateErrorStateCtor,\n    ErrorStateMatcher,\n    HasTabIndex, HasTabIndexCtor,\n    MC_OPTION_PARENT_COMPONENT,\n    McOptgroup,\n    McOption,\n    McOptionSelectionChange,\n    mixinDisabled,\n    mixinErrorState,\n    mixinTabIndex\n} from '@ptsecurity/mosaic/core';\n\nimport { McFormField, McFormFieldControl } from '@ptsecurity/mosaic/form-field';\nimport { McTag } from '@ptsecurity/mosaic/tag';\n\n\nimport { defer, merge, Observable, Subject } from 'rxjs';\nimport {\n    filter,\n    map,\n    startWith,\n    switchMap,\n    take,\n    takeUntil,\n    distinctUntilChanged\n} from 'rxjs/operators';\n\nimport {\n    getMcSelectDynamicMultipleError,\n    getMcSelectNonArrayValueError,\n    getMcSelectNonFunctionValueError\n} from './select-errors';\n\nimport { mcSelectAnimations } from './select-animations';\n\n\nlet nextUniqueId = 0;\n\n/**\n * The following style constants are necessary to save here in order\n * to properly calculate the alignment of the selected option over\n * the trigger element.\n */\n\n/** The max height of the select's overlay panel */\nexport const SELECT_PANEL_MAX_HEIGHT = 224;\n\n/** The panel's padding on the x-axis */\nexport const SELECT_PANEL_PADDING_X = 1;\n\n/** The panel's x axis padding if it is indented (e.g. there is an option group). */\n/* tslint:disable-next-line:no-magic-numbers */\nexport const SELECT_PANEL_INDENT_PADDING_X = SELECT_PANEL_PADDING_X * 2;\n\n/** The height of the select items in `em` units. */\nexport const SELECT_ITEM_HEIGHT_EM = 2;\n\n/**\n * The select panel will only \"fit\" inside the viewport if it is positioned at\n * this value or more away from the viewport boundary.\n */\nexport const SELECT_PANEL_VIEWPORT_PADDING = 8;\n\n/** Injection token that determines the scroll handling while a select is open. */\nexport const MC_SELECT_SCROLL_STRATEGY =\n    new InjectionToken<() => IScrollStrategy>('mc-select-scroll-strategy');\n\n/** @docs-private */\nexport function MC_SELECT_SCROLL_STRATEGY_PROVIDER_FACTORY(overlay: Overlay):\n    () => RepositionScrollStrategy {\n    return () => overlay.scrollStrategies.reposition();\n}\n\n/** @docs-private */\nexport const MC_SELECT_SCROLL_STRATEGY_PROVIDER = {\n    provide: MC_SELECT_SCROLL_STRATEGY,\n    deps: [Overlay],\n    useFactory: MC_SELECT_SCROLL_STRATEGY_PROVIDER_FACTORY\n};\n\n/** Change event object that is emitted when the select value has changed. */\nexport class McSelectChange {\n    constructor(\n        /** Reference to the select that emitted the change event. */\n        public source: McSelect,\n        /** Current value of the select that emitted the event. */\n        public value: any) {\n    }\n}\n\n// Boilerplate for applying mixins to McSelect.\n/** @docs-private */\nexport class McSelectBase {\n    constructor(\n        public _elementRef: ElementRef,\n        public _defaultErrorStateMatcher: ErrorStateMatcher,\n        public _parentForm: NgForm,\n        public _parentFormGroup: FormGroupDirective,\n        public ngControl: NgControl\n    ) {}\n}\n\nexport const _McSelectMixinBase:\n    CanDisableCtor &\n    HasTabIndexCtor &\n    CanUpdateErrorStateCtor & typeof McSelectBase\n    = mixinTabIndex(mixinDisabled(mixinErrorState(McSelectBase)));\n\n\n/**\n * Allows the user to customize the trigger that is displayed when the select has a value.\n */\n@Directive({ selector: 'mc-select-trigger' })\nexport class McSelectTrigger {}\n\n\n@Component({\n    selector: 'mc-select',\n    exportAs: 'mcSelect',\n    templateUrl: 'select.html',\n    styleUrls: ['./select.css'],\n    inputs: ['disabled', 'tabIndex'],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    host: {\n        '[attr.id]': 'id',\n        '[attr.tabindex]': 'tabIndex',\n        class: 'mc-select',\n        '[class.mc-disabled]': 'disabled',\n        '[class.mc-select-invalid]': 'errorState',\n        '[class.mc-select-required]': 'required',\n        '(keydown)': '_handleKeydown($event)',\n        '(focus)': '_onFocus()',\n        '(blur)': '_onBlur()',\n        '(window:resize)': '_calculateHiddenItems()'\n    },\n    animations: [\n        mcSelectAnimations.transformPanel,\n        mcSelectAnimations.fadeInContent\n    ],\n    providers: [\n        { provide: McFormFieldControl, useExisting: McSelect },\n        { provide: MC_OPTION_PARENT_COMPONENT, useExisting: McSelect }\n    ]\n})\nexport class McSelect extends _McSelectMixinBase implements\n    AfterContentInit, AfterViewInit, OnChanges, OnDestroy, OnInit, DoCheck, ControlValueAccessor, CanDisable,\n    HasTabIndex, McFormFieldControl<any>, CanUpdateErrorState {\n\n    /** The last measured value for the trigger's client bounding rect. */\n    _triggerRect: ClientRect;\n\n    /** The cached font-size of the trigger element. */\n    _triggerFontSize = 0;\n\n    /** Deals with the selection logic. */\n    _selectionModel: SelectionModel<McOption>;\n\n    /** Manages keyboard events for options in the panel. */\n    _keyManager: ActiveDescendantKeyManager<McOption>;\n\n    /** The IDs of child options to be passed to the aria-owns attribute. */\n    _optionIds: string = '';\n\n    /** The value of the select panel's transform-origin property. */\n    _transformOrigin: string = 'top';\n\n    /** Whether the panel's animation is done. */\n    _panelDoneAnimating: boolean = false;\n\n    /** Emits when the panel element is finished transforming in. */\n    _panelDoneAnimatingStream = new Subject<string>();\n\n    /** Strategy that will be used to handle scrolling while the select panel is open. */\n    _scrollStrategy = this._scrollStrategyFactory();\n\n    /**\n     * The y-offset of the overlay panel in relation to the trigger's top start corner.\n     * This must be adjusted to align the selected option text over the trigger text.\n     * when the panel opens. Will change based on the y-position of the selected option.\n     */\n    _offsetY = 0;\n\n    /**\n     * This position config ensures that the top \"start\" corner of the overlay\n     * is aligned with with the top \"start\" of the origin by default (overlapping\n     * the trigger completely). If the panel cannot fit below the trigger, it\n     * will fall back to a position above the trigger.\n     */\n    _positions = [\n        {\n            originX: 'start',\n            originY: 'bottom',\n            overlayX: 'start',\n            overlayY: 'top'\n        },\n        {\n            originX: 'start',\n            originY: 'top',\n            overlayX: 'start',\n            overlayY: 'bottom'\n        }\n    ];\n\n    /** Whether the select is focused. */\n    get focused(): boolean {\n        return this._focused || this._panelOpen;\n    }\n\n    /**\n     * @deprecated Setter to be removed as this property is intended to be readonly.\n     * @breaking-change 8.0.0\n     */\n    set focused(value: boolean) {\n        this._focused = value;\n    }\n\n    /** A name for this control that can be used by `mc-form-field`. */\n    controlType = 'mc-select';\n\n    @ViewChild('trigger') trigger: ElementRef;\n    @ViewChildren(McTag) tags: QueryList<McTag>;\n\n    @ViewChild('panel') panel: ElementRef;\n\n    /** Overlay pane containing the options. */\n    @ViewChild(CdkConnectedOverlay) overlayDir: CdkConnectedOverlay;\n\n    /** All of the defined select options. */\n    @ContentChildren(McOption, { descendants: true }) options: QueryList<McOption>;\n\n    /** All of the defined groups of options. */\n    @ContentChildren(McOptgroup) optionGroups: QueryList<McOptgroup>;\n\n    /** Classes to be passed to the select panel. Supports the same syntax as `ngClass`. */\n    @Input() panelClass: string | string[] | Set<string> | { [key: string]: any };\n\n    /** User-supplied override of the trigger element. */\n    @ContentChild(McSelectTrigger) customTrigger: McSelectTrigger;\n\n    /** Placeholder to be shown if no value has been selected. */\n    @Input()\n    get placeholder(): string {\n        return this._placeholder;\n    }\n\n    set placeholder(value: string) {\n        this._placeholder = value;\n        this.stateChanges.next();\n    }\n\n    /** Whether the component is required. */\n    @Input()\n    get required(): boolean {\n        return this._required;\n    }\n\n    set required(value: boolean) {\n        this._required = coerceBooleanProperty(value);\n        this.stateChanges.next();\n    }\n\n    /** Whether the user should be allowed to select multiple options. */\n    @Input()\n    get multiple(): boolean {\n        return this._multiple;\n    }\n\n    set multiple(value: boolean) {\n        if (this._selectionModel) {\n            throw getMcSelectDynamicMultipleError();\n        }\n\n        this._multiple = coerceBooleanProperty(value);\n    }\n\n    /**\n     * Function to compare the option values with the selected values. The first argument\n     * is a value from an option. The second is a value from the selection. A boolean\n     * should be returned.\n     */\n    @Input()\n    get compareWith() {\n        return this._compareWith;\n    }\n\n    set compareWith(fn: (o1: any, o2: any) => boolean) {\n        /* tslint:disable-next-line:strict-type-predicates */\n        if (typeof fn !== 'function') {\n            throw getMcSelectNonFunctionValueError();\n        }\n\n        this._compareWith = fn;\n\n        if (this._selectionModel) {\n            // A different comparator means the selection could change.\n            this._initializeSelection();\n        }\n    }\n\n    /** Value of the select control. */\n    @Input()\n    get value(): any {\n        return this._value;\n    }\n\n    set value(newValue: any) {\n        if (newValue !== this._value) {\n            this.writeValue(newValue);\n            this._value = newValue;\n        }\n    }\n\n    /** Object used to control when error messages are shown. */\n    @Input() errorStateMatcher: ErrorStateMatcher;\n\n    /**\n     * Function used to sort the values in a select in multiple mode.\n     * Follows the same logic as `Array.prototype.sort`.\n     */\n    @Input() sortComparator: (a: McOption, b: McOption, options: McOption[]) => number;\n\n    @Input()\n    get id(): string {\n        return this._id;\n    }\n\n    set id(value: string) {\n        this._id = value || this._uid;\n        this.stateChanges.next();\n    }\n\n    /** Combined stream of all of the child options' change events. */\n    readonly optionSelectionChanges: Observable<McOptionSelectionChange> = defer(() => {\n        if (this.options) {\n            return merge(...this.options.map((option) => option.onSelectionChange));\n        }\n\n        return this._ngZone.onStable\n            .asObservable()\n            .pipe(take(1), switchMap(() => this.optionSelectionChanges));\n    });\n\n    /** Event emitted when the select panel has been toggled. */\n    @Output() readonly openedChange: EventEmitter<boolean> = new EventEmitter<boolean>();\n\n    /** Event emitted when the select has been opened. */\n    @Output('opened') readonly _openedStream: Observable<void> =\n        this.openedChange.pipe(filter((o) => o), map(() => {}));\n\n    /** Event emitted when the select has been closed. */\n    @Output('closed') readonly _closedStream: Observable<void> =\n        this.openedChange.pipe(filter((o) => !o), map(() => {}));\n\n    /** Event emitted when the selected value has been changed by the user. */\n    @Output() readonly selectionChange: EventEmitter<McSelectChange> = new EventEmitter<McSelectChange>();\n\n    /**\n     * Event that emits whenever the raw value of the select changes. This is here primarily\n     * to facilitate the two-way binding for the `value` input.\n     * @docs-private\n     */\n    @Output() readonly valueChange: EventEmitter<any> = new EventEmitter<any>();\n\n    hiddenItems: number = 0;\n    oneMoreText: string = '...ещё';\n\n    /** Whether or not the overlay panel is open. */\n    private _panelOpen = false;\n\n    /** Whether filling out the select is required in the form. */\n    private _required: boolean = false;\n\n    /** The scroll position of the overlay panel, calculated to center the selected option. */\n    private _scrollTop = 0;\n\n    /** The placeholder displayed in the trigger of the select. */\n    private _placeholder: string;\n\n    /** Whether the component is in multiple selection mode. */\n    private _multiple: boolean = false;\n\n    /** Unique id for this input. */\n    private readonly _uid = `mc-select-${nextUniqueId++}`;\n\n    /** Emits whenever the component is destroyed. */\n    private readonly _destroy = new Subject<void>();\n\n    private _focused = false;\n\n    private _value: any;\n\n    private _id: string;\n\n    constructor(\n        private readonly _viewportRuler: ViewportRuler,\n        private readonly _changeDetectorRef: ChangeDetectorRef,\n        private readonly _ngZone: NgZone,\n        private readonly _renderer: Renderer2,\n        _defaultErrorStateMatcher: ErrorStateMatcher,\n        elementRef: ElementRef,\n        @Optional() private readonly _dir: Directionality,\n        @Optional() _parentForm: NgForm,\n        @Optional() _parentFormGroup: FormGroupDirective,\n        @Optional() private readonly _parentFormField: McFormField,\n        @Self() @Optional() public ngControl: NgControl,\n        @Attribute('tabindex') tabIndex: string,\n        @Inject(MC_SELECT_SCROLL_STRATEGY) private readonly _scrollStrategyFactory\n    ) {\n        super(elementRef, _defaultErrorStateMatcher, _parentForm, _parentFormGroup, ngControl);\n\n        if (this.ngControl) {\n            // Note: we provide the value accessor through here, instead of\n            // the `providers` to avoid running into a circular import.\n            this.ngControl.valueAccessor = this;\n        }\n\n        this.tabIndex = parseInt(tabIndex) || 0;\n\n        // Force setter to be called in case id was not specified.\n        this.id = this.id;\n    }\n\n    ngOnInit() {\n        this._selectionModel = new SelectionModel<McOption>(this.multiple);\n        this.stateChanges.next();\n\n        // We need `distinctUntilChanged` here, because some browsers will\n        // fire the animation end event twice for the same animation. See:\n        // https://github.com/angular/angular/issues/24084\n        this._panelDoneAnimatingStream\n            .pipe(distinctUntilChanged(), takeUntil(this._destroy))\n            .subscribe(() => {\n                if (this.panelOpen) {\n                    this._scrollTop = 0;\n                    this.openedChange.emit(true);\n                } else {\n                    this.openedChange.emit(false);\n                    this._panelDoneAnimating = false;\n                    this.overlayDir.offsetX = 0;\n                    this._changeDetectorRef.markForCheck();\n                }\n            });\n    }\n\n    ngAfterContentInit() {\n        this._initKeyManager();\n\n        this._selectionModel.onChange!\n            .pipe(takeUntil(this._destroy))\n            .subscribe((event) => {\n                event.added.forEach((option) => option.select());\n                event.removed.forEach((option) => option.deselect());\n            });\n\n        this.options.changes\n            .pipe(startWith(null), takeUntil(this._destroy))\n            .subscribe(() => {\n                this._resetOptions();\n                this._initializeSelection();\n            });\n    }\n\n    ngAfterViewInit(): void {\n        this.tags.changes\n            .subscribe(() => {\n                setTimeout(() => this._calculateHiddenItems(), 0);\n            });\n    }\n\n    ngDoCheck() {\n        if (this.ngControl) { this.updateErrorState(); }\n    }\n\n    ngOnChanges(changes: SimpleChanges) {\n        // Updating the disabled state is handled by `mixinDisabled`, but we need to additionally let\n        // the parent form field know to run change detection when the disabled state changes.\n        if (changes.disabled) {\n            this.stateChanges.next();\n        }\n    }\n\n    ngOnDestroy() {\n        this._destroy.next();\n        this._destroy.complete();\n        this.stateChanges.complete();\n    }\n\n    /** `View -> model callback called when value changes` */\n    _onChange: (value: any) => void = () => {};\n\n    /** `View -> model callback called when select has been touched` */\n    _onTouched = () => {};\n\n    /** Toggles the overlay panel open or closed. */\n    toggle(): void {\n        if (this.panelOpen) {\n            this.close();\n        } else {\n            this.open();\n        }\n    }\n\n    /** Opens the overlay panel. */\n    open(): void {\n        if (this.disabled || !this.options || !this.options.length || this._panelOpen) { return; }\n\n        this._triggerRect = this.trigger.nativeElement.getBoundingClientRect();\n        // Note: The computed font-size will be a string pixel value (e.g. \"16px\").\n        // `parseInt` ignores the trailing 'px' and converts this to a number.\n        this._triggerFontSize = parseInt(getComputedStyle(this.trigger.nativeElement)['font-size']);\n\n        this._panelOpen = true;\n        this._keyManager.withHorizontalOrientation(null);\n        this._calculateOverlayPosition();\n        this._highlightCorrectOption();\n        this._changeDetectorRef.markForCheck();\n\n        // Set the font size on the panel element once it exists.\n        this._ngZone.onStable.asObservable()\n            .pipe(take(1))\n            .subscribe(() => {\n                if (this._triggerFontSize && this.overlayDir.overlayRef &&\n                    this.overlayDir.overlayRef.overlayElement) {\n                    this.overlayDir.overlayRef.overlayElement.style.fontSize = `${this._triggerFontSize}px`;\n                }\n            });\n    }\n\n    /** Closes the overlay panel and focuses the host element. */\n    close(): void {\n        if (this._panelOpen) {\n            this._panelOpen = false;\n            this._keyManager.withHorizontalOrientation(this._isRtl() ? 'rtl' : 'ltr');\n            this._changeDetectorRef.markForCheck();\n            this._onTouched();\n        }\n    }\n\n    /**\n     * Sets the select's value. Part of the ControlValueAccessor interface\n     * required to integrate with Angular's core forms API.\n     *\n     * @param value New value to be written to the model.\n     */\n    writeValue(value: any): void {\n        if (this.options) {\n            this._setSelectionByValue(value);\n        }\n    }\n\n    /**\n     * Saves a callback function to be invoked when the select's value\n     * changes from user input. Part of the ControlValueAccessor interface\n     * required to integrate with Angular's core forms API.\n     *\n     * @param fn Callback to be triggered when the value changes.\n     */\n    registerOnChange(fn: (value: any) => void): void {\n        this._onChange = fn;\n    }\n\n    /**\n     * Saves a callback function to be invoked when the select is blurred\n     * by the user. Part of the ControlValueAccessor interface required\n     * to integrate with Angular's core forms API.\n     *\n     * @param fn Callback to be triggered when the component has been touched.\n     */\n    registerOnTouched(fn: () => {}): void {\n        this._onTouched = fn;\n    }\n\n    /**\n     * Disables the select. Part of the ControlValueAccessor interface required\n     * to integrate with Angular's core forms API.\n     *\n     * @param isDisabled Sets whether the component is disabled.\n     */\n    setDisabledState(isDisabled: boolean): void {\n        this.disabled = isDisabled;\n        this._changeDetectorRef.markForCheck();\n        this.stateChanges.next();\n    }\n\n    get panelOpen(): boolean {\n        return this._panelOpen;\n    }\n\n    get selected(): McOption | McOption[] {\n        return this.multiple ? this._selectionModel.selected : this._selectionModel.selected[0];\n    }\n\n    get triggerValue(): string {\n        if (this.empty) { return ''; }\n\n        if (this._multiple) {\n            const selectedOptions = this._selectionModel.selected.map((option) => option.viewValue);\n\n            if (this._isRtl()) { selectedOptions.reverse(); }\n\n            return selectedOptions.join(', ');\n        }\n\n        return this._selectionModel.selected[0].viewValue;\n    }\n\n    get triggerValues(): McOption[] {\n        if (this.empty) { return []; }\n\n        if (this._multiple) {\n            const selectedOptions = this._selectionModel.selected;\n\n            if (this._isRtl()) { selectedOptions.reverse(); }\n\n            return selectedOptions;\n        }\n\n        return [this._selectionModel.selected[0]];\n    }\n\n    get empty(): boolean {\n        return !this._selectionModel || this._selectionModel.isEmpty();\n    }\n\n    _isRtl(): boolean {\n        return this._dir ? this._dir.value === 'rtl' : false;\n    }\n\n    _handleKeydown(event: KeyboardEvent): void {\n        if (!this.disabled) {\n            if (this.panelOpen) {\n                this._handleOpenKeydown(event);\n            } else {\n                this._handleClosedKeydown(event);\n            }\n        }\n    }\n\n    /**\n     * When the panel content is done fading in, the _panelDoneAnimating property is\n     * set so the proper class can be added to the panel.\n     */\n    _onFadeInDone(): void {\n        this._panelDoneAnimating = this.panelOpen;\n        this._changeDetectorRef.markForCheck();\n    }\n\n    _onFocus() {\n        if (!this.disabled) {\n            this._focused = true;\n            this.stateChanges.next();\n        }\n    }\n\n    /**\n     * Calls the touched callback only if the panel is closed. Otherwise, the trigger will\n     * \"blur\" to the panel when it opens, causing a false positive.\n     */\n    _onBlur() {\n        this._focused = false;\n\n        if (!this.disabled && !this.panelOpen) {\n            this._onTouched();\n            this._changeDetectorRef.markForCheck();\n            this.stateChanges.next();\n        }\n    }\n\n    /**\n     * Callback that is invoked when the overlay panel has been attached.\n     */\n    _onAttached(): void {\n        this.overlayDir.positionChange\n            .pipe(take(1))\n            .subscribe(() => {\n                this._changeDetectorRef.detectChanges();\n                this._calculateOverlayOffsetX();\n                this.panel.nativeElement.scrollTop = this._scrollTop;\n            });\n    }\n\n    /** Returns the theme to be used on the panel. */\n    _getPanelTheme(): string {\n        return this._parentFormField ? `mc-${this._parentFormField.color}` : '';\n    }\n\n    /** Focuses the select element. */\n    focus(): void {\n        this._elementRef.nativeElement.focus();\n    }\n\n    /**\n     * Calculates the scroll position of the select's overlay panel.\n     *\n     * Attempts to center the selected option in the panel. If the option is\n     * too high or too low in the panel to be scrolled to the center, it clamps the\n     * scroll position to the min or max scroll positions respectively.\n     */\n    _calculateOverlayScroll(selectedIndex: number, scrollBuffer: number, maxScroll: number): number {\n        const itemHeight = this._getItemHeight();\n        const optionOffsetFromScrollTop = itemHeight * selectedIndex;\n\n        /* tslint:disable-next-line:no-magic-numbers */\n        const halfOptionHeight = itemHeight / 2;\n\n        // Starts at the optionOffsetFromScrollTop, which scrolls the option to the top of the\n        // scroll container, then subtracts the scroll buffer to scroll the option down to\n        // the center of the overlay panel. Half the option height must be re-added to the\n        // scrollTop so the option is centered based on its middle, not its top edge.\n        const optimalScrollPosition = optionOffsetFromScrollTop - scrollBuffer + halfOptionHeight;\n\n        return Math.min(Math.max(0, optimalScrollPosition), maxScroll);\n    }\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    onContainerClick() {\n        this.focus();\n        this.open();\n    }\n\n    /** Invoked when an option is clicked. */\n    onRemoveMatcherItem(option: McOption, $event): void {\n        $event.stopPropagation();\n\n        option.deselect();\n    }\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    get shouldLabelFloat(): boolean {\n        return this._panelOpen || !this.empty;\n    }\n\n    _calculateHiddenItems(): void {\n        if (this.empty) { return; }\n\n        let visibleItems: number = 0;\n        const totalItemsWidth = this._getTotalItemsWidthInMatcher();\n        let totalVisibleItemsWidth: number = 0;\n        const itemMargin: number = 4;\n\n        this.tags.forEach((tag) => {\n            if (tag.nativeElement.offsetTop < tag.nativeElement.offsetHeight) {\n                totalVisibleItemsWidth += tag.nativeElement.getBoundingClientRect().width + itemMargin;\n                visibleItems++;\n            }\n        });\n\n        this.hiddenItems = (this.selected as ArrayLike<McOption>).length - visibleItems;\n\n        if (this.hiddenItems) {\n            const itemsCounter = this.trigger.nativeElement.querySelector('.mc-select__match-hidden-text');\n            const matcherList = this.trigger.nativeElement.querySelector('.mc-select__match-list');\n\n            const itemsCounterShowed = itemsCounter.offsetTop < itemsCounter.offsetHeight;\n            // const itemsCounterWidth: number = itemsCounter.getBoundingClientRect().width;\n            const itemsCounterWidth: number = 86;\n\n            const matcherListWidth: number = matcherList.getBoundingClientRect().width;\n            const matcherWidth: number = matcherListWidth + itemsCounterWidth;\n\n            if (itemsCounterShowed && (totalItemsWidth < matcherWidth)) { this.hiddenItems = 0; }\n\n            if (\n                totalVisibleItemsWidth === matcherListWidth ||\n                (totalVisibleItemsWidth + itemsCounterWidth) < matcherListWidth\n            ) {\n                this._changeDetectorRef.markForCheck();\n\n                return ;\n            } else if (!itemsCounterShowed && (totalItemsWidth + itemsCounterWidth) > matcherWidth) {\n                this.hiddenItems++;\n            }\n        }\n\n        this._changeDetectorRef.markForCheck();\n    }\n\n    private _getTotalItemsWidthInMatcher(): number {\n        const triggerClone = this.trigger.nativeElement.cloneNode(true);\n        triggerClone.querySelector('.mc-select__match-hidden-text').remove();\n\n        this._renderer.setStyle(triggerClone, 'position', 'absolute');\n        this._renderer.setStyle(triggerClone, 'visibility', 'hidden');\n        this._renderer.setStyle(triggerClone, 'top', '-100%');\n        this._renderer.setStyle(triggerClone, 'left', '0');\n\n        this._renderer.appendChild(this.trigger.nativeElement, triggerClone);\n\n        let totalItemsWidth: number = 0;\n        const itemMargin: number = 4;\n        triggerClone.querySelectorAll('mc-tag').forEach((item) => {\n            totalItemsWidth += item.getBoundingClientRect().width as number + itemMargin;\n        });\n\n        triggerClone.remove();\n\n        return totalItemsWidth;\n    }\n\n    /** Handles keyboard events while the select is closed. */\n    private _handleClosedKeydown(event: KeyboardEvent): void {\n        /* tslint:disable-next-line */\n        const keyCode = event.keyCode;\n        const isArrowKey = keyCode === DOWN_ARROW || keyCode === UP_ARROW ||\n            keyCode === LEFT_ARROW || keyCode === RIGHT_ARROW;\n        const isOpenKey = keyCode === ENTER || keyCode === SPACE;\n\n        // Open the select on ALT + arrow key to match the native <select>\n        if (isOpenKey || ((this.multiple || event.altKey) && isArrowKey)) {\n            event.preventDefault(); // prevents the page from scrolling down when pressing space\n            this.open();\n        } else if (!this.multiple) {\n            this._keyManager.onKeydown(event);\n        }\n    }\n\n    /** Handles keyboard events when the selected is open. */\n    private _handleOpenKeydown(event: KeyboardEvent): void {\n        /* tslint:disable-next-line */\n        const keyCode = event.keyCode;\n        const isArrowKey = keyCode === DOWN_ARROW || keyCode === UP_ARROW;\n        const manager = this._keyManager;\n\n        if (keyCode === HOME || keyCode === END) {\n            event.preventDefault();\n\n            if (keyCode === HOME) {\n                manager.setFirstItemActive();\n            } else {\n                manager.setLastItemActive();\n            }\n\n        } else if (isArrowKey && event.altKey) {\n            // Close the select on ALT + arrow key to match the native <select>\n            event.preventDefault();\n            this.close();\n        } else if ((keyCode === ENTER || keyCode === SPACE) && manager.activeItem) {\n            event.preventDefault();\n            manager.activeItem._selectViaInteraction();\n        } else if (this._multiple && keyCode === A && event.ctrlKey) {\n            event.preventDefault();\n            const hasDeselectedOptions = this.options.some((option) => !option.selected);\n            this.options.forEach((option) => {\n                if (hasDeselectedOptions && !option.disabled) {\n                    option.select();\n                } else {\n                    option.deselect();\n                }\n            });\n        } else {\n            const previouslyFocusedIndex = manager.activeItemIndex;\n\n            manager.onKeydown(event);\n\n            if (this._multiple && isArrowKey && event.shiftKey && manager.activeItem &&\n                manager.activeItemIndex !== previouslyFocusedIndex) {\n                manager.activeItem._selectViaInteraction();\n            }\n        }\n    }\n\n    private _initializeSelection(): void {\n        // Defer setting the value in order to avoid the \"Expression\n        // has changed after it was checked\" errors from Angular.\n        Promise.resolve().then(() => {\n            this._setSelectionByValue(this.ngControl ? this.ngControl.value : this._value);\n        });\n    }\n\n    /**\n     * Sets the selected option based on a value. If no option can be\n     * found with the designated value, the select trigger is cleared.\n     */\n    private _setSelectionByValue(value: any | any[]): void {\n        if (this.multiple && value) {\n            if (!Array.isArray(value)) {\n                throw getMcSelectNonArrayValueError();\n            }\n\n            this._selectionModel.clear();\n            value.forEach((currentValue: any) => this._selectValue(currentValue));\n            this._sortValues();\n        } else {\n            this._selectionModel.clear();\n            const correspondingOption = this._selectValue(value);\n\n            // Shift focus to the active item. Note that we shouldn't do this in multiple\n            // mode, because we don't know what option the user interacted with last.\n            if (correspondingOption) {\n                this._keyManager.setActiveItem(correspondingOption);\n            }\n        }\n\n        this._changeDetectorRef.markForCheck();\n    }\n\n    /**\n     * Finds and selects and option based on its value.\n     * @returns Option that has the corresponding value.\n     */\n    private _selectValue(value: any): McOption | undefined {\n        const correspondingOption = this.options.find((option: McOption) => {\n            try {\n                // Treat null as a special reset value.\n                return option.value != null && this._compareWith(option.value, value);\n            } catch (error) {\n                if (isDevMode()) {\n                    // Notify developers of errors in their comparator.\n                    console.warn(error);\n                }\n\n                return false;\n            }\n        });\n\n        if (correspondingOption) {\n            this._selectionModel.select(correspondingOption);\n        }\n\n        return correspondingOption;\n    }\n\n    /** Sets up a key manager to listen to keyboard events on the overlay panel. */\n    private _initKeyManager() {\n        this._keyManager = new ActiveDescendantKeyManager<McOption>(this.options)\n            .withTypeAhead()\n            .withVerticalOrientation()\n            .withHorizontalOrientation(this._isRtl() ? 'rtl' : 'ltr');\n\n        this._keyManager.tabOut\n            .pipe(takeUntil(this._destroy))\n            .subscribe(() => {\n                // Restore focus to the trigger before closing. Ensures that the focus\n                // position won't be lost if the user got focus into the overlay.\n                this.focus();\n                this.close();\n            });\n\n        this._keyManager.change\n            .pipe(takeUntil(this._destroy))\n            .subscribe(() => {\n                if (this._panelOpen && this.panel) {\n                    this._scrollActiveOptionIntoView();\n                } else if (!this._panelOpen && !this.multiple && this._keyManager.activeItem) {\n                    this._keyManager.activeItem._selectViaInteraction();\n                }\n            });\n    }\n\n    /** Drops current option subscriptions and IDs and resets from scratch. */\n    private _resetOptions(): void {\n        const changedOrDestroyed = merge(this.options.changes, this._destroy);\n\n        this.optionSelectionChanges\n            .pipe(takeUntil(changedOrDestroyed))\n            .subscribe((event) => {\n                this._onSelect(event.source, event.isUserInput);\n\n                if (event.isUserInput && !this.multiple && this._panelOpen) {\n                    this.close();\n                    this.focus();\n                }\n            });\n\n        // Listen to changes in the internal state of the options and react accordingly.\n        // Handles cases like the labels of the selected options changing.\n        merge(...this.options.map((option) => option._stateChanges))\n            .pipe(takeUntil(changedOrDestroyed))\n            .subscribe(() => {\n                this._changeDetectorRef.markForCheck();\n                this.stateChanges.next();\n            });\n\n        this._setOptionIds();\n    }\n\n    /** Invoked when an option is clicked. */\n    private _onSelect(option: McOption, isUserInput: boolean): void {\n        const wasSelected = this._selectionModel.isSelected(option);\n\n        if (option.value == null && !this._multiple) {\n            option.deselect();\n            this._selectionModel.clear();\n            this._propagateChanges(option.value);\n        } else {\n            if (option.selected) {\n                this._selectionModel.select(option);\n            } else {\n                this._selectionModel.deselect(option);\n            }\n\n            if (isUserInput) {\n                this._keyManager.setActiveItem(option);\n            }\n\n            if (this.multiple) {\n                this._sortValues();\n\n                if (isUserInput) {\n                    // In case the user selected the option with their mouse, we\n                    // want to restore focus back to the trigger, in order to\n                    // prevent the select keyboard controls from clashing with\n                    // the ones from `mc-option`.\n                    this.focus();\n                }\n            }\n        }\n\n        if (wasSelected !== this._selectionModel.isSelected(option)) {\n            this._propagateChanges();\n        }\n\n        this.stateChanges.next();\n    }\n\n    /** Sorts the selected values in the selected based on their order in the panel. */\n    private _sortValues() {\n        if (this.multiple) {\n            const options = this.options.toArray();\n\n            this._selectionModel.sort((a, b) => {\n                return this.sortComparator ? this.sortComparator(a, b, options) :\n                    options.indexOf(a) - options.indexOf(b);\n            });\n            this.stateChanges.next();\n        }\n    }\n\n    /** Emits change event to set the model value. */\n    private _propagateChanges(fallbackValue?: any): void {\n        let valueToEmit: any = null;\n\n        if (this.multiple) {\n            valueToEmit = (this.selected as McOption[]).map((option) => option.value);\n        } else {\n            valueToEmit = this.selected ? (this.selected as McOption).value : fallbackValue;\n        }\n\n        this._value = valueToEmit;\n        this.valueChange.emit(valueToEmit);\n        this._onChange(valueToEmit);\n        this.selectionChange.emit(new McSelectChange(this, valueToEmit));\n        this._changeDetectorRef.markForCheck();\n    }\n\n    /** Records option IDs to pass to the aria-owns property. */\n    private _setOptionIds() {\n        this._optionIds = this.options.map((option) => option.id).join(' ');\n    }\n\n    /**\n     * Highlights the selected item. If no option is selected, it will highlight\n     * the first item instead.\n     */\n    private _highlightCorrectOption(): void {\n        if (this._keyManager) {\n            if (this.empty) {\n                this._keyManager.setFirstItemActive();\n            } else {\n                this._keyManager.setActiveItem(this._selectionModel.selected[0]);\n            }\n        }\n    }\n\n    /** Scrolls the active option into view. */\n    private _scrollActiveOptionIntoView(): void {\n        const activeOptionIndex = this._keyManager.activeItemIndex || 0;\n        const labelCount = _countGroupLabelsBeforeOption(activeOptionIndex, this.options, this.optionGroups);\n\n        this.panel.nativeElement.scrollTop = _getOptionScrollPosition(\n            activeOptionIndex + labelCount,\n            this._getItemHeight(),\n            this.panel.nativeElement.scrollTop,\n            SELECT_PANEL_MAX_HEIGHT\n        );\n    }\n\n    /** Gets the index of the provided option in the option list. */\n    private _getOptionIndex(option: McOption): number | undefined {\n        /* tslint:disable-next-line */\n        return this.options.reduce((result: number, current: McOption, index: number) => {\n            /* tslint:disable-next-line:strict-type-predicates */\n            return result === undefined ? (option === current ? index : undefined) : result;\n        }, undefined);\n    }\n\n    /** Calculates the scroll position and x- and y-offsets of the overlay panel. */\n    private _calculateOverlayPosition(): void {\n        const itemHeight = this._getItemHeight();\n        const items = this._getItemCount();\n        const panelHeight = Math.min(items * itemHeight, SELECT_PANEL_MAX_HEIGHT);\n        const scrollContainerHeight = items * itemHeight;\n\n        // The farthest the panel can be scrolled before it hits the bottom\n        const maxScroll = scrollContainerHeight - panelHeight;\n\n        // If no value is selected we open the popup to the first item.\n        let selectedOptionOffset =\n            this.empty ? 0 : this._getOptionIndex(this._selectionModel.selected[0])!;\n\n        selectedOptionOffset += _countGroupLabelsBeforeOption(selectedOptionOffset, this.options,\n            this.optionGroups);\n\n        // We must maintain a scroll buffer so the selected option will be scrolled to the\n        // center of the overlay panel rather than the top.\n        /* tslint:disable-next-line:no-magic-numbers */\n        const scrollBuffer = panelHeight / 2;\n        this._scrollTop = this._calculateOverlayScroll(selectedOptionOffset, scrollBuffer, maxScroll);\n        this._offsetY = this._calculateOverlayOffsetY();\n\n        this._checkOverlayWithinViewport(maxScroll);\n    }\n\n    /**\n     * Sets the x-offset of the overlay panel in relation to the trigger's top start corner.\n     * This must be adjusted to align the selected option text over the trigger text when\n     * the panel opens. Will change based on LTR or RTL text direction. Note that the offset\n     * can't be calculated until the panel has been attached, because we need to know the\n     * content width in order to constrain the panel within the viewport.\n     */\n    private _calculateOverlayOffsetX(): void {\n        const overlayRect = this.overlayDir.overlayRef.overlayElement.getBoundingClientRect();\n        const viewportSize = this._viewportRuler.getViewportSize();\n        const isRtl = this._isRtl();\n        /* tslint:disable-next-line:no-magic-numbers */\n        const paddingWidth = SELECT_PANEL_PADDING_X * 2;\n        let offsetX: number;\n\n        const selected = this._selectionModel.selected[0] || this.options.first;\n        offsetX = selected && selected.group ? SELECT_PANEL_INDENT_PADDING_X : SELECT_PANEL_PADDING_X;\n\n        // Invert the offset in LTR.\n        if (!isRtl) { offsetX *= -1; }\n\n        // Determine how much the select overflows on each side.\n        const leftOverflow = 0 - (overlayRect.left + offsetX - (isRtl ? paddingWidth : 0));\n        const rightOverflow = overlayRect.right + offsetX - viewportSize.width\n            + (isRtl ? 0 : paddingWidth);\n\n        // If the element overflows on either side, reduce the offset to allow it to fit.\n        if (leftOverflow > 0) {\n            offsetX += leftOverflow + SELECT_PANEL_VIEWPORT_PADDING;\n        } else if (rightOverflow > 0) {\n            offsetX -= rightOverflow + SELECT_PANEL_VIEWPORT_PADDING;\n        }\n\n        // Set the offset directly in order to avoid having to go through change detection and\n        // potentially triggering \"changed after it was checked\" errors. Round the value to avoid\n        // blurry content in some browsers.\n        this.overlayDir.offsetX = Math.round(offsetX);\n        this.overlayDir.overlayRef.updatePosition();\n    }\n\n    /**\n     * Calculates the y-offset of the select's overlay panel in relation to the\n     * top start corner of the trigger. It has to be adjusted in order for the\n     * selected option to be aligned over the trigger when the panel opens.\n     */\n    private _calculateOverlayOffsetY(): number {\n        // const itemHeight = this._getItemHeight();\n        // const optionHeightAdjustment = (itemHeight - this._triggerRect.height) / 2;\n\n        // todo I'm not sure that we will use it\n        return 0;\n        // return Math.round(-optionHeightAdjustment);\n    }\n\n    /**\n     * Checks that the attempted overlay position will fit within the viewport.\n     * If it will not fit, tries to adjust the scroll position and the associated\n     * y-offset so the panel can open fully on-screen. If it still won't fit,\n     * sets the offset back to 0 to allow the fallback position to take over.\n     */\n    private _checkOverlayWithinViewport(maxScroll: number): void {\n        const itemHeight = this._getItemHeight();\n        const viewportSize = this._viewportRuler.getViewportSize();\n\n        const topSpaceAvailable = this._triggerRect.top - SELECT_PANEL_VIEWPORT_PADDING;\n        const bottomSpaceAvailable =\n            viewportSize.height - this._triggerRect.bottom - SELECT_PANEL_VIEWPORT_PADDING;\n\n        const panelHeightTop = Math.abs(this._offsetY);\n        const totalPanelHeight =\n            Math.min(this._getItemCount() * itemHeight, SELECT_PANEL_MAX_HEIGHT);\n        const panelHeightBottom = totalPanelHeight - panelHeightTop - this._triggerRect.height;\n\n        if (panelHeightBottom > bottomSpaceAvailable) {\n            this._adjustPanelUp(panelHeightBottom, bottomSpaceAvailable);\n        } else if (panelHeightTop > topSpaceAvailable) {\n            this._adjustPanelDown(panelHeightTop, topSpaceAvailable, maxScroll);\n        } else {\n            this._transformOrigin = this._getOriginBasedOnOption();\n        }\n    }\n\n    /** Adjusts the overlay panel up to fit in the viewport. */\n    private _adjustPanelUp(panelHeightBottom: number, bottomSpaceAvailable: number) {\n        // Browsers ignore fractional scroll offsets, so we need to round.\n        const distanceBelowViewport = Math.round(panelHeightBottom - bottomSpaceAvailable);\n\n        // Scrolls the panel up by the distance it was extending past the boundary, then\n        // adjusts the offset by that amount to move the panel up into the viewport.\n        this._scrollTop -= distanceBelowViewport;\n        this._offsetY -= distanceBelowViewport;\n        this._transformOrigin = this._getOriginBasedOnOption();\n\n        // If the panel is scrolled to the very top, it won't be able to fit the panel\n        // by scrolling, so set the offset to 0 to allow the fallback position to take\n        // effect.\n        if (this._scrollTop <= 0) {\n            this._scrollTop = 0;\n            this._offsetY = 0;\n            this._transformOrigin = `50% bottom 0px`;\n        }\n    }\n\n    /** Adjusts the overlay panel down to fit in the viewport. */\n    private _adjustPanelDown(panelHeightTop: number, topSpaceAvailable: number, maxScroll: number) {\n        // Browsers ignore fractional scroll offsets, so we need to round.\n        const distanceAboveViewport = Math.round(panelHeightTop - topSpaceAvailable);\n\n        // Scrolls the panel down by the distance it was extending past the boundary, then\n        // adjusts the offset by that amount to move the panel down into the viewport.\n        this._scrollTop += distanceAboveViewport;\n        this._offsetY += distanceAboveViewport;\n        this._transformOrigin = this._getOriginBasedOnOption();\n\n        // If the panel is scrolled to the very bottom, it won't be able to fit the\n        // panel by scrolling, so set the offset to 0 to allow the fallback position\n        // to take effect.\n        if (this._scrollTop >= maxScroll) {\n            this._scrollTop = maxScroll;\n            this._offsetY = 0;\n            this._transformOrigin = `50% top 0px`;\n\n            return;\n        }\n    }\n\n    /** Sets the transform origin point based on the selected option. */\n    private _getOriginBasedOnOption(): string {\n        const itemHeight = this._getItemHeight();\n        /* tslint:disable-next-line:no-magic-numbers */\n        const optionHeightAdjustment = (itemHeight - this._triggerRect.height) / 2;\n        /* tslint:disable-next-line:no-magic-numbers */\n        const originY = Math.abs(this._offsetY) - optionHeightAdjustment + itemHeight / 2;\n\n        return `50% ${originY}px 0px`;\n    }\n\n    /** Calculates the amount of items in the select. This includes options and group labels. */\n    private _getItemCount(): number {\n        return this.options.length + this.optionGroups.length;\n    }\n\n    /** Calculates the height of the select's options. */\n    private _getItemHeight(): number {\n        /* tslint:disable-next-line:no-magic-numbers */\n        return 32;\n        // return this._triggerFontSize * SELECT_ITEM_HEIGHT_EM;\n    }\n\n    /** Comparison function to specify which option is displayed. Defaults to object equality. */\n    private _compareWith = (o1: any, o2: any) => o1 === o2;\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { OverlayModule } from '@ptsecurity/cdk/overlay';\nimport { McOptionModule } from '@ptsecurity/mosaic/core';\nimport { McFormFieldModule } from '@ptsecurity/mosaic/form-field';\nimport { McIconModule } from '@ptsecurity/mosaic/icon';\nimport { McTagModule } from '@ptsecurity/mosaic/tag';\n\nimport { MC_SELECT_SCROLL_STRATEGY_PROVIDER, McSelect, McSelectTrigger } from './select.component';\n\n\n@NgModule({\n    imports: [\n        CommonModule,\n        OverlayModule,\n        McOptionModule,\n        McIconModule,\n        McTagModule\n    ],\n    exports: [McFormFieldModule, McSelect, McSelectTrigger, McOptionModule, CommonModule],\n    declarations: [McSelect, McSelectTrigger],\n    providers: [MC_SELECT_SCROLL_STRATEGY_PROVIDER]\n})\nexport class McSelectModule {}\n","import {\n    ChangeDetectionStrategy,\n    Component,\n    Directive,\n    ElementRef,\n    Input,\n    NgZone, OnDestroy,\n    OnInit,\n    Renderer2,\n    ViewEncapsulation\n} from '@angular/core';\n\nimport { coerceBooleanProperty, coerceCssPixelValue, coerceNumberProperty } from '@ptsecurity/cdk/coercion';\n\n\ninterface IArea {\n    area: McSplitterAreaDirective;\n    index: number;\n    order: number;\n    initialSize: number;\n}\n\ninterface IPoint {\n    x: number;\n    y: number;\n}\n\n\nconst enum AttributeProperty {\n    Disabled = 'disabled'\n}\n\nconst enum Cursor {\n    Default = 'default',\n    ResizeColumn = 'col-resize',\n    ResizeRow = 'row-resize'\n}\n\nconst enum StyleProperty {\n    Cursor = 'cursor',\n    Flex = 'flex',\n    FlexBasis = 'flex-basis',\n    FlexDirection = 'flex-direction',\n    Height = 'height',\n    MaxWidth = 'max-width',\n    MinHeight = 'min-height',\n    MinWidth = 'minWidth',\n    OffsetHeight = 'offsetHeight',\n    OffsetWidth = 'offsetWidth',\n    Order = 'order',\n    Width = 'width'\n}\n\nconst enum State {\n    Disabled = 'disabled',\n    Horizontal = 'horizontal',\n    Vertical = 'vertical'\n}\n\nexport const enum Direction {\n    Horizontal = 'horizontal',\n    Vertical = 'vertical'\n}\n\n@Component({\n    selector: 'mc-splitter',\n    preserveWhitespaces: false,\n    styleUrls: ['splitter.css'],\n    templateUrl: './splitter.component.html',\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class McSplitterComponent implements OnInit {\n    readonly areas: IArea[] = [];\n\n    private _direction: Direction;\n    private _disabled: boolean = false;\n    private _gutterSize: number = 6;\n\n    private isDragging: boolean = false;\n\n    private readonly areaPositionDivider: number = 2;\n    private readonly listeners: (() => void)[] = [];\n\n    @Input()\n    set direction(direction: Direction) {\n        this._direction = direction;\n    }\n\n    get direction(): Direction {\n        return this._direction;\n    }\n\n    @Input()\n    set disabled(disabled: boolean) {\n        this._disabled = coerceBooleanProperty(disabled);\n    }\n\n    get disabled(): boolean {\n        return this._disabled;\n    }\n\n    @Input()\n    set gutterSize(gutterSize: number) {\n        const size = coerceNumberProperty(gutterSize);\n        this._gutterSize = size > 0 ? size : this.gutterSize;\n    }\n\n    get gutterSize(): number {\n        return this._gutterSize;\n    }\n\n    constructor(private elementRef: ElementRef,\n                private ngZone: NgZone,\n                private renderer: Renderer2) {}\n\n    addArea(area: McSplitterAreaDirective): void {\n        const index: number = this.areas.length;\n        const order: number = index * this.areaPositionDivider;\n        const size: number = area.getSize();\n\n        area.setOrder(order);\n\n        this.areas.push({\n            area,\n            index,\n            order,\n            initialSize: size\n        });\n    }\n\n    ngOnInit(): void {\n        if (!this.direction) {\n            this.direction = Direction.Horizontal;\n        }\n\n        this.setStyle(StyleProperty.FlexDirection, this.isVertical() ? 'column' : 'row');\n    }\n\n    onMouseDown(event: MouseEvent, leftAreaIndex: number, rightAreaIndex: number) {\n        if (this.disabled) {\n            return;\n        }\n\n        const leftArea = this.areas[leftAreaIndex];\n        const rightArea = this.areas[rightAreaIndex];\n\n        const startPoint: IPoint = {\n            x: event.screenX,\n            y: event.screenY\n        };\n\n        leftArea.initialSize = leftArea.area.getSize();\n        rightArea.initialSize = rightArea.area.getSize();\n\n        this.areas.forEach((item) => {\n            const size = item.area.getSize();\n            item.area.disableFlex();\n            item.area.setSize(size);\n        });\n\n        this.ngZone.runOutsideAngular(() => {\n            this.listeners.push(\n                this.renderer.listen(\n                    'document',\n                    'mouseup',\n                    () => this.onMouseUp()\n                )\n            );\n        });\n\n        this.ngZone.runOutsideAngular(() => {\n            this.listeners.push(\n                this.renderer.listen(\n                    'document',\n                    'mousemove',\n                    (e: MouseEvent) => this.onMouseMove(e, startPoint, leftArea, rightArea)\n                )\n            );\n        });\n\n        this.isDragging = true;\n    }\n\n    removeArea(area: McSplitterAreaDirective): void {\n        let indexToRemove: number = -1;\n\n        this.areas.some((item, index) => {\n            if (item.area === area) {\n                indexToRemove = index;\n\n                return true;\n            }\n\n            return false;\n        });\n\n        if (indexToRemove === -1) {\n            return;\n        }\n\n        this.areas.splice(indexToRemove, 1);\n    }\n\n    private isVertical(): boolean {\n        return this.direction === Direction.Vertical;\n    }\n\n    private onMouseMove(event: MouseEvent, startPoint: IPoint, leftArea: IArea, rightArea: IArea) {\n        if (!this.isDragging || this.disabled) {\n            return;\n        }\n\n        const endPoint: IPoint = {\n            x: event.screenX,\n            y: event.screenY\n        };\n\n        const offset = this.isVertical()\n            ? startPoint.y - endPoint.y\n            : startPoint.x - endPoint.x;\n\n        const newLeftAreaSize = leftArea.initialSize - offset;\n        const newRightAreaSize = rightArea.initialSize + offset;\n\n        const minLeftAreaSize = leftArea.area.getMinSize();\n        const minRightAreaSize = rightArea.area.getMinSize();\n\n        if (newLeftAreaSize <= minLeftAreaSize || newRightAreaSize <= minRightAreaSize) {\n            const rightAreaOffset = leftArea.initialSize - minLeftAreaSize;\n\n            leftArea.area.setSize(minLeftAreaSize);\n            rightArea.area.setSize(rightArea.initialSize + rightAreaOffset);\n        } else if (newLeftAreaSize <= 0) {\n            leftArea.area.setSize(0);\n            rightArea.area.setSize(rightArea.initialSize + leftArea.initialSize);\n        } else if (newRightAreaSize <= 0) {\n            leftArea.area.setSize(rightArea.initialSize + leftArea.initialSize);\n            rightArea.area.setSize(0);\n        } else {\n            leftArea.area.setSize(newLeftAreaSize);\n            rightArea.area.setSize(newRightAreaSize);\n        }\n    }\n\n    private onMouseUp() {\n        while (this.listeners.length > 0) {\n            const unsubscribe = this.listeners.pop();\n\n            if (unsubscribe) {\n                unsubscribe();\n            }\n        }\n\n        this.isDragging = false;\n    }\n\n    private setStyle(property: StyleProperty, value: string | number) {\n        this.renderer.setStyle(this.elementRef.nativeElement, property, value);\n    }\n}\n\n@Directive({\n    selector: 'mc-gutter'\n})\nexport class McGutterDirective implements OnInit {\n    private _direction: Direction = Direction.Vertical;\n    private _disabled: boolean = false;\n    private _order: number = 0;\n    private _size: number = 6;\n\n    @Input()\n    set direction(direction: Direction) {\n        this._direction = direction;\n    }\n\n    get direction(): Direction {\n        return this._direction;\n    }\n\n    @Input()\n    set disabled(disabled: boolean) {\n        this._disabled = coerceBooleanProperty(disabled);\n    }\n\n    get disabled(): boolean {\n        return this._disabled;\n    }\n\n    @Input()\n    set order(order: number) {\n        this._order = coerceNumberProperty(order);\n    }\n\n    get order(): number {\n        return this._order;\n    }\n\n    @Input()\n    set size(size: number) {\n        this._size = coerceNumberProperty(size);\n    }\n\n    get size(): number {\n        return this._size;\n    }\n\n    constructor(private renderer: Renderer2,\n                private elementRef: ElementRef) {\n    }\n\n    ngOnInit(): void {\n        this.setStyle(StyleProperty.Cursor, this.getCursor(this.getState()));\n        this.setStyle(StyleProperty.FlexBasis, coerceCssPixelValue(this.size));\n        this.setStyle(this.isVertical() ? StyleProperty.Height : StyleProperty.Width, coerceCssPixelValue(this.size));\n        this.setStyle(StyleProperty.Order, this.order);\n\n        if (!this.isVertical()) {\n            this.setStyle(StyleProperty.Height, '100%');\n        }\n\n        if (this.disabled) {\n            this.setAttr(AttributeProperty.Disabled, 'true');\n        }\n\n        // fix IE issue with gutter icon. flex-direction is requied for flex alignment options\n        this.setStyle(StyleProperty.FlexDirection, this.isVertical() ? 'row' : 'column');\n    }\n\n    private isVertical(): boolean {\n        return this.direction === Direction.Vertical;\n    }\n\n    private getCursor(state: State): string {\n        switch (state) {\n            case State.Disabled:\n                return Cursor.Default;\n            case State.Vertical:\n                return  Cursor.ResizeRow;\n            case State.Horizontal:\n                return Cursor.ResizeColumn;\n            default:\n                throw Error(`Unknown gutter state for cursor: ${state}`);\n        }\n    }\n\n    private getState(): State {\n        return this.disabled\n            ? State.Disabled\n            : this.direction === Direction.Vertical\n                ? State.Vertical\n                : State.Horizontal;\n    }\n\n    private setStyle(property: StyleProperty, value: string | number) {\n        this.renderer.setStyle(this.elementRef.nativeElement, property, value);\n    }\n\n    private setAttr(attribute: AttributeProperty, value: string) {\n        this.renderer.setAttribute(this.elementRef.nativeElement, attribute, value);\n    }\n}\n\n@Directive({\n    selector: 'mc-splitter-area'\n})\nexport class McSplitterAreaDirective implements OnInit, OnDestroy {\n    constructor(private elementRef: ElementRef,\n                private renderer: Renderer2,\n                private splitter: McSplitterComponent) {}\n\n    disableFlex(): void {\n        this.renderer.removeStyle(this.elementRef.nativeElement, 'flex');\n    }\n\n    ngOnInit(): void {\n        this.splitter.addArea(this);\n\n        this.removeStyle(StyleProperty.MaxWidth);\n        this.setStyle(StyleProperty.Flex, '1');\n\n        if (this.splitter.direction === Direction.Vertical) {\n            this.setStyle(StyleProperty.Width, '100%');\n            this.removeStyle(StyleProperty.Height);\n        } else {\n            this.setStyle(StyleProperty.Height, '100%');\n            this.removeStyle(StyleProperty.Width);\n        }\n    }\n\n    ngOnDestroy(): void {\n        this.splitter.removeArea(this);\n    }\n\n    setOrder(order: number): void {\n        this.setStyle(StyleProperty.Order, order);\n    }\n\n    setSize(size: number): void {\n        const sz = coerceNumberProperty(size);\n        this.setStyle(this.getSizeProperty(), coerceCssPixelValue(sz));\n    }\n\n    getSize(): number {\n        return this.elementRef.nativeElement[this.getOffsetSizeProperty()];\n    }\n\n    getMinSize(): number {\n        const styles = getComputedStyle(this.elementRef.nativeElement);\n\n        return parseFloat(styles[this.getMinSizeProperty()]);\n    }\n\n    private isVertical(): boolean {\n        return this.splitter.direction === Direction.Vertical;\n    }\n\n    private getMinSizeProperty(): StyleProperty {\n        return this.isVertical()\n            ? StyleProperty.MinHeight\n            : StyleProperty.MinWidth;\n    }\n\n    private getOffsetSizeProperty(): StyleProperty {\n        return this.isVertical()\n            ? StyleProperty.OffsetHeight\n            : StyleProperty.OffsetWidth;\n    }\n\n    private getSizeProperty(): StyleProperty {\n        return this.isVertical()\n            ? StyleProperty.Height\n            : StyleProperty.Width;\n    }\n\n    private setStyle(style: StyleProperty, value: string | number) {\n        this.renderer.setStyle(this.elementRef.nativeElement, style, value);\n    }\n\n    private removeStyle(style: StyleProperty) {\n        this.renderer.removeStyle(this.elementRef.nativeElement, style);\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { McIconModule } from '@ptsecurity/mosaic/icon';\n\nimport { McGutterDirective, McSplitterAreaDirective, McSplitterComponent } from './splitter.component';\n\n\n@NgModule({\n    imports: [\n        CommonModule,\n        McIconModule\n    ],\n    exports: [\n        McGutterDirective,\n        McSplitterAreaDirective,\n        McSplitterComponent\n    ],\n    declarations: [\n        McGutterDirective,\n        McSplitterAreaDirective,\n        McSplitterComponent\n    ]\n})\nexport class McSplitterModule {\n}\n","import { animate, state, style, transition, trigger } from '@angular/animations';\nimport {\n    Attribute,\n    ChangeDetectionStrategy, ChangeDetectorRef,\n    Component,\n    ElementRef, EventEmitter, forwardRef,\n    Input, Output, ViewChild,\n    ViewEncapsulation\n} from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { FocusMonitor } from '@ptsecurity/cdk/a11y';\nimport {\n    ThemePalette,\n    CanColor, CanColorCtor,\n    CanDisable, CanDisableCtor,\n    HasTabIndex, HasTabIndexCtor,\n    mixinColor,\n    mixinDisabled,\n    mixinTabIndex\n} from '@ptsecurity/mosaic/core';\n\n\nlet nextUniqueId = 0;\n\ntype ToggleLabelPositionType = 'left' | 'right';\n\nexport class McToggleBase {\n    constructor(public _elementRef: ElementRef) {}\n}\n\nexport const _McToggleMixinBase:\n    HasTabIndexCtor &\n    CanDisableCtor &\n    CanColorCtor &\n    typeof McToggleBase = mixinTabIndex(mixinColor(mixinDisabled(McToggleBase), ThemePalette.Primary));\n\nexport class McToggleChange {\n    source: McToggleComponent;\n    checked: boolean;\n}\n\n@Component({\n    selector: 'mc-toggle',\n    exportAs: 'mcToggle',\n    templateUrl: './toggle.component.html',\n    styleUrls: ['./toggle.css'],\n    providers: [\n        {provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => McToggleComponent), multi: true}\n    ],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n    inputs: ['disabled', 'color', 'tabIndex'],\n    host: {\n        class: 'mc-toggle',\n        '[id]': 'id',\n        '[attr.id]': 'id',\n        '[class.mc-disabled]': 'disabled',\n        '[class.mc-toggle_off]': '!checked'\n    },\n    animations: [\n        trigger('switch', [\n            state('true' , style({ left: '50%' })),\n            state('false', style({ left: '1px' })),\n            transition('true <=> false', animate('150ms'))\n        ])\n    ]\n})\nexport class McToggleComponent extends _McToggleMixinBase\n    implements ControlValueAccessor, CanColor, CanDisable, HasTabIndex {\n\n    @ViewChild('input') _inputElement: ElementRef;\n\n    @Input() labelPosition: ToggleLabelPositionType = 'right';\n\n    @Input('aria-label') ariaLabel: string = '';\n    @Input('aria-labelledby') ariaLabelledby: string | null = null;\n\n    private _uniqueId: string = `mc-toggle-${++nextUniqueId}`;\n\n    // tslint:disable:member-ordering\n    @Input() id: string = this._uniqueId;\n\n    get inputId(): string {\n        return `${this.id || this._uniqueId}-input`;\n    }\n\n    @Input() name: string | null = null;\n\n    @Input() value: string;\n\n    private _disabled: boolean = false;\n\n    @Input()\n    get disabled() {\n        return this._disabled;\n    }\n\n    set disabled(value: any) {\n        if (value !== this._disabled) {\n            this._disabled = value;\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n\n    private _checked: boolean = false;\n\n    get checked() {\n        return this._checked;\n    }\n\n    @Input()\n    set checked(value: boolean) {\n        if (value !== this._checked) {\n            this._checked = value;\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n\n    @Output() readonly change: EventEmitter<McToggleChange> =\n        new EventEmitter<McToggleChange>();\n\n    constructor(public _elementRef: ElementRef,\n                private _focusMonitor: FocusMonitor,\n                private _changeDetectorRef: ChangeDetectorRef,\n                @Attribute('tabindex') tabIndex: string\n    ) {\n        super(_elementRef);\n\n        this.tabIndex = parseInt(tabIndex) || 0;\n\n        this._focusMonitor.monitor(this._elementRef.nativeElement, true);\n    }\n\n    ngOnDestroy() {\n        this._focusMonitor.stopMonitoring(this._elementRef.nativeElement);\n    }\n\n    focus(): void {\n        this._focusMonitor.focusVia(this._inputElement.nativeElement, 'keyboard');\n    }\n\n    _getAriaChecked(): boolean {\n        return this.checked;\n    }\n\n    _onInteractionEvent(event: Event) {\n        event.stopPropagation();\n    }\n\n    _onLabelTextChange() {\n        this._changeDetectorRef.markForCheck();\n    }\n\n    _onInputClick(event: MouseEvent) {\n        event.stopPropagation();\n        this._updateModelValue();\n        this._emitChangeEvent();\n    }\n\n    writeValue(value: any) {\n        this.checked = !!value;\n    }\n\n    registerOnChange(fn: any) {\n        this._onChangeCallback = fn;\n    }\n\n    registerOnTouched(fn: any) {\n        this._onTouchedCallback = fn;\n    }\n\n    setDisabledState(isDisabled: boolean) {\n        this.disabled = isDisabled;\n    }\n\n    // tslint:disable-next-line:no-empty\n    private _onTouchedCallback = () => {};\n\n    // tslint:disable-next-line:no-empty\n    private _onChangeCallback = (_: any) => {};\n\n    private _updateModelValue() {\n        this._checked = !this.checked;\n        this._onChangeCallback(this.checked);\n        this._onTouchedCallback();\n    }\n\n    private _emitChangeEvent() {\n        const event = new McToggleChange();\n        event.source = this;\n        event.checked = this.checked;\n\n        this._onChangeCallback(this.checked);\n        this.change.emit(event);\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { A11yModule } from '@ptsecurity/cdk/a11y';\nimport { McCommonModule } from '@ptsecurity/mosaic/core';\n\nimport { McToggleComponent } from './toggle.component';\n\n\n@NgModule({\n    imports: [CommonModule, BrowserAnimationsModule, A11yModule, McCommonModule],\n    exports: [McToggleComponent],\n    declarations: [McToggleComponent]\n})\nexport class McToggleModule {\n}\n","import {\n    AfterContentChecked,\n    AfterContentInit,\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    ContentChildren,\n    ElementRef,\n    EventEmitter,\n    Input,\n    OnDestroy,\n    Output,\n    QueryList,\n    ViewChild,\n    ViewEncapsulation,\n    InjectionToken,\n    Inject,\n    Optional,\n    Directive, Attribute\n} from '@angular/core';\nimport { coerceBooleanProperty, coerceNumberProperty } from '@ptsecurity/cdk/coercion';\nimport {\n    CanColor,\n    CanColorCtor,\n    mixinColor,\n    mixinDisabled\n} from '@ptsecurity/mosaic/core';\nimport { merge, Subscription } from 'rxjs';\n\nimport { McTab } from './tab';\nimport { McTabHeader } from './tab-header';\n\n\n@Directive({\n    selector: 'mc-tab-group[mc-light-tabs], [mc-tab-nav-bar][mc-light-tabs]',\n    host: { class: 'mc-tab-group_light' }\n})\nexport class McLightTabsCssStyler { }\n\n@Directive({\n    selector: 'mc-tab-group[mc-align-tabs-center], [mc-tab-nav-bar][mc-align-tabs-center]',\n    host: { class: 'mc-tab-group_align-labels-center' }\n})\nexport class McAlignTabsCenterCssStyler { }\n\n@Directive({\n    selector: 'mc-tab-group[mc-align-tabs-end], [mc-tab-nav-bar][mc-align-tabs-end]',\n    host: { class: 'mc-tab-group_align-labels-end' }\n})\nexport class McAlignTabsEndCssStyler { }\n\n@Directive({\n    selector: 'mc-tab-group[mc-stretch-tabs], [mc-tab-nav-bar][mc-stretch-tabs]',\n    host: { class: 'mc-tab-group_stretch-labels' }\n})\nexport class McStretchTabsCssStyler { }\n\n/** Used to generate unique ID's for each tab component */\nlet nextId = 0;\n\n/** A simple change event emitted on focus or selection changes. */\nexport class McTabChangeEvent {\n    /** Index of the currently-selected tab. */\n    index: number;\n    /** Reference to the currently-selected tab. */\n    tab: McTab;\n}\n\n/** Possible positions for the tab header. */\nexport type McTabHeaderPosition = 'above' | 'below';\n\n/** Object that can be used to configure the default options for the tabs module. */\nexport interface IMcTabsConfig {\n    /** Duration for the tab animation. Must be a valid CSS value (e.g. 600ms). */\n    animationDuration?: string;\n}\n\n/** Injection token that can be used to provide the default options the tabs module. */\nexport const MC_TABS_CONFIG = new InjectionToken('MC_TABS_CONFIG');\n\n// Boilerplate for applying mixins to McTabGroup.\n/** @docs-private */\nexport class McTabGroupBase {\n    // tslint:disable-next-line:naming-convention\n    constructor(public _elementRef: ElementRef) { }\n}\nexport const mcTabGroupMixinBase:\n    CanColorCtor &\n    typeof McTabGroupBase =\n    mixinColor(mixinDisabled(McTabGroupBase));\n\n/**\n * Tab-group component.  Supports basic tab pairs (label + content) and includes\n * keyboard navigation.\n */\n@Component({\n    selector: 'mc-tab-group',\n    exportAs: 'mcTabGroup',\n    templateUrl: 'tab-group.html',\n    styleUrls: ['tab-group.css'],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    inputs: ['color'],\n    host: {\n        class: 'mc-tab-group',\n        '[class.mc-tab-group_dynamic-height]': 'dynamicHeight',\n        '[class.mc-tab-group_inverted-header]': 'headerPosition === \"below\"'\n    }\n})\nexport class McTabGroup extends mcTabGroupMixinBase implements AfterContentInit,\n    AfterContentChecked, OnDestroy, CanColor {\n    lightTab: boolean;\n\n    /** Whether the tab group should grow to the size of the active tab. */\n    @Input()\n    get dynamicHeight(): boolean { return this._dynamicHeight; }\n    set dynamicHeight(value: boolean) { this._dynamicHeight = coerceBooleanProperty(value); }\n\n    /** The index of the active tab. */\n    @Input()\n    get selectedIndex(): number | null { return this._selectedIndex; }\n    set selectedIndex(value: number | null) {\n        this.indexToSelect = coerceNumberProperty(value, null);\n    }\n\n    @ContentChildren(McTab) tabs: QueryList<McTab>;\n\n    @ViewChild('tabBodyWrapper') tabBodyWrapper: ElementRef;\n\n    @ViewChild('tabHeader') tabHeader: McTabHeader;\n\n    /** Position of the tab header. */\n    @Input() headerPosition: McTabHeaderPosition = 'above';\n\n    /** Duration for the tab animation. Must be a valid CSS value (e.g. 600ms). */\n    @Input() animationDuration: string;\n\n    /** Output to enable support for two-way binding on `[(selectedIndex)]` */\n    @Output() readonly selectedIndexChange: EventEmitter<number> = new EventEmitter<number>();\n\n    /** Event emitted when focus has changed within a tab group. */\n    @Output() readonly focusChange: EventEmitter<McTabChangeEvent> =\n        new EventEmitter<McTabChangeEvent>();\n\n    /** Event emitted when the body animation has completed */\n    @Output() readonly animationDone: EventEmitter<void> = new EventEmitter<void>();\n\n    /** Event emitted when the tab selection has changed. */\n    @Output() readonly selectedTabChange: EventEmitter<McTabChangeEvent> =\n        new EventEmitter<McTabChangeEvent>(true);\n\n    /** The tab index that should be selected after the content has been checked. */\n    private indexToSelect: number | null = 0;\n\n    /** Snapshot of the height of the tab body wrapper before another tab is activated. */\n    private tabBodyWrapperHeight: number = 0;\n\n    /** Subscription to tabs being added/removed. */\n    private tabsSubscription = Subscription.EMPTY;\n\n    /** Subscription to changes in the tab labels. */\n    private tabLabelSubscription = Subscription.EMPTY;\n    private _dynamicHeight: boolean = false;\n    private _selectedIndex: number | null = null;\n\n    private groupId: number;\n\n    constructor(\n        elementRef: ElementRef,\n        private changeDetectorRef: ChangeDetectorRef,\n        @Attribute('mc-light-tabs') lightTabs: string,\n        @Inject(MC_TABS_CONFIG) @Optional() defaultConfig?: IMcTabsConfig\n    ) {\n        super(elementRef);\n\n        this.lightTab = coerceBooleanProperty(lightTabs);\n\n        this.groupId = nextId++;\n        this.animationDuration = defaultConfig && defaultConfig.animationDuration ?\n            defaultConfig.animationDuration : '0ms';\n    }\n\n    /**\n     * After the content is checked, this component knows what tabs have been defined\n     * and what the selected index should be. This is where we can know exactly what position\n     * each tab should be in according to the new selected index, and additionally we know how\n     * a new selected tab should transition in (from the left or right).\n     */\n    ngAfterContentChecked() {\n        // Don't clamp the `indexToSelect` immediately in the setter because it can happen that\n        // the amount of tabs changes before the actual change detection runs.\n        const indexToSelect = this.indexToSelect = this.clampTabIndex(this.indexToSelect);\n\n        // If there is a change in selected index, emit a change event. Should not trigger if\n        // the selected index has not yet been initialized.\n        if (this._selectedIndex !== indexToSelect) {\n            const isFirstRun = this._selectedIndex == null;\n\n            if (!isFirstRun) {\n                this.selectedTabChange.emit(this.createChangeEvent(indexToSelect));\n            }\n\n            // Changing these values after change detection has run\n            // since the checked content may contain references to them.\n            Promise.resolve().then(() => {\n                this.tabs.forEach((tab, index) => tab.isActive = index === indexToSelect);\n\n                if (!isFirstRun) {\n                    this.selectedIndexChange.emit(indexToSelect);\n                }\n            });\n        }\n\n        // Setup the position for each tab and optionally setup an origin on the next selected tab.\n        this.tabs.forEach((tab: McTab, index: number) => {\n            tab.position = index - indexToSelect;\n\n            // If there is already a selected tab, then set up an origin for the next selected tab\n            // if it doesn't have one already.\n            if (this._selectedIndex != null && tab.position === 0 && !tab.origin) {\n                tab.origin = indexToSelect - this._selectedIndex;\n            }\n        });\n\n        if (this._selectedIndex !== indexToSelect) {\n            this._selectedIndex = indexToSelect;\n            this.changeDetectorRef.markForCheck();\n        }\n    }\n\n    ngAfterContentInit() {\n        this.subscribeToTabLabels();\n\n        // Subscribe to changes in the amount of tabs, in order to be\n        // able to re-render the content as new tabs are added or removed.\n        this.tabsSubscription = this.tabs.changes.subscribe(() => {\n            const indexToSelect = this.clampTabIndex(this.indexToSelect);\n\n            // Maintain the previously-selected tab if a new tab is added or removed and there is no\n            // explicit change that selects a different tab.\n            if (indexToSelect === this._selectedIndex) {\n                const tabs = this.tabs.toArray();\n\n                for (let i = 0; i < tabs.length; i++) {\n                    if (tabs[i].isActive) {\n                        // Assign both to the `_indexToSelect` and `_selectedIndex` so we don't fire a changed\n                        // event, otherwise the consumer may end up in an infinite loop in some edge cases like\n                        // adding a tab within the `selectedIndexChange` event.\n                        this.indexToSelect = this._selectedIndex = i;\n                        break;\n                    }\n                }\n            }\n\n            this.subscribeToTabLabels();\n            this.changeDetectorRef.markForCheck();\n        });\n    }\n\n    ngOnDestroy() {\n        this.tabsSubscription.unsubscribe();\n        this.tabLabelSubscription.unsubscribe();\n    }\n\n    focusChanged(index: number) {\n        this.focusChange.emit(this.createChangeEvent(index));\n    }\n\n    /** Returns a unique id for each tab label element */\n    getTabLabelId(i: number): string {\n        return `mc-tab-label-${this.groupId}-${i}`;\n    }\n\n    /** Returns a unique id for each tab content element */\n    getTabContentId(i: number): string {\n        return `mc-tab-content-${this.groupId}-${i}`;\n    }\n\n    /**\n     * Sets the height of the body wrapper to the height of the activating tab if dynamic\n     * height property is true.\n     */\n    setTabBodyWrapperHeight(tabHeight: number): void {\n        if (!this._dynamicHeight || !this.tabBodyWrapperHeight) { return; }\n\n        const wrapper: HTMLElement = this.tabBodyWrapper.nativeElement;\n\n        wrapper.style.height = `${this.tabBodyWrapperHeight}px`;\n\n        // This conditional forces the browser to paint the height so that\n        // the animation to the new height can have an origin.\n        if (this.tabBodyWrapper.nativeElement.offsetHeight) {\n            wrapper.style.height = `${tabHeight}px`;\n        }\n    }\n\n    /** Removes the height of the tab body wrapper. */\n    removeTabBodyWrapperHeight(): void {\n        this.tabBodyWrapperHeight = this.tabBodyWrapper.nativeElement.clientHeight;\n        this.tabBodyWrapper.nativeElement.style.height = '';\n        this.animationDone.emit();\n    }\n\n    /** Handle click events, setting new selected index if appropriate. */\n    handleClick(tab: McTab, tabHeader: McTabHeader, index: number) {\n        if (!tab.disabled) {\n            this.selectedIndex = tabHeader.focusIndex = index;\n        }\n    }\n\n    /** Retrieves the tabindex for the tab. */\n    getTabIndex(tab: McTab, index: number): number | null {\n        if (tab.disabled) {\n            return null;\n        }\n\n        return this.selectedIndex === index ? 0 : -1;\n    }\n\n    private createChangeEvent(index: number): McTabChangeEvent {\n        const event = new McTabChangeEvent();\n        event.index = index;\n        if (this.tabs && this.tabs.length) {\n            event.tab = this.tabs.toArray()[index];\n        }\n\n        return event;\n    }\n\n    /**\n     * Subscribes to changes in the tab labels. This is needed, because the @Input for the label is\n     * on the McTab component, whereas the data binding is inside the McTabGroup. In order for the\n     * binding to be updated, we need to subscribe to changes in it and trigger change detection\n     * manually.\n     */\n    private subscribeToTabLabels() {\n        if (this.tabLabelSubscription) {\n            this.tabLabelSubscription.unsubscribe();\n        }\n\n        this.tabLabelSubscription = merge(...this.tabs.map((tab) => tab.stateChanges))\n            .subscribe(() => this.changeDetectorRef.markForCheck());\n    }\n\n    /** Clamps the given index to the bounds of 0 and the tabs length. */\n    private clampTabIndex(index: number | null): number {\n        // Note the `|| 0`, which ensures that values like NaN can't get through\n        // and which would otherwise throw the component into an infinite loop\n        // (since Mch.max(NaN, 0) === NaN).\n        return Math.min(this.tabs.length - 1, Math.max(index || 0, 0));\n    }\n}\n","import {\n    Attribute,\n    ChangeDetectionStrategy,\n    Component,\n    Directive,\n    ElementRef,\n    Input,\n    OnDestroy,\n    ViewEncapsulation\n} from '@angular/core';\nimport { FocusMonitor } from '@ptsecurity/cdk/a11y';\nimport {\n    CanColor,\n    CanColorCtor,\n    CanDisable,\n    CanDisableCtor,\n    HasTabIndex,\n    HasTabIndexCtor,\n    mixinColor,\n    mixinDisabled,\n    mixinTabIndex\n} from '@ptsecurity/mosaic/core';\n\n\n// Boilerplate for applying mixins to McTabNav.\n/** @docs-private */\nexport class McTabNavBase {\n    // tslint:disable-next-line:naming-convention\n    constructor(public _elementRef: ElementRef) {}\n}\nexport const mcTabNavMixinBase: CanColorCtor &\n    typeof McTabNavBase = mixinColor(McTabNavBase);\n\n/**\n * Navigation component matching the styles of the tab group header.\n */\n@Component({\n    selector: '[mc-tab-nav-bar]',\n    exportAs: 'mcTabNavBar, mcTabNav',\n    inputs: ['color'],\n    templateUrl: 'tab-nav-bar.html',\n    styleUrls: ['tab-nav-bar.css'],\n    host: { class: 'mc-tab-nav-bar' },\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class McTabNav extends mcTabNavMixinBase\n    implements CanColor {\n        constructor(elementRef: ElementRef) {\n            super(elementRef);\n        }\n     }\n\n// Boilerplate for applying mixins to McTabLink.\nexport class McTabLinkBase {}\nexport const mcTabLinkMixinBase: HasTabIndexCtor & CanDisableCtor &\n    typeof McTabLinkBase = mixinTabIndex(mixinDisabled(McTabLinkBase));\n\n/**\n * Link inside of a `mc-tab-nav-bar`.\n */\n@Directive({\n    selector: '[mc-tab-link], [mcTabLink]',\n    exportAs: 'mcTabLink',\n    inputs: ['disabled', 'tabIndex'],\n    host: {\n        class: 'mc-tab-link',\n        '[attr.aria-current]': 'active',\n        '[attr.aria-disabled]': 'disabled.toString()',\n        '[attr.tabIndex]': 'tabIndex',\n        '[class.mc-disabled]': 'disabled',\n        '[class.mc-active]': 'active'\n    }\n})\nexport class McTabLink extends mcTabLinkMixinBase\n    implements OnDestroy, CanDisable, HasTabIndex {\n    /** Whether the link is active. */\n    @Input()\n    get active(): boolean {\n        return this.isActive;\n    }\n    set active(value: boolean) {\n        if (value !== this.isActive) {\n            this.isActive = value;\n        }\n    }\n\n    /** Whether the tab link is active or not. */\n    protected isActive: boolean = false;\n\n    constructor(\n        public elementRef: ElementRef,\n        @Attribute('tabindex') tabIndex: string,\n        private focusMonitor: FocusMonitor\n    ) {\n        super();\n\n        this.tabIndex = parseInt(tabIndex) || 0;\n        this.focusMonitor.monitor(this.elementRef.nativeElement);\n    }\n\n    ngOnDestroy() {\n        this.focusMonitor.stopMonitoring(this.elementRef.nativeElement);\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { A11yModule } from '@ptsecurity/cdk/a11y';\nimport { PortalModule } from '@ptsecurity/cdk/portal';\nimport { McCommonModule } from '@ptsecurity/mosaic/core';\n\nimport { McTab } from './tab';\nimport { McTabBody, McTabBodyPortal } from './tab-body';\nimport { McTabContent } from './tab-content';\nimport {\n    McTabGroup,\n    McLightTabsCssStyler,\n    McAlignTabsCenterCssStyler,\n    McAlignTabsEndCssStyler,\n    McStretchTabsCssStyler\n} from './tab-group';\nimport { McTabHeader } from './tab-header';\nimport { McTabLabel } from './tab-label';\nimport { McTabLabelWrapper } from './tab-label-wrapper';\nimport { McTabLink, McTabNav } from './tab-nav-bar/tab-nav-bar';\n\n\n@NgModule({\n    imports: [\n        CommonModule,\n        McCommonModule,\n        PortalModule,\n        A11yModule,\n        BrowserAnimationsModule\n    ],\n    // Don't export all components because some are only to be used internally.\n    exports: [\n        McCommonModule,\n        McTabGroup,\n        McTabLabel,\n        McTab,\n        McTabNav,\n        McTabLink,\n        McTabContent,\n        McLightTabsCssStyler,\n        McAlignTabsCenterCssStyler,\n        McAlignTabsEndCssStyler,\n        McStretchTabsCssStyler\n    ],\n    declarations: [\n        McTabGroup,\n        McTabLabel,\n        McTab,\n        McTabLabelWrapper,\n        McTabNav,\n        McTabLink,\n        McTabBody,\n        McTabBodyPortal,\n        McTabHeader,\n        McTabContent,\n        McLightTabsCssStyler,\n        McAlignTabsCenterCssStyler,\n        McAlignTabsEndCssStyler,\n        McStretchTabsCssStyler\n    ]\n})\nexport class McTabsModule {}\n","import {\n    ElementRef,\n    QueryList,\n    ContentChildren,\n    Component,\n    ChangeDetectionStrategy,\n    ViewEncapsulation\n} from '@angular/core';\n\nimport {\n    mixinColor,\n    CanColor,\n    CanColorCtor,\n    CanDisable,\n    CanDisableCtor,\n    mixinDisabled\n} from '@ptsecurity/mosaic/core';\nimport { McIcon } from '@ptsecurity/mosaic/icon';\n\n\nexport class McTagBase {\n    constructor(public _elementRef: ElementRef) {}\n}\n\nexport const _McTagMixinBase: CanColorCtor & CanDisableCtor & typeof McTagBase = mixinColor(mixinDisabled(McTagBase));\n\n\n@Component({\n    selector: 'mc-tag',\n    templateUrl: 'tag.partial.html',\n    styleUrls: ['./tag.css'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n    host: {\n        class: 'mc-tag',\n        '[class.mc-disabled]': 'disabled'\n    },\n    inputs: ['color', 'disabled']\n})\nexport class McTag extends _McTagMixinBase implements CanColor, CanDisable {\n    @ContentChildren(McIcon) contentChildren: QueryList<McIcon>;\n\n    nativeElement: HTMLElement;\n\n    private _disabled: boolean = false;\n\n    get disabled() {\n        return this._disabled;\n    }\n\n    set disabled(value: any) {\n        if (value !== this.disabled) { this._disabled = value; }\n    }\n\n    constructor(elementRef: ElementRef) {\n        super(elementRef);\n\n        this.nativeElement = elementRef.nativeElement;\n    }\n\n    ngAfterContentInit() {\n        this._addClassModificatorForIcons();\n    }\n\n    _addClassModificatorForIcons() {\n        const icons = this.contentChildren.map((item) => item._elementRef.nativeElement);\n\n        if (icons.length === 1) {\n            const iconElement = icons[0];\n\n            if (!iconElement.previousElementSibling && !iconElement.nextElementSibling) {\n                if (iconElement.nextSibling) {\n                    iconElement.classList.add('mc-icon_left');\n                    this.nativeElement.classList.add('mc-left-icon');\n                }\n\n                if (iconElement.previousSibling) {\n                    iconElement.classList.add('mc-icon_right');\n                    this.nativeElement.classList.add('mc-right-icon');\n                }\n            }\n        } else if (icons.length > 1) {\n            const firstIconElement = icons[0];\n            const secondIconElement = icons[1];\n\n            firstIconElement.classList.add('mc-icon_left');\n            secondIconElement.classList.add('mc-icon_right');\n        }\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { PlatformModule } from '@ptsecurity/cdk/platform';\n\nimport { McTag } from './tag.component';\n\n\n@NgModule({\n    imports: [\n        CommonModule,\n        PlatformModule\n    ],\n    exports: [\n        McTag\n    ],\n    declarations: [\n        McTag\n    ]\n})\nexport class McTagModule {}\n","import {\n    Directive, DoCheck, ElementRef, Inject,\n    Input, OnChanges, OnDestroy, Optional,\n    Self, InjectionToken, NgZone, OnInit\n} from '@angular/core';\nimport { FormGroupDirective, NgControl, NgForm } from '@angular/forms';\nimport { coerceBooleanProperty } from '@ptsecurity/cdk/coercion';\nimport {\n    CanUpdateErrorState,\n    CanUpdateErrorStateCtor,\n    ErrorStateMatcher,\n    mixinErrorState\n} from '@ptsecurity/mosaic/core';\nimport { McFormFieldControl } from '@ptsecurity/mosaic/form-field';\nimport { fromEvent, Subscription, Subject } from 'rxjs';\nimport { distinctUntilChanged, map } from 'rxjs/operators';\n\n\nexport const MC_TEXTAREA_VALUE_ACCESSOR =\n    new InjectionToken<{ value: any }>('MC_TEXTAREA_VALUE_ACCESSOR');\n\nlet nextUniqueId = 0;\n\nconst ROW_SEPARATOR = '\\n';\n\nexport class McTextareaBase {\n    constructor(public _defaultErrorStateMatcher: ErrorStateMatcher,\n                public _parentForm: NgForm,\n                public _parentFormGroup: FormGroupDirective,\n                public ngControl: NgControl) {\n    }\n}\n\n// tslint:disable-next-line:naming-convention\nexport const McTextareaMixinBase: CanUpdateErrorStateCtor & typeof McTextareaBase = mixinErrorState(McTextareaBase);\n\n@Directive({\n    selector: 'textarea[mcTextarea]',\n    exportAs: 'mcTextarea',\n    host: {\n        class: 'mc-textarea',\n        '[class.mc-textarea-resizable]': '!canGrow',\n        '[attr.id]': 'id',\n        '[attr.placeholder]': 'placeholder',\n        '[disabled]': 'disabled',\n        '[required]': 'required',\n        '(blur)': 'focusChanged(false)',\n        '(focus)': 'focusChanged(true)'\n    },\n    providers: [{ provide: McFormFieldControl, useExisting: McTextarea }]\n})\nexport class McTextarea extends McTextareaMixinBase implements McFormFieldControl<any>, OnInit, OnChanges,\n    OnDestroy, DoCheck, CanUpdateErrorState {\n\n    @Input() canGrow: boolean = true;\n\n    /** An object used to control when error messages are shown. */\n    @Input() errorStateMatcher: ErrorStateMatcher;\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    focused: boolean = false;\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    readonly stateChanges: Subject<void> = new Subject<void>();\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    controlType: string = 'mc-textarea';\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    @Input()\n    get disabled(): boolean {\n        if (this.ngControl && this.ngControl.disabled !== null) {\n            return this.ngControl.disabled;\n        }\n\n        return this._disabled;\n    }\n\n    set disabled(value: boolean) {\n        this._disabled = coerceBooleanProperty(value);\n\n        if (this.focused) {\n            this.focused = false;\n            this.stateChanges.next();\n        }\n    }\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    @Input()\n    get id(): string {\n        return this._id;\n    }\n\n    set id(value: string) {\n        this._id = value || this.uid;\n    }\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    @Input() placeholder: string;\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    @Input()\n    get required(): boolean {\n        return this._required;\n    }\n\n    set required(value: boolean) {\n        this._required = coerceBooleanProperty(value);\n    }\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    @Input()\n    get value(): string {\n        return this.valueAccessor.value;\n    }\n\n    set value(value: string) {\n        if (value !== this.value) {\n            this.valueAccessor.value = value;\n            this.stateChanges.next();\n        }\n    }\n\n    protected uid = `mc-textsrea-${nextUniqueId++}`;\n    protected previousNativeValue: any;\n    protected _disabled = false;\n    protected _id: string;\n    protected _required = false;\n\n    private valueAccessor: { value: any };\n    private growSubscription: Subscription;\n\n    private lineHeight: number = 0;\n    private freeRowsHeight: number = 0;\n    private minHeight: number = 0;\n\n    constructor(protected elementRef: ElementRef,\n                @Optional() @Self() public ngControl: NgControl,\n                @Optional() _parentForm: NgForm,\n                @Optional() _parentFormGroup: FormGroupDirective,\n                _defaultErrorStateMatcher: ErrorStateMatcher,\n                @Optional() @Self() @Inject(MC_TEXTAREA_VALUE_ACCESSOR) inputValueAccessor: any,\n                private ngZone: NgZone) {\n        super(_defaultErrorStateMatcher, _parentForm, _parentFormGroup, ngControl);\n        // If no input value accessor was explicitly specified, use the element as the textarea value\n        // accessor.\n        this.valueAccessor = inputValueAccessor || this.elementRef.nativeElement;\n\n        this.previousNativeValue = this.value;\n\n        // Force setter to be called in case id was not specified.\n        this.id = this.id;\n\n        const growObserver = fromEvent(elementRef.nativeElement, 'input')\n            /*.pipe(\n                map((event: any) => this.getGrowHeight()),\n                // map((event: any) => event.target.scrollHeight),\n                distinctUntilChanged()\n            )*/;\n        this.growSubscription = growObserver.subscribe(this.grow.bind(this));\n    }\n\n    ngOnInit() {\n        setTimeout(() => this.grow(), 0);\n        this.lineHeight = parseInt(getComputedStyle(this.elementRef.nativeElement).lineHeight!, 10);\n\n        const paddingTop = parseInt(getComputedStyle(this.elementRef.nativeElement).paddingTop!, 10);\n        const paddingBottom = parseInt(getComputedStyle(this.elementRef.nativeElement).paddingBottom!, 10);\n\n        // tslint:disable-next-line:no-magic-numbers\n        this.minHeight = this.lineHeight * 2 + paddingTop + paddingBottom;\n        this.freeRowsHeight = this.lineHeight;\n    }\n\n    ngOnChanges() {\n        this.stateChanges.next();\n    }\n\n    ngOnDestroy() {\n        this.stateChanges.complete();\n        this.growSubscription.unsubscribe();\n    }\n\n    ngDoCheck() {\n        if (this.ngControl) {\n            // We need to re-evaluate this on every change detection cycle, because there are some\n            // error triggers that we can't subscribe to (e.g. parent form submissions). This means\n            // that whatever logic is in here has to be super lean or we risk destroying the performance.\n            this.updateErrorState();\n        }\n\n        // We need to dirty-check the native element's value, because there are some cases where\n        // we won't be notified when it changes (e.g. the consumer isn't using forms or they're\n        // updating the value using `emitEvent: false`).\n        this.dirtyCheckNativeValue();\n    }\n\n    /** Grow textarea height to avoid vertical scroll  */\n    grow() {\n        if (!this.canGrow) {\n            return;\n        }\n\n        this.ngZone.runOutsideAngular(() => {\n            const textarea = this.elementRef.nativeElement;\n\n            const outerHeight = parseInt(window.getComputedStyle(textarea).height!, 10);\n            const diff = outerHeight - textarea.clientHeight;\n\n            textarea.style.height = 0; // this line is important to height recalculation\n\n            const height = Math.max(this.minHeight, textarea.scrollHeight + diff + this.freeRowsHeight);\n            textarea.style.height = `${height}px`;\n        });\n    }\n\n    /** Focuses the textarea. */\n    focus(): void {\n        this.elementRef.nativeElement.focus();\n    }\n\n    /** Callback for the cases where the focused state of the textarea changes. */\n    focusChanged(isFocused: boolean) {\n        if (isFocused !== this.focused) {\n            this.focused = isFocused;\n            this.stateChanges.next();\n        }\n    }\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    get empty(): boolean {\n        return !this.elementRef.nativeElement.value && !this.isBadInput();\n    }\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    onContainerClick() {\n        this.focus();\n    }\n\n    /** Does some manual dirty checking on the native textarea `value` property. */\n    protected dirtyCheckNativeValue() {\n        const newValue = this.value;\n\n        if (this.previousNativeValue !== newValue) {\n            this.previousNativeValue = newValue;\n            this.stateChanges.next();\n        }\n    }\n\n    /** Checks whether the textarea is invalid based on the native validation. */\n    protected isBadInput(): boolean {\n        // The `validity` property won't be present on platform-server.\n        const validity = (this.elementRef.nativeElement as HTMLTextAreaElement).validity;\n\n        return validity && validity.badInput;\n    }\n\n    private getGrowHeight(): number {\n        const textarea = this.elementRef.nativeElement;\n        const outerHeight = parseInt(window.getComputedStyle(textarea).height!.toString(), 10);\n        const diff = outerHeight - textarea.clientHeight;\n\n        return Math.max(this.minHeight, textarea.scrollHeight + diff);\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { A11yModule } from '@ptsecurity/cdk/a11y';\nimport { McCommonModule } from '@ptsecurity/mosaic/core';\n\nimport { McTextarea } from './textarea.component';\n\n\n@NgModule({\n    imports: [CommonModule, A11yModule, McCommonModule, FormsModule],\n    exports: [McTextarea],\n    declarations: [McTextarea]\n})\nexport class McTextareaModule {\n}\n","import {\n    Directive,\n    DoCheck,\n    ElementRef,\n    forwardRef,\n    Inject,\n    InjectionToken,\n    Input,\n    OnChanges,\n    OnDestroy,\n    Optional,\n    Renderer2,\n    Self\n} from '@angular/core';\nimport {\n    ControlValueAccessor,\n    FormControl,\n    FormGroupDirective,\n    NG_VALIDATORS,\n    NgControl,\n    NgForm,\n    ValidationErrors,\n    ValidatorFn,\n    Validators\n} from '@angular/forms';\nimport {\n    noop,\n    Subject\n} from 'rxjs';\n\nimport { coerceBooleanProperty } from '@ptsecurity/cdk/coercion';\nimport {\n    CanUpdateErrorState,\n    CanUpdateErrorStateCtor,\n    ErrorStateMatcher,\n    mixinErrorState\n} from '@ptsecurity/mosaic/core';\nimport { McFormFieldControl } from '@ptsecurity/mosaic/form-field';\n\nimport {\n    ARROW_DOWN_KEYCODE,\n    ARROW_LEFT_KEYCODE,\n    ARROW_RIGHT_KEYCODE,\n    ARROW_UP_KEYCODE,\n    DEFAULT_TIME_FORMAT,\n    HOURS_PER_DAY,\n    HOURS_MINUTES_REGEXP,\n    HOURS_MINUTES_SECONDS_REGEXP,\n    HOURS_ONLY_REGEXP,\n    MINUTES_PER_HOUR,\n    SECONDS_PER_MINUTE,\n    TIMEFORMAT_PLACEHOLDERS,\n    TimeFormats,\n    TimeParts\n} from './timepicker.constants';\n\n\nlet uniqueComponentIdSuffix: number = 0;\nlet validatorOnChange: () => void = noop;\nlet validator: ValidatorFn | null = () => null;\n\nexport const MC_INPUT_VALUE_ACCESSOR =\n    new InjectionToken<{ value: any }>('MC_INPUT_VALUE_ACCESSOR');\n\nexport class McTimepickerBase {\n    constructor(\n        public _defaultErrorStateMatcher: ErrorStateMatcher,\n        public _parentForm: NgForm,\n        public _parentFormGroup: FormGroupDirective,\n        public ngControl: NgControl) { }\n}\n\n// tslint:disable-next-line naming-convention\nexport const McTimepickerMixinBase:\n    CanUpdateErrorStateCtor &\n    typeof McTimepickerBase = mixinErrorState(McTimepickerBase);\n\n@Directive({\n    selector: 'input[mcTimepicker]',\n    exportAs: 'mcTimepickerInput',\n    host: {\n        class: 'mc-timepicker mc-input',\n        // Native input properties that are overwritten by Angular inputs need to be synced with\n        // the native input element. Otherwise property bindings for those don't work.\n        '[attr.id]': 'id',\n        '[attr.placeholder]': 'placeholder',\n        '[disabled]': 'disabled',\n        '[required]': 'required',\n        '[attr.time-format]': 'timeFormat',\n        '[attr.min-time]': 'minTime',\n        '[attr.max-time]': 'maxTime',\n        '[attr.value]': 'value',\n        '(blur)': 'onBlur()',\n        '(focus)': 'focusChanged(true)',\n        '(input)': 'onInput()',\n        '(paste)': 'onPaste($event)',\n        '(keydown)': 'onKeyDown($event)'\n    },\n    providers: [\n        {\n            provide: NG_VALIDATORS,\n            useValue: {\n                validate(c) { return validator ? validator(c) : null; },\n                registerOnValidatorChange(fn: () => void): void { validatorOnChange = fn; }\n            },\n            multi: true\n        },\n        {\n            provide: McFormFieldControl,\n            useExisting: forwardRef(() => McTimepicker)\n        }\n    ]\n\n})\nexport class McTimepicker extends McTimepickerMixinBase\n    implements McFormFieldControl<any>,\n        OnChanges,\n        OnDestroy,\n        DoCheck,\n        CanUpdateErrorState,\n        ControlValueAccessor {\n\n    /** An object used to control when error messages are shown. */\n    @Input() errorStateMatcher: ErrorStateMatcher;\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    focused: boolean = false;\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    readonly stateChanges: Subject<void> = new Subject<void>();\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    controlType: string = 'mc-timepicker';\n\n    @Input()\n    get disabled(): boolean {\n        if (this.ngControl && this.ngControl.disabled !== null) { return this.ngControl.disabled; }\n\n        return this._disabled;\n    }\n\n    set disabled(value: boolean) {\n        this._disabled = coerceBooleanProperty(value);\n\n        // Browsers may not fire the blur event if the input is disabled too quickly.\n        // Reset from here to ensure that the element doesn't become stuck.\n        if (this.focused) {\n            this.focused = false;\n        }\n\n        this.stateChanges.next();\n    }\n\n    @Input()\n    get id(): string { return this._id; }\n\n    set id(value: string) { this._id = value || this.uid; }\n\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    @Input() placeholder: string;\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    @Input()\n    get required(): boolean { return this._required; }\n\n    set required(value: boolean) { this._required = coerceBooleanProperty(value); }\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    @Input()\n    get value(): string { return this.inputValueAccessor.value; }\n\n    set value(value: string) {\n        if (value !== this.value) {\n            this.inputValueAccessor.value = value;\n            this.applyInputChanges();\n        }\n    }\n\n    @Input('time-format')\n    get timeFormat(): TimeFormats { return this._timeFormat; }\n\n    set timeFormat(formatValue: TimeFormats) {\n        this._timeFormat = Object\n            .keys(TimeFormats)\n            .map((timeFormatKey) => TimeFormats[timeFormatKey])\n            .indexOf(formatValue) > -1 ? formatValue : DEFAULT_TIME_FORMAT;\n\n        validatorOnChange();\n        this.placeholder = TIMEFORMAT_PLACEHOLDERS[this._timeFormat];\n    }\n\n    @Input('min-time')\n    get minTime(): string | null { return this._minTime; }\n\n    set minTime(minValue: string | null) {\n        this._minTime = minValue;\n        this.minDateTime = minValue !== null ? this.getDateFromTimeString(minValue) : undefined;\n        validatorOnChange();\n    }\n\n    @Input('max-time')\n    get maxTime(): string | null { return this._maxTime; }\n\n    set maxTime(maxValue: string | null) {\n        this._maxTime = maxValue;\n        this.maxDateTime = maxValue !== null ? this.getDateFromTimeString(maxValue) : undefined;\n        validatorOnChange();\n    }\n\n    private _id: string;\n    private readonly uid = `mc-timepicker-${uniqueComponentIdSuffix++}`;\n    private _disabled: boolean;\n    private _required: boolean;\n    private previousNativeValue: any;\n    private readonly inputValueAccessor: { value: any };\n    private onChange: (value: any) => void;\n    private onTouched: () => void;\n    private _timeFormat: TimeFormats;\n    private _minTime: string | null = null;\n    private minDateTime: Date | undefined;\n    private _maxTime: string | null = null;\n    private maxDateTime: Date | undefined;\n    private currentDateTimeInput: Date | undefined;\n\n    constructor(private readonly elementRef: ElementRef,\n                @Optional() @Self() public ngControl: NgControl,\n                @Optional() _parentForm: NgForm,\n                @Optional() _parentFormGroup: FormGroupDirective,\n                _defaultErrorStateMatcher: ErrorStateMatcher,\n                @Optional() @Self() @Inject(MC_INPUT_VALUE_ACCESSOR) inputValueAccessor: any,\n                private readonly renderer: Renderer2) {\n        super(_defaultErrorStateMatcher, _parentForm, _parentFormGroup, ngControl);\n\n        // If no input value accessor was explicitly specified, use the element as the input value\n        // accessor.\n        this.inputValueAccessor = inputValueAccessor || this.elementRef.nativeElement;\n\n        this.previousNativeValue = this.value;\n        this.onChange = noop;\n\n        // Force setter to be called in case id was not specified.\n        this.id = this.id;\n\n        this.placeholder = TIMEFORMAT_PLACEHOLDERS[DEFAULT_TIME_FORMAT];\n\n        // Instead of NG_VALUE_ACCESSOR (https://github.com/angular/material2/issues/8158#issuecomment-344618103)\n        if (this.ngControl) { this.ngControl.valueAccessor = this; }\n\n        // Substitute initial empty validator with validator linked to directive object instance (workaround)\n        validator = Validators.compose([\n            () => this.parseValidator(),\n            () => this.minTimeValidator(),\n            () => this.maxTimeValidator()\n        ]);\n    }\n\n    ngOnChanges(): void {\n        this.stateChanges.next();\n    }\n\n    ngOnDestroy(): void {\n        this.stateChanges.complete();\n    }\n\n    ngDoCheck(): void {\n        if (this.ngControl) {\n            // We need to re-evaluate this on every change detection cycle, because there are some\n            // error triggers that we can't subscribe to (e.g. parent form submissions). This means\n            // that whatever logic is in here has to be super lean or we risk destroying the performance.\n            this.updateErrorState();\n        }\n\n        // We need to dirty-check the native element's value, because there are some cases where\n        // we won't be notified when it changes (e.g. the consumer isn't using forms or they're\n        // updating the value using `emitEvent: false`).\n        this.dirtyCheckNativeValue();\n    }\n\n    focus(): void {\n        this.elementRef.nativeElement.focus();\n    }\n\n    focusChanged(isFocused: boolean): void {\n        if (isFocused !== this.focused) {\n            this.focused = isFocused;\n            this.onTouched();\n            this.stateChanges.next();\n        }\n    }\n\n    onBlur() {\n        this.applyInputChanges();\n        this.focusChanged(false);\n    }\n\n    onPaste($event) {\n        $event.preventDefault();\n        const clipboardUserInput: string = $event.clipboardData.getData('text');\n\n        if (this.getDateFromTimeString(clipboardUserInput) === undefined) { return; }\n\n        this.elementRef.nativeElement.value = clipboardUserInput;\n        this.onInput();\n    }\n\n    onInput() {\n        const initialCursorStart: number = this.elementRef.nativeElement.selectionStart;\n        const initialCursorEnd: number = this.elementRef.nativeElement.selectionEnd;\n        let isAutocompleteTriggered: boolean = false;\n\n        const {\n            hoursOnly,\n            hoursAndMinutes,\n            hoursAndMinutesAndSeconds\n        } = this.getParsedTimeParts(this.elementRef.nativeElement.value);\n\n        // tslint:disable no-magic-numbers\n        if (hoursOnly &&\n            hoursOnly[1] &&\n            hoursOnly[1].length === 2) {\n            isAutocompleteTriggered = true;\n        } else if (hoursAndMinutes &&\n            hoursAndMinutes[1].length === 1 &&\n            hoursAndMinutes[2] &&\n            hoursAndMinutes[2].length === 2) {\n            isAutocompleteTriggered = true;\n        } else if (hoursAndMinutesAndSeconds &&\n            hoursAndMinutesAndSeconds[1].length === 2 &&\n            hoursAndMinutesAndSeconds[2].length === 2 &&\n            hoursAndMinutesAndSeconds[3] &&\n            hoursAndMinutesAndSeconds[3].length === 2) {\n            isAutocompleteTriggered = true;\n        }\n        // tslint:enable no-magic-numbers\n\n        this.applyInputChanges({ doTimestringReformat: isAutocompleteTriggered });\n\n        this.elementRef.nativeElement.selectionStart = initialCursorStart;\n        this.elementRef.nativeElement.selectionEnd = initialCursorEnd;\n\n        if (isAutocompleteTriggered && this.ngControl.errors === null) {\n            this.createSelectionOfTimeComponentInInput(initialCursorStart + 1);\n        }\n    }\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    get empty(): boolean {\n        return !this.elementRef.nativeElement.value && !this.isBadInput();\n    }\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    onContainerClick() {\n        this.focus();\n    }\n\n    writeValue(value: Date | null): void {\n        if (value !== null) {\n            this.renderer.setProperty(this.elementRef.nativeElement,\n                'value',\n                this.getTimeStringFromDate(value, this.timeFormat)\n            );\n        }\n        this.onChange(value || null);\n        this.applyInputChanges();\n    }\n\n    onKeyDown(event: KeyboardEvent): void {\n\n        const keyCode: string = this.getKeyCode(event);\n\n        if (keyCode === ARROW_UP_KEYCODE || keyCode === ARROW_DOWN_KEYCODE) {\n            this.upDownTimeByArrowKeys(event);\n        }\n        if (keyCode === ARROW_LEFT_KEYCODE || keyCode === ARROW_RIGHT_KEYCODE) {\n            this.switchSelectionBetweenTimeparts(event);\n        }\n    }\n\n    registerOnChange(fn: (value: Date) => void): void {\n        this.onChange = fn;\n    }\n\n    registerOnTouched(fn: () => void): void {\n        this.onTouched = fn;\n    }\n\n    /** Does some manual dirty checking on the native input `value` property. */\n    private dirtyCheckNativeValue() {\n        const newValue = this.value;\n\n        if (this.previousNativeValue !== newValue) {\n            this.previousNativeValue = newValue;\n            this.stateChanges.next();\n        }\n    }\n\n    /** Checks whether the input is invalid based on the native validation. */\n    private isBadInput(): boolean {\n        const validity = (<HTMLInputElement> this.elementRef.nativeElement).validity;\n\n        return validity && validity.badInput;\n    }\n\n    private applyInputChanges(applyParams: {\n        changedTime?: Date;\n        doTimestringReformat?: boolean;\n    } = {}): void {\n        const { changedTime, doTimestringReformat = true } = applyParams;\n\n        const timeToApply: Date | undefined = changedTime ||\n            this.getDateFromTimeString(this.elementRef.nativeElement.value);\n        this.currentDateTimeInput = timeToApply;\n\n        if (doTimestringReformat && timeToApply !== undefined) {\n            const selectionStart: number = this.elementRef.nativeElement.selectionStart;\n            const selectionEnd: number = this.elementRef.nativeElement.selectionEnd;\n            this.renderer.setProperty(\n                this.elementRef.nativeElement,\n                'value',\n                this.getTimeStringFromDate(timeToApply, this.timeFormat));\n            this.elementRef.nativeElement.selectionStart = selectionStart;\n            this.elementRef.nativeElement.selectionEnd = selectionEnd;\n        }\n\n        (<FormControl> this.ngControl.control).updateValueAndValidity();\n        const result = this.ngControl.errors === null && timeToApply !== undefined ? timeToApply : null;\n        this.onChange(result);\n        this.stateChanges.next();\n    }\n\n    private upDownTimeByArrowKeys(event: KeyboardEvent): void {\n        event.preventDefault();\n\n        let changedTime: Date | undefined = this.currentDateTimeInput;\n        if (changedTime !== undefined) {\n            const cursorPos = this.elementRef.nativeElement.selectionStart;\n\n            const modifiedTimePart = this.getTimeEditMetrics(cursorPos)\n                .modifiedTimePart;\n            const keyCode: string = this.getKeyCode(event);\n            if (keyCode === ARROW_UP_KEYCODE) { changedTime = this.incrementTime(changedTime, modifiedTimePart); }\n            if (keyCode === ARROW_DOWN_KEYCODE) { changedTime = this.decrementTime(changedTime, modifiedTimePart); }\n            this.applyInputChanges({ changedTime });\n            this.createSelectionOfTimeComponentInInput(cursorPos);\n        }\n    }\n\n    private switchSelectionBetweenTimeparts(event: KeyboardEvent): void {\n        const changedTime: Date | undefined = this.currentDateTimeInput;\n        const keyCode: string = this.getKeyCode(event);\n\n        if (changedTime !== undefined) {\n            let cursorPos: number = this.elementRef.nativeElement.selectionStart;\n            if (keyCode === ARROW_LEFT_KEYCODE) {\n                cursorPos = this.getCursorPositionOfPrevTimePartStart(cursorPos, this.elementRef.nativeElement.value);\n            } else if (keyCode === ARROW_RIGHT_KEYCODE) {\n                cursorPos = this.getCursorPositionOfNextTimePartStart(cursorPos, this.elementRef.nativeElement.value);\n            }\n            this.createSelectionOfTimeComponentInInput(cursorPos);\n        }\n    }\n\n    /**\n     * @description Microsoft EDGE doesn't support KeyboaedEvent.code thus we need this helper\n     */\n    private getKeyCode(event: KeyboardEvent): string {\n        return event.code || event.key;\n    }\n\n    private createSelectionOfTimeComponentInInput(cursorPos: number): void {\n        setTimeout(() => {\n            const newEditParams = this.getTimeEditMetrics(cursorPos);\n            this.elementRef.nativeElement.selectionStart = newEditParams.cursorStartPosition;\n            this.elementRef.nativeElement.selectionEnd = newEditParams.cursorEndPosition;\n        });\n    }\n\n    private incrementTime(dateVal: Date,\n                          whatToIncrement: TimeParts = TimeParts.seconds): Date {\n        let { hours, minutes, seconds } = this.getTimeDigitsFromDate(dateVal);\n\n        switch (whatToIncrement) {\n            case TimeParts.hours:\n                hours++;\n                break;\n            case TimeParts.minutes:\n                minutes++;\n                break;\n            case TimeParts.seconds:\n                seconds++;\n                break;\n            default:\n        }\n\n        if (seconds > SECONDS_PER_MINUTE) { seconds = 0; }\n\n        if (minutes > MINUTES_PER_HOUR) { minutes = 0; }\n\n        if (hours > HOURS_PER_DAY) { hours = 0; }\n\n        return <Date> this.getDateFromTimeDigits(hours, minutes, seconds);\n    }\n\n    /**\n     * @description Decrement part of time\n     */\n    private decrementTime(dateVal: Date,\n                          whatToDecrement: TimeParts = TimeParts.seconds): Date {\n        let { hours, minutes, seconds } = this.getTimeDigitsFromDate(dateVal);\n\n        switch (whatToDecrement) {\n            case TimeParts.hours:\n                hours--;\n                break;\n            case TimeParts.minutes:\n                minutes--;\n                break;\n            case TimeParts.seconds:\n                seconds--;\n                break;\n            default:\n        }\n\n        if (seconds < 0) { seconds = SECONDS_PER_MINUTE; }\n\n        if (minutes < 0) { minutes = MINUTES_PER_HOUR; }\n\n        if (hours < 0) { hours = HOURS_PER_DAY; }\n\n        return <Date> this.getDateFromTimeDigits(hours, minutes, seconds);\n    }\n\n    private getCursorPositionOfPrevTimePartStart(cursorPos: number, timeString: string): number {\n        return cursorPos === 0 ? timeString.length : cursorPos - 1;\n    }\n\n    private getCursorPositionOfNextTimePartStart(cursorPos: number,\n                                                 timeString: string,\n                                                 timeDevider: string = ':'): number {\n        const nextDividerPos: number = timeString.indexOf(timeDevider, cursorPos);\n\n        return nextDividerPos !== undefined ? nextDividerPos + 1 : 0;\n    }\n\n    /**\n     * @description Get params for arrow-keys (up/down) time valie edit.\n     * @param cursorPosition Current cursor position in timeString\n     */\n    private getTimeEditMetrics(cursorPosition: number): {\n        modifiedTimePart: TimeParts;\n        cursorStartPosition: number;\n        cursorEndPosition: number;\n    } {\n        const timeString: string = this.elementRef.nativeElement.value;\n        let modifiedTimePart: TimeParts;\n        let cursorStartPosition: number;\n        let cursorEndPosition: number;\n        const hoursIndex = 0;\n        const minutesIndex = timeString.indexOf(':', hoursIndex + 1);\n        const secondsIndex = minutesIndex !== -1 ? timeString.indexOf(':', minutesIndex + 1) : -1;\n\n        if (secondsIndex !== -1 && cursorPosition > secondsIndex) {\n            modifiedTimePart = TimeParts.seconds;\n            cursorStartPosition = secondsIndex + 1;\n            cursorEndPosition = timeString.length;\n        } else if (minutesIndex !== -1 && cursorPosition > minutesIndex) {\n            modifiedTimePart = TimeParts.minutes;\n            cursorStartPosition = minutesIndex + 1;\n            cursorEndPosition = secondsIndex > -1 ? secondsIndex : timeString.length;\n        } else {\n            modifiedTimePart = TimeParts.hours;\n            cursorStartPosition = hoursIndex;\n            cursorEndPosition = minutesIndex !== -1 ? minutesIndex : timeString.length;\n        }\n\n        return {\n            modifiedTimePart,\n            cursorStartPosition,\n            cursorEndPosition\n        };\n    }\n\n    /**\n     * @description Create time string for displaying inside input element of UI\n     */\n    private getTimeStringFromDate(tempVal: Date,\n                                  timeFormat: TimeFormats = DEFAULT_TIME_FORMAT): string {\n        const hours: string = this.getNumberWithLeadingZero(tempVal.getHours());\n        const minutes: string = this.getNumberWithLeadingZero(tempVal.getMinutes());\n        const seconds: string = this.getNumberWithLeadingZero(tempVal.getSeconds());\n\n        const formattedTimeGenerators = {\n            [TimeFormats.HHmm]: () => `${hours}:${minutes}`,\n            [TimeFormats.HHmmss]: () => `${hours}:${minutes}:${seconds}`\n        };\n\n        return formattedTimeGenerators[timeFormat]();\n    }\n\n    private getParsedTimeParts(timeString: string): {\n        hoursOnly: any;\n        hoursAndMinutes: any;\n        hoursAndMinutesAndSeconds: any;\n    } {\n        const hoursAndMinutesAndSeconds = timeString.match(HOURS_MINUTES_SECONDS_REGEXP);\n        const hoursAndMinutes = timeString.match(HOURS_MINUTES_REGEXP);\n        const hoursOnly = timeString.match(HOURS_ONLY_REGEXP);\n\n        return {\n            hoursOnly,\n            hoursAndMinutes,\n            hoursAndMinutesAndSeconds\n        };\n    }\n\n    /**\n     * @description Create Date object from separate parts of time\n     */\n    private getDateFromTimeDigits(hours: number, minutes: number, seconds: number = 0): Date | undefined {\n        return this.getDateFromTimeString(`${hours}:${minutes}:${seconds}`);\n    }\n\n    private getDateFromTimeString(timeString: string | undefined): Date | undefined {\n        // TODO Use moment-js\n        if (timeString === undefined) { return; }\n\n        const {\n            hoursOnly,\n            hoursAndMinutes,\n            hoursAndMinutesAndSeconds\n        } = this.getParsedTimeParts(timeString);\n\n        if (timeString.trim().length === 0 ||\n            hoursOnly === null && hoursAndMinutes === null && hoursAndMinutesAndSeconds === null) {\n            return;\n        }\n\n        // tslint:disable no-magic-numbers\n        let hours: number = 0;\n        let minutes: number = 0;\n        let seconds: number = 0;\n\n        if (hoursOnly) {\n            hours = Number(hoursOnly[1]);\n        } else if (hoursAndMinutes) {\n            hours = Number(hoursAndMinutes[1]);\n            minutes = Number(hoursAndMinutes[2]);\n        } else if (hoursAndMinutesAndSeconds) {\n            hours = Number(hoursAndMinutesAndSeconds[1]);\n            minutes = Number(hoursAndMinutesAndSeconds[2]);\n            seconds = Number(hoursAndMinutesAndSeconds[3]);\n        }\n        // const timestamp: number = Date.parse(fullDateString);\n        const resultDate: Date = new Date(1970, 0, 1, hours, minutes, seconds);\n        // tslint:enable no-magic-numbers\n\n        return isNaN(resultDate.getTime()) ? undefined : resultDate;\n    }\n\n    private getNumberWithLeadingZero(digit: number): string {\n        const MAX_DIGIT_WITH_LEADING_ZERO: number = 9;\n\n        return digit > MAX_DIGIT_WITH_LEADING_ZERO ? `${digit}` : `0${digit}`;\n    }\n\n    private getTimeDigitsFromDate(dateVal: Date): { hours: number; minutes: number; seconds: number } {\n        return {\n            hours: dateVal.getHours(),\n            minutes: dateVal.getMinutes(),\n            seconds: dateVal.getSeconds()\n        };\n    }\n\n    private parseValidator(): ValidationErrors | null {\n        return this.currentDateTimeInput === undefined ?\n            { mcTimepickerParse: { text: this.elementRef.nativeElement.value } } :\n            null;\n    }\n\n    private minTimeValidator(): ValidationErrors | null {\n\n        if (this.currentDateTimeInput !== undefined &&\n            this.minDateTime !== undefined &&\n            this.isTimeLowerThenMin(this.currentDateTimeInput)) {\n            return { mcTimepickerLowerThenMintime: { text: this.elementRef.nativeElement.value } };\n        }\n\n        return null;\n    }\n\n    private maxTimeValidator(): ValidationErrors | null {\n        if (this.currentDateTimeInput !== undefined &&\n            this.maxDateTime !== undefined &&\n            this.isTimeGreaterThenMax(this.currentDateTimeInput)) {\n            return { mcTimepickerHigherThenMaxtime: { text: this.elementRef.nativeElement.value } };\n        }\n\n        return null;\n    }\n\n    private isTimeLowerThenMin(timeToCompare: Date): boolean {\n        return timeToCompare.getTime() - (<Date> this.minDateTime).getTime() < 0;\n    }\n\n    private isTimeGreaterThenMax(timeToCompare: Date): boolean {\n        return timeToCompare.getTime() - (<Date> this.maxDateTime).getTime() >= 0;\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\n\nimport { A11yModule } from '@ptsecurity/cdk/a11y';\nimport { PlatformModule } from '@ptsecurity/cdk/platform';\n\nimport { McTimepicker } from './timepicker';\n\n\n@NgModule({\n    imports: [\n        CommonModule,\n        A11yModule,\n        PlatformModule,\n        FormsModule\n    ],\n    declarations: [\n        McTimepicker\n    ],\n    exports: [\n        McTimepicker\n    ]\n})\nexport class McTimepickerModule {}\n","import {\n    animate,\n    AnimationTriggerMetadata,\n    state,\n    style,\n    transition,\n    trigger,\n    query,\n    animateChild,\n    group\n} from '@angular/animations';\n\n\n/**\n * The following are all the animations for the mat-select component, with each\n * const containing the metadata for one animation.\n *\n * The values below match the implementation of the AngularJS Material mat-select animation.\n */\nexport const mcSelectAnimations: {\n    readonly transformPanel: AnimationTriggerMetadata;\n    readonly fadeInContent: AnimationTriggerMetadata;\n} = {\n    /**\n     * This animation transforms the select's overlay panel on and off the page.\n     *\n     * When the panel is attached to the DOM, it expands its width by the amount of padding, scales it\n     * up to 100% on the Y axis, fades in its border, and translates slightly up and to the\n     * side to ensure the option text correctly overlaps the trigger text.\n     *\n     * When the panel is removed from the DOM, it simply fades out linearly.\n     */\n    transformPanel: trigger('transformPanel', [\n        state('void', style({\n            transform: 'scaleY(0)',\n            minWidth: '100%',\n            opacity: 0\n        })),\n        transition('void => *', group([\n            query('@fadeInContent', animateChild()),\n            animate('150ms cubic-bezier(0.25, 0.8, 0.25, 1)')\n        ])),\n        transition('* => void', [\n            animate('250ms 100ms linear', style({ opacity: 0 }))\n        ])\n    ]),\n\n    /**\n     * This animation fades in the background color and text content of the\n     * select's options. It is time delayed to occur 100ms after the overlay\n     * panel has transformed in.\n     */\n    fadeInContent: trigger('fadeInContent', [\n        state('showing', style({ opacity: 1 })),\n        transition('void => showing', [\n            style({ opacity: 0 }),\n            animate('150ms 100ms cubic-bezier(0.55, 0, 0.55, 0.2)')\n        ])\n    ])\n};\n\n\n/**\n * @deprecated\n * @breaking-change 7.0.0\n */\nexport const transformPanel = mcSelectAnimations.transformPanel;\n\n/**\n * @deprecated\n * @breaking-change 7.0.0\n */\nexport const fadeInContent = mcSelectAnimations.fadeInContent;\n","import {\n    AfterContentInit,\n    Attribute,\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component, ContentChildren, EventEmitter, forwardRef, Input, IterableDiffer,\n    IterableDiffers, Output, QueryList,\n    ViewChild,\n    ViewEncapsulation,\n    Directive, ElementRef, Inject\n} from '@angular/core';\nimport { NodeDef, ViewData } from '@angular/core/src/view';\n\nimport { SelectionModel } from '@ptsecurity/cdk/collections';\nimport { CdkTreeNode, CdkTree, CdkTreeNodeOutlet } from '@ptsecurity/cdk/tree';\n\nimport {\n    CanDisable, CanDisableCtor,\n    HasTabIndex,\n    HasTabIndexCtor,\n    mixinDisabled,\n    mixinTabIndex,\n    toBoolean\n} from '@ptsecurity/mosaic/core';\n\nimport { FocusKeyManager } from '@ptsecurity/cdk/a11y';\n\nimport { END, ENTER, HOME, LEFT_ARROW, PAGE_DOWN, PAGE_UP, RIGHT_ARROW, SPACE } from '@ptsecurity/cdk/keycodes';\n\n\n/**\n * Wrapper for the CdkTree node with Material design styles.\n */\n@Directive({\n    exportAs: 'mcTreeNodeOption',\n    selector: 'mc-tree-node-option',\n    host: {\n        tabindex: '-1',\n        '[class.mc-selected]': 'selected',\n        '[class.mc-focused]': '_hasFocus',\n        '[attr.aria-expanded]': 'isExpanded',\n        '[attr.aria-level]': 'role === \"treeitem\" ? level : null',\n        class: 'mc-tree-node',\n\n        '(focus)': '_handleFocus()',\n        '(blur)': '_handleBlur()',\n\n        '(click)': '_handleClick()'\n    },\n    providers: [\n        { provide: CdkTreeNode, useExisting: McTreeNodeOption }\n    ]\n})\nexport class McTreeNodeOption<T> extends CdkTreeNode<T> implements CanDisable {\n    @Input() role: 'treeitem' | 'group' = 'treeitem';\n\n    @Input()\n    get disabled() {\n        return this._disabled;\n    }\n\n    set disabled(value: any) {\n        const newValue = toBoolean(value);\n\n        if (newValue !== this._disabled) {\n            this._disabled = newValue;\n        }\n    }\n\n    @Input()\n    get selected(): boolean {\n        return this.treeSelection.selectedOptions && this.treeSelection.selectedOptions.isSelected(this) || false;\n    }\n\n    set selected(value: boolean) {\n        const isSelected = toBoolean(value);\n\n        if (isSelected !== this._selected) {\n            this.setSelected(isSelected);\n\n            // this.treeSelection._reportValueChange();\n        }\n    }\n\n    private _hasFocus: boolean = false;\n\n    private _disabled: boolean = false;\n    private _selected: boolean = false;\n\n    constructor(\n        protected _elementRef: ElementRef,\n        @Inject(forwardRef(() => McTreeSelection))\n        protected treeSelection: McTreeSelection<T>\n    ) {\n        super(_elementRef, treeSelection);\n    }\n\n    focus(): void {\n        this._elementRef.nativeElement.focus();\n\n        this.treeSelection.setFocusedOption(this);\n    }\n\n    toggle(): void {\n        this.selected = !this.selected;\n    }\n\n    setSelected(selected: boolean) {\n        if (this._selected === selected || !this.treeSelection.selectedOptions) { return; }\n\n        this._selected = selected;\n\n        if (selected) {\n            this.treeSelection.selectedOptions.select(this);\n        } else {\n            this.treeSelection.selectedOptions.deselect(this);\n        }\n\n        // this._changeDetector.markForCheck();\n    }\n\n    _getHeight(): number {\n        return this._elementRef.nativeElement.getClientRects()[0].height;\n    }\n\n    _handleFocus(): void {\n        if (this.disabled || this._hasFocus) { return; }\n\n        this._hasFocus = true;\n    }\n\n    _handleBlur(): void {\n        this._hasFocus = false;\n    }\n\n    _handleClick(): void {\n        if (this.disabled) { return; }\n\n        this.treeSelection.setFocusedOption(this);\n    }\n}\n\nexport const _McTreeSelectionBase:\n    HasTabIndexCtor &\n    CanDisableCtor &\n    typeof CdkTree\n    = mixinTabIndex(mixinDisabled(CdkTree));\n\nexport class McTreeNavigationChange {\n    constructor(\n        public source: McTreeSelection<any>,\n        public option: McTreeNodeOption<any>\n    ) {}\n}\n\nexport class McTreeSelectionChange {\n    constructor(\n        public source: McTreeSelection<any>,\n        public option: McTreeNodeOption<any>\n    ) {}\n}\n\n@Component({\n    exportAs: 'mcTreeSelection',\n    selector: 'mc-tree-selection',\n    template: `<ng-container cdkTreeNodeOutlet></ng-container>`,\n    host: {\n        '[tabIndex]': 'tabIndex',\n        class: 'mc-tree-selection',\n        role: 'tree-selection',\n        '(keydown)': '_onKeyDown($event)',\n        '(window:resize)': 'updateScrollSize()'\n    },\n    styleUrls: ['./tree.css'],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    providers: [{ provide: CdkTree, useExisting: McTreeSelection }]\n})\nexport class McTreeSelection<T> extends _McTreeSelectionBase<T>\n    implements AfterContentInit, CanDisable, HasTabIndex {\n    // Outlets within the tree's template where the dataNodes will be inserted.\n    @ViewChild(CdkTreeNodeOutlet) _nodeOutlet: CdkTreeNodeOutlet;\n\n    @ContentChildren(forwardRef(() => McTreeNodeOption)) options: QueryList<McTreeNodeOption<T>>;\n\n    _keyManager: FocusKeyManager<McTreeNodeOption<T>>;\n\n    selectedOptions: SelectionModel<McTreeNodeOption<T>>;\n\n    _disabled: boolean = false;\n    tabIndex: number;\n    multiple: boolean;\n    autoSelect: boolean;\n    noUnselect: boolean;\n\n    // todo temporary solution\n    withShift: boolean;\n    withCtrl: boolean;\n\n    @Input()\n    get disabled(): boolean {\n        return this._disabled;\n    }\n\n    set disabled(rawValue: boolean) {\n        const value = toBoolean(rawValue);\n\n        if (this._disabled !== value) {\n            this._disabled = value;\n\n            if (this._disabled) {\n                console.log('need disable all options');\n            } else {\n                console.log('need enable all options');\n            }\n        }\n    }\n\n    @Output() readonly navigationChange = new EventEmitter<McTreeNavigationChange>();\n\n    @Output() readonly selectionChange = new EventEmitter<McTreeSelectionChange>();\n\n    constructor(\n        private _elementRef: ElementRef,\n        _differs: IterableDiffers,\n        _changeDetectorRef: ChangeDetectorRef,\n        @Attribute('tabindex') tabIndex: string,\n        @Attribute('multiple') multiple: string,\n        @Attribute('auto-select') autoSelect: string,\n        @Attribute('no-unselect') noUnselect: string\n    ) {\n        super(_differs, _changeDetectorRef);\n\n        this.tabIndex = parseInt(tabIndex) || 0;\n\n        this.multiple = multiple === null ? true : toBoolean(multiple);\n        this.autoSelect = autoSelect === null ? true : toBoolean(autoSelect);\n        this.noUnselect = noUnselect === null ? true : toBoolean(noUnselect);\n\n        this.selectedOptions = new SelectionModel<McTreeNodeOption<T>>(this.multiple);\n    }\n\n    _onKeyDown(event: KeyboardEvent) {\n        const keyCode = event.keyCode;\n        this.withShift = event.shiftKey;\n        this.withCtrl = event.ctrlKey;\n\n        switch (keyCode) {\n            case LEFT_ARROW:\n                if (this._keyManager.activeItem) {\n                    this.treeControl.collapse(this._keyManager.activeItem.data);\n                }\n\n                event.preventDefault();\n\n                break;\n            case RIGHT_ARROW:\n                if (this._keyManager.activeItem) {\n                    this.treeControl.expand(this._keyManager.activeItem.data);\n                }\n\n                event.preventDefault();\n\n                break;\n            case SPACE:\n            case ENTER:\n                this.toggleFocusedOption();\n                event.preventDefault();\n\n                break;\n            case HOME:\n                this._keyManager.setFirstItemActive();\n                event.preventDefault();\n\n                break;\n            case END:\n                this._keyManager.setLastItemActive();\n                event.preventDefault();\n\n                break;\n            case PAGE_UP:\n                this._keyManager.setPreviousPageItemActive();\n                event.preventDefault();\n\n                break;\n            case PAGE_DOWN:\n                this._keyManager.setNextPageItemActive();\n                event.preventDefault();\n\n                break;\n            default:\n                this._keyManager.onKeydown(event);\n        }\n    }\n\n    ngAfterContentInit(): void {\n        this._keyManager = new FocusKeyManager<McTreeNodeOption<T>>(this.options)\n            .withTypeAhead()\n            .withVerticalOrientation(true)\n            .withHorizontalOrientation(null);\n    }\n\n    updateScrollSize(): void {\n        if (!this.options.first) { return; }\n\n        this._keyManager.withScrollSize(Math.floor(this._getHeight() / this.options.first._getHeight()));\n    }\n\n    setFocusedOption(option: McTreeNodeOption<T>): void {\n        this._keyManager.updateActiveItem(option);\n\n        if (this.withShift && this.multiple) {\n            const previousIndex = this._keyManager.previousActiveItemIndex;\n            const activeIndex = this._keyManager.activeItemIndex;\n\n            if (previousIndex < activeIndex) {\n                this.options.forEach((item, index) => {\n                    if (index >= previousIndex && index <= activeIndex) { item.setSelected(true); }\n                });\n            } else {\n                this.options.forEach((item, index) => {\n                    if (index >= activeIndex && index <= previousIndex) { item.setSelected(true); }\n                });\n            }\n\n            this.withShift = false;\n        } else if (this.withCtrl) {\n            this.withCtrl = false;\n\n            if (!this._canDeselectLast(option)) { return; }\n\n            option.toggle();\n        } else {\n            if (this.autoSelect) {\n                this.options.forEach((item) => item.setSelected(false));\n                option.setSelected(true);\n            }\n        }\n\n        this._emitNavigationEvent(option);\n    }\n\n    // Toggles the selected state of the currently focused option.\n    toggleFocusedOption(): void {\n        const focusedIndex = this._keyManager.activeItemIndex;\n\n        if (focusedIndex != null && this._isValidIndex(focusedIndex)) {\n            const focusedOption: McTreeNodeOption<T> = this.options.toArray()[focusedIndex];\n\n            if (focusedOption && this._canDeselectLast(focusedOption)) {\n                focusedOption.toggle();\n\n                // Emit a change event because the focused option changed its state through user interaction.\n                this._emitChangeEvent(focusedOption);\n            }\n        }\n    }\n\n    renderNodeChanges(\n        data: T[],\n        dataDiffer: IterableDiffer<T> = this._dataDiffer,\n        viewContainer: any = this._nodeOutlet.viewContainer,\n        parentData?: T\n    ) {\n        super.renderNodeChanges(data, dataDiffer, viewContainer, parentData);\n\n        const arrayOfInstances = [];\n\n        viewContainer._embeddedViews.forEach((view: ViewData) => {\n            const viewDef = view.def;\n\n            viewDef.nodes.forEach((node: NodeDef) => {\n                if (viewDef.nodeMatchedQueries === node.matchedQueryIds) {\n                    const nodeData: any = view.nodes[node.nodeIndex];\n\n                    arrayOfInstances.push(nodeData.instance as never);\n                }\n            });\n        });\n\n        if (this.options) {\n            this.options.reset(arrayOfInstances);\n            this.options.notifyOnChanges();\n        }\n\n        this.updateScrollSize();\n    }\n\n    _getHeight(): number {\n        return this._elementRef.nativeElement.getClientRects()[0].height;\n    }\n\n    _emitNavigationEvent(option: McTreeNodeOption<T>): void {\n        this.navigationChange.emit(new McTreeNavigationChange(this, option));\n    }\n\n    _emitChangeEvent(option: McTreeNodeOption<T>): void {\n        this.selectionChange.emit(new McTreeNavigationChange(this, option));\n    }\n\n    /**\n     * Utility to ensure all indexes are valid.\n     * @param index The index to be checked.\n     * @returns True if the index is valid for our list of options.\n     */\n    private _isValidIndex(index: number): boolean {\n        return index >= 0 && index < this.options.length;\n    }\n\n    private _canDeselectLast(option: McTreeNodeOption<T>): boolean {\n        return !(this.noUnselect && this.selectedOptions.selected.length === 1 && option.selected);\n    }\n}\n\n","import { NgModule } from '@angular/core';\n\nimport { CommonModule } from '@angular/common';\nimport { CdkTreeModule } from '@ptsecurity/cdk/tree';\n\nimport { McTreeNodeDef } from './node';\nimport { McTreeNodePadding } from './padding';\nimport { McTreeSelection, McTreeNodeOption } from './tree-selection';\n\n\nconst MC_TREE_DIRECTIVES = [\n    McTreeNodeDef,\n    McTreeNodePadding,\n    McTreeSelection,\n    McTreeNodeOption\n];\n\n@NgModule({\n    imports: [CommonModule, CdkTreeModule],\n    exports: MC_TREE_DIRECTIVES,\n    declarations: MC_TREE_DIRECTIVES\n})\nexport class McTreeModule {}\n","import { ICollectionViewer, DataSource } from '@ptsecurity/cdk/collections';\nimport { FlatTreeControl, ITreeControl } from '@ptsecurity/cdk/tree';\nimport { BehaviorSubject, merge, Observable } from 'rxjs';\nimport { map, take } from 'rxjs/operators';\n\n\n/**\n * Tree flattener to convert a normal type of node to node with children & level information.\n * Transform nested nodes of type `T` to flattened nodes of type `F`.\n *\n * For example, the input data of type `T` is nested, and contains its children data:\n *   SomeNode: {\n *     key: 'Fruits',\n *     children: [\n *       NodeOne: {\n *         key: 'Apple',\n *       },\n *       NodeTwo: {\n *        key: 'Pear',\n *      }\n *    ]\n *  }\n *  After flattener flatten the tree, the structure will become\n *  SomeNode: {\n *    key: 'Fruits',\n *    expandable: true,\n *    level: 1\n *  },\n *  NodeOne: {\n *    key: 'Apple',\n *    expandable: false,\n *    level: 2\n *  },\n *  NodeTwo: {\n *   key: 'Pear',\n *   expandable: false,\n *   level: 2\n * }\n * and the output flattened type is `F` with additional information.\n */\nexport class McTreeFlattener<T, F> {\n\n    constructor(public transformFunction: (node: T, level: number) => F,\n                public getLevel: (node: F) => number,\n                public isExpandable: (node: F) => boolean,\n                public getChildren: (node: T) => Observable<T[]>) {\n    }\n\n    _flattenNode(node: T, level: number,\n                 resultNodes: F[], parentMap: boolean[]): F[] {\n        const flatNode = this.transformFunction(node, level);\n        resultNodes.push(flatNode);\n\n        if (this.isExpandable(flatNode)) {\n            this.getChildren(node).pipe(take(1)).subscribe((children) => {\n                children.forEach((child, index) => {\n                    const childParentMap: boolean[] = parentMap.slice();\n                    childParentMap.push(index !== children.length - 1);\n                    this._flattenNode(child, level + 1, resultNodes, childParentMap);\n                });\n            });\n        }\n\n        return resultNodes;\n    }\n\n    /**\n     * Flatten a list of node type T to flattened version of node F.\n     * Please note that type T may be nested, and the length of `structuredData` may be different\n     * from that of returned list `F[]`.\n     */\n    flattenNodes(structuredData: T[]): F[] {\n        const resultNodes: F[] = [];\n        structuredData.forEach((node) => this._flattenNode(node, 0, resultNodes, []));\n\n        return resultNodes;\n    }\n\n    /**\n     * Expand flattened node with current expansion status.\n     * The returned list may have different length.\n     */\n    expandFlattenedNodes(nodes: F[], treeControl: ITreeControl<F>): F[] {\n        const results: F[] = [];\n        const currentExpand: boolean[] = [];\n        currentExpand[0] = true;\n\n        nodes.forEach((node) => {\n            let expand = true;\n            for (let i = 0; i <= this.getLevel(node); i++) {\n                expand = expand && currentExpand[i];\n            }\n\n            if (expand) { results.push(node); }\n\n            if (this.isExpandable(node)) {\n                currentExpand[this.getLevel(node) + 1] = treeControl.isExpanded(node);\n            }\n        });\n\n        return results;\n    }\n}\n\n\n/**\n * Data source for flat tree.\n * The data source need to handle expansion/collapsion of the tree node and change the data feed\n * to `McTree`.\n * The nested tree nodes of type `T` are flattened through `MсTreeFlattener`, and converted\n * to type `F` for `McTree` to consume.\n */\nexport class McTreeFlatDataSource<T, F> extends DataSource<F> {\n    _flattenedData = new BehaviorSubject<F[]>([]);\n\n    _expandedData = new BehaviorSubject<F[]>([]);\n\n    _data: BehaviorSubject<T[]>;\n\n    get data() {\n        return this._data.value;\n    }\n\n    set data(value: T[]) {\n        this._data.next(value);\n        this._flattenedData.next(this.treeFlattener.flattenNodes(this.data));\n        this.treeControl.dataNodes = this._flattenedData.value;\n    }\n\n    constructor(private treeControl: FlatTreeControl<F>,\n                private treeFlattener: McTreeFlattener<T, F>,\n                initialData: T[] = []) {\n        super();\n        this._data = new BehaviorSubject<T[]>(initialData);\n    }\n\n    connect(collectionViewer: ICollectionViewer): Observable<F[]> {\n        const changes = [\n            collectionViewer.viewChange,\n            this.treeControl.expansionModel.onChange!,\n            this._flattenedData\n        ];\n\n        return merge(...changes).pipe(map(() => {\n            this._expandedData.next(\n                this.treeFlattener.expandFlattenedNodes(this._flattenedData.value, this.treeControl));\n\n            return this._expandedData.value;\n        }));\n    }\n\n    disconnect() {\n        // no op\n    }\n}\n\n","import { ICollectionViewer, DataSource } from '@ptsecurity/cdk/collections';\nimport { BehaviorSubject, merge, Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\n\n/**\n * Data source for nested tree.\n *\n * The data source for nested tree doesn't have to consider node flattener, or the way to expand\n * or collapse. The expansion/collapsion will be handled by ITreeControl and each non-leaf node.\n */\nexport class McTreeNestedDataSource<T> extends DataSource<T> {\n    _data = new BehaviorSubject<T[]>([]);\n\n    /**\n     * Data for the nested tree\n     */\n    get data() {\n        return this._data.value;\n    }\n\n    set data(value: T[]) {\n        this._data.next(value);\n    }\n\n    connect(collectionViewer: ICollectionViewer): Observable<T[]> {\n        return merge(...[collectionViewer.viewChange, this._data])\n            .pipe(map(() => this.data));\n    }\n\n    disconnect() {\n        // no op\n    }\n}\n\n","import { Directive, TemplateRef } from '@angular/core';\n\n\n/** Decorates the `ng-template` tags and reads out the template from it. */\n@Directive({ selector: '[mcTabContent]' })\nexport class McTabContent {\n    constructor(public template: TemplateRef<any>) { }\n}\n","import { Directive } from '@angular/core';\nimport { CdkPortal } from '@ptsecurity/cdk/portal';\n\n\n/** Used to flag tab labels for use with the portal directive */\n@Directive({\n    selector: '[mc-tab-label], [mcTabLabel]'\n})\nexport class McTabLabel extends CdkPortal {}\n\n// TODO: workaround for https://github.com/angular/material2/issues/12760\n(McTabLabel as any).ctorParameters = () => (CdkPortal as any).ctorParameters;\n","import {\n    ChangeDetectionStrategy,\n    Component,\n    ContentChild,\n    Input,\n    OnChanges,\n    OnDestroy,\n    OnInit,\n    SimpleChanges,\n    TemplateRef,\n    ViewChild,\n    ViewContainerRef,\n    ViewEncapsulation\n} from '@angular/core';\nimport { TemplatePortal } from '@ptsecurity/cdk/portal';\nimport {\n    CanDisable,\n    CanDisableCtor,\n    mixinDisabled\n} from '@ptsecurity/mosaic/core';\nimport { Subject } from 'rxjs';\n\nimport { McTabContent } from './tab-content';\nimport { McTabLabel } from './tab-label';\n\n\nexport class McTabBase {}\nexport const mcTabMixinBase: CanDisableCtor & typeof McTabBase = mixinDisabled(\n    McTabBase\n);\n\n@Component({\n    selector: 'mc-tab',\n    // Create a template for the content of the <mc-tab> so that we can grab a reference to this\n    // TemplateRef and use it in a Portal to render the tab content in the appropriate place in the\n    // tab-group.\n    template: '<ng-template><ng-content></ng-content></ng-template>',\n    inputs: ['disabled'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n    exportAs: 'mcTab'\n})\nexport class McTab extends mcTabMixinBase\n    implements OnInit, CanDisable, OnChanges, OnDestroy {\n    /** @docs-private */\n    get content(): TemplatePortal | null {\n        return this.contentPortal;\n    }\n    /** Content for the tab label given by `<ng-template mc-tab-label>`. */\n    @ContentChild(McTabLabel)\n    templateLabel: McTabLabel;\n\n    /**\n     * Template provided in the tab content that will be used if present, used to enable lazy-loading\n     */\n    @ContentChild(McTabContent, { read: TemplateRef })\n    explicitContent: TemplateRef<any>;\n\n    /** Template inside the McTab view that contains an `<ng-content>`. */\n    @ViewChild(TemplateRef)\n    implicitContent: TemplateRef<any>;\n\n    /** Plain text label for the tab, used when there is no template label. */\n    @Input('label')\n    textLabel: string = '';\n\n    /** Aria label for the tab. */\n    @Input('aria-label')\n    ariaLabel: string;\n\n    /**\n     * Reference to the element that the tab is labelled by.\n     * Will be cleared if `aria-label` is set at the same time.\n     */\n    @Input('aria-labelledby')\n    ariaLabelledby: string;\n\n    /** Emits whenever the internal state of the tab changes. */\n    readonly stateChanges = new Subject<void>();\n\n    /**\n     * The relatively indexed position where 0 represents the center, negative is left, and positive\n     * represents the right.\n     */\n    position: number | null = null;\n\n    /**\n     * The initial relatively index origin of the tab if it was created and selected after there\n     * was already a selected tab. Provides context of what position the tab should originate from.\n     */\n    origin: number | null = null;\n\n    /**\n     * Whether the tab is currently active.\n     */\n    isActive = false;\n\n    /** Portal that will be the hosted content of the tab */\n    private contentPortal: TemplatePortal | null = null;\n\n    constructor(private viewContainerRef: ViewContainerRef) {\n        super();\n    }\n\n    ngOnChanges(changes: SimpleChanges): void {\n        if (\n            changes.hasOwnProperty('textLabel') ||\n            changes.hasOwnProperty('disabled')\n        ) {\n            this.stateChanges.next();\n        }\n    }\n\n    ngOnDestroy(): void {\n        this.stateChanges.complete();\n    }\n\n    ngOnInit(): void {\n        this.contentPortal = new TemplatePortal(\n            this.explicitContent || this.implicitContent,\n            this.viewContainerRef\n        );\n    }\n}\n","import {\n    animate,\n    state,\n    style,\n    transition,\n    trigger,\n    AnimationTriggerMetadata\n} from '@angular/animations';\n\n\nexport const mcTabsAnimations: {\n    readonly translateTab: AnimationTriggerMetadata;\n} = {\n    /** Animation translates a tab along the X axis. */\n    translateTab: trigger('translateTab', [\n        // Note: transitions to `none` instead of 0, because some browsers might blur the content.\n        state(\n            'center, void, left-origin-center, right-origin-center',\n            style({ transform: 'none' })\n        ),\n\n        // If the tab is either on the left or right, we additionally add a `min-height` of 1px\n        // in order to ensure that the element has a height before its state changes. This is\n        // necessary because Chrome does seem to skip the transition in RTL mode if the element does\n        // not have a static height and is not rendered. See related issue: #9465\n        state(\n            'left',\n            style({ transform: 'translate3d(-100%, 0, 0)', minHeight: '1px' })\n        ),\n        state(\n            'right',\n            style({ transform: 'translate3d(100%, 0, 0)', minHeight: '1px' })\n        ),\n\n        transition(\n            '* => left, * => right, left => center, right => center',\n            animate('{{animationDuration}} cubic-bezier(0.35, 0, 0.25, 1)')\n        ),\n        transition('void => left-origin-center', [\n            style({ transform: 'translate3d(-100%, 0, 0)' }),\n            animate('{{animationDuration}} cubic-bezier(0.35, 0, 0.25, 1)')\n        ]),\n        transition('void => right-origin-center', [\n            style({ transform: 'translate3d(100%, 0, 0)' }),\n            animate('{{animationDuration}} cubic-bezier(0.35, 0, 0.25, 1)')\n        ])\n    ])\n};\n","import { AnimationEvent } from '@angular/animations';\nimport {\n    Component,\n    ChangeDetectorRef,\n    Input,\n    Inject,\n    Output,\n    EventEmitter,\n    OnDestroy,\n    OnInit,\n    ElementRef,\n    Directive,\n    Optional,\n    ViewEncapsulation,\n    ChangeDetectionStrategy,\n    ComponentFactoryResolver,\n    ViewContainerRef,\n    forwardRef,\n    ViewChild\n} from '@angular/core';\nimport { Directionality, Direction } from '@ptsecurity/cdk/bidi';\nimport { TemplatePortal, CdkPortalOutlet, PortalHostDirective } from '@ptsecurity/cdk/portal';\nimport { Subscription } from 'rxjs';\nimport { startWith } from 'rxjs/operators';\n\nimport { mcTabsAnimations } from './tabs-animations';\n\n\n/**\n * These position states are used internally as animation states for the tab body. Setting the\n * position state to left, right, or center will transition the tab body from its current\n * position to its respective state. If there is not current position (void, in the case of a new\n * tab body), then there will be no transition animation to its state.\n *\n * In the case of a new tab body that should immediately be centered with an animating transition,\n * then left-origin-center or right-origin-center can be used, which will use left or right as its\n * psuedo-prior state.\n */\nexport type McTabBodyPositionState =\n    'left' | 'center' | 'right' | 'left-origin-center' | 'right-origin-center';\n\n/**\n * The origin state is an internally used state that is set on a new tab body indicating if it\n * began to the left or right of the prior selected index. For example, if the selected index was\n * set to 1, and a new tab is created and selected at index 2, then the tab body would have an\n * origin of right because its index was greater than the prior selected index.\n */\nexport type McTabBodyOriginState = 'left' | 'right';\n\n/**\n * The portal host directive for the contents of the tab.\n * @docs-private\n */\n@Directive({\n    selector: '[mcTabBodyHost]'\n})\nexport class McTabBodyPortal extends CdkPortalOutlet implements OnInit, OnDestroy {\n    /** Subscription to events for when the tab body begins centering. */\n    private centeringSub = Subscription.EMPTY;\n    /** Subscription to events for when the tab body finishes leaving from center position. */\n    private leavingSub = Subscription.EMPTY;\n\n    constructor(\n        componentFactoryResolver: ComponentFactoryResolver,\n        viewContainerRef: ViewContainerRef,\n        @Inject(forwardRef(() => McTabBody)) private host: McTabBody) {\n        super(componentFactoryResolver, viewContainerRef);\n    }\n\n    /** Set initial visibility or set up subscription for changing visibility. */\n    ngOnInit(): void {\n        super.ngOnInit();\n\n        this.centeringSub = this.host.beforeCentering\n            .pipe(startWith(this.host.isCenterPosition(this.host.bodyPosition)))\n            .subscribe((isCentering: boolean) => {\n                if (isCentering && !this.hasAttached()) {\n                    this.attach(this.host.content);\n                }\n            });\n\n        this.leavingSub = this.host.afterLeavingCenter.subscribe(() => {\n            this.detach();\n        });\n    }\n\n    /** Clean up centering subscription. */\n    ngOnDestroy(): void {\n        super.ngOnDestroy();\n        this.centeringSub.unsubscribe();\n        this.leavingSub.unsubscribe();\n    }\n}\n\n/**\n * Wrapper for the contents of a tab.\n * @docs-private\n */\n@Component({\n    selector: 'mc-tab-body',\n    templateUrl: 'tab-body.html',\n    styleUrls: ['tab-body.css'],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    animations: [mcTabsAnimations.translateTab],\n    host: {\n        class: 'mc-tab-body'\n    }\n})\nexport class McTabBody implements OnInit, OnDestroy {\n\n    /** The shifted index position of the tab body, where zero represents the active center tab. */\n    @Input()\n    set position(position: number) {\n        this.positionIndex = position;\n        this.computePositionAnimationState();\n    }\n\n    /** Tab body position state. Used by the animation trigger for the current state. */\n    bodyPosition: McTabBodyPositionState;\n\n    /** Event emitted when the tab begins to animate towards the center as the active tab. */\n    @Output() readonly onCentering: EventEmitter<number> = new EventEmitter<number>();\n\n    /** Event emitted before the centering of the tab begins. */\n    @Output() readonly beforeCentering: EventEmitter<boolean> = new EventEmitter<boolean>();\n\n    /** Event emitted before the centering of the tab begins. */\n    @Output() readonly afterLeavingCenter: EventEmitter<boolean> = new EventEmitter<boolean>();\n\n    /** Event emitted when the tab completes its animation towards the center. */\n    @Output() readonly onCentered: EventEmitter<void> = new EventEmitter<void>(true);\n\n    /** The portal host inside of this container into which the tab body content will be loaded. */\n    @ViewChild(PortalHostDirective) portalHost: PortalHostDirective;\n\n    /** The tab body content to display. */\n    @Input('content') content: TemplatePortal;\n\n    /** Position that will be used when the tab is immediately becoming visible after creation. */\n    @Input() origin: number;\n\n    // Note that the default value will always be overwritten by `McTabBody`, but we need one\n    // anyway to prevent the animations module from throwing an error if the body is used on its own.\n    /** Duration for the tab's animation. */\n    @Input() animationDuration: string = '0ms';\n\n    /** Current position of the tab-body in the tab-group. Zero means that the tab is visible. */\n    private positionIndex: number;\n\n    /** Subscription to the directionality change observable. */\n    private dirChangeSubscription = Subscription.EMPTY;\n\n    constructor(private elementRef: ElementRef<HTMLElement>,\n                @Optional() private dir: Directionality,\n                changeDetectorRef: ChangeDetectorRef) {\n\n        if (this.dir && changeDetectorRef) {\n            this.dirChangeSubscription = this.dir.change.subscribe((direction: Direction) => {\n                this.computePositionAnimationState(direction);\n                changeDetectorRef.markForCheck();\n            });\n        }\n    }\n\n    /**\n     * After initialized, check if the content is centered and has an origin. If so, set the\n     * special position states that transition the tab from the left or right before centering.\n     */\n    ngOnInit() {\n        if (this.bodyPosition === 'center' && this.origin != null) {\n            this.bodyPosition = this.computePositionFromOrigin();\n        }\n    }\n\n    ngOnDestroy() {\n        this.dirChangeSubscription.unsubscribe();\n    }\n\n    onTranslateTabStarted(e: AnimationEvent): void {\n        const isCentering = this.isCenterPosition(e.toState);\n        this.beforeCentering.emit(isCentering);\n        if (isCentering) {\n            this.onCentering.emit(this.elementRef.nativeElement.clientHeight);\n        }\n    }\n\n    onTranslateTabComplete(e: AnimationEvent): void {\n        // If the transition to the center is complete, emit an event.\n        if (this.isCenterPosition(e.toState) && this.isCenterPosition(this.bodyPosition)) {\n            this.onCentered.emit();\n        }\n\n        if (this.isCenterPosition(e.fromState) && !this.isCenterPosition(this.bodyPosition)) {\n            this.afterLeavingCenter.emit();\n        }\n    }\n\n    /** The text direction of the containing app. */\n    getLayoutDirection(): Direction {\n        return this.dir && this.dir.value === 'rtl' ? 'rtl' : 'ltr';\n    }\n\n    /** Whether the provided position state is considered center, regardless of origin. */\n    isCenterPosition(position: McTabBodyPositionState | string): boolean {\n        return position === 'center' ||\n            position === 'left-origin-center' ||\n            position === 'right-origin-center';\n    }\n\n    /** Computes the position state that will be used for the tab-body animation trigger. */\n    private computePositionAnimationState(dir: Direction = this.getLayoutDirection()) {\n        if (this.positionIndex < 0) {\n            this.bodyPosition = dir === 'ltr' ? 'left' : 'right';\n        } else if (this.positionIndex > 0) {\n            this.bodyPosition = dir === 'ltr' ? 'right' : 'left';\n        } else {\n            this.bodyPosition = 'center';\n        }\n    }\n\n    /**\n     * Computes the position state based on the specified origin position. This is used if the\n     * tab is becoming visible immediately after creation.\n     */\n    private computePositionFromOrigin(): McTabBodyPositionState {\n        const dir = this.getLayoutDirection();\n\n        if ((dir === 'ltr' && this.origin <= 0) || (dir === 'rtl' && this.origin > 0)) {\n            return 'left-origin-center';\n        }\n\n        return 'right-origin-center';\n    }\n}\n","import { Directive, ElementRef } from '@angular/core';\nimport {\n    CanDisable,\n    CanDisableCtor,\n    mixinDisabled\n} from '@ptsecurity/mosaic/core';\n\n\n// Boilerplate for applying mixins to McTabLabelWrapper.\n/** @docs-private */\nexport class McTabLabelWrapperBase {}\nexport const mcTabLabelWrapperMixinBase: CanDisableCtor &\n    typeof McTabLabelWrapperBase = mixinDisabled(McTabLabelWrapperBase);\n\n/**\n * Used in the `mc-tab-group` view to display tab labels.\n * @docs-private\n */\n@Directive({\n    selector: '[mcTabLabelWrapper]',\n    inputs: ['disabled'],\n    host: {\n        '[class.mc-disabled]': 'disabled',\n        '[attr.aria-disabled]': '!!disabled'\n    }\n})\nexport class McTabLabelWrapper extends mcTabLabelWrapperMixinBase implements CanDisable {\n    constructor(public elementRef: ElementRef) {\n        super();\n    }\n\n    /** Sets focus on the wrapper element */\n    focus(): void {\n        this.elementRef.nativeElement.focus();\n    }\n\n    getOffsetLeft(): number {\n        return this.elementRef.nativeElement.offsetLeft;\n    }\n\n    getOffsetWidth(): number {\n        return this.elementRef.nativeElement.offsetWidth;\n    }\n}\n","import {\n    AfterContentChecked,\n    AfterContentInit,\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    ContentChildren,\n    ElementRef,\n    EventEmitter,\n    Input,\n    NgZone,\n    OnDestroy,\n    Optional,\n    Output,\n    QueryList,\n    ViewChild,\n    ViewEncapsulation\n} from '@angular/core';\nimport { FocusKeyManager } from '@ptsecurity/cdk/a11y';\nimport { Direction, Directionality } from '@ptsecurity/cdk/bidi';\nimport { coerceNumberProperty } from '@ptsecurity/cdk/coercion';\nimport { END, ENTER, HOME, SPACE } from '@ptsecurity/cdk/keycodes';\nimport { ViewportRuler } from '@ptsecurity/cdk/scrolling';\nimport { merge, of as observableOf, Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\n\nimport { McTabLabelWrapper } from './tab-label-wrapper';\n\n\nconst VIEWPORT_THROTTLE_TIME = 150;\nconst SCROLL_DISTANCE_DELIMITER = 3;\n\n\n/**\n * The directions that scrolling can go in when the header's tabs exceed the header width. 'After'\n * will scroll the header towards the end of the tabs list and 'before' will scroll towards the\n * beginning of the list.\n */\nexport type ScrollDirection = 'after' | 'before';\n\n/**\n * The distance in pixels that will be overshot when scrolling a tab label into view. This helps\n * provide a small affordance to the label next to it.\n */\nconst EXAGGERATED_OVERSCROLL = 60;\n\n// Boilerplate for applying mixins to McTabHeader.\n/** @docs-private */\nexport class McTabHeaderBase {}\n\n/**\n * The header of the tab group which displays a list of all the tabs in the tab group.\n * When the tabs list's width exceeds the width of the header container,\n * then arrows will be displayed to allow the user to scroll\n * left and right across the header.\n * @docs-private\n */\n@Component({\n    selector: 'mc-tab-header',\n    templateUrl: 'tab-header.html',\n    styleUrls: ['tab-header.css'],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    host: {\n        class: 'mc-tab-header',\n        '[class.mc-tab-header__pagination-controls_enabled]':\n            'showPaginationControls',\n        '[class.mc-tab-header_rtl]': 'getLayoutDirection() == \\'rtl\\''\n    }\n})\nexport class McTabHeader extends McTabHeaderBase\n    implements AfterContentChecked, AfterContentInit, OnDestroy {\n    /** The index of the active tab. */\n    @Input()\n    get selectedIndex(): number {\n        return this._selectedIndex;\n    }\n    set selectedIndex(value: number) {\n        const coercedValue = coerceNumberProperty(value);\n        this.selectedIndexChanged = this._selectedIndex !== coercedValue;\n        this._selectedIndex = coercedValue;\n\n        if (this.keyManager) {\n            this.keyManager.updateActiveItem(coercedValue);\n        }\n    }\n\n    /** Tracks which element has focus; used for keyboard navigation */\n    get focusIndex(): number {\n        return this.keyManager ? this.keyManager.activeItemIndex! : 0;\n    }\n\n    /** When the focus index is set, we must manually send focus to the correct label */\n    set focusIndex(value: number) {\n        if (\n            !this.isValidIndex(value) ||\n            this.focusIndex === value ||\n            !this.keyManager\n        ) {\n            return;\n        }\n\n        this.keyManager.setActiveItem(value);\n    }\n\n    /** Sets the distance in pixels that the tab header should be transformed in the X-axis. */\n    get scrollDistance(): number {\n        return this._scrollDistance;\n    }\n    set scrollDistance(v: number) {\n        this._scrollDistance = Math.max(\n            0,\n            Math.min(this.getMaxScrollDistance(), v)\n        );\n\n        // Mark that the scroll distance has changed so that after the view is checked, the CSS\n        // transformation can move the header.\n        this.scrollDistanceChanged = true;\n        this.checkScrollingControls();\n    }\n\n    @ContentChildren(McTabLabelWrapper)\n    labelWrappers: QueryList<McTabLabelWrapper>;\n    @ViewChild('tabListContainer')\n    tabListContainer: ElementRef;\n    @ViewChild('tabList')\n    tabList: ElementRef;\n\n    /** Whether the controls for pagination should be displayed */\n    showPaginationControls = false;\n\n    /** Whether the tab list can be scrolled more towards the end of the tab label list. */\n    disableScrollAfter = true;\n\n    /** Whether the tab list can be scrolled more towards the beginning of the tab label list. */\n    disableScrollBefore = true;\n\n    /** Event emitted when the option is selected. */\n    @Output()\n    readonly selectFocusedIndex: EventEmitter<number> = new EventEmitter<number>();\n\n    /** Event emitted when a label is focused. */\n    @Output()\n    readonly indexFocused: EventEmitter<number> = new EventEmitter<number>();\n\n    /** The distance in pixels that the tab labels should be translated to the left. */\n    private _scrollDistance = 0;\n\n    /** Whether the header should scroll to the selected index after the view has been checked. */\n    private selectedIndexChanged = false;\n\n    /** Emits when the component is destroyed. */\n    private readonly destroyed = new Subject<void>();\n\n    /**\n     * The number of tab labels that are displayed on the header. When this changes, the header\n     * should re-evaluate the scroll position.\n     */\n    private tabLabelCount: number;\n\n    /** Whether the scroll distance has changed and should be applied after the view is checked. */\n    private scrollDistanceChanged: boolean;\n\n    /** Used to manage focus between the tabs. */\n    private keyManager: FocusKeyManager<McTabLabelWrapper>;\n\n    /** Cached text content of the header. */\n    private currentTextContent: string;\n\n    private _selectedIndex: number = 0;\n\n    constructor(\n        private elementRef: ElementRef,\n        private changeDetectorRef: ChangeDetectorRef,\n        private viewportRuler: ViewportRuler,\n        @Optional() private dir: Directionality,\n        private ngZone: NgZone\n    ) {\n        super();\n    }\n\n    ngAfterContentChecked(): void {\n        // If the number of tab labels have changed, check if scrolling should be enabled\n        if (this.tabLabelCount !== this.labelWrappers.length) {\n            this.updatePagination();\n            this.tabLabelCount = this.labelWrappers.length;\n            this.changeDetectorRef.markForCheck();\n        }\n\n        // If the selected index has changed, scroll to the label and check if the scrolling controls\n        // should be disabled.\n        if (this.selectedIndexChanged) {\n            this.scrollToLabel(this._selectedIndex);\n            this.checkScrollingControls();\n            this.selectedIndexChanged = false;\n            this.changeDetectorRef.markForCheck();\n        }\n\n        // If the scroll distance has been changed (tab selected, focused, scroll controls activated),\n        // then translate the header to reflect this.\n        if (this.scrollDistanceChanged) {\n            this.updateTabScrollPosition();\n            this.scrollDistanceChanged = false;\n            this.changeDetectorRef.markForCheck();\n        }\n    }\n\n    handleKeydown(event: KeyboardEvent) {\n        switch (event.keyCode) {\n            case HOME:\n                this.keyManager.setFirstItemActive();\n                event.preventDefault();\n                break;\n            case END:\n                this.keyManager.setLastItemActive();\n                event.preventDefault();\n                break;\n            case ENTER:\n            case SPACE:\n                this.selectFocusedIndex.emit(this.focusIndex);\n                event.preventDefault();\n                break;\n            default:\n                this.keyManager.onKeydown(event);\n        }\n    }\n\n    ngAfterContentInit() {\n        const dirChange = this.dir ? this.dir.change : observableOf(null);\n        const resize = this.viewportRuler.change(VIEWPORT_THROTTLE_TIME);\n        const realign = () => {\n            this.updatePagination();\n        };\n\n        this.keyManager = new FocusKeyManager(this.labelWrappers)\n            .withHorizontalOrientation(this.getLayoutDirection())\n            .withWrap();\n\n        this.keyManager.updateActiveItem(0);\n\n        // Defer the first call in order to allow for slower browsers to lay out the elements.\n        // This helps in cases where the user lands directly on a page with paginated tabs.\n        typeof requestAnimationFrame === undefined\n            ? realign()\n            : requestAnimationFrame(realign);\n\n        // On dir change or window resize, update the orientation of\n        // the key manager if the direction has changed.\n        merge(dirChange, resize)\n            .pipe(takeUntil(this.destroyed))\n            .subscribe(() => {\n                realign();\n                this.keyManager.withHorizontalOrientation(\n                    this.getLayoutDirection()\n                );\n            });\n\n        // If there is a change in the focus key manager we need to emit the `indexFocused`\n        // event in order to provide a public event that notifies about focus changes. Also we realign\n        // the tabs container by scrolling the new focused tab into the visible section.\n        this.keyManager.change\n            .pipe(takeUntil(this.destroyed))\n            .subscribe((newFocusIndex) => {\n                this.indexFocused.emit(newFocusIndex);\n                this.setTabFocus(newFocusIndex);\n            });\n    }\n\n    ngOnDestroy() {\n        this.destroyed.next();\n        this.destroyed.complete();\n    }\n\n    /**\n     * Callback for when the MutationObserver detects that the content has changed.\n     */\n    onContentChanges() {\n        const textContent = this.elementRef.nativeElement.textContent;\n\n        // We need to diff the text content of the header, because the MutationObserver callback\n        // will fire even if the text content didn't change which is inefficient and is prone\n        // to infinite loops if a poorly constructed expression is passed in.\n\n        if (textContent !== this.currentTextContent) {\n            this.currentTextContent = textContent;\n\n            const zoneCallback = () => {\n                this.updatePagination();\n                this.changeDetectorRef.markForCheck();\n            };\n\n            // The content observer runs outside the `NgZone` by default, which\n            // means that we need to bring the callback back in ourselves.\n            // TODO: Remove null check for `_ngZone` once it's a required parameter.\n            this.ngZone ? this.ngZone.run(zoneCallback) : zoneCallback();\n        }\n    }\n\n    /**\n     * Updating the view whether pagination should be enabled or not\n     *\n     * WARNING: Calling this method can be very costly in terms of performance.  It should be called\n     * as infrequently as possible from outside of the Tabs component as it causes a reflow of the\n     * page.\n     */\n    updatePagination() {\n        this.checkPaginationEnabled();\n        this.checkScrollingControls();\n        this.updateTabScrollPosition();\n    }\n\n    /**\n     * Determines if an index is valid.  If the tabs are not ready yet, we assume that the user is\n     * providing a valid index and return true.\n     */\n    isValidIndex(index: number): boolean {\n        if (!this.labelWrappers) {\n            return true;\n        }\n\n        const tab = this.labelWrappers\n            ? this.labelWrappers.toArray()[index]\n            : null;\n\n        return !!tab && !tab.disabled;\n    }\n\n    /**\n     * Sets focus on the HTML element for the label wrapper and scrolls it into the view if\n     * scrolling is enabled.\n     */\n    setTabFocus(tabIndex: number) {\n        if (this.showPaginationControls) {\n            this.scrollToLabel(tabIndex);\n        }\n\n        if (this.labelWrappers && this.labelWrappers.length) {\n            this.labelWrappers.toArray()[tabIndex].focus();\n\n            // Do not let the browser manage scrolling to focus the element, this will be handled\n            // by using translation. In LTR, the scroll left should be 0. In RTL, the scroll width\n            // should be the full width minus the offset width.\n            const containerEl = this.tabListContainer.nativeElement;\n            const dir = this.getLayoutDirection();\n\n            if (dir === 'ltr') {\n                containerEl.scrollLeft = 0;\n            } else {\n                containerEl.scrollLeft =\n                    containerEl.scrollWidth - containerEl.offsetWidth;\n            }\n        }\n    }\n\n    /** The layout direction of the containing app. */\n    getLayoutDirection(): Direction {\n        return this.dir && this.dir.value === 'rtl' ? 'rtl' : 'ltr';\n    }\n\n    /** Performs the CSS transformation on the tab list that will cause the list to scroll. */\n    updateTabScrollPosition() {\n        const scrollDistance = this.scrollDistance;\n        const translateX =\n            this.getLayoutDirection() === 'ltr'\n                ? -scrollDistance\n                : scrollDistance;\n\n        // Don't use `translate3d` here because we don't want to create a new layer. A new layer\n        // seems to cause flickering and overflow in Internet Explorer.\n        // See: https://github.com/angular/material2/issues/10276\n        // We round the `transform` here, because transforms with sub-pixel precision cause some\n        // browsers to blur the content of the element.\n        this.tabList.nativeElement.style.transform = `translateX(${Math.round(translateX)}px)`;\n\n        // Setting the `transform` on IE will change the scroll offset of the parent, causing the\n        // position to be thrown off in some cases. We have to reset it ourselves to ensure that\n        // it doesn't get thrown off.\n        this.tabList.nativeElement.scrollLeft = 0;\n    }\n\n    /**\n     * Moves the tab list in the 'before' or 'after' direction (towards the beginning of the list or\n     * the end of the list, respectively). The distance to scroll is computed to be a third of the\n     * length of the tab list view window.\n     *\n     * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n     * should be called sparingly.\n     */\n    scrollHeader(scrollDir: ScrollDirection) {\n        const viewLength = this.tabListContainer.nativeElement.offsetWidth;\n\n        // Move the scroll distance one-third the length of the tab list's viewport.\n        this.scrollDistance +=\n            ((scrollDir === 'before' ? -1 : 1) * viewLength) / SCROLL_DISTANCE_DELIMITER;\n    }\n\n    /**\n     * Moves the tab list such that the desired tab label (marked by index) is moved into view.\n     *\n     * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n     * should be called sparingly.\n     */\n    scrollToLabel(labelIndex: number) {\n        const selectedLabel = this.labelWrappers\n            ? this.labelWrappers.toArray()[labelIndex]\n            : null;\n\n        if (!selectedLabel) {\n            return;\n        }\n\n        // The view length is the visible width of the tab labels.\n        const viewLength = this.tabListContainer.nativeElement.offsetWidth;\n\n        let labelBeforePos: number;\n        let labelAfterPos: number;\n\n        if (this.getLayoutDirection() === 'ltr') {\n            labelBeforePos = selectedLabel.getOffsetLeft();\n            labelAfterPos = labelBeforePos + selectedLabel.getOffsetWidth();\n        } else {\n            labelAfterPos =\n                this.tabList.nativeElement.offsetWidth -\n                selectedLabel.getOffsetLeft();\n            labelBeforePos = labelAfterPos - selectedLabel.getOffsetWidth();\n        }\n\n        const beforeVisiblePos = this.scrollDistance;\n        const afterVisiblePos = this.scrollDistance + viewLength;\n\n        if (labelBeforePos < beforeVisiblePos) {\n            // Scroll header to move label to the before direction\n            this.scrollDistance -=\n                beforeVisiblePos - labelBeforePos + EXAGGERATED_OVERSCROLL;\n        } else if (labelAfterPos > afterVisiblePos) {\n            // Scroll header to move label to the after direction\n            this.scrollDistance +=\n                labelAfterPos - afterVisiblePos + EXAGGERATED_OVERSCROLL;\n        }\n    }\n\n    /**\n     * Evaluate whether the pagination controls should be displayed. If the scroll width of the\n     * tab list is wider than the size of the header container, then the pagination controls should\n     * be shown.\n     *\n     * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n     * should be called sparingly.\n     */\n    checkPaginationEnabled() {\n        const isEnabled =\n            this.tabList.nativeElement.scrollWidth >\n            this.elementRef.nativeElement.offsetWidth;\n\n        if (!isEnabled) {\n            this.scrollDistance = 0;\n        }\n\n        if (isEnabled !== this.showPaginationControls) {\n            this.changeDetectorRef.markForCheck();\n        }\n\n        this.showPaginationControls = isEnabled;\n    }\n\n    /**\n     * Evaluate whether the before and after controls should be enabled or disabled.\n     * If the header is at the beginning of the list (scroll distance is equal to 0) then disable the\n     * before button. If the header is at the end of the list (scroll distance is equal to the\n     * maximum distance we can scroll), then disable the after button.\n     *\n     * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n     * should be called sparingly.\n     */\n    checkScrollingControls() {\n        // Check if the pagination arrows should be activated.\n        this.disableScrollBefore = this.scrollDistance === 0;\n        this.disableScrollAfter =\n            this.scrollDistance === this.getMaxScrollDistance();\n        this.changeDetectorRef.markForCheck();\n    }\n\n    /**\n     * Determines what is the maximum length in pixels that can be set for the scroll distance. This\n     * is equal to the difference in width between the tab list container and tab header container.\n     *\n     * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n     * should be called sparingly.\n     */\n    getMaxScrollDistance(): number {\n        const lengthOfTabList = this.tabList.nativeElement.scrollWidth;\n        const viewLength = this.tabListContainer.nativeElement.offsetWidth;\n\n        return lengthOfTabList - viewLength || 0;\n    }\n}\n","import { ComponentRef, Injectable } from '@angular/core';\n\nimport { Observable } from 'rxjs';\nimport { filter } from 'rxjs/operators';\n\nimport { ESCAPE } from '@ptsecurity/cdk/keycodes';\nimport { Overlay, OverlayRef } from '@ptsecurity/cdk/overlay';\nimport { ComponentPortal } from '@ptsecurity/cdk/portal';\n\nimport { McModalControlService } from './modal-control.service';\nimport { McModalRef } from './modal-ref.class';\nimport { McModalComponent } from './modal.component';\nimport { ConfirmType, IModalOptions, IModalOptionsForService } from './modal.type';\n\n\n// A builder used for managing service creating modals\nexport class ModalBuilderForService {\n\n    // Modal ComponentRef, \"null\" means it has been destroyed\n    private modalRef: ComponentRef<McModalComponent>;\n    private overlayRef: OverlayRef;\n\n    constructor(private overlay: Overlay, options: IModalOptionsForService = {}) {\n        this.createModal();\n\n        if (!('mcGetContainer' in options)) {\n            options.mcGetContainer = null;\n        }\n\n        this.changeProps(options);\n        this.modalRef.instance.open();\n        this.modalRef.instance.mcAfterClose.subscribe(() => this.destroyModal());\n\n        this.overlayRef.keydownEvents()\n            // @ts-ignore\n            .pipe(filter((event: KeyboardEvent) => {\n                return event.keyCode === ESCAPE && options.mcCloseByESC;\n            }))\n            .subscribe(() => this.modalRef.instance.close());\n    }\n\n    getInstance(): McModalComponent {\n        return this.modalRef && this.modalRef.instance;\n    }\n\n    destroyModal(): void {\n        if (this.modalRef) {\n            this.overlayRef.dispose();\n            // @ts-ignore\n            this.modalRef = null;\n        }\n    }\n\n    private changeProps(options: IModalOptions): void {\n        if (this.modalRef) {\n            // here not limit user's inputs at runtime\n            Object.assign(this.modalRef.instance, options);\n        }\n    }\n\n    // Create component to ApplicationRef\n    private createModal(): void {\n        this.overlayRef = this.overlay.create();\n        this.modalRef = this.overlayRef.attach(new ComponentPortal(McModalComponent));\n    }\n}\n\n@Injectable()\nexport class McModalService {\n    // Track of the current close modals (we assume invisible is close this time)\n    get openModals(): McModalRef[] {\n        return this.modalControl.openModals;\n    }\n\n    get afterAllClose(): Observable<void> {\n        return this.modalControl.afterAllClose.asObservable();\n    }\n\n    constructor(\n        private overlay: Overlay,\n        private modalControl: McModalControlService) {\n    }\n\n    // Closes all of the currently-open dialogs\n    closeAll(): void {\n        this.modalControl.closeAll();\n    }\n\n    create<T>(options: IModalOptionsForService<T> = {}): McModalRef<T> {\n\n        if (typeof options.mcOnCancel !== 'function') {\n            // Leave a empty function to close this modal by default\n            // tslint:disable-next-line\n            options.mcOnCancel = () => {};\n        }\n\n        if (!('mcCloseByESC' in options)) {\n            options.mcCloseByESC = true;\n        }\n\n\n        if (!('mcWidth' in options)) {\n            // tslint:disable-next-line\n            options.mcWidth = 480;\n        }\n\n        return new ModalBuilderForService(this.overlay, options).getInstance();\n    }\n\n    confirm<T>(options: IModalOptionsForService<T> = {}, confirmType: ConfirmType = 'confirm'): McModalRef<T> {\n        if ('mcFooter' in options) {\n            console.warn(`The Confirm-Modal doesn't support \"mcFooter\", this property will be ignored.`);\n        }\n\n        // NOTE: only support function currently by calling confirm()\n        if (typeof options.mcOnOk !== 'function') {\n            // Leave a empty function to close this modal by default\n            // tslint:disable-next-line\n            options.mcOnOk = () => {};\n        }\n\n        options.mcModalType = 'confirm';\n        options.mcClassName = `mc-confirm mc-confirm-${confirmType} ${options.mcClassName || ''}`;\n        options.mcMaskClosable = false;\n\n        return this.create(options);\n    }\n\n    success<T>(options: IModalOptionsForService<T> = {}): McModalRef<T> {\n        return this.simpleConfirm(options, 'success');\n    }\n\n    delete<T>(options: IModalOptionsForService<T> = {}): McModalRef<T> {\n        return this.simpleConfirm(options, 'warn');\n    }\n\n    private simpleConfirm<T>(options: IModalOptionsForService<T> = {}, confirmType: ConfirmType): McModalRef<T> {\n        // Remove the Cancel button if the user not specify a Cancel button\n        if (!('mcCancelText' in options)) {\n            // @ts-ignore\n            options.mcCancelText = null;\n        }\n\n        return this.confirm(options, confirmType);\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { OverlayModule } from '@ptsecurity/cdk/overlay';\nimport { McButtonModule } from '@ptsecurity/mosaic/button';\nimport { McIconModule } from '@ptsecurity/mosaic/icon';\n\nimport { CssUnitPipe } from './css-unit.pipe';\nimport { McModalControlService } from './modal-control.service';\nimport { McModalComponent } from './modal.component';\nimport { McModalService } from './modal.service';\n\n\n@NgModule({\n    imports: [ CommonModule, OverlayModule, McButtonModule, McIconModule ],\n    exports: [ McModalComponent ],\n    declarations: [ McModalComponent, CssUnitPipe ],\n    entryComponents: [ McModalComponent ],\n    providers: [ McModalControlService, McModalService ]\n})\nexport class McModalModule { }\n","import { fromEvent, Observable, Subscription } from 'rxjs';\nimport { debounceTime } from 'rxjs/operators';\n\nimport {\n    AfterViewInit,\n    Component, Directive,\n    ElementRef,\n    HostBinding,\n    Input,\n    OnDestroy,\n    OnInit,\n    ViewEncapsulation,\n    ContentChild,\n    TemplateRef,\n    ChangeDetectorRef,\n    ChangeDetectionStrategy,\n    ViewChild\n} from '@angular/core';\nimport { FocusMonitor, FocusOrigin } from '@ptsecurity/cdk/a11y';\nimport { SPACE } from '@ptsecurity/cdk/keycodes';\nimport { Platform } from '@ptsecurity/cdk/platform';\nimport { CanDisable, CanDisableCtor, mixinDisabled } from '@ptsecurity/mosaic/core';\n\n\nconst COLLAPSED_CLASS: string = 'mc-navbar-collapsed-title';\nconst MC_ICON = 'mc-icon';\nconst MC_NAVBAR = 'mc-navbar';\nconst MC_NAVBAR_CONTAINER = 'mc-navbar-container';\nconst MC_NAVBAR_ITEM = 'mc-navbar-item';\nconst MC_NAVBAR_BRAND = 'mc-navbar-brand';\nconst MC_NAVBAR_TITLE = 'mc-navbar-title';\nconst MC_NAVBAR_LOGO = 'mc-navbar-logo';\n\nexport type McNavbarContainerPositionType = 'left' | 'right';\n\nexport interface IMcNavbarDropdownItem {\n    link?: string;\n    text: string;\n}\n\n@Directive({\n    selector: MC_NAVBAR_LOGO,\n    host: {\n        class: MC_NAVBAR_LOGO\n    }\n})\nexport class McNavbarLogo {}\n\n@Directive({\n    selector: MC_NAVBAR_BRAND,\n    host: {\n        class: MC_NAVBAR_BRAND\n    }\n})\nexport class McNavbarBrand {}\n\n@Directive({\n    selector: MC_NAVBAR_TITLE,\n    host: {\n        class: MC_NAVBAR_TITLE\n    }\n})\nexport class McNavbarTitle {}\n\nexport class McNavbarItemBase {\n    constructor(public _elementRef: ElementRef) {}\n}\n\nexport const _McNavbarMixinBase: CanDisableCtor & typeof McNavbarItemBase = mixinDisabled(McNavbarItemBase);\n\n@Component({\n    selector: MC_NAVBAR_ITEM,\n    template: `\n        <a\n            [attr.tabindex]=\\\"disabled ? -1 : tabIndex\\\"\n            (click)=\"handleClickByItem()\"\n            (keydown)=\"handleKeydown($event)\"\n            class=\"mc-navbar-item\"\n        >\n            <ng-content></ng-content>\n            <i *ngIf=\"hasDropdownContent\" mc-icon=\"mc-angle-M_16\"></i>\n        </a>\n        <ul\n            #dropdownContent\n            *ngIf=\"hasDropdownContent\"\n            [ngClass]=\"{ 'is-collapsed': isCollapsed }\"\n            class=\"mc-navbar-dropdown\"\n        >\n            <li\n                *ngFor=\"let item of dropdownItems\"\n                (click)=\"handleClickByDropdownItem()\"\n                class=\"mc-navbar-dropdown-item\"\n            >\n                <ng-container *ngIf=\"dropdownItemTmpl\">\n                    <ng-container *ngTemplateOutlet=\"dropdownItemTmpl; context: { $implicit: item }\"></ng-container>\n                </ng-container>\n                <a\n                    *ngIf=\"!dropdownItemTmpl\"\n                    [attr.href]=\"item.link\"\n                    [ngClass]=\"{ 'is-active': isActiveDropdownLink(item.link) }\"\n                    class=\"mc-navbar-dropdown-link\"\n                >{{ item.text }}</a>\n            </li>\n        </ul>\n    `,\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    inputs: ['disabled'],\n    host: {\n        '[attr.disabled]': 'disabled || null',\n        '[attr.tabindex]': '-1'\n    }\n})\nexport class McNavbarItem extends _McNavbarMixinBase implements OnInit, AfterViewInit, OnDestroy, CanDisable {\n\n    @Input()\n    tabIndex: number = 0;\n\n    @Input()\n    dropdownItems: IMcNavbarDropdownItem[] = [];\n\n    @Input()\n    set collapsedTitle(value: string) {\n        this.elementRef.nativeElement.setAttribute('computedTitle', encodeURI(value));\n    }\n\n    @ContentChild('dropdownItemTmpl', { read: TemplateRef })\n    dropdownItemTmpl: TemplateRef<IMcNavbarDropdownItem>;\n\n    @ViewChild('dropdownContent', { read: ElementRef })\n    dropdownContent: ElementRef;\n\n    get hasDropdownContent() {\n        return this.dropdownItems.length > 0;\n    }\n\n    isCollapsed: boolean = true;\n\n    private _subscription: Subscription = new Subscription();\n    private _focusMonitor$: Observable<FocusOrigin>;\n\n    private get _dropdownElements(): HTMLElement[] {\n        return this.dropdownContent ? this.dropdownContent.nativeElement.querySelectorAll('li > *') : [];\n    }\n\n    constructor(\n        public  elementRef: ElementRef,\n        private _focusMonitor: FocusMonitor,\n        private _platform: Platform,\n        private _cdRef: ChangeDetectorRef\n    ) {\n        super(elementRef);\n    }\n\n    ngOnInit() {\n        this.denyClickIfDisabled();\n\n        this._focusMonitor$ = this._focusMonitor.monitor(this.elementRef.nativeElement, true);\n\n        if (this.hasDropdownContent) {\n            this.listenClickOutside();\n        }\n    }\n\n    ngAfterViewInit() {\n        if (!this.hasDropdownContent) {\n            return;\n        }\n\n        this.startListenFocusDropdownItems();\n    }\n\n    ngOnDestroy() {\n        this._subscription.unsubscribe();\n        this._focusMonitor.stopMonitoring(this.elementRef.nativeElement);\n        this.stopListenFocusDropdownItems();\n    }\n\n    isActiveDropdownLink(link: string): boolean {\n        if (!this._platform.isBrowser) {\n            return false;\n        }\n\n        return window.location.href.indexOf(link) >= 0;\n    }\n\n    handleClickByItem() {\n        this.toggleDropdown();\n    }\n\n    handleKeydown($event: KeyboardEvent) {\n        const isNavbarItem = ($event.target as HTMLElement).classList.contains(MC_NAVBAR_ITEM);\n\n        // tslint:disable-next-line\n        if (this.hasDropdownContent && $event.keyCode === SPACE && isNavbarItem) {\n            this.toggleDropdown();\n        }\n    }\n\n    handleClickByDropdownItem() {\n        this.forceCloseDropdown();\n    }\n\n    private listenClickOutside() {\n        this._subscription.add(\n            this._focusMonitor$.subscribe((origin) => {\n                if (origin === null) {\n                    this.forceCloseDropdown();\n                }\n            })\n        );\n    }\n\n    private toggleDropdown() {\n        this.isCollapsed = !this.isCollapsed;\n    }\n\n    private forceCloseDropdown() {\n        this.isCollapsed = true;\n        this._cdRef.detectChanges();\n    }\n\n    private startListenFocusDropdownItems() {\n        this._dropdownElements.forEach((el) => {\n            this._focusMonitor.monitor(el, true);\n        });\n    }\n\n    private stopListenFocusDropdownItems() {\n        this._dropdownElements.forEach((el) => {\n            this._focusMonitor.stopMonitoring(el);\n        });\n    }\n\n    // This method is required due to angular 2 issue https://github.com/angular/angular/issues/11200\n    private denyClickIfDisabled() {\n        const events: Event[] = this.elementRef.nativeElement.eventListeners('click');\n\n        events.forEach((event) => this.elementRef.nativeElement.removeEventListener('click', event));\n\n        this.elementRef.nativeElement.addEventListener('click', (event: MouseEvent) => {\n            if (this.elementRef.nativeElement.hasAttribute('disabled')) {\n                event.stopImmediatePropagation();\n            }\n        }, true);\n\n        events.forEach((event) => this.elementRef.nativeElement.addEventListener('click', event));\n    }\n}\n\n@Directive({\n    selector: MC_NAVBAR_CONTAINER\n})\nexport class McNavbarContainer {\n    @Input()\n    position: McNavbarContainerPositionType = 'left';\n\n    @HostBinding('class')\n    get cssClasses(): string {\n        return this.position === 'left' ? 'mc-navbar-left' : 'mc-navbar-right';\n    }\n}\n\nclass CollapsibleItem {\n    private _collapsed: boolean = false;\n\n    constructor(\n        public element: HTMLElement,\n        public width: number\n    ) {}\n\n    processCollapsed(collapsed: boolean) {\n        this._collapsed = collapsed;\n\n        this.updateCollapsedClass();\n    }\n\n    private updateCollapsedClass() {\n        if (this._collapsed) {\n            this.element.classList.add(COLLAPSED_CLASS);\n        } else {\n            this.element.classList.remove(COLLAPSED_CLASS);\n        }\n\n    }\n}\n\nclass CachedItemWidth {\n\n    get canCollapse(): boolean {\n        return this.itemsForCollapse.length > 0;\n    }\n\n    private _collapsedItemsWidth: number;\n\n    get collapsedItemsWidth(): number {\n        if (this._collapsedItemsWidth !== undefined) {\n            return this._collapsedItemsWidth;\n        }\n\n        this.calculateAndCacheCollapsedItemsWidth();\n\n        return this._collapsedItemsWidth;\n    }\n\n    constructor(\n        public element: HTMLElement,\n        public width: number,\n        public itemsForCollapse: CollapsibleItem[] = []\n    ) {}\n\n    processCollapsed(collapsed: boolean) {\n        if (this.itemsForCollapse.length > 0) {\n            this.updateTitle(collapsed);\n        }\n\n        this.itemsForCollapse.forEach((item) => item.processCollapsed(collapsed));\n    }\n\n    private calculateAndCacheCollapsedItemsWidth() {\n        this._collapsedItemsWidth = this.itemsForCollapse\n            .reduce((acc, item) => acc + item.width, 0);\n    }\n\n    private getTitle(): string {\n        const computedTitle = this.element.getAttribute('computedTitle');\n\n        return computedTitle\n            ? decodeURI(computedTitle)\n            : (this.itemsForCollapse.length > 0 ? this.itemsForCollapse[0].element.innerText : '');\n    }\n\n    private updateTitle(collapsed: boolean) {\n        if (collapsed) {\n            this.element.setAttribute('title', this.getTitle());\n        } else {\n            this.element.removeAttribute('title');\n        }\n    }\n}\n\n\n@Component({\n    selector: MC_NAVBAR,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    template: `\n        <nav class=\"mc-navbar\">\n            <ng-content select=\"[${MC_NAVBAR_CONTAINER}],${MC_NAVBAR_CONTAINER}\"></ng-content>\n        </nav>\n    `,\n    styleUrls: ['./navbar.css'],\n    encapsulation: ViewEncapsulation.None\n})\nexport class McNavbar implements AfterViewInit, OnDestroy {\n\n    private readonly forceRecalculateItemsWidth: boolean = false;\n    private readonly resizeDebounceInterval: number = 100;\n    private readonly firstLevelElement: string = MC_NAVBAR_CONTAINER;\n    private readonly secondLevelElements: string[] = [\n        MC_NAVBAR_ITEM,\n        MC_NAVBAR_BRAND,\n        MC_NAVBAR_TITLE\n    ];\n\n    private _totalItemsWidths: number;\n    private _itemsWidths: CachedItemWidth[];\n\n    private get maxAllowedWidth(): number {\n        return this._elementRef.nativeElement.querySelector('nav').getBoundingClientRect().width;\n    }\n\n    private get itemsWidths(): CachedItemWidth[] {\n        if (this._itemsWidths !== undefined && !this.forceRecalculateItemsWidth) {\n            return this._itemsWidths;\n        }\n\n        this.calculateAndCacheItemsWidth();\n\n        return this._itemsWidths;\n    }\n\n    private get totalItemsWidth(): number {\n        if (this._totalItemsWidths !== undefined && !this.forceRecalculateItemsWidth) {\n            return this._totalItemsWidths;\n        }\n\n        this.calculateAndCacheTotalItemsWidth();\n\n        return this._totalItemsWidths;\n    }\n\n    private _resizeSubscription: Subscription;\n\n    constructor(\n        private _elementRef: ElementRef\n    ) {\n        const resizeObserver = fromEvent(window, 'resize')\n            .pipe(debounceTime(this.resizeDebounceInterval));\n\n        this._resizeSubscription = resizeObserver.subscribe(this.updateCollapsed.bind(this));\n    }\n\n    updateCollapsed(): void {\n        let collapseDelta = this.totalItemsWidth - this.maxAllowedWidth;\n\n        for (let i = this.itemsWidths.length - 1; i >= 0; i--) {\n            const item = this.itemsWidths[i];\n\n            if (!item.canCollapse) {\n                continue;\n            }\n\n            item.processCollapsed(collapseDelta > 0);\n            collapseDelta -= item.collapsedItemsWidth;\n        }\n    }\n\n    ngAfterViewInit(): void {\n        // Note: this wait is required for loading and rendering fonts for icons;\n        // unfortunately we cannot control font rendering\n        setTimeout(() => this.updateCollapsed(), 0);\n    }\n\n    ngOnDestroy() {\n        this._resizeSubscription.unsubscribe();\n    }\n\n    private calculateAndCacheTotalItemsWidth() {\n        this._totalItemsWidths = this.itemsWidths\n            .reduce((acc, item) => acc + item.width, 0);\n    }\n\n    private getOuterElementWidth(element: HTMLElement): number {\n        const baseWidth  = element.getBoundingClientRect().width;\n        const marginRight = parseInt(getComputedStyle(element).getPropertyValue('margin-right'));\n        const marginLeft = parseInt(getComputedStyle(element).getPropertyValue('margin-left'));\n\n        return baseWidth + marginRight + marginLeft;\n    }\n\n    private calculateAndCacheItemsWidth() {\n        const allItemsSelector = this.secondLevelElements\n            .map((e: string) => `${this.firstLevelElement}>${e}`);\n        const allItems: HTMLElement[] = Array.from(this._elementRef.nativeElement.querySelectorAll(allItemsSelector));\n\n        this._itemsWidths = allItems\n            .map((el) => new CachedItemWidth(el, this.getOuterElementWidth(el), this.getItemsForCollapse(el)));\n    }\n\n    private getItemsForCollapse(element: HTMLElement): CollapsibleItem[] {\n        const icon = element.querySelector(`[${MC_ICON}],${MC_NAVBAR_LOGO},[${MC_NAVBAR_LOGO}]`);\n\n        if (!icon) {\n            return [];\n        }\n\n        return Array.from(element.querySelectorAll(MC_NAVBAR_TITLE))\n            .map((el) => new CollapsibleItem(<HTMLElement> el, el.getBoundingClientRect().width));\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { A11yModule } from '@ptsecurity/cdk/a11y';\nimport { PlatformModule } from '@ptsecurity/cdk/platform';\n\nimport { McIconModule } from '@ptsecurity/mosaic/icon';\n\nimport {\n    McNavbar,\n    McNavbarContainer,\n    McNavbarItem,\n    McNavbarTitle,\n    McNavbarBrand,\n    McNavbarLogo\n} from './navbar.component';\n\n\n@NgModule({\n    imports: [\n        CommonModule,\n        A11yModule,\n        PlatformModule,\n        McIconModule\n    ],\n    exports: [\n        McNavbar,\n        McNavbarContainer,\n        McNavbarTitle,\n        McNavbarItem,\n        McNavbarBrand,\n        McNavbarLogo\n    ],\n    declarations: [\n        McNavbar,\n        McNavbarContainer,\n        McNavbarTitle,\n        McNavbarItem,\n        McNavbarBrand,\n        McNavbarLogo\n    ]\n})\nexport class McNavbarModule {}\n","import {\n    ChangeDetectionStrategy,\n    Component,\n    ViewEncapsulation,\n    ElementRef,\n    Input\n} from '@angular/core';\nimport { CanColor, CanColorCtor, mixinColor, ThemePalette } from '@ptsecurity/mosaic/core';\n\n\nexport type ProgressBarMode = 'determinate' | 'indeterminate';\n\nlet idIterator = 0;\n\nconst MIN_PERCENT = 0;\nconst MAX_PERCENT = 100;\n\nexport class McProgressBarBase {\n    constructor(public _elementRef: ElementRef) {}\n}\n\nexport const _McProgressBarMixinBase:\n    CanColorCtor &\n    typeof McProgressBarBase =\n        mixinColor(McProgressBarBase);\n\n@Component({\n    selector: 'mc-progress-bar',\n    templateUrl: './progress-bar.component.html',\n    styleUrls: ['./progress-bar.css'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n    host: {\n        class: 'mc-progress-bar',\n        '[attr.id]': 'id'\n    }\n})\nexport class McProgressBar extends _McProgressBarMixinBase implements CanColor {\n    @Input() id: string = `mc-progress-bar-${idIterator++}`;\n    @Input() value: number = 0;\n    @Input() mode: ProgressBarMode = 'determinate';\n    @Input() color: ThemePalette = ThemePalette.Primary;\n\n    constructor(elementRef: ElementRef) {\n        super(elementRef);\n    }\n\n    get percentage(): number {\n        return Math.max(MIN_PERCENT, Math.min(MAX_PERCENT, this.value)) / MAX_PERCENT;\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { PlatformModule } from '@ptsecurity/cdk/platform';\n\nimport {\n    McProgressBar\n} from './progress-bar.component';\n\n\n@NgModule({\n    imports: [\n        CommonModule,\n        PlatformModule\n    ],\n    exports: [\n        McProgressBar\n    ],\n    declarations: [\n        McProgressBar\n    ]\n})\nexport class McProgressBarModule {}\n","import {\n    ChangeDetectionStrategy,\n    Component,\n    ViewEncapsulation,\n    ElementRef,\n    Input\n} from '@angular/core';\nimport { CanColor, CanColorCtor, mixinColor, ThemePalette } from '@ptsecurity/mosaic/core';\n\n\nexport type ProgressSpinnerMode = 'determinate' | 'indeterminate';\n\nlet idIterator = 0;\n\nconst MIN_PERCENT = 0;\nconst MAX_PERCENT = 100;\n\nexport class McProgressSpinnerBase {\n    constructor(public _elementRef: ElementRef) {}\n}\n\nexport const _McProgressSpinnerMixinBase:\n    CanColorCtor &\n    typeof McProgressSpinnerBase =\n        mixinColor(McProgressSpinnerBase);\n\nconst MAX_DASH_ARRAY = 273;\n\n@Component({\n    selector: 'mc-progress-spinner',\n    templateUrl: './progress-spinner.component.html',\n    styleUrls: ['./progress-spinner.css'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n    host: {\n        class: 'mc-progress-spinner',\n        '[attr.id]': 'id'\n    }\n})\nexport class McProgressSpinner extends _McProgressSpinnerMixinBase implements CanColor {\n    @Input() id: string = `mc-progress-spinner-${idIterator++}`;\n    @Input() value: number = 0;\n    @Input() mode: ProgressSpinnerMode = 'determinate';\n    @Input() color: ThemePalette = ThemePalette.Primary;\n\n    constructor(elementRef: ElementRef) {\n        super(elementRef);\n    }\n\n    get percentage(): number {\n        return Math.max(MIN_PERCENT, Math.min(MAX_PERCENT, this.value)) / MAX_PERCENT;\n    }\n\n    get dashOffsetPercent(): string {\n        return `${MAX_DASH_ARRAY - this.percentage * MAX_DASH_ARRAY}%`;\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { PlatformModule } from '@ptsecurity/cdk/platform';\n\nimport { McProgressSpinner } from './progress-spinner.component';\n\n\n@NgModule({\n    imports: [\n        CommonModule,\n        PlatformModule\n    ],\n    exports: [\n        McProgressSpinner\n    ],\n    declarations: [\n        McProgressSpinner\n    ]\n})\nexport class McProgressSpinnerModule {}\n","import {\n    AfterContentInit,\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component, ContentChildren, Directive, ElementRef, EventEmitter, forwardRef,\n    Input, OnDestroy, OnInit, Optional, Output, QueryList,\n    ViewChild,\n    ViewEncapsulation\n} from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\n\nimport { UniqueSelectionDispatcher } from '@ptsecurity/cdk/collections';\n\nimport {\n    CanColor, CanColorCtor,\n    CanDisable, CanDisableCtor,\n    HasTabIndex, HasTabIndexCtor,\n    mixinColor,\n    mixinDisabled,\n    mixinTabIndex,\n    toBoolean\n} from '@ptsecurity/mosaic/core';\n\n\n// Increasing integer for generating unique ids for radio components.\nlet nextUniqueId = 0;\n\n/** Change event object emitted by McRadio. */\nexport class McRadioChange {\n    constructor(\n        /** The McRadioButton that emits the change event. */\n        public source: McRadioButton,\n        /** The value of the McRadioButton. */\n        public value: any) {}\n}\n\n// Boilerplate for applying mixins to McRadioGroup.\n/** @docs-private */\nexport class McRadioGroupBase {}\nexport const _McRadioGroupMixinBase: CanDisableCtor & typeof McRadioGroupBase = mixinDisabled(McRadioGroupBase);\n\n/**\n * Provider Expression that allows mc-radio-group to register as a ControlValueAccessor. This\n * allows it to support [(ngModel)] and ngControl.\n * @docs-private\n */\nexport const MC_RADIO_GROUP_CONTROL_VALUE_ACCESSOR: any = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => McRadioGroup),\n    multi: true\n};\n\n@Directive({\n    selector: 'mc-radio-group',\n    exportAs: 'mcRadioGroup',\n    providers: [MC_RADIO_GROUP_CONTROL_VALUE_ACCESSOR],\n    host: {\n        role: 'radiogroup',\n        class: 'mc-radio-group'\n    },\n    inputs: ['disabled']\n})\nexport class McRadioGroup extends _McRadioGroupMixinBase\n    implements AfterContentInit, ControlValueAccessor, CanDisable {\n\n    /** Name of the radio button group. All radio buttons inside this group will use this name. */\n    @Input()\n    get name(): string { return this._name; }\n    set name(value: string) {\n        this._name = value;\n        this.updateRadioButtonNames();\n    }\n\n    /** Whether the labels should appear after or before the radio-buttons. Defaults to 'after' */\n    @Input()\n    get labelPosition(): 'before' | 'after' {\n        return this._labelPosition;\n    }\n    set labelPosition(v) {\n        this._labelPosition = v === 'before' ? 'before' : 'after';\n        this.markRadiosForCheck();\n    }\n\n    /** Value of the radio button. */\n    @Input()\n    get value(): any { return this._value; }\n    set value(newValue: any) {\n        if (this._value !== newValue) {\n            // Set this before proceeding to ensure no circular loop occurs with selection.\n            this._value = newValue;\n\n            this.updateSelectedRadioFromValue();\n            this.checkSelectedRadioButton();\n        }\n    }\n\n    /** Whether the radio button is selected. */\n    @Input()\n    get selected() { return this._selected; }\n    set selected(selected: McRadioButton | null) {\n        this._selected = selected;\n        this.value = selected ? selected.value : null;\n        this.checkSelectedRadioButton();\n    }\n\n    /** Whether the radio group is disabled */\n    @Input()\n    get disabled(): boolean { return this._disabled; }\n    set disabled(value) {\n        this._disabled = toBoolean(value);\n        this.markRadiosForCheck();\n    }\n\n    /** Whether the radio group is required */\n    @Input()\n    get required(): boolean { return this._required; }\n    set required(value: boolean) {\n        this._required = toBoolean(value);\n        this.markRadiosForCheck();\n    }\n\n    /**\n     * Event emitted when the group value changes.\n     * Change events are only emitted when the value changes due to user interaction with\n     * a radio button (the same behavior as `<input type-\"radio\">`).\n     */\n    @Output() readonly change: EventEmitter<McRadioChange> = new EventEmitter<McRadioChange>();\n\n    /** Child radio buttons. */\n    @ContentChildren(forwardRef(() => McRadioButton), { descendants: true })\n    _radios: QueryList<McRadioButton>;\n\n    /**\n     * Selected value for group. Should equal the value of the selected radio button if there *is*\n     * a corresponding radio button with a matching value. If there is *not* such a corresponding\n     * radio button, this value persists to be applied in case a new radio button is added with a\n     * matching value.\n     */\n    private _value: any = null;\n\n    /** The HTML name attribute applied to radio buttons in this group. */\n    private _name: string = `mc-radio-group-${nextUniqueId++}`;\n\n    /** The currently selected radio button. Should match value. */\n    private _selected: McRadioButton | null = null;\n\n    /** Whether the `value` has been set to its initial value. */\n    private _isInitialized: boolean = false;\n\n    /** Whether the labels should appear after or before the radio-buttons. Defaults to 'after' */\n    private _labelPosition: 'before' | 'after' = 'after';\n\n    /** Whether the radio group is disabled. */\n    private _disabled: boolean = false;\n\n    /** Whether the radio group is required. */\n    private _required: boolean = false;\n\n    constructor(\n        private readonly _changeDetector: ChangeDetectorRef\n    ) {\n        super();\n    }\n\n    /** The method to be called in order to update ngModel */\n    // tslint:disable-next-line\n    controlValueAccessorChangeFn: (value: any) => void = () => {};\n\n    /**\n     * onTouch function registered via registerOnTouch (ControlValueAccessor).\n     * @docs-private\n     */\n    // tslint:disable-next-line\n    onTouched: () => any = () => {};\n\n    checkSelectedRadioButton() {\n        if (this._selected && !this._selected.checked) {\n            this._selected.checked = true;\n        }\n    }\n\n    /**\n     * Initialize properties once content children are available.\n     * This allows us to propagate relevant attributes to associated buttons.\n     */\n    ngAfterContentInit() {\n        // Mark this component as initialized in AfterContentInit because the initial value can\n        // possibly be set by NgModel on McRadioGroup, and it is possible that the OnInit of the\n        // NgModel occurs *after* the OnInit of the McRadioGroup.\n        this._isInitialized = true;\n    }\n\n    /**\n     * Mark this group as being \"touched\" (for ngModel). Meant to be called by the contained\n     * radio buttons upon their blur.\n     */\n    touch() {\n        if (this.onTouched) {\n            this.onTouched();\n        }\n    }\n\n    /** Dispatch change event with current selection and group value. */\n    emitChangeEvent(): void {\n        if (this._isInitialized) {\n            this.change.emit(new McRadioChange(this._selected!, this._value));\n        }\n    }\n\n    markRadiosForCheck() {\n        if (this._radios) {\n            this._radios.forEach((radio) => radio.markForCheck());\n        }\n    }\n\n    /**\n     * Sets the model value. Implemented as part of ControlValueAccessor.\n     */\n    writeValue(value: any) {\n        this.value = value;\n        this._changeDetector.markForCheck();\n    }\n\n    /**\n     * Registers a callback to be triggered when the model value changes.\n     * Implemented as part of ControlValueAccessor.\n     * @param fn Callback to be registered.\n     */\n    registerOnChange(fn: (value: any) => void) {\n        this.controlValueAccessorChangeFn = fn;\n    }\n\n    /**\n     * Registers a callback to be triggered when the control is touched.\n     * Implemented as part of ControlValueAccessor.\n     * @param fn Callback to be registered.\n     */\n    registerOnTouched(fn: any) {\n        this.onTouched = fn;\n    }\n\n    /**\n     * Sets the disabled state of the control. Implemented as a part of ControlValueAccessor.\n     * @param isDisabled Whether the control should be disabled.\n     */\n    setDisabledState(isDisabled: boolean) {\n        this.disabled = isDisabled;\n        this._changeDetector.markForCheck();\n    }\n\n    private updateRadioButtonNames(): void {\n        if (this._radios) {\n            this._radios.forEach((radio) => {\n                radio.name = this.name;\n            });\n        }\n    }\n\n    /** Updates the `selected` radio button from the internal _value state. */\n    private updateSelectedRadioFromValue(): void {\n        // If the value already matches the selected radio, do nothing.\n        const isAlreadySelected = this._selected !== null && this._selected.value === this._value;\n\n        if (this._radios != null && !isAlreadySelected) {\n            this._selected = null;\n            this._radios.forEach((radio) => {\n                radio.checked = this.value === radio.value;\n                if (radio.checked) {\n                    this._selected = radio;\n                }\n            });\n        }\n    }\n}\n\n\n// Boilerplate for applying mixins to McRadioButton.\n/** @docs-private */\nexport class McRadioButtonBase {\n    // Since the disabled property is manually defined for the McRadioButton and isn't set up in\n    // the mixin base class. To be able to use the tabindex mixin, a disabled property must be\n    // defined to properly work.\n    disabled: boolean;\n\n    constructor(public _elementRef: ElementRef) {}\n}\n\nexport const _McRadioButtonMixinBase:\n    CanColorCtor &\n    HasTabIndexCtor &\n    typeof McRadioButtonBase =\n        mixinColor(mixinTabIndex(McRadioButtonBase));\n\n\n@Component({\n    selector: 'mc-radio-button',\n    templateUrl: 'radio.component.html',\n    styleUrls: ['radio.css'],\n    inputs: ['color', 'tabIndex'],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    exportAs: 'mcRadioButton',\n    host: {\n        class: 'mc-radio-button',\n        '[attr.id]': 'id',\n        '[class.mc-checked]': 'checked',\n        '[class.mc-disabled]': 'disabled',\n        '(focus)': '_inputElement.nativeElement.focus()'\n    }\n})\nexport class McRadioButton extends _McRadioButtonMixinBase\n    implements OnInit, OnDestroy, CanColor, HasTabIndex {\n\n    private readonly _uniqueId: string = `mc-radio-${++nextUniqueId}`;\n\n    /* tslint:disable:member-ordering */\n\n    /** The unique ID for the radio button. */\n    @Input() id: string = this._uniqueId;\n\n    /** Analog to HTML 'name' attribute used to group radios for unique selection. */\n    @Input() name: string;\n\n    /** Used to set the 'aria-label' attribute on the underlying input element. */\n    @Input('aria-label') ariaLabel: string;\n\n    /** The 'aria-labelledby' attribute takes precedence as the element's text alternative. */\n    @Input('aria-labelledby') ariaLabelledby: string;\n\n    /** The 'aria-describedby' attribute is read after the element's label and field type. */\n    @Input('aria-describedby') ariaDescribedby: string;\n\n    /** Whether this radio button is checked. */\n    @Input()\n    get checked(): boolean { return this._checked; }\n    set checked(value: boolean) {\n        const newCheckedState = toBoolean(value);\n\n        if (this._checked !== newCheckedState) {\n            this._checked = newCheckedState;\n\n            if (newCheckedState && this.radioGroup && this.radioGroup.value !== this.value) {\n                this.radioGroup.selected = this;\n            } else if (!newCheckedState && this.radioGroup && this.radioGroup.value === this.value) {\n                // When unchecking the selected radio button, update the selected radio\n                // property on the group.\n                this.radioGroup.selected = null;\n            }\n\n            if (newCheckedState) {\n                // Notify all radio buttons with the same name to un-check.\n                this._radioDispatcher.notify(this.id, this.name);\n            }\n            this._changeDetector.markForCheck();\n        }\n    }\n\n    /** The value of this radio button. */\n    @Input()\n    get value(): any { return this._value; }\n    set value(value: any) {\n        if (this._value !== value) {\n            this._value = value;\n            if (this.radioGroup != null) {\n                if (!this.checked) {\n                    // Update checked when the value changed to match the radio group's value\n                    this.checked = this.radioGroup.value === value;\n                }\n                if (this.checked) {\n                    this.radioGroup.selected = this;\n                }\n            }\n        }\n    }\n\n    /** Whether the radio button is disabled. */\n    @Input()\n    get disabled(): boolean {\n        return this._disabled || (this.radioGroup != null && this.radioGroup.disabled);\n    }\n    set disabled(value: boolean) {\n        const newDisabledState = toBoolean(value);\n\n        if (this._disabled !== newDisabledState) {\n\n            this._disabled = newDisabledState;\n            this._changeDetector.markForCheck();\n        }\n    }\n\n    /** Whether the radio button is required. */\n    @Input()\n    get required(): boolean {\n        return this._required || (this.radioGroup && this.radioGroup.required);\n    }\n    set required(value: boolean) {\n        this._required = toBoolean(value);\n    }\n\n    /** Whether the label should appear after or before the radio button. Defaults to 'after' */\n    @Input()\n    get labelPosition(): 'before' | 'after' {\n        return this._labelPosition || (this.radioGroup && this.radioGroup.labelPosition) || 'after';\n    }\n    set labelPosition(value) {\n        this._labelPosition = value;\n    }\n    private _labelPosition: 'before' | 'after';\n\n    /** The native `<input type=radio>` element */\n    @ViewChild('input') _inputElement: ElementRef;\n\n    /**\n     * Event emitted when the checked state of this radio button changes.\n     * Change events are only emitted when the value changes due to user interaction with\n     * the radio button (the same behavior as `<input type-\"radio\">`).\n     */\n    @Output() readonly change: EventEmitter<McRadioChange> = new EventEmitter<McRadioChange>();\n\n    /** The parent radio group. May or may not be present. */\n    radioGroup: McRadioGroup;\n\n    @Input()\n    isFocused: boolean = false;\n\n    /** ID of the native input element inside `<mc-radio-button>` */\n    get inputId(): string { return `${this.id || this._uniqueId}-input`; }\n\n    /** Whether this radio is checked. */\n    private _checked: boolean = false;\n\n    /** Whether this radio is disabled. */\n    private _disabled: boolean;\n\n    /** Whether this radio is required. */\n    private _required: boolean;\n\n    /** Value assigned to this radio. */\n    private _value: any = null;\n\n    /** Unregister function for _radioDispatcher */\n    // tslint:disable-next-line\n    private readonly removeUniqueSelectionListener: () => void = () => {};\n\n    constructor(\n        @Optional() radioGroup: McRadioGroup,\n        elementRef: ElementRef,\n        private readonly _changeDetector: ChangeDetectorRef,\n        private readonly _radioDispatcher: UniqueSelectionDispatcher\n    ) {\n\n        super(elementRef);\n\n        this.radioGroup = radioGroup;\n\n        this.removeUniqueSelectionListener =\n            _radioDispatcher.listen((id: string, name: string) => {\n                if (id !== this.id && name === this.name) {\n                    this.checked = false;\n                }\n            });\n    }\n\n    ngOnInit() {\n        if (this.radioGroup) {\n            // If the radio is inside a radio group, determine if it should be checked\n            this.checked = this.radioGroup.value === this._value;\n            // Copy name from parent radio group\n            this.name = this.radioGroup.name;\n        }\n    }\n\n    ngOnDestroy() {\n        this.removeUniqueSelectionListener();\n    }\n\n    /** Focuses the radio button. */\n    // tslint:disable-next-line\n    focus(): void {}\n\n    /**\n     * Marks the radio button as needing checking for change detection.\n     * This method is exposed because the parent radio group will directly\n     * update bound properties of the radio button.\n     */\n    markForCheck() {\n        // When group value changes, the button will not be notified. Use `markForCheck` to explicit\n        // update radio button's status\n        this._changeDetector.markForCheck();\n    }\n\n    onInputClick(event: Event) {\n        // We have to stop propagation for click events on the visual hidden input element.\n        // By default, when a user clicks on a label element, a generated click event will be\n        // dispatched on the associated input element. Since we are using a label element as our\n        // root container, the click event on the `radio-button` will be executed twice.\n        // The real click event will bubble up, and the generated click event also tries to bubble up.\n        // This will lead to multiple click events.\n        // Preventing bubbling for the second event will solve that issue.\n        event.stopPropagation();\n    }\n\n    onInputChange(event: Event) {\n        // We always have to stop propagation on the change event.\n        // Otherwise the change event, from the input element, will bubble up and\n        // emit its event object to the `change` output.\n        event.stopPropagation();\n\n        const groupValueChanged = this.radioGroup && this.value !== this.radioGroup.value;\n        this.checked = true;\n        this.emitChangeEvent();\n\n        if (this.radioGroup) {\n            this.radioGroup.controlValueAccessorChangeFn(this.value);\n            this.radioGroup.touch();\n            if (groupValueChanged) {\n                this.radioGroup.emitChangeEvent();\n            }\n        }\n    }\n\n    /** Dispatch change event with current value. */\n    private emitChangeEvent(): void {\n        this.change.emit(new McRadioChange(this, this._value));\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { A11yModule } from '@ptsecurity/cdk/a11y';\nimport { McCommonModule } from '@ptsecurity/mosaic/core';\n\nimport { McRadioButton, McRadioGroup } from './radio.component';\n\n\n@NgModule({\n    imports: [CommonModule, A11yModule, McCommonModule],\n    exports: [McRadioGroup, McRadioButton],\n    declarations: [McRadioGroup, McRadioButton]\n})\nexport class McRadioModule {\n}\n","import { Directive, Input } from '@angular/core';\n\nimport { CdkTreeNodeDef } from '@ptsecurity/cdk/tree';\n\n\n@Directive({\n    selector: '[mcTreeNodeDef]',\n    inputs: ['when: mcTreeNodeDefWhen'],\n    providers: [{ provide: CdkTreeNodeDef, useExisting: McTreeNodeDef }]\n})\nexport class McTreeNodeDef<T> extends CdkTreeNodeDef<T> {\n    @Input('mcTreeNode') data: T;\n}\n","import { Directive, Input, OnInit } from '@angular/core';\nimport { CdkTreeNodePadding } from '@ptsecurity/cdk/tree';\n\n\n@Directive({\n    selector: '[mcTreeNodePadding]',\n    providers: [{ provide: CdkTreeNodePadding, useExisting: McTreeNodePadding }]\n})\nexport class McTreeNodePadding<T> extends CdkTreeNodePadding<T> implements OnInit {\n    get leftPadding(): number {\n        return (this._withIcon ? 0 : this._iconWidth) + this._baseLeftPadding;\n    }\n\n    _baseLeftPadding: number = 6;\n    _iconWidth: number = 20;\n    _indent: number = 16;\n\n    @Input('mcTreeNodePadding') level: number;\n\n    @Input('mcTreeNodePaddingIndent') indent: number;\n\n    _withIcon: boolean;\n\n    _paddingIndent(): string | null {\n        const nodeLevel = (this._treeNode.data && this._tree.treeControl.getLevel)\n            ? this._tree.treeControl.getLevel(this._treeNode.data)\n            : null;\n\n        const level = this._level || nodeLevel;\n\n        return level ? `${(level * this._indent) + this.leftPadding}px` : `${this._baseLeftPadding}px`;\n    }\n\n    ngOnInit(): void {\n        this._withIcon = this._tree.treeControl.isExpandable(this._treeNode.data);\n        this._setPadding();\n    }\n}\n","import {\n    AfterContentInit,\n    Attribute,\n    ChangeDetectionStrategy,\n    Component,\n    ContentChildren,\n    ElementRef,\n    EventEmitter,\n    forwardRef,\n    Input,\n    Output,\n    QueryList,\n    ViewEncapsulation,\n    ChangeDetectorRef,\n    Inject,\n    OnDestroy,\n    OnInit,\n    ViewChild\n} from '@angular/core';\n\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\n\nimport { Subscription } from 'rxjs';\n\nimport { FocusKeyManager, IFocusableOption } from '@ptsecurity/cdk/a11y';\nimport { SelectionModel } from '@ptsecurity/cdk/collections';\nimport { END, ENTER, HOME, PAGE_DOWN, PAGE_UP, SPACE } from '@ptsecurity/cdk/keycodes';\n\nimport {\n    McLine,\n    McLineSetter,\n    CanDisable,\n    mixinDisabled,\n    toBoolean, CanDisableCtor\n} from '@ptsecurity/mosaic/core';\n\n\n/**\n * Component for list-options of selection-list. Each list-option can automatically\n * generate a checkbox and can put current item into the selectionModel of selection-list\n * if the current item is selected.\n */\n@Component({\n    exportAs: 'mcListOption',\n    selector: 'mc-list-option',\n    host: {\n        tabindex: '-1',\n\n        class: 'mc-list-option',\n        '[class.mc-selected]': 'selected',\n        '[class.mc-focused]': '_hasFocus',\n        '(focus)': '_handleFocus()',\n        '(blur)': '_handleBlur()',\n        '(click)': '_handleClick()'\n    },\n    templateUrl: 'list-option.html',\n    encapsulation: ViewEncapsulation.None,\n    preserveWhitespaces: false,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class McListOption implements AfterContentInit, OnDestroy, OnInit, IFocusableOption {\n    _hasFocus: boolean = false;\n\n    @ContentChildren(McLine) _lines: QueryList<McLine>;\n\n    @ViewChild('text') _text: ElementRef;\n\n    // Whether the label should appear before or after the checkbox. Defaults to 'after'\n    @Input() checkboxPosition: 'before' | 'after' = 'after';\n\n    @Input() value: any;\n\n    @Input()\n    get disabled() {\n        return this._disabled || (this.listSelection && this.listSelection.disabled);\n    }\n\n    set disabled(value: any) {\n        const newValue = toBoolean(value);\n\n        if (newValue !== this._disabled) {\n            this._disabled = newValue;\n            this._changeDetector.markForCheck();\n        }\n    }\n\n    @Input()\n    get selected(): boolean {\n        return this.listSelection.selectedOptions && this.listSelection.selectedOptions.isSelected(this) || false;\n    }\n\n    set selected(value: boolean) {\n        const isSelected = toBoolean(value);\n\n        if (isSelected !== this._selected) {\n            this.setSelected(isSelected);\n\n            this.listSelection._reportValueChange();\n        }\n    }\n\n    private _lineSetter: McLineSetter;\n    private _selected = false;\n    private _disabled = false;\n\n    constructor(\n        private _element: ElementRef,\n        private _changeDetector: ChangeDetectorRef,\n        @Inject(forwardRef(() => McListSelection))\n        public listSelection: McListSelection\n    ) {}\n\n    ngOnInit() {\n        if (this._selected) {\n            // List options that are selected at initialization can't be reported properly to the form\n            // control. This is because it takes some time until the selection-list knows about all\n            // available options. Also it can happen that the ControlValueAccessor has an initial value\n            // that should be used instead. Deferring the value change report to the next tick ensures\n            // that the form control value is not being overwritten.\n            const wasSelected = this._selected;\n\n            Promise.resolve().then(() => {\n                if (this._selected || wasSelected) {\n                    this.selected = true;\n                    this._changeDetector.markForCheck();\n                }\n            });\n        }\n    }\n\n    ngAfterContentInit() {\n        this._lineSetter = new McLineSetter(this._lines, this._element);\n    }\n\n    ngOnDestroy(): void {\n        if (this.selected) {\n            // We have to delay this until the next tick in order\n            // to avoid changed after checked errors.\n            Promise.resolve().then(() => this.selected = false);\n        }\n\n        this.listSelection._removeOptionFromList(this);\n    }\n\n    toggle(): void {\n        this.selected = !this.selected;\n    }\n\n    focus(): void {\n        this._element.nativeElement.focus();\n\n        this.listSelection.setFocusedOption(this);\n    }\n\n    getLabel() {\n        return this._text ? this._text.nativeElement.textContent : '';\n    }\n\n    setSelected(selected: boolean) {\n        if (this._selected === selected || !this.listSelection.selectedOptions) { return; }\n\n        this._selected = selected;\n\n        if (selected) {\n            this.listSelection.selectedOptions.select(this);\n        } else {\n            this.listSelection.selectedOptions.deselect(this);\n        }\n\n        this._changeDetector.markForCheck();\n    }\n\n    _getHeight(): number {\n        return this._element.nativeElement.getClientRects()[0].height;\n    }\n\n    _handleClick() {\n        if (this.disabled) { return; }\n\n        this.listSelection.setFocusedOption(this);\n    }\n\n    _handleFocus() {\n        if (this.disabled || this._hasFocus) { return; }\n\n        this._hasFocus = true;\n    }\n\n    _handleBlur() {\n        this._hasFocus = false;\n\n        this.listSelection._onTouched();\n    }\n\n    _getHostElement(): HTMLElement {\n        return this._element.nativeElement;\n    }\n}\n\n\nexport const MC_SELECTION_LIST_VALUE_ACCESSOR: any = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => McListSelection),\n    multi: true\n};\n\n// Change event that is being fired whenever the selected state of an option changes. */\nexport class McListSelectionChange {\n    constructor(\n        // Reference to the selection list that emitted the event.\n        public source: McListSelection,\n        // Reference to the option that has been changed.\n        public option: McListOption\n    ) {}\n}\n\n\nexport class McListSelectionBase {}\n\nexport const _McListSelectionMixinBase: CanDisableCtor & typeof McListSelectionBase\n    = mixinDisabled(McListSelectionBase);\n\n@Component({\n    exportAs: 'mcListSelection',\n    selector: 'mc-list-selection',\n    template: '<ng-content></ng-content>',\n    styleUrls: ['./list.css'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n    inputs: ['disabled', 'tabIndex'],\n    host: {\n        class: 'mc-list-selection',\n        '[tabIndex]': 'tabIndex',\n        '(focus)': 'focus()',\n        '(blur)': '_onTouched()',\n        '(keydown)': '_onKeyDown($event)',\n        '(window:resize)': 'updateScrollSize()'\n    },\n    providers: [MC_SELECTION_LIST_VALUE_ACCESSOR],\n    preserveWhitespaces: false\n})\nexport class McListSelection extends _McListSelectionMixinBase implements\n    IFocusableOption, CanDisable, AfterContentInit, ControlValueAccessor {\n\n    _keyManager: FocusKeyManager<McListOption>;\n\n    // The option components contained within this selection-list.\n    @ContentChildren(McListOption) options: QueryList<McListOption>;\n\n    tabIndex: number;\n\n    autoSelect: boolean;\n    noUnselect: boolean;\n    multiple: boolean;\n\n    // todo temporary solution\n    withShift: boolean;\n    withCtrl: boolean;\n\n    @Input() horizontal: boolean = false;\n\n    // Emits a change event whenever the selected state of an option changes.\n    @Output() readonly selectionChange: EventEmitter<McListSelectionChange> = new EventEmitter<McListSelectionChange>();\n\n    selectedOptions: SelectionModel<McListOption>;\n\n    // Used for storing the values that were assigned before the options were initialized.\n    private _tempValues: string[] | null;\n\n    private _modelChanges = Subscription.EMPTY;\n\n    constructor(\n        private _element: ElementRef,\n        @Attribute('tabindex') tabIndex: string,\n        @Attribute('auto-select') autoSelect: string,\n        @Attribute('no-unselect') noUnselect: string,\n        @Attribute('multiple') multiple: string\n    ) {\n        super();\n\n        this.autoSelect = autoSelect === null ? true : toBoolean(autoSelect);\n        this.multiple = multiple === null ? true : toBoolean(multiple);\n        this.noUnselect = noUnselect === null ? true : toBoolean(noUnselect);\n\n        this.tabIndex = parseInt(tabIndex) || 0;\n\n        this.selectedOptions = new SelectionModel<McListOption>(this.multiple);\n    }\n\n    ngAfterContentInit(): void {\n        this.horizontal = toBoolean(this.horizontal);\n\n        this._keyManager = new FocusKeyManager<McListOption>(this.options)\n            .withTypeAhead()\n            .withVerticalOrientation(!this.horizontal)\n            .withHorizontalOrientation(this.horizontal ? 'ltr' : null);\n\n        if (this._tempValues) {\n            this._setOptionsFromValues(this._tempValues);\n            this._tempValues = null;\n        }\n\n        // Sync external changes to the model back to the options.\n        this._modelChanges = this.selectedOptions.onChange!.subscribe((event) => {\n            for (const item of event.added) {\n                item.selected = true;\n            }\n\n            for (const item of event.removed) {\n                item.selected = false;\n            }\n        });\n\n        this.updateScrollSize();\n    }\n\n    ngOnDestroy() {\n        this._modelChanges.unsubscribe();\n    }\n\n    focus() {\n        this._element.nativeElement.focus();\n    }\n\n    selectAll() {\n        this.options.forEach((option) => option.setSelected(true));\n\n        this._reportValueChange();\n    }\n\n    deselectAll() {\n        this.options.forEach((option) => option.setSelected(false));\n\n        this._reportValueChange();\n    }\n\n    updateScrollSize(): void {\n        if (this.horizontal || !this.options.first) { return; }\n\n        this._keyManager.withScrollSize(Math.floor(this._getHeight() / this.options.first._getHeight()));\n    }\n\n    // Sets the focused option of the selection-list.\n    setFocusedOption(option: McListOption): void {\n        this._keyManager.updateActiveItem(option);\n\n        if (this.withShift && this.multiple) {\n            const previousIndex = this._keyManager.previousActiveItemIndex;\n            const activeIndex = this._keyManager.activeItemIndex;\n\n            if (previousIndex < activeIndex) {\n                this.options.forEach((item, index) => {\n                    if (index >= previousIndex && index <= activeIndex) { item.setSelected(true); }\n                });\n            } else {\n                this.options.forEach((item, index) => {\n                    if (index >= activeIndex && index <= previousIndex) { item.setSelected(true); }\n                });\n            }\n\n            this.withShift = false;\n        } else if (this.withCtrl) {\n            this.withCtrl = false;\n\n            if (!this._canDeselectLast(option)) { return; }\n\n            option.toggle();\n        } else {\n            if (this.autoSelect) {\n                this.options.forEach((item) => item.setSelected(false));\n                option.setSelected(true);\n            }\n        }\n\n        this._emitChangeEvent(option);\n        this._reportValueChange();\n    }\n\n    // Implemented as part of ControlValueAccessor.\n    writeValue(values: string[]): void {\n        if (this.options) {\n            this._setOptionsFromValues(values || []);\n        } else {\n            this._tempValues = values;\n        }\n    }\n\n    // Implemented as part of ControlValueAccessor.\n    registerOnChange(fn: (value: any) => void): void {\n        this._onChange = fn;\n    }\n\n    // Implemented as part of ControlValueAccessor.\n    registerOnTouched(fn: () => void): void {\n        this._onTouched = fn;\n    }\n\n    // Implemented as a part of ControlValueAccessor.\n    setDisabledState(isDisabled: boolean): void {\n        if (this.options) {\n            this.options.forEach((option) => option.disabled = isDisabled);\n        }\n    }\n\n    getSelectedOptionValues(): string[] {\n        return this.options.filter((option) => option.selected).map((option) => option.value);\n    }\n\n    // Toggles the selected state of the currently focused option.\n    toggleFocusedOption(): void {\n        const focusedIndex = this._keyManager.activeItemIndex;\n\n        if (focusedIndex != null && this._isValidIndex(focusedIndex)) {\n            const focusedOption: McListOption = this.options.toArray()[focusedIndex];\n\n            if (focusedOption && this._canDeselectLast(focusedOption)) {\n                focusedOption.toggle();\n\n                // Emit a change event because the focused option changed its state through user interaction.\n                this._emitChangeEvent(focusedOption);\n            }\n        }\n    }\n\n    _canDeselectLast(listOption: McListOption): boolean {\n        return !(this.noUnselect && this.selectedOptions.selected.length === 1 && listOption.selected);\n    }\n\n    _getHeight(): number {\n        return this._element.nativeElement.getClientRects()[0].height;\n    }\n\n    // View to model callback that should be called if the list or its options lost focus.\n    _onTouched: () => void = () => {};\n\n    // Removes an option from the selection list and updates the active item.\n    _removeOptionFromList(option: McListOption) {\n        if (option._hasFocus) {\n            const optionIndex = this._getOptionIndex(option);\n\n            // Check whether the option is the last item\n            if (optionIndex > 0) {\n                this._keyManager.setPreviousItemActive();\n            } else if (optionIndex === 0 && this.options.length > 1) {\n                this._keyManager.setNextItemActive();\n            }\n        }\n    }\n\n    _onKeyDown(event: KeyboardEvent) {\n        const keyCode = event.keyCode;\n        this.withShift = event.shiftKey;\n        this.withCtrl = event.ctrlKey;\n\n        switch (keyCode) {\n            case SPACE:\n            case ENTER:\n                this.toggleFocusedOption();\n                event.preventDefault();\n\n                break;\n            case HOME:\n                this._keyManager.setFirstItemActive();\n                event.preventDefault();\n\n                break;\n            case END:\n                this._keyManager.setLastItemActive();\n                event.preventDefault();\n\n                break;\n            case PAGE_UP:\n                if (!this.horizontal) { this._keyManager.setPreviousPageItemActive(); }\n\n                event.preventDefault();\n\n                break;\n            case PAGE_DOWN:\n                if (!this.horizontal) { this._keyManager.setNextPageItemActive(); }\n\n                event.preventDefault();\n\n                break;\n            default:\n                this._keyManager.onKeydown(event);\n        }\n    }\n\n    // Reports a value change to the ControlValueAccessor\n    _reportValueChange() {\n        if (this.options) {\n            this._onChange(this.getSelectedOptionValues());\n        }\n    }\n\n    // Emits a change event if the selected state of an option changed.\n    _emitChangeEvent(option: McListOption) {\n        this.selectionChange.emit(new McListSelectionChange(this, option));\n    }\n\n    // Returns the option with the specified value.\n    private _getOptionByValue(value: string): McListOption | undefined {\n        return this.options.find((option) => option.value === value);\n    }\n\n    // Sets the selected options based on the specified values.\n    private _setOptionsFromValues(values: string[]) {\n        this.options.forEach((option) => option.setSelected(false));\n\n        values\n            .map((value) => this._getOptionByValue(value))\n            .filter(Boolean)\n            .forEach((option) => option!.setSelected(true));\n    }\n\n    /**\n     * Utility to ensure all indexes are valid.\n     * @param index The index to be checked.\n     * @returns True if the index is valid for our list of options.\n     */\n    private _isValidIndex(index: number): boolean {\n        return index >= 0 && index < this.options.length;\n    }\n\n    // Returns the index of the specified list option.\n    private _getOptionIndex(option: McListOption): number {\n        return this.options.toArray().indexOf(option);\n    }\n\n    // View to model callback that should be called whenever the selected options change.\n    private _onChange: (value: any) => void = (_: any) => {};\n}\n","// todo пока не делаем, перенесено из материала, но у нас в доках таких простых списков нет.\nimport {\n    AfterContentInit, ChangeDetectionStrategy, Component, ContentChildren, Directive, ElementRef, QueryList,\n    ViewEncapsulation\n} from '@angular/core';\n\nimport { McLine, McLineSetter } from '@ptsecurity/mosaic/core';\n\n\nexport class McListBase {}\n\n@Component({\n    selector: 'mc-list',\n    host: { class: 'mc-list' },\n    template: '<ng-content></ng-content>',\n    styleUrls: ['./list.css'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None\n})\nexport class McList extends McListBase {}\n\n\n/**\n * Directive whose purpose is to add the mc- CSS styling to this selector.\n * @docs-private\n */\n@Directive({\n    selector: '[mc-subheader], [mcSubheader]',\n    host: { class: 'mc-subheader' }\n})\nexport class McListSubheaderCssStyler {}\n\n\n// Boilerplate for applying mixins to McListItem.\nexport class McListItemBase {}\n\n@Component({\n    selector: 'mc-list-item, a[mc-list-item]',\n    host: {\n        class: 'mc-list-item',\n        '(focus)': '_handleFocus()',\n        '(blur)': '_handleBlur()'\n    },\n    templateUrl: './list-item.html',\n    encapsulation: ViewEncapsulation.None,\n    preserveWhitespaces: false,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class McListItem extends McListItemBase implements AfterContentInit {\n    @ContentChildren(McLine) _lines: QueryList<McLine>;\n\n    private _lineSetter: McLineSetter;\n\n    constructor(private _element: ElementRef) {\n        super();\n    }\n\n    ngAfterContentInit() {\n        this._lineSetter = new McLineSetter(this._lines, this._element);\n    }\n\n    _handleFocus() {\n        this._element.nativeElement.classList.add('mc-focused');\n    }\n\n    _handleBlur() {\n        this._element.nativeElement.classList.remove('mc-focused');\n    }\n\n    _getHostElement(): HTMLElement {\n        return this._element.nativeElement;\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { A11yModule } from '@ptsecurity/cdk/a11y';\n\nimport { McLineModule } from '@ptsecurity/mosaic/core';\n\nimport { McListSelection, McListOption } from './list-selection.component';\nimport { McList, McListItem, McListSubheaderCssStyler } from './list.component';\n\n\n@NgModule({\n    imports: [\n        CommonModule,\n        A11yModule,\n        McLineModule\n    ],\n    exports: [\n        McList,\n        McListSelection,\n        McListItem,\n        McListOption,\n        McListSubheaderCssStyler\n    ],\n    declarations: [\n        McList,\n        McListSelection,\n        McListItem,\n        McListOption,\n        McListSubheaderCssStyler\n    ]\n})\nexport class McListModule {}\n","import {\n    Input,\n    Attribute,\n    Component,\n    ElementRef,\n    OnDestroy,\n    ViewEncapsulation,\n    ChangeDetectionStrategy,\n    ChangeDetectorRef\n} from '@angular/core';\n\nimport { FocusMonitor } from '@ptsecurity/cdk/a11y';\nimport {\n    CanDisable, CanDisableCtor,\n    HasTabIndex, HasTabIndexCtor,\n    mixinDisabled,\n    mixinTabIndex,\n    toBoolean\n} from '@ptsecurity/mosaic/core';\n\n\nexport class McLinkBase {\n    constructor(public _elementRef: ElementRef) {\n    }\n}\n\nexport const _McLinkBase: HasTabIndexCtor & CanDisableCtor & typeof McLinkBase\n    = mixinTabIndex(mixinDisabled(McLinkBase));\n\n@Component({\n    selector: 'a.mc-link',\n    template: `<ng-content></ng-content>`,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n    exportAs: 'mcLink',\n    styleUrls: ['./link.css'],\n    inputs: ['disabled'],\n    host: {\n        '[attr.disabled]': 'disabled || null',\n        '[attr.tabindex]': 'tabIndex'\n    }\n})\n\nexport class McLink extends _McLinkBase implements OnDestroy, HasTabIndex, CanDisable {\n\n    @Input()\n    get disabled() {\n        return this._disabled;\n    }\n\n    set disabled(value: any) {\n        const newValue = toBoolean(value);\n\n        if (newValue !== this._disabled) {\n            this._disabled = newValue;\n            this._changeDetector.markForCheck();\n        }\n    }\n\n    private _disabled = false;\n\n    constructor(\n        @Attribute('tabindex') tabIndex: string,\n        public elementRef: ElementRef,\n        private _focusMonitor: FocusMonitor,\n        private _changeDetector: ChangeDetectorRef) {\n\n        super(elementRef);\n        this._focusMonitor.monitor(elementRef.nativeElement, true);\n        this.tabIndex = parseInt(tabIndex) || 0;\n    }\n\n    ngOnDestroy() {\n        this._focusMonitor.stopMonitoring(this.elementRef.nativeElement);\n    }\n\n    focus(): void {\n        this._getHostElement().focus();\n    }\n\n    _getHostElement() {\n        return this.elementRef.nativeElement;\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { A11yModule } from '@ptsecurity/cdk/a11y';\n\nimport { McLink } from './link.component';\n\n\n@NgModule({\n    imports: [\n        CommonModule,\n        A11yModule\n    ],\n    declarations: [McLink],\n    exports: [McLink]\n})\nexport class McLinkModule {}\n","import { Injectable, Optional, SkipSelf } from '@angular/core';\nimport { Subject, Subscription } from 'rxjs';\n\nimport { McModalRef } from './modal-ref.class';\n\n\ninterface IRegisteredMeta {\n    modalRef: McModalRef;\n    afterOpenSubscription: Subscription;\n    afterCloseSubscription: Subscription;\n}\n\n@Injectable()\nexport class McModalControlService {\n\n    // Track singleton afterAllClose through over the injection tree\n    get afterAllClose(): Subject<void> {\n        return this.parentService ? this.parentService.afterAllClose : this.rootAfterAllClose;\n    }\n\n    // Track singleton openModals array through over the injection tree\n    get openModals(): McModalRef[] {\n        return this.parentService ? this.parentService.openModals : this.rootOpenModals;\n    }\n\n    // @ts-ignore\n    private rootOpenModals: McModalRef[] = this.parentService ? null : [];\n    // @ts-ignore\n    private rootAfterAllClose: Subject<void> = this.parentService ? null : new Subject<void>();\n    // @ts-ignore\n    private rootRegisteredMetaMap: Map<McModalRef, IRegisteredMeta> = this.parentService ? null : new Map();\n\n    // Registered modal for later usage\n    private get registeredMetaMap(): Map<McModalRef, IRegisteredMeta> {\n        return this.parentService ? this.parentService.registeredMetaMap : this.rootRegisteredMetaMap;\n    }\n\n    constructor(\n        @Optional() @SkipSelf() private parentService: McModalControlService) {\n    }\n\n    // Register a modal to listen its open/close\n    registerModal(modalRef: McModalRef): void {\n        if (!this.hasRegistered(modalRef)) {\n            const afterOpenSubscription = modalRef.afterOpen.subscribe(() => this.openModals.push(modalRef));\n            const afterCloseSubscription = modalRef.afterClose.subscribe(() => this.removeOpenModal(modalRef));\n\n            this.registeredMetaMap.set(modalRef, {modalRef, afterOpenSubscription, afterCloseSubscription});\n        }\n    }\n\n    hasRegistered(modalRef: McModalRef): boolean {\n        return this.registeredMetaMap.has(modalRef);\n    }\n\n    // Close all registered opened modals\n    closeAll(): void {\n        let i = this.openModals.length;\n\n        while (i--) {\n            this.openModals[i].close();\n        }\n    }\n\n    private removeOpenModal(modalRef: McModalRef): void {\n        const index = this.openModals.indexOf(modalRef);\n\n        if (index > -1) {\n            this.openModals.splice(index, 1);\n\n            if (!this.openModals.length) {\n                this.afterAllClose.next();\n            }\n        }\n    }\n}\n","import { Observable } from 'rxjs';\n\nimport { McModalComponent } from './modal.component';\n\n\n/**\n * API class that public to users to handle the modal instance.\n * McModalRef is aim to avoid accessing to the modal instance directly by users.\n */\nexport abstract class McModalRef<T = any, R = any> {\n    abstract afterOpen: Observable<void>;\n    abstract afterClose: Observable<R>;\n\n    abstract open(): void;\n\n    abstract close(result?: R): void;\n\n    abstract destroy(result?: R): void;\n\n    /**\n     * Trigger the nzOnOk/nzOnCancel by manual\n     */\n    abstract triggerOk(): void;\n\n    abstract triggerCancel(): void;\n\n    // /**\n    //  * Return the ComponentRef of nzContent when specify nzContent as a Component\n    //  * Note: this method may return undefined if the Component has not ready yet.\n    //    (it only available after Modal's ngOnInit)\n    //  */\n    // abstract getContentComponentRef(): ComponentRef<{}>;\n\n    /**\n     * Return the component instance of nzContent when specify nzContent as a Component\n     * Note: this method may return undefined if the Component has not ready yet.\n     * (it only available after Modal's ngOnInit)\n     */\n    abstract getContentComponent(): T;\n\n    /**\n     * Get the dom element of this Modal\n     */\n    abstract getElement(): HTMLElement;\n\n    /**\n     * Get the instance of the Modal itself\n     */\n    abstract getInstance(): McModalComponent;\n}\n","export interface IClickPosition {\n    x: number;\n    y: number;\n}\n\nexport class ModalUtil {\n    private lastPosition: IClickPosition;\n\n    constructor(private document: Document) {\n        this.lastPosition = {x: -1, y: -1};\n        this.listenDocumentClick();\n    }\n\n    getLastClickPosition(): IClickPosition {\n        return this.lastPosition;\n    }\n\n    listenDocumentClick(): void {\n        this.document.addEventListener('click', (event: MouseEvent) => {\n            this.lastPosition = {x: event.clientX, y: event.clientY};\n        });\n    }\n}\n\nexport default new ModalUtil(document);\n","import { DOCUMENT } from '@angular/common';\nimport {\n    AfterViewInit, ChangeDetectionStrategy, ChangeDetectorRef,\n    Component,\n    ComponentFactoryResolver,\n    ComponentRef,\n    ElementRef,\n    EventEmitter,\n    Inject,\n    Injector,\n    Input,\n    OnChanges,\n    OnDestroy,\n    OnInit,\n    Output,\n    Renderer2,\n    SimpleChanges,\n    TemplateRef,\n    Type,\n    ViewChild,\n    ViewContainerRef, ViewEncapsulation\n} from '@angular/core';\nimport { ESCAPE } from '@ptsecurity/cdk/keycodes';\nimport { Overlay, OverlayRef } from '@ptsecurity/cdk/overlay';\nimport { McMeasureScrollbarService } from '@ptsecurity/mosaic/core';\nimport { Observable } from 'rxjs';\n\nimport { McModalControlService } from './modal-control.service';\nimport { McModalRef } from './modal-ref.class';\n// tslint:disable-next-line\nimport ModalUtil from './modal-util';\nimport { IModalButtonOptions, IModalOptions, ModalType, OnClickCallback } from './modal.type';\n\n\n// Duration when perform animations (ms)\nexport const MODAL_ANIMATE_DURATION = 200;\n\ntype AnimationState = 'enter' | 'leave' | null;\n\n@Component({\n    selector: 'mc-modal',\n    templateUrl: './modal.component.html',\n    styleUrls: ['./modal.css'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n    host: {\n        '(keydown)': 'onKeyDown($event)'\n    }\n})\nexport class McModalComponent<T = any, R = any> extends McModalRef<T, R>\n    implements OnInit, OnChanges, AfterViewInit, OnDestroy, IModalOptions {\n\n    // tslint:disable-next-line:no-any\n    @Input() mcModalType: ModalType = 'default';\n    // If not specified, will use <ng-content>\n    @Input() mcContent: string | TemplateRef<{}> | Type<T>;\n    // available when mcContent is a component\n    @Input() mcComponentParams: object;\n    // Default Modal ONLY\n    @Input() mcFooter: string | TemplateRef<{}> | IModalButtonOptions<T>[];\n\n    @Input()\n    get mcVisible() { return this._mcVisible; }\n    set mcVisible(value) { this._mcVisible = value; }\n    _mcVisible = false;\n\n    @Output() mcVisibleChange = new EventEmitter<boolean>();\n\n    @Input() mcZIndex: number = 1000;\n    @Input() mcWidth: number | string = 480;\n    @Input() mcWrapClassName: string;\n    @Input() mcClassName: string;\n    @Input() mcStyle: object;\n    @Input() mcTitle: string | TemplateRef<{}>;\n    @Input() mcCloseByESC: boolean = true;\n\n    @Input()\n    get mcClosable() { return this._mcClosable; }\n    set mcClosable(value) { this._mcClosable = value; }\n    _mcClosable = true;\n\n    @Input()\n    get mcMask() { return this._mcMask; }\n    set mcMask(value) { this._mcMask = value; }\n    _mcMask = true;\n\n    @Input()\n    get mcMaskClosable() { return this._mcMaskClosable; }\n    set mcMaskClosable(value) { this._mcMaskClosable = value; }\n    _mcMaskClosable = true;\n\n    @Input() mcMaskStyle: object;\n    @Input() mcBodyStyle: object;\n\n    // Trigger when modal open(visible) after animations\n    @Output() mcAfterOpen = new EventEmitter<void>();\n    // Trigger when modal leave-animation over\n    @Output() mcAfterClose = new EventEmitter<R>();\n\n    // --- Predefined OK & Cancel buttons\n    @Input() mcOkText: string;\n    @Input() mcOkType = 'primary';\n\n    @Input()\n    get mcOkLoading() { return this._mcOkLoading; }\n    set mcOkLoading(value) { this._mcOkLoading = value; }\n    _mcOkLoading = false;\n\n    @Input() @Output() mcOnOk: EventEmitter<T> | OnClickCallback<T> = new EventEmitter<T>();\n    // Only aim to focus the ok button that needs to be auto focused\n    @ViewChild('autoFocusButtonOk', {read: ElementRef}) autoFocusButtonOk: ElementRef;\n    @Input() mcCancelText: string;\n\n    @Input()\n    get mcCancelLoading() { return this._mcCancelLoading; }\n    set mcCancelLoading(value) { this._mcCancelLoading = value; }\n    _mcCancelLoading = false;\n\n    @Input() @Output() mcOnCancel: EventEmitter<T> | OnClickCallback<T> = new EventEmitter<T>();\n    @ViewChild('modalContainer') modalContainer: ElementRef;\n    @ViewChild('bodyContainer', {read: ViewContainerRef}) bodyContainer: ViewContainerRef;\n    maskAnimationClassMap: object;\n    modalAnimationClassMap: object;\n    // The origin point that animation based on\n    transformOrigin = '0px 0px 0px';\n\n    // Observable alias for mcAfterOpen\n    get afterOpen(): Observable<void> {\n        return this.mcAfterOpen.asObservable();\n    }\n\n    // Observable alias for mcAfterClose\n    get afterClose(): Observable<R> {\n        return this.mcAfterClose.asObservable();\n    }\n\n    get okText(): string {\n        return this.mcOkText;\n    }\n\n    get cancelText(): string {\n        return this.mcCancelText;\n    }\n\n    // Indicate whether this dialog should hidden\n    get hidden(): boolean {\n        return !this.mcVisible && !this.animationState;\n    }\n\n    // Handle the reference when using mcContent as Component\n    private contentComponentRef: ComponentRef<T>;\n    // Current animation state\n    private animationState: AnimationState;\n    private container: HTMLElement | OverlayRef;\n\n    constructor(\n        private overlay: Overlay,\n        private renderer: Renderer2,\n        private cfr: ComponentFactoryResolver,\n        private elementRef: ElementRef,\n        private viewContainer: ViewContainerRef,\n        private mcMeasureScrollbarService: McMeasureScrollbarService,\n        private modalControl: McModalControlService,\n        private changeDetector: ChangeDetectorRef,\n        @Inject(DOCUMENT) private document: any) {\n\n        super();\n    }\n\n    @Input() mcGetContainer: HTMLElement | OverlayRef | (() => HTMLElement | OverlayRef) = () => this.overlay.create();\n\n    ngOnInit() {\n\n        // Create component along without View\n        if (this.isComponent(this.mcContent)) {\n            this.createDynamicComponent(this.mcContent as Type<T>);\n        }\n\n        // Setup default button options\n        if (this.isModalButtons(this.mcFooter)) {\n            this.mcFooter = this.formatModalButtons(this.mcFooter as IModalButtonOptions<T>[]);\n        }\n\n        // Place the modal dom to elsewhere\n        this.container = typeof this.mcGetContainer === 'function' ? this.mcGetContainer() : this.mcGetContainer;\n        if (this.container instanceof HTMLElement) {\n            this.container.appendChild(this.elementRef.nativeElement);\n        } else if (this.container instanceof OverlayRef) {\n            // NOTE: only attach the dom to overlay, the view container is not changed actually\n            this.container.overlayElement.appendChild(this.elementRef.nativeElement);\n        }\n\n        // Register modal when afterOpen/afterClose is stable\n        this.modalControl.registerModal(this);\n    }\n\n    // [NOTE] NOT available when using by service!\n    // Because ngOnChanges never be called when using by service,\n    // here we can't support \"mcContent\"(Component) etc. as inputs that initialized dynamically.\n    // BUT: User also can change \"mcContent\" dynamically to trigger UI changes\n    // (provided you don't use \bComponent that needs initializations)\n    ngOnChanges(changes: SimpleChanges) {\n        if (changes.mcVisible) {\n            // Do not trigger animation while initializing\n            this.handleVisibleStateChange(this.mcVisible, !changes.mcVisible.firstChange);\n        }\n    }\n\n    ngAfterViewInit() {\n        // If using Component, it is the time to attach View while bodyContainer is ready\n        if (this.contentComponentRef) {\n            this.bodyContainer.insert(this.contentComponentRef.hostView);\n        }\n\n        if (this.autoFocusButtonOk) {\n            (this.autoFocusButtonOk.nativeElement as HTMLButtonElement).focus();\n        }\n    }\n\n    ngOnDestroy() {\n        if (this.container instanceof OverlayRef) {\n            this.container.dispose();\n        }\n    }\n\n    open() {\n        this.changeVisibleFromInside(true);\n    }\n\n    close(result?: R) {\n        this.changeVisibleFromInside(false, result);\n    }\n\n    // Destroy equals Close\n    destroy(result?: R) {\n        this.close(result);\n    }\n\n    triggerOk() {\n        this.onClickOkCancel('ok');\n    }\n\n    triggerCancel() {\n        this.onClickOkCancel('cancel');\n    }\n\n    getInstance(): McModalComponent {\n        return this;\n    }\n\n    getContentComponentRef(): ComponentRef<T> {\n        return this.contentComponentRef;\n    }\n\n    getContentComponent(): T {\n        return this.contentComponentRef && this.contentComponentRef.instance;\n    }\n\n    getElement(): HTMLElement {\n        return this.elementRef && this.elementRef.nativeElement;\n    }\n\n    onClickMask($event: MouseEvent) {\n        if (\n            this.mcMask &&\n            this.mcMaskClosable &&\n            ($event.target as HTMLElement).classList.contains('mc-modal-wrap') &&\n            this.mcVisible\n        ) {\n            this.onClickOkCancel('cancel');\n        }\n    }\n\n    // tslint:disable-next-line\n    isModalType(type: ModalType): boolean {\n        return this.mcModalType === type;\n    }\n\n    onKeyDown(event: KeyboardEvent): void {\n\n        if (event.keyCode === ESCAPE && this.container && (this.container instanceof OverlayRef)) {\n\n            this.close();\n            event.preventDefault();\n        }\n    }\n\n    // AoT\n    onClickCloseBtn() {\n        if (this.mcVisible) {\n            this.onClickOkCancel('cancel');\n        }\n    }\n\n    // AoT\n    // tslint:disable-next-line\n    onClickOkCancel(type: 'ok' | 'cancel') {\n        const trigger = { ok: this.mcOnOk, cancel: this.mcOnCancel }[type];\n        const loadingKey = { ok: 'mcOkLoading', cancel: 'mcCancelLoading' }[type];\n\n        if (trigger instanceof EventEmitter) {\n            trigger.emit(this.getContentComponent());\n        } else if (typeof trigger === 'function') {\n\n            const result = trigger(this.getContentComponent());\n            // Users can return \"false\" to prevent closing by default\n            const caseClose = (doClose: boolean | void | {}) => (doClose !== false) && this.close(doClose as R);\n\n            if (isPromise(result)) {\n                this[loadingKey] = true;\n                const handleThen = (doClose) => {\n                    this[loadingKey] = false;\n                    caseClose(doClose);\n                };\n                (result as Promise<void>).then(handleThen).catch(handleThen);\n            } else {\n                caseClose(result);\n            }\n        }\n    }\n\n    // AoT\n    isNonEmptyString(value: {}): boolean {\n        return typeof value === 'string' && value !== '';\n    }\n\n    // AoT\n    isTemplateRef(value: {}): boolean {\n        return value instanceof TemplateRef;\n    }\n\n    // AoT\n    isComponent(value: {}): boolean {\n        return value instanceof Type;\n    }\n\n    // AoT\n    isModalButtons(value: {}): boolean {\n        return Array.isArray(value) && value.length > 0;\n    }\n\n    // Do rest things when visible state changed\n    private handleVisibleStateChange(visible: boolean, animation: boolean = true, closeResult?: R): Promise<any> {\n        // Hide scrollbar at the first time when shown up\n        if (visible) {\n            this.changeBodyOverflow(1);\n        }\n\n        return Promise\n            .resolve(animation && this.animateTo(visible))\n            // Emit open/close event after animations over\n            .then(() => {\n                if (visible) {\n                    this.mcAfterOpen.emit();\n                } else {\n                    this.mcAfterClose.emit(closeResult);\n                    // Show/hide scrollbar when animation is over\n                    this.changeBodyOverflow();\n                }\n            });\n    }\n\n    // Lookup a button's property, if the prop is a function, call & then return the result, otherwise, return itself.\n    // AoT\n    // tslint:disable-next-line\n    getButtonCallableProp(options: IModalButtonOptions<T>, prop: string): {} {\n        const value = options[prop];\n        const args: any[] = [];\n        if (this.contentComponentRef) {\n            args.push(this.contentComponentRef.instance);\n        }\n\n        return typeof value === 'function' ? value.apply(options, args) : value;\n    }\n\n    // On mcFooter's modal button click\n    // AoT\n    // tslint:disable-next-line\n    onButtonClick(button: IModalButtonOptions<T>) {\n        // Call onClick directly\n        const result = this.getButtonCallableProp(button, 'onClick');\n        if (isPromise(result)) {\n            button.loading = true;\n            (result as Promise<{}>).then(() => button.loading = false).catch(() => button.loading = false);\n        }\n    }\n\n    // Change mcVisible from inside\n    private changeVisibleFromInside(visible: boolean, closeResult?: R): Promise<void> {\n        if (this.mcVisible !== visible) {\n            // Change mcVisible value immediately\n            this.mcVisible = visible;\n            this.mcVisibleChange.emit(visible);\n\n            return this.handleVisibleStateChange(visible, true, closeResult);\n        }\n\n        return Promise.resolve();\n    }\n\n    private changeAnimationState(state: AnimationState) {\n        this.animationState = state;\n        if (state) {\n            this.maskAnimationClassMap = {\n                [`fade-${state}`]: true,\n                [`fade-${state}-active`]: true\n            };\n            this.modalAnimationClassMap = {\n                [`zoom-${state}`]: true,\n                [`zoom-${state}-active`]: true\n            };\n        } else {\n            // @ts-ignore\n            this.maskAnimationClassMap = this.modalAnimationClassMap = null;\n        }\n\n        if (this.contentComponentRef) {\n            this.contentComponentRef.changeDetectorRef.markForCheck();\n        } else {\n            this.changeDetector.markForCheck();\n        }\n    }\n\n    private animateTo(isVisible: boolean): Promise<any> {\n        // Figure out the lastest click position when shows up\n        if (isVisible) {\n            // [NOTE] Using timeout due to the document.click event is fired later than visible change,\n            // so if not postponed to next event-loop, we can't get the lastest click position\n            window.setTimeout(() => this.updateTransformOrigin());\n        }\n\n        this.changeAnimationState(isVisible ? 'enter' : 'leave');\n\n        // Return when animation is over\n        return new Promise((resolve) => window.setTimeout(() => {\n            this.changeAnimationState(null);\n            resolve();\n        }, MODAL_ANIMATE_DURATION));\n    }\n\n    private formatModalButtons(buttons: IModalButtonOptions<T>[]): IModalButtonOptions<T>[] {\n        return buttons.map((button) => {\n\n            return {\n                ...{\n                    type: 'default',\n                    size: 'default',\n                    autoLoading: true,\n                    show: true,\n                    loading: false,\n                    disabled: false\n                },\n                ...button\n            };\n        });\n    }\n\n    /**\n     * Create a component dynamically but not attach to any View\n     * (this action will be executed when bodyContainer is ready)\n     * @param component Component class\n     */\n    private createDynamicComponent(component: Type<T>) {\n        const factory = this.cfr.resolveComponentFactory(component);\n        const childInjector = Injector.create({\n            providers: [{provide: McModalRef, useValue: this}],\n            parent: this.viewContainer.parentInjector\n        });\n\n        this.contentComponentRef = factory.create(childInjector);\n\n        if (this.mcComponentParams) {\n            Object.assign(this.contentComponentRef.instance, this.mcComponentParams);\n        }\n\n        // Do the first change detection immediately\n        // (or we do detection at ngAfterViewInit, multi-changes error will be thrown)\n        this.contentComponentRef.changeDetectorRef.detectChanges();\n\n\n    }\n\n    // Update transform-origin to the last click position on document\n    private updateTransformOrigin() {\n        const modalElement = this.modalContainer.nativeElement as HTMLElement;\n        const lastPosition = ModalUtil.getLastClickPosition();\n\n        if (lastPosition) {\n            // tslint:disable-next-line\n            this.transformOrigin = `${lastPosition.x - modalElement.offsetLeft}px ${lastPosition.y - modalElement.offsetTop}px 0px`;\n        }\n    }\n\n    /**\n     * Take care of the body's overflow to decide the existense of scrollbar\n     * @param plusNum The number that the openModals.length will increase soon\n     */\n    private changeBodyOverflow(plusNum: number = 0) {\n        const openModals = this.modalControl.openModals;\n\n        if (openModals.length + plusNum > 0) {\n            // tslint:disable-next-line\n            this.renderer.setStyle(this.document.body, 'padding-right', `${this.mcMeasureScrollbarService.scrollBarWidth}px`);\n            this.renderer.setStyle(this.document.body, 'overflow', 'hidden');\n        } else {\n            this.renderer.removeStyle(this.document.body, 'padding-right');\n            this.renderer.removeStyle(this.document.body, 'overflow');\n        }\n    }\n}\n\n////////////\n\nfunction isPromise(obj: {} | void): boolean {\n    // tslint:disable-next-line\n    return !!obj && (typeof obj === 'object' || typeof obj === 'function') && typeof (obj as Promise<{}>).then === 'function' && typeof (obj as Promise<{}>).catch === 'function';\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n\n@Pipe({\n    name: 'toCssUnit'\n})\nexport class CssUnitPipe implements PipeTransform {\n    transform(value: number | string, defaultUnit: string = 'px'): string {\n        const formatted = +value;\n\n        return isNaN(formatted) ? `${value}` : `${formatted}${defaultUnit}`;\n    }\n}\n","import {\n    AfterContentChecked,\n    AfterContentInit,\n    AfterViewInit,\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    ContentChild,\n    ContentChildren, Directive,\n    ElementRef,\n    QueryList,\n    ViewEncapsulation\n} from '@angular/core';\nimport { NgControl } from '@angular/forms';\nimport { ESCAPE } from '@ptsecurity/cdk/keycodes';\nimport { CanColor, CanColorCtor, mixinColor } from '@ptsecurity/mosaic/core';\nimport { EMPTY, merge } from 'rxjs';\nimport { startWith } from 'rxjs/operators';\n\n\nimport { McCleaner } from './cleaner';\nimport { McFormFieldControl } from './form-field-control';\nimport { getMcFormFieldMissingControlError } from './form-field-errors';\nimport { McFormFieldNumberControl } from './form-field-number-control';\nimport { McHint } from './hint';\nimport { McPrefix } from './prefix';\nimport { McStepper } from './stepper';\nimport { McSuffix } from './suffix';\n\n\nlet nextUniqueId = 0;\n\nexport class McFormFieldBase {\n    constructor(public _elementRef: ElementRef) {}\n}\n\nexport const _McFormFieldMixinBase: CanColorCtor & typeof McFormFieldBase = mixinColor(McFormFieldBase);\n\n@Component({\n    selector: 'mc-form-field',\n    exportAs: 'mcFormField',\n    templateUrl: 'form-field.html',\n    // McInput is a directive and can't have styles, so we need to include its styles here.\n    // The McInput styles are fairly minimal so it shouldn't be a big deal for people who\n    // aren't using McInput.\n    styleUrls: [\n        'form-field.css',\n        '../input/input.css',\n        '../textarea/textarea.css'\n    ],\n    host: {\n        class: 'mc-form-field',\n        '[class.mc-form-field_invalid]': '_control.errorState',\n        '[class.mc-disabled]': '_control.disabled',\n        '[class.mc-form-field_has-prefix]': 'hasPrefix',\n        '[class.mc-form-field_has-suffix]': 'hasSuffix',\n        '[class.mc-form-field_has-cleaner]': 'canShowCleaner',\n        '[class.mc-form-field_has-stepper]': 'canShowStepper',\n        '[class.mc-focused]': '_control.focused',\n        '[class.ng-untouched]': '_shouldForward(\"untouched\")',\n        '[class.ng-touched]': '_shouldForward(\"touched\")',\n        '[class.ng-pristine]': '_shouldForward(\"pristine\")',\n        '[class.ng-dirty]': '_shouldForward(\"dirty\")',\n        '[class.ng-valid]': '_shouldForward(\"valid\")',\n        '[class.ng-invalid]': '_shouldForward(\"invalid\")',\n        '[class.ng-pending]': '_shouldForward(\"pending\")',\n        '(keydown)': 'onKeyDown($event)',\n        '(mouseenter)': 'onHoverChanged(true)',\n        '(mouseleave)': 'onHoverChanged(false)'\n    },\n    inputs: ['color'],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\n\nexport class McFormField extends _McFormFieldMixinBase implements\n    AfterContentInit, AfterContentChecked, AfterViewInit, CanColor {\n\n    @ContentChild(McFormFieldControl) _control: McFormFieldControl<any>;\n    @ContentChild(McFormFieldNumberControl) _numberControl: McFormFieldNumberControl<any>;\n    @ContentChild(McStepper) _stepper: McStepper;\n\n    @ContentChildren(McHint) _hint: QueryList<McHint>;\n    @ContentChildren(McSuffix) _suffix: QueryList<McSuffix>;\n    @ContentChildren(McPrefix) _prefix: QueryList<McPrefix>;\n    @ContentChildren(McCleaner) _cleaner: QueryList<McCleaner>;\n\n    // Unique id for the internal form field label.\n    _labelId = `mc-form-field-label-${nextUniqueId++}`;\n\n    hovered: boolean = false;\n\n    constructor(public _elementRef: ElementRef, private _changeDetectorRef: ChangeDetectorRef) {\n        super(_elementRef);\n    }\n\n    ngAfterContentInit() {\n        this._validateControlChild();\n\n        if (this._control.controlType) {\n            this._elementRef.nativeElement.classList\n                .add(`mc-form-field-type-${this._control.controlType}`);\n\n            if (this._numberControl && this.hasStepper) {\n                this._stepper.stepUp.subscribe(this.onStepUp.bind(this));\n                this._stepper.stepDown.subscribe(this.onStepDown.bind(this));\n            }\n        }\n\n        // Subscribe to changes in the child control state in order to update the form field UI.\n        this._control.stateChanges.pipe(startWith())\n            .subscribe(() => {\n                this._changeDetectorRef.markForCheck();\n            });\n\n        if (this._numberControl) {\n            this._numberControl.stateChanges.pipe(startWith())\n                .subscribe(() => {\n                    this._changeDetectorRef.markForCheck();\n                });\n        }\n\n        // Run change detection if the value changes.\n        const valueChanges = this._control.ngControl && this._control.ngControl.valueChanges || EMPTY;\n\n        merge(valueChanges)\n            .subscribe(() => this._changeDetectorRef.markForCheck());\n    }\n\n    ngAfterContentChecked() {\n        this._validateControlChild();\n    }\n\n    ngAfterViewInit() {\n        // Avoid animations on load.\n        this._changeDetectorRef.detectChanges();\n    }\n\n    clearValue($event) {\n        $event.stopPropagation();\n\n        if (this._control && this._control.ngControl) {\n            this._control.ngControl.reset();\n        }\n    }\n\n    onContainerClick($event) {\n        if (this._control.onContainerClick) {\n            this._control.onContainerClick($event);\n        }\n    }\n\n    onKeyDown(event: KeyboardEvent): void {\n        // tslint:disable-next-line:deprecation\n        if (event.keyCode === ESCAPE && this._control.focused && this.hasCleaner) {\n            if (this._control && this._control.ngControl) {\n                this._control.ngControl.reset();\n            }\n\n            event.preventDefault();\n        }\n    }\n\n    onHoverChanged(isHovered: boolean) {\n        if (isHovered !== this.hovered) {\n            this.hovered  = isHovered;\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n\n    onStepUp() {\n        if (this._numberControl) {\n            this._numberControl.stepUp(this._numberControl.step);\n        }\n    }\n\n    onStepDown() {\n        if (this._numberControl) {\n            this._numberControl.stepDown(this._numberControl.step);\n        }\n    }\n\n    /** Determines whether a class from the NgControl should be forwarded to the host element. */\n    _shouldForward(prop: keyof NgControl): boolean {\n        const ngControl = this._control ? this._control.ngControl : null;\n\n        return ngControl && ngControl[prop];\n    }\n\n    /** Throws an error if the form field's control is missing. */\n    protected _validateControlChild() {\n        if (!this._control) {\n            throw getMcFormFieldMissingControlError();\n        }\n    }\n\n    get hasHint(): boolean {\n        return this._hint && this._hint.length > 0;\n    }\n\n    get hasSuffix(): boolean {\n        return this._suffix && this._suffix.length > 0;\n    }\n\n    get hasPrefix(): boolean {\n        return this._prefix && this._prefix.length > 0;\n    }\n\n    get hasCleaner(): boolean {\n        return this._cleaner && this._cleaner.length > 0;\n    }\n\n    get hasStepper(): boolean {\n        return !!this._stepper;\n    }\n\n    get canShowCleaner(): boolean {\n        return this.hasCleaner &&\n            this._control &&\n            this._control.ngControl\n                ? this._control.ngControl.value && !this._control.disabled\n                : false;\n    }\n\n\n    get disabled(): boolean {\n        return this._control && this._control.disabled;\n    }\n\n    get canShowStepper(): boolean {\n        return this._numberControl &&\n            !this.disabled &&\n            (\n                this._numberControl.focused ||\n                this.hovered\n            );\n    }\n}\n\n@Directive({\n    selector: 'mc-form-field[mcFormFieldWithoutBorders]',\n    exportAs: 'mcFormFieldWithoutBorders',\n    host: { class: 'mc-form-field_without-borders' }\n})\nexport class McFormFieldWithoutBorders {}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { McIconModule } from '@ptsecurity/mosaic/icon';\n\nimport { McCleaner } from './cleaner';\nimport { McFormField, McFormFieldWithoutBorders } from './form-field';\nimport { McHint } from './hint';\nimport { McPrefix } from './prefix';\nimport { McStepper } from './stepper';\nimport { McSuffix } from './suffix';\n\n\n@NgModule({\n    declarations: [\n        McFormField,\n        McFormFieldWithoutBorders,\n        McHint,\n        McPrefix,\n        McSuffix,\n        McCleaner,\n        McStepper\n    ],\n    imports: [CommonModule, McIconModule],\n    exports: [\n        McFormField,\n        McFormFieldWithoutBorders,\n        McHint,\n        McPrefix,\n        McSuffix,\n        McCleaner,\n        McStepper\n    ]\n})\nexport class McFormFieldModule {\n}\n","import { InjectionToken } from '@angular/core';\n\n\nexport const MC_INPUT_VALUE_ACCESSOR =\n    new InjectionToken<{ value: any }>('MC_INPUT_VALUE_ACCESSOR');\n","function sanitizeNumber(value: number): number | null {\n    return !isFinite(value) || isNaN(value)\n        ? null\n        : value;\n}\n\nfunction getPrecision(value: number): number {\n    const arr = value.toString().split('.');\n\n    return arr.length === 1\n        ? 1\n        // tslint:disable-next-line:no-magic-numbers\n        :  Math.pow(10, arr[1].length);\n}\n\nfunction add(value1: number, value2: number) {\n    const precision = Math.max(getPrecision(value1), getPrecision(value2));\n\n    const res = (value1 * precision + value2 * precision) / precision;\n\n    return sanitizeNumber(res);\n}\n\nexport const stepUp = (value: number | null,\n                       max: number,\n                       min: number,\n                       step: number\n): number | null => {\n    let res;\n\n    if (value === null) {\n        res = add(min, step);\n\n        return res === null ? null : Math.min(res, max);\n    }\n\n    res = add(value, step);\n\n    return res === null ? null : Math.max(Math.min(res, max), min);\n};\n\nexport const stepDown = (value: number | null,\n                         max: number,\n                         min: number,\n                         step: number\n): number | null => {\n    let res;\n\n    if (value === null) {\n        res = add(max, -step);\n\n        return res === null ? null : Math.max(res, min);\n    }\n\n    res = add(value, -step);\n\n    return res === null ? null : Math.min(Math.max(res, min), max);\n};\n","import {\n    Attribute,\n    Directive, DoCheck, ElementRef, Inject, Input, OnChanges,\n    OnDestroy, Optional, Self\n} from '@angular/core';\nimport {\n    FormGroupDirective,\n    NgControl,\n    NgForm, NgModel\n} from '@angular/forms';\nimport { coerceBooleanProperty } from '@ptsecurity/cdk/coercion';\nimport {\n    END, C, V, X, A, DELETE, BACKSPACE, TAB, ENTER,\n    ESCAPE, ZERO, NINE, NUMPAD_ZERO, NUMPAD_NINE, NUMPAD_MINUS, DASH,\n    FF_MINUS, LEFT_ARROW, RIGHT_ARROW, HOME, UP_ARROW, DOWN_ARROW, F1, F12\n} from '@ptsecurity/cdk/keycodes';\nimport { getSupportedInputTypes, Platform } from '@ptsecurity/cdk/platform';\nimport {\n    CanUpdateErrorState,\n    CanUpdateErrorStateCtor,\n    ErrorStateMatcher,\n    mixinErrorState\n} from '@ptsecurity/mosaic/core';\nimport { McFormFieldControl, McFormFieldNumberControl } from '@ptsecurity/mosaic/form-field';\nimport { Subject } from 'rxjs';\n\nimport { getMcInputUnsupportedTypeError } from './input-errors';\nimport { MC_INPUT_VALUE_ACCESSOR } from './input-value-accessor';\nimport { stepDown, stepUp } from './stepperUtils';\n\n\nconst MC_INPUT_INVALID_TYPES = [\n    'button',\n    'checkbox',\n    'file',\n    'hidden',\n    'image',\n    'radio',\n    'range',\n    'reset',\n    'submit'\n];\n\nexport const BIG_STEP = 10;\nexport const SMALL_STEP = 1;\n\nlet nextUniqueId = 0;\n\nexport class McInputBase {\n    constructor(public _defaultErrorStateMatcher: ErrorStateMatcher,\n                public _parentForm: NgForm,\n                public _parentFormGroup: FormGroupDirective,\n                public ngControl: NgControl) {\n    }\n}\n\nexport const _McInputMixinBase: CanUpdateErrorStateCtor & typeof McInputBase = mixinErrorState(McInputBase);\n\n\n@Directive({\n    selector: `input[mcInput][type=\"number\"]`,\n    exportAs: 'mcNumericalInput',\n    providers: [NgModel, { provide: McFormFieldNumberControl, useExisting: McNumberInput }],\n    host: {\n        '(blur)': '_focusChanged(false)',\n        '(focus)': '_focusChanged(true)',\n        '(paste)': 'onPaste($event)',\n        '(keydown)': 'onKeyDown($event)'\n    }\n})\nexport class McNumberInput implements McFormFieldNumberControl<any> {\n\n    /**\n     * Implemented as part of McFormFieldNumberControl.\n     * @docs-private\n     */\n    @Input()\n    bigStep: number;\n\n    /**\n     * Implemented as part of McFormFieldNumberControl.\n     * @docs-private\n     */\n    @Input()\n    step: number;\n\n    @Input()\n    min: number;\n\n    @Input()\n    max: number;\n\n    /**\n     * Implemented as part of McFormFieldNumberControl.\n     * @docs-private\n     */\n    value: any;\n\n    /**\n     * Implemented as part of McFormFieldNumberControl.\n     * @docs-private\n     */\n    focused: boolean = false;\n\n    /**\n     * Implemented as part of McFormFieldNumberControl.\n     * @docs-private\n     */\n    readonly stateChanges: Subject<void> = new Subject<void>();\n\n    private readonly _host: HTMLInputElement;\n\n    constructor(\n        private _platform: Platform ,\n        private _elementRef: ElementRef,\n        private _model: NgModel,\n        @Attribute('step') step: string,\n        @Attribute('big-step') bigStep: string,\n        @Attribute('min') min: string,\n        @Attribute('max') max: string\n    ) {\n        this.step = this.isDigit(step) ? parseFloat(step) : SMALL_STEP;\n        this.bigStep = this.isDigit(bigStep) ? parseFloat(bigStep) : BIG_STEP;\n        this.min = this.isDigit(min) ? parseFloat(min) : -Infinity;\n        this.max = this.isDigit(max) ? parseFloat(max) : Infinity;\n\n        this._host = this._elementRef.nativeElement;\n\n        const self = this;\n\n        if ('valueAsNumber' in this._host) {\n            Object.defineProperty(Object.getPrototypeOf(this._host), 'valueAsNumber', {\n                // tslint:disable-next-line:no-reserved-keywords\n                get() {\n                    const res = parseFloat(self.normalizeSplitter(this.value));\n\n                    return isNaN(res) ? null : res;\n                }\n            });\n        }\n    }\n\n    _focusChanged(isFocused: boolean) {\n        if (isFocused !== this.focused) {\n            this.focused = isFocused;\n            this.stateChanges.next();\n        }\n    }\n\n    onKeyDown(event: KeyboardEvent) {\n        // tslint:disable-next-line:deprecation\n        const keyCode = event.keyCode;\n\n        const isCtrlA = (e) => e.keyCode === A && (e.ctrlKey || e.metaKey);\n        const isCtrlC = (e) => e.keyCode === C && (e.ctrlKey || e.metaKey);\n        const isCtrlV = (e) => e.keyCode === V && (e.ctrlKey || e.metaKey);\n        const isCtrlX = (e) => e.keyCode === X && (e.ctrlKey || e.metaKey);\n\n        const isFKey = (e) => e.keyCode >= F1 && e.keyCode <= F12;\n\n        const isNumber = (e) => (e.keyCode >= ZERO && e.keyCode <= NINE) ||\n            (e.keyCode >= NUMPAD_ZERO && e.keyCode <= NUMPAD_NINE);\n\n        const minuses = [NUMPAD_MINUS, DASH, FF_MINUS];\n        const serviceKeys = [DELETE, BACKSPACE, TAB, ESCAPE, ENTER];\n        const arrows = [LEFT_ARROW, RIGHT_ARROW];\n        const allowedKeys =  [HOME, END].concat(arrows).concat(serviceKeys).concat(minuses);\n\n        const isIEPeriod = (e) => e.key === '.' || e.key === 'Decimal';\n        const isNotIEPeriod = (e) => e.key === '.' || e.key === ',';\n\n        // Decimal is for IE\n        const isPeriod = (e) => this._platform.EDGE || this._platform.TRIDENT\n            ? isIEPeriod(e)\n            : isNotIEPeriod(e);\n\n        if (allowedKeys.indexOf(keyCode) !== -1 ||\n            isCtrlA(event) ||\n            isCtrlC(event) ||\n            isCtrlV(event) ||\n            isCtrlX(event) ||\n            isFKey(event) ||\n            isPeriod(event)\n        ) {\n            // let it happen, don't do anything\n            return;\n        }\n        // Ensure that it is not a number and stop the keypress\n        if (event.shiftKey || !isNumber(event)) {\n            event.preventDefault();\n\n            // process steps\n            const step = event.shiftKey ? this.bigStep : this.step;\n\n            if (keyCode === UP_ARROW) {\n                this.stepUp(step);\n            }\n\n            if (keyCode === DOWN_ARROW) {\n                this.stepDown(step);\n            }\n        }\n    }\n\n    onPaste(event) {\n        let value = event.clipboardData.getData('text');\n        value = this.normalizeSplitter(value);\n\n        if (!this.isDigit(value)) {\n            event.preventDefault();\n        }\n    }\n\n    stepUp(step: number) {\n        this._elementRef.nativeElement.focus();\n        const res = stepUp(this._host.valueAsNumber, this.max, this.min, step);\n        this._host.value = res === null ? '' : res.toString();\n        this._model.update.emit(this._host.valueAsNumber);\n    }\n\n    stepDown(step: number) {\n        this._elementRef.nativeElement.focus();\n        const res = stepDown(this._host.valueAsNumber, this.max, this.min, step);\n        this._host.value = res === null ? '' : res.toString();\n        this._model.update.emit(this._host.valueAsNumber);\n    }\n\n    private normalizeSplitter(value: string): string {\n        return value ? value.replace(/,/g, '.') : value;\n    }\n\n    private isDigit(value: string): boolean {\n        return this.isFloat(value) || this.isInt(value);\n    }\n\n    private isFloat(value: string): boolean {\n        return /^-?\\d+\\.\\d+$/.test(value);\n    }\n\n    private isInt(value: string): boolean {\n        return /^-?\\d+$/.test(value);\n    }\n}\n\n@Directive({\n    selector: `input[mcInput]`,\n    exportAs: 'mcInput',\n    host: {\n        class: 'mc-input',\n        // Native input properties that are overwritten by Angular inputs need to be synced with\n        // the native input element. Otherwise property bindings for those don't work.\n        '[attr.id]': 'id',\n        '[attr.placeholder]': 'placeholder',\n        '[disabled]': 'disabled',\n        '[required]': 'required',\n        '(blur)': '_focusChanged(false)',\n        '(focus)': '_focusChanged(true)',\n        '(input)': '_onInput()'\n    },\n    providers: [{ provide: McFormFieldControl, useExisting: McInput }]\n})\nexport class McInput extends _McInputMixinBase implements McFormFieldControl<any>, OnChanges,\n    OnDestroy, DoCheck, CanUpdateErrorState {\n\n    /** An object used to control when error messages are shown. */\n    @Input() errorStateMatcher: ErrorStateMatcher;\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    focused: boolean = false;\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    readonly stateChanges: Subject<void> = new Subject<void>();\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    controlType: string = 'mc-input';\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    @Input()\n    get disabled(): boolean {\n        if (this.ngControl && this.ngControl.disabled !== null) {\n            return this.ngControl.disabled;\n        }\n\n        return this._disabled;\n    }\n\n    set disabled(value: boolean) {\n        this._disabled = coerceBooleanProperty(value);\n\n        // Browsers may not fire the blur event if the input is disabled too quickly.\n        // Reset from here to ensure that the element doesn't become stuck.\n        if (this.focused) {\n            this.focused = false;\n            this.stateChanges.next();\n        }\n    }\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    @Input()\n    get id(): string {\n        return this._id;\n    }\n\n    set id(value: string) {\n        this._id = value || this._uid;\n    }\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    @Input() placeholder: string;\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    @Input()\n    get required(): boolean {\n        return this._required;\n    }\n\n    set required(value: boolean) {\n        this._required = coerceBooleanProperty(value);\n    }\n\n    // tslint:disable no-reserved-keywords\n    /** Input type of the element. */\n    @Input()\n    get type(): string {\n        return this._type;\n    }\n\n    set type(value: string) {\n        this._type = value || 'text';\n        this._validateType();\n\n        // When using Angular inputs, developers are no longer able to set the properties on the native\n        // input element. To ensure that bindings for `type` work, we need to sync the setter\n        // with the native property. Textarea elements don't support the type property or attribute.\n        if (getSupportedInputTypes().has(this._type)) {\n            this._elementRef.nativeElement.type = this._type;\n        }\n    }\n    // tslint:enable no-reserved-keywords\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    @Input()\n    get value(): string {\n        return this._inputValueAccessor.value;\n    }\n\n    set value(value: string) {\n        if (value !== this.value) {\n            this._inputValueAccessor.value = value;\n            this.stateChanges.next();\n        }\n    }\n\n    protected _uid = `mc-input-${nextUniqueId++}`;\n    protected _previousNativeValue: any;\n    protected _disabled = false;\n    protected _id: string;\n    protected _required = false;\n    protected _type = 'text';\n    protected _neverEmptyInputTypes = [\n        'date',\n        'datetime',\n        'datetime-local',\n        'month',\n        'time',\n        'week'\n    ].filter((t) => getSupportedInputTypes().has(t));\n\n    private _inputValueAccessor: { value: any };\n\n    constructor(protected _elementRef: ElementRef,\n                @Optional() @Self() public ngControl: NgControl,\n                @Optional() _parentForm: NgForm,\n                @Optional() _parentFormGroup: FormGroupDirective,\n                _defaultErrorStateMatcher: ErrorStateMatcher,\n                @Optional() @Self() @Inject(MC_INPUT_VALUE_ACCESSOR) inputValueAccessor: any) {\n        super(_defaultErrorStateMatcher, _parentForm, _parentFormGroup, ngControl);\n        // If no input value accessor was explicitly specified, use the element as the input value\n        // accessor.\n        this._inputValueAccessor = inputValueAccessor || this._elementRef.nativeElement;\n\n        this._previousNativeValue = this.value;\n\n        // Force setter to be called in case id was not specified.\n        this.id = this.id;\n    }\n\n    ngOnChanges() {\n        this.stateChanges.next();\n    }\n\n    ngOnDestroy() {\n        this.stateChanges.complete();\n    }\n\n    ngDoCheck() {\n        if (this.ngControl) {\n            // We need to re-evaluate this on every change detection cycle, because there are some\n            // error triggers that we can't subscribe to (e.g. parent form submissions). This means\n            // that whatever logic is in here has to be super lean or we risk destroying the performance.\n            this.updateErrorState();\n        }\n\n        // We need to dirty-check the native element's value, because there are some cases where\n        // we won't be notified when it changes (e.g. the consumer isn't using forms or they're\n        // updating the value using `emitEvent: false`).\n        this._dirtyCheckNativeValue();\n    }\n\n    /** Focuses the input. */\n    focus(): void {\n        this._elementRef.nativeElement.focus();\n    }\n\n    /** Callback for the cases where the focused state of the input changes. */\n    _focusChanged(isFocused: boolean) {\n        if (isFocused !== this.focused) {\n            this.focused = isFocused;\n            this.stateChanges.next();\n        }\n    }\n\n    _onInput() {\n        // This is a noop function and is used to let Angular know whenever the value changes.\n        // Angular will run a new change detection each time the `input` event has been dispatched.\n        // It's necessary that Angular recognizes the value change, because when floatingLabel\n        // is set to false and Angular forms aren't used, the placeholder won't recognize the\n        // value changes and will not disappear.\n        // Listening to the input event wouldn't be necessary when the input is using the\n        // FormsModule or ReactiveFormsModule, because Angular forms also listens to input events.\n    }\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    get empty(): boolean {\n        return !this._isNeverEmpty() && !this._elementRef.nativeElement.value && !this._isBadInput();\n    }\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    onContainerClick() {\n        this.focus();\n    }\n\n    /** Does some manual dirty checking on the native input `value` property. */\n    protected _dirtyCheckNativeValue() {\n        const newValue = this.value;\n\n        if (this._previousNativeValue !== newValue) {\n            this._previousNativeValue = newValue;\n            this.stateChanges.next();\n        }\n    }\n\n    /** Make sure the input is a supported type. */\n    protected _validateType() {\n        if (MC_INPUT_INVALID_TYPES.indexOf(this._type) > -1) {\n            throw getMcInputUnsupportedTypeError(this._type);\n        }\n    }\n\n    /** Checks whether the input type is one of the types that are never empty. */\n    protected _isNeverEmpty() {\n        return this._neverEmptyInputTypes.indexOf(this._type) > -1;\n    }\n\n    /** Checks whether the input is invalid based on the native validation. */\n    protected _isBadInput() {\n        // The `validity` property won't be present on platform-server.\n        const validity = (this._elementRef.nativeElement as HTMLInputElement).validity;\n\n        return validity && validity.badInput;\n    }\n}\n\n@Directive({\n    selector: 'input[mcInputMonospace]',\n    exportAs: 'McInputMonospace',\n    host: { class: 'mc-input_monospace' }\n})\nexport class McInputMono {\n}\n","import { Directive, forwardRef, Input, OnChanges, Provider, SimpleChanges } from '@angular/core';\nimport { AbstractControl, NG_VALIDATORS, ValidationErrors, Validator, ValidatorFn, Validators } from '@angular/forms';\n\n\nexport const MIN_VALIDATOR: Provider = {\n    provide: NG_VALIDATORS,\n    useExisting: forwardRef(() => MinValidator),\n    multi: true\n};\n\n/**\n * A directive which installs the {@link MinValidator} for any `formControlName`,\n * `formControl`, or control with `ngModel` that also has a `min` attribute.\n *\n * @experimental\n */\n@Directive({\n    selector: '[min][formControlName],[min][formControl],[min][ngModel]',\n    providers: [MIN_VALIDATOR],\n    host: {'[attr.min]': 'min ? min : null'}\n})\nexport class MinValidator implements Validator, OnChanges {\n\n    @Input() min: string;\n    private _validator: ValidatorFn;\n    private _onChange: () => void;\n\n    ngOnChanges(changes: SimpleChanges): void {\n        if ('min' in changes) {\n            this._createValidator();\n            if (this._onChange) { this._onChange(); }\n        }\n    }\n\n    validate(c: AbstractControl): ValidationErrors | null { return this._validator(c); }\n\n    registerOnValidatorChange(fn: () => void): void { this._onChange = fn; }\n\n    private _createValidator(): void { this._validator = Validators.min(parseInt(this.min, 10)); }\n}\n\n\nexport const MAX_VALIDATOR: Provider = {\n    provide: NG_VALIDATORS,\n    useExisting: forwardRef(() => MaxValidator),\n    multi: true\n};\n\n/**\n * A directive which installs the {@link MaxValidator} for any `formControlName`,\n * `formControl`, or control with `ngModel` that also has a `min` attribute.\n *\n * @experimental\n */\n@Directive({\n    selector: '[max][formControlName],[max][formControl],[max][ngModel]',\n    providers: [MAX_VALIDATOR],\n    host: {\n        '[attr.max]': 'max ? max : null'\n    }\n})\nexport class MaxValidator implements Validator,\n    OnChanges {\n\n    @Input() max: string;\n    private _validator: ValidatorFn;\n    private _onChange: () => void;\n\n    ngOnChanges(changes: SimpleChanges): void {\n        if ('max' in changes) {\n            this._createValidator();\n            if (this._onChange) { this._onChange(); }\n        }\n    }\n\n    validate(c: AbstractControl): ValidationErrors | null { return this._validator(c); }\n\n    registerOnValidatorChange(fn: () => void): void { this._onChange = fn; }\n\n    private _createValidator(): void { this._validator = Validators.max(parseInt(this.max, 10)); }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { A11yModule } from '@ptsecurity/cdk/a11y';\nimport { McCommonModule } from '@ptsecurity/mosaic/core';\n\nimport { McInput, McInputMono, McNumberInput } from './input';\nimport { MaxValidator, MinValidator } from './input-number-validators';\n\n\n@NgModule({\n    imports: [CommonModule, A11yModule, McCommonModule, FormsModule],\n    exports: [McInput, McNumberInput, McInputMono, MinValidator, MaxValidator],\n    declarations: [McInput, McNumberInput, McInputMono, MinValidator, MaxValidator ]\n})\nexport class McInputModule {\n}\n","import { Component } from '@angular/core';\n\n\n@Component({\n    selector: 'mc-content',\n    preserveWhitespaces: false,\n    templateUrl: './content.component.html',\n    styles: [\n        `:host {\n            display: block;\n        }`\n    ],\n    host: {\n        '[class.mc-layout-content]': 'true'\n    }\n})\nexport class McContentComponent {\n}\n","import { Component } from '@angular/core';\n\n\n@Component({\n    selector: 'mc-footer',\n    preserveWhitespaces: false,\n    templateUrl: './footer.component.html',\n    styles: [\n        `:host {\n            display: block;\n        }`\n    ],\n    host: {\n        '[class.mc-layout-footer]': 'true'\n    }\n})\nexport class McFooterComponent {\n}\n","import { Component } from '@angular/core';\n\n\n@Component({\n    selector : 'mc-header',\n    preserveWhitespaces: false,\n    templateUrl: './header.component.html',\n    styles: [\n        `:host {\n            display: block;\n        }`\n    ],\n    host: {\n        '[class.mc-layout-header]': 'true'\n    }\n})\nexport class McHeaderComponent {\n}\n","import { ChangeDetectionStrategy, Component, ViewEncapsulation } from '@angular/core';\n\n\n@Component({\n    selector: 'mc-layout',\n    preserveWhitespaces: false,\n    styleUrls: ['layout.css'],\n    templateUrl: './layout.component.html',\n    host: {\n        '[class.mc-layout]': 'true',\n        '[class.mc-layout-has-sidebar]': 'hasSidebar'\n    },\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class McLayoutComponent {\n    hasSidebar = false;\n}\n","import {\n    ChangeDetectionStrategy,\n    Component,\n    EventEmitter,\n    Host,\n    Input,\n    OnInit,\n    Optional,\n    Output\n} from '@angular/core';\nimport { toBoolean } from '@ptsecurity/mosaic/core';\n\nimport { McLayoutComponent } from './layout.component';\n\n\n@Component({\n    selector: 'mc-sidebar',\n    preserveWhitespaces: false,\n    templateUrl: './sidebar.component.html',\n    host: {\n        '[class.mc-layout-sidebar]': 'true',\n        '[class.mc-layout-sidebar-collapsed]': 'mcCollapsed',\n        '[style.flex]': 'mcFlex',\n        '[style.max-width.px]': 'mcWidth',\n        '[style.min-width.px]': 'mcWidth',\n        '[style.width.px]': 'mcWidth'\n    },\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class McSidebarComponent implements OnInit {\n\n    @Input() _mcWidth = 200;\n    @Input() mcCollapsedWidth = 80;\n\n    @Input()\n    set mcCollapsible(value: boolean) {\n        this.collapsible = toBoolean(value);\n    }\n\n    get mcCollapsible(): boolean {\n        return this.collapsible;\n    }\n\n    @Input()\n    set mcCollapsed(value: boolean) {\n        this.collapsed = toBoolean(value);\n    }\n\n    get mcCollapsed(): boolean {\n        return this.collapsed;\n    }\n\n    // tslint:disable-next-line\n    @Output() mcCollapsedChange = new EventEmitter();\n\n    private collapsed = false;\n    private collapsible = false;\n\n    get mcFlex(): string {\n        if (this.mcCollapsed) {\n            return `0 0 ${this.mcCollapsedWidth}px`;\n        } else {\n            return `0 0 ${this.mcWidth}px`;\n        }\n    }\n\n    get mcWidth(): number {\n        if (this.mcCollapsed) {\n            return this.mcCollapsedWidth;\n        } else {\n            return this._mcWidth;\n        }\n    }\n\n    constructor(\n        @Optional() @Host() private mcLayoutComponent: McLayoutComponent) {\n    }\n\n    ngOnInit() {\n        if (this.mcLayoutComponent) {\n            this.mcLayoutComponent.hasSidebar = true;\n        }\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { McContentComponent } from './content.component';\nimport { McFooterComponent } from './footer.component';\nimport { McHeaderComponent } from './header.component';\nimport { McLayoutComponent } from './layout.component';\nimport { McSidebarComponent } from './sidebar.component';\n\n\n@NgModule({\n    imports: [ CommonModule ],\n    exports: [\n        McLayoutComponent,\n        McContentComponent,\n        McFooterComponent,\n        McHeaderComponent,\n        McSidebarComponent\n    ],\n    declarations: [\n        McLayoutComponent,\n        McContentComponent,\n        McFooterComponent,\n        McHeaderComponent,\n        McSidebarComponent\n    ]\n})\nexport class McLayoutModule {\n}\n","import {\n    ChangeDetectionStrategy,\n    Component,\n    Directive,\n    ElementRef,\n    OnDestroy,\n    QueryList,\n    ViewEncapsulation,\n    ContentChildren\n} from '@angular/core';\n\nimport { FocusMonitor } from '@ptsecurity/cdk/a11y';\n\nimport { mixinColor, mixinDisabled, CanColor, CanDisable, CanDisableCtor, CanColorCtor } from '@ptsecurity/mosaic/core';\nimport { McIcon } from '@ptsecurity/mosaic/icon';\n\n\n@Directive({\n    selector: 'button[mc-button], a[mc-button]',\n    host: { class: 'mc-button' }\n})\nexport class McButtonCSSStyler {}\n\n\n@Directive({\n    selector: 'button[mc-icon-button], a[mc-icon-button]',\n    queries: {\n        contentChildren: new ContentChildren(McIcon)\n    },\n    host: { class: 'mc-icon-button' }\n})\nexport class McIconButtonCSSStyler {\n    nativeElement: Element;\n\n    contentChildren: QueryList<McIcon>;\n\n    constructor(elementRef: ElementRef) {\n        this.nativeElement = elementRef.nativeElement;\n    }\n\n    ngAfterContentInit() {\n        this._addClassModificatorForIcons();\n    }\n\n    _addClassModificatorForIcons() {\n        const twoIcons = 2;\n        const icons = this.contentChildren.map((item) => item._elementRef.nativeElement);\n\n        if (icons.length === 1) {\n            const iconElement = icons[0];\n\n            if (!iconElement.previousElementSibling && !iconElement.nextElementSibling) {\n                if (iconElement.nextSibling) {\n                    iconElement.classList.add('mc-icon_left');\n                    this.nativeElement.classList.add('mc-icon-button_left');\n                }\n\n                if (iconElement.previousSibling) {\n                    iconElement.classList.add('mc-icon_right');\n                    this.nativeElement.classList.add('mc-icon-button_right');\n                }\n            }\n        } else if (icons.length === twoIcons) {\n            const firstIconElement = icons[0];\n            const secondIconElement = icons[1];\n\n            firstIconElement.classList.add('mc-icon_left');\n            secondIconElement.classList.add('mc-icon_right');\n        }\n    }\n}\n\n\nexport class McButtonBase {\n    constructor(public _elementRef: ElementRef) {}\n}\n\nexport const _McButtonMixinBase:\n    CanDisableCtor &\n    CanColorCtor &\n    typeof McButtonBase =\n        mixinColor(mixinDisabled(McButtonBase));\n\n\n@Component({\n    selector: `\n        button[mc-button],\n        button[mc-xs-button],\n        button[mc-sm-button],\n        button[mc-lg-button],\n        button[mc-xl-button]\n    `,\n    templateUrl: './button.component.html',\n    styleUrls: ['./button.css'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n    inputs: ['disabled', 'color'],\n    host: {\n        '[disabled]': 'disabled || null'\n    }\n})\nexport class McButton extends _McButtonMixinBase implements OnDestroy, CanDisable, CanColor {\n    constructor(elementRef: ElementRef, private _focusMonitor: FocusMonitor) {\n        super(elementRef);\n\n        this._focusMonitor.monitor(this._elementRef.nativeElement, true);\n    }\n\n    ngOnDestroy() {\n        this._focusMonitor.stopMonitoring(this._elementRef.nativeElement);\n    }\n\n    focus(): void {\n        this._getHostElement().focus();\n    }\n\n    _getHostElement() {\n        return this._elementRef.nativeElement;\n    }\n}\n\n\n@Component({\n    selector: 'a[mc-button], a[mc-xs-button], a[mc-sm-button], a[mc-lg-button], a[mc-xl-button]',\n    templateUrl: './button.component.html',\n    styleUrls: ['./button.css'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n    inputs: ['disabled', 'color'],\n    host: {\n        '[attr.tabindex]': 'disabled ? -1 : 0',\n        '[attr.disabled]': 'disabled || null',\n        '(click)': '_haltDisabledEvents($event)'\n    }\n})\nexport class McAnchor extends McButton {\n    constructor(focusMonitor: FocusMonitor, elementRef: ElementRef) {\n        super(elementRef, focusMonitor);\n    }\n\n    _haltDisabledEvents(event: Event) {\n        if (this.disabled) {\n            event.preventDefault();\n            event.stopImmediatePropagation();\n        }\n    }\n}\n\n\n@Component({\n    selector: 'button[mc-icon-button]',\n    templateUrl: './button.component.html',\n    styleUrls: ['./button.css'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n    inputs: ['disabled', 'color'],\n    host: {\n        '[attr.tabindex]': 'disabled ? -1 : 0',\n        '[attr.disabled]': 'disabled || null'\n    }\n})\nexport class McIconButton extends McButton {\n    constructor(focusMonitor: FocusMonitor, elementRef: ElementRef) {\n        super(elementRef, focusMonitor);\n    }\n\n    _haltDisabledEvents(event: Event) {\n        if (this.disabled) {\n            event.preventDefault();\n            event.stopImmediatePropagation();\n        }\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { A11yModule } from '@ptsecurity/cdk/a11y';\nimport { PlatformModule } from '@ptsecurity/cdk/platform';\n\nimport {\n    McButton,\n    McAnchor,\n    McIconButton,\n    McButtonCSSStyler,\n    McIconButtonCSSStyler\n} from './button.component';\n\n\n@NgModule({\n    imports: [\n        CommonModule,\n        A11yModule,\n        PlatformModule\n    ],\n    exports: [\n        McButton,\n        McAnchor,\n        McIconButton,\n        McButtonCSSStyler,\n        McIconButtonCSSStyler\n    ],\n    declarations: [\n        McButton,\n        McAnchor,\n        McIconButton,\n        McButtonCSSStyler,\n        McIconButtonCSSStyler\n    ]\n})\nexport class McButtonModule {}\n","import {\n    Output,\n    ChangeDetectionStrategy,\n    Component,\n    ElementRef, Input,\n    OnDestroy, EventEmitter,\n    ViewEncapsulation, HostBinding\n} from '@angular/core';\n\nimport { FocusMonitor } from '@ptsecurity/cdk/a11y';\nimport { SPACE } from '@ptsecurity/cdk/keycodes';\n\n\n@Component({\n    selector: 'mc-card',\n    templateUrl: './card.component.html',\n    styleUrls: ['./card.component.css'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n    inputs: ['color'],\n    host: {\n        class: 'mc-card',\n        '[class.mc-card_readonly]': 'readonly',\n        '[class.mc-card_selected]': 'selected',\n        '(keydown)': 'onKeyDown($event)',\n        '(click)': 'onClick($event)'\n    }\n})\nexport class McCard implements OnDestroy {\n    get tabIndex(): number | null {\n        return this.readonly ? null : this._tabIndex;\n    }\n\n    @HostBinding('attr.tabIndex')\n    @Input()\n    set tabIndex(value: number | null) {\n        this._tabIndex = value;\n    }\n\n    @Input()\n    readonly = false;\n\n    @Input()\n    selected = false;\n\n    @Output()\n    selectedChange = new EventEmitter<boolean>();\n\n    private _tabIndex: number | null = 0;\n\n    constructor(private _elementRef: ElementRef, private _focusMonitor: FocusMonitor) {\n        this._focusMonitor.monitor(this._elementRef.nativeElement, false);\n    }\n\n    ngOnDestroy() {\n        this._focusMonitor.stopMonitoring(this._elementRef.nativeElement);\n    }\n\n    focus(): void {\n        this.hostElement.focus();\n    }\n\n    onClick($event: MouseEvent) {\n        if (!this.readonly) {\n            $event.stopPropagation();\n\n            this.selectedChange.emit(!this.selected);\n        }\n    }\n\n    private get hostElement() {\n        return this._elementRef.nativeElement;\n    }\n\n    onKeyDown($event: KeyboardEvent) {\n        switch ($event.keyCode) {\n            case SPACE:\n                if (!this.readonly) {\n                    $event.preventDefault();\n                    this.selectedChange.emit(!this.selected);\n                }\n                break;\n            default:\n        }\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { A11yModule } from '@ptsecurity/cdk/a11y';\nimport { PlatformModule } from '@ptsecurity/cdk/platform';\n\nimport {\n    McCard\n} from './card.component';\n\n\n@NgModule({\n    imports: [\n        CommonModule,\n        A11yModule,\n        PlatformModule\n    ],\n    exports: [McCard],\n    declarations: [McCard]\n})\nexport class McCardModule {}\n","import { InjectionToken } from '@angular/core';\n\n\n/**\n * Checkbox click action when user click on input element.\n * noop: Do not toggle checked or indeterminate.\n * check: Only toggle checked status, ignore indeterminate.\n * check-indeterminate: Toggle checked status, set indeterminate to false. Default behavior.\n * undefined: Same as `check-indeterminate`.\n */\nexport type McCheckboxClickAction = 'noop' | 'check' | 'check-indeterminate' | undefined;\n\n/**\n * Injection token that can be used to specify the checkbox click behavior.\n */\nexport const MC_CHECKBOX_CLICK_ACTION =\n    new InjectionToken<McCheckboxClickAction>('mc-checkbox-click-action');\n","import {\n    AfterViewInit,\n    Attribute,\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    ElementRef,\n    EventEmitter,\n    forwardRef,\n    Inject,\n    Input,\n    OnDestroy,\n    Optional,\n    Output,\n    ViewChild,\n    ViewEncapsulation\n} from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { FocusMonitor, FocusOrigin } from '@ptsecurity/cdk/a11y';\nimport {\n    CanColor, CanColorCtor,\n    CanDisable, CanDisableCtor,\n    HasTabIndex, HasTabIndexCtor,\n    mixinColor,\n    mixinDisabled,\n    mixinTabIndex,\n    toBoolean\n} from '@ptsecurity/mosaic/core';\n\nimport { MC_CHECKBOX_CLICK_ACTION, McCheckboxClickAction } from './checkbox-config';\n\n\n// Increasing integer for generating unique ids for checkbox components.\nlet nextUniqueId = 0;\n\n/**\n * Provider Expression that allows mc-checkbox to register as a ControlValueAccessor.\n * This allows it to support [(ngModel)].\n * @docs-private\n */\nexport const MC_CHECKBOX_CONTROL_VALUE_ACCESSOR: any = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => McCheckbox),\n    multi: true\n};\n\n/**\n * Represents the different states that require custom transitions between them.\n * @docs-private\n */\nexport enum TransitionCheckState {\n    /** The initial state of the component before any user interaction. */\n    Init,\n    /** The state representing the component when it's becoming checked. */\n    Checked,\n    /** The state representing the component when it's becoming unchecked. */\n    Unchecked,\n    /** The state representing the component when it's becoming indeterminate. */\n    Indeterminate\n}\n\n/** Change event object emitted by McCheckbox. */\nexport class McCheckboxChange {\n    /** The source McCheckbox of the event. */\n    source: McCheckbox;\n    /** The new `checked` value of the checkbox. */\n    checked: boolean;\n}\n\n// Boilerplate for applying mixins to McCheckbox.\n/** @docs-private */\nexport class McCheckboxBase {\n    constructor(public _elementRef: ElementRef) {\n    }\n}\n\nexport const _McCheckboxMixinBase:\n    HasTabIndexCtor &\n    CanColorCtor &\n    CanDisableCtor &\n    typeof McCheckboxBase =\n        mixinTabIndex(mixinColor(mixinDisabled(McCheckboxBase)));\n\n\n/**\n * A mosaic checkbox component. Supports all of the functionality of an HTML5 checkbox,\n * and exposes a similar API. A McCheckbox can be either checked, unchecked, indeterminate, or\n * disabled. Note that all additional accessibility attributes are taken care of by the component,\n * so there is no need to provide them yourself. However, if you want to omit a label and still\n * have the checkbox be accessible, you may supply an [aria-label] input.\n */\n@Component({\n    selector: 'mc-checkbox',\n    templateUrl: 'checkbox.html',\n    styleUrls: ['checkbox.css'],\n    exportAs: 'mcCheckbox',\n    host: {\n        class: 'mc-checkbox',\n        '[id]': 'id',\n        '[attr.id]': 'id',\n        '[class.mc-indeterminate]': 'indeterminate',\n        '[class.mc-checked]': 'checked',\n        '[class.mc-disabled]': 'disabled',\n        '[class.mc-checkbox-label-before]': 'labelPosition == \"before\"'\n    },\n    providers: [MC_CHECKBOX_CONTROL_VALUE_ACCESSOR],\n    inputs: ['color', 'tabIndex'],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class McCheckbox extends _McCheckboxMixinBase implements ControlValueAccessor,\n    AfterViewInit, OnDestroy, CanColor, CanDisable, HasTabIndex {\n\n    /**\n     * Attached to the aria-label attribute of the host element. In most cases, arial-labelledby will\n     * take precedence so this may be omitted.\n     */\n    @Input('aria-label') ariaLabel: string = '';\n\n    /**\n     * Users can specify the `aria-labelledby` attribute which will be forwarded to the input element\n     */\n    @Input('aria-labelledby') ariaLabelledby: string | null = null;\n\n    private _uniqueId: string = `mc-checkbox-${++nextUniqueId}`;\n\n    /** A unique id for the checkbox input. If none is supplied, it will be auto-generated. */\n    @Input() id: string = this._uniqueId;\n\n    /** Returns the unique id for the visual hidden input. */\n    get inputId(): string {\n        return `${this.id || this._uniqueId}-input`;\n    }\n\n    /** Whether the checkbox is required. */\n    @Input()\n    get required(): boolean {\n        return this._required;\n    }\n\n    set required(value: boolean) {\n        this._required = toBoolean(value);\n    }\n\n    private _required: boolean;\n\n    /** Whether the label should appear after or before the checkbox. Defaults to 'after' */\n    @Input() labelPosition: 'before' | 'after' = 'after';\n\n    /** Name value will be applied to the input element if present */\n    @Input() name: string | null = null;\n\n    /** Event emitted when the checkbox's `checked` value changes. */\n    @Output() readonly change: EventEmitter<McCheckboxChange> =\n        new EventEmitter<McCheckboxChange>();\n\n    /** Event emitted when the checkbox's `indeterminate` value changes. */\n    @Output() readonly indeterminateChange: EventEmitter<boolean> = new EventEmitter<boolean>();\n\n    /** The value attribute of the native input element */\n    @Input() value: string;\n\n    /** The native `<input type=\"checkbox\">` element */\n    @ViewChild('input') _inputElement: ElementRef;\n\n    /**\n     * Called when the checkbox is blurred. Needed to properly implement ControlValueAccessor.\n     * @docs-private\n     */\n    _onTouched: () => any = () => {\n    }\n\n    private _currentAnimationClass: string = '';\n\n    private _currentCheckState: TransitionCheckState = TransitionCheckState.Init;\n\n    private _controlValueAccessorChangeFn: (value: any) => void = () => {\n    }\n\n    constructor(elementRef: ElementRef,\n                private _changeDetectorRef: ChangeDetectorRef,\n                private _focusMonitor: FocusMonitor,\n                @Attribute('tabindex') tabIndex: string,\n                @Optional() @Inject(MC_CHECKBOX_CLICK_ACTION)\n                private _clickAction: McCheckboxClickAction) {\n        super(elementRef);\n\n        this.tabIndex = parseInt(tabIndex) || 0;\n    }\n\n    ngAfterViewInit() {\n        this._focusMonitor\n            .monitor(this._inputElement.nativeElement)\n            .subscribe((focusOrigin) => this._onInputFocusChange(focusOrigin));\n    }\n\n    ngOnDestroy() {\n        this._focusMonitor.stopMonitoring(this._inputElement.nativeElement);\n    }\n\n    /**\n     * Whether the checkbox is checked.\n     */\n    @Input()\n    get checked(): boolean {\n        return this._checked;\n    }\n\n    set checked(value: boolean) {\n        if (value != this.checked) {\n            this._checked = value;\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n\n    private _checked: boolean = false;\n\n    /**\n     * Whether the checkbox is disabled. This fully overrides the implementation provided by\n     * mixinDisabled, but the mixin is still required because mixinTabIndex requires it.\n     */\n    @Input()\n    get disabled() {\n        return this._disabled;\n    }\n\n    set disabled(value: any) {\n        if (value != this.disabled) {\n            this._disabled = value;\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n\n    private _disabled: boolean = false;\n\n    /**\n     * Whether the checkbox is indeterminate. This is also known as \"mixed\" mode and can be used to\n     * represent a checkbox with three states, e.g. a checkbox that represents a nested list of\n     * checkable items. Note that whenever checkbox is manually clicked, indeterminate is immediately\n     * set to false.\n     */\n    @Input()\n    get indeterminate(): boolean {\n        return this._indeterminate;\n    }\n\n    set indeterminate(value: boolean) {\n        const changed = value != this._indeterminate;\n        this._indeterminate = value;\n\n        if (changed) {\n            if (this._indeterminate) {\n                this._transitionCheckState(TransitionCheckState.Indeterminate);\n            } else {\n                this._transitionCheckState(\n                    this.checked ? TransitionCheckState.Checked : TransitionCheckState.Unchecked);\n            }\n            this.indeterminateChange.emit(this._indeterminate);\n        }\n    }\n\n    private _indeterminate: boolean = false;\n\n    /** Method being called whenever the label text changes. */\n    _onLabelTextChange() {\n        // This method is getting called whenever the label of the checkbox changes.\n        // Since the checkbox uses the OnPush strategy we need to notify it about the change\n        // that has been recognized by the cdkObserveContent directive.\n        this._changeDetectorRef.markForCheck();\n    }\n\n    // Implemented as part of ControlValueAccessor.\n    writeValue(value: any) {\n        this.checked = !!value;\n    }\n\n    // Implemented as part of ControlValueAccessor.\n    registerOnChange(fn: (value: any) => void) {\n        this._controlValueAccessorChangeFn = fn;\n    }\n\n    // Implemented as part of ControlValueAccessor.\n    registerOnTouched(fn: any) {\n        this._onTouched = fn;\n    }\n\n    // Implemented as part of ControlValueAccessor.\n    setDisabledState(isDisabled: boolean) {\n        this.disabled = isDisabled;\n    }\n\n    _getAriaChecked(): 'true' | 'false' | 'mixed' {\n        return this.checked ? 'true' : (this.indeterminate ? 'mixed' : 'false');\n    }\n\n    private _transitionCheckState(newState: TransitionCheckState) {\n        const oldState = this._currentCheckState;\n        const element: HTMLElement = this._elementRef.nativeElement;\n\n        if (oldState === newState) {\n            return;\n        }\n        if (this._currentAnimationClass.length > 0) {\n            element.classList.remove(this._currentAnimationClass);\n        }\n\n        this._currentCheckState = newState;\n\n        if (this._currentAnimationClass.length > 0) {\n            element.classList.add(this._currentAnimationClass);\n        }\n    }\n\n    private _emitChangeEvent() {\n        const event = new McCheckboxChange();\n        event.source = this;\n        event.checked = this.checked;\n\n        this._controlValueAccessorChangeFn(this.checked);\n        this.change.emit(event);\n    }\n\n    /** Function is called whenever the focus changes for the input element. */\n    private _onInputFocusChange(focusOrigin: FocusOrigin) {\n        if (focusOrigin) {\n            this._onTouched();\n        }\n    }\n\n    /** Toggles the `checked` state of the checkbox. */\n    toggle(): void {\n        this.checked = !this.checked;\n    }\n\n    /**\n     * Event handler for checkbox input element.\n     * Toggles checked state if element is not disabled.\n     * Do not toggle on (change) event since IE doesn't fire change event when\n     *   indeterminate checkbox is clicked.\n     * @param event\n     */\n    _onInputClick(event: Event) {\n        // We have to stop propagation for click events on the visual hidden input element.\n        // By default, when a user clicks on a label element, a generated click event will be\n        // dispatched on the associated input element. Since we are using a label element as our\n        // root container, the click event on the `checkbox` will be executed twice.\n        // The real click event will bubble up, and the generated click event also tries to bubble up.\n        // This will lead to multiple click events.\n        // Preventing bubbling for the second event will solve that issue.\n        event.stopPropagation();\n\n        // If resetIndeterminate is false, and the current state is indeterminate, do nothing on click\n        if (!this.disabled && this._clickAction !== 'noop') {\n            // When user manually click on the checkbox, `indeterminate` is set to false.\n            if (this.indeterminate && this._clickAction !== 'check') {\n\n                Promise.resolve().then(() => {\n                    this._indeterminate = false;\n                    this.indeterminateChange.emit(this._indeterminate);\n                });\n            }\n\n            this.toggle();\n            this._transitionCheckState(\n                this._checked ? TransitionCheckState.Checked : TransitionCheckState.Unchecked);\n\n            // Emit our custom change event if the native input emitted one.\n            // It is important to only emit it, if the native input triggered one, because\n            // we don't want to trigger a change event, when the `checked` variable changes for example.\n            this._emitChangeEvent();\n        } else if (!this.disabled && this._clickAction === 'noop') {\n            // Reset native input when clicked with noop. The native checkbox becomes checked after\n            // click, reset it to be align with `checked` value of `mc-checkbox`.\n            this._inputElement.nativeElement.checked = this.checked;\n            this._inputElement.nativeElement.indeterminate = this.indeterminate;\n        }\n    }\n\n    /** Focuses the checkbox. */\n    focus(): void {\n        this._focusMonitor.focusVia(this._inputElement.nativeElement, 'keyboard');\n    }\n\n    _onInteractionEvent(event: Event) {\n        // We always have to stop propagation on the change event.\n        // Otherwise the change event, from the input element, will bubble up and\n        // emit its event object to the `change` output.\n        event.stopPropagation();\n    }\n}\n","import {\n    Directive,\n    forwardRef,\n    Provider\n} from '@angular/core';\nimport {\n    CheckboxRequiredValidator,\n    NG_VALIDATORS\n} from '@angular/forms';\n\n\nexport const MC_CHECKBOX_REQUIRED_VALIDATOR: Provider = {\n    provide: NG_VALIDATORS,\n    useExisting: forwardRef(() => McCheckboxRequiredValidator),\n    multi: true\n};\n\n/**\n * Validator for Mosaic checkbox's required attribute in template-driven checkbox.\n * Current CheckboxRequiredValidator only work with `input type=checkbox` and does not\n * work with `mc-checkbox`.\n */\n@Directive({\n    selector: `mc-checkbox[required][formControlName],\n             mc-checkbox[required][formControl], mc-checkbox[required][ngModel]`,\n    providers: [MC_CHECKBOX_REQUIRED_VALIDATOR],\n    host: { '[attr.required]': 'required ? \"\" : null' }\n})\nexport class McCheckboxRequiredValidator extends CheckboxRequiredValidator {\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { McCheckbox } from './checkbox';\nimport { McCheckboxRequiredValidator } from './checkbox-required-validator';\n\n\n@NgModule({\n    imports: [CommonModule],\n    exports: [McCheckbox, McCheckboxRequiredValidator],\n    declarations: [McCheckbox, McCheckboxRequiredValidator]\n})\nexport class McCheckboxModule {\n}\n","import { ChangeDetectionStrategy, Component, Input, ViewEncapsulation } from '@angular/core';\nimport { coerceBooleanProperty } from '@ptsecurity/cdk/coercion';\n\n\n@Component({\n    selector: 'mc-divider',\n    host: {\n        class: 'mc-divider',\n        role: 'separator',\n        '[attr.aria-orientation]': 'vertical ? \"vertical\" : \"horizontal\"',\n        '[class.mc-divider-vertical]': 'vertical',\n        '[class.mc-divider-inset]': 'inset'\n    },\n    template: '',\n    styleUrls: ['divider.css'],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    preserveWhitespaces: false\n})\nexport class McDivider {\n    // Whether the divider is vertically aligned.\n    @Input()\n    get vertical(): boolean {\n        return this._vertical;\n    }\n\n    set vertical(value: boolean) {\n        this._vertical = coerceBooleanProperty(value);\n    }\n\n    private _vertical: boolean = false;\n\n    // Whether the divider is an inset divider.\n    @Input()\n    get inset(): boolean {\n        return this._inset;\n    }\n\n    set inset(value: boolean) {\n        this._inset = coerceBooleanProperty(value);\n    }\n\n    private _inset: boolean = false;\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { McDivider } from './divider.component';\n\n\n@NgModule({\n    imports: [CommonModule],\n    exports: [McDivider],\n    declarations: [McDivider]\n})\nexport class McDividerModule {\n}\n","import { DOCUMENT } from '@angular/common';\nimport {\n    Directive,\n    TemplateRef,\n    ComponentFactoryResolver,\n    ApplicationRef,\n    Injector,\n    ViewContainerRef,\n    Inject,\n    OnDestroy\n} from '@angular/core';\nimport { TemplatePortal, DomPortalOutlet } from '@ptsecurity/cdk/portal';\nimport { Subject } from 'rxjs';\n\n\n/**\n * Dropdown content that will be rendered lazily once the dropdown is opened.\n */\n@Directive({\n    selector: 'ng-template[mcDropdownContent]'\n})\nexport class McDropdownContent implements OnDestroy {\n\n    /** Emits when the dropdown content has been attached. */\n    _attached = new Subject<void>();\n    private _portal: TemplatePortal;\n    private _outlet: DomPortalOutlet;\n\n    constructor(\n        private _template: TemplateRef<any>,\n        private _componentFactoryResolver: ComponentFactoryResolver,\n        private _appRef: ApplicationRef,\n        private _injector: Injector,\n        private _viewContainerRef: ViewContainerRef,\n        @Inject(DOCUMENT) private _document: any) {}\n\n    /**\n     * Attaches the content with a particular context.\n     * @docs-private\n     */\n    attach(context: any = {}) {\n        if (!this._portal) {\n            this._portal = new TemplatePortal(this._template, this._viewContainerRef);\n        }\n\n        this.detach();\n\n        if (!this._outlet) {\n            this._outlet = new DomPortalOutlet(this._document.createElement('div'),\n                this._componentFactoryResolver, this._appRef, this._injector);\n        }\n\n        const element: HTMLElement = this._template.elementRef.nativeElement;\n\n        // Because we support opening the same dropdown from different triggers (which in turn have their\n        // own `OverlayRef` panel), we have to re-insert the host element every time, otherwise we\n        // risk it staying attached to a pane that's no longer in the DOM.\n        element.parentNode!.insertBefore(this._outlet.outletElement, element);\n        this._portal.attach(this._outlet, context);\n        this._attached.next();\n    }\n\n    /**\n     * Detaches the content.\n     * @docs-private\n     */\n    detach() {\n        if (this._portal.isAttached) {\n            this._portal.detach();\n        }\n    }\n\n    ngOnDestroy() {\n        if (this._outlet) {\n            this._outlet.dispose();\n        }\n    }\n}\n","import { EventEmitter, TemplateRef, InjectionToken } from '@angular/core';\nimport { FocusOrigin } from '@ptsecurity/cdk/a11y';\nimport { Direction } from '@ptsecurity/cdk/bidi';\n\nimport { McDropdownContent } from './dropdown-content';\nimport { DropdownPositionX, DropdownPositionY } from './dropdown-positions';\n\n\n/**\n * Injection token used to provide the parent dropdown to dropdown-specific components.\n * @docs-private\n */\nexport const MC_DROPDOWN_PANEL = new InjectionToken<McDropdownPanel>('MC_DROPDOWN_PANEL');\n\n/**\n * Interface for a custom dropdown panel that can be used with `mcDropdownTriggerFor`.\n * @docs-private\n */\n// tslint:disable-next-line:interface-name\nexport interface McDropdownPanel<T = any> {\n    xPosition: DropdownPositionX;\n    yPosition: DropdownPositionY;\n    overlapTrigger: boolean;\n    templateRef: TemplateRef<any>;\n    closed: EventEmitter<void | 'click' | 'keydown' | 'tab'>;\n    direction?: Direction;\n    lazyContent?: McDropdownContent;\n    backdropClass?: string;\n    hasBackdrop?: boolean;\n    focusFirstItem(origin?: FocusOrigin): void;\n    resetActiveItem(): void;\n    setPositionClasses?(x: DropdownPositionX, y: DropdownPositionY): void;\n    addItem?(item: T): void;\n    removeItem?(item: T): void;\n}\n","import { DOCUMENT } from '@angular/common';\nimport {\n    ChangeDetectionStrategy,\n    Component,\n    ElementRef,\n    OnDestroy,\n    ViewEncapsulation,\n    Inject,\n    Optional\n} from '@angular/core';\nimport { IFocusableOption, FocusMonitor, FocusOrigin } from '@ptsecurity/cdk/a11y';\nimport {\n    CanDisable, CanDisableCtor,\n    mixinDisabled\n} from '@ptsecurity/mosaic/core';\n\nimport { MC_DROPDOWN_PANEL, McDropdownPanel } from './dropdown-panel';\n\n\n// Boilerplate for applying mixins to McDropdownItem.\n/** @docs-private */\nexport class McDropdownItemBase {}\nexport const _McDropdownItemMixinBase: CanDisableCtor & typeof McDropdownItemBase =\n    mixinDisabled(McDropdownItemBase);\n\n/**\n * This directive is intended to be used inside an mc-dropdown tag.\n * It exists mostly to set the role attribute.\n */\n@Component({\n    selector: 'mc-dropdown-item, [mc-dropdown-item]',\n    exportAs: 'mcDropdownItem',\n    inputs: ['disabled'],\n    host: {\n        role: 'dropdown-item',\n        class: 'mc-dropdown__item',\n        '[attr.tabindex]': '_getTabIndex()',\n        '[attr.disabled]': 'disabled || null',\n        '(click)': '_checkDisabled($event)'\n    },\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n    template: `<ng-content></ng-content>`\n})\nexport class McDropdownItem extends _McDropdownItemMixinBase\n    implements IFocusableOption, CanDisable, OnDestroy {\n\n    private _document: Document;\n\n    constructor(\n        private _elementRef: ElementRef<HTMLElement>,\n        @Inject(DOCUMENT) document: any,\n        private _focusMonitor: FocusMonitor,\n        @Inject(MC_DROPDOWN_PANEL) @Optional() private _parentDropdownPanel?: McDropdownPanel<McDropdownItem>) {\n        super();\n\n        if (_focusMonitor) {\n            // Start monitoring the element so it gets the appropriate focused classes. We want\n            // to show the focus style for dropdown items only when the focus was not caused by a\n            // mouse or touch interaction.\n            _focusMonitor.monitor(this._elementRef.nativeElement, false);\n        }\n\n        if (_parentDropdownPanel && _parentDropdownPanel.addItem) {\n            _parentDropdownPanel.addItem(this);\n        }\n\n        this._document = document;\n    }\n\n    /** Focuses the dropdown item. */\n    focus(origin: FocusOrigin = 'program'): void {\n        if (this._focusMonitor) {\n            this._focusMonitor.focusVia(this._getHostElement(), origin);\n        } else {\n            this._getHostElement().focus();\n        }\n    }\n\n    ngOnDestroy() {\n        if (this._focusMonitor) {\n            this._focusMonitor.stopMonitoring(this._elementRef.nativeElement);\n        }\n\n        if (this._parentDropdownPanel && this._parentDropdownPanel.removeItem) {\n            this._parentDropdownPanel.removeItem(this);\n        }\n    }\n\n    /** Used to set the `tabindex`. */\n    _getTabIndex(): string {\n        return this.disabled ? '-1' : '0';\n    }\n\n    /** Returns the host DOM element. */\n    _getHostElement(): HTMLElement {\n        return this._elementRef.nativeElement;\n    }\n\n    /** Prevents the default element actions if it is disabled. */\n    _checkDisabled(event: Event): void {\n        if (this.disabled) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n    }\n\n    /** Gets the label to be used when determining whether the option should be focused. */\n    getLabel(): string {\n        const element: HTMLElement = this._elementRef.nativeElement;\n        // tslint:disable-next-line:no-magic-numbers\n        const textNodeType = this._document ? this._document.TEXT_NODE : 3;\n        let output = '';\n\n        if (element.childNodes) {\n            const length = element.childNodes.length;\n\n            // Go through all the top-level text nodes and extract their text.\n            // We skip anything that's not a text node to prevent the text from\n            // being thrown off by something like an icon.\n            for (let i = 0; i < length; i++) {\n                if (element.childNodes[i].nodeType === textNodeType) {\n                    output += element.childNodes[i].textContent;\n                }\n            }\n        }\n\n        return output.trim();\n    }\n}\n","import {\n    trigger,\n    state,\n    style,\n    animate,\n    transition,\n    query,\n    group,\n    AnimationTriggerMetadata\n} from '@angular/animations';\n\n\n/**\n * Animations used by the mc-dropdown component.\n * Animation duration and timing values are based on:\n * https://material.io/guidelines/components/menus.html#menus-usage\n * @docs-private\n */\nexport const mcDropdownAnimations: {\n    readonly transformDropdown: AnimationTriggerMetadata;\n    readonly fadeInItems: AnimationTriggerMetadata;\n} = {\n    /**\n     * This animation controls the dropdown panel's entry and exit from the page.\n     *\n     * When the dropdown panel is added to the DOM, it scales in and fades in its border.\n     *\n     * When the dropdown panel is removed from the DOM, it simply fades out after a brief\n     * delay to display the ripple.\n     */\n    transformDropdown: trigger('transformDropdown', [\n        state('void', style({\n            opacity: 0,\n            transform: 'scale(0.8)'\n        })),\n        transition('void => enter', group([\n            query('.mc-dropdown__content', animate('50ms linear', style({opacity: 1}))),\n            animate('50ms cubic-bezier(0, 0, 0.2, 1)', style({transform: 'scale(1)'}))\n        ])),\n        transition('* => void', animate('50ms 25ms linear', style({opacity: 0})))\n    ]),\n\n\n    /**\n     * This animation fades in the background color and content of the dropdown panel\n     * after its containing element is scaled in.\n     */\n    fadeInItems: trigger('fadeInItems', [\n        // now. Remove next time we do breaking changes.\n        state('showing', style({opacity: 1})),\n        transition('void => *', [\n            style({opacity: 0}),\n            animate('200ms 60ms cubic-bezier(0.55, 0, 0.55, 0.2)')\n        ])\n    ])\n};\n\nexport const fadeInItems = mcDropdownAnimations.fadeInItems;\n\nexport const transformDropdown = mcDropdownAnimations.transformDropdown;\n","import { AnimationEvent } from '@angular/animations';\nimport {\n    AfterContentInit,\n    ChangeDetectionStrategy,\n    Component,\n    ContentChild,\n    ContentChildren,\n    ElementRef,\n    EventEmitter,\n    Inject,\n    InjectionToken,\n    Input,\n    NgZone,\n    OnDestroy,\n    Output,\n    TemplateRef,\n    QueryList,\n    ViewChild,\n    ViewEncapsulation,\n    OnInit\n} from '@angular/core';\nimport { FocusKeyManager, FocusOrigin } from '@ptsecurity/cdk/a11y';\nimport { Direction } from '@ptsecurity/cdk/bidi';\nimport { coerceBooleanProperty } from '@ptsecurity/cdk/coercion';\nimport { ESCAPE, DOWN_ARROW, UP_ARROW } from '@ptsecurity/cdk/keycodes';\nimport { Subject, Subscription } from 'rxjs';\nimport { take } from 'rxjs/operators';\n\nimport { mcDropdownAnimations } from './dropdown-animations';\nimport { McDropdownContent } from './dropdown-content';\nimport { throwMcDropdownInvalidPositionX, throwMcDropdownInvalidPositionY } from './dropdown-errors';\nimport { McDropdownItem } from './dropdown-item';\nimport { MC_DROPDOWN_PANEL, McDropdownPanel } from './dropdown-panel';\nimport { DropdownPositionX, DropdownPositionY } from './dropdown-positions';\n\n\n/** Default `mc-dropdown` options that can be overridden. */\n// tslint:disable-next-line:interface-name\nexport interface McDropdownDefaultOptions {\n    /** The x-axis position of the dropdown. */\n    xPosition: DropdownPositionX;\n\n    /** The y-axis position of the dropdown. */\n    yPosition: DropdownPositionY;\n\n    /** Whether the dropdown should overlap the dropdown trigger. */\n    overlapTrigger: boolean;\n\n    /** Class to be applied to the dropdown's backdrop. */\n    backdropClass: string;\n\n    /** Whether the dropdown has a backdrop. */\n    hasBackdrop?: boolean;\n}\n\n/** Injection token to be used to override the default options for `mc-dropdown`. */\nexport const MC_DROPDOWN_DEFAULT_OPTIONS =\n    new InjectionToken<McDropdownDefaultOptions>('mc-dropdown-default-options', {\n        providedIn: 'root',\n        factory: MC_DROPDOWN_DEFAULT_OPTIONS_FACTORY\n    });\n\n/** @docs-private */\nexport function MC_DROPDOWN_DEFAULT_OPTIONS_FACTORY(): McDropdownDefaultOptions {\n    return {\n        overlapTrigger: false,\n        xPosition: 'after',\n        yPosition: 'below',\n        backdropClass: 'cdk-overlay-transparent-backdrop'\n    };\n}\n\n@Component({\n    selector: 'mc-dropdown',\n    templateUrl: 'dropdown.html',\n    styleUrls: ['dropdown.css'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n    exportAs: 'mcDropdown',\n    animations: [\n        mcDropdownAnimations.transformDropdown,\n        mcDropdownAnimations.fadeInItems\n    ],\n    providers: [\n        { provide: MC_DROPDOWN_PANEL, useExisting: McDropdown }\n    ]\n})\nexport class McDropdown implements AfterContentInit, McDropdownPanel<McDropdownItem>, OnInit, OnDestroy {\n\n    /** Position of the dropdown in the X axis. */\n    @Input()\n    get xPosition(): DropdownPositionX { return this._xPosition; }\n    set xPosition(value: DropdownPositionX) {\n        if (value !== 'before' && value !== 'after') {\n            throwMcDropdownInvalidPositionX();\n        }\n\n        this._xPosition = value;\n        this.setPositionClasses();\n    }\n\n    /** Position of the dropdown in the Y axis. */\n    @Input()\n    get yPosition(): DropdownPositionY { return this._yPosition; }\n    set yPosition(value: DropdownPositionY) {\n        if (value !== 'above' && value !== 'below') {\n            throwMcDropdownInvalidPositionY();\n        }\n\n        this._yPosition = value;\n        this.setPositionClasses();\n    }\n\n    /** Whether the dropdown should overlap its trigger. */\n    @Input()\n    get overlapTrigger(): boolean { return this._overlapTrigger; }\n    set overlapTrigger(value: boolean) {\n        this._overlapTrigger = coerceBooleanProperty(value);\n    }\n\n    /** Whether the dropdown has a backdrop. */\n    @Input()\n    get hasBackdrop(): boolean | undefined { return this._hasBackdrop; }\n    set hasBackdrop(value: boolean | undefined) {\n        this._hasBackdrop = coerceBooleanProperty(value);\n    }\n\n    /**\n     * This method takes classes set on the host mc-dropdown element and applies them on the\n     * dropdown template that displays in the overlay container.  Otherwise, it's difficult\n     * to style the containing dropdown from outside the component.\n     * @param classes list of class names\n     */\n    @Input('class')\n    set panelClass(classes: string) {\n        if (classes && classes.length) {\n            this._classList = classes.split(' ').reduce((obj: any, className: string) => {\n                obj[className] = true;\n\n                return obj;\n            }, {});\n\n            this._elementRef.nativeElement.className = '';\n        }\n    }\n\n    /** Config object to be passed into the dropdown's ngClass */\n    _classList: {[key: string]: boolean} = {};\n\n    /** Current state of the panel animation. */\n    _panelAnimationState: 'void' | 'enter' = 'void';\n\n    /** Emits whenever an animation on the dropdown completes. */\n    _animationDone = new Subject<AnimationEvent>();\n\n    /** Whether the dropdown is animating. */\n    _isAnimating: boolean;\n\n    /** Layout direction of the dropdown. */\n    direction: Direction;\n\n    /** Class to be added to the backdrop element. */\n    @Input() backdropClass: string = this._defaultOptions.backdropClass;\n\n    /** @docs-private */\n    @ViewChild(TemplateRef) templateRef: TemplateRef<any>;\n\n    /**\n     * List of the items inside of a dropdown.\n     */\n    @ContentChildren(McDropdownItem) items: QueryList<McDropdownItem>;\n\n    /**\n     * Dropdown content that will be rendered lazily.\n     * @docs-private\n     */\n    @ContentChild(McDropdownContent) lazyContent: McDropdownContent;\n\n    /** Event emitted when the dropdown is closed. */\n    @Output() readonly closed: EventEmitter<void | 'click' | 'keydown' | 'tab'> =\n        new EventEmitter<void | 'click' | 'keydown' | 'tab'>();\n\n    private _keyManager: FocusKeyManager<McDropdownItem>;\n    private _xPosition: DropdownPositionX = this._defaultOptions.xPosition;\n    private _yPosition: DropdownPositionY = this._defaultOptions.yPosition;\n\n    /** Dropdown items inside the current dropdown. */\n    private _items: McDropdownItem[] = [];\n\n    /** Emits whenever the amount of dropdown items changes. */\n    private _itemChanges = new Subject<McDropdownItem[]>();\n\n    /** Subscription to tab events on the dropdown panel */\n    private _tabSubscription = Subscription.EMPTY;\n    private _overlapTrigger: boolean = this._defaultOptions.overlapTrigger;\n    private _hasBackdrop: boolean | undefined = this._defaultOptions.hasBackdrop;\n\n    constructor(\n        private _elementRef: ElementRef<HTMLElement>,\n        private _ngZone: NgZone,\n        @Inject(MC_DROPDOWN_DEFAULT_OPTIONS) private _defaultOptions: McDropdownDefaultOptions) { }\n\n    ngOnInit() {\n        this.setPositionClasses();\n    }\n\n    ngAfterContentInit() {\n        this._keyManager = new FocusKeyManager<McDropdownItem>(this.items).withWrap().withTypeAhead();\n        this._tabSubscription = this._keyManager.tabOut.subscribe(() => this.closed.emit('tab'));\n    }\n\n    ngOnDestroy() {\n        this._tabSubscription.unsubscribe();\n        this.closed.complete();\n    }\n\n    /** Handle a keyboard event from the dropdown, delegating to the appropriate action. */\n    _handleKeydown(event: KeyboardEvent) {\n\n        // tslint:disable-next-line:deprecation\n        switch (event.keyCode) {\n            case ESCAPE:\n                this.closed.emit('keydown');\n                break;\n            case UP_ARROW:\n            case DOWN_ARROW:\n                this._keyManager.setFocusOrigin('keyboard');\n                this._keyManager.onKeydown(event);\n                break;\n            default:\n                // todo зачем обрабатывать лишние события ?\n                this._keyManager.onKeydown(event);\n        }\n    }\n\n    /**\n     * Focus the first item in the dropdown.\n     * @param origin Action from which the focus originated. Used to set the correct styling.\n     */\n    focusFirstItem(origin: FocusOrigin = 'program'): void {\n        // When the content is rendered lazily, it takes a bit before the items are inside the DOM.\n        if (this.lazyContent) {\n            this._ngZone.onStable.asObservable()\n                .pipe(take(1))\n                .subscribe(() => this._keyManager.setFocusOrigin(origin).setFirstItemActive());\n        } else {\n            this._keyManager.setFocusOrigin(origin).setFirstItemActive();\n        }\n    }\n\n    /**\n     * Resets the active item in the dropdown. This is used when the dropdown is opened, allowing\n     * the user to start from the first option when pressing the down arrow.\n     */\n    resetActiveItem() {\n        this._keyManager.setActiveItem(-1);\n    }\n\n    /**\n     * Registers a dropdown item with the dropdown.\n     * @docs-private\n     */\n    addItem(item: McDropdownItem) {\n        // We register the items through this method, rather than picking them up through\n        // `ContentChildren`, because we need the items to be picked up by their closest\n        // `mc-dropdown` ancestor. If we used `@ContentChildren(McDropdownItem, {descendants: true})`,\n        // all descendant items will bleed into the top-level dropdown in the case where the consumer\n        // has `mc-dropdown` instances nested inside each other.\n        if (this._items.indexOf(item) === -1) {\n            this._items.push(item);\n            this._itemChanges.next(this._items);\n        }\n    }\n\n    /**\n     * Removes an item from the dropdown.\n     * @docs-private\n     */\n    removeItem(item: McDropdownItem) {\n        const index = this._items.indexOf(item);\n\n        if (this._items.indexOf(item) > -1) {\n            this._items.splice(index, 1);\n            this._itemChanges.next(this._items);\n        }\n    }\n\n    /**\n     * Adds classes to the dropdown panel based on its position. Can be used by\n     * consumers to add specific styling based on the position.\n     * @param posX Position of the dropdown along the x axis.\n     * @param posY Position of the dropdown along the y axis.\n     * @docs-private\n     */\n    setPositionClasses(posX: DropdownPositionX = this.xPosition, posY: DropdownPositionY = this.yPosition) {\n        const classes = this._classList;\n        classes['mc-dropdown-before'] = posX === 'before';\n        classes['mc-dropdown-after'] = posX === 'after';\n        classes['mc-dropdown-above'] = posY === 'above';\n        classes['mc-dropdown-below'] = posY === 'below';\n    }\n\n    /** Starts the enter animation. */\n    _startAnimation() {\n        this._panelAnimationState = 'enter';\n    }\n\n    /** Resets the panel animation to its initial state. */\n    _resetAnimation() {\n        this._panelAnimationState = 'void';\n    }\n\n    /** Callback that is invoked when the panel animation completes. */\n    _onAnimationDone(event: AnimationEvent) {\n        this._animationDone.next(event);\n        this._isAnimating = false;\n\n        // Scroll the content element to the top once the animation is done. This is necessary, because\n        // we move focus to the first item while it's still being animated, which can throw the browser\n        // off when it determines the scroll position. Alternatively we can move focus when the\n        // animation is done, however moving focus asynchronously will interrupt screen readers\n        // which are in the process of reading out the dropdown already. We take the `element` from\n        // the `event` since we can't use a `ViewChild` to access the pane.\n        if (event.toState === 'enter' && this._keyManager.activeItemIndex === 0) {\n            event.element.scrollTop = 0;\n        }\n    }\n}\n","import {\n    AfterContentInit,\n    Directive,\n    ElementRef,\n    EventEmitter,\n    Inject,\n    InjectionToken,\n    Input,\n    OnDestroy, OnInit,\n    Optional,\n    Output,\n    ViewContainerRef\n} from '@angular/core';\nimport { FocusMonitor, FocusOrigin } from '@ptsecurity/cdk/a11y';\nimport { Direction, Directionality } from '@ptsecurity/cdk/bidi';\nimport {\n    FlexibleConnectedPositionStrategy,\n    HorizontalConnectionPos,\n    Overlay,\n    OverlayConfig,\n    OverlayRef,\n    VerticalConnectionPos,\n    IScrollStrategy\n} from '@ptsecurity/cdk/overlay';\nimport { TemplatePortal } from '@ptsecurity/cdk/portal';\nimport { merge, Subscription } from 'rxjs';\nimport { filter, take, takeUntil } from 'rxjs/operators';\n\nimport { throwMcDropdownMissingError } from './dropdown-errors';\nimport { McDropdownPanel } from './dropdown-panel';\nimport { McDropdown } from './dropdown.component';\n\n\n/** Injection token that determines the scroll handling while the dropdown is open. */\nexport const MC_DROPDOWN_SCROLL_STRATEGY =\n    new InjectionToken<() => IScrollStrategy>('mc-dropdown-scroll-strategy');\n\n/** @docs-private */\nexport function MC_DROPDOWN_SCROLL_STRATEGY_FACTORY(overlay: Overlay): () => IScrollStrategy {\n    return () => overlay.scrollStrategies.reposition();\n}\n\n/** @docs-private */\nexport const MC_DROPDOWN_SCROLL_STRATEGY_FACTORY_PROVIDER = {\n    provide: MC_DROPDOWN_SCROLL_STRATEGY,\n    deps: [Overlay],\n    useFactory: MC_DROPDOWN_SCROLL_STRATEGY_FACTORY\n};\n\n/**\n * This directive is intended to be used in conjunction with an mc-dropdown tag.  It is\n * responsible for toggling the display of the provided dropdown instance.\n */\n@Directive({\n    selector: `[mcDropdownTriggerFor]`,\n    host: {\n        '(touchstart)': '_openedBy = \"touch\"',\n        '(click)': 'toggle()'\n    },\n    exportAs: 'mcDropdownTrigger'\n})\nexport class McDropdownTrigger implements OnInit, AfterContentInit, OnDestroy {\n\n    /** Whether the dropdown is open. */\n    get opened(): boolean {\n        return this._opened;\n    }\n\n    /** The text direction of the containing app. */\n    get dir(): Direction {\n        return this._dir && this._dir.value === 'rtl' ? 'rtl' : 'ltr';\n    }\n\n    // Tracking input type is necessary so it's possible to only auto-focus\n    // the first item of the list when the dropdown is opened via the keyboard\n    _openedBy: 'mouse' | 'touch' | null = null;\n\n    /** References the dropdown instance that the trigger is associated with. */\n    @Input('mcDropdownTriggerFor') dropdown: McDropdownPanel;\n\n    /** Data to be passed along to any lazily-rendered content. */\n    @Input('mcDropdownTriggerData') data: any;\n\n    /** Event emitted when the associated dropdown is opened. */\n    @Output() readonly dropdownOpened: EventEmitter<void> = new EventEmitter<void>();\n\n    /** Event emitted when the associated dropdown is closed. */\n    @Output() readonly dropdownClosed: EventEmitter<void> = new EventEmitter<void>();\n\n    private _portal: TemplatePortal;\n    private _overlayRef: OverlayRef | null = null;\n    private _opened: boolean = false;\n    private _closeSubscription = Subscription.EMPTY;\n    private _hoverSubscription = Subscription.EMPTY;\n\n    constructor(private _overlay: Overlay,\n                private _element: ElementRef<HTMLElement>,\n                private _viewContainerRef: ViewContainerRef,\n                @Inject(MC_DROPDOWN_SCROLL_STRATEGY) private _scrollStrategy: any,\n                @Optional() private _dir: Directionality,\n                private _focusMonitor?: FocusMonitor) {}\n\n    ngOnInit(): void {\n        this.dropdown.closed = this.dropdown.closed || new EventEmitter<void | 'click' | 'keydown' | 'tab'>();\n    }\n\n    ngAfterContentInit() {\n        this._check();\n\n        this.dropdown.closed.asObservable().subscribe(() => {\n            this._destroy();\n        });\n    }\n\n    ngOnDestroy() {\n        if (this._overlayRef) {\n            this._overlayRef.dispose();\n            this._overlayRef = null;\n        }\n\n        this._cleanUpSubscriptions();\n    }\n\n    /** Toggles the dropdown between the open and closed states. */\n    toggle(): void {\n        // tslint:disable-next-line:no-void-expression\n        return this._opened ? this.close() : this.open();\n    }\n\n    /** Opens the dropdown. */\n    open(): void {\n        if (this._opened) {\n            return;\n        }\n\n        this._check();\n\n        const overlayRef = this._createOverlay();\n        this._setPosition(overlayRef.getConfig().positionStrategy as FlexibleConnectedPositionStrategy);\n        overlayRef.attach(this._portal);\n\n        if (this.dropdown.lazyContent) {\n            this.dropdown.lazyContent.attach(this.data);\n        }\n\n        this._closeSubscription = this._closingActions().subscribe(() => this.close());\n        this._init();\n\n        if (this.dropdown instanceof McDropdown) {\n            this.dropdown._startAnimation();\n        }\n    }\n\n    /** Closes the dropdown. */\n    close(): void {\n        this.dropdown.closed.emit();\n    }\n\n    /**\n     * Focuses the dropdown trigger.\n     * @param origin Source of the dropdown trigger's focus.\n     */\n    focus(origin: FocusOrigin = 'program') {\n        if (this._focusMonitor) {\n            this._focusMonitor.focusVia(this._element.nativeElement, origin);\n        } else {\n            this._element.nativeElement.focus();\n        }\n    }\n\n    /** Closes the dropdown and does the necessary cleanup. */\n    private _destroy() {\n        if (!this._overlayRef || !this.opened) {\n            return;\n        }\n\n        const dropdown = this.dropdown;\n\n        this._closeSubscription.unsubscribe();\n        this._overlayRef.detach();\n\n        if (dropdown instanceof McDropdown) {\n            dropdown._resetAnimation();\n\n            if (dropdown.lazyContent) {\n                // Wait for the exit animation to finish before detaching the content.\n                dropdown._animationDone\n                    .pipe(\n                        filter((event) => event.toState === 'void'),\n                        take(1),\n                        // Interrupt if the content got re-attached.\n                        takeUntil(dropdown.lazyContent._attached)\n                    )\n                    .subscribe(() => dropdown.lazyContent.detach(), undefined, () => {\n                        // No matter whether the content got re-attached, reset the dropdown.\n                        this._reset();\n                    });\n            } else {\n                this._reset();\n            }\n        } else {\n            this._reset();\n\n            if (dropdown.lazyContent) {\n                dropdown.lazyContent.detach();\n            }\n        }\n    }\n\n    /**\n     * This method sets the dropdown state to open and focuses the first item if\n     * the dropdown was opened via the keyboard.\n     */\n    private _init(): void {\n        this.dropdown.direction = this.dir;\n        this._setIsOpened(true);\n        this.dropdown.focusFirstItem(this._openedBy || 'program');\n    }\n\n    /**\n     * This method resets the dropdown when it's closed, most importantly restoring\n     * focus to the dropdown trigger if the dropdown was opened via the keyboard.\n     */\n    private _reset(): void {\n        this._setIsOpened(false);\n\n        // We should reset focus if the user is navigating using a keyboard or\n        // if we have a top-level trigger which might cause focus to be lost\n        // when clicking on the backdrop.\n        if (!this._openedBy) {\n            // Note that the focus style will show up both for `program` and\n            // `keyboard` so we don't have to specify which one it is.\n            this.focus();\n        } else {\n            this.focus(this._openedBy);\n        }\n\n        this._openedBy = null;\n    }\n\n    // set state rather than toggle to support triggers sharing a dropdown\n    private _setIsOpened(isOpen: boolean): void {\n        this._opened = isOpen;\n        // tslint:disable-next-line:no-void-expression\n        this._opened ? this.dropdownOpened.emit() : this.dropdownClosed.emit();\n    }\n\n    /**\n     * This method checks that a valid instance of Dropdown has been passed into\n     * mcDropdownTriggerFor. If not, an exception is thrown.\n     */\n    private _check() {\n        if (!this.dropdown) {\n            throwMcDropdownMissingError();\n        }\n    }\n\n    /**\n     * This method creates the overlay from the provided dropdown's template and saves its\n     * OverlayRef so that it can be attached to the DOM when open is called.\n     */\n    private _createOverlay(): OverlayRef {\n        if (!this._overlayRef) {\n            this._portal = new TemplatePortal(this.dropdown.templateRef, this._viewContainerRef);\n            const config = this._getOverlayConfig();\n            this._subscribeToPositions(config.positionStrategy as FlexibleConnectedPositionStrategy);\n            this._overlayRef = this._overlay.create(config);\n\n            // Consume the `keydownEvents` in order to prevent them from going to another overlay.\n            // Ideally we'd also have our keyboard event logic in here, however doing so will\n            // break anybody that may have implemented the `McDropdownPanel` themselves.\n            this._overlayRef.keydownEvents().subscribe();\n        }\n\n        return this._overlayRef;\n    }\n\n    /**\n     * This method builds the configuration object needed to create the overlay, the OverlayState.\n     * @returns OverlayConfig\n     */\n    private _getOverlayConfig(): OverlayConfig {\n        return new OverlayConfig({\n            positionStrategy: this._overlay.position()\n                .flexibleConnectedTo(this._element)\n                .withLockedPosition()\n                .withTransformOriginOn('.mc-dropdown__panel'),\n            hasBackdrop: this.dropdown.hasBackdrop === null || this.dropdown.hasBackdrop === undefined\n                ? true\n                : this.dropdown.hasBackdrop,\n            backdropClass: this.dropdown.backdropClass || 'cdk-overlay-transparent-backdrop',\n            scrollStrategy: this._scrollStrategy(),\n            direction: this._dir\n        });\n    }\n\n    /**\n     * Listens to changes in the position of the overlay and sets the correct classes\n     * on the dropdown based on the new position. This ensures the animation origin is always\n     * correct, even if a fallback position is used for the overlay.\n     */\n    private _subscribeToPositions(position: FlexibleConnectedPositionStrategy): void {\n        if (this.dropdown.setPositionClasses) {\n            // todo possibly we should not recompute positions there\n            /*position.positionChanges.subscribe((change) => {\n                const posX: DropdownPositionX = change.connectionPair.overlayX === 'start' ? 'after' : 'before';\n                const posY: DropdownPositionY = change.connectionPair.overlayY === 'top' ? 'below' : 'above';\n\n                this.dropdown.setPositionClasses!(posX, posY);\n            });*/\n            position.positionChanges.subscribe(() => {\n                this.dropdown.setPositionClasses!(this.dropdown.xPosition, this.dropdown.yPosition);\n            });\n        }\n    }\n\n    /**\n     * Sets the appropriate positions on a position strategy\n     * so the overlay connects with the trigger correctly.\n     * @param positionStrategy Strategy whose position to update.\n     */\n    private _setPosition(positionStrategy: FlexibleConnectedPositionStrategy) {\n        const [originX, originFallbackX]: HorizontalConnectionPos[] =\n            this.dropdown.xPosition === 'before' ? ['end', 'start'] : ['start', 'end'];\n\n        const [overlayY, overlayFallbackY]: VerticalConnectionPos[] =\n            this.dropdown.yPosition === 'above' ? ['bottom', 'top'] : ['top', 'bottom'];\n\n        let [originY, originFallbackY] = [overlayY, overlayFallbackY];\n        const [overlayX, overlayFallbackX] = [originX, originFallbackX];\n        const offsetY = 0;\n\n        if (!this.dropdown.overlapTrigger) {\n            originY = overlayY === 'top' ? 'bottom' : 'top';\n            originFallbackY = overlayFallbackY === 'top' ? 'bottom' : 'top';\n        }\n\n        positionStrategy.withPositions([\n            {originX, originY, overlayX, overlayY, offsetY},\n            {originX: originFallbackX, originY, overlayX: overlayFallbackX, overlayY, offsetY},\n            {\n                originX,\n                originY: originFallbackY,\n                overlayX,\n                overlayY: overlayFallbackY,\n                offsetY: -offsetY\n            },\n            {\n                originX: originFallbackX,\n                originY: originFallbackY,\n                overlayX: overlayFallbackX,\n                overlayY: overlayFallbackY,\n                offsetY: -offsetY\n            }\n        ]);\n    }\n\n    /** Cleans up the active subscriptions. */\n    private _cleanUpSubscriptions(): void {\n        this._closeSubscription.unsubscribe();\n        this._hoverSubscription.unsubscribe();\n    }\n\n    /** Returns a stream that emits whenever an action that should close the dropdown occurs. */\n    private _closingActions() {\n        const backdrop = this._overlayRef!.backdropClick();\n        const detachments = this._overlayRef!.detachments();\n\n        return merge(backdrop, detachments);\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { OverlayModule } from '@ptsecurity/cdk/overlay';\n\nimport { McDropdownContent } from './dropdown-content';\nimport { McDropdownItem } from './dropdown-item';\nimport { MC_DROPDOWN_SCROLL_STRATEGY_FACTORY_PROVIDER, McDropdownTrigger } from './dropdown-trigger';\nimport { McDropdown } from './dropdown.component';\n\n\n@NgModule({\n    imports: [\n        CommonModule,\n        OverlayModule\n    ],\n    exports: [McDropdown, McDropdownItem, McDropdownTrigger, McDropdownContent],\n    declarations: [McDropdown, McDropdownItem, McDropdownTrigger, McDropdownContent],\n    providers: [MC_DROPDOWN_SCROLL_STRATEGY_FACTORY_PROVIDER]\n})\nexport class McDropdownModule {}\n","import { Component } from '@angular/core';\n\n\n@Component({\n    selector: 'mc-cleaner',\n    template: '<i class=\"mc-icon_light\" mc-icon=\"mc-close-M_16\" color=\"second\"></i>'\n})\nexport class McCleaner {}\n","import { NgControl } from '@angular/forms';\nimport { Observable } from 'rxjs';\n\n\n/** An interface which allows a control to work inside of a `MсFormField`. */\nexport abstract class McFormFieldControl<T> {\n    /** The value of the control. */\n    value: T | null;\n\n    /**\n     * Stream that emits whenever the state of the control changes such that the parent `MсFormField`\n     * needs to run change detection.\n     */\n    readonly stateChanges: Observable<void>;\n\n    /** The element ID for this control. */\n    readonly id: string;\n\n    /** The placeholder for this control. */\n    readonly placeholder: string;\n\n    /** Gets the NgControl for this control. */\n    readonly ngControl: NgControl | null;\n\n    /** Whether the control is focused. */\n    readonly focused: boolean;\n\n    /** Whether the control is empty. */\n    readonly empty: boolean;\n\n    /** Whether the control is required. */\n    readonly required: boolean;\n\n    /** Whether the control is disabled. */\n    readonly disabled: boolean;\n\n    /** Whether the control is in an error state. */\n    readonly errorState: boolean;\n\n    /**\n     * An optional name for the control type that can be used to distinguish `mc-form-field` elements\n     * based on their control type. The form field will add a class,\n     * `mc-form-field-type-{{controlType}}` to its root element.\n     */\n    readonly controlType?: string;\n\n    /** Handles a click on the control's container. */\n    abstract onContainerClick(event: MouseEvent): void;\n}\n","import { Observable } from 'rxjs';\n\n\n/** An interface which allows a control to work inside of a `MсFormField`. */\nexport abstract class McFormFieldNumberControl<T> {\n    /** The value of the control. */\n    value: T | null;\n\n    /**\n     * Stream that emits whenever the state of the control changes such that the parent `MсFormField`\n     * needs to run change detection.\n     */\n    readonly stateChanges: Observable<void>;\n\n    /** the number step */\n    step: number;\n\n    /** the number big step */\n    bigStep: number;\n\n    /** Whether the control is focused. */\n    readonly focused: boolean;\n\n    /** Handles step up and down */\n    abstract stepUp(step: number): void;\n\n    abstract stepDown(step: number): void;\n}\n","import { Directive, Input } from '@angular/core';\n\n\nlet nextUniqueId = 0;\n\n@Directive({\n    selector: 'mc-hint',\n    host: {\n        class: 'mc-hint',\n        '[attr.id]': 'id'\n    }\n})\nexport class McHint {\n    @Input() id: string = `mc-hint-${nextUniqueId++}`;\n}\n","import { Directive } from '@angular/core';\n\n\n@Directive({\n    selector: '[mcPrefix]'\n})\nexport class McPrefix {\n}\n","import { Component, EventEmitter, Output } from '@angular/core';\n\n\n@Component({\n    selector: 'mc-stepper',\n    template: `\n        <i class=\"mc mc-icon mc-icon_light mc-second mc-stepper-step-up mc-angle-L_16\"\n           (mousedown)=\"onStepUp($event)\">\n        </i>\n        <i class=\"mc mc-icon mc-icon_light mc-second mc-stepper-step-down mc-angle-L_16\"\n           (mousedown)=\"onStepDown($event)\">\n        </i>\n    `\n})\nexport class McStepper {\n    @Output()\n    readonly stepUp: EventEmitter<void> = new EventEmitter<void>();\n    @Output()\n    readonly stepDown: EventEmitter<void> = new EventEmitter<void>();\n\n    onStepUp($event: MouseEvent) {\n        this.stepUp.emit();\n        $event.preventDefault();\n    }\n\n    onStepDown($event: MouseEvent) {\n        this.stepDown.emit();\n        $event.preventDefault();\n    }\n}\n","import { Directive } from '@angular/core';\n\n\n@Directive({\n    selector: '[mcSuffix]'\n})\nexport class McSuffix {\n}\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","\nexport function isBoolean(val: any): val is boolean { return typeof val === 'boolean'; }\n\nexport function toBoolean(value: any): boolean {\n    return value != null && `${value}` !== 'false';\n}\n","import { NgModule, InjectionToken, Optional, Inject, isDevMode } from '@angular/core';\nimport { BidiModule } from '@ptsecurity/cdk/bidi';\n\n\n// Injection token that configures whether the Mosaic sanity checks are enabled.\nexport const MC_SANITY_CHECKS = new InjectionToken<boolean>('mc-sanity-checks', {\n    providedIn: 'root',\n    factory: MC_SANITY_CHECKS_FACTORY\n});\n\nexport function MC_SANITY_CHECKS_FACTORY(): boolean {\n    return true;\n}\n\n/**\n * Module that captures anything that should be loaded and/or run for *all* Mosaic\n * components. This includes Bidi, etc.\n *\n * This module should be imported to each top-level component module (e.g., McTabsModule).\n */\n@NgModule({\n    imports: [ BidiModule ],\n    exports: [ BidiModule ]\n})\nexport class McCommonModule {\n    // Whether we've done the global sanity checks (e.g. a theme is loaded, there is a doctype).\n    private _hasDoneGlobalChecks = false;\n\n    // Reference to the global `document` object.\n    private _document = typeof document === 'object' && document ? document : null;\n\n    // Reference to the global 'window' object.\n    private _window = typeof window === 'object' && window ? window : null;\n\n    constructor(@Optional() @Inject(MC_SANITY_CHECKS) private _sanityChecksEnabled: boolean) {\n        if (this._areChecksEnabled() && !this._hasDoneGlobalChecks) {\n            this._checkDoctypeIsDefined();\n            this._checkThemeIsPresent();\n            this._hasDoneGlobalChecks = true;\n        }\n    }\n\n    // Whether any sanity checks are enabled\n    private _areChecksEnabled(): boolean {\n        return this._sanityChecksEnabled && isDevMode() && !this._isTestEnv();\n    }\n\n    // Whether the code is running in tests.\n    private _isTestEnv() {\n        // tslint:disable-next-line\n        return this._window && (this._window['__karma__'] || this._window['jasmine']);\n    }\n\n    private _checkDoctypeIsDefined(): void {\n        if (this._document && !this._document.doctype) {\n            console.warn(\n                'Current document does not have a doctype. This may cause ' +\n                'some Mosaic components not to behave as expected.'\n            );\n        }\n    }\n\n    private _checkThemeIsPresent(): void {\n        if (this._document && typeof getComputedStyle === 'function') {\n            const testElement = this._document.createElement('div');\n\n            testElement.classList.add('mc-theme-loaded-marker');\n            this._document.body.appendChild(testElement);\n\n            const computedStyle = getComputedStyle(testElement);\n\n            // In some situations, the computed style of the test element can be null. For example in\n            // Firefox, the computed style is null if an application is running inside of a hidden iframe.\n            // See: https://bugzilla.mozilla.org/show_bug.cgi?id=548397\n            if (computedStyle && computedStyle.display !== 'none') {\n                console.warn(\n                    'Could not find Mosaic core theme. Most Mosaic ' +\n                    'components may not work as expected. For more info refer ' +\n                    'to the theming guide: link there'\n                );\n            }\n\n            this._document.body.removeChild(testElement);\n        }\n    }\n}\n","import { coerceBooleanProperty } from '@ptsecurity/cdk/coercion';\n\nimport { Constructor } from './constructor';\n\n\nexport interface CanDisable {\n    disabled: boolean;\n}\n\n/** @docs-private */\nexport type CanDisableCtor = Constructor<CanDisable>;\n\n// Mixin to augment a directive with a `disabled` property.\nexport function mixinDisabled<T extends Constructor<{}>>(base: T): CanDisableCtor & T {\n    return class extends base {\n        private _disabled: boolean = false;\n\n        get disabled() {\n            return this._disabled;\n        }\n\n        set disabled(value: any) {\n            this._disabled = coerceBooleanProperty(value);\n        }\n\n        constructor(...args: any[]) {\n            // tslint:disable-next-line\n            super(...args);\n        }\n    };\n}\n","import { ElementRef } from '@angular/core';\n\nimport { Constructor } from './constructor';\n\n\nexport interface CanColor {\n    color: ThemePalette;\n}\n\n/** @docs-private */\nexport type CanColorCtor = Constructor<CanColor>;\n\nexport interface HasElementRef {\n    _elementRef: ElementRef;\n}\n\nexport enum ThemePalette {\n    Primary = 'primary',\n    Second = 'second',\n    Error = 'error',\n    Default = 'second',\n    Empty = ''\n}\n\n/** Mixin to augment a directive with a `color` property. */\nexport function mixinColor<T extends Constructor<HasElementRef>>(\n    base: T,\n    defaultColor: ThemePalette = ThemePalette.Default\n): CanColorCtor & T {\n    return class extends base {\n\n        private _color: ThemePalette;\n\n        get color(): ThemePalette {\n            return this._color;\n        }\n\n        set color(value: ThemePalette) {\n            const colorPalette = value || defaultColor;\n\n            if (colorPalette !== this._color) {\n                if (this._color) {\n                    this._elementRef.nativeElement.classList.remove(`mc-${this._color}`);\n                }\n\n                if (colorPalette) {\n                    this._elementRef.nativeElement.classList.add(`mc-${colorPalette}`);\n                }\n\n                this._color = colorPalette;\n            }\n        }\n\n        constructor(...args: any[]) {\n            super(...args);\n\n            this.color = defaultColor;\n        }\n    };\n}\n\n","import { Constructor } from './constructor';\nimport { CanDisable } from './disabled';\n\n\nexport interface HasTabIndex {\n    tabIndex: number;\n}\n\nexport type HasTabIndexCtor = Constructor<HasTabIndex>;\n\n// Mixin to augment a directive with a `tabIndex` property.\nexport function mixinTabIndex<T extends Constructor<CanDisable>>(base: T, defaultTabIndex = 0)\n    : HasTabIndexCtor & T {\n    return class extends base {\n        private _tabIndex: number = defaultTabIndex;\n\n        get tabIndex(): number {\n            return this.disabled ? -1 : this._tabIndex;\n        }\n\n        set tabIndex(value: number) {\n            this._tabIndex = value != null ? value : defaultTabIndex;\n        }\n\n        constructor(...args: any[]) {\n            super(...args);\n        }\n    };\n}\n","import { FormControl, FormGroupDirective, NgControl, NgForm } from '@angular/forms';\nimport { Subject } from 'rxjs';\n\nimport { ErrorStateMatcher } from '../error/error-options';\n\nimport { Constructor } from './constructor';\n\n\n/** @docs-private */\nexport interface CanUpdateErrorState {\n\n    readonly stateChanges: Subject<void>;\n\n    errorState: boolean;\n    errorStateMatcher: ErrorStateMatcher;\n\n    updateErrorState();\n}\n\n/** @docs-private */\nexport type CanUpdateErrorStateCtor = Constructor<CanUpdateErrorState>;\n\n/** @docs-private */\nexport interface HasErrorState {\n    _parentFormGroup: FormGroupDirective;\n    _parentForm: NgForm;\n    _defaultErrorStateMatcher: ErrorStateMatcher;\n    ngControl: NgControl;\n}\n\n/**\n * Mixin to augment a directive with updateErrorState method.\n * For component with `errorState` and need to update `errorState`.\n */\nexport function mixinErrorState<T extends Constructor<HasErrorState>>(base: T): CanUpdateErrorStateCtor & T {\n    return class extends base {\n        /** Whether the component is in an error state. */\n        errorState: boolean = false;\n\n        /**\n         * Stream that emits whenever the state of the input changes such that the wrapping\n         * `MatFormField` needs to run change detection.\n         */\n        readonly stateChanges = new Subject<void>();\n\n        errorStateMatcher: ErrorStateMatcher;\n\n        constructor(...args: any[]) {\n            super(...args);\n        }\n\n        updateErrorState() {\n            const oldState = this.errorState;\n            const parent = this._parentFormGroup || this._parentForm;\n            const matcher = this.errorStateMatcher || this._defaultErrorStateMatcher;\n            const control = this.ngControl ? this.ngControl.control as FormControl : null;\n            const newState = matcher.isErrorState(control, parent);\n\n            if (newState !== oldState) {\n                this.errorState = newState;\n                this.stateChanges.next();\n            }\n        }\n    };\n}\n","import {\n    AfterViewChecked,\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    ElementRef,\n    EventEmitter,\n    Inject,\n    InjectionToken,\n    Input,\n    OnDestroy,\n    Optional,\n    Output,\n    QueryList,\n    ViewEncapsulation\n} from '@angular/core';\nimport { coerceBooleanProperty } from '@ptsecurity/cdk/coercion';\nimport { ENTER, SPACE } from '@ptsecurity/cdk/keycodes';\nimport { Subject } from 'rxjs';\n\nimport { McOptgroup } from './optgroup';\n\n\n/**\n * Option IDs need to be unique across components, so this counter exists outside of\n * the component definition.\n */\nlet _uniqueIdCounter = 0;\n\n/** Event object emitted by McOption when selected or deselected. */\nexport class McOptionSelectionChange {\n    constructor(\n        /** Reference to the option that emitted the event. */\n        public source: McOption,\n        /** Whether the change in the option's value was a result of a user action. */\n        public isUserInput = false) {\n    }\n}\n\n/**\n * Describes a parent component that manages a list of options.\n * Contains properties that the options can inherit.\n * @docs-private\n */\nexport interface IMcOptionParentComponent {\n    disableRipple?: boolean;\n    multiple?: boolean;\n}\n\n/**\n * Injection token used to provide the parent component to options.\n */\nexport const MC_OPTION_PARENT_COMPONENT =\n    new InjectionToken<IMcOptionParentComponent>('MC_OPTION_PARENT_COMPONENT');\n\n/**\n * Single option inside of a `<mat-select>` element.\n */\n@Component({\n    selector: 'mc-option',\n    exportAs: 'mcOption',\n    host: {\n        '[attr.tabindex]': '_getTabIndex()',\n        '[class.mc-selected]': 'selected',\n        '[class.mc-option-multiple]': 'multiple',\n        '[class.mc-active]': 'active',\n        '[id]': 'id',\n        '[class.mc-disabled]': 'disabled',\n        '(click)': '_selectViaInteraction()',\n        '(keydown)': '_handleKeydown($event)',\n        class: 'mc-option'\n    },\n    styleUrls: ['option.css'],\n    templateUrl: 'option.html',\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class McOption implements AfterViewChecked, OnDestroy {\n    /** Whether the wrapping component is in multiple selection mode. */\n    get multiple() {\n        return this._parent && this._parent.multiple;\n    }\n\n    /** The unique ID of the option. */\n    get id(): string {\n        return this._id;\n    }\n\n    /** Whether or not the option is currently selected. */\n    get selected(): boolean {\n        return this._selected;\n    }\n\n    /** The form value of the option. */\n    @Input() value: any;\n\n    /** Whether the option is disabled. */\n    @Input()\n    get disabled() {\n        return (this.group && this.group.disabled) || this._disabled;\n    }\n\n    set disabled(value: any) {\n        this._disabled = coerceBooleanProperty(value);\n    }\n\n    /** Whether ripples for the option are disabled. */\n    get disableRipple() {\n        return this._parent && this._parent.disableRipple;\n    }\n\n    /** Event emitted when the option is selected or deselected. */\n        // tslint:disable-next-line:no-output-on-prefix\n    @Output() readonly onSelectionChange = new EventEmitter<McOptionSelectionChange>();\n\n    /** Emits when the state of the option changes and any parents have to be notified. */\n    readonly _stateChanges = new Subject<void>();\n\n    private _selected = false;\n    private _active = false;\n    private _disabled = false;\n    private readonly _id = `mc-option-${_uniqueIdCounter++}`;\n    private _mostRecentViewValue = '';\n\n    constructor(\n        private readonly _element: ElementRef,\n        private readonly _changeDetectorRef: ChangeDetectorRef,\n        @Optional() @Inject(MC_OPTION_PARENT_COMPONENT) private readonly _parent: IMcOptionParentComponent,\n        @Optional() readonly group: McOptgroup) {\n    }\n\n    /**\n     * Whether or not the option is currently active and ready to be selected.\n     * An active option displays styles as if it is focused, but the\n     * focus is actually retained somewhere else. This comes in handy\n     * for components like autocomplete where focus must remain on the input.\n     */\n    get active(): boolean {\n        return this._active;\n    }\n\n    /**\n     * The displayed value of the option. It is necessary to show the selected option in the\n     * select's trigger.\n     */\n    get viewValue(): string {\n        // TODO(kara): Add input property alternative for node envs.\n        return (this._getHostElement().textContent || '').trim();\n    }\n\n    /** Selects the option. */\n    select(): void {\n        if (!this._selected) {\n            this._selected = true;\n            this._changeDetectorRef.markForCheck();\n            this._emitSelectionChangeEvent();\n        }\n    }\n\n    /** Deselects the option. */\n    deselect(): void {\n        if (this._selected) {\n            this._selected = false;\n            this._changeDetectorRef.markForCheck();\n            this._emitSelectionChangeEvent();\n        }\n    }\n\n    /** Sets focus onto this option. */\n    focus(): void {\n        const element = this._getHostElement();\n\n        if (typeof element.focus === 'function') {\n            element.focus();\n        }\n    }\n\n    /**\n     * This method sets display styles on the option to make it appear\n     * active. This is used by the ActiveDescendantKeyManager so key\n     * events will display the proper options as active on arrow key events.\n     */\n    setActiveStyles(): void {\n        if (!this._active) {\n            this._active = true;\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n\n    /**\n     * This method removes display styles on the option that made it appear\n     * active. This is used by the ActiveDescendantKeyManager so key\n     * events will display the proper options as active on arrow key events.\n     */\n    setInactiveStyles(): void {\n        if (this._active) {\n            this._active = false;\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n\n    /** Gets the label to be used when determining whether the option should be focused. */\n    getLabel(): string {\n        return this.viewValue;\n    }\n\n    /** Ensures the option is selected when activated from the keyboard. */\n    _handleKeydown(event: KeyboardEvent): void {\n        // tslint:disable-next-line\n        if (event.keyCode === ENTER || event.keyCode === SPACE) {\n            this._selectViaInteraction();\n\n            // Prevent the page from scrolling down and form submits.\n            event.preventDefault();\n        }\n    }\n\n    /**\n     * `Selects the option while indicating the selection came from the user. Used to\n     * determine if the select's view -> model callback should be invoked.`\n     */\n    _selectViaInteraction(): void {\n        if (!this.disabled) {\n            this._selected = this.multiple ? !this._selected : true;\n            this._changeDetectorRef.markForCheck();\n            this._emitSelectionChangeEvent(true);\n        }\n    }\n\n    /** Returns the correct tabindex for the option depending on disabled state. */\n    _getTabIndex(): string {\n        return this.disabled ? '-1' : '0';\n    }\n\n    /** Gets the host DOM element. */\n    _getHostElement(): HTMLElement {\n        return this._element.nativeElement;\n    }\n\n    ngAfterViewChecked() {\n        // Since parent components could be using the option's label to display the selected values\n        // (e.g. `mat-select`) and they don't have a way of knowing if the option's label has changed\n        // we have to check for changes in the DOM ourselves and dispatch an event. These checks are\n        // relatively cheap, however we still limit them only to selected options in order to avoid\n        // hitting the DOM too often.\n        if (this._selected) {\n            const viewValue = this.viewValue;\n\n            if (viewValue !== this._mostRecentViewValue) {\n                this._mostRecentViewValue = viewValue;\n                this._stateChanges.next();\n            }\n        }\n    }\n\n    ngOnDestroy() {\n        this._stateChanges.complete();\n    }\n\n    /** Emits the selection change event. */\n    private _emitSelectionChangeEvent(isUserInput = false): void {\n        this.onSelectionChange.emit(new McOptionSelectionChange(this, isUserInput));\n    }\n}\n\n/**\n * Counts the amount of option group labels that precede the specified option.\n * @param optionIndex Index of the option at which to start counting.\n * @param options Flat list of all of the options.\n * @param optionGroups Flat list of all of the option groups.\n * @docs-private\n */\nexport function _countGroupLabelsBeforeOption(\n    optionIndex: number, options: QueryList<McOption>,\n    optionGroups: QueryList<McOptgroup>\n): number {\n\n    if (optionGroups.length) {\n        const optionsArray = options.toArray();\n        const groups = optionGroups.toArray();\n\n        let groupCounter = 0;\n\n        for (let i = 0; i < optionIndex + 1; i++) {\n            if (optionsArray[i].group && optionsArray[i].group === groups[groupCounter]) {\n                groupCounter++;\n            }\n        }\n\n        return groupCounter;\n    }\n\n    return 0;\n}\n\n/**\n * Determines the position to which to scroll a panel in order for an option to be into view.\n * @param optionIndex Index of the option to be scrolled into the view.\n * @param optionHeight Height of the options.\n * @param currentScrollPosition Current scroll position of the panel.\n * @param panelHeight Height of the panel.\n * @docs-private\n */\nexport function _getOptionScrollPosition(\n    optionIndex: number,\n    optionHeight: number,\n    currentScrollPosition: number,\n    panelHeight: number\n): number {\n    const optionOffset = optionIndex * optionHeight;\n\n    if (optionOffset < currentScrollPosition) { return optionOffset; }\n\n    if (optionOffset + optionHeight > currentScrollPosition + panelHeight) {\n        return Math.max(0, optionOffset - panelHeight + optionHeight);\n    }\n\n    return currentScrollPosition;\n}\n\n","import { ConnectionPositionPair } from '@ptsecurity/cdk/overlay';\n\n\nexport const POSITION_MAP: { [key: string]: ConnectionPositionPair } = {\n    top         : {\n        originX : 'center',\n        originY : 'top',\n        overlayX: 'center',\n        overlayY: 'bottom'\n    },\n    topCenter   : {\n        originX : 'center',\n        originY : 'top',\n        overlayX: 'center',\n        overlayY: 'bottom',\n        offsetX : undefined,\n        offsetY : undefined\n    },\n    topLeft     : {\n        originX : 'start',\n        originY : 'top',\n        overlayX: 'start',\n        overlayY: 'bottom',\n        offsetX : undefined,\n        offsetY : undefined\n    },\n    topRight    : {\n        originX : 'end',\n        originY : 'top',\n        overlayX: 'end',\n        overlayY: 'bottom',\n        offsetX : undefined,\n        offsetY : undefined\n    },\n    right       : {\n        originX : 'end',\n        originY : 'center',\n        overlayX: 'start',\n        overlayY: 'center'\n    },\n    rightTop    : {\n        originX : 'end',\n        originY : 'top',\n        overlayX: 'start',\n        overlayY: 'top',\n        offsetX : undefined,\n        offsetY : undefined\n    },\n    rightBottom : {\n        originX : 'end',\n        originY : 'bottom',\n        overlayX: 'start',\n        overlayY: 'bottom',\n        offsetX : undefined,\n        offsetY : undefined\n    },\n    bottom      : {\n        originX : 'center',\n        originY : 'bottom',\n        overlayX: 'center',\n        overlayY: 'top'\n    },\n    bottomCenter: {\n        originX : 'center',\n        originY : 'bottom',\n        overlayX: 'center',\n        overlayY: 'top'\n    },\n    bottomLeft  : {\n        originX : 'start',\n        originY : 'bottom',\n        overlayX: 'start',\n        overlayY: 'top'\n    },\n    bottomRight : {\n        originX : 'end',\n        originY : 'bottom',\n        overlayX: 'end',\n        overlayY: 'top'\n    },\n    left        : {\n        originX : 'start',\n        originY : 'center',\n        overlayX: 'end',\n        overlayY: 'center'\n    },\n    leftTop     : {\n        originX : 'start',\n        originY : 'top',\n        overlayX: 'end',\n        overlayY: 'top'\n    },\n    leftBottom  : {\n        originX : 'start',\n        originY : 'bottom',\n        overlayX: 'end',\n        overlayY: 'bottom'\n    }\n};\n\nexport const DEFAULT_4_POSITIONS = _objectValues([\n    POSITION_MAP.top, POSITION_MAP.right, POSITION_MAP.bottom, POSITION_MAP.left\n]);\n\nfunction arrayMap<T, S>(array: T[], iteratee: (item: T, index: number, arr: T[]) => S): S[] {\n    let index = -1;\n    const length = array == null ? 0 : array.length;\n    const result = Array(length);\n\n    while (++index < length) {\n        result[ index ] = iteratee(array[ index ], index, array);\n    }\n\n    return result;\n}\nfunction baseValues<T>(object: { [key: string]: T } | T[], props: string[]): T[] {\n    return arrayMap(props,  (key) => {\n        return object[ key ];\n    });\n}\nfunction _objectValues<T>(object: { [key: string]: T } | T[]): T[] {\n    return object == null ? [] : baseValues(object, Object.keys(object));\n}\n","export function throwMcDropdownMissingError() {\n    throw Error(`mcDropdownTriggerFor: must pass in an mc-dropdown instance.\n    Example:\n      <mc-dropdown #dropdown=\"mcDropdown\"></mc-dropdown>\n      <button [mcDropdownTriggerFor]=\"dropdown\"></button>`);\n}\n\n/**\n * Throws an exception for the case when dropdown's x-position value isn't valid.\n * In other words, it doesn't match 'before' or 'after'.\n * @docs-private\n */\nexport function throwMcDropdownInvalidPositionX() {\n    throw Error(`xPosition value must be either 'before' or after'.\n      Example: <mc-dropdown xPosition=\"before\" #dropdown=\"mcDropdown\"></mc-dropdown>`);\n}\n\n/**\n * Throws an exception for the case when dropdown's y-position value isn't valid.\n * In other words, it doesn't match 'above' or 'below'.\n * @docs-private\n */\nexport function throwMcDropdownInvalidPositionY() {\n    throw Error(`yPosition value must be either 'above' or below'.\n      Example: <mc-dropdown yPosition=\"above\" #dropdown=\"mcDropdown\"></mc-dropdown>`);\n}\n","export function getMcFormFieldMissingControlError(): Error {\n  return Error('mc-form-field must contain a McFormFieldControl.');\n}\n","export function getMcInputUnsupportedTypeError(inputType: string): Error {\n    return Error(`Input type \"${inputType}\" isn't supported by mcInput.`);\n}\n","/**\n * Returns an exception to be thrown when attempting to change a select's `multiple` option\n * after initialization.\n * @docs-private\n */\nexport function getMcSelectDynamicMultipleError(): Error {\n    return Error('Cannot change `multiple` mode of select after initialization.');\n}\n\n/**\n * Returns an exception to be thrown when attempting to assign a non-array value to a select\n * in `multiple` mode. Note that `undefined` and `null` are still valid values to allow for\n * resetting the value.\n * @docs-private\n */\nexport function getMcSelectNonArrayValueError(): Error {\n    return Error('Value must be an array in multiple-selection mode.');\n}\n\n/**\n * Returns an exception to be thrown when assigning a non-function value to the comparator\n * used to determine if a value corresponds to an option. Note that whether the function\n * actually takes two values and returns a boolean is not checked.\n */\nexport function getMcSelectNonFunctionValueError(): Error {\n    return Error('`compareWith` must be a function.');\n}\n","import { NgModule, Directive, ElementRef, QueryList } from '@angular/core';\n\n\n/**\n * Shared directive to count lines inside a text area, such as a list item.\n * Line elements can be extracted with a @ContentChildren(McLine) query, then\n * counted by checking the query list's length.\n */\n@Directive({\n    selector: '[mc-line], [mcLine]',\n    host: { class: 'mc-line' }\n})\nexport class McLine {}\n\n/**\n * Helper that takes a query list of lines and sets the correct class on the host.\n * @docs-private\n */\nexport class McLineSetter {\n    constructor(private _lines: QueryList<McLine>, private _element: ElementRef) {\n        this._setLineClass(this._lines.length);\n\n        this._lines.changes.subscribe(() => {\n            this._setLineClass(this._lines.length);\n        });\n    }\n\n    private _setLineClass(count: number): void {\n        this._resetClasses();\n        if (count === 2 || count === 3) {\n            this._setClass(`mc-${count}-line`, true);\n        } else if (count > 3) {\n            this._setClass(`mc-multi-line`, true);\n        }\n    }\n\n    private _resetClasses(): void {\n        this._setClass('mc-2-line', false);\n        this._setClass('mc-3-line', false);\n        this._setClass('mc-multi-line', false);\n    }\n\n    private _setClass(className: string, isAdd: boolean): void {\n        if (isAdd) {\n            this._element.nativeElement.classList.add(className);\n        } else {\n            this._element.nativeElement.classList.remove(className);\n        }\n    }\n}\n\n@NgModule({\n    imports: [],\n    exports: [McLine],\n    declarations: [McLine]\n})\nexport class McLineModule {}\n","import { Injectable } from '@angular/core';\nimport { FormGroupDirective, NgForm, FormControl } from '@angular/forms';\n\n\n/** Error state matcher that matches when a control is invalid and dirty. */\n@Injectable()\nexport class ShowOnDirtyErrorStateMatcher implements ErrorStateMatcher {\n    isErrorState(control: FormControl | null, form: FormGroupDirective | NgForm | null): boolean {\n        return !!(control && control.invalid && (control.dirty || (form && form.submitted)));\n    }\n}\n\n/** Provider that defines how form controls behave with regards to displaying error messages. */\n@Injectable({ providedIn: 'root' })\nexport class ErrorStateMatcher {\n    isErrorState(control: FormControl | null, form: FormGroupDirective | NgForm | null): boolean {\n        return !!(control && control.invalid && (control.touched || (form && form.submitted)));\n    }\n}\n","import { Component, ViewEncapsulation, Input, ChangeDetectionStrategy } from '@angular/core';\n\n\nexport type McPseudoCheckboxState = 'unchecked' | 'checked' | 'indeterminate';\n\n/**\n * Component that shows a simplified checkbox without including any kind of \"real\" checkbox.\n * Meant to be used when the checkbox is purely decorative and a large number of them will be\n * included, such as for the options in a multi-select. Uses no SVGs or complex animations.\n * Note that theming is meant to be handled by the parent element, e.g.\n * `mc-primary .mc-pseudo-checkbox`.\n *\n * Note that this component will be completely invisible to screen-reader users. This is *not*\n * interchangeable with `<mc-checkbox>` and should *not* be used if the user would directly\n * interact with the checkbox. The pseudo-checkbox should only be used as an implementation detail\n * of more complex components that appropriately handle selected / checked state.\n * @docs-private\n */\n@Component({\n    encapsulation: ViewEncapsulation.None,\n    preserveWhitespaces: false,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    selector: 'mc-pseudo-checkbox',\n    styleUrls: ['pseudo-checkbox.css'],\n    templateUrl: 'pseudo-checkbox.partial.html',\n    host: {\n        class: 'mc-pseudo-checkbox',\n        '[class.mc-indeterminate]': 'state === \"indeterminate\"',\n        '[class.mc-checked]': 'state === \"checked\"',\n        '[class.mc-disabled]': 'disabled'\n    }\n})\nexport class McPseudoCheckbox {\n    @Input() state: McPseudoCheckboxState = 'unchecked';\n\n    @Input() disabled: boolean = false;\n}\n","import { NgModule } from '@angular/core';\n\nimport { McPseudoCheckbox } from './pseudo-checkbox/pseudo-checkbox';\n\n\n@NgModule({\n    exports: [McPseudoCheckbox],\n    declarations: [McPseudoCheckbox]\n})\nexport class McPseudoCheckboxModule {}\n\n\nexport * from './pseudo-checkbox/pseudo-checkbox';\n","import { DOCUMENT } from '@angular/common';\nimport { Inject, Injectable } from '@angular/core';\n\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class McMeasureScrollbarService {\n\n    get scrollBarWidth(): number {\n        if (this._scrollbarWidth) {\n            return this._scrollbarWidth;\n        }\n        this.initScrollBarWidth();\n\n        return this._scrollbarWidth;\n    }\n\n    private _scrollbarWidth: number;\n    private scrollbarMeasure = {\n        position: 'absolute',\n        top: '-9999px',\n        width: '50px',\n        height: '50px',\n        overflow: 'scroll'\n    };\n\n    constructor(\n        @Inject(DOCUMENT) private document: any\n    ) {\n        this.initScrollBarWidth();\n    }\n\n    initScrollBarWidth() {\n        const scrollDiv = this.document.createElement('div');\n\n        // tslint:disable-next-line\n        for (const scrollProp in this.scrollbarMeasure) {\n            if (this.scrollbarMeasure.hasOwnProperty(scrollProp)) {\n                scrollDiv.style[scrollProp] = this.scrollbarMeasure[scrollProp];\n            }\n        }\n\n        this.document.body.appendChild(scrollDiv);\n\n        const width = scrollDiv.offsetWidth - scrollDiv.clientWidth;\n\n        this.document.body.removeChild(scrollDiv);\n        this._scrollbarWidth = width;\n    }\n}\n","import { Component, ViewEncapsulation, Input, ChangeDetectionStrategy } from '@angular/core';\n\nimport { mixinDisabled, CanDisable, CanDisableCtor } from '../common-behaviors/index';\n\n\n// Boilerplate for applying mixins to McOptgroup.\n/** @docs-private */\nexport class McOptgroupBase {}\n\nexport const _McOptgroupMixinBase: CanDisableCtor & typeof McOptgroupBase = mixinDisabled(McOptgroupBase);\n\n// Counter for unique group ids.\nlet _uniqueOptgroupIdCounter = 0;\n\n/**\n * Component that is used to group instances of `mc-option`.\n */\n@Component({\n    selector: 'mc-optgroup',\n    exportAs: 'mcOptgroup',\n    templateUrl: 'optgroup.html',\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    inputs: ['disabled'],\n    styleUrls: ['optgroup.css'],\n    host: {\n        class: 'mc-optgroup',\n        role: 'group',\n        '[class.mc-optgroup-disabled]': 'disabled',\n        '[attr.aria-disabled]': 'disabled.toString()',\n        '[attr.aria-labelledby]': '_labelId'\n    }\n})\nexport class McOptgroup extends _McOptgroupMixinBase implements CanDisable {\n    /** Label for the option group. */\n    @Input() label: string;\n\n    /** Unique id for the underlying label. */\n    _labelId: string = `mc-optgroup-label-${_uniqueOptgroupIdCounter++}`;\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { McPseudoCheckboxModule } from '../selection/index';\n\nimport { McOptgroup } from './optgroup';\nimport { McOption } from './option';\n\n\n@NgModule({\n    imports: [CommonModule, McPseudoCheckboxModule],\n    exports: [McOption, McOptgroup],\n    declarations: [McOption, McOptgroup]\n})\nexport class McOptionModule {}\n\n\nexport * from './option';\nexport * from './optgroup';\n","import { InjectionToken } from '@angular/core';\n\n\n/** InjectionToken that can be used to specify the global label options. */\nexport const MC_LABEL_GLOBAL_OPTIONS =\n    new InjectionToken<LabelOptions>('mc-label-global-options');\n\n/** Type for the available floatLabel values. */\nexport type FloatLabelType = 'always' | 'never' | 'auto';\n\n/** Configurable options for floating labels. */\nexport interface LabelOptions {\n    /**\n     * Whether the label should float `always`, `never`, or `auto` (only when necessary).\n     * Default behavior is assumed to be `auto`.\n     */\n    float?: FloatLabelType;\n}\n","import {\n    animate,\n    state,\n    style,\n    transition,\n    trigger,\n    AnimationTriggerMetadata,\n} from '@angular/animations';\n\n\nexport const fadeAnimation: AnimationTriggerMetadata =  trigger('fadeAnimation', [\n    state('void', style({ opacity: 0 })),\n    state('true', style({ opacity: 1 })),\n    state('false', style({ opacity: 0 })),\n    transition('* => true', animate('150ms cubic-bezier(0.0, 0.0, 0.2, 1)')),\n    transition('* => void', animate('150ms cubic-bezier(0.4, 0.0, 1, 1)')),\n]);\n","import {\n    Attribute,\n    ChangeDetectionStrategy,\n    Component,\n    Directive,\n    ElementRef,\n    ViewEncapsulation\n} from '@angular/core';\n\nimport { mixinColor, CanColor, CanColorCtor, ThemePalette } from '@ptsecurity/mosaic/core';\n\n\n@Directive({\n    selector: '[mc-icon]',\n    host: { class: 'mc mc-icon' }\n})\nexport class McIconCSSStyler {}\n\n\nexport class McIconBase {\n    constructor(public _elementRef: ElementRef) {}\n}\n\nexport const _McIconMixinBase: CanColorCtor & typeof McIconBase = mixinColor(McIconBase, ThemePalette.Empty);\n\n\n@Component({\n    selector: `[mc-icon]`,\n    template: '<ng-content></ng-content>',\n    styleUrls: ['./icon.css'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n    inputs: ['color']\n})\nexport class McIcon extends _McIconMixinBase implements CanColor {\n    constructor(elementRef: ElementRef, @Attribute('mc-icon') iconName: string) {\n        super(elementRef);\n\n        elementRef.nativeElement.classList.add(iconName);\n    }\n\n    _getHostElement() {\n        return this._elementRef.nativeElement;\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { A11yModule } from '@ptsecurity/cdk/a11y';\nimport { PlatformModule } from '@ptsecurity/cdk/platform';\n\nimport {\n    McIcon,\n    McIconCSSStyler\n} from './icon.component';\n\n\n@NgModule({\n    imports: [\n        CommonModule,\n        A11yModule,\n        PlatformModule\n    ],\n    exports: [\n        McIcon,\n        McIconCSSStyler\n    ],\n    declarations: [\n        McIcon,\n        McIconCSSStyler\n    ]\n})\nexport class McIconModule {}\n"],"names":["_this","mcVisibleChange","emit","onHideSubject","next","markForCheck","this","mcMouseLeaveDelay","McTooltipComponent","prototype","setClassMap","classMap","prefix","mcPlacement","isContentEmpty","isTitleString","mcTitle","afterHidden","asObservable","cdr","handleBodyInteraction","closeOnInteraction","hide","tslib_1.__decorate","Output","tslib_1.__metadata","EventEmitter","Input","Component","selector","inputs","outputs","animations","fadeAnimation","template","preserveWhitespaces","styles","encapsulation","ViewEncapsulation","None","changeDetection","ChangeDetectionStrategy","OnPush","host","(body:click)","ChangeDetectorRef","MC_TOOLTIP_SCROLL_STRATEGY","InjectionToken","MC_TOOLTIP_SCROLL_STRATEGY_FACTORY_PROVIDER","provide","deps","Overlay","useFactory","mcTooltipScrollStrategyFactory","McTooltip","overlay","elementRef","ngZone","scrollDispatcher","hostView","scrollStrategy","direction","isTooltipOpen","isDynamicTooltip","parentDisabled","$unsubscribe","Subject","_disabled","_mcTrigger","_mcPlacement","manualListeners","Map","destroyed","availablePositions","POSITION_MAP","Object","defineProperty","get","_mcTitle","set","title","updateCompValue","value","coerceBooleanProperty","_mcMouseEnterDelay","_mcMouseLeaveDelay","_mcTooltipClass","tooltip","_mcVisible","externalValue","show","createOverlay","overlayRef","strategy","position","flexibleConnectedTo","withTransformOriginOn","withFlexibleDimensions","withViewportMargin","withPositions","DEFAULT_4_POSITIONS","slice","scrollableAncestors","getAncestorScrollContainers","withScrollableContainers","positionChanges","pipe","takeUntil","subscribe","change","onPositionChange","scrollableViewProperties","isOverlayClipped","mcVisible","run","create","positionStrategy","panelClass","updatePosition","detachments","detach","hasAttached","$event","updatedPlacement","keys","some","key","connectionPair","originX","originY","overlayX","overlayY","handlePositioningUpdate","pos","overlayElement","clientHeight","element","nativeElement","currentContainer","style","top","parseInt","split","ngOnInit","initElementRefListeners","ngOnDestroy","dispose","forEach","listener","event","removeEventListener","clear","complete","handleKeydown","e","keyCode","ESCAPE","handleTouchend","mcTrigger","addEventListener","disabled","portal","ComponentPortal","attach","instance","property","distinctUntilChanged","data","getConfig","origin","getOrigin","getOverlayPosition","tslib_1.__assign","main","fallback","originPosition","isLtr","getMcTooltipInvalidPositionError","_a","invertPosition","x","y","overlayPosition","newX","newY","HostBinding","Directive","exportAs","(keydown)","(touchend)","tslib_1.__param","Inject","Optional","ElementRef","NgZone","ScrollDispatcher","ViewContainerRef","Directionality","McToolTipModule","NgModule","declarations","exports","imports","CommonModule","OverlayModule","providers","entryComponents","VERSION","Version","SELECT_PANEL_PADDING_X","McSelect","_onFadeInDone","_panelDoneAnimating","panelOpen","_changeDetectorRef","_onFocus","_focused","stateChanges","_onBlur","_onTouched","_onAttached","overlayDir","positionChange","take","detectChanges","_calculateOverlayOffsetX","panel","scrollTop","_scrollTop","_getPanelTheme","_parentFormField","color","focus","_elementRef","_calculateOverlayScroll","selectedIndex","scrollBuffer","maxScroll","itemHeight","_getItemHeight","optionOffsetFromScrollTop","halfOptionHeight","optimalScrollPosition","Math","min","max","onContainerClick","open","onRemoveMatcherItem","option","stopPropagation","deselect","_panelOpen","empty","_calculateHiddenItems","visibleItems","totalItemsWidth","_getTotalItemsWidthInMatcher","totalVisibleItemsWidth","tags","tag","offsetTop","offsetHeight","getBoundingClientRect","width","hiddenItems","selected","length","itemsCounter","trigger","querySelector","matcherList","itemsCounterShowed","matcherListWidth","matcherWidth","triggerClone","cloneNode","remove","_renderer","setStyle","appendChild","querySelectorAll","item","_handleClosedKeydown","isArrowKey","DOWN_ARROW","UP_ARROW","LEFT_ARROW","RIGHT_ARROW","ENTER","SPACE","multiple","altKey","preventDefault","_keyManager","onKeydown","_handleOpenKeydown","manager","HOME","END","setFirstItemActive","setLastItemActive","close","activeItem","_multiple","A","ctrlKey","hasDeselectedOptions_1","options","select","previouslyFocusedIndex","activeItemIndex","shiftKey","_selectViaInteraction","_initializeSelection","Promise","resolve","then","_setSelectionByValue","ngControl","_value","Array","isArray","getMcSelectNonArrayValueError","_selectionModel","currentValue","_selectValue","_sortValues","correspondingOption","setActiveItem","find","_compareWith","error","isDevMode","console","warn","_initKeyManager","ActiveDescendantKeyManager","withTypeAhead","withVerticalOrientation","withHorizontalOrientation","_isRtl","tabOut","_destroy","_scrollActiveOptionIntoView","_resetOptions","changedOrDestroyed","merge","changes","optionSelectionChanges","_onSelect","source","isUserInput","apply","map","_stateChanges","_setOptionIds","wasSelected","isSelected","_propagateChanges","options_1","toArray","sort","a","b","sortComparator","indexOf","fallbackValue","valueToEmit","valueChange","_onChange","selectionChange","McSelectChange","_optionIds","id","join","_highlightCorrectOption","activeOptionIndex","labelCount","_countGroupLabelsBeforeOption","optionGroups","_getOptionScrollPosition","_getOptionIndex","reduce","result","current","index","undefined","_calculateOverlayPosition","items","_getItemCount","panelHeight","scrollContainerHeight","selectedOptionOffset","_offsetY","_calculateOverlayOffsetY","_checkOverlayWithinViewport","offsetX","overlayRect","viewportSize","_viewportRuler","getViewportSize","isRtl","first","group","leftOverflow","left","rightOverflow","right","round","topSpaceAvailable","_triggerRect","bottomSpaceAvailable","height","bottom","panelHeightTop","abs","totalPanelHeight","panelHeightBottom","_adjustPanelUp","_adjustPanelDown","_transformOrigin","_getOriginBasedOnOption","distanceBelowViewport","distanceAboveViewport","optionHeightAdjustment","ViewChild","ViewChildren","McTag","QueryList","CdkConnectedOverlay","ContentChildren","McOption","descendants","McOptgroup","ContentChild","McSelectTrigger","ErrorStateMatcher","Observable","McSelect_1","[attr.id]","[attr.tabindex]","class","[class.mc-disabled]","[class.mc-select-invalid]","[class.mc-select-required]","(focus)","(blur)","(window:resize)","mcSelectAnimations","transformPanel","fadeInContent","McFormFieldControl","useExisting","MC_OPTION_PARENT_COMPONENT","Self","Attribute","MC_SELECT_SCROLL_STRATEGY","ViewportRuler","Renderer2","NgForm","FormGroupDirective","McFormField","NgControl","String","_McSelectMixinBase","McSelectModule","McOptionModule","McIconModule","McTagModule","McFormFieldModule","MC_SELECT_SCROLL_STRATEGY_PROVIDER","McSplitterComponent","renderer","areas","_gutterSize","isDragging","areaPositionDivider","listeners","_direction","gutterSize","size","coerceNumberProperty","addArea","area","order","getSize","setOrder","push","initialSize","isVertical","onMouseDown","leftAreaIndex","rightAreaIndex","leftArea","rightArea","startPoint","screenX","screenY","disableFlex","setSize","runOutsideAngular","listen","onMouseUp","onMouseMove","removeArea","indexToRemove","splice","endPoint","offset","newLeftAreaSize","newRightAreaSize","minLeftAreaSize","getMinSize","minRightAreaSize","rightAreaOffset","unsubscribe","pop","McGutterDirective","_order","_size","getCursor","getState","coerceCssPixelValue","setAttr","state","Error","attribute","setAttribute","McSplitterAreaDirective","splitter","removeStyle","sz","getSizeProperty","getOffsetSizeProperty","getComputedStyle","parseFloat","getMinSizeProperty","McSplitterModule","nextUniqueId","McToggleBase","_McToggleMixinBase","mixinTabIndex","mixinColor","mixinDisabled","ThemePalette","Primary","McToggleChange","McToggleComponent","_super","_focusMonitor","tabIndex","call","labelPosition","ariaLabel","ariaLabelledby","_uniqueId","name","_checked","_onTouchedCallback","_onChangeCallback","_","monitor","tslib_1.__extends","McToggleComponent_1","stopMonitoring","focusVia","_inputElement","_getAriaChecked","checked","_onInteractionEvent","_onLabelTextChange","_onInputClick","_updateModelValue","_emitChangeEvent","writeValue","registerOnChange","fn","registerOnTouched","setDisabledState","isDisabled","NG_VALUE_ACCESSOR","forwardRef","multi","[id]","[class.mc-toggle_off]","transition","animate","FocusMonitor","McToggleModule","BrowserAnimationsModule","A11yModule","McCommonModule","positions","mcMouseEnterDelay","BehaviorSubject","$visible","TemplateRef","unshift","visible","hideTid","clearTimeout","showTid","setTimeout","mcTabGroupMixinBase","McTabNavBase","mcTabNavMixinBase","McTabNav","McTabLinkBase","mcTabLinkMixinBase","McTabLink","focusMonitor","isActive","[attr.aria-current]","[attr.aria-disabled]","[attr.tabIndex]","[class.mc-active]","McTabsModule","PortalModule","McTabGroup","McTabLabel","McTab","McTabContent","McLightTabsCssStyler","McAlignTabsCenterCssStyler","McAlignTabsEndCssStyler","McStretchTabsCssStyler","McTabLabelWrapper","McTabBody","McTabBodyPortal","McTabHeader","McTagBase","_McTagMixinBase","ngAfterContentInit","_addClassModificatorForIcons","icons","contentChildren","iconElement","previousElementSibling","nextElementSibling","nextSibling","classList","add","previousSibling","firstIconElement","secondIconElement","McIcon","PlatformModule","MC_TEXTAREA_VALUE_ACCESSOR","McTextareaBase","_defaultErrorStateMatcher","_parentForm","_parentFormGroup","McTextareaMixinBase","mixinErrorState","McTextarea","inputValueAccessor","canGrow","focused","controlType","uid","_required","lineHeight","freeRowsHeight","minHeight","valueAccessor","previousNativeValue","growObserver","fromEvent","growSubscription","grow","bind","McTextarea_1","_id","paddingTop","paddingBottom","ngOnChanges","ngDoCheck","updateErrorState","dirtyCheckNativeValue","textarea","outerHeight","window","diff","scrollHeight","focusChanged","isFocused","isBadInput","newValue","validity","badInput","getGrowHeight","toString","[class.mc-textarea-resizable]","[attr.placeholder]","[disabled]","[required]","McTextareaModule","FormsModule","TimeParts","TimeFormats","TIMEFORMAT_PLACEHOLDERS","HHmmss","HHmm","DEFAULT_TIME_FORMAT","HOURS_MINUTES_SECONDS_REGEXP","RegExp","HOURS_MINUTES_REGEXP","HOURS_ONLY_REGEXP","uniqueComponentIdSuffix","validatorOnChange","noop","validator","MC_INPUT_VALUE_ACCESSOR","McTimepickerBase","McTimepickerMixinBase","ɵ1","validate","c","registerOnValidatorChange","McTimepicker","_minTime","_maxTime","onChange","placeholder","Validators","compose","parseValidator","minTimeValidator","maxTimeValidator","McTimepicker_1","applyInputChanges","_timeFormat","formatValue","timeFormatKey","minValue","minDateTime","getDateFromTimeString","maxValue","maxDateTime","onTouched","onBlur","onPaste","clipboardUserInput","clipboardData","getData","onInput","initialCursorStart","selectionStart","initialCursorEnd","selectionEnd","isAutocompleteTriggered","getParsedTimeParts","hoursOnly","hoursAndMinutes","hoursAndMinutesAndSeconds","doTimestringReformat","errors","createSelectionOfTimeComponentInInput","setProperty","getTimeStringFromDate","timeFormat","onKeyDown","getKeyCode","upDownTimeByArrowKeys","switchSelectionBetweenTimeparts","applyParams","changedTime","timeToApply","currentDateTimeInput","control","updateValueAndValidity","cursorPos","modifiedTimePart","getTimeEditMetrics","incrementTime","decrementTime","getCursorPositionOfPrevTimePartStart","getCursorPositionOfNextTimePartStart","code","newEditParams","cursorStartPosition","cursorEndPosition","dateVal","whatToIncrement","seconds","getTimeDigitsFromDate","hours","minutes","getDateFromTimeDigits","whatToDecrement","timeString","timeDevider","nextDividerPos","cursorPosition","minutesIndex","hoursIndex","secondsIndex","tempVal","getNumberWithLeadingZero","getHours","getMinutes","getSeconds","match","trim","Number","resultDate","Date","isNaN","getTime","digit","mcTimepickerParse","text","isTimeLowerThenMin","mcTimepickerLowerThenMintime","isTimeGreaterThenMax","mcTimepickerHigherThenMaxtime","timeToCompare","[attr.time-format]","[attr.min-time]","[attr.max-time]","[attr.value]","(input)","(paste)","NG_VALIDATORS","useValue","McTimepickerModule","transform","minWidth","opacity","query","animateChild","MC_SELECT_SCROLL_STRATEGY_PROVIDER_FACTORY","McSelectBase","_ngZone","_dir","_scrollStrategyFactory","_triggerFontSize","_panelDoneAnimatingStream","_scrollStrategy","_positions","defer","onSelectionChange","onStable","switchMap","openedChange","_openedStream","filter","o","_closedStream","oneMoreText","_uid","o1","o2","_placeholder","getMcSelectDynamicMultipleError","getMcSelectNonFunctionValueError","SelectionModel","added","removed","startWith","ngAfterViewInit","toggle","fontSize","selectedOptions","viewValue","reverse","isEmpty","_handleKeydown","PAGE_DOWN","setNextPageItemActive","McTreeSelection","FocusKeyManager","updateScrollSize","withScrollSize","floor","_getHeight","setFocusedOption","updateActiveItem","withShift","previousIndex_1","previousActiveItemIndex","activeIndex_1","setSelected","withCtrl","_canDeselectLast","autoSelect","_emitNavigationEvent","toggleFocusedOption","focusedIndex","_isValidIndex","focusedOption","renderNodeChanges","dataDiffer","viewContainer","parentData","_dataDiffer","_nodeOutlet","arrayOfInstances","_embeddedViews","view","viewDef","def","nodes","node","nodeMatchedQueries","matchedQueryIds","nodeData","nodeIndex","reset","notifyOnChanges","getClientRects","navigationChange","McTreeNavigationChange","noUnselect","CdkTreeNodeOutlet","McTreeNodeOption","McTreeSelection_1","[tabIndex]","role","CdkTree","IterableDiffers","_McTreeSelectionBase","MC_TREE_DIRECTIVES","McTreeNodeDef","McTreeNodePadding","McTreeModule","CdkTreeModule","McTreeFlattener","transformFunction","getLevel","isExpandable","getChildren","_flattenNode","level","resultNodes","parentMap","flatNode","children","child","childParentMap","flattenNodes","structuredData","expandFlattenedNodes","treeControl","results","currentExpand","expand","i","isExpanded","McTreeFlatDataSource","treeFlattener","initialData","_flattenedData","_expandedData","_data","dataNodes","connect","collectionViewer","viewChange","expansionModel","disconnect","DataSource","McTreeNestedDataSource","arguments","CdkPortal","ctorParameters","McTabBase","mcTabMixinBase","viewContainerRef","textLabel","contentPortal","hasOwnProperty","TemplatePortal","explicitContent","implicitContent","read","mcTabsAnimations","translateTab","componentFactoryResolver","centeringSub","Subscription","EMPTY","leavingSub","beforeCentering","isCenterPosition","bodyPosition","isCentering","content","afterLeavingCenter","ComponentFactoryResolver","CdkPortalOutlet","dir","changeDetectorRef","onCentering","onCentered","animationDuration","dirChangeSubscription","computePositionAnimationState","positionIndex","computePositionFromOrigin","onTranslateTabStarted","toState","onTranslateTabComplete","fromState","getLayoutDirection","PortalHostDirective","McTabLabelWrapperBase","mcTabLabelWrapperMixinBase","getOffsetLeft","offsetLeft","getOffsetWidth","offsetWidth","McTabHeaderBase","viewportRuler","showPaginationControls","disableScrollAfter","disableScrollBefore","selectFocusedIndex","indexFocused","_scrollDistance","selectedIndexChanged","_selectedIndex","coercedValue","keyManager","isValidIndex","focusIndex","v","getMaxScrollDistance","scrollDistanceChanged","checkScrollingControls","ngAfterContentChecked","tabLabelCount","labelWrappers","updatePagination","scrollToLabel","updateTabScrollPosition","dirChange","observableOf","resize","realign","withWrap","requestAnimationFrame","newFocusIndex","setTabFocus","onContentChanges","textContent","currentTextContent","zoneCallback","checkPaginationEnabled","tab","containerEl","tabListContainer","scrollLeft","scrollWidth","scrollDistance","translateX","tabList","scrollHeader","scrollDir","viewLength","labelIndex","selectedLabel","labelBeforePos","labelAfterPos","beforeVisiblePos","afterVisiblePos","isEnabled","[class.mc-tab-header__pagination-controls_enabled]","[class.mc-tab-header_rtl]","nextId","McTabChangeEvent","MC_TABS_CONFIG","McTabGroupBase","lightTabs","defaultConfig","headerPosition","selectedIndexChange","focusChange","animationDone","selectedTabChange","indexToSelect","tabBodyWrapperHeight","tabsSubscription","tabLabelSubscription","_dynamicHeight","lightTab","groupId","clampTabIndex","isFirstRun_1","createChangeEvent","tabs","subscribeToTabLabels","getTabLabelId","getTabContentId","setTabBodyWrapperHeight","tabHeight","wrapper","tabBodyWrapper","removeTabBodyWrapperHeight","handleClick","tabHeader","getTabIndex","[class.mc-tab-group_dynamic-height]","[class.mc-tab-group_inverted-header]","modalControl","closeAll","McModalService","mcOnCancel","mcCloseByESC","mcWidth","ModalBuilderForService","getInstance","confirm","confirmType","mcOnOk","mcModalType","mcClassName","mcMaskClosable","success","simpleConfirm","delete","mcCancelText","Injectable","McModalControlService","McModalModule","McButtonModule","McModalComponent","CssUnitPipe","MC_NAVBAR_CONTAINER","MC_NAVBAR_ITEM","MC_NAVBAR_BRAND","MC_NAVBAR_TITLE","McNavbarLogo","McNavbarBrand","McNavbarTitle","McNavbarItemBase","_McNavbarMixinBase","McNavbarItem","_platform","_cdRef","dropdownItems","isCollapsed","_subscription","encodeURI","dropdownContent","denyClickIfDisabled","_focusMonitor$","hasDropdownContent","listenClickOutside","startListenFocusDropdownItems","stopListenFocusDropdownItems","isActiveDropdownLink","link","isBrowser","location","href","handleClickByItem","toggleDropdown","isNavbarItem","target","contains","handleClickByDropdownItem","forceCloseDropdown","_dropdownElements","el","events","eventListeners","hasAttribute","stopImmediatePropagation","[attr.disabled]","Platform","McNavbarContainer","CollapsibleItem","_collapsed","processCollapsed","collapsed","updateCollapsedClass","CachedItemWidth","itemsForCollapse","_collapsedItemsWidth","calculateAndCacheCollapsedItemsWidth","updateTitle","acc","getTitle","computedTitle","getAttribute","decodeURI","innerText","removeAttribute","McNavbar","forceRecalculateItemsWidth","resizeDebounceInterval","firstLevelElement","secondLevelElements","resizeObserver","debounceTime","_resizeSubscription","updateCollapsed","_itemsWidths","calculateAndCacheItemsWidth","_totalItemsWidths","calculateAndCacheTotalItemsWidth","collapseDelta","maxAllowedWidth","itemsWidths","canCollapse","collapsedItemsWidth","getOuterElementWidth","getPropertyValue","allItemsSelector","allItems","from","getItemsForCollapse","McNavbarModule","idIterator","McProgressBarBase","_McProgressBarMixinBase","McProgressBar","mode","McProgressBarModule","McProgressSpinnerBase","_McProgressSpinnerMixinBase","McProgressSpinner","percentage","McProgressSpinnerModule","McRadioChange","McRadioGroupBase","_McRadioGroupMixinBase","MC_RADIO_GROUP_CONTROL_VALUE_ACCESSOR","McRadioGroup","_changeDetector","_name","_selected","_isInitialized","_labelPosition","controlValueAccessorChangeFn","updateRadioButtonNames","markRadiosForCheck","updateSelectedRadioFromValue","checkSelectedRadioButton","toBoolean","touch","emitChangeEvent","_radios","radio","isAlreadySelected","McRadioButton","McRadioButtonBase","_McRadioButtonMixinBase","radioGroup","_radioDispatcher","removeUniqueSelectionListener","newCheckedState","notify","newDisabledState","required","onInputClick","onInputChange","groupValueChanged","[class.mc-checked]","UniqueSelectionDispatcher","McRadioModule","McTreeNodeDef_1","CdkTreeNodeDef","_baseLeftPadding","_iconWidth","_indent","McTreeNodePadding_1","_withIcon","_paddingIndent","nodeLevel","_treeNode","_tree","_level","leftPadding","_setPadding","CdkTreeNodePadding","treeSelection","_hasFocus","McTreeNodeOption_1","_handleFocus","_handleBlur","_handleClick","tabindex","[class.mc-selected]","[class.mc-focused]","[attr.aria-expanded]","[attr.aria-level]","(click)","CdkTreeNode","McTreeSelectionChange","_differs","rawValue","log","_onKeyDown","collapse","PAGE_UP","setPreviousPageItemActive","MC_SELECTION_LIST_VALUE_ACCESSOR","McListSelection","_McListSelectionMixinBase","McListBase","McList","McListSubheaderCssStyler","McListItemBase","McListItem","_element","_lineSetter","McLineSetter","_lines","_getHostElement","McLine","McListModule","McLineModule","McListOption","McLinkBase","_McLinkBase","McLink","McLinkModule","parentService","rootOpenModals","rootAfterAllClose","rootRegisteredMetaMap","afterAllClose","openModals","registeredMetaMap","registerModal","modalRef","hasRegistered","afterOpenSubscription","afterOpen","afterCloseSubscription","afterClose","removeOpenModal","has","SkipSelf","McModalRef","ModalUtil","document","lastPosition","listenDocumentClick","getLastClickPosition","clientX","clientY","ModalUtil$1","cfr","mcMeasureScrollbarService","changeDetector","mcZIndex","_mcClosable","_mcMask","_mcMaskClosable","mcAfterOpen","mcAfterClose","mcOkType","_mcOkLoading","_mcCancelLoading","transformOrigin","mcGetContainer","mcOkText","animationState","isComponent","mcContent","createDynamicComponent","isModalButtons","mcFooter","formatModalButtons","container","HTMLElement","OverlayRef","handleVisibleStateChange","firstChange","contentComponentRef","bodyContainer","insert","autoFocusButtonOk","changeVisibleFromInside","destroy","triggerOk","onClickOkCancel","triggerCancel","getContentComponentRef","getContentComponent","getElement","onClickMask","mcMask","isModalType","type","onClickCloseBtn","ok","cancel","loadingKey","caseClose_1","doClose","isPromise","handleThen","catch","isNonEmptyString","isTemplateRef","Type","animation","closeResult","changeBodyOverflow","animateTo","getButtonCallableProp","prop","args","onButtonClick","button","loading","changeAnimationState","maskAnimationClassMap","modalAnimationClassMap","_b","isVisible","updateTransformOrigin","buttons","autoLoading","component","factory","resolveComponentFactory","childInjector","Injector","parent","parentInjector","mcComponentParams","assign","modalElement","modalContainer","plusNum","body","scrollBarWidth","DOCUMENT","McMeasureScrollbarService","defaultUnit","formatted","Pipe","createModal","changeProps","destroyModal","keydownEvents","McFormFieldBase","_McFormFieldMixinBase","_labelId","hovered","_validateControlChild","_control","_numberControl","hasStepper","_stepper","stepUp","onStepUp","stepDown","onStepDown","valueChanges","clearValue","hasCleaner","onHoverChanged","isHovered","step","_shouldForward","getMcFormFieldMissingControlError","_hint","_suffix","_prefix","_cleaner","McFormFieldNumberControl","McStepper","McHint","McSuffix","McPrefix","McCleaner","[class.mc-form-field_invalid]","[class.mc-form-field_has-prefix]","[class.mc-form-field_has-suffix]","[class.mc-form-field_has-cleaner]","[class.mc-form-field_has-stepper]","[class.ng-untouched]","[class.ng-touched]","[class.ng-pristine]","[class.ng-dirty]","[class.ng-valid]","[class.ng-invalid]","[class.ng-pending]","(mouseenter)","(mouseleave)","McFormFieldWithoutBorders","res","MC_INPUT_INVALID_TYPES","BIG_STEP","SMALL_STEP","McInputBase","_McInputMixinBase","McNumberInput","_model","bigStep","isDigit","Infinity","_host","self","getPrototypeOf","normalizeSplitter","McNumberInput_1","_focusChanged","minuses","NUMPAD_MINUS","DASH","FF_MINUS","serviceKeys","DELETE","BACKSPACE","TAB","arrows","allowedKeys","concat","isIEPeriod","isNotIEPeriod","metaKey","C","V","X","F1","F12","EDGE","TRIDENT","ZERO","NINE","NUMPAD_ZERO","NUMPAD_NINE","valueAsNumber","update","replace","isFloat","isInt","test","NgModel","McInput","_type","_neverEmptyInputTypes","t","getSupportedInputTypes","_inputValueAccessor","_previousNativeValue","McInput_1","_validateType","_dirtyCheckNativeValue","_onInput","_isNeverEmpty","_isBadInput","getMcInputUnsupportedTypeError","McInputMono","MIN_VALIDATOR","MinValidator","_createValidator","_validator","[attr.min]","MAX_VALIDATOR","MaxValidator","[attr.max]","McInputModule","McContentComponent","[class.mc-layout-content]","McFooterComponent","[class.mc-layout-footer]","McHeaderComponent","[class.mc-layout-header]","McLayoutComponent","hasSidebar","[class.mc-layout]","[class.mc-layout-has-sidebar]","McSidebarComponent","mcLayoutComponent","_mcWidth","mcCollapsedWidth","mcCollapsedChange","collapsible","mcCollapsed","[class.mc-layout-sidebar]","[class.mc-layout-sidebar-collapsed]","[style.flex]","[style.max-width.px]","[style.min-width.px]","[style.width.px]","Host","McLayoutModule","listSelection","checkboxPosition","_reportValueChange","wasSelected_1","_removeOptionFromList","getLabel","_text","McListSelectionChange","McListSelectionBase","horizontal","_modelChanges","_tempValues","_setOptionsFromValues","_i","_c","selectAll","deselectAll","values","getSelectedOptionValues","listOption","optionIndex","setPreviousItemActive","setNextItemActive","_getOptionByValue","Boolean","McIconButton","McButton","McAnchor","McButtonCSSStyler","McIconButtonCSSStyler","McCard","readonly","selectedChange","_tabIndex","hostElement","onClick","[class.mc-card_readonly]","[class.mc-card_selected]","McCardModule","MC_CHECKBOX_CLICK_ACTION","MC_CHECKBOX_CONTROL_VALUE_ACCESSOR","McCheckbox","TransitionCheckState","McCheckboxChange","McCheckboxBase","_McCheckboxMixinBase","_clickAction","indeterminateChange","_currentAnimationClass","_currentCheckState","Init","_controlValueAccessorChangeFn","_indeterminate","focusOrigin","_onInputFocusChange","changed","_transitionCheckState","Indeterminate","Checked","Unchecked","indeterminate","newState","oldState","[class.mc-indeterminate]","[class.mc-checkbox-label-before]","MC_CHECKBOX_REQUIRED_VALIDATOR","McCheckboxRequiredValidator","[attr.required]","CheckboxRequiredValidator","McCheckboxModule","McDivider","_vertical","_inset","[attr.aria-orientation]","[class.mc-divider-vertical]","[class.mc-divider-inset]","McDividerModule","McDropdownContent","_template","_componentFactoryResolver","_appRef","_injector","_viewContainerRef","_document","_attached","context","_portal","_outlet","DomPortalOutlet","createElement","parentNode","insertBefore","outletElement","isAttached","ApplicationRef","MC_DROPDOWN_PANEL","McDropdownItemBase","_McDropdownItemMixinBase","McDropdownItem","_parentDropdownPanel","addItem","removeItem","_getTabIndex","_checkDisabled","textNodeType","TEXT_NODE","output","childNodes","length_1","nodeType","mcDropdownAnimations","transformDropdown","fadeInItems","MC_DROPDOWN_DEFAULT_OPTIONS","providedIn","MC_DROPDOWN_DEFAULT_OPTIONS_FACTORY","McDropdown","_defaultOptions","_classList","_panelAnimationState","_animationDone","backdropClass","closed","_xPosition","xPosition","_yPosition","yPosition","_items","_itemChanges","_tabSubscription","_overlapTrigger","overlapTrigger","_hasBackdrop","hasBackdrop","McDropdown_1","throwMcDropdownInvalidPositionX","setPositionClasses","throwMcDropdownInvalidPositionY","classes","obj","className","setFocusOrigin","focusFirstItem","lazyContent","resetActiveItem","posX","posY","_startAnimation","_resetAnimation","_onAnimationDone","_isAnimating","MC_DROPDOWN_SCROLL_STRATEGY","MC_DROPDOWN_SCROLL_STRATEGY_FACTORY_PROVIDER","MC_DROPDOWN_SCROLL_STRATEGY_FACTORY","McDropdownTrigger","_overlay","_openedBy","dropdownOpened","dropdownClosed","_overlayRef","_opened","_closeSubscription","_hoverSubscription","dropdown","_check","_cleanUpSubscriptions","_createOverlay","_setPosition","_closingActions","_init","opened","_reset","_setIsOpened","isOpen","throwMcDropdownMissingError","templateRef","config","_getOverlayConfig","_subscribeToPositions","OverlayConfig","withLockedPosition","originFallbackX","overlayFallbackY","originFallbackY","_d","overlayFallbackX","offsetY","backdrop","backdropClick","(touchstart)","McDropdownModule","__extends","d","__","constructor","extendStatics","__decorate","decorators","desc","r","getOwnPropertyDescriptor","Reflect","decorate","__param","paramIndex","decorator","__metadata","metadataKey","metadataValue","metadata","isBoolean","val","MC_SANITY_CHECKS_FACTORY","base","class_1","defaultColor","Default","_color","colorPalette","defaultTabIndex","errorState","matcher","errorStateMatcher","isErrorState","optionsArray","groups","groupCounter","optionHeight","currentScrollPosition","optionOffset","arrayMap","array","iteratee","baseValues","object","props","scrollStrategies","reposition","inputType","sanitizeNumber","isFinite","getPrecision","arr","pow","value1","value2","precision","scrollThrottle","setPrototypeOf","__proto__","p","__assign","s","n","MC_SANITY_CHECKS","_sanityChecksEnabled","_hasDoneGlobalChecks","_window","_areChecksEnabled","_checkDoctypeIsDefined","_checkThemeIsPresent","_isTestEnv","doctype","testElement","computedStyle","display","removeChild","BidiModule","_setLineClass","count","_resetClasses","_setClass","isAdd","ShowOnDirtyErrorStateMatcher","form","invalid","dirty","submitted","touched","McPseudoCheckbox","McPseudoCheckboxModule","scrollbarMeasure","overflow","initScrollBarWidth","_scrollbarWidth","scrollDiv","scrollProp","clientWidth","McOptgroupBase","_McOptgroupMixinBase","_uniqueOptgroupIdCounter","[class.mc-optgroup-disabled]","[attr.aria-labelledby]","_uniqueIdCounter","McOptionSelectionChange","_parent","_active","_mostRecentViewValue","disableRipple","_emitSelectionChangeEvent","setActiveStyles","setInactiveStyles","ngAfterViewChecked","[class.mc-option-multiple]","MC_LABEL_GLOBAL_OPTIONS","topCenter","topLeft","topRight","rightTop","rightBottom","bottomCenter","bottomLeft","bottomRight","leftTop","leftBottom","McIconCSSStyler","McIconBase","_McIconMixinBase","Empty","iconName","queries","McButtonBase","_McButtonMixinBase","_haltDisabledEvents"],"mappings":"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"}