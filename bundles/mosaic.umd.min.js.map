{"version":3,"file":"mosaic.umd.min.js","sources":["../../src/lib/tooltip/tooltip.component.ts","../../src/lib/tooltip/tooltip.module.ts","../../src/lib/version.ts","../../src/lib/timepicker/timepicker.constants.ts","../../src/lib/select/select.component.ts","../../src/lib/select/select.module.ts","../../src/lib/splitter/splitter.component.ts","../../src/lib/splitter/splitter.module.ts","../../src/lib/toggle/toggle.component.ts","../../src/lib/toggle/toggle.module.ts","../../src/lib/tree/tree-selection.ts","../../src/lib/tree/tree.module.ts","../../src/lib/tree/data-source/flat-data-source.ts","../../src/lib/tree/data-source/nested-data-source.ts","../../src/lib/tag/tag.component.ts","../../src/lib/tag/tag.module.ts","../../src/lib/timepicker/timepicker.ts","../../src/lib/timepicker/timepicker.module.ts","../../src/lib/select/select-animations.ts","../../src/lib/navbar/navbar.component.ts","../../src/lib/navbar/navbar.module.ts","../../src/lib/progress-bar/progress-bar.component.ts","../../src/lib/progress-bar/progress-bar.module.ts","../../src/lib/progress-spinner/progress-spinner.component.ts","../../src/lib/progress-spinner/progress-spinner.module.ts","../../src/lib/radio/radio.component.ts","../../src/lib/radio/radio.module.ts","../../src/lib/tree/node.ts","../../src/lib/tree/padding.ts","../../src/lib/list/list-selection.component.ts","../../src/lib/list/list.component.ts","../../src/lib/list/list.module.ts","../../src/lib/link/link.component.ts","../../src/lib/link/link.module.ts","../../src/lib/modal/modal-control.service.ts","../../src/lib/modal/modal-ref.class.ts","../../src/lib/modal/modal-util.ts","../../src/lib/modal/modal.component.ts","../../src/lib/modal/css-unit.pipe.ts","../../src/lib/modal/modal.service.ts","../../src/lib/modal/modal.module.ts","../../src/lib/form-field/form-field.ts","../../src/lib/form-field/form-field.module.ts","../../src/lib/input/input-value-accessor.ts","../../src/lib/input/stepperUtils.ts","../../src/lib/input/input.ts","../../src/lib/input/input-number-validators.ts","../../src/lib/input/input.module.ts","../../src/lib/layout/content.component.ts","../../src/lib/layout/footer.component.ts","../../src/lib/layout/header.component.ts","../../src/lib/layout/layout.component.ts","../../src/lib/layout/sidebar.component.ts","../../src/lib/layout/layout.module.ts","../../src/lib/button/button.component.ts","../../src/lib/button/button.module.ts","../../src/lib/card/card.component.ts","../../src/lib/card/card.module.ts","../../src/lib/checkbox/checkbox-config.ts","../../src/lib/checkbox/checkbox.ts","../../src/lib/checkbox/checkbox-required-validator.ts","../../src/lib/checkbox/checkbox-module.ts","../../src/lib/divider/divider.component.ts","../../src/lib/divider/divider.module.ts","../../src/lib/dropdown/dropdown-content.ts","../../src/lib/dropdown/dropdown-panel.ts","../../src/lib/dropdown/dropdown-item.ts","../../src/lib/dropdown/dropdown-animations.ts","../../src/lib/dropdown/dropdown.component.ts","../../src/lib/dropdown/dropdown-trigger.ts","../../src/lib/dropdown/dropdown.module.ts","../../src/lib/form-field/cleaner.ts","../../src/lib/form-field/form-field-control.ts","../../src/lib/form-field/form-field-number-control.ts","../../src/lib/form-field/hint.ts","../../src/lib/form-field/prefix.ts","../../src/lib/form-field/stepper.ts","../../src/lib/form-field/suffix.ts","../../node_modules/tslib/tslib.es6.js","../../src/lib/core/utils/utils.ts","../../src/lib/core/common-behaviors/common-module.ts","../../src/lib/core/common-behaviors/disabled.ts","../../src/lib/core/common-behaviors/color.ts","../../src/lib/core/common-behaviors/tabindex.ts","../../src/lib/core/common-behaviors/error-state.ts","../../src/lib/core/option/option.ts","../../src/lib/core/overlay/overlay-position-map.ts","../../src/lib/dropdown/dropdown-errors.ts","../../src/lib/form-field/form-field-errors.ts","../../src/lib/input/input-errors.ts","../../src/lib/select/select-errors.ts","../../src/lib/core/line/line.ts","../../src/lib/core/error/error-options.ts","../../src/lib/core/selection/pseudo-checkbox/pseudo-checkbox.ts","../../src/lib/core/selection/index.ts","../../src/lib/core/services/measure-scrollbar.service.ts","../../src/lib/core/option/optgroup.ts","../../src/lib/core/option/index.ts","../../src/lib/core/label/label-options.ts","../../src/lib/core/animation/fade-animations.ts","../../src/lib/icon/icon.component.ts","../../src/lib/icon/icon.module.ts"],"sourcesContent":["import {\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    Directive,\n    ElementRef,\n    EventEmitter,\n    HostBinding,\n    Inject,\n    InjectionToken,\n    Input,\n    NgZone,\n    OnDestroy,\n    OnInit,\n    Optional,\n    Output,\n    TemplateRef,\n    ViewContainerRef,\n    ViewEncapsulation\n} from '@angular/core';\nimport { Directionality } from '@ptsecurity/cdk/bidi';\nimport { coerceBooleanProperty } from '@ptsecurity/cdk/coercion';\nimport { ESCAPE } from '@ptsecurity/cdk/keycodes';\nimport {\n    ConnectedOverlayPositionChange,\n    ConnectionPositionPair,\n    Overlay,\n    OverlayRef,\n    ScrollDispatcher,\n    IScrollStrategy,\n    FlexibleConnectedPositionStrategy,\n    IOverlayConnectionPosition,\n    IOriginConnectionPosition,\n    HorizontalConnectionPos,\n    VerticalConnectionPos\n} from '@ptsecurity/cdk/overlay';\nimport { ComponentPortal } from '@ptsecurity/cdk/portal';\nimport {\n    fadeAnimation,\n    DEFAULT_4_POSITIONS,\n    POSITION_MAP\n} from '@ptsecurity/mosaic/core';\nimport { BehaviorSubject, Observable, Subject } from 'rxjs';\nimport { distinctUntilChanged, takeUntil } from 'rxjs/operators';\n\n\n@Component({\n    selector: 'mc-tooltip',\n    animations: [ fadeAnimation ],\n    templateUrl: './tooltip.component.html',\n    preserveWhitespaces: false,\n    styleUrls: ['./tooltip.css'],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    host: {\n        '(body:click)': 'this._handleBodyInteraction()'\n    }\n})\n\nexport class McToolTipComponent {\n    _prefix = 'mc-tooltip_placement';\n    _positions: ConnectionPositionPair[] = [ ...DEFAULT_4_POSITIONS ];\n    _classMap = {};\n    _placement = 'top';\n    _trigger = 'hover';\n    isTitleString: boolean;\n    visibleSource = new BehaviorSubject<boolean>(false);\n    $visible: Observable<boolean> = this.visibleSource.asObservable();\n    _title: string | TemplateRef<void>;\n    showTId: number;\n    hideTId: number;\n    availablePositions: any;\n\n    @Output() mcVisibleChange: EventEmitter<boolean> = new EventEmitter();\n\n    @Input() mcMouseEnterDelay = 400;\n\n    @Input() mcMouseLeaveDelay = 0;\n\n    @Input()\n    set mcTitle(value: string | TemplateRef<void>) {\n        this.isTitleString = !(value instanceof TemplateRef);\n\n        if (this.isTitleString) {\n            this._title = value;\n        }\n    }\n\n    get mcTitle(): string | TemplateRef<void> {\n        return this._title;\n    }\n\n    @Input()\n    set mcVisible(value: boolean) {\n        const visible = coerceBooleanProperty(value);\n\n        if (this.visibleSource.value !== visible) {\n            this.visibleSource.next(visible);\n            this.mcVisibleChange.emit(visible);\n        }\n    }\n\n    get mcVisible(): boolean {\n        return this.visibleSource.value;\n    }\n\n    @Input()\n    set mcTrigger(value: string) {\n        this._trigger = value;\n    }\n\n    get mcTrigger(): string {\n        return this._trigger;\n    }\n\n    @Input()\n    set mcPlacement(value: string) {\n        if (value !== this._placement) {\n            this._placement = value;\n            this._positions.unshift(POSITION_MAP[ this.mcPlacement ]);\n        } else if (!value) {\n            this._placement = 'top';\n        }\n    }\n    get mcPlacement(): string {\n        return this._placement;\n    }\n\n    /** Subject for notifying that the tooltip has been hidden from the view */\n    private readonly _onHide: Subject<any> = new Subject();\n    private _closeOnInteraction: boolean = false;\n\n    constructor(public cdr: ChangeDetectorRef) {\n        this.availablePositions = POSITION_MAP;\n    }\n\n    show(): void {\n        if (this.hideTId) {\n            clearTimeout(this.hideTId);\n        }\n\n        if (!this.isContentEmpty()) {\n            this._closeOnInteraction = true;\n            this.showTId = setTimeout(() => {\n                this.mcVisible = true;\n                this.mcVisibleChange.emit(true);\n\n                // Mark for check so if any parent component has set the\n                // ChangeDetectionStrategy to OnPush it will be checked anyways\n                this._markForCheck();\n            }, this.mcMouseEnterDelay);\n        }\n    }\n\n    hide(): void {\n        if (this.showTId) {\n            clearTimeout(this.showTId);\n        }\n\n        this.hideTId = setTimeout(() => {\n            this.mcVisible = false;\n            this.mcVisibleChange.emit(false);\n            this._onHide.next();\n\n            // Mark for check so if any parent component has set the\n            // ChangeDetectionStrategy to OnPush it will be checked anyways\n            this._markForCheck();\n        }, this.mcMouseLeaveDelay);\n    }\n\n    setClassMap(): void {\n        this._classMap = {\n            [ `${this._prefix}-${this._placement}` ]: true\n        };\n    }\n\n    isContentEmpty(): boolean {\n        return this.isTitleString ? (this.mcTitle === '' || !this.mcTitle) : false;\n    }\n\n    /** Returns an observable that notifies when the tooltip has been hidden from view. */\n    afterHidden(): Observable<void> {\n        return this._onHide.asObservable();\n    }\n\n    _markForCheck(): void {\n        this.cdr.markForCheck();\n    }\n\n    _handleBodyInteraction(): void {\n        if (this._closeOnInteraction) {\n            this.hide();\n        }\n    }\n}\n\nexport const MC_TOOLTIP_SCROLL_STRATEGY =\n    new InjectionToken<() => IScrollStrategy>('mc-tooltip-scroll-strategy');\n\n/** @docs-private */\nexport function MC_TOOLTIP_SCROLL_STRATEGY_FACTORY(overlay: Overlay): () => IScrollStrategy {\n    return () => overlay.scrollStrategies.reposition({scrollThrottle: 20});\n}\n\n/** @docs-private */\nexport const MC_TOOLTIP_SCROLL_STRATEGY_FACTORY_PROVIDER = {\n    provide: MC_TOOLTIP_SCROLL_STRATEGY,\n    deps: [Overlay],\n    useFactory: MC_TOOLTIP_SCROLL_STRATEGY_FACTORY\n};\n\n/** Creates an error to be thrown if the user supplied an invalid tooltip position. */\nexport function getMcTooltipInvalidPositionError(position: string) {\n    return Error(`McTooltip position \"${position}\" is invalid.`);\n}\n\nconst VIEWPORT_MARGIN: number = 8;\n\n@Directive({\n    selector: '[mc-tooltip]',\n    host: {\n        '(keydown)': 'handleKeydown($event)',\n        '(touchend)': 'handleTouchend()'\n    }\n})\n\nexport class McTooltipDirective implements OnInit, OnDestroy {\n    isTooltipOpen: boolean = false;\n    isDynamicTooltip = false;\n    parentDisabled: boolean = false;\n    _title: string;\n    _disabled: boolean = false;\n    _mouseEnterDelay: number;\n    _mouseLeaveDelay: number;\n    _visible: boolean;\n    _trigger: string = 'hover';\n    _placement: string = 'top';\n    _overlayRef: OverlayRef | null;\n    _portal: ComponentPortal<McToolTipComponent>;\n    availablePositions: any;\n    tooltip: McToolTipComponent | null;\n\n    @Output() mcVisibleChange = new EventEmitter<boolean>();\n    private $unsubscribe = new Subject<void>();\n\n    @Input('mc-tooltip')\n    set mcTitle(title: string) {\n        this._title = title;\n        this.updateCompValue('mcTitle', title);\n    }\n\n    get mcTitle(): string {\n        return this._title;\n    }\n\n    @Input('mcTitle')\n    set setTitle(title: string) {\n        this.mcTitle = title;\n    }\n\n    @Input('mcTooltipDisabled')\n    get disabled(): boolean { return this._disabled; }\n    set disabled(value) {\n        this._disabled = coerceBooleanProperty(value);\n    }\n\n    @Input('mcMouseEnterDelay')\n    set mcMouseEnterDelay(value: number) {\n        this._mouseEnterDelay = value;\n        this.updateCompValue('mcMouseEnterDelay', value);\n    }\n\n    get mcMouseEnterDelay(): number {\n        return this._mouseEnterDelay;\n    }\n\n    @Input('mcMouseLeaveDelay')\n    set mcMouseLeaveDelay(value: number) {\n        this._mouseLeaveDelay = value;\n        this.updateCompValue('mcMouseLeaveDelay', value);\n    }\n\n    get mcMouseLeaveDelay(): number {\n        return this._mouseEnterDelay;\n    }\n\n    @Input('mcVisible')\n    set mcVisible(value: boolean) {\n        this._visible = value;\n        this.updateCompValue('mcVisible', value);\n    }\n\n    get mcVisible(): boolean {\n        return this._visible;\n    }\n\n    @Input('mcTrigger')\n    set mcTrigger(value: string) {\n        this._trigger = value;\n        this.updateCompValue('mcTrigger', value);\n    }\n\n    get mcTrigger(): string {\n        return this._trigger;\n    }\n\n    @Input('mcPlacement')\n    set mcPlacement(value: string) {\n        if (value) {\n            this._placement = value;\n            this.updateCompValue('mcPlacement', value);\n        } else {\n            this._placement = 'top';\n        }\n    }\n\n    get mcPlacement(): string {\n        return this._placement;\n    }\n\n    @HostBinding('class.mc-tooltip-open')\n    get isOpen(): boolean {\n        return this.isTooltipOpen;\n    }\n\n    @HostBinding('class.disabled')\n    get isParentDisabled(): boolean {\n        return this.parentDisabled;\n    }\n\n    private manualListeners = new Map<string, EventListenerOrEventListenerObject>();\n    private readonly _destroyed = new Subject<void>();\n\n    constructor(\n        private _overlay: Overlay,\n        private elementRef: ElementRef,\n        private _ngZone: NgZone,\n        private _scrollDispatcher: ScrollDispatcher,\n        private hostView: ViewContainerRef,\n        @Inject(MC_TOOLTIP_SCROLL_STRATEGY) private _scrollStrategy,\n        @Optional() private _dir: Directionality) {\n            this.availablePositions = POSITION_MAP;\n        }\n\n    /** Create the overlay config and position strategy */\n    _createOverlay(): OverlayRef {\n        if (this._overlayRef) {\n            return this._overlayRef;\n        }\n\n        // Create connected position strategy that listens for scroll events to reposition.\n        const strategy = this._overlay.position()\n            .flexibleConnectedTo(this.elementRef)\n            .withTransformOriginOn('.mc-tooltip')\n            .withFlexibleDimensions(false)\n            .withViewportMargin(VIEWPORT_MARGIN)\n            .withPositions([ ...DEFAULT_4_POSITIONS ]);\n\n        const scrollableAncestors = this._scrollDispatcher\n            .getAncestorScrollContainers(this.elementRef);\n\n        strategy.withScrollableContainers(scrollableAncestors);\n\n        strategy.positionChanges.pipe(takeUntil(this._destroyed)).subscribe((change) => {\n            if (this.tooltip) {\n                this.onPositionChange(change);\n                if (change.scrollableViewProperties.isOverlayClipped && this.tooltip.mcVisible) {\n                    // After position changes occur and the overlay is clipped by\n                    // a parent scrollable then close the tooltip.\n                    this._ngZone.run(() => this.hide());\n                }\n            }\n        });\n\n        this._overlayRef = this._overlay.create({\n            direction: this._dir,\n            positionStrategy: strategy,\n            panelClass: 'mc-tooltip-panel',\n            scrollStrategy: this._scrollStrategy()\n        });\n\n        this._updatePosition();\n\n        this._overlayRef.detachments()\n            .pipe(takeUntil(this._destroyed))\n            .subscribe(() => this._detach());\n\n        return this._overlayRef;\n    }\n\n    _detach() {\n        if (this._overlayRef && this._overlayRef.hasAttached()) {\n            this._overlayRef.detach();\n        }\n\n        this.tooltip = null;\n    }\n\n    onPositionChange($event: ConnectedOverlayPositionChange): void {\n        let updatedPlacement = this.mcPlacement;\n        Object.keys(this.availablePositions).some((key) => {\n            if ($event.connectionPair.originX === this.availablePositions[key].originX &&\n                $event.connectionPair.originY === this.availablePositions[key].originY &&\n                $event.connectionPair.overlayX === this.availablePositions[key].overlayX &&\n                $event.connectionPair.overlayY === this.availablePositions[key].overlayY) {\n                updatedPlacement = key;\n\n                return true;\n            }\n\n            return false;\n        });\n        this.updateCompValue('mcPlacement', updatedPlacement);\n\n        if (this.tooltip) {\n            this.tooltip.setClassMap();\n        }\n\n        this.handlePositioningUpdate();\n    }\n\n    handlePositioningUpdate() {\n        if (!this._overlayRef) {\n            this._overlayRef = this._createOverlay();\n        }\n        if (this.mcPlacement === 'right' || this.mcPlacement === 'left') {\n            const pos =\n                (this._overlayRef.overlayElement.clientHeight -\n                    this.hostView.element.nativeElement.clientHeight) / 2; // tslint:disable-line\n            const currentContainer = this._overlayRef.overlayElement.style.top || '0px';\n            this._overlayRef.overlayElement.style.top =\n                `${parseInt(currentContainer.split('px')[0], 10) + pos - 1}px`;\n            // TODO: обновлять положение стрелки\\указателя\\\"дятла\"\n        }\n    }\n\n    // tslint:disable-next-line:no-any\n    updateCompValue(key: string, value: any): void {\n        if (this.isDynamicTooltip && value) {\n            if (this.tooltip) {\n                this.tooltip[key] = value;\n            }\n        }\n    }\n\n    ngOnInit(): void {\n        if (this.mcTrigger === 'hover') {\n\n            this.manualListeners\n                .set('mouseenter', () => this.show())\n                .set('mouseleave', () => this.hide())\n                .forEach((listener, event) => this.elementRef.nativeElement.addEventListener(event, listener));\n        }\n\n        if (this.mcTrigger === 'focus') {\n\n            this.manualListeners\n                .set('focus', () => this.show())\n                .set('blur', () => this.hide())\n                .forEach((listener, event) => this.elementRef.nativeElement.addEventListener(event, listener));\n        }\n    }\n\n    ngOnDestroy(): void {\n        if (this._overlayRef) {\n            this._overlayRef.dispose();\n        }\n        this.manualListeners.forEach((listener, event) =>\n            this.elementRef.nativeElement.removeEventListener(event, listener));\n        this.manualListeners.clear();\n\n        this.$unsubscribe.next();\n        this.$unsubscribe.complete();\n    }\n\n    handleKeydown(e: KeyboardEvent) {\n        if (this.isTooltipOpen && e.keyCode === ESCAPE) { // tslint:disable-line\n            this.hide();\n        }\n    }\n\n    handleTouchend() {\n        this.hide();\n    }\n\n    /** Updates the position of the current tooltip. */\n    _updatePosition() {\n        if (!this._overlayRef) {\n            this._overlayRef = this._createOverlay();\n        }\n        const position =\n            this._overlayRef.getConfig().positionStrategy as FlexibleConnectedPositionStrategy;\n        const origin = this._getOrigin();\n        const overlay = this._getOverlayPosition();\n\n        position.withPositions([\n            {...origin.main, ...overlay.main},\n            {...origin.fallback, ...overlay.fallback}\n        ]);\n    }\n\n    /**\n     * Returns the origin position and a fallback position based on the user's position preference.\n     * The fallback position is the inverse of the origin (e.g. `'below' -> 'above'`).\n     */\n    _getOrigin(): {main: IOriginConnectionPosition; fallback: IOriginConnectionPosition} {\n        const position = this.mcPlacement;\n        const isLtr = !this._dir || this._dir.value === 'ltr';\n        let originPosition: IOriginConnectionPosition;\n\n        if (position === 'top' || position === 'bottom') {\n            originPosition = {originX: 'center', originY: position === 'top' ? 'top' : 'bottom'};\n        } else if (\n            position === 'top' ||\n            (position === 'left' && isLtr) ||\n            (position === 'right' && !isLtr)) {\n            originPosition = {originX: 'start', originY: 'center'};\n        } else if (\n            position === 'bottom' ||\n            (position === 'right' && isLtr) ||\n            (position === 'left' && !isLtr)) {\n            originPosition = {originX: 'end', originY: 'center'};\n        } else {\n            throw getMcTooltipInvalidPositionError(position);\n        }\n\n        const {x, y} = this._invertPosition(originPosition.originX, originPosition.originY);\n\n        return {\n            main: originPosition,\n            fallback: {originX: x, originY: y}\n        };\n    }\n\n    /** Returns the overlay position and a fallback position based on the user's preference */\n    _getOverlayPosition(): {main: IOverlayConnectionPosition; fallback: IOverlayConnectionPosition} {\n        const position = this.mcPlacement;\n        const isLtr = !this._dir || this._dir.value === 'ltr';\n        let overlayPosition: IOverlayConnectionPosition;\n\n        if (position === 'top') {\n            overlayPosition = {overlayX: 'center', overlayY: 'bottom'};\n        } else if (position === 'bottom') {\n            overlayPosition = {overlayX: 'center', overlayY: 'top'};\n        } else if (\n            position === 'top' ||\n            (position === 'left' && isLtr) ||\n            (position === 'right' && !isLtr)) {\n            overlayPosition = {overlayX: 'end', overlayY: 'center'};\n        } else if (\n            position === 'bottom' ||\n            (position === 'right' && isLtr) ||\n            (position === 'left' && !isLtr)) {\n            overlayPosition = {overlayX: 'start', overlayY: 'center'};\n        } else {\n            throw getMcTooltipInvalidPositionError(position);\n        }\n\n        const {x, y} = this._invertPosition(overlayPosition.overlayX, overlayPosition.overlayY);\n\n        return {\n            main: overlayPosition,\n            fallback: {overlayX: x, overlayY: y}\n        };\n    }\n\n    /** Inverts an overlay position. */\n    private _invertPosition(x: HorizontalConnectionPos, y: VerticalConnectionPos) {\n        let newX: HorizontalConnectionPos = x;\n        let newY: VerticalConnectionPos = y;\n        if (this.mcPlacement === 'top' || this.mcPlacement === 'bottom') {\n            if (y === 'top') {\n                newY = 'bottom';\n            } else if (y === 'bottom') {\n                newY = 'top';\n            }\n        } else {\n            if (x === 'end') {\n                newX = 'start';\n            } else if (x === 'start') {\n                newX = 'end';\n            }\n        }\n\n        return {x: newX, y: newY};\n    }\n\n    private show(): void {\n        if (!this.disabled) {\n            if (!this.tooltip) {\n                const overlayRef = this._createOverlay();\n                this._detach();\n                this._portal = this._portal || new ComponentPortal(McToolTipComponent, this.hostView);\n                this.tooltip = overlayRef.attach(this._portal).instance;\n                this.tooltip.afterHidden()\n                    .pipe(takeUntil(this._destroyed))\n                    .subscribe(() => this._detach());\n                this.isDynamicTooltip = true;\n                const properties = [\n                    'mcTitle',\n                    'mcMouseEnterDelay',\n                    'mcMouseLeaveDelay',\n                    'mcVisible',\n                    'mcTrigger',\n                    'mcPlacement' ];\n                properties.forEach((property) => this.updateCompValue(property, this[ property ]));\n                this.tooltip.mcVisibleChange.pipe(takeUntil(this.$unsubscribe), distinctUntilChanged())\n                    .subscribe((data) => {\n                        this._visible = data;\n                        this.mcVisibleChange.emit(data);\n                    });\n            }\n            this._updatePosition();\n            this.tooltip.show();\n            this.isTooltipOpen = true;\n        }\n    }\n\n    private hide(): void {\n        if (this.tooltip) {\n            this.tooltip.hide();\n            this.isTooltipOpen = false;\n        }\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { OverlayModule } from '@ptsecurity/cdk/overlay';\n\nimport {\n    McToolTipComponent,\n    McTooltipDirective,\n    MC_TOOLTIP_SCROLL_STRATEGY_FACTORY_PROVIDER\n} from './tooltip.component';\n\n\n@NgModule({\n    declarations: [ McToolTipComponent, McTooltipDirective ],\n    exports: [ McToolTipComponent, McTooltipDirective ],\n    imports: [ BrowserAnimationsModule, CommonModule, OverlayModule ],\n    providers: [MC_TOOLTIP_SCROLL_STRATEGY_FACTORY_PROVIDER],\n    entryComponents: [ McToolTipComponent ]\n})\nexport class McToolTipModule {\n}\n","import { Version } from '@angular/core';\n\n\nexport const VERSION = new Version('0.0.1-97e3a31');\n","export enum TimeParts {\n    hours,\n    minutes,\n    seconds\n}\n\nexport enum TimeFormats {\n    HHmmss = 'HH:mm:ss',\n    HHmm = 'HH:mm'\n}\n\nexport const TIMEFORMAT_PLACEHOLDERS: { [timeFormat: string]: string } = {\n    [TimeFormats.HHmmss]: '  :  :  ',\n    [TimeFormats.HHmm]: '  :  '\n};\n\nexport const DEFAULT_TIME_FORMAT: TimeFormats = TimeFormats.HHmm;\n\nexport const HOURS_MINUTES_SECONDS_REGEXP =\n    new RegExp(/^([0-9]|0[0-9]|1[0-9]|2[0-3]):([0-5][0-9]|[0-9]):([0-5][0-9]|[0-9])?$/);\nexport const HOURS_MINUTES_REGEXP = /^([0-9]|0[0-9]|1[0-9]|2[0-3]):([0-5][0-9]|[0-9])?$/;\nexport const HOURS_ONLY_REGEXP = /^([0-9]|0[0-9]|1[0-9]|2[0-3]):?$/;\n\nexport const SECONDS_PER_MINUTE: number = 59;\nexport const MINUTES_PER_HOUR: number = 59;\nexport const HOURS_PER_DAY: number = 23;\n\n// TODO Move it to common CDK\nexport const ARROW_UP_KEYCODE: string = 'ArrowUp';\nexport const ARROW_DOWN_KEYCODE: string = 'ArrowDown';\nexport const ARROW_LEFT_KEYCODE: string = 'ArrowLeft';\nexport const ARROW_RIGHT_KEYCODE: string = 'ArrowRight';\n","/* tslint:disable:no-empty */\n\nimport { ActiveDescendantKeyManager } from '@ptsecurity/cdk/a11y';\nimport { Directionality } from '@ptsecurity/cdk/bidi';\nimport { coerceBooleanProperty } from '@ptsecurity/cdk/coercion';\nimport { SelectionModel } from '@ptsecurity/cdk/collections';\nimport {\n    DOWN_ARROW,\n    END,\n    ENTER,\n    HOME,\n    LEFT_ARROW,\n    RIGHT_ARROW,\n    SPACE,\n    UP_ARROW,\n    A\n} from '@ptsecurity/cdk/keycodes';\nimport {\n    CdkConnectedOverlay,\n    Overlay,\n    RepositionScrollStrategy,\n    IScrollStrategy,\n    ViewportRuler\n} from '@ptsecurity/cdk/overlay';\n\nimport {\n    AfterContentInit, AfterViewInit,\n    Attribute,\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    ContentChild,\n    ContentChildren,\n    Directive,\n    DoCheck,\n    ElementRef,\n    EventEmitter,\n    Inject,\n    InjectionToken,\n    Input,\n    isDevMode,\n    NgZone,\n    OnChanges,\n    OnDestroy,\n    OnInit,\n    Optional,\n    Output,\n    QueryList, Renderer2,\n    Self,\n    SimpleChanges,\n    ViewChild, ViewChildren,\n    ViewEncapsulation\n} from '@angular/core';\nimport { ControlValueAccessor, FormGroupDirective, NgControl, NgForm } from '@angular/forms';\nimport {\n    _countGroupLabelsBeforeOption,\n    _getOptionScrollPosition,\n    CanDisable,\n    CanDisableCtor,\n    CanUpdateErrorState,\n    CanUpdateErrorStateCtor,\n    ErrorStateMatcher,\n    HasTabIndex, HasTabIndexCtor,\n    MC_OPTION_PARENT_COMPONENT,\n    McOptgroup,\n    McOption,\n    McOptionSelectionChange,\n    mixinDisabled,\n    mixinErrorState,\n    mixinTabIndex\n} from '@ptsecurity/mosaic/core';\n\nimport { McFormField, McFormFieldControl } from '@ptsecurity/mosaic/form-field';\nimport { McTag } from '@ptsecurity/mosaic/tag';\n\n\nimport { defer, merge, Observable, Subject } from 'rxjs';\nimport {\n    filter,\n    map,\n    startWith,\n    switchMap,\n    take,\n    takeUntil,\n    distinctUntilChanged\n} from 'rxjs/operators';\n\nimport {\n    getMcSelectDynamicMultipleError,\n    getMcSelectNonArrayValueError,\n    getMcSelectNonFunctionValueError\n} from './select-errors';\n\nimport { mcSelectAnimations } from './select-animations';\n\n\nlet nextUniqueId = 0;\n\n/**\n * The following style constants are necessary to save here in order\n * to properly calculate the alignment of the selected option over\n * the trigger element.\n */\n\n/** The max height of the select's overlay panel */\nexport const SELECT_PANEL_MAX_HEIGHT = 224;\n\n/** The panel's padding on the x-axis */\nexport const SELECT_PANEL_PADDING_X = 1;\n\n/** The panel's x axis padding if it is indented (e.g. there is an option group). */\n/* tslint:disable-next-line:no-magic-numbers */\nexport const SELECT_PANEL_INDENT_PADDING_X = SELECT_PANEL_PADDING_X * 2;\n\n/** The height of the select items in `em` units. */\nexport const SELECT_ITEM_HEIGHT_EM = 2;\n\n/**\n * The select panel will only \"fit\" inside the viewport if it is positioned at\n * this value or more away from the viewport boundary.\n */\nexport const SELECT_PANEL_VIEWPORT_PADDING = 8;\n\n/** Injection token that determines the scroll handling while a select is open. */\nexport const MC_SELECT_SCROLL_STRATEGY =\n    new InjectionToken<() => IScrollStrategy>('mc-select-scroll-strategy');\n\n/** @docs-private */\nexport function MC_SELECT_SCROLL_STRATEGY_PROVIDER_FACTORY(overlay: Overlay):\n    () => RepositionScrollStrategy {\n    return () => overlay.scrollStrategies.reposition();\n}\n\n/** @docs-private */\nexport const MC_SELECT_SCROLL_STRATEGY_PROVIDER = {\n    provide: MC_SELECT_SCROLL_STRATEGY,\n    deps: [Overlay],\n    useFactory: MC_SELECT_SCROLL_STRATEGY_PROVIDER_FACTORY\n};\n\n/** Change event object that is emitted when the select value has changed. */\nexport class McSelectChange {\n    constructor(\n        /** Reference to the select that emitted the change event. */\n        public source: McSelect,\n        /** Current value of the select that emitted the event. */\n        public value: any) {\n    }\n}\n\n// Boilerplate for applying mixins to McSelect.\n/** @docs-private */\nexport class McSelectBase {\n    constructor(\n        public _elementRef: ElementRef,\n        public _defaultErrorStateMatcher: ErrorStateMatcher,\n        public _parentForm: NgForm,\n        public _parentFormGroup: FormGroupDirective,\n        public ngControl: NgControl\n    ) {}\n}\n\nexport const _McSelectMixinBase:\n    CanDisableCtor &\n    HasTabIndexCtor &\n    CanUpdateErrorStateCtor & typeof McSelectBase\n    = mixinTabIndex(mixinDisabled(mixinErrorState(McSelectBase)));\n\n\n/**\n * Allows the user to customize the trigger that is displayed when the select has a value.\n */\n@Directive({ selector: 'mc-select-trigger' })\nexport class McSelectTrigger {}\n\n\n@Component({\n    selector: 'mc-select',\n    exportAs: 'mcSelect',\n    templateUrl: 'select.html',\n    styleUrls: ['./select.css'],\n    inputs: ['disabled', 'tabIndex'],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    host: {\n        '[attr.id]': 'id',\n        '[attr.tabindex]': 'tabIndex',\n        class: 'mc-select',\n        '[class.mc-disabled]': 'disabled',\n        '[class.mc-select-invalid]': 'errorState',\n        '[class.mc-select-required]': 'required',\n        '(keydown)': '_handleKeydown($event)',\n        '(focus)': '_onFocus()',\n        '(blur)': '_onBlur()',\n        '(window:resize)': '_calculateHiddenItems()'\n    },\n    animations: [\n        mcSelectAnimations.transformPanel,\n        mcSelectAnimations.fadeInContent\n    ],\n    providers: [\n        { provide: McFormFieldControl, useExisting: McSelect },\n        { provide: MC_OPTION_PARENT_COMPONENT, useExisting: McSelect }\n    ]\n})\nexport class McSelect extends _McSelectMixinBase implements\n    AfterContentInit, AfterViewInit, OnChanges, OnDestroy, OnInit, DoCheck, ControlValueAccessor, CanDisable,\n    HasTabIndex, McFormFieldControl<any>, CanUpdateErrorState {\n\n    /** The last measured value for the trigger's client bounding rect. */\n    _triggerRect: ClientRect;\n\n    /** The cached font-size of the trigger element. */\n    _triggerFontSize = 0;\n\n    /** Deals with the selection logic. */\n    _selectionModel: SelectionModel<McOption>;\n\n    /** Manages keyboard events for options in the panel. */\n    _keyManager: ActiveDescendantKeyManager<McOption>;\n\n    /** The IDs of child options to be passed to the aria-owns attribute. */\n    _optionIds: string = '';\n\n    /** The value of the select panel's transform-origin property. */\n    _transformOrigin: string = 'top';\n\n    /** Whether the panel's animation is done. */\n    _panelDoneAnimating: boolean = false;\n\n    /** Emits when the panel element is finished transforming in. */\n    _panelDoneAnimatingStream = new Subject<string>();\n\n    /** Strategy that will be used to handle scrolling while the select panel is open. */\n    _scrollStrategy = this._scrollStrategyFactory();\n\n    /**\n     * The y-offset of the overlay panel in relation to the trigger's top start corner.\n     * This must be adjusted to align the selected option text over the trigger text.\n     * when the panel opens. Will change based on the y-position of the selected option.\n     */\n    _offsetY = 0;\n\n    /**\n     * This position config ensures that the top \"start\" corner of the overlay\n     * is aligned with with the top \"start\" of the origin by default (overlapping\n     * the trigger completely). If the panel cannot fit below the trigger, it\n     * will fall back to a position above the trigger.\n     */\n    _positions = [\n        {\n            originX: 'start',\n            originY: 'bottom',\n            overlayX: 'start',\n            overlayY: 'top'\n        },\n        {\n            originX: 'start',\n            originY: 'top',\n            overlayX: 'start',\n            overlayY: 'bottom'\n        }\n    ];\n\n    /** Whether the select is focused. */\n    get focused(): boolean {\n        return this._focused || this._panelOpen;\n    }\n\n    /**\n     * @deprecated Setter to be removed as this property is intended to be readonly.\n     * @breaking-change 8.0.0\n     */\n    set focused(value: boolean) {\n        this._focused = value;\n    }\n\n    /** A name for this control that can be used by `mc-form-field`. */\n    controlType = 'mc-select';\n\n    @ViewChild('trigger') trigger: ElementRef;\n    @ViewChildren(McTag) tags: QueryList<McTag>;\n\n    @ViewChild('panel') panel: ElementRef;\n\n    /** Overlay pane containing the options. */\n    @ViewChild(CdkConnectedOverlay) overlayDir: CdkConnectedOverlay;\n\n    /** All of the defined select options. */\n    @ContentChildren(McOption, { descendants: true }) options: QueryList<McOption>;\n\n    /** All of the defined groups of options. */\n    @ContentChildren(McOptgroup) optionGroups: QueryList<McOptgroup>;\n\n    /** Classes to be passed to the select panel. Supports the same syntax as `ngClass`. */\n    @Input() panelClass: string | string[] | Set<string> | { [key: string]: any };\n\n    /** User-supplied override of the trigger element. */\n    @ContentChild(McSelectTrigger) customTrigger: McSelectTrigger;\n\n    /** Placeholder to be shown if no value has been selected. */\n    @Input()\n    get placeholder(): string {\n        return this._placeholder;\n    }\n\n    set placeholder(value: string) {\n        this._placeholder = value;\n        this.stateChanges.next();\n    }\n\n    /** Whether the component is required. */\n    @Input()\n    get required(): boolean {\n        return this._required;\n    }\n\n    set required(value: boolean) {\n        this._required = coerceBooleanProperty(value);\n        this.stateChanges.next();\n    }\n\n    /** Whether the user should be allowed to select multiple options. */\n    @Input()\n    get multiple(): boolean {\n        return this._multiple;\n    }\n\n    set multiple(value: boolean) {\n        if (this._selectionModel) {\n            throw getMcSelectDynamicMultipleError();\n        }\n\n        this._multiple = coerceBooleanProperty(value);\n    }\n\n    /**\n     * Function to compare the option values with the selected values. The first argument\n     * is a value from an option. The second is a value from the selection. A boolean\n     * should be returned.\n     */\n    @Input()\n    get compareWith() {\n        return this._compareWith;\n    }\n\n    set compareWith(fn: (o1: any, o2: any) => boolean) {\n        /* tslint:disable-next-line:strict-type-predicates */\n        if (typeof fn !== 'function') {\n            throw getMcSelectNonFunctionValueError();\n        }\n\n        this._compareWith = fn;\n\n        if (this._selectionModel) {\n            // A different comparator means the selection could change.\n            this._initializeSelection();\n        }\n    }\n\n    /** Value of the select control. */\n    @Input()\n    get value(): any {\n        return this._value;\n    }\n\n    set value(newValue: any) {\n        if (newValue !== this._value) {\n            this.writeValue(newValue);\n            this._value = newValue;\n        }\n    }\n\n    /** Object used to control when error messages are shown. */\n    @Input() errorStateMatcher: ErrorStateMatcher;\n\n    /**\n     * Function used to sort the values in a select in multiple mode.\n     * Follows the same logic as `Array.prototype.sort`.\n     */\n    @Input() sortComparator: (a: McOption, b: McOption, options: McOption[]) => number;\n\n    @Input()\n    get id(): string {\n        return this._id;\n    }\n\n    set id(value: string) {\n        this._id = value || this._uid;\n        this.stateChanges.next();\n    }\n\n    /** Combined stream of all of the child options' change events. */\n    readonly optionSelectionChanges: Observable<McOptionSelectionChange> = defer(() => {\n        if (this.options) {\n            return merge(...this.options.map((option) => option.onSelectionChange));\n        }\n\n        return this._ngZone.onStable\n            .asObservable()\n            .pipe(take(1), switchMap(() => this.optionSelectionChanges));\n    });\n\n    /** Event emitted when the select panel has been toggled. */\n    @Output() readonly openedChange: EventEmitter<boolean> = new EventEmitter<boolean>();\n\n    /** Event emitted when the select has been opened. */\n    @Output('opened') readonly _openedStream: Observable<void> =\n        this.openedChange.pipe(filter((o) => o), map(() => {}));\n\n    /** Event emitted when the select has been closed. */\n    @Output('closed') readonly _closedStream: Observable<void> =\n        this.openedChange.pipe(filter((o) => !o), map(() => {}));\n\n    /** Event emitted when the selected value has been changed by the user. */\n    @Output() readonly selectionChange: EventEmitter<McSelectChange> = new EventEmitter<McSelectChange>();\n\n    /**\n     * Event that emits whenever the raw value of the select changes. This is here primarily\n     * to facilitate the two-way binding for the `value` input.\n     * @docs-private\n     */\n    @Output() readonly valueChange: EventEmitter<any> = new EventEmitter<any>();\n\n    hiddenItems: number = 0;\n\n    /** Whether or not the overlay panel is open. */\n    private _panelOpen = false;\n\n    /** Whether filling out the select is required in the form. */\n    private _required: boolean = false;\n\n    /** The scroll position of the overlay panel, calculated to center the selected option. */\n    private _scrollTop = 0;\n\n    /** The placeholder displayed in the trigger of the select. */\n    private _placeholder: string;\n\n    /** Whether the component is in multiple selection mode. */\n    private _multiple: boolean = false;\n\n    /** Unique id for this input. */\n    private readonly _uid = `mc-select-${nextUniqueId++}`;\n\n    /** Emits whenever the component is destroyed. */\n    private readonly _destroy = new Subject<void>();\n\n    private _focused = false;\n\n    private _value: any;\n\n    private _id: string;\n\n    constructor(\n        private readonly _viewportRuler: ViewportRuler,\n        private readonly _changeDetectorRef: ChangeDetectorRef,\n        private readonly _ngZone: NgZone,\n        private readonly _renderer: Renderer2,\n        _defaultErrorStateMatcher: ErrorStateMatcher,\n        elementRef: ElementRef,\n        @Optional() private readonly _dir: Directionality,\n        @Optional() _parentForm: NgForm,\n        @Optional() _parentFormGroup: FormGroupDirective,\n        @Optional() private readonly _parentFormField: McFormField,\n        @Self() @Optional() public ngControl: NgControl,\n        @Attribute('tabindex') tabIndex: string,\n        @Inject(MC_SELECT_SCROLL_STRATEGY) private readonly _scrollStrategyFactory\n    ) {\n        super(elementRef, _defaultErrorStateMatcher, _parentForm, _parentFormGroup, ngControl);\n\n        if (this.ngControl) {\n            // Note: we provide the value accessor through here, instead of\n            // the `providers` to avoid running into a circular import.\n            this.ngControl.valueAccessor = this;\n        }\n\n        this.tabIndex = parseInt(tabIndex) || 0;\n\n        // Force setter to be called in case id was not specified.\n        this.id = this.id;\n    }\n\n    ngOnInit() {\n        this._selectionModel = new SelectionModel<McOption>(this.multiple);\n        this.stateChanges.next();\n\n        // We need `distinctUntilChanged` here, because some browsers will\n        // fire the animation end event twice for the same animation. See:\n        // https://github.com/angular/angular/issues/24084\n        this._panelDoneAnimatingStream\n            .pipe(distinctUntilChanged(), takeUntil(this._destroy))\n            .subscribe(() => {\n                if (this.panelOpen) {\n                    this._scrollTop = 0;\n                    this.openedChange.emit(true);\n                } else {\n                    this.openedChange.emit(false);\n                    this._panelDoneAnimating = false;\n                    this.overlayDir.offsetX = 0;\n                    this._changeDetectorRef.markForCheck();\n                }\n            });\n    }\n\n    ngAfterContentInit() {\n        this._initKeyManager();\n\n        this._selectionModel.onChange!\n            .pipe(takeUntil(this._destroy))\n            .subscribe((event) => {\n                event.added.forEach((option) => option.select());\n                event.removed.forEach((option) => option.deselect());\n            });\n\n        this.options.changes\n            .pipe(startWith(null), takeUntil(this._destroy))\n            .subscribe(() => {\n                this._resetOptions();\n                this._initializeSelection();\n            });\n    }\n\n    ngAfterViewInit(): void {\n        this.tags.changes\n            .subscribe(() => {\n                setTimeout(() => this._calculateHiddenItems(), 0);\n            });\n    }\n\n    ngDoCheck() {\n        if (this.ngControl) { this.updateErrorState(); }\n    }\n\n    ngOnChanges(changes: SimpleChanges) {\n        // Updating the disabled state is handled by `mixinDisabled`, but we need to additionally let\n        // the parent form field know to run change detection when the disabled state changes.\n        if (changes.disabled) {\n            this.stateChanges.next();\n        }\n    }\n\n    ngOnDestroy() {\n        this._destroy.next();\n        this._destroy.complete();\n        this.stateChanges.complete();\n    }\n\n    /** `View -> model callback called when value changes` */\n    _onChange: (value: any) => void = () => {};\n\n    /** `View -> model callback called when select has been touched` */\n    _onTouched = () => {};\n\n    /** Toggles the overlay panel open or closed. */\n    toggle(): void {\n        if (this.panelOpen) {\n            this.close();\n        } else {\n            this.open();\n        }\n    }\n\n    /** Opens the overlay panel. */\n    open(): void {\n        if (this.disabled || !this.options || !this.options.length || this._panelOpen) { return; }\n\n        this._triggerRect = this.trigger.nativeElement.getBoundingClientRect();\n        // Note: The computed font-size will be a string pixel value (e.g. \"16px\").\n        // `parseInt` ignores the trailing 'px' and converts this to a number.\n        this._triggerFontSize = parseInt(getComputedStyle(this.trigger.nativeElement)['font-size']);\n\n        this._panelOpen = true;\n        this._keyManager.withHorizontalOrientation(null);\n        this._calculateOverlayPosition();\n        this._highlightCorrectOption();\n        this._changeDetectorRef.markForCheck();\n\n        // Set the font size on the panel element once it exists.\n        this._ngZone.onStable.asObservable()\n            .pipe(take(1))\n            .subscribe(() => {\n                if (this._triggerFontSize && this.overlayDir.overlayRef &&\n                    this.overlayDir.overlayRef.overlayElement) {\n                    this.overlayDir.overlayRef.overlayElement.style.fontSize = `${this._triggerFontSize}px`;\n                }\n            });\n    }\n\n    /** Closes the overlay panel and focuses the host element. */\n    close(): void {\n        if (this._panelOpen) {\n            this._panelOpen = false;\n            this._keyManager.withHorizontalOrientation(this._isRtl() ? 'rtl' : 'ltr');\n            this._changeDetectorRef.markForCheck();\n            this._onTouched();\n        }\n    }\n\n    /**\n     * Sets the select's value. Part of the ControlValueAccessor interface\n     * required to integrate with Angular's core forms API.\n     *\n     * @param value New value to be written to the model.\n     */\n    writeValue(value: any): void {\n        if (this.options) {\n            this._setSelectionByValue(value);\n        }\n    }\n\n    /**\n     * Saves a callback function to be invoked when the select's value\n     * changes from user input. Part of the ControlValueAccessor interface\n     * required to integrate with Angular's core forms API.\n     *\n     * @param fn Callback to be triggered when the value changes.\n     */\n    registerOnChange(fn: (value: any) => void): void {\n        this._onChange = fn;\n    }\n\n    /**\n     * Saves a callback function to be invoked when the select is blurred\n     * by the user. Part of the ControlValueAccessor interface required\n     * to integrate with Angular's core forms API.\n     *\n     * @param fn Callback to be triggered when the component has been touched.\n     */\n    registerOnTouched(fn: () => {}): void {\n        this._onTouched = fn;\n    }\n\n    /**\n     * Disables the select. Part of the ControlValueAccessor interface required\n     * to integrate with Angular's core forms API.\n     *\n     * @param isDisabled Sets whether the component is disabled.\n     */\n    setDisabledState(isDisabled: boolean): void {\n        this.disabled = isDisabled;\n        this._changeDetectorRef.markForCheck();\n        this.stateChanges.next();\n    }\n\n    get panelOpen(): boolean {\n        return this._panelOpen;\n    }\n\n    get selected(): McOption | McOption[] {\n        return this.multiple ? this._selectionModel.selected : this._selectionModel.selected[0];\n    }\n\n    get triggerValue(): string {\n        if (this.empty) { return ''; }\n\n        if (this._multiple) {\n            const selectedOptions = this._selectionModel.selected.map((option) => option.viewValue);\n\n            if (this._isRtl()) { selectedOptions.reverse(); }\n\n            return selectedOptions.join(', ');\n        }\n\n        return this._selectionModel.selected[0].viewValue;\n    }\n\n    get triggerValues(): McOption[] {\n        if (this.empty) { return []; }\n\n        if (this._multiple) {\n            const selectedOptions = this._selectionModel.selected;\n\n            if (this._isRtl()) { selectedOptions.reverse(); }\n\n            return selectedOptions;\n        }\n\n        return [this._selectionModel.selected[0]];\n    }\n\n    get empty(): boolean {\n        return !this._selectionModel || this._selectionModel.isEmpty();\n    }\n\n    _isRtl(): boolean {\n        return this._dir ? this._dir.value === 'rtl' : false;\n    }\n\n    _handleKeydown(event: KeyboardEvent): void {\n        if (!this.disabled) {\n            if (this.panelOpen) {\n                this._handleOpenKeydown(event);\n            } else {\n                this._handleClosedKeydown(event);\n            }\n        }\n    }\n\n    /**\n     * When the panel content is done fading in, the _panelDoneAnimating property is\n     * set so the proper class can be added to the panel.\n     */\n    _onFadeInDone(): void {\n        this._panelDoneAnimating = this.panelOpen;\n        this._changeDetectorRef.markForCheck();\n    }\n\n    _onFocus() {\n        if (!this.disabled) {\n            this._focused = true;\n            this.stateChanges.next();\n        }\n    }\n\n    /**\n     * Calls the touched callback only if the panel is closed. Otherwise, the trigger will\n     * \"blur\" to the panel when it opens, causing a false positive.\n     */\n    _onBlur() {\n        this._focused = false;\n\n        if (!this.disabled && !this.panelOpen) {\n            this._onTouched();\n            this._changeDetectorRef.markForCheck();\n            this.stateChanges.next();\n        }\n    }\n\n    /**\n     * Callback that is invoked when the overlay panel has been attached.\n     */\n    _onAttached(): void {\n        this.overlayDir.positionChange\n            .pipe(take(1))\n            .subscribe(() => {\n                this._changeDetectorRef.detectChanges();\n                this._calculateOverlayOffsetX();\n                this.panel.nativeElement.scrollTop = this._scrollTop;\n            });\n    }\n\n    /** Returns the theme to be used on the panel. */\n    _getPanelTheme(): string {\n        return this._parentFormField ? `mc-${this._parentFormField.color}` : '';\n    }\n\n    /** Focuses the select element. */\n    focus(): void {\n        this._elementRef.nativeElement.focus();\n    }\n\n    /**\n     * Calculates the scroll position of the select's overlay panel.\n     *\n     * Attempts to center the selected option in the panel. If the option is\n     * too high or too low in the panel to be scrolled to the center, it clamps the\n     * scroll position to the min or max scroll positions respectively.\n     */\n    _calculateOverlayScroll(selectedIndex: number, scrollBuffer: number, maxScroll: number): number {\n        const itemHeight = this._getItemHeight();\n        const optionOffsetFromScrollTop = itemHeight * selectedIndex;\n\n        /* tslint:disable-next-line:no-magic-numbers */\n        const halfOptionHeight = itemHeight / 2;\n\n        // Starts at the optionOffsetFromScrollTop, which scrolls the option to the top of the\n        // scroll container, then subtracts the scroll buffer to scroll the option down to\n        // the center of the overlay panel. Half the option height must be re-added to the\n        // scrollTop so the option is centered based on its middle, not its top edge.\n        const optimalScrollPosition = optionOffsetFromScrollTop - scrollBuffer + halfOptionHeight;\n\n        return Math.min(Math.max(0, optimalScrollPosition), maxScroll);\n    }\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    onContainerClick() {\n        this.focus();\n        this.open();\n    }\n\n    /** Invoked when an option is clicked. */\n    onRemoveMatcherItem(option: McOption, $event): void {\n        $event.stopPropagation();\n\n        option.deselect();\n    }\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    get shouldLabelFloat(): boolean {\n        return this._panelOpen || !this.empty;\n    }\n\n    _calculateHiddenItems(): void {\n        if (this.empty) { return; }\n\n        let visibleItems: number = 0;\n        const totalItemsWidth = this._getTotalItemsWidthInMatcher();\n        let totalVisibleItemsWidth: number = 0;\n        const itemMargin: number = 4;\n\n        this.tags.forEach((tag) => {\n            if (tag.nativeElement.offsetTop < tag.nativeElement.offsetHeight) {\n                totalVisibleItemsWidth += tag.nativeElement.getBoundingClientRect().width + itemMargin;\n                visibleItems++;\n            }\n        });\n\n        this.hiddenItems = (this.selected as ArrayLike<McOption>).length - visibleItems;\n\n        if (this.hiddenItems) {\n            const itemsCounter = this.trigger.nativeElement.querySelector('.mc-select__match-hidden-text');\n            const matcherList = this.trigger.nativeElement.querySelector('.mc-select__match-list');\n\n            const itemsCounterShowed = itemsCounter.offsetTop < itemsCounter.offsetHeight;\n            // const itemsCounterWidth: number = itemsCounter.getBoundingClientRect().width;\n            const itemsCounterWidth: number = 86;\n\n            const matcherListWidth: number = matcherList.getBoundingClientRect().width;\n            const matcherWidth: number = matcherListWidth + itemsCounterWidth;\n\n            if (itemsCounterShowed && (totalItemsWidth < matcherWidth)) { this.hiddenItems = 0; }\n\n            if (\n                totalVisibleItemsWidth === matcherListWidth ||\n                (totalVisibleItemsWidth + itemsCounterWidth) < matcherListWidth\n            ) {\n                this._changeDetectorRef.markForCheck();\n\n                return ;\n            } else if (!itemsCounterShowed && (totalItemsWidth + itemsCounterWidth) > matcherWidth) {\n                this.hiddenItems++;\n            }\n        }\n\n        this._changeDetectorRef.markForCheck();\n    }\n\n    private _getTotalItemsWidthInMatcher(): number {\n        const triggerClone = this.trigger.nativeElement.cloneNode(true);\n        triggerClone.querySelector('.mc-select__match-hidden-text').remove();\n\n        this._renderer.setStyle(triggerClone, 'position', 'absolute');\n        this._renderer.setStyle(triggerClone, 'visibility', 'hidden');\n        this._renderer.setStyle(triggerClone, 'top', '-100%');\n        this._renderer.setStyle(triggerClone, 'left', '0');\n\n        this._renderer.appendChild(this.trigger.nativeElement, triggerClone);\n\n        let totalItemsWidth: number = 0;\n        const itemMargin: number = 4;\n        triggerClone.querySelectorAll('mc-tag').forEach((item) => {\n            totalItemsWidth += item.getBoundingClientRect().width as number + itemMargin;\n        });\n\n        triggerClone.remove();\n\n        return totalItemsWidth;\n    }\n\n    /** Handles keyboard events while the select is closed. */\n    private _handleClosedKeydown(event: KeyboardEvent): void {\n        /* tslint:disable-next-line */\n        const keyCode = event.keyCode;\n        const isArrowKey = keyCode === DOWN_ARROW || keyCode === UP_ARROW ||\n            keyCode === LEFT_ARROW || keyCode === RIGHT_ARROW;\n        const isOpenKey = keyCode === ENTER || keyCode === SPACE;\n\n        // Open the select on ALT + arrow key to match the native <select>\n        if (isOpenKey || ((this.multiple || event.altKey) && isArrowKey)) {\n            event.preventDefault(); // prevents the page from scrolling down when pressing space\n            this.open();\n        } else if (!this.multiple) {\n            this._keyManager.onKeydown(event);\n        }\n    }\n\n    /** Handles keyboard events when the selected is open. */\n    private _handleOpenKeydown(event: KeyboardEvent): void {\n        /* tslint:disable-next-line */\n        const keyCode = event.keyCode;\n        const isArrowKey = keyCode === DOWN_ARROW || keyCode === UP_ARROW;\n        const manager = this._keyManager;\n\n        if (keyCode === HOME || keyCode === END) {\n            event.preventDefault();\n\n            if (keyCode === HOME) {\n                manager.setFirstItemActive();\n            } else {\n                manager.setLastItemActive();\n            }\n\n        } else if (isArrowKey && event.altKey) {\n            // Close the select on ALT + arrow key to match the native <select>\n            event.preventDefault();\n            this.close();\n        } else if ((keyCode === ENTER || keyCode === SPACE) && manager.activeItem) {\n            event.preventDefault();\n            manager.activeItem._selectViaInteraction();\n        } else if (this._multiple && keyCode === A && event.ctrlKey) {\n            event.preventDefault();\n            const hasDeselectedOptions = this.options.some((option) => !option.selected);\n            this.options.forEach((option) => {\n                if (hasDeselectedOptions && !option.disabled) {\n                    option.select();\n                } else {\n                    option.deselect();\n                }\n            });\n        } else {\n            const previouslyFocusedIndex = manager.activeItemIndex;\n\n            manager.onKeydown(event);\n\n            if (this._multiple && isArrowKey && event.shiftKey && manager.activeItem &&\n                manager.activeItemIndex !== previouslyFocusedIndex) {\n                manager.activeItem._selectViaInteraction();\n            }\n        }\n    }\n\n    private _initializeSelection(): void {\n        // Defer setting the value in order to avoid the \"Expression\n        // has changed after it was checked\" errors from Angular.\n        Promise.resolve().then(() => {\n            this._setSelectionByValue(this.ngControl ? this.ngControl.value : this._value);\n        });\n    }\n\n    /**\n     * Sets the selected option based on a value. If no option can be\n     * found with the designated value, the select trigger is cleared.\n     */\n    private _setSelectionByValue(value: any | any[]): void {\n        if (this.multiple && value) {\n            if (!Array.isArray(value)) {\n                throw getMcSelectNonArrayValueError();\n            }\n\n            this._selectionModel.clear();\n            value.forEach((currentValue: any) => this._selectValue(currentValue));\n            this._sortValues();\n        } else {\n            this._selectionModel.clear();\n            const correspondingOption = this._selectValue(value);\n\n            // Shift focus to the active item. Note that we shouldn't do this in multiple\n            // mode, because we don't know what option the user interacted with last.\n            if (correspondingOption) {\n                this._keyManager.setActiveItem(correspondingOption);\n            }\n        }\n\n        this._changeDetectorRef.markForCheck();\n    }\n\n    /**\n     * Finds and selects and option based on its value.\n     * @returns Option that has the corresponding value.\n     */\n    private _selectValue(value: any): McOption | undefined {\n        const correspondingOption = this.options.find((option: McOption) => {\n            try {\n                // Treat null as a special reset value.\n                return option.value != null && this._compareWith(option.value, value);\n            } catch (error) {\n                if (isDevMode()) {\n                    // Notify developers of errors in their comparator.\n                    console.warn(error);\n                }\n\n                return false;\n            }\n        });\n\n        if (correspondingOption) {\n            this._selectionModel.select(correspondingOption);\n        }\n\n        return correspondingOption;\n    }\n\n    /** Sets up a key manager to listen to keyboard events on the overlay panel. */\n    private _initKeyManager() {\n        this._keyManager = new ActiveDescendantKeyManager<McOption>(this.options)\n            .withTypeAhead()\n            .withVerticalOrientation()\n            .withHorizontalOrientation(this._isRtl() ? 'rtl' : 'ltr');\n\n        this._keyManager.tabOut\n            .pipe(takeUntil(this._destroy))\n            .subscribe(() => {\n                // Restore focus to the trigger before closing. Ensures that the focus\n                // position won't be lost if the user got focus into the overlay.\n                this.focus();\n                this.close();\n            });\n\n        this._keyManager.change\n            .pipe(takeUntil(this._destroy))\n            .subscribe(() => {\n                if (this._panelOpen && this.panel) {\n                    this._scrollActiveOptionIntoView();\n                } else if (!this._panelOpen && !this.multiple && this._keyManager.activeItem) {\n                    this._keyManager.activeItem._selectViaInteraction();\n                }\n            });\n    }\n\n    /** Drops current option subscriptions and IDs and resets from scratch. */\n    private _resetOptions(): void {\n        const changedOrDestroyed = merge(this.options.changes, this._destroy);\n\n        this.optionSelectionChanges\n            .pipe(takeUntil(changedOrDestroyed))\n            .subscribe((event) => {\n                this._onSelect(event.source, event.isUserInput);\n\n                if (event.isUserInput && !this.multiple && this._panelOpen) {\n                    this.close();\n                    this.focus();\n                }\n            });\n\n        // Listen to changes in the internal state of the options and react accordingly.\n        // Handles cases like the labels of the selected options changing.\n        merge(...this.options.map((option) => option._stateChanges))\n            .pipe(takeUntil(changedOrDestroyed))\n            .subscribe(() => {\n                this._changeDetectorRef.markForCheck();\n                this.stateChanges.next();\n            });\n\n        this._setOptionIds();\n    }\n\n    /** Invoked when an option is clicked. */\n    private _onSelect(option: McOption, isUserInput: boolean): void {\n        const wasSelected = this._selectionModel.isSelected(option);\n\n        if (option.value == null && !this._multiple) {\n            option.deselect();\n            this._selectionModel.clear();\n            this._propagateChanges(option.value);\n        } else {\n            if (option.selected) {\n                this._selectionModel.select(option);\n            } else {\n                this._selectionModel.deselect(option);\n            }\n\n            if (isUserInput) {\n                this._keyManager.setActiveItem(option);\n            }\n\n            if (this.multiple) {\n                this._sortValues();\n\n                if (isUserInput) {\n                    // In case the user selected the option with their mouse, we\n                    // want to restore focus back to the trigger, in order to\n                    // prevent the select keyboard controls from clashing with\n                    // the ones from `mc-option`.\n                    this.focus();\n                }\n            }\n        }\n\n        if (wasSelected !== this._selectionModel.isSelected(option)) {\n            this._propagateChanges();\n        }\n\n        this.stateChanges.next();\n    }\n\n    /** Sorts the selected values in the selected based on their order in the panel. */\n    private _sortValues() {\n        if (this.multiple) {\n            const options = this.options.toArray();\n\n            this._selectionModel.sort((a, b) => {\n                return this.sortComparator ? this.sortComparator(a, b, options) :\n                    options.indexOf(a) - options.indexOf(b);\n            });\n            this.stateChanges.next();\n        }\n    }\n\n    /** Emits change event to set the model value. */\n    private _propagateChanges(fallbackValue?: any): void {\n        let valueToEmit: any = null;\n\n        if (this.multiple) {\n            valueToEmit = (this.selected as McOption[]).map((option) => option.value);\n        } else {\n            valueToEmit = this.selected ? (this.selected as McOption).value : fallbackValue;\n        }\n\n        this._value = valueToEmit;\n        this.valueChange.emit(valueToEmit);\n        this._onChange(valueToEmit);\n        this.selectionChange.emit(new McSelectChange(this, valueToEmit));\n        this._changeDetectorRef.markForCheck();\n    }\n\n    /** Records option IDs to pass to the aria-owns property. */\n    private _setOptionIds() {\n        this._optionIds = this.options.map((option) => option.id).join(' ');\n    }\n\n    /**\n     * Highlights the selected item. If no option is selected, it will highlight\n     * the first item instead.\n     */\n    private _highlightCorrectOption(): void {\n        if (this._keyManager) {\n            if (this.empty) {\n                this._keyManager.setFirstItemActive();\n            } else {\n                this._keyManager.setActiveItem(this._selectionModel.selected[0]);\n            }\n        }\n    }\n\n    /** Scrolls the active option into view. */\n    private _scrollActiveOptionIntoView(): void {\n        const activeOptionIndex = this._keyManager.activeItemIndex || 0;\n        const labelCount = _countGroupLabelsBeforeOption(activeOptionIndex, this.options, this.optionGroups);\n\n        this.panel.nativeElement.scrollTop = _getOptionScrollPosition(\n            activeOptionIndex + labelCount,\n            this._getItemHeight(),\n            this.panel.nativeElement.scrollTop,\n            SELECT_PANEL_MAX_HEIGHT\n        );\n    }\n\n    /** Gets the index of the provided option in the option list. */\n    private _getOptionIndex(option: McOption): number | undefined {\n        /* tslint:disable-next-line */\n        return this.options.reduce((result: number, current: McOption, index: number) => {\n            /* tslint:disable-next-line:strict-type-predicates */\n            return result === undefined ? (option === current ? index : undefined) : result;\n        }, undefined);\n    }\n\n    /** Calculates the scroll position and x- and y-offsets of the overlay panel. */\n    private _calculateOverlayPosition(): void {\n        const itemHeight = this._getItemHeight();\n        const items = this._getItemCount();\n        const panelHeight = Math.min(items * itemHeight, SELECT_PANEL_MAX_HEIGHT);\n        const scrollContainerHeight = items * itemHeight;\n\n        // The farthest the panel can be scrolled before it hits the bottom\n        const maxScroll = scrollContainerHeight - panelHeight;\n\n        // If no value is selected we open the popup to the first item.\n        let selectedOptionOffset =\n            this.empty ? 0 : this._getOptionIndex(this._selectionModel.selected[0])!;\n\n        selectedOptionOffset += _countGroupLabelsBeforeOption(selectedOptionOffset, this.options,\n            this.optionGroups);\n\n        // We must maintain a scroll buffer so the selected option will be scrolled to the\n        // center of the overlay panel rather than the top.\n        /* tslint:disable-next-line:no-magic-numbers */\n        const scrollBuffer = panelHeight / 2;\n        this._scrollTop = this._calculateOverlayScroll(selectedOptionOffset, scrollBuffer, maxScroll);\n        this._offsetY = this._calculateOverlayOffsetY();\n\n        this._checkOverlayWithinViewport(maxScroll);\n    }\n\n    /**\n     * Sets the x-offset of the overlay panel in relation to the trigger's top start corner.\n     * This must be adjusted to align the selected option text over the trigger text when\n     * the panel opens. Will change based on LTR or RTL text direction. Note that the offset\n     * can't be calculated until the panel has been attached, because we need to know the\n     * content width in order to constrain the panel within the viewport.\n     */\n    private _calculateOverlayOffsetX(): void {\n        const overlayRect = this.overlayDir.overlayRef.overlayElement.getBoundingClientRect();\n        const viewportSize = this._viewportRuler.getViewportSize();\n        const isRtl = this._isRtl();\n        /* tslint:disable-next-line:no-magic-numbers */\n        const paddingWidth = SELECT_PANEL_PADDING_X * 2;\n        let offsetX: number;\n\n        const selected = this._selectionModel.selected[0] || this.options.first;\n        offsetX = selected && selected.group ? SELECT_PANEL_INDENT_PADDING_X : SELECT_PANEL_PADDING_X;\n\n        // Invert the offset in LTR.\n        if (!isRtl) { offsetX *= -1; }\n\n        // Determine how much the select overflows on each side.\n        const leftOverflow = 0 - (overlayRect.left + offsetX - (isRtl ? paddingWidth : 0));\n        const rightOverflow = overlayRect.right + offsetX - viewportSize.width\n            + (isRtl ? 0 : paddingWidth);\n\n        // If the element overflows on either side, reduce the offset to allow it to fit.\n        if (leftOverflow > 0) {\n            offsetX += leftOverflow + SELECT_PANEL_VIEWPORT_PADDING;\n        } else if (rightOverflow > 0) {\n            offsetX -= rightOverflow + SELECT_PANEL_VIEWPORT_PADDING;\n        }\n\n        // Set the offset directly in order to avoid having to go through change detection and\n        // potentially triggering \"changed after it was checked\" errors. Round the value to avoid\n        // blurry content in some browsers.\n        this.overlayDir.offsetX = Math.round(offsetX);\n        this.overlayDir.overlayRef.updatePosition();\n    }\n\n    /**\n     * Calculates the y-offset of the select's overlay panel in relation to the\n     * top start corner of the trigger. It has to be adjusted in order for the\n     * selected option to be aligned over the trigger when the panel opens.\n     */\n    private _calculateOverlayOffsetY(): number {\n        // const itemHeight = this._getItemHeight();\n        // const optionHeightAdjustment = (itemHeight - this._triggerRect.height) / 2;\n\n        // todo I'm not sure that we will use it\n        return 0;\n        // return Math.round(-optionHeightAdjustment);\n    }\n\n    /**\n     * Checks that the attempted overlay position will fit within the viewport.\n     * If it will not fit, tries to adjust the scroll position and the associated\n     * y-offset so the panel can open fully on-screen. If it still won't fit,\n     * sets the offset back to 0 to allow the fallback position to take over.\n     */\n    private _checkOverlayWithinViewport(maxScroll: number): void {\n        const itemHeight = this._getItemHeight();\n        const viewportSize = this._viewportRuler.getViewportSize();\n\n        const topSpaceAvailable = this._triggerRect.top - SELECT_PANEL_VIEWPORT_PADDING;\n        const bottomSpaceAvailable =\n            viewportSize.height - this._triggerRect.bottom - SELECT_PANEL_VIEWPORT_PADDING;\n\n        const panelHeightTop = Math.abs(this._offsetY);\n        const totalPanelHeight =\n            Math.min(this._getItemCount() * itemHeight, SELECT_PANEL_MAX_HEIGHT);\n        const panelHeightBottom = totalPanelHeight - panelHeightTop - this._triggerRect.height;\n\n        if (panelHeightBottom > bottomSpaceAvailable) {\n            this._adjustPanelUp(panelHeightBottom, bottomSpaceAvailable);\n        } else if (panelHeightTop > topSpaceAvailable) {\n            this._adjustPanelDown(panelHeightTop, topSpaceAvailable, maxScroll);\n        } else {\n            this._transformOrigin = this._getOriginBasedOnOption();\n        }\n    }\n\n    /** Adjusts the overlay panel up to fit in the viewport. */\n    private _adjustPanelUp(panelHeightBottom: number, bottomSpaceAvailable: number) {\n        // Browsers ignore fractional scroll offsets, so we need to round.\n        const distanceBelowViewport = Math.round(panelHeightBottom - bottomSpaceAvailable);\n\n        // Scrolls the panel up by the distance it was extending past the boundary, then\n        // adjusts the offset by that amount to move the panel up into the viewport.\n        this._scrollTop -= distanceBelowViewport;\n        this._offsetY -= distanceBelowViewport;\n        this._transformOrigin = this._getOriginBasedOnOption();\n\n        // If the panel is scrolled to the very top, it won't be able to fit the panel\n        // by scrolling, so set the offset to 0 to allow the fallback position to take\n        // effect.\n        if (this._scrollTop <= 0) {\n            this._scrollTop = 0;\n            this._offsetY = 0;\n            this._transformOrigin = `50% bottom 0px`;\n        }\n    }\n\n    /** Adjusts the overlay panel down to fit in the viewport. */\n    private _adjustPanelDown(panelHeightTop: number, topSpaceAvailable: number, maxScroll: number) {\n        // Browsers ignore fractional scroll offsets, so we need to round.\n        const distanceAboveViewport = Math.round(panelHeightTop - topSpaceAvailable);\n\n        // Scrolls the panel down by the distance it was extending past the boundary, then\n        // adjusts the offset by that amount to move the panel down into the viewport.\n        this._scrollTop += distanceAboveViewport;\n        this._offsetY += distanceAboveViewport;\n        this._transformOrigin = this._getOriginBasedOnOption();\n\n        // If the panel is scrolled to the very bottom, it won't be able to fit the\n        // panel by scrolling, so set the offset to 0 to allow the fallback position\n        // to take effect.\n        if (this._scrollTop >= maxScroll) {\n            this._scrollTop = maxScroll;\n            this._offsetY = 0;\n            this._transformOrigin = `50% top 0px`;\n\n            return;\n        }\n    }\n\n    /** Sets the transform origin point based on the selected option. */\n    private _getOriginBasedOnOption(): string {\n        const itemHeight = this._getItemHeight();\n        /* tslint:disable-next-line:no-magic-numbers */\n        const optionHeightAdjustment = (itemHeight - this._triggerRect.height) / 2;\n        /* tslint:disable-next-line:no-magic-numbers */\n        const originY = Math.abs(this._offsetY) - optionHeightAdjustment + itemHeight / 2;\n\n        return `50% ${originY}px 0px`;\n    }\n\n    /** Calculates the amount of items in the select. This includes options and group labels. */\n    private _getItemCount(): number {\n        return this.options.length + this.optionGroups.length;\n    }\n\n    /** Calculates the height of the select's options. */\n    private _getItemHeight(): number {\n        /* tslint:disable-next-line:no-magic-numbers */\n        return 32;\n        // return this._triggerFontSize * SELECT_ITEM_HEIGHT_EM;\n    }\n\n    /** Comparison function to specify which option is displayed. Defaults to object equality. */\n    private _compareWith = (o1: any, o2: any) => o1 === o2;\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { OverlayModule } from '@ptsecurity/cdk/overlay';\nimport { McOptionModule } from '@ptsecurity/mosaic/core';\nimport { McFormFieldModule } from '@ptsecurity/mosaic/form-field';\nimport { McIconModule } from '@ptsecurity/mosaic/icon';\nimport { McTagModule } from '@ptsecurity/mosaic/tag';\n\nimport { MC_SELECT_SCROLL_STRATEGY_PROVIDER, McSelect, McSelectTrigger } from './select.component';\n\n\n@NgModule({\n    imports: [\n        CommonModule,\n        OverlayModule,\n        McOptionModule,\n        McIconModule,\n        McTagModule\n    ],\n    exports: [McFormFieldModule, McSelect, McSelectTrigger, McOptionModule, CommonModule],\n    declarations: [McSelect, McSelectTrigger],\n    providers: [MC_SELECT_SCROLL_STRATEGY_PROVIDER]\n})\nexport class McSelectModule {}\n","import {\n    ChangeDetectionStrategy,\n    Component,\n    Directive,\n    ElementRef,\n    Input,\n    NgZone, OnDestroy,\n    OnInit,\n    Renderer2,\n    ViewEncapsulation\n} from '@angular/core';\n\nimport { coerceBooleanProperty, coerceCssPixelValue, coerceNumberProperty } from '@ptsecurity/cdk/coercion';\n\n\ninterface IArea {\n    area: McSplitterAreaDirective;\n    index: number;\n    order: number;\n    initialSize: number;\n}\n\ninterface IPoint {\n    x: number;\n    y: number;\n}\n\n\nconst enum AttributeProperty {\n    Disabled = 'disabled'\n}\n\nconst enum Cursor {\n    Default = 'default',\n    ResizeColumn = 'col-resize',\n    ResizeRow = 'row-resize'\n}\n\nconst enum StyleProperty {\n    Cursor = 'cursor',\n    Flex = 'flex',\n    FlexBasis = 'flex-basis',\n    FlexDirection = 'flex-direction',\n    Height = 'height',\n    MaxWidth = 'max-width',\n    MinHeight = 'min-height',\n    MinWidth = 'minWidth',\n    OffsetHeight = 'offsetHeight',\n    OffsetWidth = 'offsetWidth',\n    Order = 'order',\n    Width = 'width'\n}\n\nconst enum State {\n    Disabled = 'disabled',\n    Horizontal = 'horizontal',\n    Vertical = 'vertical'\n}\n\nexport const enum Direction {\n    Horizontal = 'horizontal',\n    Vertical = 'vertical'\n}\n\n@Component({\n    selector: 'mc-splitter',\n    preserveWhitespaces: false,\n    styleUrls: ['splitter.css'],\n    templateUrl: './splitter.component.html',\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class McSplitterComponent implements OnInit {\n    readonly areas: IArea[] = [];\n\n    private _direction: Direction;\n    private _disabled: boolean = false;\n    private _gutterSize: number = 6;\n\n    private isDragging: boolean = false;\n\n    private readonly areaPositionDivider: number = 2;\n    private readonly listeners: (() => void)[] = [];\n\n    @Input()\n    set direction(direction: Direction) {\n        this._direction = direction;\n    }\n\n    get direction(): Direction {\n        return this._direction;\n    }\n\n    @Input()\n    set disabled(disabled: boolean) {\n        this._disabled = coerceBooleanProperty(disabled);\n    }\n\n    get disabled(): boolean {\n        return this._disabled;\n    }\n\n    @Input()\n    set gutterSize(gutterSize: number) {\n        const size = coerceNumberProperty(gutterSize);\n        this._gutterSize = size > 0 ? size : this.gutterSize;\n    }\n\n    get gutterSize(): number {\n        return this._gutterSize;\n    }\n\n    constructor(private elementRef: ElementRef,\n                private ngZone: NgZone,\n                private renderer: Renderer2) {}\n\n    addArea(area: McSplitterAreaDirective): void {\n        const index: number = this.areas.length;\n        const order: number = index * this.areaPositionDivider;\n        const size: number = area.getSize();\n\n        area.setOrder(order);\n\n        this.areas.push({\n            area,\n            index,\n            order,\n            initialSize: size\n        });\n    }\n\n    ngOnInit(): void {\n        if (!this.direction) {\n            this.direction = Direction.Horizontal;\n        }\n\n        this.setStyle(StyleProperty.FlexDirection, this.isVertical() ? 'column' : 'row');\n    }\n\n    onMouseDown(event: MouseEvent, leftAreaIndex: number, rightAreaIndex: number) {\n        if (this.disabled) {\n            return;\n        }\n\n        const leftArea = this.areas[leftAreaIndex];\n        const rightArea = this.areas[rightAreaIndex];\n\n        const startPoint: IPoint = {\n            x: event.screenX,\n            y: event.screenY\n        };\n\n        leftArea.initialSize = leftArea.area.getSize();\n        rightArea.initialSize = rightArea.area.getSize();\n\n        this.areas.forEach((item) => {\n            const size = item.area.getSize();\n            item.area.disableFlex();\n            item.area.setSize(size);\n        });\n\n        this.ngZone.runOutsideAngular(() => {\n            this.listeners.push(\n                this.renderer.listen(\n                    'document',\n                    'mouseup',\n                    () => this.onMouseUp()\n                )\n            );\n        });\n\n        this.ngZone.runOutsideAngular(() => {\n            this.listeners.push(\n                this.renderer.listen(\n                    'document',\n                    'mousemove',\n                    (e: MouseEvent) => this.onMouseMove(e, startPoint, leftArea, rightArea)\n                )\n            );\n        });\n\n        this.isDragging = true;\n    }\n\n    removeArea(area: McSplitterAreaDirective): void {\n        let indexToRemove: number = -1;\n\n        this.areas.some((item, index) => {\n            if (item.area === area) {\n                indexToRemove = index;\n\n                return true;\n            }\n\n            return false;\n        });\n\n        if (indexToRemove === -1) {\n            return;\n        }\n\n        this.areas.splice(indexToRemove, 1);\n    }\n\n    private isVertical(): boolean {\n        return this.direction === Direction.Vertical;\n    }\n\n    private onMouseMove(event: MouseEvent, startPoint: IPoint, leftArea: IArea, rightArea: IArea) {\n        if (!this.isDragging || this.disabled) {\n            return;\n        }\n\n        const endPoint: IPoint = {\n            x: event.screenX,\n            y: event.screenY\n        };\n\n        const offset = this.isVertical()\n            ? startPoint.y - endPoint.y\n            : startPoint.x - endPoint.x;\n\n        const newLeftAreaSize = leftArea.initialSize - offset;\n        const newRightAreaSize = rightArea.initialSize + offset;\n\n        const minLeftAreaSize = leftArea.area.getMinSize();\n        const minRightAreaSize = rightArea.area.getMinSize();\n\n        if (newLeftAreaSize <= minLeftAreaSize || newRightAreaSize <= minRightAreaSize) {\n            const rightAreaOffset = leftArea.initialSize - minLeftAreaSize;\n\n            leftArea.area.setSize(minLeftAreaSize);\n            rightArea.area.setSize(rightArea.initialSize + rightAreaOffset);\n        } else if (newLeftAreaSize <= 0) {\n            leftArea.area.setSize(0);\n            rightArea.area.setSize(rightArea.initialSize + leftArea.initialSize);\n        } else if (newRightAreaSize <= 0) {\n            leftArea.area.setSize(rightArea.initialSize + leftArea.initialSize);\n            rightArea.area.setSize(0);\n        } else {\n            leftArea.area.setSize(newLeftAreaSize);\n            rightArea.area.setSize(newRightAreaSize);\n        }\n    }\n\n    private onMouseUp() {\n        while (this.listeners.length > 0) {\n            const unsubscribe = this.listeners.pop();\n\n            if (unsubscribe) {\n                unsubscribe();\n            }\n        }\n\n        this.isDragging = false;\n    }\n\n    private setStyle(property: StyleProperty, value: string | number) {\n        this.renderer.setStyle(this.elementRef.nativeElement, property, value);\n    }\n}\n\n@Directive({\n    selector: 'mc-gutter'\n})\nexport class McGutterDirective implements OnInit {\n    private _direction: Direction = Direction.Vertical;\n    private _disabled: boolean = false;\n    private _order: number = 0;\n    private _size: number = 6;\n\n    @Input()\n    set direction(direction: Direction) {\n        this._direction = direction;\n    }\n\n    get direction(): Direction {\n        return this._direction;\n    }\n\n    @Input()\n    set disabled(disabled: boolean) {\n        this._disabled = coerceBooleanProperty(disabled);\n    }\n\n    get disabled(): boolean {\n        return this._disabled;\n    }\n\n    @Input()\n    set order(order: number) {\n        this._order = coerceNumberProperty(order);\n    }\n\n    get order(): number {\n        return this._order;\n    }\n\n    @Input()\n    set size(size: number) {\n        this._size = coerceNumberProperty(size);\n    }\n\n    get size(): number {\n        return this._size;\n    }\n\n    constructor(private renderer: Renderer2,\n                private elementRef: ElementRef) {\n    }\n\n    ngOnInit(): void {\n        this.setStyle(StyleProperty.Cursor, this.getCursor(this.getState()));\n        this.setStyle(StyleProperty.FlexBasis, coerceCssPixelValue(this.size));\n        this.setStyle(this.isVertical() ? StyleProperty.Height : StyleProperty.Width, coerceCssPixelValue(this.size));\n        this.setStyle(StyleProperty.Order, this.order);\n\n        if (!this.isVertical()) {\n            this.setStyle(StyleProperty.Height, '100%');\n        }\n\n        if (this.disabled) {\n            this.setAttr(AttributeProperty.Disabled, 'true');\n        }\n\n        // fix IE issue with gutter icon. flex-direction is requied for flex alignment options\n        this.setStyle(StyleProperty.FlexDirection, this.isVertical() ? 'row' : 'column');\n    }\n\n    private isVertical(): boolean {\n        return this.direction === Direction.Vertical;\n    }\n\n    private getCursor(state: State): string {\n        switch (state) {\n            case State.Disabled:\n                return Cursor.Default;\n            case State.Vertical:\n                return  Cursor.ResizeRow;\n            case State.Horizontal:\n                return Cursor.ResizeColumn;\n            default:\n                throw Error(`Unknown gutter state for cursor: ${state}`);\n        }\n    }\n\n    private getState(): State {\n        return this.disabled\n            ? State.Disabled\n            : this.direction === Direction.Vertical\n                ? State.Vertical\n                : State.Horizontal;\n    }\n\n    private setStyle(property: StyleProperty, value: string | number) {\n        this.renderer.setStyle(this.elementRef.nativeElement, property, value);\n    }\n\n    private setAttr(attribute: AttributeProperty, value: string) {\n        this.renderer.setAttribute(this.elementRef.nativeElement, attribute, value);\n    }\n}\n\n@Directive({\n    selector: 'mc-splitter-area'\n})\nexport class McSplitterAreaDirective implements OnInit, OnDestroy {\n    constructor(private elementRef: ElementRef,\n                private renderer: Renderer2,\n                private splitter: McSplitterComponent) {}\n\n    disableFlex(): void {\n        this.renderer.removeStyle(this.elementRef.nativeElement, 'flex');\n    }\n\n    ngOnInit(): void {\n        this.splitter.addArea(this);\n\n        this.removeStyle(StyleProperty.MaxWidth);\n        this.setStyle(StyleProperty.Flex, '1');\n\n        if (this.splitter.direction === Direction.Vertical) {\n            this.setStyle(StyleProperty.Width, '100%');\n            this.removeStyle(StyleProperty.Height);\n        } else {\n            this.setStyle(StyleProperty.Height, '100%');\n            this.removeStyle(StyleProperty.Width);\n        }\n    }\n\n    ngOnDestroy(): void {\n        this.splitter.removeArea(this);\n    }\n\n    setOrder(order: number): void {\n        this.setStyle(StyleProperty.Order, order);\n    }\n\n    setSize(size: number): void {\n        const sz = coerceNumberProperty(size);\n        this.setStyle(this.getSizeProperty(), coerceCssPixelValue(sz));\n    }\n\n    getSize(): number {\n        return this.elementRef.nativeElement[this.getOffsetSizeProperty()];\n    }\n\n    getMinSize(): number {\n        const styles = getComputedStyle(this.elementRef.nativeElement);\n\n        return parseFloat(styles[this.getMinSizeProperty()]);\n    }\n\n    private isVertical(): boolean {\n        return this.splitter.direction === Direction.Vertical;\n    }\n\n    private getMinSizeProperty(): StyleProperty {\n        return this.isVertical()\n            ? StyleProperty.MinHeight\n            : StyleProperty.MinWidth;\n    }\n\n    private getOffsetSizeProperty(): StyleProperty {\n        return this.isVertical()\n            ? StyleProperty.OffsetHeight\n            : StyleProperty.OffsetWidth;\n    }\n\n    private getSizeProperty(): StyleProperty {\n        return this.isVertical()\n            ? StyleProperty.Height\n            : StyleProperty.Width;\n    }\n\n    private setStyle(style: StyleProperty, value: string | number) {\n        this.renderer.setStyle(this.elementRef.nativeElement, style, value);\n    }\n\n    private removeStyle(style: StyleProperty) {\n        this.renderer.removeStyle(this.elementRef.nativeElement, style);\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { McIconModule } from '@ptsecurity/mosaic/icon';\n\nimport { McGutterDirective, McSplitterAreaDirective, McSplitterComponent } from './splitter.component';\n\n\n@NgModule({\n    imports: [\n        CommonModule,\n        McIconModule\n    ],\n    exports: [\n        McGutterDirective,\n        McSplitterAreaDirective,\n        McSplitterComponent\n    ],\n    declarations: [\n        McGutterDirective,\n        McSplitterAreaDirective,\n        McSplitterComponent\n    ]\n})\nexport class McSplitterModule {\n}\n","import { animate, state, style, transition, trigger } from '@angular/animations';\nimport {\n    Attribute,\n    ChangeDetectionStrategy, ChangeDetectorRef,\n    Component,\n    ElementRef, EventEmitter, forwardRef,\n    Input, Output, ViewChild,\n    ViewEncapsulation\n} from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { FocusMonitor } from '@ptsecurity/cdk/a11y';\nimport {\n    ThemePalette,\n    CanColor, CanColorCtor,\n    CanDisable, CanDisableCtor,\n    HasTabIndex, HasTabIndexCtor,\n    mixinColor,\n    mixinDisabled,\n    mixinTabIndex\n} from '@ptsecurity/mosaic/core';\n\n\nlet nextUniqueId = 0;\n\ntype ToggleLabelPositionType = 'left' | 'right';\n\nexport class McToggleBase {\n    constructor(public _elementRef: ElementRef) {}\n}\n\nexport const _McToggleMixinBase:\n    HasTabIndexCtor &\n    CanDisableCtor &\n    CanColorCtor &\n    typeof McToggleBase = mixinTabIndex(mixinColor(mixinDisabled(McToggleBase), ThemePalette.Primary));\n\nexport class McToggleChange {\n    source: McToggleComponent;\n    checked: boolean;\n}\n\n@Component({\n    selector: 'mc-toggle',\n    exportAs: 'mcToggle',\n    templateUrl: './toggle.component.html',\n    styleUrls: ['./toggle.css'],\n    providers: [\n        {provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => McToggleComponent), multi: true}\n    ],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n    inputs: ['disabled', 'color', 'tabIndex'],\n    host: {\n        class: 'mc-toggle',\n        '[id]': 'id',\n        '[attr.id]': 'id',\n        '[class.mc-disabled]': 'disabled',\n        '[class.mc-toggle_off]': '!checked'\n    },\n    animations: [\n        trigger('switch', [\n            state('true' , style({ left: '50%' })),\n            state('false', style({ left: '1px' })),\n            transition('true <=> false', animate('150ms'))\n        ])\n    ]\n})\nexport class McToggleComponent extends _McToggleMixinBase\n    implements ControlValueAccessor, CanColor, CanDisable, HasTabIndex {\n\n    @ViewChild('input') _inputElement: ElementRef;\n\n    @Input() labelPosition: ToggleLabelPositionType = 'right';\n\n    @Input('aria-label') ariaLabel: string = '';\n    @Input('aria-labelledby') ariaLabelledby: string | null = null;\n\n    private _uniqueId: string = `mc-toggle-${++nextUniqueId}`;\n\n    // tslint:disable:member-ordering\n    @Input() id: string = this._uniqueId;\n\n    get inputId(): string {\n        return `${this.id || this._uniqueId}-input`;\n    }\n\n    @Input() name: string | null = null;\n\n    @Input() value: string;\n\n    private _disabled: boolean = false;\n\n    @Input()\n    get disabled() {\n        return this._disabled;\n    }\n\n    set disabled(value: any) {\n        if (value !== this._disabled) {\n            this._disabled = value;\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n\n    private _checked: boolean = false;\n\n    get checked() {\n        return this._checked;\n    }\n\n    @Input()\n    set checked(value: boolean) {\n        if (value !== this._checked) {\n            this._checked = value;\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n\n    @Output() readonly change: EventEmitter<McToggleChange> =\n        new EventEmitter<McToggleChange>();\n\n    constructor(public _elementRef: ElementRef,\n                private _focusMonitor: FocusMonitor,\n                private _changeDetectorRef: ChangeDetectorRef,\n                @Attribute('tabindex') tabIndex: string\n    ) {\n        super(_elementRef);\n\n        this.tabIndex = parseInt(tabIndex) || 0;\n\n        this._focusMonitor.monitor(this._elementRef.nativeElement, true);\n    }\n\n    ngOnDestroy() {\n        this._focusMonitor.stopMonitoring(this._elementRef.nativeElement);\n    }\n\n    focus(): void {\n        this._focusMonitor.focusVia(this._inputElement.nativeElement, 'keyboard');\n    }\n\n    _getAriaChecked(): boolean {\n        return this.checked;\n    }\n\n    _onInteractionEvent(event: Event) {\n        event.stopPropagation();\n    }\n\n    _onLabelTextChange() {\n        this._changeDetectorRef.markForCheck();\n    }\n\n    _onInputClick(event: MouseEvent) {\n        event.stopPropagation();\n        this._updateModelValue();\n        this._emitChangeEvent();\n    }\n\n    writeValue(value: any) {\n        this.checked = !!value;\n    }\n\n    registerOnChange(fn: any) {\n        this._onChangeCallback = fn;\n    }\n\n    registerOnTouched(fn: any) {\n        this._onTouchedCallback = fn;\n    }\n\n    setDisabledState(isDisabled: boolean) {\n        this.disabled = isDisabled;\n    }\n\n    // tslint:disable-next-line:no-empty\n    private _onTouchedCallback = () => {};\n\n    // tslint:disable-next-line:no-empty\n    private _onChangeCallback = (_: any) => {};\n\n    private _updateModelValue() {\n        this._checked = !this.checked;\n        this._onChangeCallback(this.checked);\n        this._onTouchedCallback();\n    }\n\n    private _emitChangeEvent() {\n        const event = new McToggleChange();\n        event.source = this;\n        event.checked = this.checked;\n\n        this._onChangeCallback(this.checked);\n        this.change.emit(event);\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { A11yModule } from '@ptsecurity/cdk/a11y';\nimport { McCommonModule } from '@ptsecurity/mosaic/core';\n\nimport { McToggleComponent } from './toggle.component';\n\n\n@NgModule({\n    imports: [CommonModule, BrowserAnimationsModule, A11yModule, McCommonModule],\n    exports: [McToggleComponent],\n    declarations: [McToggleComponent]\n})\nexport class McToggleModule {\n}\n","import {\n    AfterContentInit,\n    Attribute,\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component, ContentChildren, EventEmitter, forwardRef, Input, IterableDiffer,\n    IterableDiffers, Output, QueryList,\n    ViewChild,\n    ViewEncapsulation,\n    Directive, ElementRef, Inject\n} from '@angular/core';\nimport { NodeDef, ViewData } from '@angular/core/src/view';\n\nimport { SelectionModel } from '@ptsecurity/cdk/collections';\nimport { CdkTreeNode, CdkTree, CdkTreeNodeOutlet } from '@ptsecurity/cdk/tree';\n\nimport {\n    CanDisable, CanDisableCtor,\n    HasTabIndex,\n    HasTabIndexCtor,\n    mixinDisabled,\n    mixinTabIndex,\n    toBoolean\n} from '@ptsecurity/mosaic/core';\n\nimport { FocusKeyManager } from '@ptsecurity/cdk/a11y';\n\nimport { END, ENTER, HOME, LEFT_ARROW, PAGE_DOWN, PAGE_UP, RIGHT_ARROW, SPACE } from '@ptsecurity/cdk/keycodes';\n\n\n/**\n * Wrapper for the CdkTree node with Material design styles.\n */\n@Directive({\n    exportAs: 'mcTreeNodeOption',\n    selector: 'mc-tree-node-option',\n    host: {\n        tabindex: '-1',\n        '[class.mc-selected]': 'selected',\n        '[class.mc-focused]': '_hasFocus',\n        '[attr.aria-expanded]': 'isExpanded',\n        '[attr.aria-level]': 'role === \"treeitem\" ? level : null',\n        class: 'mc-tree-node',\n\n        '(focus)': '_handleFocus()',\n        '(blur)': '_handleBlur()',\n\n        '(click)': '_handleClick()'\n    },\n    providers: [\n        { provide: CdkTreeNode, useExisting: McTreeNodeOption }\n    ]\n})\nexport class McTreeNodeOption<T> extends CdkTreeNode<T> implements CanDisable {\n    @Input() role: 'treeitem' | 'group' = 'treeitem';\n\n    @Input()\n    get disabled() {\n        return this._disabled;\n    }\n\n    set disabled(value: any) {\n        const newValue = toBoolean(value);\n\n        if (newValue !== this._disabled) {\n            this._disabled = newValue;\n        }\n    }\n\n    @Input()\n    get selected(): boolean {\n        return this.treeSelection.selectedOptions && this.treeSelection.selectedOptions.isSelected(this) || false;\n    }\n\n    set selected(value: boolean) {\n        const isSelected = toBoolean(value);\n\n        if (isSelected !== this._selected) {\n            this.setSelected(isSelected);\n\n            // this.treeSelection._reportValueChange();\n        }\n    }\n\n    private _hasFocus: boolean = false;\n\n    private _disabled: boolean = false;\n    private _selected: boolean = false;\n\n    constructor(\n        protected _elementRef: ElementRef,\n        @Inject(forwardRef(() => McTreeSelection))\n        protected treeSelection: McTreeSelection<T>\n    ) {\n        super(_elementRef, treeSelection);\n    }\n\n    focus(): void {\n        this._elementRef.nativeElement.focus();\n\n        this.treeSelection.setFocusedOption(this);\n    }\n\n    toggle(): void {\n        this.selected = !this.selected;\n    }\n\n    setSelected(selected: boolean) {\n        if (this._selected === selected || !this.treeSelection.selectedOptions) { return; }\n\n        this._selected = selected;\n\n        if (selected) {\n            this.treeSelection.selectedOptions.select(this);\n        } else {\n            this.treeSelection.selectedOptions.deselect(this);\n        }\n\n        // this._changeDetector.markForCheck();\n    }\n\n    _getHeight(): number {\n        return this._elementRef.nativeElement.getClientRects()[0].height;\n    }\n\n    _handleFocus(): void {\n        if (this.disabled || this._hasFocus) { return; }\n\n        this._hasFocus = true;\n    }\n\n    _handleBlur(): void {\n        this._hasFocus = false;\n    }\n\n    _handleClick(): void {\n        if (this.disabled) { return; }\n\n        this.treeSelection.setFocusedOption(this);\n    }\n}\n\nexport const _McTreeSelectionBase:\n    HasTabIndexCtor &\n    CanDisableCtor &\n    typeof CdkTree\n    = mixinTabIndex(mixinDisabled(CdkTree));\n\nexport class McTreeNavigationChange {\n    constructor(\n        public source: McTreeSelection<any>,\n        public option: McTreeNodeOption<any>\n    ) {}\n}\n\nexport class McTreeSelectionChange {\n    constructor(\n        public source: McTreeSelection<any>,\n        public option: McTreeNodeOption<any>\n    ) {}\n}\n\n@Component({\n    exportAs: 'mcTreeSelection',\n    selector: 'mc-tree-selection',\n    template: `<ng-container cdkTreeNodeOutlet></ng-container>`,\n    host: {\n        '[tabIndex]': 'tabIndex',\n        class: 'mc-tree-selection',\n        role: 'tree-selection',\n        '(keydown)': '_onKeyDown($event)',\n        '(window:resize)': 'updateScrollSize()'\n    },\n    styleUrls: ['./tree.css'],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    providers: [{ provide: CdkTree, useExisting: McTreeSelection }]\n})\nexport class McTreeSelection<T> extends _McTreeSelectionBase<T>\n    implements AfterContentInit, CanDisable, HasTabIndex {\n    // Outlets within the tree's template where the dataNodes will be inserted.\n    @ViewChild(CdkTreeNodeOutlet) _nodeOutlet: CdkTreeNodeOutlet;\n\n    @ContentChildren(forwardRef(() => McTreeNodeOption)) options: QueryList<McTreeNodeOption<T>>;\n\n    _keyManager: FocusKeyManager<McTreeNodeOption<T>>;\n\n    selectedOptions: SelectionModel<McTreeNodeOption<T>>;\n\n    _disabled: boolean = false;\n    tabIndex: number;\n    multiple: boolean;\n    autoSelect: boolean;\n    noUnselect: boolean;\n\n    // todo temporary solution\n    withShift: boolean;\n    withCtrl: boolean;\n\n    @Input()\n    get disabled(): boolean {\n        return this._disabled;\n    }\n\n    set disabled(rawValue: boolean) {\n        const value = toBoolean(rawValue);\n\n        if (this._disabled !== value) {\n            this._disabled = value;\n\n            if (this._disabled) {\n                console.log('need disable all options');\n            } else {\n                console.log('need enable all options');\n            }\n        }\n    }\n\n    @Output() readonly navigationChange = new EventEmitter<McTreeNavigationChange>();\n\n    @Output() readonly selectionChange = new EventEmitter<McTreeSelectionChange>();\n\n    constructor(\n        private _elementRef: ElementRef,\n        _differs: IterableDiffers,\n        _changeDetectorRef: ChangeDetectorRef,\n        @Attribute('tabindex') tabIndex: string,\n        @Attribute('multiple') multiple: string,\n        @Attribute('auto-select') autoSelect: string,\n        @Attribute('no-unselect') noUnselect: string\n    ) {\n        super(_differs, _changeDetectorRef);\n\n        this.tabIndex = parseInt(tabIndex) || 0;\n\n        this.multiple = multiple === null ? true : toBoolean(multiple);\n        this.autoSelect = autoSelect === null ? true : toBoolean(autoSelect);\n        this.noUnselect = noUnselect === null ? true : toBoolean(noUnselect);\n\n        this.selectedOptions = new SelectionModel<McTreeNodeOption<T>>(this.multiple);\n    }\n\n    _onKeyDown(event: KeyboardEvent) {\n        const keyCode = event.keyCode;\n        this.withShift = event.shiftKey;\n        this.withCtrl = event.ctrlKey;\n\n        switch (keyCode) {\n            case LEFT_ARROW:\n                if (this._keyManager.activeItem) {\n                    this.treeControl.collapse(this._keyManager.activeItem.data);\n                }\n\n                event.preventDefault();\n\n                break;\n            case RIGHT_ARROW:\n                if (this._keyManager.activeItem) {\n                    this.treeControl.expand(this._keyManager.activeItem.data);\n                }\n\n                event.preventDefault();\n\n                break;\n            case SPACE:\n            case ENTER:\n                this.toggleFocusedOption();\n                event.preventDefault();\n\n                break;\n            case HOME:\n                this._keyManager.setFirstItemActive();\n                event.preventDefault();\n\n                break;\n            case END:\n                this._keyManager.setLastItemActive();\n                event.preventDefault();\n\n                break;\n            case PAGE_UP:\n                this._keyManager.setPreviousPageItemActive();\n                event.preventDefault();\n\n                break;\n            case PAGE_DOWN:\n                this._keyManager.setNextPageItemActive();\n                event.preventDefault();\n\n                break;\n            default:\n                this._keyManager.onKeydown(event);\n        }\n    }\n\n    ngAfterContentInit(): void {\n        this._keyManager = new FocusKeyManager<McTreeNodeOption<T>>(this.options)\n            .withTypeAhead()\n            .withVerticalOrientation(true)\n            .withHorizontalOrientation(null);\n    }\n\n    updateScrollSize(): void {\n        if (!this.options.first) { return; }\n\n        this._keyManager.withScrollSize(Math.floor(this._getHeight() / this.options.first._getHeight()));\n    }\n\n    setFocusedOption(option: McTreeNodeOption<T>): void {\n        this._keyManager.updateActiveItem(option);\n\n        if (this.withShift && this.multiple) {\n            const previousIndex = this._keyManager.previousActiveItemIndex;\n            const activeIndex = this._keyManager.activeItemIndex;\n\n            if (previousIndex < activeIndex) {\n                this.options.forEach((item, index) => {\n                    if (index >= previousIndex && index <= activeIndex) { item.setSelected(true); }\n                });\n            } else {\n                this.options.forEach((item, index) => {\n                    if (index >= activeIndex && index <= previousIndex) { item.setSelected(true); }\n                });\n            }\n\n            this.withShift = false;\n        } else if (this.withCtrl) {\n            this.withCtrl = false;\n\n            if (!this._canDeselectLast(option)) { return; }\n\n            option.toggle();\n        } else {\n            if (this.autoSelect) {\n                this.options.forEach((item) => item.setSelected(false));\n                option.setSelected(true);\n            }\n        }\n\n        this._emitNavigationEvent(option);\n    }\n\n    // Toggles the selected state of the currently focused option.\n    toggleFocusedOption(): void {\n        const focusedIndex = this._keyManager.activeItemIndex;\n\n        if (focusedIndex != null && this._isValidIndex(focusedIndex)) {\n            const focusedOption: McTreeNodeOption<T> = this.options.toArray()[focusedIndex];\n\n            if (focusedOption && this._canDeselectLast(focusedOption)) {\n                focusedOption.toggle();\n\n                // Emit a change event because the focused option changed its state through user interaction.\n                this._emitChangeEvent(focusedOption);\n            }\n        }\n    }\n\n    renderNodeChanges(\n        data: T[],\n        dataDiffer: IterableDiffer<T> = this._dataDiffer,\n        viewContainer: any = this._nodeOutlet.viewContainer,\n        parentData?: T\n    ) {\n        super.renderNodeChanges(data, dataDiffer, viewContainer, parentData);\n\n        const arrayOfInstances = [];\n\n        viewContainer._embeddedViews.forEach((view: ViewData) => {\n            const viewDef = view.def;\n\n            viewDef.nodes.forEach((node: NodeDef) => {\n                if (viewDef.nodeMatchedQueries === node.matchedQueryIds) {\n                    const nodeData: any = view.nodes[node.nodeIndex];\n\n                    arrayOfInstances.push(nodeData.instance as never);\n                }\n            });\n        });\n\n        if (this.options) {\n            this.options.reset(arrayOfInstances);\n            this.options.notifyOnChanges();\n        }\n\n        this.updateScrollSize();\n    }\n\n    _getHeight(): number {\n        return this._elementRef.nativeElement.getClientRects()[0].height;\n    }\n\n    _emitNavigationEvent(option: McTreeNodeOption<T>): void {\n        this.navigationChange.emit(new McTreeNavigationChange(this, option));\n    }\n\n    _emitChangeEvent(option: McTreeNodeOption<T>): void {\n        this.selectionChange.emit(new McTreeNavigationChange(this, option));\n    }\n\n    /**\n     * Utility to ensure all indexes are valid.\n     * @param index The index to be checked.\n     * @returns True if the index is valid for our list of options.\n     */\n    private _isValidIndex(index: number): boolean {\n        return index >= 0 && index < this.options.length;\n    }\n\n    private _canDeselectLast(option: McTreeNodeOption<T>): boolean {\n        return !(this.noUnselect && this.selectedOptions.selected.length === 1 && option.selected);\n    }\n}\n\n","import { NgModule } from '@angular/core';\n\nimport { CommonModule } from '@angular/common';\nimport { CdkTreeModule } from '@ptsecurity/cdk/tree';\n\nimport { McTreeNodeDef } from './node';\nimport { McTreeNodePadding } from './padding';\nimport { McTreeSelection, McTreeNodeOption } from './tree-selection';\n\n\nconst MC_TREE_DIRECTIVES = [\n    McTreeNodeDef,\n    McTreeNodePadding,\n    McTreeSelection,\n    McTreeNodeOption\n];\n\n@NgModule({\n    imports: [CommonModule, CdkTreeModule],\n    exports: MC_TREE_DIRECTIVES,\n    declarations: MC_TREE_DIRECTIVES\n})\nexport class McTreeModule {}\n","import { ICollectionViewer, DataSource } from '@ptsecurity/cdk/collections';\nimport { FlatTreeControl, ITreeControl } from '@ptsecurity/cdk/tree';\nimport { BehaviorSubject, merge, Observable } from 'rxjs';\nimport { map, take } from 'rxjs/operators';\n\n\n/**\n * Tree flattener to convert a normal type of node to node with children & level information.\n * Transform nested nodes of type `T` to flattened nodes of type `F`.\n *\n * For example, the input data of type `T` is nested, and contains its children data:\n *   SomeNode: {\n *     key: 'Fruits',\n *     children: [\n *       NodeOne: {\n *         key: 'Apple',\n *       },\n *       NodeTwo: {\n *        key: 'Pear',\n *      }\n *    ]\n *  }\n *  After flattener flatten the tree, the structure will become\n *  SomeNode: {\n *    key: 'Fruits',\n *    expandable: true,\n *    level: 1\n *  },\n *  NodeOne: {\n *    key: 'Apple',\n *    expandable: false,\n *    level: 2\n *  },\n *  NodeTwo: {\n *   key: 'Pear',\n *   expandable: false,\n *   level: 2\n * }\n * and the output flattened type is `F` with additional information.\n */\nexport class McTreeFlattener<T, F> {\n\n    constructor(public transformFunction: (node: T, level: number) => F,\n                public getLevel: (node: F) => number,\n                public isExpandable: (node: F) => boolean,\n                public getChildren: (node: T) => Observable<T[]>) {\n    }\n\n    _flattenNode(node: T, level: number,\n                 resultNodes: F[], parentMap: boolean[]): F[] {\n        const flatNode = this.transformFunction(node, level);\n        resultNodes.push(flatNode);\n\n        if (this.isExpandable(flatNode)) {\n            this.getChildren(node).pipe(take(1)).subscribe((children) => {\n                children.forEach((child, index) => {\n                    const childParentMap: boolean[] = parentMap.slice();\n                    childParentMap.push(index !== children.length - 1);\n                    this._flattenNode(child, level + 1, resultNodes, childParentMap);\n                });\n            });\n        }\n\n        return resultNodes;\n    }\n\n    /**\n     * Flatten a list of node type T to flattened version of node F.\n     * Please note that type T may be nested, and the length of `structuredData` may be different\n     * from that of returned list `F[]`.\n     */\n    flattenNodes(structuredData: T[]): F[] {\n        const resultNodes: F[] = [];\n        structuredData.forEach((node) => this._flattenNode(node, 0, resultNodes, []));\n\n        return resultNodes;\n    }\n\n    /**\n     * Expand flattened node with current expansion status.\n     * The returned list may have different length.\n     */\n    expandFlattenedNodes(nodes: F[], treeControl: ITreeControl<F>): F[] {\n        const results: F[] = [];\n        const currentExpand: boolean[] = [];\n        currentExpand[0] = true;\n\n        nodes.forEach((node) => {\n            let expand = true;\n            for (let i = 0; i <= this.getLevel(node); i++) {\n                expand = expand && currentExpand[i];\n            }\n\n            if (expand) { results.push(node); }\n\n            if (this.isExpandable(node)) {\n                currentExpand[this.getLevel(node) + 1] = treeControl.isExpanded(node);\n            }\n        });\n\n        return results;\n    }\n}\n\n\n/**\n * Data source for flat tree.\n * The data source need to handle expansion/collapsion of the tree node and change the data feed\n * to `McTree`.\n * The nested tree nodes of type `T` are flattened through `MсTreeFlattener`, and converted\n * to type `F` for `McTree` to consume.\n */\nexport class McTreeFlatDataSource<T, F> extends DataSource<F> {\n    _flattenedData = new BehaviorSubject<F[]>([]);\n\n    _expandedData = new BehaviorSubject<F[]>([]);\n\n    _data: BehaviorSubject<T[]>;\n\n    get data() {\n        return this._data.value;\n    }\n\n    set data(value: T[]) {\n        this._data.next(value);\n        this._flattenedData.next(this.treeFlattener.flattenNodes(this.data));\n        this.treeControl.dataNodes = this._flattenedData.value;\n    }\n\n    constructor(private treeControl: FlatTreeControl<F>,\n                private treeFlattener: McTreeFlattener<T, F>,\n                initialData: T[] = []) {\n        super();\n        this._data = new BehaviorSubject<T[]>(initialData);\n    }\n\n    connect(collectionViewer: ICollectionViewer): Observable<F[]> {\n        const changes = [\n            collectionViewer.viewChange,\n            this.treeControl.expansionModel.onChange!,\n            this._flattenedData\n        ];\n\n        return merge(...changes).pipe(map(() => {\n            this._expandedData.next(\n                this.treeFlattener.expandFlattenedNodes(this._flattenedData.value, this.treeControl));\n\n            return this._expandedData.value;\n        }));\n    }\n\n    disconnect() {\n        // no op\n    }\n}\n\n","import { ICollectionViewer, DataSource } from '@ptsecurity/cdk/collections';\nimport { BehaviorSubject, merge, Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\n\n/**\n * Data source for nested tree.\n *\n * The data source for nested tree doesn't have to consider node flattener, or the way to expand\n * or collapse. The expansion/collapsion will be handled by ITreeControl and each non-leaf node.\n */\nexport class McTreeNestedDataSource<T> extends DataSource<T> {\n    _data = new BehaviorSubject<T[]>([]);\n\n    /**\n     * Data for the nested tree\n     */\n    get data() {\n        return this._data.value;\n    }\n\n    set data(value: T[]) {\n        this._data.next(value);\n    }\n\n    connect(collectionViewer: ICollectionViewer): Observable<T[]> {\n        return merge(...[collectionViewer.viewChange, this._data])\n            .pipe(map(() => this.data));\n    }\n\n    disconnect() {\n        // no op\n    }\n}\n\n","import {\n    ElementRef,\n    QueryList,\n    ContentChildren,\n    Component,\n    ChangeDetectionStrategy,\n    ViewEncapsulation\n} from '@angular/core';\n\nimport { mixinColor, CanColor, CanColorCtor } from '@ptsecurity/mosaic/core';\nimport { McIcon } from '@ptsecurity/mosaic/icon';\n\n\nexport class McTagBase {\n    constructor(public _elementRef: ElementRef) {}\n}\n\nexport const _McTagMixinBase: CanColorCtor & typeof McTagBase\n    = mixinColor(McTagBase);\n\n\n@Component({\n    selector: 'mc-tag',\n    templateUrl: 'tag.partial.html',\n    styleUrls: ['./tag.css'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n    host: { class: 'mc-tag' },\n    inputs: ['color']\n})\nexport class McTag extends _McTagMixinBase implements CanColor {\n    @ContentChildren(McIcon) contentChildren: QueryList<McIcon>;\n\n    nativeElement: HTMLElement;\n\n    constructor(elementRef: ElementRef) {\n        super(elementRef);\n\n        this.nativeElement = elementRef.nativeElement;\n    }\n\n    ngAfterContentInit() {\n        this._addClassModificatorForIcons();\n    }\n\n    _addClassModificatorForIcons() {\n        const icons = this.contentChildren.map((item) => item._elementRef.nativeElement);\n\n        if (icons.length === 1) {\n            const iconElement = icons[0];\n\n            if (!iconElement.previousElementSibling && !iconElement.nextElementSibling) {\n                if (iconElement.nextSibling) {\n                    iconElement.classList.add('mc-icon_left');\n                    this.nativeElement.classList.add('mc-left-icon');\n                }\n\n                if (iconElement.previousSibling) {\n                    iconElement.classList.add('mc-icon_right');\n                    this.nativeElement.classList.add('mc-right-icon');\n                }\n            }\n        } else if (icons.length > 1) {\n            const firstIconElement = icons[0];\n            const secondIconElement = icons[1];\n\n            firstIconElement.classList.add('mc-icon_left');\n            secondIconElement.classList.add('mc-icon_right');\n        }\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { PlatformModule } from '@ptsecurity/cdk/platform';\n\nimport { McTag } from './tag.component';\n\n\n@NgModule({\n    imports: [\n        CommonModule,\n        PlatformModule\n    ],\n    exports: [\n        McTag\n    ],\n    declarations: [\n        McTag\n    ]\n})\nexport class McTagModule {}\n","import {\n    Directive,\n    DoCheck,\n    ElementRef,\n    forwardRef,\n    Inject,\n    InjectionToken,\n    Input,\n    OnChanges,\n    OnDestroy,\n    Optional,\n    Renderer2,\n    Self\n} from '@angular/core';\nimport {\n    ControlValueAccessor,\n    FormControl,\n    FormGroupDirective,\n    NG_VALIDATORS,\n    NgControl,\n    NgForm,\n    ValidationErrors,\n    ValidatorFn,\n    Validators\n} from '@angular/forms';\nimport {\n    noop,\n    Subject\n} from 'rxjs';\n\nimport { coerceBooleanProperty } from '@ptsecurity/cdk/coercion';\nimport {\n    CanUpdateErrorState,\n    CanUpdateErrorStateCtor,\n    ErrorStateMatcher,\n    mixinErrorState\n} from '@ptsecurity/mosaic/core';\nimport { McFormFieldControl } from '@ptsecurity/mosaic/form-field';\n\nimport {\n    ARROW_DOWN_KEYCODE,\n    ARROW_LEFT_KEYCODE,\n    ARROW_RIGHT_KEYCODE,\n    ARROW_UP_KEYCODE,\n    DEFAULT_TIME_FORMAT,\n    HOURS_PER_DAY,\n    HOURS_MINUTES_REGEXP,\n    HOURS_MINUTES_SECONDS_REGEXP,\n    HOURS_ONLY_REGEXP,\n    MINUTES_PER_HOUR,\n    SECONDS_PER_MINUTE,\n    TIMEFORMAT_PLACEHOLDERS,\n    TimeFormats,\n    TimeParts\n} from './timepicker.constants';\n\n\nlet uniqueComponentIdSuffix: number = 0;\nlet validatorOnChange: () => void = noop;\nlet validator: ValidatorFn | null = () => null;\n\nexport const MC_INPUT_VALUE_ACCESSOR =\n    new InjectionToken<{ value: any }>('MC_INPUT_VALUE_ACCESSOR');\n\nexport class McTimepickerBase {\n    constructor(\n        public _defaultErrorStateMatcher: ErrorStateMatcher,\n        public _parentForm: NgForm,\n        public _parentFormGroup: FormGroupDirective,\n        public ngControl: NgControl) { }\n}\n\n// tslint:disable-next-line naming-convention\nexport const McTimepickerMixinBase:\n    CanUpdateErrorStateCtor &\n    typeof McTimepickerBase = mixinErrorState(McTimepickerBase);\n\n@Directive({\n    selector: 'input[mcTimepicker]',\n    exportAs: 'mcTimepickerInput',\n    host: {\n        class: 'mc-timepicker mc-input',\n        // Native input properties that are overwritten by Angular inputs need to be synced with\n        // the native input element. Otherwise property bindings for those don't work.\n        '[attr.id]': 'id',\n        '[attr.placeholder]': 'placeholder',\n        '[disabled]': 'disabled',\n        '[required]': 'required',\n        '[attr.time-format]': 'timeFormat',\n        '[attr.min-time]': 'minTime',\n        '[attr.max-time]': 'maxTime',\n        '[attr.value]': 'value',\n        '(blur)': 'onBlur()',\n        '(focus)': 'focusChanged(true)',\n        '(input)': 'onInput()',\n        '(paste)': 'onPaste($event)',\n        '(keydown)': 'onKeyDown($event)'\n    },\n    providers: [\n        {\n            provide: NG_VALIDATORS,\n            useValue: {\n                validate(c) { return validator ? validator(c) : null; },\n                registerOnValidatorChange(fn: () => void): void { validatorOnChange = fn; }\n            },\n            multi: true\n        },\n        {\n            provide: McFormFieldControl,\n            useExisting: forwardRef(() => McTimepicker)\n        }\n    ]\n\n})\nexport class McTimepicker extends McTimepickerMixinBase\n    implements McFormFieldControl<any>,\n        OnChanges,\n        OnDestroy,\n        DoCheck,\n        CanUpdateErrorState,\n        ControlValueAccessor {\n\n    /** An object used to control when error messages are shown. */\n    @Input() errorStateMatcher: ErrorStateMatcher;\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    focused: boolean = false;\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    readonly stateChanges: Subject<void> = new Subject<void>();\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    controlType: string = 'mc-timepicker';\n\n    @Input()\n    get disabled(): boolean {\n        if (this.ngControl && this.ngControl.disabled !== null) { return this.ngControl.disabled; }\n\n        return this._disabled;\n    }\n\n    set disabled(value: boolean) {\n        this._disabled = coerceBooleanProperty(value);\n\n        // Browsers may not fire the blur event if the input is disabled too quickly.\n        // Reset from here to ensure that the element doesn't become stuck.\n        if (this.focused) {\n            this.focused = false;\n        }\n\n        this.stateChanges.next();\n    }\n\n    @Input()\n    get id(): string { return this._id; }\n\n    set id(value: string) { this._id = value || this.uid; }\n\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    @Input() placeholder: string;\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    @Input()\n    get required(): boolean { return this._required; }\n\n    set required(value: boolean) { this._required = coerceBooleanProperty(value); }\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    @Input()\n    get value(): string { return this.inputValueAccessor.value; }\n\n    set value(value: string) {\n        if (value !== this.value) {\n            this.inputValueAccessor.value = value;\n            this.applyInputChanges();\n        }\n    }\n\n    @Input('time-format')\n    get timeFormat(): TimeFormats { return this._timeFormat; }\n\n    set timeFormat(formatValue: TimeFormats) {\n        this._timeFormat = Object\n            .keys(TimeFormats)\n            .map((timeFormatKey) => TimeFormats[timeFormatKey])\n            .indexOf(formatValue) > -1 ? formatValue : DEFAULT_TIME_FORMAT;\n\n        validatorOnChange();\n        this.placeholder = TIMEFORMAT_PLACEHOLDERS[this._timeFormat];\n    }\n\n    @Input('min-time')\n    get minTime(): string | null { return this._minTime; }\n\n    set minTime(minValue: string | null) {\n        this._minTime = minValue;\n        this.minDateTime = minValue !== null ? this.getDateFromTimeString(minValue) : undefined;\n        validatorOnChange();\n    }\n\n    @Input('max-time')\n    get maxTime(): string | null { return this._maxTime; }\n\n    set maxTime(maxValue: string | null) {\n        this._maxTime = maxValue;\n        this.maxDateTime = maxValue !== null ? this.getDateFromTimeString(maxValue) : undefined;\n        validatorOnChange();\n    }\n\n    private _id: string;\n    private readonly uid = `mc-timepicker-${uniqueComponentIdSuffix++}`;\n    private _disabled: boolean;\n    private _required: boolean;\n    private previousNativeValue: any;\n    private readonly inputValueAccessor: { value: any };\n    private onChange: (value: any) => void;\n    private onTouched: () => void;\n    private _timeFormat: TimeFormats;\n    private _minTime: string | null = null;\n    private minDateTime: Date | undefined;\n    private _maxTime: string | null = null;\n    private maxDateTime: Date | undefined;\n    private currentDateTimeInput: Date | undefined;\n\n    constructor(private readonly elementRef: ElementRef,\n                @Optional() @Self() public ngControl: NgControl,\n                @Optional() _parentForm: NgForm,\n                @Optional() _parentFormGroup: FormGroupDirective,\n                _defaultErrorStateMatcher: ErrorStateMatcher,\n                @Optional() @Self() @Inject(MC_INPUT_VALUE_ACCESSOR) inputValueAccessor: any,\n                private readonly renderer: Renderer2) {\n        super(_defaultErrorStateMatcher, _parentForm, _parentFormGroup, ngControl);\n\n        // If no input value accessor was explicitly specified, use the element as the input value\n        // accessor.\n        this.inputValueAccessor = inputValueAccessor || this.elementRef.nativeElement;\n\n        this.previousNativeValue = this.value;\n        this.onChange = noop;\n\n        // Force setter to be called in case id was not specified.\n        this.id = this.id;\n\n        this.placeholder = TIMEFORMAT_PLACEHOLDERS[DEFAULT_TIME_FORMAT];\n\n        // Instead of NG_VALUE_ACCESSOR (https://github.com/angular/material2/issues/8158#issuecomment-344618103)\n        if (this.ngControl) { this.ngControl.valueAccessor = this; }\n\n        // Substitute initial empty validator with validator linked to directive object instance (workaround)\n        validator = Validators.compose([\n            () => this.parseValidator(),\n            () => this.minTimeValidator(),\n            () => this.maxTimeValidator()\n        ]);\n    }\n\n    ngOnChanges(): void {\n        this.stateChanges.next();\n    }\n\n    ngOnDestroy(): void {\n        this.stateChanges.complete();\n    }\n\n    ngDoCheck(): void {\n        if (this.ngControl) {\n            // We need to re-evaluate this on every change detection cycle, because there are some\n            // error triggers that we can't subscribe to (e.g. parent form submissions). This means\n            // that whatever logic is in here has to be super lean or we risk destroying the performance.\n            this.updateErrorState();\n        }\n\n        // We need to dirty-check the native element's value, because there are some cases where\n        // we won't be notified when it changes (e.g. the consumer isn't using forms or they're\n        // updating the value using `emitEvent: false`).\n        this.dirtyCheckNativeValue();\n    }\n\n    focus(): void {\n        this.elementRef.nativeElement.focus();\n    }\n\n    focusChanged(isFocused: boolean): void {\n        if (isFocused !== this.focused) {\n            this.focused = isFocused;\n            this.onTouched();\n            this.stateChanges.next();\n        }\n    }\n\n    onBlur() {\n        this.applyInputChanges();\n        this.focusChanged(false);\n    }\n\n    onPaste($event) {\n        $event.preventDefault();\n        const clipboardUserInput: string = $event.clipboardData.getData('text');\n\n        if (this.getDateFromTimeString(clipboardUserInput) === undefined) { return; }\n\n        this.elementRef.nativeElement.value = clipboardUserInput;\n        this.onInput();\n    }\n\n    onInput() {\n        const initialCursorStart: number = this.elementRef.nativeElement.selectionStart;\n        const initialCursorEnd: number = this.elementRef.nativeElement.selectionEnd;\n        let isAutocompleteTriggered: boolean = false;\n\n        const {\n            hoursOnly,\n            hoursAndMinutes,\n            hoursAndMinutesAndSeconds\n        } = this.getParsedTimeParts(this.elementRef.nativeElement.value);\n\n        // tslint:disable no-magic-numbers\n        if (hoursOnly &&\n            hoursOnly[1] &&\n            hoursOnly[1].length === 2) {\n            isAutocompleteTriggered = true;\n        } else if (hoursAndMinutes &&\n            hoursAndMinutes[1].length === 1 &&\n            hoursAndMinutes[2] &&\n            hoursAndMinutes[2].length === 2) {\n            isAutocompleteTriggered = true;\n        } else if (hoursAndMinutesAndSeconds &&\n            hoursAndMinutesAndSeconds[1].length === 2 &&\n            hoursAndMinutesAndSeconds[2].length === 2 &&\n            hoursAndMinutesAndSeconds[3] &&\n            hoursAndMinutesAndSeconds[3].length === 2) {\n            isAutocompleteTriggered = true;\n        }\n        // tslint:enable no-magic-numbers\n\n        this.applyInputChanges({ doTimestringReformat: isAutocompleteTriggered });\n\n        this.elementRef.nativeElement.selectionStart = initialCursorStart;\n        this.elementRef.nativeElement.selectionEnd = initialCursorEnd;\n\n        if (isAutocompleteTriggered && this.ngControl.errors === null) {\n            this.createSelectionOfTimeComponentInInput(initialCursorStart + 1);\n        }\n    }\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    get empty(): boolean {\n        return !this.elementRef.nativeElement.value && !this.isBadInput();\n    }\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    onContainerClick() {\n        this.focus();\n    }\n\n    writeValue(value: Date | null): void {\n        if (value !== null) {\n            this.renderer.setProperty(this.elementRef.nativeElement,\n                'value',\n                this.getTimeStringFromDate(value, this.timeFormat)\n            );\n        }\n        this.onChange(value || null);\n        this.applyInputChanges();\n    }\n\n    onKeyDown(event: KeyboardEvent): void {\n\n        const keyCode: string = this.getKeyCode(event);\n\n        if (keyCode === ARROW_UP_KEYCODE || keyCode === ARROW_DOWN_KEYCODE) {\n            this.upDownTimeByArrowKeys(event);\n        }\n        if (keyCode === ARROW_LEFT_KEYCODE || keyCode === ARROW_RIGHT_KEYCODE) {\n            this.switchSelectionBetweenTimeparts(event);\n        }\n    }\n\n    registerOnChange(fn: (value: Date) => void): void {\n        this.onChange = fn;\n    }\n\n    registerOnTouched(fn: () => void): void {\n        this.onTouched = fn;\n    }\n\n    /** Does some manual dirty checking on the native input `value` property. */\n    private dirtyCheckNativeValue() {\n        const newValue = this.value;\n\n        if (this.previousNativeValue !== newValue) {\n            this.previousNativeValue = newValue;\n            this.stateChanges.next();\n        }\n    }\n\n    /** Checks whether the input is invalid based on the native validation. */\n    private isBadInput(): boolean {\n        const validity = (<HTMLInputElement> this.elementRef.nativeElement).validity;\n\n        return validity && validity.badInput;\n    }\n\n    private applyInputChanges(applyParams: {\n        changedTime?: Date;\n        doTimestringReformat?: boolean;\n    } = {}): void {\n        const { changedTime, doTimestringReformat = true } = applyParams;\n\n        const timeToApply: Date | undefined = changedTime ||\n            this.getDateFromTimeString(this.elementRef.nativeElement.value);\n        this.currentDateTimeInput = timeToApply;\n\n        if (doTimestringReformat && timeToApply !== undefined) {\n            const selectionStart: number = this.elementRef.nativeElement.selectionStart;\n            const selectionEnd: number = this.elementRef.nativeElement.selectionEnd;\n            this.renderer.setProperty(\n                this.elementRef.nativeElement,\n                'value',\n                this.getTimeStringFromDate(timeToApply, this.timeFormat));\n            this.elementRef.nativeElement.selectionStart = selectionStart;\n            this.elementRef.nativeElement.selectionEnd = selectionEnd;\n        }\n\n        (<FormControl> this.ngControl.control).updateValueAndValidity();\n        const result = this.ngControl.errors === null && timeToApply !== undefined ? timeToApply : null;\n        this.onChange(result);\n        this.stateChanges.next();\n    }\n\n    private upDownTimeByArrowKeys(event: KeyboardEvent): void {\n        event.preventDefault();\n\n        let changedTime: Date | undefined = this.currentDateTimeInput;\n        if (changedTime !== undefined) {\n            const cursorPos = this.elementRef.nativeElement.selectionStart;\n\n            const modifiedTimePart = this.getTimeEditMetrics(cursorPos)\n                .modifiedTimePart;\n            const keyCode: string = this.getKeyCode(event);\n            if (keyCode === ARROW_UP_KEYCODE) { changedTime = this.incrementTime(changedTime, modifiedTimePart); }\n            if (keyCode === ARROW_DOWN_KEYCODE) { changedTime = this.decrementTime(changedTime, modifiedTimePart); }\n            this.applyInputChanges({ changedTime });\n            this.createSelectionOfTimeComponentInInput(cursorPos);\n        }\n    }\n\n    private switchSelectionBetweenTimeparts(event: KeyboardEvent): void {\n        const changedTime: Date | undefined = this.currentDateTimeInput;\n        const keyCode: string = this.getKeyCode(event);\n\n        if (changedTime !== undefined) {\n            let cursorPos: number = this.elementRef.nativeElement.selectionStart;\n            if (keyCode === ARROW_LEFT_KEYCODE) {\n                cursorPos = this.getCursorPositionOfPrevTimePartStart(cursorPos, this.elementRef.nativeElement.value);\n            } else if (keyCode === ARROW_RIGHT_KEYCODE) {\n                cursorPos = this.getCursorPositionOfNextTimePartStart(cursorPos, this.elementRef.nativeElement.value);\n            }\n            this.createSelectionOfTimeComponentInInput(cursorPos);\n        }\n    }\n\n    /**\n     * @description Microsoft EDGE doesn't support KeyboaedEvent.code thus we need this helper\n     */\n    private getKeyCode(event: KeyboardEvent): string {\n        return event.code || event.key;\n    }\n\n    private createSelectionOfTimeComponentInInput(cursorPos: number): void {\n        setTimeout(() => {\n            const newEditParams = this.getTimeEditMetrics(cursorPos);\n            this.elementRef.nativeElement.selectionStart = newEditParams.cursorStartPosition;\n            this.elementRef.nativeElement.selectionEnd = newEditParams.cursorEndPosition;\n        });\n    }\n\n    private incrementTime(dateVal: Date,\n                          whatToIncrement: TimeParts = TimeParts.seconds): Date {\n        let { hours, minutes, seconds } = this.getTimeDigitsFromDate(dateVal);\n\n        switch (whatToIncrement) {\n            case TimeParts.hours:\n                hours++;\n                break;\n            case TimeParts.minutes:\n                minutes++;\n                break;\n            case TimeParts.seconds:\n                seconds++;\n                break;\n            default:\n        }\n\n        if (seconds > SECONDS_PER_MINUTE) { seconds = 0; }\n\n        if (minutes > MINUTES_PER_HOUR) { minutes = 0; }\n\n        if (hours > HOURS_PER_DAY) { hours = 0; }\n\n        return <Date> this.getDateFromTimeDigits(hours, minutes, seconds);\n    }\n\n    /**\n     * @description Decrement part of time\n     */\n    private decrementTime(dateVal: Date,\n                          whatToDecrement: TimeParts = TimeParts.seconds): Date {\n        let { hours, minutes, seconds } = this.getTimeDigitsFromDate(dateVal);\n\n        switch (whatToDecrement) {\n            case TimeParts.hours:\n                hours--;\n                break;\n            case TimeParts.minutes:\n                minutes--;\n                break;\n            case TimeParts.seconds:\n                seconds--;\n                break;\n            default:\n        }\n\n        if (seconds < 0) { seconds = SECONDS_PER_MINUTE; }\n\n        if (minutes < 0) { minutes = MINUTES_PER_HOUR; }\n\n        if (hours < 0) { hours = HOURS_PER_DAY; }\n\n        return <Date> this.getDateFromTimeDigits(hours, minutes, seconds);\n    }\n\n    private getCursorPositionOfPrevTimePartStart(cursorPos: number, timeString: string): number {\n        return cursorPos === 0 ? timeString.length : cursorPos - 1;\n    }\n\n    private getCursorPositionOfNextTimePartStart(cursorPos: number,\n                                                 timeString: string,\n                                                 timeDevider: string = ':'): number {\n        const nextDividerPos: number = timeString.indexOf(timeDevider, cursorPos);\n\n        return nextDividerPos !== undefined ? nextDividerPos + 1 : 0;\n    }\n\n    /**\n     * @description Get params for arrow-keys (up/down) time valie edit.\n     * @param cursorPosition Current cursor position in timeString\n     */\n    private getTimeEditMetrics(cursorPosition: number): {\n        modifiedTimePart: TimeParts;\n        cursorStartPosition: number;\n        cursorEndPosition: number;\n    } {\n        const timeString: string = this.elementRef.nativeElement.value;\n        let modifiedTimePart: TimeParts;\n        let cursorStartPosition: number;\n        let cursorEndPosition: number;\n        const hoursIndex = 0;\n        const minutesIndex = timeString.indexOf(':', hoursIndex + 1);\n        const secondsIndex = minutesIndex !== -1 ? timeString.indexOf(':', minutesIndex + 1) : -1;\n\n        if (secondsIndex !== -1 && cursorPosition > secondsIndex) {\n            modifiedTimePart = TimeParts.seconds;\n            cursorStartPosition = secondsIndex + 1;\n            cursorEndPosition = timeString.length;\n        } else if (minutesIndex !== -1 && cursorPosition > minutesIndex) {\n            modifiedTimePart = TimeParts.minutes;\n            cursorStartPosition = minutesIndex + 1;\n            cursorEndPosition = secondsIndex > -1 ? secondsIndex : timeString.length;\n        } else {\n            modifiedTimePart = TimeParts.hours;\n            cursorStartPosition = hoursIndex;\n            cursorEndPosition = minutesIndex !== -1 ? minutesIndex : timeString.length;\n        }\n\n        return {\n            modifiedTimePart,\n            cursorStartPosition,\n            cursorEndPosition\n        };\n    }\n\n    /**\n     * @description Create time string for displaying inside input element of UI\n     */\n    private getTimeStringFromDate(tempVal: Date,\n                                  timeFormat: TimeFormats = DEFAULT_TIME_FORMAT): string {\n        const hours: string = this.getNumberWithLeadingZero(tempVal.getHours());\n        const minutes: string = this.getNumberWithLeadingZero(tempVal.getMinutes());\n        const seconds: string = this.getNumberWithLeadingZero(tempVal.getSeconds());\n\n        const formattedTimeGenerators = {\n            [TimeFormats.HHmm]: () => `${hours}:${minutes}`,\n            [TimeFormats.HHmmss]: () => `${hours}:${minutes}:${seconds}`\n        };\n\n        return formattedTimeGenerators[timeFormat]();\n    }\n\n    private getParsedTimeParts(timeString: string): {\n        hoursOnly: any;\n        hoursAndMinutes: any;\n        hoursAndMinutesAndSeconds: any;\n    } {\n        const hoursAndMinutesAndSeconds = timeString.match(HOURS_MINUTES_SECONDS_REGEXP);\n        const hoursAndMinutes = timeString.match(HOURS_MINUTES_REGEXP);\n        const hoursOnly = timeString.match(HOURS_ONLY_REGEXP);\n\n        return {\n            hoursOnly,\n            hoursAndMinutes,\n            hoursAndMinutesAndSeconds\n        };\n    }\n\n    /**\n     * @description Create Date object from separate parts of time\n     */\n    private getDateFromTimeDigits(hours: number, minutes: number, seconds: number = 0): Date | undefined {\n        return this.getDateFromTimeString(`${hours}:${minutes}:${seconds}`);\n    }\n\n    private getDateFromTimeString(timeString: string | undefined): Date | undefined {\n        // TODO Use moment-js\n        if (timeString === undefined) { return; }\n\n        const {\n            hoursOnly,\n            hoursAndMinutes,\n            hoursAndMinutesAndSeconds\n        } = this.getParsedTimeParts(timeString);\n\n        if (timeString.trim().length === 0 ||\n            hoursOnly === null && hoursAndMinutes === null && hoursAndMinutesAndSeconds === null) {\n            return;\n        }\n\n        // tslint:disable no-magic-numbers\n        let hours: number = 0;\n        let minutes: number = 0;\n        let seconds: number = 0;\n\n        if (hoursOnly) {\n            hours = Number(hoursOnly[1]);\n        } else if (hoursAndMinutes) {\n            hours = Number(hoursAndMinutes[1]);\n            minutes = Number(hoursAndMinutes[2]);\n        } else if (hoursAndMinutesAndSeconds) {\n            hours = Number(hoursAndMinutesAndSeconds[1]);\n            minutes = Number(hoursAndMinutesAndSeconds[2]);\n            seconds = Number(hoursAndMinutesAndSeconds[3]);\n        }\n        // const timestamp: number = Date.parse(fullDateString);\n        const resultDate: Date = new Date(1970, 0, 1, hours, minutes, seconds);\n        // tslint:enable no-magic-numbers\n\n        return isNaN(resultDate.getTime()) ? undefined : resultDate;\n    }\n\n    private getNumberWithLeadingZero(digit: number): string {\n        const MAX_DIGIT_WITH_LEADING_ZERO: number = 9;\n\n        return digit > MAX_DIGIT_WITH_LEADING_ZERO ? `${digit}` : `0${digit}`;\n    }\n\n    private getTimeDigitsFromDate(dateVal: Date): { hours: number; minutes: number; seconds: number } {\n        return {\n            hours: dateVal.getHours(),\n            minutes: dateVal.getMinutes(),\n            seconds: dateVal.getSeconds()\n        };\n    }\n\n    private parseValidator(): ValidationErrors | null {\n        return this.currentDateTimeInput === undefined ?\n            { mcTimepickerParse: { text: this.elementRef.nativeElement.value } } :\n            null;\n    }\n\n    private minTimeValidator(): ValidationErrors | null {\n\n        if (this.currentDateTimeInput !== undefined &&\n            this.minDateTime !== undefined &&\n            this.isTimeLowerThenMin(this.currentDateTimeInput)) {\n            return { mcTimepickerLowerThenMintime: { text: this.elementRef.nativeElement.value } };\n        }\n\n        return null;\n    }\n\n    private maxTimeValidator(): ValidationErrors | null {\n        if (this.currentDateTimeInput !== undefined &&\n            this.maxDateTime !== undefined &&\n            this.isTimeGreaterThenMax(this.currentDateTimeInput)) {\n            return { mcTimepickerHigherThenMaxtime: { text: this.elementRef.nativeElement.value } };\n        }\n\n        return null;\n    }\n\n    private isTimeLowerThenMin(timeToCompare: Date): boolean {\n        return timeToCompare.getTime() - (<Date> this.minDateTime).getTime() < 0;\n    }\n\n    private isTimeGreaterThenMax(timeToCompare: Date): boolean {\n        return timeToCompare.getTime() - (<Date> this.maxDateTime).getTime() >= 0;\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\n\nimport { A11yModule } from '@ptsecurity/cdk/a11y';\nimport { PlatformModule } from '@ptsecurity/cdk/platform';\n\nimport { McTimepicker } from './timepicker';\n\n\n@NgModule({\n    imports: [\n        CommonModule,\n        A11yModule,\n        PlatformModule,\n        FormsModule\n    ],\n    declarations: [\n        McTimepicker\n    ],\n    exports: [\n        McTimepicker\n    ]\n})\nexport class McTimepickerModule {}\n","import {\n    animate,\n    AnimationTriggerMetadata,\n    state,\n    style,\n    transition,\n    trigger,\n    query,\n    animateChild,\n    group\n} from '@angular/animations';\n\n\n/**\n * The following are all the animations for the mat-select component, with each\n * const containing the metadata for one animation.\n *\n * The values below match the implementation of the AngularJS Material mat-select animation.\n */\nexport const mcSelectAnimations: {\n    readonly transformPanel: AnimationTriggerMetadata;\n    readonly fadeInContent: AnimationTriggerMetadata;\n} = {\n    /**\n     * This animation transforms the select's overlay panel on and off the page.\n     *\n     * When the panel is attached to the DOM, it expands its width by the amount of padding, scales it\n     * up to 100% on the Y axis, fades in its border, and translates slightly up and to the\n     * side to ensure the option text correctly overlaps the trigger text.\n     *\n     * When the panel is removed from the DOM, it simply fades out linearly.\n     */\n    transformPanel: trigger('transformPanel', [\n        state('void', style({\n            transform: 'scaleY(0)',\n            minWidth: '100%',\n            opacity: 0\n        })),\n        transition('void => *', group([\n            query('@fadeInContent', animateChild()),\n            animate('150ms cubic-bezier(0.25, 0.8, 0.25, 1)')\n        ])),\n        transition('* => void', [\n            animate('250ms 100ms linear', style({ opacity: 0 }))\n        ])\n    ]),\n\n    /**\n     * This animation fades in the background color and text content of the\n     * select's options. It is time delayed to occur 100ms after the overlay\n     * panel has transformed in.\n     */\n    fadeInContent: trigger('fadeInContent', [\n        state('showing', style({ opacity: 1 })),\n        transition('void => showing', [\n            style({ opacity: 0 }),\n            animate('150ms 100ms cubic-bezier(0.55, 0, 0.55, 0.2)')\n        ])\n    ])\n};\n\n\n/**\n * @deprecated\n * @breaking-change 7.0.0\n */\nexport const transformPanel = mcSelectAnimations.transformPanel;\n\n/**\n * @deprecated\n * @breaking-change 7.0.0\n */\nexport const fadeInContent = mcSelectAnimations.fadeInContent;\n","import { fromEvent, Observable, Subscription } from 'rxjs';\nimport { debounceTime } from 'rxjs/operators';\n\nimport {\n    AfterViewInit,\n    Component, Directive,\n    ElementRef,\n    HostBinding,\n    Input,\n    OnDestroy,\n    OnInit,\n    ViewEncapsulation,\n    ContentChild,\n    TemplateRef,\n    ChangeDetectorRef,\n    ChangeDetectionStrategy,\n    ViewChild\n} from '@angular/core';\nimport { FocusMonitor, FocusOrigin } from '@ptsecurity/cdk/a11y';\nimport { SPACE } from '@ptsecurity/cdk/keycodes';\nimport { Platform } from '@ptsecurity/cdk/platform';\nimport { CanDisable, CanDisableCtor, mixinDisabled } from '@ptsecurity/mosaic/core';\n\n\nconst COLLAPSED_CLASS: string = 'mc-navbar-collapsed-title';\nconst MC_ICON = 'mc-icon';\nconst MC_NAVBAR = 'mc-navbar';\nconst MC_NAVBAR_CONTAINER = 'mc-navbar-container';\nconst MC_NAVBAR_ITEM = 'mc-navbar-item';\nconst MC_NAVBAR_BRAND = 'mc-navbar-brand';\nconst MC_NAVBAR_TITLE = 'mc-navbar-title';\nconst MC_NAVBAR_LOGO = 'mc-navbar-logo';\n\nexport type McNavbarContainerPositionType = 'left' | 'right';\n\nexport interface IMcNavbarDropdownItem {\n    link?: string;\n    text: string;\n}\n\n@Directive({\n    selector: MC_NAVBAR_LOGO,\n    host: {\n        class: MC_NAVBAR_LOGO\n    }\n})\nexport class McNavbarLogo {}\n\n@Directive({\n    selector: MC_NAVBAR_BRAND,\n    host: {\n        class: MC_NAVBAR_BRAND\n    }\n})\nexport class McNavbarBrand {}\n\n@Directive({\n    selector: MC_NAVBAR_TITLE,\n    host: {\n        class: MC_NAVBAR_TITLE\n    }\n})\nexport class McNavbarTitle {}\n\nexport class McNavbarItemBase {\n    constructor(public _elementRef: ElementRef) {}\n}\n\nexport const _McNavbarMixinBase: CanDisableCtor & typeof McNavbarItemBase = mixinDisabled(McNavbarItemBase);\n\n@Component({\n    selector: MC_NAVBAR_ITEM,\n    template: `\n        <a\n            [attr.tabindex]=\\\"disabled ? -1 : tabIndex\\\"\n            (click)=\"handleClickByItem()\"\n            (keydown)=\"handleKeydown($event)\"\n            class=\"mc-navbar-item\"\n        >\n            <ng-content></ng-content>\n            <i *ngIf=\"hasDropdownContent\" mc-icon=\"mc-angle-M_16\"></i>\n        </a>\n        <ul\n            #dropdownContent\n            *ngIf=\"hasDropdownContent\"\n            [ngClass]=\"{ 'is-collapsed': isCollapsed }\"\n            class=\"mc-navbar-dropdown\"\n        >\n            <li\n                *ngFor=\"let item of dropdownItems\"\n                (click)=\"handleClickByDropdownItem()\"\n                class=\"mc-navbar-dropdown-item\"\n            >\n                <ng-container *ngIf=\"dropdownItemTmpl\">\n                    <ng-container *ngTemplateOutlet=\"dropdownItemTmpl; context: { $implicit: item }\"></ng-container>\n                </ng-container>\n                <a\n                    *ngIf=\"!dropdownItemTmpl\"\n                    [attr.href]=\"item.link\"\n                    [ngClass]=\"{ 'is-active': isActiveDropdownLink(item.link) }\"\n                    class=\"mc-navbar-dropdown-link\"\n                >{{ item.text }}</a>\n            </li>\n        </ul>\n    `,\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    inputs: ['disabled'],\n    host: {\n        '[attr.disabled]': 'disabled || null',\n        '[attr.tabindex]': '-1'\n    }\n})\nexport class McNavbarItem extends _McNavbarMixinBase implements OnInit, AfterViewInit, OnDestroy, CanDisable {\n\n    @Input()\n    tabIndex: number = 0;\n\n    @Input()\n    dropdownItems: IMcNavbarDropdownItem[] = [];\n\n    @Input()\n    set collapsedTitle(value: string) {\n        this.elementRef.nativeElement.setAttribute('computedTitle', encodeURI(value));\n    }\n\n    @ContentChild('dropdownItemTmpl', { read: TemplateRef })\n    dropdownItemTmpl: TemplateRef<IMcNavbarDropdownItem>;\n\n    @ViewChild('dropdownContent', { read: ElementRef })\n    dropdownContent: ElementRef;\n\n    get hasDropdownContent() {\n        return this.dropdownItems.length > 0;\n    }\n\n    isCollapsed: boolean = true;\n\n    private _subscription: Subscription = new Subscription();\n    private _focusMonitor$: Observable<FocusOrigin>;\n\n    private get _dropdownElements(): HTMLElement[] {\n        return this.dropdownContent ? this.dropdownContent.nativeElement.querySelectorAll('li > *') : [];\n    }\n\n    constructor(\n        public  elementRef: ElementRef,\n        private _focusMonitor: FocusMonitor,\n        private _platform: Platform,\n        private _cdRef: ChangeDetectorRef\n    ) {\n        super(elementRef);\n    }\n\n    ngOnInit() {\n        this.denyClickIfDisabled();\n\n        this._focusMonitor$ = this._focusMonitor.monitor(this.elementRef.nativeElement, true);\n\n        if (this.hasDropdownContent) {\n            this.listenClickOutside();\n        }\n    }\n\n    ngAfterViewInit() {\n        if (!this.hasDropdownContent) {\n            return;\n        }\n\n        this.startListenFocusDropdownItems();\n    }\n\n    ngOnDestroy() {\n        this._subscription.unsubscribe();\n        this._focusMonitor.stopMonitoring(this.elementRef.nativeElement);\n        this.stopListenFocusDropdownItems();\n    }\n\n    isActiveDropdownLink(link: string): boolean {\n        if (!this._platform.isBrowser) {\n            return false;\n        }\n\n        return window.location.href.indexOf(link) >= 0;\n    }\n\n    handleClickByItem() {\n        this.toggleDropdown();\n    }\n\n    handleKeydown($event: KeyboardEvent) {\n        const isNavbarItem = ($event.target as HTMLElement).classList.contains(MC_NAVBAR_ITEM);\n\n        // tslint:disable-next-line\n        if (this.hasDropdownContent && $event.keyCode === SPACE && isNavbarItem) {\n            this.toggleDropdown();\n        }\n    }\n\n    handleClickByDropdownItem() {\n        this.forceCloseDropdown();\n    }\n\n    private listenClickOutside() {\n        this._subscription.add(\n            this._focusMonitor$.subscribe((origin) => {\n                if (origin === null) {\n                    this.forceCloseDropdown();\n                }\n            })\n        );\n    }\n\n    private toggleDropdown() {\n        this.isCollapsed = !this.isCollapsed;\n    }\n\n    private forceCloseDropdown() {\n        this.isCollapsed = true;\n        this._cdRef.detectChanges();\n    }\n\n    private startListenFocusDropdownItems() {\n        this._dropdownElements.forEach((el) => {\n            this._focusMonitor.monitor(el, true);\n        });\n    }\n\n    private stopListenFocusDropdownItems() {\n        this._dropdownElements.forEach((el) => {\n            this._focusMonitor.stopMonitoring(el);\n        });\n    }\n\n    // This method is required due to angular 2 issue https://github.com/angular/angular/issues/11200\n    private denyClickIfDisabled() {\n        const events: Event[] = this.elementRef.nativeElement.eventListeners('click');\n\n        events.forEach((event) => this.elementRef.nativeElement.removeEventListener('click', event));\n\n        this.elementRef.nativeElement.addEventListener('click', (event: MouseEvent) => {\n            if (this.elementRef.nativeElement.hasAttribute('disabled')) {\n                event.stopImmediatePropagation();\n            }\n        }, true);\n\n        events.forEach((event) => this.elementRef.nativeElement.addEventListener('click', event));\n    }\n}\n\n@Directive({\n    selector: MC_NAVBAR_CONTAINER\n})\nexport class McNavbarContainer {\n    @Input()\n    position: McNavbarContainerPositionType = 'left';\n\n    @HostBinding('class')\n    get cssClasses(): string {\n        return this.position === 'left' ? 'mc-navbar-left' : 'mc-navbar-right';\n    }\n}\n\nclass CollapsibleItem {\n    private _collapsed: boolean = false;\n\n    constructor(\n        public element: HTMLElement,\n        public width: number\n    ) {}\n\n    processCollapsed(collapsed: boolean) {\n        this._collapsed = collapsed;\n\n        this.updateCollapsedClass();\n    }\n\n    private updateCollapsedClass() {\n        if (this._collapsed) {\n            this.element.classList.add(COLLAPSED_CLASS);\n        } else {\n            this.element.classList.remove(COLLAPSED_CLASS);\n        }\n\n    }\n}\n\nclass CachedItemWidth {\n\n    get canCollapse(): boolean {\n        return this.itemsForCollapse.length > 0;\n    }\n\n    private _collapsedItemsWidth: number;\n\n    get collapsedItemsWidth(): number {\n        if (this._collapsedItemsWidth !== undefined) {\n            return this._collapsedItemsWidth;\n        }\n\n        this.calculateAndCacheCollapsedItemsWidth();\n\n        return this._collapsedItemsWidth;\n    }\n\n    constructor(\n        public element: HTMLElement,\n        public width: number,\n        public itemsForCollapse: CollapsibleItem[] = []\n    ) {}\n\n    processCollapsed(collapsed: boolean) {\n        if (this.itemsForCollapse.length > 0) {\n            this.updateTitle(collapsed);\n        }\n\n        this.itemsForCollapse.forEach((item) => item.processCollapsed(collapsed));\n    }\n\n    private calculateAndCacheCollapsedItemsWidth() {\n        this._collapsedItemsWidth = this.itemsForCollapse\n            .reduce((acc, item) => acc + item.width, 0);\n    }\n\n    private getTitle(): string {\n        const computedTitle = this.element.getAttribute('computedTitle');\n\n        return computedTitle\n            ? decodeURI(computedTitle)\n            : (this.itemsForCollapse.length > 0 ? this.itemsForCollapse[0].element.innerText : '');\n    }\n\n    private updateTitle(collapsed: boolean) {\n        if (collapsed) {\n            this.element.setAttribute('title', this.getTitle());\n        } else {\n            this.element.removeAttribute('title');\n        }\n    }\n}\n\n\n@Component({\n    selector: MC_NAVBAR,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    template: `\n        <nav class=\"mc-navbar\">\n            <ng-content select=\"[${MC_NAVBAR_CONTAINER}],${MC_NAVBAR_CONTAINER}\"></ng-content>\n        </nav>\n    `,\n    styleUrls: ['./navbar.css'],\n    encapsulation: ViewEncapsulation.None\n})\nexport class McNavbar implements AfterViewInit, OnDestroy {\n\n    private readonly forceRecalculateItemsWidth: boolean = false;\n    private readonly resizeDebounceInterval: number = 100;\n    private readonly firstLevelElement: string = MC_NAVBAR_CONTAINER;\n    private readonly secondLevelElements: string[] = [\n        MC_NAVBAR_ITEM,\n        MC_NAVBAR_BRAND,\n        MC_NAVBAR_TITLE\n    ];\n\n    private _totalItemsWidths: number;\n    private _itemsWidths: CachedItemWidth[];\n\n    private get maxAllowedWidth(): number {\n        return this._elementRef.nativeElement.querySelector('nav').getBoundingClientRect().width;\n    }\n\n    private get itemsWidths(): CachedItemWidth[] {\n        if (this._itemsWidths !== undefined && !this.forceRecalculateItemsWidth) {\n            return this._itemsWidths;\n        }\n\n        this.calculateAndCacheItemsWidth();\n\n        return this._itemsWidths;\n    }\n\n    private get totalItemsWidth(): number {\n        if (this._totalItemsWidths !== undefined && !this.forceRecalculateItemsWidth) {\n            return this._totalItemsWidths;\n        }\n\n        this.calculateAndCacheTotalItemsWidth();\n\n        return this._totalItemsWidths;\n    }\n\n    private _resizeSubscription: Subscription;\n\n    constructor(\n        private _elementRef: ElementRef\n    ) {\n        const resizeObserver = fromEvent(window, 'resize')\n            .pipe(debounceTime(this.resizeDebounceInterval));\n\n        this._resizeSubscription = resizeObserver.subscribe(this.updateCollapsed.bind(this));\n    }\n\n    updateCollapsed(): void {\n        let collapseDelta = this.totalItemsWidth - this.maxAllowedWidth;\n\n        for (let i = this.itemsWidths.length - 1; i >= 0; i--) {\n            const item = this.itemsWidths[i];\n\n            if (!item.canCollapse) {\n                continue;\n            }\n\n            item.processCollapsed(collapseDelta > 0);\n            collapseDelta -= item.collapsedItemsWidth;\n        }\n    }\n\n    ngAfterViewInit(): void {\n        // Note: this wait is required for loading and rendering fonts for icons;\n        // unfortunately we cannot control font rendering\n        setTimeout(() => this.updateCollapsed(), 0);\n    }\n\n    ngOnDestroy() {\n        this._resizeSubscription.unsubscribe();\n    }\n\n    private calculateAndCacheTotalItemsWidth() {\n        this._totalItemsWidths = this.itemsWidths\n            .reduce((acc, item) => acc + item.width, 0);\n    }\n\n    private getOuterElementWidth(element: HTMLElement): number {\n        const baseWidth  = element.getBoundingClientRect().width;\n        const marginRight = parseInt(getComputedStyle(element).getPropertyValue('margin-right'));\n        const marginLeft = parseInt(getComputedStyle(element).getPropertyValue('margin-left'));\n\n        return baseWidth + marginRight + marginLeft;\n    }\n\n    private calculateAndCacheItemsWidth() {\n        const allItemsSelector = this.secondLevelElements\n            .map((e: string) => `${this.firstLevelElement}>${e}`);\n        const allItems: HTMLElement[] = Array.from(this._elementRef.nativeElement.querySelectorAll(allItemsSelector));\n\n        this._itemsWidths = allItems\n            .map((el) => new CachedItemWidth(el, this.getOuterElementWidth(el), this.getItemsForCollapse(el)));\n    }\n\n    private getItemsForCollapse(element: HTMLElement): CollapsibleItem[] {\n        const icon = element.querySelector(`[${MC_ICON}],${MC_NAVBAR_LOGO},[${MC_NAVBAR_LOGO}]`);\n\n        if (!icon) {\n            return [];\n        }\n\n        return Array.from(element.querySelectorAll(MC_NAVBAR_TITLE))\n            .map((el) => new CollapsibleItem(<HTMLElement> el, el.getBoundingClientRect().width));\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { A11yModule } from '@ptsecurity/cdk/a11y';\nimport { PlatformModule } from '@ptsecurity/cdk/platform';\n\nimport { McIconModule } from '@ptsecurity/mosaic/icon';\n\nimport {\n    McNavbar,\n    McNavbarContainer,\n    McNavbarItem,\n    McNavbarTitle,\n    McNavbarBrand,\n    McNavbarLogo\n} from './navbar.component';\n\n\n@NgModule({\n    imports: [\n        CommonModule,\n        A11yModule,\n        PlatformModule,\n        McIconModule\n    ],\n    exports: [\n        McNavbar,\n        McNavbarContainer,\n        McNavbarTitle,\n        McNavbarItem,\n        McNavbarBrand,\n        McNavbarLogo\n    ],\n    declarations: [\n        McNavbar,\n        McNavbarContainer,\n        McNavbarTitle,\n        McNavbarItem,\n        McNavbarBrand,\n        McNavbarLogo\n    ]\n})\nexport class McNavbarModule {}\n","import {\n    ChangeDetectionStrategy,\n    Component,\n    ViewEncapsulation,\n    ElementRef,\n    Input\n} from '@angular/core';\nimport { CanColor, CanColorCtor, mixinColor, ThemePalette } from '@ptsecurity/mosaic/core';\n\n\nexport type ProgressBarMode = 'determinate' | 'indeterminate';\n\nlet idIterator = 0;\n\nconst MIN_PERCENT = 0;\nconst MAX_PERCENT = 100;\n\nexport class McProgressBarBase {\n    constructor(public _elementRef: ElementRef) {}\n}\n\nexport const _McProgressBarMixinBase:\n    CanColorCtor &\n    typeof McProgressBarBase =\n        mixinColor(McProgressBarBase);\n\n@Component({\n    selector: 'mc-progress-bar',\n    templateUrl: './progress-bar.component.html',\n    styleUrls: ['./progress-bar.css'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n    host: {\n        class: 'mc-progress-bar',\n        '[attr.id]': 'id'\n    }\n})\nexport class McProgressBar extends _McProgressBarMixinBase implements CanColor {\n    @Input() id: string = `mc-progress-bar-${idIterator++}`;\n    @Input() value: number = 0;\n    @Input() mode: ProgressBarMode = 'determinate';\n    @Input() color: ThemePalette = ThemePalette.Primary;\n\n    constructor(elementRef: ElementRef) {\n        super(elementRef);\n    }\n\n    get percentage(): number {\n        return Math.max(MIN_PERCENT, Math.min(MAX_PERCENT, this.value)) / MAX_PERCENT;\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { PlatformModule } from '@ptsecurity/cdk/platform';\n\nimport {\n    McProgressBar\n} from './progress-bar.component';\n\n\n@NgModule({\n    imports: [\n        CommonModule,\n        PlatformModule\n    ],\n    exports: [\n        McProgressBar\n    ],\n    declarations: [\n        McProgressBar\n    ]\n})\nexport class McProgressBarModule {}\n","import {\n    ChangeDetectionStrategy,\n    Component,\n    ViewEncapsulation,\n    ElementRef,\n    Input\n} from '@angular/core';\nimport { CanColor, CanColorCtor, mixinColor, ThemePalette } from '@ptsecurity/mosaic/core';\n\n\nexport type ProgressSpinnerMode = 'determinate' | 'indeterminate';\n\nlet idIterator = 0;\n\nconst MIN_PERCENT = 0;\nconst MAX_PERCENT = 100;\n\nexport class McProgressSpinnerBase {\n    constructor(public _elementRef: ElementRef) {}\n}\n\nexport const _McProgressSpinnerMixinBase:\n    CanColorCtor &\n    typeof McProgressSpinnerBase =\n        mixinColor(McProgressSpinnerBase);\n\nconst MAX_DASH_ARRAY = 273;\n\n@Component({\n    selector: 'mc-progress-spinner',\n    templateUrl: './progress-spinner.component.html',\n    styleUrls: ['./progress-spinner.css'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n    host: {\n        class: 'mc-progress-spinner',\n        '[attr.id]': 'id'\n    }\n})\nexport class McProgressSpinner extends _McProgressSpinnerMixinBase implements CanColor {\n    @Input() id: string = `mc-progress-spinner-${idIterator++}`;\n    @Input() value: number = 0;\n    @Input() mode: ProgressSpinnerMode = 'determinate';\n    @Input() color: ThemePalette = ThemePalette.Primary;\n\n    constructor(elementRef: ElementRef) {\n        super(elementRef);\n    }\n\n    get percentage(): number {\n        return Math.max(MIN_PERCENT, Math.min(MAX_PERCENT, this.value)) / MAX_PERCENT;\n    }\n\n    get dashOffsetPercent(): string {\n        return `${MAX_DASH_ARRAY - this.percentage * MAX_DASH_ARRAY}%`;\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { PlatformModule } from '@ptsecurity/cdk/platform';\n\nimport { McProgressSpinner } from './progress-spinner.component';\n\n\n@NgModule({\n    imports: [\n        CommonModule,\n        PlatformModule\n    ],\n    exports: [\n        McProgressSpinner\n    ],\n    declarations: [\n        McProgressSpinner\n    ]\n})\nexport class McProgressSpinnerModule {}\n","import {\n    AfterContentInit,\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component, ContentChildren, Directive, ElementRef, EventEmitter, forwardRef,\n    Input, OnDestroy, OnInit, Optional, Output, QueryList,\n    ViewChild,\n    ViewEncapsulation\n} from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\n\nimport { UniqueSelectionDispatcher } from '@ptsecurity/cdk/collections';\n\nimport {\n    CanColor, CanColorCtor,\n    CanDisable, CanDisableCtor,\n    HasTabIndex, HasTabIndexCtor,\n    mixinColor,\n    mixinDisabled,\n    mixinTabIndex,\n    toBoolean\n} from '@ptsecurity/mosaic/core';\n\n\n// Increasing integer for generating unique ids for radio components.\nlet nextUniqueId = 0;\n\n/** Change event object emitted by McRadio. */\nexport class McRadioChange {\n    constructor(\n        /** The McRadioButton that emits the change event. */\n        public source: McRadioButton,\n        /** The value of the McRadioButton. */\n        public value: any) {}\n}\n\n// Boilerplate for applying mixins to McRadioGroup.\n/** @docs-private */\nexport class McRadioGroupBase {}\nexport const _McRadioGroupMixinBase: CanDisableCtor & typeof McRadioGroupBase = mixinDisabled(McRadioGroupBase);\n\n/**\n * Provider Expression that allows mc-radio-group to register as a ControlValueAccessor. This\n * allows it to support [(ngModel)] and ngControl.\n * @docs-private\n */\nexport const MC_RADIO_GROUP_CONTROL_VALUE_ACCESSOR: any = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => McRadioGroup),\n    multi: true\n};\n\n@Directive({\n    selector: 'mc-radio-group',\n    exportAs: 'mcRadioGroup',\n    providers: [MC_RADIO_GROUP_CONTROL_VALUE_ACCESSOR],\n    host: {\n        role: 'radiogroup',\n        class: 'mc-radio-group'\n    },\n    inputs: ['disabled']\n})\nexport class McRadioGroup extends _McRadioGroupMixinBase\n    implements AfterContentInit, ControlValueAccessor, CanDisable {\n\n    /** Name of the radio button group. All radio buttons inside this group will use this name. */\n    @Input()\n    get name(): string { return this._name; }\n    set name(value: string) {\n        this._name = value;\n        this.updateRadioButtonNames();\n    }\n\n    /** Whether the labels should appear after or before the radio-buttons. Defaults to 'after' */\n    @Input()\n    get labelPosition(): 'before' | 'after' {\n        return this._labelPosition;\n    }\n    set labelPosition(v) {\n        this._labelPosition = v === 'before' ? 'before' : 'after';\n        this.markRadiosForCheck();\n    }\n\n    /** Value of the radio button. */\n    @Input()\n    get value(): any { return this._value; }\n    set value(newValue: any) {\n        if (this._value !== newValue) {\n            // Set this before proceeding to ensure no circular loop occurs with selection.\n            this._value = newValue;\n\n            this.updateSelectedRadioFromValue();\n            this.checkSelectedRadioButton();\n        }\n    }\n\n    /** Whether the radio button is selected. */\n    @Input()\n    get selected() { return this._selected; }\n    set selected(selected: McRadioButton | null) {\n        this._selected = selected;\n        this.value = selected ? selected.value : null;\n        this.checkSelectedRadioButton();\n    }\n\n    /** Whether the radio group is disabled */\n    @Input()\n    get disabled(): boolean { return this._disabled; }\n    set disabled(value) {\n        this._disabled = toBoolean(value);\n        this.markRadiosForCheck();\n    }\n\n    /** Whether the radio group is required */\n    @Input()\n    get required(): boolean { return this._required; }\n    set required(value: boolean) {\n        this._required = toBoolean(value);\n        this.markRadiosForCheck();\n    }\n\n    /**\n     * Event emitted when the group value changes.\n     * Change events are only emitted when the value changes due to user interaction with\n     * a radio button (the same behavior as `<input type-\"radio\">`).\n     */\n    @Output() readonly change: EventEmitter<McRadioChange> = new EventEmitter<McRadioChange>();\n\n    /** Child radio buttons. */\n    @ContentChildren(forwardRef(() => McRadioButton), { descendants: true })\n    _radios: QueryList<McRadioButton>;\n\n    /**\n     * Selected value for group. Should equal the value of the selected radio button if there *is*\n     * a corresponding radio button with a matching value. If there is *not* such a corresponding\n     * radio button, this value persists to be applied in case a new radio button is added with a\n     * matching value.\n     */\n    private _value: any = null;\n\n    /** The HTML name attribute applied to radio buttons in this group. */\n    private _name: string = `mc-radio-group-${nextUniqueId++}`;\n\n    /** The currently selected radio button. Should match value. */\n    private _selected: McRadioButton | null = null;\n\n    /** Whether the `value` has been set to its initial value. */\n    private _isInitialized: boolean = false;\n\n    /** Whether the labels should appear after or before the radio-buttons. Defaults to 'after' */\n    private _labelPosition: 'before' | 'after' = 'after';\n\n    /** Whether the radio group is disabled. */\n    private _disabled: boolean = false;\n\n    /** Whether the radio group is required. */\n    private _required: boolean = false;\n\n    constructor(\n        private readonly _changeDetector: ChangeDetectorRef\n    ) {\n        super();\n    }\n\n    /** The method to be called in order to update ngModel */\n    // tslint:disable-next-line\n    controlValueAccessorChangeFn: (value: any) => void = () => {};\n\n    /**\n     * onTouch function registered via registerOnTouch (ControlValueAccessor).\n     * @docs-private\n     */\n    // tslint:disable-next-line\n    onTouched: () => any = () => {};\n\n    checkSelectedRadioButton() {\n        if (this._selected && !this._selected.checked) {\n            this._selected.checked = true;\n        }\n    }\n\n    /**\n     * Initialize properties once content children are available.\n     * This allows us to propagate relevant attributes to associated buttons.\n     */\n    ngAfterContentInit() {\n        // Mark this component as initialized in AfterContentInit because the initial value can\n        // possibly be set by NgModel on McRadioGroup, and it is possible that the OnInit of the\n        // NgModel occurs *after* the OnInit of the McRadioGroup.\n        this._isInitialized = true;\n    }\n\n    /**\n     * Mark this group as being \"touched\" (for ngModel). Meant to be called by the contained\n     * radio buttons upon their blur.\n     */\n    touch() {\n        if (this.onTouched) {\n            this.onTouched();\n        }\n    }\n\n    /** Dispatch change event with current selection and group value. */\n    emitChangeEvent(): void {\n        if (this._isInitialized) {\n            this.change.emit(new McRadioChange(this._selected!, this._value));\n        }\n    }\n\n    markRadiosForCheck() {\n        if (this._radios) {\n            this._radios.forEach((radio) => radio.markForCheck());\n        }\n    }\n\n    /**\n     * Sets the model value. Implemented as part of ControlValueAccessor.\n     */\n    writeValue(value: any) {\n        this.value = value;\n        this._changeDetector.markForCheck();\n    }\n\n    /**\n     * Registers a callback to be triggered when the model value changes.\n     * Implemented as part of ControlValueAccessor.\n     * @param fn Callback to be registered.\n     */\n    registerOnChange(fn: (value: any) => void) {\n        this.controlValueAccessorChangeFn = fn;\n    }\n\n    /**\n     * Registers a callback to be triggered when the control is touched.\n     * Implemented as part of ControlValueAccessor.\n     * @param fn Callback to be registered.\n     */\n    registerOnTouched(fn: any) {\n        this.onTouched = fn;\n    }\n\n    /**\n     * Sets the disabled state of the control. Implemented as a part of ControlValueAccessor.\n     * @param isDisabled Whether the control should be disabled.\n     */\n    setDisabledState(isDisabled: boolean) {\n        this.disabled = isDisabled;\n        this._changeDetector.markForCheck();\n    }\n\n    private updateRadioButtonNames(): void {\n        if (this._radios) {\n            this._radios.forEach((radio) => {\n                radio.name = this.name;\n            });\n        }\n    }\n\n    /** Updates the `selected` radio button from the internal _value state. */\n    private updateSelectedRadioFromValue(): void {\n        // If the value already matches the selected radio, do nothing.\n        const isAlreadySelected = this._selected !== null && this._selected.value === this._value;\n\n        if (this._radios != null && !isAlreadySelected) {\n            this._selected = null;\n            this._radios.forEach((radio) => {\n                radio.checked = this.value === radio.value;\n                if (radio.checked) {\n                    this._selected = radio;\n                }\n            });\n        }\n    }\n}\n\n\n// Boilerplate for applying mixins to McRadioButton.\n/** @docs-private */\nexport class McRadioButtonBase {\n    // Since the disabled property is manually defined for the McRadioButton and isn't set up in\n    // the mixin base class. To be able to use the tabindex mixin, a disabled property must be\n    // defined to properly work.\n    disabled: boolean;\n\n    constructor(public _elementRef: ElementRef) {}\n}\n\nexport const _McRadioButtonMixinBase:\n    CanColorCtor &\n    HasTabIndexCtor &\n    typeof McRadioButtonBase =\n        mixinColor(mixinTabIndex(McRadioButtonBase));\n\n\n@Component({\n    selector: 'mc-radio-button',\n    templateUrl: 'radio.component.html',\n    styleUrls: ['radio.css'],\n    inputs: ['color', 'tabIndex'],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    exportAs: 'mcRadioButton',\n    host: {\n        class: 'mc-radio-button',\n        '[attr.id]': 'id',\n        '[class.mc-checked]': 'checked',\n        '[class.mc-disabled]': 'disabled',\n        '(focus)': '_inputElement.nativeElement.focus()'\n    }\n})\nexport class McRadioButton extends _McRadioButtonMixinBase\n    implements OnInit, OnDestroy, CanColor, HasTabIndex {\n\n    private readonly _uniqueId: string = `mc-radio-${++nextUniqueId}`;\n\n    /* tslint:disable:member-ordering */\n\n    /** The unique ID for the radio button. */\n    @Input() id: string = this._uniqueId;\n\n    /** Analog to HTML 'name' attribute used to group radios for unique selection. */\n    @Input() name: string;\n\n    /** Used to set the 'aria-label' attribute on the underlying input element. */\n    @Input('aria-label') ariaLabel: string;\n\n    /** The 'aria-labelledby' attribute takes precedence as the element's text alternative. */\n    @Input('aria-labelledby') ariaLabelledby: string;\n\n    /** The 'aria-describedby' attribute is read after the element's label and field type. */\n    @Input('aria-describedby') ariaDescribedby: string;\n\n    /** Whether this radio button is checked. */\n    @Input()\n    get checked(): boolean { return this._checked; }\n    set checked(value: boolean) {\n        const newCheckedState = toBoolean(value);\n\n        if (this._checked !== newCheckedState) {\n            this._checked = newCheckedState;\n\n            if (newCheckedState && this.radioGroup && this.radioGroup.value !== this.value) {\n                this.radioGroup.selected = this;\n            } else if (!newCheckedState && this.radioGroup && this.radioGroup.value === this.value) {\n                // When unchecking the selected radio button, update the selected radio\n                // property on the group.\n                this.radioGroup.selected = null;\n            }\n\n            if (newCheckedState) {\n                // Notify all radio buttons with the same name to un-check.\n                this._radioDispatcher.notify(this.id, this.name);\n            }\n            this._changeDetector.markForCheck();\n        }\n    }\n\n    /** The value of this radio button. */\n    @Input()\n    get value(): any { return this._value; }\n    set value(value: any) {\n        if (this._value !== value) {\n            this._value = value;\n            if (this.radioGroup != null) {\n                if (!this.checked) {\n                    // Update checked when the value changed to match the radio group's value\n                    this.checked = this.radioGroup.value === value;\n                }\n                if (this.checked) {\n                    this.radioGroup.selected = this;\n                }\n            }\n        }\n    }\n\n    /** Whether the radio button is disabled. */\n    @Input()\n    get disabled(): boolean {\n        return this._disabled || (this.radioGroup != null && this.radioGroup.disabled);\n    }\n    set disabled(value: boolean) {\n        const newDisabledState = toBoolean(value);\n\n        if (this._disabled !== newDisabledState) {\n\n            this._disabled = newDisabledState;\n            this._changeDetector.markForCheck();\n        }\n    }\n\n    /** Whether the radio button is required. */\n    @Input()\n    get required(): boolean {\n        return this._required || (this.radioGroup && this.radioGroup.required);\n    }\n    set required(value: boolean) {\n        this._required = toBoolean(value);\n    }\n\n    /** Whether the label should appear after or before the radio button. Defaults to 'after' */\n    @Input()\n    get labelPosition(): 'before' | 'after' {\n        return this._labelPosition || (this.radioGroup && this.radioGroup.labelPosition) || 'after';\n    }\n    set labelPosition(value) {\n        this._labelPosition = value;\n    }\n    private _labelPosition: 'before' | 'after';\n\n    /** The native `<input type=radio>` element */\n    @ViewChild('input') _inputElement: ElementRef;\n\n    /**\n     * Event emitted when the checked state of this radio button changes.\n     * Change events are only emitted when the value changes due to user interaction with\n     * the radio button (the same behavior as `<input type-\"radio\">`).\n     */\n    @Output() readonly change: EventEmitter<McRadioChange> = new EventEmitter<McRadioChange>();\n\n    /** The parent radio group. May or may not be present. */\n    radioGroup: McRadioGroup;\n\n    @Input()\n    isFocused: boolean = false;\n\n    /** ID of the native input element inside `<mc-radio-button>` */\n    get inputId(): string { return `${this.id || this._uniqueId}-input`; }\n\n    /** Whether this radio is checked. */\n    private _checked: boolean = false;\n\n    /** Whether this radio is disabled. */\n    private _disabled: boolean;\n\n    /** Whether this radio is required. */\n    private _required: boolean;\n\n    /** Value assigned to this radio. */\n    private _value: any = null;\n\n    /** Unregister function for _radioDispatcher */\n    // tslint:disable-next-line\n    private readonly removeUniqueSelectionListener: () => void = () => {};\n\n    constructor(\n        @Optional() radioGroup: McRadioGroup,\n        elementRef: ElementRef,\n        private readonly _changeDetector: ChangeDetectorRef,\n        private readonly _radioDispatcher: UniqueSelectionDispatcher\n    ) {\n\n        super(elementRef);\n\n        this.radioGroup = radioGroup;\n\n        this.removeUniqueSelectionListener =\n            _radioDispatcher.listen((id: string, name: string) => {\n                if (id !== this.id && name === this.name) {\n                    this.checked = false;\n                }\n            });\n    }\n\n    ngOnInit() {\n        if (this.radioGroup) {\n            // If the radio is inside a radio group, determine if it should be checked\n            this.checked = this.radioGroup.value === this._value;\n            // Copy name from parent radio group\n            this.name = this.radioGroup.name;\n        }\n    }\n\n    ngOnDestroy() {\n        this.removeUniqueSelectionListener();\n    }\n\n    /** Focuses the radio button. */\n    // tslint:disable-next-line\n    focus(): void {}\n\n    /**\n     * Marks the radio button as needing checking for change detection.\n     * This method is exposed because the parent radio group will directly\n     * update bound properties of the radio button.\n     */\n    markForCheck() {\n        // When group value changes, the button will not be notified. Use `markForCheck` to explicit\n        // update radio button's status\n        this._changeDetector.markForCheck();\n    }\n\n    onInputClick(event: Event) {\n        // We have to stop propagation for click events on the visual hidden input element.\n        // By default, when a user clicks on a label element, a generated click event will be\n        // dispatched on the associated input element. Since we are using a label element as our\n        // root container, the click event on the `radio-button` will be executed twice.\n        // The real click event will bubble up, and the generated click event also tries to bubble up.\n        // This will lead to multiple click events.\n        // Preventing bubbling for the second event will solve that issue.\n        event.stopPropagation();\n    }\n\n    onInputChange(event: Event) {\n        // We always have to stop propagation on the change event.\n        // Otherwise the change event, from the input element, will bubble up and\n        // emit its event object to the `change` output.\n        event.stopPropagation();\n\n        const groupValueChanged = this.radioGroup && this.value !== this.radioGroup.value;\n        this.checked = true;\n        this.emitChangeEvent();\n\n        if (this.radioGroup) {\n            this.radioGroup.controlValueAccessorChangeFn(this.value);\n            this.radioGroup.touch();\n            if (groupValueChanged) {\n                this.radioGroup.emitChangeEvent();\n            }\n        }\n    }\n\n    /** Dispatch change event with current value. */\n    private emitChangeEvent(): void {\n        this.change.emit(new McRadioChange(this, this._value));\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { A11yModule } from '@ptsecurity/cdk/a11y';\nimport { McCommonModule } from '@ptsecurity/mosaic/core';\n\nimport { McRadioButton, McRadioGroup } from './radio.component';\n\n\n@NgModule({\n    imports: [CommonModule, A11yModule, McCommonModule],\n    exports: [McRadioGroup, McRadioButton],\n    declarations: [McRadioGroup, McRadioButton]\n})\nexport class McRadioModule {\n}\n","import { Directive, Input } from '@angular/core';\n\nimport { CdkTreeNodeDef } from '@ptsecurity/cdk/tree';\n\n\n@Directive({\n    selector: '[mcTreeNodeDef]',\n    inputs: ['when: mcTreeNodeDefWhen'],\n    providers: [{ provide: CdkTreeNodeDef, useExisting: McTreeNodeDef }]\n})\nexport class McTreeNodeDef<T> extends CdkTreeNodeDef<T> {\n    @Input('mcTreeNode') data: T;\n}\n","import { Directive, Input, OnInit } from '@angular/core';\nimport { CdkTreeNodePadding } from '@ptsecurity/cdk/tree';\n\n\n@Directive({\n    selector: '[mcTreeNodePadding]',\n    providers: [{ provide: CdkTreeNodePadding, useExisting: McTreeNodePadding }]\n})\nexport class McTreeNodePadding<T> extends CdkTreeNodePadding<T> implements OnInit {\n    get leftPadding(): number {\n        return (this._withIcon ? 0 : this._iconWidth) + this._baseLeftPadding;\n    }\n\n    _baseLeftPadding: number = 6;\n    _iconWidth: number = 20;\n    _indent: number = 16;\n\n    @Input('mcTreeNodePadding') level: number;\n\n    @Input('mcTreeNodePaddingIndent') indent: number;\n\n    _withIcon: boolean;\n\n    _paddingIndent(): string | null {\n        const nodeLevel = (this._treeNode.data && this._tree.treeControl.getLevel)\n            ? this._tree.treeControl.getLevel(this._treeNode.data)\n            : null;\n\n        const level = this._level || nodeLevel;\n\n        return level ? `${(level * this._indent) + this.leftPadding}px` : `${this._baseLeftPadding}px`;\n    }\n\n    ngOnInit(): void {\n        this._withIcon = this._tree.treeControl.isExpandable(this._treeNode.data);\n        this._setPadding();\n    }\n}\n","import {\n    AfterContentInit,\n    Attribute,\n    ChangeDetectionStrategy,\n    Component,\n    ContentChildren,\n    ElementRef,\n    EventEmitter,\n    forwardRef,\n    Input,\n    Output,\n    QueryList,\n    ViewEncapsulation,\n    ChangeDetectorRef,\n    Inject,\n    OnDestroy,\n    OnInit,\n    ViewChild\n} from '@angular/core';\n\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\n\nimport { Subscription } from 'rxjs';\n\nimport { FocusKeyManager, IFocusableOption } from '@ptsecurity/cdk/a11y';\nimport { SelectionModel } from '@ptsecurity/cdk/collections';\nimport { END, ENTER, HOME, PAGE_DOWN, PAGE_UP, SPACE } from '@ptsecurity/cdk/keycodes';\n\nimport {\n    McLine,\n    McLineSetter,\n    CanDisable,\n    mixinDisabled,\n    toBoolean, CanDisableCtor\n} from '@ptsecurity/mosaic/core';\n\n\n/**\n * Component for list-options of selection-list. Each list-option can automatically\n * generate a checkbox and can put current item into the selectionModel of selection-list\n * if the current item is selected.\n */\n@Component({\n    exportAs: 'mcListOption',\n    selector: 'mc-list-option',\n    host: {\n        tabindex: '-1',\n\n        class: 'mc-list-option',\n        '[class.mc-selected]': 'selected',\n        '[class.mc-focused]': '_hasFocus',\n        '(focus)': '_handleFocus()',\n        '(blur)': '_handleBlur()',\n        '(click)': '_handleClick()'\n    },\n    templateUrl: 'list-option.html',\n    encapsulation: ViewEncapsulation.None,\n    preserveWhitespaces: false,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class McListOption implements AfterContentInit, OnDestroy, OnInit, IFocusableOption {\n    _hasFocus: boolean = false;\n\n    @ContentChildren(McLine) _lines: QueryList<McLine>;\n\n    @ViewChild('text') _text: ElementRef;\n\n    // Whether the label should appear before or after the checkbox. Defaults to 'after'\n    @Input() checkboxPosition: 'before' | 'after' = 'after';\n\n    @Input() value: any;\n\n    @Input()\n    get disabled() {\n        return this._disabled || (this.listSelection && this.listSelection.disabled);\n    }\n\n    set disabled(value: any) {\n        const newValue = toBoolean(value);\n\n        if (newValue !== this._disabled) {\n            this._disabled = newValue;\n            this._changeDetector.markForCheck();\n        }\n    }\n\n    @Input()\n    get selected(): boolean {\n        return this.listSelection.selectedOptions && this.listSelection.selectedOptions.isSelected(this) || false;\n    }\n\n    set selected(value: boolean) {\n        const isSelected = toBoolean(value);\n\n        if (isSelected !== this._selected) {\n            this.setSelected(isSelected);\n\n            this.listSelection._reportValueChange();\n        }\n    }\n\n    private _lineSetter: McLineSetter;\n    private _selected = false;\n    private _disabled = false;\n\n    constructor(\n        private _element: ElementRef,\n        private _changeDetector: ChangeDetectorRef,\n        @Inject(forwardRef(() => McListSelection))\n        public listSelection: McListSelection\n    ) {}\n\n    ngOnInit() {\n        if (this._selected) {\n            // List options that are selected at initialization can't be reported properly to the form\n            // control. This is because it takes some time until the selection-list knows about all\n            // available options. Also it can happen that the ControlValueAccessor has an initial value\n            // that should be used instead. Deferring the value change report to the next tick ensures\n            // that the form control value is not being overwritten.\n            const wasSelected = this._selected;\n\n            Promise.resolve().then(() => {\n                if (this._selected || wasSelected) {\n                    this.selected = true;\n                    this._changeDetector.markForCheck();\n                }\n            });\n        }\n    }\n\n    ngAfterContentInit() {\n        this._lineSetter = new McLineSetter(this._lines, this._element);\n    }\n\n    ngOnDestroy(): void {\n        if (this.selected) {\n            // We have to delay this until the next tick in order\n            // to avoid changed after checked errors.\n            Promise.resolve().then(() => this.selected = false);\n        }\n\n        this.listSelection._removeOptionFromList(this);\n    }\n\n    toggle(): void {\n        this.selected = !this.selected;\n    }\n\n    focus(): void {\n        this._element.nativeElement.focus();\n\n        this.listSelection.setFocusedOption(this);\n    }\n\n    getLabel() {\n        return this._text ? this._text.nativeElement.textContent : '';\n    }\n\n    setSelected(selected: boolean) {\n        if (this._selected === selected || !this.listSelection.selectedOptions) { return; }\n\n        this._selected = selected;\n\n        if (selected) {\n            this.listSelection.selectedOptions.select(this);\n        } else {\n            this.listSelection.selectedOptions.deselect(this);\n        }\n\n        this._changeDetector.markForCheck();\n    }\n\n    _getHeight(): number {\n        return this._element.nativeElement.getClientRects()[0].height;\n    }\n\n    _handleClick() {\n        if (this.disabled) { return; }\n\n        this.listSelection.setFocusedOption(this);\n    }\n\n    _handleFocus() {\n        if (this.disabled || this._hasFocus) { return; }\n\n        this._hasFocus = true;\n    }\n\n    _handleBlur() {\n        this._hasFocus = false;\n\n        this.listSelection._onTouched();\n    }\n\n    _getHostElement(): HTMLElement {\n        return this._element.nativeElement;\n    }\n}\n\n\nexport const MC_SELECTION_LIST_VALUE_ACCESSOR: any = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => McListSelection),\n    multi: true\n};\n\n// Change event that is being fired whenever the selected state of an option changes. */\nexport class McListSelectionChange {\n    constructor(\n        // Reference to the selection list that emitted the event.\n        public source: McListSelection,\n        // Reference to the option that has been changed.\n        public option: McListOption\n    ) {}\n}\n\n\nexport class McListSelectionBase {}\n\nexport const _McListSelectionMixinBase: CanDisableCtor & typeof McListSelectionBase\n    = mixinDisabled(McListSelectionBase);\n\n@Component({\n    exportAs: 'mcListSelection',\n    selector: 'mc-list-selection',\n    template: '<ng-content></ng-content>',\n    styleUrls: ['./list.css'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n    inputs: ['disabled', 'tabIndex'],\n    host: {\n        class: 'mc-list-selection',\n        '[tabIndex]': 'tabIndex',\n        '(focus)': 'focus()',\n        '(blur)': '_onTouched()',\n        '(keydown)': '_onKeyDown($event)',\n        '(window:resize)': 'updateScrollSize()'\n    },\n    providers: [MC_SELECTION_LIST_VALUE_ACCESSOR],\n    preserveWhitespaces: false\n})\nexport class McListSelection extends _McListSelectionMixinBase implements\n    IFocusableOption, CanDisable, AfterContentInit, ControlValueAccessor {\n\n    _keyManager: FocusKeyManager<McListOption>;\n\n    // The option components contained within this selection-list.\n    @ContentChildren(McListOption) options: QueryList<McListOption>;\n\n    tabIndex: number;\n\n    autoSelect: boolean;\n    noUnselect: boolean;\n    multiple: boolean;\n\n    // todo temporary solution\n    withShift: boolean;\n    withCtrl: boolean;\n\n    @Input() horizontal: boolean = false;\n\n    // Emits a change event whenever the selected state of an option changes.\n    @Output() readonly selectionChange: EventEmitter<McListSelectionChange> = new EventEmitter<McListSelectionChange>();\n\n    selectedOptions: SelectionModel<McListOption>;\n\n    // Used for storing the values that were assigned before the options were initialized.\n    private _tempValues: string[] | null;\n\n    private _modelChanges = Subscription.EMPTY;\n\n    constructor(\n        private _element: ElementRef,\n        @Attribute('tabindex') tabIndex: string,\n        @Attribute('auto-select') autoSelect: string,\n        @Attribute('no-unselect') noUnselect: string,\n        @Attribute('multiple') multiple: string\n    ) {\n        super();\n\n        this.autoSelect = autoSelect === null ? true : toBoolean(autoSelect);\n        this.multiple = multiple === null ? true : toBoolean(multiple);\n        this.noUnselect = noUnselect === null ? true : toBoolean(noUnselect);\n\n        this.tabIndex = parseInt(tabIndex) || 0;\n\n        this.selectedOptions = new SelectionModel<McListOption>(this.multiple);\n    }\n\n    ngAfterContentInit(): void {\n        this.horizontal = toBoolean(this.horizontal);\n\n        this._keyManager = new FocusKeyManager<McListOption>(this.options)\n            .withTypeAhead()\n            .withVerticalOrientation(!this.horizontal)\n            .withHorizontalOrientation(this.horizontal ? 'ltr' : null);\n\n        if (this._tempValues) {\n            this._setOptionsFromValues(this._tempValues);\n            this._tempValues = null;\n        }\n\n        // Sync external changes to the model back to the options.\n        this._modelChanges = this.selectedOptions.onChange!.subscribe((event) => {\n            for (const item of event.added) {\n                item.selected = true;\n            }\n\n            for (const item of event.removed) {\n                item.selected = false;\n            }\n        });\n\n        this.updateScrollSize();\n    }\n\n    ngOnDestroy() {\n        this._modelChanges.unsubscribe();\n    }\n\n    focus() {\n        this._element.nativeElement.focus();\n    }\n\n    selectAll() {\n        this.options.forEach((option) => option.setSelected(true));\n\n        this._reportValueChange();\n    }\n\n    deselectAll() {\n        this.options.forEach((option) => option.setSelected(false));\n\n        this._reportValueChange();\n    }\n\n    updateScrollSize(): void {\n        if (this.horizontal || !this.options.first) { return; }\n\n        this._keyManager.withScrollSize(Math.floor(this._getHeight() / this.options.first._getHeight()));\n    }\n\n    // Sets the focused option of the selection-list.\n    setFocusedOption(option: McListOption): void {\n        this._keyManager.updateActiveItem(option);\n\n        if (this.withShift && this.multiple) {\n            const previousIndex = this._keyManager.previousActiveItemIndex;\n            const activeIndex = this._keyManager.activeItemIndex;\n\n            if (previousIndex < activeIndex) {\n                this.options.forEach((item, index) => {\n                    if (index >= previousIndex && index <= activeIndex) { item.setSelected(true); }\n                });\n            } else {\n                this.options.forEach((item, index) => {\n                    if (index >= activeIndex && index <= previousIndex) { item.setSelected(true); }\n                });\n            }\n\n            this.withShift = false;\n        } else if (this.withCtrl) {\n            this.withCtrl = false;\n\n            if (!this._canDeselectLast(option)) { return; }\n\n            option.toggle();\n        } else {\n            if (this.autoSelect) {\n                this.options.forEach((item) => item.setSelected(false));\n                option.setSelected(true);\n            }\n        }\n\n        this._emitChangeEvent(option);\n        this._reportValueChange();\n    }\n\n    // Implemented as part of ControlValueAccessor.\n    writeValue(values: string[]): void {\n        if (this.options) {\n            this._setOptionsFromValues(values || []);\n        } else {\n            this._tempValues = values;\n        }\n    }\n\n    // Implemented as part of ControlValueAccessor.\n    registerOnChange(fn: (value: any) => void): void {\n        this._onChange = fn;\n    }\n\n    // Implemented as part of ControlValueAccessor.\n    registerOnTouched(fn: () => void): void {\n        this._onTouched = fn;\n    }\n\n    // Implemented as a part of ControlValueAccessor.\n    setDisabledState(isDisabled: boolean): void {\n        if (this.options) {\n            this.options.forEach((option) => option.disabled = isDisabled);\n        }\n    }\n\n    getSelectedOptionValues(): string[] {\n        return this.options.filter((option) => option.selected).map((option) => option.value);\n    }\n\n    // Toggles the selected state of the currently focused option.\n    toggleFocusedOption(): void {\n        const focusedIndex = this._keyManager.activeItemIndex;\n\n        if (focusedIndex != null && this._isValidIndex(focusedIndex)) {\n            const focusedOption: McListOption = this.options.toArray()[focusedIndex];\n\n            if (focusedOption && this._canDeselectLast(focusedOption)) {\n                focusedOption.toggle();\n\n                // Emit a change event because the focused option changed its state through user interaction.\n                this._emitChangeEvent(focusedOption);\n            }\n        }\n    }\n\n    _canDeselectLast(listOption: McListOption): boolean {\n        return !(this.noUnselect && this.selectedOptions.selected.length === 1 && listOption.selected);\n    }\n\n    _getHeight(): number {\n        return this._element.nativeElement.getClientRects()[0].height;\n    }\n\n    // View to model callback that should be called if the list or its options lost focus.\n    _onTouched: () => void = () => {};\n\n    // Removes an option from the selection list and updates the active item.\n    _removeOptionFromList(option: McListOption) {\n        if (option._hasFocus) {\n            const optionIndex = this._getOptionIndex(option);\n\n            // Check whether the option is the last item\n            if (optionIndex > 0) {\n                this._keyManager.setPreviousItemActive();\n            } else if (optionIndex === 0 && this.options.length > 1) {\n                this._keyManager.setNextItemActive();\n            }\n        }\n    }\n\n    _onKeyDown(event: KeyboardEvent) {\n        const keyCode = event.keyCode;\n        this.withShift = event.shiftKey;\n        this.withCtrl = event.ctrlKey;\n\n        switch (keyCode) {\n            case SPACE:\n            case ENTER:\n                this.toggleFocusedOption();\n                event.preventDefault();\n\n                break;\n            case HOME:\n                this._keyManager.setFirstItemActive();\n                event.preventDefault();\n\n                break;\n            case END:\n                this._keyManager.setLastItemActive();\n                event.preventDefault();\n\n                break;\n            case PAGE_UP:\n                if (!this.horizontal) { this._keyManager.setPreviousPageItemActive(); }\n\n                event.preventDefault();\n\n                break;\n            case PAGE_DOWN:\n                if (!this.horizontal) { this._keyManager.setNextPageItemActive(); }\n\n                event.preventDefault();\n\n                break;\n            default:\n                this._keyManager.onKeydown(event);\n        }\n    }\n\n    // Reports a value change to the ControlValueAccessor\n    _reportValueChange() {\n        if (this.options) {\n            this._onChange(this.getSelectedOptionValues());\n        }\n    }\n\n    // Emits a change event if the selected state of an option changed.\n    _emitChangeEvent(option: McListOption) {\n        this.selectionChange.emit(new McListSelectionChange(this, option));\n    }\n\n    // Returns the option with the specified value.\n    private _getOptionByValue(value: string): McListOption | undefined {\n        return this.options.find((option) => option.value === value);\n    }\n\n    // Sets the selected options based on the specified values.\n    private _setOptionsFromValues(values: string[]) {\n        this.options.forEach((option) => option.setSelected(false));\n\n        values\n            .map((value) => this._getOptionByValue(value))\n            .filter(Boolean)\n            .forEach((option) => option!.setSelected(true));\n    }\n\n    /**\n     * Utility to ensure all indexes are valid.\n     * @param index The index to be checked.\n     * @returns True if the index is valid for our list of options.\n     */\n    private _isValidIndex(index: number): boolean {\n        return index >= 0 && index < this.options.length;\n    }\n\n    // Returns the index of the specified list option.\n    private _getOptionIndex(option: McListOption): number {\n        return this.options.toArray().indexOf(option);\n    }\n\n    // View to model callback that should be called whenever the selected options change.\n    private _onChange: (value: any) => void = (_: any) => {};\n}\n","// todo пока не делаем, перенесено из материала, но у нас в доках таких простых списков нет.\nimport {\n    AfterContentInit, ChangeDetectionStrategy, Component, ContentChildren, Directive, ElementRef, QueryList,\n    ViewEncapsulation\n} from '@angular/core';\n\nimport { McLine, McLineSetter } from '@ptsecurity/mosaic/core';\n\n\nexport class McListBase {}\n\n@Component({\n    selector: 'mc-list',\n    host: { class: 'mc-list' },\n    template: '<ng-content></ng-content>',\n    styleUrls: ['./list.css'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None\n})\nexport class McList extends McListBase {}\n\n\n/**\n * Directive whose purpose is to add the mc- CSS styling to this selector.\n * @docs-private\n */\n@Directive({\n    selector: '[mc-subheader], [mcSubheader]',\n    host: { class: 'mc-subheader' }\n})\nexport class McListSubheaderCssStyler {}\n\n\n// Boilerplate for applying mixins to McListItem.\nexport class McListItemBase {}\n\n@Component({\n    selector: 'mc-list-item, a[mc-list-item]',\n    host: {\n        class: 'mc-list-item',\n        '(focus)': '_handleFocus()',\n        '(blur)': '_handleBlur()'\n    },\n    templateUrl: './list-item.html',\n    encapsulation: ViewEncapsulation.None,\n    preserveWhitespaces: false,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class McListItem extends McListItemBase implements AfterContentInit {\n    @ContentChildren(McLine) _lines: QueryList<McLine>;\n\n    private _lineSetter: McLineSetter;\n\n    constructor(private _element: ElementRef) {\n        super();\n    }\n\n    ngAfterContentInit() {\n        this._lineSetter = new McLineSetter(this._lines, this._element);\n    }\n\n    _handleFocus() {\n        this._element.nativeElement.classList.add('mc-focused');\n    }\n\n    _handleBlur() {\n        this._element.nativeElement.classList.remove('mc-focused');\n    }\n\n    _getHostElement(): HTMLElement {\n        return this._element.nativeElement;\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { A11yModule } from '@ptsecurity/cdk/a11y';\n\nimport { McLineModule } from '@ptsecurity/mosaic/core';\n\nimport { McListSelection, McListOption } from './list-selection.component';\nimport { McList, McListItem, McListSubheaderCssStyler } from './list.component';\n\n\n@NgModule({\n    imports: [\n        CommonModule,\n        A11yModule,\n        McLineModule\n    ],\n    exports: [\n        McList,\n        McListSelection,\n        McListItem,\n        McListOption,\n        McListSubheaderCssStyler\n    ],\n    declarations: [\n        McList,\n        McListSelection,\n        McListItem,\n        McListOption,\n        McListSubheaderCssStyler\n    ]\n})\nexport class McListModule {}\n","import {\n    Input,\n    Attribute,\n    Component,\n    ElementRef,\n    OnDestroy,\n    ViewEncapsulation,\n    ChangeDetectionStrategy,\n    ChangeDetectorRef\n} from '@angular/core';\n\nimport { FocusMonitor } from '@ptsecurity/cdk/a11y';\nimport {\n    CanDisable, CanDisableCtor,\n    HasTabIndex, HasTabIndexCtor,\n    mixinDisabled,\n    mixinTabIndex,\n    toBoolean\n} from '@ptsecurity/mosaic/core';\n\n\nexport class McLinkBase {\n    constructor(public _elementRef: ElementRef) {\n    }\n}\n\nexport const _McLinkBase: HasTabIndexCtor & CanDisableCtor & typeof McLinkBase\n    = mixinTabIndex(mixinDisabled(McLinkBase));\n\n@Component({\n    selector: 'a.mc-link',\n    template: `<ng-content></ng-content>`,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n    exportAs: 'mcLink',\n    styleUrls: ['./link.css'],\n    inputs: ['disabled'],\n    host: {\n        '[attr.disabled]': 'disabled || null',\n        '[attr.tabindex]': 'tabIndex'\n    }\n})\n\nexport class McLink extends _McLinkBase implements OnDestroy, HasTabIndex, CanDisable {\n\n    @Input()\n    get disabled() {\n        return this._disabled;\n    }\n\n    set disabled(value: any) {\n        const newValue = toBoolean(value);\n\n        if (newValue !== this._disabled) {\n            this._disabled = newValue;\n            this._changeDetector.markForCheck();\n        }\n    }\n\n    private _disabled = false;\n\n    constructor(\n        @Attribute('tabindex') tabIndex: string,\n        public elementRef: ElementRef,\n        private _focusMonitor: FocusMonitor,\n        private _changeDetector: ChangeDetectorRef) {\n\n        super(elementRef);\n        this._focusMonitor.monitor(elementRef.nativeElement, true);\n        this.tabIndex = parseInt(tabIndex) || 0;\n    }\n\n    ngOnDestroy() {\n        this._focusMonitor.stopMonitoring(this.elementRef.nativeElement);\n    }\n\n    focus(): void {\n        this._getHostElement().focus();\n    }\n\n    _getHostElement() {\n        return this.elementRef.nativeElement;\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { A11yModule } from '@ptsecurity/cdk/a11y';\n\nimport { McLink } from './link.component';\n\n\n@NgModule({\n    imports: [\n        CommonModule,\n        A11yModule\n    ],\n    declarations: [McLink],\n    exports: [McLink]\n})\nexport class McLinkModule {}\n","import { Injectable, Optional, SkipSelf } from '@angular/core';\nimport { Subject, Subscription } from 'rxjs';\n\nimport { McModalRef } from './modal-ref.class';\n\n\ninterface IRegisteredMeta {\n    modalRef: McModalRef;\n    afterOpenSubscription: Subscription;\n    afterCloseSubscription: Subscription;\n}\n\n@Injectable()\nexport class McModalControlService {\n\n    // Track singleton afterAllClose through over the injection tree\n    get afterAllClose(): Subject<void> {\n        return this.parentService ? this.parentService.afterAllClose : this.rootAfterAllClose;\n    }\n\n    // Track singleton openModals array through over the injection tree\n    get openModals(): McModalRef[] {\n        return this.parentService ? this.parentService.openModals : this.rootOpenModals;\n    }\n\n    // @ts-ignore\n    private rootOpenModals: McModalRef[] = this.parentService ? null : [];\n    // @ts-ignore\n    private rootAfterAllClose: Subject<void> = this.parentService ? null : new Subject<void>();\n    // @ts-ignore\n    private rootRegisteredMetaMap: Map<McModalRef, IRegisteredMeta> = this.parentService ? null : new Map();\n\n    // Registered modal for later usage\n    private get registeredMetaMap(): Map<McModalRef, IRegisteredMeta> {\n        return this.parentService ? this.parentService.registeredMetaMap : this.rootRegisteredMetaMap;\n    }\n\n    constructor(\n        @Optional() @SkipSelf() private parentService: McModalControlService) {\n    }\n\n    // Register a modal to listen its open/close\n    registerModal(modalRef: McModalRef): void {\n        if (!this.hasRegistered(modalRef)) {\n            const afterOpenSubscription = modalRef.afterOpen.subscribe(() => this.openModals.push(modalRef));\n            const afterCloseSubscription = modalRef.afterClose.subscribe(() => this.removeOpenModal(modalRef));\n\n            this.registeredMetaMap.set(modalRef, {modalRef, afterOpenSubscription, afterCloseSubscription});\n        }\n    }\n\n    hasRegistered(modalRef: McModalRef): boolean {\n        return this.registeredMetaMap.has(modalRef);\n    }\n\n    // Close all registered opened modals\n    closeAll(): void {\n        let i = this.openModals.length;\n\n        while (i--) {\n            this.openModals[i].close();\n        }\n    }\n\n    private removeOpenModal(modalRef: McModalRef): void {\n        const index = this.openModals.indexOf(modalRef);\n\n        if (index > -1) {\n            this.openModals.splice(index, 1);\n\n            if (!this.openModals.length) {\n                this.afterAllClose.next();\n            }\n        }\n    }\n}\n","import { Observable } from 'rxjs';\n\nimport { McModalComponent } from './modal.component';\n\n\n/**\n * API class that public to users to handle the modal instance.\n * McModalRef is aim to avoid accessing to the modal instance directly by users.\n */\nexport abstract class McModalRef<T = any, R = any> {\n    abstract afterOpen: Observable<void>;\n    abstract afterClose: Observable<R>;\n\n    abstract open(): void;\n\n    abstract close(result?: R): void;\n\n    abstract destroy(result?: R): void;\n\n    /**\n     * Trigger the nzOnOk/nzOnCancel by manual\n     */\n    abstract triggerOk(): void;\n\n    abstract triggerCancel(): void;\n\n    // /**\n    //  * Return the ComponentRef of nzContent when specify nzContent as a Component\n    //  * Note: this method may return undefined if the Component has not ready yet.\n    //    (it only available after Modal's ngOnInit)\n    //  */\n    // abstract getContentComponentRef(): ComponentRef<{}>;\n\n    /**\n     * Return the component instance of nzContent when specify nzContent as a Component\n     * Note: this method may return undefined if the Component has not ready yet.\n     * (it only available after Modal's ngOnInit)\n     */\n    abstract getContentComponent(): T;\n\n    /**\n     * Get the dom element of this Modal\n     */\n    abstract getElement(): HTMLElement;\n\n    /**\n     * Get the instance of the Modal itself\n     */\n    abstract getInstance(): McModalComponent;\n}\n","export interface IClickPosition {\n    x: number;\n    y: number;\n}\n\nexport class ModalUtil {\n    private lastPosition: IClickPosition;\n\n    constructor(private document: Document) {\n        this.lastPosition = {x: -1, y: -1};\n        this.listenDocumentClick();\n    }\n\n    getLastClickPosition(): IClickPosition {\n        return this.lastPosition;\n    }\n\n    listenDocumentClick(): void {\n        this.document.addEventListener('click', (event: MouseEvent) => {\n            this.lastPosition = {x: event.clientX, y: event.clientY};\n        });\n    }\n}\n\nexport default new ModalUtil(document);\n","import { DOCUMENT } from '@angular/common';\nimport {\n    AfterViewInit, ChangeDetectionStrategy, ChangeDetectorRef,\n    Component,\n    ComponentFactoryResolver,\n    ComponentRef,\n    ElementRef,\n    EventEmitter,\n    Inject,\n    Injector,\n    Input,\n    OnChanges,\n    OnDestroy,\n    OnInit,\n    Output,\n    Renderer2,\n    SimpleChanges,\n    TemplateRef,\n    Type,\n    ViewChild,\n    ViewContainerRef, ViewEncapsulation\n} from '@angular/core';\nimport { ESCAPE } from '@ptsecurity/cdk/keycodes';\nimport { Overlay, OverlayRef } from '@ptsecurity/cdk/overlay';\nimport { McMeasureScrollbarService } from '@ptsecurity/mosaic/core';\nimport { Observable } from 'rxjs';\n\nimport { McModalControlService } from './modal-control.service';\nimport { McModalRef } from './modal-ref.class';\n// tslint:disable-next-line\nimport ModalUtil from './modal-util';\nimport { IModalButtonOptions, IModalOptions, ModalType, OnClickCallback } from './modal.type';\n\n\n// Duration when perform animations (ms)\nexport const MODAL_ANIMATE_DURATION = 200;\n\ntype AnimationState = 'enter' | 'leave' | null;\n\n@Component({\n    selector: 'mc-modal',\n    templateUrl: './modal.component.html',\n    styleUrls: ['./modal.css'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n    host: {\n        '(keydown)': 'onKeyDown($event)'\n    }\n})\nexport class McModalComponent<T = any, R = any> extends McModalRef<T, R>\n    implements OnInit, OnChanges, AfterViewInit, OnDestroy, IModalOptions {\n\n    // tslint:disable-next-line:no-any\n    @Input() mcModalType: ModalType = 'default';\n    // If not specified, will use <ng-content>\n    @Input() mcContent: string | TemplateRef<{}> | Type<T>;\n    // available when mcContent is a component\n    @Input() mcComponentParams: object;\n    // Default Modal ONLY\n    @Input() mcFooter: string | TemplateRef<{}> | IModalButtonOptions<T>[];\n\n    @Input()\n    get mcVisible() { return this._mcVisible; }\n    set mcVisible(value) { this._mcVisible = value; }\n    _mcVisible = false;\n\n    @Output() mcVisibleChange = new EventEmitter<boolean>();\n\n    @Input() mcZIndex: number = 1000;\n    @Input() mcWidth: number | string = 480;\n    @Input() mcWrapClassName: string;\n    @Input() mcClassName: string;\n    @Input() mcStyle: object;\n    @Input() mcTitle: string | TemplateRef<{}>;\n    @Input() mcCloseByESC: boolean = true;\n\n    @Input()\n    get mcClosable() { return this._mcClosable; }\n    set mcClosable(value) { this._mcClosable = value; }\n    _mcClosable = true;\n\n    @Input()\n    get mcMask() { return this._mcMask; }\n    set mcMask(value) { this._mcMask = value; }\n    _mcMask = true;\n\n    @Input()\n    get mcMaskClosable() { return this._mcMaskClosable; }\n    set mcMaskClosable(value) { this._mcMaskClosable = value; }\n    _mcMaskClosable = true;\n\n    @Input() mcMaskStyle: object;\n    @Input() mcBodyStyle: object;\n\n    // Trigger when modal open(visible) after animations\n    @Output() mcAfterOpen = new EventEmitter<void>();\n    // Trigger when modal leave-animation over\n    @Output() mcAfterClose = new EventEmitter<R>();\n\n    // --- Predefined OK & Cancel buttons\n    @Input() mcOkText: string;\n    @Input() mcOkType = 'primary';\n\n    @Input()\n    get mcOkLoading() { return this._mcOkLoading; }\n    set mcOkLoading(value) { this._mcOkLoading = value; }\n    _mcOkLoading = false;\n\n    @Input() @Output() mcOnOk: EventEmitter<T> | OnClickCallback<T> = new EventEmitter<T>();\n    // Only aim to focus the ok button that needs to be auto focused\n    @ViewChild('autoFocusButtonOk', {read: ElementRef}) autoFocusButtonOk: ElementRef;\n    @Input() mcCancelText: string;\n\n    @Input()\n    get mcCancelLoading() { return this._mcCancelLoading; }\n    set mcCancelLoading(value) { this._mcCancelLoading = value; }\n    _mcCancelLoading = false;\n\n    @Input() @Output() mcOnCancel: EventEmitter<T> | OnClickCallback<T> = new EventEmitter<T>();\n    @ViewChild('modalContainer') modalContainer: ElementRef;\n    @ViewChild('bodyContainer', {read: ViewContainerRef}) bodyContainer: ViewContainerRef;\n    maskAnimationClassMap: object;\n    modalAnimationClassMap: object;\n    // The origin point that animation based on\n    transformOrigin = '0px 0px 0px';\n\n    // Observable alias for mcAfterOpen\n    get afterOpen(): Observable<void> {\n        return this.mcAfterOpen.asObservable();\n    }\n\n    // Observable alias for mcAfterClose\n    get afterClose(): Observable<R> {\n        return this.mcAfterClose.asObservable();\n    }\n\n    get okText(): string {\n        return this.mcOkText;\n    }\n\n    get cancelText(): string {\n        return this.mcCancelText;\n    }\n\n    // Indicate whether this dialog should hidden\n    get hidden(): boolean {\n        return !this.mcVisible && !this.animationState;\n    }\n\n    // Handle the reference when using mcContent as Component\n    private contentComponentRef: ComponentRef<T>;\n    // Current animation state\n    private animationState: AnimationState;\n    private container: HTMLElement | OverlayRef;\n\n    constructor(\n        private overlay: Overlay,\n        private renderer: Renderer2,\n        private cfr: ComponentFactoryResolver,\n        private elementRef: ElementRef,\n        private viewContainer: ViewContainerRef,\n        private mcMeasureScrollbarService: McMeasureScrollbarService,\n        private modalControl: McModalControlService,\n        private changeDetector: ChangeDetectorRef,\n        @Inject(DOCUMENT) private document: any) {\n\n        super();\n    }\n\n    @Input() mcGetContainer: HTMLElement | OverlayRef | (() => HTMLElement | OverlayRef) = () => this.overlay.create();\n\n    ngOnInit() {\n\n        // Create component along without View\n        if (this.isComponent(this.mcContent)) {\n            this.createDynamicComponent(this.mcContent as Type<T>);\n        }\n\n        // Setup default button options\n        if (this.isModalButtons(this.mcFooter)) {\n            this.mcFooter = this.formatModalButtons(this.mcFooter as IModalButtonOptions<T>[]);\n        }\n\n        // Place the modal dom to elsewhere\n        this.container = typeof this.mcGetContainer === 'function' ? this.mcGetContainer() : this.mcGetContainer;\n        if (this.container instanceof HTMLElement) {\n            this.container.appendChild(this.elementRef.nativeElement);\n        } else if (this.container instanceof OverlayRef) {\n            // NOTE: only attach the dom to overlay, the view container is not changed actually\n            this.container.overlayElement.appendChild(this.elementRef.nativeElement);\n        }\n\n        // Register modal when afterOpen/afterClose is stable\n        this.modalControl.registerModal(this);\n    }\n\n    // [NOTE] NOT available when using by service!\n    // Because ngOnChanges never be called when using by service,\n    // here we can't support \"mcContent\"(Component) etc. as inputs that initialized dynamically.\n    // BUT: User also can change \"mcContent\" dynamically to trigger UI changes\n    // (provided you don't use \bComponent that needs initializations)\n    ngOnChanges(changes: SimpleChanges) {\n        if (changes.mcVisible) {\n            // Do not trigger animation while initializing\n            this.handleVisibleStateChange(this.mcVisible, !changes.mcVisible.firstChange);\n        }\n    }\n\n    ngAfterViewInit() {\n        // If using Component, it is the time to attach View while bodyContainer is ready\n        if (this.contentComponentRef) {\n            this.bodyContainer.insert(this.contentComponentRef.hostView);\n        }\n\n        if (this.autoFocusButtonOk) {\n            (this.autoFocusButtonOk.nativeElement as HTMLButtonElement).focus();\n        }\n    }\n\n    ngOnDestroy() {\n        if (this.container instanceof OverlayRef) {\n            this.container.dispose();\n        }\n    }\n\n    open() {\n        this.changeVisibleFromInside(true);\n    }\n\n    close(result?: R) {\n        this.changeVisibleFromInside(false, result);\n    }\n\n    // Destroy equals Close\n    destroy(result?: R) {\n        this.close(result);\n    }\n\n    triggerOk() {\n        this.onClickOkCancel('ok');\n    }\n\n    triggerCancel() {\n        this.onClickOkCancel('cancel');\n    }\n\n    getInstance(): McModalComponent {\n        return this;\n    }\n\n    getContentComponentRef(): ComponentRef<T> {\n        return this.contentComponentRef;\n    }\n\n    getContentComponent(): T {\n        return this.contentComponentRef && this.contentComponentRef.instance;\n    }\n\n    getElement(): HTMLElement {\n        return this.elementRef && this.elementRef.nativeElement;\n    }\n\n    onClickMask($event: MouseEvent) {\n        if (\n            this.mcMask &&\n            this.mcMaskClosable &&\n            ($event.target as HTMLElement).classList.contains('mc-modal-wrap') &&\n            this.mcVisible\n        ) {\n            this.onClickOkCancel('cancel');\n        }\n    }\n\n    // tslint:disable-next-line\n    isModalType(type: ModalType): boolean {\n        return this.mcModalType === type;\n    }\n\n    onKeyDown(event: KeyboardEvent): void {\n\n        if (event.keyCode === ESCAPE && this.container && (this.container instanceof OverlayRef)) {\n\n            this.close();\n            event.preventDefault();\n        }\n    }\n\n    // AoT\n    onClickCloseBtn() {\n        if (this.mcVisible) {\n            this.onClickOkCancel('cancel');\n        }\n    }\n\n    // AoT\n    // tslint:disable-next-line\n    onClickOkCancel(type: 'ok' | 'cancel') {\n        const trigger = { ok: this.mcOnOk, cancel: this.mcOnCancel }[type];\n        const loadingKey = { ok: 'mcOkLoading', cancel: 'mcCancelLoading' }[type];\n\n        if (trigger instanceof EventEmitter) {\n            trigger.emit(this.getContentComponent());\n        } else if (typeof trigger === 'function') {\n\n            const result = trigger(this.getContentComponent());\n            // Users can return \"false\" to prevent closing by default\n            const caseClose = (doClose: boolean | void | {}) => (doClose !== false) && this.close(doClose as R);\n\n            if (isPromise(result)) {\n                this[loadingKey] = true;\n                const handleThen = (doClose) => {\n                    this[loadingKey] = false;\n                    caseClose(doClose);\n                };\n                (result as Promise<void>).then(handleThen).catch(handleThen);\n            } else {\n                caseClose(result);\n            }\n        }\n    }\n\n    // AoT\n    isNonEmptyString(value: {}): boolean {\n        return typeof value === 'string' && value !== '';\n    }\n\n    // AoT\n    isTemplateRef(value: {}): boolean {\n        return value instanceof TemplateRef;\n    }\n\n    // AoT\n    isComponent(value: {}): boolean {\n        return value instanceof Type;\n    }\n\n    // AoT\n    isModalButtons(value: {}): boolean {\n        return Array.isArray(value) && value.length > 0;\n    }\n\n    // Do rest things when visible state changed\n    private handleVisibleStateChange(visible: boolean, animation: boolean = true, closeResult?: R): Promise<any> {\n        // Hide scrollbar at the first time when shown up\n        if (visible) {\n            this.changeBodyOverflow(1);\n        }\n\n        return Promise\n            .resolve(animation && this.animateTo(visible))\n            // Emit open/close event after animations over\n            .then(() => {\n                if (visible) {\n                    this.mcAfterOpen.emit();\n                } else {\n                    this.mcAfterClose.emit(closeResult);\n                    // Show/hide scrollbar when animation is over\n                    this.changeBodyOverflow();\n                }\n            });\n    }\n\n    // Lookup a button's property, if the prop is a function, call & then return the result, otherwise, return itself.\n    // AoT\n    // tslint:disable-next-line\n    getButtonCallableProp(options: IModalButtonOptions<T>, prop: string): {} {\n        const value = options[prop];\n        const args: any[] = [];\n        if (this.contentComponentRef) {\n            args.push(this.contentComponentRef.instance);\n        }\n\n        return typeof value === 'function' ? value.apply(options, args) : value;\n    }\n\n    // On mcFooter's modal button click\n    // AoT\n    // tslint:disable-next-line\n    onButtonClick(button: IModalButtonOptions<T>) {\n        // Call onClick directly\n        const result = this.getButtonCallableProp(button, 'onClick');\n        if (isPromise(result)) {\n            button.loading = true;\n            (result as Promise<{}>).then(() => button.loading = false).catch(() => button.loading = false);\n        }\n    }\n\n    // Change mcVisible from inside\n    private changeVisibleFromInside(visible: boolean, closeResult?: R): Promise<void> {\n        if (this.mcVisible !== visible) {\n            // Change mcVisible value immediately\n            this.mcVisible = visible;\n            this.mcVisibleChange.emit(visible);\n\n            return this.handleVisibleStateChange(visible, true, closeResult);\n        }\n\n        return Promise.resolve();\n    }\n\n    private changeAnimationState(state: AnimationState) {\n        this.animationState = state;\n        if (state) {\n            this.maskAnimationClassMap = {\n                [`fade-${state}`]: true,\n                [`fade-${state}-active`]: true\n            };\n            this.modalAnimationClassMap = {\n                [`zoom-${state}`]: true,\n                [`zoom-${state}-active`]: true\n            };\n        } else {\n            // @ts-ignore\n            this.maskAnimationClassMap = this.modalAnimationClassMap = null;\n        }\n\n        if (this.contentComponentRef) {\n            this.contentComponentRef.changeDetectorRef.markForCheck();\n        } else {\n            this.changeDetector.markForCheck();\n        }\n    }\n\n    private animateTo(isVisible: boolean): Promise<any> {\n        // Figure out the lastest click position when shows up\n        if (isVisible) {\n            // [NOTE] Using timeout due to the document.click event is fired later than visible change,\n            // so if not postponed to next event-loop, we can't get the lastest click position\n            window.setTimeout(() => this.updateTransformOrigin());\n        }\n\n        this.changeAnimationState(isVisible ? 'enter' : 'leave');\n\n        // Return when animation is over\n        return new Promise((resolve) => window.setTimeout(() => {\n            this.changeAnimationState(null);\n            resolve();\n        }, MODAL_ANIMATE_DURATION));\n    }\n\n    private formatModalButtons(buttons: IModalButtonOptions<T>[]): IModalButtonOptions<T>[] {\n        return buttons.map((button) => {\n\n            return {\n                ...{\n                    type: 'default',\n                    size: 'default',\n                    autoLoading: true,\n                    show: true,\n                    loading: false,\n                    disabled: false\n                },\n                ...button\n            };\n        });\n    }\n\n    /**\n     * Create a component dynamically but not attach to any View\n     * (this action will be executed when bodyContainer is ready)\n     * @param component Component class\n     */\n    private createDynamicComponent(component: Type<T>) {\n        const factory = this.cfr.resolveComponentFactory(component);\n        const childInjector = Injector.create({\n            providers: [{provide: McModalRef, useValue: this}],\n            parent: this.viewContainer.parentInjector\n        });\n\n        this.contentComponentRef = factory.create(childInjector);\n\n        if (this.mcComponentParams) {\n            Object.assign(this.contentComponentRef.instance, this.mcComponentParams);\n        }\n\n        // Do the first change detection immediately\n        // (or we do detection at ngAfterViewInit, multi-changes error will be thrown)\n        this.contentComponentRef.changeDetectorRef.detectChanges();\n\n\n    }\n\n    // Update transform-origin to the last click position on document\n    private updateTransformOrigin() {\n        const modalElement = this.modalContainer.nativeElement as HTMLElement;\n        const lastPosition = ModalUtil.getLastClickPosition();\n\n        if (lastPosition) {\n            // tslint:disable-next-line\n            this.transformOrigin = `${lastPosition.x - modalElement.offsetLeft}px ${lastPosition.y - modalElement.offsetTop}px 0px`;\n        }\n    }\n\n    /**\n     * Take care of the body's overflow to decide the existense of scrollbar\n     * @param plusNum The number that the openModals.length will increase soon\n     */\n    private changeBodyOverflow(plusNum: number = 0) {\n        const openModals = this.modalControl.openModals;\n\n        if (openModals.length + plusNum > 0) {\n            // tslint:disable-next-line\n            this.renderer.setStyle(this.document.body, 'padding-right', `${this.mcMeasureScrollbarService.scrollBarWidth}px`);\n            this.renderer.setStyle(this.document.body, 'overflow', 'hidden');\n        } else {\n            this.renderer.removeStyle(this.document.body, 'padding-right');\n            this.renderer.removeStyle(this.document.body, 'overflow');\n        }\n    }\n}\n\n////////////\n\nfunction isPromise(obj: {} | void): boolean {\n    // tslint:disable-next-line\n    return !!obj && (typeof obj === 'object' || typeof obj === 'function') && typeof (obj as Promise<{}>).then === 'function' && typeof (obj as Promise<{}>).catch === 'function';\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n\n@Pipe({\n    name: 'toCssUnit'\n})\nexport class CssUnitPipe implements PipeTransform {\n    transform(value: number | string, defaultUnit: string = 'px'): string {\n        const formatted = +value;\n\n        return isNaN(formatted) ? `${value}` : `${formatted}${defaultUnit}`;\n    }\n}\n","import { ComponentRef, Injectable } from '@angular/core';\n\nimport { Observable } from 'rxjs';\nimport { filter } from 'rxjs/operators';\n\nimport { ESCAPE } from '@ptsecurity/cdk/keycodes';\nimport { Overlay, OverlayRef } from '@ptsecurity/cdk/overlay';\nimport { ComponentPortal } from '@ptsecurity/cdk/portal';\n\nimport { McModalControlService } from './modal-control.service';\nimport { McModalRef } from './modal-ref.class';\nimport { McModalComponent } from './modal.component';\nimport { ConfirmType, IModalOptions, IModalOptionsForService } from './modal.type';\n\n\n// A builder used for managing service creating modals\nexport class ModalBuilderForService {\n\n    // Modal ComponentRef, \"null\" means it has been destroyed\n    private modalRef: ComponentRef<McModalComponent>;\n    private overlayRef: OverlayRef;\n\n    constructor(private overlay: Overlay, options: IModalOptionsForService = {}) {\n        this.createModal();\n\n        if (!('mcGetContainer' in options)) {\n            options.mcGetContainer = null;\n        }\n\n        this.changeProps(options);\n        this.modalRef.instance.open();\n        this.modalRef.instance.mcAfterClose.subscribe(() => this.destroyModal());\n\n        this.overlayRef.keydownEvents()\n            // @ts-ignore\n            .pipe(filter((event: KeyboardEvent) => {\n                return event.keyCode === ESCAPE && options.mcCloseByESC;\n            }))\n            .subscribe(() => this.modalRef.instance.close());\n    }\n\n    getInstance(): McModalComponent {\n        return this.modalRef && this.modalRef.instance;\n    }\n\n    destroyModal(): void {\n        if (this.modalRef) {\n            this.overlayRef.dispose();\n            // @ts-ignore\n            this.modalRef = null;\n        }\n    }\n\n    private changeProps(options: IModalOptions): void {\n        if (this.modalRef) {\n            // here not limit user's inputs at runtime\n            Object.assign(this.modalRef.instance, options);\n        }\n    }\n\n    // Create component to ApplicationRef\n    private createModal(): void {\n        this.overlayRef = this.overlay.create();\n        this.modalRef = this.overlayRef.attach(new ComponentPortal(McModalComponent));\n    }\n}\n\n@Injectable()\nexport class McModalService {\n    // Track of the current close modals (we assume invisible is close this time)\n    get openModals(): McModalRef[] {\n        return this.modalControl.openModals;\n    }\n\n    get afterAllClose(): Observable<void> {\n        return this.modalControl.afterAllClose.asObservable();\n    }\n\n    constructor(\n        private overlay: Overlay,\n        private modalControl: McModalControlService) {\n    }\n\n    // Closes all of the currently-open dialogs\n    closeAll(): void {\n        this.modalControl.closeAll();\n    }\n\n    create<T>(options: IModalOptionsForService<T> = {}): McModalRef<T> {\n\n        if (typeof options.mcOnCancel !== 'function') {\n            // Leave a empty function to close this modal by default\n            // tslint:disable-next-line\n            options.mcOnCancel = () => {};\n        }\n\n        if (!('mcCloseByESC' in options)) {\n            options.mcCloseByESC = true;\n        }\n\n\n        if (!('mcWidth' in options)) {\n            // tslint:disable-next-line\n            options.mcWidth = 480;\n        }\n\n        return new ModalBuilderForService(this.overlay, options).getInstance();\n    }\n\n    confirm<T>(options: IModalOptionsForService<T> = {}, confirmType: ConfirmType = 'confirm'): McModalRef<T> {\n        if ('mcFooter' in options) {\n            console.warn(`The Confirm-Modal doesn't support \"mcFooter\", this property will be ignored.`);\n        }\n\n        // NOTE: only support function currently by calling confirm()\n        if (typeof options.mcOnOk !== 'function') {\n            // Leave a empty function to close this modal by default\n            // tslint:disable-next-line\n            options.mcOnOk = () => {};\n        }\n\n        options.mcModalType = 'confirm';\n        options.mcClassName = `mc-confirm mc-confirm-${confirmType} ${options.mcClassName || ''}`;\n        options.mcMaskClosable = false;\n\n        return this.create(options);\n    }\n\n    success<T>(options: IModalOptionsForService<T> = {}): McModalRef<T> {\n        return this.simpleConfirm(options, 'success');\n    }\n\n    delete<T>(options: IModalOptionsForService<T> = {}): McModalRef<T> {\n        return this.simpleConfirm(options, 'warn');\n    }\n\n    private simpleConfirm<T>(options: IModalOptionsForService<T> = {}, confirmType: ConfirmType): McModalRef<T> {\n        // Remove the Cancel button if the user not specify a Cancel button\n        if (!('mcCancelText' in options)) {\n            // @ts-ignore\n            options.mcCancelText = null;\n        }\n\n        return this.confirm(options, confirmType);\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { OverlayModule } from '@ptsecurity/cdk/overlay';\nimport { McButtonModule } from '@ptsecurity/mosaic/button';\nimport { McIconModule } from '@ptsecurity/mosaic/icon';\n\nimport { CssUnitPipe } from './css-unit.pipe';\nimport { McModalControlService } from './modal-control.service';\nimport { McModalComponent } from './modal.component';\nimport { McModalService } from './modal.service';\n\n\n@NgModule({\n    imports: [ CommonModule, OverlayModule, McButtonModule, McIconModule ],\n    exports: [ McModalComponent ],\n    declarations: [ McModalComponent, CssUnitPipe ],\n    entryComponents: [ McModalComponent ],\n    providers: [ McModalControlService, McModalService ]\n})\nexport class McModalModule { }\n","import {\n    AfterContentChecked,\n    AfterContentInit,\n    AfterViewInit,\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    ContentChild,\n    ContentChildren, Directive,\n    ElementRef,\n    QueryList,\n    ViewEncapsulation\n} from '@angular/core';\nimport { ESCAPE } from '@ptsecurity/cdk/keycodes';\nimport { CanColor, CanColorCtor, mixinColor } from '@ptsecurity/mosaic/core';\nimport { EMPTY, merge } from 'rxjs';\nimport { startWith } from 'rxjs/operators';\n\n\nimport { McCleaner } from './cleaner';\nimport { McFormFieldControl } from './form-field-control';\nimport { getMcFormFieldMissingControlError } from './form-field-errors';\nimport { McFormFieldNumberControl } from './form-field-number-control';\nimport { McHint } from './hint';\nimport { McPrefix } from './prefix';\nimport { McStepper } from './stepper';\nimport { McSuffix } from './suffix';\n\n\nlet nextUniqueId = 0;\n\nexport class McFormFieldBase {\n    constructor(public _elementRef: ElementRef) {}\n}\n\nexport const _McFormFieldMixinBase: CanColorCtor & typeof McFormFieldBase = mixinColor(McFormFieldBase);\n\n@Component({\n    selector: 'mc-form-field',\n    exportAs: 'mcFormField',\n    templateUrl: 'form-field.html',\n    // McInput is a directive and can't have styles, so we need to include its styles here.\n    // The McInput styles are fairly minimal so it shouldn't be a big deal for people who\n    // aren't using McInput.\n    styleUrls: [\n        'form-field.css',\n        '../input/input.css',\n        '../textarea/textarea.css'\n    ],\n    host: {\n        class: 'mc-form-field',\n        '[class.mc-form-field_invalid]': '_control.errorState',\n        '[class.mc-disabled]': '_control.disabled',\n        '[class.mc-form-field_has-prefix]': 'hasPrefix',\n        '[class.mc-form-field_has-suffix]': 'hasSuffix',\n        '[class.mc-form-field_has-cleaner]': 'canShowCleaner',\n        '[class.mc-form-field_has-stepper]': 'canShowStepper',\n        '[class.mc-focused]': '_control.focused',\n        '[class.ng-untouched]': '_shouldForward(\"untouched\")',\n        '[class.ng-touched]': '_shouldForward(\"touched\")',\n        '[class.ng-pristine]': '_shouldForward(\"pristine\")',\n        '[class.ng-dirty]': '_shouldForward(\"dirty\")',\n        '[class.ng-valid]': '_shouldForward(\"valid\")',\n        '[class.ng-invalid]': '_shouldForward(\"invalid\")',\n        '[class.ng-pending]': '_shouldForward(\"pending\")',\n        '(keydown)': 'onKeyDown($event)',\n        '(mouseenter)': 'onHoverChanged(true)',\n        '(mouseleave)': 'onHoverChanged(false)'\n    },\n    inputs: ['color'],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\n\nexport class McFormField extends _McFormFieldMixinBase implements\n    AfterContentInit, AfterContentChecked, AfterViewInit, CanColor {\n\n    @ContentChild(McFormFieldControl) _control: McFormFieldControl<any>;\n    @ContentChild(McFormFieldNumberControl) _numberControl: McFormFieldNumberControl<any>;\n    @ContentChild(McStepper) _stepper: McStepper;\n\n    @ContentChildren(McHint) _hint: QueryList<McHint>;\n    @ContentChildren(McSuffix) _suffix: QueryList<McSuffix>;\n    @ContentChildren(McPrefix) _prefix: QueryList<McPrefix>;\n    @ContentChildren(McCleaner) _cleaner: QueryList<McCleaner>;\n\n    // Unique id for the internal form field label.\n    _labelId = `mc-form-field-label-${nextUniqueId++}`;\n\n    hovered: boolean = false;\n\n    constructor(public _elementRef: ElementRef, private _changeDetectorRef: ChangeDetectorRef) {\n        super(_elementRef);\n    }\n\n    ngAfterContentInit() {\n        this._validateControlChild();\n        if (this._control.controlType) {\n            this._elementRef.nativeElement.classList\n                .add(`mc-form-field-type-${this._control.controlType}`);\n\n            if (this._numberControl && this.hasStepper) {\n                this._stepper.stepUp.subscribe(this.onStepUp.bind(this));\n                this._stepper.stepDown.subscribe(this.onStepDown.bind(this));\n            }\n        }\n\n        // Subscribe to changes in the child control state in order to update the form field UI.\n        this._control.stateChanges.pipe(startWith())\n            .subscribe(() => {\n                this._changeDetectorRef.markForCheck();\n            });\n\n        if (this._numberControl) {\n            this._numberControl.stateChanges.pipe(startWith())\n                .subscribe(() => {\n                    this._changeDetectorRef.markForCheck();\n                });\n        }\n\n        // Run change detection if the value changes.\n        const valueChanges = this._control.ngControl && this._control.ngControl.valueChanges || EMPTY;\n        merge(valueChanges)\n            .subscribe(() => this._changeDetectorRef.markForCheck());\n    }\n\n    ngAfterContentChecked() {\n        this._validateControlChild();\n    }\n\n    ngAfterViewInit() {\n        // Avoid animations on load.\n        this._changeDetectorRef.detectChanges();\n    }\n\n    clearValue($event) {\n        $event.stopPropagation();\n\n        if (this._control && this._control.ngControl) {\n            this._control.ngControl.reset();\n        }\n    }\n\n    onContainerClick($event) {\n        if (this._control.onContainerClick) {\n            this._control.onContainerClick($event);\n        }\n    }\n\n    onKeyDown(e: KeyboardEvent): void {\n        // tslint:disable-next-line:deprecation\n        if (e.keyCode === ESCAPE &&\n            this._control.focused &&\n            this.hasCleaner) {\n\n            if (this._control && this._control.ngControl) {\n                this._control.ngControl.reset();\n            }\n\n            e.preventDefault();\n        }\n    }\n\n    onHoverChanged(isHovered: boolean) {\n        if (isHovered !== this.hovered) {\n            this.hovered  = isHovered;\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n\n    onStepUp() {\n        if (this._numberControl) {\n            this._numberControl.stepUp(this._numberControl.step);\n        }\n    }\n\n    onStepDown() {\n        if (this._numberControl) {\n            this._numberControl.stepDown(this._numberControl.step);\n        }\n    }\n\n    /** Determines whether a class from the NgControl should be forwarded to the host element. */\n    _shouldForward(prop: string): boolean {\n        const ngControl = this._control ? this._control.ngControl : null;\n\n        return ngControl && ngControl[prop];\n    }\n\n    /** Throws an error if the form field's control is missing. */\n    protected _validateControlChild() {\n        if (!this._control) {\n            throw getMcFormFieldMissingControlError();\n        }\n    }\n\n    get hasHint(): boolean {\n        return this._hint && this._hint.length > 0;\n    }\n\n    get hasSuffix(): boolean {\n        return this._suffix && this._suffix.length > 0;\n    }\n\n    get hasPrefix(): boolean {\n        return this._prefix && this._prefix.length > 0;\n    }\n\n    get hasCleaner(): boolean {\n        return this._cleaner && this._cleaner.length > 0;\n    }\n\n    get hasStepper(): boolean {\n        return !!this._stepper;\n    }\n\n    get canShowCleaner(): boolean {\n        return this.hasCleaner &&\n            this._control &&\n            this._control.ngControl\n                ? this._control.ngControl.value && !this._control.disabled\n                : false;\n    }\n\n\n    get disabled(): boolean {\n        return this._control && this._control.disabled;\n    }\n\n    get canShowStepper(): boolean {\n        return this._numberControl &&\n            !this.disabled &&\n            (\n                this._numberControl.focused ||\n                this.hovered\n            );\n    }\n}\n\n@Directive({\n    selector: 'mc-form-field[mcFormFieldWithoutBorders]',\n    exportAs: 'mcFormFieldWithoutBorders',\n    host: { class: 'mc-form-field_without-borders' }\n})\nexport class McFormFieldWithoutBorders {\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { McIconModule } from '@ptsecurity/mosaic/icon';\n\nimport { McCleaner } from './cleaner';\nimport { McFormField, McFormFieldWithoutBorders } from './form-field';\nimport { McHint } from './hint';\nimport { McPrefix } from './prefix';\nimport { McStepper } from './stepper';\nimport { McSuffix } from './suffix';\n\n\n@NgModule({\n    declarations: [\n        McFormField,\n        McFormFieldWithoutBorders,\n        McHint,\n        McPrefix,\n        McSuffix,\n        McCleaner,\n        McStepper\n    ],\n    imports: [CommonModule, McIconModule],\n    exports: [\n        McFormField,\n        McFormFieldWithoutBorders,\n        McHint,\n        McPrefix,\n        McSuffix,\n        McCleaner,\n        McStepper\n    ]\n})\nexport class McFormFieldModule {\n}\n","import { InjectionToken } from '@angular/core';\n\n\nexport const MC_INPUT_VALUE_ACCESSOR =\n    new InjectionToken<{ value: any }>('MC_INPUT_VALUE_ACCESSOR');\n","function sanitizeNumber(value: number): number | null {\n    return !isFinite(value) || isNaN(value)\n        ? null\n        : value;\n}\n\nfunction getPrecision(value: number): number {\n    const arr = value.toString().split('.');\n\n    return arr.length === 1\n        ? 1\n        // tslint:disable-next-line:no-magic-numbers\n        :  Math.pow(10, arr[1].length);\n}\n\nfunction add(value1: number, value2: number) {\n    const precision = Math.max(getPrecision(value1), getPrecision(value2));\n\n    const res = (value1 * precision + value2 * precision) / precision;\n\n    return sanitizeNumber(res);\n}\n\nexport const stepUp = (value: number | null,\n                       max: number,\n                       min: number,\n                       step: number\n): number | null => {\n    let res;\n\n    if (value === null) {\n        res = add(min, step);\n\n        return res === null ? null : Math.min(res, max);\n    }\n\n    res = add(value, step);\n\n    return res === null ? null : Math.max(Math.min(res, max), min);\n};\n\nexport const stepDown = (value: number | null,\n                         max: number,\n                         min: number,\n                         step: number\n): number | null => {\n    let res;\n\n    if (value === null) {\n        res = add(max, -step);\n\n        return res === null ? null : Math.max(res, min);\n    }\n\n    res = add(value, -step);\n\n    return res === null ? null : Math.min(Math.max(res, min), max);\n};\n","import {\n    Attribute,\n    Directive, DoCheck, ElementRef, Inject, Input, OnChanges,\n    OnDestroy, Optional, Self\n} from '@angular/core';\nimport {\n    FormGroupDirective,\n    NgControl,\n    NgForm, NgModel\n} from '@angular/forms';\nimport { coerceBooleanProperty } from '@ptsecurity/cdk/coercion';\nimport {\n    END, C, V, X, A, DELETE, BACKSPACE, TAB, ENTER,\n    ESCAPE, ZERO, NINE, NUMPAD_ZERO, NUMPAD_NINE, NUMPAD_MINUS, DASH,\n    FF_MINUS, LEFT_ARROW, RIGHT_ARROW, HOME, UP_ARROW, DOWN_ARROW, F1, F12\n} from '@ptsecurity/cdk/keycodes';\nimport { getSupportedInputTypes, Platform } from '@ptsecurity/cdk/platform';\nimport {\n    CanUpdateErrorState,\n    CanUpdateErrorStateCtor,\n    ErrorStateMatcher,\n    mixinErrorState\n} from '@ptsecurity/mosaic/core';\nimport { McFormFieldControl, McFormFieldNumberControl } from '@ptsecurity/mosaic/form-field';\nimport { Subject } from 'rxjs';\n\nimport { getMcInputUnsupportedTypeError } from './input-errors';\nimport { MC_INPUT_VALUE_ACCESSOR } from './input-value-accessor';\nimport { stepDown, stepUp } from './stepperUtils';\n\n\nconst MC_INPUT_INVALID_TYPES = [\n    'button',\n    'checkbox',\n    'file',\n    'hidden',\n    'image',\n    'radio',\n    'range',\n    'reset',\n    'submit'\n];\n\nexport const BIG_STEP = 10;\nexport const SMALL_STEP = 1;\n\nlet nextUniqueId = 0;\n\nexport class McInputBase {\n    constructor(public _defaultErrorStateMatcher: ErrorStateMatcher,\n                public _parentForm: NgForm,\n                public _parentFormGroup: FormGroupDirective,\n                public ngControl: NgControl) {\n    }\n}\n\nexport const _McInputMixinBase: CanUpdateErrorStateCtor & typeof McInputBase = mixinErrorState(McInputBase);\n\n\n@Directive({\n    selector: `input[mcInput][type=\"number\"]`,\n    exportAs: 'mcNumericalInput',\n    providers: [NgModel, { provide: McFormFieldNumberControl, useExisting: McNumberInput }],\n    host: {\n        '(blur)': '_focusChanged(false)',\n        '(focus)': '_focusChanged(true)',\n        '(paste)': 'onPaste($event)',\n        '(keydown)': 'onKeyDown($event)'\n    }\n})\nexport class McNumberInput implements McFormFieldNumberControl<any> {\n\n    /**\n     * Implemented as part of McFormFieldNumberControl.\n     * @docs-private\n     */\n    @Input()\n    bigStep: number;\n\n    /**\n     * Implemented as part of McFormFieldNumberControl.\n     * @docs-private\n     */\n    @Input()\n    step: number;\n\n    @Input()\n    min: number;\n\n    @Input()\n    max: number;\n\n    /**\n     * Implemented as part of McFormFieldNumberControl.\n     * @docs-private\n     */\n    value: any;\n\n    /**\n     * Implemented as part of McFormFieldNumberControl.\n     * @docs-private\n     */\n    focused: boolean = false;\n\n    /**\n     * Implemented as part of McFormFieldNumberControl.\n     * @docs-private\n     */\n    readonly stateChanges: Subject<void> = new Subject<void>();\n\n    private readonly _host: HTMLInputElement;\n\n    constructor(\n        private _platform: Platform ,\n        private _elementRef: ElementRef,\n        private _model: NgModel,\n        @Attribute('step') step: string,\n        @Attribute('big-step') bigStep: string,\n        @Attribute('min') min: string,\n        @Attribute('max') max: string\n    ) {\n        this.step = this.isDigit(step) ? parseFloat(step) : SMALL_STEP;\n        this.bigStep = this.isDigit(bigStep) ? parseFloat(bigStep) : BIG_STEP;\n        this.min = this.isDigit(min) ? parseFloat(min) : -Infinity;\n        this.max = this.isDigit(max) ? parseFloat(max) : Infinity;\n\n        this._host = this._elementRef.nativeElement;\n\n        const self = this;\n\n        if ('valueAsNumber' in this._host) {\n            Object.defineProperty(Object.getPrototypeOf(this._host), 'valueAsNumber', {\n                // tslint:disable-next-line:no-reserved-keywords\n                get() {\n                    const res = parseFloat(self.normalizeSplitter(this.value));\n\n                    return isNaN(res) ? null : res;\n                }\n            });\n        }\n    }\n\n    _focusChanged(isFocused: boolean) {\n        if (isFocused !== this.focused) {\n            this.focused = isFocused;\n            this.stateChanges.next();\n        }\n    }\n\n    onKeyDown(event: KeyboardEvent) {\n        // tslint:disable-next-line:deprecation\n        const keyCode = event.keyCode;\n\n        const isCtrlA = (e) => e.keyCode === A && (e.ctrlKey || e.metaKey);\n        const isCtrlC = (e) => e.keyCode === C && (e.ctrlKey || e.metaKey);\n        const isCtrlV = (e) => e.keyCode === V && (e.ctrlKey || e.metaKey);\n        const isCtrlX = (e) => e.keyCode === X && (e.ctrlKey || e.metaKey);\n\n        const isFKey = (e) => e.keyCode >= F1 && e.keyCode <= F12;\n\n        const isNumber = (e) => (e.keyCode >= ZERO && e.keyCode <= NINE) ||\n            (e.keyCode >= NUMPAD_ZERO && e.keyCode <= NUMPAD_NINE);\n\n        const minuses = [NUMPAD_MINUS, DASH, FF_MINUS];\n        const serviceKeys = [DELETE, BACKSPACE, TAB, ESCAPE, ENTER];\n        const arrows = [LEFT_ARROW, RIGHT_ARROW];\n        const allowedKeys =  [HOME, END].concat(arrows).concat(serviceKeys).concat(minuses);\n\n        const isIEPeriod = (e) => e.key === '.' || e.key === 'Decimal';\n        const isNotIEPeriod = (e) => e.key === '.' || e.key === ',';\n\n        // Decimal is for IE\n        const isPeriod = (e) => this._platform.EDGE || this._platform.TRIDENT\n            ? isIEPeriod(e)\n            : isNotIEPeriod(e);\n\n        if (allowedKeys.indexOf(keyCode) !== -1 ||\n            isCtrlA(event) ||\n            isCtrlC(event) ||\n            isCtrlV(event) ||\n            isCtrlX(event) ||\n            isFKey(event) ||\n            isPeriod(event)\n        ) {\n            // let it happen, don't do anything\n            return;\n        }\n        // Ensure that it is not a number and stop the keypress\n        if (event.shiftKey || !isNumber(event)) {\n            event.preventDefault();\n\n            // process steps\n            const step = event.shiftKey ? this.bigStep : this.step;\n\n            if (keyCode === UP_ARROW) {\n                this.stepUp(step);\n            }\n\n            if (keyCode === DOWN_ARROW) {\n                this.stepDown(step);\n            }\n        }\n    }\n\n    onPaste(event) {\n        let value = event.clipboardData.getData('text');\n        value = this.normalizeSplitter(value);\n\n        if (!this.isDigit(value)) {\n            event.preventDefault();\n        }\n    }\n\n    stepUp(step: number) {\n        this._elementRef.nativeElement.focus();\n        const res = stepUp(this._host.valueAsNumber, this.max, this.min, step);\n        this._host.value = res === null ? '' : res.toString();\n        this._model.update.emit(this._host.valueAsNumber);\n    }\n\n    stepDown(step: number) {\n        this._elementRef.nativeElement.focus();\n        const res = stepDown(this._host.valueAsNumber, this.max, this.min, step);\n        this._host.value = res === null ? '' : res.toString();\n        this._model.update.emit(this._host.valueAsNumber);\n    }\n\n    private normalizeSplitter(value: string): string {\n        return value ? value.replace(/,/g, '.') : value;\n    }\n\n    private isDigit(value: string): boolean {\n        return this.isFloat(value) || this.isInt(value);\n    }\n\n    private isFloat(value: string): boolean {\n        return /^-?\\d+\\.\\d+$/.test(value);\n    }\n\n    private isInt(value: string): boolean {\n        return /^-?\\d+$/.test(value);\n    }\n}\n\n@Directive({\n    selector: `input[mcInput]`,\n    exportAs: 'mcInput',\n    host: {\n        class: 'mc-input',\n        // Native input properties that are overwritten by Angular inputs need to be synced with\n        // the native input element. Otherwise property bindings for those don't work.\n        '[attr.id]': 'id',\n        '[attr.placeholder]': 'placeholder',\n        '[disabled]': 'disabled',\n        '[required]': 'required',\n        '(blur)': '_focusChanged(false)',\n        '(focus)': '_focusChanged(true)',\n        '(input)': '_onInput()'\n    },\n    providers: [{ provide: McFormFieldControl, useExisting: McInput }]\n})\nexport class McInput extends _McInputMixinBase implements McFormFieldControl<any>, OnChanges,\n    OnDestroy, DoCheck, CanUpdateErrorState {\n\n    /** An object used to control when error messages are shown. */\n    @Input() errorStateMatcher: ErrorStateMatcher;\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    focused: boolean = false;\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    readonly stateChanges: Subject<void> = new Subject<void>();\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    controlType: string = 'mc-input';\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    @Input()\n    get disabled(): boolean {\n        if (this.ngControl && this.ngControl.disabled !== null) {\n            return this.ngControl.disabled;\n        }\n\n        return this._disabled;\n    }\n\n    set disabled(value: boolean) {\n        this._disabled = coerceBooleanProperty(value);\n\n        // Browsers may not fire the blur event if the input is disabled too quickly.\n        // Reset from here to ensure that the element doesn't become stuck.\n        if (this.focused) {\n            this.focused = false;\n            this.stateChanges.next();\n        }\n    }\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    @Input()\n    get id(): string {\n        return this._id;\n    }\n\n    set id(value: string) {\n        this._id = value || this._uid;\n    }\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    @Input() placeholder: string;\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    @Input()\n    get required(): boolean {\n        return this._required;\n    }\n\n    set required(value: boolean) {\n        this._required = coerceBooleanProperty(value);\n    }\n\n    // tslint:disable no-reserved-keywords\n    /** Input type of the element. */\n    @Input()\n    get type(): string {\n        return this._type;\n    }\n\n    set type(value: string) {\n        this._type = value || 'text';\n        this._validateType();\n\n        // When using Angular inputs, developers are no longer able to set the properties on the native\n        // input element. To ensure that bindings for `type` work, we need to sync the setter\n        // with the native property. Textarea elements don't support the type property or attribute.\n        if (getSupportedInputTypes().has(this._type)) {\n            this._elementRef.nativeElement.type = this._type;\n        }\n    }\n    // tslint:enable no-reserved-keywords\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    @Input()\n    get value(): string {\n        return this._inputValueAccessor.value;\n    }\n\n    set value(value: string) {\n        if (value !== this.value) {\n            this._inputValueAccessor.value = value;\n            this.stateChanges.next();\n        }\n    }\n\n    protected _uid = `mc-input-${nextUniqueId++}`;\n    protected _previousNativeValue: any;\n    protected _disabled = false;\n    protected _id: string;\n    protected _required = false;\n    protected _type = 'text';\n    protected _neverEmptyInputTypes = [\n        'date',\n        'datetime',\n        'datetime-local',\n        'month',\n        'time',\n        'week'\n    ].filter((t) => getSupportedInputTypes().has(t));\n\n    private _inputValueAccessor: { value: any };\n\n    constructor(protected _elementRef: ElementRef,\n                @Optional() @Self() public ngControl: NgControl,\n                @Optional() _parentForm: NgForm,\n                @Optional() _parentFormGroup: FormGroupDirective,\n                _defaultErrorStateMatcher: ErrorStateMatcher,\n                @Optional() @Self() @Inject(MC_INPUT_VALUE_ACCESSOR) inputValueAccessor: any) {\n        super(_defaultErrorStateMatcher, _parentForm, _parentFormGroup, ngControl);\n        // If no input value accessor was explicitly specified, use the element as the input value\n        // accessor.\n        this._inputValueAccessor = inputValueAccessor || this._elementRef.nativeElement;\n\n        this._previousNativeValue = this.value;\n\n        // Force setter to be called in case id was not specified.\n        this.id = this.id;\n    }\n\n    ngOnChanges() {\n        this.stateChanges.next();\n    }\n\n    ngOnDestroy() {\n        this.stateChanges.complete();\n    }\n\n    ngDoCheck() {\n        if (this.ngControl) {\n            // We need to re-evaluate this on every change detection cycle, because there are some\n            // error triggers that we can't subscribe to (e.g. parent form submissions). This means\n            // that whatever logic is in here has to be super lean or we risk destroying the performance.\n            this.updateErrorState();\n        }\n\n        // We need to dirty-check the native element's value, because there are some cases where\n        // we won't be notified when it changes (e.g. the consumer isn't using forms or they're\n        // updating the value using `emitEvent: false`).\n        this._dirtyCheckNativeValue();\n    }\n\n    /** Focuses the input. */\n    focus(): void {\n        this._elementRef.nativeElement.focus();\n    }\n\n    /** Callback for the cases where the focused state of the input changes. */\n    _focusChanged(isFocused: boolean) {\n        if (isFocused !== this.focused) {\n            this.focused = isFocused;\n            this.stateChanges.next();\n        }\n    }\n\n    _onInput() {\n        // This is a noop function and is used to let Angular know whenever the value changes.\n        // Angular will run a new change detection each time the `input` event has been dispatched.\n        // It's necessary that Angular recognizes the value change, because when floatingLabel\n        // is set to false and Angular forms aren't used, the placeholder won't recognize the\n        // value changes and will not disappear.\n        // Listening to the input event wouldn't be necessary when the input is using the\n        // FormsModule or ReactiveFormsModule, because Angular forms also listens to input events.\n    }\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    get empty(): boolean {\n        return !this._isNeverEmpty() && !this._elementRef.nativeElement.value && !this._isBadInput();\n    }\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    onContainerClick() {\n        this.focus();\n    }\n\n    /** Does some manual dirty checking on the native input `value` property. */\n    protected _dirtyCheckNativeValue() {\n        const newValue = this.value;\n\n        if (this._previousNativeValue !== newValue) {\n            this._previousNativeValue = newValue;\n            this.stateChanges.next();\n        }\n    }\n\n    /** Make sure the input is a supported type. */\n    protected _validateType() {\n        if (MC_INPUT_INVALID_TYPES.indexOf(this._type) > -1) {\n            throw getMcInputUnsupportedTypeError(this._type);\n        }\n    }\n\n    /** Checks whether the input type is one of the types that are never empty. */\n    protected _isNeverEmpty() {\n        return this._neverEmptyInputTypes.indexOf(this._type) > -1;\n    }\n\n    /** Checks whether the input is invalid based on the native validation. */\n    protected _isBadInput() {\n        // The `validity` property won't be present on platform-server.\n        const validity = (this._elementRef.nativeElement as HTMLInputElement).validity;\n\n        return validity && validity.badInput;\n    }\n}\n\n@Directive({\n    selector: 'input[mcInputMonospace]',\n    exportAs: 'McInputMonospace',\n    host: { class: 'mc-input_monospace' }\n})\nexport class McInputMono {\n}\n","import { Directive, forwardRef, Input, OnChanges, Provider, SimpleChanges } from '@angular/core';\nimport { AbstractControl, NG_VALIDATORS, ValidationErrors, Validator, ValidatorFn, Validators } from '@angular/forms';\n\n\nexport const MIN_VALIDATOR: Provider = {\n    provide: NG_VALIDATORS,\n    useExisting: forwardRef(() => MinValidator),\n    multi: true\n};\n\n/**\n * A directive which installs the {@link MinValidator} for any `formControlName`,\n * `formControl`, or control with `ngModel` that also has a `min` attribute.\n *\n * @experimental\n */\n@Directive({\n    selector: '[min][formControlName],[min][formControl],[min][ngModel]',\n    providers: [MIN_VALIDATOR],\n    host: {'[attr.min]': 'min ? min : null'}\n})\nexport class MinValidator implements Validator, OnChanges {\n\n    @Input() min: string;\n    private _validator: ValidatorFn;\n    private _onChange: () => void;\n\n    ngOnChanges(changes: SimpleChanges): void {\n        if ('min' in changes) {\n            this._createValidator();\n            if (this._onChange) { this._onChange(); }\n        }\n    }\n\n    validate(c: AbstractControl): ValidationErrors | null { return this._validator(c); }\n\n    registerOnValidatorChange(fn: () => void): void { this._onChange = fn; }\n\n    private _createValidator(): void { this._validator = Validators.min(parseInt(this.min, 10)); }\n}\n\n\nexport const MAX_VALIDATOR: Provider = {\n    provide: NG_VALIDATORS,\n    useExisting: forwardRef(() => MaxValidator),\n    multi: true\n};\n\n/**\n * A directive which installs the {@link MaxValidator} for any `formControlName`,\n * `formControl`, or control with `ngModel` that also has a `min` attribute.\n *\n * @experimental\n */\n@Directive({\n    selector: '[max][formControlName],[max][formControl],[max][ngModel]',\n    providers: [MAX_VALIDATOR],\n    host: {\n        '[attr.max]': 'max ? max : null'\n    }\n})\nexport class MaxValidator implements Validator,\n    OnChanges {\n\n    @Input() max: string;\n    private _validator: ValidatorFn;\n    private _onChange: () => void;\n\n    ngOnChanges(changes: SimpleChanges): void {\n        if ('max' in changes) {\n            this._createValidator();\n            if (this._onChange) { this._onChange(); }\n        }\n    }\n\n    validate(c: AbstractControl): ValidationErrors | null { return this._validator(c); }\n\n    registerOnValidatorChange(fn: () => void): void { this._onChange = fn; }\n\n    private _createValidator(): void { this._validator = Validators.max(parseInt(this.max, 10)); }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { A11yModule } from '@ptsecurity/cdk/a11y';\nimport { McCommonModule } from '@ptsecurity/mosaic/core';\n\nimport { McInput, McInputMono, McNumberInput } from './input';\nimport { MaxValidator, MinValidator } from './input-number-validators';\n\n\n@NgModule({\n    imports: [CommonModule, A11yModule, McCommonModule, FormsModule],\n    exports: [McInput, McNumberInput, McInputMono, MinValidator, MaxValidator],\n    declarations: [McInput, McNumberInput, McInputMono, MinValidator, MaxValidator ]\n})\nexport class McInputModule {\n}\n","import { Component } from '@angular/core';\n\n\n@Component({\n    selector: 'mc-content',\n    preserveWhitespaces: false,\n    templateUrl: './content.component.html',\n    styles: [\n        `:host {\n            display: block;\n        }`\n    ],\n    host: {\n        '[class.mc-layout-content]': 'true'\n    }\n})\nexport class McContentComponent {\n}\n","import { Component } from '@angular/core';\n\n\n@Component({\n    selector: 'mc-footer',\n    preserveWhitespaces: false,\n    templateUrl: './footer.component.html',\n    styles: [\n        `:host {\n            display: block;\n        }`\n    ],\n    host: {\n        '[class.mc-layout-footer]': 'true'\n    }\n})\nexport class McFooterComponent {\n}\n","import { Component } from '@angular/core';\n\n\n@Component({\n    selector : 'mc-header',\n    preserveWhitespaces: false,\n    templateUrl: './header.component.html',\n    styles: [\n        `:host {\n            display: block;\n        }`\n    ],\n    host: {\n        '[class.mc-layout-header]': 'true'\n    }\n})\nexport class McHeaderComponent {\n}\n","import { ChangeDetectionStrategy, Component, ViewEncapsulation } from '@angular/core';\n\n\n@Component({\n    selector: 'mc-layout',\n    preserveWhitespaces: false,\n    styleUrls: ['layout.css'],\n    templateUrl: './layout.component.html',\n    host: {\n        '[class.mc-layout]': 'true',\n        '[class.mc-layout-has-sidebar]': 'hasSidebar'\n    },\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class McLayoutComponent {\n    hasSidebar = false;\n}\n","import {\n    ChangeDetectionStrategy,\n    Component,\n    EventEmitter,\n    Host,\n    Input,\n    OnInit,\n    Optional,\n    Output\n} from '@angular/core';\nimport { toBoolean } from '@ptsecurity/mosaic/core';\n\nimport { McLayoutComponent } from './layout.component';\n\n\n@Component({\n    selector: 'mc-sidebar',\n    preserveWhitespaces: false,\n    templateUrl: './sidebar.component.html',\n    host: {\n        '[class.mc-layout-sidebar]': 'true',\n        '[class.mc-layout-sidebar-collapsed]': 'mcCollapsed',\n        '[style.flex]': 'mcFlex',\n        '[style.max-width.px]': 'mcWidth',\n        '[style.min-width.px]': 'mcWidth',\n        '[style.width.px]': 'mcWidth'\n    },\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class McSidebarComponent implements OnInit {\n\n    @Input() _mcWidth = 200;\n    @Input() mcCollapsedWidth = 80;\n\n    @Input()\n    set mcCollapsible(value: boolean) {\n        this.collapsible = toBoolean(value);\n    }\n\n    get mcCollapsible(): boolean {\n        return this.collapsible;\n    }\n\n    @Input()\n    set mcCollapsed(value: boolean) {\n        this.collapsed = toBoolean(value);\n    }\n\n    get mcCollapsed(): boolean {\n        return this.collapsed;\n    }\n\n    // tslint:disable-next-line\n    @Output() mcCollapsedChange = new EventEmitter();\n\n    private collapsed = false;\n    private collapsible = false;\n\n    get mcFlex(): string {\n        if (this.mcCollapsed) {\n            return `0 0 ${this.mcCollapsedWidth}px`;\n        } else {\n            return `0 0 ${this.mcWidth}px`;\n        }\n    }\n\n    get mcWidth(): number {\n        if (this.mcCollapsed) {\n            return this.mcCollapsedWidth;\n        } else {\n            return this._mcWidth;\n        }\n    }\n\n    constructor(\n        @Optional() @Host() private mcLayoutComponent: McLayoutComponent) {\n    }\n\n    ngOnInit() {\n        if (this.mcLayoutComponent) {\n            this.mcLayoutComponent.hasSidebar = true;\n        }\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { McContentComponent } from './content.component';\nimport { McFooterComponent } from './footer.component';\nimport { McHeaderComponent } from './header.component';\nimport { McLayoutComponent } from './layout.component';\nimport { McSidebarComponent } from './sidebar.component';\n\n\n@NgModule({\n    imports: [ CommonModule ],\n    exports: [\n        McLayoutComponent,\n        McContentComponent,\n        McFooterComponent,\n        McHeaderComponent,\n        McSidebarComponent\n    ],\n    declarations: [\n        McLayoutComponent,\n        McContentComponent,\n        McFooterComponent,\n        McHeaderComponent,\n        McSidebarComponent\n    ]\n})\nexport class McLayoutModule {\n}\n","import {\n    ChangeDetectionStrategy,\n    Component,\n    Directive,\n    ElementRef,\n    OnDestroy,\n    QueryList,\n    ViewEncapsulation,\n    ContentChildren\n} from '@angular/core';\n\nimport { FocusMonitor } from '@ptsecurity/cdk/a11y';\n\nimport { mixinColor, mixinDisabled, CanColor, CanDisable, CanDisableCtor, CanColorCtor } from '@ptsecurity/mosaic/core';\nimport { McIcon } from '@ptsecurity/mosaic/icon';\n\n\n@Directive({\n    selector: 'button[mc-button], a[mc-button]',\n    host: { class: 'mc-button' }\n})\nexport class McButtonCSSStyler {}\n\n\n@Directive({\n    selector: 'button[mc-icon-button], a[mc-icon-button]',\n    queries: {\n        contentChildren: new ContentChildren(McIcon)\n    },\n    host: { class: 'mc-icon-button' }\n})\nexport class McIconButtonCSSStyler {\n    nativeElement: Element;\n\n    contentChildren: QueryList<McIcon>;\n\n    constructor(elementRef: ElementRef) {\n        this.nativeElement = elementRef.nativeElement;\n    }\n\n    ngAfterContentInit() {\n        this._addClassModificatorForIcons();\n    }\n\n    _addClassModificatorForIcons() {\n        const twoIcons = 2;\n        const icons = this.contentChildren.map((item) => item._elementRef.nativeElement);\n\n        if (icons.length === 1) {\n            const iconElement = icons[0];\n\n            if (!iconElement.previousElementSibling && !iconElement.nextElementSibling) {\n                if (iconElement.nextSibling) {\n                    iconElement.classList.add('mc-icon_left');\n                    this.nativeElement.classList.add('mc-icon-button_left');\n                }\n\n                if (iconElement.previousSibling) {\n                    iconElement.classList.add('mc-icon_right');\n                    this.nativeElement.classList.add('mc-icon-button_right');\n                }\n            }\n        } else if (icons.length === twoIcons) {\n            const firstIconElement = icons[0];\n            const secondIconElement = icons[1];\n\n            firstIconElement.classList.add('mc-icon_left');\n            secondIconElement.classList.add('mc-icon_right');\n        }\n    }\n}\n\n\nexport class McButtonBase {\n    constructor(public _elementRef: ElementRef) {}\n}\n\nexport const _McButtonMixinBase:\n    CanDisableCtor &\n    CanColorCtor &\n    typeof McButtonBase =\n        mixinColor(mixinDisabled(McButtonBase));\n\n\n@Component({\n    selector: `\n        button[mc-button],\n        button[mc-xs-button],\n        button[mc-sm-button],\n        button[mc-lg-button],\n        button[mc-xl-button]\n    `,\n    templateUrl: './button.component.html',\n    styleUrls: ['./button.css'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n    inputs: ['disabled', 'color'],\n    host: {\n        '[disabled]': 'disabled || null'\n    }\n})\nexport class McButton extends _McButtonMixinBase implements OnDestroy, CanDisable, CanColor {\n    constructor(elementRef: ElementRef, private _focusMonitor: FocusMonitor) {\n        super(elementRef);\n\n        this._focusMonitor.monitor(this._elementRef.nativeElement, true);\n    }\n\n    ngOnDestroy() {\n        this._focusMonitor.stopMonitoring(this._elementRef.nativeElement);\n    }\n\n    focus(): void {\n        this._getHostElement().focus();\n    }\n\n    _getHostElement() {\n        return this._elementRef.nativeElement;\n    }\n}\n\n\n@Component({\n    selector: 'a[mc-button], a[mc-xs-button], a[mc-sm-button], a[mc-lg-button], a[mc-xl-button]',\n    templateUrl: './button.component.html',\n    styleUrls: ['./button.css'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n    inputs: ['disabled', 'color'],\n    host: {\n        '[attr.tabindex]': 'disabled ? -1 : 0',\n        '[attr.disabled]': 'disabled || null',\n        '(click)': '_haltDisabledEvents($event)'\n    }\n})\nexport class McAnchor extends McButton {\n    constructor(focusMonitor: FocusMonitor, elementRef: ElementRef) {\n        super(elementRef, focusMonitor);\n    }\n\n    _haltDisabledEvents(event: Event) {\n        if (this.disabled) {\n            event.preventDefault();\n            event.stopImmediatePropagation();\n        }\n    }\n}\n\n\n@Component({\n    selector: 'button[mc-icon-button]',\n    templateUrl: './button.component.html',\n    styleUrls: ['./button.css'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n    inputs: ['disabled', 'color'],\n    host: {\n        '[attr.tabindex]': 'disabled ? -1 : 0',\n        '[attr.disabled]': 'disabled || null'\n    }\n})\nexport class McIconButton extends McButton {\n    constructor(focusMonitor: FocusMonitor, elementRef: ElementRef) {\n        super(elementRef, focusMonitor);\n    }\n\n    _haltDisabledEvents(event: Event) {\n        if (this.disabled) {\n            event.preventDefault();\n            event.stopImmediatePropagation();\n        }\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { A11yModule } from '@ptsecurity/cdk/a11y';\nimport { PlatformModule } from '@ptsecurity/cdk/platform';\n\nimport {\n    McButton,\n    McAnchor,\n    McIconButton,\n    McButtonCSSStyler,\n    McIconButtonCSSStyler\n} from './button.component';\n\n\n@NgModule({\n    imports: [\n        CommonModule,\n        A11yModule,\n        PlatformModule\n    ],\n    exports: [\n        McButton,\n        McAnchor,\n        McIconButton,\n        McButtonCSSStyler,\n        McIconButtonCSSStyler\n    ],\n    declarations: [\n        McButton,\n        McAnchor,\n        McIconButton,\n        McButtonCSSStyler,\n        McIconButtonCSSStyler\n    ]\n})\nexport class McButtonModule {}\n","import {\n    Output,\n    ChangeDetectionStrategy,\n    Component,\n    ElementRef, Input,\n    OnDestroy, EventEmitter,\n    ViewEncapsulation, HostBinding\n} from '@angular/core';\n\nimport { FocusMonitor } from '@ptsecurity/cdk/a11y';\nimport { SPACE } from '@ptsecurity/cdk/keycodes';\n\n\n@Component({\n    selector: 'mc-card',\n    templateUrl: './card.component.html',\n    styleUrls: ['./card.component.css'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n    inputs: ['color'],\n    host: {\n        class: 'mc-card',\n        '[class.mc-card_readonly]': 'readonly',\n        '[class.mc-card_selected]': 'selected',\n        '(keydown)': 'onKeyDown($event)',\n        '(click)': 'onClick($event)'\n    }\n})\nexport class McCard implements OnDestroy {\n    get tabIndex(): number | null {\n        return this.readonly ? null : this._tabIndex;\n    }\n\n    @HostBinding('attr.tabIndex')\n    @Input()\n    set tabIndex(value: number | null) {\n        this._tabIndex = value;\n    }\n\n    @Input()\n    readonly = false;\n\n    @Input()\n    selected = false;\n\n    @Output()\n    selectedChange = new EventEmitter<boolean>();\n\n    private _tabIndex: number | null = 0;\n\n    constructor(private _elementRef: ElementRef, private _focusMonitor: FocusMonitor) {\n        this._focusMonitor.monitor(this._elementRef.nativeElement, false);\n    }\n\n    ngOnDestroy() {\n        this._focusMonitor.stopMonitoring(this._elementRef.nativeElement);\n    }\n\n    focus(): void {\n        this.hostElement.focus();\n    }\n\n    onClick($event: MouseEvent) {\n        if (!this.readonly) {\n            $event.stopPropagation();\n\n            this.selectedChange.emit(!this.selected);\n        }\n    }\n\n    private get hostElement() {\n        return this._elementRef.nativeElement;\n    }\n\n    onKeyDown($event: KeyboardEvent) {\n        switch ($event.keyCode) {\n            case SPACE:\n                if (!this.readonly) {\n                    $event.preventDefault();\n                    this.selectedChange.emit(!this.selected);\n                }\n                break;\n            default:\n        }\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { A11yModule } from '@ptsecurity/cdk/a11y';\nimport { PlatformModule } from '@ptsecurity/cdk/platform';\n\nimport {\n    McCard\n} from './card.component';\n\n\n@NgModule({\n    imports: [\n        CommonModule,\n        A11yModule,\n        PlatformModule\n    ],\n    exports: [McCard],\n    declarations: [McCard]\n})\nexport class McCardModule {}\n","import { InjectionToken } from '@angular/core';\n\n\n/**\n * Checkbox click action when user click on input element.\n * noop: Do not toggle checked or indeterminate.\n * check: Only toggle checked status, ignore indeterminate.\n * check-indeterminate: Toggle checked status, set indeterminate to false. Default behavior.\n * undefined: Same as `check-indeterminate`.\n */\nexport type McCheckboxClickAction = 'noop' | 'check' | 'check-indeterminate' | undefined;\n\n/**\n * Injection token that can be used to specify the checkbox click behavior.\n */\nexport const MC_CHECKBOX_CLICK_ACTION =\n    new InjectionToken<McCheckboxClickAction>('mc-checkbox-click-action');\n","import {\n    AfterViewInit,\n    Attribute,\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    ElementRef,\n    EventEmitter,\n    forwardRef,\n    Inject,\n    Input,\n    OnDestroy,\n    Optional,\n    Output,\n    ViewChild,\n    ViewEncapsulation\n} from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { FocusMonitor, FocusOrigin } from '@ptsecurity/cdk/a11y';\nimport {\n    CanColor, CanColorCtor,\n    CanDisable, CanDisableCtor,\n    HasTabIndex, HasTabIndexCtor,\n    mixinColor,\n    mixinDisabled,\n    mixinTabIndex,\n    toBoolean\n} from '@ptsecurity/mosaic/core';\n\nimport { MC_CHECKBOX_CLICK_ACTION, McCheckboxClickAction } from './checkbox-config';\n\n\n// Increasing integer for generating unique ids for checkbox components.\nlet nextUniqueId = 0;\n\n/**\n * Provider Expression that allows mc-checkbox to register as a ControlValueAccessor.\n * This allows it to support [(ngModel)].\n * @docs-private\n */\nexport const MC_CHECKBOX_CONTROL_VALUE_ACCESSOR: any = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => McCheckbox),\n    multi: true\n};\n\n/**\n * Represents the different states that require custom transitions between them.\n * @docs-private\n */\nexport enum TransitionCheckState {\n    /** The initial state of the component before any user interaction. */\n    Init,\n    /** The state representing the component when it's becoming checked. */\n    Checked,\n    /** The state representing the component when it's becoming unchecked. */\n    Unchecked,\n    /** The state representing the component when it's becoming indeterminate. */\n    Indeterminate\n}\n\n/** Change event object emitted by McCheckbox. */\nexport class McCheckboxChange {\n    /** The source McCheckbox of the event. */\n    source: McCheckbox;\n    /** The new `checked` value of the checkbox. */\n    checked: boolean;\n}\n\n// Boilerplate for applying mixins to McCheckbox.\n/** @docs-private */\nexport class McCheckboxBase {\n    constructor(public _elementRef: ElementRef) {\n    }\n}\n\nexport const _McCheckboxMixinBase:\n    HasTabIndexCtor &\n    CanColorCtor &\n    CanDisableCtor &\n    typeof McCheckboxBase =\n        mixinTabIndex(mixinColor(mixinDisabled(McCheckboxBase)));\n\n\n/**\n * A mosaic checkbox component. Supports all of the functionality of an HTML5 checkbox,\n * and exposes a similar API. A McCheckbox can be either checked, unchecked, indeterminate, or\n * disabled. Note that all additional accessibility attributes are taken care of by the component,\n * so there is no need to provide them yourself. However, if you want to omit a label and still\n * have the checkbox be accessible, you may supply an [aria-label] input.\n */\n@Component({\n    selector: 'mc-checkbox',\n    templateUrl: 'checkbox.html',\n    styleUrls: ['checkbox.css'],\n    exportAs: 'mcCheckbox',\n    host: {\n        class: 'mc-checkbox',\n        '[id]': 'id',\n        '[attr.id]': 'id',\n        '[class.mc-indeterminate]': 'indeterminate',\n        '[class.mc-checked]': 'checked',\n        '[class.mc-disabled]': 'disabled',\n        '[class.mc-checkbox-label-before]': 'labelPosition == \"before\"'\n    },\n    providers: [MC_CHECKBOX_CONTROL_VALUE_ACCESSOR],\n    inputs: ['color', 'tabIndex'],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class McCheckbox extends _McCheckboxMixinBase implements ControlValueAccessor,\n    AfterViewInit, OnDestroy, CanColor, CanDisable, HasTabIndex {\n\n    /**\n     * Attached to the aria-label attribute of the host element. In most cases, arial-labelledby will\n     * take precedence so this may be omitted.\n     */\n    @Input('aria-label') ariaLabel: string = '';\n\n    /**\n     * Users can specify the `aria-labelledby` attribute which will be forwarded to the input element\n     */\n    @Input('aria-labelledby') ariaLabelledby: string | null = null;\n\n    private _uniqueId: string = `mc-checkbox-${++nextUniqueId}`;\n\n    /** A unique id for the checkbox input. If none is supplied, it will be auto-generated. */\n    @Input() id: string = this._uniqueId;\n\n    /** Returns the unique id for the visual hidden input. */\n    get inputId(): string {\n        return `${this.id || this._uniqueId}-input`;\n    }\n\n    /** Whether the checkbox is required. */\n    @Input()\n    get required(): boolean {\n        return this._required;\n    }\n\n    set required(value: boolean) {\n        this._required = toBoolean(value);\n    }\n\n    private _required: boolean;\n\n    /** Whether the label should appear after or before the checkbox. Defaults to 'after' */\n    @Input() labelPosition: 'before' | 'after' = 'after';\n\n    /** Name value will be applied to the input element if present */\n    @Input() name: string | null = null;\n\n    /** Event emitted when the checkbox's `checked` value changes. */\n    @Output() readonly change: EventEmitter<McCheckboxChange> =\n        new EventEmitter<McCheckboxChange>();\n\n    /** Event emitted when the checkbox's `indeterminate` value changes. */\n    @Output() readonly indeterminateChange: EventEmitter<boolean> = new EventEmitter<boolean>();\n\n    /** The value attribute of the native input element */\n    @Input() value: string;\n\n    /** The native `<input type=\"checkbox\">` element */\n    @ViewChild('input') _inputElement: ElementRef;\n\n    /**\n     * Called when the checkbox is blurred. Needed to properly implement ControlValueAccessor.\n     * @docs-private\n     */\n    _onTouched: () => any = () => {\n    }\n\n    private _currentAnimationClass: string = '';\n\n    private _currentCheckState: TransitionCheckState = TransitionCheckState.Init;\n\n    private _controlValueAccessorChangeFn: (value: any) => void = () => {\n    }\n\n    constructor(elementRef: ElementRef,\n                private _changeDetectorRef: ChangeDetectorRef,\n                private _focusMonitor: FocusMonitor,\n                @Attribute('tabindex') tabIndex: string,\n                @Optional() @Inject(MC_CHECKBOX_CLICK_ACTION)\n                private _clickAction: McCheckboxClickAction) {\n        super(elementRef);\n\n        this.tabIndex = parseInt(tabIndex) || 0;\n    }\n\n    ngAfterViewInit() {\n        this._focusMonitor\n            .monitor(this._inputElement.nativeElement)\n            .subscribe((focusOrigin) => this._onInputFocusChange(focusOrigin));\n    }\n\n    ngOnDestroy() {\n        this._focusMonitor.stopMonitoring(this._inputElement.nativeElement);\n    }\n\n    /**\n     * Whether the checkbox is checked.\n     */\n    @Input()\n    get checked(): boolean {\n        return this._checked;\n    }\n\n    set checked(value: boolean) {\n        if (value != this.checked) {\n            this._checked = value;\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n\n    private _checked: boolean = false;\n\n    /**\n     * Whether the checkbox is disabled. This fully overrides the implementation provided by\n     * mixinDisabled, but the mixin is still required because mixinTabIndex requires it.\n     */\n    @Input()\n    get disabled() {\n        return this._disabled;\n    }\n\n    set disabled(value: any) {\n        if (value != this.disabled) {\n            this._disabled = value;\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n\n    private _disabled: boolean = false;\n\n    /**\n     * Whether the checkbox is indeterminate. This is also known as \"mixed\" mode and can be used to\n     * represent a checkbox with three states, e.g. a checkbox that represents a nested list of\n     * checkable items. Note that whenever checkbox is manually clicked, indeterminate is immediately\n     * set to false.\n     */\n    @Input()\n    get indeterminate(): boolean {\n        return this._indeterminate;\n    }\n\n    set indeterminate(value: boolean) {\n        const changed = value != this._indeterminate;\n        this._indeterminate = value;\n\n        if (changed) {\n            if (this._indeterminate) {\n                this._transitionCheckState(TransitionCheckState.Indeterminate);\n            } else {\n                this._transitionCheckState(\n                    this.checked ? TransitionCheckState.Checked : TransitionCheckState.Unchecked);\n            }\n            this.indeterminateChange.emit(this._indeterminate);\n        }\n    }\n\n    private _indeterminate: boolean = false;\n\n    /** Method being called whenever the label text changes. */\n    _onLabelTextChange() {\n        // This method is getting called whenever the label of the checkbox changes.\n        // Since the checkbox uses the OnPush strategy we need to notify it about the change\n        // that has been recognized by the cdkObserveContent directive.\n        this._changeDetectorRef.markForCheck();\n    }\n\n    // Implemented as part of ControlValueAccessor.\n    writeValue(value: any) {\n        this.checked = !!value;\n    }\n\n    // Implemented as part of ControlValueAccessor.\n    registerOnChange(fn: (value: any) => void) {\n        this._controlValueAccessorChangeFn = fn;\n    }\n\n    // Implemented as part of ControlValueAccessor.\n    registerOnTouched(fn: any) {\n        this._onTouched = fn;\n    }\n\n    // Implemented as part of ControlValueAccessor.\n    setDisabledState(isDisabled: boolean) {\n        this.disabled = isDisabled;\n    }\n\n    _getAriaChecked(): 'true' | 'false' | 'mixed' {\n        return this.checked ? 'true' : (this.indeterminate ? 'mixed' : 'false');\n    }\n\n    private _transitionCheckState(newState: TransitionCheckState) {\n        const oldState = this._currentCheckState;\n        const element: HTMLElement = this._elementRef.nativeElement;\n\n        if (oldState === newState) {\n            return;\n        }\n        if (this._currentAnimationClass.length > 0) {\n            element.classList.remove(this._currentAnimationClass);\n        }\n\n        this._currentCheckState = newState;\n\n        if (this._currentAnimationClass.length > 0) {\n            element.classList.add(this._currentAnimationClass);\n        }\n    }\n\n    private _emitChangeEvent() {\n        const event = new McCheckboxChange();\n        event.source = this;\n        event.checked = this.checked;\n\n        this._controlValueAccessorChangeFn(this.checked);\n        this.change.emit(event);\n    }\n\n    /** Function is called whenever the focus changes for the input element. */\n    private _onInputFocusChange(focusOrigin: FocusOrigin) {\n        if (focusOrigin) {\n            this._onTouched();\n        }\n    }\n\n    /** Toggles the `checked` state of the checkbox. */\n    toggle(): void {\n        this.checked = !this.checked;\n    }\n\n    /**\n     * Event handler for checkbox input element.\n     * Toggles checked state if element is not disabled.\n     * Do not toggle on (change) event since IE doesn't fire change event when\n     *   indeterminate checkbox is clicked.\n     * @param event\n     */\n    _onInputClick(event: Event) {\n        // We have to stop propagation for click events on the visual hidden input element.\n        // By default, when a user clicks on a label element, a generated click event will be\n        // dispatched on the associated input element. Since we are using a label element as our\n        // root container, the click event on the `checkbox` will be executed twice.\n        // The real click event will bubble up, and the generated click event also tries to bubble up.\n        // This will lead to multiple click events.\n        // Preventing bubbling for the second event will solve that issue.\n        event.stopPropagation();\n\n        // If resetIndeterminate is false, and the current state is indeterminate, do nothing on click\n        if (!this.disabled && this._clickAction !== 'noop') {\n            // When user manually click on the checkbox, `indeterminate` is set to false.\n            if (this.indeterminate && this._clickAction !== 'check') {\n\n                Promise.resolve().then(() => {\n                    this._indeterminate = false;\n                    this.indeterminateChange.emit(this._indeterminate);\n                });\n            }\n\n            this.toggle();\n            this._transitionCheckState(\n                this._checked ? TransitionCheckState.Checked : TransitionCheckState.Unchecked);\n\n            // Emit our custom change event if the native input emitted one.\n            // It is important to only emit it, if the native input triggered one, because\n            // we don't want to trigger a change event, when the `checked` variable changes for example.\n            this._emitChangeEvent();\n        } else if (!this.disabled && this._clickAction === 'noop') {\n            // Reset native input when clicked with noop. The native checkbox becomes checked after\n            // click, reset it to be align with `checked` value of `mc-checkbox`.\n            this._inputElement.nativeElement.checked = this.checked;\n            this._inputElement.nativeElement.indeterminate = this.indeterminate;\n        }\n    }\n\n    /** Focuses the checkbox. */\n    focus(): void {\n        this._focusMonitor.focusVia(this._inputElement.nativeElement, 'keyboard');\n    }\n\n    _onInteractionEvent(event: Event) {\n        // We always have to stop propagation on the change event.\n        // Otherwise the change event, from the input element, will bubble up and\n        // emit its event object to the `change` output.\n        event.stopPropagation();\n    }\n}\n","import {\n    Directive,\n    forwardRef,\n    Provider\n} from '@angular/core';\nimport {\n    CheckboxRequiredValidator,\n    NG_VALIDATORS\n} from '@angular/forms';\n\n\nexport const MC_CHECKBOX_REQUIRED_VALIDATOR: Provider = {\n    provide: NG_VALIDATORS,\n    useExisting: forwardRef(() => McCheckboxRequiredValidator),\n    multi: true\n};\n\n/**\n * Validator for Mosaic checkbox's required attribute in template-driven checkbox.\n * Current CheckboxRequiredValidator only work with `input type=checkbox` and does not\n * work with `mc-checkbox`.\n */\n@Directive({\n    selector: `mc-checkbox[required][formControlName],\n             mc-checkbox[required][formControl], mc-checkbox[required][ngModel]`,\n    providers: [MC_CHECKBOX_REQUIRED_VALIDATOR],\n    host: { '[attr.required]': 'required ? \"\" : null' }\n})\nexport class McCheckboxRequiredValidator extends CheckboxRequiredValidator {\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { McCheckbox } from './checkbox';\nimport { McCheckboxRequiredValidator } from './checkbox-required-validator';\n\n\n@NgModule({\n    imports: [CommonModule],\n    exports: [McCheckbox, McCheckboxRequiredValidator],\n    declarations: [McCheckbox, McCheckboxRequiredValidator]\n})\nexport class McCheckboxModule {\n}\n","import { ChangeDetectionStrategy, Component, Input, ViewEncapsulation } from '@angular/core';\nimport { coerceBooleanProperty } from '@ptsecurity/cdk/coercion';\n\n\n@Component({\n    selector: 'mc-divider',\n    host: {\n        class: 'mc-divider',\n        role: 'separator',\n        '[attr.aria-orientation]': 'vertical ? \"vertical\" : \"horizontal\"',\n        '[class.mc-divider-vertical]': 'vertical',\n        '[class.mc-divider-inset]': 'inset'\n    },\n    template: '',\n    styleUrls: ['divider.css'],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    preserveWhitespaces: false\n})\nexport class McDivider {\n    // Whether the divider is vertically aligned.\n    @Input()\n    get vertical(): boolean {\n        return this._vertical;\n    }\n\n    set vertical(value: boolean) {\n        this._vertical = coerceBooleanProperty(value);\n    }\n\n    private _vertical: boolean = false;\n\n    // Whether the divider is an inset divider.\n    @Input()\n    get inset(): boolean {\n        return this._inset;\n    }\n\n    set inset(value: boolean) {\n        this._inset = coerceBooleanProperty(value);\n    }\n\n    private _inset: boolean = false;\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { McDivider } from './divider.component';\n\n\n@NgModule({\n    imports: [CommonModule],\n    exports: [McDivider],\n    declarations: [McDivider]\n})\nexport class McDividerModule {\n}\n","import { DOCUMENT } from '@angular/common';\nimport {\n    Directive,\n    TemplateRef,\n    ComponentFactoryResolver,\n    ApplicationRef,\n    Injector,\n    ViewContainerRef,\n    Inject,\n    OnDestroy\n} from '@angular/core';\nimport { TemplatePortal, DomPortalOutlet } from '@ptsecurity/cdk/portal';\nimport { Subject } from 'rxjs';\n\n\n/**\n * Dropdown content that will be rendered lazily once the dropdown is opened.\n */\n@Directive({\n    selector: 'ng-template[mcDropdownContent]'\n})\nexport class McDropdownContent implements OnDestroy {\n\n    /** Emits when the dropdown content has been attached. */\n    _attached = new Subject<void>();\n    private _portal: TemplatePortal;\n    private _outlet: DomPortalOutlet;\n\n    constructor(\n        private _template: TemplateRef<any>,\n        private _componentFactoryResolver: ComponentFactoryResolver,\n        private _appRef: ApplicationRef,\n        private _injector: Injector,\n        private _viewContainerRef: ViewContainerRef,\n        @Inject(DOCUMENT) private _document: any) {}\n\n    /**\n     * Attaches the content with a particular context.\n     * @docs-private\n     */\n    attach(context: any = {}) {\n        if (!this._portal) {\n            this._portal = new TemplatePortal(this._template, this._viewContainerRef);\n        }\n\n        this.detach();\n\n        if (!this._outlet) {\n            this._outlet = new DomPortalOutlet(this._document.createElement('div'),\n                this._componentFactoryResolver, this._appRef, this._injector);\n        }\n\n        const element: HTMLElement = this._template.elementRef.nativeElement;\n\n        // Because we support opening the same dropdown from different triggers (which in turn have their\n        // own `OverlayRef` panel), we have to re-insert the host element every time, otherwise we\n        // risk it staying attached to a pane that's no longer in the DOM.\n        element.parentNode!.insertBefore(this._outlet.outletElement, element);\n        this._portal.attach(this._outlet, context);\n        this._attached.next();\n    }\n\n    /**\n     * Detaches the content.\n     * @docs-private\n     */\n    detach() {\n        if (this._portal.isAttached) {\n            this._portal.detach();\n        }\n    }\n\n    ngOnDestroy() {\n        if (this._outlet) {\n            this._outlet.dispose();\n        }\n    }\n}\n","import { EventEmitter, TemplateRef, InjectionToken } from '@angular/core';\nimport { FocusOrigin } from '@ptsecurity/cdk/a11y';\nimport { Direction } from '@ptsecurity/cdk/bidi';\n\nimport { McDropdownContent } from './dropdown-content';\nimport { DropdownPositionX, DropdownPositionY } from './dropdown-positions';\n\n\n/**\n * Injection token used to provide the parent dropdown to dropdown-specific components.\n * @docs-private\n */\nexport const MC_DROPDOWN_PANEL = new InjectionToken<McDropdownPanel>('MC_DROPDOWN_PANEL');\n\n/**\n * Interface for a custom dropdown panel that can be used with `mcDropdownTriggerFor`.\n * @docs-private\n */\n// tslint:disable-next-line:interface-name\nexport interface McDropdownPanel<T = any> {\n    xPosition: DropdownPositionX;\n    yPosition: DropdownPositionY;\n    overlapTrigger: boolean;\n    templateRef: TemplateRef<any>;\n    closed: EventEmitter<void | 'click' | 'keydown' | 'tab'>;\n    direction?: Direction;\n    lazyContent?: McDropdownContent;\n    backdropClass?: string;\n    hasBackdrop?: boolean;\n    focusFirstItem(origin?: FocusOrigin): void;\n    resetActiveItem(): void;\n    setPositionClasses?(x: DropdownPositionX, y: DropdownPositionY): void;\n    addItem?(item: T): void;\n    removeItem?(item: T): void;\n}\n","import { DOCUMENT } from '@angular/common';\nimport {\n    ChangeDetectionStrategy,\n    Component,\n    ElementRef,\n    OnDestroy,\n    ViewEncapsulation,\n    Inject,\n    Optional\n} from '@angular/core';\nimport { IFocusableOption, FocusMonitor, FocusOrigin } from '@ptsecurity/cdk/a11y';\nimport {\n    CanDisable, CanDisableCtor,\n    mixinDisabled\n} from '@ptsecurity/mosaic/core';\n\nimport { MC_DROPDOWN_PANEL, McDropdownPanel } from './dropdown-panel';\n\n\n// Boilerplate for applying mixins to McDropdownItem.\n/** @docs-private */\nexport class McDropdownItemBase {}\nexport const _McDropdownItemMixinBase: CanDisableCtor & typeof McDropdownItemBase =\n    mixinDisabled(McDropdownItemBase);\n\n/**\n * This directive is intended to be used inside an mc-dropdown tag.\n * It exists mostly to set the role attribute.\n */\n@Component({\n    selector: 'mc-dropdown-item, [mc-dropdown-item]',\n    exportAs: 'mcDropdownItem',\n    inputs: ['disabled'],\n    host: {\n        role: 'dropdown-item',\n        class: 'mc-dropdown__item',\n        '[attr.tabindex]': '_getTabIndex()',\n        '[attr.disabled]': 'disabled || null',\n        '(click)': '_checkDisabled($event)'\n    },\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n    template: `<ng-content></ng-content>`\n})\nexport class McDropdownItem extends _McDropdownItemMixinBase\n    implements IFocusableOption, CanDisable, OnDestroy {\n\n    private _document: Document;\n\n    constructor(\n        private _elementRef: ElementRef<HTMLElement>,\n        @Inject(DOCUMENT) document: any,\n        private _focusMonitor: FocusMonitor,\n        @Inject(MC_DROPDOWN_PANEL) @Optional() private _parentDropdownPanel?: McDropdownPanel<McDropdownItem>) {\n        super();\n\n        if (_focusMonitor) {\n            // Start monitoring the element so it gets the appropriate focused classes. We want\n            // to show the focus style for dropdown items only when the focus was not caused by a\n            // mouse or touch interaction.\n            _focusMonitor.monitor(this._elementRef.nativeElement, false);\n        }\n\n        if (_parentDropdownPanel && _parentDropdownPanel.addItem) {\n            _parentDropdownPanel.addItem(this);\n        }\n\n        this._document = document;\n    }\n\n    /** Focuses the dropdown item. */\n    focus(origin: FocusOrigin = 'program'): void {\n        if (this._focusMonitor) {\n            this._focusMonitor.focusVia(this._getHostElement(), origin);\n        } else {\n            this._getHostElement().focus();\n        }\n    }\n\n    ngOnDestroy() {\n        if (this._focusMonitor) {\n            this._focusMonitor.stopMonitoring(this._elementRef.nativeElement);\n        }\n\n        if (this._parentDropdownPanel && this._parentDropdownPanel.removeItem) {\n            this._parentDropdownPanel.removeItem(this);\n        }\n    }\n\n    /** Used to set the `tabindex`. */\n    _getTabIndex(): string {\n        return this.disabled ? '-1' : '0';\n    }\n\n    /** Returns the host DOM element. */\n    _getHostElement(): HTMLElement {\n        return this._elementRef.nativeElement;\n    }\n\n    /** Prevents the default element actions if it is disabled. */\n    _checkDisabled(event: Event): void {\n        if (this.disabled) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n    }\n\n    /** Gets the label to be used when determining whether the option should be focused. */\n    getLabel(): string {\n        const element: HTMLElement = this._elementRef.nativeElement;\n        // tslint:disable-next-line:no-magic-numbers\n        const textNodeType = this._document ? this._document.TEXT_NODE : 3;\n        let output = '';\n\n        if (element.childNodes) {\n            const length = element.childNodes.length;\n\n            // Go through all the top-level text nodes and extract their text.\n            // We skip anything that's not a text node to prevent the text from\n            // being thrown off by something like an icon.\n            for (let i = 0; i < length; i++) {\n                if (element.childNodes[i].nodeType === textNodeType) {\n                    output += element.childNodes[i].textContent;\n                }\n            }\n        }\n\n        return output.trim();\n    }\n}\n","import {\n    trigger,\n    state,\n    style,\n    animate,\n    transition,\n    query,\n    group,\n    AnimationTriggerMetadata\n} from '@angular/animations';\n\n\n/**\n * Animations used by the mc-dropdown component.\n * Animation duration and timing values are based on:\n * https://material.io/guidelines/components/menus.html#menus-usage\n * @docs-private\n */\nexport const mcDropdownAnimations: {\n    readonly transformDropdown: AnimationTriggerMetadata;\n    readonly fadeInItems: AnimationTriggerMetadata;\n} = {\n    /**\n     * This animation controls the dropdown panel's entry and exit from the page.\n     *\n     * When the dropdown panel is added to the DOM, it scales in and fades in its border.\n     *\n     * When the dropdown panel is removed from the DOM, it simply fades out after a brief\n     * delay to display the ripple.\n     */\n    transformDropdown: trigger('transformDropdown', [\n        state('void', style({\n            opacity: 0,\n            transform: 'scale(0.8)'\n        })),\n        transition('void => enter', group([\n            query('.mc-dropdown__content', animate('50ms linear', style({opacity: 1}))),\n            animate('50ms cubic-bezier(0, 0, 0.2, 1)', style({transform: 'scale(1)'}))\n        ])),\n        transition('* => void', animate('50ms 25ms linear', style({opacity: 0})))\n    ]),\n\n\n    /**\n     * This animation fades in the background color and content of the dropdown panel\n     * after its containing element is scaled in.\n     */\n    fadeInItems: trigger('fadeInItems', [\n        // now. Remove next time we do breaking changes.\n        state('showing', style({opacity: 1})),\n        transition('void => *', [\n            style({opacity: 0}),\n            animate('200ms 60ms cubic-bezier(0.55, 0, 0.55, 0.2)')\n        ])\n    ])\n};\n\nexport const fadeInItems = mcDropdownAnimations.fadeInItems;\n\nexport const transformDropdown = mcDropdownAnimations.transformDropdown;\n","import { AnimationEvent } from '@angular/animations';\nimport {\n    AfterContentInit,\n    ChangeDetectionStrategy,\n    Component,\n    ContentChild,\n    ContentChildren,\n    ElementRef,\n    EventEmitter,\n    Inject,\n    InjectionToken,\n    Input,\n    NgZone,\n    OnDestroy,\n    Output,\n    TemplateRef,\n    QueryList,\n    ViewChild,\n    ViewEncapsulation,\n    OnInit\n} from '@angular/core';\nimport { FocusKeyManager, FocusOrigin } from '@ptsecurity/cdk/a11y';\nimport { Direction } from '@ptsecurity/cdk/bidi';\nimport { coerceBooleanProperty } from '@ptsecurity/cdk/coercion';\nimport { ESCAPE, DOWN_ARROW, UP_ARROW } from '@ptsecurity/cdk/keycodes';\nimport { Subject, Subscription } from 'rxjs';\nimport { take } from 'rxjs/operators';\n\nimport { mcDropdownAnimations } from './dropdown-animations';\nimport { McDropdownContent } from './dropdown-content';\nimport { throwMcDropdownInvalidPositionX, throwMcDropdownInvalidPositionY } from './dropdown-errors';\nimport { McDropdownItem } from './dropdown-item';\nimport { MC_DROPDOWN_PANEL, McDropdownPanel } from './dropdown-panel';\nimport { DropdownPositionX, DropdownPositionY } from './dropdown-positions';\n\n\n/** Default `mc-dropdown` options that can be overridden. */\n// tslint:disable-next-line:interface-name\nexport interface McDropdownDefaultOptions {\n    /** The x-axis position of the dropdown. */\n    xPosition: DropdownPositionX;\n\n    /** The y-axis position of the dropdown. */\n    yPosition: DropdownPositionY;\n\n    /** Whether the dropdown should overlap the dropdown trigger. */\n    overlapTrigger: boolean;\n\n    /** Class to be applied to the dropdown's backdrop. */\n    backdropClass: string;\n\n    /** Whether the dropdown has a backdrop. */\n    hasBackdrop?: boolean;\n}\n\n/** Injection token to be used to override the default options for `mc-dropdown`. */\nexport const MC_DROPDOWN_DEFAULT_OPTIONS =\n    new InjectionToken<McDropdownDefaultOptions>('mc-dropdown-default-options', {\n        providedIn: 'root',\n        factory: MC_DROPDOWN_DEFAULT_OPTIONS_FACTORY\n    });\n\n/** @docs-private */\nexport function MC_DROPDOWN_DEFAULT_OPTIONS_FACTORY(): McDropdownDefaultOptions {\n    return {\n        overlapTrigger: false,\n        xPosition: 'after',\n        yPosition: 'below',\n        backdropClass: 'cdk-overlay-transparent-backdrop'\n    };\n}\n\n@Component({\n    selector: 'mc-dropdown',\n    templateUrl: 'dropdown.html',\n    styleUrls: ['dropdown.css'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n    exportAs: 'mcDropdown',\n    animations: [\n        mcDropdownAnimations.transformDropdown,\n        mcDropdownAnimations.fadeInItems\n    ],\n    providers: [\n        {provide: MC_DROPDOWN_PANEL, useExisting: McDropdown}\n    ]\n})\nexport class McDropdown implements AfterContentInit, McDropdownPanel<McDropdownItem>, OnInit, OnDestroy {\n\n    /** Position of the dropdown in the X axis. */\n    @Input()\n    get xPosition(): DropdownPositionX { return this._xPosition; }\n    set xPosition(value: DropdownPositionX) {\n        if (value !== 'before' && value !== 'after') {\n            throwMcDropdownInvalidPositionX();\n        }\n        this._xPosition = value;\n        this.setPositionClasses();\n    }\n\n    /** Position of the dropdown in the Y axis. */\n    @Input()\n    get yPosition(): DropdownPositionY { return this._yPosition; }\n    set yPosition(value: DropdownPositionY) {\n        if (value !== 'above' && value !== 'below') {\n            throwMcDropdownInvalidPositionY();\n        }\n        this._yPosition = value;\n        this.setPositionClasses();\n    }\n\n    /** Whether the dropdown should overlap its trigger. */\n    @Input()\n    get overlapTrigger(): boolean { return this._overlapTrigger; }\n    set overlapTrigger(value: boolean) {\n        this._overlapTrigger = coerceBooleanProperty(value);\n    }\n\n    /** Whether the dropdown has a backdrop. */\n    @Input()\n    get hasBackdrop(): boolean | undefined { return this._hasBackdrop; }\n    set hasBackdrop(value: boolean | undefined) {\n        this._hasBackdrop = coerceBooleanProperty(value);\n    }\n\n    /**\n     * This method takes classes set on the host mc-dropdown element and applies them on the\n     * dropdown template that displays in the overlay container.  Otherwise, it's difficult\n     * to style the containing dropdown from outside the component.\n     * @param classes list of class names\n     */\n    @Input('class')\n    set panelClass(classes: string) {\n        if (classes && classes.length) {\n            this._classList = classes.split(' ').reduce((obj: any, className: string) => {\n                obj[className] = true;\n\n                return obj;\n            }, {});\n\n            this._elementRef.nativeElement.className = '';\n        }\n    }\n\n    /** Config object to be passed into the dropdown's ngClass */\n    _classList: {[key: string]: boolean} = {};\n\n    /** Current state of the panel animation. */\n    _panelAnimationState: 'void' | 'enter' = 'void';\n\n    /** Emits whenever an animation on the dropdown completes. */\n    _animationDone = new Subject<AnimationEvent>();\n\n    /** Whether the dropdown is animating. */\n    _isAnimating: boolean;\n\n    /** Layout direction of the dropdown. */\n    direction: Direction;\n\n    /** Class to be added to the backdrop element. */\n    @Input() backdropClass: string = this._defaultOptions.backdropClass;\n\n    /** @docs-private */\n    @ViewChild(TemplateRef) templateRef: TemplateRef<any>;\n\n    /**\n     * List of the items inside of a dropdown.\n     */\n    @ContentChildren(McDropdownItem) items: QueryList<McDropdownItem>;\n\n    /**\n     * Dropdown content that will be rendered lazily.\n     * @docs-private\n     */\n    @ContentChild(McDropdownContent) lazyContent: McDropdownContent;\n\n    /** Event emitted when the dropdown is closed. */\n    @Output() readonly closed: EventEmitter<void | 'click' | 'keydown' | 'tab'> =\n        new EventEmitter<void | 'click' | 'keydown' | 'tab'>();\n\n    private _keyManager: FocusKeyManager<McDropdownItem>;\n    private _xPosition: DropdownPositionX = this._defaultOptions.xPosition;\n    private _yPosition: DropdownPositionY = this._defaultOptions.yPosition;\n\n    /** Dropdown items inside the current dropdown. */\n    private _items: McDropdownItem[] = [];\n\n    /** Emits whenever the amount of dropdown items changes. */\n    private _itemChanges = new Subject<McDropdownItem[]>();\n\n    /** Subscription to tab events on the dropdown panel */\n    private _tabSubscription = Subscription.EMPTY;\n    private _overlapTrigger: boolean = this._defaultOptions.overlapTrigger;\n    private _hasBackdrop: boolean | undefined = this._defaultOptions.hasBackdrop;\n\n    constructor(\n        private _elementRef: ElementRef<HTMLElement>,\n        private _ngZone: NgZone,\n        @Inject(MC_DROPDOWN_DEFAULT_OPTIONS) private _defaultOptions: McDropdownDefaultOptions) { }\n\n    ngOnInit() {\n        this.setPositionClasses();\n    }\n\n    ngAfterContentInit() {\n        this._keyManager = new FocusKeyManager<McDropdownItem>(this.items).withWrap().withTypeAhead();\n        this._tabSubscription = this._keyManager.tabOut.subscribe(() => this.closed.emit('tab'));\n    }\n\n    ngOnDestroy() {\n        this._tabSubscription.unsubscribe();\n        this.closed.complete();\n    }\n\n    /** Handle a keyboard event from the dropdown, delegating to the appropriate action. */\n    _handleKeydown(event: KeyboardEvent) {\n        // tslint:disable-next-line:deprecation\n        const keyCode = event.keyCode;\n\n        switch (keyCode) {\n            case ESCAPE:\n                this.closed.emit('keydown');\n                break;\n            case UP_ARROW:\n            case DOWN_ARROW:\n                this._keyManager.setFocusOrigin('keyboard');\n                this._keyManager.onKeydown(event);\n                break;\n              default:\n                this._keyManager.onKeydown(event);\n        }\n    }\n\n    /**\n     * Focus the first item in the dropdown.\n     * @param origin Action from which the focus originated. Used to set the correct styling.\n     */\n    focusFirstItem(origin: FocusOrigin = 'program'): void {\n        // When the content is rendered lazily, it takes a bit before the items are inside the DOM.\n        if (this.lazyContent) {\n            this._ngZone.onStable.asObservable()\n                .pipe(take(1))\n                .subscribe(() => this._keyManager.setFocusOrigin(origin).setFirstItemActive());\n        } else {\n            this._keyManager.setFocusOrigin(origin).setFirstItemActive();\n        }\n    }\n\n    /**\n     * Resets the active item in the dropdown. This is used when the dropdown is opened, allowing\n     * the user to start from the first option when pressing the down arrow.\n     */\n    resetActiveItem() {\n        this._keyManager.setActiveItem(-1);\n    }\n\n    /**\n     * Registers a dropdown item with the dropdown.\n     * @docs-private\n     */\n    addItem(item: McDropdownItem) {\n        // We register the items through this method, rather than picking them up through\n        // `ContentChildren`, because we need the items to be picked up by their closest\n        // `mc-dropdown` ancestor. If we used `@ContentChildren(McDropdownItem, {descendants: true})`,\n        // all descendant items will bleed into the top-level dropdown in the case where the consumer\n        // has `mc-dropdown` instances nested inside each other.\n        if (this._items.indexOf(item) === -1) {\n            this._items.push(item);\n            this._itemChanges.next(this._items);\n        }\n    }\n\n    /**\n     * Removes an item from the dropdown.\n     * @docs-private\n     */\n    removeItem(item: McDropdownItem) {\n        const index = this._items.indexOf(item);\n\n        if (this._items.indexOf(item) > -1) {\n            this._items.splice(index, 1);\n            this._itemChanges.next(this._items);\n        }\n    }\n\n    /**\n     * Adds classes to the dropdown panel based on its position. Can be used by\n     * consumers to add specific styling based on the position.\n     * @param posX Position of the dropdown along the x axis.\n     * @param posY Position of the dropdown along the y axis.\n     * @docs-private\n     */\n    setPositionClasses(posX: DropdownPositionX = this.xPosition, posY: DropdownPositionY = this.yPosition) {\n        const classes = this._classList;\n        classes['mc-dropdown-before'] = posX === 'before';\n        classes['mc-dropdown-after'] = posX === 'after';\n        classes['mc-dropdown-above'] = posY === 'above';\n        classes['mc-dropdown-below'] = posY === 'below';\n    }\n\n    /** Starts the enter animation. */\n    _startAnimation() {\n        this._panelAnimationState = 'enter';\n    }\n\n    /** Resets the panel animation to its initial state. */\n    _resetAnimation() {\n        this._panelAnimationState = 'void';\n    }\n\n    /** Callback that is invoked when the panel animation completes. */\n    _onAnimationDone(event: AnimationEvent) {\n        this._animationDone.next(event);\n        this._isAnimating = false;\n\n        // Scroll the content element to the top once the animation is done. This is necessary, because\n        // we move focus to the first item while it's still being animated, which can throw the browser\n        // off when it determines the scroll position. Alternatively we can move focus when the\n        // animation is done, however moving focus asynchronously will interrupt screen readers\n        // which are in the process of reading out the dropdown already. We take the `element` from\n        // the `event` since we can't use a `ViewChild` to access the pane.\n        if (event.toState === 'enter' && this._keyManager.activeItemIndex === 0) {\n            event.element.scrollTop = 0;\n        }\n    }\n}\n","import {\n    AfterContentInit,\n    Directive,\n    ElementRef,\n    EventEmitter,\n    Inject,\n    InjectionToken,\n    Input,\n    OnDestroy, OnInit,\n    Optional,\n    Output,\n    ViewContainerRef\n} from '@angular/core';\nimport { FocusMonitor, FocusOrigin } from '@ptsecurity/cdk/a11y';\nimport { Direction, Directionality } from '@ptsecurity/cdk/bidi';\nimport {\n    FlexibleConnectedPositionStrategy,\n    HorizontalConnectionPos,\n    Overlay,\n    OverlayConfig,\n    OverlayRef,\n    VerticalConnectionPos,\n    IScrollStrategy\n} from '@ptsecurity/cdk/overlay';\nimport { TemplatePortal } from '@ptsecurity/cdk/portal';\nimport { merge, Subscription } from 'rxjs';\nimport { filter, take, takeUntil } from 'rxjs/operators';\n\nimport { throwMcDropdownMissingError } from './dropdown-errors';\nimport { McDropdownPanel } from './dropdown-panel';\nimport { McDropdown } from './dropdown.component';\n\n\n/** Injection token that determines the scroll handling while the dropdown is open. */\nexport const MC_DROPDOWN_SCROLL_STRATEGY =\n    new InjectionToken<() => IScrollStrategy>('mc-dropdown-scroll-strategy');\n\n/** @docs-private */\nexport function MC_DROPDOWN_SCROLL_STRATEGY_FACTORY(overlay: Overlay): () => IScrollStrategy {\n    return () => overlay.scrollStrategies.reposition();\n}\n\n/** @docs-private */\nexport const MC_DROPDOWN_SCROLL_STRATEGY_FACTORY_PROVIDER = {\n    provide: MC_DROPDOWN_SCROLL_STRATEGY,\n    deps: [Overlay],\n    useFactory: MC_DROPDOWN_SCROLL_STRATEGY_FACTORY\n};\n\n/**\n * This directive is intended to be used in conjunction with an mc-dropdown tag.  It is\n * responsible for toggling the display of the provided dropdown instance.\n */\n@Directive({\n    selector: `[mcDropdownTriggerFor]`,\n    host: {\n        '(touchstart)': '_openedBy = \"touch\"',\n        '(click)': 'toggle()'\n    },\n    exportAs: 'mcDropdownTrigger'\n})\nexport class McDropdownTrigger implements OnInit, AfterContentInit, OnDestroy {\n\n    /** Whether the dropdown is open. */\n    get opened(): boolean {\n        return this._opened;\n    }\n\n    /** The text direction of the containing app. */\n    get dir(): Direction {\n        return this._dir && this._dir.value === 'rtl' ? 'rtl' : 'ltr';\n    }\n\n    // Tracking input type is necessary so it's possible to only auto-focus\n    // the first item of the list when the dropdown is opened via the keyboard\n    _openedBy: 'mouse' | 'touch' | null = null;\n\n    /** References the dropdown instance that the trigger is associated with. */\n    @Input('mcDropdownTriggerFor') dropdown: McDropdownPanel;\n\n    /** Data to be passed along to any lazily-rendered content. */\n    @Input('mcDropdownTriggerData') data: any;\n\n    /** Event emitted when the associated dropdown is opened. */\n    @Output() readonly dropdownOpened: EventEmitter<void> = new EventEmitter<void>();\n\n    /** Event emitted when the associated dropdown is closed. */\n    @Output() readonly dropdownClosed: EventEmitter<void> = new EventEmitter<void>();\n\n    private _portal: TemplatePortal;\n    private _overlayRef: OverlayRef | null = null;\n    private _opened: boolean = false;\n    private _closeSubscription = Subscription.EMPTY;\n    private _hoverSubscription = Subscription.EMPTY;\n\n    constructor(private _overlay: Overlay,\n                private _element: ElementRef<HTMLElement>,\n                private _viewContainerRef: ViewContainerRef,\n                @Inject(MC_DROPDOWN_SCROLL_STRATEGY) private _scrollStrategy: any,\n                @Optional() private _dir: Directionality,\n                private _focusMonitor?: FocusMonitor) {}\n\n    ngOnInit(): void {\n        this.dropdown.closed = this.dropdown.closed || new EventEmitter<void | 'click' | 'keydown' | 'tab'>();\n    }\n\n    ngAfterContentInit() {\n        this._check();\n\n        this.dropdown.closed.asObservable().subscribe(() => {\n            this._destroy();\n        });\n    }\n\n    ngOnDestroy() {\n        if (this._overlayRef) {\n            this._overlayRef.dispose();\n            this._overlayRef = null;\n        }\n\n        this._cleanUpSubscriptions();\n    }\n\n    /** Toggles the dropdown between the open and closed states. */\n    toggle(): void {\n        // tslint:disable-next-line:no-void-expression\n        return this._opened ? this.close() : this.open();\n    }\n\n    /** Opens the dropdown. */\n    open(): void {\n        if (this._opened) {\n            return;\n        }\n\n        this._check();\n\n        const overlayRef = this._createOverlay();\n        this._setPosition(overlayRef.getConfig().positionStrategy as FlexibleConnectedPositionStrategy);\n        overlayRef.attach(this._portal);\n\n        if (this.dropdown.lazyContent) {\n            this.dropdown.lazyContent.attach(this.data);\n        }\n\n        this._closeSubscription = this._closingActions().subscribe(() => this.close());\n        this._init();\n\n        if (this.dropdown instanceof McDropdown) {\n            this.dropdown._startAnimation();\n        }\n    }\n\n    /** Closes the dropdown. */\n    close(): void {\n        this.dropdown.closed.emit();\n    }\n\n    /**\n     * Focuses the dropdown trigger.\n     * @param origin Source of the dropdown trigger's focus.\n     */\n    focus(origin: FocusOrigin = 'program') {\n        if (this._focusMonitor) {\n            this._focusMonitor.focusVia(this._element.nativeElement, origin);\n        } else {\n            this._element.nativeElement.focus();\n        }\n    }\n\n    /** Closes the dropdown and does the necessary cleanup. */\n    private _destroy() {\n        if (!this._overlayRef || !this.opened) {\n            return;\n        }\n\n        const dropdown = this.dropdown;\n\n        this._closeSubscription.unsubscribe();\n        this._overlayRef.detach();\n\n        if (dropdown instanceof McDropdown) {\n            dropdown._resetAnimation();\n\n            if (dropdown.lazyContent) {\n                // Wait for the exit animation to finish before detaching the content.\n                dropdown._animationDone\n                    .pipe(\n                        filter((event) => event.toState === 'void'),\n                        take(1),\n                        // Interrupt if the content got re-attached.\n                        takeUntil(dropdown.lazyContent._attached)\n                    )\n                    .subscribe(() => dropdown.lazyContent.detach(), undefined, () => {\n                        // No matter whether the content got re-attached, reset the dropdown.\n                        this._reset();\n                    });\n            } else {\n                this._reset();\n            }\n        } else {\n            this._reset();\n\n            if (dropdown.lazyContent) {\n                dropdown.lazyContent.detach();\n            }\n        }\n    }\n\n    /**\n     * This method sets the dropdown state to open and focuses the first item if\n     * the dropdown was opened via the keyboard.\n     */\n    private _init(): void {\n        this.dropdown.direction = this.dir;\n        this._setIsOpened(true);\n        this.dropdown.focusFirstItem(this._openedBy || 'program');\n    }\n\n    /**\n     * This method resets the dropdown when it's closed, most importantly restoring\n     * focus to the dropdown trigger if the dropdown was opened via the keyboard.\n     */\n    private _reset(): void {\n        this._setIsOpened(false);\n\n        // We should reset focus if the user is navigating using a keyboard or\n        // if we have a top-level trigger which might cause focus to be lost\n        // when clicking on the backdrop.\n        if (!this._openedBy) {\n            // Note that the focus style will show up both for `program` and\n            // `keyboard` so we don't have to specify which one it is.\n            this.focus();\n        } else {\n            this.focus(this._openedBy);\n        }\n\n        this._openedBy = null;\n    }\n\n    // set state rather than toggle to support triggers sharing a dropdown\n    private _setIsOpened(isOpen: boolean): void {\n        this._opened = isOpen;\n        // tslint:disable-next-line:no-void-expression\n        this._opened ? this.dropdownOpened.emit() : this.dropdownClosed.emit();\n    }\n\n    /**\n     * This method checks that a valid instance of Dropdown has been passed into\n     * mcDropdownTriggerFor. If not, an exception is thrown.\n     */\n    private _check() {\n        if (!this.dropdown) {\n            throwMcDropdownMissingError();\n        }\n    }\n\n    /**\n     * This method creates the overlay from the provided dropdown's template and saves its\n     * OverlayRef so that it can be attached to the DOM when open is called.\n     */\n    private _createOverlay(): OverlayRef {\n        if (!this._overlayRef) {\n            this._portal = new TemplatePortal(this.dropdown.templateRef, this._viewContainerRef);\n            const config = this._getOverlayConfig();\n            this._subscribeToPositions(config.positionStrategy as FlexibleConnectedPositionStrategy);\n            this._overlayRef = this._overlay.create(config);\n\n            // Consume the `keydownEvents` in order to prevent them from going to another overlay.\n            // Ideally we'd also have our keyboard event logic in here, however doing so will\n            // break anybody that may have implemented the `McDropdownPanel` themselves.\n            this._overlayRef.keydownEvents().subscribe();\n        }\n\n        return this._overlayRef;\n    }\n\n    /**\n     * This method builds the configuration object needed to create the overlay, the OverlayState.\n     * @returns OverlayConfig\n     */\n    private _getOverlayConfig(): OverlayConfig {\n        return new OverlayConfig({\n            positionStrategy: this._overlay.position()\n                .flexibleConnectedTo(this._element)\n                .withLockedPosition()\n                .withTransformOriginOn('.mc-dropdown__panel'),\n            hasBackdrop: this.dropdown.hasBackdrop === null || this.dropdown.hasBackdrop === undefined\n                ? true\n                : this.dropdown.hasBackdrop,\n            backdropClass: this.dropdown.backdropClass || 'cdk-overlay-transparent-backdrop',\n            scrollStrategy: this._scrollStrategy(),\n            direction: this._dir\n        });\n    }\n\n    /**\n     * Listens to changes in the position of the overlay and sets the correct classes\n     * on the dropdown based on the new position. This ensures the animation origin is always\n     * correct, even if a fallback position is used for the overlay.\n     */\n    private _subscribeToPositions(position: FlexibleConnectedPositionStrategy): void {\n        if (this.dropdown.setPositionClasses) {\n            // todo possibly we should not recompute positions there\n            /*position.positionChanges.subscribe((change) => {\n                const posX: DropdownPositionX = change.connectionPair.overlayX === 'start' ? 'after' : 'before';\n                const posY: DropdownPositionY = change.connectionPair.overlayY === 'top' ? 'below' : 'above';\n\n                this.dropdown.setPositionClasses!(posX, posY);\n            });*/\n            position.positionChanges.subscribe(() => {\n                this.dropdown.setPositionClasses!(this.dropdown.xPosition, this.dropdown.yPosition);\n            });\n        }\n    }\n\n    /**\n     * Sets the appropriate positions on a position strategy\n     * so the overlay connects with the trigger correctly.\n     * @param positionStrategy Strategy whose position to update.\n     */\n    private _setPosition(positionStrategy: FlexibleConnectedPositionStrategy) {\n        const [originX, originFallbackX]: HorizontalConnectionPos[] =\n            this.dropdown.xPosition === 'before' ? ['end', 'start'] : ['start', 'end'];\n\n        const [overlayY, overlayFallbackY]: VerticalConnectionPos[] =\n            this.dropdown.yPosition === 'above' ? ['bottom', 'top'] : ['top', 'bottom'];\n\n        let [originY, originFallbackY] = [overlayY, overlayFallbackY];\n        const [overlayX, overlayFallbackX] = [originX, originFallbackX];\n        const offsetY = 0;\n\n        if (!this.dropdown.overlapTrigger) {\n            originY = overlayY === 'top' ? 'bottom' : 'top';\n            originFallbackY = overlayFallbackY === 'top' ? 'bottom' : 'top';\n        }\n\n        positionStrategy.withPositions([\n            {originX, originY, overlayX, overlayY, offsetY},\n            {originX: originFallbackX, originY, overlayX: overlayFallbackX, overlayY, offsetY},\n            {\n                originX,\n                originY: originFallbackY,\n                overlayX,\n                overlayY: overlayFallbackY,\n                offsetY: -offsetY\n            },\n            {\n                originX: originFallbackX,\n                originY: originFallbackY,\n                overlayX: overlayFallbackX,\n                overlayY: overlayFallbackY,\n                offsetY: -offsetY\n            }\n        ]);\n    }\n\n    /** Cleans up the active subscriptions. */\n    private _cleanUpSubscriptions(): void {\n        this._closeSubscription.unsubscribe();\n        this._hoverSubscription.unsubscribe();\n    }\n\n    /** Returns a stream that emits whenever an action that should close the dropdown occurs. */\n    private _closingActions() {\n        const backdrop = this._overlayRef!.backdropClick();\n        const detachments = this._overlayRef!.detachments();\n\n        return merge(backdrop, detachments);\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { OverlayModule } from '@ptsecurity/cdk/overlay';\n\nimport { McDropdownContent } from './dropdown-content';\nimport { McDropdownItem } from './dropdown-item';\nimport { MC_DROPDOWN_SCROLL_STRATEGY_FACTORY_PROVIDER, McDropdownTrigger } from './dropdown-trigger';\nimport { McDropdown } from './dropdown.component';\n\n\n@NgModule({\n    imports: [\n        CommonModule,\n        OverlayModule\n    ],\n    exports: [McDropdown, McDropdownItem, McDropdownTrigger, McDropdownContent],\n    declarations: [McDropdown, McDropdownItem, McDropdownTrigger, McDropdownContent],\n    providers: [MC_DROPDOWN_SCROLL_STRATEGY_FACTORY_PROVIDER]\n})\nexport class McDropdownModule {}\n","import { Component } from '@angular/core';\n\n\n@Component({\n    selector: 'mc-cleaner',\n    template: '<i class=\"mc-icon_light\" mc-icon=\"mc-close-M_16\" color=\"second\"></i>'\n})\nexport class McCleaner {\n}\n","import { NgControl } from '@angular/forms';\nimport { Observable } from 'rxjs';\n\n\n/** An interface which allows a control to work inside of a `MсFormField`. */\nexport abstract class McFormFieldControl<T> {\n    /** The value of the control. */\n    value: T | null;\n\n    /**\n     * Stream that emits whenever the state of the control changes such that the parent `MсFormField`\n     * needs to run change detection.\n     */\n    readonly stateChanges: Observable<void>;\n\n    /** The element ID for this control. */\n    readonly id: string;\n\n    /** The placeholder for this control. */\n    readonly placeholder: string;\n\n    /** Gets the NgControl for this control. */\n    readonly ngControl: NgControl | null;\n\n    /** Whether the control is focused. */\n    readonly focused: boolean;\n\n    /** Whether the control is empty. */\n    readonly empty: boolean;\n\n    /** Whether the control is required. */\n    readonly required: boolean;\n\n    /** Whether the control is disabled. */\n    readonly disabled: boolean;\n\n    /** Whether the control is in an error state. */\n    readonly errorState: boolean;\n\n    /**\n     * An optional name for the control type that can be used to distinguish `mc-form-field` elements\n     * based on their control type. The form field will add a class,\n     * `mc-form-field-type-{{controlType}}` to its root element.\n     */\n    readonly controlType?: string;\n\n    /** Handles a click on the control's container. */\n    abstract onContainerClick(event: MouseEvent): void;\n}\n","import { Observable } from 'rxjs';\n\n\n/** An interface which allows a control to work inside of a `MсFormField`. */\nexport abstract class McFormFieldNumberControl<T> {\n    /** The value of the control. */\n    value: T | null;\n\n    /**\n     * Stream that emits whenever the state of the control changes such that the parent `MсFormField`\n     * needs to run change detection.\n     */\n    readonly stateChanges: Observable<void>;\n\n    /** the number step */\n    step: number;\n\n    /** the number big step */\n    bigStep: number;\n\n    /** Whether the control is focused. */\n    readonly focused: boolean;\n\n    /** Handles step up and down */\n    abstract stepUp(step: number): void;\n\n    abstract stepDown(step: number): void;\n}\n","import { Directive, Input } from '@angular/core';\n\n\nlet nextUniqueId = 0;\n\n@Directive({\n    selector: 'mc-hint',\n    host: {\n        class: 'mc-hint',\n        '[attr.id]': 'id'\n    }\n})\nexport class McHint {\n    @Input() id: string = `mc-hint-${nextUniqueId++}`;\n}\n","import { Directive } from '@angular/core';\n\n\n@Directive({\n    selector: '[mcPrefix]'\n})\nexport class McPrefix {\n}\n","import { Component, EventEmitter, Output } from '@angular/core';\n\n\n@Component({\n    selector: 'mc-stepper',\n    template: `\n        <i class=\"mc mc-icon mc-icon_light mc-second mc-stepper-step-up mc-angle-L_16\"\n           (mousedown)=\"onStepUp($event)\">\n        </i>\n        <i class=\"mc mc-icon mc-icon_light mc-second mc-stepper-step-down mc-angle-L_16\"\n           (mousedown)=\"onStepDown($event)\">\n        </i>\n    `\n})\nexport class McStepper {\n    @Output()\n    readonly stepUp: EventEmitter<void> = new EventEmitter<void>();\n    @Output()\n    readonly stepDown: EventEmitter<void> = new EventEmitter<void>();\n\n    onStepUp($event: MouseEvent) {\n        this.stepUp.emit();\n        $event.preventDefault();\n    }\n\n    onStepDown($event: MouseEvent) {\n        this.stepDown.emit();\n        $event.preventDefault();\n    }\n}\n","import { Directive } from '@angular/core';\n\n\n@Directive({\n    selector: '[mcSuffix]'\n})\nexport class McSuffix {\n}\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","\nexport function isBoolean(val: any): val is boolean { return typeof val === 'boolean'; }\n\nexport function toBoolean(value: any): boolean {\n    return value != null && `${value}` !== 'false';\n}\n","import { NgModule, InjectionToken, Optional, Inject, isDevMode } from '@angular/core';\nimport { BidiModule } from '@ptsecurity/cdk/bidi';\n\n\n// Injection token that configures whether the Mosaic sanity checks are enabled.\nexport const MC_SANITY_CHECKS = new InjectionToken<boolean>('mc-sanity-checks', {\n    providedIn: 'root',\n    factory: MC_SANITY_CHECKS_FACTORY\n});\n\nexport function MC_SANITY_CHECKS_FACTORY(): boolean {\n    return true;\n}\n\n/**\n * Module that captures anything that should be loaded and/or run for *all* Mosaic\n * components. This includes Bidi, etc.\n *\n * This module should be imported to each top-level component module (e.g., MatTabsModule).\n */\n@NgModule({\n    imports: [ BidiModule ],\n    exports: [ BidiModule ]\n})\nexport class McCommonModule {\n    // Whether we've done the global sanity checks (e.g. a theme is loaded, there is a doctype).\n    private _hasDoneGlobalChecks = false;\n\n    // Reference to the global `document` object.\n    private _document = typeof document === 'object' && document ? document : null;\n\n    // Reference to the global 'window' object.\n    private _window = typeof window === 'object' && window ? window : null;\n\n    constructor(@Optional() @Inject(MC_SANITY_CHECKS) private _sanityChecksEnabled: boolean) {\n        if (this._areChecksEnabled() && !this._hasDoneGlobalChecks) {\n            this._checkDoctypeIsDefined();\n            this._checkThemeIsPresent();\n            this._hasDoneGlobalChecks = true;\n        }\n    }\n\n    // Whether any sanity checks are enabled\n    private _areChecksEnabled(): boolean {\n        return this._sanityChecksEnabled && isDevMode() && !this._isTestEnv();\n    }\n\n    // Whether the code is running in tests.\n    private _isTestEnv() {\n        // tslint:disable-next-line\n        return this._window && (this._window['__karma__'] || this._window['jasmine']);\n    }\n\n    private _checkDoctypeIsDefined(): void {\n        if (this._document && !this._document.doctype) {\n            console.warn(\n                'Current document does not have a doctype. This may cause ' +\n                'some Mosaic components not to behave as expected.'\n            );\n        }\n    }\n\n    private _checkThemeIsPresent(): void {\n        if (this._document && typeof getComputedStyle === 'function') {\n            const testElement = this._document.createElement('div');\n\n            testElement.classList.add('mc-theme-loaded-marker');\n            this._document.body.appendChild(testElement);\n\n            const computedStyle = getComputedStyle(testElement);\n\n            // In some situations, the computed style of the test element can be null. For example in\n            // Firefox, the computed style is null if an application is running inside of a hidden iframe.\n            // See: https://bugzilla.mozilla.org/show_bug.cgi?id=548397\n            if (computedStyle && computedStyle.display !== 'none') {\n                console.warn(\n                    'Could not find Mosaic core theme. Most Mosaic ' +\n                    'components may not work as expected. For more info refer ' +\n                    'to the theming guide: link there'\n                );\n            }\n\n            this._document.body.removeChild(testElement);\n        }\n    }\n}\n","import { coerceBooleanProperty } from '@ptsecurity/cdk/coercion';\n\nimport { Constructor } from './constructor';\n\n\nexport interface CanDisable {\n    disabled: boolean;\n}\n\n/** @docs-private */\nexport type CanDisableCtor = Constructor<CanDisable>;\n\n// Mixin to augment a directive with a `disabled` property.\nexport function mixinDisabled<T extends Constructor<{}>>(base: T): CanDisableCtor & T {\n    return class extends base {\n        private _disabled: boolean = false;\n\n        get disabled() {\n            return this._disabled;\n        }\n\n        set disabled(value: any) {\n            this._disabled = coerceBooleanProperty(value);\n        }\n\n        constructor(...args: any[]) {\n            // tslint:disable-next-line\n            super(...args);\n        }\n    };\n}\n","import { ElementRef } from '@angular/core';\n\nimport { Constructor } from './constructor';\n\n\nexport interface CanColor {\n    color: ThemePalette;\n}\n\n/** @docs-private */\nexport type CanColorCtor = Constructor<CanColor>;\n\nexport interface HasElementRef {\n    _elementRef: ElementRef;\n}\n\nexport enum ThemePalette {\n    Primary = 'primary',\n    Second = 'second',\n    Error = 'error',\n    Default = 'second',\n    Empty = ''\n}\n\n/** Mixin to augment a directive with a `color` property. */\nexport function mixinColor<T extends Constructor<HasElementRef>>(\n    base: T,\n    defaultColor: ThemePalette = ThemePalette.Default\n): CanColorCtor & T {\n    return class extends base {\n\n        private _color: ThemePalette;\n\n        get color(): ThemePalette {\n            return this._color;\n        }\n\n        set color(value: ThemePalette) {\n            const colorPalette = value || defaultColor;\n\n            if (colorPalette !== this._color) {\n                if (this._color) {\n                    this._elementRef.nativeElement.classList.remove(`mc-${this._color}`);\n                }\n\n                if (colorPalette) {\n                    this._elementRef.nativeElement.classList.add(`mc-${colorPalette}`);\n                }\n\n                this._color = colorPalette;\n            }\n        }\n\n        constructor(...args: any[]) {\n            super(...args);\n\n            this.color = defaultColor;\n        }\n    };\n}\n\n","import { Constructor } from './constructor';\nimport { CanDisable } from './disabled';\n\n\nexport interface HasTabIndex {\n    tabIndex: number;\n}\n\nexport type HasTabIndexCtor = Constructor<HasTabIndex>;\n\n// Mixin to augment a directive with a `tabIndex` property.\nexport function mixinTabIndex<T extends Constructor<CanDisable>>(base: T, defaultTabIndex = 0)\n    : HasTabIndexCtor & T {\n    return class extends base {\n        private _tabIndex: number = defaultTabIndex;\n\n        get tabIndex(): number {\n            return this.disabled ? -1 : this._tabIndex;\n        }\n\n        set tabIndex(value: number) {\n            this._tabIndex = value != null ? value : defaultTabIndex;\n        }\n\n        constructor(...args: any[]) {\n            super(...args);\n        }\n    };\n}\n","import { FormControl, FormGroupDirective, NgControl, NgForm } from '@angular/forms';\nimport { Subject } from 'rxjs';\n\nimport { ErrorStateMatcher } from '../error/error-options';\n\nimport { Constructor } from './constructor';\n\n\n/** @docs-private */\nexport interface CanUpdateErrorState {\n\n    readonly stateChanges: Subject<void>;\n\n    errorState: boolean;\n    errorStateMatcher: ErrorStateMatcher;\n\n    updateErrorState();\n}\n\n/** @docs-private */\nexport type CanUpdateErrorStateCtor = Constructor<CanUpdateErrorState>;\n\n/** @docs-private */\nexport interface HasErrorState {\n    _parentFormGroup: FormGroupDirective;\n    _parentForm: NgForm;\n    _defaultErrorStateMatcher: ErrorStateMatcher;\n    ngControl: NgControl;\n}\n\n/**\n * Mixin to augment a directive with updateErrorState method.\n * For component with `errorState` and need to update `errorState`.\n */\nexport function mixinErrorState<T extends Constructor<HasErrorState>>(base: T)\n    : CanUpdateErrorStateCtor & T {\n    return class extends base {\n        /** Whether the component is in an error state. */\n        errorState: boolean = false;\n\n        /**\n         * Stream that emits whenever the state of the input changes such that the wrapping\n         * `MatFormField` needs to run change detection.\n         */\n        readonly stateChanges = new Subject<void>();\n\n        errorStateMatcher: ErrorStateMatcher;\n\n        constructor(...args: any[]) {\n            super(...args);\n        }\n\n        updateErrorState() {\n            const oldState = this.errorState;\n            const parent = this._parentFormGroup || this._parentForm;\n            const matcher = this.errorStateMatcher || this._defaultErrorStateMatcher;\n            const control = this.ngControl ? this.ngControl.control as FormControl : null;\n            const newState = matcher.isErrorState(control, parent);\n\n            if (newState !== oldState) {\n                this.errorState = newState;\n                this.stateChanges.next();\n            }\n        }\n    };\n}\n","import {\n    AfterViewChecked,\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    ElementRef,\n    EventEmitter,\n    Inject,\n    InjectionToken,\n    Input,\n    OnDestroy,\n    Optional,\n    Output,\n    QueryList,\n    ViewEncapsulation\n} from '@angular/core';\nimport { coerceBooleanProperty } from '@ptsecurity/cdk/coercion';\nimport { ENTER, SPACE } from '@ptsecurity/cdk/keycodes';\nimport { Subject } from 'rxjs';\n\nimport { McOptgroup } from './optgroup';\n\n\n/**\n * Option IDs need to be unique across components, so this counter exists outside of\n * the component definition.\n */\nlet _uniqueIdCounter = 0;\n\n/** Event object emitted by McOption when selected or deselected. */\nexport class McOptionSelectionChange {\n    constructor(\n        /** Reference to the option that emitted the event. */\n        public source: McOption,\n        /** Whether the change in the option's value was a result of a user action. */\n        public isUserInput = false) {\n    }\n}\n\n/**\n * Describes a parent component that manages a list of options.\n * Contains properties that the options can inherit.\n * @docs-private\n */\nexport interface IMcOptionParentComponent {\n    disableRipple?: boolean;\n    multiple?: boolean;\n}\n\n/**\n * Injection token used to provide the parent component to options.\n */\nexport const MC_OPTION_PARENT_COMPONENT =\n    new InjectionToken<IMcOptionParentComponent>('MC_OPTION_PARENT_COMPONENT');\n\n/**\n * Single option inside of a `<mat-select>` element.\n */\n@Component({\n    selector: 'mc-option',\n    exportAs: 'mcOption',\n    host: {\n        '[attr.tabindex]': '_getTabIndex()',\n        '[class.mc-selected]': 'selected',\n        '[class.mc-option-multiple]': 'multiple',\n        '[class.mc-active]': 'active',\n        '[id]': 'id',\n        '[class.mc-disabled]': 'disabled',\n        '(click)': '_selectViaInteraction()',\n        '(keydown)': '_handleKeydown($event)',\n        class: 'mc-option'\n    },\n    styleUrls: ['option.css'],\n    templateUrl: 'option.html',\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class McOption implements AfterViewChecked, OnDestroy {\n    /** Whether the wrapping component is in multiple selection mode. */\n    get multiple() {\n        return this._parent && this._parent.multiple;\n    }\n\n    /** The unique ID of the option. */\n    get id(): string {\n        return this._id;\n    }\n\n    /** Whether or not the option is currently selected. */\n    get selected(): boolean {\n        return this._selected;\n    }\n\n    /** The form value of the option. */\n    @Input() value: any;\n\n    /** Whether the option is disabled. */\n    @Input()\n    get disabled() {\n        return (this.group && this.group.disabled) || this._disabled;\n    }\n\n    set disabled(value: any) {\n        this._disabled = coerceBooleanProperty(value);\n    }\n\n    /** Whether ripples for the option are disabled. */\n    get disableRipple() {\n        return this._parent && this._parent.disableRipple;\n    }\n\n    /** Event emitted when the option is selected or deselected. */\n        // tslint:disable-next-line:no-output-on-prefix\n    @Output() readonly onSelectionChange = new EventEmitter<McOptionSelectionChange>();\n\n    /** Emits when the state of the option changes and any parents have to be notified. */\n    readonly _stateChanges = new Subject<void>();\n\n    private _selected = false;\n    private _active = false;\n    private _disabled = false;\n    private readonly _id = `mc-option-${_uniqueIdCounter++}`;\n    private _mostRecentViewValue = '';\n\n    constructor(\n        private readonly _element: ElementRef,\n        private readonly _changeDetectorRef: ChangeDetectorRef,\n        @Optional() @Inject(MC_OPTION_PARENT_COMPONENT) private readonly _parent: IMcOptionParentComponent,\n        @Optional() readonly group: McOptgroup) {\n    }\n\n    /**\n     * Whether or not the option is currently active and ready to be selected.\n     * An active option displays styles as if it is focused, but the\n     * focus is actually retained somewhere else. This comes in handy\n     * for components like autocomplete where focus must remain on the input.\n     */\n    get active(): boolean {\n        return this._active;\n    }\n\n    /**\n     * The displayed value of the option. It is necessary to show the selected option in the\n     * select's trigger.\n     */\n    get viewValue(): string {\n        // TODO(kara): Add input property alternative for node envs.\n        return (this._getHostElement().textContent || '').trim();\n    }\n\n    /** Selects the option. */\n    select(): void {\n        if (!this._selected) {\n            this._selected = true;\n            this._changeDetectorRef.markForCheck();\n            this._emitSelectionChangeEvent();\n        }\n    }\n\n    /** Deselects the option. */\n    deselect(): void {\n        if (this._selected) {\n            this._selected = false;\n            this._changeDetectorRef.markForCheck();\n            this._emitSelectionChangeEvent();\n        }\n    }\n\n    /** Sets focus onto this option. */\n    focus(): void {\n        const element = this._getHostElement();\n\n        if (typeof element.focus === 'function') {\n            element.focus();\n        }\n    }\n\n    /**\n     * This method sets display styles on the option to make it appear\n     * active. This is used by the ActiveDescendantKeyManager so key\n     * events will display the proper options as active on arrow key events.\n     */\n    setActiveStyles(): void {\n        if (!this._active) {\n            this._active = true;\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n\n    /**\n     * This method removes display styles on the option that made it appear\n     * active. This is used by the ActiveDescendantKeyManager so key\n     * events will display the proper options as active on arrow key events.\n     */\n    setInactiveStyles(): void {\n        if (this._active) {\n            this._active = false;\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n\n    /** Gets the label to be used when determining whether the option should be focused. */\n    getLabel(): string {\n        return this.viewValue;\n    }\n\n    /** Ensures the option is selected when activated from the keyboard. */\n    _handleKeydown(event: KeyboardEvent): void {\n        // tslint:disable-next-line\n        if (event.keyCode === ENTER || event.keyCode === SPACE) {\n            this._selectViaInteraction();\n\n            // Prevent the page from scrolling down and form submits.\n            event.preventDefault();\n        }\n    }\n\n    /**\n     * `Selects the option while indicating the selection came from the user. Used to\n     * determine if the select's view -> model callback should be invoked.`\n     */\n    _selectViaInteraction(): void {\n        if (!this.disabled) {\n            this._selected = this.multiple ? !this._selected : true;\n            this._changeDetectorRef.markForCheck();\n            this._emitSelectionChangeEvent(true);\n        }\n    }\n\n    /** Returns the correct tabindex for the option depending on disabled state. */\n    _getTabIndex(): string {\n        return this.disabled ? '-1' : '0';\n    }\n\n    /** Gets the host DOM element. */\n    _getHostElement(): HTMLElement {\n        return this._element.nativeElement;\n    }\n\n    ngAfterViewChecked() {\n        // Since parent components could be using the option's label to display the selected values\n        // (e.g. `mat-select`) and they don't have a way of knowing if the option's label has changed\n        // we have to check for changes in the DOM ourselves and dispatch an event. These checks are\n        // relatively cheap, however we still limit them only to selected options in order to avoid\n        // hitting the DOM too often.\n        if (this._selected) {\n            const viewValue = this.viewValue;\n\n            if (viewValue !== this._mostRecentViewValue) {\n                this._mostRecentViewValue = viewValue;\n                this._stateChanges.next();\n            }\n        }\n    }\n\n    ngOnDestroy() {\n        this._stateChanges.complete();\n    }\n\n    /** Emits the selection change event. */\n    private _emitSelectionChangeEvent(isUserInput = false): void {\n        this.onSelectionChange.emit(new McOptionSelectionChange(this, isUserInput));\n    }\n}\n\n/**\n * Counts the amount of option group labels that precede the specified option.\n * @param optionIndex Index of the option at which to start counting.\n * @param options Flat list of all of the options.\n * @param optionGroups Flat list of all of the option groups.\n * @docs-private\n */\nexport function _countGroupLabelsBeforeOption(\n    optionIndex: number, options: QueryList<McOption>,\n    optionGroups: QueryList<McOptgroup>\n): number {\n\n    if (optionGroups.length) {\n        const optionsArray = options.toArray();\n        const groups = optionGroups.toArray();\n\n        let groupCounter = 0;\n\n        for (let i = 0; i < optionIndex + 1; i++) {\n            if (optionsArray[i].group && optionsArray[i].group === groups[groupCounter]) {\n                groupCounter++;\n            }\n        }\n\n        return groupCounter;\n    }\n\n    return 0;\n}\n\n/**\n * Determines the position to which to scroll a panel in order for an option to be into view.\n * @param optionIndex Index of the option to be scrolled into the view.\n * @param optionHeight Height of the options.\n * @param currentScrollPosition Current scroll position of the panel.\n * @param panelHeight Height of the panel.\n * @docs-private\n */\nexport function _getOptionScrollPosition(\n    optionIndex: number,\n    optionHeight: number,\n    currentScrollPosition: number,\n    panelHeight: number\n): number {\n    const optionOffset = optionIndex * optionHeight;\n\n    if (optionOffset < currentScrollPosition) { return optionOffset; }\n\n    if (optionOffset + optionHeight > currentScrollPosition + panelHeight) {\n        return Math.max(0, optionOffset - panelHeight + optionHeight);\n    }\n\n    return currentScrollPosition;\n}\n\n","import { ConnectionPositionPair } from '@ptsecurity/cdk/overlay';\n\n\nexport const POSITION_MAP: { [key: string]: ConnectionPositionPair } = {\n    top         : {\n        originX : 'center',\n        originY : 'top',\n        overlayX: 'center',\n        overlayY: 'bottom'\n    },\n    topCenter   : {\n        originX : 'center',\n        originY : 'top',\n        overlayX: 'center',\n        overlayY: 'bottom',\n        offsetX : undefined,\n        offsetY : undefined\n    },\n    topLeft     : {\n        originX : 'start',\n        originY : 'top',\n        overlayX: 'start',\n        overlayY: 'bottom',\n        offsetX : undefined,\n        offsetY : undefined\n    },\n    topRight    : {\n        originX : 'end',\n        originY : 'top',\n        overlayX: 'end',\n        overlayY: 'bottom',\n        offsetX : undefined,\n        offsetY : undefined\n    },\n    right       : {\n        originX : 'end',\n        originY : 'center',\n        overlayX: 'start',\n        overlayY: 'center'\n    },\n    rightTop    : {\n        originX : 'end',\n        originY : 'top',\n        overlayX: 'start',\n        overlayY: 'top',\n        offsetX : undefined,\n        offsetY : undefined\n    },\n    rightBottom : {\n        originX : 'end',\n        originY : 'bottom',\n        overlayX: 'start',\n        overlayY: 'bottom',\n        offsetX : undefined,\n        offsetY : undefined\n    },\n    bottom      : {\n        originX : 'center',\n        originY : 'bottom',\n        overlayX: 'center',\n        overlayY: 'top'\n    },\n    bottomCenter: {\n        originX : 'center',\n        originY : 'bottom',\n        overlayX: 'center',\n        overlayY: 'top'\n    },\n    bottomLeft  : {\n        originX : 'start',\n        originY : 'bottom',\n        overlayX: 'start',\n        overlayY: 'top'\n    },\n    bottomRight : {\n        originX : 'end',\n        originY : 'bottom',\n        overlayX: 'end',\n        overlayY: 'top'\n    },\n    left        : {\n        originX : 'start',\n        originY : 'center',\n        overlayX: 'end',\n        overlayY: 'center'\n    },\n    leftTop     : {\n        originX : 'start',\n        originY : 'top',\n        overlayX: 'end',\n        overlayY: 'top'\n    },\n    leftBottom  : {\n        originX : 'start',\n        originY : 'bottom',\n        overlayX: 'end',\n        overlayY: 'bottom'\n    }\n};\n\nexport const DEFAULT_4_POSITIONS = _objectValues([\n    POSITION_MAP.top, POSITION_MAP.right, POSITION_MAP.bottom, POSITION_MAP.left\n]);\n\nfunction arrayMap<T, S>(array: T[], iteratee: (item: T, index: number, arr: T[]) => S): S[] {\n    let index = -1;\n    const length = array == null ? 0 : array.length;\n    const result = Array(length);\n\n    while (++index < length) {\n        result[ index ] = iteratee(array[ index ], index, array);\n    }\n\n    return result;\n}\nfunction baseValues<T>(object: { [key: string]: T } | T[], props: string[]): T[] {\n    return arrayMap(props,  (key) => {\n        return object[ key ];\n    });\n}\nfunction _objectValues<T>(object: { [key: string]: T } | T[]): T[] {\n    return object == null ? [] : baseValues(object, Object.keys(object));\n}\n","export function throwMcDropdownMissingError() {\n    throw Error(`mcDropdownTriggerFor: must pass in an mc-dropdown instance.\n    Example:\n      <mc-dropdown #dropdown=\"mcDropdown\"></mc-dropdown>\n      <button [mcDropdownTriggerFor]=\"dropdown\"></button>`);\n}\n\n/**\n * Throws an exception for the case when dropdown's x-position value isn't valid.\n * In other words, it doesn't match 'before' or 'after'.\n * @docs-private\n */\nexport function throwMcDropdownInvalidPositionX() {\n    throw Error(`xPosition value must be either 'before' or after'.\n      Example: <mc-dropdown xPosition=\"before\" #dropdown=\"mcDropdown\"></mc-dropdown>`);\n}\n\n/**\n * Throws an exception for the case when dropdown's y-position value isn't valid.\n * In other words, it doesn't match 'above' or 'below'.\n * @docs-private\n */\nexport function throwMcDropdownInvalidPositionY() {\n    throw Error(`yPosition value must be either 'above' or below'.\n      Example: <mc-dropdown yPosition=\"above\" #dropdown=\"mcDropdown\"></mc-dropdown>`);\n}\n","export function getMcFormFieldMissingControlError(): Error {\n  return Error('mc-form-field must contain a McFormFieldControl.');\n}\n","export function getMcInputUnsupportedTypeError(inputType: string): Error {\n    return Error(`Input type \"${inputType}\" isn't supported by mcInput.`);\n}\n","/**\n * Returns an exception to be thrown when attempting to change a select's `multiple` option\n * after initialization.\n * @docs-private\n */\nexport function getMcSelectDynamicMultipleError(): Error {\n    return Error('Cannot change `multiple` mode of select after initialization.');\n}\n\n/**\n * Returns an exception to be thrown when attempting to assign a non-array value to a select\n * in `multiple` mode. Note that `undefined` and `null` are still valid values to allow for\n * resetting the value.\n * @docs-private\n */\nexport function getMcSelectNonArrayValueError(): Error {\n    return Error('Value must be an array in multiple-selection mode.');\n}\n\n/**\n * Returns an exception to be thrown when assigning a non-function value to the comparator\n * used to determine if a value corresponds to an option. Note that whether the function\n * actually takes two values and returns a boolean is not checked.\n */\nexport function getMcSelectNonFunctionValueError(): Error {\n    return Error('`compareWith` must be a function.');\n}\n","import { NgModule, Directive, ElementRef, QueryList } from '@angular/core';\n\n\n/**\n * Shared directive to count lines inside a text area, such as a list item.\n * Line elements can be extracted with a @ContentChildren(McLine) query, then\n * counted by checking the query list's length.\n */\n@Directive({\n    selector: '[mc-line], [mcLine]',\n    host: { class: 'mc-line' }\n})\nexport class McLine {}\n\n/**\n * Helper that takes a query list of lines and sets the correct class on the host.\n * @docs-private\n */\nexport class McLineSetter {\n    constructor(private _lines: QueryList<McLine>, private _element: ElementRef) {\n        this._setLineClass(this._lines.length);\n\n        this._lines.changes.subscribe(() => {\n            this._setLineClass(this._lines.length);\n        });\n    }\n\n    private _setLineClass(count: number): void {\n        this._resetClasses();\n        if (count === 2 || count === 3) {\n            this._setClass(`mc-${count}-line`, true);\n        } else if (count > 3) {\n            this._setClass(`mc-multi-line`, true);\n        }\n    }\n\n    private _resetClasses(): void {\n        this._setClass('mc-2-line', false);\n        this._setClass('mc-3-line', false);\n        this._setClass('mc-multi-line', false);\n    }\n\n    private _setClass(className: string, isAdd: boolean): void {\n        if (isAdd) {\n            this._element.nativeElement.classList.add(className);\n        } else {\n            this._element.nativeElement.classList.remove(className);\n        }\n    }\n}\n\n@NgModule({\n    imports: [],\n    exports: [McLine],\n    declarations: [McLine]\n})\nexport class McLineModule {}\n","import { Injectable } from '@angular/core';\nimport { FormGroupDirective, NgForm, FormControl } from '@angular/forms';\n\n\n/** Error state matcher that matches when a control is invalid and dirty. */\n@Injectable()\nexport class ShowOnDirtyErrorStateMatcher implements ErrorStateMatcher {\n    isErrorState(control: FormControl | null, form: FormGroupDirective | NgForm | null): boolean {\n        return !!(control && control.invalid && (control.dirty || (form && form.submitted)));\n    }\n}\n\n/** Provider that defines how form controls behave with regards to displaying error messages. */\n@Injectable({ providedIn: 'root' })\nexport class ErrorStateMatcher {\n    isErrorState(control: FormControl | null, form: FormGroupDirective | NgForm | null): boolean {\n        return !!(control && control.invalid && (control.touched || (form && form.submitted)));\n    }\n}\n","import { Component, ViewEncapsulation, Input, ChangeDetectionStrategy } from '@angular/core';\n\n\nexport type McPseudoCheckboxState = 'unchecked' | 'checked' | 'indeterminate';\n\n/**\n * Component that shows a simplified checkbox without including any kind of \"real\" checkbox.\n * Meant to be used when the checkbox is purely decorative and a large number of them will be\n * included, such as for the options in a multi-select. Uses no SVGs or complex animations.\n * Note that theming is meant to be handled by the parent element, e.g.\n * `mc-primary .mc-pseudo-checkbox`.\n *\n * Note that this component will be completely invisible to screen-reader users. This is *not*\n * interchangeable with `<mc-checkbox>` and should *not* be used if the user would directly\n * interact with the checkbox. The pseudo-checkbox should only be used as an implementation detail\n * of more complex components that appropriately handle selected / checked state.\n * @docs-private\n */\n@Component({\n    encapsulation: ViewEncapsulation.None,\n    preserveWhitespaces: false,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    selector: 'mc-pseudo-checkbox',\n    styleUrls: ['pseudo-checkbox.css'],\n    templateUrl: 'pseudo-checkbox.partial.html',\n    host: {\n        class: 'mc-pseudo-checkbox',\n        '[class.mc-pseudo-checkbox_indeterminate]': 'state === \"indeterminate\"',\n        '[class.mc-pseudo-checkbox_checked]': 'state === \"checked\"',\n        '[class.mc-disabled]': 'disabled'\n    }\n})\nexport class McPseudoCheckbox {\n    @Input() state: McPseudoCheckboxState = 'unchecked';\n\n    @Input() disabled: boolean = false;\n}\n","import { NgModule } from '@angular/core';\n\nimport { McPseudoCheckbox } from './pseudo-checkbox/pseudo-checkbox';\n\n\n@NgModule({\n    exports: [McPseudoCheckbox],\n    declarations: [McPseudoCheckbox]\n})\nexport class McPseudoCheckboxModule {}\n\n\nexport * from './pseudo-checkbox/pseudo-checkbox';\n","import { DOCUMENT } from '@angular/common';\nimport { Inject, Injectable } from '@angular/core';\n\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class McMeasureScrollbarService {\n\n    get scrollBarWidth(): number {\n        if (this._scrollbarWidth) {\n            return this._scrollbarWidth;\n        }\n        this.initScrollBarWidth();\n\n        return this._scrollbarWidth;\n    }\n\n    private _scrollbarWidth: number;\n    private scrollbarMeasure = {\n        position: 'absolute',\n        top: '-9999px',\n        width: '50px',\n        height: '50px',\n        overflow: 'scroll'\n    };\n\n    constructor(\n        @Inject(DOCUMENT) private document: any\n    ) {\n        this.initScrollBarWidth();\n    }\n\n    initScrollBarWidth() {\n        const scrollDiv = this.document.createElement('div');\n\n        // tslint:disable-next-line\n        for (const scrollProp in this.scrollbarMeasure) {\n            if (this.scrollbarMeasure.hasOwnProperty(scrollProp)) {\n                scrollDiv.style[scrollProp] = this.scrollbarMeasure[scrollProp];\n            }\n        }\n\n        this.document.body.appendChild(scrollDiv);\n\n        const width = scrollDiv.offsetWidth - scrollDiv.clientWidth;\n\n        this.document.body.removeChild(scrollDiv);\n        this._scrollbarWidth = width;\n    }\n}\n","import { Component, ViewEncapsulation, Input, ChangeDetectionStrategy } from '@angular/core';\n\nimport { mixinDisabled, CanDisable, CanDisableCtor } from '../common-behaviors/index';\n\n\n// Boilerplate for applying mixins to McOptgroup.\n/** @docs-private */\nexport class McOptgroupBase {}\n\nexport const _McOptgroupMixinBase: CanDisableCtor & typeof McOptgroupBase = mixinDisabled(McOptgroupBase);\n\n// Counter for unique group ids.\nlet _uniqueOptgroupIdCounter = 0;\n\n/**\n * Component that is used to group instances of `mc-option`.\n */\n@Component({\n    selector: 'mc-optgroup',\n    exportAs: 'mcOptgroup',\n    templateUrl: 'optgroup.html',\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    inputs: ['disabled'],\n    styleUrls: ['optgroup.css'],\n    host: {\n        class: 'mc-optgroup',\n        role: 'group',\n        '[class.mc-optgroup-disabled]': 'disabled',\n        '[attr.aria-disabled]': 'disabled.toString()',\n        '[attr.aria-labelledby]': '_labelId'\n    }\n})\nexport class McOptgroup extends _McOptgroupMixinBase implements CanDisable {\n    /** Label for the option group. */\n    @Input() label: string;\n\n    /** Unique id for the underlying label. */\n    _labelId: string = `mc-optgroup-label-${_uniqueOptgroupIdCounter++}`;\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { McPseudoCheckboxModule } from '../selection/index';\n\nimport { McOptgroup } from './optgroup';\nimport { McOption } from './option';\n\n\n@NgModule({\n    imports: [CommonModule, McPseudoCheckboxModule],\n    exports: [McOption, McOptgroup],\n    declarations: [McOption, McOptgroup]\n})\nexport class McOptionModule {}\n\n\nexport * from './option';\nexport * from './optgroup';\n","import { InjectionToken } from '@angular/core';\n\n\n/** InjectionToken that can be used to specify the global label options. */\nexport const MC_LABEL_GLOBAL_OPTIONS =\n    new InjectionToken<LabelOptions>('mc-label-global-options');\n\n/** Type for the available floatLabel values. */\nexport type FloatLabelType = 'always' | 'never' | 'auto';\n\n/** Configurable options for floating labels. */\nexport interface LabelOptions {\n    /**\n     * Whether the label should float `always`, `never`, or `auto` (only when necessary).\n     * Default behavior is assumed to be `auto`.\n     */\n    float?: FloatLabelType;\n}\n","import {\n    animate,\n    state,\n    style,\n    transition,\n    trigger,\n    AnimationTriggerMetadata,\n} from '@angular/animations';\n\n\nexport const fadeAnimation: AnimationTriggerMetadata =  trigger('fadeAnimation', [\n    state('void', style({ opacity: 0 })),\n    state('true', style({ opacity: 1 })),\n    state('false', style({ opacity: 0 })),\n    transition('* => true', animate('150ms cubic-bezier(0.0, 0.0, 0.2, 1)')),\n    transition('* => void', animate('150ms cubic-bezier(0.4, 0.0, 1, 1)')),\n]);\n","import {\n    Attribute,\n    ChangeDetectionStrategy,\n    Component,\n    Directive,\n    ElementRef,\n    ViewEncapsulation\n} from '@angular/core';\n\nimport { mixinColor, CanColor, CanColorCtor, ThemePalette } from '@ptsecurity/mosaic/core';\n\n\n@Directive({\n    selector: '[mc-icon]',\n    host: { class: 'mc mc-icon' }\n})\nexport class McIconCSSStyler {}\n\n\nexport class McIconBase {\n    constructor(public _elementRef: ElementRef) {}\n}\n\nexport const _McIconMixinBase: CanColorCtor & typeof McIconBase = mixinColor(McIconBase, ThemePalette.Empty);\n\n\n@Component({\n    selector: `[mc-icon]`,\n    template: '<ng-content></ng-content>',\n    styleUrls: ['./icon.css'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n    inputs: ['color']\n})\nexport class McIcon extends _McIconMixinBase implements CanColor {\n    constructor(elementRef: ElementRef, @Attribute('mc-icon') iconName: string) {\n        super(elementRef);\n\n        elementRef.nativeElement.classList.add(iconName);\n    }\n\n    _getHostElement() {\n        return this._elementRef.nativeElement;\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { A11yModule } from '@ptsecurity/cdk/a11y';\nimport { PlatformModule } from '@ptsecurity/cdk/platform';\n\nimport {\n    McIcon,\n    McIconCSSStyler\n} from './icon.component';\n\n\n@NgModule({\n    imports: [\n        CommonModule,\n        A11yModule,\n        PlatformModule\n    ],\n    exports: [\n        McIcon,\n        McIconCSSStyler\n    ],\n    declarations: [\n        McIcon,\n        McIconCSSStyler\n    ]\n})\nexport class McIconModule {}\n"],"names":["Object","defineProperty","McTooltipDirective","prototype","get","this","_trigger","set","value","updateCompValue","_placement","isTooltipOpen","parentDisabled","_createOverlay","_this","_overlayRef","strategy","_overlay","position","flexibleConnectedTo","elementRef","withTransformOriginOn","withFlexibleDimensions","withViewportMargin","withPositions","DEFAULT_4_POSITIONS","slice","scrollableAncestors","_scrollDispatcher","getAncestorScrollContainers","withScrollableContainers","positionChanges","pipe","takeUntil","_destroyed","subscribe","change","tooltip","onPositionChange","scrollableViewProperties","isOverlayClipped","mcVisible","_ngZone","run","hide","create","direction","_dir","positionStrategy","panelClass","scrollStrategy","_scrollStrategy","_updatePosition","detachments","_detach","hasAttached","detach","$event","updatedPlacement","mcPlacement","keys","availablePositions","some","key","connectionPair","originX","originY","overlayX","overlayY","setClassMap","handlePositioningUpdate","pos","overlayElement","clientHeight","hostView","element","nativeElement","currentContainer","style","top","parseInt","split","isDynamicTooltip","ngOnInit","mcTrigger","manualListeners","show","forEach","listener","event","addEventListener","ngOnDestroy","dispose","removeEventListener","clear","$unsubscribe","next","complete","handleKeydown","e","keyCode","ESCAPE","handleTouchend","getConfig","origin","_getOrigin","overlay","_getOverlayPosition","tslib_1.__assign","main","fallback","originPosition","isLtr","getMcTooltipInvalidPositionError","_a","_invertPosition","x","y","overlayPosition","newX","newY","disabled","overlayRef","_portal","ComponentPortal","McToolTipComponent","attach","instance","afterHidden","property","mcVisibleChange","distinctUntilChanged","data","_visible","emit","tslib_1.__decorate","Output","Input","HostBinding","Directive","selector","host","(keydown)","(touchend)","tslib_1.__param","Inject","MC_TOOLTIP_SCROLL_STRATEGY","Optional","tslib_1.__metadata","Overlay","ElementRef","NgZone","ScrollDispatcher","ViewContainerRef","Directionality","McToolTipModule","NgModule","declarations","exports","imports","BrowserAnimationsModule","CommonModule","OverlayModule","providers","MC_TOOLTIP_SCROLL_STRATEGY_FACTORY_PROVIDER","entryComponents","VERSION","Version","SELECT_PANEL_PADDING_X","option","selected","fallbackValue","_value","valueToEmit","valueChange","_onChange","selectionChange","McSelectChange","_changeDetectorRef","markForCheck","McSelect","_setOptionIds","_optionIds","options","map","id","join","_highlightCorrectOption","_keyManager","empty","setFirstItemActive","setActiveItem","_selectionModel","_scrollActiveOptionIntoView","activeOptionIndex","activeItemIndex","labelCount","_countGroupLabelsBeforeOption","optionGroups","panel","scrollTop","_getOptionScrollPosition","_getItemHeight","_getOptionIndex","reduce","result","current","index","undefined","_calculateOverlayPosition","itemHeight","items","_getItemCount","panelHeight","Math","min","scrollContainerHeight","maxScroll","selectedOptionOffset","scrollBuffer","_scrollTop","_calculateOverlayScroll","_offsetY","_calculateOverlayOffsetY","_checkOverlayWithinViewport","_calculateOverlayOffsetX","offsetX","overlayRect","overlayDir","getBoundingClientRect","viewportSize","_viewportRuler","getViewportSize","isRtl","_isRtl","first","group","leftOverflow","left","rightOverflow","right","width","round","updatePosition","topSpaceAvailable","_triggerRect","bottomSpaceAvailable","height","bottom","panelHeightTop","abs","totalPanelHeight","panelHeightBottom","_adjustPanelUp","_adjustPanelDown","_transformOrigin","_getOriginBasedOnOption","distanceBelowViewport","distanceAboveViewport","optionHeightAdjustment","length","ViewChild","ViewChildren","McTag","QueryList","CdkConnectedOverlay","ContentChildren","McOption","descendants","McOptgroup","ContentChild","McSelectTrigger","ErrorStateMatcher","EventEmitter","Observable","McSelect_1","Component","exportAs","template","styles","inputs","encapsulation","ViewEncapsulation","None","changeDetection","ChangeDetectionStrategy","OnPush","[attr.id]","[attr.tabindex]","class","[class.mc-disabled]","[class.mc-select-invalid]","[class.mc-select-required]","(focus)","(blur)","(window:resize)","animations","mcSelectAnimations","transformPanel","fadeInContent","provide","McFormFieldControl","useExisting","MC_OPTION_PARENT_COMPONENT","Self","Attribute","MC_SELECT_SCROLL_STRATEGY","ViewportRuler","ChangeDetectorRef","Renderer2","NgForm","FormGroupDirective","McFormField","NgControl","String","_McSelectMixinBase","McSelectModule","McOptionModule","McIconModule","McTagModule","McFormFieldModule","MC_SELECT_SCROLL_STRATEGY_PROVIDER","McSplitterComponent","ngZone","renderer","areas","_disabled","_gutterSize","isDragging","areaPositionDivider","listeners","_direction","coerceBooleanProperty","gutterSize","size","coerceNumberProperty","addArea","area","order","getSize","setOrder","push","initialSize","setStyle","isVertical","onMouseDown","leftAreaIndex","rightAreaIndex","leftArea","rightArea","startPoint","screenX","screenY","item","disableFlex","setSize","runOutsideAngular","listen","onMouseUp","onMouseMove","removeArea","indexToRemove","splice","endPoint","offset","newLeftAreaSize","newRightAreaSize","minLeftAreaSize","getMinSize","minRightAreaSize","rightAreaOffset","unsubscribe","pop","preserveWhitespaces","McGutterDirective","_order","_size","getCursor","getState","coerceCssPixelValue","setAttr","state","Error","attribute","setAttribute","McSplitterAreaDirective","splitter","removeStyle","sz","getSizeProperty","getOffsetSizeProperty","getComputedStyle","parseFloat","getMinSizeProperty","McSplitterModule","nextUniqueId","McToggleBase","_elementRef","_McToggleMixinBase","mixinTabIndex","mixinColor","mixinDisabled","ThemePalette","Primary","McToggleChange","McToggleComponent","_super","_focusMonitor","tabIndex","call","labelPosition","ariaLabel","ariaLabelledby","_uniqueId","name","_checked","_onTouchedCallback","_onChangeCallback","_","monitor","tslib_1.__extends","McToggleComponent_1","stopMonitoring","focus","focusVia","_inputElement","_getAriaChecked","checked","_onInteractionEvent","stopPropagation","_onLabelTextChange","_onInputClick","_updateModelValue","_emitChangeEvent","writeValue","registerOnChange","fn","registerOnTouched","setDisabledState","isDisabled","source","NG_VALUE_ACCESSOR","forwardRef","multi","[id]","[class.mc-toggle_off]","trigger","transition","animate","FocusMonitor","McToggleModule","A11yModule","McCommonModule","cdr","_prefix","_positions","_classMap","visibleSource","BehaviorSubject","$visible","asObservable","mcMouseEnterDelay","mcMouseLeaveDelay","_onHide","Subject","_closeOnInteraction","POSITION_MAP","_title","isTitleString","TemplateRef","visible","unshift","hideTId","clearTimeout","isContentEmpty","showTId","setTimeout","_markForCheck","mcTitle","_handleBodyInteraction","fadeAnimation","(body:click)","InjectionToken","deps","useFactory","MC_TOOLTIP_SCROLL_STRATEGY_FACTORY","Map","title","_mouseEnterDelay","_mouseLeaveDelay","viewDef","view","def","nodes","node","nodeMatchedQueries","matchedQueryIds","nodeData","nodeIndex","arrayOfInstances","reset","notifyOnChanges","updateScrollSize","McTreeSelection","_getHeight","getClientRects","_emitNavigationEvent","navigationChange","McTreeNavigationChange","_isValidIndex","_canDeselectLast","noUnselect","selectedOptions","CdkTreeNodeOutlet","McTreeNodeOption","McTreeSelection_1","[tabIndex]","role","CdkTree","IterableDiffers","_McTreeSelectionBase","MC_TREE_DIRECTIVES","McTreeNodeDef","McTreeNodePadding","McTreeModule","CdkTreeModule","McTreeFlattener","transformFunction","getLevel","isExpandable","getChildren","_flattenNode","level","resultNodes","parentMap","flatNode","take","children","child","childParentMap","flattenNodes","structuredData","expandFlattenedNodes","treeControl","results","currentExpand","expand","i","isExpanded","McTreeFlatDataSource","treeFlattener","initialData","_flattenedData","_expandedData","_data","dataNodes","connect","collectionViewer","changes","viewChange","expansionModel","onChange","merge","apply","disconnect","DataSource","McTreeNestedDataSource","arguments","McTagBase","_McTagMixinBase","ngAfterContentInit","_addClassModificatorForIcons","icons","contentChildren","iconElement","previousElementSibling","nextElementSibling","nextSibling","classList","add","previousSibling","firstIconElement","secondIconElement","McIcon","PlatformModule","TimeParts","TimeFormats","TIMEFORMAT_PLACEHOLDERS","HHmmss","HHmm","DEFAULT_TIME_FORMAT","HOURS_MINUTES_SECONDS_REGEXP","RegExp","HOURS_MINUTES_REGEXP","HOURS_ONLY_REGEXP","uniqueComponentIdSuffix","validatorOnChange","noop","validator","MC_INPUT_VALUE_ACCESSOR","McTimepickerBase","_defaultErrorStateMatcher","_parentForm","_parentFormGroup","ngControl","McTimepickerMixinBase","mixinErrorState","ɵ1","validate","c","registerOnValidatorChange","McTimepicker","inputValueAccessor","focused","stateChanges","controlType","uid","_minTime","_maxTime","previousNativeValue","placeholder","valueAccessor","Validators","compose","parseValidator","minTimeValidator","maxTimeValidator","McTimepicker_1","_id","_required","applyInputChanges","_timeFormat","formatValue","timeFormatKey","indexOf","minValue","minDateTime","getDateFromTimeString","maxValue","maxDateTime","ngOnChanges","ngDoCheck","updateErrorState","dirtyCheckNativeValue","focusChanged","isFocused","onTouched","onBlur","onPaste","preventDefault","clipboardUserInput","clipboardData","getData","onInput","initialCursorStart","selectionStart","initialCursorEnd","selectionEnd","isAutocompleteTriggered","getParsedTimeParts","hoursOnly","hoursAndMinutes","hoursAndMinutesAndSeconds","doTimestringReformat","errors","createSelectionOfTimeComponentInInput","isBadInput","onContainerClick","setProperty","getTimeStringFromDate","timeFormat","onKeyDown","getKeyCode","upDownTimeByArrowKeys","switchSelectionBetweenTimeparts","newValue","validity","badInput","applyParams","changedTime","timeToApply","currentDateTimeInput","control","updateValueAndValidity","cursorPos","modifiedTimePart","getTimeEditMetrics","incrementTime","decrementTime","getCursorPositionOfPrevTimePartStart","getCursorPositionOfNextTimePartStart","code","newEditParams","cursorStartPosition","cursorEndPosition","dateVal","whatToIncrement","seconds","getTimeDigitsFromDate","hours","minutes","getDateFromTimeDigits","whatToDecrement","timeString","timeDevider","nextDividerPos","cursorPosition","minutesIndex","hoursIndex","secondsIndex","tempVal","getNumberWithLeadingZero","getHours","getMinutes","getSeconds","match","trim","Number","resultDate","Date","isNaN","getTime","digit","mcTimepickerParse","text","isTimeLowerThenMin","mcTimepickerLowerThenMintime","isTimeGreaterThenMax","mcTimepickerHigherThenMaxtime","timeToCompare","[attr.placeholder]","[disabled]","[required]","[attr.time-format]","[attr.min-time]","[attr.max-time]","[attr.value]","(input)","(paste)","NG_VALIDATORS","useValue","McTimepickerModule","FormsModule","transform","minWidth","opacity","query","animateChild","MC_SELECT_SCROLL_STRATEGY_PROVIDER_FACTORY","McSelectBase","_renderer","_parentFormField","_scrollStrategyFactory","_triggerFontSize","_panelDoneAnimating","_panelDoneAnimatingStream","optionSelectionChanges","defer","onSelectionChange","onStable","switchMap","openedChange","_openedStream","filter","o","_closedStream","hiddenItems","_panelOpen","_multiple","_uid","_destroy","_focused","_onTouched","_compareWith","o1","o2","_placeholder","getMcSelectDynamicMultipleError","getMcSelectNonFunctionValueError","_initializeSelection","SelectionModel","multiple","panelOpen","_initKeyManager","added","select","removed","deselect","startWith","_resetOptions","ngAfterViewInit","tags","_calculateHiddenItems","toggle","close","open","withHorizontalOrientation","fontSize","_setSelectionByValue","viewValue","reverse","isEmpty","_handleKeydown","_handleOpenKeydown","_handleClosedKeydown","_onFadeInDone","_onFocus","_onBlur","_onAttached","positionChange","detectChanges","_getPanelTheme","color","selectedIndex","optionOffsetFromScrollTop","halfOptionHeight","optimalScrollPosition","max","onRemoveMatcherItem","visibleItems","totalItemsWidth","_getTotalItemsWidthInMatcher","totalVisibleItemsWidth","tag","offsetTop","offsetHeight","itemsCounter","querySelector","matcherList","itemsCounterShowed","matcherListWidth","matcherWidth","triggerClone","cloneNode","remove","appendChild","querySelectorAll","isArrowKey","DOWN_ARROW","UP_ARROW","LEFT_ARROW","RIGHT_ARROW","ENTER","SPACE","altKey","onKeydown","manager","HOME","END","setLastItemActive","activeItem","A","ctrlKey","hasDeselectedOptions_1","previouslyFocusedIndex","shiftKey","_selectViaInteraction","Promise","resolve","then","Array","isArray","getMcSelectNonArrayValueError","currentValue","_selectValue","_sortValues","correspondingOption","find","error","isDevMode","console","warn","ActiveDescendantKeyManager","withTypeAhead","withVerticalOrientation","tabOut","changedOrDestroyed","_onSelect","isUserInput","_stateChanges","wasSelected","isSelected","_propagateChanges","options_1","toArray","sort","a","b","sortComparator","MC_NAVBAR_BRAND","McNavbarBrand","McNavbarTitle","MC_NAVBAR_TITLE","McNavbarItemBase","_McNavbarMixinBase","McNavbarItem","_platform","_cdRef","dropdownItems","isCollapsed","_subscription","Subscription","encodeURI","dropdownContent","denyClickIfDisabled","_focusMonitor$","hasDropdownContent","listenClickOutside","startListenFocusDropdownItems","stopListenFocusDropdownItems","isActiveDropdownLink","link","isBrowser","window","location","href","handleClickByItem","toggleDropdown","isNavbarItem","target","contains","MC_NAVBAR_ITEM","handleClickByDropdownItem","forceCloseDropdown","_dropdownElements","el","events","eventListeners","hasAttribute","stopImmediatePropagation","read","[attr.disabled]","Platform","McNavbarContainer","MC_NAVBAR_CONTAINER","CollapsibleItem","_collapsed","processCollapsed","collapsed","updateCollapsedClass","CachedItemWidth","itemsForCollapse","_collapsedItemsWidth","calculateAndCacheCollapsedItemsWidth","updateTitle","acc","getTitle","computedTitle","getAttribute","decodeURI","innerText","removeAttribute","McNavbar","forceRecalculateItemsWidth","resizeDebounceInterval","firstLevelElement","secondLevelElements","resizeObserver","fromEvent","debounceTime","_resizeSubscription","updateCollapsed","bind","_itemsWidths","calculateAndCacheItemsWidth","_totalItemsWidths","calculateAndCacheTotalItemsWidth","collapseDelta","maxAllowedWidth","itemsWidths","canCollapse","collapsedItemsWidth","getOuterElementWidth","getPropertyValue","allItemsSelector","allItems","from","getItemsForCollapse","McNavbarModule","McNavbarLogo","idIterator","McProgressBarBase","_McProgressBarMixinBase","McProgressBar","mode","McProgressBarModule","McProgressSpinnerBase","_McProgressSpinnerMixinBase","McProgressSpinner","percentage","McProgressSpinnerModule","McRadioChange","McRadioGroupBase","_McRadioGroupMixinBase","MC_RADIO_GROUP_CONTROL_VALUE_ACCESSOR","McRadioGroup","_changeDetector","_name","_selected","_isInitialized","_labelPosition","controlValueAccessorChangeFn","updateRadioButtonNames","v","markRadiosForCheck","updateSelectedRadioFromValue","checkSelectedRadioButton","toBoolean","touch","emitChangeEvent","_radios","radio","isAlreadySelected","McRadioButton","McRadioButtonBase","_McRadioButtonMixinBase","radioGroup","_radioDispatcher","removeUniqueSelectionListener","newCheckedState","notify","newDisabledState","required","onInputClick","onInputChange","groupValueChanged","[class.mc-checked]","UniqueSelectionDispatcher","McRadioModule","McTreeNodeDef_1","CdkTreeNodeDef","_baseLeftPadding","_iconWidth","_indent","McTreeNodePadding_1","_withIcon","_paddingIndent","nodeLevel","_treeNode","_tree","_level","leftPadding","_setPadding","CdkTreeNodePadding","treeSelection","_hasFocus","McTreeNodeOption_1","setSelected","setFocusedOption","_handleFocus","_handleBlur","_handleClick","tabindex","[class.mc-selected]","[class.mc-focused]","[attr.aria-expanded]","[attr.aria-level]","(click)","CdkTreeNode","McTreeSelectionChange","_differs","autoSelect","rawValue","log","_onKeyDown","withShift","withCtrl","collapse","toggleFocusedOption","PAGE_UP","setPreviousPageItemActive","PAGE_DOWN","setNextPageItemActive","FocusKeyManager","withScrollSize","floor","updateActiveItem","previousIndex_1","previousActiveItemIndex","activeIndex_1","focusedIndex","focusedOption","renderNodeChanges","dataDiffer","viewContainer","parentData","_dataDiffer","_nodeOutlet","_embeddedViews","_McListSelectionMixinBase","McListBase","McList","McListSubheaderCssStyler","McListItemBase","McListItem","_element","_lineSetter","McLineSetter","_lines","_getHostElement","McLine","McListModule","McLineModule","McListSelection","McListOption","McLinkBase","_McLinkBase","McLink","McLinkModule","McModalControlService","parentService","rootOpenModals","rootAfterAllClose","rootRegisteredMetaMap","afterAllClose","openModals","registeredMetaMap","registerModal","modalRef","hasRegistered","afterOpenSubscription","afterOpen","afterCloseSubscription","afterClose","removeOpenModal","has","closeAll","Injectable","SkipSelf","McModalRef","ModalUtil","document","lastPosition","listenDocumentClick","getLastClickPosition","clientX","clientY","ModalUtil$1","McModalComponent","cfr","mcMeasureScrollbarService","modalControl","changeDetector","mcModalType","_mcVisible","mcZIndex","mcWidth","mcCloseByESC","_mcClosable","_mcMask","_mcMaskClosable","mcAfterOpen","mcAfterClose","mcOkType","_mcOkLoading","mcOnOk","_mcCancelLoading","mcOnCancel","transformOrigin","mcGetContainer","mcOkText","mcCancelText","animationState","isComponent","mcContent","createDynamicComponent","isModalButtons","mcFooter","formatModalButtons","container","HTMLElement","OverlayRef","handleVisibleStateChange","firstChange","contentComponentRef","bodyContainer","insert","autoFocusButtonOk","changeVisibleFromInside","destroy","triggerOk","onClickOkCancel","triggerCancel","getInstance","getContentComponentRef","getContentComponent","getElement","onClickMask","mcMask","mcMaskClosable","isModalType","type","onClickCloseBtn","ok","cancel","loadingKey","caseClose_1","doClose","isPromise","handleThen","catch","isNonEmptyString","isTemplateRef","Type","animation","closeResult","changeBodyOverflow","animateTo","getButtonCallableProp","prop","args","onButtonClick","button","loading","changeAnimationState","maskAnimationClassMap","modalAnimationClassMap","_b","changeDetectorRef","isVisible","updateTransformOrigin","buttons","autoLoading","component","factory","resolveComponentFactory","childInjector","Injector","parent","parentInjector","mcComponentParams","assign","modalElement","modalContainer","offsetLeft","plusNum","body","scrollBarWidth","DOCUMENT","ComponentFactoryResolver","McMeasureScrollbarService","CssUnitPipe","defaultUnit","formatted","Pipe","ModalBuilderForService","createModal","changeProps","destroyModal","keydownEvents","McModalService","confirm","confirmType","mcClassName","success","simpleConfirm","delete","McModalModule","McButtonModule","McFormFieldNumberControl","McStepper","McHint","McSuffix","McPrefix","McCleaner","[class.mc-form-field_invalid]","[class.mc-form-field_has-prefix]","[class.mc-form-field_has-suffix]","[class.mc-form-field_has-cleaner]","[class.mc-form-field_has-stepper]","[class.ng-untouched]","[class.ng-touched]","[class.ng-pristine]","[class.ng-dirty]","[class.ng-valid]","[class.ng-invalid]","[class.ng-pending]","(mouseenter)","(mouseleave)","_McFormFieldMixinBase","McFormFieldWithoutBorders","stepUp","step","res","stepDown","MC_INPUT_INVALID_TYPES","BIG_STEP","SMALL_STEP","McInputBase","_McInputMixinBase","McNumberInput","_model","bigStep","isDigit","Infinity","_host","self","getPrototypeOf","normalizeSplitter","McNumberInput_1","_focusChanged","minuses","NUMPAD_MINUS","DASH","FF_MINUS","serviceKeys","DELETE","BACKSPACE","TAB","arrows","allowedKeys","concat","isIEPeriod","isNotIEPeriod","metaKey","C","V","X","F1","F12","EDGE","TRIDENT","ZERO","NINE","NUMPAD_ZERO","NUMPAD_NINE","valueAsNumber","toString","update","replace","isFloat","isInt","test","NgModel","McInput","_type","_neverEmptyInputTypes","t","getSupportedInputTypes","_inputValueAccessor","_previousNativeValue","McInput_1","_validateType","_dirtyCheckNativeValue","_onInput","_isNeverEmpty","_isBadInput","getMcInputUnsupportedTypeError","McInputMono","MIN_VALIDATOR","MinValidator","_createValidator","_validator","[attr.min]","MAX_VALIDATOR","MaxValidator","[attr.max]","McInputModule","McContentComponent","[class.mc-layout-content]","McFooterComponent","[class.mc-layout-footer]","McHeaderComponent","[class.mc-layout-header]","McLayoutComponent","hasSidebar","[class.mc-layout]","[class.mc-layout-has-sidebar]","McSidebarComponent","mcLayoutComponent","_mcWidth","mcCollapsedWidth","mcCollapsedChange","collapsible","mcCollapsed","[class.mc-layout-sidebar]","[class.mc-layout-sidebar-collapsed]","[style.flex]","[style.max-width.px]","[style.min-width.px]","[style.width.px]","Host","McLayoutModule","listSelection","checkboxPosition","_reportValueChange","wasSelected_1","_removeOptionFromList","getLabel","_text","textContent","MC_SELECTION_LIST_VALUE_ACCESSOR","McListSelectionChange","McListSelectionBase","horizontal","_modelChanges","EMPTY","_tempValues","_setOptionsFromValues","_i","_c","selectAll","deselectAll","values","getSelectedOptionValues","listOption","optionIndex","setPreviousItemActive","setNextItemActive","_getOptionByValue","Boolean","McIconButton","McButton","McAnchor","McButtonCSSStyler","McIconButtonCSSStyler","McCard","readonly","selectedChange","_tabIndex","hostElement","onClick","[class.mc-card_readonly]","[class.mc-card_selected]","McCardModule","MC_CHECKBOX_CLICK_ACTION","MC_CHECKBOX_CONTROL_VALUE_ACCESSOR","McCheckbox","TransitionCheckState","McCheckboxChange","McCheckboxBase","_McCheckboxMixinBase","_clickAction","indeterminateChange","_currentAnimationClass","_currentCheckState","Init","_controlValueAccessorChangeFn","_indeterminate","focusOrigin","_onInputFocusChange","changed","_transitionCheckState","Indeterminate","Checked","Unchecked","indeterminate","newState","oldState","[class.mc-indeterminate]","[class.mc-checkbox-label-before]","MC_CHECKBOX_REQUIRED_VALIDATOR","McCheckboxRequiredValidator","[attr.required]","CheckboxRequiredValidator","McCheckboxModule","McDivider","_vertical","_inset","[attr.aria-orientation]","[class.mc-divider-vertical]","[class.mc-divider-inset]","McDividerModule","McDropdownContent","_template","_componentFactoryResolver","_appRef","_injector","_viewContainerRef","_document","_attached","context","TemplatePortal","_outlet","DomPortalOutlet","createElement","parentNode","insertBefore","outletElement","isAttached","ApplicationRef","MC_DROPDOWN_PANEL","McDropdownItemBase","_McDropdownItemMixinBase","McDropdownItem","_parentDropdownPanel","addItem","removeItem","_getTabIndex","_checkDisabled","textNodeType","TEXT_NODE","output","childNodes","length_1","nodeType","mcDropdownAnimations","transformDropdown","fadeInItems","MC_DROPDOWN_DEFAULT_OPTIONS","providedIn","MC_DROPDOWN_DEFAULT_OPTIONS_FACTORY","McDropdown","_defaultOptions","_classList","_panelAnimationState","_animationDone","backdropClass","closed","_xPosition","xPosition","_yPosition","yPosition","_items","_itemChanges","_tabSubscription","_overlapTrigger","overlapTrigger","_hasBackdrop","hasBackdrop","McDropdown_1","throwMcDropdownInvalidPositionX","setPositionClasses","throwMcDropdownInvalidPositionY","classes","obj","className","withWrap","setFocusOrigin","focusFirstItem","lazyContent","resetActiveItem","posX","posY","_startAnimation","_resetAnimation","_onAnimationDone","_isAnimating","toState","MC_DROPDOWN_SCROLL_STRATEGY","MC_DROPDOWN_SCROLL_STRATEGY_FACTORY_PROVIDER","MC_DROPDOWN_SCROLL_STRATEGY_FACTORY","McDropdownTrigger","_openedBy","dropdownOpened","dropdownClosed","_opened","_closeSubscription","_hoverSubscription","dropdown","_check","_cleanUpSubscriptions","_setPosition","_closingActions","_init","opened","_reset","dir","_setIsOpened","isOpen","throwMcDropdownMissingError","templateRef","config","_getOverlayConfig","_subscribeToPositions","OverlayConfig","withLockedPosition","originFallbackX","overlayFallbackY","originFallbackY","_d","overlayFallbackX","offsetY","backdrop","backdropClick","(touchstart)","McDropdownModule","onStepUp","onStepDown","McFormFieldBase","_labelId","hovered","_validateControlChild","_control","_numberControl","hasStepper","_stepper","valueChanges","ngAfterContentChecked","clearValue","hasCleaner","onHoverChanged","isHovered","_shouldForward","getMcFormFieldMissingControlError","_hint","_suffix","_cleaner","__extends","d","__","constructor","extendStatics","__decorate","decorators","desc","r","getOwnPropertyDescriptor","Reflect","decorate","__param","paramIndex","decorator","__metadata","metadataKey","metadataValue","metadata","isBoolean","val","MC_SANITY_CHECKS_FACTORY","base","class_1","defaultColor","Default","_color","colorPalette","defaultTabIndex","errorState","matcher","errorStateMatcher","isErrorState","optionsArray","groups","groupCounter","optionHeight","currentScrollPosition","optionOffset","arrayMap","array","iteratee","baseValues","object","props","scrollStrategies","reposition","inputType","sanitizeNumber","isFinite","getPrecision","arr","pow","value1","value2","precision","scrollThrottle","setPrototypeOf","__proto__","p","hasOwnProperty","__assign","s","n","MC_SANITY_CHECKS","_sanityChecksEnabled","_hasDoneGlobalChecks","_window","_areChecksEnabled","_checkDoctypeIsDefined","_checkThemeIsPresent","_isTestEnv","doctype","testElement","computedStyle","display","removeChild","BidiModule","_setLineClass","count","_resetClasses","_setClass","isAdd","ShowOnDirtyErrorStateMatcher","form","invalid","dirty","submitted","touched","McPseudoCheckbox","[class.mc-pseudo-checkbox_indeterminate]","[class.mc-pseudo-checkbox_checked]","McPseudoCheckboxModule","scrollbarMeasure","overflow","initScrollBarWidth","_scrollbarWidth","scrollDiv","scrollProp","offsetWidth","clientWidth","McOptgroupBase","_McOptgroupMixinBase","_uniqueOptgroupIdCounter","[class.mc-optgroup-disabled]","[attr.aria-disabled]","[attr.aria-labelledby]","_uniqueIdCounter","McOptionSelectionChange","_parent","_active","_mostRecentViewValue","disableRipple","_emitSelectionChangeEvent","setActiveStyles","setInactiveStyles","ngAfterViewChecked","[class.mc-option-multiple]","[class.mc-active]","MC_LABEL_GLOBAL_OPTIONS","topCenter","topLeft","topRight","rightTop","rightBottom","bottomCenter","bottomLeft","bottomRight","leftTop","leftBottom","McIconCSSStyler","McIconBase","_McIconMixinBase","Empty","iconName","queries","McButtonBase","_McButtonMixinBase","focusMonitor","_haltDisabledEvents"],"mappings":"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"}