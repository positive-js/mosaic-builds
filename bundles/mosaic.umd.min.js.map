{"version":3,"file":"mosaic.umd.min.js","sources":["../../src/lib/splitter/splitter.component.ts","../../src/lib/splitter/splitter.module.ts","../../src/lib/tooltip/tooltip.component.ts","../../src/lib/tooltip/tooltip.module.ts","../../src/lib/version.ts","../../src/lib/timepicker/timepicker.constants.ts","../../src/lib/select/select.component.ts","../../src/lib/timepicker/timepicker.ts","../../src/lib/timepicker/timepicker.module.ts","../../src/lib/select/select-animations.ts","../../src/lib/select/select.module.ts","../../src/lib/progress-spinner/progress-spinner.component.ts","../../src/lib/progress-spinner/progress-spinner.module.ts","../../src/lib/radio/radio.component.ts","../../src/lib/radio/radio.module.ts","../../src/lib/tree/node.ts","../../src/lib/tree/padding.ts","../../src/lib/tree/tree-selection.ts","../../src/lib/tree/tree.module.ts","../../src/lib/tree/data-source/flat-data-source.ts","../../src/lib/tree/data-source/nested-data-source.ts","../../src/lib/tag/tag.component.ts","../../src/lib/tag/tag.module.ts","../../src/lib/modal/modal.component.ts","../../src/lib/modal/css-unit.pipe.ts","../../src/lib/modal/modal.service.ts","../../src/lib/modal/modal.module.ts","../../src/lib/navbar/navbar.component.ts","../../src/lib/navbar/navbar.module.ts","../../src/lib/progress-bar/progress-bar.component.ts","../../src/lib/progress-bar/progress-bar.module.ts","../../src/lib/input/input-number-validators.ts","../../src/lib/input/input.module.ts","../../src/lib/layout/content.component.ts","../../src/lib/layout/footer.component.ts","../../src/lib/layout/header.component.ts","../../src/lib/layout/layout.component.ts","../../src/lib/layout/sidebar.component.ts","../../src/lib/layout/layout.module.ts","../../src/lib/list/list-selection.component.ts","../../src/lib/list/list.component.ts","../../src/lib/list/list.module.ts","../../src/lib/link/link.component.ts","../../src/lib/link/link.module.ts","../../src/lib/modal/modal-control.service.ts","../../src/lib/modal/modal-ref.class.ts","../../src/lib/modal/modal-util.ts","../../src/lib/button/button.component.ts","../../src/lib/button/button.module.ts","../../src/lib/checkbox/checkbox-config.ts","../../src/lib/checkbox/checkbox.ts","../../src/lib/checkbox/checkbox-required-validator.ts","../../src/lib/checkbox/checkbox-module.ts","../../src/lib/divider/divider.component.ts","../../src/lib/divider/divider.module.ts","../../src/lib/form-field/cleaner.ts","../../src/lib/form-field/form-field-control.ts","../../src/lib/form-field/form-field-number-control.ts","../../src/lib/form-field/hint.ts","../../src/lib/form-field/prefix.ts","../../src/lib/form-field/stepper.ts","../../src/lib/form-field/suffix.ts","../../src/lib/form-field/form-field.ts","../../src/lib/form-field/form-field.module.ts","../../src/lib/input/input-value-accessor.ts","../../src/lib/input/stepperUtils.ts","../../src/lib/input/input.ts","../../node_modules/tslib/tslib.es6.js","../../src/lib/core/utils/utils.ts","../../src/lib/core/common-behaviors/common-module.ts","../../src/lib/core/common-behaviors/disabled.ts","../../src/lib/core/common-behaviors/color.ts","../../src/lib/core/common-behaviors/tabindex.ts","../../src/lib/core/common-behaviors/error-state.ts","../../src/lib/core/option/option.ts","../../src/lib/core/overlay/overlay-position-map.ts","../../src/lib/form-field/form-field-errors.ts","../../src/lib/input/input-errors.ts","../../src/lib/select/select-errors.ts","../../src/lib/core/line/line.ts","../../src/lib/core/error/error-options.ts","../../src/lib/core/selection/pseudo-checkbox/pseudo-checkbox.ts","../../src/lib/core/selection/index.ts","../../src/lib/core/services/measure-scrollbar.service.ts","../../src/lib/core/option/optgroup.ts","../../src/lib/core/option/index.ts","../../src/lib/core/label/label-options.ts","../../src/lib/core/animation/fade-animations.ts","../../src/lib/icon/icon.component.ts","../../src/lib/icon/icon.module.ts"],"sourcesContent":["import {\n    ChangeDetectionStrategy,\n    Component,\n    Directive,\n    ElementRef,\n    Input,\n    NgZone, OnDestroy,\n    OnInit,\n    Renderer2,\n    ViewEncapsulation\n} from '@angular/core';\n\nimport { coerceBooleanProperty, coerceCssPixelValue, coerceNumberProperty } from '@ptsecurity/cdk/coercion';\n\n\ninterface IArea {\n    area: McSplitterAreaDirective;\n    index: number;\n    order: number;\n    initialSize: number;\n}\n\ninterface IPoint {\n    x: number;\n    y: number;\n}\n\n\nconst enum AttributeProperty {\n    Disabled = 'disabled'\n}\n\nconst enum Cursor {\n    Default = 'default',\n    ResizeColumn = 'col-resize',\n    ResizeRow = 'row-resize'\n}\n\nconst enum StyleProperty {\n    Cursor = 'cursor',\n    Flex = 'flex',\n    FlexBasis = 'flex-basis',\n    FlexDirection = 'flex-direction',\n    Height = 'height',\n    MaxWidth = 'max-width',\n    MinHeight = 'min-height',\n    MinWidth = 'minWidth',\n    OffsetHeight = 'offsetHeight',\n    OffsetWidth = 'offsetWidth',\n    Order = 'order',\n    Width = 'width'\n}\n\nconst enum State {\n    Disabled = 'disabled',\n    Horizontal = 'horizontal',\n    Vertical = 'vertical'\n}\n\nexport const enum Direction {\n    Horizontal = 'horizontal',\n    Vertical = 'vertical'\n}\n\n@Component({\n    selector: 'mc-splitter',\n    preserveWhitespaces: false,\n    styleUrls: ['splitter.css'],\n    templateUrl: './splitter.component.html',\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class McSplitterComponent implements OnInit {\n    readonly areas: IArea[] = [];\n\n    private _direction: Direction;\n    private _disabled: boolean = false;\n    private _gutterSize: number = 6;\n\n    private isDragging: boolean = false;\n\n    private readonly areaPositionDivider: number = 2;\n    private readonly listeners: (() => void)[] = [];\n\n    @Input()\n    set direction(direction: Direction) {\n        this._direction = direction;\n    }\n\n    get direction(): Direction {\n        return this._direction;\n    }\n\n    @Input()\n    set disabled(disabled: boolean) {\n        this._disabled = coerceBooleanProperty(disabled);\n    }\n\n    get disabled(): boolean {\n        return this._disabled;\n    }\n\n    @Input()\n    set gutterSize(gutterSize: number) {\n        const size = coerceNumberProperty(gutterSize);\n        this._gutterSize = size > 0 ? size : this.gutterSize;\n    }\n\n    get gutterSize(): number {\n        return this._gutterSize;\n    }\n\n    constructor(private elementRef: ElementRef,\n                private ngZone: NgZone,\n                private renderer: Renderer2) {}\n\n    addArea(area: McSplitterAreaDirective): void {\n        const index: number = this.areas.length;\n        const order: number = index * this.areaPositionDivider;\n        const size: number = area.getSize();\n\n        area.setOrder(order);\n\n        this.areas.push({\n            area,\n            index,\n            order,\n            initialSize: size\n        });\n    }\n\n    ngOnInit(): void {\n        if (!this.direction) {\n            this.direction = Direction.Horizontal;\n        }\n\n        this.setStyle(StyleProperty.FlexDirection, this.isVertical() ? 'column' : 'row');\n    }\n\n    onMouseDown(event: MouseEvent, leftAreaIndex: number, rightAreaIndex: number) {\n        if (this.disabled) {\n            return;\n        }\n\n        const leftArea = this.areas[leftAreaIndex];\n        const rightArea = this.areas[rightAreaIndex];\n\n        const startPoint: IPoint = {\n            x: event.screenX,\n            y: event.screenY\n        };\n\n        leftArea.initialSize = leftArea.area.getSize();\n        rightArea.initialSize = rightArea.area.getSize();\n\n        this.areas.forEach((item) => {\n            const size = item.area.getSize();\n            item.area.disableFlex();\n            item.area.setSize(size);\n        });\n\n        this.ngZone.runOutsideAngular(() => {\n            this.listeners.push(\n                this.renderer.listen(\n                    'document',\n                    'mouseup',\n                    () => this.onMouseUp()\n                )\n            );\n        });\n\n        this.ngZone.runOutsideAngular(() => {\n            this.listeners.push(\n                this.renderer.listen(\n                    'document',\n                    'mousemove',\n                    (e: MouseEvent) => this.onMouseMove(e, startPoint, leftArea, rightArea)\n                )\n            );\n        });\n\n        this.isDragging = true;\n    }\n\n    removeArea(area: McSplitterAreaDirective): void {\n        let indexToRemove: number = -1;\n\n        this.areas.some((item, index) => {\n            if (item.area === area) {\n                indexToRemove = index;\n\n                return true;\n            }\n\n            return false;\n        });\n\n        if (indexToRemove === -1) {\n            return;\n        }\n\n        this.areas.splice(indexToRemove, 1);\n    }\n\n    private isVertical(): boolean {\n        return this.direction === Direction.Vertical;\n    }\n\n    private onMouseMove(event: MouseEvent, startPoint: IPoint, leftArea: IArea, rightArea: IArea) {\n        if (!this.isDragging || this.disabled) {\n            return;\n        }\n\n        const endPoint: IPoint = {\n            x: event.screenX,\n            y: event.screenY\n        };\n\n        const offset = this.isVertical()\n            ? startPoint.y - endPoint.y\n            : startPoint.x - endPoint.x;\n\n        const newLeftAreaSize = leftArea.initialSize - offset;\n        const newRightAreaSize = rightArea.initialSize + offset;\n\n        const minLeftAreaSize = leftArea.area.getMinSize();\n        const minRightAreaSize = rightArea.area.getMinSize();\n\n        if (newLeftAreaSize <= minLeftAreaSize || newRightAreaSize <= minRightAreaSize) {\n            const rightAreaOffset = leftArea.initialSize - minLeftAreaSize;\n\n            leftArea.area.setSize(minLeftAreaSize);\n            rightArea.area.setSize(rightArea.initialSize + rightAreaOffset);\n        } else if (newLeftAreaSize <= 0) {\n            leftArea.area.setSize(0);\n            rightArea.area.setSize(rightArea.initialSize + leftArea.initialSize);\n        } else if (newRightAreaSize <= 0) {\n            leftArea.area.setSize(rightArea.initialSize + leftArea.initialSize);\n            rightArea.area.setSize(0);\n        } else {\n            leftArea.area.setSize(newLeftAreaSize);\n            rightArea.area.setSize(newRightAreaSize);\n        }\n    }\n\n    private onMouseUp() {\n        while (this.listeners.length > 0) {\n            const unsubscribe = this.listeners.pop();\n\n            if (unsubscribe) {\n                unsubscribe();\n            }\n        }\n\n        this.isDragging = false;\n    }\n\n    private setStyle(property: StyleProperty, value: string | number) {\n        this.renderer.setStyle(this.elementRef.nativeElement, property, value);\n    }\n}\n\n@Directive({\n    selector: 'mc-gutter'\n})\nexport class McGutterDirective implements OnInit {\n    private _direction: Direction = Direction.Vertical;\n    private _disabled: boolean = false;\n    private _order: number = 0;\n    private _size: number = 6;\n\n    @Input()\n    set direction(direction: Direction) {\n        this._direction = direction;\n    }\n\n    get direction(): Direction {\n        return this._direction;\n    }\n\n    @Input()\n    set disabled(disabled: boolean) {\n        this._disabled = coerceBooleanProperty(disabled);\n    }\n\n    get disabled(): boolean {\n        return this._disabled;\n    }\n\n    @Input()\n    set order(order: number) {\n        this._order = coerceNumberProperty(order);\n    }\n\n    get order(): number {\n        return this._order;\n    }\n\n    @Input()\n    set size(size: number) {\n        this._size = coerceNumberProperty(size);\n    }\n\n    get size(): number {\n        return this._size;\n    }\n\n    constructor(private renderer: Renderer2,\n                private elementRef: ElementRef) {\n    }\n\n    ngOnInit(): void {\n        this.setStyle(StyleProperty.Cursor, this.getCursor(this.getState()));\n        this.setStyle(StyleProperty.FlexBasis, coerceCssPixelValue(this.size));\n        this.setStyle(this.isVertical() ? StyleProperty.Height : StyleProperty.Width, coerceCssPixelValue(this.size));\n        this.setStyle(StyleProperty.Order, this.order);\n\n        if (!this.isVertical()) {\n            this.setStyle(StyleProperty.Height, '100%');\n        }\n\n        if (this.disabled) {\n            this.setAttr(AttributeProperty.Disabled, 'true');\n        }\n\n        // fix IE issue with gutter icon. flex-direction is requied for flex alignment options\n        this.setStyle(StyleProperty.FlexDirection, this.isVertical() ? 'row' : 'column');\n    }\n\n    private isVertical(): boolean {\n        return this.direction === Direction.Vertical;\n    }\n\n    private getCursor(state: State): string {\n        switch (state) {\n            case State.Disabled:\n                return Cursor.Default;\n            case State.Vertical:\n                return  Cursor.ResizeRow;\n            case State.Horizontal:\n                return Cursor.ResizeColumn;\n            default:\n                throw Error(`Unknown gutter state for cursor: ${state}`);\n        }\n    }\n\n    private getState(): State {\n        return this.disabled\n            ? State.Disabled\n            : this.direction === Direction.Vertical\n                ? State.Vertical\n                : State.Horizontal;\n    }\n\n    private setStyle(property: StyleProperty, value: string | number) {\n        this.renderer.setStyle(this.elementRef.nativeElement, property, value);\n    }\n\n    private setAttr(attribute: AttributeProperty, value: string) {\n        this.renderer.setAttribute(this.elementRef.nativeElement, attribute, value);\n    }\n}\n\n@Directive({\n    selector: 'mc-splitter-area'\n})\nexport class McSplitterAreaDirective implements OnInit, OnDestroy {\n    constructor(private elementRef: ElementRef,\n                private renderer: Renderer2,\n                private splitter: McSplitterComponent) {}\n\n    disableFlex(): void {\n        this.renderer.removeStyle(this.elementRef.nativeElement, 'flex');\n    }\n\n    ngOnInit(): void {\n        this.splitter.addArea(this);\n\n        this.removeStyle(StyleProperty.MaxWidth);\n        this.setStyle(StyleProperty.Flex, '1');\n\n        if (this.splitter.direction === Direction.Vertical) {\n            this.setStyle(StyleProperty.Width, '100%');\n            this.removeStyle(StyleProperty.Height);\n        } else {\n            this.setStyle(StyleProperty.Height, '100%');\n            this.removeStyle(StyleProperty.Width);\n        }\n    }\n\n    ngOnDestroy(): void {\n        this.splitter.removeArea(this);\n    }\n\n    setOrder(order: number): void {\n        this.setStyle(StyleProperty.Order, order);\n    }\n\n    setSize(size: number): void {\n        const sz = coerceNumberProperty(size);\n        this.setStyle(this.getSizeProperty(), coerceCssPixelValue(sz));\n    }\n\n    getSize(): number {\n        return this.elementRef.nativeElement[this.getOffsetSizeProperty()];\n    }\n\n    getMinSize(): number {\n        const styles = getComputedStyle(this.elementRef.nativeElement);\n\n        return parseFloat(styles[this.getMinSizeProperty()]);\n    }\n\n    private isVertical(): boolean {\n        return this.splitter.direction === Direction.Vertical;\n    }\n\n    private getMinSizeProperty(): StyleProperty {\n        return this.isVertical()\n            ? StyleProperty.MinHeight\n            : StyleProperty.MinWidth;\n    }\n\n    private getOffsetSizeProperty(): StyleProperty {\n        return this.isVertical()\n            ? StyleProperty.OffsetHeight\n            : StyleProperty.OffsetWidth;\n    }\n\n    private getSizeProperty(): StyleProperty {\n        return this.isVertical()\n            ? StyleProperty.Height\n            : StyleProperty.Width;\n    }\n\n    private setStyle(style: StyleProperty, value: string | number) {\n        this.renderer.setStyle(this.elementRef.nativeElement, style, value);\n    }\n\n    private removeStyle(style: StyleProperty) {\n        this.renderer.removeStyle(this.elementRef.nativeElement, style);\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { McIconModule } from '@ptsecurity/mosaic/icon';\n\nimport { McGutterDirective, McSplitterAreaDirective, McSplitterComponent } from './splitter.component';\n\n\n@NgModule({\n    imports: [\n        CommonModule,\n        McIconModule\n    ],\n    exports: [\n        McGutterDirective,\n        McSplitterAreaDirective,\n        McSplitterComponent\n    ],\n    declarations: [\n        McGutterDirective,\n        McSplitterAreaDirective,\n        McSplitterComponent\n    ]\n})\nexport class McSplitterModule {\n}\n","import {\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    Directive,\n    ElementRef,\n    EventEmitter,\n    HostBinding,\n    Inject,\n    InjectionToken,\n    Input,\n    NgZone,\n    OnDestroy,\n    OnInit,\n    Optional,\n    Output,\n    TemplateRef,\n    ViewContainerRef,\n    ViewEncapsulation\n} from '@angular/core';\nimport { Directionality } from '@ptsecurity/cdk/bidi';\nimport { coerceBooleanProperty } from '@ptsecurity/cdk/coercion';\nimport { ESCAPE } from '@ptsecurity/cdk/keycodes';\nimport {\n    ConnectedOverlayPositionChange,\n    ConnectionPositionPair,\n    Overlay,\n    OverlayRef,\n    ScrollDispatcher,\n    IScrollStrategy,\n    FlexibleConnectedPositionStrategy,\n    IOverlayConnectionPosition,\n    IOriginConnectionPosition,\n    HorizontalConnectionPos,\n    VerticalConnectionPos\n} from '@ptsecurity/cdk/overlay';\nimport { ComponentPortal } from '@ptsecurity/cdk/portal';\nimport {\n    fadeAnimation,\n    DEFAULT_4_POSITIONS,\n    POSITION_MAP\n} from '@ptsecurity/mosaic/core';\nimport { BehaviorSubject, Observable, Subject } from 'rxjs';\nimport { distinctUntilChanged, takeUntil } from 'rxjs/operators';\n\n\n@Component({\n    selector: 'mc-tooltip',\n    animations: [ fadeAnimation ],\n    templateUrl: './tooltip.component.html',\n    preserveWhitespaces: false,\n    styleUrls: ['./tooltip.css'],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    host: {\n        '(body:click)': 'this._handleBodyInteraction()'\n    }\n})\n\nexport class McToolTipComponent {\n    _prefix = 'mc-tooltip_placement';\n    _positions: ConnectionPositionPair[] = [ ...DEFAULT_4_POSITIONS ];\n    _classMap = {};\n    _placement = 'top';\n    _trigger = 'hover';\n    isTitleString: boolean;\n    visibleSource = new BehaviorSubject<boolean>(false);\n    $visible: Observable<boolean> = this.visibleSource.asObservable();\n    _title: string | TemplateRef<void>;\n    showTId: number;\n    hideTId: number;\n    availablePositions: any;\n\n    @Output() mcVisibleChange: EventEmitter<boolean> = new EventEmitter();\n\n    @Input() mcMouseEnterDelay = 400;\n\n    @Input() mcMouseLeaveDelay = 0;\n\n    @Input()\n    set mcTitle(value: string | TemplateRef<void>) {\n        this.isTitleString = !(value instanceof TemplateRef);\n\n        if (this.isTitleString) {\n            this._title = value;\n        }\n    }\n\n    get mcTitle(): string | TemplateRef<void> {\n        return this._title;\n    }\n\n    @Input()\n    set mcVisible(value: boolean) {\n        const visible = coerceBooleanProperty(value);\n\n        if (this.visibleSource.value !== visible) {\n            this.visibleSource.next(visible);\n            this.mcVisibleChange.emit(visible);\n        }\n    }\n\n    get mcVisible(): boolean {\n        return this.visibleSource.value;\n    }\n\n    @Input()\n    set mcTrigger(value: string) {\n        this._trigger = value;\n    }\n\n    get mcTrigger(): string {\n        return this._trigger;\n    }\n\n    @Input()\n    set mcPlacement(value: string) {\n        if (value !== this._placement) {\n            this._placement = value;\n            this._positions.unshift(POSITION_MAP[ this.mcPlacement ]);\n        } else if (!value) {\n            this._placement = 'top';\n        }\n    }\n    get mcPlacement(): string {\n        return this._placement;\n    }\n\n    /** Subject for notifying that the tooltip has been hidden from the view */\n    private readonly _onHide: Subject<any> = new Subject();\n    private _closeOnInteraction: boolean = false;\n\n    constructor(public cdr: ChangeDetectorRef) {\n        this.availablePositions = POSITION_MAP;\n    }\n\n    show(): void {\n        if (this.hideTId) {\n            clearTimeout(this.hideTId);\n        }\n\n        if (!this.isContentEmpty()) {\n            this._closeOnInteraction = true;\n            this.showTId = setTimeout(() => {\n                this.mcVisible = true;\n                this.mcVisibleChange.emit(true);\n\n                // Mark for check so if any parent component has set the\n                // ChangeDetectionStrategy to OnPush it will be checked anyways\n                this._markForCheck();\n            }, this.mcMouseEnterDelay);\n        }\n    }\n\n    hide(): void {\n        if (this.showTId) {\n            clearTimeout(this.showTId);\n        }\n\n        this.hideTId = setTimeout(() => {\n            this.mcVisible = false;\n            this.mcVisibleChange.emit(false);\n            this._onHide.next();\n\n            // Mark for check so if any parent component has set the\n            // ChangeDetectionStrategy to OnPush it will be checked anyways\n            this._markForCheck();\n        }, this.mcMouseLeaveDelay);\n    }\n\n    setClassMap(): void {\n        this._classMap = {\n            [ `${this._prefix}-${this._placement}` ]: true\n        };\n    }\n\n    isContentEmpty(): boolean {\n        return this.isTitleString ? (this.mcTitle === '' || !this.mcTitle) : false;\n    }\n\n    /** Returns an observable that notifies when the tooltip has been hidden from view. */\n    afterHidden(): Observable<void> {\n        return this._onHide.asObservable();\n    }\n\n    _markForCheck(): void {\n        this.cdr.markForCheck();\n    }\n\n    _handleBodyInteraction(): void {\n        if (this._closeOnInteraction) {\n            this.hide();\n        }\n    }\n}\n\nexport const MC_TOOLTIP_SCROLL_STRATEGY =\n    new InjectionToken<() => IScrollStrategy>('mc-tooltip-scroll-strategy');\n\n/** @docs-private */\nexport function MC_TOOLTIP_SCROLL_STRATEGY_FACTORY(overlay: Overlay): () => IScrollStrategy {\n    return () => overlay.scrollStrategies.reposition({scrollThrottle: 20});\n}\n\n/** @docs-private */\nexport const MC_TOOLTIP_SCROLL_STRATEGY_FACTORY_PROVIDER = {\n    provide: MC_TOOLTIP_SCROLL_STRATEGY,\n    deps: [Overlay],\n    useFactory: MC_TOOLTIP_SCROLL_STRATEGY_FACTORY\n};\n\n/** Creates an error to be thrown if the user supplied an invalid tooltip position. */\nexport function getMcTooltipInvalidPositionError(position: string) {\n    return Error(`McTooltip position \"${position}\" is invalid.`);\n}\n\nconst VIEWPORT_MARGIN: number = 8;\n\n@Directive({\n    selector: '[mc-tooltip]',\n    host: {\n        '(keydown)': 'handleKeydown($event)',\n        '(touchend)': 'handleTouchend()'\n    }\n})\n\nexport class McTooltipDirective implements OnInit, OnDestroy {\n    isTooltipOpen: boolean = false;\n    isDynamicTooltip = false;\n    parentDisabled: boolean = false;\n    _title: string;\n    _disabled: boolean = false;\n    _mouseEnterDelay: number;\n    _mouseLeaveDelay: number;\n    _visible: boolean;\n    _trigger: string = 'hover';\n    _placement: string = 'top';\n    _overlayRef: OverlayRef | null;\n    _portal: ComponentPortal<McToolTipComponent>;\n    availablePositions: any;\n    tooltip: McToolTipComponent | null;\n\n    @Output() mcVisibleChange = new EventEmitter<boolean>();\n    private $unsubscribe = new Subject<void>();\n\n    @Input('mc-tooltip')\n    set mcTitle(title: string) {\n        this._title = title;\n        this.updateCompValue('mcTitle', title);\n    }\n\n    get mcTitle(): string {\n        return this._title;\n    }\n\n    @Input('mcTitle')\n    set setTitle(title: string) {\n        this.mcTitle = title;\n    }\n\n    @Input('mcTooltipDisabled')\n    get disabled(): boolean { return this._disabled; }\n    set disabled(value) {\n        this._disabled = coerceBooleanProperty(value);\n    }\n\n    @Input('mcMouseEnterDelay')\n    set mcMouseEnterDelay(value: number) {\n        this._mouseEnterDelay = value;\n        this.updateCompValue('mcMouseEnterDelay', value);\n    }\n\n    get mcMouseEnterDelay(): number {\n        return this._mouseEnterDelay;\n    }\n\n    @Input('mcMouseLeaveDelay')\n    set mcMouseLeaveDelay(value: number) {\n        this._mouseLeaveDelay = value;\n        this.updateCompValue('mcMouseLeaveDelay', value);\n    }\n\n    get mcMouseLeaveDelay(): number {\n        return this._mouseEnterDelay;\n    }\n\n    @Input('mcVisible')\n    set mcVisible(value: boolean) {\n        this._visible = value;\n        this.updateCompValue('mcVisible', value);\n    }\n\n    get mcVisible(): boolean {\n        return this._visible;\n    }\n\n    @Input('mcTrigger')\n    set mcTrigger(value: string) {\n        this._trigger = value;\n        this.updateCompValue('mcTrigger', value);\n    }\n\n    get mcTrigger(): string {\n        return this._trigger;\n    }\n\n    @Input('mcPlacement')\n    set mcPlacement(value: string) {\n        if (value) {\n            this._placement = value;\n            this.updateCompValue('mcPlacement', value);\n        } else {\n            this._placement = 'top';\n        }\n    }\n\n    get mcPlacement(): string {\n        return this._placement;\n    }\n\n    @HostBinding('class.mc-tooltip-open')\n    get isOpen(): boolean {\n        return this.isTooltipOpen;\n    }\n\n    @HostBinding('class.disabled')\n    get isParentDisabled(): boolean {\n        return this.parentDisabled;\n    }\n\n    private manualListeners = new Map<string, EventListenerOrEventListenerObject>();\n    private readonly _destroyed = new Subject<void>();\n\n    constructor(\n        private _overlay: Overlay,\n        private elementRef: ElementRef,\n        private _ngZone: NgZone,\n        private _scrollDispatcher: ScrollDispatcher,\n        private hostView: ViewContainerRef,\n        @Inject(MC_TOOLTIP_SCROLL_STRATEGY) private _scrollStrategy,\n        @Optional() private _dir: Directionality) {\n            this.availablePositions = POSITION_MAP;\n        }\n\n    /** Create the overlay config and position strategy */\n    _createOverlay(): OverlayRef {\n        if (this._overlayRef) {\n            return this._overlayRef;\n        }\n\n        // Create connected position strategy that listens for scroll events to reposition.\n        const strategy = this._overlay.position()\n            .flexibleConnectedTo(this.elementRef)\n            .withTransformOriginOn('.mc-tooltip')\n            .withFlexibleDimensions(false)\n            .withViewportMargin(VIEWPORT_MARGIN)\n            .withPositions([ ...DEFAULT_4_POSITIONS ]);\n\n        const scrollableAncestors = this._scrollDispatcher\n            .getAncestorScrollContainers(this.elementRef);\n\n        strategy.withScrollableContainers(scrollableAncestors);\n\n        strategy.positionChanges.pipe(takeUntil(this._destroyed)).subscribe((change) => {\n            if (this.tooltip) {\n                this.onPositionChange(change);\n                if (change.scrollableViewProperties.isOverlayClipped && this.tooltip.mcVisible) {\n                    // After position changes occur and the overlay is clipped by\n                    // a parent scrollable then close the tooltip.\n                    this._ngZone.run(() => this.hide());\n                }\n            }\n        });\n\n        this._overlayRef = this._overlay.create({\n            direction: this._dir,\n            positionStrategy: strategy,\n            panelClass: 'mc-tooltip-panel',\n            scrollStrategy: this._scrollStrategy()\n        });\n\n        this._updatePosition();\n\n        this._overlayRef.detachments()\n            .pipe(takeUntil(this._destroyed))\n            .subscribe(() => this._detach());\n\n        return this._overlayRef;\n    }\n\n    _detach() {\n        if (this._overlayRef && this._overlayRef.hasAttached()) {\n            this._overlayRef.detach();\n        }\n\n        this.tooltip = null;\n    }\n\n    onPositionChange($event: ConnectedOverlayPositionChange): void {\n        let updatedPlacement = this.mcPlacement;\n        Object.keys(this.availablePositions).some((key) => {\n            if ($event.connectionPair.originX === this.availablePositions[key].originX &&\n                $event.connectionPair.originY === this.availablePositions[key].originY &&\n                $event.connectionPair.overlayX === this.availablePositions[key].overlayX &&\n                $event.connectionPair.overlayY === this.availablePositions[key].overlayY) {\n                updatedPlacement = key;\n\n                return true;\n            }\n\n            return false;\n        });\n        this.updateCompValue('mcPlacement', updatedPlacement);\n\n        if (this.tooltip) {\n            this.tooltip.setClassMap();\n        }\n\n        this.handlePositioningUpdate();\n    }\n\n    handlePositioningUpdate() {\n        if (!this._overlayRef) {\n            this._overlayRef = this._createOverlay();\n        }\n        if (this.mcPlacement === 'right' || this.mcPlacement === 'left') {\n            const pos =\n                (this._overlayRef.overlayElement.clientHeight -\n                    this.hostView.element.nativeElement.clientHeight) / 2; // tslint:disable-line\n            const currentContainer = this._overlayRef.overlayElement.style.top || '0px';\n            this._overlayRef.overlayElement.style.top =\n                `${parseInt(currentContainer.split('px')[0], 10) + pos - 1}px`;\n            // TODO: обновлять положение стрелки\\указателя\\\"дятла\"\n        }\n    }\n\n    // tslint:disable-next-line:no-any\n    updateCompValue(key: string, value: any): void {\n        if (this.isDynamicTooltip && value) {\n            if (this.tooltip) {\n                this.tooltip[key] = value;\n            }\n        }\n    }\n\n    ngOnInit(): void {\n        if (this.mcTrigger === 'hover') {\n\n            this.manualListeners\n                .set('mouseenter', () => this.show())\n                .set('mouseleave', () => this.hide())\n                .forEach((listener, event) => this.elementRef.nativeElement.addEventListener(event, listener));\n        }\n\n        if (this.mcTrigger === 'focus') {\n\n            this.manualListeners\n                .set('focus', () => this.show())\n                .set('blur', () => this.hide())\n                .forEach((listener, event) => this.elementRef.nativeElement.addEventListener(event, listener));\n        }\n    }\n\n    ngOnDestroy(): void {\n        if (this._overlayRef) {\n            this._overlayRef.dispose();\n        }\n        this.manualListeners.forEach((listener, event) =>\n            this.elementRef.nativeElement.removeEventListener(event, listener));\n        this.manualListeners.clear();\n\n        this.$unsubscribe.next();\n        this.$unsubscribe.complete();\n    }\n\n    handleKeydown(e: KeyboardEvent) {\n        if (this.isTooltipOpen && e.keyCode === ESCAPE) { // tslint:disable-line\n            this.hide();\n        }\n    }\n\n    handleTouchend() {\n        this.hide();\n    }\n\n    /** Updates the position of the current tooltip. */\n    _updatePosition() {\n        if (!this._overlayRef) {\n            this._overlayRef = this._createOverlay();\n        }\n        const position =\n            this._overlayRef.getConfig().positionStrategy as FlexibleConnectedPositionStrategy;\n        const origin = this._getOrigin();\n        const overlay = this._getOverlayPosition();\n\n        position.withPositions([\n            {...origin.main, ...overlay.main},\n            {...origin.fallback, ...overlay.fallback}\n        ]);\n    }\n\n    /**\n     * Returns the origin position and a fallback position based on the user's position preference.\n     * The fallback position is the inverse of the origin (e.g. `'below' -> 'above'`).\n     */\n    _getOrigin(): {main: IOriginConnectionPosition; fallback: IOriginConnectionPosition} {\n        const position = this.mcPlacement;\n        const isLtr = !this._dir || this._dir.value === 'ltr';\n        let originPosition: IOriginConnectionPosition;\n\n        if (position === 'top' || position === 'bottom') {\n            originPosition = {originX: 'center', originY: position === 'top' ? 'top' : 'bottom'};\n        } else if (\n            position === 'top' ||\n            (position === 'left' && isLtr) ||\n            (position === 'right' && !isLtr)) {\n            originPosition = {originX: 'start', originY: 'center'};\n        } else if (\n            position === 'bottom' ||\n            (position === 'right' && isLtr) ||\n            (position === 'left' && !isLtr)) {\n            originPosition = {originX: 'end', originY: 'center'};\n        } else {\n            throw getMcTooltipInvalidPositionError(position);\n        }\n\n        const {x, y} = this._invertPosition(originPosition.originX, originPosition.originY);\n\n        return {\n            main: originPosition,\n            fallback: {originX: x, originY: y}\n        };\n    }\n\n    /** Returns the overlay position and a fallback position based on the user's preference */\n    _getOverlayPosition(): {main: IOverlayConnectionPosition; fallback: IOverlayConnectionPosition} {\n        const position = this.mcPlacement;\n        const isLtr = !this._dir || this._dir.value === 'ltr';\n        let overlayPosition: IOverlayConnectionPosition;\n\n        if (position === 'top') {\n            overlayPosition = {overlayX: 'center', overlayY: 'bottom'};\n        } else if (position === 'bottom') {\n            overlayPosition = {overlayX: 'center', overlayY: 'top'};\n        } else if (\n            position === 'top' ||\n            (position === 'left' && isLtr) ||\n            (position === 'right' && !isLtr)) {\n            overlayPosition = {overlayX: 'end', overlayY: 'center'};\n        } else if (\n            position === 'bottom' ||\n            (position === 'right' && isLtr) ||\n            (position === 'left' && !isLtr)) {\n            overlayPosition = {overlayX: 'start', overlayY: 'center'};\n        } else {\n            throw getMcTooltipInvalidPositionError(position);\n        }\n\n        const {x, y} = this._invertPosition(overlayPosition.overlayX, overlayPosition.overlayY);\n\n        return {\n            main: overlayPosition,\n            fallback: {overlayX: x, overlayY: y}\n        };\n    }\n\n    /** Inverts an overlay position. */\n    private _invertPosition(x: HorizontalConnectionPos, y: VerticalConnectionPos) {\n        let newX: HorizontalConnectionPos = x;\n        let newY: VerticalConnectionPos = y;\n        if (this.mcPlacement === 'top' || this.mcPlacement === 'bottom') {\n            if (y === 'top') {\n                newY = 'bottom';\n            } else if (y === 'bottom') {\n                newY = 'top';\n            }\n        } else {\n            if (x === 'end') {\n                newX = 'start';\n            } else if (x === 'start') {\n                newX = 'end';\n            }\n        }\n\n        return {x: newX, y: newY};\n    }\n\n    private show(): void {\n        if (!this.disabled) {\n            if (!this.tooltip) {\n                const overlayRef = this._createOverlay();\n                this._detach();\n                this._portal = this._portal || new ComponentPortal(McToolTipComponent, this.hostView);\n                this.tooltip = overlayRef.attach(this._portal).instance;\n                this.tooltip.afterHidden()\n                    .pipe(takeUntil(this._destroyed))\n                    .subscribe(() => this._detach());\n                this.isDynamicTooltip = true;\n                const properties = [\n                    'mcTitle',\n                    'mcMouseEnterDelay',\n                    'mcMouseLeaveDelay',\n                    'mcVisible',\n                    'mcTrigger',\n                    'mcPlacement' ];\n                properties.forEach((property) => this.updateCompValue(property, this[ property ]));\n                this.tooltip.mcVisibleChange.pipe(takeUntil(this.$unsubscribe), distinctUntilChanged())\n                    .subscribe((data) => {\n                        this._visible = data;\n                        this.mcVisibleChange.emit(data);\n                    });\n            }\n            this._updatePosition();\n            this.tooltip.show();\n            this.isTooltipOpen = true;\n        }\n    }\n\n    private hide(): void {\n        if (this.tooltip) {\n            this.tooltip.hide();\n            this.isTooltipOpen = false;\n        }\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { OverlayModule } from '@ptsecurity/cdk/overlay';\n\nimport {\n    McToolTipComponent,\n    McTooltipDirective,\n    MC_TOOLTIP_SCROLL_STRATEGY_FACTORY_PROVIDER\n} from './tooltip.component';\n\n\n@NgModule({\n    declarations: [ McToolTipComponent, McTooltipDirective ],\n    exports: [ McToolTipComponent, McTooltipDirective ],\n    imports: [ BrowserAnimationsModule, CommonModule, OverlayModule ],\n    providers: [MC_TOOLTIP_SCROLL_STRATEGY_FACTORY_PROVIDER],\n    entryComponents: [ McToolTipComponent ]\n})\nexport class McToolTipModule {\n}\n","import { Version } from '@angular/core';\n\n\nexport const VERSION = new Version('0.0.1-75b1d7e');\n","export enum TimeParts {\n    hours,\n    minutes,\n    seconds\n}\n\nexport enum TimeFormats {\n    HHmmss = 'HH:mm:ss',\n    HHmm = 'HH:mm'\n}\n\nexport const TIMEFORMAT_PLACEHOLDERS: { [timeFormat: string]: string } = {\n    'hh:mm:ss': '  :  :  ',\n    'hh:mm': '  :  '\n};\n\nexport const DEFAULT_TIME_FORMAT: TimeFormats = TimeFormats.HHmm;\n\nexport const HOURS_MINUTES_SECONDS_REGEXP =\n    new RegExp(/^([0-9]|0[0-9]|1[0-9]|2[0-3]):([0-5][0-9]|[0-9]):([0-5][0-9]|[0-9])?$/);\nexport const HOURS_MINUTES_REGEXP = /^([0-9]|0[0-9]|1[0-9]|2[0-3]):([0-5][0-9]|[0-9])?$/;\nexport const HOURS_ONLY_REGEXP = /^([0-9]|0[0-9]|1[0-9]|2[0-3]):?$/;\n\nexport const SECONDS_PER_MINUTE: number = 59;\nexport const MINUTES_PER_HOUR: number = 59;\nexport const HOURS_PER_DAY: number = 23;\n\n// TODO Move it to common CDK\nexport const ARROW_UP_KEYCODE: string = 'ArrowUp';\nexport const ARROW_DOWN_KEYCODE: string = 'ArrowDown';\nexport const ARROW_LEFT_KEYCODE: string = 'ArrowLeft';\nexport const ARROW_RIGHT_KEYCODE: string = 'ArrowRight';\n","/* tslint:disable:no-empty */\n\nimport { ActiveDescendantKeyManager } from '@ptsecurity/cdk/a11y';\nimport { Directionality } from '@ptsecurity/cdk/bidi';\nimport { coerceBooleanProperty } from '@ptsecurity/cdk/coercion';\nimport { SelectionModel } from '@ptsecurity/cdk/collections';\nimport {\n    DOWN_ARROW,\n    END,\n    ENTER,\n    HOME,\n    LEFT_ARROW,\n    RIGHT_ARROW,\n    SPACE,\n    UP_ARROW,\n    A\n} from '@ptsecurity/cdk/keycodes';\nimport {\n    CdkConnectedOverlay,\n    Overlay,\n    RepositionScrollStrategy,\n    IScrollStrategy,\n    ViewportRuler\n} from '@ptsecurity/cdk/overlay';\n\nimport {\n    AfterContentInit, AfterViewInit,\n    Attribute,\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    ContentChild,\n    ContentChildren,\n    Directive,\n    DoCheck,\n    ElementRef,\n    EventEmitter,\n    Inject,\n    InjectionToken,\n    Input,\n    isDevMode,\n    NgZone,\n    OnChanges,\n    OnDestroy,\n    OnInit,\n    Optional,\n    Output,\n    QueryList, Renderer2,\n    Self,\n    SimpleChanges,\n    ViewChild, ViewChildren,\n    ViewEncapsulation\n} from '@angular/core';\nimport { ControlValueAccessor, FormGroupDirective, NgControl, NgForm } from '@angular/forms';\nimport {\n    _countGroupLabelsBeforeOption,\n    _getOptionScrollPosition,\n    CanDisable,\n    CanDisableCtor,\n    CanUpdateErrorState,\n    CanUpdateErrorStateCtor,\n    ErrorStateMatcher,\n    HasTabIndex, HasTabIndexCtor,\n    MC_OPTION_PARENT_COMPONENT,\n    McOptgroup,\n    McOption,\n    McOptionSelectionChange,\n    mixinDisabled,\n    mixinErrorState,\n    mixinTabIndex\n} from '@ptsecurity/mosaic/core';\n\nimport { McFormField, McFormFieldControl } from '@ptsecurity/mosaic/form-field';\nimport { McTag } from '@ptsecurity/mosaic/tag';\n\n\nimport { defer, merge, Observable, Subject } from 'rxjs';\nimport {\n    filter,\n    map,\n    startWith,\n    switchMap,\n    take,\n    takeUntil,\n    distinctUntilChanged\n} from 'rxjs/operators';\n\nimport {\n    getMcSelectDynamicMultipleError,\n    getMcSelectNonArrayValueError,\n    getMcSelectNonFunctionValueError\n} from './select-errors';\n\nimport { mcSelectAnimations } from './select-animations';\n\n\nlet nextUniqueId = 0;\n\n/**\n * The following style constants are necessary to save here in order\n * to properly calculate the alignment of the selected option over\n * the trigger element.\n */\n\n/** The max height of the select's overlay panel */\nexport const SELECT_PANEL_MAX_HEIGHT = 224;\n\n/** The panel's padding on the x-axis */\nexport const SELECT_PANEL_PADDING_X = 1;\n\n/** The panel's x axis padding if it is indented (e.g. there is an option group). */\n/* tslint:disable-next-line:no-magic-numbers */\nexport const SELECT_PANEL_INDENT_PADDING_X = SELECT_PANEL_PADDING_X * 2;\n\n/** The height of the select items in `em` units. */\nexport const SELECT_ITEM_HEIGHT_EM = 2;\n\n/**\n * The select panel will only \"fit\" inside the viewport if it is positioned at\n * this value or more away from the viewport boundary.\n */\nexport const SELECT_PANEL_VIEWPORT_PADDING = 8;\n\n/** Injection token that determines the scroll handling while a select is open. */\nexport const MC_SELECT_SCROLL_STRATEGY =\n    new InjectionToken<() => IScrollStrategy>('mc-select-scroll-strategy');\n\n/** @docs-private */\nexport function MC_SELECT_SCROLL_STRATEGY_PROVIDER_FACTORY(overlay: Overlay):\n    () => RepositionScrollStrategy {\n    return () => overlay.scrollStrategies.reposition();\n}\n\n/** @docs-private */\nexport const MC_SELECT_SCROLL_STRATEGY_PROVIDER = {\n    provide: MC_SELECT_SCROLL_STRATEGY,\n    deps: [Overlay],\n    useFactory: MC_SELECT_SCROLL_STRATEGY_PROVIDER_FACTORY\n};\n\n/** Change event object that is emitted when the select value has changed. */\nexport class McSelectChange {\n    constructor(\n        /** Reference to the select that emitted the change event. */\n        public source: McSelect,\n        /** Current value of the select that emitted the event. */\n        public value: any) {\n    }\n}\n\n// Boilerplate for applying mixins to McSelect.\n/** @docs-private */\nexport class McSelectBase {\n    constructor(\n        public _elementRef: ElementRef,\n        public _defaultErrorStateMatcher: ErrorStateMatcher,\n        public _parentForm: NgForm,\n        public _parentFormGroup: FormGroupDirective,\n        public ngControl: NgControl\n    ) {}\n}\n\nexport const _McSelectMixinBase:\n    CanDisableCtor &\n    HasTabIndexCtor &\n    CanUpdateErrorStateCtor & typeof McSelectBase\n    = mixinTabIndex(mixinDisabled(mixinErrorState(McSelectBase)));\n\n\n/**\n * Allows the user to customize the trigger that is displayed when the select has a value.\n */\n@Directive({ selector: 'mc-select-trigger' })\nexport class McSelectTrigger {}\n\n\n@Component({\n    selector: 'mc-select',\n    exportAs: 'mcSelect',\n    templateUrl: 'select.html',\n    styleUrls: ['./select.css'],\n    inputs: ['disabled', 'tabIndex'],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    host: {\n        '[attr.id]': 'id',\n        '[attr.tabindex]': 'tabIndex',\n        class: 'mc-select',\n        '[class.mc-disabled]': 'disabled',\n        '[class.mc-select-invalid]': 'errorState',\n        '[class.mc-select-required]': 'required',\n        '(keydown)': '_handleKeydown($event)',\n        '(focus)': '_onFocus()',\n        '(blur)': '_onBlur()',\n        '(window:resize)': '_calculateHiddenItems()'\n    },\n    animations: [\n        mcSelectAnimations.transformPanel,\n        mcSelectAnimations.fadeInContent\n    ],\n    providers: [\n        { provide: McFormFieldControl, useExisting: McSelect },\n        { provide: MC_OPTION_PARENT_COMPONENT, useExisting: McSelect }\n    ]\n})\nexport class McSelect extends _McSelectMixinBase implements\n    AfterContentInit, AfterViewInit, OnChanges, OnDestroy, OnInit, DoCheck, ControlValueAccessor, CanDisable,\n    HasTabIndex, McFormFieldControl<any>, CanUpdateErrorState {\n\n    /** The last measured value for the trigger's client bounding rect. */\n    _triggerRect: ClientRect;\n\n    /** The cached font-size of the trigger element. */\n    _triggerFontSize = 0;\n\n    /** Deals with the selection logic. */\n    _selectionModel: SelectionModel<McOption>;\n\n    /** Manages keyboard events for options in the panel. */\n    _keyManager: ActiveDescendantKeyManager<McOption>;\n\n    /** The IDs of child options to be passed to the aria-owns attribute. */\n    _optionIds: string = '';\n\n    /** The value of the select panel's transform-origin property. */\n    _transformOrigin: string = 'top';\n\n    /** Whether the panel's animation is done. */\n    _panelDoneAnimating: boolean = false;\n\n    /** Emits when the panel element is finished transforming in. */\n    _panelDoneAnimatingStream = new Subject<string>();\n\n    /** Strategy that will be used to handle scrolling while the select panel is open. */\n    _scrollStrategy = this._scrollStrategyFactory();\n\n    /**\n     * The y-offset of the overlay panel in relation to the trigger's top start corner.\n     * This must be adjusted to align the selected option text over the trigger text.\n     * when the panel opens. Will change based on the y-position of the selected option.\n     */\n    _offsetY = 0;\n\n    /**\n     * This position config ensures that the top \"start\" corner of the overlay\n     * is aligned with with the top \"start\" of the origin by default (overlapping\n     * the trigger completely). If the panel cannot fit below the trigger, it\n     * will fall back to a position above the trigger.\n     */\n    _positions = [\n        {\n            originX: 'start',\n            originY: 'bottom',\n            overlayX: 'start',\n            overlayY: 'top'\n        },\n        {\n            originX: 'start',\n            originY: 'top',\n            overlayX: 'start',\n            overlayY: 'bottom'\n        }\n    ];\n\n    /** Whether the select is focused. */\n    get focused(): boolean {\n        return this._focused || this._panelOpen;\n    }\n\n    /**\n     * @deprecated Setter to be removed as this property is intended to be readonly.\n     * @breaking-change 8.0.0\n     */\n    set focused(value: boolean) {\n        this._focused = value;\n    }\n\n    /** A name for this control that can be used by `mc-form-field`. */\n    controlType = 'mc-select';\n\n    @ViewChild('trigger') trigger: ElementRef;\n    @ViewChildren(McTag) tags: QueryList<McTag>;\n\n    @ViewChild('panel') panel: ElementRef;\n\n    /** Overlay pane containing the options. */\n    @ViewChild(CdkConnectedOverlay) overlayDir: CdkConnectedOverlay;\n\n    /** All of the defined select options. */\n    @ContentChildren(McOption, { descendants: true }) options: QueryList<McOption>;\n\n    /** All of the defined groups of options. */\n    @ContentChildren(McOptgroup) optionGroups: QueryList<McOptgroup>;\n\n    /** Classes to be passed to the select panel. Supports the same syntax as `ngClass`. */\n    @Input() panelClass: string | string[] | Set<string> | { [key: string]: any };\n\n    /** User-supplied override of the trigger element. */\n    @ContentChild(McSelectTrigger) customTrigger: McSelectTrigger;\n\n    /** Placeholder to be shown if no value has been selected. */\n    @Input()\n    get placeholder(): string {\n        return this._placeholder;\n    }\n\n    set placeholder(value: string) {\n        this._placeholder = value;\n        this.stateChanges.next();\n    }\n\n    /** Whether the component is required. */\n    @Input()\n    get required(): boolean {\n        return this._required;\n    }\n\n    set required(value: boolean) {\n        this._required = coerceBooleanProperty(value);\n        this.stateChanges.next();\n    }\n\n    /** Whether the user should be allowed to select multiple options. */\n    @Input()\n    get multiple(): boolean {\n        return this._multiple;\n    }\n\n    set multiple(value: boolean) {\n        if (this._selectionModel) {\n            throw getMcSelectDynamicMultipleError();\n        }\n\n        this._multiple = coerceBooleanProperty(value);\n    }\n\n    /**\n     * Function to compare the option values with the selected values. The first argument\n     * is a value from an option. The second is a value from the selection. A boolean\n     * should be returned.\n     */\n    @Input()\n    get compareWith() {\n        return this._compareWith;\n    }\n\n    set compareWith(fn: (o1: any, o2: any) => boolean) {\n        /* tslint:disable-next-line:strict-type-predicates */\n        if (typeof fn !== 'function') {\n            throw getMcSelectNonFunctionValueError();\n        }\n\n        this._compareWith = fn;\n\n        if (this._selectionModel) {\n            // A different comparator means the selection could change.\n            this._initializeSelection();\n        }\n    }\n\n    /** Value of the select control. */\n    @Input()\n    get value(): any {\n        return this._value;\n    }\n\n    set value(newValue: any) {\n        if (newValue !== this._value) {\n            this.writeValue(newValue);\n            this._value = newValue;\n        }\n    }\n\n    /** Object used to control when error messages are shown. */\n    @Input() errorStateMatcher: ErrorStateMatcher;\n\n    /**\n     * Function used to sort the values in a select in multiple mode.\n     * Follows the same logic as `Array.prototype.sort`.\n     */\n    @Input() sortComparator: (a: McOption, b: McOption, options: McOption[]) => number;\n\n    @Input()\n    get id(): string {\n        return this._id;\n    }\n\n    set id(value: string) {\n        this._id = value || this._uid;\n        this.stateChanges.next();\n    }\n\n    /** Combined stream of all of the child options' change events. */\n    readonly optionSelectionChanges: Observable<McOptionSelectionChange> = defer(() => {\n        if (this.options) {\n            return merge(...this.options.map((option) => option.onSelectionChange));\n        }\n\n        return this._ngZone.onStable\n            .asObservable()\n            .pipe(take(1), switchMap(() => this.optionSelectionChanges));\n    });\n\n    /** Event emitted when the select panel has been toggled. */\n    @Output() readonly openedChange: EventEmitter<boolean> = new EventEmitter<boolean>();\n\n    /** Event emitted when the select has been opened. */\n    @Output('opened') readonly _openedStream: Observable<void> =\n        this.openedChange.pipe(filter((o) => o), map(() => {}));\n\n    /** Event emitted when the select has been closed. */\n    @Output('closed') readonly _closedStream: Observable<void> =\n        this.openedChange.pipe(filter((o) => !o), map(() => {}));\n\n    /** Event emitted when the selected value has been changed by the user. */\n    @Output() readonly selectionChange: EventEmitter<McSelectChange> = new EventEmitter<McSelectChange>();\n\n    /**\n     * Event that emits whenever the raw value of the select changes. This is here primarily\n     * to facilitate the two-way binding for the `value` input.\n     * @docs-private\n     */\n    @Output() readonly valueChange: EventEmitter<any> = new EventEmitter<any>();\n\n    hiddenItems: number = 0;\n\n    /** Whether or not the overlay panel is open. */\n    private _panelOpen = false;\n\n    /** Whether filling out the select is required in the form. */\n    private _required: boolean = false;\n\n    /** The scroll position of the overlay panel, calculated to center the selected option. */\n    private _scrollTop = 0;\n\n    /** The placeholder displayed in the trigger of the select. */\n    private _placeholder: string;\n\n    /** Whether the component is in multiple selection mode. */\n    private _multiple: boolean = false;\n\n    /** Unique id for this input. */\n    private readonly _uid = `mc-select-${nextUniqueId++}`;\n\n    /** Emits whenever the component is destroyed. */\n    private readonly _destroy = new Subject<void>();\n\n    private _focused = false;\n\n    private _value: any;\n\n    private _id: string;\n\n    constructor(\n        private readonly _viewportRuler: ViewportRuler,\n        private readonly _changeDetectorRef: ChangeDetectorRef,\n        private readonly _ngZone: NgZone,\n        private readonly _renderer: Renderer2,\n        _defaultErrorStateMatcher: ErrorStateMatcher,\n        elementRef: ElementRef,\n        @Optional() private readonly _dir: Directionality,\n        @Optional() _parentForm: NgForm,\n        @Optional() _parentFormGroup: FormGroupDirective,\n        @Optional() private readonly _parentFormField: McFormField,\n        @Self() @Optional() public ngControl: NgControl,\n        @Attribute('tabindex') tabIndex: string,\n        @Inject(MC_SELECT_SCROLL_STRATEGY) private readonly _scrollStrategyFactory\n    ) {\n        super(elementRef, _defaultErrorStateMatcher, _parentForm, _parentFormGroup, ngControl);\n\n        if (this.ngControl) {\n            // Note: we provide the value accessor through here, instead of\n            // the `providers` to avoid running into a circular import.\n            this.ngControl.valueAccessor = this;\n        }\n\n        this.tabIndex = parseInt(tabIndex) || 0;\n\n        // Force setter to be called in case id was not specified.\n        this.id = this.id;\n    }\n\n    ngOnInit() {\n        this._selectionModel = new SelectionModel<McOption>(this.multiple);\n        this.stateChanges.next();\n\n        // We need `distinctUntilChanged` here, because some browsers will\n        // fire the animation end event twice for the same animation. See:\n        // https://github.com/angular/angular/issues/24084\n        this._panelDoneAnimatingStream\n            .pipe(distinctUntilChanged(), takeUntil(this._destroy))\n            .subscribe(() => {\n                if (this.panelOpen) {\n                    this._scrollTop = 0;\n                    this.openedChange.emit(true);\n                } else {\n                    this.openedChange.emit(false);\n                    this._panelDoneAnimating = false;\n                    this.overlayDir.offsetX = 0;\n                    this._changeDetectorRef.markForCheck();\n                }\n            });\n    }\n\n    ngAfterContentInit() {\n        this._initKeyManager();\n\n        this._selectionModel.onChange!\n            .pipe(takeUntil(this._destroy))\n            .subscribe((event) => {\n                event.added.forEach((option) => option.select());\n                event.removed.forEach((option) => option.deselect());\n            });\n\n        this.options.changes\n            .pipe(startWith(null), takeUntil(this._destroy))\n            .subscribe(() => {\n                this._resetOptions();\n                this._initializeSelection();\n            });\n    }\n\n    ngAfterViewInit(): void {\n        this.tags.changes\n            .subscribe(() => {\n                setTimeout(() => this._calculateHiddenItems(), 0);\n            });\n    }\n\n    ngDoCheck() {\n        if (this.ngControl) { this.updateErrorState(); }\n    }\n\n    ngOnChanges(changes: SimpleChanges) {\n        // Updating the disabled state is handled by `mixinDisabled`, but we need to additionally let\n        // the parent form field know to run change detection when the disabled state changes.\n        if (changes.disabled) {\n            this.stateChanges.next();\n        }\n    }\n\n    ngOnDestroy() {\n        this._destroy.next();\n        this._destroy.complete();\n        this.stateChanges.complete();\n    }\n\n    /** `View -> model callback called when value changes` */\n    _onChange: (value: any) => void = () => {};\n\n    /** `View -> model callback called when select has been touched` */\n    _onTouched = () => {};\n\n    /** Toggles the overlay panel open or closed. */\n    toggle(): void {\n        if (this.panelOpen) {\n            this.close();\n        } else {\n            this.open();\n        }\n    }\n\n    /** Opens the overlay panel. */\n    open(): void {\n        if (this.disabled || !this.options || !this.options.length || this._panelOpen) { return; }\n\n        this._triggerRect = this.trigger.nativeElement.getBoundingClientRect();\n        // Note: The computed font-size will be a string pixel value (e.g. \"16px\").\n        // `parseInt` ignores the trailing 'px' and converts this to a number.\n        this._triggerFontSize = parseInt(getComputedStyle(this.trigger.nativeElement)['font-size']);\n\n        this._panelOpen = true;\n        this._keyManager.withHorizontalOrientation(null);\n        this._calculateOverlayPosition();\n        this._highlightCorrectOption();\n        this._changeDetectorRef.markForCheck();\n\n        // Set the font size on the panel element once it exists.\n        this._ngZone.onStable.asObservable()\n            .pipe(take(1))\n            .subscribe(() => {\n                if (this._triggerFontSize && this.overlayDir.overlayRef &&\n                    this.overlayDir.overlayRef.overlayElement) {\n                    this.overlayDir.overlayRef.overlayElement.style.fontSize = `${this._triggerFontSize}px`;\n                }\n            });\n    }\n\n    /** Closes the overlay panel and focuses the host element. */\n    close(): void {\n        if (this._panelOpen) {\n            this._panelOpen = false;\n            this._keyManager.withHorizontalOrientation(this._isRtl() ? 'rtl' : 'ltr');\n            this._changeDetectorRef.markForCheck();\n            this._onTouched();\n        }\n    }\n\n    /**\n     * Sets the select's value. Part of the ControlValueAccessor interface\n     * required to integrate with Angular's core forms API.\n     *\n     * @param value New value to be written to the model.\n     */\n    writeValue(value: any): void {\n        if (this.options) {\n            this._setSelectionByValue(value);\n        }\n    }\n\n    /**\n     * Saves a callback function to be invoked when the select's value\n     * changes from user input. Part of the ControlValueAccessor interface\n     * required to integrate with Angular's core forms API.\n     *\n     * @param fn Callback to be triggered when the value changes.\n     */\n    registerOnChange(fn: (value: any) => void): void {\n        this._onChange = fn;\n    }\n\n    /**\n     * Saves a callback function to be invoked when the select is blurred\n     * by the user. Part of the ControlValueAccessor interface required\n     * to integrate with Angular's core forms API.\n     *\n     * @param fn Callback to be triggered when the component has been touched.\n     */\n    registerOnTouched(fn: () => {}): void {\n        this._onTouched = fn;\n    }\n\n    /**\n     * Disables the select. Part of the ControlValueAccessor interface required\n     * to integrate with Angular's core forms API.\n     *\n     * @param isDisabled Sets whether the component is disabled.\n     */\n    setDisabledState(isDisabled: boolean): void {\n        this.disabled = isDisabled;\n        this._changeDetectorRef.markForCheck();\n        this.stateChanges.next();\n    }\n\n    get panelOpen(): boolean {\n        return this._panelOpen;\n    }\n\n    get selected(): McOption | McOption[] {\n        return this.multiple ? this._selectionModel.selected : this._selectionModel.selected[0];\n    }\n\n    get triggerValue(): string {\n        if (this.empty) { return ''; }\n\n        if (this._multiple) {\n            const selectedOptions = this._selectionModel.selected.map((option) => option.viewValue);\n\n            if (this._isRtl()) { selectedOptions.reverse(); }\n\n            return selectedOptions.join(', ');\n        }\n\n        return this._selectionModel.selected[0].viewValue;\n    }\n\n    get triggerValues(): McOption[] {\n        if (this.empty) { return []; }\n\n        if (this._multiple) {\n            const selectedOptions = this._selectionModel.selected;\n\n            if (this._isRtl()) { selectedOptions.reverse(); }\n\n            return selectedOptions;\n        }\n\n        return [this._selectionModel.selected[0]];\n    }\n\n    get empty(): boolean {\n        return !this._selectionModel || this._selectionModel.isEmpty();\n    }\n\n    _isRtl(): boolean {\n        return this._dir ? this._dir.value === 'rtl' : false;\n    }\n\n    _handleKeydown(event: KeyboardEvent): void {\n        if (!this.disabled) {\n            if (this.panelOpen) {\n                this._handleOpenKeydown(event);\n            } else {\n                this._handleClosedKeydown(event);\n            }\n        }\n    }\n\n    /**\n     * When the panel content is done fading in, the _panelDoneAnimating property is\n     * set so the proper class can be added to the panel.\n     */\n    _onFadeInDone(): void {\n        this._panelDoneAnimating = this.panelOpen;\n        this._changeDetectorRef.markForCheck();\n    }\n\n    _onFocus() {\n        if (!this.disabled) {\n            this._focused = true;\n            this.stateChanges.next();\n        }\n    }\n\n    /**\n     * Calls the touched callback only if the panel is closed. Otherwise, the trigger will\n     * \"blur\" to the panel when it opens, causing a false positive.\n     */\n    _onBlur() {\n        this._focused = false;\n\n        if (!this.disabled && !this.panelOpen) {\n            this._onTouched();\n            this._changeDetectorRef.markForCheck();\n            this.stateChanges.next();\n        }\n    }\n\n    /**\n     * Callback that is invoked when the overlay panel has been attached.\n     */\n    _onAttached(): void {\n        this.overlayDir.positionChange\n            .pipe(take(1))\n            .subscribe(() => {\n                this._changeDetectorRef.detectChanges();\n                this._calculateOverlayOffsetX();\n                this.panel.nativeElement.scrollTop = this._scrollTop;\n            });\n    }\n\n    /** Returns the theme to be used on the panel. */\n    _getPanelTheme(): string {\n        return this._parentFormField ? `mc-${this._parentFormField.color}` : '';\n    }\n\n    /** Focuses the select element. */\n    focus(): void {\n        this._elementRef.nativeElement.focus();\n    }\n\n    /**\n     * Calculates the scroll position of the select's overlay panel.\n     *\n     * Attempts to center the selected option in the panel. If the option is\n     * too high or too low in the panel to be scrolled to the center, it clamps the\n     * scroll position to the min or max scroll positions respectively.\n     */\n    _calculateOverlayScroll(selectedIndex: number, scrollBuffer: number, maxScroll: number): number {\n        const itemHeight = this._getItemHeight();\n        const optionOffsetFromScrollTop = itemHeight * selectedIndex;\n\n        /* tslint:disable-next-line:no-magic-numbers */\n        const halfOptionHeight = itemHeight / 2;\n\n        // Starts at the optionOffsetFromScrollTop, which scrolls the option to the top of the\n        // scroll container, then subtracts the scroll buffer to scroll the option down to\n        // the center of the overlay panel. Half the option height must be re-added to the\n        // scrollTop so the option is centered based on its middle, not its top edge.\n        const optimalScrollPosition = optionOffsetFromScrollTop - scrollBuffer + halfOptionHeight;\n\n        return Math.min(Math.max(0, optimalScrollPosition), maxScroll);\n    }\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    onContainerClick() {\n        this.focus();\n        this.open();\n    }\n\n    /** Invoked when an option is clicked. */\n    onRemoveMatcherItem(option: McOption, $event): void {\n        $event.stopPropagation();\n\n        option.deselect();\n    }\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    get shouldLabelFloat(): boolean {\n        return this._panelOpen || !this.empty;\n    }\n\n    _calculateHiddenItems(): void {\n        if (this.empty) { return; }\n\n        let visibleItems: number = 0;\n        const totalItemsWidth = this._getTotalItemsWidthInMatcher();\n        let totalVisibleItemsWidth: number = 0;\n        const itemMargin: number = 4;\n\n        this.tags.forEach((tag) => {\n            if (tag.nativeElement.offsetTop < tag.nativeElement.offsetHeight) {\n                totalVisibleItemsWidth += tag.nativeElement.getBoundingClientRect().width + itemMargin;\n                visibleItems++;\n            }\n        });\n\n        this.hiddenItems = (this.selected as ArrayLike<McOption>).length - visibleItems;\n\n        if (this.hiddenItems) {\n            const itemsCounter = this.trigger.nativeElement.querySelector('.mc-select__match-hidden-text');\n            const matcherList = this.trigger.nativeElement.querySelector('.mc-select__match-list');\n\n            const itemsCounterShowed = itemsCounter.offsetTop < itemsCounter.offsetHeight;\n            // const itemsCounterWidth: number = itemsCounter.getBoundingClientRect().width;\n            const itemsCounterWidth: number = 86;\n\n            const matcherListWidth: number = matcherList.getBoundingClientRect().width;\n            const matcherWidth: number = matcherListWidth + itemsCounterWidth;\n\n            if (itemsCounterShowed && (totalItemsWidth < matcherWidth)) { this.hiddenItems = 0; }\n\n            if (\n                totalVisibleItemsWidth === matcherListWidth ||\n                (totalVisibleItemsWidth + itemsCounterWidth) < matcherListWidth\n            ) {\n                this._changeDetectorRef.markForCheck();\n\n                return ;\n            } else if (!itemsCounterShowed && (totalItemsWidth + itemsCounterWidth) > matcherWidth) {\n                this.hiddenItems++;\n            }\n        }\n\n        this._changeDetectorRef.markForCheck();\n    }\n\n    private _getTotalItemsWidthInMatcher(): number {\n        const triggerClone = this.trigger.nativeElement.cloneNode(true);\n        triggerClone.querySelector('.mc-select__match-hidden-text').remove();\n\n        this._renderer.setStyle(triggerClone, 'position', 'absolute');\n        this._renderer.setStyle(triggerClone, 'visibility', 'hidden');\n        this._renderer.setStyle(triggerClone, 'top', '-100%');\n        this._renderer.setStyle(triggerClone, 'left', '0');\n\n        this._renderer.appendChild(this.trigger.nativeElement, triggerClone);\n\n        let totalItemsWidth: number = 0;\n        const itemMargin: number = 4;\n        triggerClone.querySelectorAll('mc-tag').forEach((item) => {\n            totalItemsWidth += item.getBoundingClientRect().width as number + itemMargin;\n        });\n\n        triggerClone.remove();\n\n        return totalItemsWidth;\n    }\n\n    /** Handles keyboard events while the select is closed. */\n    private _handleClosedKeydown(event: KeyboardEvent): void {\n        /* tslint:disable-next-line */\n        const keyCode = event.keyCode;\n        const isArrowKey = keyCode === DOWN_ARROW || keyCode === UP_ARROW ||\n            keyCode === LEFT_ARROW || keyCode === RIGHT_ARROW;\n        const isOpenKey = keyCode === ENTER || keyCode === SPACE;\n\n        // Open the select on ALT + arrow key to match the native <select>\n        if (isOpenKey || ((this.multiple || event.altKey) && isArrowKey)) {\n            event.preventDefault(); // prevents the page from scrolling down when pressing space\n            this.open();\n        } else if (!this.multiple) {\n            this._keyManager.onKeydown(event);\n        }\n    }\n\n    /** Handles keyboard events when the selected is open. */\n    private _handleOpenKeydown(event: KeyboardEvent): void {\n        /* tslint:disable-next-line */\n        const keyCode = event.keyCode;\n        const isArrowKey = keyCode === DOWN_ARROW || keyCode === UP_ARROW;\n        const manager = this._keyManager;\n\n        if (keyCode === HOME || keyCode === END) {\n            event.preventDefault();\n\n            if (keyCode === HOME) {\n                manager.setFirstItemActive();\n            } else {\n                manager.setLastItemActive();\n            }\n\n        } else if (isArrowKey && event.altKey) {\n            // Close the select on ALT + arrow key to match the native <select>\n            event.preventDefault();\n            this.close();\n        } else if ((keyCode === ENTER || keyCode === SPACE) && manager.activeItem) {\n            event.preventDefault();\n            manager.activeItem._selectViaInteraction();\n        } else if (this._multiple && keyCode === A && event.ctrlKey) {\n            event.preventDefault();\n            const hasDeselectedOptions = this.options.some((option) => !option.selected);\n            this.options.forEach((option) => {\n                if (hasDeselectedOptions && !option.disabled) {\n                    option.select();\n                } else {\n                    option.deselect();\n                }\n            });\n        } else {\n            const previouslyFocusedIndex = manager.activeItemIndex;\n\n            manager.onKeydown(event);\n\n            if (this._multiple && isArrowKey && event.shiftKey && manager.activeItem &&\n                manager.activeItemIndex !== previouslyFocusedIndex) {\n                manager.activeItem._selectViaInteraction();\n            }\n        }\n    }\n\n    private _initializeSelection(): void {\n        // Defer setting the value in order to avoid the \"Expression\n        // has changed after it was checked\" errors from Angular.\n        Promise.resolve().then(() => {\n            this._setSelectionByValue(this.ngControl ? this.ngControl.value : this._value);\n        });\n    }\n\n    /**\n     * Sets the selected option based on a value. If no option can be\n     * found with the designated value, the select trigger is cleared.\n     */\n    private _setSelectionByValue(value: any | any[]): void {\n        if (this.multiple && value) {\n            if (!Array.isArray(value)) {\n                throw getMcSelectNonArrayValueError();\n            }\n\n            this._selectionModel.clear();\n            value.forEach((currentValue: any) => this._selectValue(currentValue));\n            this._sortValues();\n        } else {\n            this._selectionModel.clear();\n            const correspondingOption = this._selectValue(value);\n\n            // Shift focus to the active item. Note that we shouldn't do this in multiple\n            // mode, because we don't know what option the user interacted with last.\n            if (correspondingOption) {\n                this._keyManager.setActiveItem(correspondingOption);\n            }\n        }\n\n        this._changeDetectorRef.markForCheck();\n    }\n\n    /**\n     * Finds and selects and option based on its value.\n     * @returns Option that has the corresponding value.\n     */\n    private _selectValue(value: any): McOption | undefined {\n        const correspondingOption = this.options.find((option: McOption) => {\n            try {\n                // Treat null as a special reset value.\n                return option.value != null && this._compareWith(option.value, value);\n            } catch (error) {\n                if (isDevMode()) {\n                    // Notify developers of errors in their comparator.\n                    console.warn(error);\n                }\n\n                return false;\n            }\n        });\n\n        if (correspondingOption) {\n            this._selectionModel.select(correspondingOption);\n        }\n\n        return correspondingOption;\n    }\n\n    /** Sets up a key manager to listen to keyboard events on the overlay panel. */\n    private _initKeyManager() {\n        this._keyManager = new ActiveDescendantKeyManager<McOption>(this.options)\n            .withTypeAhead()\n            .withVerticalOrientation()\n            .withHorizontalOrientation(this._isRtl() ? 'rtl' : 'ltr');\n\n        this._keyManager.tabOut\n            .pipe(takeUntil(this._destroy))\n            .subscribe(() => {\n                // Restore focus to the trigger before closing. Ensures that the focus\n                // position won't be lost if the user got focus into the overlay.\n                this.focus();\n                this.close();\n            });\n\n        this._keyManager.change\n            .pipe(takeUntil(this._destroy))\n            .subscribe(() => {\n                if (this._panelOpen && this.panel) {\n                    this._scrollActiveOptionIntoView();\n                } else if (!this._panelOpen && !this.multiple && this._keyManager.activeItem) {\n                    this._keyManager.activeItem._selectViaInteraction();\n                }\n            });\n    }\n\n    /** Drops current option subscriptions and IDs and resets from scratch. */\n    private _resetOptions(): void {\n        const changedOrDestroyed = merge(this.options.changes, this._destroy);\n\n        this.optionSelectionChanges\n            .pipe(takeUntil(changedOrDestroyed))\n            .subscribe((event) => {\n                this._onSelect(event.source, event.isUserInput);\n\n                if (event.isUserInput && !this.multiple && this._panelOpen) {\n                    this.close();\n                    this.focus();\n                }\n            });\n\n        // Listen to changes in the internal state of the options and react accordingly.\n        // Handles cases like the labels of the selected options changing.\n        merge(...this.options.map((option) => option._stateChanges))\n            .pipe(takeUntil(changedOrDestroyed))\n            .subscribe(() => {\n                this._changeDetectorRef.markForCheck();\n                this.stateChanges.next();\n            });\n\n        this._setOptionIds();\n    }\n\n    /** Invoked when an option is clicked. */\n    private _onSelect(option: McOption, isUserInput: boolean): void {\n        const wasSelected = this._selectionModel.isSelected(option);\n\n        if (option.value == null && !this._multiple) {\n            option.deselect();\n            this._selectionModel.clear();\n            this._propagateChanges(option.value);\n        } else {\n            if (option.selected) {\n                this._selectionModel.select(option);\n            } else {\n                this._selectionModel.deselect(option);\n            }\n\n            if (isUserInput) {\n                this._keyManager.setActiveItem(option);\n            }\n\n            if (this.multiple) {\n                this._sortValues();\n\n                if (isUserInput) {\n                    // In case the user selected the option with their mouse, we\n                    // want to restore focus back to the trigger, in order to\n                    // prevent the select keyboard controls from clashing with\n                    // the ones from `mc-option`.\n                    this.focus();\n                }\n            }\n        }\n\n        if (wasSelected !== this._selectionModel.isSelected(option)) {\n            this._propagateChanges();\n        }\n\n        this.stateChanges.next();\n    }\n\n    /** Sorts the selected values in the selected based on their order in the panel. */\n    private _sortValues() {\n        if (this.multiple) {\n            const options = this.options.toArray();\n\n            this._selectionModel.sort((a, b) => {\n                return this.sortComparator ? this.sortComparator(a, b, options) :\n                    options.indexOf(a) - options.indexOf(b);\n            });\n            this.stateChanges.next();\n        }\n    }\n\n    /** Emits change event to set the model value. */\n    private _propagateChanges(fallbackValue?: any): void {\n        let valueToEmit: any = null;\n\n        if (this.multiple) {\n            valueToEmit = (this.selected as McOption[]).map((option) => option.value);\n        } else {\n            valueToEmit = this.selected ? (this.selected as McOption).value : fallbackValue;\n        }\n\n        this._value = valueToEmit;\n        this.valueChange.emit(valueToEmit);\n        this._onChange(valueToEmit);\n        this.selectionChange.emit(new McSelectChange(this, valueToEmit));\n        this._changeDetectorRef.markForCheck();\n    }\n\n    /** Records option IDs to pass to the aria-owns property. */\n    private _setOptionIds() {\n        this._optionIds = this.options.map((option) => option.id).join(' ');\n    }\n\n    /**\n     * Highlights the selected item. If no option is selected, it will highlight\n     * the first item instead.\n     */\n    private _highlightCorrectOption(): void {\n        if (this._keyManager) {\n            if (this.empty) {\n                this._keyManager.setFirstItemActive();\n            } else {\n                this._keyManager.setActiveItem(this._selectionModel.selected[0]);\n            }\n        }\n    }\n\n    /** Scrolls the active option into view. */\n    private _scrollActiveOptionIntoView(): void {\n        const activeOptionIndex = this._keyManager.activeItemIndex || 0;\n        const labelCount = _countGroupLabelsBeforeOption(activeOptionIndex, this.options, this.optionGroups);\n\n        this.panel.nativeElement.scrollTop = _getOptionScrollPosition(\n            activeOptionIndex + labelCount,\n            this._getItemHeight(),\n            this.panel.nativeElement.scrollTop,\n            SELECT_PANEL_MAX_HEIGHT\n        );\n    }\n\n    /** Gets the index of the provided option in the option list. */\n    private _getOptionIndex(option: McOption): number | undefined {\n        /* tslint:disable-next-line */\n        return this.options.reduce((result: number, current: McOption, index: number) => {\n            /* tslint:disable-next-line:strict-type-predicates */\n            return result === undefined ? (option === current ? index : undefined) : result;\n        }, undefined);\n    }\n\n    /** Calculates the scroll position and x- and y-offsets of the overlay panel. */\n    private _calculateOverlayPosition(): void {\n        const itemHeight = this._getItemHeight();\n        const items = this._getItemCount();\n        const panelHeight = Math.min(items * itemHeight, SELECT_PANEL_MAX_HEIGHT);\n        const scrollContainerHeight = items * itemHeight;\n\n        // The farthest the panel can be scrolled before it hits the bottom\n        const maxScroll = scrollContainerHeight - panelHeight;\n\n        // If no value is selected we open the popup to the first item.\n        let selectedOptionOffset =\n            this.empty ? 0 : this._getOptionIndex(this._selectionModel.selected[0])!;\n\n        selectedOptionOffset += _countGroupLabelsBeforeOption(selectedOptionOffset, this.options,\n            this.optionGroups);\n\n        // We must maintain a scroll buffer so the selected option will be scrolled to the\n        // center of the overlay panel rather than the top.\n        /* tslint:disable-next-line:no-magic-numbers */\n        const scrollBuffer = panelHeight / 2;\n        this._scrollTop = this._calculateOverlayScroll(selectedOptionOffset, scrollBuffer, maxScroll);\n        this._offsetY = this._calculateOverlayOffsetY();\n\n        this._checkOverlayWithinViewport(maxScroll);\n    }\n\n    /**\n     * Sets the x-offset of the overlay panel in relation to the trigger's top start corner.\n     * This must be adjusted to align the selected option text over the trigger text when\n     * the panel opens. Will change based on LTR or RTL text direction. Note that the offset\n     * can't be calculated until the panel has been attached, because we need to know the\n     * content width in order to constrain the panel within the viewport.\n     */\n    private _calculateOverlayOffsetX(): void {\n        const overlayRect = this.overlayDir.overlayRef.overlayElement.getBoundingClientRect();\n        const viewportSize = this._viewportRuler.getViewportSize();\n        const isRtl = this._isRtl();\n        /* tslint:disable-next-line:no-magic-numbers */\n        const paddingWidth = SELECT_PANEL_PADDING_X * 2;\n        let offsetX: number;\n\n        const selected = this._selectionModel.selected[0] || this.options.first;\n        offsetX = selected && selected.group ? SELECT_PANEL_INDENT_PADDING_X : SELECT_PANEL_PADDING_X;\n\n        // Invert the offset in LTR.\n        if (!isRtl) { offsetX *= -1; }\n\n        // Determine how much the select overflows on each side.\n        const leftOverflow = 0 - (overlayRect.left + offsetX - (isRtl ? paddingWidth : 0));\n        const rightOverflow = overlayRect.right + offsetX - viewportSize.width\n            + (isRtl ? 0 : paddingWidth);\n\n        // If the element overflows on either side, reduce the offset to allow it to fit.\n        if (leftOverflow > 0) {\n            offsetX += leftOverflow + SELECT_PANEL_VIEWPORT_PADDING;\n        } else if (rightOverflow > 0) {\n            offsetX -= rightOverflow + SELECT_PANEL_VIEWPORT_PADDING;\n        }\n\n        // Set the offset directly in order to avoid having to go through change detection and\n        // potentially triggering \"changed after it was checked\" errors. Round the value to avoid\n        // blurry content in some browsers.\n        this.overlayDir.offsetX = Math.round(offsetX);\n        this.overlayDir.overlayRef.updatePosition();\n    }\n\n    /**\n     * Calculates the y-offset of the select's overlay panel in relation to the\n     * top start corner of the trigger. It has to be adjusted in order for the\n     * selected option to be aligned over the trigger when the panel opens.\n     */\n    private _calculateOverlayOffsetY(): number {\n        // const itemHeight = this._getItemHeight();\n        // const optionHeightAdjustment = (itemHeight - this._triggerRect.height) / 2;\n\n        // todo I'm not sure that we will use it\n        return 0;\n        // return Math.round(-optionHeightAdjustment);\n    }\n\n    /**\n     * Checks that the attempted overlay position will fit within the viewport.\n     * If it will not fit, tries to adjust the scroll position and the associated\n     * y-offset so the panel can open fully on-screen. If it still won't fit,\n     * sets the offset back to 0 to allow the fallback position to take over.\n     */\n    private _checkOverlayWithinViewport(maxScroll: number): void {\n        const itemHeight = this._getItemHeight();\n        const viewportSize = this._viewportRuler.getViewportSize();\n\n        const topSpaceAvailable = this._triggerRect.top - SELECT_PANEL_VIEWPORT_PADDING;\n        const bottomSpaceAvailable =\n            viewportSize.height - this._triggerRect.bottom - SELECT_PANEL_VIEWPORT_PADDING;\n\n        const panelHeightTop = Math.abs(this._offsetY);\n        const totalPanelHeight =\n            Math.min(this._getItemCount() * itemHeight, SELECT_PANEL_MAX_HEIGHT);\n        const panelHeightBottom = totalPanelHeight - panelHeightTop - this._triggerRect.height;\n\n        if (panelHeightBottom > bottomSpaceAvailable) {\n            this._adjustPanelUp(panelHeightBottom, bottomSpaceAvailable);\n        } else if (panelHeightTop > topSpaceAvailable) {\n            this._adjustPanelDown(panelHeightTop, topSpaceAvailable, maxScroll);\n        } else {\n            this._transformOrigin = this._getOriginBasedOnOption();\n        }\n    }\n\n    /** Adjusts the overlay panel up to fit in the viewport. */\n    private _adjustPanelUp(panelHeightBottom: number, bottomSpaceAvailable: number) {\n        // Browsers ignore fractional scroll offsets, so we need to round.\n        const distanceBelowViewport = Math.round(panelHeightBottom - bottomSpaceAvailable);\n\n        // Scrolls the panel up by the distance it was extending past the boundary, then\n        // adjusts the offset by that amount to move the panel up into the viewport.\n        this._scrollTop -= distanceBelowViewport;\n        this._offsetY -= distanceBelowViewport;\n        this._transformOrigin = this._getOriginBasedOnOption();\n\n        // If the panel is scrolled to the very top, it won't be able to fit the panel\n        // by scrolling, so set the offset to 0 to allow the fallback position to take\n        // effect.\n        if (this._scrollTop <= 0) {\n            this._scrollTop = 0;\n            this._offsetY = 0;\n            this._transformOrigin = `50% bottom 0px`;\n        }\n    }\n\n    /** Adjusts the overlay panel down to fit in the viewport. */\n    private _adjustPanelDown(panelHeightTop: number, topSpaceAvailable: number, maxScroll: number) {\n        // Browsers ignore fractional scroll offsets, so we need to round.\n        const distanceAboveViewport = Math.round(panelHeightTop - topSpaceAvailable);\n\n        // Scrolls the panel down by the distance it was extending past the boundary, then\n        // adjusts the offset by that amount to move the panel down into the viewport.\n        this._scrollTop += distanceAboveViewport;\n        this._offsetY += distanceAboveViewport;\n        this._transformOrigin = this._getOriginBasedOnOption();\n\n        // If the panel is scrolled to the very bottom, it won't be able to fit the\n        // panel by scrolling, so set the offset to 0 to allow the fallback position\n        // to take effect.\n        if (this._scrollTop >= maxScroll) {\n            this._scrollTop = maxScroll;\n            this._offsetY = 0;\n            this._transformOrigin = `50% top 0px`;\n\n            return;\n        }\n    }\n\n    /** Sets the transform origin point based on the selected option. */\n    private _getOriginBasedOnOption(): string {\n        const itemHeight = this._getItemHeight();\n        /* tslint:disable-next-line:no-magic-numbers */\n        const optionHeightAdjustment = (itemHeight - this._triggerRect.height) / 2;\n        /* tslint:disable-next-line:no-magic-numbers */\n        const originY = Math.abs(this._offsetY) - optionHeightAdjustment + itemHeight / 2;\n\n        return `50% ${originY}px 0px`;\n    }\n\n    /** Calculates the amount of items in the select. This includes options and group labels. */\n    private _getItemCount(): number {\n        return this.options.length + this.optionGroups.length;\n    }\n\n    /** Calculates the height of the select's options. */\n    private _getItemHeight(): number {\n        /* tslint:disable-next-line:no-magic-numbers */\n        return 32;\n        // return this._triggerFontSize * SELECT_ITEM_HEIGHT_EM;\n    }\n\n    /** Comparison function to specify which option is displayed. Defaults to object equality. */\n    private _compareWith = (o1: any, o2: any) => o1 === o2;\n}\n","import {\n    Directive,\n    DoCheck,\n    ElementRef,\n    forwardRef,\n    Inject,\n    InjectionToken,\n    Input,\n    OnChanges,\n    OnDestroy,\n    Optional,\n    Renderer2,\n    Self\n} from '@angular/core';\nimport {\n    ControlValueAccessor,\n    FormControl,\n    FormGroupDirective,\n    NG_VALIDATORS,\n    NgControl,\n    NgForm,\n    ValidationErrors,\n    ValidatorFn,\n    Validators\n} from '@angular/forms';\nimport {\n    noop,\n    Subject\n} from 'rxjs';\n\nimport { coerceBooleanProperty } from '@ptsecurity/cdk/coercion';\nimport {\n    CanUpdateErrorState, CanUpdateErrorStateCtor,\n    ErrorStateMatcher,\n    mixinErrorState\n} from '@ptsecurity/mosaic/core';\nimport { McFormFieldControl } from '@ptsecurity/mosaic/form-field';\n\nimport {\n    ARROW_DOWN_KEYCODE,\n    ARROW_LEFT_KEYCODE,\n    ARROW_RIGHT_KEYCODE,\n    ARROW_UP_KEYCODE,\n    DEFAULT_TIME_FORMAT,\n    HOURS_PER_DAY,\n    HOURS_MINUTES_REGEXP,\n    HOURS_MINUTES_SECONDS_REGEXP,\n    HOURS_ONLY_REGEXP,\n    MINUTES_PER_HOUR,\n    SECONDS_PER_MINUTE,\n    TIMEFORMAT_PLACEHOLDERS,\n    TimeFormats,\n    TimeParts\n} from './timepicker.constants';\n\n\nlet _uniqueComponentIdSuffix: number = 0;\nlet _validatorOnChange: () => void = noop;\nlet _validator: ValidatorFn | null = () => null;\n\nexport const MC_INPUT_VALUE_ACCESSOR =\n    new InjectionToken<{ value: any }>('MC_INPUT_VALUE_ACCESSOR');\n\nexport class McTimepickerBase {\n    constructor(\n        public _defaultErrorStateMatcher: ErrorStateMatcher,\n        public _parentForm: NgForm,\n        public _parentFormGroup: FormGroupDirective,\n        public ngControl: NgControl) { }\n}\n\nexport const McTimepickerMixinBase:\n    CanUpdateErrorStateCtor &\n    typeof McTimepickerBase = mixinErrorState(McTimepickerBase);\n\n@Directive({\n    selector: 'input[mcTimepicker]',\n    exportAs: 'mcTimepickerInput',\n    host: {\n        class: 'mc-timepicker mc-input',\n        // Native input properties that are overwritten by Angular inputs need to be synced with\n        // the native input element. Otherwise property bindings for those don't work.\n        '[attr.id]': 'id',\n        '[attr.placeholder]': 'placeholder',\n        '[disabled]': 'disabled',\n        '[required]': 'required',\n        '[attr.time-format]': 'timeFormat',\n        '[attr.min-time]': 'minTime',\n        '[attr.max-time]': 'maxTime',\n        '[attr.value]': 'value',\n        '(blur)': 'onBlur()',\n        '(focus)': 'focusChanged(true)',\n        '(input)': 'onInput()',\n        '(keydown)': 'onKeyDown($event)'\n    },\n    providers: [\n        {\n            provide: NG_VALIDATORS,\n            useValue: {\n                validate(c) { return _validator ? _validator(c) : null; },\n                registerOnValidatorChange(fn: () => void): void { _validatorOnChange = fn; }\n            },\n            multi: true\n        },\n        {\n            provide: McFormFieldControl,\n            useExisting: forwardRef(() => McTimepicker)\n        }\n    ]\n\n})\nexport class McTimepicker extends McTimepickerMixinBase\n    implements McFormFieldControl<any>,\n        OnChanges,\n        OnDestroy,\n        DoCheck,\n        CanUpdateErrorState,\n        ControlValueAccessor {\n\n    /** An object used to control when error messages are shown. */\n    @Input() errorStateMatcher: ErrorStateMatcher;\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    focused: boolean = false;\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    readonly stateChanges: Subject<void> = new Subject<void>();\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    controlType: string = 'mc-timepicker';\n\n    @Input()\n    get disabled(): boolean {\n        if (this.ngControl && this.ngControl.disabled !== null) { return this.ngControl.disabled; }\n\n        return this._disabled;\n    }\n\n    set disabled(value: boolean) {\n        this._disabled = coerceBooleanProperty(value);\n\n        // Browsers may not fire the blur event if the input is disabled too quickly.\n        // Reset from here to ensure that the element doesn't become stuck.\n        if (this.focused) {\n            this.focused = false;\n        }\n\n        this.stateChanges.next();\n    }\n\n    @Input()\n    get id(): string { return this._id; }\n\n    set id(value: string) { this._id = value || this._uid; }\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    @Input() placeholder: string;\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    @Input()\n    get required(): boolean { return this._required; }\n\n    set required(value: boolean) { this._required = coerceBooleanProperty(value); }\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    @Input()\n    get value(): string { return this._inputValueAccessor.value; }\n\n    set value(value: string) {\n        if (value !== this.value) {\n            this._inputValueAccessor.value = value;\n            this._applyInputChanges();\n        }\n    }\n\n    @Input('time-format')\n    get timeFormat(): TimeFormats { return this._timeFormat; }\n\n    set timeFormat(formatValue: TimeFormats) {\n        this._timeFormat = Object\n            .keys(TimeFormats)\n            .map((timeFormatKey) => TimeFormats[timeFormatKey])\n            .indexOf(formatValue) > -1 ? formatValue : DEFAULT_TIME_FORMAT;\n\n        _validatorOnChange();\n        this.placeholder = TIMEFORMAT_PLACEHOLDERS[this._timeFormat.toLowerCase()];\n    }\n\n    @Input('min-time')\n    get minTime(): string | null { return this._minTime; }\n\n    set minTime(minValue: string | null) {\n        this._minTime = minValue;\n        this._minDTime = minValue !== null ? this._getDateFromTimeString(minValue) : undefined;\n        _validatorOnChange();\n    }\n\n    @Input('max-time')\n    get maxTime(): string | null { return this._maxTime; }\n\n    set maxTime(maxValue: string | null) {\n        this._maxTime = maxValue;\n        this._maxDTime = maxValue !== null ? this._getDateFromTimeString(maxValue) : undefined;\n        _validatorOnChange();\n    }\n\n    private _id: string;\n    private readonly _uid = `mc-timepicker-${_uniqueComponentIdSuffix++}`;\n    private _disabled: boolean;\n    private _required: boolean;\n    private _previousNativeValue: any;\n    private readonly _inputValueAccessor: { value: any };\n    private _onChange: (value: any) => void;\n    private _onTouched: () => void;\n    private _timeFormat: TimeFormats;\n    private _minTime: string | null = null;\n    private _minDTime: Date | undefined;\n    private _maxTime: string | null = null;\n    private _maxDTime: Date | undefined;\n    private _currentDTimeInput: Date | undefined;\n\n    constructor(private readonly _elementRef: ElementRef,\n                @Optional() @Self() public ngControl: NgControl,\n                @Optional() _parentForm: NgForm,\n                @Optional() _parentFormGroup: FormGroupDirective,\n                _defaultErrorStateMatcher: ErrorStateMatcher,\n                @Optional() @Self() @Inject(MC_INPUT_VALUE_ACCESSOR) inputValueAccessor: any,\n                private readonly _renderer: Renderer2) {\n        super(_defaultErrorStateMatcher, _parentForm, _parentFormGroup, ngControl);\n\n        // If no input value accessor was explicitly specified, use the element as the input value\n        // accessor.\n        this._inputValueAccessor = inputValueAccessor || this._elementRef.nativeElement;\n\n        this._previousNativeValue = this.value;\n        this._onChange = noop;\n\n        // Force setter to be called in case id was not specified.\n        this.id = this.id;\n\n        // Instead of NG_VALUE_ACCESSOR (https://github.com/angular/material2/issues/8158#issuecomment-344618103)\n        if (this.ngControl) { this.ngControl.valueAccessor = this; }\n\n        // Substitute initial empty validator with validator linked to directive object instance (workaround)\n        _validator = Validators.compose([\n            () => this._parseValidator(),\n            () => this._minTimeValidator(),\n            () => this._maxTimeValidator()\n        ]);\n    }\n\n    ngOnChanges(): void {\n        this.stateChanges.next();\n    }\n\n    ngOnDestroy(): void {\n        this.stateChanges.complete();\n    }\n\n    ngDoCheck(): void {\n        if (this.ngControl) {\n            // We need to re-evaluate this on every change detection cycle, because there are some\n            // error triggers that we can't subscribe to (e.g. parent form submissions). This means\n            // that whatever logic is in here has to be super lean or we risk destroying the performance.\n            this.updateErrorState();\n        }\n\n        // We need to dirty-check the native element's value, because there are some cases where\n        // we won't be notified when it changes (e.g. the consumer isn't using forms or they're\n        // updating the value using `emitEvent: false`).\n        this._dirtyCheckNativeValue();\n    }\n\n    focus(): void {\n        this._elementRef.nativeElement.focus();\n    }\n\n    focusChanged(isFocused: boolean): void {\n        if (isFocused !== this.focused) {\n            this.focused = isFocused;\n            this._onTouched();\n            this.stateChanges.next();\n        }\n    }\n\n    onBlur() {\n        this._applyInputChanges();\n        this.focusChanged(false);\n    }\n\n    onInput() {\n        const initialCursorStart: number = this._elementRef.nativeElement.selectionStart;\n        const initialCursorEnd: number = this._elementRef.nativeElement.selectionEnd;\n        let isAutocompleteTriggered: boolean = false;\n\n        const {\n            hoursOnly,\n            hoursAndMinutes,\n            hoursAndMinutesAndSeconds\n        } = this._getParsedTimeParts(this._elementRef.nativeElement.value);\n\n        // tslint:disable no-magic-numbers\n        if (hoursOnly &&\n            hoursOnly[1] &&\n            hoursOnly[1].length === 2) {\n            isAutocompleteTriggered = true;\n        } else if (hoursAndMinutes &&\n            hoursAndMinutes[1].length === 1 &&\n            hoursAndMinutes[2] &&\n            hoursAndMinutes[2].length === 2) {\n            isAutocompleteTriggered = true;\n        } else if (hoursAndMinutesAndSeconds &&\n            hoursAndMinutesAndSeconds[1].length === 2 &&\n            hoursAndMinutesAndSeconds[2].length === 2 &&\n            hoursAndMinutesAndSeconds[3] &&\n            hoursAndMinutesAndSeconds[3].length === 2) {\n            isAutocompleteTriggered = true;\n        }\n        // tslint:enable no-magic-numbers\n\n        this._applyInputChanges({ doTimestringReformat: isAutocompleteTriggered });\n\n        this._elementRef.nativeElement.selectionStart = initialCursorStart;\n        this._elementRef.nativeElement.selectionEnd = initialCursorEnd;\n\n        if (isAutocompleteTriggered && this.ngControl.errors === null) {\n            this._createSelectionOfTimeComponentInInput(initialCursorStart + 1);\n        }\n    }\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    get empty(): boolean {\n        return !this._elementRef.nativeElement.value && !this._isBadInput();\n    }\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    onContainerClick() {\n        this.focus();\n    }\n\n    writeValue(value: Date | null): void {\n        if (value !== null) {\n            this._renderer.setProperty(this._elementRef.nativeElement,\n                'value',\n                this._getTimeStringFromDate(value, this.timeFormat)\n            );\n        }\n        this._onChange(value || null);\n        this._applyInputChanges();\n    }\n\n    onKeyDown(event: KeyboardEvent): void {\n\n        const keyCode: string = this._getKeyCode(event);\n\n        if (keyCode === ARROW_UP_KEYCODE || keyCode === ARROW_DOWN_KEYCODE) {\n            this._upDownTimeByArrowKeys(event);\n        }\n        if (keyCode === ARROW_LEFT_KEYCODE || keyCode === ARROW_RIGHT_KEYCODE) {\n            this._switchSelectionBetweenTimeparts(event);\n        }\n    }\n\n    registerOnChange(fn: (value: Date) => void): void {\n        this._onChange = fn;\n    }\n\n    registerOnTouched(fn: () => void): void {\n        this._onTouched = fn;\n    }\n\n    /** Does some manual dirty checking on the native input `value` property. */\n    private _dirtyCheckNativeValue() {\n        const newValue = this.value;\n\n        if (this._previousNativeValue !== newValue) {\n            this._previousNativeValue = newValue;\n            this.stateChanges.next();\n        }\n    }\n\n    /** Checks whether the input is invalid based on the native validation. */\n    private _isBadInput(): boolean {\n        const validity = (<HTMLInputElement> this._elementRef.nativeElement).validity;\n\n        return validity && validity.badInput;\n    }\n\n    private _applyInputChanges(applyParams: {\n        changedTime?: Date;\n        doTimestringReformat?: boolean;\n    } = {}): void {\n        const { changedTime, doTimestringReformat = true } = applyParams;\n\n        const timeToApply: Date | undefined = changedTime ||\n            this._getDateFromTimeString(this._elementRef.nativeElement.value);\n        this._currentDTimeInput = timeToApply;\n\n        if (doTimestringReformat && timeToApply !== undefined) {\n            this._renderer.setProperty(\n                this._elementRef.nativeElement,\n                'value',\n                this._getTimeStringFromDate(timeToApply, this.timeFormat));\n        }\n\n        (<FormControl> this.ngControl.control).updateValueAndValidity();\n        const result = this.ngControl.errors === null && timeToApply !== undefined ? timeToApply : null;\n        this._onChange(result);\n        this.stateChanges.next();\n    }\n\n    private _upDownTimeByArrowKeys(event: KeyboardEvent): void {\n        event.preventDefault();\n\n        let changedTime: Date | undefined = this._currentDTimeInput;\n        if (changedTime !== undefined) {\n            const cursorPos = this._elementRef.nativeElement.selectionStart;\n\n            const modifiedTimePart = this._getTimeEditMetrics(cursorPos)\n                .modifiedTimePart;\n            const keyCode: string = this._getKeyCode(event);\n            if (keyCode === ARROW_UP_KEYCODE) { changedTime = this._incrementTime(changedTime, modifiedTimePart); }\n            if (keyCode === ARROW_DOWN_KEYCODE) { changedTime = this._decrementTime(changedTime, modifiedTimePart); }\n            this._applyInputChanges({ changedTime });\n            this._createSelectionOfTimeComponentInInput(cursorPos);\n        }\n    }\n\n    private _switchSelectionBetweenTimeparts(event: KeyboardEvent): void {\n        const changedTime: Date | undefined = this._currentDTimeInput;\n        const keyCode: string = this._getKeyCode(event);\n\n        if (changedTime !== undefined) {\n            let cursorPos: number = this._elementRef.nativeElement.selectionStart;\n            if (keyCode === ARROW_LEFT_KEYCODE) {\n                cursorPos = this._getCursorPositionOfPrevTimePartStart(cursorPos, this._elementRef.nativeElement.value);\n            } else if (keyCode === ARROW_RIGHT_KEYCODE) {\n                cursorPos = this._getCursorPositionOfNextTimePartStart(cursorPos, this._elementRef.nativeElement.value);\n            }\n            this._createSelectionOfTimeComponentInInput(cursorPos);\n        }\n    }\n\n    /**\n     * @description Microsoft EDGE doesn't support KeyboaedEvent.code thus we need this helper\n     */\n    private _getKeyCode(event: KeyboardEvent): string {\n        return event.code || event.key;\n    }\n\n    private _createSelectionOfTimeComponentInInput(cursorPos: number): void {\n        setTimeout(() => {\n            const newEditParams = this._getTimeEditMetrics(cursorPos);\n            this._elementRef.nativeElement.selectionStart = newEditParams.cursorStartPosition;\n            this._elementRef.nativeElement.selectionEnd = newEditParams.cursorEndPosition;\n        });\n    }\n\n    private _incrementTime(dateVal: Date,\n                           whatToIncrement: TimeParts = TimeParts.seconds): Date {\n        let { hours, minutes, seconds } = this._getTimeDigitsFromDate(dateVal);\n\n        switch (whatToIncrement) {\n            case TimeParts.hours:\n                hours++;\n                break;\n            case TimeParts.minutes:\n                minutes++;\n                break;\n            case TimeParts.seconds:\n                seconds++;\n                break;\n            default:\n        }\n\n        if (seconds > SECONDS_PER_MINUTE) { seconds = 0; }\n\n        if (minutes > MINUTES_PER_HOUR) { minutes = 0; }\n\n        if (hours > HOURS_PER_DAY) { hours = 0; }\n\n        return <Date> this._getDateFromTimeDigits(hours, minutes, seconds);\n    }\n\n    /**\n     * @description Decrement part of time\n     */\n    private _decrementTime(dateVal: Date,\n                           whatToDecrement: TimeParts = TimeParts.seconds): Date {\n        let { hours, minutes, seconds } = this._getTimeDigitsFromDate(dateVal);\n\n        switch (whatToDecrement) {\n            case TimeParts.hours:\n                hours--;\n                break;\n            case TimeParts.minutes:\n                minutes--;\n                break;\n            case TimeParts.seconds:\n                seconds--;\n                break;\n            default:\n        }\n\n        if (seconds < 0) { seconds = SECONDS_PER_MINUTE; }\n\n        if (minutes < 0) { minutes = MINUTES_PER_HOUR; }\n\n        if (hours < 0) { hours = HOURS_PER_DAY; }\n\n        return <Date> this._getDateFromTimeDigits(hours, minutes, seconds);\n    }\n\n    private _getCursorPositionOfPrevTimePartStart(cursorPos: number, timeString: string): number {\n        return cursorPos === 0 ? timeString.length : cursorPos - 1;\n    }\n\n    private _getCursorPositionOfNextTimePartStart(cursorPos: number,\n                                                  timeString: string,\n                                                  timeDevider: string = ':'): number {\n        const nextDividerPos: number = timeString.indexOf(timeDevider, cursorPos);\n\n        return nextDividerPos !== undefined ? nextDividerPos + 1 : 0;\n    }\n\n    /**\n     * @description Get params for arrow-keys (up/down) time valie edit.\n     * @param cursorPosition Current cursor position in timeString\n     */\n    private _getTimeEditMetrics(cursorPosition: number): {\n        modifiedTimePart: TimeParts;\n        cursorStartPosition: number;\n        cursorEndPosition: number;\n    } {\n        const timeString: string = this._elementRef.nativeElement.value;\n        let modifiedTimePart: TimeParts;\n        let cursorStartPosition: number;\n        let cursorEndPosition: number;\n        const hoursIndex = 0;\n        const minutesIndex = timeString.indexOf(':', hoursIndex + 1);\n        const secondsIndex = minutesIndex !== -1 ? timeString.indexOf(':', minutesIndex + 1) : -1;\n\n        if (secondsIndex !== -1 && cursorPosition > secondsIndex) {\n            modifiedTimePart = TimeParts.seconds;\n            cursorStartPosition = secondsIndex + 1;\n            cursorEndPosition = timeString.length;\n        } else if (minutesIndex !== -1 && cursorPosition > minutesIndex) {\n            modifiedTimePart = TimeParts.minutes;\n            cursorStartPosition = minutesIndex + 1;\n            cursorEndPosition = secondsIndex > -1 ? secondsIndex : timeString.length;\n        } else {\n            modifiedTimePart = TimeParts.hours;\n            cursorStartPosition = hoursIndex;\n            cursorEndPosition = minutesIndex !== -1 ? minutesIndex : timeString.length;\n        }\n\n        return {\n            modifiedTimePart,\n            cursorStartPosition,\n            cursorEndPosition\n        };\n    }\n\n    /**\n     * @description Create time string for displaying inside input element of UI\n     */\n    private _getTimeStringFromDate(tempVal: Date,\n                                   timeFormat: TimeFormats = DEFAULT_TIME_FORMAT): string {\n        const hours: string = this._getNumberWithLeadingZero(tempVal.getHours());\n        const minutes: string = this._getNumberWithLeadingZero(tempVal.getMinutes());\n        const seconds: string = this._getNumberWithLeadingZero(tempVal.getSeconds());\n\n        const formattedTimeGenerators = {\n            [TimeFormats.HHmm]: () => `${hours}:${minutes}`,\n            [TimeFormats.HHmmss]: () => `${hours}:${minutes}:${seconds}`\n        };\n\n        return formattedTimeGenerators[timeFormat]();\n    }\n\n    private _getParsedTimeParts(timeString: string): {\n        hoursOnly: any;\n        hoursAndMinutes: any;\n        hoursAndMinutesAndSeconds: any;\n    } {\n        const hoursAndMinutesAndSeconds = timeString.match(HOURS_MINUTES_SECONDS_REGEXP);\n        const hoursAndMinutes = timeString.match(HOURS_MINUTES_REGEXP);\n        const hoursOnly = timeString.match(HOURS_ONLY_REGEXP);\n\n        return {\n            hoursOnly,\n            hoursAndMinutes,\n            hoursAndMinutesAndSeconds\n        };\n    }\n\n    /**\n     * @description Create Date object from separate parts of time\n     */\n    private _getDateFromTimeDigits(hours: number, minutes: number, seconds: number = 0): Date | undefined {\n        return this._getDateFromTimeString(`${hours}:${minutes}:${seconds}`);\n    }\n\n    private _getDateFromTimeString(timeString: string | undefined): Date | undefined {\n        // TODO Use moment-js\n        if (timeString === undefined) { return; }\n\n        const {\n            hoursOnly,\n            hoursAndMinutes,\n            hoursAndMinutesAndSeconds\n        } = this._getParsedTimeParts(timeString);\n\n        if (timeString.trim().length === 0 ||\n            hoursOnly === null && hoursAndMinutes === null && hoursAndMinutesAndSeconds === null) {\n            return;\n        }\n\n        // tslint:disable no-magic-numbers\n        let hours: number = 0;\n        let minutes: number = 0;\n        let seconds: number = 0;\n\n        if (hoursOnly) {\n            hours = Number(hoursOnly[1]);\n        } else if (hoursAndMinutes) {\n            hours = Number(hoursAndMinutes[1]);\n            minutes = Number(hoursAndMinutes[2]);\n        } else if (hoursAndMinutesAndSeconds) {\n            hours = Number(hoursAndMinutesAndSeconds[1]);\n            minutes = Number(hoursAndMinutesAndSeconds[2]);\n            seconds = Number(hoursAndMinutesAndSeconds[3]);\n        }\n        // const timestamp: number = Date.parse(fullDateString);\n        const resultDate: Date = new Date(1970, 0, 1, hours, minutes, seconds);\n        // tslint:enable no-magic-numbers\n\n        return isNaN(resultDate.getTime()) ? undefined : resultDate;\n    }\n\n    private _getNumberWithLeadingZero(digit: number): string {\n        const MAX_DIGIT_WITH_LEADING_ZERO: number = 9;\n\n        return digit > MAX_DIGIT_WITH_LEADING_ZERO ? `${digit}` : `0${digit}`;\n    }\n\n    private _getTimeDigitsFromDate(dateVal: Date): { hours: number; minutes: number; seconds: number } {\n        return {\n            hours: dateVal.getHours(),\n            minutes: dateVal.getMinutes(),\n            seconds: dateVal.getSeconds()\n        };\n    }\n\n    private _parseValidator(): ValidationErrors | null {\n        return this._currentDTimeInput === undefined ?\n            { mcTimepickerParse: { text: this._elementRef.nativeElement.value } } :\n            null;\n    }\n\n    private _minTimeValidator(): ValidationErrors | null {\n\n        if (this._currentDTimeInput !== undefined &&\n            this._minDTime !== undefined &&\n            this._isTimeLowerThenMin(this._currentDTimeInput)) {\n            return { mcTimepickerLowerThenMintime: { text: this._elementRef.nativeElement.value } };\n        }\n\n        return null;\n    }\n\n    private _maxTimeValidator(): ValidationErrors | null {\n        if (this._currentDTimeInput !== undefined &&\n            this._maxDTime !== undefined &&\n            this._isTimeGreaterThenMax(this._currentDTimeInput)) {\n            return { mcTimepickerHigherThenMaxtime: { text: this._elementRef.nativeElement.value } };\n        }\n\n        return null;\n    }\n\n    private _isTimeLowerThenMin(timeToCompare: Date): boolean {\n        return timeToCompare.getTime() - (<Date> this._minDTime).getTime() < 0;\n    }\n\n    private _isTimeGreaterThenMax(timeToCompare: Date): boolean {\n        return timeToCompare.getTime() - (<Date> this._maxDTime).getTime() >= 0;\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\n\nimport { A11yModule } from '@ptsecurity/cdk/a11y';\nimport { PlatformModule } from '@ptsecurity/cdk/platform';\n\nimport { McTimepicker } from './timepicker';\n\n\n@NgModule({\n    imports: [\n        CommonModule,\n        A11yModule,\n        PlatformModule,\n        FormsModule\n    ],\n    declarations: [\n        McTimepicker\n    ],\n    exports: [\n        McTimepicker\n    ]\n})\nexport class McTimepickerModule {}\n","import {\n    animate,\n    AnimationTriggerMetadata,\n    state,\n    style,\n    transition,\n    trigger,\n    query,\n    animateChild,\n    group\n} from '@angular/animations';\n\n\n/**\n * The following are all the animations for the mat-select component, with each\n * const containing the metadata for one animation.\n *\n * The values below match the implementation of the AngularJS Material mat-select animation.\n */\nexport const mcSelectAnimations: {\n    readonly transformPanel: AnimationTriggerMetadata;\n    readonly fadeInContent: AnimationTriggerMetadata;\n} = {\n    /**\n     * This animation transforms the select's overlay panel on and off the page.\n     *\n     * When the panel is attached to the DOM, it expands its width by the amount of padding, scales it\n     * up to 100% on the Y axis, fades in its border, and translates slightly up and to the\n     * side to ensure the option text correctly overlaps the trigger text.\n     *\n     * When the panel is removed from the DOM, it simply fades out linearly.\n     */\n    transformPanel: trigger('transformPanel', [\n        state('void', style({\n            transform: 'scaleY(0)',\n            minWidth: '100%',\n            opacity: 0\n        })),\n        transition('void => *', group([\n            query('@fadeInContent', animateChild()),\n            animate('150ms cubic-bezier(0.25, 0.8, 0.25, 1)')\n        ])),\n        transition('* => void', [\n            animate('250ms 100ms linear', style({ opacity: 0 }))\n        ])\n    ]),\n\n    /**\n     * This animation fades in the background color and text content of the\n     * select's options. It is time delayed to occur 100ms after the overlay\n     * panel has transformed in.\n     */\n    fadeInContent: trigger('fadeInContent', [\n        state('showing', style({ opacity: 1 })),\n        transition('void => showing', [\n            style({ opacity: 0 }),\n            animate('150ms 100ms cubic-bezier(0.55, 0, 0.55, 0.2)')\n        ])\n    ])\n};\n\n\n/**\n * @deprecated\n * @breaking-change 7.0.0\n */\nexport const transformPanel = mcSelectAnimations.transformPanel;\n\n/**\n * @deprecated\n * @breaking-change 7.0.0\n */\nexport const fadeInContent = mcSelectAnimations.fadeInContent;\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { OverlayModule } from '@ptsecurity/cdk/overlay';\nimport { McOptionModule } from '@ptsecurity/mosaic/core';\nimport { McFormFieldModule } from '@ptsecurity/mosaic/form-field';\nimport { McIconModule } from '@ptsecurity/mosaic/icon';\nimport { McTagModule } from '@ptsecurity/mosaic/tag';\n\nimport { MC_SELECT_SCROLL_STRATEGY_PROVIDER, McSelect, McSelectTrigger } from './select.component';\n\n\n@NgModule({\n    imports: [\n        CommonModule,\n        OverlayModule,\n        McOptionModule,\n        McIconModule,\n        McTagModule\n    ],\n    exports: [McFormFieldModule, McSelect, McSelectTrigger, McOptionModule, CommonModule],\n    declarations: [McSelect, McSelectTrigger],\n    providers: [MC_SELECT_SCROLL_STRATEGY_PROVIDER]\n})\nexport class McSelectModule {}\n","import {\n    ChangeDetectionStrategy,\n    Component,\n    ViewEncapsulation,\n    ElementRef,\n    Input\n} from '@angular/core';\nimport { CanColor, CanColorCtor, mixinColor, ThemePalette } from '@ptsecurity/mosaic/core';\n\n\nexport type ProgressSpinnerMode = 'determinate' | 'indeterminate';\n\nlet idIterator = 0;\n\nconst MIN_PERCENT = 0;\nconst MAX_PERCENT = 100;\n\nexport class McProgressSpinnerBase {\n    constructor(public _elementRef: ElementRef) {}\n}\n\nexport const _McProgressSpinnerMixinBase:\n    CanColorCtor &\n    typeof McProgressSpinnerBase =\n        mixinColor(McProgressSpinnerBase);\n\nconst MAX_DASH_ARRAY = 273;\n\n@Component({\n    selector: 'mc-progress-spinner',\n    templateUrl: './progress-spinner.component.html',\n    styleUrls: ['./progress-spinner.css'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n    host: {\n        class: 'mc-progress-spinner',\n        '[attr.id]': 'id'\n    }\n})\nexport class McProgressSpinner extends _McProgressSpinnerMixinBase implements CanColor {\n    @Input() id: string = `mc-progress-spinner-${idIterator++}`;\n    @Input() value: number = 0;\n    @Input() mode: ProgressSpinnerMode = 'determinate';\n    @Input() color: ThemePalette = ThemePalette.Primary;\n\n    constructor(elementRef: ElementRef) {\n        super(elementRef);\n    }\n\n    get percentage(): number {\n        return Math.max(MIN_PERCENT, Math.min(MAX_PERCENT, this.value)) / MAX_PERCENT;\n    }\n\n    get dashOffsetPercent(): string {\n        return `${MAX_DASH_ARRAY - this.percentage * MAX_DASH_ARRAY}%`;\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { PlatformModule } from '@ptsecurity/cdk/platform';\n\nimport { McProgressSpinner } from './progress-spinner.component';\n\n\n@NgModule({\n    imports: [\n        CommonModule,\n        PlatformModule\n    ],\n    exports: [\n        McProgressSpinner\n    ],\n    declarations: [\n        McProgressSpinner\n    ]\n})\nexport class McProgressSpinnerModule {}\n","import {\n    AfterContentInit,\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component, ContentChildren, Directive, ElementRef, EventEmitter, forwardRef,\n    Input, OnDestroy, OnInit, Optional, Output, QueryList,\n    ViewChild,\n    ViewEncapsulation\n} from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\n\nimport { UniqueSelectionDispatcher } from '@ptsecurity/cdk/collections';\n\nimport {\n    CanColor, CanColorCtor,\n    CanDisable, CanDisableCtor,\n    HasTabIndex, HasTabIndexCtor,\n    mixinColor,\n    mixinDisabled,\n    mixinTabIndex,\n    toBoolean\n} from '@ptsecurity/mosaic/core';\n\n\n// Increasing integer for generating unique ids for radio components.\nlet nextUniqueId = 0;\n\n/** Change event object emitted by McRadio. */\nexport class McRadioChange {\n    constructor(\n        /** The McRadioButton that emits the change event. */\n        public source: McRadioButton,\n        /** The value of the McRadioButton. */\n        public value: any) {}\n}\n\n// Boilerplate for applying mixins to McRadioGroup.\n/** @docs-private */\nexport class McRadioGroupBase {}\nexport const _McRadioGroupMixinBase: CanDisableCtor & typeof McRadioGroupBase = mixinDisabled(McRadioGroupBase);\n\n/**\n * Provider Expression that allows mc-radio-group to register as a ControlValueAccessor. This\n * allows it to support [(ngModel)] and ngControl.\n * @docs-private\n */\nexport const MC_RADIO_GROUP_CONTROL_VALUE_ACCESSOR: any = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => McRadioGroup),\n    multi: true\n};\n\n@Directive({\n    selector: 'mc-radio-group',\n    exportAs: 'mcRadioGroup',\n    providers: [MC_RADIO_GROUP_CONTROL_VALUE_ACCESSOR],\n    host: {\n        role: 'radiogroup',\n        class: 'mc-radio-group'\n    },\n    inputs: ['disabled']\n})\nexport class McRadioGroup extends _McRadioGroupMixinBase\n    implements AfterContentInit, ControlValueAccessor, CanDisable {\n\n    /** Name of the radio button group. All radio buttons inside this group will use this name. */\n    @Input()\n    get name(): string { return this._name; }\n    set name(value: string) {\n        this._name = value;\n        this.updateRadioButtonNames();\n    }\n\n    /** Whether the labels should appear after or before the radio-buttons. Defaults to 'after' */\n    @Input()\n    get labelPosition(): 'before' | 'after' {\n        return this._labelPosition;\n    }\n    set labelPosition(v) {\n        this._labelPosition = v === 'before' ? 'before' : 'after';\n        this.markRadiosForCheck();\n    }\n\n    /** Value of the radio button. */\n    @Input()\n    get value(): any { return this._value; }\n    set value(newValue: any) {\n        if (this._value !== newValue) {\n            // Set this before proceeding to ensure no circular loop occurs with selection.\n            this._value = newValue;\n\n            this.updateSelectedRadioFromValue();\n            this.checkSelectedRadioButton();\n        }\n    }\n\n    /** Whether the radio button is selected. */\n    @Input()\n    get selected() { return this._selected; }\n    set selected(selected: McRadioButton | null) {\n        this._selected = selected;\n        this.value = selected ? selected.value : null;\n        this.checkSelectedRadioButton();\n    }\n\n    /** Whether the radio group is disabled */\n    @Input()\n    get disabled(): boolean { return this._disabled; }\n    set disabled(value) {\n        this._disabled = toBoolean(value);\n        this.markRadiosForCheck();\n    }\n\n    /** Whether the radio group is required */\n    @Input()\n    get required(): boolean { return this._required; }\n    set required(value: boolean) {\n        this._required = toBoolean(value);\n        this.markRadiosForCheck();\n    }\n\n    /**\n     * Event emitted when the group value changes.\n     * Change events are only emitted when the value changes due to user interaction with\n     * a radio button (the same behavior as `<input type-\"radio\">`).\n     */\n    @Output() readonly change: EventEmitter<McRadioChange> = new EventEmitter<McRadioChange>();\n\n    /** Child radio buttons. */\n    @ContentChildren(forwardRef(() => McRadioButton), { descendants: true })\n    _radios: QueryList<McRadioButton>;\n\n    /**\n     * Selected value for group. Should equal the value of the selected radio button if there *is*\n     * a corresponding radio button with a matching value. If there is *not* such a corresponding\n     * radio button, this value persists to be applied in case a new radio button is added with a\n     * matching value.\n     */\n    private _value: any = null;\n\n    /** The HTML name attribute applied to radio buttons in this group. */\n    private _name: string = `mc-radio-group-${nextUniqueId++}`;\n\n    /** The currently selected radio button. Should match value. */\n    private _selected: McRadioButton | null = null;\n\n    /** Whether the `value` has been set to its initial value. */\n    private _isInitialized: boolean = false;\n\n    /** Whether the labels should appear after or before the radio-buttons. Defaults to 'after' */\n    private _labelPosition: 'before' | 'after' = 'after';\n\n    /** Whether the radio group is disabled. */\n    private _disabled: boolean = false;\n\n    /** Whether the radio group is required. */\n    private _required: boolean = false;\n\n    constructor(\n        private readonly _changeDetector: ChangeDetectorRef\n    ) {\n        super();\n    }\n\n    /** The method to be called in order to update ngModel */\n    // tslint:disable-next-line\n    controlValueAccessorChangeFn: (value: any) => void = () => {};\n\n    /**\n     * onTouch function registered via registerOnTouch (ControlValueAccessor).\n     * @docs-private\n     */\n    // tslint:disable-next-line\n    onTouched: () => any = () => {};\n\n    checkSelectedRadioButton() {\n        if (this._selected && !this._selected.checked) {\n            this._selected.checked = true;\n        }\n    }\n\n    /**\n     * Initialize properties once content children are available.\n     * This allows us to propagate relevant attributes to associated buttons.\n     */\n    ngAfterContentInit() {\n        // Mark this component as initialized in AfterContentInit because the initial value can\n        // possibly be set by NgModel on McRadioGroup, and it is possible that the OnInit of the\n        // NgModel occurs *after* the OnInit of the McRadioGroup.\n        this._isInitialized = true;\n    }\n\n    /**\n     * Mark this group as being \"touched\" (for ngModel). Meant to be called by the contained\n     * radio buttons upon their blur.\n     */\n    touch() {\n        if (this.onTouched) {\n            this.onTouched();\n        }\n    }\n\n    /** Dispatch change event with current selection and group value. */\n    emitChangeEvent(): void {\n        if (this._isInitialized) {\n            this.change.emit(new McRadioChange(this._selected!, this._value));\n        }\n    }\n\n    markRadiosForCheck() {\n        if (this._radios) {\n            this._radios.forEach((radio) => radio.markForCheck());\n        }\n    }\n\n    /**\n     * Sets the model value. Implemented as part of ControlValueAccessor.\n     */\n    writeValue(value: any) {\n        this.value = value;\n        this._changeDetector.markForCheck();\n    }\n\n    /**\n     * Registers a callback to be triggered when the model value changes.\n     * Implemented as part of ControlValueAccessor.\n     * @param fn Callback to be registered.\n     */\n    registerOnChange(fn: (value: any) => void) {\n        this.controlValueAccessorChangeFn = fn;\n    }\n\n    /**\n     * Registers a callback to be triggered when the control is touched.\n     * Implemented as part of ControlValueAccessor.\n     * @param fn Callback to be registered.\n     */\n    registerOnTouched(fn: any) {\n        this.onTouched = fn;\n    }\n\n    /**\n     * Sets the disabled state of the control. Implemented as a part of ControlValueAccessor.\n     * @param isDisabled Whether the control should be disabled.\n     */\n    setDisabledState(isDisabled: boolean) {\n        this.disabled = isDisabled;\n        this._changeDetector.markForCheck();\n    }\n\n    private updateRadioButtonNames(): void {\n        if (this._radios) {\n            this._radios.forEach((radio) => {\n                radio.name = this.name;\n            });\n        }\n    }\n\n    /** Updates the `selected` radio button from the internal _value state. */\n    private updateSelectedRadioFromValue(): void {\n        // If the value already matches the selected radio, do nothing.\n        const isAlreadySelected = this._selected !== null && this._selected.value === this._value;\n\n        if (this._radios != null && !isAlreadySelected) {\n            this._selected = null;\n            this._radios.forEach((radio) => {\n                radio.checked = this.value === radio.value;\n                if (radio.checked) {\n                    this._selected = radio;\n                }\n            });\n        }\n    }\n}\n\n\n// Boilerplate for applying mixins to McRadioButton.\n/** @docs-private */\nexport class McRadioButtonBase {\n    // Since the disabled property is manually defined for the McRadioButton and isn't set up in\n    // the mixin base class. To be able to use the tabindex mixin, a disabled property must be\n    // defined to properly work.\n    disabled: boolean;\n\n    constructor(public _elementRef: ElementRef) {}\n}\n\nexport const _McRadioButtonMixinBase:\n    CanColorCtor &\n    HasTabIndexCtor &\n    typeof McRadioButtonBase =\n        mixinColor(mixinTabIndex(McRadioButtonBase));\n\n\n@Component({\n    selector: 'mc-radio-button',\n    templateUrl: 'radio.component.html',\n    styleUrls: ['radio.css'],\n    inputs: ['color', 'tabIndex'],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    exportAs: 'mcRadioButton',\n    host: {\n        class: 'mc-radio-button',\n        '[attr.id]': 'id',\n        '[class.mc-radio-checked]': 'checked',\n        '[class.mc-radio-disabled]': 'disabled',\n        '(focus)': '_inputElement.nativeElement.focus()'\n    }\n})\nexport class McRadioButton extends _McRadioButtonMixinBase\n    implements OnInit, OnDestroy, CanColor, HasTabIndex {\n\n    private readonly _uniqueId: string = `mc-radio-${++nextUniqueId}`;\n\n    /* tslint:disable:member-ordering */\n\n    /** The unique ID for the radio button. */\n    @Input() id: string = this._uniqueId;\n\n    /** Analog to HTML 'name' attribute used to group radios for unique selection. */\n    @Input() name: string;\n\n    /** Used to set the 'aria-label' attribute on the underlying input element. */\n    @Input('aria-label') ariaLabel: string;\n\n    /** The 'aria-labelledby' attribute takes precedence as the element's text alternative. */\n    @Input('aria-labelledby') ariaLabelledby: string;\n\n    /** The 'aria-describedby' attribute is read after the element's label and field type. */\n    @Input('aria-describedby') ariaDescribedby: string;\n\n    /** Whether this radio button is checked. */\n    @Input()\n    get checked(): boolean { return this._checked; }\n    set checked(value: boolean) {\n        const newCheckedState = toBoolean(value);\n\n        if (this._checked !== newCheckedState) {\n            this._checked = newCheckedState;\n\n            if (newCheckedState && this.radioGroup && this.radioGroup.value !== this.value) {\n                this.radioGroup.selected = this;\n            } else if (!newCheckedState && this.radioGroup && this.radioGroup.value === this.value) {\n                // When unchecking the selected radio button, update the selected radio\n                // property on the group.\n                this.radioGroup.selected = null;\n            }\n\n            if (newCheckedState) {\n                // Notify all radio buttons with the same name to un-check.\n                this._radioDispatcher.notify(this.id, this.name);\n            }\n            this._changeDetector.markForCheck();\n        }\n    }\n\n    /** The value of this radio button. */\n    @Input()\n    get value(): any { return this._value; }\n    set value(value: any) {\n        if (this._value !== value) {\n            this._value = value;\n            if (this.radioGroup != null) {\n                if (!this.checked) {\n                    // Update checked when the value changed to match the radio group's value\n                    this.checked = this.radioGroup.value === value;\n                }\n                if (this.checked) {\n                    this.radioGroup.selected = this;\n                }\n            }\n        }\n    }\n\n    /** Whether the radio button is disabled. */\n    @Input()\n    get disabled(): boolean {\n        return this._disabled || (this.radioGroup != null && this.radioGroup.disabled);\n    }\n    set disabled(value: boolean) {\n        const newDisabledState = toBoolean(value);\n\n        if (this._disabled !== newDisabledState) {\n\n            this._disabled = newDisabledState;\n            this._changeDetector.markForCheck();\n        }\n    }\n\n    /** Whether the radio button is required. */\n    @Input()\n    get required(): boolean {\n        return this._required || (this.radioGroup && this.radioGroup.required);\n    }\n    set required(value: boolean) {\n        this._required = toBoolean(value);\n    }\n\n    /** Whether the label should appear after or before the radio button. Defaults to 'after' */\n    @Input()\n    get labelPosition(): 'before' | 'after' {\n        return this._labelPosition || (this.radioGroup && this.radioGroup.labelPosition) || 'after';\n    }\n    set labelPosition(value) {\n        this._labelPosition = value;\n    }\n    private _labelPosition: 'before' | 'after';\n\n    /** The native `<input type=radio>` element */\n    @ViewChild('input') _inputElement: ElementRef;\n\n    /**\n     * Event emitted when the checked state of this radio button changes.\n     * Change events are only emitted when the value changes due to user interaction with\n     * the radio button (the same behavior as `<input type-\"radio\">`).\n     */\n    @Output() readonly change: EventEmitter<McRadioChange> = new EventEmitter<McRadioChange>();\n\n    /** The parent radio group. May or may not be present. */\n    radioGroup: McRadioGroup;\n\n    @Input()\n    isFocused: boolean = false;\n\n    /** ID of the native input element inside `<mc-radio-button>` */\n    get inputId(): string { return `${this.id || this._uniqueId}-input`; }\n\n    /** Whether this radio is checked. */\n    private _checked: boolean = false;\n\n    /** Whether this radio is disabled. */\n    private _disabled: boolean;\n\n    /** Whether this radio is required. */\n    private _required: boolean;\n\n    /** Value assigned to this radio. */\n    private _value: any = null;\n\n    /** Unregister function for _radioDispatcher */\n    // tslint:disable-next-line\n    private readonly removeUniqueSelectionListener: () => void = () => {};\n\n    constructor(\n        @Optional() radioGroup: McRadioGroup,\n        elementRef: ElementRef,\n        private readonly _changeDetector: ChangeDetectorRef,\n        private readonly _radioDispatcher: UniqueSelectionDispatcher\n    ) {\n\n        super(elementRef);\n\n        this.radioGroup = radioGroup;\n\n        this.removeUniqueSelectionListener =\n            _radioDispatcher.listen((id: string, name: string) => {\n                if (id !== this.id && name === this.name) {\n                    this.checked = false;\n                }\n            });\n    }\n\n    ngOnInit() {\n        if (this.radioGroup) {\n            // If the radio is inside a radio group, determine if it should be checked\n            this.checked = this.radioGroup.value === this._value;\n            // Copy name from parent radio group\n            this.name = this.radioGroup.name;\n        }\n    }\n\n    ngOnDestroy() {\n        this.removeUniqueSelectionListener();\n    }\n\n    /** Focuses the radio button. */\n    // tslint:disable-next-line\n    focus(): void {}\n\n    /**\n     * Marks the radio button as needing checking for change detection.\n     * This method is exposed because the parent radio group will directly\n     * update bound properties of the radio button.\n     */\n    markForCheck() {\n        // When group value changes, the button will not be notified. Use `markForCheck` to explicit\n        // update radio button's status\n        this._changeDetector.markForCheck();\n    }\n\n    onInputClick(event: Event) {\n        // We have to stop propagation for click events on the visual hidden input element.\n        // By default, when a user clicks on a label element, a generated click event will be\n        // dispatched on the associated input element. Since we are using a label element as our\n        // root container, the click event on the `radio-button` will be executed twice.\n        // The real click event will bubble up, and the generated click event also tries to bubble up.\n        // This will lead to multiple click events.\n        // Preventing bubbling for the second event will solve that issue.\n        event.stopPropagation();\n    }\n\n    onInputChange(event: Event) {\n        // We always have to stop propagation on the change event.\n        // Otherwise the change event, from the input element, will bubble up and\n        // emit its event object to the `change` output.\n        event.stopPropagation();\n\n        const groupValueChanged = this.radioGroup && this.value !== this.radioGroup.value;\n        this.checked = true;\n        this.emitChangeEvent();\n\n        if (this.radioGroup) {\n            this.radioGroup.controlValueAccessorChangeFn(this.value);\n            this.radioGroup.touch();\n            if (groupValueChanged) {\n                this.radioGroup.emitChangeEvent();\n            }\n        }\n    }\n\n    /** Dispatch change event with current value. */\n    private emitChangeEvent(): void {\n        this.change.emit(new McRadioChange(this, this._value));\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { A11yModule } from '@ptsecurity/cdk/a11y';\nimport { McCommonModule } from '@ptsecurity/mosaic/core';\n\nimport { McRadioButton, McRadioGroup } from './radio.component';\n\n\n@NgModule({\n    imports: [CommonModule, A11yModule, McCommonModule],\n    exports: [McRadioGroup, McRadioButton],\n    declarations: [McRadioGroup, McRadioButton]\n})\nexport class McRadioModule {\n}\n","import { Directive, Input } from '@angular/core';\n\nimport { CdkTreeNodeDef } from '@ptsecurity/cdk/tree';\n\n\n@Directive({\n    selector: '[mcTreeNodeDef]',\n    inputs: ['when: mcTreeNodeDefWhen'],\n    providers: [{ provide: CdkTreeNodeDef, useExisting: McTreeNodeDef }]\n})\nexport class McTreeNodeDef<T> extends CdkTreeNodeDef<T> {\n    @Input('mcTreeNode') data: T;\n}\n","import { Directive, Input, OnInit } from '@angular/core';\nimport { CdkTreeNodePadding } from '@ptsecurity/cdk/tree';\n\n\n@Directive({\n    selector: '[mcTreeNodePadding]',\n    providers: [{ provide: CdkTreeNodePadding, useExisting: McTreeNodePadding }]\n})\nexport class McTreeNodePadding<T> extends CdkTreeNodePadding<T> implements OnInit {\n    get leftPadding(): number {\n        return (this._withIcon ? 0 : this._iconWidth) + this._baseLeftPadding;\n    }\n\n    _baseLeftPadding: number = 6;\n    _iconWidth: number = 20;\n    _indent: number = 16;\n\n    @Input('mcTreeNodePadding') level: number;\n\n    @Input('mcTreeNodePaddingIndent') indent: number;\n\n    _withIcon: boolean;\n\n    _paddingIndent(): string | null {\n        const nodeLevel = (this._treeNode.data && this._tree.treeControl.getLevel)\n            ? this._tree.treeControl.getLevel(this._treeNode.data)\n            : null;\n\n        const level = this._level || nodeLevel;\n\n        return level ? `${(level * this._indent) + this.leftPadding}px` : `${this._baseLeftPadding}px`;\n    }\n\n    ngOnInit(): void {\n        this._withIcon = this._tree.treeControl.isExpandable(this._treeNode.data);\n        this._setPadding();\n    }\n}\n","import {\n    AfterContentInit,\n    Attribute,\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component, ContentChildren, EventEmitter, forwardRef, Input, IterableDiffer,\n    IterableDiffers, Output, QueryList,\n    ViewChild,\n    ViewEncapsulation,\n    Directive, ElementRef, Inject\n} from '@angular/core';\nimport { NodeDef, ViewData } from '@angular/core/src/view';\n\nimport { SelectionModel } from '@ptsecurity/cdk/collections';\nimport { CdkTreeNode, CdkTree, CdkTreeNodeOutlet } from '@ptsecurity/cdk/tree';\n\nimport {\n    CanDisable, CanDisableCtor,\n    HasTabIndex,\n    HasTabIndexCtor,\n    mixinDisabled,\n    mixinTabIndex,\n    toBoolean\n} from '@ptsecurity/mosaic/core';\n\nimport { FocusKeyManager } from '@ptsecurity/cdk/a11y';\n\nimport { END, ENTER, HOME, LEFT_ARROW, PAGE_DOWN, PAGE_UP, RIGHT_ARROW, SPACE } from '@ptsecurity/cdk/keycodes';\n\n\n/**\n * Wrapper for the CdkTree node with Material design styles.\n */\n@Directive({\n    exportAs: 'mcTreeNodeOption',\n    selector: 'mc-tree-node-option',\n    host: {\n        tabindex: '-1',\n        '[class.mc-selected]': 'selected',\n        '[class.mc-focused]': '_hasFocus',\n        '[attr.aria-expanded]': 'isExpanded',\n        '[attr.aria-level]': 'role === \"treeitem\" ? level : null',\n        class: 'mc-tree-node',\n\n        '(focus)': '_handleFocus()',\n        '(blur)': '_handleBlur()',\n\n        '(click)': '_handleClick()'\n    },\n    providers: [\n        { provide: CdkTreeNode, useExisting: McTreeNodeOption }\n    ]\n})\nexport class McTreeNodeOption<T> extends CdkTreeNode<T> implements CanDisable {\n    @Input() role: 'treeitem' | 'group' = 'treeitem';\n\n    @Input()\n    get disabled() {\n        return this._disabled;\n    }\n\n    set disabled(value: any) {\n        const newValue = toBoolean(value);\n\n        if (newValue !== this._disabled) {\n            this._disabled = newValue;\n        }\n    }\n\n    @Input()\n    get selected(): boolean {\n        return this.treeSelection.selectedOptions && this.treeSelection.selectedOptions.isSelected(this) || false;\n    }\n\n    set selected(value: boolean) {\n        const isSelected = toBoolean(value);\n\n        if (isSelected !== this._selected) {\n            this.setSelected(isSelected);\n\n            // this.treeSelection._reportValueChange();\n        }\n    }\n\n    private _hasFocus: boolean = false;\n\n    private _disabled: boolean = false;\n    private _selected: boolean = false;\n\n    constructor(\n        protected _elementRef: ElementRef,\n        @Inject(forwardRef(() => McTreeSelection))\n        protected treeSelection: McTreeSelection<T>\n    ) {\n        super(_elementRef, treeSelection);\n    }\n\n    focus(): void {\n        this._elementRef.nativeElement.focus();\n\n        this.treeSelection.setFocusedOption(this);\n    }\n\n    toggle(): void {\n        this.selected = !this.selected;\n    }\n\n    setSelected(selected: boolean) {\n        if (this._selected === selected || !this.treeSelection.selectedOptions) { return; }\n\n        this._selected = selected;\n\n        if (selected) {\n            this.treeSelection.selectedOptions.select(this);\n        } else {\n            this.treeSelection.selectedOptions.deselect(this);\n        }\n\n        // this._changeDetector.markForCheck();\n    }\n\n    _getHeight(): number {\n        return this._elementRef.nativeElement.getClientRects()[0].height;\n    }\n\n    _handleFocus(): void {\n        if (this.disabled || this._hasFocus) { return; }\n\n        this._hasFocus = true;\n    }\n\n    _handleBlur(): void {\n        this._hasFocus = false;\n    }\n\n    _handleClick(): void {\n        if (this.disabled) { return; }\n\n        this.treeSelection.setFocusedOption(this);\n    }\n}\n\nexport const _McTreeSelectionBase:\n    HasTabIndexCtor &\n    CanDisableCtor &\n    typeof CdkTree\n    = mixinTabIndex(mixinDisabled(CdkTree));\n\nexport class McTreeNavigationChange {\n    constructor(\n        public source: McTreeSelection<any>,\n        public option: McTreeNodeOption<any>\n    ) {}\n}\n\nexport class McTreeSelectionChange {\n    constructor(\n        public source: McTreeSelection<any>,\n        public option: McTreeNodeOption<any>\n    ) {}\n}\n\n@Component({\n    exportAs: 'mcTreeSelection',\n    selector: 'mc-tree-selection',\n    template: `<ng-container cdkTreeNodeOutlet></ng-container>`,\n    host: {\n        '[tabIndex]': 'tabIndex',\n        class: 'mc-tree-selection',\n        role: 'tree-selection',\n        '(keydown)': '_onKeyDown($event)',\n        '(window:resize)': 'updateScrollSize()'\n    },\n    styleUrls: ['./tree.css'],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    providers: [{ provide: CdkTree, useExisting: McTreeSelection }]\n})\nexport class McTreeSelection<T> extends _McTreeSelectionBase<T>\n    implements AfterContentInit, CanDisable, HasTabIndex {\n    // Outlets within the tree's template where the dataNodes will be inserted.\n    @ViewChild(CdkTreeNodeOutlet) _nodeOutlet: CdkTreeNodeOutlet;\n\n    @ContentChildren(forwardRef(() => McTreeNodeOption)) options: QueryList<McTreeNodeOption<T>>;\n\n    _keyManager: FocusKeyManager<McTreeNodeOption<T>>;\n\n    selectedOptions: SelectionModel<McTreeNodeOption<T>>;\n\n    _disabled: boolean = false;\n    tabIndex: number;\n    multiple: boolean;\n    autoSelect: boolean;\n    noUnselect: boolean;\n\n    // todo temporary solution\n    withShift: boolean;\n    withCtrl: boolean;\n\n    @Input()\n    get disabled(): boolean {\n        return this._disabled;\n    }\n\n    set disabled(rawValue: boolean) {\n        const value = toBoolean(rawValue);\n\n        if (this._disabled !== value) {\n            this._disabled = value;\n\n            if (this._disabled) {\n                console.log('need disable all options');\n            } else {\n                console.log('need enable all options');\n            }\n        }\n    }\n\n    @Output() readonly navigationChange = new EventEmitter<McTreeNavigationChange>();\n\n    @Output() readonly selectionChange = new EventEmitter<McTreeSelectionChange>();\n\n    constructor(\n        private _elementRef: ElementRef,\n        _differs: IterableDiffers,\n        _changeDetectorRef: ChangeDetectorRef,\n        @Attribute('tabindex') tabIndex: string,\n        @Attribute('multiple') multiple: string,\n        @Attribute('auto-select') autoSelect: string,\n        @Attribute('no-unselect') noUnselect: string\n    ) {\n        super(_differs, _changeDetectorRef);\n\n        this.tabIndex = parseInt(tabIndex) || 0;\n\n        this.multiple = multiple === null ? true : toBoolean(multiple);\n        this.autoSelect = autoSelect === null ? true : toBoolean(autoSelect);\n        this.noUnselect = noUnselect === null ? true : toBoolean(noUnselect);\n\n        this.selectedOptions = new SelectionModel<McTreeNodeOption<T>>(this.multiple);\n    }\n\n    _onKeyDown(event: KeyboardEvent) {\n        const keyCode = event.keyCode;\n        this.withShift = event.shiftKey;\n        this.withCtrl = event.ctrlKey;\n\n        switch (keyCode) {\n            case LEFT_ARROW:\n                if (this._keyManager.activeItem) {\n                    this.treeControl.collapse(this._keyManager.activeItem.data);\n                }\n\n                event.preventDefault();\n\n                break;\n            case RIGHT_ARROW:\n                if (this._keyManager.activeItem) {\n                    this.treeControl.expand(this._keyManager.activeItem.data);\n                }\n\n                event.preventDefault();\n\n                break;\n            case SPACE:\n            case ENTER:\n                this.toggleFocusedOption();\n                event.preventDefault();\n\n                break;\n            case HOME:\n                this._keyManager.setFirstItemActive();\n                event.preventDefault();\n\n                break;\n            case END:\n                this._keyManager.setLastItemActive();\n                event.preventDefault();\n\n                break;\n            case PAGE_UP:\n                this._keyManager.setPreviousPageItemActive();\n                event.preventDefault();\n\n                break;\n            case PAGE_DOWN:\n                this._keyManager.setNextPageItemActive();\n                event.preventDefault();\n\n                break;\n            default:\n                this._keyManager.onKeydown(event);\n        }\n    }\n\n    ngAfterContentInit(): void {\n        this._keyManager = new FocusKeyManager<McTreeNodeOption<T>>(this.options)\n            .withTypeAhead()\n            .withVerticalOrientation(true)\n            .withHorizontalOrientation(null);\n    }\n\n    updateScrollSize(): void {\n        if (!this.options.first) { return; }\n\n        this._keyManager.withScrollSize(Math.floor(this._getHeight() / this.options.first._getHeight()));\n    }\n\n    setFocusedOption(option: McTreeNodeOption<T>): void {\n        this._keyManager.updateActiveItem(option);\n\n        if (this.withShift && this.multiple) {\n            const previousIndex = this._keyManager.previousActiveItemIndex;\n            const activeIndex = this._keyManager.activeItemIndex;\n\n            if (previousIndex < activeIndex) {\n                this.options.forEach((item, index) => {\n                    if (index >= previousIndex && index <= activeIndex) { item.setSelected(true); }\n                });\n            } else {\n                this.options.forEach((item, index) => {\n                    if (index >= activeIndex && index <= previousIndex) { item.setSelected(true); }\n                });\n            }\n\n            this.withShift = false;\n        } else if (this.withCtrl) {\n            this.withCtrl = false;\n\n            if (!this._canDeselectLast(option)) { return; }\n\n            option.toggle();\n        } else {\n            if (this.autoSelect) {\n                this.options.forEach((item) => item.setSelected(false));\n                option.setSelected(true);\n            }\n        }\n\n        this._emitNavigationEvent(option);\n    }\n\n    // Toggles the selected state of the currently focused option.\n    toggleFocusedOption(): void {\n        const focusedIndex = this._keyManager.activeItemIndex;\n\n        if (focusedIndex != null && this._isValidIndex(focusedIndex)) {\n            const focusedOption: McTreeNodeOption<T> = this.options.toArray()[focusedIndex];\n\n            if (focusedOption && this._canDeselectLast(focusedOption)) {\n                focusedOption.toggle();\n\n                // Emit a change event because the focused option changed its state through user interaction.\n                this._emitChangeEvent(focusedOption);\n            }\n        }\n    }\n\n    renderNodeChanges(\n        data: T[],\n        dataDiffer: IterableDiffer<T> = this._dataDiffer,\n        viewContainer: any = this._nodeOutlet.viewContainer,\n        parentData?: T\n    ) {\n        super.renderNodeChanges(data, dataDiffer, viewContainer, parentData);\n\n        const arrayOfInstances = [];\n\n        viewContainer._embeddedViews.forEach((view: ViewData) => {\n            const viewDef = view.def;\n\n            viewDef.nodes.forEach((node: NodeDef) => {\n                if (viewDef.nodeMatchedQueries === node.matchedQueryIds) {\n                    const nodeData: any = view.nodes[node.nodeIndex];\n\n                    arrayOfInstances.push(nodeData.instance as never);\n                }\n            });\n        });\n\n        if (this.options) {\n            this.options.reset(arrayOfInstances);\n            this.options.notifyOnChanges();\n        }\n\n        this.updateScrollSize();\n    }\n\n    _getHeight(): number {\n        return this._elementRef.nativeElement.getClientRects()[0].height;\n    }\n\n    _emitNavigationEvent(option: McTreeNodeOption<T>): void {\n        this.navigationChange.emit(new McTreeNavigationChange(this, option));\n    }\n\n    _emitChangeEvent(option: McTreeNodeOption<T>): void {\n        this.selectionChange.emit(new McTreeNavigationChange(this, option));\n    }\n\n    /**\n     * Utility to ensure all indexes are valid.\n     * @param index The index to be checked.\n     * @returns True if the index is valid for our list of options.\n     */\n    private _isValidIndex(index: number): boolean {\n        return index >= 0 && index < this.options.length;\n    }\n\n    private _canDeselectLast(option: McTreeNodeOption<T>): boolean {\n        return !(this.noUnselect && this.selectedOptions.selected.length === 1 && option.selected);\n    }\n}\n\n","import { NgModule } from '@angular/core';\n\nimport { CommonModule } from '@angular/common';\nimport { CdkTreeModule } from '@ptsecurity/cdk/tree';\n\nimport { McTreeNodeDef } from './node';\nimport { McTreeNodePadding } from './padding';\nimport { McTreeSelection, McTreeNodeOption } from './tree-selection';\n\n\nconst MC_TREE_DIRECTIVES = [\n    McTreeNodeDef,\n    McTreeNodePadding,\n    McTreeSelection,\n    McTreeNodeOption\n];\n\n@NgModule({\n    imports: [CommonModule, CdkTreeModule],\n    exports: MC_TREE_DIRECTIVES,\n    declarations: MC_TREE_DIRECTIVES\n})\nexport class McTreeModule {}\n","import { ICollectionViewer, DataSource } from '@ptsecurity/cdk/collections';\nimport { FlatTreeControl, ITreeControl } from '@ptsecurity/cdk/tree';\nimport { BehaviorSubject, merge, Observable } from 'rxjs';\nimport { map, take } from 'rxjs/operators';\n\n\n/**\n * Tree flattener to convert a normal type of node to node with children & level information.\n * Transform nested nodes of type `T` to flattened nodes of type `F`.\n *\n * For example, the input data of type `T` is nested, and contains its children data:\n *   SomeNode: {\n *     key: 'Fruits',\n *     children: [\n *       NodeOne: {\n *         key: 'Apple',\n *       },\n *       NodeTwo: {\n *        key: 'Pear',\n *      }\n *    ]\n *  }\n *  After flattener flatten the tree, the structure will become\n *  SomeNode: {\n *    key: 'Fruits',\n *    expandable: true,\n *    level: 1\n *  },\n *  NodeOne: {\n *    key: 'Apple',\n *    expandable: false,\n *    level: 2\n *  },\n *  NodeTwo: {\n *   key: 'Pear',\n *   expandable: false,\n *   level: 2\n * }\n * and the output flattened type is `F` with additional information.\n */\nexport class McTreeFlattener<T, F> {\n\n    constructor(public transformFunction: (node: T, level: number) => F,\n                public getLevel: (node: F) => number,\n                public isExpandable: (node: F) => boolean,\n                public getChildren: (node: T) => Observable<T[]>) {\n    }\n\n    _flattenNode(node: T, level: number,\n                 resultNodes: F[], parentMap: boolean[]): F[] {\n        const flatNode = this.transformFunction(node, level);\n        resultNodes.push(flatNode);\n\n        if (this.isExpandable(flatNode)) {\n            this.getChildren(node).pipe(take(1)).subscribe((children) => {\n                children.forEach((child, index) => {\n                    const childParentMap: boolean[] = parentMap.slice();\n                    childParentMap.push(index !== children.length - 1);\n                    this._flattenNode(child, level + 1, resultNodes, childParentMap);\n                });\n            });\n        }\n\n        return resultNodes;\n    }\n\n    /**\n     * Flatten a list of node type T to flattened version of node F.\n     * Please note that type T may be nested, and the length of `structuredData` may be different\n     * from that of returned list `F[]`.\n     */\n    flattenNodes(structuredData: T[]): F[] {\n        const resultNodes: F[] = [];\n        structuredData.forEach((node) => this._flattenNode(node, 0, resultNodes, []));\n\n        return resultNodes;\n    }\n\n    /**\n     * Expand flattened node with current expansion status.\n     * The returned list may have different length.\n     */\n    expandFlattenedNodes(nodes: F[], treeControl: ITreeControl<F>): F[] {\n        const results: F[] = [];\n        const currentExpand: boolean[] = [];\n        currentExpand[0] = true;\n\n        nodes.forEach((node) => {\n            let expand = true;\n            for (let i = 0; i <= this.getLevel(node); i++) {\n                expand = expand && currentExpand[i];\n            }\n\n            if (expand) { results.push(node); }\n\n            if (this.isExpandable(node)) {\n                currentExpand[this.getLevel(node) + 1] = treeControl.isExpanded(node);\n            }\n        });\n\n        return results;\n    }\n}\n\n\n/**\n * Data source for flat tree.\n * The data source need to handle expansion/collapsion of the tree node and change the data feed\n * to `McTree`.\n * The nested tree nodes of type `T` are flattened through `MсTreeFlattener`, and converted\n * to type `F` for `McTree` to consume.\n */\nexport class McTreeFlatDataSource<T, F> extends DataSource<F> {\n    _flattenedData = new BehaviorSubject<F[]>([]);\n\n    _expandedData = new BehaviorSubject<F[]>([]);\n\n    _data: BehaviorSubject<T[]>;\n\n    get data() {\n        return this._data.value;\n    }\n\n    set data(value: T[]) {\n        this._data.next(value);\n        this._flattenedData.next(this.treeFlattener.flattenNodes(this.data));\n        this.treeControl.dataNodes = this._flattenedData.value;\n    }\n\n    constructor(private treeControl: FlatTreeControl<F>,\n                private treeFlattener: McTreeFlattener<T, F>,\n                initialData: T[] = []) {\n        super();\n        this._data = new BehaviorSubject<T[]>(initialData);\n    }\n\n    connect(collectionViewer: ICollectionViewer): Observable<F[]> {\n        const changes = [\n            collectionViewer.viewChange,\n            this.treeControl.expansionModel.onChange!,\n            this._flattenedData\n        ];\n\n        return merge(...changes).pipe(map(() => {\n            this._expandedData.next(\n                this.treeFlattener.expandFlattenedNodes(this._flattenedData.value, this.treeControl));\n\n            return this._expandedData.value;\n        }));\n    }\n\n    disconnect() {\n        // no op\n    }\n}\n\n","import { ICollectionViewer, DataSource } from '@ptsecurity/cdk/collections';\nimport { BehaviorSubject, merge, Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\n\n/**\n * Data source for nested tree.\n *\n * The data source for nested tree doesn't have to consider node flattener, or the way to expand\n * or collapse. The expansion/collapsion will be handled by ITreeControl and each non-leaf node.\n */\nexport class McTreeNestedDataSource<T> extends DataSource<T> {\n    _data = new BehaviorSubject<T[]>([]);\n\n    /**\n     * Data for the nested tree\n     */\n    get data() {\n        return this._data.value;\n    }\n\n    set data(value: T[]) {\n        this._data.next(value);\n    }\n\n    connect(collectionViewer: ICollectionViewer): Observable<T[]> {\n        return merge(...[collectionViewer.viewChange, this._data])\n            .pipe(map(() => this.data));\n    }\n\n    disconnect() {\n        // no op\n    }\n}\n\n","import {\n    ElementRef,\n    QueryList,\n    ContentChildren,\n    Component,\n    ChangeDetectionStrategy,\n    ViewEncapsulation\n} from '@angular/core';\n\nimport { mixinColor, CanColor, CanColorCtor } from '@ptsecurity/mosaic/core';\nimport { McIcon } from '@ptsecurity/mosaic/icon';\n\n\nexport class McTagBase {\n    constructor(public _elementRef: ElementRef) {}\n}\n\nexport const _McTagMixinBase: CanColorCtor & typeof McTagBase\n    = mixinColor(McTagBase);\n\n\n@Component({\n    selector: 'mc-tag',\n    templateUrl: 'tag.partial.html',\n    styleUrls: ['./tag.css'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n    host: { class: 'mc-tag' },\n    inputs: ['color']\n})\nexport class McTag extends _McTagMixinBase implements CanColor {\n    @ContentChildren(McIcon) contentChildren: QueryList<McIcon>;\n\n    nativeElement: HTMLElement;\n\n    constructor(elementRef: ElementRef) {\n        super(elementRef);\n\n        this.nativeElement = elementRef.nativeElement;\n    }\n\n    ngAfterContentInit() {\n        this._addClassModificatorForIcons();\n    }\n\n    _addClassModificatorForIcons() {\n        const icons = this.contentChildren.map((item) => item._elementRef.nativeElement);\n\n        if (icons.length === 1) {\n            const iconElement = icons[0];\n\n            if (!iconElement.previousElementSibling && !iconElement.nextElementSibling) {\n                if (iconElement.nextSibling) {\n                    iconElement.classList.add('mc-icon_left');\n                    this.nativeElement.classList.add('mc-left-icon');\n                }\n\n                if (iconElement.previousSibling) {\n                    iconElement.classList.add('mc-icon_right');\n                    this.nativeElement.classList.add('mc-right-icon');\n                }\n            }\n        } else if (icons.length > 1) {\n            const firstIconElement = icons[0];\n            const secondIconElement = icons[1];\n\n            firstIconElement.classList.add('mc-icon_left');\n            secondIconElement.classList.add('mc-icon_right');\n        }\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { PlatformModule } from '@ptsecurity/cdk/platform';\n\nimport { McTag } from './tag.component';\n\n\n@NgModule({\n    imports: [\n        CommonModule,\n        PlatformModule\n    ],\n    exports: [\n        McTag\n    ],\n    declarations: [\n        McTag\n    ]\n})\nexport class McTagModule {}\n","import { DOCUMENT } from '@angular/common';\nimport {\n    AfterViewInit, ChangeDetectionStrategy, ChangeDetectorRef,\n    Component,\n    ComponentFactoryResolver,\n    ComponentRef,\n    ElementRef,\n    EventEmitter,\n    Inject,\n    Injector,\n    Input,\n    OnChanges,\n    OnDestroy,\n    OnInit,\n    Output,\n    Renderer2,\n    SimpleChanges,\n    TemplateRef,\n    Type,\n    ViewChild,\n    ViewContainerRef, ViewEncapsulation\n} from '@angular/core';\nimport { ESCAPE } from '@ptsecurity/cdk/keycodes';\nimport { Overlay, OverlayRef } from '@ptsecurity/cdk/overlay';\nimport { McMeasureScrollbarService } from '@ptsecurity/mosaic/core';\nimport { Observable } from 'rxjs';\n\nimport { McModalControlService } from './modal-control.service';\nimport { McModalRef } from './modal-ref.class';\n// tslint:disable-next-line\nimport ModalUtil from './modal-util';\nimport { IModalButtonOptions, IModalOptions, ModalType, OnClickCallback } from './modal.type';\n\n\n// Duration when perform animations (ms)\nexport const MODAL_ANIMATE_DURATION = 200;\n\ntype AnimationState = 'enter' | 'leave' | null;\n\n@Component({\n    selector: 'mc-modal',\n    templateUrl: './modal.component.html',\n    styleUrls: ['./modal.css'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n    host: {\n        '(keydown)': 'onKeyDown($event)'\n    }\n})\nexport class McModalComponent<T = any, R = any> extends McModalRef<T, R>\n    implements OnInit, OnChanges, AfterViewInit, OnDestroy, IModalOptions {\n\n    // tslint:disable-next-line:no-any\n    @Input() mcModalType: ModalType = 'default';\n    // If not specified, will use <ng-content>\n    @Input() mcContent: string | TemplateRef<{}> | Type<T>;\n    // available when mcContent is a component\n    @Input() mcComponentParams: object;\n    // Default Modal ONLY\n    @Input() mcFooter: string | TemplateRef<{}> | IModalButtonOptions<T>[];\n\n    @Input()\n    get mcVisible() { return this._mcVisible; }\n    set mcVisible(value) { this._mcVisible = value; }\n    _mcVisible = false;\n\n    @Output() mcVisibleChange = new EventEmitter<boolean>();\n\n    @Input() mcZIndex: number = 1000;\n    @Input() mcWidth: number | string = 480;\n    @Input() mcWrapClassName: string;\n    @Input() mcClassName: string;\n    @Input() mcStyle: object;\n    @Input() mcTitle: string | TemplateRef<{}>;\n    @Input() mcCloseByESC: boolean = true;\n\n    @Input()\n    get mcClosable() { return this._mcClosable; }\n    set mcClosable(value) { this._mcClosable = value; }\n    _mcClosable = true;\n\n    @Input()\n    get mcMask() { return this._mcMask; }\n    set mcMask(value) { this._mcMask = value; }\n    _mcMask = true;\n\n    @Input()\n    get mcMaskClosable() { return this._mcMaskClosable; }\n    set mcMaskClosable(value) { this._mcMaskClosable = value; }\n    _mcMaskClosable = true;\n\n    @Input() mcMaskStyle: object;\n    @Input() mcBodyStyle: object;\n\n    // Trigger when modal open(visible) after animations\n    @Output() mcAfterOpen = new EventEmitter<void>();\n    // Trigger when modal leave-animation over\n    @Output() mcAfterClose = new EventEmitter<R>();\n\n    // --- Predefined OK & Cancel buttons\n    @Input() mcOkText: string;\n    @Input() mcOkType = 'primary';\n\n    @Input()\n    get mcOkLoading() { return this._mcOkLoading; }\n    set mcOkLoading(value) { this._mcOkLoading = value; }\n    _mcOkLoading = false;\n\n    @Input() @Output() mcOnOk: EventEmitter<T> | OnClickCallback<T> = new EventEmitter<T>();\n    // Only aim to focus the ok button that needs to be auto focused\n    @ViewChild('autoFocusButtonOk', {read: ElementRef}) autoFocusButtonOk: ElementRef;\n    @Input() mcCancelText: string;\n\n    @Input()\n    get mcCancelLoading() { return this._mcCancelLoading; }\n    set mcCancelLoading(value) { this._mcCancelLoading = value; }\n    _mcCancelLoading = false;\n\n    @Input() @Output() mcOnCancel: EventEmitter<T> | OnClickCallback<T> = new EventEmitter<T>();\n    @ViewChild('modalContainer') modalContainer: ElementRef;\n    @ViewChild('bodyContainer', {read: ViewContainerRef}) bodyContainer: ViewContainerRef;\n    maskAnimationClassMap: object;\n    modalAnimationClassMap: object;\n    // The origin point that animation based on\n    transformOrigin = '0px 0px 0px';\n\n    // Observable alias for mcAfterOpen\n    get afterOpen(): Observable<void> {\n        return this.mcAfterOpen.asObservable();\n    }\n\n    // Observable alias for mcAfterClose\n    get afterClose(): Observable<R> {\n        return this.mcAfterClose.asObservable();\n    }\n\n    get okText(): string {\n        return this.mcOkText;\n    }\n\n    get cancelText(): string {\n        return this.mcCancelText;\n    }\n\n    // Indicate whether this dialog should hidden\n    get hidden(): boolean {\n        return !this.mcVisible && !this.animationState;\n    }\n\n    // Handle the reference when using mcContent as Component\n    private contentComponentRef: ComponentRef<T>;\n    // Current animation state\n    private animationState: AnimationState;\n    private container: HTMLElement | OverlayRef;\n\n    constructor(\n        private overlay: Overlay,\n        private renderer: Renderer2,\n        private cfr: ComponentFactoryResolver,\n        private elementRef: ElementRef,\n        private viewContainer: ViewContainerRef,\n        private mcMeasureScrollbarService: McMeasureScrollbarService,\n        private modalControl: McModalControlService,\n        private changeDetector: ChangeDetectorRef,\n        @Inject(DOCUMENT) private document: any) {\n\n        super();\n    }\n\n    @Input() mcGetContainer: HTMLElement | OverlayRef | (() => HTMLElement | OverlayRef) = () => this.overlay.create();\n\n    ngOnInit() {\n\n        // Create component along without View\n        if (this.isComponent(this.mcContent)) {\n            this.createDynamicComponent(this.mcContent as Type<T>);\n        }\n\n        // Setup default button options\n        if (this.isModalButtons(this.mcFooter)) {\n            this.mcFooter = this.formatModalButtons(this.mcFooter as IModalButtonOptions<T>[]);\n        }\n\n        // Place the modal dom to elsewhere\n        this.container = typeof this.mcGetContainer === 'function' ? this.mcGetContainer() : this.mcGetContainer;\n        if (this.container instanceof HTMLElement) {\n            this.container.appendChild(this.elementRef.nativeElement);\n        } else if (this.container instanceof OverlayRef) {\n            // NOTE: only attach the dom to overlay, the view container is not changed actually\n            this.container.overlayElement.appendChild(this.elementRef.nativeElement);\n        }\n\n        // Register modal when afterOpen/afterClose is stable\n        this.modalControl.registerModal(this);\n    }\n\n    // [NOTE] NOT available when using by service!\n    // Because ngOnChanges never be called when using by service,\n    // here we can't support \"mcContent\"(Component) etc. as inputs that initialized dynamically.\n    // BUT: User also can change \"mcContent\" dynamically to trigger UI changes\n    // (provided you don't use \bComponent that needs initializations)\n    ngOnChanges(changes: SimpleChanges) {\n        if (changes.mcVisible) {\n            // Do not trigger animation while initializing\n            this.handleVisibleStateChange(this.mcVisible, !changes.mcVisible.firstChange);\n        }\n    }\n\n    ngAfterViewInit() {\n        // If using Component, it is the time to attach View while bodyContainer is ready\n        if (this.contentComponentRef) {\n            this.bodyContainer.insert(this.contentComponentRef.hostView);\n        }\n\n        if (this.autoFocusButtonOk) {\n            (this.autoFocusButtonOk.nativeElement as HTMLButtonElement).focus();\n        }\n    }\n\n    ngOnDestroy() {\n        if (this.container instanceof OverlayRef) {\n            this.container.dispose();\n        }\n    }\n\n    open() {\n        this.changeVisibleFromInside(true);\n    }\n\n    close(result?: R) {\n        this.changeVisibleFromInside(false, result);\n    }\n\n    // Destroy equals Close\n    destroy(result?: R) {\n        this.close(result);\n    }\n\n    triggerOk() {\n        this.onClickOkCancel('ok');\n    }\n\n    triggerCancel() {\n        this.onClickOkCancel('cancel');\n    }\n\n    getInstance(): McModalComponent {\n        return this;\n    }\n\n    getContentComponentRef(): ComponentRef<T> {\n        return this.contentComponentRef;\n    }\n\n    getContentComponent(): T {\n        return this.contentComponentRef && this.contentComponentRef.instance;\n    }\n\n    getElement(): HTMLElement {\n        return this.elementRef && this.elementRef.nativeElement;\n    }\n\n    onClickMask($event: MouseEvent) {\n        if (\n            this.mcMask &&\n            this.mcMaskClosable &&\n            ($event.target as HTMLElement).classList.contains('mc-modal-wrap') &&\n            this.mcVisible\n        ) {\n            this.onClickOkCancel('cancel');\n        }\n    }\n\n    // tslint:disable-next-line\n    isModalType(type: ModalType): boolean {\n        return this.mcModalType === type;\n    }\n\n    onKeyDown(event: KeyboardEvent): void {\n\n        if (event.keyCode === ESCAPE && this.container && (this.container instanceof OverlayRef)) {\n\n            this.close();\n            event.preventDefault();\n        }\n    }\n\n    // AoT\n    onClickCloseBtn() {\n        if (this.mcVisible) {\n            this.onClickOkCancel('cancel');\n        }\n    }\n\n    // AoT\n    // tslint:disable-next-line\n    onClickOkCancel(type: 'ok' | 'cancel') {\n        const trigger = { ok: this.mcOnOk, cancel: this.mcOnCancel }[type];\n        const loadingKey = { ok: 'mcOkLoading', cancel: 'mcCancelLoading' }[type];\n\n        if (trigger instanceof EventEmitter) {\n            trigger.emit(this.getContentComponent());\n        } else if (typeof trigger === 'function') {\n\n            const result = trigger(this.getContentComponent());\n            // Users can return \"false\" to prevent closing by default\n            const caseClose = (doClose: boolean | void | {}) => (doClose !== false) && this.close(doClose as R);\n\n            if (isPromise(result)) {\n                this[loadingKey] = true;\n                const handleThen = (doClose) => {\n                    this[loadingKey] = false;\n                    caseClose(doClose);\n                };\n                (result as Promise<void>).then(handleThen).catch(handleThen);\n            } else {\n                caseClose(result);\n            }\n        }\n    }\n\n    // AoT\n    isNonEmptyString(value: {}): boolean {\n        return typeof value === 'string' && value !== '';\n    }\n\n    // AoT\n    isTemplateRef(value: {}): boolean {\n        return value instanceof TemplateRef;\n    }\n\n    // AoT\n    isComponent(value: {}): boolean {\n        return value instanceof Type;\n    }\n\n    // AoT\n    isModalButtons(value: {}): boolean {\n        return Array.isArray(value) && value.length > 0;\n    }\n\n    // Do rest things when visible state changed\n    private handleVisibleStateChange(visible: boolean, animation: boolean = true, closeResult?: R): Promise<any> {\n        // Hide scrollbar at the first time when shown up\n        if (visible) {\n            this.changeBodyOverflow(1);\n        }\n\n        return Promise\n            .resolve(animation && this.animateTo(visible))\n            // Emit open/close event after animations over\n            .then(() => {\n                if (visible) {\n                    this.mcAfterOpen.emit();\n                } else {\n                    this.mcAfterClose.emit(closeResult);\n                    // Show/hide scrollbar when animation is over\n                    this.changeBodyOverflow();\n                }\n            });\n    }\n\n    // Lookup a button's property, if the prop is a function, call & then return the result, otherwise, return itself.\n    // AoT\n    // tslint:disable-next-line\n    getButtonCallableProp(options: IModalButtonOptions<T>, prop: string): {} {\n        const value = options[prop];\n        const args: any[] = [];\n        if (this.contentComponentRef) {\n            args.push(this.contentComponentRef.instance);\n        }\n\n        return typeof value === 'function' ? value.apply(options, args) : value;\n    }\n\n    // On mcFooter's modal button click\n    // AoT\n    // tslint:disable-next-line\n    onButtonClick(button: IModalButtonOptions<T>) {\n        // Call onClick directly\n        const result = this.getButtonCallableProp(button, 'onClick');\n        if (isPromise(result)) {\n            button.loading = true;\n            (result as Promise<{}>).then(() => button.loading = false).catch(() => button.loading = false);\n        }\n    }\n\n    // Change mcVisible from inside\n    private changeVisibleFromInside(visible: boolean, closeResult?: R): Promise<void> {\n        if (this.mcVisible !== visible) {\n            // Change mcVisible value immediately\n            this.mcVisible = visible;\n            this.mcVisibleChange.emit(visible);\n\n            return this.handleVisibleStateChange(visible, true, closeResult);\n        }\n\n        return Promise.resolve();\n    }\n\n    private changeAnimationState(state: AnimationState) {\n        this.animationState = state;\n        if (state) {\n            this.maskAnimationClassMap = {\n                [`fade-${state}`]: true,\n                [`fade-${state}-active`]: true\n            };\n            this.modalAnimationClassMap = {\n                [`zoom-${state}`]: true,\n                [`zoom-${state}-active`]: true\n            };\n        } else {\n            // @ts-ignore\n            this.maskAnimationClassMap = this.modalAnimationClassMap = null;\n        }\n\n        if (this.contentComponentRef) {\n            this.contentComponentRef.changeDetectorRef.markForCheck();\n        } else {\n            this.changeDetector.markForCheck();\n        }\n    }\n\n    private animateTo(isVisible: boolean): Promise<any> {\n        // Figure out the lastest click position when shows up\n        if (isVisible) {\n            // [NOTE] Using timeout due to the document.click event is fired later than visible change,\n            // so if not postponed to next event-loop, we can't get the lastest click position\n            window.setTimeout(() => this.updateTransformOrigin());\n        }\n\n        this.changeAnimationState(isVisible ? 'enter' : 'leave');\n\n        // Return when animation is over\n        return new Promise((resolve) => window.setTimeout(() => {\n            this.changeAnimationState(null);\n            resolve();\n        }, MODAL_ANIMATE_DURATION));\n    }\n\n    private formatModalButtons(buttons: IModalButtonOptions<T>[]): IModalButtonOptions<T>[] {\n        return buttons.map((button) => {\n\n            return {\n                ...{\n                    type: 'default',\n                    size: 'default',\n                    autoLoading: true,\n                    show: true,\n                    loading: false,\n                    disabled: false\n                },\n                ...button\n            };\n        });\n    }\n\n    /**\n     * Create a component dynamically but not attach to any View\n     * (this action will be executed when bodyContainer is ready)\n     * @param component Component class\n     */\n    private createDynamicComponent(component: Type<T>) {\n        const factory = this.cfr.resolveComponentFactory(component);\n        const childInjector = Injector.create({\n            providers: [{provide: McModalRef, useValue: this}],\n            parent: this.viewContainer.parentInjector\n        });\n\n        this.contentComponentRef = factory.create(childInjector);\n\n        if (this.mcComponentParams) {\n            Object.assign(this.contentComponentRef.instance, this.mcComponentParams);\n        }\n\n        // Do the first change detection immediately\n        // (or we do detection at ngAfterViewInit, multi-changes error will be thrown)\n        this.contentComponentRef.changeDetectorRef.detectChanges();\n\n\n    }\n\n    // Update transform-origin to the last click position on document\n    private updateTransformOrigin() {\n        const modalElement = this.modalContainer.nativeElement as HTMLElement;\n        const lastPosition = ModalUtil.getLastClickPosition();\n\n        if (lastPosition) {\n            // tslint:disable-next-line\n            this.transformOrigin = `${lastPosition.x - modalElement.offsetLeft}px ${lastPosition.y - modalElement.offsetTop}px 0px`;\n        }\n    }\n\n    /**\n     * Take care of the body's overflow to decide the existense of scrollbar\n     * @param plusNum The number that the openModals.length will increase soon\n     */\n    private changeBodyOverflow(plusNum: number = 0) {\n        const openModals = this.modalControl.openModals;\n\n        if (openModals.length + plusNum > 0) {\n            // tslint:disable-next-line\n            this.renderer.setStyle(this.document.body, 'padding-right', `${this.mcMeasureScrollbarService.scrollBarWidth}px`);\n            this.renderer.setStyle(this.document.body, 'overflow', 'hidden');\n        } else {\n            this.renderer.removeStyle(this.document.body, 'padding-right');\n            this.renderer.removeStyle(this.document.body, 'overflow');\n        }\n    }\n}\n\n////////////\n\nfunction isPromise(obj: {} | void): boolean {\n    // tslint:disable-next-line\n    return !!obj && (typeof obj === 'object' || typeof obj === 'function') && typeof (obj as Promise<{}>).then === 'function' && typeof (obj as Promise<{}>).catch === 'function';\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n\n@Pipe({\n    name: 'toCssUnit'\n})\nexport class CssUnitPipe implements PipeTransform {\n    transform(value: number | string, defaultUnit: string = 'px'): string {\n        const formatted = +value;\n\n        return isNaN(formatted) ? `${value}` : `${formatted}${defaultUnit}`;\n    }\n}\n","import { ComponentRef, Injectable } from '@angular/core';\n\nimport { Observable } from 'rxjs';\nimport { filter } from 'rxjs/operators';\n\nimport { ESCAPE } from '@ptsecurity/cdk/keycodes';\nimport { Overlay, OverlayRef } from '@ptsecurity/cdk/overlay';\nimport { ComponentPortal } from '@ptsecurity/cdk/portal';\n\nimport { McModalControlService } from './modal-control.service';\nimport { McModalRef } from './modal-ref.class';\nimport { McModalComponent } from './modal.component';\nimport { ConfirmType, IModalOptions, IModalOptionsForService } from './modal.type';\n\n\n// A builder used for managing service creating modals\nexport class ModalBuilderForService {\n\n    // Modal ComponentRef, \"null\" means it has been destroyed\n    private modalRef: ComponentRef<McModalComponent>;\n    private overlayRef: OverlayRef;\n\n    constructor(private overlay: Overlay, options: IModalOptionsForService = {}) {\n        this.createModal();\n\n        if (!('mcGetContainer' in options)) {\n            options.mcGetContainer = null;\n        }\n\n        this.changeProps(options);\n        this.modalRef.instance.open();\n        this.modalRef.instance.mcAfterClose.subscribe(() => this.destroyModal());\n\n        this.overlayRef.keydownEvents()\n            // @ts-ignore\n            .pipe(filter((event: KeyboardEvent) => {\n                return event.keyCode === ESCAPE && options.mcCloseByESC;\n            }))\n            .subscribe(() => this.modalRef.instance.close());\n    }\n\n    getInstance(): McModalComponent {\n        return this.modalRef && this.modalRef.instance;\n    }\n\n    destroyModal(): void {\n        if (this.modalRef) {\n            this.overlayRef.dispose();\n            // @ts-ignore\n            this.modalRef = null;\n        }\n    }\n\n    private changeProps(options: IModalOptions): void {\n        if (this.modalRef) {\n            // here not limit user's inputs at runtime\n            Object.assign(this.modalRef.instance, options);\n        }\n    }\n\n    // Create component to ApplicationRef\n    private createModal(): void {\n        this.overlayRef = this.overlay.create();\n        this.modalRef = this.overlayRef.attach(new ComponentPortal(McModalComponent));\n    }\n}\n\n@Injectable()\nexport class McModalService {\n    // Track of the current close modals (we assume invisible is close this time)\n    get openModals(): McModalRef[] {\n        return this.modalControl.openModals;\n    }\n\n    get afterAllClose(): Observable<void> {\n        return this.modalControl.afterAllClose.asObservable();\n    }\n\n    constructor(\n        private overlay: Overlay,\n        private modalControl: McModalControlService) {\n    }\n\n    // Closes all of the currently-open dialogs\n    closeAll(): void {\n        this.modalControl.closeAll();\n    }\n\n    create<T>(options: IModalOptionsForService<T> = {}): McModalRef<T> {\n\n        if (typeof options.mcOnCancel !== 'function') {\n            // Leave a empty function to close this modal by default\n            // tslint:disable-next-line\n            options.mcOnCancel = () => {};\n        }\n\n        if (!('mcCloseByESC' in options)) {\n            options.mcCloseByESC = true;\n        }\n\n\n        if (!('mcWidth' in options)) {\n            // tslint:disable-next-line\n            options.mcWidth = 480;\n        }\n\n        return new ModalBuilderForService(this.overlay, options).getInstance();\n    }\n\n    confirm<T>(options: IModalOptionsForService<T> = {}, confirmType: ConfirmType = 'confirm'): McModalRef<T> {\n        if ('mcFooter' in options) {\n            console.warn(`The Confirm-Modal doesn't support \"mcFooter\", this property will be ignored.`);\n        }\n\n        // NOTE: only support function currently by calling confirm()\n        if (typeof options.mcOnOk !== 'function') {\n            // Leave a empty function to close this modal by default\n            // tslint:disable-next-line\n            options.mcOnOk = () => {};\n        }\n\n        options.mcModalType = 'confirm';\n        options.mcClassName = `mc-confirm mc-confirm-${confirmType} ${options.mcClassName || ''}`;\n        options.mcMaskClosable = false;\n\n        return this.create(options);\n    }\n\n    success<T>(options: IModalOptionsForService<T> = {}): McModalRef<T> {\n        return this.simpleConfirm(options, 'success');\n    }\n\n    delete<T>(options: IModalOptionsForService<T> = {}): McModalRef<T> {\n        return this.simpleConfirm(options, 'warn');\n    }\n\n    private simpleConfirm<T>(options: IModalOptionsForService<T> = {}, confirmType: ConfirmType): McModalRef<T> {\n        // Remove the Cancel button if the user not specify a Cancel button\n        if (!('mcCancelText' in options)) {\n            // @ts-ignore\n            options.mcCancelText = null;\n        }\n\n        return this.confirm(options, confirmType);\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { OverlayModule } from '@ptsecurity/cdk/overlay';\nimport { McButtonModule } from '@ptsecurity/mosaic/button';\nimport { McIconModule } from '@ptsecurity/mosaic/icon';\n\nimport { CssUnitPipe } from './css-unit.pipe';\nimport { McModalControlService } from './modal-control.service';\nimport { McModalComponent } from './modal.component';\nimport { McModalService } from './modal.service';\n\n\n@NgModule({\n    imports: [ CommonModule, OverlayModule, McButtonModule, McIconModule ],\n    exports: [ McModalComponent ],\n    declarations: [ McModalComponent, CssUnitPipe ],\n    entryComponents: [ McModalComponent ],\n    providers: [ McModalControlService, McModalService ]\n})\nexport class McModalModule { }\n","import { fromEvent, Observable, Subscription } from 'rxjs';\nimport { debounceTime } from 'rxjs/operators';\n\nimport {\n    AfterViewInit,\n    Component, Directive,\n    ElementRef,\n    HostBinding,\n    Input,\n    OnDestroy,\n    OnInit,\n    ViewEncapsulation,\n    ContentChild,\n    TemplateRef,\n    ChangeDetectorRef,\n    ChangeDetectionStrategy,\n    ViewChild\n} from '@angular/core';\nimport { FocusMonitor, FocusOrigin } from '@ptsecurity/cdk/a11y';\nimport { SPACE } from '@ptsecurity/cdk/keycodes';\nimport { Platform } from '@ptsecurity/cdk/platform';\nimport { CanDisable, CanDisableCtor, mixinDisabled } from '@ptsecurity/mosaic/core';\n\n\nconst COLLAPSED_CLASS: string = 'mc-navbar-collapsed-title';\nconst MC_ICON = 'mc-icon';\nconst MC_NAVBAR = 'mc-navbar';\nconst MC_NAVBAR_CONTAINER = 'mc-navbar-container';\nconst MC_NAVBAR_ITEM = 'mc-navbar-item';\nconst MC_NAVBAR_BRAND = 'mc-navbar-brand';\nconst MC_NAVBAR_TITLE = 'mc-navbar-title';\nconst MC_NAVBAR_LOGO = 'mc-navbar-logo';\n\nexport type McNavbarContainerPositionType = 'left' | 'right';\n\nexport interface IMcNavbarDropdownItem {\n    link?: string;\n    text: string;\n}\n\n@Directive({\n    selector: MC_NAVBAR_LOGO,\n    host: {\n        class: MC_NAVBAR_LOGO\n    }\n})\nexport class McNavbarLogo {}\n\n@Directive({\n    selector: MC_NAVBAR_BRAND,\n    host: {\n        class: MC_NAVBAR_BRAND\n    }\n})\nexport class McNavbarBrand {}\n\n@Directive({\n    selector: MC_NAVBAR_TITLE,\n    host: {\n        class: MC_NAVBAR_TITLE\n    }\n})\nexport class McNavbarTitle {}\n\nexport class McNavbarItemBase {\n    constructor(public _elementRef: ElementRef) {}\n}\n\nexport const _McNavbarMixinBase: CanDisableCtor & typeof McNavbarItemBase = mixinDisabled(McNavbarItemBase);\n\n@Component({\n    selector: MC_NAVBAR_ITEM,\n    template: `\n        <a\n            [attr.tabindex]=\\\"disabled ? -1 : tabIndex\\\"\n            (click)=\"handleClickByItem()\"\n            (keydown)=\"handleKeydown($event)\"\n            class=\"mc-navbar-item\"\n        >\n            <ng-content></ng-content>\n            <i *ngIf=\"hasDropdownContent\" mc-icon=\"mc-angle-M_16\"></i>\n        </a>\n        <ul\n            #dropdownContent\n            *ngIf=\"hasDropdownContent\"\n            [ngClass]=\"{ 'is-collapsed': isCollapsed }\"\n            class=\"mc-navbar-dropdown\"\n        >\n            <li\n                *ngFor=\"let item of dropdownItems\"\n                (click)=\"handleClickByDropdownItem()\"\n                class=\"mc-navbar-dropdown-item\"\n            >\n                <ng-container *ngIf=\"dropdownItemTmpl\">\n                    <ng-container *ngTemplateOutlet=\"dropdownItemTmpl; context: { $implicit: item }\"></ng-container>\n                </ng-container>\n                <a\n                    *ngIf=\"!dropdownItemTmpl\"\n                    [attr.href]=\"item.link\"\n                    [ngClass]=\"{ 'is-active': isActiveDropdownLink(item.link) }\"\n                    class=\"mc-navbar-dropdown-link\"\n                >{{ item.text }}</a>\n            </li>\n        </ul>\n    `,\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    inputs: ['disabled'],\n    host: {\n        '[attr.disabled]': 'disabled || null',\n        '[attr.tabindex]': '-1'\n    }\n})\nexport class McNavbarItem extends _McNavbarMixinBase implements OnInit, AfterViewInit, OnDestroy, CanDisable {\n\n    @Input()\n    tabIndex: number = 0;\n\n    @Input()\n    dropdownItems: IMcNavbarDropdownItem[] = [];\n\n    @Input()\n    set collapsedTitle(value: string) {\n        this.elementRef.nativeElement.setAttribute('computedTitle', encodeURI(value));\n    }\n\n    @ContentChild('dropdownItemTmpl', { read: TemplateRef })\n    dropdownItemTmpl: TemplateRef<IMcNavbarDropdownItem>;\n\n    @ViewChild('dropdownContent', { read: ElementRef })\n    dropdownContent: ElementRef;\n\n    get hasDropdownContent() {\n        return this.dropdownItems.length > 0;\n    }\n\n    isCollapsed: boolean = true;\n\n    private _subscription: Subscription = new Subscription();\n    private _focusMonitor$: Observable<FocusOrigin>;\n\n    private get _dropdownElements(): HTMLElement[] {\n        return this.dropdownContent ? this.dropdownContent.nativeElement.querySelectorAll('li > *') : [];\n    }\n\n    constructor(\n        public  elementRef: ElementRef,\n        private _focusMonitor: FocusMonitor,\n        private _platform: Platform,\n        private _cdRef: ChangeDetectorRef\n    ) {\n        super(elementRef);\n    }\n\n    ngOnInit() {\n        this.denyClickIfDisabled();\n\n        this._focusMonitor$ = this._focusMonitor.monitor(this.elementRef.nativeElement, true);\n\n        if (this.hasDropdownContent) {\n            this.listenClickOutside();\n        }\n    }\n\n    ngAfterViewInit() {\n        if (!this.hasDropdownContent) {\n            return;\n        }\n\n        this.startListenFocusDropdownItems();\n    }\n\n    ngOnDestroy() {\n        this._subscription.unsubscribe();\n        this._focusMonitor.stopMonitoring(this.elementRef.nativeElement);\n        this.stopListenFocusDropdownItems();\n    }\n\n    isActiveDropdownLink(link: string): boolean {\n        if (!this._platform.isBrowser) {\n            return false;\n        }\n\n        return window.location.href.indexOf(link) >= 0;\n    }\n\n    handleClickByItem() {\n        this.toggleDropdown();\n    }\n\n    handleKeydown($event: KeyboardEvent) {\n        const isNavbarItem = ($event.target as HTMLElement).classList.contains(MC_NAVBAR_ITEM);\n\n        // tslint:disable-next-line\n        if (this.hasDropdownContent && $event.keyCode === SPACE && isNavbarItem) {\n            this.toggleDropdown();\n        }\n    }\n\n    handleClickByDropdownItem() {\n        this.forceCloseDropdown();\n    }\n\n    private listenClickOutside() {\n        this._subscription.add(\n            this._focusMonitor$.subscribe((origin) => {\n                if (origin === null) {\n                    this.forceCloseDropdown();\n                }\n            })\n        );\n    }\n\n    private toggleDropdown() {\n        this.isCollapsed = !this.isCollapsed;\n    }\n\n    private forceCloseDropdown() {\n        this.isCollapsed = true;\n        this._cdRef.detectChanges();\n    }\n\n    private startListenFocusDropdownItems() {\n        this._dropdownElements.forEach((el) => {\n            this._focusMonitor.monitor(el, true);\n        });\n    }\n\n    private stopListenFocusDropdownItems() {\n        this._dropdownElements.forEach((el) => {\n            this._focusMonitor.stopMonitoring(el);\n        });\n    }\n\n    // This method is required due to angular 2 issue https://github.com/angular/angular/issues/11200\n    private denyClickIfDisabled() {\n        const events: Event[] = this.elementRef.nativeElement.eventListeners('click');\n\n        events.forEach((event) => this.elementRef.nativeElement.removeEventListener('click', event));\n\n        this.elementRef.nativeElement.addEventListener('click', (event: MouseEvent) => {\n            if (this.elementRef.nativeElement.hasAttribute('disabled')) {\n                event.stopImmediatePropagation();\n            }\n        }, true);\n\n        events.forEach((event) => this.elementRef.nativeElement.addEventListener('click', event));\n    }\n}\n\n@Directive({\n    selector: MC_NAVBAR_CONTAINER\n})\nexport class McNavbarContainer {\n    @Input()\n    position: McNavbarContainerPositionType = 'left';\n\n    @HostBinding('class')\n    get cssClasses(): string {\n        return this.position === 'left' ? 'mc-navbar-left' : 'mc-navbar-right';\n    }\n}\n\nclass CollapsibleItem {\n    private _collapsed: boolean = false;\n\n    constructor(\n        public element: HTMLElement,\n        public width: number\n    ) {}\n\n    processCollapsed(collapsed: boolean) {\n        this._collapsed = collapsed;\n\n        this.updateCollapsedClass();\n    }\n\n    private updateCollapsedClass() {\n        if (this._collapsed) {\n            this.element.classList.add(COLLAPSED_CLASS);\n        } else {\n            this.element.classList.remove(COLLAPSED_CLASS);\n        }\n\n    }\n}\n\nclass CachedItemWidth {\n\n    get canCollapse(): boolean {\n        return this.itemsForCollapse.length > 0;\n    }\n\n    private _collapsedItemsWidth: number;\n\n    get collapsedItemsWidth(): number {\n        if (this._collapsedItemsWidth !== undefined) {\n            return this._collapsedItemsWidth;\n        }\n\n        this.calculateAndCacheCollapsedItemsWidth();\n\n        return this._collapsedItemsWidth;\n    }\n\n    constructor(\n        public element: HTMLElement,\n        public width: number,\n        public itemsForCollapse: CollapsibleItem[] = []\n    ) {}\n\n    processCollapsed(collapsed: boolean) {\n        if (this.itemsForCollapse.length > 0) {\n            this.updateTitle(collapsed);\n        }\n\n        this.itemsForCollapse.forEach((item) => item.processCollapsed(collapsed));\n    }\n\n    private calculateAndCacheCollapsedItemsWidth() {\n        this._collapsedItemsWidth = this.itemsForCollapse\n            .reduce((acc, item) => acc + item.width, 0);\n    }\n\n    private getTitle(): string {\n        const computedTitle = this.element.getAttribute('computedTitle');\n\n        return computedTitle\n            ? decodeURI(computedTitle)\n            : (this.itemsForCollapse.length > 0 ? this.itemsForCollapse[0].element.innerText : '');\n    }\n\n    private updateTitle(collapsed: boolean) {\n        if (collapsed) {\n            this.element.setAttribute('title', this.getTitle());\n        } else {\n            this.element.removeAttribute('title');\n        }\n    }\n}\n\n\n@Component({\n    selector: MC_NAVBAR,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    template: `\n        <nav class=\"mc-navbar\">\n            <ng-content select=\"[${MC_NAVBAR_CONTAINER}],${MC_NAVBAR_CONTAINER}\"></ng-content>\n        </nav>\n    `,\n    styleUrls: ['./navbar.css'],\n    encapsulation: ViewEncapsulation.None\n})\nexport class McNavbar implements AfterViewInit, OnDestroy {\n\n    private readonly forceRecalculateItemsWidth: boolean = false;\n    private readonly resizeDebounceInterval: number = 100;\n    private readonly firstLevelElement: string = MC_NAVBAR_CONTAINER;\n    private readonly secondLevelElements: string[] = [\n        MC_NAVBAR_ITEM,\n        MC_NAVBAR_BRAND,\n        MC_NAVBAR_TITLE\n    ];\n\n    private _totalItemsWidths: number;\n    private _itemsWidths: CachedItemWidth[];\n\n    private get maxAllowedWidth(): number {\n        return this._elementRef.nativeElement.querySelector('nav').getBoundingClientRect().width;\n    }\n\n    private get itemsWidths(): CachedItemWidth[] {\n        if (this._itemsWidths !== undefined && !this.forceRecalculateItemsWidth) {\n            return this._itemsWidths;\n        }\n\n        this.calculateAndCacheItemsWidth();\n\n        return this._itemsWidths;\n    }\n\n    private get totalItemsWidth(): number {\n        if (this._totalItemsWidths !== undefined && !this.forceRecalculateItemsWidth) {\n            return this._totalItemsWidths;\n        }\n\n        this.calculateAndCacheTotalItemsWidth();\n\n        return this._totalItemsWidths;\n    }\n\n    private _resizeSubscription: Subscription;\n\n    constructor(\n        private _elementRef: ElementRef\n    ) {\n        const resizeObserver = fromEvent(window, 'resize')\n            .pipe(debounceTime(this.resizeDebounceInterval));\n\n        this._resizeSubscription = resizeObserver.subscribe(this.updateCollapsed.bind(this));\n    }\n\n    updateCollapsed(): void {\n        let collapseDelta = this.totalItemsWidth - this.maxAllowedWidth;\n\n        for (let i = this.itemsWidths.length - 1; i >= 0; i--) {\n            const item = this.itemsWidths[i];\n\n            if (!item.canCollapse) {\n                continue;\n            }\n\n            item.processCollapsed(collapseDelta > 0);\n            collapseDelta -= item.collapsedItemsWidth;\n        }\n    }\n\n    ngAfterViewInit(): void {\n        // Note: this wait is required for loading and rendering fonts for icons;\n        // unfortunately we cannot control font rendering\n        setTimeout(() => this.updateCollapsed(), 0);\n    }\n\n    ngOnDestroy() {\n        this._resizeSubscription.unsubscribe();\n    }\n\n    private calculateAndCacheTotalItemsWidth() {\n        this._totalItemsWidths = this.itemsWidths\n            .reduce((acc, item) => acc + item.width, 0);\n    }\n\n    private getOuterElementWidth(element: HTMLElement): number {\n        const baseWidth  = element.getBoundingClientRect().width;\n        const marginRight = parseInt(getComputedStyle(element).getPropertyValue('margin-right'));\n        const marginLeft = parseInt(getComputedStyle(element).getPropertyValue('margin-left'));\n\n        return baseWidth + marginRight + marginLeft;\n    }\n\n    private calculateAndCacheItemsWidth() {\n        const allItemsSelector = this.secondLevelElements\n            .map((e: string) => `${this.firstLevelElement}>${e}`);\n        const allItems: HTMLElement[] = Array.from(this._elementRef.nativeElement.querySelectorAll(allItemsSelector));\n\n        this._itemsWidths = allItems\n            .map((el) => new CachedItemWidth(el, this.getOuterElementWidth(el), this.getItemsForCollapse(el)));\n    }\n\n    private getItemsForCollapse(element: HTMLElement): CollapsibleItem[] {\n        const icon = element.querySelector(`[${MC_ICON}],${MC_NAVBAR_LOGO},[${MC_NAVBAR_LOGO}]`);\n\n        if (!icon) {\n            return [];\n        }\n\n        return Array.from(element.querySelectorAll(MC_NAVBAR_TITLE))\n            .map((el) => new CollapsibleItem(<HTMLElement> el, el.getBoundingClientRect().width));\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { A11yModule } from '@ptsecurity/cdk/a11y';\nimport { PlatformModule } from '@ptsecurity/cdk/platform';\n\nimport { McIconModule } from '@ptsecurity/mosaic/icon';\n\nimport {\n    McNavbar,\n    McNavbarContainer,\n    McNavbarItem,\n    McNavbarTitle,\n    McNavbarBrand,\n    McNavbarLogo\n} from './navbar.component';\n\n\n@NgModule({\n    imports: [\n        CommonModule,\n        A11yModule,\n        PlatformModule,\n        McIconModule\n    ],\n    exports: [\n        McNavbar,\n        McNavbarContainer,\n        McNavbarTitle,\n        McNavbarItem,\n        McNavbarBrand,\n        McNavbarLogo\n    ],\n    declarations: [\n        McNavbar,\n        McNavbarContainer,\n        McNavbarTitle,\n        McNavbarItem,\n        McNavbarBrand,\n        McNavbarLogo\n    ]\n})\nexport class McNavbarModule {}\n","import {\n    ChangeDetectionStrategy,\n    Component,\n    ViewEncapsulation,\n    ElementRef,\n    Input\n} from '@angular/core';\nimport { CanColor, CanColorCtor, mixinColor, ThemePalette } from '@ptsecurity/mosaic/core';\n\n\nexport type ProgressBarMode = 'determinate' | 'indeterminate';\n\nlet idIterator = 0;\n\nconst MIN_PERCENT = 0;\nconst MAX_PERCENT = 100;\n\nexport class McProgressBarBase {\n    constructor(public _elementRef: ElementRef) {}\n}\n\nexport const _McProgressBarMixinBase:\n    CanColorCtor &\n    typeof McProgressBarBase =\n        mixinColor(McProgressBarBase);\n\n@Component({\n    selector: 'mc-progress-bar',\n    templateUrl: './progress-bar.component.html',\n    styleUrls: ['./progress-bar.css'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n    host: {\n        class: 'mc-progress-bar',\n        '[attr.id]': 'id'\n    }\n})\nexport class McProgressBar extends _McProgressBarMixinBase implements CanColor {\n    @Input() id: string = `mc-progress-bar-${idIterator++}`;\n    @Input() value: number = 0;\n    @Input() mode: ProgressBarMode = 'determinate';\n    @Input() color: ThemePalette = ThemePalette.Primary;\n\n    constructor(elementRef: ElementRef) {\n        super(elementRef);\n    }\n\n    get percentage(): number {\n        return Math.max(MIN_PERCENT, Math.min(MAX_PERCENT, this.value)) / MAX_PERCENT;\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { PlatformModule } from '@ptsecurity/cdk/platform';\n\nimport {\n    McProgressBar\n} from './progress-bar.component';\n\n\n@NgModule({\n    imports: [\n        CommonModule,\n        PlatformModule\n    ],\n    exports: [\n        McProgressBar\n    ],\n    declarations: [\n        McProgressBar\n    ]\n})\nexport class McProgressBarModule {}\n","import { Directive, forwardRef, Input, OnChanges, Provider, SimpleChanges } from '@angular/core';\nimport { AbstractControl, NG_VALIDATORS, ValidationErrors, Validator, ValidatorFn, Validators } from '@angular/forms';\n\n\nexport const MIN_VALIDATOR: Provider = {\n    provide: NG_VALIDATORS,\n    useExisting: forwardRef(() => MinValidator),\n    multi: true\n};\n\n/**\n * A directive which installs the {@link MinValidator} for any `formControlName`,\n * `formControl`, or control with `ngModel` that also has a `min` attribute.\n *\n * @experimental\n */\n@Directive({\n    selector: '[min][formControlName],[min][formControl],[min][ngModel]',\n    providers: [MIN_VALIDATOR],\n    host: {'[attr.min]': 'min ? min : null'}\n})\nexport class MinValidator implements Validator, OnChanges {\n\n    @Input() min: string;\n    private _validator: ValidatorFn;\n    private _onChange: () => void;\n\n    ngOnChanges(changes: SimpleChanges): void {\n        if ('min' in changes) {\n            this._createValidator();\n            if (this._onChange) { this._onChange(); }\n        }\n    }\n\n    validate(c: AbstractControl): ValidationErrors | null { return this._validator(c); }\n\n    registerOnValidatorChange(fn: () => void): void { this._onChange = fn; }\n\n    private _createValidator(): void { this._validator = Validators.min(parseInt(this.min, 10)); }\n}\n\n\nexport const MAX_VALIDATOR: Provider = {\n    provide: NG_VALIDATORS,\n    useExisting: forwardRef(() => MaxValidator),\n    multi: true\n};\n\n/**\n * A directive which installs the {@link MaxValidator} for any `formControlName`,\n * `formControl`, or control with `ngModel` that also has a `min` attribute.\n *\n * @experimental\n */\n@Directive({\n    selector: '[max][formControlName],[max][formControl],[max][ngModel]',\n    providers: [MAX_VALIDATOR],\n    host: {'[attr.max]': 'max ? max : null'}\n})\nexport class MaxValidator implements Validator,\n    OnChanges {\n\n    @Input() max: string;\n    private _validator: ValidatorFn;\n    private _onChange: () => void;\n\n    ngOnChanges(changes: SimpleChanges): void {\n        if ('max' in changes) {\n            this._createValidator();\n            if (this._onChange) { this._onChange(); }\n        }\n    }\n\n    validate(c: AbstractControl): ValidationErrors | null { return this._validator(c); }\n\n    registerOnValidatorChange(fn: () => void): void { this._onChange = fn; }\n\n    private _createValidator(): void { this._validator = Validators.max(parseInt(this.max, 10)); }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { A11yModule } from '@ptsecurity/cdk/a11y';\nimport { McCommonModule } from '@ptsecurity/mosaic/core';\n\nimport { McInput, McInputMono, McNumberInput } from './input';\nimport { MaxValidator, MinValidator } from './input-number-validators';\n\n\n@NgModule({\n    imports: [CommonModule, A11yModule, McCommonModule, FormsModule],\n    exports: [McInput, McNumberInput, McInputMono, MinValidator, MaxValidator],\n    declarations: [McInput, McNumberInput, McInputMono, MinValidator, MaxValidator ]\n})\nexport class McInputModule {\n}\n","import { Component } from '@angular/core';\n\n\n@Component({\n    selector: 'mc-content',\n    preserveWhitespaces: false,\n    templateUrl: './content.component.html',\n    styles: [\n        `:host {\n            display: block;\n        }`\n    ],\n    host: {\n        '[class.mc-layout-content]': 'true'\n    }\n})\nexport class McContentComponent {\n}\n","import { Component } from '@angular/core';\n\n\n@Component({\n    selector: 'mc-footer',\n    preserveWhitespaces: false,\n    templateUrl: './footer.component.html',\n    styles: [\n        `:host {\n            display: block;\n        }`\n    ],\n    host: {\n        '[class.mc-layout-footer]': 'true'\n    }\n})\nexport class McFooterComponent {\n}\n","import { Component } from '@angular/core';\n\n\n@Component({\n    selector : 'mc-header',\n    preserveWhitespaces: false,\n    templateUrl: './header.component.html',\n    styles: [\n        `:host {\n            display: block;\n        }`\n    ],\n    host: {\n        '[class.mc-layout-header]': 'true'\n    }\n})\nexport class McHeaderComponent {\n}\n","import { ChangeDetectionStrategy, Component, ViewEncapsulation } from '@angular/core';\n\n\n@Component({\n    selector: 'mc-layout',\n    preserveWhitespaces: false,\n    styleUrls: ['layout.css'],\n    templateUrl: './layout.component.html',\n    host: {\n        '[class.mc-layout]': 'true',\n        '[class.mc-layout-has-sidebar]': 'hasSidebar'\n    },\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class McLayoutComponent {\n    hasSidebar = false;\n}\n","import {\n    ChangeDetectionStrategy,\n    Component,\n    EventEmitter,\n    Host,\n    Input,\n    OnInit,\n    Optional,\n    Output\n} from '@angular/core';\nimport { toBoolean } from '@ptsecurity/mosaic/core';\n\nimport { McLayoutComponent } from './layout.component';\n\n\n@Component({\n    selector: 'mc-sidebar',\n    preserveWhitespaces: false,\n    templateUrl: './sidebar.component.html',\n    host: {\n        '[class.mc-layout-sidebar]': 'true',\n        '[class.mc-layout-sidebar-collapsed]': 'mcCollapsed',\n        '[style.flex]': 'mcFlex',\n        '[style.max-width.px]': 'mcWidth',\n        '[style.min-width.px]': 'mcWidth',\n        '[style.width.px]': 'mcWidth'\n    },\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class McSidebarComponent implements OnInit {\n\n    @Input() _mcWidth = 200;\n    @Input() mcCollapsedWidth = 80;\n\n    @Input()\n    set mcCollapsible(value: boolean) {\n        this.collapsible = toBoolean(value);\n    }\n\n    get mcCollapsible(): boolean {\n        return this.collapsible;\n    }\n\n    @Input()\n    set mcCollapsed(value: boolean) {\n        this.collapsed = toBoolean(value);\n    }\n\n    get mcCollapsed(): boolean {\n        return this.collapsed;\n    }\n\n    // tslint:disable-next-line\n    @Output() mcCollapsedChange = new EventEmitter();\n\n    private collapsed = false;\n    private collapsible = false;\n\n    get mcFlex(): string {\n        if (this.mcCollapsed) {\n            return `0 0 ${this.mcCollapsedWidth}px`;\n        } else {\n            return `0 0 ${this.mcWidth}px`;\n        }\n    }\n\n    get mcWidth(): number {\n        if (this.mcCollapsed) {\n            return this.mcCollapsedWidth;\n        } else {\n            return this._mcWidth;\n        }\n    }\n\n    constructor(\n        @Optional() @Host() private mcLayoutComponent: McLayoutComponent) {\n    }\n\n    ngOnInit() {\n        if (this.mcLayoutComponent) {\n            this.mcLayoutComponent.hasSidebar = true;\n        }\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { McContentComponent } from './content.component';\nimport { McFooterComponent } from './footer.component';\nimport { McHeaderComponent } from './header.component';\nimport { McLayoutComponent } from './layout.component';\nimport { McSidebarComponent } from './sidebar.component';\n\n\n@NgModule({\n    imports: [ CommonModule ],\n    exports: [\n        McLayoutComponent,\n        McContentComponent,\n        McFooterComponent,\n        McHeaderComponent,\n        McSidebarComponent\n    ],\n    declarations: [\n        McLayoutComponent,\n        McContentComponent,\n        McFooterComponent,\n        McHeaderComponent,\n        McSidebarComponent\n    ]\n})\nexport class McLayoutModule {\n}\n","import {\n    AfterContentInit,\n    Attribute,\n    ChangeDetectionStrategy,\n    Component,\n    ContentChildren,\n    ElementRef,\n    EventEmitter,\n    forwardRef,\n    Input,\n    Output,\n    QueryList,\n    ViewEncapsulation,\n    ChangeDetectorRef,\n    Inject,\n    OnDestroy,\n    OnInit,\n    ViewChild\n} from '@angular/core';\n\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\n\nimport { Subscription } from 'rxjs';\n\nimport { FocusKeyManager, IFocusableOption } from '@ptsecurity/cdk/a11y';\nimport { SelectionModel } from '@ptsecurity/cdk/collections';\nimport { END, ENTER, HOME, PAGE_DOWN, PAGE_UP, SPACE } from '@ptsecurity/cdk/keycodes';\n\nimport {\n    McLine,\n    McLineSetter,\n    CanDisable,\n    mixinDisabled,\n    toBoolean, CanDisableCtor\n} from '@ptsecurity/mosaic/core';\n\n\n/**\n * Component for list-options of selection-list. Each list-option can automatically\n * generate a checkbox and can put current item into the selectionModel of selection-list\n * if the current item is selected.\n */\n@Component({\n    exportAs: 'mcListOption',\n    selector: 'mc-list-option',\n    host: {\n        tabindex: '-1',\n\n        class: 'mc-list-option',\n        '[class.mc-selected]': 'selected',\n        '[class.mc-focused]': '_hasFocus',\n        '(focus)': '_handleFocus()',\n        '(blur)': '_handleBlur()',\n        '(click)': '_handleClick()'\n    },\n    templateUrl: 'list-option.html',\n    encapsulation: ViewEncapsulation.None,\n    preserveWhitespaces: false,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class McListOption implements AfterContentInit, OnDestroy, OnInit, IFocusableOption {\n    _hasFocus: boolean = false;\n\n    @ContentChildren(McLine) _lines: QueryList<McLine>;\n\n    @ViewChild('text') _text: ElementRef;\n\n    // Whether the label should appear before or after the checkbox. Defaults to 'after'\n    @Input() checkboxPosition: 'before' | 'after' = 'after';\n\n    @Input() value: any;\n\n    @Input()\n    get disabled() {\n        return this._disabled || (this.listSelection && this.listSelection.disabled);\n    }\n\n    set disabled(value: any) {\n        const newValue = toBoolean(value);\n\n        if (newValue !== this._disabled) {\n            this._disabled = newValue;\n            this._changeDetector.markForCheck();\n        }\n    }\n\n    @Input()\n    get selected(): boolean {\n        return this.listSelection.selectedOptions && this.listSelection.selectedOptions.isSelected(this) || false;\n    }\n\n    set selected(value: boolean) {\n        const isSelected = toBoolean(value);\n\n        if (isSelected !== this._selected) {\n            this.setSelected(isSelected);\n\n            this.listSelection._reportValueChange();\n        }\n    }\n\n    private _lineSetter: McLineSetter;\n    private _selected = false;\n    private _disabled = false;\n\n    constructor(\n        private _element: ElementRef,\n        private _changeDetector: ChangeDetectorRef,\n        @Inject(forwardRef(() => McListSelection))\n        public listSelection: McListSelection\n    ) {}\n\n    ngOnInit() {\n        if (this._selected) {\n            // List options that are selected at initialization can't be reported properly to the form\n            // control. This is because it takes some time until the selection-list knows about all\n            // available options. Also it can happen that the ControlValueAccessor has an initial value\n            // that should be used instead. Deferring the value change report to the next tick ensures\n            // that the form control value is not being overwritten.\n            const wasSelected = this._selected;\n\n            Promise.resolve().then(() => {\n                if (this._selected || wasSelected) {\n                    this.selected = true;\n                    this._changeDetector.markForCheck();\n                }\n            });\n        }\n    }\n\n    ngAfterContentInit() {\n        this._lineSetter = new McLineSetter(this._lines, this._element);\n    }\n\n    ngOnDestroy(): void {\n        if (this.selected) {\n            // We have to delay this until the next tick in order\n            // to avoid changed after checked errors.\n            Promise.resolve().then(() => this.selected = false);\n        }\n\n        this.listSelection._removeOptionFromList(this);\n    }\n\n    toggle(): void {\n        this.selected = !this.selected;\n    }\n\n    focus(): void {\n        this._element.nativeElement.focus();\n\n        this.listSelection.setFocusedOption(this);\n    }\n\n    getLabel() {\n        return this._text ? this._text.nativeElement.textContent : '';\n    }\n\n    setSelected(selected: boolean) {\n        if (this._selected === selected || !this.listSelection.selectedOptions) { return; }\n\n        this._selected = selected;\n\n        if (selected) {\n            this.listSelection.selectedOptions.select(this);\n        } else {\n            this.listSelection.selectedOptions.deselect(this);\n        }\n\n        this._changeDetector.markForCheck();\n    }\n\n    _getHeight(): number {\n        return this._element.nativeElement.getClientRects()[0].height;\n    }\n\n    _handleClick() {\n        if (this.disabled) { return; }\n\n        this.listSelection.setFocusedOption(this);\n    }\n\n    _handleFocus() {\n        if (this.disabled || this._hasFocus) { return; }\n\n        this._hasFocus = true;\n    }\n\n    _handleBlur() {\n        this._hasFocus = false;\n\n        this.listSelection._onTouched();\n    }\n\n    _getHostElement(): HTMLElement {\n        return this._element.nativeElement;\n    }\n}\n\n\nexport const MC_SELECTION_LIST_VALUE_ACCESSOR: any = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => McListSelection),\n    multi: true\n};\n\n// Change event that is being fired whenever the selected state of an option changes. */\nexport class McListSelectionChange {\n    constructor(\n        // Reference to the selection list that emitted the event.\n        public source: McListSelection,\n        // Reference to the option that has been changed.\n        public option: McListOption\n    ) {}\n}\n\n\nexport class McListSelectionBase {}\n\nexport const _McListSelectionMixinBase: CanDisableCtor & typeof McListSelectionBase\n    = mixinDisabled(McListSelectionBase);\n\n@Component({\n    exportAs: 'mcListSelection',\n    selector: 'mc-list-selection',\n    template: '<ng-content></ng-content>',\n    styleUrls: ['./list.css'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n    inputs: ['disabled', 'tabIndex'],\n    host: {\n        class: 'mc-list-selection',\n        '[tabIndex]': 'tabIndex',\n        '(focus)': 'focus()',\n        '(blur)': '_onTouched()',\n        '(keydown)': '_onKeyDown($event)',\n        '(window:resize)': 'updateScrollSize()'\n    },\n    providers: [MC_SELECTION_LIST_VALUE_ACCESSOR],\n    preserveWhitespaces: false\n})\nexport class McListSelection extends _McListSelectionMixinBase implements\n    IFocusableOption, CanDisable, AfterContentInit, ControlValueAccessor {\n\n    _keyManager: FocusKeyManager<McListOption>;\n\n    // The option components contained within this selection-list.\n    @ContentChildren(McListOption) options: QueryList<McListOption>;\n\n    tabIndex: number;\n\n    autoSelect: boolean;\n    noUnselect: boolean;\n    multiple: boolean;\n\n    // todo temporary solution\n    withShift: boolean;\n    withCtrl: boolean;\n\n    @Input() horizontal: boolean = false;\n\n    // Emits a change event whenever the selected state of an option changes.\n    @Output() readonly selectionChange: EventEmitter<McListSelectionChange> = new EventEmitter<McListSelectionChange>();\n\n    selectedOptions: SelectionModel<McListOption>;\n\n    // Used for storing the values that were assigned before the options were initialized.\n    private _tempValues: string[] | null;\n\n    private _modelChanges = Subscription.EMPTY;\n\n    constructor(\n        private _element: ElementRef,\n        @Attribute('tabindex') tabIndex: string,\n        @Attribute('auto-select') autoSelect: string,\n        @Attribute('no-unselect') noUnselect: string,\n        @Attribute('multiple') multiple: string\n    ) {\n        super();\n\n        this.autoSelect = autoSelect === null ? true : toBoolean(autoSelect);\n        this.multiple = multiple === null ? true : toBoolean(multiple);\n        this.noUnselect = noUnselect === null ? true : toBoolean(noUnselect);\n\n        this.tabIndex = parseInt(tabIndex) || 0;\n\n        this.selectedOptions = new SelectionModel<McListOption>(this.multiple);\n    }\n\n    ngAfterContentInit(): void {\n        this.horizontal = toBoolean(this.horizontal);\n\n        this._keyManager = new FocusKeyManager<McListOption>(this.options)\n            .withTypeAhead()\n            .withVerticalOrientation(!this.horizontal)\n            .withHorizontalOrientation(this.horizontal ? 'ltr' : null);\n\n        if (this._tempValues) {\n            this._setOptionsFromValues(this._tempValues);\n            this._tempValues = null;\n        }\n\n        // Sync external changes to the model back to the options.\n        this._modelChanges = this.selectedOptions.onChange!.subscribe((event) => {\n            for (const item of event.added) {\n                item.selected = true;\n            }\n\n            for (const item of event.removed) {\n                item.selected = false;\n            }\n        });\n\n        this.updateScrollSize();\n    }\n\n    ngOnDestroy() {\n        this._modelChanges.unsubscribe();\n    }\n\n    focus() {\n        this._element.nativeElement.focus();\n    }\n\n    selectAll() {\n        this.options.forEach((option) => option.setSelected(true));\n\n        this._reportValueChange();\n    }\n\n    deselectAll() {\n        this.options.forEach((option) => option.setSelected(false));\n\n        this._reportValueChange();\n    }\n\n    updateScrollSize(): void {\n        if (this.horizontal || !this.options.first) { return; }\n\n        this._keyManager.withScrollSize(Math.floor(this._getHeight() / this.options.first._getHeight()));\n    }\n\n    // Sets the focused option of the selection-list.\n    setFocusedOption(option: McListOption): void {\n        this._keyManager.updateActiveItem(option);\n\n        if (this.withShift && this.multiple) {\n            const previousIndex = this._keyManager.previousActiveItemIndex;\n            const activeIndex = this._keyManager.activeItemIndex;\n\n            if (previousIndex < activeIndex) {\n                this.options.forEach((item, index) => {\n                    if (index >= previousIndex && index <= activeIndex) { item.setSelected(true); }\n                });\n            } else {\n                this.options.forEach((item, index) => {\n                    if (index >= activeIndex && index <= previousIndex) { item.setSelected(true); }\n                });\n            }\n\n            this.withShift = false;\n        } else if (this.withCtrl) {\n            this.withCtrl = false;\n\n            if (!this._canDeselectLast(option)) { return; }\n\n            option.toggle();\n        } else {\n            if (this.autoSelect) {\n                this.options.forEach((item) => item.setSelected(false));\n                option.setSelected(true);\n            }\n        }\n\n        this._emitChangeEvent(option);\n        this._reportValueChange();\n    }\n\n    // Implemented as part of ControlValueAccessor.\n    writeValue(values: string[]): void {\n        if (this.options) {\n            this._setOptionsFromValues(values || []);\n        } else {\n            this._tempValues = values;\n        }\n    }\n\n    // Implemented as part of ControlValueAccessor.\n    registerOnChange(fn: (value: any) => void): void {\n        this._onChange = fn;\n    }\n\n    // Implemented as part of ControlValueAccessor.\n    registerOnTouched(fn: () => void): void {\n        this._onTouched = fn;\n    }\n\n    // Implemented as a part of ControlValueAccessor.\n    setDisabledState(isDisabled: boolean): void {\n        if (this.options) {\n            this.options.forEach((option) => option.disabled = isDisabled);\n        }\n    }\n\n    getSelectedOptionValues(): string[] {\n        return this.options.filter((option) => option.selected).map((option) => option.value);\n    }\n\n    // Toggles the selected state of the currently focused option.\n    toggleFocusedOption(): void {\n        const focusedIndex = this._keyManager.activeItemIndex;\n\n        if (focusedIndex != null && this._isValidIndex(focusedIndex)) {\n            const focusedOption: McListOption = this.options.toArray()[focusedIndex];\n\n            if (focusedOption && this._canDeselectLast(focusedOption)) {\n                focusedOption.toggle();\n\n                // Emit a change event because the focused option changed its state through user interaction.\n                this._emitChangeEvent(focusedOption);\n            }\n        }\n    }\n\n    _canDeselectLast(listOption: McListOption): boolean {\n        return !(this.noUnselect && this.selectedOptions.selected.length === 1 && listOption.selected);\n    }\n\n    _getHeight(): number {\n        return this._element.nativeElement.getClientRects()[0].height;\n    }\n\n    // View to model callback that should be called if the list or its options lost focus.\n    _onTouched: () => void = () => {};\n\n    // Removes an option from the selection list and updates the active item.\n    _removeOptionFromList(option: McListOption) {\n        if (option._hasFocus) {\n            const optionIndex = this._getOptionIndex(option);\n\n            // Check whether the option is the last item\n            if (optionIndex > 0) {\n                this._keyManager.setPreviousItemActive();\n            } else if (optionIndex === 0 && this.options.length > 1) {\n                this._keyManager.setNextItemActive();\n            }\n        }\n    }\n\n    _onKeyDown(event: KeyboardEvent) {\n        const keyCode = event.keyCode;\n        this.withShift = event.shiftKey;\n        this.withCtrl = event.ctrlKey;\n\n        switch (keyCode) {\n            case SPACE:\n            case ENTER:\n                this.toggleFocusedOption();\n                event.preventDefault();\n\n                break;\n            case HOME:\n                this._keyManager.setFirstItemActive();\n                event.preventDefault();\n\n                break;\n            case END:\n                this._keyManager.setLastItemActive();\n                event.preventDefault();\n\n                break;\n            case PAGE_UP:\n                if (!this.horizontal) { this._keyManager.setPreviousPageItemActive(); }\n\n                event.preventDefault();\n\n                break;\n            case PAGE_DOWN:\n                if (!this.horizontal) { this._keyManager.setNextPageItemActive(); }\n\n                event.preventDefault();\n\n                break;\n            default:\n                this._keyManager.onKeydown(event);\n        }\n    }\n\n    // Reports a value change to the ControlValueAccessor\n    _reportValueChange() {\n        if (this.options) {\n            this._onChange(this.getSelectedOptionValues());\n        }\n    }\n\n    // Emits a change event if the selected state of an option changed.\n    _emitChangeEvent(option: McListOption) {\n        this.selectionChange.emit(new McListSelectionChange(this, option));\n    }\n\n    // Returns the option with the specified value.\n    private _getOptionByValue(value: string): McListOption | undefined {\n        return this.options.find((option) => option.value === value);\n    }\n\n    // Sets the selected options based on the specified values.\n    private _setOptionsFromValues(values: string[]) {\n        this.options.forEach((option) => option.setSelected(false));\n\n        values\n            .map((value) => this._getOptionByValue(value))\n            .filter(Boolean)\n            .forEach((option) => option!.setSelected(true));\n    }\n\n    /**\n     * Utility to ensure all indexes are valid.\n     * @param index The index to be checked.\n     * @returns True if the index is valid for our list of options.\n     */\n    private _isValidIndex(index: number): boolean {\n        return index >= 0 && index < this.options.length;\n    }\n\n    // Returns the index of the specified list option.\n    private _getOptionIndex(option: McListOption): number {\n        return this.options.toArray().indexOf(option);\n    }\n\n    // View to model callback that should be called whenever the selected options change.\n    private _onChange: (value: any) => void = (_: any) => {};\n}\n","// todo пока не делаем, перенесено из материала, но у нас в доках таких простых списков нет.\nimport {\n    AfterContentInit, ChangeDetectionStrategy, Component, ContentChildren, Directive, ElementRef, QueryList,\n    ViewEncapsulation\n} from '@angular/core';\n\nimport { McLine, McLineSetter } from '@ptsecurity/mosaic/core';\n\n\nexport class McListBase {}\n\n@Component({\n    selector: 'mc-list',\n    host: { class: 'mc-list' },\n    template: '<ng-content></ng-content>',\n    styleUrls: ['./list.css'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None\n})\nexport class McList extends McListBase {}\n\n\n/**\n * Directive whose purpose is to add the mc- CSS styling to this selector.\n * @docs-private\n */\n@Directive({\n    selector: '[mc-subheader], [mcSubheader]',\n    host: { class: 'mc-subheader' }\n})\nexport class McListSubheaderCssStyler {}\n\n\n// Boilerplate for applying mixins to McListItem.\nexport class McListItemBase {}\n\n@Component({\n    selector: 'mc-list-item, a[mc-list-item]',\n    host: {\n        class: 'mc-list-item',\n        '(focus)': '_handleFocus()',\n        '(blur)': '_handleBlur()'\n    },\n    templateUrl: './list-item.html',\n    encapsulation: ViewEncapsulation.None,\n    preserveWhitespaces: false,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class McListItem extends McListItemBase implements AfterContentInit {\n    @ContentChildren(McLine) _lines: QueryList<McLine>;\n\n    private _lineSetter: McLineSetter;\n\n    constructor(private _element: ElementRef) {\n        super();\n    }\n\n    ngAfterContentInit() {\n        this._lineSetter = new McLineSetter(this._lines, this._element);\n    }\n\n    _handleFocus() {\n        this._element.nativeElement.classList.add('mc-focused');\n    }\n\n    _handleBlur() {\n        this._element.nativeElement.classList.remove('mc-focused');\n    }\n\n    _getHostElement(): HTMLElement {\n        return this._element.nativeElement;\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { A11yModule } from '@ptsecurity/cdk/a11y';\n\nimport { McLineModule } from '@ptsecurity/mosaic/core';\n\nimport { McListSelection, McListOption } from './list-selection.component';\nimport { McList, McListItem, McListSubheaderCssStyler } from './list.component';\n\n\n@NgModule({\n    imports: [\n        CommonModule,\n        A11yModule,\n        McLineModule\n    ],\n    exports: [\n        McList,\n        McListSelection,\n        McListItem,\n        McListOption,\n        McListSubheaderCssStyler\n    ],\n    declarations: [\n        McList,\n        McListSelection,\n        McListItem,\n        McListOption,\n        McListSubheaderCssStyler\n    ]\n})\nexport class McListModule {}\n","import {\n    Input,\n    Attribute,\n    Component,\n    ElementRef,\n    OnDestroy,\n    ViewEncapsulation,\n    ChangeDetectionStrategy,\n    ChangeDetectorRef\n} from '@angular/core';\n\nimport { FocusMonitor } from '@ptsecurity/cdk/a11y';\nimport {\n    CanDisable, CanDisableCtor,\n    HasTabIndex, HasTabIndexCtor,\n    mixinDisabled,\n    mixinTabIndex,\n    toBoolean\n} from '@ptsecurity/mosaic/core';\n\n\nexport class McLinkBase {\n    constructor(public _elementRef: ElementRef) {\n    }\n}\n\nexport const _McLinkBase: HasTabIndexCtor & CanDisableCtor & typeof McLinkBase\n    = mixinTabIndex(mixinDisabled(McLinkBase));\n\n@Component({\n    selector: 'a.mc-link',\n    template: `<ng-content></ng-content>`,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n    exportAs: 'mcLink',\n    styleUrls: ['./link.css'],\n    inputs: ['disabled'],\n    host: {\n        '[attr.disabled]': 'disabled || null',\n        '[attr.tabindex]': 'tabIndex'\n    }\n})\n\nexport class McLink extends _McLinkBase implements OnDestroy, HasTabIndex, CanDisable {\n\n    @Input()\n    get disabled() {\n        return this._disabled;\n    }\n\n    set disabled(value: any) {\n        const newValue = toBoolean(value);\n\n        if (newValue !== this._disabled) {\n            this._disabled = newValue;\n            this._changeDetector.markForCheck();\n        }\n    }\n\n    private _disabled = false;\n\n    constructor(\n        @Attribute('tabindex') tabIndex: string,\n        public elementRef: ElementRef,\n        private _focusMonitor: FocusMonitor,\n        private _changeDetector: ChangeDetectorRef) {\n\n        super(elementRef);\n        this._focusMonitor.monitor(elementRef.nativeElement, true);\n        this.tabIndex = parseInt(tabIndex) || 0;\n    }\n\n    ngOnDestroy() {\n        this._focusMonitor.stopMonitoring(this.elementRef.nativeElement);\n    }\n\n    focus(): void {\n        this._getHostElement().focus();\n    }\n\n    _getHostElement() {\n        return this.elementRef.nativeElement;\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { A11yModule } from '@ptsecurity/cdk/a11y';\n\nimport { McLink } from './link.component';\n\n\n@NgModule({\n    imports: [\n        CommonModule,\n        A11yModule\n    ],\n    declarations: [McLink],\n    exports: [McLink]\n})\nexport class McLinkModule {}\n","import { Injectable, Optional, SkipSelf } from '@angular/core';\nimport { Subject, Subscription } from 'rxjs';\n\nimport { McModalRef } from './modal-ref.class';\n\n\ninterface IRegisteredMeta {\n    modalRef: McModalRef;\n    afterOpenSubscription: Subscription;\n    afterCloseSubscription: Subscription;\n}\n\n@Injectable()\nexport class McModalControlService {\n\n    // Track singleton afterAllClose through over the injection tree\n    get afterAllClose(): Subject<void> {\n        return this.parentService ? this.parentService.afterAllClose : this.rootAfterAllClose;\n    }\n\n    // Track singleton openModals array through over the injection tree\n    get openModals(): McModalRef[] {\n        return this.parentService ? this.parentService.openModals : this.rootOpenModals;\n    }\n\n    // @ts-ignore\n    private rootOpenModals: McModalRef[] = this.parentService ? null : [];\n    // @ts-ignore\n    private rootAfterAllClose: Subject<void> = this.parentService ? null : new Subject<void>();\n    // @ts-ignore\n    private rootRegisteredMetaMap: Map<McModalRef, IRegisteredMeta> = this.parentService ? null : new Map();\n\n    // Registered modal for later usage\n    private get registeredMetaMap(): Map<McModalRef, IRegisteredMeta> {\n        return this.parentService ? this.parentService.registeredMetaMap : this.rootRegisteredMetaMap;\n    }\n\n    constructor(\n        @Optional() @SkipSelf() private parentService: McModalControlService) {\n    }\n\n    // Register a modal to listen its open/close\n    registerModal(modalRef: McModalRef): void {\n        if (!this.hasRegistered(modalRef)) {\n            const afterOpenSubscription = modalRef.afterOpen.subscribe(() => this.openModals.push(modalRef));\n            const afterCloseSubscription = modalRef.afterClose.subscribe(() => this.removeOpenModal(modalRef));\n\n            this.registeredMetaMap.set(modalRef, {modalRef, afterOpenSubscription, afterCloseSubscription});\n        }\n    }\n\n    hasRegistered(modalRef: McModalRef): boolean {\n        return this.registeredMetaMap.has(modalRef);\n    }\n\n    // Close all registered opened modals\n    closeAll(): void {\n        let i = this.openModals.length;\n\n        while (i--) {\n            this.openModals[i].close();\n        }\n    }\n\n    private removeOpenModal(modalRef: McModalRef): void {\n        const index = this.openModals.indexOf(modalRef);\n\n        if (index > -1) {\n            this.openModals.splice(index, 1);\n\n            if (!this.openModals.length) {\n                this.afterAllClose.next();\n            }\n        }\n    }\n}\n","import { Observable } from 'rxjs';\n\nimport { McModalComponent } from './modal.component';\n\n\n/**\n * API class that public to users to handle the modal instance.\n * McModalRef is aim to avoid accessing to the modal instance directly by users.\n */\nexport abstract class McModalRef<T = any, R = any> {\n    abstract afterOpen: Observable<void>;\n    abstract afterClose: Observable<R>;\n\n    abstract open(): void;\n\n    abstract close(result?: R): void;\n\n    abstract destroy(result?: R): void;\n\n    /**\n     * Trigger the nzOnOk/nzOnCancel by manual\n     */\n    abstract triggerOk(): void;\n\n    abstract triggerCancel(): void;\n\n    // /**\n    //  * Return the ComponentRef of nzContent when specify nzContent as a Component\n    //  * Note: this method may return undefined if the Component has not ready yet.\n    //    (it only available after Modal's ngOnInit)\n    //  */\n    // abstract getContentComponentRef(): ComponentRef<{}>;\n\n    /**\n     * Return the component instance of nzContent when specify nzContent as a Component\n     * Note: this method may return undefined if the Component has not ready yet.\n     * (it only available after Modal's ngOnInit)\n     */\n    abstract getContentComponent(): T;\n\n    /**\n     * Get the dom element of this Modal\n     */\n    abstract getElement(): HTMLElement;\n\n    /**\n     * Get the instance of the Modal itself\n     */\n    abstract getInstance(): McModalComponent;\n}\n","export interface IClickPosition {\n    x: number;\n    y: number;\n}\n\nexport class ModalUtil {\n    private lastPosition: IClickPosition;\n\n    constructor(private document: Document) {\n        this.lastPosition = {x: -1, y: -1};\n        this.listenDocumentClick();\n    }\n\n    getLastClickPosition(): IClickPosition {\n        return this.lastPosition;\n    }\n\n    listenDocumentClick(): void {\n        this.document.addEventListener('click', (event: MouseEvent) => {\n            this.lastPosition = {x: event.clientX, y: event.clientY};\n        });\n    }\n}\n\nexport default new ModalUtil(document);\n","import {\n    ChangeDetectionStrategy,\n    Component,\n    Directive,\n    ElementRef,\n    OnDestroy,\n    QueryList,\n    ViewEncapsulation,\n    ContentChildren\n} from '@angular/core';\n\nimport { FocusMonitor } from '@ptsecurity/cdk/a11y';\nimport { Platform } from '@ptsecurity/cdk/platform';\n\nimport { mixinColor, mixinDisabled, CanColor, CanDisable, CanDisableCtor, CanColorCtor } from '@ptsecurity/mosaic/core';\nimport { McIcon } from '@ptsecurity/mosaic/icon';\n\n\n@Directive({\n    selector: 'button[mc-button], a[mc-button]',\n    host: { class: 'mc-button' }\n})\nexport class McButtonCSSStyler {}\n\n\n@Directive({\n    selector: 'button[mc-xs-button], a[mc-xs-button]',\n    host: { class: 'mc-button mc-button_xs' }\n})\nexport class McXSButtonCSSStyler {}\n\n\n@Directive({\n    selector: 'button[mc-sm-button], a[mc-sm-button]',\n    host: { class: 'mc-button mc-button_sm' }\n})\nexport class McSMButtonCSSStyler {}\n\n\n@Directive({\n    selector: 'button[mc-lg-button], a[mc-lg-button]',\n    host: { class: 'mc-button mc-button_lg' }\n})\nexport class McLGButtonCSSStyler {}\n\n\n@Directive({\n    selector: 'button[mc-xl-button], a[mc-xl-button]',\n    host: { class: 'mc-button mc-button_xl' }\n})\nexport class McXLButtonCSSStyler {}\n\n\n@Directive({\n    selector: 'button[mc-icon-button], a[mc-icon-button]',\n    queries: {\n        contentChildren: new ContentChildren(McIcon)\n    },\n    host: { class: 'mc-icon-button' }\n})\nexport class McIconButtonCSSStyler {\n    nativeElement: Element;\n\n    contentChildren: QueryList<McIcon>;\n\n    constructor(elementRef: ElementRef) {\n        this.nativeElement = elementRef.nativeElement;\n    }\n\n    ngAfterContentInit() {\n        this._addClassModificatorForIcons();\n    }\n\n    _addClassModificatorForIcons() {\n        const twoIcons = 2;\n        const icons = this.contentChildren.map((item) => item._elementRef.nativeElement);\n\n        if (icons.length === 1) {\n            const iconElement = icons[0];\n\n            if (!iconElement.previousElementSibling && !iconElement.nextElementSibling) {\n                if (iconElement.nextSibling) {\n                    iconElement.classList.add('mc-icon_left');\n                    this.nativeElement.classList.add('mc-icon-button_left');\n                }\n\n                if (iconElement.previousSibling) {\n                    iconElement.classList.add('mc-icon_right');\n                    this.nativeElement.classList.add('mc-icon-button_right');\n                }\n            }\n        } else if (icons.length === twoIcons) {\n            const firstIconElement = icons[0];\n            const secondIconElement = icons[1];\n\n            firstIconElement.classList.add('mc-icon_left');\n            secondIconElement.classList.add('mc-icon_right');\n        }\n    }\n}\n\n\nexport class McButtonBase {\n    constructor(public _elementRef: ElementRef) {}\n}\n\nexport const _McButtonMixinBase:\n    CanDisableCtor &\n    CanColorCtor &\n    typeof McButtonBase =\n        mixinColor(mixinDisabled(McButtonBase));\n\n\n@Component({\n    selector: `\n        button[mc-button],\n        button[mc-xs-button],\n        button[mc-sm-button],\n        button[mc-lg-button],\n        button[mc-xl-button]\n    `,\n    templateUrl: './button.component.html',\n    styleUrls: ['./button.css'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n    inputs: ['disabled', 'color'],\n    host: {\n        '[disabled]': 'disabled || null'\n    }\n})\nexport class McButton extends _McButtonMixinBase implements OnDestroy, CanDisable, CanColor {\n    constructor(elementRef: ElementRef, private _focusMonitor: FocusMonitor) {\n        super(elementRef);\n\n        this._focusMonitor.monitor(this._elementRef.nativeElement, true);\n    }\n\n    ngOnDestroy() {\n        this._focusMonitor.stopMonitoring(this._elementRef.nativeElement);\n    }\n\n    focus(): void {\n        this._getHostElement().focus();\n    }\n\n    _getHostElement() {\n        return this._elementRef.nativeElement;\n    }\n}\n\n\n@Component({\n    selector: 'a[mc-button], a[mc-xs-button], a[mc-sm-button], a[mc-lg-button], a[mc-xl-button]',\n    templateUrl: './button.component.html',\n    styleUrls: ['./button.css'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n    inputs: ['disabled', 'color'],\n    host: {\n        '[attr.tabindex]': 'disabled ? -1 : 0',\n        '[attr.disabled]': 'disabled || null',\n        '(click)': '_haltDisabledEvents($event)'\n    }\n})\nexport class McAnchor extends McButton {\n    constructor(focusMonitor: FocusMonitor, elementRef: ElementRef) {\n        super(elementRef, focusMonitor);\n    }\n\n    _haltDisabledEvents(event: Event) {\n        if (this.disabled) {\n            event.preventDefault();\n            event.stopImmediatePropagation();\n        }\n    }\n}\n\n\n@Component({\n    selector: 'button[mc-icon-button]',\n    templateUrl: './button.component.html',\n    styleUrls: ['./button.css'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n    inputs: ['disabled', 'color'],\n    host: {\n        '[attr.tabindex]': 'disabled ? -1 : 0',\n        '[attr.disabled]': 'disabled || null'\n    }\n})\nexport class McIconButton extends McButton {\n    constructor(focusMonitor: FocusMonitor, elementRef: ElementRef) {\n        super(elementRef, focusMonitor);\n    }\n\n    _haltDisabledEvents(event: Event) {\n        if (this.disabled) {\n            event.preventDefault();\n            event.stopImmediatePropagation();\n        }\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { A11yModule } from '@ptsecurity/cdk/a11y';\nimport { PlatformModule } from '@ptsecurity/cdk/platform';\n\nimport {\n    McButton,\n    McAnchor,\n    McIconButton,\n    McButtonCSSStyler,\n    McXSButtonCSSStyler,\n    McSMButtonCSSStyler,\n    McLGButtonCSSStyler,\n    McXLButtonCSSStyler,\n    McIconButtonCSSStyler\n} from './button.component';\n\n\n@NgModule({\n    imports: [\n        CommonModule,\n        A11yModule,\n        PlatformModule\n    ],\n    exports: [\n        McButton,\n        McAnchor,\n        McIconButton,\n        McButtonCSSStyler,\n        McXSButtonCSSStyler,\n        McSMButtonCSSStyler,\n        McLGButtonCSSStyler,\n        McXLButtonCSSStyler,\n        McIconButtonCSSStyler\n    ],\n    declarations: [\n        McButton,\n        McAnchor,\n        McIconButton,\n        McButtonCSSStyler,\n        McXSButtonCSSStyler,\n        McSMButtonCSSStyler,\n        McLGButtonCSSStyler,\n        McXLButtonCSSStyler,\n        McIconButtonCSSStyler\n    ]\n})\nexport class McButtonModule {}\n","import { InjectionToken } from '@angular/core';\n\n\n/**\n * Checkbox click action when user click on input element.\n * noop: Do not toggle checked or indeterminate.\n * check: Only toggle checked status, ignore indeterminate.\n * check-indeterminate: Toggle checked status, set indeterminate to false. Default behavior.\n * undefined: Same as `check-indeterminate`.\n */\nexport type McCheckboxClickAction = 'noop' | 'check' | 'check-indeterminate' | undefined;\n\n/**\n * Injection token that can be used to specify the checkbox click behavior.\n */\nexport const MC_CHECKBOX_CLICK_ACTION =\n    new InjectionToken<McCheckboxClickAction>('mc-checkbox-click-action');\n","import {\n    AfterViewInit,\n    Attribute,\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    ElementRef,\n    EventEmitter,\n    forwardRef,\n    Inject,\n    Input,\n    OnDestroy,\n    Optional,\n    Output,\n    ViewChild,\n    ViewEncapsulation\n} from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { FocusMonitor, FocusOrigin } from '@ptsecurity/cdk/a11y';\nimport {\n    CanColor, CanColorCtor,\n    CanDisable, CanDisableCtor,\n    HasTabIndex, HasTabIndexCtor,\n    mixinColor,\n    mixinDisabled,\n    mixinTabIndex,\n    toBoolean\n} from '@ptsecurity/mosaic/core';\n\nimport { MC_CHECKBOX_CLICK_ACTION, McCheckboxClickAction } from './checkbox-config';\n\n\n// Increasing integer for generating unique ids for checkbox components.\nlet nextUniqueId = 0;\n\n/**\n * Provider Expression that allows mc-checkbox to register as a ControlValueAccessor.\n * This allows it to support [(ngModel)].\n * @docs-private\n */\nexport const MC_CHECKBOX_CONTROL_VALUE_ACCESSOR: any = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => McCheckbox),\n    multi: true\n};\n\n/**\n * Represents the different states that require custom transitions between them.\n * @docs-private\n */\nexport enum TransitionCheckState {\n    /** The initial state of the component before any user interaction. */\n    Init,\n    /** The state representing the component when it's becoming checked. */\n    Checked,\n    /** The state representing the component when it's becoming unchecked. */\n    Unchecked,\n    /** The state representing the component when it's becoming indeterminate. */\n    Indeterminate\n}\n\n/** Change event object emitted by McCheckbox. */\nexport class McCheckboxChange {\n    /** The source McCheckbox of the event. */\n    source: McCheckbox;\n    /** The new `checked` value of the checkbox. */\n    checked: boolean;\n}\n\n// Boilerplate for applying mixins to McCheckbox.\n/** @docs-private */\nexport class McCheckboxBase {\n    constructor(public _elementRef: ElementRef) {\n    }\n}\n\nexport const _McCheckboxMixinBase:\n    HasTabIndexCtor &\n    CanColorCtor &\n    CanDisableCtor &\n    typeof McCheckboxBase =\n        mixinTabIndex(mixinColor(mixinDisabled(McCheckboxBase)));\n\n\n/**\n * A mosaic checkbox component. Supports all of the functionality of an HTML5 checkbox,\n * and exposes a similar API. A McCheckbox can be either checked, unchecked, indeterminate, or\n * disabled. Note that all additional accessibility attributes are taken care of by the component,\n * so there is no need to provide them yourself. However, if you want to omit a label and still\n * have the checkbox be accessible, you may supply an [aria-label] input.\n */\n@Component({\n    selector: 'mc-checkbox',\n    templateUrl: 'checkbox.html',\n    styleUrls: ['checkbox.css'],\n    exportAs: 'mcCheckbox',\n    host: {\n        class: 'mc-checkbox',\n        '[id]': 'id',\n        '[attr.id]': 'id',\n        '[class.mc-checkbox-indeterminate]': 'indeterminate',\n        '[class.mc-checkbox-checked]': 'checked',\n        '[class.mc-checkbox-disabled]': 'disabled',\n        '[class.mc-checkbox-label-before]': 'labelPosition == \"before\"'\n    },\n    providers: [MC_CHECKBOX_CONTROL_VALUE_ACCESSOR],\n    inputs: ['color', 'tabIndex'],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class McCheckbox extends _McCheckboxMixinBase implements ControlValueAccessor,\n    AfterViewInit, OnDestroy, CanColor, CanDisable, HasTabIndex {\n\n    /**\n     * Attached to the aria-label attribute of the host element. In most cases, arial-labelledby will\n     * take precedence so this may be omitted.\n     */\n    @Input('aria-label') ariaLabel: string = '';\n\n    /**\n     * Users can specify the `aria-labelledby` attribute which will be forwarded to the input element\n     */\n    @Input('aria-labelledby') ariaLabelledby: string | null = null;\n\n    private _uniqueId: string = `mc-checkbox-${++nextUniqueId}`;\n\n    /** A unique id for the checkbox input. If none is supplied, it will be auto-generated. */\n    @Input() id: string = this._uniqueId;\n\n    /** Returns the unique id for the visual hidden input. */\n    get inputId(): string {\n        return `${this.id || this._uniqueId}-input`;\n    }\n\n    /** Whether the checkbox is required. */\n    @Input()\n    get required(): boolean {\n        return this._required;\n    }\n\n    set required(value: boolean) {\n        this._required = toBoolean(value);\n    }\n\n    private _required: boolean;\n\n    /** Whether the label should appear after or before the checkbox. Defaults to 'after' */\n    @Input() labelPosition: 'before' | 'after' = 'after';\n\n    /** Name value will be applied to the input element if present */\n    @Input() name: string | null = null;\n\n    /** Event emitted when the checkbox's `checked` value changes. */\n    @Output() readonly change: EventEmitter<McCheckboxChange> =\n        new EventEmitter<McCheckboxChange>();\n\n    /** Event emitted when the checkbox's `indeterminate` value changes. */\n    @Output() readonly indeterminateChange: EventEmitter<boolean> = new EventEmitter<boolean>();\n\n    /** The value attribute of the native input element */\n    @Input() value: string;\n\n    /** The native `<input type=\"checkbox\">` element */\n    @ViewChild('input') _inputElement: ElementRef;\n\n    /**\n     * Called when the checkbox is blurred. Needed to properly implement ControlValueAccessor.\n     * @docs-private\n     */\n    _onTouched: () => any = () => {\n    }\n\n    private _currentAnimationClass: string = '';\n\n    private _currentCheckState: TransitionCheckState = TransitionCheckState.Init;\n\n    private _controlValueAccessorChangeFn: (value: any) => void = () => {\n    }\n\n    constructor(elementRef: ElementRef,\n                private _changeDetectorRef: ChangeDetectorRef,\n                private _focusMonitor: FocusMonitor,\n                @Attribute('tabindex') tabIndex: string,\n                @Optional() @Inject(MC_CHECKBOX_CLICK_ACTION)\n                private _clickAction: McCheckboxClickAction) {\n        super(elementRef);\n\n        this.tabIndex = parseInt(tabIndex) || 0;\n    }\n\n    ngAfterViewInit() {\n        this._focusMonitor\n            .monitor(this._inputElement.nativeElement)\n            .subscribe((focusOrigin) => this._onInputFocusChange(focusOrigin));\n    }\n\n    ngOnDestroy() {\n        this._focusMonitor.stopMonitoring(this._inputElement.nativeElement);\n    }\n\n    /**\n     * Whether the checkbox is checked.\n     */\n    @Input()\n    get checked(): boolean {\n        return this._checked;\n    }\n\n    set checked(value: boolean) {\n        if (value != this.checked) {\n            this._checked = value;\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n\n    private _checked: boolean = false;\n\n    /**\n     * Whether the checkbox is disabled. This fully overrides the implementation provided by\n     * mixinDisabled, but the mixin is still required because mixinTabIndex requires it.\n     */\n    @Input()\n    get disabled() {\n        return this._disabled;\n    }\n\n    set disabled(value: any) {\n        if (value != this.disabled) {\n            this._disabled = value;\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n\n    private _disabled: boolean = false;\n\n    /**\n     * Whether the checkbox is indeterminate. This is also known as \"mixed\" mode and can be used to\n     * represent a checkbox with three states, e.g. a checkbox that represents a nested list of\n     * checkable items. Note that whenever checkbox is manually clicked, indeterminate is immediately\n     * set to false.\n     */\n    @Input()\n    get indeterminate(): boolean {\n        return this._indeterminate;\n    }\n\n    set indeterminate(value: boolean) {\n        const changed = value != this._indeterminate;\n        this._indeterminate = value;\n\n        if (changed) {\n            if (this._indeterminate) {\n                this._transitionCheckState(TransitionCheckState.Indeterminate);\n            } else {\n                this._transitionCheckState(\n                    this.checked ? TransitionCheckState.Checked : TransitionCheckState.Unchecked);\n            }\n            this.indeterminateChange.emit(this._indeterminate);\n        }\n    }\n\n    private _indeterminate: boolean = false;\n\n    /** Method being called whenever the label text changes. */\n    _onLabelTextChange() {\n        // This method is getting called whenever the label of the checkbox changes.\n        // Since the checkbox uses the OnPush strategy we need to notify it about the change\n        // that has been recognized by the cdkObserveContent directive.\n        this._changeDetectorRef.markForCheck();\n    }\n\n    // Implemented as part of ControlValueAccessor.\n    writeValue(value: any) {\n        this.checked = !!value;\n    }\n\n    // Implemented as part of ControlValueAccessor.\n    registerOnChange(fn: (value: any) => void) {\n        this._controlValueAccessorChangeFn = fn;\n    }\n\n    // Implemented as part of ControlValueAccessor.\n    registerOnTouched(fn: any) {\n        this._onTouched = fn;\n    }\n\n    // Implemented as part of ControlValueAccessor.\n    setDisabledState(isDisabled: boolean) {\n        this.disabled = isDisabled;\n    }\n\n    _getAriaChecked(): 'true' | 'false' | 'mixed' {\n        return this.checked ? 'true' : (this.indeterminate ? 'mixed' : 'false');\n    }\n\n    private _transitionCheckState(newState: TransitionCheckState) {\n        const oldState = this._currentCheckState;\n        const element: HTMLElement = this._elementRef.nativeElement;\n\n        if (oldState === newState) {\n            return;\n        }\n        if (this._currentAnimationClass.length > 0) {\n            element.classList.remove(this._currentAnimationClass);\n        }\n\n        this._currentCheckState = newState;\n\n        if (this._currentAnimationClass.length > 0) {\n            element.classList.add(this._currentAnimationClass);\n        }\n    }\n\n    private _emitChangeEvent() {\n        const event = new McCheckboxChange();\n        event.source = this;\n        event.checked = this.checked;\n\n        this._controlValueAccessorChangeFn(this.checked);\n        this.change.emit(event);\n    }\n\n    /** Function is called whenever the focus changes for the input element. */\n    private _onInputFocusChange(focusOrigin: FocusOrigin) {\n        if (focusOrigin) {\n            this._onTouched();\n        }\n    }\n\n    /** Toggles the `checked` state of the checkbox. */\n    toggle(): void {\n        this.checked = !this.checked;\n    }\n\n    /**\n     * Event handler for checkbox input element.\n     * Toggles checked state if element is not disabled.\n     * Do not toggle on (change) event since IE doesn't fire change event when\n     *   indeterminate checkbox is clicked.\n     * @param event\n     */\n    _onInputClick(event: Event) {\n        // We have to stop propagation for click events on the visual hidden input element.\n        // By default, when a user clicks on a label element, a generated click event will be\n        // dispatched on the associated input element. Since we are using a label element as our\n        // root container, the click event on the `checkbox` will be executed twice.\n        // The real click event will bubble up, and the generated click event also tries to bubble up.\n        // This will lead to multiple click events.\n        // Preventing bubbling for the second event will solve that issue.\n        event.stopPropagation();\n\n        // If resetIndeterminate is false, and the current state is indeterminate, do nothing on click\n        if (!this.disabled && this._clickAction !== 'noop') {\n            // When user manually click on the checkbox, `indeterminate` is set to false.\n            if (this.indeterminate && this._clickAction !== 'check') {\n\n                Promise.resolve().then(() => {\n                    this._indeterminate = false;\n                    this.indeterminateChange.emit(this._indeterminate);\n                });\n            }\n\n            this.toggle();\n            this._transitionCheckState(\n                this._checked ? TransitionCheckState.Checked : TransitionCheckState.Unchecked);\n\n            // Emit our custom change event if the native input emitted one.\n            // It is important to only emit it, if the native input triggered one, because\n            // we don't want to trigger a change event, when the `checked` variable changes for example.\n            this._emitChangeEvent();\n        } else if (!this.disabled && this._clickAction === 'noop') {\n            // Reset native input when clicked with noop. The native checkbox becomes checked after\n            // click, reset it to be align with `checked` value of `mc-checkbox`.\n            this._inputElement.nativeElement.checked = this.checked;\n            this._inputElement.nativeElement.indeterminate = this.indeterminate;\n        }\n    }\n\n    /** Focuses the checkbox. */\n    focus(): void {\n        this._focusMonitor.focusVia(this._inputElement.nativeElement, 'keyboard');\n    }\n\n    _onInteractionEvent(event: Event) {\n        // We always have to stop propagation on the change event.\n        // Otherwise the change event, from the input element, will bubble up and\n        // emit its event object to the `change` output.\n        event.stopPropagation();\n    }\n}\n","import {\n    Directive,\n    forwardRef,\n    Provider\n} from '@angular/core';\nimport {\n    CheckboxRequiredValidator,\n    NG_VALIDATORS\n} from '@angular/forms';\n\n\nexport const MC_CHECKBOX_REQUIRED_VALIDATOR: Provider = {\n    provide: NG_VALIDATORS,\n    useExisting: forwardRef(() => McCheckboxRequiredValidator),\n    multi: true\n};\n\n/**\n * Validator for Mosaic checkbox's required attribute in template-driven checkbox.\n * Current CheckboxRequiredValidator only work with `input type=checkbox` and does not\n * work with `mc-checkbox`.\n */\n@Directive({\n    selector: `mc-checkbox[required][formControlName],\n             mc-checkbox[required][formControl], mc-checkbox[required][ngModel]`,\n    providers: [MC_CHECKBOX_REQUIRED_VALIDATOR],\n    host: { '[attr.required]': 'required ? \"\" : null' }\n})\nexport class McCheckboxRequiredValidator extends CheckboxRequiredValidator {\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { McCheckbox } from './checkbox';\nimport { McCheckboxRequiredValidator } from './checkbox-required-validator';\n\n\n@NgModule({\n    imports: [CommonModule],\n    exports: [McCheckbox, McCheckboxRequiredValidator],\n    declarations: [McCheckbox, McCheckboxRequiredValidator]\n})\nexport class McCheckboxModule {\n}\n","import { ChangeDetectionStrategy, Component, Input, ViewEncapsulation } from '@angular/core';\nimport { coerceBooleanProperty } from '@ptsecurity/cdk/coercion';\n\n\n@Component({\n    selector: 'mc-divider',\n    host: {\n        class: 'mc-divider',\n        role: 'separator',\n        '[attr.aria-orientation]': 'vertical ? \"vertical\" : \"horizontal\"',\n        '[class.mc-divider-vertical]': 'vertical',\n        '[class.mc-divider-inset]': 'inset'\n    },\n    template: '',\n    styleUrls: ['divider.css'],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    preserveWhitespaces: false\n})\nexport class McDivider {\n    // Whether the divider is vertically aligned.\n    @Input()\n    get vertical(): boolean {\n        return this._vertical;\n    }\n\n    set vertical(value: boolean) {\n        this._vertical = coerceBooleanProperty(value);\n    }\n\n    private _vertical: boolean = false;\n\n    // Whether the divider is an inset divider.\n    @Input()\n    get inset(): boolean {\n        return this._inset;\n    }\n\n    set inset(value: boolean) {\n        this._inset = coerceBooleanProperty(value);\n    }\n\n    private _inset: boolean = false;\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { McDivider } from './divider.component';\n\n\n@NgModule({\n    imports: [CommonModule],\n    exports: [McDivider],\n    declarations: [McDivider]\n})\nexport class McDividerModule {\n}\n","import { Component } from '@angular/core';\n\n\n@Component({\n    selector: 'mc-cleaner',\n    template: '<i mc-icon=\"mc-close-M_16\" class=\"mc-cleaner__icon\"></i>'\n})\nexport class McCleaner {\n}\n","import { NgControl } from '@angular/forms';\nimport { Observable } from 'rxjs';\n\n\n/** An interface which allows a control to work inside of a `MсFormField`. */\nexport abstract class McFormFieldControl<T> {\n    /** The value of the control. */\n    value: T | null;\n\n    /**\n     * Stream that emits whenever the state of the control changes such that the parent `MсFormField`\n     * needs to run change detection.\n     */\n    readonly stateChanges: Observable<void>;\n\n    /** The element ID for this control. */\n    readonly id: string;\n\n    /** The placeholder for this control. */\n    readonly placeholder: string;\n\n    /** Gets the NgControl for this control. */\n    readonly ngControl: NgControl | null;\n\n    /** Whether the control is focused. */\n    readonly focused: boolean;\n\n    /** Whether the control is empty. */\n    readonly empty: boolean;\n\n    /** Whether the control is required. */\n    readonly required: boolean;\n\n    /** Whether the control is disabled. */\n    readonly disabled: boolean;\n\n    /** Whether the control is in an error state. */\n    readonly errorState: boolean;\n\n    /**\n     * An optional name for the control type that can be used to distinguish `mc-form-field` elements\n     * based on their control type. The form field will add a class,\n     * `mc-form-field-type-{{controlType}}` to its root element.\n     */\n    readonly controlType?: string;\n\n    /** Handles a click on the control's container. */\n    abstract onContainerClick(event: MouseEvent): void;\n}\n","import { Observable } from 'rxjs';\n\n\n/** An interface which allows a control to work inside of a `MсFormField`. */\nexport abstract class McFormFieldNumberControl<T> {\n    /** The value of the control. */\n    value: T | null;\n\n    /**\n     * Stream that emits whenever the state of the control changes such that the parent `MсFormField`\n     * needs to run change detection.\n     */\n    readonly stateChanges: Observable<void>;\n\n    /** the number step */\n    step: number;\n\n    /** the number big step */\n    bigStep: number;\n\n    /** Whether the control is focused. */\n    readonly focused: boolean;\n\n    /** Handles step up and down */\n    abstract stepUp(step: number): void;\n\n    abstract stepDown(step: number): void;\n}\n","import { Directive, Input } from '@angular/core';\n\n\nlet nextUniqueId = 0;\n\n@Directive({\n    selector: 'mc-hint',\n    host: {\n        class: 'mc-hint',\n        '[attr.id]': 'id'\n    }\n})\nexport class McHint {\n    @Input() id: string = `mc-hint-${nextUniqueId++}`;\n}\n","import { Directive } from '@angular/core';\n\n\n@Directive({\n    selector: '[mcPrefix]'\n})\nexport class McPrefix {\n}\n","import { Component, EventEmitter, Output } from '@angular/core';\n\n\n@Component({\n    selector: 'mc-stepper',\n    template: `\n        <i class=\"mc mc-stepper-step-up mc-icon mc-angle-L_16 mc-icon-flip-h\" (mousedown)=\"onStepUp($event)\"></i>\n        <i class=\"mc mc-stepper-step-down mc-icon mc-angle-L_16\" (mousedown)=\"onStepDown($event)\"></i>\n    `\n})\nexport class McStepper {\n    @Output()\n    readonly stepUp: EventEmitter<void> = new EventEmitter<void>();\n    @Output()\n    readonly stepDown: EventEmitter<void> = new EventEmitter<void>();\n\n    onStepUp($event: MouseEvent) {\n        this.stepUp.emit();\n        $event.preventDefault();\n    }\n\n    onStepDown($event: MouseEvent) {\n        this.stepDown.emit();\n        $event.preventDefault();\n    }\n}\n","import { Directive } from '@angular/core';\n\n\n@Directive({\n    selector: '[mcSuffix]'\n})\nexport class McSuffix {\n}\n","import {\n    AfterContentChecked,\n    AfterContentInit,\n    AfterViewInit,\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    ContentChild,\n    ContentChildren, Directive,\n    ElementRef,\n    QueryList,\n    ViewEncapsulation\n} from '@angular/core';\nimport { ESCAPE } from '@ptsecurity/cdk/keycodes';\nimport { CanColor, CanColorCtor, mixinColor, ThemePalette } from '@ptsecurity/mosaic/core';\nimport { EMPTY, merge } from 'rxjs';\nimport { startWith } from 'rxjs/operators';\n\n\nimport { McCleaner } from './cleaner';\nimport { McFormFieldControl } from './form-field-control';\nimport { getMcFormFieldMissingControlError } from './form-field-errors';\nimport { McFormFieldNumberControl } from './form-field-number-control';\nimport { McHint } from './hint';\nimport { McPrefix } from './prefix';\nimport { McStepper } from './stepper';\nimport { McSuffix } from './suffix';\n\n\nlet nextUniqueId = 0;\n\nexport class McFormFieldBase {\n    constructor(public _elementRef: ElementRef) {}\n}\n\nexport const _McFormFieldMixinBase: CanColorCtor & typeof McFormFieldBase\n    = mixinColor(McFormFieldBase, ThemePalette.Primary);\n\n@Component({\n    selector: 'mc-form-field',\n    exportAs: 'mcFormField',\n    templateUrl: 'form-field.html',\n    // McInput is a directive and can't have styles, so we need to include its styles here.\n    // The McInput styles are fairly minimal so it shouldn't be a big deal for people who\n    // aren't using McInput.\n    styleUrls: [\n        'form-field.css',\n        '../input/input.css'\n    ],\n    host: {\n        class: 'mc-form-field',\n        '[class.mc-form-field_invalid]': '_control.errorState',\n        '[class.mc-form-field_disabled]': '_control.disabled',\n        '[class.mc-form-field_has-prefix]': 'hasPrefix',\n        '[class.mc-form-field_has-suffix]': 'hasSuffix',\n        '[class.mc-form-field_has-cleaner]': 'canShowCleaner',\n        '[class.mc-form-field_has-stepper]': 'canShowStepper',\n        '[class.mc-focused]': '_control.focused',\n        '[class.ng-untouched]': '_shouldForward(\"untouched\")',\n        '[class.ng-touched]': '_shouldForward(\"touched\")',\n        '[class.ng-pristine]': '_shouldForward(\"pristine\")',\n        '[class.ng-dirty]': '_shouldForward(\"dirty\")',\n        '[class.ng-valid]': '_shouldForward(\"valid\")',\n        '[class.ng-invalid]': '_shouldForward(\"invalid\")',\n        '[class.ng-pending]': '_shouldForward(\"pending\")',\n        '(keydown)': 'onKeyDown($event)',\n        '(mouseenter)': 'onHoverChanged(true)',\n        '(mouseleave)': 'onHoverChanged(false)'\n    },\n    inputs: ['color'],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\n\nexport class McFormField extends _McFormFieldMixinBase implements\n    AfterContentInit, AfterContentChecked, AfterViewInit, CanColor {\n\n    @ContentChild(McFormFieldControl) _control: McFormFieldControl<any>;\n    @ContentChild(McFormFieldNumberControl) _numberControl: McFormFieldNumberControl<any>;\n    @ContentChildren(McHint) _hint: QueryList<McHint>;\n    @ContentChildren(McSuffix) _suffix: QueryList<McSuffix>;\n    @ContentChildren(McPrefix) _prefix: QueryList<McPrefix>;\n    @ContentChildren(McCleaner) _cleaner: QueryList<McCleaner>;\n    @ContentChild(McStepper) _stepper: McStepper;\n\n    // Unique id for the internal form field label.\n    _labelId = `mc-form-field-label-${nextUniqueId++}`;\n\n    hovered: boolean = false;\n\n    constructor(public _elementRef: ElementRef, private _changeDetectorRef: ChangeDetectorRef) {\n        super(_elementRef);\n    }\n\n    ngAfterContentInit() {\n        this._validateControlChild();\n        if (this._control.controlType) {\n            this._elementRef.nativeElement.classList\n                .add(`mc-form-field-type-${this._control.controlType}`);\n\n            if (this._numberControl && this.hasStepper) {\n                this._stepper.stepUp.subscribe(this.onStepUp.bind(this));\n                this._stepper.stepDown.subscribe(this.onStepDown.bind(this));\n            }\n        }\n\n        // Subscribe to changes in the child control state in order to update the form field UI.\n        this._control.stateChanges.pipe(startWith())\n            .subscribe(() => {\n                this._changeDetectorRef.markForCheck();\n            });\n\n        if (this._numberControl) {\n            this._numberControl.stateChanges.pipe(startWith())\n                .subscribe(() => {\n                    this._changeDetectorRef.markForCheck();\n                });\n        }\n\n        // Run change detection if the value changes.\n        const valueChanges = this._control.ngControl && this._control.ngControl.valueChanges || EMPTY;\n        merge(valueChanges)\n            .subscribe(() => this._changeDetectorRef.markForCheck());\n    }\n\n    ngAfterContentChecked() {\n        this._validateControlChild();\n    }\n\n    ngAfterViewInit() {\n        // Avoid animations on load.\n        this._changeDetectorRef.detectChanges();\n    }\n\n    clearValue($event) {\n        $event.stopPropagation();\n\n        if (this._control && this._control.ngControl) {\n            this._control.ngControl.reset();\n        }\n    }\n\n    onContainerClick($event) {\n        if (this._control.onContainerClick) {\n            this._control.onContainerClick($event);\n        }\n    }\n\n    onKeyDown(e: KeyboardEvent): void {\n        // tslint:disable-next-line:deprecation\n        if (e.keyCode === ESCAPE &&\n            this._control.focused &&\n            this.hasCleaner) {\n\n            if (this._control && this._control.ngControl) {\n                this._control.ngControl.reset();\n            }\n\n            e.preventDefault();\n        }\n    }\n\n    onHoverChanged(isHovered: boolean) {\n        if (isHovered !== this.hovered) {\n            this.hovered  = isHovered;\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n\n    onStepUp() {\n        if (this._numberControl) {\n            this._numberControl.stepUp(this._numberControl.step);\n        }\n    }\n\n    onStepDown() {\n        if (this._numberControl) {\n            this._numberControl.stepDown(this._numberControl.step);\n        }\n    }\n\n    /** Determines whether a class from the NgControl should be forwarded to the host element. */\n    _shouldForward(prop: string): boolean {\n        const ngControl = this._control ? this._control.ngControl : null;\n\n        return ngControl && ngControl[prop];\n    }\n\n    /** Throws an error if the form field's control is missing. */\n    protected _validateControlChild() {\n        if (!this._control) {\n            throw getMcFormFieldMissingControlError();\n        }\n    }\n\n    get hasHint(): boolean {\n        return this._hint && this._hint.length > 0;\n    }\n\n    get hasSuffix(): boolean {\n        return this._suffix && this._suffix.length > 0;\n    }\n\n    get hasPrefix(): boolean {\n        return this._prefix && this._prefix.length > 0;\n    }\n\n    get hasCleaner(): boolean {\n        return this._cleaner && this._cleaner.length > 0;\n    }\n\n    get hasStepper(): boolean {\n        return !!this._stepper;\n    }\n\n    get canShowCleaner(): boolean {\n        return this.hasCleaner &&\n            this._control &&\n            this._control.ngControl\n                ? this._control.ngControl.value && !this._control.disabled\n                : false;\n    }\n\n\n    get disabled(): boolean {\n        return this._control && this._control.disabled;\n    }\n\n    get canShowStepper(): boolean {\n        return this._numberControl &&\n            !this.disabled &&\n            (\n                this._numberControl.focused ||\n                this.hovered\n            );\n    }\n}\n\n@Directive({\n    selector: 'mc-form-field[mcFormFieldWithoutBorders]',\n    exportAs: 'mcFormFieldWithoutBorders',\n    host: { class: 'mc-form-field_without-borders' }\n})\nexport class McFormFieldWithoutBorders {\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { McIconModule } from '@ptsecurity/mosaic/icon';\n\nimport { McCleaner } from './cleaner';\nimport { McFormField, McFormFieldWithoutBorders } from './form-field';\nimport { McHint } from './hint';\nimport { McPrefix } from './prefix';\nimport { McStepper } from './stepper';\nimport { McSuffix } from './suffix';\n\n\n@NgModule({\n    declarations: [\n        McFormField,\n        McFormFieldWithoutBorders,\n        McHint,\n        McPrefix,\n        McSuffix,\n        McCleaner,\n        McStepper\n    ],\n    imports: [CommonModule, McIconModule],\n    exports: [\n        McFormField,\n        McFormFieldWithoutBorders,\n        McHint,\n        McPrefix,\n        McSuffix,\n        McCleaner,\n        McStepper\n    ]\n})\nexport class McFormFieldModule {\n}\n","import { InjectionToken } from '@angular/core';\n\n\nexport const MC_INPUT_VALUE_ACCESSOR =\n    new InjectionToken<{ value: any }>('MC_INPUT_VALUE_ACCESSOR');\n","function sanitizeNumber(value: number): number | null {\n    return !isFinite(value) || isNaN(value)\n        ? null\n        : value;\n}\n\nfunction getPrecision(value: number): number {\n    const arr = value.toString().split('.');\n\n    return arr.length === 1\n        ? 1\n        // tslint:disable-next-line:no-magic-numbers\n        :  Math.pow(10, arr[1].length);\n}\n\nfunction add(value1: number, value2: number) {\n    const precision = Math.max(getPrecision(value1), getPrecision(value2));\n\n    const res = (value1 * precision + value2 * precision) / precision;\n\n    return sanitizeNumber(res);\n}\n\nexport const stepUp = (value: number | null,\n                       max: number,\n                       min: number,\n                       step: number\n): number | null => {\n    let res;\n\n    if (value === null) {\n        res = add(min, step);\n\n        return res === null ? null : Math.min(res, max);\n    }\n\n    res = add(value, step);\n\n    return res === null ? null : Math.max(Math.min(res, max), min);\n};\n\nexport const stepDown = (value: number | null,\n                         max: number,\n                         min: number,\n                         step: number\n): number | null => {\n    let res;\n\n    if (value === null) {\n        res = add(max, -step);\n\n        return res === null ? null : Math.max(res, min);\n    }\n\n    res = add(value, -step);\n\n    return res === null ? null : Math.min(Math.max(res, min), max);\n};\n","import {\n    Attribute,\n    Directive, DoCheck, ElementRef, Inject, Input, OnChanges,\n    OnDestroy, Optional, Self\n} from '@angular/core';\nimport {\n    FormGroupDirective,\n    NgControl,\n    NgForm, NgModel\n} from '@angular/forms';\nimport { coerceBooleanProperty } from '@ptsecurity/cdk/coercion';\nimport {\n    END, C, V, X, A, DELETE, BACKSPACE, TAB, ENTER,\n    ESCAPE, ZERO, NINE, NUMPAD_ZERO, NUMPAD_NINE, NUMPAD_MINUS, DASH,\n    FF_MINUS, LEFT_ARROW, RIGHT_ARROW, HOME, UP_ARROW, DOWN_ARROW, F1, F12\n} from '@ptsecurity/cdk/keycodes';\nimport { getSupportedInputTypes, Platform } from '@ptsecurity/cdk/platform';\nimport {\n    CanUpdateErrorState,\n    CanUpdateErrorStateCtor,\n    ErrorStateMatcher,\n    mixinErrorState\n} from '@ptsecurity/mosaic/core';\nimport { McFormFieldControl, McFormFieldNumberControl } from '@ptsecurity/mosaic/form-field';\nimport { Subject } from 'rxjs';\n\nimport { getMcInputUnsupportedTypeError } from './input-errors';\nimport { MC_INPUT_VALUE_ACCESSOR } from './input-value-accessor';\nimport { stepDown, stepUp } from './stepperUtils';\n\n\nconst MC_INPUT_INVALID_TYPES = [\n    'button',\n    'checkbox',\n    'file',\n    'hidden',\n    'image',\n    'radio',\n    'range',\n    'reset',\n    'submit'\n];\n\nexport const BIG_STEP = 10;\nexport const SMALL_STEP = 1;\n\nlet nextUniqueId = 0;\n\nexport class McInputBase {\n    constructor(public _defaultErrorStateMatcher: ErrorStateMatcher,\n                public _parentForm: NgForm,\n                public _parentFormGroup: FormGroupDirective,\n                public ngControl: NgControl) {\n    }\n}\n\nexport const _McInputMixinBase: CanUpdateErrorStateCtor & typeof McInputBase =\n    mixinErrorState(McInputBase);\n\n\n@Directive({\n    selector: `input[mcInput][type=\"number\"]`,\n    exportAs: 'mcNumericalInput',\n    providers: [NgModel, { provide: McFormFieldNumberControl, useExisting: McNumberInput }],\n    host: {\n        '(blur)': '_focusChanged(false)',\n        '(focus)': '_focusChanged(true)',\n        '(paste)': 'onPaste($event)',\n        '(keydown)': 'onKeyDown($event)'\n    }\n})\nexport class McNumberInput implements McFormFieldNumberControl<any> {\n    /**\n     * Implemented as part of McFormFieldNumberControl.\n     * @docs-private\n     */\n    value: any;\n\n    /**\n     * Implemented as part of McFormFieldNumberControl.\n     * @docs-private\n     */\n    focused: boolean = false;\n\n    /**\n     * Implemented as part of McFormFieldNumberControl.\n     * @docs-private\n     */\n    readonly stateChanges: Subject<void> = new Subject<void>();\n\n    private readonly _host: HTMLInputElement;\n\n    /**\n     * Implemented as part of McFormFieldNumberControl.\n     * @docs-private\n     */\n    private readonly _step: number;\n    get step() {\n        return this._step;\n    }\n\n    /**\n     * Implemented as part of McFormFieldNumberControl.\n     * @docs-private\n     */\n    private readonly _bigStep: number;\n    get bigStep() {\n        return this._bigStep;\n    }\n\n    private readonly _min: number;\n    private readonly _max: number;\n\n    constructor(\n        private _platform: Platform ,\n        private _elementRef: ElementRef,\n        private _model: NgModel,\n        @Attribute('step') step: string,\n        @Attribute('big-step') bigStep: string,\n        @Attribute('min') min: string,\n        @Attribute('max') max: string\n    ) {\n        this._step = this.isDigit(step) ? parseFloat(step) : SMALL_STEP;\n        this._bigStep = this.isDigit(bigStep) ? parseFloat(bigStep) : BIG_STEP;\n        this._min = this.isDigit(min) ? parseFloat(min) : -Infinity;\n        this._max = this.isDigit(max) ? parseFloat(max) : Infinity;\n\n        this._host = this._elementRef.nativeElement;\n\n        const self = this;\n\n        if ('valueAsNumber' in this._host) {\n            Object.defineProperty(Object.getPrototypeOf(this._host), 'valueAsNumber', {\n                // tslint:disable-next-line:no-reserved-keywords\n                get() {\n                    const res = parseFloat(self.normalizeSplitter(this.value));\n\n                    return isNaN(res) ? null : res;\n                }\n            });\n        }\n    }\n\n    _focusChanged(isFocused: boolean) {\n        if (isFocused !== this.focused) {\n            this.focused = isFocused;\n            this.stateChanges.next();\n        }\n    }\n\n    onKeyDown(event: KeyboardEvent) {\n        // tslint:disable-next-line:deprecation\n        const keyCode = event.keyCode;\n\n        const isCtrlA = (e) => e.keyCode === A && (e.ctrlKey || e.metaKey);\n        const isCtrlC = (e) => e.keyCode === C && (e.ctrlKey || e.metaKey);\n        const isCtrlV = (e) => e.keyCode === V && (e.ctrlKey || e.metaKey);\n        const isCtrlX = (e) => e.keyCode === X && (e.ctrlKey || e.metaKey);\n\n        const isFKey = (e) => e.keyCode >= F1 && e.keyCode <= F12;\n\n        const isNumber = (e) => (e.keyCode >= ZERO && e.keyCode <= NINE) ||\n            (e.keyCode >= NUMPAD_ZERO && e.keyCode <= NUMPAD_NINE);\n\n        const minuses = [NUMPAD_MINUS, DASH, FF_MINUS];\n        const serviceKeys = [DELETE, BACKSPACE, TAB, ESCAPE, ENTER];\n        const arrows = [LEFT_ARROW, RIGHT_ARROW];\n        const allowedKeys =  [HOME, END].concat(arrows).concat(serviceKeys).concat(minuses);\n\n        const isIEPeriod = (e) => e.key === '.' || e.key === 'Decimal';\n        const isNotIEPeriod = (e) => e.key === '.' || e.key === ',';\n\n        // Decimal is for IE\n        const isPeriod = (e) => this._platform.EDGE || this._platform.TRIDENT\n            ? isIEPeriod(e)\n            : isNotIEPeriod(e);\n\n        if (allowedKeys.indexOf(keyCode) !== -1 ||\n            isCtrlA(event) ||\n            isCtrlC(event) ||\n            isCtrlV(event) ||\n            isCtrlX(event) ||\n            isFKey(event) ||\n            isPeriod(event)\n        ) {\n            // let it happen, don't do anything\n            return;\n        }\n        // Ensure that it is not a number and stop the keypress\n        if (event.shiftKey || !isNumber(event)) {\n            event.preventDefault();\n\n            // process steps\n            const step = event.shiftKey ? this._bigStep : this._step;\n\n            if (keyCode === UP_ARROW) {\n                this.stepUp(step);\n            }\n\n            if (keyCode === DOWN_ARROW) {\n                this.stepDown(step);\n            }\n        }\n    }\n\n    onPaste(event) {\n        let value = event.clipboardData.getData('text');\n        value = this.normalizeSplitter(value);\n\n        if (!this.isDigit(value)) {\n            event.preventDefault();\n        }\n    }\n\n    stepUp(step: number) {\n        this._elementRef.nativeElement.focus();\n        const res = stepUp(this._host.valueAsNumber, this._max, this._min, step);\n        this._host.value = res === null ? '' : res.toString();\n        this._model.update.emit(this._host.valueAsNumber);\n    }\n\n    stepDown(step: number) {\n        this._elementRef.nativeElement.focus();\n        const res = stepDown(this._host.valueAsNumber, this._max, this._min, step);\n        this._host.value = res === null ? '' : res.toString();\n        this._model.update.emit(this._host.valueAsNumber);\n    }\n\n    private normalizeSplitter(value: string): string {\n        return value ? value.replace(/,/g, '.') : value;\n    }\n\n    private isDigit(value: string): boolean {\n        return this.isFloat(value) || this.isInt(value);\n    }\n\n    private isFloat(value: string): boolean {\n        return /^-?\\d+\\.\\d+$/.test(value);\n    }\n\n    private isInt(value: string): boolean {\n        return /^-?\\d+$/.test(value);\n    }\n}\n\n@Directive({\n    selector: `input[mcInput]`,\n    exportAs: 'mcInput',\n    host: {\n        class: 'mc-input',\n        // Native input properties that are overwritten by Angular inputs need to be synced with\n        // the native input element. Otherwise property bindings for those don't work.\n        '[attr.id]': 'id',\n        '[attr.placeholder]': 'placeholder',\n        '[disabled]': 'disabled',\n        '[required]': 'required',\n        '(blur)': '_focusChanged(false)',\n        '(focus)': '_focusChanged(true)',\n        '(input)': '_onInput()'\n    },\n    providers: [{ provide: McFormFieldControl, useExisting: McInput }]\n})\nexport class McInput extends _McInputMixinBase implements McFormFieldControl<any>, OnChanges,\n    OnDestroy, DoCheck, CanUpdateErrorState {\n\n    /** An object used to control when error messages are shown. */\n    @Input() errorStateMatcher: ErrorStateMatcher;\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    focused: boolean = false;\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    readonly stateChanges: Subject<void> = new Subject<void>();\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    controlType: string = 'mc-input';\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    @Input()\n    get disabled(): boolean {\n        if (this.ngControl && this.ngControl.disabled !== null) {\n            return this.ngControl.disabled;\n        }\n\n        return this._disabled;\n    }\n\n    set disabled(value: boolean) {\n        this._disabled = coerceBooleanProperty(value);\n\n        // Browsers may not fire the blur event if the input is disabled too quickly.\n        // Reset from here to ensure that the element doesn't become stuck.\n        if (this.focused) {\n            this.focused = false;\n            this.stateChanges.next();\n        }\n    }\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    @Input()\n    get id(): string {\n        return this._id;\n    }\n\n    set id(value: string) {\n        this._id = value || this._uid;\n    }\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    @Input() placeholder: string;\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    @Input()\n    get required(): boolean {\n        return this._required;\n    }\n\n    set required(value: boolean) {\n        this._required = coerceBooleanProperty(value);\n    }\n\n    // tslint:disable no-reserved-keywords\n    /** Input type of the element. */\n    @Input()\n    get type(): string {\n        return this._type;\n    }\n\n    set type(value: string) {\n        this._type = value || 'text';\n        this._validateType();\n\n        // When using Angular inputs, developers are no longer able to set the properties on the native\n        // input element. To ensure that bindings for `type` work, we need to sync the setter\n        // with the native property. Textarea elements don't support the type property or attribute.\n        if (getSupportedInputTypes().has(this._type)) {\n            this._elementRef.nativeElement.type = this._type;\n        }\n    }\n    // tslint:enable no-reserved-keywords\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    @Input()\n    get value(): string {\n        return this._inputValueAccessor.value;\n    }\n\n    set value(value: string) {\n        if (value !== this.value) {\n            this._inputValueAccessor.value = value;\n            this.stateChanges.next();\n        }\n    }\n\n    protected _uid = `mc-input-${nextUniqueId++}`;\n    protected _previousNativeValue: any;\n    protected _disabled = false;\n    protected _id: string;\n    protected _required = false;\n    protected _type = 'text';\n    protected _neverEmptyInputTypes = [\n        'date',\n        'datetime',\n        'datetime-local',\n        'month',\n        'time',\n        'week'\n    ].filter((t) => getSupportedInputTypes().has(t));\n\n    private _inputValueAccessor: { value: any };\n\n    constructor(protected _elementRef: ElementRef,\n                @Optional() @Self() public ngControl: NgControl,\n                @Optional() _parentForm: NgForm,\n                @Optional() _parentFormGroup: FormGroupDirective,\n                _defaultErrorStateMatcher: ErrorStateMatcher,\n                @Optional() @Self() @Inject(MC_INPUT_VALUE_ACCESSOR) inputValueAccessor: any) {\n        super(_defaultErrorStateMatcher, _parentForm, _parentFormGroup, ngControl);\n        // If no input value accessor was explicitly specified, use the element as the input value\n        // accessor.\n        this._inputValueAccessor = inputValueAccessor || this._elementRef.nativeElement;\n\n        this._previousNativeValue = this.value;\n\n        // Force setter to be called in case id was not specified.\n        this.id = this.id;\n    }\n\n    ngOnChanges() {\n        this.stateChanges.next();\n    }\n\n    ngOnDestroy() {\n        this.stateChanges.complete();\n    }\n\n    ngDoCheck() {\n        if (this.ngControl) {\n            // We need to re-evaluate this on every change detection cycle, because there are some\n            // error triggers that we can't subscribe to (e.g. parent form submissions). This means\n            // that whatever logic is in here has to be super lean or we risk destroying the performance.\n            this.updateErrorState();\n        }\n\n        // We need to dirty-check the native element's value, because there are some cases where\n        // we won't be notified when it changes (e.g. the consumer isn't using forms or they're\n        // updating the value using `emitEvent: false`).\n        this._dirtyCheckNativeValue();\n    }\n\n    /** Focuses the input. */\n    focus(): void {\n        this._elementRef.nativeElement.focus();\n    }\n\n    /** Callback for the cases where the focused state of the input changes. */\n    _focusChanged(isFocused: boolean) {\n        if (isFocused !== this.focused) {\n            this.focused = isFocused;\n            this.stateChanges.next();\n        }\n    }\n\n    _onInput() {\n        // This is a noop function and is used to let Angular know whenever the value changes.\n        // Angular will run a new change detection each time the `input` event has been dispatched.\n        // It's necessary that Angular recognizes the value change, because when floatingLabel\n        // is set to false and Angular forms aren't used, the placeholder won't recognize the\n        // value changes and will not disappear.\n        // Listening to the input event wouldn't be necessary when the input is using the\n        // FormsModule or ReactiveFormsModule, because Angular forms also listens to input events.\n    }\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    get empty(): boolean {\n        return !this._isNeverEmpty() && !this._elementRef.nativeElement.value && !this._isBadInput();\n    }\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    onContainerClick() {\n        this.focus();\n    }\n\n    /** Does some manual dirty checking on the native input `value` property. */\n    protected _dirtyCheckNativeValue() {\n        const newValue = this.value;\n\n        if (this._previousNativeValue !== newValue) {\n            this._previousNativeValue = newValue;\n            this.stateChanges.next();\n        }\n    }\n\n    /** Make sure the input is a supported type. */\n    protected _validateType() {\n        if (MC_INPUT_INVALID_TYPES.indexOf(this._type) > -1) {\n            throw getMcInputUnsupportedTypeError(this._type);\n        }\n    }\n\n    /** Checks whether the input type is one of the types that are never empty. */\n    protected _isNeverEmpty() {\n        return this._neverEmptyInputTypes.indexOf(this._type) > -1;\n    }\n\n    /** Checks whether the input is invalid based on the native validation. */\n    protected _isBadInput() {\n        // The `validity` property won't be present on platform-server.\n        const validity = (this._elementRef.nativeElement as HTMLInputElement).validity;\n\n        return validity && validity.badInput;\n    }\n}\n\n@Directive({\n    selector: 'input[mcInputMonospace]',\n    exportAs: 'McInputMonospace',\n    host: { class: 'mc-input_monospace' }\n})\nexport class McInputMono {\n}\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","\nexport function isBoolean(val: any): val is boolean { return typeof val === 'boolean'; }\n\nexport function toBoolean(value: any): boolean {\n    return value != null && `${value}` !== 'false';\n}\n","import { NgModule, InjectionToken, Optional, Inject, isDevMode } from '@angular/core';\nimport { BidiModule } from '@ptsecurity/cdk/bidi';\n\n\n// Injection token that configures whether the Mosaic sanity checks are enabled.\nexport const MC_SANITY_CHECKS = new InjectionToken<boolean>('mc-sanity-checks', {\n    providedIn: 'root',\n    factory: MC_SANITY_CHECKS_FACTORY\n});\n\nexport function MC_SANITY_CHECKS_FACTORY(): boolean {\n    return true;\n}\n\n/**\n * Module that captures anything that should be loaded and/or run for *all* Mosaic\n * components. This includes Bidi, etc.\n *\n * This module should be imported to each top-level component module (e.g., MatTabsModule).\n */\n@NgModule({\n    imports: [ BidiModule ],\n    exports: [ BidiModule ]\n})\nexport class McCommonModule {\n    // Whether we've done the global sanity checks (e.g. a theme is loaded, there is a doctype).\n    private _hasDoneGlobalChecks = false;\n\n    // Reference to the global `document` object.\n    private _document = typeof document === 'object' && document ? document : null;\n\n    // Reference to the global 'window' object.\n    private _window = typeof window === 'object' && window ? window : null;\n\n    constructor(@Optional() @Inject(MC_SANITY_CHECKS) private _sanityChecksEnabled: boolean) {\n        if (this._areChecksEnabled() && !this._hasDoneGlobalChecks) {\n            this._checkDoctypeIsDefined();\n            this._checkThemeIsPresent();\n            this._hasDoneGlobalChecks = true;\n        }\n    }\n\n    // Whether any sanity checks are enabled\n    private _areChecksEnabled(): boolean {\n        return this._sanityChecksEnabled && isDevMode() && !this._isTestEnv();\n    }\n\n    // Whether the code is running in tests.\n    private _isTestEnv() {\n        // tslint:disable-next-line\n        return this._window && (this._window['__karma__'] || this._window['jasmine']);\n    }\n\n    private _checkDoctypeIsDefined(): void {\n        if (this._document && !this._document.doctype) {\n            console.warn(\n                'Current document does not have a doctype. This may cause ' +\n                'some Mosaic components not to behave as expected.'\n            );\n        }\n    }\n\n    private _checkThemeIsPresent(): void {\n        if (this._document && typeof getComputedStyle === 'function') {\n            const testElement = this._document.createElement('div');\n\n            testElement.classList.add('mc-theme-loaded-marker');\n            this._document.body.appendChild(testElement);\n\n            const computedStyle = getComputedStyle(testElement);\n\n            // In some situations, the computed style of the test element can be null. For example in\n            // Firefox, the computed style is null if an application is running inside of a hidden iframe.\n            // See: https://bugzilla.mozilla.org/show_bug.cgi?id=548397\n            if (computedStyle && computedStyle.display !== 'none') {\n                console.warn(\n                    'Could not find Mosaic core theme. Most Mosaic ' +\n                    'components may not work as expected. For more info refer ' +\n                    'to the theming guide: link there'\n                );\n            }\n\n            this._document.body.removeChild(testElement);\n        }\n    }\n}\n","import { coerceBooleanProperty } from '@ptsecurity/cdk/coercion';\n\nimport { Constructor } from './constructor';\n\n\nexport interface CanDisable {\n    disabled: boolean;\n}\n\n/** @docs-private */\nexport type CanDisableCtor = Constructor<CanDisable>;\n\n// Mixin to augment a directive with a `disabled` property.\nexport function mixinDisabled<T extends Constructor<{}>>(base: T): CanDisableCtor & T {\n    return class extends base {\n        private _disabled: boolean = false;\n\n        get disabled() {\n            return this._disabled;\n        }\n\n        set disabled(value: any) {\n            this._disabled = coerceBooleanProperty(value);\n        }\n\n        constructor(...args: any[]) {\n            // tslint:disable-next-line\n            super(...args);\n        }\n    };\n}\n","import { ElementRef } from '@angular/core';\n\nimport { Constructor } from './constructor';\n\n\nexport interface CanColor {\n    color: ThemePalette;\n}\n\n/** @docs-private */\nexport type CanColorCtor = Constructor<CanColor>;\n\nexport interface HasElementRef {\n    _elementRef: ElementRef;\n}\n\nexport enum ThemePalette {\n    Primary = 'primary',\n    Second = 'second',\n    Error = 'error',\n    Default = 'second'\n}\n\n/** Mixin to augment a directive with a `color` property. */\nexport function mixinColor<T extends Constructor<HasElementRef>>(\n    base: T,\n    defaultColor: ThemePalette = ThemePalette.Default\n): CanColorCtor & T {\n    return class extends base {\n\n        private _color: ThemePalette;\n\n        get color(): ThemePalette {\n            return this._color;\n        }\n\n        set color(value: ThemePalette) {\n            const colorPalette = value || defaultColor;\n\n            if (colorPalette !== this._color) {\n                if (this._color) {\n                    this._elementRef.nativeElement.classList.remove(`mc-${this._color}`);\n                }\n\n                if (colorPalette) {\n                    this._elementRef.nativeElement.classList.add(`mc-${colorPalette}`);\n                }\n\n                this._color = colorPalette;\n            }\n        }\n\n        constructor(...args: any[]) {\n            super(...args);\n\n            this.color = defaultColor;\n        }\n    };\n}\n\n","import { Constructor } from './constructor';\nimport { CanDisable } from './disabled';\n\n\nexport interface HasTabIndex {\n    tabIndex: number;\n}\n\nexport type HasTabIndexCtor = Constructor<HasTabIndex>;\n\n// Mixin to augment a directive with a `tabIndex` property.\nexport function mixinTabIndex<T extends Constructor<CanDisable>>(base: T, defaultTabIndex = 0)\n    : HasTabIndexCtor & T {\n    return class extends base {\n        private _tabIndex: number = defaultTabIndex;\n\n        get tabIndex(): number {\n            return this.disabled ? -1 : this._tabIndex;\n        }\n\n        set tabIndex(value: number) {\n            this._tabIndex = value != null ? value : defaultTabIndex;\n        }\n\n        constructor(...args: any[]) {\n            super(...args);\n        }\n    };\n}\n","import { FormControl, FormGroupDirective, NgControl, NgForm } from '@angular/forms';\nimport { Subject } from 'rxjs';\n\nimport { ErrorStateMatcher } from '../error/error-options';\n\nimport { Constructor } from './constructor';\n\n\n/** @docs-private */\nexport interface CanUpdateErrorState {\n\n    readonly stateChanges: Subject<void>;\n\n    errorState: boolean;\n    errorStateMatcher: ErrorStateMatcher;\n\n    updateErrorState();\n}\n\n/** @docs-private */\nexport type CanUpdateErrorStateCtor = Constructor<CanUpdateErrorState>;\n\n/** @docs-private */\nexport interface HasErrorState {\n    _parentFormGroup: FormGroupDirective;\n    _parentForm: NgForm;\n    _defaultErrorStateMatcher: ErrorStateMatcher;\n    ngControl: NgControl;\n}\n\n/**\n * Mixin to augment a directive with updateErrorState method.\n * For component with `errorState` and need to update `errorState`.\n */\nexport function mixinErrorState<T extends Constructor<HasErrorState>>(base: T)\n    : CanUpdateErrorStateCtor & T {\n    return class extends base {\n        /** Whether the component is in an error state. */\n        errorState: boolean = false;\n\n        /**\n         * Stream that emits whenever the state of the input changes such that the wrapping\n         * `MatFormField` needs to run change detection.\n         */\n        readonly stateChanges = new Subject<void>();\n\n        errorStateMatcher: ErrorStateMatcher;\n\n        constructor(...args: any[]) {\n            super(...args);\n        }\n\n        updateErrorState() {\n            const oldState = this.errorState;\n            const parent = this._parentFormGroup || this._parentForm;\n            const matcher = this.errorStateMatcher || this._defaultErrorStateMatcher;\n            const control = this.ngControl ? this.ngControl.control as FormControl : null;\n            const newState = matcher.isErrorState(control, parent);\n\n            if (newState !== oldState) {\n                this.errorState = newState;\n                this.stateChanges.next();\n            }\n        }\n    };\n}\n","import {\n    AfterViewChecked,\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    ElementRef,\n    EventEmitter,\n    Inject,\n    InjectionToken,\n    Input,\n    OnDestroy,\n    Optional,\n    Output,\n    QueryList,\n    ViewEncapsulation\n} from '@angular/core';\nimport { coerceBooleanProperty } from '@ptsecurity/cdk/coercion';\nimport { ENTER, SPACE } from '@ptsecurity/cdk/keycodes';\nimport { Subject } from 'rxjs';\n\nimport { McOptgroup } from './optgroup';\n\n\n/**\n * Option IDs need to be unique across components, so this counter exists outside of\n * the component definition.\n */\nlet _uniqueIdCounter = 0;\n\n/** Event object emitted by McOption when selected or deselected. */\nexport class McOptionSelectionChange {\n    constructor(\n        /** Reference to the option that emitted the event. */\n        public source: McOption,\n        /** Whether the change in the option's value was a result of a user action. */\n        public isUserInput = false) {\n    }\n}\n\n/**\n * Describes a parent component that manages a list of options.\n * Contains properties that the options can inherit.\n * @docs-private\n */\nexport interface IMcOptionParentComponent {\n    disableRipple?: boolean;\n    multiple?: boolean;\n}\n\n/**\n * Injection token used to provide the parent component to options.\n */\nexport const MC_OPTION_PARENT_COMPONENT =\n    new InjectionToken<IMcOptionParentComponent>('MC_OPTION_PARENT_COMPONENT');\n\n/**\n * Single option inside of a `<mat-select>` element.\n */\n@Component({\n    selector: 'mc-option',\n    exportAs: 'mcOption',\n    host: {\n        '[attr.tabindex]': '_getTabIndex()',\n        '[class.mc-selected]': 'selected',\n        '[class.mc-option-multiple]': 'multiple',\n        '[class.mc-active]': 'active',\n        '[id]': 'id',\n        '[class.mc-disabled]': 'disabled',\n        '(click)': '_selectViaInteraction()',\n        '(keydown)': '_handleKeydown($event)',\n        class: 'mc-option'\n    },\n    styleUrls: ['option.css'],\n    templateUrl: 'option.html',\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class McOption implements AfterViewChecked, OnDestroy {\n    /** Whether the wrapping component is in multiple selection mode. */\n    get multiple() {\n        return this._parent && this._parent.multiple;\n    }\n\n    /** The unique ID of the option. */\n    get id(): string {\n        return this._id;\n    }\n\n    /** Whether or not the option is currently selected. */\n    get selected(): boolean {\n        return this._selected;\n    }\n\n    /** The form value of the option. */\n    @Input() value: any;\n\n    /** Whether the option is disabled. */\n    @Input()\n    get disabled() {\n        return (this.group && this.group.disabled) || this._disabled;\n    }\n\n    set disabled(value: any) {\n        this._disabled = coerceBooleanProperty(value);\n    }\n\n    /** Whether ripples for the option are disabled. */\n    get disableRipple() {\n        return this._parent && this._parent.disableRipple;\n    }\n\n    /** Event emitted when the option is selected or deselected. */\n        // tslint:disable-next-line:no-output-on-prefix\n    @Output() readonly onSelectionChange = new EventEmitter<McOptionSelectionChange>();\n\n    /** Emits when the state of the option changes and any parents have to be notified. */\n    readonly _stateChanges = new Subject<void>();\n\n    private _selected = false;\n    private _active = false;\n    private _disabled = false;\n    private readonly _id = `mc-option-${_uniqueIdCounter++}`;\n    private _mostRecentViewValue = '';\n\n    constructor(\n        private readonly _element: ElementRef,\n        private readonly _changeDetectorRef: ChangeDetectorRef,\n        @Optional() @Inject(MC_OPTION_PARENT_COMPONENT) private readonly _parent: IMcOptionParentComponent,\n        @Optional() readonly group: McOptgroup) {\n    }\n\n    /**\n     * Whether or not the option is currently active and ready to be selected.\n     * An active option displays styles as if it is focused, but the\n     * focus is actually retained somewhere else. This comes in handy\n     * for components like autocomplete where focus must remain on the input.\n     */\n    get active(): boolean {\n        return this._active;\n    }\n\n    /**\n     * The displayed value of the option. It is necessary to show the selected option in the\n     * select's trigger.\n     */\n    get viewValue(): string {\n        // TODO(kara): Add input property alternative for node envs.\n        return (this._getHostElement().textContent || '').trim();\n    }\n\n    /** Selects the option. */\n    select(): void {\n        if (!this._selected) {\n            this._selected = true;\n            this._changeDetectorRef.markForCheck();\n            this._emitSelectionChangeEvent();\n        }\n    }\n\n    /** Deselects the option. */\n    deselect(): void {\n        if (this._selected) {\n            this._selected = false;\n            this._changeDetectorRef.markForCheck();\n            this._emitSelectionChangeEvent();\n        }\n    }\n\n    /** Sets focus onto this option. */\n    focus(): void {\n        const element = this._getHostElement();\n\n        if (typeof element.focus === 'function') {\n            element.focus();\n        }\n    }\n\n    /**\n     * This method sets display styles on the option to make it appear\n     * active. This is used by the ActiveDescendantKeyManager so key\n     * events will display the proper options as active on arrow key events.\n     */\n    setActiveStyles(): void {\n        if (!this._active) {\n            this._active = true;\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n\n    /**\n     * This method removes display styles on the option that made it appear\n     * active. This is used by the ActiveDescendantKeyManager so key\n     * events will display the proper options as active on arrow key events.\n     */\n    setInactiveStyles(): void {\n        if (this._active) {\n            this._active = false;\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n\n    /** Gets the label to be used when determining whether the option should be focused. */\n    getLabel(): string {\n        return this.viewValue;\n    }\n\n    /** Ensures the option is selected when activated from the keyboard. */\n    _handleKeydown(event: KeyboardEvent): void {\n        // tslint:disable-next-line\n        if (event.keyCode === ENTER || event.keyCode === SPACE) {\n            this._selectViaInteraction();\n\n            // Prevent the page from scrolling down and form submits.\n            event.preventDefault();\n        }\n    }\n\n    /**\n     * `Selects the option while indicating the selection came from the user. Used to\n     * determine if the select's view -> model callback should be invoked.`\n     */\n    _selectViaInteraction(): void {\n        if (!this.disabled) {\n            this._selected = this.multiple ? !this._selected : true;\n            this._changeDetectorRef.markForCheck();\n            this._emitSelectionChangeEvent(true);\n        }\n    }\n\n    /** Returns the correct tabindex for the option depending on disabled state. */\n    _getTabIndex(): string {\n        return this.disabled ? '-1' : '0';\n    }\n\n    /** Gets the host DOM element. */\n    _getHostElement(): HTMLElement {\n        return this._element.nativeElement;\n    }\n\n    ngAfterViewChecked() {\n        // Since parent components could be using the option's label to display the selected values\n        // (e.g. `mat-select`) and they don't have a way of knowing if the option's label has changed\n        // we have to check for changes in the DOM ourselves and dispatch an event. These checks are\n        // relatively cheap, however we still limit them only to selected options in order to avoid\n        // hitting the DOM too often.\n        if (this._selected) {\n            const viewValue = this.viewValue;\n\n            if (viewValue !== this._mostRecentViewValue) {\n                this._mostRecentViewValue = viewValue;\n                this._stateChanges.next();\n            }\n        }\n    }\n\n    ngOnDestroy() {\n        this._stateChanges.complete();\n    }\n\n    /** Emits the selection change event. */\n    private _emitSelectionChangeEvent(isUserInput = false): void {\n        this.onSelectionChange.emit(new McOptionSelectionChange(this, isUserInput));\n    }\n}\n\n/**\n * Counts the amount of option group labels that precede the specified option.\n * @param optionIndex Index of the option at which to start counting.\n * @param options Flat list of all of the options.\n * @param optionGroups Flat list of all of the option groups.\n * @docs-private\n */\nexport function _countGroupLabelsBeforeOption(\n    optionIndex: number, options: QueryList<McOption>,\n    optionGroups: QueryList<McOptgroup>\n): number {\n\n    if (optionGroups.length) {\n        const optionsArray = options.toArray();\n        const groups = optionGroups.toArray();\n\n        let groupCounter = 0;\n\n        for (let i = 0; i < optionIndex + 1; i++) {\n            if (optionsArray[i].group && optionsArray[i].group === groups[groupCounter]) {\n                groupCounter++;\n            }\n        }\n\n        return groupCounter;\n    }\n\n    return 0;\n}\n\n/**\n * Determines the position to which to scroll a panel in order for an option to be into view.\n * @param optionIndex Index of the option to be scrolled into the view.\n * @param optionHeight Height of the options.\n * @param currentScrollPosition Current scroll position of the panel.\n * @param panelHeight Height of the panel.\n * @docs-private\n */\nexport function _getOptionScrollPosition(\n    optionIndex: number,\n    optionHeight: number,\n    currentScrollPosition: number,\n    panelHeight: number\n): number {\n    const optionOffset = optionIndex * optionHeight;\n\n    if (optionOffset < currentScrollPosition) { return optionOffset; }\n\n    if (optionOffset + optionHeight > currentScrollPosition + panelHeight) {\n        return Math.max(0, optionOffset - panelHeight + optionHeight);\n    }\n\n    return currentScrollPosition;\n}\n\n","import { ConnectionPositionPair } from '@ptsecurity/cdk/overlay';\n\n\nexport const POSITION_MAP: { [key: string]: ConnectionPositionPair } = {\n    top         : {\n        originX : 'center',\n        originY : 'top',\n        overlayX: 'center',\n        overlayY: 'bottom'\n    },\n    topCenter   : {\n        originX : 'center',\n        originY : 'top',\n        overlayX: 'center',\n        overlayY: 'bottom',\n        offsetX : undefined,\n        offsetY : undefined\n    },\n    topLeft     : {\n        originX : 'start',\n        originY : 'top',\n        overlayX: 'start',\n        overlayY: 'bottom',\n        offsetX : undefined,\n        offsetY : undefined\n    },\n    topRight    : {\n        originX : 'end',\n        originY : 'top',\n        overlayX: 'end',\n        overlayY: 'bottom',\n        offsetX : undefined,\n        offsetY : undefined\n    },\n    right       : {\n        originX : 'end',\n        originY : 'center',\n        overlayX: 'start',\n        overlayY: 'center'\n    },\n    rightTop    : {\n        originX : 'end',\n        originY : 'top',\n        overlayX: 'start',\n        overlayY: 'top',\n        offsetX : undefined,\n        offsetY : undefined\n    },\n    rightBottom : {\n        originX : 'end',\n        originY : 'bottom',\n        overlayX: 'start',\n        overlayY: 'bottom',\n        offsetX : undefined,\n        offsetY : undefined\n    },\n    bottom      : {\n        originX : 'center',\n        originY : 'bottom',\n        overlayX: 'center',\n        overlayY: 'top'\n    },\n    bottomCenter: {\n        originX : 'center',\n        originY : 'bottom',\n        overlayX: 'center',\n        overlayY: 'top'\n    },\n    bottomLeft  : {\n        originX : 'start',\n        originY : 'bottom',\n        overlayX: 'start',\n        overlayY: 'top'\n    },\n    bottomRight : {\n        originX : 'end',\n        originY : 'bottom',\n        overlayX: 'end',\n        overlayY: 'top'\n    },\n    left        : {\n        originX : 'start',\n        originY : 'center',\n        overlayX: 'end',\n        overlayY: 'center'\n    },\n    leftTop     : {\n        originX : 'start',\n        originY : 'top',\n        overlayX: 'end',\n        overlayY: 'top'\n    },\n    leftBottom  : {\n        originX : 'start',\n        originY : 'bottom',\n        overlayX: 'end',\n        overlayY: 'bottom'\n    }\n};\n\nexport const DEFAULT_4_POSITIONS = _objectValues([\n    POSITION_MAP.top, POSITION_MAP.right, POSITION_MAP.bottom, POSITION_MAP.left\n]);\n\nfunction arrayMap<T, S>(array: T[], iteratee: (item: T, index: number, arr: T[]) => S): S[] {\n    let index = -1;\n    const length = array == null ? 0 : array.length;\n    const result = Array(length);\n\n    while (++index < length) {\n        result[ index ] = iteratee(array[ index ], index, array);\n    }\n\n    return result;\n}\nfunction baseValues<T>(object: { [key: string]: T } | T[], props: string[]): T[] {\n    return arrayMap(props,  (key) => {\n        return object[ key ];\n    });\n}\nfunction _objectValues<T>(object: { [key: string]: T } | T[]): T[] {\n    return object == null ? [] : baseValues(object, Object.keys(object));\n}\n","export function getMcFormFieldMissingControlError(): Error {\n  return Error('mc-form-field must contain a McFormFieldControl.');\n}\n","export function getMcInputUnsupportedTypeError(inputType: string): Error {\n    return Error(`Input type \"${inputType}\" isn't supported by mcInput.`);\n}\n","/**\n * Returns an exception to be thrown when attempting to change a select's `multiple` option\n * after initialization.\n * @docs-private\n */\nexport function getMcSelectDynamicMultipleError(): Error {\n    return Error('Cannot change `multiple` mode of select after initialization.');\n}\n\n/**\n * Returns an exception to be thrown when attempting to assign a non-array value to a select\n * in `multiple` mode. Note that `undefined` and `null` are still valid values to allow for\n * resetting the value.\n * @docs-private\n */\nexport function getMcSelectNonArrayValueError(): Error {\n    return Error('Value must be an array in multiple-selection mode.');\n}\n\n/**\n * Returns an exception to be thrown when assigning a non-function value to the comparator\n * used to determine if a value corresponds to an option. Note that whether the function\n * actually takes two values and returns a boolean is not checked.\n */\nexport function getMcSelectNonFunctionValueError(): Error {\n    return Error('`compareWith` must be a function.');\n}\n","import { NgModule, Directive, ElementRef, QueryList } from '@angular/core';\n\n\n/**\n * Shared directive to count lines inside a text area, such as a list item.\n * Line elements can be extracted with a @ContentChildren(McLine) query, then\n * counted by checking the query list's length.\n */\n@Directive({\n    selector: '[mc-line], [mcLine]',\n    host: { class: 'mc-line' }\n})\nexport class McLine {}\n\n/**\n * Helper that takes a query list of lines and sets the correct class on the host.\n * @docs-private\n */\nexport class McLineSetter {\n    constructor(private _lines: QueryList<McLine>, private _element: ElementRef) {\n        this._setLineClass(this._lines.length);\n\n        this._lines.changes.subscribe(() => {\n            this._setLineClass(this._lines.length);\n        });\n    }\n\n    private _setLineClass(count: number): void {\n        this._resetClasses();\n        if (count === 2 || count === 3) {\n            this._setClass(`mc-${count}-line`, true);\n        } else if (count > 3) {\n            this._setClass(`mc-multi-line`, true);\n        }\n    }\n\n    private _resetClasses(): void {\n        this._setClass('mc-2-line', false);\n        this._setClass('mc-3-line', false);\n        this._setClass('mc-multi-line', false);\n    }\n\n    private _setClass(className: string, isAdd: boolean): void {\n        if (isAdd) {\n            this._element.nativeElement.classList.add(className);\n        } else {\n            this._element.nativeElement.classList.remove(className);\n        }\n    }\n}\n\n@NgModule({\n    imports: [],\n    exports: [McLine],\n    declarations: [McLine]\n})\nexport class McLineModule {}\n","import { Injectable } from '@angular/core';\nimport { FormGroupDirective, NgForm, FormControl } from '@angular/forms';\n\n\n/** Error state matcher that matches when a control is invalid and dirty. */\n@Injectable()\nexport class ShowOnDirtyErrorStateMatcher implements ErrorStateMatcher {\n    isErrorState(control: FormControl | null, form: FormGroupDirective | NgForm | null): boolean {\n        return !!(control && control.invalid && (control.dirty || (form && form.submitted)));\n    }\n}\n\n/** Provider that defines how form controls behave with regards to displaying error messages. */\n@Injectable({ providedIn: 'root' })\nexport class ErrorStateMatcher {\n    isErrorState(control: FormControl | null, form: FormGroupDirective | NgForm | null): boolean {\n        return !!(control && control.invalid && (control.touched || (form && form.submitted)));\n    }\n}\n","import { Component, ViewEncapsulation, Input, ChangeDetectionStrategy } from '@angular/core';\n\n\nexport type McPseudoCheckboxState = 'unchecked' | 'checked' | 'indeterminate';\n\n/**\n * Component that shows a simplified checkbox without including any kind of \"real\" checkbox.\n * Meant to be used when the checkbox is purely decorative and a large number of them will be\n * included, such as for the options in a multi-select. Uses no SVGs or complex animations.\n * Note that theming is meant to be handled by the parent element, e.g.\n * `mc-primary .mc-pseudo-checkbox`.\n *\n * Note that this component will be completely invisible to screen-reader users. This is *not*\n * interchangeable with `<mc-checkbox>` and should *not* be used if the user would directly\n * interact with the checkbox. The pseudo-checkbox should only be used as an implementation detail\n * of more complex components that appropriately handle selected / checked state.\n * @docs-private\n */\n@Component({\n    encapsulation: ViewEncapsulation.None,\n    preserveWhitespaces: false,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    selector: 'mc-pseudo-checkbox',\n    styleUrls: ['pseudo-checkbox.css'],\n    templateUrl: 'pseudo-checkbox.partial.html',\n    host: {\n        class: 'mc-pseudo-checkbox',\n        '[class.mc-pseudo-checkbox_indeterminate]': 'state === \"indeterminate\"',\n        '[class.mc-pseudo-checkbox_checked]': 'state === \"checked\"',\n        '[class.mc-disabled]': 'disabled'\n    }\n})\nexport class McPseudoCheckbox {\n    @Input() state: McPseudoCheckboxState = 'unchecked';\n\n    @Input() disabled: boolean = false;\n}\n","import { NgModule } from '@angular/core';\n\nimport { McPseudoCheckbox } from './pseudo-checkbox/pseudo-checkbox';\n\n\n@NgModule({\n    exports: [McPseudoCheckbox],\n    declarations: [McPseudoCheckbox]\n})\nexport class McPseudoCheckboxModule {}\n\n\nexport * from './pseudo-checkbox/pseudo-checkbox';\n","import { DOCUMENT } from '@angular/common';\nimport { Inject, Injectable } from '@angular/core';\n\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class McMeasureScrollbarService {\n\n    get scrollBarWidth(): number {\n        if (this._scrollbarWidth) {\n            return this._scrollbarWidth;\n        }\n        this.initScrollBarWidth();\n\n        return this._scrollbarWidth;\n    }\n\n    private _scrollbarWidth: number;\n    private scrollbarMeasure = {\n        position: 'absolute',\n        top: '-9999px',\n        width: '50px',\n        height: '50px',\n        overflow: 'scroll'\n    };\n\n    constructor(\n        @Inject(DOCUMENT) private document: any\n    ) {\n        this.initScrollBarWidth();\n    }\n\n    initScrollBarWidth() {\n        const scrollDiv = this.document.createElement('div');\n\n        // tslint:disable-next-line\n        for (const scrollProp in this.scrollbarMeasure) {\n            if (this.scrollbarMeasure.hasOwnProperty(scrollProp)) {\n                scrollDiv.style[scrollProp] = this.scrollbarMeasure[scrollProp];\n            }\n        }\n\n        this.document.body.appendChild(scrollDiv);\n\n        const width = scrollDiv.offsetWidth - scrollDiv.clientWidth;\n\n        this.document.body.removeChild(scrollDiv);\n        this._scrollbarWidth = width;\n    }\n}\n","import { Component, ViewEncapsulation, Input, ChangeDetectionStrategy } from '@angular/core';\n\nimport { mixinDisabled, CanDisable, CanDisableCtor } from '../common-behaviors/index';\n\n\n// Boilerplate for applying mixins to McOptgroup.\n/** @docs-private */\nexport class McOptgroupBase {}\n\nexport const _McOptgroupMixinBase: CanDisableCtor & typeof McOptgroupBase = mixinDisabled(McOptgroupBase);\n\n// Counter for unique group ids.\nlet _uniqueOptgroupIdCounter = 0;\n\n/**\n * Component that is used to group instances of `mc-option`.\n */\n@Component({\n    selector: 'mc-optgroup',\n    exportAs: 'mcOptgroup',\n    templateUrl: 'optgroup.html',\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    inputs: ['disabled'],\n    styleUrls: ['optgroup.css'],\n    host: {\n        class: 'mc-optgroup',\n        role: 'group',\n        '[class.mc-optgroup-disabled]': 'disabled',\n        '[attr.aria-disabled]': 'disabled.toString()',\n        '[attr.aria-labelledby]': '_labelId'\n    }\n})\nexport class McOptgroup extends _McOptgroupMixinBase implements CanDisable {\n    /** Label for the option group. */\n    @Input() label: string;\n\n    /** Unique id for the underlying label. */\n    _labelId: string = `mc-optgroup-label-${_uniqueOptgroupIdCounter++}`;\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { McPseudoCheckboxModule } from '../selection/index';\n\nimport { McOptgroup } from './optgroup';\nimport { McOption } from './option';\n\n\n@NgModule({\n    imports: [CommonModule, McPseudoCheckboxModule],\n    exports: [McOption, McOptgroup],\n    declarations: [McOption, McOptgroup]\n})\nexport class McOptionModule {}\n\n\nexport * from './option';\nexport * from './optgroup';\n","import { InjectionToken } from '@angular/core';\n\n\n/** InjectionToken that can be used to specify the global label options. */\nexport const MC_LABEL_GLOBAL_OPTIONS =\n    new InjectionToken<LabelOptions>('mc-label-global-options');\n\n/** Type for the available floatLabel values. */\nexport type FloatLabelType = 'always' | 'never' | 'auto';\n\n/** Configurable options for floating labels. */\nexport interface LabelOptions {\n    /**\n     * Whether the label should float `always`, `never`, or `auto` (only when necessary).\n     * Default behavior is assumed to be `auto`.\n     */\n    float?: FloatLabelType;\n}\n","import {\n    animate,\n    state,\n    style,\n    transition,\n    trigger,\n    AnimationTriggerMetadata,\n} from '@angular/animations';\n\n\nexport const fadeAnimation: AnimationTriggerMetadata =  trigger('fadeAnimation', [\n    state('void', style({ opacity: 0 })),\n    state('true', style({ opacity: 1 })),\n    state('false', style({ opacity: 0 })),\n    transition('* => true', animate('150ms cubic-bezier(0.0, 0.0, 0.2, 1)')),\n    transition('* => void', animate('150ms cubic-bezier(0.4, 0.0, 1, 1)')),\n]);\n","import {\n    Attribute,\n    ChangeDetectionStrategy,\n    Component,\n    Directive,\n    ElementRef,\n    ViewEncapsulation\n} from '@angular/core';\n\nimport { mixinColor, CanColor, CanColorCtor } from '@ptsecurity/mosaic/core';\n\n\n@Directive({\n    selector: '[mc-icon]',\n    host: { class: 'mc mc-icon' }\n})\nexport class McIconCSSStyler {}\n\n\nexport class McIconBase {\n    constructor(public _elementRef: ElementRef) {}\n}\n\nexport const _McIconMixinBase: CanColorCtor & typeof McIconBase\n    = mixinColor(McIconBase);\n\n\n@Component({\n    selector: `[mc-icon]`,\n    template: '<ng-content></ng-content>',\n    styleUrls: ['./icon.css'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n    inputs: ['color']\n})\nexport class McIcon extends _McIconMixinBase implements CanColor {\n    constructor(elementRef: ElementRef, @Attribute('mc-icon') iconName: string) {\n        super(elementRef);\n\n        elementRef.nativeElement.classList.add(iconName);\n    }\n\n    _getHostElement() {\n        return this._elementRef.nativeElement;\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { A11yModule } from '@ptsecurity/cdk/a11y';\nimport { PlatformModule } from '@ptsecurity/cdk/platform';\n\nimport {\n    McIcon,\n    McIconCSSStyler\n} from './icon.component';\n\n\n@NgModule({\n    imports: [\n        CommonModule,\n        A11yModule,\n        PlatformModule\n    ],\n    exports: [\n        McIcon,\n        McIconCSSStyler\n    ],\n    declarations: [\n        McIcon,\n        McIconCSSStyler\n    ]\n})\nexport class McIconModule {}\n"],"names":["encapsulation","ViewEncapsulation","None","changeDetection","ChangeDetectionStrategy","OnPush","tslib_1.__metadata","ElementRef","NgZone","Renderer2","McSplitterComponent","McGutterDirective","renderer","elementRef","this","_direction","_disabled","_order","_size","Object","defineProperty","prototype","get","set","direction","disabled","coerceBooleanProperty","order","coerceNumberProperty","size","ngOnInit","setStyle","getCursor","getState","coerceCssPixelValue","isVertical","setAttr","state","Error","property","value","nativeElement","attribute","setAttribute","tslib_1.__decorate","Input","Directive","selector","McSplitterAreaDirective","splitter","disableFlex","removeStyle","addArea","ngOnDestroy","removeArea","setOrder","setSize","sz","getSizeProperty","getSize","getOffsetSizeProperty","getMinSize","styles","getComputedStyle","parseFloat","getMinSizeProperty","style","McSplitterModule","NgModule","imports","CommonModule","McIconModule","exports","declarations","McToolTipComponent","cdr","_prefix","_positions","DEFAULT_4_POSITIONS","slice","_classMap","_placement","_trigger","visibleSource","BehaviorSubject","$visible","asObservable","mcVisibleChange","EventEmitter","mcMouseEnterDelay","mcMouseLeaveDelay","_onHide","Subject","_closeOnInteraction","availablePositions","POSITION_MAP","_title","isTitleString","TemplateRef","visible","next","emit","unshift","mcPlacement","show","_this","hideTId","clearTimeout","isContentEmpty","showTId","setTimeout","mcVisible","_markForCheck","hide","setClassMap","_a","mcTitle","afterHidden","markForCheck","_handleBodyInteraction","Output","Component","animations","fadeAnimation","template","preserveWhitespaces","host","(body:click)","ChangeDetectorRef","MC_TOOLTIP_SCROLL_STRATEGY","InjectionToken","MC_TOOLTIP_SCROLL_STRATEGY_FACTORY_PROVIDER","provide","deps","Overlay","useFactory","MC_TOOLTIP_SCROLL_STRATEGY_FACTORY","McTooltipDirective","_overlay","_ngZone","_scrollDispatcher","hostView","_scrollStrategy","_dir","isTooltipOpen","isDynamicTooltip","parentDisabled","$unsubscribe","manualListeners","Map","_destroyed","title","updateCompValue","_mouseEnterDelay","_mouseLeaveDelay","_visible","_createOverlay","_overlayRef","strategy","position","flexibleConnectedTo","withTransformOriginOn","withFlexibleDimensions","withViewportMargin","withPositions","scrollableAncestors","getAncestorScrollContainers","withScrollableContainers","positionChanges","pipe","takeUntil","subscribe","change","tooltip","onPositionChange","scrollableViewProperties","isOverlayClipped","run","create","positionStrategy","panelClass","scrollStrategy","_updatePosition","detachments","_detach","hasAttached","detach","$event","updatedPlacement","keys","some","key","connectionPair","originX","originY","overlayX","overlayY","handlePositioningUpdate","pos","overlayElement","clientHeight","element","currentContainer","top","parseInt","split","mcTrigger","forEach","listener","event","addEventListener","dispose","removeEventListener","clear","complete","handleKeydown","e","keyCode","ESCAPE","handleTouchend","getConfig","origin","_getOrigin","overlay","_getOverlayPosition","tslib_1.__assign","main","fallback","originPosition","isLtr","getMcTooltipInvalidPositionError","_invertPosition","x","y","overlayPosition","newX","newY","overlayRef","_portal","ComponentPortal","attach","instance","distinctUntilChanged","data","HostBinding","(keydown)","(touchend)","tslib_1.__param","Inject","Optional","ScrollDispatcher","ViewContainerRef","Directionality","McToolTipModule","BrowserAnimationsModule","OverlayModule","providers","entryComponents","VERSION","Version","SELECT_PANEL_PADDING_X","minutes","TimeParts","seconds","hours","_getDateFromTimeDigits","McTimepicker","_decrementTime","dateVal","whatToDecrement","_getTimeDigitsFromDate","_getCursorPositionOfPrevTimePartStart","cursorPos","timeString","length","_getCursorPositionOfNextTimePartStart","timeDevider","nextDividerPos","indexOf","undefined","_getTimeEditMetrics","cursorPosition","modifiedTimePart","cursorStartPosition","cursorEndPosition","_elementRef","minutesIndex","hoursIndex","secondsIndex","_getTimeStringFromDate","tempVal","timeFormat","DEFAULT_TIME_FORMAT","_getNumberWithLeadingZero","getHours","getMinutes","getSeconds","TimeFormats","HHmm","HHmmss","_getParsedTimeParts","hoursAndMinutesAndSeconds","match","HOURS_MINUTES_SECONDS_REGEXP","hoursAndMinutes","HOURS_MINUTES_REGEXP","hoursOnly","HOURS_ONLY_REGEXP","_getDateFromTimeString","trim","Number","resultDate","Date","isNaN","getTime","digit","_parseValidator","_currentDTimeInput","mcTimepickerParse","text","_minTimeValidator","_minDTime","_isTimeLowerThenMin","mcTimepickerLowerThenMintime","_maxTimeValidator","_maxDTime","_isTimeGreaterThenMax","mcTimepickerHigherThenMaxtime","timeToCompare","ErrorStateMatcher","McTimepicker_1","exportAs","class","[attr.id]","[attr.placeholder]","[disabled]","[required]","[attr.time-format]","[attr.min-time]","[attr.max-time]","[attr.value]","(blur)","(focus)","(input)","NG_VALIDATORS","useValue","ɵ1","multi","McFormFieldControl","useExisting","forwardRef","Self","MC_INPUT_VALUE_ACCESSOR","NgControl","NgForm","FormGroupDirective","McTimepickerMixinBase","McTimepickerModule","A11yModule","PlatformModule","FormsModule","mcSelectAnimations","transformPanel","trigger","transform","minWidth","opacity","transition","group","query","animateChild","animate","fadeInContent","nextUniqueId","MC_SELECT_SCROLL_STRATEGY","MC_SELECT_SCROLL_STRATEGY_PROVIDER","MC_SELECT_SCROLL_STRATEGY_PROVIDER_FACTORY","McSelectChange","source","McSelectBase","_defaultErrorStateMatcher","_parentForm","_parentFormGroup","ngControl","_McSelectMixinBase","mixinTabIndex","mixinDisabled","mixinErrorState","McSelectTrigger","McSelect","_super","_viewportRuler","_changeDetectorRef","_renderer","_parentFormField","tabIndex","_scrollStrategyFactory","call","_triggerFontSize","_optionIds","_transformOrigin","_panelDoneAnimating","_panelDoneAnimatingStream","_offsetY","controlType","optionSelectionChanges","defer","options","merge","apply","map","option","onSelectionChange","onStable","take","switchMap","openedChange","_openedStream","filter","o","_closedStream","selectionChange","valueChange","hiddenItems","_panelOpen","_required","_scrollTop","_multiple","_uid","_destroy","_focused","_onChange","_onTouched","_compareWith","o1","o2","valueAccessor","id","tslib_1.__extends","McSelect_1","_placeholder","stateChanges","_selectionModel","getMcSelectDynamicMultipleError","fn","getMcSelectNonFunctionValueError","_initializeSelection","_value","newValue","writeValue","_id","SelectionModel","multiple","panelOpen","overlayDir","offsetX","ngAfterContentInit","_initKeyManager","onChange","added","select","removed","deselect","changes","startWith","_resetOptions","ngAfterViewInit","tags","_calculateHiddenItems","ngDoCheck","updateErrorState","ngOnChanges","toggle","close","open","_triggerRect","getBoundingClientRect","_keyManager","withHorizontalOrientation","_calculateOverlayPosition","_highlightCorrectOption","fontSize","_isRtl","_setSelectionByValue","registerOnChange","registerOnTouched","setDisabledState","isDisabled","selected","empty","selectedOptions","viewValue","reverse","join","isEmpty","_handleKeydown","_handleOpenKeydown","_handleClosedKeydown","_onFadeInDone","_onFocus","_onBlur","_onAttached","positionChange","detectChanges","_calculateOverlayOffsetX","panel","scrollTop","_getPanelTheme","color","focus","_calculateOverlayScroll","selectedIndex","scrollBuffer","maxScroll","itemHeight","_getItemHeight","optionOffsetFromScrollTop","halfOptionHeight","optimalScrollPosition","Math","min","max","onContainerClick","onRemoveMatcherItem","stopPropagation","visibleItems","totalItemsWidth","_getTotalItemsWidthInMatcher","totalVisibleItemsWidth","tag","offsetTop","offsetHeight","width","itemsCounter","querySelector","matcherList","itemsCounterShowed","matcherListWidth","matcherWidth","triggerClone","cloneNode","remove","appendChild","querySelectorAll","item","isArrowKey","DOWN_ARROW","UP_ARROW","LEFT_ARROW","RIGHT_ARROW","ENTER","SPACE","altKey","preventDefault","onKeydown","manager","HOME","END","setFirstItemActive","setLastItemActive","activeItem","A","ctrlKey","hasDeselectedOptions_1","previouslyFocusedIndex","activeItemIndex","shiftKey","_selectViaInteraction","Promise","resolve","then","Array","isArray","getMcSelectNonArrayValueError","currentValue","_selectValue","_sortValues","correspondingOption","setActiveItem","find","error","isDevMode","console","warn","ActiveDescendantKeyManager","withTypeAhead","withVerticalOrientation","tabOut","_scrollActiveOptionIntoView","changedOrDestroyed","_onSelect","isUserInput","_stateChanges","_setOptionIds","wasSelected","isSelected","_propagateChanges","options_1","toArray","sort","a","b","sortComparator","fallbackValue","valueToEmit","activeOptionIndex","labelCount","_countGroupLabelsBeforeOption","optionGroups","_getOptionScrollPosition","_getOptionIndex","reduce","result","current","index","items","_getItemCount","panelHeight","scrollContainerHeight","selectedOptionOffset","_calculateOverlayOffsetY","_checkOverlayWithinViewport","overlayRect","viewportSize","getViewportSize","isRtl","first","leftOverflow","left","rightOverflow","right","round","updatePosition","topSpaceAvailable","bottomSpaceAvailable","height","bottom","panelHeightTop","abs","totalPanelHeight","panelHeightBottom","_adjustPanelUp","_adjustPanelDown","_getOriginBasedOnOption","distanceBelowViewport","distanceAboveViewport","optionHeightAdjustment","ViewChild","ViewChildren","McTag","QueryList","CdkConnectedOverlay","ContentChildren","McOption","descendants","McOptgroup","ContentChild","Observable","inputs","[attr.tabindex]","[class.mc-disabled]","[class.mc-select-invalid]","[class.mc-select-required]","(window:resize)","MC_OPTION_PARENT_COMPONENT","Attribute","ViewportRuler","McFormField","String","McSelectModule","McOptionModule","McTagModule","McFormFieldModule","ngZone","areas","_gutterSize","isDragging","areaPositionDivider","listeners","gutterSize","area","push","initialSize","onMouseDown","leftAreaIndex","rightAreaIndex","leftArea","rightArea","startPoint","screenX","screenY","runOutsideAngular","listen","onMouseUp","onMouseMove","indexToRemove","splice","endPoint","offset","newLeftAreaSize","newRightAreaSize","minLeftAreaSize","minRightAreaSize","rightAreaOffset","unsubscribe","pop","McProgressSpinner","percentage","_McProgressSpinnerMixinBase","McProgressSpinnerModule","McRadioChange","McRadioGroupBase","_McRadioGroupMixinBase","MC_RADIO_GROUP_CONTROL_VALUE_ACCESSOR","NG_VALUE_ACCESSOR","McRadioGroup","_changeDetector","_name","_selected","_isInitialized","_labelPosition","controlValueAccessorChangeFn","onTouched","updateRadioButtonNames","v","markRadiosForCheck","updateSelectedRadioFromValue","checkSelectedRadioButton","toBoolean","checked","touch","emitChangeEvent","_radios","radio","name","isAlreadySelected","McRadioButton","role","McRadioButtonBase","_McRadioButtonMixinBase","mixinColor","radioGroup","_radioDispatcher","_uniqueId","isFocused","_checked","removeUniqueSelectionListener","newCheckedState","notify","newDisabledState","required","labelPosition","onInputClick","onInputChange","groupValueChanged","[class.mc-radio-checked]","[class.mc-radio-disabled]","UniqueSelectionDispatcher","McRadioModule","McCommonModule","McTreeNodeDef","McTreeNodeDef_1","CdkTreeNodeDef","McTreeNodePadding","arguments","_baseLeftPadding","_iconWidth","_indent","McTreeNodePadding_1","_withIcon","_paddingIndent","nodeLevel","_treeNode","_tree","treeControl","getLevel","level","_level","leftPadding","isExpandable","_setPadding","CdkTreeNodePadding","McTreeNodeOption","treeSelection","_hasFocus","McTreeNodeOption_1","setSelected","setFocusedOption","_getHeight","getClientRects","_handleFocus","_handleBlur","_handleClick","tabindex","[class.mc-selected]","[class.mc-focused]","[attr.aria-expanded]","[attr.aria-level]","(click)","CdkTreeNode","McTreeSelection","_McTreeSelectionBase","CdkTree","McTreeNavigationChange","McTreeSelectionChange","_differs","autoSelect","noUnselect","navigationChange","McTreeSelection_1","rawValue","log","_onKeyDown","withShift","withCtrl","collapse","expand","toggleFocusedOption","PAGE_UP","setPreviousPageItemActive","PAGE_DOWN","setNextPageItemActive","FocusKeyManager","updateScrollSize","withScrollSize","floor","updateActiveItem","previousIndex_1","previousActiveItemIndex","activeIndex_1","_canDeselectLast","_emitNavigationEvent","focusedIndex","_isValidIndex","focusedOption","_emitChangeEvent","renderNodeChanges","dataDiffer","viewContainer","parentData","_dataDiffer","_nodeOutlet","arrayOfInstances","_embeddedViews","view","viewDef","def","nodes","node","nodeMatchedQueries","matchedQueryIds","nodeData","nodeIndex","reset","notifyOnChanges","CdkTreeNodeOutlet","[tabIndex]","IterableDiffers","MC_TREE_DIRECTIVES","McTreeModule","CdkTreeModule","McTreeFlattener","transformFunction","getChildren","_flattenNode","resultNodes","parentMap","flatNode","children","child","childParentMap","flattenNodes","structuredData","expandFlattenedNodes","results","currentExpand","i","isExpanded","McTreeFlatDataSource","treeFlattener","initialData","_flattenedData","_expandedData","_data","dataNodes","connect","collectionViewer","viewChange","expansionModel","disconnect","DataSource","McTreeNestedDataSource","McTagBase","_McTagMixinBase","_addClassModificatorForIcons","icons","contentChildren","iconElement","previousElementSibling","nextElementSibling","nextSibling","classList","add","previousSibling","firstIconElement","secondIconElement","McIcon","TIMEFORMAT_PLACEHOLDERS","hh:mm:ss","hh:mm","RegExp","_uniqueComponentIdSuffix","_validatorOnChange","noop","_validator","McTimepickerBase","validate","c","registerOnValidatorChange","inputValueAccessor","focused","_minTime","_maxTime","_inputValueAccessor","_previousNativeValue","Validators","compose","_applyInputChanges","_timeFormat","formatValue","timeFormatKey","placeholder","toLowerCase","minValue","maxValue","_dirtyCheckNativeValue","focusChanged","onBlur","onInput","initialCursorStart","selectionStart","initialCursorEnd","selectionEnd","isAutocompleteTriggered","doTimestringReformat","errors","_createSelectionOfTimeComponentInInput","_isBadInput","setProperty","onKeyDown","_getKeyCode","_upDownTimeByArrowKeys","_switchSelectionBetweenTimeparts","validity","badInput","applyParams","changedTime","timeToApply","control","updateValueAndValidity","_incrementTime","code","newEditParams","whatToIncrement","mcCancelText","McModalComponent","animationState","isComponent","mcContent","createDynamicComponent","isModalButtons","mcFooter","formatModalButtons","container","mcGetContainer","HTMLElement","OverlayRef","modalControl","registerModal","handleVisibleStateChange","firstChange","contentComponentRef","bodyContainer","insert","autoFocusButtonOk","changeVisibleFromInside","destroy","triggerOk","onClickOkCancel","triggerCancel","getInstance","getContentComponentRef","getContentComponent","getElement","onClickMask","mcMask","mcMaskClosable","target","contains","isModalType","type","mcModalType","onClickCloseBtn","ok","mcOnOk","cancel","mcOnCancel","loadingKey","caseClose_1","doClose","isPromise","handleThen","catch","isNonEmptyString","isTemplateRef","Type","animation","closeResult","changeBodyOverflow","animateTo","mcAfterOpen","mcAfterClose","getButtonCallableProp","prop","args","onButtonClick","button","loading","changeAnimationState","maskAnimationClassMap","modalAnimationClassMap","_b","changeDetectorRef","changeDetector","isVisible","window","updateTransformOrigin","buttons","autoLoading","component","factory","cfr","resolveComponentFactory","childInjector","Injector","McModalRef","parent","parentInjector","mcComponentParams","assign","modalElement","modalContainer","lastPosition","ModalUtil","getLastClickPosition","transformOrigin","offsetLeft","plusNum","openModals","document","body","mcMeasureScrollbarService","scrollBarWidth","read","DOCUMENT","ComponentFactoryResolver","McMeasureScrollbarService","McModalControlService","CssUnitPipe","defaultUnit","formatted","Pipe","ModalBuilderForService","createModal","changeProps","modalRef","destroyModal","keydownEvents","mcCloseByESC","McModalService","afterAllClose","closeAll","mcWidth","confirm","confirmType","mcClassName","success","simpleConfirm","delete","Injectable","McModalModule","McButtonModule","MC_NAVBAR_CONTAINER","MC_NAVBAR_ITEM","MC_NAVBAR_BRAND","MC_NAVBAR_TITLE","McNavbarLogo","McNavbarBrand","McNavbarTitle","McNavbarItemBase","_McNavbarMixinBase","McNavbarItem","_focusMonitor","_platform","_cdRef","dropdownItems","isCollapsed","_subscription","Subscription","encodeURI","dropdownContent","denyClickIfDisabled","_focusMonitor$","monitor","hasDropdownContent","listenClickOutside","startListenFocusDropdownItems","stopMonitoring","stopListenFocusDropdownItems","isActiveDropdownLink","link","isBrowser","location","href","handleClickByItem","toggleDropdown","isNavbarItem","handleClickByDropdownItem","forceCloseDropdown","_dropdownElements","el","events","eventListeners","hasAttribute","stopImmediatePropagation","[attr.disabled]","FocusMonitor","Platform","McNavbarContainer","CollapsibleItem","_collapsed","processCollapsed","collapsed","updateCollapsedClass","CachedItemWidth","itemsForCollapse","_collapsedItemsWidth","calculateAndCacheCollapsedItemsWidth","updateTitle","acc","getTitle","computedTitle","getAttribute","decodeURI","innerText","removeAttribute","McNavbar","forceRecalculateItemsWidth","resizeDebounceInterval","firstLevelElement","secondLevelElements","resizeObserver","fromEvent","debounceTime","_resizeSubscription","updateCollapsed","bind","_itemsWidths","calculateAndCacheItemsWidth","_totalItemsWidths","calculateAndCacheTotalItemsWidth","collapseDelta","maxAllowedWidth","itemsWidths","canCollapse","collapsedItemsWidth","getOuterElementWidth","getPropertyValue","allItemsSelector","allItems","from","getItemsForCollapse","McNavbarModule","idIterator","McProgressBarBase","_McProgressBarMixinBase","McProgressBar","mode","ThemePalette","Primary","McProgressBarModule","McProgressSpinnerBase","MaxValidator","_createValidator","MAX_VALIDATOR","[attr.max]","McInputModule","McInput","McNumberInput","McInputMono","MinValidator","McContentComponent","[class.mc-layout-content]","McFooterComponent","[class.mc-layout-footer]","McHeaderComponent","[class.mc-layout-header]","McLayoutComponent","hasSidebar","[class.mc-layout]","[class.mc-layout-has-sidebar]","McSidebarComponent","mcLayoutComponent","_mcWidth","mcCollapsedWidth","mcCollapsedChange","collapsible","mcCollapsed","[class.mc-layout-sidebar]","[class.mc-layout-sidebar-collapsed]","[style.flex]","[style.max-width.px]","[style.min-width.px]","[style.width.px]","Host","McLayoutModule","McListOption","_element","listSelection","checkboxPosition","_reportValueChange","wasSelected_1","_lineSetter","McLineSetter","_lines","_removeOptionFromList","getLabel","_text","textContent","_getHostElement","McLine","McListSelection","MC_SELECTION_LIST_VALUE_ACCESSOR","McListSelectionChange","McListSelectionBase","_McListSelectionMixinBase","horizontal","_modelChanges","EMPTY","_","_tempValues","_setOptionsFromValues","_i","_c","selectAll","deselectAll","values","getSelectedOptionValues","listOption","optionIndex","setPreviousItemActive","setNextItemActive","_getOptionByValue","Boolean","McListBase","McList","McListSubheaderCssStyler","McListItemBase","McListItem","McListModule","McLineModule","McLinkBase","_McLinkBase","McLink","McLinkModule","parentService","rootOpenModals","rootAfterAllClose","rootRegisteredMetaMap","registeredMetaMap","hasRegistered","afterOpenSubscription","afterOpen","afterCloseSubscription","afterClose","removeOpenModal","has","SkipSelf","listenDocumentClick","clientX","clientY","ModalUtil$1","_mcVisible","mcZIndex","_mcClosable","_mcMask","_mcMaskClosable","mcOkType","_mcOkLoading","_mcCancelLoading","mcOkText","McIconButton","McButton","McAnchor","McButtonCSSStyler","McXSButtonCSSStyler","McSMButtonCSSStyler","McLGButtonCSSStyler","McXLButtonCSSStyler","McIconButtonCSSStyler","MC_CHECKBOX_CLICK_ACTION","MC_CHECKBOX_CONTROL_VALUE_ACCESSOR","McCheckbox","TransitionCheckState","McCheckboxChange","McCheckboxBase","_McCheckboxMixinBase","_clickAction","ariaLabel","ariaLabelledby","indeterminateChange","_currentAnimationClass","_currentCheckState","Init","_controlValueAccessorChangeFn","_indeterminate","_inputElement","focusOrigin","_onInputFocusChange","changed","_transitionCheckState","Indeterminate","Checked","Unchecked","_onLabelTextChange","_getAriaChecked","indeterminate","newState","oldState","_onInputClick","focusVia","_onInteractionEvent","[id]","[class.mc-checkbox-indeterminate]","[class.mc-checkbox-checked]","[class.mc-checkbox-disabled]","[class.mc-checkbox-label-before]","MC_CHECKBOX_REQUIRED_VALIDATOR","McCheckboxRequiredValidator","[attr.required]","CheckboxRequiredValidator","McCheckboxModule","McDivider","_vertical","_inset","[attr.aria-orientation]","[class.mc-divider-vertical]","[class.mc-divider-inset]","McDividerModule","McCleaner","McFormFieldNumberControl","McHint","McPrefix","McStepper","stepUp","stepDown","onStepUp","onStepDown","McSuffix","McFormFieldBase","_McFormFieldMixinBase","_labelId","hovered","_validateControlChild","_control","_numberControl","hasStepper","_stepper","valueChanges","ngAfterContentChecked","clearValue","hasCleaner","onHoverChanged","isHovered","step","_shouldForward","getMcFormFieldMissingControlError","_hint","_suffix","_cleaner","[class.mc-form-field_invalid]","[class.mc-form-field_disabled]","[class.mc-form-field_has-prefix]","[class.mc-form-field_has-suffix]","[class.mc-form-field_has-cleaner]","[class.mc-form-field_has-stepper]","[class.ng-untouched]","[class.ng-touched]","[class.ng-pristine]","[class.ng-dirty]","[class.ng-valid]","[class.ng-invalid]","[class.ng-pending]","(mouseenter)","(mouseleave)","McFormFieldWithoutBorders","res","MC_INPUT_INVALID_TYPES","BIG_STEP","SMALL_STEP","McInputBase","_McInputMixinBase","_model","bigStep","_step","isDigit","_bigStep","_min","Infinity","_max","_host","self","getPrototypeOf","normalizeSplitter","McNumberInput_1","_focusChanged","minuses","NUMPAD_MINUS","DASH","FF_MINUS","serviceKeys","DELETE","BACKSPACE","TAB","arrows","allowedKeys","concat","isIEPeriod","isNotIEPeriod","metaKey","C","V","X","F1","F12","EDGE","TRIDENT","ZERO","NINE","NUMPAD_ZERO","NUMPAD_NINE","onPaste","clipboardData","getData","valueAsNumber","toString","update","replace","isFloat","isInt","test","NgModel","(paste)","_type","_neverEmptyInputTypes","t","getSupportedInputTypes","McInput_1","_validateType","_onInput","_isNeverEmpty","getMcInputUnsupportedTypeError","MIN_VALIDATOR","[attr.min]","__extends","d","__","constructor","extendStatics","__decorate","decorators","desc","r","getOwnPropertyDescriptor","Reflect","decorate","__param","paramIndex","decorator","__metadata","metadataKey","metadataValue","metadata","isBoolean","val","MC_SANITY_CHECKS_FACTORY","base","class_1","defaultColor","Default","_color","colorPalette","defaultTabIndex","_tabIndex","errorState","matcher","errorStateMatcher","isErrorState","optionsArray","groups","groupCounter","optionHeight","currentScrollPosition","optionOffset","arrayMap","array","iteratee","baseValues","object","props","inputType","sanitizeNumber","isFinite","getPrecision","arr","pow","value1","value2","precision","obj","scrollStrategies","reposition","scrollThrottle","setPrototypeOf","__proto__","p","hasOwnProperty","__assign","s","n","MC_SANITY_CHECKS","providedIn","_sanityChecksEnabled","_hasDoneGlobalChecks","_document","_window","_areChecksEnabled","_checkDoctypeIsDefined","_checkThemeIsPresent","_isTestEnv","doctype","testElement","createElement","computedStyle","display","removeChild","BidiModule","_setLineClass","count","_resetClasses","_setClass","className","isAdd","ShowOnDirtyErrorStateMatcher","form","invalid","dirty","submitted","touched","McPseudoCheckbox","[class.mc-pseudo-checkbox_indeterminate]","[class.mc-pseudo-checkbox_checked]","McPseudoCheckboxModule","scrollbarMeasure","overflow","initScrollBarWidth","_scrollbarWidth","scrollDiv","scrollProp","offsetWidth","clientWidth","McOptgroupBase","_McOptgroupMixinBase","_uniqueOptgroupIdCounter","[class.mc-optgroup-disabled]","[attr.aria-disabled]","[attr.aria-labelledby]","_uniqueIdCounter","McOptionSelectionChange","_parent","_active","_mostRecentViewValue","disableRipple","_emitSelectionChangeEvent","setActiveStyles","setInactiveStyles","_getTabIndex","ngAfterViewChecked","[class.mc-option-multiple]","[class.mc-active]","MC_LABEL_GLOBAL_OPTIONS","topCenter","offsetY","topLeft","topRight","rightTop","rightBottom","bottomCenter","bottomLeft","bottomRight","leftTop","leftBottom","McIconCSSStyler","McIconBase","_McIconMixinBase","iconName","queries","McButtonBase","_McButtonMixinBase","focusMonitor","_haltDisabledEvents"],"mappings":"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"}