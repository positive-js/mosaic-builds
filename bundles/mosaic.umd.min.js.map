{"version":3,"file":"mosaic.umd.min.js","sources":["../../src/lib/tooltip/tooltip.component.ts","../../src/lib/tooltip/tooltip.module.ts","../../src/lib/version.ts","../../src/lib/timepicker/timepicker.constants.ts","../../src/lib/select/select.component.ts","../../src/lib/select/select.module.ts","../../src/lib/splitter/splitter.component.ts","../../src/lib/splitter/splitter.module.ts","../../src/lib/toggle/toggle.component.ts","../../src/lib/toggle/toggle.module.ts","../../src/lib/tree/tree-selection.ts","../../src/lib/tree/tree.module.ts","../../src/lib/tree/data-source/flat-data-source.ts","../../src/lib/tree/data-source/nested-data-source.ts","../../src/lib/tag/tag.component.ts","../../src/lib/tag/tag.module.ts","../../src/lib/textarea/textarea.component.ts","../../src/lib/textarea/textarea.module.ts","../../src/lib/timepicker/timepicker.ts","../../src/lib/timepicker/timepicker.module.ts","../../src/lib/select/select-animations.ts","../../src/lib/modal/modal.service.ts","../../src/lib/modal/modal.module.ts","../../src/lib/navbar/navbar.component.ts","../../src/lib/navbar/navbar.module.ts","../../src/lib/progress-bar/progress-bar.component.ts","../../src/lib/progress-bar/progress-bar.module.ts","../../src/lib/progress-spinner/progress-spinner.component.ts","../../src/lib/progress-spinner/progress-spinner.module.ts","../../src/lib/radio/radio.component.ts","../../src/lib/radio/radio.module.ts","../../src/lib/tree/node.ts","../../src/lib/tree/padding.ts","../../src/lib/list/list-selection.component.ts","../../src/lib/list/list.component.ts","../../src/lib/list/list.module.ts","../../src/lib/link/link.component.ts","../../src/lib/link/link.module.ts","../../src/lib/modal/modal-control.service.ts","../../src/lib/modal/modal-ref.class.ts","../../src/lib/modal/modal-util.ts","../../src/lib/modal/modal.component.ts","../../src/lib/modal/css-unit.pipe.ts","../../src/lib/form-field/form-field.ts","../../src/lib/form-field/form-field.module.ts","../../src/lib/input/input-value-accessor.ts","../../src/lib/input/stepperUtils.ts","../../src/lib/input/input.ts","../../src/lib/input/input-number-validators.ts","../../src/lib/input/input.module.ts","../../src/lib/layout/content.component.ts","../../src/lib/layout/footer.component.ts","../../src/lib/layout/header.component.ts","../../src/lib/layout/layout.component.ts","../../src/lib/layout/sidebar.component.ts","../../src/lib/layout/layout.module.ts","../../src/lib/button/button.component.ts","../../src/lib/button/button.module.ts","../../src/lib/card/card.component.ts","../../src/lib/card/card.module.ts","../../src/lib/checkbox/checkbox-config.ts","../../src/lib/checkbox/checkbox.ts","../../src/lib/checkbox/checkbox-required-validator.ts","../../src/lib/checkbox/checkbox-module.ts","../../src/lib/divider/divider.component.ts","../../src/lib/divider/divider.module.ts","../../src/lib/dropdown/dropdown-content.ts","../../src/lib/dropdown/dropdown-panel.ts","../../src/lib/dropdown/dropdown-item.ts","../../src/lib/dropdown/dropdown-animations.ts","../../src/lib/dropdown/dropdown.component.ts","../../src/lib/dropdown/dropdown-trigger.ts","../../src/lib/dropdown/dropdown.module.ts","../../src/lib/form-field/cleaner.ts","../../src/lib/form-field/form-field-control.ts","../../src/lib/form-field/form-field-number-control.ts","../../src/lib/form-field/hint.ts","../../src/lib/form-field/prefix.ts","../../src/lib/form-field/stepper.ts","../../src/lib/form-field/suffix.ts","../../node_modules/tslib/tslib.es6.js","../../src/lib/core/utils/utils.ts","../../src/lib/core/common-behaviors/common-module.ts","../../src/lib/core/common-behaviors/disabled.ts","../../src/lib/core/common-behaviors/color.ts","../../src/lib/core/common-behaviors/tabindex.ts","../../src/lib/core/common-behaviors/error-state.ts","../../src/lib/core/option/option.ts","../../src/lib/core/overlay/overlay-position-map.ts","../../src/lib/dropdown/dropdown-errors.ts","../../src/lib/form-field/form-field-errors.ts","../../src/lib/input/input-errors.ts","../../src/lib/select/select-errors.ts","../../src/lib/core/line/line.ts","../../src/lib/core/error/error-options.ts","../../src/lib/core/selection/pseudo-checkbox/pseudo-checkbox.ts","../../src/lib/core/selection/index.ts","../../src/lib/core/services/measure-scrollbar.service.ts","../../src/lib/core/option/optgroup.ts","../../src/lib/core/option/index.ts","../../src/lib/core/label/label-options.ts","../../src/lib/core/animation/fade-animations.ts","../../src/lib/icon/icon.component.ts","../../src/lib/icon/icon.module.ts"],"sourcesContent":["import {\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    Directive,\n    ElementRef,\n    EventEmitter,\n    HostBinding,\n    Inject,\n    InjectionToken,\n    Input,\n    NgZone,\n    OnDestroy,\n    OnInit,\n    Optional,\n    Output,\n    TemplateRef,\n    ViewContainerRef,\n    ViewEncapsulation\n} from '@angular/core';\nimport { Directionality } from '@ptsecurity/cdk/bidi';\nimport { coerceBooleanProperty } from '@ptsecurity/cdk/coercion';\nimport { ESCAPE } from '@ptsecurity/cdk/keycodes';\nimport {\n    ConnectedOverlayPositionChange,\n    ConnectionPositionPair,\n    Overlay,\n    OverlayRef,\n    ScrollDispatcher,\n    IScrollStrategy,\n    FlexibleConnectedPositionStrategy,\n    IOverlayConnectionPosition,\n    IOriginConnectionPosition,\n    HorizontalConnectionPos,\n    VerticalConnectionPos\n} from '@ptsecurity/cdk/overlay';\nimport { ComponentPortal } from '@ptsecurity/cdk/portal';\nimport {\n    fadeAnimation,\n    DEFAULT_4_POSITIONS,\n    POSITION_MAP\n} from '@ptsecurity/mosaic/core';\nimport { BehaviorSubject, Observable, Subject } from 'rxjs';\nimport { distinctUntilChanged, takeUntil } from 'rxjs/operators';\n\n\n@Component({\n    selector: 'mc-tooltip',\n    exportAs: 'mcTooltip',\n    animations: [ fadeAnimation ],\n    templateUrl: './tooltip.component.html',\n    preserveWhitespaces: false,\n    styleUrls: ['./tooltip.css'],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    host: {\n        '(body:click)': 'this._handleBodyInteraction()'\n    }\n})\n\nexport class McTooltipComponent {\n    _prefix = 'mc-tooltip_placement';\n    _positions: ConnectionPositionPair[] = [ ...DEFAULT_4_POSITIONS ];\n    _classMap = {};\n    _placement = 'top';\n    _trigger = 'hover';\n    isTitleString: boolean;\n    visibleSource = new BehaviorSubject<boolean>(false);\n    $visible: Observable<boolean> = this.visibleSource.asObservable();\n    _title: string | TemplateRef<void>;\n    showTId: number;\n    hideTId: number;\n    availablePositions: any;\n\n    @Output() mcVisibleChange: EventEmitter<boolean> = new EventEmitter();\n\n    @Input() mcMouseEnterDelay = 400;\n\n    @Input() mcMouseLeaveDelay = 0;\n\n    get mcTitle(): string | TemplateRef<void> {\n        return this._title;\n    }\n\n    get mcVisible(): boolean {\n        return this.visibleSource.value;\n    }\n\n    get mcTrigger(): string {\n        return this._trigger;\n    }\n\n    get mcPlacement(): string {\n        return this._placement;\n    }\n\n    @Input()\n    set mcTitle(value: string | TemplateRef<void>) {\n        this.isTitleString = !(value instanceof TemplateRef);\n\n        if (this.isTitleString) {\n            this._title = value;\n        }\n    }\n    @Input()\n    set mcVisible(value: boolean) {\n        const visible = coerceBooleanProperty(value);\n        if (this.visibleSource.value !== visible) {\n            this.visibleSource.next(visible);\n            this.mcVisibleChange.emit(visible);\n        }\n    }\n    @Input()\n    set mcTrigger(value: string) {\n        this._trigger = value;\n    }\n    @Input()\n    set mcPlacement(value: string) {\n        if (value !== this._placement) {\n            this._placement = value;\n            this._positions.unshift(POSITION_MAP[ this.mcPlacement ]);\n        } else if (!value) {\n            this._placement = 'top';\n        }\n    }\n\n    /** Subject for notifying that the tooltip has been hidden from the view */\n    private readonly _onHide: Subject<any> = new Subject();\n    private _closeOnInteraction: boolean = false;\n\n    constructor(public cdr: ChangeDetectorRef) {\n        this.availablePositions = POSITION_MAP;\n    }\n\n    show(): void {\n        if (this.hideTId) {\n            clearTimeout(this.hideTId);\n        }\n\n        if (!this.isContentEmpty()) {\n            if (this.mcTrigger !== 'manual') {\n                this._closeOnInteraction = true;\n            }\n            this.showTId = setTimeout(() => {\n                this.mcVisible = true;\n                this.mcVisibleChange.emit(true);\n\n                // Mark for check so if any parent component has set the\n                // ChangeDetectionStrategy to OnPush it will be checked anyways\n                this._markForCheck();\n            }, this.mcMouseEnterDelay);\n        }\n    }\n\n    hide(): void {\n        if (this.showTId) {\n            clearTimeout(this.showTId);\n        }\n\n        this.hideTId = setTimeout(() => {\n            this.mcVisible = false;\n            this.mcVisibleChange.emit(false);\n            this._onHide.next();\n\n            // Mark for check so if any parent component has set the\n            // ChangeDetectionStrategy to OnPush it will be checked anyways\n            this._markForCheck();\n        }, this.mcMouseLeaveDelay);\n    }\n\n    setClassMap(): void {\n        this._classMap = `${this._prefix}-${this._placement}`;\n    }\n\n    isContentEmpty(): boolean {\n        return this.isTitleString ? (this.mcTitle === '' || !this.mcTitle) : false;\n    }\n\n    /** Returns an observable that notifies when the tooltip has been hidden from view. */\n    afterHidden(): Observable<void> {\n        return this._onHide.asObservable();\n    }\n\n    _markForCheck(): void {\n        this.cdr.markForCheck();\n    }\n\n    _handleBodyInteraction(): void {\n        if (this._closeOnInteraction) {\n            this.hide();\n        }\n    }\n}\n\nexport const MC_TOOLTIP_SCROLL_STRATEGY =\n    new InjectionToken<() => IScrollStrategy>('mc-tooltip-scroll-strategy');\n\n/** @docs-private */\nexport function MC_TOOLTIP_SCROLL_STRATEGY_FACTORY(overlay: Overlay): () => IScrollStrategy {\n    return () => overlay.scrollStrategies.reposition({scrollThrottle: 20});\n}\n\n/** @docs-private */\nexport const MC_TOOLTIP_SCROLL_STRATEGY_FACTORY_PROVIDER = {\n    provide: MC_TOOLTIP_SCROLL_STRATEGY,\n    deps: [Overlay],\n    useFactory: MC_TOOLTIP_SCROLL_STRATEGY_FACTORY\n};\n\n/** Creates an error to be thrown if the user supplied an invalid tooltip position. */\nexport function getMcTooltipInvalidPositionError(position: string) {\n    return Error(`McTooltip position \"${position}\" is invalid.`);\n}\n\nconst VIEWPORT_MARGIN: number = 8;\n\n@Directive({\n    selector: '[mcTooltip], mcTooltip',\n    exportAs: 'mcTooltip',\n    host: {\n        '(keydown)': 'handleKeydown($event)',\n        '(touchend)': 'handleTouchend()'\n    }\n})\n\nexport class McTooltip implements OnInit, OnDestroy {\n    isTooltipOpen: boolean = false;\n    isDynamicTooltip = false;\n    parentDisabled: boolean = false;\n    _title: string;\n    _disabled: boolean = false;\n    _mouseEnterDelay: number;\n    _mouseLeaveDelay: number;\n    _visible: boolean;\n    _trigger: string = 'hover';\n    _placement: string = 'top';\n    _overlayRef: OverlayRef | null;\n    _portal: ComponentPortal<McTooltipComponent>;\n    availablePositions: any;\n    tooltip: McTooltipComponent | null;\n    tooltipClass: string | string[] | Set<string> | {[key: string]: any};\n\n    @Output() mcVisibleChange = new EventEmitter<boolean>();\n    private $unsubscribe = new Subject<void>();\n\n    @Input('mcTooltip')\n    get mcTitle(): string {\n        return this._title;\n    }\n    set mcTitle(title: string) {\n        this._title = title;\n        this.updateCompValue('mcTitle', title);\n    }\n\n    @Input('mcTitle')\n    set setTitle(title: string) {\n        this.mcTitle = title;\n    }\n\n    @Input('mcTooltipDisabled')\n    get disabled(): boolean { return this._disabled; }\n    set disabled(value) {\n        this._disabled = coerceBooleanProperty(value);\n    }\n\n    @Input('mcMouseEnterDelay')\n    get mcMouseEnterDelay(): number {\n        return this._mouseEnterDelay;\n    }\n    set mcMouseEnterDelay(value: number) {\n        this._mouseEnterDelay = value;\n        this.updateCompValue('mcMouseEnterDelay', value);\n    }\n\n    @Input('mcMouseLeaveDelay')\n    get mcMouseLeaveDelay(): number {\n        return this._mouseEnterDelay;\n    }\n    set mcMouseLeaveDelay(value: number) {\n        this._mouseLeaveDelay = value;\n        this.updateCompValue('mcMouseLeaveDelay', value);\n    }\n\n    @Input('mcVisible')\n    get mcVisible(): boolean {\n        return this._visible;\n    }\n    set mcVisible(value: boolean) {\n        this._visible = value;\n        this.updateCompValue('mcVisible', value);\n    }\n\n    @Input('mcTrigger')\n    get mcTrigger(): string {\n        return this._trigger;\n    }\n    set mcTrigger(value: string) {\n        this._trigger = value;\n        this.updateCompValue('mcTrigger', value);\n    }\n\n    @Input('mcPlacement')\n    get mcPlacement(): string {\n        return this._placement;\n    }\n    set mcPlacement(value: string) {\n        if (value) {\n            this._placement = value;\n            this.updateCompValue('mcPlacement', value);\n        } else {\n            this._placement = 'top';\n        }\n    }\n\n    @Input('mсTooltipClass')\n    get mcTooltipClass() { return this.tooltipClass; }\n    set mcTooltipClass(value: string | string[] | Set<string> | {[key: string]: any}) {\n        this.tooltipClass = value;\n\n        if (this.tooltip) {\n            this.tooltip.setClassMap();\n        }\n    }\n\n    @HostBinding('class.mc-tooltip-open')\n    get isOpen(): boolean {\n        return this.isTooltipOpen;\n    }\n\n    @HostBinding('class.disabled')\n    get isParentDisabled(): boolean {\n        return this.parentDisabled;\n    }\n\n    private manualListeners = new Map<string, EventListenerOrEventListenerObject>();\n    private readonly _destroyed = new Subject<void>();\n\n    constructor(\n        private _overlay: Overlay,\n        private elementRef: ElementRef,\n        private _ngZone: NgZone,\n        private _scrollDispatcher: ScrollDispatcher,\n        private hostView: ViewContainerRef,\n        @Inject(MC_TOOLTIP_SCROLL_STRATEGY) private _scrollStrategy,\n        @Optional() private _dir: Directionality) {\n            this.availablePositions = POSITION_MAP;\n        }\n\n    /** Create the overlay config and position strategy */\n    _createOverlay(): OverlayRef {\n        if (this._overlayRef) {\n            return this._overlayRef;\n        }\n\n        // Create connected position strategy that listens for scroll events to reposition.\n        const strategy = this._overlay.position()\n            .flexibleConnectedTo(this.elementRef)\n            .withTransformOriginOn('.mc-tooltip')\n            .withFlexibleDimensions(false)\n            .withViewportMargin(VIEWPORT_MARGIN)\n            .withPositions([ ...DEFAULT_4_POSITIONS ]);\n\n        const scrollableAncestors = this._scrollDispatcher\n            .getAncestorScrollContainers(this.elementRef);\n\n        strategy.withScrollableContainers(scrollableAncestors);\n\n        strategy.positionChanges.pipe(takeUntil(this._destroyed)).subscribe((change) => {\n            if (this.tooltip) {\n                this.onPositionChange(change);\n                if (change.scrollableViewProperties.isOverlayClipped && this.tooltip.mcVisible) {\n                    // After position changes occur and the overlay is clipped by\n                    // a parent scrollable then close the tooltip.\n                    this._ngZone.run(() => this.hide());\n                }\n            }\n        });\n\n        this._overlayRef = this._overlay.create({\n            direction: this._dir,\n            positionStrategy: strategy,\n            panelClass: 'mc-tooltip-panel',\n            scrollStrategy: this._scrollStrategy()\n        });\n\n        this._updatePosition();\n\n        this._overlayRef.detachments()\n            .pipe(takeUntil(this._destroyed))\n            .subscribe(() => this._detach());\n\n        return this._overlayRef;\n    }\n\n    _detach() {\n        if (this._overlayRef && this._overlayRef.hasAttached()) {\n            this._overlayRef.detach();\n        }\n\n        this.tooltip = null;\n    }\n\n    onPositionChange($event: ConnectedOverlayPositionChange): void {\n        let updatedPlacement = this.mcPlacement;\n        Object.keys(this.availablePositions).some((key) => {\n            if ($event.connectionPair.originX === this.availablePositions[key].originX &&\n                $event.connectionPair.originY === this.availablePositions[key].originY &&\n                $event.connectionPair.overlayX === this.availablePositions[key].overlayX &&\n                $event.connectionPair.overlayY === this.availablePositions[key].overlayY) {\n                updatedPlacement = key;\n\n                return true;\n            }\n\n            return false;\n        });\n        this.updateCompValue('mcPlacement', updatedPlacement);\n\n        if (this.tooltip) {\n            this.tooltip.setClassMap();\n            this.tooltip._markForCheck();\n        }\n\n        this.handlePositioningUpdate();\n    }\n\n    handlePositioningUpdate() {\n        if (!this._overlayRef) {\n            this._overlayRef = this._createOverlay();\n        }\n        if (this.mcPlacement === 'right' || this.mcPlacement === 'left') {\n            const pos =\n                (this._overlayRef.overlayElement.clientHeight -\n                    this.hostView.element.nativeElement.clientHeight) / 2; // tslint:disable-line\n            const currentContainer = this._overlayRef.overlayElement.style.top || '0px';\n            this._overlayRef.overlayElement.style.top =\n                `${parseInt(currentContainer.split('px')[0], 10) + pos - 1}px`;\n            // TODO: обновлять положение стрелки\\указателя\\\"дятла\"\n        }\n    }\n\n    // tslint:disable-next-line:no-any\n    updateCompValue(key: string, value: any): void {\n        if (this.isDynamicTooltip && value) {\n            if (this.tooltip) {\n                this.tooltip[key] = value;\n            }\n        }\n    }\n\n    ngOnInit(): void {\n        this.initElementRefListeners();\n    }\n\n    ngOnDestroy(): void {\n        if (this._overlayRef) {\n            this._overlayRef.dispose();\n        }\n        this.manualListeners.forEach((listener, event) =>\n            this.elementRef.nativeElement.removeEventListener(event, listener));\n        this.manualListeners.clear();\n\n        this.$unsubscribe.next();\n        this.$unsubscribe.complete();\n    }\n\n    handleKeydown(e: KeyboardEvent) {\n        if (this.isTooltipOpen && e.keyCode === ESCAPE) { // tslint:disable-line\n            this.hide();\n        }\n    }\n\n    handleTouchend() {\n        this.hide();\n    }\n\n    initElementRefListeners() {\n        if (this.mcTrigger === 'hover') {\n\n            this.manualListeners\n                .set('mouseenter', () => this.show())\n                .set('mouseleave', () => this.hide())\n                .forEach((listener, event) => this.elementRef.nativeElement.addEventListener(event, listener));\n        }\n\n        if (this.mcTrigger === 'focus') {\n\n            this.manualListeners\n                .set('focus', () => this.show())\n                .set('blur', () => this.hide())\n                .forEach((listener, event) => this.elementRef.nativeElement.addEventListener(event, listener));\n        }\n    }\n\n    show(): void {\n        if (!this.disabled) {\n            if (!this.tooltip) {\n                const overlayRef = this._createOverlay();\n                this._detach();\n\n                this._portal = this._portal || new ComponentPortal(McTooltipComponent, this.hostView);\n\n                this.tooltip = overlayRef.attach(this._portal).instance;\n                this.tooltip.afterHidden()\n                    .pipe(takeUntil(this._destroyed))\n                    .subscribe(() => this._detach());\n                this.isDynamicTooltip = true;\n                const properties = [\n                    'mcTitle',\n                    'mcMouseEnterDelay',\n                    'mcMouseLeaveDelay',\n                    'mcVisible',\n                    'mcTrigger',\n                    'mcPlacement'\n                ];\n                properties.forEach((property) => this.updateCompValue(property, this[ property ]));\n                this.tooltip.mcVisibleChange.pipe(takeUntil(this.$unsubscribe), distinctUntilChanged())\n                    .subscribe((data) => {\n                        this._visible = data;\n                        this.mcVisibleChange.emit(data);\n                        this.isTooltipOpen = data;\n                    });\n            }\n            this._updatePosition();\n            this.tooltip.show();\n        }\n    }\n\n    hide(): void {\n        if (this.tooltip) {\n            this.tooltip.hide();\n        }\n    }\n\n    /** Updates the position of the current tooltip. */\n    _updatePosition() {\n        if (!this._overlayRef) {\n            this._overlayRef = this._createOverlay();\n        }\n        const position =\n            this._overlayRef.getConfig().positionStrategy as FlexibleConnectedPositionStrategy;\n        const origin = this._getOrigin();\n        const overlay = this._getOverlayPosition();\n\n        position.withPositions([\n            {...origin.main, ...overlay.main},\n            {...origin.fallback, ...overlay.fallback}\n        ]);\n    }\n\n    /**\n     * Returns the origin position and a fallback position based on the user's position preference.\n     * The fallback position is the inverse of the origin (e.g. `'below' -> 'above'`).\n     */\n    _getOrigin(): {main: IOriginConnectionPosition; fallback: IOriginConnectionPosition} {\n        const position = this.mcPlacement;\n        const isLtr = !this._dir || this._dir.value === 'ltr';\n        let originPosition: IOriginConnectionPosition;\n\n        if (position === 'top' || position === 'bottom') {\n            originPosition = {originX: 'center', originY: position === 'top' ? 'top' : 'bottom'};\n        } else if (\n            position === 'top' ||\n            (position === 'left' && isLtr) ||\n            (position === 'right' && !isLtr)) {\n            originPosition = {originX: 'start', originY: 'center'};\n        } else if (\n            position === 'bottom' ||\n            (position === 'right' && isLtr) ||\n            (position === 'left' && !isLtr)) {\n            originPosition = {originX: 'end', originY: 'center'};\n        } else {\n            throw getMcTooltipInvalidPositionError(position);\n        }\n\n        const {x, y} = this._invertPosition(originPosition.originX, originPosition.originY);\n\n        return {\n            main: originPosition,\n            fallback: {originX: x, originY: y}\n        };\n    }\n\n    /** Returns the overlay position and a fallback position based on the user's preference */\n    _getOverlayPosition(): {main: IOverlayConnectionPosition; fallback: IOverlayConnectionPosition} {\n        const position = this.mcPlacement;\n        const isLtr = !this._dir || this._dir.value === 'ltr';\n        let overlayPosition: IOverlayConnectionPosition;\n\n        if (position === 'top') {\n            overlayPosition = {overlayX: 'center', overlayY: 'bottom'};\n        } else if (position === 'bottom') {\n            overlayPosition = {overlayX: 'center', overlayY: 'top'};\n        } else if (\n            position === 'top' ||\n            (position === 'left' && isLtr) ||\n            (position === 'right' && !isLtr)) {\n            overlayPosition = {overlayX: 'end', overlayY: 'center'};\n        } else if (\n            position === 'bottom' ||\n            (position === 'right' && isLtr) ||\n            (position === 'left' && !isLtr)) {\n            overlayPosition = {overlayX: 'start', overlayY: 'center'};\n        } else {\n            throw getMcTooltipInvalidPositionError(position);\n        }\n\n        const {x, y} = this._invertPosition(overlayPosition.overlayX, overlayPosition.overlayY);\n\n        return {\n            main: overlayPosition,\n            fallback: {overlayX: x, overlayY: y}\n        };\n    }\n\n    /** Inverts an overlay position. */\n    private _invertPosition(x: HorizontalConnectionPos, y: VerticalConnectionPos) {\n        let newX: HorizontalConnectionPos = x;\n        let newY: VerticalConnectionPos = y;\n        if (this.mcPlacement === 'top' || this.mcPlacement === 'bottom') {\n            if (y === 'top') {\n                newY = 'bottom';\n            } else if (y === 'bottom') {\n                newY = 'top';\n            }\n        } else {\n            if (x === 'end') {\n                newX = 'start';\n            } else if (x === 'start') {\n                newX = 'end';\n            }\n        }\n\n        return {x: newX, y: newY};\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { OverlayModule } from '@ptsecurity/cdk/overlay';\n\nimport {\n    McTooltipComponent,\n    McTooltip,\n    MC_TOOLTIP_SCROLL_STRATEGY_FACTORY_PROVIDER\n} from './tooltip.component';\n\n\n@NgModule({\n    declarations: [McTooltipComponent, McTooltip],\n    exports: [McTooltipComponent, McTooltip],\n    imports: [BrowserAnimationsModule, CommonModule, OverlayModule],\n    providers: [MC_TOOLTIP_SCROLL_STRATEGY_FACTORY_PROVIDER],\n    entryComponents: [McTooltipComponent]\n})\nexport class McToolTipModule {\n}\n","import { Version } from '@angular/core';\n\n\nexport const VERSION = new Version('0.0.1-80b4ee1');\n","export enum TimeParts {\n    hours,\n    minutes,\n    seconds\n}\n\nexport enum TimeFormats {\n    HHmmss = 'HH:mm:ss',\n    HHmm = 'HH:mm'\n}\n\nexport const TIMEFORMAT_PLACEHOLDERS: { [timeFormat: string]: string } = {\n    [TimeFormats.HHmmss]: '  :  :  ',\n    [TimeFormats.HHmm]: '  :  '\n};\n\nexport const DEFAULT_TIME_FORMAT: TimeFormats = TimeFormats.HHmm;\n\nexport const HOURS_MINUTES_SECONDS_REGEXP =\n    new RegExp(/^([0-9]|0[0-9]|1[0-9]|2[0-3]):([0-5][0-9]|[0-9]):([0-5][0-9]|[0-9])?$/);\nexport const HOURS_MINUTES_REGEXP = /^([0-9]|0[0-9]|1[0-9]|2[0-3]):([0-5][0-9]|[0-9])?$/;\nexport const HOURS_ONLY_REGEXP = /^([0-9]|0[0-9]|1[0-9]|2[0-3]):?$/;\n\nexport const SECONDS_PER_MINUTE: number = 59;\nexport const MINUTES_PER_HOUR: number = 59;\nexport const HOURS_PER_DAY: number = 23;\n\n// TODO Move it to common CDK\nexport const ARROW_UP_KEYCODE: string = 'ArrowUp';\nexport const ARROW_DOWN_KEYCODE: string = 'ArrowDown';\nexport const ARROW_LEFT_KEYCODE: string = 'ArrowLeft';\nexport const ARROW_RIGHT_KEYCODE: string = 'ArrowRight';\n","/* tslint:disable:no-empty */\n\nimport { ActiveDescendantKeyManager } from '@ptsecurity/cdk/a11y';\nimport { Directionality } from '@ptsecurity/cdk/bidi';\nimport { coerceBooleanProperty } from '@ptsecurity/cdk/coercion';\nimport { SelectionModel } from '@ptsecurity/cdk/collections';\nimport {\n    DOWN_ARROW,\n    END,\n    ENTER,\n    HOME,\n    LEFT_ARROW,\n    RIGHT_ARROW,\n    SPACE,\n    UP_ARROW,\n    A\n} from '@ptsecurity/cdk/keycodes';\nimport {\n    CdkConnectedOverlay,\n    Overlay,\n    RepositionScrollStrategy,\n    IScrollStrategy,\n    ViewportRuler\n} from '@ptsecurity/cdk/overlay';\n\nimport {\n    AfterContentInit, AfterViewInit,\n    Attribute,\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    ContentChild,\n    ContentChildren,\n    Directive,\n    DoCheck,\n    ElementRef,\n    EventEmitter,\n    Inject,\n    InjectionToken,\n    Input,\n    isDevMode,\n    NgZone,\n    OnChanges,\n    OnDestroy,\n    OnInit,\n    Optional,\n    Output,\n    QueryList, Renderer2,\n    Self,\n    SimpleChanges,\n    ViewChild, ViewChildren,\n    ViewEncapsulation\n} from '@angular/core';\nimport { ControlValueAccessor, FormGroupDirective, NgControl, NgForm } from '@angular/forms';\nimport {\n    _countGroupLabelsBeforeOption,\n    _getOptionScrollPosition,\n    CanDisable,\n    CanDisableCtor,\n    CanUpdateErrorState,\n    CanUpdateErrorStateCtor,\n    ErrorStateMatcher,\n    HasTabIndex, HasTabIndexCtor,\n    MC_OPTION_PARENT_COMPONENT,\n    McOptgroup,\n    McOption,\n    McOptionSelectionChange,\n    mixinDisabled,\n    mixinErrorState,\n    mixinTabIndex\n} from '@ptsecurity/mosaic/core';\n\nimport { McFormField, McFormFieldControl } from '@ptsecurity/mosaic/form-field';\nimport { McTag } from '@ptsecurity/mosaic/tag';\n\n\nimport { defer, merge, Observable, Subject } from 'rxjs';\nimport {\n    filter,\n    map,\n    startWith,\n    switchMap,\n    take,\n    takeUntil,\n    distinctUntilChanged\n} from 'rxjs/operators';\n\nimport {\n    getMcSelectDynamicMultipleError,\n    getMcSelectNonArrayValueError,\n    getMcSelectNonFunctionValueError\n} from './select-errors';\n\nimport { mcSelectAnimations } from './select-animations';\n\n\nlet nextUniqueId = 0;\n\n/**\n * The following style constants are necessary to save here in order\n * to properly calculate the alignment of the selected option over\n * the trigger element.\n */\n\n/** The max height of the select's overlay panel */\nexport const SELECT_PANEL_MAX_HEIGHT = 224;\n\n/** The panel's padding on the x-axis */\nexport const SELECT_PANEL_PADDING_X = 1;\n\n/** The panel's x axis padding if it is indented (e.g. there is an option group). */\n/* tslint:disable-next-line:no-magic-numbers */\nexport const SELECT_PANEL_INDENT_PADDING_X = SELECT_PANEL_PADDING_X * 2;\n\n/** The height of the select items in `em` units. */\nexport const SELECT_ITEM_HEIGHT_EM = 2;\n\n/**\n * The select panel will only \"fit\" inside the viewport if it is positioned at\n * this value or more away from the viewport boundary.\n */\nexport const SELECT_PANEL_VIEWPORT_PADDING = 8;\n\n/** Injection token that determines the scroll handling while a select is open. */\nexport const MC_SELECT_SCROLL_STRATEGY =\n    new InjectionToken<() => IScrollStrategy>('mc-select-scroll-strategy');\n\n/** @docs-private */\nexport function MC_SELECT_SCROLL_STRATEGY_PROVIDER_FACTORY(overlay: Overlay):\n    () => RepositionScrollStrategy {\n    return () => overlay.scrollStrategies.reposition();\n}\n\n/** @docs-private */\nexport const MC_SELECT_SCROLL_STRATEGY_PROVIDER = {\n    provide: MC_SELECT_SCROLL_STRATEGY,\n    deps: [Overlay],\n    useFactory: MC_SELECT_SCROLL_STRATEGY_PROVIDER_FACTORY\n};\n\n/** Change event object that is emitted when the select value has changed. */\nexport class McSelectChange {\n    constructor(\n        /** Reference to the select that emitted the change event. */\n        public source: McSelect,\n        /** Current value of the select that emitted the event. */\n        public value: any) {\n    }\n}\n\n// Boilerplate for applying mixins to McSelect.\n/** @docs-private */\nexport class McSelectBase {\n    constructor(\n        public _elementRef: ElementRef,\n        public _defaultErrorStateMatcher: ErrorStateMatcher,\n        public _parentForm: NgForm,\n        public _parentFormGroup: FormGroupDirective,\n        public ngControl: NgControl\n    ) {}\n}\n\nexport const _McSelectMixinBase:\n    CanDisableCtor &\n    HasTabIndexCtor &\n    CanUpdateErrorStateCtor & typeof McSelectBase\n    = mixinTabIndex(mixinDisabled(mixinErrorState(McSelectBase)));\n\n\n/**\n * Allows the user to customize the trigger that is displayed when the select has a value.\n */\n@Directive({ selector: 'mc-select-trigger' })\nexport class McSelectTrigger {}\n\n\n@Component({\n    selector: 'mc-select',\n    exportAs: 'mcSelect',\n    templateUrl: 'select.html',\n    styleUrls: ['./select.css'],\n    inputs: ['disabled', 'tabIndex'],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    host: {\n        '[attr.id]': 'id',\n        '[attr.tabindex]': 'tabIndex',\n        class: 'mc-select',\n        '[class.mc-disabled]': 'disabled',\n        '[class.mc-select-invalid]': 'errorState',\n        '[class.mc-select-required]': 'required',\n        '(keydown)': '_handleKeydown($event)',\n        '(focus)': '_onFocus()',\n        '(blur)': '_onBlur()',\n        '(window:resize)': '_calculateHiddenItems()'\n    },\n    animations: [\n        mcSelectAnimations.transformPanel,\n        mcSelectAnimations.fadeInContent\n    ],\n    providers: [\n        { provide: McFormFieldControl, useExisting: McSelect },\n        { provide: MC_OPTION_PARENT_COMPONENT, useExisting: McSelect }\n    ]\n})\nexport class McSelect extends _McSelectMixinBase implements\n    AfterContentInit, AfterViewInit, OnChanges, OnDestroy, OnInit, DoCheck, ControlValueAccessor, CanDisable,\n    HasTabIndex, McFormFieldControl<any>, CanUpdateErrorState {\n\n    /** The last measured value for the trigger's client bounding rect. */\n    _triggerRect: ClientRect;\n\n    /** The cached font-size of the trigger element. */\n    _triggerFontSize = 0;\n\n    /** Deals with the selection logic. */\n    _selectionModel: SelectionModel<McOption>;\n\n    /** Manages keyboard events for options in the panel. */\n    _keyManager: ActiveDescendantKeyManager<McOption>;\n\n    /** The IDs of child options to be passed to the aria-owns attribute. */\n    _optionIds: string = '';\n\n    /** The value of the select panel's transform-origin property. */\n    _transformOrigin: string = 'top';\n\n    /** Whether the panel's animation is done. */\n    _panelDoneAnimating: boolean = false;\n\n    /** Emits when the panel element is finished transforming in. */\n    _panelDoneAnimatingStream = new Subject<string>();\n\n    /** Strategy that will be used to handle scrolling while the select panel is open. */\n    _scrollStrategy = this._scrollStrategyFactory();\n\n    /**\n     * The y-offset of the overlay panel in relation to the trigger's top start corner.\n     * This must be adjusted to align the selected option text over the trigger text.\n     * when the panel opens. Will change based on the y-position of the selected option.\n     */\n    _offsetY = 0;\n\n    /**\n     * This position config ensures that the top \"start\" corner of the overlay\n     * is aligned with with the top \"start\" of the origin by default (overlapping\n     * the trigger completely). If the panel cannot fit below the trigger, it\n     * will fall back to a position above the trigger.\n     */\n    _positions = [\n        {\n            originX: 'start',\n            originY: 'bottom',\n            overlayX: 'start',\n            overlayY: 'top'\n        },\n        {\n            originX: 'start',\n            originY: 'top',\n            overlayX: 'start',\n            overlayY: 'bottom'\n        }\n    ];\n\n    /** Whether the select is focused. */\n    get focused(): boolean {\n        return this._focused || this._panelOpen;\n    }\n\n    /**\n     * @deprecated Setter to be removed as this property is intended to be readonly.\n     * @breaking-change 8.0.0\n     */\n    set focused(value: boolean) {\n        this._focused = value;\n    }\n\n    /** A name for this control that can be used by `mc-form-field`. */\n    controlType = 'mc-select';\n\n    @ViewChild('trigger') trigger: ElementRef;\n    @ViewChildren(McTag) tags: QueryList<McTag>;\n\n    @ViewChild('panel') panel: ElementRef;\n\n    /** Overlay pane containing the options. */\n    @ViewChild(CdkConnectedOverlay) overlayDir: CdkConnectedOverlay;\n\n    /** All of the defined select options. */\n    @ContentChildren(McOption, { descendants: true }) options: QueryList<McOption>;\n\n    /** All of the defined groups of options. */\n    @ContentChildren(McOptgroup) optionGroups: QueryList<McOptgroup>;\n\n    /** Classes to be passed to the select panel. Supports the same syntax as `ngClass`. */\n    @Input() panelClass: string | string[] | Set<string> | { [key: string]: any };\n\n    /** User-supplied override of the trigger element. */\n    @ContentChild(McSelectTrigger) customTrigger: McSelectTrigger;\n\n    /** Placeholder to be shown if no value has been selected. */\n    @Input()\n    get placeholder(): string {\n        return this._placeholder;\n    }\n\n    set placeholder(value: string) {\n        this._placeholder = value;\n        this.stateChanges.next();\n    }\n\n    /** Whether the component is required. */\n    @Input()\n    get required(): boolean {\n        return this._required;\n    }\n\n    set required(value: boolean) {\n        this._required = coerceBooleanProperty(value);\n        this.stateChanges.next();\n    }\n\n    /** Whether the user should be allowed to select multiple options. */\n    @Input()\n    get multiple(): boolean {\n        return this._multiple;\n    }\n\n    set multiple(value: boolean) {\n        if (this._selectionModel) {\n            throw getMcSelectDynamicMultipleError();\n        }\n\n        this._multiple = coerceBooleanProperty(value);\n    }\n\n    /**\n     * Function to compare the option values with the selected values. The first argument\n     * is a value from an option. The second is a value from the selection. A boolean\n     * should be returned.\n     */\n    @Input()\n    get compareWith() {\n        return this._compareWith;\n    }\n\n    set compareWith(fn: (o1: any, o2: any) => boolean) {\n        /* tslint:disable-next-line:strict-type-predicates */\n        if (typeof fn !== 'function') {\n            throw getMcSelectNonFunctionValueError();\n        }\n\n        this._compareWith = fn;\n\n        if (this._selectionModel) {\n            // A different comparator means the selection could change.\n            this._initializeSelection();\n        }\n    }\n\n    /** Value of the select control. */\n    @Input()\n    get value(): any {\n        return this._value;\n    }\n\n    set value(newValue: any) {\n        if (newValue !== this._value) {\n            this.writeValue(newValue);\n            this._value = newValue;\n        }\n    }\n\n    /** Object used to control when error messages are shown. */\n    @Input() errorStateMatcher: ErrorStateMatcher;\n\n    /**\n     * Function used to sort the values in a select in multiple mode.\n     * Follows the same logic as `Array.prototype.sort`.\n     */\n    @Input() sortComparator: (a: McOption, b: McOption, options: McOption[]) => number;\n\n    @Input()\n    get id(): string {\n        return this._id;\n    }\n\n    set id(value: string) {\n        this._id = value || this._uid;\n        this.stateChanges.next();\n    }\n\n    /** Combined stream of all of the child options' change events. */\n    readonly optionSelectionChanges: Observable<McOptionSelectionChange> = defer(() => {\n        if (this.options) {\n            return merge(...this.options.map((option) => option.onSelectionChange));\n        }\n\n        return this._ngZone.onStable\n            .asObservable()\n            .pipe(take(1), switchMap(() => this.optionSelectionChanges));\n    });\n\n    /** Event emitted when the select panel has been toggled. */\n    @Output() readonly openedChange: EventEmitter<boolean> = new EventEmitter<boolean>();\n\n    /** Event emitted when the select has been opened. */\n    @Output('opened') readonly _openedStream: Observable<void> =\n        this.openedChange.pipe(filter((o) => o), map(() => {}));\n\n    /** Event emitted when the select has been closed. */\n    @Output('closed') readonly _closedStream: Observable<void> =\n        this.openedChange.pipe(filter((o) => !o), map(() => {}));\n\n    /** Event emitted when the selected value has been changed by the user. */\n    @Output() readonly selectionChange: EventEmitter<McSelectChange> = new EventEmitter<McSelectChange>();\n\n    /**\n     * Event that emits whenever the raw value of the select changes. This is here primarily\n     * to facilitate the two-way binding for the `value` input.\n     * @docs-private\n     */\n    @Output() readonly valueChange: EventEmitter<any> = new EventEmitter<any>();\n\n    hiddenItems: number = 0;\n    oneMoreText: string = '...ещё';\n\n    /** Whether or not the overlay panel is open. */\n    private _panelOpen = false;\n\n    /** Whether filling out the select is required in the form. */\n    private _required: boolean = false;\n\n    /** The scroll position of the overlay panel, calculated to center the selected option. */\n    private _scrollTop = 0;\n\n    /** The placeholder displayed in the trigger of the select. */\n    private _placeholder: string;\n\n    /** Whether the component is in multiple selection mode. */\n    private _multiple: boolean = false;\n\n    /** Unique id for this input. */\n    private readonly _uid = `mc-select-${nextUniqueId++}`;\n\n    /** Emits whenever the component is destroyed. */\n    private readonly _destroy = new Subject<void>();\n\n    private _focused = false;\n\n    private _value: any;\n\n    private _id: string;\n\n    constructor(\n        private readonly _viewportRuler: ViewportRuler,\n        private readonly _changeDetectorRef: ChangeDetectorRef,\n        private readonly _ngZone: NgZone,\n        private readonly _renderer: Renderer2,\n        _defaultErrorStateMatcher: ErrorStateMatcher,\n        elementRef: ElementRef,\n        @Optional() private readonly _dir: Directionality,\n        @Optional() _parentForm: NgForm,\n        @Optional() _parentFormGroup: FormGroupDirective,\n        @Optional() private readonly _parentFormField: McFormField,\n        @Self() @Optional() public ngControl: NgControl,\n        @Attribute('tabindex') tabIndex: string,\n        @Inject(MC_SELECT_SCROLL_STRATEGY) private readonly _scrollStrategyFactory\n    ) {\n        super(elementRef, _defaultErrorStateMatcher, _parentForm, _parentFormGroup, ngControl);\n\n        if (this.ngControl) {\n            // Note: we provide the value accessor through here, instead of\n            // the `providers` to avoid running into a circular import.\n            this.ngControl.valueAccessor = this;\n        }\n\n        this.tabIndex = parseInt(tabIndex) || 0;\n\n        // Force setter to be called in case id was not specified.\n        this.id = this.id;\n    }\n\n    ngOnInit() {\n        this._selectionModel = new SelectionModel<McOption>(this.multiple);\n        this.stateChanges.next();\n\n        // We need `distinctUntilChanged` here, because some browsers will\n        // fire the animation end event twice for the same animation. See:\n        // https://github.com/angular/angular/issues/24084\n        this._panelDoneAnimatingStream\n            .pipe(distinctUntilChanged(), takeUntil(this._destroy))\n            .subscribe(() => {\n                if (this.panelOpen) {\n                    this._scrollTop = 0;\n                    this.openedChange.emit(true);\n                } else {\n                    this.openedChange.emit(false);\n                    this._panelDoneAnimating = false;\n                    this.overlayDir.offsetX = 0;\n                    this._changeDetectorRef.markForCheck();\n                }\n            });\n    }\n\n    ngAfterContentInit() {\n        this._initKeyManager();\n\n        this._selectionModel.onChange!\n            .pipe(takeUntil(this._destroy))\n            .subscribe((event) => {\n                event.added.forEach((option) => option.select());\n                event.removed.forEach((option) => option.deselect());\n            });\n\n        this.options.changes\n            .pipe(startWith(null), takeUntil(this._destroy))\n            .subscribe(() => {\n                this._resetOptions();\n                this._initializeSelection();\n            });\n    }\n\n    ngAfterViewInit(): void {\n        this.tags.changes\n            .subscribe(() => {\n                setTimeout(() => this._calculateHiddenItems(), 0);\n            });\n    }\n\n    ngDoCheck() {\n        if (this.ngControl) { this.updateErrorState(); }\n    }\n\n    ngOnChanges(changes: SimpleChanges) {\n        // Updating the disabled state is handled by `mixinDisabled`, but we need to additionally let\n        // the parent form field know to run change detection when the disabled state changes.\n        if (changes.disabled) {\n            this.stateChanges.next();\n        }\n    }\n\n    ngOnDestroy() {\n        this._destroy.next();\n        this._destroy.complete();\n        this.stateChanges.complete();\n    }\n\n    /** `View -> model callback called when value changes` */\n    _onChange: (value: any) => void = () => {};\n\n    /** `View -> model callback called when select has been touched` */\n    _onTouched = () => {};\n\n    /** Toggles the overlay panel open or closed. */\n    toggle(): void {\n        if (this.panelOpen) {\n            this.close();\n        } else {\n            this.open();\n        }\n    }\n\n    /** Opens the overlay panel. */\n    open(): void {\n        if (this.disabled || !this.options || !this.options.length || this._panelOpen) { return; }\n\n        this._triggerRect = this.trigger.nativeElement.getBoundingClientRect();\n        // Note: The computed font-size will be a string pixel value (e.g. \"16px\").\n        // `parseInt` ignores the trailing 'px' and converts this to a number.\n        this._triggerFontSize = parseInt(getComputedStyle(this.trigger.nativeElement)['font-size']);\n\n        this._panelOpen = true;\n        this._keyManager.withHorizontalOrientation(null);\n        this._calculateOverlayPosition();\n        this._highlightCorrectOption();\n        this._changeDetectorRef.markForCheck();\n\n        // Set the font size on the panel element once it exists.\n        this._ngZone.onStable.asObservable()\n            .pipe(take(1))\n            .subscribe(() => {\n                if (this._triggerFontSize && this.overlayDir.overlayRef &&\n                    this.overlayDir.overlayRef.overlayElement) {\n                    this.overlayDir.overlayRef.overlayElement.style.fontSize = `${this._triggerFontSize}px`;\n                }\n            });\n    }\n\n    /** Closes the overlay panel and focuses the host element. */\n    close(): void {\n        if (this._panelOpen) {\n            this._panelOpen = false;\n            this._keyManager.withHorizontalOrientation(this._isRtl() ? 'rtl' : 'ltr');\n            this._changeDetectorRef.markForCheck();\n            this._onTouched();\n        }\n    }\n\n    /**\n     * Sets the select's value. Part of the ControlValueAccessor interface\n     * required to integrate with Angular's core forms API.\n     *\n     * @param value New value to be written to the model.\n     */\n    writeValue(value: any): void {\n        if (this.options) {\n            this._setSelectionByValue(value);\n        }\n    }\n\n    /**\n     * Saves a callback function to be invoked when the select's value\n     * changes from user input. Part of the ControlValueAccessor interface\n     * required to integrate with Angular's core forms API.\n     *\n     * @param fn Callback to be triggered when the value changes.\n     */\n    registerOnChange(fn: (value: any) => void): void {\n        this._onChange = fn;\n    }\n\n    /**\n     * Saves a callback function to be invoked when the select is blurred\n     * by the user. Part of the ControlValueAccessor interface required\n     * to integrate with Angular's core forms API.\n     *\n     * @param fn Callback to be triggered when the component has been touched.\n     */\n    registerOnTouched(fn: () => {}): void {\n        this._onTouched = fn;\n    }\n\n    /**\n     * Disables the select. Part of the ControlValueAccessor interface required\n     * to integrate with Angular's core forms API.\n     *\n     * @param isDisabled Sets whether the component is disabled.\n     */\n    setDisabledState(isDisabled: boolean): void {\n        this.disabled = isDisabled;\n        this._changeDetectorRef.markForCheck();\n        this.stateChanges.next();\n    }\n\n    get panelOpen(): boolean {\n        return this._panelOpen;\n    }\n\n    get selected(): McOption | McOption[] {\n        return this.multiple ? this._selectionModel.selected : this._selectionModel.selected[0];\n    }\n\n    get triggerValue(): string {\n        if (this.empty) { return ''; }\n\n        if (this._multiple) {\n            const selectedOptions = this._selectionModel.selected.map((option) => option.viewValue);\n\n            if (this._isRtl()) { selectedOptions.reverse(); }\n\n            return selectedOptions.join(', ');\n        }\n\n        return this._selectionModel.selected[0].viewValue;\n    }\n\n    get triggerValues(): McOption[] {\n        if (this.empty) { return []; }\n\n        if (this._multiple) {\n            const selectedOptions = this._selectionModel.selected;\n\n            if (this._isRtl()) { selectedOptions.reverse(); }\n\n            return selectedOptions;\n        }\n\n        return [this._selectionModel.selected[0]];\n    }\n\n    get empty(): boolean {\n        return !this._selectionModel || this._selectionModel.isEmpty();\n    }\n\n    _isRtl(): boolean {\n        return this._dir ? this._dir.value === 'rtl' : false;\n    }\n\n    _handleKeydown(event: KeyboardEvent): void {\n        if (!this.disabled) {\n            if (this.panelOpen) {\n                this._handleOpenKeydown(event);\n            } else {\n                this._handleClosedKeydown(event);\n            }\n        }\n    }\n\n    /**\n     * When the panel content is done fading in, the _panelDoneAnimating property is\n     * set so the proper class can be added to the panel.\n     */\n    _onFadeInDone(): void {\n        this._panelDoneAnimating = this.panelOpen;\n        this._changeDetectorRef.markForCheck();\n    }\n\n    _onFocus() {\n        if (!this.disabled) {\n            this._focused = true;\n            this.stateChanges.next();\n        }\n    }\n\n    /**\n     * Calls the touched callback only if the panel is closed. Otherwise, the trigger will\n     * \"blur\" to the panel when it opens, causing a false positive.\n     */\n    _onBlur() {\n        this._focused = false;\n\n        if (!this.disabled && !this.panelOpen) {\n            this._onTouched();\n            this._changeDetectorRef.markForCheck();\n            this.stateChanges.next();\n        }\n    }\n\n    /**\n     * Callback that is invoked when the overlay panel has been attached.\n     */\n    _onAttached(): void {\n        this.overlayDir.positionChange\n            .pipe(take(1))\n            .subscribe(() => {\n                this._changeDetectorRef.detectChanges();\n                this._calculateOverlayOffsetX();\n                this.panel.nativeElement.scrollTop = this._scrollTop;\n            });\n    }\n\n    /** Returns the theme to be used on the panel. */\n    _getPanelTheme(): string {\n        return this._parentFormField ? `mc-${this._parentFormField.color}` : '';\n    }\n\n    /** Focuses the select element. */\n    focus(): void {\n        this._elementRef.nativeElement.focus();\n    }\n\n    /**\n     * Calculates the scroll position of the select's overlay panel.\n     *\n     * Attempts to center the selected option in the panel. If the option is\n     * too high or too low in the panel to be scrolled to the center, it clamps the\n     * scroll position to the min or max scroll positions respectively.\n     */\n    _calculateOverlayScroll(selectedIndex: number, scrollBuffer: number, maxScroll: number): number {\n        const itemHeight = this._getItemHeight();\n        const optionOffsetFromScrollTop = itemHeight * selectedIndex;\n\n        /* tslint:disable-next-line:no-magic-numbers */\n        const halfOptionHeight = itemHeight / 2;\n\n        // Starts at the optionOffsetFromScrollTop, which scrolls the option to the top of the\n        // scroll container, then subtracts the scroll buffer to scroll the option down to\n        // the center of the overlay panel. Half the option height must be re-added to the\n        // scrollTop so the option is centered based on its middle, not its top edge.\n        const optimalScrollPosition = optionOffsetFromScrollTop - scrollBuffer + halfOptionHeight;\n\n        return Math.min(Math.max(0, optimalScrollPosition), maxScroll);\n    }\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    onContainerClick() {\n        this.focus();\n        this.open();\n    }\n\n    /** Invoked when an option is clicked. */\n    onRemoveMatcherItem(option: McOption, $event): void {\n        $event.stopPropagation();\n\n        option.deselect();\n    }\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    get shouldLabelFloat(): boolean {\n        return this._panelOpen || !this.empty;\n    }\n\n    _calculateHiddenItems(): void {\n        if (this.empty) { return; }\n\n        let visibleItems: number = 0;\n        const totalItemsWidth = this._getTotalItemsWidthInMatcher();\n        let totalVisibleItemsWidth: number = 0;\n        const itemMargin: number = 4;\n\n        this.tags.forEach((tag) => {\n            if (tag.nativeElement.offsetTop < tag.nativeElement.offsetHeight) {\n                totalVisibleItemsWidth += tag.nativeElement.getBoundingClientRect().width + itemMargin;\n                visibleItems++;\n            }\n        });\n\n        this.hiddenItems = (this.selected as ArrayLike<McOption>).length - visibleItems;\n\n        if (this.hiddenItems) {\n            const itemsCounter = this.trigger.nativeElement.querySelector('.mc-select__match-hidden-text');\n            const matcherList = this.trigger.nativeElement.querySelector('.mc-select__match-list');\n\n            const itemsCounterShowed = itemsCounter.offsetTop < itemsCounter.offsetHeight;\n            // const itemsCounterWidth: number = itemsCounter.getBoundingClientRect().width;\n            const itemsCounterWidth: number = 86;\n\n            const matcherListWidth: number = matcherList.getBoundingClientRect().width;\n            const matcherWidth: number = matcherListWidth + itemsCounterWidth;\n\n            if (itemsCounterShowed && (totalItemsWidth < matcherWidth)) { this.hiddenItems = 0; }\n\n            if (\n                totalVisibleItemsWidth === matcherListWidth ||\n                (totalVisibleItemsWidth + itemsCounterWidth) < matcherListWidth\n            ) {\n                this._changeDetectorRef.markForCheck();\n\n                return ;\n            } else if (!itemsCounterShowed && (totalItemsWidth + itemsCounterWidth) > matcherWidth) {\n                this.hiddenItems++;\n            }\n        }\n\n        this._changeDetectorRef.markForCheck();\n    }\n\n    private _getTotalItemsWidthInMatcher(): number {\n        const triggerClone = this.trigger.nativeElement.cloneNode(true);\n        triggerClone.querySelector('.mc-select__match-hidden-text').remove();\n\n        this._renderer.setStyle(triggerClone, 'position', 'absolute');\n        this._renderer.setStyle(triggerClone, 'visibility', 'hidden');\n        this._renderer.setStyle(triggerClone, 'top', '-100%');\n        this._renderer.setStyle(triggerClone, 'left', '0');\n\n        this._renderer.appendChild(this.trigger.nativeElement, triggerClone);\n\n        let totalItemsWidth: number = 0;\n        const itemMargin: number = 4;\n        triggerClone.querySelectorAll('mc-tag').forEach((item) => {\n            totalItemsWidth += item.getBoundingClientRect().width as number + itemMargin;\n        });\n\n        triggerClone.remove();\n\n        return totalItemsWidth;\n    }\n\n    /** Handles keyboard events while the select is closed. */\n    private _handleClosedKeydown(event: KeyboardEvent): void {\n        /* tslint:disable-next-line */\n        const keyCode = event.keyCode;\n        const isArrowKey = keyCode === DOWN_ARROW || keyCode === UP_ARROW ||\n            keyCode === LEFT_ARROW || keyCode === RIGHT_ARROW;\n        const isOpenKey = keyCode === ENTER || keyCode === SPACE;\n\n        // Open the select on ALT + arrow key to match the native <select>\n        if (isOpenKey || ((this.multiple || event.altKey) && isArrowKey)) {\n            event.preventDefault(); // prevents the page from scrolling down when pressing space\n            this.open();\n        } else if (!this.multiple) {\n            this._keyManager.onKeydown(event);\n        }\n    }\n\n    /** Handles keyboard events when the selected is open. */\n    private _handleOpenKeydown(event: KeyboardEvent): void {\n        /* tslint:disable-next-line */\n        const keyCode = event.keyCode;\n        const isArrowKey = keyCode === DOWN_ARROW || keyCode === UP_ARROW;\n        const manager = this._keyManager;\n\n        if (keyCode === HOME || keyCode === END) {\n            event.preventDefault();\n\n            if (keyCode === HOME) {\n                manager.setFirstItemActive();\n            } else {\n                manager.setLastItemActive();\n            }\n\n        } else if (isArrowKey && event.altKey) {\n            // Close the select on ALT + arrow key to match the native <select>\n            event.preventDefault();\n            this.close();\n        } else if ((keyCode === ENTER || keyCode === SPACE) && manager.activeItem) {\n            event.preventDefault();\n            manager.activeItem._selectViaInteraction();\n        } else if (this._multiple && keyCode === A && event.ctrlKey) {\n            event.preventDefault();\n            const hasDeselectedOptions = this.options.some((option) => !option.selected);\n            this.options.forEach((option) => {\n                if (hasDeselectedOptions && !option.disabled) {\n                    option.select();\n                } else {\n                    option.deselect();\n                }\n            });\n        } else {\n            const previouslyFocusedIndex = manager.activeItemIndex;\n\n            manager.onKeydown(event);\n\n            if (this._multiple && isArrowKey && event.shiftKey && manager.activeItem &&\n                manager.activeItemIndex !== previouslyFocusedIndex) {\n                manager.activeItem._selectViaInteraction();\n            }\n        }\n    }\n\n    private _initializeSelection(): void {\n        // Defer setting the value in order to avoid the \"Expression\n        // has changed after it was checked\" errors from Angular.\n        Promise.resolve().then(() => {\n            this._setSelectionByValue(this.ngControl ? this.ngControl.value : this._value);\n        });\n    }\n\n    /**\n     * Sets the selected option based on a value. If no option can be\n     * found with the designated value, the select trigger is cleared.\n     */\n    private _setSelectionByValue(value: any | any[]): void {\n        if (this.multiple && value) {\n            if (!Array.isArray(value)) {\n                throw getMcSelectNonArrayValueError();\n            }\n\n            this._selectionModel.clear();\n            value.forEach((currentValue: any) => this._selectValue(currentValue));\n            this._sortValues();\n        } else {\n            this._selectionModel.clear();\n            const correspondingOption = this._selectValue(value);\n\n            // Shift focus to the active item. Note that we shouldn't do this in multiple\n            // mode, because we don't know what option the user interacted with last.\n            if (correspondingOption) {\n                this._keyManager.setActiveItem(correspondingOption);\n            }\n        }\n\n        this._changeDetectorRef.markForCheck();\n    }\n\n    /**\n     * Finds and selects and option based on its value.\n     * @returns Option that has the corresponding value.\n     */\n    private _selectValue(value: any): McOption | undefined {\n        const correspondingOption = this.options.find((option: McOption) => {\n            try {\n                // Treat null as a special reset value.\n                return option.value != null && this._compareWith(option.value, value);\n            } catch (error) {\n                if (isDevMode()) {\n                    // Notify developers of errors in their comparator.\n                    console.warn(error);\n                }\n\n                return false;\n            }\n        });\n\n        if (correspondingOption) {\n            this._selectionModel.select(correspondingOption);\n        }\n\n        return correspondingOption;\n    }\n\n    /** Sets up a key manager to listen to keyboard events on the overlay panel. */\n    private _initKeyManager() {\n        this._keyManager = new ActiveDescendantKeyManager<McOption>(this.options)\n            .withTypeAhead()\n            .withVerticalOrientation()\n            .withHorizontalOrientation(this._isRtl() ? 'rtl' : 'ltr');\n\n        this._keyManager.tabOut\n            .pipe(takeUntil(this._destroy))\n            .subscribe(() => {\n                // Restore focus to the trigger before closing. Ensures that the focus\n                // position won't be lost if the user got focus into the overlay.\n                this.focus();\n                this.close();\n            });\n\n        this._keyManager.change\n            .pipe(takeUntil(this._destroy))\n            .subscribe(() => {\n                if (this._panelOpen && this.panel) {\n                    this._scrollActiveOptionIntoView();\n                } else if (!this._panelOpen && !this.multiple && this._keyManager.activeItem) {\n                    this._keyManager.activeItem._selectViaInteraction();\n                }\n            });\n    }\n\n    /** Drops current option subscriptions and IDs and resets from scratch. */\n    private _resetOptions(): void {\n        const changedOrDestroyed = merge(this.options.changes, this._destroy);\n\n        this.optionSelectionChanges\n            .pipe(takeUntil(changedOrDestroyed))\n            .subscribe((event) => {\n                this._onSelect(event.source, event.isUserInput);\n\n                if (event.isUserInput && !this.multiple && this._panelOpen) {\n                    this.close();\n                    this.focus();\n                }\n            });\n\n        // Listen to changes in the internal state of the options and react accordingly.\n        // Handles cases like the labels of the selected options changing.\n        merge(...this.options.map((option) => option._stateChanges))\n            .pipe(takeUntil(changedOrDestroyed))\n            .subscribe(() => {\n                this._changeDetectorRef.markForCheck();\n                this.stateChanges.next();\n            });\n\n        this._setOptionIds();\n    }\n\n    /** Invoked when an option is clicked. */\n    private _onSelect(option: McOption, isUserInput: boolean): void {\n        const wasSelected = this._selectionModel.isSelected(option);\n\n        if (option.value == null && !this._multiple) {\n            option.deselect();\n            this._selectionModel.clear();\n            this._propagateChanges(option.value);\n        } else {\n            if (option.selected) {\n                this._selectionModel.select(option);\n            } else {\n                this._selectionModel.deselect(option);\n            }\n\n            if (isUserInput) {\n                this._keyManager.setActiveItem(option);\n            }\n\n            if (this.multiple) {\n                this._sortValues();\n\n                if (isUserInput) {\n                    // In case the user selected the option with their mouse, we\n                    // want to restore focus back to the trigger, in order to\n                    // prevent the select keyboard controls from clashing with\n                    // the ones from `mc-option`.\n                    this.focus();\n                }\n            }\n        }\n\n        if (wasSelected !== this._selectionModel.isSelected(option)) {\n            this._propagateChanges();\n        }\n\n        this.stateChanges.next();\n    }\n\n    /** Sorts the selected values in the selected based on their order in the panel. */\n    private _sortValues() {\n        if (this.multiple) {\n            const options = this.options.toArray();\n\n            this._selectionModel.sort((a, b) => {\n                return this.sortComparator ? this.sortComparator(a, b, options) :\n                    options.indexOf(a) - options.indexOf(b);\n            });\n            this.stateChanges.next();\n        }\n    }\n\n    /** Emits change event to set the model value. */\n    private _propagateChanges(fallbackValue?: any): void {\n        let valueToEmit: any = null;\n\n        if (this.multiple) {\n            valueToEmit = (this.selected as McOption[]).map((option) => option.value);\n        } else {\n            valueToEmit = this.selected ? (this.selected as McOption).value : fallbackValue;\n        }\n\n        this._value = valueToEmit;\n        this.valueChange.emit(valueToEmit);\n        this._onChange(valueToEmit);\n        this.selectionChange.emit(new McSelectChange(this, valueToEmit));\n        this._changeDetectorRef.markForCheck();\n    }\n\n    /** Records option IDs to pass to the aria-owns property. */\n    private _setOptionIds() {\n        this._optionIds = this.options.map((option) => option.id).join(' ');\n    }\n\n    /**\n     * Highlights the selected item. If no option is selected, it will highlight\n     * the first item instead.\n     */\n    private _highlightCorrectOption(): void {\n        if (this._keyManager) {\n            if (this.empty) {\n                this._keyManager.setFirstItemActive();\n            } else {\n                this._keyManager.setActiveItem(this._selectionModel.selected[0]);\n            }\n        }\n    }\n\n    /** Scrolls the active option into view. */\n    private _scrollActiveOptionIntoView(): void {\n        const activeOptionIndex = this._keyManager.activeItemIndex || 0;\n        const labelCount = _countGroupLabelsBeforeOption(activeOptionIndex, this.options, this.optionGroups);\n\n        this.panel.nativeElement.scrollTop = _getOptionScrollPosition(\n            activeOptionIndex + labelCount,\n            this._getItemHeight(),\n            this.panel.nativeElement.scrollTop,\n            SELECT_PANEL_MAX_HEIGHT\n        );\n    }\n\n    /** Gets the index of the provided option in the option list. */\n    private _getOptionIndex(option: McOption): number | undefined {\n        /* tslint:disable-next-line */\n        return this.options.reduce((result: number, current: McOption, index: number) => {\n            /* tslint:disable-next-line:strict-type-predicates */\n            return result === undefined ? (option === current ? index : undefined) : result;\n        }, undefined);\n    }\n\n    /** Calculates the scroll position and x- and y-offsets of the overlay panel. */\n    private _calculateOverlayPosition(): void {\n        const itemHeight = this._getItemHeight();\n        const items = this._getItemCount();\n        const panelHeight = Math.min(items * itemHeight, SELECT_PANEL_MAX_HEIGHT);\n        const scrollContainerHeight = items * itemHeight;\n\n        // The farthest the panel can be scrolled before it hits the bottom\n        const maxScroll = scrollContainerHeight - panelHeight;\n\n        // If no value is selected we open the popup to the first item.\n        let selectedOptionOffset =\n            this.empty ? 0 : this._getOptionIndex(this._selectionModel.selected[0])!;\n\n        selectedOptionOffset += _countGroupLabelsBeforeOption(selectedOptionOffset, this.options,\n            this.optionGroups);\n\n        // We must maintain a scroll buffer so the selected option will be scrolled to the\n        // center of the overlay panel rather than the top.\n        /* tslint:disable-next-line:no-magic-numbers */\n        const scrollBuffer = panelHeight / 2;\n        this._scrollTop = this._calculateOverlayScroll(selectedOptionOffset, scrollBuffer, maxScroll);\n        this._offsetY = this._calculateOverlayOffsetY();\n\n        this._checkOverlayWithinViewport(maxScroll);\n    }\n\n    /**\n     * Sets the x-offset of the overlay panel in relation to the trigger's top start corner.\n     * This must be adjusted to align the selected option text over the trigger text when\n     * the panel opens. Will change based on LTR or RTL text direction. Note that the offset\n     * can't be calculated until the panel has been attached, because we need to know the\n     * content width in order to constrain the panel within the viewport.\n     */\n    private _calculateOverlayOffsetX(): void {\n        const overlayRect = this.overlayDir.overlayRef.overlayElement.getBoundingClientRect();\n        const viewportSize = this._viewportRuler.getViewportSize();\n        const isRtl = this._isRtl();\n        /* tslint:disable-next-line:no-magic-numbers */\n        const paddingWidth = SELECT_PANEL_PADDING_X * 2;\n        let offsetX: number;\n\n        const selected = this._selectionModel.selected[0] || this.options.first;\n        offsetX = selected && selected.group ? SELECT_PANEL_INDENT_PADDING_X : SELECT_PANEL_PADDING_X;\n\n        // Invert the offset in LTR.\n        if (!isRtl) { offsetX *= -1; }\n\n        // Determine how much the select overflows on each side.\n        const leftOverflow = 0 - (overlayRect.left + offsetX - (isRtl ? paddingWidth : 0));\n        const rightOverflow = overlayRect.right + offsetX - viewportSize.width\n            + (isRtl ? 0 : paddingWidth);\n\n        // If the element overflows on either side, reduce the offset to allow it to fit.\n        if (leftOverflow > 0) {\n            offsetX += leftOverflow + SELECT_PANEL_VIEWPORT_PADDING;\n        } else if (rightOverflow > 0) {\n            offsetX -= rightOverflow + SELECT_PANEL_VIEWPORT_PADDING;\n        }\n\n        // Set the offset directly in order to avoid having to go through change detection and\n        // potentially triggering \"changed after it was checked\" errors. Round the value to avoid\n        // blurry content in some browsers.\n        this.overlayDir.offsetX = Math.round(offsetX);\n        this.overlayDir.overlayRef.updatePosition();\n    }\n\n    /**\n     * Calculates the y-offset of the select's overlay panel in relation to the\n     * top start corner of the trigger. It has to be adjusted in order for the\n     * selected option to be aligned over the trigger when the panel opens.\n     */\n    private _calculateOverlayOffsetY(): number {\n        // const itemHeight = this._getItemHeight();\n        // const optionHeightAdjustment = (itemHeight - this._triggerRect.height) / 2;\n\n        // todo I'm not sure that we will use it\n        return 0;\n        // return Math.round(-optionHeightAdjustment);\n    }\n\n    /**\n     * Checks that the attempted overlay position will fit within the viewport.\n     * If it will not fit, tries to adjust the scroll position and the associated\n     * y-offset so the panel can open fully on-screen. If it still won't fit,\n     * sets the offset back to 0 to allow the fallback position to take over.\n     */\n    private _checkOverlayWithinViewport(maxScroll: number): void {\n        const itemHeight = this._getItemHeight();\n        const viewportSize = this._viewportRuler.getViewportSize();\n\n        const topSpaceAvailable = this._triggerRect.top - SELECT_PANEL_VIEWPORT_PADDING;\n        const bottomSpaceAvailable =\n            viewportSize.height - this._triggerRect.bottom - SELECT_PANEL_VIEWPORT_PADDING;\n\n        const panelHeightTop = Math.abs(this._offsetY);\n        const totalPanelHeight =\n            Math.min(this._getItemCount() * itemHeight, SELECT_PANEL_MAX_HEIGHT);\n        const panelHeightBottom = totalPanelHeight - panelHeightTop - this._triggerRect.height;\n\n        if (panelHeightBottom > bottomSpaceAvailable) {\n            this._adjustPanelUp(panelHeightBottom, bottomSpaceAvailable);\n        } else if (panelHeightTop > topSpaceAvailable) {\n            this._adjustPanelDown(panelHeightTop, topSpaceAvailable, maxScroll);\n        } else {\n            this._transformOrigin = this._getOriginBasedOnOption();\n        }\n    }\n\n    /** Adjusts the overlay panel up to fit in the viewport. */\n    private _adjustPanelUp(panelHeightBottom: number, bottomSpaceAvailable: number) {\n        // Browsers ignore fractional scroll offsets, so we need to round.\n        const distanceBelowViewport = Math.round(panelHeightBottom - bottomSpaceAvailable);\n\n        // Scrolls the panel up by the distance it was extending past the boundary, then\n        // adjusts the offset by that amount to move the panel up into the viewport.\n        this._scrollTop -= distanceBelowViewport;\n        this._offsetY -= distanceBelowViewport;\n        this._transformOrigin = this._getOriginBasedOnOption();\n\n        // If the panel is scrolled to the very top, it won't be able to fit the panel\n        // by scrolling, so set the offset to 0 to allow the fallback position to take\n        // effect.\n        if (this._scrollTop <= 0) {\n            this._scrollTop = 0;\n            this._offsetY = 0;\n            this._transformOrigin = `50% bottom 0px`;\n        }\n    }\n\n    /** Adjusts the overlay panel down to fit in the viewport. */\n    private _adjustPanelDown(panelHeightTop: number, topSpaceAvailable: number, maxScroll: number) {\n        // Browsers ignore fractional scroll offsets, so we need to round.\n        const distanceAboveViewport = Math.round(panelHeightTop - topSpaceAvailable);\n\n        // Scrolls the panel down by the distance it was extending past the boundary, then\n        // adjusts the offset by that amount to move the panel down into the viewport.\n        this._scrollTop += distanceAboveViewport;\n        this._offsetY += distanceAboveViewport;\n        this._transformOrigin = this._getOriginBasedOnOption();\n\n        // If the panel is scrolled to the very bottom, it won't be able to fit the\n        // panel by scrolling, so set the offset to 0 to allow the fallback position\n        // to take effect.\n        if (this._scrollTop >= maxScroll) {\n            this._scrollTop = maxScroll;\n            this._offsetY = 0;\n            this._transformOrigin = `50% top 0px`;\n\n            return;\n        }\n    }\n\n    /** Sets the transform origin point based on the selected option. */\n    private _getOriginBasedOnOption(): string {\n        const itemHeight = this._getItemHeight();\n        /* tslint:disable-next-line:no-magic-numbers */\n        const optionHeightAdjustment = (itemHeight - this._triggerRect.height) / 2;\n        /* tslint:disable-next-line:no-magic-numbers */\n        const originY = Math.abs(this._offsetY) - optionHeightAdjustment + itemHeight / 2;\n\n        return `50% ${originY}px 0px`;\n    }\n\n    /** Calculates the amount of items in the select. This includes options and group labels. */\n    private _getItemCount(): number {\n        return this.options.length + this.optionGroups.length;\n    }\n\n    /** Calculates the height of the select's options. */\n    private _getItemHeight(): number {\n        /* tslint:disable-next-line:no-magic-numbers */\n        return 32;\n        // return this._triggerFontSize * SELECT_ITEM_HEIGHT_EM;\n    }\n\n    /** Comparison function to specify which option is displayed. Defaults to object equality. */\n    private _compareWith = (o1: any, o2: any) => o1 === o2;\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { OverlayModule } from '@ptsecurity/cdk/overlay';\nimport { McOptionModule } from '@ptsecurity/mosaic/core';\nimport { McFormFieldModule } from '@ptsecurity/mosaic/form-field';\nimport { McIconModule } from '@ptsecurity/mosaic/icon';\nimport { McTagModule } from '@ptsecurity/mosaic/tag';\n\nimport { MC_SELECT_SCROLL_STRATEGY_PROVIDER, McSelect, McSelectTrigger } from './select.component';\n\n\n@NgModule({\n    imports: [\n        CommonModule,\n        OverlayModule,\n        McOptionModule,\n        McIconModule,\n        McTagModule\n    ],\n    exports: [McFormFieldModule, McSelect, McSelectTrigger, McOptionModule, CommonModule],\n    declarations: [McSelect, McSelectTrigger],\n    providers: [MC_SELECT_SCROLL_STRATEGY_PROVIDER]\n})\nexport class McSelectModule {}\n","import {\n    ChangeDetectionStrategy,\n    Component,\n    Directive,\n    ElementRef,\n    Input,\n    NgZone, OnDestroy,\n    OnInit,\n    Renderer2,\n    ViewEncapsulation\n} from '@angular/core';\n\nimport { coerceBooleanProperty, coerceCssPixelValue, coerceNumberProperty } from '@ptsecurity/cdk/coercion';\n\n\ninterface IArea {\n    area: McSplitterAreaDirective;\n    index: number;\n    order: number;\n    initialSize: number;\n}\n\ninterface IPoint {\n    x: number;\n    y: number;\n}\n\n\nconst enum AttributeProperty {\n    Disabled = 'disabled'\n}\n\nconst enum Cursor {\n    Default = 'default',\n    ResizeColumn = 'col-resize',\n    ResizeRow = 'row-resize'\n}\n\nconst enum StyleProperty {\n    Cursor = 'cursor',\n    Flex = 'flex',\n    FlexBasis = 'flex-basis',\n    FlexDirection = 'flex-direction',\n    Height = 'height',\n    MaxWidth = 'max-width',\n    MinHeight = 'min-height',\n    MinWidth = 'minWidth',\n    OffsetHeight = 'offsetHeight',\n    OffsetWidth = 'offsetWidth',\n    Order = 'order',\n    Width = 'width'\n}\n\nconst enum State {\n    Disabled = 'disabled',\n    Horizontal = 'horizontal',\n    Vertical = 'vertical'\n}\n\nexport const enum Direction {\n    Horizontal = 'horizontal',\n    Vertical = 'vertical'\n}\n\n@Component({\n    selector: 'mc-splitter',\n    preserveWhitespaces: false,\n    styleUrls: ['splitter.css'],\n    templateUrl: './splitter.component.html',\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class McSplitterComponent implements OnInit {\n    readonly areas: IArea[] = [];\n\n    private _direction: Direction;\n    private _disabled: boolean = false;\n    private _gutterSize: number = 6;\n\n    private isDragging: boolean = false;\n\n    private readonly areaPositionDivider: number = 2;\n    private readonly listeners: (() => void)[] = [];\n\n    @Input()\n    set direction(direction: Direction) {\n        this._direction = direction;\n    }\n\n    get direction(): Direction {\n        return this._direction;\n    }\n\n    @Input()\n    set disabled(disabled: boolean) {\n        this._disabled = coerceBooleanProperty(disabled);\n    }\n\n    get disabled(): boolean {\n        return this._disabled;\n    }\n\n    @Input()\n    set gutterSize(gutterSize: number) {\n        const size = coerceNumberProperty(gutterSize);\n        this._gutterSize = size > 0 ? size : this.gutterSize;\n    }\n\n    get gutterSize(): number {\n        return this._gutterSize;\n    }\n\n    constructor(private elementRef: ElementRef,\n                private ngZone: NgZone,\n                private renderer: Renderer2) {}\n\n    addArea(area: McSplitterAreaDirective): void {\n        const index: number = this.areas.length;\n        const order: number = index * this.areaPositionDivider;\n        const size: number = area.getSize();\n\n        area.setOrder(order);\n\n        this.areas.push({\n            area,\n            index,\n            order,\n            initialSize: size\n        });\n    }\n\n    ngOnInit(): void {\n        if (!this.direction) {\n            this.direction = Direction.Horizontal;\n        }\n\n        this.setStyle(StyleProperty.FlexDirection, this.isVertical() ? 'column' : 'row');\n    }\n\n    onMouseDown(event: MouseEvent, leftAreaIndex: number, rightAreaIndex: number) {\n        if (this.disabled) {\n            return;\n        }\n\n        const leftArea = this.areas[leftAreaIndex];\n        const rightArea = this.areas[rightAreaIndex];\n\n        const startPoint: IPoint = {\n            x: event.screenX,\n            y: event.screenY\n        };\n\n        leftArea.initialSize = leftArea.area.getSize();\n        rightArea.initialSize = rightArea.area.getSize();\n\n        this.areas.forEach((item) => {\n            const size = item.area.getSize();\n            item.area.disableFlex();\n            item.area.setSize(size);\n        });\n\n        this.ngZone.runOutsideAngular(() => {\n            this.listeners.push(\n                this.renderer.listen(\n                    'document',\n                    'mouseup',\n                    () => this.onMouseUp()\n                )\n            );\n        });\n\n        this.ngZone.runOutsideAngular(() => {\n            this.listeners.push(\n                this.renderer.listen(\n                    'document',\n                    'mousemove',\n                    (e: MouseEvent) => this.onMouseMove(e, startPoint, leftArea, rightArea)\n                )\n            );\n        });\n\n        this.isDragging = true;\n    }\n\n    removeArea(area: McSplitterAreaDirective): void {\n        let indexToRemove: number = -1;\n\n        this.areas.some((item, index) => {\n            if (item.area === area) {\n                indexToRemove = index;\n\n                return true;\n            }\n\n            return false;\n        });\n\n        if (indexToRemove === -1) {\n            return;\n        }\n\n        this.areas.splice(indexToRemove, 1);\n    }\n\n    private isVertical(): boolean {\n        return this.direction === Direction.Vertical;\n    }\n\n    private onMouseMove(event: MouseEvent, startPoint: IPoint, leftArea: IArea, rightArea: IArea) {\n        if (!this.isDragging || this.disabled) {\n            return;\n        }\n\n        const endPoint: IPoint = {\n            x: event.screenX,\n            y: event.screenY\n        };\n\n        const offset = this.isVertical()\n            ? startPoint.y - endPoint.y\n            : startPoint.x - endPoint.x;\n\n        const newLeftAreaSize = leftArea.initialSize - offset;\n        const newRightAreaSize = rightArea.initialSize + offset;\n\n        const minLeftAreaSize = leftArea.area.getMinSize();\n        const minRightAreaSize = rightArea.area.getMinSize();\n\n        if (newLeftAreaSize <= minLeftAreaSize || newRightAreaSize <= minRightAreaSize) {\n            const rightAreaOffset = leftArea.initialSize - minLeftAreaSize;\n\n            leftArea.area.setSize(minLeftAreaSize);\n            rightArea.area.setSize(rightArea.initialSize + rightAreaOffset);\n        } else if (newLeftAreaSize <= 0) {\n            leftArea.area.setSize(0);\n            rightArea.area.setSize(rightArea.initialSize + leftArea.initialSize);\n        } else if (newRightAreaSize <= 0) {\n            leftArea.area.setSize(rightArea.initialSize + leftArea.initialSize);\n            rightArea.area.setSize(0);\n        } else {\n            leftArea.area.setSize(newLeftAreaSize);\n            rightArea.area.setSize(newRightAreaSize);\n        }\n    }\n\n    private onMouseUp() {\n        while (this.listeners.length > 0) {\n            const unsubscribe = this.listeners.pop();\n\n            if (unsubscribe) {\n                unsubscribe();\n            }\n        }\n\n        this.isDragging = false;\n    }\n\n    private setStyle(property: StyleProperty, value: string | number) {\n        this.renderer.setStyle(this.elementRef.nativeElement, property, value);\n    }\n}\n\n@Directive({\n    selector: 'mc-gutter'\n})\nexport class McGutterDirective implements OnInit {\n    private _direction: Direction = Direction.Vertical;\n    private _disabled: boolean = false;\n    private _order: number = 0;\n    private _size: number = 6;\n\n    @Input()\n    set direction(direction: Direction) {\n        this._direction = direction;\n    }\n\n    get direction(): Direction {\n        return this._direction;\n    }\n\n    @Input()\n    set disabled(disabled: boolean) {\n        this._disabled = coerceBooleanProperty(disabled);\n    }\n\n    get disabled(): boolean {\n        return this._disabled;\n    }\n\n    @Input()\n    set order(order: number) {\n        this._order = coerceNumberProperty(order);\n    }\n\n    get order(): number {\n        return this._order;\n    }\n\n    @Input()\n    set size(size: number) {\n        this._size = coerceNumberProperty(size);\n    }\n\n    get size(): number {\n        return this._size;\n    }\n\n    constructor(private renderer: Renderer2,\n                private elementRef: ElementRef) {\n    }\n\n    ngOnInit(): void {\n        this.setStyle(StyleProperty.Cursor, this.getCursor(this.getState()));\n        this.setStyle(StyleProperty.FlexBasis, coerceCssPixelValue(this.size));\n        this.setStyle(this.isVertical() ? StyleProperty.Height : StyleProperty.Width, coerceCssPixelValue(this.size));\n        this.setStyle(StyleProperty.Order, this.order);\n\n        if (!this.isVertical()) {\n            this.setStyle(StyleProperty.Height, '100%');\n        }\n\n        if (this.disabled) {\n            this.setAttr(AttributeProperty.Disabled, 'true');\n        }\n\n        // fix IE issue with gutter icon. flex-direction is requied for flex alignment options\n        this.setStyle(StyleProperty.FlexDirection, this.isVertical() ? 'row' : 'column');\n    }\n\n    private isVertical(): boolean {\n        return this.direction === Direction.Vertical;\n    }\n\n    private getCursor(state: State): string {\n        switch (state) {\n            case State.Disabled:\n                return Cursor.Default;\n            case State.Vertical:\n                return  Cursor.ResizeRow;\n            case State.Horizontal:\n                return Cursor.ResizeColumn;\n            default:\n                throw Error(`Unknown gutter state for cursor: ${state}`);\n        }\n    }\n\n    private getState(): State {\n        return this.disabled\n            ? State.Disabled\n            : this.direction === Direction.Vertical\n                ? State.Vertical\n                : State.Horizontal;\n    }\n\n    private setStyle(property: StyleProperty, value: string | number) {\n        this.renderer.setStyle(this.elementRef.nativeElement, property, value);\n    }\n\n    private setAttr(attribute: AttributeProperty, value: string) {\n        this.renderer.setAttribute(this.elementRef.nativeElement, attribute, value);\n    }\n}\n\n@Directive({\n    selector: 'mc-splitter-area'\n})\nexport class McSplitterAreaDirective implements OnInit, OnDestroy {\n    constructor(private elementRef: ElementRef,\n                private renderer: Renderer2,\n                private splitter: McSplitterComponent) {}\n\n    disableFlex(): void {\n        this.renderer.removeStyle(this.elementRef.nativeElement, 'flex');\n    }\n\n    ngOnInit(): void {\n        this.splitter.addArea(this);\n\n        this.removeStyle(StyleProperty.MaxWidth);\n        this.setStyle(StyleProperty.Flex, '1');\n\n        if (this.splitter.direction === Direction.Vertical) {\n            this.setStyle(StyleProperty.Width, '100%');\n            this.removeStyle(StyleProperty.Height);\n        } else {\n            this.setStyle(StyleProperty.Height, '100%');\n            this.removeStyle(StyleProperty.Width);\n        }\n    }\n\n    ngOnDestroy(): void {\n        this.splitter.removeArea(this);\n    }\n\n    setOrder(order: number): void {\n        this.setStyle(StyleProperty.Order, order);\n    }\n\n    setSize(size: number): void {\n        const sz = coerceNumberProperty(size);\n        this.setStyle(this.getSizeProperty(), coerceCssPixelValue(sz));\n    }\n\n    getSize(): number {\n        return this.elementRef.nativeElement[this.getOffsetSizeProperty()];\n    }\n\n    getMinSize(): number {\n        const styles = getComputedStyle(this.elementRef.nativeElement);\n\n        return parseFloat(styles[this.getMinSizeProperty()]);\n    }\n\n    private isVertical(): boolean {\n        return this.splitter.direction === Direction.Vertical;\n    }\n\n    private getMinSizeProperty(): StyleProperty {\n        return this.isVertical()\n            ? StyleProperty.MinHeight\n            : StyleProperty.MinWidth;\n    }\n\n    private getOffsetSizeProperty(): StyleProperty {\n        return this.isVertical()\n            ? StyleProperty.OffsetHeight\n            : StyleProperty.OffsetWidth;\n    }\n\n    private getSizeProperty(): StyleProperty {\n        return this.isVertical()\n            ? StyleProperty.Height\n            : StyleProperty.Width;\n    }\n\n    private setStyle(style: StyleProperty, value: string | number) {\n        this.renderer.setStyle(this.elementRef.nativeElement, style, value);\n    }\n\n    private removeStyle(style: StyleProperty) {\n        this.renderer.removeStyle(this.elementRef.nativeElement, style);\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { McIconModule } from '@ptsecurity/mosaic/icon';\n\nimport { McGutterDirective, McSplitterAreaDirective, McSplitterComponent } from './splitter.component';\n\n\n@NgModule({\n    imports: [\n        CommonModule,\n        McIconModule\n    ],\n    exports: [\n        McGutterDirective,\n        McSplitterAreaDirective,\n        McSplitterComponent\n    ],\n    declarations: [\n        McGutterDirective,\n        McSplitterAreaDirective,\n        McSplitterComponent\n    ]\n})\nexport class McSplitterModule {\n}\n","import { animate, state, style, transition, trigger } from '@angular/animations';\nimport {\n    Attribute,\n    ChangeDetectionStrategy, ChangeDetectorRef,\n    Component,\n    ElementRef, EventEmitter, forwardRef,\n    Input, Output, ViewChild,\n    ViewEncapsulation\n} from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { FocusMonitor } from '@ptsecurity/cdk/a11y';\nimport {\n    ThemePalette,\n    CanColor, CanColorCtor,\n    CanDisable, CanDisableCtor,\n    HasTabIndex, HasTabIndexCtor,\n    mixinColor,\n    mixinDisabled,\n    mixinTabIndex\n} from '@ptsecurity/mosaic/core';\n\n\nlet nextUniqueId = 0;\n\ntype ToggleLabelPositionType = 'left' | 'right';\n\nexport class McToggleBase {\n    constructor(public _elementRef: ElementRef) {}\n}\n\nexport const _McToggleMixinBase:\n    HasTabIndexCtor &\n    CanDisableCtor &\n    CanColorCtor &\n    typeof McToggleBase = mixinTabIndex(mixinColor(mixinDisabled(McToggleBase), ThemePalette.Primary));\n\nexport class McToggleChange {\n    source: McToggleComponent;\n    checked: boolean;\n}\n\n@Component({\n    selector: 'mc-toggle',\n    exportAs: 'mcToggle',\n    templateUrl: './toggle.component.html',\n    styleUrls: ['./toggle.css'],\n    providers: [\n        {provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => McToggleComponent), multi: true}\n    ],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n    inputs: ['disabled', 'color', 'tabIndex'],\n    host: {\n        class: 'mc-toggle',\n        '[id]': 'id',\n        '[attr.id]': 'id',\n        '[class.mc-disabled]': 'disabled',\n        '[class.mc-toggle_off]': '!checked'\n    },\n    animations: [\n        trigger('switch', [\n            state('true' , style({ left: '50%' })),\n            state('false', style({ left: '1px' })),\n            transition('true <=> false', animate('150ms'))\n        ])\n    ]\n})\nexport class McToggleComponent extends _McToggleMixinBase\n    implements ControlValueAccessor, CanColor, CanDisable, HasTabIndex {\n\n    @ViewChild('input') _inputElement: ElementRef;\n\n    @Input() labelPosition: ToggleLabelPositionType = 'right';\n\n    @Input('aria-label') ariaLabel: string = '';\n    @Input('aria-labelledby') ariaLabelledby: string | null = null;\n\n    private _uniqueId: string = `mc-toggle-${++nextUniqueId}`;\n\n    // tslint:disable:member-ordering\n    @Input() id: string = this._uniqueId;\n\n    get inputId(): string {\n        return `${this.id || this._uniqueId}-input`;\n    }\n\n    @Input() name: string | null = null;\n\n    @Input() value: string;\n\n    private _disabled: boolean = false;\n\n    @Input()\n    get disabled() {\n        return this._disabled;\n    }\n\n    set disabled(value: any) {\n        if (value !== this._disabled) {\n            this._disabled = value;\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n\n    private _checked: boolean = false;\n\n    get checked() {\n        return this._checked;\n    }\n\n    @Input()\n    set checked(value: boolean) {\n        if (value !== this._checked) {\n            this._checked = value;\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n\n    @Output() readonly change: EventEmitter<McToggleChange> =\n        new EventEmitter<McToggleChange>();\n\n    constructor(public _elementRef: ElementRef,\n                private _focusMonitor: FocusMonitor,\n                private _changeDetectorRef: ChangeDetectorRef,\n                @Attribute('tabindex') tabIndex: string\n    ) {\n        super(_elementRef);\n\n        this.tabIndex = parseInt(tabIndex) || 0;\n\n        this._focusMonitor.monitor(this._elementRef.nativeElement, true);\n    }\n\n    ngOnDestroy() {\n        this._focusMonitor.stopMonitoring(this._elementRef.nativeElement);\n    }\n\n    focus(): void {\n        this._focusMonitor.focusVia(this._inputElement.nativeElement, 'keyboard');\n    }\n\n    _getAriaChecked(): boolean {\n        return this.checked;\n    }\n\n    _onInteractionEvent(event: Event) {\n        event.stopPropagation();\n    }\n\n    _onLabelTextChange() {\n        this._changeDetectorRef.markForCheck();\n    }\n\n    _onInputClick(event: MouseEvent) {\n        event.stopPropagation();\n        this._updateModelValue();\n        this._emitChangeEvent();\n    }\n\n    writeValue(value: any) {\n        this.checked = !!value;\n    }\n\n    registerOnChange(fn: any) {\n        this._onChangeCallback = fn;\n    }\n\n    registerOnTouched(fn: any) {\n        this._onTouchedCallback = fn;\n    }\n\n    setDisabledState(isDisabled: boolean) {\n        this.disabled = isDisabled;\n    }\n\n    // tslint:disable-next-line:no-empty\n    private _onTouchedCallback = () => {};\n\n    // tslint:disable-next-line:no-empty\n    private _onChangeCallback = (_: any) => {};\n\n    private _updateModelValue() {\n        this._checked = !this.checked;\n        this._onChangeCallback(this.checked);\n        this._onTouchedCallback();\n    }\n\n    private _emitChangeEvent() {\n        const event = new McToggleChange();\n        event.source = this;\n        event.checked = this.checked;\n\n        this._onChangeCallback(this.checked);\n        this.change.emit(event);\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { A11yModule } from '@ptsecurity/cdk/a11y';\nimport { McCommonModule } from '@ptsecurity/mosaic/core';\n\nimport { McToggleComponent } from './toggle.component';\n\n\n@NgModule({\n    imports: [CommonModule, BrowserAnimationsModule, A11yModule, McCommonModule],\n    exports: [McToggleComponent],\n    declarations: [McToggleComponent]\n})\nexport class McToggleModule {\n}\n","import {\n    AfterContentInit,\n    Attribute,\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component, ContentChildren, EventEmitter, forwardRef, Input, IterableDiffer,\n    IterableDiffers, Output, QueryList,\n    ViewChild,\n    ViewEncapsulation,\n    Directive, ElementRef, Inject\n} from '@angular/core';\nimport { NodeDef, ViewData } from '@angular/core/src/view';\n\nimport { SelectionModel } from '@ptsecurity/cdk/collections';\nimport { CdkTreeNode, CdkTree, CdkTreeNodeOutlet } from '@ptsecurity/cdk/tree';\n\nimport {\n    CanDisable, CanDisableCtor,\n    HasTabIndex,\n    HasTabIndexCtor,\n    mixinDisabled,\n    mixinTabIndex,\n    toBoolean\n} from '@ptsecurity/mosaic/core';\n\nimport { FocusKeyManager } from '@ptsecurity/cdk/a11y';\n\nimport { END, ENTER, HOME, LEFT_ARROW, PAGE_DOWN, PAGE_UP, RIGHT_ARROW, SPACE } from '@ptsecurity/cdk/keycodes';\n\n\n/**\n * Wrapper for the CdkTree node with Material design styles.\n */\n@Directive({\n    exportAs: 'mcTreeNodeOption',\n    selector: 'mc-tree-node-option',\n    host: {\n        tabindex: '-1',\n        '[class.mc-selected]': 'selected',\n        '[class.mc-focused]': '_hasFocus',\n        '[attr.aria-expanded]': 'isExpanded',\n        '[attr.aria-level]': 'role === \"treeitem\" ? level : null',\n        class: 'mc-tree-node',\n\n        '(focus)': '_handleFocus()',\n        '(blur)': '_handleBlur()',\n\n        '(click)': '_handleClick()'\n    },\n    providers: [\n        { provide: CdkTreeNode, useExisting: McTreeNodeOption }\n    ]\n})\nexport class McTreeNodeOption<T> extends CdkTreeNode<T> implements CanDisable {\n    @Input() role: 'treeitem' | 'group' = 'treeitem';\n\n    @Input()\n    get disabled() {\n        return this._disabled;\n    }\n\n    set disabled(value: any) {\n        const newValue = toBoolean(value);\n\n        if (newValue !== this._disabled) {\n            this._disabled = newValue;\n        }\n    }\n\n    @Input()\n    get selected(): boolean {\n        return this.treeSelection.selectedOptions && this.treeSelection.selectedOptions.isSelected(this) || false;\n    }\n\n    set selected(value: boolean) {\n        const isSelected = toBoolean(value);\n\n        if (isSelected !== this._selected) {\n            this.setSelected(isSelected);\n\n            // this.treeSelection._reportValueChange();\n        }\n    }\n\n    private _hasFocus: boolean = false;\n\n    private _disabled: boolean = false;\n    private _selected: boolean = false;\n\n    constructor(\n        protected _elementRef: ElementRef,\n        @Inject(forwardRef(() => McTreeSelection))\n        protected treeSelection: McTreeSelection<T>\n    ) {\n        super(_elementRef, treeSelection);\n    }\n\n    focus(): void {\n        this._elementRef.nativeElement.focus();\n\n        this.treeSelection.setFocusedOption(this);\n    }\n\n    toggle(): void {\n        this.selected = !this.selected;\n    }\n\n    setSelected(selected: boolean) {\n        if (this._selected === selected || !this.treeSelection.selectedOptions) { return; }\n\n        this._selected = selected;\n\n        if (selected) {\n            this.treeSelection.selectedOptions.select(this);\n        } else {\n            this.treeSelection.selectedOptions.deselect(this);\n        }\n\n        // this._changeDetector.markForCheck();\n    }\n\n    _getHeight(): number {\n        return this._elementRef.nativeElement.getClientRects()[0].height;\n    }\n\n    _handleFocus(): void {\n        if (this.disabled || this._hasFocus) { return; }\n\n        this._hasFocus = true;\n    }\n\n    _handleBlur(): void {\n        this._hasFocus = false;\n    }\n\n    _handleClick(): void {\n        if (this.disabled) { return; }\n\n        this.treeSelection.setFocusedOption(this);\n    }\n}\n\nexport const _McTreeSelectionBase:\n    HasTabIndexCtor &\n    CanDisableCtor &\n    typeof CdkTree\n    = mixinTabIndex(mixinDisabled(CdkTree));\n\nexport class McTreeNavigationChange {\n    constructor(\n        public source: McTreeSelection<any>,\n        public option: McTreeNodeOption<any>\n    ) {}\n}\n\nexport class McTreeSelectionChange {\n    constructor(\n        public source: McTreeSelection<any>,\n        public option: McTreeNodeOption<any>\n    ) {}\n}\n\n@Component({\n    exportAs: 'mcTreeSelection',\n    selector: 'mc-tree-selection',\n    template: `<ng-container cdkTreeNodeOutlet></ng-container>`,\n    host: {\n        '[tabIndex]': 'tabIndex',\n        class: 'mc-tree-selection',\n        role: 'tree-selection',\n        '(keydown)': '_onKeyDown($event)',\n        '(window:resize)': 'updateScrollSize()'\n    },\n    styleUrls: ['./tree.css'],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    providers: [{ provide: CdkTree, useExisting: McTreeSelection }]\n})\nexport class McTreeSelection<T> extends _McTreeSelectionBase<T>\n    implements AfterContentInit, CanDisable, HasTabIndex {\n    // Outlets within the tree's template where the dataNodes will be inserted.\n    @ViewChild(CdkTreeNodeOutlet) _nodeOutlet: CdkTreeNodeOutlet;\n\n    @ContentChildren(forwardRef(() => McTreeNodeOption)) options: QueryList<McTreeNodeOption<T>>;\n\n    _keyManager: FocusKeyManager<McTreeNodeOption<T>>;\n\n    selectedOptions: SelectionModel<McTreeNodeOption<T>>;\n\n    _disabled: boolean = false;\n    tabIndex: number;\n    multiple: boolean;\n    autoSelect: boolean;\n    noUnselect: boolean;\n\n    // todo temporary solution\n    withShift: boolean;\n    withCtrl: boolean;\n\n    @Input()\n    get disabled(): boolean {\n        return this._disabled;\n    }\n\n    set disabled(rawValue: boolean) {\n        const value = toBoolean(rawValue);\n\n        if (this._disabled !== value) {\n            this._disabled = value;\n\n            if (this._disabled) {\n                console.log('need disable all options');\n            } else {\n                console.log('need enable all options');\n            }\n        }\n    }\n\n    @Output() readonly navigationChange = new EventEmitter<McTreeNavigationChange>();\n\n    @Output() readonly selectionChange = new EventEmitter<McTreeSelectionChange>();\n\n    constructor(\n        private _elementRef: ElementRef,\n        _differs: IterableDiffers,\n        _changeDetectorRef: ChangeDetectorRef,\n        @Attribute('tabindex') tabIndex: string,\n        @Attribute('multiple') multiple: string,\n        @Attribute('auto-select') autoSelect: string,\n        @Attribute('no-unselect') noUnselect: string\n    ) {\n        super(_differs, _changeDetectorRef);\n\n        this.tabIndex = parseInt(tabIndex) || 0;\n\n        this.multiple = multiple === null ? true : toBoolean(multiple);\n        this.autoSelect = autoSelect === null ? true : toBoolean(autoSelect);\n        this.noUnselect = noUnselect === null ? true : toBoolean(noUnselect);\n\n        this.selectedOptions = new SelectionModel<McTreeNodeOption<T>>(this.multiple);\n    }\n\n    _onKeyDown(event: KeyboardEvent) {\n        const keyCode = event.keyCode;\n        this.withShift = event.shiftKey;\n        this.withCtrl = event.ctrlKey;\n\n        switch (keyCode) {\n            case LEFT_ARROW:\n                if (this._keyManager.activeItem) {\n                    this.treeControl.collapse(this._keyManager.activeItem.data);\n                }\n\n                event.preventDefault();\n\n                break;\n            case RIGHT_ARROW:\n                if (this._keyManager.activeItem) {\n                    this.treeControl.expand(this._keyManager.activeItem.data);\n                }\n\n                event.preventDefault();\n\n                break;\n            case SPACE:\n            case ENTER:\n                this.toggleFocusedOption();\n                event.preventDefault();\n\n                break;\n            case HOME:\n                this._keyManager.setFirstItemActive();\n                event.preventDefault();\n\n                break;\n            case END:\n                this._keyManager.setLastItemActive();\n                event.preventDefault();\n\n                break;\n            case PAGE_UP:\n                this._keyManager.setPreviousPageItemActive();\n                event.preventDefault();\n\n                break;\n            case PAGE_DOWN:\n                this._keyManager.setNextPageItemActive();\n                event.preventDefault();\n\n                break;\n            default:\n                this._keyManager.onKeydown(event);\n        }\n    }\n\n    ngAfterContentInit(): void {\n        this._keyManager = new FocusKeyManager<McTreeNodeOption<T>>(this.options)\n            .withTypeAhead()\n            .withVerticalOrientation(true)\n            .withHorizontalOrientation(null);\n    }\n\n    updateScrollSize(): void {\n        if (!this.options.first) { return; }\n\n        this._keyManager.withScrollSize(Math.floor(this._getHeight() / this.options.first._getHeight()));\n    }\n\n    setFocusedOption(option: McTreeNodeOption<T>): void {\n        this._keyManager.updateActiveItem(option);\n\n        if (this.withShift && this.multiple) {\n            const previousIndex = this._keyManager.previousActiveItemIndex;\n            const activeIndex = this._keyManager.activeItemIndex;\n\n            if (previousIndex < activeIndex) {\n                this.options.forEach((item, index) => {\n                    if (index >= previousIndex && index <= activeIndex) { item.setSelected(true); }\n                });\n            } else {\n                this.options.forEach((item, index) => {\n                    if (index >= activeIndex && index <= previousIndex) { item.setSelected(true); }\n                });\n            }\n\n            this.withShift = false;\n        } else if (this.withCtrl) {\n            this.withCtrl = false;\n\n            if (!this._canDeselectLast(option)) { return; }\n\n            option.toggle();\n        } else {\n            if (this.autoSelect) {\n                this.options.forEach((item) => item.setSelected(false));\n                option.setSelected(true);\n            }\n        }\n\n        this._emitNavigationEvent(option);\n    }\n\n    // Toggles the selected state of the currently focused option.\n    toggleFocusedOption(): void {\n        const focusedIndex = this._keyManager.activeItemIndex;\n\n        if (focusedIndex != null && this._isValidIndex(focusedIndex)) {\n            const focusedOption: McTreeNodeOption<T> = this.options.toArray()[focusedIndex];\n\n            if (focusedOption && this._canDeselectLast(focusedOption)) {\n                focusedOption.toggle();\n\n                // Emit a change event because the focused option changed its state through user interaction.\n                this._emitChangeEvent(focusedOption);\n            }\n        }\n    }\n\n    renderNodeChanges(\n        data: T[],\n        dataDiffer: IterableDiffer<T> = this._dataDiffer,\n        viewContainer: any = this._nodeOutlet.viewContainer,\n        parentData?: T\n    ) {\n        super.renderNodeChanges(data, dataDiffer, viewContainer, parentData);\n\n        const arrayOfInstances = [];\n\n        viewContainer._embeddedViews.forEach((view: ViewData) => {\n            const viewDef = view.def;\n\n            viewDef.nodes.forEach((node: NodeDef) => {\n                if (viewDef.nodeMatchedQueries === node.matchedQueryIds) {\n                    const nodeData: any = view.nodes[node.nodeIndex];\n\n                    arrayOfInstances.push(nodeData.instance as never);\n                }\n            });\n        });\n\n        if (this.options) {\n            this.options.reset(arrayOfInstances);\n            this.options.notifyOnChanges();\n        }\n\n        this.updateScrollSize();\n    }\n\n    _getHeight(): number {\n        return this._elementRef.nativeElement.getClientRects()[0].height;\n    }\n\n    _emitNavigationEvent(option: McTreeNodeOption<T>): void {\n        this.navigationChange.emit(new McTreeNavigationChange(this, option));\n    }\n\n    _emitChangeEvent(option: McTreeNodeOption<T>): void {\n        this.selectionChange.emit(new McTreeNavigationChange(this, option));\n    }\n\n    /**\n     * Utility to ensure all indexes are valid.\n     * @param index The index to be checked.\n     * @returns True if the index is valid for our list of options.\n     */\n    private _isValidIndex(index: number): boolean {\n        return index >= 0 && index < this.options.length;\n    }\n\n    private _canDeselectLast(option: McTreeNodeOption<T>): boolean {\n        return !(this.noUnselect && this.selectedOptions.selected.length === 1 && option.selected);\n    }\n}\n\n","import { NgModule } from '@angular/core';\n\nimport { CommonModule } from '@angular/common';\nimport { CdkTreeModule } from '@ptsecurity/cdk/tree';\n\nimport { McTreeNodeDef } from './node';\nimport { McTreeNodePadding } from './padding';\nimport { McTreeSelection, McTreeNodeOption } from './tree-selection';\n\n\nconst MC_TREE_DIRECTIVES = [\n    McTreeNodeDef,\n    McTreeNodePadding,\n    McTreeSelection,\n    McTreeNodeOption\n];\n\n@NgModule({\n    imports: [CommonModule, CdkTreeModule],\n    exports: MC_TREE_DIRECTIVES,\n    declarations: MC_TREE_DIRECTIVES\n})\nexport class McTreeModule {}\n","import { ICollectionViewer, DataSource } from '@ptsecurity/cdk/collections';\nimport { FlatTreeControl, ITreeControl } from '@ptsecurity/cdk/tree';\nimport { BehaviorSubject, merge, Observable } from 'rxjs';\nimport { map, take } from 'rxjs/operators';\n\n\n/**\n * Tree flattener to convert a normal type of node to node with children & level information.\n * Transform nested nodes of type `T` to flattened nodes of type `F`.\n *\n * For example, the input data of type `T` is nested, and contains its children data:\n *   SomeNode: {\n *     key: 'Fruits',\n *     children: [\n *       NodeOne: {\n *         key: 'Apple',\n *       },\n *       NodeTwo: {\n *        key: 'Pear',\n *      }\n *    ]\n *  }\n *  After flattener flatten the tree, the structure will become\n *  SomeNode: {\n *    key: 'Fruits',\n *    expandable: true,\n *    level: 1\n *  },\n *  NodeOne: {\n *    key: 'Apple',\n *    expandable: false,\n *    level: 2\n *  },\n *  NodeTwo: {\n *   key: 'Pear',\n *   expandable: false,\n *   level: 2\n * }\n * and the output flattened type is `F` with additional information.\n */\nexport class McTreeFlattener<T, F> {\n\n    constructor(public transformFunction: (node: T, level: number) => F,\n                public getLevel: (node: F) => number,\n                public isExpandable: (node: F) => boolean,\n                public getChildren: (node: T) => Observable<T[]>) {\n    }\n\n    _flattenNode(node: T, level: number,\n                 resultNodes: F[], parentMap: boolean[]): F[] {\n        const flatNode = this.transformFunction(node, level);\n        resultNodes.push(flatNode);\n\n        if (this.isExpandable(flatNode)) {\n            this.getChildren(node).pipe(take(1)).subscribe((children) => {\n                children.forEach((child, index) => {\n                    const childParentMap: boolean[] = parentMap.slice();\n                    childParentMap.push(index !== children.length - 1);\n                    this._flattenNode(child, level + 1, resultNodes, childParentMap);\n                });\n            });\n        }\n\n        return resultNodes;\n    }\n\n    /**\n     * Flatten a list of node type T to flattened version of node F.\n     * Please note that type T may be nested, and the length of `structuredData` may be different\n     * from that of returned list `F[]`.\n     */\n    flattenNodes(structuredData: T[]): F[] {\n        const resultNodes: F[] = [];\n        structuredData.forEach((node) => this._flattenNode(node, 0, resultNodes, []));\n\n        return resultNodes;\n    }\n\n    /**\n     * Expand flattened node with current expansion status.\n     * The returned list may have different length.\n     */\n    expandFlattenedNodes(nodes: F[], treeControl: ITreeControl<F>): F[] {\n        const results: F[] = [];\n        const currentExpand: boolean[] = [];\n        currentExpand[0] = true;\n\n        nodes.forEach((node) => {\n            let expand = true;\n            for (let i = 0; i <= this.getLevel(node); i++) {\n                expand = expand && currentExpand[i];\n            }\n\n            if (expand) { results.push(node); }\n\n            if (this.isExpandable(node)) {\n                currentExpand[this.getLevel(node) + 1] = treeControl.isExpanded(node);\n            }\n        });\n\n        return results;\n    }\n}\n\n\n/**\n * Data source for flat tree.\n * The data source need to handle expansion/collapsion of the tree node and change the data feed\n * to `McTree`.\n * The nested tree nodes of type `T` are flattened through `MсTreeFlattener`, and converted\n * to type `F` for `McTree` to consume.\n */\nexport class McTreeFlatDataSource<T, F> extends DataSource<F> {\n    _flattenedData = new BehaviorSubject<F[]>([]);\n\n    _expandedData = new BehaviorSubject<F[]>([]);\n\n    _data: BehaviorSubject<T[]>;\n\n    get data() {\n        return this._data.value;\n    }\n\n    set data(value: T[]) {\n        this._data.next(value);\n        this._flattenedData.next(this.treeFlattener.flattenNodes(this.data));\n        this.treeControl.dataNodes = this._flattenedData.value;\n    }\n\n    constructor(private treeControl: FlatTreeControl<F>,\n                private treeFlattener: McTreeFlattener<T, F>,\n                initialData: T[] = []) {\n        super();\n        this._data = new BehaviorSubject<T[]>(initialData);\n    }\n\n    connect(collectionViewer: ICollectionViewer): Observable<F[]> {\n        const changes = [\n            collectionViewer.viewChange,\n            this.treeControl.expansionModel.onChange!,\n            this._flattenedData\n        ];\n\n        return merge(...changes).pipe(map(() => {\n            this._expandedData.next(\n                this.treeFlattener.expandFlattenedNodes(this._flattenedData.value, this.treeControl));\n\n            return this._expandedData.value;\n        }));\n    }\n\n    disconnect() {\n        // no op\n    }\n}\n\n","import { ICollectionViewer, DataSource } from '@ptsecurity/cdk/collections';\nimport { BehaviorSubject, merge, Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\n\n/**\n * Data source for nested tree.\n *\n * The data source for nested tree doesn't have to consider node flattener, or the way to expand\n * or collapse. The expansion/collapsion will be handled by ITreeControl and each non-leaf node.\n */\nexport class McTreeNestedDataSource<T> extends DataSource<T> {\n    _data = new BehaviorSubject<T[]>([]);\n\n    /**\n     * Data for the nested tree\n     */\n    get data() {\n        return this._data.value;\n    }\n\n    set data(value: T[]) {\n        this._data.next(value);\n    }\n\n    connect(collectionViewer: ICollectionViewer): Observable<T[]> {\n        return merge(...[collectionViewer.viewChange, this._data])\n            .pipe(map(() => this.data));\n    }\n\n    disconnect() {\n        // no op\n    }\n}\n\n","import {\n    ElementRef,\n    QueryList,\n    ContentChildren,\n    Component,\n    ChangeDetectionStrategy,\n    ViewEncapsulation\n} from '@angular/core';\n\nimport {\n    mixinColor,\n    CanColor,\n    CanColorCtor,\n    CanDisable,\n    CanDisableCtor,\n    mixinDisabled\n} from '@ptsecurity/mosaic/core';\nimport { McIcon } from '@ptsecurity/mosaic/icon';\n\n\nexport class McTagBase {\n    constructor(public _elementRef: ElementRef) {}\n}\n\nexport const _McTagMixinBase: CanColorCtor & CanDisableCtor & typeof McTagBase = mixinColor(mixinDisabled(McTagBase));\n\n\n@Component({\n    selector: 'mc-tag',\n    templateUrl: 'tag.partial.html',\n    styleUrls: ['./tag.css'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n    host: {\n        class: 'mc-tag',\n        '[class.mc-disabled]': 'disabled'\n    },\n    inputs: ['color', 'disabled']\n})\nexport class McTag extends _McTagMixinBase implements CanColor, CanDisable {\n    @ContentChildren(McIcon) contentChildren: QueryList<McIcon>;\n\n    nativeElement: HTMLElement;\n\n    private _disabled: boolean = false;\n\n    get disabled() {\n        return this._disabled;\n    }\n\n    set disabled(value: any) {\n        if (value !== this.disabled) { this._disabled = value; }\n    }\n\n    constructor(elementRef: ElementRef) {\n        super(elementRef);\n\n        this.nativeElement = elementRef.nativeElement;\n    }\n\n    ngAfterContentInit() {\n        this._addClassModificatorForIcons();\n    }\n\n    _addClassModificatorForIcons() {\n        const icons = this.contentChildren.map((item) => item._elementRef.nativeElement);\n\n        if (icons.length === 1) {\n            const iconElement = icons[0];\n\n            if (!iconElement.previousElementSibling && !iconElement.nextElementSibling) {\n                if (iconElement.nextSibling) {\n                    iconElement.classList.add('mc-icon_left');\n                    this.nativeElement.classList.add('mc-left-icon');\n                }\n\n                if (iconElement.previousSibling) {\n                    iconElement.classList.add('mc-icon_right');\n                    this.nativeElement.classList.add('mc-right-icon');\n                }\n            }\n        } else if (icons.length > 1) {\n            const firstIconElement = icons[0];\n            const secondIconElement = icons[1];\n\n            firstIconElement.classList.add('mc-icon_left');\n            secondIconElement.classList.add('mc-icon_right');\n        }\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { PlatformModule } from '@ptsecurity/cdk/platform';\n\nimport { McTag } from './tag.component';\n\n\n@NgModule({\n    imports: [\n        CommonModule,\n        PlatformModule\n    ],\n    exports: [\n        McTag\n    ],\n    declarations: [\n        McTag\n    ]\n})\nexport class McTagModule {}\n","import {\n    Directive, DoCheck, ElementRef, Inject,\n    Input, OnChanges, OnDestroy, Optional,\n    Self, InjectionToken, NgZone, OnInit\n} from '@angular/core';\nimport { FormGroupDirective, NgControl, NgForm } from '@angular/forms';\nimport { coerceBooleanProperty } from '@ptsecurity/cdk/coercion';\nimport {\n    CanUpdateErrorState,\n    CanUpdateErrorStateCtor,\n    ErrorStateMatcher,\n    mixinErrorState\n} from '@ptsecurity/mosaic/core';\nimport { McFormFieldControl } from '@ptsecurity/mosaic/form-field';\nimport { fromEvent, Subscription, Subject } from 'rxjs';\nimport { distinctUntilChanged, map } from 'rxjs/operators';\n\n\nexport const MC_TEXTAREA_VALUE_ACCESSOR =\n    new InjectionToken<{ value: any }>('MC_TEXTAREA_VALUE_ACCESSOR');\n\nlet nextUniqueId = 0;\n\nconst ROW_SEPARATOR = '\\n';\n\nexport class McTextareaBase {\n    constructor(public _defaultErrorStateMatcher: ErrorStateMatcher,\n                public _parentForm: NgForm,\n                public _parentFormGroup: FormGroupDirective,\n                public ngControl: NgControl) {\n    }\n}\n\n// tslint:disable-next-line:naming-convention\nexport const McTextareaMixinBase: CanUpdateErrorStateCtor & typeof McTextareaBase = mixinErrorState(McTextareaBase);\n\n@Directive({\n    selector: 'textarea[mcTextarea]',\n    exportAs: 'mcTextarea',\n    host: {\n        class: 'mc-textarea',\n        '[class.mc-textarea-resizable]': '!canGrow',\n        '[attr.id]': 'id',\n        '[attr.placeholder]': 'placeholder',\n        '[disabled]': 'disabled',\n        '[required]': 'required',\n        '(blur)': 'focusChanged(false)',\n        '(focus)': 'focusChanged(true)'\n    },\n    providers: [{ provide: McFormFieldControl, useExisting: McTextarea }]\n})\nexport class McTextarea extends McTextareaMixinBase implements McFormFieldControl<any>, OnInit, OnChanges,\n    OnDestroy, DoCheck, CanUpdateErrorState {\n\n    @Input() canGrow: boolean = true;\n\n    /** An object used to control when error messages are shown. */\n    @Input() errorStateMatcher: ErrorStateMatcher;\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    focused: boolean = false;\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    readonly stateChanges: Subject<void> = new Subject<void>();\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    controlType: string = 'mc-textarea';\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    @Input()\n    get disabled(): boolean {\n        if (this.ngControl && this.ngControl.disabled !== null) {\n            return this.ngControl.disabled;\n        }\n\n        return this._disabled;\n    }\n\n    set disabled(value: boolean) {\n        this._disabled = coerceBooleanProperty(value);\n\n        if (this.focused) {\n            this.focused = false;\n            this.stateChanges.next();\n        }\n    }\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    @Input()\n    get id(): string {\n        return this._id;\n    }\n\n    set id(value: string) {\n        this._id = value || this.uid;\n    }\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    @Input() placeholder: string;\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    @Input()\n    get required(): boolean {\n        return this._required;\n    }\n\n    set required(value: boolean) {\n        this._required = coerceBooleanProperty(value);\n    }\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    @Input()\n    get value(): string {\n        return this.valueAccessor.value;\n    }\n\n    set value(value: string) {\n        if (value !== this.value) {\n            this.valueAccessor.value = value;\n            this.stateChanges.next();\n        }\n    }\n\n    protected uid = `mc-textsrea-${nextUniqueId++}`;\n    protected previousNativeValue: any;\n    protected _disabled = false;\n    protected _id: string;\n    protected _required = false;\n\n    private valueAccessor: { value: any };\n    private growSubscription: Subscription;\n\n    private lineHeight: number = 0;\n    private freeRowsHeight: number = 0;\n    private minHeight: number = 0;\n\n    constructor(protected elementRef: ElementRef,\n                @Optional() @Self() public ngControl: NgControl,\n                @Optional() _parentForm: NgForm,\n                @Optional() _parentFormGroup: FormGroupDirective,\n                _defaultErrorStateMatcher: ErrorStateMatcher,\n                @Optional() @Self() @Inject(MC_TEXTAREA_VALUE_ACCESSOR) inputValueAccessor: any,\n                private ngZone: NgZone) {\n        super(_defaultErrorStateMatcher, _parentForm, _parentFormGroup, ngControl);\n        // If no input value accessor was explicitly specified, use the element as the textarea value\n        // accessor.\n        this.valueAccessor = inputValueAccessor || this.elementRef.nativeElement;\n\n        this.previousNativeValue = this.value;\n\n        // Force setter to be called in case id was not specified.\n        this.id = this.id;\n\n        const growObserver = fromEvent(elementRef.nativeElement, 'input')\n            /*.pipe(\n                map((event: any) => this.getGrowHeight()),\n                // map((event: any) => event.target.scrollHeight),\n                distinctUntilChanged()\n            )*/;\n        this.growSubscription = growObserver.subscribe(this.grow.bind(this));\n    }\n\n    ngOnInit() {\n        setTimeout(() => this.grow(), 0);\n        this.lineHeight = parseInt(getComputedStyle(this.elementRef.nativeElement).lineHeight!, 10);\n\n        const paddingTop = parseInt(getComputedStyle(this.elementRef.nativeElement).paddingTop!, 10);\n        const paddingBottom = parseInt(getComputedStyle(this.elementRef.nativeElement).paddingBottom!, 10);\n\n        // tslint:disable-next-line:no-magic-numbers\n        this.minHeight = this.lineHeight * 2 + paddingTop + paddingBottom;\n        this.freeRowsHeight = this.lineHeight;\n    }\n\n    ngOnChanges() {\n        this.stateChanges.next();\n    }\n\n    ngOnDestroy() {\n        this.stateChanges.complete();\n        this.growSubscription.unsubscribe();\n    }\n\n    ngDoCheck() {\n        if (this.ngControl) {\n            // We need to re-evaluate this on every change detection cycle, because there are some\n            // error triggers that we can't subscribe to (e.g. parent form submissions). This means\n            // that whatever logic is in here has to be super lean or we risk destroying the performance.\n            this.updateErrorState();\n        }\n\n        // We need to dirty-check the native element's value, because there are some cases where\n        // we won't be notified when it changes (e.g. the consumer isn't using forms or they're\n        // updating the value using `emitEvent: false`).\n        this.dirtyCheckNativeValue();\n    }\n\n    /** Grow textarea height to avoid vertical scroll  */\n    grow() {\n        if (!this.canGrow) {\n            return;\n        }\n\n        this.ngZone.runOutsideAngular(() => {\n            const textarea = this.elementRef.nativeElement;\n\n            const outerHeight = parseInt(window.getComputedStyle(textarea).height!, 10);\n            const diff = outerHeight - textarea.clientHeight;\n\n            textarea.style.height = 0; // this line is important to height recalculation\n\n            const height = Math.max(this.minHeight, textarea.scrollHeight + diff + this.freeRowsHeight);\n            textarea.style.height = `${height}px`;\n        });\n    }\n\n    /** Focuses the textarea. */\n    focus(): void {\n        this.elementRef.nativeElement.focus();\n    }\n\n    /** Callback for the cases where the focused state of the textarea changes. */\n    focusChanged(isFocused: boolean) {\n        if (isFocused !== this.focused) {\n            this.focused = isFocused;\n            this.stateChanges.next();\n        }\n    }\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    get empty(): boolean {\n        return !this.elementRef.nativeElement.value && !this.isBadInput();\n    }\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    onContainerClick() {\n        this.focus();\n    }\n\n    /** Does some manual dirty checking on the native textarea `value` property. */\n    protected dirtyCheckNativeValue() {\n        const newValue = this.value;\n\n        if (this.previousNativeValue !== newValue) {\n            this.previousNativeValue = newValue;\n            this.stateChanges.next();\n        }\n    }\n\n    /** Checks whether the textarea is invalid based on the native validation. */\n    protected isBadInput(): boolean {\n        // The `validity` property won't be present on platform-server.\n        const validity = (this.elementRef.nativeElement as HTMLTextAreaElement).validity;\n\n        return validity && validity.badInput;\n    }\n\n    private getGrowHeight(): number {\n        const textarea = this.elementRef.nativeElement;\n        const outerHeight = parseInt(window.getComputedStyle(textarea).height!.toString(), 10);\n        const diff = outerHeight - textarea.clientHeight;\n\n        return Math.max(this.minHeight, textarea.scrollHeight + diff);\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { A11yModule } from '@ptsecurity/cdk/a11y';\nimport { McCommonModule } from '@ptsecurity/mosaic/core';\n\nimport { McTextarea } from './textarea.component';\n\n\n@NgModule({\n    imports: [CommonModule, A11yModule, McCommonModule, FormsModule],\n    exports: [McTextarea],\n    declarations: [McTextarea]\n})\nexport class McTextareaModule {\n}\n","import {\n    Directive,\n    DoCheck,\n    ElementRef,\n    forwardRef,\n    Inject,\n    InjectionToken,\n    Input,\n    OnChanges,\n    OnDestroy,\n    Optional,\n    Renderer2,\n    Self\n} from '@angular/core';\nimport {\n    ControlValueAccessor,\n    FormControl,\n    FormGroupDirective,\n    NG_VALIDATORS,\n    NgControl,\n    NgForm,\n    ValidationErrors,\n    ValidatorFn,\n    Validators\n} from '@angular/forms';\nimport {\n    noop,\n    Subject\n} from 'rxjs';\n\nimport { coerceBooleanProperty } from '@ptsecurity/cdk/coercion';\nimport {\n    CanUpdateErrorState,\n    CanUpdateErrorStateCtor,\n    ErrorStateMatcher,\n    mixinErrorState\n} from '@ptsecurity/mosaic/core';\nimport { McFormFieldControl } from '@ptsecurity/mosaic/form-field';\n\nimport {\n    ARROW_DOWN_KEYCODE,\n    ARROW_LEFT_KEYCODE,\n    ARROW_RIGHT_KEYCODE,\n    ARROW_UP_KEYCODE,\n    DEFAULT_TIME_FORMAT,\n    HOURS_PER_DAY,\n    HOURS_MINUTES_REGEXP,\n    HOURS_MINUTES_SECONDS_REGEXP,\n    HOURS_ONLY_REGEXP,\n    MINUTES_PER_HOUR,\n    SECONDS_PER_MINUTE,\n    TIMEFORMAT_PLACEHOLDERS,\n    TimeFormats,\n    TimeParts\n} from './timepicker.constants';\n\n\nlet uniqueComponentIdSuffix: number = 0;\nlet validatorOnChange: () => void = noop;\nlet validator: ValidatorFn | null = () => null;\n\nexport const MC_INPUT_VALUE_ACCESSOR =\n    new InjectionToken<{ value: any }>('MC_INPUT_VALUE_ACCESSOR');\n\nexport class McTimepickerBase {\n    constructor(\n        public _defaultErrorStateMatcher: ErrorStateMatcher,\n        public _parentForm: NgForm,\n        public _parentFormGroup: FormGroupDirective,\n        public ngControl: NgControl) { }\n}\n\n// tslint:disable-next-line naming-convention\nexport const McTimepickerMixinBase:\n    CanUpdateErrorStateCtor &\n    typeof McTimepickerBase = mixinErrorState(McTimepickerBase);\n\n@Directive({\n    selector: 'input[mcTimepicker]',\n    exportAs: 'mcTimepickerInput',\n    host: {\n        class: 'mc-timepicker mc-input',\n        // Native input properties that are overwritten by Angular inputs need to be synced with\n        // the native input element. Otherwise property bindings for those don't work.\n        '[attr.id]': 'id',\n        '[attr.placeholder]': 'placeholder',\n        '[disabled]': 'disabled',\n        '[required]': 'required',\n        '[attr.time-format]': 'timeFormat',\n        '[attr.min-time]': 'minTime',\n        '[attr.max-time]': 'maxTime',\n        '[attr.value]': 'value',\n        '(blur)': 'onBlur()',\n        '(focus)': 'focusChanged(true)',\n        '(input)': 'onInput()',\n        '(paste)': 'onPaste($event)',\n        '(keydown)': 'onKeyDown($event)'\n    },\n    providers: [\n        {\n            provide: NG_VALIDATORS,\n            useValue: {\n                validate(c) { return validator ? validator(c) : null; },\n                registerOnValidatorChange(fn: () => void): void { validatorOnChange = fn; }\n            },\n            multi: true\n        },\n        {\n            provide: McFormFieldControl,\n            useExisting: forwardRef(() => McTimepicker)\n        }\n    ]\n\n})\nexport class McTimepicker extends McTimepickerMixinBase\n    implements McFormFieldControl<any>,\n        OnChanges,\n        OnDestroy,\n        DoCheck,\n        CanUpdateErrorState,\n        ControlValueAccessor {\n\n    /** An object used to control when error messages are shown. */\n    @Input() errorStateMatcher: ErrorStateMatcher;\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    focused: boolean = false;\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    readonly stateChanges: Subject<void> = new Subject<void>();\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    controlType: string = 'mc-timepicker';\n\n    @Input()\n    get disabled(): boolean {\n        if (this.ngControl && this.ngControl.disabled !== null) { return this.ngControl.disabled; }\n\n        return this._disabled;\n    }\n\n    set disabled(value: boolean) {\n        this._disabled = coerceBooleanProperty(value);\n\n        // Browsers may not fire the blur event if the input is disabled too quickly.\n        // Reset from here to ensure that the element doesn't become stuck.\n        if (this.focused) {\n            this.focused = false;\n        }\n\n        this.stateChanges.next();\n    }\n\n    @Input()\n    get id(): string { return this._id; }\n\n    set id(value: string) { this._id = value || this.uid; }\n\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    @Input() placeholder: string;\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    @Input()\n    get required(): boolean { return this._required; }\n\n    set required(value: boolean) { this._required = coerceBooleanProperty(value); }\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    @Input()\n    get value(): string { return this.inputValueAccessor.value; }\n\n    set value(value: string) {\n        if (value !== this.value) {\n            this.inputValueAccessor.value = value;\n            this.applyInputChanges();\n        }\n    }\n\n    @Input('time-format')\n    get timeFormat(): TimeFormats { return this._timeFormat; }\n\n    set timeFormat(formatValue: TimeFormats) {\n        this._timeFormat = Object\n            .keys(TimeFormats)\n            .map((timeFormatKey) => TimeFormats[timeFormatKey])\n            .indexOf(formatValue) > -1 ? formatValue : DEFAULT_TIME_FORMAT;\n\n        validatorOnChange();\n        this.placeholder = TIMEFORMAT_PLACEHOLDERS[this._timeFormat];\n    }\n\n    @Input('min-time')\n    get minTime(): string | null { return this._minTime; }\n\n    set minTime(minValue: string | null) {\n        this._minTime = minValue;\n        this.minDateTime = minValue !== null ? this.getDateFromTimeString(minValue) : undefined;\n        validatorOnChange();\n    }\n\n    @Input('max-time')\n    get maxTime(): string | null { return this._maxTime; }\n\n    set maxTime(maxValue: string | null) {\n        this._maxTime = maxValue;\n        this.maxDateTime = maxValue !== null ? this.getDateFromTimeString(maxValue) : undefined;\n        validatorOnChange();\n    }\n\n    private _id: string;\n    private readonly uid = `mc-timepicker-${uniqueComponentIdSuffix++}`;\n    private _disabled: boolean;\n    private _required: boolean;\n    private previousNativeValue: any;\n    private readonly inputValueAccessor: { value: any };\n    private onChange: (value: any) => void;\n    private onTouched: () => void;\n    private _timeFormat: TimeFormats;\n    private _minTime: string | null = null;\n    private minDateTime: Date | undefined;\n    private _maxTime: string | null = null;\n    private maxDateTime: Date | undefined;\n    private currentDateTimeInput: Date | undefined;\n\n    constructor(private readonly elementRef: ElementRef,\n                @Optional() @Self() public ngControl: NgControl,\n                @Optional() _parentForm: NgForm,\n                @Optional() _parentFormGroup: FormGroupDirective,\n                _defaultErrorStateMatcher: ErrorStateMatcher,\n                @Optional() @Self() @Inject(MC_INPUT_VALUE_ACCESSOR) inputValueAccessor: any,\n                private readonly renderer: Renderer2) {\n        super(_defaultErrorStateMatcher, _parentForm, _parentFormGroup, ngControl);\n\n        // If no input value accessor was explicitly specified, use the element as the input value\n        // accessor.\n        this.inputValueAccessor = inputValueAccessor || this.elementRef.nativeElement;\n\n        this.previousNativeValue = this.value;\n        this.onChange = noop;\n\n        // Force setter to be called in case id was not specified.\n        this.id = this.id;\n\n        this.placeholder = TIMEFORMAT_PLACEHOLDERS[DEFAULT_TIME_FORMAT];\n\n        // Instead of NG_VALUE_ACCESSOR (https://github.com/angular/material2/issues/8158#issuecomment-344618103)\n        if (this.ngControl) { this.ngControl.valueAccessor = this; }\n\n        // Substitute initial empty validator with validator linked to directive object instance (workaround)\n        validator = Validators.compose([\n            () => this.parseValidator(),\n            () => this.minTimeValidator(),\n            () => this.maxTimeValidator()\n        ]);\n    }\n\n    ngOnChanges(): void {\n        this.stateChanges.next();\n    }\n\n    ngOnDestroy(): void {\n        this.stateChanges.complete();\n    }\n\n    ngDoCheck(): void {\n        if (this.ngControl) {\n            // We need to re-evaluate this on every change detection cycle, because there are some\n            // error triggers that we can't subscribe to (e.g. parent form submissions). This means\n            // that whatever logic is in here has to be super lean or we risk destroying the performance.\n            this.updateErrorState();\n        }\n\n        // We need to dirty-check the native element's value, because there are some cases where\n        // we won't be notified when it changes (e.g. the consumer isn't using forms or they're\n        // updating the value using `emitEvent: false`).\n        this.dirtyCheckNativeValue();\n    }\n\n    focus(): void {\n        this.elementRef.nativeElement.focus();\n    }\n\n    focusChanged(isFocused: boolean): void {\n        if (isFocused !== this.focused) {\n            this.focused = isFocused;\n            this.onTouched();\n            this.stateChanges.next();\n        }\n    }\n\n    onBlur() {\n        this.applyInputChanges();\n        this.focusChanged(false);\n    }\n\n    onPaste($event) {\n        $event.preventDefault();\n        const clipboardUserInput: string = $event.clipboardData.getData('text');\n\n        if (this.getDateFromTimeString(clipboardUserInput) === undefined) { return; }\n\n        this.elementRef.nativeElement.value = clipboardUserInput;\n        this.onInput();\n    }\n\n    onInput() {\n        const initialCursorStart: number = this.elementRef.nativeElement.selectionStart;\n        const initialCursorEnd: number = this.elementRef.nativeElement.selectionEnd;\n        let isAutocompleteTriggered: boolean = false;\n\n        const {\n            hoursOnly,\n            hoursAndMinutes,\n            hoursAndMinutesAndSeconds\n        } = this.getParsedTimeParts(this.elementRef.nativeElement.value);\n\n        // tslint:disable no-magic-numbers\n        if (hoursOnly &&\n            hoursOnly[1] &&\n            hoursOnly[1].length === 2) {\n            isAutocompleteTriggered = true;\n        } else if (hoursAndMinutes &&\n            hoursAndMinutes[1].length === 1 &&\n            hoursAndMinutes[2] &&\n            hoursAndMinutes[2].length === 2) {\n            isAutocompleteTriggered = true;\n        } else if (hoursAndMinutesAndSeconds &&\n            hoursAndMinutesAndSeconds[1].length === 2 &&\n            hoursAndMinutesAndSeconds[2].length === 2 &&\n            hoursAndMinutesAndSeconds[3] &&\n            hoursAndMinutesAndSeconds[3].length === 2) {\n            isAutocompleteTriggered = true;\n        }\n        // tslint:enable no-magic-numbers\n\n        this.applyInputChanges({ doTimestringReformat: isAutocompleteTriggered });\n\n        this.elementRef.nativeElement.selectionStart = initialCursorStart;\n        this.elementRef.nativeElement.selectionEnd = initialCursorEnd;\n\n        if (isAutocompleteTriggered && this.ngControl.errors === null) {\n            this.createSelectionOfTimeComponentInInput(initialCursorStart + 1);\n        }\n    }\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    get empty(): boolean {\n        return !this.elementRef.nativeElement.value && !this.isBadInput();\n    }\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    onContainerClick() {\n        this.focus();\n    }\n\n    writeValue(value: Date | null): void {\n        if (value !== null) {\n            this.renderer.setProperty(this.elementRef.nativeElement,\n                'value',\n                this.getTimeStringFromDate(value, this.timeFormat)\n            );\n        }\n        this.onChange(value || null);\n        this.applyInputChanges();\n    }\n\n    onKeyDown(event: KeyboardEvent): void {\n\n        const keyCode: string = this.getKeyCode(event);\n\n        if (keyCode === ARROW_UP_KEYCODE || keyCode === ARROW_DOWN_KEYCODE) {\n            this.upDownTimeByArrowKeys(event);\n        }\n        if (keyCode === ARROW_LEFT_KEYCODE || keyCode === ARROW_RIGHT_KEYCODE) {\n            this.switchSelectionBetweenTimeparts(event);\n        }\n    }\n\n    registerOnChange(fn: (value: Date) => void): void {\n        this.onChange = fn;\n    }\n\n    registerOnTouched(fn: () => void): void {\n        this.onTouched = fn;\n    }\n\n    /** Does some manual dirty checking on the native input `value` property. */\n    private dirtyCheckNativeValue() {\n        const newValue = this.value;\n\n        if (this.previousNativeValue !== newValue) {\n            this.previousNativeValue = newValue;\n            this.stateChanges.next();\n        }\n    }\n\n    /** Checks whether the input is invalid based on the native validation. */\n    private isBadInput(): boolean {\n        const validity = (<HTMLInputElement> this.elementRef.nativeElement).validity;\n\n        return validity && validity.badInput;\n    }\n\n    private applyInputChanges(applyParams: {\n        changedTime?: Date;\n        doTimestringReformat?: boolean;\n    } = {}): void {\n        const { changedTime, doTimestringReformat = true } = applyParams;\n\n        const timeToApply: Date | undefined = changedTime ||\n            this.getDateFromTimeString(this.elementRef.nativeElement.value);\n        this.currentDateTimeInput = timeToApply;\n\n        if (doTimestringReformat && timeToApply !== undefined) {\n            const selectionStart: number = this.elementRef.nativeElement.selectionStart;\n            const selectionEnd: number = this.elementRef.nativeElement.selectionEnd;\n            this.renderer.setProperty(\n                this.elementRef.nativeElement,\n                'value',\n                this.getTimeStringFromDate(timeToApply, this.timeFormat));\n            this.elementRef.nativeElement.selectionStart = selectionStart;\n            this.elementRef.nativeElement.selectionEnd = selectionEnd;\n        }\n\n        (<FormControl> this.ngControl.control).updateValueAndValidity();\n        const result = this.ngControl.errors === null && timeToApply !== undefined ? timeToApply : null;\n        this.onChange(result);\n        this.stateChanges.next();\n    }\n\n    private upDownTimeByArrowKeys(event: KeyboardEvent): void {\n        event.preventDefault();\n\n        let changedTime: Date | undefined = this.currentDateTimeInput;\n        if (changedTime !== undefined) {\n            const cursorPos = this.elementRef.nativeElement.selectionStart;\n\n            const modifiedTimePart = this.getTimeEditMetrics(cursorPos)\n                .modifiedTimePart;\n            const keyCode: string = this.getKeyCode(event);\n            if (keyCode === ARROW_UP_KEYCODE) { changedTime = this.incrementTime(changedTime, modifiedTimePart); }\n            if (keyCode === ARROW_DOWN_KEYCODE) { changedTime = this.decrementTime(changedTime, modifiedTimePart); }\n            this.applyInputChanges({ changedTime });\n            this.createSelectionOfTimeComponentInInput(cursorPos);\n        }\n    }\n\n    private switchSelectionBetweenTimeparts(event: KeyboardEvent): void {\n        const changedTime: Date | undefined = this.currentDateTimeInput;\n        const keyCode: string = this.getKeyCode(event);\n\n        if (changedTime !== undefined) {\n            let cursorPos: number = this.elementRef.nativeElement.selectionStart;\n            if (keyCode === ARROW_LEFT_KEYCODE) {\n                cursorPos = this.getCursorPositionOfPrevTimePartStart(cursorPos, this.elementRef.nativeElement.value);\n            } else if (keyCode === ARROW_RIGHT_KEYCODE) {\n                cursorPos = this.getCursorPositionOfNextTimePartStart(cursorPos, this.elementRef.nativeElement.value);\n            }\n            this.createSelectionOfTimeComponentInInput(cursorPos);\n        }\n    }\n\n    /**\n     * @description Microsoft EDGE doesn't support KeyboaedEvent.code thus we need this helper\n     */\n    private getKeyCode(event: KeyboardEvent): string {\n        return event.code || event.key;\n    }\n\n    private createSelectionOfTimeComponentInInput(cursorPos: number): void {\n        setTimeout(() => {\n            const newEditParams = this.getTimeEditMetrics(cursorPos);\n            this.elementRef.nativeElement.selectionStart = newEditParams.cursorStartPosition;\n            this.elementRef.nativeElement.selectionEnd = newEditParams.cursorEndPosition;\n        });\n    }\n\n    private incrementTime(dateVal: Date,\n                          whatToIncrement: TimeParts = TimeParts.seconds): Date {\n        let { hours, minutes, seconds } = this.getTimeDigitsFromDate(dateVal);\n\n        switch (whatToIncrement) {\n            case TimeParts.hours:\n                hours++;\n                break;\n            case TimeParts.minutes:\n                minutes++;\n                break;\n            case TimeParts.seconds:\n                seconds++;\n                break;\n            default:\n        }\n\n        if (seconds > SECONDS_PER_MINUTE) { seconds = 0; }\n\n        if (minutes > MINUTES_PER_HOUR) { minutes = 0; }\n\n        if (hours > HOURS_PER_DAY) { hours = 0; }\n\n        return <Date> this.getDateFromTimeDigits(hours, minutes, seconds);\n    }\n\n    /**\n     * @description Decrement part of time\n     */\n    private decrementTime(dateVal: Date,\n                          whatToDecrement: TimeParts = TimeParts.seconds): Date {\n        let { hours, minutes, seconds } = this.getTimeDigitsFromDate(dateVal);\n\n        switch (whatToDecrement) {\n            case TimeParts.hours:\n                hours--;\n                break;\n            case TimeParts.minutes:\n                minutes--;\n                break;\n            case TimeParts.seconds:\n                seconds--;\n                break;\n            default:\n        }\n\n        if (seconds < 0) { seconds = SECONDS_PER_MINUTE; }\n\n        if (minutes < 0) { minutes = MINUTES_PER_HOUR; }\n\n        if (hours < 0) { hours = HOURS_PER_DAY; }\n\n        return <Date> this.getDateFromTimeDigits(hours, minutes, seconds);\n    }\n\n    private getCursorPositionOfPrevTimePartStart(cursorPos: number, timeString: string): number {\n        return cursorPos === 0 ? timeString.length : cursorPos - 1;\n    }\n\n    private getCursorPositionOfNextTimePartStart(cursorPos: number,\n                                                 timeString: string,\n                                                 timeDevider: string = ':'): number {\n        const nextDividerPos: number = timeString.indexOf(timeDevider, cursorPos);\n\n        return nextDividerPos !== undefined ? nextDividerPos + 1 : 0;\n    }\n\n    /**\n     * @description Get params for arrow-keys (up/down) time valie edit.\n     * @param cursorPosition Current cursor position in timeString\n     */\n    private getTimeEditMetrics(cursorPosition: number): {\n        modifiedTimePart: TimeParts;\n        cursorStartPosition: number;\n        cursorEndPosition: number;\n    } {\n        const timeString: string = this.elementRef.nativeElement.value;\n        let modifiedTimePart: TimeParts;\n        let cursorStartPosition: number;\n        let cursorEndPosition: number;\n        const hoursIndex = 0;\n        const minutesIndex = timeString.indexOf(':', hoursIndex + 1);\n        const secondsIndex = minutesIndex !== -1 ? timeString.indexOf(':', minutesIndex + 1) : -1;\n\n        if (secondsIndex !== -1 && cursorPosition > secondsIndex) {\n            modifiedTimePart = TimeParts.seconds;\n            cursorStartPosition = secondsIndex + 1;\n            cursorEndPosition = timeString.length;\n        } else if (minutesIndex !== -1 && cursorPosition > minutesIndex) {\n            modifiedTimePart = TimeParts.minutes;\n            cursorStartPosition = minutesIndex + 1;\n            cursorEndPosition = secondsIndex > -1 ? secondsIndex : timeString.length;\n        } else {\n            modifiedTimePart = TimeParts.hours;\n            cursorStartPosition = hoursIndex;\n            cursorEndPosition = minutesIndex !== -1 ? minutesIndex : timeString.length;\n        }\n\n        return {\n            modifiedTimePart,\n            cursorStartPosition,\n            cursorEndPosition\n        };\n    }\n\n    /**\n     * @description Create time string for displaying inside input element of UI\n     */\n    private getTimeStringFromDate(tempVal: Date,\n                                  timeFormat: TimeFormats = DEFAULT_TIME_FORMAT): string {\n        const hours: string = this.getNumberWithLeadingZero(tempVal.getHours());\n        const minutes: string = this.getNumberWithLeadingZero(tempVal.getMinutes());\n        const seconds: string = this.getNumberWithLeadingZero(tempVal.getSeconds());\n\n        const formattedTimeGenerators = {\n            [TimeFormats.HHmm]: () => `${hours}:${minutes}`,\n            [TimeFormats.HHmmss]: () => `${hours}:${minutes}:${seconds}`\n        };\n\n        return formattedTimeGenerators[timeFormat]();\n    }\n\n    private getParsedTimeParts(timeString: string): {\n        hoursOnly: any;\n        hoursAndMinutes: any;\n        hoursAndMinutesAndSeconds: any;\n    } {\n        const hoursAndMinutesAndSeconds = timeString.match(HOURS_MINUTES_SECONDS_REGEXP);\n        const hoursAndMinutes = timeString.match(HOURS_MINUTES_REGEXP);\n        const hoursOnly = timeString.match(HOURS_ONLY_REGEXP);\n\n        return {\n            hoursOnly,\n            hoursAndMinutes,\n            hoursAndMinutesAndSeconds\n        };\n    }\n\n    /**\n     * @description Create Date object from separate parts of time\n     */\n    private getDateFromTimeDigits(hours: number, minutes: number, seconds: number = 0): Date | undefined {\n        return this.getDateFromTimeString(`${hours}:${minutes}:${seconds}`);\n    }\n\n    private getDateFromTimeString(timeString: string | undefined): Date | undefined {\n        // TODO Use moment-js\n        if (timeString === undefined) { return; }\n\n        const {\n            hoursOnly,\n            hoursAndMinutes,\n            hoursAndMinutesAndSeconds\n        } = this.getParsedTimeParts(timeString);\n\n        if (timeString.trim().length === 0 ||\n            hoursOnly === null && hoursAndMinutes === null && hoursAndMinutesAndSeconds === null) {\n            return;\n        }\n\n        // tslint:disable no-magic-numbers\n        let hours: number = 0;\n        let minutes: number = 0;\n        let seconds: number = 0;\n\n        if (hoursOnly) {\n            hours = Number(hoursOnly[1]);\n        } else if (hoursAndMinutes) {\n            hours = Number(hoursAndMinutes[1]);\n            minutes = Number(hoursAndMinutes[2]);\n        } else if (hoursAndMinutesAndSeconds) {\n            hours = Number(hoursAndMinutesAndSeconds[1]);\n            minutes = Number(hoursAndMinutesAndSeconds[2]);\n            seconds = Number(hoursAndMinutesAndSeconds[3]);\n        }\n        // const timestamp: number = Date.parse(fullDateString);\n        const resultDate: Date = new Date(1970, 0, 1, hours, minutes, seconds);\n        // tslint:enable no-magic-numbers\n\n        return isNaN(resultDate.getTime()) ? undefined : resultDate;\n    }\n\n    private getNumberWithLeadingZero(digit: number): string {\n        const MAX_DIGIT_WITH_LEADING_ZERO: number = 9;\n\n        return digit > MAX_DIGIT_WITH_LEADING_ZERO ? `${digit}` : `0${digit}`;\n    }\n\n    private getTimeDigitsFromDate(dateVal: Date): { hours: number; minutes: number; seconds: number } {\n        return {\n            hours: dateVal.getHours(),\n            minutes: dateVal.getMinutes(),\n            seconds: dateVal.getSeconds()\n        };\n    }\n\n    private parseValidator(): ValidationErrors | null {\n        return this.currentDateTimeInput === undefined ?\n            { mcTimepickerParse: { text: this.elementRef.nativeElement.value } } :\n            null;\n    }\n\n    private minTimeValidator(): ValidationErrors | null {\n\n        if (this.currentDateTimeInput !== undefined &&\n            this.minDateTime !== undefined &&\n            this.isTimeLowerThenMin(this.currentDateTimeInput)) {\n            return { mcTimepickerLowerThenMintime: { text: this.elementRef.nativeElement.value } };\n        }\n\n        return null;\n    }\n\n    private maxTimeValidator(): ValidationErrors | null {\n        if (this.currentDateTimeInput !== undefined &&\n            this.maxDateTime !== undefined &&\n            this.isTimeGreaterThenMax(this.currentDateTimeInput)) {\n            return { mcTimepickerHigherThenMaxtime: { text: this.elementRef.nativeElement.value } };\n        }\n\n        return null;\n    }\n\n    private isTimeLowerThenMin(timeToCompare: Date): boolean {\n        return timeToCompare.getTime() - (<Date> this.minDateTime).getTime() < 0;\n    }\n\n    private isTimeGreaterThenMax(timeToCompare: Date): boolean {\n        return timeToCompare.getTime() - (<Date> this.maxDateTime).getTime() >= 0;\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\n\nimport { A11yModule } from '@ptsecurity/cdk/a11y';\nimport { PlatformModule } from '@ptsecurity/cdk/platform';\n\nimport { McTimepicker } from './timepicker';\n\n\n@NgModule({\n    imports: [\n        CommonModule,\n        A11yModule,\n        PlatformModule,\n        FormsModule\n    ],\n    declarations: [\n        McTimepicker\n    ],\n    exports: [\n        McTimepicker\n    ]\n})\nexport class McTimepickerModule {}\n","import {\n    animate,\n    AnimationTriggerMetadata,\n    state,\n    style,\n    transition,\n    trigger,\n    query,\n    animateChild,\n    group\n} from '@angular/animations';\n\n\n/**\n * The following are all the animations for the mat-select component, with each\n * const containing the metadata for one animation.\n *\n * The values below match the implementation of the AngularJS Material mat-select animation.\n */\nexport const mcSelectAnimations: {\n    readonly transformPanel: AnimationTriggerMetadata;\n    readonly fadeInContent: AnimationTriggerMetadata;\n} = {\n    /**\n     * This animation transforms the select's overlay panel on and off the page.\n     *\n     * When the panel is attached to the DOM, it expands its width by the amount of padding, scales it\n     * up to 100% on the Y axis, fades in its border, and translates slightly up and to the\n     * side to ensure the option text correctly overlaps the trigger text.\n     *\n     * When the panel is removed from the DOM, it simply fades out linearly.\n     */\n    transformPanel: trigger('transformPanel', [\n        state('void', style({\n            transform: 'scaleY(0)',\n            minWidth: '100%',\n            opacity: 0\n        })),\n        transition('void => *', group([\n            query('@fadeInContent', animateChild()),\n            animate('150ms cubic-bezier(0.25, 0.8, 0.25, 1)')\n        ])),\n        transition('* => void', [\n            animate('250ms 100ms linear', style({ opacity: 0 }))\n        ])\n    ]),\n\n    /**\n     * This animation fades in the background color and text content of the\n     * select's options. It is time delayed to occur 100ms after the overlay\n     * panel has transformed in.\n     */\n    fadeInContent: trigger('fadeInContent', [\n        state('showing', style({ opacity: 1 })),\n        transition('void => showing', [\n            style({ opacity: 0 }),\n            animate('150ms 100ms cubic-bezier(0.55, 0, 0.55, 0.2)')\n        ])\n    ])\n};\n\n\n/**\n * @deprecated\n * @breaking-change 7.0.0\n */\nexport const transformPanel = mcSelectAnimations.transformPanel;\n\n/**\n * @deprecated\n * @breaking-change 7.0.0\n */\nexport const fadeInContent = mcSelectAnimations.fadeInContent;\n","import { ComponentRef, Injectable } from '@angular/core';\n\nimport { Observable } from 'rxjs';\nimport { filter } from 'rxjs/operators';\n\nimport { ESCAPE } from '@ptsecurity/cdk/keycodes';\nimport { Overlay, OverlayRef } from '@ptsecurity/cdk/overlay';\nimport { ComponentPortal } from '@ptsecurity/cdk/portal';\n\nimport { McModalControlService } from './modal-control.service';\nimport { McModalRef } from './modal-ref.class';\nimport { McModalComponent } from './modal.component';\nimport { ConfirmType, IModalOptions, IModalOptionsForService } from './modal.type';\n\n\n// A builder used for managing service creating modals\nexport class ModalBuilderForService {\n\n    // Modal ComponentRef, \"null\" means it has been destroyed\n    private modalRef: ComponentRef<McModalComponent>;\n    private overlayRef: OverlayRef;\n\n    constructor(private overlay: Overlay, options: IModalOptionsForService = {}) {\n        this.createModal();\n\n        if (!('mcGetContainer' in options)) {\n            options.mcGetContainer = null;\n        }\n\n        this.changeProps(options);\n        this.modalRef.instance.open();\n        this.modalRef.instance.mcAfterClose.subscribe(() => this.destroyModal());\n\n        this.overlayRef.keydownEvents()\n            // @ts-ignore\n            .pipe(filter((event: KeyboardEvent) => {\n                return event.keyCode === ESCAPE && options.mcCloseByESC;\n            }))\n            .subscribe(() => this.modalRef.instance.close());\n    }\n\n    getInstance(): McModalComponent {\n        return this.modalRef && this.modalRef.instance;\n    }\n\n    destroyModal(): void {\n        if (this.modalRef) {\n            this.overlayRef.dispose();\n            // @ts-ignore\n            this.modalRef = null;\n        }\n    }\n\n    private changeProps(options: IModalOptions): void {\n        if (this.modalRef) {\n            // here not limit user's inputs at runtime\n            Object.assign(this.modalRef.instance, options);\n        }\n    }\n\n    // Create component to ApplicationRef\n    private createModal(): void {\n        this.overlayRef = this.overlay.create();\n        this.modalRef = this.overlayRef.attach(new ComponentPortal(McModalComponent));\n    }\n}\n\n@Injectable()\nexport class McModalService {\n    // Track of the current close modals (we assume invisible is close this time)\n    get openModals(): McModalRef[] {\n        return this.modalControl.openModals;\n    }\n\n    get afterAllClose(): Observable<void> {\n        return this.modalControl.afterAllClose.asObservable();\n    }\n\n    constructor(\n        private overlay: Overlay,\n        private modalControl: McModalControlService) {\n    }\n\n    // Closes all of the currently-open dialogs\n    closeAll(): void {\n        this.modalControl.closeAll();\n    }\n\n    create<T>(options: IModalOptionsForService<T> = {}): McModalRef<T> {\n\n        if (typeof options.mcOnCancel !== 'function') {\n            // Leave a empty function to close this modal by default\n            // tslint:disable-next-line\n            options.mcOnCancel = () => {};\n        }\n\n        if (!('mcCloseByESC' in options)) {\n            options.mcCloseByESC = true;\n        }\n\n\n        if (!('mcWidth' in options)) {\n            // tslint:disable-next-line\n            options.mcWidth = 480;\n        }\n\n        return new ModalBuilderForService(this.overlay, options).getInstance();\n    }\n\n    confirm<T>(options: IModalOptionsForService<T> = {}, confirmType: ConfirmType = 'confirm'): McModalRef<T> {\n        if ('mcFooter' in options) {\n            console.warn(`The Confirm-Modal doesn't support \"mcFooter\", this property will be ignored.`);\n        }\n\n        // NOTE: only support function currently by calling confirm()\n        if (typeof options.mcOnOk !== 'function') {\n            // Leave a empty function to close this modal by default\n            // tslint:disable-next-line\n            options.mcOnOk = () => {};\n        }\n\n        options.mcModalType = 'confirm';\n        options.mcClassName = `mc-confirm mc-confirm-${confirmType} ${options.mcClassName || ''}`;\n        options.mcMaskClosable = false;\n\n        return this.create(options);\n    }\n\n    success<T>(options: IModalOptionsForService<T> = {}): McModalRef<T> {\n        return this.simpleConfirm(options, 'success');\n    }\n\n    delete<T>(options: IModalOptionsForService<T> = {}): McModalRef<T> {\n        return this.simpleConfirm(options, 'warn');\n    }\n\n    private simpleConfirm<T>(options: IModalOptionsForService<T> = {}, confirmType: ConfirmType): McModalRef<T> {\n        // Remove the Cancel button if the user not specify a Cancel button\n        if (!('mcCancelText' in options)) {\n            // @ts-ignore\n            options.mcCancelText = null;\n        }\n\n        return this.confirm(options, confirmType);\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { OverlayModule } from '@ptsecurity/cdk/overlay';\nimport { McButtonModule } from '@ptsecurity/mosaic/button';\nimport { McIconModule } from '@ptsecurity/mosaic/icon';\n\nimport { CssUnitPipe } from './css-unit.pipe';\nimport { McModalControlService } from './modal-control.service';\nimport { McModalComponent } from './modal.component';\nimport { McModalService } from './modal.service';\n\n\n@NgModule({\n    imports: [ CommonModule, OverlayModule, McButtonModule, McIconModule ],\n    exports: [ McModalComponent ],\n    declarations: [ McModalComponent, CssUnitPipe ],\n    entryComponents: [ McModalComponent ],\n    providers: [ McModalControlService, McModalService ]\n})\nexport class McModalModule { }\n","import { fromEvent, Observable, Subscription } from 'rxjs';\nimport { debounceTime } from 'rxjs/operators';\n\nimport {\n    AfterViewInit,\n    Component, Directive,\n    ElementRef,\n    HostBinding,\n    Input,\n    OnDestroy,\n    OnInit,\n    ViewEncapsulation,\n    ContentChild,\n    TemplateRef,\n    ChangeDetectorRef,\n    ChangeDetectionStrategy,\n    ViewChild\n} from '@angular/core';\nimport { FocusMonitor, FocusOrigin } from '@ptsecurity/cdk/a11y';\nimport { SPACE } from '@ptsecurity/cdk/keycodes';\nimport { Platform } from '@ptsecurity/cdk/platform';\nimport { CanDisable, CanDisableCtor, mixinDisabled } from '@ptsecurity/mosaic/core';\n\n\nconst COLLAPSED_CLASS: string = 'mc-navbar-collapsed-title';\nconst MC_ICON = 'mc-icon';\nconst MC_NAVBAR = 'mc-navbar';\nconst MC_NAVBAR_CONTAINER = 'mc-navbar-container';\nconst MC_NAVBAR_ITEM = 'mc-navbar-item';\nconst MC_NAVBAR_BRAND = 'mc-navbar-brand';\nconst MC_NAVBAR_TITLE = 'mc-navbar-title';\nconst MC_NAVBAR_LOGO = 'mc-navbar-logo';\n\nexport type McNavbarContainerPositionType = 'left' | 'right';\n\nexport interface IMcNavbarDropdownItem {\n    link?: string;\n    text: string;\n}\n\n@Directive({\n    selector: MC_NAVBAR_LOGO,\n    host: {\n        class: MC_NAVBAR_LOGO\n    }\n})\nexport class McNavbarLogo {}\n\n@Directive({\n    selector: MC_NAVBAR_BRAND,\n    host: {\n        class: MC_NAVBAR_BRAND\n    }\n})\nexport class McNavbarBrand {}\n\n@Directive({\n    selector: MC_NAVBAR_TITLE,\n    host: {\n        class: MC_NAVBAR_TITLE\n    }\n})\nexport class McNavbarTitle {}\n\nexport class McNavbarItemBase {\n    constructor(public _elementRef: ElementRef) {}\n}\n\nexport const _McNavbarMixinBase: CanDisableCtor & typeof McNavbarItemBase = mixinDisabled(McNavbarItemBase);\n\n@Component({\n    selector: MC_NAVBAR_ITEM,\n    template: `\n        <a\n            [attr.tabindex]=\\\"disabled ? -1 : tabIndex\\\"\n            (click)=\"handleClickByItem()\"\n            (keydown)=\"handleKeydown($event)\"\n            class=\"mc-navbar-item\"\n        >\n            <ng-content></ng-content>\n            <i *ngIf=\"hasDropdownContent\" mc-icon=\"mc-angle-M_16\"></i>\n        </a>\n        <ul\n            #dropdownContent\n            *ngIf=\"hasDropdownContent\"\n            [ngClass]=\"{ 'is-collapsed': isCollapsed }\"\n            class=\"mc-navbar-dropdown\"\n        >\n            <li\n                *ngFor=\"let item of dropdownItems\"\n                (click)=\"handleClickByDropdownItem()\"\n                class=\"mc-navbar-dropdown-item\"\n            >\n                <ng-container *ngIf=\"dropdownItemTmpl\">\n                    <ng-container *ngTemplateOutlet=\"dropdownItemTmpl; context: { $implicit: item }\"></ng-container>\n                </ng-container>\n                <a\n                    *ngIf=\"!dropdownItemTmpl\"\n                    [attr.href]=\"item.link\"\n                    [ngClass]=\"{ 'is-active': isActiveDropdownLink(item.link) }\"\n                    class=\"mc-navbar-dropdown-link\"\n                >{{ item.text }}</a>\n            </li>\n        </ul>\n    `,\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    inputs: ['disabled'],\n    host: {\n        '[attr.disabled]': 'disabled || null',\n        '[attr.tabindex]': '-1'\n    }\n})\nexport class McNavbarItem extends _McNavbarMixinBase implements OnInit, AfterViewInit, OnDestroy, CanDisable {\n\n    @Input()\n    tabIndex: number = 0;\n\n    @Input()\n    dropdownItems: IMcNavbarDropdownItem[] = [];\n\n    @Input()\n    set collapsedTitle(value: string) {\n        this.elementRef.nativeElement.setAttribute('computedTitle', encodeURI(value));\n    }\n\n    @ContentChild('dropdownItemTmpl', { read: TemplateRef })\n    dropdownItemTmpl: TemplateRef<IMcNavbarDropdownItem>;\n\n    @ViewChild('dropdownContent', { read: ElementRef })\n    dropdownContent: ElementRef;\n\n    get hasDropdownContent() {\n        return this.dropdownItems.length > 0;\n    }\n\n    isCollapsed: boolean = true;\n\n    private _subscription: Subscription = new Subscription();\n    private _focusMonitor$: Observable<FocusOrigin>;\n\n    private get _dropdownElements(): HTMLElement[] {\n        return this.dropdownContent ? this.dropdownContent.nativeElement.querySelectorAll('li > *') : [];\n    }\n\n    constructor(\n        public  elementRef: ElementRef,\n        private _focusMonitor: FocusMonitor,\n        private _platform: Platform,\n        private _cdRef: ChangeDetectorRef\n    ) {\n        super(elementRef);\n    }\n\n    ngOnInit() {\n        this.denyClickIfDisabled();\n\n        this._focusMonitor$ = this._focusMonitor.monitor(this.elementRef.nativeElement, true);\n\n        if (this.hasDropdownContent) {\n            this.listenClickOutside();\n        }\n    }\n\n    ngAfterViewInit() {\n        if (!this.hasDropdownContent) {\n            return;\n        }\n\n        this.startListenFocusDropdownItems();\n    }\n\n    ngOnDestroy() {\n        this._subscription.unsubscribe();\n        this._focusMonitor.stopMonitoring(this.elementRef.nativeElement);\n        this.stopListenFocusDropdownItems();\n    }\n\n    isActiveDropdownLink(link: string): boolean {\n        if (!this._platform.isBrowser) {\n            return false;\n        }\n\n        return window.location.href.indexOf(link) >= 0;\n    }\n\n    handleClickByItem() {\n        this.toggleDropdown();\n    }\n\n    handleKeydown($event: KeyboardEvent) {\n        const isNavbarItem = ($event.target as HTMLElement).classList.contains(MC_NAVBAR_ITEM);\n\n        // tslint:disable-next-line\n        if (this.hasDropdownContent && $event.keyCode === SPACE && isNavbarItem) {\n            this.toggleDropdown();\n        }\n    }\n\n    handleClickByDropdownItem() {\n        this.forceCloseDropdown();\n    }\n\n    private listenClickOutside() {\n        this._subscription.add(\n            this._focusMonitor$.subscribe((origin) => {\n                if (origin === null) {\n                    this.forceCloseDropdown();\n                }\n            })\n        );\n    }\n\n    private toggleDropdown() {\n        this.isCollapsed = !this.isCollapsed;\n    }\n\n    private forceCloseDropdown() {\n        this.isCollapsed = true;\n        this._cdRef.detectChanges();\n    }\n\n    private startListenFocusDropdownItems() {\n        this._dropdownElements.forEach((el) => {\n            this._focusMonitor.monitor(el, true);\n        });\n    }\n\n    private stopListenFocusDropdownItems() {\n        this._dropdownElements.forEach((el) => {\n            this._focusMonitor.stopMonitoring(el);\n        });\n    }\n\n    // This method is required due to angular 2 issue https://github.com/angular/angular/issues/11200\n    private denyClickIfDisabled() {\n        const events: Event[] = this.elementRef.nativeElement.eventListeners('click');\n\n        events.forEach((event) => this.elementRef.nativeElement.removeEventListener('click', event));\n\n        this.elementRef.nativeElement.addEventListener('click', (event: MouseEvent) => {\n            if (this.elementRef.nativeElement.hasAttribute('disabled')) {\n                event.stopImmediatePropagation();\n            }\n        }, true);\n\n        events.forEach((event) => this.elementRef.nativeElement.addEventListener('click', event));\n    }\n}\n\n@Directive({\n    selector: MC_NAVBAR_CONTAINER\n})\nexport class McNavbarContainer {\n    @Input()\n    position: McNavbarContainerPositionType = 'left';\n\n    @HostBinding('class')\n    get cssClasses(): string {\n        return this.position === 'left' ? 'mc-navbar-left' : 'mc-navbar-right';\n    }\n}\n\nclass CollapsibleItem {\n    private _collapsed: boolean = false;\n\n    constructor(\n        public element: HTMLElement,\n        public width: number\n    ) {}\n\n    processCollapsed(collapsed: boolean) {\n        this._collapsed = collapsed;\n\n        this.updateCollapsedClass();\n    }\n\n    private updateCollapsedClass() {\n        if (this._collapsed) {\n            this.element.classList.add(COLLAPSED_CLASS);\n        } else {\n            this.element.classList.remove(COLLAPSED_CLASS);\n        }\n\n    }\n}\n\nclass CachedItemWidth {\n\n    get canCollapse(): boolean {\n        return this.itemsForCollapse.length > 0;\n    }\n\n    private _collapsedItemsWidth: number;\n\n    get collapsedItemsWidth(): number {\n        if (this._collapsedItemsWidth !== undefined) {\n            return this._collapsedItemsWidth;\n        }\n\n        this.calculateAndCacheCollapsedItemsWidth();\n\n        return this._collapsedItemsWidth;\n    }\n\n    constructor(\n        public element: HTMLElement,\n        public width: number,\n        public itemsForCollapse: CollapsibleItem[] = []\n    ) {}\n\n    processCollapsed(collapsed: boolean) {\n        if (this.itemsForCollapse.length > 0) {\n            this.updateTitle(collapsed);\n        }\n\n        this.itemsForCollapse.forEach((item) => item.processCollapsed(collapsed));\n    }\n\n    private calculateAndCacheCollapsedItemsWidth() {\n        this._collapsedItemsWidth = this.itemsForCollapse\n            .reduce((acc, item) => acc + item.width, 0);\n    }\n\n    private getTitle(): string {\n        const computedTitle = this.element.getAttribute('computedTitle');\n\n        return computedTitle\n            ? decodeURI(computedTitle)\n            : (this.itemsForCollapse.length > 0 ? this.itemsForCollapse[0].element.innerText : '');\n    }\n\n    private updateTitle(collapsed: boolean) {\n        if (collapsed) {\n            this.element.setAttribute('title', this.getTitle());\n        } else {\n            this.element.removeAttribute('title');\n        }\n    }\n}\n\n\n@Component({\n    selector: MC_NAVBAR,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    template: `\n        <nav class=\"mc-navbar\">\n            <ng-content select=\"[${MC_NAVBAR_CONTAINER}],${MC_NAVBAR_CONTAINER}\"></ng-content>\n        </nav>\n    `,\n    styleUrls: ['./navbar.css'],\n    encapsulation: ViewEncapsulation.None\n})\nexport class McNavbar implements AfterViewInit, OnDestroy {\n\n    private readonly forceRecalculateItemsWidth: boolean = false;\n    private readonly resizeDebounceInterval: number = 100;\n    private readonly firstLevelElement: string = MC_NAVBAR_CONTAINER;\n    private readonly secondLevelElements: string[] = [\n        MC_NAVBAR_ITEM,\n        MC_NAVBAR_BRAND,\n        MC_NAVBAR_TITLE\n    ];\n\n    private _totalItemsWidths: number;\n    private _itemsWidths: CachedItemWidth[];\n\n    private get maxAllowedWidth(): number {\n        return this._elementRef.nativeElement.querySelector('nav').getBoundingClientRect().width;\n    }\n\n    private get itemsWidths(): CachedItemWidth[] {\n        if (this._itemsWidths !== undefined && !this.forceRecalculateItemsWidth) {\n            return this._itemsWidths;\n        }\n\n        this.calculateAndCacheItemsWidth();\n\n        return this._itemsWidths;\n    }\n\n    private get totalItemsWidth(): number {\n        if (this._totalItemsWidths !== undefined && !this.forceRecalculateItemsWidth) {\n            return this._totalItemsWidths;\n        }\n\n        this.calculateAndCacheTotalItemsWidth();\n\n        return this._totalItemsWidths;\n    }\n\n    private _resizeSubscription: Subscription;\n\n    constructor(\n        private _elementRef: ElementRef\n    ) {\n        const resizeObserver = fromEvent(window, 'resize')\n            .pipe(debounceTime(this.resizeDebounceInterval));\n\n        this._resizeSubscription = resizeObserver.subscribe(this.updateCollapsed.bind(this));\n    }\n\n    updateCollapsed(): void {\n        let collapseDelta = this.totalItemsWidth - this.maxAllowedWidth;\n\n        for (let i = this.itemsWidths.length - 1; i >= 0; i--) {\n            const item = this.itemsWidths[i];\n\n            if (!item.canCollapse) {\n                continue;\n            }\n\n            item.processCollapsed(collapseDelta > 0);\n            collapseDelta -= item.collapsedItemsWidth;\n        }\n    }\n\n    ngAfterViewInit(): void {\n        // Note: this wait is required for loading and rendering fonts for icons;\n        // unfortunately we cannot control font rendering\n        setTimeout(() => this.updateCollapsed(), 0);\n    }\n\n    ngOnDestroy() {\n        this._resizeSubscription.unsubscribe();\n    }\n\n    private calculateAndCacheTotalItemsWidth() {\n        this._totalItemsWidths = this.itemsWidths\n            .reduce((acc, item) => acc + item.width, 0);\n    }\n\n    private getOuterElementWidth(element: HTMLElement): number {\n        const baseWidth  = element.getBoundingClientRect().width;\n        const marginRight = parseInt(getComputedStyle(element).getPropertyValue('margin-right'));\n        const marginLeft = parseInt(getComputedStyle(element).getPropertyValue('margin-left'));\n\n        return baseWidth + marginRight + marginLeft;\n    }\n\n    private calculateAndCacheItemsWidth() {\n        const allItemsSelector = this.secondLevelElements\n            .map((e: string) => `${this.firstLevelElement}>${e}`);\n        const allItems: HTMLElement[] = Array.from(this._elementRef.nativeElement.querySelectorAll(allItemsSelector));\n\n        this._itemsWidths = allItems\n            .map((el) => new CachedItemWidth(el, this.getOuterElementWidth(el), this.getItemsForCollapse(el)));\n    }\n\n    private getItemsForCollapse(element: HTMLElement): CollapsibleItem[] {\n        const icon = element.querySelector(`[${MC_ICON}],${MC_NAVBAR_LOGO},[${MC_NAVBAR_LOGO}]`);\n\n        if (!icon) {\n            return [];\n        }\n\n        return Array.from(element.querySelectorAll(MC_NAVBAR_TITLE))\n            .map((el) => new CollapsibleItem(<HTMLElement> el, el.getBoundingClientRect().width));\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { A11yModule } from '@ptsecurity/cdk/a11y';\nimport { PlatformModule } from '@ptsecurity/cdk/platform';\n\nimport { McIconModule } from '@ptsecurity/mosaic/icon';\n\nimport {\n    McNavbar,\n    McNavbarContainer,\n    McNavbarItem,\n    McNavbarTitle,\n    McNavbarBrand,\n    McNavbarLogo\n} from './navbar.component';\n\n\n@NgModule({\n    imports: [\n        CommonModule,\n        A11yModule,\n        PlatformModule,\n        McIconModule\n    ],\n    exports: [\n        McNavbar,\n        McNavbarContainer,\n        McNavbarTitle,\n        McNavbarItem,\n        McNavbarBrand,\n        McNavbarLogo\n    ],\n    declarations: [\n        McNavbar,\n        McNavbarContainer,\n        McNavbarTitle,\n        McNavbarItem,\n        McNavbarBrand,\n        McNavbarLogo\n    ]\n})\nexport class McNavbarModule {}\n","import {\n    ChangeDetectionStrategy,\n    Component,\n    ViewEncapsulation,\n    ElementRef,\n    Input\n} from '@angular/core';\nimport { CanColor, CanColorCtor, mixinColor, ThemePalette } from '@ptsecurity/mosaic/core';\n\n\nexport type ProgressBarMode = 'determinate' | 'indeterminate';\n\nlet idIterator = 0;\n\nconst MIN_PERCENT = 0;\nconst MAX_PERCENT = 100;\n\nexport class McProgressBarBase {\n    constructor(public _elementRef: ElementRef) {}\n}\n\nexport const _McProgressBarMixinBase:\n    CanColorCtor &\n    typeof McProgressBarBase =\n        mixinColor(McProgressBarBase);\n\n@Component({\n    selector: 'mc-progress-bar',\n    templateUrl: './progress-bar.component.html',\n    styleUrls: ['./progress-bar.css'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n    host: {\n        class: 'mc-progress-bar',\n        '[attr.id]': 'id'\n    }\n})\nexport class McProgressBar extends _McProgressBarMixinBase implements CanColor {\n    @Input() id: string = `mc-progress-bar-${idIterator++}`;\n    @Input() value: number = 0;\n    @Input() mode: ProgressBarMode = 'determinate';\n    @Input() color: ThemePalette = ThemePalette.Primary;\n\n    constructor(elementRef: ElementRef) {\n        super(elementRef);\n    }\n\n    get percentage(): number {\n        return Math.max(MIN_PERCENT, Math.min(MAX_PERCENT, this.value)) / MAX_PERCENT;\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { PlatformModule } from '@ptsecurity/cdk/platform';\n\nimport {\n    McProgressBar\n} from './progress-bar.component';\n\n\n@NgModule({\n    imports: [\n        CommonModule,\n        PlatformModule\n    ],\n    exports: [\n        McProgressBar\n    ],\n    declarations: [\n        McProgressBar\n    ]\n})\nexport class McProgressBarModule {}\n","import {\n    ChangeDetectionStrategy,\n    Component,\n    ViewEncapsulation,\n    ElementRef,\n    Input\n} from '@angular/core';\nimport { CanColor, CanColorCtor, mixinColor, ThemePalette } from '@ptsecurity/mosaic/core';\n\n\nexport type ProgressSpinnerMode = 'determinate' | 'indeterminate';\n\nlet idIterator = 0;\n\nconst MIN_PERCENT = 0;\nconst MAX_PERCENT = 100;\n\nexport class McProgressSpinnerBase {\n    constructor(public _elementRef: ElementRef) {}\n}\n\nexport const _McProgressSpinnerMixinBase:\n    CanColorCtor &\n    typeof McProgressSpinnerBase =\n        mixinColor(McProgressSpinnerBase);\n\nconst MAX_DASH_ARRAY = 273;\n\n@Component({\n    selector: 'mc-progress-spinner',\n    templateUrl: './progress-spinner.component.html',\n    styleUrls: ['./progress-spinner.css'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n    host: {\n        class: 'mc-progress-spinner',\n        '[attr.id]': 'id'\n    }\n})\nexport class McProgressSpinner extends _McProgressSpinnerMixinBase implements CanColor {\n    @Input() id: string = `mc-progress-spinner-${idIterator++}`;\n    @Input() value: number = 0;\n    @Input() mode: ProgressSpinnerMode = 'determinate';\n    @Input() color: ThemePalette = ThemePalette.Primary;\n\n    constructor(elementRef: ElementRef) {\n        super(elementRef);\n    }\n\n    get percentage(): number {\n        return Math.max(MIN_PERCENT, Math.min(MAX_PERCENT, this.value)) / MAX_PERCENT;\n    }\n\n    get dashOffsetPercent(): string {\n        return `${MAX_DASH_ARRAY - this.percentage * MAX_DASH_ARRAY}%`;\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { PlatformModule } from '@ptsecurity/cdk/platform';\n\nimport { McProgressSpinner } from './progress-spinner.component';\n\n\n@NgModule({\n    imports: [\n        CommonModule,\n        PlatformModule\n    ],\n    exports: [\n        McProgressSpinner\n    ],\n    declarations: [\n        McProgressSpinner\n    ]\n})\nexport class McProgressSpinnerModule {}\n","import {\n    AfterContentInit,\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component, ContentChildren, Directive, ElementRef, EventEmitter, forwardRef,\n    Input, OnDestroy, OnInit, Optional, Output, QueryList,\n    ViewChild,\n    ViewEncapsulation\n} from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\n\nimport { UniqueSelectionDispatcher } from '@ptsecurity/cdk/collections';\n\nimport {\n    CanColor, CanColorCtor,\n    CanDisable, CanDisableCtor,\n    HasTabIndex, HasTabIndexCtor,\n    mixinColor,\n    mixinDisabled,\n    mixinTabIndex,\n    toBoolean\n} from '@ptsecurity/mosaic/core';\n\n\n// Increasing integer for generating unique ids for radio components.\nlet nextUniqueId = 0;\n\n/** Change event object emitted by McRadio. */\nexport class McRadioChange {\n    constructor(\n        /** The McRadioButton that emits the change event. */\n        public source: McRadioButton,\n        /** The value of the McRadioButton. */\n        public value: any) {}\n}\n\n// Boilerplate for applying mixins to McRadioGroup.\n/** @docs-private */\nexport class McRadioGroupBase {}\nexport const _McRadioGroupMixinBase: CanDisableCtor & typeof McRadioGroupBase = mixinDisabled(McRadioGroupBase);\n\n/**\n * Provider Expression that allows mc-radio-group to register as a ControlValueAccessor. This\n * allows it to support [(ngModel)] and ngControl.\n * @docs-private\n */\nexport const MC_RADIO_GROUP_CONTROL_VALUE_ACCESSOR: any = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => McRadioGroup),\n    multi: true\n};\n\n@Directive({\n    selector: 'mc-radio-group',\n    exportAs: 'mcRadioGroup',\n    providers: [MC_RADIO_GROUP_CONTROL_VALUE_ACCESSOR],\n    host: {\n        role: 'radiogroup',\n        class: 'mc-radio-group'\n    },\n    inputs: ['disabled']\n})\nexport class McRadioGroup extends _McRadioGroupMixinBase\n    implements AfterContentInit, ControlValueAccessor, CanDisable {\n\n    /** Name of the radio button group. All radio buttons inside this group will use this name. */\n    @Input()\n    get name(): string { return this._name; }\n    set name(value: string) {\n        this._name = value;\n        this.updateRadioButtonNames();\n    }\n\n    /** Whether the labels should appear after or before the radio-buttons. Defaults to 'after' */\n    @Input()\n    get labelPosition(): 'before' | 'after' {\n        return this._labelPosition;\n    }\n    set labelPosition(v) {\n        this._labelPosition = v === 'before' ? 'before' : 'after';\n        this.markRadiosForCheck();\n    }\n\n    /** Value of the radio button. */\n    @Input()\n    get value(): any { return this._value; }\n    set value(newValue: any) {\n        if (this._value !== newValue) {\n            // Set this before proceeding to ensure no circular loop occurs with selection.\n            this._value = newValue;\n\n            this.updateSelectedRadioFromValue();\n            this.checkSelectedRadioButton();\n        }\n    }\n\n    /** Whether the radio button is selected. */\n    @Input()\n    get selected() { return this._selected; }\n    set selected(selected: McRadioButton | null) {\n        this._selected = selected;\n        this.value = selected ? selected.value : null;\n        this.checkSelectedRadioButton();\n    }\n\n    /** Whether the radio group is disabled */\n    @Input()\n    get disabled(): boolean { return this._disabled; }\n    set disabled(value) {\n        this._disabled = toBoolean(value);\n        this.markRadiosForCheck();\n    }\n\n    /** Whether the radio group is required */\n    @Input()\n    get required(): boolean { return this._required; }\n    set required(value: boolean) {\n        this._required = toBoolean(value);\n        this.markRadiosForCheck();\n    }\n\n    /**\n     * Event emitted when the group value changes.\n     * Change events are only emitted when the value changes due to user interaction with\n     * a radio button (the same behavior as `<input type-\"radio\">`).\n     */\n    @Output() readonly change: EventEmitter<McRadioChange> = new EventEmitter<McRadioChange>();\n\n    /** Child radio buttons. */\n    @ContentChildren(forwardRef(() => McRadioButton), { descendants: true })\n    _radios: QueryList<McRadioButton>;\n\n    /**\n     * Selected value for group. Should equal the value of the selected radio button if there *is*\n     * a corresponding radio button with a matching value. If there is *not* such a corresponding\n     * radio button, this value persists to be applied in case a new radio button is added with a\n     * matching value.\n     */\n    private _value: any = null;\n\n    /** The HTML name attribute applied to radio buttons in this group. */\n    private _name: string = `mc-radio-group-${nextUniqueId++}`;\n\n    /** The currently selected radio button. Should match value. */\n    private _selected: McRadioButton | null = null;\n\n    /** Whether the `value` has been set to its initial value. */\n    private _isInitialized: boolean = false;\n\n    /** Whether the labels should appear after or before the radio-buttons. Defaults to 'after' */\n    private _labelPosition: 'before' | 'after' = 'after';\n\n    /** Whether the radio group is disabled. */\n    private _disabled: boolean = false;\n\n    /** Whether the radio group is required. */\n    private _required: boolean = false;\n\n    constructor(\n        private readonly _changeDetector: ChangeDetectorRef\n    ) {\n        super();\n    }\n\n    /** The method to be called in order to update ngModel */\n    // tslint:disable-next-line\n    controlValueAccessorChangeFn: (value: any) => void = () => {};\n\n    /**\n     * onTouch function registered via registerOnTouch (ControlValueAccessor).\n     * @docs-private\n     */\n    // tslint:disable-next-line\n    onTouched: () => any = () => {};\n\n    checkSelectedRadioButton() {\n        if (this._selected && !this._selected.checked) {\n            this._selected.checked = true;\n        }\n    }\n\n    /**\n     * Initialize properties once content children are available.\n     * This allows us to propagate relevant attributes to associated buttons.\n     */\n    ngAfterContentInit() {\n        // Mark this component as initialized in AfterContentInit because the initial value can\n        // possibly be set by NgModel on McRadioGroup, and it is possible that the OnInit of the\n        // NgModel occurs *after* the OnInit of the McRadioGroup.\n        this._isInitialized = true;\n    }\n\n    /**\n     * Mark this group as being \"touched\" (for ngModel). Meant to be called by the contained\n     * radio buttons upon their blur.\n     */\n    touch() {\n        if (this.onTouched) {\n            this.onTouched();\n        }\n    }\n\n    /** Dispatch change event with current selection and group value. */\n    emitChangeEvent(): void {\n        if (this._isInitialized) {\n            this.change.emit(new McRadioChange(this._selected!, this._value));\n        }\n    }\n\n    markRadiosForCheck() {\n        if (this._radios) {\n            this._radios.forEach((radio) => radio.markForCheck());\n        }\n    }\n\n    /**\n     * Sets the model value. Implemented as part of ControlValueAccessor.\n     */\n    writeValue(value: any) {\n        this.value = value;\n        this._changeDetector.markForCheck();\n    }\n\n    /**\n     * Registers a callback to be triggered when the model value changes.\n     * Implemented as part of ControlValueAccessor.\n     * @param fn Callback to be registered.\n     */\n    registerOnChange(fn: (value: any) => void) {\n        this.controlValueAccessorChangeFn = fn;\n    }\n\n    /**\n     * Registers a callback to be triggered when the control is touched.\n     * Implemented as part of ControlValueAccessor.\n     * @param fn Callback to be registered.\n     */\n    registerOnTouched(fn: any) {\n        this.onTouched = fn;\n    }\n\n    /**\n     * Sets the disabled state of the control. Implemented as a part of ControlValueAccessor.\n     * @param isDisabled Whether the control should be disabled.\n     */\n    setDisabledState(isDisabled: boolean) {\n        this.disabled = isDisabled;\n        this._changeDetector.markForCheck();\n    }\n\n    private updateRadioButtonNames(): void {\n        if (this._radios) {\n            this._radios.forEach((radio) => {\n                radio.name = this.name;\n            });\n        }\n    }\n\n    /** Updates the `selected` radio button from the internal _value state. */\n    private updateSelectedRadioFromValue(): void {\n        // If the value already matches the selected radio, do nothing.\n        const isAlreadySelected = this._selected !== null && this._selected.value === this._value;\n\n        if (this._radios != null && !isAlreadySelected) {\n            this._selected = null;\n            this._radios.forEach((radio) => {\n                radio.checked = this.value === radio.value;\n                if (radio.checked) {\n                    this._selected = radio;\n                }\n            });\n        }\n    }\n}\n\n\n// Boilerplate for applying mixins to McRadioButton.\n/** @docs-private */\nexport class McRadioButtonBase {\n    // Since the disabled property is manually defined for the McRadioButton and isn't set up in\n    // the mixin base class. To be able to use the tabindex mixin, a disabled property must be\n    // defined to properly work.\n    disabled: boolean;\n\n    constructor(public _elementRef: ElementRef) {}\n}\n\nexport const _McRadioButtonMixinBase:\n    CanColorCtor &\n    HasTabIndexCtor &\n    typeof McRadioButtonBase =\n        mixinColor(mixinTabIndex(McRadioButtonBase));\n\n\n@Component({\n    selector: 'mc-radio-button',\n    templateUrl: 'radio.component.html',\n    styleUrls: ['radio.css'],\n    inputs: ['color', 'tabIndex'],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    exportAs: 'mcRadioButton',\n    host: {\n        class: 'mc-radio-button',\n        '[attr.id]': 'id',\n        '[class.mc-checked]': 'checked',\n        '[class.mc-disabled]': 'disabled',\n        '(focus)': '_inputElement.nativeElement.focus()'\n    }\n})\nexport class McRadioButton extends _McRadioButtonMixinBase\n    implements OnInit, OnDestroy, CanColor, HasTabIndex {\n\n    private readonly _uniqueId: string = `mc-radio-${++nextUniqueId}`;\n\n    /* tslint:disable:member-ordering */\n\n    /** The unique ID for the radio button. */\n    @Input() id: string = this._uniqueId;\n\n    /** Analog to HTML 'name' attribute used to group radios for unique selection. */\n    @Input() name: string;\n\n    /** Used to set the 'aria-label' attribute on the underlying input element. */\n    @Input('aria-label') ariaLabel: string;\n\n    /** The 'aria-labelledby' attribute takes precedence as the element's text alternative. */\n    @Input('aria-labelledby') ariaLabelledby: string;\n\n    /** The 'aria-describedby' attribute is read after the element's label and field type. */\n    @Input('aria-describedby') ariaDescribedby: string;\n\n    /** Whether this radio button is checked. */\n    @Input()\n    get checked(): boolean { return this._checked; }\n    set checked(value: boolean) {\n        const newCheckedState = toBoolean(value);\n\n        if (this._checked !== newCheckedState) {\n            this._checked = newCheckedState;\n\n            if (newCheckedState && this.radioGroup && this.radioGroup.value !== this.value) {\n                this.radioGroup.selected = this;\n            } else if (!newCheckedState && this.radioGroup && this.radioGroup.value === this.value) {\n                // When unchecking the selected radio button, update the selected radio\n                // property on the group.\n                this.radioGroup.selected = null;\n            }\n\n            if (newCheckedState) {\n                // Notify all radio buttons with the same name to un-check.\n                this._radioDispatcher.notify(this.id, this.name);\n            }\n            this._changeDetector.markForCheck();\n        }\n    }\n\n    /** The value of this radio button. */\n    @Input()\n    get value(): any { return this._value; }\n    set value(value: any) {\n        if (this._value !== value) {\n            this._value = value;\n            if (this.radioGroup != null) {\n                if (!this.checked) {\n                    // Update checked when the value changed to match the radio group's value\n                    this.checked = this.radioGroup.value === value;\n                }\n                if (this.checked) {\n                    this.radioGroup.selected = this;\n                }\n            }\n        }\n    }\n\n    /** Whether the radio button is disabled. */\n    @Input()\n    get disabled(): boolean {\n        return this._disabled || (this.radioGroup != null && this.radioGroup.disabled);\n    }\n    set disabled(value: boolean) {\n        const newDisabledState = toBoolean(value);\n\n        if (this._disabled !== newDisabledState) {\n\n            this._disabled = newDisabledState;\n            this._changeDetector.markForCheck();\n        }\n    }\n\n    /** Whether the radio button is required. */\n    @Input()\n    get required(): boolean {\n        return this._required || (this.radioGroup && this.radioGroup.required);\n    }\n    set required(value: boolean) {\n        this._required = toBoolean(value);\n    }\n\n    /** Whether the label should appear after or before the radio button. Defaults to 'after' */\n    @Input()\n    get labelPosition(): 'before' | 'after' {\n        return this._labelPosition || (this.radioGroup && this.radioGroup.labelPosition) || 'after';\n    }\n    set labelPosition(value) {\n        this._labelPosition = value;\n    }\n    private _labelPosition: 'before' | 'after';\n\n    /** The native `<input type=radio>` element */\n    @ViewChild('input') _inputElement: ElementRef;\n\n    /**\n     * Event emitted when the checked state of this radio button changes.\n     * Change events are only emitted when the value changes due to user interaction with\n     * the radio button (the same behavior as `<input type-\"radio\">`).\n     */\n    @Output() readonly change: EventEmitter<McRadioChange> = new EventEmitter<McRadioChange>();\n\n    /** The parent radio group. May or may not be present. */\n    radioGroup: McRadioGroup;\n\n    @Input()\n    isFocused: boolean = false;\n\n    /** ID of the native input element inside `<mc-radio-button>` */\n    get inputId(): string { return `${this.id || this._uniqueId}-input`; }\n\n    /** Whether this radio is checked. */\n    private _checked: boolean = false;\n\n    /** Whether this radio is disabled. */\n    private _disabled: boolean;\n\n    /** Whether this radio is required. */\n    private _required: boolean;\n\n    /** Value assigned to this radio. */\n    private _value: any = null;\n\n    /** Unregister function for _radioDispatcher */\n    // tslint:disable-next-line\n    private readonly removeUniqueSelectionListener: () => void = () => {};\n\n    constructor(\n        @Optional() radioGroup: McRadioGroup,\n        elementRef: ElementRef,\n        private readonly _changeDetector: ChangeDetectorRef,\n        private readonly _radioDispatcher: UniqueSelectionDispatcher\n    ) {\n\n        super(elementRef);\n\n        this.radioGroup = radioGroup;\n\n        this.removeUniqueSelectionListener =\n            _radioDispatcher.listen((id: string, name: string) => {\n                if (id !== this.id && name === this.name) {\n                    this.checked = false;\n                }\n            });\n    }\n\n    ngOnInit() {\n        if (this.radioGroup) {\n            // If the radio is inside a radio group, determine if it should be checked\n            this.checked = this.radioGroup.value === this._value;\n            // Copy name from parent radio group\n            this.name = this.radioGroup.name;\n        }\n    }\n\n    ngOnDestroy() {\n        this.removeUniqueSelectionListener();\n    }\n\n    /** Focuses the radio button. */\n    // tslint:disable-next-line\n    focus(): void {}\n\n    /**\n     * Marks the radio button as needing checking for change detection.\n     * This method is exposed because the parent radio group will directly\n     * update bound properties of the radio button.\n     */\n    markForCheck() {\n        // When group value changes, the button will not be notified. Use `markForCheck` to explicit\n        // update radio button's status\n        this._changeDetector.markForCheck();\n    }\n\n    onInputClick(event: Event) {\n        // We have to stop propagation for click events on the visual hidden input element.\n        // By default, when a user clicks on a label element, a generated click event will be\n        // dispatched on the associated input element. Since we are using a label element as our\n        // root container, the click event on the `radio-button` will be executed twice.\n        // The real click event will bubble up, and the generated click event also tries to bubble up.\n        // This will lead to multiple click events.\n        // Preventing bubbling for the second event will solve that issue.\n        event.stopPropagation();\n    }\n\n    onInputChange(event: Event) {\n        // We always have to stop propagation on the change event.\n        // Otherwise the change event, from the input element, will bubble up and\n        // emit its event object to the `change` output.\n        event.stopPropagation();\n\n        const groupValueChanged = this.radioGroup && this.value !== this.radioGroup.value;\n        this.checked = true;\n        this.emitChangeEvent();\n\n        if (this.radioGroup) {\n            this.radioGroup.controlValueAccessorChangeFn(this.value);\n            this.radioGroup.touch();\n            if (groupValueChanged) {\n                this.radioGroup.emitChangeEvent();\n            }\n        }\n    }\n\n    /** Dispatch change event with current value. */\n    private emitChangeEvent(): void {\n        this.change.emit(new McRadioChange(this, this._value));\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { A11yModule } from '@ptsecurity/cdk/a11y';\nimport { McCommonModule } from '@ptsecurity/mosaic/core';\n\nimport { McRadioButton, McRadioGroup } from './radio.component';\n\n\n@NgModule({\n    imports: [CommonModule, A11yModule, McCommonModule],\n    exports: [McRadioGroup, McRadioButton],\n    declarations: [McRadioGroup, McRadioButton]\n})\nexport class McRadioModule {\n}\n","import { Directive, Input } from '@angular/core';\n\nimport { CdkTreeNodeDef } from '@ptsecurity/cdk/tree';\n\n\n@Directive({\n    selector: '[mcTreeNodeDef]',\n    inputs: ['when: mcTreeNodeDefWhen'],\n    providers: [{ provide: CdkTreeNodeDef, useExisting: McTreeNodeDef }]\n})\nexport class McTreeNodeDef<T> extends CdkTreeNodeDef<T> {\n    @Input('mcTreeNode') data: T;\n}\n","import { Directive, Input, OnInit } from '@angular/core';\nimport { CdkTreeNodePadding } from '@ptsecurity/cdk/tree';\n\n\n@Directive({\n    selector: '[mcTreeNodePadding]',\n    providers: [{ provide: CdkTreeNodePadding, useExisting: McTreeNodePadding }]\n})\nexport class McTreeNodePadding<T> extends CdkTreeNodePadding<T> implements OnInit {\n    get leftPadding(): number {\n        return (this._withIcon ? 0 : this._iconWidth) + this._baseLeftPadding;\n    }\n\n    _baseLeftPadding: number = 6;\n    _iconWidth: number = 20;\n    _indent: number = 16;\n\n    @Input('mcTreeNodePadding') level: number;\n\n    @Input('mcTreeNodePaddingIndent') indent: number;\n\n    _withIcon: boolean;\n\n    _paddingIndent(): string | null {\n        const nodeLevel = (this._treeNode.data && this._tree.treeControl.getLevel)\n            ? this._tree.treeControl.getLevel(this._treeNode.data)\n            : null;\n\n        const level = this._level || nodeLevel;\n\n        return level ? `${(level * this._indent) + this.leftPadding}px` : `${this._baseLeftPadding}px`;\n    }\n\n    ngOnInit(): void {\n        this._withIcon = this._tree.treeControl.isExpandable(this._treeNode.data);\n        this._setPadding();\n    }\n}\n","import {\n    AfterContentInit,\n    Attribute,\n    ChangeDetectionStrategy,\n    Component,\n    ContentChildren,\n    ElementRef,\n    EventEmitter,\n    forwardRef,\n    Input,\n    Output,\n    QueryList,\n    ViewEncapsulation,\n    ChangeDetectorRef,\n    Inject,\n    OnDestroy,\n    OnInit,\n    ViewChild\n} from '@angular/core';\n\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\n\nimport { Subscription } from 'rxjs';\n\nimport { FocusKeyManager, IFocusableOption } from '@ptsecurity/cdk/a11y';\nimport { SelectionModel } from '@ptsecurity/cdk/collections';\nimport { END, ENTER, HOME, PAGE_DOWN, PAGE_UP, SPACE } from '@ptsecurity/cdk/keycodes';\n\nimport {\n    McLine,\n    McLineSetter,\n    CanDisable,\n    mixinDisabled,\n    toBoolean, CanDisableCtor\n} from '@ptsecurity/mosaic/core';\n\n\n/**\n * Component for list-options of selection-list. Each list-option can automatically\n * generate a checkbox and can put current item into the selectionModel of selection-list\n * if the current item is selected.\n */\n@Component({\n    exportAs: 'mcListOption',\n    selector: 'mc-list-option',\n    host: {\n        tabindex: '-1',\n\n        class: 'mc-list-option',\n        '[class.mc-selected]': 'selected',\n        '[class.mc-focused]': '_hasFocus',\n        '(focus)': '_handleFocus()',\n        '(blur)': '_handleBlur()',\n        '(click)': '_handleClick()'\n    },\n    templateUrl: 'list-option.html',\n    encapsulation: ViewEncapsulation.None,\n    preserveWhitespaces: false,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class McListOption implements AfterContentInit, OnDestroy, OnInit, IFocusableOption {\n    _hasFocus: boolean = false;\n\n    @ContentChildren(McLine) _lines: QueryList<McLine>;\n\n    @ViewChild('text') _text: ElementRef;\n\n    // Whether the label should appear before or after the checkbox. Defaults to 'after'\n    @Input() checkboxPosition: 'before' | 'after' = 'after';\n\n    @Input() value: any;\n\n    @Input()\n    get disabled() {\n        return this._disabled || (this.listSelection && this.listSelection.disabled);\n    }\n\n    set disabled(value: any) {\n        const newValue = toBoolean(value);\n\n        if (newValue !== this._disabled) {\n            this._disabled = newValue;\n            this._changeDetector.markForCheck();\n        }\n    }\n\n    @Input()\n    get selected(): boolean {\n        return this.listSelection.selectedOptions && this.listSelection.selectedOptions.isSelected(this) || false;\n    }\n\n    set selected(value: boolean) {\n        const isSelected = toBoolean(value);\n\n        if (isSelected !== this._selected) {\n            this.setSelected(isSelected);\n\n            this.listSelection._reportValueChange();\n        }\n    }\n\n    private _lineSetter: McLineSetter;\n    private _selected = false;\n    private _disabled = false;\n\n    constructor(\n        private _element: ElementRef,\n        private _changeDetector: ChangeDetectorRef,\n        @Inject(forwardRef(() => McListSelection))\n        public listSelection: McListSelection\n    ) {}\n\n    ngOnInit() {\n        if (this._selected) {\n            // List options that are selected at initialization can't be reported properly to the form\n            // control. This is because it takes some time until the selection-list knows about all\n            // available options. Also it can happen that the ControlValueAccessor has an initial value\n            // that should be used instead. Deferring the value change report to the next tick ensures\n            // that the form control value is not being overwritten.\n            const wasSelected = this._selected;\n\n            Promise.resolve().then(() => {\n                if (this._selected || wasSelected) {\n                    this.selected = true;\n                    this._changeDetector.markForCheck();\n                }\n            });\n        }\n    }\n\n    ngAfterContentInit() {\n        this._lineSetter = new McLineSetter(this._lines, this._element);\n    }\n\n    ngOnDestroy(): void {\n        if (this.selected) {\n            // We have to delay this until the next tick in order\n            // to avoid changed after checked errors.\n            Promise.resolve().then(() => this.selected = false);\n        }\n\n        this.listSelection._removeOptionFromList(this);\n    }\n\n    toggle(): void {\n        this.selected = !this.selected;\n    }\n\n    focus(): void {\n        this._element.nativeElement.focus();\n\n        this.listSelection.setFocusedOption(this);\n    }\n\n    getLabel() {\n        return this._text ? this._text.nativeElement.textContent : '';\n    }\n\n    setSelected(selected: boolean) {\n        if (this._selected === selected || !this.listSelection.selectedOptions) { return; }\n\n        this._selected = selected;\n\n        if (selected) {\n            this.listSelection.selectedOptions.select(this);\n        } else {\n            this.listSelection.selectedOptions.deselect(this);\n        }\n\n        this._changeDetector.markForCheck();\n    }\n\n    _getHeight(): number {\n        return this._element.nativeElement.getClientRects()[0].height;\n    }\n\n    _handleClick() {\n        if (this.disabled) { return; }\n\n        this.listSelection.setFocusedOption(this);\n    }\n\n    _handleFocus() {\n        if (this.disabled || this._hasFocus) { return; }\n\n        this._hasFocus = true;\n    }\n\n    _handleBlur() {\n        this._hasFocus = false;\n\n        this.listSelection._onTouched();\n    }\n\n    _getHostElement(): HTMLElement {\n        return this._element.nativeElement;\n    }\n}\n\n\nexport const MC_SELECTION_LIST_VALUE_ACCESSOR: any = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => McListSelection),\n    multi: true\n};\n\n// Change event that is being fired whenever the selected state of an option changes. */\nexport class McListSelectionChange {\n    constructor(\n        // Reference to the selection list that emitted the event.\n        public source: McListSelection,\n        // Reference to the option that has been changed.\n        public option: McListOption\n    ) {}\n}\n\n\nexport class McListSelectionBase {}\n\nexport const _McListSelectionMixinBase: CanDisableCtor & typeof McListSelectionBase\n    = mixinDisabled(McListSelectionBase);\n\n@Component({\n    exportAs: 'mcListSelection',\n    selector: 'mc-list-selection',\n    template: '<ng-content></ng-content>',\n    styleUrls: ['./list.css'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n    inputs: ['disabled', 'tabIndex'],\n    host: {\n        class: 'mc-list-selection',\n        '[tabIndex]': 'tabIndex',\n        '(focus)': 'focus()',\n        '(blur)': '_onTouched()',\n        '(keydown)': '_onKeyDown($event)',\n        '(window:resize)': 'updateScrollSize()'\n    },\n    providers: [MC_SELECTION_LIST_VALUE_ACCESSOR],\n    preserveWhitespaces: false\n})\nexport class McListSelection extends _McListSelectionMixinBase implements\n    IFocusableOption, CanDisable, AfterContentInit, ControlValueAccessor {\n\n    _keyManager: FocusKeyManager<McListOption>;\n\n    // The option components contained within this selection-list.\n    @ContentChildren(McListOption) options: QueryList<McListOption>;\n\n    tabIndex: number;\n\n    autoSelect: boolean;\n    noUnselect: boolean;\n    multiple: boolean;\n\n    // todo temporary solution\n    withShift: boolean;\n    withCtrl: boolean;\n\n    @Input() horizontal: boolean = false;\n\n    // Emits a change event whenever the selected state of an option changes.\n    @Output() readonly selectionChange: EventEmitter<McListSelectionChange> = new EventEmitter<McListSelectionChange>();\n\n    selectedOptions: SelectionModel<McListOption>;\n\n    // Used for storing the values that were assigned before the options were initialized.\n    private _tempValues: string[] | null;\n\n    private _modelChanges = Subscription.EMPTY;\n\n    constructor(\n        private _element: ElementRef,\n        @Attribute('tabindex') tabIndex: string,\n        @Attribute('auto-select') autoSelect: string,\n        @Attribute('no-unselect') noUnselect: string,\n        @Attribute('multiple') multiple: string\n    ) {\n        super();\n\n        this.autoSelect = autoSelect === null ? true : toBoolean(autoSelect);\n        this.multiple = multiple === null ? true : toBoolean(multiple);\n        this.noUnselect = noUnselect === null ? true : toBoolean(noUnselect);\n\n        this.tabIndex = parseInt(tabIndex) || 0;\n\n        this.selectedOptions = new SelectionModel<McListOption>(this.multiple);\n    }\n\n    ngAfterContentInit(): void {\n        this.horizontal = toBoolean(this.horizontal);\n\n        this._keyManager = new FocusKeyManager<McListOption>(this.options)\n            .withTypeAhead()\n            .withVerticalOrientation(!this.horizontal)\n            .withHorizontalOrientation(this.horizontal ? 'ltr' : null);\n\n        if (this._tempValues) {\n            this._setOptionsFromValues(this._tempValues);\n            this._tempValues = null;\n        }\n\n        // Sync external changes to the model back to the options.\n        this._modelChanges = this.selectedOptions.onChange!.subscribe((event) => {\n            for (const item of event.added) {\n                item.selected = true;\n            }\n\n            for (const item of event.removed) {\n                item.selected = false;\n            }\n        });\n\n        this.updateScrollSize();\n    }\n\n    ngOnDestroy() {\n        this._modelChanges.unsubscribe();\n    }\n\n    focus() {\n        this._element.nativeElement.focus();\n    }\n\n    selectAll() {\n        this.options.forEach((option) => option.setSelected(true));\n\n        this._reportValueChange();\n    }\n\n    deselectAll() {\n        this.options.forEach((option) => option.setSelected(false));\n\n        this._reportValueChange();\n    }\n\n    updateScrollSize(): void {\n        if (this.horizontal || !this.options.first) { return; }\n\n        this._keyManager.withScrollSize(Math.floor(this._getHeight() / this.options.first._getHeight()));\n    }\n\n    // Sets the focused option of the selection-list.\n    setFocusedOption(option: McListOption): void {\n        this._keyManager.updateActiveItem(option);\n\n        if (this.withShift && this.multiple) {\n            const previousIndex = this._keyManager.previousActiveItemIndex;\n            const activeIndex = this._keyManager.activeItemIndex;\n\n            if (previousIndex < activeIndex) {\n                this.options.forEach((item, index) => {\n                    if (index >= previousIndex && index <= activeIndex) { item.setSelected(true); }\n                });\n            } else {\n                this.options.forEach((item, index) => {\n                    if (index >= activeIndex && index <= previousIndex) { item.setSelected(true); }\n                });\n            }\n\n            this.withShift = false;\n        } else if (this.withCtrl) {\n            this.withCtrl = false;\n\n            if (!this._canDeselectLast(option)) { return; }\n\n            option.toggle();\n        } else {\n            if (this.autoSelect) {\n                this.options.forEach((item) => item.setSelected(false));\n                option.setSelected(true);\n            }\n        }\n\n        this._emitChangeEvent(option);\n        this._reportValueChange();\n    }\n\n    // Implemented as part of ControlValueAccessor.\n    writeValue(values: string[]): void {\n        if (this.options) {\n            this._setOptionsFromValues(values || []);\n        } else {\n            this._tempValues = values;\n        }\n    }\n\n    // Implemented as part of ControlValueAccessor.\n    registerOnChange(fn: (value: any) => void): void {\n        this._onChange = fn;\n    }\n\n    // Implemented as part of ControlValueAccessor.\n    registerOnTouched(fn: () => void): void {\n        this._onTouched = fn;\n    }\n\n    // Implemented as a part of ControlValueAccessor.\n    setDisabledState(isDisabled: boolean): void {\n        if (this.options) {\n            this.options.forEach((option) => option.disabled = isDisabled);\n        }\n    }\n\n    getSelectedOptionValues(): string[] {\n        return this.options.filter((option) => option.selected).map((option) => option.value);\n    }\n\n    // Toggles the selected state of the currently focused option.\n    toggleFocusedOption(): void {\n        const focusedIndex = this._keyManager.activeItemIndex;\n\n        if (focusedIndex != null && this._isValidIndex(focusedIndex)) {\n            const focusedOption: McListOption = this.options.toArray()[focusedIndex];\n\n            if (focusedOption && this._canDeselectLast(focusedOption)) {\n                focusedOption.toggle();\n\n                // Emit a change event because the focused option changed its state through user interaction.\n                this._emitChangeEvent(focusedOption);\n            }\n        }\n    }\n\n    _canDeselectLast(listOption: McListOption): boolean {\n        return !(this.noUnselect && this.selectedOptions.selected.length === 1 && listOption.selected);\n    }\n\n    _getHeight(): number {\n        return this._element.nativeElement.getClientRects()[0].height;\n    }\n\n    // View to model callback that should be called if the list or its options lost focus.\n    _onTouched: () => void = () => {};\n\n    // Removes an option from the selection list and updates the active item.\n    _removeOptionFromList(option: McListOption) {\n        if (option._hasFocus) {\n            const optionIndex = this._getOptionIndex(option);\n\n            // Check whether the option is the last item\n            if (optionIndex > 0) {\n                this._keyManager.setPreviousItemActive();\n            } else if (optionIndex === 0 && this.options.length > 1) {\n                this._keyManager.setNextItemActive();\n            }\n        }\n    }\n\n    _onKeyDown(event: KeyboardEvent) {\n        const keyCode = event.keyCode;\n        this.withShift = event.shiftKey;\n        this.withCtrl = event.ctrlKey;\n\n        switch (keyCode) {\n            case SPACE:\n            case ENTER:\n                this.toggleFocusedOption();\n                event.preventDefault();\n\n                break;\n            case HOME:\n                this._keyManager.setFirstItemActive();\n                event.preventDefault();\n\n                break;\n            case END:\n                this._keyManager.setLastItemActive();\n                event.preventDefault();\n\n                break;\n            case PAGE_UP:\n                if (!this.horizontal) { this._keyManager.setPreviousPageItemActive(); }\n\n                event.preventDefault();\n\n                break;\n            case PAGE_DOWN:\n                if (!this.horizontal) { this._keyManager.setNextPageItemActive(); }\n\n                event.preventDefault();\n\n                break;\n            default:\n                this._keyManager.onKeydown(event);\n        }\n    }\n\n    // Reports a value change to the ControlValueAccessor\n    _reportValueChange() {\n        if (this.options) {\n            this._onChange(this.getSelectedOptionValues());\n        }\n    }\n\n    // Emits a change event if the selected state of an option changed.\n    _emitChangeEvent(option: McListOption) {\n        this.selectionChange.emit(new McListSelectionChange(this, option));\n    }\n\n    // Returns the option with the specified value.\n    private _getOptionByValue(value: string): McListOption | undefined {\n        return this.options.find((option) => option.value === value);\n    }\n\n    // Sets the selected options based on the specified values.\n    private _setOptionsFromValues(values: string[]) {\n        this.options.forEach((option) => option.setSelected(false));\n\n        values\n            .map((value) => this._getOptionByValue(value))\n            .filter(Boolean)\n            .forEach((option) => option!.setSelected(true));\n    }\n\n    /**\n     * Utility to ensure all indexes are valid.\n     * @param index The index to be checked.\n     * @returns True if the index is valid for our list of options.\n     */\n    private _isValidIndex(index: number): boolean {\n        return index >= 0 && index < this.options.length;\n    }\n\n    // Returns the index of the specified list option.\n    private _getOptionIndex(option: McListOption): number {\n        return this.options.toArray().indexOf(option);\n    }\n\n    // View to model callback that should be called whenever the selected options change.\n    private _onChange: (value: any) => void = (_: any) => {};\n}\n","// todo пока не делаем, перенесено из материала, но у нас в доках таких простых списков нет.\nimport {\n    AfterContentInit, ChangeDetectionStrategy, Component, ContentChildren, Directive, ElementRef, QueryList,\n    ViewEncapsulation\n} from '@angular/core';\n\nimport { McLine, McLineSetter } from '@ptsecurity/mosaic/core';\n\n\nexport class McListBase {}\n\n@Component({\n    selector: 'mc-list',\n    host: { class: 'mc-list' },\n    template: '<ng-content></ng-content>',\n    styleUrls: ['./list.css'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None\n})\nexport class McList extends McListBase {}\n\n\n/**\n * Directive whose purpose is to add the mc- CSS styling to this selector.\n * @docs-private\n */\n@Directive({\n    selector: '[mc-subheader], [mcSubheader]',\n    host: { class: 'mc-subheader' }\n})\nexport class McListSubheaderCssStyler {}\n\n\n// Boilerplate for applying mixins to McListItem.\nexport class McListItemBase {}\n\n@Component({\n    selector: 'mc-list-item, a[mc-list-item]',\n    host: {\n        class: 'mc-list-item',\n        '(focus)': '_handleFocus()',\n        '(blur)': '_handleBlur()'\n    },\n    templateUrl: './list-item.html',\n    encapsulation: ViewEncapsulation.None,\n    preserveWhitespaces: false,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class McListItem extends McListItemBase implements AfterContentInit {\n    @ContentChildren(McLine) _lines: QueryList<McLine>;\n\n    private _lineSetter: McLineSetter;\n\n    constructor(private _element: ElementRef) {\n        super();\n    }\n\n    ngAfterContentInit() {\n        this._lineSetter = new McLineSetter(this._lines, this._element);\n    }\n\n    _handleFocus() {\n        this._element.nativeElement.classList.add('mc-focused');\n    }\n\n    _handleBlur() {\n        this._element.nativeElement.classList.remove('mc-focused');\n    }\n\n    _getHostElement(): HTMLElement {\n        return this._element.nativeElement;\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { A11yModule } from '@ptsecurity/cdk/a11y';\n\nimport { McLineModule } from '@ptsecurity/mosaic/core';\n\nimport { McListSelection, McListOption } from './list-selection.component';\nimport { McList, McListItem, McListSubheaderCssStyler } from './list.component';\n\n\n@NgModule({\n    imports: [\n        CommonModule,\n        A11yModule,\n        McLineModule\n    ],\n    exports: [\n        McList,\n        McListSelection,\n        McListItem,\n        McListOption,\n        McListSubheaderCssStyler\n    ],\n    declarations: [\n        McList,\n        McListSelection,\n        McListItem,\n        McListOption,\n        McListSubheaderCssStyler\n    ]\n})\nexport class McListModule {}\n","import {\n    Input,\n    Attribute,\n    Component,\n    ElementRef,\n    OnDestroy,\n    ViewEncapsulation,\n    ChangeDetectionStrategy,\n    ChangeDetectorRef\n} from '@angular/core';\n\nimport { FocusMonitor } from '@ptsecurity/cdk/a11y';\nimport {\n    CanDisable, CanDisableCtor,\n    HasTabIndex, HasTabIndexCtor,\n    mixinDisabled,\n    mixinTabIndex,\n    toBoolean\n} from '@ptsecurity/mosaic/core';\n\n\nexport class McLinkBase {\n    constructor(public _elementRef: ElementRef) {\n    }\n}\n\nexport const _McLinkBase: HasTabIndexCtor & CanDisableCtor & typeof McLinkBase\n    = mixinTabIndex(mixinDisabled(McLinkBase));\n\n@Component({\n    selector: 'a.mc-link',\n    template: `<ng-content></ng-content>`,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n    exportAs: 'mcLink',\n    styleUrls: ['./link.css'],\n    inputs: ['disabled'],\n    host: {\n        '[attr.disabled]': 'disabled || null',\n        '[attr.tabindex]': 'tabIndex'\n    }\n})\n\nexport class McLink extends _McLinkBase implements OnDestroy, HasTabIndex, CanDisable {\n\n    @Input()\n    get disabled() {\n        return this._disabled;\n    }\n\n    set disabled(value: any) {\n        const newValue = toBoolean(value);\n\n        if (newValue !== this._disabled) {\n            this._disabled = newValue;\n            this._changeDetector.markForCheck();\n        }\n    }\n\n    private _disabled = false;\n\n    constructor(\n        @Attribute('tabindex') tabIndex: string,\n        public elementRef: ElementRef,\n        private _focusMonitor: FocusMonitor,\n        private _changeDetector: ChangeDetectorRef) {\n\n        super(elementRef);\n        this._focusMonitor.monitor(elementRef.nativeElement, true);\n        this.tabIndex = parseInt(tabIndex) || 0;\n    }\n\n    ngOnDestroy() {\n        this._focusMonitor.stopMonitoring(this.elementRef.nativeElement);\n    }\n\n    focus(): void {\n        this._getHostElement().focus();\n    }\n\n    _getHostElement() {\n        return this.elementRef.nativeElement;\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { A11yModule } from '@ptsecurity/cdk/a11y';\n\nimport { McLink } from './link.component';\n\n\n@NgModule({\n    imports: [\n        CommonModule,\n        A11yModule\n    ],\n    declarations: [McLink],\n    exports: [McLink]\n})\nexport class McLinkModule {}\n","import { Injectable, Optional, SkipSelf } from '@angular/core';\nimport { Subject, Subscription } from 'rxjs';\n\nimport { McModalRef } from './modal-ref.class';\n\n\ninterface IRegisteredMeta {\n    modalRef: McModalRef;\n    afterOpenSubscription: Subscription;\n    afterCloseSubscription: Subscription;\n}\n\n@Injectable()\nexport class McModalControlService {\n\n    // Track singleton afterAllClose through over the injection tree\n    get afterAllClose(): Subject<void> {\n        return this.parentService ? this.parentService.afterAllClose : this.rootAfterAllClose;\n    }\n\n    // Track singleton openModals array through over the injection tree\n    get openModals(): McModalRef[] {\n        return this.parentService ? this.parentService.openModals : this.rootOpenModals;\n    }\n\n    // @ts-ignore\n    private rootOpenModals: McModalRef[] = this.parentService ? null : [];\n    // @ts-ignore\n    private rootAfterAllClose: Subject<void> = this.parentService ? null : new Subject<void>();\n    // @ts-ignore\n    private rootRegisteredMetaMap: Map<McModalRef, IRegisteredMeta> = this.parentService ? null : new Map();\n\n    // Registered modal for later usage\n    private get registeredMetaMap(): Map<McModalRef, IRegisteredMeta> {\n        return this.parentService ? this.parentService.registeredMetaMap : this.rootRegisteredMetaMap;\n    }\n\n    constructor(\n        @Optional() @SkipSelf() private parentService: McModalControlService) {\n    }\n\n    // Register a modal to listen its open/close\n    registerModal(modalRef: McModalRef): void {\n        if (!this.hasRegistered(modalRef)) {\n            const afterOpenSubscription = modalRef.afterOpen.subscribe(() => this.openModals.push(modalRef));\n            const afterCloseSubscription = modalRef.afterClose.subscribe(() => this.removeOpenModal(modalRef));\n\n            this.registeredMetaMap.set(modalRef, {modalRef, afterOpenSubscription, afterCloseSubscription});\n        }\n    }\n\n    hasRegistered(modalRef: McModalRef): boolean {\n        return this.registeredMetaMap.has(modalRef);\n    }\n\n    // Close all registered opened modals\n    closeAll(): void {\n        let i = this.openModals.length;\n\n        while (i--) {\n            this.openModals[i].close();\n        }\n    }\n\n    private removeOpenModal(modalRef: McModalRef): void {\n        const index = this.openModals.indexOf(modalRef);\n\n        if (index > -1) {\n            this.openModals.splice(index, 1);\n\n            if (!this.openModals.length) {\n                this.afterAllClose.next();\n            }\n        }\n    }\n}\n","import { Observable } from 'rxjs';\n\nimport { McModalComponent } from './modal.component';\n\n\n/**\n * API class that public to users to handle the modal instance.\n * McModalRef is aim to avoid accessing to the modal instance directly by users.\n */\nexport abstract class McModalRef<T = any, R = any> {\n    abstract afterOpen: Observable<void>;\n    abstract afterClose: Observable<R>;\n\n    abstract open(): void;\n\n    abstract close(result?: R): void;\n\n    abstract destroy(result?: R): void;\n\n    /**\n     * Trigger the nzOnOk/nzOnCancel by manual\n     */\n    abstract triggerOk(): void;\n\n    abstract triggerCancel(): void;\n\n    // /**\n    //  * Return the ComponentRef of nzContent when specify nzContent as a Component\n    //  * Note: this method may return undefined if the Component has not ready yet.\n    //    (it only available after Modal's ngOnInit)\n    //  */\n    // abstract getContentComponentRef(): ComponentRef<{}>;\n\n    /**\n     * Return the component instance of nzContent when specify nzContent as a Component\n     * Note: this method may return undefined if the Component has not ready yet.\n     * (it only available after Modal's ngOnInit)\n     */\n    abstract getContentComponent(): T;\n\n    /**\n     * Get the dom element of this Modal\n     */\n    abstract getElement(): HTMLElement;\n\n    /**\n     * Get the instance of the Modal itself\n     */\n    abstract getInstance(): McModalComponent;\n}\n","export interface IClickPosition {\n    x: number;\n    y: number;\n}\n\nexport class ModalUtil {\n    private lastPosition: IClickPosition;\n\n    constructor(private document: Document) {\n        this.lastPosition = {x: -1, y: -1};\n        this.listenDocumentClick();\n    }\n\n    getLastClickPosition(): IClickPosition {\n        return this.lastPosition;\n    }\n\n    listenDocumentClick(): void {\n        this.document.addEventListener('click', (event: MouseEvent) => {\n            this.lastPosition = {x: event.clientX, y: event.clientY};\n        });\n    }\n}\n\nexport default new ModalUtil(document);\n","import { DOCUMENT } from '@angular/common';\nimport {\n    AfterViewInit, ChangeDetectionStrategy, ChangeDetectorRef,\n    Component,\n    ComponentFactoryResolver,\n    ComponentRef,\n    ElementRef,\n    EventEmitter,\n    Inject,\n    Injector,\n    Input,\n    OnChanges,\n    OnDestroy,\n    OnInit,\n    Output,\n    Renderer2,\n    SimpleChanges,\n    TemplateRef,\n    Type,\n    ViewChild,\n    ViewContainerRef, ViewEncapsulation\n} from '@angular/core';\nimport { ESCAPE } from '@ptsecurity/cdk/keycodes';\nimport { Overlay, OverlayRef } from '@ptsecurity/cdk/overlay';\nimport { McMeasureScrollbarService } from '@ptsecurity/mosaic/core';\nimport { Observable } from 'rxjs';\n\nimport { McModalControlService } from './modal-control.service';\nimport { McModalRef } from './modal-ref.class';\n// tslint:disable-next-line\nimport ModalUtil from './modal-util';\nimport { IModalButtonOptions, IModalOptions, ModalType, OnClickCallback } from './modal.type';\n\n\n// Duration when perform animations (ms)\nexport const MODAL_ANIMATE_DURATION = 200;\n\ntype AnimationState = 'enter' | 'leave' | null;\n\n@Component({\n    selector: 'mc-modal',\n    templateUrl: './modal.component.html',\n    styleUrls: ['./modal.css'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n    host: {\n        '(keydown)': 'onKeyDown($event)'\n    }\n})\nexport class McModalComponent<T = any, R = any> extends McModalRef<T, R>\n    implements OnInit, OnChanges, AfterViewInit, OnDestroy, IModalOptions {\n\n    // tslint:disable-next-line:no-any\n    @Input() mcModalType: ModalType = 'default';\n    // If not specified, will use <ng-content>\n    @Input() mcContent: string | TemplateRef<{}> | Type<T>;\n    // available when mcContent is a component\n    @Input() mcComponentParams: object;\n    // Default Modal ONLY\n    @Input() mcFooter: string | TemplateRef<{}> | IModalButtonOptions<T>[];\n\n    @Input()\n    get mcVisible() { return this._mcVisible; }\n    set mcVisible(value) { this._mcVisible = value; }\n    _mcVisible = false;\n\n    @Output() mcVisibleChange = new EventEmitter<boolean>();\n\n    @Input() mcZIndex: number = 1000;\n    @Input() mcWidth: number | string = 480;\n    @Input() mcWrapClassName: string;\n    @Input() mcClassName: string;\n    @Input() mcStyle: object;\n    @Input() mcTitle: string | TemplateRef<{}>;\n    @Input() mcCloseByESC: boolean = true;\n\n    @Input()\n    get mcClosable() { return this._mcClosable; }\n    set mcClosable(value) { this._mcClosable = value; }\n    _mcClosable = true;\n\n    @Input()\n    get mcMask() { return this._mcMask; }\n    set mcMask(value) { this._mcMask = value; }\n    _mcMask = true;\n\n    @Input()\n    get mcMaskClosable() { return this._mcMaskClosable; }\n    set mcMaskClosable(value) { this._mcMaskClosable = value; }\n    _mcMaskClosable = true;\n\n    @Input() mcMaskStyle: object;\n    @Input() mcBodyStyle: object;\n\n    // Trigger when modal open(visible) after animations\n    @Output() mcAfterOpen = new EventEmitter<void>();\n    // Trigger when modal leave-animation over\n    @Output() mcAfterClose = new EventEmitter<R>();\n\n    // --- Predefined OK & Cancel buttons\n    @Input() mcOkText: string;\n    @Input() mcOkType = 'primary';\n\n    @Input()\n    get mcOkLoading() { return this._mcOkLoading; }\n    set mcOkLoading(value) { this._mcOkLoading = value; }\n    _mcOkLoading = false;\n\n    @Input() @Output() mcOnOk: EventEmitter<T> | OnClickCallback<T> = new EventEmitter<T>();\n    // Only aim to focus the ok button that needs to be auto focused\n    @ViewChild('autoFocusButtonOk', {read: ElementRef}) autoFocusButtonOk: ElementRef;\n    @Input() mcCancelText: string;\n\n    @Input()\n    get mcCancelLoading() { return this._mcCancelLoading; }\n    set mcCancelLoading(value) { this._mcCancelLoading = value; }\n    _mcCancelLoading = false;\n\n    @Input() @Output() mcOnCancel: EventEmitter<T> | OnClickCallback<T> = new EventEmitter<T>();\n    @ViewChild('modalContainer') modalContainer: ElementRef;\n    @ViewChild('bodyContainer', {read: ViewContainerRef}) bodyContainer: ViewContainerRef;\n    maskAnimationClassMap: object;\n    modalAnimationClassMap: object;\n    // The origin point that animation based on\n    transformOrigin = '0px 0px 0px';\n\n    // Observable alias for mcAfterOpen\n    get afterOpen(): Observable<void> {\n        return this.mcAfterOpen.asObservable();\n    }\n\n    // Observable alias for mcAfterClose\n    get afterClose(): Observable<R> {\n        return this.mcAfterClose.asObservable();\n    }\n\n    get okText(): string {\n        return this.mcOkText;\n    }\n\n    get cancelText(): string {\n        return this.mcCancelText;\n    }\n\n    // Indicate whether this dialog should hidden\n    get hidden(): boolean {\n        return !this.mcVisible && !this.animationState;\n    }\n\n    // Handle the reference when using mcContent as Component\n    private contentComponentRef: ComponentRef<T>;\n    // Current animation state\n    private animationState: AnimationState;\n    private container: HTMLElement | OverlayRef;\n\n    constructor(\n        private overlay: Overlay,\n        private renderer: Renderer2,\n        private cfr: ComponentFactoryResolver,\n        private elementRef: ElementRef,\n        private viewContainer: ViewContainerRef,\n        private mcMeasureScrollbarService: McMeasureScrollbarService,\n        private modalControl: McModalControlService,\n        private changeDetector: ChangeDetectorRef,\n        @Inject(DOCUMENT) private document: any) {\n\n        super();\n    }\n\n    @Input() mcGetContainer: HTMLElement | OverlayRef | (() => HTMLElement | OverlayRef) = () => this.overlay.create();\n\n    ngOnInit() {\n\n        // Create component along without View\n        if (this.isComponent(this.mcContent)) {\n            this.createDynamicComponent(this.mcContent as Type<T>);\n        }\n\n        // Setup default button options\n        if (this.isModalButtons(this.mcFooter)) {\n            this.mcFooter = this.formatModalButtons(this.mcFooter as IModalButtonOptions<T>[]);\n        }\n\n        // Place the modal dom to elsewhere\n        this.container = typeof this.mcGetContainer === 'function' ? this.mcGetContainer() : this.mcGetContainer;\n        if (this.container instanceof HTMLElement) {\n            this.container.appendChild(this.elementRef.nativeElement);\n        } else if (this.container instanceof OverlayRef) {\n            // NOTE: only attach the dom to overlay, the view container is not changed actually\n            this.container.overlayElement.appendChild(this.elementRef.nativeElement);\n        }\n\n        // Register modal when afterOpen/afterClose is stable\n        this.modalControl.registerModal(this);\n    }\n\n    // [NOTE] NOT available when using by service!\n    // Because ngOnChanges never be called when using by service,\n    // here we can't support \"mcContent\"(Component) etc. as inputs that initialized dynamically.\n    // BUT: User also can change \"mcContent\" dynamically to trigger UI changes\n    // (provided you don't use \bComponent that needs initializations)\n    ngOnChanges(changes: SimpleChanges) {\n        if (changes.mcVisible) {\n            // Do not trigger animation while initializing\n            this.handleVisibleStateChange(this.mcVisible, !changes.mcVisible.firstChange);\n        }\n    }\n\n    ngAfterViewInit() {\n        // If using Component, it is the time to attach View while bodyContainer is ready\n        if (this.contentComponentRef) {\n            this.bodyContainer.insert(this.contentComponentRef.hostView);\n        }\n\n        if (this.autoFocusButtonOk) {\n            (this.autoFocusButtonOk.nativeElement as HTMLButtonElement).focus();\n        }\n    }\n\n    ngOnDestroy() {\n        if (this.container instanceof OverlayRef) {\n            this.container.dispose();\n        }\n    }\n\n    open() {\n        this.changeVisibleFromInside(true);\n    }\n\n    close(result?: R) {\n        this.changeVisibleFromInside(false, result);\n    }\n\n    // Destroy equals Close\n    destroy(result?: R) {\n        this.close(result);\n    }\n\n    triggerOk() {\n        this.onClickOkCancel('ok');\n    }\n\n    triggerCancel() {\n        this.onClickOkCancel('cancel');\n    }\n\n    getInstance(): McModalComponent {\n        return this;\n    }\n\n    getContentComponentRef(): ComponentRef<T> {\n        return this.contentComponentRef;\n    }\n\n    getContentComponent(): T {\n        return this.contentComponentRef && this.contentComponentRef.instance;\n    }\n\n    getElement(): HTMLElement {\n        return this.elementRef && this.elementRef.nativeElement;\n    }\n\n    onClickMask($event: MouseEvent) {\n        if (\n            this.mcMask &&\n            this.mcMaskClosable &&\n            ($event.target as HTMLElement).classList.contains('mc-modal-wrap') &&\n            this.mcVisible\n        ) {\n            this.onClickOkCancel('cancel');\n        }\n    }\n\n    // tslint:disable-next-line\n    isModalType(type: ModalType): boolean {\n        return this.mcModalType === type;\n    }\n\n    onKeyDown(event: KeyboardEvent): void {\n\n        if (event.keyCode === ESCAPE && this.container && (this.container instanceof OverlayRef)) {\n\n            this.close();\n            event.preventDefault();\n        }\n    }\n\n    // AoT\n    onClickCloseBtn() {\n        if (this.mcVisible) {\n            this.onClickOkCancel('cancel');\n        }\n    }\n\n    // AoT\n    // tslint:disable-next-line\n    onClickOkCancel(type: 'ok' | 'cancel') {\n        const trigger = { ok: this.mcOnOk, cancel: this.mcOnCancel }[type];\n        const loadingKey = { ok: 'mcOkLoading', cancel: 'mcCancelLoading' }[type];\n\n        if (trigger instanceof EventEmitter) {\n            trigger.emit(this.getContentComponent());\n        } else if (typeof trigger === 'function') {\n\n            const result = trigger(this.getContentComponent());\n            // Users can return \"false\" to prevent closing by default\n            const caseClose = (doClose: boolean | void | {}) => (doClose !== false) && this.close(doClose as R);\n\n            if (isPromise(result)) {\n                this[loadingKey] = true;\n                const handleThen = (doClose) => {\n                    this[loadingKey] = false;\n                    caseClose(doClose);\n                };\n                (result as Promise<void>).then(handleThen).catch(handleThen);\n            } else {\n                caseClose(result);\n            }\n        }\n    }\n\n    // AoT\n    isNonEmptyString(value: {}): boolean {\n        return typeof value === 'string' && value !== '';\n    }\n\n    // AoT\n    isTemplateRef(value: {}): boolean {\n        return value instanceof TemplateRef;\n    }\n\n    // AoT\n    isComponent(value: {}): boolean {\n        return value instanceof Type;\n    }\n\n    // AoT\n    isModalButtons(value: {}): boolean {\n        return Array.isArray(value) && value.length > 0;\n    }\n\n    // Do rest things when visible state changed\n    private handleVisibleStateChange(visible: boolean, animation: boolean = true, closeResult?: R): Promise<any> {\n        // Hide scrollbar at the first time when shown up\n        if (visible) {\n            this.changeBodyOverflow(1);\n        }\n\n        return Promise\n            .resolve(animation && this.animateTo(visible))\n            // Emit open/close event after animations over\n            .then(() => {\n                if (visible) {\n                    this.mcAfterOpen.emit();\n                } else {\n                    this.mcAfterClose.emit(closeResult);\n                    // Show/hide scrollbar when animation is over\n                    this.changeBodyOverflow();\n                }\n            });\n    }\n\n    // Lookup a button's property, if the prop is a function, call & then return the result, otherwise, return itself.\n    // AoT\n    // tslint:disable-next-line\n    getButtonCallableProp(options: IModalButtonOptions<T>, prop: string): {} {\n        const value = options[prop];\n        const args: any[] = [];\n        if (this.contentComponentRef) {\n            args.push(this.contentComponentRef.instance);\n        }\n\n        return typeof value === 'function' ? value.apply(options, args) : value;\n    }\n\n    // On mcFooter's modal button click\n    // AoT\n    // tslint:disable-next-line\n    onButtonClick(button: IModalButtonOptions<T>) {\n        // Call onClick directly\n        const result = this.getButtonCallableProp(button, 'onClick');\n        if (isPromise(result)) {\n            button.loading = true;\n            (result as Promise<{}>).then(() => button.loading = false).catch(() => button.loading = false);\n        }\n    }\n\n    // Change mcVisible from inside\n    private changeVisibleFromInside(visible: boolean, closeResult?: R): Promise<void> {\n        if (this.mcVisible !== visible) {\n            // Change mcVisible value immediately\n            this.mcVisible = visible;\n            this.mcVisibleChange.emit(visible);\n\n            return this.handleVisibleStateChange(visible, true, closeResult);\n        }\n\n        return Promise.resolve();\n    }\n\n    private changeAnimationState(state: AnimationState) {\n        this.animationState = state;\n        if (state) {\n            this.maskAnimationClassMap = {\n                [`fade-${state}`]: true,\n                [`fade-${state}-active`]: true\n            };\n            this.modalAnimationClassMap = {\n                [`zoom-${state}`]: true,\n                [`zoom-${state}-active`]: true\n            };\n        } else {\n            // @ts-ignore\n            this.maskAnimationClassMap = this.modalAnimationClassMap = null;\n        }\n\n        if (this.contentComponentRef) {\n            this.contentComponentRef.changeDetectorRef.markForCheck();\n        } else {\n            this.changeDetector.markForCheck();\n        }\n    }\n\n    private animateTo(isVisible: boolean): Promise<any> {\n        // Figure out the lastest click position when shows up\n        if (isVisible) {\n            // [NOTE] Using timeout due to the document.click event is fired later than visible change,\n            // so if not postponed to next event-loop, we can't get the lastest click position\n            window.setTimeout(() => this.updateTransformOrigin());\n        }\n\n        this.changeAnimationState(isVisible ? 'enter' : 'leave');\n\n        // Return when animation is over\n        return new Promise((resolve) => window.setTimeout(() => {\n            this.changeAnimationState(null);\n            resolve();\n        }, MODAL_ANIMATE_DURATION));\n    }\n\n    private formatModalButtons(buttons: IModalButtonOptions<T>[]): IModalButtonOptions<T>[] {\n        return buttons.map((button) => {\n\n            return {\n                ...{\n                    type: 'default',\n                    size: 'default',\n                    autoLoading: true,\n                    show: true,\n                    loading: false,\n                    disabled: false\n                },\n                ...button\n            };\n        });\n    }\n\n    /**\n     * Create a component dynamically but not attach to any View\n     * (this action will be executed when bodyContainer is ready)\n     * @param component Component class\n     */\n    private createDynamicComponent(component: Type<T>) {\n        const factory = this.cfr.resolveComponentFactory(component);\n        const childInjector = Injector.create({\n            providers: [{provide: McModalRef, useValue: this}],\n            parent: this.viewContainer.parentInjector\n        });\n\n        this.contentComponentRef = factory.create(childInjector);\n\n        if (this.mcComponentParams) {\n            Object.assign(this.contentComponentRef.instance, this.mcComponentParams);\n        }\n\n        // Do the first change detection immediately\n        // (or we do detection at ngAfterViewInit, multi-changes error will be thrown)\n        this.contentComponentRef.changeDetectorRef.detectChanges();\n\n\n    }\n\n    // Update transform-origin to the last click position on document\n    private updateTransformOrigin() {\n        const modalElement = this.modalContainer.nativeElement as HTMLElement;\n        const lastPosition = ModalUtil.getLastClickPosition();\n\n        if (lastPosition) {\n            // tslint:disable-next-line\n            this.transformOrigin = `${lastPosition.x - modalElement.offsetLeft}px ${lastPosition.y - modalElement.offsetTop}px 0px`;\n        }\n    }\n\n    /**\n     * Take care of the body's overflow to decide the existense of scrollbar\n     * @param plusNum The number that the openModals.length will increase soon\n     */\n    private changeBodyOverflow(plusNum: number = 0) {\n        const openModals = this.modalControl.openModals;\n\n        if (openModals.length + plusNum > 0) {\n            // tslint:disable-next-line\n            this.renderer.setStyle(this.document.body, 'padding-right', `${this.mcMeasureScrollbarService.scrollBarWidth}px`);\n            this.renderer.setStyle(this.document.body, 'overflow', 'hidden');\n        } else {\n            this.renderer.removeStyle(this.document.body, 'padding-right');\n            this.renderer.removeStyle(this.document.body, 'overflow');\n        }\n    }\n}\n\n////////////\n\nfunction isPromise(obj: {} | void): boolean {\n    // tslint:disable-next-line\n    return !!obj && (typeof obj === 'object' || typeof obj === 'function') && typeof (obj as Promise<{}>).then === 'function' && typeof (obj as Promise<{}>).catch === 'function';\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n\n@Pipe({\n    name: 'toCssUnit'\n})\nexport class CssUnitPipe implements PipeTransform {\n    transform(value: number | string, defaultUnit: string = 'px'): string {\n        const formatted = +value;\n\n        return isNaN(formatted) ? `${value}` : `${formatted}${defaultUnit}`;\n    }\n}\n","import {\n    AfterContentChecked,\n    AfterContentInit,\n    AfterViewInit,\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    ContentChild,\n    ContentChildren, Directive,\n    ElementRef,\n    QueryList,\n    ViewEncapsulation\n} from '@angular/core';\nimport { NgControl } from '@angular/forms';\nimport { ESCAPE } from '@ptsecurity/cdk/keycodes';\nimport { CanColor, CanColorCtor, mixinColor } from '@ptsecurity/mosaic/core';\nimport { EMPTY, merge } from 'rxjs';\nimport { startWith } from 'rxjs/operators';\n\n\nimport { McCleaner } from './cleaner';\nimport { McFormFieldControl } from './form-field-control';\nimport { getMcFormFieldMissingControlError } from './form-field-errors';\nimport { McFormFieldNumberControl } from './form-field-number-control';\nimport { McHint } from './hint';\nimport { McPrefix } from './prefix';\nimport { McStepper } from './stepper';\nimport { McSuffix } from './suffix';\n\n\nlet nextUniqueId = 0;\n\nexport class McFormFieldBase {\n    constructor(public _elementRef: ElementRef) {}\n}\n\nexport const _McFormFieldMixinBase: CanColorCtor & typeof McFormFieldBase = mixinColor(McFormFieldBase);\n\n@Component({\n    selector: 'mc-form-field',\n    exportAs: 'mcFormField',\n    templateUrl: 'form-field.html',\n    // McInput is a directive and can't have styles, so we need to include its styles here.\n    // The McInput styles are fairly minimal so it shouldn't be a big deal for people who\n    // aren't using McInput.\n    styleUrls: [\n        'form-field.css',\n        '../input/input.css',\n        '../textarea/textarea.css'\n    ],\n    host: {\n        class: 'mc-form-field',\n        '[class.mc-form-field_invalid]': '_control.errorState',\n        '[class.mc-disabled]': '_control.disabled',\n        '[class.mc-form-field_has-prefix]': 'hasPrefix',\n        '[class.mc-form-field_has-suffix]': 'hasSuffix',\n        '[class.mc-form-field_has-cleaner]': 'canShowCleaner',\n        '[class.mc-form-field_has-stepper]': 'canShowStepper',\n        '[class.mc-focused]': '_control.focused',\n        '[class.ng-untouched]': '_shouldForward(\"untouched\")',\n        '[class.ng-touched]': '_shouldForward(\"touched\")',\n        '[class.ng-pristine]': '_shouldForward(\"pristine\")',\n        '[class.ng-dirty]': '_shouldForward(\"dirty\")',\n        '[class.ng-valid]': '_shouldForward(\"valid\")',\n        '[class.ng-invalid]': '_shouldForward(\"invalid\")',\n        '[class.ng-pending]': '_shouldForward(\"pending\")',\n        '(keydown)': 'onKeyDown($event)',\n        '(mouseenter)': 'onHoverChanged(true)',\n        '(mouseleave)': 'onHoverChanged(false)'\n    },\n    inputs: ['color'],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\n\nexport class McFormField extends _McFormFieldMixinBase implements\n    AfterContentInit, AfterContentChecked, AfterViewInit, CanColor {\n\n    @ContentChild(McFormFieldControl) _control: McFormFieldControl<any>;\n    @ContentChild(McFormFieldNumberControl) _numberControl: McFormFieldNumberControl<any>;\n    @ContentChild(McStepper) _stepper: McStepper;\n\n    @ContentChildren(McHint) _hint: QueryList<McHint>;\n    @ContentChildren(McSuffix) _suffix: QueryList<McSuffix>;\n    @ContentChildren(McPrefix) _prefix: QueryList<McPrefix>;\n    @ContentChildren(McCleaner) _cleaner: QueryList<McCleaner>;\n\n    // Unique id for the internal form field label.\n    _labelId = `mc-form-field-label-${nextUniqueId++}`;\n\n    hovered: boolean = false;\n\n    constructor(public _elementRef: ElementRef, private _changeDetectorRef: ChangeDetectorRef) {\n        super(_elementRef);\n    }\n\n    ngAfterContentInit() {\n        this._validateControlChild();\n\n        if (this._control.controlType) {\n            this._elementRef.nativeElement.classList\n                .add(`mc-form-field-type-${this._control.controlType}`);\n\n            if (this._numberControl && this.hasStepper) {\n                this._stepper.stepUp.subscribe(this.onStepUp.bind(this));\n                this._stepper.stepDown.subscribe(this.onStepDown.bind(this));\n            }\n        }\n\n        // Subscribe to changes in the child control state in order to update the form field UI.\n        this._control.stateChanges.pipe(startWith())\n            .subscribe(() => {\n                this._changeDetectorRef.markForCheck();\n            });\n\n        if (this._numberControl) {\n            this._numberControl.stateChanges.pipe(startWith())\n                .subscribe(() => {\n                    this._changeDetectorRef.markForCheck();\n                });\n        }\n\n        // Run change detection if the value changes.\n        const valueChanges = this._control.ngControl && this._control.ngControl.valueChanges || EMPTY;\n\n        merge(valueChanges)\n            .subscribe(() => this._changeDetectorRef.markForCheck());\n    }\n\n    ngAfterContentChecked() {\n        this._validateControlChild();\n    }\n\n    ngAfterViewInit() {\n        // Avoid animations on load.\n        this._changeDetectorRef.detectChanges();\n    }\n\n    clearValue($event) {\n        $event.stopPropagation();\n\n        if (this._control && this._control.ngControl) {\n            this._control.ngControl.reset();\n        }\n    }\n\n    onContainerClick($event) {\n        if (this._control.onContainerClick) {\n            this._control.onContainerClick($event);\n        }\n    }\n\n    onKeyDown(event: KeyboardEvent): void {\n        // tslint:disable-next-line:deprecation\n        if (event.keyCode === ESCAPE && this._control.focused && this.hasCleaner) {\n            if (this._control && this._control.ngControl) {\n                this._control.ngControl.reset();\n            }\n\n            event.preventDefault();\n        }\n    }\n\n    onHoverChanged(isHovered: boolean) {\n        if (isHovered !== this.hovered) {\n            this.hovered  = isHovered;\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n\n    onStepUp() {\n        if (this._numberControl) {\n            this._numberControl.stepUp(this._numberControl.step);\n        }\n    }\n\n    onStepDown() {\n        if (this._numberControl) {\n            this._numberControl.stepDown(this._numberControl.step);\n        }\n    }\n\n    /** Determines whether a class from the NgControl should be forwarded to the host element. */\n    _shouldForward(prop: keyof NgControl): boolean {\n        const ngControl = this._control ? this._control.ngControl : null;\n\n        return ngControl && ngControl[prop];\n    }\n\n    /** Throws an error if the form field's control is missing. */\n    protected _validateControlChild() {\n        if (!this._control) {\n            throw getMcFormFieldMissingControlError();\n        }\n    }\n\n    get hasHint(): boolean {\n        return this._hint && this._hint.length > 0;\n    }\n\n    get hasSuffix(): boolean {\n        return this._suffix && this._suffix.length > 0;\n    }\n\n    get hasPrefix(): boolean {\n        return this._prefix && this._prefix.length > 0;\n    }\n\n    get hasCleaner(): boolean {\n        return this._cleaner && this._cleaner.length > 0;\n    }\n\n    get hasStepper(): boolean {\n        return !!this._stepper;\n    }\n\n    get canShowCleaner(): boolean {\n        return this.hasCleaner &&\n            this._control &&\n            this._control.ngControl\n                ? this._control.ngControl.value && !this._control.disabled\n                : false;\n    }\n\n\n    get disabled(): boolean {\n        return this._control && this._control.disabled;\n    }\n\n    get canShowStepper(): boolean {\n        return this._numberControl &&\n            !this.disabled &&\n            (\n                this._numberControl.focused ||\n                this.hovered\n            );\n    }\n}\n\n@Directive({\n    selector: 'mc-form-field[mcFormFieldWithoutBorders]',\n    exportAs: 'mcFormFieldWithoutBorders',\n    host: { class: 'mc-form-field_without-borders' }\n})\nexport class McFormFieldWithoutBorders {}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { McIconModule } from '@ptsecurity/mosaic/icon';\n\nimport { McCleaner } from './cleaner';\nimport { McFormField, McFormFieldWithoutBorders } from './form-field';\nimport { McHint } from './hint';\nimport { McPrefix } from './prefix';\nimport { McStepper } from './stepper';\nimport { McSuffix } from './suffix';\n\n\n@NgModule({\n    declarations: [\n        McFormField,\n        McFormFieldWithoutBorders,\n        McHint,\n        McPrefix,\n        McSuffix,\n        McCleaner,\n        McStepper\n    ],\n    imports: [CommonModule, McIconModule],\n    exports: [\n        McFormField,\n        McFormFieldWithoutBorders,\n        McHint,\n        McPrefix,\n        McSuffix,\n        McCleaner,\n        McStepper\n    ]\n})\nexport class McFormFieldModule {\n}\n","import { InjectionToken } from '@angular/core';\n\n\nexport const MC_INPUT_VALUE_ACCESSOR =\n    new InjectionToken<{ value: any }>('MC_INPUT_VALUE_ACCESSOR');\n","function sanitizeNumber(value: number): number | null {\n    return !isFinite(value) || isNaN(value)\n        ? null\n        : value;\n}\n\nfunction getPrecision(value: number): number {\n    const arr = value.toString().split('.');\n\n    return arr.length === 1\n        ? 1\n        // tslint:disable-next-line:no-magic-numbers\n        :  Math.pow(10, arr[1].length);\n}\n\nfunction add(value1: number, value2: number) {\n    const precision = Math.max(getPrecision(value1), getPrecision(value2));\n\n    const res = (value1 * precision + value2 * precision) / precision;\n\n    return sanitizeNumber(res);\n}\n\nexport const stepUp = (value: number | null,\n                       max: number,\n                       min: number,\n                       step: number\n): number | null => {\n    let res;\n\n    if (value === null) {\n        res = add(min, step);\n\n        return res === null ? null : Math.min(res, max);\n    }\n\n    res = add(value, step);\n\n    return res === null ? null : Math.max(Math.min(res, max), min);\n};\n\nexport const stepDown = (value: number | null,\n                         max: number,\n                         min: number,\n                         step: number\n): number | null => {\n    let res;\n\n    if (value === null) {\n        res = add(max, -step);\n\n        return res === null ? null : Math.max(res, min);\n    }\n\n    res = add(value, -step);\n\n    return res === null ? null : Math.min(Math.max(res, min), max);\n};\n","import {\n    Attribute,\n    Directive, DoCheck, ElementRef, Inject, Input, OnChanges,\n    OnDestroy, Optional, Self\n} from '@angular/core';\nimport {\n    FormGroupDirective,\n    NgControl,\n    NgForm, NgModel\n} from '@angular/forms';\nimport { coerceBooleanProperty } from '@ptsecurity/cdk/coercion';\nimport {\n    END, C, V, X, A, DELETE, BACKSPACE, TAB, ENTER,\n    ESCAPE, ZERO, NINE, NUMPAD_ZERO, NUMPAD_NINE, NUMPAD_MINUS, DASH,\n    FF_MINUS, LEFT_ARROW, RIGHT_ARROW, HOME, UP_ARROW, DOWN_ARROW, F1, F12\n} from '@ptsecurity/cdk/keycodes';\nimport { getSupportedInputTypes, Platform } from '@ptsecurity/cdk/platform';\nimport {\n    CanUpdateErrorState,\n    CanUpdateErrorStateCtor,\n    ErrorStateMatcher,\n    mixinErrorState\n} from '@ptsecurity/mosaic/core';\nimport { McFormFieldControl, McFormFieldNumberControl } from '@ptsecurity/mosaic/form-field';\nimport { Subject } from 'rxjs';\n\nimport { getMcInputUnsupportedTypeError } from './input-errors';\nimport { MC_INPUT_VALUE_ACCESSOR } from './input-value-accessor';\nimport { stepDown, stepUp } from './stepperUtils';\n\n\nconst MC_INPUT_INVALID_TYPES = [\n    'button',\n    'checkbox',\n    'file',\n    'hidden',\n    'image',\n    'radio',\n    'range',\n    'reset',\n    'submit'\n];\n\nexport const BIG_STEP = 10;\nexport const SMALL_STEP = 1;\n\nlet nextUniqueId = 0;\n\nexport class McInputBase {\n    constructor(public _defaultErrorStateMatcher: ErrorStateMatcher,\n                public _parentForm: NgForm,\n                public _parentFormGroup: FormGroupDirective,\n                public ngControl: NgControl) {\n    }\n}\n\nexport const _McInputMixinBase: CanUpdateErrorStateCtor & typeof McInputBase = mixinErrorState(McInputBase);\n\n\n@Directive({\n    selector: `input[mcInput][type=\"number\"]`,\n    exportAs: 'mcNumericalInput',\n    providers: [NgModel, { provide: McFormFieldNumberControl, useExisting: McNumberInput }],\n    host: {\n        '(blur)': '_focusChanged(false)',\n        '(focus)': '_focusChanged(true)',\n        '(paste)': 'onPaste($event)',\n        '(keydown)': 'onKeyDown($event)'\n    }\n})\nexport class McNumberInput implements McFormFieldNumberControl<any> {\n\n    /**\n     * Implemented as part of McFormFieldNumberControl.\n     * @docs-private\n     */\n    @Input()\n    bigStep: number;\n\n    /**\n     * Implemented as part of McFormFieldNumberControl.\n     * @docs-private\n     */\n    @Input()\n    step: number;\n\n    @Input()\n    min: number;\n\n    @Input()\n    max: number;\n\n    /**\n     * Implemented as part of McFormFieldNumberControl.\n     * @docs-private\n     */\n    value: any;\n\n    /**\n     * Implemented as part of McFormFieldNumberControl.\n     * @docs-private\n     */\n    focused: boolean = false;\n\n    /**\n     * Implemented as part of McFormFieldNumberControl.\n     * @docs-private\n     */\n    readonly stateChanges: Subject<void> = new Subject<void>();\n\n    private readonly _host: HTMLInputElement;\n\n    constructor(\n        private _platform: Platform ,\n        private _elementRef: ElementRef,\n        private _model: NgModel,\n        @Attribute('step') step: string,\n        @Attribute('big-step') bigStep: string,\n        @Attribute('min') min: string,\n        @Attribute('max') max: string\n    ) {\n        this.step = this.isDigit(step) ? parseFloat(step) : SMALL_STEP;\n        this.bigStep = this.isDigit(bigStep) ? parseFloat(bigStep) : BIG_STEP;\n        this.min = this.isDigit(min) ? parseFloat(min) : -Infinity;\n        this.max = this.isDigit(max) ? parseFloat(max) : Infinity;\n\n        this._host = this._elementRef.nativeElement;\n\n        const self = this;\n\n        if ('valueAsNumber' in this._host) {\n            Object.defineProperty(Object.getPrototypeOf(this._host), 'valueAsNumber', {\n                // tslint:disable-next-line:no-reserved-keywords\n                get() {\n                    const res = parseFloat(self.normalizeSplitter(this.value));\n\n                    return isNaN(res) ? null : res;\n                }\n            });\n        }\n    }\n\n    _focusChanged(isFocused: boolean) {\n        if (isFocused !== this.focused) {\n            this.focused = isFocused;\n            this.stateChanges.next();\n        }\n    }\n\n    onKeyDown(event: KeyboardEvent) {\n        // tslint:disable-next-line:deprecation\n        const keyCode = event.keyCode;\n\n        const isCtrlA = (e) => e.keyCode === A && (e.ctrlKey || e.metaKey);\n        const isCtrlC = (e) => e.keyCode === C && (e.ctrlKey || e.metaKey);\n        const isCtrlV = (e) => e.keyCode === V && (e.ctrlKey || e.metaKey);\n        const isCtrlX = (e) => e.keyCode === X && (e.ctrlKey || e.metaKey);\n\n        const isFKey = (e) => e.keyCode >= F1 && e.keyCode <= F12;\n\n        const isNumber = (e) => (e.keyCode >= ZERO && e.keyCode <= NINE) ||\n            (e.keyCode >= NUMPAD_ZERO && e.keyCode <= NUMPAD_NINE);\n\n        const minuses = [NUMPAD_MINUS, DASH, FF_MINUS];\n        const serviceKeys = [DELETE, BACKSPACE, TAB, ESCAPE, ENTER];\n        const arrows = [LEFT_ARROW, RIGHT_ARROW];\n        const allowedKeys =  [HOME, END].concat(arrows).concat(serviceKeys).concat(minuses);\n\n        const isIEPeriod = (e) => e.key === '.' || e.key === 'Decimal';\n        const isNotIEPeriod = (e) => e.key === '.' || e.key === ',';\n\n        // Decimal is for IE\n        const isPeriod = (e) => this._platform.EDGE || this._platform.TRIDENT\n            ? isIEPeriod(e)\n            : isNotIEPeriod(e);\n\n        if (allowedKeys.indexOf(keyCode) !== -1 ||\n            isCtrlA(event) ||\n            isCtrlC(event) ||\n            isCtrlV(event) ||\n            isCtrlX(event) ||\n            isFKey(event) ||\n            isPeriod(event)\n        ) {\n            // let it happen, don't do anything\n            return;\n        }\n        // Ensure that it is not a number and stop the keypress\n        if (event.shiftKey || !isNumber(event)) {\n            event.preventDefault();\n\n            // process steps\n            const step = event.shiftKey ? this.bigStep : this.step;\n\n            if (keyCode === UP_ARROW) {\n                this.stepUp(step);\n            }\n\n            if (keyCode === DOWN_ARROW) {\n                this.stepDown(step);\n            }\n        }\n    }\n\n    onPaste(event) {\n        let value = event.clipboardData.getData('text');\n        value = this.normalizeSplitter(value);\n\n        if (!this.isDigit(value)) {\n            event.preventDefault();\n        }\n    }\n\n    stepUp(step: number) {\n        this._elementRef.nativeElement.focus();\n        const res = stepUp(this._host.valueAsNumber, this.max, this.min, step);\n        this._host.value = res === null ? '' : res.toString();\n        this._model.update.emit(this._host.valueAsNumber);\n    }\n\n    stepDown(step: number) {\n        this._elementRef.nativeElement.focus();\n        const res = stepDown(this._host.valueAsNumber, this.max, this.min, step);\n        this._host.value = res === null ? '' : res.toString();\n        this._model.update.emit(this._host.valueAsNumber);\n    }\n\n    private normalizeSplitter(value: string): string {\n        return value ? value.replace(/,/g, '.') : value;\n    }\n\n    private isDigit(value: string): boolean {\n        return this.isFloat(value) || this.isInt(value);\n    }\n\n    private isFloat(value: string): boolean {\n        return /^-?\\d+\\.\\d+$/.test(value);\n    }\n\n    private isInt(value: string): boolean {\n        return /^-?\\d+$/.test(value);\n    }\n}\n\n@Directive({\n    selector: `input[mcInput]`,\n    exportAs: 'mcInput',\n    host: {\n        class: 'mc-input',\n        // Native input properties that are overwritten by Angular inputs need to be synced with\n        // the native input element. Otherwise property bindings for those don't work.\n        '[attr.id]': 'id',\n        '[attr.placeholder]': 'placeholder',\n        '[disabled]': 'disabled',\n        '[required]': 'required',\n        '(blur)': '_focusChanged(false)',\n        '(focus)': '_focusChanged(true)',\n        '(input)': '_onInput()'\n    },\n    providers: [{ provide: McFormFieldControl, useExisting: McInput }]\n})\nexport class McInput extends _McInputMixinBase implements McFormFieldControl<any>, OnChanges,\n    OnDestroy, DoCheck, CanUpdateErrorState {\n\n    /** An object used to control when error messages are shown. */\n    @Input() errorStateMatcher: ErrorStateMatcher;\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    focused: boolean = false;\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    readonly stateChanges: Subject<void> = new Subject<void>();\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    controlType: string = 'mc-input';\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    @Input()\n    get disabled(): boolean {\n        if (this.ngControl && this.ngControl.disabled !== null) {\n            return this.ngControl.disabled;\n        }\n\n        return this._disabled;\n    }\n\n    set disabled(value: boolean) {\n        this._disabled = coerceBooleanProperty(value);\n\n        // Browsers may not fire the blur event if the input is disabled too quickly.\n        // Reset from here to ensure that the element doesn't become stuck.\n        if (this.focused) {\n            this.focused = false;\n            this.stateChanges.next();\n        }\n    }\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    @Input()\n    get id(): string {\n        return this._id;\n    }\n\n    set id(value: string) {\n        this._id = value || this._uid;\n    }\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    @Input() placeholder: string;\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    @Input()\n    get required(): boolean {\n        return this._required;\n    }\n\n    set required(value: boolean) {\n        this._required = coerceBooleanProperty(value);\n    }\n\n    // tslint:disable no-reserved-keywords\n    /** Input type of the element. */\n    @Input()\n    get type(): string {\n        return this._type;\n    }\n\n    set type(value: string) {\n        this._type = value || 'text';\n        this._validateType();\n\n        // When using Angular inputs, developers are no longer able to set the properties on the native\n        // input element. To ensure that bindings for `type` work, we need to sync the setter\n        // with the native property. Textarea elements don't support the type property or attribute.\n        if (getSupportedInputTypes().has(this._type)) {\n            this._elementRef.nativeElement.type = this._type;\n        }\n    }\n    // tslint:enable no-reserved-keywords\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    @Input()\n    get value(): string {\n        return this._inputValueAccessor.value;\n    }\n\n    set value(value: string) {\n        if (value !== this.value) {\n            this._inputValueAccessor.value = value;\n            this.stateChanges.next();\n        }\n    }\n\n    protected _uid = `mc-input-${nextUniqueId++}`;\n    protected _previousNativeValue: any;\n    protected _disabled = false;\n    protected _id: string;\n    protected _required = false;\n    protected _type = 'text';\n    protected _neverEmptyInputTypes = [\n        'date',\n        'datetime',\n        'datetime-local',\n        'month',\n        'time',\n        'week'\n    ].filter((t) => getSupportedInputTypes().has(t));\n\n    private _inputValueAccessor: { value: any };\n\n    constructor(protected _elementRef: ElementRef,\n                @Optional() @Self() public ngControl: NgControl,\n                @Optional() _parentForm: NgForm,\n                @Optional() _parentFormGroup: FormGroupDirective,\n                _defaultErrorStateMatcher: ErrorStateMatcher,\n                @Optional() @Self() @Inject(MC_INPUT_VALUE_ACCESSOR) inputValueAccessor: any) {\n        super(_defaultErrorStateMatcher, _parentForm, _parentFormGroup, ngControl);\n        // If no input value accessor was explicitly specified, use the element as the input value\n        // accessor.\n        this._inputValueAccessor = inputValueAccessor || this._elementRef.nativeElement;\n\n        this._previousNativeValue = this.value;\n\n        // Force setter to be called in case id was not specified.\n        this.id = this.id;\n    }\n\n    ngOnChanges() {\n        this.stateChanges.next();\n    }\n\n    ngOnDestroy() {\n        this.stateChanges.complete();\n    }\n\n    ngDoCheck() {\n        if (this.ngControl) {\n            // We need to re-evaluate this on every change detection cycle, because there are some\n            // error triggers that we can't subscribe to (e.g. parent form submissions). This means\n            // that whatever logic is in here has to be super lean or we risk destroying the performance.\n            this.updateErrorState();\n        }\n\n        // We need to dirty-check the native element's value, because there are some cases where\n        // we won't be notified when it changes (e.g. the consumer isn't using forms or they're\n        // updating the value using `emitEvent: false`).\n        this._dirtyCheckNativeValue();\n    }\n\n    /** Focuses the input. */\n    focus(): void {\n        this._elementRef.nativeElement.focus();\n    }\n\n    /** Callback for the cases where the focused state of the input changes. */\n    _focusChanged(isFocused: boolean) {\n        if (isFocused !== this.focused) {\n            this.focused = isFocused;\n            this.stateChanges.next();\n        }\n    }\n\n    _onInput() {\n        // This is a noop function and is used to let Angular know whenever the value changes.\n        // Angular will run a new change detection each time the `input` event has been dispatched.\n        // It's necessary that Angular recognizes the value change, because when floatingLabel\n        // is set to false and Angular forms aren't used, the placeholder won't recognize the\n        // value changes and will not disappear.\n        // Listening to the input event wouldn't be necessary when the input is using the\n        // FormsModule or ReactiveFormsModule, because Angular forms also listens to input events.\n    }\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    get empty(): boolean {\n        return !this._isNeverEmpty() && !this._elementRef.nativeElement.value && !this._isBadInput();\n    }\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    onContainerClick() {\n        this.focus();\n    }\n\n    /** Does some manual dirty checking on the native input `value` property. */\n    protected _dirtyCheckNativeValue() {\n        const newValue = this.value;\n\n        if (this._previousNativeValue !== newValue) {\n            this._previousNativeValue = newValue;\n            this.stateChanges.next();\n        }\n    }\n\n    /** Make sure the input is a supported type. */\n    protected _validateType() {\n        if (MC_INPUT_INVALID_TYPES.indexOf(this._type) > -1) {\n            throw getMcInputUnsupportedTypeError(this._type);\n        }\n    }\n\n    /** Checks whether the input type is one of the types that are never empty. */\n    protected _isNeverEmpty() {\n        return this._neverEmptyInputTypes.indexOf(this._type) > -1;\n    }\n\n    /** Checks whether the input is invalid based on the native validation. */\n    protected _isBadInput() {\n        // The `validity` property won't be present on platform-server.\n        const validity = (this._elementRef.nativeElement as HTMLInputElement).validity;\n\n        return validity && validity.badInput;\n    }\n}\n\n@Directive({\n    selector: 'input[mcInputMonospace]',\n    exportAs: 'McInputMonospace',\n    host: { class: 'mc-input_monospace' }\n})\nexport class McInputMono {\n}\n","import { Directive, forwardRef, Input, OnChanges, Provider, SimpleChanges } from '@angular/core';\nimport { AbstractControl, NG_VALIDATORS, ValidationErrors, Validator, ValidatorFn, Validators } from '@angular/forms';\n\n\nexport const MIN_VALIDATOR: Provider = {\n    provide: NG_VALIDATORS,\n    useExisting: forwardRef(() => MinValidator),\n    multi: true\n};\n\n/**\n * A directive which installs the {@link MinValidator} for any `formControlName`,\n * `formControl`, or control with `ngModel` that also has a `min` attribute.\n *\n * @experimental\n */\n@Directive({\n    selector: '[min][formControlName],[min][formControl],[min][ngModel]',\n    providers: [MIN_VALIDATOR],\n    host: {'[attr.min]': 'min ? min : null'}\n})\nexport class MinValidator implements Validator, OnChanges {\n\n    @Input() min: string;\n    private _validator: ValidatorFn;\n    private _onChange: () => void;\n\n    ngOnChanges(changes: SimpleChanges): void {\n        if ('min' in changes) {\n            this._createValidator();\n            if (this._onChange) { this._onChange(); }\n        }\n    }\n\n    validate(c: AbstractControl): ValidationErrors | null { return this._validator(c); }\n\n    registerOnValidatorChange(fn: () => void): void { this._onChange = fn; }\n\n    private _createValidator(): void { this._validator = Validators.min(parseInt(this.min, 10)); }\n}\n\n\nexport const MAX_VALIDATOR: Provider = {\n    provide: NG_VALIDATORS,\n    useExisting: forwardRef(() => MaxValidator),\n    multi: true\n};\n\n/**\n * A directive which installs the {@link MaxValidator} for any `formControlName`,\n * `formControl`, or control with `ngModel` that also has a `min` attribute.\n *\n * @experimental\n */\n@Directive({\n    selector: '[max][formControlName],[max][formControl],[max][ngModel]',\n    providers: [MAX_VALIDATOR],\n    host: {\n        '[attr.max]': 'max ? max : null'\n    }\n})\nexport class MaxValidator implements Validator,\n    OnChanges {\n\n    @Input() max: string;\n    private _validator: ValidatorFn;\n    private _onChange: () => void;\n\n    ngOnChanges(changes: SimpleChanges): void {\n        if ('max' in changes) {\n            this._createValidator();\n            if (this._onChange) { this._onChange(); }\n        }\n    }\n\n    validate(c: AbstractControl): ValidationErrors | null { return this._validator(c); }\n\n    registerOnValidatorChange(fn: () => void): void { this._onChange = fn; }\n\n    private _createValidator(): void { this._validator = Validators.max(parseInt(this.max, 10)); }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { A11yModule } from '@ptsecurity/cdk/a11y';\nimport { McCommonModule } from '@ptsecurity/mosaic/core';\n\nimport { McInput, McInputMono, McNumberInput } from './input';\nimport { MaxValidator, MinValidator } from './input-number-validators';\n\n\n@NgModule({\n    imports: [CommonModule, A11yModule, McCommonModule, FormsModule],\n    exports: [McInput, McNumberInput, McInputMono, MinValidator, MaxValidator],\n    declarations: [McInput, McNumberInput, McInputMono, MinValidator, MaxValidator ]\n})\nexport class McInputModule {\n}\n","import { Component } from '@angular/core';\n\n\n@Component({\n    selector: 'mc-content',\n    preserveWhitespaces: false,\n    templateUrl: './content.component.html',\n    styles: [\n        `:host {\n            display: block;\n        }`\n    ],\n    host: {\n        '[class.mc-layout-content]': 'true'\n    }\n})\nexport class McContentComponent {\n}\n","import { Component } from '@angular/core';\n\n\n@Component({\n    selector: 'mc-footer',\n    preserveWhitespaces: false,\n    templateUrl: './footer.component.html',\n    styles: [\n        `:host {\n            display: block;\n        }`\n    ],\n    host: {\n        '[class.mc-layout-footer]': 'true'\n    }\n})\nexport class McFooterComponent {\n}\n","import { Component } from '@angular/core';\n\n\n@Component({\n    selector : 'mc-header',\n    preserveWhitespaces: false,\n    templateUrl: './header.component.html',\n    styles: [\n        `:host {\n            display: block;\n        }`\n    ],\n    host: {\n        '[class.mc-layout-header]': 'true'\n    }\n})\nexport class McHeaderComponent {\n}\n","import { ChangeDetectionStrategy, Component, ViewEncapsulation } from '@angular/core';\n\n\n@Component({\n    selector: 'mc-layout',\n    preserveWhitespaces: false,\n    styleUrls: ['layout.css'],\n    templateUrl: './layout.component.html',\n    host: {\n        '[class.mc-layout]': 'true',\n        '[class.mc-layout-has-sidebar]': 'hasSidebar'\n    },\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class McLayoutComponent {\n    hasSidebar = false;\n}\n","import {\n    ChangeDetectionStrategy,\n    Component,\n    EventEmitter,\n    Host,\n    Input,\n    OnInit,\n    Optional,\n    Output\n} from '@angular/core';\nimport { toBoolean } from '@ptsecurity/mosaic/core';\n\nimport { McLayoutComponent } from './layout.component';\n\n\n@Component({\n    selector: 'mc-sidebar',\n    preserveWhitespaces: false,\n    templateUrl: './sidebar.component.html',\n    host: {\n        '[class.mc-layout-sidebar]': 'true',\n        '[class.mc-layout-sidebar-collapsed]': 'mcCollapsed',\n        '[style.flex]': 'mcFlex',\n        '[style.max-width.px]': 'mcWidth',\n        '[style.min-width.px]': 'mcWidth',\n        '[style.width.px]': 'mcWidth'\n    },\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class McSidebarComponent implements OnInit {\n\n    @Input() _mcWidth = 200;\n    @Input() mcCollapsedWidth = 80;\n\n    @Input()\n    set mcCollapsible(value: boolean) {\n        this.collapsible = toBoolean(value);\n    }\n\n    get mcCollapsible(): boolean {\n        return this.collapsible;\n    }\n\n    @Input()\n    set mcCollapsed(value: boolean) {\n        this.collapsed = toBoolean(value);\n    }\n\n    get mcCollapsed(): boolean {\n        return this.collapsed;\n    }\n\n    // tslint:disable-next-line\n    @Output() mcCollapsedChange = new EventEmitter();\n\n    private collapsed = false;\n    private collapsible = false;\n\n    get mcFlex(): string {\n        if (this.mcCollapsed) {\n            return `0 0 ${this.mcCollapsedWidth}px`;\n        } else {\n            return `0 0 ${this.mcWidth}px`;\n        }\n    }\n\n    get mcWidth(): number {\n        if (this.mcCollapsed) {\n            return this.mcCollapsedWidth;\n        } else {\n            return this._mcWidth;\n        }\n    }\n\n    constructor(\n        @Optional() @Host() private mcLayoutComponent: McLayoutComponent) {\n    }\n\n    ngOnInit() {\n        if (this.mcLayoutComponent) {\n            this.mcLayoutComponent.hasSidebar = true;\n        }\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { McContentComponent } from './content.component';\nimport { McFooterComponent } from './footer.component';\nimport { McHeaderComponent } from './header.component';\nimport { McLayoutComponent } from './layout.component';\nimport { McSidebarComponent } from './sidebar.component';\n\n\n@NgModule({\n    imports: [ CommonModule ],\n    exports: [\n        McLayoutComponent,\n        McContentComponent,\n        McFooterComponent,\n        McHeaderComponent,\n        McSidebarComponent\n    ],\n    declarations: [\n        McLayoutComponent,\n        McContentComponent,\n        McFooterComponent,\n        McHeaderComponent,\n        McSidebarComponent\n    ]\n})\nexport class McLayoutModule {\n}\n","import {\n    ChangeDetectionStrategy,\n    Component,\n    Directive,\n    ElementRef,\n    OnDestroy,\n    QueryList,\n    ViewEncapsulation,\n    ContentChildren\n} from '@angular/core';\n\nimport { FocusMonitor } from '@ptsecurity/cdk/a11y';\n\nimport { mixinColor, mixinDisabled, CanColor, CanDisable, CanDisableCtor, CanColorCtor } from '@ptsecurity/mosaic/core';\nimport { McIcon } from '@ptsecurity/mosaic/icon';\n\n\n@Directive({\n    selector: 'button[mc-button], a[mc-button]',\n    host: { class: 'mc-button' }\n})\nexport class McButtonCSSStyler {}\n\n\n@Directive({\n    selector: 'button[mc-icon-button], a[mc-icon-button]',\n    queries: {\n        contentChildren: new ContentChildren(McIcon)\n    },\n    host: { class: 'mc-icon-button' }\n})\nexport class McIconButtonCSSStyler {\n    nativeElement: Element;\n\n    contentChildren: QueryList<McIcon>;\n\n    constructor(elementRef: ElementRef) {\n        this.nativeElement = elementRef.nativeElement;\n    }\n\n    ngAfterContentInit() {\n        this._addClassModificatorForIcons();\n    }\n\n    _addClassModificatorForIcons() {\n        const twoIcons = 2;\n        const icons = this.contentChildren.map((item) => item._elementRef.nativeElement);\n\n        if (icons.length === 1) {\n            const iconElement = icons[0];\n\n            if (!iconElement.previousElementSibling && !iconElement.nextElementSibling) {\n                if (iconElement.nextSibling) {\n                    iconElement.classList.add('mc-icon_left');\n                    this.nativeElement.classList.add('mc-icon-button_left');\n                }\n\n                if (iconElement.previousSibling) {\n                    iconElement.classList.add('mc-icon_right');\n                    this.nativeElement.classList.add('mc-icon-button_right');\n                }\n            }\n        } else if (icons.length === twoIcons) {\n            const firstIconElement = icons[0];\n            const secondIconElement = icons[1];\n\n            firstIconElement.classList.add('mc-icon_left');\n            secondIconElement.classList.add('mc-icon_right');\n        }\n    }\n}\n\n\nexport class McButtonBase {\n    constructor(public _elementRef: ElementRef) {}\n}\n\nexport const _McButtonMixinBase:\n    CanDisableCtor &\n    CanColorCtor &\n    typeof McButtonBase =\n        mixinColor(mixinDisabled(McButtonBase));\n\n\n@Component({\n    selector: `\n        button[mc-button],\n        button[mc-xs-button],\n        button[mc-sm-button],\n        button[mc-lg-button],\n        button[mc-xl-button]\n    `,\n    templateUrl: './button.component.html',\n    styleUrls: ['./button.css'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n    inputs: ['disabled', 'color'],\n    host: {\n        '[disabled]': 'disabled || null'\n    }\n})\nexport class McButton extends _McButtonMixinBase implements OnDestroy, CanDisable, CanColor {\n    constructor(elementRef: ElementRef, private _focusMonitor: FocusMonitor) {\n        super(elementRef);\n\n        this._focusMonitor.monitor(this._elementRef.nativeElement, true);\n    }\n\n    ngOnDestroy() {\n        this._focusMonitor.stopMonitoring(this._elementRef.nativeElement);\n    }\n\n    focus(): void {\n        this._getHostElement().focus();\n    }\n\n    _getHostElement() {\n        return this._elementRef.nativeElement;\n    }\n}\n\n\n@Component({\n    selector: 'a[mc-button], a[mc-xs-button], a[mc-sm-button], a[mc-lg-button], a[mc-xl-button]',\n    templateUrl: './button.component.html',\n    styleUrls: ['./button.css'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n    inputs: ['disabled', 'color'],\n    host: {\n        '[attr.tabindex]': 'disabled ? -1 : 0',\n        '[attr.disabled]': 'disabled || null',\n        '(click)': '_haltDisabledEvents($event)'\n    }\n})\nexport class McAnchor extends McButton {\n    constructor(focusMonitor: FocusMonitor, elementRef: ElementRef) {\n        super(elementRef, focusMonitor);\n    }\n\n    _haltDisabledEvents(event: Event) {\n        if (this.disabled) {\n            event.preventDefault();\n            event.stopImmediatePropagation();\n        }\n    }\n}\n\n\n@Component({\n    selector: 'button[mc-icon-button]',\n    templateUrl: './button.component.html',\n    styleUrls: ['./button.css'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n    inputs: ['disabled', 'color'],\n    host: {\n        '[attr.tabindex]': 'disabled ? -1 : 0',\n        '[attr.disabled]': 'disabled || null'\n    }\n})\nexport class McIconButton extends McButton {\n    constructor(focusMonitor: FocusMonitor, elementRef: ElementRef) {\n        super(elementRef, focusMonitor);\n    }\n\n    _haltDisabledEvents(event: Event) {\n        if (this.disabled) {\n            event.preventDefault();\n            event.stopImmediatePropagation();\n        }\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { A11yModule } from '@ptsecurity/cdk/a11y';\nimport { PlatformModule } from '@ptsecurity/cdk/platform';\n\nimport {\n    McButton,\n    McAnchor,\n    McIconButton,\n    McButtonCSSStyler,\n    McIconButtonCSSStyler\n} from './button.component';\n\n\n@NgModule({\n    imports: [\n        CommonModule,\n        A11yModule,\n        PlatformModule\n    ],\n    exports: [\n        McButton,\n        McAnchor,\n        McIconButton,\n        McButtonCSSStyler,\n        McIconButtonCSSStyler\n    ],\n    declarations: [\n        McButton,\n        McAnchor,\n        McIconButton,\n        McButtonCSSStyler,\n        McIconButtonCSSStyler\n    ]\n})\nexport class McButtonModule {}\n","import {\n    Output,\n    ChangeDetectionStrategy,\n    Component,\n    ElementRef, Input,\n    OnDestroy, EventEmitter,\n    ViewEncapsulation, HostBinding\n} from '@angular/core';\n\nimport { FocusMonitor } from '@ptsecurity/cdk/a11y';\nimport { SPACE } from '@ptsecurity/cdk/keycodes';\n\n\n@Component({\n    selector: 'mc-card',\n    templateUrl: './card.component.html',\n    styleUrls: ['./card.component.css'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n    inputs: ['color'],\n    host: {\n        class: 'mc-card',\n        '[class.mc-card_readonly]': 'readonly',\n        '[class.mc-card_selected]': 'selected',\n        '(keydown)': 'onKeyDown($event)',\n        '(click)': 'onClick($event)'\n    }\n})\nexport class McCard implements OnDestroy {\n    get tabIndex(): number | null {\n        return this.readonly ? null : this._tabIndex;\n    }\n\n    @HostBinding('attr.tabIndex')\n    @Input()\n    set tabIndex(value: number | null) {\n        this._tabIndex = value;\n    }\n\n    @Input()\n    readonly = false;\n\n    @Input()\n    selected = false;\n\n    @Output()\n    selectedChange = new EventEmitter<boolean>();\n\n    private _tabIndex: number | null = 0;\n\n    constructor(private _elementRef: ElementRef, private _focusMonitor: FocusMonitor) {\n        this._focusMonitor.monitor(this._elementRef.nativeElement, false);\n    }\n\n    ngOnDestroy() {\n        this._focusMonitor.stopMonitoring(this._elementRef.nativeElement);\n    }\n\n    focus(): void {\n        this.hostElement.focus();\n    }\n\n    onClick($event: MouseEvent) {\n        if (!this.readonly) {\n            $event.stopPropagation();\n\n            this.selectedChange.emit(!this.selected);\n        }\n    }\n\n    private get hostElement() {\n        return this._elementRef.nativeElement;\n    }\n\n    onKeyDown($event: KeyboardEvent) {\n        switch ($event.keyCode) {\n            case SPACE:\n                if (!this.readonly) {\n                    $event.preventDefault();\n                    this.selectedChange.emit(!this.selected);\n                }\n                break;\n            default:\n        }\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { A11yModule } from '@ptsecurity/cdk/a11y';\nimport { PlatformModule } from '@ptsecurity/cdk/platform';\n\nimport {\n    McCard\n} from './card.component';\n\n\n@NgModule({\n    imports: [\n        CommonModule,\n        A11yModule,\n        PlatformModule\n    ],\n    exports: [McCard],\n    declarations: [McCard]\n})\nexport class McCardModule {}\n","import { InjectionToken } from '@angular/core';\n\n\n/**\n * Checkbox click action when user click on input element.\n * noop: Do not toggle checked or indeterminate.\n * check: Only toggle checked status, ignore indeterminate.\n * check-indeterminate: Toggle checked status, set indeterminate to false. Default behavior.\n * undefined: Same as `check-indeterminate`.\n */\nexport type McCheckboxClickAction = 'noop' | 'check' | 'check-indeterminate' | undefined;\n\n/**\n * Injection token that can be used to specify the checkbox click behavior.\n */\nexport const MC_CHECKBOX_CLICK_ACTION =\n    new InjectionToken<McCheckboxClickAction>('mc-checkbox-click-action');\n","import {\n    AfterViewInit,\n    Attribute,\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    ElementRef,\n    EventEmitter,\n    forwardRef,\n    Inject,\n    Input,\n    OnDestroy,\n    Optional,\n    Output,\n    ViewChild,\n    ViewEncapsulation\n} from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { FocusMonitor, FocusOrigin } from '@ptsecurity/cdk/a11y';\nimport {\n    CanColor, CanColorCtor,\n    CanDisable, CanDisableCtor,\n    HasTabIndex, HasTabIndexCtor,\n    mixinColor,\n    mixinDisabled,\n    mixinTabIndex,\n    toBoolean\n} from '@ptsecurity/mosaic/core';\n\nimport { MC_CHECKBOX_CLICK_ACTION, McCheckboxClickAction } from './checkbox-config';\n\n\n// Increasing integer for generating unique ids for checkbox components.\nlet nextUniqueId = 0;\n\n/**\n * Provider Expression that allows mc-checkbox to register as a ControlValueAccessor.\n * This allows it to support [(ngModel)].\n * @docs-private\n */\nexport const MC_CHECKBOX_CONTROL_VALUE_ACCESSOR: any = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => McCheckbox),\n    multi: true\n};\n\n/**\n * Represents the different states that require custom transitions between them.\n * @docs-private\n */\nexport enum TransitionCheckState {\n    /** The initial state of the component before any user interaction. */\n    Init,\n    /** The state representing the component when it's becoming checked. */\n    Checked,\n    /** The state representing the component when it's becoming unchecked. */\n    Unchecked,\n    /** The state representing the component when it's becoming indeterminate. */\n    Indeterminate\n}\n\n/** Change event object emitted by McCheckbox. */\nexport class McCheckboxChange {\n    /** The source McCheckbox of the event. */\n    source: McCheckbox;\n    /** The new `checked` value of the checkbox. */\n    checked: boolean;\n}\n\n// Boilerplate for applying mixins to McCheckbox.\n/** @docs-private */\nexport class McCheckboxBase {\n    constructor(public _elementRef: ElementRef) {\n    }\n}\n\nexport const _McCheckboxMixinBase:\n    HasTabIndexCtor &\n    CanColorCtor &\n    CanDisableCtor &\n    typeof McCheckboxBase =\n        mixinTabIndex(mixinColor(mixinDisabled(McCheckboxBase)));\n\n\n/**\n * A mosaic checkbox component. Supports all of the functionality of an HTML5 checkbox,\n * and exposes a similar API. A McCheckbox can be either checked, unchecked, indeterminate, or\n * disabled. Note that all additional accessibility attributes are taken care of by the component,\n * so there is no need to provide them yourself. However, if you want to omit a label and still\n * have the checkbox be accessible, you may supply an [aria-label] input.\n */\n@Component({\n    selector: 'mc-checkbox',\n    templateUrl: 'checkbox.html',\n    styleUrls: ['checkbox.css'],\n    exportAs: 'mcCheckbox',\n    host: {\n        class: 'mc-checkbox',\n        '[id]': 'id',\n        '[attr.id]': 'id',\n        '[class.mc-indeterminate]': 'indeterminate',\n        '[class.mc-checked]': 'checked',\n        '[class.mc-disabled]': 'disabled',\n        '[class.mc-checkbox-label-before]': 'labelPosition == \"before\"'\n    },\n    providers: [MC_CHECKBOX_CONTROL_VALUE_ACCESSOR],\n    inputs: ['color', 'tabIndex'],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class McCheckbox extends _McCheckboxMixinBase implements ControlValueAccessor,\n    AfterViewInit, OnDestroy, CanColor, CanDisable, HasTabIndex {\n\n    /**\n     * Attached to the aria-label attribute of the host element. In most cases, arial-labelledby will\n     * take precedence so this may be omitted.\n     */\n    @Input('aria-label') ariaLabel: string = '';\n\n    /**\n     * Users can specify the `aria-labelledby` attribute which will be forwarded to the input element\n     */\n    @Input('aria-labelledby') ariaLabelledby: string | null = null;\n\n    private _uniqueId: string = `mc-checkbox-${++nextUniqueId}`;\n\n    /** A unique id for the checkbox input. If none is supplied, it will be auto-generated. */\n    @Input() id: string = this._uniqueId;\n\n    /** Returns the unique id for the visual hidden input. */\n    get inputId(): string {\n        return `${this.id || this._uniqueId}-input`;\n    }\n\n    /** Whether the checkbox is required. */\n    @Input()\n    get required(): boolean {\n        return this._required;\n    }\n\n    set required(value: boolean) {\n        this._required = toBoolean(value);\n    }\n\n    private _required: boolean;\n\n    /** Whether the label should appear after or before the checkbox. Defaults to 'after' */\n    @Input() labelPosition: 'before' | 'after' = 'after';\n\n    /** Name value will be applied to the input element if present */\n    @Input() name: string | null = null;\n\n    /** Event emitted when the checkbox's `checked` value changes. */\n    @Output() readonly change: EventEmitter<McCheckboxChange> =\n        new EventEmitter<McCheckboxChange>();\n\n    /** Event emitted when the checkbox's `indeterminate` value changes. */\n    @Output() readonly indeterminateChange: EventEmitter<boolean> = new EventEmitter<boolean>();\n\n    /** The value attribute of the native input element */\n    @Input() value: string;\n\n    /** The native `<input type=\"checkbox\">` element */\n    @ViewChild('input') _inputElement: ElementRef;\n\n    /**\n     * Called when the checkbox is blurred. Needed to properly implement ControlValueAccessor.\n     * @docs-private\n     */\n    _onTouched: () => any = () => {\n    }\n\n    private _currentAnimationClass: string = '';\n\n    private _currentCheckState: TransitionCheckState = TransitionCheckState.Init;\n\n    private _controlValueAccessorChangeFn: (value: any) => void = () => {\n    }\n\n    constructor(elementRef: ElementRef,\n                private _changeDetectorRef: ChangeDetectorRef,\n                private _focusMonitor: FocusMonitor,\n                @Attribute('tabindex') tabIndex: string,\n                @Optional() @Inject(MC_CHECKBOX_CLICK_ACTION)\n                private _clickAction: McCheckboxClickAction) {\n        super(elementRef);\n\n        this.tabIndex = parseInt(tabIndex) || 0;\n    }\n\n    ngAfterViewInit() {\n        this._focusMonitor\n            .monitor(this._inputElement.nativeElement)\n            .subscribe((focusOrigin) => this._onInputFocusChange(focusOrigin));\n    }\n\n    ngOnDestroy() {\n        this._focusMonitor.stopMonitoring(this._inputElement.nativeElement);\n    }\n\n    /**\n     * Whether the checkbox is checked.\n     */\n    @Input()\n    get checked(): boolean {\n        return this._checked;\n    }\n\n    set checked(value: boolean) {\n        if (value != this.checked) {\n            this._checked = value;\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n\n    private _checked: boolean = false;\n\n    /**\n     * Whether the checkbox is disabled. This fully overrides the implementation provided by\n     * mixinDisabled, but the mixin is still required because mixinTabIndex requires it.\n     */\n    @Input()\n    get disabled() {\n        return this._disabled;\n    }\n\n    set disabled(value: any) {\n        if (value != this.disabled) {\n            this._disabled = value;\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n\n    private _disabled: boolean = false;\n\n    /**\n     * Whether the checkbox is indeterminate. This is also known as \"mixed\" mode and can be used to\n     * represent a checkbox with three states, e.g. a checkbox that represents a nested list of\n     * checkable items. Note that whenever checkbox is manually clicked, indeterminate is immediately\n     * set to false.\n     */\n    @Input()\n    get indeterminate(): boolean {\n        return this._indeterminate;\n    }\n\n    set indeterminate(value: boolean) {\n        const changed = value != this._indeterminate;\n        this._indeterminate = value;\n\n        if (changed) {\n            if (this._indeterminate) {\n                this._transitionCheckState(TransitionCheckState.Indeterminate);\n            } else {\n                this._transitionCheckState(\n                    this.checked ? TransitionCheckState.Checked : TransitionCheckState.Unchecked);\n            }\n            this.indeterminateChange.emit(this._indeterminate);\n        }\n    }\n\n    private _indeterminate: boolean = false;\n\n    /** Method being called whenever the label text changes. */\n    _onLabelTextChange() {\n        // This method is getting called whenever the label of the checkbox changes.\n        // Since the checkbox uses the OnPush strategy we need to notify it about the change\n        // that has been recognized by the cdkObserveContent directive.\n        this._changeDetectorRef.markForCheck();\n    }\n\n    // Implemented as part of ControlValueAccessor.\n    writeValue(value: any) {\n        this.checked = !!value;\n    }\n\n    // Implemented as part of ControlValueAccessor.\n    registerOnChange(fn: (value: any) => void) {\n        this._controlValueAccessorChangeFn = fn;\n    }\n\n    // Implemented as part of ControlValueAccessor.\n    registerOnTouched(fn: any) {\n        this._onTouched = fn;\n    }\n\n    // Implemented as part of ControlValueAccessor.\n    setDisabledState(isDisabled: boolean) {\n        this.disabled = isDisabled;\n    }\n\n    _getAriaChecked(): 'true' | 'false' | 'mixed' {\n        return this.checked ? 'true' : (this.indeterminate ? 'mixed' : 'false');\n    }\n\n    private _transitionCheckState(newState: TransitionCheckState) {\n        const oldState = this._currentCheckState;\n        const element: HTMLElement = this._elementRef.nativeElement;\n\n        if (oldState === newState) {\n            return;\n        }\n        if (this._currentAnimationClass.length > 0) {\n            element.classList.remove(this._currentAnimationClass);\n        }\n\n        this._currentCheckState = newState;\n\n        if (this._currentAnimationClass.length > 0) {\n            element.classList.add(this._currentAnimationClass);\n        }\n    }\n\n    private _emitChangeEvent() {\n        const event = new McCheckboxChange();\n        event.source = this;\n        event.checked = this.checked;\n\n        this._controlValueAccessorChangeFn(this.checked);\n        this.change.emit(event);\n    }\n\n    /** Function is called whenever the focus changes for the input element. */\n    private _onInputFocusChange(focusOrigin: FocusOrigin) {\n        if (focusOrigin) {\n            this._onTouched();\n        }\n    }\n\n    /** Toggles the `checked` state of the checkbox. */\n    toggle(): void {\n        this.checked = !this.checked;\n    }\n\n    /**\n     * Event handler for checkbox input element.\n     * Toggles checked state if element is not disabled.\n     * Do not toggle on (change) event since IE doesn't fire change event when\n     *   indeterminate checkbox is clicked.\n     * @param event\n     */\n    _onInputClick(event: Event) {\n        // We have to stop propagation for click events on the visual hidden input element.\n        // By default, when a user clicks on a label element, a generated click event will be\n        // dispatched on the associated input element. Since we are using a label element as our\n        // root container, the click event on the `checkbox` will be executed twice.\n        // The real click event will bubble up, and the generated click event also tries to bubble up.\n        // This will lead to multiple click events.\n        // Preventing bubbling for the second event will solve that issue.\n        event.stopPropagation();\n\n        // If resetIndeterminate is false, and the current state is indeterminate, do nothing on click\n        if (!this.disabled && this._clickAction !== 'noop') {\n            // When user manually click on the checkbox, `indeterminate` is set to false.\n            if (this.indeterminate && this._clickAction !== 'check') {\n\n                Promise.resolve().then(() => {\n                    this._indeterminate = false;\n                    this.indeterminateChange.emit(this._indeterminate);\n                });\n            }\n\n            this.toggle();\n            this._transitionCheckState(\n                this._checked ? TransitionCheckState.Checked : TransitionCheckState.Unchecked);\n\n            // Emit our custom change event if the native input emitted one.\n            // It is important to only emit it, if the native input triggered one, because\n            // we don't want to trigger a change event, when the `checked` variable changes for example.\n            this._emitChangeEvent();\n        } else if (!this.disabled && this._clickAction === 'noop') {\n            // Reset native input when clicked with noop. The native checkbox becomes checked after\n            // click, reset it to be align with `checked` value of `mc-checkbox`.\n            this._inputElement.nativeElement.checked = this.checked;\n            this._inputElement.nativeElement.indeterminate = this.indeterminate;\n        }\n    }\n\n    /** Focuses the checkbox. */\n    focus(): void {\n        this._focusMonitor.focusVia(this._inputElement.nativeElement, 'keyboard');\n    }\n\n    _onInteractionEvent(event: Event) {\n        // We always have to stop propagation on the change event.\n        // Otherwise the change event, from the input element, will bubble up and\n        // emit its event object to the `change` output.\n        event.stopPropagation();\n    }\n}\n","import {\n    Directive,\n    forwardRef,\n    Provider\n} from '@angular/core';\nimport {\n    CheckboxRequiredValidator,\n    NG_VALIDATORS\n} from '@angular/forms';\n\n\nexport const MC_CHECKBOX_REQUIRED_VALIDATOR: Provider = {\n    provide: NG_VALIDATORS,\n    useExisting: forwardRef(() => McCheckboxRequiredValidator),\n    multi: true\n};\n\n/**\n * Validator for Mosaic checkbox's required attribute in template-driven checkbox.\n * Current CheckboxRequiredValidator only work with `input type=checkbox` and does not\n * work with `mc-checkbox`.\n */\n@Directive({\n    selector: `mc-checkbox[required][formControlName],\n             mc-checkbox[required][formControl], mc-checkbox[required][ngModel]`,\n    providers: [MC_CHECKBOX_REQUIRED_VALIDATOR],\n    host: { '[attr.required]': 'required ? \"\" : null' }\n})\nexport class McCheckboxRequiredValidator extends CheckboxRequiredValidator {\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { McCheckbox } from './checkbox';\nimport { McCheckboxRequiredValidator } from './checkbox-required-validator';\n\n\n@NgModule({\n    imports: [CommonModule],\n    exports: [McCheckbox, McCheckboxRequiredValidator],\n    declarations: [McCheckbox, McCheckboxRequiredValidator]\n})\nexport class McCheckboxModule {\n}\n","import { ChangeDetectionStrategy, Component, Input, ViewEncapsulation } from '@angular/core';\nimport { coerceBooleanProperty } from '@ptsecurity/cdk/coercion';\n\n\n@Component({\n    selector: 'mc-divider',\n    host: {\n        class: 'mc-divider',\n        role: 'separator',\n        '[attr.aria-orientation]': 'vertical ? \"vertical\" : \"horizontal\"',\n        '[class.mc-divider-vertical]': 'vertical',\n        '[class.mc-divider-inset]': 'inset'\n    },\n    template: '',\n    styleUrls: ['divider.css'],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    preserveWhitespaces: false\n})\nexport class McDivider {\n    // Whether the divider is vertically aligned.\n    @Input()\n    get vertical(): boolean {\n        return this._vertical;\n    }\n\n    set vertical(value: boolean) {\n        this._vertical = coerceBooleanProperty(value);\n    }\n\n    private _vertical: boolean = false;\n\n    // Whether the divider is an inset divider.\n    @Input()\n    get inset(): boolean {\n        return this._inset;\n    }\n\n    set inset(value: boolean) {\n        this._inset = coerceBooleanProperty(value);\n    }\n\n    private _inset: boolean = false;\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { McDivider } from './divider.component';\n\n\n@NgModule({\n    imports: [CommonModule],\n    exports: [McDivider],\n    declarations: [McDivider]\n})\nexport class McDividerModule {\n}\n","import { DOCUMENT } from '@angular/common';\nimport {\n    Directive,\n    TemplateRef,\n    ComponentFactoryResolver,\n    ApplicationRef,\n    Injector,\n    ViewContainerRef,\n    Inject,\n    OnDestroy\n} from '@angular/core';\nimport { TemplatePortal, DomPortalOutlet } from '@ptsecurity/cdk/portal';\nimport { Subject } from 'rxjs';\n\n\n/**\n * Dropdown content that will be rendered lazily once the dropdown is opened.\n */\n@Directive({\n    selector: 'ng-template[mcDropdownContent]'\n})\nexport class McDropdownContent implements OnDestroy {\n\n    /** Emits when the dropdown content has been attached. */\n    _attached = new Subject<void>();\n    private _portal: TemplatePortal;\n    private _outlet: DomPortalOutlet;\n\n    constructor(\n        private _template: TemplateRef<any>,\n        private _componentFactoryResolver: ComponentFactoryResolver,\n        private _appRef: ApplicationRef,\n        private _injector: Injector,\n        private _viewContainerRef: ViewContainerRef,\n        @Inject(DOCUMENT) private _document: any) {}\n\n    /**\n     * Attaches the content with a particular context.\n     * @docs-private\n     */\n    attach(context: any = {}) {\n        if (!this._portal) {\n            this._portal = new TemplatePortal(this._template, this._viewContainerRef);\n        }\n\n        this.detach();\n\n        if (!this._outlet) {\n            this._outlet = new DomPortalOutlet(this._document.createElement('div'),\n                this._componentFactoryResolver, this._appRef, this._injector);\n        }\n\n        const element: HTMLElement = this._template.elementRef.nativeElement;\n\n        // Because we support opening the same dropdown from different triggers (which in turn have their\n        // own `OverlayRef` panel), we have to re-insert the host element every time, otherwise we\n        // risk it staying attached to a pane that's no longer in the DOM.\n        element.parentNode!.insertBefore(this._outlet.outletElement, element);\n        this._portal.attach(this._outlet, context);\n        this._attached.next();\n    }\n\n    /**\n     * Detaches the content.\n     * @docs-private\n     */\n    detach() {\n        if (this._portal.isAttached) {\n            this._portal.detach();\n        }\n    }\n\n    ngOnDestroy() {\n        if (this._outlet) {\n            this._outlet.dispose();\n        }\n    }\n}\n","import { EventEmitter, TemplateRef, InjectionToken } from '@angular/core';\nimport { FocusOrigin } from '@ptsecurity/cdk/a11y';\nimport { Direction } from '@ptsecurity/cdk/bidi';\n\nimport { McDropdownContent } from './dropdown-content';\nimport { DropdownPositionX, DropdownPositionY } from './dropdown-positions';\n\n\n/**\n * Injection token used to provide the parent dropdown to dropdown-specific components.\n * @docs-private\n */\nexport const MC_DROPDOWN_PANEL = new InjectionToken<McDropdownPanel>('MC_DROPDOWN_PANEL');\n\n/**\n * Interface for a custom dropdown panel that can be used with `mcDropdownTriggerFor`.\n * @docs-private\n */\n// tslint:disable-next-line:interface-name\nexport interface McDropdownPanel<T = any> {\n    xPosition: DropdownPositionX;\n    yPosition: DropdownPositionY;\n    overlapTrigger: boolean;\n    templateRef: TemplateRef<any>;\n    closed: EventEmitter<void | 'click' | 'keydown' | 'tab'>;\n    direction?: Direction;\n    lazyContent?: McDropdownContent;\n    backdropClass?: string;\n    hasBackdrop?: boolean;\n    focusFirstItem(origin?: FocusOrigin): void;\n    resetActiveItem(): void;\n    setPositionClasses?(x: DropdownPositionX, y: DropdownPositionY): void;\n    addItem?(item: T): void;\n    removeItem?(item: T): void;\n}\n","import { DOCUMENT } from '@angular/common';\nimport {\n    ChangeDetectionStrategy,\n    Component,\n    ElementRef,\n    OnDestroy,\n    ViewEncapsulation,\n    Inject,\n    Optional\n} from '@angular/core';\nimport { IFocusableOption, FocusMonitor, FocusOrigin } from '@ptsecurity/cdk/a11y';\nimport {\n    CanDisable, CanDisableCtor,\n    mixinDisabled\n} from '@ptsecurity/mosaic/core';\n\nimport { MC_DROPDOWN_PANEL, McDropdownPanel } from './dropdown-panel';\n\n\n// Boilerplate for applying mixins to McDropdownItem.\n/** @docs-private */\nexport class McDropdownItemBase {}\nexport const _McDropdownItemMixinBase: CanDisableCtor & typeof McDropdownItemBase =\n    mixinDisabled(McDropdownItemBase);\n\n/**\n * This directive is intended to be used inside an mc-dropdown tag.\n * It exists mostly to set the role attribute.\n */\n@Component({\n    selector: 'mc-dropdown-item, [mc-dropdown-item]',\n    exportAs: 'mcDropdownItem',\n    inputs: ['disabled'],\n    host: {\n        role: 'dropdown-item',\n        class: 'mc-dropdown__item',\n        '[attr.tabindex]': '_getTabIndex()',\n        '[attr.disabled]': 'disabled || null',\n        '(click)': '_checkDisabled($event)'\n    },\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n    template: `<ng-content></ng-content>`\n})\nexport class McDropdownItem extends _McDropdownItemMixinBase\n    implements IFocusableOption, CanDisable, OnDestroy {\n\n    private _document: Document;\n\n    constructor(\n        private _elementRef: ElementRef<HTMLElement>,\n        @Inject(DOCUMENT) document: any,\n        private _focusMonitor: FocusMonitor,\n        @Inject(MC_DROPDOWN_PANEL) @Optional() private _parentDropdownPanel?: McDropdownPanel<McDropdownItem>) {\n        super();\n\n        if (_focusMonitor) {\n            // Start monitoring the element so it gets the appropriate focused classes. We want\n            // to show the focus style for dropdown items only when the focus was not caused by a\n            // mouse or touch interaction.\n            _focusMonitor.monitor(this._elementRef.nativeElement, false);\n        }\n\n        if (_parentDropdownPanel && _parentDropdownPanel.addItem) {\n            _parentDropdownPanel.addItem(this);\n        }\n\n        this._document = document;\n    }\n\n    /** Focuses the dropdown item. */\n    focus(origin: FocusOrigin = 'program'): void {\n        if (this._focusMonitor) {\n            this._focusMonitor.focusVia(this._getHostElement(), origin);\n        } else {\n            this._getHostElement().focus();\n        }\n    }\n\n    ngOnDestroy() {\n        if (this._focusMonitor) {\n            this._focusMonitor.stopMonitoring(this._elementRef.nativeElement);\n        }\n\n        if (this._parentDropdownPanel && this._parentDropdownPanel.removeItem) {\n            this._parentDropdownPanel.removeItem(this);\n        }\n    }\n\n    /** Used to set the `tabindex`. */\n    _getTabIndex(): string {\n        return this.disabled ? '-1' : '0';\n    }\n\n    /** Returns the host DOM element. */\n    _getHostElement(): HTMLElement {\n        return this._elementRef.nativeElement;\n    }\n\n    /** Prevents the default element actions if it is disabled. */\n    _checkDisabled(event: Event): void {\n        if (this.disabled) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n    }\n\n    /** Gets the label to be used when determining whether the option should be focused. */\n    getLabel(): string {\n        const element: HTMLElement = this._elementRef.nativeElement;\n        // tslint:disable-next-line:no-magic-numbers\n        const textNodeType = this._document ? this._document.TEXT_NODE : 3;\n        let output = '';\n\n        if (element.childNodes) {\n            const length = element.childNodes.length;\n\n            // Go through all the top-level text nodes and extract their text.\n            // We skip anything that's not a text node to prevent the text from\n            // being thrown off by something like an icon.\n            for (let i = 0; i < length; i++) {\n                if (element.childNodes[i].nodeType === textNodeType) {\n                    output += element.childNodes[i].textContent;\n                }\n            }\n        }\n\n        return output.trim();\n    }\n}\n","import {\n    trigger,\n    state,\n    style,\n    animate,\n    transition,\n    query,\n    group,\n    AnimationTriggerMetadata\n} from '@angular/animations';\n\n\n/**\n * Animations used by the mc-dropdown component.\n * Animation duration and timing values are based on:\n * https://material.io/guidelines/components/menus.html#menus-usage\n * @docs-private\n */\nexport const mcDropdownAnimations: {\n    readonly transformDropdown: AnimationTriggerMetadata;\n    readonly fadeInItems: AnimationTriggerMetadata;\n} = {\n    /**\n     * This animation controls the dropdown panel's entry and exit from the page.\n     *\n     * When the dropdown panel is added to the DOM, it scales in and fades in its border.\n     *\n     * When the dropdown panel is removed from the DOM, it simply fades out after a brief\n     * delay to display the ripple.\n     */\n    transformDropdown: trigger('transformDropdown', [\n        state('void', style({\n            opacity: 0,\n            transform: 'scale(0.8)'\n        })),\n        transition('void => enter', group([\n            query('.mc-dropdown__content', animate('50ms linear', style({opacity: 1}))),\n            animate('50ms cubic-bezier(0, 0, 0.2, 1)', style({transform: 'scale(1)'}))\n        ])),\n        transition('* => void', animate('50ms 25ms linear', style({opacity: 0})))\n    ]),\n\n\n    /**\n     * This animation fades in the background color and content of the dropdown panel\n     * after its containing element is scaled in.\n     */\n    fadeInItems: trigger('fadeInItems', [\n        // now. Remove next time we do breaking changes.\n        state('showing', style({opacity: 1})),\n        transition('void => *', [\n            style({opacity: 0}),\n            animate('200ms 60ms cubic-bezier(0.55, 0, 0.55, 0.2)')\n        ])\n    ])\n};\n\nexport const fadeInItems = mcDropdownAnimations.fadeInItems;\n\nexport const transformDropdown = mcDropdownAnimations.transformDropdown;\n","import { AnimationEvent } from '@angular/animations';\nimport {\n    AfterContentInit,\n    ChangeDetectionStrategy,\n    Component,\n    ContentChild,\n    ContentChildren,\n    ElementRef,\n    EventEmitter,\n    Inject,\n    InjectionToken,\n    Input,\n    NgZone,\n    OnDestroy,\n    Output,\n    TemplateRef,\n    QueryList,\n    ViewChild,\n    ViewEncapsulation,\n    OnInit\n} from '@angular/core';\nimport { FocusKeyManager, FocusOrigin } from '@ptsecurity/cdk/a11y';\nimport { Direction } from '@ptsecurity/cdk/bidi';\nimport { coerceBooleanProperty } from '@ptsecurity/cdk/coercion';\nimport { ESCAPE, DOWN_ARROW, UP_ARROW } from '@ptsecurity/cdk/keycodes';\nimport { Subject, Subscription } from 'rxjs';\nimport { take } from 'rxjs/operators';\n\nimport { mcDropdownAnimations } from './dropdown-animations';\nimport { McDropdownContent } from './dropdown-content';\nimport { throwMcDropdownInvalidPositionX, throwMcDropdownInvalidPositionY } from './dropdown-errors';\nimport { McDropdownItem } from './dropdown-item';\nimport { MC_DROPDOWN_PANEL, McDropdownPanel } from './dropdown-panel';\nimport { DropdownPositionX, DropdownPositionY } from './dropdown-positions';\n\n\n/** Default `mc-dropdown` options that can be overridden. */\n// tslint:disable-next-line:interface-name\nexport interface McDropdownDefaultOptions {\n    /** The x-axis position of the dropdown. */\n    xPosition: DropdownPositionX;\n\n    /** The y-axis position of the dropdown. */\n    yPosition: DropdownPositionY;\n\n    /** Whether the dropdown should overlap the dropdown trigger. */\n    overlapTrigger: boolean;\n\n    /** Class to be applied to the dropdown's backdrop. */\n    backdropClass: string;\n\n    /** Whether the dropdown has a backdrop. */\n    hasBackdrop?: boolean;\n}\n\n/** Injection token to be used to override the default options for `mc-dropdown`. */\nexport const MC_DROPDOWN_DEFAULT_OPTIONS =\n    new InjectionToken<McDropdownDefaultOptions>('mc-dropdown-default-options', {\n        providedIn: 'root',\n        factory: MC_DROPDOWN_DEFAULT_OPTIONS_FACTORY\n    });\n\n/** @docs-private */\nexport function MC_DROPDOWN_DEFAULT_OPTIONS_FACTORY(): McDropdownDefaultOptions {\n    return {\n        overlapTrigger: false,\n        xPosition: 'after',\n        yPosition: 'below',\n        backdropClass: 'cdk-overlay-transparent-backdrop'\n    };\n}\n\n@Component({\n    selector: 'mc-dropdown',\n    templateUrl: 'dropdown.html',\n    styleUrls: ['dropdown.css'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n    exportAs: 'mcDropdown',\n    animations: [\n        mcDropdownAnimations.transformDropdown,\n        mcDropdownAnimations.fadeInItems\n    ],\n    providers: [\n        { provide: MC_DROPDOWN_PANEL, useExisting: McDropdown }\n    ]\n})\nexport class McDropdown implements AfterContentInit, McDropdownPanel<McDropdownItem>, OnInit, OnDestroy {\n\n    /** Position of the dropdown in the X axis. */\n    @Input()\n    get xPosition(): DropdownPositionX { return this._xPosition; }\n    set xPosition(value: DropdownPositionX) {\n        if (value !== 'before' && value !== 'after') {\n            throwMcDropdownInvalidPositionX();\n        }\n\n        this._xPosition = value;\n        this.setPositionClasses();\n    }\n\n    /** Position of the dropdown in the Y axis. */\n    @Input()\n    get yPosition(): DropdownPositionY { return this._yPosition; }\n    set yPosition(value: DropdownPositionY) {\n        if (value !== 'above' && value !== 'below') {\n            throwMcDropdownInvalidPositionY();\n        }\n\n        this._yPosition = value;\n        this.setPositionClasses();\n    }\n\n    /** Whether the dropdown should overlap its trigger. */\n    @Input()\n    get overlapTrigger(): boolean { return this._overlapTrigger; }\n    set overlapTrigger(value: boolean) {\n        this._overlapTrigger = coerceBooleanProperty(value);\n    }\n\n    /** Whether the dropdown has a backdrop. */\n    @Input()\n    get hasBackdrop(): boolean | undefined { return this._hasBackdrop; }\n    set hasBackdrop(value: boolean | undefined) {\n        this._hasBackdrop = coerceBooleanProperty(value);\n    }\n\n    /**\n     * This method takes classes set on the host mc-dropdown element and applies them on the\n     * dropdown template that displays in the overlay container.  Otherwise, it's difficult\n     * to style the containing dropdown from outside the component.\n     * @param classes list of class names\n     */\n    @Input('class')\n    set panelClass(classes: string) {\n        if (classes && classes.length) {\n            this._classList = classes.split(' ').reduce((obj: any, className: string) => {\n                obj[className] = true;\n\n                return obj;\n            }, {});\n\n            this._elementRef.nativeElement.className = '';\n        }\n    }\n\n    /** Config object to be passed into the dropdown's ngClass */\n    _classList: {[key: string]: boolean} = {};\n\n    /** Current state of the panel animation. */\n    _panelAnimationState: 'void' | 'enter' = 'void';\n\n    /** Emits whenever an animation on the dropdown completes. */\n    _animationDone = new Subject<AnimationEvent>();\n\n    /** Whether the dropdown is animating. */\n    _isAnimating: boolean;\n\n    /** Layout direction of the dropdown. */\n    direction: Direction;\n\n    /** Class to be added to the backdrop element. */\n    @Input() backdropClass: string = this._defaultOptions.backdropClass;\n\n    /** @docs-private */\n    @ViewChild(TemplateRef) templateRef: TemplateRef<any>;\n\n    /**\n     * List of the items inside of a dropdown.\n     */\n    @ContentChildren(McDropdownItem) items: QueryList<McDropdownItem>;\n\n    /**\n     * Dropdown content that will be rendered lazily.\n     * @docs-private\n     */\n    @ContentChild(McDropdownContent) lazyContent: McDropdownContent;\n\n    /** Event emitted when the dropdown is closed. */\n    @Output() readonly closed: EventEmitter<void | 'click' | 'keydown' | 'tab'> =\n        new EventEmitter<void | 'click' | 'keydown' | 'tab'>();\n\n    private _keyManager: FocusKeyManager<McDropdownItem>;\n    private _xPosition: DropdownPositionX = this._defaultOptions.xPosition;\n    private _yPosition: DropdownPositionY = this._defaultOptions.yPosition;\n\n    /** Dropdown items inside the current dropdown. */\n    private _items: McDropdownItem[] = [];\n\n    /** Emits whenever the amount of dropdown items changes. */\n    private _itemChanges = new Subject<McDropdownItem[]>();\n\n    /** Subscription to tab events on the dropdown panel */\n    private _tabSubscription = Subscription.EMPTY;\n    private _overlapTrigger: boolean = this._defaultOptions.overlapTrigger;\n    private _hasBackdrop: boolean | undefined = this._defaultOptions.hasBackdrop;\n\n    constructor(\n        private _elementRef: ElementRef<HTMLElement>,\n        private _ngZone: NgZone,\n        @Inject(MC_DROPDOWN_DEFAULT_OPTIONS) private _defaultOptions: McDropdownDefaultOptions) { }\n\n    ngOnInit() {\n        this.setPositionClasses();\n    }\n\n    ngAfterContentInit() {\n        this._keyManager = new FocusKeyManager<McDropdownItem>(this.items).withWrap().withTypeAhead();\n        this._tabSubscription = this._keyManager.tabOut.subscribe(() => this.closed.emit('tab'));\n    }\n\n    ngOnDestroy() {\n        this._tabSubscription.unsubscribe();\n        this.closed.complete();\n    }\n\n    /** Handle a keyboard event from the dropdown, delegating to the appropriate action. */\n    _handleKeydown(event: KeyboardEvent) {\n\n        // tslint:disable-next-line:deprecation\n        switch (event.keyCode) {\n            case ESCAPE:\n                this.closed.emit('keydown');\n                break;\n            case UP_ARROW:\n            case DOWN_ARROW:\n                this._keyManager.setFocusOrigin('keyboard');\n                this._keyManager.onKeydown(event);\n                break;\n            default:\n                // todo зачем обрабатывать лишние события ?\n                this._keyManager.onKeydown(event);\n        }\n    }\n\n    /**\n     * Focus the first item in the dropdown.\n     * @param origin Action from which the focus originated. Used to set the correct styling.\n     */\n    focusFirstItem(origin: FocusOrigin = 'program'): void {\n        // When the content is rendered lazily, it takes a bit before the items are inside the DOM.\n        if (this.lazyContent) {\n            this._ngZone.onStable.asObservable()\n                .pipe(take(1))\n                .subscribe(() => this._keyManager.setFocusOrigin(origin).setFirstItemActive());\n        } else {\n            this._keyManager.setFocusOrigin(origin).setFirstItemActive();\n        }\n    }\n\n    /**\n     * Resets the active item in the dropdown. This is used when the dropdown is opened, allowing\n     * the user to start from the first option when pressing the down arrow.\n     */\n    resetActiveItem() {\n        this._keyManager.setActiveItem(-1);\n    }\n\n    /**\n     * Registers a dropdown item with the dropdown.\n     * @docs-private\n     */\n    addItem(item: McDropdownItem) {\n        // We register the items through this method, rather than picking them up through\n        // `ContentChildren`, because we need the items to be picked up by their closest\n        // `mc-dropdown` ancestor. If we used `@ContentChildren(McDropdownItem, {descendants: true})`,\n        // all descendant items will bleed into the top-level dropdown in the case where the consumer\n        // has `mc-dropdown` instances nested inside each other.\n        if (this._items.indexOf(item) === -1) {\n            this._items.push(item);\n            this._itemChanges.next(this._items);\n        }\n    }\n\n    /**\n     * Removes an item from the dropdown.\n     * @docs-private\n     */\n    removeItem(item: McDropdownItem) {\n        const index = this._items.indexOf(item);\n\n        if (this._items.indexOf(item) > -1) {\n            this._items.splice(index, 1);\n            this._itemChanges.next(this._items);\n        }\n    }\n\n    /**\n     * Adds classes to the dropdown panel based on its position. Can be used by\n     * consumers to add specific styling based on the position.\n     * @param posX Position of the dropdown along the x axis.\n     * @param posY Position of the dropdown along the y axis.\n     * @docs-private\n     */\n    setPositionClasses(posX: DropdownPositionX = this.xPosition, posY: DropdownPositionY = this.yPosition) {\n        const classes = this._classList;\n        classes['mc-dropdown-before'] = posX === 'before';\n        classes['mc-dropdown-after'] = posX === 'after';\n        classes['mc-dropdown-above'] = posY === 'above';\n        classes['mc-dropdown-below'] = posY === 'below';\n    }\n\n    /** Starts the enter animation. */\n    _startAnimation() {\n        this._panelAnimationState = 'enter';\n    }\n\n    /** Resets the panel animation to its initial state. */\n    _resetAnimation() {\n        this._panelAnimationState = 'void';\n    }\n\n    /** Callback that is invoked when the panel animation completes. */\n    _onAnimationDone(event: AnimationEvent) {\n        this._animationDone.next(event);\n        this._isAnimating = false;\n\n        // Scroll the content element to the top once the animation is done. This is necessary, because\n        // we move focus to the first item while it's still being animated, which can throw the browser\n        // off when it determines the scroll position. Alternatively we can move focus when the\n        // animation is done, however moving focus asynchronously will interrupt screen readers\n        // which are in the process of reading out the dropdown already. We take the `element` from\n        // the `event` since we can't use a `ViewChild` to access the pane.\n        if (event.toState === 'enter' && this._keyManager.activeItemIndex === 0) {\n            event.element.scrollTop = 0;\n        }\n    }\n}\n","import {\n    AfterContentInit,\n    Directive,\n    ElementRef,\n    EventEmitter,\n    Inject,\n    InjectionToken,\n    Input,\n    OnDestroy, OnInit,\n    Optional,\n    Output,\n    ViewContainerRef\n} from '@angular/core';\nimport { FocusMonitor, FocusOrigin } from '@ptsecurity/cdk/a11y';\nimport { Direction, Directionality } from '@ptsecurity/cdk/bidi';\nimport {\n    FlexibleConnectedPositionStrategy,\n    HorizontalConnectionPos,\n    Overlay,\n    OverlayConfig,\n    OverlayRef,\n    VerticalConnectionPos,\n    IScrollStrategy\n} from '@ptsecurity/cdk/overlay';\nimport { TemplatePortal } from '@ptsecurity/cdk/portal';\nimport { merge, Subscription } from 'rxjs';\nimport { filter, take, takeUntil } from 'rxjs/operators';\n\nimport { throwMcDropdownMissingError } from './dropdown-errors';\nimport { McDropdownPanel } from './dropdown-panel';\nimport { McDropdown } from './dropdown.component';\n\n\n/** Injection token that determines the scroll handling while the dropdown is open. */\nexport const MC_DROPDOWN_SCROLL_STRATEGY =\n    new InjectionToken<() => IScrollStrategy>('mc-dropdown-scroll-strategy');\n\n/** @docs-private */\nexport function MC_DROPDOWN_SCROLL_STRATEGY_FACTORY(overlay: Overlay): () => IScrollStrategy {\n    return () => overlay.scrollStrategies.reposition();\n}\n\n/** @docs-private */\nexport const MC_DROPDOWN_SCROLL_STRATEGY_FACTORY_PROVIDER = {\n    provide: MC_DROPDOWN_SCROLL_STRATEGY,\n    deps: [Overlay],\n    useFactory: MC_DROPDOWN_SCROLL_STRATEGY_FACTORY\n};\n\n/**\n * This directive is intended to be used in conjunction with an mc-dropdown tag.  It is\n * responsible for toggling the display of the provided dropdown instance.\n */\n@Directive({\n    selector: `[mcDropdownTriggerFor]`,\n    host: {\n        '(touchstart)': '_openedBy = \"touch\"',\n        '(click)': 'toggle()'\n    },\n    exportAs: 'mcDropdownTrigger'\n})\nexport class McDropdownTrigger implements OnInit, AfterContentInit, OnDestroy {\n\n    /** Whether the dropdown is open. */\n    get opened(): boolean {\n        return this._opened;\n    }\n\n    /** The text direction of the containing app. */\n    get dir(): Direction {\n        return this._dir && this._dir.value === 'rtl' ? 'rtl' : 'ltr';\n    }\n\n    // Tracking input type is necessary so it's possible to only auto-focus\n    // the first item of the list when the dropdown is opened via the keyboard\n    _openedBy: 'mouse' | 'touch' | null = null;\n\n    /** References the dropdown instance that the trigger is associated with. */\n    @Input('mcDropdownTriggerFor') dropdown: McDropdownPanel;\n\n    /** Data to be passed along to any lazily-rendered content. */\n    @Input('mcDropdownTriggerData') data: any;\n\n    /** Event emitted when the associated dropdown is opened. */\n    @Output() readonly dropdownOpened: EventEmitter<void> = new EventEmitter<void>();\n\n    /** Event emitted when the associated dropdown is closed. */\n    @Output() readonly dropdownClosed: EventEmitter<void> = new EventEmitter<void>();\n\n    private _portal: TemplatePortal;\n    private _overlayRef: OverlayRef | null = null;\n    private _opened: boolean = false;\n    private _closeSubscription = Subscription.EMPTY;\n    private _hoverSubscription = Subscription.EMPTY;\n\n    constructor(private _overlay: Overlay,\n                private _element: ElementRef<HTMLElement>,\n                private _viewContainerRef: ViewContainerRef,\n                @Inject(MC_DROPDOWN_SCROLL_STRATEGY) private _scrollStrategy: any,\n                @Optional() private _dir: Directionality,\n                private _focusMonitor?: FocusMonitor) {}\n\n    ngOnInit(): void {\n        this.dropdown.closed = this.dropdown.closed || new EventEmitter<void | 'click' | 'keydown' | 'tab'>();\n    }\n\n    ngAfterContentInit() {\n        this._check();\n\n        this.dropdown.closed.asObservable().subscribe(() => {\n            this._destroy();\n        });\n    }\n\n    ngOnDestroy() {\n        if (this._overlayRef) {\n            this._overlayRef.dispose();\n            this._overlayRef = null;\n        }\n\n        this._cleanUpSubscriptions();\n    }\n\n    /** Toggles the dropdown between the open and closed states. */\n    toggle(): void {\n        // tslint:disable-next-line:no-void-expression\n        return this._opened ? this.close() : this.open();\n    }\n\n    /** Opens the dropdown. */\n    open(): void {\n        if (this._opened) {\n            return;\n        }\n\n        this._check();\n\n        const overlayRef = this._createOverlay();\n        this._setPosition(overlayRef.getConfig().positionStrategy as FlexibleConnectedPositionStrategy);\n        overlayRef.attach(this._portal);\n\n        if (this.dropdown.lazyContent) {\n            this.dropdown.lazyContent.attach(this.data);\n        }\n\n        this._closeSubscription = this._closingActions().subscribe(() => this.close());\n        this._init();\n\n        if (this.dropdown instanceof McDropdown) {\n            this.dropdown._startAnimation();\n        }\n    }\n\n    /** Closes the dropdown. */\n    close(): void {\n        this.dropdown.closed.emit();\n    }\n\n    /**\n     * Focuses the dropdown trigger.\n     * @param origin Source of the dropdown trigger's focus.\n     */\n    focus(origin: FocusOrigin = 'program') {\n        if (this._focusMonitor) {\n            this._focusMonitor.focusVia(this._element.nativeElement, origin);\n        } else {\n            this._element.nativeElement.focus();\n        }\n    }\n\n    /** Closes the dropdown and does the necessary cleanup. */\n    private _destroy() {\n        if (!this._overlayRef || !this.opened) {\n            return;\n        }\n\n        const dropdown = this.dropdown;\n\n        this._closeSubscription.unsubscribe();\n        this._overlayRef.detach();\n\n        if (dropdown instanceof McDropdown) {\n            dropdown._resetAnimation();\n\n            if (dropdown.lazyContent) {\n                // Wait for the exit animation to finish before detaching the content.\n                dropdown._animationDone\n                    .pipe(\n                        filter((event) => event.toState === 'void'),\n                        take(1),\n                        // Interrupt if the content got re-attached.\n                        takeUntil(dropdown.lazyContent._attached)\n                    )\n                    .subscribe(() => dropdown.lazyContent.detach(), undefined, () => {\n                        // No matter whether the content got re-attached, reset the dropdown.\n                        this._reset();\n                    });\n            } else {\n                this._reset();\n            }\n        } else {\n            this._reset();\n\n            if (dropdown.lazyContent) {\n                dropdown.lazyContent.detach();\n            }\n        }\n    }\n\n    /**\n     * This method sets the dropdown state to open and focuses the first item if\n     * the dropdown was opened via the keyboard.\n     */\n    private _init(): void {\n        this.dropdown.direction = this.dir;\n        this._setIsOpened(true);\n        this.dropdown.focusFirstItem(this._openedBy || 'program');\n    }\n\n    /**\n     * This method resets the dropdown when it's closed, most importantly restoring\n     * focus to the dropdown trigger if the dropdown was opened via the keyboard.\n     */\n    private _reset(): void {\n        this._setIsOpened(false);\n\n        // We should reset focus if the user is navigating using a keyboard or\n        // if we have a top-level trigger which might cause focus to be lost\n        // when clicking on the backdrop.\n        if (!this._openedBy) {\n            // Note that the focus style will show up both for `program` and\n            // `keyboard` so we don't have to specify which one it is.\n            this.focus();\n        } else {\n            this.focus(this._openedBy);\n        }\n\n        this._openedBy = null;\n    }\n\n    // set state rather than toggle to support triggers sharing a dropdown\n    private _setIsOpened(isOpen: boolean): void {\n        this._opened = isOpen;\n        // tslint:disable-next-line:no-void-expression\n        this._opened ? this.dropdownOpened.emit() : this.dropdownClosed.emit();\n    }\n\n    /**\n     * This method checks that a valid instance of Dropdown has been passed into\n     * mcDropdownTriggerFor. If not, an exception is thrown.\n     */\n    private _check() {\n        if (!this.dropdown) {\n            throwMcDropdownMissingError();\n        }\n    }\n\n    /**\n     * This method creates the overlay from the provided dropdown's template and saves its\n     * OverlayRef so that it can be attached to the DOM when open is called.\n     */\n    private _createOverlay(): OverlayRef {\n        if (!this._overlayRef) {\n            this._portal = new TemplatePortal(this.dropdown.templateRef, this._viewContainerRef);\n            const config = this._getOverlayConfig();\n            this._subscribeToPositions(config.positionStrategy as FlexibleConnectedPositionStrategy);\n            this._overlayRef = this._overlay.create(config);\n\n            // Consume the `keydownEvents` in order to prevent them from going to another overlay.\n            // Ideally we'd also have our keyboard event logic in here, however doing so will\n            // break anybody that may have implemented the `McDropdownPanel` themselves.\n            this._overlayRef.keydownEvents().subscribe();\n        }\n\n        return this._overlayRef;\n    }\n\n    /**\n     * This method builds the configuration object needed to create the overlay, the OverlayState.\n     * @returns OverlayConfig\n     */\n    private _getOverlayConfig(): OverlayConfig {\n        return new OverlayConfig({\n            positionStrategy: this._overlay.position()\n                .flexibleConnectedTo(this._element)\n                .withLockedPosition()\n                .withTransformOriginOn('.mc-dropdown__panel'),\n            hasBackdrop: this.dropdown.hasBackdrop === null || this.dropdown.hasBackdrop === undefined\n                ? true\n                : this.dropdown.hasBackdrop,\n            backdropClass: this.dropdown.backdropClass || 'cdk-overlay-transparent-backdrop',\n            scrollStrategy: this._scrollStrategy(),\n            direction: this._dir\n        });\n    }\n\n    /**\n     * Listens to changes in the position of the overlay and sets the correct classes\n     * on the dropdown based on the new position. This ensures the animation origin is always\n     * correct, even if a fallback position is used for the overlay.\n     */\n    private _subscribeToPositions(position: FlexibleConnectedPositionStrategy): void {\n        if (this.dropdown.setPositionClasses) {\n            // todo possibly we should not recompute positions there\n            /*position.positionChanges.subscribe((change) => {\n                const posX: DropdownPositionX = change.connectionPair.overlayX === 'start' ? 'after' : 'before';\n                const posY: DropdownPositionY = change.connectionPair.overlayY === 'top' ? 'below' : 'above';\n\n                this.dropdown.setPositionClasses!(posX, posY);\n            });*/\n            position.positionChanges.subscribe(() => {\n                this.dropdown.setPositionClasses!(this.dropdown.xPosition, this.dropdown.yPosition);\n            });\n        }\n    }\n\n    /**\n     * Sets the appropriate positions on a position strategy\n     * so the overlay connects with the trigger correctly.\n     * @param positionStrategy Strategy whose position to update.\n     */\n    private _setPosition(positionStrategy: FlexibleConnectedPositionStrategy) {\n        const [originX, originFallbackX]: HorizontalConnectionPos[] =\n            this.dropdown.xPosition === 'before' ? ['end', 'start'] : ['start', 'end'];\n\n        const [overlayY, overlayFallbackY]: VerticalConnectionPos[] =\n            this.dropdown.yPosition === 'above' ? ['bottom', 'top'] : ['top', 'bottom'];\n\n        let [originY, originFallbackY] = [overlayY, overlayFallbackY];\n        const [overlayX, overlayFallbackX] = [originX, originFallbackX];\n        const offsetY = 0;\n\n        if (!this.dropdown.overlapTrigger) {\n            originY = overlayY === 'top' ? 'bottom' : 'top';\n            originFallbackY = overlayFallbackY === 'top' ? 'bottom' : 'top';\n        }\n\n        positionStrategy.withPositions([\n            {originX, originY, overlayX, overlayY, offsetY},\n            {originX: originFallbackX, originY, overlayX: overlayFallbackX, overlayY, offsetY},\n            {\n                originX,\n                originY: originFallbackY,\n                overlayX,\n                overlayY: overlayFallbackY,\n                offsetY: -offsetY\n            },\n            {\n                originX: originFallbackX,\n                originY: originFallbackY,\n                overlayX: overlayFallbackX,\n                overlayY: overlayFallbackY,\n                offsetY: -offsetY\n            }\n        ]);\n    }\n\n    /** Cleans up the active subscriptions. */\n    private _cleanUpSubscriptions(): void {\n        this._closeSubscription.unsubscribe();\n        this._hoverSubscription.unsubscribe();\n    }\n\n    /** Returns a stream that emits whenever an action that should close the dropdown occurs. */\n    private _closingActions() {\n        const backdrop = this._overlayRef!.backdropClick();\n        const detachments = this._overlayRef!.detachments();\n\n        return merge(backdrop, detachments);\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { OverlayModule } from '@ptsecurity/cdk/overlay';\n\nimport { McDropdownContent } from './dropdown-content';\nimport { McDropdownItem } from './dropdown-item';\nimport { MC_DROPDOWN_SCROLL_STRATEGY_FACTORY_PROVIDER, McDropdownTrigger } from './dropdown-trigger';\nimport { McDropdown } from './dropdown.component';\n\n\n@NgModule({\n    imports: [\n        CommonModule,\n        OverlayModule\n    ],\n    exports: [McDropdown, McDropdownItem, McDropdownTrigger, McDropdownContent],\n    declarations: [McDropdown, McDropdownItem, McDropdownTrigger, McDropdownContent],\n    providers: [MC_DROPDOWN_SCROLL_STRATEGY_FACTORY_PROVIDER]\n})\nexport class McDropdownModule {}\n","import { Component } from '@angular/core';\n\n\n@Component({\n    selector: 'mc-cleaner',\n    template: '<i class=\"mc-icon_light\" mc-icon=\"mc-close-M_16\" color=\"second\"></i>'\n})\nexport class McCleaner {}\n","import { NgControl } from '@angular/forms';\nimport { Observable } from 'rxjs';\n\n\n/** An interface which allows a control to work inside of a `MсFormField`. */\nexport abstract class McFormFieldControl<T> {\n    /** The value of the control. */\n    value: T | null;\n\n    /**\n     * Stream that emits whenever the state of the control changes such that the parent `MсFormField`\n     * needs to run change detection.\n     */\n    readonly stateChanges: Observable<void>;\n\n    /** The element ID for this control. */\n    readonly id: string;\n\n    /** The placeholder for this control. */\n    readonly placeholder: string;\n\n    /** Gets the NgControl for this control. */\n    readonly ngControl: NgControl | null;\n\n    /** Whether the control is focused. */\n    readonly focused: boolean;\n\n    /** Whether the control is empty. */\n    readonly empty: boolean;\n\n    /** Whether the control is required. */\n    readonly required: boolean;\n\n    /** Whether the control is disabled. */\n    readonly disabled: boolean;\n\n    /** Whether the control is in an error state. */\n    readonly errorState: boolean;\n\n    /**\n     * An optional name for the control type that can be used to distinguish `mc-form-field` elements\n     * based on their control type. The form field will add a class,\n     * `mc-form-field-type-{{controlType}}` to its root element.\n     */\n    readonly controlType?: string;\n\n    /** Handles a click on the control's container. */\n    abstract onContainerClick(event: MouseEvent): void;\n}\n","import { Observable } from 'rxjs';\n\n\n/** An interface which allows a control to work inside of a `MсFormField`. */\nexport abstract class McFormFieldNumberControl<T> {\n    /** The value of the control. */\n    value: T | null;\n\n    /**\n     * Stream that emits whenever the state of the control changes such that the parent `MсFormField`\n     * needs to run change detection.\n     */\n    readonly stateChanges: Observable<void>;\n\n    /** the number step */\n    step: number;\n\n    /** the number big step */\n    bigStep: number;\n\n    /** Whether the control is focused. */\n    readonly focused: boolean;\n\n    /** Handles step up and down */\n    abstract stepUp(step: number): void;\n\n    abstract stepDown(step: number): void;\n}\n","import { Directive, Input } from '@angular/core';\n\n\nlet nextUniqueId = 0;\n\n@Directive({\n    selector: 'mc-hint',\n    host: {\n        class: 'mc-hint',\n        '[attr.id]': 'id'\n    }\n})\nexport class McHint {\n    @Input() id: string = `mc-hint-${nextUniqueId++}`;\n}\n","import { Directive } from '@angular/core';\n\n\n@Directive({\n    selector: '[mcPrefix]'\n})\nexport class McPrefix {\n}\n","import { Component, EventEmitter, Output } from '@angular/core';\n\n\n@Component({\n    selector: 'mc-stepper',\n    template: `\n        <i class=\"mc mc-icon mc-icon_light mc-second mc-stepper-step-up mc-angle-L_16\"\n           (mousedown)=\"onStepUp($event)\">\n        </i>\n        <i class=\"mc mc-icon mc-icon_light mc-second mc-stepper-step-down mc-angle-L_16\"\n           (mousedown)=\"onStepDown($event)\">\n        </i>\n    `\n})\nexport class McStepper {\n    @Output()\n    readonly stepUp: EventEmitter<void> = new EventEmitter<void>();\n    @Output()\n    readonly stepDown: EventEmitter<void> = new EventEmitter<void>();\n\n    onStepUp($event: MouseEvent) {\n        this.stepUp.emit();\n        $event.preventDefault();\n    }\n\n    onStepDown($event: MouseEvent) {\n        this.stepDown.emit();\n        $event.preventDefault();\n    }\n}\n","import { Directive } from '@angular/core';\n\n\n@Directive({\n    selector: '[mcSuffix]'\n})\nexport class McSuffix {\n}\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","\nexport function isBoolean(val: any): val is boolean { return typeof val === 'boolean'; }\n\nexport function toBoolean(value: any): boolean {\n    return value != null && `${value}` !== 'false';\n}\n","import { NgModule, InjectionToken, Optional, Inject, isDevMode } from '@angular/core';\nimport { BidiModule } from '@ptsecurity/cdk/bidi';\n\n\n// Injection token that configures whether the Mosaic sanity checks are enabled.\nexport const MC_SANITY_CHECKS = new InjectionToken<boolean>('mc-sanity-checks', {\n    providedIn: 'root',\n    factory: MC_SANITY_CHECKS_FACTORY\n});\n\nexport function MC_SANITY_CHECKS_FACTORY(): boolean {\n    return true;\n}\n\n/**\n * Module that captures anything that should be loaded and/or run for *all* Mosaic\n * components. This includes Bidi, etc.\n *\n * This module should be imported to each top-level component module (e.g., MatTabsModule).\n */\n@NgModule({\n    imports: [ BidiModule ],\n    exports: [ BidiModule ]\n})\nexport class McCommonModule {\n    // Whether we've done the global sanity checks (e.g. a theme is loaded, there is a doctype).\n    private _hasDoneGlobalChecks = false;\n\n    // Reference to the global `document` object.\n    private _document = typeof document === 'object' && document ? document : null;\n\n    // Reference to the global 'window' object.\n    private _window = typeof window === 'object' && window ? window : null;\n\n    constructor(@Optional() @Inject(MC_SANITY_CHECKS) private _sanityChecksEnabled: boolean) {\n        if (this._areChecksEnabled() && !this._hasDoneGlobalChecks) {\n            this._checkDoctypeIsDefined();\n            this._checkThemeIsPresent();\n            this._hasDoneGlobalChecks = true;\n        }\n    }\n\n    // Whether any sanity checks are enabled\n    private _areChecksEnabled(): boolean {\n        return this._sanityChecksEnabled && isDevMode() && !this._isTestEnv();\n    }\n\n    // Whether the code is running in tests.\n    private _isTestEnv() {\n        // tslint:disable-next-line\n        return this._window && (this._window['__karma__'] || this._window['jasmine']);\n    }\n\n    private _checkDoctypeIsDefined(): void {\n        if (this._document && !this._document.doctype) {\n            console.warn(\n                'Current document does not have a doctype. This may cause ' +\n                'some Mosaic components not to behave as expected.'\n            );\n        }\n    }\n\n    private _checkThemeIsPresent(): void {\n        if (this._document && typeof getComputedStyle === 'function') {\n            const testElement = this._document.createElement('div');\n\n            testElement.classList.add('mc-theme-loaded-marker');\n            this._document.body.appendChild(testElement);\n\n            const computedStyle = getComputedStyle(testElement);\n\n            // In some situations, the computed style of the test element can be null. For example in\n            // Firefox, the computed style is null if an application is running inside of a hidden iframe.\n            // See: https://bugzilla.mozilla.org/show_bug.cgi?id=548397\n            if (computedStyle && computedStyle.display !== 'none') {\n                console.warn(\n                    'Could not find Mosaic core theme. Most Mosaic ' +\n                    'components may not work as expected. For more info refer ' +\n                    'to the theming guide: link there'\n                );\n            }\n\n            this._document.body.removeChild(testElement);\n        }\n    }\n}\n","import { coerceBooleanProperty } from '@ptsecurity/cdk/coercion';\n\nimport { Constructor } from './constructor';\n\n\nexport interface CanDisable {\n    disabled: boolean;\n}\n\n/** @docs-private */\nexport type CanDisableCtor = Constructor<CanDisable>;\n\n// Mixin to augment a directive with a `disabled` property.\nexport function mixinDisabled<T extends Constructor<{}>>(base: T): CanDisableCtor & T {\n    return class extends base {\n        private _disabled: boolean = false;\n\n        get disabled() {\n            return this._disabled;\n        }\n\n        set disabled(value: any) {\n            this._disabled = coerceBooleanProperty(value);\n        }\n\n        constructor(...args: any[]) {\n            // tslint:disable-next-line\n            super(...args);\n        }\n    };\n}\n","import { ElementRef } from '@angular/core';\n\nimport { Constructor } from './constructor';\n\n\nexport interface CanColor {\n    color: ThemePalette;\n}\n\n/** @docs-private */\nexport type CanColorCtor = Constructor<CanColor>;\n\nexport interface HasElementRef {\n    _elementRef: ElementRef;\n}\n\nexport enum ThemePalette {\n    Primary = 'primary',\n    Second = 'second',\n    Error = 'error',\n    Default = 'second',\n    Empty = ''\n}\n\n/** Mixin to augment a directive with a `color` property. */\nexport function mixinColor<T extends Constructor<HasElementRef>>(\n    base: T,\n    defaultColor: ThemePalette = ThemePalette.Default\n): CanColorCtor & T {\n    return class extends base {\n\n        private _color: ThemePalette;\n\n        get color(): ThemePalette {\n            return this._color;\n        }\n\n        set color(value: ThemePalette) {\n            const colorPalette = value || defaultColor;\n\n            if (colorPalette !== this._color) {\n                if (this._color) {\n                    this._elementRef.nativeElement.classList.remove(`mc-${this._color}`);\n                }\n\n                if (colorPalette) {\n                    this._elementRef.nativeElement.classList.add(`mc-${colorPalette}`);\n                }\n\n                this._color = colorPalette;\n            }\n        }\n\n        constructor(...args: any[]) {\n            super(...args);\n\n            this.color = defaultColor;\n        }\n    };\n}\n\n","import { Constructor } from './constructor';\nimport { CanDisable } from './disabled';\n\n\nexport interface HasTabIndex {\n    tabIndex: number;\n}\n\nexport type HasTabIndexCtor = Constructor<HasTabIndex>;\n\n// Mixin to augment a directive with a `tabIndex` property.\nexport function mixinTabIndex<T extends Constructor<CanDisable>>(base: T, defaultTabIndex = 0)\n    : HasTabIndexCtor & T {\n    return class extends base {\n        private _tabIndex: number = defaultTabIndex;\n\n        get tabIndex(): number {\n            return this.disabled ? -1 : this._tabIndex;\n        }\n\n        set tabIndex(value: number) {\n            this._tabIndex = value != null ? value : defaultTabIndex;\n        }\n\n        constructor(...args: any[]) {\n            super(...args);\n        }\n    };\n}\n","import { FormControl, FormGroupDirective, NgControl, NgForm } from '@angular/forms';\nimport { Subject } from 'rxjs';\n\nimport { ErrorStateMatcher } from '../error/error-options';\n\nimport { Constructor } from './constructor';\n\n\n/** @docs-private */\nexport interface CanUpdateErrorState {\n\n    readonly stateChanges: Subject<void>;\n\n    errorState: boolean;\n    errorStateMatcher: ErrorStateMatcher;\n\n    updateErrorState();\n}\n\n/** @docs-private */\nexport type CanUpdateErrorStateCtor = Constructor<CanUpdateErrorState>;\n\n/** @docs-private */\nexport interface HasErrorState {\n    _parentFormGroup: FormGroupDirective;\n    _parentForm: NgForm;\n    _defaultErrorStateMatcher: ErrorStateMatcher;\n    ngControl: NgControl;\n}\n\n/**\n * Mixin to augment a directive with updateErrorState method.\n * For component with `errorState` and need to update `errorState`.\n */\nexport function mixinErrorState<T extends Constructor<HasErrorState>>(base: T): CanUpdateErrorStateCtor & T {\n    return class extends base {\n        /** Whether the component is in an error state. */\n        errorState: boolean = false;\n\n        /**\n         * Stream that emits whenever the state of the input changes such that the wrapping\n         * `MatFormField` needs to run change detection.\n         */\n        readonly stateChanges = new Subject<void>();\n\n        errorStateMatcher: ErrorStateMatcher;\n\n        constructor(...args: any[]) {\n            super(...args);\n        }\n\n        updateErrorState() {\n            const oldState = this.errorState;\n            const parent = this._parentFormGroup || this._parentForm;\n            const matcher = this.errorStateMatcher || this._defaultErrorStateMatcher;\n            const control = this.ngControl ? this.ngControl.control as FormControl : null;\n            const newState = matcher.isErrorState(control, parent);\n\n            if (newState !== oldState) {\n                this.errorState = newState;\n                this.stateChanges.next();\n            }\n        }\n    };\n}\n","import {\n    AfterViewChecked,\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    ElementRef,\n    EventEmitter,\n    Inject,\n    InjectionToken,\n    Input,\n    OnDestroy,\n    Optional,\n    Output,\n    QueryList,\n    ViewEncapsulation\n} from '@angular/core';\nimport { coerceBooleanProperty } from '@ptsecurity/cdk/coercion';\nimport { ENTER, SPACE } from '@ptsecurity/cdk/keycodes';\nimport { Subject } from 'rxjs';\n\nimport { McOptgroup } from './optgroup';\n\n\n/**\n * Option IDs need to be unique across components, so this counter exists outside of\n * the component definition.\n */\nlet _uniqueIdCounter = 0;\n\n/** Event object emitted by McOption when selected or deselected. */\nexport class McOptionSelectionChange {\n    constructor(\n        /** Reference to the option that emitted the event. */\n        public source: McOption,\n        /** Whether the change in the option's value was a result of a user action. */\n        public isUserInput = false) {\n    }\n}\n\n/**\n * Describes a parent component that manages a list of options.\n * Contains properties that the options can inherit.\n * @docs-private\n */\nexport interface IMcOptionParentComponent {\n    disableRipple?: boolean;\n    multiple?: boolean;\n}\n\n/**\n * Injection token used to provide the parent component to options.\n */\nexport const MC_OPTION_PARENT_COMPONENT =\n    new InjectionToken<IMcOptionParentComponent>('MC_OPTION_PARENT_COMPONENT');\n\n/**\n * Single option inside of a `<mat-select>` element.\n */\n@Component({\n    selector: 'mc-option',\n    exportAs: 'mcOption',\n    host: {\n        '[attr.tabindex]': '_getTabIndex()',\n        '[class.mc-selected]': 'selected',\n        '[class.mc-option-multiple]': 'multiple',\n        '[class.mc-active]': 'active',\n        '[id]': 'id',\n        '[class.mc-disabled]': 'disabled',\n        '(click)': '_selectViaInteraction()',\n        '(keydown)': '_handleKeydown($event)',\n        class: 'mc-option'\n    },\n    styleUrls: ['option.css'],\n    templateUrl: 'option.html',\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class McOption implements AfterViewChecked, OnDestroy {\n    /** Whether the wrapping component is in multiple selection mode. */\n    get multiple() {\n        return this._parent && this._parent.multiple;\n    }\n\n    /** The unique ID of the option. */\n    get id(): string {\n        return this._id;\n    }\n\n    /** Whether or not the option is currently selected. */\n    get selected(): boolean {\n        return this._selected;\n    }\n\n    /** The form value of the option. */\n    @Input() value: any;\n\n    /** Whether the option is disabled. */\n    @Input()\n    get disabled() {\n        return (this.group && this.group.disabled) || this._disabled;\n    }\n\n    set disabled(value: any) {\n        this._disabled = coerceBooleanProperty(value);\n    }\n\n    /** Whether ripples for the option are disabled. */\n    get disableRipple() {\n        return this._parent && this._parent.disableRipple;\n    }\n\n    /** Event emitted when the option is selected or deselected. */\n        // tslint:disable-next-line:no-output-on-prefix\n    @Output() readonly onSelectionChange = new EventEmitter<McOptionSelectionChange>();\n\n    /** Emits when the state of the option changes and any parents have to be notified. */\n    readonly _stateChanges = new Subject<void>();\n\n    private _selected = false;\n    private _active = false;\n    private _disabled = false;\n    private readonly _id = `mc-option-${_uniqueIdCounter++}`;\n    private _mostRecentViewValue = '';\n\n    constructor(\n        private readonly _element: ElementRef,\n        private readonly _changeDetectorRef: ChangeDetectorRef,\n        @Optional() @Inject(MC_OPTION_PARENT_COMPONENT) private readonly _parent: IMcOptionParentComponent,\n        @Optional() readonly group: McOptgroup) {\n    }\n\n    /**\n     * Whether or not the option is currently active and ready to be selected.\n     * An active option displays styles as if it is focused, but the\n     * focus is actually retained somewhere else. This comes in handy\n     * for components like autocomplete where focus must remain on the input.\n     */\n    get active(): boolean {\n        return this._active;\n    }\n\n    /**\n     * The displayed value of the option. It is necessary to show the selected option in the\n     * select's trigger.\n     */\n    get viewValue(): string {\n        // TODO(kara): Add input property alternative for node envs.\n        return (this._getHostElement().textContent || '').trim();\n    }\n\n    /** Selects the option. */\n    select(): void {\n        if (!this._selected) {\n            this._selected = true;\n            this._changeDetectorRef.markForCheck();\n            this._emitSelectionChangeEvent();\n        }\n    }\n\n    /** Deselects the option. */\n    deselect(): void {\n        if (this._selected) {\n            this._selected = false;\n            this._changeDetectorRef.markForCheck();\n            this._emitSelectionChangeEvent();\n        }\n    }\n\n    /** Sets focus onto this option. */\n    focus(): void {\n        const element = this._getHostElement();\n\n        if (typeof element.focus === 'function') {\n            element.focus();\n        }\n    }\n\n    /**\n     * This method sets display styles on the option to make it appear\n     * active. This is used by the ActiveDescendantKeyManager so key\n     * events will display the proper options as active on arrow key events.\n     */\n    setActiveStyles(): void {\n        if (!this._active) {\n            this._active = true;\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n\n    /**\n     * This method removes display styles on the option that made it appear\n     * active. This is used by the ActiveDescendantKeyManager so key\n     * events will display the proper options as active on arrow key events.\n     */\n    setInactiveStyles(): void {\n        if (this._active) {\n            this._active = false;\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n\n    /** Gets the label to be used when determining whether the option should be focused. */\n    getLabel(): string {\n        return this.viewValue;\n    }\n\n    /** Ensures the option is selected when activated from the keyboard. */\n    _handleKeydown(event: KeyboardEvent): void {\n        // tslint:disable-next-line\n        if (event.keyCode === ENTER || event.keyCode === SPACE) {\n            this._selectViaInteraction();\n\n            // Prevent the page from scrolling down and form submits.\n            event.preventDefault();\n        }\n    }\n\n    /**\n     * `Selects the option while indicating the selection came from the user. Used to\n     * determine if the select's view -> model callback should be invoked.`\n     */\n    _selectViaInteraction(): void {\n        if (!this.disabled) {\n            this._selected = this.multiple ? !this._selected : true;\n            this._changeDetectorRef.markForCheck();\n            this._emitSelectionChangeEvent(true);\n        }\n    }\n\n    /** Returns the correct tabindex for the option depending on disabled state. */\n    _getTabIndex(): string {\n        return this.disabled ? '-1' : '0';\n    }\n\n    /** Gets the host DOM element. */\n    _getHostElement(): HTMLElement {\n        return this._element.nativeElement;\n    }\n\n    ngAfterViewChecked() {\n        // Since parent components could be using the option's label to display the selected values\n        // (e.g. `mat-select`) and they don't have a way of knowing if the option's label has changed\n        // we have to check for changes in the DOM ourselves and dispatch an event. These checks are\n        // relatively cheap, however we still limit them only to selected options in order to avoid\n        // hitting the DOM too often.\n        if (this._selected) {\n            const viewValue = this.viewValue;\n\n            if (viewValue !== this._mostRecentViewValue) {\n                this._mostRecentViewValue = viewValue;\n                this._stateChanges.next();\n            }\n        }\n    }\n\n    ngOnDestroy() {\n        this._stateChanges.complete();\n    }\n\n    /** Emits the selection change event. */\n    private _emitSelectionChangeEvent(isUserInput = false): void {\n        this.onSelectionChange.emit(new McOptionSelectionChange(this, isUserInput));\n    }\n}\n\n/**\n * Counts the amount of option group labels that precede the specified option.\n * @param optionIndex Index of the option at which to start counting.\n * @param options Flat list of all of the options.\n * @param optionGroups Flat list of all of the option groups.\n * @docs-private\n */\nexport function _countGroupLabelsBeforeOption(\n    optionIndex: number, options: QueryList<McOption>,\n    optionGroups: QueryList<McOptgroup>\n): number {\n\n    if (optionGroups.length) {\n        const optionsArray = options.toArray();\n        const groups = optionGroups.toArray();\n\n        let groupCounter = 0;\n\n        for (let i = 0; i < optionIndex + 1; i++) {\n            if (optionsArray[i].group && optionsArray[i].group === groups[groupCounter]) {\n                groupCounter++;\n            }\n        }\n\n        return groupCounter;\n    }\n\n    return 0;\n}\n\n/**\n * Determines the position to which to scroll a panel in order for an option to be into view.\n * @param optionIndex Index of the option to be scrolled into the view.\n * @param optionHeight Height of the options.\n * @param currentScrollPosition Current scroll position of the panel.\n * @param panelHeight Height of the panel.\n * @docs-private\n */\nexport function _getOptionScrollPosition(\n    optionIndex: number,\n    optionHeight: number,\n    currentScrollPosition: number,\n    panelHeight: number\n): number {\n    const optionOffset = optionIndex * optionHeight;\n\n    if (optionOffset < currentScrollPosition) { return optionOffset; }\n\n    if (optionOffset + optionHeight > currentScrollPosition + panelHeight) {\n        return Math.max(0, optionOffset - panelHeight + optionHeight);\n    }\n\n    return currentScrollPosition;\n}\n\n","import { ConnectionPositionPair } from '@ptsecurity/cdk/overlay';\n\n\nexport const POSITION_MAP: { [key: string]: ConnectionPositionPair } = {\n    top         : {\n        originX : 'center',\n        originY : 'top',\n        overlayX: 'center',\n        overlayY: 'bottom'\n    },\n    topCenter   : {\n        originX : 'center',\n        originY : 'top',\n        overlayX: 'center',\n        overlayY: 'bottom',\n        offsetX : undefined,\n        offsetY : undefined\n    },\n    topLeft     : {\n        originX : 'start',\n        originY : 'top',\n        overlayX: 'start',\n        overlayY: 'bottom',\n        offsetX : undefined,\n        offsetY : undefined\n    },\n    topRight    : {\n        originX : 'end',\n        originY : 'top',\n        overlayX: 'end',\n        overlayY: 'bottom',\n        offsetX : undefined,\n        offsetY : undefined\n    },\n    right       : {\n        originX : 'end',\n        originY : 'center',\n        overlayX: 'start',\n        overlayY: 'center'\n    },\n    rightTop    : {\n        originX : 'end',\n        originY : 'top',\n        overlayX: 'start',\n        overlayY: 'top',\n        offsetX : undefined,\n        offsetY : undefined\n    },\n    rightBottom : {\n        originX : 'end',\n        originY : 'bottom',\n        overlayX: 'start',\n        overlayY: 'bottom',\n        offsetX : undefined,\n        offsetY : undefined\n    },\n    bottom      : {\n        originX : 'center',\n        originY : 'bottom',\n        overlayX: 'center',\n        overlayY: 'top'\n    },\n    bottomCenter: {\n        originX : 'center',\n        originY : 'bottom',\n        overlayX: 'center',\n        overlayY: 'top'\n    },\n    bottomLeft  : {\n        originX : 'start',\n        originY : 'bottom',\n        overlayX: 'start',\n        overlayY: 'top'\n    },\n    bottomRight : {\n        originX : 'end',\n        originY : 'bottom',\n        overlayX: 'end',\n        overlayY: 'top'\n    },\n    left        : {\n        originX : 'start',\n        originY : 'center',\n        overlayX: 'end',\n        overlayY: 'center'\n    },\n    leftTop     : {\n        originX : 'start',\n        originY : 'top',\n        overlayX: 'end',\n        overlayY: 'top'\n    },\n    leftBottom  : {\n        originX : 'start',\n        originY : 'bottom',\n        overlayX: 'end',\n        overlayY: 'bottom'\n    }\n};\n\nexport const DEFAULT_4_POSITIONS = _objectValues([\n    POSITION_MAP.top, POSITION_MAP.right, POSITION_MAP.bottom, POSITION_MAP.left\n]);\n\nfunction arrayMap<T, S>(array: T[], iteratee: (item: T, index: number, arr: T[]) => S): S[] {\n    let index = -1;\n    const length = array == null ? 0 : array.length;\n    const result = Array(length);\n\n    while (++index < length) {\n        result[ index ] = iteratee(array[ index ], index, array);\n    }\n\n    return result;\n}\nfunction baseValues<T>(object: { [key: string]: T } | T[], props: string[]): T[] {\n    return arrayMap(props,  (key) => {\n        return object[ key ];\n    });\n}\nfunction _objectValues<T>(object: { [key: string]: T } | T[]): T[] {\n    return object == null ? [] : baseValues(object, Object.keys(object));\n}\n","export function throwMcDropdownMissingError() {\n    throw Error(`mcDropdownTriggerFor: must pass in an mc-dropdown instance.\n    Example:\n      <mc-dropdown #dropdown=\"mcDropdown\"></mc-dropdown>\n      <button [mcDropdownTriggerFor]=\"dropdown\"></button>`);\n}\n\n/**\n * Throws an exception for the case when dropdown's x-position value isn't valid.\n * In other words, it doesn't match 'before' or 'after'.\n * @docs-private\n */\nexport function throwMcDropdownInvalidPositionX() {\n    throw Error(`xPosition value must be either 'before' or after'.\n      Example: <mc-dropdown xPosition=\"before\" #dropdown=\"mcDropdown\"></mc-dropdown>`);\n}\n\n/**\n * Throws an exception for the case when dropdown's y-position value isn't valid.\n * In other words, it doesn't match 'above' or 'below'.\n * @docs-private\n */\nexport function throwMcDropdownInvalidPositionY() {\n    throw Error(`yPosition value must be either 'above' or below'.\n      Example: <mc-dropdown yPosition=\"above\" #dropdown=\"mcDropdown\"></mc-dropdown>`);\n}\n","export function getMcFormFieldMissingControlError(): Error {\n  return Error('mc-form-field must contain a McFormFieldControl.');\n}\n","export function getMcInputUnsupportedTypeError(inputType: string): Error {\n    return Error(`Input type \"${inputType}\" isn't supported by mcInput.`);\n}\n","/**\n * Returns an exception to be thrown when attempting to change a select's `multiple` option\n * after initialization.\n * @docs-private\n */\nexport function getMcSelectDynamicMultipleError(): Error {\n    return Error('Cannot change `multiple` mode of select after initialization.');\n}\n\n/**\n * Returns an exception to be thrown when attempting to assign a non-array value to a select\n * in `multiple` mode. Note that `undefined` and `null` are still valid values to allow for\n * resetting the value.\n * @docs-private\n */\nexport function getMcSelectNonArrayValueError(): Error {\n    return Error('Value must be an array in multiple-selection mode.');\n}\n\n/**\n * Returns an exception to be thrown when assigning a non-function value to the comparator\n * used to determine if a value corresponds to an option. Note that whether the function\n * actually takes two values and returns a boolean is not checked.\n */\nexport function getMcSelectNonFunctionValueError(): Error {\n    return Error('`compareWith` must be a function.');\n}\n","import { NgModule, Directive, ElementRef, QueryList } from '@angular/core';\n\n\n/**\n * Shared directive to count lines inside a text area, such as a list item.\n * Line elements can be extracted with a @ContentChildren(McLine) query, then\n * counted by checking the query list's length.\n */\n@Directive({\n    selector: '[mc-line], [mcLine]',\n    host: { class: 'mc-line' }\n})\nexport class McLine {}\n\n/**\n * Helper that takes a query list of lines and sets the correct class on the host.\n * @docs-private\n */\nexport class McLineSetter {\n    constructor(private _lines: QueryList<McLine>, private _element: ElementRef) {\n        this._setLineClass(this._lines.length);\n\n        this._lines.changes.subscribe(() => {\n            this._setLineClass(this._lines.length);\n        });\n    }\n\n    private _setLineClass(count: number): void {\n        this._resetClasses();\n        if (count === 2 || count === 3) {\n            this._setClass(`mc-${count}-line`, true);\n        } else if (count > 3) {\n            this._setClass(`mc-multi-line`, true);\n        }\n    }\n\n    private _resetClasses(): void {\n        this._setClass('mc-2-line', false);\n        this._setClass('mc-3-line', false);\n        this._setClass('mc-multi-line', false);\n    }\n\n    private _setClass(className: string, isAdd: boolean): void {\n        if (isAdd) {\n            this._element.nativeElement.classList.add(className);\n        } else {\n            this._element.nativeElement.classList.remove(className);\n        }\n    }\n}\n\n@NgModule({\n    imports: [],\n    exports: [McLine],\n    declarations: [McLine]\n})\nexport class McLineModule {}\n","import { Injectable } from '@angular/core';\nimport { FormGroupDirective, NgForm, FormControl } from '@angular/forms';\n\n\n/** Error state matcher that matches when a control is invalid and dirty. */\n@Injectable()\nexport class ShowOnDirtyErrorStateMatcher implements ErrorStateMatcher {\n    isErrorState(control: FormControl | null, form: FormGroupDirective | NgForm | null): boolean {\n        return !!(control && control.invalid && (control.dirty || (form && form.submitted)));\n    }\n}\n\n/** Provider that defines how form controls behave with regards to displaying error messages. */\n@Injectable({ providedIn: 'root' })\nexport class ErrorStateMatcher {\n    isErrorState(control: FormControl | null, form: FormGroupDirective | NgForm | null): boolean {\n        return !!(control && control.invalid && (control.touched || (form && form.submitted)));\n    }\n}\n","import { Component, ViewEncapsulation, Input, ChangeDetectionStrategy } from '@angular/core';\n\n\nexport type McPseudoCheckboxState = 'unchecked' | 'checked' | 'indeterminate';\n\n/**\n * Component that shows a simplified checkbox without including any kind of \"real\" checkbox.\n * Meant to be used when the checkbox is purely decorative and a large number of them will be\n * included, such as for the options in a multi-select. Uses no SVGs or complex animations.\n * Note that theming is meant to be handled by the parent element, e.g.\n * `mc-primary .mc-pseudo-checkbox`.\n *\n * Note that this component will be completely invisible to screen-reader users. This is *not*\n * interchangeable with `<mc-checkbox>` and should *not* be used if the user would directly\n * interact with the checkbox. The pseudo-checkbox should only be used as an implementation detail\n * of more complex components that appropriately handle selected / checked state.\n * @docs-private\n */\n@Component({\n    encapsulation: ViewEncapsulation.None,\n    preserveWhitespaces: false,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    selector: 'mc-pseudo-checkbox',\n    styleUrls: ['pseudo-checkbox.css'],\n    templateUrl: 'pseudo-checkbox.partial.html',\n    host: {\n        class: 'mc-pseudo-checkbox',\n        '[class.mc-indeterminate]': 'state === \"indeterminate\"',\n        '[class.mc-checked]': 'state === \"checked\"',\n        '[class.mc-disabled]': 'disabled'\n    }\n})\nexport class McPseudoCheckbox {\n    @Input() state: McPseudoCheckboxState = 'unchecked';\n\n    @Input() disabled: boolean = false;\n}\n","import { NgModule } from '@angular/core';\n\nimport { McPseudoCheckbox } from './pseudo-checkbox/pseudo-checkbox';\n\n\n@NgModule({\n    exports: [McPseudoCheckbox],\n    declarations: [McPseudoCheckbox]\n})\nexport class McPseudoCheckboxModule {}\n\n\nexport * from './pseudo-checkbox/pseudo-checkbox';\n","import { DOCUMENT } from '@angular/common';\nimport { Inject, Injectable } from '@angular/core';\n\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class McMeasureScrollbarService {\n\n    get scrollBarWidth(): number {\n        if (this._scrollbarWidth) {\n            return this._scrollbarWidth;\n        }\n        this.initScrollBarWidth();\n\n        return this._scrollbarWidth;\n    }\n\n    private _scrollbarWidth: number;\n    private scrollbarMeasure = {\n        position: 'absolute',\n        top: '-9999px',\n        width: '50px',\n        height: '50px',\n        overflow: 'scroll'\n    };\n\n    constructor(\n        @Inject(DOCUMENT) private document: any\n    ) {\n        this.initScrollBarWidth();\n    }\n\n    initScrollBarWidth() {\n        const scrollDiv = this.document.createElement('div');\n\n        // tslint:disable-next-line\n        for (const scrollProp in this.scrollbarMeasure) {\n            if (this.scrollbarMeasure.hasOwnProperty(scrollProp)) {\n                scrollDiv.style[scrollProp] = this.scrollbarMeasure[scrollProp];\n            }\n        }\n\n        this.document.body.appendChild(scrollDiv);\n\n        const width = scrollDiv.offsetWidth - scrollDiv.clientWidth;\n\n        this.document.body.removeChild(scrollDiv);\n        this._scrollbarWidth = width;\n    }\n}\n","import { Component, ViewEncapsulation, Input, ChangeDetectionStrategy } from '@angular/core';\n\nimport { mixinDisabled, CanDisable, CanDisableCtor } from '../common-behaviors/index';\n\n\n// Boilerplate for applying mixins to McOptgroup.\n/** @docs-private */\nexport class McOptgroupBase {}\n\nexport const _McOptgroupMixinBase: CanDisableCtor & typeof McOptgroupBase = mixinDisabled(McOptgroupBase);\n\n// Counter for unique group ids.\nlet _uniqueOptgroupIdCounter = 0;\n\n/**\n * Component that is used to group instances of `mc-option`.\n */\n@Component({\n    selector: 'mc-optgroup',\n    exportAs: 'mcOptgroup',\n    templateUrl: 'optgroup.html',\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    inputs: ['disabled'],\n    styleUrls: ['optgroup.css'],\n    host: {\n        class: 'mc-optgroup',\n        role: 'group',\n        '[class.mc-optgroup-disabled]': 'disabled',\n        '[attr.aria-disabled]': 'disabled.toString()',\n        '[attr.aria-labelledby]': '_labelId'\n    }\n})\nexport class McOptgroup extends _McOptgroupMixinBase implements CanDisable {\n    /** Label for the option group. */\n    @Input() label: string;\n\n    /** Unique id for the underlying label. */\n    _labelId: string = `mc-optgroup-label-${_uniqueOptgroupIdCounter++}`;\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { McPseudoCheckboxModule } from '../selection/index';\n\nimport { McOptgroup } from './optgroup';\nimport { McOption } from './option';\n\n\n@NgModule({\n    imports: [CommonModule, McPseudoCheckboxModule],\n    exports: [McOption, McOptgroup],\n    declarations: [McOption, McOptgroup]\n})\nexport class McOptionModule {}\n\n\nexport * from './option';\nexport * from './optgroup';\n","import { InjectionToken } from '@angular/core';\n\n\n/** InjectionToken that can be used to specify the global label options. */\nexport const MC_LABEL_GLOBAL_OPTIONS =\n    new InjectionToken<LabelOptions>('mc-label-global-options');\n\n/** Type for the available floatLabel values. */\nexport type FloatLabelType = 'always' | 'never' | 'auto';\n\n/** Configurable options for floating labels. */\nexport interface LabelOptions {\n    /**\n     * Whether the label should float `always`, `never`, or `auto` (only when necessary).\n     * Default behavior is assumed to be `auto`.\n     */\n    float?: FloatLabelType;\n}\n","import {\n    animate,\n    state,\n    style,\n    transition,\n    trigger,\n    AnimationTriggerMetadata,\n} from '@angular/animations';\n\n\nexport const fadeAnimation: AnimationTriggerMetadata =  trigger('fadeAnimation', [\n    state('void', style({ opacity: 0 })),\n    state('true', style({ opacity: 1 })),\n    state('false', style({ opacity: 0 })),\n    transition('* => true', animate('150ms cubic-bezier(0.0, 0.0, 0.2, 1)')),\n    transition('* => void', animate('150ms cubic-bezier(0.4, 0.0, 1, 1)')),\n]);\n","import {\n    Attribute,\n    ChangeDetectionStrategy,\n    Component,\n    Directive,\n    ElementRef,\n    ViewEncapsulation\n} from '@angular/core';\n\nimport { mixinColor, CanColor, CanColorCtor, ThemePalette } from '@ptsecurity/mosaic/core';\n\n\n@Directive({\n    selector: '[mc-icon]',\n    host: { class: 'mc mc-icon' }\n})\nexport class McIconCSSStyler {}\n\n\nexport class McIconBase {\n    constructor(public _elementRef: ElementRef) {}\n}\n\nexport const _McIconMixinBase: CanColorCtor & typeof McIconBase = mixinColor(McIconBase, ThemePalette.Empty);\n\n\n@Component({\n    selector: `[mc-icon]`,\n    template: '<ng-content></ng-content>',\n    styleUrls: ['./icon.css'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n    inputs: ['color']\n})\nexport class McIcon extends _McIconMixinBase implements CanColor {\n    constructor(elementRef: ElementRef, @Attribute('mc-icon') iconName: string) {\n        super(elementRef);\n\n        elementRef.nativeElement.classList.add(iconName);\n    }\n\n    _getHostElement() {\n        return this._elementRef.nativeElement;\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { A11yModule } from '@ptsecurity/cdk/a11y';\nimport { PlatformModule } from '@ptsecurity/cdk/platform';\n\nimport {\n    McIcon,\n    McIconCSSStyler\n} from './icon.component';\n\n\n@NgModule({\n    imports: [\n        CommonModule,\n        A11yModule,\n        PlatformModule\n    ],\n    exports: [\n        McIcon,\n        McIconCSSStyler\n    ],\n    declarations: [\n        McIcon,\n        McIconCSSStyler\n    ]\n})\nexport class McIconModule {}\n"],"names":["get","this","_placement","set","value","_positions","unshift","POSITION_MAP","mcPlacement","McTooltipComponent","prototype","show","_this","hideTId","clearTimeout","isContentEmpty","mcTrigger","_closeOnInteraction","showTId","setTimeout","mcVisible","mcVisibleChange","emit","_markForCheck","mcMouseEnterDelay","hide","_onHide","next","mcMouseLeaveDelay","setClassMap","_classMap","_prefix","isTitleString","mcTitle","afterHidden","asObservable","cdr","markForCheck","_handleBodyInteraction","tslib_1.__decorate","Output","tslib_1.__metadata","EventEmitter","Input","Component","selector","exportAs","animations","fadeAnimation","template","preserveWhitespaces","styles","encapsulation","ViewEncapsulation","None","changeDetection","ChangeDetectionStrategy","OnPush","host","(body:click)","ChangeDetectorRef","MC_TOOLTIP_SCROLL_STRATEGY","InjectionToken","MC_TOOLTIP_SCROLL_STRATEGY_FACTORY_PROVIDER","provide","deps","Overlay","useFactory","MC_TOOLTIP_SCROLL_STRATEGY_FACTORY","McTooltip","_overlay","elementRef","_ngZone","_scrollDispatcher","hostView","_scrollStrategy","_dir","isTooltipOpen","isDynamicTooltip","parentDisabled","_disabled","_trigger","$unsubscribe","Subject","manualListeners","Map","_destroyed","availablePositions","Object","defineProperty","_title","title","updateCompValue","coerceBooleanProperty","_mouseEnterDelay","_mouseLeaveDelay","_visible","tooltipClass","tooltip","_createOverlay","_overlayRef","strategy","position","flexibleConnectedTo","withTransformOriginOn","withFlexibleDimensions","withViewportMargin","withPositions","DEFAULT_4_POSITIONS","slice","scrollableAncestors","getAncestorScrollContainers","withScrollableContainers","positionChanges","pipe","takeUntil","subscribe","change","onPositionChange","scrollableViewProperties","isOverlayClipped","run","create","direction","positionStrategy","panelClass","scrollStrategy","_updatePosition","detachments","_detach","hasAttached","detach","$event","updatedPlacement","keys","some","key","connectionPair","originX","originY","overlayX","overlayY","handlePositioningUpdate","pos","overlayElement","clientHeight","element","nativeElement","currentContainer","style","top","parseInt","split","ngOnInit","initElementRefListeners","ngOnDestroy","dispose","forEach","listener","event","removeEventListener","clear","complete","handleKeydown","e","keyCode","ESCAPE","handleTouchend","addEventListener","disabled","overlayRef","_portal","ComponentPortal","attach","instance","property","distinctUntilChanged","data","getConfig","origin","_getOrigin","overlay","_getOverlayPosition","tslib_1.__assign","main","fallback","originPosition","isLtr","getMcTooltipInvalidPositionError","_a","_invertPosition","x","y","overlayPosition","newX","newY","HostBinding","Directive","(keydown)","(touchend)","tslib_1.__param","Inject","Optional","ElementRef","NgZone","ScrollDispatcher","ViewContainerRef","Directionality","McToolTipModule","NgModule","declarations","exports","imports","BrowserAnimationsModule","CommonModule","OverlayModule","providers","entryComponents","VERSION","Version","SELECT_PANEL_PADDING_X","selectedOptions","join","_selectionModel","selected","viewValue","McSelect","empty","_multiple","_isRtl","reverse","isEmpty","_handleKeydown","panelOpen","_handleOpenKeydown","_handleClosedKeydown","_onFadeInDone","_panelDoneAnimating","_changeDetectorRef","_onFocus","_focused","stateChanges","_onBlur","_onTouched","_onAttached","overlayDir","positionChange","take","detectChanges","_calculateOverlayOffsetX","panel","scrollTop","_scrollTop","_getPanelTheme","_parentFormField","color","focus","_elementRef","_calculateOverlayScroll","selectedIndex","scrollBuffer","maxScroll","itemHeight","_getItemHeight","optionOffsetFromScrollTop","halfOptionHeight","optimalScrollPosition","Math","min","max","onContainerClick","open","onRemoveMatcherItem","option","stopPropagation","deselect","_panelOpen","_calculateHiddenItems","visibleItems","totalItemsWidth","_getTotalItemsWidthInMatcher","totalVisibleItemsWidth","tags","tag","offsetTop","offsetHeight","getBoundingClientRect","width","hiddenItems","length","itemsCounter","trigger","querySelector","matcherList","itemsCounterShowed","matcherListWidth","matcherWidth","triggerClone","cloneNode","remove","_renderer","setStyle","appendChild","querySelectorAll","item","isArrowKey","DOWN_ARROW","UP_ARROW","LEFT_ARROW","RIGHT_ARROW","ENTER","SPACE","multiple","altKey","preventDefault","_keyManager","onKeydown","manager","HOME","END","setFirstItemActive","setLastItemActive","close","activeItem","A","ctrlKey","hasDeselectedOptions_1","options","select","previouslyFocusedIndex","activeItemIndex","shiftKey","_selectViaInteraction","_initializeSelection","Promise","resolve","then","_setSelectionByValue","ngControl","_value","Array","isArray","getMcSelectNonArrayValueError","currentValue","_selectValue","_sortValues","correspondingOption","setActiveItem","find","_compareWith","error","isDevMode","console","warn","_initKeyManager","ActiveDescendantKeyManager","withTypeAhead","withVerticalOrientation","withHorizontalOrientation","tabOut","_destroy","_scrollActiveOptionIntoView","_resetOptions","changedOrDestroyed","merge","changes","optionSelectionChanges","_onSelect","source","isUserInput","apply","map","_stateChanges","_setOptionIds","wasSelected","isSelected","_propagateChanges","options_1","toArray","sort","a","b","sortComparator","indexOf","fallbackValue","valueToEmit","valueChange","_onChange","selectionChange","McSelectChange","_optionIds","id","_highlightCorrectOption","activeOptionIndex","labelCount","_countGroupLabelsBeforeOption","optionGroups","_getOptionScrollPosition","_getOptionIndex","reduce","result","current","index","undefined","_calculateOverlayPosition","items","_getItemCount","panelHeight","scrollContainerHeight","selectedOptionOffset","_offsetY","_calculateOverlayOffsetY","_checkOverlayWithinViewport","offsetX","overlayRect","viewportSize","_viewportRuler","getViewportSize","isRtl","first","group","leftOverflow","left","rightOverflow","right","round","updatePosition","topSpaceAvailable","_triggerRect","bottomSpaceAvailable","height","bottom","panelHeightTop","abs","totalPanelHeight","panelHeightBottom","_adjustPanelUp","_adjustPanelDown","_transformOrigin","_getOriginBasedOnOption","distanceBelowViewport","distanceAboveViewport","optionHeightAdjustment","ViewChild","ViewChildren","McTag","QueryList","CdkConnectedOverlay","ContentChildren","McOption","descendants","McOptgroup","ContentChild","McSelectTrigger","ErrorStateMatcher","Observable","McSelect_1","inputs","[attr.id]","[attr.tabindex]","class","[class.mc-disabled]","[class.mc-select-invalid]","[class.mc-select-required]","(focus)","(blur)","(window:resize)","mcSelectAnimations","transformPanel","fadeInContent","McFormFieldControl","useExisting","MC_OPTION_PARENT_COMPONENT","Self","Attribute","MC_SELECT_SCROLL_STRATEGY","ViewportRuler","Renderer2","NgForm","FormGroupDirective","McFormField","NgControl","String","_McSelectMixinBase","McSelectModule","McOptionModule","McIconModule","McTagModule","McFormFieldModule","MC_SELECT_SCROLL_STRATEGY_PROVIDER","McSplitterComponent","ngZone","renderer","areas","_gutterSize","isDragging","areaPositionDivider","listeners","_direction","gutterSize","size","coerceNumberProperty","addArea","area","order","getSize","setOrder","push","initialSize","isVertical","onMouseDown","leftAreaIndex","rightAreaIndex","leftArea","rightArea","startPoint","screenX","screenY","disableFlex","setSize","runOutsideAngular","listen","onMouseUp","onMouseMove","removeArea","indexToRemove","splice","endPoint","offset","newLeftAreaSize","newRightAreaSize","minLeftAreaSize","getMinSize","minRightAreaSize","rightAreaOffset","unsubscribe","pop","McGutterDirective","_order","_size","getCursor","getState","coerceCssPixelValue","setAttr","state","Error","attribute","setAttribute","McSplitterAreaDirective","splitter","removeStyle","sz","getSizeProperty","getOffsetSizeProperty","getComputedStyle","parseFloat","getMinSizeProperty","McSplitterModule","nextUniqueId","McToggleBase","_McToggleMixinBase","mixinTabIndex","mixinColor","mixinDisabled","ThemePalette","Primary","McToggleChange","McToggleComponent","_super","_focusMonitor","tabIndex","call","labelPosition","ariaLabel","ariaLabelledby","_uniqueId","name","_checked","_onTouchedCallback","_onChangeCallback","_","monitor","tslib_1.__extends","McToggleComponent_1","stopMonitoring","focusVia","_inputElement","_getAriaChecked","checked","_onInteractionEvent","_onLabelTextChange","_onInputClick","_updateModelValue","_emitChangeEvent","writeValue","registerOnChange","fn","registerOnTouched","setDisabledState","isDisabled","NG_VALUE_ACCESSOR","forwardRef","multi","[id]","[class.mc-toggle_off]","transition","animate","FocusMonitor","McToggleModule","A11yModule","McCommonModule","visibleSource","BehaviorSubject","$visible","TemplateRef","visible","PAGE_DOWN","setNextPageItemActive","McTreeSelection","ngAfterContentInit","FocusKeyManager","updateScrollSize","withScrollSize","floor","_getHeight","setFocusedOption","updateActiveItem","withShift","previousIndex_1","previousActiveItemIndex","activeIndex_1","setSelected","withCtrl","_canDeselectLast","toggle","autoSelect","_emitNavigationEvent","toggleFocusedOption","focusedIndex","_isValidIndex","focusedOption","renderNodeChanges","dataDiffer","viewContainer","parentData","_dataDiffer","_nodeOutlet","arrayOfInstances","_embeddedViews","view","viewDef","def","nodes","node","nodeMatchedQueries","matchedQueryIds","nodeData","nodeIndex","reset","notifyOnChanges","getClientRects","navigationChange","McTreeNavigationChange","noUnselect","CdkTreeNodeOutlet","McTreeNodeOption","McTreeSelection_1","[tabIndex]","role","CdkTree","IterableDiffers","_McTreeSelectionBase","MC_TREE_DIRECTIVES","McTreeNodeDef","McTreeNodePadding","McTreeModule","CdkTreeModule","McTreeFlattener","transformFunction","getLevel","isExpandable","getChildren","_flattenNode","level","resultNodes","parentMap","flatNode","children","child","childParentMap","flattenNodes","structuredData","expandFlattenedNodes","treeControl","results","currentExpand","expand","i","isExpanded","McTreeFlatDataSource","treeFlattener","initialData","_flattenedData","_expandedData","_data","dataNodes","connect","collectionViewer","viewChange","expansionModel","onChange","disconnect","DataSource","McTreeNestedDataSource","arguments","McTagBase","_McTagMixinBase","_addClassModificatorForIcons","icons","contentChildren","iconElement","previousElementSibling","nextElementSibling","nextSibling","classList","add","previousSibling","firstIconElement","secondIconElement","McIcon","PlatformModule","MC_TEXTAREA_VALUE_ACCESSOR","McTextareaBase","_defaultErrorStateMatcher","_parentForm","_parentFormGroup","McTextareaMixinBase","mixinErrorState","McTextarea","inputValueAccessor","canGrow","focused","controlType","uid","_required","lineHeight","freeRowsHeight","minHeight","valueAccessor","previousNativeValue","growObserver","fromEvent","growSubscription","grow","bind","McTextarea_1","_id","paddingTop","paddingBottom","ngOnChanges","ngDoCheck","updateErrorState","dirtyCheckNativeValue","textarea","outerHeight","window","diff","scrollHeight","focusChanged","isFocused","isBadInput","newValue","validity","badInput","getGrowHeight","toString","[class.mc-textarea-resizable]","[attr.placeholder]","[disabled]","[required]","McTextareaModule","FormsModule","TimeParts","TimeFormats","TIMEFORMAT_PLACEHOLDERS","HHmmss","HHmm","DEFAULT_TIME_FORMAT","HOURS_MINUTES_SECONDS_REGEXP","RegExp","HOURS_MINUTES_REGEXP","HOURS_ONLY_REGEXP","uniqueComponentIdSuffix","validatorOnChange","noop","validator","MC_INPUT_VALUE_ACCESSOR","McTimepickerBase","McTimepickerMixinBase","ɵ1","validate","c","registerOnValidatorChange","McTimepicker","_minTime","_maxTime","placeholder","Validators","compose","parseValidator","minTimeValidator","maxTimeValidator","McTimepicker_1","applyInputChanges","_timeFormat","formatValue","timeFormatKey","minValue","minDateTime","getDateFromTimeString","maxValue","maxDateTime","onTouched","onBlur","onPaste","clipboardUserInput","clipboardData","getData","onInput","initialCursorStart","selectionStart","initialCursorEnd","selectionEnd","isAutocompleteTriggered","getParsedTimeParts","hoursOnly","hoursAndMinutes","hoursAndMinutesAndSeconds","doTimestringReformat","errors","createSelectionOfTimeComponentInInput","setProperty","getTimeStringFromDate","timeFormat","onKeyDown","getKeyCode","upDownTimeByArrowKeys","switchSelectionBetweenTimeparts","applyParams","changedTime","timeToApply","currentDateTimeInput","control","updateValueAndValidity","cursorPos","modifiedTimePart","getTimeEditMetrics","incrementTime","decrementTime","getCursorPositionOfPrevTimePartStart","getCursorPositionOfNextTimePartStart","code","newEditParams","cursorStartPosition","cursorEndPosition","dateVal","whatToIncrement","seconds","getTimeDigitsFromDate","hours","minutes","getDateFromTimeDigits","whatToDecrement","timeString","timeDevider","nextDividerPos","cursorPosition","minutesIndex","hoursIndex","secondsIndex","tempVal","getNumberWithLeadingZero","getHours","getMinutes","getSeconds","match","trim","Number","resultDate","Date","isNaN","getTime","digit","mcTimepickerParse","text","isTimeLowerThenMin","mcTimepickerLowerThenMintime","isTimeGreaterThenMax","mcTimepickerHigherThenMaxtime","timeToCompare","[attr.time-format]","[attr.min-time]","[attr.max-time]","[attr.value]","(input)","(paste)","NG_VALIDATORS","useValue","McTimepickerModule","transform","minWidth","opacity","query","animateChild","MC_SELECT_SCROLL_STRATEGY_PROVIDER_FACTORY","McSelectBase","_scrollStrategyFactory","_triggerFontSize","_panelDoneAnimatingStream","defer","onSelectionChange","onStable","switchMap","openedChange","_openedStream","filter","o","_closedStream","oneMoreText","_uid","o1","o2","_placeholder","getMcSelectDynamicMultipleError","getMcSelectNonFunctionValueError","SelectionModel","added","removed","startWith","ngAfterViewInit","fontSize","modalControl","closeAll","McModalService","mcOnCancel","mcCloseByESC","mcWidth","ModalBuilderForService","getInstance","confirm","confirmType","mcOnOk","mcModalType","mcClassName","mcMaskClosable","success","simpleConfirm","delete","mcCancelText","Injectable","McModalControlService","McModalModule","McButtonModule","McModalComponent","CssUnitPipe","MC_NAVBAR_CONTAINER","MC_NAVBAR_ITEM","MC_NAVBAR_BRAND","MC_NAVBAR_TITLE","McNavbarLogo","McNavbarBrand","McNavbarTitle","McNavbarItemBase","_McNavbarMixinBase","McNavbarItem","_platform","_cdRef","dropdownItems","isCollapsed","_subscription","Subscription","encodeURI","dropdownContent","denyClickIfDisabled","_focusMonitor$","hasDropdownContent","listenClickOutside","startListenFocusDropdownItems","stopListenFocusDropdownItems","isActiveDropdownLink","link","isBrowser","location","href","handleClickByItem","toggleDropdown","isNavbarItem","target","contains","handleClickByDropdownItem","forceCloseDropdown","_dropdownElements","el","events","eventListeners","hasAttribute","stopImmediatePropagation","read","[attr.disabled]","Platform","McNavbarContainer","CollapsibleItem","_collapsed","processCollapsed","collapsed","updateCollapsedClass","CachedItemWidth","itemsForCollapse","_collapsedItemsWidth","calculateAndCacheCollapsedItemsWidth","updateTitle","acc","getTitle","computedTitle","getAttribute","decodeURI","innerText","removeAttribute","McNavbar","forceRecalculateItemsWidth","resizeDebounceInterval","firstLevelElement","secondLevelElements","resizeObserver","debounceTime","_resizeSubscription","updateCollapsed","_itemsWidths","calculateAndCacheItemsWidth","_totalItemsWidths","calculateAndCacheTotalItemsWidth","collapseDelta","maxAllowedWidth","itemsWidths","canCollapse","collapsedItemsWidth","getOuterElementWidth","getPropertyValue","allItemsSelector","allItems","from","getItemsForCollapse","McNavbarModule","idIterator","McProgressBarBase","_McProgressBarMixinBase","McProgressBar","mode","McProgressBarModule","McProgressSpinnerBase","_McProgressSpinnerMixinBase","McProgressSpinner","percentage","McProgressSpinnerModule","McRadioChange","McRadioGroupBase","_McRadioGroupMixinBase","MC_RADIO_GROUP_CONTROL_VALUE_ACCESSOR","McRadioGroup","_changeDetector","_name","_selected","_isInitialized","_labelPosition","controlValueAccessorChangeFn","updateRadioButtonNames","v","markRadiosForCheck","updateSelectedRadioFromValue","checkSelectedRadioButton","toBoolean","touch","emitChangeEvent","_radios","radio","isAlreadySelected","McRadioButton","McRadioButtonBase","_McRadioButtonMixinBase","radioGroup","_radioDispatcher","removeUniqueSelectionListener","newCheckedState","notify","newDisabledState","required","onInputClick","onInputChange","groupValueChanged","[class.mc-checked]","UniqueSelectionDispatcher","McRadioModule","McTreeNodeDef_1","CdkTreeNodeDef","_baseLeftPadding","_iconWidth","_indent","McTreeNodePadding_1","_withIcon","_paddingIndent","nodeLevel","_treeNode","_tree","_level","leftPadding","_setPadding","CdkTreeNodePadding","treeSelection","_hasFocus","McTreeNodeOption_1","_handleFocus","_handleBlur","_handleClick","tabindex","[class.mc-selected]","[class.mc-focused]","[attr.aria-expanded]","[attr.aria-level]","(click)","CdkTreeNode","McTreeSelectionChange","_differs","rawValue","log","_onKeyDown","collapse","PAGE_UP","setPreviousPageItemActive","MC_SELECTION_LIST_VALUE_ACCESSOR","McListSelection","_McListSelectionMixinBase","McListBase","McList","McListSubheaderCssStyler","McListItemBase","McListItem","_element","_lineSetter","McLineSetter","_lines","_getHostElement","McLine","McListModule","McLineModule","McListOption","McLinkBase","_McLinkBase","McLink","McLinkModule","parentService","rootOpenModals","rootAfterAllClose","rootRegisteredMetaMap","afterAllClose","openModals","registeredMetaMap","registerModal","modalRef","hasRegistered","afterOpenSubscription","afterOpen","afterCloseSubscription","afterClose","removeOpenModal","has","SkipSelf","McModalRef","ModalUtil","document","lastPosition","listenDocumentClick","getLastClickPosition","clientX","clientY","ModalUtil$1","cfr","mcMeasureScrollbarService","changeDetector","_mcVisible","mcZIndex","_mcClosable","_mcMask","_mcMaskClosable","mcAfterOpen","mcAfterClose","mcOkType","_mcOkLoading","_mcCancelLoading","transformOrigin","mcGetContainer","mcOkText","animationState","isComponent","mcContent","createDynamicComponent","isModalButtons","mcFooter","formatModalButtons","container","HTMLElement","OverlayRef","handleVisibleStateChange","firstChange","contentComponentRef","bodyContainer","insert","autoFocusButtonOk","changeVisibleFromInside","destroy","triggerOk","onClickOkCancel","triggerCancel","getContentComponentRef","getContentComponent","getElement","onClickMask","mcMask","isModalType","type","onClickCloseBtn","ok","cancel","loadingKey","caseClose_1","doClose","isPromise","handleThen","catch","isNonEmptyString","isTemplateRef","Type","animation","closeResult","changeBodyOverflow","animateTo","getButtonCallableProp","prop","args","onButtonClick","button","loading","changeAnimationState","maskAnimationClassMap","modalAnimationClassMap","_b","changeDetectorRef","isVisible","updateTransformOrigin","buttons","autoLoading","component","factory","resolveComponentFactory","childInjector","Injector","parent","parentInjector","mcComponentParams","assign","modalElement","modalContainer","offsetLeft","plusNum","body","scrollBarWidth","DOCUMENT","ComponentFactoryResolver","McMeasureScrollbarService","defaultUnit","formatted","Pipe","createModal","changeProps","destroyModal","keydownEvents","McFormFieldBase","_McFormFieldMixinBase","_labelId","hovered","_validateControlChild","_control","_numberControl","hasStepper","_stepper","stepUp","onStepUp","stepDown","onStepDown","valueChanges","EMPTY","ngAfterContentChecked","clearValue","hasCleaner","onHoverChanged","isHovered","step","_shouldForward","getMcFormFieldMissingControlError","_hint","_suffix","_cleaner","McFormFieldNumberControl","McStepper","McHint","McSuffix","McPrefix","McCleaner","[class.mc-form-field_invalid]","[class.mc-form-field_has-prefix]","[class.mc-form-field_has-suffix]","[class.mc-form-field_has-cleaner]","[class.mc-form-field_has-stepper]","[class.ng-untouched]","[class.ng-touched]","[class.ng-pristine]","[class.ng-dirty]","[class.ng-valid]","[class.ng-invalid]","[class.ng-pending]","(mouseenter)","(mouseleave)","McFormFieldWithoutBorders","res","MC_INPUT_INVALID_TYPES","BIG_STEP","SMALL_STEP","McInputBase","_McInputMixinBase","McNumberInput","_model","bigStep","isDigit","Infinity","_host","self","getPrototypeOf","normalizeSplitter","McNumberInput_1","_focusChanged","minuses","NUMPAD_MINUS","DASH","FF_MINUS","serviceKeys","DELETE","BACKSPACE","TAB","arrows","allowedKeys","concat","isIEPeriod","isNotIEPeriod","metaKey","C","V","X","F1","F12","EDGE","TRIDENT","ZERO","NINE","NUMPAD_ZERO","NUMPAD_NINE","valueAsNumber","update","replace","isFloat","isInt","test","NgModel","McInput","_type","_neverEmptyInputTypes","t","getSupportedInputTypes","_inputValueAccessor","_previousNativeValue","McInput_1","_validateType","_dirtyCheckNativeValue","_onInput","_isNeverEmpty","_isBadInput","getMcInputUnsupportedTypeError","McInputMono","MIN_VALIDATOR","MinValidator","_createValidator","_validator","[attr.min]","MAX_VALIDATOR","MaxValidator","[attr.max]","McInputModule","McContentComponent","[class.mc-layout-content]","McFooterComponent","[class.mc-layout-footer]","McHeaderComponent","[class.mc-layout-header]","McLayoutComponent","hasSidebar","[class.mc-layout]","[class.mc-layout-has-sidebar]","McSidebarComponent","mcLayoutComponent","_mcWidth","mcCollapsedWidth","mcCollapsedChange","collapsible","mcCollapsed","[class.mc-layout-sidebar]","[class.mc-layout-sidebar-collapsed]","[style.flex]","[style.max-width.px]","[style.min-width.px]","[style.width.px]","Host","McLayoutModule","listSelection","checkboxPosition","_reportValueChange","wasSelected_1","_removeOptionFromList","getLabel","_text","textContent","McListSelectionChange","McListSelectionBase","horizontal","_modelChanges","_tempValues","_setOptionsFromValues","_i","_c","selectAll","deselectAll","values","getSelectedOptionValues","listOption","optionIndex","setPreviousItemActive","setNextItemActive","_getOptionByValue","Boolean","McIconButton","McButton","McAnchor","McButtonCSSStyler","McIconButtonCSSStyler","McCard","readonly","selectedChange","_tabIndex","hostElement","onClick","[class.mc-card_readonly]","[class.mc-card_selected]","McCardModule","MC_CHECKBOX_CLICK_ACTION","MC_CHECKBOX_CONTROL_VALUE_ACCESSOR","McCheckbox","TransitionCheckState","McCheckboxChange","McCheckboxBase","_McCheckboxMixinBase","_clickAction","indeterminateChange","_currentAnimationClass","_currentCheckState","Init","_controlValueAccessorChangeFn","_indeterminate","focusOrigin","_onInputFocusChange","changed","_transitionCheckState","Indeterminate","Checked","Unchecked","indeterminate","newState","oldState","[class.mc-indeterminate]","[class.mc-checkbox-label-before]","MC_CHECKBOX_REQUIRED_VALIDATOR","McCheckboxRequiredValidator","[attr.required]","CheckboxRequiredValidator","McCheckboxModule","McDivider","_vertical","_inset","[attr.aria-orientation]","[class.mc-divider-vertical]","[class.mc-divider-inset]","McDividerModule","McDropdownContent","_template","_componentFactoryResolver","_appRef","_injector","_viewContainerRef","_document","_attached","context","TemplatePortal","_outlet","DomPortalOutlet","createElement","parentNode","insertBefore","outletElement","isAttached","ApplicationRef","MC_DROPDOWN_PANEL","McDropdownItemBase","_McDropdownItemMixinBase","McDropdownItem","_parentDropdownPanel","addItem","removeItem","_getTabIndex","_checkDisabled","textNodeType","TEXT_NODE","output","childNodes","length_1","nodeType","mcDropdownAnimations","transformDropdown","fadeInItems","MC_DROPDOWN_DEFAULT_OPTIONS","providedIn","MC_DROPDOWN_DEFAULT_OPTIONS_FACTORY","McDropdown","_defaultOptions","_classList","_panelAnimationState","_animationDone","backdropClass","closed","_xPosition","xPosition","_yPosition","yPosition","_items","_itemChanges","_tabSubscription","_overlapTrigger","overlapTrigger","_hasBackdrop","hasBackdrop","McDropdown_1","throwMcDropdownInvalidPositionX","setPositionClasses","throwMcDropdownInvalidPositionY","classes","obj","className","withWrap","setFocusOrigin","focusFirstItem","lazyContent","resetActiveItem","posX","posY","_startAnimation","_resetAnimation","_onAnimationDone","_isAnimating","toState","MC_DROPDOWN_SCROLL_STRATEGY","MC_DROPDOWN_SCROLL_STRATEGY_FACTORY_PROVIDER","MC_DROPDOWN_SCROLL_STRATEGY_FACTORY","McDropdownTrigger","_openedBy","dropdownOpened","dropdownClosed","_opened","_closeSubscription","_hoverSubscription","dropdown","_check","_cleanUpSubscriptions","_setPosition","_closingActions","_init","opened","_reset","dir","_setIsOpened","isOpen","throwMcDropdownMissingError","templateRef","config","_getOverlayConfig","_subscribeToPositions","OverlayConfig","withLockedPosition","originFallbackX","overlayFallbackY","originFallbackY","_d","overlayFallbackX","offsetY","backdrop","backdropClick","(touchstart)","McDropdownModule","__extends","d","__","constructor","extendStatics","__decorate","decorators","desc","r","getOwnPropertyDescriptor","Reflect","decorate","__param","paramIndex","decorator","__metadata","metadataKey","metadataValue","metadata","isBoolean","val","MC_SANITY_CHECKS_FACTORY","base","class_1","defaultColor","Default","_color","colorPalette","defaultTabIndex","errorState","matcher","errorStateMatcher","isErrorState","optionsArray","groups","groupCounter","optionHeight","currentScrollPosition","optionOffset","arrayMap","array","iteratee","baseValues","object","props","scrollStrategies","reposition","inputType","sanitizeNumber","isFinite","getPrecision","arr","pow","value1","value2","precision","scrollThrottle","setPrototypeOf","__proto__","p","hasOwnProperty","__assign","s","n","MC_SANITY_CHECKS","_sanityChecksEnabled","_hasDoneGlobalChecks","_window","_areChecksEnabled","_checkDoctypeIsDefined","_checkThemeIsPresent","_isTestEnv","doctype","testElement","computedStyle","display","removeChild","BidiModule","_setLineClass","count","_resetClasses","_setClass","isAdd","ShowOnDirtyErrorStateMatcher","form","invalid","dirty","submitted","touched","McPseudoCheckbox","McPseudoCheckboxModule","scrollbarMeasure","overflow","initScrollBarWidth","_scrollbarWidth","scrollDiv","scrollProp","offsetWidth","clientWidth","McOptgroupBase","_McOptgroupMixinBase","_uniqueOptgroupIdCounter","[class.mc-optgroup-disabled]","[attr.aria-disabled]","[attr.aria-labelledby]","_uniqueIdCounter","McOptionSelectionChange","_parent","_active","_mostRecentViewValue","disableRipple","_emitSelectionChangeEvent","setActiveStyles","setInactiveStyles","ngAfterViewChecked","[class.mc-option-multiple]","[class.mc-active]","MC_LABEL_GLOBAL_OPTIONS","topCenter","topLeft","topRight","rightTop","rightBottom","bottomCenter","bottomLeft","bottomRight","leftTop","leftBottom","McIconCSSStyler","McIconBase","_McIconMixinBase","Empty","iconName","queries","McButtonBase","_McButtonMixinBase","focusMonitor","_haltDisabledEvents"],"mappings":"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"}