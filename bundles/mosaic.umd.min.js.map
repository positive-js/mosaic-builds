{"version":3,"file":"mosaic.umd.min.js","sources":["../../src/lib/tooltip/tooltip.component.ts","../../src/lib/tooltip/tooltip.module.ts","../../src/lib/version.ts","../../src/lib/timepicker/timepicker.constants.ts","../../src/lib/select/select.component.ts","../../src/lib/select/select.module.ts","../../src/lib/splitter/splitter.component.ts","../../src/lib/splitter/splitter.module.ts","../../src/lib/toggle/toggle.component.ts","../../src/lib/toggle/toggle.module.ts","../../src/lib/textarea/textarea.component.ts","../../src/lib/textarea/textarea.module.ts","../../src/lib/timepicker/timepicker.ts","../../src/lib/timepicker/timepicker.module.ts","../../src/lib/select/select-animations.ts","../../src/lib/tabs/tab-body.ts","../../src/lib/tabs/tab-label-wrapper.ts","../../src/lib/tabs/tab-header.ts","../../src/lib/tabs/tab-group.ts","../../src/lib/tabs/tab-nav-bar/tab-nav-bar.ts","../../src/lib/tabs/tabs.module.ts","../../src/lib/tag/tag.component.ts","../../src/lib/tag/tag.module.ts","../../src/lib/navbar/navbar.component.ts","../../src/lib/navbar/navbar.module.ts","../../src/lib/progress-bar/progress-bar.component.ts","../../src/lib/progress-bar/progress-bar.module.ts","../../src/lib/progress-spinner/progress-spinner.component.ts","../../src/lib/progress-spinner/progress-spinner.module.ts","../../src/lib/radio/radio.component.ts","../../src/lib/radio/radio.module.ts","../../src/lib/tree/node.ts","../../src/lib/tree/padding.ts","../../src/lib/tree/tree-selection.ts","../../src/lib/tree/tree.module.ts","../../src/lib/tree/data-source/flat-data-source.ts","../../src/lib/tree/data-source/nested-data-source.ts","../../src/lib/tabs/tab-content.ts","../../src/lib/tabs/tab-label.ts","../../src/lib/tabs/tab.ts","../../src/lib/tabs/tabs-animations.ts","../../src/lib/modal/modal-control.service.ts","../../src/lib/modal/modal-ref.class.ts","../../src/lib/modal/modal-util.ts","../../src/lib/modal/modal.component.ts","../../src/lib/modal/css-unit.pipe.ts","../../src/lib/modal/modal.service.ts","../../src/lib/modal/modal.module.ts","../../src/lib/dropdown/dropdown.component.ts","../../src/lib/dropdown/dropdown-trigger.ts","../../src/lib/dropdown/dropdown.module.ts","../../src/lib/layout/content.component.ts","../../src/lib/layout/footer.component.ts","../../src/lib/layout/header.component.ts","../../src/lib/layout/layout.component.ts","../../src/lib/layout/sidebar.component.ts","../../src/lib/layout/layout.module.ts","../../src/lib/list/list-selection.component.ts","../../src/lib/list/list.component.ts","../../src/lib/list/list.module.ts","../../src/lib/link/link.component.ts","../../src/lib/link/link.module.ts","../../src/lib/datepicker/calendar.ts","../../src/lib/datepicker/datepicker-animations.ts","../../src/lib/datepicker/datepicker.ts","../../src/lib/datepicker/datepicker-input.ts","../../src/lib/datepicker/datepicker-toggle.ts","../../src/lib/datepicker/datepicker-module.ts","../../src/lib/divider/divider.component.ts","../../src/lib/divider/divider.module.ts","../../src/lib/dropdown/dropdown-content.ts","../../src/lib/dropdown/dropdown-panel.ts","../../src/lib/dropdown/dropdown-item.ts","../../src/lib/dropdown/dropdown-animations.ts","../../src/lib/input/input.ts","../../src/lib/input/input-number-validators.ts","../../src/lib/input/input.module.ts","../../src/lib/datepicker/datepicker-intl.ts","../../src/lib/datepicker/calendar-body.ts","../../src/lib/datepicker/month-view.ts","../../src/lib/datepicker/multi-year-view.ts","../../src/lib/datepicker/year-view.ts","../../src/lib/button/button.component.ts","../../src/lib/button/button.module.ts","../../src/lib/card/card.component.ts","../../src/lib/card/card.module.ts","../../src/lib/checkbox/checkbox-config.ts","../../src/lib/checkbox/checkbox.ts","../../src/lib/checkbox/checkbox-required-validator.ts","../../src/lib/checkbox/checkbox-module.ts","../../src/lib/form-field/cleaner.ts","../../src/lib/form-field/form-field-control.ts","../../src/lib/form-field/form-field-number-control.ts","../../src/lib/form-field/hint.ts","../../src/lib/form-field/prefix.ts","../../src/lib/form-field/stepper.ts","../../src/lib/form-field/suffix.ts","../../src/lib/form-field/form-field.ts","../../src/lib/form-field/form-field.module.ts","../../src/lib/input/input-value-accessor.ts","../../src/lib/input/stepperUtils.ts","../../node_modules/tslib/tslib.es6.js","../../src/lib/core/utils/utils.ts","../../src/lib/core/common-behaviors/common-module.ts","../../src/lib/core/common-behaviors/disabled.ts","../../src/lib/core/common-behaviors/color.ts","../../src/lib/core/common-behaviors/tabindex.ts","../../src/lib/core/common-behaviors/error-state.ts","../../src/lib/core/option/option.ts","../../src/lib/core/overlay/overlay-position-map.ts","../../src/lib/form-field/form-field-errors.ts","../../src/lib/input/input-errors.ts","../../src/lib/datepicker/datepicker-errors.ts","../../src/lib/dropdown/dropdown-errors.ts","../../src/lib/select/select-errors.ts","../../src/lib/core/line/line.ts","../../src/lib/core/error/error-options.ts","../../src/lib/core/selection/pseudo-checkbox/pseudo-checkbox.ts","../../src/lib/core/selection/index.ts","../../src/lib/core/services/measure-scrollbar.service.ts","../../src/lib/core/option/optgroup.ts","../../src/lib/core/option/index.ts","../../src/lib/core/label/label-options.ts","../../src/lib/core/animation/fade-animations.ts","../../src/lib/icon/icon.component.ts","../../src/lib/icon/icon.module.ts"],"sourcesContent":["import {\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    Directive,\n    ElementRef,\n    EventEmitter,\n    HostBinding,\n    Inject,\n    InjectionToken,\n    Input,\n    NgZone,\n    OnDestroy,\n    OnInit,\n    Optional,\n    Output,\n    TemplateRef,\n    ViewContainerRef,\n    ViewEncapsulation\n} from '@angular/core';\nimport { Directionality } from '@ptsecurity/cdk/bidi';\nimport { coerceBooleanProperty } from '@ptsecurity/cdk/coercion';\nimport { ESCAPE } from '@ptsecurity/cdk/keycodes';\nimport {\n    ConnectedOverlayPositionChange,\n    ConnectionPositionPair,\n    Overlay,\n    OverlayRef,\n    ScrollDispatcher,\n    IScrollStrategy,\n    FlexibleConnectedPositionStrategy,\n    IOverlayConnectionPosition,\n    IOriginConnectionPosition,\n    HorizontalConnectionPos,\n    VerticalConnectionPos\n} from '@ptsecurity/cdk/overlay';\nimport { ComponentPortal } from '@ptsecurity/cdk/portal';\nimport {\n    fadeAnimation,\n    DEFAULT_4_POSITIONS,\n    POSITION_MAP\n} from '@ptsecurity/mosaic/core';\nimport { BehaviorSubject, Observable, Subject } from 'rxjs';\nimport { distinctUntilChanged, takeUntil } from 'rxjs/operators';\n\n\n@Component({\n    selector: 'mc-tooltip-component',\n    inputs: [\n        'mcMouseEnterDelay',\n        'mcMouseLeaveDelay',\n        'mcTitle',\n        'mcVisible',\n        'mcTrigger',\n        'mcPlacement'\n    ],\n    outputs: ['mcVisibleChange'],\n    animations: [ fadeAnimation ],\n    templateUrl: './tooltip.component.html',\n    preserveWhitespaces: false,\n    styleUrls: ['./tooltip.css'],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    host: {\n        '(body:click)': 'this.handleBodyInteraction()'\n    }\n})\nexport class McTooltipComponent {\n    prefix = 'mc-tooltip_placement';\n    positions: ConnectionPositionPair[] = [ ...DEFAULT_4_POSITIONS ];\n    classMap = {};\n    isTitleString: boolean;\n    showTid: number;\n    hideTid: number;\n    availablePositions: any;\n    $visible: Observable<boolean>;\n\n    @Output() mcVisibleChange: EventEmitter<boolean> = new EventEmitter();\n\n    @Input() mcMouseEnterDelay = 400;\n\n    @Input() mcMouseLeaveDelay = 0;\n\n    @Input()\n    get mcTitle(): string | TemplateRef<void> {\n        return this._mcTitle;\n    }\n    set mcTitle(value: string | TemplateRef<void>) {\n        this.isTitleString = !(value instanceof TemplateRef);\n\n        if (this.isTitleString) {\n            this._mcTitle = value;\n        }\n    }\n    private _mcTitle: string | TemplateRef<void>;\n\n    @Input()\n    get mcTrigger(): string {\n        return this._mcTrigger;\n    }\n    set mcTrigger(value: string) {\n        this._mcTrigger = value;\n    }\n    private _mcTrigger: string = 'hover';\n\n    @Input()\n    get mcPlacement(): string {\n        return this._mcPlacement;\n    }\n    set mcPlacement(value: string) {\n        if (value !== this._mcPlacement) {\n            this._mcPlacement = value;\n            this.positions.unshift(POSITION_MAP[ this.mcPlacement ]);\n        } else if (!value) {\n            this._mcPlacement = 'top';\n        }\n    }\n    private _mcPlacement: string = 'top';\n\n    @Input()\n    get mcVisible(): boolean {\n        return this._mcVisible.value;\n    }\n    set mcVisible(value: boolean) {\n        const visible = coerceBooleanProperty(value);\n\n        if (this._mcVisible.value !== visible) {\n            this._mcVisible.next(visible);\n            this.mcVisibleChange.emit(visible);\n        }\n    }\n    private _mcVisible: BehaviorSubject<boolean> = new BehaviorSubject<boolean>(false);\n\n    /** Subject for notifying that the tooltip has been hidden from the view */\n    private readonly onHideSubject: Subject<any> = new Subject();\n    private closeOnInteraction: boolean = false;\n\n    constructor(public cdr: ChangeDetectorRef) {\n        this.availablePositions = POSITION_MAP;\n        this.$visible = this._mcVisible.asObservable();\n    }\n\n    show(): void {\n        if (this.hideTid) {\n            clearTimeout(this.hideTid);\n        }\n\n        if (!this.isContentEmpty()) {\n            if (this.mcTrigger !== 'manual') {\n                this.closeOnInteraction = true;\n            }\n            this.showTid = setTimeout(() => {\n                this.mcVisible = true;\n                this.mcVisibleChange.emit(true);\n\n                // Mark for check so if any parent component has set the\n                // ChangeDetectionStrategy to OnPush it will be checked anyways\n                this.markForCheck();\n            }, this.mcMouseEnterDelay);\n        }\n    }\n\n    hide(): void {\n        if (this.showTid) {\n            clearTimeout(this.showTid);\n        }\n\n        this.hideTid = setTimeout(() => {\n            this.mcVisible = false;\n            this.mcVisibleChange.emit(false);\n            this.onHideSubject.next();\n\n            // Mark for check so if any parent component has set the\n            // ChangeDetectionStrategy to OnPush it will be checked anyways\n            this.markForCheck();\n        }, this.mcMouseLeaveDelay);\n    }\n\n    setClassMap(): void {\n        this.classMap = `${this.prefix}-${this.mcPlacement}`;\n    }\n\n    isContentEmpty(): boolean {\n        return this.isTitleString ? (this.mcTitle === '' || !this.mcTitle) : false;\n    }\n\n    /** Returns an observable that notifies when the tooltip has been hidden from view. */\n    afterHidden(): Observable<void> {\n        return this.onHideSubject.asObservable();\n    }\n\n    markForCheck(): void {\n        this.cdr.markForCheck();\n    }\n\n    handleBodyInteraction(): void {\n        if (this.closeOnInteraction) {\n            this.hide();\n        }\n    }\n}\n\nexport const MC_TOOLTIP_SCROLL_STRATEGY =\n    new InjectionToken<() => IScrollStrategy>('mc-tooltip-scroll-strategy');\n\n/** @docs-private */\nexport function mcTooltipScrollStrategyFactory(overlay: Overlay): () => IScrollStrategy {\n    return () => overlay.scrollStrategies.reposition({scrollThrottle: 20});\n}\n\n/** @docs-private */\nexport const MC_TOOLTIP_SCROLL_STRATEGY_FACTORY_PROVIDER = {\n    provide: MC_TOOLTIP_SCROLL_STRATEGY,\n    deps: [Overlay],\n    useFactory: mcTooltipScrollStrategyFactory\n};\n\n/** Creates an error to be thrown if the user supplied an invalid tooltip position. */\nexport function getMcTooltipInvalidPositionError(position: string) {\n    return Error(`McTooltip position \"${position}\" is invalid.`);\n}\n\nconst VIEWPORT_MARGIN: number = 8;\n\n@Directive({\n    selector: '[mcTooltip], [attribute^=\"mcTooltip\"]',\n    exportAs: 'mcTooltip',\n    host: {\n        '(keydown)': 'handleKeydown($event)',\n        '(touchend)': 'handleTouchend()'\n    }\n})\nexport class McTooltip implements OnInit, OnDestroy {\n    isTooltipOpen: boolean = false;\n    isDynamicTooltip = false;\n    parentDisabled: boolean = false;\n    overlayRef: OverlayRef | null;\n    portal: ComponentPortal<McTooltipComponent>;\n    availablePositions: any;\n    tooltip: McTooltipComponent | null;\n\n    @Output() mcVisibleChange = new EventEmitter<boolean>();\n    private $unsubscribe = new Subject<void>();\n\n    @Input('mcTooltip')\n    get mcTitle(): string {\n        return this._mcTitle;\n    }\n    set mcTitle(title: string) {\n        this._mcTitle = title;\n        this.updateCompValue('mcTitle', title);\n    }\n    private _mcTitle: string;\n\n    @Input('mcTitle')\n    set setTitle(title: string) {\n        this.mcTitle = title;\n    }\n\n    @Input('mcTooltipDisabled')\n    get disabled(): boolean { return this._disabled; }\n    set disabled(value) {\n        this._disabled = coerceBooleanProperty(value);\n    }\n    private _disabled: boolean = false;\n\n    @Input('mcMouseEnterDelay')\n    get mcMouseEnterDelay(): number {\n        return this._mcMouseEnterDelay;\n    }\n    set mcMouseEnterDelay(value: number) {\n        this._mcMouseEnterDelay = value;\n        this.updateCompValue('mcMouseEnterDelay', value);\n    }\n    private _mcMouseEnterDelay: number;\n\n    @Input('mcMouseLeaveDelay')\n    get mcMouseLeaveDelay(): number {\n        return this._mcMouseLeaveDelay;\n    }\n    set mcMouseLeaveDelay(value: number) {\n        this._mcMouseLeaveDelay = value;\n        this.updateCompValue('mcMouseLeaveDelay', value);\n    }\n    private _mcMouseLeaveDelay: number;\n\n    @Input('mcTrigger')\n    get mcTrigger(): string {\n        return this._mcTrigger;\n    }\n    set mcTrigger(value: string) {\n        if (value) {\n            this._mcTrigger = value;\n            this.updateCompValue('mcTrigger', value);\n        } else {\n            this._mcTrigger = 'hover';\n        }\n    }\n    private _mcTrigger: string = 'hover';\n\n    @Input('mcPlacement')\n    get mcPlacement(): string {\n        return this._mcPlacement;\n    }\n    set mcPlacement(value: string) {\n        if (value) {\n            this._mcPlacement = value;\n            this.updateCompValue('mcPlacement', value);\n        } else {\n            this._mcPlacement = 'top';\n        }\n    }\n    private _mcPlacement: string = 'top';\n\n    @Input('mcTooltipClass')\n    get mcTooltipClass() { return this._mcTooltipClass; }\n    set mсTooltipClass(value: string | string[] | Set<string> | {[key: string]: any}) {\n        this._mcTooltipClass = value;\n\n        if (this.tooltip) {\n            this.tooltip.setClassMap();\n        }\n    }\n    private _mcTooltipClass: string | string[] | Set<string> | {[key: string]: any};\n\n    @Input('mcVisible')\n    get mcVisible(): boolean {\n        return this._mcVisible;\n    }\n    set mcVisible(externalValue: boolean) {\n        const value = coerceBooleanProperty(externalValue);\n        this._mcVisible = value;\n        this.updateCompValue('mcVisible', value);\n\n        if (value) {\n            this.show();\n        }\n    }\n    private _mcVisible: boolean;\n\n    @HostBinding('class.mc-tooltip-open')\n    get isOpen(): boolean {\n        return this.isTooltipOpen;\n    }\n\n    @HostBinding('class.disabled')\n    get isParentDisabled(): boolean {\n        return this.parentDisabled;\n    }\n\n    private manualListeners = new Map<string, EventListenerOrEventListenerObject>();\n    private readonly destroyed = new Subject<void>();\n\n    constructor(\n        private overlay: Overlay,\n        private elementRef: ElementRef,\n        private ngZone: NgZone,\n        private scrollDispatcher: ScrollDispatcher,\n        private hostView: ViewContainerRef,\n        @Inject(MC_TOOLTIP_SCROLL_STRATEGY) private scrollStrategy,\n        @Optional() private direction: Directionality) {\n            this.availablePositions = POSITION_MAP;\n        }\n\n    /** Create the overlay config and position strategy */\n    createOverlay(): OverlayRef {\n        if (this.overlayRef) {\n            return this.overlayRef;\n        }\n\n        // Create connected position strategy that listens for scroll events to reposition.\n        const strategy = this.overlay.position()\n            .flexibleConnectedTo(this.elementRef)\n            .withTransformOriginOn('.mc-tooltip')\n            .withFlexibleDimensions(false)\n            .withViewportMargin(VIEWPORT_MARGIN)\n            .withPositions([ ...DEFAULT_4_POSITIONS ]);\n\n        const scrollableAncestors = this.scrollDispatcher\n            .getAncestorScrollContainers(this.elementRef);\n\n        strategy.withScrollableContainers(scrollableAncestors);\n\n        strategy.positionChanges.pipe(takeUntil(this.destroyed)).subscribe((change) => {\n            if (this.tooltip) {\n                this.onPositionChange(change);\n                if (change.scrollableViewProperties.isOverlayClipped && this.tooltip.mcVisible) {\n                    // After position changes occur and the overlay is clipped by\n                    // a parent scrollable then close the tooltip.\n                    this.ngZone.run(() => this.hide());\n                }\n            }\n        });\n\n        this.overlayRef = this.overlay.create({\n            direction: this.direction,\n            positionStrategy: strategy,\n            panelClass: 'mc-tooltip-panel',\n            scrollStrategy: this.scrollStrategy()\n        });\n\n        this.updatePosition();\n\n        this.overlayRef.detachments()\n            .pipe(takeUntil(this.destroyed))\n            .subscribe(() => this.detach());\n\n        return this.overlayRef;\n    }\n\n    detach() {\n        if (this.overlayRef && this.overlayRef.hasAttached()) {\n            this.overlayRef.detach();\n        }\n\n        this.tooltip = null;\n    }\n\n    onPositionChange($event: ConnectedOverlayPositionChange): void {\n        let updatedPlacement = this.mcPlacement;\n        Object.keys(this.availablePositions).some((key) => {\n            if ($event.connectionPair.originX === this.availablePositions[key].originX &&\n                $event.connectionPair.originY === this.availablePositions[key].originY &&\n                $event.connectionPair.overlayX === this.availablePositions[key].overlayX &&\n                $event.connectionPair.overlayY === this.availablePositions[key].overlayY) {\n                updatedPlacement = key;\n\n                return true;\n            }\n\n            return false;\n        });\n        this.updateCompValue('mcPlacement', updatedPlacement);\n\n        if (this.tooltip) {\n            this.tooltip.setClassMap();\n            this.tooltip.markForCheck();\n        }\n\n        this.handlePositioningUpdate();\n    }\n\n    handlePositioningUpdate() {\n        if (!this.overlayRef) {\n            this.overlayRef = this.createOverlay();\n        }\n        if (this.mcPlacement === 'right' || this.mcPlacement === 'left') {\n            const pos =\n                (this.overlayRef.overlayElement.clientHeight -\n                    this.hostView.element.nativeElement.clientHeight) / 2; // tslint:disable-line\n            const currentContainer = this.overlayRef.overlayElement.style.top || '0px';\n            this.overlayRef.overlayElement.style.top =\n                `${parseInt(currentContainer.split('px')[0], 10) + pos - 1}px`;\n            // TODO: обновлять положение стрелки\\указателя\\\"дятла\"\n        }\n    }\n\n    // tslint:disable-next-line:no-any\n    updateCompValue(key: string, value: any): void {\n        if (this.isDynamicTooltip && value) {\n            if (this.tooltip) {\n                this.tooltip[key] = value;\n            }\n        }\n    }\n\n    ngOnInit(): void {\n        this.initElementRefListeners();\n    }\n\n    ngOnDestroy(): void {\n        if (this.overlayRef) {\n            this.overlayRef.dispose();\n        }\n        this.manualListeners.forEach((listener, event) =>\n            this.elementRef.nativeElement.removeEventListener(event, listener));\n        this.manualListeners.clear();\n\n        this.$unsubscribe.next();\n        this.$unsubscribe.complete();\n    }\n\n    handleKeydown(e: KeyboardEvent) {\n        if (this.isTooltipOpen && e.keyCode === ESCAPE) { // tslint:disable-line\n            this.hide();\n        }\n    }\n\n    handleTouchend() {\n        this.hide();\n    }\n\n    initElementRefListeners() {\n        if (this.mcTrigger === 'hover') {\n\n            this.manualListeners\n                .set('mouseenter', () => this.show())\n                .set('mouseleave', () => this.hide())\n                .forEach((listener, event) => this.elementRef.nativeElement.addEventListener(event, listener));\n        }\n\n        if (this.mcTrigger === 'focus') {\n\n            this.manualListeners\n                .set('focus', () => this.show())\n                .set('blur', () => this.hide())\n                .forEach((listener, event) => this.elementRef.nativeElement.addEventListener(event, listener));\n        }\n    }\n\n    show(): void {\n        if (!this.disabled) {\n            if (!this.tooltip) {\n                const overlayRef = this.createOverlay();\n                this.detach();\n\n                this.portal = this.portal || new ComponentPortal(McTooltipComponent, this.hostView);\n\n                this.tooltip = overlayRef.attach(this.portal).instance;\n                this.tooltip.afterHidden()\n                    .pipe(takeUntil(this.destroyed))\n                    .subscribe(() => this.detach());\n                this.isDynamicTooltip = true;\n                const properties = [\n                    'mcTitle',\n                    'mcPlacement',\n                    'mcTrigger',\n                    'mcTooltipDisabled',\n                    'mcMouseEnterDelay',\n                    'mcMouseLeaveDelay',\n                    'mсTooltipClass',\n                    'mcVisible'\n                ];\n                properties.forEach((property) => this.updateCompValue(property, this[ property ]));\n                this.tooltip.mcVisibleChange.pipe(takeUntil(this.$unsubscribe), distinctUntilChanged())\n                    .subscribe((data) => {\n                        this.mcVisible = data;\n                        this.mcVisibleChange.emit(data);\n                        this.isTooltipOpen = data;\n                    });\n            }\n            this.updatePosition();\n            this.tooltip.show();\n        }\n    }\n\n    hide(): void {\n        if (this.tooltip) {\n            this.tooltip.hide();\n        }\n    }\n\n    /** Updates the position of the current tooltip. */\n    updatePosition() {\n        if (!this.overlayRef) {\n            this.overlayRef = this.createOverlay();\n        }\n        const position =\n            this.overlayRef.getConfig().positionStrategy as FlexibleConnectedPositionStrategy;\n        const origin = this.getOrigin();\n        const overlay = this.getOverlayPosition();\n\n        position.withPositions([\n            {...origin.main, ...overlay.main},\n            {...origin.fallback, ...overlay.fallback}\n        ]);\n    }\n\n    /**\n     * Returns the origin position and a fallback position based on the user's position preference.\n     * The fallback position is the inverse of the origin (e.g. `'below' -> 'above'`).\n     */\n    getOrigin(): {main: IOriginConnectionPosition; fallback: IOriginConnectionPosition} {\n        const position = this.mcPlacement;\n        const isLtr = !this.direction || this.direction.value === 'ltr';\n        let originPosition: IOriginConnectionPosition;\n\n        if (position === 'top' || position === 'bottom') {\n            originPosition = {originX: 'center', originY: position === 'top' ? 'top' : 'bottom'};\n        } else if (\n            position === 'top' ||\n            (position === 'left' && isLtr) ||\n            (position === 'right' && !isLtr)) {\n            originPosition = {originX: 'start', originY: 'center'};\n        } else if (\n            position === 'bottom' ||\n            (position === 'right' && isLtr) ||\n            (position === 'left' && !isLtr)) {\n            originPosition = {originX: 'end', originY: 'center'};\n        } else {\n            throw getMcTooltipInvalidPositionError(position);\n        }\n\n        const {x, y} = this.invertPosition(originPosition.originX, originPosition.originY);\n\n        return {\n            main: originPosition,\n            fallback: {originX: x, originY: y}\n        };\n    }\n\n    /** Returns the overlay position and a fallback position based on the user's preference */\n    getOverlayPosition(): {main: IOverlayConnectionPosition; fallback: IOverlayConnectionPosition} {\n        const position = this.mcPlacement;\n        const isLtr = !this.direction || this.direction.value === 'ltr';\n        let overlayPosition: IOverlayConnectionPosition;\n\n        if (position === 'top') {\n            overlayPosition = {overlayX: 'center', overlayY: 'bottom'};\n        } else if (position === 'bottom') {\n            overlayPosition = {overlayX: 'center', overlayY: 'top'};\n        } else if (\n            position === 'top' ||\n            (position === 'left' && isLtr) ||\n            (position === 'right' && !isLtr)) {\n            overlayPosition = {overlayX: 'end', overlayY: 'center'};\n        } else if (\n            position === 'bottom' ||\n            (position === 'right' && isLtr) ||\n            (position === 'left' && !isLtr)) {\n            overlayPosition = {overlayX: 'start', overlayY: 'center'};\n        } else {\n            throw getMcTooltipInvalidPositionError(position);\n        }\n\n        const {x, y} = this.invertPosition(overlayPosition.overlayX, overlayPosition.overlayY);\n\n        return {\n            main: overlayPosition,\n            fallback: {overlayX: x, overlayY: y}\n        };\n    }\n\n    /** Inverts an overlay position. */\n    private invertPosition(x: HorizontalConnectionPos, y: VerticalConnectionPos) {\n        let newX: HorizontalConnectionPos = x;\n        let newY: VerticalConnectionPos = y;\n        if (this.mcPlacement === 'top' || this.mcPlacement === 'bottom') {\n            if (y === 'top') {\n                newY = 'bottom';\n            } else if (y === 'bottom') {\n                newY = 'top';\n            }\n        } else {\n            if (x === 'end') {\n                newX = 'start';\n            } else if (x === 'start') {\n                newX = 'end';\n            }\n        }\n\n        return {x: newX, y: newY};\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { OverlayModule } from '@ptsecurity/cdk/overlay';\n\nimport {\n    McTooltipComponent,\n    McTooltip,\n    MC_TOOLTIP_SCROLL_STRATEGY_FACTORY_PROVIDER\n} from './tooltip.component';\n\n\n@NgModule({\n    declarations: [McTooltipComponent, McTooltip],\n    exports: [McTooltipComponent, McTooltip],\n    imports: [CommonModule, OverlayModule],\n    providers: [MC_TOOLTIP_SCROLL_STRATEGY_FACTORY_PROVIDER],\n    entryComponents: [McTooltipComponent]\n})\nexport class McToolTipModule {\n}\n","import { Version } from '@angular/core';\n\n\nexport const VERSION = new Version('1.0.0-beta.0-2290f71');\n","export enum TimeParts {\n    hours,\n    minutes,\n    seconds\n}\n\nexport enum TimeFormats {\n    HHmmss = 'HH:mm:ss',\n    HHmm = 'HH:mm'\n}\n\nexport const TIMEFORMAT_PLACEHOLDERS: { [timeFormat: string]: string } = {\n    [TimeFormats.HHmmss]: '  :  :  ',\n    [TimeFormats.HHmm]: '  :  '\n};\n\nexport const DEFAULT_TIME_FORMAT: TimeFormats = TimeFormats.HHmm;\n\nexport const HOURS_MINUTES_SECONDS_REGEXP =\n    new RegExp(/^([0-9]|0[0-9]|1[0-9]|2[0-3]):([0-5][0-9]|[0-9]):([0-5][0-9]|[0-9])?$/);\nexport const HOURS_MINUTES_REGEXP = /^([0-9]|0[0-9]|1[0-9]|2[0-3]):([0-5][0-9]|[0-9])?$/;\nexport const HOURS_ONLY_REGEXP = /^([0-9]|0[0-9]|1[0-9]|2[0-3]):?$/;\n\nexport const SECONDS_PER_MINUTE: number = 59;\nexport const MINUTES_PER_HOUR: number = 59;\nexport const HOURS_PER_DAY: number = 23;\n\n// TODO Move it to common CDK\nexport const ARROW_UP_KEYCODE: string = 'ArrowUp';\nexport const ARROW_DOWN_KEYCODE: string = 'ArrowDown';\nexport const ARROW_LEFT_KEYCODE: string = 'ArrowLeft';\nexport const ARROW_RIGHT_KEYCODE: string = 'ArrowRight';\n","/* tslint:disable:no-empty */\n\nimport { ActiveDescendantKeyManager } from '@ptsecurity/cdk/a11y';\nimport { Directionality } from '@ptsecurity/cdk/bidi';\nimport { coerceBooleanProperty } from '@ptsecurity/cdk/coercion';\nimport { SelectionModel } from '@ptsecurity/cdk/collections';\nimport {\n    DOWN_ARROW,\n    END,\n    ENTER,\n    HOME,\n    LEFT_ARROW,\n    RIGHT_ARROW,\n    SPACE,\n    UP_ARROW,\n    A\n} from '@ptsecurity/cdk/keycodes';\nimport {\n    CdkConnectedOverlay,\n    Overlay,\n    RepositionScrollStrategy,\n    IScrollStrategy,\n    ViewportRuler\n} from '@ptsecurity/cdk/overlay';\n\nimport {\n    AfterContentInit, AfterViewInit,\n    Attribute,\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    ContentChild,\n    ContentChildren,\n    Directive,\n    DoCheck,\n    ElementRef,\n    EventEmitter,\n    Inject,\n    InjectionToken,\n    Input,\n    isDevMode,\n    NgZone,\n    OnChanges,\n    OnDestroy,\n    OnInit,\n    Optional,\n    Output,\n    QueryList, Renderer2,\n    Self,\n    SimpleChanges,\n    ViewChild, ViewChildren,\n    ViewEncapsulation\n} from '@angular/core';\nimport { ControlValueAccessor, FormGroupDirective, NgControl, NgForm } from '@angular/forms';\nimport {\n    _countGroupLabelsBeforeOption,\n    _getOptionScrollPosition,\n    CanDisable,\n    CanDisableCtor,\n    CanUpdateErrorState,\n    CanUpdateErrorStateCtor,\n    ErrorStateMatcher,\n    HasTabIndex, HasTabIndexCtor,\n    MC_OPTION_PARENT_COMPONENT,\n    McOptgroup,\n    McOption,\n    McOptionSelectionChange,\n    mixinDisabled,\n    mixinErrorState,\n    mixinTabIndex\n} from '@ptsecurity/mosaic/core';\n\nimport { McFormField, McFormFieldControl } from '@ptsecurity/mosaic/form-field';\nimport { McTag } from '@ptsecurity/mosaic/tag';\n\n\nimport { defer, merge, Observable, Subject } from 'rxjs';\nimport {\n    filter,\n    map,\n    startWith,\n    switchMap,\n    take,\n    takeUntil,\n    distinctUntilChanged\n} from 'rxjs/operators';\n\nimport {\n    getMcSelectDynamicMultipleError,\n    getMcSelectNonArrayValueError,\n    getMcSelectNonFunctionValueError\n} from './select-errors';\n\nimport { mcSelectAnimations } from './select-animations';\n\n\nlet nextUniqueId = 0;\n\n/**\n * The following style constants are necessary to save here in order\n * to properly calculate the alignment of the selected option over\n * the trigger element.\n */\n\n/** The max height of the select's overlay panel */\nexport const SELECT_PANEL_MAX_HEIGHT = 224;\n\n/** The panel's padding on the x-axis */\nexport const SELECT_PANEL_PADDING_X = 1;\n\n/** The panel's x axis padding if it is indented (e.g. there is an option group). */\n/* tslint:disable-next-line:no-magic-numbers */\nexport const SELECT_PANEL_INDENT_PADDING_X = SELECT_PANEL_PADDING_X * 2;\n\n/** The height of the select items in `em` units. */\nexport const SELECT_ITEM_HEIGHT_EM = 2;\n\n/**\n * The select panel will only \"fit\" inside the viewport if it is positioned at\n * this value or more away from the viewport boundary.\n */\nexport const SELECT_PANEL_VIEWPORT_PADDING = 8;\n\n/** Injection token that determines the scroll handling while a select is open. */\nexport const MC_SELECT_SCROLL_STRATEGY =\n    new InjectionToken<() => IScrollStrategy>('mc-select-scroll-strategy');\n\n/** @docs-private */\nexport function MC_SELECT_SCROLL_STRATEGY_PROVIDER_FACTORY(overlay: Overlay):\n    () => RepositionScrollStrategy {\n    return () => overlay.scrollStrategies.reposition();\n}\n\n/** @docs-private */\nexport const MC_SELECT_SCROLL_STRATEGY_PROVIDER = {\n    provide: MC_SELECT_SCROLL_STRATEGY,\n    deps: [Overlay],\n    useFactory: MC_SELECT_SCROLL_STRATEGY_PROVIDER_FACTORY\n};\n\n/** Change event object that is emitted when the select value has changed. */\nexport class McSelectChange {\n    constructor(\n        /** Reference to the select that emitted the change event. */\n        public source: McSelect,\n        /** Current value of the select that emitted the event. */\n        public value: any) {\n    }\n}\n\n// Boilerplate for applying mixins to McSelect.\n/** @docs-private */\nexport class McSelectBase {\n    constructor(\n        public _elementRef: ElementRef,\n        public _defaultErrorStateMatcher: ErrorStateMatcher,\n        public _parentForm: NgForm,\n        public _parentFormGroup: FormGroupDirective,\n        public ngControl: NgControl\n    ) {}\n}\n\nexport const _McSelectMixinBase:\n    CanDisableCtor &\n    HasTabIndexCtor &\n    CanUpdateErrorStateCtor & typeof McSelectBase\n    = mixinTabIndex(mixinDisabled(mixinErrorState(McSelectBase)));\n\n\n/**\n * Allows the user to customize the trigger that is displayed when the select has a value.\n */\n@Directive({ selector: 'mc-select-trigger' })\nexport class McSelectTrigger {}\n\n\n@Component({\n    selector: 'mc-select',\n    exportAs: 'mcSelect',\n    templateUrl: 'select.html',\n    styleUrls: ['./select.css'],\n    inputs: ['disabled', 'tabIndex'],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    host: {\n        '[attr.id]': 'id',\n        '[attr.tabindex]': 'tabIndex',\n        class: 'mc-select',\n        '[class.mc-disabled]': 'disabled',\n        '[class.mc-select-invalid]': 'errorState',\n        '[class.mc-select-required]': 'required',\n        '(keydown)': '_handleKeydown($event)',\n        '(focus)': '_onFocus()',\n        '(blur)': '_onBlur()',\n        '(window:resize)': '_calculateHiddenItems()'\n    },\n    animations: [\n        mcSelectAnimations.transformPanel,\n        mcSelectAnimations.fadeInContent\n    ],\n    providers: [\n        { provide: McFormFieldControl, useExisting: McSelect },\n        { provide: MC_OPTION_PARENT_COMPONENT, useExisting: McSelect }\n    ]\n})\nexport class McSelect extends _McSelectMixinBase implements\n    AfterContentInit, AfterViewInit, OnChanges, OnDestroy, OnInit, DoCheck, ControlValueAccessor, CanDisable,\n    HasTabIndex, McFormFieldControl<any>, CanUpdateErrorState {\n\n    /** The last measured value for the trigger's client bounding rect. */\n    _triggerRect: ClientRect;\n\n    /** The cached font-size of the trigger element. */\n    _triggerFontSize = 0;\n\n    /** Deals with the selection logic. */\n    _selectionModel: SelectionModel<McOption>;\n\n    /** Manages keyboard events for options in the panel. */\n    _keyManager: ActiveDescendantKeyManager<McOption>;\n\n    /** The IDs of child options to be passed to the aria-owns attribute. */\n    _optionIds: string = '';\n\n    /** The value of the select panel's transform-origin property. */\n    _transformOrigin: string = 'top';\n\n    /** Whether the panel's animation is done. */\n    _panelDoneAnimating: boolean = false;\n\n    /** Emits when the panel element is finished transforming in. */\n    _panelDoneAnimatingStream = new Subject<string>();\n\n    /** Strategy that will be used to handle scrolling while the select panel is open. */\n    _scrollStrategy = this._scrollStrategyFactory();\n\n    /**\n     * The y-offset of the overlay panel in relation to the trigger's top start corner.\n     * This must be adjusted to align the selected option text over the trigger text.\n     * when the panel opens. Will change based on the y-position of the selected option.\n     */\n    _offsetY = 0;\n\n    /**\n     * This position config ensures that the top \"start\" corner of the overlay\n     * is aligned with with the top \"start\" of the origin by default (overlapping\n     * the trigger completely). If the panel cannot fit below the trigger, it\n     * will fall back to a position above the trigger.\n     */\n    _positions = [\n        {\n            originX: 'start',\n            originY: 'bottom',\n            overlayX: 'start',\n            overlayY: 'top'\n        },\n        {\n            originX: 'start',\n            originY: 'top',\n            overlayX: 'start',\n            overlayY: 'bottom'\n        }\n    ];\n\n    /** Whether the select is focused. */\n    get focused(): boolean {\n        return this._focused || this._panelOpen;\n    }\n\n    /**\n     * @deprecated Setter to be removed as this property is intended to be readonly.\n     * @breaking-change 8.0.0\n     */\n    set focused(value: boolean) {\n        this._focused = value;\n    }\n\n    /** A name for this control that can be used by `mc-form-field`. */\n    controlType = 'mc-select';\n\n    @ViewChild('trigger') trigger: ElementRef;\n    @ViewChildren(McTag) tags: QueryList<McTag>;\n\n    @ViewChild('panel') panel: ElementRef;\n\n    /** Overlay pane containing the options. */\n    @ViewChild(CdkConnectedOverlay) overlayDir: CdkConnectedOverlay;\n\n    /** All of the defined select options. */\n    @ContentChildren(McOption, { descendants: true }) options: QueryList<McOption>;\n\n    /** All of the defined groups of options. */\n    @ContentChildren(McOptgroup) optionGroups: QueryList<McOptgroup>;\n\n    /** Classes to be passed to the select panel. Supports the same syntax as `ngClass`. */\n    @Input() panelClass: string | string[] | Set<string> | { [key: string]: any };\n\n    /** User-supplied override of the trigger element. */\n    @ContentChild(McSelectTrigger) customTrigger: McSelectTrigger;\n\n    /** Placeholder to be shown if no value has been selected. */\n    @Input()\n    get placeholder(): string {\n        return this._placeholder;\n    }\n\n    set placeholder(value: string) {\n        this._placeholder = value;\n        this.stateChanges.next();\n    }\n\n    /** Whether the component is required. */\n    @Input()\n    get required(): boolean {\n        return this._required;\n    }\n\n    set required(value: boolean) {\n        this._required = coerceBooleanProperty(value);\n        this.stateChanges.next();\n    }\n\n    /** Whether the user should be allowed to select multiple options. */\n    @Input()\n    get multiple(): boolean {\n        return this._multiple;\n    }\n\n    set multiple(value: boolean) {\n        if (this._selectionModel) {\n            throw getMcSelectDynamicMultipleError();\n        }\n\n        this._multiple = coerceBooleanProperty(value);\n    }\n\n    /**\n     * Function to compare the option values with the selected values. The first argument\n     * is a value from an option. The second is a value from the selection. A boolean\n     * should be returned.\n     */\n    @Input()\n    get compareWith() {\n        return this._compareWith;\n    }\n\n    set compareWith(fn: (o1: any, o2: any) => boolean) {\n        /* tslint:disable-next-line:strict-type-predicates */\n        if (typeof fn !== 'function') {\n            throw getMcSelectNonFunctionValueError();\n        }\n\n        this._compareWith = fn;\n\n        if (this._selectionModel) {\n            // A different comparator means the selection could change.\n            this._initializeSelection();\n        }\n    }\n\n    /** Value of the select control. */\n    @Input()\n    get value(): any {\n        return this._value;\n    }\n\n    set value(newValue: any) {\n        if (newValue !== this._value) {\n            this.writeValue(newValue);\n            this._value = newValue;\n        }\n    }\n\n    /** Object used to control when error messages are shown. */\n    @Input() errorStateMatcher: ErrorStateMatcher;\n\n    /**\n     * Function used to sort the values in a select in multiple mode.\n     * Follows the same logic as `Array.prototype.sort`.\n     */\n    @Input() sortComparator: (a: McOption, b: McOption, options: McOption[]) => number;\n\n    @Input()\n    get id(): string {\n        return this._id;\n    }\n\n    set id(value: string) {\n        this._id = value || this._uid;\n        this.stateChanges.next();\n    }\n\n    /** Combined stream of all of the child options' change events. */\n    readonly optionSelectionChanges: Observable<McOptionSelectionChange> = defer(() => {\n        if (this.options) {\n            return merge(...this.options.map((option) => option.onSelectionChange));\n        }\n\n        return this._ngZone.onStable\n            .asObservable()\n            .pipe(take(1), switchMap(() => this.optionSelectionChanges));\n    });\n\n    /** Event emitted when the select panel has been toggled. */\n    @Output() readonly openedChange: EventEmitter<boolean> = new EventEmitter<boolean>();\n\n    /** Event emitted when the select has been opened. */\n    @Output('opened') readonly _openedStream: Observable<void> =\n        this.openedChange.pipe(filter((o) => o), map(() => {}));\n\n    /** Event emitted when the select has been closed. */\n    @Output('closed') readonly _closedStream: Observable<void> =\n        this.openedChange.pipe(filter((o) => !o), map(() => {}));\n\n    /** Event emitted when the selected value has been changed by the user. */\n    @Output() readonly selectionChange: EventEmitter<McSelectChange> = new EventEmitter<McSelectChange>();\n\n    /**\n     * Event that emits whenever the raw value of the select changes. This is here primarily\n     * to facilitate the two-way binding for the `value` input.\n     * @docs-private\n     */\n    @Output() readonly valueChange: EventEmitter<any> = new EventEmitter<any>();\n\n    hiddenItems: number = 0;\n    oneMoreText: string = '...ещё';\n\n    /** Whether or not the overlay panel is open. */\n    private _panelOpen = false;\n\n    /** Whether filling out the select is required in the form. */\n    private _required: boolean = false;\n\n    /** The scroll position of the overlay panel, calculated to center the selected option. */\n    private _scrollTop = 0;\n\n    /** The placeholder displayed in the trigger of the select. */\n    private _placeholder: string;\n\n    /** Whether the component is in multiple selection mode. */\n    private _multiple: boolean = false;\n\n    /** Unique id for this input. */\n    private readonly _uid = `mc-select-${nextUniqueId++}`;\n\n    /** Emits whenever the component is destroyed. */\n    private readonly _destroy = new Subject<void>();\n\n    private _focused = false;\n\n    private _value: any;\n\n    private _id: string;\n\n    constructor(\n        private readonly _viewportRuler: ViewportRuler,\n        private readonly _changeDetectorRef: ChangeDetectorRef,\n        private readonly _ngZone: NgZone,\n        private readonly _renderer: Renderer2,\n        _defaultErrorStateMatcher: ErrorStateMatcher,\n        elementRef: ElementRef,\n        @Optional() private readonly _dir: Directionality,\n        @Optional() _parentForm: NgForm,\n        @Optional() _parentFormGroup: FormGroupDirective,\n        @Optional() private readonly _parentFormField: McFormField,\n        @Self() @Optional() public ngControl: NgControl,\n        @Attribute('tabindex') tabIndex: string,\n        @Inject(MC_SELECT_SCROLL_STRATEGY) private readonly _scrollStrategyFactory\n    ) {\n        super(elementRef, _defaultErrorStateMatcher, _parentForm, _parentFormGroup, ngControl);\n\n        if (this.ngControl) {\n            // Note: we provide the value accessor through here, instead of\n            // the `providers` to avoid running into a circular import.\n            this.ngControl.valueAccessor = this;\n        }\n\n        this.tabIndex = parseInt(tabIndex) || 0;\n\n        // Force setter to be called in case id was not specified.\n        this.id = this.id;\n    }\n\n    ngOnInit() {\n        this._selectionModel = new SelectionModel<McOption>(this.multiple);\n        this.stateChanges.next();\n\n        // We need `distinctUntilChanged` here, because some browsers will\n        // fire the animation end event twice for the same animation. See:\n        // https://github.com/angular/angular/issues/24084\n        this._panelDoneAnimatingStream\n            .pipe(distinctUntilChanged(), takeUntil(this._destroy))\n            .subscribe(() => {\n                if (this.panelOpen) {\n                    this._scrollTop = 0;\n                    this.openedChange.emit(true);\n                } else {\n                    this.openedChange.emit(false);\n                    this._panelDoneAnimating = false;\n                    this.overlayDir.offsetX = 0;\n                    this._changeDetectorRef.markForCheck();\n                }\n            });\n    }\n\n    ngAfterContentInit() {\n        this._initKeyManager();\n\n        this._selectionModel.onChange!\n            .pipe(takeUntil(this._destroy))\n            .subscribe((event) => {\n                event.added.forEach((option) => option.select());\n                event.removed.forEach((option) => option.deselect());\n            });\n\n        this.options.changes\n            .pipe(startWith(null), takeUntil(this._destroy))\n            .subscribe(() => {\n                this._resetOptions();\n                this._initializeSelection();\n            });\n    }\n\n    ngAfterViewInit(): void {\n        this.tags.changes\n            .subscribe(() => {\n                setTimeout(() => this._calculateHiddenItems(), 0);\n            });\n    }\n\n    ngDoCheck() {\n        if (this.ngControl) { this.updateErrorState(); }\n    }\n\n    ngOnChanges(changes: SimpleChanges) {\n        // Updating the disabled state is handled by `mixinDisabled`, but we need to additionally let\n        // the parent form field know to run change detection when the disabled state changes.\n        if (changes.disabled) {\n            this.stateChanges.next();\n        }\n    }\n\n    ngOnDestroy() {\n        this._destroy.next();\n        this._destroy.complete();\n        this.stateChanges.complete();\n    }\n\n    /** `View -> model callback called when value changes` */\n    _onChange: (value: any) => void = () => {};\n\n    /** `View -> model callback called when select has been touched` */\n    _onTouched = () => {};\n\n    /** Toggles the overlay panel open or closed. */\n    toggle(): void {\n        if (this.panelOpen) {\n            this.close();\n        } else {\n            this.open();\n        }\n    }\n\n    /** Opens the overlay panel. */\n    open(): void {\n        if (this.disabled || !this.options || !this.options.length || this._panelOpen) { return; }\n\n        this._triggerRect = this.trigger.nativeElement.getBoundingClientRect();\n        // Note: The computed font-size will be a string pixel value (e.g. \"16px\").\n        // `parseInt` ignores the trailing 'px' and converts this to a number.\n        this._triggerFontSize = parseInt(getComputedStyle(this.trigger.nativeElement)['font-size']);\n\n        this._panelOpen = true;\n        this._keyManager.withHorizontalOrientation(null);\n        this._calculateOverlayPosition();\n        this._highlightCorrectOption();\n        this._changeDetectorRef.markForCheck();\n\n        // Set the font size on the panel element once it exists.\n        this._ngZone.onStable.asObservable()\n            .pipe(take(1))\n            .subscribe(() => {\n                if (this._triggerFontSize && this.overlayDir.overlayRef &&\n                    this.overlayDir.overlayRef.overlayElement) {\n                    this.overlayDir.overlayRef.overlayElement.style.fontSize = `${this._triggerFontSize}px`;\n                }\n            });\n    }\n\n    /** Closes the overlay panel and focuses the host element. */\n    close(): void {\n        if (this._panelOpen) {\n            this._panelOpen = false;\n            this._keyManager.withHorizontalOrientation(this._isRtl() ? 'rtl' : 'ltr');\n            this._changeDetectorRef.markForCheck();\n            this._onTouched();\n        }\n    }\n\n    /**\n     * Sets the select's value. Part of the ControlValueAccessor interface\n     * required to integrate with Angular's core forms API.\n     *\n     * @param value New value to be written to the model.\n     */\n    writeValue(value: any): void {\n        if (this.options) {\n            this._setSelectionByValue(value);\n        }\n    }\n\n    /**\n     * Saves a callback function to be invoked when the select's value\n     * changes from user input. Part of the ControlValueAccessor interface\n     * required to integrate with Angular's core forms API.\n     *\n     * @param fn Callback to be triggered when the value changes.\n     */\n    registerOnChange(fn: (value: any) => void): void {\n        this._onChange = fn;\n    }\n\n    /**\n     * Saves a callback function to be invoked when the select is blurred\n     * by the user. Part of the ControlValueAccessor interface required\n     * to integrate with Angular's core forms API.\n     *\n     * @param fn Callback to be triggered when the component has been touched.\n     */\n    registerOnTouched(fn: () => {}): void {\n        this._onTouched = fn;\n    }\n\n    /**\n     * Disables the select. Part of the ControlValueAccessor interface required\n     * to integrate with Angular's core forms API.\n     *\n     * @param isDisabled Sets whether the component is disabled.\n     */\n    setDisabledState(isDisabled: boolean): void {\n        this.disabled = isDisabled;\n        this._changeDetectorRef.markForCheck();\n        this.stateChanges.next();\n    }\n\n    get panelOpen(): boolean {\n        return this._panelOpen;\n    }\n\n    get selected(): McOption | McOption[] {\n        return this.multiple ? this._selectionModel.selected : this._selectionModel.selected[0];\n    }\n\n    get triggerValue(): string {\n        if (this.empty) { return ''; }\n\n        if (this._multiple) {\n            const selectedOptions = this._selectionModel.selected.map((option) => option.viewValue);\n\n            if (this._isRtl()) { selectedOptions.reverse(); }\n\n            return selectedOptions.join(', ');\n        }\n\n        return this._selectionModel.selected[0].viewValue;\n    }\n\n    get triggerValues(): McOption[] {\n        if (this.empty) { return []; }\n\n        if (this._multiple) {\n            const selectedOptions = this._selectionModel.selected;\n\n            if (this._isRtl()) { selectedOptions.reverse(); }\n\n            return selectedOptions;\n        }\n\n        return [this._selectionModel.selected[0]];\n    }\n\n    get empty(): boolean {\n        return !this._selectionModel || this._selectionModel.isEmpty();\n    }\n\n    _isRtl(): boolean {\n        return this._dir ? this._dir.value === 'rtl' : false;\n    }\n\n    _handleKeydown(event: KeyboardEvent): void {\n        if (!this.disabled) {\n            if (this.panelOpen) {\n                this._handleOpenKeydown(event);\n            } else {\n                this._handleClosedKeydown(event);\n            }\n        }\n    }\n\n    /**\n     * When the panel content is done fading in, the _panelDoneAnimating property is\n     * set so the proper class can be added to the panel.\n     */\n    _onFadeInDone(): void {\n        this._panelDoneAnimating = this.panelOpen;\n        this._changeDetectorRef.markForCheck();\n    }\n\n    _onFocus() {\n        if (!this.disabled) {\n            this._focused = true;\n            this.stateChanges.next();\n        }\n    }\n\n    /**\n     * Calls the touched callback only if the panel is closed. Otherwise, the trigger will\n     * \"blur\" to the panel when it opens, causing a false positive.\n     */\n    _onBlur() {\n        this._focused = false;\n\n        if (!this.disabled && !this.panelOpen) {\n            this._onTouched();\n            this._changeDetectorRef.markForCheck();\n            this.stateChanges.next();\n        }\n    }\n\n    /**\n     * Callback that is invoked when the overlay panel has been attached.\n     */\n    _onAttached(): void {\n        this.overlayDir.positionChange\n            .pipe(take(1))\n            .subscribe(() => {\n                this._changeDetectorRef.detectChanges();\n                this._calculateOverlayOffsetX();\n                this.panel.nativeElement.scrollTop = this._scrollTop;\n            });\n    }\n\n    /** Returns the theme to be used on the panel. */\n    _getPanelTheme(): string {\n        return this._parentFormField ? `mc-${this._parentFormField.color}` : '';\n    }\n\n    /** Focuses the select element. */\n    focus(): void {\n        this._elementRef.nativeElement.focus();\n    }\n\n    /**\n     * Calculates the scroll position of the select's overlay panel.\n     *\n     * Attempts to center the selected option in the panel. If the option is\n     * too high or too low in the panel to be scrolled to the center, it clamps the\n     * scroll position to the min or max scroll positions respectively.\n     */\n    _calculateOverlayScroll(selectedIndex: number, scrollBuffer: number, maxScroll: number): number {\n        const itemHeight = this._getItemHeight();\n        const optionOffsetFromScrollTop = itemHeight * selectedIndex;\n\n        /* tslint:disable-next-line:no-magic-numbers */\n        const halfOptionHeight = itemHeight / 2;\n\n        // Starts at the optionOffsetFromScrollTop, which scrolls the option to the top of the\n        // scroll container, then subtracts the scroll buffer to scroll the option down to\n        // the center of the overlay panel. Half the option height must be re-added to the\n        // scrollTop so the option is centered based on its middle, not its top edge.\n        const optimalScrollPosition = optionOffsetFromScrollTop - scrollBuffer + halfOptionHeight;\n\n        return Math.min(Math.max(0, optimalScrollPosition), maxScroll);\n    }\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    onContainerClick() {\n        this.focus();\n        this.open();\n    }\n\n    /** Invoked when an option is clicked. */\n    onRemoveMatcherItem(option: McOption, $event): void {\n        $event.stopPropagation();\n\n        option.deselect();\n    }\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    get shouldLabelFloat(): boolean {\n        return this._panelOpen || !this.empty;\n    }\n\n    _calculateHiddenItems(): void {\n        if (this.empty) { return; }\n\n        let visibleItems: number = 0;\n        const totalItemsWidth = this._getTotalItemsWidthInMatcher();\n        let totalVisibleItemsWidth: number = 0;\n        const itemMargin: number = 4;\n\n        this.tags.forEach((tag) => {\n            if (tag.nativeElement.offsetTop < tag.nativeElement.offsetHeight) {\n                totalVisibleItemsWidth += tag.nativeElement.getBoundingClientRect().width + itemMargin;\n                visibleItems++;\n            }\n        });\n\n        this.hiddenItems = (this.selected as ArrayLike<McOption>).length - visibleItems;\n\n        if (this.hiddenItems) {\n            const itemsCounter = this.trigger.nativeElement.querySelector('.mc-select__match-hidden-text');\n            const matcherList = this.trigger.nativeElement.querySelector('.mc-select__match-list');\n\n            const itemsCounterShowed = itemsCounter.offsetTop < itemsCounter.offsetHeight;\n            // const itemsCounterWidth: number = itemsCounter.getBoundingClientRect().width;\n            const itemsCounterWidth: number = 86;\n\n            const matcherListWidth: number = matcherList.getBoundingClientRect().width;\n            const matcherWidth: number = matcherListWidth + itemsCounterWidth;\n\n            if (itemsCounterShowed && (totalItemsWidth < matcherWidth)) { this.hiddenItems = 0; }\n\n            if (\n                totalVisibleItemsWidth === matcherListWidth ||\n                (totalVisibleItemsWidth + itemsCounterWidth) < matcherListWidth\n            ) {\n                this._changeDetectorRef.markForCheck();\n\n                return ;\n            } else if (!itemsCounterShowed && (totalItemsWidth + itemsCounterWidth) > matcherWidth) {\n                this.hiddenItems++;\n            }\n        }\n\n        this._changeDetectorRef.markForCheck();\n    }\n\n    private _getTotalItemsWidthInMatcher(): number {\n        const triggerClone = this.trigger.nativeElement.cloneNode(true);\n        triggerClone.querySelector('.mc-select__match-hidden-text').remove();\n\n        this._renderer.setStyle(triggerClone, 'position', 'absolute');\n        this._renderer.setStyle(triggerClone, 'visibility', 'hidden');\n        this._renderer.setStyle(triggerClone, 'top', '-100%');\n        this._renderer.setStyle(triggerClone, 'left', '0');\n\n        this._renderer.appendChild(this.trigger.nativeElement, triggerClone);\n\n        let totalItemsWidth: number = 0;\n        const itemMargin: number = 4;\n        triggerClone.querySelectorAll('mc-tag').forEach((item) => {\n            totalItemsWidth += item.getBoundingClientRect().width as number + itemMargin;\n        });\n\n        triggerClone.remove();\n\n        return totalItemsWidth;\n    }\n\n    /** Handles keyboard events while the select is closed. */\n    private _handleClosedKeydown(event: KeyboardEvent): void {\n        /* tslint:disable-next-line */\n        const keyCode = event.keyCode;\n        const isArrowKey = keyCode === DOWN_ARROW || keyCode === UP_ARROW ||\n            keyCode === LEFT_ARROW || keyCode === RIGHT_ARROW;\n        const isOpenKey = keyCode === ENTER || keyCode === SPACE;\n\n        // Open the select on ALT + arrow key to match the native <select>\n        if (isOpenKey || ((this.multiple || event.altKey) && isArrowKey)) {\n            event.preventDefault(); // prevents the page from scrolling down when pressing space\n            this.open();\n        } else if (!this.multiple) {\n            this._keyManager.onKeydown(event);\n        }\n    }\n\n    /** Handles keyboard events when the selected is open. */\n    private _handleOpenKeydown(event: KeyboardEvent): void {\n        /* tslint:disable-next-line */\n        const keyCode = event.keyCode;\n        const isArrowKey = keyCode === DOWN_ARROW || keyCode === UP_ARROW;\n        const manager = this._keyManager;\n\n        if (keyCode === HOME || keyCode === END) {\n            event.preventDefault();\n\n            if (keyCode === HOME) {\n                manager.setFirstItemActive();\n            } else {\n                manager.setLastItemActive();\n            }\n\n        } else if (isArrowKey && event.altKey) {\n            // Close the select on ALT + arrow key to match the native <select>\n            event.preventDefault();\n            this.close();\n        } else if ((keyCode === ENTER || keyCode === SPACE) && manager.activeItem) {\n            event.preventDefault();\n            manager.activeItem._selectViaInteraction();\n        } else if (this._multiple && keyCode === A && event.ctrlKey) {\n            event.preventDefault();\n            const hasDeselectedOptions = this.options.some((option) => !option.selected);\n            this.options.forEach((option) => {\n                if (hasDeselectedOptions && !option.disabled) {\n                    option.select();\n                } else {\n                    option.deselect();\n                }\n            });\n        } else {\n            const previouslyFocusedIndex = manager.activeItemIndex;\n\n            manager.onKeydown(event);\n\n            if (this._multiple && isArrowKey && event.shiftKey && manager.activeItem &&\n                manager.activeItemIndex !== previouslyFocusedIndex) {\n                manager.activeItem._selectViaInteraction();\n            }\n        }\n    }\n\n    private _initializeSelection(): void {\n        // Defer setting the value in order to avoid the \"Expression\n        // has changed after it was checked\" errors from Angular.\n        Promise.resolve().then(() => {\n            this._setSelectionByValue(this.ngControl ? this.ngControl.value : this._value);\n        });\n    }\n\n    /**\n     * Sets the selected option based on a value. If no option can be\n     * found with the designated value, the select trigger is cleared.\n     */\n    private _setSelectionByValue(value: any | any[]): void {\n        if (this.multiple && value) {\n            if (!Array.isArray(value)) {\n                throw getMcSelectNonArrayValueError();\n            }\n\n            this._selectionModel.clear();\n            value.forEach((currentValue: any) => this._selectValue(currentValue));\n            this._sortValues();\n        } else {\n            this._selectionModel.clear();\n            const correspondingOption = this._selectValue(value);\n\n            // Shift focus to the active item. Note that we shouldn't do this in multiple\n            // mode, because we don't know what option the user interacted with last.\n            if (correspondingOption) {\n                this._keyManager.setActiveItem(correspondingOption);\n            }\n        }\n\n        this._changeDetectorRef.markForCheck();\n    }\n\n    /**\n     * Finds and selects and option based on its value.\n     * @returns Option that has the corresponding value.\n     */\n    private _selectValue(value: any): McOption | undefined {\n        const correspondingOption = this.options.find((option: McOption) => {\n            try {\n                // Treat null as a special reset value.\n                return option.value != null && this._compareWith(option.value, value);\n            } catch (error) {\n                if (isDevMode()) {\n                    // Notify developers of errors in their comparator.\n                    console.warn(error);\n                }\n\n                return false;\n            }\n        });\n\n        if (correspondingOption) {\n            this._selectionModel.select(correspondingOption);\n        }\n\n        return correspondingOption;\n    }\n\n    /** Sets up a key manager to listen to keyboard events on the overlay panel. */\n    private _initKeyManager() {\n        this._keyManager = new ActiveDescendantKeyManager<McOption>(this.options)\n            .withTypeAhead()\n            .withVerticalOrientation()\n            .withHorizontalOrientation(this._isRtl() ? 'rtl' : 'ltr');\n\n        this._keyManager.tabOut\n            .pipe(takeUntil(this._destroy))\n            .subscribe(() => {\n                // Restore focus to the trigger before closing. Ensures that the focus\n                // position won't be lost if the user got focus into the overlay.\n                this.focus();\n                this.close();\n            });\n\n        this._keyManager.change\n            .pipe(takeUntil(this._destroy))\n            .subscribe(() => {\n                if (this._panelOpen && this.panel) {\n                    this._scrollActiveOptionIntoView();\n                } else if (!this._panelOpen && !this.multiple && this._keyManager.activeItem) {\n                    this._keyManager.activeItem._selectViaInteraction();\n                }\n            });\n    }\n\n    /** Drops current option subscriptions and IDs and resets from scratch. */\n    private _resetOptions(): void {\n        const changedOrDestroyed = merge(this.options.changes, this._destroy);\n\n        this.optionSelectionChanges\n            .pipe(takeUntil(changedOrDestroyed))\n            .subscribe((event) => {\n                this._onSelect(event.source, event.isUserInput);\n\n                if (event.isUserInput && !this.multiple && this._panelOpen) {\n                    this.close();\n                    this.focus();\n                }\n            });\n\n        // Listen to changes in the internal state of the options and react accordingly.\n        // Handles cases like the labels of the selected options changing.\n        merge(...this.options.map((option) => option._stateChanges))\n            .pipe(takeUntil(changedOrDestroyed))\n            .subscribe(() => {\n                this._changeDetectorRef.markForCheck();\n                this.stateChanges.next();\n            });\n\n        this._setOptionIds();\n    }\n\n    /** Invoked when an option is clicked. */\n    private _onSelect(option: McOption, isUserInput: boolean): void {\n        const wasSelected = this._selectionModel.isSelected(option);\n\n        if (option.value == null && !this._multiple) {\n            option.deselect();\n            this._selectionModel.clear();\n            this._propagateChanges(option.value);\n        } else {\n            if (option.selected) {\n                this._selectionModel.select(option);\n            } else {\n                this._selectionModel.deselect(option);\n            }\n\n            if (isUserInput) {\n                this._keyManager.setActiveItem(option);\n            }\n\n            if (this.multiple) {\n                this._sortValues();\n\n                if (isUserInput) {\n                    // In case the user selected the option with their mouse, we\n                    // want to restore focus back to the trigger, in order to\n                    // prevent the select keyboard controls from clashing with\n                    // the ones from `mc-option`.\n                    this.focus();\n                }\n            }\n        }\n\n        if (wasSelected !== this._selectionModel.isSelected(option)) {\n            this._propagateChanges();\n        }\n\n        this.stateChanges.next();\n    }\n\n    /** Sorts the selected values in the selected based on their order in the panel. */\n    private _sortValues() {\n        if (this.multiple) {\n            const options = this.options.toArray();\n\n            this._selectionModel.sort((a, b) => {\n                return this.sortComparator ? this.sortComparator(a, b, options) :\n                    options.indexOf(a) - options.indexOf(b);\n            });\n            this.stateChanges.next();\n        }\n    }\n\n    /** Emits change event to set the model value. */\n    private _propagateChanges(fallbackValue?: any): void {\n        let valueToEmit: any = null;\n\n        if (this.multiple) {\n            valueToEmit = (this.selected as McOption[]).map((option) => option.value);\n        } else {\n            valueToEmit = this.selected ? (this.selected as McOption).value : fallbackValue;\n        }\n\n        this._value = valueToEmit;\n        this.valueChange.emit(valueToEmit);\n        this._onChange(valueToEmit);\n        this.selectionChange.emit(new McSelectChange(this, valueToEmit));\n        this._changeDetectorRef.markForCheck();\n    }\n\n    /** Records option IDs to pass to the aria-owns property. */\n    private _setOptionIds() {\n        this._optionIds = this.options.map((option) => option.id).join(' ');\n    }\n\n    /**\n     * Highlights the selected item. If no option is selected, it will highlight\n     * the first item instead.\n     */\n    private _highlightCorrectOption(): void {\n        if (this._keyManager) {\n            if (this.empty) {\n                this._keyManager.setFirstItemActive();\n            } else {\n                this._keyManager.setActiveItem(this._selectionModel.selected[0]);\n            }\n        }\n    }\n\n    /** Scrolls the active option into view. */\n    private _scrollActiveOptionIntoView(): void {\n        const activeOptionIndex = this._keyManager.activeItemIndex || 0;\n        const labelCount = _countGroupLabelsBeforeOption(activeOptionIndex, this.options, this.optionGroups);\n\n        this.panel.nativeElement.scrollTop = _getOptionScrollPosition(\n            activeOptionIndex + labelCount,\n            this._getItemHeight(),\n            this.panel.nativeElement.scrollTop,\n            SELECT_PANEL_MAX_HEIGHT\n        );\n    }\n\n    /** Gets the index of the provided option in the option list. */\n    private _getOptionIndex(option: McOption): number | undefined {\n        /* tslint:disable-next-line */\n        return this.options.reduce((result: number, current: McOption, index: number) => {\n            /* tslint:disable-next-line:strict-type-predicates */\n            return result === undefined ? (option === current ? index : undefined) : result;\n        }, undefined);\n    }\n\n    /** Calculates the scroll position and x- and y-offsets of the overlay panel. */\n    private _calculateOverlayPosition(): void {\n        const itemHeight = this._getItemHeight();\n        const items = this._getItemCount();\n        const panelHeight = Math.min(items * itemHeight, SELECT_PANEL_MAX_HEIGHT);\n        const scrollContainerHeight = items * itemHeight;\n\n        // The farthest the panel can be scrolled before it hits the bottom\n        const maxScroll = scrollContainerHeight - panelHeight;\n\n        // If no value is selected we open the popup to the first item.\n        let selectedOptionOffset =\n            this.empty ? 0 : this._getOptionIndex(this._selectionModel.selected[0])!;\n\n        selectedOptionOffset += _countGroupLabelsBeforeOption(selectedOptionOffset, this.options,\n            this.optionGroups);\n\n        // We must maintain a scroll buffer so the selected option will be scrolled to the\n        // center of the overlay panel rather than the top.\n        /* tslint:disable-next-line:no-magic-numbers */\n        const scrollBuffer = panelHeight / 2;\n        this._scrollTop = this._calculateOverlayScroll(selectedOptionOffset, scrollBuffer, maxScroll);\n        this._offsetY = this._calculateOverlayOffsetY();\n\n        this._checkOverlayWithinViewport(maxScroll);\n    }\n\n    /**\n     * Sets the x-offset of the overlay panel in relation to the trigger's top start corner.\n     * This must be adjusted to align the selected option text over the trigger text when\n     * the panel opens. Will change based on LTR or RTL text direction. Note that the offset\n     * can't be calculated until the panel has been attached, because we need to know the\n     * content width in order to constrain the panel within the viewport.\n     */\n    private _calculateOverlayOffsetX(): void {\n        const overlayRect = this.overlayDir.overlayRef.overlayElement.getBoundingClientRect();\n        const viewportSize = this._viewportRuler.getViewportSize();\n        const isRtl = this._isRtl();\n        /* tslint:disable-next-line:no-magic-numbers */\n        const paddingWidth = SELECT_PANEL_PADDING_X * 2;\n        let offsetX: number;\n\n        const selected = this._selectionModel.selected[0] || this.options.first;\n        offsetX = selected && selected.group ? SELECT_PANEL_INDENT_PADDING_X : SELECT_PANEL_PADDING_X;\n\n        // Invert the offset in LTR.\n        if (!isRtl) { offsetX *= -1; }\n\n        // Determine how much the select overflows on each side.\n        const leftOverflow = 0 - (overlayRect.left + offsetX - (isRtl ? paddingWidth : 0));\n        const rightOverflow = overlayRect.right + offsetX - viewportSize.width\n            + (isRtl ? 0 : paddingWidth);\n\n        // If the element overflows on either side, reduce the offset to allow it to fit.\n        if (leftOverflow > 0) {\n            offsetX += leftOverflow + SELECT_PANEL_VIEWPORT_PADDING;\n        } else if (rightOverflow > 0) {\n            offsetX -= rightOverflow + SELECT_PANEL_VIEWPORT_PADDING;\n        }\n\n        // Set the offset directly in order to avoid having to go through change detection and\n        // potentially triggering \"changed after it was checked\" errors. Round the value to avoid\n        // blurry content in some browsers.\n        this.overlayDir.offsetX = Math.round(offsetX);\n        this.overlayDir.overlayRef.updatePosition();\n    }\n\n    /**\n     * Calculates the y-offset of the select's overlay panel in relation to the\n     * top start corner of the trigger. It has to be adjusted in order for the\n     * selected option to be aligned over the trigger when the panel opens.\n     */\n    private _calculateOverlayOffsetY(): number {\n        // const itemHeight = this._getItemHeight();\n        // const optionHeightAdjustment = (itemHeight - this._triggerRect.height) / 2;\n\n        // todo I'm not sure that we will use it\n        return 0;\n        // return Math.round(-optionHeightAdjustment);\n    }\n\n    /**\n     * Checks that the attempted overlay position will fit within the viewport.\n     * If it will not fit, tries to adjust the scroll position and the associated\n     * y-offset so the panel can open fully on-screen. If it still won't fit,\n     * sets the offset back to 0 to allow the fallback position to take over.\n     */\n    private _checkOverlayWithinViewport(maxScroll: number): void {\n        const itemHeight = this._getItemHeight();\n        const viewportSize = this._viewportRuler.getViewportSize();\n\n        const topSpaceAvailable = this._triggerRect.top - SELECT_PANEL_VIEWPORT_PADDING;\n        const bottomSpaceAvailable =\n            viewportSize.height - this._triggerRect.bottom - SELECT_PANEL_VIEWPORT_PADDING;\n\n        const panelHeightTop = Math.abs(this._offsetY);\n        const totalPanelHeight =\n            Math.min(this._getItemCount() * itemHeight, SELECT_PANEL_MAX_HEIGHT);\n        const panelHeightBottom = totalPanelHeight - panelHeightTop - this._triggerRect.height;\n\n        if (panelHeightBottom > bottomSpaceAvailable) {\n            this._adjustPanelUp(panelHeightBottom, bottomSpaceAvailable);\n        } else if (panelHeightTop > topSpaceAvailable) {\n            this._adjustPanelDown(panelHeightTop, topSpaceAvailable, maxScroll);\n        } else {\n            this._transformOrigin = this._getOriginBasedOnOption();\n        }\n    }\n\n    /** Adjusts the overlay panel up to fit in the viewport. */\n    private _adjustPanelUp(panelHeightBottom: number, bottomSpaceAvailable: number) {\n        // Browsers ignore fractional scroll offsets, so we need to round.\n        const distanceBelowViewport = Math.round(panelHeightBottom - bottomSpaceAvailable);\n\n        // Scrolls the panel up by the distance it was extending past the boundary, then\n        // adjusts the offset by that amount to move the panel up into the viewport.\n        this._scrollTop -= distanceBelowViewport;\n        this._offsetY -= distanceBelowViewport;\n        this._transformOrigin = this._getOriginBasedOnOption();\n\n        // If the panel is scrolled to the very top, it won't be able to fit the panel\n        // by scrolling, so set the offset to 0 to allow the fallback position to take\n        // effect.\n        if (this._scrollTop <= 0) {\n            this._scrollTop = 0;\n            this._offsetY = 0;\n            this._transformOrigin = `50% bottom 0px`;\n        }\n    }\n\n    /** Adjusts the overlay panel down to fit in the viewport. */\n    private _adjustPanelDown(panelHeightTop: number, topSpaceAvailable: number, maxScroll: number) {\n        // Browsers ignore fractional scroll offsets, so we need to round.\n        const distanceAboveViewport = Math.round(panelHeightTop - topSpaceAvailable);\n\n        // Scrolls the panel down by the distance it was extending past the boundary, then\n        // adjusts the offset by that amount to move the panel down into the viewport.\n        this._scrollTop += distanceAboveViewport;\n        this._offsetY += distanceAboveViewport;\n        this._transformOrigin = this._getOriginBasedOnOption();\n\n        // If the panel is scrolled to the very bottom, it won't be able to fit the\n        // panel by scrolling, so set the offset to 0 to allow the fallback position\n        // to take effect.\n        if (this._scrollTop >= maxScroll) {\n            this._scrollTop = maxScroll;\n            this._offsetY = 0;\n            this._transformOrigin = `50% top 0px`;\n\n            return;\n        }\n    }\n\n    /** Sets the transform origin point based on the selected option. */\n    private _getOriginBasedOnOption(): string {\n        const itemHeight = this._getItemHeight();\n        /* tslint:disable-next-line:no-magic-numbers */\n        const optionHeightAdjustment = (itemHeight - this._triggerRect.height) / 2;\n        /* tslint:disable-next-line:no-magic-numbers */\n        const originY = Math.abs(this._offsetY) - optionHeightAdjustment + itemHeight / 2;\n\n        return `50% ${originY}px 0px`;\n    }\n\n    /** Calculates the amount of items in the select. This includes options and group labels. */\n    private _getItemCount(): number {\n        return this.options.length + this.optionGroups.length;\n    }\n\n    /** Calculates the height of the select's options. */\n    private _getItemHeight(): number {\n        /* tslint:disable-next-line:no-magic-numbers */\n        return 32;\n        // return this._triggerFontSize * SELECT_ITEM_HEIGHT_EM;\n    }\n\n    /** Comparison function to specify which option is displayed. Defaults to object equality. */\n    private _compareWith = (o1: any, o2: any) => o1 === o2;\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { OverlayModule } from '@ptsecurity/cdk/overlay';\nimport { McOptionModule } from '@ptsecurity/mosaic/core';\nimport { McFormFieldModule } from '@ptsecurity/mosaic/form-field';\nimport { McIconModule } from '@ptsecurity/mosaic/icon';\nimport { McTagModule } from '@ptsecurity/mosaic/tag';\n\nimport { MC_SELECT_SCROLL_STRATEGY_PROVIDER, McSelect, McSelectTrigger } from './select.component';\n\n\n@NgModule({\n    imports: [\n        CommonModule,\n        OverlayModule,\n        McOptionModule,\n        McIconModule,\n        McTagModule\n    ],\n    exports: [McFormFieldModule, McSelect, McSelectTrigger, McOptionModule, CommonModule],\n    declarations: [McSelect, McSelectTrigger],\n    providers: [MC_SELECT_SCROLL_STRATEGY_PROVIDER]\n})\nexport class McSelectModule {}\n","import {\n    ChangeDetectionStrategy,\n    Component,\n    Directive,\n    ElementRef,\n    Input,\n    NgZone, OnDestroy,\n    OnInit,\n    Renderer2,\n    ViewEncapsulation\n} from '@angular/core';\n\nimport { coerceBooleanProperty, coerceCssPixelValue, coerceNumberProperty } from '@ptsecurity/cdk/coercion';\n\n\ninterface IArea {\n    area: McSplitterAreaDirective;\n    index: number;\n    order: number;\n    initialSize: number;\n}\n\ninterface IPoint {\n    x: number;\n    y: number;\n}\n\n\nconst enum AttributeProperty {\n    Disabled = 'disabled'\n}\n\nconst enum Cursor {\n    Default = 'default',\n    ResizeColumn = 'col-resize',\n    ResizeRow = 'row-resize'\n}\n\nconst enum StyleProperty {\n    Cursor = 'cursor',\n    Flex = 'flex',\n    FlexBasis = 'flex-basis',\n    FlexDirection = 'flex-direction',\n    Height = 'height',\n    MaxWidth = 'max-width',\n    MinHeight = 'min-height',\n    MinWidth = 'minWidth',\n    OffsetHeight = 'offsetHeight',\n    OffsetWidth = 'offsetWidth',\n    Order = 'order',\n    Width = 'width'\n}\n\nconst enum State {\n    Disabled = 'disabled',\n    Horizontal = 'horizontal',\n    Vertical = 'vertical'\n}\n\nexport const enum Direction {\n    Horizontal = 'horizontal',\n    Vertical = 'vertical'\n}\n\n@Component({\n    selector: 'mc-splitter',\n    preserveWhitespaces: false,\n    styleUrls: ['splitter.css'],\n    templateUrl: './splitter.component.html',\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class McSplitterComponent implements OnInit {\n    readonly areas: IArea[] = [];\n\n    private _direction: Direction;\n    private _disabled: boolean = false;\n    private _gutterSize: number = 6;\n\n    private isDragging: boolean = false;\n\n    private readonly areaPositionDivider: number = 2;\n    private readonly listeners: (() => void)[] = [];\n\n    @Input()\n    set direction(direction: Direction) {\n        this._direction = direction;\n    }\n\n    get direction(): Direction {\n        return this._direction;\n    }\n\n    @Input()\n    set disabled(disabled: boolean) {\n        this._disabled = coerceBooleanProperty(disabled);\n    }\n\n    get disabled(): boolean {\n        return this._disabled;\n    }\n\n    @Input()\n    set gutterSize(gutterSize: number) {\n        const size = coerceNumberProperty(gutterSize);\n        this._gutterSize = size > 0 ? size : this.gutterSize;\n    }\n\n    get gutterSize(): number {\n        return this._gutterSize;\n    }\n\n    constructor(private elementRef: ElementRef,\n                private ngZone: NgZone,\n                private renderer: Renderer2) {}\n\n    addArea(area: McSplitterAreaDirective): void {\n        const index: number = this.areas.length;\n        const order: number = index * this.areaPositionDivider;\n        const size: number = area.getSize();\n\n        area.setOrder(order);\n\n        this.areas.push({\n            area,\n            index,\n            order,\n            initialSize: size\n        });\n    }\n\n    ngOnInit(): void {\n        if (!this.direction) {\n            this.direction = Direction.Horizontal;\n        }\n\n        this.setStyle(StyleProperty.FlexDirection, this.isVertical() ? 'column' : 'row');\n    }\n\n    onMouseDown(event: MouseEvent, leftAreaIndex: number, rightAreaIndex: number) {\n        if (this.disabled) {\n            return;\n        }\n\n        const leftArea = this.areas[leftAreaIndex];\n        const rightArea = this.areas[rightAreaIndex];\n\n        const startPoint: IPoint = {\n            x: event.screenX,\n            y: event.screenY\n        };\n\n        leftArea.initialSize = leftArea.area.getSize();\n        rightArea.initialSize = rightArea.area.getSize();\n\n        this.areas.forEach((item) => {\n            const size = item.area.getSize();\n            item.area.disableFlex();\n            item.area.setSize(size);\n        });\n\n        this.ngZone.runOutsideAngular(() => {\n            this.listeners.push(\n                this.renderer.listen(\n                    'document',\n                    'mouseup',\n                    () => this.onMouseUp()\n                )\n            );\n        });\n\n        this.ngZone.runOutsideAngular(() => {\n            this.listeners.push(\n                this.renderer.listen(\n                    'document',\n                    'mousemove',\n                    (e: MouseEvent) => this.onMouseMove(e, startPoint, leftArea, rightArea)\n                )\n            );\n        });\n\n        this.isDragging = true;\n    }\n\n    removeArea(area: McSplitterAreaDirective): void {\n        let indexToRemove: number = -1;\n\n        this.areas.some((item, index) => {\n            if (item.area === area) {\n                indexToRemove = index;\n\n                return true;\n            }\n\n            return false;\n        });\n\n        if (indexToRemove === -1) {\n            return;\n        }\n\n        this.areas.splice(indexToRemove, 1);\n    }\n\n    private isVertical(): boolean {\n        return this.direction === Direction.Vertical;\n    }\n\n    private onMouseMove(event: MouseEvent, startPoint: IPoint, leftArea: IArea, rightArea: IArea) {\n        if (!this.isDragging || this.disabled) {\n            return;\n        }\n\n        const endPoint: IPoint = {\n            x: event.screenX,\n            y: event.screenY\n        };\n\n        const offset = this.isVertical()\n            ? startPoint.y - endPoint.y\n            : startPoint.x - endPoint.x;\n\n        const newLeftAreaSize = leftArea.initialSize - offset;\n        const newRightAreaSize = rightArea.initialSize + offset;\n\n        const minLeftAreaSize = leftArea.area.getMinSize();\n        const minRightAreaSize = rightArea.area.getMinSize();\n\n        if (newLeftAreaSize <= minLeftAreaSize || newRightAreaSize <= minRightAreaSize) {\n            const rightAreaOffset = leftArea.initialSize - minLeftAreaSize;\n\n            leftArea.area.setSize(minLeftAreaSize);\n            rightArea.area.setSize(rightArea.initialSize + rightAreaOffset);\n        } else if (newLeftAreaSize <= 0) {\n            leftArea.area.setSize(0);\n            rightArea.area.setSize(rightArea.initialSize + leftArea.initialSize);\n        } else if (newRightAreaSize <= 0) {\n            leftArea.area.setSize(rightArea.initialSize + leftArea.initialSize);\n            rightArea.area.setSize(0);\n        } else {\n            leftArea.area.setSize(newLeftAreaSize);\n            rightArea.area.setSize(newRightAreaSize);\n        }\n    }\n\n    private onMouseUp() {\n        while (this.listeners.length > 0) {\n            const unsubscribe = this.listeners.pop();\n\n            if (unsubscribe) {\n                unsubscribe();\n            }\n        }\n\n        this.isDragging = false;\n    }\n\n    private setStyle(property: StyleProperty, value: string | number) {\n        this.renderer.setStyle(this.elementRef.nativeElement, property, value);\n    }\n}\n\n@Directive({\n    selector: 'mc-gutter'\n})\nexport class McGutterDirective implements OnInit {\n    private _direction: Direction = Direction.Vertical;\n    private _disabled: boolean = false;\n    private _order: number = 0;\n    private _size: number = 6;\n\n    @Input()\n    set direction(direction: Direction) {\n        this._direction = direction;\n    }\n\n    get direction(): Direction {\n        return this._direction;\n    }\n\n    @Input()\n    set disabled(disabled: boolean) {\n        this._disabled = coerceBooleanProperty(disabled);\n    }\n\n    get disabled(): boolean {\n        return this._disabled;\n    }\n\n    @Input()\n    set order(order: number) {\n        this._order = coerceNumberProperty(order);\n    }\n\n    get order(): number {\n        return this._order;\n    }\n\n    @Input()\n    set size(size: number) {\n        this._size = coerceNumberProperty(size);\n    }\n\n    get size(): number {\n        return this._size;\n    }\n\n    constructor(private renderer: Renderer2,\n                private elementRef: ElementRef) {\n    }\n\n    ngOnInit(): void {\n        this.setStyle(StyleProperty.Cursor, this.getCursor(this.getState()));\n        this.setStyle(StyleProperty.FlexBasis, coerceCssPixelValue(this.size));\n        this.setStyle(this.isVertical() ? StyleProperty.Height : StyleProperty.Width, coerceCssPixelValue(this.size));\n        this.setStyle(StyleProperty.Order, this.order);\n\n        if (!this.isVertical()) {\n            this.setStyle(StyleProperty.Height, '100%');\n        }\n\n        if (this.disabled) {\n            this.setAttr(AttributeProperty.Disabled, 'true');\n        }\n\n        // fix IE issue with gutter icon. flex-direction is requied for flex alignment options\n        this.setStyle(StyleProperty.FlexDirection, this.isVertical() ? 'row' : 'column');\n    }\n\n    private isVertical(): boolean {\n        return this.direction === Direction.Vertical;\n    }\n\n    private getCursor(state: State): string {\n        switch (state) {\n            case State.Disabled:\n                return Cursor.Default;\n            case State.Vertical:\n                return  Cursor.ResizeRow;\n            case State.Horizontal:\n                return Cursor.ResizeColumn;\n            default:\n                throw Error(`Unknown gutter state for cursor: ${state}`);\n        }\n    }\n\n    private getState(): State {\n        return this.disabled\n            ? State.Disabled\n            : this.direction === Direction.Vertical\n                ? State.Vertical\n                : State.Horizontal;\n    }\n\n    private setStyle(property: StyleProperty, value: string | number) {\n        this.renderer.setStyle(this.elementRef.nativeElement, property, value);\n    }\n\n    private setAttr(attribute: AttributeProperty, value: string) {\n        this.renderer.setAttribute(this.elementRef.nativeElement, attribute, value);\n    }\n}\n\n@Directive({\n    selector: 'mc-splitter-area'\n})\nexport class McSplitterAreaDirective implements OnInit, OnDestroy {\n    constructor(private elementRef: ElementRef,\n                private renderer: Renderer2,\n                private splitter: McSplitterComponent) {}\n\n    disableFlex(): void {\n        this.renderer.removeStyle(this.elementRef.nativeElement, 'flex');\n    }\n\n    ngOnInit(): void {\n        this.splitter.addArea(this);\n\n        this.removeStyle(StyleProperty.MaxWidth);\n        this.setStyle(StyleProperty.Flex, '1');\n\n        if (this.splitter.direction === Direction.Vertical) {\n            this.setStyle(StyleProperty.Width, '100%');\n            this.removeStyle(StyleProperty.Height);\n        } else {\n            this.setStyle(StyleProperty.Height, '100%');\n            this.removeStyle(StyleProperty.Width);\n        }\n    }\n\n    ngOnDestroy(): void {\n        this.splitter.removeArea(this);\n    }\n\n    setOrder(order: number): void {\n        this.setStyle(StyleProperty.Order, order);\n    }\n\n    setSize(size: number): void {\n        const sz = coerceNumberProperty(size);\n        this.setStyle(this.getSizeProperty(), coerceCssPixelValue(sz));\n    }\n\n    getSize(): number {\n        return this.elementRef.nativeElement[this.getOffsetSizeProperty()];\n    }\n\n    getMinSize(): number {\n        const styles = getComputedStyle(this.elementRef.nativeElement);\n\n        return parseFloat(styles[this.getMinSizeProperty()]);\n    }\n\n    private isVertical(): boolean {\n        return this.splitter.direction === Direction.Vertical;\n    }\n\n    private getMinSizeProperty(): StyleProperty {\n        return this.isVertical()\n            ? StyleProperty.MinHeight\n            : StyleProperty.MinWidth;\n    }\n\n    private getOffsetSizeProperty(): StyleProperty {\n        return this.isVertical()\n            ? StyleProperty.OffsetHeight\n            : StyleProperty.OffsetWidth;\n    }\n\n    private getSizeProperty(): StyleProperty {\n        return this.isVertical()\n            ? StyleProperty.Height\n            : StyleProperty.Width;\n    }\n\n    private setStyle(style: StyleProperty, value: string | number) {\n        this.renderer.setStyle(this.elementRef.nativeElement, style, value);\n    }\n\n    private removeStyle(style: StyleProperty) {\n        this.renderer.removeStyle(this.elementRef.nativeElement, style);\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { McIconModule } from '@ptsecurity/mosaic/icon';\n\nimport { McGutterDirective, McSplitterAreaDirective, McSplitterComponent } from './splitter.component';\n\n\n@NgModule({\n    imports: [\n        CommonModule,\n        McIconModule\n    ],\n    exports: [\n        McGutterDirective,\n        McSplitterAreaDirective,\n        McSplitterComponent\n    ],\n    declarations: [\n        McGutterDirective,\n        McSplitterAreaDirective,\n        McSplitterComponent\n    ]\n})\nexport class McSplitterModule {\n}\n","import { animate, state, style, transition, trigger } from '@angular/animations';\nimport {\n    Attribute,\n    ChangeDetectionStrategy, ChangeDetectorRef,\n    Component,\n    ElementRef, EventEmitter, forwardRef,\n    Input, Output, ViewChild,\n    ViewEncapsulation\n} from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { FocusMonitor } from '@ptsecurity/cdk/a11y';\nimport {\n    ThemePalette,\n    CanColor, CanColorCtor,\n    CanDisable, CanDisableCtor,\n    HasTabIndex, HasTabIndexCtor,\n    mixinColor,\n    mixinDisabled,\n    mixinTabIndex\n} from '@ptsecurity/mosaic/core';\n\n\nlet nextUniqueId = 0;\n\ntype ToggleLabelPositionType = 'left' | 'right';\n\nexport class McToggleBase {\n    constructor(public _elementRef: ElementRef) {}\n}\n\nexport const _McToggleMixinBase:\n    HasTabIndexCtor &\n    CanDisableCtor &\n    CanColorCtor &\n    typeof McToggleBase = mixinTabIndex(mixinColor(mixinDisabled(McToggleBase), ThemePalette.Primary));\n\nexport class McToggleChange {\n    source: McToggleComponent;\n    checked: boolean;\n}\n\n@Component({\n    selector: 'mc-toggle',\n    exportAs: 'mcToggle',\n    templateUrl: './toggle.component.html',\n    styleUrls: ['./toggle.css'],\n    providers: [\n        {provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => McToggleComponent), multi: true}\n    ],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n    inputs: ['disabled', 'color', 'tabIndex'],\n    host: {\n        class: 'mc-toggle',\n        '[id]': 'id',\n        '[attr.id]': 'id',\n        '[class.mc-disabled]': 'disabled',\n        '[class.mc-toggle_off]': '!checked'\n    },\n    animations: [\n        trigger('switch', [\n            state('true' , style({ left: '50%' })),\n            state('false', style({ left: '1px' })),\n            transition('true <=> false', animate('150ms'))\n        ])\n    ]\n})\nexport class McToggleComponent extends _McToggleMixinBase\n    implements ControlValueAccessor, CanColor, CanDisable, HasTabIndex {\n\n    @ViewChild('input') _inputElement: ElementRef;\n\n    @Input() labelPosition: ToggleLabelPositionType = 'right';\n\n    @Input('aria-label') ariaLabel: string = '';\n    @Input('aria-labelledby') ariaLabelledby: string | null = null;\n\n    private _uniqueId: string = `mc-toggle-${++nextUniqueId}`;\n\n    // tslint:disable:member-ordering\n    @Input() id: string = this._uniqueId;\n\n    get inputId(): string {\n        return `${this.id || this._uniqueId}-input`;\n    }\n\n    @Input() name: string | null = null;\n\n    @Input() value: string;\n\n    private _disabled: boolean = false;\n\n    @Input()\n    get disabled() {\n        return this._disabled;\n    }\n\n    set disabled(value: any) {\n        if (value !== this._disabled) {\n            this._disabled = value;\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n\n    private _checked: boolean = false;\n\n    get checked() {\n        return this._checked;\n    }\n\n    @Input()\n    set checked(value: boolean) {\n        if (value !== this._checked) {\n            this._checked = value;\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n\n    @Output() readonly change: EventEmitter<McToggleChange> =\n        new EventEmitter<McToggleChange>();\n\n    constructor(public _elementRef: ElementRef,\n                private _focusMonitor: FocusMonitor,\n                private _changeDetectorRef: ChangeDetectorRef,\n                @Attribute('tabindex') tabIndex: string\n    ) {\n        super(_elementRef);\n\n        this.tabIndex = parseInt(tabIndex) || 0;\n\n        this._focusMonitor.monitor(this._elementRef.nativeElement, true);\n    }\n\n    ngOnDestroy() {\n        this._focusMonitor.stopMonitoring(this._elementRef.nativeElement);\n    }\n\n    focus(): void {\n        this._focusMonitor.focusVia(this._inputElement.nativeElement, 'keyboard');\n    }\n\n    _getAriaChecked(): boolean {\n        return this.checked;\n    }\n\n    _onInteractionEvent(event: Event) {\n        event.stopPropagation();\n    }\n\n    _onLabelTextChange() {\n        this._changeDetectorRef.markForCheck();\n    }\n\n    _onInputClick(event: MouseEvent) {\n        event.stopPropagation();\n        this._updateModelValue();\n        this._emitChangeEvent();\n    }\n\n    writeValue(value: any) {\n        this.checked = !!value;\n    }\n\n    registerOnChange(fn: any) {\n        this._onChangeCallback = fn;\n    }\n\n    registerOnTouched(fn: any) {\n        this._onTouchedCallback = fn;\n    }\n\n    setDisabledState(isDisabled: boolean) {\n        this.disabled = isDisabled;\n    }\n\n    // tslint:disable-next-line:no-empty\n    private _onTouchedCallback = () => {};\n\n    // tslint:disable-next-line:no-empty\n    private _onChangeCallback = (_: any) => {};\n\n    private _updateModelValue() {\n        this._checked = !this.checked;\n        this._onChangeCallback(this.checked);\n        this._onTouchedCallback();\n    }\n\n    private _emitChangeEvent() {\n        const event = new McToggleChange();\n        event.source = this;\n        event.checked = this.checked;\n\n        this._onChangeCallback(this.checked);\n        this.change.emit(event);\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { A11yModule } from '@ptsecurity/cdk/a11y';\nimport { McCommonModule } from '@ptsecurity/mosaic/core';\n\nimport { McToggleComponent } from './toggle.component';\n\n\n@NgModule({\n    imports: [CommonModule, A11yModule, McCommonModule],\n    exports: [McToggleComponent],\n    declarations: [McToggleComponent]\n})\nexport class McToggleModule {\n}\n","import {\n    Directive, DoCheck, ElementRef, Inject,\n    Input, OnChanges, OnDestroy, Optional,\n    Self, InjectionToken, NgZone, OnInit\n} from '@angular/core';\nimport { FormGroupDirective, NgControl, NgForm } from '@angular/forms';\nimport { coerceBooleanProperty } from '@ptsecurity/cdk/coercion';\nimport {\n    CanUpdateErrorState,\n    CanUpdateErrorStateCtor,\n    ErrorStateMatcher,\n    mixinErrorState\n} from '@ptsecurity/mosaic/core';\nimport { McFormFieldControl } from '@ptsecurity/mosaic/form-field';\nimport { fromEvent, Subscription, Subject } from 'rxjs';\nimport { distinctUntilChanged, map } from 'rxjs/operators';\n\n\nexport const MC_TEXTAREA_VALUE_ACCESSOR =\n    new InjectionToken<{ value: any }>('MC_TEXTAREA_VALUE_ACCESSOR');\n\nlet nextUniqueId = 0;\n\nconst ROW_SEPARATOR = '\\n';\n\nexport class McTextareaBase {\n    constructor(public _defaultErrorStateMatcher: ErrorStateMatcher,\n                public _parentForm: NgForm,\n                public _parentFormGroup: FormGroupDirective,\n                public ngControl: NgControl) {\n    }\n}\n\n// tslint:disable-next-line:naming-convention\nexport const McTextareaMixinBase: CanUpdateErrorStateCtor & typeof McTextareaBase = mixinErrorState(McTextareaBase);\n\n@Directive({\n    selector: 'textarea[mcTextarea]',\n    exportAs: 'mcTextarea',\n    host: {\n        class: 'mc-textarea',\n        '[class.mc-textarea-resizable]': '!canGrow',\n        '[attr.id]': 'id',\n        '[attr.placeholder]': 'placeholder',\n        '[disabled]': 'disabled',\n        '[required]': 'required',\n        '(blur)': 'focusChanged(false)',\n        '(focus)': 'focusChanged(true)'\n    },\n    providers: [{ provide: McFormFieldControl, useExisting: McTextarea }]\n})\nexport class McTextarea extends McTextareaMixinBase implements McFormFieldControl<any>, OnInit, OnChanges,\n    OnDestroy, DoCheck, CanUpdateErrorState {\n\n    @Input() canGrow: boolean = true;\n\n    /** An object used to control when error messages are shown. */\n    @Input() errorStateMatcher: ErrorStateMatcher;\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    focused: boolean = false;\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    readonly stateChanges: Subject<void> = new Subject<void>();\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    controlType: string = 'mc-textarea';\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    @Input()\n    get disabled(): boolean {\n        if (this.ngControl && this.ngControl.disabled !== null) {\n            return this.ngControl.disabled;\n        }\n\n        return this._disabled;\n    }\n\n    set disabled(value: boolean) {\n        this._disabled = coerceBooleanProperty(value);\n\n        if (this.focused) {\n            this.focused = false;\n            this.stateChanges.next();\n        }\n    }\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    @Input()\n    get id(): string {\n        return this._id;\n    }\n\n    set id(value: string) {\n        this._id = value || this.uid;\n    }\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    @Input() placeholder: string;\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    @Input()\n    get required(): boolean {\n        return this._required;\n    }\n\n    set required(value: boolean) {\n        this._required = coerceBooleanProperty(value);\n    }\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    @Input()\n    get value(): string {\n        return this.valueAccessor.value;\n    }\n\n    set value(value: string) {\n        if (value !== this.value) {\n            this.valueAccessor.value = value;\n            this.stateChanges.next();\n        }\n    }\n\n    protected uid = `mc-textsrea-${nextUniqueId++}`;\n    protected previousNativeValue: any;\n    protected _disabled = false;\n    protected _id: string;\n    protected _required = false;\n\n    private valueAccessor: { value: any };\n    private growSubscription: Subscription;\n\n    private lineHeight: number = 0;\n    private freeRowsHeight: number = 0;\n    private minHeight: number = 0;\n\n    constructor(protected elementRef: ElementRef,\n                @Optional() @Self() public ngControl: NgControl,\n                @Optional() _parentForm: NgForm,\n                @Optional() _parentFormGroup: FormGroupDirective,\n                _defaultErrorStateMatcher: ErrorStateMatcher,\n                @Optional() @Self() @Inject(MC_TEXTAREA_VALUE_ACCESSOR) inputValueAccessor: any,\n                private ngZone: NgZone) {\n        super(_defaultErrorStateMatcher, _parentForm, _parentFormGroup, ngControl);\n        // If no input value accessor was explicitly specified, use the element as the textarea value\n        // accessor.\n        this.valueAccessor = inputValueAccessor || this.elementRef.nativeElement;\n\n        this.previousNativeValue = this.value;\n\n        // Force setter to be called in case id was not specified.\n        this.id = this.id;\n\n        const growObserver = fromEvent(elementRef.nativeElement, 'input')\n            /*.pipe(\n                map((event: any) => this.getGrowHeight()),\n                // map((event: any) => event.target.scrollHeight),\n                distinctUntilChanged()\n            )*/;\n        this.growSubscription = growObserver.subscribe(this.grow.bind(this));\n    }\n\n    ngOnInit() {\n        setTimeout(() => this.grow(), 0);\n        this.lineHeight = parseInt(getComputedStyle(this.elementRef.nativeElement).lineHeight!, 10);\n\n        const paddingTop = parseInt(getComputedStyle(this.elementRef.nativeElement).paddingTop!, 10);\n        const paddingBottom = parseInt(getComputedStyle(this.elementRef.nativeElement).paddingBottom!, 10);\n\n        // tslint:disable-next-line:no-magic-numbers\n        this.minHeight = this.lineHeight * 2 + paddingTop + paddingBottom;\n        this.freeRowsHeight = this.lineHeight;\n    }\n\n    ngOnChanges() {\n        this.stateChanges.next();\n    }\n\n    ngOnDestroy() {\n        this.stateChanges.complete();\n        this.growSubscription.unsubscribe();\n    }\n\n    ngDoCheck() {\n        if (this.ngControl) {\n            // We need to re-evaluate this on every change detection cycle, because there are some\n            // error triggers that we can't subscribe to (e.g. parent form submissions). This means\n            // that whatever logic is in here has to be super lean or we risk destroying the performance.\n            this.updateErrorState();\n        }\n\n        // We need to dirty-check the native element's value, because there are some cases where\n        // we won't be notified when it changes (e.g. the consumer isn't using forms or they're\n        // updating the value using `emitEvent: false`).\n        this.dirtyCheckNativeValue();\n    }\n\n    /** Grow textarea height to avoid vertical scroll  */\n    grow() {\n        if (!this.canGrow) {\n            return;\n        }\n\n        this.ngZone.runOutsideAngular(() => {\n            const textarea = this.elementRef.nativeElement;\n\n            const outerHeight = parseInt(window.getComputedStyle(textarea).height!, 10);\n            const diff = outerHeight - textarea.clientHeight;\n\n            textarea.style.height = 0; // this line is important to height recalculation\n\n            const height = Math.max(this.minHeight, textarea.scrollHeight + diff + this.freeRowsHeight);\n            textarea.style.height = `${height}px`;\n        });\n    }\n\n    /** Focuses the textarea. */\n    focus(): void {\n        this.elementRef.nativeElement.focus();\n    }\n\n    /** Callback for the cases where the focused state of the textarea changes. */\n    focusChanged(isFocused: boolean) {\n        if (isFocused !== this.focused) {\n            this.focused = isFocused;\n            this.stateChanges.next();\n        }\n    }\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    get empty(): boolean {\n        return !this.elementRef.nativeElement.value && !this.isBadInput();\n    }\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    onContainerClick() {\n        this.focus();\n    }\n\n    /** Does some manual dirty checking on the native textarea `value` property. */\n    protected dirtyCheckNativeValue() {\n        const newValue = this.value;\n\n        if (this.previousNativeValue !== newValue) {\n            this.previousNativeValue = newValue;\n            this.stateChanges.next();\n        }\n    }\n\n    /** Checks whether the textarea is invalid based on the native validation. */\n    protected isBadInput(): boolean {\n        // The `validity` property won't be present on platform-server.\n        const validity = (this.elementRef.nativeElement as HTMLTextAreaElement).validity;\n\n        return validity && validity.badInput;\n    }\n\n    private getGrowHeight(): number {\n        const textarea = this.elementRef.nativeElement;\n        const outerHeight = parseInt(window.getComputedStyle(textarea).height!.toString(), 10);\n        const diff = outerHeight - textarea.clientHeight;\n\n        return Math.max(this.minHeight, textarea.scrollHeight + diff);\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { A11yModule } from '@ptsecurity/cdk/a11y';\nimport { McCommonModule } from '@ptsecurity/mosaic/core';\n\nimport { McTextarea } from './textarea.component';\n\n\n@NgModule({\n    imports: [CommonModule, A11yModule, McCommonModule, FormsModule],\n    exports: [McTextarea],\n    declarations: [McTextarea]\n})\nexport class McTextareaModule {\n}\n","import {\n    Directive,\n    DoCheck,\n    ElementRef,\n    forwardRef,\n    Inject,\n    Input,\n    OnChanges,\n    OnDestroy,\n    Optional,\n    Renderer2,\n    Self\n} from '@angular/core';\nimport {\n    ControlValueAccessor,\n    FormControl,\n    FormGroupDirective,\n    NG_VALIDATORS,\n    NgControl,\n    NgForm,\n    ValidationErrors,\n    ValidatorFn,\n    Validators\n} from '@angular/forms';\nimport { coerceBooleanProperty } from '@ptsecurity/cdk/coercion';\nimport {\n    CanUpdateErrorState,\n    CanUpdateErrorStateCtor,\n    ErrorStateMatcher,\n    mixinErrorState\n} from '@ptsecurity/mosaic/core';\nimport { McFormFieldControl } from '@ptsecurity/mosaic/form-field';\nimport { MC_INPUT_VALUE_ACCESSOR } from '@ptsecurity/mosaic/input';\nimport {\n    noop,\n    Subject\n} from 'rxjs';\n\nimport {\n    ARROW_DOWN_KEYCODE,\n    ARROW_LEFT_KEYCODE,\n    ARROW_RIGHT_KEYCODE,\n    ARROW_UP_KEYCODE,\n    DEFAULT_TIME_FORMAT,\n    HOURS_PER_DAY,\n    HOURS_MINUTES_REGEXP,\n    HOURS_MINUTES_SECONDS_REGEXP,\n    HOURS_ONLY_REGEXP,\n    MINUTES_PER_HOUR,\n    SECONDS_PER_MINUTE,\n    TIMEFORMAT_PLACEHOLDERS,\n    TimeFormats,\n    TimeParts\n} from './timepicker.constants';\n\n\nlet uniqueComponentIdSuffix: number = 0;\nlet validatorOnChange: () => void = noop;\nlet validator: ValidatorFn | null = () => null;\n\nexport class McTimepickerBase {\n    constructor(\n        public _defaultErrorStateMatcher: ErrorStateMatcher,\n        public _parentForm: NgForm,\n        public _parentFormGroup: FormGroupDirective,\n        public ngControl: NgControl) { }\n}\n\n// tslint:disable-next-line naming-convention\nexport const McTimepickerMixinBase:\n    CanUpdateErrorStateCtor &\n    typeof McTimepickerBase = mixinErrorState(McTimepickerBase);\n\n@Directive({\n    selector: 'input[mcTimepicker]',\n    exportAs: 'mcTimepickerInput',\n    host: {\n        class: 'mc-timepicker mc-input',\n        // Native input properties that are overwritten by Angular inputs need to be synced with\n        // the native input element. Otherwise property bindings for those don't work.\n        '[attr.id]': 'id',\n        '[attr.placeholder]': 'placeholder',\n        '[disabled]': 'disabled',\n        '[required]': 'required',\n        '[attr.time-format]': 'timeFormat',\n        '[attr.min-time]': 'minTime',\n        '[attr.max-time]': 'maxTime',\n        '[attr.value]': 'value',\n        '(blur)': 'onBlur()',\n        '(focus)': 'focusChanged(true)',\n        '(input)': 'onInput()',\n        '(paste)': 'onPaste($event)',\n        '(keydown)': 'onKeyDown($event)'\n    },\n    providers: [\n        {\n            provide: NG_VALIDATORS,\n            useValue: {\n                validate(c) { return validator ? validator(c) : null; },\n                registerOnValidatorChange(fn: () => void): void { validatorOnChange = fn; }\n            },\n            multi: true\n        },\n        {\n            provide: McFormFieldControl,\n            useExisting: forwardRef(() => McTimepicker)\n        }\n    ]\n\n})\nexport class McTimepicker extends McTimepickerMixinBase\n    implements McFormFieldControl<any>,\n        OnChanges,\n        OnDestroy,\n        DoCheck,\n        CanUpdateErrorState,\n        ControlValueAccessor {\n\n    /** An object used to control when error messages are shown. */\n    @Input() errorStateMatcher: ErrorStateMatcher;\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    focused: boolean = false;\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    readonly stateChanges: Subject<void> = new Subject<void>();\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    controlType: string = 'mc-timepicker';\n\n    @Input()\n    get disabled(): boolean {\n        if (this.ngControl && this.ngControl.disabled !== null) { return this.ngControl.disabled; }\n\n        return this._disabled;\n    }\n\n    set disabled(value: boolean) {\n        this._disabled = coerceBooleanProperty(value);\n\n        // Browsers may not fire the blur event if the input is disabled too quickly.\n        // Reset from here to ensure that the element doesn't become stuck.\n        if (this.focused) {\n            this.focused = false;\n        }\n\n        this.stateChanges.next();\n    }\n\n    @Input()\n    get id(): string { return this._id; }\n\n    set id(value: string) { this._id = value || this.uid; }\n\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    @Input() placeholder: string;\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    @Input()\n    get required(): boolean { return this._required; }\n\n    set required(value: boolean) { this._required = coerceBooleanProperty(value); }\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    @Input()\n    get value(): string { return this.inputValueAccessor.value; }\n\n    set value(value: string) {\n        if (value !== this.value) {\n            this.inputValueAccessor.value = value;\n            this.applyInputChanges();\n        }\n    }\n\n    @Input('time-format')\n    get timeFormat(): TimeFormats { return this._timeFormat; }\n\n    set timeFormat(formatValue: TimeFormats) {\n        this._timeFormat = Object\n            .keys(TimeFormats)\n            .map((timeFormatKey) => TimeFormats[timeFormatKey])\n            .indexOf(formatValue) > -1 ? formatValue : DEFAULT_TIME_FORMAT;\n\n        validatorOnChange();\n        this.placeholder = TIMEFORMAT_PLACEHOLDERS[this._timeFormat];\n    }\n\n    @Input('min-time')\n    get minTime(): string | null { return this._minTime; }\n\n    set minTime(minValue: string | null) {\n        this._minTime = minValue;\n        this.minDateTime = minValue !== null ? this.getDateFromTimeString(minValue) : undefined;\n        validatorOnChange();\n    }\n\n    @Input('max-time')\n    get maxTime(): string | null { return this._maxTime; }\n\n    set maxTime(maxValue: string | null) {\n        this._maxTime = maxValue;\n        this.maxDateTime = maxValue !== null ? this.getDateFromTimeString(maxValue) : undefined;\n        validatorOnChange();\n    }\n\n    private _id: string;\n    private readonly uid = `mc-timepicker-${uniqueComponentIdSuffix++}`;\n    private _disabled: boolean;\n    private _required: boolean;\n    private previousNativeValue: any;\n    private readonly inputValueAccessor: { value: any };\n    private onChange: (value: any) => void;\n    private onTouched: () => void;\n    private _timeFormat: TimeFormats;\n    private _minTime: string | null = null;\n    private minDateTime: Date | undefined;\n    private _maxTime: string | null = null;\n    private maxDateTime: Date | undefined;\n    private currentDateTimeInput: Date | undefined;\n\n    constructor(private readonly elementRef: ElementRef,\n                @Optional() @Self() public ngControl: NgControl,\n                @Optional() _parentForm: NgForm,\n                @Optional() _parentFormGroup: FormGroupDirective,\n                _defaultErrorStateMatcher: ErrorStateMatcher,\n                @Optional() @Self() @Inject(MC_INPUT_VALUE_ACCESSOR) inputValueAccessor: any,\n                private readonly renderer: Renderer2) {\n        super(_defaultErrorStateMatcher, _parentForm, _parentFormGroup, ngControl);\n\n        // If no input value accessor was explicitly specified, use the element as the input value\n        // accessor.\n        this.inputValueAccessor = inputValueAccessor || this.elementRef.nativeElement;\n\n        this.previousNativeValue = this.value;\n        this.onChange = noop;\n\n        // Force setter to be called in case id was not specified.\n        this.id = this.id;\n\n        this.placeholder = TIMEFORMAT_PLACEHOLDERS[DEFAULT_TIME_FORMAT];\n\n        // Instead of NG_VALUE_ACCESSOR (https://github.com/angular/material2/issues/8158#issuecomment-344618103)\n        if (this.ngControl) { this.ngControl.valueAccessor = this; }\n\n        // Substitute initial empty validator with validator linked to directive object instance (workaround)\n        validator = Validators.compose([\n            () => this.parseValidator(),\n            () => this.minTimeValidator(),\n            () => this.maxTimeValidator()\n        ]);\n    }\n\n    ngOnChanges(): void {\n        this.stateChanges.next();\n    }\n\n    ngOnDestroy(): void {\n        this.stateChanges.complete();\n    }\n\n    ngDoCheck(): void {\n        if (this.ngControl) {\n            // We need to re-evaluate this on every change detection cycle, because there are some\n            // error triggers that we can't subscribe to (e.g. parent form submissions). This means\n            // that whatever logic is in here has to be super lean or we risk destroying the performance.\n            this.updateErrorState();\n        }\n\n        // We need to dirty-check the native element's value, because there are some cases where\n        // we won't be notified when it changes (e.g. the consumer isn't using forms or they're\n        // updating the value using `emitEvent: false`).\n        this.dirtyCheckNativeValue();\n    }\n\n    focus(): void {\n        this.elementRef.nativeElement.focus();\n    }\n\n    focusChanged(isFocused: boolean): void {\n        if (isFocused !== this.focused) {\n            this.focused = isFocused;\n            this.onTouched();\n            this.stateChanges.next();\n        }\n    }\n\n    onBlur() {\n        this.applyInputChanges();\n        this.focusChanged(false);\n    }\n\n    onPaste($event) {\n        $event.preventDefault();\n        const clipboardUserInput: string = $event.clipboardData.getData('text');\n\n        if (this.getDateFromTimeString(clipboardUserInput) === undefined) { return; }\n\n        this.elementRef.nativeElement.value = clipboardUserInput;\n        this.onInput();\n    }\n\n    onInput() {\n        const initialCursorStart: number = this.elementRef.nativeElement.selectionStart;\n        const initialCursorEnd: number = this.elementRef.nativeElement.selectionEnd;\n        let isAutocompleteTriggered: boolean = false;\n\n        const {\n            hoursOnly,\n            hoursAndMinutes,\n            hoursAndMinutesAndSeconds\n        } = this.getParsedTimeParts(this.elementRef.nativeElement.value);\n\n        // tslint:disable no-magic-numbers\n        if (hoursOnly &&\n            hoursOnly[1] &&\n            hoursOnly[1].length === 2) {\n            isAutocompleteTriggered = true;\n        } else if (hoursAndMinutes &&\n            hoursAndMinutes[1].length === 1 &&\n            hoursAndMinutes[2] &&\n            hoursAndMinutes[2].length === 2) {\n            isAutocompleteTriggered = true;\n        } else if (hoursAndMinutesAndSeconds &&\n            hoursAndMinutesAndSeconds[1].length === 2 &&\n            hoursAndMinutesAndSeconds[2].length === 2 &&\n            hoursAndMinutesAndSeconds[3] &&\n            hoursAndMinutesAndSeconds[3].length === 2) {\n            isAutocompleteTriggered = true;\n        }\n        // tslint:enable no-magic-numbers\n\n        this.applyInputChanges({ doTimestringReformat: isAutocompleteTriggered });\n\n        this.elementRef.nativeElement.selectionStart = initialCursorStart;\n        this.elementRef.nativeElement.selectionEnd = initialCursorEnd;\n\n        if (isAutocompleteTriggered && this.ngControl.errors === null) {\n            this.createSelectionOfTimeComponentInInput(initialCursorStart + 1);\n        }\n    }\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    get empty(): boolean {\n        return !this.elementRef.nativeElement.value && !this.isBadInput();\n    }\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    onContainerClick() {\n        this.focus();\n    }\n\n    writeValue(value: Date | null): void {\n        if (value !== null) {\n            this.renderer.setProperty(this.elementRef.nativeElement,\n                'value',\n                this.getTimeStringFromDate(value, this.timeFormat)\n            );\n        }\n        this.onChange(value || null);\n        this.applyInputChanges();\n    }\n\n    onKeyDown(event: KeyboardEvent): void {\n\n        const keyCode: string = this.getKeyCode(event);\n\n        if (keyCode === ARROW_UP_KEYCODE || keyCode === ARROW_DOWN_KEYCODE) {\n            this.upDownTimeByArrowKeys(event);\n        }\n        if (keyCode === ARROW_LEFT_KEYCODE || keyCode === ARROW_RIGHT_KEYCODE) {\n            this.switchSelectionBetweenTimeparts(event);\n        }\n    }\n\n    registerOnChange(fn: (value: Date) => void): void {\n        this.onChange = fn;\n    }\n\n    registerOnTouched(fn: () => void): void {\n        this.onTouched = fn;\n    }\n\n    /** Does some manual dirty checking on the native input `value` property. */\n    private dirtyCheckNativeValue() {\n        const newValue = this.value;\n\n        if (this.previousNativeValue !== newValue) {\n            this.previousNativeValue = newValue;\n            this.stateChanges.next();\n        }\n    }\n\n    /** Checks whether the input is invalid based on the native validation. */\n    private isBadInput(): boolean {\n        const validity = (<HTMLInputElement> this.elementRef.nativeElement).validity;\n\n        return validity && validity.badInput;\n    }\n\n    private applyInputChanges(applyParams: {\n        changedTime?: Date;\n        doTimestringReformat?: boolean;\n    } = {}): void {\n        const { changedTime, doTimestringReformat = true } = applyParams;\n\n        const timeToApply: Date | undefined = changedTime ||\n            this.getDateFromTimeString(this.elementRef.nativeElement.value);\n        this.currentDateTimeInput = timeToApply;\n\n        if (doTimestringReformat && timeToApply !== undefined) {\n            const selectionStart: number = this.elementRef.nativeElement.selectionStart;\n            const selectionEnd: number = this.elementRef.nativeElement.selectionEnd;\n            this.renderer.setProperty(\n                this.elementRef.nativeElement,\n                'value',\n                this.getTimeStringFromDate(timeToApply, this.timeFormat));\n            this.elementRef.nativeElement.selectionStart = selectionStart;\n            this.elementRef.nativeElement.selectionEnd = selectionEnd;\n        }\n\n        (<FormControl> this.ngControl.control).updateValueAndValidity();\n        const result = this.ngControl.errors === null && timeToApply !== undefined ? timeToApply : null;\n        this.onChange(result);\n        this.stateChanges.next();\n    }\n\n    private upDownTimeByArrowKeys(event: KeyboardEvent): void {\n        event.preventDefault();\n\n        let changedTime: Date | undefined = this.currentDateTimeInput;\n        if (changedTime !== undefined) {\n            const cursorPos = this.elementRef.nativeElement.selectionStart;\n\n            const modifiedTimePart = this.getTimeEditMetrics(cursorPos)\n                .modifiedTimePart;\n            const keyCode: string = this.getKeyCode(event);\n            if (keyCode === ARROW_UP_KEYCODE) { changedTime = this.incrementTime(changedTime, modifiedTimePart); }\n            if (keyCode === ARROW_DOWN_KEYCODE) { changedTime = this.decrementTime(changedTime, modifiedTimePart); }\n            this.applyInputChanges({ changedTime });\n            this.createSelectionOfTimeComponentInInput(cursorPos);\n        }\n    }\n\n    private switchSelectionBetweenTimeparts(event: KeyboardEvent): void {\n        const changedTime: Date | undefined = this.currentDateTimeInput;\n        const keyCode: string = this.getKeyCode(event);\n\n        if (changedTime !== undefined) {\n            let cursorPos: number = this.elementRef.nativeElement.selectionStart;\n            if (keyCode === ARROW_LEFT_KEYCODE) {\n                cursorPos = this.getCursorPositionOfPrevTimePartStart(cursorPos, this.elementRef.nativeElement.value);\n            } else if (keyCode === ARROW_RIGHT_KEYCODE) {\n                cursorPos = this.getCursorPositionOfNextTimePartStart(cursorPos, this.elementRef.nativeElement.value);\n            }\n            this.createSelectionOfTimeComponentInInput(cursorPos);\n        }\n    }\n\n    /**\n     * @description Microsoft EDGE doesn't support KeyboaedEvent.code thus we need this helper\n     */\n    private getKeyCode(event: KeyboardEvent): string {\n        return event.code || event.key;\n    }\n\n    private createSelectionOfTimeComponentInInput(cursorPos: number): void {\n        setTimeout(() => {\n            const newEditParams = this.getTimeEditMetrics(cursorPos);\n            this.elementRef.nativeElement.selectionStart = newEditParams.cursorStartPosition;\n            this.elementRef.nativeElement.selectionEnd = newEditParams.cursorEndPosition;\n        });\n    }\n\n    private incrementTime(dateVal: Date,\n                          whatToIncrement: TimeParts = TimeParts.seconds): Date {\n        let { hours, minutes, seconds } = this.getTimeDigitsFromDate(dateVal);\n\n        switch (whatToIncrement) {\n            case TimeParts.hours:\n                hours++;\n                break;\n            case TimeParts.minutes:\n                minutes++;\n                break;\n            case TimeParts.seconds:\n                seconds++;\n                break;\n            default:\n        }\n\n        if (seconds > SECONDS_PER_MINUTE) { seconds = 0; }\n\n        if (minutes > MINUTES_PER_HOUR) { minutes = 0; }\n\n        if (hours > HOURS_PER_DAY) { hours = 0; }\n\n        return <Date> this.getDateFromTimeDigits(hours, minutes, seconds);\n    }\n\n    /**\n     * @description Decrement part of time\n     */\n    private decrementTime(dateVal: Date,\n                          whatToDecrement: TimeParts = TimeParts.seconds): Date {\n        let { hours, minutes, seconds } = this.getTimeDigitsFromDate(dateVal);\n\n        switch (whatToDecrement) {\n            case TimeParts.hours:\n                hours--;\n                break;\n            case TimeParts.minutes:\n                minutes--;\n                break;\n            case TimeParts.seconds:\n                seconds--;\n                break;\n            default:\n        }\n\n        if (seconds < 0) { seconds = SECONDS_PER_MINUTE; }\n\n        if (minutes < 0) { minutes = MINUTES_PER_HOUR; }\n\n        if (hours < 0) { hours = HOURS_PER_DAY; }\n\n        return <Date> this.getDateFromTimeDigits(hours, minutes, seconds);\n    }\n\n    private getCursorPositionOfPrevTimePartStart(cursorPos: number, timeString: string): number {\n        return cursorPos === 0 ? timeString.length : cursorPos - 1;\n    }\n\n    private getCursorPositionOfNextTimePartStart(cursorPos: number,\n                                                 timeString: string,\n                                                 timeDevider: string = ':'): number {\n        const nextDividerPos: number = timeString.indexOf(timeDevider, cursorPos);\n\n        return nextDividerPos !== undefined ? nextDividerPos + 1 : 0;\n    }\n\n    /**\n     * @description Get params for arrow-keys (up/down) time valie edit.\n     * @param cursorPosition Current cursor position in timeString\n     */\n    private getTimeEditMetrics(cursorPosition: number): {\n        modifiedTimePart: TimeParts;\n        cursorStartPosition: number;\n        cursorEndPosition: number;\n    } {\n        const timeString: string = this.elementRef.nativeElement.value;\n        let modifiedTimePart: TimeParts;\n        let cursorStartPosition: number;\n        let cursorEndPosition: number;\n        const hoursIndex = 0;\n        const minutesIndex = timeString.indexOf(':', hoursIndex + 1);\n        const secondsIndex = minutesIndex !== -1 ? timeString.indexOf(':', minutesIndex + 1) : -1;\n\n        if (secondsIndex !== -1 && cursorPosition > secondsIndex) {\n            modifiedTimePart = TimeParts.seconds;\n            cursorStartPosition = secondsIndex + 1;\n            cursorEndPosition = timeString.length;\n        } else if (minutesIndex !== -1 && cursorPosition > minutesIndex) {\n            modifiedTimePart = TimeParts.minutes;\n            cursorStartPosition = minutesIndex + 1;\n            cursorEndPosition = secondsIndex > -1 ? secondsIndex : timeString.length;\n        } else {\n            modifiedTimePart = TimeParts.hours;\n            cursorStartPosition = hoursIndex;\n            cursorEndPosition = minutesIndex !== -1 ? minutesIndex : timeString.length;\n        }\n\n        return {\n            modifiedTimePart,\n            cursorStartPosition,\n            cursorEndPosition\n        };\n    }\n\n    /**\n     * @description Create time string for displaying inside input element of UI\n     */\n    private getTimeStringFromDate(tempVal: Date,\n                                  timeFormat: TimeFormats = DEFAULT_TIME_FORMAT): string {\n        const hours: string = this.getNumberWithLeadingZero(tempVal.getHours());\n        const minutes: string = this.getNumberWithLeadingZero(tempVal.getMinutes());\n        const seconds: string = this.getNumberWithLeadingZero(tempVal.getSeconds());\n\n        const formattedTimeGenerators = {\n            [TimeFormats.HHmm]: () => `${hours}:${minutes}`,\n            [TimeFormats.HHmmss]: () => `${hours}:${minutes}:${seconds}`\n        };\n\n        return formattedTimeGenerators[timeFormat]();\n    }\n\n    private getParsedTimeParts(timeString: string): {\n        hoursOnly: any;\n        hoursAndMinutes: any;\n        hoursAndMinutesAndSeconds: any;\n    } {\n        const hoursAndMinutesAndSeconds = timeString.match(HOURS_MINUTES_SECONDS_REGEXP);\n        const hoursAndMinutes = timeString.match(HOURS_MINUTES_REGEXP);\n        const hoursOnly = timeString.match(HOURS_ONLY_REGEXP);\n\n        return {\n            hoursOnly,\n            hoursAndMinutes,\n            hoursAndMinutesAndSeconds\n        };\n    }\n\n    /**\n     * @description Create Date object from separate parts of time\n     */\n    private getDateFromTimeDigits(hours: number, minutes: number, seconds: number = 0): Date | undefined {\n        return this.getDateFromTimeString(`${hours}:${minutes}:${seconds}`);\n    }\n\n    private getDateFromTimeString(timeString: string | undefined): Date | undefined {\n        // TODO Use moment-js\n        if (timeString === undefined) { return; }\n\n        const {\n            hoursOnly,\n            hoursAndMinutes,\n            hoursAndMinutesAndSeconds\n        } = this.getParsedTimeParts(timeString);\n\n        if (timeString.trim().length === 0 ||\n            hoursOnly === null && hoursAndMinutes === null && hoursAndMinutesAndSeconds === null) {\n            return;\n        }\n\n        // tslint:disable no-magic-numbers\n        let hours: number = 0;\n        let minutes: number = 0;\n        let seconds: number = 0;\n\n        if (hoursOnly) {\n            hours = Number(hoursOnly[1]);\n        } else if (hoursAndMinutes) {\n            hours = Number(hoursAndMinutes[1]);\n            minutes = Number(hoursAndMinutes[2]);\n        } else if (hoursAndMinutesAndSeconds) {\n            hours = Number(hoursAndMinutesAndSeconds[1]);\n            minutes = Number(hoursAndMinutesAndSeconds[2]);\n            seconds = Number(hoursAndMinutesAndSeconds[3]);\n        }\n        // const timestamp: number = Date.parse(fullDateString);\n        const resultDate: Date = new Date(1970, 0, 1, hours, minutes, seconds);\n        // tslint:enable no-magic-numbers\n\n        return isNaN(resultDate.getTime()) ? undefined : resultDate;\n    }\n\n    private getNumberWithLeadingZero(digit: number): string {\n        const MAX_DIGIT_WITH_LEADING_ZERO: number = 9;\n\n        return digit > MAX_DIGIT_WITH_LEADING_ZERO ? `${digit}` : `0${digit}`;\n    }\n\n    private getTimeDigitsFromDate(dateVal: Date): { hours: number; minutes: number; seconds: number } {\n        return {\n            hours: dateVal.getHours(),\n            minutes: dateVal.getMinutes(),\n            seconds: dateVal.getSeconds()\n        };\n    }\n\n    private parseValidator(): ValidationErrors | null {\n        return this.currentDateTimeInput === undefined ?\n            { mcTimepickerParse: { text: this.elementRef.nativeElement.value } } :\n            null;\n    }\n\n    private minTimeValidator(): ValidationErrors | null {\n\n        if (this.currentDateTimeInput !== undefined &&\n            this.minDateTime !== undefined &&\n            this.isTimeLowerThenMin(this.currentDateTimeInput)) {\n            return { mcTimepickerLowerThenMintime: { text: this.elementRef.nativeElement.value } };\n        }\n\n        return null;\n    }\n\n    private maxTimeValidator(): ValidationErrors | null {\n        if (this.currentDateTimeInput !== undefined &&\n            this.maxDateTime !== undefined &&\n            this.isTimeGreaterThenMax(this.currentDateTimeInput)) {\n            return { mcTimepickerHigherThenMaxtime: { text: this.elementRef.nativeElement.value } };\n        }\n\n        return null;\n    }\n\n    private isTimeLowerThenMin(timeToCompare: Date): boolean {\n        return timeToCompare.getTime() - (<Date> this.minDateTime).getTime() < 0;\n    }\n\n    private isTimeGreaterThenMax(timeToCompare: Date): boolean {\n        return timeToCompare.getTime() - (<Date> this.maxDateTime).getTime() >= 0;\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\n\nimport { A11yModule } from '@ptsecurity/cdk/a11y';\nimport { PlatformModule } from '@ptsecurity/cdk/platform';\n\nimport { McTimepicker } from './timepicker';\n\n\n@NgModule({\n    imports: [\n        CommonModule,\n        A11yModule,\n        PlatformModule,\n        FormsModule\n    ],\n    declarations: [\n        McTimepicker\n    ],\n    exports: [\n        McTimepicker\n    ]\n})\nexport class McTimepickerModule {}\n","import {\n    animate,\n    AnimationTriggerMetadata,\n    state,\n    style,\n    transition,\n    trigger,\n    query,\n    animateChild,\n    group\n} from '@angular/animations';\n\n\n/**\n * The following are all the animations for the mat-select component, with each\n * const containing the metadata for one animation.\n *\n * The values below match the implementation of the AngularJS Material mat-select animation.\n */\nexport const mcSelectAnimations: {\n    readonly transformPanel: AnimationTriggerMetadata;\n    readonly fadeInContent: AnimationTriggerMetadata;\n} = {\n    /**\n     * This animation transforms the select's overlay panel on and off the page.\n     *\n     * When the panel is attached to the DOM, it expands its width by the amount of padding, scales it\n     * up to 100% on the Y axis, fades in its border, and translates slightly up and to the\n     * side to ensure the option text correctly overlaps the trigger text.\n     *\n     * When the panel is removed from the DOM, it simply fades out linearly.\n     */\n    transformPanel: trigger('transformPanel', [\n        state('void', style({\n            transform: 'scaleY(0)',\n            minWidth: '100%',\n            opacity: 0\n        })),\n        transition('void => *', group([\n            query('@fadeInContent', animateChild()),\n            animate('150ms cubic-bezier(0.25, 0.8, 0.25, 1)')\n        ])),\n        transition('* => void', [\n            animate('250ms 100ms linear', style({ opacity: 0 }))\n        ])\n    ]),\n\n    /**\n     * This animation fades in the background color and text content of the\n     * select's options. It is time delayed to occur 100ms after the overlay\n     * panel has transformed in.\n     */\n    fadeInContent: trigger('fadeInContent', [\n        state('showing', style({ opacity: 1 })),\n        transition('void => showing', [\n            style({ opacity: 0 }),\n            animate('150ms 100ms cubic-bezier(0.55, 0, 0.55, 0.2)')\n        ])\n    ])\n};\n\n\n/**\n * @deprecated\n * @breaking-change 7.0.0\n */\nexport const transformPanel = mcSelectAnimations.transformPanel;\n\n/**\n * @deprecated\n * @breaking-change 7.0.0\n */\nexport const fadeInContent = mcSelectAnimations.fadeInContent;\n","import { AnimationEvent } from '@angular/animations';\nimport {\n    Component,\n    ChangeDetectorRef,\n    Input,\n    Inject,\n    Output,\n    EventEmitter,\n    OnDestroy,\n    OnInit,\n    ElementRef,\n    Directive,\n    Optional,\n    ViewEncapsulation,\n    ChangeDetectionStrategy,\n    ComponentFactoryResolver,\n    ViewContainerRef,\n    forwardRef,\n    ViewChild\n} from '@angular/core';\nimport { Directionality, Direction } from '@ptsecurity/cdk/bidi';\nimport { TemplatePortal, CdkPortalOutlet, PortalHostDirective } from '@ptsecurity/cdk/portal';\nimport { Subscription } from 'rxjs';\nimport { startWith } from 'rxjs/operators';\n\nimport { mcTabsAnimations } from './tabs-animations';\n\n\n/**\n * These position states are used internally as animation states for the tab body. Setting the\n * position state to left, right, or center will transition the tab body from its current\n * position to its respective state. If there is not current position (void, in the case of a new\n * tab body), then there will be no transition animation to its state.\n *\n * In the case of a new tab body that should immediately be centered with an animating transition,\n * then left-origin-center or right-origin-center can be used, which will use left or right as its\n * psuedo-prior state.\n */\nexport type McTabBodyPositionState =\n    'left' | 'center' | 'right' | 'left-origin-center' | 'right-origin-center';\n\n/**\n * The origin state is an internally used state that is set on a new tab body indicating if it\n * began to the left or right of the prior selected index. For example, if the selected index was\n * set to 1, and a new tab is created and selected at index 2, then the tab body would have an\n * origin of right because its index was greater than the prior selected index.\n */\nexport type McTabBodyOriginState = 'left' | 'right';\n\n/**\n * Wrapper for the contents of a tab.\n * @docs-private\n */\n@Component({\n    selector: 'mc-tab-body',\n    templateUrl: 'tab-body.html',\n    styleUrls: ['tab-body.css'],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    animations: [mcTabsAnimations.translateTab],\n    host: {\n        class: 'mc-tab-body'\n    }\n})\nexport class McTabBody implements OnInit, OnDestroy {\n\n    /** The shifted index position of the tab body, where zero represents the active center tab. */\n    @Input()\n    set position(position: number) {\n        this.positionIndex = position;\n        this.computePositionAnimationState();\n    }\n\n    /** Tab body position state. Used by the animation trigger for the current state. */\n    bodyPosition: McTabBodyPositionState;\n\n    /** Event emitted when the tab begins to animate towards the center as the active tab. */\n    @Output() readonly onCentering: EventEmitter<number> = new EventEmitter<number>();\n\n    /** Event emitted before the centering of the tab begins. */\n    @Output() readonly beforeCentering: EventEmitter<boolean> = new EventEmitter<boolean>();\n\n    /** Event emitted before the centering of the tab begins. */\n    @Output() readonly afterLeavingCenter: EventEmitter<boolean> = new EventEmitter<boolean>();\n\n    /** Event emitted when the tab completes its animation towards the center. */\n    @Output() readonly onCentered: EventEmitter<void> = new EventEmitter<void>(true);\n\n    /** The portal host inside of this container into which the tab body content will be loaded. */\n    @ViewChild(PortalHostDirective) portalHost: PortalHostDirective;\n\n    /** The tab body content to display. */\n    @Input('content') content: TemplatePortal;\n\n    /** Position that will be used when the tab is immediately becoming visible after creation. */\n    @Input() origin: number;\n\n    // Note that the default value will always be overwritten by `McTabBody`, but we need one\n    // anyway to prevent the animations module from throwing an error if the body is used on its own.\n    /** Duration for the tab's animation. */\n    @Input() animationDuration: string = '0ms';\n\n    /** Current position of the tab-body in the tab-group. Zero means that the tab is visible. */\n    private positionIndex: number;\n\n    /** Subscription to the directionality change observable. */\n    private dirChangeSubscription = Subscription.EMPTY;\n\n    constructor(private elementRef: ElementRef<HTMLElement>,\n                @Optional() private dir: Directionality,\n                changeDetectorRef: ChangeDetectorRef) {\n\n        if (this.dir && changeDetectorRef) {\n            this.dirChangeSubscription = this.dir.change.subscribe((direction: Direction) => {\n                this.computePositionAnimationState(direction);\n                changeDetectorRef.markForCheck();\n            });\n        }\n    }\n\n    /**\n     * After initialized, check if the content is centered and has an origin. If so, set the\n     * special position states that transition the tab from the left or right before centering.\n     */\n    ngOnInit() {\n        if (this.bodyPosition === 'center' && this.origin != null) {\n            this.bodyPosition = this.computePositionFromOrigin();\n        }\n    }\n\n    ngOnDestroy() {\n        this.dirChangeSubscription.unsubscribe();\n    }\n\n    onTranslateTabStarted(e: AnimationEvent): void {\n        const isCentering = this.isCenterPosition(e.toState);\n        this.beforeCentering.emit(isCentering);\n        if (isCentering) {\n            this.onCentering.emit(this.elementRef.nativeElement.clientHeight);\n        }\n    }\n\n    onTranslateTabComplete(e: AnimationEvent): void {\n        // If the transition to the center is complete, emit an event.\n        if (this.isCenterPosition(e.toState) && this.isCenterPosition(this.bodyPosition)) {\n            this.onCentered.emit();\n        }\n\n        if (this.isCenterPosition(e.fromState) && !this.isCenterPosition(this.bodyPosition)) {\n            this.afterLeavingCenter.emit();\n        }\n    }\n\n    /** The text direction of the containing app. */\n    getLayoutDirection(): Direction {\n        return this.dir && this.dir.value === 'rtl' ? 'rtl' : 'ltr';\n    }\n\n    /** Whether the provided position state is considered center, regardless of origin. */\n    isCenterPosition(position: McTabBodyPositionState | string): boolean {\n        return position === 'center' ||\n            position === 'left-origin-center' ||\n            position === 'right-origin-center';\n    }\n\n    /** Computes the position state that will be used for the tab-body animation trigger. */\n    private computePositionAnimationState(dir: Direction = this.getLayoutDirection()) {\n        if (this.positionIndex < 0) {\n            this.bodyPosition = dir === 'ltr' ? 'left' : 'right';\n        } else if (this.positionIndex > 0) {\n            this.bodyPosition = dir === 'ltr' ? 'right' : 'left';\n        } else {\n            this.bodyPosition = 'center';\n        }\n    }\n\n    /**\n     * Computes the position state based on the specified origin position. This is used if the\n     * tab is becoming visible immediately after creation.\n     */\n    private computePositionFromOrigin(): McTabBodyPositionState {\n        const dir = this.getLayoutDirection();\n\n        if ((dir === 'ltr' && this.origin <= 0) || (dir === 'rtl' && this.origin > 0)) {\n            return 'left-origin-center';\n        }\n\n        return 'right-origin-center';\n    }\n}\n\n/**\n * The portal host directive for the contents of the tab.\n * @docs-private\n */\n@Directive({\n    selector: '[mcTabBodyHost]'\n})\nexport class McTabBodyPortal extends CdkPortalOutlet implements OnInit, OnDestroy {\n    /** Subscription to events for when the tab body begins centering. */\n    private centeringSub = Subscription.EMPTY;\n    /** Subscription to events for when the tab body finishes leaving from center position. */\n    private leavingSub = Subscription.EMPTY;\n\n    constructor(\n        componentFactoryResolver: ComponentFactoryResolver,\n        viewContainerRef: ViewContainerRef,\n        @Inject(forwardRef(() => McTabBody)) private host: McTabBody) {\n        super(componentFactoryResolver, viewContainerRef);\n    }\n\n    /** Set initial visibility or set up subscription for changing visibility. */\n    ngOnInit(): void {\n        super.ngOnInit();\n\n        this.centeringSub = this.host.beforeCentering\n            .pipe(startWith(this.host.isCenterPosition(this.host.bodyPosition)))\n            .subscribe((isCentering: boolean) => {\n                if (isCentering && !this.hasAttached()) {\n                    this.attach(this.host.content);\n                }\n            });\n\n        this.leavingSub = this.host.afterLeavingCenter.subscribe(() => {\n            this.detach();\n        });\n    }\n\n    /** Clean up centering subscription. */\n    ngOnDestroy(): void {\n        super.ngOnDestroy();\n        this.centeringSub.unsubscribe();\n        this.leavingSub.unsubscribe();\n    }\n}\n","import { Directive, ElementRef } from '@angular/core';\nimport {\n    CanDisable,\n    CanDisableCtor,\n    mixinDisabled\n} from '@ptsecurity/mosaic/core';\n\n\n// Boilerplate for applying mixins to McTabLabelWrapper.\n/** @docs-private */\nexport class McTabLabelWrapperBase {}\nexport const mcTabLabelWrapperMixinBase: CanDisableCtor &\n    typeof McTabLabelWrapperBase = mixinDisabled(McTabLabelWrapperBase);\n\n/**\n * Used in the `mc-tab-group` view to display tab labels.\n * @docs-private\n */\n@Directive({\n    selector: '[mcTabLabelWrapper]',\n    inputs: ['disabled'],\n    host: {\n        '[class.mc-disabled]': 'disabled',\n        '[attr.aria-disabled]': '!!disabled'\n    }\n})\nexport class McTabLabelWrapper extends mcTabLabelWrapperMixinBase implements CanDisable {\n    constructor(public elementRef: ElementRef) {\n        super();\n    }\n\n    /** Sets focus on the wrapper element */\n    focus(): void {\n        this.elementRef.nativeElement.focus();\n    }\n\n    getOffsetLeft(): number {\n        return this.elementRef.nativeElement.offsetLeft;\n    }\n\n    getOffsetWidth(): number {\n        return this.elementRef.nativeElement.offsetWidth;\n    }\n}\n","import {\n    AfterContentChecked,\n    AfterContentInit,\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    ContentChildren,\n    ElementRef,\n    EventEmitter,\n    Input,\n    NgZone,\n    OnDestroy,\n    Optional,\n    Output,\n    QueryList,\n    ViewChild,\n    ViewEncapsulation\n} from '@angular/core';\nimport { FocusKeyManager } from '@ptsecurity/cdk/a11y';\nimport { Direction, Directionality } from '@ptsecurity/cdk/bidi';\nimport { coerceNumberProperty } from '@ptsecurity/cdk/coercion';\nimport { END, ENTER, HOME, SPACE } from '@ptsecurity/cdk/keycodes';\nimport { ViewportRuler } from '@ptsecurity/cdk/scrolling';\nimport { merge, of as observableOf, Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\n\nimport { McTabLabelWrapper } from './tab-label-wrapper';\n\n\nconst VIEWPORT_THROTTLE_TIME = 150;\nconst SCROLL_DISTANCE_DELIMITER = 3;\n\n\n/**\n * The directions that scrolling can go in when the header's tabs exceed the header width. 'After'\n * will scroll the header towards the end of the tabs list and 'before' will scroll towards the\n * beginning of the list.\n */\nexport type ScrollDirection = 'after' | 'before';\n\n/**\n * The distance in pixels that will be overshot when scrolling a tab label into view. This helps\n * provide a small affordance to the label next to it.\n */\nconst EXAGGERATED_OVERSCROLL = 60;\n\n// Boilerplate for applying mixins to McTabHeader.\n/** @docs-private */\nexport class McTabHeaderBase {}\n\n/**\n * The header of the tab group which displays a list of all the tabs in the tab group.\n * When the tabs list's width exceeds the width of the header container,\n * then arrows will be displayed to allow the user to scroll\n * left and right across the header.\n * @docs-private\n */\n@Component({\n    selector: 'mc-tab-header',\n    templateUrl: 'tab-header.html',\n    styleUrls: ['tab-header.css'],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    host: {\n        class: 'mc-tab-header',\n        '[class.mc-tab-header__pagination-controls_enabled]':\n            'showPaginationControls',\n        '[class.mc-tab-header_rtl]': 'getLayoutDirection() == \\'rtl\\''\n    }\n})\nexport class McTabHeader extends McTabHeaderBase\n    implements AfterContentChecked, AfterContentInit, OnDestroy {\n    /** The index of the active tab. */\n    @Input()\n    get selectedIndex(): number {\n        return this._selectedIndex;\n    }\n    set selectedIndex(value: number) {\n        const coercedValue = coerceNumberProperty(value);\n        this.selectedIndexChanged = this._selectedIndex !== coercedValue;\n        this._selectedIndex = coercedValue;\n\n        if (this.keyManager) {\n            this.keyManager.updateActiveItem(coercedValue);\n        }\n    }\n\n    /** Tracks which element has focus; used for keyboard navigation */\n    get focusIndex(): number {\n        return this.keyManager ? this.keyManager.activeItemIndex! : 0;\n    }\n\n    /** When the focus index is set, we must manually send focus to the correct label */\n    set focusIndex(value: number) {\n        if (\n            !this.isValidIndex(value) ||\n            this.focusIndex === value ||\n            !this.keyManager\n        ) {\n            return;\n        }\n\n        this.keyManager.setActiveItem(value);\n    }\n\n    /** Sets the distance in pixels that the tab header should be transformed in the X-axis. */\n    get scrollDistance(): number {\n        return this._scrollDistance;\n    }\n    set scrollDistance(v: number) {\n        this._scrollDistance = Math.max(\n            0,\n            Math.min(this.getMaxScrollDistance(), v)\n        );\n\n        // Mark that the scroll distance has changed so that after the view is checked, the CSS\n        // transformation can move the header.\n        this.scrollDistanceChanged = true;\n        this.checkScrollingControls();\n    }\n\n    @ContentChildren(McTabLabelWrapper)\n    labelWrappers: QueryList<McTabLabelWrapper>;\n    @ViewChild('tabListContainer')\n    tabListContainer: ElementRef;\n    @ViewChild('tabList')\n    tabList: ElementRef;\n\n    /** Whether the controls for pagination should be displayed */\n    showPaginationControls = false;\n\n    /** Whether the tab list can be scrolled more towards the end of the tab label list. */\n    disableScrollAfter = true;\n\n    /** Whether the tab list can be scrolled more towards the beginning of the tab label list. */\n    disableScrollBefore = true;\n\n    /** Event emitted when the option is selected. */\n    @Output()\n    readonly selectFocusedIndex: EventEmitter<number> = new EventEmitter<number>();\n\n    /** Event emitted when a label is focused. */\n    @Output()\n    readonly indexFocused: EventEmitter<number> = new EventEmitter<number>();\n\n    /** The distance in pixels that the tab labels should be translated to the left. */\n    private _scrollDistance = 0;\n\n    /** Whether the header should scroll to the selected index after the view has been checked. */\n    private selectedIndexChanged = false;\n\n    /** Emits when the component is destroyed. */\n    private readonly destroyed = new Subject<void>();\n\n    /**\n     * The number of tab labels that are displayed on the header. When this changes, the header\n     * should re-evaluate the scroll position.\n     */\n    private tabLabelCount: number;\n\n    /** Whether the scroll distance has changed and should be applied after the view is checked. */\n    private scrollDistanceChanged: boolean;\n\n    /** Used to manage focus between the tabs. */\n    private keyManager: FocusKeyManager<McTabLabelWrapper>;\n\n    /** Cached text content of the header. */\n    private currentTextContent: string;\n\n    private _selectedIndex: number = 0;\n\n    constructor(\n        private elementRef: ElementRef,\n        private changeDetectorRef: ChangeDetectorRef,\n        private viewportRuler: ViewportRuler,\n        @Optional() private dir: Directionality,\n        private ngZone: NgZone\n    ) {\n        super();\n    }\n\n    ngAfterContentChecked(): void {\n        // If the number of tab labels have changed, check if scrolling should be enabled\n        if (this.tabLabelCount !== this.labelWrappers.length) {\n            this.updatePagination();\n            this.tabLabelCount = this.labelWrappers.length;\n            this.changeDetectorRef.markForCheck();\n        }\n\n        // If the selected index has changed, scroll to the label and check if the scrolling controls\n        // should be disabled.\n        if (this.selectedIndexChanged) {\n            this.scrollToLabel(this._selectedIndex);\n            this.checkScrollingControls();\n            this.selectedIndexChanged = false;\n            this.changeDetectorRef.markForCheck();\n        }\n\n        // If the scroll distance has been changed (tab selected, focused, scroll controls activated),\n        // then translate the header to reflect this.\n        if (this.scrollDistanceChanged) {\n            this.updateTabScrollPosition();\n            this.scrollDistanceChanged = false;\n            this.changeDetectorRef.markForCheck();\n        }\n    }\n\n    handleKeydown(event: KeyboardEvent) {\n        switch (event.keyCode) {\n            case HOME:\n                this.keyManager.setFirstItemActive();\n                event.preventDefault();\n                break;\n            case END:\n                this.keyManager.setLastItemActive();\n                event.preventDefault();\n                break;\n            case ENTER:\n            case SPACE:\n                this.selectFocusedIndex.emit(this.focusIndex);\n                event.preventDefault();\n                break;\n            default:\n                this.keyManager.onKeydown(event);\n        }\n    }\n\n    ngAfterContentInit() {\n        const dirChange = this.dir ? this.dir.change : observableOf(null);\n        const resize = this.viewportRuler.change(VIEWPORT_THROTTLE_TIME);\n        const realign = () => {\n            this.updatePagination();\n        };\n\n        this.keyManager = new FocusKeyManager(this.labelWrappers)\n            .withHorizontalOrientation(this.getLayoutDirection())\n            .withWrap();\n\n        this.keyManager.updateActiveItem(0);\n\n        // Defer the first call in order to allow for slower browsers to lay out the elements.\n        // This helps in cases where the user lands directly on a page with paginated tabs.\n        typeof requestAnimationFrame === undefined\n            ? realign()\n            : requestAnimationFrame(realign);\n\n        // On dir change or window resize, update the orientation of\n        // the key manager if the direction has changed.\n        merge(dirChange, resize)\n            .pipe(takeUntil(this.destroyed))\n            .subscribe(() => {\n                realign();\n                this.keyManager.withHorizontalOrientation(\n                    this.getLayoutDirection()\n                );\n            });\n\n        // If there is a change in the focus key manager we need to emit the `indexFocused`\n        // event in order to provide a public event that notifies about focus changes. Also we realign\n        // the tabs container by scrolling the new focused tab into the visible section.\n        this.keyManager.change\n            .pipe(takeUntil(this.destroyed))\n            .subscribe((newFocusIndex) => {\n                this.indexFocused.emit(newFocusIndex);\n                this.setTabFocus(newFocusIndex);\n            });\n    }\n\n    ngOnDestroy() {\n        this.destroyed.next();\n        this.destroyed.complete();\n    }\n\n    /**\n     * Callback for when the MutationObserver detects that the content has changed.\n     */\n    onContentChanges() {\n        const textContent = this.elementRef.nativeElement.textContent;\n\n        // We need to diff the text content of the header, because the MutationObserver callback\n        // will fire even if the text content didn't change which is inefficient and is prone\n        // to infinite loops if a poorly constructed expression is passed in.\n\n        if (textContent !== this.currentTextContent) {\n            this.currentTextContent = textContent;\n\n            const zoneCallback = () => {\n                this.updatePagination();\n                this.changeDetectorRef.markForCheck();\n            };\n\n            // The content observer runs outside the `NgZone` by default, which\n            // means that we need to bring the callback back in ourselves.\n            // TODO: Remove null check for `_ngZone` once it's a required parameter.\n            this.ngZone ? this.ngZone.run(zoneCallback) : zoneCallback();\n        }\n    }\n\n    /**\n     * Updating the view whether pagination should be enabled or not\n     *\n     * WARNING: Calling this method can be very costly in terms of performance.  It should be called\n     * as infrequently as possible from outside of the Tabs component as it causes a reflow of the\n     * page.\n     */\n    updatePagination() {\n        this.checkPaginationEnabled();\n        this.checkScrollingControls();\n        this.updateTabScrollPosition();\n    }\n\n    /**\n     * Determines if an index is valid.  If the tabs are not ready yet, we assume that the user is\n     * providing a valid index and return true.\n     */\n    isValidIndex(index: number): boolean {\n        if (!this.labelWrappers) {\n            return true;\n        }\n\n        const tab = this.labelWrappers\n            ? this.labelWrappers.toArray()[index]\n            : null;\n\n        return !!tab && !tab.disabled;\n    }\n\n    /**\n     * Sets focus on the HTML element for the label wrapper and scrolls it into the view if\n     * scrolling is enabled.\n     */\n    setTabFocus(tabIndex: number) {\n        if (this.showPaginationControls) {\n            this.scrollToLabel(tabIndex);\n        }\n\n        if (this.labelWrappers && this.labelWrappers.length) {\n            this.labelWrappers.toArray()[tabIndex].focus();\n\n            // Do not let the browser manage scrolling to focus the element, this will be handled\n            // by using translation. In LTR, the scroll left should be 0. In RTL, the scroll width\n            // should be the full width minus the offset width.\n            const containerEl = this.tabListContainer.nativeElement;\n            const dir = this.getLayoutDirection();\n\n            if (dir === 'ltr') {\n                containerEl.scrollLeft = 0;\n            } else {\n                containerEl.scrollLeft =\n                    containerEl.scrollWidth - containerEl.offsetWidth;\n            }\n        }\n    }\n\n    /** The layout direction of the containing app. */\n    getLayoutDirection(): Direction {\n        return this.dir && this.dir.value === 'rtl' ? 'rtl' : 'ltr';\n    }\n\n    /** Performs the CSS transformation on the tab list that will cause the list to scroll. */\n    updateTabScrollPosition() {\n        const scrollDistance = this.scrollDistance;\n        const translateX =\n            this.getLayoutDirection() === 'ltr'\n                ? -scrollDistance\n                : scrollDistance;\n\n        // Don't use `translate3d` here because we don't want to create a new layer. A new layer\n        // seems to cause flickering and overflow in Internet Explorer.\n        // See: https://github.com/angular/material2/issues/10276\n        // We round the `transform` here, because transforms with sub-pixel precision cause some\n        // browsers to blur the content of the element.\n        this.tabList.nativeElement.style.transform = `translateX(${Math.round(translateX)}px)`;\n\n        // Setting the `transform` on IE will change the scroll offset of the parent, causing the\n        // position to be thrown off in some cases. We have to reset it ourselves to ensure that\n        // it doesn't get thrown off.\n        this.tabList.nativeElement.scrollLeft = 0;\n    }\n\n    /**\n     * Moves the tab list in the 'before' or 'after' direction (towards the beginning of the list or\n     * the end of the list, respectively). The distance to scroll is computed to be a third of the\n     * length of the tab list view window.\n     *\n     * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n     * should be called sparingly.\n     */\n    scrollHeader(scrollDir: ScrollDirection) {\n        const viewLength = this.tabListContainer.nativeElement.offsetWidth;\n\n        // Move the scroll distance one-third the length of the tab list's viewport.\n        this.scrollDistance +=\n            ((scrollDir === 'before' ? -1 : 1) * viewLength) / SCROLL_DISTANCE_DELIMITER;\n    }\n\n    /**\n     * Moves the tab list such that the desired tab label (marked by index) is moved into view.\n     *\n     * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n     * should be called sparingly.\n     */\n    scrollToLabel(labelIndex: number) {\n        const selectedLabel = this.labelWrappers\n            ? this.labelWrappers.toArray()[labelIndex]\n            : null;\n\n        if (!selectedLabel) {\n            return;\n        }\n\n        // The view length is the visible width of the tab labels.\n        const viewLength = this.tabListContainer.nativeElement.offsetWidth;\n\n        let labelBeforePos: number;\n        let labelAfterPos: number;\n\n        if (this.getLayoutDirection() === 'ltr') {\n            labelBeforePos = selectedLabel.getOffsetLeft();\n            labelAfterPos = labelBeforePos + selectedLabel.getOffsetWidth();\n        } else {\n            labelAfterPos =\n                this.tabList.nativeElement.offsetWidth -\n                selectedLabel.getOffsetLeft();\n            labelBeforePos = labelAfterPos - selectedLabel.getOffsetWidth();\n        }\n\n        const beforeVisiblePos = this.scrollDistance;\n        const afterVisiblePos = this.scrollDistance + viewLength;\n\n        if (labelBeforePos < beforeVisiblePos) {\n            // Scroll header to move label to the before direction\n            this.scrollDistance -=\n                beforeVisiblePos - labelBeforePos + EXAGGERATED_OVERSCROLL;\n        } else if (labelAfterPos > afterVisiblePos) {\n            // Scroll header to move label to the after direction\n            this.scrollDistance +=\n                labelAfterPos - afterVisiblePos + EXAGGERATED_OVERSCROLL;\n        }\n    }\n\n    /**\n     * Evaluate whether the pagination controls should be displayed. If the scroll width of the\n     * tab list is wider than the size of the header container, then the pagination controls should\n     * be shown.\n     *\n     * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n     * should be called sparingly.\n     */\n    checkPaginationEnabled() {\n        const isEnabled =\n            this.tabList.nativeElement.scrollWidth >\n            this.elementRef.nativeElement.offsetWidth;\n\n        if (!isEnabled) {\n            this.scrollDistance = 0;\n        }\n\n        if (isEnabled !== this.showPaginationControls) {\n            this.changeDetectorRef.markForCheck();\n        }\n\n        this.showPaginationControls = isEnabled;\n    }\n\n    /**\n     * Evaluate whether the before and after controls should be enabled or disabled.\n     * If the header is at the beginning of the list (scroll distance is equal to 0) then disable the\n     * before button. If the header is at the end of the list (scroll distance is equal to the\n     * maximum distance we can scroll), then disable the after button.\n     *\n     * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n     * should be called sparingly.\n     */\n    checkScrollingControls() {\n        // Check if the pagination arrows should be activated.\n        this.disableScrollBefore = this.scrollDistance === 0;\n        this.disableScrollAfter =\n            this.scrollDistance === this.getMaxScrollDistance();\n        this.changeDetectorRef.markForCheck();\n    }\n\n    /**\n     * Determines what is the maximum length in pixels that can be set for the scroll distance. This\n     * is equal to the difference in width between the tab list container and tab header container.\n     *\n     * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n     * should be called sparingly.\n     */\n    getMaxScrollDistance(): number {\n        const lengthOfTabList = this.tabList.nativeElement.scrollWidth;\n        const viewLength = this.tabListContainer.nativeElement.offsetWidth;\n\n        return lengthOfTabList - viewLength || 0;\n    }\n}\n","import {\n    AfterContentChecked,\n    AfterContentInit,\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    ContentChildren,\n    ElementRef,\n    EventEmitter,\n    Input,\n    OnDestroy,\n    Output,\n    QueryList,\n    ViewChild,\n    ViewEncapsulation,\n    InjectionToken,\n    Inject,\n    Optional,\n    Directive, Attribute\n} from '@angular/core';\nimport { coerceBooleanProperty, coerceNumberProperty } from '@ptsecurity/cdk/coercion';\nimport {\n    CanColor,\n    CanColorCtor,\n    mixinColor,\n    mixinDisabled\n} from '@ptsecurity/mosaic/core';\nimport { merge, Subscription } from 'rxjs';\n\nimport { McTab } from './tab';\nimport { McTabHeader } from './tab-header';\n\n\n@Directive({\n    selector: 'mc-tab-group[mc-light-tabs], [mc-tab-nav-bar][mc-light-tabs]',\n    host: { class: 'mc-tab-group_light' }\n})\nexport class McLightTabsCssStyler { }\n\n@Directive({\n    selector: 'mc-tab-group[mc-align-tabs-center], [mc-tab-nav-bar][mc-align-tabs-center]',\n    host: { class: 'mc-tab-group_align-labels-center' }\n})\nexport class McAlignTabsCenterCssStyler { }\n\n@Directive({\n    selector: 'mc-tab-group[mc-align-tabs-end], [mc-tab-nav-bar][mc-align-tabs-end]',\n    host: { class: 'mc-tab-group_align-labels-end' }\n})\nexport class McAlignTabsEndCssStyler { }\n\n@Directive({\n    selector: 'mc-tab-group[mc-stretch-tabs], [mc-tab-nav-bar][mc-stretch-tabs]',\n    host: { class: 'mc-tab-group_stretch-labels' }\n})\nexport class McStretchTabsCssStyler { }\n\n/** Used to generate unique ID's for each tab component */\nlet nextId = 0;\n\n/** A simple change event emitted on focus or selection changes. */\nexport class McTabChangeEvent {\n    /** Index of the currently-selected tab. */\n    index: number;\n    /** Reference to the currently-selected tab. */\n    tab: McTab;\n}\n\n/** Possible positions for the tab header. */\nexport type McTabHeaderPosition = 'above' | 'below';\n\n/** Object that can be used to configure the default options for the tabs module. */\nexport interface IMcTabsConfig {\n    /** Duration for the tab animation. Must be a valid CSS value (e.g. 600ms). */\n    animationDuration?: string;\n}\n\n/** Injection token that can be used to provide the default options the tabs module. */\nexport const MC_TABS_CONFIG = new InjectionToken('MC_TABS_CONFIG');\n\n// Boilerplate for applying mixins to McTabGroup.\n/** @docs-private */\nexport class McTabGroupBase {\n    // tslint:disable-next-line:naming-convention\n    constructor(public _elementRef: ElementRef) { }\n}\nexport const mcTabGroupMixinBase:\n    CanColorCtor &\n    typeof McTabGroupBase =\n    mixinColor(mixinDisabled(McTabGroupBase));\n\n/**\n * Tab-group component.  Supports basic tab pairs (label + content) and includes\n * keyboard navigation.\n */\n@Component({\n    selector: 'mc-tab-group',\n    exportAs: 'mcTabGroup',\n    templateUrl: 'tab-group.html',\n    styleUrls: ['tab-group.css'],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    inputs: ['color'],\n    host: {\n        class: 'mc-tab-group',\n        '[class.mc-tab-group_dynamic-height]': 'dynamicHeight',\n        '[class.mc-tab-group_inverted-header]': 'headerPosition === \"below\"'\n    }\n})\nexport class McTabGroup extends mcTabGroupMixinBase implements AfterContentInit,\n    AfterContentChecked, OnDestroy, CanColor {\n    lightTab: boolean;\n\n    /** Whether the tab group should grow to the size of the active tab. */\n    @Input()\n    get dynamicHeight(): boolean { return this._dynamicHeight; }\n    set dynamicHeight(value: boolean) { this._dynamicHeight = coerceBooleanProperty(value); }\n\n    /** The index of the active tab. */\n    @Input()\n    get selectedIndex(): number | null { return this._selectedIndex; }\n    set selectedIndex(value: number | null) {\n        this.indexToSelect = coerceNumberProperty(value, null);\n    }\n\n    @ContentChildren(McTab) tabs: QueryList<McTab>;\n\n    @ViewChild('tabBodyWrapper') tabBodyWrapper: ElementRef;\n\n    @ViewChild('tabHeader') tabHeader: McTabHeader;\n\n    /** Position of the tab header. */\n    @Input() headerPosition: McTabHeaderPosition = 'above';\n\n    /** Duration for the tab animation. Must be a valid CSS value (e.g. 600ms). */\n    @Input() animationDuration: string;\n\n    /** Output to enable support for two-way binding on `[(selectedIndex)]` */\n    @Output() readonly selectedIndexChange: EventEmitter<number> = new EventEmitter<number>();\n\n    /** Event emitted when focus has changed within a tab group. */\n    @Output() readonly focusChange: EventEmitter<McTabChangeEvent> =\n        new EventEmitter<McTabChangeEvent>();\n\n    /** Event emitted when the body animation has completed */\n    @Output() readonly animationDone: EventEmitter<void> = new EventEmitter<void>();\n\n    /** Event emitted when the tab selection has changed. */\n    @Output() readonly selectedTabChange: EventEmitter<McTabChangeEvent> =\n        new EventEmitter<McTabChangeEvent>(true);\n\n    /** The tab index that should be selected after the content has been checked. */\n    private indexToSelect: number | null = 0;\n\n    /** Snapshot of the height of the tab body wrapper before another tab is activated. */\n    private tabBodyWrapperHeight: number = 0;\n\n    /** Subscription to tabs being added/removed. */\n    private tabsSubscription = Subscription.EMPTY;\n\n    /** Subscription to changes in the tab labels. */\n    private tabLabelSubscription = Subscription.EMPTY;\n    private _dynamicHeight: boolean = false;\n    private _selectedIndex: number | null = null;\n\n    private groupId: number;\n\n    constructor(\n        elementRef: ElementRef,\n        private changeDetectorRef: ChangeDetectorRef,\n        @Attribute('mc-light-tabs') lightTabs: string,\n        @Inject(MC_TABS_CONFIG) @Optional() defaultConfig?: IMcTabsConfig\n    ) {\n        super(elementRef);\n\n        this.lightTab = coerceBooleanProperty(lightTabs);\n\n        this.groupId = nextId++;\n        this.animationDuration = defaultConfig && defaultConfig.animationDuration ?\n            defaultConfig.animationDuration : '0ms';\n    }\n\n    /**\n     * After the content is checked, this component knows what tabs have been defined\n     * and what the selected index should be. This is where we can know exactly what position\n     * each tab should be in according to the new selected index, and additionally we know how\n     * a new selected tab should transition in (from the left or right).\n     */\n    ngAfterContentChecked() {\n        // Don't clamp the `indexToSelect` immediately in the setter because it can happen that\n        // the amount of tabs changes before the actual change detection runs.\n        const indexToSelect = this.indexToSelect = this.clampTabIndex(this.indexToSelect);\n\n        // If there is a change in selected index, emit a change event. Should not trigger if\n        // the selected index has not yet been initialized.\n        if (this._selectedIndex !== indexToSelect) {\n            const isFirstRun = this._selectedIndex == null;\n\n            if (!isFirstRun) {\n                this.selectedTabChange.emit(this.createChangeEvent(indexToSelect));\n            }\n\n            // Changing these values after change detection has run\n            // since the checked content may contain references to them.\n            Promise.resolve().then(() => {\n                this.tabs.forEach((tab, index) => tab.isActive = index === indexToSelect);\n\n                if (!isFirstRun) {\n                    this.selectedIndexChange.emit(indexToSelect);\n                }\n            });\n        }\n\n        // Setup the position for each tab and optionally setup an origin on the next selected tab.\n        this.tabs.forEach((tab: McTab, index: number) => {\n            tab.position = index - indexToSelect;\n\n            // If there is already a selected tab, then set up an origin for the next selected tab\n            // if it doesn't have one already.\n            if (this._selectedIndex != null && tab.position === 0 && !tab.origin) {\n                tab.origin = indexToSelect - this._selectedIndex;\n            }\n        });\n\n        if (this._selectedIndex !== indexToSelect) {\n            this._selectedIndex = indexToSelect;\n            this.changeDetectorRef.markForCheck();\n        }\n    }\n\n    ngAfterContentInit() {\n        this.subscribeToTabLabels();\n\n        // Subscribe to changes in the amount of tabs, in order to be\n        // able to re-render the content as new tabs are added or removed.\n        this.tabsSubscription = this.tabs.changes.subscribe(() => {\n            const indexToSelect = this.clampTabIndex(this.indexToSelect);\n\n            // Maintain the previously-selected tab if a new tab is added or removed and there is no\n            // explicit change that selects a different tab.\n            if (indexToSelect === this._selectedIndex) {\n                const tabs = this.tabs.toArray();\n\n                for (let i = 0; i < tabs.length; i++) {\n                    if (tabs[i].isActive) {\n                        // Assign both to the `_indexToSelect` and `_selectedIndex` so we don't fire a changed\n                        // event, otherwise the consumer may end up in an infinite loop in some edge cases like\n                        // adding a tab within the `selectedIndexChange` event.\n                        this.indexToSelect = this._selectedIndex = i;\n                        break;\n                    }\n                }\n            }\n\n            this.subscribeToTabLabels();\n            this.changeDetectorRef.markForCheck();\n        });\n    }\n\n    ngOnDestroy() {\n        this.tabsSubscription.unsubscribe();\n        this.tabLabelSubscription.unsubscribe();\n    }\n\n    focusChanged(index: number) {\n        this.focusChange.emit(this.createChangeEvent(index));\n    }\n\n    /** Returns a unique id for each tab label element */\n    getTabLabelId(i: number): string {\n        return `mc-tab-label-${this.groupId}-${i}`;\n    }\n\n    /** Returns a unique id for each tab content element */\n    getTabContentId(i: number): string {\n        return `mc-tab-content-${this.groupId}-${i}`;\n    }\n\n    /**\n     * Sets the height of the body wrapper to the height of the activating tab if dynamic\n     * height property is true.\n     */\n    setTabBodyWrapperHeight(tabHeight: number): void {\n        if (!this._dynamicHeight || !this.tabBodyWrapperHeight) { return; }\n\n        const wrapper: HTMLElement = this.tabBodyWrapper.nativeElement;\n\n        wrapper.style.height = `${this.tabBodyWrapperHeight}px`;\n\n        // This conditional forces the browser to paint the height so that\n        // the animation to the new height can have an origin.\n        if (this.tabBodyWrapper.nativeElement.offsetHeight) {\n            wrapper.style.height = `${tabHeight}px`;\n        }\n    }\n\n    /** Removes the height of the tab body wrapper. */\n    removeTabBodyWrapperHeight(): void {\n        this.tabBodyWrapperHeight = this.tabBodyWrapper.nativeElement.clientHeight;\n        this.tabBodyWrapper.nativeElement.style.height = '';\n        this.animationDone.emit();\n    }\n\n    /** Handle click events, setting new selected index if appropriate. */\n    handleClick(tab: McTab, tabHeader: McTabHeader, index: number) {\n        if (!tab.disabled) {\n            this.selectedIndex = tabHeader.focusIndex = index;\n        }\n    }\n\n    /** Retrieves the tabindex for the tab. */\n    getTabIndex(tab: McTab, index: number): number | null {\n        if (tab.disabled) {\n            return null;\n        }\n\n        return this.selectedIndex === index ? 0 : -1;\n    }\n\n    private createChangeEvent(index: number): McTabChangeEvent {\n        const event = new McTabChangeEvent();\n        event.index = index;\n        if (this.tabs && this.tabs.length) {\n            event.tab = this.tabs.toArray()[index];\n        }\n\n        return event;\n    }\n\n    /**\n     * Subscribes to changes in the tab labels. This is needed, because the @Input for the label is\n     * on the McTab component, whereas the data binding is inside the McTabGroup. In order for the\n     * binding to be updated, we need to subscribe to changes in it and trigger change detection\n     * manually.\n     */\n    private subscribeToTabLabels() {\n        if (this.tabLabelSubscription) {\n            this.tabLabelSubscription.unsubscribe();\n        }\n\n        this.tabLabelSubscription = merge(...this.tabs.map((tab) => tab.stateChanges))\n            .subscribe(() => this.changeDetectorRef.markForCheck());\n    }\n\n    /** Clamps the given index to the bounds of 0 and the tabs length. */\n    private clampTabIndex(index: number | null): number {\n        // Note the `|| 0`, which ensures that values like NaN can't get through\n        // and which would otherwise throw the component into an infinite loop\n        // (since Mch.max(NaN, 0) === NaN).\n        return Math.min(this.tabs.length - 1, Math.max(index || 0, 0));\n    }\n}\n","import {\n    Attribute,\n    ChangeDetectionStrategy,\n    Component,\n    Directive,\n    ElementRef,\n    Input,\n    OnDestroy,\n    ViewEncapsulation\n} from '@angular/core';\nimport { FocusMonitor } from '@ptsecurity/cdk/a11y';\nimport {\n    CanColor,\n    CanColorCtor,\n    CanDisable,\n    CanDisableCtor,\n    HasTabIndex,\n    HasTabIndexCtor,\n    mixinColor,\n    mixinDisabled,\n    mixinTabIndex\n} from '@ptsecurity/mosaic/core';\n\n\n// Boilerplate for applying mixins to McTabNav.\n/** @docs-private */\nexport class McTabNavBase {\n    // tslint:disable-next-line:naming-convention\n    constructor(public _elementRef: ElementRef) {}\n}\nexport const mcTabNavMixinBase: CanColorCtor &\n    typeof McTabNavBase = mixinColor(McTabNavBase);\n\n/**\n * Navigation component matching the styles of the tab group header.\n */\n@Component({\n    selector: '[mc-tab-nav-bar]',\n    exportAs: 'mcTabNavBar, mcTabNav',\n    inputs: ['color'],\n    templateUrl: 'tab-nav-bar.html',\n    styleUrls: ['tab-nav-bar.css'],\n    host: { class: 'mc-tab-nav-bar' },\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class McTabNav extends mcTabNavMixinBase\n    implements CanColor {\n        constructor(elementRef: ElementRef) {\n            super(elementRef);\n        }\n     }\n\n// Boilerplate for applying mixins to McTabLink.\nexport class McTabLinkBase {}\nexport const mcTabLinkMixinBase: HasTabIndexCtor & CanDisableCtor &\n    typeof McTabLinkBase = mixinTabIndex(mixinDisabled(McTabLinkBase));\n\n/**\n * Link inside of a `mc-tab-nav-bar`.\n */\n@Directive({\n    selector: '[mc-tab-link], [mcTabLink]',\n    exportAs: 'mcTabLink',\n    inputs: ['disabled', 'tabIndex'],\n    host: {\n        class: 'mc-tab-link',\n        '[attr.aria-current]': 'active',\n        '[attr.aria-disabled]': 'disabled.toString()',\n        '[attr.tabIndex]': 'tabIndex',\n        '[class.mc-disabled]': 'disabled',\n        '[class.mc-active]': 'active'\n    }\n})\nexport class McTabLink extends mcTabLinkMixinBase\n    implements OnDestroy, CanDisable, HasTabIndex {\n    /** Whether the link is active. */\n    @Input()\n    get active(): boolean {\n        return this.isActive;\n    }\n    set active(value: boolean) {\n        if (value !== this.isActive) {\n            this.isActive = value;\n        }\n    }\n\n    /** Whether the tab link is active or not. */\n    protected isActive: boolean = false;\n\n    constructor(\n        public elementRef: ElementRef,\n        @Attribute('tabindex') tabIndex: string,\n        private focusMonitor: FocusMonitor\n    ) {\n        super();\n\n        this.tabIndex = parseInt(tabIndex) || 0;\n        this.focusMonitor.monitor(this.elementRef.nativeElement);\n    }\n\n    ngOnDestroy() {\n        this.focusMonitor.stopMonitoring(this.elementRef.nativeElement);\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { A11yModule } from '@ptsecurity/cdk/a11y';\nimport { PortalModule } from '@ptsecurity/cdk/portal';\nimport { McCommonModule } from '@ptsecurity/mosaic/core';\n\nimport { McTab } from './tab';\nimport { McTabBody, McTabBodyPortal } from './tab-body';\nimport { McTabContent } from './tab-content';\nimport {\n    McTabGroup,\n    McLightTabsCssStyler,\n    McAlignTabsCenterCssStyler,\n    McAlignTabsEndCssStyler,\n    McStretchTabsCssStyler\n} from './tab-group';\nimport { McTabHeader } from './tab-header';\nimport { McTabLabel } from './tab-label';\nimport { McTabLabelWrapper } from './tab-label-wrapper';\nimport { McTabLink, McTabNav } from './tab-nav-bar/tab-nav-bar';\n\n\n@NgModule({\n    imports: [\n        CommonModule,\n        McCommonModule,\n        PortalModule,\n        A11yModule\n    ],\n    // Don't export all components because some are only to be used internally.\n    exports: [\n        McCommonModule,\n        McTabGroup,\n        McTabLabel,\n        McTab,\n        McTabNav,\n        McTabLink,\n        McTabContent,\n        McLightTabsCssStyler,\n        McAlignTabsCenterCssStyler,\n        McAlignTabsEndCssStyler,\n        McStretchTabsCssStyler\n    ],\n    declarations: [\n        McTabGroup,\n        McTabLabel,\n        McTab,\n        McTabLabelWrapper,\n        McTabNav,\n        McTabLink,\n        McTabBody,\n        McTabBodyPortal,\n        McTabHeader,\n        McTabContent,\n        McLightTabsCssStyler,\n        McAlignTabsCenterCssStyler,\n        McAlignTabsEndCssStyler,\n        McStretchTabsCssStyler\n    ]\n})\nexport class McTabsModule {}\n","import {\n    ElementRef,\n    QueryList,\n    ContentChildren,\n    Component,\n    ChangeDetectionStrategy,\n    ViewEncapsulation\n} from '@angular/core';\n\nimport {\n    mixinColor,\n    CanColor,\n    CanColorCtor,\n    CanDisable,\n    CanDisableCtor,\n    mixinDisabled\n} from '@ptsecurity/mosaic/core';\nimport { McIcon } from '@ptsecurity/mosaic/icon';\n\n\nexport class McTagBase {\n    constructor(public _elementRef: ElementRef) {}\n}\n\nexport const _McTagMixinBase: CanColorCtor & CanDisableCtor & typeof McTagBase = mixinColor(mixinDisabled(McTagBase));\n\n\n@Component({\n    selector: 'mc-tag',\n    templateUrl: 'tag.partial.html',\n    styleUrls: ['./tag.css'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n    host: {\n        class: 'mc-tag',\n        '[class.mc-disabled]': 'disabled'\n    },\n    inputs: ['color', 'disabled']\n})\nexport class McTag extends _McTagMixinBase implements CanColor, CanDisable {\n    @ContentChildren(McIcon) contentChildren: QueryList<McIcon>;\n\n    nativeElement: HTMLElement;\n\n    private _disabled: boolean = false;\n\n    get disabled() {\n        return this._disabled;\n    }\n\n    set disabled(value: any) {\n        if (value !== this.disabled) { this._disabled = value; }\n    }\n\n    constructor(elementRef: ElementRef) {\n        super(elementRef);\n\n        this.nativeElement = elementRef.nativeElement;\n    }\n\n    ngAfterContentInit() {\n        this._addClassModificatorForIcons();\n    }\n\n    _addClassModificatorForIcons() {\n        const icons = this.contentChildren.map((item) => item._elementRef.nativeElement);\n\n        if (icons.length === 1) {\n            const iconElement = icons[0];\n\n            if (!iconElement.previousElementSibling && !iconElement.nextElementSibling) {\n                if (iconElement.nextSibling) {\n                    iconElement.classList.add('mc-icon_left');\n                    this.nativeElement.classList.add('mc-left-icon');\n                }\n\n                if (iconElement.previousSibling) {\n                    iconElement.classList.add('mc-icon_right');\n                    this.nativeElement.classList.add('mc-right-icon');\n                }\n            }\n        } else if (icons.length > 1) {\n            const firstIconElement = icons[0];\n            const secondIconElement = icons[1];\n\n            firstIconElement.classList.add('mc-icon_left');\n            secondIconElement.classList.add('mc-icon_right');\n        }\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { PlatformModule } from '@ptsecurity/cdk/platform';\n\nimport { McTag } from './tag.component';\n\n\n@NgModule({\n    imports: [\n        CommonModule,\n        PlatformModule\n    ],\n    exports: [\n        McTag\n    ],\n    declarations: [\n        McTag\n    ]\n})\nexport class McTagModule {}\n","import { fromEvent, Observable, Subscription } from 'rxjs';\nimport { debounceTime } from 'rxjs/operators';\n\nimport {\n    AfterViewInit,\n    Component, Directive,\n    ElementRef,\n    HostBinding,\n    Input,\n    OnDestroy,\n    OnInit,\n    ViewEncapsulation,\n    ContentChild,\n    TemplateRef,\n    ChangeDetectorRef,\n    ChangeDetectionStrategy,\n    ViewChild\n} from '@angular/core';\nimport { FocusMonitor, FocusOrigin } from '@ptsecurity/cdk/a11y';\nimport { SPACE } from '@ptsecurity/cdk/keycodes';\nimport { Platform } from '@ptsecurity/cdk/platform';\nimport { CanDisable, CanDisableCtor, mixinDisabled } from '@ptsecurity/mosaic/core';\n\n\nconst COLLAPSED_CLASS: string = 'mc-navbar-collapsed-title';\nconst MC_ICON = 'mc-icon';\nconst MC_NAVBAR = 'mc-navbar';\nconst MC_NAVBAR_CONTAINER = 'mc-navbar-container';\nconst MC_NAVBAR_ITEM = 'mc-navbar-item';\nconst MC_NAVBAR_BRAND = 'mc-navbar-brand';\nconst MC_NAVBAR_TITLE = 'mc-navbar-title';\nconst MC_NAVBAR_LOGO = 'mc-navbar-logo';\n\nexport type McNavbarContainerPositionType = 'left' | 'right';\n\nexport interface IMcNavbarDropdownItem {\n    link?: string;\n    text: string;\n}\n\n@Directive({\n    selector: MC_NAVBAR_LOGO,\n    host: {\n        class: MC_NAVBAR_LOGO\n    }\n})\nexport class McNavbarLogo {}\n\n@Directive({\n    selector: MC_NAVBAR_BRAND,\n    host: {\n        class: MC_NAVBAR_BRAND\n    }\n})\nexport class McNavbarBrand {}\n\n@Directive({\n    selector: MC_NAVBAR_TITLE,\n    host: {\n        class: MC_NAVBAR_TITLE\n    }\n})\nexport class McNavbarTitle {}\n\nexport class McNavbarItemBase {\n    constructor(public _elementRef: ElementRef) {}\n}\n\nexport const _McNavbarMixinBase: CanDisableCtor & typeof McNavbarItemBase = mixinDisabled(McNavbarItemBase);\n\n@Component({\n    selector: MC_NAVBAR_ITEM,\n    template: `\n        <a\n            [attr.tabindex]=\\\"disabled ? -1 : tabIndex\\\"\n            (click)=\"handleClickByItem()\"\n            (keydown)=\"handleKeydown($event)\"\n            class=\"mc-navbar-item\"\n        >\n            <ng-content></ng-content>\n            <i *ngIf=\"hasDropdownContent\" mc-icon=\"mc-angle-down-M_16\"></i>\n        </a>\n        <ul\n            #dropdownContent\n            *ngIf=\"hasDropdownContent\"\n            [ngClass]=\"{ 'is-collapsed': isCollapsed }\"\n            class=\"mc-navbar-dropdown\"\n        >\n            <li\n                *ngFor=\"let item of dropdownItems\"\n                (click)=\"handleClickByDropdownItem()\"\n                class=\"mc-navbar-dropdown-item\"\n            >\n                <ng-container *ngIf=\"dropdownItemTmpl\">\n                    <ng-container *ngTemplateOutlet=\"dropdownItemTmpl; context: { $implicit: item }\"></ng-container>\n                </ng-container>\n                <a\n                    *ngIf=\"!dropdownItemTmpl\"\n                    [attr.href]=\"item.link\"\n                    [ngClass]=\"{ 'is-active': isActiveDropdownLink(item.link) }\"\n                    class=\"mc-navbar-dropdown-link\"\n                >{{ item.text }}</a>\n            </li>\n        </ul>\n    `,\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    inputs: ['disabled'],\n    host: {\n        '[attr.disabled]': 'disabled || null',\n        '[attr.tabindex]': '-1'\n    }\n})\nexport class McNavbarItem extends _McNavbarMixinBase implements OnInit, AfterViewInit, OnDestroy, CanDisable {\n\n    @Input()\n    tabIndex: number = 0;\n\n    @Input()\n    dropdownItems: IMcNavbarDropdownItem[] = [];\n\n    @Input()\n    set collapsedTitle(value: string) {\n        this.elementRef.nativeElement.setAttribute('computedTitle', encodeURI(value));\n    }\n\n    @ContentChild('dropdownItemTmpl', { read: TemplateRef })\n    dropdownItemTmpl: TemplateRef<IMcNavbarDropdownItem>;\n\n    @ViewChild('dropdownContent', { read: ElementRef })\n    dropdownContent: ElementRef;\n\n    get hasDropdownContent() {\n        return this.dropdownItems.length > 0;\n    }\n\n    isCollapsed: boolean = true;\n\n    private _subscription: Subscription = new Subscription();\n    private _focusMonitor$: Observable<FocusOrigin>;\n\n    private get _dropdownElements(): HTMLElement[] {\n        return this.dropdownContent ? this.dropdownContent.nativeElement.querySelectorAll('li > *') : [];\n    }\n\n    constructor(\n        public  elementRef: ElementRef,\n        private _focusMonitor: FocusMonitor,\n        private _platform: Platform,\n        private _cdRef: ChangeDetectorRef\n    ) {\n        super(elementRef);\n    }\n\n    ngOnInit() {\n        this.denyClickIfDisabled();\n\n        this._focusMonitor$ = this._focusMonitor.monitor(this.elementRef.nativeElement, true);\n\n        if (this.hasDropdownContent) {\n            this.listenClickOutside();\n        }\n    }\n\n    ngAfterViewInit() {\n        if (!this.hasDropdownContent) {\n            return;\n        }\n\n        this.startListenFocusDropdownItems();\n    }\n\n    ngOnDestroy() {\n        this._subscription.unsubscribe();\n        this._focusMonitor.stopMonitoring(this.elementRef.nativeElement);\n        this.stopListenFocusDropdownItems();\n    }\n\n    isActiveDropdownLink(link: string): boolean {\n        if (!this._platform.isBrowser) {\n            return false;\n        }\n\n        return window.location.href.indexOf(link) >= 0;\n    }\n\n    handleClickByItem() {\n        this.toggleDropdown();\n    }\n\n    handleKeydown($event: KeyboardEvent) {\n        const isNavbarItem = ($event.target as HTMLElement).classList.contains(MC_NAVBAR_ITEM);\n\n        // tslint:disable-next-line\n        if (this.hasDropdownContent && $event.keyCode === SPACE && isNavbarItem) {\n            this.toggleDropdown();\n        }\n    }\n\n    handleClickByDropdownItem() {\n        this.forceCloseDropdown();\n    }\n\n    private listenClickOutside() {\n        this._subscription.add(\n            this._focusMonitor$.subscribe((origin) => {\n                if (origin === null) {\n                    this.forceCloseDropdown();\n                }\n            })\n        );\n    }\n\n    private toggleDropdown() {\n        this.isCollapsed = !this.isCollapsed;\n    }\n\n    private forceCloseDropdown() {\n        this.isCollapsed = true;\n        this._cdRef.detectChanges();\n    }\n\n    private startListenFocusDropdownItems() {\n        this._dropdownElements.forEach((el) => {\n            this._focusMonitor.monitor(el, true);\n        });\n    }\n\n    private stopListenFocusDropdownItems() {\n        this._dropdownElements.forEach((el) => {\n            this._focusMonitor.stopMonitoring(el);\n        });\n    }\n\n    // This method is required due to angular 2 issue https://github.com/angular/angular/issues/11200\n    private denyClickIfDisabled() {\n        const events: Event[] = this.elementRef.nativeElement.eventListeners('click');\n\n        events.forEach((event) => this.elementRef.nativeElement.removeEventListener('click', event));\n\n        this.elementRef.nativeElement.addEventListener('click', (event: MouseEvent) => {\n            if (this.elementRef.nativeElement.hasAttribute('disabled')) {\n                event.stopImmediatePropagation();\n            }\n        }, true);\n\n        events.forEach((event) => this.elementRef.nativeElement.addEventListener('click', event));\n    }\n}\n\n@Directive({\n    selector: MC_NAVBAR_CONTAINER\n})\nexport class McNavbarContainer {\n    @Input()\n    position: McNavbarContainerPositionType = 'left';\n\n    @HostBinding('class')\n    get cssClasses(): string {\n        return this.position === 'left' ? 'mc-navbar-left' : 'mc-navbar-right';\n    }\n}\n\nclass CollapsibleItem {\n    private _collapsed: boolean = false;\n\n    constructor(\n        public element: HTMLElement,\n        public width: number\n    ) {}\n\n    processCollapsed(collapsed: boolean) {\n        this._collapsed = collapsed;\n\n        this.updateCollapsedClass();\n    }\n\n    private updateCollapsedClass() {\n        if (this._collapsed) {\n            this.element.classList.add(COLLAPSED_CLASS);\n        } else {\n            this.element.classList.remove(COLLAPSED_CLASS);\n        }\n\n    }\n}\n\nclass CachedItemWidth {\n\n    get canCollapse(): boolean {\n        return this.itemsForCollapse.length > 0;\n    }\n\n    private _collapsedItemsWidth: number;\n\n    get collapsedItemsWidth(): number {\n        if (this._collapsedItemsWidth !== undefined) {\n            return this._collapsedItemsWidth;\n        }\n\n        this.calculateAndCacheCollapsedItemsWidth();\n\n        return this._collapsedItemsWidth;\n    }\n\n    constructor(\n        public element: HTMLElement,\n        public width: number,\n        public itemsForCollapse: CollapsibleItem[] = []\n    ) {}\n\n    processCollapsed(collapsed: boolean) {\n        if (this.itemsForCollapse.length > 0) {\n            this.updateTitle(collapsed);\n        }\n\n        this.itemsForCollapse.forEach((item) => item.processCollapsed(collapsed));\n    }\n\n    private calculateAndCacheCollapsedItemsWidth() {\n        this._collapsedItemsWidth = this.itemsForCollapse\n            .reduce((acc, item) => acc + item.width, 0);\n    }\n\n    private getTitle(): string {\n        const computedTitle = this.element.getAttribute('computedTitle');\n\n        return computedTitle\n            ? decodeURI(computedTitle)\n            : (this.itemsForCollapse.length > 0 ? this.itemsForCollapse[0].element.innerText : '');\n    }\n\n    private updateTitle(collapsed: boolean) {\n        if (collapsed) {\n            this.element.setAttribute('title', this.getTitle());\n        } else {\n            this.element.removeAttribute('title');\n        }\n    }\n}\n\n\n@Component({\n    selector: MC_NAVBAR,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    template: `\n        <nav class=\"mc-navbar\">\n            <ng-content select=\"[${MC_NAVBAR_CONTAINER}],${MC_NAVBAR_CONTAINER}\"></ng-content>\n        </nav>\n    `,\n    styleUrls: ['./navbar.css'],\n    encapsulation: ViewEncapsulation.None\n})\nexport class McNavbar implements AfterViewInit, OnDestroy {\n\n    private readonly forceRecalculateItemsWidth: boolean = false;\n    private readonly resizeDebounceInterval: number = 100;\n    private readonly firstLevelElement: string = MC_NAVBAR_CONTAINER;\n    private readonly secondLevelElements: string[] = [\n        MC_NAVBAR_ITEM,\n        MC_NAVBAR_BRAND,\n        MC_NAVBAR_TITLE\n    ];\n\n    private _totalItemsWidths: number;\n    private _itemsWidths: CachedItemWidth[];\n\n    private get maxAllowedWidth(): number {\n        return this._elementRef.nativeElement.querySelector('nav').getBoundingClientRect().width;\n    }\n\n    private get itemsWidths(): CachedItemWidth[] {\n        if (this._itemsWidths !== undefined && !this.forceRecalculateItemsWidth) {\n            return this._itemsWidths;\n        }\n\n        this.calculateAndCacheItemsWidth();\n\n        return this._itemsWidths;\n    }\n\n    private get totalItemsWidth(): number {\n        if (this._totalItemsWidths !== undefined && !this.forceRecalculateItemsWidth) {\n            return this._totalItemsWidths;\n        }\n\n        this.calculateAndCacheTotalItemsWidth();\n\n        return this._totalItemsWidths;\n    }\n\n    private _resizeSubscription: Subscription;\n\n    constructor(\n        private _elementRef: ElementRef\n    ) {\n        const resizeObserver = fromEvent(window, 'resize')\n            .pipe(debounceTime(this.resizeDebounceInterval));\n\n        this._resizeSubscription = resizeObserver.subscribe(this.updateCollapsed.bind(this));\n    }\n\n    updateCollapsed(): void {\n        let collapseDelta = this.totalItemsWidth - this.maxAllowedWidth;\n\n        for (let i = this.itemsWidths.length - 1; i >= 0; i--) {\n            const item = this.itemsWidths[i];\n\n            if (!item.canCollapse) {\n                continue;\n            }\n\n            item.processCollapsed(collapseDelta > 0);\n            collapseDelta -= item.collapsedItemsWidth;\n        }\n    }\n\n    ngAfterViewInit(): void {\n        // Note: this wait is required for loading and rendering fonts for icons;\n        // unfortunately we cannot control font rendering\n        setTimeout(() => this.updateCollapsed(), 0);\n    }\n\n    ngOnDestroy() {\n        this._resizeSubscription.unsubscribe();\n    }\n\n    private calculateAndCacheTotalItemsWidth() {\n        this._totalItemsWidths = this.itemsWidths\n            .reduce((acc, item) => acc + item.width, 0);\n    }\n\n    private getOuterElementWidth(element: HTMLElement): number {\n        const baseWidth  = element.getBoundingClientRect().width;\n        const marginRight = parseInt(getComputedStyle(element).getPropertyValue('margin-right'));\n        const marginLeft = parseInt(getComputedStyle(element).getPropertyValue('margin-left'));\n\n        return baseWidth + marginRight + marginLeft;\n    }\n\n    private calculateAndCacheItemsWidth() {\n        const allItemsSelector = this.secondLevelElements\n            .map((e: string) => `${this.firstLevelElement}>${e}`);\n        const allItems: HTMLElement[] = Array.from(this._elementRef.nativeElement.querySelectorAll(allItemsSelector));\n\n        this._itemsWidths = allItems\n            .map((el) => new CachedItemWidth(el, this.getOuterElementWidth(el), this.getItemsForCollapse(el)));\n    }\n\n    private getItemsForCollapse(element: HTMLElement): CollapsibleItem[] {\n        const icon = element.querySelector(`[${MC_ICON}],${MC_NAVBAR_LOGO},[${MC_NAVBAR_LOGO}]`);\n\n        if (!icon) {\n            return [];\n        }\n\n        return Array.from(element.querySelectorAll(MC_NAVBAR_TITLE))\n            .map((el) => new CollapsibleItem(<HTMLElement> el, el.getBoundingClientRect().width));\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { A11yModule } from '@ptsecurity/cdk/a11y';\nimport { PlatformModule } from '@ptsecurity/cdk/platform';\n\nimport { McIconModule } from '@ptsecurity/mosaic/icon';\n\nimport {\n    McNavbar,\n    McNavbarContainer,\n    McNavbarItem,\n    McNavbarTitle,\n    McNavbarBrand,\n    McNavbarLogo\n} from './navbar.component';\n\n\n@NgModule({\n    imports: [\n        CommonModule,\n        A11yModule,\n        PlatformModule,\n        McIconModule\n    ],\n    exports: [\n        McNavbar,\n        McNavbarContainer,\n        McNavbarTitle,\n        McNavbarItem,\n        McNavbarBrand,\n        McNavbarLogo\n    ],\n    declarations: [\n        McNavbar,\n        McNavbarContainer,\n        McNavbarTitle,\n        McNavbarItem,\n        McNavbarBrand,\n        McNavbarLogo\n    ]\n})\nexport class McNavbarModule {}\n","import {\n    ChangeDetectionStrategy,\n    Component,\n    ViewEncapsulation,\n    ElementRef,\n    Input\n} from '@angular/core';\nimport { CanColor, CanColorCtor, mixinColor, ThemePalette } from '@ptsecurity/mosaic/core';\n\n\nexport type ProgressBarMode = 'determinate' | 'indeterminate';\n\nlet idIterator = 0;\n\nconst MIN_PERCENT = 0;\nconst MAX_PERCENT = 100;\n\nexport class McProgressBarBase {\n    constructor(public _elementRef: ElementRef) {}\n}\n\nexport const _McProgressBarMixinBase:\n    CanColorCtor &\n    typeof McProgressBarBase =\n        mixinColor(McProgressBarBase);\n\n@Component({\n    selector: 'mc-progress-bar',\n    templateUrl: './progress-bar.component.html',\n    styleUrls: ['./progress-bar.css'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n    host: {\n        class: 'mc-progress-bar',\n        '[attr.id]': 'id'\n    }\n})\nexport class McProgressBar extends _McProgressBarMixinBase implements CanColor {\n    @Input() id: string = `mc-progress-bar-${idIterator++}`;\n    @Input() value: number = 0;\n    @Input() mode: ProgressBarMode = 'determinate';\n    @Input() color: ThemePalette = ThemePalette.Primary;\n\n    constructor(elementRef: ElementRef) {\n        super(elementRef);\n    }\n\n    get percentage(): number {\n        return Math.max(MIN_PERCENT, Math.min(MAX_PERCENT, this.value)) / MAX_PERCENT;\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { PlatformModule } from '@ptsecurity/cdk/platform';\n\nimport {\n    McProgressBar\n} from './progress-bar.component';\n\n\n@NgModule({\n    imports: [\n        CommonModule,\n        PlatformModule\n    ],\n    exports: [\n        McProgressBar\n    ],\n    declarations: [\n        McProgressBar\n    ]\n})\nexport class McProgressBarModule {}\n","import {\n    ChangeDetectionStrategy,\n    Component,\n    ViewEncapsulation,\n    ElementRef,\n    Input\n} from '@angular/core';\nimport { CanColor, CanColorCtor, mixinColor, ThemePalette } from '@ptsecurity/mosaic/core';\n\n\nexport type ProgressSpinnerMode = 'determinate' | 'indeterminate';\n\nlet idIterator = 0;\n\nconst MIN_PERCENT = 0;\nconst MAX_PERCENT = 100;\n\nexport class McProgressSpinnerBase {\n    constructor(public _elementRef: ElementRef) {}\n}\n\nexport const _McProgressSpinnerMixinBase:\n    CanColorCtor &\n    typeof McProgressSpinnerBase =\n        mixinColor(McProgressSpinnerBase);\n\nconst MAX_DASH_ARRAY = 273;\n\n@Component({\n    selector: 'mc-progress-spinner',\n    templateUrl: './progress-spinner.component.html',\n    styleUrls: ['./progress-spinner.css'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n    host: {\n        class: 'mc-progress-spinner',\n        '[attr.id]': 'id'\n    }\n})\nexport class McProgressSpinner extends _McProgressSpinnerMixinBase implements CanColor {\n    @Input() id: string = `mc-progress-spinner-${idIterator++}`;\n    @Input() value: number = 0;\n    @Input() mode: ProgressSpinnerMode = 'determinate';\n    @Input() color: ThemePalette = ThemePalette.Primary;\n\n    constructor(elementRef: ElementRef) {\n        super(elementRef);\n    }\n\n    get percentage(): number {\n        return Math.max(MIN_PERCENT, Math.min(MAX_PERCENT, this.value)) / MAX_PERCENT;\n    }\n\n    get dashOffsetPercent(): string {\n        return `${MAX_DASH_ARRAY - this.percentage * MAX_DASH_ARRAY}%`;\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { PlatformModule } from '@ptsecurity/cdk/platform';\n\nimport { McProgressSpinner } from './progress-spinner.component';\n\n\n@NgModule({\n    imports: [\n        CommonModule,\n        PlatformModule\n    ],\n    exports: [\n        McProgressSpinner\n    ],\n    declarations: [\n        McProgressSpinner\n    ]\n})\nexport class McProgressSpinnerModule {}\n","import {\n    AfterContentInit,\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component, ContentChildren, Directive, ElementRef, EventEmitter, forwardRef,\n    Input, OnDestroy, OnInit, Optional, Output, QueryList,\n    ViewChild,\n    ViewEncapsulation\n} from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\n\nimport { UniqueSelectionDispatcher } from '@ptsecurity/cdk/collections';\n\nimport {\n    CanColor, CanColorCtor,\n    CanDisable, CanDisableCtor,\n    HasTabIndex, HasTabIndexCtor,\n    mixinColor,\n    mixinDisabled,\n    mixinTabIndex,\n    toBoolean\n} from '@ptsecurity/mosaic/core';\n\n\n// Increasing integer for generating unique ids for radio components.\nlet nextUniqueId = 0;\n\n/** Change event object emitted by McRadio. */\nexport class McRadioChange {\n    constructor(\n        /** The McRadioButton that emits the change event. */\n        public source: McRadioButton,\n        /** The value of the McRadioButton. */\n        public value: any) {}\n}\n\n// Boilerplate for applying mixins to McRadioGroup.\n/** @docs-private */\nexport class McRadioGroupBase {}\nexport const _McRadioGroupMixinBase: CanDisableCtor & typeof McRadioGroupBase = mixinDisabled(McRadioGroupBase);\n\n/**\n * Provider Expression that allows mc-radio-group to register as a ControlValueAccessor. This\n * allows it to support [(ngModel)] and ngControl.\n * @docs-private\n */\nexport const MC_RADIO_GROUP_CONTROL_VALUE_ACCESSOR: any = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => McRadioGroup),\n    multi: true\n};\n\n@Directive({\n    selector: 'mc-radio-group',\n    exportAs: 'mcRadioGroup',\n    providers: [MC_RADIO_GROUP_CONTROL_VALUE_ACCESSOR],\n    host: {\n        role: 'radiogroup',\n        class: 'mc-radio-group'\n    },\n    inputs: ['disabled']\n})\nexport class McRadioGroup extends _McRadioGroupMixinBase\n    implements AfterContentInit, ControlValueAccessor, CanDisable {\n\n    /** Name of the radio button group. All radio buttons inside this group will use this name. */\n    @Input()\n    get name(): string { return this._name; }\n    set name(value: string) {\n        this._name = value;\n        this.updateRadioButtonNames();\n    }\n\n    /** Whether the labels should appear after or before the radio-buttons. Defaults to 'after' */\n    @Input()\n    get labelPosition(): 'before' | 'after' {\n        return this._labelPosition;\n    }\n    set labelPosition(v) {\n        this._labelPosition = v === 'before' ? 'before' : 'after';\n        this.markRadiosForCheck();\n    }\n\n    /** Value of the radio button. */\n    @Input()\n    get value(): any { return this._value; }\n    set value(newValue: any) {\n        if (this._value !== newValue) {\n            // Set this before proceeding to ensure no circular loop occurs with selection.\n            this._value = newValue;\n\n            this.updateSelectedRadioFromValue();\n            this.checkSelectedRadioButton();\n        }\n    }\n\n    /** Whether the radio button is selected. */\n    @Input()\n    get selected() { return this._selected; }\n    set selected(selected: McRadioButton | null) {\n        this._selected = selected;\n        this.value = selected ? selected.value : null;\n        this.checkSelectedRadioButton();\n    }\n\n    /** Whether the radio group is disabled */\n    @Input()\n    get disabled(): boolean { return this._disabled; }\n    set disabled(value) {\n        this._disabled = toBoolean(value);\n        this.markRadiosForCheck();\n    }\n\n    /** Whether the radio group is required */\n    @Input()\n    get required(): boolean { return this._required; }\n    set required(value: boolean) {\n        this._required = toBoolean(value);\n        this.markRadiosForCheck();\n    }\n\n    /**\n     * Event emitted when the group value changes.\n     * Change events are only emitted when the value changes due to user interaction with\n     * a radio button (the same behavior as `<input type-\"radio\">`).\n     */\n    @Output() readonly change: EventEmitter<McRadioChange> = new EventEmitter<McRadioChange>();\n\n    /** Child radio buttons. */\n    @ContentChildren(forwardRef(() => McRadioButton), { descendants: true })\n    _radios: QueryList<McRadioButton>;\n\n    /**\n     * Selected value for group. Should equal the value of the selected radio button if there *is*\n     * a corresponding radio button with a matching value. If there is *not* such a corresponding\n     * radio button, this value persists to be applied in case a new radio button is added with a\n     * matching value.\n     */\n    private _value: any = null;\n\n    /** The HTML name attribute applied to radio buttons in this group. */\n    private _name: string = `mc-radio-group-${nextUniqueId++}`;\n\n    /** The currently selected radio button. Should match value. */\n    private _selected: McRadioButton | null = null;\n\n    /** Whether the `value` has been set to its initial value. */\n    private _isInitialized: boolean = false;\n\n    /** Whether the labels should appear after or before the radio-buttons. Defaults to 'after' */\n    private _labelPosition: 'before' | 'after' = 'after';\n\n    /** Whether the radio group is disabled. */\n    private _disabled: boolean = false;\n\n    /** Whether the radio group is required. */\n    private _required: boolean = false;\n\n    constructor(\n        private readonly _changeDetector: ChangeDetectorRef\n    ) {\n        super();\n    }\n\n    /** The method to be called in order to update ngModel */\n    // tslint:disable-next-line\n    controlValueAccessorChangeFn: (value: any) => void = () => {};\n\n    /**\n     * onTouch function registered via registerOnTouch (ControlValueAccessor).\n     * @docs-private\n     */\n    // tslint:disable-next-line\n    onTouched: () => any = () => {};\n\n    checkSelectedRadioButton() {\n        if (this._selected && !this._selected.checked) {\n            this._selected.checked = true;\n        }\n    }\n\n    /**\n     * Initialize properties once content children are available.\n     * This allows us to propagate relevant attributes to associated buttons.\n     */\n    ngAfterContentInit() {\n        // Mark this component as initialized in AfterContentInit because the initial value can\n        // possibly be set by NgModel on McRadioGroup, and it is possible that the OnInit of the\n        // NgModel occurs *after* the OnInit of the McRadioGroup.\n        this._isInitialized = true;\n    }\n\n    /**\n     * Mark this group as being \"touched\" (for ngModel). Meant to be called by the contained\n     * radio buttons upon their blur.\n     */\n    touch() {\n        if (this.onTouched) {\n            this.onTouched();\n        }\n    }\n\n    /** Dispatch change event with current selection and group value. */\n    emitChangeEvent(): void {\n        if (this._isInitialized) {\n            this.change.emit(new McRadioChange(this._selected!, this._value));\n        }\n    }\n\n    markRadiosForCheck() {\n        if (this._radios) {\n            this._radios.forEach((radio) => radio.markForCheck());\n        }\n    }\n\n    /**\n     * Sets the model value. Implemented as part of ControlValueAccessor.\n     */\n    writeValue(value: any) {\n        this.value = value;\n        this._changeDetector.markForCheck();\n    }\n\n    /**\n     * Registers a callback to be triggered when the model value changes.\n     * Implemented as part of ControlValueAccessor.\n     * @param fn Callback to be registered.\n     */\n    registerOnChange(fn: (value: any) => void) {\n        this.controlValueAccessorChangeFn = fn;\n    }\n\n    /**\n     * Registers a callback to be triggered when the control is touched.\n     * Implemented as part of ControlValueAccessor.\n     * @param fn Callback to be registered.\n     */\n    registerOnTouched(fn: any) {\n        this.onTouched = fn;\n    }\n\n    /**\n     * Sets the disabled state of the control. Implemented as a part of ControlValueAccessor.\n     * @param isDisabled Whether the control should be disabled.\n     */\n    setDisabledState(isDisabled: boolean) {\n        this.disabled = isDisabled;\n        this._changeDetector.markForCheck();\n    }\n\n    private updateRadioButtonNames(): void {\n        if (this._radios) {\n            this._radios.forEach((radio) => {\n                radio.name = this.name;\n            });\n        }\n    }\n\n    /** Updates the `selected` radio button from the internal _value state. */\n    private updateSelectedRadioFromValue(): void {\n        // If the value already matches the selected radio, do nothing.\n        const isAlreadySelected = this._selected !== null && this._selected.value === this._value;\n\n        if (this._radios != null && !isAlreadySelected) {\n            this._selected = null;\n            this._radios.forEach((radio) => {\n                radio.checked = this.value === radio.value;\n                if (radio.checked) {\n                    this._selected = radio;\n                }\n            });\n        }\n    }\n}\n\n\n// Boilerplate for applying mixins to McRadioButton.\n/** @docs-private */\nexport class McRadioButtonBase {\n    // Since the disabled property is manually defined for the McRadioButton and isn't set up in\n    // the mixin base class. To be able to use the tabindex mixin, a disabled property must be\n    // defined to properly work.\n    disabled: boolean;\n\n    constructor(public _elementRef: ElementRef) {}\n}\n\nexport const _McRadioButtonMixinBase:\n    CanColorCtor &\n    HasTabIndexCtor &\n    typeof McRadioButtonBase =\n        mixinColor(mixinTabIndex(McRadioButtonBase));\n\n\n@Component({\n    selector: 'mc-radio-button',\n    templateUrl: 'radio.component.html',\n    styleUrls: ['radio.css'],\n    inputs: ['color', 'tabIndex'],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    exportAs: 'mcRadioButton',\n    host: {\n        class: 'mc-radio-button',\n        '[attr.id]': 'id',\n        '[class.mc-checked]': 'checked',\n        '[class.mc-disabled]': 'disabled',\n        '(focus)': '_inputElement.nativeElement.focus()'\n    }\n})\nexport class McRadioButton extends _McRadioButtonMixinBase\n    implements OnInit, OnDestroy, CanColor, HasTabIndex {\n\n    private readonly _uniqueId: string = `mc-radio-${++nextUniqueId}`;\n\n    /* tslint:disable:member-ordering */\n\n    /** The unique ID for the radio button. */\n    @Input() id: string = this._uniqueId;\n\n    /** Analog to HTML 'name' attribute used to group radios for unique selection. */\n    @Input() name: string;\n\n    /** Used to set the 'aria-label' attribute on the underlying input element. */\n    @Input('aria-label') ariaLabel: string;\n\n    /** The 'aria-labelledby' attribute takes precedence as the element's text alternative. */\n    @Input('aria-labelledby') ariaLabelledby: string;\n\n    /** The 'aria-describedby' attribute is read after the element's label and field type. */\n    @Input('aria-describedby') ariaDescribedby: string;\n\n    /** Whether this radio button is checked. */\n    @Input()\n    get checked(): boolean { return this._checked; }\n    set checked(value: boolean) {\n        const newCheckedState = toBoolean(value);\n\n        if (this._checked !== newCheckedState) {\n            this._checked = newCheckedState;\n\n            if (newCheckedState && this.radioGroup && this.radioGroup.value !== this.value) {\n                this.radioGroup.selected = this;\n            } else if (!newCheckedState && this.radioGroup && this.radioGroup.value === this.value) {\n                // When unchecking the selected radio button, update the selected radio\n                // property on the group.\n                this.radioGroup.selected = null;\n            }\n\n            if (newCheckedState) {\n                // Notify all radio buttons with the same name to un-check.\n                this._radioDispatcher.notify(this.id, this.name);\n            }\n            this._changeDetector.markForCheck();\n        }\n    }\n\n    /** The value of this radio button. */\n    @Input()\n    get value(): any { return this._value; }\n    set value(value: any) {\n        if (this._value !== value) {\n            this._value = value;\n            if (this.radioGroup != null) {\n                if (!this.checked) {\n                    // Update checked when the value changed to match the radio group's value\n                    this.checked = this.radioGroup.value === value;\n                }\n                if (this.checked) {\n                    this.radioGroup.selected = this;\n                }\n            }\n        }\n    }\n\n    /** Whether the radio button is disabled. */\n    @Input()\n    get disabled(): boolean {\n        return this._disabled || (this.radioGroup != null && this.radioGroup.disabled);\n    }\n    set disabled(value: boolean) {\n        const newDisabledState = toBoolean(value);\n\n        if (this._disabled !== newDisabledState) {\n\n            this._disabled = newDisabledState;\n            this._changeDetector.markForCheck();\n        }\n    }\n\n    /** Whether the radio button is required. */\n    @Input()\n    get required(): boolean {\n        return this._required || (this.radioGroup && this.radioGroup.required);\n    }\n    set required(value: boolean) {\n        this._required = toBoolean(value);\n    }\n\n    /** Whether the label should appear after or before the radio button. Defaults to 'after' */\n    @Input()\n    get labelPosition(): 'before' | 'after' {\n        return this._labelPosition || (this.radioGroup && this.radioGroup.labelPosition) || 'after';\n    }\n    set labelPosition(value) {\n        this._labelPosition = value;\n    }\n    private _labelPosition: 'before' | 'after';\n\n    /** The native `<input type=radio>` element */\n    @ViewChild('input') _inputElement: ElementRef;\n\n    /**\n     * Event emitted when the checked state of this radio button changes.\n     * Change events are only emitted when the value changes due to user interaction with\n     * the radio button (the same behavior as `<input type-\"radio\">`).\n     */\n    @Output() readonly change: EventEmitter<McRadioChange> = new EventEmitter<McRadioChange>();\n\n    /** The parent radio group. May or may not be present. */\n    radioGroup: McRadioGroup;\n\n    @Input()\n    isFocused: boolean = false;\n\n    /** ID of the native input element inside `<mc-radio-button>` */\n    get inputId(): string { return `${this.id || this._uniqueId}-input`; }\n\n    /** Whether this radio is checked. */\n    private _checked: boolean = false;\n\n    /** Whether this radio is disabled. */\n    private _disabled: boolean;\n\n    /** Whether this radio is required. */\n    private _required: boolean;\n\n    /** Value assigned to this radio. */\n    private _value: any = null;\n\n    /** Unregister function for _radioDispatcher */\n    // tslint:disable-next-line\n    private readonly removeUniqueSelectionListener: () => void = () => {};\n\n    constructor(\n        @Optional() radioGroup: McRadioGroup,\n        elementRef: ElementRef,\n        private readonly _changeDetector: ChangeDetectorRef,\n        private readonly _radioDispatcher: UniqueSelectionDispatcher\n    ) {\n\n        super(elementRef);\n\n        this.radioGroup = radioGroup;\n\n        this.removeUniqueSelectionListener =\n            _radioDispatcher.listen((id: string, name: string) => {\n                if (id !== this.id && name === this.name) {\n                    this.checked = false;\n                }\n            });\n    }\n\n    ngOnInit() {\n        if (this.radioGroup) {\n            // If the radio is inside a radio group, determine if it should be checked\n            this.checked = this.radioGroup.value === this._value;\n            // Copy name from parent radio group\n            this.name = this.radioGroup.name;\n        }\n    }\n\n    ngOnDestroy() {\n        this.removeUniqueSelectionListener();\n    }\n\n    /** Focuses the radio button. */\n    // tslint:disable-next-line\n    focus(): void {}\n\n    /**\n     * Marks the radio button as needing checking for change detection.\n     * This method is exposed because the parent radio group will directly\n     * update bound properties of the radio button.\n     */\n    markForCheck() {\n        // When group value changes, the button will not be notified. Use `markForCheck` to explicit\n        // update radio button's status\n        this._changeDetector.markForCheck();\n    }\n\n    onInputClick(event: Event) {\n        // We have to stop propagation for click events on the visual hidden input element.\n        // By default, when a user clicks on a label element, a generated click event will be\n        // dispatched on the associated input element. Since we are using a label element as our\n        // root container, the click event on the `radio-button` will be executed twice.\n        // The real click event will bubble up, and the generated click event also tries to bubble up.\n        // This will lead to multiple click events.\n        // Preventing bubbling for the second event will solve that issue.\n        event.stopPropagation();\n    }\n\n    onInputChange(event: Event) {\n        // We always have to stop propagation on the change event.\n        // Otherwise the change event, from the input element, will bubble up and\n        // emit its event object to the `change` output.\n        event.stopPropagation();\n\n        const groupValueChanged = this.radioGroup && this.value !== this.radioGroup.value;\n        this.checked = true;\n        this.emitChangeEvent();\n\n        if (this.radioGroup) {\n            this.radioGroup.controlValueAccessorChangeFn(this.value);\n            this.radioGroup.touch();\n            if (groupValueChanged) {\n                this.radioGroup.emitChangeEvent();\n            }\n        }\n    }\n\n    /** Dispatch change event with current value. */\n    private emitChangeEvent(): void {\n        this.change.emit(new McRadioChange(this, this._value));\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { A11yModule } from '@ptsecurity/cdk/a11y';\nimport { McCommonModule } from '@ptsecurity/mosaic/core';\n\nimport { McRadioButton, McRadioGroup } from './radio.component';\n\n\n@NgModule({\n    imports: [CommonModule, A11yModule, McCommonModule],\n    exports: [McRadioGroup, McRadioButton],\n    declarations: [McRadioGroup, McRadioButton]\n})\nexport class McRadioModule {\n}\n","import { Directive, Input } from '@angular/core';\n\nimport { CdkTreeNodeDef } from '@ptsecurity/cdk/tree';\n\n\n@Directive({\n    selector: '[mcTreeNodeDef]',\n    inputs: ['when: mcTreeNodeDefWhen'],\n    providers: [{ provide: CdkTreeNodeDef, useExisting: McTreeNodeDef }]\n})\nexport class McTreeNodeDef<T> extends CdkTreeNodeDef<T> {\n    @Input('mcTreeNode') data: T;\n}\n","import { Directive, Input, OnInit } from '@angular/core';\nimport { CdkTreeNodePadding } from '@ptsecurity/cdk/tree';\n\n\n@Directive({\n    selector: '[mcTreeNodePadding]',\n    providers: [{ provide: CdkTreeNodePadding, useExisting: McTreeNodePadding }]\n})\nexport class McTreeNodePadding<T> extends CdkTreeNodePadding<T> implements OnInit {\n    get leftPadding(): number {\n        return (this._withIcon ? 0 : this._iconWidth) + this._baseLeftPadding;\n    }\n\n    _baseLeftPadding: number = 6;\n    _iconWidth: number = 20;\n    _indent: number = 16;\n\n    @Input('mcTreeNodePadding') level: number;\n\n    @Input('mcTreeNodePaddingIndent') indent: number;\n\n    _withIcon: boolean;\n\n    _paddingIndent(): string | null {\n        const nodeLevel = (this._treeNode.data && this._tree.treeControl.getLevel)\n            ? this._tree.treeControl.getLevel(this._treeNode.data)\n            : null;\n\n        const level = this._level || nodeLevel;\n\n        return level ? `${(level * this._indent) + this.leftPadding}px` : `${this._baseLeftPadding}px`;\n    }\n\n    ngOnInit(): void {\n        this._withIcon = this._tree.treeControl.isExpandable(this._treeNode.data);\n        this._setPadding();\n    }\n}\n","import {\n    AfterContentInit,\n    Attribute,\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component, ContentChildren, EventEmitter, forwardRef, Input, IterableDiffer,\n    IterableDiffers, Output, QueryList,\n    ViewChild,\n    ViewEncapsulation,\n    Directive, ElementRef, Inject\n} from '@angular/core';\nimport { NodeDef, ViewData } from '@angular/core/src/view';\n\nimport { SelectionModel } from '@ptsecurity/cdk/collections';\nimport { CdkTreeNode, CdkTree, CdkTreeNodeOutlet } from '@ptsecurity/cdk/tree';\n\nimport {\n    CanDisable, CanDisableCtor,\n    HasTabIndex,\n    HasTabIndexCtor,\n    mixinDisabled,\n    mixinTabIndex,\n    toBoolean\n} from '@ptsecurity/mosaic/core';\n\nimport { FocusKeyManager } from '@ptsecurity/cdk/a11y';\n\nimport { END, ENTER, HOME, LEFT_ARROW, PAGE_DOWN, PAGE_UP, RIGHT_ARROW, SPACE } from '@ptsecurity/cdk/keycodes';\n\n\n/**\n * Wrapper for the CdkTree node with Material design styles.\n */\n@Directive({\n    exportAs: 'mcTreeNodeOption',\n    selector: 'mc-tree-node-option',\n    host: {\n        tabindex: '-1',\n        '[class.mc-selected]': 'selected',\n        '[class.mc-focused]': '_hasFocus',\n        '[attr.aria-expanded]': 'isExpanded',\n        '[attr.aria-level]': 'role === \"treeitem\" ? level : null',\n        class: 'mc-tree-node',\n\n        '(focus)': '_handleFocus()',\n        '(blur)': '_handleBlur()',\n\n        '(click)': '_handleClick()'\n    },\n    providers: [\n        { provide: CdkTreeNode, useExisting: McTreeNodeOption }\n    ]\n})\nexport class McTreeNodeOption<T> extends CdkTreeNode<T> implements CanDisable {\n    @Input() role: 'treeitem' | 'group' = 'treeitem';\n\n    @Input()\n    get disabled() {\n        return this._disabled;\n    }\n\n    set disabled(value: any) {\n        const newValue = toBoolean(value);\n\n        if (newValue !== this._disabled) {\n            this._disabled = newValue;\n        }\n    }\n\n    @Input()\n    get selected(): boolean {\n        return this.treeSelection.selectedOptions && this.treeSelection.selectedOptions.isSelected(this) || false;\n    }\n\n    set selected(value: boolean) {\n        const isSelected = toBoolean(value);\n\n        if (isSelected !== this._selected) {\n            this.setSelected(isSelected);\n\n            // this.treeSelection._reportValueChange();\n        }\n    }\n\n    private _hasFocus: boolean = false;\n\n    private _disabled: boolean = false;\n    private _selected: boolean = false;\n\n    constructor(\n        protected _elementRef: ElementRef,\n        @Inject(forwardRef(() => McTreeSelection))\n        protected treeSelection: McTreeSelection<T>\n    ) {\n        super(_elementRef, treeSelection);\n    }\n\n    focus(): void {\n        this._elementRef.nativeElement.focus();\n\n        this.treeSelection.setFocusedOption(this);\n    }\n\n    toggle(): void {\n        this.selected = !this.selected;\n    }\n\n    setSelected(selected: boolean) {\n        if (this._selected === selected || !this.treeSelection.selectedOptions) { return; }\n\n        this._selected = selected;\n\n        if (selected) {\n            this.treeSelection.selectedOptions.select(this);\n        } else {\n            this.treeSelection.selectedOptions.deselect(this);\n        }\n\n        // this._changeDetector.markForCheck();\n    }\n\n    _getHeight(): number {\n        return this._elementRef.nativeElement.getClientRects()[0].height;\n    }\n\n    _handleFocus(): void {\n        if (this.disabled || this._hasFocus) { return; }\n\n        this._hasFocus = true;\n    }\n\n    _handleBlur(): void {\n        this._hasFocus = false;\n    }\n\n    _handleClick(): void {\n        if (this.disabled) { return; }\n\n        this.treeSelection.setFocusedOption(this);\n    }\n}\n\nexport const _McTreeSelectionBase:\n    HasTabIndexCtor &\n    CanDisableCtor &\n    typeof CdkTree\n    = mixinTabIndex(mixinDisabled(CdkTree));\n\nexport class McTreeNavigationChange {\n    constructor(\n        public source: McTreeSelection<any>,\n        public option: McTreeNodeOption<any>\n    ) {}\n}\n\nexport class McTreeSelectionChange {\n    constructor(\n        public source: McTreeSelection<any>,\n        public option: McTreeNodeOption<any>\n    ) {}\n}\n\n@Component({\n    exportAs: 'mcTreeSelection',\n    selector: 'mc-tree-selection',\n    template: `<ng-container cdkTreeNodeOutlet></ng-container>`,\n    host: {\n        '[tabIndex]': 'tabIndex',\n        class: 'mc-tree-selection',\n        role: 'tree-selection',\n        '(keydown)': '_onKeyDown($event)',\n        '(window:resize)': 'updateScrollSize()'\n    },\n    styleUrls: ['./tree.css'],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    providers: [{ provide: CdkTree, useExisting: McTreeSelection }]\n})\nexport class McTreeSelection<T> extends _McTreeSelectionBase<T>\n    implements AfterContentInit, CanDisable, HasTabIndex {\n    // Outlets within the tree's template where the dataNodes will be inserted.\n    @ViewChild(CdkTreeNodeOutlet) _nodeOutlet: CdkTreeNodeOutlet;\n\n    @ContentChildren(forwardRef(() => McTreeNodeOption)) options: QueryList<McTreeNodeOption<T>>;\n\n    _keyManager: FocusKeyManager<McTreeNodeOption<T>>;\n\n    selectedOptions: SelectionModel<McTreeNodeOption<T>>;\n\n    _disabled: boolean = false;\n    tabIndex: number;\n    multiple: boolean;\n    autoSelect: boolean;\n    noUnselect: boolean;\n\n    // todo temporary solution\n    withShift: boolean;\n    withCtrl: boolean;\n\n    @Input()\n    get disabled(): boolean {\n        return this._disabled;\n    }\n\n    set disabled(rawValue: boolean) {\n        const value = toBoolean(rawValue);\n\n        if (this._disabled !== value) {\n            this._disabled = value;\n\n            if (this._disabled) {\n                console.log('need disable all options');\n            } else {\n                console.log('need enable all options');\n            }\n        }\n    }\n\n    @Output() readonly navigationChange = new EventEmitter<McTreeNavigationChange>();\n\n    @Output() readonly selectionChange = new EventEmitter<McTreeSelectionChange>();\n\n    constructor(\n        private _elementRef: ElementRef,\n        _differs: IterableDiffers,\n        _changeDetectorRef: ChangeDetectorRef,\n        @Attribute('tabindex') tabIndex: string,\n        @Attribute('multiple') multiple: string,\n        @Attribute('auto-select') autoSelect: string,\n        @Attribute('no-unselect') noUnselect: string\n    ) {\n        super(_differs, _changeDetectorRef);\n\n        this.tabIndex = parseInt(tabIndex) || 0;\n\n        this.multiple = multiple === null ? true : toBoolean(multiple);\n        this.autoSelect = autoSelect === null ? true : toBoolean(autoSelect);\n        this.noUnselect = noUnselect === null ? true : toBoolean(noUnselect);\n\n        this.selectedOptions = new SelectionModel<McTreeNodeOption<T>>(this.multiple);\n    }\n\n    _onKeyDown(event: KeyboardEvent) {\n        const keyCode = event.keyCode;\n        this.withShift = event.shiftKey;\n        this.withCtrl = event.ctrlKey;\n\n        switch (keyCode) {\n            case LEFT_ARROW:\n                if (this._keyManager.activeItem) {\n                    this.treeControl.collapse(this._keyManager.activeItem.data);\n                }\n\n                event.preventDefault();\n\n                break;\n            case RIGHT_ARROW:\n                if (this._keyManager.activeItem) {\n                    this.treeControl.expand(this._keyManager.activeItem.data);\n                }\n\n                event.preventDefault();\n\n                break;\n            case SPACE:\n            case ENTER:\n                this.toggleFocusedOption();\n                event.preventDefault();\n\n                break;\n            case HOME:\n                this._keyManager.setFirstItemActive();\n                event.preventDefault();\n\n                break;\n            case END:\n                this._keyManager.setLastItemActive();\n                event.preventDefault();\n\n                break;\n            case PAGE_UP:\n                this._keyManager.setPreviousPageItemActive();\n                event.preventDefault();\n\n                break;\n            case PAGE_DOWN:\n                this._keyManager.setNextPageItemActive();\n                event.preventDefault();\n\n                break;\n            default:\n                this._keyManager.onKeydown(event);\n        }\n    }\n\n    ngAfterContentInit(): void {\n        this._keyManager = new FocusKeyManager<McTreeNodeOption<T>>(this.options)\n            .withTypeAhead()\n            .withVerticalOrientation(true)\n            .withHorizontalOrientation(null);\n    }\n\n    updateScrollSize(): void {\n        if (!this.options.first) { return; }\n\n        this._keyManager.withScrollSize(Math.floor(this._getHeight() / this.options.first._getHeight()));\n    }\n\n    setFocusedOption(option: McTreeNodeOption<T>): void {\n        this._keyManager.updateActiveItem(option);\n\n        if (this.withShift && this.multiple) {\n            const previousIndex = this._keyManager.previousActiveItemIndex;\n            const activeIndex = this._keyManager.activeItemIndex;\n\n            if (previousIndex < activeIndex) {\n                this.options.forEach((item, index) => {\n                    if (index >= previousIndex && index <= activeIndex) { item.setSelected(true); }\n                });\n            } else {\n                this.options.forEach((item, index) => {\n                    if (index >= activeIndex && index <= previousIndex) { item.setSelected(true); }\n                });\n            }\n\n            this.withShift = false;\n        } else if (this.withCtrl) {\n            this.withCtrl = false;\n\n            if (!this._canDeselectLast(option)) { return; }\n\n            option.toggle();\n        } else {\n            if (this.autoSelect) {\n                this.options.forEach((item) => item.setSelected(false));\n                option.setSelected(true);\n            }\n        }\n\n        this._emitNavigationEvent(option);\n    }\n\n    // Toggles the selected state of the currently focused option.\n    toggleFocusedOption(): void {\n        const focusedIndex = this._keyManager.activeItemIndex;\n\n        if (focusedIndex != null && this._isValidIndex(focusedIndex)) {\n            const focusedOption: McTreeNodeOption<T> = this.options.toArray()[focusedIndex];\n\n            if (focusedOption && this._canDeselectLast(focusedOption)) {\n                focusedOption.toggle();\n\n                // Emit a change event because the focused option changed its state through user interaction.\n                this._emitChangeEvent(focusedOption);\n            }\n        }\n    }\n\n    renderNodeChanges(\n        data: T[],\n        dataDiffer: IterableDiffer<T> = this._dataDiffer,\n        viewContainer: any = this._nodeOutlet.viewContainer,\n        parentData?: T\n    ) {\n        super.renderNodeChanges(data, dataDiffer, viewContainer, parentData);\n\n        const arrayOfInstances = [];\n\n        viewContainer._embeddedViews.forEach((view: ViewData) => {\n            const viewDef = view.def;\n\n            viewDef.nodes.forEach((node: NodeDef) => {\n                if (viewDef.nodeMatchedQueries === node.matchedQueryIds) {\n                    const nodeData: any = view.nodes[node.nodeIndex];\n\n                    arrayOfInstances.push(nodeData.instance as never);\n                }\n            });\n        });\n\n        if (this.options) {\n            this.options.reset(arrayOfInstances);\n            this.options.notifyOnChanges();\n        }\n\n        this.updateScrollSize();\n    }\n\n    _getHeight(): number {\n        return this._elementRef.nativeElement.getClientRects()[0].height;\n    }\n\n    _emitNavigationEvent(option: McTreeNodeOption<T>): void {\n        this.navigationChange.emit(new McTreeNavigationChange(this, option));\n    }\n\n    _emitChangeEvent(option: McTreeNodeOption<T>): void {\n        this.selectionChange.emit(new McTreeNavigationChange(this, option));\n    }\n\n    /**\n     * Utility to ensure all indexes are valid.\n     * @param index The index to be checked.\n     * @returns True if the index is valid for our list of options.\n     */\n    private _isValidIndex(index: number): boolean {\n        return index >= 0 && index < this.options.length;\n    }\n\n    private _canDeselectLast(option: McTreeNodeOption<T>): boolean {\n        return !(this.noUnselect && this.selectedOptions.selected.length === 1 && option.selected);\n    }\n}\n\n","import { NgModule } from '@angular/core';\n\nimport { CommonModule } from '@angular/common';\nimport { CdkTreeModule } from '@ptsecurity/cdk/tree';\n\nimport { McTreeNodeDef } from './node';\nimport { McTreeNodePadding } from './padding';\nimport { McTreeSelection, McTreeNodeOption } from './tree-selection';\n\n\nconst MC_TREE_DIRECTIVES = [\n    McTreeNodeDef,\n    McTreeNodePadding,\n    McTreeSelection,\n    McTreeNodeOption\n];\n\n@NgModule({\n    imports: [CommonModule, CdkTreeModule],\n    exports: MC_TREE_DIRECTIVES,\n    declarations: MC_TREE_DIRECTIVES\n})\nexport class McTreeModule {}\n","import { ICollectionViewer, DataSource } from '@ptsecurity/cdk/collections';\nimport { FlatTreeControl, ITreeControl } from '@ptsecurity/cdk/tree';\nimport { BehaviorSubject, merge, Observable } from 'rxjs';\nimport { map, take } from 'rxjs/operators';\n\n\n/**\n * Tree flattener to convert a normal type of node to node with children & level information.\n * Transform nested nodes of type `T` to flattened nodes of type `F`.\n *\n * For example, the input data of type `T` is nested, and contains its children data:\n *   SomeNode: {\n *     key: 'Fruits',\n *     children: [\n *       NodeOne: {\n *         key: 'Apple',\n *       },\n *       NodeTwo: {\n *        key: 'Pear',\n *      }\n *    ]\n *  }\n *  After flattener flatten the tree, the structure will become\n *  SomeNode: {\n *    key: 'Fruits',\n *    expandable: true,\n *    level: 1\n *  },\n *  NodeOne: {\n *    key: 'Apple',\n *    expandable: false,\n *    level: 2\n *  },\n *  NodeTwo: {\n *   key: 'Pear',\n *   expandable: false,\n *   level: 2\n * }\n * and the output flattened type is `F` with additional information.\n */\nexport class McTreeFlattener<T, F> {\n\n    constructor(public transformFunction: (node: T, level: number) => F,\n                public getLevel: (node: F) => number,\n                public isExpandable: (node: F) => boolean,\n                public getChildren: (node: T) => Observable<T[]>) {\n    }\n\n    _flattenNode(node: T, level: number,\n                 resultNodes: F[], parentMap: boolean[]): F[] {\n        const flatNode = this.transformFunction(node, level);\n        resultNodes.push(flatNode);\n\n        if (this.isExpandable(flatNode)) {\n            this.getChildren(node).pipe(take(1)).subscribe((children) => {\n                children.forEach((child, index) => {\n                    const childParentMap: boolean[] = parentMap.slice();\n                    childParentMap.push(index !== children.length - 1);\n                    this._flattenNode(child, level + 1, resultNodes, childParentMap);\n                });\n            });\n        }\n\n        return resultNodes;\n    }\n\n    /**\n     * Flatten a list of node type T to flattened version of node F.\n     * Please note that type T may be nested, and the length of `structuredData` may be different\n     * from that of returned list `F[]`.\n     */\n    flattenNodes(structuredData: T[]): F[] {\n        const resultNodes: F[] = [];\n        structuredData.forEach((node) => this._flattenNode(node, 0, resultNodes, []));\n\n        return resultNodes;\n    }\n\n    /**\n     * Expand flattened node with current expansion status.\n     * The returned list may have different length.\n     */\n    expandFlattenedNodes(nodes: F[], treeControl: ITreeControl<F>): F[] {\n        const results: F[] = [];\n        const currentExpand: boolean[] = [];\n        currentExpand[0] = true;\n\n        nodes.forEach((node) => {\n            let expand = true;\n            for (let i = 0; i <= this.getLevel(node); i++) {\n                expand = expand && currentExpand[i];\n            }\n\n            if (expand) { results.push(node); }\n\n            if (this.isExpandable(node)) {\n                currentExpand[this.getLevel(node) + 1] = treeControl.isExpanded(node);\n            }\n        });\n\n        return results;\n    }\n}\n\n\n/**\n * Data source for flat tree.\n * The data source need to handle expansion/collapsion of the tree node and change the data feed\n * to `McTree`.\n * The nested tree nodes of type `T` are flattened through `MсTreeFlattener`, and converted\n * to type `F` for `McTree` to consume.\n */\nexport class McTreeFlatDataSource<T, F> extends DataSource<F> {\n    _flattenedData = new BehaviorSubject<F[]>([]);\n\n    _expandedData = new BehaviorSubject<F[]>([]);\n\n    _data: BehaviorSubject<T[]>;\n\n    get data() {\n        return this._data.value;\n    }\n\n    set data(value: T[]) {\n        this._data.next(value);\n        this._flattenedData.next(this.treeFlattener.flattenNodes(this.data));\n        this.treeControl.dataNodes = this._flattenedData.value;\n    }\n\n    constructor(private treeControl: FlatTreeControl<F>,\n                private treeFlattener: McTreeFlattener<T, F>,\n                initialData: T[] = []) {\n        super();\n        this._data = new BehaviorSubject<T[]>(initialData);\n    }\n\n    connect(collectionViewer: ICollectionViewer): Observable<F[]> {\n        const changes = [\n            collectionViewer.viewChange,\n            this.treeControl.expansionModel.onChange!,\n            this._flattenedData\n        ];\n\n        return merge(...changes).pipe(map(() => {\n            this._expandedData.next(\n                this.treeFlattener.expandFlattenedNodes(this._flattenedData.value, this.treeControl));\n\n            return this._expandedData.value;\n        }));\n    }\n\n    disconnect() {\n        // no op\n    }\n}\n\n","import { ICollectionViewer, DataSource } from '@ptsecurity/cdk/collections';\nimport { BehaviorSubject, merge, Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\n\n/**\n * Data source for nested tree.\n *\n * The data source for nested tree doesn't have to consider node flattener, or the way to expand\n * or collapse. The expansion/collapsion will be handled by ITreeControl and each non-leaf node.\n */\nexport class McTreeNestedDataSource<T> extends DataSource<T> {\n    _data = new BehaviorSubject<T[]>([]);\n\n    /**\n     * Data for the nested tree\n     */\n    get data() {\n        return this._data.value;\n    }\n\n    set data(value: T[]) {\n        this._data.next(value);\n    }\n\n    connect(collectionViewer: ICollectionViewer): Observable<T[]> {\n        return merge(...[collectionViewer.viewChange, this._data])\n            .pipe(map(() => this.data));\n    }\n\n    disconnect() {\n        // no op\n    }\n}\n\n","import { Directive, TemplateRef } from '@angular/core';\n\n\n/** Decorates the `ng-template` tags and reads out the template from it. */\n@Directive({ selector: '[mcTabContent]' })\nexport class McTabContent {\n    constructor(public template: TemplateRef<any>) { }\n}\n","import { Directive } from '@angular/core';\nimport { CdkPortal } from '@ptsecurity/cdk/portal';\n\n\n/** Used to flag tab labels for use with the portal directive */\n@Directive({\n    selector: '[mc-tab-label], [mcTabLabel]'\n})\nexport class McTabLabel extends CdkPortal {}\n\n// TODO: workaround for https://github.com/angular/material2/issues/12760\n(McTabLabel as any).ctorParameters = () => (CdkPortal as any).ctorParameters;\n","import {\n    ChangeDetectionStrategy,\n    Component,\n    ContentChild,\n    Input,\n    OnChanges,\n    OnDestroy,\n    OnInit,\n    SimpleChanges,\n    TemplateRef,\n    ViewChild,\n    ViewContainerRef,\n    ViewEncapsulation\n} from '@angular/core';\nimport { TemplatePortal } from '@ptsecurity/cdk/portal';\nimport {\n    CanDisable,\n    CanDisableCtor,\n    mixinDisabled\n} from '@ptsecurity/mosaic/core';\nimport { Subject } from 'rxjs';\n\nimport { McTabContent } from './tab-content';\nimport { McTabLabel } from './tab-label';\n\n\nexport class McTabBase {}\nexport const mcTabMixinBase: CanDisableCtor & typeof McTabBase = mixinDisabled(\n    McTabBase\n);\n\n@Component({\n    selector: 'mc-tab',\n    // Create a template for the content of the <mc-tab> so that we can grab a reference to this\n    // TemplateRef and use it in a Portal to render the tab content in the appropriate place in the\n    // tab-group.\n    template: '<ng-template><ng-content></ng-content></ng-template>',\n    inputs: ['disabled'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n    exportAs: 'mcTab'\n})\nexport class McTab extends mcTabMixinBase\n    implements OnInit, CanDisable, OnChanges, OnDestroy {\n    /** @docs-private */\n    get content(): TemplatePortal | null {\n        return this.contentPortal;\n    }\n    /** Content for the tab label given by `<ng-template mc-tab-label>`. */\n    @ContentChild(McTabLabel)\n    templateLabel: McTabLabel;\n\n    /**\n     * Template provided in the tab content that will be used if present, used to enable lazy-loading\n     */\n    @ContentChild(McTabContent, { read: TemplateRef })\n    explicitContent: TemplateRef<any>;\n\n    /** Template inside the McTab view that contains an `<ng-content>`. */\n    @ViewChild(TemplateRef)\n    implicitContent: TemplateRef<any>;\n\n    /** Plain text label for the tab, used when there is no template label. */\n    @Input('label')\n    textLabel: string = '';\n\n    /** Aria label for the tab. */\n    @Input('aria-label')\n    ariaLabel: string;\n\n    /**\n     * Reference to the element that the tab is labelled by.\n     * Will be cleared if `aria-label` is set at the same time.\n     */\n    @Input('aria-labelledby')\n    ariaLabelledby: string;\n\n    /** Emits whenever the internal state of the tab changes. */\n    readonly stateChanges = new Subject<void>();\n\n    /**\n     * The relatively indexed position where 0 represents the center, negative is left, and positive\n     * represents the right.\n     */\n    position: number | null = null;\n\n    /**\n     * The initial relatively index origin of the tab if it was created and selected after there\n     * was already a selected tab. Provides context of what position the tab should originate from.\n     */\n    origin: number | null = null;\n\n    /**\n     * Whether the tab is currently active.\n     */\n    isActive = false;\n\n    /** Portal that will be the hosted content of the tab */\n    private contentPortal: TemplatePortal | null = null;\n\n    constructor(private viewContainerRef: ViewContainerRef) {\n        super();\n    }\n\n    ngOnChanges(changes: SimpleChanges): void {\n        if (\n            changes.hasOwnProperty('textLabel') ||\n            changes.hasOwnProperty('disabled')\n        ) {\n            this.stateChanges.next();\n        }\n    }\n\n    ngOnDestroy(): void {\n        this.stateChanges.complete();\n    }\n\n    ngOnInit(): void {\n        this.contentPortal = new TemplatePortal(\n            this.explicitContent || this.implicitContent,\n            this.viewContainerRef\n        );\n    }\n}\n","import {\n    animate,\n    state,\n    style,\n    transition,\n    trigger,\n    AnimationTriggerMetadata\n} from '@angular/animations';\n\n\nexport const mcTabsAnimations: {\n    readonly translateTab: AnimationTriggerMetadata;\n} = {\n    /** Animation translates a tab along the X axis. */\n    translateTab: trigger('translateTab', [\n        // Note: transitions to `none` instead of 0, because some browsers might blur the content.\n        state(\n            'center, void, left-origin-center, right-origin-center',\n            style({ transform: 'none' })\n        ),\n\n        // If the tab is either on the left or right, we additionally add a `min-height` of 1px\n        // in order to ensure that the element has a height before its state changes. This is\n        // necessary because Chrome does seem to skip the transition in RTL mode if the element does\n        // not have a static height and is not rendered. See related issue: #9465\n        state(\n            'left',\n            style({ transform: 'translate3d(-100%, 0, 0)', minHeight: '1px' })\n        ),\n        state(\n            'right',\n            style({ transform: 'translate3d(100%, 0, 0)', minHeight: '1px' })\n        ),\n\n        transition(\n            '* => left, * => right, left => center, right => center',\n            animate('{{animationDuration}} cubic-bezier(0.35, 0, 0.25, 1)')\n        ),\n        transition('void => left-origin-center', [\n            style({ transform: 'translate3d(-100%, 0, 0)' }),\n            animate('{{animationDuration}} cubic-bezier(0.35, 0, 0.25, 1)')\n        ]),\n        transition('void => right-origin-center', [\n            style({ transform: 'translate3d(100%, 0, 0)' }),\n            animate('{{animationDuration}} cubic-bezier(0.35, 0, 0.25, 1)')\n        ])\n    ])\n};\n","import { Injectable, Optional, SkipSelf } from '@angular/core';\nimport { Subject, Subscription } from 'rxjs';\n\nimport { McModalRef } from './modal-ref.class';\n\n\ninterface IRegisteredMeta {\n    modalRef: McModalRef;\n    afterOpenSubscription: Subscription;\n    afterCloseSubscription: Subscription;\n}\n\n@Injectable()\nexport class McModalControlService {\n\n    // Track singleton afterAllClose through over the injection tree\n    get afterAllClose(): Subject<void> {\n        return this.parentService ? this.parentService.afterAllClose : this.rootAfterAllClose;\n    }\n\n    // Track singleton openModals array through over the injection tree\n    get openModals(): McModalRef[] {\n        return this.parentService ? this.parentService.openModals : this.rootOpenModals;\n    }\n\n    // @ts-ignore\n    private rootOpenModals: McModalRef[] = this.parentService ? null : [];\n    // @ts-ignore\n    private rootAfterAllClose: Subject<void> = this.parentService ? null : new Subject<void>();\n    // @ts-ignore\n    private rootRegisteredMetaMap: Map<McModalRef, IRegisteredMeta> = this.parentService ? null : new Map();\n\n    // Registered modal for later usage\n    private get registeredMetaMap(): Map<McModalRef, IRegisteredMeta> {\n        return this.parentService ? this.parentService.registeredMetaMap : this.rootRegisteredMetaMap;\n    }\n\n    constructor(\n        @Optional() @SkipSelf() private parentService: McModalControlService) {\n    }\n\n    // Register a modal to listen its open/close\n    registerModal(modalRef: McModalRef): void {\n        if (!this.hasRegistered(modalRef)) {\n            const afterOpenSubscription = modalRef.afterOpen.subscribe(() => this.openModals.push(modalRef));\n            const afterCloseSubscription = modalRef.afterClose.subscribe(() => this.removeOpenModal(modalRef));\n\n            this.registeredMetaMap.set(modalRef, {modalRef, afterOpenSubscription, afterCloseSubscription});\n        }\n    }\n\n    hasRegistered(modalRef: McModalRef): boolean {\n        return this.registeredMetaMap.has(modalRef);\n    }\n\n    // Close all registered opened modals\n    closeAll(): void {\n        let i = this.openModals.length;\n\n        while (i--) {\n            this.openModals[i].close();\n        }\n    }\n\n    private removeOpenModal(modalRef: McModalRef): void {\n        const index = this.openModals.indexOf(modalRef);\n\n        if (index > -1) {\n            this.openModals.splice(index, 1);\n\n            if (!this.openModals.length) {\n                this.afterAllClose.next();\n            }\n        }\n    }\n}\n","import { Observable } from 'rxjs';\n\nimport { McModalComponent } from './modal.component';\n\n\n/**\n * API class that public to users to handle the modal instance.\n * McModalRef is aim to avoid accessing to the modal instance directly by users.\n */\nexport abstract class McModalRef<T = any, R = any> {\n    abstract afterOpen: Observable<void>;\n    abstract afterClose: Observable<R>;\n\n    abstract open(): void;\n\n    abstract close(result?: R): void;\n\n    abstract destroy(result?: R): void;\n\n    /**\n     * Trigger the nzOnOk/nzOnCancel by manual\n     */\n    abstract triggerOk(): void;\n\n    abstract triggerCancel(): void;\n\n    // /**\n    //  * Return the ComponentRef of nzContent when specify nzContent as a Component\n    //  * Note: this method may return undefined if the Component has not ready yet.\n    //    (it only available after Modal's ngOnInit)\n    //  */\n    // abstract getContentComponentRef(): ComponentRef<{}>;\n\n    /**\n     * Return the component instance of nzContent when specify nzContent as a Component\n     * Note: this method may return undefined if the Component has not ready yet.\n     * (it only available after Modal's ngOnInit)\n     */\n    abstract getContentComponent(): T;\n\n    /**\n     * Get the dom element of this Modal\n     */\n    abstract getElement(): HTMLElement;\n\n    /**\n     * Get the instance of the Modal itself\n     */\n    abstract getInstance(): McModalComponent;\n}\n","export interface IClickPosition {\n    x: number;\n    y: number;\n}\n\nexport class ModalUtil {\n    private lastPosition: IClickPosition;\n\n    constructor(private document: Document) {\n        this.lastPosition = {x: -1, y: -1};\n        this.listenDocumentClick();\n    }\n\n    getLastClickPosition(): IClickPosition {\n        return this.lastPosition;\n    }\n\n    listenDocumentClick(): void {\n        this.document.addEventListener('click', (event: MouseEvent) => {\n            this.lastPosition = {x: event.clientX, y: event.clientY};\n        });\n    }\n}\n\nexport default new ModalUtil(document);\n","import { DOCUMENT } from '@angular/common';\nimport {\n    AfterViewInit, ChangeDetectionStrategy, ChangeDetectorRef,\n    Component,\n    ComponentFactoryResolver,\n    ComponentRef,\n    ElementRef,\n    EventEmitter,\n    Inject,\n    Injector,\n    Input,\n    OnChanges,\n    OnDestroy,\n    OnInit,\n    Output,\n    Renderer2,\n    SimpleChanges,\n    TemplateRef,\n    Type,\n    ViewChild,\n    ViewContainerRef, ViewEncapsulation\n} from '@angular/core';\nimport { ESCAPE } from '@ptsecurity/cdk/keycodes';\nimport { Overlay, OverlayRef } from '@ptsecurity/cdk/overlay';\nimport { McMeasureScrollbarService } from '@ptsecurity/mosaic/core';\nimport { Observable } from 'rxjs';\n\nimport { McModalControlService } from './modal-control.service';\nimport { McModalRef } from './modal-ref.class';\n// tslint:disable-next-line\nimport ModalUtil from './modal-util';\nimport { IModalButtonOptions, IModalOptions, ModalType, OnClickCallback } from './modal.type';\n\n\n// Duration when perform animations (ms)\nexport const MODAL_ANIMATE_DURATION = 200;\n\ntype AnimationState = 'enter' | 'leave' | null;\n\n@Component({\n    selector: 'mc-modal',\n    templateUrl: './modal.component.html',\n    styleUrls: ['./modal.css'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n    host: {\n        '(keydown)': 'onKeyDown($event)'\n    }\n})\nexport class McModalComponent<T = any, R = any> extends McModalRef<T, R>\n    implements OnInit, OnChanges, AfterViewInit, OnDestroy, IModalOptions {\n\n    // tslint:disable-next-line:no-any\n    @Input() mcModalType: ModalType = 'default';\n    // If not specified, will use <ng-content>\n    @Input() mcContent: string | TemplateRef<{}> | Type<T>;\n    // available when mcContent is a component\n    @Input() mcComponentParams: object;\n    // Default Modal ONLY\n    @Input() mcFooter: string | TemplateRef<{}> | IModalButtonOptions<T>[];\n\n    @Input()\n    get mcVisible() { return this._mcVisible; }\n    set mcVisible(value) { this._mcVisible = value; }\n    _mcVisible = false;\n\n    @Output() mcVisibleChange = new EventEmitter<boolean>();\n\n    @Input() mcZIndex: number = 1000;\n    @Input() mcWidth: number | string = 480;\n    @Input() mcWrapClassName: string;\n    @Input() mcClassName: string;\n    @Input() mcStyle: object;\n    @Input() mcTitle: string | TemplateRef<{}>;\n    @Input() mcCloseByESC: boolean = true;\n\n    @Input()\n    get mcClosable() { return this._mcClosable; }\n    set mcClosable(value) { this._mcClosable = value; }\n    _mcClosable = true;\n\n    @Input()\n    get mcMask() { return this._mcMask; }\n    set mcMask(value) { this._mcMask = value; }\n    _mcMask = true;\n\n    @Input()\n    get mcMaskClosable() { return this._mcMaskClosable; }\n    set mcMaskClosable(value) { this._mcMaskClosable = value; }\n    _mcMaskClosable = true;\n\n    @Input() mcMaskStyle: object;\n    @Input() mcBodyStyle: object;\n\n    // Trigger when modal open(visible) after animations\n    @Output() mcAfterOpen = new EventEmitter<void>();\n    // Trigger when modal leave-animation over\n    @Output() mcAfterClose = new EventEmitter<R>();\n\n    // --- Predefined OK & Cancel buttons\n    @Input() mcOkText: string;\n    @Input() mcOkType = 'primary';\n\n    @Input()\n    get mcOkLoading() { return this._mcOkLoading; }\n    set mcOkLoading(value) { this._mcOkLoading = value; }\n    _mcOkLoading = false;\n\n    @Input() @Output() mcOnOk: EventEmitter<T> | OnClickCallback<T> = new EventEmitter<T>();\n    // Only aim to focus the ok button that needs to be auto focused\n    @ViewChild('autoFocusButtonOk', {read: ElementRef}) autoFocusButtonOk: ElementRef;\n    @Input() mcCancelText: string;\n\n    @Input()\n    get mcCancelLoading() { return this._mcCancelLoading; }\n    set mcCancelLoading(value) { this._mcCancelLoading = value; }\n    _mcCancelLoading = false;\n\n    @Input() @Output() mcOnCancel: EventEmitter<T> | OnClickCallback<T> = new EventEmitter<T>();\n    @ViewChild('modalContainer') modalContainer: ElementRef;\n    @ViewChild('bodyContainer', {read: ViewContainerRef}) bodyContainer: ViewContainerRef;\n    maskAnimationClassMap: object;\n    modalAnimationClassMap: object;\n    // The origin point that animation based on\n    transformOrigin = '0px 0px 0px';\n\n    // Observable alias for mcAfterOpen\n    get afterOpen(): Observable<void> {\n        return this.mcAfterOpen.asObservable();\n    }\n\n    // Observable alias for mcAfterClose\n    get afterClose(): Observable<R> {\n        return this.mcAfterClose.asObservable();\n    }\n\n    get okText(): string {\n        return this.mcOkText;\n    }\n\n    get cancelText(): string {\n        return this.mcCancelText;\n    }\n\n    // Indicate whether this dialog should hidden\n    get hidden(): boolean {\n        return !this.mcVisible && !this.animationState;\n    }\n\n    // Handle the reference when using mcContent as Component\n    private contentComponentRef: ComponentRef<T>;\n    // Current animation state\n    private animationState: AnimationState;\n    private container: HTMLElement | OverlayRef;\n\n    constructor(\n        private overlay: Overlay,\n        private renderer: Renderer2,\n        private cfr: ComponentFactoryResolver,\n        private elementRef: ElementRef,\n        private viewContainer: ViewContainerRef,\n        private mcMeasureScrollbarService: McMeasureScrollbarService,\n        private modalControl: McModalControlService,\n        private changeDetector: ChangeDetectorRef,\n        @Inject(DOCUMENT) private document: any) {\n\n        super();\n    }\n\n    @Input() mcGetContainer: HTMLElement | OverlayRef | (() => HTMLElement | OverlayRef) = () => this.overlay.create();\n\n    ngOnInit() {\n\n        // Create component along without View\n        if (this.isComponent(this.mcContent)) {\n            this.createDynamicComponent(this.mcContent as Type<T>);\n        }\n\n        // Setup default button options\n        if (this.isModalButtons(this.mcFooter)) {\n            this.mcFooter = this.formatModalButtons(this.mcFooter as IModalButtonOptions<T>[]);\n        }\n\n        // Place the modal dom to elsewhere\n        this.container = typeof this.mcGetContainer === 'function' ? this.mcGetContainer() : this.mcGetContainer;\n        if (this.container instanceof HTMLElement) {\n            this.container.appendChild(this.elementRef.nativeElement);\n        } else if (this.container instanceof OverlayRef) {\n            // NOTE: only attach the dom to overlay, the view container is not changed actually\n            this.container.overlayElement.appendChild(this.elementRef.nativeElement);\n        }\n\n        // Register modal when afterOpen/afterClose is stable\n        this.modalControl.registerModal(this);\n    }\n\n    // [NOTE] NOT available when using by service!\n    // Because ngOnChanges never be called when using by service,\n    // here we can't support \"mcContent\"(Component) etc. as inputs that initialized dynamically.\n    // BUT: User also can change \"mcContent\" dynamically to trigger UI changes\n    // (provided you don't use \bComponent that needs initializations)\n    ngOnChanges(changes: SimpleChanges) {\n        if (changes.mcVisible) {\n            // Do not trigger animation while initializing\n            this.handleVisibleStateChange(this.mcVisible, !changes.mcVisible.firstChange);\n        }\n    }\n\n    ngAfterViewInit() {\n        // If using Component, it is the time to attach View while bodyContainer is ready\n        if (this.contentComponentRef) {\n            this.bodyContainer.insert(this.contentComponentRef.hostView);\n        }\n\n        if (this.autoFocusButtonOk) {\n            (this.autoFocusButtonOk.nativeElement as HTMLButtonElement).focus();\n        }\n    }\n\n    ngOnDestroy() {\n        if (this.container instanceof OverlayRef) {\n            this.container.dispose();\n        }\n    }\n\n    open() {\n        this.changeVisibleFromInside(true);\n    }\n\n    close(result?: R) {\n        this.changeVisibleFromInside(false, result);\n    }\n\n    // Destroy equals Close\n    destroy(result?: R) {\n        this.close(result);\n    }\n\n    triggerOk() {\n        this.onClickOkCancel('ok');\n    }\n\n    triggerCancel() {\n        this.onClickOkCancel('cancel');\n    }\n\n    getInstance(): McModalComponent {\n        return this;\n    }\n\n    getContentComponentRef(): ComponentRef<T> {\n        return this.contentComponentRef;\n    }\n\n    getContentComponent(): T {\n        return this.contentComponentRef && this.contentComponentRef.instance;\n    }\n\n    getElement(): HTMLElement {\n        return this.elementRef && this.elementRef.nativeElement;\n    }\n\n    onClickMask($event: MouseEvent) {\n        if (\n            this.mcMask &&\n            this.mcMaskClosable &&\n            ($event.target as HTMLElement).classList.contains('mc-modal-wrap') &&\n            this.mcVisible\n        ) {\n            this.onClickOkCancel('cancel');\n        }\n    }\n\n    // tslint:disable-next-line\n    isModalType(type: ModalType): boolean {\n        return this.mcModalType === type;\n    }\n\n    onKeyDown(event: KeyboardEvent): void {\n\n        if (event.keyCode === ESCAPE && this.container && (this.container instanceof OverlayRef)) {\n\n            this.close();\n            event.preventDefault();\n        }\n    }\n\n    // AoT\n    onClickCloseBtn() {\n        if (this.mcVisible) {\n            this.onClickOkCancel('cancel');\n        }\n    }\n\n    // AoT\n    // tslint:disable-next-line\n    onClickOkCancel(type: 'ok' | 'cancel') {\n        const trigger = { ok: this.mcOnOk, cancel: this.mcOnCancel }[type];\n        const loadingKey = { ok: 'mcOkLoading', cancel: 'mcCancelLoading' }[type];\n\n        if (trigger instanceof EventEmitter) {\n            trigger.emit(this.getContentComponent());\n        } else if (typeof trigger === 'function') {\n\n            const result = trigger(this.getContentComponent());\n            // Users can return \"false\" to prevent closing by default\n            const caseClose = (doClose: boolean | void | {}) => (doClose !== false) && this.close(doClose as R);\n\n            if (isPromise(result)) {\n                this[loadingKey] = true;\n                const handleThen = (doClose) => {\n                    this[loadingKey] = false;\n                    caseClose(doClose);\n                };\n                (result as Promise<void>).then(handleThen).catch(handleThen);\n            } else {\n                caseClose(result);\n            }\n        }\n    }\n\n    // AoT\n    isNonEmptyString(value: {}): boolean {\n        return typeof value === 'string' && value !== '';\n    }\n\n    // AoT\n    isTemplateRef(value: {}): boolean {\n        return value instanceof TemplateRef;\n    }\n\n    // AoT\n    isComponent(value: {}): boolean {\n        return value instanceof Type;\n    }\n\n    // AoT\n    isModalButtons(value: {}): boolean {\n        return Array.isArray(value) && value.length > 0;\n    }\n\n    // Do rest things when visible state changed\n    private handleVisibleStateChange(visible: boolean, animation: boolean = true, closeResult?: R): Promise<any> {\n        // Hide scrollbar at the first time when shown up\n        if (visible) {\n            this.changeBodyOverflow(1);\n        }\n\n        return Promise\n            .resolve(animation && this.animateTo(visible))\n            // Emit open/close event after animations over\n            .then(() => {\n                if (visible) {\n                    this.mcAfterOpen.emit();\n                } else {\n                    this.mcAfterClose.emit(closeResult);\n                    // Show/hide scrollbar when animation is over\n                    this.changeBodyOverflow();\n                }\n            });\n    }\n\n    // Lookup a button's property, if the prop is a function, call & then return the result, otherwise, return itself.\n    // AoT\n    // tslint:disable-next-line\n    getButtonCallableProp(options: IModalButtonOptions<T>, prop: string): {} {\n        const value = options[prop];\n        const args: any[] = [];\n        if (this.contentComponentRef) {\n            args.push(this.contentComponentRef.instance);\n        }\n\n        return typeof value === 'function' ? value.apply(options, args) : value;\n    }\n\n    // On mcFooter's modal button click\n    // AoT\n    // tslint:disable-next-line\n    onButtonClick(button: IModalButtonOptions<T>) {\n        // Call onClick directly\n        const result = this.getButtonCallableProp(button, 'onClick');\n        if (isPromise(result)) {\n            button.loading = true;\n            (result as Promise<{}>).then(() => button.loading = false).catch(() => button.loading = false);\n        }\n    }\n\n    // Change mcVisible from inside\n    private changeVisibleFromInside(visible: boolean, closeResult?: R): Promise<void> {\n        if (this.mcVisible !== visible) {\n            // Change mcVisible value immediately\n            this.mcVisible = visible;\n            this.mcVisibleChange.emit(visible);\n\n            return this.handleVisibleStateChange(visible, true, closeResult);\n        }\n\n        return Promise.resolve();\n    }\n\n    private changeAnimationState(state: AnimationState) {\n        this.animationState = state;\n        if (state) {\n            this.maskAnimationClassMap = {\n                [`fade-${state}`]: true,\n                [`fade-${state}-active`]: true\n            };\n            this.modalAnimationClassMap = {\n                [`zoom-${state}`]: true,\n                [`zoom-${state}-active`]: true\n            };\n        } else {\n            // @ts-ignore\n            this.maskAnimationClassMap = this.modalAnimationClassMap = null;\n        }\n\n        if (this.contentComponentRef) {\n            this.contentComponentRef.changeDetectorRef.markForCheck();\n        } else {\n            this.changeDetector.markForCheck();\n        }\n    }\n\n    private animateTo(isVisible: boolean): Promise<any> {\n        // Figure out the lastest click position when shows up\n        if (isVisible) {\n            // [NOTE] Using timeout due to the document.click event is fired later than visible change,\n            // so if not postponed to next event-loop, we can't get the lastest click position\n            window.setTimeout(() => this.updateTransformOrigin());\n        }\n\n        this.changeAnimationState(isVisible ? 'enter' : 'leave');\n\n        // Return when animation is over\n        return new Promise((resolve) => window.setTimeout(() => {\n            this.changeAnimationState(null);\n            resolve();\n        }, MODAL_ANIMATE_DURATION));\n    }\n\n    private formatModalButtons(buttons: IModalButtonOptions<T>[]): IModalButtonOptions<T>[] {\n        return buttons.map((button) => {\n\n            return {\n                ...{\n                    type: 'default',\n                    size: 'default',\n                    autoLoading: true,\n                    show: true,\n                    loading: false,\n                    disabled: false\n                },\n                ...button\n            };\n        });\n    }\n\n    /**\n     * Create a component dynamically but not attach to any View\n     * (this action will be executed when bodyContainer is ready)\n     * @param component Component class\n     */\n    private createDynamicComponent(component: Type<T>) {\n        const factory = this.cfr.resolveComponentFactory(component);\n        const childInjector = Injector.create({\n            providers: [{provide: McModalRef, useValue: this}],\n            parent: this.viewContainer.parentInjector\n        });\n\n        this.contentComponentRef = factory.create(childInjector);\n\n        if (this.mcComponentParams) {\n            Object.assign(this.contentComponentRef.instance, this.mcComponentParams);\n        }\n\n        // Do the first change detection immediately\n        // (or we do detection at ngAfterViewInit, multi-changes error will be thrown)\n        this.contentComponentRef.changeDetectorRef.detectChanges();\n\n\n    }\n\n    // Update transform-origin to the last click position on document\n    private updateTransformOrigin() {\n        const modalElement = this.modalContainer.nativeElement as HTMLElement;\n        const lastPosition = ModalUtil.getLastClickPosition();\n\n        if (lastPosition) {\n            // tslint:disable-next-line\n            this.transformOrigin = `${lastPosition.x - modalElement.offsetLeft}px ${lastPosition.y - modalElement.offsetTop}px 0px`;\n        }\n    }\n\n    /**\n     * Take care of the body's overflow to decide the existense of scrollbar\n     * @param plusNum The number that the openModals.length will increase soon\n     */\n    private changeBodyOverflow(plusNum: number = 0) {\n        const openModals = this.modalControl.openModals;\n\n        if (openModals.length + plusNum > 0) {\n            // tslint:disable-next-line\n            this.renderer.setStyle(this.document.body, 'padding-right', `${this.mcMeasureScrollbarService.scrollBarWidth}px`);\n            this.renderer.setStyle(this.document.body, 'overflow', 'hidden');\n        } else {\n            this.renderer.removeStyle(this.document.body, 'padding-right');\n            this.renderer.removeStyle(this.document.body, 'overflow');\n        }\n    }\n}\n\n////////////\n\nfunction isPromise(obj: {} | void): boolean {\n    // tslint:disable-next-line\n    return !!obj && (typeof obj === 'object' || typeof obj === 'function') && typeof (obj as Promise<{}>).then === 'function' && typeof (obj as Promise<{}>).catch === 'function';\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n\n@Pipe({\n    name: 'toCssUnit'\n})\nexport class CssUnitPipe implements PipeTransform {\n    transform(value: number | string, defaultUnit: string = 'px'): string {\n        const formatted = +value;\n\n        return isNaN(formatted) ? `${value}` : `${formatted}${defaultUnit}`;\n    }\n}\n","import { ComponentRef, Injectable } from '@angular/core';\n\nimport { Observable } from 'rxjs';\nimport { filter } from 'rxjs/operators';\n\nimport { ESCAPE } from '@ptsecurity/cdk/keycodes';\nimport { Overlay, OverlayRef } from '@ptsecurity/cdk/overlay';\nimport { ComponentPortal } from '@ptsecurity/cdk/portal';\n\nimport { McModalControlService } from './modal-control.service';\nimport { McModalRef } from './modal-ref.class';\nimport { McModalComponent } from './modal.component';\nimport { ConfirmType, IModalOptions, IModalOptionsForService } from './modal.type';\n\n\n// A builder used for managing service creating modals\nexport class ModalBuilderForService {\n\n    // Modal ComponentRef, \"null\" means it has been destroyed\n    private modalRef: ComponentRef<McModalComponent>;\n    private overlayRef: OverlayRef;\n\n    constructor(private overlay: Overlay, options: IModalOptionsForService = {}) {\n        this.createModal();\n\n        if (!('mcGetContainer' in options)) {\n            options.mcGetContainer = null;\n        }\n\n        this.changeProps(options);\n        this.modalRef.instance.open();\n        this.modalRef.instance.mcAfterClose.subscribe(() => this.destroyModal());\n\n        this.overlayRef.keydownEvents()\n            // @ts-ignore\n            .pipe(filter((event: KeyboardEvent) => {\n                return event.keyCode === ESCAPE && options.mcCloseByESC;\n            }))\n            .subscribe(() => this.modalRef.instance.close());\n    }\n\n    getInstance(): McModalComponent {\n        return this.modalRef && this.modalRef.instance;\n    }\n\n    destroyModal(): void {\n        if (this.modalRef) {\n            this.overlayRef.dispose();\n            // @ts-ignore\n            this.modalRef = null;\n        }\n    }\n\n    private changeProps(options: IModalOptions): void {\n        if (this.modalRef) {\n            // here not limit user's inputs at runtime\n            Object.assign(this.modalRef.instance, options);\n        }\n    }\n\n    // Create component to ApplicationRef\n    private createModal(): void {\n        this.overlayRef = this.overlay.create();\n        this.modalRef = this.overlayRef.attach(new ComponentPortal(McModalComponent));\n    }\n}\n\n@Injectable()\nexport class McModalService {\n    // Track of the current close modals (we assume invisible is close this time)\n    get openModals(): McModalRef[] {\n        return this.modalControl.openModals;\n    }\n\n    get afterAllClose(): Observable<void> {\n        return this.modalControl.afterAllClose.asObservable();\n    }\n\n    constructor(\n        private overlay: Overlay,\n        private modalControl: McModalControlService) {\n    }\n\n    // Closes all of the currently-open dialogs\n    closeAll(): void {\n        this.modalControl.closeAll();\n    }\n\n    create<T>(options: IModalOptionsForService<T> = {}): McModalRef<T> {\n\n        if (typeof options.mcOnCancel !== 'function') {\n            // Leave a empty function to close this modal by default\n            // tslint:disable-next-line\n            options.mcOnCancel = () => {};\n        }\n\n        if (!('mcCloseByESC' in options)) {\n            options.mcCloseByESC = true;\n        }\n\n\n        if (!('mcWidth' in options)) {\n            // tslint:disable-next-line\n            options.mcWidth = 480;\n        }\n\n        return new ModalBuilderForService(this.overlay, options).getInstance();\n    }\n\n    confirm<T>(options: IModalOptionsForService<T> = {}, confirmType: ConfirmType = 'confirm'): McModalRef<T> {\n        if ('mcFooter' in options) {\n            console.warn(`The Confirm-Modal doesn't support \"mcFooter\", this property will be ignored.`);\n        }\n\n        // NOTE: only support function currently by calling confirm()\n        if (typeof options.mcOnOk !== 'function') {\n            // Leave a empty function to close this modal by default\n            // tslint:disable-next-line\n            options.mcOnOk = () => {};\n        }\n\n        options.mcModalType = 'confirm';\n        options.mcClassName = `mc-confirm mc-confirm-${confirmType} ${options.mcClassName || ''}`;\n        options.mcMaskClosable = false;\n\n        return this.create(options);\n    }\n\n    success<T>(options: IModalOptionsForService<T> = {}): McModalRef<T> {\n        return this.simpleConfirm(options, 'success');\n    }\n\n    delete<T>(options: IModalOptionsForService<T> = {}): McModalRef<T> {\n        return this.simpleConfirm(options, 'warn');\n    }\n\n    private simpleConfirm<T>(options: IModalOptionsForService<T> = {}, confirmType: ConfirmType): McModalRef<T> {\n        // Remove the Cancel button if the user not specify a Cancel button\n        if (!('mcCancelText' in options)) {\n            // @ts-ignore\n            options.mcCancelText = null;\n        }\n\n        return this.confirm(options, confirmType);\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { OverlayModule } from '@ptsecurity/cdk/overlay';\nimport { McButtonModule } from '@ptsecurity/mosaic/button';\nimport { McIconModule } from '@ptsecurity/mosaic/icon';\n\nimport { CssUnitPipe } from './css-unit.pipe';\nimport { McModalControlService } from './modal-control.service';\nimport { McModalComponent } from './modal.component';\nimport { McModalService } from './modal.service';\n\n\n@NgModule({\n    imports: [ CommonModule, OverlayModule, McButtonModule, McIconModule ],\n    exports: [ McModalComponent ],\n    declarations: [ McModalComponent, CssUnitPipe ],\n    entryComponents: [ McModalComponent ],\n    providers: [ McModalControlService, McModalService ]\n})\nexport class McModalModule { }\n","import { AnimationEvent } from '@angular/animations';\nimport {\n    AfterContentInit,\n    ChangeDetectionStrategy,\n    Component,\n    ContentChild,\n    ContentChildren,\n    ElementRef,\n    EventEmitter,\n    Inject,\n    InjectionToken,\n    Input,\n    NgZone,\n    OnDestroy,\n    Output,\n    TemplateRef,\n    QueryList,\n    ViewChild,\n    ViewEncapsulation,\n    OnInit\n} from '@angular/core';\nimport { FocusKeyManager, FocusOrigin } from '@ptsecurity/cdk/a11y';\nimport { Direction } from '@ptsecurity/cdk/bidi';\nimport { coerceBooleanProperty } from '@ptsecurity/cdk/coercion';\nimport { ESCAPE, DOWN_ARROW, UP_ARROW } from '@ptsecurity/cdk/keycodes';\nimport { Subject, Subscription } from 'rxjs';\nimport { take } from 'rxjs/operators';\n\nimport { mcDropdownAnimations } from './dropdown-animations';\nimport { McDropdownContent } from './dropdown-content';\nimport { throwMcDropdownInvalidPositionX, throwMcDropdownInvalidPositionY } from './dropdown-errors';\nimport { McDropdownItem } from './dropdown-item';\nimport { MC_DROPDOWN_PANEL, McDropdownPanel } from './dropdown-panel';\nimport { DropdownPositionX, DropdownPositionY } from './dropdown-positions';\n\n\n/** Default `mc-dropdown` options that can be overridden. */\n// tslint:disable-next-line:interface-name\nexport interface McDropdownDefaultOptions {\n    /** The x-axis position of the dropdown. */\n    xPosition: DropdownPositionX;\n\n    /** The y-axis position of the dropdown. */\n    yPosition: DropdownPositionY;\n\n    /** Whether the dropdown should overlap the dropdown trigger. */\n    overlapTrigger: boolean;\n\n    /** Class to be applied to the dropdown's backdrop. */\n    backdropClass: string;\n\n    /** Whether the dropdown has a backdrop. */\n    hasBackdrop?: boolean;\n}\n\n/** Injection token to be used to override the default options for `mc-dropdown`. */\nexport const MC_DROPDOWN_DEFAULT_OPTIONS =\n    new InjectionToken<McDropdownDefaultOptions>('mc-dropdown-default-options', {\n        providedIn: 'root',\n        factory: MC_DROPDOWN_DEFAULT_OPTIONS_FACTORY\n    });\n\n/** @docs-private */\nexport function MC_DROPDOWN_DEFAULT_OPTIONS_FACTORY(): McDropdownDefaultOptions {\n    return {\n        overlapTrigger: false,\n        xPosition: 'after',\n        yPosition: 'below',\n        backdropClass: 'cdk-overlay-transparent-backdrop'\n    };\n}\n\n@Component({\n    selector: 'mc-dropdown',\n    templateUrl: 'dropdown.html',\n    styleUrls: ['dropdown.css'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n    exportAs: 'mcDropdown',\n    animations: [\n        mcDropdownAnimations.transformDropdown,\n        mcDropdownAnimations.fadeInItems\n    ],\n    providers: [\n        { provide: MC_DROPDOWN_PANEL, useExisting: McDropdown }\n    ]\n})\nexport class McDropdown implements AfterContentInit, McDropdownPanel<McDropdownItem>, OnInit, OnDestroy {\n\n    /** Position of the dropdown in the X axis. */\n    @Input()\n    get xPosition(): DropdownPositionX { return this._xPosition; }\n    set xPosition(value: DropdownPositionX) {\n        if (value !== 'before' && value !== 'after') {\n            throwMcDropdownInvalidPositionX();\n        }\n\n        this._xPosition = value;\n        this.setPositionClasses();\n    }\n\n    /** Position of the dropdown in the Y axis. */\n    @Input()\n    get yPosition(): DropdownPositionY { return this._yPosition; }\n    set yPosition(value: DropdownPositionY) {\n        if (value !== 'above' && value !== 'below') {\n            throwMcDropdownInvalidPositionY();\n        }\n\n        this._yPosition = value;\n        this.setPositionClasses();\n    }\n\n    /** Whether the dropdown should overlap its trigger. */\n    @Input()\n    get overlapTrigger(): boolean { return this._overlapTrigger; }\n    set overlapTrigger(value: boolean) {\n        this._overlapTrigger = coerceBooleanProperty(value);\n    }\n\n    /** Whether the dropdown has a backdrop. */\n    @Input()\n    get hasBackdrop(): boolean | undefined { return this._hasBackdrop; }\n    set hasBackdrop(value: boolean | undefined) {\n        this._hasBackdrop = coerceBooleanProperty(value);\n    }\n\n    /**\n     * This method takes classes set on the host mc-dropdown element and applies them on the\n     * dropdown template that displays in the overlay container.  Otherwise, it's difficult\n     * to style the containing dropdown from outside the component.\n     * @param classes list of class names\n     */\n    @Input('class')\n    set panelClass(classes: string) {\n        if (classes && classes.length) {\n            this._classList = classes.split(' ').reduce((obj: any, className: string) => {\n                obj[className] = true;\n\n                return obj;\n            }, {});\n\n            this._elementRef.nativeElement.className = '';\n        }\n    }\n\n    /** Config object to be passed into the dropdown's ngClass */\n    _classList: {[key: string]: boolean} = {};\n\n    /** Current state of the panel animation. */\n    _panelAnimationState: 'void' | 'enter' = 'void';\n\n    /** Emits whenever an animation on the dropdown completes. */\n    _animationDone = new Subject<AnimationEvent>();\n\n    /** Whether the dropdown is animating. */\n    _isAnimating: boolean;\n\n    /** Layout direction of the dropdown. */\n    direction: Direction;\n\n    /** Class to be added to the backdrop element. */\n    @Input() backdropClass: string = this._defaultOptions.backdropClass;\n\n    /** @docs-private */\n    @ViewChild(TemplateRef) templateRef: TemplateRef<any>;\n\n    /**\n     * List of the items inside of a dropdown.\n     */\n    @ContentChildren(McDropdownItem) items: QueryList<McDropdownItem>;\n\n    /**\n     * Dropdown content that will be rendered lazily.\n     * @docs-private\n     */\n    @ContentChild(McDropdownContent) lazyContent: McDropdownContent;\n\n    /** Event emitted when the dropdown is closed. */\n    @Output() readonly closed: EventEmitter<void | 'click' | 'keydown' | 'tab'> =\n        new EventEmitter<void | 'click' | 'keydown' | 'tab'>();\n\n    private _keyManager: FocusKeyManager<McDropdownItem>;\n    private _xPosition: DropdownPositionX = this._defaultOptions.xPosition;\n    private _yPosition: DropdownPositionY = this._defaultOptions.yPosition;\n\n    /** Dropdown items inside the current dropdown. */\n    private _items: McDropdownItem[] = [];\n\n    /** Emits whenever the amount of dropdown items changes. */\n    private _itemChanges = new Subject<McDropdownItem[]>();\n\n    /** Subscription to tab events on the dropdown panel */\n    private _tabSubscription = Subscription.EMPTY;\n    private _overlapTrigger: boolean = this._defaultOptions.overlapTrigger;\n    private _hasBackdrop: boolean | undefined = this._defaultOptions.hasBackdrop;\n\n    constructor(\n        private _elementRef: ElementRef<HTMLElement>,\n        private _ngZone: NgZone,\n        @Inject(MC_DROPDOWN_DEFAULT_OPTIONS) private _defaultOptions: McDropdownDefaultOptions) { }\n\n    ngOnInit() {\n        this.setPositionClasses();\n    }\n\n    ngAfterContentInit() {\n        this._keyManager = new FocusKeyManager<McDropdownItem>(this.items).withWrap().withTypeAhead();\n        this._tabSubscription = this._keyManager.tabOut.subscribe(() => this.closed.emit('tab'));\n    }\n\n    ngOnDestroy() {\n        this._tabSubscription.unsubscribe();\n        this.closed.complete();\n    }\n\n    /** Handle a keyboard event from the dropdown, delegating to the appropriate action. */\n    _handleKeydown(event: KeyboardEvent) {\n\n        // tslint:disable-next-line:deprecation\n        switch (event.keyCode) {\n            case ESCAPE:\n                this.closed.emit('keydown');\n                break;\n            case UP_ARROW:\n            case DOWN_ARROW:\n                this._keyManager.setFocusOrigin('keyboard');\n                this._keyManager.onKeydown(event);\n                break;\n            default:\n                // todo зачем обрабатывать лишние события ?\n                this._keyManager.onKeydown(event);\n        }\n    }\n\n    /**\n     * Focus the first item in the dropdown.\n     * @param origin Action from which the focus originated. Used to set the correct styling.\n     */\n    focusFirstItem(origin: FocusOrigin = 'program'): void {\n        // When the content is rendered lazily, it takes a bit before the items are inside the DOM.\n        if (this.lazyContent) {\n            this._ngZone.onStable.asObservable()\n                .pipe(take(1))\n                .subscribe(() => this._keyManager.setFocusOrigin(origin).setFirstItemActive());\n        } else {\n            this._keyManager.setFocusOrigin(origin).setFirstItemActive();\n        }\n    }\n\n    /**\n     * Resets the active item in the dropdown. This is used when the dropdown is opened, allowing\n     * the user to start from the first option when pressing the down arrow.\n     */\n    resetActiveItem() {\n        this._keyManager.setActiveItem(-1);\n    }\n\n    /**\n     * Registers a dropdown item with the dropdown.\n     * @docs-private\n     */\n    addItem(item: McDropdownItem) {\n        // We register the items through this method, rather than picking them up through\n        // `ContentChildren`, because we need the items to be picked up by their closest\n        // `mc-dropdown` ancestor. If we used `@ContentChildren(McDropdownItem, {descendants: true})`,\n        // all descendant items will bleed into the top-level dropdown in the case where the consumer\n        // has `mc-dropdown` instances nested inside each other.\n        if (this._items.indexOf(item) === -1) {\n            this._items.push(item);\n            this._itemChanges.next(this._items);\n        }\n    }\n\n    /**\n     * Removes an item from the dropdown.\n     * @docs-private\n     */\n    removeItem(item: McDropdownItem) {\n        const index = this._items.indexOf(item);\n\n        if (this._items.indexOf(item) > -1) {\n            this._items.splice(index, 1);\n            this._itemChanges.next(this._items);\n        }\n    }\n\n    /**\n     * Adds classes to the dropdown panel based on its position. Can be used by\n     * consumers to add specific styling based on the position.\n     * @param posX Position of the dropdown along the x axis.\n     * @param posY Position of the dropdown along the y axis.\n     * @docs-private\n     */\n    setPositionClasses(posX: DropdownPositionX = this.xPosition, posY: DropdownPositionY = this.yPosition) {\n        const classes = this._classList;\n        classes['mc-dropdown-before'] = posX === 'before';\n        classes['mc-dropdown-after'] = posX === 'after';\n        classes['mc-dropdown-above'] = posY === 'above';\n        classes['mc-dropdown-below'] = posY === 'below';\n    }\n\n    /** Starts the enter animation. */\n    _startAnimation() {\n        this._panelAnimationState = 'enter';\n    }\n\n    /** Resets the panel animation to its initial state. */\n    _resetAnimation() {\n        this._panelAnimationState = 'void';\n    }\n\n    /** Callback that is invoked when the panel animation completes. */\n    _onAnimationDone(event: AnimationEvent) {\n        this._animationDone.next(event);\n        this._isAnimating = false;\n\n        // Scroll the content element to the top once the animation is done. This is necessary, because\n        // we move focus to the first item while it's still being animated, which can throw the browser\n        // off when it determines the scroll position. Alternatively we can move focus when the\n        // animation is done, however moving focus asynchronously will interrupt screen readers\n        // which are in the process of reading out the dropdown already. We take the `element` from\n        // the `event` since we can't use a `ViewChild` to access the pane.\n        if (event.toState === 'enter' && this._keyManager.activeItemIndex === 0) {\n            event.element.scrollTop = 0;\n        }\n    }\n}\n","import {\n    AfterContentInit,\n    Directive,\n    ElementRef,\n    EventEmitter,\n    Inject,\n    InjectionToken,\n    Input,\n    OnDestroy, OnInit,\n    Optional,\n    Output,\n    ViewContainerRef\n} from '@angular/core';\nimport { FocusMonitor, FocusOrigin } from '@ptsecurity/cdk/a11y';\nimport { Direction, Directionality } from '@ptsecurity/cdk/bidi';\nimport {\n    FlexibleConnectedPositionStrategy,\n    HorizontalConnectionPos,\n    Overlay,\n    OverlayConfig,\n    OverlayRef,\n    VerticalConnectionPos,\n    IScrollStrategy\n} from '@ptsecurity/cdk/overlay';\nimport { TemplatePortal } from '@ptsecurity/cdk/portal';\nimport { merge, Subscription } from 'rxjs';\nimport { filter, take, takeUntil } from 'rxjs/operators';\n\nimport { throwMcDropdownMissingError } from './dropdown-errors';\nimport { McDropdownPanel } from './dropdown-panel';\nimport { McDropdown } from './dropdown.component';\n\n\n/** Injection token that determines the scroll handling while the dropdown is open. */\nexport const MC_DROPDOWN_SCROLL_STRATEGY =\n    new InjectionToken<() => IScrollStrategy>('mc-dropdown-scroll-strategy');\n\n/** @docs-private */\nexport function MC_DROPDOWN_SCROLL_STRATEGY_FACTORY(overlay: Overlay): () => IScrollStrategy {\n    return () => overlay.scrollStrategies.reposition();\n}\n\n/** @docs-private */\nexport const MC_DROPDOWN_SCROLL_STRATEGY_FACTORY_PROVIDER = {\n    provide: MC_DROPDOWN_SCROLL_STRATEGY,\n    deps: [Overlay],\n    useFactory: MC_DROPDOWN_SCROLL_STRATEGY_FACTORY\n};\n\n/**\n * This directive is intended to be used in conjunction with an mc-dropdown tag.  It is\n * responsible for toggling the display of the provided dropdown instance.\n */\n@Directive({\n    selector: `[mcDropdownTriggerFor]`,\n    host: {\n        '(touchstart)': '_openedBy = \"touch\"',\n        '(click)': 'toggle()'\n    },\n    exportAs: 'mcDropdownTrigger'\n})\nexport class McDropdownTrigger implements OnInit, AfterContentInit, OnDestroy {\n\n    /** Whether the dropdown is open. */\n    get opened(): boolean {\n        return this._opened;\n    }\n\n    /** The text direction of the containing app. */\n    get dir(): Direction {\n        return this._dir && this._dir.value === 'rtl' ? 'rtl' : 'ltr';\n    }\n\n    // Tracking input type is necessary so it's possible to only auto-focus\n    // the first item of the list when the dropdown is opened via the keyboard\n    _openedBy: 'mouse' | 'touch' | null = null;\n\n    /** References the dropdown instance that the trigger is associated with. */\n    @Input('mcDropdownTriggerFor') dropdown: McDropdownPanel;\n\n    /** Data to be passed along to any lazily-rendered content. */\n    @Input('mcDropdownTriggerData') data: any;\n\n    /** Event emitted when the associated dropdown is opened. */\n    @Output() readonly dropdownOpened: EventEmitter<void> = new EventEmitter<void>();\n\n    /** Event emitted when the associated dropdown is closed. */\n    @Output() readonly dropdownClosed: EventEmitter<void> = new EventEmitter<void>();\n\n    private _portal: TemplatePortal;\n    private _overlayRef: OverlayRef | null = null;\n    private _opened: boolean = false;\n    private _closeSubscription = Subscription.EMPTY;\n    private _hoverSubscription = Subscription.EMPTY;\n\n    constructor(private _overlay: Overlay,\n                private _element: ElementRef<HTMLElement>,\n                private _viewContainerRef: ViewContainerRef,\n                @Inject(MC_DROPDOWN_SCROLL_STRATEGY) private _scrollStrategy: any,\n                @Optional() private _dir: Directionality,\n                private _focusMonitor?: FocusMonitor) {}\n\n    ngOnInit(): void {\n        this.dropdown.closed = this.dropdown.closed || new EventEmitter<void | 'click' | 'keydown' | 'tab'>();\n    }\n\n    ngAfterContentInit() {\n        this._check();\n\n        this.dropdown.closed.asObservable().subscribe(() => {\n            this._destroy();\n        });\n    }\n\n    ngOnDestroy() {\n        if (this._overlayRef) {\n            this._overlayRef.dispose();\n            this._overlayRef = null;\n        }\n\n        this._cleanUpSubscriptions();\n    }\n\n    /** Toggles the dropdown between the open and closed states. */\n    toggle(): void {\n        // tslint:disable-next-line:no-void-expression\n        return this._opened ? this.close() : this.open();\n    }\n\n    /** Opens the dropdown. */\n    open(): void {\n        if (this._opened) {\n            return;\n        }\n\n        this._check();\n\n        const overlayRef = this._createOverlay();\n        this._setPosition(overlayRef.getConfig().positionStrategy as FlexibleConnectedPositionStrategy);\n        overlayRef.attach(this._portal);\n\n        if (this.dropdown.lazyContent) {\n            this.dropdown.lazyContent.attach(this.data);\n        }\n\n        this._closeSubscription = this._closingActions().subscribe(() => this.close());\n        this._init();\n\n        if (this.dropdown instanceof McDropdown) {\n            this.dropdown._startAnimation();\n        }\n    }\n\n    /** Closes the dropdown. */\n    close(): void {\n        this.dropdown.closed.emit();\n    }\n\n    /**\n     * Focuses the dropdown trigger.\n     * @param origin Source of the dropdown trigger's focus.\n     */\n    focus(origin: FocusOrigin = 'program') {\n        if (this._focusMonitor) {\n            this._focusMonitor.focusVia(this._element.nativeElement, origin);\n        } else {\n            this._element.nativeElement.focus();\n        }\n    }\n\n    /** Closes the dropdown and does the necessary cleanup. */\n    private _destroy() {\n        if (!this._overlayRef || !this.opened) {\n            return;\n        }\n\n        const dropdown = this.dropdown;\n\n        this._closeSubscription.unsubscribe();\n        this._overlayRef.detach();\n\n        if (dropdown instanceof McDropdown) {\n            dropdown._resetAnimation();\n\n            if (dropdown.lazyContent) {\n                // Wait for the exit animation to finish before detaching the content.\n                dropdown._animationDone\n                    .pipe(\n                        filter((event) => event.toState === 'void'),\n                        take(1),\n                        // Interrupt if the content got re-attached.\n                        takeUntil(dropdown.lazyContent._attached)\n                    )\n                    .subscribe(() => dropdown.lazyContent.detach(), undefined, () => {\n                        // No matter whether the content got re-attached, reset the dropdown.\n                        this._reset();\n                    });\n            } else {\n                this._reset();\n            }\n        } else {\n            this._reset();\n\n            if (dropdown.lazyContent) {\n                dropdown.lazyContent.detach();\n            }\n        }\n    }\n\n    /**\n     * This method sets the dropdown state to open and focuses the first item if\n     * the dropdown was opened via the keyboard.\n     */\n    private _init(): void {\n        this.dropdown.direction = this.dir;\n        this._setIsOpened(true);\n        this.dropdown.focusFirstItem(this._openedBy || 'program');\n    }\n\n    /**\n     * This method resets the dropdown when it's closed, most importantly restoring\n     * focus to the dropdown trigger if the dropdown was opened via the keyboard.\n     */\n    private _reset(): void {\n        this._setIsOpened(false);\n\n        // We should reset focus if the user is navigating using a keyboard or\n        // if we have a top-level trigger which might cause focus to be lost\n        // when clicking on the backdrop.\n        if (!this._openedBy) {\n            // Note that the focus style will show up both for `program` and\n            // `keyboard` so we don't have to specify which one it is.\n            this.focus();\n        } else {\n            this.focus(this._openedBy);\n        }\n\n        this._openedBy = null;\n    }\n\n    // set state rather than toggle to support triggers sharing a dropdown\n    private _setIsOpened(isOpen: boolean): void {\n        this._opened = isOpen;\n        // tslint:disable-next-line:no-void-expression\n        this._opened ? this.dropdownOpened.emit() : this.dropdownClosed.emit();\n    }\n\n    /**\n     * This method checks that a valid instance of Dropdown has been passed into\n     * mcDropdownTriggerFor. If not, an exception is thrown.\n     */\n    private _check() {\n        if (!this.dropdown) {\n            throwMcDropdownMissingError();\n        }\n    }\n\n    /**\n     * This method creates the overlay from the provided dropdown's template and saves its\n     * OverlayRef so that it can be attached to the DOM when open is called.\n     */\n    private _createOverlay(): OverlayRef {\n        if (!this._overlayRef) {\n            this._portal = new TemplatePortal(this.dropdown.templateRef, this._viewContainerRef);\n            const config = this._getOverlayConfig();\n            this._subscribeToPositions(config.positionStrategy as FlexibleConnectedPositionStrategy);\n            this._overlayRef = this._overlay.create(config);\n\n            // Consume the `keydownEvents` in order to prevent them from going to another overlay.\n            // Ideally we'd also have our keyboard event logic in here, however doing so will\n            // break anybody that may have implemented the `McDropdownPanel` themselves.\n            this._overlayRef.keydownEvents().subscribe();\n        }\n\n        return this._overlayRef;\n    }\n\n    /**\n     * This method builds the configuration object needed to create the overlay, the OverlayState.\n     * @returns OverlayConfig\n     */\n    private _getOverlayConfig(): OverlayConfig {\n        return new OverlayConfig({\n            positionStrategy: this._overlay.position()\n                .flexibleConnectedTo(this._element)\n                .withLockedPosition()\n                .withTransformOriginOn('.mc-dropdown__panel'),\n            hasBackdrop: this.dropdown.hasBackdrop === null || this.dropdown.hasBackdrop === undefined\n                ? true\n                : this.dropdown.hasBackdrop,\n            backdropClass: this.dropdown.backdropClass || 'cdk-overlay-transparent-backdrop',\n            scrollStrategy: this._scrollStrategy(),\n            direction: this._dir\n        });\n    }\n\n    /**\n     * Listens to changes in the position of the overlay and sets the correct classes\n     * on the dropdown based on the new position. This ensures the animation origin is always\n     * correct, even if a fallback position is used for the overlay.\n     */\n    private _subscribeToPositions(position: FlexibleConnectedPositionStrategy): void {\n        if (this.dropdown.setPositionClasses) {\n            // todo possibly we should not recompute positions there\n            /*position.positionChanges.subscribe((change) => {\n                const posX: DropdownPositionX = change.connectionPair.overlayX === 'start' ? 'after' : 'before';\n                const posY: DropdownPositionY = change.connectionPair.overlayY === 'top' ? 'below' : 'above';\n\n                this.dropdown.setPositionClasses!(posX, posY);\n            });*/\n            position.positionChanges.subscribe(() => {\n                this.dropdown.setPositionClasses!(this.dropdown.xPosition, this.dropdown.yPosition);\n            });\n        }\n    }\n\n    /**\n     * Sets the appropriate positions on a position strategy\n     * so the overlay connects with the trigger correctly.\n     * @param positionStrategy Strategy whose position to update.\n     */\n    private _setPosition(positionStrategy: FlexibleConnectedPositionStrategy) {\n        const [originX, originFallbackX]: HorizontalConnectionPos[] =\n            this.dropdown.xPosition === 'before' ? ['end', 'start'] : ['start', 'end'];\n\n        const [overlayY, overlayFallbackY]: VerticalConnectionPos[] =\n            this.dropdown.yPosition === 'above' ? ['bottom', 'top'] : ['top', 'bottom'];\n\n        let [originY, originFallbackY] = [overlayY, overlayFallbackY];\n        const [overlayX, overlayFallbackX] = [originX, originFallbackX];\n        const offsetY = 0;\n\n        if (!this.dropdown.overlapTrigger) {\n            originY = overlayY === 'top' ? 'bottom' : 'top';\n            originFallbackY = overlayFallbackY === 'top' ? 'bottom' : 'top';\n        }\n\n        positionStrategy.withPositions([\n            {originX, originY, overlayX, overlayY, offsetY},\n            {originX: originFallbackX, originY, overlayX: overlayFallbackX, overlayY, offsetY},\n            {\n                originX,\n                originY: originFallbackY,\n                overlayX,\n                overlayY: overlayFallbackY,\n                offsetY: -offsetY\n            },\n            {\n                originX: originFallbackX,\n                originY: originFallbackY,\n                overlayX: overlayFallbackX,\n                overlayY: overlayFallbackY,\n                offsetY: -offsetY\n            }\n        ]);\n    }\n\n    /** Cleans up the active subscriptions. */\n    private _cleanUpSubscriptions(): void {\n        this._closeSubscription.unsubscribe();\n        this._hoverSubscription.unsubscribe();\n    }\n\n    /** Returns a stream that emits whenever an action that should close the dropdown occurs. */\n    private _closingActions() {\n        const backdrop = this._overlayRef!.backdropClick();\n        const detachments = this._overlayRef!.detachments();\n\n        return merge(backdrop, detachments);\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { OverlayModule } from '@ptsecurity/cdk/overlay';\n\nimport { McDropdownContent } from './dropdown-content';\nimport { McDropdownItem } from './dropdown-item';\nimport { MC_DROPDOWN_SCROLL_STRATEGY_FACTORY_PROVIDER, McDropdownTrigger } from './dropdown-trigger';\nimport { McDropdown } from './dropdown.component';\n\n\n@NgModule({\n    imports: [\n        CommonModule,\n        OverlayModule\n    ],\n    exports: [McDropdown, McDropdownItem, McDropdownTrigger, McDropdownContent],\n    declarations: [McDropdown, McDropdownItem, McDropdownTrigger, McDropdownContent],\n    providers: [MC_DROPDOWN_SCROLL_STRATEGY_FACTORY_PROVIDER]\n})\nexport class McDropdownModule {}\n","import { Component } from '@angular/core';\n\n\n@Component({\n    selector: 'mc-content',\n    preserveWhitespaces: false,\n    templateUrl: './content.component.html',\n    styles: [\n        `:host {\n            display: block;\n        }`\n    ],\n    host: {\n        '[class.mc-layout-content]': 'true'\n    }\n})\nexport class McContentComponent {\n}\n","import { Component } from '@angular/core';\n\n\n@Component({\n    selector: 'mc-footer',\n    preserveWhitespaces: false,\n    templateUrl: './footer.component.html',\n    styles: [\n        `:host {\n            display: block;\n        }`\n    ],\n    host: {\n        '[class.mc-layout-footer]': 'true'\n    }\n})\nexport class McFooterComponent {\n}\n","import { Component } from '@angular/core';\n\n\n@Component({\n    selector : 'mc-header',\n    preserveWhitespaces: false,\n    templateUrl: './header.component.html',\n    styles: [\n        `:host {\n            display: block;\n        }`\n    ],\n    host: {\n        '[class.mc-layout-header]': 'true'\n    }\n})\nexport class McHeaderComponent {\n}\n","import { ChangeDetectionStrategy, Component, ViewEncapsulation } from '@angular/core';\n\n\n@Component({\n    selector: 'mc-layout',\n    preserveWhitespaces: false,\n    styleUrls: ['layout.css'],\n    templateUrl: './layout.component.html',\n    host: {\n        '[class.mc-layout]': 'true',\n        '[class.mc-layout-has-sidebar]': 'hasSidebar'\n    },\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class McLayoutComponent {\n    hasSidebar = false;\n}\n","import {\n    ChangeDetectionStrategy,\n    Component,\n    EventEmitter,\n    Host,\n    Input,\n    OnInit,\n    Optional,\n    Output\n} from '@angular/core';\nimport { toBoolean } from '@ptsecurity/mosaic/core';\n\nimport { McLayoutComponent } from './layout.component';\n\n\n@Component({\n    selector: 'mc-sidebar',\n    preserveWhitespaces: false,\n    templateUrl: './sidebar.component.html',\n    host: {\n        '[class.mc-layout-sidebar]': 'true',\n        '[class.mc-layout-sidebar-collapsed]': 'mcCollapsed',\n        '[style.flex]': 'mcFlex',\n        '[style.max-width.px]': 'mcWidth',\n        '[style.min-width.px]': 'mcWidth',\n        '[style.width.px]': 'mcWidth'\n    },\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class McSidebarComponent implements OnInit {\n\n    @Input() _mcWidth = 200;\n    @Input() mcCollapsedWidth = 80;\n\n    @Input()\n    set mcCollapsible(value: boolean) {\n        this.collapsible = toBoolean(value);\n    }\n\n    get mcCollapsible(): boolean {\n        return this.collapsible;\n    }\n\n    @Input()\n    set mcCollapsed(value: boolean) {\n        this.collapsed = toBoolean(value);\n    }\n\n    get mcCollapsed(): boolean {\n        return this.collapsed;\n    }\n\n    // tslint:disable-next-line\n    @Output() mcCollapsedChange = new EventEmitter();\n\n    private collapsed = false;\n    private collapsible = false;\n\n    get mcFlex(): string {\n        if (this.mcCollapsed) {\n            return `0 0 ${this.mcCollapsedWidth}px`;\n        } else {\n            return `0 0 ${this.mcWidth}px`;\n        }\n    }\n\n    get mcWidth(): number {\n        if (this.mcCollapsed) {\n            return this.mcCollapsedWidth;\n        } else {\n            return this._mcWidth;\n        }\n    }\n\n    constructor(\n        @Optional() @Host() private mcLayoutComponent: McLayoutComponent) {\n    }\n\n    ngOnInit() {\n        if (this.mcLayoutComponent) {\n            this.mcLayoutComponent.hasSidebar = true;\n        }\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { McContentComponent } from './content.component';\nimport { McFooterComponent } from './footer.component';\nimport { McHeaderComponent } from './header.component';\nimport { McLayoutComponent } from './layout.component';\nimport { McSidebarComponent } from './sidebar.component';\n\n\n@NgModule({\n    imports: [ CommonModule ],\n    exports: [\n        McLayoutComponent,\n        McContentComponent,\n        McFooterComponent,\n        McHeaderComponent,\n        McSidebarComponent\n    ],\n    declarations: [\n        McLayoutComponent,\n        McContentComponent,\n        McFooterComponent,\n        McHeaderComponent,\n        McSidebarComponent\n    ]\n})\nexport class McLayoutModule {\n}\n","import {\n    AfterContentInit,\n    Attribute,\n    ChangeDetectionStrategy,\n    Component,\n    ContentChildren,\n    ElementRef,\n    EventEmitter,\n    forwardRef,\n    Input,\n    Output,\n    QueryList,\n    ViewEncapsulation,\n    ChangeDetectorRef,\n    Inject,\n    OnDestroy,\n    OnInit,\n    ViewChild\n} from '@angular/core';\n\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\n\nimport { Subscription } from 'rxjs';\n\nimport { FocusKeyManager, IFocusableOption } from '@ptsecurity/cdk/a11y';\nimport { SelectionModel } from '@ptsecurity/cdk/collections';\nimport { END, ENTER, HOME, PAGE_DOWN, PAGE_UP, SPACE } from '@ptsecurity/cdk/keycodes';\n\nimport {\n    McLine,\n    McLineSetter,\n    CanDisable,\n    mixinDisabled,\n    toBoolean, CanDisableCtor\n} from '@ptsecurity/mosaic/core';\n\n\n/**\n * Component for list-options of selection-list. Each list-option can automatically\n * generate a checkbox and can put current item into the selectionModel of selection-list\n * if the current item is selected.\n */\n@Component({\n    exportAs: 'mcListOption',\n    selector: 'mc-list-option',\n    host: {\n        tabindex: '-1',\n\n        class: 'mc-list-option',\n        '[class.mc-selected]': 'selected',\n        '[class.mc-focused]': '_hasFocus',\n        '(focus)': '_handleFocus()',\n        '(blur)': '_handleBlur()',\n        '(click)': '_handleClick()'\n    },\n    templateUrl: 'list-option.html',\n    encapsulation: ViewEncapsulation.None,\n    preserveWhitespaces: false,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class McListOption implements AfterContentInit, OnDestroy, OnInit, IFocusableOption {\n    _hasFocus: boolean = false;\n\n    @ContentChildren(McLine) _lines: QueryList<McLine>;\n\n    @ViewChild('text') _text: ElementRef;\n\n    // Whether the label should appear before or after the checkbox. Defaults to 'after'\n    @Input() checkboxPosition: 'before' | 'after' = 'after';\n\n    @Input() value: any;\n\n    @Input()\n    get disabled() {\n        return this._disabled || (this.listSelection && this.listSelection.disabled);\n    }\n\n    set disabled(value: any) {\n        const newValue = toBoolean(value);\n\n        if (newValue !== this._disabled) {\n            this._disabled = newValue;\n            this._changeDetector.markForCheck();\n        }\n    }\n\n    @Input()\n    get selected(): boolean {\n        return this.listSelection.selectedOptions && this.listSelection.selectedOptions.isSelected(this) || false;\n    }\n\n    set selected(value: boolean) {\n        const isSelected = toBoolean(value);\n\n        if (isSelected !== this._selected) {\n            this.setSelected(isSelected);\n\n            this.listSelection._reportValueChange();\n        }\n    }\n\n    private _lineSetter: McLineSetter;\n    private _selected = false;\n    private _disabled = false;\n\n    constructor(\n        private _element: ElementRef,\n        private _changeDetector: ChangeDetectorRef,\n        @Inject(forwardRef(() => McListSelection))\n        public listSelection: McListSelection\n    ) {}\n\n    ngOnInit() {\n        if (this._selected) {\n            // List options that are selected at initialization can't be reported properly to the form\n            // control. This is because it takes some time until the selection-list knows about all\n            // available options. Also it can happen that the ControlValueAccessor has an initial value\n            // that should be used instead. Deferring the value change report to the next tick ensures\n            // that the form control value is not being overwritten.\n            const wasSelected = this._selected;\n\n            Promise.resolve().then(() => {\n                if (this._selected || wasSelected) {\n                    this.selected = true;\n                    this._changeDetector.markForCheck();\n                }\n            });\n        }\n    }\n\n    ngAfterContentInit() {\n        this._lineSetter = new McLineSetter(this._lines, this._element);\n    }\n\n    ngOnDestroy(): void {\n        if (this.selected) {\n            // We have to delay this until the next tick in order\n            // to avoid changed after checked errors.\n            Promise.resolve().then(() => this.selected = false);\n        }\n\n        this.listSelection._removeOptionFromList(this);\n    }\n\n    toggle(): void {\n        this.selected = !this.selected;\n    }\n\n    focus(): void {\n        this._element.nativeElement.focus();\n\n        this.listSelection.setFocusedOption(this);\n    }\n\n    getLabel() {\n        return this._text ? this._text.nativeElement.textContent : '';\n    }\n\n    setSelected(selected: boolean) {\n        if (this._selected === selected || !this.listSelection.selectedOptions) { return; }\n\n        this._selected = selected;\n\n        if (selected) {\n            this.listSelection.selectedOptions.select(this);\n        } else {\n            this.listSelection.selectedOptions.deselect(this);\n        }\n\n        this._changeDetector.markForCheck();\n    }\n\n    _getHeight(): number {\n        return this._element.nativeElement.getClientRects()[0].height;\n    }\n\n    _handleClick() {\n        if (this.disabled) { return; }\n\n        this.listSelection.setFocusedOption(this);\n    }\n\n    _handleFocus() {\n        if (this.disabled || this._hasFocus) { return; }\n\n        this._hasFocus = true;\n    }\n\n    _handleBlur() {\n        this._hasFocus = false;\n\n        this.listSelection._onTouched();\n    }\n\n    _getHostElement(): HTMLElement {\n        return this._element.nativeElement;\n    }\n}\n\n\nexport const MC_SELECTION_LIST_VALUE_ACCESSOR: any = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => McListSelection),\n    multi: true\n};\n\n// Change event that is being fired whenever the selected state of an option changes. */\nexport class McListSelectionChange {\n    constructor(\n        // Reference to the selection list that emitted the event.\n        public source: McListSelection,\n        // Reference to the option that has been changed.\n        public option: McListOption\n    ) {}\n}\n\n\nexport class McListSelectionBase {}\n\nexport const _McListSelectionMixinBase: CanDisableCtor & typeof McListSelectionBase\n    = mixinDisabled(McListSelectionBase);\n\n@Component({\n    exportAs: 'mcListSelection',\n    selector: 'mc-list-selection',\n    template: '<ng-content></ng-content>',\n    styleUrls: ['./list.css'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n    inputs: ['disabled', 'tabIndex'],\n    host: {\n        class: 'mc-list-selection',\n        '[tabIndex]': 'tabIndex',\n        '(focus)': 'focus()',\n        '(blur)': '_onTouched()',\n        '(keydown)': '_onKeyDown($event)',\n        '(window:resize)': 'updateScrollSize()'\n    },\n    providers: [MC_SELECTION_LIST_VALUE_ACCESSOR],\n    preserveWhitespaces: false\n})\nexport class McListSelection extends _McListSelectionMixinBase implements\n    IFocusableOption, CanDisable, AfterContentInit, ControlValueAccessor {\n\n    _keyManager: FocusKeyManager<McListOption>;\n\n    // The option components contained within this selection-list.\n    @ContentChildren(McListOption) options: QueryList<McListOption>;\n\n    tabIndex: number;\n\n    autoSelect: boolean;\n    noUnselect: boolean;\n    multiple: boolean;\n\n    // todo temporary solution\n    withShift: boolean;\n    withCtrl: boolean;\n\n    @Input() horizontal: boolean = false;\n\n    // Emits a change event whenever the selected state of an option changes.\n    @Output() readonly selectionChange: EventEmitter<McListSelectionChange> = new EventEmitter<McListSelectionChange>();\n\n    selectedOptions: SelectionModel<McListOption>;\n\n    // Used for storing the values that were assigned before the options were initialized.\n    private _tempValues: string[] | null;\n\n    private _modelChanges = Subscription.EMPTY;\n\n    constructor(\n        private _element: ElementRef,\n        @Attribute('tabindex') tabIndex: string,\n        @Attribute('auto-select') autoSelect: string,\n        @Attribute('no-unselect') noUnselect: string,\n        @Attribute('multiple') multiple: string\n    ) {\n        super();\n\n        this.autoSelect = autoSelect === null ? true : toBoolean(autoSelect);\n        this.multiple = multiple === null ? true : toBoolean(multiple);\n        this.noUnselect = noUnselect === null ? true : toBoolean(noUnselect);\n\n        this.tabIndex = parseInt(tabIndex) || 0;\n\n        this.selectedOptions = new SelectionModel<McListOption>(this.multiple);\n    }\n\n    ngAfterContentInit(): void {\n        this.horizontal = toBoolean(this.horizontal);\n\n        this._keyManager = new FocusKeyManager<McListOption>(this.options)\n            .withTypeAhead()\n            .withVerticalOrientation(!this.horizontal)\n            .withHorizontalOrientation(this.horizontal ? 'ltr' : null);\n\n        if (this._tempValues) {\n            this._setOptionsFromValues(this._tempValues);\n            this._tempValues = null;\n        }\n\n        // Sync external changes to the model back to the options.\n        this._modelChanges = this.selectedOptions.onChange!.subscribe((event) => {\n            for (const item of event.added) {\n                item.selected = true;\n            }\n\n            for (const item of event.removed) {\n                item.selected = false;\n            }\n        });\n\n        this.updateScrollSize();\n    }\n\n    ngOnDestroy() {\n        this._modelChanges.unsubscribe();\n    }\n\n    focus() {\n        this._element.nativeElement.focus();\n    }\n\n    selectAll() {\n        this.options.forEach((option) => option.setSelected(true));\n\n        this._reportValueChange();\n    }\n\n    deselectAll() {\n        this.options.forEach((option) => option.setSelected(false));\n\n        this._reportValueChange();\n    }\n\n    updateScrollSize(): void {\n        if (this.horizontal || !this.options.first) { return; }\n\n        this._keyManager.withScrollSize(Math.floor(this._getHeight() / this.options.first._getHeight()));\n    }\n\n    // Sets the focused option of the selection-list.\n    setFocusedOption(option: McListOption): void {\n        this._keyManager.updateActiveItem(option);\n\n        if (this.withShift && this.multiple) {\n            const previousIndex = this._keyManager.previousActiveItemIndex;\n            const activeIndex = this._keyManager.activeItemIndex;\n\n            if (previousIndex < activeIndex) {\n                this.options.forEach((item, index) => {\n                    if (index >= previousIndex && index <= activeIndex) { item.setSelected(true); }\n                });\n            } else {\n                this.options.forEach((item, index) => {\n                    if (index >= activeIndex && index <= previousIndex) { item.setSelected(true); }\n                });\n            }\n\n            this.withShift = false;\n        } else if (this.withCtrl) {\n            this.withCtrl = false;\n\n            if (!this._canDeselectLast(option)) { return; }\n\n            option.toggle();\n        } else {\n            if (this.autoSelect) {\n                this.options.forEach((item) => item.setSelected(false));\n                option.setSelected(true);\n            }\n        }\n\n        this._emitChangeEvent(option);\n        this._reportValueChange();\n    }\n\n    // Implemented as part of ControlValueAccessor.\n    writeValue(values: string[]): void {\n        if (this.options) {\n            this._setOptionsFromValues(values || []);\n        } else {\n            this._tempValues = values;\n        }\n    }\n\n    // Implemented as part of ControlValueAccessor.\n    registerOnChange(fn: (value: any) => void): void {\n        this._onChange = fn;\n    }\n\n    // Implemented as part of ControlValueAccessor.\n    registerOnTouched(fn: () => void): void {\n        this._onTouched = fn;\n    }\n\n    // Implemented as a part of ControlValueAccessor.\n    setDisabledState(isDisabled: boolean): void {\n        if (this.options) {\n            this.options.forEach((option) => option.disabled = isDisabled);\n        }\n    }\n\n    getSelectedOptionValues(): string[] {\n        return this.options.filter((option) => option.selected).map((option) => option.value);\n    }\n\n    // Toggles the selected state of the currently focused option.\n    toggleFocusedOption(): void {\n        const focusedIndex = this._keyManager.activeItemIndex;\n\n        if (focusedIndex != null && this._isValidIndex(focusedIndex)) {\n            const focusedOption: McListOption = this.options.toArray()[focusedIndex];\n\n            if (focusedOption && this._canDeselectLast(focusedOption)) {\n                focusedOption.toggle();\n\n                // Emit a change event because the focused option changed its state through user interaction.\n                this._emitChangeEvent(focusedOption);\n            }\n        }\n    }\n\n    _canDeselectLast(listOption: McListOption): boolean {\n        return !(this.noUnselect && this.selectedOptions.selected.length === 1 && listOption.selected);\n    }\n\n    _getHeight(): number {\n        return this._element.nativeElement.getClientRects()[0].height;\n    }\n\n    // View to model callback that should be called if the list or its options lost focus.\n    _onTouched: () => void = () => {};\n\n    // Removes an option from the selection list and updates the active item.\n    _removeOptionFromList(option: McListOption) {\n        if (option._hasFocus) {\n            const optionIndex = this._getOptionIndex(option);\n\n            // Check whether the option is the last item\n            if (optionIndex > 0) {\n                this._keyManager.setPreviousItemActive();\n            } else if (optionIndex === 0 && this.options.length > 1) {\n                this._keyManager.setNextItemActive();\n            }\n        }\n    }\n\n    _onKeyDown(event: KeyboardEvent) {\n        const keyCode = event.keyCode;\n        this.withShift = event.shiftKey;\n        this.withCtrl = event.ctrlKey;\n\n        switch (keyCode) {\n            case SPACE:\n            case ENTER:\n                this.toggleFocusedOption();\n                event.preventDefault();\n\n                break;\n            case HOME:\n                this._keyManager.setFirstItemActive();\n                event.preventDefault();\n\n                break;\n            case END:\n                this._keyManager.setLastItemActive();\n                event.preventDefault();\n\n                break;\n            case PAGE_UP:\n                if (!this.horizontal) { this._keyManager.setPreviousPageItemActive(); }\n\n                event.preventDefault();\n\n                break;\n            case PAGE_DOWN:\n                if (!this.horizontal) { this._keyManager.setNextPageItemActive(); }\n\n                event.preventDefault();\n\n                break;\n            default:\n                this._keyManager.onKeydown(event);\n        }\n    }\n\n    // Reports a value change to the ControlValueAccessor\n    _reportValueChange() {\n        if (this.options) {\n            this._onChange(this.getSelectedOptionValues());\n        }\n    }\n\n    // Emits a change event if the selected state of an option changed.\n    _emitChangeEvent(option: McListOption) {\n        this.selectionChange.emit(new McListSelectionChange(this, option));\n    }\n\n    // Returns the option with the specified value.\n    private _getOptionByValue(value: string): McListOption | undefined {\n        return this.options.find((option) => option.value === value);\n    }\n\n    // Sets the selected options based on the specified values.\n    private _setOptionsFromValues(values: string[]) {\n        this.options.forEach((option) => option.setSelected(false));\n\n        values\n            .map((value) => this._getOptionByValue(value))\n            .filter(Boolean)\n            .forEach((option) => option!.setSelected(true));\n    }\n\n    /**\n     * Utility to ensure all indexes are valid.\n     * @param index The index to be checked.\n     * @returns True if the index is valid for our list of options.\n     */\n    private _isValidIndex(index: number): boolean {\n        return index >= 0 && index < this.options.length;\n    }\n\n    // Returns the index of the specified list option.\n    private _getOptionIndex(option: McListOption): number {\n        return this.options.toArray().indexOf(option);\n    }\n\n    // View to model callback that should be called whenever the selected options change.\n    private _onChange: (value: any) => void = (_: any) => {};\n}\n","// todo пока не делаем, перенесено из материала, но у нас в доках таких простых списков нет.\nimport {\n    AfterContentInit, ChangeDetectionStrategy, Component, ContentChildren, Directive, ElementRef, QueryList,\n    ViewEncapsulation\n} from '@angular/core';\n\nimport { McLine, McLineSetter } from '@ptsecurity/mosaic/core';\n\n\nexport class McListBase {}\n\n@Component({\n    selector: 'mc-list',\n    host: { class: 'mc-list' },\n    template: '<ng-content></ng-content>',\n    styleUrls: ['./list.css'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None\n})\nexport class McList extends McListBase {}\n\n\n/**\n * Directive whose purpose is to add the mc- CSS styling to this selector.\n * @docs-private\n */\n@Directive({\n    selector: '[mc-subheader], [mcSubheader]',\n    host: { class: 'mc-subheader' }\n})\nexport class McListSubheaderCssStyler {}\n\n\n// Boilerplate for applying mixins to McListItem.\nexport class McListItemBase {}\n\n@Component({\n    selector: 'mc-list-item, a[mc-list-item]',\n    host: {\n        class: 'mc-list-item',\n        '(focus)': '_handleFocus()',\n        '(blur)': '_handleBlur()'\n    },\n    templateUrl: './list-item.html',\n    encapsulation: ViewEncapsulation.None,\n    preserveWhitespaces: false,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class McListItem extends McListItemBase implements AfterContentInit {\n    @ContentChildren(McLine) _lines: QueryList<McLine>;\n\n    private _lineSetter: McLineSetter;\n\n    constructor(private _element: ElementRef) {\n        super();\n    }\n\n    ngAfterContentInit() {\n        this._lineSetter = new McLineSetter(this._lines, this._element);\n    }\n\n    _handleFocus() {\n        this._element.nativeElement.classList.add('mc-focused');\n    }\n\n    _handleBlur() {\n        this._element.nativeElement.classList.remove('mc-focused');\n    }\n\n    _getHostElement(): HTMLElement {\n        return this._element.nativeElement;\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { A11yModule } from '@ptsecurity/cdk/a11y';\n\nimport { McLineModule } from '@ptsecurity/mosaic/core';\n\nimport { McListSelection, McListOption } from './list-selection.component';\nimport { McList, McListItem, McListSubheaderCssStyler } from './list.component';\n\n\n@NgModule({\n    imports: [\n        CommonModule,\n        A11yModule,\n        McLineModule\n    ],\n    exports: [\n        McList,\n        McListSelection,\n        McListItem,\n        McListOption,\n        McListSubheaderCssStyler\n    ],\n    declarations: [\n        McList,\n        McListSelection,\n        McListItem,\n        McListOption,\n        McListSubheaderCssStyler\n    ]\n})\nexport class McListModule {}\n","import {\n    Input,\n    Attribute,\n    Component,\n    ElementRef,\n    OnDestroy,\n    ViewEncapsulation,\n    ChangeDetectionStrategy,\n    ChangeDetectorRef\n} from '@angular/core';\n\nimport { FocusMonitor } from '@ptsecurity/cdk/a11y';\nimport {\n    CanDisable, CanDisableCtor,\n    HasTabIndex, HasTabIndexCtor,\n    mixinDisabled,\n    mixinTabIndex,\n    toBoolean\n} from '@ptsecurity/mosaic/core';\n\n\nexport class McLinkBase {\n    constructor(public _elementRef: ElementRef) {\n    }\n}\n\nexport const _McLinkBase: HasTabIndexCtor & CanDisableCtor & typeof McLinkBase\n    = mixinTabIndex(mixinDisabled(McLinkBase));\n\n@Component({\n    selector: 'a.mc-link',\n    template: `<ng-content></ng-content>`,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n    exportAs: 'mcLink',\n    styleUrls: ['./link.css'],\n    inputs: ['disabled'],\n    host: {\n        '[attr.disabled]': 'disabled || null',\n        '[attr.tabindex]': 'tabIndex'\n    }\n})\n\nexport class McLink extends _McLinkBase implements OnDestroy, HasTabIndex, CanDisable {\n\n    @Input()\n    get disabled() {\n        return this._disabled;\n    }\n\n    set disabled(value: any) {\n        const newValue = toBoolean(value);\n\n        if (newValue !== this._disabled) {\n            this._disabled = newValue;\n            this._changeDetector.markForCheck();\n        }\n    }\n\n    private _disabled = false;\n\n    constructor(\n        @Attribute('tabindex') tabIndex: string,\n        public elementRef: ElementRef,\n        private _focusMonitor: FocusMonitor,\n        private _changeDetector: ChangeDetectorRef) {\n\n        super(elementRef);\n        this._focusMonitor.monitor(elementRef.nativeElement, true);\n        this.tabIndex = parseInt(tabIndex) || 0;\n    }\n\n    ngOnDestroy() {\n        this._focusMonitor.stopMonitoring(this.elementRef.nativeElement);\n    }\n\n    focus(): void {\n        this._getHostElement().focus();\n    }\n\n    _getHostElement() {\n        return this.elementRef.nativeElement;\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { A11yModule } from '@ptsecurity/cdk/a11y';\n\nimport { McLink } from './link.component';\n\n\n@NgModule({\n    imports: [\n        CommonModule,\n        A11yModule\n    ],\n    declarations: [McLink],\n    exports: [McLink]\n})\nexport class McLinkModule {}\n","import {\n    AfterContentInit,\n    AfterViewChecked,\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    EventEmitter,\n    forwardRef,\n    Inject,\n    Input,\n    OnChanges,\n    OnDestroy,\n    Optional,\n    Output,\n    SimpleChanges,\n    ViewChild,\n    ViewEncapsulation\n} from '@angular/core';\nimport { DateAdapter, MC_DATE_FORMATS, McDateFormats } from '@ptsecurity/cdk/datetime';\nimport { ComponentPortal, IComponentType, Portal } from '@ptsecurity/cdk/portal';\nimport { Subject, Subscription } from 'rxjs';\n\nimport { McCalendarCellCssClasses } from './calendar-body';\nimport { createMissingDateImplError } from './datepicker-errors';\nimport { McDatepickerIntl } from './datepicker-intl';\nimport { McMonthView } from './month-view';\nimport { McMultiYearView, yearsPerPage } from './multi-year-view';\nimport { McYearView } from './year-view';\n\n\n/**\n * Possible views for the calendar.\n * @docs-private\n */\nexport type McCalendarView = 'month' | 'year' | 'multi-year';\n\n/** Default header for McCalendar */\n@Component({\n    selector: 'mc-calendar-header',\n    templateUrl: 'calendar-header.html',\n    exportAs: 'mcCalendarHeader',\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class McCalendarHeader<D> {\n    constructor(private intl: McDatepickerIntl,\n                @Inject(forwardRef(() => McCalendar)) public calendar: McCalendar<D>,\n                @Optional() private dateAdapter: DateAdapter<D>,\n                @Optional() @Inject(MC_DATE_FORMATS) private dateFormats: McDateFormats,\n                changeDetectorRef: ChangeDetectorRef) {\n\n        this.calendar.stateChanges.subscribe(() => changeDetectorRef.markForCheck());\n    }\n\n    /** The label for the current calendar view. */\n    get periodButtonText(): string {\n        if (this.calendar.currentView === 'month') {\n            const label = this.dateAdapter\n                .format(this.calendar.activeDate, this.dateFormats.display.monthYearLabel);\n\n            return label[0].toLocaleUpperCase() + label.substr(1);\n        }\n\n        if (this.calendar.currentView === 'year') {\n            return this.dateAdapter.getYearName(this.calendar.activeDate);\n        }\n\n        const activeYear = this.dateAdapter.getYear(this.calendar.activeDate);\n        const firstYearInView = this.dateAdapter.getYearName(\n            // tslint:disable-next-line:no-magic-numbers\n            this.dateAdapter.createDate(activeYear - activeYear % 24, 0, 1));\n        const lastYearInView = this.dateAdapter.getYearName(\n            // tslint:disable-next-line:no-magic-numbers\n            this.dateAdapter.createDate(activeYear + yearsPerPage - 1 - activeYear % 24, 0, 1));\n\n        return `${firstYearInView} \\u2013 ${lastYearInView}`;\n    }\n\n    get periodButtonLabel(): string {\n        return this.calendar.currentView === 'month' ?\n            this.intl.switchToMultiYearViewLabel : this.intl.switchToMonthViewLabel;\n    }\n\n    /** The label for the previous button. */\n    get prevButtonLabel(): string {\n        return {\n            month: this.intl.prevMonthLabel,\n            year: this.intl.prevYearLabel,\n            'multi-year': this.intl.prevMultiYearLabel\n        }[this.calendar.currentView];\n    }\n\n    /** The label for the next button. */\n    get nextButtonLabel(): string {\n        return {\n            month: this.intl.nextMonthLabel,\n            year: this.intl.nextYearLabel,\n            'multi-year': this.intl.nextMultiYearLabel\n        }[this.calendar.currentView];\n    }\n\n    /** Handles user clicks on the period label. */\n    currentPeriodClicked(): void {\n        this.calendar.currentView = this.calendar.currentView === 'month' ? 'multi-year' : 'month';\n    }\n\n    /** Handles user clicks on the previous button. */\n    previousClicked(): void {\n        this.calendar.activeDate = this.calendar.currentView === 'month' ?\n            this.dateAdapter.addCalendarMonths(this.calendar.activeDate, -1) :\n            this.dateAdapter.addCalendarYears(\n                this.calendar.activeDate, this.calendar.currentView === 'year' ? -1 : -yearsPerPage\n            );\n    }\n\n    /** Handles user clicks on the next button. */\n    nextClicked(): void {\n        this.calendar.activeDate = this.calendar.currentView === 'month' ?\n            this.dateAdapter.addCalendarMonths(this.calendar.activeDate, 1) :\n            this.dateAdapter.addCalendarYears(\n                this.calendar.activeDate,\n                this.calendar.currentView === 'year' ? 1 : yearsPerPage\n            );\n    }\n\n    /** Whether the previous period button is enabled. */\n    previousEnabled(): boolean {\n        if (!this.calendar.minDate) {\n            return true;\n        }\n\n        return !this.calendar.minDate ||\n            !this.isSameView(this.calendar.activeDate, this.calendar.minDate);\n    }\n\n    /** Whether the next period button is enabled. */\n    nextEnabled(): boolean {\n        return !this.calendar.maxDate ||\n            !this.isSameView(this.calendar.activeDate, this.calendar.maxDate);\n    }\n\n    /** Whether the two dates represent the same view in the current view mode (month or year). */\n    private isSameView(date1: D, date2: D): boolean {\n        if (this.calendar.currentView === 'month') {\n            return this.dateAdapter.getYear(date1) === this.dateAdapter.getYear(date2) &&\n                this.dateAdapter.getMonth(date1) === this.dateAdapter.getMonth(date2);\n        }\n        if (this.calendar.currentView === 'year') {\n            return this.dateAdapter.getYear(date1) === this.dateAdapter.getYear(date2);\n        }\n\n        // Otherwise we are in 'multi-year' view.\n        return Math.floor(this.dateAdapter.getYear(date1) / yearsPerPage) ===\n            Math.floor(this.dateAdapter.getYear(date2) / yearsPerPage);\n    }\n}\n\n/**\n * A calendar that is used as part of the datepicker.\n * @docs-private\n */\n@Component({\n    selector: 'mc-calendar',\n    templateUrl: 'calendar.html',\n    styleUrls: ['calendar.css'],\n    host: {\n        class: 'mc-calendar'\n    },\n    exportAs: 'mcCalendar',\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class McCalendar<D> implements AfterContentInit, AfterViewChecked, OnDestroy, OnChanges {\n\n    /** A date representing the period (month or year) to start the calendar in. */\n    @Input()\n    get startAt(): D | null {\n        return this._startAt;\n    }\n\n    set startAt(value: D | null) {\n        this._startAt = this.getValidDateOrNull(this.dateAdapter.deserialize(value));\n    }\n\n    /** The currently selected date. */\n    @Input()\n    get selected(): D | null {\n        return this._selected;\n    }\n\n    set selected(value: D | null) {\n        this._selected = this.getValidDateOrNull(this.dateAdapter.deserialize(value));\n    }\n\n    /** The minimum selectable date. */\n    @Input()\n    get minDate(): D | null {\n        return this._minDate;\n    }\n\n    set minDate(value: D | null) {\n        this._minDate = this.getValidDateOrNull(this.dateAdapter.deserialize(value));\n    }\n\n    /** The maximum selectable date. */\n    @Input()\n    get maxDate(): D | null {\n        return this._maxDate;\n    }\n\n    set maxDate(value: D | null) {\n        this._maxDate = this.getValidDateOrNull(this.dateAdapter.deserialize(value));\n    }\n\n    /**\n     * The current active date. This determines which time period is shown and which date is\n     * highlighted when using keyboard navigation.\n     */\n    get activeDate(): D {\n        return this.clampedActiveDate;\n    }\n\n    set activeDate(value: D) {\n        this.clampedActiveDate = this.dateAdapter.clampDate(value, this.minDate, this.maxDate);\n        this.stateChanges.next();\n    }\n\n    /** Whether the calendar is in month view. */\n    get currentView(): McCalendarView {\n        return this._currentView;\n    }\n\n    set currentView(value: McCalendarView) {\n        this._currentView = value;\n        this.moveFocusOnNextTick = true;\n    }\n\n    /** An input indicating the type of the header component, if set. */\n    @Input() headerComponent: IComponentType<any>;\n\n    /** A portal containing the header component type for this calendar. */\n    calendarHeaderPortal: Portal<any>;\n\n    /** Whether the calendar should be started in month or year view. */\n    @Input() startView: McCalendarView = 'month';\n\n    /** Function used to filter which dates are selectable. */\n    @Input() dateFilter: (date: D) => boolean;\n\n    /** Function that can be used to add custom CSS classes to dates. */\n    @Input() dateClass: (date: D) => McCalendarCellCssClasses;\n\n    /** Emits when the currently selected date changes. */\n    @Output() readonly selectedChange: EventEmitter<D> = new EventEmitter<D>();\n\n    /**\n     * Emits the year chosen in multiyear view.\n     * This doesn't imply a change on the selected date.\n     */\n    @Output() readonly yearSelected: EventEmitter<D> = new EventEmitter<D>();\n\n    /**\n     * Emits the month chosen in year view.\n     * This doesn't imply a change on the selected date.\n     */\n    @Output() readonly monthSelected: EventEmitter<D> = new EventEmitter<D>();\n\n    /** Emits when any date is selected. */\n    @Output() readonly userSelection: EventEmitter<void> = new EventEmitter<void>();\n\n    /** Reference to the current month view component. */\n    @ViewChild(McMonthView) monthView: McMonthView<D>;\n\n    /** Reference to the current year view component. */\n    @ViewChild(McYearView) yearView: McYearView<D>;\n\n    /** Reference to the current multi-year view component. */\n    @ViewChild(McMultiYearView) multiYearView: McMultiYearView<D>;\n\n    /**\n     * Emits whenever there is a state change that the header may need to respond to.\n     */\n    stateChanges = new Subject<void>();\n\n    private intlChanges: Subscription;\n\n    /**\n     * Used for scheduling that focus should be moved to the active cell on the next tick.\n     * We need to schedule it, rather than do it immediately, because we have to wait\n     * for Angular to re-evaluate the view children.\n     */\n    private moveFocusOnNextTick = false;\n    private _startAt: D | null;\n    private _selected: D | null;\n    private _minDate: D | null;\n    private _maxDate: D | null;\n    private clampedActiveDate: D;\n    private _currentView: McCalendarView;\n\n    constructor(\n        intl: McDatepickerIntl,\n        @Optional() private dateAdapter: DateAdapter<D>,\n        @Optional() @Inject(MC_DATE_FORMATS) private dateFormats: McDateFormats,\n        private changeDetectorRef: ChangeDetectorRef\n    ) {\n        if (!this.dateAdapter) {\n            throw createMissingDateImplError('DateAdapter');\n        }\n\n        if (!this.dateFormats) {\n            throw createMissingDateImplError('MC_DATE_FORMATS');\n        }\n\n        this.intlChanges = intl.changes.subscribe(() => {\n            changeDetectorRef.markForCheck();\n            this.stateChanges.next();\n        });\n    }\n\n    ngAfterContentInit() {\n        this.calendarHeaderPortal = new ComponentPortal(this.headerComponent || McCalendarHeader);\n        this.activeDate = this.startAt || this.dateAdapter.today();\n\n        // Assign to the private property since we don't want to move focus on init.\n        this._currentView = this.startView;\n    }\n\n    ngAfterViewChecked() {\n        if (this.moveFocusOnNextTick) {\n            this.moveFocusOnNextTick = false;\n            this.focusActiveCell();\n        }\n    }\n\n    ngOnDestroy() {\n        this.intlChanges.unsubscribe();\n        this.stateChanges.complete();\n    }\n\n    ngOnChanges(changes: SimpleChanges) {\n        const change = changes.minDate || changes.maxDate || changes.dateFilter;\n\n        if (change && !change.firstChange) {\n            const view = this.getCurrentViewComponent();\n\n            if (view) {\n                // We need to `detectChanges` manually here, because the `minDate`, `maxDate` etc. are\n                // passed down to the view via data bindings which won't be up-to-date when we call `init`.\n                this.changeDetectorRef.detectChanges();\n                view.init();\n            }\n        }\n\n        this.stateChanges.next();\n    }\n\n    focusActiveCell() {\n        this.getCurrentViewComponent().focusActiveCell();\n    }\n\n    /** Updates today's date after an update of the active date */\n    updateTodaysDate() {\n        const view = this.currentView === 'month' ? this.monthView :\n            (this.currentView === 'year' ? this.yearView : this.multiYearView);\n\n        view.ngAfterContentInit();\n    }\n\n    /** Handles date selection in the month view. */\n    dateSelected(date: D): void {\n        if (!this.dateAdapter.sameDate(date, this.selected)) {\n            this.selectedChange.emit(date);\n        }\n    }\n\n    /** Handles year selection in the multiyear view. */\n    yearSelectedInMultiYearView(normalizedYear: D) {\n        this.yearSelected.emit(normalizedYear);\n    }\n\n    /** Handles month selection in the year view. */\n    monthSelectedInYearView(normalizedMonth: D) {\n        this.monthSelected.emit(normalizedMonth);\n    }\n\n    userSelected(): void {\n        this.userSelection.emit();\n    }\n\n    /** Handles year/month selection in the multi-year/year views. */\n    goToDateInView(date: D, view: 'month' | 'year' | 'multi-year'): void {\n        this.activeDate = date;\n        this.currentView = view;\n    }\n\n    /**\n     * @param obj The object to check.\n     * @returns The given object if it is both a date instance and valid, otherwise null.\n     */\n    private getValidDateOrNull(obj: any): D | null {\n        return (this.dateAdapter.isDateInstance(obj) && this.dateAdapter.isValid(obj)) ? obj : null;\n    }\n\n    /** Returns the component instance that corresponds to the current calendar view. */\n    private getCurrentViewComponent() {\n        return this.monthView || this.yearView || this.multiYearView;\n    }\n}\n","import {\n    animate,\n    state,\n    style,\n    transition,\n    trigger,\n    AnimationTriggerMetadata\n} from '@angular/animations';\n\n\n/**\n * Animations used by the mosaic datepicker.\n * @docs-private\n */\nexport const mcDatepickerAnimations: {\n    readonly transformPanel: AnimationTriggerMetadata;\n    readonly fadeInCalendar: AnimationTriggerMetadata;\n} = {\n    /** Transforms the height of the datepicker's calendar. */\n    transformPanel: trigger('transformPanel', [\n        state('void', style({\n            opacity: 0,\n            transform: 'scale(1, 0.8)'\n        })),\n        transition('void => enter', animate('120ms cubic-bezier(0, 0, 0.2, 1)', style({\n            opacity: 1,\n            transform: 'scale(1, 1)'\n        }))),\n        transition('* => void', animate('100ms linear', style({ opacity: 0 })))\n    ]),\n\n    /** Fades in the content of the calendar. */\n    fadeInCalendar: trigger('fadeInCalendar', [\n        state('void', style({ opacity: 0 })),\n        state('enter', style({ opacity: 1 })),\n\n        // need to keep it until #12440 gets in, otherwise the exit animation will look glitchy.\n        transition('void => *', animate('120ms 100ms cubic-bezier(0.55, 0, 0.55, 0.2)'))\n    ])\n};\n\n// todo should be put into polyfils\n// https://github.com/angular/angular/issues/24769\nif (!Element.prototype.matches) {\n    Element.prototype.matches = (Element.prototype as any).msMatchesSelector;\n}\n","// tslint:disable:no-unbound-method\n// tslint:disable:no-magic-numbers\nimport { DOCUMENT } from '@angular/common';\nimport {\n    AfterViewInit,\n    ChangeDetectionStrategy,\n    Component,\n    ComponentRef,\n    ElementRef,\n    EventEmitter,\n    Inject,\n    InjectionToken,\n    Input,\n    NgZone,\n    OnDestroy,\n    Optional,\n    Output,\n    ViewChild,\n    ViewContainerRef,\n    ViewEncapsulation\n} from '@angular/core';\nimport { Directionality } from '@ptsecurity/cdk/bidi';\nimport { coerceBooleanProperty } from '@ptsecurity/cdk/coercion';\nimport { DateAdapter } from '@ptsecurity/cdk/datetime';\nimport { ESCAPE, UP_ARROW } from '@ptsecurity/cdk/keycodes';\nimport {\n    Overlay,\n    OverlayConfig,\n    OverlayRef,\n    IPositionStrategy,\n    IScrollStrategy\n} from '@ptsecurity/cdk/overlay';\nimport { ComponentPortal, IComponentType } from '@ptsecurity/cdk/portal';\nimport {\n    CanColor,\n    CanColorCtor,\n    mixinColor,\n    ThemePalette\n} from '@ptsecurity/mosaic/core';\nimport { McFormFieldControl } from '@ptsecurity/mosaic/form-field';\nimport { merge, Observable, Subject, Subscription } from 'rxjs';\nimport { filter, take } from 'rxjs/operators';\n\nimport { McCalendar } from './calendar';\nimport { McCalendarCellCssClasses } from './calendar-body';\nimport { mcDatepickerAnimations } from './datepicker-animations';\nimport { createMissingDateImplError } from './datepicker-errors';\nimport { McDatepickerInput } from './datepicker-input';\n\n\n/** Used to generate a unique ID for each datepicker instance. */\nlet datepickerUid = 0;\n\n/** Injection token that determines the scroll handling while the calendar is open. */\nexport const MC_DATEPICKER_SCROLL_STRATEGY =\n    new InjectionToken<() => IScrollStrategy>('mc-datepicker-scroll-strategy');\n\n/** @docs-private */\n// tslint:disable-next-line:naming-convention\nexport function MC_DATEPICKER_SCROLL_STRATEGY_FACTORY(overlay: Overlay): () => IScrollStrategy {\n    return () => overlay.scrollStrategies.reposition();\n}\n\n/** @docs-private */\nexport const MC_DATEPICKER_SCROLL_STRATEGY_FACTORY_PROVIDER = {\n    provide: MC_DATEPICKER_SCROLL_STRATEGY,\n    deps: [Overlay],\n    useFactory: MC_DATEPICKER_SCROLL_STRATEGY_FACTORY\n};\n\n// Boilerplate for applying mixins to McDatepickerContent.\n/** @docs-private */\nexport class McDatepickerContentBase {\n    // tslint:disable-next-line:naming-convention\n    constructor(public _elementRef: ElementRef) {\n    }\n}\n\n// tslint:disable-next-line:naming-convention\nexport const McDatepickerContentMixinBase: CanColorCtor & typeof McDatepickerContentBase =\n    mixinColor(McDatepickerContentBase);\n\n/**\n * Component used as the content for the datepicker dialog and popup. We use this instead of using\n * McCalendar directly as the content so we can control the initial focus. This also gives us a\n * place to put additional features of the popup that are not part of the calendar itself in the\n * future. (e.g. confirmation buttons).\n * @docs-private\n */\n@Component({\n    selector: 'mc-datepicker__content',\n    templateUrl: 'datepicker-content.html',\n    styleUrls: ['datepicker-content.css'],\n    host: {\n        class: 'mc-datepicker__content',\n        '[@transformPanel]': '\"enter\"'\n    },\n    animations: [\n        mcDatepickerAnimations.transformPanel,\n        mcDatepickerAnimations.fadeInCalendar\n    ],\n    exportAs: 'mcDatepickerContent',\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    inputs: ['color']\n})\nexport class McDatepickerContent<D> extends McDatepickerContentMixinBase\n    implements AfterViewInit, CanColor {\n\n    /** Reference to the internal calendar component. */\n    @ViewChild(McCalendar) calendar: McCalendar<D>;\n\n    /** Reference to the datepicker that created the overlay. */\n    datepicker: McDatepicker<D>;\n\n    /** Whether the datepicker is above or below the input. */\n    isAbove: boolean;\n\n    constructor(elementRef: ElementRef) {\n        super(elementRef);\n    }\n\n    ngAfterViewInit() {\n        this.calendar.focusActiveCell();\n    }\n}\n\n\n// TODO(mmalerba): We use a component instead of a directive here so the user can use implicit\n// template reference variables (e.g. #d vs #d=\"mcDatepicker\"). We can change this to a directive\n// if angular adds support for `exportAs: '$implicit'` on directives.\n/** Component responsible for managing the datepicker popup/dialog. */\n@Component({\n    selector: 'mc-datepicker',\n    template: '',\n    exportAs: 'mcDatepicker',\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n    providers: [{ provide: McFormFieldControl, useExisting: McDatepicker }]\n})\nexport class McDatepicker<D> implements OnDestroy, CanColor {\n\n    /** The date to open the calendar to initially. */\n    @Input()\n    get startAt(): D | null {\n        // If an explicit startAt is set we start there, otherwise we start at whatever the currently\n        // selected value is.\n        return this._startAt || (this.datepickerInput ? this.datepickerInput.value : null);\n    }\n\n    set startAt(value: D | null) {\n        this._startAt = this.getValidDateOrNull(this.dateAdapter.deserialize(value));\n    }\n\n    /** Color palette to use on the datepicker's calendar. */\n    @Input()\n    get color(): ThemePalette {\n        // @ts-ignore:next-line\n        return this._color ||\n            (this.datepickerInput ? this.datepickerInput.getThemePalette() : undefined);\n    }\n\n    set color(value: ThemePalette) {\n        this._color = value;\n    }\n\n    /** Whether the datepicker pop-up should be disabled. */\n    @Input()\n    get disabled(): boolean {\n        return this._disabled === undefined && this.datepickerInput ?\n            this.datepickerInput.disabled : !!this._disabled;\n    }\n\n    set disabled(value: boolean) {\n        const newValue = coerceBooleanProperty(value);\n\n        if (newValue !== this._disabled) {\n            this._disabled = newValue;\n            this.disabledChange.next(newValue);\n        }\n    }\n\n    /** Whether the calendar is open. */\n    @Input()\n    get opened(): boolean {\n        return this._opened;\n    }\n\n    set opened(value: boolean) {\n        if (value) {\n            this.open();\n        } else {\n            this.close();\n        }\n    }\n\n    /** The currently selected date. */\n    get selected(): D | null {\n        return this.validSelected;\n    }\n\n    set selected(value: D | null) {\n        this.validSelected = value;\n    }\n\n    /** The minimum selectable date. */\n    get minDate(): D | null {\n        return this.datepickerInput && this.datepickerInput.min;\n    }\n\n    /** The maximum selectable date. */\n    get maxDate(): D | null {\n        return this.datepickerInput && this.datepickerInput.max;\n    }\n\n    get dateFilter(): (date: D | null) => boolean {\n        return this.datepickerInput && this.datepickerInput.dateFilter;\n    }\n\n\n    get value(): D | null {\n        return this.selected;\n    }\n\n    /** An input indicating the type of the custom header component for the calendar, if set. */\n    @Input() calendarHeaderComponent: IComponentType<any>;\n\n    /** The view that the calendar should start in. */\n    @Input() startView: 'month' | 'year' | 'multi-year' = 'month';\n\n    /**\n     * Emits selected year in multiyear view.\n     * This doesn't imply a change on the selected date.\n     */\n    @Output() readonly yearSelected: EventEmitter<D> = new EventEmitter<D>();\n\n    /**\n     * Emits selected month in year view.\n     * This doesn't imply a change on the selected date.\n     */\n    @Output() readonly monthSelected: EventEmitter<D> = new EventEmitter<D>();\n\n    /** Classes to be passed to the date picker panel. Supports the same syntax as `ngClass`. */\n    @Input() panelClass: string | string[];\n\n    /** Function that can be used to add custom CSS classes to dates. */\n    @Input() dateClass: (date: D) => McCalendarCellCssClasses;\n\n    /** Emits when the datepicker has been opened. */\n    @Output('opened') openedStream: EventEmitter<void> = new EventEmitter<void>();\n\n    /** Emits when the datepicker has been closed. */\n    @Output('closed') closedStream: EventEmitter<void> = new EventEmitter<void>();\n\n    /** The id for the datepicker calendar. */\n    id: string = `mc-datepicker-${datepickerUid++}`;\n\n    /** A reference to the overlay when the calendar is opened as a popup. */\n    popupRef: OverlayRef;\n\n    /** The input element this datepicker is associated with. */\n    datepickerInput: McDatepickerInput<D>;\n\n    readonly stateChanges: Observable<void> = new Subject<void>();\n\n    /** Emits when the datepicker is disabled. */\n    readonly disabledChange = new Subject<boolean>();\n\n    /** Emits new selected date when selected date changes. */\n    readonly selectedChanged = new Subject<D>();\n    private scrollStrategy: () => IScrollStrategy;\n    private _startAt: D | null;\n    private _disabled: boolean;\n    private _opened = false;\n    private validSelected: D | null = null;\n    private _color: ThemePalette;\n\n    /** A portal containing the calendar for this datepicker. */\n    private calendarPortal: ComponentPortal<McDatepickerContent<D>>;\n\n    /** Reference to the component instantiated in popup mode. */\n    private popupComponentRef: ComponentRef<McDatepickerContent<D>> | null;\n\n    /** The element that was focused before the datepicker was opened. */\n    private focusedElementBeforeOpen: HTMLElement | null = null;\n\n    /** Subscription to value changes in the associated input element. */\n    private inputSubscription = Subscription.EMPTY;\n\n    constructor(private overlay: Overlay,\n                private ngZone: NgZone,\n                private viewContainerRef: ViewContainerRef,\n                @Inject(MC_DATEPICKER_SCROLL_STRATEGY) scrollStrategy: any,\n                @Optional() private dateAdapter: DateAdapter<D>,\n                @Optional() private dir: Directionality,\n                @Optional() @Inject(DOCUMENT) private document: any) {\n        if (!this.dateAdapter) {\n            throw createMissingDateImplError('DateAdapter');\n        }\n\n        this.scrollStrategy = scrollStrategy;\n    }\n\n    ngOnDestroy() {\n        this.close();\n        this.inputSubscription.unsubscribe();\n        this.disabledChange.complete();\n\n        if (this.popupRef) {\n            this.popupRef.dispose();\n            this.popupComponentRef = null;\n        }\n    }\n\n    /** Selects the given date */\n    select(date: D): void {\n        const oldValue = this.selected;\n        this.selected = date;\n        if (!this.dateAdapter.sameDate(oldValue, this.selected)) {\n            this.selectedChanged.next(date);\n        }\n    }\n\n    /** Emits the selected year in multiyear view */\n    selectYear(normalizedYear: D): void {\n        this.yearSelected.emit(normalizedYear);\n    }\n\n    /** Emits selected month in year view */\n    selectMonth(normalizedMonth: D): void {\n        this.monthSelected.emit(normalizedMonth);\n    }\n\n    /**\n     * Register an input with this datepicker.\n     * @param input The datepicker input to register with this datepicker.\n     */\n    registerInput(input: McDatepickerInput<D>): void {\n        if (this.datepickerInput) {\n            throw Error('A McDatepicker can only be associated with a single input.');\n        }\n        this.datepickerInput = input;\n        this.inputSubscription =\n            this.datepickerInput.valueChange.subscribe((value: D | null) => this.selected = value);\n    }\n\n    /** Open the calendar. */\n    open(): void {\n        if (this._opened || this.disabled) {\n            return;\n        }\n        if (!this.datepickerInput) {\n            throw Error('Attempted to open an McDatepicker with no associated input.');\n        }\n        if (this.document) {\n            this.focusedElementBeforeOpen = this.document.activeElement;\n        }\n\n        this.openAsPopup();\n\n        this._opened = true;\n        this.openedStream.emit();\n    }\n\n    /** Close the calendar. */\n    close(): void {\n        if (!this._opened) {\n            return;\n        }\n\n        if (this.popupRef && this.popupRef.hasAttached()) {\n            this.popupRef.detach();\n        }\n\n        if (this.calendarPortal && this.calendarPortal.isAttached) {\n            this.calendarPortal.detach();\n        }\n\n        const completeClose = () => {\n            // The `_opened` could've been reset already if\n            // we got two events in quick succession.\n            if (this._opened) {\n                this._opened = false;\n                this.closedStream.emit();\n                this.focusedElementBeforeOpen = null;\n            }\n        };\n\n        if (this.focusedElementBeforeOpen &&\n            typeof this.focusedElementBeforeOpen.focus === 'function') {\n            // Because IE moves focus asynchronously, we can't count on it being restored before we've\n            // marked the datepicker as closed. If the event fires out of sequence and the element that\n            // we're refocusing opens the datepicker on focus, the user could be stuck with not being\n            // able to close the calendar at all. We work around it by making the logic, that marks\n            // the datepicker as closed, async as well.\n            this.focusedElementBeforeOpen.focus();\n            setTimeout(completeClose);\n        } else {\n            completeClose();\n        }\n    }\n\n    /** Open the calendar as a popup. */\n    private openAsPopup(): void {\n        if (!this.calendarPortal) {\n            this.calendarPortal = new ComponentPortal<McDatepickerContent<D>>(McDatepickerContent,\n                this.viewContainerRef);\n        }\n\n        if (!this.popupRef) {\n            this.createPopup();\n        }\n\n        if (!this.popupRef.hasAttached()) {\n            this.popupComponentRef = this.popupRef.attach(this.calendarPortal);\n            this.popupComponentRef.instance.datepicker = this;\n            this.setColor();\n\n            // Update the position once the calendar has rendered.\n            this.ngZone.onStable.asObservable().pipe(take(1)).subscribe(() => {\n                this.popupRef.updatePosition();\n            });\n        }\n    }\n\n    /** Create the popup. */\n    private createPopup(): void {\n        const overlayConfig = new OverlayConfig({\n            positionStrategy: this.createPopupPositionStrategy(),\n            hasBackdrop: true,\n            backdropClass: 'mc-overlay-transparent-backdrop',\n            direction: this.dir,\n            scrollStrategy: this.scrollStrategy(),\n            panelClass: 'mc-datepicker__popup'\n        });\n\n        this.popupRef = this.overlay.create(overlayConfig);\n        this.popupRef.overlayElement.setAttribute('role', 'dialog');\n\n        merge(\n            this.popupRef.backdropClick(),\n            this.popupRef.detachments(),\n            this.popupRef.keydownEvents().pipe(filter((event) => {\n                // Closing on alt + up is only valid when there's an input associated with the datepicker.\n                // tslint:disable-next-line:deprecation\n                return event.keyCode === ESCAPE || (this.datepickerInput && event.altKey && event.keyCode === UP_ARROW);\n            }))\n        ).subscribe(() => this.close());\n    }\n\n    /** Create the popup PositionStrategy. */\n    private createPopupPositionStrategy(): IPositionStrategy {\n        return this.overlay.position()\n            .flexibleConnectedTo(this.datepickerInput.elementRef)\n            .withTransformOriginOn('.mc-datepicker__content')\n            .withFlexibleDimensions(false)\n            .withViewportMargin(8)\n            .withLockedPosition()\n            .withPositions([\n                {\n                    originX: 'start',\n                    originY: 'bottom',\n                    overlayX: 'start',\n                    overlayY: 'top'\n                },\n                {\n                    originX: 'start',\n                    originY: 'top',\n                    overlayX: 'start',\n                    overlayY: 'bottom'\n                },\n                {\n                    originX: 'end',\n                    originY: 'bottom',\n                    overlayX: 'end',\n                    overlayY: 'top'\n                },\n                {\n                    originX: 'end',\n                    originY: 'top',\n                    overlayX: 'end',\n                    overlayY: 'bottom'\n                }\n            ]);\n    }\n\n    /**\n     * @param obj The object to check.\n     * @returns The given object if it is both a date instance and valid, otherwise null.\n     */\n    private getValidDateOrNull(obj: any): D | null {\n        return (this.dateAdapter.isDateInstance(obj) && this.dateAdapter.isValid(obj)) ? obj : null;\n    }\n\n    /** Passes the current theme color along to the calendar overlay. */\n    private setColor(): void {\n        const color = this.color;\n        if (this.popupComponentRef) {\n            this.popupComponentRef.instance.color = color;\n        }\n    }\n}\n","// tslint:disable:no-empty\nimport {\n    Directive,\n    ElementRef,\n    EventEmitter,\n    forwardRef,\n    Inject,\n    Input,\n    OnDestroy,\n    Optional,\n    Output\n} from '@angular/core';\nimport {\n    AbstractControl,\n    ControlValueAccessor,\n    NG_VALIDATORS,\n    NG_VALUE_ACCESSOR,\n    ValidationErrors,\n    Validator,\n    ValidatorFn,\n    Validators\n} from '@angular/forms';\nimport { coerceBooleanProperty } from '@ptsecurity/cdk/coercion';\nimport { DateAdapter, MC_DATE_FORMATS, McDateFormats } from '@ptsecurity/cdk/datetime';\nimport { DOWN_ARROW } from '@ptsecurity/cdk/keycodes';\nimport { ThemePalette } from '@ptsecurity/mosaic/core';\nimport { McFormField } from '@ptsecurity/mosaic/form-field';\nimport { MC_INPUT_VALUE_ACCESSOR } from '@ptsecurity/mosaic/input';\nimport { Subscription } from 'rxjs';\n\nimport { McDatepicker } from './datepicker';\nimport { createMissingDateImplError } from './datepicker-errors';\n\n\n/** @docs-private */\nexport const MC_DATEPICKER_VALUE_ACCESSOR: any = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => McDatepickerInput),\n    multi: true\n};\n\n/** @docs-private */\nexport const MC_DATEPICKER_VALIDATORS: any = {\n    provide: NG_VALIDATORS,\n    useExisting: forwardRef(() => McDatepickerInput),\n    multi: true\n};\n\n\n/**\n * An event used for datepicker input and change events. We don't always have access to a native\n * input or change event because the event may have been triggered by the user clicking on the\n * calendar popup. For consistency, we always use McDatepickerInputEvent instead.\n */\nexport class McDatepickerInputEvent<D> {\n    /** The new value for the target datepicker input. */\n    value: D | null;\n\n    constructor(\n        /** Reference to the datepicker input component that emitted the event. */\n        public target: McDatepickerInput<D>,\n        /** Reference to the native input element associated with the datepicker input. */\n        public targetElement: HTMLElement) {\n        this.value = this.target.value;\n    }\n}\n\n\n/** Directive used to connect an input to a McDatepicker. */\n@Directive({\n    selector: 'input[mcDatepicker]',\n    providers: [\n        MC_DATEPICKER_VALUE_ACCESSOR,\n        MC_DATEPICKER_VALIDATORS,\n        { provide: MC_INPUT_VALUE_ACCESSOR, useExisting: McDatepickerInput }\n    ],\n    host: {\n        '[attr.aria-haspopup]': 'true',\n        '[attr.aria-owns]': '(datepicker?.opened && datepicker.id) || null',\n        '[attr.min]': 'min ? dateAdapter.toIso8601(min) : null',\n        '[attr.max]': 'max ? dateAdapter.toIso8601(max) : null',\n        '[disabled]': 'disabled',\n        '(input)': 'onInput($event.target.value)',\n        '(change)': 'onChange()',\n        '(blur)': 'onBlur()',\n        '(keydown)': 'onKeydown($event)'\n    },\n    exportAs: 'mcDatepickerInput'\n})\nexport class McDatepickerInput<D> implements ControlValueAccessor, OnDestroy, Validator {\n    /** The datepicker that this input is associated with. */\n    @Input()\n    set mcDatepicker(value: McDatepicker<D>) {\n        if (!value) {\n            return;\n        }\n\n        this.datepicker = value;\n        this.datepicker.registerInput(this);\n        this.datepickerSubscription.unsubscribe();\n\n        this.datepickerSubscription = this.datepicker.selectedChanged.subscribe((selected: D) => {\n            this.value = selected;\n            this.cvaOnChange(selected);\n            this.onTouched();\n            this.dateInput.emit(new McDatepickerInputEvent(this, this.elementRef.nativeElement));\n            this.dateChange.emit(new McDatepickerInputEvent(this, this.elementRef.nativeElement));\n        });\n    }\n\n    /** Function that can be used to filter out dates within the datepicker. */\n    @Input()\n    set mcDatepickerFilter(value: (date: D | null) => boolean) {\n        this.dateFilter = value;\n        this.validatorOnChange();\n    }\n\n    /** The value of the input. */\n    @Input()\n    get value(): D | null {\n        return this._value;\n    }\n\n    set value(value: D | null) {\n        // tslint:disable-next-line:no-parameter-reassignment\n        value = this.dateAdapter.deserialize(value);\n        this.lastValueValid = !value || this.dateAdapter.isValid(value);\n        // tslint:disable-next-line:no-parameter-reassignment\n        value = this.getValidDateOrNull(value);\n        const oldDate = this.value;\n        this._value = value;\n        this.formatValue(value);\n\n        if (!this.dateAdapter.sameDate(oldDate, value)) {\n            this.valueChange.emit(value);\n        }\n    }\n\n    /** The minimum valid date. */\n    @Input()\n    get min(): D | null {\n        return this._min;\n    }\n\n    set min(value: D | null) {\n        this._min = this.getValidDateOrNull(this.dateAdapter.deserialize(value));\n        this.validatorOnChange();\n    }\n\n    /** The maximum valid date. */\n    @Input()\n    get max(): D | null {\n        return this._max;\n    }\n\n    set max(value: D | null) {\n        this._max = this.getValidDateOrNull(this.dateAdapter.deserialize(value));\n        this.validatorOnChange();\n    }\n\n    /** Whether the datepicker-input is disabled. */\n    @Input()\n    get disabled(): boolean {\n        return !!this._disabled;\n    }\n\n    set disabled(value: boolean) {\n        const newValue = coerceBooleanProperty(value);\n        const element = this.elementRef.nativeElement;\n\n        if (this._disabled !== newValue) {\n            this._disabled = newValue;\n            this.disabledChange.emit(newValue);\n        }\n\n        // We need to null check the `blur` method, because it's undefined during SSR.\n        if (newValue && element.blur) {\n            // Normally, native input elements automatically blur if they turn disabled. This behavior\n            // is problematic, because it would mean that it triggers another change detection cycle,\n            // which then causes a changed after checked error if the input element was focused before.\n            element.blur();\n        }\n    }\n\n    datepicker: McDatepicker<D>;\n    dateFilter: (date: D | null) => boolean;\n\n    /** Emits when a `change` event is fired on this `<input>`. */\n    @Output() readonly dateChange: EventEmitter<McDatepickerInputEvent<D>> =\n        new EventEmitter<McDatepickerInputEvent<D>>();\n\n    /** Emits when an `input` event is fired on this `<input>`. */\n    @Output() readonly dateInput: EventEmitter<McDatepickerInputEvent<D>> =\n        new EventEmitter<McDatepickerInputEvent<D>>();\n\n    /** Emits when the value changes (either due to user input or programmatic change). */\n    valueChange = new EventEmitter<D | null>();\n\n    /** Emits when the disabled state has changed */\n    disabledChange = new EventEmitter<boolean>();\n    private _value: D | null;\n    private _min: D | null;\n    private _max: D | null;\n    private _disabled: boolean;\n\n    private datepickerSubscription = Subscription.EMPTY;\n\n    private localeSubscription = Subscription.EMPTY;\n\n    /** Whether the last value set on the input was valid. */\n    private lastValueValid = false;\n\n    constructor(\n        public elementRef: ElementRef<HTMLInputElement>,\n        @Optional() public dateAdapter: DateAdapter<D>,\n        @Optional() @Inject(MC_DATE_FORMATS) private dateFormats: McDateFormats,\n        @Optional() private formField: McFormField\n    ) {\n        if (!this.dateAdapter) {\n            throw createMissingDateImplError('DateAdapter');\n        }\n\n        if (!this.dateFormats) {\n            throw createMissingDateImplError('MC_DATE_FORMATS');\n        }\n\n        // Update the displayed date when the locale changes.\n        this.localeSubscription = dateAdapter.localeChanges.subscribe(() => {\n            this.value = this.value;\n        });\n    }\n\n    onTouched = () => {\n    }\n\n    ngOnDestroy() {\n        this.datepickerSubscription.unsubscribe();\n        this.localeSubscription.unsubscribe();\n        this.valueChange.complete();\n        this.disabledChange.complete();\n    }\n\n    /** @docs-private */\n    registerOnValidatorChange(fn: () => void): void {\n        this.validatorOnChange = fn;\n    }\n\n    /** @docs-private */\n    validate(c: AbstractControl): ValidationErrors | null {\n        return this.validator ? this.validator(c) : null;\n    }\n\n    // Implemented as part of ControlValueAccessor.\n    writeValue(value: D): void {\n        this.value = value;\n    }\n\n    // Implemented as part of ControlValueAccessor.\n    registerOnChange(fn: (value: any) => void): void {\n        this.cvaOnChange = fn;\n    }\n\n    // Implemented as part of ControlValueAccessor.\n    registerOnTouched(fn: () => void): void {\n        this.onTouched = fn;\n    }\n\n    // Implemented as part of ControlValueAccessor.\n    setDisabledState(isDisabled: boolean): void {\n        this.disabled = isDisabled;\n    }\n\n    onKeydown(event: KeyboardEvent) {\n        // tslint:disable-next-line:deprecation\n        const isAltDownArrow = event.altKey && event.keyCode === DOWN_ARROW;\n\n        if (this.datepicker && isAltDownArrow && !this.elementRef.nativeElement.readOnly) {\n            this.datepicker.open();\n            event.preventDefault();\n        }\n    }\n\n    onInput(value: string) {\n        let date = this.dateAdapter.parse(value, this.dateFormats.parse.dateInput);\n        this.lastValueValid = !date || this.dateAdapter.isValid(date);\n        date = this.getValidDateOrNull(date);\n\n        if (!this.dateAdapter.sameDate(date, this._value)) {\n            this._value = date;\n            this.cvaOnChange(date);\n            this.valueChange.emit(date);\n            this.dateInput.emit(new McDatepickerInputEvent(this, this.elementRef.nativeElement));\n        }\n    }\n\n    onChange() {\n        this.dateChange.emit(new McDatepickerInputEvent(this, this.elementRef.nativeElement));\n    }\n\n    /** Returns the palette used by the input's form field, if any. */\n    getThemePalette(): ThemePalette | undefined {\n        return this.formField ? this.formField.color : undefined;\n    }\n\n    /** Handles blur events on the input. */\n    onBlur() {\n        // Reformat the input only if we have a valid value.\n        if (this.value) {\n            this.formatValue(this.value);\n        }\n\n        this.onTouched();\n    }\n\n    private cvaOnChange: (value: any) => void = () => {\n    }\n\n    private validatorOnChange = () => {\n    }\n\n    /** The form control validator for whether the input parses. */\n    private parseValidator: ValidatorFn = (): ValidationErrors | null => {\n        return this.lastValueValid ?\n            null : { mcDatepickerParse: { text: this.elementRef.nativeElement.value } };\n    }\n\n    /** The form control validator for the min date. */\n    private minValidator: ValidatorFn = (control: AbstractControl): ValidationErrors | null => {\n        const controlValue = this.getValidDateOrNull(this.dateAdapter.deserialize(control.value));\n\n        return (!this.min || !controlValue ||\n            this.dateAdapter.compareDate(this.min, controlValue) <= 0) ?\n            null : { mcDatepickerMin: { min: this.min, actual: controlValue } };\n    }\n\n    /** The form control validator for the max date. */\n    private maxValidator: ValidatorFn = (control: AbstractControl): ValidationErrors | null => {\n        const controlValue = this.getValidDateOrNull(this.dateAdapter.deserialize(control.value));\n\n        return (!this.max || !controlValue ||\n            this.dateAdapter.compareDate(this.max, controlValue) >= 0) ?\n            null : { mcDatepickerMax: { max: this.max, actual: controlValue } };\n    }\n\n    /** The form control validator for the date filter. */\n    private filterValidator: ValidatorFn = (control: AbstractControl): ValidationErrors | null => {\n        const controlValue = this.getValidDateOrNull(this.dateAdapter.deserialize(control.value));\n\n        return !this.dateFilter || !controlValue || this.dateFilter(controlValue) ?\n            null : { mcDatepickerFilter: true };\n    }\n\n    /** Formats a value and sets it on the input element. */\n    private formatValue(value: D | null) {\n        this.elementRef.nativeElement.value =\n            value ? this.dateAdapter.format(value, this.dateFormats.display.dateInput) : '';\n    }\n\n    /** The combined form control validator for this input. */\n        // tslint:disable:member-ordering\n    private validator: ValidatorFn | null =\n        Validators.compose([\n            this.parseValidator,\n            this.minValidator,\n            this.maxValidator,\n            this.filterValidator\n        ]);\n\n    /**\n     * @param obj The object to check.\n     * @returns The given object if it is both a date instance and valid, otherwise null.\n     */\n    private getValidDateOrNull(obj: any): D | null {\n        return (this.dateAdapter.isDateInstance(obj) && this.dateAdapter.isValid(obj)) ? obj : null;\n    }\n}\n","import {\n    AfterContentInit,\n    Attribute,\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    ContentChild,\n    Directive,\n    Input,\n    OnChanges,\n    OnDestroy,\n    SimpleChanges,\n    ViewEncapsulation,\n    ViewChild\n} from '@angular/core';\nimport { coerceBooleanProperty } from '@ptsecurity/cdk/coercion';\nimport { McButton } from '@ptsecurity/mosaic/button';\nimport { merge, of as observableOf, Subscription } from 'rxjs';\n\nimport { McDatepicker } from './datepicker';\nimport { McDatepickerIntl } from './datepicker-intl';\n\n\n/** Can be used to override the icon of a `mcDatepickerToggle`. */\n@Directive({\n    selector: '[mcDatepickerToggleIcon]'\n})\nexport class McDatepickerToggleIcon {\n}\n\n\n@Component({\n    selector: 'mc-datepicker-toggle',\n    templateUrl: 'datepicker-toggle.html',\n    styleUrls: ['datepicker-toggle.css'],\n    host: {\n        class: 'mc-datepicker-toggle',\n        // Always set the tabindex to -1 so that it doesn't overlap with any custom tabindex the\n        // consumer may have provided, while still being able to receive focus.\n        '[attr.tabindex]': '-1',\n        '[class.mc-datepicker-toggle_active]': 'datepicker && datepicker.opened',\n        '[class.mc-warn]': 'datepicker && datepicker.color === \"error\"',\n        '(focus)': 'button.focus()'\n    },\n    exportAs: 'mcDatepickerToggle',\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class McDatepickerToggle<D> implements AfterContentInit, OnChanges, OnDestroy {\n\n    /** Whether the toggle button is disabled. */\n    @Input()\n    get disabled(): boolean {\n        return this._disabled === undefined ? this.datepicker.disabled : !!this._disabled;\n    }\n\n    set disabled(value: boolean) {\n        this._disabled = coerceBooleanProperty(value);\n    }\n\n    /** Datepicker instance that the button will toggle. */\n    @Input('for') datepicker: McDatepicker<D>;\n\n    /** Tabindex for the toggle. */\n    @Input() tabIndex: number | null;\n\n    /** Custom icon set by the consumer. */\n    @ContentChild(McDatepickerToggleIcon) customIcon: McDatepickerToggleIcon;\n\n    /** Underlying button element. */\n    @ViewChild('button') button: McButton;\n    private stateChanges = Subscription.EMPTY;\n\n    private _disabled: boolean;\n\n    constructor(\n        public intl: McDatepickerIntl,\n        private changeDetectorRef: ChangeDetectorRef,\n        @Attribute('tabindex') defaultTabIndex: string\n    ) {\n        const parsedTabIndex = Number(defaultTabIndex);\n        this.tabIndex = (parsedTabIndex || parsedTabIndex === 0) ? parsedTabIndex : null;\n    }\n\n    ngOnChanges(changes: SimpleChanges) {\n        if (changes.datepicker) {\n            this.watchStateChanges();\n        }\n    }\n\n    ngOnDestroy() {\n        this.stateChanges.unsubscribe();\n    }\n\n    ngAfterContentInit() {\n        this.watchStateChanges();\n    }\n\n    open(event: Event): void {\n        if (this.datepicker && !this.disabled) {\n            this.datepicker.open();\n            event.stopPropagation();\n        }\n    }\n\n    private watchStateChanges() {\n        const datepickerDisabled = this.datepicker ? this.datepicker.disabledChange : observableOf();\n        const inputDisabled = this.datepicker && this.datepicker.datepickerInput ?\n            this.datepicker.datepickerInput.disabledChange : observableOf();\n        const datepickerToggled = this.datepicker ?\n            merge(this.datepicker.openedStream, this.datepicker.closedStream) :\n            observableOf();\n\n        this.stateChanges.unsubscribe();\n        this.stateChanges = merge(\n            this.intl.changes,\n            datepickerDisabled,\n            inputDisabled,\n            datepickerToggled\n        ).subscribe(() => this.changeDetectorRef.markForCheck());\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { A11yModule } from '@ptsecurity/cdk/a11y';\nimport { OverlayModule } from '@ptsecurity/cdk/overlay';\nimport { PortalModule } from '@ptsecurity/cdk/portal';\nimport { McButtonModule } from '@ptsecurity/mosaic/button';\nimport { McIconModule } from '@ptsecurity/mosaic/icon';\n\nimport { McCalendar, McCalendarHeader } from './calendar';\nimport { McCalendarBody } from './calendar-body';\nimport {\n    McDatepicker,\n    McDatepickerContent,\n    MC_DATEPICKER_SCROLL_STRATEGY_FACTORY_PROVIDER\n} from './datepicker';\nimport { McDatepickerInput } from './datepicker-input';\nimport { McDatepickerIntl } from './datepicker-intl';\nimport { McDatepickerToggle, McDatepickerToggleIcon } from './datepicker-toggle';\nimport { McMonthView } from './month-view';\nimport { McMultiYearView } from './multi-year-view';\nimport { McYearView } from './year-view';\n\n\n@NgModule({\n    imports: [\n        CommonModule,\n        McButtonModule,\n        OverlayModule,\n        A11yModule,\n        PortalModule,\n        McButtonModule,\n        McIconModule\n    ],\n    exports: [\n        McCalendar,\n        McCalendarBody,\n        McDatepicker,\n        McDatepickerContent,\n        McDatepickerInput,\n        McDatepickerToggle,\n        McDatepickerToggleIcon,\n        McMonthView,\n        McYearView,\n        McMultiYearView,\n        McCalendarHeader\n    ],\n    declarations: [\n        McCalendar,\n        McCalendarBody,\n        McDatepicker,\n        McDatepickerContent,\n        McDatepickerInput,\n        McDatepickerToggle,\n        McDatepickerToggleIcon,\n        McMonthView,\n        McYearView,\n        McMultiYearView,\n        McCalendarHeader\n    ],\n    providers: [\n        McDatepickerIntl,\n        MC_DATEPICKER_SCROLL_STRATEGY_FACTORY_PROVIDER\n    ],\n    entryComponents: [\n        McDatepickerContent,\n        McCalendarHeader\n    ]\n})\nexport class McDatepickerModule {\n}\n","import { ChangeDetectionStrategy, Component, Input, ViewEncapsulation } from '@angular/core';\nimport { coerceBooleanProperty } from '@ptsecurity/cdk/coercion';\n\n\n@Component({\n    selector: 'mc-divider',\n    host: {\n        class: 'mc-divider',\n        role: 'separator',\n        '[attr.aria-orientation]': 'vertical ? \"vertical\" : \"horizontal\"',\n        '[class.mc-divider-vertical]': 'vertical',\n        '[class.mc-divider-inset]': 'inset'\n    },\n    template: '',\n    styleUrls: ['divider.css'],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    preserveWhitespaces: false\n})\nexport class McDivider {\n    // Whether the divider is vertically aligned.\n    @Input()\n    get vertical(): boolean {\n        return this._vertical;\n    }\n\n    set vertical(value: boolean) {\n        this._vertical = coerceBooleanProperty(value);\n    }\n\n    private _vertical: boolean = false;\n\n    // Whether the divider is an inset divider.\n    @Input()\n    get inset(): boolean {\n        return this._inset;\n    }\n\n    set inset(value: boolean) {\n        this._inset = coerceBooleanProperty(value);\n    }\n\n    private _inset: boolean = false;\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { McDivider } from './divider.component';\n\n\n@NgModule({\n    imports: [CommonModule],\n    exports: [McDivider],\n    declarations: [McDivider]\n})\nexport class McDividerModule {\n}\n","import { DOCUMENT } from '@angular/common';\nimport {\n    Directive,\n    TemplateRef,\n    ComponentFactoryResolver,\n    ApplicationRef,\n    Injector,\n    ViewContainerRef,\n    Inject,\n    OnDestroy\n} from '@angular/core';\nimport { TemplatePortal, DomPortalOutlet } from '@ptsecurity/cdk/portal';\nimport { Subject } from 'rxjs';\n\n\n/**\n * Dropdown content that will be rendered lazily once the dropdown is opened.\n */\n@Directive({\n    selector: 'ng-template[mcDropdownContent]'\n})\nexport class McDropdownContent implements OnDestroy {\n\n    /** Emits when the dropdown content has been attached. */\n    _attached = new Subject<void>();\n    private _portal: TemplatePortal;\n    private _outlet: DomPortalOutlet;\n\n    constructor(\n        private _template: TemplateRef<any>,\n        private _componentFactoryResolver: ComponentFactoryResolver,\n        private _appRef: ApplicationRef,\n        private _injector: Injector,\n        private _viewContainerRef: ViewContainerRef,\n        @Inject(DOCUMENT) private _document: any) {}\n\n    /**\n     * Attaches the content with a particular context.\n     * @docs-private\n     */\n    attach(context: any = {}) {\n        if (!this._portal) {\n            this._portal = new TemplatePortal(this._template, this._viewContainerRef);\n        }\n\n        this.detach();\n\n        if (!this._outlet) {\n            this._outlet = new DomPortalOutlet(this._document.createElement('div'),\n                this._componentFactoryResolver, this._appRef, this._injector);\n        }\n\n        const element: HTMLElement = this._template.elementRef.nativeElement;\n\n        // Because we support opening the same dropdown from different triggers (which in turn have their\n        // own `OverlayRef` panel), we have to re-insert the host element every time, otherwise we\n        // risk it staying attached to a pane that's no longer in the DOM.\n        element.parentNode!.insertBefore(this._outlet.outletElement, element);\n        this._portal.attach(this._outlet, context);\n        this._attached.next();\n    }\n\n    /**\n     * Detaches the content.\n     * @docs-private\n     */\n    detach() {\n        if (this._portal.isAttached) {\n            this._portal.detach();\n        }\n    }\n\n    ngOnDestroy() {\n        if (this._outlet) {\n            this._outlet.dispose();\n        }\n    }\n}\n","import { EventEmitter, TemplateRef, InjectionToken } from '@angular/core';\nimport { FocusOrigin } from '@ptsecurity/cdk/a11y';\nimport { Direction } from '@ptsecurity/cdk/bidi';\n\nimport { McDropdownContent } from './dropdown-content';\nimport { DropdownPositionX, DropdownPositionY } from './dropdown-positions';\n\n\n/**\n * Injection token used to provide the parent dropdown to dropdown-specific components.\n * @docs-private\n */\nexport const MC_DROPDOWN_PANEL = new InjectionToken<McDropdownPanel>('MC_DROPDOWN_PANEL');\n\n/**\n * Interface for a custom dropdown panel that can be used with `mcDropdownTriggerFor`.\n * @docs-private\n */\n// tslint:disable-next-line:interface-name\nexport interface McDropdownPanel<T = any> {\n    xPosition: DropdownPositionX;\n    yPosition: DropdownPositionY;\n    overlapTrigger: boolean;\n    templateRef: TemplateRef<any>;\n    closed: EventEmitter<void | 'click' | 'keydown' | 'tab'>;\n    direction?: Direction;\n    lazyContent?: McDropdownContent;\n    backdropClass?: string;\n    hasBackdrop?: boolean;\n    focusFirstItem(origin?: FocusOrigin): void;\n    resetActiveItem(): void;\n    setPositionClasses?(x: DropdownPositionX, y: DropdownPositionY): void;\n    addItem?(item: T): void;\n    removeItem?(item: T): void;\n}\n","import { DOCUMENT } from '@angular/common';\nimport {\n    ChangeDetectionStrategy,\n    Component,\n    ElementRef,\n    OnDestroy,\n    ViewEncapsulation,\n    Inject,\n    Optional\n} from '@angular/core';\nimport { IFocusableOption, FocusMonitor, FocusOrigin } from '@ptsecurity/cdk/a11y';\nimport {\n    CanDisable, CanDisableCtor,\n    mixinDisabled\n} from '@ptsecurity/mosaic/core';\n\nimport { MC_DROPDOWN_PANEL, McDropdownPanel } from './dropdown-panel';\n\n\n// Boilerplate for applying mixins to McDropdownItem.\n/** @docs-private */\nexport class McDropdownItemBase {}\nexport const _McDropdownItemMixinBase: CanDisableCtor & typeof McDropdownItemBase =\n    mixinDisabled(McDropdownItemBase);\n\n/**\n * This directive is intended to be used inside an mc-dropdown tag.\n * It exists mostly to set the role attribute.\n */\n@Component({\n    selector: 'mc-dropdown-item, [mc-dropdown-item]',\n    exportAs: 'mcDropdownItem',\n    inputs: ['disabled'],\n    host: {\n        role: 'dropdown-item',\n        class: 'mc-dropdown__item',\n        '[attr.tabindex]': '_getTabIndex()',\n        '[attr.disabled]': 'disabled || null',\n        '(click)': '_checkDisabled($event)'\n    },\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n    template: `<ng-content></ng-content>`\n})\nexport class McDropdownItem extends _McDropdownItemMixinBase\n    implements IFocusableOption, CanDisable, OnDestroy {\n\n    private _document: Document;\n\n    constructor(\n        private _elementRef: ElementRef<HTMLElement>,\n        @Inject(DOCUMENT) document: any,\n        private _focusMonitor: FocusMonitor,\n        @Inject(MC_DROPDOWN_PANEL) @Optional() private _parentDropdownPanel?: McDropdownPanel<McDropdownItem>) {\n        super();\n\n        if (_focusMonitor) {\n            // Start monitoring the element so it gets the appropriate focused classes. We want\n            // to show the focus style for dropdown items only when the focus was not caused by a\n            // mouse or touch interaction.\n            _focusMonitor.monitor(this._elementRef.nativeElement, false);\n        }\n\n        if (_parentDropdownPanel && _parentDropdownPanel.addItem) {\n            _parentDropdownPanel.addItem(this);\n        }\n\n        this._document = document;\n    }\n\n    /** Focuses the dropdown item. */\n    focus(origin: FocusOrigin = 'program'): void {\n        if (this._focusMonitor) {\n            this._focusMonitor.focusVia(this._getHostElement(), origin);\n        } else {\n            this._getHostElement().focus();\n        }\n    }\n\n    ngOnDestroy() {\n        if (this._focusMonitor) {\n            this._focusMonitor.stopMonitoring(this._elementRef.nativeElement);\n        }\n\n        if (this._parentDropdownPanel && this._parentDropdownPanel.removeItem) {\n            this._parentDropdownPanel.removeItem(this);\n        }\n    }\n\n    /** Used to set the `tabindex`. */\n    _getTabIndex(): string {\n        return this.disabled ? '-1' : '0';\n    }\n\n    /** Returns the host DOM element. */\n    _getHostElement(): HTMLElement {\n        return this._elementRef.nativeElement;\n    }\n\n    /** Prevents the default element actions if it is disabled. */\n    _checkDisabled(event: Event): void {\n        if (this.disabled) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n    }\n\n    /** Gets the label to be used when determining whether the option should be focused. */\n    getLabel(): string {\n        const element: HTMLElement = this._elementRef.nativeElement;\n        // tslint:disable-next-line:no-magic-numbers\n        const textNodeType = this._document ? this._document.TEXT_NODE : 3;\n        let output = '';\n\n        if (element.childNodes) {\n            const length = element.childNodes.length;\n\n            // Go through all the top-level text nodes and extract their text.\n            // We skip anything that's not a text node to prevent the text from\n            // being thrown off by something like an icon.\n            for (let i = 0; i < length; i++) {\n                if (element.childNodes[i].nodeType === textNodeType) {\n                    output += element.childNodes[i].textContent;\n                }\n            }\n        }\n\n        return output.trim();\n    }\n}\n","import {\n    trigger,\n    state,\n    style,\n    animate,\n    transition,\n    query,\n    group,\n    AnimationTriggerMetadata\n} from '@angular/animations';\n\n\n/**\n * Animations used by the mc-dropdown component.\n * Animation duration and timing values are based on:\n * https://material.io/guidelines/components/menus.html#menus-usage\n * @docs-private\n */\nexport const mcDropdownAnimations: {\n    readonly transformDropdown: AnimationTriggerMetadata;\n    readonly fadeInItems: AnimationTriggerMetadata;\n} = {\n    /**\n     * This animation controls the dropdown panel's entry and exit from the page.\n     *\n     * When the dropdown panel is added to the DOM, it scales in and fades in its border.\n     *\n     * When the dropdown panel is removed from the DOM, it simply fades out after a brief\n     * delay to display the ripple.\n     */\n    transformDropdown: trigger('transformDropdown', [\n        state('void', style({\n            opacity: 0,\n            transform: 'scale(0.8)'\n        })),\n        transition('void => enter', group([\n            query('.mc-dropdown__content', animate('50ms linear', style({opacity: 1}))),\n            animate('50ms cubic-bezier(0, 0, 0.2, 1)', style({transform: 'scale(1)'}))\n        ])),\n        transition('* => void', animate('50ms 25ms linear', style({opacity: 0})))\n    ]),\n\n\n    /**\n     * This animation fades in the background color and content of the dropdown panel\n     * after its containing element is scaled in.\n     */\n    fadeInItems: trigger('fadeInItems', [\n        // now. Remove next time we do breaking changes.\n        state('showing', style({opacity: 1})),\n        transition('void => *', [\n            style({opacity: 0}),\n            animate('200ms 60ms cubic-bezier(0.55, 0, 0.55, 0.2)')\n        ])\n    ])\n};\n\nexport const fadeInItems = mcDropdownAnimations.fadeInItems;\n\nexport const transformDropdown = mcDropdownAnimations.transformDropdown;\n","import {\n    Attribute,\n    Directive, DoCheck, ElementRef, Inject, Input, OnChanges,\n    OnDestroy, Optional, Self\n} from '@angular/core';\nimport {\n    FormGroupDirective,\n    NgControl,\n    NgForm, NgModel\n} from '@angular/forms';\nimport { coerceBooleanProperty } from '@ptsecurity/cdk/coercion';\nimport {\n    END, C, V, X, A, DELETE, BACKSPACE, TAB, ENTER,\n    ESCAPE, ZERO, NINE, NUMPAD_ZERO, NUMPAD_NINE, NUMPAD_MINUS, DASH,\n    FF_MINUS, LEFT_ARROW, RIGHT_ARROW, HOME, UP_ARROW, DOWN_ARROW, F1, F12\n} from '@ptsecurity/cdk/keycodes';\nimport { getSupportedInputTypes, Platform } from '@ptsecurity/cdk/platform';\nimport {\n    CanUpdateErrorState,\n    CanUpdateErrorStateCtor,\n    ErrorStateMatcher,\n    mixinErrorState\n} from '@ptsecurity/mosaic/core';\nimport { McFormFieldControl, McFormFieldNumberControl } from '@ptsecurity/mosaic/form-field';\nimport { Subject } from 'rxjs';\n\nimport { getMcInputUnsupportedTypeError } from './input-errors';\nimport { MC_INPUT_VALUE_ACCESSOR } from './input-value-accessor';\nimport { stepDown, stepUp } from './stepperUtils';\n\n\nconst MC_INPUT_INVALID_TYPES = [\n    'button',\n    'checkbox',\n    'file',\n    'hidden',\n    'image',\n    'radio',\n    'range',\n    'reset',\n    'submit'\n];\n\nexport const BIG_STEP = 10;\nexport const SMALL_STEP = 1;\n\nlet nextUniqueId = 0;\n\nexport class McInputBase {\n    constructor(public _defaultErrorStateMatcher: ErrorStateMatcher,\n                public _parentForm: NgForm,\n                public _parentFormGroup: FormGroupDirective,\n                public ngControl: NgControl) {\n    }\n}\n\nexport const _McInputMixinBase: CanUpdateErrorStateCtor & typeof McInputBase = mixinErrorState(McInputBase);\n\n\n@Directive({\n    selector: `input[mcInput][type=\"number\"]`,\n    exportAs: 'mcNumericalInput',\n    providers: [NgModel, { provide: McFormFieldNumberControl, useExisting: McNumberInput }],\n    host: {\n        '(blur)': '_focusChanged(false)',\n        '(focus)': '_focusChanged(true)',\n        '(paste)': 'onPaste($event)',\n        '(keydown)': 'onKeyDown($event)'\n    }\n})\nexport class McNumberInput implements McFormFieldNumberControl<any> {\n\n    /**\n     * Implemented as part of McFormFieldNumberControl.\n     * @docs-private\n     */\n    @Input()\n    bigStep: number;\n\n    /**\n     * Implemented as part of McFormFieldNumberControl.\n     * @docs-private\n     */\n    @Input()\n    step: number;\n\n    @Input()\n    min: number;\n\n    @Input()\n    max: number;\n\n    /**\n     * Implemented as part of McFormFieldNumberControl.\n     * @docs-private\n     */\n    value: any;\n\n    /**\n     * Implemented as part of McFormFieldNumberControl.\n     * @docs-private\n     */\n    focused: boolean = false;\n\n    /**\n     * Implemented as part of McFormFieldNumberControl.\n     * @docs-private\n     */\n    readonly stateChanges: Subject<void> = new Subject<void>();\n\n    private readonly _host: HTMLInputElement;\n\n    constructor(\n        private _platform: Platform ,\n        private _elementRef: ElementRef,\n        private _model: NgModel,\n        @Attribute('step') step: string,\n        @Attribute('big-step') bigStep: string,\n        @Attribute('min') min: string,\n        @Attribute('max') max: string\n    ) {\n        this.step = this.isDigit(step) ? parseFloat(step) : SMALL_STEP;\n        this.bigStep = this.isDigit(bigStep) ? parseFloat(bigStep) : BIG_STEP;\n        this.min = this.isDigit(min) ? parseFloat(min) : -Infinity;\n        this.max = this.isDigit(max) ? parseFloat(max) : Infinity;\n\n        this._host = this._elementRef.nativeElement;\n\n        const self = this;\n\n        if ('valueAsNumber' in this._host) {\n            Object.defineProperty(Object.getPrototypeOf(this._host), 'valueAsNumber', {\n                // tslint:disable-next-line:no-reserved-keywords\n                get() {\n                    const res = parseFloat(self.normalizeSplitter(this.value));\n\n                    return isNaN(res) ? null : res;\n                }\n            });\n        }\n    }\n\n    _focusChanged(isFocused: boolean) {\n        if (isFocused !== this.focused) {\n            this.focused = isFocused;\n            this.stateChanges.next();\n        }\n    }\n\n    onKeyDown(event: KeyboardEvent) {\n        // tslint:disable-next-line:deprecation\n        const keyCode = event.keyCode;\n\n        const isCtrlA = (e) => e.keyCode === A && (e.ctrlKey || e.metaKey);\n        const isCtrlC = (e) => e.keyCode === C && (e.ctrlKey || e.metaKey);\n        const isCtrlV = (e) => e.keyCode === V && (e.ctrlKey || e.metaKey);\n        const isCtrlX = (e) => e.keyCode === X && (e.ctrlKey || e.metaKey);\n\n        const isFKey = (e) => e.keyCode >= F1 && e.keyCode <= F12;\n\n        const isNumber = (e) => (e.keyCode >= ZERO && e.keyCode <= NINE) ||\n            (e.keyCode >= NUMPAD_ZERO && e.keyCode <= NUMPAD_NINE);\n\n        const minuses = [NUMPAD_MINUS, DASH, FF_MINUS];\n        const serviceKeys = [DELETE, BACKSPACE, TAB, ESCAPE, ENTER];\n        const arrows = [LEFT_ARROW, RIGHT_ARROW];\n        const allowedKeys =  [HOME, END].concat(arrows).concat(serviceKeys).concat(minuses);\n\n        const isIEPeriod = (e) => e.key === '.' || e.key === 'Decimal';\n        const isNotIEPeriod = (e) => e.key === '.' || e.key === ',';\n\n        // Decimal is for IE\n        const isPeriod = (e) => this._platform.EDGE || this._platform.TRIDENT\n            ? isIEPeriod(e)\n            : isNotIEPeriod(e);\n\n        if (allowedKeys.indexOf(keyCode) !== -1 ||\n            isCtrlA(event) ||\n            isCtrlC(event) ||\n            isCtrlV(event) ||\n            isCtrlX(event) ||\n            isFKey(event) ||\n            isPeriod(event)\n        ) {\n            // let it happen, don't do anything\n            return;\n        }\n        // Ensure that it is not a number and stop the keypress\n        if (event.shiftKey || !isNumber(event)) {\n            event.preventDefault();\n\n            // process steps\n            const step = event.shiftKey ? this.bigStep : this.step;\n\n            if (keyCode === UP_ARROW) {\n                this.stepUp(step);\n            }\n\n            if (keyCode === DOWN_ARROW) {\n                this.stepDown(step);\n            }\n        }\n    }\n\n    onPaste(event) {\n        let value = event.clipboardData.getData('text');\n        value = this.normalizeSplitter(value);\n\n        if (!this.isDigit(value)) {\n            event.preventDefault();\n        }\n    }\n\n    stepUp(step: number) {\n        this._elementRef.nativeElement.focus();\n        const res = stepUp(this._host.valueAsNumber, this.max, this.min, step);\n        this._host.value = res === null ? '' : res.toString();\n        this._model.update.emit(this._host.valueAsNumber);\n    }\n\n    stepDown(step: number) {\n        this._elementRef.nativeElement.focus();\n        const res = stepDown(this._host.valueAsNumber, this.max, this.min, step);\n        this._host.value = res === null ? '' : res.toString();\n        this._model.update.emit(this._host.valueAsNumber);\n    }\n\n    private normalizeSplitter(value: string): string {\n        return value ? value.replace(/,/g, '.') : value;\n    }\n\n    private isDigit(value: string): boolean {\n        return this.isFloat(value) || this.isInt(value);\n    }\n\n    private isFloat(value: string): boolean {\n        return /^-?\\d+\\.\\d+$/.test(value);\n    }\n\n    private isInt(value: string): boolean {\n        return /^-?\\d+$/.test(value);\n    }\n}\n\n@Directive({\n    selector: `input[mcInput]`,\n    exportAs: 'mcInput',\n    host: {\n        class: 'mc-input',\n        // Native input properties that are overwritten by Angular inputs need to be synced with\n        // the native input element. Otherwise property bindings for those don't work.\n        '[attr.id]': 'id',\n        '[attr.placeholder]': 'placeholder',\n        '[disabled]': 'disabled',\n        '[required]': 'required',\n        '(blur)': '_focusChanged(false)',\n        '(focus)': '_focusChanged(true)',\n        '(input)': '_onInput()'\n    },\n    providers: [{ provide: McFormFieldControl, useExisting: McInput }]\n})\nexport class McInput extends _McInputMixinBase implements McFormFieldControl<any>, OnChanges,\n    OnDestroy, DoCheck, CanUpdateErrorState {\n\n    /** An object used to control when error messages are shown. */\n    @Input() errorStateMatcher: ErrorStateMatcher;\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    focused: boolean = false;\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    readonly stateChanges: Subject<void> = new Subject<void>();\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    controlType: string = 'mc-input';\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    @Input()\n    get disabled(): boolean {\n        if (this.ngControl && this.ngControl.disabled !== null) {\n            return this.ngControl.disabled;\n        }\n\n        return this._disabled;\n    }\n\n    set disabled(value: boolean) {\n        this._disabled = coerceBooleanProperty(value);\n\n        // Browsers may not fire the blur event if the input is disabled too quickly.\n        // Reset from here to ensure that the element doesn't become stuck.\n        if (this.focused) {\n            this.focused = false;\n            this.stateChanges.next();\n        }\n    }\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    @Input()\n    get id(): string {\n        return this._id;\n    }\n\n    set id(value: string) {\n        this._id = value || this._uid;\n    }\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    @Input() placeholder: string;\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    @Input()\n    get required(): boolean {\n        return this._required;\n    }\n\n    set required(value: boolean) {\n        this._required = coerceBooleanProperty(value);\n    }\n\n    // tslint:disable no-reserved-keywords\n    /** Input type of the element. */\n    @Input()\n    get type(): string {\n        return this._type;\n    }\n\n    set type(value: string) {\n        this._type = value || 'text';\n        this._validateType();\n\n        // When using Angular inputs, developers are no longer able to set the properties on the native\n        // input element. To ensure that bindings for `type` work, we need to sync the setter\n        // with the native property. Textarea elements don't support the type property or attribute.\n        if (getSupportedInputTypes().has(this._type)) {\n            this._elementRef.nativeElement.type = this._type;\n        }\n    }\n    // tslint:enable no-reserved-keywords\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    @Input()\n    get value(): string {\n        return this._inputValueAccessor.value;\n    }\n\n    set value(value: string) {\n        if (value !== this.value) {\n            this._inputValueAccessor.value = value;\n            this.stateChanges.next();\n        }\n    }\n\n    protected _uid = `mc-input-${nextUniqueId++}`;\n    protected _previousNativeValue: any;\n    protected _disabled = false;\n    protected _id: string;\n    protected _required = false;\n    protected _type = 'text';\n    protected _neverEmptyInputTypes = [\n        'date',\n        'datetime',\n        'datetime-local',\n        'month',\n        'time',\n        'week'\n    ].filter((t) => getSupportedInputTypes().has(t));\n\n    private _inputValueAccessor: { value: any };\n\n    constructor(protected _elementRef: ElementRef,\n                @Optional() @Self() public ngControl: NgControl,\n                @Optional() _parentForm: NgForm,\n                @Optional() _parentFormGroup: FormGroupDirective,\n                _defaultErrorStateMatcher: ErrorStateMatcher,\n                @Optional() @Self() @Inject(MC_INPUT_VALUE_ACCESSOR) inputValueAccessor: any) {\n        super(_defaultErrorStateMatcher, _parentForm, _parentFormGroup, ngControl);\n        // If no input value accessor was explicitly specified, use the element as the input value\n        // accessor.\n        this._inputValueAccessor = inputValueAccessor || this._elementRef.nativeElement;\n\n        this._previousNativeValue = this.value;\n\n        // Force setter to be called in case id was not specified.\n        this.id = this.id;\n    }\n\n    ngOnChanges() {\n        this.stateChanges.next();\n    }\n\n    ngOnDestroy() {\n        this.stateChanges.complete();\n    }\n\n    ngDoCheck() {\n        if (this.ngControl) {\n            // We need to re-evaluate this on every change detection cycle, because there are some\n            // error triggers that we can't subscribe to (e.g. parent form submissions). This means\n            // that whatever logic is in here has to be super lean or we risk destroying the performance.\n            this.updateErrorState();\n        }\n\n        // We need to dirty-check the native element's value, because there are some cases where\n        // we won't be notified when it changes (e.g. the consumer isn't using forms or they're\n        // updating the value using `emitEvent: false`).\n        this._dirtyCheckNativeValue();\n    }\n\n    /** Focuses the input. */\n    focus(): void {\n        this._elementRef.nativeElement.focus();\n    }\n\n    /** Callback for the cases where the focused state of the input changes. */\n    _focusChanged(isFocused: boolean) {\n        if (isFocused !== this.focused) {\n            this.focused = isFocused;\n            this.stateChanges.next();\n        }\n    }\n\n    _onInput() {\n        // This is a noop function and is used to let Angular know whenever the value changes.\n        // Angular will run a new change detection each time the `input` event has been dispatched.\n        // It's necessary that Angular recognizes the value change, because when floatingLabel\n        // is set to false and Angular forms aren't used, the placeholder won't recognize the\n        // value changes and will not disappear.\n        // Listening to the input event wouldn't be necessary when the input is using the\n        // FormsModule or ReactiveFormsModule, because Angular forms also listens to input events.\n    }\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    get empty(): boolean {\n        return !this._isNeverEmpty() && !this._elementRef.nativeElement.value && !this._isBadInput();\n    }\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    onContainerClick() {\n        this.focus();\n    }\n\n    /** Does some manual dirty checking on the native input `value` property. */\n    protected _dirtyCheckNativeValue() {\n        const newValue = this.value;\n\n        if (this._previousNativeValue !== newValue) {\n            this._previousNativeValue = newValue;\n            this.stateChanges.next();\n        }\n    }\n\n    /** Make sure the input is a supported type. */\n    protected _validateType() {\n        if (MC_INPUT_INVALID_TYPES.indexOf(this._type) > -1) {\n            throw getMcInputUnsupportedTypeError(this._type);\n        }\n    }\n\n    /** Checks whether the input type is one of the types that are never empty. */\n    protected _isNeverEmpty() {\n        return this._neverEmptyInputTypes.indexOf(this._type) > -1;\n    }\n\n    /** Checks whether the input is invalid based on the native validation. */\n    protected _isBadInput() {\n        // The `validity` property won't be present on platform-server.\n        const validity = (this._elementRef.nativeElement as HTMLInputElement).validity;\n\n        return validity && validity.badInput;\n    }\n}\n\n@Directive({\n    selector: 'input[mcInputMonospace]',\n    exportAs: 'McInputMonospace',\n    host: { class: 'mc-input_monospace' }\n})\nexport class McInputMono {\n}\n","import { Directive, forwardRef, Input, OnChanges, Provider, SimpleChanges } from '@angular/core';\nimport { AbstractControl, NG_VALIDATORS, ValidationErrors, Validator, ValidatorFn, Validators } from '@angular/forms';\n\n\nexport const MIN_VALIDATOR: Provider = {\n    provide: NG_VALIDATORS,\n    useExisting: forwardRef(() => MinValidator),\n    multi: true\n};\n\n/**\n * A directive which installs the {@link MinValidator} for any `formControlName`,\n * `formControl`, or control with `ngModel` that also has a `min` attribute.\n *\n * @experimental\n */\n@Directive({\n    selector: '[min][formControlName],[min][formControl],[min][ngModel]',\n    providers: [MIN_VALIDATOR],\n    host: {'[attr.min]': 'min ? min : null'}\n})\nexport class MinValidator implements Validator, OnChanges {\n\n    @Input() min: string;\n    private _validator: ValidatorFn;\n    private _onChange: () => void;\n\n    ngOnChanges(changes: SimpleChanges): void {\n        if ('min' in changes) {\n            this._createValidator();\n            if (this._onChange) { this._onChange(); }\n        }\n    }\n\n    validate(c: AbstractControl): ValidationErrors | null { return this._validator(c); }\n\n    registerOnValidatorChange(fn: () => void): void { this._onChange = fn; }\n\n    private _createValidator(): void { this._validator = Validators.min(parseInt(this.min, 10)); }\n}\n\n\nexport const MAX_VALIDATOR: Provider = {\n    provide: NG_VALIDATORS,\n    useExisting: forwardRef(() => MaxValidator),\n    multi: true\n};\n\n/**\n * A directive which installs the {@link MaxValidator} for any `formControlName`,\n * `formControl`, or control with `ngModel` that also has a `min` attribute.\n *\n * @experimental\n */\n@Directive({\n    selector: '[max][formControlName],[max][formControl],[max][ngModel]',\n    providers: [MAX_VALIDATOR],\n    host: {\n        '[attr.max]': 'max ? max : null'\n    }\n})\nexport class MaxValidator implements Validator,\n    OnChanges {\n\n    @Input() max: string;\n    private _validator: ValidatorFn;\n    private _onChange: () => void;\n\n    ngOnChanges(changes: SimpleChanges): void {\n        if ('max' in changes) {\n            this._createValidator();\n            if (this._onChange) { this._onChange(); }\n        }\n    }\n\n    validate(c: AbstractControl): ValidationErrors | null { return this._validator(c); }\n\n    registerOnValidatorChange(fn: () => void): void { this._onChange = fn; }\n\n    private _createValidator(): void { this._validator = Validators.max(parseInt(this.max, 10)); }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { A11yModule } from '@ptsecurity/cdk/a11y';\nimport { McCommonModule } from '@ptsecurity/mosaic/core';\n\nimport { McInput, McInputMono, McNumberInput } from './input';\nimport { MaxValidator, MinValidator } from './input-number-validators';\n\n\n@NgModule({\n    imports: [CommonModule, A11yModule, McCommonModule, FormsModule],\n    exports: [McInput, McNumberInput, McInputMono, MinValidator, MaxValidator],\n    declarations: [McInput, McNumberInput, McInputMono, MinValidator, MaxValidator ]\n})\nexport class McInputModule {\n}\n","import { Injectable } from '@angular/core';\nimport { Subject } from 'rxjs';\n\n\n/** Datepicker data that requires internationalization. */\n@Injectable({ providedIn: 'root' })\nexport class McDatepickerIntl {\n    /**\n     * Stream that emits whenever the labels here are changed. Use this to notify\n     * components if the labels have changed after initialization.\n     */\n    readonly changes: Subject<void> = new Subject<void>();\n\n    /** A label for the calendar popup (used by screen readers). */\n    calendarLabel: string = 'Calendar';\n\n    /** A label for the button used to open the calendar popup (used by screen readers). */\n    openCalendarLabel: string = 'Open calendar';\n\n    /** A label for the previous month button (used by screen readers). */\n    prevMonthLabel: string = 'Previous month';\n\n    /** A label for the next month button (used by screen readers). */\n    nextMonthLabel: string = 'Next month';\n\n    /** A label for the previous year button (used by screen readers). */\n    prevYearLabel: string = 'Previous year';\n\n    /** A label for the next year button (used by screen readers). */\n    nextYearLabel: string = 'Next year';\n\n    /** A label for the previous multi-year button (used by screen readers). */\n    prevMultiYearLabel: string = 'Previous 20 years';\n\n    /** A label for the next multi-year button (used by screen readers). */\n    nextMultiYearLabel: string = 'Next 20 years';\n\n    /** A label for the 'switch to month view' button (used by screen readers). */\n    switchToMonthViewLabel: string = 'Choose date';\n\n    /** A label for the 'switch to year view' button (used by screen readers). */\n    switchToMultiYearViewLabel: string = 'Choose month and year';\n}\n","// tslint:disable:no-magic-numbers\nimport {\n    ChangeDetectionStrategy,\n    Component,\n    ElementRef,\n    EventEmitter,\n    Input,\n    Output,\n    ViewEncapsulation,\n    NgZone,\n    OnChanges,\n    SimpleChanges\n} from '@angular/core';\nimport { take } from 'rxjs/operators';\n\n\n/**\n * Extra CSS classes that can be associated with a calendar cell.\n */\nexport type McCalendarCellCssClasses = string | string[] | Set<string> | { [key: string]: any };\n\n/**\n * An internal class that represents the data corresponding to a single calendar cell.\n * @docs-private\n */\nexport class McCalendarCell {\n    constructor(\n        public value: number,\n        public displayValue: string,\n        public ariaLabel: string,\n        public enabled: boolean,\n        public cssClasses?: McCalendarCellCssClasses\n    ) {\n    }\n}\n\n\n/**\n * An internal component used to display calendar data in a table.\n * @docs-private\n */\n@Component({\n    selector: '[mc-calendar-body]',\n    templateUrl: 'calendar-body.html',\n    styleUrls: ['calendar-body.css'],\n    host: {\n        class: 'mc-calendar__body',\n        role: 'grid',\n        'aria-readonly': 'true'\n    },\n    exportAs: 'mcCalendarBody',\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class McCalendarBody implements OnChanges {\n    /** The label for the table. (e.g. \"Jan 2017\"). */\n    @Input() label: string;\n\n    /** The cells to display in the table. */\n    @Input() rows: McCalendarCell[][];\n\n    /** The value in the table that corresponds to today. */\n    @Input() todayValue: number;\n\n    /** The value in the table that is currently selected. */\n    @Input() selectedValue: number;\n\n    /** The minimum number of free cells needed to fit the label in the first row. */\n    @Input() labelMinRequiredCells: number;\n\n    /** The number of columns in the table. */\n    @Input() numCols = 7;\n\n    /** The cell number of the active cell in the table. */\n    @Input() activeCell = 0;\n\n    /**\n     * The aspect ratio (width / height) to use for the cells in the table. This aspect ratio will be\n     * maintained even as the table resizes.\n     */\n    @Input() cellAspectRatio = 1;\n\n    /** Emits when a new value is selected. */\n    @Output() readonly selectedValueChange: EventEmitter<number> = new EventEmitter<number>();\n\n    /** The number of blank cells to put at the beginning for the first row. */\n    firstRowOffset: number;\n\n    /** Padding for the individual date cells. */\n    cellPadding: string;\n\n    /** Width of an individual cell. */\n    cellWidth: string;\n\n    constructor(private elementRef: ElementRef<HTMLElement>, private ngZone: NgZone) {\n    }\n\n    cellClicked(cell: McCalendarCell): void {\n        if (cell.enabled) {\n            this.selectedValueChange.emit(cell.value);\n        }\n    }\n\n    ngOnChanges(changes: SimpleChanges) {\n        const columnChanges = changes.numCols;\n        // tslint:disable-next-line:no-this-assignment\n        const { rows, numCols } = this;\n\n        if (changes.rows || columnChanges) {\n            this.firstRowOffset = rows && rows.length && rows[0].length ? numCols - rows[0].length : 0;\n        }\n\n        if (changes.cellAspectRatio || columnChanges || !this.cellPadding) {\n            this.cellPadding = `${this.cellAspectRatio * 50 / numCols}%`;\n        }\n\n        if (columnChanges || !this.cellWidth) {\n            this.cellWidth = `${100 / numCols}%`;\n        }\n    }\n\n    isActiveCell(rowIndex: number, colIndex: number): boolean {\n        let cellNumber = rowIndex * this.numCols + colIndex;\n\n        // Account for the fact that the first row may not have as many cells.\n        if (rowIndex) {\n            cellNumber -= this.firstRowOffset;\n        }\n\n        return cellNumber === this.activeCell;\n    }\n\n    /** Focuses the active cell after the microtask queue is empty. */\n    focusActiveCell() {\n        this.ngZone.runOutsideAngular(() => {\n            this.ngZone.onStable.asObservable().pipe(take(1)).subscribe(() => {\n                const activeCell: HTMLElement | null =\n                    this.elementRef.nativeElement.querySelector('.mc-calendar__body_active');\n\n                if (activeCell) {\n                    activeCell.focus();\n                }\n            });\n        });\n    }\n}\n","// tslint:disable:no-magic-numbers\nimport {\n    AfterContentInit,\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    EventEmitter,\n    Inject,\n    Input,\n    Optional,\n    Output,\n    ViewEncapsulation,\n    ViewChild\n} from '@angular/core';\nimport { Directionality } from '@ptsecurity/cdk/bidi';\nimport { DateAdapter, MC_DATE_FORMATS, McDateFormats } from '@ptsecurity/cdk/datetime';\nimport {\n    DOWN_ARROW,\n    END,\n    ENTER,\n    HOME,\n    LEFT_ARROW,\n    PAGE_DOWN,\n    PAGE_UP,\n    RIGHT_ARROW,\n    UP_ARROW,\n    SPACE\n} from '@ptsecurity/cdk/keycodes';\n\nimport { McCalendarBody, McCalendarCell, McCalendarCellCssClasses } from './calendar-body';\nimport { createMissingDateImplError } from './datepicker-errors';\n\n\nconst DAYS_PER_WEEK = 7;\n\n\n/**\n * An internal component used to display a single month in the datepicker.\n * @docs-private\n */\n@Component({\n    selector: 'mc-month-view',\n    templateUrl: 'month-view.html',\n    exportAs: 'mcMonthView',\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class McMonthView<D> implements AfterContentInit {\n    /**\n     * The date to display in this month view (everything other than the month and year is ignored).\n     */\n    @Input()\n    get activeDate(): D {\n        return this._activeDate;\n    }\n\n    set activeDate(value: D) {\n        const oldActiveDate = this._activeDate;\n        const validDate =\n            this.getValidDateOrNull(this.dateAdapter.deserialize(value)) || this.dateAdapter.today();\n        this._activeDate = this.dateAdapter.clampDate(validDate, this.minDate, this.maxDate);\n\n        if (!this.hasSameMonthAndYear(oldActiveDate, this._activeDate)) {\n            this.init();\n        }\n    }\n\n    /** The currently selected date. */\n    @Input()\n    get selected(): D | null {\n        return this._selected;\n    }\n\n    set selected(value: D | null) {\n        this._selected = this.getValidDateOrNull(this.dateAdapter.deserialize(value));\n        this.selectedDate = this.getDateInCurrentMonth(this._selected);\n    }\n\n    /** The minimum selectable date. */\n    @Input()\n    get minDate(): D | null {\n        return this._minDate;\n    }\n\n    set minDate(value: D | null) {\n        this._minDate = this.getValidDateOrNull(this.dateAdapter.deserialize(value));\n    }\n\n    /** The maximum selectable date. */\n    @Input()\n    get maxDate(): D | null {\n        return this._maxDate;\n    }\n\n    set maxDate(value: D | null) {\n        this._maxDate = this.getValidDateOrNull(this.dateAdapter.deserialize(value));\n    }\n\n    /** Function used to filter which dates are selectable. */\n    @Input() dateFilter: (date: D) => boolean;\n\n    /** Function that can be used to add custom CSS classes to dates. */\n    @Input() dateClass: (date: D) => McCalendarCellCssClasses;\n\n    /** Emits when a new date is selected. */\n    @Output() readonly selectedChange: EventEmitter<D | null> = new EventEmitter<D | null>();\n\n    /** Emits when any date is selected. */\n    @Output() readonly userSelection: EventEmitter<void> = new EventEmitter<void>();\n\n    /** Emits when any date is activated. */\n    @Output() readonly activeDateChange: EventEmitter<D> = new EventEmitter<D>();\n\n    /** The body of calendar table */\n    @ViewChild(McCalendarBody) mcCalendarBody: McCalendarBody;\n\n    /** The label for this month (e.g. \"January 2017\"). */\n    monthLabel: string;\n\n    /** Grid of calendar cells representing the dates of the month. */\n    weeks: McCalendarCell[][];\n\n    /** The number of blank cells in the first row before the 1st of the month. */\n    firstWeekOffset: number;\n\n    /**\n     * The date of the month that the currently selected Date falls on.\n     * Null if the currently selected Date is in another month.\n     */\n    selectedDate: number | null;\n\n    /** The date of the month that today falls on. Null if today is in another month. */\n    todayDate: number | null;\n\n    /** The names of the weekdays. */\n    weekdays: { long: string; narrow: string }[];\n    private _activeDate: D;\n    private _selected: D | null;\n    private _minDate: D | null;\n    private _maxDate: D | null;\n\n    constructor(\n        private changeDetectorRef: ChangeDetectorRef,\n        @Optional() @Inject(MC_DATE_FORMATS) private dateFormats: McDateFormats,\n        @Optional() public dateAdapter: DateAdapter<D>,\n        @Optional() private dir?: Directionality\n    ) {\n        if (!this.dateAdapter) {\n            throw createMissingDateImplError('DateAdapter');\n        }\n\n        if (!this.dateFormats) {\n            throw createMissingDateImplError('MC_DATE_FORMATS');\n        }\n\n        const firstDayOfWeek = this.dateAdapter.getFirstDayOfWeek();\n        const narrowWeekdays = this.dateAdapter.getDayOfWeekNames('narrow');\n        const longWeekdays = this.dateAdapter.getDayOfWeekNames('long');\n\n        // Rotate the labels for days of the week based on the configured first day of the week.\n        const weekdays = longWeekdays.map((long, i) => {\n            return { long, narrow: narrowWeekdays[i] };\n        });\n        this.weekdays = weekdays.slice(firstDayOfWeek).concat(weekdays.slice(0, firstDayOfWeek));\n\n        this._activeDate = this.dateAdapter.today();\n    }\n\n    ngAfterContentInit() {\n        this.init();\n    }\n\n    /** Handles when a new date is selected. */\n    dateSelected(date: number) {\n        if (this.selectedDate !== date) {\n            const selectedYear = this.dateAdapter.getYear(this.activeDate);\n            const selectedMonth = this.dateAdapter.getMonth(this.activeDate);\n            const selectedDate = this.dateAdapter.createDate(selectedYear, selectedMonth, date);\n\n            this.selectedChange.emit(selectedDate);\n        }\n\n        this.userSelection.emit();\n    }\n\n    /** Handles keydown events on the calendar body when calendar is in month view. */\n    handleCalendarBodyKeydown(event: KeyboardEvent): void {\n        // TODO(mmalerba): We currently allow keyboard navigation to disabled dates, but just prevent\n        // disabled ones from being selected. This may not be ideal, we should look into whether\n        // navigation should skip over disabled dates, and if so, how to implement that efficiently.\n\n        const oldActiveDate = this._activeDate;\n        const isRtl = this.isRtl();\n\n        // tslint:disable-next-line:deprecation\n        switch (event.keyCode) {\n            case LEFT_ARROW:\n                this.activeDate = this.dateAdapter.addCalendarDays(this._activeDate, isRtl ? 1 : -1);\n                break;\n            case RIGHT_ARROW:\n                this.activeDate = this.dateAdapter.addCalendarDays(this._activeDate, isRtl ? -1 : 1);\n                break;\n            case UP_ARROW:\n                this.activeDate = this.dateAdapter.addCalendarDays(this._activeDate, -7);\n                break;\n            case DOWN_ARROW:\n                this.activeDate = this.dateAdapter.addCalendarDays(this._activeDate, 7);\n                break;\n            case HOME:\n                this.activeDate = this.dateAdapter.addCalendarDays(this._activeDate,\n                    1 - this.dateAdapter.getDate(this._activeDate));\n                break;\n            case END:\n                this.activeDate = this.dateAdapter.addCalendarDays(this._activeDate,\n                    (this.dateAdapter.getNumDaysInMonth(this._activeDate) -\n                        this.dateAdapter.getDate(this._activeDate)));\n                break;\n            case PAGE_UP:\n                this.activeDate = event.altKey ?\n                    this.dateAdapter.addCalendarYears(this._activeDate, -1) :\n                    this.dateAdapter.addCalendarMonths(this._activeDate, -1);\n                break;\n            case PAGE_DOWN:\n                this.activeDate = event.altKey ?\n                    this.dateAdapter.addCalendarYears(this._activeDate, 1) :\n                    this.dateAdapter.addCalendarMonths(this._activeDate, 1);\n                break;\n            case ENTER:\n            case SPACE:\n                if (!this.dateFilter || this.dateFilter(this._activeDate)) {\n                    this.dateSelected(this.dateAdapter.getDate(this._activeDate));\n                    this.userSelection.emit();\n                    // Prevent unexpected default actions such as form submission.\n                    event.preventDefault();\n                }\n\n                return;\n            default:\n                // Don't prevent default or focus active cell on keys that we don't explicitly handle.\n                return;\n        }\n\n        if (this.dateAdapter.compareDate(oldActiveDate, this.activeDate)) {\n            this.activeDateChange.emit(this.activeDate);\n        }\n\n        this.focusActiveCell();\n        // Prevent unexpected default actions such as form submission.\n        event.preventDefault();\n    }\n\n    /** Initializes this month view. */\n    init() {\n        this.selectedDate = this.getDateInCurrentMonth(this.selected);\n        this.todayDate = this.getDateInCurrentMonth(this.dateAdapter.today());\n        this.monthLabel =\n            this.dateAdapter.getMonthNames('short')[this.dateAdapter.getMonth(this.activeDate)];\n\n        this.monthLabel = this.monthLabel[0].toLocaleUpperCase() + this.monthLabel.substr(1);\n\n        const firstOfMonth = this.dateAdapter.createDate(this.dateAdapter.getYear(this.activeDate),\n            this.dateAdapter.getMonth(this.activeDate), 1);\n        this.firstWeekOffset =\n            (DAYS_PER_WEEK + this.dateAdapter.getDayOfWeek(firstOfMonth) -\n                this.dateAdapter.getFirstDayOfWeek()) % DAYS_PER_WEEK;\n\n        this.createWeekCells();\n        this.changeDetectorRef.markForCheck();\n    }\n\n    /** Focuses the active cell after the microtask queue is empty. */\n    focusActiveCell() {\n        this.mcCalendarBody.focusActiveCell();\n    }\n\n    /** Creates McCalendarCells for the dates in this month. */\n    private createWeekCells() {\n        const daysInMonth = this.dateAdapter.getNumDaysInMonth(this.activeDate);\n        const dateNames = this.dateAdapter.getDateNames();\n\n        this.weeks = [[]];\n\n        for (let i = 0, cell = this.firstWeekOffset; i < daysInMonth; i++, cell++) {\n            if (cell === DAYS_PER_WEEK) {\n                this.weeks.push([]);\n                cell = 0;\n            }\n            const date = this.dateAdapter.createDate(\n                this.dateAdapter.getYear(this.activeDate),\n                this.dateAdapter.getMonth(this.activeDate), i + 1);\n            const enabled = this.shouldEnableDate(date);\n            const ariaLabel = this.dateAdapter.format(date, this.dateFormats.display.dateA11yLabel);\n            const cellClasses = this.dateClass ? this.dateClass(date) : undefined;\n\n            this.weeks[this.weeks.length - 1]\n                .push(new McCalendarCell(i + 1, dateNames[i], ariaLabel, enabled, cellClasses));\n        }\n    }\n\n    /** Date filter for the month */\n    private shouldEnableDate(date: D): boolean {\n        return !!date &&\n            (!this.dateFilter || this.dateFilter(date)) &&\n            (!this.minDate || this.dateAdapter.compareDate(date, this.minDate) >= 0) &&\n            (!this.maxDate || this.dateAdapter.compareDate(date, this.maxDate) <= 0);\n    }\n\n    /**\n     * Gets the date in this month that the given Date falls on.\n     * Returns null if the given Date is in another month.\n     */\n    private getDateInCurrentMonth(date: D | null): number | null {\n        return date && this.hasSameMonthAndYear(date, this.activeDate) ?\n            this.dateAdapter.getDate(date) : null;\n    }\n\n    /** Checks whether the 2 dates are non-null and fall within the same month of the same year. */\n    private hasSameMonthAndYear(d1: D | null, d2: D | null): boolean {\n        return !!(d1 && d2 && this.dateAdapter.getMonth(d1) === this.dateAdapter.getMonth(d2) &&\n            this.dateAdapter.getYear(d1) === this.dateAdapter.getYear(d2));\n    }\n\n    /**\n     * @param obj The object to check.\n     * @returns The given object if it is both a date instance and valid, otherwise null.\n     */\n    private getValidDateOrNull(obj: any): D | null {\n        return (this.dateAdapter.isDateInstance(obj) && this.dateAdapter.isValid(obj)) ? obj : null;\n    }\n\n    /** Determines whether the user has the RTL layout direction. */\n    private isRtl() {\n        return this.dir && this.dir.value === 'rtl';\n    }\n}\n","// tslint:disable:no-magic-numbers\nimport {\n    AfterContentInit,\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    EventEmitter,\n    Input,\n    Optional,\n    Output,\n    ViewChild,\n    ViewEncapsulation\n} from '@angular/core';\nimport { Directionality } from '@ptsecurity/cdk/bidi';\nimport { DateAdapter } from '@ptsecurity/cdk/datetime';\nimport {\n    DOWN_ARROW,\n    END,\n    ENTER,\n    HOME,\n    LEFT_ARROW,\n    PAGE_DOWN,\n    PAGE_UP,\n    RIGHT_ARROW,\n    UP_ARROW,\n    SPACE\n} from '@ptsecurity/cdk/keycodes';\n\nimport { McCalendarBody, McCalendarCell } from './calendar-body';\nimport { createMissingDateImplError } from './datepicker-errors';\n\n\nexport const yearsPerPage = 24;\n\nexport const yearsPerRow = 4;\n\n\n/**\n * An internal component used to display a year selector in the datepicker.\n * @docs-private\n */\n@Component({\n    selector: 'mc-multi-year-view',\n    templateUrl: 'multi-year-view.html',\n    exportAs: 'mcMultiYearView',\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class McMultiYearView<D> implements AfterContentInit {\n    /** The date to display in this multi-year view (everything other than the year is ignored). */\n    @Input()\n    get activeDate(): D {\n        return this._activeDate;\n    }\n\n    set activeDate(value: D) {\n        const oldActiveDate = this._activeDate;\n        const validDate =\n            this.getValidDateOrNull(this.dateAdapter.deserialize(value)) || this.dateAdapter.today();\n        this._activeDate = this.dateAdapter.clampDate(validDate, this.minDate, this.maxDate);\n\n        if (Math.floor(this.dateAdapter.getYear(oldActiveDate) / yearsPerPage) !==\n            Math.floor(this.dateAdapter.getYear(this._activeDate) / yearsPerPage)) {\n            this.init();\n        }\n    }\n\n    /** The currently selected date. */\n    @Input()\n    get selected(): D | null {\n        return this._selected;\n    }\n\n    set selected(value: D | null) {\n        this._selected = this.getValidDateOrNull(this.dateAdapter.deserialize(value));\n        this.selectedYear = this._selected && this.dateAdapter.getYear(this._selected);\n    }\n\n    /** The minimum selectable date. */\n    @Input()\n    get minDate(): D | null {\n        return this._minDate;\n    }\n\n    set minDate(value: D | null) {\n        this._minDate = this.getValidDateOrNull(this.dateAdapter.deserialize(value));\n    }\n\n    /** The maximum selectable date. */\n    @Input()\n    get maxDate(): D | null {\n        return this._maxDate;\n    }\n\n    set maxDate(value: D | null) {\n        this._maxDate = this.getValidDateOrNull(this.dateAdapter.deserialize(value));\n    }\n\n    /** A function used to filter which dates are selectable. */\n    @Input() dateFilter: (date: D) => boolean;\n\n    /** Emits when a new year is selected. */\n    @Output() readonly selectedChange: EventEmitter<D> = new EventEmitter<D>();\n\n    /** Emits the selected year. This doesn't imply a change on the selected date */\n    @Output() readonly yearSelected: EventEmitter<D> = new EventEmitter<D>();\n\n    /** Emits when any date is activated. */\n    @Output() readonly activeDateChange: EventEmitter<D> = new EventEmitter<D>();\n\n    /** The body of calendar table */\n    @ViewChild(McCalendarBody) mcCalendarBody: McCalendarBody;\n\n    /** Grid of calendar cells representing the currently displayed years. */\n    years: McCalendarCell[][];\n\n    /** The year that today falls on. */\n    todayYear: number;\n\n    /** The year of the selected date. Null if the selected date is null. */\n    selectedYear: number | null;\n    private _activeDate: D;\n    private _selected: D | null;\n    private _minDate: D | null;\n    private _maxDate: D | null;\n\n    constructor(\n        private changeDetectorRef: ChangeDetectorRef,\n        @Optional() public dateAdapter: DateAdapter<D>,\n        @Optional() private dir?: Directionality\n    ) {\n        if (!this.dateAdapter) {\n            throw createMissingDateImplError('DateAdapter');\n        }\n\n        this._activeDate = this.dateAdapter.today();\n    }\n\n    ngAfterContentInit() {\n        this.init();\n    }\n\n    /** Initializes this multi-year view. */\n    init() {\n        this.todayYear = this.dateAdapter.getYear(this.dateAdapter.today());\n        const activeYear = this.dateAdapter.getYear(this._activeDate);\n        const activeOffset = activeYear % yearsPerPage;\n        this.years = [];\n        for (let i = 0, row: number[] = []; i < yearsPerPage; i++) {\n            row.push(activeYear - activeOffset + i);\n            if (row.length === yearsPerRow) {\n                this.years.push(row.map((year) => this.createCellForYear(year)));\n                row = [];\n            }\n        }\n        this.changeDetectorRef.markForCheck();\n    }\n\n    /** Handles when a new year is selected. */\n    onYearSelected(year: number) {\n        this.yearSelected.emit(this.dateAdapter.createDate(year, 0, 1));\n        const month = this.dateAdapter.getMonth(this.activeDate);\n        const daysInMonth =\n            this.dateAdapter.getNumDaysInMonth(this.dateAdapter.createDate(year, month, 1));\n        this.selectedChange.emit(this.dateAdapter.createDate(year, month,\n            Math.min(this.dateAdapter.getDate(this.activeDate), daysInMonth)));\n    }\n\n    /** Handles keydown events on the calendar body when calendar is in multi-year view. */\n    handleCalendarBodyKeydown(event: KeyboardEvent): void {\n        // TODO(mmalerba): We currently allow keyboard navigation to disabled dates, but just prevent\n        // disabled ones from being selected. This may not be ideal, we should look into whether\n        // navigation should skip over disabled dates, and if so, how to implement that efficiently.\n\n        const oldActiveDate = this._activeDate;\n        const isRtl = this.isRtl();\n\n        // tslint:disable-next-line:deprecation\n        switch (event.keyCode) {\n            case LEFT_ARROW:\n                this.activeDate = this.dateAdapter.addCalendarYears(this._activeDate, isRtl ? 1 : -1);\n                break;\n            case RIGHT_ARROW:\n                this.activeDate = this.dateAdapter.addCalendarYears(this._activeDate, isRtl ? -1 : 1);\n                break;\n            case UP_ARROW:\n                this.activeDate = this.dateAdapter.addCalendarYears(this._activeDate, -yearsPerRow);\n                break;\n            case DOWN_ARROW:\n                this.activeDate = this.dateAdapter.addCalendarYears(this._activeDate, yearsPerRow);\n                break;\n            case HOME:\n                this.activeDate = this.dateAdapter.addCalendarYears(this._activeDate,\n                    -this.dateAdapter.getYear(this._activeDate) % yearsPerPage);\n                break;\n            case END:\n                this.activeDate = this.dateAdapter.addCalendarYears(this._activeDate,\n                    yearsPerPage - this.dateAdapter.getYear(this._activeDate) % yearsPerPage - 1);\n                break;\n            case PAGE_UP:\n                this.activeDate =\n                    this.dateAdapter.addCalendarYears(\n                        this._activeDate, event.altKey ? -yearsPerPage * 10 : -yearsPerPage);\n                break;\n            case PAGE_DOWN:\n                this.activeDate =\n                    this.dateAdapter.addCalendarYears(\n                        this._activeDate, event.altKey ? yearsPerPage * 10 : yearsPerPage);\n                break;\n            case ENTER:\n            case SPACE:\n                this.onYearSelected(this.dateAdapter.getYear(this._activeDate));\n                break;\n            default:\n                // Don't prevent default or focus active cell on keys that we don't explicitly handle.\n                return;\n        }\n\n        if (this.dateAdapter.compareDate(oldActiveDate, this.activeDate)) {\n            this.activeDateChange.emit(this.activeDate);\n        }\n\n        this.focusActiveCell();\n        // Prevent unexpected default actions such as form submission.\n        event.preventDefault();\n    }\n\n    getActiveCell(): number {\n        return this.dateAdapter.getYear(this.activeDate) % yearsPerPage;\n    }\n\n    /** Focuses the active cell after the microtask queue is empty. */\n    focusActiveCell() {\n        this.mcCalendarBody.focusActiveCell();\n    }\n\n    /** Creates an McCalendarCell for the given year. */\n    private createCellForYear(year: number) {\n        const yearName = this.dateAdapter.getYearName(this.dateAdapter.createDate(year, 0, 1));\n\n        return new McCalendarCell(year, yearName, yearName, this.shouldEnableYear(year));\n    }\n\n    /** Whether the given year is enabled. */\n    private shouldEnableYear(year: number) {\n        // disable if the year is greater than maxDate lower than minDate\n        if (year === undefined || year === null ||\n            (this.maxDate && year > this.dateAdapter.getYear(this.maxDate)) ||\n            (this.minDate && year < this.dateAdapter.getYear(this.minDate))) {\n            return false;\n        }\n\n        // enable if it reaches here and there's no filter defined\n        if (!this.dateFilter) {\n            return true;\n        }\n\n        const firstOfYear = this.dateAdapter.createDate(year, 0, 1);\n\n        // If any date in the year is enabled count the year as enabled.\n        for (let date = firstOfYear; this.dateAdapter.getYear(date) === year;\n             date = this.dateAdapter.addCalendarDays(date, 1)) {\n            if (this.dateFilter(date)) {\n                return true;\n            }\n        }\n\n        return false;\n    }\n\n    /**\n     * @param obj The object to check.\n     * @returns The given object if it is both a date instance and valid, otherwise null.\n     */\n    private getValidDateOrNull(obj: any): D | null {\n        return (this.dateAdapter.isDateInstance(obj) && this.dateAdapter.isValid(obj)) ? obj : null;\n    }\n\n    /** Determines whether the user has the RTL layout direction. */\n    private isRtl() {\n        return this.dir && this.dir.value === 'rtl';\n    }\n}\n","import {\n    AfterContentInit,\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    EventEmitter,\n    Inject,\n    Input,\n    Optional,\n    Output,\n    ViewChild,\n    ViewEncapsulation\n} from '@angular/core';\nimport { Directionality } from '@ptsecurity/cdk/bidi';\nimport { DateAdapter, MC_DATE_FORMATS, McDateFormats } from '@ptsecurity/cdk/datetime';\nimport {\n    DOWN_ARROW,\n    END,\n    ENTER,\n    HOME,\n    LEFT_ARROW,\n    PAGE_DOWN,\n    PAGE_UP,\n    RIGHT_ARROW,\n    UP_ARROW,\n    SPACE\n} from '@ptsecurity/cdk/keycodes';\n\nimport { McCalendarBody, McCalendarCell } from './calendar-body';\nimport { createMissingDateImplError } from './datepicker-errors';\n\n\n/**\n * An internal component used to display a single year in the datepicker.\n * @docs-private\n */\n@Component({\n    selector: 'mc-year-view',\n    templateUrl: 'year-view.html',\n    exportAs: 'mcYearView',\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class McYearView<D> implements AfterContentInit {\n    /** The date to display in this year view (everything other than the year is ignored). */\n    @Input()\n    get activeDate(): D {\n        return this._activeDate;\n    }\n\n    set activeDate(value: D) {\n        const oldActiveDate = this._activeDate;\n        const validDate =\n            this.getValidDateOrNull(this.dateAdapter.deserialize(value)) || this.dateAdapter.today();\n        this._activeDate = this.dateAdapter.clampDate(validDate, this.minDate, this.maxDate);\n\n        if (this.dateAdapter.getYear(oldActiveDate) !== this.dateAdapter.getYear(this._activeDate)) {\n            this.init();\n        }\n    }\n\n    /** The currently selected date. */\n    @Input()\n    get selected(): D | null {\n        return this._selected;\n    }\n\n    set selected(value: D | null) {\n        this._selected = this.getValidDateOrNull(this.dateAdapter.deserialize(value));\n        this.selectedMonth = this.getMonthInCurrentYear(this._selected);\n    }\n\n    /** The minimum selectable date. */\n    @Input()\n    get minDate(): D | null {\n        return this._minDate;\n    }\n\n    set minDate(value: D | null) {\n        this._minDate = this.getValidDateOrNull(this.dateAdapter.deserialize(value));\n    }\n\n    /** The maximum selectable date. */\n    @Input()\n    get maxDate(): D | null {\n        return this._maxDate;\n    }\n\n    set maxDate(value: D | null) {\n        this._maxDate = this.getValidDateOrNull(this.dateAdapter.deserialize(value));\n    }\n\n    /** A function used to filter which dates are selectable. */\n    @Input() dateFilter: (date: D) => boolean;\n\n    /** Emits when a new month is selected. */\n    @Output() readonly selectedChange: EventEmitter<D> = new EventEmitter<D>();\n\n    /** Emits the selected month. This doesn't imply a change on the selected date */\n    @Output() readonly monthSelected: EventEmitter<D> = new EventEmitter<D>();\n\n    /** Emits when any date is activated. */\n    @Output() readonly activeDateChange: EventEmitter<D> = new EventEmitter<D>();\n\n    /** The body of calendar table */\n    @ViewChild(McCalendarBody) mcCalendarBody: McCalendarBody;\n\n    /** Grid of calendar cells representing the months of the year. */\n    months: McCalendarCell[][];\n\n    /** The label for this year (e.g. \"2017\"). */\n    yearLabel: string;\n\n    /** The month in this year that today falls on. Null if today is in a different year. */\n    todayMonth: number | null;\n\n    /**\n     * The month in this year that the selected Date falls on.\n     * Null if the selected Date is in a different year.\n     */\n    selectedMonth: number | null;\n    private _activeDate: D;\n    private _selected: D | null;\n    private _minDate: D | null;\n    private _maxDate: D | null;\n\n    constructor(\n        private changeDetectorRef: ChangeDetectorRef,\n        @Optional() @Inject(MC_DATE_FORMATS) private dateFormats: McDateFormats,\n        @Optional() public dateAdapter: DateAdapter<D>,\n        @Optional() private dir?: Directionality\n    ) {\n        if (!this.dateAdapter) {\n            throw createMissingDateImplError('DateAdapter');\n        }\n\n        if (!this.dateFormats) {\n            throw createMissingDateImplError('MC_DATE_FORMATS');\n        }\n\n        this._activeDate = this.dateAdapter.today();\n    }\n\n    ngAfterContentInit() {\n        this.init();\n    }\n\n    /** Handles when a new month is selected. */\n    onMonthSelected(month: number) {\n        const normalizedDate =\n            this.dateAdapter.createDate(this.dateAdapter.getYear(this.activeDate), month, 1);\n\n        this.monthSelected.emit(normalizedDate);\n\n        const daysInMonth = this.dateAdapter.getNumDaysInMonth(normalizedDate);\n\n        this.selectedChange.emit(this.dateAdapter.createDate(\n            this.dateAdapter.getYear(this.activeDate), month,\n            Math.min(this.dateAdapter.getDate(this.activeDate), daysInMonth)));\n    }\n\n    /** Handles keydown events on the calendar body when calendar is in year view. */\n    handleCalendarBodyKeydown(event: KeyboardEvent): void {\n        // TODO(mmalerba): We currently allow keyboard navigation to disabled dates, but just prevent\n        // disabled ones from being selected. This may not be ideal, we should look into whether\n        // navigation should skip over disabled dates, and if so, how to implement that efficiently.\n\n        const oldActiveDate = this._activeDate;\n        const isRtl = this.isRtl();\n\n        const VERTICAL_SHIFT = 4;\n        const PAGE_SHIFT = 10;\n        const MAX_MONTH_INDEX = 11;\n\n        // tslint:disable-next-line:deprecation\n        switch (event.keyCode) {\n            case LEFT_ARROW:\n                this.activeDate = this.dateAdapter.addCalendarMonths(this._activeDate, isRtl ? 1 : -1);\n                break;\n            case RIGHT_ARROW:\n                this.activeDate = this.dateAdapter.addCalendarMonths(this._activeDate, isRtl ? -1 : 1);\n                break;\n            case UP_ARROW:\n                this.activeDate = this.dateAdapter.addCalendarMonths(this._activeDate, -VERTICAL_SHIFT);\n                break;\n            case DOWN_ARROW:\n                this.activeDate = this.dateAdapter.addCalendarMonths(this._activeDate, VERTICAL_SHIFT);\n                break;\n            case HOME:\n                this.activeDate = this.dateAdapter.addCalendarMonths(this._activeDate,\n                    -this.dateAdapter.getMonth(this._activeDate));\n                break;\n            case END:\n                this.activeDate = this.dateAdapter.addCalendarMonths(this._activeDate,\n                    MAX_MONTH_INDEX - this.dateAdapter.getMonth(this._activeDate));\n                break;\n            case PAGE_UP:\n                this.activeDate =\n                    this.dateAdapter.addCalendarYears(this._activeDate, event.altKey ? -PAGE_SHIFT : -1);\n                break;\n            case PAGE_DOWN:\n                this.activeDate =\n                    this.dateAdapter.addCalendarYears(this._activeDate, event.altKey ? PAGE_SHIFT : 1);\n                break;\n            case ENTER:\n            case SPACE:\n                this.onMonthSelected(this.dateAdapter.getMonth(this._activeDate));\n                break;\n            default:\n                // Don't prevent default or focus active cell on keys that we don't explicitly handle.\n                return;\n        }\n\n        if (this.dateAdapter.compareDate(oldActiveDate, this.activeDate)) {\n            this.activeDateChange.emit(this.activeDate);\n        }\n\n        this.focusActiveCell();\n        // Prevent unexpected default actions such as form submission.\n        event.preventDefault();\n    }\n\n    /** Initializes this year view. */\n    init() {\n        this.selectedMonth = this.getMonthInCurrentYear(this.selected);\n        this.todayMonth = this.getMonthInCurrentYear(this.dateAdapter.today());\n        this.yearLabel = this.dateAdapter.getYearName(this.activeDate);\n\n        const monthNames = this.dateAdapter.getMonthNames('short');\n\n        // First row of months only contains 5 elements so we can fit the year label on the same row.\n        // tslint:disable-next-line:no-magic-numbers\n        this.months = [[0, 1, 2, 3], [4, 5, 6, 7], [8, 9, 10, 11]].map((row) => row.map(\n            (month) => this.createCellForMonth(month, monthNames[month])));\n        this.changeDetectorRef.markForCheck();\n    }\n\n    /** Focuses the active cell after the microtask queue is empty. */\n    focusActiveCell() {\n        this.mcCalendarBody.focusActiveCell();\n    }\n\n    /**\n     * Gets the month in this year that the given Date falls on.\n     * Returns null if the given Date is in another year.\n     */\n    private getMonthInCurrentYear(date: D | null) {\n        return date && this.dateAdapter.getYear(date) === this.dateAdapter.getYear(this.activeDate) ?\n            this.dateAdapter.getMonth(date) : null;\n    }\n\n    /** Creates an McCalendarCell for the given month. */\n    private createCellForMonth(month: number, monthName: string) {\n        const ariaLabel = this.dateAdapter.format(\n            this.dateAdapter.createDate(this.dateAdapter.getYear(this.activeDate), month, 1),\n            this.dateFormats.display.monthYearA11yLabel);\n\n        const newMonthName = monthName[0].toLocaleUpperCase() + monthName.substr(1);\n\n        return new McCalendarCell(\n            month, newMonthName, ariaLabel, this.shouldEnableMonth(month));\n    }\n\n    /** Whether the given month is enabled. */\n    private shouldEnableMonth(month: number) {\n\n        const activeYear = this.dateAdapter.getYear(this.activeDate);\n\n        if (month === undefined || month === null ||\n            this.isYearAndMonthAfterMaxDate(activeYear, month) ||\n            this.isYearAndMonthBeforeMinDate(activeYear, month)) {\n            return false;\n        }\n\n        if (!this.dateFilter) {\n            return true;\n        }\n\n        const firstOfMonth = this.dateAdapter.createDate(activeYear, month, 1);\n\n        // If any date in the month is enabled count the month as enabled.\n        for (let date = firstOfMonth; this.dateAdapter.getMonth(date) === month;\n             date = this.dateAdapter.addCalendarDays(date, 1)) {\n            if (this.dateFilter(date)) {\n                return true;\n            }\n        }\n\n        return false;\n    }\n\n    /**\n     * Tests whether the combination month/year is after this.maxDate, considering\n     * just the month and year of this.maxDate\n     */\n    private isYearAndMonthAfterMaxDate(year: number, month: number) {\n        if (this.maxDate) {\n            const maxYear = this.dateAdapter.getYear(this.maxDate);\n            const maxMonth = this.dateAdapter.getMonth(this.maxDate);\n\n            return year > maxYear || (year === maxYear && month > maxMonth);\n        }\n\n        return false;\n    }\n\n    /**\n     * Tests whether the combination month/year is before this.minDate, considering\n     * just the month and year of this.minDate\n     */\n    private isYearAndMonthBeforeMinDate(year: number, month: number) {\n        if (this.minDate) {\n            const minYear = this.dateAdapter.getYear(this.minDate);\n            const minMonth = this.dateAdapter.getMonth(this.minDate);\n\n            return year < minYear || (year === minYear && month < minMonth);\n        }\n\n        return false;\n    }\n\n    /**\n     * @param obj The object to check.\n     * @returns The given object if it is both a date instance and valid, otherwise null.\n     */\n    private getValidDateOrNull(obj: any): D | null {\n        return (this.dateAdapter.isDateInstance(obj) && this.dateAdapter.isValid(obj)) ? obj : null;\n    }\n\n    /** Determines whether the user has the RTL layout direction. */\n    private isRtl() {\n        return this.dir && this.dir.value === 'rtl';\n    }\n}\n","import {\n    ChangeDetectionStrategy,\n    Component,\n    Directive,\n    ElementRef,\n    OnDestroy,\n    QueryList,\n    ViewEncapsulation,\n    ContentChildren\n} from '@angular/core';\n\nimport { FocusMonitor } from '@ptsecurity/cdk/a11y';\n\nimport { mixinColor, mixinDisabled, CanColor, CanDisable, CanDisableCtor, CanColorCtor } from '@ptsecurity/mosaic/core';\nimport { McIcon } from '@ptsecurity/mosaic/icon';\n\n\n@Directive({\n    selector: 'button[mc-button], a[mc-button]',\n    host: { class: 'mc-button' }\n})\nexport class McButtonCSSStyler {}\n\n\n@Directive({\n    selector: 'button[mc-icon-button], a[mc-icon-button]',\n    queries: {\n        contentChildren: new ContentChildren(McIcon)\n    },\n    host: { class: 'mc-icon-button' }\n})\nexport class McIconButtonCSSStyler {\n    nativeElement: Element;\n\n    contentChildren: QueryList<McIcon>;\n\n    constructor(elementRef: ElementRef) {\n        this.nativeElement = elementRef.nativeElement;\n    }\n\n    ngAfterContentInit() {\n        this._addClassModificatorForIcons();\n    }\n\n    _addClassModificatorForIcons() {\n        const twoIcons = 2;\n        const icons = this.contentChildren.map((item) => item._elementRef.nativeElement);\n\n        if (icons.length === 1) {\n            const iconElement = icons[0];\n            const COMMENT_NODE = 8;\n\n            if (!iconElement.previousElementSibling && !iconElement.nextElementSibling) {\n                if (iconElement.nextSibling && iconElement.nextSibling.nodeType !== COMMENT_NODE) {\n                    iconElement.classList.add('mc-icon_left');\n                    this.nativeElement.classList.add('mc-icon-button_left');\n                }\n\n                if (iconElement.previousSibling && iconElement.previousSibling.nodeType !== COMMENT_NODE) {\n                    iconElement.classList.add('mc-icon_right');\n                    this.nativeElement.classList.add('mc-icon-button_right');\n                }\n            }\n        } else if (icons.length === twoIcons) {\n            const firstIconElement = icons[0];\n            const secondIconElement = icons[1];\n\n            firstIconElement.classList.add('mc-icon_left');\n            secondIconElement.classList.add('mc-icon_right');\n        }\n    }\n}\n\n\nexport class McButtonBase {\n    constructor(public _elementRef: ElementRef) {}\n}\n\nexport const _McButtonMixinBase:\n    CanDisableCtor &\n    CanColorCtor &\n    typeof McButtonBase =\n        mixinColor(mixinDisabled(McButtonBase));\n\n\n@Component({\n    selector: `\n        button[mc-button],\n        button[mc-xs-button],\n        button[mc-sm-button],\n        button[mc-lg-button],\n        button[mc-xl-button]\n    `,\n    templateUrl: './button.component.html',\n    styleUrls: ['./button.css'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n    inputs: ['disabled', 'color'],\n    host: {\n        '[disabled]': 'disabled || null'\n    }\n})\nexport class McButton extends _McButtonMixinBase implements OnDestroy, CanDisable, CanColor {\n    constructor(elementRef: ElementRef, private _focusMonitor: FocusMonitor) {\n        super(elementRef);\n\n        this._focusMonitor.monitor(this._elementRef.nativeElement, true);\n    }\n\n    ngOnDestroy() {\n        this._focusMonitor.stopMonitoring(this._elementRef.nativeElement);\n    }\n\n    focus(): void {\n        this._getHostElement().focus();\n    }\n\n    _getHostElement() {\n        return this._elementRef.nativeElement;\n    }\n}\n\n\n@Component({\n    selector: 'a[mc-button], a[mc-xs-button], a[mc-sm-button], a[mc-lg-button], a[mc-xl-button]',\n    templateUrl: './button.component.html',\n    styleUrls: ['./button.css'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n    inputs: ['disabled', 'color'],\n    host: {\n        '[attr.tabindex]': 'disabled ? -1 : 0',\n        '[attr.disabled]': 'disabled || null',\n        '(click)': '_haltDisabledEvents($event)'\n    }\n})\nexport class McAnchor extends McButton {\n    constructor(focusMonitor: FocusMonitor, elementRef: ElementRef) {\n        super(elementRef, focusMonitor);\n    }\n\n    _haltDisabledEvents(event: Event) {\n        if (this.disabled) {\n            event.preventDefault();\n            event.stopImmediatePropagation();\n        }\n    }\n}\n\n\n@Component({\n    selector: 'button[mc-icon-button]',\n    templateUrl: './button.component.html',\n    styleUrls: ['./button.css'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n    inputs: ['disabled', 'color'],\n    host: {\n        '[attr.tabindex]': 'disabled ? -1 : 0',\n        '[attr.disabled]': 'disabled || null'\n    }\n})\nexport class McIconButton extends McButton {\n    constructor(focusMonitor: FocusMonitor, elementRef: ElementRef) {\n        super(elementRef, focusMonitor);\n    }\n\n    _haltDisabledEvents(event: Event) {\n        if (this.disabled) {\n            event.preventDefault();\n            event.stopImmediatePropagation();\n        }\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { A11yModule } from '@ptsecurity/cdk/a11y';\nimport { PlatformModule } from '@ptsecurity/cdk/platform';\n\nimport {\n    McButton,\n    McAnchor,\n    McIconButton,\n    McButtonCSSStyler,\n    McIconButtonCSSStyler\n} from './button.component';\n\n\n@NgModule({\n    imports: [\n        CommonModule,\n        A11yModule,\n        PlatformModule\n    ],\n    exports: [\n        McButton,\n        McAnchor,\n        McIconButton,\n        McButtonCSSStyler,\n        McIconButtonCSSStyler\n    ],\n    declarations: [\n        McButton,\n        McAnchor,\n        McIconButton,\n        McButtonCSSStyler,\n        McIconButtonCSSStyler\n    ]\n})\nexport class McButtonModule {}\n","import {\n    Output,\n    ChangeDetectionStrategy,\n    Component,\n    ElementRef, Input,\n    OnDestroy, EventEmitter,\n    ViewEncapsulation, HostBinding\n} from '@angular/core';\n\nimport { FocusMonitor } from '@ptsecurity/cdk/a11y';\nimport { SPACE } from '@ptsecurity/cdk/keycodes';\n\n\n@Component({\n    selector: 'mc-card',\n    templateUrl: './card.component.html',\n    styleUrls: ['./card.component.css'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n    inputs: ['color'],\n    host: {\n        class: 'mc-card',\n        '[class.mc-card_readonly]': 'readonly',\n        '[class.mc-card_selected]': 'selected',\n        '(keydown)': 'onKeyDown($event)',\n        '(click)': 'onClick($event)'\n    }\n})\nexport class McCard implements OnDestroy {\n    get tabIndex(): number | null {\n        return this.readonly ? null : this._tabIndex;\n    }\n\n    @HostBinding('attr.tabIndex')\n    @Input()\n    set tabIndex(value: number | null) {\n        this._tabIndex = value;\n    }\n\n    @Input()\n    readonly = false;\n\n    @Input()\n    selected = false;\n\n    @Output()\n    selectedChange = new EventEmitter<boolean>();\n\n    private _tabIndex: number | null = 0;\n\n    constructor(private _elementRef: ElementRef, private _focusMonitor: FocusMonitor) {\n        this._focusMonitor.monitor(this._elementRef.nativeElement, false);\n    }\n\n    ngOnDestroy() {\n        this._focusMonitor.stopMonitoring(this._elementRef.nativeElement);\n    }\n\n    focus(): void {\n        this.hostElement.focus();\n    }\n\n    onClick($event: MouseEvent) {\n        if (!this.readonly) {\n            $event.stopPropagation();\n\n            this.selectedChange.emit(!this.selected);\n        }\n    }\n\n    private get hostElement() {\n        return this._elementRef.nativeElement;\n    }\n\n    onKeyDown($event: KeyboardEvent) {\n        switch ($event.keyCode) {\n            case SPACE:\n                if (!this.readonly) {\n                    $event.preventDefault();\n                    this.selectedChange.emit(!this.selected);\n                }\n                break;\n            default:\n        }\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { A11yModule } from '@ptsecurity/cdk/a11y';\nimport { PlatformModule } from '@ptsecurity/cdk/platform';\n\nimport {\n    McCard\n} from './card.component';\n\n\n@NgModule({\n    imports: [\n        CommonModule,\n        A11yModule,\n        PlatformModule\n    ],\n    exports: [McCard],\n    declarations: [McCard]\n})\nexport class McCardModule {}\n","import { InjectionToken } from '@angular/core';\n\n\n/**\n * Checkbox click action when user click on input element.\n * noop: Do not toggle checked or indeterminate.\n * check: Only toggle checked status, ignore indeterminate.\n * check-indeterminate: Toggle checked status, set indeterminate to false. Default behavior.\n * undefined: Same as `check-indeterminate`.\n */\nexport type McCheckboxClickAction = 'noop' | 'check' | 'check-indeterminate' | undefined;\n\n/**\n * Injection token that can be used to specify the checkbox click behavior.\n */\nexport const MC_CHECKBOX_CLICK_ACTION =\n    new InjectionToken<McCheckboxClickAction>('mc-checkbox-click-action');\n","import {\n    AfterViewInit,\n    Attribute,\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    ElementRef,\n    EventEmitter,\n    forwardRef,\n    Inject,\n    Input,\n    OnDestroy,\n    Optional,\n    Output,\n    ViewChild,\n    ViewEncapsulation\n} from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { FocusMonitor, FocusOrigin } from '@ptsecurity/cdk/a11y';\nimport {\n    CanColor, CanColorCtor,\n    CanDisable, CanDisableCtor,\n    HasTabIndex, HasTabIndexCtor,\n    mixinColor,\n    mixinDisabled,\n    mixinTabIndex,\n    toBoolean\n} from '@ptsecurity/mosaic/core';\n\nimport { MC_CHECKBOX_CLICK_ACTION, McCheckboxClickAction } from './checkbox-config';\n\n\n// Increasing integer for generating unique ids for checkbox components.\nlet nextUniqueId = 0;\n\n/**\n * Provider Expression that allows mc-checkbox to register as a ControlValueAccessor.\n * This allows it to support [(ngModel)].\n * @docs-private\n */\nexport const MC_CHECKBOX_CONTROL_VALUE_ACCESSOR: any = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => McCheckbox),\n    multi: true\n};\n\n/**\n * Represents the different states that require custom transitions between them.\n * @docs-private\n */\nexport enum TransitionCheckState {\n    /** The initial state of the component before any user interaction. */\n    Init,\n    /** The state representing the component when it's becoming checked. */\n    Checked,\n    /** The state representing the component when it's becoming unchecked. */\n    Unchecked,\n    /** The state representing the component when it's becoming indeterminate. */\n    Indeterminate\n}\n\n/** Change event object emitted by McCheckbox. */\nexport class McCheckboxChange {\n    /** The source McCheckbox of the event. */\n    source: McCheckbox;\n    /** The new `checked` value of the checkbox. */\n    checked: boolean;\n}\n\n// Boilerplate for applying mixins to McCheckbox.\n/** @docs-private */\nexport class McCheckboxBase {\n    constructor(public _elementRef: ElementRef) {\n    }\n}\n\nexport const _McCheckboxMixinBase:\n    HasTabIndexCtor &\n    CanColorCtor &\n    CanDisableCtor &\n    typeof McCheckboxBase =\n        mixinTabIndex(mixinColor(mixinDisabled(McCheckboxBase)));\n\n\n/**\n * A mosaic checkbox component. Supports all of the functionality of an HTML5 checkbox,\n * and exposes a similar API. A McCheckbox can be either checked, unchecked, indeterminate, or\n * disabled. Note that all additional accessibility attributes are taken care of by the component,\n * so there is no need to provide them yourself. However, if you want to omit a label and still\n * have the checkbox be accessible, you may supply an [aria-label] input.\n */\n@Component({\n    selector: 'mc-checkbox',\n    templateUrl: 'checkbox.html',\n    styleUrls: ['checkbox.css'],\n    exportAs: 'mcCheckbox',\n    host: {\n        class: 'mc-checkbox',\n        '[id]': 'id',\n        '[attr.id]': 'id',\n        '[class.mc-indeterminate]': 'indeterminate',\n        '[class.mc-checked]': 'checked',\n        '[class.mc-disabled]': 'disabled',\n        '[class.mc-checkbox-label-before]': 'labelPosition == \"before\"'\n    },\n    providers: [MC_CHECKBOX_CONTROL_VALUE_ACCESSOR],\n    inputs: ['color', 'tabIndex'],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class McCheckbox extends _McCheckboxMixinBase implements ControlValueAccessor,\n    AfterViewInit, OnDestroy, CanColor, CanDisable, HasTabIndex {\n\n    /**\n     * Attached to the aria-label attribute of the host element. In most cases, arial-labelledby will\n     * take precedence so this may be omitted.\n     */\n    @Input('aria-label') ariaLabel: string = '';\n\n    /**\n     * Users can specify the `aria-labelledby` attribute which will be forwarded to the input element\n     */\n    @Input('aria-labelledby') ariaLabelledby: string | null = null;\n\n    private _uniqueId: string = `mc-checkbox-${++nextUniqueId}`;\n\n    /** A unique id for the checkbox input. If none is supplied, it will be auto-generated. */\n    @Input() id: string = this._uniqueId;\n\n    /** Returns the unique id for the visual hidden input. */\n    get inputId(): string {\n        return `${this.id || this._uniqueId}-input`;\n    }\n\n    /** Whether the checkbox is required. */\n    @Input()\n    get required(): boolean {\n        return this._required;\n    }\n\n    set required(value: boolean) {\n        this._required = toBoolean(value);\n    }\n\n    private _required: boolean;\n\n    /** Whether the label should appear after or before the checkbox. Defaults to 'after' */\n    @Input() labelPosition: 'before' | 'after' = 'after';\n\n    /** Name value will be applied to the input element if present */\n    @Input() name: string | null = null;\n\n    /** Event emitted when the checkbox's `checked` value changes. */\n    @Output() readonly change: EventEmitter<McCheckboxChange> =\n        new EventEmitter<McCheckboxChange>();\n\n    /** Event emitted when the checkbox's `indeterminate` value changes. */\n    @Output() readonly indeterminateChange: EventEmitter<boolean> = new EventEmitter<boolean>();\n\n    /** The value attribute of the native input element */\n    @Input() value: string;\n\n    /** The native `<input type=\"checkbox\">` element */\n    @ViewChild('input') _inputElement: ElementRef;\n\n    /**\n     * Called when the checkbox is blurred. Needed to properly implement ControlValueAccessor.\n     * @docs-private\n     */\n    _onTouched: () => any = () => {\n    }\n\n    private _currentAnimationClass: string = '';\n\n    private _currentCheckState: TransitionCheckState = TransitionCheckState.Init;\n\n    private _controlValueAccessorChangeFn: (value: any) => void = () => {\n    }\n\n    constructor(elementRef: ElementRef,\n                private _changeDetectorRef: ChangeDetectorRef,\n                private _focusMonitor: FocusMonitor,\n                @Attribute('tabindex') tabIndex: string,\n                @Optional() @Inject(MC_CHECKBOX_CLICK_ACTION)\n                private _clickAction: McCheckboxClickAction) {\n        super(elementRef);\n\n        this.tabIndex = parseInt(tabIndex) || 0;\n    }\n\n    ngAfterViewInit() {\n        this._focusMonitor\n            .monitor(this._inputElement.nativeElement)\n            .subscribe((focusOrigin) => this._onInputFocusChange(focusOrigin));\n    }\n\n    ngOnDestroy() {\n        this._focusMonitor.stopMonitoring(this._inputElement.nativeElement);\n    }\n\n    /**\n     * Whether the checkbox is checked.\n     */\n    @Input()\n    get checked(): boolean {\n        return this._checked;\n    }\n\n    set checked(value: boolean) {\n        if (value != this.checked) {\n            this._checked = value;\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n\n    private _checked: boolean = false;\n\n    /**\n     * Whether the checkbox is disabled. This fully overrides the implementation provided by\n     * mixinDisabled, but the mixin is still required because mixinTabIndex requires it.\n     */\n    @Input()\n    get disabled() {\n        return this._disabled;\n    }\n\n    set disabled(value: any) {\n        if (value != this.disabled) {\n            this._disabled = value;\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n\n    private _disabled: boolean = false;\n\n    /**\n     * Whether the checkbox is indeterminate. This is also known as \"mixed\" mode and can be used to\n     * represent a checkbox with three states, e.g. a checkbox that represents a nested list of\n     * checkable items. Note that whenever checkbox is manually clicked, indeterminate is immediately\n     * set to false.\n     */\n    @Input()\n    get indeterminate(): boolean {\n        return this._indeterminate;\n    }\n\n    set indeterminate(value: boolean) {\n        const changed = value != this._indeterminate;\n        this._indeterminate = value;\n\n        if (changed) {\n            if (this._indeterminate) {\n                this._transitionCheckState(TransitionCheckState.Indeterminate);\n            } else {\n                this._transitionCheckState(\n                    this.checked ? TransitionCheckState.Checked : TransitionCheckState.Unchecked);\n            }\n            this.indeterminateChange.emit(this._indeterminate);\n        }\n    }\n\n    private _indeterminate: boolean = false;\n\n    /** Method being called whenever the label text changes. */\n    _onLabelTextChange() {\n        // This method is getting called whenever the label of the checkbox changes.\n        // Since the checkbox uses the OnPush strategy we need to notify it about the change\n        // that has been recognized by the cdkObserveContent directive.\n        this._changeDetectorRef.markForCheck();\n    }\n\n    // Implemented as part of ControlValueAccessor.\n    writeValue(value: any) {\n        this.checked = !!value;\n    }\n\n    // Implemented as part of ControlValueAccessor.\n    registerOnChange(fn: (value: any) => void) {\n        this._controlValueAccessorChangeFn = fn;\n    }\n\n    // Implemented as part of ControlValueAccessor.\n    registerOnTouched(fn: any) {\n        this._onTouched = fn;\n    }\n\n    // Implemented as part of ControlValueAccessor.\n    setDisabledState(isDisabled: boolean) {\n        this.disabled = isDisabled;\n    }\n\n    _getAriaChecked(): 'true' | 'false' | 'mixed' {\n        return this.checked ? 'true' : (this.indeterminate ? 'mixed' : 'false');\n    }\n\n    private _transitionCheckState(newState: TransitionCheckState) {\n        const oldState = this._currentCheckState;\n        const element: HTMLElement = this._elementRef.nativeElement;\n\n        if (oldState === newState) {\n            return;\n        }\n        if (this._currentAnimationClass.length > 0) {\n            element.classList.remove(this._currentAnimationClass);\n        }\n\n        this._currentCheckState = newState;\n\n        if (this._currentAnimationClass.length > 0) {\n            element.classList.add(this._currentAnimationClass);\n        }\n    }\n\n    private _emitChangeEvent() {\n        const event = new McCheckboxChange();\n        event.source = this;\n        event.checked = this.checked;\n\n        this._controlValueAccessorChangeFn(this.checked);\n        this.change.emit(event);\n    }\n\n    /** Function is called whenever the focus changes for the input element. */\n    private _onInputFocusChange(focusOrigin: FocusOrigin) {\n        if (focusOrigin) {\n            this._onTouched();\n        }\n    }\n\n    /** Toggles the `checked` state of the checkbox. */\n    toggle(): void {\n        this.checked = !this.checked;\n    }\n\n    /**\n     * Event handler for checkbox input element.\n     * Toggles checked state if element is not disabled.\n     * Do not toggle on (change) event since IE doesn't fire change event when\n     *   indeterminate checkbox is clicked.\n     * @param event\n     */\n    _onInputClick(event: Event) {\n        // We have to stop propagation for click events on the visual hidden input element.\n        // By default, when a user clicks on a label element, a generated click event will be\n        // dispatched on the associated input element. Since we are using a label element as our\n        // root container, the click event on the `checkbox` will be executed twice.\n        // The real click event will bubble up, and the generated click event also tries to bubble up.\n        // This will lead to multiple click events.\n        // Preventing bubbling for the second event will solve that issue.\n        event.stopPropagation();\n\n        // If resetIndeterminate is false, and the current state is indeterminate, do nothing on click\n        if (!this.disabled && this._clickAction !== 'noop') {\n            // When user manually click on the checkbox, `indeterminate` is set to false.\n            if (this.indeterminate && this._clickAction !== 'check') {\n\n                Promise.resolve().then(() => {\n                    this._indeterminate = false;\n                    this.indeterminateChange.emit(this._indeterminate);\n                });\n            }\n\n            this.toggle();\n            this._transitionCheckState(\n                this._checked ? TransitionCheckState.Checked : TransitionCheckState.Unchecked);\n\n            // Emit our custom change event if the native input emitted one.\n            // It is important to only emit it, if the native input triggered one, because\n            // we don't want to trigger a change event, when the `checked` variable changes for example.\n            this._emitChangeEvent();\n        } else if (!this.disabled && this._clickAction === 'noop') {\n            // Reset native input when clicked with noop. The native checkbox becomes checked after\n            // click, reset it to be align with `checked` value of `mc-checkbox`.\n            this._inputElement.nativeElement.checked = this.checked;\n            this._inputElement.nativeElement.indeterminate = this.indeterminate;\n        }\n    }\n\n    /** Focuses the checkbox. */\n    focus(): void {\n        this._focusMonitor.focusVia(this._inputElement.nativeElement, 'keyboard');\n    }\n\n    _onInteractionEvent(event: Event) {\n        // We always have to stop propagation on the change event.\n        // Otherwise the change event, from the input element, will bubble up and\n        // emit its event object to the `change` output.\n        event.stopPropagation();\n    }\n}\n","import {\n    Directive,\n    forwardRef,\n    Provider\n} from '@angular/core';\nimport {\n    CheckboxRequiredValidator,\n    NG_VALIDATORS\n} from '@angular/forms';\n\n\nexport const MC_CHECKBOX_REQUIRED_VALIDATOR: Provider = {\n    provide: NG_VALIDATORS,\n    useExisting: forwardRef(() => McCheckboxRequiredValidator),\n    multi: true\n};\n\n/**\n * Validator for Mosaic checkbox's required attribute in template-driven checkbox.\n * Current CheckboxRequiredValidator only work with `input type=checkbox` and does not\n * work with `mc-checkbox`.\n */\n@Directive({\n    selector: `mc-checkbox[required][formControlName],\n             mc-checkbox[required][formControl], mc-checkbox[required][ngModel]`,\n    providers: [MC_CHECKBOX_REQUIRED_VALIDATOR],\n    host: { '[attr.required]': 'required ? \"\" : null' }\n})\nexport class McCheckboxRequiredValidator extends CheckboxRequiredValidator {\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { McCheckbox } from './checkbox';\nimport { McCheckboxRequiredValidator } from './checkbox-required-validator';\n\n\n@NgModule({\n    imports: [CommonModule],\n    exports: [McCheckbox, McCheckboxRequiredValidator],\n    declarations: [McCheckbox, McCheckboxRequiredValidator]\n})\nexport class McCheckboxModule {\n}\n","import { Component } from '@angular/core';\n\n\n@Component({\n    selector: 'mc-cleaner',\n    template: '<i class=\"mc-icon_light\" mc-icon=\"mc-close-M_16\" color=\"second\"></i>'\n})\nexport class McCleaner {}\n","import { NgControl } from '@angular/forms';\nimport { Observable } from 'rxjs';\n\n\n/** An interface which allows a control to work inside of a `MсFormField`. */\nexport abstract class McFormFieldControl<T> {\n    /** The value of the control. */\n    value: T | null;\n\n    /**\n     * Stream that emits whenever the state of the control changes such that the parent `MсFormField`\n     * needs to run change detection.\n     */\n    readonly stateChanges: Observable<void>;\n\n    /** The element ID for this control. */\n    readonly id: string;\n\n    /** The placeholder for this control. */\n    readonly placeholder: string;\n\n    /** Gets the NgControl for this control. */\n    readonly ngControl: NgControl | null;\n\n    /** Whether the control is focused. */\n    readonly focused: boolean;\n\n    /** Whether the control is empty. */\n    readonly empty: boolean;\n\n    /** Whether the control is required. */\n    readonly required: boolean;\n\n    /** Whether the control is disabled. */\n    readonly disabled: boolean;\n\n    /** Whether the control is in an error state. */\n    readonly errorState: boolean;\n\n    /**\n     * An optional name for the control type that can be used to distinguish `mc-form-field` elements\n     * based on their control type. The form field will add a class,\n     * `mc-form-field-type-{{controlType}}` to its root element.\n     */\n    readonly controlType?: string;\n\n    /** Handles a click on the control's container. */\n    abstract onContainerClick(event: MouseEvent): void;\n}\n","import { Observable } from 'rxjs';\n\n\n/** An interface which allows a control to work inside of a `MсFormField`. */\nexport abstract class McFormFieldNumberControl<T> {\n    /** The value of the control. */\n    value: T | null;\n\n    /**\n     * Stream that emits whenever the state of the control changes such that the parent `MсFormField`\n     * needs to run change detection.\n     */\n    readonly stateChanges: Observable<void>;\n\n    /** the number step */\n    step: number;\n\n    /** the number big step */\n    bigStep: number;\n\n    /** Whether the control is focused. */\n    readonly focused: boolean;\n\n    /** Handles step up and down */\n    abstract stepUp(step: number): void;\n\n    abstract stepDown(step: number): void;\n}\n","import { Directive, Input } from '@angular/core';\n\n\nlet nextUniqueId = 0;\n\n@Directive({\n    selector: 'mc-hint',\n    host: {\n        class: 'mc-hint',\n        '[attr.id]': 'id'\n    }\n})\nexport class McHint {\n    @Input() id: string = `mc-hint-${nextUniqueId++}`;\n}\n","import { Directive } from '@angular/core';\n\n\n@Directive({\n    selector: '[mcPrefix]'\n})\nexport class McPrefix {\n}\n","import { Component, EventEmitter, Output } from '@angular/core';\n\n\n@Component({\n    selector: 'mc-stepper',\n    template: `\n        <i class=\"mc mc-icon mc-icon_light mc-second mc-stepper-step-up mc-angle-down-L_16\"\n           (mousedown)=\"onStepUp($event)\">\n        </i>\n        <i class=\"mc mc-icon mc-icon_light mc-second mc-stepper-step-down mc-angle-down-L_16\"\n           (mousedown)=\"onStepDown($event)\">\n        </i>\n    `\n})\nexport class McStepper {\n    @Output()\n    readonly stepUp: EventEmitter<void> = new EventEmitter<void>();\n    @Output()\n    readonly stepDown: EventEmitter<void> = new EventEmitter<void>();\n\n    onStepUp($event: MouseEvent) {\n        this.stepUp.emit();\n        $event.preventDefault();\n    }\n\n    onStepDown($event: MouseEvent) {\n        this.stepDown.emit();\n        $event.preventDefault();\n    }\n}\n","import { Directive } from '@angular/core';\n\n\n@Directive({\n    selector: '[mcSuffix]'\n})\nexport class McSuffix {\n}\n","import {\n    AfterContentChecked,\n    AfterContentInit,\n    AfterViewInit,\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    ContentChild,\n    ContentChildren, Directive,\n    ElementRef,\n    QueryList,\n    ViewEncapsulation\n} from '@angular/core';\nimport { NgControl } from '@angular/forms';\nimport { ESCAPE } from '@ptsecurity/cdk/keycodes';\nimport { CanColor, CanColorCtor, mixinColor } from '@ptsecurity/mosaic/core';\nimport { EMPTY, merge } from 'rxjs';\nimport { startWith } from 'rxjs/operators';\n\n\nimport { McCleaner } from './cleaner';\nimport { McFormFieldControl } from './form-field-control';\nimport { getMcFormFieldMissingControlError } from './form-field-errors';\nimport { McFormFieldNumberControl } from './form-field-number-control';\nimport { McHint } from './hint';\nimport { McPrefix } from './prefix';\nimport { McStepper } from './stepper';\nimport { McSuffix } from './suffix';\n\n\nlet nextUniqueId = 0;\n\nexport class McFormFieldBase {\n    constructor(public _elementRef: ElementRef) {}\n}\n\nexport const _McFormFieldMixinBase: CanColorCtor & typeof McFormFieldBase = mixinColor(McFormFieldBase);\n\n@Component({\n    selector: 'mc-form-field',\n    exportAs: 'mcFormField',\n    templateUrl: 'form-field.html',\n    // McInput is a directive and can't have styles, so we need to include its styles here.\n    // The McInput styles are fairly minimal so it shouldn't be a big deal for people who\n    // aren't using McInput.\n    styleUrls: [\n        'form-field.css',\n        '../input/input.css',\n        '../textarea/textarea.css'\n    ],\n    host: {\n        class: 'mc-form-field',\n        '[class.mc-form-field_invalid]': '_control.errorState',\n        '[class.mc-disabled]': '_control.disabled',\n        '[class.mc-form-field_has-prefix]': 'hasPrefix',\n        '[class.mc-form-field_has-suffix]': 'hasSuffix',\n        '[class.mc-form-field_has-cleaner]': 'canShowCleaner',\n        '[class.mc-form-field_has-stepper]': 'canShowStepper',\n        '[class.mc-focused]': '_control.focused',\n        '[class.ng-untouched]': '_shouldForward(\"untouched\")',\n        '[class.ng-touched]': '_shouldForward(\"touched\")',\n        '[class.ng-pristine]': '_shouldForward(\"pristine\")',\n        '[class.ng-dirty]': '_shouldForward(\"dirty\")',\n        '[class.ng-valid]': '_shouldForward(\"valid\")',\n        '[class.ng-invalid]': '_shouldForward(\"invalid\")',\n        '[class.ng-pending]': '_shouldForward(\"pending\")',\n        '(keydown)': 'onKeyDown($event)',\n        '(mouseenter)': 'onHoverChanged(true)',\n        '(mouseleave)': 'onHoverChanged(false)'\n    },\n    inputs: ['color'],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\n\nexport class McFormField extends _McFormFieldMixinBase implements\n    AfterContentInit, AfterContentChecked, AfterViewInit, CanColor {\n\n    @ContentChild(McFormFieldControl) _control: McFormFieldControl<any>;\n    @ContentChild(McFormFieldNumberControl) _numberControl: McFormFieldNumberControl<any>;\n    @ContentChild(McStepper) _stepper: McStepper;\n\n    @ContentChildren(McHint) _hint: QueryList<McHint>;\n    @ContentChildren(McSuffix) _suffix: QueryList<McSuffix>;\n    @ContentChildren(McPrefix) _prefix: QueryList<McPrefix>;\n    @ContentChildren(McCleaner) _cleaner: QueryList<McCleaner>;\n\n    // Unique id for the internal form field label.\n    _labelId = `mc-form-field-label-${nextUniqueId++}`;\n\n    hovered: boolean = false;\n\n    constructor(public _elementRef: ElementRef, private _changeDetectorRef: ChangeDetectorRef) {\n        super(_elementRef);\n    }\n\n    ngAfterContentInit() {\n        this._validateControlChild();\n\n        if (this._control.controlType) {\n            this._elementRef.nativeElement.classList\n                .add(`mc-form-field-type-${this._control.controlType}`);\n\n            if (this._numberControl && this.hasStepper) {\n                this._stepper.stepUp.subscribe(this.onStepUp.bind(this));\n                this._stepper.stepDown.subscribe(this.onStepDown.bind(this));\n            }\n        }\n\n        // Subscribe to changes in the child control state in order to update the form field UI.\n        this._control.stateChanges.pipe(startWith())\n            .subscribe(() => {\n                this._changeDetectorRef.markForCheck();\n            });\n\n        if (this._numberControl) {\n            this._numberControl.stateChanges.pipe(startWith())\n                .subscribe(() => {\n                    this._changeDetectorRef.markForCheck();\n                });\n        }\n\n        // Run change detection if the value changes.\n        const valueChanges = this._control.ngControl && this._control.ngControl.valueChanges || EMPTY;\n\n        merge(valueChanges)\n            .subscribe(() => this._changeDetectorRef.markForCheck());\n    }\n\n    ngAfterContentChecked() {\n        this._validateControlChild();\n    }\n\n    ngAfterViewInit() {\n        // Avoid animations on load.\n        this._changeDetectorRef.detectChanges();\n    }\n\n    clearValue($event) {\n        $event.stopPropagation();\n\n        if (this._control && this._control.ngControl) {\n            this._control.ngControl.reset();\n        }\n    }\n\n    onContainerClick($event) {\n        if (this._control.onContainerClick) {\n            this._control.onContainerClick($event);\n        }\n    }\n\n    onKeyDown(event: KeyboardEvent): void {\n        // tslint:disable-next-line:deprecation\n        if (event.keyCode === ESCAPE && this._control.focused && this.hasCleaner) {\n            if (this._control && this._control.ngControl) {\n                this._control.ngControl.reset();\n            }\n\n            event.preventDefault();\n        }\n    }\n\n    onHoverChanged(isHovered: boolean) {\n        if (isHovered !== this.hovered) {\n            this.hovered  = isHovered;\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n\n    onStepUp() {\n        if (this._numberControl) {\n            this._numberControl.stepUp(this._numberControl.step);\n        }\n    }\n\n    onStepDown() {\n        if (this._numberControl) {\n            this._numberControl.stepDown(this._numberControl.step);\n        }\n    }\n\n    /** Determines whether a class from the NgControl should be forwarded to the host element. */\n    _shouldForward(prop: keyof NgControl): boolean {\n        const ngControl = this._control ? this._control.ngControl : null;\n\n        return ngControl && ngControl[prop];\n    }\n\n    /** Throws an error if the form field's control is missing. */\n    protected _validateControlChild() {\n        if (!this._control) {\n            throw getMcFormFieldMissingControlError();\n        }\n    }\n\n    get hasHint(): boolean {\n        return this._hint && this._hint.length > 0;\n    }\n\n    get hasSuffix(): boolean {\n        return this._suffix && this._suffix.length > 0;\n    }\n\n    get hasPrefix(): boolean {\n        return this._prefix && this._prefix.length > 0;\n    }\n\n    get hasCleaner(): boolean {\n        return this._cleaner && this._cleaner.length > 0;\n    }\n\n    get hasStepper(): boolean {\n        return !!this._stepper;\n    }\n\n    get canShowCleaner(): boolean {\n        return this.hasCleaner &&\n            this._control &&\n            this._control.ngControl\n                ? this._control.ngControl.value && !this._control.disabled\n                : false;\n    }\n\n\n    get disabled(): boolean {\n        return this._control && this._control.disabled;\n    }\n\n    get canShowStepper(): boolean {\n        return this._numberControl &&\n            !this.disabled &&\n            (\n                this._numberControl.focused ||\n                this.hovered\n            );\n    }\n}\n\n@Directive({\n    selector: 'mc-form-field[mcFormFieldWithoutBorders]',\n    exportAs: 'mcFormFieldWithoutBorders',\n    host: { class: 'mc-form-field_without-borders' }\n})\nexport class McFormFieldWithoutBorders {}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { McIconModule } from '@ptsecurity/mosaic/icon';\n\nimport { McCleaner } from './cleaner';\nimport { McFormField, McFormFieldWithoutBorders } from './form-field';\nimport { McHint } from './hint';\nimport { McPrefix } from './prefix';\nimport { McStepper } from './stepper';\nimport { McSuffix } from './suffix';\n\n\n@NgModule({\n    declarations: [\n        McFormField,\n        McFormFieldWithoutBorders,\n        McHint,\n        McPrefix,\n        McSuffix,\n        McCleaner,\n        McStepper\n    ],\n    imports: [CommonModule, McIconModule],\n    exports: [\n        McFormField,\n        McFormFieldWithoutBorders,\n        McHint,\n        McPrefix,\n        McSuffix,\n        McCleaner,\n        McStepper\n    ]\n})\nexport class McFormFieldModule {\n}\n","import { InjectionToken } from '@angular/core';\n\n\nexport const MC_INPUT_VALUE_ACCESSOR =\n    new InjectionToken<{ value: any }>('MC_INPUT_VALUE_ACCESSOR');\n","function sanitizeNumber(value: number): number | null {\n    return !isFinite(value) || isNaN(value)\n        ? null\n        : value;\n}\n\nfunction getPrecision(value: number): number {\n    const arr = value.toString().split('.');\n\n    return arr.length === 1\n        ? 1\n        // tslint:disable-next-line:no-magic-numbers\n        :  Math.pow(10, arr[1].length);\n}\n\nfunction add(value1: number, value2: number) {\n    const precision = Math.max(getPrecision(value1), getPrecision(value2));\n\n    const res = (value1 * precision + value2 * precision) / precision;\n\n    return sanitizeNumber(res);\n}\n\nexport const stepUp = (value: number | null,\n                       max: number,\n                       min: number,\n                       step: number\n): number | null => {\n    let res;\n\n    if (value === null) {\n        res = add(min, step);\n\n        return res === null ? null : Math.min(res, max);\n    }\n\n    res = add(value, step);\n\n    return res === null ? null : Math.max(Math.min(res, max), min);\n};\n\nexport const stepDown = (value: number | null,\n                         max: number,\n                         min: number,\n                         step: number\n): number | null => {\n    let res;\n\n    if (value === null) {\n        res = add(max, -step);\n\n        return res === null ? null : Math.max(res, min);\n    }\n\n    res = add(value, -step);\n\n    return res === null ? null : Math.min(Math.max(res, min), max);\n};\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","\nexport function isBoolean(val: any): val is boolean { return typeof val === 'boolean'; }\n\nexport function toBoolean(value: any): boolean {\n    return value != null && `${value}` !== 'false';\n}\n","import { NgModule, InjectionToken, Optional, Inject, isDevMode } from '@angular/core';\nimport { BidiModule } from '@ptsecurity/cdk/bidi';\n\n\n// Injection token that configures whether the Mosaic sanity checks are enabled.\nexport const MC_SANITY_CHECKS = new InjectionToken<boolean>('mc-sanity-checks', {\n    providedIn: 'root',\n    factory: MC_SANITY_CHECKS_FACTORY\n});\n\nexport function MC_SANITY_CHECKS_FACTORY(): boolean {\n    return true;\n}\n\n/**\n * Module that captures anything that should be loaded and/or run for *all* Mosaic\n * components. This includes Bidi, etc.\n *\n * This module should be imported to each top-level component module (e.g., McTabsModule).\n */\n@NgModule({\n    imports: [ BidiModule ],\n    exports: [ BidiModule ]\n})\nexport class McCommonModule {\n    // Whether we've done the global sanity checks (e.g. a theme is loaded, there is a doctype).\n    private _hasDoneGlobalChecks = false;\n\n    // Reference to the global `document` object.\n    private _document = typeof document === 'object' && document ? document : null;\n\n    // Reference to the global 'window' object.\n    private _window = typeof window === 'object' && window ? window : null;\n\n    constructor(@Optional() @Inject(MC_SANITY_CHECKS) private _sanityChecksEnabled: boolean) {\n        if (this._areChecksEnabled() && !this._hasDoneGlobalChecks) {\n            this._checkDoctypeIsDefined();\n            this._checkThemeIsPresent();\n            this._hasDoneGlobalChecks = true;\n        }\n    }\n\n    // Whether any sanity checks are enabled\n    private _areChecksEnabled(): boolean {\n        return this._sanityChecksEnabled && isDevMode() && !this._isTestEnv();\n    }\n\n    // Whether the code is running in tests.\n    private _isTestEnv() {\n        // tslint:disable-next-line\n        return this._window && (this._window['__karma__'] || this._window['jasmine']);\n    }\n\n    private _checkDoctypeIsDefined(): void {\n        if (this._document && !this._document.doctype) {\n            console.warn(\n                'Current document does not have a doctype. This may cause ' +\n                'some Mosaic components not to behave as expected.'\n            );\n        }\n    }\n\n    private _checkThemeIsPresent(): void {\n        if (this._document && typeof getComputedStyle === 'function') {\n            const testElement = this._document.createElement('div');\n\n            testElement.classList.add('mc-theme-loaded-marker');\n            this._document.body.appendChild(testElement);\n\n            const computedStyle = getComputedStyle(testElement);\n\n            // In some situations, the computed style of the test element can be null. For example in\n            // Firefox, the computed style is null if an application is running inside of a hidden iframe.\n            // See: https://bugzilla.mozilla.org/show_bug.cgi?id=548397\n            if (computedStyle && computedStyle.display !== 'none') {\n                console.warn(\n                    'Could not find Mosaic core theme. Most Mosaic ' +\n                    'components may not work as expected. For more info refer ' +\n                    'to the theming guide: link there'\n                );\n            }\n\n            this._document.body.removeChild(testElement);\n        }\n    }\n}\n","import { coerceBooleanProperty } from '@ptsecurity/cdk/coercion';\n\nimport { Constructor } from './constructor';\n\n\nexport interface CanDisable {\n    disabled: boolean;\n}\n\n/** @docs-private */\nexport type CanDisableCtor = Constructor<CanDisable>;\n\n// Mixin to augment a directive with a `disabled` property.\nexport function mixinDisabled<T extends Constructor<{}>>(base: T): CanDisableCtor & T {\n    return class extends base {\n        private _disabled: boolean = false;\n\n        get disabled() {\n            return this._disabled;\n        }\n\n        set disabled(value: any) {\n            this._disabled = coerceBooleanProperty(value);\n        }\n\n        constructor(...args: any[]) {\n            // tslint:disable-next-line\n            super(...args);\n        }\n    };\n}\n","import { ElementRef } from '@angular/core';\n\nimport { Constructor } from './constructor';\n\n\nexport interface CanColor {\n    color: ThemePalette;\n}\n\n/** @docs-private */\nexport type CanColorCtor = Constructor<CanColor>;\n\nexport interface HasElementRef {\n    _elementRef: ElementRef;\n}\n\nexport enum ThemePalette {\n    Primary = 'primary',\n    Second = 'second',\n    Error = 'error',\n    Default = 'second',\n    Empty = ''\n}\n\n/** Mixin to augment a directive with a `color` property. */\nexport function mixinColor<T extends Constructor<HasElementRef>>(\n    base: T,\n    defaultColor: ThemePalette = ThemePalette.Default\n): CanColorCtor & T {\n    return class extends base {\n\n        private _color: ThemePalette;\n\n        get color(): ThemePalette {\n            return this._color;\n        }\n\n        set color(value: ThemePalette) {\n            const colorPalette = value || defaultColor;\n\n            if (colorPalette !== this._color) {\n                if (this._color) {\n                    this._elementRef.nativeElement.classList.remove(`mc-${this._color}`);\n                }\n\n                if (colorPalette) {\n                    this._elementRef.nativeElement.classList.add(`mc-${colorPalette}`);\n                }\n\n                this._color = colorPalette;\n            }\n        }\n\n        constructor(...args: any[]) {\n            super(...args);\n\n            this.color = defaultColor;\n        }\n    };\n}\n\n","import { Constructor } from './constructor';\nimport { CanDisable } from './disabled';\n\n\nexport interface HasTabIndex {\n    tabIndex: number;\n}\n\nexport type HasTabIndexCtor = Constructor<HasTabIndex>;\n\n// Mixin to augment a directive with a `tabIndex` property.\nexport function mixinTabIndex<T extends Constructor<CanDisable>>(base: T, defaultTabIndex = 0)\n    : HasTabIndexCtor & T {\n    return class extends base {\n        private _tabIndex: number = defaultTabIndex;\n\n        get tabIndex(): number {\n            return this.disabled ? -1 : this._tabIndex;\n        }\n\n        set tabIndex(value: number) {\n            this._tabIndex = value != null ? value : defaultTabIndex;\n        }\n\n        constructor(...args: any[]) {\n            super(...args);\n        }\n    };\n}\n","import { FormControl, FormGroupDirective, NgControl, NgForm } from '@angular/forms';\nimport { Subject } from 'rxjs';\n\nimport { ErrorStateMatcher } from '../error/error-options';\n\nimport { Constructor } from './constructor';\n\n\n/** @docs-private */\nexport interface CanUpdateErrorState {\n\n    readonly stateChanges: Subject<void>;\n\n    errorState: boolean;\n    errorStateMatcher: ErrorStateMatcher;\n\n    updateErrorState();\n}\n\n/** @docs-private */\nexport type CanUpdateErrorStateCtor = Constructor<CanUpdateErrorState>;\n\n/** @docs-private */\nexport interface HasErrorState {\n    _parentFormGroup: FormGroupDirective;\n    _parentForm: NgForm;\n    _defaultErrorStateMatcher: ErrorStateMatcher;\n    ngControl: NgControl;\n}\n\n/**\n * Mixin to augment a directive with updateErrorState method.\n * For component with `errorState` and need to update `errorState`.\n */\nexport function mixinErrorState<T extends Constructor<HasErrorState>>(base: T): CanUpdateErrorStateCtor & T {\n    return class extends base {\n        /** Whether the component is in an error state. */\n        errorState: boolean = false;\n\n        /**\n         * Stream that emits whenever the state of the input changes such that the wrapping\n         * `MatFormField` needs to run change detection.\n         */\n        readonly stateChanges = new Subject<void>();\n\n        errorStateMatcher: ErrorStateMatcher;\n\n        constructor(...args: any[]) {\n            super(...args);\n        }\n\n        updateErrorState() {\n            const oldState = this.errorState;\n            const parent = this._parentFormGroup || this._parentForm;\n            const matcher = this.errorStateMatcher || this._defaultErrorStateMatcher;\n            const control = this.ngControl ? this.ngControl.control as FormControl : null;\n            const newState = matcher.isErrorState(control, parent);\n\n            if (newState !== oldState) {\n                this.errorState = newState;\n                this.stateChanges.next();\n            }\n        }\n    };\n}\n","import {\n    AfterViewChecked,\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    ElementRef,\n    EventEmitter,\n    Inject,\n    InjectionToken,\n    Input,\n    OnDestroy,\n    Optional,\n    Output,\n    QueryList,\n    ViewEncapsulation\n} from '@angular/core';\nimport { coerceBooleanProperty } from '@ptsecurity/cdk/coercion';\nimport { ENTER, SPACE } from '@ptsecurity/cdk/keycodes';\nimport { Subject } from 'rxjs';\n\nimport { McOptgroup } from './optgroup';\n\n\n/**\n * Option IDs need to be unique across components, so this counter exists outside of\n * the component definition.\n */\nlet _uniqueIdCounter = 0;\n\n/** Event object emitted by McOption when selected or deselected. */\nexport class McOptionSelectionChange {\n    constructor(\n        /** Reference to the option that emitted the event. */\n        public source: McOption,\n        /** Whether the change in the option's value was a result of a user action. */\n        public isUserInput = false) {\n    }\n}\n\n/**\n * Describes a parent component that manages a list of options.\n * Contains properties that the options can inherit.\n * @docs-private\n */\nexport interface IMcOptionParentComponent {\n    disableRipple?: boolean;\n    multiple?: boolean;\n}\n\n/**\n * Injection token used to provide the parent component to options.\n */\nexport const MC_OPTION_PARENT_COMPONENT =\n    new InjectionToken<IMcOptionParentComponent>('MC_OPTION_PARENT_COMPONENT');\n\n/**\n * Single option inside of a `<mat-select>` element.\n */\n@Component({\n    selector: 'mc-option',\n    exportAs: 'mcOption',\n    host: {\n        '[attr.tabindex]': '_getTabIndex()',\n        '[class.mc-selected]': 'selected',\n        '[class.mc-option-multiple]': 'multiple',\n        '[class.mc-active]': 'active',\n        '[id]': 'id',\n        '[class.mc-disabled]': 'disabled',\n        '(click)': '_selectViaInteraction()',\n        '(keydown)': '_handleKeydown($event)',\n        class: 'mc-option'\n    },\n    styleUrls: ['option.css'],\n    templateUrl: 'option.html',\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class McOption implements AfterViewChecked, OnDestroy {\n    /** Whether the wrapping component is in multiple selection mode. */\n    get multiple() {\n        return this._parent && this._parent.multiple;\n    }\n\n    /** The unique ID of the option. */\n    get id(): string {\n        return this._id;\n    }\n\n    /** Whether or not the option is currently selected. */\n    get selected(): boolean {\n        return this._selected;\n    }\n\n    /** The form value of the option. */\n    @Input() value: any;\n\n    /** Whether the option is disabled. */\n    @Input()\n    get disabled() {\n        return (this.group && this.group.disabled) || this._disabled;\n    }\n\n    set disabled(value: any) {\n        this._disabled = coerceBooleanProperty(value);\n    }\n\n    /** Whether ripples for the option are disabled. */\n    get disableRipple() {\n        return this._parent && this._parent.disableRipple;\n    }\n\n    /** Event emitted when the option is selected or deselected. */\n        // tslint:disable-next-line:no-output-on-prefix\n    @Output() readonly onSelectionChange = new EventEmitter<McOptionSelectionChange>();\n\n    /** Emits when the state of the option changes and any parents have to be notified. */\n    readonly _stateChanges = new Subject<void>();\n\n    private _selected = false;\n    private _active = false;\n    private _disabled = false;\n    private readonly _id = `mc-option-${_uniqueIdCounter++}`;\n    private _mostRecentViewValue = '';\n\n    constructor(\n        private readonly _element: ElementRef,\n        private readonly _changeDetectorRef: ChangeDetectorRef,\n        @Optional() @Inject(MC_OPTION_PARENT_COMPONENT) private readonly _parent: IMcOptionParentComponent,\n        @Optional() readonly group: McOptgroup) {\n    }\n\n    /**\n     * Whether or not the option is currently active and ready to be selected.\n     * An active option displays styles as if it is focused, but the\n     * focus is actually retained somewhere else. This comes in handy\n     * for components like autocomplete where focus must remain on the input.\n     */\n    get active(): boolean {\n        return this._active;\n    }\n\n    /**\n     * The displayed value of the option. It is necessary to show the selected option in the\n     * select's trigger.\n     */\n    get viewValue(): string {\n        // TODO(kara): Add input property alternative for node envs.\n        return (this._getHostElement().textContent || '').trim();\n    }\n\n    /** Selects the option. */\n    select(): void {\n        if (!this._selected) {\n            this._selected = true;\n            this._changeDetectorRef.markForCheck();\n            this._emitSelectionChangeEvent();\n        }\n    }\n\n    /** Deselects the option. */\n    deselect(): void {\n        if (this._selected) {\n            this._selected = false;\n            this._changeDetectorRef.markForCheck();\n            this._emitSelectionChangeEvent();\n        }\n    }\n\n    /** Sets focus onto this option. */\n    focus(): void {\n        const element = this._getHostElement();\n\n        if (typeof element.focus === 'function') {\n            element.focus();\n        }\n    }\n\n    /**\n     * This method sets display styles on the option to make it appear\n     * active. This is used by the ActiveDescendantKeyManager so key\n     * events will display the proper options as active on arrow key events.\n     */\n    setActiveStyles(): void {\n        if (!this._active) {\n            this._active = true;\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n\n    /**\n     * This method removes display styles on the option that made it appear\n     * active. This is used by the ActiveDescendantKeyManager so key\n     * events will display the proper options as active on arrow key events.\n     */\n    setInactiveStyles(): void {\n        if (this._active) {\n            this._active = false;\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n\n    /** Gets the label to be used when determining whether the option should be focused. */\n    getLabel(): string {\n        return this.viewValue;\n    }\n\n    /** Ensures the option is selected when activated from the keyboard. */\n    _handleKeydown(event: KeyboardEvent): void {\n        // tslint:disable-next-line\n        if (event.keyCode === ENTER || event.keyCode === SPACE) {\n            this._selectViaInteraction();\n\n            // Prevent the page from scrolling down and form submits.\n            event.preventDefault();\n        }\n    }\n\n    /**\n     * `Selects the option while indicating the selection came from the user. Used to\n     * determine if the select's view -> model callback should be invoked.`\n     */\n    _selectViaInteraction(): void {\n        if (!this.disabled) {\n            this._selected = this.multiple ? !this._selected : true;\n            this._changeDetectorRef.markForCheck();\n            this._emitSelectionChangeEvent(true);\n        }\n    }\n\n    /** Returns the correct tabindex for the option depending on disabled state. */\n    _getTabIndex(): string {\n        return this.disabled ? '-1' : '0';\n    }\n\n    /** Gets the host DOM element. */\n    _getHostElement(): HTMLElement {\n        return this._element.nativeElement;\n    }\n\n    ngAfterViewChecked() {\n        // Since parent components could be using the option's label to display the selected values\n        // (e.g. `mat-select`) and they don't have a way of knowing if the option's label has changed\n        // we have to check for changes in the DOM ourselves and dispatch an event. These checks are\n        // relatively cheap, however we still limit them only to selected options in order to avoid\n        // hitting the DOM too often.\n        if (this._selected) {\n            const viewValue = this.viewValue;\n\n            if (viewValue !== this._mostRecentViewValue) {\n                this._mostRecentViewValue = viewValue;\n                this._stateChanges.next();\n            }\n        }\n    }\n\n    ngOnDestroy() {\n        this._stateChanges.complete();\n    }\n\n    /** Emits the selection change event. */\n    private _emitSelectionChangeEvent(isUserInput = false): void {\n        this.onSelectionChange.emit(new McOptionSelectionChange(this, isUserInput));\n    }\n}\n\n/**\n * Counts the amount of option group labels that precede the specified option.\n * @param optionIndex Index of the option at which to start counting.\n * @param options Flat list of all of the options.\n * @param optionGroups Flat list of all of the option groups.\n * @docs-private\n */\nexport function _countGroupLabelsBeforeOption(\n    optionIndex: number, options: QueryList<McOption>,\n    optionGroups: QueryList<McOptgroup>\n): number {\n\n    if (optionGroups.length) {\n        const optionsArray = options.toArray();\n        const groups = optionGroups.toArray();\n\n        let groupCounter = 0;\n\n        for (let i = 0; i < optionIndex + 1; i++) {\n            if (optionsArray[i].group && optionsArray[i].group === groups[groupCounter]) {\n                groupCounter++;\n            }\n        }\n\n        return groupCounter;\n    }\n\n    return 0;\n}\n\n/**\n * Determines the position to which to scroll a panel in order for an option to be into view.\n * @param optionIndex Index of the option to be scrolled into the view.\n * @param optionHeight Height of the options.\n * @param currentScrollPosition Current scroll position of the panel.\n * @param panelHeight Height of the panel.\n * @docs-private\n */\nexport function _getOptionScrollPosition(\n    optionIndex: number,\n    optionHeight: number,\n    currentScrollPosition: number,\n    panelHeight: number\n): number {\n    const optionOffset = optionIndex * optionHeight;\n\n    if (optionOffset < currentScrollPosition) { return optionOffset; }\n\n    if (optionOffset + optionHeight > currentScrollPosition + panelHeight) {\n        return Math.max(0, optionOffset - panelHeight + optionHeight);\n    }\n\n    return currentScrollPosition;\n}\n\n","import { ConnectionPositionPair } from '@ptsecurity/cdk/overlay';\n\n\nexport const POSITION_MAP: { [key: string]: ConnectionPositionPair } = {\n    top         : {\n        originX : 'center',\n        originY : 'top',\n        overlayX: 'center',\n        overlayY: 'bottom'\n    },\n    topCenter   : {\n        originX : 'center',\n        originY : 'top',\n        overlayX: 'center',\n        overlayY: 'bottom',\n        offsetX : undefined,\n        offsetY : undefined\n    },\n    topLeft     : {\n        originX : 'start',\n        originY : 'top',\n        overlayX: 'start',\n        overlayY: 'bottom',\n        offsetX : undefined,\n        offsetY : undefined\n    },\n    topRight    : {\n        originX : 'end',\n        originY : 'top',\n        overlayX: 'end',\n        overlayY: 'bottom',\n        offsetX : undefined,\n        offsetY : undefined\n    },\n    right       : {\n        originX : 'end',\n        originY : 'center',\n        overlayX: 'start',\n        overlayY: 'center'\n    },\n    rightTop    : {\n        originX : 'end',\n        originY : 'top',\n        overlayX: 'start',\n        overlayY: 'top',\n        offsetX : undefined,\n        offsetY : undefined\n    },\n    rightBottom : {\n        originX : 'end',\n        originY : 'bottom',\n        overlayX: 'start',\n        overlayY: 'bottom',\n        offsetX : undefined,\n        offsetY : undefined\n    },\n    bottom      : {\n        originX : 'center',\n        originY : 'bottom',\n        overlayX: 'center',\n        overlayY: 'top'\n    },\n    bottomCenter: {\n        originX : 'center',\n        originY : 'bottom',\n        overlayX: 'center',\n        overlayY: 'top'\n    },\n    bottomLeft  : {\n        originX : 'start',\n        originY : 'bottom',\n        overlayX: 'start',\n        overlayY: 'top'\n    },\n    bottomRight : {\n        originX : 'end',\n        originY : 'bottom',\n        overlayX: 'end',\n        overlayY: 'top'\n    },\n    left        : {\n        originX : 'start',\n        originY : 'center',\n        overlayX: 'end',\n        overlayY: 'center'\n    },\n    leftTop     : {\n        originX : 'start',\n        originY : 'top',\n        overlayX: 'end',\n        overlayY: 'top'\n    },\n    leftBottom  : {\n        originX : 'start',\n        originY : 'bottom',\n        overlayX: 'end',\n        overlayY: 'bottom'\n    }\n};\n\nexport const DEFAULT_4_POSITIONS = _objectValues([\n    POSITION_MAP.top, POSITION_MAP.right, POSITION_MAP.bottom, POSITION_MAP.left\n]);\n\nfunction arrayMap<T, S>(array: T[], iteratee: (item: T, index: number, arr: T[]) => S): S[] {\n    let index = -1;\n    const length = array == null ? 0 : array.length;\n    const result = Array(length);\n\n    while (++index < length) {\n        result[ index ] = iteratee(array[ index ], index, array);\n    }\n\n    return result;\n}\nfunction baseValues<T>(object: { [key: string]: T } | T[], props: string[]): T[] {\n    return arrayMap(props,  (key) => {\n        return object[ key ];\n    });\n}\nfunction _objectValues<T>(object: { [key: string]: T } | T[]): T[] {\n    return object == null ? [] : baseValues(object, Object.keys(object));\n}\n","export function getMcFormFieldMissingControlError(): Error {\n  return Error('mc-form-field must contain a McFormFieldControl.');\n}\n","export function getMcInputUnsupportedTypeError(inputType: string): Error {\n    return Error(`Input type \"${inputType}\" isn't supported by mcInput.`);\n}\n","/** @docs-private */\nexport function createMissingDateImplError(provider: string) {\n    return Error(\n        `McDatepicker: No provider found for ${provider}. You must import one of the existing ` +\n        `modules at your application root or provide a custom implementation or use exists ones.`);\n}\n","export function throwMcDropdownMissingError() {\n    throw Error(`mcDropdownTriggerFor: must pass in an mc-dropdown instance.\n    Example:\n      <mc-dropdown #dropdown=\"mcDropdown\"></mc-dropdown>\n      <button [mcDropdownTriggerFor]=\"dropdown\"></button>`);\n}\n\n/**\n * Throws an exception for the case when dropdown's x-position value isn't valid.\n * In other words, it doesn't match 'before' or 'after'.\n * @docs-private\n */\nexport function throwMcDropdownInvalidPositionX() {\n    throw Error(`xPosition value must be either 'before' or after'.\n      Example: <mc-dropdown xPosition=\"before\" #dropdown=\"mcDropdown\"></mc-dropdown>`);\n}\n\n/**\n * Throws an exception for the case when dropdown's y-position value isn't valid.\n * In other words, it doesn't match 'above' or 'below'.\n * @docs-private\n */\nexport function throwMcDropdownInvalidPositionY() {\n    throw Error(`yPosition value must be either 'above' or below'.\n      Example: <mc-dropdown yPosition=\"above\" #dropdown=\"mcDropdown\"></mc-dropdown>`);\n}\n","/**\n * Returns an exception to be thrown when attempting to change a select's `multiple` option\n * after initialization.\n * @docs-private\n */\nexport function getMcSelectDynamicMultipleError(): Error {\n    return Error('Cannot change `multiple` mode of select after initialization.');\n}\n\n/**\n * Returns an exception to be thrown when attempting to assign a non-array value to a select\n * in `multiple` mode. Note that `undefined` and `null` are still valid values to allow for\n * resetting the value.\n * @docs-private\n */\nexport function getMcSelectNonArrayValueError(): Error {\n    return Error('Value must be an array in multiple-selection mode.');\n}\n\n/**\n * Returns an exception to be thrown when assigning a non-function value to the comparator\n * used to determine if a value corresponds to an option. Note that whether the function\n * actually takes two values and returns a boolean is not checked.\n */\nexport function getMcSelectNonFunctionValueError(): Error {\n    return Error('`compareWith` must be a function.');\n}\n","import { NgModule, Directive, ElementRef, QueryList } from '@angular/core';\n\n\n/**\n * Shared directive to count lines inside a text area, such as a list item.\n * Line elements can be extracted with a @ContentChildren(McLine) query, then\n * counted by checking the query list's length.\n */\n@Directive({\n    selector: '[mc-line], [mcLine]',\n    host: { class: 'mc-line' }\n})\nexport class McLine {}\n\n/**\n * Helper that takes a query list of lines and sets the correct class on the host.\n * @docs-private\n */\nexport class McLineSetter {\n    constructor(private _lines: QueryList<McLine>, private _element: ElementRef) {\n        this._setLineClass(this._lines.length);\n\n        this._lines.changes.subscribe(() => {\n            this._setLineClass(this._lines.length);\n        });\n    }\n\n    private _setLineClass(count: number): void {\n        this._resetClasses();\n        if (count === 2 || count === 3) {\n            this._setClass(`mc-${count}-line`, true);\n        } else if (count > 3) {\n            this._setClass(`mc-multi-line`, true);\n        }\n    }\n\n    private _resetClasses(): void {\n        this._setClass('mc-2-line', false);\n        this._setClass('mc-3-line', false);\n        this._setClass('mc-multi-line', false);\n    }\n\n    private _setClass(className: string, isAdd: boolean): void {\n        if (isAdd) {\n            this._element.nativeElement.classList.add(className);\n        } else {\n            this._element.nativeElement.classList.remove(className);\n        }\n    }\n}\n\n@NgModule({\n    imports: [],\n    exports: [McLine],\n    declarations: [McLine]\n})\nexport class McLineModule {}\n","import { Injectable } from '@angular/core';\nimport { FormGroupDirective, NgForm, FormControl } from '@angular/forms';\n\n\n/** Error state matcher that matches when a control is invalid and dirty. */\n@Injectable()\nexport class ShowOnDirtyErrorStateMatcher implements ErrorStateMatcher {\n    isErrorState(control: FormControl | null, form: FormGroupDirective | NgForm | null): boolean {\n        return !!(control && control.invalid && (control.dirty || (form && form.submitted)));\n    }\n}\n\n/** Provider that defines how form controls behave with regards to displaying error messages. */\n@Injectable({ providedIn: 'root' })\nexport class ErrorStateMatcher {\n    isErrorState(control: FormControl | null, form: FormGroupDirective | NgForm | null): boolean {\n        return !!(control && control.invalid && (control.touched || (form && form.submitted)));\n    }\n}\n","import { Component, ViewEncapsulation, Input, ChangeDetectionStrategy } from '@angular/core';\n\n\nexport type McPseudoCheckboxState = 'unchecked' | 'checked' | 'indeterminate';\n\n/**\n * Component that shows a simplified checkbox without including any kind of \"real\" checkbox.\n * Meant to be used when the checkbox is purely decorative and a large number of them will be\n * included, such as for the options in a multi-select. Uses no SVGs or complex animations.\n * Note that theming is meant to be handled by the parent element, e.g.\n * `mc-primary .mc-pseudo-checkbox`.\n *\n * Note that this component will be completely invisible to screen-reader users. This is *not*\n * interchangeable with `<mc-checkbox>` and should *not* be used if the user would directly\n * interact with the checkbox. The pseudo-checkbox should only be used as an implementation detail\n * of more complex components that appropriately handle selected / checked state.\n * @docs-private\n */\n@Component({\n    encapsulation: ViewEncapsulation.None,\n    preserveWhitespaces: false,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    selector: 'mc-pseudo-checkbox',\n    styleUrls: ['pseudo-checkbox.css'],\n    templateUrl: 'pseudo-checkbox.partial.html',\n    host: {\n        class: 'mc-pseudo-checkbox',\n        '[class.mc-indeterminate]': 'state === \"indeterminate\"',\n        '[class.mc-checked]': 'state === \"checked\"',\n        '[class.mc-disabled]': 'disabled'\n    }\n})\nexport class McPseudoCheckbox {\n    @Input() state: McPseudoCheckboxState = 'unchecked';\n\n    @Input() disabled: boolean = false;\n}\n","import { NgModule } from '@angular/core';\n\nimport { McPseudoCheckbox } from './pseudo-checkbox/pseudo-checkbox';\n\n\n@NgModule({\n    exports: [McPseudoCheckbox],\n    declarations: [McPseudoCheckbox]\n})\nexport class McPseudoCheckboxModule {}\n\n\nexport * from './pseudo-checkbox/pseudo-checkbox';\n","import { DOCUMENT } from '@angular/common';\nimport { Inject, Injectable } from '@angular/core';\n\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class McMeasureScrollbarService {\n\n    get scrollBarWidth(): number {\n        if (this._scrollbarWidth) {\n            return this._scrollbarWidth;\n        }\n        this.initScrollBarWidth();\n\n        return this._scrollbarWidth;\n    }\n\n    private _scrollbarWidth: number;\n    private scrollbarMeasure = {\n        position: 'absolute',\n        top: '-9999px',\n        width: '50px',\n        height: '50px',\n        overflow: 'scroll'\n    };\n\n    constructor(\n        @Inject(DOCUMENT) private document: any\n    ) {\n        this.initScrollBarWidth();\n    }\n\n    initScrollBarWidth() {\n        const scrollDiv = this.document.createElement('div');\n\n        // tslint:disable-next-line\n        for (const scrollProp in this.scrollbarMeasure) {\n            if (this.scrollbarMeasure.hasOwnProperty(scrollProp)) {\n                scrollDiv.style[scrollProp] = this.scrollbarMeasure[scrollProp];\n            }\n        }\n\n        this.document.body.appendChild(scrollDiv);\n\n        const width = scrollDiv.offsetWidth - scrollDiv.clientWidth;\n\n        this.document.body.removeChild(scrollDiv);\n        this._scrollbarWidth = width;\n    }\n}\n","import { Component, ViewEncapsulation, Input, ChangeDetectionStrategy } from '@angular/core';\n\nimport { mixinDisabled, CanDisable, CanDisableCtor } from '../common-behaviors/index';\n\n\n// Boilerplate for applying mixins to McOptgroup.\n/** @docs-private */\nexport class McOptgroupBase {}\n\nexport const _McOptgroupMixinBase: CanDisableCtor & typeof McOptgroupBase = mixinDisabled(McOptgroupBase);\n\n// Counter for unique group ids.\nlet _uniqueOptgroupIdCounter = 0;\n\n/**\n * Component that is used to group instances of `mc-option`.\n */\n@Component({\n    selector: 'mc-optgroup',\n    exportAs: 'mcOptgroup',\n    templateUrl: 'optgroup.html',\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    inputs: ['disabled'],\n    styleUrls: ['optgroup.css'],\n    host: {\n        class: 'mc-optgroup',\n        role: 'group',\n        '[class.mc-optgroup-disabled]': 'disabled',\n        '[attr.aria-disabled]': 'disabled.toString()',\n        '[attr.aria-labelledby]': '_labelId'\n    }\n})\nexport class McOptgroup extends _McOptgroupMixinBase implements CanDisable {\n    /** Label for the option group. */\n    @Input() label: string;\n\n    /** Unique id for the underlying label. */\n    _labelId: string = `mc-optgroup-label-${_uniqueOptgroupIdCounter++}`;\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { McPseudoCheckboxModule } from '../selection/index';\n\nimport { McOptgroup } from './optgroup';\nimport { McOption } from './option';\n\n\n@NgModule({\n    imports: [CommonModule, McPseudoCheckboxModule],\n    exports: [McOption, McOptgroup],\n    declarations: [McOption, McOptgroup]\n})\nexport class McOptionModule {}\n\n\nexport * from './option';\nexport * from './optgroup';\n","import { InjectionToken } from '@angular/core';\n\n\n/** InjectionToken that can be used to specify the global label options. */\nexport const MC_LABEL_GLOBAL_OPTIONS =\n    new InjectionToken<LabelOptions>('mc-label-global-options');\n\n/** Type for the available floatLabel values. */\nexport type FloatLabelType = 'always' | 'never' | 'auto';\n\n/** Configurable options for floating labels. */\nexport interface LabelOptions {\n    /**\n     * Whether the label should float `always`, `never`, or `auto` (only when necessary).\n     * Default behavior is assumed to be `auto`.\n     */\n    float?: FloatLabelType;\n}\n","import {\n    animate,\n    state,\n    style,\n    transition,\n    trigger,\n    AnimationTriggerMetadata,\n} from '@angular/animations';\n\n\nexport const fadeAnimation: AnimationTriggerMetadata =  trigger('fadeAnimation', [\n    state('void', style({ opacity: 0 })),\n    state('true', style({ opacity: 1 })),\n    state('false', style({ opacity: 0 })),\n    transition('* => true', animate('150ms cubic-bezier(0.0, 0.0, 0.2, 1)')),\n    transition('* => void', animate('150ms cubic-bezier(0.4, 0.0, 1, 1)')),\n]);\n","import {\n    Attribute,\n    ChangeDetectionStrategy,\n    Component,\n    Directive,\n    ElementRef,\n    ViewEncapsulation\n} from '@angular/core';\n\nimport { mixinColor, CanColor, CanColorCtor, ThemePalette } from '@ptsecurity/mosaic/core';\n\n\n@Directive({\n    selector: '[mc-icon]',\n    host: { class: 'mc mc-icon' }\n})\nexport class McIconCSSStyler {}\n\n\nexport class McIconBase {\n    constructor(public _elementRef: ElementRef) {}\n}\n\nexport const _McIconMixinBase: CanColorCtor & typeof McIconBase = mixinColor(McIconBase, ThemePalette.Empty);\n\n\n@Component({\n    selector: `[mc-icon]`,\n    template: '<ng-content></ng-content>',\n    styleUrls: ['./icon.css'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n    inputs: ['color']\n})\nexport class McIcon extends _McIconMixinBase implements CanColor {\n    constructor(elementRef: ElementRef, @Attribute('mc-icon') iconName: string) {\n        super(elementRef);\n\n        elementRef.nativeElement.classList.add(iconName);\n    }\n\n    _getHostElement() {\n        return this._elementRef.nativeElement;\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { A11yModule } from '@ptsecurity/cdk/a11y';\nimport { PlatformModule } from '@ptsecurity/cdk/platform';\n\nimport {\n    McIcon,\n    McIconCSSStyler\n} from './icon.component';\n\n\n@NgModule({\n    imports: [\n        CommonModule,\n        A11yModule,\n        PlatformModule\n    ],\n    exports: [\n        McIcon,\n        McIconCSSStyler\n    ],\n    declarations: [\n        McIcon,\n        McIconCSSStyler\n    ]\n})\nexport class McIconModule {}\n"],"names":["position","isLtr","originPosition","originX","originY","getMcTooltipInvalidPositionError","_a","this","invertPosition","main","fallback","x","y","McTooltip","prototype","getOverlayPosition","overlayPosition","mcPlacement","direction","value","overlayX","overlayY","newX","newY","tslib_1.__decorate","Output","Input","HostBinding","Directive","selector","exportAs","host","(keydown)","(touchend)","tslib_1.__param","Inject","MC_TOOLTIP_SCROLL_STRATEGY","Optional","tslib_1.__metadata","Overlay","ElementRef","NgZone","ScrollDispatcher","ViewContainerRef","Object","Directionality","McToolTipModule","NgModule","declarations","McTooltipComponent","exports","imports","CommonModule","OverlayModule","providers","MC_TOOLTIP_SCROLL_STRATEGY_FACTORY_PROVIDER","entryComponents","VERSION","Version","SELECT_PANEL_PADDING_X","styles","inputs","encapsulation","ViewEncapsulation","None","changeDetection","ChangeDetectionStrategy","OnPush","[attr.id]","[attr.tabindex]","class","[class.mc-disabled]","[class.mc-select-invalid]","[class.mc-select-required]","(focus)","(blur)","(window:resize)","animations","mcSelectAnimations","transformPanel","fadeInContent","provide","McFormFieldControl","useExisting","McSelect_1","MC_OPTION_PARENT_COMPONENT","Self","Attribute","MC_SELECT_SCROLL_STRATEGY","ViewportRuler","ChangeDetectorRef","Renderer2","ErrorStateMatcher","NgForm","FormGroupDirective","McFormField","NgControl","String","McSelect","_McSelectMixinBase","McSelectModule","McOptionModule","McIconModule","McTagModule","McFormFieldModule","McSelectTrigger","MC_SELECT_SCROLL_STRATEGY_PROVIDER","McSplitterComponent","elementRef","ngZone","renderer","areas","_disabled","_gutterSize","isDragging","areaPositionDivider","listeners","defineProperty","get","_direction","set","disabled","coerceBooleanProperty","gutterSize","size","coerceNumberProperty","addArea","area","index","length","order","getSize","setOrder","push","initialSize","ngOnInit","setStyle","isVertical","onMouseDown","event","leftAreaIndex","rightAreaIndex","_this","leftArea","rightArea","startPoint","screenX","screenY","forEach","item","disableFlex","setSize","runOutsideAngular","listen","onMouseUp","e","onMouseMove","removeArea","indexToRemove","some","splice","endPoint","offset","newLeftAreaSize","newRightAreaSize","minLeftAreaSize","getMinSize","minRightAreaSize","rightAreaOffset","unsubscribe","pop","property","nativeElement","Component","preserveWhitespaces","template","McGutterDirective","_order","_size","getCursor","getState","coerceCssPixelValue","setAttr","state","Error","attribute","setAttribute","McSplitterAreaDirective","splitter","removeStyle","ngOnDestroy","sz","getSizeProperty","getOffsetSizeProperty","getComputedStyle","parseFloat","getMinSizeProperty","style","McSplitterModule","nextUniqueId","McToggleBase","_elementRef","_McToggleMixinBase","mixinTabIndex","mixinColor","mixinDisabled","ThemePalette","Primary","McToggleChange","McToggleComponent","_super","_focusMonitor","_changeDetectorRef","tabIndex","call","labelPosition","ariaLabel","ariaLabelledby","_uniqueId","id","name","_checked","change","EventEmitter","_onTouchedCallback","_onChangeCallback","_","parseInt","monitor","tslib_1.__extends","McToggleComponent_1","markForCheck","stopMonitoring","focus","focusVia","_inputElement","_getAriaChecked","checked","_onInteractionEvent","stopPropagation","_onLabelTextChange","_onInputClick","_updateModelValue","_emitChangeEvent","writeValue","registerOnChange","fn","registerOnTouched","setDisabledState","isDisabled","source","emit","ViewChild","NG_VALUE_ACCESSOR","forwardRef","multi","[id]","[class.mc-toggle_off]","trigger","left","transition","animate","FocusMonitor","McToggleModule","A11yModule","McCommonModule","cdr","prefix","positions","DEFAULT_4_POSITIONS","slice","classMap","mcVisibleChange","mcMouseEnterDelay","mcMouseLeaveDelay","_mcTrigger","_mcPlacement","_mcVisible","BehaviorSubject","onHideSubject","Subject","closeOnInteraction","availablePositions","POSITION_MAP","$visible","asObservable","_mcTitle","isTitleString","TemplateRef","unshift","visible","next","show","hideTid","clearTimeout","isContentEmpty","mcTrigger","showTid","setTimeout","mcVisible","hide","setClassMap","mcTitle","afterHidden","handleBodyInteraction","outputs","fadeAnimation","(body:click)","InjectionToken","deps","useFactory","mcTooltipScrollStrategyFactory","overlay","scrollDispatcher","hostView","scrollStrategy","isTooltipOpen","isDynamicTooltip","parentDisabled","$unsubscribe","manualListeners","Map","destroyed","title","updateCompValue","_mcMouseEnterDelay","_mcMouseLeaveDelay","_mcTooltipClass","tooltip","externalValue","createOverlay","overlayRef","strategy","flexibleConnectedTo","withTransformOriginOn","withFlexibleDimensions","withViewportMargin","withPositions","scrollableAncestors","getAncestorScrollContainers","withScrollableContainers","positionChanges","pipe","takeUntil","subscribe","onPositionChange","scrollableViewProperties","isOverlayClipped","run","create","positionStrategy","panelClass","updatePosition","detachments","detach","hasAttached","$event","updatedPlacement","keys","key","connectionPair","handlePositioningUpdate","pos","overlayElement","clientHeight","element","currentContainer","top","split","initElementRefListeners","dispose","listener","removeEventListener","clear","complete","handleKeydown","keyCode","ESCAPE","handleTouchend","addEventListener","portal","ComponentPortal","attach","instance","distinctUntilChanged","data","getConfig","origin","getOrigin","tslib_1.__assign","Math","max","minHeight","textarea","scrollHeight","diff","McTextarea","McTextarea_1","[class.mc-textarea-resizable]","[attr.placeholder]","[disabled]","[required]","MC_TEXTAREA_VALUE_ACCESSOR","McTextareaMixinBase","McTextareaModule","FormsModule","TimeParts","TimeFormats","TIMEFORMAT_PLACEHOLDERS","HHmmss","HHmm","DEFAULT_TIME_FORMAT","HOURS_MINUTES_SECONDS_REGEXP","RegExp","HOURS_MINUTES_REGEXP","HOURS_ONLY_REGEXP","uniqueComponentIdSuffix","validatorOnChange","noop","validator","McTimepickerBase","_defaultErrorStateMatcher","_parentForm","_parentFormGroup","ngControl","McTimepickerMixinBase","mixinErrorState","ɵ1","validate","c","registerOnValidatorChange","McTimepicker","inputValueAccessor","focused","stateChanges","controlType","uid","_minTime","_maxTime","previousNativeValue","onChange","placeholder","valueAccessor","Validators","compose","parseValidator","minTimeValidator","maxTimeValidator","McTimepicker_1","_id","_required","applyInputChanges","_timeFormat","formatValue","map","timeFormatKey","indexOf","minValue","minDateTime","getDateFromTimeString","undefined","maxValue","maxDateTime","ngOnChanges","ngDoCheck","updateErrorState","dirtyCheckNativeValue","focusChanged","isFocused","onTouched","onBlur","onPaste","preventDefault","clipboardUserInput","clipboardData","getData","onInput","initialCursorStart","selectionStart","initialCursorEnd","selectionEnd","isAutocompleteTriggered","getParsedTimeParts","hoursOnly","hoursAndMinutes","hoursAndMinutesAndSeconds","doTimestringReformat","errors","createSelectionOfTimeComponentInInput","isBadInput","onContainerClick","setProperty","getTimeStringFromDate","timeFormat","onKeyDown","getKeyCode","upDownTimeByArrowKeys","switchSelectionBetweenTimeparts","newValue","validity","badInput","applyParams","changedTime","timeToApply","currentDateTimeInput","control","updateValueAndValidity","result","cursorPos","modifiedTimePart","getTimeEditMetrics","incrementTime","decrementTime","getCursorPositionOfPrevTimePartStart","getCursorPositionOfNextTimePartStart","code","newEditParams","cursorStartPosition","cursorEndPosition","dateVal","whatToIncrement","seconds","getTimeDigitsFromDate","hours","minutes","getDateFromTimeDigits","whatToDecrement","timeString","timeDevider","nextDividerPos","cursorPosition","minutesIndex","hoursIndex","secondsIndex","tempVal","getNumberWithLeadingZero","getHours","getMinutes","getSeconds","match","trim","Number","resultDate","Date","isNaN","getTime","digit","mcTimepickerParse","text","isTimeLowerThenMin","mcTimepickerLowerThenMintime","isTimeGreaterThenMax","mcTimepickerHigherThenMaxtime","timeToCompare","[attr.time-format]","[attr.min-time]","[attr.max-time]","[attr.value]","(input)","(paste)","NG_VALIDATORS","useValue","MC_INPUT_VALUE_ACCESSOR","McTimepickerModule","PlatformModule","transform","minWidth","opacity","group","query","animateChild","MC_SELECT_SCROLL_STRATEGY_PROVIDER_FACTORY","McSelectChange","McSelectBase","_viewportRuler","_ngZone","_renderer","_dir","_parentFormField","_scrollStrategyFactory","_triggerFontSize","_optionIds","_transformOrigin","_panelDoneAnimating","_panelDoneAnimatingStream","_scrollStrategy","_offsetY","_positions","optionSelectionChanges","defer","options","merge","apply","option","onSelectionChange","onStable","take","switchMap","openedChange","_openedStream","filter","o","_closedStream","selectionChange","valueChange","hiddenItems","oneMoreText","_panelOpen","_scrollTop","_multiple","_uid","_destroy","_focused","_onChange","_onTouched","_compareWith","o1","o2","_placeholder","_selectionModel","getMcSelectDynamicMultipleError","getMcSelectNonFunctionValueError","_initializeSelection","_value","SelectionModel","multiple","panelOpen","overlayDir","offsetX","ngAfterContentInit","_initKeyManager","added","select","removed","deselect","changes","startWith","_resetOptions","ngAfterViewInit","tags","_calculateHiddenItems","toggle","close","open","_triggerRect","getBoundingClientRect","_keyManager","withHorizontalOrientation","_calculateOverlayPosition","_highlightCorrectOption","fontSize","_isRtl","_setSelectionByValue","selected","empty","selectedOptions","viewValue","reverse","join","isEmpty","_handleKeydown","_handleOpenKeydown","_handleClosedKeydown","_onFadeInDone","_onFocus","_onBlur","_onAttached","positionChange","detectChanges","_calculateOverlayOffsetX","panel","scrollTop","_getPanelTheme","color","_calculateOverlayScroll","selectedIndex","scrollBuffer","maxScroll","itemHeight","_getItemHeight","optionOffsetFromScrollTop","halfOptionHeight","optimalScrollPosition","min","onRemoveMatcherItem","visibleItems","totalItemsWidth","_getTotalItemsWidthInMatcher","totalVisibleItemsWidth","tag","offsetTop","offsetHeight","width","itemsCounter","querySelector","matcherList","itemsCounterShowed","matcherListWidth","matcherWidth","triggerClone","cloneNode","remove","appendChild","querySelectorAll","isArrowKey","DOWN_ARROW","UP_ARROW","LEFT_ARROW","RIGHT_ARROW","ENTER","SPACE","altKey","onKeydown","manager","HOME","END","setFirstItemActive","setLastItemActive","activeItem","A","ctrlKey","hasDeselectedOptions_1","previouslyFocusedIndex","activeItemIndex","shiftKey","_selectViaInteraction","Promise","resolve","then","Array","isArray","getMcSelectNonArrayValueError","currentValue","_selectValue","_sortValues","correspondingOption","setActiveItem","find","error","isDevMode","console","warn","ActiveDescendantKeyManager","withTypeAhead","withVerticalOrientation","tabOut","_scrollActiveOptionIntoView","changedOrDestroyed","_onSelect","isUserInput","_stateChanges","_setOptionIds","wasSelected","isSelected","_propagateChanges","options_1","toArray","sort","a","b","sortComparator","fallbackValue","valueToEmit","activeOptionIndex","labelCount","_countGroupLabelsBeforeOption","optionGroups","_getOptionScrollPosition","_getOptionIndex","reduce","current","items","_getItemCount","panelHeight","scrollContainerHeight","selectedOptionOffset","_calculateOverlayOffsetY","_checkOverlayWithinViewport","overlayRect","viewportSize","getViewportSize","isRtl","first","leftOverflow","rightOverflow","right","round","topSpaceAvailable","bottomSpaceAvailable","height","bottom","panelHeightTop","abs","totalPanelHeight","panelHeightBottom","_adjustPanelUp","_adjustPanelDown","_getOriginBasedOnOption","distanceBelowViewport","distanceAboveViewport","optionHeightAdjustment","ViewChildren","McTag","QueryList","CdkConnectedOverlay","ContentChildren","McOption","descendants","McOptgroup","ContentChild","Observable","McTabBody","PortalHostDirective","TemplatePortal","mcTabsAnimations","translateTab","McTabBodyPortal","componentFactoryResolver","viewContainerRef","centeringSub","Subscription","EMPTY","leavingSub","beforeCentering","isCenterPosition","bodyPosition","isCentering","content","afterLeavingCenter","ComponentFactoryResolver","CdkPortalOutlet","McTabLabelWrapperBase","mcTabLabelWrapperMixinBase","McTabLabelWrapper","getOffsetLeft","offsetLeft","getOffsetWidth","offsetWidth","[attr.aria-disabled]","McTabHeaderBase","McTabHeader","changeDetectorRef","viewportRuler","dir","showPaginationControls","disableScrollAfter","disableScrollBefore","selectFocusedIndex","indexFocused","_scrollDistance","selectedIndexChanged","_selectedIndex","coercedValue","keyManager","updateActiveItem","isValidIndex","focusIndex","v","getMaxScrollDistance","scrollDistanceChanged","checkScrollingControls","ngAfterContentChecked","tabLabelCount","labelWrappers","updatePagination","scrollToLabel","updateTabScrollPosition","dirChange","observableOf","resize","realign","FocusKeyManager","getLayoutDirection","withWrap","requestAnimationFrame","newFocusIndex","setTabFocus","onContentChanges","textContent","currentTextContent","zoneCallback","checkPaginationEnabled","tab","containerEl","tabListContainer","scrollLeft","scrollWidth","scrollDistance","translateX","tabList","scrollHeader","scrollDir","viewLength","labelIndex","selectedLabel","labelBeforePos","labelAfterPos","beforeVisiblePos","afterVisiblePos","isEnabled","[class.mc-tab-header__pagination-controls_enabled]","[class.mc-tab-header_rtl]","McLightTabsCssStyler","McAlignTabsCenterCssStyler","McAlignTabsEndCssStyler","McStretchTabsCssStyler","nextId","McTabChangeEvent","MC_TABS_CONFIG","McTabGroupBase","mcTabGroupMixinBase","McTabGroup","lightTabs","defaultConfig","headerPosition","selectedIndexChange","focusChange","animationDone","selectedTabChange","indexToSelect","tabBodyWrapperHeight","tabsSubscription","tabLabelSubscription","_dynamicHeight","lightTab","groupId","animationDuration","clampTabIndex","isFirstRun_1","createChangeEvent","tabs","isActive","subscribeToTabLabels","i","getTabLabelId","getTabContentId","setTabBodyWrapperHeight","tabHeight","wrapper","tabBodyWrapper","removeTabBodyWrapperHeight","handleClick","tabHeader","getTabIndex","McTab","[class.mc-tab-group_dynamic-height]","[class.mc-tab-group_inverted-header]","McTabNavBase","mcTabNavMixinBase","McTabNav","McTabLinkBase","mcTabLinkMixinBase","McTabLink","focusMonitor","[attr.aria-current]","[attr.tabIndex]","[class.mc-active]","McTabsModule","PortalModule","McTabLabel","McTabContent","McTagBase","_McTagMixinBase","_addClassModificatorForIcons","icons","contentChildren","iconElement","previousElementSibling","nextElementSibling","nextSibling","classList","add","previousSibling","firstIconElement","secondIconElement","McIcon","McTextareaBase","canGrow","lineHeight","freeRowsHeight","growObserver","fromEvent","growSubscription","grow","bind","paddingTop","paddingBottom","outerHeight","window","getGrowHeight","toString","McNavbar","McNavbarModule","McNavbarContainer","McNavbarTitle","McNavbarItem","McNavbarBrand","McNavbarLogo","idIterator","McProgressBarBase","_McProgressBarMixinBase","McProgressBar","mode","McProgressBarModule","McProgressSpinnerBase","_McProgressSpinnerMixinBase","McProgressSpinner","percentage","McProgressSpinnerModule","McRadioChange","McRadioGroupBase","_McRadioGroupMixinBase","MC_RADIO_GROUP_CONTROL_VALUE_ACCESSOR","McRadioGroup","_changeDetector","_name","_selected","_isInitialized","_labelPosition","controlValueAccessorChangeFn","updateRadioButtonNames","markRadiosForCheck","updateSelectedRadioFromValue","checkSelectedRadioButton","toBoolean","touch","emitChangeEvent","_radios","radio","isAlreadySelected","McRadioButton","role","McRadioButtonBase","_McRadioButtonMixinBase","radioGroup","_radioDispatcher","removeUniqueSelectionListener","newCheckedState","notify","newDisabledState","required","onInputClick","onInputChange","groupValueChanged","[class.mc-checked]","UniqueSelectionDispatcher","McRadioModule","McTreeNodeDef","McTreeNodeDef_1","CdkTreeNodeDef","McTreeNodePadding","arguments","_baseLeftPadding","_iconWidth","_indent","McTreeNodePadding_1","_withIcon","_paddingIndent","nodeLevel","_treeNode","_tree","treeControl","getLevel","level","_level","leftPadding","isExpandable","_setPadding","CdkTreeNodePadding","McTreeNodeOption","treeSelection","_hasFocus","McTreeNodeOption_1","setSelected","setFocusedOption","_getHeight","getClientRects","_handleFocus","_handleBlur","_handleClick","tabindex","[class.mc-selected]","[class.mc-focused]","[attr.aria-expanded]","[attr.aria-level]","(click)","CdkTreeNode","McTreeSelection","_McTreeSelectionBase","CdkTree","McTreeNavigationChange","McTreeSelectionChange","_differs","autoSelect","noUnselect","navigationChange","McTreeSelection_1","rawValue","log","_onKeyDown","withShift","withCtrl","collapse","expand","toggleFocusedOption","PAGE_UP","setPreviousPageItemActive","PAGE_DOWN","setNextPageItemActive","updateScrollSize","withScrollSize","floor","previousIndex_1","previousActiveItemIndex","activeIndex_1","_canDeselectLast","_emitNavigationEvent","focusedIndex","_isValidIndex","focusedOption","renderNodeChanges","dataDiffer","viewContainer","parentData","_dataDiffer","_nodeOutlet","arrayOfInstances","_embeddedViews","view","viewDef","def","nodes","node","nodeMatchedQueries","matchedQueryIds","nodeData","nodeIndex","reset","notifyOnChanges","CdkTreeNodeOutlet","[tabIndex]","IterableDiffers","MC_TREE_DIRECTIVES","McTreeModule","CdkTreeModule","McTreeFlattener","transformFunction","getChildren","_flattenNode","resultNodes","parentMap","flatNode","children","child","childParentMap","flattenNodes","structuredData","expandFlattenedNodes","results","currentExpand","isExpanded","McTreeFlatDataSource","treeFlattener","initialData","_flattenedData","_expandedData","_data","dataNodes","connect","collectionViewer","viewChange","expansionModel","disconnect","DataSource","McTreeNestedDataSource","CdkPortal","ctorParameters","McTabBase","mcTabMixinBase","textLabel","contentPortal","hasOwnProperty","explicitContent","implicitContent","read","onCentering","onCentered","dirChangeSubscription","computePositionAnimationState","positionIndex","computePositionFromOrigin","onTranslateTabStarted","toState","onTranslateTabComplete","fromState","McModalControlService","parentService","openModals","rootOpenModals","registeredMetaMap","rootRegisteredMetaMap","registerModal","modalRef","hasRegistered","afterOpenSubscription","afterOpen","afterCloseSubscription","afterClose","removeOpenModal","has","closeAll","afterAllClose","Injectable","SkipSelf","McModalRef","ModalUtil","document","lastPosition","listenDocumentClick","getLastClickPosition","clientX","clientY","ModalUtil$1","McModalComponent","cfr","mcMeasureScrollbarService","modalControl","changeDetector","mcModalType","mcZIndex","mcWidth","mcCloseByESC","_mcClosable","_mcMask","_mcMaskClosable","mcAfterOpen","mcAfterClose","mcOkType","_mcOkLoading","mcOnOk","_mcCancelLoading","mcOnCancel","transformOrigin","mcGetContainer","mcOkText","mcCancelText","animationState","isComponent","mcContent","createDynamicComponent","isModalButtons","mcFooter","formatModalButtons","container","HTMLElement","OverlayRef","handleVisibleStateChange","firstChange","contentComponentRef","bodyContainer","insert","autoFocusButtonOk","changeVisibleFromInside","destroy","triggerOk","onClickOkCancel","triggerCancel","getInstance","getContentComponentRef","getContentComponent","getElement","onClickMask","mcMask","mcMaskClosable","target","contains","isModalType","type","onClickCloseBtn","ok","cancel","loadingKey","caseClose_1","doClose","isPromise","handleThen","catch","isNonEmptyString","isTemplateRef","Type","animation","closeResult","changeBodyOverflow","animateTo","getButtonCallableProp","prop","args","onButtonClick","button","loading","changeAnimationState","maskAnimationClassMap","modalAnimationClassMap","_b","isVisible","updateTransformOrigin","buttons","autoLoading","component","factory","resolveComponentFactory","childInjector","Injector","parent","parentInjector","mcComponentParams","assign","modalElement","modalContainer","plusNum","body","scrollBarWidth","DOCUMENT","McMeasureScrollbarService","CssUnitPipe","defaultUnit","formatted","Pipe","ModalBuilderForService","createModal","changeProps","destroyModal","keydownEvents","McModalService","confirm","confirmType","mcClassName","success","simpleConfirm","delete","McModalModule","McButtonModule","MC_NAVBAR_CONTAINER","MC_NAVBAR_ITEM","MC_NAVBAR_BRAND","MC_NAVBAR_TITLE","McNavbarItemBase","_McNavbarMixinBase","_platform","_cdRef","dropdownItems","isCollapsed","_subscription","encodeURI","dropdownContent","denyClickIfDisabled","_focusMonitor$","hasDropdownContent","listenClickOutside","startListenFocusDropdownItems","stopListenFocusDropdownItems","isActiveDropdownLink","link","isBrowser","location","href","handleClickByItem","toggleDropdown","isNavbarItem","handleClickByDropdownItem","forceCloseDropdown","_dropdownElements","el","events","eventListeners","hasAttribute","stopImmediatePropagation","[attr.disabled]","Platform","CollapsibleItem","_collapsed","processCollapsed","collapsed","updateCollapsedClass","CachedItemWidth","itemsForCollapse","_collapsedItemsWidth","calculateAndCacheCollapsedItemsWidth","updateTitle","acc","getTitle","computedTitle","getAttribute","decodeURI","innerText","removeAttribute","forceRecalculateItemsWidth","resizeDebounceInterval","firstLevelElement","secondLevelElements","resizeObserver","debounceTime","_resizeSubscription","updateCollapsed","_itemsWidths","calculateAndCacheItemsWidth","_totalItemsWidths","calculateAndCacheTotalItemsWidth","collapseDelta","maxAllowedWidth","itemsWidths","canCollapse","collapsedItemsWidth","getOuterElementWidth","getPropertyValue","allItemsSelector","allItems","from","getItemsForCollapse","McDropdown","resetActiveItem","addItem","_items","_itemChanges","removeItem","setPositionClasses","posX","posY","xPosition","yPosition","classes","_classList","_startAnimation","_panelAnimationState","_resetAnimation","_onAnimationDone","_animationDone","_isAnimating","McDropdownItem","McDropdownContent","McDropdown_1","mcDropdownAnimations","transformDropdown","fadeInItems","MC_DROPDOWN_PANEL","MC_DROPDOWN_DEFAULT_OPTIONS","MC_DROPDOWN_SCROLL_STRATEGY","MC_DROPDOWN_SCROLL_STRATEGY_FACTORY_PROVIDER","MC_DROPDOWN_SCROLL_STRATEGY_FACTORY","McDropdownTrigger","_overlay","_element","_viewContainerRef","_openedBy","dropdownOpened","dropdownClosed","_overlayRef","_opened","_closeSubscription","_hoverSubscription","dropdown","closed","_check","_cleanUpSubscriptions","_createOverlay","_setPosition","_portal","lazyContent","_closingActions","_init","opened","_attached","_reset","_setIsOpened","focusFirstItem","isOpen","throwMcDropdownMissingError","templateRef","config","_getOverlayConfig","_subscribeToPositions","OverlayConfig","withLockedPosition","hasBackdrop","backdropClass","originFallbackX","overlayFallbackY","_c","originFallbackY","_d","overlayFallbackX","overlapTrigger","offsetY","backdrop","backdropClick","(touchstart)","McDropdownModule","McContentComponent","[class.mc-layout-content]","McFooterComponent","[class.mc-layout-footer]","McHeaderComponent","[class.mc-layout-header]","McLayoutComponent","hasSidebar","[class.mc-layout]","[class.mc-layout-has-sidebar]","McSidebarComponent","mcLayoutComponent","_mcWidth","mcCollapsedWidth","mcCollapsedChange","collapsible","mcCollapsed","[class.mc-layout-sidebar]","[class.mc-layout-sidebar-collapsed]","[style.flex]","[style.max-width.px]","[style.min-width.px]","[style.width.px]","Host","McLayoutModule","McListOption","listSelection","checkboxPosition","_reportValueChange","wasSelected_1","_lineSetter","McLineSetter","_lines","_removeOptionFromList","getLabel","_text","_getHostElement","McLine","McListSelection","MC_SELECTION_LIST_VALUE_ACCESSOR","McListSelectionChange","McListSelectionBase","_McListSelectionMixinBase","horizontal","_modelChanges","_tempValues","_setOptionsFromValues","_i","selectAll","deselectAll","values","getSelectedOptionValues","listOption","optionIndex","setPreviousItemActive","setNextItemActive","_getOptionByValue","Boolean","McListBase","McList","McListSubheaderCssStyler","McListItemBase","McListItem","McListModule","McLineModule","McLinkBase","_McLinkBase","McLink","McLinkModule","rootAfterAllClose","activeDate","startAt","dateAdapter","today","_currentView","startView","McCalendar","ngAfterViewChecked","moveFocusOnNextTick","focusActiveCell","intlChanges","minDate","maxDate","dateFilter","getCurrentViewComponent","init","updateTodaysDate","currentView","monthView","yearView","multiYearView","dateSelected","date","sameDate","selectedChange","yearSelectedInMultiYearView","normalizedYear","yearSelected","monthSelectedInYearView","normalizedMonth","monthSelected","userSelected","userSelection","goToDateInView","getValidDateOrNull","obj","isDateInstance","isValid","McMonthView","McYearView","McMultiYearView","MC_DATE_FORMATS","McDatepickerIntl","DateAdapter","mcDatepickerAnimations","fadeInCalendar","Element","matches","msMatchesSelector","datepickerUid","MC_DATEPICKER_SCROLL_STRATEGY","MC_DATEPICKER_SCROLL_STRATEGY_FACTORY_PROVIDER","MC_DATEPICKER_SCROLL_STRATEGY_FACTORY","McDatepickerContentBase","McDatepickerContentMixinBase","McDatepickerContent","calendar","[@transformPanel]","McDatepicker","openedStream","closedStream","disabledChange","selectedChanged","validSelected","focusedElementBeforeOpen","inputSubscription","createMissingDateImplError","McDatepicker_1","_startAt","datepickerInput","deserialize","_color","getThemePalette","popupRef","popupComponentRef","oldValue","selectYear","selectMonth","registerInput","input","activeElement","openAsPopup","calendarPortal","isAttached","completeClose","createPopup","datepicker","setColor","overlayConfig","createPopupPositionStrategy","MC_DATEPICKER_VALUE_ACCESSOR","McDatepickerInput","MC_DATEPICKER_VALIDATORS","McDatepickerInputEvent","targetElement","dateFormats","formField","dateChange","dateInput","datepickerSubscription","localeSubscription","lastValueValid","cvaOnChange","mcDatepickerParse","minValidator","controlValue","compareDate","mcDatepickerMin","actual","maxValidator","mcDatepickerMax","filterValidator","mcDatepickerFilter","localeChanges","McDatepickerInput_1","oldDate","_min","_max","blur","isAltDownArrow","readOnly","parse","format","display","[attr.aria-haspopup]","[attr.aria-owns]","[attr.min]","[attr.max]","(change)","McDatepickerToggleIcon","McDatepickerToggle","intl","defaultTabIndex","parsedTabIndex","watchStateChanges","datepickerDisabled","inputDisabled","datepickerToggled","McButton","[class.mc-datepicker-toggle_active]","[class.mc-warn]","McDatepickerModule","McCalendarBody","McCalendarHeader","McDivider","_vertical","_inset","[attr.aria-orientation]","[class.mc-divider-vertical]","[class.mc-divider-inset]","McDividerModule","_template","_componentFactoryResolver","_appRef","_injector","_document","context","_outlet","DomPortalOutlet","createElement","parentNode","insertBefore","outletElement","ApplicationRef","McDropdownItemBase","_McDropdownItemMixinBase","_parentDropdownPanel","_getTabIndex","_checkDisabled","textNodeType","TEXT_NODE","output","childNodes","length_1","nodeType","providedIn","MC_DROPDOWN_DEFAULT_OPTIONS_FACTORY","_defaultOptions","_xPosition","_yPosition","_tabSubscription","_overlapTrigger","_hasBackdrop","throwMcDropdownInvalidPositionX","throwMcDropdownInvalidPositionY","className","setFocusOrigin","McInputMono","MIN_VALIDATOR","MinValidator","_createValidator","_validator","MAX_VALIDATOR","MaxValidator","McInputModule","McInput","McNumberInput","calendarLabel","openCalendarLabel","prevMonthLabel","nextMonthLabel","prevYearLabel","nextYearLabel","prevMultiYearLabel","nextMultiYearLabel","switchToMonthViewLabel","switchToMultiYearViewLabel","McCalendarCell","displayValue","enabled","cssClasses","numCols","activeCell","cellAspectRatio","selectedValueChange","cellClicked","cell","columnChanges","rows","firstRowOffset","cellPadding","cellWidth","isActiveCell","rowIndex","colIndex","cellNumber","aria-readonly","activeDateChange","firstDayOfWeek","getFirstDayOfWeek","narrowWeekdays","getDayOfWeekNames","longWeekdays","weekdays","long","narrow","concat","_activeDate","oldActiveDate","validDate","clampDate","hasSameMonthAndYear","selectedDate","getDateInCurrentMonth","_minDate","_maxDate","selectedYear","getYear","selectedMonth","getMonth","createDate","handleCalendarBodyKeydown","addCalendarDays","getDate","getNumDaysInMonth","addCalendarYears","addCalendarMonths","todayDate","monthLabel","getMonthNames","toLocaleUpperCase","substr","firstOfMonth","firstWeekOffset","getDayOfWeek","createWeekCells","mcCalendarBody","daysInMonth","dateNames","getDateNames","weeks","shouldEnableDate","dateA11yLabel","cellClasses","dateClass","d1","d2","todayYear","activeYear","activeOffset","years","row","year","createCellForYear","onYearSelected","month","yearsPerPage","getActiveCell","yearName","getYearName","shouldEnableYear","firstOfYear","getMonthInCurrentYear","onMonthSelected","normalizedDate","todayMonth","yearLabel","monthNames","months","createCellForMonth","monthName","monthYearA11yLabel","newMonthName","shouldEnableMonth","isYearAndMonthAfterMaxDate","isYearAndMonthBeforeMinDate","maxYear","maxMonth","minYear","minMonth","label","monthYearLabel","multi-year","currentPeriodClicked","previousClicked","nextClicked","previousEnabled","isSameView","nextEnabled","date1","date2","clampedActiveDate","calendarHeaderPortal","headerComponent","McIconButton","McAnchor","McButtonCSSStyler","McIconButtonCSSStyler","McCard","readonly","_tabIndex","hostElement","onClick","[class.mc-card_readonly]","[class.mc-card_selected]","McCardModule","MC_CHECKBOX_CLICK_ACTION","MC_CHECKBOX_CONTROL_VALUE_ACCESSOR","McCheckbox","TransitionCheckState","McCheckboxChange","McCheckboxBase","_McCheckboxMixinBase","_clickAction","indeterminateChange","_currentAnimationClass","_currentCheckState","Init","_controlValueAccessorChangeFn","_indeterminate","focusOrigin","_onInputFocusChange","changed","_transitionCheckState","Indeterminate","Checked","Unchecked","indeterminate","newState","oldState","[class.mc-indeterminate]","[class.mc-checkbox-label-before]","MC_CHECKBOX_REQUIRED_VALIDATOR","McCheckboxRequiredValidator","[attr.required]","CheckboxRequiredValidator","McCheckboxModule","McCleaner","McFormFieldNumberControl","McHint","McPrefix","McStepper","stepUp","stepDown","onStepUp","onStepDown","McSuffix","McFormFieldBase","_McFormFieldMixinBase","_labelId","hovered","_validateControlChild","_control","_numberControl","hasStepper","_stepper","valueChanges","clearValue","hasCleaner","onHoverChanged","isHovered","step","_shouldForward","getMcFormFieldMissingControlError","_hint","_suffix","_prefix","_cleaner","[class.mc-form-field_invalid]","[class.mc-form-field_has-prefix]","[class.mc-form-field_has-suffix]","[class.mc-form-field_has-cleaner]","[class.mc-form-field_has-stepper]","[class.ng-untouched]","[class.ng-touched]","[class.ng-pristine]","[class.ng-dirty]","[class.ng-valid]","[class.ng-invalid]","[class.ng-pending]","(mouseenter)","(mouseleave)","McFormFieldWithoutBorders","res","MC_INPUT_INVALID_TYPES","BIG_STEP","SMALL_STEP","McInputBase","_McInputMixinBase","_model","bigStep","isDigit","Infinity","_host","self","getPrototypeOf","normalizeSplitter","McNumberInput_1","_focusChanged","minuses","NUMPAD_MINUS","DASH","FF_MINUS","serviceKeys","DELETE","BACKSPACE","TAB","arrows","allowedKeys","isIEPeriod","isNotIEPeriod","metaKey","C","V","X","F1","F12","EDGE","TRIDENT","ZERO","NINE","NUMPAD_ZERO","NUMPAD_NINE","valueAsNumber","update","replace","isFloat","isInt","test","NgModel","_type","_neverEmptyInputTypes","t","getSupportedInputTypes","_inputValueAccessor","_previousNativeValue","McInput_1","_validateType","_dirtyCheckNativeValue","_onInput","_isNeverEmpty","_isBadInput","getMcInputUnsupportedTypeError","__extends","d","__","constructor","extendStatics","__decorate","decorators","desc","r","getOwnPropertyDescriptor","Reflect","decorate","__param","paramIndex","decorator","__metadata","metadataKey","metadataValue","metadata","isBoolean","val","MC_SANITY_CHECKS_FACTORY","base","class_1","defaultColor","Default","colorPalette","errorState","matcher","errorStateMatcher","isErrorState","optionsArray","groups","groupCounter","optionHeight","currentScrollPosition","optionOffset","arrayMap","array","iteratee","baseValues","object","props","inputType","sanitizeNumber","isFinite","getPrecision","arr","pow","value1","value2","precision","provider","scrollStrategies","reposition","scrollThrottle","setPrototypeOf","__proto__","p","__assign","s","n","MC_SANITY_CHECKS","_sanityChecksEnabled","_hasDoneGlobalChecks","_window","_areChecksEnabled","_checkDoctypeIsDefined","_checkThemeIsPresent","_isTestEnv","doctype","testElement","computedStyle","removeChild","BidiModule","_setLineClass","count","_resetClasses","_setClass","isAdd","ShowOnDirtyErrorStateMatcher","form","invalid","dirty","submitted","touched","McPseudoCheckbox","McPseudoCheckboxModule","scrollbarMeasure","overflow","initScrollBarWidth","_scrollbarWidth","scrollDiv","scrollProp","clientWidth","McOptgroupBase","_McOptgroupMixinBase","_uniqueOptgroupIdCounter","[class.mc-optgroup-disabled]","[attr.aria-labelledby]","_uniqueIdCounter","McOptionSelectionChange","_parent","_active","_mostRecentViewValue","disableRipple","_emitSelectionChangeEvent","setActiveStyles","setInactiveStyles","[class.mc-option-multiple]","MC_LABEL_GLOBAL_OPTIONS","topCenter","topLeft","topRight","rightTop","rightBottom","bottomCenter","bottomLeft","bottomRight","leftTop","leftBottom","McIconCSSStyler","McIconBase","_McIconMixinBase","Empty","iconName","queries","McButtonBase","_McButtonMixinBase","_haltDisabledEvents"],"mappings":"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"}