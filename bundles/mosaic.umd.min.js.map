{"version":3,"file":"mosaic.umd.min.js","sources":["../../src/lib/tooltip/tooltip.component.ts","../../src/lib/tooltip/tooltip.module.ts","../../src/lib/version.ts","../../src/lib/timepicker/timepicker.constants.ts","../../src/lib/select/select.component.ts","../../src/lib/select/select.module.ts","../../src/lib/splitter/splitter.component.ts","../../src/lib/splitter/splitter.module.ts","../../src/lib/toggle/toggle.component.ts","../../src/lib/toggle/toggle.module.ts","../../src/lib/tree/tree-selection.ts","../../src/lib/tree/tree.module.ts","../../src/lib/tree/data-source/flat-data-source.ts","../../src/lib/tree/data-source/nested-data-source.ts","../../src/lib/tag/tag.component.ts","../../src/lib/tag/tag.module.ts","../../src/lib/textarea/textarea.component.ts","../../src/lib/textarea/textarea.module.ts","../../src/lib/timepicker/timepicker.ts","../../src/lib/timepicker/timepicker.module.ts","../../src/lib/select/select-animations.ts","../../src/lib/modal/modal.service.ts","../../src/lib/modal/modal.module.ts","../../src/lib/navbar/navbar.component.ts","../../src/lib/navbar/navbar.module.ts","../../src/lib/progress-bar/progress-bar.component.ts","../../src/lib/progress-bar/progress-bar.module.ts","../../src/lib/progress-spinner/progress-spinner.component.ts","../../src/lib/progress-spinner/progress-spinner.module.ts","../../src/lib/radio/radio.component.ts","../../src/lib/radio/radio.module.ts","../../src/lib/tree/node.ts","../../src/lib/tree/padding.ts","../../src/lib/list/list-selection.component.ts","../../src/lib/list/list.component.ts","../../src/lib/list/list.module.ts","../../src/lib/link/link.component.ts","../../src/lib/link/link.module.ts","../../src/lib/modal/modal-control.service.ts","../../src/lib/modal/modal-ref.class.ts","../../src/lib/modal/modal-util.ts","../../src/lib/modal/modal.component.ts","../../src/lib/modal/css-unit.pipe.ts","../../src/lib/form-field/form-field.ts","../../src/lib/form-field/form-field.module.ts","../../src/lib/input/input-value-accessor.ts","../../src/lib/input/stepperUtils.ts","../../src/lib/input/input.ts","../../src/lib/input/input-number-validators.ts","../../src/lib/input/input.module.ts","../../src/lib/layout/content.component.ts","../../src/lib/layout/footer.component.ts","../../src/lib/layout/header.component.ts","../../src/lib/layout/layout.component.ts","../../src/lib/layout/sidebar.component.ts","../../src/lib/layout/layout.module.ts","../../src/lib/button/button.component.ts","../../src/lib/button/button.module.ts","../../src/lib/card/card.component.ts","../../src/lib/card/card.module.ts","../../src/lib/checkbox/checkbox-config.ts","../../src/lib/checkbox/checkbox.ts","../../src/lib/checkbox/checkbox-required-validator.ts","../../src/lib/checkbox/checkbox-module.ts","../../src/lib/divider/divider.component.ts","../../src/lib/divider/divider.module.ts","../../src/lib/dropdown/dropdown-content.ts","../../src/lib/dropdown/dropdown-panel.ts","../../src/lib/dropdown/dropdown-item.ts","../../src/lib/dropdown/dropdown-animations.ts","../../src/lib/dropdown/dropdown.component.ts","../../src/lib/dropdown/dropdown-trigger.ts","../../src/lib/dropdown/dropdown.module.ts","../../src/lib/form-field/cleaner.ts","../../src/lib/form-field/form-field-control.ts","../../src/lib/form-field/form-field-number-control.ts","../../src/lib/form-field/hint.ts","../../src/lib/form-field/prefix.ts","../../src/lib/form-field/stepper.ts","../../src/lib/form-field/suffix.ts","../../node_modules/tslib/tslib.es6.js","../../src/lib/core/utils/utils.ts","../../src/lib/core/common-behaviors/common-module.ts","../../src/lib/core/common-behaviors/disabled.ts","../../src/lib/core/common-behaviors/color.ts","../../src/lib/core/common-behaviors/tabindex.ts","../../src/lib/core/common-behaviors/error-state.ts","../../src/lib/core/option/option.ts","../../src/lib/core/overlay/overlay-position-map.ts","../../src/lib/dropdown/dropdown-errors.ts","../../src/lib/form-field/form-field-errors.ts","../../src/lib/input/input-errors.ts","../../src/lib/select/select-errors.ts","../../src/lib/core/line/line.ts","../../src/lib/core/error/error-options.ts","../../src/lib/core/selection/pseudo-checkbox/pseudo-checkbox.ts","../../src/lib/core/selection/index.ts","../../src/lib/core/services/measure-scrollbar.service.ts","../../src/lib/core/option/optgroup.ts","../../src/lib/core/option/index.ts","../../src/lib/core/label/label-options.ts","../../src/lib/core/animation/fade-animations.ts","../../src/lib/icon/icon.component.ts","../../src/lib/icon/icon.module.ts"],"sourcesContent":["import {\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    Directive,\n    ElementRef,\n    EventEmitter,\n    HostBinding,\n    Inject,\n    InjectionToken,\n    Input,\n    NgZone,\n    OnDestroy,\n    OnInit,\n    Optional,\n    Output,\n    TemplateRef,\n    ViewContainerRef,\n    ViewEncapsulation\n} from '@angular/core';\nimport { Directionality } from '@ptsecurity/cdk/bidi';\nimport { coerceBooleanProperty } from '@ptsecurity/cdk/coercion';\nimport { ESCAPE } from '@ptsecurity/cdk/keycodes';\nimport {\n    ConnectedOverlayPositionChange,\n    ConnectionPositionPair,\n    Overlay,\n    OverlayRef,\n    ScrollDispatcher,\n    IScrollStrategy,\n    FlexibleConnectedPositionStrategy,\n    IOverlayConnectionPosition,\n    IOriginConnectionPosition,\n    HorizontalConnectionPos,\n    VerticalConnectionPos\n} from '@ptsecurity/cdk/overlay';\nimport { ComponentPortal } from '@ptsecurity/cdk/portal';\nimport {\n    fadeAnimation,\n    DEFAULT_4_POSITIONS,\n    POSITION_MAP\n} from '@ptsecurity/mosaic/core';\nimport { BehaviorSubject, Observable, Subject } from 'rxjs';\nimport { distinctUntilChanged, takeUntil } from 'rxjs/operators';\n\n\n@Component({\n    selector: 'mc-tooltip',\n    animations: [ fadeAnimation ],\n    templateUrl: './tooltip.component.html',\n    preserveWhitespaces: false,\n    styleUrls: ['./tooltip.css'],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    host: {\n        '(body:click)': 'this._handleBodyInteraction()'\n    }\n})\n\nexport class McToolTipComponent {\n    _prefix = 'mc-tooltip_placement';\n    _positions: ConnectionPositionPair[] = [ ...DEFAULT_4_POSITIONS ];\n    _classMap = {};\n    _placement = 'top';\n    _trigger = 'hover';\n    isTitleString: boolean;\n    visibleSource = new BehaviorSubject<boolean>(false);\n    $visible: Observable<boolean> = this.visibleSource.asObservable();\n    _title: string | TemplateRef<void>;\n    showTId: number;\n    hideTId: number;\n    availablePositions: any;\n\n    @Output() mcVisibleChange: EventEmitter<boolean> = new EventEmitter();\n\n    @Input() mcMouseEnterDelay = 400;\n\n    @Input() mcMouseLeaveDelay = 0;\n\n    @Input()\n    set mcTitle(value: string | TemplateRef<void>) {\n        this.isTitleString = !(value instanceof TemplateRef);\n\n        if (this.isTitleString) {\n            this._title = value;\n        }\n    }\n\n    get mcTitle(): string | TemplateRef<void> {\n        return this._title;\n    }\n\n    @Input()\n    set mcVisible(value: boolean) {\n        const visible = coerceBooleanProperty(value);\n\n        if (this.visibleSource.value !== visible) {\n            this.visibleSource.next(visible);\n            this.mcVisibleChange.emit(visible);\n        }\n    }\n\n    get mcVisible(): boolean {\n        return this.visibleSource.value;\n    }\n\n    @Input()\n    set mcTrigger(value: string) {\n        this._trigger = value;\n    }\n\n    get mcTrigger(): string {\n        return this._trigger;\n    }\n\n    @Input()\n    set mcPlacement(value: string) {\n        if (value !== this._placement) {\n            this._placement = value;\n            this._positions.unshift(POSITION_MAP[ this.mcPlacement ]);\n        } else if (!value) {\n            this._placement = 'top';\n        }\n    }\n    get mcPlacement(): string {\n        return this._placement;\n    }\n\n    /** Subject for notifying that the tooltip has been hidden from the view */\n    private readonly _onHide: Subject<any> = new Subject();\n    private _closeOnInteraction: boolean = false;\n\n    constructor(public cdr: ChangeDetectorRef) {\n        this.availablePositions = POSITION_MAP;\n    }\n\n    show(): void {\n        if (this.hideTId) {\n            clearTimeout(this.hideTId);\n        }\n\n        if (!this.isContentEmpty()) {\n            this._closeOnInteraction = true;\n            this.showTId = setTimeout(() => {\n                this.mcVisible = true;\n                this.mcVisibleChange.emit(true);\n\n                // Mark for check so if any parent component has set the\n                // ChangeDetectionStrategy to OnPush it will be checked anyways\n                this._markForCheck();\n            }, this.mcMouseEnterDelay);\n        }\n    }\n\n    hide(): void {\n        if (this.showTId) {\n            clearTimeout(this.showTId);\n        }\n\n        this.hideTId = setTimeout(() => {\n            this.mcVisible = false;\n            this.mcVisibleChange.emit(false);\n            this._onHide.next();\n\n            // Mark for check so if any parent component has set the\n            // ChangeDetectionStrategy to OnPush it will be checked anyways\n            this._markForCheck();\n        }, this.mcMouseLeaveDelay);\n    }\n\n    setClassMap(): void {\n        this._classMap = {\n            [ `${this._prefix}-${this._placement}` ]: true\n        };\n    }\n\n    isContentEmpty(): boolean {\n        return this.isTitleString ? (this.mcTitle === '' || !this.mcTitle) : false;\n    }\n\n    /** Returns an observable that notifies when the tooltip has been hidden from view. */\n    afterHidden(): Observable<void> {\n        return this._onHide.asObservable();\n    }\n\n    _markForCheck(): void {\n        this.cdr.markForCheck();\n    }\n\n    _handleBodyInteraction(): void {\n        if (this._closeOnInteraction) {\n            this.hide();\n        }\n    }\n}\n\nexport const MC_TOOLTIP_SCROLL_STRATEGY =\n    new InjectionToken<() => IScrollStrategy>('mc-tooltip-scroll-strategy');\n\n/** @docs-private */\nexport function MC_TOOLTIP_SCROLL_STRATEGY_FACTORY(overlay: Overlay): () => IScrollStrategy {\n    return () => overlay.scrollStrategies.reposition({scrollThrottle: 20});\n}\n\n/** @docs-private */\nexport const MC_TOOLTIP_SCROLL_STRATEGY_FACTORY_PROVIDER = {\n    provide: MC_TOOLTIP_SCROLL_STRATEGY,\n    deps: [Overlay],\n    useFactory: MC_TOOLTIP_SCROLL_STRATEGY_FACTORY\n};\n\n/** Creates an error to be thrown if the user supplied an invalid tooltip position. */\nexport function getMcTooltipInvalidPositionError(position: string) {\n    return Error(`McTooltip position \"${position}\" is invalid.`);\n}\n\nconst VIEWPORT_MARGIN: number = 8;\n\n@Directive({\n    selector: '[mc-tooltip]',\n    host: {\n        '(keydown)': 'handleKeydown($event)',\n        '(touchend)': 'handleTouchend()'\n    }\n})\n\nexport class McTooltipDirective implements OnInit, OnDestroy {\n    isTooltipOpen: boolean = false;\n    isDynamicTooltip = false;\n    parentDisabled: boolean = false;\n    _title: string;\n    _disabled: boolean = false;\n    _mouseEnterDelay: number;\n    _mouseLeaveDelay: number;\n    _visible: boolean;\n    _trigger: string = 'hover';\n    _placement: string = 'top';\n    _overlayRef: OverlayRef | null;\n    _portal: ComponentPortal<McToolTipComponent>;\n    availablePositions: any;\n    tooltip: McToolTipComponent | null;\n\n    @Output() mcVisibleChange = new EventEmitter<boolean>();\n    private $unsubscribe = new Subject<void>();\n\n    @Input('mc-tooltip')\n    set mcTitle(title: string) {\n        this._title = title;\n        this.updateCompValue('mcTitle', title);\n    }\n\n    get mcTitle(): string {\n        return this._title;\n    }\n\n    @Input('mcTitle')\n    set setTitle(title: string) {\n        this.mcTitle = title;\n    }\n\n    @Input('mcTooltipDisabled')\n    get disabled(): boolean { return this._disabled; }\n    set disabled(value) {\n        this._disabled = coerceBooleanProperty(value);\n    }\n\n    @Input('mcMouseEnterDelay')\n    set mcMouseEnterDelay(value: number) {\n        this._mouseEnterDelay = value;\n        this.updateCompValue('mcMouseEnterDelay', value);\n    }\n\n    get mcMouseEnterDelay(): number {\n        return this._mouseEnterDelay;\n    }\n\n    @Input('mcMouseLeaveDelay')\n    set mcMouseLeaveDelay(value: number) {\n        this._mouseLeaveDelay = value;\n        this.updateCompValue('mcMouseLeaveDelay', value);\n    }\n\n    get mcMouseLeaveDelay(): number {\n        return this._mouseEnterDelay;\n    }\n\n    @Input('mcVisible')\n    set mcVisible(value: boolean) {\n        this._visible = value;\n        this.updateCompValue('mcVisible', value);\n    }\n\n    get mcVisible(): boolean {\n        return this._visible;\n    }\n\n    @Input('mcTrigger')\n    set mcTrigger(value: string) {\n        this._trigger = value;\n        this.updateCompValue('mcTrigger', value);\n    }\n\n    get mcTrigger(): string {\n        return this._trigger;\n    }\n\n    @Input('mcPlacement')\n    set mcPlacement(value: string) {\n        if (value) {\n            this._placement = value;\n            this.updateCompValue('mcPlacement', value);\n        } else {\n            this._placement = 'top';\n        }\n    }\n\n    get mcPlacement(): string {\n        return this._placement;\n    }\n\n    @HostBinding('class.mc-tooltip-open')\n    get isOpen(): boolean {\n        return this.isTooltipOpen;\n    }\n\n    @HostBinding('class.disabled')\n    get isParentDisabled(): boolean {\n        return this.parentDisabled;\n    }\n\n    private manualListeners = new Map<string, EventListenerOrEventListenerObject>();\n    private readonly _destroyed = new Subject<void>();\n\n    constructor(\n        private _overlay: Overlay,\n        private elementRef: ElementRef,\n        private _ngZone: NgZone,\n        private _scrollDispatcher: ScrollDispatcher,\n        private hostView: ViewContainerRef,\n        @Inject(MC_TOOLTIP_SCROLL_STRATEGY) private _scrollStrategy,\n        @Optional() private _dir: Directionality) {\n            this.availablePositions = POSITION_MAP;\n        }\n\n    /** Create the overlay config and position strategy */\n    _createOverlay(): OverlayRef {\n        if (this._overlayRef) {\n            return this._overlayRef;\n        }\n\n        // Create connected position strategy that listens for scroll events to reposition.\n        const strategy = this._overlay.position()\n            .flexibleConnectedTo(this.elementRef)\n            .withTransformOriginOn('.mc-tooltip')\n            .withFlexibleDimensions(false)\n            .withViewportMargin(VIEWPORT_MARGIN)\n            .withPositions([ ...DEFAULT_4_POSITIONS ]);\n\n        const scrollableAncestors = this._scrollDispatcher\n            .getAncestorScrollContainers(this.elementRef);\n\n        strategy.withScrollableContainers(scrollableAncestors);\n\n        strategy.positionChanges.pipe(takeUntil(this._destroyed)).subscribe((change) => {\n            if (this.tooltip) {\n                this.onPositionChange(change);\n                if (change.scrollableViewProperties.isOverlayClipped && this.tooltip.mcVisible) {\n                    // After position changes occur and the overlay is clipped by\n                    // a parent scrollable then close the tooltip.\n                    this._ngZone.run(() => this.hide());\n                }\n            }\n        });\n\n        this._overlayRef = this._overlay.create({\n            direction: this._dir,\n            positionStrategy: strategy,\n            panelClass: 'mc-tooltip-panel',\n            scrollStrategy: this._scrollStrategy()\n        });\n\n        this._updatePosition();\n\n        this._overlayRef.detachments()\n            .pipe(takeUntil(this._destroyed))\n            .subscribe(() => this._detach());\n\n        return this._overlayRef;\n    }\n\n    _detach() {\n        if (this._overlayRef && this._overlayRef.hasAttached()) {\n            this._overlayRef.detach();\n        }\n\n        this.tooltip = null;\n    }\n\n    onPositionChange($event: ConnectedOverlayPositionChange): void {\n        let updatedPlacement = this.mcPlacement;\n        Object.keys(this.availablePositions).some((key) => {\n            if ($event.connectionPair.originX === this.availablePositions[key].originX &&\n                $event.connectionPair.originY === this.availablePositions[key].originY &&\n                $event.connectionPair.overlayX === this.availablePositions[key].overlayX &&\n                $event.connectionPair.overlayY === this.availablePositions[key].overlayY) {\n                updatedPlacement = key;\n\n                return true;\n            }\n\n            return false;\n        });\n        this.updateCompValue('mcPlacement', updatedPlacement);\n\n        if (this.tooltip) {\n            this.tooltip.setClassMap();\n        }\n\n        this.handlePositioningUpdate();\n    }\n\n    handlePositioningUpdate() {\n        if (!this._overlayRef) {\n            this._overlayRef = this._createOverlay();\n        }\n        if (this.mcPlacement === 'right' || this.mcPlacement === 'left') {\n            const pos =\n                (this._overlayRef.overlayElement.clientHeight -\n                    this.hostView.element.nativeElement.clientHeight) / 2; // tslint:disable-line\n            const currentContainer = this._overlayRef.overlayElement.style.top || '0px';\n            this._overlayRef.overlayElement.style.top =\n                `${parseInt(currentContainer.split('px')[0], 10) + pos - 1}px`;\n            // TODO: обновлять положение стрелки\\указателя\\\"дятла\"\n        }\n    }\n\n    // tslint:disable-next-line:no-any\n    updateCompValue(key: string, value: any): void {\n        if (this.isDynamicTooltip && value) {\n            if (this.tooltip) {\n                this.tooltip[key] = value;\n            }\n        }\n    }\n\n    ngOnInit(): void {\n        if (this.mcTrigger === 'hover') {\n\n            this.manualListeners\n                .set('mouseenter', () => this.show())\n                .set('mouseleave', () => this.hide())\n                .forEach((listener, event) => this.elementRef.nativeElement.addEventListener(event, listener));\n        }\n\n        if (this.mcTrigger === 'focus') {\n\n            this.manualListeners\n                .set('focus', () => this.show())\n                .set('blur', () => this.hide())\n                .forEach((listener, event) => this.elementRef.nativeElement.addEventListener(event, listener));\n        }\n    }\n\n    ngOnDestroy(): void {\n        if (this._overlayRef) {\n            this._overlayRef.dispose();\n        }\n        this.manualListeners.forEach((listener, event) =>\n            this.elementRef.nativeElement.removeEventListener(event, listener));\n        this.manualListeners.clear();\n\n        this.$unsubscribe.next();\n        this.$unsubscribe.complete();\n    }\n\n    handleKeydown(e: KeyboardEvent) {\n        if (this.isTooltipOpen && e.keyCode === ESCAPE) { // tslint:disable-line\n            this.hide();\n        }\n    }\n\n    handleTouchend() {\n        this.hide();\n    }\n\n    /** Updates the position of the current tooltip. */\n    _updatePosition() {\n        if (!this._overlayRef) {\n            this._overlayRef = this._createOverlay();\n        }\n        const position =\n            this._overlayRef.getConfig().positionStrategy as FlexibleConnectedPositionStrategy;\n        const origin = this._getOrigin();\n        const overlay = this._getOverlayPosition();\n\n        position.withPositions([\n            {...origin.main, ...overlay.main},\n            {...origin.fallback, ...overlay.fallback}\n        ]);\n    }\n\n    /**\n     * Returns the origin position and a fallback position based on the user's position preference.\n     * The fallback position is the inverse of the origin (e.g. `'below' -> 'above'`).\n     */\n    _getOrigin(): {main: IOriginConnectionPosition; fallback: IOriginConnectionPosition} {\n        const position = this.mcPlacement;\n        const isLtr = !this._dir || this._dir.value === 'ltr';\n        let originPosition: IOriginConnectionPosition;\n\n        if (position === 'top' || position === 'bottom') {\n            originPosition = {originX: 'center', originY: position === 'top' ? 'top' : 'bottom'};\n        } else if (\n            position === 'top' ||\n            (position === 'left' && isLtr) ||\n            (position === 'right' && !isLtr)) {\n            originPosition = {originX: 'start', originY: 'center'};\n        } else if (\n            position === 'bottom' ||\n            (position === 'right' && isLtr) ||\n            (position === 'left' && !isLtr)) {\n            originPosition = {originX: 'end', originY: 'center'};\n        } else {\n            throw getMcTooltipInvalidPositionError(position);\n        }\n\n        const {x, y} = this._invertPosition(originPosition.originX, originPosition.originY);\n\n        return {\n            main: originPosition,\n            fallback: {originX: x, originY: y}\n        };\n    }\n\n    /** Returns the overlay position and a fallback position based on the user's preference */\n    _getOverlayPosition(): {main: IOverlayConnectionPosition; fallback: IOverlayConnectionPosition} {\n        const position = this.mcPlacement;\n        const isLtr = !this._dir || this._dir.value === 'ltr';\n        let overlayPosition: IOverlayConnectionPosition;\n\n        if (position === 'top') {\n            overlayPosition = {overlayX: 'center', overlayY: 'bottom'};\n        } else if (position === 'bottom') {\n            overlayPosition = {overlayX: 'center', overlayY: 'top'};\n        } else if (\n            position === 'top' ||\n            (position === 'left' && isLtr) ||\n            (position === 'right' && !isLtr)) {\n            overlayPosition = {overlayX: 'end', overlayY: 'center'};\n        } else if (\n            position === 'bottom' ||\n            (position === 'right' && isLtr) ||\n            (position === 'left' && !isLtr)) {\n            overlayPosition = {overlayX: 'start', overlayY: 'center'};\n        } else {\n            throw getMcTooltipInvalidPositionError(position);\n        }\n\n        const {x, y} = this._invertPosition(overlayPosition.overlayX, overlayPosition.overlayY);\n\n        return {\n            main: overlayPosition,\n            fallback: {overlayX: x, overlayY: y}\n        };\n    }\n\n    /** Inverts an overlay position. */\n    private _invertPosition(x: HorizontalConnectionPos, y: VerticalConnectionPos) {\n        let newX: HorizontalConnectionPos = x;\n        let newY: VerticalConnectionPos = y;\n        if (this.mcPlacement === 'top' || this.mcPlacement === 'bottom') {\n            if (y === 'top') {\n                newY = 'bottom';\n            } else if (y === 'bottom') {\n                newY = 'top';\n            }\n        } else {\n            if (x === 'end') {\n                newX = 'start';\n            } else if (x === 'start') {\n                newX = 'end';\n            }\n        }\n\n        return {x: newX, y: newY};\n    }\n\n    private show(): void {\n        if (!this.disabled) {\n            if (!this.tooltip) {\n                const overlayRef = this._createOverlay();\n                this._detach();\n                this._portal = this._portal || new ComponentPortal(McToolTipComponent, this.hostView);\n                this.tooltip = overlayRef.attach(this._portal).instance;\n                this.tooltip.afterHidden()\n                    .pipe(takeUntil(this._destroyed))\n                    .subscribe(() => this._detach());\n                this.isDynamicTooltip = true;\n                const properties = [\n                    'mcTitle',\n                    'mcMouseEnterDelay',\n                    'mcMouseLeaveDelay',\n                    'mcVisible',\n                    'mcTrigger',\n                    'mcPlacement' ];\n                properties.forEach((property) => this.updateCompValue(property, this[ property ]));\n                this.tooltip.mcVisibleChange.pipe(takeUntil(this.$unsubscribe), distinctUntilChanged())\n                    .subscribe((data) => {\n                        this._visible = data;\n                        this.mcVisibleChange.emit(data);\n                    });\n            }\n            this._updatePosition();\n            this.tooltip.show();\n            this.isTooltipOpen = true;\n        }\n    }\n\n    private hide(): void {\n        if (this.tooltip) {\n            this.tooltip.hide();\n            this.isTooltipOpen = false;\n        }\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { OverlayModule } from '@ptsecurity/cdk/overlay';\n\nimport {\n    McToolTipComponent,\n    McTooltipDirective,\n    MC_TOOLTIP_SCROLL_STRATEGY_FACTORY_PROVIDER\n} from './tooltip.component';\n\n\n@NgModule({\n    declarations: [ McToolTipComponent, McTooltipDirective ],\n    exports: [ McToolTipComponent, McTooltipDirective ],\n    imports: [ BrowserAnimationsModule, CommonModule, OverlayModule ],\n    providers: [MC_TOOLTIP_SCROLL_STRATEGY_FACTORY_PROVIDER],\n    entryComponents: [ McToolTipComponent ]\n})\nexport class McToolTipModule {\n}\n","import { Version } from '@angular/core';\n\n\nexport const VERSION = new Version('0.0.1-a73ab4c');\n","export enum TimeParts {\n    hours,\n    minutes,\n    seconds\n}\n\nexport enum TimeFormats {\n    HHmmss = 'HH:mm:ss',\n    HHmm = 'HH:mm'\n}\n\nexport const TIMEFORMAT_PLACEHOLDERS: { [timeFormat: string]: string } = {\n    [TimeFormats.HHmmss]: '  :  :  ',\n    [TimeFormats.HHmm]: '  :  '\n};\n\nexport const DEFAULT_TIME_FORMAT: TimeFormats = TimeFormats.HHmm;\n\nexport const HOURS_MINUTES_SECONDS_REGEXP =\n    new RegExp(/^([0-9]|0[0-9]|1[0-9]|2[0-3]):([0-5][0-9]|[0-9]):([0-5][0-9]|[0-9])?$/);\nexport const HOURS_MINUTES_REGEXP = /^([0-9]|0[0-9]|1[0-9]|2[0-3]):([0-5][0-9]|[0-9])?$/;\nexport const HOURS_ONLY_REGEXP = /^([0-9]|0[0-9]|1[0-9]|2[0-3]):?$/;\n\nexport const SECONDS_PER_MINUTE: number = 59;\nexport const MINUTES_PER_HOUR: number = 59;\nexport const HOURS_PER_DAY: number = 23;\n\n// TODO Move it to common CDK\nexport const ARROW_UP_KEYCODE: string = 'ArrowUp';\nexport const ARROW_DOWN_KEYCODE: string = 'ArrowDown';\nexport const ARROW_LEFT_KEYCODE: string = 'ArrowLeft';\nexport const ARROW_RIGHT_KEYCODE: string = 'ArrowRight';\n","/* tslint:disable:no-empty */\n\nimport { ActiveDescendantKeyManager } from '@ptsecurity/cdk/a11y';\nimport { Directionality } from '@ptsecurity/cdk/bidi';\nimport { coerceBooleanProperty } from '@ptsecurity/cdk/coercion';\nimport { SelectionModel } from '@ptsecurity/cdk/collections';\nimport {\n    DOWN_ARROW,\n    END,\n    ENTER,\n    HOME,\n    LEFT_ARROW,\n    RIGHT_ARROW,\n    SPACE,\n    UP_ARROW,\n    A\n} from '@ptsecurity/cdk/keycodes';\nimport {\n    CdkConnectedOverlay,\n    Overlay,\n    RepositionScrollStrategy,\n    IScrollStrategy,\n    ViewportRuler\n} from '@ptsecurity/cdk/overlay';\n\nimport {\n    AfterContentInit, AfterViewInit,\n    Attribute,\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    ContentChild,\n    ContentChildren,\n    Directive,\n    DoCheck,\n    ElementRef,\n    EventEmitter,\n    Inject,\n    InjectionToken,\n    Input,\n    isDevMode,\n    NgZone,\n    OnChanges,\n    OnDestroy,\n    OnInit,\n    Optional,\n    Output,\n    QueryList, Renderer2,\n    Self,\n    SimpleChanges,\n    ViewChild, ViewChildren,\n    ViewEncapsulation\n} from '@angular/core';\nimport { ControlValueAccessor, FormGroupDirective, NgControl, NgForm } from '@angular/forms';\nimport {\n    _countGroupLabelsBeforeOption,\n    _getOptionScrollPosition,\n    CanDisable,\n    CanDisableCtor,\n    CanUpdateErrorState,\n    CanUpdateErrorStateCtor,\n    ErrorStateMatcher,\n    HasTabIndex, HasTabIndexCtor,\n    MC_OPTION_PARENT_COMPONENT,\n    McOptgroup,\n    McOption,\n    McOptionSelectionChange,\n    mixinDisabled,\n    mixinErrorState,\n    mixinTabIndex\n} from '@ptsecurity/mosaic/core';\n\nimport { McFormField, McFormFieldControl } from '@ptsecurity/mosaic/form-field';\nimport { McTag } from '@ptsecurity/mosaic/tag';\n\n\nimport { defer, merge, Observable, Subject } from 'rxjs';\nimport {\n    filter,\n    map,\n    startWith,\n    switchMap,\n    take,\n    takeUntil,\n    distinctUntilChanged\n} from 'rxjs/operators';\n\nimport {\n    getMcSelectDynamicMultipleError,\n    getMcSelectNonArrayValueError,\n    getMcSelectNonFunctionValueError\n} from './select-errors';\n\nimport { mcSelectAnimations } from './select-animations';\n\n\nlet nextUniqueId = 0;\n\n/**\n * The following style constants are necessary to save here in order\n * to properly calculate the alignment of the selected option over\n * the trigger element.\n */\n\n/** The max height of the select's overlay panel */\nexport const SELECT_PANEL_MAX_HEIGHT = 224;\n\n/** The panel's padding on the x-axis */\nexport const SELECT_PANEL_PADDING_X = 1;\n\n/** The panel's x axis padding if it is indented (e.g. there is an option group). */\n/* tslint:disable-next-line:no-magic-numbers */\nexport const SELECT_PANEL_INDENT_PADDING_X = SELECT_PANEL_PADDING_X * 2;\n\n/** The height of the select items in `em` units. */\nexport const SELECT_ITEM_HEIGHT_EM = 2;\n\n/**\n * The select panel will only \"fit\" inside the viewport if it is positioned at\n * this value or more away from the viewport boundary.\n */\nexport const SELECT_PANEL_VIEWPORT_PADDING = 8;\n\n/** Injection token that determines the scroll handling while a select is open. */\nexport const MC_SELECT_SCROLL_STRATEGY =\n    new InjectionToken<() => IScrollStrategy>('mc-select-scroll-strategy');\n\n/** @docs-private */\nexport function MC_SELECT_SCROLL_STRATEGY_PROVIDER_FACTORY(overlay: Overlay):\n    () => RepositionScrollStrategy {\n    return () => overlay.scrollStrategies.reposition();\n}\n\n/** @docs-private */\nexport const MC_SELECT_SCROLL_STRATEGY_PROVIDER = {\n    provide: MC_SELECT_SCROLL_STRATEGY,\n    deps: [Overlay],\n    useFactory: MC_SELECT_SCROLL_STRATEGY_PROVIDER_FACTORY\n};\n\n/** Change event object that is emitted when the select value has changed. */\nexport class McSelectChange {\n    constructor(\n        /** Reference to the select that emitted the change event. */\n        public source: McSelect,\n        /** Current value of the select that emitted the event. */\n        public value: any) {\n    }\n}\n\n// Boilerplate for applying mixins to McSelect.\n/** @docs-private */\nexport class McSelectBase {\n    constructor(\n        public _elementRef: ElementRef,\n        public _defaultErrorStateMatcher: ErrorStateMatcher,\n        public _parentForm: NgForm,\n        public _parentFormGroup: FormGroupDirective,\n        public ngControl: NgControl\n    ) {}\n}\n\nexport const _McSelectMixinBase:\n    CanDisableCtor &\n    HasTabIndexCtor &\n    CanUpdateErrorStateCtor & typeof McSelectBase\n    = mixinTabIndex(mixinDisabled(mixinErrorState(McSelectBase)));\n\n\n/**\n * Allows the user to customize the trigger that is displayed when the select has a value.\n */\n@Directive({ selector: 'mc-select-trigger' })\nexport class McSelectTrigger {}\n\n\n@Component({\n    selector: 'mc-select',\n    exportAs: 'mcSelect',\n    templateUrl: 'select.html',\n    styleUrls: ['./select.css'],\n    inputs: ['disabled', 'tabIndex'],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    host: {\n        '[attr.id]': 'id',\n        '[attr.tabindex]': 'tabIndex',\n        class: 'mc-select',\n        '[class.mc-disabled]': 'disabled',\n        '[class.mc-select-invalid]': 'errorState',\n        '[class.mc-select-required]': 'required',\n        '(keydown)': '_handleKeydown($event)',\n        '(focus)': '_onFocus()',\n        '(blur)': '_onBlur()',\n        '(window:resize)': '_calculateHiddenItems()'\n    },\n    animations: [\n        mcSelectAnimations.transformPanel,\n        mcSelectAnimations.fadeInContent\n    ],\n    providers: [\n        { provide: McFormFieldControl, useExisting: McSelect },\n        { provide: MC_OPTION_PARENT_COMPONENT, useExisting: McSelect }\n    ]\n})\nexport class McSelect extends _McSelectMixinBase implements\n    AfterContentInit, AfterViewInit, OnChanges, OnDestroy, OnInit, DoCheck, ControlValueAccessor, CanDisable,\n    HasTabIndex, McFormFieldControl<any>, CanUpdateErrorState {\n\n    /** The last measured value for the trigger's client bounding rect. */\n    _triggerRect: ClientRect;\n\n    /** The cached font-size of the trigger element. */\n    _triggerFontSize = 0;\n\n    /** Deals with the selection logic. */\n    _selectionModel: SelectionModel<McOption>;\n\n    /** Manages keyboard events for options in the panel. */\n    _keyManager: ActiveDescendantKeyManager<McOption>;\n\n    /** The IDs of child options to be passed to the aria-owns attribute. */\n    _optionIds: string = '';\n\n    /** The value of the select panel's transform-origin property. */\n    _transformOrigin: string = 'top';\n\n    /** Whether the panel's animation is done. */\n    _panelDoneAnimating: boolean = false;\n\n    /** Emits when the panel element is finished transforming in. */\n    _panelDoneAnimatingStream = new Subject<string>();\n\n    /** Strategy that will be used to handle scrolling while the select panel is open. */\n    _scrollStrategy = this._scrollStrategyFactory();\n\n    /**\n     * The y-offset of the overlay panel in relation to the trigger's top start corner.\n     * This must be adjusted to align the selected option text over the trigger text.\n     * when the panel opens. Will change based on the y-position of the selected option.\n     */\n    _offsetY = 0;\n\n    /**\n     * This position config ensures that the top \"start\" corner of the overlay\n     * is aligned with with the top \"start\" of the origin by default (overlapping\n     * the trigger completely). If the panel cannot fit below the trigger, it\n     * will fall back to a position above the trigger.\n     */\n    _positions = [\n        {\n            originX: 'start',\n            originY: 'bottom',\n            overlayX: 'start',\n            overlayY: 'top'\n        },\n        {\n            originX: 'start',\n            originY: 'top',\n            overlayX: 'start',\n            overlayY: 'bottom'\n        }\n    ];\n\n    /** Whether the select is focused. */\n    get focused(): boolean {\n        return this._focused || this._panelOpen;\n    }\n\n    /**\n     * @deprecated Setter to be removed as this property is intended to be readonly.\n     * @breaking-change 8.0.0\n     */\n    set focused(value: boolean) {\n        this._focused = value;\n    }\n\n    /** A name for this control that can be used by `mc-form-field`. */\n    controlType = 'mc-select';\n\n    @ViewChild('trigger') trigger: ElementRef;\n    @ViewChildren(McTag) tags: QueryList<McTag>;\n\n    @ViewChild('panel') panel: ElementRef;\n\n    /** Overlay pane containing the options. */\n    @ViewChild(CdkConnectedOverlay) overlayDir: CdkConnectedOverlay;\n\n    /** All of the defined select options. */\n    @ContentChildren(McOption, { descendants: true }) options: QueryList<McOption>;\n\n    /** All of the defined groups of options. */\n    @ContentChildren(McOptgroup) optionGroups: QueryList<McOptgroup>;\n\n    /** Classes to be passed to the select panel. Supports the same syntax as `ngClass`. */\n    @Input() panelClass: string | string[] | Set<string> | { [key: string]: any };\n\n    /** User-supplied override of the trigger element. */\n    @ContentChild(McSelectTrigger) customTrigger: McSelectTrigger;\n\n    /** Placeholder to be shown if no value has been selected. */\n    @Input()\n    get placeholder(): string {\n        return this._placeholder;\n    }\n\n    set placeholder(value: string) {\n        this._placeholder = value;\n        this.stateChanges.next();\n    }\n\n    /** Whether the component is required. */\n    @Input()\n    get required(): boolean {\n        return this._required;\n    }\n\n    set required(value: boolean) {\n        this._required = coerceBooleanProperty(value);\n        this.stateChanges.next();\n    }\n\n    /** Whether the user should be allowed to select multiple options. */\n    @Input()\n    get multiple(): boolean {\n        return this._multiple;\n    }\n\n    set multiple(value: boolean) {\n        if (this._selectionModel) {\n            throw getMcSelectDynamicMultipleError();\n        }\n\n        this._multiple = coerceBooleanProperty(value);\n    }\n\n    /**\n     * Function to compare the option values with the selected values. The first argument\n     * is a value from an option. The second is a value from the selection. A boolean\n     * should be returned.\n     */\n    @Input()\n    get compareWith() {\n        return this._compareWith;\n    }\n\n    set compareWith(fn: (o1: any, o2: any) => boolean) {\n        /* tslint:disable-next-line:strict-type-predicates */\n        if (typeof fn !== 'function') {\n            throw getMcSelectNonFunctionValueError();\n        }\n\n        this._compareWith = fn;\n\n        if (this._selectionModel) {\n            // A different comparator means the selection could change.\n            this._initializeSelection();\n        }\n    }\n\n    /** Value of the select control. */\n    @Input()\n    get value(): any {\n        return this._value;\n    }\n\n    set value(newValue: any) {\n        if (newValue !== this._value) {\n            this.writeValue(newValue);\n            this._value = newValue;\n        }\n    }\n\n    /** Object used to control when error messages are shown. */\n    @Input() errorStateMatcher: ErrorStateMatcher;\n\n    /**\n     * Function used to sort the values in a select in multiple mode.\n     * Follows the same logic as `Array.prototype.sort`.\n     */\n    @Input() sortComparator: (a: McOption, b: McOption, options: McOption[]) => number;\n\n    @Input()\n    get id(): string {\n        return this._id;\n    }\n\n    set id(value: string) {\n        this._id = value || this._uid;\n        this.stateChanges.next();\n    }\n\n    /** Combined stream of all of the child options' change events. */\n    readonly optionSelectionChanges: Observable<McOptionSelectionChange> = defer(() => {\n        if (this.options) {\n            return merge(...this.options.map((option) => option.onSelectionChange));\n        }\n\n        return this._ngZone.onStable\n            .asObservable()\n            .pipe(take(1), switchMap(() => this.optionSelectionChanges));\n    });\n\n    /** Event emitted when the select panel has been toggled. */\n    @Output() readonly openedChange: EventEmitter<boolean> = new EventEmitter<boolean>();\n\n    /** Event emitted when the select has been opened. */\n    @Output('opened') readonly _openedStream: Observable<void> =\n        this.openedChange.pipe(filter((o) => o), map(() => {}));\n\n    /** Event emitted when the select has been closed. */\n    @Output('closed') readonly _closedStream: Observable<void> =\n        this.openedChange.pipe(filter((o) => !o), map(() => {}));\n\n    /** Event emitted when the selected value has been changed by the user. */\n    @Output() readonly selectionChange: EventEmitter<McSelectChange> = new EventEmitter<McSelectChange>();\n\n    /**\n     * Event that emits whenever the raw value of the select changes. This is here primarily\n     * to facilitate the two-way binding for the `value` input.\n     * @docs-private\n     */\n    @Output() readonly valueChange: EventEmitter<any> = new EventEmitter<any>();\n\n    hiddenItems: number = 0;\n    oneMoreText: string = '...ещё';\n\n    /** Whether or not the overlay panel is open. */\n    private _panelOpen = false;\n\n    /** Whether filling out the select is required in the form. */\n    private _required: boolean = false;\n\n    /** The scroll position of the overlay panel, calculated to center the selected option. */\n    private _scrollTop = 0;\n\n    /** The placeholder displayed in the trigger of the select. */\n    private _placeholder: string;\n\n    /** Whether the component is in multiple selection mode. */\n    private _multiple: boolean = false;\n\n    /** Unique id for this input. */\n    private readonly _uid = `mc-select-${nextUniqueId++}`;\n\n    /** Emits whenever the component is destroyed. */\n    private readonly _destroy = new Subject<void>();\n\n    private _focused = false;\n\n    private _value: any;\n\n    private _id: string;\n\n    constructor(\n        private readonly _viewportRuler: ViewportRuler,\n        private readonly _changeDetectorRef: ChangeDetectorRef,\n        private readonly _ngZone: NgZone,\n        private readonly _renderer: Renderer2,\n        _defaultErrorStateMatcher: ErrorStateMatcher,\n        elementRef: ElementRef,\n        @Optional() private readonly _dir: Directionality,\n        @Optional() _parentForm: NgForm,\n        @Optional() _parentFormGroup: FormGroupDirective,\n        @Optional() private readonly _parentFormField: McFormField,\n        @Self() @Optional() public ngControl: NgControl,\n        @Attribute('tabindex') tabIndex: string,\n        @Inject(MC_SELECT_SCROLL_STRATEGY) private readonly _scrollStrategyFactory\n    ) {\n        super(elementRef, _defaultErrorStateMatcher, _parentForm, _parentFormGroup, ngControl);\n\n        if (this.ngControl) {\n            // Note: we provide the value accessor through here, instead of\n            // the `providers` to avoid running into a circular import.\n            this.ngControl.valueAccessor = this;\n        }\n\n        this.tabIndex = parseInt(tabIndex) || 0;\n\n        // Force setter to be called in case id was not specified.\n        this.id = this.id;\n    }\n\n    ngOnInit() {\n        this._selectionModel = new SelectionModel<McOption>(this.multiple);\n        this.stateChanges.next();\n\n        // We need `distinctUntilChanged` here, because some browsers will\n        // fire the animation end event twice for the same animation. See:\n        // https://github.com/angular/angular/issues/24084\n        this._panelDoneAnimatingStream\n            .pipe(distinctUntilChanged(), takeUntil(this._destroy))\n            .subscribe(() => {\n                if (this.panelOpen) {\n                    this._scrollTop = 0;\n                    this.openedChange.emit(true);\n                } else {\n                    this.openedChange.emit(false);\n                    this._panelDoneAnimating = false;\n                    this.overlayDir.offsetX = 0;\n                    this._changeDetectorRef.markForCheck();\n                }\n            });\n    }\n\n    ngAfterContentInit() {\n        this._initKeyManager();\n\n        this._selectionModel.onChange!\n            .pipe(takeUntil(this._destroy))\n            .subscribe((event) => {\n                event.added.forEach((option) => option.select());\n                event.removed.forEach((option) => option.deselect());\n            });\n\n        this.options.changes\n            .pipe(startWith(null), takeUntil(this._destroy))\n            .subscribe(() => {\n                this._resetOptions();\n                this._initializeSelection();\n            });\n    }\n\n    ngAfterViewInit(): void {\n        this.tags.changes\n            .subscribe(() => {\n                setTimeout(() => this._calculateHiddenItems(), 0);\n            });\n    }\n\n    ngDoCheck() {\n        if (this.ngControl) { this.updateErrorState(); }\n    }\n\n    ngOnChanges(changes: SimpleChanges) {\n        // Updating the disabled state is handled by `mixinDisabled`, but we need to additionally let\n        // the parent form field know to run change detection when the disabled state changes.\n        if (changes.disabled) {\n            this.stateChanges.next();\n        }\n    }\n\n    ngOnDestroy() {\n        this._destroy.next();\n        this._destroy.complete();\n        this.stateChanges.complete();\n    }\n\n    /** `View -> model callback called when value changes` */\n    _onChange: (value: any) => void = () => {};\n\n    /** `View -> model callback called when select has been touched` */\n    _onTouched = () => {};\n\n    /** Toggles the overlay panel open or closed. */\n    toggle(): void {\n        if (this.panelOpen) {\n            this.close();\n        } else {\n            this.open();\n        }\n    }\n\n    /** Opens the overlay panel. */\n    open(): void {\n        if (this.disabled || !this.options || !this.options.length || this._panelOpen) { return; }\n\n        this._triggerRect = this.trigger.nativeElement.getBoundingClientRect();\n        // Note: The computed font-size will be a string pixel value (e.g. \"16px\").\n        // `parseInt` ignores the trailing 'px' and converts this to a number.\n        this._triggerFontSize = parseInt(getComputedStyle(this.trigger.nativeElement)['font-size']);\n\n        this._panelOpen = true;\n        this._keyManager.withHorizontalOrientation(null);\n        this._calculateOverlayPosition();\n        this._highlightCorrectOption();\n        this._changeDetectorRef.markForCheck();\n\n        // Set the font size on the panel element once it exists.\n        this._ngZone.onStable.asObservable()\n            .pipe(take(1))\n            .subscribe(() => {\n                if (this._triggerFontSize && this.overlayDir.overlayRef &&\n                    this.overlayDir.overlayRef.overlayElement) {\n                    this.overlayDir.overlayRef.overlayElement.style.fontSize = `${this._triggerFontSize}px`;\n                }\n            });\n    }\n\n    /** Closes the overlay panel and focuses the host element. */\n    close(): void {\n        if (this._panelOpen) {\n            this._panelOpen = false;\n            this._keyManager.withHorizontalOrientation(this._isRtl() ? 'rtl' : 'ltr');\n            this._changeDetectorRef.markForCheck();\n            this._onTouched();\n        }\n    }\n\n    /**\n     * Sets the select's value. Part of the ControlValueAccessor interface\n     * required to integrate with Angular's core forms API.\n     *\n     * @param value New value to be written to the model.\n     */\n    writeValue(value: any): void {\n        if (this.options) {\n            this._setSelectionByValue(value);\n        }\n    }\n\n    /**\n     * Saves a callback function to be invoked when the select's value\n     * changes from user input. Part of the ControlValueAccessor interface\n     * required to integrate with Angular's core forms API.\n     *\n     * @param fn Callback to be triggered when the value changes.\n     */\n    registerOnChange(fn: (value: any) => void): void {\n        this._onChange = fn;\n    }\n\n    /**\n     * Saves a callback function to be invoked when the select is blurred\n     * by the user. Part of the ControlValueAccessor interface required\n     * to integrate with Angular's core forms API.\n     *\n     * @param fn Callback to be triggered when the component has been touched.\n     */\n    registerOnTouched(fn: () => {}): void {\n        this._onTouched = fn;\n    }\n\n    /**\n     * Disables the select. Part of the ControlValueAccessor interface required\n     * to integrate with Angular's core forms API.\n     *\n     * @param isDisabled Sets whether the component is disabled.\n     */\n    setDisabledState(isDisabled: boolean): void {\n        this.disabled = isDisabled;\n        this._changeDetectorRef.markForCheck();\n        this.stateChanges.next();\n    }\n\n    get panelOpen(): boolean {\n        return this._panelOpen;\n    }\n\n    get selected(): McOption | McOption[] {\n        return this.multiple ? this._selectionModel.selected : this._selectionModel.selected[0];\n    }\n\n    get triggerValue(): string {\n        if (this.empty) { return ''; }\n\n        if (this._multiple) {\n            const selectedOptions = this._selectionModel.selected.map((option) => option.viewValue);\n\n            if (this._isRtl()) { selectedOptions.reverse(); }\n\n            return selectedOptions.join(', ');\n        }\n\n        return this._selectionModel.selected[0].viewValue;\n    }\n\n    get triggerValues(): McOption[] {\n        if (this.empty) { return []; }\n\n        if (this._multiple) {\n            const selectedOptions = this._selectionModel.selected;\n\n            if (this._isRtl()) { selectedOptions.reverse(); }\n\n            return selectedOptions;\n        }\n\n        return [this._selectionModel.selected[0]];\n    }\n\n    get empty(): boolean {\n        return !this._selectionModel || this._selectionModel.isEmpty();\n    }\n\n    _isRtl(): boolean {\n        return this._dir ? this._dir.value === 'rtl' : false;\n    }\n\n    _handleKeydown(event: KeyboardEvent): void {\n        if (!this.disabled) {\n            if (this.panelOpen) {\n                this._handleOpenKeydown(event);\n            } else {\n                this._handleClosedKeydown(event);\n            }\n        }\n    }\n\n    /**\n     * When the panel content is done fading in, the _panelDoneAnimating property is\n     * set so the proper class can be added to the panel.\n     */\n    _onFadeInDone(): void {\n        this._panelDoneAnimating = this.panelOpen;\n        this._changeDetectorRef.markForCheck();\n    }\n\n    _onFocus() {\n        if (!this.disabled) {\n            this._focused = true;\n            this.stateChanges.next();\n        }\n    }\n\n    /**\n     * Calls the touched callback only if the panel is closed. Otherwise, the trigger will\n     * \"blur\" to the panel when it opens, causing a false positive.\n     */\n    _onBlur() {\n        this._focused = false;\n\n        if (!this.disabled && !this.panelOpen) {\n            this._onTouched();\n            this._changeDetectorRef.markForCheck();\n            this.stateChanges.next();\n        }\n    }\n\n    /**\n     * Callback that is invoked when the overlay panel has been attached.\n     */\n    _onAttached(): void {\n        this.overlayDir.positionChange\n            .pipe(take(1))\n            .subscribe(() => {\n                this._changeDetectorRef.detectChanges();\n                this._calculateOverlayOffsetX();\n                this.panel.nativeElement.scrollTop = this._scrollTop;\n            });\n    }\n\n    /** Returns the theme to be used on the panel. */\n    _getPanelTheme(): string {\n        return this._parentFormField ? `mc-${this._parentFormField.color}` : '';\n    }\n\n    /** Focuses the select element. */\n    focus(): void {\n        this._elementRef.nativeElement.focus();\n    }\n\n    /**\n     * Calculates the scroll position of the select's overlay panel.\n     *\n     * Attempts to center the selected option in the panel. If the option is\n     * too high or too low in the panel to be scrolled to the center, it clamps the\n     * scroll position to the min or max scroll positions respectively.\n     */\n    _calculateOverlayScroll(selectedIndex: number, scrollBuffer: number, maxScroll: number): number {\n        const itemHeight = this._getItemHeight();\n        const optionOffsetFromScrollTop = itemHeight * selectedIndex;\n\n        /* tslint:disable-next-line:no-magic-numbers */\n        const halfOptionHeight = itemHeight / 2;\n\n        // Starts at the optionOffsetFromScrollTop, which scrolls the option to the top of the\n        // scroll container, then subtracts the scroll buffer to scroll the option down to\n        // the center of the overlay panel. Half the option height must be re-added to the\n        // scrollTop so the option is centered based on its middle, not its top edge.\n        const optimalScrollPosition = optionOffsetFromScrollTop - scrollBuffer + halfOptionHeight;\n\n        return Math.min(Math.max(0, optimalScrollPosition), maxScroll);\n    }\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    onContainerClick() {\n        this.focus();\n        this.open();\n    }\n\n    /** Invoked when an option is clicked. */\n    onRemoveMatcherItem(option: McOption, $event): void {\n        $event.stopPropagation();\n\n        option.deselect();\n    }\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    get shouldLabelFloat(): boolean {\n        return this._panelOpen || !this.empty;\n    }\n\n    _calculateHiddenItems(): void {\n        if (this.empty) { return; }\n\n        let visibleItems: number = 0;\n        const totalItemsWidth = this._getTotalItemsWidthInMatcher();\n        let totalVisibleItemsWidth: number = 0;\n        const itemMargin: number = 4;\n\n        this.tags.forEach((tag) => {\n            if (tag.nativeElement.offsetTop < tag.nativeElement.offsetHeight) {\n                totalVisibleItemsWidth += tag.nativeElement.getBoundingClientRect().width + itemMargin;\n                visibleItems++;\n            }\n        });\n\n        this.hiddenItems = (this.selected as ArrayLike<McOption>).length - visibleItems;\n\n        if (this.hiddenItems) {\n            const itemsCounter = this.trigger.nativeElement.querySelector('.mc-select__match-hidden-text');\n            const matcherList = this.trigger.nativeElement.querySelector('.mc-select__match-list');\n\n            const itemsCounterShowed = itemsCounter.offsetTop < itemsCounter.offsetHeight;\n            // const itemsCounterWidth: number = itemsCounter.getBoundingClientRect().width;\n            const itemsCounterWidth: number = 86;\n\n            const matcherListWidth: number = matcherList.getBoundingClientRect().width;\n            const matcherWidth: number = matcherListWidth + itemsCounterWidth;\n\n            if (itemsCounterShowed && (totalItemsWidth < matcherWidth)) { this.hiddenItems = 0; }\n\n            if (\n                totalVisibleItemsWidth === matcherListWidth ||\n                (totalVisibleItemsWidth + itemsCounterWidth) < matcherListWidth\n            ) {\n                this._changeDetectorRef.markForCheck();\n\n                return ;\n            } else if (!itemsCounterShowed && (totalItemsWidth + itemsCounterWidth) > matcherWidth) {\n                this.hiddenItems++;\n            }\n        }\n\n        this._changeDetectorRef.markForCheck();\n    }\n\n    private _getTotalItemsWidthInMatcher(): number {\n        const triggerClone = this.trigger.nativeElement.cloneNode(true);\n        triggerClone.querySelector('.mc-select__match-hidden-text').remove();\n\n        this._renderer.setStyle(triggerClone, 'position', 'absolute');\n        this._renderer.setStyle(triggerClone, 'visibility', 'hidden');\n        this._renderer.setStyle(triggerClone, 'top', '-100%');\n        this._renderer.setStyle(triggerClone, 'left', '0');\n\n        this._renderer.appendChild(this.trigger.nativeElement, triggerClone);\n\n        let totalItemsWidth: number = 0;\n        const itemMargin: number = 4;\n        triggerClone.querySelectorAll('mc-tag').forEach((item) => {\n            totalItemsWidth += item.getBoundingClientRect().width as number + itemMargin;\n        });\n\n        triggerClone.remove();\n\n        return totalItemsWidth;\n    }\n\n    /** Handles keyboard events while the select is closed. */\n    private _handleClosedKeydown(event: KeyboardEvent): void {\n        /* tslint:disable-next-line */\n        const keyCode = event.keyCode;\n        const isArrowKey = keyCode === DOWN_ARROW || keyCode === UP_ARROW ||\n            keyCode === LEFT_ARROW || keyCode === RIGHT_ARROW;\n        const isOpenKey = keyCode === ENTER || keyCode === SPACE;\n\n        // Open the select on ALT + arrow key to match the native <select>\n        if (isOpenKey || ((this.multiple || event.altKey) && isArrowKey)) {\n            event.preventDefault(); // prevents the page from scrolling down when pressing space\n            this.open();\n        } else if (!this.multiple) {\n            this._keyManager.onKeydown(event);\n        }\n    }\n\n    /** Handles keyboard events when the selected is open. */\n    private _handleOpenKeydown(event: KeyboardEvent): void {\n        /* tslint:disable-next-line */\n        const keyCode = event.keyCode;\n        const isArrowKey = keyCode === DOWN_ARROW || keyCode === UP_ARROW;\n        const manager = this._keyManager;\n\n        if (keyCode === HOME || keyCode === END) {\n            event.preventDefault();\n\n            if (keyCode === HOME) {\n                manager.setFirstItemActive();\n            } else {\n                manager.setLastItemActive();\n            }\n\n        } else if (isArrowKey && event.altKey) {\n            // Close the select on ALT + arrow key to match the native <select>\n            event.preventDefault();\n            this.close();\n        } else if ((keyCode === ENTER || keyCode === SPACE) && manager.activeItem) {\n            event.preventDefault();\n            manager.activeItem._selectViaInteraction();\n        } else if (this._multiple && keyCode === A && event.ctrlKey) {\n            event.preventDefault();\n            const hasDeselectedOptions = this.options.some((option) => !option.selected);\n            this.options.forEach((option) => {\n                if (hasDeselectedOptions && !option.disabled) {\n                    option.select();\n                } else {\n                    option.deselect();\n                }\n            });\n        } else {\n            const previouslyFocusedIndex = manager.activeItemIndex;\n\n            manager.onKeydown(event);\n\n            if (this._multiple && isArrowKey && event.shiftKey && manager.activeItem &&\n                manager.activeItemIndex !== previouslyFocusedIndex) {\n                manager.activeItem._selectViaInteraction();\n            }\n        }\n    }\n\n    private _initializeSelection(): void {\n        // Defer setting the value in order to avoid the \"Expression\n        // has changed after it was checked\" errors from Angular.\n        Promise.resolve().then(() => {\n            this._setSelectionByValue(this.ngControl ? this.ngControl.value : this._value);\n        });\n    }\n\n    /**\n     * Sets the selected option based on a value. If no option can be\n     * found with the designated value, the select trigger is cleared.\n     */\n    private _setSelectionByValue(value: any | any[]): void {\n        if (this.multiple && value) {\n            if (!Array.isArray(value)) {\n                throw getMcSelectNonArrayValueError();\n            }\n\n            this._selectionModel.clear();\n            value.forEach((currentValue: any) => this._selectValue(currentValue));\n            this._sortValues();\n        } else {\n            this._selectionModel.clear();\n            const correspondingOption = this._selectValue(value);\n\n            // Shift focus to the active item. Note that we shouldn't do this in multiple\n            // mode, because we don't know what option the user interacted with last.\n            if (correspondingOption) {\n                this._keyManager.setActiveItem(correspondingOption);\n            }\n        }\n\n        this._changeDetectorRef.markForCheck();\n    }\n\n    /**\n     * Finds and selects and option based on its value.\n     * @returns Option that has the corresponding value.\n     */\n    private _selectValue(value: any): McOption | undefined {\n        const correspondingOption = this.options.find((option: McOption) => {\n            try {\n                // Treat null as a special reset value.\n                return option.value != null && this._compareWith(option.value, value);\n            } catch (error) {\n                if (isDevMode()) {\n                    // Notify developers of errors in their comparator.\n                    console.warn(error);\n                }\n\n                return false;\n            }\n        });\n\n        if (correspondingOption) {\n            this._selectionModel.select(correspondingOption);\n        }\n\n        return correspondingOption;\n    }\n\n    /** Sets up a key manager to listen to keyboard events on the overlay panel. */\n    private _initKeyManager() {\n        this._keyManager = new ActiveDescendantKeyManager<McOption>(this.options)\n            .withTypeAhead()\n            .withVerticalOrientation()\n            .withHorizontalOrientation(this._isRtl() ? 'rtl' : 'ltr');\n\n        this._keyManager.tabOut\n            .pipe(takeUntil(this._destroy))\n            .subscribe(() => {\n                // Restore focus to the trigger before closing. Ensures that the focus\n                // position won't be lost if the user got focus into the overlay.\n                this.focus();\n                this.close();\n            });\n\n        this._keyManager.change\n            .pipe(takeUntil(this._destroy))\n            .subscribe(() => {\n                if (this._panelOpen && this.panel) {\n                    this._scrollActiveOptionIntoView();\n                } else if (!this._panelOpen && !this.multiple && this._keyManager.activeItem) {\n                    this._keyManager.activeItem._selectViaInteraction();\n                }\n            });\n    }\n\n    /** Drops current option subscriptions and IDs and resets from scratch. */\n    private _resetOptions(): void {\n        const changedOrDestroyed = merge(this.options.changes, this._destroy);\n\n        this.optionSelectionChanges\n            .pipe(takeUntil(changedOrDestroyed))\n            .subscribe((event) => {\n                this._onSelect(event.source, event.isUserInput);\n\n                if (event.isUserInput && !this.multiple && this._panelOpen) {\n                    this.close();\n                    this.focus();\n                }\n            });\n\n        // Listen to changes in the internal state of the options and react accordingly.\n        // Handles cases like the labels of the selected options changing.\n        merge(...this.options.map((option) => option._stateChanges))\n            .pipe(takeUntil(changedOrDestroyed))\n            .subscribe(() => {\n                this._changeDetectorRef.markForCheck();\n                this.stateChanges.next();\n            });\n\n        this._setOptionIds();\n    }\n\n    /** Invoked when an option is clicked. */\n    private _onSelect(option: McOption, isUserInput: boolean): void {\n        const wasSelected = this._selectionModel.isSelected(option);\n\n        if (option.value == null && !this._multiple) {\n            option.deselect();\n            this._selectionModel.clear();\n            this._propagateChanges(option.value);\n        } else {\n            if (option.selected) {\n                this._selectionModel.select(option);\n            } else {\n                this._selectionModel.deselect(option);\n            }\n\n            if (isUserInput) {\n                this._keyManager.setActiveItem(option);\n            }\n\n            if (this.multiple) {\n                this._sortValues();\n\n                if (isUserInput) {\n                    // In case the user selected the option with their mouse, we\n                    // want to restore focus back to the trigger, in order to\n                    // prevent the select keyboard controls from clashing with\n                    // the ones from `mc-option`.\n                    this.focus();\n                }\n            }\n        }\n\n        if (wasSelected !== this._selectionModel.isSelected(option)) {\n            this._propagateChanges();\n        }\n\n        this.stateChanges.next();\n    }\n\n    /** Sorts the selected values in the selected based on their order in the panel. */\n    private _sortValues() {\n        if (this.multiple) {\n            const options = this.options.toArray();\n\n            this._selectionModel.sort((a, b) => {\n                return this.sortComparator ? this.sortComparator(a, b, options) :\n                    options.indexOf(a) - options.indexOf(b);\n            });\n            this.stateChanges.next();\n        }\n    }\n\n    /** Emits change event to set the model value. */\n    private _propagateChanges(fallbackValue?: any): void {\n        let valueToEmit: any = null;\n\n        if (this.multiple) {\n            valueToEmit = (this.selected as McOption[]).map((option) => option.value);\n        } else {\n            valueToEmit = this.selected ? (this.selected as McOption).value : fallbackValue;\n        }\n\n        this._value = valueToEmit;\n        this.valueChange.emit(valueToEmit);\n        this._onChange(valueToEmit);\n        this.selectionChange.emit(new McSelectChange(this, valueToEmit));\n        this._changeDetectorRef.markForCheck();\n    }\n\n    /** Records option IDs to pass to the aria-owns property. */\n    private _setOptionIds() {\n        this._optionIds = this.options.map((option) => option.id).join(' ');\n    }\n\n    /**\n     * Highlights the selected item. If no option is selected, it will highlight\n     * the first item instead.\n     */\n    private _highlightCorrectOption(): void {\n        if (this._keyManager) {\n            if (this.empty) {\n                this._keyManager.setFirstItemActive();\n            } else {\n                this._keyManager.setActiveItem(this._selectionModel.selected[0]);\n            }\n        }\n    }\n\n    /** Scrolls the active option into view. */\n    private _scrollActiveOptionIntoView(): void {\n        const activeOptionIndex = this._keyManager.activeItemIndex || 0;\n        const labelCount = _countGroupLabelsBeforeOption(activeOptionIndex, this.options, this.optionGroups);\n\n        this.panel.nativeElement.scrollTop = _getOptionScrollPosition(\n            activeOptionIndex + labelCount,\n            this._getItemHeight(),\n            this.panel.nativeElement.scrollTop,\n            SELECT_PANEL_MAX_HEIGHT\n        );\n    }\n\n    /** Gets the index of the provided option in the option list. */\n    private _getOptionIndex(option: McOption): number | undefined {\n        /* tslint:disable-next-line */\n        return this.options.reduce((result: number, current: McOption, index: number) => {\n            /* tslint:disable-next-line:strict-type-predicates */\n            return result === undefined ? (option === current ? index : undefined) : result;\n        }, undefined);\n    }\n\n    /** Calculates the scroll position and x- and y-offsets of the overlay panel. */\n    private _calculateOverlayPosition(): void {\n        const itemHeight = this._getItemHeight();\n        const items = this._getItemCount();\n        const panelHeight = Math.min(items * itemHeight, SELECT_PANEL_MAX_HEIGHT);\n        const scrollContainerHeight = items * itemHeight;\n\n        // The farthest the panel can be scrolled before it hits the bottom\n        const maxScroll = scrollContainerHeight - panelHeight;\n\n        // If no value is selected we open the popup to the first item.\n        let selectedOptionOffset =\n            this.empty ? 0 : this._getOptionIndex(this._selectionModel.selected[0])!;\n\n        selectedOptionOffset += _countGroupLabelsBeforeOption(selectedOptionOffset, this.options,\n            this.optionGroups);\n\n        // We must maintain a scroll buffer so the selected option will be scrolled to the\n        // center of the overlay panel rather than the top.\n        /* tslint:disable-next-line:no-magic-numbers */\n        const scrollBuffer = panelHeight / 2;\n        this._scrollTop = this._calculateOverlayScroll(selectedOptionOffset, scrollBuffer, maxScroll);\n        this._offsetY = this._calculateOverlayOffsetY();\n\n        this._checkOverlayWithinViewport(maxScroll);\n    }\n\n    /**\n     * Sets the x-offset of the overlay panel in relation to the trigger's top start corner.\n     * This must be adjusted to align the selected option text over the trigger text when\n     * the panel opens. Will change based on LTR or RTL text direction. Note that the offset\n     * can't be calculated until the panel has been attached, because we need to know the\n     * content width in order to constrain the panel within the viewport.\n     */\n    private _calculateOverlayOffsetX(): void {\n        const overlayRect = this.overlayDir.overlayRef.overlayElement.getBoundingClientRect();\n        const viewportSize = this._viewportRuler.getViewportSize();\n        const isRtl = this._isRtl();\n        /* tslint:disable-next-line:no-magic-numbers */\n        const paddingWidth = SELECT_PANEL_PADDING_X * 2;\n        let offsetX: number;\n\n        const selected = this._selectionModel.selected[0] || this.options.first;\n        offsetX = selected && selected.group ? SELECT_PANEL_INDENT_PADDING_X : SELECT_PANEL_PADDING_X;\n\n        // Invert the offset in LTR.\n        if (!isRtl) { offsetX *= -1; }\n\n        // Determine how much the select overflows on each side.\n        const leftOverflow = 0 - (overlayRect.left + offsetX - (isRtl ? paddingWidth : 0));\n        const rightOverflow = overlayRect.right + offsetX - viewportSize.width\n            + (isRtl ? 0 : paddingWidth);\n\n        // If the element overflows on either side, reduce the offset to allow it to fit.\n        if (leftOverflow > 0) {\n            offsetX += leftOverflow + SELECT_PANEL_VIEWPORT_PADDING;\n        } else if (rightOverflow > 0) {\n            offsetX -= rightOverflow + SELECT_PANEL_VIEWPORT_PADDING;\n        }\n\n        // Set the offset directly in order to avoid having to go through change detection and\n        // potentially triggering \"changed after it was checked\" errors. Round the value to avoid\n        // blurry content in some browsers.\n        this.overlayDir.offsetX = Math.round(offsetX);\n        this.overlayDir.overlayRef.updatePosition();\n    }\n\n    /**\n     * Calculates the y-offset of the select's overlay panel in relation to the\n     * top start corner of the trigger. It has to be adjusted in order for the\n     * selected option to be aligned over the trigger when the panel opens.\n     */\n    private _calculateOverlayOffsetY(): number {\n        // const itemHeight = this._getItemHeight();\n        // const optionHeightAdjustment = (itemHeight - this._triggerRect.height) / 2;\n\n        // todo I'm not sure that we will use it\n        return 0;\n        // return Math.round(-optionHeightAdjustment);\n    }\n\n    /**\n     * Checks that the attempted overlay position will fit within the viewport.\n     * If it will not fit, tries to adjust the scroll position and the associated\n     * y-offset so the panel can open fully on-screen. If it still won't fit,\n     * sets the offset back to 0 to allow the fallback position to take over.\n     */\n    private _checkOverlayWithinViewport(maxScroll: number): void {\n        const itemHeight = this._getItemHeight();\n        const viewportSize = this._viewportRuler.getViewportSize();\n\n        const topSpaceAvailable = this._triggerRect.top - SELECT_PANEL_VIEWPORT_PADDING;\n        const bottomSpaceAvailable =\n            viewportSize.height - this._triggerRect.bottom - SELECT_PANEL_VIEWPORT_PADDING;\n\n        const panelHeightTop = Math.abs(this._offsetY);\n        const totalPanelHeight =\n            Math.min(this._getItemCount() * itemHeight, SELECT_PANEL_MAX_HEIGHT);\n        const panelHeightBottom = totalPanelHeight - panelHeightTop - this._triggerRect.height;\n\n        if (panelHeightBottom > bottomSpaceAvailable) {\n            this._adjustPanelUp(panelHeightBottom, bottomSpaceAvailable);\n        } else if (panelHeightTop > topSpaceAvailable) {\n            this._adjustPanelDown(panelHeightTop, topSpaceAvailable, maxScroll);\n        } else {\n            this._transformOrigin = this._getOriginBasedOnOption();\n        }\n    }\n\n    /** Adjusts the overlay panel up to fit in the viewport. */\n    private _adjustPanelUp(panelHeightBottom: number, bottomSpaceAvailable: number) {\n        // Browsers ignore fractional scroll offsets, so we need to round.\n        const distanceBelowViewport = Math.round(panelHeightBottom - bottomSpaceAvailable);\n\n        // Scrolls the panel up by the distance it was extending past the boundary, then\n        // adjusts the offset by that amount to move the panel up into the viewport.\n        this._scrollTop -= distanceBelowViewport;\n        this._offsetY -= distanceBelowViewport;\n        this._transformOrigin = this._getOriginBasedOnOption();\n\n        // If the panel is scrolled to the very top, it won't be able to fit the panel\n        // by scrolling, so set the offset to 0 to allow the fallback position to take\n        // effect.\n        if (this._scrollTop <= 0) {\n            this._scrollTop = 0;\n            this._offsetY = 0;\n            this._transformOrigin = `50% bottom 0px`;\n        }\n    }\n\n    /** Adjusts the overlay panel down to fit in the viewport. */\n    private _adjustPanelDown(panelHeightTop: number, topSpaceAvailable: number, maxScroll: number) {\n        // Browsers ignore fractional scroll offsets, so we need to round.\n        const distanceAboveViewport = Math.round(panelHeightTop - topSpaceAvailable);\n\n        // Scrolls the panel down by the distance it was extending past the boundary, then\n        // adjusts the offset by that amount to move the panel down into the viewport.\n        this._scrollTop += distanceAboveViewport;\n        this._offsetY += distanceAboveViewport;\n        this._transformOrigin = this._getOriginBasedOnOption();\n\n        // If the panel is scrolled to the very bottom, it won't be able to fit the\n        // panel by scrolling, so set the offset to 0 to allow the fallback position\n        // to take effect.\n        if (this._scrollTop >= maxScroll) {\n            this._scrollTop = maxScroll;\n            this._offsetY = 0;\n            this._transformOrigin = `50% top 0px`;\n\n            return;\n        }\n    }\n\n    /** Sets the transform origin point based on the selected option. */\n    private _getOriginBasedOnOption(): string {\n        const itemHeight = this._getItemHeight();\n        /* tslint:disable-next-line:no-magic-numbers */\n        const optionHeightAdjustment = (itemHeight - this._triggerRect.height) / 2;\n        /* tslint:disable-next-line:no-magic-numbers */\n        const originY = Math.abs(this._offsetY) - optionHeightAdjustment + itemHeight / 2;\n\n        return `50% ${originY}px 0px`;\n    }\n\n    /** Calculates the amount of items in the select. This includes options and group labels. */\n    private _getItemCount(): number {\n        return this.options.length + this.optionGroups.length;\n    }\n\n    /** Calculates the height of the select's options. */\n    private _getItemHeight(): number {\n        /* tslint:disable-next-line:no-magic-numbers */\n        return 32;\n        // return this._triggerFontSize * SELECT_ITEM_HEIGHT_EM;\n    }\n\n    /** Comparison function to specify which option is displayed. Defaults to object equality. */\n    private _compareWith = (o1: any, o2: any) => o1 === o2;\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { OverlayModule } from '@ptsecurity/cdk/overlay';\nimport { McOptionModule } from '@ptsecurity/mosaic/core';\nimport { McFormFieldModule } from '@ptsecurity/mosaic/form-field';\nimport { McIconModule } from '@ptsecurity/mosaic/icon';\nimport { McTagModule } from '@ptsecurity/mosaic/tag';\n\nimport { MC_SELECT_SCROLL_STRATEGY_PROVIDER, McSelect, McSelectTrigger } from './select.component';\n\n\n@NgModule({\n    imports: [\n        CommonModule,\n        OverlayModule,\n        McOptionModule,\n        McIconModule,\n        McTagModule\n    ],\n    exports: [McFormFieldModule, McSelect, McSelectTrigger, McOptionModule, CommonModule],\n    declarations: [McSelect, McSelectTrigger],\n    providers: [MC_SELECT_SCROLL_STRATEGY_PROVIDER]\n})\nexport class McSelectModule {}\n","import {\n    ChangeDetectionStrategy,\n    Component,\n    Directive,\n    ElementRef,\n    Input,\n    NgZone, OnDestroy,\n    OnInit,\n    Renderer2,\n    ViewEncapsulation\n} from '@angular/core';\n\nimport { coerceBooleanProperty, coerceCssPixelValue, coerceNumberProperty } from '@ptsecurity/cdk/coercion';\n\n\ninterface IArea {\n    area: McSplitterAreaDirective;\n    index: number;\n    order: number;\n    initialSize: number;\n}\n\ninterface IPoint {\n    x: number;\n    y: number;\n}\n\n\nconst enum AttributeProperty {\n    Disabled = 'disabled'\n}\n\nconst enum Cursor {\n    Default = 'default',\n    ResizeColumn = 'col-resize',\n    ResizeRow = 'row-resize'\n}\n\nconst enum StyleProperty {\n    Cursor = 'cursor',\n    Flex = 'flex',\n    FlexBasis = 'flex-basis',\n    FlexDirection = 'flex-direction',\n    Height = 'height',\n    MaxWidth = 'max-width',\n    MinHeight = 'min-height',\n    MinWidth = 'minWidth',\n    OffsetHeight = 'offsetHeight',\n    OffsetWidth = 'offsetWidth',\n    Order = 'order',\n    Width = 'width'\n}\n\nconst enum State {\n    Disabled = 'disabled',\n    Horizontal = 'horizontal',\n    Vertical = 'vertical'\n}\n\nexport const enum Direction {\n    Horizontal = 'horizontal',\n    Vertical = 'vertical'\n}\n\n@Component({\n    selector: 'mc-splitter',\n    preserveWhitespaces: false,\n    styleUrls: ['splitter.css'],\n    templateUrl: './splitter.component.html',\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class McSplitterComponent implements OnInit {\n    readonly areas: IArea[] = [];\n\n    private _direction: Direction;\n    private _disabled: boolean = false;\n    private _gutterSize: number = 6;\n\n    private isDragging: boolean = false;\n\n    private readonly areaPositionDivider: number = 2;\n    private readonly listeners: (() => void)[] = [];\n\n    @Input()\n    set direction(direction: Direction) {\n        this._direction = direction;\n    }\n\n    get direction(): Direction {\n        return this._direction;\n    }\n\n    @Input()\n    set disabled(disabled: boolean) {\n        this._disabled = coerceBooleanProperty(disabled);\n    }\n\n    get disabled(): boolean {\n        return this._disabled;\n    }\n\n    @Input()\n    set gutterSize(gutterSize: number) {\n        const size = coerceNumberProperty(gutterSize);\n        this._gutterSize = size > 0 ? size : this.gutterSize;\n    }\n\n    get gutterSize(): number {\n        return this._gutterSize;\n    }\n\n    constructor(private elementRef: ElementRef,\n                private ngZone: NgZone,\n                private renderer: Renderer2) {}\n\n    addArea(area: McSplitterAreaDirective): void {\n        const index: number = this.areas.length;\n        const order: number = index * this.areaPositionDivider;\n        const size: number = area.getSize();\n\n        area.setOrder(order);\n\n        this.areas.push({\n            area,\n            index,\n            order,\n            initialSize: size\n        });\n    }\n\n    ngOnInit(): void {\n        if (!this.direction) {\n            this.direction = Direction.Horizontal;\n        }\n\n        this.setStyle(StyleProperty.FlexDirection, this.isVertical() ? 'column' : 'row');\n    }\n\n    onMouseDown(event: MouseEvent, leftAreaIndex: number, rightAreaIndex: number) {\n        if (this.disabled) {\n            return;\n        }\n\n        const leftArea = this.areas[leftAreaIndex];\n        const rightArea = this.areas[rightAreaIndex];\n\n        const startPoint: IPoint = {\n            x: event.screenX,\n            y: event.screenY\n        };\n\n        leftArea.initialSize = leftArea.area.getSize();\n        rightArea.initialSize = rightArea.area.getSize();\n\n        this.areas.forEach((item) => {\n            const size = item.area.getSize();\n            item.area.disableFlex();\n            item.area.setSize(size);\n        });\n\n        this.ngZone.runOutsideAngular(() => {\n            this.listeners.push(\n                this.renderer.listen(\n                    'document',\n                    'mouseup',\n                    () => this.onMouseUp()\n                )\n            );\n        });\n\n        this.ngZone.runOutsideAngular(() => {\n            this.listeners.push(\n                this.renderer.listen(\n                    'document',\n                    'mousemove',\n                    (e: MouseEvent) => this.onMouseMove(e, startPoint, leftArea, rightArea)\n                )\n            );\n        });\n\n        this.isDragging = true;\n    }\n\n    removeArea(area: McSplitterAreaDirective): void {\n        let indexToRemove: number = -1;\n\n        this.areas.some((item, index) => {\n            if (item.area === area) {\n                indexToRemove = index;\n\n                return true;\n            }\n\n            return false;\n        });\n\n        if (indexToRemove === -1) {\n            return;\n        }\n\n        this.areas.splice(indexToRemove, 1);\n    }\n\n    private isVertical(): boolean {\n        return this.direction === Direction.Vertical;\n    }\n\n    private onMouseMove(event: MouseEvent, startPoint: IPoint, leftArea: IArea, rightArea: IArea) {\n        if (!this.isDragging || this.disabled) {\n            return;\n        }\n\n        const endPoint: IPoint = {\n            x: event.screenX,\n            y: event.screenY\n        };\n\n        const offset = this.isVertical()\n            ? startPoint.y - endPoint.y\n            : startPoint.x - endPoint.x;\n\n        const newLeftAreaSize = leftArea.initialSize - offset;\n        const newRightAreaSize = rightArea.initialSize + offset;\n\n        const minLeftAreaSize = leftArea.area.getMinSize();\n        const minRightAreaSize = rightArea.area.getMinSize();\n\n        if (newLeftAreaSize <= minLeftAreaSize || newRightAreaSize <= minRightAreaSize) {\n            const rightAreaOffset = leftArea.initialSize - minLeftAreaSize;\n\n            leftArea.area.setSize(minLeftAreaSize);\n            rightArea.area.setSize(rightArea.initialSize + rightAreaOffset);\n        } else if (newLeftAreaSize <= 0) {\n            leftArea.area.setSize(0);\n            rightArea.area.setSize(rightArea.initialSize + leftArea.initialSize);\n        } else if (newRightAreaSize <= 0) {\n            leftArea.area.setSize(rightArea.initialSize + leftArea.initialSize);\n            rightArea.area.setSize(0);\n        } else {\n            leftArea.area.setSize(newLeftAreaSize);\n            rightArea.area.setSize(newRightAreaSize);\n        }\n    }\n\n    private onMouseUp() {\n        while (this.listeners.length > 0) {\n            const unsubscribe = this.listeners.pop();\n\n            if (unsubscribe) {\n                unsubscribe();\n            }\n        }\n\n        this.isDragging = false;\n    }\n\n    private setStyle(property: StyleProperty, value: string | number) {\n        this.renderer.setStyle(this.elementRef.nativeElement, property, value);\n    }\n}\n\n@Directive({\n    selector: 'mc-gutter'\n})\nexport class McGutterDirective implements OnInit {\n    private _direction: Direction = Direction.Vertical;\n    private _disabled: boolean = false;\n    private _order: number = 0;\n    private _size: number = 6;\n\n    @Input()\n    set direction(direction: Direction) {\n        this._direction = direction;\n    }\n\n    get direction(): Direction {\n        return this._direction;\n    }\n\n    @Input()\n    set disabled(disabled: boolean) {\n        this._disabled = coerceBooleanProperty(disabled);\n    }\n\n    get disabled(): boolean {\n        return this._disabled;\n    }\n\n    @Input()\n    set order(order: number) {\n        this._order = coerceNumberProperty(order);\n    }\n\n    get order(): number {\n        return this._order;\n    }\n\n    @Input()\n    set size(size: number) {\n        this._size = coerceNumberProperty(size);\n    }\n\n    get size(): number {\n        return this._size;\n    }\n\n    constructor(private renderer: Renderer2,\n                private elementRef: ElementRef) {\n    }\n\n    ngOnInit(): void {\n        this.setStyle(StyleProperty.Cursor, this.getCursor(this.getState()));\n        this.setStyle(StyleProperty.FlexBasis, coerceCssPixelValue(this.size));\n        this.setStyle(this.isVertical() ? StyleProperty.Height : StyleProperty.Width, coerceCssPixelValue(this.size));\n        this.setStyle(StyleProperty.Order, this.order);\n\n        if (!this.isVertical()) {\n            this.setStyle(StyleProperty.Height, '100%');\n        }\n\n        if (this.disabled) {\n            this.setAttr(AttributeProperty.Disabled, 'true');\n        }\n\n        // fix IE issue with gutter icon. flex-direction is requied for flex alignment options\n        this.setStyle(StyleProperty.FlexDirection, this.isVertical() ? 'row' : 'column');\n    }\n\n    private isVertical(): boolean {\n        return this.direction === Direction.Vertical;\n    }\n\n    private getCursor(state: State): string {\n        switch (state) {\n            case State.Disabled:\n                return Cursor.Default;\n            case State.Vertical:\n                return  Cursor.ResizeRow;\n            case State.Horizontal:\n                return Cursor.ResizeColumn;\n            default:\n                throw Error(`Unknown gutter state for cursor: ${state}`);\n        }\n    }\n\n    private getState(): State {\n        return this.disabled\n            ? State.Disabled\n            : this.direction === Direction.Vertical\n                ? State.Vertical\n                : State.Horizontal;\n    }\n\n    private setStyle(property: StyleProperty, value: string | number) {\n        this.renderer.setStyle(this.elementRef.nativeElement, property, value);\n    }\n\n    private setAttr(attribute: AttributeProperty, value: string) {\n        this.renderer.setAttribute(this.elementRef.nativeElement, attribute, value);\n    }\n}\n\n@Directive({\n    selector: 'mc-splitter-area'\n})\nexport class McSplitterAreaDirective implements OnInit, OnDestroy {\n    constructor(private elementRef: ElementRef,\n                private renderer: Renderer2,\n                private splitter: McSplitterComponent) {}\n\n    disableFlex(): void {\n        this.renderer.removeStyle(this.elementRef.nativeElement, 'flex');\n    }\n\n    ngOnInit(): void {\n        this.splitter.addArea(this);\n\n        this.removeStyle(StyleProperty.MaxWidth);\n        this.setStyle(StyleProperty.Flex, '1');\n\n        if (this.splitter.direction === Direction.Vertical) {\n            this.setStyle(StyleProperty.Width, '100%');\n            this.removeStyle(StyleProperty.Height);\n        } else {\n            this.setStyle(StyleProperty.Height, '100%');\n            this.removeStyle(StyleProperty.Width);\n        }\n    }\n\n    ngOnDestroy(): void {\n        this.splitter.removeArea(this);\n    }\n\n    setOrder(order: number): void {\n        this.setStyle(StyleProperty.Order, order);\n    }\n\n    setSize(size: number): void {\n        const sz = coerceNumberProperty(size);\n        this.setStyle(this.getSizeProperty(), coerceCssPixelValue(sz));\n    }\n\n    getSize(): number {\n        return this.elementRef.nativeElement[this.getOffsetSizeProperty()];\n    }\n\n    getMinSize(): number {\n        const styles = getComputedStyle(this.elementRef.nativeElement);\n\n        return parseFloat(styles[this.getMinSizeProperty()]);\n    }\n\n    private isVertical(): boolean {\n        return this.splitter.direction === Direction.Vertical;\n    }\n\n    private getMinSizeProperty(): StyleProperty {\n        return this.isVertical()\n            ? StyleProperty.MinHeight\n            : StyleProperty.MinWidth;\n    }\n\n    private getOffsetSizeProperty(): StyleProperty {\n        return this.isVertical()\n            ? StyleProperty.OffsetHeight\n            : StyleProperty.OffsetWidth;\n    }\n\n    private getSizeProperty(): StyleProperty {\n        return this.isVertical()\n            ? StyleProperty.Height\n            : StyleProperty.Width;\n    }\n\n    private setStyle(style: StyleProperty, value: string | number) {\n        this.renderer.setStyle(this.elementRef.nativeElement, style, value);\n    }\n\n    private removeStyle(style: StyleProperty) {\n        this.renderer.removeStyle(this.elementRef.nativeElement, style);\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { McIconModule } from '@ptsecurity/mosaic/icon';\n\nimport { McGutterDirective, McSplitterAreaDirective, McSplitterComponent } from './splitter.component';\n\n\n@NgModule({\n    imports: [\n        CommonModule,\n        McIconModule\n    ],\n    exports: [\n        McGutterDirective,\n        McSplitterAreaDirective,\n        McSplitterComponent\n    ],\n    declarations: [\n        McGutterDirective,\n        McSplitterAreaDirective,\n        McSplitterComponent\n    ]\n})\nexport class McSplitterModule {\n}\n","import { animate, state, style, transition, trigger } from '@angular/animations';\nimport {\n    Attribute,\n    ChangeDetectionStrategy, ChangeDetectorRef,\n    Component,\n    ElementRef, EventEmitter, forwardRef,\n    Input, Output, ViewChild,\n    ViewEncapsulation\n} from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { FocusMonitor } from '@ptsecurity/cdk/a11y';\nimport {\n    ThemePalette,\n    CanColor, CanColorCtor,\n    CanDisable, CanDisableCtor,\n    HasTabIndex, HasTabIndexCtor,\n    mixinColor,\n    mixinDisabled,\n    mixinTabIndex\n} from '@ptsecurity/mosaic/core';\n\n\nlet nextUniqueId = 0;\n\ntype ToggleLabelPositionType = 'left' | 'right';\n\nexport class McToggleBase {\n    constructor(public _elementRef: ElementRef) {}\n}\n\nexport const _McToggleMixinBase:\n    HasTabIndexCtor &\n    CanDisableCtor &\n    CanColorCtor &\n    typeof McToggleBase = mixinTabIndex(mixinColor(mixinDisabled(McToggleBase), ThemePalette.Primary));\n\nexport class McToggleChange {\n    source: McToggleComponent;\n    checked: boolean;\n}\n\n@Component({\n    selector: 'mc-toggle',\n    exportAs: 'mcToggle',\n    templateUrl: './toggle.component.html',\n    styleUrls: ['./toggle.css'],\n    providers: [\n        {provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => McToggleComponent), multi: true}\n    ],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n    inputs: ['disabled', 'color', 'tabIndex'],\n    host: {\n        class: 'mc-toggle',\n        '[id]': 'id',\n        '[attr.id]': 'id',\n        '[class.mc-disabled]': 'disabled',\n        '[class.mc-toggle_off]': '!checked'\n    },\n    animations: [\n        trigger('switch', [\n            state('true' , style({ left: '50%' })),\n            state('false', style({ left: '1px' })),\n            transition('true <=> false', animate('150ms'))\n        ])\n    ]\n})\nexport class McToggleComponent extends _McToggleMixinBase\n    implements ControlValueAccessor, CanColor, CanDisable, HasTabIndex {\n\n    @ViewChild('input') _inputElement: ElementRef;\n\n    @Input() labelPosition: ToggleLabelPositionType = 'right';\n\n    @Input('aria-label') ariaLabel: string = '';\n    @Input('aria-labelledby') ariaLabelledby: string | null = null;\n\n    private _uniqueId: string = `mc-toggle-${++nextUniqueId}`;\n\n    // tslint:disable:member-ordering\n    @Input() id: string = this._uniqueId;\n\n    get inputId(): string {\n        return `${this.id || this._uniqueId}-input`;\n    }\n\n    @Input() name: string | null = null;\n\n    @Input() value: string;\n\n    private _disabled: boolean = false;\n\n    @Input()\n    get disabled() {\n        return this._disabled;\n    }\n\n    set disabled(value: any) {\n        if (value !== this._disabled) {\n            this._disabled = value;\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n\n    private _checked: boolean = false;\n\n    get checked() {\n        return this._checked;\n    }\n\n    @Input()\n    set checked(value: boolean) {\n        if (value !== this._checked) {\n            this._checked = value;\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n\n    @Output() readonly change: EventEmitter<McToggleChange> =\n        new EventEmitter<McToggleChange>();\n\n    constructor(public _elementRef: ElementRef,\n                private _focusMonitor: FocusMonitor,\n                private _changeDetectorRef: ChangeDetectorRef,\n                @Attribute('tabindex') tabIndex: string\n    ) {\n        super(_elementRef);\n\n        this.tabIndex = parseInt(tabIndex) || 0;\n\n        this._focusMonitor.monitor(this._elementRef.nativeElement, true);\n    }\n\n    ngOnDestroy() {\n        this._focusMonitor.stopMonitoring(this._elementRef.nativeElement);\n    }\n\n    focus(): void {\n        this._focusMonitor.focusVia(this._inputElement.nativeElement, 'keyboard');\n    }\n\n    _getAriaChecked(): boolean {\n        return this.checked;\n    }\n\n    _onInteractionEvent(event: Event) {\n        event.stopPropagation();\n    }\n\n    _onLabelTextChange() {\n        this._changeDetectorRef.markForCheck();\n    }\n\n    _onInputClick(event: MouseEvent) {\n        event.stopPropagation();\n        this._updateModelValue();\n        this._emitChangeEvent();\n    }\n\n    writeValue(value: any) {\n        this.checked = !!value;\n    }\n\n    registerOnChange(fn: any) {\n        this._onChangeCallback = fn;\n    }\n\n    registerOnTouched(fn: any) {\n        this._onTouchedCallback = fn;\n    }\n\n    setDisabledState(isDisabled: boolean) {\n        this.disabled = isDisabled;\n    }\n\n    // tslint:disable-next-line:no-empty\n    private _onTouchedCallback = () => {};\n\n    // tslint:disable-next-line:no-empty\n    private _onChangeCallback = (_: any) => {};\n\n    private _updateModelValue() {\n        this._checked = !this.checked;\n        this._onChangeCallback(this.checked);\n        this._onTouchedCallback();\n    }\n\n    private _emitChangeEvent() {\n        const event = new McToggleChange();\n        event.source = this;\n        event.checked = this.checked;\n\n        this._onChangeCallback(this.checked);\n        this.change.emit(event);\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { A11yModule } from '@ptsecurity/cdk/a11y';\nimport { McCommonModule } from '@ptsecurity/mosaic/core';\n\nimport { McToggleComponent } from './toggle.component';\n\n\n@NgModule({\n    imports: [CommonModule, BrowserAnimationsModule, A11yModule, McCommonModule],\n    exports: [McToggleComponent],\n    declarations: [McToggleComponent]\n})\nexport class McToggleModule {\n}\n","import {\n    AfterContentInit,\n    Attribute,\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component, ContentChildren, EventEmitter, forwardRef, Input, IterableDiffer,\n    IterableDiffers, Output, QueryList,\n    ViewChild,\n    ViewEncapsulation,\n    Directive, ElementRef, Inject\n} from '@angular/core';\nimport { NodeDef, ViewData } from '@angular/core/src/view';\n\nimport { SelectionModel } from '@ptsecurity/cdk/collections';\nimport { CdkTreeNode, CdkTree, CdkTreeNodeOutlet } from '@ptsecurity/cdk/tree';\n\nimport {\n    CanDisable, CanDisableCtor,\n    HasTabIndex,\n    HasTabIndexCtor,\n    mixinDisabled,\n    mixinTabIndex,\n    toBoolean\n} from '@ptsecurity/mosaic/core';\n\nimport { FocusKeyManager } from '@ptsecurity/cdk/a11y';\n\nimport { END, ENTER, HOME, LEFT_ARROW, PAGE_DOWN, PAGE_UP, RIGHT_ARROW, SPACE } from '@ptsecurity/cdk/keycodes';\n\n\n/**\n * Wrapper for the CdkTree node with Material design styles.\n */\n@Directive({\n    exportAs: 'mcTreeNodeOption',\n    selector: 'mc-tree-node-option',\n    host: {\n        tabindex: '-1',\n        '[class.mc-selected]': 'selected',\n        '[class.mc-focused]': '_hasFocus',\n        '[attr.aria-expanded]': 'isExpanded',\n        '[attr.aria-level]': 'role === \"treeitem\" ? level : null',\n        class: 'mc-tree-node',\n\n        '(focus)': '_handleFocus()',\n        '(blur)': '_handleBlur()',\n\n        '(click)': '_handleClick()'\n    },\n    providers: [\n        { provide: CdkTreeNode, useExisting: McTreeNodeOption }\n    ]\n})\nexport class McTreeNodeOption<T> extends CdkTreeNode<T> implements CanDisable {\n    @Input() role: 'treeitem' | 'group' = 'treeitem';\n\n    @Input()\n    get disabled() {\n        return this._disabled;\n    }\n\n    set disabled(value: any) {\n        const newValue = toBoolean(value);\n\n        if (newValue !== this._disabled) {\n            this._disabled = newValue;\n        }\n    }\n\n    @Input()\n    get selected(): boolean {\n        return this.treeSelection.selectedOptions && this.treeSelection.selectedOptions.isSelected(this) || false;\n    }\n\n    set selected(value: boolean) {\n        const isSelected = toBoolean(value);\n\n        if (isSelected !== this._selected) {\n            this.setSelected(isSelected);\n\n            // this.treeSelection._reportValueChange();\n        }\n    }\n\n    private _hasFocus: boolean = false;\n\n    private _disabled: boolean = false;\n    private _selected: boolean = false;\n\n    constructor(\n        protected _elementRef: ElementRef,\n        @Inject(forwardRef(() => McTreeSelection))\n        protected treeSelection: McTreeSelection<T>\n    ) {\n        super(_elementRef, treeSelection);\n    }\n\n    focus(): void {\n        this._elementRef.nativeElement.focus();\n\n        this.treeSelection.setFocusedOption(this);\n    }\n\n    toggle(): void {\n        this.selected = !this.selected;\n    }\n\n    setSelected(selected: boolean) {\n        if (this._selected === selected || !this.treeSelection.selectedOptions) { return; }\n\n        this._selected = selected;\n\n        if (selected) {\n            this.treeSelection.selectedOptions.select(this);\n        } else {\n            this.treeSelection.selectedOptions.deselect(this);\n        }\n\n        // this._changeDetector.markForCheck();\n    }\n\n    _getHeight(): number {\n        return this._elementRef.nativeElement.getClientRects()[0].height;\n    }\n\n    _handleFocus(): void {\n        if (this.disabled || this._hasFocus) { return; }\n\n        this._hasFocus = true;\n    }\n\n    _handleBlur(): void {\n        this._hasFocus = false;\n    }\n\n    _handleClick(): void {\n        if (this.disabled) { return; }\n\n        this.treeSelection.setFocusedOption(this);\n    }\n}\n\nexport const _McTreeSelectionBase:\n    HasTabIndexCtor &\n    CanDisableCtor &\n    typeof CdkTree\n    = mixinTabIndex(mixinDisabled(CdkTree));\n\nexport class McTreeNavigationChange {\n    constructor(\n        public source: McTreeSelection<any>,\n        public option: McTreeNodeOption<any>\n    ) {}\n}\n\nexport class McTreeSelectionChange {\n    constructor(\n        public source: McTreeSelection<any>,\n        public option: McTreeNodeOption<any>\n    ) {}\n}\n\n@Component({\n    exportAs: 'mcTreeSelection',\n    selector: 'mc-tree-selection',\n    template: `<ng-container cdkTreeNodeOutlet></ng-container>`,\n    host: {\n        '[tabIndex]': 'tabIndex',\n        class: 'mc-tree-selection',\n        role: 'tree-selection',\n        '(keydown)': '_onKeyDown($event)',\n        '(window:resize)': 'updateScrollSize()'\n    },\n    styleUrls: ['./tree.css'],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    providers: [{ provide: CdkTree, useExisting: McTreeSelection }]\n})\nexport class McTreeSelection<T> extends _McTreeSelectionBase<T>\n    implements AfterContentInit, CanDisable, HasTabIndex {\n    // Outlets within the tree's template where the dataNodes will be inserted.\n    @ViewChild(CdkTreeNodeOutlet) _nodeOutlet: CdkTreeNodeOutlet;\n\n    @ContentChildren(forwardRef(() => McTreeNodeOption)) options: QueryList<McTreeNodeOption<T>>;\n\n    _keyManager: FocusKeyManager<McTreeNodeOption<T>>;\n\n    selectedOptions: SelectionModel<McTreeNodeOption<T>>;\n\n    _disabled: boolean = false;\n    tabIndex: number;\n    multiple: boolean;\n    autoSelect: boolean;\n    noUnselect: boolean;\n\n    // todo temporary solution\n    withShift: boolean;\n    withCtrl: boolean;\n\n    @Input()\n    get disabled(): boolean {\n        return this._disabled;\n    }\n\n    set disabled(rawValue: boolean) {\n        const value = toBoolean(rawValue);\n\n        if (this._disabled !== value) {\n            this._disabled = value;\n\n            if (this._disabled) {\n                console.log('need disable all options');\n            } else {\n                console.log('need enable all options');\n            }\n        }\n    }\n\n    @Output() readonly navigationChange = new EventEmitter<McTreeNavigationChange>();\n\n    @Output() readonly selectionChange = new EventEmitter<McTreeSelectionChange>();\n\n    constructor(\n        private _elementRef: ElementRef,\n        _differs: IterableDiffers,\n        _changeDetectorRef: ChangeDetectorRef,\n        @Attribute('tabindex') tabIndex: string,\n        @Attribute('multiple') multiple: string,\n        @Attribute('auto-select') autoSelect: string,\n        @Attribute('no-unselect') noUnselect: string\n    ) {\n        super(_differs, _changeDetectorRef);\n\n        this.tabIndex = parseInt(tabIndex) || 0;\n\n        this.multiple = multiple === null ? true : toBoolean(multiple);\n        this.autoSelect = autoSelect === null ? true : toBoolean(autoSelect);\n        this.noUnselect = noUnselect === null ? true : toBoolean(noUnselect);\n\n        this.selectedOptions = new SelectionModel<McTreeNodeOption<T>>(this.multiple);\n    }\n\n    _onKeyDown(event: KeyboardEvent) {\n        const keyCode = event.keyCode;\n        this.withShift = event.shiftKey;\n        this.withCtrl = event.ctrlKey;\n\n        switch (keyCode) {\n            case LEFT_ARROW:\n                if (this._keyManager.activeItem) {\n                    this.treeControl.collapse(this._keyManager.activeItem.data);\n                }\n\n                event.preventDefault();\n\n                break;\n            case RIGHT_ARROW:\n                if (this._keyManager.activeItem) {\n                    this.treeControl.expand(this._keyManager.activeItem.data);\n                }\n\n                event.preventDefault();\n\n                break;\n            case SPACE:\n            case ENTER:\n                this.toggleFocusedOption();\n                event.preventDefault();\n\n                break;\n            case HOME:\n                this._keyManager.setFirstItemActive();\n                event.preventDefault();\n\n                break;\n            case END:\n                this._keyManager.setLastItemActive();\n                event.preventDefault();\n\n                break;\n            case PAGE_UP:\n                this._keyManager.setPreviousPageItemActive();\n                event.preventDefault();\n\n                break;\n            case PAGE_DOWN:\n                this._keyManager.setNextPageItemActive();\n                event.preventDefault();\n\n                break;\n            default:\n                this._keyManager.onKeydown(event);\n        }\n    }\n\n    ngAfterContentInit(): void {\n        this._keyManager = new FocusKeyManager<McTreeNodeOption<T>>(this.options)\n            .withTypeAhead()\n            .withVerticalOrientation(true)\n            .withHorizontalOrientation(null);\n    }\n\n    updateScrollSize(): void {\n        if (!this.options.first) { return; }\n\n        this._keyManager.withScrollSize(Math.floor(this._getHeight() / this.options.first._getHeight()));\n    }\n\n    setFocusedOption(option: McTreeNodeOption<T>): void {\n        this._keyManager.updateActiveItem(option);\n\n        if (this.withShift && this.multiple) {\n            const previousIndex = this._keyManager.previousActiveItemIndex;\n            const activeIndex = this._keyManager.activeItemIndex;\n\n            if (previousIndex < activeIndex) {\n                this.options.forEach((item, index) => {\n                    if (index >= previousIndex && index <= activeIndex) { item.setSelected(true); }\n                });\n            } else {\n                this.options.forEach((item, index) => {\n                    if (index >= activeIndex && index <= previousIndex) { item.setSelected(true); }\n                });\n            }\n\n            this.withShift = false;\n        } else if (this.withCtrl) {\n            this.withCtrl = false;\n\n            if (!this._canDeselectLast(option)) { return; }\n\n            option.toggle();\n        } else {\n            if (this.autoSelect) {\n                this.options.forEach((item) => item.setSelected(false));\n                option.setSelected(true);\n            }\n        }\n\n        this._emitNavigationEvent(option);\n    }\n\n    // Toggles the selected state of the currently focused option.\n    toggleFocusedOption(): void {\n        const focusedIndex = this._keyManager.activeItemIndex;\n\n        if (focusedIndex != null && this._isValidIndex(focusedIndex)) {\n            const focusedOption: McTreeNodeOption<T> = this.options.toArray()[focusedIndex];\n\n            if (focusedOption && this._canDeselectLast(focusedOption)) {\n                focusedOption.toggle();\n\n                // Emit a change event because the focused option changed its state through user interaction.\n                this._emitChangeEvent(focusedOption);\n            }\n        }\n    }\n\n    renderNodeChanges(\n        data: T[],\n        dataDiffer: IterableDiffer<T> = this._dataDiffer,\n        viewContainer: any = this._nodeOutlet.viewContainer,\n        parentData?: T\n    ) {\n        super.renderNodeChanges(data, dataDiffer, viewContainer, parentData);\n\n        const arrayOfInstances = [];\n\n        viewContainer._embeddedViews.forEach((view: ViewData) => {\n            const viewDef = view.def;\n\n            viewDef.nodes.forEach((node: NodeDef) => {\n                if (viewDef.nodeMatchedQueries === node.matchedQueryIds) {\n                    const nodeData: any = view.nodes[node.nodeIndex];\n\n                    arrayOfInstances.push(nodeData.instance as never);\n                }\n            });\n        });\n\n        if (this.options) {\n            this.options.reset(arrayOfInstances);\n            this.options.notifyOnChanges();\n        }\n\n        this.updateScrollSize();\n    }\n\n    _getHeight(): number {\n        return this._elementRef.nativeElement.getClientRects()[0].height;\n    }\n\n    _emitNavigationEvent(option: McTreeNodeOption<T>): void {\n        this.navigationChange.emit(new McTreeNavigationChange(this, option));\n    }\n\n    _emitChangeEvent(option: McTreeNodeOption<T>): void {\n        this.selectionChange.emit(new McTreeNavigationChange(this, option));\n    }\n\n    /**\n     * Utility to ensure all indexes are valid.\n     * @param index The index to be checked.\n     * @returns True if the index is valid for our list of options.\n     */\n    private _isValidIndex(index: number): boolean {\n        return index >= 0 && index < this.options.length;\n    }\n\n    private _canDeselectLast(option: McTreeNodeOption<T>): boolean {\n        return !(this.noUnselect && this.selectedOptions.selected.length === 1 && option.selected);\n    }\n}\n\n","import { NgModule } from '@angular/core';\n\nimport { CommonModule } from '@angular/common';\nimport { CdkTreeModule } from '@ptsecurity/cdk/tree';\n\nimport { McTreeNodeDef } from './node';\nimport { McTreeNodePadding } from './padding';\nimport { McTreeSelection, McTreeNodeOption } from './tree-selection';\n\n\nconst MC_TREE_DIRECTIVES = [\n    McTreeNodeDef,\n    McTreeNodePadding,\n    McTreeSelection,\n    McTreeNodeOption\n];\n\n@NgModule({\n    imports: [CommonModule, CdkTreeModule],\n    exports: MC_TREE_DIRECTIVES,\n    declarations: MC_TREE_DIRECTIVES\n})\nexport class McTreeModule {}\n","import { ICollectionViewer, DataSource } from '@ptsecurity/cdk/collections';\nimport { FlatTreeControl, ITreeControl } from '@ptsecurity/cdk/tree';\nimport { BehaviorSubject, merge, Observable } from 'rxjs';\nimport { map, take } from 'rxjs/operators';\n\n\n/**\n * Tree flattener to convert a normal type of node to node with children & level information.\n * Transform nested nodes of type `T` to flattened nodes of type `F`.\n *\n * For example, the input data of type `T` is nested, and contains its children data:\n *   SomeNode: {\n *     key: 'Fruits',\n *     children: [\n *       NodeOne: {\n *         key: 'Apple',\n *       },\n *       NodeTwo: {\n *        key: 'Pear',\n *      }\n *    ]\n *  }\n *  After flattener flatten the tree, the structure will become\n *  SomeNode: {\n *    key: 'Fruits',\n *    expandable: true,\n *    level: 1\n *  },\n *  NodeOne: {\n *    key: 'Apple',\n *    expandable: false,\n *    level: 2\n *  },\n *  NodeTwo: {\n *   key: 'Pear',\n *   expandable: false,\n *   level: 2\n * }\n * and the output flattened type is `F` with additional information.\n */\nexport class McTreeFlattener<T, F> {\n\n    constructor(public transformFunction: (node: T, level: number) => F,\n                public getLevel: (node: F) => number,\n                public isExpandable: (node: F) => boolean,\n                public getChildren: (node: T) => Observable<T[]>) {\n    }\n\n    _flattenNode(node: T, level: number,\n                 resultNodes: F[], parentMap: boolean[]): F[] {\n        const flatNode = this.transformFunction(node, level);\n        resultNodes.push(flatNode);\n\n        if (this.isExpandable(flatNode)) {\n            this.getChildren(node).pipe(take(1)).subscribe((children) => {\n                children.forEach((child, index) => {\n                    const childParentMap: boolean[] = parentMap.slice();\n                    childParentMap.push(index !== children.length - 1);\n                    this._flattenNode(child, level + 1, resultNodes, childParentMap);\n                });\n            });\n        }\n\n        return resultNodes;\n    }\n\n    /**\n     * Flatten a list of node type T to flattened version of node F.\n     * Please note that type T may be nested, and the length of `structuredData` may be different\n     * from that of returned list `F[]`.\n     */\n    flattenNodes(structuredData: T[]): F[] {\n        const resultNodes: F[] = [];\n        structuredData.forEach((node) => this._flattenNode(node, 0, resultNodes, []));\n\n        return resultNodes;\n    }\n\n    /**\n     * Expand flattened node with current expansion status.\n     * The returned list may have different length.\n     */\n    expandFlattenedNodes(nodes: F[], treeControl: ITreeControl<F>): F[] {\n        const results: F[] = [];\n        const currentExpand: boolean[] = [];\n        currentExpand[0] = true;\n\n        nodes.forEach((node) => {\n            let expand = true;\n            for (let i = 0; i <= this.getLevel(node); i++) {\n                expand = expand && currentExpand[i];\n            }\n\n            if (expand) { results.push(node); }\n\n            if (this.isExpandable(node)) {\n                currentExpand[this.getLevel(node) + 1] = treeControl.isExpanded(node);\n            }\n        });\n\n        return results;\n    }\n}\n\n\n/**\n * Data source for flat tree.\n * The data source need to handle expansion/collapsion of the tree node and change the data feed\n * to `McTree`.\n * The nested tree nodes of type `T` are flattened through `MсTreeFlattener`, and converted\n * to type `F` for `McTree` to consume.\n */\nexport class McTreeFlatDataSource<T, F> extends DataSource<F> {\n    _flattenedData = new BehaviorSubject<F[]>([]);\n\n    _expandedData = new BehaviorSubject<F[]>([]);\n\n    _data: BehaviorSubject<T[]>;\n\n    get data() {\n        return this._data.value;\n    }\n\n    set data(value: T[]) {\n        this._data.next(value);\n        this._flattenedData.next(this.treeFlattener.flattenNodes(this.data));\n        this.treeControl.dataNodes = this._flattenedData.value;\n    }\n\n    constructor(private treeControl: FlatTreeControl<F>,\n                private treeFlattener: McTreeFlattener<T, F>,\n                initialData: T[] = []) {\n        super();\n        this._data = new BehaviorSubject<T[]>(initialData);\n    }\n\n    connect(collectionViewer: ICollectionViewer): Observable<F[]> {\n        const changes = [\n            collectionViewer.viewChange,\n            this.treeControl.expansionModel.onChange!,\n            this._flattenedData\n        ];\n\n        return merge(...changes).pipe(map(() => {\n            this._expandedData.next(\n                this.treeFlattener.expandFlattenedNodes(this._flattenedData.value, this.treeControl));\n\n            return this._expandedData.value;\n        }));\n    }\n\n    disconnect() {\n        // no op\n    }\n}\n\n","import { ICollectionViewer, DataSource } from '@ptsecurity/cdk/collections';\nimport { BehaviorSubject, merge, Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\n\n/**\n * Data source for nested tree.\n *\n * The data source for nested tree doesn't have to consider node flattener, or the way to expand\n * or collapse. The expansion/collapsion will be handled by ITreeControl and each non-leaf node.\n */\nexport class McTreeNestedDataSource<T> extends DataSource<T> {\n    _data = new BehaviorSubject<T[]>([]);\n\n    /**\n     * Data for the nested tree\n     */\n    get data() {\n        return this._data.value;\n    }\n\n    set data(value: T[]) {\n        this._data.next(value);\n    }\n\n    connect(collectionViewer: ICollectionViewer): Observable<T[]> {\n        return merge(...[collectionViewer.viewChange, this._data])\n            .pipe(map(() => this.data));\n    }\n\n    disconnect() {\n        // no op\n    }\n}\n\n","import {\n    ElementRef,\n    QueryList,\n    ContentChildren,\n    Component,\n    ChangeDetectionStrategy,\n    ViewEncapsulation\n} from '@angular/core';\n\nimport {\n    mixinColor,\n    CanColor,\n    CanColorCtor,\n    CanDisable,\n    CanDisableCtor,\n    mixinDisabled\n} from '@ptsecurity/mosaic/core';\nimport { McIcon } from '@ptsecurity/mosaic/icon';\n\n\nexport class McTagBase {\n    constructor(public _elementRef: ElementRef) {}\n}\n\nexport const _McTagMixinBase: CanColorCtor & CanDisableCtor & typeof McTagBase = mixinColor(mixinDisabled(McTagBase));\n\n\n@Component({\n    selector: 'mc-tag',\n    templateUrl: 'tag.partial.html',\n    styleUrls: ['./tag.css'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n    host: {\n        class: 'mc-tag',\n        '[class.mc-disabled]': 'disabled'\n    },\n    inputs: ['color', 'disabled']\n})\nexport class McTag extends _McTagMixinBase implements CanColor, CanDisable {\n    @ContentChildren(McIcon) contentChildren: QueryList<McIcon>;\n\n    nativeElement: HTMLElement;\n\n    private _disabled: boolean = false;\n\n    get disabled() {\n        return this._disabled;\n    }\n\n    set disabled(value: any) {\n        if (value !== this.disabled) { this._disabled = value; }\n    }\n\n    constructor(elementRef: ElementRef) {\n        super(elementRef);\n\n        this.nativeElement = elementRef.nativeElement;\n    }\n\n    ngAfterContentInit() {\n        this._addClassModificatorForIcons();\n    }\n\n    _addClassModificatorForIcons() {\n        const icons = this.contentChildren.map((item) => item._elementRef.nativeElement);\n\n        if (icons.length === 1) {\n            const iconElement = icons[0];\n\n            if (!iconElement.previousElementSibling && !iconElement.nextElementSibling) {\n                if (iconElement.nextSibling) {\n                    iconElement.classList.add('mc-icon_left');\n                    this.nativeElement.classList.add('mc-left-icon');\n                }\n\n                if (iconElement.previousSibling) {\n                    iconElement.classList.add('mc-icon_right');\n                    this.nativeElement.classList.add('mc-right-icon');\n                }\n            }\n        } else if (icons.length > 1) {\n            const firstIconElement = icons[0];\n            const secondIconElement = icons[1];\n\n            firstIconElement.classList.add('mc-icon_left');\n            secondIconElement.classList.add('mc-icon_right');\n        }\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { PlatformModule } from '@ptsecurity/cdk/platform';\n\nimport { McTag } from './tag.component';\n\n\n@NgModule({\n    imports: [\n        CommonModule,\n        PlatformModule\n    ],\n    exports: [\n        McTag\n    ],\n    declarations: [\n        McTag\n    ]\n})\nexport class McTagModule {}\n","import {\n    Directive, DoCheck, ElementRef, Inject,\n    Input, OnChanges, OnDestroy, Optional,\n    Self, InjectionToken, NgZone, OnInit\n} from '@angular/core';\nimport { FormGroupDirective, NgControl, NgForm } from '@angular/forms';\nimport { coerceBooleanProperty } from '@ptsecurity/cdk/coercion';\nimport {\n    CanUpdateErrorState,\n    CanUpdateErrorStateCtor,\n    ErrorStateMatcher,\n    mixinErrorState\n} from '@ptsecurity/mosaic/core';\nimport { McFormFieldControl } from '@ptsecurity/mosaic/form-field';\nimport { fromEvent, Subscription, Subject } from 'rxjs';\nimport { distinctUntilChanged, map } from 'rxjs/operators';\n\n\nexport const MC_TEXTAREA_VALUE_ACCESSOR =\n    new InjectionToken<{ value: any }>('MC_TEXTAREA_VALUE_ACCESSOR');\n\nlet nextUniqueId = 0;\n\nconst ROW_SEPARATOR = '\\n';\n\nexport class McTextareaBase {\n    constructor(public _defaultErrorStateMatcher: ErrorStateMatcher,\n                public _parentForm: NgForm,\n                public _parentFormGroup: FormGroupDirective,\n                public ngControl: NgControl) {\n    }\n}\n\n// tslint:disable-next-line:naming-convention\nexport const McTextareaMixinBase: CanUpdateErrorStateCtor & typeof McTextareaBase = mixinErrorState(McTextareaBase);\n\n@Directive({\n    selector: 'textarea[mcTextarea]',\n    exportAs: 'mcTextarea',\n    host: {\n        class: 'mc-textarea',\n        '[class.mc-textarea-resizable]': '!canGrow',\n        '[attr.id]': 'id',\n        '[attr.placeholder]': 'placeholder',\n        '[disabled]': 'disabled',\n        '[required]': 'required',\n        '(blur)': 'focusChanged(false)',\n        '(focus)': 'focusChanged(true)'\n    },\n    providers: [{ provide: McFormFieldControl, useExisting: McTextarea }]\n})\nexport class McTextarea extends McTextareaMixinBase implements McFormFieldControl<any>, OnInit, OnChanges,\n    OnDestroy, DoCheck, CanUpdateErrorState {\n\n    @Input() canGrow: boolean = true;\n\n    /** An object used to control when error messages are shown. */\n    @Input() errorStateMatcher: ErrorStateMatcher;\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    focused: boolean = false;\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    readonly stateChanges: Subject<void> = new Subject<void>();\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    controlType: string = 'mc-textarea';\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    @Input()\n    get disabled(): boolean {\n        if (this.ngControl && this.ngControl.disabled !== null) {\n            return this.ngControl.disabled;\n        }\n\n        return this._disabled;\n    }\n\n    set disabled(value: boolean) {\n        this._disabled = coerceBooleanProperty(value);\n\n        if (this.focused) {\n            this.focused = false;\n            this.stateChanges.next();\n        }\n    }\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    @Input()\n    get id(): string {\n        return this._id;\n    }\n\n    set id(value: string) {\n        this._id = value || this.uid;\n    }\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    @Input() placeholder: string;\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    @Input()\n    get required(): boolean {\n        return this._required;\n    }\n\n    set required(value: boolean) {\n        this._required = coerceBooleanProperty(value);\n    }\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    @Input()\n    get value(): string {\n        return this.valueAccessor.value;\n    }\n\n    set value(value: string) {\n        if (value !== this.value) {\n            this.valueAccessor.value = value;\n            this.stateChanges.next();\n        }\n    }\n\n    protected uid = `mc-textsrea-${nextUniqueId++}`;\n    protected previousNativeValue: any;\n    protected _disabled = false;\n    protected _id: string;\n    protected _required = false;\n\n    private valueAccessor: { value: any };\n    private growSubscription: Subscription;\n\n    private lineHeight: number = 0;\n    private freeRowsHeight: number = 0;\n    private minHeight: number = 0;\n\n    constructor(protected elementRef: ElementRef,\n                @Optional() @Self() public ngControl: NgControl,\n                @Optional() _parentForm: NgForm,\n                @Optional() _parentFormGroup: FormGroupDirective,\n                _defaultErrorStateMatcher: ErrorStateMatcher,\n                @Optional() @Self() @Inject(MC_TEXTAREA_VALUE_ACCESSOR) inputValueAccessor: any,\n                private ngZone: NgZone) {\n        super(_defaultErrorStateMatcher, _parentForm, _parentFormGroup, ngControl);\n        // If no input value accessor was explicitly specified, use the element as the textarea value\n        // accessor.\n        this.valueAccessor = inputValueAccessor || this.elementRef.nativeElement;\n\n        this.previousNativeValue = this.value;\n\n        // Force setter to be called in case id was not specified.\n        this.id = this.id;\n\n        const growObserver = fromEvent(elementRef.nativeElement, 'input')\n            /*.pipe(\n                map((event: any) => this.getGrowHeight()),\n                // map((event: any) => event.target.scrollHeight),\n                distinctUntilChanged()\n            )*/;\n        this.growSubscription = growObserver.subscribe(this.grow.bind(this));\n    }\n\n    ngOnInit() {\n        setTimeout(() => this.grow(), 0);\n        this.lineHeight = parseInt(getComputedStyle(this.elementRef.nativeElement).lineHeight!, 10);\n\n        const paddingTop = parseInt(getComputedStyle(this.elementRef.nativeElement).paddingTop!, 10);\n        const paddingBottom = parseInt(getComputedStyle(this.elementRef.nativeElement).paddingBottom!, 10);\n\n        // tslint:disable-next-line:no-magic-numbers\n        this.minHeight = this.lineHeight * 2 + paddingTop + paddingBottom;\n        this.freeRowsHeight = this.lineHeight;\n    }\n\n    ngOnChanges() {\n        this.stateChanges.next();\n    }\n\n    ngOnDestroy() {\n        this.stateChanges.complete();\n        this.growSubscription.unsubscribe();\n    }\n\n    ngDoCheck() {\n        if (this.ngControl) {\n            // We need to re-evaluate this on every change detection cycle, because there are some\n            // error triggers that we can't subscribe to (e.g. parent form submissions). This means\n            // that whatever logic is in here has to be super lean or we risk destroying the performance.\n            this.updateErrorState();\n        }\n\n        // We need to dirty-check the native element's value, because there are some cases where\n        // we won't be notified when it changes (e.g. the consumer isn't using forms or they're\n        // updating the value using `emitEvent: false`).\n        this.dirtyCheckNativeValue();\n    }\n\n    /** Grow textarea height to avoid vertical scroll  */\n    grow() {\n        if (!this.canGrow) {\n            return;\n        }\n\n        this.ngZone.runOutsideAngular(() => {\n            const textarea = this.elementRef.nativeElement;\n\n            const outerHeight = parseInt(window.getComputedStyle(textarea).height!, 10);\n            const diff = outerHeight - textarea.clientHeight;\n\n            textarea.style.height = 0; // this line is important to height recalculation\n\n            const height = Math.max(this.minHeight, textarea.scrollHeight + diff + this.freeRowsHeight);\n            textarea.style.height = `${height}px`;\n        });\n    }\n\n    /** Focuses the textarea. */\n    focus(): void {\n        this.elementRef.nativeElement.focus();\n    }\n\n    /** Callback for the cases where the focused state of the textarea changes. */\n    focusChanged(isFocused: boolean) {\n        if (isFocused !== this.focused) {\n            this.focused = isFocused;\n            this.stateChanges.next();\n        }\n    }\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    get empty(): boolean {\n        return !this.elementRef.nativeElement.value && !this.isBadInput();\n    }\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    onContainerClick() {\n        this.focus();\n    }\n\n    /** Does some manual dirty checking on the native textarea `value` property. */\n    protected dirtyCheckNativeValue() {\n        const newValue = this.value;\n\n        if (this.previousNativeValue !== newValue) {\n            this.previousNativeValue = newValue;\n            this.stateChanges.next();\n        }\n    }\n\n    /** Checks whether the textarea is invalid based on the native validation. */\n    protected isBadInput(): boolean {\n        // The `validity` property won't be present on platform-server.\n        const validity = (this.elementRef.nativeElement as HTMLTextAreaElement).validity;\n\n        return validity && validity.badInput;\n    }\n\n    private getGrowHeight(): number {\n        const textarea = this.elementRef.nativeElement;\n        const outerHeight = parseInt(window.getComputedStyle(textarea).height!.toString(), 10);\n        const diff = outerHeight - textarea.clientHeight;\n\n        return Math.max(this.minHeight, textarea.scrollHeight + diff);\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { A11yModule } from '@ptsecurity/cdk/a11y';\nimport { McCommonModule } from '@ptsecurity/mosaic/core';\n\nimport { McTextarea } from './textarea.component';\n\n\n@NgModule({\n    imports: [CommonModule, A11yModule, McCommonModule, FormsModule],\n    exports: [McTextarea],\n    declarations: [McTextarea]\n})\nexport class McTextareaModule {\n}\n","import {\n    Directive,\n    DoCheck,\n    ElementRef,\n    forwardRef,\n    Inject,\n    InjectionToken,\n    Input,\n    OnChanges,\n    OnDestroy,\n    Optional,\n    Renderer2,\n    Self\n} from '@angular/core';\nimport {\n    ControlValueAccessor,\n    FormControl,\n    FormGroupDirective,\n    NG_VALIDATORS,\n    NgControl,\n    NgForm,\n    ValidationErrors,\n    ValidatorFn,\n    Validators\n} from '@angular/forms';\nimport {\n    noop,\n    Subject\n} from 'rxjs';\n\nimport { coerceBooleanProperty } from '@ptsecurity/cdk/coercion';\nimport {\n    CanUpdateErrorState,\n    CanUpdateErrorStateCtor,\n    ErrorStateMatcher,\n    mixinErrorState\n} from '@ptsecurity/mosaic/core';\nimport { McFormFieldControl } from '@ptsecurity/mosaic/form-field';\n\nimport {\n    ARROW_DOWN_KEYCODE,\n    ARROW_LEFT_KEYCODE,\n    ARROW_RIGHT_KEYCODE,\n    ARROW_UP_KEYCODE,\n    DEFAULT_TIME_FORMAT,\n    HOURS_PER_DAY,\n    HOURS_MINUTES_REGEXP,\n    HOURS_MINUTES_SECONDS_REGEXP,\n    HOURS_ONLY_REGEXP,\n    MINUTES_PER_HOUR,\n    SECONDS_PER_MINUTE,\n    TIMEFORMAT_PLACEHOLDERS,\n    TimeFormats,\n    TimeParts\n} from './timepicker.constants';\n\n\nlet uniqueComponentIdSuffix: number = 0;\nlet validatorOnChange: () => void = noop;\nlet validator: ValidatorFn | null = () => null;\n\nexport const MC_INPUT_VALUE_ACCESSOR =\n    new InjectionToken<{ value: any }>('MC_INPUT_VALUE_ACCESSOR');\n\nexport class McTimepickerBase {\n    constructor(\n        public _defaultErrorStateMatcher: ErrorStateMatcher,\n        public _parentForm: NgForm,\n        public _parentFormGroup: FormGroupDirective,\n        public ngControl: NgControl) { }\n}\n\n// tslint:disable-next-line naming-convention\nexport const McTimepickerMixinBase:\n    CanUpdateErrorStateCtor &\n    typeof McTimepickerBase = mixinErrorState(McTimepickerBase);\n\n@Directive({\n    selector: 'input[mcTimepicker]',\n    exportAs: 'mcTimepickerInput',\n    host: {\n        class: 'mc-timepicker mc-input',\n        // Native input properties that are overwritten by Angular inputs need to be synced with\n        // the native input element. Otherwise property bindings for those don't work.\n        '[attr.id]': 'id',\n        '[attr.placeholder]': 'placeholder',\n        '[disabled]': 'disabled',\n        '[required]': 'required',\n        '[attr.time-format]': 'timeFormat',\n        '[attr.min-time]': 'minTime',\n        '[attr.max-time]': 'maxTime',\n        '[attr.value]': 'value',\n        '(blur)': 'onBlur()',\n        '(focus)': 'focusChanged(true)',\n        '(input)': 'onInput()',\n        '(paste)': 'onPaste($event)',\n        '(keydown)': 'onKeyDown($event)'\n    },\n    providers: [\n        {\n            provide: NG_VALIDATORS,\n            useValue: {\n                validate(c) { return validator ? validator(c) : null; },\n                registerOnValidatorChange(fn: () => void): void { validatorOnChange = fn; }\n            },\n            multi: true\n        },\n        {\n            provide: McFormFieldControl,\n            useExisting: forwardRef(() => McTimepicker)\n        }\n    ]\n\n})\nexport class McTimepicker extends McTimepickerMixinBase\n    implements McFormFieldControl<any>,\n        OnChanges,\n        OnDestroy,\n        DoCheck,\n        CanUpdateErrorState,\n        ControlValueAccessor {\n\n    /** An object used to control when error messages are shown. */\n    @Input() errorStateMatcher: ErrorStateMatcher;\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    focused: boolean = false;\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    readonly stateChanges: Subject<void> = new Subject<void>();\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    controlType: string = 'mc-timepicker';\n\n    @Input()\n    get disabled(): boolean {\n        if (this.ngControl && this.ngControl.disabled !== null) { return this.ngControl.disabled; }\n\n        return this._disabled;\n    }\n\n    set disabled(value: boolean) {\n        this._disabled = coerceBooleanProperty(value);\n\n        // Browsers may not fire the blur event if the input is disabled too quickly.\n        // Reset from here to ensure that the element doesn't become stuck.\n        if (this.focused) {\n            this.focused = false;\n        }\n\n        this.stateChanges.next();\n    }\n\n    @Input()\n    get id(): string { return this._id; }\n\n    set id(value: string) { this._id = value || this.uid; }\n\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    @Input() placeholder: string;\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    @Input()\n    get required(): boolean { return this._required; }\n\n    set required(value: boolean) { this._required = coerceBooleanProperty(value); }\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    @Input()\n    get value(): string { return this.inputValueAccessor.value; }\n\n    set value(value: string) {\n        if (value !== this.value) {\n            this.inputValueAccessor.value = value;\n            this.applyInputChanges();\n        }\n    }\n\n    @Input('time-format')\n    get timeFormat(): TimeFormats { return this._timeFormat; }\n\n    set timeFormat(formatValue: TimeFormats) {\n        this._timeFormat = Object\n            .keys(TimeFormats)\n            .map((timeFormatKey) => TimeFormats[timeFormatKey])\n            .indexOf(formatValue) > -1 ? formatValue : DEFAULT_TIME_FORMAT;\n\n        validatorOnChange();\n        this.placeholder = TIMEFORMAT_PLACEHOLDERS[this._timeFormat];\n    }\n\n    @Input('min-time')\n    get minTime(): string | null { return this._minTime; }\n\n    set minTime(minValue: string | null) {\n        this._minTime = minValue;\n        this.minDateTime = minValue !== null ? this.getDateFromTimeString(minValue) : undefined;\n        validatorOnChange();\n    }\n\n    @Input('max-time')\n    get maxTime(): string | null { return this._maxTime; }\n\n    set maxTime(maxValue: string | null) {\n        this._maxTime = maxValue;\n        this.maxDateTime = maxValue !== null ? this.getDateFromTimeString(maxValue) : undefined;\n        validatorOnChange();\n    }\n\n    private _id: string;\n    private readonly uid = `mc-timepicker-${uniqueComponentIdSuffix++}`;\n    private _disabled: boolean;\n    private _required: boolean;\n    private previousNativeValue: any;\n    private readonly inputValueAccessor: { value: any };\n    private onChange: (value: any) => void;\n    private onTouched: () => void;\n    private _timeFormat: TimeFormats;\n    private _minTime: string | null = null;\n    private minDateTime: Date | undefined;\n    private _maxTime: string | null = null;\n    private maxDateTime: Date | undefined;\n    private currentDateTimeInput: Date | undefined;\n\n    constructor(private readonly elementRef: ElementRef,\n                @Optional() @Self() public ngControl: NgControl,\n                @Optional() _parentForm: NgForm,\n                @Optional() _parentFormGroup: FormGroupDirective,\n                _defaultErrorStateMatcher: ErrorStateMatcher,\n                @Optional() @Self() @Inject(MC_INPUT_VALUE_ACCESSOR) inputValueAccessor: any,\n                private readonly renderer: Renderer2) {\n        super(_defaultErrorStateMatcher, _parentForm, _parentFormGroup, ngControl);\n\n        // If no input value accessor was explicitly specified, use the element as the input value\n        // accessor.\n        this.inputValueAccessor = inputValueAccessor || this.elementRef.nativeElement;\n\n        this.previousNativeValue = this.value;\n        this.onChange = noop;\n\n        // Force setter to be called in case id was not specified.\n        this.id = this.id;\n\n        this.placeholder = TIMEFORMAT_PLACEHOLDERS[DEFAULT_TIME_FORMAT];\n\n        // Instead of NG_VALUE_ACCESSOR (https://github.com/angular/material2/issues/8158#issuecomment-344618103)\n        if (this.ngControl) { this.ngControl.valueAccessor = this; }\n\n        // Substitute initial empty validator with validator linked to directive object instance (workaround)\n        validator = Validators.compose([\n            () => this.parseValidator(),\n            () => this.minTimeValidator(),\n            () => this.maxTimeValidator()\n        ]);\n    }\n\n    ngOnChanges(): void {\n        this.stateChanges.next();\n    }\n\n    ngOnDestroy(): void {\n        this.stateChanges.complete();\n    }\n\n    ngDoCheck(): void {\n        if (this.ngControl) {\n            // We need to re-evaluate this on every change detection cycle, because there are some\n            // error triggers that we can't subscribe to (e.g. parent form submissions). This means\n            // that whatever logic is in here has to be super lean or we risk destroying the performance.\n            this.updateErrorState();\n        }\n\n        // We need to dirty-check the native element's value, because there are some cases where\n        // we won't be notified when it changes (e.g. the consumer isn't using forms or they're\n        // updating the value using `emitEvent: false`).\n        this.dirtyCheckNativeValue();\n    }\n\n    focus(): void {\n        this.elementRef.nativeElement.focus();\n    }\n\n    focusChanged(isFocused: boolean): void {\n        if (isFocused !== this.focused) {\n            this.focused = isFocused;\n            this.onTouched();\n            this.stateChanges.next();\n        }\n    }\n\n    onBlur() {\n        this.applyInputChanges();\n        this.focusChanged(false);\n    }\n\n    onPaste($event) {\n        $event.preventDefault();\n        const clipboardUserInput: string = $event.clipboardData.getData('text');\n\n        if (this.getDateFromTimeString(clipboardUserInput) === undefined) { return; }\n\n        this.elementRef.nativeElement.value = clipboardUserInput;\n        this.onInput();\n    }\n\n    onInput() {\n        const initialCursorStart: number = this.elementRef.nativeElement.selectionStart;\n        const initialCursorEnd: number = this.elementRef.nativeElement.selectionEnd;\n        let isAutocompleteTriggered: boolean = false;\n\n        const {\n            hoursOnly,\n            hoursAndMinutes,\n            hoursAndMinutesAndSeconds\n        } = this.getParsedTimeParts(this.elementRef.nativeElement.value);\n\n        // tslint:disable no-magic-numbers\n        if (hoursOnly &&\n            hoursOnly[1] &&\n            hoursOnly[1].length === 2) {\n            isAutocompleteTriggered = true;\n        } else if (hoursAndMinutes &&\n            hoursAndMinutes[1].length === 1 &&\n            hoursAndMinutes[2] &&\n            hoursAndMinutes[2].length === 2) {\n            isAutocompleteTriggered = true;\n        } else if (hoursAndMinutesAndSeconds &&\n            hoursAndMinutesAndSeconds[1].length === 2 &&\n            hoursAndMinutesAndSeconds[2].length === 2 &&\n            hoursAndMinutesAndSeconds[3] &&\n            hoursAndMinutesAndSeconds[3].length === 2) {\n            isAutocompleteTriggered = true;\n        }\n        // tslint:enable no-magic-numbers\n\n        this.applyInputChanges({ doTimestringReformat: isAutocompleteTriggered });\n\n        this.elementRef.nativeElement.selectionStart = initialCursorStart;\n        this.elementRef.nativeElement.selectionEnd = initialCursorEnd;\n\n        if (isAutocompleteTriggered && this.ngControl.errors === null) {\n            this.createSelectionOfTimeComponentInInput(initialCursorStart + 1);\n        }\n    }\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    get empty(): boolean {\n        return !this.elementRef.nativeElement.value && !this.isBadInput();\n    }\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    onContainerClick() {\n        this.focus();\n    }\n\n    writeValue(value: Date | null): void {\n        if (value !== null) {\n            this.renderer.setProperty(this.elementRef.nativeElement,\n                'value',\n                this.getTimeStringFromDate(value, this.timeFormat)\n            );\n        }\n        this.onChange(value || null);\n        this.applyInputChanges();\n    }\n\n    onKeyDown(event: KeyboardEvent): void {\n\n        const keyCode: string = this.getKeyCode(event);\n\n        if (keyCode === ARROW_UP_KEYCODE || keyCode === ARROW_DOWN_KEYCODE) {\n            this.upDownTimeByArrowKeys(event);\n        }\n        if (keyCode === ARROW_LEFT_KEYCODE || keyCode === ARROW_RIGHT_KEYCODE) {\n            this.switchSelectionBetweenTimeparts(event);\n        }\n    }\n\n    registerOnChange(fn: (value: Date) => void): void {\n        this.onChange = fn;\n    }\n\n    registerOnTouched(fn: () => void): void {\n        this.onTouched = fn;\n    }\n\n    /** Does some manual dirty checking on the native input `value` property. */\n    private dirtyCheckNativeValue() {\n        const newValue = this.value;\n\n        if (this.previousNativeValue !== newValue) {\n            this.previousNativeValue = newValue;\n            this.stateChanges.next();\n        }\n    }\n\n    /** Checks whether the input is invalid based on the native validation. */\n    private isBadInput(): boolean {\n        const validity = (<HTMLInputElement> this.elementRef.nativeElement).validity;\n\n        return validity && validity.badInput;\n    }\n\n    private applyInputChanges(applyParams: {\n        changedTime?: Date;\n        doTimestringReformat?: boolean;\n    } = {}): void {\n        const { changedTime, doTimestringReformat = true } = applyParams;\n\n        const timeToApply: Date | undefined = changedTime ||\n            this.getDateFromTimeString(this.elementRef.nativeElement.value);\n        this.currentDateTimeInput = timeToApply;\n\n        if (doTimestringReformat && timeToApply !== undefined) {\n            const selectionStart: number = this.elementRef.nativeElement.selectionStart;\n            const selectionEnd: number = this.elementRef.nativeElement.selectionEnd;\n            this.renderer.setProperty(\n                this.elementRef.nativeElement,\n                'value',\n                this.getTimeStringFromDate(timeToApply, this.timeFormat));\n            this.elementRef.nativeElement.selectionStart = selectionStart;\n            this.elementRef.nativeElement.selectionEnd = selectionEnd;\n        }\n\n        (<FormControl> this.ngControl.control).updateValueAndValidity();\n        const result = this.ngControl.errors === null && timeToApply !== undefined ? timeToApply : null;\n        this.onChange(result);\n        this.stateChanges.next();\n    }\n\n    private upDownTimeByArrowKeys(event: KeyboardEvent): void {\n        event.preventDefault();\n\n        let changedTime: Date | undefined = this.currentDateTimeInput;\n        if (changedTime !== undefined) {\n            const cursorPos = this.elementRef.nativeElement.selectionStart;\n\n            const modifiedTimePart = this.getTimeEditMetrics(cursorPos)\n                .modifiedTimePart;\n            const keyCode: string = this.getKeyCode(event);\n            if (keyCode === ARROW_UP_KEYCODE) { changedTime = this.incrementTime(changedTime, modifiedTimePart); }\n            if (keyCode === ARROW_DOWN_KEYCODE) { changedTime = this.decrementTime(changedTime, modifiedTimePart); }\n            this.applyInputChanges({ changedTime });\n            this.createSelectionOfTimeComponentInInput(cursorPos);\n        }\n    }\n\n    private switchSelectionBetweenTimeparts(event: KeyboardEvent): void {\n        const changedTime: Date | undefined = this.currentDateTimeInput;\n        const keyCode: string = this.getKeyCode(event);\n\n        if (changedTime !== undefined) {\n            let cursorPos: number = this.elementRef.nativeElement.selectionStart;\n            if (keyCode === ARROW_LEFT_KEYCODE) {\n                cursorPos = this.getCursorPositionOfPrevTimePartStart(cursorPos, this.elementRef.nativeElement.value);\n            } else if (keyCode === ARROW_RIGHT_KEYCODE) {\n                cursorPos = this.getCursorPositionOfNextTimePartStart(cursorPos, this.elementRef.nativeElement.value);\n            }\n            this.createSelectionOfTimeComponentInInput(cursorPos);\n        }\n    }\n\n    /**\n     * @description Microsoft EDGE doesn't support KeyboaedEvent.code thus we need this helper\n     */\n    private getKeyCode(event: KeyboardEvent): string {\n        return event.code || event.key;\n    }\n\n    private createSelectionOfTimeComponentInInput(cursorPos: number): void {\n        setTimeout(() => {\n            const newEditParams = this.getTimeEditMetrics(cursorPos);\n            this.elementRef.nativeElement.selectionStart = newEditParams.cursorStartPosition;\n            this.elementRef.nativeElement.selectionEnd = newEditParams.cursorEndPosition;\n        });\n    }\n\n    private incrementTime(dateVal: Date,\n                          whatToIncrement: TimeParts = TimeParts.seconds): Date {\n        let { hours, minutes, seconds } = this.getTimeDigitsFromDate(dateVal);\n\n        switch (whatToIncrement) {\n            case TimeParts.hours:\n                hours++;\n                break;\n            case TimeParts.minutes:\n                minutes++;\n                break;\n            case TimeParts.seconds:\n                seconds++;\n                break;\n            default:\n        }\n\n        if (seconds > SECONDS_PER_MINUTE) { seconds = 0; }\n\n        if (minutes > MINUTES_PER_HOUR) { minutes = 0; }\n\n        if (hours > HOURS_PER_DAY) { hours = 0; }\n\n        return <Date> this.getDateFromTimeDigits(hours, minutes, seconds);\n    }\n\n    /**\n     * @description Decrement part of time\n     */\n    private decrementTime(dateVal: Date,\n                          whatToDecrement: TimeParts = TimeParts.seconds): Date {\n        let { hours, minutes, seconds } = this.getTimeDigitsFromDate(dateVal);\n\n        switch (whatToDecrement) {\n            case TimeParts.hours:\n                hours--;\n                break;\n            case TimeParts.minutes:\n                minutes--;\n                break;\n            case TimeParts.seconds:\n                seconds--;\n                break;\n            default:\n        }\n\n        if (seconds < 0) { seconds = SECONDS_PER_MINUTE; }\n\n        if (minutes < 0) { minutes = MINUTES_PER_HOUR; }\n\n        if (hours < 0) { hours = HOURS_PER_DAY; }\n\n        return <Date> this.getDateFromTimeDigits(hours, minutes, seconds);\n    }\n\n    private getCursorPositionOfPrevTimePartStart(cursorPos: number, timeString: string): number {\n        return cursorPos === 0 ? timeString.length : cursorPos - 1;\n    }\n\n    private getCursorPositionOfNextTimePartStart(cursorPos: number,\n                                                 timeString: string,\n                                                 timeDevider: string = ':'): number {\n        const nextDividerPos: number = timeString.indexOf(timeDevider, cursorPos);\n\n        return nextDividerPos !== undefined ? nextDividerPos + 1 : 0;\n    }\n\n    /**\n     * @description Get params for arrow-keys (up/down) time valie edit.\n     * @param cursorPosition Current cursor position in timeString\n     */\n    private getTimeEditMetrics(cursorPosition: number): {\n        modifiedTimePart: TimeParts;\n        cursorStartPosition: number;\n        cursorEndPosition: number;\n    } {\n        const timeString: string = this.elementRef.nativeElement.value;\n        let modifiedTimePart: TimeParts;\n        let cursorStartPosition: number;\n        let cursorEndPosition: number;\n        const hoursIndex = 0;\n        const minutesIndex = timeString.indexOf(':', hoursIndex + 1);\n        const secondsIndex = minutesIndex !== -1 ? timeString.indexOf(':', minutesIndex + 1) : -1;\n\n        if (secondsIndex !== -1 && cursorPosition > secondsIndex) {\n            modifiedTimePart = TimeParts.seconds;\n            cursorStartPosition = secondsIndex + 1;\n            cursorEndPosition = timeString.length;\n        } else if (minutesIndex !== -1 && cursorPosition > minutesIndex) {\n            modifiedTimePart = TimeParts.minutes;\n            cursorStartPosition = minutesIndex + 1;\n            cursorEndPosition = secondsIndex > -1 ? secondsIndex : timeString.length;\n        } else {\n            modifiedTimePart = TimeParts.hours;\n            cursorStartPosition = hoursIndex;\n            cursorEndPosition = minutesIndex !== -1 ? minutesIndex : timeString.length;\n        }\n\n        return {\n            modifiedTimePart,\n            cursorStartPosition,\n            cursorEndPosition\n        };\n    }\n\n    /**\n     * @description Create time string for displaying inside input element of UI\n     */\n    private getTimeStringFromDate(tempVal: Date,\n                                  timeFormat: TimeFormats = DEFAULT_TIME_FORMAT): string {\n        const hours: string = this.getNumberWithLeadingZero(tempVal.getHours());\n        const minutes: string = this.getNumberWithLeadingZero(tempVal.getMinutes());\n        const seconds: string = this.getNumberWithLeadingZero(tempVal.getSeconds());\n\n        const formattedTimeGenerators = {\n            [TimeFormats.HHmm]: () => `${hours}:${minutes}`,\n            [TimeFormats.HHmmss]: () => `${hours}:${minutes}:${seconds}`\n        };\n\n        return formattedTimeGenerators[timeFormat]();\n    }\n\n    private getParsedTimeParts(timeString: string): {\n        hoursOnly: any;\n        hoursAndMinutes: any;\n        hoursAndMinutesAndSeconds: any;\n    } {\n        const hoursAndMinutesAndSeconds = timeString.match(HOURS_MINUTES_SECONDS_REGEXP);\n        const hoursAndMinutes = timeString.match(HOURS_MINUTES_REGEXP);\n        const hoursOnly = timeString.match(HOURS_ONLY_REGEXP);\n\n        return {\n            hoursOnly,\n            hoursAndMinutes,\n            hoursAndMinutesAndSeconds\n        };\n    }\n\n    /**\n     * @description Create Date object from separate parts of time\n     */\n    private getDateFromTimeDigits(hours: number, minutes: number, seconds: number = 0): Date | undefined {\n        return this.getDateFromTimeString(`${hours}:${minutes}:${seconds}`);\n    }\n\n    private getDateFromTimeString(timeString: string | undefined): Date | undefined {\n        // TODO Use moment-js\n        if (timeString === undefined) { return; }\n\n        const {\n            hoursOnly,\n            hoursAndMinutes,\n            hoursAndMinutesAndSeconds\n        } = this.getParsedTimeParts(timeString);\n\n        if (timeString.trim().length === 0 ||\n            hoursOnly === null && hoursAndMinutes === null && hoursAndMinutesAndSeconds === null) {\n            return;\n        }\n\n        // tslint:disable no-magic-numbers\n        let hours: number = 0;\n        let minutes: number = 0;\n        let seconds: number = 0;\n\n        if (hoursOnly) {\n            hours = Number(hoursOnly[1]);\n        } else if (hoursAndMinutes) {\n            hours = Number(hoursAndMinutes[1]);\n            minutes = Number(hoursAndMinutes[2]);\n        } else if (hoursAndMinutesAndSeconds) {\n            hours = Number(hoursAndMinutesAndSeconds[1]);\n            minutes = Number(hoursAndMinutesAndSeconds[2]);\n            seconds = Number(hoursAndMinutesAndSeconds[3]);\n        }\n        // const timestamp: number = Date.parse(fullDateString);\n        const resultDate: Date = new Date(1970, 0, 1, hours, minutes, seconds);\n        // tslint:enable no-magic-numbers\n\n        return isNaN(resultDate.getTime()) ? undefined : resultDate;\n    }\n\n    private getNumberWithLeadingZero(digit: number): string {\n        const MAX_DIGIT_WITH_LEADING_ZERO: number = 9;\n\n        return digit > MAX_DIGIT_WITH_LEADING_ZERO ? `${digit}` : `0${digit}`;\n    }\n\n    private getTimeDigitsFromDate(dateVal: Date): { hours: number; minutes: number; seconds: number } {\n        return {\n            hours: dateVal.getHours(),\n            minutes: dateVal.getMinutes(),\n            seconds: dateVal.getSeconds()\n        };\n    }\n\n    private parseValidator(): ValidationErrors | null {\n        return this.currentDateTimeInput === undefined ?\n            { mcTimepickerParse: { text: this.elementRef.nativeElement.value } } :\n            null;\n    }\n\n    private minTimeValidator(): ValidationErrors | null {\n\n        if (this.currentDateTimeInput !== undefined &&\n            this.minDateTime !== undefined &&\n            this.isTimeLowerThenMin(this.currentDateTimeInput)) {\n            return { mcTimepickerLowerThenMintime: { text: this.elementRef.nativeElement.value } };\n        }\n\n        return null;\n    }\n\n    private maxTimeValidator(): ValidationErrors | null {\n        if (this.currentDateTimeInput !== undefined &&\n            this.maxDateTime !== undefined &&\n            this.isTimeGreaterThenMax(this.currentDateTimeInput)) {\n            return { mcTimepickerHigherThenMaxtime: { text: this.elementRef.nativeElement.value } };\n        }\n\n        return null;\n    }\n\n    private isTimeLowerThenMin(timeToCompare: Date): boolean {\n        return timeToCompare.getTime() - (<Date> this.minDateTime).getTime() < 0;\n    }\n\n    private isTimeGreaterThenMax(timeToCompare: Date): boolean {\n        return timeToCompare.getTime() - (<Date> this.maxDateTime).getTime() >= 0;\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\n\nimport { A11yModule } from '@ptsecurity/cdk/a11y';\nimport { PlatformModule } from '@ptsecurity/cdk/platform';\n\nimport { McTimepicker } from './timepicker';\n\n\n@NgModule({\n    imports: [\n        CommonModule,\n        A11yModule,\n        PlatformModule,\n        FormsModule\n    ],\n    declarations: [\n        McTimepicker\n    ],\n    exports: [\n        McTimepicker\n    ]\n})\nexport class McTimepickerModule {}\n","import {\n    animate,\n    AnimationTriggerMetadata,\n    state,\n    style,\n    transition,\n    trigger,\n    query,\n    animateChild,\n    group\n} from '@angular/animations';\n\n\n/**\n * The following are all the animations for the mat-select component, with each\n * const containing the metadata for one animation.\n *\n * The values below match the implementation of the AngularJS Material mat-select animation.\n */\nexport const mcSelectAnimations: {\n    readonly transformPanel: AnimationTriggerMetadata;\n    readonly fadeInContent: AnimationTriggerMetadata;\n} = {\n    /**\n     * This animation transforms the select's overlay panel on and off the page.\n     *\n     * When the panel is attached to the DOM, it expands its width by the amount of padding, scales it\n     * up to 100% on the Y axis, fades in its border, and translates slightly up and to the\n     * side to ensure the option text correctly overlaps the trigger text.\n     *\n     * When the panel is removed from the DOM, it simply fades out linearly.\n     */\n    transformPanel: trigger('transformPanel', [\n        state('void', style({\n            transform: 'scaleY(0)',\n            minWidth: '100%',\n            opacity: 0\n        })),\n        transition('void => *', group([\n            query('@fadeInContent', animateChild()),\n            animate('150ms cubic-bezier(0.25, 0.8, 0.25, 1)')\n        ])),\n        transition('* => void', [\n            animate('250ms 100ms linear', style({ opacity: 0 }))\n        ])\n    ]),\n\n    /**\n     * This animation fades in the background color and text content of the\n     * select's options. It is time delayed to occur 100ms after the overlay\n     * panel has transformed in.\n     */\n    fadeInContent: trigger('fadeInContent', [\n        state('showing', style({ opacity: 1 })),\n        transition('void => showing', [\n            style({ opacity: 0 }),\n            animate('150ms 100ms cubic-bezier(0.55, 0, 0.55, 0.2)')\n        ])\n    ])\n};\n\n\n/**\n * @deprecated\n * @breaking-change 7.0.0\n */\nexport const transformPanel = mcSelectAnimations.transformPanel;\n\n/**\n * @deprecated\n * @breaking-change 7.0.0\n */\nexport const fadeInContent = mcSelectAnimations.fadeInContent;\n","import { ComponentRef, Injectable } from '@angular/core';\n\nimport { Observable } from 'rxjs';\nimport { filter } from 'rxjs/operators';\n\nimport { ESCAPE } from '@ptsecurity/cdk/keycodes';\nimport { Overlay, OverlayRef } from '@ptsecurity/cdk/overlay';\nimport { ComponentPortal } from '@ptsecurity/cdk/portal';\n\nimport { McModalControlService } from './modal-control.service';\nimport { McModalRef } from './modal-ref.class';\nimport { McModalComponent } from './modal.component';\nimport { ConfirmType, IModalOptions, IModalOptionsForService } from './modal.type';\n\n\n// A builder used for managing service creating modals\nexport class ModalBuilderForService {\n\n    // Modal ComponentRef, \"null\" means it has been destroyed\n    private modalRef: ComponentRef<McModalComponent>;\n    private overlayRef: OverlayRef;\n\n    constructor(private overlay: Overlay, options: IModalOptionsForService = {}) {\n        this.createModal();\n\n        if (!('mcGetContainer' in options)) {\n            options.mcGetContainer = null;\n        }\n\n        this.changeProps(options);\n        this.modalRef.instance.open();\n        this.modalRef.instance.mcAfterClose.subscribe(() => this.destroyModal());\n\n        this.overlayRef.keydownEvents()\n            // @ts-ignore\n            .pipe(filter((event: KeyboardEvent) => {\n                return event.keyCode === ESCAPE && options.mcCloseByESC;\n            }))\n            .subscribe(() => this.modalRef.instance.close());\n    }\n\n    getInstance(): McModalComponent {\n        return this.modalRef && this.modalRef.instance;\n    }\n\n    destroyModal(): void {\n        if (this.modalRef) {\n            this.overlayRef.dispose();\n            // @ts-ignore\n            this.modalRef = null;\n        }\n    }\n\n    private changeProps(options: IModalOptions): void {\n        if (this.modalRef) {\n            // here not limit user's inputs at runtime\n            Object.assign(this.modalRef.instance, options);\n        }\n    }\n\n    // Create component to ApplicationRef\n    private createModal(): void {\n        this.overlayRef = this.overlay.create();\n        this.modalRef = this.overlayRef.attach(new ComponentPortal(McModalComponent));\n    }\n}\n\n@Injectable()\nexport class McModalService {\n    // Track of the current close modals (we assume invisible is close this time)\n    get openModals(): McModalRef[] {\n        return this.modalControl.openModals;\n    }\n\n    get afterAllClose(): Observable<void> {\n        return this.modalControl.afterAllClose.asObservable();\n    }\n\n    constructor(\n        private overlay: Overlay,\n        private modalControl: McModalControlService) {\n    }\n\n    // Closes all of the currently-open dialogs\n    closeAll(): void {\n        this.modalControl.closeAll();\n    }\n\n    create<T>(options: IModalOptionsForService<T> = {}): McModalRef<T> {\n\n        if (typeof options.mcOnCancel !== 'function') {\n            // Leave a empty function to close this modal by default\n            // tslint:disable-next-line\n            options.mcOnCancel = () => {};\n        }\n\n        if (!('mcCloseByESC' in options)) {\n            options.mcCloseByESC = true;\n        }\n\n\n        if (!('mcWidth' in options)) {\n            // tslint:disable-next-line\n            options.mcWidth = 480;\n        }\n\n        return new ModalBuilderForService(this.overlay, options).getInstance();\n    }\n\n    confirm<T>(options: IModalOptionsForService<T> = {}, confirmType: ConfirmType = 'confirm'): McModalRef<T> {\n        if ('mcFooter' in options) {\n            console.warn(`The Confirm-Modal doesn't support \"mcFooter\", this property will be ignored.`);\n        }\n\n        // NOTE: only support function currently by calling confirm()\n        if (typeof options.mcOnOk !== 'function') {\n            // Leave a empty function to close this modal by default\n            // tslint:disable-next-line\n            options.mcOnOk = () => {};\n        }\n\n        options.mcModalType = 'confirm';\n        options.mcClassName = `mc-confirm mc-confirm-${confirmType} ${options.mcClassName || ''}`;\n        options.mcMaskClosable = false;\n\n        return this.create(options);\n    }\n\n    success<T>(options: IModalOptionsForService<T> = {}): McModalRef<T> {\n        return this.simpleConfirm(options, 'success');\n    }\n\n    delete<T>(options: IModalOptionsForService<T> = {}): McModalRef<T> {\n        return this.simpleConfirm(options, 'warn');\n    }\n\n    private simpleConfirm<T>(options: IModalOptionsForService<T> = {}, confirmType: ConfirmType): McModalRef<T> {\n        // Remove the Cancel button if the user not specify a Cancel button\n        if (!('mcCancelText' in options)) {\n            // @ts-ignore\n            options.mcCancelText = null;\n        }\n\n        return this.confirm(options, confirmType);\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { OverlayModule } from '@ptsecurity/cdk/overlay';\nimport { McButtonModule } from '@ptsecurity/mosaic/button';\nimport { McIconModule } from '@ptsecurity/mosaic/icon';\n\nimport { CssUnitPipe } from './css-unit.pipe';\nimport { McModalControlService } from './modal-control.service';\nimport { McModalComponent } from './modal.component';\nimport { McModalService } from './modal.service';\n\n\n@NgModule({\n    imports: [ CommonModule, OverlayModule, McButtonModule, McIconModule ],\n    exports: [ McModalComponent ],\n    declarations: [ McModalComponent, CssUnitPipe ],\n    entryComponents: [ McModalComponent ],\n    providers: [ McModalControlService, McModalService ]\n})\nexport class McModalModule { }\n","import { fromEvent, Observable, Subscription } from 'rxjs';\nimport { debounceTime } from 'rxjs/operators';\n\nimport {\n    AfterViewInit,\n    Component, Directive,\n    ElementRef,\n    HostBinding,\n    Input,\n    OnDestroy,\n    OnInit,\n    ViewEncapsulation,\n    ContentChild,\n    TemplateRef,\n    ChangeDetectorRef,\n    ChangeDetectionStrategy,\n    ViewChild\n} from '@angular/core';\nimport { FocusMonitor, FocusOrigin } from '@ptsecurity/cdk/a11y';\nimport { SPACE } from '@ptsecurity/cdk/keycodes';\nimport { Platform } from '@ptsecurity/cdk/platform';\nimport { CanDisable, CanDisableCtor, mixinDisabled } from '@ptsecurity/mosaic/core';\n\n\nconst COLLAPSED_CLASS: string = 'mc-navbar-collapsed-title';\nconst MC_ICON = 'mc-icon';\nconst MC_NAVBAR = 'mc-navbar';\nconst MC_NAVBAR_CONTAINER = 'mc-navbar-container';\nconst MC_NAVBAR_ITEM = 'mc-navbar-item';\nconst MC_NAVBAR_BRAND = 'mc-navbar-brand';\nconst MC_NAVBAR_TITLE = 'mc-navbar-title';\nconst MC_NAVBAR_LOGO = 'mc-navbar-logo';\n\nexport type McNavbarContainerPositionType = 'left' | 'right';\n\nexport interface IMcNavbarDropdownItem {\n    link?: string;\n    text: string;\n}\n\n@Directive({\n    selector: MC_NAVBAR_LOGO,\n    host: {\n        class: MC_NAVBAR_LOGO\n    }\n})\nexport class McNavbarLogo {}\n\n@Directive({\n    selector: MC_NAVBAR_BRAND,\n    host: {\n        class: MC_NAVBAR_BRAND\n    }\n})\nexport class McNavbarBrand {}\n\n@Directive({\n    selector: MC_NAVBAR_TITLE,\n    host: {\n        class: MC_NAVBAR_TITLE\n    }\n})\nexport class McNavbarTitle {}\n\nexport class McNavbarItemBase {\n    constructor(public _elementRef: ElementRef) {}\n}\n\nexport const _McNavbarMixinBase: CanDisableCtor & typeof McNavbarItemBase = mixinDisabled(McNavbarItemBase);\n\n@Component({\n    selector: MC_NAVBAR_ITEM,\n    template: `\n        <a\n            [attr.tabindex]=\\\"disabled ? -1 : tabIndex\\\"\n            (click)=\"handleClickByItem()\"\n            (keydown)=\"handleKeydown($event)\"\n            class=\"mc-navbar-item\"\n        >\n            <ng-content></ng-content>\n            <i *ngIf=\"hasDropdownContent\" mc-icon=\"mc-angle-M_16\"></i>\n        </a>\n        <ul\n            #dropdownContent\n            *ngIf=\"hasDropdownContent\"\n            [ngClass]=\"{ 'is-collapsed': isCollapsed }\"\n            class=\"mc-navbar-dropdown\"\n        >\n            <li\n                *ngFor=\"let item of dropdownItems\"\n                (click)=\"handleClickByDropdownItem()\"\n                class=\"mc-navbar-dropdown-item\"\n            >\n                <ng-container *ngIf=\"dropdownItemTmpl\">\n                    <ng-container *ngTemplateOutlet=\"dropdownItemTmpl; context: { $implicit: item }\"></ng-container>\n                </ng-container>\n                <a\n                    *ngIf=\"!dropdownItemTmpl\"\n                    [attr.href]=\"item.link\"\n                    [ngClass]=\"{ 'is-active': isActiveDropdownLink(item.link) }\"\n                    class=\"mc-navbar-dropdown-link\"\n                >{{ item.text }}</a>\n            </li>\n        </ul>\n    `,\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    inputs: ['disabled'],\n    host: {\n        '[attr.disabled]': 'disabled || null',\n        '[attr.tabindex]': '-1'\n    }\n})\nexport class McNavbarItem extends _McNavbarMixinBase implements OnInit, AfterViewInit, OnDestroy, CanDisable {\n\n    @Input()\n    tabIndex: number = 0;\n\n    @Input()\n    dropdownItems: IMcNavbarDropdownItem[] = [];\n\n    @Input()\n    set collapsedTitle(value: string) {\n        this.elementRef.nativeElement.setAttribute('computedTitle', encodeURI(value));\n    }\n\n    @ContentChild('dropdownItemTmpl', { read: TemplateRef })\n    dropdownItemTmpl: TemplateRef<IMcNavbarDropdownItem>;\n\n    @ViewChild('dropdownContent', { read: ElementRef })\n    dropdownContent: ElementRef;\n\n    get hasDropdownContent() {\n        return this.dropdownItems.length > 0;\n    }\n\n    isCollapsed: boolean = true;\n\n    private _subscription: Subscription = new Subscription();\n    private _focusMonitor$: Observable<FocusOrigin>;\n\n    private get _dropdownElements(): HTMLElement[] {\n        return this.dropdownContent ? this.dropdownContent.nativeElement.querySelectorAll('li > *') : [];\n    }\n\n    constructor(\n        public  elementRef: ElementRef,\n        private _focusMonitor: FocusMonitor,\n        private _platform: Platform,\n        private _cdRef: ChangeDetectorRef\n    ) {\n        super(elementRef);\n    }\n\n    ngOnInit() {\n        this.denyClickIfDisabled();\n\n        this._focusMonitor$ = this._focusMonitor.monitor(this.elementRef.nativeElement, true);\n\n        if (this.hasDropdownContent) {\n            this.listenClickOutside();\n        }\n    }\n\n    ngAfterViewInit() {\n        if (!this.hasDropdownContent) {\n            return;\n        }\n\n        this.startListenFocusDropdownItems();\n    }\n\n    ngOnDestroy() {\n        this._subscription.unsubscribe();\n        this._focusMonitor.stopMonitoring(this.elementRef.nativeElement);\n        this.stopListenFocusDropdownItems();\n    }\n\n    isActiveDropdownLink(link: string): boolean {\n        if (!this._platform.isBrowser) {\n            return false;\n        }\n\n        return window.location.href.indexOf(link) >= 0;\n    }\n\n    handleClickByItem() {\n        this.toggleDropdown();\n    }\n\n    handleKeydown($event: KeyboardEvent) {\n        const isNavbarItem = ($event.target as HTMLElement).classList.contains(MC_NAVBAR_ITEM);\n\n        // tslint:disable-next-line\n        if (this.hasDropdownContent && $event.keyCode === SPACE && isNavbarItem) {\n            this.toggleDropdown();\n        }\n    }\n\n    handleClickByDropdownItem() {\n        this.forceCloseDropdown();\n    }\n\n    private listenClickOutside() {\n        this._subscription.add(\n            this._focusMonitor$.subscribe((origin) => {\n                if (origin === null) {\n                    this.forceCloseDropdown();\n                }\n            })\n        );\n    }\n\n    private toggleDropdown() {\n        this.isCollapsed = !this.isCollapsed;\n    }\n\n    private forceCloseDropdown() {\n        this.isCollapsed = true;\n        this._cdRef.detectChanges();\n    }\n\n    private startListenFocusDropdownItems() {\n        this._dropdownElements.forEach((el) => {\n            this._focusMonitor.monitor(el, true);\n        });\n    }\n\n    private stopListenFocusDropdownItems() {\n        this._dropdownElements.forEach((el) => {\n            this._focusMonitor.stopMonitoring(el);\n        });\n    }\n\n    // This method is required due to angular 2 issue https://github.com/angular/angular/issues/11200\n    private denyClickIfDisabled() {\n        const events: Event[] = this.elementRef.nativeElement.eventListeners('click');\n\n        events.forEach((event) => this.elementRef.nativeElement.removeEventListener('click', event));\n\n        this.elementRef.nativeElement.addEventListener('click', (event: MouseEvent) => {\n            if (this.elementRef.nativeElement.hasAttribute('disabled')) {\n                event.stopImmediatePropagation();\n            }\n        }, true);\n\n        events.forEach((event) => this.elementRef.nativeElement.addEventListener('click', event));\n    }\n}\n\n@Directive({\n    selector: MC_NAVBAR_CONTAINER\n})\nexport class McNavbarContainer {\n    @Input()\n    position: McNavbarContainerPositionType = 'left';\n\n    @HostBinding('class')\n    get cssClasses(): string {\n        return this.position === 'left' ? 'mc-navbar-left' : 'mc-navbar-right';\n    }\n}\n\nclass CollapsibleItem {\n    private _collapsed: boolean = false;\n\n    constructor(\n        public element: HTMLElement,\n        public width: number\n    ) {}\n\n    processCollapsed(collapsed: boolean) {\n        this._collapsed = collapsed;\n\n        this.updateCollapsedClass();\n    }\n\n    private updateCollapsedClass() {\n        if (this._collapsed) {\n            this.element.classList.add(COLLAPSED_CLASS);\n        } else {\n            this.element.classList.remove(COLLAPSED_CLASS);\n        }\n\n    }\n}\n\nclass CachedItemWidth {\n\n    get canCollapse(): boolean {\n        return this.itemsForCollapse.length > 0;\n    }\n\n    private _collapsedItemsWidth: number;\n\n    get collapsedItemsWidth(): number {\n        if (this._collapsedItemsWidth !== undefined) {\n            return this._collapsedItemsWidth;\n        }\n\n        this.calculateAndCacheCollapsedItemsWidth();\n\n        return this._collapsedItemsWidth;\n    }\n\n    constructor(\n        public element: HTMLElement,\n        public width: number,\n        public itemsForCollapse: CollapsibleItem[] = []\n    ) {}\n\n    processCollapsed(collapsed: boolean) {\n        if (this.itemsForCollapse.length > 0) {\n            this.updateTitle(collapsed);\n        }\n\n        this.itemsForCollapse.forEach((item) => item.processCollapsed(collapsed));\n    }\n\n    private calculateAndCacheCollapsedItemsWidth() {\n        this._collapsedItemsWidth = this.itemsForCollapse\n            .reduce((acc, item) => acc + item.width, 0);\n    }\n\n    private getTitle(): string {\n        const computedTitle = this.element.getAttribute('computedTitle');\n\n        return computedTitle\n            ? decodeURI(computedTitle)\n            : (this.itemsForCollapse.length > 0 ? this.itemsForCollapse[0].element.innerText : '');\n    }\n\n    private updateTitle(collapsed: boolean) {\n        if (collapsed) {\n            this.element.setAttribute('title', this.getTitle());\n        } else {\n            this.element.removeAttribute('title');\n        }\n    }\n}\n\n\n@Component({\n    selector: MC_NAVBAR,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    template: `\n        <nav class=\"mc-navbar\">\n            <ng-content select=\"[${MC_NAVBAR_CONTAINER}],${MC_NAVBAR_CONTAINER}\"></ng-content>\n        </nav>\n    `,\n    styleUrls: ['./navbar.css'],\n    encapsulation: ViewEncapsulation.None\n})\nexport class McNavbar implements AfterViewInit, OnDestroy {\n\n    private readonly forceRecalculateItemsWidth: boolean = false;\n    private readonly resizeDebounceInterval: number = 100;\n    private readonly firstLevelElement: string = MC_NAVBAR_CONTAINER;\n    private readonly secondLevelElements: string[] = [\n        MC_NAVBAR_ITEM,\n        MC_NAVBAR_BRAND,\n        MC_NAVBAR_TITLE\n    ];\n\n    private _totalItemsWidths: number;\n    private _itemsWidths: CachedItemWidth[];\n\n    private get maxAllowedWidth(): number {\n        return this._elementRef.nativeElement.querySelector('nav').getBoundingClientRect().width;\n    }\n\n    private get itemsWidths(): CachedItemWidth[] {\n        if (this._itemsWidths !== undefined && !this.forceRecalculateItemsWidth) {\n            return this._itemsWidths;\n        }\n\n        this.calculateAndCacheItemsWidth();\n\n        return this._itemsWidths;\n    }\n\n    private get totalItemsWidth(): number {\n        if (this._totalItemsWidths !== undefined && !this.forceRecalculateItemsWidth) {\n            return this._totalItemsWidths;\n        }\n\n        this.calculateAndCacheTotalItemsWidth();\n\n        return this._totalItemsWidths;\n    }\n\n    private _resizeSubscription: Subscription;\n\n    constructor(\n        private _elementRef: ElementRef\n    ) {\n        const resizeObserver = fromEvent(window, 'resize')\n            .pipe(debounceTime(this.resizeDebounceInterval));\n\n        this._resizeSubscription = resizeObserver.subscribe(this.updateCollapsed.bind(this));\n    }\n\n    updateCollapsed(): void {\n        let collapseDelta = this.totalItemsWidth - this.maxAllowedWidth;\n\n        for (let i = this.itemsWidths.length - 1; i >= 0; i--) {\n            const item = this.itemsWidths[i];\n\n            if (!item.canCollapse) {\n                continue;\n            }\n\n            item.processCollapsed(collapseDelta > 0);\n            collapseDelta -= item.collapsedItemsWidth;\n        }\n    }\n\n    ngAfterViewInit(): void {\n        // Note: this wait is required for loading and rendering fonts for icons;\n        // unfortunately we cannot control font rendering\n        setTimeout(() => this.updateCollapsed(), 0);\n    }\n\n    ngOnDestroy() {\n        this._resizeSubscription.unsubscribe();\n    }\n\n    private calculateAndCacheTotalItemsWidth() {\n        this._totalItemsWidths = this.itemsWidths\n            .reduce((acc, item) => acc + item.width, 0);\n    }\n\n    private getOuterElementWidth(element: HTMLElement): number {\n        const baseWidth  = element.getBoundingClientRect().width;\n        const marginRight = parseInt(getComputedStyle(element).getPropertyValue('margin-right'));\n        const marginLeft = parseInt(getComputedStyle(element).getPropertyValue('margin-left'));\n\n        return baseWidth + marginRight + marginLeft;\n    }\n\n    private calculateAndCacheItemsWidth() {\n        const allItemsSelector = this.secondLevelElements\n            .map((e: string) => `${this.firstLevelElement}>${e}`);\n        const allItems: HTMLElement[] = Array.from(this._elementRef.nativeElement.querySelectorAll(allItemsSelector));\n\n        this._itemsWidths = allItems\n            .map((el) => new CachedItemWidth(el, this.getOuterElementWidth(el), this.getItemsForCollapse(el)));\n    }\n\n    private getItemsForCollapse(element: HTMLElement): CollapsibleItem[] {\n        const icon = element.querySelector(`[${MC_ICON}],${MC_NAVBAR_LOGO},[${MC_NAVBAR_LOGO}]`);\n\n        if (!icon) {\n            return [];\n        }\n\n        return Array.from(element.querySelectorAll(MC_NAVBAR_TITLE))\n            .map((el) => new CollapsibleItem(<HTMLElement> el, el.getBoundingClientRect().width));\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { A11yModule } from '@ptsecurity/cdk/a11y';\nimport { PlatformModule } from '@ptsecurity/cdk/platform';\n\nimport { McIconModule } from '@ptsecurity/mosaic/icon';\n\nimport {\n    McNavbar,\n    McNavbarContainer,\n    McNavbarItem,\n    McNavbarTitle,\n    McNavbarBrand,\n    McNavbarLogo\n} from './navbar.component';\n\n\n@NgModule({\n    imports: [\n        CommonModule,\n        A11yModule,\n        PlatformModule,\n        McIconModule\n    ],\n    exports: [\n        McNavbar,\n        McNavbarContainer,\n        McNavbarTitle,\n        McNavbarItem,\n        McNavbarBrand,\n        McNavbarLogo\n    ],\n    declarations: [\n        McNavbar,\n        McNavbarContainer,\n        McNavbarTitle,\n        McNavbarItem,\n        McNavbarBrand,\n        McNavbarLogo\n    ]\n})\nexport class McNavbarModule {}\n","import {\n    ChangeDetectionStrategy,\n    Component,\n    ViewEncapsulation,\n    ElementRef,\n    Input\n} from '@angular/core';\nimport { CanColor, CanColorCtor, mixinColor, ThemePalette } from '@ptsecurity/mosaic/core';\n\n\nexport type ProgressBarMode = 'determinate' | 'indeterminate';\n\nlet idIterator = 0;\n\nconst MIN_PERCENT = 0;\nconst MAX_PERCENT = 100;\n\nexport class McProgressBarBase {\n    constructor(public _elementRef: ElementRef) {}\n}\n\nexport const _McProgressBarMixinBase:\n    CanColorCtor &\n    typeof McProgressBarBase =\n        mixinColor(McProgressBarBase);\n\n@Component({\n    selector: 'mc-progress-bar',\n    templateUrl: './progress-bar.component.html',\n    styleUrls: ['./progress-bar.css'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n    host: {\n        class: 'mc-progress-bar',\n        '[attr.id]': 'id'\n    }\n})\nexport class McProgressBar extends _McProgressBarMixinBase implements CanColor {\n    @Input() id: string = `mc-progress-bar-${idIterator++}`;\n    @Input() value: number = 0;\n    @Input() mode: ProgressBarMode = 'determinate';\n    @Input() color: ThemePalette = ThemePalette.Primary;\n\n    constructor(elementRef: ElementRef) {\n        super(elementRef);\n    }\n\n    get percentage(): number {\n        return Math.max(MIN_PERCENT, Math.min(MAX_PERCENT, this.value)) / MAX_PERCENT;\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { PlatformModule } from '@ptsecurity/cdk/platform';\n\nimport {\n    McProgressBar\n} from './progress-bar.component';\n\n\n@NgModule({\n    imports: [\n        CommonModule,\n        PlatformModule\n    ],\n    exports: [\n        McProgressBar\n    ],\n    declarations: [\n        McProgressBar\n    ]\n})\nexport class McProgressBarModule {}\n","import {\n    ChangeDetectionStrategy,\n    Component,\n    ViewEncapsulation,\n    ElementRef,\n    Input\n} from '@angular/core';\nimport { CanColor, CanColorCtor, mixinColor, ThemePalette } from '@ptsecurity/mosaic/core';\n\n\nexport type ProgressSpinnerMode = 'determinate' | 'indeterminate';\n\nlet idIterator = 0;\n\nconst MIN_PERCENT = 0;\nconst MAX_PERCENT = 100;\n\nexport class McProgressSpinnerBase {\n    constructor(public _elementRef: ElementRef) {}\n}\n\nexport const _McProgressSpinnerMixinBase:\n    CanColorCtor &\n    typeof McProgressSpinnerBase =\n        mixinColor(McProgressSpinnerBase);\n\nconst MAX_DASH_ARRAY = 273;\n\n@Component({\n    selector: 'mc-progress-spinner',\n    templateUrl: './progress-spinner.component.html',\n    styleUrls: ['./progress-spinner.css'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n    host: {\n        class: 'mc-progress-spinner',\n        '[attr.id]': 'id'\n    }\n})\nexport class McProgressSpinner extends _McProgressSpinnerMixinBase implements CanColor {\n    @Input() id: string = `mc-progress-spinner-${idIterator++}`;\n    @Input() value: number = 0;\n    @Input() mode: ProgressSpinnerMode = 'determinate';\n    @Input() color: ThemePalette = ThemePalette.Primary;\n\n    constructor(elementRef: ElementRef) {\n        super(elementRef);\n    }\n\n    get percentage(): number {\n        return Math.max(MIN_PERCENT, Math.min(MAX_PERCENT, this.value)) / MAX_PERCENT;\n    }\n\n    get dashOffsetPercent(): string {\n        return `${MAX_DASH_ARRAY - this.percentage * MAX_DASH_ARRAY}%`;\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { PlatformModule } from '@ptsecurity/cdk/platform';\n\nimport { McProgressSpinner } from './progress-spinner.component';\n\n\n@NgModule({\n    imports: [\n        CommonModule,\n        PlatformModule\n    ],\n    exports: [\n        McProgressSpinner\n    ],\n    declarations: [\n        McProgressSpinner\n    ]\n})\nexport class McProgressSpinnerModule {}\n","import {\n    AfterContentInit,\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component, ContentChildren, Directive, ElementRef, EventEmitter, forwardRef,\n    Input, OnDestroy, OnInit, Optional, Output, QueryList,\n    ViewChild,\n    ViewEncapsulation\n} from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\n\nimport { UniqueSelectionDispatcher } from '@ptsecurity/cdk/collections';\n\nimport {\n    CanColor, CanColorCtor,\n    CanDisable, CanDisableCtor,\n    HasTabIndex, HasTabIndexCtor,\n    mixinColor,\n    mixinDisabled,\n    mixinTabIndex,\n    toBoolean\n} from '@ptsecurity/mosaic/core';\n\n\n// Increasing integer for generating unique ids for radio components.\nlet nextUniqueId = 0;\n\n/** Change event object emitted by McRadio. */\nexport class McRadioChange {\n    constructor(\n        /** The McRadioButton that emits the change event. */\n        public source: McRadioButton,\n        /** The value of the McRadioButton. */\n        public value: any) {}\n}\n\n// Boilerplate for applying mixins to McRadioGroup.\n/** @docs-private */\nexport class McRadioGroupBase {}\nexport const _McRadioGroupMixinBase: CanDisableCtor & typeof McRadioGroupBase = mixinDisabled(McRadioGroupBase);\n\n/**\n * Provider Expression that allows mc-radio-group to register as a ControlValueAccessor. This\n * allows it to support [(ngModel)] and ngControl.\n * @docs-private\n */\nexport const MC_RADIO_GROUP_CONTROL_VALUE_ACCESSOR: any = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => McRadioGroup),\n    multi: true\n};\n\n@Directive({\n    selector: 'mc-radio-group',\n    exportAs: 'mcRadioGroup',\n    providers: [MC_RADIO_GROUP_CONTROL_VALUE_ACCESSOR],\n    host: {\n        role: 'radiogroup',\n        class: 'mc-radio-group'\n    },\n    inputs: ['disabled']\n})\nexport class McRadioGroup extends _McRadioGroupMixinBase\n    implements AfterContentInit, ControlValueAccessor, CanDisable {\n\n    /** Name of the radio button group. All radio buttons inside this group will use this name. */\n    @Input()\n    get name(): string { return this._name; }\n    set name(value: string) {\n        this._name = value;\n        this.updateRadioButtonNames();\n    }\n\n    /** Whether the labels should appear after or before the radio-buttons. Defaults to 'after' */\n    @Input()\n    get labelPosition(): 'before' | 'after' {\n        return this._labelPosition;\n    }\n    set labelPosition(v) {\n        this._labelPosition = v === 'before' ? 'before' : 'after';\n        this.markRadiosForCheck();\n    }\n\n    /** Value of the radio button. */\n    @Input()\n    get value(): any { return this._value; }\n    set value(newValue: any) {\n        if (this._value !== newValue) {\n            // Set this before proceeding to ensure no circular loop occurs with selection.\n            this._value = newValue;\n\n            this.updateSelectedRadioFromValue();\n            this.checkSelectedRadioButton();\n        }\n    }\n\n    /** Whether the radio button is selected. */\n    @Input()\n    get selected() { return this._selected; }\n    set selected(selected: McRadioButton | null) {\n        this._selected = selected;\n        this.value = selected ? selected.value : null;\n        this.checkSelectedRadioButton();\n    }\n\n    /** Whether the radio group is disabled */\n    @Input()\n    get disabled(): boolean { return this._disabled; }\n    set disabled(value) {\n        this._disabled = toBoolean(value);\n        this.markRadiosForCheck();\n    }\n\n    /** Whether the radio group is required */\n    @Input()\n    get required(): boolean { return this._required; }\n    set required(value: boolean) {\n        this._required = toBoolean(value);\n        this.markRadiosForCheck();\n    }\n\n    /**\n     * Event emitted when the group value changes.\n     * Change events are only emitted when the value changes due to user interaction with\n     * a radio button (the same behavior as `<input type-\"radio\">`).\n     */\n    @Output() readonly change: EventEmitter<McRadioChange> = new EventEmitter<McRadioChange>();\n\n    /** Child radio buttons. */\n    @ContentChildren(forwardRef(() => McRadioButton), { descendants: true })\n    _radios: QueryList<McRadioButton>;\n\n    /**\n     * Selected value for group. Should equal the value of the selected radio button if there *is*\n     * a corresponding radio button with a matching value. If there is *not* such a corresponding\n     * radio button, this value persists to be applied in case a new radio button is added with a\n     * matching value.\n     */\n    private _value: any = null;\n\n    /** The HTML name attribute applied to radio buttons in this group. */\n    private _name: string = `mc-radio-group-${nextUniqueId++}`;\n\n    /** The currently selected radio button. Should match value. */\n    private _selected: McRadioButton | null = null;\n\n    /** Whether the `value` has been set to its initial value. */\n    private _isInitialized: boolean = false;\n\n    /** Whether the labels should appear after or before the radio-buttons. Defaults to 'after' */\n    private _labelPosition: 'before' | 'after' = 'after';\n\n    /** Whether the radio group is disabled. */\n    private _disabled: boolean = false;\n\n    /** Whether the radio group is required. */\n    private _required: boolean = false;\n\n    constructor(\n        private readonly _changeDetector: ChangeDetectorRef\n    ) {\n        super();\n    }\n\n    /** The method to be called in order to update ngModel */\n    // tslint:disable-next-line\n    controlValueAccessorChangeFn: (value: any) => void = () => {};\n\n    /**\n     * onTouch function registered via registerOnTouch (ControlValueAccessor).\n     * @docs-private\n     */\n    // tslint:disable-next-line\n    onTouched: () => any = () => {};\n\n    checkSelectedRadioButton() {\n        if (this._selected && !this._selected.checked) {\n            this._selected.checked = true;\n        }\n    }\n\n    /**\n     * Initialize properties once content children are available.\n     * This allows us to propagate relevant attributes to associated buttons.\n     */\n    ngAfterContentInit() {\n        // Mark this component as initialized in AfterContentInit because the initial value can\n        // possibly be set by NgModel on McRadioGroup, and it is possible that the OnInit of the\n        // NgModel occurs *after* the OnInit of the McRadioGroup.\n        this._isInitialized = true;\n    }\n\n    /**\n     * Mark this group as being \"touched\" (for ngModel). Meant to be called by the contained\n     * radio buttons upon their blur.\n     */\n    touch() {\n        if (this.onTouched) {\n            this.onTouched();\n        }\n    }\n\n    /** Dispatch change event with current selection and group value. */\n    emitChangeEvent(): void {\n        if (this._isInitialized) {\n            this.change.emit(new McRadioChange(this._selected!, this._value));\n        }\n    }\n\n    markRadiosForCheck() {\n        if (this._radios) {\n            this._radios.forEach((radio) => radio.markForCheck());\n        }\n    }\n\n    /**\n     * Sets the model value. Implemented as part of ControlValueAccessor.\n     */\n    writeValue(value: any) {\n        this.value = value;\n        this._changeDetector.markForCheck();\n    }\n\n    /**\n     * Registers a callback to be triggered when the model value changes.\n     * Implemented as part of ControlValueAccessor.\n     * @param fn Callback to be registered.\n     */\n    registerOnChange(fn: (value: any) => void) {\n        this.controlValueAccessorChangeFn = fn;\n    }\n\n    /**\n     * Registers a callback to be triggered when the control is touched.\n     * Implemented as part of ControlValueAccessor.\n     * @param fn Callback to be registered.\n     */\n    registerOnTouched(fn: any) {\n        this.onTouched = fn;\n    }\n\n    /**\n     * Sets the disabled state of the control. Implemented as a part of ControlValueAccessor.\n     * @param isDisabled Whether the control should be disabled.\n     */\n    setDisabledState(isDisabled: boolean) {\n        this.disabled = isDisabled;\n        this._changeDetector.markForCheck();\n    }\n\n    private updateRadioButtonNames(): void {\n        if (this._radios) {\n            this._radios.forEach((radio) => {\n                radio.name = this.name;\n            });\n        }\n    }\n\n    /** Updates the `selected` radio button from the internal _value state. */\n    private updateSelectedRadioFromValue(): void {\n        // If the value already matches the selected radio, do nothing.\n        const isAlreadySelected = this._selected !== null && this._selected.value === this._value;\n\n        if (this._radios != null && !isAlreadySelected) {\n            this._selected = null;\n            this._radios.forEach((radio) => {\n                radio.checked = this.value === radio.value;\n                if (radio.checked) {\n                    this._selected = radio;\n                }\n            });\n        }\n    }\n}\n\n\n// Boilerplate for applying mixins to McRadioButton.\n/** @docs-private */\nexport class McRadioButtonBase {\n    // Since the disabled property is manually defined for the McRadioButton and isn't set up in\n    // the mixin base class. To be able to use the tabindex mixin, a disabled property must be\n    // defined to properly work.\n    disabled: boolean;\n\n    constructor(public _elementRef: ElementRef) {}\n}\n\nexport const _McRadioButtonMixinBase:\n    CanColorCtor &\n    HasTabIndexCtor &\n    typeof McRadioButtonBase =\n        mixinColor(mixinTabIndex(McRadioButtonBase));\n\n\n@Component({\n    selector: 'mc-radio-button',\n    templateUrl: 'radio.component.html',\n    styleUrls: ['radio.css'],\n    inputs: ['color', 'tabIndex'],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    exportAs: 'mcRadioButton',\n    host: {\n        class: 'mc-radio-button',\n        '[attr.id]': 'id',\n        '[class.mc-checked]': 'checked',\n        '[class.mc-disabled]': 'disabled',\n        '(focus)': '_inputElement.nativeElement.focus()'\n    }\n})\nexport class McRadioButton extends _McRadioButtonMixinBase\n    implements OnInit, OnDestroy, CanColor, HasTabIndex {\n\n    private readonly _uniqueId: string = `mc-radio-${++nextUniqueId}`;\n\n    /* tslint:disable:member-ordering */\n\n    /** The unique ID for the radio button. */\n    @Input() id: string = this._uniqueId;\n\n    /** Analog to HTML 'name' attribute used to group radios for unique selection. */\n    @Input() name: string;\n\n    /** Used to set the 'aria-label' attribute on the underlying input element. */\n    @Input('aria-label') ariaLabel: string;\n\n    /** The 'aria-labelledby' attribute takes precedence as the element's text alternative. */\n    @Input('aria-labelledby') ariaLabelledby: string;\n\n    /** The 'aria-describedby' attribute is read after the element's label and field type. */\n    @Input('aria-describedby') ariaDescribedby: string;\n\n    /** Whether this radio button is checked. */\n    @Input()\n    get checked(): boolean { return this._checked; }\n    set checked(value: boolean) {\n        const newCheckedState = toBoolean(value);\n\n        if (this._checked !== newCheckedState) {\n            this._checked = newCheckedState;\n\n            if (newCheckedState && this.radioGroup && this.radioGroup.value !== this.value) {\n                this.radioGroup.selected = this;\n            } else if (!newCheckedState && this.radioGroup && this.radioGroup.value === this.value) {\n                // When unchecking the selected radio button, update the selected radio\n                // property on the group.\n                this.radioGroup.selected = null;\n            }\n\n            if (newCheckedState) {\n                // Notify all radio buttons with the same name to un-check.\n                this._radioDispatcher.notify(this.id, this.name);\n            }\n            this._changeDetector.markForCheck();\n        }\n    }\n\n    /** The value of this radio button. */\n    @Input()\n    get value(): any { return this._value; }\n    set value(value: any) {\n        if (this._value !== value) {\n            this._value = value;\n            if (this.radioGroup != null) {\n                if (!this.checked) {\n                    // Update checked when the value changed to match the radio group's value\n                    this.checked = this.radioGroup.value === value;\n                }\n                if (this.checked) {\n                    this.radioGroup.selected = this;\n                }\n            }\n        }\n    }\n\n    /** Whether the radio button is disabled. */\n    @Input()\n    get disabled(): boolean {\n        return this._disabled || (this.radioGroup != null && this.radioGroup.disabled);\n    }\n    set disabled(value: boolean) {\n        const newDisabledState = toBoolean(value);\n\n        if (this._disabled !== newDisabledState) {\n\n            this._disabled = newDisabledState;\n            this._changeDetector.markForCheck();\n        }\n    }\n\n    /** Whether the radio button is required. */\n    @Input()\n    get required(): boolean {\n        return this._required || (this.radioGroup && this.radioGroup.required);\n    }\n    set required(value: boolean) {\n        this._required = toBoolean(value);\n    }\n\n    /** Whether the label should appear after or before the radio button. Defaults to 'after' */\n    @Input()\n    get labelPosition(): 'before' | 'after' {\n        return this._labelPosition || (this.radioGroup && this.radioGroup.labelPosition) || 'after';\n    }\n    set labelPosition(value) {\n        this._labelPosition = value;\n    }\n    private _labelPosition: 'before' | 'after';\n\n    /** The native `<input type=radio>` element */\n    @ViewChild('input') _inputElement: ElementRef;\n\n    /**\n     * Event emitted when the checked state of this radio button changes.\n     * Change events are only emitted when the value changes due to user interaction with\n     * the radio button (the same behavior as `<input type-\"radio\">`).\n     */\n    @Output() readonly change: EventEmitter<McRadioChange> = new EventEmitter<McRadioChange>();\n\n    /** The parent radio group. May or may not be present. */\n    radioGroup: McRadioGroup;\n\n    @Input()\n    isFocused: boolean = false;\n\n    /** ID of the native input element inside `<mc-radio-button>` */\n    get inputId(): string { return `${this.id || this._uniqueId}-input`; }\n\n    /** Whether this radio is checked. */\n    private _checked: boolean = false;\n\n    /** Whether this radio is disabled. */\n    private _disabled: boolean;\n\n    /** Whether this radio is required. */\n    private _required: boolean;\n\n    /** Value assigned to this radio. */\n    private _value: any = null;\n\n    /** Unregister function for _radioDispatcher */\n    // tslint:disable-next-line\n    private readonly removeUniqueSelectionListener: () => void = () => {};\n\n    constructor(\n        @Optional() radioGroup: McRadioGroup,\n        elementRef: ElementRef,\n        private readonly _changeDetector: ChangeDetectorRef,\n        private readonly _radioDispatcher: UniqueSelectionDispatcher\n    ) {\n\n        super(elementRef);\n\n        this.radioGroup = radioGroup;\n\n        this.removeUniqueSelectionListener =\n            _radioDispatcher.listen((id: string, name: string) => {\n                if (id !== this.id && name === this.name) {\n                    this.checked = false;\n                }\n            });\n    }\n\n    ngOnInit() {\n        if (this.radioGroup) {\n            // If the radio is inside a radio group, determine if it should be checked\n            this.checked = this.radioGroup.value === this._value;\n            // Copy name from parent radio group\n            this.name = this.radioGroup.name;\n        }\n    }\n\n    ngOnDestroy() {\n        this.removeUniqueSelectionListener();\n    }\n\n    /** Focuses the radio button. */\n    // tslint:disable-next-line\n    focus(): void {}\n\n    /**\n     * Marks the radio button as needing checking for change detection.\n     * This method is exposed because the parent radio group will directly\n     * update bound properties of the radio button.\n     */\n    markForCheck() {\n        // When group value changes, the button will not be notified. Use `markForCheck` to explicit\n        // update radio button's status\n        this._changeDetector.markForCheck();\n    }\n\n    onInputClick(event: Event) {\n        // We have to stop propagation for click events on the visual hidden input element.\n        // By default, when a user clicks on a label element, a generated click event will be\n        // dispatched on the associated input element. Since we are using a label element as our\n        // root container, the click event on the `radio-button` will be executed twice.\n        // The real click event will bubble up, and the generated click event also tries to bubble up.\n        // This will lead to multiple click events.\n        // Preventing bubbling for the second event will solve that issue.\n        event.stopPropagation();\n    }\n\n    onInputChange(event: Event) {\n        // We always have to stop propagation on the change event.\n        // Otherwise the change event, from the input element, will bubble up and\n        // emit its event object to the `change` output.\n        event.stopPropagation();\n\n        const groupValueChanged = this.radioGroup && this.value !== this.radioGroup.value;\n        this.checked = true;\n        this.emitChangeEvent();\n\n        if (this.radioGroup) {\n            this.radioGroup.controlValueAccessorChangeFn(this.value);\n            this.radioGroup.touch();\n            if (groupValueChanged) {\n                this.radioGroup.emitChangeEvent();\n            }\n        }\n    }\n\n    /** Dispatch change event with current value. */\n    private emitChangeEvent(): void {\n        this.change.emit(new McRadioChange(this, this._value));\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { A11yModule } from '@ptsecurity/cdk/a11y';\nimport { McCommonModule } from '@ptsecurity/mosaic/core';\n\nimport { McRadioButton, McRadioGroup } from './radio.component';\n\n\n@NgModule({\n    imports: [CommonModule, A11yModule, McCommonModule],\n    exports: [McRadioGroup, McRadioButton],\n    declarations: [McRadioGroup, McRadioButton]\n})\nexport class McRadioModule {\n}\n","import { Directive, Input } from '@angular/core';\n\nimport { CdkTreeNodeDef } from '@ptsecurity/cdk/tree';\n\n\n@Directive({\n    selector: '[mcTreeNodeDef]',\n    inputs: ['when: mcTreeNodeDefWhen'],\n    providers: [{ provide: CdkTreeNodeDef, useExisting: McTreeNodeDef }]\n})\nexport class McTreeNodeDef<T> extends CdkTreeNodeDef<T> {\n    @Input('mcTreeNode') data: T;\n}\n","import { Directive, Input, OnInit } from '@angular/core';\nimport { CdkTreeNodePadding } from '@ptsecurity/cdk/tree';\n\n\n@Directive({\n    selector: '[mcTreeNodePadding]',\n    providers: [{ provide: CdkTreeNodePadding, useExisting: McTreeNodePadding }]\n})\nexport class McTreeNodePadding<T> extends CdkTreeNodePadding<T> implements OnInit {\n    get leftPadding(): number {\n        return (this._withIcon ? 0 : this._iconWidth) + this._baseLeftPadding;\n    }\n\n    _baseLeftPadding: number = 6;\n    _iconWidth: number = 20;\n    _indent: number = 16;\n\n    @Input('mcTreeNodePadding') level: number;\n\n    @Input('mcTreeNodePaddingIndent') indent: number;\n\n    _withIcon: boolean;\n\n    _paddingIndent(): string | null {\n        const nodeLevel = (this._treeNode.data && this._tree.treeControl.getLevel)\n            ? this._tree.treeControl.getLevel(this._treeNode.data)\n            : null;\n\n        const level = this._level || nodeLevel;\n\n        return level ? `${(level * this._indent) + this.leftPadding}px` : `${this._baseLeftPadding}px`;\n    }\n\n    ngOnInit(): void {\n        this._withIcon = this._tree.treeControl.isExpandable(this._treeNode.data);\n        this._setPadding();\n    }\n}\n","import {\n    AfterContentInit,\n    Attribute,\n    ChangeDetectionStrategy,\n    Component,\n    ContentChildren,\n    ElementRef,\n    EventEmitter,\n    forwardRef,\n    Input,\n    Output,\n    QueryList,\n    ViewEncapsulation,\n    ChangeDetectorRef,\n    Inject,\n    OnDestroy,\n    OnInit,\n    ViewChild\n} from '@angular/core';\n\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\n\nimport { Subscription } from 'rxjs';\n\nimport { FocusKeyManager, IFocusableOption } from '@ptsecurity/cdk/a11y';\nimport { SelectionModel } from '@ptsecurity/cdk/collections';\nimport { END, ENTER, HOME, PAGE_DOWN, PAGE_UP, SPACE } from '@ptsecurity/cdk/keycodes';\n\nimport {\n    McLine,\n    McLineSetter,\n    CanDisable,\n    mixinDisabled,\n    toBoolean, CanDisableCtor\n} from '@ptsecurity/mosaic/core';\n\n\n/**\n * Component for list-options of selection-list. Each list-option can automatically\n * generate a checkbox and can put current item into the selectionModel of selection-list\n * if the current item is selected.\n */\n@Component({\n    exportAs: 'mcListOption',\n    selector: 'mc-list-option',\n    host: {\n        tabindex: '-1',\n\n        class: 'mc-list-option',\n        '[class.mc-selected]': 'selected',\n        '[class.mc-focused]': '_hasFocus',\n        '(focus)': '_handleFocus()',\n        '(blur)': '_handleBlur()',\n        '(click)': '_handleClick()'\n    },\n    templateUrl: 'list-option.html',\n    encapsulation: ViewEncapsulation.None,\n    preserveWhitespaces: false,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class McListOption implements AfterContentInit, OnDestroy, OnInit, IFocusableOption {\n    _hasFocus: boolean = false;\n\n    @ContentChildren(McLine) _lines: QueryList<McLine>;\n\n    @ViewChild('text') _text: ElementRef;\n\n    // Whether the label should appear before or after the checkbox. Defaults to 'after'\n    @Input() checkboxPosition: 'before' | 'after' = 'after';\n\n    @Input() value: any;\n\n    @Input()\n    get disabled() {\n        return this._disabled || (this.listSelection && this.listSelection.disabled);\n    }\n\n    set disabled(value: any) {\n        const newValue = toBoolean(value);\n\n        if (newValue !== this._disabled) {\n            this._disabled = newValue;\n            this._changeDetector.markForCheck();\n        }\n    }\n\n    @Input()\n    get selected(): boolean {\n        return this.listSelection.selectedOptions && this.listSelection.selectedOptions.isSelected(this) || false;\n    }\n\n    set selected(value: boolean) {\n        const isSelected = toBoolean(value);\n\n        if (isSelected !== this._selected) {\n            this.setSelected(isSelected);\n\n            this.listSelection._reportValueChange();\n        }\n    }\n\n    private _lineSetter: McLineSetter;\n    private _selected = false;\n    private _disabled = false;\n\n    constructor(\n        private _element: ElementRef,\n        private _changeDetector: ChangeDetectorRef,\n        @Inject(forwardRef(() => McListSelection))\n        public listSelection: McListSelection\n    ) {}\n\n    ngOnInit() {\n        if (this._selected) {\n            // List options that are selected at initialization can't be reported properly to the form\n            // control. This is because it takes some time until the selection-list knows about all\n            // available options. Also it can happen that the ControlValueAccessor has an initial value\n            // that should be used instead. Deferring the value change report to the next tick ensures\n            // that the form control value is not being overwritten.\n            const wasSelected = this._selected;\n\n            Promise.resolve().then(() => {\n                if (this._selected || wasSelected) {\n                    this.selected = true;\n                    this._changeDetector.markForCheck();\n                }\n            });\n        }\n    }\n\n    ngAfterContentInit() {\n        this._lineSetter = new McLineSetter(this._lines, this._element);\n    }\n\n    ngOnDestroy(): void {\n        if (this.selected) {\n            // We have to delay this until the next tick in order\n            // to avoid changed after checked errors.\n            Promise.resolve().then(() => this.selected = false);\n        }\n\n        this.listSelection._removeOptionFromList(this);\n    }\n\n    toggle(): void {\n        this.selected = !this.selected;\n    }\n\n    focus(): void {\n        this._element.nativeElement.focus();\n\n        this.listSelection.setFocusedOption(this);\n    }\n\n    getLabel() {\n        return this._text ? this._text.nativeElement.textContent : '';\n    }\n\n    setSelected(selected: boolean) {\n        if (this._selected === selected || !this.listSelection.selectedOptions) { return; }\n\n        this._selected = selected;\n\n        if (selected) {\n            this.listSelection.selectedOptions.select(this);\n        } else {\n            this.listSelection.selectedOptions.deselect(this);\n        }\n\n        this._changeDetector.markForCheck();\n    }\n\n    _getHeight(): number {\n        return this._element.nativeElement.getClientRects()[0].height;\n    }\n\n    _handleClick() {\n        if (this.disabled) { return; }\n\n        this.listSelection.setFocusedOption(this);\n    }\n\n    _handleFocus() {\n        if (this.disabled || this._hasFocus) { return; }\n\n        this._hasFocus = true;\n    }\n\n    _handleBlur() {\n        this._hasFocus = false;\n\n        this.listSelection._onTouched();\n    }\n\n    _getHostElement(): HTMLElement {\n        return this._element.nativeElement;\n    }\n}\n\n\nexport const MC_SELECTION_LIST_VALUE_ACCESSOR: any = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => McListSelection),\n    multi: true\n};\n\n// Change event that is being fired whenever the selected state of an option changes. */\nexport class McListSelectionChange {\n    constructor(\n        // Reference to the selection list that emitted the event.\n        public source: McListSelection,\n        // Reference to the option that has been changed.\n        public option: McListOption\n    ) {}\n}\n\n\nexport class McListSelectionBase {}\n\nexport const _McListSelectionMixinBase: CanDisableCtor & typeof McListSelectionBase\n    = mixinDisabled(McListSelectionBase);\n\n@Component({\n    exportAs: 'mcListSelection',\n    selector: 'mc-list-selection',\n    template: '<ng-content></ng-content>',\n    styleUrls: ['./list.css'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n    inputs: ['disabled', 'tabIndex'],\n    host: {\n        class: 'mc-list-selection',\n        '[tabIndex]': 'tabIndex',\n        '(focus)': 'focus()',\n        '(blur)': '_onTouched()',\n        '(keydown)': '_onKeyDown($event)',\n        '(window:resize)': 'updateScrollSize()'\n    },\n    providers: [MC_SELECTION_LIST_VALUE_ACCESSOR],\n    preserveWhitespaces: false\n})\nexport class McListSelection extends _McListSelectionMixinBase implements\n    IFocusableOption, CanDisable, AfterContentInit, ControlValueAccessor {\n\n    _keyManager: FocusKeyManager<McListOption>;\n\n    // The option components contained within this selection-list.\n    @ContentChildren(McListOption) options: QueryList<McListOption>;\n\n    tabIndex: number;\n\n    autoSelect: boolean;\n    noUnselect: boolean;\n    multiple: boolean;\n\n    // todo temporary solution\n    withShift: boolean;\n    withCtrl: boolean;\n\n    @Input() horizontal: boolean = false;\n\n    // Emits a change event whenever the selected state of an option changes.\n    @Output() readonly selectionChange: EventEmitter<McListSelectionChange> = new EventEmitter<McListSelectionChange>();\n\n    selectedOptions: SelectionModel<McListOption>;\n\n    // Used for storing the values that were assigned before the options were initialized.\n    private _tempValues: string[] | null;\n\n    private _modelChanges = Subscription.EMPTY;\n\n    constructor(\n        private _element: ElementRef,\n        @Attribute('tabindex') tabIndex: string,\n        @Attribute('auto-select') autoSelect: string,\n        @Attribute('no-unselect') noUnselect: string,\n        @Attribute('multiple') multiple: string\n    ) {\n        super();\n\n        this.autoSelect = autoSelect === null ? true : toBoolean(autoSelect);\n        this.multiple = multiple === null ? true : toBoolean(multiple);\n        this.noUnselect = noUnselect === null ? true : toBoolean(noUnselect);\n\n        this.tabIndex = parseInt(tabIndex) || 0;\n\n        this.selectedOptions = new SelectionModel<McListOption>(this.multiple);\n    }\n\n    ngAfterContentInit(): void {\n        this.horizontal = toBoolean(this.horizontal);\n\n        this._keyManager = new FocusKeyManager<McListOption>(this.options)\n            .withTypeAhead()\n            .withVerticalOrientation(!this.horizontal)\n            .withHorizontalOrientation(this.horizontal ? 'ltr' : null);\n\n        if (this._tempValues) {\n            this._setOptionsFromValues(this._tempValues);\n            this._tempValues = null;\n        }\n\n        // Sync external changes to the model back to the options.\n        this._modelChanges = this.selectedOptions.onChange!.subscribe((event) => {\n            for (const item of event.added) {\n                item.selected = true;\n            }\n\n            for (const item of event.removed) {\n                item.selected = false;\n            }\n        });\n\n        this.updateScrollSize();\n    }\n\n    ngOnDestroy() {\n        this._modelChanges.unsubscribe();\n    }\n\n    focus() {\n        this._element.nativeElement.focus();\n    }\n\n    selectAll() {\n        this.options.forEach((option) => option.setSelected(true));\n\n        this._reportValueChange();\n    }\n\n    deselectAll() {\n        this.options.forEach((option) => option.setSelected(false));\n\n        this._reportValueChange();\n    }\n\n    updateScrollSize(): void {\n        if (this.horizontal || !this.options.first) { return; }\n\n        this._keyManager.withScrollSize(Math.floor(this._getHeight() / this.options.first._getHeight()));\n    }\n\n    // Sets the focused option of the selection-list.\n    setFocusedOption(option: McListOption): void {\n        this._keyManager.updateActiveItem(option);\n\n        if (this.withShift && this.multiple) {\n            const previousIndex = this._keyManager.previousActiveItemIndex;\n            const activeIndex = this._keyManager.activeItemIndex;\n\n            if (previousIndex < activeIndex) {\n                this.options.forEach((item, index) => {\n                    if (index >= previousIndex && index <= activeIndex) { item.setSelected(true); }\n                });\n            } else {\n                this.options.forEach((item, index) => {\n                    if (index >= activeIndex && index <= previousIndex) { item.setSelected(true); }\n                });\n            }\n\n            this.withShift = false;\n        } else if (this.withCtrl) {\n            this.withCtrl = false;\n\n            if (!this._canDeselectLast(option)) { return; }\n\n            option.toggle();\n        } else {\n            if (this.autoSelect) {\n                this.options.forEach((item) => item.setSelected(false));\n                option.setSelected(true);\n            }\n        }\n\n        this._emitChangeEvent(option);\n        this._reportValueChange();\n    }\n\n    // Implemented as part of ControlValueAccessor.\n    writeValue(values: string[]): void {\n        if (this.options) {\n            this._setOptionsFromValues(values || []);\n        } else {\n            this._tempValues = values;\n        }\n    }\n\n    // Implemented as part of ControlValueAccessor.\n    registerOnChange(fn: (value: any) => void): void {\n        this._onChange = fn;\n    }\n\n    // Implemented as part of ControlValueAccessor.\n    registerOnTouched(fn: () => void): void {\n        this._onTouched = fn;\n    }\n\n    // Implemented as a part of ControlValueAccessor.\n    setDisabledState(isDisabled: boolean): void {\n        if (this.options) {\n            this.options.forEach((option) => option.disabled = isDisabled);\n        }\n    }\n\n    getSelectedOptionValues(): string[] {\n        return this.options.filter((option) => option.selected).map((option) => option.value);\n    }\n\n    // Toggles the selected state of the currently focused option.\n    toggleFocusedOption(): void {\n        const focusedIndex = this._keyManager.activeItemIndex;\n\n        if (focusedIndex != null && this._isValidIndex(focusedIndex)) {\n            const focusedOption: McListOption = this.options.toArray()[focusedIndex];\n\n            if (focusedOption && this._canDeselectLast(focusedOption)) {\n                focusedOption.toggle();\n\n                // Emit a change event because the focused option changed its state through user interaction.\n                this._emitChangeEvent(focusedOption);\n            }\n        }\n    }\n\n    _canDeselectLast(listOption: McListOption): boolean {\n        return !(this.noUnselect && this.selectedOptions.selected.length === 1 && listOption.selected);\n    }\n\n    _getHeight(): number {\n        return this._element.nativeElement.getClientRects()[0].height;\n    }\n\n    // View to model callback that should be called if the list or its options lost focus.\n    _onTouched: () => void = () => {};\n\n    // Removes an option from the selection list and updates the active item.\n    _removeOptionFromList(option: McListOption) {\n        if (option._hasFocus) {\n            const optionIndex = this._getOptionIndex(option);\n\n            // Check whether the option is the last item\n            if (optionIndex > 0) {\n                this._keyManager.setPreviousItemActive();\n            } else if (optionIndex === 0 && this.options.length > 1) {\n                this._keyManager.setNextItemActive();\n            }\n        }\n    }\n\n    _onKeyDown(event: KeyboardEvent) {\n        const keyCode = event.keyCode;\n        this.withShift = event.shiftKey;\n        this.withCtrl = event.ctrlKey;\n\n        switch (keyCode) {\n            case SPACE:\n            case ENTER:\n                this.toggleFocusedOption();\n                event.preventDefault();\n\n                break;\n            case HOME:\n                this._keyManager.setFirstItemActive();\n                event.preventDefault();\n\n                break;\n            case END:\n                this._keyManager.setLastItemActive();\n                event.preventDefault();\n\n                break;\n            case PAGE_UP:\n                if (!this.horizontal) { this._keyManager.setPreviousPageItemActive(); }\n\n                event.preventDefault();\n\n                break;\n            case PAGE_DOWN:\n                if (!this.horizontal) { this._keyManager.setNextPageItemActive(); }\n\n                event.preventDefault();\n\n                break;\n            default:\n                this._keyManager.onKeydown(event);\n        }\n    }\n\n    // Reports a value change to the ControlValueAccessor\n    _reportValueChange() {\n        if (this.options) {\n            this._onChange(this.getSelectedOptionValues());\n        }\n    }\n\n    // Emits a change event if the selected state of an option changed.\n    _emitChangeEvent(option: McListOption) {\n        this.selectionChange.emit(new McListSelectionChange(this, option));\n    }\n\n    // Returns the option with the specified value.\n    private _getOptionByValue(value: string): McListOption | undefined {\n        return this.options.find((option) => option.value === value);\n    }\n\n    // Sets the selected options based on the specified values.\n    private _setOptionsFromValues(values: string[]) {\n        this.options.forEach((option) => option.setSelected(false));\n\n        values\n            .map((value) => this._getOptionByValue(value))\n            .filter(Boolean)\n            .forEach((option) => option!.setSelected(true));\n    }\n\n    /**\n     * Utility to ensure all indexes are valid.\n     * @param index The index to be checked.\n     * @returns True if the index is valid for our list of options.\n     */\n    private _isValidIndex(index: number): boolean {\n        return index >= 0 && index < this.options.length;\n    }\n\n    // Returns the index of the specified list option.\n    private _getOptionIndex(option: McListOption): number {\n        return this.options.toArray().indexOf(option);\n    }\n\n    // View to model callback that should be called whenever the selected options change.\n    private _onChange: (value: any) => void = (_: any) => {};\n}\n","// todo пока не делаем, перенесено из материала, но у нас в доках таких простых списков нет.\nimport {\n    AfterContentInit, ChangeDetectionStrategy, Component, ContentChildren, Directive, ElementRef, QueryList,\n    ViewEncapsulation\n} from '@angular/core';\n\nimport { McLine, McLineSetter } from '@ptsecurity/mosaic/core';\n\n\nexport class McListBase {}\n\n@Component({\n    selector: 'mc-list',\n    host: { class: 'mc-list' },\n    template: '<ng-content></ng-content>',\n    styleUrls: ['./list.css'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None\n})\nexport class McList extends McListBase {}\n\n\n/**\n * Directive whose purpose is to add the mc- CSS styling to this selector.\n * @docs-private\n */\n@Directive({\n    selector: '[mc-subheader], [mcSubheader]',\n    host: { class: 'mc-subheader' }\n})\nexport class McListSubheaderCssStyler {}\n\n\n// Boilerplate for applying mixins to McListItem.\nexport class McListItemBase {}\n\n@Component({\n    selector: 'mc-list-item, a[mc-list-item]',\n    host: {\n        class: 'mc-list-item',\n        '(focus)': '_handleFocus()',\n        '(blur)': '_handleBlur()'\n    },\n    templateUrl: './list-item.html',\n    encapsulation: ViewEncapsulation.None,\n    preserveWhitespaces: false,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class McListItem extends McListItemBase implements AfterContentInit {\n    @ContentChildren(McLine) _lines: QueryList<McLine>;\n\n    private _lineSetter: McLineSetter;\n\n    constructor(private _element: ElementRef) {\n        super();\n    }\n\n    ngAfterContentInit() {\n        this._lineSetter = new McLineSetter(this._lines, this._element);\n    }\n\n    _handleFocus() {\n        this._element.nativeElement.classList.add('mc-focused');\n    }\n\n    _handleBlur() {\n        this._element.nativeElement.classList.remove('mc-focused');\n    }\n\n    _getHostElement(): HTMLElement {\n        return this._element.nativeElement;\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { A11yModule } from '@ptsecurity/cdk/a11y';\n\nimport { McLineModule } from '@ptsecurity/mosaic/core';\n\nimport { McListSelection, McListOption } from './list-selection.component';\nimport { McList, McListItem, McListSubheaderCssStyler } from './list.component';\n\n\n@NgModule({\n    imports: [\n        CommonModule,\n        A11yModule,\n        McLineModule\n    ],\n    exports: [\n        McList,\n        McListSelection,\n        McListItem,\n        McListOption,\n        McListSubheaderCssStyler\n    ],\n    declarations: [\n        McList,\n        McListSelection,\n        McListItem,\n        McListOption,\n        McListSubheaderCssStyler\n    ]\n})\nexport class McListModule {}\n","import {\n    Input,\n    Attribute,\n    Component,\n    ElementRef,\n    OnDestroy,\n    ViewEncapsulation,\n    ChangeDetectionStrategy,\n    ChangeDetectorRef\n} from '@angular/core';\n\nimport { FocusMonitor } from '@ptsecurity/cdk/a11y';\nimport {\n    CanDisable, CanDisableCtor,\n    HasTabIndex, HasTabIndexCtor,\n    mixinDisabled,\n    mixinTabIndex,\n    toBoolean\n} from '@ptsecurity/mosaic/core';\n\n\nexport class McLinkBase {\n    constructor(public _elementRef: ElementRef) {\n    }\n}\n\nexport const _McLinkBase: HasTabIndexCtor & CanDisableCtor & typeof McLinkBase\n    = mixinTabIndex(mixinDisabled(McLinkBase));\n\n@Component({\n    selector: 'a.mc-link',\n    template: `<ng-content></ng-content>`,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n    exportAs: 'mcLink',\n    styleUrls: ['./link.css'],\n    inputs: ['disabled'],\n    host: {\n        '[attr.disabled]': 'disabled || null',\n        '[attr.tabindex]': 'tabIndex'\n    }\n})\n\nexport class McLink extends _McLinkBase implements OnDestroy, HasTabIndex, CanDisable {\n\n    @Input()\n    get disabled() {\n        return this._disabled;\n    }\n\n    set disabled(value: any) {\n        const newValue = toBoolean(value);\n\n        if (newValue !== this._disabled) {\n            this._disabled = newValue;\n            this._changeDetector.markForCheck();\n        }\n    }\n\n    private _disabled = false;\n\n    constructor(\n        @Attribute('tabindex') tabIndex: string,\n        public elementRef: ElementRef,\n        private _focusMonitor: FocusMonitor,\n        private _changeDetector: ChangeDetectorRef) {\n\n        super(elementRef);\n        this._focusMonitor.monitor(elementRef.nativeElement, true);\n        this.tabIndex = parseInt(tabIndex) || 0;\n    }\n\n    ngOnDestroy() {\n        this._focusMonitor.stopMonitoring(this.elementRef.nativeElement);\n    }\n\n    focus(): void {\n        this._getHostElement().focus();\n    }\n\n    _getHostElement() {\n        return this.elementRef.nativeElement;\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { A11yModule } from '@ptsecurity/cdk/a11y';\n\nimport { McLink } from './link.component';\n\n\n@NgModule({\n    imports: [\n        CommonModule,\n        A11yModule\n    ],\n    declarations: [McLink],\n    exports: [McLink]\n})\nexport class McLinkModule {}\n","import { Injectable, Optional, SkipSelf } from '@angular/core';\nimport { Subject, Subscription } from 'rxjs';\n\nimport { McModalRef } from './modal-ref.class';\n\n\ninterface IRegisteredMeta {\n    modalRef: McModalRef;\n    afterOpenSubscription: Subscription;\n    afterCloseSubscription: Subscription;\n}\n\n@Injectable()\nexport class McModalControlService {\n\n    // Track singleton afterAllClose through over the injection tree\n    get afterAllClose(): Subject<void> {\n        return this.parentService ? this.parentService.afterAllClose : this.rootAfterAllClose;\n    }\n\n    // Track singleton openModals array through over the injection tree\n    get openModals(): McModalRef[] {\n        return this.parentService ? this.parentService.openModals : this.rootOpenModals;\n    }\n\n    // @ts-ignore\n    private rootOpenModals: McModalRef[] = this.parentService ? null : [];\n    // @ts-ignore\n    private rootAfterAllClose: Subject<void> = this.parentService ? null : new Subject<void>();\n    // @ts-ignore\n    private rootRegisteredMetaMap: Map<McModalRef, IRegisteredMeta> = this.parentService ? null : new Map();\n\n    // Registered modal for later usage\n    private get registeredMetaMap(): Map<McModalRef, IRegisteredMeta> {\n        return this.parentService ? this.parentService.registeredMetaMap : this.rootRegisteredMetaMap;\n    }\n\n    constructor(\n        @Optional() @SkipSelf() private parentService: McModalControlService) {\n    }\n\n    // Register a modal to listen its open/close\n    registerModal(modalRef: McModalRef): void {\n        if (!this.hasRegistered(modalRef)) {\n            const afterOpenSubscription = modalRef.afterOpen.subscribe(() => this.openModals.push(modalRef));\n            const afterCloseSubscription = modalRef.afterClose.subscribe(() => this.removeOpenModal(modalRef));\n\n            this.registeredMetaMap.set(modalRef, {modalRef, afterOpenSubscription, afterCloseSubscription});\n        }\n    }\n\n    hasRegistered(modalRef: McModalRef): boolean {\n        return this.registeredMetaMap.has(modalRef);\n    }\n\n    // Close all registered opened modals\n    closeAll(): void {\n        let i = this.openModals.length;\n\n        while (i--) {\n            this.openModals[i].close();\n        }\n    }\n\n    private removeOpenModal(modalRef: McModalRef): void {\n        const index = this.openModals.indexOf(modalRef);\n\n        if (index > -1) {\n            this.openModals.splice(index, 1);\n\n            if (!this.openModals.length) {\n                this.afterAllClose.next();\n            }\n        }\n    }\n}\n","import { Observable } from 'rxjs';\n\nimport { McModalComponent } from './modal.component';\n\n\n/**\n * API class that public to users to handle the modal instance.\n * McModalRef is aim to avoid accessing to the modal instance directly by users.\n */\nexport abstract class McModalRef<T = any, R = any> {\n    abstract afterOpen: Observable<void>;\n    abstract afterClose: Observable<R>;\n\n    abstract open(): void;\n\n    abstract close(result?: R): void;\n\n    abstract destroy(result?: R): void;\n\n    /**\n     * Trigger the nzOnOk/nzOnCancel by manual\n     */\n    abstract triggerOk(): void;\n\n    abstract triggerCancel(): void;\n\n    // /**\n    //  * Return the ComponentRef of nzContent when specify nzContent as a Component\n    //  * Note: this method may return undefined if the Component has not ready yet.\n    //    (it only available after Modal's ngOnInit)\n    //  */\n    // abstract getContentComponentRef(): ComponentRef<{}>;\n\n    /**\n     * Return the component instance of nzContent when specify nzContent as a Component\n     * Note: this method may return undefined if the Component has not ready yet.\n     * (it only available after Modal's ngOnInit)\n     */\n    abstract getContentComponent(): T;\n\n    /**\n     * Get the dom element of this Modal\n     */\n    abstract getElement(): HTMLElement;\n\n    /**\n     * Get the instance of the Modal itself\n     */\n    abstract getInstance(): McModalComponent;\n}\n","export interface IClickPosition {\n    x: number;\n    y: number;\n}\n\nexport class ModalUtil {\n    private lastPosition: IClickPosition;\n\n    constructor(private document: Document) {\n        this.lastPosition = {x: -1, y: -1};\n        this.listenDocumentClick();\n    }\n\n    getLastClickPosition(): IClickPosition {\n        return this.lastPosition;\n    }\n\n    listenDocumentClick(): void {\n        this.document.addEventListener('click', (event: MouseEvent) => {\n            this.lastPosition = {x: event.clientX, y: event.clientY};\n        });\n    }\n}\n\nexport default new ModalUtil(document);\n","import { DOCUMENT } from '@angular/common';\nimport {\n    AfterViewInit, ChangeDetectionStrategy, ChangeDetectorRef,\n    Component,\n    ComponentFactoryResolver,\n    ComponentRef,\n    ElementRef,\n    EventEmitter,\n    Inject,\n    Injector,\n    Input,\n    OnChanges,\n    OnDestroy,\n    OnInit,\n    Output,\n    Renderer2,\n    SimpleChanges,\n    TemplateRef,\n    Type,\n    ViewChild,\n    ViewContainerRef, ViewEncapsulation\n} from '@angular/core';\nimport { ESCAPE } from '@ptsecurity/cdk/keycodes';\nimport { Overlay, OverlayRef } from '@ptsecurity/cdk/overlay';\nimport { McMeasureScrollbarService } from '@ptsecurity/mosaic/core';\nimport { Observable } from 'rxjs';\n\nimport { McModalControlService } from './modal-control.service';\nimport { McModalRef } from './modal-ref.class';\n// tslint:disable-next-line\nimport ModalUtil from './modal-util';\nimport { IModalButtonOptions, IModalOptions, ModalType, OnClickCallback } from './modal.type';\n\n\n// Duration when perform animations (ms)\nexport const MODAL_ANIMATE_DURATION = 200;\n\ntype AnimationState = 'enter' | 'leave' | null;\n\n@Component({\n    selector: 'mc-modal',\n    templateUrl: './modal.component.html',\n    styleUrls: ['./modal.css'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n    host: {\n        '(keydown)': 'onKeyDown($event)'\n    }\n})\nexport class McModalComponent<T = any, R = any> extends McModalRef<T, R>\n    implements OnInit, OnChanges, AfterViewInit, OnDestroy, IModalOptions {\n\n    // tslint:disable-next-line:no-any\n    @Input() mcModalType: ModalType = 'default';\n    // If not specified, will use <ng-content>\n    @Input() mcContent: string | TemplateRef<{}> | Type<T>;\n    // available when mcContent is a component\n    @Input() mcComponentParams: object;\n    // Default Modal ONLY\n    @Input() mcFooter: string | TemplateRef<{}> | IModalButtonOptions<T>[];\n\n    @Input()\n    get mcVisible() { return this._mcVisible; }\n    set mcVisible(value) { this._mcVisible = value; }\n    _mcVisible = false;\n\n    @Output() mcVisibleChange = new EventEmitter<boolean>();\n\n    @Input() mcZIndex: number = 1000;\n    @Input() mcWidth: number | string = 480;\n    @Input() mcWrapClassName: string;\n    @Input() mcClassName: string;\n    @Input() mcStyle: object;\n    @Input() mcTitle: string | TemplateRef<{}>;\n    @Input() mcCloseByESC: boolean = true;\n\n    @Input()\n    get mcClosable() { return this._mcClosable; }\n    set mcClosable(value) { this._mcClosable = value; }\n    _mcClosable = true;\n\n    @Input()\n    get mcMask() { return this._mcMask; }\n    set mcMask(value) { this._mcMask = value; }\n    _mcMask = true;\n\n    @Input()\n    get mcMaskClosable() { return this._mcMaskClosable; }\n    set mcMaskClosable(value) { this._mcMaskClosable = value; }\n    _mcMaskClosable = true;\n\n    @Input() mcMaskStyle: object;\n    @Input() mcBodyStyle: object;\n\n    // Trigger when modal open(visible) after animations\n    @Output() mcAfterOpen = new EventEmitter<void>();\n    // Trigger when modal leave-animation over\n    @Output() mcAfterClose = new EventEmitter<R>();\n\n    // --- Predefined OK & Cancel buttons\n    @Input() mcOkText: string;\n    @Input() mcOkType = 'primary';\n\n    @Input()\n    get mcOkLoading() { return this._mcOkLoading; }\n    set mcOkLoading(value) { this._mcOkLoading = value; }\n    _mcOkLoading = false;\n\n    @Input() @Output() mcOnOk: EventEmitter<T> | OnClickCallback<T> = new EventEmitter<T>();\n    // Only aim to focus the ok button that needs to be auto focused\n    @ViewChild('autoFocusButtonOk', {read: ElementRef}) autoFocusButtonOk: ElementRef;\n    @Input() mcCancelText: string;\n\n    @Input()\n    get mcCancelLoading() { return this._mcCancelLoading; }\n    set mcCancelLoading(value) { this._mcCancelLoading = value; }\n    _mcCancelLoading = false;\n\n    @Input() @Output() mcOnCancel: EventEmitter<T> | OnClickCallback<T> = new EventEmitter<T>();\n    @ViewChild('modalContainer') modalContainer: ElementRef;\n    @ViewChild('bodyContainer', {read: ViewContainerRef}) bodyContainer: ViewContainerRef;\n    maskAnimationClassMap: object;\n    modalAnimationClassMap: object;\n    // The origin point that animation based on\n    transformOrigin = '0px 0px 0px';\n\n    // Observable alias for mcAfterOpen\n    get afterOpen(): Observable<void> {\n        return this.mcAfterOpen.asObservable();\n    }\n\n    // Observable alias for mcAfterClose\n    get afterClose(): Observable<R> {\n        return this.mcAfterClose.asObservable();\n    }\n\n    get okText(): string {\n        return this.mcOkText;\n    }\n\n    get cancelText(): string {\n        return this.mcCancelText;\n    }\n\n    // Indicate whether this dialog should hidden\n    get hidden(): boolean {\n        return !this.mcVisible && !this.animationState;\n    }\n\n    // Handle the reference when using mcContent as Component\n    private contentComponentRef: ComponentRef<T>;\n    // Current animation state\n    private animationState: AnimationState;\n    private container: HTMLElement | OverlayRef;\n\n    constructor(\n        private overlay: Overlay,\n        private renderer: Renderer2,\n        private cfr: ComponentFactoryResolver,\n        private elementRef: ElementRef,\n        private viewContainer: ViewContainerRef,\n        private mcMeasureScrollbarService: McMeasureScrollbarService,\n        private modalControl: McModalControlService,\n        private changeDetector: ChangeDetectorRef,\n        @Inject(DOCUMENT) private document: any) {\n\n        super();\n    }\n\n    @Input() mcGetContainer: HTMLElement | OverlayRef | (() => HTMLElement | OverlayRef) = () => this.overlay.create();\n\n    ngOnInit() {\n\n        // Create component along without View\n        if (this.isComponent(this.mcContent)) {\n            this.createDynamicComponent(this.mcContent as Type<T>);\n        }\n\n        // Setup default button options\n        if (this.isModalButtons(this.mcFooter)) {\n            this.mcFooter = this.formatModalButtons(this.mcFooter as IModalButtonOptions<T>[]);\n        }\n\n        // Place the modal dom to elsewhere\n        this.container = typeof this.mcGetContainer === 'function' ? this.mcGetContainer() : this.mcGetContainer;\n        if (this.container instanceof HTMLElement) {\n            this.container.appendChild(this.elementRef.nativeElement);\n        } else if (this.container instanceof OverlayRef) {\n            // NOTE: only attach the dom to overlay, the view container is not changed actually\n            this.container.overlayElement.appendChild(this.elementRef.nativeElement);\n        }\n\n        // Register modal when afterOpen/afterClose is stable\n        this.modalControl.registerModal(this);\n    }\n\n    // [NOTE] NOT available when using by service!\n    // Because ngOnChanges never be called when using by service,\n    // here we can't support \"mcContent\"(Component) etc. as inputs that initialized dynamically.\n    // BUT: User also can change \"mcContent\" dynamically to trigger UI changes\n    // (provided you don't use \bComponent that needs initializations)\n    ngOnChanges(changes: SimpleChanges) {\n        if (changes.mcVisible) {\n            // Do not trigger animation while initializing\n            this.handleVisibleStateChange(this.mcVisible, !changes.mcVisible.firstChange);\n        }\n    }\n\n    ngAfterViewInit() {\n        // If using Component, it is the time to attach View while bodyContainer is ready\n        if (this.contentComponentRef) {\n            this.bodyContainer.insert(this.contentComponentRef.hostView);\n        }\n\n        if (this.autoFocusButtonOk) {\n            (this.autoFocusButtonOk.nativeElement as HTMLButtonElement).focus();\n        }\n    }\n\n    ngOnDestroy() {\n        if (this.container instanceof OverlayRef) {\n            this.container.dispose();\n        }\n    }\n\n    open() {\n        this.changeVisibleFromInside(true);\n    }\n\n    close(result?: R) {\n        this.changeVisibleFromInside(false, result);\n    }\n\n    // Destroy equals Close\n    destroy(result?: R) {\n        this.close(result);\n    }\n\n    triggerOk() {\n        this.onClickOkCancel('ok');\n    }\n\n    triggerCancel() {\n        this.onClickOkCancel('cancel');\n    }\n\n    getInstance(): McModalComponent {\n        return this;\n    }\n\n    getContentComponentRef(): ComponentRef<T> {\n        return this.contentComponentRef;\n    }\n\n    getContentComponent(): T {\n        return this.contentComponentRef && this.contentComponentRef.instance;\n    }\n\n    getElement(): HTMLElement {\n        return this.elementRef && this.elementRef.nativeElement;\n    }\n\n    onClickMask($event: MouseEvent) {\n        if (\n            this.mcMask &&\n            this.mcMaskClosable &&\n            ($event.target as HTMLElement).classList.contains('mc-modal-wrap') &&\n            this.mcVisible\n        ) {\n            this.onClickOkCancel('cancel');\n        }\n    }\n\n    // tslint:disable-next-line\n    isModalType(type: ModalType): boolean {\n        return this.mcModalType === type;\n    }\n\n    onKeyDown(event: KeyboardEvent): void {\n\n        if (event.keyCode === ESCAPE && this.container && (this.container instanceof OverlayRef)) {\n\n            this.close();\n            event.preventDefault();\n        }\n    }\n\n    // AoT\n    onClickCloseBtn() {\n        if (this.mcVisible) {\n            this.onClickOkCancel('cancel');\n        }\n    }\n\n    // AoT\n    // tslint:disable-next-line\n    onClickOkCancel(type: 'ok' | 'cancel') {\n        const trigger = { ok: this.mcOnOk, cancel: this.mcOnCancel }[type];\n        const loadingKey = { ok: 'mcOkLoading', cancel: 'mcCancelLoading' }[type];\n\n        if (trigger instanceof EventEmitter) {\n            trigger.emit(this.getContentComponent());\n        } else if (typeof trigger === 'function') {\n\n            const result = trigger(this.getContentComponent());\n            // Users can return \"false\" to prevent closing by default\n            const caseClose = (doClose: boolean | void | {}) => (doClose !== false) && this.close(doClose as R);\n\n            if (isPromise(result)) {\n                this[loadingKey] = true;\n                const handleThen = (doClose) => {\n                    this[loadingKey] = false;\n                    caseClose(doClose);\n                };\n                (result as Promise<void>).then(handleThen).catch(handleThen);\n            } else {\n                caseClose(result);\n            }\n        }\n    }\n\n    // AoT\n    isNonEmptyString(value: {}): boolean {\n        return typeof value === 'string' && value !== '';\n    }\n\n    // AoT\n    isTemplateRef(value: {}): boolean {\n        return value instanceof TemplateRef;\n    }\n\n    // AoT\n    isComponent(value: {}): boolean {\n        return value instanceof Type;\n    }\n\n    // AoT\n    isModalButtons(value: {}): boolean {\n        return Array.isArray(value) && value.length > 0;\n    }\n\n    // Do rest things when visible state changed\n    private handleVisibleStateChange(visible: boolean, animation: boolean = true, closeResult?: R): Promise<any> {\n        // Hide scrollbar at the first time when shown up\n        if (visible) {\n            this.changeBodyOverflow(1);\n        }\n\n        return Promise\n            .resolve(animation && this.animateTo(visible))\n            // Emit open/close event after animations over\n            .then(() => {\n                if (visible) {\n                    this.mcAfterOpen.emit();\n                } else {\n                    this.mcAfterClose.emit(closeResult);\n                    // Show/hide scrollbar when animation is over\n                    this.changeBodyOverflow();\n                }\n            });\n    }\n\n    // Lookup a button's property, if the prop is a function, call & then return the result, otherwise, return itself.\n    // AoT\n    // tslint:disable-next-line\n    getButtonCallableProp(options: IModalButtonOptions<T>, prop: string): {} {\n        const value = options[prop];\n        const args: any[] = [];\n        if (this.contentComponentRef) {\n            args.push(this.contentComponentRef.instance);\n        }\n\n        return typeof value === 'function' ? value.apply(options, args) : value;\n    }\n\n    // On mcFooter's modal button click\n    // AoT\n    // tslint:disable-next-line\n    onButtonClick(button: IModalButtonOptions<T>) {\n        // Call onClick directly\n        const result = this.getButtonCallableProp(button, 'onClick');\n        if (isPromise(result)) {\n            button.loading = true;\n            (result as Promise<{}>).then(() => button.loading = false).catch(() => button.loading = false);\n        }\n    }\n\n    // Change mcVisible from inside\n    private changeVisibleFromInside(visible: boolean, closeResult?: R): Promise<void> {\n        if (this.mcVisible !== visible) {\n            // Change mcVisible value immediately\n            this.mcVisible = visible;\n            this.mcVisibleChange.emit(visible);\n\n            return this.handleVisibleStateChange(visible, true, closeResult);\n        }\n\n        return Promise.resolve();\n    }\n\n    private changeAnimationState(state: AnimationState) {\n        this.animationState = state;\n        if (state) {\n            this.maskAnimationClassMap = {\n                [`fade-${state}`]: true,\n                [`fade-${state}-active`]: true\n            };\n            this.modalAnimationClassMap = {\n                [`zoom-${state}`]: true,\n                [`zoom-${state}-active`]: true\n            };\n        } else {\n            // @ts-ignore\n            this.maskAnimationClassMap = this.modalAnimationClassMap = null;\n        }\n\n        if (this.contentComponentRef) {\n            this.contentComponentRef.changeDetectorRef.markForCheck();\n        } else {\n            this.changeDetector.markForCheck();\n        }\n    }\n\n    private animateTo(isVisible: boolean): Promise<any> {\n        // Figure out the lastest click position when shows up\n        if (isVisible) {\n            // [NOTE] Using timeout due to the document.click event is fired later than visible change,\n            // so if not postponed to next event-loop, we can't get the lastest click position\n            window.setTimeout(() => this.updateTransformOrigin());\n        }\n\n        this.changeAnimationState(isVisible ? 'enter' : 'leave');\n\n        // Return when animation is over\n        return new Promise((resolve) => window.setTimeout(() => {\n            this.changeAnimationState(null);\n            resolve();\n        }, MODAL_ANIMATE_DURATION));\n    }\n\n    private formatModalButtons(buttons: IModalButtonOptions<T>[]): IModalButtonOptions<T>[] {\n        return buttons.map((button) => {\n\n            return {\n                ...{\n                    type: 'default',\n                    size: 'default',\n                    autoLoading: true,\n                    show: true,\n                    loading: false,\n                    disabled: false\n                },\n                ...button\n            };\n        });\n    }\n\n    /**\n     * Create a component dynamically but not attach to any View\n     * (this action will be executed when bodyContainer is ready)\n     * @param component Component class\n     */\n    private createDynamicComponent(component: Type<T>) {\n        const factory = this.cfr.resolveComponentFactory(component);\n        const childInjector = Injector.create({\n            providers: [{provide: McModalRef, useValue: this}],\n            parent: this.viewContainer.parentInjector\n        });\n\n        this.contentComponentRef = factory.create(childInjector);\n\n        if (this.mcComponentParams) {\n            Object.assign(this.contentComponentRef.instance, this.mcComponentParams);\n        }\n\n        // Do the first change detection immediately\n        // (or we do detection at ngAfterViewInit, multi-changes error will be thrown)\n        this.contentComponentRef.changeDetectorRef.detectChanges();\n\n\n    }\n\n    // Update transform-origin to the last click position on document\n    private updateTransformOrigin() {\n        const modalElement = this.modalContainer.nativeElement as HTMLElement;\n        const lastPosition = ModalUtil.getLastClickPosition();\n\n        if (lastPosition) {\n            // tslint:disable-next-line\n            this.transformOrigin = `${lastPosition.x - modalElement.offsetLeft}px ${lastPosition.y - modalElement.offsetTop}px 0px`;\n        }\n    }\n\n    /**\n     * Take care of the body's overflow to decide the existense of scrollbar\n     * @param plusNum The number that the openModals.length will increase soon\n     */\n    private changeBodyOverflow(plusNum: number = 0) {\n        const openModals = this.modalControl.openModals;\n\n        if (openModals.length + plusNum > 0) {\n            // tslint:disable-next-line\n            this.renderer.setStyle(this.document.body, 'padding-right', `${this.mcMeasureScrollbarService.scrollBarWidth}px`);\n            this.renderer.setStyle(this.document.body, 'overflow', 'hidden');\n        } else {\n            this.renderer.removeStyle(this.document.body, 'padding-right');\n            this.renderer.removeStyle(this.document.body, 'overflow');\n        }\n    }\n}\n\n////////////\n\nfunction isPromise(obj: {} | void): boolean {\n    // tslint:disable-next-line\n    return !!obj && (typeof obj === 'object' || typeof obj === 'function') && typeof (obj as Promise<{}>).then === 'function' && typeof (obj as Promise<{}>).catch === 'function';\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n\n@Pipe({\n    name: 'toCssUnit'\n})\nexport class CssUnitPipe implements PipeTransform {\n    transform(value: number | string, defaultUnit: string = 'px'): string {\n        const formatted = +value;\n\n        return isNaN(formatted) ? `${value}` : `${formatted}${defaultUnit}`;\n    }\n}\n","import {\n    AfterContentChecked,\n    AfterContentInit,\n    AfterViewInit,\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    ContentChild,\n    ContentChildren, Directive,\n    ElementRef,\n    QueryList,\n    ViewEncapsulation\n} from '@angular/core';\nimport { NgControl } from '@angular/forms';\nimport { ESCAPE } from '@ptsecurity/cdk/keycodes';\nimport { CanColor, CanColorCtor, mixinColor } from '@ptsecurity/mosaic/core';\nimport { EMPTY, merge } from 'rxjs';\nimport { startWith } from 'rxjs/operators';\n\n\nimport { McCleaner } from './cleaner';\nimport { McFormFieldControl } from './form-field-control';\nimport { getMcFormFieldMissingControlError } from './form-field-errors';\nimport { McFormFieldNumberControl } from './form-field-number-control';\nimport { McHint } from './hint';\nimport { McPrefix } from './prefix';\nimport { McStepper } from './stepper';\nimport { McSuffix } from './suffix';\n\n\nlet nextUniqueId = 0;\n\nexport class McFormFieldBase {\n    constructor(public _elementRef: ElementRef) {}\n}\n\nexport const _McFormFieldMixinBase: CanColorCtor & typeof McFormFieldBase = mixinColor(McFormFieldBase);\n\n@Component({\n    selector: 'mc-form-field',\n    exportAs: 'mcFormField',\n    templateUrl: 'form-field.html',\n    // McInput is a directive and can't have styles, so we need to include its styles here.\n    // The McInput styles are fairly minimal so it shouldn't be a big deal for people who\n    // aren't using McInput.\n    styleUrls: [\n        'form-field.css',\n        '../input/input.css',\n        '../textarea/textarea.css'\n    ],\n    host: {\n        class: 'mc-form-field',\n        '[class.mc-form-field_invalid]': '_control.errorState',\n        '[class.mc-disabled]': '_control.disabled',\n        '[class.mc-form-field_has-prefix]': 'hasPrefix',\n        '[class.mc-form-field_has-suffix]': 'hasSuffix',\n        '[class.mc-form-field_has-cleaner]': 'canShowCleaner',\n        '[class.mc-form-field_has-stepper]': 'canShowStepper',\n        '[class.mc-focused]': '_control.focused',\n        '[class.ng-untouched]': '_shouldForward(\"untouched\")',\n        '[class.ng-touched]': '_shouldForward(\"touched\")',\n        '[class.ng-pristine]': '_shouldForward(\"pristine\")',\n        '[class.ng-dirty]': '_shouldForward(\"dirty\")',\n        '[class.ng-valid]': '_shouldForward(\"valid\")',\n        '[class.ng-invalid]': '_shouldForward(\"invalid\")',\n        '[class.ng-pending]': '_shouldForward(\"pending\")',\n        '(keydown)': 'onKeyDown($event)',\n        '(mouseenter)': 'onHoverChanged(true)',\n        '(mouseleave)': 'onHoverChanged(false)'\n    },\n    inputs: ['color'],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\n\nexport class McFormField extends _McFormFieldMixinBase implements\n    AfterContentInit, AfterContentChecked, AfterViewInit, CanColor {\n\n    @ContentChild(McFormFieldControl) _control: McFormFieldControl<any>;\n    @ContentChild(McFormFieldNumberControl) _numberControl: McFormFieldNumberControl<any>;\n    @ContentChild(McStepper) _stepper: McStepper;\n\n    @ContentChildren(McHint) _hint: QueryList<McHint>;\n    @ContentChildren(McSuffix) _suffix: QueryList<McSuffix>;\n    @ContentChildren(McPrefix) _prefix: QueryList<McPrefix>;\n    @ContentChildren(McCleaner) _cleaner: QueryList<McCleaner>;\n\n    // Unique id for the internal form field label.\n    _labelId = `mc-form-field-label-${nextUniqueId++}`;\n\n    hovered: boolean = false;\n\n    constructor(public _elementRef: ElementRef, private _changeDetectorRef: ChangeDetectorRef) {\n        super(_elementRef);\n    }\n\n    ngAfterContentInit() {\n        this._validateControlChild();\n\n        if (this._control.controlType) {\n            this._elementRef.nativeElement.classList\n                .add(`mc-form-field-type-${this._control.controlType}`);\n\n            if (this._numberControl && this.hasStepper) {\n                this._stepper.stepUp.subscribe(this.onStepUp.bind(this));\n                this._stepper.stepDown.subscribe(this.onStepDown.bind(this));\n            }\n        }\n\n        // Subscribe to changes in the child control state in order to update the form field UI.\n        this._control.stateChanges.pipe(startWith())\n            .subscribe(() => {\n                this._changeDetectorRef.markForCheck();\n            });\n\n        if (this._numberControl) {\n            this._numberControl.stateChanges.pipe(startWith())\n                .subscribe(() => {\n                    this._changeDetectorRef.markForCheck();\n                });\n        }\n\n        // Run change detection if the value changes.\n        const valueChanges = this._control.ngControl && this._control.ngControl.valueChanges || EMPTY;\n\n        merge(valueChanges)\n            .subscribe(() => this._changeDetectorRef.markForCheck());\n    }\n\n    ngAfterContentChecked() {\n        this._validateControlChild();\n    }\n\n    ngAfterViewInit() {\n        // Avoid animations on load.\n        this._changeDetectorRef.detectChanges();\n    }\n\n    clearValue($event) {\n        $event.stopPropagation();\n\n        if (this._control && this._control.ngControl) {\n            this._control.ngControl.reset();\n        }\n    }\n\n    onContainerClick($event) {\n        if (this._control.onContainerClick) {\n            this._control.onContainerClick($event);\n        }\n    }\n\n    onKeyDown(event: KeyboardEvent): void {\n        // tslint:disable-next-line:deprecation\n        if (event.keyCode === ESCAPE && this._control.focused && this.hasCleaner) {\n            if (this._control && this._control.ngControl) {\n                this._control.ngControl.reset();\n            }\n\n            event.preventDefault();\n        }\n    }\n\n    onHoverChanged(isHovered: boolean) {\n        if (isHovered !== this.hovered) {\n            this.hovered  = isHovered;\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n\n    onStepUp() {\n        if (this._numberControl) {\n            this._numberControl.stepUp(this._numberControl.step);\n        }\n    }\n\n    onStepDown() {\n        if (this._numberControl) {\n            this._numberControl.stepDown(this._numberControl.step);\n        }\n    }\n\n    /** Determines whether a class from the NgControl should be forwarded to the host element. */\n    _shouldForward(prop: keyof NgControl): boolean {\n        const ngControl = this._control ? this._control.ngControl : null;\n\n        return ngControl && ngControl[prop];\n    }\n\n    /** Throws an error if the form field's control is missing. */\n    protected _validateControlChild() {\n        if (!this._control) {\n            throw getMcFormFieldMissingControlError();\n        }\n    }\n\n    get hasHint(): boolean {\n        return this._hint && this._hint.length > 0;\n    }\n\n    get hasSuffix(): boolean {\n        return this._suffix && this._suffix.length > 0;\n    }\n\n    get hasPrefix(): boolean {\n        return this._prefix && this._prefix.length > 0;\n    }\n\n    get hasCleaner(): boolean {\n        return this._cleaner && this._cleaner.length > 0;\n    }\n\n    get hasStepper(): boolean {\n        return !!this._stepper;\n    }\n\n    get canShowCleaner(): boolean {\n        return this.hasCleaner &&\n            this._control &&\n            this._control.ngControl\n                ? this._control.ngControl.value && !this._control.disabled\n                : false;\n    }\n\n\n    get disabled(): boolean {\n        return this._control && this._control.disabled;\n    }\n\n    get canShowStepper(): boolean {\n        return this._numberControl &&\n            !this.disabled &&\n            (\n                this._numberControl.focused ||\n                this.hovered\n            );\n    }\n}\n\n@Directive({\n    selector: 'mc-form-field[mcFormFieldWithoutBorders]',\n    exportAs: 'mcFormFieldWithoutBorders',\n    host: { class: 'mc-form-field_without-borders' }\n})\nexport class McFormFieldWithoutBorders {}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { McIconModule } from '@ptsecurity/mosaic/icon';\n\nimport { McCleaner } from './cleaner';\nimport { McFormField, McFormFieldWithoutBorders } from './form-field';\nimport { McHint } from './hint';\nimport { McPrefix } from './prefix';\nimport { McStepper } from './stepper';\nimport { McSuffix } from './suffix';\n\n\n@NgModule({\n    declarations: [\n        McFormField,\n        McFormFieldWithoutBorders,\n        McHint,\n        McPrefix,\n        McSuffix,\n        McCleaner,\n        McStepper\n    ],\n    imports: [CommonModule, McIconModule],\n    exports: [\n        McFormField,\n        McFormFieldWithoutBorders,\n        McHint,\n        McPrefix,\n        McSuffix,\n        McCleaner,\n        McStepper\n    ]\n})\nexport class McFormFieldModule {\n}\n","import { InjectionToken } from '@angular/core';\n\n\nexport const MC_INPUT_VALUE_ACCESSOR =\n    new InjectionToken<{ value: any }>('MC_INPUT_VALUE_ACCESSOR');\n","function sanitizeNumber(value: number): number | null {\n    return !isFinite(value) || isNaN(value)\n        ? null\n        : value;\n}\n\nfunction getPrecision(value: number): number {\n    const arr = value.toString().split('.');\n\n    return arr.length === 1\n        ? 1\n        // tslint:disable-next-line:no-magic-numbers\n        :  Math.pow(10, arr[1].length);\n}\n\nfunction add(value1: number, value2: number) {\n    const precision = Math.max(getPrecision(value1), getPrecision(value2));\n\n    const res = (value1 * precision + value2 * precision) / precision;\n\n    return sanitizeNumber(res);\n}\n\nexport const stepUp = (value: number | null,\n                       max: number,\n                       min: number,\n                       step: number\n): number | null => {\n    let res;\n\n    if (value === null) {\n        res = add(min, step);\n\n        return res === null ? null : Math.min(res, max);\n    }\n\n    res = add(value, step);\n\n    return res === null ? null : Math.max(Math.min(res, max), min);\n};\n\nexport const stepDown = (value: number | null,\n                         max: number,\n                         min: number,\n                         step: number\n): number | null => {\n    let res;\n\n    if (value === null) {\n        res = add(max, -step);\n\n        return res === null ? null : Math.max(res, min);\n    }\n\n    res = add(value, -step);\n\n    return res === null ? null : Math.min(Math.max(res, min), max);\n};\n","import {\n    Attribute,\n    Directive, DoCheck, ElementRef, Inject, Input, OnChanges,\n    OnDestroy, Optional, Self\n} from '@angular/core';\nimport {\n    FormGroupDirective,\n    NgControl,\n    NgForm, NgModel\n} from '@angular/forms';\nimport { coerceBooleanProperty } from '@ptsecurity/cdk/coercion';\nimport {\n    END, C, V, X, A, DELETE, BACKSPACE, TAB, ENTER,\n    ESCAPE, ZERO, NINE, NUMPAD_ZERO, NUMPAD_NINE, NUMPAD_MINUS, DASH,\n    FF_MINUS, LEFT_ARROW, RIGHT_ARROW, HOME, UP_ARROW, DOWN_ARROW, F1, F12\n} from '@ptsecurity/cdk/keycodes';\nimport { getSupportedInputTypes, Platform } from '@ptsecurity/cdk/platform';\nimport {\n    CanUpdateErrorState,\n    CanUpdateErrorStateCtor,\n    ErrorStateMatcher,\n    mixinErrorState\n} from '@ptsecurity/mosaic/core';\nimport { McFormFieldControl, McFormFieldNumberControl } from '@ptsecurity/mosaic/form-field';\nimport { Subject } from 'rxjs';\n\nimport { getMcInputUnsupportedTypeError } from './input-errors';\nimport { MC_INPUT_VALUE_ACCESSOR } from './input-value-accessor';\nimport { stepDown, stepUp } from './stepperUtils';\n\n\nconst MC_INPUT_INVALID_TYPES = [\n    'button',\n    'checkbox',\n    'file',\n    'hidden',\n    'image',\n    'radio',\n    'range',\n    'reset',\n    'submit'\n];\n\nexport const BIG_STEP = 10;\nexport const SMALL_STEP = 1;\n\nlet nextUniqueId = 0;\n\nexport class McInputBase {\n    constructor(public _defaultErrorStateMatcher: ErrorStateMatcher,\n                public _parentForm: NgForm,\n                public _parentFormGroup: FormGroupDirective,\n                public ngControl: NgControl) {\n    }\n}\n\nexport const _McInputMixinBase: CanUpdateErrorStateCtor & typeof McInputBase = mixinErrorState(McInputBase);\n\n\n@Directive({\n    selector: `input[mcInput][type=\"number\"]`,\n    exportAs: 'mcNumericalInput',\n    providers: [NgModel, { provide: McFormFieldNumberControl, useExisting: McNumberInput }],\n    host: {\n        '(blur)': '_focusChanged(false)',\n        '(focus)': '_focusChanged(true)',\n        '(paste)': 'onPaste($event)',\n        '(keydown)': 'onKeyDown($event)'\n    }\n})\nexport class McNumberInput implements McFormFieldNumberControl<any> {\n\n    /**\n     * Implemented as part of McFormFieldNumberControl.\n     * @docs-private\n     */\n    @Input()\n    bigStep: number;\n\n    /**\n     * Implemented as part of McFormFieldNumberControl.\n     * @docs-private\n     */\n    @Input()\n    step: number;\n\n    @Input()\n    min: number;\n\n    @Input()\n    max: number;\n\n    /**\n     * Implemented as part of McFormFieldNumberControl.\n     * @docs-private\n     */\n    value: any;\n\n    /**\n     * Implemented as part of McFormFieldNumberControl.\n     * @docs-private\n     */\n    focused: boolean = false;\n\n    /**\n     * Implemented as part of McFormFieldNumberControl.\n     * @docs-private\n     */\n    readonly stateChanges: Subject<void> = new Subject<void>();\n\n    private readonly _host: HTMLInputElement;\n\n    constructor(\n        private _platform: Platform ,\n        private _elementRef: ElementRef,\n        private _model: NgModel,\n        @Attribute('step') step: string,\n        @Attribute('big-step') bigStep: string,\n        @Attribute('min') min: string,\n        @Attribute('max') max: string\n    ) {\n        this.step = this.isDigit(step) ? parseFloat(step) : SMALL_STEP;\n        this.bigStep = this.isDigit(bigStep) ? parseFloat(bigStep) : BIG_STEP;\n        this.min = this.isDigit(min) ? parseFloat(min) : -Infinity;\n        this.max = this.isDigit(max) ? parseFloat(max) : Infinity;\n\n        this._host = this._elementRef.nativeElement;\n\n        const self = this;\n\n        if ('valueAsNumber' in this._host) {\n            Object.defineProperty(Object.getPrototypeOf(this._host), 'valueAsNumber', {\n                // tslint:disable-next-line:no-reserved-keywords\n                get() {\n                    const res = parseFloat(self.normalizeSplitter(this.value));\n\n                    return isNaN(res) ? null : res;\n                }\n            });\n        }\n    }\n\n    _focusChanged(isFocused: boolean) {\n        if (isFocused !== this.focused) {\n            this.focused = isFocused;\n            this.stateChanges.next();\n        }\n    }\n\n    onKeyDown(event: KeyboardEvent) {\n        // tslint:disable-next-line:deprecation\n        const keyCode = event.keyCode;\n\n        const isCtrlA = (e) => e.keyCode === A && (e.ctrlKey || e.metaKey);\n        const isCtrlC = (e) => e.keyCode === C && (e.ctrlKey || e.metaKey);\n        const isCtrlV = (e) => e.keyCode === V && (e.ctrlKey || e.metaKey);\n        const isCtrlX = (e) => e.keyCode === X && (e.ctrlKey || e.metaKey);\n\n        const isFKey = (e) => e.keyCode >= F1 && e.keyCode <= F12;\n\n        const isNumber = (e) => (e.keyCode >= ZERO && e.keyCode <= NINE) ||\n            (e.keyCode >= NUMPAD_ZERO && e.keyCode <= NUMPAD_NINE);\n\n        const minuses = [NUMPAD_MINUS, DASH, FF_MINUS];\n        const serviceKeys = [DELETE, BACKSPACE, TAB, ESCAPE, ENTER];\n        const arrows = [LEFT_ARROW, RIGHT_ARROW];\n        const allowedKeys =  [HOME, END].concat(arrows).concat(serviceKeys).concat(minuses);\n\n        const isIEPeriod = (e) => e.key === '.' || e.key === 'Decimal';\n        const isNotIEPeriod = (e) => e.key === '.' || e.key === ',';\n\n        // Decimal is for IE\n        const isPeriod = (e) => this._platform.EDGE || this._platform.TRIDENT\n            ? isIEPeriod(e)\n            : isNotIEPeriod(e);\n\n        if (allowedKeys.indexOf(keyCode) !== -1 ||\n            isCtrlA(event) ||\n            isCtrlC(event) ||\n            isCtrlV(event) ||\n            isCtrlX(event) ||\n            isFKey(event) ||\n            isPeriod(event)\n        ) {\n            // let it happen, don't do anything\n            return;\n        }\n        // Ensure that it is not a number and stop the keypress\n        if (event.shiftKey || !isNumber(event)) {\n            event.preventDefault();\n\n            // process steps\n            const step = event.shiftKey ? this.bigStep : this.step;\n\n            if (keyCode === UP_ARROW) {\n                this.stepUp(step);\n            }\n\n            if (keyCode === DOWN_ARROW) {\n                this.stepDown(step);\n            }\n        }\n    }\n\n    onPaste(event) {\n        let value = event.clipboardData.getData('text');\n        value = this.normalizeSplitter(value);\n\n        if (!this.isDigit(value)) {\n            event.preventDefault();\n        }\n    }\n\n    stepUp(step: number) {\n        this._elementRef.nativeElement.focus();\n        const res = stepUp(this._host.valueAsNumber, this.max, this.min, step);\n        this._host.value = res === null ? '' : res.toString();\n        this._model.update.emit(this._host.valueAsNumber);\n    }\n\n    stepDown(step: number) {\n        this._elementRef.nativeElement.focus();\n        const res = stepDown(this._host.valueAsNumber, this.max, this.min, step);\n        this._host.value = res === null ? '' : res.toString();\n        this._model.update.emit(this._host.valueAsNumber);\n    }\n\n    private normalizeSplitter(value: string): string {\n        return value ? value.replace(/,/g, '.') : value;\n    }\n\n    private isDigit(value: string): boolean {\n        return this.isFloat(value) || this.isInt(value);\n    }\n\n    private isFloat(value: string): boolean {\n        return /^-?\\d+\\.\\d+$/.test(value);\n    }\n\n    private isInt(value: string): boolean {\n        return /^-?\\d+$/.test(value);\n    }\n}\n\n@Directive({\n    selector: `input[mcInput]`,\n    exportAs: 'mcInput',\n    host: {\n        class: 'mc-input',\n        // Native input properties that are overwritten by Angular inputs need to be synced with\n        // the native input element. Otherwise property bindings for those don't work.\n        '[attr.id]': 'id',\n        '[attr.placeholder]': 'placeholder',\n        '[disabled]': 'disabled',\n        '[required]': 'required',\n        '(blur)': '_focusChanged(false)',\n        '(focus)': '_focusChanged(true)',\n        '(input)': '_onInput()'\n    },\n    providers: [{ provide: McFormFieldControl, useExisting: McInput }]\n})\nexport class McInput extends _McInputMixinBase implements McFormFieldControl<any>, OnChanges,\n    OnDestroy, DoCheck, CanUpdateErrorState {\n\n    /** An object used to control when error messages are shown. */\n    @Input() errorStateMatcher: ErrorStateMatcher;\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    focused: boolean = false;\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    readonly stateChanges: Subject<void> = new Subject<void>();\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    controlType: string = 'mc-input';\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    @Input()\n    get disabled(): boolean {\n        if (this.ngControl && this.ngControl.disabled !== null) {\n            return this.ngControl.disabled;\n        }\n\n        return this._disabled;\n    }\n\n    set disabled(value: boolean) {\n        this._disabled = coerceBooleanProperty(value);\n\n        // Browsers may not fire the blur event if the input is disabled too quickly.\n        // Reset from here to ensure that the element doesn't become stuck.\n        if (this.focused) {\n            this.focused = false;\n            this.stateChanges.next();\n        }\n    }\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    @Input()\n    get id(): string {\n        return this._id;\n    }\n\n    set id(value: string) {\n        this._id = value || this._uid;\n    }\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    @Input() placeholder: string;\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    @Input()\n    get required(): boolean {\n        return this._required;\n    }\n\n    set required(value: boolean) {\n        this._required = coerceBooleanProperty(value);\n    }\n\n    // tslint:disable no-reserved-keywords\n    /** Input type of the element. */\n    @Input()\n    get type(): string {\n        return this._type;\n    }\n\n    set type(value: string) {\n        this._type = value || 'text';\n        this._validateType();\n\n        // When using Angular inputs, developers are no longer able to set the properties on the native\n        // input element. To ensure that bindings for `type` work, we need to sync the setter\n        // with the native property. Textarea elements don't support the type property or attribute.\n        if (getSupportedInputTypes().has(this._type)) {\n            this._elementRef.nativeElement.type = this._type;\n        }\n    }\n    // tslint:enable no-reserved-keywords\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    @Input()\n    get value(): string {\n        return this._inputValueAccessor.value;\n    }\n\n    set value(value: string) {\n        if (value !== this.value) {\n            this._inputValueAccessor.value = value;\n            this.stateChanges.next();\n        }\n    }\n\n    protected _uid = `mc-input-${nextUniqueId++}`;\n    protected _previousNativeValue: any;\n    protected _disabled = false;\n    protected _id: string;\n    protected _required = false;\n    protected _type = 'text';\n    protected _neverEmptyInputTypes = [\n        'date',\n        'datetime',\n        'datetime-local',\n        'month',\n        'time',\n        'week'\n    ].filter((t) => getSupportedInputTypes().has(t));\n\n    private _inputValueAccessor: { value: any };\n\n    constructor(protected _elementRef: ElementRef,\n                @Optional() @Self() public ngControl: NgControl,\n                @Optional() _parentForm: NgForm,\n                @Optional() _parentFormGroup: FormGroupDirective,\n                _defaultErrorStateMatcher: ErrorStateMatcher,\n                @Optional() @Self() @Inject(MC_INPUT_VALUE_ACCESSOR) inputValueAccessor: any) {\n        super(_defaultErrorStateMatcher, _parentForm, _parentFormGroup, ngControl);\n        // If no input value accessor was explicitly specified, use the element as the input value\n        // accessor.\n        this._inputValueAccessor = inputValueAccessor || this._elementRef.nativeElement;\n\n        this._previousNativeValue = this.value;\n\n        // Force setter to be called in case id was not specified.\n        this.id = this.id;\n    }\n\n    ngOnChanges() {\n        this.stateChanges.next();\n    }\n\n    ngOnDestroy() {\n        this.stateChanges.complete();\n    }\n\n    ngDoCheck() {\n        if (this.ngControl) {\n            // We need to re-evaluate this on every change detection cycle, because there are some\n            // error triggers that we can't subscribe to (e.g. parent form submissions). This means\n            // that whatever logic is in here has to be super lean or we risk destroying the performance.\n            this.updateErrorState();\n        }\n\n        // We need to dirty-check the native element's value, because there are some cases where\n        // we won't be notified when it changes (e.g. the consumer isn't using forms or they're\n        // updating the value using `emitEvent: false`).\n        this._dirtyCheckNativeValue();\n    }\n\n    /** Focuses the input. */\n    focus(): void {\n        this._elementRef.nativeElement.focus();\n    }\n\n    /** Callback for the cases where the focused state of the input changes. */\n    _focusChanged(isFocused: boolean) {\n        if (isFocused !== this.focused) {\n            this.focused = isFocused;\n            this.stateChanges.next();\n        }\n    }\n\n    _onInput() {\n        // This is a noop function and is used to let Angular know whenever the value changes.\n        // Angular will run a new change detection each time the `input` event has been dispatched.\n        // It's necessary that Angular recognizes the value change, because when floatingLabel\n        // is set to false and Angular forms aren't used, the placeholder won't recognize the\n        // value changes and will not disappear.\n        // Listening to the input event wouldn't be necessary when the input is using the\n        // FormsModule or ReactiveFormsModule, because Angular forms also listens to input events.\n    }\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    get empty(): boolean {\n        return !this._isNeverEmpty() && !this._elementRef.nativeElement.value && !this._isBadInput();\n    }\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    onContainerClick() {\n        this.focus();\n    }\n\n    /** Does some manual dirty checking on the native input `value` property. */\n    protected _dirtyCheckNativeValue() {\n        const newValue = this.value;\n\n        if (this._previousNativeValue !== newValue) {\n            this._previousNativeValue = newValue;\n            this.stateChanges.next();\n        }\n    }\n\n    /** Make sure the input is a supported type. */\n    protected _validateType() {\n        if (MC_INPUT_INVALID_TYPES.indexOf(this._type) > -1) {\n            throw getMcInputUnsupportedTypeError(this._type);\n        }\n    }\n\n    /** Checks whether the input type is one of the types that are never empty. */\n    protected _isNeverEmpty() {\n        return this._neverEmptyInputTypes.indexOf(this._type) > -1;\n    }\n\n    /** Checks whether the input is invalid based on the native validation. */\n    protected _isBadInput() {\n        // The `validity` property won't be present on platform-server.\n        const validity = (this._elementRef.nativeElement as HTMLInputElement).validity;\n\n        return validity && validity.badInput;\n    }\n}\n\n@Directive({\n    selector: 'input[mcInputMonospace]',\n    exportAs: 'McInputMonospace',\n    host: { class: 'mc-input_monospace' }\n})\nexport class McInputMono {\n}\n","import { Directive, forwardRef, Input, OnChanges, Provider, SimpleChanges } from '@angular/core';\nimport { AbstractControl, NG_VALIDATORS, ValidationErrors, Validator, ValidatorFn, Validators } from '@angular/forms';\n\n\nexport const MIN_VALIDATOR: Provider = {\n    provide: NG_VALIDATORS,\n    useExisting: forwardRef(() => MinValidator),\n    multi: true\n};\n\n/**\n * A directive which installs the {@link MinValidator} for any `formControlName`,\n * `formControl`, or control with `ngModel` that also has a `min` attribute.\n *\n * @experimental\n */\n@Directive({\n    selector: '[min][formControlName],[min][formControl],[min][ngModel]',\n    providers: [MIN_VALIDATOR],\n    host: {'[attr.min]': 'min ? min : null'}\n})\nexport class MinValidator implements Validator, OnChanges {\n\n    @Input() min: string;\n    private _validator: ValidatorFn;\n    private _onChange: () => void;\n\n    ngOnChanges(changes: SimpleChanges): void {\n        if ('min' in changes) {\n            this._createValidator();\n            if (this._onChange) { this._onChange(); }\n        }\n    }\n\n    validate(c: AbstractControl): ValidationErrors | null { return this._validator(c); }\n\n    registerOnValidatorChange(fn: () => void): void { this._onChange = fn; }\n\n    private _createValidator(): void { this._validator = Validators.min(parseInt(this.min, 10)); }\n}\n\n\nexport const MAX_VALIDATOR: Provider = {\n    provide: NG_VALIDATORS,\n    useExisting: forwardRef(() => MaxValidator),\n    multi: true\n};\n\n/**\n * A directive which installs the {@link MaxValidator} for any `formControlName`,\n * `formControl`, or control with `ngModel` that also has a `min` attribute.\n *\n * @experimental\n */\n@Directive({\n    selector: '[max][formControlName],[max][formControl],[max][ngModel]',\n    providers: [MAX_VALIDATOR],\n    host: {\n        '[attr.max]': 'max ? max : null'\n    }\n})\nexport class MaxValidator implements Validator,\n    OnChanges {\n\n    @Input() max: string;\n    private _validator: ValidatorFn;\n    private _onChange: () => void;\n\n    ngOnChanges(changes: SimpleChanges): void {\n        if ('max' in changes) {\n            this._createValidator();\n            if (this._onChange) { this._onChange(); }\n        }\n    }\n\n    validate(c: AbstractControl): ValidationErrors | null { return this._validator(c); }\n\n    registerOnValidatorChange(fn: () => void): void { this._onChange = fn; }\n\n    private _createValidator(): void { this._validator = Validators.max(parseInt(this.max, 10)); }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { A11yModule } from '@ptsecurity/cdk/a11y';\nimport { McCommonModule } from '@ptsecurity/mosaic/core';\n\nimport { McInput, McInputMono, McNumberInput } from './input';\nimport { MaxValidator, MinValidator } from './input-number-validators';\n\n\n@NgModule({\n    imports: [CommonModule, A11yModule, McCommonModule, FormsModule],\n    exports: [McInput, McNumberInput, McInputMono, MinValidator, MaxValidator],\n    declarations: [McInput, McNumberInput, McInputMono, MinValidator, MaxValidator ]\n})\nexport class McInputModule {\n}\n","import { Component } from '@angular/core';\n\n\n@Component({\n    selector: 'mc-content',\n    preserveWhitespaces: false,\n    templateUrl: './content.component.html',\n    styles: [\n        `:host {\n            display: block;\n        }`\n    ],\n    host: {\n        '[class.mc-layout-content]': 'true'\n    }\n})\nexport class McContentComponent {\n}\n","import { Component } from '@angular/core';\n\n\n@Component({\n    selector: 'mc-footer',\n    preserveWhitespaces: false,\n    templateUrl: './footer.component.html',\n    styles: [\n        `:host {\n            display: block;\n        }`\n    ],\n    host: {\n        '[class.mc-layout-footer]': 'true'\n    }\n})\nexport class McFooterComponent {\n}\n","import { Component } from '@angular/core';\n\n\n@Component({\n    selector : 'mc-header',\n    preserveWhitespaces: false,\n    templateUrl: './header.component.html',\n    styles: [\n        `:host {\n            display: block;\n        }`\n    ],\n    host: {\n        '[class.mc-layout-header]': 'true'\n    }\n})\nexport class McHeaderComponent {\n}\n","import { ChangeDetectionStrategy, Component, ViewEncapsulation } from '@angular/core';\n\n\n@Component({\n    selector: 'mc-layout',\n    preserveWhitespaces: false,\n    styleUrls: ['layout.css'],\n    templateUrl: './layout.component.html',\n    host: {\n        '[class.mc-layout]': 'true',\n        '[class.mc-layout-has-sidebar]': 'hasSidebar'\n    },\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class McLayoutComponent {\n    hasSidebar = false;\n}\n","import {\n    ChangeDetectionStrategy,\n    Component,\n    EventEmitter,\n    Host,\n    Input,\n    OnInit,\n    Optional,\n    Output\n} from '@angular/core';\nimport { toBoolean } from '@ptsecurity/mosaic/core';\n\nimport { McLayoutComponent } from './layout.component';\n\n\n@Component({\n    selector: 'mc-sidebar',\n    preserveWhitespaces: false,\n    templateUrl: './sidebar.component.html',\n    host: {\n        '[class.mc-layout-sidebar]': 'true',\n        '[class.mc-layout-sidebar-collapsed]': 'mcCollapsed',\n        '[style.flex]': 'mcFlex',\n        '[style.max-width.px]': 'mcWidth',\n        '[style.min-width.px]': 'mcWidth',\n        '[style.width.px]': 'mcWidth'\n    },\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class McSidebarComponent implements OnInit {\n\n    @Input() _mcWidth = 200;\n    @Input() mcCollapsedWidth = 80;\n\n    @Input()\n    set mcCollapsible(value: boolean) {\n        this.collapsible = toBoolean(value);\n    }\n\n    get mcCollapsible(): boolean {\n        return this.collapsible;\n    }\n\n    @Input()\n    set mcCollapsed(value: boolean) {\n        this.collapsed = toBoolean(value);\n    }\n\n    get mcCollapsed(): boolean {\n        return this.collapsed;\n    }\n\n    // tslint:disable-next-line\n    @Output() mcCollapsedChange = new EventEmitter();\n\n    private collapsed = false;\n    private collapsible = false;\n\n    get mcFlex(): string {\n        if (this.mcCollapsed) {\n            return `0 0 ${this.mcCollapsedWidth}px`;\n        } else {\n            return `0 0 ${this.mcWidth}px`;\n        }\n    }\n\n    get mcWidth(): number {\n        if (this.mcCollapsed) {\n            return this.mcCollapsedWidth;\n        } else {\n            return this._mcWidth;\n        }\n    }\n\n    constructor(\n        @Optional() @Host() private mcLayoutComponent: McLayoutComponent) {\n    }\n\n    ngOnInit() {\n        if (this.mcLayoutComponent) {\n            this.mcLayoutComponent.hasSidebar = true;\n        }\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { McContentComponent } from './content.component';\nimport { McFooterComponent } from './footer.component';\nimport { McHeaderComponent } from './header.component';\nimport { McLayoutComponent } from './layout.component';\nimport { McSidebarComponent } from './sidebar.component';\n\n\n@NgModule({\n    imports: [ CommonModule ],\n    exports: [\n        McLayoutComponent,\n        McContentComponent,\n        McFooterComponent,\n        McHeaderComponent,\n        McSidebarComponent\n    ],\n    declarations: [\n        McLayoutComponent,\n        McContentComponent,\n        McFooterComponent,\n        McHeaderComponent,\n        McSidebarComponent\n    ]\n})\nexport class McLayoutModule {\n}\n","import {\n    ChangeDetectionStrategy,\n    Component,\n    Directive,\n    ElementRef,\n    OnDestroy,\n    QueryList,\n    ViewEncapsulation,\n    ContentChildren\n} from '@angular/core';\n\nimport { FocusMonitor } from '@ptsecurity/cdk/a11y';\n\nimport { mixinColor, mixinDisabled, CanColor, CanDisable, CanDisableCtor, CanColorCtor } from '@ptsecurity/mosaic/core';\nimport { McIcon } from '@ptsecurity/mosaic/icon';\n\n\n@Directive({\n    selector: 'button[mc-button], a[mc-button]',\n    host: { class: 'mc-button' }\n})\nexport class McButtonCSSStyler {}\n\n\n@Directive({\n    selector: 'button[mc-icon-button], a[mc-icon-button]',\n    queries: {\n        contentChildren: new ContentChildren(McIcon)\n    },\n    host: { class: 'mc-icon-button' }\n})\nexport class McIconButtonCSSStyler {\n    nativeElement: Element;\n\n    contentChildren: QueryList<McIcon>;\n\n    constructor(elementRef: ElementRef) {\n        this.nativeElement = elementRef.nativeElement;\n    }\n\n    ngAfterContentInit() {\n        this._addClassModificatorForIcons();\n    }\n\n    _addClassModificatorForIcons() {\n        const twoIcons = 2;\n        const icons = this.contentChildren.map((item) => item._elementRef.nativeElement);\n\n        if (icons.length === 1) {\n            const iconElement = icons[0];\n\n            if (!iconElement.previousElementSibling && !iconElement.nextElementSibling) {\n                if (iconElement.nextSibling) {\n                    iconElement.classList.add('mc-icon_left');\n                    this.nativeElement.classList.add('mc-icon-button_left');\n                }\n\n                if (iconElement.previousSibling) {\n                    iconElement.classList.add('mc-icon_right');\n                    this.nativeElement.classList.add('mc-icon-button_right');\n                }\n            }\n        } else if (icons.length === twoIcons) {\n            const firstIconElement = icons[0];\n            const secondIconElement = icons[1];\n\n            firstIconElement.classList.add('mc-icon_left');\n            secondIconElement.classList.add('mc-icon_right');\n        }\n    }\n}\n\n\nexport class McButtonBase {\n    constructor(public _elementRef: ElementRef) {}\n}\n\nexport const _McButtonMixinBase:\n    CanDisableCtor &\n    CanColorCtor &\n    typeof McButtonBase =\n        mixinColor(mixinDisabled(McButtonBase));\n\n\n@Component({\n    selector: `\n        button[mc-button],\n        button[mc-xs-button],\n        button[mc-sm-button],\n        button[mc-lg-button],\n        button[mc-xl-button]\n    `,\n    templateUrl: './button.component.html',\n    styleUrls: ['./button.css'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n    inputs: ['disabled', 'color'],\n    host: {\n        '[disabled]': 'disabled || null'\n    }\n})\nexport class McButton extends _McButtonMixinBase implements OnDestroy, CanDisable, CanColor {\n    constructor(elementRef: ElementRef, private _focusMonitor: FocusMonitor) {\n        super(elementRef);\n\n        this._focusMonitor.monitor(this._elementRef.nativeElement, true);\n    }\n\n    ngOnDestroy() {\n        this._focusMonitor.stopMonitoring(this._elementRef.nativeElement);\n    }\n\n    focus(): void {\n        this._getHostElement().focus();\n    }\n\n    _getHostElement() {\n        return this._elementRef.nativeElement;\n    }\n}\n\n\n@Component({\n    selector: 'a[mc-button], a[mc-xs-button], a[mc-sm-button], a[mc-lg-button], a[mc-xl-button]',\n    templateUrl: './button.component.html',\n    styleUrls: ['./button.css'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n    inputs: ['disabled', 'color'],\n    host: {\n        '[attr.tabindex]': 'disabled ? -1 : 0',\n        '[attr.disabled]': 'disabled || null',\n        '(click)': '_haltDisabledEvents($event)'\n    }\n})\nexport class McAnchor extends McButton {\n    constructor(focusMonitor: FocusMonitor, elementRef: ElementRef) {\n        super(elementRef, focusMonitor);\n    }\n\n    _haltDisabledEvents(event: Event) {\n        if (this.disabled) {\n            event.preventDefault();\n            event.stopImmediatePropagation();\n        }\n    }\n}\n\n\n@Component({\n    selector: 'button[mc-icon-button]',\n    templateUrl: './button.component.html',\n    styleUrls: ['./button.css'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n    inputs: ['disabled', 'color'],\n    host: {\n        '[attr.tabindex]': 'disabled ? -1 : 0',\n        '[attr.disabled]': 'disabled || null'\n    }\n})\nexport class McIconButton extends McButton {\n    constructor(focusMonitor: FocusMonitor, elementRef: ElementRef) {\n        super(elementRef, focusMonitor);\n    }\n\n    _haltDisabledEvents(event: Event) {\n        if (this.disabled) {\n            event.preventDefault();\n            event.stopImmediatePropagation();\n        }\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { A11yModule } from '@ptsecurity/cdk/a11y';\nimport { PlatformModule } from '@ptsecurity/cdk/platform';\n\nimport {\n    McButton,\n    McAnchor,\n    McIconButton,\n    McButtonCSSStyler,\n    McIconButtonCSSStyler\n} from './button.component';\n\n\n@NgModule({\n    imports: [\n        CommonModule,\n        A11yModule,\n        PlatformModule\n    ],\n    exports: [\n        McButton,\n        McAnchor,\n        McIconButton,\n        McButtonCSSStyler,\n        McIconButtonCSSStyler\n    ],\n    declarations: [\n        McButton,\n        McAnchor,\n        McIconButton,\n        McButtonCSSStyler,\n        McIconButtonCSSStyler\n    ]\n})\nexport class McButtonModule {}\n","import {\n    Output,\n    ChangeDetectionStrategy,\n    Component,\n    ElementRef, Input,\n    OnDestroy, EventEmitter,\n    ViewEncapsulation, HostBinding\n} from '@angular/core';\n\nimport { FocusMonitor } from '@ptsecurity/cdk/a11y';\nimport { SPACE } from '@ptsecurity/cdk/keycodes';\n\n\n@Component({\n    selector: 'mc-card',\n    templateUrl: './card.component.html',\n    styleUrls: ['./card.component.css'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n    inputs: ['color'],\n    host: {\n        class: 'mc-card',\n        '[class.mc-card_readonly]': 'readonly',\n        '[class.mc-card_selected]': 'selected',\n        '(keydown)': 'onKeyDown($event)',\n        '(click)': 'onClick($event)'\n    }\n})\nexport class McCard implements OnDestroy {\n    get tabIndex(): number | null {\n        return this.readonly ? null : this._tabIndex;\n    }\n\n    @HostBinding('attr.tabIndex')\n    @Input()\n    set tabIndex(value: number | null) {\n        this._tabIndex = value;\n    }\n\n    @Input()\n    readonly = false;\n\n    @Input()\n    selected = false;\n\n    @Output()\n    selectedChange = new EventEmitter<boolean>();\n\n    private _tabIndex: number | null = 0;\n\n    constructor(private _elementRef: ElementRef, private _focusMonitor: FocusMonitor) {\n        this._focusMonitor.monitor(this._elementRef.nativeElement, false);\n    }\n\n    ngOnDestroy() {\n        this._focusMonitor.stopMonitoring(this._elementRef.nativeElement);\n    }\n\n    focus(): void {\n        this.hostElement.focus();\n    }\n\n    onClick($event: MouseEvent) {\n        if (!this.readonly) {\n            $event.stopPropagation();\n\n            this.selectedChange.emit(!this.selected);\n        }\n    }\n\n    private get hostElement() {\n        return this._elementRef.nativeElement;\n    }\n\n    onKeyDown($event: KeyboardEvent) {\n        switch ($event.keyCode) {\n            case SPACE:\n                if (!this.readonly) {\n                    $event.preventDefault();\n                    this.selectedChange.emit(!this.selected);\n                }\n                break;\n            default:\n        }\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { A11yModule } from '@ptsecurity/cdk/a11y';\nimport { PlatformModule } from '@ptsecurity/cdk/platform';\n\nimport {\n    McCard\n} from './card.component';\n\n\n@NgModule({\n    imports: [\n        CommonModule,\n        A11yModule,\n        PlatformModule\n    ],\n    exports: [McCard],\n    declarations: [McCard]\n})\nexport class McCardModule {}\n","import { InjectionToken } from '@angular/core';\n\n\n/**\n * Checkbox click action when user click on input element.\n * noop: Do not toggle checked or indeterminate.\n * check: Only toggle checked status, ignore indeterminate.\n * check-indeterminate: Toggle checked status, set indeterminate to false. Default behavior.\n * undefined: Same as `check-indeterminate`.\n */\nexport type McCheckboxClickAction = 'noop' | 'check' | 'check-indeterminate' | undefined;\n\n/**\n * Injection token that can be used to specify the checkbox click behavior.\n */\nexport const MC_CHECKBOX_CLICK_ACTION =\n    new InjectionToken<McCheckboxClickAction>('mc-checkbox-click-action');\n","import {\n    AfterViewInit,\n    Attribute,\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    ElementRef,\n    EventEmitter,\n    forwardRef,\n    Inject,\n    Input,\n    OnDestroy,\n    Optional,\n    Output,\n    ViewChild,\n    ViewEncapsulation\n} from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { FocusMonitor, FocusOrigin } from '@ptsecurity/cdk/a11y';\nimport {\n    CanColor, CanColorCtor,\n    CanDisable, CanDisableCtor,\n    HasTabIndex, HasTabIndexCtor,\n    mixinColor,\n    mixinDisabled,\n    mixinTabIndex,\n    toBoolean\n} from '@ptsecurity/mosaic/core';\n\nimport { MC_CHECKBOX_CLICK_ACTION, McCheckboxClickAction } from './checkbox-config';\n\n\n// Increasing integer for generating unique ids for checkbox components.\nlet nextUniqueId = 0;\n\n/**\n * Provider Expression that allows mc-checkbox to register as a ControlValueAccessor.\n * This allows it to support [(ngModel)].\n * @docs-private\n */\nexport const MC_CHECKBOX_CONTROL_VALUE_ACCESSOR: any = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => McCheckbox),\n    multi: true\n};\n\n/**\n * Represents the different states that require custom transitions between them.\n * @docs-private\n */\nexport enum TransitionCheckState {\n    /** The initial state of the component before any user interaction. */\n    Init,\n    /** The state representing the component when it's becoming checked. */\n    Checked,\n    /** The state representing the component when it's becoming unchecked. */\n    Unchecked,\n    /** The state representing the component when it's becoming indeterminate. */\n    Indeterminate\n}\n\n/** Change event object emitted by McCheckbox. */\nexport class McCheckboxChange {\n    /** The source McCheckbox of the event. */\n    source: McCheckbox;\n    /** The new `checked` value of the checkbox. */\n    checked: boolean;\n}\n\n// Boilerplate for applying mixins to McCheckbox.\n/** @docs-private */\nexport class McCheckboxBase {\n    constructor(public _elementRef: ElementRef) {\n    }\n}\n\nexport const _McCheckboxMixinBase:\n    HasTabIndexCtor &\n    CanColorCtor &\n    CanDisableCtor &\n    typeof McCheckboxBase =\n        mixinTabIndex(mixinColor(mixinDisabled(McCheckboxBase)));\n\n\n/**\n * A mosaic checkbox component. Supports all of the functionality of an HTML5 checkbox,\n * and exposes a similar API. A McCheckbox can be either checked, unchecked, indeterminate, or\n * disabled. Note that all additional accessibility attributes are taken care of by the component,\n * so there is no need to provide them yourself. However, if you want to omit a label and still\n * have the checkbox be accessible, you may supply an [aria-label] input.\n */\n@Component({\n    selector: 'mc-checkbox',\n    templateUrl: 'checkbox.html',\n    styleUrls: ['checkbox.css'],\n    exportAs: 'mcCheckbox',\n    host: {\n        class: 'mc-checkbox',\n        '[id]': 'id',\n        '[attr.id]': 'id',\n        '[class.mc-indeterminate]': 'indeterminate',\n        '[class.mc-checked]': 'checked',\n        '[class.mc-disabled]': 'disabled',\n        '[class.mc-checkbox-label-before]': 'labelPosition == \"before\"'\n    },\n    providers: [MC_CHECKBOX_CONTROL_VALUE_ACCESSOR],\n    inputs: ['color', 'tabIndex'],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class McCheckbox extends _McCheckboxMixinBase implements ControlValueAccessor,\n    AfterViewInit, OnDestroy, CanColor, CanDisable, HasTabIndex {\n\n    /**\n     * Attached to the aria-label attribute of the host element. In most cases, arial-labelledby will\n     * take precedence so this may be omitted.\n     */\n    @Input('aria-label') ariaLabel: string = '';\n\n    /**\n     * Users can specify the `aria-labelledby` attribute which will be forwarded to the input element\n     */\n    @Input('aria-labelledby') ariaLabelledby: string | null = null;\n\n    private _uniqueId: string = `mc-checkbox-${++nextUniqueId}`;\n\n    /** A unique id for the checkbox input. If none is supplied, it will be auto-generated. */\n    @Input() id: string = this._uniqueId;\n\n    /** Returns the unique id for the visual hidden input. */\n    get inputId(): string {\n        return `${this.id || this._uniqueId}-input`;\n    }\n\n    /** Whether the checkbox is required. */\n    @Input()\n    get required(): boolean {\n        return this._required;\n    }\n\n    set required(value: boolean) {\n        this._required = toBoolean(value);\n    }\n\n    private _required: boolean;\n\n    /** Whether the label should appear after or before the checkbox. Defaults to 'after' */\n    @Input() labelPosition: 'before' | 'after' = 'after';\n\n    /** Name value will be applied to the input element if present */\n    @Input() name: string | null = null;\n\n    /** Event emitted when the checkbox's `checked` value changes. */\n    @Output() readonly change: EventEmitter<McCheckboxChange> =\n        new EventEmitter<McCheckboxChange>();\n\n    /** Event emitted when the checkbox's `indeterminate` value changes. */\n    @Output() readonly indeterminateChange: EventEmitter<boolean> = new EventEmitter<boolean>();\n\n    /** The value attribute of the native input element */\n    @Input() value: string;\n\n    /** The native `<input type=\"checkbox\">` element */\n    @ViewChild('input') _inputElement: ElementRef;\n\n    /**\n     * Called when the checkbox is blurred. Needed to properly implement ControlValueAccessor.\n     * @docs-private\n     */\n    _onTouched: () => any = () => {\n    }\n\n    private _currentAnimationClass: string = '';\n\n    private _currentCheckState: TransitionCheckState = TransitionCheckState.Init;\n\n    private _controlValueAccessorChangeFn: (value: any) => void = () => {\n    }\n\n    constructor(elementRef: ElementRef,\n                private _changeDetectorRef: ChangeDetectorRef,\n                private _focusMonitor: FocusMonitor,\n                @Attribute('tabindex') tabIndex: string,\n                @Optional() @Inject(MC_CHECKBOX_CLICK_ACTION)\n                private _clickAction: McCheckboxClickAction) {\n        super(elementRef);\n\n        this.tabIndex = parseInt(tabIndex) || 0;\n    }\n\n    ngAfterViewInit() {\n        this._focusMonitor\n            .monitor(this._inputElement.nativeElement)\n            .subscribe((focusOrigin) => this._onInputFocusChange(focusOrigin));\n    }\n\n    ngOnDestroy() {\n        this._focusMonitor.stopMonitoring(this._inputElement.nativeElement);\n    }\n\n    /**\n     * Whether the checkbox is checked.\n     */\n    @Input()\n    get checked(): boolean {\n        return this._checked;\n    }\n\n    set checked(value: boolean) {\n        if (value != this.checked) {\n            this._checked = value;\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n\n    private _checked: boolean = false;\n\n    /**\n     * Whether the checkbox is disabled. This fully overrides the implementation provided by\n     * mixinDisabled, but the mixin is still required because mixinTabIndex requires it.\n     */\n    @Input()\n    get disabled() {\n        return this._disabled;\n    }\n\n    set disabled(value: any) {\n        if (value != this.disabled) {\n            this._disabled = value;\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n\n    private _disabled: boolean = false;\n\n    /**\n     * Whether the checkbox is indeterminate. This is also known as \"mixed\" mode and can be used to\n     * represent a checkbox with three states, e.g. a checkbox that represents a nested list of\n     * checkable items. Note that whenever checkbox is manually clicked, indeterminate is immediately\n     * set to false.\n     */\n    @Input()\n    get indeterminate(): boolean {\n        return this._indeterminate;\n    }\n\n    set indeterminate(value: boolean) {\n        const changed = value != this._indeterminate;\n        this._indeterminate = value;\n\n        if (changed) {\n            if (this._indeterminate) {\n                this._transitionCheckState(TransitionCheckState.Indeterminate);\n            } else {\n                this._transitionCheckState(\n                    this.checked ? TransitionCheckState.Checked : TransitionCheckState.Unchecked);\n            }\n            this.indeterminateChange.emit(this._indeterminate);\n        }\n    }\n\n    private _indeterminate: boolean = false;\n\n    /** Method being called whenever the label text changes. */\n    _onLabelTextChange() {\n        // This method is getting called whenever the label of the checkbox changes.\n        // Since the checkbox uses the OnPush strategy we need to notify it about the change\n        // that has been recognized by the cdkObserveContent directive.\n        this._changeDetectorRef.markForCheck();\n    }\n\n    // Implemented as part of ControlValueAccessor.\n    writeValue(value: any) {\n        this.checked = !!value;\n    }\n\n    // Implemented as part of ControlValueAccessor.\n    registerOnChange(fn: (value: any) => void) {\n        this._controlValueAccessorChangeFn = fn;\n    }\n\n    // Implemented as part of ControlValueAccessor.\n    registerOnTouched(fn: any) {\n        this._onTouched = fn;\n    }\n\n    // Implemented as part of ControlValueAccessor.\n    setDisabledState(isDisabled: boolean) {\n        this.disabled = isDisabled;\n    }\n\n    _getAriaChecked(): 'true' | 'false' | 'mixed' {\n        return this.checked ? 'true' : (this.indeterminate ? 'mixed' : 'false');\n    }\n\n    private _transitionCheckState(newState: TransitionCheckState) {\n        const oldState = this._currentCheckState;\n        const element: HTMLElement = this._elementRef.nativeElement;\n\n        if (oldState === newState) {\n            return;\n        }\n        if (this._currentAnimationClass.length > 0) {\n            element.classList.remove(this._currentAnimationClass);\n        }\n\n        this._currentCheckState = newState;\n\n        if (this._currentAnimationClass.length > 0) {\n            element.classList.add(this._currentAnimationClass);\n        }\n    }\n\n    private _emitChangeEvent() {\n        const event = new McCheckboxChange();\n        event.source = this;\n        event.checked = this.checked;\n\n        this._controlValueAccessorChangeFn(this.checked);\n        this.change.emit(event);\n    }\n\n    /** Function is called whenever the focus changes for the input element. */\n    private _onInputFocusChange(focusOrigin: FocusOrigin) {\n        if (focusOrigin) {\n            this._onTouched();\n        }\n    }\n\n    /** Toggles the `checked` state of the checkbox. */\n    toggle(): void {\n        this.checked = !this.checked;\n    }\n\n    /**\n     * Event handler for checkbox input element.\n     * Toggles checked state if element is not disabled.\n     * Do not toggle on (change) event since IE doesn't fire change event when\n     *   indeterminate checkbox is clicked.\n     * @param event\n     */\n    _onInputClick(event: Event) {\n        // We have to stop propagation for click events on the visual hidden input element.\n        // By default, when a user clicks on a label element, a generated click event will be\n        // dispatched on the associated input element. Since we are using a label element as our\n        // root container, the click event on the `checkbox` will be executed twice.\n        // The real click event will bubble up, and the generated click event also tries to bubble up.\n        // This will lead to multiple click events.\n        // Preventing bubbling for the second event will solve that issue.\n        event.stopPropagation();\n\n        // If resetIndeterminate is false, and the current state is indeterminate, do nothing on click\n        if (!this.disabled && this._clickAction !== 'noop') {\n            // When user manually click on the checkbox, `indeterminate` is set to false.\n            if (this.indeterminate && this._clickAction !== 'check') {\n\n                Promise.resolve().then(() => {\n                    this._indeterminate = false;\n                    this.indeterminateChange.emit(this._indeterminate);\n                });\n            }\n\n            this.toggle();\n            this._transitionCheckState(\n                this._checked ? TransitionCheckState.Checked : TransitionCheckState.Unchecked);\n\n            // Emit our custom change event if the native input emitted one.\n            // It is important to only emit it, if the native input triggered one, because\n            // we don't want to trigger a change event, when the `checked` variable changes for example.\n            this._emitChangeEvent();\n        } else if (!this.disabled && this._clickAction === 'noop') {\n            // Reset native input when clicked with noop. The native checkbox becomes checked after\n            // click, reset it to be align with `checked` value of `mc-checkbox`.\n            this._inputElement.nativeElement.checked = this.checked;\n            this._inputElement.nativeElement.indeterminate = this.indeterminate;\n        }\n    }\n\n    /** Focuses the checkbox. */\n    focus(): void {\n        this._focusMonitor.focusVia(this._inputElement.nativeElement, 'keyboard');\n    }\n\n    _onInteractionEvent(event: Event) {\n        // We always have to stop propagation on the change event.\n        // Otherwise the change event, from the input element, will bubble up and\n        // emit its event object to the `change` output.\n        event.stopPropagation();\n    }\n}\n","import {\n    Directive,\n    forwardRef,\n    Provider\n} from '@angular/core';\nimport {\n    CheckboxRequiredValidator,\n    NG_VALIDATORS\n} from '@angular/forms';\n\n\nexport const MC_CHECKBOX_REQUIRED_VALIDATOR: Provider = {\n    provide: NG_VALIDATORS,\n    useExisting: forwardRef(() => McCheckboxRequiredValidator),\n    multi: true\n};\n\n/**\n * Validator for Mosaic checkbox's required attribute in template-driven checkbox.\n * Current CheckboxRequiredValidator only work with `input type=checkbox` and does not\n * work with `mc-checkbox`.\n */\n@Directive({\n    selector: `mc-checkbox[required][formControlName],\n             mc-checkbox[required][formControl], mc-checkbox[required][ngModel]`,\n    providers: [MC_CHECKBOX_REQUIRED_VALIDATOR],\n    host: { '[attr.required]': 'required ? \"\" : null' }\n})\nexport class McCheckboxRequiredValidator extends CheckboxRequiredValidator {\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { McCheckbox } from './checkbox';\nimport { McCheckboxRequiredValidator } from './checkbox-required-validator';\n\n\n@NgModule({\n    imports: [CommonModule],\n    exports: [McCheckbox, McCheckboxRequiredValidator],\n    declarations: [McCheckbox, McCheckboxRequiredValidator]\n})\nexport class McCheckboxModule {\n}\n","import { ChangeDetectionStrategy, Component, Input, ViewEncapsulation } from '@angular/core';\nimport { coerceBooleanProperty } from '@ptsecurity/cdk/coercion';\n\n\n@Component({\n    selector: 'mc-divider',\n    host: {\n        class: 'mc-divider',\n        role: 'separator',\n        '[attr.aria-orientation]': 'vertical ? \"vertical\" : \"horizontal\"',\n        '[class.mc-divider-vertical]': 'vertical',\n        '[class.mc-divider-inset]': 'inset'\n    },\n    template: '',\n    styleUrls: ['divider.css'],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    preserveWhitespaces: false\n})\nexport class McDivider {\n    // Whether the divider is vertically aligned.\n    @Input()\n    get vertical(): boolean {\n        return this._vertical;\n    }\n\n    set vertical(value: boolean) {\n        this._vertical = coerceBooleanProperty(value);\n    }\n\n    private _vertical: boolean = false;\n\n    // Whether the divider is an inset divider.\n    @Input()\n    get inset(): boolean {\n        return this._inset;\n    }\n\n    set inset(value: boolean) {\n        this._inset = coerceBooleanProperty(value);\n    }\n\n    private _inset: boolean = false;\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { McDivider } from './divider.component';\n\n\n@NgModule({\n    imports: [CommonModule],\n    exports: [McDivider],\n    declarations: [McDivider]\n})\nexport class McDividerModule {\n}\n","import { DOCUMENT } from '@angular/common';\nimport {\n    Directive,\n    TemplateRef,\n    ComponentFactoryResolver,\n    ApplicationRef,\n    Injector,\n    ViewContainerRef,\n    Inject,\n    OnDestroy\n} from '@angular/core';\nimport { TemplatePortal, DomPortalOutlet } from '@ptsecurity/cdk/portal';\nimport { Subject } from 'rxjs';\n\n\n/**\n * Dropdown content that will be rendered lazily once the dropdown is opened.\n */\n@Directive({\n    selector: 'ng-template[mcDropdownContent]'\n})\nexport class McDropdownContent implements OnDestroy {\n\n    /** Emits when the dropdown content has been attached. */\n    _attached = new Subject<void>();\n    private _portal: TemplatePortal;\n    private _outlet: DomPortalOutlet;\n\n    constructor(\n        private _template: TemplateRef<any>,\n        private _componentFactoryResolver: ComponentFactoryResolver,\n        private _appRef: ApplicationRef,\n        private _injector: Injector,\n        private _viewContainerRef: ViewContainerRef,\n        @Inject(DOCUMENT) private _document: any) {}\n\n    /**\n     * Attaches the content with a particular context.\n     * @docs-private\n     */\n    attach(context: any = {}) {\n        if (!this._portal) {\n            this._portal = new TemplatePortal(this._template, this._viewContainerRef);\n        }\n\n        this.detach();\n\n        if (!this._outlet) {\n            this._outlet = new DomPortalOutlet(this._document.createElement('div'),\n                this._componentFactoryResolver, this._appRef, this._injector);\n        }\n\n        const element: HTMLElement = this._template.elementRef.nativeElement;\n\n        // Because we support opening the same dropdown from different triggers (which in turn have their\n        // own `OverlayRef` panel), we have to re-insert the host element every time, otherwise we\n        // risk it staying attached to a pane that's no longer in the DOM.\n        element.parentNode!.insertBefore(this._outlet.outletElement, element);\n        this._portal.attach(this._outlet, context);\n        this._attached.next();\n    }\n\n    /**\n     * Detaches the content.\n     * @docs-private\n     */\n    detach() {\n        if (this._portal.isAttached) {\n            this._portal.detach();\n        }\n    }\n\n    ngOnDestroy() {\n        if (this._outlet) {\n            this._outlet.dispose();\n        }\n    }\n}\n","import { EventEmitter, TemplateRef, InjectionToken } from '@angular/core';\nimport { FocusOrigin } from '@ptsecurity/cdk/a11y';\nimport { Direction } from '@ptsecurity/cdk/bidi';\n\nimport { McDropdownContent } from './dropdown-content';\nimport { DropdownPositionX, DropdownPositionY } from './dropdown-positions';\n\n\n/**\n * Injection token used to provide the parent dropdown to dropdown-specific components.\n * @docs-private\n */\nexport const MC_DROPDOWN_PANEL = new InjectionToken<McDropdownPanel>('MC_DROPDOWN_PANEL');\n\n/**\n * Interface for a custom dropdown panel that can be used with `mcDropdownTriggerFor`.\n * @docs-private\n */\n// tslint:disable-next-line:interface-name\nexport interface McDropdownPanel<T = any> {\n    xPosition: DropdownPositionX;\n    yPosition: DropdownPositionY;\n    overlapTrigger: boolean;\n    templateRef: TemplateRef<any>;\n    closed: EventEmitter<void | 'click' | 'keydown' | 'tab'>;\n    direction?: Direction;\n    lazyContent?: McDropdownContent;\n    backdropClass?: string;\n    hasBackdrop?: boolean;\n    focusFirstItem(origin?: FocusOrigin): void;\n    resetActiveItem(): void;\n    setPositionClasses?(x: DropdownPositionX, y: DropdownPositionY): void;\n    addItem?(item: T): void;\n    removeItem?(item: T): void;\n}\n","import { DOCUMENT } from '@angular/common';\nimport {\n    ChangeDetectionStrategy,\n    Component,\n    ElementRef,\n    OnDestroy,\n    ViewEncapsulation,\n    Inject,\n    Optional\n} from '@angular/core';\nimport { IFocusableOption, FocusMonitor, FocusOrigin } from '@ptsecurity/cdk/a11y';\nimport {\n    CanDisable, CanDisableCtor,\n    mixinDisabled\n} from '@ptsecurity/mosaic/core';\n\nimport { MC_DROPDOWN_PANEL, McDropdownPanel } from './dropdown-panel';\n\n\n// Boilerplate for applying mixins to McDropdownItem.\n/** @docs-private */\nexport class McDropdownItemBase {}\nexport const _McDropdownItemMixinBase: CanDisableCtor & typeof McDropdownItemBase =\n    mixinDisabled(McDropdownItemBase);\n\n/**\n * This directive is intended to be used inside an mc-dropdown tag.\n * It exists mostly to set the role attribute.\n */\n@Component({\n    selector: 'mc-dropdown-item, [mc-dropdown-item]',\n    exportAs: 'mcDropdownItem',\n    inputs: ['disabled'],\n    host: {\n        role: 'dropdown-item',\n        class: 'mc-dropdown__item',\n        '[attr.tabindex]': '_getTabIndex()',\n        '[attr.disabled]': 'disabled || null',\n        '(click)': '_checkDisabled($event)'\n    },\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n    template: `<ng-content></ng-content>`\n})\nexport class McDropdownItem extends _McDropdownItemMixinBase\n    implements IFocusableOption, CanDisable, OnDestroy {\n\n    private _document: Document;\n\n    constructor(\n        private _elementRef: ElementRef<HTMLElement>,\n        @Inject(DOCUMENT) document: any,\n        private _focusMonitor: FocusMonitor,\n        @Inject(MC_DROPDOWN_PANEL) @Optional() private _parentDropdownPanel?: McDropdownPanel<McDropdownItem>) {\n        super();\n\n        if (_focusMonitor) {\n            // Start monitoring the element so it gets the appropriate focused classes. We want\n            // to show the focus style for dropdown items only when the focus was not caused by a\n            // mouse or touch interaction.\n            _focusMonitor.monitor(this._elementRef.nativeElement, false);\n        }\n\n        if (_parentDropdownPanel && _parentDropdownPanel.addItem) {\n            _parentDropdownPanel.addItem(this);\n        }\n\n        this._document = document;\n    }\n\n    /** Focuses the dropdown item. */\n    focus(origin: FocusOrigin = 'program'): void {\n        if (this._focusMonitor) {\n            this._focusMonitor.focusVia(this._getHostElement(), origin);\n        } else {\n            this._getHostElement().focus();\n        }\n    }\n\n    ngOnDestroy() {\n        if (this._focusMonitor) {\n            this._focusMonitor.stopMonitoring(this._elementRef.nativeElement);\n        }\n\n        if (this._parentDropdownPanel && this._parentDropdownPanel.removeItem) {\n            this._parentDropdownPanel.removeItem(this);\n        }\n    }\n\n    /** Used to set the `tabindex`. */\n    _getTabIndex(): string {\n        return this.disabled ? '-1' : '0';\n    }\n\n    /** Returns the host DOM element. */\n    _getHostElement(): HTMLElement {\n        return this._elementRef.nativeElement;\n    }\n\n    /** Prevents the default element actions if it is disabled. */\n    _checkDisabled(event: Event): void {\n        if (this.disabled) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n    }\n\n    /** Gets the label to be used when determining whether the option should be focused. */\n    getLabel(): string {\n        const element: HTMLElement = this._elementRef.nativeElement;\n        // tslint:disable-next-line:no-magic-numbers\n        const textNodeType = this._document ? this._document.TEXT_NODE : 3;\n        let output = '';\n\n        if (element.childNodes) {\n            const length = element.childNodes.length;\n\n            // Go through all the top-level text nodes and extract their text.\n            // We skip anything that's not a text node to prevent the text from\n            // being thrown off by something like an icon.\n            for (let i = 0; i < length; i++) {\n                if (element.childNodes[i].nodeType === textNodeType) {\n                    output += element.childNodes[i].textContent;\n                }\n            }\n        }\n\n        return output.trim();\n    }\n}\n","import {\n    trigger,\n    state,\n    style,\n    animate,\n    transition,\n    query,\n    group,\n    AnimationTriggerMetadata\n} from '@angular/animations';\n\n\n/**\n * Animations used by the mc-dropdown component.\n * Animation duration and timing values are based on:\n * https://material.io/guidelines/components/menus.html#menus-usage\n * @docs-private\n */\nexport const mcDropdownAnimations: {\n    readonly transformDropdown: AnimationTriggerMetadata;\n    readonly fadeInItems: AnimationTriggerMetadata;\n} = {\n    /**\n     * This animation controls the dropdown panel's entry and exit from the page.\n     *\n     * When the dropdown panel is added to the DOM, it scales in and fades in its border.\n     *\n     * When the dropdown panel is removed from the DOM, it simply fades out after a brief\n     * delay to display the ripple.\n     */\n    transformDropdown: trigger('transformDropdown', [\n        state('void', style({\n            opacity: 0,\n            transform: 'scale(0.8)'\n        })),\n        transition('void => enter', group([\n            query('.mc-dropdown__content', animate('50ms linear', style({opacity: 1}))),\n            animate('50ms cubic-bezier(0, 0, 0.2, 1)', style({transform: 'scale(1)'}))\n        ])),\n        transition('* => void', animate('50ms 25ms linear', style({opacity: 0})))\n    ]),\n\n\n    /**\n     * This animation fades in the background color and content of the dropdown panel\n     * after its containing element is scaled in.\n     */\n    fadeInItems: trigger('fadeInItems', [\n        // now. Remove next time we do breaking changes.\n        state('showing', style({opacity: 1})),\n        transition('void => *', [\n            style({opacity: 0}),\n            animate('200ms 60ms cubic-bezier(0.55, 0, 0.55, 0.2)')\n        ])\n    ])\n};\n\nexport const fadeInItems = mcDropdownAnimations.fadeInItems;\n\nexport const transformDropdown = mcDropdownAnimations.transformDropdown;\n","import { AnimationEvent } from '@angular/animations';\nimport {\n    AfterContentInit,\n    ChangeDetectionStrategy,\n    Component,\n    ContentChild,\n    ContentChildren,\n    ElementRef,\n    EventEmitter,\n    Inject,\n    InjectionToken,\n    Input,\n    NgZone,\n    OnDestroy,\n    Output,\n    TemplateRef,\n    QueryList,\n    ViewChild,\n    ViewEncapsulation,\n    OnInit\n} from '@angular/core';\nimport { FocusKeyManager, FocusOrigin } from '@ptsecurity/cdk/a11y';\nimport { Direction } from '@ptsecurity/cdk/bidi';\nimport { coerceBooleanProperty } from '@ptsecurity/cdk/coercion';\nimport { ESCAPE, DOWN_ARROW, UP_ARROW } from '@ptsecurity/cdk/keycodes';\nimport { Subject, Subscription } from 'rxjs';\nimport { take } from 'rxjs/operators';\n\nimport { mcDropdownAnimations } from './dropdown-animations';\nimport { McDropdownContent } from './dropdown-content';\nimport { throwMcDropdownInvalidPositionX, throwMcDropdownInvalidPositionY } from './dropdown-errors';\nimport { McDropdownItem } from './dropdown-item';\nimport { MC_DROPDOWN_PANEL, McDropdownPanel } from './dropdown-panel';\nimport { DropdownPositionX, DropdownPositionY } from './dropdown-positions';\n\n\n/** Default `mc-dropdown` options that can be overridden. */\n// tslint:disable-next-line:interface-name\nexport interface McDropdownDefaultOptions {\n    /** The x-axis position of the dropdown. */\n    xPosition: DropdownPositionX;\n\n    /** The y-axis position of the dropdown. */\n    yPosition: DropdownPositionY;\n\n    /** Whether the dropdown should overlap the dropdown trigger. */\n    overlapTrigger: boolean;\n\n    /** Class to be applied to the dropdown's backdrop. */\n    backdropClass: string;\n\n    /** Whether the dropdown has a backdrop. */\n    hasBackdrop?: boolean;\n}\n\n/** Injection token to be used to override the default options for `mc-dropdown`. */\nexport const MC_DROPDOWN_DEFAULT_OPTIONS =\n    new InjectionToken<McDropdownDefaultOptions>('mc-dropdown-default-options', {\n        providedIn: 'root',\n        factory: MC_DROPDOWN_DEFAULT_OPTIONS_FACTORY\n    });\n\n/** @docs-private */\nexport function MC_DROPDOWN_DEFAULT_OPTIONS_FACTORY(): McDropdownDefaultOptions {\n    return {\n        overlapTrigger: false,\n        xPosition: 'after',\n        yPosition: 'below',\n        backdropClass: 'cdk-overlay-transparent-backdrop'\n    };\n}\n\n@Component({\n    selector: 'mc-dropdown',\n    templateUrl: 'dropdown.html',\n    styleUrls: ['dropdown.css'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n    exportAs: 'mcDropdown',\n    animations: [\n        mcDropdownAnimations.transformDropdown,\n        mcDropdownAnimations.fadeInItems\n    ],\n    providers: [\n        { provide: MC_DROPDOWN_PANEL, useExisting: McDropdown }\n    ]\n})\nexport class McDropdown implements AfterContentInit, McDropdownPanel<McDropdownItem>, OnInit, OnDestroy {\n\n    /** Position of the dropdown in the X axis. */\n    @Input()\n    get xPosition(): DropdownPositionX { return this._xPosition; }\n    set xPosition(value: DropdownPositionX) {\n        if (value !== 'before' && value !== 'after') {\n            throwMcDropdownInvalidPositionX();\n        }\n\n        this._xPosition = value;\n        this.setPositionClasses();\n    }\n\n    /** Position of the dropdown in the Y axis. */\n    @Input()\n    get yPosition(): DropdownPositionY { return this._yPosition; }\n    set yPosition(value: DropdownPositionY) {\n        if (value !== 'above' && value !== 'below') {\n            throwMcDropdownInvalidPositionY();\n        }\n\n        this._yPosition = value;\n        this.setPositionClasses();\n    }\n\n    /** Whether the dropdown should overlap its trigger. */\n    @Input()\n    get overlapTrigger(): boolean { return this._overlapTrigger; }\n    set overlapTrigger(value: boolean) {\n        this._overlapTrigger = coerceBooleanProperty(value);\n    }\n\n    /** Whether the dropdown has a backdrop. */\n    @Input()\n    get hasBackdrop(): boolean | undefined { return this._hasBackdrop; }\n    set hasBackdrop(value: boolean | undefined) {\n        this._hasBackdrop = coerceBooleanProperty(value);\n    }\n\n    /**\n     * This method takes classes set on the host mc-dropdown element and applies them on the\n     * dropdown template that displays in the overlay container.  Otherwise, it's difficult\n     * to style the containing dropdown from outside the component.\n     * @param classes list of class names\n     */\n    @Input('class')\n    set panelClass(classes: string) {\n        if (classes && classes.length) {\n            this._classList = classes.split(' ').reduce((obj: any, className: string) => {\n                obj[className] = true;\n\n                return obj;\n            }, {});\n\n            this._elementRef.nativeElement.className = '';\n        }\n    }\n\n    /** Config object to be passed into the dropdown's ngClass */\n    _classList: {[key: string]: boolean} = {};\n\n    /** Current state of the panel animation. */\n    _panelAnimationState: 'void' | 'enter' = 'void';\n\n    /** Emits whenever an animation on the dropdown completes. */\n    _animationDone = new Subject<AnimationEvent>();\n\n    /** Whether the dropdown is animating. */\n    _isAnimating: boolean;\n\n    /** Layout direction of the dropdown. */\n    direction: Direction;\n\n    /** Class to be added to the backdrop element. */\n    @Input() backdropClass: string = this._defaultOptions.backdropClass;\n\n    /** @docs-private */\n    @ViewChild(TemplateRef) templateRef: TemplateRef<any>;\n\n    /**\n     * List of the items inside of a dropdown.\n     */\n    @ContentChildren(McDropdownItem) items: QueryList<McDropdownItem>;\n\n    /**\n     * Dropdown content that will be rendered lazily.\n     * @docs-private\n     */\n    @ContentChild(McDropdownContent) lazyContent: McDropdownContent;\n\n    /** Event emitted when the dropdown is closed. */\n    @Output() readonly closed: EventEmitter<void | 'click' | 'keydown' | 'tab'> =\n        new EventEmitter<void | 'click' | 'keydown' | 'tab'>();\n\n    private _keyManager: FocusKeyManager<McDropdownItem>;\n    private _xPosition: DropdownPositionX = this._defaultOptions.xPosition;\n    private _yPosition: DropdownPositionY = this._defaultOptions.yPosition;\n\n    /** Dropdown items inside the current dropdown. */\n    private _items: McDropdownItem[] = [];\n\n    /** Emits whenever the amount of dropdown items changes. */\n    private _itemChanges = new Subject<McDropdownItem[]>();\n\n    /** Subscription to tab events on the dropdown panel */\n    private _tabSubscription = Subscription.EMPTY;\n    private _overlapTrigger: boolean = this._defaultOptions.overlapTrigger;\n    private _hasBackdrop: boolean | undefined = this._defaultOptions.hasBackdrop;\n\n    constructor(\n        private _elementRef: ElementRef<HTMLElement>,\n        private _ngZone: NgZone,\n        @Inject(MC_DROPDOWN_DEFAULT_OPTIONS) private _defaultOptions: McDropdownDefaultOptions) { }\n\n    ngOnInit() {\n        this.setPositionClasses();\n    }\n\n    ngAfterContentInit() {\n        this._keyManager = new FocusKeyManager<McDropdownItem>(this.items).withWrap().withTypeAhead();\n        this._tabSubscription = this._keyManager.tabOut.subscribe(() => this.closed.emit('tab'));\n    }\n\n    ngOnDestroy() {\n        this._tabSubscription.unsubscribe();\n        this.closed.complete();\n    }\n\n    /** Handle a keyboard event from the dropdown, delegating to the appropriate action. */\n    _handleKeydown(event: KeyboardEvent) {\n\n        // tslint:disable-next-line:deprecation\n        switch (event.keyCode) {\n            case ESCAPE:\n                this.closed.emit('keydown');\n                break;\n            case UP_ARROW:\n            case DOWN_ARROW:\n                this._keyManager.setFocusOrigin('keyboard');\n                this._keyManager.onKeydown(event);\n                break;\n            default:\n                // todo зачем обрабатывать лишние события ?\n                this._keyManager.onKeydown(event);\n        }\n    }\n\n    /**\n     * Focus the first item in the dropdown.\n     * @param origin Action from which the focus originated. Used to set the correct styling.\n     */\n    focusFirstItem(origin: FocusOrigin = 'program'): void {\n        // When the content is rendered lazily, it takes a bit before the items are inside the DOM.\n        if (this.lazyContent) {\n            this._ngZone.onStable.asObservable()\n                .pipe(take(1))\n                .subscribe(() => this._keyManager.setFocusOrigin(origin).setFirstItemActive());\n        } else {\n            this._keyManager.setFocusOrigin(origin).setFirstItemActive();\n        }\n    }\n\n    /**\n     * Resets the active item in the dropdown. This is used when the dropdown is opened, allowing\n     * the user to start from the first option when pressing the down arrow.\n     */\n    resetActiveItem() {\n        this._keyManager.setActiveItem(-1);\n    }\n\n    /**\n     * Registers a dropdown item with the dropdown.\n     * @docs-private\n     */\n    addItem(item: McDropdownItem) {\n        // We register the items through this method, rather than picking them up through\n        // `ContentChildren`, because we need the items to be picked up by their closest\n        // `mc-dropdown` ancestor. If we used `@ContentChildren(McDropdownItem, {descendants: true})`,\n        // all descendant items will bleed into the top-level dropdown in the case where the consumer\n        // has `mc-dropdown` instances nested inside each other.\n        if (this._items.indexOf(item) === -1) {\n            this._items.push(item);\n            this._itemChanges.next(this._items);\n        }\n    }\n\n    /**\n     * Removes an item from the dropdown.\n     * @docs-private\n     */\n    removeItem(item: McDropdownItem) {\n        const index = this._items.indexOf(item);\n\n        if (this._items.indexOf(item) > -1) {\n            this._items.splice(index, 1);\n            this._itemChanges.next(this._items);\n        }\n    }\n\n    /**\n     * Adds classes to the dropdown panel based on its position. Can be used by\n     * consumers to add specific styling based on the position.\n     * @param posX Position of the dropdown along the x axis.\n     * @param posY Position of the dropdown along the y axis.\n     * @docs-private\n     */\n    setPositionClasses(posX: DropdownPositionX = this.xPosition, posY: DropdownPositionY = this.yPosition) {\n        const classes = this._classList;\n        classes['mc-dropdown-before'] = posX === 'before';\n        classes['mc-dropdown-after'] = posX === 'after';\n        classes['mc-dropdown-above'] = posY === 'above';\n        classes['mc-dropdown-below'] = posY === 'below';\n    }\n\n    /** Starts the enter animation. */\n    _startAnimation() {\n        this._panelAnimationState = 'enter';\n    }\n\n    /** Resets the panel animation to its initial state. */\n    _resetAnimation() {\n        this._panelAnimationState = 'void';\n    }\n\n    /** Callback that is invoked when the panel animation completes. */\n    _onAnimationDone(event: AnimationEvent) {\n        this._animationDone.next(event);\n        this._isAnimating = false;\n\n        // Scroll the content element to the top once the animation is done. This is necessary, because\n        // we move focus to the first item while it's still being animated, which can throw the browser\n        // off when it determines the scroll position. Alternatively we can move focus when the\n        // animation is done, however moving focus asynchronously will interrupt screen readers\n        // which are in the process of reading out the dropdown already. We take the `element` from\n        // the `event` since we can't use a `ViewChild` to access the pane.\n        if (event.toState === 'enter' && this._keyManager.activeItemIndex === 0) {\n            event.element.scrollTop = 0;\n        }\n    }\n}\n","import {\n    AfterContentInit,\n    Directive,\n    ElementRef,\n    EventEmitter,\n    Inject,\n    InjectionToken,\n    Input,\n    OnDestroy, OnInit,\n    Optional,\n    Output,\n    ViewContainerRef\n} from '@angular/core';\nimport { FocusMonitor, FocusOrigin } from '@ptsecurity/cdk/a11y';\nimport { Direction, Directionality } from '@ptsecurity/cdk/bidi';\nimport {\n    FlexibleConnectedPositionStrategy,\n    HorizontalConnectionPos,\n    Overlay,\n    OverlayConfig,\n    OverlayRef,\n    VerticalConnectionPos,\n    IScrollStrategy\n} from '@ptsecurity/cdk/overlay';\nimport { TemplatePortal } from '@ptsecurity/cdk/portal';\nimport { merge, Subscription } from 'rxjs';\nimport { filter, take, takeUntil } from 'rxjs/operators';\n\nimport { throwMcDropdownMissingError } from './dropdown-errors';\nimport { McDropdownPanel } from './dropdown-panel';\nimport { McDropdown } from './dropdown.component';\n\n\n/** Injection token that determines the scroll handling while the dropdown is open. */\nexport const MC_DROPDOWN_SCROLL_STRATEGY =\n    new InjectionToken<() => IScrollStrategy>('mc-dropdown-scroll-strategy');\n\n/** @docs-private */\nexport function MC_DROPDOWN_SCROLL_STRATEGY_FACTORY(overlay: Overlay): () => IScrollStrategy {\n    return () => overlay.scrollStrategies.reposition();\n}\n\n/** @docs-private */\nexport const MC_DROPDOWN_SCROLL_STRATEGY_FACTORY_PROVIDER = {\n    provide: MC_DROPDOWN_SCROLL_STRATEGY,\n    deps: [Overlay],\n    useFactory: MC_DROPDOWN_SCROLL_STRATEGY_FACTORY\n};\n\n/**\n * This directive is intended to be used in conjunction with an mc-dropdown tag.  It is\n * responsible for toggling the display of the provided dropdown instance.\n */\n@Directive({\n    selector: `[mcDropdownTriggerFor]`,\n    host: {\n        '(touchstart)': '_openedBy = \"touch\"',\n        '(click)': 'toggle()'\n    },\n    exportAs: 'mcDropdownTrigger'\n})\nexport class McDropdownTrigger implements OnInit, AfterContentInit, OnDestroy {\n\n    /** Whether the dropdown is open. */\n    get opened(): boolean {\n        return this._opened;\n    }\n\n    /** The text direction of the containing app. */\n    get dir(): Direction {\n        return this._dir && this._dir.value === 'rtl' ? 'rtl' : 'ltr';\n    }\n\n    // Tracking input type is necessary so it's possible to only auto-focus\n    // the first item of the list when the dropdown is opened via the keyboard\n    _openedBy: 'mouse' | 'touch' | null = null;\n\n    /** References the dropdown instance that the trigger is associated with. */\n    @Input('mcDropdownTriggerFor') dropdown: McDropdownPanel;\n\n    /** Data to be passed along to any lazily-rendered content. */\n    @Input('mcDropdownTriggerData') data: any;\n\n    /** Event emitted when the associated dropdown is opened. */\n    @Output() readonly dropdownOpened: EventEmitter<void> = new EventEmitter<void>();\n\n    /** Event emitted when the associated dropdown is closed. */\n    @Output() readonly dropdownClosed: EventEmitter<void> = new EventEmitter<void>();\n\n    private _portal: TemplatePortal;\n    private _overlayRef: OverlayRef | null = null;\n    private _opened: boolean = false;\n    private _closeSubscription = Subscription.EMPTY;\n    private _hoverSubscription = Subscription.EMPTY;\n\n    constructor(private _overlay: Overlay,\n                private _element: ElementRef<HTMLElement>,\n                private _viewContainerRef: ViewContainerRef,\n                @Inject(MC_DROPDOWN_SCROLL_STRATEGY) private _scrollStrategy: any,\n                @Optional() private _dir: Directionality,\n                private _focusMonitor?: FocusMonitor) {}\n\n    ngOnInit(): void {\n        this.dropdown.closed = this.dropdown.closed || new EventEmitter<void | 'click' | 'keydown' | 'tab'>();\n    }\n\n    ngAfterContentInit() {\n        this._check();\n\n        this.dropdown.closed.asObservable().subscribe(() => {\n            this._destroy();\n        });\n    }\n\n    ngOnDestroy() {\n        if (this._overlayRef) {\n            this._overlayRef.dispose();\n            this._overlayRef = null;\n        }\n\n        this._cleanUpSubscriptions();\n    }\n\n    /** Toggles the dropdown between the open and closed states. */\n    toggle(): void {\n        // tslint:disable-next-line:no-void-expression\n        return this._opened ? this.close() : this.open();\n    }\n\n    /** Opens the dropdown. */\n    open(): void {\n        if (this._opened) {\n            return;\n        }\n\n        this._check();\n\n        const overlayRef = this._createOverlay();\n        this._setPosition(overlayRef.getConfig().positionStrategy as FlexibleConnectedPositionStrategy);\n        overlayRef.attach(this._portal);\n\n        if (this.dropdown.lazyContent) {\n            this.dropdown.lazyContent.attach(this.data);\n        }\n\n        this._closeSubscription = this._closingActions().subscribe(() => this.close());\n        this._init();\n\n        if (this.dropdown instanceof McDropdown) {\n            this.dropdown._startAnimation();\n        }\n    }\n\n    /** Closes the dropdown. */\n    close(): void {\n        this.dropdown.closed.emit();\n    }\n\n    /**\n     * Focuses the dropdown trigger.\n     * @param origin Source of the dropdown trigger's focus.\n     */\n    focus(origin: FocusOrigin = 'program') {\n        if (this._focusMonitor) {\n            this._focusMonitor.focusVia(this._element.nativeElement, origin);\n        } else {\n            this._element.nativeElement.focus();\n        }\n    }\n\n    /** Closes the dropdown and does the necessary cleanup. */\n    private _destroy() {\n        if (!this._overlayRef || !this.opened) {\n            return;\n        }\n\n        const dropdown = this.dropdown;\n\n        this._closeSubscription.unsubscribe();\n        this._overlayRef.detach();\n\n        if (dropdown instanceof McDropdown) {\n            dropdown._resetAnimation();\n\n            if (dropdown.lazyContent) {\n                // Wait for the exit animation to finish before detaching the content.\n                dropdown._animationDone\n                    .pipe(\n                        filter((event) => event.toState === 'void'),\n                        take(1),\n                        // Interrupt if the content got re-attached.\n                        takeUntil(dropdown.lazyContent._attached)\n                    )\n                    .subscribe(() => dropdown.lazyContent.detach(), undefined, () => {\n                        // No matter whether the content got re-attached, reset the dropdown.\n                        this._reset();\n                    });\n            } else {\n                this._reset();\n            }\n        } else {\n            this._reset();\n\n            if (dropdown.lazyContent) {\n                dropdown.lazyContent.detach();\n            }\n        }\n    }\n\n    /**\n     * This method sets the dropdown state to open and focuses the first item if\n     * the dropdown was opened via the keyboard.\n     */\n    private _init(): void {\n        this.dropdown.direction = this.dir;\n        this._setIsOpened(true);\n        this.dropdown.focusFirstItem(this._openedBy || 'program');\n    }\n\n    /**\n     * This method resets the dropdown when it's closed, most importantly restoring\n     * focus to the dropdown trigger if the dropdown was opened via the keyboard.\n     */\n    private _reset(): void {\n        this._setIsOpened(false);\n\n        // We should reset focus if the user is navigating using a keyboard or\n        // if we have a top-level trigger which might cause focus to be lost\n        // when clicking on the backdrop.\n        if (!this._openedBy) {\n            // Note that the focus style will show up both for `program` and\n            // `keyboard` so we don't have to specify which one it is.\n            this.focus();\n        } else {\n            this.focus(this._openedBy);\n        }\n\n        this._openedBy = null;\n    }\n\n    // set state rather than toggle to support triggers sharing a dropdown\n    private _setIsOpened(isOpen: boolean): void {\n        this._opened = isOpen;\n        // tslint:disable-next-line:no-void-expression\n        this._opened ? this.dropdownOpened.emit() : this.dropdownClosed.emit();\n    }\n\n    /**\n     * This method checks that a valid instance of Dropdown has been passed into\n     * mcDropdownTriggerFor. If not, an exception is thrown.\n     */\n    private _check() {\n        if (!this.dropdown) {\n            throwMcDropdownMissingError();\n        }\n    }\n\n    /**\n     * This method creates the overlay from the provided dropdown's template and saves its\n     * OverlayRef so that it can be attached to the DOM when open is called.\n     */\n    private _createOverlay(): OverlayRef {\n        if (!this._overlayRef) {\n            this._portal = new TemplatePortal(this.dropdown.templateRef, this._viewContainerRef);\n            const config = this._getOverlayConfig();\n            this._subscribeToPositions(config.positionStrategy as FlexibleConnectedPositionStrategy);\n            this._overlayRef = this._overlay.create(config);\n\n            // Consume the `keydownEvents` in order to prevent them from going to another overlay.\n            // Ideally we'd also have our keyboard event logic in here, however doing so will\n            // break anybody that may have implemented the `McDropdownPanel` themselves.\n            this._overlayRef.keydownEvents().subscribe();\n        }\n\n        return this._overlayRef;\n    }\n\n    /**\n     * This method builds the configuration object needed to create the overlay, the OverlayState.\n     * @returns OverlayConfig\n     */\n    private _getOverlayConfig(): OverlayConfig {\n        return new OverlayConfig({\n            positionStrategy: this._overlay.position()\n                .flexibleConnectedTo(this._element)\n                .withLockedPosition()\n                .withTransformOriginOn('.mc-dropdown__panel'),\n            hasBackdrop: this.dropdown.hasBackdrop === null || this.dropdown.hasBackdrop === undefined\n                ? true\n                : this.dropdown.hasBackdrop,\n            backdropClass: this.dropdown.backdropClass || 'cdk-overlay-transparent-backdrop',\n            scrollStrategy: this._scrollStrategy(),\n            direction: this._dir\n        });\n    }\n\n    /**\n     * Listens to changes in the position of the overlay and sets the correct classes\n     * on the dropdown based on the new position. This ensures the animation origin is always\n     * correct, even if a fallback position is used for the overlay.\n     */\n    private _subscribeToPositions(position: FlexibleConnectedPositionStrategy): void {\n        if (this.dropdown.setPositionClasses) {\n            // todo possibly we should not recompute positions there\n            /*position.positionChanges.subscribe((change) => {\n                const posX: DropdownPositionX = change.connectionPair.overlayX === 'start' ? 'after' : 'before';\n                const posY: DropdownPositionY = change.connectionPair.overlayY === 'top' ? 'below' : 'above';\n\n                this.dropdown.setPositionClasses!(posX, posY);\n            });*/\n            position.positionChanges.subscribe(() => {\n                this.dropdown.setPositionClasses!(this.dropdown.xPosition, this.dropdown.yPosition);\n            });\n        }\n    }\n\n    /**\n     * Sets the appropriate positions on a position strategy\n     * so the overlay connects with the trigger correctly.\n     * @param positionStrategy Strategy whose position to update.\n     */\n    private _setPosition(positionStrategy: FlexibleConnectedPositionStrategy) {\n        const [originX, originFallbackX]: HorizontalConnectionPos[] =\n            this.dropdown.xPosition === 'before' ? ['end', 'start'] : ['start', 'end'];\n\n        const [overlayY, overlayFallbackY]: VerticalConnectionPos[] =\n            this.dropdown.yPosition === 'above' ? ['bottom', 'top'] : ['top', 'bottom'];\n\n        let [originY, originFallbackY] = [overlayY, overlayFallbackY];\n        const [overlayX, overlayFallbackX] = [originX, originFallbackX];\n        const offsetY = 0;\n\n        if (!this.dropdown.overlapTrigger) {\n            originY = overlayY === 'top' ? 'bottom' : 'top';\n            originFallbackY = overlayFallbackY === 'top' ? 'bottom' : 'top';\n        }\n\n        positionStrategy.withPositions([\n            {originX, originY, overlayX, overlayY, offsetY},\n            {originX: originFallbackX, originY, overlayX: overlayFallbackX, overlayY, offsetY},\n            {\n                originX,\n                originY: originFallbackY,\n                overlayX,\n                overlayY: overlayFallbackY,\n                offsetY: -offsetY\n            },\n            {\n                originX: originFallbackX,\n                originY: originFallbackY,\n                overlayX: overlayFallbackX,\n                overlayY: overlayFallbackY,\n                offsetY: -offsetY\n            }\n        ]);\n    }\n\n    /** Cleans up the active subscriptions. */\n    private _cleanUpSubscriptions(): void {\n        this._closeSubscription.unsubscribe();\n        this._hoverSubscription.unsubscribe();\n    }\n\n    /** Returns a stream that emits whenever an action that should close the dropdown occurs. */\n    private _closingActions() {\n        const backdrop = this._overlayRef!.backdropClick();\n        const detachments = this._overlayRef!.detachments();\n\n        return merge(backdrop, detachments);\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { OverlayModule } from '@ptsecurity/cdk/overlay';\n\nimport { McDropdownContent } from './dropdown-content';\nimport { McDropdownItem } from './dropdown-item';\nimport { MC_DROPDOWN_SCROLL_STRATEGY_FACTORY_PROVIDER, McDropdownTrigger } from './dropdown-trigger';\nimport { McDropdown } from './dropdown.component';\n\n\n@NgModule({\n    imports: [\n        CommonModule,\n        OverlayModule\n    ],\n    exports: [McDropdown, McDropdownItem, McDropdownTrigger, McDropdownContent],\n    declarations: [McDropdown, McDropdownItem, McDropdownTrigger, McDropdownContent],\n    providers: [MC_DROPDOWN_SCROLL_STRATEGY_FACTORY_PROVIDER]\n})\nexport class McDropdownModule {}\n","import { Component } from '@angular/core';\n\n\n@Component({\n    selector: 'mc-cleaner',\n    template: '<i class=\"mc-icon_light\" mc-icon=\"mc-close-M_16\" color=\"second\"></i>'\n})\nexport class McCleaner {}\n","import { NgControl } from '@angular/forms';\nimport { Observable } from 'rxjs';\n\n\n/** An interface which allows a control to work inside of a `MсFormField`. */\nexport abstract class McFormFieldControl<T> {\n    /** The value of the control. */\n    value: T | null;\n\n    /**\n     * Stream that emits whenever the state of the control changes such that the parent `MсFormField`\n     * needs to run change detection.\n     */\n    readonly stateChanges: Observable<void>;\n\n    /** The element ID for this control. */\n    readonly id: string;\n\n    /** The placeholder for this control. */\n    readonly placeholder: string;\n\n    /** Gets the NgControl for this control. */\n    readonly ngControl: NgControl | null;\n\n    /** Whether the control is focused. */\n    readonly focused: boolean;\n\n    /** Whether the control is empty. */\n    readonly empty: boolean;\n\n    /** Whether the control is required. */\n    readonly required: boolean;\n\n    /** Whether the control is disabled. */\n    readonly disabled: boolean;\n\n    /** Whether the control is in an error state. */\n    readonly errorState: boolean;\n\n    /**\n     * An optional name for the control type that can be used to distinguish `mc-form-field` elements\n     * based on their control type. The form field will add a class,\n     * `mc-form-field-type-{{controlType}}` to its root element.\n     */\n    readonly controlType?: string;\n\n    /** Handles a click on the control's container. */\n    abstract onContainerClick(event: MouseEvent): void;\n}\n","import { Observable } from 'rxjs';\n\n\n/** An interface which allows a control to work inside of a `MсFormField`. */\nexport abstract class McFormFieldNumberControl<T> {\n    /** The value of the control. */\n    value: T | null;\n\n    /**\n     * Stream that emits whenever the state of the control changes such that the parent `MсFormField`\n     * needs to run change detection.\n     */\n    readonly stateChanges: Observable<void>;\n\n    /** the number step */\n    step: number;\n\n    /** the number big step */\n    bigStep: number;\n\n    /** Whether the control is focused. */\n    readonly focused: boolean;\n\n    /** Handles step up and down */\n    abstract stepUp(step: number): void;\n\n    abstract stepDown(step: number): void;\n}\n","import { Directive, Input } from '@angular/core';\n\n\nlet nextUniqueId = 0;\n\n@Directive({\n    selector: 'mc-hint',\n    host: {\n        class: 'mc-hint',\n        '[attr.id]': 'id'\n    }\n})\nexport class McHint {\n    @Input() id: string = `mc-hint-${nextUniqueId++}`;\n}\n","import { Directive } from '@angular/core';\n\n\n@Directive({\n    selector: '[mcPrefix]'\n})\nexport class McPrefix {\n}\n","import { Component, EventEmitter, Output } from '@angular/core';\n\n\n@Component({\n    selector: 'mc-stepper',\n    template: `\n        <i class=\"mc mc-icon mc-icon_light mc-second mc-stepper-step-up mc-angle-L_16\"\n           (mousedown)=\"onStepUp($event)\">\n        </i>\n        <i class=\"mc mc-icon mc-icon_light mc-second mc-stepper-step-down mc-angle-L_16\"\n           (mousedown)=\"onStepDown($event)\">\n        </i>\n    `\n})\nexport class McStepper {\n    @Output()\n    readonly stepUp: EventEmitter<void> = new EventEmitter<void>();\n    @Output()\n    readonly stepDown: EventEmitter<void> = new EventEmitter<void>();\n\n    onStepUp($event: MouseEvent) {\n        this.stepUp.emit();\n        $event.preventDefault();\n    }\n\n    onStepDown($event: MouseEvent) {\n        this.stepDown.emit();\n        $event.preventDefault();\n    }\n}\n","import { Directive } from '@angular/core';\n\n\n@Directive({\n    selector: '[mcSuffix]'\n})\nexport class McSuffix {\n}\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","\nexport function isBoolean(val: any): val is boolean { return typeof val === 'boolean'; }\n\nexport function toBoolean(value: any): boolean {\n    return value != null && `${value}` !== 'false';\n}\n","import { NgModule, InjectionToken, Optional, Inject, isDevMode } from '@angular/core';\nimport { BidiModule } from '@ptsecurity/cdk/bidi';\n\n\n// Injection token that configures whether the Mosaic sanity checks are enabled.\nexport const MC_SANITY_CHECKS = new InjectionToken<boolean>('mc-sanity-checks', {\n    providedIn: 'root',\n    factory: MC_SANITY_CHECKS_FACTORY\n});\n\nexport function MC_SANITY_CHECKS_FACTORY(): boolean {\n    return true;\n}\n\n/**\n * Module that captures anything that should be loaded and/or run for *all* Mosaic\n * components. This includes Bidi, etc.\n *\n * This module should be imported to each top-level component module (e.g., MatTabsModule).\n */\n@NgModule({\n    imports: [ BidiModule ],\n    exports: [ BidiModule ]\n})\nexport class McCommonModule {\n    // Whether we've done the global sanity checks (e.g. a theme is loaded, there is a doctype).\n    private _hasDoneGlobalChecks = false;\n\n    // Reference to the global `document` object.\n    private _document = typeof document === 'object' && document ? document : null;\n\n    // Reference to the global 'window' object.\n    private _window = typeof window === 'object' && window ? window : null;\n\n    constructor(@Optional() @Inject(MC_SANITY_CHECKS) private _sanityChecksEnabled: boolean) {\n        if (this._areChecksEnabled() && !this._hasDoneGlobalChecks) {\n            this._checkDoctypeIsDefined();\n            this._checkThemeIsPresent();\n            this._hasDoneGlobalChecks = true;\n        }\n    }\n\n    // Whether any sanity checks are enabled\n    private _areChecksEnabled(): boolean {\n        return this._sanityChecksEnabled && isDevMode() && !this._isTestEnv();\n    }\n\n    // Whether the code is running in tests.\n    private _isTestEnv() {\n        // tslint:disable-next-line\n        return this._window && (this._window['__karma__'] || this._window['jasmine']);\n    }\n\n    private _checkDoctypeIsDefined(): void {\n        if (this._document && !this._document.doctype) {\n            console.warn(\n                'Current document does not have a doctype. This may cause ' +\n                'some Mosaic components not to behave as expected.'\n            );\n        }\n    }\n\n    private _checkThemeIsPresent(): void {\n        if (this._document && typeof getComputedStyle === 'function') {\n            const testElement = this._document.createElement('div');\n\n            testElement.classList.add('mc-theme-loaded-marker');\n            this._document.body.appendChild(testElement);\n\n            const computedStyle = getComputedStyle(testElement);\n\n            // In some situations, the computed style of the test element can be null. For example in\n            // Firefox, the computed style is null if an application is running inside of a hidden iframe.\n            // See: https://bugzilla.mozilla.org/show_bug.cgi?id=548397\n            if (computedStyle && computedStyle.display !== 'none') {\n                console.warn(\n                    'Could not find Mosaic core theme. Most Mosaic ' +\n                    'components may not work as expected. For more info refer ' +\n                    'to the theming guide: link there'\n                );\n            }\n\n            this._document.body.removeChild(testElement);\n        }\n    }\n}\n","import { coerceBooleanProperty } from '@ptsecurity/cdk/coercion';\n\nimport { Constructor } from './constructor';\n\n\nexport interface CanDisable {\n    disabled: boolean;\n}\n\n/** @docs-private */\nexport type CanDisableCtor = Constructor<CanDisable>;\n\n// Mixin to augment a directive with a `disabled` property.\nexport function mixinDisabled<T extends Constructor<{}>>(base: T): CanDisableCtor & T {\n    return class extends base {\n        private _disabled: boolean = false;\n\n        get disabled() {\n            return this._disabled;\n        }\n\n        set disabled(value: any) {\n            this._disabled = coerceBooleanProperty(value);\n        }\n\n        constructor(...args: any[]) {\n            // tslint:disable-next-line\n            super(...args);\n        }\n    };\n}\n","import { ElementRef } from '@angular/core';\n\nimport { Constructor } from './constructor';\n\n\nexport interface CanColor {\n    color: ThemePalette;\n}\n\n/** @docs-private */\nexport type CanColorCtor = Constructor<CanColor>;\n\nexport interface HasElementRef {\n    _elementRef: ElementRef;\n}\n\nexport enum ThemePalette {\n    Primary = 'primary',\n    Second = 'second',\n    Error = 'error',\n    Default = 'second',\n    Empty = ''\n}\n\n/** Mixin to augment a directive with a `color` property. */\nexport function mixinColor<T extends Constructor<HasElementRef>>(\n    base: T,\n    defaultColor: ThemePalette = ThemePalette.Default\n): CanColorCtor & T {\n    return class extends base {\n\n        private _color: ThemePalette;\n\n        get color(): ThemePalette {\n            return this._color;\n        }\n\n        set color(value: ThemePalette) {\n            const colorPalette = value || defaultColor;\n\n            if (colorPalette !== this._color) {\n                if (this._color) {\n                    this._elementRef.nativeElement.classList.remove(`mc-${this._color}`);\n                }\n\n                if (colorPalette) {\n                    this._elementRef.nativeElement.classList.add(`mc-${colorPalette}`);\n                }\n\n                this._color = colorPalette;\n            }\n        }\n\n        constructor(...args: any[]) {\n            super(...args);\n\n            this.color = defaultColor;\n        }\n    };\n}\n\n","import { Constructor } from './constructor';\nimport { CanDisable } from './disabled';\n\n\nexport interface HasTabIndex {\n    tabIndex: number;\n}\n\nexport type HasTabIndexCtor = Constructor<HasTabIndex>;\n\n// Mixin to augment a directive with a `tabIndex` property.\nexport function mixinTabIndex<T extends Constructor<CanDisable>>(base: T, defaultTabIndex = 0)\n    : HasTabIndexCtor & T {\n    return class extends base {\n        private _tabIndex: number = defaultTabIndex;\n\n        get tabIndex(): number {\n            return this.disabled ? -1 : this._tabIndex;\n        }\n\n        set tabIndex(value: number) {\n            this._tabIndex = value != null ? value : defaultTabIndex;\n        }\n\n        constructor(...args: any[]) {\n            super(...args);\n        }\n    };\n}\n","import { FormControl, FormGroupDirective, NgControl, NgForm } from '@angular/forms';\nimport { Subject } from 'rxjs';\n\nimport { ErrorStateMatcher } from '../error/error-options';\n\nimport { Constructor } from './constructor';\n\n\n/** @docs-private */\nexport interface CanUpdateErrorState {\n\n    readonly stateChanges: Subject<void>;\n\n    errorState: boolean;\n    errorStateMatcher: ErrorStateMatcher;\n\n    updateErrorState();\n}\n\n/** @docs-private */\nexport type CanUpdateErrorStateCtor = Constructor<CanUpdateErrorState>;\n\n/** @docs-private */\nexport interface HasErrorState {\n    _parentFormGroup: FormGroupDirective;\n    _parentForm: NgForm;\n    _defaultErrorStateMatcher: ErrorStateMatcher;\n    ngControl: NgControl;\n}\n\n/**\n * Mixin to augment a directive with updateErrorState method.\n * For component with `errorState` and need to update `errorState`.\n */\nexport function mixinErrorState<T extends Constructor<HasErrorState>>(base: T): CanUpdateErrorStateCtor & T {\n    return class extends base {\n        /** Whether the component is in an error state. */\n        errorState: boolean = false;\n\n        /**\n         * Stream that emits whenever the state of the input changes such that the wrapping\n         * `MatFormField` needs to run change detection.\n         */\n        readonly stateChanges = new Subject<void>();\n\n        errorStateMatcher: ErrorStateMatcher;\n\n        constructor(...args: any[]) {\n            super(...args);\n        }\n\n        updateErrorState() {\n            const oldState = this.errorState;\n            const parent = this._parentFormGroup || this._parentForm;\n            const matcher = this.errorStateMatcher || this._defaultErrorStateMatcher;\n            const control = this.ngControl ? this.ngControl.control as FormControl : null;\n            const newState = matcher.isErrorState(control, parent);\n\n            if (newState !== oldState) {\n                this.errorState = newState;\n                this.stateChanges.next();\n            }\n        }\n    };\n}\n","import {\n    AfterViewChecked,\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    ElementRef,\n    EventEmitter,\n    Inject,\n    InjectionToken,\n    Input,\n    OnDestroy,\n    Optional,\n    Output,\n    QueryList,\n    ViewEncapsulation\n} from '@angular/core';\nimport { coerceBooleanProperty } from '@ptsecurity/cdk/coercion';\nimport { ENTER, SPACE } from '@ptsecurity/cdk/keycodes';\nimport { Subject } from 'rxjs';\n\nimport { McOptgroup } from './optgroup';\n\n\n/**\n * Option IDs need to be unique across components, so this counter exists outside of\n * the component definition.\n */\nlet _uniqueIdCounter = 0;\n\n/** Event object emitted by McOption when selected or deselected. */\nexport class McOptionSelectionChange {\n    constructor(\n        /** Reference to the option that emitted the event. */\n        public source: McOption,\n        /** Whether the change in the option's value was a result of a user action. */\n        public isUserInput = false) {\n    }\n}\n\n/**\n * Describes a parent component that manages a list of options.\n * Contains properties that the options can inherit.\n * @docs-private\n */\nexport interface IMcOptionParentComponent {\n    disableRipple?: boolean;\n    multiple?: boolean;\n}\n\n/**\n * Injection token used to provide the parent component to options.\n */\nexport const MC_OPTION_PARENT_COMPONENT =\n    new InjectionToken<IMcOptionParentComponent>('MC_OPTION_PARENT_COMPONENT');\n\n/**\n * Single option inside of a `<mat-select>` element.\n */\n@Component({\n    selector: 'mc-option',\n    exportAs: 'mcOption',\n    host: {\n        '[attr.tabindex]': '_getTabIndex()',\n        '[class.mc-selected]': 'selected',\n        '[class.mc-option-multiple]': 'multiple',\n        '[class.mc-active]': 'active',\n        '[id]': 'id',\n        '[class.mc-disabled]': 'disabled',\n        '(click)': '_selectViaInteraction()',\n        '(keydown)': '_handleKeydown($event)',\n        class: 'mc-option'\n    },\n    styleUrls: ['option.css'],\n    templateUrl: 'option.html',\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class McOption implements AfterViewChecked, OnDestroy {\n    /** Whether the wrapping component is in multiple selection mode. */\n    get multiple() {\n        return this._parent && this._parent.multiple;\n    }\n\n    /** The unique ID of the option. */\n    get id(): string {\n        return this._id;\n    }\n\n    /** Whether or not the option is currently selected. */\n    get selected(): boolean {\n        return this._selected;\n    }\n\n    /** The form value of the option. */\n    @Input() value: any;\n\n    /** Whether the option is disabled. */\n    @Input()\n    get disabled() {\n        return (this.group && this.group.disabled) || this._disabled;\n    }\n\n    set disabled(value: any) {\n        this._disabled = coerceBooleanProperty(value);\n    }\n\n    /** Whether ripples for the option are disabled. */\n    get disableRipple() {\n        return this._parent && this._parent.disableRipple;\n    }\n\n    /** Event emitted when the option is selected or deselected. */\n        // tslint:disable-next-line:no-output-on-prefix\n    @Output() readonly onSelectionChange = new EventEmitter<McOptionSelectionChange>();\n\n    /** Emits when the state of the option changes and any parents have to be notified. */\n    readonly _stateChanges = new Subject<void>();\n\n    private _selected = false;\n    private _active = false;\n    private _disabled = false;\n    private readonly _id = `mc-option-${_uniqueIdCounter++}`;\n    private _mostRecentViewValue = '';\n\n    constructor(\n        private readonly _element: ElementRef,\n        private readonly _changeDetectorRef: ChangeDetectorRef,\n        @Optional() @Inject(MC_OPTION_PARENT_COMPONENT) private readonly _parent: IMcOptionParentComponent,\n        @Optional() readonly group: McOptgroup) {\n    }\n\n    /**\n     * Whether or not the option is currently active and ready to be selected.\n     * An active option displays styles as if it is focused, but the\n     * focus is actually retained somewhere else. This comes in handy\n     * for components like autocomplete where focus must remain on the input.\n     */\n    get active(): boolean {\n        return this._active;\n    }\n\n    /**\n     * The displayed value of the option. It is necessary to show the selected option in the\n     * select's trigger.\n     */\n    get viewValue(): string {\n        // TODO(kara): Add input property alternative for node envs.\n        return (this._getHostElement().textContent || '').trim();\n    }\n\n    /** Selects the option. */\n    select(): void {\n        if (!this._selected) {\n            this._selected = true;\n            this._changeDetectorRef.markForCheck();\n            this._emitSelectionChangeEvent();\n        }\n    }\n\n    /** Deselects the option. */\n    deselect(): void {\n        if (this._selected) {\n            this._selected = false;\n            this._changeDetectorRef.markForCheck();\n            this._emitSelectionChangeEvent();\n        }\n    }\n\n    /** Sets focus onto this option. */\n    focus(): void {\n        const element = this._getHostElement();\n\n        if (typeof element.focus === 'function') {\n            element.focus();\n        }\n    }\n\n    /**\n     * This method sets display styles on the option to make it appear\n     * active. This is used by the ActiveDescendantKeyManager so key\n     * events will display the proper options as active on arrow key events.\n     */\n    setActiveStyles(): void {\n        if (!this._active) {\n            this._active = true;\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n\n    /**\n     * This method removes display styles on the option that made it appear\n     * active. This is used by the ActiveDescendantKeyManager so key\n     * events will display the proper options as active on arrow key events.\n     */\n    setInactiveStyles(): void {\n        if (this._active) {\n            this._active = false;\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n\n    /** Gets the label to be used when determining whether the option should be focused. */\n    getLabel(): string {\n        return this.viewValue;\n    }\n\n    /** Ensures the option is selected when activated from the keyboard. */\n    _handleKeydown(event: KeyboardEvent): void {\n        // tslint:disable-next-line\n        if (event.keyCode === ENTER || event.keyCode === SPACE) {\n            this._selectViaInteraction();\n\n            // Prevent the page from scrolling down and form submits.\n            event.preventDefault();\n        }\n    }\n\n    /**\n     * `Selects the option while indicating the selection came from the user. Used to\n     * determine if the select's view -> model callback should be invoked.`\n     */\n    _selectViaInteraction(): void {\n        if (!this.disabled) {\n            this._selected = this.multiple ? !this._selected : true;\n            this._changeDetectorRef.markForCheck();\n            this._emitSelectionChangeEvent(true);\n        }\n    }\n\n    /** Returns the correct tabindex for the option depending on disabled state. */\n    _getTabIndex(): string {\n        return this.disabled ? '-1' : '0';\n    }\n\n    /** Gets the host DOM element. */\n    _getHostElement(): HTMLElement {\n        return this._element.nativeElement;\n    }\n\n    ngAfterViewChecked() {\n        // Since parent components could be using the option's label to display the selected values\n        // (e.g. `mat-select`) and they don't have a way of knowing if the option's label has changed\n        // we have to check for changes in the DOM ourselves and dispatch an event. These checks are\n        // relatively cheap, however we still limit them only to selected options in order to avoid\n        // hitting the DOM too often.\n        if (this._selected) {\n            const viewValue = this.viewValue;\n\n            if (viewValue !== this._mostRecentViewValue) {\n                this._mostRecentViewValue = viewValue;\n                this._stateChanges.next();\n            }\n        }\n    }\n\n    ngOnDestroy() {\n        this._stateChanges.complete();\n    }\n\n    /** Emits the selection change event. */\n    private _emitSelectionChangeEvent(isUserInput = false): void {\n        this.onSelectionChange.emit(new McOptionSelectionChange(this, isUserInput));\n    }\n}\n\n/**\n * Counts the amount of option group labels that precede the specified option.\n * @param optionIndex Index of the option at which to start counting.\n * @param options Flat list of all of the options.\n * @param optionGroups Flat list of all of the option groups.\n * @docs-private\n */\nexport function _countGroupLabelsBeforeOption(\n    optionIndex: number, options: QueryList<McOption>,\n    optionGroups: QueryList<McOptgroup>\n): number {\n\n    if (optionGroups.length) {\n        const optionsArray = options.toArray();\n        const groups = optionGroups.toArray();\n\n        let groupCounter = 0;\n\n        for (let i = 0; i < optionIndex + 1; i++) {\n            if (optionsArray[i].group && optionsArray[i].group === groups[groupCounter]) {\n                groupCounter++;\n            }\n        }\n\n        return groupCounter;\n    }\n\n    return 0;\n}\n\n/**\n * Determines the position to which to scroll a panel in order for an option to be into view.\n * @param optionIndex Index of the option to be scrolled into the view.\n * @param optionHeight Height of the options.\n * @param currentScrollPosition Current scroll position of the panel.\n * @param panelHeight Height of the panel.\n * @docs-private\n */\nexport function _getOptionScrollPosition(\n    optionIndex: number,\n    optionHeight: number,\n    currentScrollPosition: number,\n    panelHeight: number\n): number {\n    const optionOffset = optionIndex * optionHeight;\n\n    if (optionOffset < currentScrollPosition) { return optionOffset; }\n\n    if (optionOffset + optionHeight > currentScrollPosition + panelHeight) {\n        return Math.max(0, optionOffset - panelHeight + optionHeight);\n    }\n\n    return currentScrollPosition;\n}\n\n","import { ConnectionPositionPair } from '@ptsecurity/cdk/overlay';\n\n\nexport const POSITION_MAP: { [key: string]: ConnectionPositionPair } = {\n    top         : {\n        originX : 'center',\n        originY : 'top',\n        overlayX: 'center',\n        overlayY: 'bottom'\n    },\n    topCenter   : {\n        originX : 'center',\n        originY : 'top',\n        overlayX: 'center',\n        overlayY: 'bottom',\n        offsetX : undefined,\n        offsetY : undefined\n    },\n    topLeft     : {\n        originX : 'start',\n        originY : 'top',\n        overlayX: 'start',\n        overlayY: 'bottom',\n        offsetX : undefined,\n        offsetY : undefined\n    },\n    topRight    : {\n        originX : 'end',\n        originY : 'top',\n        overlayX: 'end',\n        overlayY: 'bottom',\n        offsetX : undefined,\n        offsetY : undefined\n    },\n    right       : {\n        originX : 'end',\n        originY : 'center',\n        overlayX: 'start',\n        overlayY: 'center'\n    },\n    rightTop    : {\n        originX : 'end',\n        originY : 'top',\n        overlayX: 'start',\n        overlayY: 'top',\n        offsetX : undefined,\n        offsetY : undefined\n    },\n    rightBottom : {\n        originX : 'end',\n        originY : 'bottom',\n        overlayX: 'start',\n        overlayY: 'bottom',\n        offsetX : undefined,\n        offsetY : undefined\n    },\n    bottom      : {\n        originX : 'center',\n        originY : 'bottom',\n        overlayX: 'center',\n        overlayY: 'top'\n    },\n    bottomCenter: {\n        originX : 'center',\n        originY : 'bottom',\n        overlayX: 'center',\n        overlayY: 'top'\n    },\n    bottomLeft  : {\n        originX : 'start',\n        originY : 'bottom',\n        overlayX: 'start',\n        overlayY: 'top'\n    },\n    bottomRight : {\n        originX : 'end',\n        originY : 'bottom',\n        overlayX: 'end',\n        overlayY: 'top'\n    },\n    left        : {\n        originX : 'start',\n        originY : 'center',\n        overlayX: 'end',\n        overlayY: 'center'\n    },\n    leftTop     : {\n        originX : 'start',\n        originY : 'top',\n        overlayX: 'end',\n        overlayY: 'top'\n    },\n    leftBottom  : {\n        originX : 'start',\n        originY : 'bottom',\n        overlayX: 'end',\n        overlayY: 'bottom'\n    }\n};\n\nexport const DEFAULT_4_POSITIONS = _objectValues([\n    POSITION_MAP.top, POSITION_MAP.right, POSITION_MAP.bottom, POSITION_MAP.left\n]);\n\nfunction arrayMap<T, S>(array: T[], iteratee: (item: T, index: number, arr: T[]) => S): S[] {\n    let index = -1;\n    const length = array == null ? 0 : array.length;\n    const result = Array(length);\n\n    while (++index < length) {\n        result[ index ] = iteratee(array[ index ], index, array);\n    }\n\n    return result;\n}\nfunction baseValues<T>(object: { [key: string]: T } | T[], props: string[]): T[] {\n    return arrayMap(props,  (key) => {\n        return object[ key ];\n    });\n}\nfunction _objectValues<T>(object: { [key: string]: T } | T[]): T[] {\n    return object == null ? [] : baseValues(object, Object.keys(object));\n}\n","export function throwMcDropdownMissingError() {\n    throw Error(`mcDropdownTriggerFor: must pass in an mc-dropdown instance.\n    Example:\n      <mc-dropdown #dropdown=\"mcDropdown\"></mc-dropdown>\n      <button [mcDropdownTriggerFor]=\"dropdown\"></button>`);\n}\n\n/**\n * Throws an exception for the case when dropdown's x-position value isn't valid.\n * In other words, it doesn't match 'before' or 'after'.\n * @docs-private\n */\nexport function throwMcDropdownInvalidPositionX() {\n    throw Error(`xPosition value must be either 'before' or after'.\n      Example: <mc-dropdown xPosition=\"before\" #dropdown=\"mcDropdown\"></mc-dropdown>`);\n}\n\n/**\n * Throws an exception for the case when dropdown's y-position value isn't valid.\n * In other words, it doesn't match 'above' or 'below'.\n * @docs-private\n */\nexport function throwMcDropdownInvalidPositionY() {\n    throw Error(`yPosition value must be either 'above' or below'.\n      Example: <mc-dropdown yPosition=\"above\" #dropdown=\"mcDropdown\"></mc-dropdown>`);\n}\n","export function getMcFormFieldMissingControlError(): Error {\n  return Error('mc-form-field must contain a McFormFieldControl.');\n}\n","export function getMcInputUnsupportedTypeError(inputType: string): Error {\n    return Error(`Input type \"${inputType}\" isn't supported by mcInput.`);\n}\n","/**\n * Returns an exception to be thrown when attempting to change a select's `multiple` option\n * after initialization.\n * @docs-private\n */\nexport function getMcSelectDynamicMultipleError(): Error {\n    return Error('Cannot change `multiple` mode of select after initialization.');\n}\n\n/**\n * Returns an exception to be thrown when attempting to assign a non-array value to a select\n * in `multiple` mode. Note that `undefined` and `null` are still valid values to allow for\n * resetting the value.\n * @docs-private\n */\nexport function getMcSelectNonArrayValueError(): Error {\n    return Error('Value must be an array in multiple-selection mode.');\n}\n\n/**\n * Returns an exception to be thrown when assigning a non-function value to the comparator\n * used to determine if a value corresponds to an option. Note that whether the function\n * actually takes two values and returns a boolean is not checked.\n */\nexport function getMcSelectNonFunctionValueError(): Error {\n    return Error('`compareWith` must be a function.');\n}\n","import { NgModule, Directive, ElementRef, QueryList } from '@angular/core';\n\n\n/**\n * Shared directive to count lines inside a text area, such as a list item.\n * Line elements can be extracted with a @ContentChildren(McLine) query, then\n * counted by checking the query list's length.\n */\n@Directive({\n    selector: '[mc-line], [mcLine]',\n    host: { class: 'mc-line' }\n})\nexport class McLine {}\n\n/**\n * Helper that takes a query list of lines and sets the correct class on the host.\n * @docs-private\n */\nexport class McLineSetter {\n    constructor(private _lines: QueryList<McLine>, private _element: ElementRef) {\n        this._setLineClass(this._lines.length);\n\n        this._lines.changes.subscribe(() => {\n            this._setLineClass(this._lines.length);\n        });\n    }\n\n    private _setLineClass(count: number): void {\n        this._resetClasses();\n        if (count === 2 || count === 3) {\n            this._setClass(`mc-${count}-line`, true);\n        } else if (count > 3) {\n            this._setClass(`mc-multi-line`, true);\n        }\n    }\n\n    private _resetClasses(): void {\n        this._setClass('mc-2-line', false);\n        this._setClass('mc-3-line', false);\n        this._setClass('mc-multi-line', false);\n    }\n\n    private _setClass(className: string, isAdd: boolean): void {\n        if (isAdd) {\n            this._element.nativeElement.classList.add(className);\n        } else {\n            this._element.nativeElement.classList.remove(className);\n        }\n    }\n}\n\n@NgModule({\n    imports: [],\n    exports: [McLine],\n    declarations: [McLine]\n})\nexport class McLineModule {}\n","import { Injectable } from '@angular/core';\nimport { FormGroupDirective, NgForm, FormControl } from '@angular/forms';\n\n\n/** Error state matcher that matches when a control is invalid and dirty. */\n@Injectable()\nexport class ShowOnDirtyErrorStateMatcher implements ErrorStateMatcher {\n    isErrorState(control: FormControl | null, form: FormGroupDirective | NgForm | null): boolean {\n        return !!(control && control.invalid && (control.dirty || (form && form.submitted)));\n    }\n}\n\n/** Provider that defines how form controls behave with regards to displaying error messages. */\n@Injectable({ providedIn: 'root' })\nexport class ErrorStateMatcher {\n    isErrorState(control: FormControl | null, form: FormGroupDirective | NgForm | null): boolean {\n        return !!(control && control.invalid && (control.touched || (form && form.submitted)));\n    }\n}\n","import { Component, ViewEncapsulation, Input, ChangeDetectionStrategy } from '@angular/core';\n\n\nexport type McPseudoCheckboxState = 'unchecked' | 'checked' | 'indeterminate';\n\n/**\n * Component that shows a simplified checkbox without including any kind of \"real\" checkbox.\n * Meant to be used when the checkbox is purely decorative and a large number of them will be\n * included, such as for the options in a multi-select. Uses no SVGs or complex animations.\n * Note that theming is meant to be handled by the parent element, e.g.\n * `mc-primary .mc-pseudo-checkbox`.\n *\n * Note that this component will be completely invisible to screen-reader users. This is *not*\n * interchangeable with `<mc-checkbox>` and should *not* be used if the user would directly\n * interact with the checkbox. The pseudo-checkbox should only be used as an implementation detail\n * of more complex components that appropriately handle selected / checked state.\n * @docs-private\n */\n@Component({\n    encapsulation: ViewEncapsulation.None,\n    preserveWhitespaces: false,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    selector: 'mc-pseudo-checkbox',\n    styleUrls: ['pseudo-checkbox.css'],\n    templateUrl: 'pseudo-checkbox.partial.html',\n    host: {\n        class: 'mc-pseudo-checkbox',\n        '[class.mc-indeterminate]': 'state === \"indeterminate\"',\n        '[class.mc-checked]': 'state === \"checked\"',\n        '[class.mc-disabled]': 'disabled'\n    }\n})\nexport class McPseudoCheckbox {\n    @Input() state: McPseudoCheckboxState = 'unchecked';\n\n    @Input() disabled: boolean = false;\n}\n","import { NgModule } from '@angular/core';\n\nimport { McPseudoCheckbox } from './pseudo-checkbox/pseudo-checkbox';\n\n\n@NgModule({\n    exports: [McPseudoCheckbox],\n    declarations: [McPseudoCheckbox]\n})\nexport class McPseudoCheckboxModule {}\n\n\nexport * from './pseudo-checkbox/pseudo-checkbox';\n","import { DOCUMENT } from '@angular/common';\nimport { Inject, Injectable } from '@angular/core';\n\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class McMeasureScrollbarService {\n\n    get scrollBarWidth(): number {\n        if (this._scrollbarWidth) {\n            return this._scrollbarWidth;\n        }\n        this.initScrollBarWidth();\n\n        return this._scrollbarWidth;\n    }\n\n    private _scrollbarWidth: number;\n    private scrollbarMeasure = {\n        position: 'absolute',\n        top: '-9999px',\n        width: '50px',\n        height: '50px',\n        overflow: 'scroll'\n    };\n\n    constructor(\n        @Inject(DOCUMENT) private document: any\n    ) {\n        this.initScrollBarWidth();\n    }\n\n    initScrollBarWidth() {\n        const scrollDiv = this.document.createElement('div');\n\n        // tslint:disable-next-line\n        for (const scrollProp in this.scrollbarMeasure) {\n            if (this.scrollbarMeasure.hasOwnProperty(scrollProp)) {\n                scrollDiv.style[scrollProp] = this.scrollbarMeasure[scrollProp];\n            }\n        }\n\n        this.document.body.appendChild(scrollDiv);\n\n        const width = scrollDiv.offsetWidth - scrollDiv.clientWidth;\n\n        this.document.body.removeChild(scrollDiv);\n        this._scrollbarWidth = width;\n    }\n}\n","import { Component, ViewEncapsulation, Input, ChangeDetectionStrategy } from '@angular/core';\n\nimport { mixinDisabled, CanDisable, CanDisableCtor } from '../common-behaviors/index';\n\n\n// Boilerplate for applying mixins to McOptgroup.\n/** @docs-private */\nexport class McOptgroupBase {}\n\nexport const _McOptgroupMixinBase: CanDisableCtor & typeof McOptgroupBase = mixinDisabled(McOptgroupBase);\n\n// Counter for unique group ids.\nlet _uniqueOptgroupIdCounter = 0;\n\n/**\n * Component that is used to group instances of `mc-option`.\n */\n@Component({\n    selector: 'mc-optgroup',\n    exportAs: 'mcOptgroup',\n    templateUrl: 'optgroup.html',\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    inputs: ['disabled'],\n    styleUrls: ['optgroup.css'],\n    host: {\n        class: 'mc-optgroup',\n        role: 'group',\n        '[class.mc-optgroup-disabled]': 'disabled',\n        '[attr.aria-disabled]': 'disabled.toString()',\n        '[attr.aria-labelledby]': '_labelId'\n    }\n})\nexport class McOptgroup extends _McOptgroupMixinBase implements CanDisable {\n    /** Label for the option group. */\n    @Input() label: string;\n\n    /** Unique id for the underlying label. */\n    _labelId: string = `mc-optgroup-label-${_uniqueOptgroupIdCounter++}`;\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { McPseudoCheckboxModule } from '../selection/index';\n\nimport { McOptgroup } from './optgroup';\nimport { McOption } from './option';\n\n\n@NgModule({\n    imports: [CommonModule, McPseudoCheckboxModule],\n    exports: [McOption, McOptgroup],\n    declarations: [McOption, McOptgroup]\n})\nexport class McOptionModule {}\n\n\nexport * from './option';\nexport * from './optgroup';\n","import { InjectionToken } from '@angular/core';\n\n\n/** InjectionToken that can be used to specify the global label options. */\nexport const MC_LABEL_GLOBAL_OPTIONS =\n    new InjectionToken<LabelOptions>('mc-label-global-options');\n\n/** Type for the available floatLabel values. */\nexport type FloatLabelType = 'always' | 'never' | 'auto';\n\n/** Configurable options for floating labels. */\nexport interface LabelOptions {\n    /**\n     * Whether the label should float `always`, `never`, or `auto` (only when necessary).\n     * Default behavior is assumed to be `auto`.\n     */\n    float?: FloatLabelType;\n}\n","import {\n    animate,\n    state,\n    style,\n    transition,\n    trigger,\n    AnimationTriggerMetadata,\n} from '@angular/animations';\n\n\nexport const fadeAnimation: AnimationTriggerMetadata =  trigger('fadeAnimation', [\n    state('void', style({ opacity: 0 })),\n    state('true', style({ opacity: 1 })),\n    state('false', style({ opacity: 0 })),\n    transition('* => true', animate('150ms cubic-bezier(0.0, 0.0, 0.2, 1)')),\n    transition('* => void', animate('150ms cubic-bezier(0.4, 0.0, 1, 1)')),\n]);\n","import {\n    Attribute,\n    ChangeDetectionStrategy,\n    Component,\n    Directive,\n    ElementRef,\n    ViewEncapsulation\n} from '@angular/core';\n\nimport { mixinColor, CanColor, CanColorCtor, ThemePalette } from '@ptsecurity/mosaic/core';\n\n\n@Directive({\n    selector: '[mc-icon]',\n    host: { class: 'mc mc-icon' }\n})\nexport class McIconCSSStyler {}\n\n\nexport class McIconBase {\n    constructor(public _elementRef: ElementRef) {}\n}\n\nexport const _McIconMixinBase: CanColorCtor & typeof McIconBase = mixinColor(McIconBase, ThemePalette.Empty);\n\n\n@Component({\n    selector: `[mc-icon]`,\n    template: '<ng-content></ng-content>',\n    styleUrls: ['./icon.css'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n    inputs: ['color']\n})\nexport class McIcon extends _McIconMixinBase implements CanColor {\n    constructor(elementRef: ElementRef, @Attribute('mc-icon') iconName: string) {\n        super(elementRef);\n\n        elementRef.nativeElement.classList.add(iconName);\n    }\n\n    _getHostElement() {\n        return this._elementRef.nativeElement;\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { A11yModule } from '@ptsecurity/cdk/a11y';\nimport { PlatformModule } from '@ptsecurity/cdk/platform';\n\nimport {\n    McIcon,\n    McIconCSSStyler\n} from './icon.component';\n\n\n@NgModule({\n    imports: [\n        CommonModule,\n        A11yModule,\n        PlatformModule\n    ],\n    exports: [\n        McIcon,\n        McIconCSSStyler\n    ],\n    declarations: [\n        McIcon,\n        McIconCSSStyler\n    ]\n})\nexport class McIconModule {}\n"],"names":["set","value","this","_placement","_positions","unshift","POSITION_MAP","mcPlacement","McToolTipComponent","prototype","show","_this","hideTId","clearTimeout","isContentEmpty","_closeOnInteraction","showTId","setTimeout","mcVisible","mcVisibleChange","emit","_markForCheck","mcMouseEnterDelay","hide","_onHide","next","mcMouseLeaveDelay","setClassMap","_classMap","_a","_prefix","isTitleString","mcTitle","afterHidden","asObservable","cdr","markForCheck","_handleBodyInteraction","tslib_1.__decorate","Output","tslib_1.__metadata","EventEmitter","Input","Component","selector","animations","fadeAnimation","template","preserveWhitespaces","styles","encapsulation","ViewEncapsulation","None","changeDetection","ChangeDetectionStrategy","OnPush","host","(body:click)","ChangeDetectorRef","MC_TOOLTIP_SCROLL_STRATEGY","InjectionToken","MC_TOOLTIP_SCROLL_STRATEGY_FACTORY_PROVIDER","provide","deps","Overlay","useFactory","MC_TOOLTIP_SCROLL_STRATEGY_FACTORY","McTooltipDirective","_overlay","elementRef","_ngZone","_scrollDispatcher","hostView","_scrollStrategy","_dir","isTooltipOpen","isDynamicTooltip","parentDisabled","_disabled","_trigger","$unsubscribe","Subject","manualListeners","Map","_destroyed","availablePositions","Object","defineProperty","get","_title","title","updateCompValue","coerceBooleanProperty","_mouseEnterDelay","_mouseLeaveDelay","_visible","_createOverlay","_overlayRef","strategy","position","flexibleConnectedTo","withTransformOriginOn","withFlexibleDimensions","withViewportMargin","withPositions","DEFAULT_4_POSITIONS","slice","scrollableAncestors","getAncestorScrollContainers","withScrollableContainers","positionChanges","pipe","takeUntil","subscribe","change","tooltip","onPositionChange","scrollableViewProperties","isOverlayClipped","run","create","direction","positionStrategy","panelClass","scrollStrategy","_updatePosition","detachments","_detach","hasAttached","detach","$event","updatedPlacement","keys","some","key","connectionPair","originX","originY","overlayX","overlayY","handlePositioningUpdate","pos","overlayElement","clientHeight","element","nativeElement","currentContainer","style","top","parseInt","split","ngOnInit","mcTrigger","forEach","listener","event","addEventListener","ngOnDestroy","dispose","removeEventListener","clear","complete","handleKeydown","e","keyCode","ESCAPE","handleTouchend","getConfig","origin","_getOrigin","overlay","_getOverlayPosition","tslib_1.__assign","main","fallback","originPosition","isLtr","getMcTooltipInvalidPositionError","_invertPosition","x","y","overlayPosition","newX","newY","disabled","overlayRef","_portal","ComponentPortal","attach","instance","property","distinctUntilChanged","data","HostBinding","Directive","(keydown)","(touchend)","tslib_1.__param","Inject","Optional","ElementRef","NgZone","ScrollDispatcher","ViewContainerRef","Directionality","McToolTipModule","NgModule","declarations","exports","imports","BrowserAnimationsModule","CommonModule","OverlayModule","providers","entryComponents","VERSION","Version","SELECT_PANEL_PADDING_X","McSelect","empty","_multiple","selectedOptions","_selectionModel","selected","_isRtl","reverse","isEmpty","_handleKeydown","panelOpen","_handleOpenKeydown","_handleClosedKeydown","_onFadeInDone","_panelDoneAnimating","_changeDetectorRef","_onFocus","_focused","stateChanges","_onBlur","_onTouched","_onAttached","overlayDir","positionChange","take","detectChanges","_calculateOverlayOffsetX","panel","scrollTop","_scrollTop","_getPanelTheme","_parentFormField","color","focus","_elementRef","_calculateOverlayScroll","selectedIndex","scrollBuffer","maxScroll","itemHeight","_getItemHeight","optionOffsetFromScrollTop","halfOptionHeight","optimalScrollPosition","Math","min","max","onContainerClick","open","onRemoveMatcherItem","option","stopPropagation","deselect","_panelOpen","_calculateHiddenItems","visibleItems","totalItemsWidth","_getTotalItemsWidthInMatcher","totalVisibleItemsWidth","tags","tag","offsetTop","offsetHeight","getBoundingClientRect","width","hiddenItems","length","itemsCounter","trigger","querySelector","matcherList","itemsCounterShowed","matcherListWidth","matcherWidth","triggerClone","cloneNode","remove","_renderer","setStyle","appendChild","querySelectorAll","item","isArrowKey","DOWN_ARROW","UP_ARROW","LEFT_ARROW","RIGHT_ARROW","ENTER","SPACE","multiple","altKey","preventDefault","_keyManager","onKeydown","manager","HOME","END","setFirstItemActive","setLastItemActive","close","activeItem","A","ctrlKey","hasDeselectedOptions_1","options","select","previouslyFocusedIndex","activeItemIndex","shiftKey","_selectViaInteraction","_initializeSelection","Promise","resolve","then","_setSelectionByValue","ngControl","_value","Array","isArray","getMcSelectNonArrayValueError","currentValue","_selectValue","_sortValues","correspondingOption","setActiveItem","find","_compareWith","error","isDevMode","console","warn","_initKeyManager","ActiveDescendantKeyManager","withTypeAhead","withVerticalOrientation","withHorizontalOrientation","tabOut","_destroy","_scrollActiveOptionIntoView","_resetOptions","changedOrDestroyed","merge","changes","optionSelectionChanges","_onSelect","source","isUserInput","apply","map","_stateChanges","_setOptionIds","wasSelected","isSelected","_propagateChanges","options_1","toArray","sort","a","b","sortComparator","indexOf","fallbackValue","valueToEmit","valueChange","_onChange","selectionChange","McSelectChange","_optionIds","id","join","_highlightCorrectOption","activeOptionIndex","labelCount","_countGroupLabelsBeforeOption","optionGroups","_getOptionScrollPosition","_getOptionIndex","reduce","result","current","index","undefined","_calculateOverlayPosition","items","_getItemCount","panelHeight","scrollContainerHeight","selectedOptionOffset","_offsetY","_calculateOverlayOffsetY","_checkOverlayWithinViewport","offsetX","overlayRect","viewportSize","_viewportRuler","getViewportSize","isRtl","first","group","leftOverflow","left","rightOverflow","right","round","updatePosition","topSpaceAvailable","_triggerRect","bottomSpaceAvailable","height","bottom","panelHeightTop","abs","totalPanelHeight","panelHeightBottom","_adjustPanelUp","_adjustPanelDown","_transformOrigin","_getOriginBasedOnOption","distanceBelowViewport","distanceAboveViewport","optionHeightAdjustment","ViewChild","ViewChildren","McTag","QueryList","CdkConnectedOverlay","ContentChildren","McOption","descendants","McOptgroup","ContentChild","McSelectTrigger","ErrorStateMatcher","Observable","McSelect_1","exportAs","inputs","[attr.id]","[attr.tabindex]","class","[class.mc-disabled]","[class.mc-select-invalid]","[class.mc-select-required]","(focus)","(blur)","(window:resize)","mcSelectAnimations","transformPanel","fadeInContent","McFormFieldControl","useExisting","MC_OPTION_PARENT_COMPONENT","Self","Attribute","MC_SELECT_SCROLL_STRATEGY","ViewportRuler","Renderer2","NgForm","FormGroupDirective","McFormField","NgControl","String","_McSelectMixinBase","McSelectModule","McOptionModule","McIconModule","McTagModule","McFormFieldModule","MC_SELECT_SCROLL_STRATEGY_PROVIDER","McSplitterComponent","ngZone","renderer","areas","_gutterSize","isDragging","areaPositionDivider","listeners","_direction","gutterSize","size","coerceNumberProperty","addArea","area","order","getSize","setOrder","push","initialSize","isVertical","onMouseDown","leftAreaIndex","rightAreaIndex","leftArea","rightArea","startPoint","screenX","screenY","disableFlex","setSize","runOutsideAngular","listen","onMouseUp","onMouseMove","removeArea","indexToRemove","splice","endPoint","offset","newLeftAreaSize","newRightAreaSize","minLeftAreaSize","getMinSize","minRightAreaSize","rightAreaOffset","unsubscribe","pop","McGutterDirective","_order","_size","getCursor","getState","coerceCssPixelValue","setAttr","state","Error","attribute","setAttribute","McSplitterAreaDirective","splitter","removeStyle","sz","getSizeProperty","getOffsetSizeProperty","getComputedStyle","parseFloat","getMinSizeProperty","McSplitterModule","nextUniqueId","McToggleBase","_McToggleMixinBase","mixinTabIndex","mixinColor","mixinDisabled","ThemePalette","Primary","McToggleChange","McToggleComponent","_super","_focusMonitor","tabIndex","call","labelPosition","ariaLabel","ariaLabelledby","_uniqueId","name","_checked","_onTouchedCallback","_onChangeCallback","_","monitor","tslib_1.__extends","McToggleComponent_1","stopMonitoring","focusVia","_inputElement","_getAriaChecked","checked","_onInteractionEvent","_onLabelTextChange","_onInputClick","_updateModelValue","_emitChangeEvent","writeValue","registerOnChange","fn","registerOnTouched","setDisabledState","isDisabled","NG_VALUE_ACCESSOR","forwardRef","multi","[id]","[class.mc-toggle_off]","transition","animate","FocusMonitor","McToggleModule","A11yModule","McCommonModule","visibleSource","BehaviorSubject","$visible","TemplateRef","visible","PAGE_DOWN","setNextPageItemActive","McTreeSelection","ngAfterContentInit","FocusKeyManager","updateScrollSize","withScrollSize","floor","_getHeight","setFocusedOption","updateActiveItem","withShift","previousIndex_1","previousActiveItemIndex","activeIndex_1","setSelected","withCtrl","_canDeselectLast","toggle","autoSelect","_emitNavigationEvent","toggleFocusedOption","focusedIndex","_isValidIndex","focusedOption","renderNodeChanges","dataDiffer","viewContainer","parentData","_dataDiffer","_nodeOutlet","arrayOfInstances","_embeddedViews","view","viewDef","def","nodes","node","nodeMatchedQueries","matchedQueryIds","nodeData","nodeIndex","reset","notifyOnChanges","getClientRects","navigationChange","McTreeNavigationChange","noUnselect","CdkTreeNodeOutlet","McTreeNodeOption","McTreeSelection_1","[tabIndex]","role","CdkTree","IterableDiffers","_McTreeSelectionBase","MC_TREE_DIRECTIVES","McTreeNodeDef","McTreeNodePadding","McTreeModule","CdkTreeModule","McTreeFlattener","transformFunction","getLevel","isExpandable","getChildren","_flattenNode","level","resultNodes","parentMap","flatNode","children","child","childParentMap","flattenNodes","structuredData","expandFlattenedNodes","treeControl","results","currentExpand","expand","i","isExpanded","McTreeFlatDataSource","treeFlattener","initialData","_flattenedData","_expandedData","_data","dataNodes","connect","collectionViewer","viewChange","expansionModel","onChange","disconnect","DataSource","McTreeNestedDataSource","arguments","McTagBase","_McTagMixinBase","_addClassModificatorForIcons","icons","contentChildren","iconElement","previousElementSibling","nextElementSibling","nextSibling","classList","add","previousSibling","firstIconElement","secondIconElement","McIcon","PlatformModule","MC_TEXTAREA_VALUE_ACCESSOR","McTextareaBase","_defaultErrorStateMatcher","_parentForm","_parentFormGroup","McTextareaMixinBase","mixinErrorState","McTextarea","inputValueAccessor","canGrow","focused","controlType","uid","_required","lineHeight","freeRowsHeight","minHeight","valueAccessor","previousNativeValue","growObserver","fromEvent","growSubscription","grow","bind","McTextarea_1","_id","paddingTop","paddingBottom","ngOnChanges","ngDoCheck","updateErrorState","dirtyCheckNativeValue","textarea","outerHeight","window","diff","scrollHeight","focusChanged","isFocused","isBadInput","newValue","validity","badInput","getGrowHeight","toString","[class.mc-textarea-resizable]","[attr.placeholder]","[disabled]","[required]","McTextareaModule","FormsModule","TimeParts","TimeFormats","TIMEFORMAT_PLACEHOLDERS","HHmmss","HHmm","DEFAULT_TIME_FORMAT","HOURS_MINUTES_SECONDS_REGEXP","RegExp","HOURS_MINUTES_REGEXP","HOURS_ONLY_REGEXP","uniqueComponentIdSuffix","validatorOnChange","noop","validator","MC_INPUT_VALUE_ACCESSOR","McTimepickerBase","McTimepickerMixinBase","ɵ1","validate","c","registerOnValidatorChange","McTimepicker","_minTime","_maxTime","placeholder","Validators","compose","parseValidator","minTimeValidator","maxTimeValidator","McTimepicker_1","applyInputChanges","_timeFormat","formatValue","timeFormatKey","minValue","minDateTime","getDateFromTimeString","maxValue","maxDateTime","onTouched","onBlur","onPaste","clipboardUserInput","clipboardData","getData","onInput","initialCursorStart","selectionStart","initialCursorEnd","selectionEnd","isAutocompleteTriggered","getParsedTimeParts","hoursOnly","hoursAndMinutes","hoursAndMinutesAndSeconds","doTimestringReformat","errors","createSelectionOfTimeComponentInInput","setProperty","getTimeStringFromDate","timeFormat","onKeyDown","getKeyCode","upDownTimeByArrowKeys","switchSelectionBetweenTimeparts","applyParams","changedTime","timeToApply","currentDateTimeInput","control","updateValueAndValidity","cursorPos","modifiedTimePart","getTimeEditMetrics","incrementTime","decrementTime","getCursorPositionOfPrevTimePartStart","getCursorPositionOfNextTimePartStart","code","newEditParams","cursorStartPosition","cursorEndPosition","dateVal","whatToIncrement","seconds","getTimeDigitsFromDate","hours","minutes","getDateFromTimeDigits","whatToDecrement","timeString","timeDevider","nextDividerPos","cursorPosition","minutesIndex","hoursIndex","secondsIndex","tempVal","getNumberWithLeadingZero","getHours","getMinutes","getSeconds","match","trim","Number","resultDate","Date","isNaN","getTime","digit","mcTimepickerParse","text","isTimeLowerThenMin","mcTimepickerLowerThenMintime","isTimeGreaterThenMax","mcTimepickerHigherThenMaxtime","timeToCompare","[attr.time-format]","[attr.min-time]","[attr.max-time]","[attr.value]","(input)","(paste)","NG_VALIDATORS","useValue","McTimepickerModule","transform","minWidth","opacity","query","animateChild","MC_SELECT_SCROLL_STRATEGY_PROVIDER_FACTORY","McSelectBase","_scrollStrategyFactory","_triggerFontSize","_panelDoneAnimatingStream","defer","onSelectionChange","onStable","switchMap","openedChange","_openedStream","filter","o","_closedStream","oneMoreText","_uid","o1","o2","_placeholder","getMcSelectDynamicMultipleError","getMcSelectNonFunctionValueError","SelectionModel","added","removed","startWith","ngAfterViewInit","fontSize","viewValue","McModalService","mcOnCancel","mcCloseByESC","mcWidth","ModalBuilderForService","getInstance","confirm","confirmType","mcOnOk","mcModalType","mcClassName","mcMaskClosable","success","simpleConfirm","delete","mcCancelText","Injectable","McModalControlService","McModalModule","McButtonModule","McModalComponent","CssUnitPipe","MC_NAVBAR_CONTAINER","MC_NAVBAR_ITEM","MC_NAVBAR_BRAND","MC_NAVBAR_TITLE","McNavbarLogo","McNavbarBrand","McNavbarTitle","McNavbarItemBase","_McNavbarMixinBase","McNavbarItem","_platform","_cdRef","dropdownItems","isCollapsed","_subscription","Subscription","encodeURI","dropdownContent","denyClickIfDisabled","_focusMonitor$","hasDropdownContent","listenClickOutside","startListenFocusDropdownItems","stopListenFocusDropdownItems","isActiveDropdownLink","link","isBrowser","location","href","handleClickByItem","toggleDropdown","isNavbarItem","target","contains","handleClickByDropdownItem","forceCloseDropdown","_dropdownElements","el","events","eventListeners","hasAttribute","stopImmediatePropagation","read","[attr.disabled]","Platform","McNavbarContainer","CollapsibleItem","_collapsed","processCollapsed","collapsed","updateCollapsedClass","CachedItemWidth","itemsForCollapse","_collapsedItemsWidth","calculateAndCacheCollapsedItemsWidth","updateTitle","acc","getTitle","computedTitle","getAttribute","decodeURI","innerText","removeAttribute","McNavbar","forceRecalculateItemsWidth","resizeDebounceInterval","firstLevelElement","secondLevelElements","resizeObserver","debounceTime","_resizeSubscription","updateCollapsed","_itemsWidths","calculateAndCacheItemsWidth","_totalItemsWidths","calculateAndCacheTotalItemsWidth","collapseDelta","maxAllowedWidth","itemsWidths","canCollapse","collapsedItemsWidth","getOuterElementWidth","getPropertyValue","allItemsSelector","allItems","from","getItemsForCollapse","McNavbarModule","idIterator","McProgressBarBase","_McProgressBarMixinBase","McProgressBar","mode","McProgressBarModule","McProgressSpinnerBase","_McProgressSpinnerMixinBase","McProgressSpinner","percentage","McProgressSpinnerModule","McRadioChange","McRadioGroupBase","_McRadioGroupMixinBase","MC_RADIO_GROUP_CONTROL_VALUE_ACCESSOR","McRadioGroup","_changeDetector","_name","_selected","_isInitialized","_labelPosition","controlValueAccessorChangeFn","updateRadioButtonNames","v","markRadiosForCheck","updateSelectedRadioFromValue","checkSelectedRadioButton","toBoolean","touch","emitChangeEvent","_radios","radio","isAlreadySelected","McRadioButton","McRadioButtonBase","_McRadioButtonMixinBase","radioGroup","_radioDispatcher","removeUniqueSelectionListener","newCheckedState","notify","newDisabledState","required","onInputClick","onInputChange","groupValueChanged","[class.mc-checked]","UniqueSelectionDispatcher","McRadioModule","McTreeNodeDef_1","CdkTreeNodeDef","_baseLeftPadding","_iconWidth","_indent","McTreeNodePadding_1","_withIcon","_paddingIndent","nodeLevel","_treeNode","_tree","_level","leftPadding","_setPadding","CdkTreeNodePadding","treeSelection","_hasFocus","McTreeNodeOption_1","_handleFocus","_handleBlur","_handleClick","tabindex","[class.mc-selected]","[class.mc-focused]","[attr.aria-expanded]","[attr.aria-level]","(click)","CdkTreeNode","McTreeSelectionChange","_differs","rawValue","log","_onKeyDown","collapse","PAGE_UP","setPreviousPageItemActive","MC_SELECTION_LIST_VALUE_ACCESSOR","McListSelection","_McListSelectionMixinBase","McListBase","McList","McListSubheaderCssStyler","McListItemBase","McListItem","_element","_lineSetter","McLineSetter","_lines","_getHostElement","McLine","McListModule","McLineModule","McListOption","McLinkBase","_McLinkBase","McLink","McLinkModule","parentService","rootOpenModals","rootAfterAllClose","rootRegisteredMetaMap","afterAllClose","openModals","registeredMetaMap","registerModal","modalRef","hasRegistered","afterOpenSubscription","afterOpen","afterCloseSubscription","afterClose","removeOpenModal","has","closeAll","SkipSelf","McModalRef","ModalUtil","document","lastPosition","listenDocumentClick","getLastClickPosition","clientX","clientY","ModalUtil$1","cfr","mcMeasureScrollbarService","modalControl","changeDetector","_mcVisible","mcZIndex","_mcClosable","_mcMask","_mcMaskClosable","mcAfterOpen","mcAfterClose","mcOkType","_mcOkLoading","_mcCancelLoading","transformOrigin","mcGetContainer","mcOkText","animationState","isComponent","mcContent","createDynamicComponent","isModalButtons","mcFooter","formatModalButtons","container","HTMLElement","OverlayRef","handleVisibleStateChange","firstChange","contentComponentRef","bodyContainer","insert","autoFocusButtonOk","changeVisibleFromInside","destroy","triggerOk","onClickOkCancel","triggerCancel","getContentComponentRef","getContentComponent","getElement","onClickMask","mcMask","isModalType","type","onClickCloseBtn","ok","cancel","loadingKey","caseClose_1","doClose","isPromise","handleThen","catch","isNonEmptyString","isTemplateRef","Type","animation","closeResult","changeBodyOverflow","animateTo","getButtonCallableProp","prop","args","onButtonClick","button","loading","changeAnimationState","maskAnimationClassMap","modalAnimationClassMap","_b","changeDetectorRef","isVisible","updateTransformOrigin","buttons","autoLoading","component","factory","resolveComponentFactory","childInjector","Injector","parent","parentInjector","mcComponentParams","assign","modalElement","modalContainer","offsetLeft","plusNum","body","scrollBarWidth","DOCUMENT","ComponentFactoryResolver","McMeasureScrollbarService","defaultUnit","formatted","Pipe","createModal","changeProps","destroyModal","keydownEvents","McFormFieldBase","_McFormFieldMixinBase","_labelId","hovered","_validateControlChild","_control","_numberControl","hasStepper","_stepper","stepUp","onStepUp","stepDown","onStepDown","valueChanges","EMPTY","ngAfterContentChecked","clearValue","hasCleaner","onHoverChanged","isHovered","step","_shouldForward","getMcFormFieldMissingControlError","_hint","_suffix","_cleaner","McFormFieldNumberControl","McStepper","McHint","McSuffix","McPrefix","McCleaner","[class.mc-form-field_invalid]","[class.mc-form-field_has-prefix]","[class.mc-form-field_has-suffix]","[class.mc-form-field_has-cleaner]","[class.mc-form-field_has-stepper]","[class.ng-untouched]","[class.ng-touched]","[class.ng-pristine]","[class.ng-dirty]","[class.ng-valid]","[class.ng-invalid]","[class.ng-pending]","(mouseenter)","(mouseleave)","McFormFieldWithoutBorders","res","MC_INPUT_INVALID_TYPES","BIG_STEP","SMALL_STEP","McInputBase","_McInputMixinBase","McNumberInput","_model","bigStep","isDigit","Infinity","_host","self","getPrototypeOf","normalizeSplitter","McNumberInput_1","_focusChanged","minuses","NUMPAD_MINUS","DASH","FF_MINUS","serviceKeys","DELETE","BACKSPACE","TAB","arrows","allowedKeys","concat","isIEPeriod","isNotIEPeriod","metaKey","C","V","X","F1","F12","EDGE","TRIDENT","ZERO","NINE","NUMPAD_ZERO","NUMPAD_NINE","valueAsNumber","update","replace","isFloat","isInt","test","NgModel","McInput","_type","_neverEmptyInputTypes","t","getSupportedInputTypes","_inputValueAccessor","_previousNativeValue","McInput_1","_validateType","_dirtyCheckNativeValue","_onInput","_isNeverEmpty","_isBadInput","getMcInputUnsupportedTypeError","McInputMono","MIN_VALIDATOR","MinValidator","_createValidator","_validator","[attr.min]","MAX_VALIDATOR","MaxValidator","[attr.max]","McInputModule","McContentComponent","[class.mc-layout-content]","McFooterComponent","[class.mc-layout-footer]","McHeaderComponent","[class.mc-layout-header]","McLayoutComponent","hasSidebar","[class.mc-layout]","[class.mc-layout-has-sidebar]","McSidebarComponent","mcLayoutComponent","_mcWidth","mcCollapsedWidth","mcCollapsedChange","collapsible","mcCollapsed","[class.mc-layout-sidebar]","[class.mc-layout-sidebar-collapsed]","[style.flex]","[style.max-width.px]","[style.min-width.px]","[style.width.px]","Host","McLayoutModule","listSelection","checkboxPosition","_reportValueChange","wasSelected_1","_removeOptionFromList","getLabel","_text","textContent","McListSelectionChange","McListSelectionBase","horizontal","_modelChanges","_tempValues","_setOptionsFromValues","_i","_c","selectAll","deselectAll","values","getSelectedOptionValues","listOption","optionIndex","setPreviousItemActive","setNextItemActive","_getOptionByValue","Boolean","McIconButton","McButton","McAnchor","McButtonCSSStyler","McIconButtonCSSStyler","McCard","readonly","selectedChange","_tabIndex","hostElement","onClick","[class.mc-card_readonly]","[class.mc-card_selected]","McCardModule","MC_CHECKBOX_CLICK_ACTION","MC_CHECKBOX_CONTROL_VALUE_ACCESSOR","McCheckbox","TransitionCheckState","McCheckboxChange","McCheckboxBase","_McCheckboxMixinBase","_clickAction","indeterminateChange","_currentAnimationClass","_currentCheckState","Init","_controlValueAccessorChangeFn","_indeterminate","focusOrigin","_onInputFocusChange","changed","_transitionCheckState","Indeterminate","Checked","Unchecked","indeterminate","newState","oldState","[class.mc-indeterminate]","[class.mc-checkbox-label-before]","MC_CHECKBOX_REQUIRED_VALIDATOR","McCheckboxRequiredValidator","[attr.required]","CheckboxRequiredValidator","McCheckboxModule","McDivider","_vertical","_inset","[attr.aria-orientation]","[class.mc-divider-vertical]","[class.mc-divider-inset]","McDividerModule","McDropdownContent","_template","_componentFactoryResolver","_appRef","_injector","_viewContainerRef","_document","_attached","context","TemplatePortal","_outlet","DomPortalOutlet","createElement","parentNode","insertBefore","outletElement","isAttached","ApplicationRef","MC_DROPDOWN_PANEL","McDropdownItemBase","_McDropdownItemMixinBase","McDropdownItem","_parentDropdownPanel","addItem","removeItem","_getTabIndex","_checkDisabled","textNodeType","TEXT_NODE","output","childNodes","length_1","nodeType","mcDropdownAnimations","transformDropdown","fadeInItems","MC_DROPDOWN_DEFAULT_OPTIONS","providedIn","MC_DROPDOWN_DEFAULT_OPTIONS_FACTORY","McDropdown","_defaultOptions","_classList","_panelAnimationState","_animationDone","backdropClass","closed","_xPosition","xPosition","_yPosition","yPosition","_items","_itemChanges","_tabSubscription","_overlapTrigger","overlapTrigger","_hasBackdrop","hasBackdrop","McDropdown_1","throwMcDropdownInvalidPositionX","setPositionClasses","throwMcDropdownInvalidPositionY","classes","obj","className","withWrap","setFocusOrigin","focusFirstItem","lazyContent","resetActiveItem","posX","posY","_startAnimation","_resetAnimation","_onAnimationDone","_isAnimating","toState","MC_DROPDOWN_SCROLL_STRATEGY","MC_DROPDOWN_SCROLL_STRATEGY_FACTORY_PROVIDER","MC_DROPDOWN_SCROLL_STRATEGY_FACTORY","McDropdownTrigger","_openedBy","dropdownOpened","dropdownClosed","_opened","_closeSubscription","_hoverSubscription","dropdown","_check","_cleanUpSubscriptions","_setPosition","_closingActions","_init","opened","_reset","dir","_setIsOpened","isOpen","throwMcDropdownMissingError","templateRef","config","_getOverlayConfig","_subscribeToPositions","OverlayConfig","withLockedPosition","originFallbackX","overlayFallbackY","originFallbackY","_d","overlayFallbackX","offsetY","backdrop","backdropClick","(touchstart)","McDropdownModule","__extends","d","__","constructor","extendStatics","__decorate","decorators","desc","r","getOwnPropertyDescriptor","Reflect","decorate","__param","paramIndex","decorator","__metadata","metadataKey","metadataValue","metadata","isBoolean","val","MC_SANITY_CHECKS_FACTORY","base","class_1","defaultColor","Default","_color","colorPalette","defaultTabIndex","errorState","matcher","errorStateMatcher","isErrorState","optionsArray","groups","groupCounter","optionHeight","currentScrollPosition","optionOffset","arrayMap","array","iteratee","baseValues","object","props","scrollStrategies","reposition","inputType","sanitizeNumber","isFinite","getPrecision","arr","pow","value1","value2","precision","scrollThrottle","setPrototypeOf","__proto__","p","hasOwnProperty","__assign","s","n","MC_SANITY_CHECKS","_sanityChecksEnabled","_hasDoneGlobalChecks","_window","_areChecksEnabled","_checkDoctypeIsDefined","_checkThemeIsPresent","_isTestEnv","doctype","testElement","computedStyle","display","removeChild","BidiModule","_setLineClass","count","_resetClasses","_setClass","isAdd","ShowOnDirtyErrorStateMatcher","form","invalid","dirty","submitted","touched","McPseudoCheckbox","McPseudoCheckboxModule","scrollbarMeasure","overflow","initScrollBarWidth","_scrollbarWidth","scrollDiv","scrollProp","offsetWidth","clientWidth","McOptgroupBase","_McOptgroupMixinBase","_uniqueOptgroupIdCounter","[class.mc-optgroup-disabled]","[attr.aria-disabled]","[attr.aria-labelledby]","_uniqueIdCounter","McOptionSelectionChange","_parent","_active","_mostRecentViewValue","disableRipple","_emitSelectionChangeEvent","setActiveStyles","setInactiveStyles","ngAfterViewChecked","[class.mc-option-multiple]","[class.mc-active]","MC_LABEL_GLOBAL_OPTIONS","topCenter","topLeft","topRight","rightTop","rightBottom","bottomCenter","bottomLeft","bottomRight","leftTop","leftBottom","McIconCSSStyler","McIconBase","_McIconMixinBase","Empty","iconName","queries","McButtonBase","_McButtonMixinBase","focusMonitor","_haltDisabledEvents"],"mappings":"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"}