{"version":3,"file":"mosaic.umd.min.js","sources":["../../src/lib/tooltip/tooltip.component.ts","../../src/lib/tooltip/tooltip.module.ts","../../src/lib/version.ts","../../src/lib/core/select/events.ts","../../src/lib/core/select/constants.ts","../../src/lib/select/select.component.ts","../../src/lib/timepicker/timepicker.constants.ts","../../src/lib/sidepanel/sidepanel-container.component.ts","../../src/lib/sidepanel/sidepanel-ref.ts","../../src/lib/sidepanel/sidepanel.service.ts","../../src/lib/sidepanel/sidepanel-directives.ts","../../src/lib/sidepanel/sidepanel.module.ts","../../src/lib/splitter/splitter.component.ts","../../src/lib/splitter/splitter.module.ts","../../src/lib/toggle/toggle.component.ts","../../src/lib/toggle/toggle.module.ts","../../src/lib/tree-select/tree-select.component.ts","../../src/lib/tree-select/tree-select.module.ts","../../src/lib/textarea/textarea.component.ts","../../src/lib/textarea/textarea.module.ts","../../src/lib/timepicker/timepicker.ts","../../src/lib/timepicker/timepicker.module.ts","../../src/lib/sidepanel/sidepanel-config.ts","../../src/lib/sidepanel/sidepanel-animations.ts","../../src/lib/select/select.module.ts","../../src/lib/tabs/tab-body.ts","../../src/lib/tabs/tab-label-wrapper.ts","../../src/lib/tabs/tab-header.ts","../../src/lib/tabs/tab-group.ts","../../src/lib/tabs/tab-nav-bar/tab-nav-bar.ts","../../src/lib/tabs/tabs.module.ts","../../src/lib/tag/tag.component.ts","../../src/lib/tag/tag.module.ts","../../src/lib/navbar/navbar.component.ts","../../src/lib/navbar/navbar.module.ts","../../src/lib/progress-bar/progress-bar.component.ts","../../src/lib/progress-bar/progress-bar.module.ts","../../src/lib/progress-spinner/progress-spinner.component.ts","../../src/lib/progress-spinner/progress-spinner.module.ts","../../src/lib/radio/radio.component.ts","../../src/lib/radio/radio.module.ts","../../src/lib/tree/node.ts","../../src/lib/tree/padding.ts","../../src/lib/tree/toggle.ts","../../src/lib/tree/tree-option.ts","../../src/lib/tree/tree-selection.ts","../../src/lib/tree/tree.module.ts","../../src/lib/tree/data-source/flat-data-source.ts","../../src/lib/tree/data-source/nested-data-source.ts","../../src/lib/tabs/tab-content.ts","../../src/lib/tabs/tab-label.ts","../../src/lib/tabs/tab.ts","../../src/lib/tabs/tabs-animations.ts","../../src/lib/list/list.component.ts","../../src/lib/list/list.module.ts","../../src/lib/link/link.component.ts","../../src/lib/link/link.module.ts","../../src/lib/modal/modal-control.service.ts","../../src/lib/modal/modal-ref.class.ts","../../src/lib/modal/modal-util.ts","../../src/lib/modal/modal.component.ts","../../src/lib/modal/css-unit.pipe.ts","../../src/lib/modal/modal.service.ts","../../src/lib/modal/modal.module.ts","../../src/lib/dropdown/dropdown-item.ts","../../src/lib/dropdown/dropdown-animations.ts","../../src/lib/dropdown/dropdown.component.ts","../../src/lib/dropdown/dropdown-trigger.ts","../../src/lib/dropdown/dropdown.module.ts","../../src/lib/layout/content.component.ts","../../src/lib/layout/footer.component.ts","../../src/lib/layout/header.component.ts","../../src/lib/layout/layout.component.ts","../../src/lib/layout/sidebar.component.ts","../../src/lib/layout/layout.module.ts","../../src/lib/list/list-selection.component.ts","../../src/lib/datepicker/year-view.ts","../../src/lib/datepicker/calendar.ts","../../src/lib/datepicker/multi-year-view.ts","../../src/lib/datepicker/datepicker-animations.ts","../../src/lib/datepicker/datepicker.ts","../../src/lib/datepicker/datepicker-input.ts","../../src/lib/datepicker/datepicker-toggle.ts","../../src/lib/datepicker/datepicker-module.ts","../../src/lib/divider/divider.component.ts","../../src/lib/divider/divider.module.ts","../../src/lib/dropdown/dropdown-content.ts","../../src/lib/dropdown/dropdown-panel.ts","../../src/lib/form-field/form-field.module.ts","../../src/lib/input/input-value-accessor.ts","../../src/lib/input/stepperUtils.ts","../../src/lib/input/input.ts","../../src/lib/input/input-number-validators.ts","../../src/lib/input/input.module.ts","../../src/lib/datepicker/datepicker-intl.ts","../../src/lib/datepicker/calendar-body.ts","../../src/lib/datepicker/month-view.ts","../../src/lib/button/button.component.ts","../../src/lib/button/button.module.ts","../../src/lib/button-toggle/button-toggle.component.ts","../../src/lib/button-toggle/button-toggle.module.ts","../../src/lib/card/card.component.ts","../../src/lib/card/card.module.ts","../../src/lib/checkbox/checkbox-config.ts","../../src/lib/checkbox/checkbox.ts","../../src/lib/checkbox/checkbox-required-validator.ts","../../src/lib/checkbox/checkbox-module.ts","../../src/lib/form-field/cleaner.ts","../../src/lib/form-field/form-field-control.ts","../../src/lib/form-field/form-field-number-control.ts","../../src/lib/form-field/hint.ts","../../src/lib/form-field/prefix.ts","../../src/lib/form-field/stepper.ts","../../src/lib/form-field/suffix.ts","../../src/lib/form-field/form-field.ts","../../node_modules/tslib/tslib.es6.js","../../src/lib/core/utils/utils.ts","../../src/lib/core/common-behaviors/common-module.ts","../../src/lib/core/common-behaviors/disabled.ts","../../src/lib/core/common-behaviors/color.ts","../../src/lib/core/common-behaviors/tabindex.ts","../../src/lib/core/common-behaviors/error-state.ts","../../src/lib/core/option/option.ts","../../src/lib/core/overlay/overlay-position-map.ts","../../src/lib/core/select/errors.ts","../../src/lib/form-field/form-field-errors.ts","../../src/lib/input/input-errors.ts","../../src/lib/datepicker/datepicker-errors.ts","../../src/lib/dropdown/dropdown-errors.ts","../../src/lib/core/line/line.ts","../../src/lib/core/error/error-options.ts","../../src/lib/core/selection/pseudo-checkbox/pseudo-checkbox.ts","../../src/lib/core/selection/index.ts","../../src/lib/core/services/measure-scrollbar.service.ts","../../src/lib/core/option/optgroup.ts","../../src/lib/core/option/index.ts","../../src/lib/core/label/label-options.ts","../../src/lib/core/animation/fade-animations.ts","../../src/lib/core/animation/animation.ts","../../src/lib/core/select/animations.ts","../../src/lib/icon/icon.component.ts","../../src/lib/icon/icon.module.ts"],"sourcesContent":["import {\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    Directive,\n    ElementRef,\n    EventEmitter,\n    HostBinding,\n    Inject,\n    InjectionToken,\n    Input,\n    NgZone,\n    OnDestroy,\n    OnInit,\n    Optional,\n    Output,\n    TemplateRef,\n    ViewContainerRef,\n    ViewEncapsulation\n} from '@angular/core';\nimport { Directionality } from '@ptsecurity/cdk/bidi';\nimport { coerceBooleanProperty } from '@ptsecurity/cdk/coercion';\nimport { ESCAPE } from '@ptsecurity/cdk/keycodes';\nimport {\n    ConnectedOverlayPositionChange,\n    ConnectionPositionPair,\n    Overlay,\n    OverlayRef,\n    ScrollDispatcher,\n    IScrollStrategy,\n    FlexibleConnectedPositionStrategy,\n    IOverlayConnectionPosition,\n    IOriginConnectionPosition,\n    HorizontalConnectionPos,\n    VerticalConnectionPos\n} from '@ptsecurity/cdk/overlay';\nimport { ComponentPortal } from '@ptsecurity/cdk/portal';\nimport {\n    fadeAnimation,\n    DEFAULT_4_POSITIONS,\n    POSITION_MAP\n} from '@ptsecurity/mosaic/core';\nimport { BehaviorSubject, Observable, Subject } from 'rxjs';\nimport { distinctUntilChanged, takeUntil } from 'rxjs/operators';\n\n\n@Component({\n    selector: 'mc-tooltip-component',\n    inputs: [\n        'mcMouseEnterDelay',\n        'mcMouseLeaveDelay',\n        'mcTitle',\n        'mcVisible',\n        'mcTrigger',\n        'mcPlacement'\n    ],\n    outputs: ['mcVisibleChange'],\n    animations: [ fadeAnimation ],\n    templateUrl: './tooltip.component.html',\n    preserveWhitespaces: false,\n    styleUrls: ['./tooltip.css'],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    host: {\n        '(body:click)': 'this.handleBodyInteraction()'\n    }\n})\nexport class McTooltipComponent {\n    prefix = 'mc-tooltip_placement';\n    positions: ConnectionPositionPair[] = [ ...DEFAULT_4_POSITIONS ];\n    classMap = {};\n    isTitleString: boolean;\n    showTid: number;\n    hideTid: number;\n    availablePositions: any;\n    $visible: Observable<boolean>;\n\n    @Output() mcVisibleChange: EventEmitter<boolean> = new EventEmitter();\n\n    @Input() mcMouseEnterDelay = 400;\n\n    @Input() mcMouseLeaveDelay = 0;\n\n    @Input()\n    get mcTitle(): string | TemplateRef<void> {\n        return this._mcTitle;\n    }\n    set mcTitle(value: string | TemplateRef<void>) {\n        this.isTitleString = !(value instanceof TemplateRef);\n\n        if (this.isTitleString) {\n            this._mcTitle = value;\n        }\n    }\n    private _mcTitle: string | TemplateRef<void>;\n\n    @Input()\n    get mcTrigger(): string {\n        return this._mcTrigger;\n    }\n    set mcTrigger(value: string) {\n        this._mcTrigger = value;\n    }\n    private _mcTrigger: string = 'hover';\n\n    @Input()\n    get mcPlacement(): string {\n        return this._mcPlacement;\n    }\n    set mcPlacement(value: string) {\n        if (value !== this._mcPlacement) {\n            this._mcPlacement = value;\n            this.positions.unshift(POSITION_MAP[ this.mcPlacement ]);\n        } else if (!value) {\n            this._mcPlacement = 'top';\n        }\n    }\n    private _mcPlacement: string = 'top';\n\n    @Input()\n    get mcVisible(): boolean {\n        return this._mcVisible.value;\n    }\n    set mcVisible(value: boolean) {\n        const visible = coerceBooleanProperty(value);\n\n        if (this._mcVisible.value !== visible) {\n            this._mcVisible.next(visible);\n            this.mcVisibleChange.emit(visible);\n        }\n    }\n    private _mcVisible: BehaviorSubject<boolean> = new BehaviorSubject<boolean>(false);\n\n    /** Subject for notifying that the tooltip has been hidden from the view */\n    private readonly onHideSubject: Subject<any> = new Subject();\n    private closeOnInteraction: boolean = false;\n\n    constructor(public cdr: ChangeDetectorRef) {\n        this.availablePositions = POSITION_MAP;\n        this.$visible = this._mcVisible.asObservable();\n    }\n\n    show(): void {\n        if (this.hideTid) {\n            clearTimeout(this.hideTid);\n        }\n\n        if (!this.isContentEmpty()) {\n            if (this.mcTrigger !== 'manual') {\n                this.closeOnInteraction = true;\n            }\n            this.showTid = setTimeout(() => {\n                this.mcVisible = true;\n                this.mcVisibleChange.emit(true);\n\n                // Mark for check so if any parent component has set the\n                // ChangeDetectionStrategy to OnPush it will be checked anyways\n                this.markForCheck();\n            }, this.mcMouseEnterDelay);\n        }\n    }\n\n    hide(): void {\n        if (this.showTid) {\n            clearTimeout(this.showTid);\n        }\n\n        this.hideTid = setTimeout(() => {\n            this.mcVisible = false;\n            this.mcVisibleChange.emit(false);\n            this.onHideSubject.next();\n\n            // Mark for check so if any parent component has set the\n            // ChangeDetectionStrategy to OnPush it will be checked anyways\n            this.markForCheck();\n        }, this.mcMouseLeaveDelay);\n    }\n\n    setClassMap(): void {\n        this.classMap = `${this.prefix}-${this.mcPlacement}`;\n    }\n\n    isContentEmpty(): boolean {\n        return this.isTitleString ? (this.mcTitle === '' || !this.mcTitle) : false;\n    }\n\n    /** Returns an observable that notifies when the tooltip has been hidden from view. */\n    afterHidden(): Observable<void> {\n        return this.onHideSubject.asObservable();\n    }\n\n    markForCheck(): void {\n        this.cdr.markForCheck();\n    }\n\n    handleBodyInteraction(): void {\n        if (this.closeOnInteraction) {\n            this.hide();\n        }\n    }\n}\n\nexport const MC_TOOLTIP_SCROLL_STRATEGY =\n    new InjectionToken<() => IScrollStrategy>('mc-tooltip-scroll-strategy');\n\n/** @docs-private */\nexport function mcTooltipScrollStrategyFactory(overlay: Overlay): () => IScrollStrategy {\n    return () => overlay.scrollStrategies.reposition({scrollThrottle: 20});\n}\n\n/** @docs-private */\nexport const MC_TOOLTIP_SCROLL_STRATEGY_FACTORY_PROVIDER = {\n    provide: MC_TOOLTIP_SCROLL_STRATEGY,\n    deps: [Overlay],\n    useFactory: mcTooltipScrollStrategyFactory\n};\n\n/** Creates an error to be thrown if the user supplied an invalid tooltip position. */\nexport function getMcTooltipInvalidPositionError(position: string) {\n    return Error(`McTooltip position \"${position}\" is invalid.`);\n}\n\nconst VIEWPORT_MARGIN: number = 8;\n\n@Directive({\n    selector: '[mcTooltip], [attribute^=\"mcTooltip\"]',\n    exportAs: 'mcTooltip',\n    host: {\n        '(keydown)': 'handleKeydown($event)',\n        '(touchend)': 'handleTouchend()'\n    }\n})\nexport class McTooltip implements OnInit, OnDestroy {\n    isTooltipOpen: boolean = false;\n    isDynamicTooltip = false;\n    parentDisabled: boolean = false;\n    overlayRef: OverlayRef | null;\n    portal: ComponentPortal<McTooltipComponent>;\n    availablePositions: any;\n    tooltip: McTooltipComponent | null;\n\n    @Output() mcVisibleChange = new EventEmitter<boolean>();\n    private $unsubscribe = new Subject<void>();\n\n    @Input('mcTooltip')\n    get mcTitle(): string {\n        return this._mcTitle;\n    }\n    set mcTitle(title: string) {\n        this._mcTitle = title;\n        this.updateCompValue('mcTitle', title);\n    }\n    private _mcTitle: string;\n\n    @Input('mcTitle')\n    set setTitle(title: string) {\n        this.mcTitle = title;\n    }\n\n    @Input('mcTooltipDisabled')\n    get disabled(): boolean { return this._disabled; }\n    set disabled(value) {\n        this._disabled = coerceBooleanProperty(value);\n    }\n    private _disabled: boolean = false;\n\n    @Input('mcMouseEnterDelay')\n    get mcMouseEnterDelay(): number {\n        return this._mcMouseEnterDelay;\n    }\n    set mcMouseEnterDelay(value: number) {\n        this._mcMouseEnterDelay = value;\n        this.updateCompValue('mcMouseEnterDelay', value);\n    }\n    private _mcMouseEnterDelay: number;\n\n    @Input('mcMouseLeaveDelay')\n    get mcMouseLeaveDelay(): number {\n        return this._mcMouseLeaveDelay;\n    }\n    set mcMouseLeaveDelay(value: number) {\n        this._mcMouseLeaveDelay = value;\n        this.updateCompValue('mcMouseLeaveDelay', value);\n    }\n    private _mcMouseLeaveDelay: number;\n\n    @Input('mcTrigger')\n    get mcTrigger(): string {\n        return this._mcTrigger;\n    }\n    set mcTrigger(value: string) {\n        if (value) {\n            this._mcTrigger = value;\n            this.updateCompValue('mcTrigger', value);\n        } else {\n            this._mcTrigger = 'hover';\n        }\n    }\n    private _mcTrigger: string = 'hover';\n\n    @Input('mcPlacement')\n    get mcPlacement(): string {\n        return this._mcPlacement;\n    }\n    set mcPlacement(value: string) {\n        if (value) {\n            this._mcPlacement = value;\n            this.updateCompValue('mcPlacement', value);\n        } else {\n            this._mcPlacement = 'top';\n        }\n    }\n    private _mcPlacement: string = 'top';\n\n    @Input('mcTooltipClass')\n    get mcTooltipClass() { return this._mcTooltipClass; }\n    set mсTooltipClass(value: string | string[] | Set<string> | {[key: string]: any}) {\n        this._mcTooltipClass = value;\n\n        if (this.tooltip) {\n            this.tooltip.setClassMap();\n        }\n    }\n    private _mcTooltipClass: string | string[] | Set<string> | {[key: string]: any};\n\n    @Input('mcVisible')\n    get mcVisible(): boolean {\n        return this._mcVisible;\n    }\n    set mcVisible(externalValue: boolean) {\n        const value = coerceBooleanProperty(externalValue);\n        this._mcVisible = value;\n        this.updateCompValue('mcVisible', value);\n\n        if (value) {\n            this.show();\n        }\n    }\n    private _mcVisible: boolean;\n\n    @HostBinding('class.mc-tooltip-open')\n    get isOpen(): boolean {\n        return this.isTooltipOpen;\n    }\n\n    @HostBinding('class.disabled')\n    get isParentDisabled(): boolean {\n        return this.parentDisabled;\n    }\n\n    private manualListeners = new Map<string, EventListenerOrEventListenerObject>();\n    private readonly destroyed = new Subject<void>();\n\n    constructor(\n        private overlay: Overlay,\n        private elementRef: ElementRef,\n        private ngZone: NgZone,\n        private scrollDispatcher: ScrollDispatcher,\n        private hostView: ViewContainerRef,\n        @Inject(MC_TOOLTIP_SCROLL_STRATEGY) private scrollStrategy,\n        @Optional() private direction: Directionality) {\n            this.availablePositions = POSITION_MAP;\n        }\n\n    /** Create the overlay config and position strategy */\n    createOverlay(): OverlayRef {\n        if (this.overlayRef) {\n            return this.overlayRef;\n        }\n\n        // Create connected position strategy that listens for scroll events to reposition.\n        const strategy = this.overlay.position()\n            .flexibleConnectedTo(this.elementRef)\n            .withTransformOriginOn('.mc-tooltip')\n            .withFlexibleDimensions(false)\n            .withViewportMargin(VIEWPORT_MARGIN)\n            .withPositions([ ...DEFAULT_4_POSITIONS ]);\n\n        const scrollableAncestors = this.scrollDispatcher\n            .getAncestorScrollContainers(this.elementRef);\n\n        strategy.withScrollableContainers(scrollableAncestors);\n\n        strategy.positionChanges.pipe(takeUntil(this.destroyed)).subscribe((change) => {\n            if (this.tooltip) {\n                this.onPositionChange(change);\n                if (change.scrollableViewProperties.isOverlayClipped && this.tooltip.mcVisible) {\n                    // After position changes occur and the overlay is clipped by\n                    // a parent scrollable then close the tooltip.\n                    this.ngZone.run(() => this.hide());\n                }\n            }\n        });\n\n        this.overlayRef = this.overlay.create({\n            direction: this.direction,\n            positionStrategy: strategy,\n            panelClass: 'mc-tooltip-panel',\n            scrollStrategy: this.scrollStrategy()\n        });\n\n        this.updatePosition();\n\n        this.overlayRef.detachments()\n            .pipe(takeUntil(this.destroyed))\n            .subscribe(() => this.detach());\n\n        return this.overlayRef;\n    }\n\n    detach() {\n        if (this.overlayRef && this.overlayRef.hasAttached()) {\n            this.overlayRef.detach();\n        }\n\n        this.tooltip = null;\n    }\n\n    onPositionChange($event: ConnectedOverlayPositionChange): void {\n        let updatedPlacement = this.mcPlacement;\n        Object.keys(this.availablePositions).some((key) => {\n            if ($event.connectionPair.originX === this.availablePositions[key].originX &&\n                $event.connectionPair.originY === this.availablePositions[key].originY &&\n                $event.connectionPair.overlayX === this.availablePositions[key].overlayX &&\n                $event.connectionPair.overlayY === this.availablePositions[key].overlayY) {\n                updatedPlacement = key;\n\n                return true;\n            }\n\n            return false;\n        });\n        this.updateCompValue('mcPlacement', updatedPlacement);\n\n        if (this.tooltip) {\n            this.tooltip.setClassMap();\n            this.tooltip.markForCheck();\n        }\n\n        this.handlePositioningUpdate();\n    }\n\n    handlePositioningUpdate() {\n        if (!this.overlayRef) {\n            this.overlayRef = this.createOverlay();\n        }\n        if (this.mcPlacement === 'right' || this.mcPlacement === 'left') {\n            const pos =\n                (this.overlayRef.overlayElement.clientHeight -\n                    this.hostView.element.nativeElement.clientHeight) / 2; // tslint:disable-line\n            const currentContainer = this.overlayRef.overlayElement.style.top || '0px';\n            this.overlayRef.overlayElement.style.top =\n                `${parseInt(currentContainer.split('px')[0], 10) + pos - 1}px`;\n            // TODO: обновлять положение стрелки\\указателя\\\"дятла\"\n        }\n    }\n\n    // tslint:disable-next-line:no-any\n    updateCompValue(key: string, value: any): void {\n        if (this.isDynamicTooltip && value) {\n            if (this.tooltip) {\n                this.tooltip[key] = value;\n            }\n        }\n    }\n\n    ngOnInit(): void {\n        this.initElementRefListeners();\n    }\n\n    ngOnDestroy(): void {\n        if (this.overlayRef) {\n            this.overlayRef.dispose();\n        }\n        this.manualListeners.forEach((listener, event) =>\n            this.elementRef.nativeElement.removeEventListener(event, listener));\n        this.manualListeners.clear();\n\n        this.$unsubscribe.next();\n        this.$unsubscribe.complete();\n    }\n\n    handleKeydown(e: KeyboardEvent) {\n        if (this.isTooltipOpen && e.keyCode === ESCAPE) { // tslint:disable-line\n            this.hide();\n        }\n    }\n\n    handleTouchend() {\n        this.hide();\n    }\n\n    initElementRefListeners() {\n        if (this.mcTrigger === 'hover') {\n\n            this.manualListeners\n                .set('mouseenter', () => this.show())\n                .set('mouseleave', () => this.hide())\n                .forEach((listener, event) => this.elementRef.nativeElement.addEventListener(event, listener));\n        }\n\n        if (this.mcTrigger === 'focus') {\n\n            this.manualListeners\n                .set('focus', () => this.show())\n                .set('blur', () => this.hide())\n                .forEach((listener, event) => this.elementRef.nativeElement.addEventListener(event, listener));\n        }\n    }\n\n    show(): void {\n        if (!this.disabled) {\n            if (!this.tooltip) {\n                const overlayRef = this.createOverlay();\n                this.detach();\n\n                this.portal = this.portal || new ComponentPortal(McTooltipComponent, this.hostView);\n\n                this.tooltip = overlayRef.attach(this.portal).instance;\n                this.tooltip.afterHidden()\n                    .pipe(takeUntil(this.destroyed))\n                    .subscribe(() => this.detach());\n                this.isDynamicTooltip = true;\n                const properties = [\n                    'mcTitle',\n                    'mcPlacement',\n                    'mcTrigger',\n                    'mcTooltipDisabled',\n                    'mcMouseEnterDelay',\n                    'mcMouseLeaveDelay',\n                    'mсTooltipClass',\n                    'mcVisible'\n                ];\n                properties.forEach((property) => this.updateCompValue(property, this[ property ]));\n                this.tooltip.mcVisibleChange.pipe(takeUntil(this.$unsubscribe), distinctUntilChanged())\n                    .subscribe((data) => {\n                        this.mcVisible = data;\n                        this.mcVisibleChange.emit(data);\n                        this.isTooltipOpen = data;\n                    });\n            }\n            this.updatePosition();\n            this.tooltip.show();\n        }\n    }\n\n    hide(): void {\n        if (this.tooltip) {\n            this.tooltip.hide();\n        }\n    }\n\n    /** Updates the position of the current tooltip. */\n    updatePosition() {\n        if (!this.overlayRef) {\n            this.overlayRef = this.createOverlay();\n        }\n        const position =\n            this.overlayRef.getConfig().positionStrategy as FlexibleConnectedPositionStrategy;\n        const origin = this.getOrigin();\n        const overlay = this.getOverlayPosition();\n\n        position.withPositions([\n            {...origin.main, ...overlay.main},\n            {...origin.fallback, ...overlay.fallback}\n        ]);\n    }\n\n    /**\n     * Returns the origin position and a fallback position based on the user's position preference.\n     * The fallback position is the inverse of the origin (e.g. `'below' -> 'above'`).\n     */\n    getOrigin(): {main: IOriginConnectionPosition; fallback: IOriginConnectionPosition} {\n        const position = this.mcPlacement;\n        const isLtr = !this.direction || this.direction.value === 'ltr';\n        let originPosition: IOriginConnectionPosition;\n\n        if (position === 'top' || position === 'bottom') {\n            originPosition = {originX: 'center', originY: position === 'top' ? 'top' : 'bottom'};\n        } else if (\n            position === 'top' ||\n            (position === 'left' && isLtr) ||\n            (position === 'right' && !isLtr)) {\n            originPosition = {originX: 'start', originY: 'center'};\n        } else if (\n            position === 'bottom' ||\n            (position === 'right' && isLtr) ||\n            (position === 'left' && !isLtr)) {\n            originPosition = {originX: 'end', originY: 'center'};\n        } else {\n            throw getMcTooltipInvalidPositionError(position);\n        }\n\n        const {x, y} = this.invertPosition(originPosition.originX, originPosition.originY);\n\n        return {\n            main: originPosition,\n            fallback: {originX: x, originY: y}\n        };\n    }\n\n    /** Returns the overlay position and a fallback position based on the user's preference */\n    getOverlayPosition(): {main: IOverlayConnectionPosition; fallback: IOverlayConnectionPosition} {\n        const position = this.mcPlacement;\n        const isLtr = !this.direction || this.direction.value === 'ltr';\n        let overlayPosition: IOverlayConnectionPosition;\n\n        if (position === 'top') {\n            overlayPosition = {overlayX: 'center', overlayY: 'bottom'};\n        } else if (position === 'bottom') {\n            overlayPosition = {overlayX: 'center', overlayY: 'top'};\n        } else if (\n            position === 'top' ||\n            (position === 'left' && isLtr) ||\n            (position === 'right' && !isLtr)) {\n            overlayPosition = {overlayX: 'end', overlayY: 'center'};\n        } else if (\n            position === 'bottom' ||\n            (position === 'right' && isLtr) ||\n            (position === 'left' && !isLtr)) {\n            overlayPosition = {overlayX: 'start', overlayY: 'center'};\n        } else {\n            throw getMcTooltipInvalidPositionError(position);\n        }\n\n        const {x, y} = this.invertPosition(overlayPosition.overlayX, overlayPosition.overlayY);\n\n        return {\n            main: overlayPosition,\n            fallback: {overlayX: x, overlayY: y}\n        };\n    }\n\n    /** Inverts an overlay position. */\n    private invertPosition(x: HorizontalConnectionPos, y: VerticalConnectionPos) {\n        let newX: HorizontalConnectionPos = x;\n        let newY: VerticalConnectionPos = y;\n        if (this.mcPlacement === 'top' || this.mcPlacement === 'bottom') {\n            if (y === 'top') {\n                newY = 'bottom';\n            } else if (y === 'bottom') {\n                newY = 'top';\n            }\n        } else {\n            if (x === 'end') {\n                newX = 'start';\n            } else if (x === 'start') {\n                newX = 'end';\n            }\n        }\n\n        return {x: newX, y: newY};\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { OverlayModule } from '@ptsecurity/cdk/overlay';\n\nimport {\n    McTooltipComponent,\n    McTooltip,\n    MC_TOOLTIP_SCROLL_STRATEGY_FACTORY_PROVIDER\n} from './tooltip.component';\n\n\n@NgModule({\n    declarations: [McTooltipComponent, McTooltip],\n    exports: [McTooltipComponent, McTooltip],\n    imports: [CommonModule, OverlayModule],\n    providers: [MC_TOOLTIP_SCROLL_STRATEGY_FACTORY_PROVIDER],\n    entryComponents: [McTooltipComponent]\n})\nexport class McToolTipModule {\n}\n","import { Version } from '@angular/core';\n\n\nexport const VERSION = new Version('1.0.0-beta.4-409f291');\n","export const selectEvents = 'selectEvents';\n","import { InjectionToken } from '@angular/core';\nimport { IScrollStrategy, Overlay, RepositionScrollStrategy } from '@ptsecurity/cdk/overlay';\n\n\n/** The max height of the select's overlay panel */\nexport const SELECT_PANEL_MAX_HEIGHT = 224;\n\n/** The panel's padding on the x-axis */\nexport const SELECT_PANEL_PADDING_X = 1;\n\n/** The panel's x axis padding if it is indented (e.g. there is an option group). */\n/* tslint:disable-next-line:no-magic-numbers */\nexport const SELECT_PANEL_INDENT_PADDING_X = SELECT_PANEL_PADDING_X * 2;\n\n/**\n * The select panel will only \"fit\" inside the viewport if it is positioned at\n * this value or more away from the viewport boundary.\n */\nexport const SELECT_PANEL_VIEWPORT_PADDING = 8;\n\n\n/** Injection token that determines the scroll handling while a select is open. */\nexport const MC_SELECT_SCROLL_STRATEGY =\n    new InjectionToken<() => IScrollStrategy>('mc-select-scroll-strategy');\n\n/** @docs-private */\nexport function mcSelectScrollStrategyProviderFactory(overlay: Overlay):\n    () => RepositionScrollStrategy {\n    return () => overlay.scrollStrategies.reposition();\n}\n\n/** @docs-private */\nexport const MC_SELECT_SCROLL_STRATEGY_PROVIDER = {\n    provide: MC_SELECT_SCROLL_STRATEGY,\n    deps: [Overlay],\n    useFactory: mcSelectScrollStrategyProviderFactory\n};\n","/* tslint:disable:no-empty */\n\nimport {\n    AfterContentInit, AfterViewInit,\n    Attribute,\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    ContentChild,\n    ContentChildren,\n    Directive,\n    DoCheck,\n    ElementRef,\n    EventEmitter,\n    Inject,\n    Input,\n    isDevMode,\n    NgZone,\n    OnChanges,\n    OnDestroy,\n    OnInit,\n    Optional,\n    Output,\n    QueryList, Renderer2,\n    Self,\n    SimpleChanges,\n    ViewChild, ViewChildren,\n    ViewEncapsulation\n} from '@angular/core';\nimport { ControlValueAccessor, FormGroupDirective, NgControl, NgForm } from '@angular/forms';\nimport { ActiveDescendantKeyManager } from '@ptsecurity/cdk/a11y';\nimport { Directionality } from '@ptsecurity/cdk/bidi';\nimport { coerceBooleanProperty } from '@ptsecurity/cdk/coercion';\nimport { SelectionModel } from '@ptsecurity/cdk/collections';\nimport {\n    DOWN_ARROW,\n    END,\n    ENTER,\n    HOME,\n    LEFT_ARROW,\n    RIGHT_ARROW,\n    SPACE,\n    UP_ARROW,\n    A\n} from '@ptsecurity/cdk/keycodes';\nimport {\n    CdkConnectedOverlay,\n    ViewportRuler\n} from '@ptsecurity/cdk/overlay';\nimport {\n    countGroupLabelsBeforeOption,\n    getOptionScrollPosition,\n    CanDisable,\n    CanDisableCtor,\n    CanUpdateErrorState,\n    CanUpdateErrorStateCtor,\n    ErrorStateMatcher,\n    HasTabIndex,\n    HasTabIndexCtor,\n    MC_OPTION_PARENT_COMPONENT,\n    McOptgroup,\n    McOption,\n    McOptionSelectionChange,\n    mixinDisabled,\n    mixinErrorState,\n    mixinTabIndex,\n    mcSelectAnimations,\n\n    SELECT_PANEL_INDENT_PADDING_X,\n    SELECT_PANEL_MAX_HEIGHT,\n    SELECT_PANEL_PADDING_X,\n    SELECT_PANEL_VIEWPORT_PADDING,\n\n    getMcSelectDynamicMultipleError,\n    getMcSelectNonFunctionValueError,\n    getMcSelectNonArrayValueError,\n    MC_SELECT_SCROLL_STRATEGY\n} from '@ptsecurity/mosaic/core';\nimport { McFormField, McFormFieldControl } from '@ptsecurity/mosaic/form-field';\nimport { McTag } from '@ptsecurity/mosaic/tag';\nimport { defer, merge, Observable, Subject } from 'rxjs';\nimport {\n    filter,\n    map,\n    startWith,\n    switchMap,\n    take,\n    takeUntil,\n    distinctUntilChanged\n} from 'rxjs/operators';\n\n\nlet nextUniqueId = 0;\n\n/** The height of the select items in `em` units. */\nexport const SELECT_ITEM_HEIGHT_EM = 2;\n\n/** Change event object that is emitted when the select value has changed. */\nexport class McSelectChange {\n    constructor(public source: McSelect, public value: any) {}\n}\n\nexport class McSelectBase {\n    constructor(\n        public elementRef: ElementRef,\n        public defaultErrorStateMatcher: ErrorStateMatcher,\n        public parentForm: NgForm,\n        public parentFormGroup: FormGroupDirective,\n        public ngControl: NgControl\n    ) {}\n}\n\nconst McSelectMixinBase: CanDisableCtor & HasTabIndexCtor & CanUpdateErrorStateCtor &\n    typeof McSelectBase = mixinTabIndex(mixinDisabled(mixinErrorState(McSelectBase)));\n\n\n@Directive({ selector: 'mc-select-trigger' })\nexport class McSelectTrigger {}\n\n\n@Component({\n    selector: 'mc-select',\n    exportAs: 'mcSelect',\n    templateUrl: 'select.html',\n    styleUrls: ['./select.css'],\n    inputs: ['disabled', 'tabIndex'],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    host: {\n        '[attr.id]': 'id',\n        '[attr.tabindex]': 'tabIndex',\n        class: 'mc-select',\n        '[class.mc-disabled]': 'disabled',\n        '[class.mc-select-invalid]': 'errorState',\n        '[class.mc-select-required]': 'required',\n        '(keydown)': 'handleKeydown($event)',\n        '(focus)': 'onFocus()',\n        '(blur)': 'onBlur()',\n        '(window:resize)': 'calculateHiddenItems()'\n    },\n    animations: [\n        mcSelectAnimations.transformPanel,\n        mcSelectAnimations.fadeInContent\n    ],\n    providers: [\n        { provide: McFormFieldControl, useExisting: McSelect },\n        { provide: MC_OPTION_PARENT_COMPONENT, useExisting: McSelect }\n    ]\n})\nexport class McSelect extends McSelectMixinBase implements\n    AfterContentInit, AfterViewInit, OnChanges, OnDestroy, OnInit, DoCheck, ControlValueAccessor, CanDisable,\n    HasTabIndex, McFormFieldControl<any>, CanUpdateErrorState {\n\n    /** A name for this control that can be used by `mc-form-field`. */\n    controlType = 'mc-select';\n\n    hiddenItems: number = 0;\n    oneMoreText: string = '...ещё';\n\n    /** The last measured value for the trigger's client bounding rect. */\n    triggerRect: ClientRect;\n\n    /** The cached font-size of the trigger element. */\n    triggerFontSize = 0;\n\n    /** Deals with the selection logic. */\n    selectionModel: SelectionModel<McOption>;\n\n    /** Manages keyboard events for options in the panel. */\n    keyManager: ActiveDescendantKeyManager<McOption>;\n\n    /** The IDs of child options to be passed to the aria-owns attribute. */\n    optionIds: string = '';\n\n    /** The value of the select panel's transform-origin property. */\n    transformOrigin: string = 'top';\n\n    /** Whether the panel's animation is done. */\n    panelDoneAnimating: boolean = false;\n\n    /** Emits when the panel element is finished transforming in. */\n    panelDoneAnimatingStream = new Subject<string>();\n\n    /** Strategy that will be used to handle scrolling while the select panel is open. */\n    scrollStrategy = this._scrollStrategyFactory();\n\n    /**\n     * The y-offset of the overlay panel in relation to the trigger's top start corner.\n     * This must be adjusted to align the selected option text over the trigger text.\n     * when the panel opens. Will change based on the y-position of the selected option.\n     */\n    offsetY = 0;\n\n    /**\n     * This position config ensures that the top \"start\" corner of the overlay\n     * is aligned with with the top \"start\" of the origin by default (overlapping\n     * the trigger completely). If the panel cannot fit below the trigger, it\n     * will fall back to a position above the trigger.\n     */\n    positions = [\n        {\n            originX: 'start',\n            originY: 'bottom',\n            overlayX: 'start',\n            overlayY: 'top'\n        },\n        {\n            originX: 'start',\n            originY: 'top',\n            overlayX: 'start',\n            overlayY: 'bottom'\n        }\n    ];\n\n    @ViewChild('trigger') trigger: ElementRef;\n\n    @ViewChild('panel') panel: ElementRef;\n\n    @ViewChild(CdkConnectedOverlay) overlayDir: CdkConnectedOverlay;\n\n    @ViewChildren(McTag) tags: QueryList<McTag>;\n\n    /** User-supplied override of the trigger element. */\n    @ContentChild(McSelectTrigger) customTrigger: McSelectTrigger;\n\n    /** All of the defined select options. */\n    @ContentChildren(McOption, { descendants: true }) options: QueryList<McOption>;\n\n    /** All of the defined groups of options. */\n    @ContentChildren(McOptgroup) optionGroups: QueryList<McOptgroup>;\n\n    /** Classes to be passed to the select panel. Supports the same syntax as `ngClass`. */\n    @Input() panelClass: string | string[] | Set<string> | { [key: string]: any };\n\n    /** Object used to control when error messages are shown. */\n    @Input() errorStateMatcher: ErrorStateMatcher;\n\n    /**\n     * Function used to sort the values in a select in multiple mode.\n     * Follows the same logic as `Array.prototype.sort`.\n     */\n    @Input() sortComparator: (a: McOption, b: McOption, options: McOption[]) => number;\n\n    /** Combined stream of all of the child options' change events. */\n    readonly optionSelectionChanges: Observable<McOptionSelectionChange> = defer(() => {\n        if (this.options) {\n            return merge(...this.options.map((option) => option.onSelectionChange));\n        }\n\n        return this._ngZone.onStable\n            .asObservable()\n            .pipe(take(1), switchMap(() => this.optionSelectionChanges));\n    }) as Observable<McOptionSelectionChange>;\n\n    /** Event emitted when the select panel has been toggled. */\n    @Output() readonly openedChange: EventEmitter<boolean> = new EventEmitter<boolean>();\n\n    /** Event emitted when the select has been opened. */\n    @Output('opened') readonly openedStream: Observable<void> =\n        this.openedChange.pipe(filter((o) => o), map(() => {}));\n\n    /** Event emitted when the select has been closed. */\n    @Output('closed') readonly closedStream: Observable<void> =\n        this.openedChange.pipe(filter((o) => !o), map(() => {}));\n\n    /** Event emitted when the selected value has been changed by the user. */\n    @Output() readonly selectionChange: EventEmitter<McSelectChange> = new EventEmitter<McSelectChange>();\n\n    /**\n     * Event that emits whenever the raw value of the select changes. This is here primarily\n     * to facilitate the two-way binding for the `value` input.\n     * @docs-private\n     */\n    @Output() readonly valueChange: EventEmitter<any> = new EventEmitter<any>();\n\n    @Input()\n    get placeholder(): string {\n        return this._placeholder;\n    }\n\n    set placeholder(value: string) {\n        this._placeholder = value;\n\n        this.stateChanges.next();\n    }\n\n    private _placeholder: string;\n\n    @Input()\n    get required(): boolean {\n        return this._required;\n    }\n\n    set required(value: boolean) {\n        this._required = coerceBooleanProperty(value);\n\n        this.stateChanges.next();\n    }\n\n    private _required: boolean = false;\n\n    @Input()\n    get multiple(): boolean {\n        return this._multiple;\n    }\n\n    set multiple(value: boolean) {\n        if (this.selectionModel) {\n            throw getMcSelectDynamicMultipleError();\n        }\n\n        this._multiple = coerceBooleanProperty(value);\n    }\n\n    private _multiple: boolean = false;\n\n    /**\n     * Function to compare the option values with the selected values. The first argument\n     * is a value from an option. The second is a value from the selection. A boolean\n     * should be returned.\n     */\n    @Input()\n    get compareWith() {\n        return this._compareWith;\n    }\n\n    set compareWith(fn: (o1: any, o2: any) => boolean) {\n        /* tslint:disable-next-line:strict-type-predicates */\n        if (typeof fn !== 'function') {\n            throw getMcSelectNonFunctionValueError();\n        }\n\n        this._compareWith = fn;\n\n        if (this.selectionModel) {\n            // A different comparator means the selection could change.\n            this.initializeSelection();\n        }\n    }\n\n    /** Value of the select control. */\n    @Input()\n    get value(): any {\n        return this._value;\n    }\n\n    set value(newValue: any) {\n        if (newValue !== this._value) {\n            this.writeValue(newValue);\n            this._value = newValue;\n        }\n    }\n\n    private _value: any;\n\n    @Input()\n    get id(): string {\n        return this._id;\n    }\n\n    set id(value: string) {\n        this._id = value || this.uid;\n        this.stateChanges.next();\n    }\n\n    private _id: string;\n\n    /** Whether the select is focused. */\n    get focused(): boolean {\n        return this._focused || this._panelOpen;\n    }\n\n    /**\n     * @deprecated Setter to be removed as this property is intended to be readonly.\n     * @breaking-change 8.0.0\n     */\n    set focused(value: boolean) {\n        this._focused = value;\n    }\n\n    private _focused = false;\n\n    get panelOpen(): boolean {\n        return this._panelOpen;\n    }\n\n    private _panelOpen = false;\n\n    /** The scroll position of the overlay panel, calculated to center the selected option. */\n    private scrollTop = 0;\n\n    /** Unique id for this input. */\n    private readonly uid = `mc-select-${nextUniqueId++}`;\n\n    /** Emits whenever the component is destroyed. */\n    private readonly destroy = new Subject<void>();\n\n    constructor(\n        private readonly _viewportRuler: ViewportRuler,\n        private readonly _changeDetectorRef: ChangeDetectorRef,\n        private readonly _ngZone: NgZone,\n        private readonly _renderer: Renderer2,\n        defaultErrorStateMatcher: ErrorStateMatcher,\n        elementRef: ElementRef,\n        @Optional() private readonly _dir: Directionality,\n        @Optional() parentForm: NgForm,\n        @Optional() parentFormGroup: FormGroupDirective,\n        @Optional() private readonly _parentFormField: McFormField,\n        @Self() @Optional() public ngControl: NgControl,\n        @Attribute('tabindex') tabIndex: string,\n        @Inject(MC_SELECT_SCROLL_STRATEGY) private readonly _scrollStrategyFactory\n    ) {\n        super(elementRef, defaultErrorStateMatcher, parentForm, parentFormGroup, ngControl);\n\n        if (this.ngControl) {\n            // Note: we provide the value accessor through here, instead of\n            // the `providers` to avoid running into a circular import.\n            this.ngControl.valueAccessor = this;\n        }\n\n        this.tabIndex = parseInt(tabIndex) || 0;\n\n        // Force setter to be called in case id was not specified.\n        this.id = this.id;\n    }\n\n    ngOnInit() {\n        this.selectionModel = new SelectionModel<McOption>(this.multiple);\n        this.stateChanges.next();\n\n        // We need `distinctUntilChanged` here, because some browsers will\n        // fire the animation end event twice for the same animation. See:\n        // https://github.com/angular/angular/issues/24084\n        this.panelDoneAnimatingStream\n            .pipe(distinctUntilChanged(), takeUntil(this.destroy))\n            .subscribe(() => {\n                if (this.panelOpen) {\n                    this.scrollTop = 0;\n                    this.openedChange.emit(true);\n                } else {\n                    this.openedChange.emit(false);\n                    this.panelDoneAnimating = false;\n                    this.overlayDir.offsetX = 0;\n                    this._changeDetectorRef.markForCheck();\n                }\n            });\n    }\n\n    ngAfterContentInit() {\n        this.initKeyManager();\n\n        this.selectionModel.changed\n            .pipe(takeUntil(this.destroy))\n            .subscribe((event) => {\n                event.added.forEach((option) => option.select());\n                event.removed.forEach((option) => option.deselect());\n            });\n\n        this.options.changes\n            .pipe(startWith(null), takeUntil(this.destroy))\n            .subscribe(() => {\n                this.resetOptions();\n                this.initializeSelection();\n            });\n    }\n\n    ngAfterViewInit(): void {\n        this.tags.changes\n            .subscribe(() => {\n                setTimeout(() => this.calculateHiddenItems(), 0);\n            });\n    }\n\n    ngDoCheck() {\n        if (this.ngControl) { this.updateErrorState(); }\n    }\n\n    ngOnChanges(changes: SimpleChanges) {\n        // Updating the disabled state is handled by `mixinDisabled`, but we need to additionally let\n        // the parent form field know to run change detection when the disabled state changes.\n        if (changes.disabled) {\n            this.stateChanges.next();\n        }\n    }\n\n    ngOnDestroy() {\n        this.destroy.next();\n        this.destroy.complete();\n        this.stateChanges.complete();\n    }\n\n    /** `View -> model callback called when value changes` */\n    _onChange: (value: any) => void = () => {};\n\n    /** `View -> model callback called when select has been touched` */\n    _onTouched = () => {};\n\n    /** Toggles the overlay panel open or closed. */\n    toggle(): void {\n        if (this.panelOpen) {\n            this.close();\n        } else {\n            this.open();\n        }\n    }\n\n    /** Opens the overlay panel. */\n    open(): void {\n        if (this.disabled || !this.options || !this.options.length || this._panelOpen) { return; }\n\n        this.triggerRect = this.trigger.nativeElement.getBoundingClientRect();\n        // Note: The computed font-size will be a string pixel value (e.g. \"16px\").\n        // `parseInt` ignores the trailing 'px' and converts this to a number.\n        this.triggerFontSize = parseInt(getComputedStyle(this.trigger.nativeElement)['font-size']);\n\n        this._panelOpen = true;\n        this.keyManager.withHorizontalOrientation(null);\n        this.calculateOverlayPosition();\n        this.highlightCorrectOption();\n        this._changeDetectorRef.markForCheck();\n\n        // Set the font size on the panel element once it exists.\n        this._ngZone.onStable.asObservable()\n            .pipe(take(1))\n            .subscribe(() => {\n                if (this.triggerFontSize && this.overlayDir.overlayRef && this.overlayDir.overlayRef.overlayElement) {\n                    this.overlayDir.overlayRef.overlayElement.style.fontSize = `${this.triggerFontSize}px`;\n                }\n            });\n    }\n\n    /** Closes the overlay panel and focuses the host element. */\n    close(): void {\n        if (this._panelOpen) {\n            this._panelOpen = false;\n            this.keyManager.withHorizontalOrientation(this.isRtl() ? 'rtl' : 'ltr');\n            this._changeDetectorRef.markForCheck();\n            this._onTouched();\n        }\n    }\n\n    /**\n     * Sets the select's value. Part of the ControlValueAccessor interface\n     * required to integrate with Angular's core forms API.\n     *\n     * @param value New value to be written to the model.\n     */\n    writeValue(value: any): void {\n        if (this.options) {\n            this.setSelectionByValue(value);\n        }\n    }\n\n    /**\n     * Saves a callback function to be invoked when the select's value\n     * changes from user input. Part of the ControlValueAccessor interface\n     * required to integrate with Angular's core forms API.\n     *\n     * @param fn Callback to be triggered when the value changes.\n     */\n    registerOnChange(fn: (value: any) => void): void {\n        this._onChange = fn;\n    }\n\n    /**\n     * Saves a callback function to be invoked when the select is blurred\n     * by the user. Part of the ControlValueAccessor interface required\n     * to integrate with Angular's core forms API.\n     *\n     * @param fn Callback to be triggered when the component has been touched.\n     */\n    registerOnTouched(fn: () => {}): void {\n        this._onTouched = fn;\n    }\n\n    /**\n     * Disables the select. Part of the ControlValueAccessor interface required\n     * to integrate with Angular's core forms API.\n     *\n     * @param isDisabled Sets whether the component is disabled.\n     */\n    setDisabledState(isDisabled: boolean): void {\n        this.disabled = isDisabled;\n        this._changeDetectorRef.markForCheck();\n        this.stateChanges.next();\n    }\n\n    get selected(): McOption | McOption[] {\n        return this.multiple ? this.selectionModel.selected : this.selectionModel.selected[0];\n    }\n\n    get triggerValue(): string {\n        if (this.empty) { return ''; }\n\n        if (this._multiple) {\n            const selectedOptions = this.selectionModel.selected.map((option) => option.viewValue);\n\n            if (this.isRtl()) { selectedOptions.reverse(); }\n\n            return selectedOptions.join(', ');\n        }\n\n        return this.selectionModel.selected[0].viewValue;\n    }\n\n    get triggerValues(): McOption[] {\n        if (this.empty) { return []; }\n\n        if (this._multiple) {\n            const selectedOptions = this.selectionModel.selected;\n\n            if (this.isRtl()) { selectedOptions.reverse(); }\n\n            return selectedOptions;\n        }\n\n        return [this.selectionModel.selected[0]];\n    }\n\n    get empty(): boolean {\n        return !this.selectionModel || this.selectionModel.isEmpty();\n    }\n\n    isRtl(): boolean {\n        return this._dir ? this._dir.value === 'rtl' : false;\n    }\n\n    handleKeydown(event: KeyboardEvent): void {\n        if (!this.disabled) {\n            if (this.panelOpen) {\n                this.handleOpenKeydown(event);\n            } else {\n                this.handleClosedKeydown(event);\n            }\n        }\n    }\n\n    /**\n     * When the panel content is done fading in, the panelDoneAnimating property is\n     * set so the proper class can be added to the panel.\n     */\n    onFadeInDone(): void {\n        this.panelDoneAnimating = this.panelOpen;\n        this._changeDetectorRef.markForCheck();\n    }\n\n    onFocus() {\n        if (!this.disabled) {\n            this._focused = true;\n\n            this.stateChanges.next();\n        }\n    }\n\n    /**\n     * Calls the touched callback only if the panel is closed. Otherwise, the trigger will\n     * \"blur\" to the panel when it opens, causing a false positive.\n     */\n    onBlur() {\n        this._focused = false;\n\n        if (!this.disabled && !this.panelOpen) {\n            this._onTouched();\n            this._changeDetectorRef.markForCheck();\n            this.stateChanges.next();\n        }\n    }\n\n    /**\n     * Callback that is invoked when the overlay panel has been attached.\n     */\n    onAttached(): void {\n        this.overlayDir.positionChange\n            .pipe(take(1))\n            .subscribe(() => {\n                this._changeDetectorRef.detectChanges();\n                this.calculateOverlayOffsetX();\n                this.panel.nativeElement.scrollTop = this.scrollTop;\n            });\n    }\n\n    /** Returns the theme to be used on the panel. */\n    getPanelTheme(): string {\n        return this._parentFormField ? `mc-${this._parentFormField.color}` : '';\n    }\n\n    /** Focuses the select element. */\n    focus(): void {\n        this.elementRef.nativeElement.focus();\n    }\n\n    /**\n     * Calculates the scroll position of the select's overlay panel.\n     *\n     * Attempts to center the selected option in the panel. If the option is\n     * too high or too low in the panel to be scrolled to the center, it clamps the\n     * scroll position to the min or max scroll positions respectively.\n     */\n    calculateOverlayScroll(selectedIndex: number, scrollBuffer: number, maxScroll: number): number {\n        const itemHeight = this.getItemHeight();\n        const optionOffsetFromScrollTop = itemHeight * selectedIndex;\n\n        /* tslint:disable-next-line:no-magic-numbers */\n        const halfOptionHeight = itemHeight / 2;\n\n        // Starts at the optionOffsetFromScrollTop, which scrolls the option to the top of the\n        // scroll container, then subtracts the scroll buffer to scroll the option down to\n        // the center of the overlay panel. Half the option height must be re-added to the\n        // scrollTop so the option is centered based on its middle, not its top edge.\n        const optimalScrollPosition = optionOffsetFromScrollTop - scrollBuffer + halfOptionHeight;\n\n        return Math.min(Math.max(0, optimalScrollPosition), maxScroll);\n    }\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    onContainerClick() {\n        this.focus();\n        this.open();\n    }\n\n    /** Invoked when an option is clicked. */\n    onRemoveMatcherItem(option: McOption, $event): void {\n        $event.stopPropagation();\n\n        option.deselect();\n    }\n\n    calculateHiddenItems(): void {\n        if (this.empty || !this.multiple) { return; }\n\n        let visibleItems: number = 0;\n        const totalItemsWidth = this.getTotalItemsWidthInMatcher();\n        let totalVisibleItemsWidth: number = 0;\n        const itemMargin: number = 4;\n\n        this.tags.forEach((tag) => {\n            if (tag.nativeElement.offsetTop < tag.nativeElement.offsetHeight) {\n                totalVisibleItemsWidth += tag.nativeElement.getBoundingClientRect().width + itemMargin;\n                visibleItems++;\n            }\n        });\n\n        this.hiddenItems = (this.selected as ArrayLike<McOption>).length - visibleItems;\n\n        if (this.hiddenItems) {\n            const itemsCounter = this.trigger.nativeElement.querySelector('.mc-select__match-hidden-text');\n            const matcherList = this.trigger.nativeElement.querySelector('.mc-select__match-list');\n\n            const itemsCounterShowed = itemsCounter.offsetTop < itemsCounter.offsetHeight;\n            // const itemsCounterWidth: number = itemsCounter.getBoundingClientRect().width;\n            const itemsCounterWidth: number = 86;\n\n            const matcherListWidth: number = matcherList.getBoundingClientRect().width;\n            const matcherWidth: number = matcherListWidth + itemsCounterWidth;\n\n            if (itemsCounterShowed && (totalItemsWidth < matcherWidth)) { this.hiddenItems = 0; }\n\n            if (\n                totalVisibleItemsWidth === matcherListWidth ||\n                (totalVisibleItemsWidth + itemsCounterWidth) < matcherListWidth\n            ) {\n                this._changeDetectorRef.markForCheck();\n\n                return ;\n            } else if (!itemsCounterShowed && (totalItemsWidth + itemsCounterWidth) > matcherWidth) {\n                this.hiddenItems++;\n            }\n        }\n\n        this._changeDetectorRef.markForCheck();\n    }\n\n    private getTotalItemsWidthInMatcher(): number {\n        const triggerClone = this.trigger.nativeElement.cloneNode(true);\n        triggerClone.querySelector('.mc-select__match-hidden-text').remove();\n\n        this._renderer.setStyle(triggerClone, 'position', 'absolute');\n        this._renderer.setStyle(triggerClone, 'visibility', 'hidden');\n        this._renderer.setStyle(triggerClone, 'top', '-100%');\n        this._renderer.setStyle(triggerClone, 'left', '0');\n\n        this._renderer.appendChild(this.trigger.nativeElement, triggerClone);\n\n        let totalItemsWidth: number = 0;\n        const itemMargin: number = 4;\n        triggerClone.querySelectorAll('mc-tag').forEach((item) => {\n            totalItemsWidth += item.getBoundingClientRect().width as number + itemMargin;\n        });\n\n        triggerClone.remove();\n\n        return totalItemsWidth;\n    }\n\n    /** Handles keyboard events while the select is closed. */\n    private handleClosedKeydown(event: KeyboardEvent): void {\n        /* tslint:disable-next-line */\n        const keyCode = event.keyCode;\n        const isArrowKey = keyCode === DOWN_ARROW || keyCode === UP_ARROW ||\n            keyCode === LEFT_ARROW || keyCode === RIGHT_ARROW;\n        const isOpenKey = keyCode === ENTER || keyCode === SPACE;\n\n        // Open the select on ALT + arrow key to match the native <select>\n        if (isOpenKey || ((this.multiple || event.altKey) && isArrowKey)) {\n            event.preventDefault(); // prevents the page from scrolling down when pressing space\n            this.open();\n        } else if (!this.multiple) {\n            this.keyManager.onKeydown(event);\n        }\n    }\n\n    /** Handles keyboard events when the selected is open. */\n    private handleOpenKeydown(event: KeyboardEvent): void {\n        /* tslint:disable-next-line */\n        const keyCode = event.keyCode;\n        const isArrowKey = keyCode === DOWN_ARROW || keyCode === UP_ARROW;\n        const manager = this.keyManager;\n\n        if (keyCode === HOME || keyCode === END) {\n            event.preventDefault();\n\n            if (keyCode === HOME) {\n                manager.setFirstItemActive();\n            } else {\n                manager.setLastItemActive();\n            }\n\n        } else if (isArrowKey && event.altKey) {\n            // Close the select on ALT + arrow key to match the native <select>\n            event.preventDefault();\n            this.close();\n        } else if ((keyCode === ENTER || keyCode === SPACE) && manager.activeItem) {\n            event.preventDefault();\n            manager.activeItem.selectViaInteraction();\n        } else if (this._multiple && keyCode === A && event.ctrlKey) {\n            event.preventDefault();\n            const hasDeselectedOptions = this.options.some((option) => !option.selected);\n            this.options.forEach((option) => {\n                if (hasDeselectedOptions && !option.disabled) {\n                    option.select();\n                } else {\n                    option.deselect();\n                }\n            });\n        } else {\n            const previouslyFocusedIndex = manager.activeItemIndex;\n\n            manager.onKeydown(event);\n\n            if (this._multiple && isArrowKey && event.shiftKey && manager.activeItem &&\n                manager.activeItemIndex !== previouslyFocusedIndex) {\n                manager.activeItem.selectViaInteraction();\n            }\n        }\n    }\n\n    private initializeSelection(): void {\n        // Defer setting the value in order to avoid the \"Expression\n        // has changed after it was checked\" errors from Angular.\n        Promise.resolve().then(() => {\n            this.setSelectionByValue(this.ngControl ? this.ngControl.value : this._value);\n        });\n    }\n\n    /**\n     * Sets the selected option based on a value. If no option can be\n     * found with the designated value, the select trigger is cleared.\n     */\n    private setSelectionByValue(value: any | any[]): void {\n        if (this.multiple && value) {\n            if (!Array.isArray(value)) {\n                throw getMcSelectNonArrayValueError();\n            }\n\n            this.selectionModel.clear();\n            value.forEach((currentValue: any) => this.selectValue(currentValue));\n            this.sortValues();\n        } else {\n            this.selectionModel.clear();\n            const correspondingOption = this.selectValue(value);\n\n            // Shift focus to the active item. Note that we shouldn't do this in multiple\n            // mode, because we don't know what option the user interacted with last.\n            if (correspondingOption) {\n                this.keyManager.setActiveItem(correspondingOption);\n            }\n        }\n\n        this._changeDetectorRef.markForCheck();\n    }\n\n    /**\n     * Finds and selects and option based on its value.\n     * @returns Option that has the corresponding value.\n     */\n    private selectValue(value: any): McOption | undefined {\n        const correspondingOption = this.options.find((option: McOption) => {\n            try {\n                // Treat null as a special reset value.\n                return option.value != null && this._compareWith(option.value, value);\n            } catch (error) {\n                if (isDevMode()) {\n                    // Notify developers of errors in their comparator.\n                    console.warn(error);\n                }\n\n                return false;\n            }\n        });\n\n        if (correspondingOption) {\n            this.selectionModel.select(correspondingOption);\n        }\n\n        return correspondingOption;\n    }\n\n    /** Sets up a key manager to listen to keyboard events on the overlay panel. */\n    private initKeyManager() {\n        this.keyManager = new ActiveDescendantKeyManager<McOption>(this.options)\n            .withTypeAhead()\n            .withVerticalOrientation()\n            .withHorizontalOrientation(this.isRtl() ? 'rtl' : 'ltr');\n\n        this.keyManager.tabOut\n            .pipe(takeUntil(this.destroy))\n            .subscribe(() => {\n                // Restore focus to the trigger before closing. Ensures that the focus\n                // position won't be lost if the user got focus into the overlay.\n                this.focus();\n                this.close();\n            });\n\n        this.keyManager.change\n            .pipe(takeUntil(this.destroy))\n            .subscribe(() => {\n                if (this._panelOpen && this.panel) {\n                    this.scrollActiveOptionIntoView();\n                } else if (!this._panelOpen && !this.multiple && this.keyManager.activeItem) {\n                    this.keyManager.activeItem.selectViaInteraction();\n                }\n            });\n    }\n\n    /** Drops current option subscriptions and IDs and resets from scratch. */\n    private resetOptions(): void {\n        const changedOrDestroyed = merge(this.options.changes, this.destroy);\n\n        this.optionSelectionChanges\n            .pipe(takeUntil(changedOrDestroyed))\n            .subscribe((event) => {\n                this.onSelect(event.source, event.isUserInput);\n\n                if (event.isUserInput && !this.multiple && this._panelOpen) {\n                    this.close();\n                    this.focus();\n                }\n            });\n\n        // Listen to changes in the internal state of the options and react accordingly.\n        // Handles cases like the labels of the selected options changing.\n        merge(...this.options.map((option) => option.stateChanges))\n            .pipe(takeUntil(changedOrDestroyed))\n            .subscribe(() => {\n                this._changeDetectorRef.markForCheck();\n                this.stateChanges.next();\n            });\n\n        this.setOptionIds();\n    }\n\n    /** Invoked when an option is clicked. */\n    private onSelect(option: McOption, isUserInput: boolean): void {\n        const wasSelected = this.selectionModel.isSelected(option);\n\n        if (option.value == null && !this._multiple) {\n            option.deselect();\n            this.selectionModel.clear();\n            this.propagateChanges(option.value);\n        } else {\n            if (option.selected) {\n                this.selectionModel.select(option);\n            } else {\n                this.selectionModel.deselect(option);\n            }\n\n            if (isUserInput) {\n                this.keyManager.setActiveItem(option);\n            }\n\n            if (this.multiple) {\n                this.sortValues();\n\n                if (isUserInput) {\n                    // In case the user selected the option with their mouse, we\n                    // want to restore focus back to the trigger, in order to\n                    // prevent the select keyboard controls from clashing with\n                    // the ones from `mc-option`.\n                    this.focus();\n                }\n            }\n        }\n\n        if (wasSelected !== this.selectionModel.isSelected(option)) {\n            this.propagateChanges();\n        }\n\n        this.stateChanges.next();\n    }\n\n    /** Sorts the selected values in the selected based on their order in the panel. */\n    private sortValues() {\n        if (this.multiple) {\n            const options = this.options.toArray();\n\n            this.selectionModel.sort((a, b) => {\n                return this.sortComparator ? this.sortComparator(a, b, options) :\n                    options.indexOf(a) - options.indexOf(b);\n            });\n            this.stateChanges.next();\n        }\n    }\n\n    /** Emits change event to set the model value. */\n    private propagateChanges(fallbackValue?: any): void {\n        let valueToEmit: any = null;\n\n        if (this.multiple) {\n            valueToEmit = (this.selected as McOption[]).map((option) => option.value);\n        } else {\n            valueToEmit = this.selected ? (this.selected as McOption).value : fallbackValue;\n        }\n\n        this._value = valueToEmit;\n        this.valueChange.emit(valueToEmit);\n        this._onChange(valueToEmit);\n        this.selectionChange.emit(new McSelectChange(this, valueToEmit));\n        this._changeDetectorRef.markForCheck();\n    }\n\n    /** Records option IDs to pass to the aria-owns property. */\n    private setOptionIds() {\n        this.optionIds = this.options.map((option) => option.id).join(' ');\n    }\n\n    /**\n     * Highlights the selected item. If no option is selected, it will highlight\n     * the first item instead.\n     */\n    private highlightCorrectOption(): void {\n        if (this.keyManager) {\n            if (this.empty) {\n                this.keyManager.setFirstItemActive();\n            } else {\n                this.keyManager.setActiveItem(this.selectionModel.selected[0]);\n            }\n        }\n    }\n\n    /** Scrolls the active option into view. */\n    private scrollActiveOptionIntoView(): void {\n        const activeOptionIndex = this.keyManager.activeItemIndex || 0;\n        const labelCount = countGroupLabelsBeforeOption(activeOptionIndex, this.options, this.optionGroups);\n\n        this.panel.nativeElement.scrollTop = getOptionScrollPosition(\n            activeOptionIndex + labelCount,\n            this.getItemHeight(),\n            this.panel.nativeElement.scrollTop,\n            SELECT_PANEL_MAX_HEIGHT\n        );\n    }\n\n    /** Gets the index of the provided option in the option list. */\n    private getOptionIndex(option: McOption): number | undefined {\n        /* tslint:disable-next-line */\n        return this.options.reduce((result: number, current: McOption, index: number) => {\n            /* tslint:disable-next-line:strict-type-predicates */\n            return result === undefined ? (option === current ? index : undefined) : result;\n        }, undefined);\n    }\n\n    /** Calculates the scroll position and x- and y-offsets of the overlay panel. */\n    private calculateOverlayPosition(): void {\n        const itemHeight = this.getItemHeight();\n        const items = this.getItemCount();\n        const panelHeight = Math.min(items * itemHeight, SELECT_PANEL_MAX_HEIGHT);\n        const scrollContainerHeight = items * itemHeight;\n\n        // The farthest the panel can be scrolled before it hits the bottom\n        const maxScroll = scrollContainerHeight - panelHeight;\n\n        // If no value is selected we open the popup to the first item.\n        let selectedOptionOffset =\n            this.empty ? 0 : this.getOptionIndex(this.selectionModel.selected[0])!;\n\n        selectedOptionOffset += countGroupLabelsBeforeOption(selectedOptionOffset, this.options, this.optionGroups);\n\n        // We must maintain a scroll buffer so the selected option will be scrolled to the\n        // center of the overlay panel rather than the top.\n        /* tslint:disable-next-line:no-magic-numbers */\n        const scrollBuffer = panelHeight / 2;\n        this.scrollTop = this.calculateOverlayScroll(selectedOptionOffset, scrollBuffer, maxScroll);\n        this.offsetY = this.calculateOverlayOffsetY();\n\n        this.checkOverlayWithinViewport(maxScroll);\n    }\n\n    /**\n     * Sets the x-offset of the overlay panel in relation to the trigger's top start corner.\n     * This must be adjusted to align the selected option text over the trigger text when\n     * the panel opens. Will change based on LTR or RTL text direction. Note that the offset\n     * can't be calculated until the panel has been attached, because we need to know the\n     * content width in order to constrain the panel within the viewport.\n     */\n    private calculateOverlayOffsetX(): void {\n        const overlayRect = this.overlayDir.overlayRef.overlayElement.getBoundingClientRect();\n        const viewportSize = this._viewportRuler.getViewportSize();\n        const isRtl = this.isRtl();\n        /* tslint:disable-next-line:no-magic-numbers */\n        const paddingWidth = SELECT_PANEL_PADDING_X * 2;\n        let offsetX: number;\n\n        const selected = this.selectionModel.selected[0] || this.options.first;\n        offsetX = selected && selected.group ? SELECT_PANEL_INDENT_PADDING_X : SELECT_PANEL_PADDING_X;\n\n        // Invert the offset in LTR.\n        if (!isRtl) { offsetX *= -1; }\n\n        // Determine how much the select overflows on each side.\n        const leftOverflow = 0 - (overlayRect.left + offsetX - (isRtl ? paddingWidth : 0));\n        const rightOverflow = overlayRect.right + offsetX - viewportSize.width\n            + (isRtl ? 0 : paddingWidth);\n\n        // If the element overflows on either side, reduce the offset to allow it to fit.\n        if (leftOverflow > 0) {\n            offsetX += leftOverflow + SELECT_PANEL_VIEWPORT_PADDING;\n        } else if (rightOverflow > 0) {\n            offsetX -= rightOverflow + SELECT_PANEL_VIEWPORT_PADDING;\n        }\n\n        // Set the offset directly in order to avoid having to go through change detection and\n        // potentially triggering \"changed after it was checked\" errors. Round the value to avoid\n        // blurry content in some browsers.\n        this.overlayDir.offsetX = Math.round(offsetX);\n        this.overlayDir.overlayRef.updatePosition();\n    }\n\n    /**\n     * Calculates the y-offset of the select's overlay panel in relation to the\n     * top start corner of the trigger. It has to be adjusted in order for the\n     * selected option to be aligned over the trigger when the panel opens.\n     */\n    private calculateOverlayOffsetY(): number {\n        // const itemHeight = this.getItemHeight();\n        // const optionHeightAdjustment = (itemHeight - this.triggerRect.height) / 2;\n\n        // todo I'm not sure that we will use it\n        return 0;\n        // return Math.round(-optionHeightAdjustment);\n    }\n\n    /**\n     * Checks that the attempted overlay position will fit within the viewport.\n     * If it will not fit, tries to adjust the scroll position and the associated\n     * y-offset so the panel can open fully on-screen. If it still won't fit,\n     * sets the offset back to 0 to allow the fallback position to take over.\n     */\n    private checkOverlayWithinViewport(maxScroll: number): void {\n        const itemHeight = this.getItemHeight();\n        const viewportSize = this._viewportRuler.getViewportSize();\n\n        const topSpaceAvailable = this.triggerRect.top - SELECT_PANEL_VIEWPORT_PADDING;\n        const bottomSpaceAvailable =\n            viewportSize.height - this.triggerRect.bottom - SELECT_PANEL_VIEWPORT_PADDING;\n\n        const panelHeightTop = Math.abs(this.offsetY);\n        const totalPanelHeight =\n            Math.min(this.getItemCount() * itemHeight, SELECT_PANEL_MAX_HEIGHT);\n        const panelHeightBottom = totalPanelHeight - panelHeightTop - this.triggerRect.height;\n\n        if (panelHeightBottom > bottomSpaceAvailable) {\n            this.adjustPanelUp(panelHeightBottom, bottomSpaceAvailable);\n        } else if (panelHeightTop > topSpaceAvailable) {\n            this.adjustPanelDown(panelHeightTop, topSpaceAvailable, maxScroll);\n        } else {\n            this.transformOrigin = this.getOriginBasedOnOption();\n        }\n    }\n\n    /** Adjusts the overlay panel up to fit in the viewport. */\n    private adjustPanelUp(panelHeightBottom: number, bottomSpaceAvailable: number) {\n        // Browsers ignore fractional scroll offsets, so we need to round.\n        const distanceBelowViewport = Math.round(panelHeightBottom - bottomSpaceAvailable);\n\n        // Scrolls the panel up by the distance it was extending past the boundary, then\n        // adjusts the offset by that amount to move the panel up into the viewport.\n        this.scrollTop -= distanceBelowViewport;\n        this.offsetY -= distanceBelowViewport;\n        this.transformOrigin = this.getOriginBasedOnOption();\n\n        // If the panel is scrolled to the very top, it won't be able to fit the panel\n        // by scrolling, so set the offset to 0 to allow the fallback position to take\n        // effect.\n        if (this.scrollTop <= 0) {\n            this.scrollTop = 0;\n            this.offsetY = 0;\n            this.transformOrigin = `50% bottom 0px`;\n        }\n    }\n\n    /** Adjusts the overlay panel down to fit in the viewport. */\n    private adjustPanelDown(panelHeightTop: number, topSpaceAvailable: number, maxScroll: number) {\n        // Browsers ignore fractional scroll offsets, so we need to round.\n        const distanceAboveViewport = Math.round(panelHeightTop - topSpaceAvailable);\n\n        // Scrolls the panel down by the distance it was extending past the boundary, then\n        // adjusts the offset by that amount to move the panel down into the viewport.\n        this.scrollTop += distanceAboveViewport;\n        this.offsetY += distanceAboveViewport;\n        this.transformOrigin = this.getOriginBasedOnOption();\n\n        // If the panel is scrolled to the very bottom, it won't be able to fit the\n        // panel by scrolling, so set the offset to 0 to allow the fallback position\n        // to take effect.\n        if (this.scrollTop >= maxScroll) {\n            this.scrollTop = maxScroll;\n            this.offsetY = 0;\n            this.transformOrigin = `50% top 0px`;\n\n            return;\n        }\n    }\n\n    /** Sets the transform origin point based on the selected option. */\n    private getOriginBasedOnOption(): string {\n        const itemHeight = this.getItemHeight();\n        /* tslint:disable-next-line:no-magic-numbers */\n        const optionHeightAdjustment = (itemHeight - this.triggerRect.height) / 2;\n        /* tslint:disable-next-line:no-magic-numbers */\n        const originY = Math.abs(this.offsetY) - optionHeightAdjustment + itemHeight / 2;\n\n        return `50% ${originY}px 0px`;\n    }\n\n    /** Calculates the amount of items in the select. This includes options and group labels. */\n    private getItemCount(): number {\n        return this.options.length + this.optionGroups.length;\n    }\n\n    /** Calculates the height of the select's options. */\n    private getItemHeight(): number {\n        // todo доделать\n        /* tslint:disable-next-line:no-magic-numbers */\n        return 32;\n        // return this.triggerFontSize * SELECT_ITEM_HEIGHT_EM;\n    }\n\n    /** Comparison function to specify which option is displayed. Defaults to object equality. */\n    private _compareWith = (o1: any, o2: any) => o1 === o2;\n}\n","export enum TimeParts {\n    hours,\n    minutes,\n    seconds\n}\n\nexport enum TimeFormats {\n    HHmmss = 'HH:mm:ss',\n    HHmm = 'HH:mm'\n}\n\nexport const TIMEFORMAT_PLACEHOLDERS: { [timeFormat: string]: string } = {\n    [TimeFormats.HHmmss]: '  :  :  ',\n    [TimeFormats.HHmm]: '  :  '\n};\n\nexport const DEFAULT_TIME_FORMAT: TimeFormats = TimeFormats.HHmm;\n\nexport const HOURS_MINUTES_SECONDS_REGEXP =\n    new RegExp(/^([0-9]|0[0-9]|1[0-9]|2[0-3]):([0-5][0-9]|[0-9]):([0-5][0-9]|[0-9])?$/);\nexport const HOURS_MINUTES_REGEXP = /^([0-9]|0[0-9]|1[0-9]|2[0-3]):([0-5][0-9]|[0-9])?$/;\nexport const HOURS_ONLY_REGEXP = /^([0-9]|0[0-9]|1[0-9]|2[0-3]):?$/;\n\nexport const SECONDS_PER_MINUTE: number = 59;\nexport const MINUTES_PER_HOUR: number = 59;\nexport const HOURS_PER_DAY: number = 23;\n\n// TODO Move it to common CDK\nexport const ARROW_UP_KEYCODE: string = 'ArrowUp';\nexport const ARROW_DOWN_KEYCODE: string = 'ArrowDown';\nexport const ARROW_LEFT_KEYCODE: string = 'ArrowLeft';\nexport const ARROW_RIGHT_KEYCODE: string = 'ArrowRight';\n","import { AnimationEvent } from '@angular/animations';\nimport {\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    ComponentRef,\n    ElementRef,\n    EmbeddedViewRef,\n    EventEmitter, Inject, InjectionToken,\n    OnDestroy,\n    ViewChild,\n    ViewEncapsulation\n} from '@angular/core';\n\nimport { BasePortalOutlet, CdkPortalOutlet, ComponentPortal, TemplatePortal } from '@ptsecurity/cdk/portal';\n\nimport {\n    mcSidepanelAnimations,\n    McSidepanelAnimationState,\n    mcSidepanelTransformAnimation\n} from './sidepanel-animations';\n\nimport { McSidepanelConfig, McSidepanelPosition } from './sidepanel-config';\n\n\nexport const MC_SIDEPANEL_WITH_INDENT =\n    new InjectionToken<boolean>('mc-sidepanel-with-indent');\n\nexport const MC_SIDEPANEL_WITH_SHADOW =\n    new InjectionToken<boolean>('mc-sidepanel-with-shadow');\n\n@Component({\n    selector: 'mc-sidepanel-container',\n    templateUrl: './sidepanel-container.component.html',\n    styleUrls: ['./sidepanel.css'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n    animations: [mcSidepanelAnimations.sidepanelState],\n    host: {\n        class: 'mc-sidepanel-container',\n        tabindex: '-1',\n        role: 'dialog',\n        'aria-modal': 'true',\n        '[attr.id]': 'id',\n        '[@state]': `{\n            value: animationState,\n            params: animationTransform\n        }`,\n        '(@state.start)': 'onAnimation($event)',\n        '(@state.done)': 'onAnimation($event)'\n    }\n})\nexport class McSidepanelContainerComponent extends BasePortalOutlet implements OnDestroy {\n    /** ID for the container DOM element. */\n    id: string;\n\n    /** The portal outlet inside of this container into which the content will be loaded. */\n    @ViewChild(CdkPortalOutlet) portalOutlet: CdkPortalOutlet;\n\n    /** The state of the sidepanel animations. */\n    animationState: McSidepanelAnimationState = McSidepanelAnimationState.Void;\n\n    animationTransform: { transformIn: string; transformOut: string };\n\n    /** Emits whenever the state of the animation changes. */\n    animationStateChanged = new EventEmitter<AnimationEvent>();\n\n    /** Whether the component has been destroyed. */\n    private destroyed: boolean;\n\n    constructor(\n        private elementRef: ElementRef<HTMLElement>,\n        private changeDetectorRef: ChangeDetectorRef,\n        public sidepanelConfig: McSidepanelConfig,\n        @Inject(MC_SIDEPANEL_WITH_INDENT) public withIndent: boolean,\n        @Inject(MC_SIDEPANEL_WITH_SHADOW) public withShadow: boolean) {\n        super();\n    }\n\n    ngOnDestroy(): void {\n        this.destroyed = true;\n    }\n\n    /** Attach a component portal as content to this sidepanel container. */\n    attachComponentPortal<T>(portal: ComponentPortal<T>): ComponentRef<T> {\n        this.validatePortalAttached();\n        this.setAnimation();\n        this.setPanelClass();\n\n        return this.portalOutlet.attachComponentPortal(portal);\n    }\n\n    /** Attach a template portal as content to this sidepanel container. */\n    attachTemplatePortal<C>(portal: TemplatePortal<C>): EmbeddedViewRef<C> {\n        this.validatePortalAttached();\n        this.setAnimation();\n        this.setPanelClass();\n\n        return this.portalOutlet.attachTemplatePortal(portal);\n    }\n\n    /** Begin animation of the sidepanel entrance into view. */\n    enter(): void {\n        if (!this.destroyed) {\n            this.animationState = McSidepanelAnimationState.Visible;\n            this.changeDetectorRef.detectChanges();\n        }\n    }\n\n    /** Begin animation of the sidepanel exiting from view. */\n    exit(): void {\n        if (!this.destroyed) {\n            this.animationState = McSidepanelAnimationState.Hidden;\n            this.changeDetectorRef.markForCheck();\n        }\n    }\n\n    onAnimation(event: AnimationEvent) {\n        this.animationStateChanged.emit(event);\n    }\n\n    private setAnimation() {\n        const position: McSidepanelPosition = this.sidepanelConfig.position!;\n\n        this.animationTransform = {\n            transformIn: mcSidepanelTransformAnimation[position].in,\n            transformOut: mcSidepanelTransformAnimation[position].out\n        };\n    }\n\n    private setPanelClass() {\n        const element: HTMLElement = this.elementRef.nativeElement;\n        const position: McSidepanelPosition = this.sidepanelConfig.position!;\n\n        element.classList.add(`mc-sidepanel-container_${position}`);\n\n        if (this.withShadow) {\n            element.classList.add('mc-sidepanel-container_shadowed');\n        }\n    }\n\n    private validatePortalAttached() {\n        if (this.portalOutlet.hasAttached()) {\n            throw Error('Attempting to attach sidepanel content after content is already attached');\n        }\n    }\n}\n","import { ESCAPE } from '@ptsecurity/cdk/keycodes';\nimport { OverlayRef } from '@ptsecurity/cdk/overlay';\nimport { merge, Observable, Subject } from 'rxjs';\nimport { filter, take } from 'rxjs/operators';\n\nimport { McSidepanelAnimationState } from './sidepanel-animations';\nimport { McSidepanelConfig } from './sidepanel-config';\nimport { McSidepanelContainerComponent } from './sidepanel-container.component';\n\n\n// Counter for unique sidepanel ids.\nlet uniqueId = 0;\n\nexport class McSidepanelRef<T = any, R = any> {\n    readonly id: string;\n\n    /** Instance of the component making up the content of the sidepanel. */\n    instance: T;\n\n    /** Subject for notifying the user that the sidepanel has been closed and dismissed. */\n    private readonly afterClosed$ = new Subject<R | undefined>();\n\n    /** Subject for notifying the user that the sidepanel has opened and appeared. */\n    private readonly afterOpened$ = new Subject<void>();\n\n    /** Result to be passed down to the `afterDismissed` stream. */\n    private result: R | undefined;\n\n    constructor(\n        public containerInstance: McSidepanelContainerComponent,\n        private overlayRef: OverlayRef,\n        public config: McSidepanelConfig) {\n\n        this.id = this.config.id || `mc-sidepanel-${uniqueId++}`;\n        this.containerInstance.id = this.id;\n\n        // Emit when opening animation completes\n        containerInstance.animationStateChanged.pipe(\n            filter(\n                (event) => event.phaseName === 'done' && event.toState === McSidepanelAnimationState.Visible\n            ),\n            take(1)\n        ).subscribe(() => {\n            this.afterOpened$.next();\n            this.afterOpened$.complete();\n        });\n\n        // Dispose overlay when closing animation is complete\n        containerInstance.animationStateChanged.pipe(\n            filter(\n                (event) => event.phaseName === 'done' && event.toState === McSidepanelAnimationState.Hidden\n            ),\n            take(1)\n        ).subscribe(() => {\n            overlayRef.dispose();\n            this.afterClosed$.next(this.result);\n            this.afterClosed$.complete();\n        });\n\n        if (!containerInstance.sidepanelConfig.disableClose) {\n            merge(\n                overlayRef.backdropClick(),\n                overlayRef.keydownEvents().pipe(\n                    // tslint:disable:deprecation\n                    // keyCode is deprecated, but IE11 and Edge don't support code property, which we need use instead\n                    filter((event) => event.keyCode === ESCAPE)\n                )\n            ).subscribe(() => this.close());\n        }\n    }\n\n    close(result?: R): void {\n        if (!this.afterClosed$.closed) {\n            // Transition the backdrop in parallel to the sidepanel.\n            this.containerInstance.animationStateChanged.pipe(\n                filter((event) => event.phaseName === 'done'),\n                take(1)\n            ).subscribe(() => this.overlayRef.detachBackdrop());\n\n            this.result = result;\n            this.containerInstance.exit();\n        }\n    }\n\n    /** Gets an observable that is notified when the sidepanel is finished closing. */\n    afterClosed(): Observable<R | undefined> {\n        return this.afterClosed$.asObservable();\n    }\n\n    /** Gets an observable that is notified when the sidepanel has opened and appeared. */\n    afterOpened(): Observable<void> {\n        return this.afterOpened$.asObservable();\n    }\n}\n","import {\n    ComponentRef,\n    Inject,\n    Injectable,\n    InjectionToken,\n    Injector, OnDestroy,\n    Optional,\n    SkipSelf,\n    TemplateRef\n} from '@angular/core';\nimport { Overlay, OverlayConfig, OverlayRef } from '@ptsecurity/cdk/overlay';\nimport { ComponentPortal, IComponentType, PortalInjector, TemplatePortal } from '@ptsecurity/cdk/portal';\n\nimport { MC_SIDEPANEL_DATA, McSidepanelConfig } from './sidepanel-config';\nimport {\n    McSidepanelContainerComponent,\n    MC_SIDEPANEL_WITH_INDENT,\n    MC_SIDEPANEL_WITH_SHADOW\n} from './sidepanel-container.component';\nimport { McSidepanelRef } from './sidepanel-ref';\n\n\n/** Injection token that can be used to specify default sidepanel options. */\nexport const MC_SIDEPANEL_DEFAULT_OPTIONS =\n    new InjectionToken<McSidepanelConfig>('mc-sidepanel-default-options');\n\n@Injectable()\nexport class McSidepanelService implements OnDestroy {\n    private openedSidepanelsAtThisLevel: McSidepanelRef[] = [];\n\n    /** Keeps track of the currently-open sidepanels. */\n    get openedSidepanels(): McSidepanelRef[] {\n        return this.parentSidepanelService ? this.parentSidepanelService.openedSidepanels :\n            this.openedSidepanelsAtThisLevel;\n    }\n\n    constructor(\n        private overlay: Overlay,\n        private injector: Injector,\n        @Optional() @Inject(MC_SIDEPANEL_DEFAULT_OPTIONS) private defaultOptions: McSidepanelConfig,\n        @Optional() @SkipSelf() private parentSidepanelService: McSidepanelService) {\n    }\n\n    ngOnDestroy() {\n        // Only close the sidepanels at this level on destroy\n        // since the parent service may still be active.\n        this.closeSidepanels(this.openedSidepanelsAtThisLevel);\n    }\n\n    open<T, D = any>(componentOrTemplateRef: IComponentType<T> | TemplateRef<T>,\n                     config?: McSidepanelConfig<D>): McSidepanelRef<T> {\n        const fullConfig = {\n            ...(this.defaultOptions || new McSidepanelConfig()),\n            ...config\n        };\n\n        if (fullConfig.id && this.getSidepanelById(fullConfig.id)) {\n            throw Error(`Sidepanel with id \"${fullConfig.id}\" exists already. The sidepanel id must be unique.`);\n        }\n\n        const overlayRef = this.createOverlay(fullConfig);\n        const container = this.attachContainer(overlayRef, fullConfig);\n        const ref = new McSidepanelRef(container, overlayRef, fullConfig);\n\n        if (componentOrTemplateRef instanceof TemplateRef) {\n            container.attachTemplatePortal(new TemplatePortal<T>(componentOrTemplateRef, null!, {\n                $implicit: fullConfig.data,\n                sidepanelRef: ref\n            } as any));\n        } else {\n            const injector = this.createInjector(fullConfig, ref, container);\n            const portal = new ComponentPortal(componentOrTemplateRef, undefined, injector);\n            const contentRef = container.attachComponentPortal(portal);\n\n            ref.instance = contentRef.instance;\n        }\n\n        this.openedSidepanels.push(ref);\n        ref.afterClosed().subscribe(() => this.removeOpenSidepanel(ref));\n        container.enter();\n\n        return ref;\n    }\n\n    /**\n     * Closes all of the currently-open sidepanels.\n     */\n    closeAll(): void {\n        this.closeSidepanels(this.openedSidepanels);\n    }\n\n    /**\n     * Finds an open sidepanel by its id.\n     * @param id ID to use when looking up the sidepanel.\n     */\n    getSidepanelById(id: string): McSidepanelRef | undefined {\n        return this.openedSidepanels.find((sidepanel) => sidepanel.id === id);\n    }\n\n    /**\n     * Attaches the sidepanel container component to the overlay.\n     */\n    private attachContainer(overlayRef: OverlayRef, config: McSidepanelConfig): McSidepanelContainerComponent {\n        const openedSidepanelsWithSamePosition = this.getOpenedSidepanelsWithSamePosition(config);\n\n        const injector = new PortalInjector(this.injector, new WeakMap<any>([\n            [McSidepanelConfig, config],\n            [MC_SIDEPANEL_WITH_INDENT, openedSidepanelsWithSamePosition.length >= 1],\n            [MC_SIDEPANEL_WITH_SHADOW, openedSidepanelsWithSamePosition.length < 2] // tslint:disable-line\n        ]));\n\n        const containerPortal = new ComponentPortal(McSidepanelContainerComponent, undefined, injector);\n        const containerRef: ComponentRef<McSidepanelContainerComponent> = overlayRef.attach(containerPortal);\n\n        return containerRef.instance;\n    }\n\n    /**\n     * Creates a custom injector to be used inside the sidepanel. This allows a component loaded inside\n     * of a sidepanel to close itself and, optionally, to return a value.\n     * @param config Config object that is used to construct the sidepanel.\n     * @param sidepanelRef Reference to the sidepanel.\n     * @param sidepanelContainer Sidepanel container element that wraps all of the contents.\n     * @returns The custom injector that can be used inside the sidepanel.\n     */\n    private createInjector<T>(\n        config: McSidepanelConfig,\n        sidepanelRef: McSidepanelRef<T>,\n        sidepanelContainer: McSidepanelContainerComponent): PortalInjector {\n\n        // The McSidepanelContainerComponent is injected in the portal as the McSidepanelContainerComponent and\n        // the sidepanel's content are created out of the same ViewContainerRef and as such, are siblings for injector\n        // purposes. To allow the hierarchy that is expected, the McSidepanelContainerComponent is explicitly\n        // added to the injection tokens.\n        const injectionTokens = new WeakMap<any>([\n            [McSidepanelContainerComponent, sidepanelContainer],\n            [MC_SIDEPANEL_DATA, config.data],\n            [McSidepanelRef, sidepanelRef]\n        ]);\n\n        return new PortalInjector(this.injector, injectionTokens);\n    }\n\n    /**\n     * Creates a new overlay and places it in the correct location.\n     * @param config The user-specified sidepanel config.\n     */\n    private createOverlay(config: McSidepanelConfig): OverlayRef {\n        const overlayConfig = new OverlayConfig({\n            hasBackdrop: config.hasBackdrop,\n            backdropClass: this.getBackdropClass(config),\n            maxWidth: '100%',\n            panelClass: config.overlayPanelClass,\n            scrollStrategy: this.overlay.scrollStrategies.block(),\n            positionStrategy: this.overlay.position().global()\n        });\n\n        return this.overlay.create(overlayConfig);\n    }\n\n    private closeSidepanels(sidepanels: McSidepanelRef[]) {\n        const reversedOpenedSidepanels = [...sidepanels.reverse()];\n\n        reversedOpenedSidepanels.forEach((sidepanelRef: McSidepanelRef) => {\n            sidepanelRef.close();\n        });\n    }\n\n    private getBackdropClass(config: McSidepanelConfig): string {\n        const hasOpenedSidepanelWithBackdrop =\n            this.openedSidepanels.some((sidepanelRef) => sidepanelRef.config.hasBackdrop!);\n\n        return config.requiredBackdrop || !hasOpenedSidepanelWithBackdrop ? 'cdk-overlay-dark-backdrop' :\n            'cdk-overlay-transparent-backdrop';\n    }\n\n    private getOpenedSidepanelsWithSamePosition(config: McSidepanelConfig): McSidepanelRef[] {\n        return this.openedSidepanels.filter((sidepanelRef) => sidepanelRef.config.position === config.position);\n    }\n\n    /**\n     * Removes a sidepanel from the array of open sidepanels.\n     * @param sidepanelRef Sidepanel to be removed.\n     */\n    private removeOpenSidepanel(sidepanelRef: McSidepanelRef) {\n        const index = this.openedSidepanels.indexOf(sidepanelRef);\n\n        if (index > -1) {\n            this.openedSidepanels.splice(index, 1);\n        }\n    }\n}\n","import { Component, Directive, ElementRef, Input, OnChanges, OnInit, Optional, SimpleChanges } from '@angular/core';\n\nimport { McSidepanelRef } from './sidepanel-ref';\nimport { McSidepanelService } from './sidepanel.service';\n\n\n/**\n * Button that will close the current sidepanel.\n */\n@Directive({\n    selector: 'button[mc-sidepanel-close], button[mcSidepanelClose]',\n    host: {\n        '(click)': 'sidepanelRef.close(sidepanelResult)',\n        class: 'mc-sidepanel-close',\n        type: 'button'\n    }\n})\nexport class McSidepanelClose implements OnInit, OnChanges {\n    @Input('mc-sidepanel-close') sidepanelResult: any;\n\n    @Input('mcSidepanelClose') mcSidepanelClose: any;\n\n    constructor(\n        @Optional() public sidepanelRef: McSidepanelRef,\n        private elementRef: ElementRef<HTMLElement>,\n        private sidepanelService: McSidepanelService\n    ) {}\n\n    ngOnInit() {\n        if (!this.sidepanelRef) {\n            // When this directive is included in a sidepanel via TemplateRef (rather than being\n            // in a Component), the SidepanelRef isn't available via injection because embedded\n            // views cannot be given a custom injector. Instead, we look up the SidepanelRef by\n            // ID.\n            // This must occur in `onInit`, as the ID binding for the sidepanel container won't\n            // be resolved at constructor time. We use setTimeout by same reason.\n            setTimeout(() => {\n                this.sidepanelRef = getClosestSidepanel(this.elementRef, this.sidepanelService.openedSidepanels)!;\n            });\n        }\n    }\n\n    ngOnChanges(changes: SimpleChanges) {\n        const proxiedChange = changes.mcSidepanelClose || changes.sidepanelResult;\n\n        if (proxiedChange) {\n            this.sidepanelResult = proxiedChange.currentValue;\n        }\n    }\n}\n\n/**\n * Header of a sidepanel.\n */\n@Component({\n    selector: 'mc-sidepanel-header',\n    template: `\n        <div class=\"mc-sidepanel-title\">\n            <ng-content></ng-content>\n        </div>\n        <button *ngIf=\"closeable\" mc-sidepanel-close>\n            <span class=\"mc-sidepanel-close-x\">\n                <i mc-icon=\"mc-close-L_16\" class=\"mc-icon mc-icon_light\" color=\"second\"></i>\n            </span>\n        </button>\n    `,\n    host: {\n        class: 'mc-sidepanel-header'\n    }\n})\nexport class McSidepanelHeader {\n    @Input() closeable: boolean;\n}\n\n/**\n * Scrollable content container of a sidepanel.\n */\n@Directive({\n    selector: 'mc-sidepanel-body, [mc-sidepanel-body], mcSidepanelBody',\n    host: {\n        class: 'mc-sidepanel-body'\n    }\n})\nexport class McSidepanelBody {}\n\n/**\n * Footer of a sidepanel.\n */\n@Directive({\n    selector: 'mc-sidepanel-footer, [mc-sidepanel-footer], mcSidepanelFooter',\n    host: {\n        class: 'mc-sidepanel-footer'\n    }\n})\nexport class McSidepanelFooter {}\n\n/**\n * Actions block of a sidepanel footer.\n */\n@Directive({\n    selector: 'mc-sidepanel-actions, [mc-sidepanel-actions], mcSidepanelActions',\n    host: {\n        class: 'mc-sidepanel-actions'\n    }\n})\nexport class McSidepanelActions {}\n\n/**\n * Finds the closest McSidepanelRef to an element by looking at the DOM.\n * @param element Element relative to which to look for a sidepanel.\n * @param openSidepanels References to the currently-open sidepanels.\n */\nfunction getClosestSidepanel(element: ElementRef<HTMLElement>, openSidepanels: McSidepanelRef[]) {\n    let parent: HTMLElement | null = element.nativeElement.parentElement;\n\n    while (parent && !parent.classList.contains('mc-sidepanel-container')) {\n        parent = parent.parentElement;\n    }\n\n    return parent ? openSidepanels.find((sidepanel) => sidepanel.id === parent!.id) : null;\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { OverlayModule } from '@ptsecurity/cdk/overlay';\nimport { PortalModule } from '@ptsecurity/cdk/portal';\nimport { McCommonModule } from '@ptsecurity/mosaic/core';\nimport { McIconModule } from '@ptsecurity/mosaic/icon';\n\nimport { McSidepanelContainerComponent } from './sidepanel-container.component';\nimport {\n    McSidepanelActions,\n    McSidepanelBody,\n    McSidepanelClose,\n    McSidepanelFooter,\n    McSidepanelHeader\n} from './sidepanel-directives';\nimport { McSidepanelService } from './sidepanel.service';\n\n\n@NgModule({\n    imports: [\n        CommonModule,\n        OverlayModule,\n        PortalModule,\n        McCommonModule,\n        McIconModule\n    ],\n    providers: [McSidepanelService],\n    declarations: [\n        McSidepanelContainerComponent,\n        McSidepanelClose,\n        McSidepanelHeader,\n        McSidepanelBody,\n        McSidepanelFooter,\n        McSidepanelActions\n    ],\n    entryComponents: [McSidepanelContainerComponent],\n    exports: [\n        McSidepanelContainerComponent,\n        McSidepanelClose,\n        McSidepanelHeader,\n        McSidepanelBody,\n        McSidepanelFooter,\n        McSidepanelActions\n    ]\n})\nexport class McSidepanelModule {}\n","import {\n    ChangeDetectionStrategy,\n    Component,\n    Directive,\n    ElementRef,\n    Input,\n    NgZone, OnDestroy,\n    OnInit,\n    Renderer2,\n    ViewEncapsulation\n} from '@angular/core';\n\nimport { coerceBooleanProperty, coerceCssPixelValue, coerceNumberProperty } from '@ptsecurity/cdk/coercion';\n\n\ninterface IArea {\n    area: McSplitterAreaDirective;\n    index: number;\n    order: number;\n    initialSize: number;\n}\n\ninterface IPoint {\n    x: number;\n    y: number;\n}\n\n\nconst enum AttributeProperty {\n    Disabled = 'disabled'\n}\n\nconst enum Cursor {\n    Default = 'default',\n    ResizeColumn = 'col-resize',\n    ResizeRow = 'row-resize'\n}\n\nconst enum StyleProperty {\n    Cursor = 'cursor',\n    Flex = 'flex',\n    FlexBasis = 'flex-basis',\n    FlexDirection = 'flex-direction',\n    Height = 'height',\n    MaxWidth = 'max-width',\n    MinHeight = 'min-height',\n    MinWidth = 'minWidth',\n    OffsetHeight = 'offsetHeight',\n    OffsetWidth = 'offsetWidth',\n    Order = 'order',\n    Width = 'width'\n}\n\nconst enum State {\n    Disabled = 'disabled',\n    Horizontal = 'horizontal',\n    Vertical = 'vertical'\n}\n\nexport const enum Direction {\n    Horizontal = 'horizontal',\n    Vertical = 'vertical'\n}\n\n@Component({\n    selector: 'mc-splitter',\n    preserveWhitespaces: false,\n    styleUrls: ['splitter.css'],\n    templateUrl: './splitter.component.html',\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class McSplitterComponent implements OnInit {\n    readonly areas: IArea[] = [];\n\n    private _direction: Direction;\n    private _disabled: boolean = false;\n    private _gutterSize: number = 6;\n\n    private isDragging: boolean = false;\n\n    private readonly areaPositionDivider: number = 2;\n    private readonly listeners: (() => void)[] = [];\n\n    @Input()\n    set direction(direction: Direction) {\n        this._direction = direction;\n    }\n\n    get direction(): Direction {\n        return this._direction;\n    }\n\n    @Input()\n    set disabled(disabled: boolean) {\n        this._disabled = coerceBooleanProperty(disabled);\n    }\n\n    get disabled(): boolean {\n        return this._disabled;\n    }\n\n    @Input()\n    set gutterSize(gutterSize: number) {\n        const size = coerceNumberProperty(gutterSize);\n        this._gutterSize = size > 0 ? size : this.gutterSize;\n    }\n\n    get gutterSize(): number {\n        return this._gutterSize;\n    }\n\n    constructor(private elementRef: ElementRef,\n                private ngZone: NgZone,\n                private renderer: Renderer2) {}\n\n    addArea(area: McSplitterAreaDirective): void {\n        const index: number = this.areas.length;\n        const order: number = index * this.areaPositionDivider;\n        const size: number = area.getSize();\n\n        area.setOrder(order);\n\n        this.areas.push({\n            area,\n            index,\n            order,\n            initialSize: size\n        });\n    }\n\n    ngOnInit(): void {\n        if (!this.direction) {\n            this.direction = Direction.Horizontal;\n        }\n\n        this.setStyle(StyleProperty.FlexDirection, this.isVertical() ? 'column' : 'row');\n    }\n\n    onMouseDown(event: MouseEvent, leftAreaIndex: number, rightAreaIndex: number) {\n        if (this.disabled) {\n            return;\n        }\n\n        const leftArea = this.areas[leftAreaIndex];\n        const rightArea = this.areas[rightAreaIndex];\n\n        const startPoint: IPoint = {\n            x: event.screenX,\n            y: event.screenY\n        };\n\n        leftArea.initialSize = leftArea.area.getSize();\n        rightArea.initialSize = rightArea.area.getSize();\n\n        this.areas.forEach((item) => {\n            const size = item.area.getSize();\n            item.area.disableFlex();\n            item.area.setSize(size);\n        });\n\n        this.ngZone.runOutsideAngular(() => {\n            this.listeners.push(\n                this.renderer.listen(\n                    'document',\n                    'mouseup',\n                    () => this.onMouseUp()\n                )\n            );\n        });\n\n        this.ngZone.runOutsideAngular(() => {\n            this.listeners.push(\n                this.renderer.listen(\n                    'document',\n                    'mousemove',\n                    (e: MouseEvent) => this.onMouseMove(e, startPoint, leftArea, rightArea)\n                )\n            );\n        });\n\n        this.isDragging = true;\n    }\n\n    removeArea(area: McSplitterAreaDirective): void {\n        let indexToRemove: number = -1;\n\n        this.areas.some((item, index) => {\n            if (item.area === area) {\n                indexToRemove = index;\n\n                return true;\n            }\n\n            return false;\n        });\n\n        if (indexToRemove === -1) {\n            return;\n        }\n\n        this.areas.splice(indexToRemove, 1);\n    }\n\n    private isVertical(): boolean {\n        return this.direction === Direction.Vertical;\n    }\n\n    private onMouseMove(event: MouseEvent, startPoint: IPoint, leftArea: IArea, rightArea: IArea) {\n        if (!this.isDragging || this.disabled) {\n            return;\n        }\n\n        const endPoint: IPoint = {\n            x: event.screenX,\n            y: event.screenY\n        };\n\n        const offset = this.isVertical()\n            ? startPoint.y - endPoint.y\n            : startPoint.x - endPoint.x;\n\n        const newLeftAreaSize = leftArea.initialSize - offset;\n        const newRightAreaSize = rightArea.initialSize + offset;\n\n        const minLeftAreaSize = leftArea.area.getMinSize();\n        const minRightAreaSize = rightArea.area.getMinSize();\n\n        if (newLeftAreaSize <= minLeftAreaSize || newRightAreaSize <= minRightAreaSize) {\n            const rightAreaOffset = leftArea.initialSize - minLeftAreaSize;\n\n            leftArea.area.setSize(minLeftAreaSize);\n            rightArea.area.setSize(rightArea.initialSize + rightAreaOffset);\n        } else if (newLeftAreaSize <= 0) {\n            leftArea.area.setSize(0);\n            rightArea.area.setSize(rightArea.initialSize + leftArea.initialSize);\n        } else if (newRightAreaSize <= 0) {\n            leftArea.area.setSize(rightArea.initialSize + leftArea.initialSize);\n            rightArea.area.setSize(0);\n        } else {\n            leftArea.area.setSize(newLeftAreaSize);\n            rightArea.area.setSize(newRightAreaSize);\n        }\n    }\n\n    private onMouseUp() {\n        while (this.listeners.length > 0) {\n            const unsubscribe = this.listeners.pop();\n\n            if (unsubscribe) {\n                unsubscribe();\n            }\n        }\n\n        this.isDragging = false;\n    }\n\n    private setStyle(property: StyleProperty, value: string | number) {\n        this.renderer.setStyle(this.elementRef.nativeElement, property, value);\n    }\n}\n\n@Directive({\n    selector: 'mc-gutter'\n})\nexport class McGutterDirective implements OnInit {\n    private _direction: Direction = Direction.Vertical;\n    private _disabled: boolean = false;\n    private _order: number = 0;\n    private _size: number = 6;\n\n    @Input()\n    set direction(direction: Direction) {\n        this._direction = direction;\n    }\n\n    get direction(): Direction {\n        return this._direction;\n    }\n\n    @Input()\n    set disabled(disabled: boolean) {\n        this._disabled = coerceBooleanProperty(disabled);\n    }\n\n    get disabled(): boolean {\n        return this._disabled;\n    }\n\n    @Input()\n    set order(order: number) {\n        this._order = coerceNumberProperty(order);\n    }\n\n    get order(): number {\n        return this._order;\n    }\n\n    @Input()\n    set size(size: number) {\n        this._size = coerceNumberProperty(size);\n    }\n\n    get size(): number {\n        return this._size;\n    }\n\n    constructor(private renderer: Renderer2,\n                private elementRef: ElementRef) {\n    }\n\n    ngOnInit(): void {\n        this.setStyle(StyleProperty.Cursor, this.getCursor(this.getState()));\n        this.setStyle(StyleProperty.FlexBasis, coerceCssPixelValue(this.size));\n        this.setStyle(this.isVertical() ? StyleProperty.Height : StyleProperty.Width, coerceCssPixelValue(this.size));\n        this.setStyle(StyleProperty.Order, this.order);\n\n        if (!this.isVertical()) {\n            this.setStyle(StyleProperty.Height, '100%');\n        }\n\n        if (this.disabled) {\n            this.setAttr(AttributeProperty.Disabled, 'true');\n        }\n\n        // fix IE issue with gutter icon. flex-direction is requied for flex alignment options\n        this.setStyle(StyleProperty.FlexDirection, this.isVertical() ? 'row' : 'column');\n    }\n\n    private isVertical(): boolean {\n        return this.direction === Direction.Vertical;\n    }\n\n    private getCursor(state: State): string {\n        switch (state) {\n            case State.Disabled:\n                return Cursor.Default;\n            case State.Vertical:\n                return  Cursor.ResizeRow;\n            case State.Horizontal:\n                return Cursor.ResizeColumn;\n            default:\n                throw Error(`Unknown gutter state for cursor: ${state}`);\n        }\n    }\n\n    private getState(): State {\n        return this.disabled\n            ? State.Disabled\n            : this.direction === Direction.Vertical\n                ? State.Vertical\n                : State.Horizontal;\n    }\n\n    private setStyle(property: StyleProperty, value: string | number) {\n        this.renderer.setStyle(this.elementRef.nativeElement, property, value);\n    }\n\n    private setAttr(attribute: AttributeProperty, value: string) {\n        this.renderer.setAttribute(this.elementRef.nativeElement, attribute, value);\n    }\n}\n\n@Directive({\n    selector: 'mc-splitter-area'\n})\nexport class McSplitterAreaDirective implements OnInit, OnDestroy {\n    constructor(private elementRef: ElementRef,\n                private renderer: Renderer2,\n                private splitter: McSplitterComponent) {}\n\n    disableFlex(): void {\n        this.renderer.removeStyle(this.elementRef.nativeElement, 'flex');\n    }\n\n    ngOnInit(): void {\n        this.splitter.addArea(this);\n\n        this.removeStyle(StyleProperty.MaxWidth);\n        this.setStyle(StyleProperty.Flex, '1');\n\n        if (this.splitter.direction === Direction.Vertical) {\n            this.setStyle(StyleProperty.Width, '100%');\n            this.removeStyle(StyleProperty.Height);\n        } else {\n            this.setStyle(StyleProperty.Height, '100%');\n            this.removeStyle(StyleProperty.Width);\n        }\n    }\n\n    ngOnDestroy(): void {\n        this.splitter.removeArea(this);\n    }\n\n    setOrder(order: number): void {\n        this.setStyle(StyleProperty.Order, order);\n    }\n\n    setSize(size: number): void {\n        const sz = coerceNumberProperty(size);\n        this.setStyle(this.getSizeProperty(), coerceCssPixelValue(sz));\n    }\n\n    getSize(): number {\n        return this.elementRef.nativeElement[this.getOffsetSizeProperty()];\n    }\n\n    getMinSize(): number {\n        const styles = getComputedStyle(this.elementRef.nativeElement);\n\n        return parseFloat(styles[this.getMinSizeProperty()]);\n    }\n\n    private isVertical(): boolean {\n        return this.splitter.direction === Direction.Vertical;\n    }\n\n    private getMinSizeProperty(): StyleProperty {\n        return this.isVertical()\n            ? StyleProperty.MinHeight\n            : StyleProperty.MinWidth;\n    }\n\n    private getOffsetSizeProperty(): StyleProperty {\n        return this.isVertical()\n            ? StyleProperty.OffsetHeight\n            : StyleProperty.OffsetWidth;\n    }\n\n    private getSizeProperty(): StyleProperty {\n        return this.isVertical()\n            ? StyleProperty.Height\n            : StyleProperty.Width;\n    }\n\n    private setStyle(style: StyleProperty, value: string | number) {\n        this.renderer.setStyle(this.elementRef.nativeElement, style, value);\n    }\n\n    private removeStyle(style: StyleProperty) {\n        this.renderer.removeStyle(this.elementRef.nativeElement, style);\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { McIconModule } from '@ptsecurity/mosaic/icon';\n\nimport { McGutterDirective, McSplitterAreaDirective, McSplitterComponent } from './splitter.component';\n\n\n@NgModule({\n    imports: [\n        CommonModule,\n        McIconModule\n    ],\n    exports: [\n        McGutterDirective,\n        McSplitterAreaDirective,\n        McSplitterComponent\n    ],\n    declarations: [\n        McGutterDirective,\n        McSplitterAreaDirective,\n        McSplitterComponent\n    ]\n})\nexport class McSplitterModule {\n}\n","import { animate, state, style, transition, trigger } from '@angular/animations';\nimport {\n    Attribute,\n    ChangeDetectionStrategy, ChangeDetectorRef,\n    Component,\n    ElementRef, EventEmitter, forwardRef,\n    Input, Output, ViewChild,\n    ViewEncapsulation\n} from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { FocusMonitor } from '@ptsecurity/cdk/a11y';\nimport {\n    ThemePalette,\n    CanColor, CanColorCtor,\n    CanDisable, CanDisableCtor,\n    HasTabIndex, HasTabIndexCtor,\n    mixinColor,\n    mixinDisabled,\n    mixinTabIndex\n} from '@ptsecurity/mosaic/core';\n\n\nlet nextUniqueId = 0;\n\ntype ToggleLabelPositionType = 'left' | 'right';\n\nexport class McToggleBase {\n    constructor(public _elementRef: ElementRef) {}\n}\n\nexport const _McToggleMixinBase:\n    HasTabIndexCtor &\n    CanDisableCtor &\n    CanColorCtor &\n    typeof McToggleBase = mixinTabIndex(mixinColor(mixinDisabled(McToggleBase), ThemePalette.Primary));\n\nexport class McToggleChange {\n    source: McToggleComponent;\n    checked: boolean;\n}\n\n@Component({\n    selector: 'mc-toggle',\n    exportAs: 'mcToggle',\n    templateUrl: './toggle.component.html',\n    styleUrls: ['./toggle.css'],\n    providers: [\n        {provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => McToggleComponent), multi: true}\n    ],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n    inputs: ['disabled', 'color', 'tabIndex'],\n    host: {\n        class: 'mc-toggle',\n        '[id]': 'id',\n        '[attr.id]': 'id',\n        '[class.mc-disabled]': 'disabled',\n        '[class.mc-toggle_off]': '!checked'\n    },\n    animations: [\n        trigger('switch', [\n            state('true' , style({ left: '50%' })),\n            state('false', style({ left: '1px' })),\n            transition('true <=> false', animate('150ms'))\n        ])\n    ]\n})\nexport class McToggleComponent extends _McToggleMixinBase\n    implements ControlValueAccessor, CanColor, CanDisable, HasTabIndex {\n\n    @ViewChild('input') _inputElement: ElementRef;\n\n    @Input() labelPosition: ToggleLabelPositionType = 'right';\n\n    @Input('aria-label') ariaLabel: string = '';\n    @Input('aria-labelledby') ariaLabelledby: string | null = null;\n\n    private _uniqueId: string = `mc-toggle-${++nextUniqueId}`;\n\n    // tslint:disable:member-ordering\n    @Input() id: string = this._uniqueId;\n\n    get inputId(): string {\n        return `${this.id || this._uniqueId}-input`;\n    }\n\n    @Input() name: string | null = null;\n\n    @Input() value: string;\n\n    private _disabled: boolean = false;\n\n    @Input()\n    get disabled() {\n        return this._disabled;\n    }\n\n    set disabled(value: any) {\n        if (value !== this._disabled) {\n            this._disabled = value;\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n\n    private _checked: boolean = false;\n\n    get checked() {\n        return this._checked;\n    }\n\n    @Input()\n    set checked(value: boolean) {\n        if (value !== this._checked) {\n            this._checked = value;\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n\n    @Output() readonly change: EventEmitter<McToggleChange> =\n        new EventEmitter<McToggleChange>();\n\n    constructor(public _elementRef: ElementRef,\n                private _focusMonitor: FocusMonitor,\n                private _changeDetectorRef: ChangeDetectorRef,\n                @Attribute('tabindex') tabIndex: string\n    ) {\n        super(_elementRef);\n\n        this.tabIndex = parseInt(tabIndex) || 0;\n\n        this._focusMonitor.monitor(this._elementRef.nativeElement, true);\n    }\n\n    ngOnDestroy() {\n        this._focusMonitor.stopMonitoring(this._elementRef.nativeElement);\n    }\n\n    focus(): void {\n        this._focusMonitor.focusVia(this._inputElement.nativeElement, 'keyboard');\n    }\n\n    _getAriaChecked(): boolean {\n        return this.checked;\n    }\n\n    _onInteractionEvent(event: Event) {\n        event.stopPropagation();\n    }\n\n    _onLabelTextChange() {\n        this._changeDetectorRef.markForCheck();\n    }\n\n    _onInputClick(event: MouseEvent) {\n        event.stopPropagation();\n        this._updateModelValue();\n        this._emitChangeEvent();\n    }\n\n    writeValue(value: any) {\n        this.checked = !!value;\n    }\n\n    registerOnChange(fn: any) {\n        this._onChangeCallback = fn;\n    }\n\n    registerOnTouched(fn: any) {\n        this._onTouchedCallback = fn;\n    }\n\n    setDisabledState(isDisabled: boolean) {\n        this.disabled = isDisabled;\n    }\n\n    // tslint:disable-next-line:no-empty\n    private _onTouchedCallback = () => {};\n\n    // tslint:disable-next-line:no-empty\n    private _onChangeCallback = (_: any) => {};\n\n    private _updateModelValue() {\n        this._checked = !this.checked;\n        this._onChangeCallback(this.checked);\n        this._onTouchedCallback();\n    }\n\n    private _emitChangeEvent() {\n        const event = new McToggleChange();\n        event.source = this;\n        event.checked = this.checked;\n\n        this._onChangeCallback(this.checked);\n        this.change.emit(event);\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { A11yModule } from '@ptsecurity/cdk/a11y';\nimport { McCommonModule } from '@ptsecurity/mosaic/core';\n\nimport { McToggleComponent } from './toggle.component';\n\n\n@NgModule({\n    imports: [CommonModule, A11yModule, McCommonModule],\n    exports: [McToggleComponent],\n    declarations: [McToggleComponent]\n})\nexport class McToggleModule {\n}\n","/* tslint:disable:no-empty */\n\nimport {\n    AfterContentInit,\n    AfterViewInit,\n    Attribute,\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    ContentChild,\n    Directive,\n    DoCheck,\n    ElementRef,\n    EventEmitter,\n    Inject,\n    Input,\n    isDevMode,\n    NgZone,\n    OnChanges,\n    OnDestroy,\n    OnInit,\n    Optional,\n    Output,\n    QueryList,\n    Renderer2,\n    Self,\n    SimpleChanges,\n    ViewChild,\n    ViewChildren,\n    ViewEncapsulation\n} from '@angular/core';\nimport { ControlValueAccessor, FormGroupDirective, NgControl, NgForm } from '@angular/forms';\nimport { Directionality } from '@ptsecurity/cdk/bidi';\nimport { coerceBooleanProperty } from '@ptsecurity/cdk/coercion';\nimport { SelectionModel } from '@ptsecurity/cdk/collections';\nimport {\n    DOWN_ARROW,\n    END,\n    ENTER,\n    HOME,\n    LEFT_ARROW,\n    RIGHT_ARROW,\n    SPACE,\n    UP_ARROW,\n    A\n} from '@ptsecurity/cdk/keycodes';\nimport {\n    CdkConnectedOverlay,\n    ViewportRuler\n} from '@ptsecurity/cdk/overlay';\nimport { CdkTree } from '@ptsecurity/cdk/tree';\nimport {\n    getOptionScrollPosition,\n    CanDisable,\n    CanUpdateErrorState,\n    ErrorStateMatcher,\n    HasTabIndex,\n    CanDisableCtor,\n    HasTabIndexCtor,\n    CanUpdateErrorStateCtor,\n    mixinTabIndex,\n    mixinDisabled,\n    mixinErrorState,\n    mcSelectAnimations,\n\n    SELECT_PANEL_MAX_HEIGHT,\n    SELECT_PANEL_PADDING_X,\n    SELECT_PANEL_VIEWPORT_PADDING,\n\n    getMcSelectDynamicMultipleError,\n    getMcSelectNonFunctionValueError,\n    getMcSelectNonArrayValueError,\n    MC_SELECT_SCROLL_STRATEGY\n} from '@ptsecurity/mosaic/core';\nimport { McFormField, McFormFieldControl } from '@ptsecurity/mosaic/form-field';\nimport { McTag } from '@ptsecurity/mosaic/tag';\nimport { McTreeSelection, McTreeOption } from '@ptsecurity/mosaic/tree';\nimport { defer, merge, Observable, Subject } from 'rxjs';\nimport {\n    filter,\n    map,\n    startWith,\n    switchMap,\n    take,\n    takeUntil,\n    distinctUntilChanged\n} from 'rxjs/operators';\n\n\nlet nextUniqueId = 0;\n\n/** Change event object that is emitted when the select value has changed. */\nexport class McTreeSelectChange {\n    constructor(public source: McTreeOption, public value: any, public isUserInput = false) {}\n}\n\n\n@Directive({ selector: 'mc-tree-select-trigger' })\nexport class McTreeSelectTrigger {}\n\n\nclass McTreeSelectBase {\n    constructor(\n        public elementRef: ElementRef,\n        public defaultErrorStateMatcher: ErrorStateMatcher,\n        public parentForm: NgForm,\n        public parentFormGroup: FormGroupDirective,\n        public ngControl: NgControl\n    ) {}\n}\n\n// tslint:disable-next-line:naming-convention\nconst McTreeSelectMixinBase: CanDisableCtor & HasTabIndexCtor & CanUpdateErrorStateCtor &\n    typeof McTreeSelectBase = mixinTabIndex(mixinDisabled(mixinErrorState(McTreeSelectBase)));\n\n\n@Component({\n    selector: 'mc-tree-select',\n    exportAs: 'mcTreeSelect',\n    templateUrl: 'tree-select.html',\n    styleUrls: ['./tree-select.css'],\n    inputs: ['disabled', 'tabIndex'],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    host: {\n        '[attr.id]': 'id',\n        '[attr.tabindex]': 'tabIndex',\n\n        class: 'mc-tree-select',\n        '[class.mc-disabled]': 'disabled',\n        '[class.mc-select-invalid]': 'errorState',\n        '[class.mc-select-required]': 'required',\n\n        '(keydown)': 'handleKeydown($event)',\n        '(focus)': 'onFocus()',\n        '(blur)': 'onBlur()',\n        '(window:resize)': 'calculateHiddenItems()'\n    },\n    animations: [\n        mcSelectAnimations.transformPanel,\n        mcSelectAnimations.fadeInContent\n    ],\n    providers: [\n        { provide: McFormFieldControl, useExisting: McTreeSelect },\n        { provide: CdkTree, useExisting: McTreeSelect }\n    ]\n})\nexport class McTreeSelect extends McTreeSelectMixinBase implements\n    AfterContentInit, AfterViewInit, OnChanges, OnDestroy, OnInit, DoCheck, ControlValueAccessor,\n    CanDisable, HasTabIndex, McFormFieldControl<any>, CanUpdateErrorState {\n\n    /** A name for this control that can be used by `mc-form-field`. */\n    controlType = 'mc-select';\n\n    hiddenItems: number = 0;\n    oneMoreText: string = '...ещё';\n\n    /** The last measured value for the trigger's client bounding rect. */\n    triggerRect: ClientRect;\n\n    /** The cached font-size of the trigger element. */\n    triggerFontSize = 0;\n\n    /** Deals with the selection logic. */\n    selectionModel: SelectionModel<McTreeOption>;\n\n    /** The IDs of child options to be passed to the aria-owns attribute. */\n    optionIds: string = '';\n\n    /** The value of the select panel's transform-origin property. */\n    transformOrigin: string = 'top';\n\n    /** Whether the panel's animation is done. */\n    panelDoneAnimating: boolean = false;\n\n    /** Emits when the panel element is finished transforming in. */\n    panelDoneAnimatingStream = new Subject<string>();\n\n    /** Strategy that will be used to handle scrolling while the select panel is open. */\n    scrollStrategy = this.scrollStrategyFactory();\n\n    /**\n     * The y-offset of the overlay panel in relation to the trigger's top start corner.\n     * This must be adjusted to align the selected option text over the trigger text.\n     * when the panel opens. Will change based on the y-position of the selected option.\n     */\n    offsetY = 0;\n\n    /**\n     * This position config ensures that the top \"start\" corner of the overlay\n     * is aligned with with the top \"start\" of the origin by default (overlapping\n     * the trigger completely). If the panel cannot fit below the trigger, it\n     * will fall back to a position above the trigger.\n     */\n    positions = [\n        {\n            originX: 'start',\n            originY: 'bottom',\n            overlayX: 'start',\n            overlayY: 'top'\n        },\n        {\n            originX: 'start',\n            originY: 'top',\n            overlayX: 'start',\n            overlayY: 'bottom'\n        }\n    ];\n\n    @ViewChild('trigger') trigger: ElementRef;\n\n    @ViewChild('panel') panel: ElementRef;\n\n    @ViewChild(CdkConnectedOverlay) overlayDir: CdkConnectedOverlay;\n\n    @ViewChildren(McTag) tags: QueryList<McTag>;\n\n    /** User-supplied override of the trigger element. */\n    @ContentChild(McTreeSelectTrigger) customTrigger: McTreeSelectTrigger;\n\n    @ContentChild(McTreeSelection) tree: McTreeSelection;\n\n    /** Event emitted when the select panel has been toggled. */\n    @Output() readonly openedChange: EventEmitter<boolean> = new EventEmitter<boolean>();\n\n    /** Event emitted when the select has been opened. */\n    @Output('opened') readonly openedStream: Observable<void> =\n        this.openedChange.pipe(filter((o) => o), map(() => {}));\n\n    /** Event emitted when the select has been closed. */\n    @Output('closed') readonly closedStream: Observable<void> =\n        this.openedChange.pipe(filter((o) => !o), map(() => {}));\n\n    /** Event emitted when the selected value has been changed by the user. */\n    @Output() readonly selectionChange = new EventEmitter<McTreeSelectChange>();\n\n    /**\n     * Event that emits whenever the raw value of the select changes. This is here primarily\n     * to facilitate the two-way binding for the `value` input.\n     * @docs-private\n     */\n    @Output() readonly valueChange: EventEmitter<any> = new EventEmitter<any>();\n\n    /** Classes to be passed to the select panel. Supports the same syntax as `ngClass`. */\n    @Input() panelClass: string | string[] | Set<string> | { [key: string]: any };\n\n    /** Object used to control when error messages are shown. */\n    @Input() errorStateMatcher: ErrorStateMatcher;\n\n    /**\n     * Function used to sort the values in a select in multiple mode.\n     * Follows the same logic as `Array.prototype.sort`.\n     */\n    @Input() sortComparator: (\n        a: McTreeOption, b: McTreeOption, options: McTreeOption[]\n    ) => number;\n\n    /** Combined stream of all of the child options' change events. */\n    readonly optionSelectionChanges: Observable<McTreeSelectChange> = defer(() => {\n        if (this.options) {\n            return merge(...this.options.map((option) => option.onSelectionChange));\n        }\n\n        return this.ngZone.onStable\n            .asObservable()\n            .pipe(take(1), switchMap(() => this.optionSelectionChanges));\n    }) as Observable<McTreeSelectChange>;\n\n    options: QueryList<McTreeOption>;\n\n    private originalOnKeyDown: (event: KeyboardEvent) => void;\n\n    @Input()\n    get placeholder(): string {\n        return this._placeholder;\n    }\n\n    set placeholder(value: string) {\n        this._placeholder = value;\n\n        this.stateChanges.next();\n    }\n\n    private _placeholder: string;\n\n    @Input()\n    get required(): boolean {\n        return this._required;\n    }\n\n    set required(value: boolean) {\n        this._required = coerceBooleanProperty(value);\n\n        this.stateChanges.next();\n    }\n\n    private _required: boolean = false;\n\n    @Input()\n    get multiple(): boolean {\n        return this._multiple;\n    }\n\n    set multiple(value: boolean) {\n        if (this.selectionModel) {\n            throw getMcSelectDynamicMultipleError();\n        }\n\n        this._multiple = coerceBooleanProperty(value);\n    }\n\n    private _multiple: boolean = false;\n\n    @Input()\n    get autoSelect(): boolean {\n        if (this.multiple) { return false; }\n\n        return this._autoSelect;\n    }\n\n    set autoSelect(value: boolean) {\n        this._autoSelect = coerceBooleanProperty(value);\n    }\n\n    private _autoSelect: boolean = true;\n\n    /**\n     * Function to compare the option values with the selected values. The first argument\n     * is a value from an option. The second is a value from the selection. A boolean\n     * should be returned.\n     */\n    @Input()\n    get compareWith() {\n        return this._compareWith;\n    }\n\n    set compareWith(fn: (o1: any, o2: any) => boolean) {\n        /* tslint:disable-next-line:strict-type-predicates */\n        if (typeof fn !== 'function') {\n            throw getMcSelectNonFunctionValueError();\n        }\n\n        this._compareWith = fn;\n\n        if (this.selectionModel) {\n            // A different comparator means the selection could change.\n            this.initializeSelection();\n        }\n    }\n\n    /** Value of the select control. */\n    @Input()\n    get value(): any {\n        return this._value;\n    }\n\n    set value(newValue: any) {\n        if (newValue !== this._value) {\n            this.writeValue(newValue);\n            this._value = newValue;\n        }\n    }\n\n    private _value: any;\n\n    @Input()\n    get id(): string {\n        return this._id;\n    }\n\n    set id(value: string) {\n        this._id = value || this.uid;\n        this.stateChanges.next();\n    }\n\n    private _id: string;\n\n    /** Whether the select is focused. */\n    get focused(): boolean {\n        return this._focused || this._panelOpen;\n    }\n\n    /**\n     * @deprecated Setter to be removed as this property is intended to be readonly.\n     * @breaking-change 8.0.0\n     */\n    set focused(value: boolean) {\n        this._focused = value;\n    }\n\n    private _focused = false;\n\n    get panelOpen(): boolean {\n        return this._panelOpen;\n    }\n\n    private _panelOpen = false;\n\n    /** The scroll position of the overlay panel, calculated to center the selected option. */\n    private scrollTop = 0;\n\n    /** Unique id for this input. */\n    private readonly uid = `mc-select-${nextUniqueId++}`;\n\n    /** Emits whenever the component is destroyed. */\n    private readonly destroy = new Subject<void>();\n\n    constructor(\n        private readonly viewportRuler: ViewportRuler,\n        readonly changeDetectorRef: ChangeDetectorRef,\n        private readonly ngZone: NgZone,\n        private readonly renderer: Renderer2,\n        defaultErrorStateMatcher: ErrorStateMatcher,\n        public elementRef: ElementRef,\n        @Optional() private readonly dir: Directionality,\n        @Optional() parentForm: NgForm,\n        @Optional() parentFormGroup: FormGroupDirective,\n        @Optional() private readonly parentFormField: McFormField,\n        @Self() @Optional() public ngControl: NgControl,\n        @Attribute('tabindex') tabIndex: string,\n        @Inject(MC_SELECT_SCROLL_STRATEGY) private readonly scrollStrategyFactory\n    ) {\n        super(elementRef, defaultErrorStateMatcher, parentForm, parentFormGroup, ngControl);\n\n        if (this.ngControl) {\n            // Note: we provide the value accessor through here, instead of\n            // the `providers` to avoid running into a circular import.\n            this.ngControl.valueAccessor = this;\n        }\n\n        this.tabIndex = parseInt(tabIndex) || 0;\n\n        // Force setter to be called in case id was not specified.\n        this.id = this.id;\n    }\n\n    ngOnInit() {\n        if (this.tree) {\n            this.tree.multiple = this.multiple;\n        }\n\n        this.stateChanges.next();\n\n        // We need `distinctUntilChanged` here, because some browsers will\n        // fire the animation end event twice for the same animation. See:\n        // https://github.com/angular/angular/issues/24084\n        this.panelDoneAnimatingStream\n            .pipe(distinctUntilChanged(), takeUntil(this.destroy))\n            .subscribe(() => {\n                if (this.panelOpen) {\n                    this.scrollTop = 0;\n                    this.openedChange.emit(true);\n                } else {\n                    this.openedChange.emit(false);\n                    this.panelDoneAnimating = false;\n                    this.overlayDir.offsetX = 0;\n                    this.changeDetectorRef.markForCheck();\n                }\n            });\n    }\n\n    ngAfterContentInit() {\n        if (!this.tree) { return; }\n\n        this.initKeyManager();\n\n        this.selectionModel = this.tree.selectionModel = new SelectionModel<McTreeOption>(this.multiple);\n        this.options = this.tree.options;\n        this.tree.autoSelect = this.autoSelect;\n\n        this.selectionModel.changed\n            .pipe(takeUntil(this.destroy))\n            .subscribe((event) => {\n                event.added.forEach((option) => option.select());\n                event.removed.forEach((option) => option.deselect());\n            });\n    }\n\n    ngAfterViewInit() {\n        if (!this.tree) { return; }\n\n        this.tags.changes\n            .subscribe(() => {\n                setTimeout(() => this.calculateHiddenItems(), 0);\n            });\n\n        this.options.changes\n            .pipe(startWith(null), takeUntil(this.destroy))\n            .subscribe(() => {\n                this.updateSelectedOptions();\n\n                this.resetOptions();\n            });\n    }\n\n    ngDoCheck() {\n        if (this.ngControl) { this.updateErrorState(); }\n    }\n\n    ngOnChanges(changes: SimpleChanges) {\n        // Updating the disabled state is handled by `mixinDisabled`, but we need to additionally let\n        // the parent form field know to run change detection when the disabled state changes.\n        if (changes.disabled) {\n            this.stateChanges.next();\n        }\n    }\n\n    ngOnDestroy() {\n        this.destroy.next();\n\n        this.destroy.complete();\n        this.stateChanges.complete();\n    }\n\n    /** `View -> model callback called when value changes` */\n    onChange: (value: any) => void = () => {};\n\n    /** `View -> model callback called when select has been touched` */\n    onTouched = () => {};\n\n    toggle() {\n        if (this.panelOpen) {\n            this.close();\n        } else {\n            this.open();\n        }\n    }\n\n    open() {\n        if (this.disabled || !this.options || !this.options.length || this._panelOpen) { return; }\n\n        this.triggerRect = this.trigger.nativeElement.getBoundingClientRect();\n        // Note: The computed font-size will be a string pixel value (e.g. \"16px\").\n        // `parseInt` ignores the trailing 'px' and converts this to a number.\n        this.triggerFontSize = parseInt(getComputedStyle(this.trigger.nativeElement)['font-size']);\n\n        this._panelOpen = true;\n        // this.tree.keyManager.withHorizontalOrientation(null);\n        this.calculateOverlayPosition();\n        this.highlightCorrectOption();\n        this.changeDetectorRef.markForCheck();\n\n        // Set the font size on the panel element once it exists.\n        this.ngZone.onStable.asObservable()\n            .pipe(take(1))\n            .subscribe(() => {\n                if (this.triggerFontSize && this.overlayDir.overlayRef &&\n                    this.overlayDir.overlayRef.overlayElement) {\n                    this.overlayDir.overlayRef.overlayElement.style.fontSize = `${this.triggerFontSize}px`;\n                }\n            });\n    }\n\n    /** Closes the overlay panel and focuses the host element. */\n    close() {\n        if (this._panelOpen) {\n            this._panelOpen = false;\n\n            // this.tree.keyManager.setActiveItem(-1);\n\n            // this.tree.keyManager.withHorizontalOrientation(this.isRtl() ? 'rtl' : 'ltr');\n            this.changeDetectorRef.markForCheck();\n            this.onTouched();\n        }\n    }\n\n    /**\n     * Sets the select's value. Part of the ControlValueAccessor interface\n     * required to integrate with Angular's core forms API.\n     *\n     * @param value New value to be written to the model.\n     */\n    // todo нужно доделать!\n    writeValue(value: any) {\n        if (this.options) {\n            this.setSelectionByValue(value);\n        }\n    }\n\n    /**\n     * Saves a callback function to be invoked when the select's value\n     * changes from user input. Part of the ControlValueAccessor interface\n     * required to integrate with Angular's core forms API.\n     *\n     * @param fn Callback to be triggered when the value changes.\n     */\n    registerOnChange(fn: (value: any) => void) {\n        this.onChange = fn;\n    }\n\n    /**\n     * Saves a callback function to be invoked when the select is blurred\n     * by the user. Part of the ControlValueAccessor interface required\n     * to integrate with Angular's core forms API.\n     *\n     * @param fn Callback to be triggered when the component has been touched.\n     */\n    registerOnTouched(fn: () => {}) {\n        this.onTouched = fn;\n    }\n\n    /**\n     * Disables the select. Part of the ControlValueAccessor interface required\n     * to integrate with Angular's core forms API.\n     *\n     * @param isDisabled Sets whether the component is disabled.\n     */\n    setDisabledState(isDisabled: boolean) {\n        this.disabled = isDisabled;\n        this.changeDetectorRef.markForCheck();\n        this.stateChanges.next();\n    }\n\n    get selected(): McTreeOption | McTreeOption[] {\n        return this.multiple ? this.selectionModel.selected : this.selectionModel.selected[0];\n    }\n\n    get triggerValue(): string {\n        if (this.empty) { return ''; }\n\n        return (this.selected as McTreeOption).viewValue;\n    }\n\n    get triggerValues(): McTreeOption[] {\n        if (this.empty) { return []; }\n\n        const selectedOptions = this.selectionModel.selected;\n\n        if (this.isRtl()) { selectedOptions.reverse(); }\n\n        return selectedOptions;\n    }\n\n    get empty(): boolean {\n        return !this.selectionModel || this.selectionModel.isEmpty();\n    }\n\n    isRtl(): boolean {\n        return this.dir ? this.dir.value === 'rtl' : false;\n    }\n\n    handleKeydown(event: KeyboardEvent) {\n        if (!this.disabled) {\n            if (this.panelOpen) {\n                this.handleOpenKeydown(event);\n            } else {\n                this.handleClosedKeydown(event);\n            }\n        }\n    }\n\n    /**\n     * When the panel content is done fading in, the panelDoneAnimating property is\n     * set so the proper class can be added to the panel.\n     */\n    onFadeInDone() {\n        this.panelDoneAnimating = this.panelOpen;\n        this.changeDetectorRef.markForCheck();\n    }\n\n    onFocus() {\n        if (!this.disabled) {\n            this._focused = true;\n\n            this.stateChanges.next();\n        }\n    }\n\n    /**\n     * Calls the touched callback only if the panel is closed. Otherwise, the trigger will\n     * \"blur\" to the panel when it opens, causing a false positive.\n     */\n    onBlur() {\n        this._focused = false;\n\n        if (!this.disabled && !this.panelOpen) {\n            this.onTouched();\n            this.changeDetectorRef.markForCheck();\n            this.stateChanges.next();\n        }\n    }\n\n    /** Callback that is invoked when the overlay panel has been attached. */\n    onAttached() {\n        this.overlayDir.positionChange\n            .pipe(take(1))\n            .subscribe(() => {\n                this.changeDetectorRef.detectChanges();\n                this.calculateOverlayOffsetX();\n                this.panel.nativeElement.scrollTop = this.scrollTop;\n            });\n    }\n\n    /** Returns the theme to be used on the panel. */\n    getPanelTheme(): string {\n        return this.parentFormField ? `mc-${this.parentFormField.color}` : '';\n    }\n\n    /** Focuses the select element. */\n    focus() {\n        this.elementRef.nativeElement.focus();\n    }\n\n    /**\n     * Calculates the scroll position of the select's overlay panel.\n     *\n     * Attempts to center the selected option in the panel. If the option is\n     * too high or too low in the panel to be scrolled to the center, it clamps the\n     * scroll position to the min or max scroll positions respectively.\n     */\n    calculateOverlayScroll(selectedIndex: number, scrollBuffer: number, maxScroll: number): number {\n        const itemHeight = this.getItemHeight();\n        const optionOffsetFromScrollTop = itemHeight * selectedIndex;\n\n        /* tslint:disable-next-line:no-magic-numbers */\n        const halfOptionHeight = itemHeight / 2;\n\n        // Starts at the optionOffsetFromScrollTop, which scrolls the option to the top of the\n        // scroll container, then subtracts the scroll buffer to scroll the option down to\n        // the center of the overlay panel. Half the option height must be re-added to the\n        // scrollTop so the option is centered based on its middle, not its top edge.\n        const optimalScrollPosition = optionOffsetFromScrollTop - scrollBuffer + halfOptionHeight;\n\n        return Math.min(Math.max(0, optimalScrollPosition), maxScroll);\n    }\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    onContainerClick() {\n        this.focus();\n        this.open();\n    }\n\n    /** Invoked when an option is clicked. */\n    onRemoveSelectedOption(selectedOption: McTreeOption, $event) {\n        $event.stopPropagation();\n\n        this.options.forEach((option) => {\n            if (option.data === selectedOption.data) { option.deselect(); }\n        });\n\n        this.selectionModel.deselect(selectedOption);\n    }\n\n    calculateHiddenItems() {\n        if (this.empty || !this.multiple) { return; }\n\n        let visibleItems: number = 0;\n        const totalItemsWidth = this.getTotalItemsWidthInMatcher();\n        let totalVisibleItemsWidth: number = 0;\n        const itemMargin: number = 4;\n\n        this.tags.forEach((tag) => {\n            if (tag.nativeElement.offsetTop < tag.nativeElement.offsetHeight) {\n                totalVisibleItemsWidth += tag.nativeElement.getBoundingClientRect().width + itemMargin;\n                visibleItems++;\n            }\n        });\n\n        this.hiddenItems = this.selectionModel.selected.length - visibleItems;\n\n        if (this.hiddenItems) {\n            const itemsCounter = this.trigger.nativeElement.querySelector('.mc-tree-select__match-hidden-text');\n            const matcherList = this.trigger.nativeElement.querySelector('.mc-tree-select__match-list');\n\n            const itemsCounterShowed = itemsCounter.offsetTop < itemsCounter.offsetHeight;\n            // const itemsCounterWidth: number = itemsCounter.getBoundingClientRect().width;\n            const itemsCounterWidth: number = 86;\n\n            const matcherListWidth: number = matcherList.getBoundingClientRect().width;\n            const matcherWidth: number = matcherListWidth + itemsCounterWidth;\n\n            if (itemsCounterShowed && (totalItemsWidth < matcherWidth)) { this.hiddenItems = 0; }\n\n            if (\n                totalVisibleItemsWidth === matcherListWidth ||\n                (totalVisibleItemsWidth + itemsCounterWidth) < matcherListWidth\n            ) {\n                this.changeDetectorRef.markForCheck();\n\n                return ;\n            } else if (!itemsCounterShowed && (totalItemsWidth + itemsCounterWidth) > matcherWidth) {\n                this.hiddenItems++;\n            }\n        }\n\n        this.changeDetectorRef.markForCheck();\n    }\n\n    private updateSelectedOptions(): void {\n        this.selectionModel.selected.forEach((selectedOption) => {\n            this.options.forEach((option) => {\n                if (option.data === selectedOption.data) {\n                    this.selectionModel.deselect(selectedOption);\n                    this.selectionModel.select(option);\n\n                    option.select();\n                }\n            });\n        });\n    }\n\n    private getTotalItemsWidthInMatcher(): number {\n        const triggerClone = this.trigger.nativeElement.cloneNode(true);\n        triggerClone.querySelector('.mc-tree-select__match-hidden-text').remove();\n\n        this.renderer.setStyle(triggerClone, 'position', 'absolute');\n        this.renderer.setStyle(triggerClone, 'visibility', 'hidden');\n        this.renderer.setStyle(triggerClone, 'top', '-100%');\n        this.renderer.setStyle(triggerClone, 'left', '0');\n\n        this.renderer.appendChild(this.trigger.nativeElement, triggerClone);\n\n        let totalItemsWidth: number = 0;\n        const itemMargin: number = 4;\n        triggerClone.querySelectorAll('mc-tag').forEach((item) => {\n            totalItemsWidth += item.getBoundingClientRect().width as number + itemMargin;\n        });\n\n        triggerClone.remove();\n\n        return totalItemsWidth;\n    }\n\n    private handleClosedKeydown(event: KeyboardEvent) {\n        /* tslint:disable-next-line */\n        const keyCode = event.keyCode;\n        const isArrowKey = keyCode === DOWN_ARROW || keyCode === UP_ARROW ||\n            keyCode === LEFT_ARROW || keyCode === RIGHT_ARROW;\n        const isOpenKey = keyCode === ENTER || keyCode === SPACE;\n\n        // Open the select on ALT + arrow key to match the native <select>\n        if (isOpenKey || ((this.multiple || event.altKey) && isArrowKey)) {\n            // prevents the page from scrolling down when pressing space\n            event.preventDefault();\n\n            this.open();\n        } else if (!this.multiple && this.tree.keyManager && this.tree.keyManager.onKeydown) {\n            this.tree.keyManager.onKeydown(event);\n        }\n    }\n\n    private handleOpenKeydown(event: KeyboardEvent) {\n        /* tslint:disable-next-line */\n        const keyCode = event.keyCode;\n        const isArrowKey = keyCode === DOWN_ARROW || keyCode === UP_ARROW;\n\n        if (isArrowKey && event.altKey) {\n            // Close the select on ALT + arrow key to match the native <select>\n            event.preventDefault();\n\n            this.close();\n        } else if (keyCode === LEFT_ARROW || keyCode === RIGHT_ARROW) {\n            return this.originalOnKeyDown.call(this.tree, event);\n        } else if (keyCode === HOME || keyCode === END) {\n            event.preventDefault();\n\n            if (keyCode === HOME) {\n                this.tree.keyManager.setFirstItemActive();\n            } else {\n                this.tree.keyManager.setLastItemActive();\n            }\n        } else if ((keyCode === ENTER || keyCode === SPACE) && this.tree.keyManager.activeItem) {\n            event.preventDefault();\n\n            this.tree.keyManager.activeItem.selectViaInteraction();\n        } else if (this.multiple && keyCode === A && event.ctrlKey) {\n            event.preventDefault();\n\n            const hasDeselectedOptions = this.options.some((option) => !option.selected);\n\n            this.options.forEach((option) => {\n                if (hasDeselectedOptions && !option.disabled) {\n                    option.select();\n                } else {\n                    option.deselect();\n                }\n            });\n        } else {\n            const previouslyFocusedIndex = this.tree.keyManager.activeItemIndex;\n\n            this.tree.keyManager.onKeydown(event);\n\n            if (this.multiple && isArrowKey && event.shiftKey && this.tree.keyManager.activeItem &&\n                this.tree.keyManager.activeItemIndex !== previouslyFocusedIndex) {\n                this.tree.keyManager.activeItem.selectViaInteraction();\n            }\n        }\n    }\n\n    private initializeSelection() {\n        // Defer setting the value in order to avoid the \"Expression\n        // has changed after it was checked\" errors from Angular.\n        Promise.resolve().then(() => {\n            this.setSelectionByValue(this.ngControl ? this.ngControl.value : this._value);\n        });\n    }\n\n    /**\n     * Sets the selected option based on a value. If no option can be\n     * found with the designated value, the select trigger is cleared.\n     */\n    private setSelectionByValue(value: any | any[]) {\n        if (this.multiple && value) {\n            if (!Array.isArray(value)) { throw getMcSelectNonArrayValueError(); }\n\n            this.selectionModel.clear();\n            value.forEach((currentValue: any) => this.selectValue(currentValue));\n            this.sortValues();\n        } else {\n            this.selectionModel.clear();\n            const correspondingOption = this.selectValue(value);\n\n            // Shift focus to the active item. Note that we shouldn't do this in multiple\n            // mode, because we don't know what option the user interacted with last.\n            if (correspondingOption) {\n                this.tree.keyManager.setActiveItem(correspondingOption);\n            }\n        }\n\n        this.changeDetectorRef.markForCheck();\n    }\n\n    /**\n     * Finds and selects and option based on its value.\n     * @returns Option that has the corresponding value.\n     */\n    private selectValue(value: any): McTreeOption | undefined {\n        const correspondingOption = this.options.find((option: McTreeOption) => {\n            try {\n                // Treat null as a special reset value.\n                return option.value != null && this._compareWith(option.value, value);\n            } catch (error) {\n                if (isDevMode()) {\n                    // Notify developers of errors in their comparator.\n                    console.warn(error);\n                }\n\n                return false;\n            }\n        });\n\n        if (correspondingOption) {\n            this.selectionModel.select(correspondingOption);\n        }\n\n        return correspondingOption;\n    }\n\n    private initKeyManager() {\n        this.originalOnKeyDown = this.tree.onKeyDown;\n\n        this.tree.onKeyDown = () => {};\n\n        this.tree.keyManager.tabOut\n            .pipe(takeUntil(this.destroy))\n            .subscribe(() => {\n                // Restore focus to the trigger before closing. Ensures that the focus\n                // position won't be lost if the user got focus into the overlay.\n                this.focus();\n                this.close();\n            });\n\n        this.tree.keyManager.change\n            .pipe(takeUntil(this.destroy))\n            .subscribe(() => {\n                if (this._panelOpen && this.panel) {\n                    this.scrollActiveOptionIntoView();\n                } else if (!this._panelOpen && !this.multiple && this.tree.keyManager.activeItem) {\n                    this.tree.keyManager.activeItem.selectViaInteraction();\n                }\n            });\n    }\n\n    /** Drops current option subscriptions and IDs and resets from scratch. */\n    private resetOptions() {\n        const changedOrDestroyed = merge(this.options.changes, this.destroy);\n\n        this.optionSelectionChanges\n            .pipe(takeUntil(changedOrDestroyed))\n            .subscribe((event) => {\n                this.onSelect(event.source, event.isUserInput);\n\n                if (event.isUserInput && !this.multiple && this._panelOpen) {\n                    this.close();\n                    this.focus();\n                }\n            });\n\n        // Listen to changes in the internal state of the options and react accordingly.\n        // Handles cases like the labels of the selected options changing.\n        // merge(...this.options.map((option) => option.stateChanges))\n        //     .pipe(takeUntil(changedOrDestroyed))\n        //     .subscribe(() => {\n        //         this.changeDetectorRef.markForCheck();\n        //         this.stateChanges.next();\n        //     });\n\n        this.setOptionIds();\n    }\n\n    /** Invoked when an option is clicked. */\n    private onSelect(option: McTreeOption, isUserInput: boolean) {\n        const wasSelected = this.selectionModel.isSelected(option);\n\n        if (option.value == null && !this.multiple) {\n            option.deselect();\n            this.selectionModel.clear();\n            this.propagateChanges(option.value);\n        } else {\n            if (option.selected) {\n                this.selectionModel.select(option);\n            } else {\n                this.selectionModel.deselect(option);\n            }\n\n            if (isUserInput) {\n                this.tree.keyManager.setActiveItem(option);\n            }\n\n            if (this.multiple) {\n                this.sortValues();\n\n                if (isUserInput) {\n                    // In case the user selected the option with their mouse, we\n                    // want to restore focus back to the trigger, in order to\n                    // prevent the select keyboard controls from clashing with\n                    // the ones from `mc-option`.\n                    this.focus();\n                }\n            }\n        }\n\n        if (wasSelected !== this.selectionModel.isSelected(option)) {\n            this.propagateChanges();\n        }\n\n        this.stateChanges.next();\n    }\n\n    /** Sorts the selected values in the selected based on their order in the panel. */\n    private sortValues() {\n        if (this.multiple) {\n            const options = this.options.toArray();\n\n            this.selectionModel.sort((a, b) => {\n                return this.sortComparator ? this.sortComparator(a, b, options) :\n                    options.indexOf(a) - options.indexOf(b);\n            });\n            this.stateChanges.next();\n        }\n    }\n\n    /** Emits change event to set the model value. */\n    private propagateChanges(fallbackValue?: any) {\n        let valueToEmit: any = null;\n\n        if (this.multiple) {\n            valueToEmit = (this.selected as any).map((option) => option.value);\n        } else {\n            valueToEmit = this.selected ? (this.selected as any).value : fallbackValue;\n        }\n\n        this._value = valueToEmit;\n        this.valueChange.emit(valueToEmit);\n        this.onChange(valueToEmit);\n        this.selectionChange.emit(new McTreeSelectChange(this as any, valueToEmit));\n        this.changeDetectorRef.markForCheck();\n    }\n\n    /** Records option IDs to pass to the aria-owns property. */\n    private setOptionIds() {\n        this.optionIds = this.options.map((option) => option.id).join(' ');\n    }\n\n    /**\n     * Highlights the selected item. If no option is selected, it will highlight\n     * the first item instead.\n     */\n    private highlightCorrectOption() {\n        if (this.tree.keyManager) {\n            if (this.empty) {\n                this.tree.keyManager.setFirstItemActive();\n            } else {\n                this.tree.keyManager.setActiveItem(this.selectionModel.selected[0]);\n            }\n        }\n    }\n\n    /** Scrolls the active option into view. */\n    private scrollActiveOptionIntoView() {\n        const activeOptionIndex = this.tree.keyManager.activeItemIndex || 0;\n\n        this.panel.nativeElement.scrollTop = getOptionScrollPosition(\n            activeOptionIndex,\n            this.getItemHeight(),\n            this.panel.nativeElement.scrollTop,\n            SELECT_PANEL_MAX_HEIGHT\n        );\n    }\n\n    /** Gets the index of the provided option in the option list. */\n    private getOptionIndex(option: McTreeOption): number | undefined {\n        // todo разобраться с этим срачем!\n        return this.options.reduce((result: number, current: McTreeOption, index: number) => {\n            /* tslint:disable-next-line:strict-type-predicates */\n            return result === undefined ? (option === current ? index : undefined) : result;\n        }, undefined);\n    }\n\n    /** Calculates the scroll position and x- and y-offsets of the overlay panel. */\n    private calculateOverlayPosition() {\n        const itemHeight = this.getItemHeight();\n        const items = this.getItemCount();\n        const panelHeight = Math.min(items * itemHeight, SELECT_PANEL_MAX_HEIGHT);\n        const scrollContainerHeight = items * itemHeight;\n\n        // The farthest the panel can be scrolled before it hits the bottom\n        const maxScroll = scrollContainerHeight - panelHeight;\n\n        // If no value is selected we open the popup to the first item.\n        const selectedOptionOffset =\n            this.empty ? 0 : this.getOptionIndex(this.selectionModel.selected[0])!;\n\n        // We must maintain a scroll buffer so the selected option will be scrolled to the\n        // center of the overlay panel rather than the top.\n        /* tslint:disable-next-line:no-magic-numbers */\n        const scrollBuffer = panelHeight / 2;\n        this.scrollTop = this.calculateOverlayScroll(selectedOptionOffset, scrollBuffer, maxScroll);\n        this.offsetY = this.calculateOverlayOffsetY();\n\n        this.checkOverlayWithinViewport(maxScroll);\n    }\n\n    /**\n     * Sets the x-offset of the overlay panel in relation to the trigger's top start corner.\n     * This must be adjusted to align the selected option text over the trigger text when\n     * the panel opens. Will change based on LTR or RTL text direction. Note that the offset\n     * can't be calculated until the panel has been attached, because we need to know the\n     * content width in order to constrain the panel within the viewport.\n     */\n    private calculateOverlayOffsetX() {\n        const overlayRect = this.overlayDir.overlayRef.overlayElement.getBoundingClientRect();\n        const viewportSize = this.viewportRuler.getViewportSize();\n        const isRtl = this.isRtl();\n        /* tslint:disable-next-line:no-magic-numbers */\n        const paddingWidth = SELECT_PANEL_PADDING_X * 2;\n        let offsetX: number = SELECT_PANEL_PADDING_X;\n\n        // Invert the offset in LTR.\n        if (!isRtl) { offsetX *= -1; }\n\n        // Determine how much the select overflows on each side.\n        const leftOverflow = 0 - (overlayRect.left + offsetX - (isRtl ? paddingWidth : 0));\n        const rightOverflow = overlayRect.right + offsetX - viewportSize.width\n            + (isRtl ? 0 : paddingWidth);\n\n        // If the element overflows on either side, reduce the offset to allow it to fit.\n        if (leftOverflow > 0) {\n            offsetX += leftOverflow + SELECT_PANEL_VIEWPORT_PADDING;\n        } else if (rightOverflow > 0) {\n            offsetX -= rightOverflow + SELECT_PANEL_VIEWPORT_PADDING;\n        }\n\n        // Set the offset directly in order to avoid having to go through change detection and\n        // potentially triggering \"changed after it was checked\" errors. Round the value to avoid\n        // blurry content in some browsers.\n        this.overlayDir.offsetX = Math.round(offsetX);\n        this.overlayDir.overlayRef.updatePosition();\n    }\n\n    /**\n     * Calculates the y-offset of the select's overlay panel in relation to the\n     * top start corner of the trigger. It has to be adjusted in order for the\n     * selected option to be aligned over the trigger when the panel opens.\n     */\n    private calculateOverlayOffsetY(): number {\n        // const itemHeight = this.getItemHeight();\n        // const optionHeightAdjustment = (itemHeight - this.triggerRect.height) / 2;\n\n        // todo I'm not sure that we will use it\n        return 0;\n        // return Math.round(-optionHeightAdjustment);\n    }\n\n    /**\n     * Checks that the attempted overlay position will fit within the viewport.\n     * If it will not fit, tries to adjust the scroll position and the associated\n     * y-offset so the panel can open fully on-screen. If it still won't fit,\n     * sets the offset back to 0 to allow the fallback position to take over.\n     */\n    private checkOverlayWithinViewport(maxScroll: number) {\n        const itemHeight = this.getItemHeight();\n        const viewportSize = this.viewportRuler.getViewportSize();\n\n        const topSpaceAvailable = this.triggerRect.top - SELECT_PANEL_VIEWPORT_PADDING;\n        const bottomSpaceAvailable =\n            viewportSize.height - this.triggerRect.bottom - SELECT_PANEL_VIEWPORT_PADDING;\n\n        const panelHeightTop = Math.abs(this.offsetY);\n        const totalPanelHeight =\n            Math.min(this.getItemCount() * itemHeight, SELECT_PANEL_MAX_HEIGHT);\n        const panelHeightBottom = totalPanelHeight - panelHeightTop - this.triggerRect.height;\n\n        if (panelHeightBottom > bottomSpaceAvailable) {\n            this.adjustPanelUp(panelHeightBottom, bottomSpaceAvailable);\n        } else if (panelHeightTop > topSpaceAvailable) {\n            this.adjustPanelDown(panelHeightTop, topSpaceAvailable, maxScroll);\n        } else {\n            this.transformOrigin = this.getOriginBasedOnOption();\n        }\n    }\n\n    /** Adjusts the overlay panel up to fit in the viewport. */\n    private adjustPanelUp(panelHeightBottom: number, bottomSpaceAvailable: number) {\n        // Browsers ignore fractional scroll offsets, so we need to round.\n        const distanceBelowViewport = Math.round(panelHeightBottom - bottomSpaceAvailable);\n\n        // Scrolls the panel up by the distance it was extending past the boundary, then\n        // adjusts the offset by that amount to move the panel up into the viewport.\n        this.scrollTop -= distanceBelowViewport;\n        this.offsetY -= distanceBelowViewport;\n        this.transformOrigin = this.getOriginBasedOnOption();\n\n        // If the panel is scrolled to the very top, it won't be able to fit the panel\n        // by scrolling, so set the offset to 0 to allow the fallback position to take\n        // effect.\n        if (this.scrollTop <= 0) {\n            this.scrollTop = 0;\n            this.offsetY = 0;\n            this.transformOrigin = `50% bottom 0px`;\n        }\n    }\n\n    /** Adjusts the overlay panel down to fit in the viewport. */\n    private adjustPanelDown(panelHeightTop: number, topSpaceAvailable: number, maxScroll: number) {\n        // Browsers ignore fractional scroll offsets, so we need to round.\n        const distanceAboveViewport = Math.round(panelHeightTop - topSpaceAvailable);\n\n        // Scrolls the panel down by the distance it was extending past the boundary, then\n        // adjusts the offset by that amount to move the panel down into the viewport.\n        this.scrollTop += distanceAboveViewport;\n        this.offsetY += distanceAboveViewport;\n        this.transformOrigin = this.getOriginBasedOnOption();\n\n        // If the panel is scrolled to the very bottom, it won't be able to fit the\n        // panel by scrolling, so set the offset to 0 to allow the fallback position\n        // to take effect.\n        if (this.scrollTop >= maxScroll) {\n            this.scrollTop = maxScroll;\n            this.offsetY = 0;\n            this.transformOrigin = `50% top 0px`;\n\n            return;\n        }\n    }\n\n    /** Sets the transform origin point based on the selected option. */\n    private getOriginBasedOnOption(): string {\n        const itemHeight = this.getItemHeight();\n        /* tslint:disable-next-line:no-magic-numbers */\n        const optionHeightAdjustment = (itemHeight - this.triggerRect.height) / 2;\n        /* tslint:disable-next-line:no-magic-numbers */\n        const originY = Math.abs(this.offsetY) - optionHeightAdjustment + itemHeight / 2;\n\n        return `50% ${originY}px 0px`;\n    }\n\n    /** Calculates the amount of items in the select. This includes options and group labels. */\n    private getItemCount(): number {\n        return this.options.length;\n    }\n\n    /** Calculates the height of the select's options. */\n    private getItemHeight(): number {\n        // todo доделать\n        /* tslint:disable-next-line:no-magic-numbers */\n        return 32;\n        // return this.triggerFontSize * SELECT_ITEM_HEIGHT_EM;\n    }\n\n    /** Comparison function to specify which option is displayed. Defaults to object equality. */\n    private _compareWith = (o1: any, o2: any) => o1 === o2;\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { OverlayModule } from '@ptsecurity/cdk/overlay';\nimport { CdkTreeModule } from '@ptsecurity/cdk/tree';\nimport { MC_SELECT_SCROLL_STRATEGY_PROVIDER, McPseudoCheckboxModule } from '@ptsecurity/mosaic/core';\nimport { McIconModule } from '@ptsecurity/mosaic/icon';\nimport { McTagModule } from '@ptsecurity/mosaic/tag';\nimport { McTreeModule } from '@ptsecurity/mosaic/tree';\n\nimport { McTreeSelect, McTreeSelectTrigger } from './tree-select.component';\n\n\n@NgModule({\n    imports: [\n        CommonModule,\n        OverlayModule,\n        CdkTreeModule,\n        McTreeModule,\n        McIconModule,\n        McTagModule,\n        McPseudoCheckboxModule\n    ],\n    exports: [McTreeSelect, McTreeSelectTrigger, CommonModule],\n    declarations: [McTreeSelect, McTreeSelectTrigger],\n    providers: [MC_SELECT_SCROLL_STRATEGY_PROVIDER]\n})\nexport class McTreeSelectModule {}\n","import {\n    Directive, DoCheck, ElementRef, Inject,\n    Input, OnChanges, OnDestroy, Optional,\n    Self, InjectionToken, NgZone, OnInit\n} from '@angular/core';\nimport { FormGroupDirective, NgControl, NgForm } from '@angular/forms';\nimport { coerceBooleanProperty } from '@ptsecurity/cdk/coercion';\nimport {\n    CanUpdateErrorState,\n    CanUpdateErrorStateCtor,\n    ErrorStateMatcher,\n    mixinErrorState\n} from '@ptsecurity/mosaic/core';\nimport { McFormFieldControl } from '@ptsecurity/mosaic/form-field';\nimport { fromEvent, Subscription, Subject } from 'rxjs';\nimport { distinctUntilChanged, map } from 'rxjs/operators';\n\n\nexport const MC_TEXTAREA_VALUE_ACCESSOR =\n    new InjectionToken<{ value: any }>('MC_TEXTAREA_VALUE_ACCESSOR');\n\nlet nextUniqueId = 0;\n\nconst ROW_SEPARATOR = '\\n';\n\nexport class McTextareaBase {\n    constructor(public defaultErrorStateMatcher: ErrorStateMatcher,\n                public parentForm: NgForm,\n                public parentFormGroup: FormGroupDirective,\n                public ngControl: NgControl) {\n    }\n}\n\n// tslint:disable-next-line:naming-convention\nexport const McTextareaMixinBase: CanUpdateErrorStateCtor & typeof McTextareaBase = mixinErrorState(McTextareaBase);\n\n@Directive({\n    selector: 'textarea[mcTextarea]',\n    exportAs: 'mcTextarea',\n    host: {\n        class: 'mc-textarea',\n        '[class.mc-textarea-resizable]': '!canGrow',\n        '[attr.id]': 'id',\n        '[attr.placeholder]': 'placeholder',\n        '[attr.aria-invalid]': 'errorState',\n        '[disabled]': 'disabled',\n        '[required]': 'required',\n        '(blur)': 'focusChanged(false)',\n        '(focus)': 'focusChanged(true)'\n    },\n    providers: [{ provide: McFormFieldControl, useExisting: McTextarea }]\n})\nexport class McTextarea extends McTextareaMixinBase implements McFormFieldControl<any>, OnInit, OnChanges,\n    OnDestroy, DoCheck, CanUpdateErrorState {\n\n    @Input() canGrow: boolean = true;\n\n    /** An object used to control when error messages are shown. */\n    @Input() errorStateMatcher: ErrorStateMatcher;\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    focused: boolean = false;\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    readonly stateChanges: Subject<void> = new Subject<void>();\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    controlType: string = 'mc-textarea';\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    @Input()\n    get disabled(): boolean {\n        if (this.ngControl && this.ngControl.disabled !== null) {\n            return this.ngControl.disabled;\n        }\n\n        return this._disabled;\n    }\n\n    set disabled(value: boolean) {\n        this._disabled = coerceBooleanProperty(value);\n\n        if (this.focused) {\n            this.focused = false;\n            this.stateChanges.next();\n        }\n    }\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    @Input()\n    get id(): string {\n        return this._id;\n    }\n\n    set id(value: string) {\n        this._id = value || this.uid;\n    }\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    @Input() placeholder: string;\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    @Input()\n    get required(): boolean {\n        return this._required;\n    }\n\n    set required(value: boolean) {\n        this._required = coerceBooleanProperty(value);\n    }\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    @Input()\n    get value(): string {\n        return this.valueAccessor.value;\n    }\n\n    set value(value: string) {\n        if (value !== this.value) {\n            this.valueAccessor.value = value;\n            this.stateChanges.next();\n        }\n    }\n\n    protected uid = `mc-textsrea-${nextUniqueId++}`;\n    protected previousNativeValue: any;\n    protected _disabled = false;\n    protected _id: string;\n    protected _required = false;\n\n    private valueAccessor: { value: any };\n    private growSubscription: Subscription;\n\n    private lineHeight: number = 0;\n    private freeRowsHeight: number = 0;\n    private minHeight: number = 0;\n\n    constructor(protected elementRef: ElementRef,\n                @Optional() @Self() public ngControl: NgControl,\n                @Optional() parentForm: NgForm,\n                @Optional() parentFormGroup: FormGroupDirective,\n                defaultErrorStateMatcher: ErrorStateMatcher,\n                @Optional() @Self() @Inject(MC_TEXTAREA_VALUE_ACCESSOR) inputValueAccessor: any,\n                private ngZone: NgZone) {\n        super(defaultErrorStateMatcher, parentForm, parentFormGroup, ngControl);\n        // If no input value accessor was explicitly specified, use the element as the textarea value\n        // accessor.\n        this.valueAccessor = inputValueAccessor || this.elementRef.nativeElement;\n\n        this.previousNativeValue = this.value;\n\n        // Force setter to be called in case id was not specified.\n        this.id = this.id;\n\n        const growObserver = fromEvent(elementRef.nativeElement, 'input')\n            /*.pipe(\n                map((event: any) => this.getGrowHeight()),\n                // map((event: any) => event.target.scrollHeight),\n                distinctUntilChanged()\n            )*/;\n        this.growSubscription = growObserver.subscribe(this.grow.bind(this));\n    }\n\n    ngOnInit() {\n        setTimeout(() => this.grow(), 0);\n        this.lineHeight = parseInt(getComputedStyle(this.elementRef.nativeElement).lineHeight!, 10);\n\n        const paddingTop = parseInt(getComputedStyle(this.elementRef.nativeElement).paddingTop!, 10);\n        const paddingBottom = parseInt(getComputedStyle(this.elementRef.nativeElement).paddingBottom!, 10);\n\n        // tslint:disable-next-line:no-magic-numbers\n        this.minHeight = this.lineHeight * 2 + paddingTop + paddingBottom;\n        this.freeRowsHeight = this.lineHeight;\n    }\n\n    ngOnChanges() {\n        this.stateChanges.next();\n    }\n\n    ngOnDestroy() {\n        this.stateChanges.complete();\n        this.growSubscription.unsubscribe();\n    }\n\n    ngDoCheck() {\n        if (this.ngControl) {\n            // We need to re-evaluate this on every change detection cycle, because there are some\n            // error triggers that we can't subscribe to (e.g. parent form submissions). This means\n            // that whatever logic is in here has to be super lean or we risk destroying the performance.\n            this.updateErrorState();\n        }\n\n        // We need to dirty-check the native element's value, because there are some cases where\n        // we won't be notified when it changes (e.g. the consumer isn't using forms or they're\n        // updating the value using `emitEvent: false`).\n        this.dirtyCheckNativeValue();\n    }\n\n    /** Grow textarea height to avoid vertical scroll  */\n    grow() {\n        if (!this.canGrow) {\n            return;\n        }\n\n        this.ngZone.runOutsideAngular(() => {\n            const textarea = this.elementRef.nativeElement;\n\n            const outerHeight = parseInt(window.getComputedStyle(textarea).height!, 10);\n            const diff = outerHeight - textarea.clientHeight;\n\n            textarea.style.height = 0; // this line is important to height recalculation\n\n            const height = Math.max(this.minHeight, textarea.scrollHeight + diff + this.freeRowsHeight);\n            textarea.style.height = `${height}px`;\n        });\n    }\n\n    /** Focuses the textarea. */\n    focus(): void {\n        this.elementRef.nativeElement.focus();\n    }\n\n    /** Callback for the cases where the focused state of the textarea changes. */\n    focusChanged(isFocused: boolean) {\n        if (isFocused !== this.focused) {\n            this.focused = isFocused;\n            this.stateChanges.next();\n        }\n    }\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    get empty(): boolean {\n        return !this.elementRef.nativeElement.value && !this.isBadInput();\n    }\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    onContainerClick() {\n        this.focus();\n    }\n\n    /** Does some manual dirty checking on the native textarea `value` property. */\n    protected dirtyCheckNativeValue() {\n        const newValue = this.value;\n\n        if (this.previousNativeValue !== newValue) {\n            this.previousNativeValue = newValue;\n            this.stateChanges.next();\n        }\n    }\n\n    /** Checks whether the textarea is invalid based on the native validation. */\n    protected isBadInput(): boolean {\n        // The `validity` property won't be present on platform-server.\n        const validity = (this.elementRef.nativeElement as HTMLTextAreaElement).validity;\n\n        return validity && validity.badInput;\n    }\n\n    private getGrowHeight(): number {\n        const textarea = this.elementRef.nativeElement;\n        const outerHeight = parseInt(window.getComputedStyle(textarea).height!.toString(), 10);\n        const diff = outerHeight - textarea.clientHeight;\n\n        return Math.max(this.minHeight, textarea.scrollHeight + diff);\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { A11yModule } from '@ptsecurity/cdk/a11y';\nimport { McCommonModule } from '@ptsecurity/mosaic/core';\n\nimport { McTextarea } from './textarea.component';\n\n\n@NgModule({\n    imports: [CommonModule, A11yModule, McCommonModule, FormsModule],\n    exports: [McTextarea],\n    declarations: [McTextarea]\n})\nexport class McTextareaModule {\n}\n","import {\n    Directive,\n    DoCheck,\n    ElementRef,\n    forwardRef,\n    Inject,\n    Input,\n    OnChanges,\n    OnDestroy,\n    Optional,\n    Renderer2,\n    Self\n} from '@angular/core';\nimport {\n    ControlValueAccessor,\n    FormControl,\n    FormGroupDirective,\n    NG_VALIDATORS,\n    NgControl,\n    NgForm,\n    ValidationErrors,\n    ValidatorFn,\n    Validators\n} from '@angular/forms';\nimport { coerceBooleanProperty } from '@ptsecurity/cdk/coercion';\nimport {\n    CanUpdateErrorState,\n    CanUpdateErrorStateCtor,\n    ErrorStateMatcher,\n    mixinErrorState\n} from '@ptsecurity/mosaic/core';\nimport { McFormFieldControl } from '@ptsecurity/mosaic/form-field';\nimport { MC_INPUT_VALUE_ACCESSOR } from '@ptsecurity/mosaic/input';\nimport {\n    noop,\n    Subject\n} from 'rxjs';\n\nimport {\n    ARROW_DOWN_KEYCODE,\n    ARROW_LEFT_KEYCODE,\n    ARROW_RIGHT_KEYCODE,\n    ARROW_UP_KEYCODE,\n    DEFAULT_TIME_FORMAT,\n    HOURS_PER_DAY,\n    HOURS_MINUTES_REGEXP,\n    HOURS_MINUTES_SECONDS_REGEXP,\n    HOURS_ONLY_REGEXP,\n    MINUTES_PER_HOUR,\n    SECONDS_PER_MINUTE,\n    TIMEFORMAT_PLACEHOLDERS,\n    TimeFormats,\n    TimeParts\n} from './timepicker.constants';\n\n\nlet uniqueComponentIdSuffix: number = 0;\n\nconst formValidators: WeakMap<FormControl, ValidatorFn | null> = new WeakMap();\nconst formValidatorOnChangeRegistrators: WeakMap<FormControl, () => void> = new WeakMap();\nconst validatorOnChange = (c: FormControl) => {\n    const validatorOnChangeHandler = formValidatorOnChangeRegistrators.get(c);\n\n    if (validatorOnChangeHandler !== undefined) { validatorOnChangeHandler(); }\n};\n\nexport class McTimepickerBase {\n    constructor(\n        public defaultErrorStateMatcher: ErrorStateMatcher,\n        public parentForm: NgForm,\n        public parentFormGroup: FormGroupDirective,\n        public ngControl: NgControl) { }\n}\n\n// tslint:disable-next-line naming-convention\nexport const McTimepickerMixinBase:\n    CanUpdateErrorStateCtor &\n    typeof McTimepickerBase = mixinErrorState(McTimepickerBase);\n\n@Directive({\n    selector: 'input[mcTimepicker]',\n    exportAs: 'mcTimepickerInput',\n    host: {\n        class: 'mc-timepicker mc-input',\n        // Native input properties that are overwritten by Angular inputs need to be synced with\n        // the native input element. Otherwise property bindings for those don't work.\n        '[attr.id]': 'id',\n        '[attr.placeholder]': 'placeholder',\n        '[disabled]': 'disabled',\n        '[required]': 'required',\n        '[attr.time-format]': 'timeFormat',\n        '[attr.min-time]': 'minTime',\n        '[attr.max-time]': 'maxTime',\n        '[attr.value]': 'value',\n        '[attr.aria-invalid]': 'errorState',\n        '(blur)': 'onBlur()',\n        '(focus)': 'focusChanged(true)',\n        '(input)': 'onInput()',\n        '(paste)': 'onPaste($event)',\n        '(keydown)': 'onKeyDown($event)'\n    },\n    providers: [\n        {\n            provide: NG_VALIDATORS,\n            useValue: {\n                validate(c: FormControl) {\n                    // TODO This is `workaround` to bind singleton-like Validator implementation to\n                    // context of each validated component. This MUST be realized in proper way!\n                    if (this.__validatorOnChangeHandler !== undefined) {\n                        formValidatorOnChangeRegistrators.set(c, this.__validatorOnChangeHandler);\n                        this.__validatorOnChangeHandler = undefined;\n                    }\n                    const validator = formValidators.get(c);\n\n                    return validator ? validator(c) : null;\n                },\n                registerOnValidatorChange(fn: () => void): void {\n                    this.__validatorOnChangeHandler = fn;\n                }\n            },\n            multi: true\n        },\n        {\n            provide: McFormFieldControl,\n            useExisting: forwardRef(() => McTimepicker)\n        }\n    ]\n\n})\nexport class McTimepicker extends McTimepickerMixinBase\n    implements McFormFieldControl<any>,\n        OnChanges,\n        OnDestroy,\n        DoCheck,\n        CanUpdateErrorState,\n        ControlValueAccessor {\n\n    /** An object used to control when error messages are shown. */\n    @Input() errorStateMatcher: ErrorStateMatcher;\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    focused: boolean = false;\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    readonly stateChanges: Subject<void> = new Subject<void>();\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    controlType: string = 'mc-timepicker';\n\n    @Input()\n    get disabled(): boolean {\n        if (this.ngControl && this.ngControl.disabled !== null) { return this.ngControl.disabled; }\n\n        return this._disabled;\n    }\n\n    set disabled(value: boolean) {\n        this._disabled = coerceBooleanProperty(value);\n\n        // Browsers may not fire the blur event if the input is disabled too quickly.\n        // Reset from here to ensure that the element doesn't become stuck.\n        if (this.focused) {\n            this.focused = false;\n        }\n\n        this.stateChanges.next();\n    }\n\n    @Input()\n    get id(): string { return this._id; }\n\n    set id(value: string) { this._id = value || this.uid; }\n\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    @Input() placeholder: string;\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    @Input()\n    get required(): boolean { return this._required; }\n\n    set required(value: boolean) { this._required = coerceBooleanProperty(value); }\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    @Input()\n    get value(): string { return this.inputValueAccessor.value; }\n\n    set value(value: string) {\n        if (value !== this.value) {\n            this.inputValueAccessor.value = value;\n            this.applyInputChanges();\n        }\n    }\n\n    @Input('time-format')\n    get timeFormat(): TimeFormats { return this._timeFormat; }\n\n    set timeFormat(formatValue: TimeFormats) {\n        this._timeFormat = Object\n            .keys(TimeFormats)\n            .map((timeFormatKey) => TimeFormats[timeFormatKey])\n            .indexOf(formatValue) > -1 ? formatValue : DEFAULT_TIME_FORMAT;\n\n        validatorOnChange(<FormControl> this.ngControl.control);\n        this.placeholder = TIMEFORMAT_PLACEHOLDERS[this._timeFormat];\n    }\n\n    @Input('min-time')\n    get minTime(): string | null { return this._minTime; }\n\n    set minTime(minValue: string | null) {\n        this._minTime = minValue;\n        this.minDateTime = minValue !== null ? this.getDateFromTimeString(minValue) : undefined;\n        validatorOnChange(<FormControl> this.ngControl.control);\n    }\n\n    @Input('max-time')\n    get maxTime(): string | null { return this._maxTime; }\n\n    set maxTime(maxValue: string | null) {\n        this._maxTime = maxValue;\n        this.maxDateTime = maxValue !== null ? this.getDateFromTimeString(maxValue) : undefined;\n        validatorOnChange(<FormControl> this.ngControl.control);\n    }\n\n    private _id: string;\n    private readonly uid = `mc-timepicker-${uniqueComponentIdSuffix++}`;\n    private _disabled: boolean;\n    private _required: boolean;\n    private previousNativeValue: any;\n    private readonly inputValueAccessor: { value: any };\n    private onChange: (value: any) => void;\n    private onTouched: () => void;\n    private _timeFormat: TimeFormats;\n    private _minTime: string | null = null;\n    private minDateTime: Date | undefined;\n    private _maxTime: string | null = null;\n    private maxDateTime: Date | undefined;\n    private currentDateTimeInput: Date | undefined;\n\n    constructor(private readonly elementRef: ElementRef,\n                @Optional() @Self() public ngControl: NgControl,\n                @Optional() parentForm: NgForm,\n                @Optional() parentFormGroup: FormGroupDirective,\n                defaultErrorStateMatcher: ErrorStateMatcher,\n                @Optional() @Self() @Inject(MC_INPUT_VALUE_ACCESSOR) inputValueAccessor: any,\n                private readonly renderer: Renderer2) {\n        super(defaultErrorStateMatcher, parentForm, parentFormGroup, ngControl);\n\n        // If no input value accessor was explicitly specified, use the element as the input value\n        // accessor.\n        this.inputValueAccessor = inputValueAccessor || this.elementRef.nativeElement;\n\n        this.previousNativeValue = this.value;\n        this.onChange = noop;\n\n        // Force setter to be called in case id was not specified.\n        this.id = this.id;\n\n        this.placeholder = TIMEFORMAT_PLACEHOLDERS[DEFAULT_TIME_FORMAT];\n\n        // Instead of NG_VALUE_ACCESSOR (https://github.com/angular/material2/issues/8158#issuecomment-344618103)\n        if (this.ngControl) { this.ngControl.valueAccessor = this; }\n\n        // Substitute initial empty validator with validator linked to directive object instance (workaround)\n\n        formValidators.set(\n            <FormControl> this.ngControl.control,\n            Validators.compose([\n                () => this.parseValidator(),\n                () => this.minTimeValidator(),\n                () => this.maxTimeValidator()\n            ])\n        );\n    }\n\n    ngOnChanges(): void {\n        this.stateChanges.next();\n    }\n\n    ngOnDestroy(): void {\n        this.stateChanges.complete();\n    }\n\n    ngDoCheck(): void {\n        if (this.ngControl) {\n            // We need to re-evaluate this on every change detection cycle, because there are some\n            // error triggers that we can't subscribe to (e.g. parent form submissions). This means\n            // that whatever logic is in here has to be super lean or we risk destroying the performance.\n            this.updateErrorState();\n        }\n\n        // We need to dirty-check the native element's value, because there are some cases where\n        // we won't be notified when it changes (e.g. the consumer isn't using forms or they're\n        // updating the value using `emitEvent: false`).\n        this.dirtyCheckNativeValue();\n    }\n\n    focus(): void {\n        this.elementRef.nativeElement.focus();\n    }\n\n    focusChanged(isFocused: boolean): void {\n        if (isFocused !== this.focused) {\n            this.focused = isFocused;\n            this.onTouched();\n            this.stateChanges.next();\n        }\n    }\n\n    onBlur() {\n        this.applyInputChanges();\n        this.focusChanged(false);\n    }\n\n    onPaste($event) {\n        $event.preventDefault();\n        const clipboardUserInput: string = $event.clipboardData.getData('text');\n\n        if (this.getDateFromTimeString(clipboardUserInput) === undefined) { return; }\n\n        this.elementRef.nativeElement.value = clipboardUserInput;\n        this.onInput();\n    }\n\n    onInput() {\n        const initialCursorStart: number = this.elementRef.nativeElement.selectionStart;\n        const initialCursorEnd: number = this.elementRef.nativeElement.selectionEnd;\n        let isAutocompleteTriggered: boolean = false;\n\n        const {\n            hoursOnly,\n            hoursAndMinutes,\n            hoursAndMinutesAndSeconds\n        } = this.getParsedTimeParts(this.elementRef.nativeElement.value);\n\n        // tslint:disable no-magic-numbers\n        if (hoursOnly &&\n            hoursOnly[1] &&\n            hoursOnly[1].length === 2) {\n            isAutocompleteTriggered = true;\n        } else if (hoursAndMinutes &&\n            hoursAndMinutes[1].length === 1 &&\n            hoursAndMinutes[2] &&\n            hoursAndMinutes[2].length === 2) {\n            isAutocompleteTriggered = true;\n        } else if (hoursAndMinutesAndSeconds &&\n            hoursAndMinutesAndSeconds[1].length === 2 &&\n            hoursAndMinutesAndSeconds[2].length === 2 &&\n            hoursAndMinutesAndSeconds[3] &&\n            hoursAndMinutesAndSeconds[3].length === 2) {\n            isAutocompleteTriggered = true;\n        }\n        // tslint:enable no-magic-numbers\n\n        this.applyInputChanges({ doTimestringReformat: isAutocompleteTriggered });\n\n        this.elementRef.nativeElement.selectionStart = initialCursorStart;\n        this.elementRef.nativeElement.selectionEnd = initialCursorEnd;\n\n        if (isAutocompleteTriggered && this.ngControl.errors === null) {\n            this.createSelectionOfTimeComponentInInput(initialCursorStart + 1);\n        }\n    }\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    get empty(): boolean {\n        return !this.elementRef.nativeElement.value && !this.isBadInput();\n    }\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    onContainerClick() {\n        this.focus();\n    }\n\n    writeValue(value: Date | null): void {\n        if (value !== null) {\n            this.renderer.setProperty(this.elementRef.nativeElement,\n                'value',\n                this.getTimeStringFromDate(value, this.timeFormat)\n            );\n        }\n        this.onChange(value || null);\n        this.applyInputChanges();\n    }\n\n    onKeyDown(event: KeyboardEvent): void {\n\n        const keyCode: string = this.getKeyCode(event);\n\n        if (keyCode === ARROW_UP_KEYCODE || keyCode === ARROW_DOWN_KEYCODE) {\n            this.upDownTimeByArrowKeys(event);\n        }\n        if (keyCode === ARROW_LEFT_KEYCODE || keyCode === ARROW_RIGHT_KEYCODE) {\n            this.switchSelectionBetweenTimeparts(event);\n        }\n    }\n\n    registerOnChange(fn: (value: Date) => void): void {\n        this.onChange = fn;\n    }\n\n    registerOnTouched(fn: () => void): void {\n        this.onTouched = fn;\n    }\n\n    /** Does some manual dirty checking on the native input `value` property. */\n    private dirtyCheckNativeValue() {\n        const newValue = this.value;\n\n        if (this.previousNativeValue !== newValue) {\n            this.previousNativeValue = newValue;\n            this.stateChanges.next();\n        }\n    }\n\n    /** Checks whether the input is invalid based on the native validation. */\n    private isBadInput(): boolean {\n        const validity = (<HTMLInputElement> this.elementRef.nativeElement).validity;\n\n        return validity && validity.badInput;\n    }\n\n    private applyInputChanges(applyParams: {\n        changedTime?: Date;\n        doTimestringReformat?: boolean;\n    } = {}): void {\n        const { changedTime, doTimestringReformat = true } = applyParams;\n        const timeToApply: Date | undefined = changedTime ||\n            this.getDateFromTimeString(this.elementRef.nativeElement.value);\n        this.currentDateTimeInput = timeToApply;\n\n        if (doTimestringReformat && timeToApply !== undefined) {\n            const selectionStart: number = this.elementRef.nativeElement.selectionStart;\n            const selectionEnd: number = this.elementRef.nativeElement.selectionEnd;\n            this.renderer.setProperty(\n                this.elementRef.nativeElement,\n                'value',\n                this.getTimeStringFromDate(timeToApply, this.timeFormat));\n            this.elementRef.nativeElement.selectionStart = selectionStart;\n            this.elementRef.nativeElement.selectionEnd = selectionEnd;\n        }\n\n        (<FormControl> this.ngControl.control).updateValueAndValidity();\n        const result = this.ngControl.errors === null && timeToApply !== undefined ? timeToApply : null;\n        this.onChange(result);\n        this.stateChanges.next();\n    }\n\n    private upDownTimeByArrowKeys(event: KeyboardEvent): void {\n        event.preventDefault();\n\n        let changedTime: Date | undefined = this.currentDateTimeInput;\n        if (changedTime !== undefined) {\n            const cursorPos = this.elementRef.nativeElement.selectionStart;\n\n            const modifiedTimePart = this.getTimeEditMetrics(cursorPos)\n                .modifiedTimePart;\n            const keyCode: string = this.getKeyCode(event);\n            if (keyCode === ARROW_UP_KEYCODE) { changedTime = this.incrementTime(changedTime, modifiedTimePart); }\n            if (keyCode === ARROW_DOWN_KEYCODE) { changedTime = this.decrementTime(changedTime, modifiedTimePart); }\n            this.applyInputChanges({ changedTime });\n            this.createSelectionOfTimeComponentInInput(cursorPos);\n        }\n    }\n\n    private switchSelectionBetweenTimeparts(event: KeyboardEvent): void {\n        const changedTime: Date | undefined = this.currentDateTimeInput;\n        const keyCode: string = this.getKeyCode(event);\n\n        if (changedTime !== undefined) {\n            let cursorPos: number = this.elementRef.nativeElement.selectionStart;\n            if (keyCode === ARROW_LEFT_KEYCODE) {\n                cursorPos = this.getCursorPositionOfPrevTimePartStart(cursorPos, this.elementRef.nativeElement.value);\n            } else if (keyCode === ARROW_RIGHT_KEYCODE) {\n                cursorPos = this.getCursorPositionOfNextTimePartStart(cursorPos, this.elementRef.nativeElement.value);\n            }\n            this.createSelectionOfTimeComponentInInput(cursorPos);\n        }\n    }\n\n    /**\n     * @description Microsoft EDGE doesn't support KeyboaedEvent.code thus we need this helper\n     */\n    private getKeyCode(event: KeyboardEvent): string {\n        return event.code || event.key;\n    }\n\n    private createSelectionOfTimeComponentInInput(cursorPos: number): void {\n        setTimeout(() => {\n            const newEditParams = this.getTimeEditMetrics(cursorPos);\n            this.elementRef.nativeElement.selectionStart = newEditParams.cursorStartPosition;\n            this.elementRef.nativeElement.selectionEnd = newEditParams.cursorEndPosition;\n        });\n    }\n\n    private incrementTime(dateVal: Date,\n                          whatToIncrement: TimeParts = TimeParts.seconds): Date {\n        let { hours, minutes, seconds } = this.getTimeDigitsFromDate(dateVal);\n\n        switch (whatToIncrement) {\n            case TimeParts.hours:\n                hours++;\n                break;\n            case TimeParts.minutes:\n                minutes++;\n                break;\n            case TimeParts.seconds:\n                seconds++;\n                break;\n            default:\n        }\n\n        if (seconds > SECONDS_PER_MINUTE) { seconds = 0; }\n\n        if (minutes > MINUTES_PER_HOUR) { minutes = 0; }\n\n        if (hours > HOURS_PER_DAY) { hours = 0; }\n\n        return <Date> this.getDateFromTimeDigits(hours, minutes, seconds);\n    }\n\n    /**\n     * @description Decrement part of time\n     */\n    private decrementTime(dateVal: Date,\n                          whatToDecrement: TimeParts = TimeParts.seconds): Date {\n        let { hours, minutes, seconds } = this.getTimeDigitsFromDate(dateVal);\n\n        switch (whatToDecrement) {\n            case TimeParts.hours:\n                hours--;\n                break;\n            case TimeParts.minutes:\n                minutes--;\n                break;\n            case TimeParts.seconds:\n                seconds--;\n                break;\n            default:\n        }\n\n        if (seconds < 0) { seconds = SECONDS_PER_MINUTE; }\n\n        if (minutes < 0) { minutes = MINUTES_PER_HOUR; }\n\n        if (hours < 0) { hours = HOURS_PER_DAY; }\n\n        return <Date> this.getDateFromTimeDigits(hours, minutes, seconds);\n    }\n\n    private getCursorPositionOfPrevTimePartStart(cursorPos: number, timeString: string): number {\n        return cursorPos === 0 ? timeString.length : cursorPos - 1;\n    }\n\n    private getCursorPositionOfNextTimePartStart(cursorPos: number,\n                                                 timeString: string,\n                                                 timeDevider: string = ':'): number {\n        const nextDividerPos: number = timeString.indexOf(timeDevider, cursorPos);\n\n        return nextDividerPos !== undefined ? nextDividerPos + 1 : 0;\n    }\n\n    /**\n     * @description Get params for arrow-keys (up/down) time valie edit.\n     * @param cursorPosition Current cursor position in timeString\n     */\n    private getTimeEditMetrics(cursorPosition: number): {\n        modifiedTimePart: TimeParts;\n        cursorStartPosition: number;\n        cursorEndPosition: number;\n    } {\n        const timeString: string = this.elementRef.nativeElement.value;\n        let modifiedTimePart: TimeParts;\n        let cursorStartPosition: number;\n        let cursorEndPosition: number;\n        const hoursIndex = 0;\n        const minutesIndex = timeString.indexOf(':', hoursIndex + 1);\n        const secondsIndex = minutesIndex !== -1 ? timeString.indexOf(':', minutesIndex + 1) : -1;\n\n        if (secondsIndex !== -1 && cursorPosition > secondsIndex) {\n            modifiedTimePart = TimeParts.seconds;\n            cursorStartPosition = secondsIndex + 1;\n            cursorEndPosition = timeString.length;\n        } else if (minutesIndex !== -1 && cursorPosition > minutesIndex) {\n            modifiedTimePart = TimeParts.minutes;\n            cursorStartPosition = minutesIndex + 1;\n            cursorEndPosition = secondsIndex > -1 ? secondsIndex : timeString.length;\n        } else {\n            modifiedTimePart = TimeParts.hours;\n            cursorStartPosition = hoursIndex;\n            cursorEndPosition = minutesIndex !== -1 ? minutesIndex : timeString.length;\n        }\n\n        return {\n            modifiedTimePart,\n            cursorStartPosition,\n            cursorEndPosition\n        };\n    }\n\n    /**\n     * @description Create time string for displaying inside input element of UI\n     */\n    private getTimeStringFromDate(tempVal: Date,\n                                  timeFormat: TimeFormats = DEFAULT_TIME_FORMAT): string {\n        const hours: string = this.getNumberWithLeadingZero(tempVal.getHours());\n        const minutes: string = this.getNumberWithLeadingZero(tempVal.getMinutes());\n        const seconds: string = this.getNumberWithLeadingZero(tempVal.getSeconds());\n\n        const formattedTimeGenerators = {\n            [TimeFormats.HHmm]: () => `${hours}:${minutes}`,\n            [TimeFormats.HHmmss]: () => `${hours}:${minutes}:${seconds}`\n        };\n\n        return formattedTimeGenerators[timeFormat]();\n    }\n\n    private getParsedTimeParts(timeString: string): {\n        hoursOnly: any;\n        hoursAndMinutes: any;\n        hoursAndMinutesAndSeconds: any;\n    } {\n        const hoursAndMinutesAndSeconds = timeString.match(HOURS_MINUTES_SECONDS_REGEXP);\n        const hoursAndMinutes = timeString.match(HOURS_MINUTES_REGEXP);\n        const hoursOnly = timeString.match(HOURS_ONLY_REGEXP);\n\n        return {\n            hoursOnly,\n            hoursAndMinutes,\n            hoursAndMinutesAndSeconds\n        };\n    }\n\n    /**\n     * @description Create Date object from separate parts of time\n     */\n    private getDateFromTimeDigits(hours: number, minutes: number, seconds: number = 0): Date | undefined {\n        return this.getDateFromTimeString(`${hours}:${minutes}:${seconds}`);\n    }\n\n    private getDateFromTimeString(timeString: string | undefined): Date | undefined {\n        // TODO Use moment-js\n        if (timeString === undefined) { return; }\n\n        const {\n            hoursOnly,\n            hoursAndMinutes,\n            hoursAndMinutesAndSeconds\n        } = this.getParsedTimeParts(timeString);\n\n        if (timeString.trim().length === 0 ||\n            hoursOnly === null && hoursAndMinutes === null && hoursAndMinutesAndSeconds === null) {\n            return;\n        }\n\n        // tslint:disable no-magic-numbers\n        let hours: number = 0;\n        let minutes: number = 0;\n        let seconds: number = 0;\n\n        if (hoursOnly) {\n            hours = Number(hoursOnly[1]);\n        } else if (hoursAndMinutes) {\n            hours = Number(hoursAndMinutes[1]);\n            minutes = Number(hoursAndMinutes[2]);\n        } else if (hoursAndMinutesAndSeconds) {\n            hours = Number(hoursAndMinutesAndSeconds[1]);\n            minutes = Number(hoursAndMinutesAndSeconds[2]);\n            seconds = Number(hoursAndMinutesAndSeconds[3]);\n        }\n        // const timestamp: number = Date.parse(fullDateString);\n        const resultDate: Date = new Date(1970, 0, 1, hours, minutes, seconds);\n        // tslint:enable no-magic-numbers\n\n        return isNaN(resultDate.getTime()) ? undefined : resultDate;\n    }\n\n    private getNumberWithLeadingZero(digit: number): string {\n        const MAX_DIGIT_WITH_LEADING_ZERO: number = 9;\n\n        return digit > MAX_DIGIT_WITH_LEADING_ZERO ? `${digit}` : `0${digit}`;\n    }\n\n    private getTimeDigitsFromDate(dateVal: Date): { hours: number; minutes: number; seconds: number } {\n        return {\n            hours: dateVal.getHours(),\n            minutes: dateVal.getMinutes(),\n            seconds: dateVal.getSeconds()\n        };\n    }\n\n    private parseValidator(): ValidationErrors | null {\n        return this.currentDateTimeInput === undefined ?\n            { mcTimepickerParse: { text: this.elementRef.nativeElement.value } } :\n            null;\n    }\n\n    private minTimeValidator(): ValidationErrors | null {\n\n        if (this.currentDateTimeInput !== undefined &&\n            this.minDateTime !== undefined &&\n            this.isTimeLowerThenMin(this.currentDateTimeInput)) {\n            return { mcTimepickerLowerThenMintime: { text: this.elementRef.nativeElement.value } };\n        }\n\n        return null;\n    }\n\n    private maxTimeValidator(): ValidationErrors | null {\n        if (this.currentDateTimeInput !== undefined &&\n            this.maxDateTime !== undefined &&\n            this.isTimeGreaterThenMax(this.currentDateTimeInput)) {\n            return { mcTimepickerHigherThenMaxtime: { text: this.elementRef.nativeElement.value } };\n        }\n\n        return null;\n    }\n\n    private isTimeLowerThenMin(timeToCompare: Date): boolean {\n        return timeToCompare.getTime() - (<Date> this.minDateTime).getTime() < 0;\n    }\n\n    private isTimeGreaterThenMax(timeToCompare: Date): boolean {\n        return timeToCompare.getTime() - (<Date> this.maxDateTime).getTime() >= 0;\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\n\nimport { A11yModule } from '@ptsecurity/cdk/a11y';\nimport { PlatformModule } from '@ptsecurity/cdk/platform';\n\nimport { McTimepicker } from './timepicker';\n\n\n@NgModule({\n    imports: [\n        CommonModule,\n        A11yModule,\n        PlatformModule,\n        FormsModule\n    ],\n    declarations: [\n        McTimepicker\n    ],\n    exports: [\n        McTimepicker\n    ]\n})\nexport class McTimepickerModule {}\n","import { InjectionToken } from '@angular/core';\n\n\n/** Injection token that can be used to access the data that was passed in to a sidepanel. */\nexport const MC_SIDEPANEL_DATA = new InjectionToken<any>('McSidepanelData');\n\nexport enum McSidepanelPosition {\n    Right = 'right',\n    Left = 'left',\n    Top = 'top',\n    Bottom = 'bottom'\n}\n\nexport class McSidepanelConfig<D = any> {\n    /** ID for the sidepanel. If omitted, a unique one will be generated. */\n    id?: string;\n\n    /** Data being injected into the child component. */\n    data?: D | null = null;\n\n    position?: McSidepanelPosition = McSidepanelPosition.Right;\n\n    /** Whether the sidepanel has a backdrop. */\n    hasBackdrop?: boolean = true;\n\n    /** When we open multiple sidepanels, backdrop appears only once, except cases then this flag is true. */\n    requiredBackdrop?: boolean = false;\n\n    /** Whether the user can use escape or clicking outside to close the sidepanel. */\n    disableClose?: boolean = false;\n\n    /** Custom class for the overlay pane. */\n    overlayPanelClass?: string | string[] = '';\n}\n","import { animate, AnimationTriggerMetadata, state, style, transition, trigger } from '@angular/animations';\nimport { AnimationCurves } from '@ptsecurity/mosaic/core';\n\nimport { McSidepanelPosition } from './sidepanel-config';\n\n\nexport enum McSidepanelAnimationState {\n    Void = 'void',\n    Visible = 'visible',\n    Hidden = 'hidden'\n}\n\n// TODO Find a way to use dynamic keys and avoid error \"Expression form not supported.\"\n// tslint:disable-next-line\nexport const mcSidepanelTransformAnimation: Record<McSidepanelPosition, { in: string; out: string }> = {\n    right: { in: 'translateX(100%)', out: 'translateX(0%)' },\n    left: { in: 'translateX(-100%)', out: 'translateX(0%)' },\n    top: { in: 'translateY(-100%)', out: 'translateY(0%)' },\n    bottom: { in: 'translateY(100%)', out: 'translateY(0%)' }\n};\n\nexport const mcSidepanelAnimations: {\n    readonly sidepanelState: AnimationTriggerMetadata;\n} = {\n    sidepanelState: trigger('state', [\n        state('hidden',\n            style({ transform: '{{transformIn}}' }),\n            { params: { transformIn: mcSidepanelTransformAnimation[McSidepanelPosition.Right].in }}\n        ),\n        state('visible',\n            style({ transform: '{{transformOut}}' }),\n            { params: { transformOut: mcSidepanelTransformAnimation[McSidepanelPosition.Right].out }}\n        ),\n        transition('visible => void, visible => hidden',\n            animate(`200ms ${AnimationCurves.AccelerationCurve}`)),\n        transition('void => visible',\n            animate(`200ms ${AnimationCurves.DecelerationCurve}`))\n    ])\n};\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { OverlayModule } from '@ptsecurity/cdk/overlay';\nimport { MC_SELECT_SCROLL_STRATEGY_PROVIDER, McOptionModule } from '@ptsecurity/mosaic/core';\nimport { McFormFieldModule } from '@ptsecurity/mosaic/form-field';\nimport { McIconModule } from '@ptsecurity/mosaic/icon';\nimport { McTagModule } from '@ptsecurity/mosaic/tag';\n\nimport { McSelect, McSelectTrigger } from './select.component';\n\n\n@NgModule({\n    imports: [\n        CommonModule,\n        OverlayModule,\n        McOptionModule,\n        McIconModule,\n        McTagModule\n    ],\n    exports: [McFormFieldModule, McSelect, McSelectTrigger, McOptionModule, CommonModule],\n    declarations: [McSelect, McSelectTrigger],\n    providers: [MC_SELECT_SCROLL_STRATEGY_PROVIDER]\n})\nexport class McSelectModule {}\n","import { AnimationEvent } from '@angular/animations';\nimport {\n    Component,\n    ChangeDetectorRef,\n    Input,\n    Inject,\n    Output,\n    EventEmitter,\n    OnDestroy,\n    OnInit,\n    ElementRef,\n    Directive,\n    Optional,\n    ViewEncapsulation,\n    ChangeDetectionStrategy,\n    ComponentFactoryResolver,\n    ViewContainerRef,\n    forwardRef,\n    ViewChild\n} from '@angular/core';\nimport { Directionality, Direction } from '@ptsecurity/cdk/bidi';\nimport { TemplatePortal, CdkPortalOutlet, PortalHostDirective } from '@ptsecurity/cdk/portal';\nimport { Subscription } from 'rxjs';\nimport { startWith } from 'rxjs/operators';\n\nimport { mcTabsAnimations } from './tabs-animations';\n\n\n/**\n * These position states are used internally as animation states for the tab body. Setting the\n * position state to left, right, or center will transition the tab body from its current\n * position to its respective state. If there is not current position (void, in the case of a new\n * tab body), then there will be no transition animation to its state.\n *\n * In the case of a new tab body that should immediately be centered with an animating transition,\n * then left-origin-center or right-origin-center can be used, which will use left or right as its\n * psuedo-prior state.\n */\nexport type McTabBodyPositionState =\n    'left' | 'center' | 'right' | 'left-origin-center' | 'right-origin-center';\n\n/**\n * The origin state is an internally used state that is set on a new tab body indicating if it\n * began to the left or right of the prior selected index. For example, if the selected index was\n * set to 1, and a new tab is created and selected at index 2, then the tab body would have an\n * origin of right because its index was greater than the prior selected index.\n */\nexport type McTabBodyOriginState = 'left' | 'right';\n\n/**\n * Wrapper for the contents of a tab.\n * @docs-private\n */\n@Component({\n    selector: 'mc-tab-body',\n    templateUrl: 'tab-body.html',\n    styleUrls: ['tab-body.css'],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    animations: [mcTabsAnimations.translateTab],\n    host: {\n        class: 'mc-tab-body'\n    }\n})\nexport class McTabBody implements OnInit, OnDestroy {\n\n    /** The shifted index position of the tab body, where zero represents the active center tab. */\n    @Input()\n    set position(position: number) {\n        this.positionIndex = position;\n        this.computePositionAnimationState();\n    }\n\n    /** Tab body position state. Used by the animation trigger for the current state. */\n    bodyPosition: McTabBodyPositionState;\n\n    /** Event emitted when the tab begins to animate towards the center as the active tab. */\n    @Output() readonly onCentering: EventEmitter<number> = new EventEmitter<number>();\n\n    /** Event emitted before the centering of the tab begins. */\n    @Output() readonly beforeCentering: EventEmitter<boolean> = new EventEmitter<boolean>();\n\n    /** Event emitted before the centering of the tab begins. */\n    @Output() readonly afterLeavingCenter: EventEmitter<boolean> = new EventEmitter<boolean>();\n\n    /** Event emitted when the tab completes its animation towards the center. */\n    @Output() readonly onCentered: EventEmitter<void> = new EventEmitter<void>(true);\n\n    /** The portal host inside of this container into which the tab body content will be loaded. */\n    @ViewChild(PortalHostDirective) portalHost: PortalHostDirective;\n\n    /** The tab body content to display. */\n    @Input('content') content: TemplatePortal;\n\n    /** Position that will be used when the tab is immediately becoming visible after creation. */\n    @Input() origin: number;\n\n    // Note that the default value will always be overwritten by `McTabBody`, but we need one\n    // anyway to prevent the animations module from throwing an error if the body is used on its own.\n    /** Duration for the tab's animation. */\n    @Input() animationDuration: string = '0ms';\n\n    /** Current position of the tab-body in the tab-group. Zero means that the tab is visible. */\n    private positionIndex: number;\n\n    /** Subscription to the directionality change observable. */\n    private dirChangeSubscription = Subscription.EMPTY;\n\n    constructor(private elementRef: ElementRef<HTMLElement>,\n                @Optional() private dir: Directionality,\n                changeDetectorRef: ChangeDetectorRef) {\n\n        if (this.dir && changeDetectorRef) {\n            this.dirChangeSubscription = this.dir.change.subscribe((direction: Direction) => {\n                this.computePositionAnimationState(direction);\n                changeDetectorRef.markForCheck();\n            });\n        }\n    }\n\n    /**\n     * After initialized, check if the content is centered and has an origin. If so, set the\n     * special position states that transition the tab from the left or right before centering.\n     */\n    ngOnInit() {\n        if (this.bodyPosition === 'center' && this.origin != null) {\n            this.bodyPosition = this.computePositionFromOrigin();\n        }\n    }\n\n    ngOnDestroy() {\n        this.dirChangeSubscription.unsubscribe();\n    }\n\n    onTranslateTabStarted(e: AnimationEvent): void {\n        const isCentering = this.isCenterPosition(e.toState);\n        this.beforeCentering.emit(isCentering);\n        if (isCentering) {\n            this.onCentering.emit(this.elementRef.nativeElement.clientHeight);\n        }\n    }\n\n    onTranslateTabComplete(e: AnimationEvent): void {\n        // If the transition to the center is complete, emit an event.\n        if (this.isCenterPosition(e.toState) && this.isCenterPosition(this.bodyPosition)) {\n            this.onCentered.emit();\n        }\n\n        if (this.isCenterPosition(e.fromState) && !this.isCenterPosition(this.bodyPosition)) {\n            this.afterLeavingCenter.emit();\n        }\n    }\n\n    /** The text direction of the containing app. */\n    getLayoutDirection(): Direction {\n        return this.dir && this.dir.value === 'rtl' ? 'rtl' : 'ltr';\n    }\n\n    /** Whether the provided position state is considered center, regardless of origin. */\n    isCenterPosition(position: McTabBodyPositionState | string): boolean {\n        return position === 'center' ||\n            position === 'left-origin-center' ||\n            position === 'right-origin-center';\n    }\n\n    /** Computes the position state that will be used for the tab-body animation trigger. */\n    private computePositionAnimationState(dir: Direction = this.getLayoutDirection()) {\n        if (this.positionIndex < 0) {\n            this.bodyPosition = dir === 'ltr' ? 'left' : 'right';\n        } else if (this.positionIndex > 0) {\n            this.bodyPosition = dir === 'ltr' ? 'right' : 'left';\n        } else {\n            this.bodyPosition = 'center';\n        }\n    }\n\n    /**\n     * Computes the position state based on the specified origin position. This is used if the\n     * tab is becoming visible immediately after creation.\n     */\n    private computePositionFromOrigin(): McTabBodyPositionState {\n        const dir = this.getLayoutDirection();\n\n        if ((dir === 'ltr' && this.origin <= 0) || (dir === 'rtl' && this.origin > 0)) {\n            return 'left-origin-center';\n        }\n\n        return 'right-origin-center';\n    }\n}\n\n/**\n * The portal host directive for the contents of the tab.\n * @docs-private\n */\n@Directive({\n    selector: '[mcTabBodyHost]'\n})\nexport class McTabBodyPortal extends CdkPortalOutlet implements OnInit, OnDestroy {\n    /** Subscription to events for when the tab body begins centering. */\n    private centeringSub = Subscription.EMPTY;\n    /** Subscription to events for when the tab body finishes leaving from center position. */\n    private leavingSub = Subscription.EMPTY;\n\n    constructor(\n        componentFactoryResolver: ComponentFactoryResolver,\n        viewContainerRef: ViewContainerRef,\n        @Inject(forwardRef(() => McTabBody)) private host: McTabBody) {\n        super(componentFactoryResolver, viewContainerRef);\n    }\n\n    /** Set initial visibility or set up subscription for changing visibility. */\n    ngOnInit(): void {\n        super.ngOnInit();\n\n        this.centeringSub = this.host.beforeCentering\n            .pipe(startWith(this.host.isCenterPosition(this.host.bodyPosition)))\n            .subscribe((isCentering: boolean) => {\n                if (isCentering && !this.hasAttached()) {\n                    this.attach(this.host.content);\n                }\n            });\n\n        this.leavingSub = this.host.afterLeavingCenter.subscribe(() => {\n            this.detach();\n        });\n    }\n\n    /** Clean up centering subscription. */\n    ngOnDestroy(): void {\n        super.ngOnDestroy();\n        this.centeringSub.unsubscribe();\n        this.leavingSub.unsubscribe();\n    }\n}\n","import { Directive, ElementRef } from '@angular/core';\nimport {\n    CanDisable,\n    CanDisableCtor,\n    mixinDisabled\n} from '@ptsecurity/mosaic/core';\n\n\n// Boilerplate for applying mixins to McTabLabelWrapper.\n/** @docs-private */\nexport class McTabLabelWrapperBase {}\nexport const mcTabLabelWrapperMixinBase: CanDisableCtor &\n    typeof McTabLabelWrapperBase = mixinDisabled(McTabLabelWrapperBase);\n\n/**\n * Used in the `mc-tab-group` view to display tab labels.\n * @docs-private\n */\n@Directive({\n    selector: '[mcTabLabelWrapper]',\n    inputs: ['disabled'],\n    host: {\n        '[class.mc-disabled]': 'disabled',\n        '[attr.aria-disabled]': '!!disabled'\n    }\n})\nexport class McTabLabelWrapper extends mcTabLabelWrapperMixinBase implements CanDisable {\n    constructor(public elementRef: ElementRef) {\n        super();\n    }\n\n    /** Sets focus on the wrapper element */\n    focus(): void {\n        this.elementRef.nativeElement.focus();\n    }\n\n    getOffsetLeft(): number {\n        return this.elementRef.nativeElement.offsetLeft;\n    }\n\n    getOffsetWidth(): number {\n        return this.elementRef.nativeElement.offsetWidth;\n    }\n}\n","import {\n    AfterContentChecked,\n    AfterContentInit,\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    ContentChildren,\n    ElementRef,\n    EventEmitter,\n    Input,\n    NgZone,\n    OnDestroy,\n    Optional,\n    Output,\n    QueryList,\n    ViewChild,\n    ViewEncapsulation\n} from '@angular/core';\nimport { FocusKeyManager } from '@ptsecurity/cdk/a11y';\nimport { Direction, Directionality } from '@ptsecurity/cdk/bidi';\nimport { coerceNumberProperty } from '@ptsecurity/cdk/coercion';\nimport { END, ENTER, HOME, SPACE } from '@ptsecurity/cdk/keycodes';\nimport { ViewportRuler } from '@ptsecurity/cdk/scrolling';\nimport { merge, of as observableOf, Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\n\nimport { McTabLabelWrapper } from './tab-label-wrapper';\n\n\nconst VIEWPORT_THROTTLE_TIME = 150;\nconst SCROLL_DISTANCE_DELIMITER = 3;\n\n\n/**\n * The directions that scrolling can go in when the header's tabs exceed the header width. 'After'\n * will scroll the header towards the end of the tabs list and 'before' will scroll towards the\n * beginning of the list.\n */\nexport type ScrollDirection = 'after' | 'before';\n\n/**\n * The distance in pixels that will be overshot when scrolling a tab label into view. This helps\n * provide a small affordance to the label next to it.\n */\nconst EXAGGERATED_OVERSCROLL = 60;\n\n// Boilerplate for applying mixins to McTabHeader.\n/** @docs-private */\nexport class McTabHeaderBase {}\n\n/**\n * The header of the tab group which displays a list of all the tabs in the tab group.\n * When the tabs list's width exceeds the width of the header container,\n * then arrows will be displayed to allow the user to scroll\n * left and right across the header.\n * @docs-private\n */\n@Component({\n    selector: 'mc-tab-header',\n    templateUrl: 'tab-header.html',\n    styleUrls: ['tab-header.css'],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    host: {\n        class: 'mc-tab-header',\n        '[class.mc-tab-header__pagination-controls_enabled]':\n            'showPaginationControls',\n        '[class.mc-tab-header_rtl]': 'getLayoutDirection() == \\'rtl\\''\n    }\n})\nexport class McTabHeader extends McTabHeaderBase\n    implements AfterContentChecked, AfterContentInit, OnDestroy {\n    /** The index of the active tab. */\n    @Input()\n    get selectedIndex(): number {\n        return this._selectedIndex;\n    }\n    set selectedIndex(value: number) {\n        const coercedValue = coerceNumberProperty(value);\n        this.selectedIndexChanged = this._selectedIndex !== coercedValue;\n        this._selectedIndex = coercedValue;\n\n        if (this.keyManager) {\n            this.keyManager.updateActiveItem(coercedValue);\n        }\n    }\n\n    /** Tracks which element has focus; used for keyboard navigation */\n    get focusIndex(): number {\n        return this.keyManager ? this.keyManager.activeItemIndex! : 0;\n    }\n\n    /** When the focus index is set, we must manually send focus to the correct label */\n    set focusIndex(value: number) {\n        if (\n            !this.isValidIndex(value) ||\n            this.focusIndex === value ||\n            !this.keyManager\n        ) {\n            return;\n        }\n\n        this.keyManager.setActiveItem(value);\n    }\n\n    /** Sets the distance in pixels that the tab header should be transformed in the X-axis. */\n    get scrollDistance(): number {\n        return this._scrollDistance;\n    }\n    set scrollDistance(v: number) {\n        this._scrollDistance = Math.max(\n            0,\n            Math.min(this.getMaxScrollDistance(), v)\n        );\n\n        // Mark that the scroll distance has changed so that after the view is checked, the CSS\n        // transformation can move the header.\n        this.scrollDistanceChanged = true;\n        this.checkScrollingControls();\n    }\n\n    @ContentChildren(McTabLabelWrapper)\n    labelWrappers: QueryList<McTabLabelWrapper>;\n    @ViewChild('tabListContainer')\n    tabListContainer: ElementRef;\n    @ViewChild('tabList')\n    tabList: ElementRef;\n\n    /** Whether the controls for pagination should be displayed */\n    showPaginationControls = false;\n\n    /** Whether the tab list can be scrolled more towards the end of the tab label list. */\n    disableScrollAfter = true;\n\n    /** Whether the tab list can be scrolled more towards the beginning of the tab label list. */\n    disableScrollBefore = true;\n\n    /** Event emitted when the option is selected. */\n    @Output()\n    readonly selectFocusedIndex: EventEmitter<number> = new EventEmitter<number>();\n\n    /** Event emitted when a label is focused. */\n    @Output()\n    readonly indexFocused: EventEmitter<number> = new EventEmitter<number>();\n\n    /** The distance in pixels that the tab labels should be translated to the left. */\n    private _scrollDistance = 0;\n\n    /** Whether the header should scroll to the selected index after the view has been checked. */\n    private selectedIndexChanged = false;\n\n    /** Emits when the component is destroyed. */\n    private readonly destroyed = new Subject<void>();\n\n    /**\n     * The number of tab labels that are displayed on the header. When this changes, the header\n     * should re-evaluate the scroll position.\n     */\n    private tabLabelCount: number;\n\n    /** Whether the scroll distance has changed and should be applied after the view is checked. */\n    private scrollDistanceChanged: boolean;\n\n    /** Used to manage focus between the tabs. */\n    private keyManager: FocusKeyManager<McTabLabelWrapper>;\n\n    /** Cached text content of the header. */\n    private currentTextContent: string;\n\n    private _selectedIndex: number = 0;\n\n    constructor(\n        private elementRef: ElementRef,\n        private changeDetectorRef: ChangeDetectorRef,\n        private viewportRuler: ViewportRuler,\n        @Optional() private dir: Directionality,\n        private ngZone: NgZone\n    ) {\n        super();\n    }\n\n    ngAfterContentChecked(): void {\n        // If the number of tab labels have changed, check if scrolling should be enabled\n        if (this.tabLabelCount !== this.labelWrappers.length) {\n            this.updatePagination();\n            this.tabLabelCount = this.labelWrappers.length;\n            this.changeDetectorRef.markForCheck();\n        }\n\n        // If the selected index has changed, scroll to the label and check if the scrolling controls\n        // should be disabled.\n        if (this.selectedIndexChanged) {\n            this.scrollToLabel(this._selectedIndex);\n            this.checkScrollingControls();\n            this.selectedIndexChanged = false;\n            this.changeDetectorRef.markForCheck();\n        }\n\n        // If the scroll distance has been changed (tab selected, focused, scroll controls activated),\n        // then translate the header to reflect this.\n        if (this.scrollDistanceChanged) {\n            this.updateTabScrollPosition();\n            this.scrollDistanceChanged = false;\n            this.changeDetectorRef.markForCheck();\n        }\n    }\n\n    handleKeydown(event: KeyboardEvent) {\n        switch (event.keyCode) {\n            case HOME:\n                this.keyManager.setFirstItemActive();\n                event.preventDefault();\n                break;\n            case END:\n                this.keyManager.setLastItemActive();\n                event.preventDefault();\n                break;\n            case ENTER:\n            case SPACE:\n                this.selectFocusedIndex.emit(this.focusIndex);\n                event.preventDefault();\n                break;\n            default:\n                this.keyManager.onKeydown(event);\n        }\n    }\n\n    ngAfterContentInit() {\n        const dirChange = this.dir ? this.dir.change : observableOf(null);\n        const resize = this.viewportRuler.change(VIEWPORT_THROTTLE_TIME);\n        const realign = () => {\n            this.updatePagination();\n        };\n\n        this.keyManager = new FocusKeyManager(this.labelWrappers)\n            .withHorizontalOrientation(this.getLayoutDirection())\n            .withWrap();\n\n        this.keyManager.updateActiveItem(0);\n\n        // Defer the first call in order to allow for slower browsers to lay out the elements.\n        // This helps in cases where the user lands directly on a page with paginated tabs.\n        typeof requestAnimationFrame === undefined\n            ? realign()\n            : requestAnimationFrame(realign);\n\n        // On dir change or window resize, update the orientation of\n        // the key manager if the direction has changed.\n        merge(dirChange, resize)\n            .pipe(takeUntil(this.destroyed))\n            .subscribe(() => {\n                realign();\n                this.keyManager.withHorizontalOrientation(\n                    this.getLayoutDirection()\n                );\n            });\n\n        // If there is a change in the focus key manager we need to emit the `indexFocused`\n        // event in order to provide a public event that notifies about focus changes. Also we realign\n        // the tabs container by scrolling the new focused tab into the visible section.\n        this.keyManager.change\n            .pipe(takeUntil(this.destroyed))\n            .subscribe((newFocusIndex) => {\n                this.indexFocused.emit(newFocusIndex);\n                this.setTabFocus(newFocusIndex);\n            });\n    }\n\n    ngOnDestroy() {\n        this.destroyed.next();\n        this.destroyed.complete();\n    }\n\n    /**\n     * Callback for when the MutationObserver detects that the content has changed.\n     */\n    onContentChanges() {\n        const textContent = this.elementRef.nativeElement.textContent;\n\n        // We need to diff the text content of the header, because the MutationObserver callback\n        // will fire even if the text content didn't change which is inefficient and is prone\n        // to infinite loops if a poorly constructed expression is passed in.\n\n        if (textContent !== this.currentTextContent) {\n            this.currentTextContent = textContent;\n\n            const zoneCallback = () => {\n                this.updatePagination();\n                this.changeDetectorRef.markForCheck();\n            };\n\n            // The content observer runs outside the `NgZone` by default, which\n            // means that we need to bring the callback back in ourselves.\n            // TODO: Remove null check for `_ngZone` once it's a required parameter.\n            this.ngZone ? this.ngZone.run(zoneCallback) : zoneCallback();\n        }\n    }\n\n    /**\n     * Updating the view whether pagination should be enabled or not\n     *\n     * WARNING: Calling this method can be very costly in terms of performance.  It should be called\n     * as infrequently as possible from outside of the Tabs component as it causes a reflow of the\n     * page.\n     */\n    updatePagination() {\n        this.checkPaginationEnabled();\n        this.checkScrollingControls();\n        this.updateTabScrollPosition();\n    }\n\n    /**\n     * Determines if an index is valid.  If the tabs are not ready yet, we assume that the user is\n     * providing a valid index and return true.\n     */\n    isValidIndex(index: number): boolean {\n        if (!this.labelWrappers) {\n            return true;\n        }\n\n        const tab = this.labelWrappers\n            ? this.labelWrappers.toArray()[index]\n            : null;\n\n        return !!tab && !tab.disabled;\n    }\n\n    /**\n     * Sets focus on the HTML element for the label wrapper and scrolls it into the view if\n     * scrolling is enabled.\n     */\n    setTabFocus(tabIndex: number) {\n        if (this.showPaginationControls) {\n            this.scrollToLabel(tabIndex);\n        }\n\n        if (this.labelWrappers && this.labelWrappers.length) {\n            this.labelWrappers.toArray()[tabIndex].focus();\n\n            // Do not let the browser manage scrolling to focus the element, this will be handled\n            // by using translation. In LTR, the scroll left should be 0. In RTL, the scroll width\n            // should be the full width minus the offset width.\n            const containerEl = this.tabListContainer.nativeElement;\n            const dir = this.getLayoutDirection();\n\n            if (dir === 'ltr') {\n                containerEl.scrollLeft = 0;\n            } else {\n                containerEl.scrollLeft =\n                    containerEl.scrollWidth - containerEl.offsetWidth;\n            }\n        }\n    }\n\n    /** The layout direction of the containing app. */\n    getLayoutDirection(): Direction {\n        return this.dir && this.dir.value === 'rtl' ? 'rtl' : 'ltr';\n    }\n\n    /** Performs the CSS transformation on the tab list that will cause the list to scroll. */\n    updateTabScrollPosition() {\n        const scrollDistance = this.scrollDistance;\n        const translateX =\n            this.getLayoutDirection() === 'ltr'\n                ? -scrollDistance\n                : scrollDistance;\n\n        // Don't use `translate3d` here because we don't want to create a new layer. A new layer\n        // seems to cause flickering and overflow in Internet Explorer.\n        // See: https://github.com/angular/material2/issues/10276\n        // We round the `transform` here, because transforms with sub-pixel precision cause some\n        // browsers to blur the content of the element.\n        this.tabList.nativeElement.style.transform = `translateX(${Math.round(translateX)}px)`;\n\n        // Setting the `transform` on IE will change the scroll offset of the parent, causing the\n        // position to be thrown off in some cases. We have to reset it ourselves to ensure that\n        // it doesn't get thrown off.\n        this.tabList.nativeElement.scrollLeft = 0;\n    }\n\n    /**\n     * Moves the tab list in the 'before' or 'after' direction (towards the beginning of the list or\n     * the end of the list, respectively). The distance to scroll is computed to be a third of the\n     * length of the tab list view window.\n     *\n     * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n     * should be called sparingly.\n     */\n    scrollHeader(scrollDir: ScrollDirection) {\n        const viewLength = this.tabListContainer.nativeElement.offsetWidth;\n\n        // Move the scroll distance one-third the length of the tab list's viewport.\n        this.scrollDistance +=\n            ((scrollDir === 'before' ? -1 : 1) * viewLength) / SCROLL_DISTANCE_DELIMITER;\n    }\n\n    /**\n     * Moves the tab list such that the desired tab label (marked by index) is moved into view.\n     *\n     * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n     * should be called sparingly.\n     */\n    scrollToLabel(labelIndex: number) {\n        const selectedLabel = this.labelWrappers\n            ? this.labelWrappers.toArray()[labelIndex]\n            : null;\n\n        if (!selectedLabel) {\n            return;\n        }\n\n        // The view length is the visible width of the tab labels.\n        const viewLength = this.tabListContainer.nativeElement.offsetWidth;\n\n        let labelBeforePos: number;\n        let labelAfterPos: number;\n\n        if (this.getLayoutDirection() === 'ltr') {\n            labelBeforePos = selectedLabel.getOffsetLeft();\n            labelAfterPos = labelBeforePos + selectedLabel.getOffsetWidth();\n        } else {\n            labelAfterPos =\n                this.tabList.nativeElement.offsetWidth -\n                selectedLabel.getOffsetLeft();\n            labelBeforePos = labelAfterPos - selectedLabel.getOffsetWidth();\n        }\n\n        const beforeVisiblePos = this.scrollDistance;\n        const afterVisiblePos = this.scrollDistance + viewLength;\n\n        if (labelBeforePos < beforeVisiblePos) {\n            // Scroll header to move label to the before direction\n            this.scrollDistance -=\n                beforeVisiblePos - labelBeforePos + EXAGGERATED_OVERSCROLL;\n        } else if (labelAfterPos > afterVisiblePos) {\n            // Scroll header to move label to the after direction\n            this.scrollDistance +=\n                labelAfterPos - afterVisiblePos + EXAGGERATED_OVERSCROLL;\n        }\n    }\n\n    /**\n     * Evaluate whether the pagination controls should be displayed. If the scroll width of the\n     * tab list is wider than the size of the header container, then the pagination controls should\n     * be shown.\n     *\n     * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n     * should be called sparingly.\n     */\n    checkPaginationEnabled() {\n        const isEnabled =\n            this.tabList.nativeElement.scrollWidth >\n            this.elementRef.nativeElement.offsetWidth;\n\n        if (!isEnabled) {\n            this.scrollDistance = 0;\n        }\n\n        if (isEnabled !== this.showPaginationControls) {\n            this.changeDetectorRef.markForCheck();\n        }\n\n        this.showPaginationControls = isEnabled;\n    }\n\n    /**\n     * Evaluate whether the before and after controls should be enabled or disabled.\n     * If the header is at the beginning of the list (scroll distance is equal to 0) then disable the\n     * before button. If the header is at the end of the list (scroll distance is equal to the\n     * maximum distance we can scroll), then disable the after button.\n     *\n     * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n     * should be called sparingly.\n     */\n    checkScrollingControls() {\n        // Check if the pagination arrows should be activated.\n        this.disableScrollBefore = this.scrollDistance === 0;\n        this.disableScrollAfter =\n            this.scrollDistance === this.getMaxScrollDistance();\n        this.changeDetectorRef.markForCheck();\n    }\n\n    /**\n     * Determines what is the maximum length in pixels that can be set for the scroll distance. This\n     * is equal to the difference in width between the tab list container and tab header container.\n     *\n     * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n     * should be called sparingly.\n     */\n    getMaxScrollDistance(): number {\n        const lengthOfTabList = this.tabList.nativeElement.scrollWidth;\n        const viewLength = this.tabListContainer.nativeElement.offsetWidth;\n\n        return lengthOfTabList - viewLength || 0;\n    }\n}\n","import {\n    AfterContentChecked,\n    AfterContentInit,\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    ContentChildren,\n    ElementRef,\n    EventEmitter,\n    Input,\n    OnDestroy,\n    Output,\n    QueryList,\n    ViewChild,\n    ViewEncapsulation,\n    InjectionToken,\n    Inject,\n    Optional,\n    Directive, Attribute\n} from '@angular/core';\nimport { coerceBooleanProperty, coerceNumberProperty } from '@ptsecurity/cdk/coercion';\nimport {\n    CanColor,\n    CanColorCtor,\n    mixinColor,\n    mixinDisabled\n} from '@ptsecurity/mosaic/core';\nimport { merge, Subscription } from 'rxjs';\n\nimport { McTab } from './tab';\nimport { McTabHeader } from './tab-header';\n\n\n@Directive({\n    selector: 'mc-tab-group[mc-light-tabs], [mc-tab-nav-bar][mc-light-tabs]',\n    host: { class: 'mc-tab-group_light' }\n})\nexport class McLightTabsCssStyler { }\n\n@Directive({\n    selector: 'mc-tab-group[mc-align-tabs-center], [mc-tab-nav-bar][mc-align-tabs-center]',\n    host: { class: 'mc-tab-group_align-labels-center' }\n})\nexport class McAlignTabsCenterCssStyler { }\n\n@Directive({\n    selector: 'mc-tab-group[mc-align-tabs-end], [mc-tab-nav-bar][mc-align-tabs-end]',\n    host: { class: 'mc-tab-group_align-labels-end' }\n})\nexport class McAlignTabsEndCssStyler { }\n\n@Directive({\n    selector: 'mc-tab-group[mc-stretch-tabs], [mc-tab-nav-bar][mc-stretch-tabs]',\n    host: { class: 'mc-tab-group_stretch-labels' }\n})\nexport class McStretchTabsCssStyler { }\n\n/** Used to generate unique ID's for each tab component */\nlet nextId = 0;\n\n/** A simple change event emitted on focus or selection changes. */\nexport class McTabChangeEvent {\n    /** Index of the currently-selected tab. */\n    index: number;\n    /** Reference to the currently-selected tab. */\n    tab: McTab;\n}\n\n/** Possible positions for the tab header. */\nexport type McTabHeaderPosition = 'above' | 'below';\n\n/** Object that can be used to configure the default options for the tabs module. */\nexport interface IMcTabsConfig {\n    /** Duration for the tab animation. Must be a valid CSS value (e.g. 600ms). */\n    animationDuration?: string;\n}\n\n/** Injection token that can be used to provide the default options the tabs module. */\nexport const MC_TABS_CONFIG = new InjectionToken('MC_TABS_CONFIG');\n\n// Boilerplate for applying mixins to McTabGroup.\n/** @docs-private */\nexport class McTabGroupBase {\n    // tslint:disable-next-line:naming-convention\n    constructor(public _elementRef: ElementRef) { }\n}\nexport const mcTabGroupMixinBase:\n    CanColorCtor &\n    typeof McTabGroupBase =\n    mixinColor(mixinDisabled(McTabGroupBase));\n\n/**\n * Tab-group component.  Supports basic tab pairs (label + content) and includes\n * keyboard navigation.\n */\n@Component({\n    selector: 'mc-tab-group',\n    exportAs: 'mcTabGroup',\n    templateUrl: 'tab-group.html',\n    styleUrls: ['tab-group.css'],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    inputs: ['color'],\n    host: {\n        class: 'mc-tab-group',\n        '[class.mc-tab-group_dynamic-height]': 'dynamicHeight',\n        '[class.mc-tab-group_inverted-header]': 'headerPosition === \"below\"'\n    }\n})\nexport class McTabGroup extends mcTabGroupMixinBase implements AfterContentInit,\n    AfterContentChecked, OnDestroy, CanColor {\n    lightTab: boolean;\n\n    /** Whether the tab group should grow to the size of the active tab. */\n    @Input()\n    get dynamicHeight(): boolean { return this._dynamicHeight; }\n    set dynamicHeight(value: boolean) { this._dynamicHeight = coerceBooleanProperty(value); }\n\n    /** The index of the active tab. */\n    @Input()\n    get selectedIndex(): number | null { return this._selectedIndex; }\n    set selectedIndex(value: number | null) {\n        this.indexToSelect = coerceNumberProperty(value, null);\n    }\n\n    @ContentChildren(McTab) tabs: QueryList<McTab>;\n\n    @ViewChild('tabBodyWrapper') tabBodyWrapper: ElementRef;\n\n    @ViewChild('tabHeader') tabHeader: McTabHeader;\n\n    /** Position of the tab header. */\n    @Input() headerPosition: McTabHeaderPosition = 'above';\n\n    /** Duration for the tab animation. Must be a valid CSS value (e.g. 600ms). */\n    @Input() animationDuration: string;\n\n    /** Output to enable support for two-way binding on `[(selectedIndex)]` */\n    @Output() readonly selectedIndexChange: EventEmitter<number> = new EventEmitter<number>();\n\n    /** Event emitted when focus has changed within a tab group. */\n    @Output() readonly focusChange: EventEmitter<McTabChangeEvent> =\n        new EventEmitter<McTabChangeEvent>();\n\n    /** Event emitted when the body animation has completed */\n    @Output() readonly animationDone: EventEmitter<void> = new EventEmitter<void>();\n\n    /** Event emitted when the tab selection has changed. */\n    @Output() readonly selectedTabChange: EventEmitter<McTabChangeEvent> =\n        new EventEmitter<McTabChangeEvent>(true);\n\n    /** The tab index that should be selected after the content has been checked. */\n    private indexToSelect: number | null = 0;\n\n    /** Snapshot of the height of the tab body wrapper before another tab is activated. */\n    private tabBodyWrapperHeight: number = 0;\n\n    /** Subscription to tabs being added/removed. */\n    private tabsSubscription = Subscription.EMPTY;\n\n    /** Subscription to changes in the tab labels. */\n    private tabLabelSubscription = Subscription.EMPTY;\n    private _dynamicHeight: boolean = false;\n    private _selectedIndex: number | null = null;\n\n    private groupId: number;\n\n    constructor(\n        elementRef: ElementRef,\n        private changeDetectorRef: ChangeDetectorRef,\n        @Attribute('mc-light-tabs') lightTabs: string,\n        @Inject(MC_TABS_CONFIG) @Optional() defaultConfig?: IMcTabsConfig\n    ) {\n        super(elementRef);\n\n        this.lightTab = coerceBooleanProperty(lightTabs);\n\n        this.groupId = nextId++;\n        this.animationDuration = defaultConfig && defaultConfig.animationDuration ?\n            defaultConfig.animationDuration : '0ms';\n    }\n\n    /**\n     * After the content is checked, this component knows what tabs have been defined\n     * and what the selected index should be. This is where we can know exactly what position\n     * each tab should be in according to the new selected index, and additionally we know how\n     * a new selected tab should transition in (from the left or right).\n     */\n    ngAfterContentChecked() {\n        // Don't clamp the `indexToSelect` immediately in the setter because it can happen that\n        // the amount of tabs changes before the actual change detection runs.\n        const indexToSelect = this.indexToSelect = this.clampTabIndex(this.indexToSelect);\n\n        // If there is a change in selected index, emit a change event. Should not trigger if\n        // the selected index has not yet been initialized.\n        if (this._selectedIndex !== indexToSelect) {\n            const isFirstRun = this._selectedIndex == null;\n\n            if (!isFirstRun) {\n                this.selectedTabChange.emit(this.createChangeEvent(indexToSelect));\n            }\n\n            // Changing these values after change detection has run\n            // since the checked content may contain references to them.\n            Promise.resolve().then(() => {\n                this.tabs.forEach((tab, index) => tab.isActive = index === indexToSelect);\n\n                if (!isFirstRun) {\n                    this.selectedIndexChange.emit(indexToSelect);\n                }\n            });\n        }\n\n        // Setup the position for each tab and optionally setup an origin on the next selected tab.\n        this.tabs.forEach((tab: McTab, index: number) => {\n            tab.position = index - indexToSelect;\n\n            // If there is already a selected tab, then set up an origin for the next selected tab\n            // if it doesn't have one already.\n            if (this._selectedIndex != null && tab.position === 0 && !tab.origin) {\n                tab.origin = indexToSelect - this._selectedIndex;\n            }\n        });\n\n        if (this._selectedIndex !== indexToSelect) {\n            this._selectedIndex = indexToSelect;\n            this.changeDetectorRef.markForCheck();\n        }\n    }\n\n    ngAfterContentInit() {\n        this.subscribeToTabLabels();\n\n        // Subscribe to changes in the amount of tabs, in order to be\n        // able to re-render the content as new tabs are added or removed.\n        this.tabsSubscription = this.tabs.changes.subscribe(() => {\n            const indexToSelect = this.clampTabIndex(this.indexToSelect);\n\n            // Maintain the previously-selected tab if a new tab is added or removed and there is no\n            // explicit change that selects a different tab.\n            if (indexToSelect === this._selectedIndex) {\n                const tabs = this.tabs.toArray();\n\n                for (let i = 0; i < tabs.length; i++) {\n                    if (tabs[i].isActive) {\n                        // Assign both to the `_indexToSelect` and `_selectedIndex` so we don't fire a changed\n                        // event, otherwise the consumer may end up in an infinite loop in some edge cases like\n                        // adding a tab within the `selectedIndexChange` event.\n                        this.indexToSelect = this._selectedIndex = i;\n                        break;\n                    }\n                }\n            }\n\n            this.subscribeToTabLabels();\n            this.changeDetectorRef.markForCheck();\n        });\n    }\n\n    ngOnDestroy() {\n        this.tabsSubscription.unsubscribe();\n        this.tabLabelSubscription.unsubscribe();\n    }\n\n    focusChanged(index: number) {\n        this.focusChange.emit(this.createChangeEvent(index));\n    }\n\n    /** Returns a unique id for each tab label element */\n    getTabLabelId(i: number): string {\n        return `mc-tab-label-${this.groupId}-${i}`;\n    }\n\n    /** Returns a unique id for each tab content element */\n    getTabContentId(i: number): string {\n        return `mc-tab-content-${this.groupId}-${i}`;\n    }\n\n    /**\n     * Sets the height of the body wrapper to the height of the activating tab if dynamic\n     * height property is true.\n     */\n    setTabBodyWrapperHeight(tabHeight: number): void {\n        if (!this._dynamicHeight || !this.tabBodyWrapperHeight) { return; }\n\n        const wrapper: HTMLElement = this.tabBodyWrapper.nativeElement;\n\n        wrapper.style.height = `${this.tabBodyWrapperHeight}px`;\n\n        // This conditional forces the browser to paint the height so that\n        // the animation to the new height can have an origin.\n        if (this.tabBodyWrapper.nativeElement.offsetHeight) {\n            wrapper.style.height = `${tabHeight}px`;\n        }\n    }\n\n    /** Removes the height of the tab body wrapper. */\n    removeTabBodyWrapperHeight(): void {\n        this.tabBodyWrapperHeight = this.tabBodyWrapper.nativeElement.clientHeight;\n        this.tabBodyWrapper.nativeElement.style.height = '';\n        this.animationDone.emit();\n    }\n\n    /** Handle click events, setting new selected index if appropriate. */\n    handleClick(tab: McTab, tabHeader: McTabHeader, index: number) {\n        if (!tab.disabled) {\n            this.selectedIndex = tabHeader.focusIndex = index;\n        }\n    }\n\n    /** Retrieves the tabindex for the tab. */\n    getTabIndex(tab: McTab, index: number): number | null {\n        if (tab.disabled) {\n            return null;\n        }\n\n        return this.selectedIndex === index ? 0 : -1;\n    }\n\n    private createChangeEvent(index: number): McTabChangeEvent {\n        const event = new McTabChangeEvent();\n        event.index = index;\n        if (this.tabs && this.tabs.length) {\n            event.tab = this.tabs.toArray()[index];\n        }\n\n        return event;\n    }\n\n    /**\n     * Subscribes to changes in the tab labels. This is needed, because the @Input for the label is\n     * on the McTab component, whereas the data binding is inside the McTabGroup. In order for the\n     * binding to be updated, we need to subscribe to changes in it and trigger change detection\n     * manually.\n     */\n    private subscribeToTabLabels() {\n        if (this.tabLabelSubscription) {\n            this.tabLabelSubscription.unsubscribe();\n        }\n\n        this.tabLabelSubscription = merge(...this.tabs.map((tab) => tab.stateChanges))\n            .subscribe(() => this.changeDetectorRef.markForCheck());\n    }\n\n    /** Clamps the given index to the bounds of 0 and the tabs length. */\n    private clampTabIndex(index: number | null): number {\n        // Note the `|| 0`, which ensures that values like NaN can't get through\n        // and which would otherwise throw the component into an infinite loop\n        // (since Mch.max(NaN, 0) === NaN).\n        return Math.min(this.tabs.length - 1, Math.max(index || 0, 0));\n    }\n}\n","import {\n    Attribute,\n    ChangeDetectionStrategy,\n    Component,\n    Directive,\n    ElementRef,\n    Input,\n    OnDestroy,\n    ViewEncapsulation\n} from '@angular/core';\nimport { FocusMonitor } from '@ptsecurity/cdk/a11y';\nimport {\n    CanColor,\n    CanColorCtor,\n    CanDisable,\n    CanDisableCtor,\n    HasTabIndex,\n    HasTabIndexCtor,\n    mixinColor,\n    mixinDisabled,\n    mixinTabIndex\n} from '@ptsecurity/mosaic/core';\n\n\n// Boilerplate for applying mixins to McTabNav.\n/** @docs-private */\nexport class McTabNavBase {\n    // tslint:disable-next-line:naming-convention\n    constructor(public _elementRef: ElementRef) {}\n}\nexport const mcTabNavMixinBase: CanColorCtor &\n    typeof McTabNavBase = mixinColor(McTabNavBase);\n\n/**\n * Navigation component matching the styles of the tab group header.\n */\n@Component({\n    selector: '[mc-tab-nav-bar]',\n    exportAs: 'mcTabNavBar, mcTabNav',\n    inputs: ['color'],\n    templateUrl: 'tab-nav-bar.html',\n    styleUrls: ['tab-nav-bar.css'],\n    host: { class: 'mc-tab-nav-bar' },\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class McTabNav extends mcTabNavMixinBase\n    implements CanColor {\n        constructor(elementRef: ElementRef) {\n            super(elementRef);\n        }\n     }\n\n// Boilerplate for applying mixins to McTabLink.\nexport class McTabLinkBase {}\nexport const mcTabLinkMixinBase: HasTabIndexCtor & CanDisableCtor &\n    typeof McTabLinkBase = mixinTabIndex(mixinDisabled(McTabLinkBase));\n\n/**\n * Link inside of a `mc-tab-nav-bar`.\n */\n@Directive({\n    selector: '[mc-tab-link], [mcTabLink]',\n    exportAs: 'mcTabLink',\n    inputs: ['disabled', 'tabIndex'],\n    host: {\n        class: 'mc-tab-link',\n        '[attr.aria-current]': 'active',\n        '[attr.aria-disabled]': 'disabled.toString()',\n        '[attr.tabIndex]': 'tabIndex',\n        '[class.mc-disabled]': 'disabled',\n        '[class.mc-active]': 'active'\n    }\n})\nexport class McTabLink extends mcTabLinkMixinBase\n    implements OnDestroy, CanDisable, HasTabIndex {\n    /** Whether the link is active. */\n    @Input()\n    get active(): boolean {\n        return this.isActive;\n    }\n    set active(value: boolean) {\n        if (value !== this.isActive) {\n            this.isActive = value;\n        }\n    }\n\n    /** Whether the tab link is active or not. */\n    protected isActive: boolean = false;\n\n    constructor(\n        public elementRef: ElementRef,\n        @Attribute('tabindex') tabIndex: string,\n        private focusMonitor: FocusMonitor\n    ) {\n        super();\n\n        this.tabIndex = parseInt(tabIndex) || 0;\n        this.focusMonitor.monitor(this.elementRef.nativeElement);\n    }\n\n    ngOnDestroy() {\n        this.focusMonitor.stopMonitoring(this.elementRef.nativeElement);\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { A11yModule } from '@ptsecurity/cdk/a11y';\nimport { PortalModule } from '@ptsecurity/cdk/portal';\nimport { McCommonModule } from '@ptsecurity/mosaic/core';\n\nimport { McTab } from './tab';\nimport { McTabBody, McTabBodyPortal } from './tab-body';\nimport { McTabContent } from './tab-content';\nimport {\n    McTabGroup,\n    McLightTabsCssStyler,\n    McAlignTabsCenterCssStyler,\n    McAlignTabsEndCssStyler,\n    McStretchTabsCssStyler\n} from './tab-group';\nimport { McTabHeader } from './tab-header';\nimport { McTabLabel } from './tab-label';\nimport { McTabLabelWrapper } from './tab-label-wrapper';\nimport { McTabLink, McTabNav } from './tab-nav-bar/tab-nav-bar';\n\n\n@NgModule({\n    imports: [\n        CommonModule,\n        McCommonModule,\n        PortalModule,\n        A11yModule\n    ],\n    // Don't export all components because some are only to be used internally.\n    exports: [\n        McCommonModule,\n        McTabGroup,\n        McTabLabel,\n        McTab,\n        McTabNav,\n        McTabLink,\n        McTabContent,\n        McLightTabsCssStyler,\n        McAlignTabsCenterCssStyler,\n        McAlignTabsEndCssStyler,\n        McStretchTabsCssStyler\n    ],\n    declarations: [\n        McTabGroup,\n        McTabLabel,\n        McTab,\n        McTabLabelWrapper,\n        McTabNav,\n        McTabLink,\n        McTabBody,\n        McTabBodyPortal,\n        McTabHeader,\n        McTabContent,\n        McLightTabsCssStyler,\n        McAlignTabsCenterCssStyler,\n        McAlignTabsEndCssStyler,\n        McStretchTabsCssStyler\n    ]\n})\nexport class McTabsModule {}\n","import {\n    ElementRef,\n    QueryList,\n    ContentChildren,\n    Component,\n    ChangeDetectionStrategy,\n    ViewEncapsulation\n} from '@angular/core';\n\nimport {\n    mixinColor,\n    CanColor,\n    CanColorCtor,\n    CanDisable,\n    CanDisableCtor,\n    mixinDisabled\n} from '@ptsecurity/mosaic/core';\nimport { McIcon } from '@ptsecurity/mosaic/icon';\n\n\nexport class McTagBase {\n    constructor(public _elementRef: ElementRef) {}\n}\n\nexport const _McTagMixinBase: CanColorCtor & CanDisableCtor & typeof McTagBase = mixinColor(mixinDisabled(McTagBase));\n\n\n@Component({\n    selector: 'mc-tag',\n    templateUrl: 'tag.partial.html',\n    styleUrls: ['./tag.css'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n    host: {\n        class: 'mc-tag',\n        '[class.mc-disabled]': 'disabled'\n    },\n    inputs: ['color', 'disabled']\n})\nexport class McTag extends _McTagMixinBase implements CanColor, CanDisable {\n    @ContentChildren(McIcon) contentChildren: QueryList<McIcon>;\n\n    nativeElement: HTMLElement;\n\n    private _disabled: boolean = false;\n\n    get disabled() {\n        return this._disabled;\n    }\n\n    set disabled(value: any) {\n        if (value !== this.disabled) { this._disabled = value; }\n    }\n\n    constructor(elementRef: ElementRef) {\n        super(elementRef);\n\n        this.nativeElement = elementRef.nativeElement;\n    }\n\n    ngAfterContentInit() {\n        this._addClassModificatorForIcons();\n    }\n\n    _addClassModificatorForIcons() {\n        const icons = this.contentChildren.map((item) => item._elementRef.nativeElement);\n\n        if (icons.length === 1) {\n            const iconElement = icons[0];\n\n            if (!iconElement.previousElementSibling && !iconElement.nextElementSibling) {\n                if (iconElement.nextSibling) {\n                    iconElement.classList.add('mc-icon_left');\n                    this.nativeElement.classList.add('mc-left-icon');\n                }\n\n                if (iconElement.previousSibling) {\n                    iconElement.classList.add('mc-icon_right');\n                    this.nativeElement.classList.add('mc-right-icon');\n                }\n            }\n        } else if (icons.length > 1) {\n            const firstIconElement = icons[0];\n            const secondIconElement = icons[1];\n\n            firstIconElement.classList.add('mc-icon_left');\n            secondIconElement.classList.add('mc-icon_right');\n        }\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { PlatformModule } from '@ptsecurity/cdk/platform';\n\nimport { McTag } from './tag.component';\n\n\n@NgModule({\n    imports: [\n        CommonModule,\n        PlatformModule\n    ],\n    exports: [\n        McTag\n    ],\n    declarations: [\n        McTag\n    ]\n})\nexport class McTagModule {}\n","import { fromEvent, Observable, Subscription } from 'rxjs';\nimport { debounceTime } from 'rxjs/operators';\n\nimport {\n    AfterViewInit,\n    Component, Directive,\n    ElementRef,\n    HostBinding,\n    Input,\n    OnDestroy,\n    OnInit,\n    ViewEncapsulation,\n    ContentChild,\n    TemplateRef,\n    ChangeDetectorRef,\n    ChangeDetectionStrategy,\n    ViewChild\n} from '@angular/core';\nimport { FocusMonitor, FocusOrigin } from '@ptsecurity/cdk/a11y';\nimport { SPACE } from '@ptsecurity/cdk/keycodes';\nimport { Platform } from '@ptsecurity/cdk/platform';\nimport { CanDisable, CanDisableCtor, mixinDisabled } from '@ptsecurity/mosaic/core';\n\n\nconst COLLAPSED_CLASS: string = 'mc-navbar-collapsed-title';\nconst MC_ICON = 'mc-icon';\nconst MC_NAVBAR = 'mc-navbar';\nconst MC_NAVBAR_CONTAINER = 'mc-navbar-container';\nconst MC_NAVBAR_ITEM = 'mc-navbar-item';\nconst MC_NAVBAR_BRAND = 'mc-navbar-brand';\nconst MC_NAVBAR_TITLE = 'mc-navbar-title';\nconst MC_NAVBAR_LOGO = 'mc-navbar-logo';\n\nexport type McNavbarContainerPositionType = 'left' | 'right';\n\nexport interface IMcNavbarDropdownItem {\n    link?: string;\n    text: string;\n}\n\n@Directive({\n    selector: MC_NAVBAR_LOGO,\n    host: {\n        class: MC_NAVBAR_LOGO\n    }\n})\nexport class McNavbarLogo {}\n\n@Directive({\n    selector: MC_NAVBAR_BRAND,\n    host: {\n        class: MC_NAVBAR_BRAND\n    }\n})\nexport class McNavbarBrand {}\n\n@Directive({\n    selector: MC_NAVBAR_TITLE,\n    host: {\n        class: MC_NAVBAR_TITLE\n    }\n})\nexport class McNavbarTitle {}\n\nexport class McNavbarItemBase {\n    constructor(public _elementRef: ElementRef) {}\n}\n\nexport const _McNavbarMixinBase: CanDisableCtor & typeof McNavbarItemBase = mixinDisabled(McNavbarItemBase);\n\n@Component({\n    selector: MC_NAVBAR_ITEM,\n    template: `\n        <a\n            [attr.tabindex]=\\\"disabled ? -1 : tabIndex\\\"\n            (click)=\"handleClickByItem()\"\n            (keydown)=\"handleKeydown($event)\"\n            class=\"mc-navbar-item\"\n        >\n            <ng-content></ng-content>\n            <i *ngIf=\"hasDropdownContent\" mc-icon=\"mc-angle-down-M_16\"></i>\n        </a>\n        <ul\n            #dropdownContent\n            *ngIf=\"hasDropdownContent\"\n            [ngClass]=\"{ 'is-collapsed': isCollapsed }\"\n            class=\"mc-navbar-dropdown\"\n        >\n            <li\n                *ngFor=\"let item of dropdownItems\"\n                (click)=\"handleClickByDropdownItem()\"\n                class=\"mc-navbar-dropdown-item\"\n            >\n                <ng-container *ngIf=\"dropdownItemTmpl\">\n                    <ng-container *ngTemplateOutlet=\"dropdownItemTmpl; context: { $implicit: item }\"></ng-container>\n                </ng-container>\n                <a\n                    *ngIf=\"!dropdownItemTmpl\"\n                    [attr.href]=\"item.link\"\n                    [ngClass]=\"{ 'is-active': isActiveDropdownLink(item.link) }\"\n                    class=\"mc-navbar-dropdown-link\"\n                >{{ item.text }}</a>\n            </li>\n        </ul>\n    `,\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    inputs: ['disabled'],\n    host: {\n        '[attr.disabled]': 'disabled || null',\n        '[attr.tabindex]': '-1'\n    }\n})\nexport class McNavbarItem extends _McNavbarMixinBase implements OnInit, AfterViewInit, OnDestroy, CanDisable {\n\n    @Input()\n    tabIndex: number = 0;\n\n    @Input()\n    dropdownItems: IMcNavbarDropdownItem[] = [];\n\n    @Input()\n    set collapsedTitle(value: string) {\n        this.elementRef.nativeElement.setAttribute('computedTitle', encodeURI(value));\n    }\n\n    @ContentChild('dropdownItemTmpl', { read: TemplateRef })\n    dropdownItemTmpl: TemplateRef<IMcNavbarDropdownItem>;\n\n    @ViewChild('dropdownContent', { read: ElementRef })\n    dropdownContent: ElementRef;\n\n    get hasDropdownContent() {\n        return this.dropdownItems.length > 0;\n    }\n\n    isCollapsed: boolean = true;\n\n    private _subscription: Subscription = new Subscription();\n    private _focusMonitor$: Observable<FocusOrigin>;\n\n    private get _dropdownElements(): HTMLElement[] {\n        return this.dropdownContent ? this.dropdownContent.nativeElement.querySelectorAll('li > *') : [];\n    }\n\n    constructor(\n        public  elementRef: ElementRef,\n        private _focusMonitor: FocusMonitor,\n        private _platform: Platform,\n        private _cdRef: ChangeDetectorRef\n    ) {\n        super(elementRef);\n    }\n\n    ngOnInit() {\n        this.denyClickIfDisabled();\n\n        this._focusMonitor$ = this._focusMonitor.monitor(this.elementRef.nativeElement, true);\n\n        if (this.hasDropdownContent) {\n            this.listenClickOutside();\n        }\n    }\n\n    ngAfterViewInit() {\n        if (!this.hasDropdownContent) {\n            return;\n        }\n\n        this.startListenFocusDropdownItems();\n    }\n\n    ngOnDestroy() {\n        this._subscription.unsubscribe();\n        this._focusMonitor.stopMonitoring(this.elementRef.nativeElement);\n        this.stopListenFocusDropdownItems();\n    }\n\n    isActiveDropdownLink(link: string): boolean {\n        if (!this._platform.isBrowser) {\n            return false;\n        }\n\n        return window.location.href.indexOf(link) >= 0;\n    }\n\n    handleClickByItem() {\n        this.toggleDropdown();\n    }\n\n    handleKeydown($event: KeyboardEvent) {\n        const isNavbarItem = ($event.target as HTMLElement).classList.contains(MC_NAVBAR_ITEM);\n\n        // tslint:disable-next-line\n        if (this.hasDropdownContent && $event.keyCode === SPACE && isNavbarItem) {\n            this.toggleDropdown();\n        }\n    }\n\n    handleClickByDropdownItem() {\n        this.forceCloseDropdown();\n    }\n\n    private listenClickOutside() {\n        this._subscription.add(\n            this._focusMonitor$.subscribe((origin) => {\n                if (origin === null) {\n                    this.forceCloseDropdown();\n                }\n            })\n        );\n    }\n\n    private toggleDropdown() {\n        this.isCollapsed = !this.isCollapsed;\n    }\n\n    private forceCloseDropdown() {\n        this.isCollapsed = true;\n        this._cdRef.detectChanges();\n    }\n\n    private startListenFocusDropdownItems() {\n        this._dropdownElements.forEach((el) => {\n            this._focusMonitor.monitor(el, true);\n        });\n    }\n\n    private stopListenFocusDropdownItems() {\n        this._dropdownElements.forEach((el) => {\n            this._focusMonitor.stopMonitoring(el);\n        });\n    }\n\n    // This method is required due to angular 2 issue https://github.com/angular/angular/issues/11200\n    private denyClickIfDisabled() {\n        const events: Event[] = this.elementRef.nativeElement.eventListeners('click');\n\n        events.forEach((event) => this.elementRef.nativeElement.removeEventListener('click', event));\n\n        this.elementRef.nativeElement.addEventListener('click', (event: MouseEvent) => {\n            if (this.elementRef.nativeElement.hasAttribute('disabled')) {\n                event.stopImmediatePropagation();\n            }\n        }, true);\n\n        events.forEach((event) => this.elementRef.nativeElement.addEventListener('click', event));\n    }\n}\n\n@Directive({\n    selector: MC_NAVBAR_CONTAINER\n})\nexport class McNavbarContainer {\n    @Input()\n    position: McNavbarContainerPositionType = 'left';\n\n    @HostBinding('class')\n    get cssClasses(): string {\n        return this.position === 'left' ? 'mc-navbar-left' : 'mc-navbar-right';\n    }\n}\n\nclass CollapsibleItem {\n    private _collapsed: boolean = false;\n\n    constructor(\n        public element: HTMLElement,\n        public width: number\n    ) {}\n\n    processCollapsed(collapsed: boolean) {\n        this._collapsed = collapsed;\n\n        this.updateCollapsedClass();\n    }\n\n    private updateCollapsedClass() {\n        if (this._collapsed) {\n            this.element.classList.add(COLLAPSED_CLASS);\n        } else {\n            this.element.classList.remove(COLLAPSED_CLASS);\n        }\n\n    }\n}\n\nclass CachedItemWidth {\n\n    get canCollapse(): boolean {\n        return this.itemsForCollapse.length > 0;\n    }\n\n    private _collapsedItemsWidth: number;\n\n    get collapsedItemsWidth(): number {\n        if (this._collapsedItemsWidth !== undefined) {\n            return this._collapsedItemsWidth;\n        }\n\n        this.calculateAndCacheCollapsedItemsWidth();\n\n        return this._collapsedItemsWidth;\n    }\n\n    constructor(\n        public element: HTMLElement,\n        public width: number,\n        public itemsForCollapse: CollapsibleItem[] = []\n    ) {}\n\n    processCollapsed(collapsed: boolean) {\n        if (this.itemsForCollapse.length > 0) {\n            this.updateTitle(collapsed);\n        }\n\n        this.itemsForCollapse.forEach((item) => item.processCollapsed(collapsed));\n    }\n\n    private calculateAndCacheCollapsedItemsWidth() {\n        this._collapsedItemsWidth = this.itemsForCollapse\n            .reduce((acc, item) => acc + item.width, 0);\n    }\n\n    private getTitle(): string {\n        const computedTitle = this.element.getAttribute('computedTitle');\n\n        return computedTitle\n            ? decodeURI(computedTitle)\n            : (this.itemsForCollapse.length > 0 ? this.itemsForCollapse[0].element.innerText : '');\n    }\n\n    private updateTitle(collapsed: boolean) {\n        if (collapsed) {\n            this.element.setAttribute('title', this.getTitle());\n        } else {\n            this.element.removeAttribute('title');\n        }\n    }\n}\n\n\n@Component({\n    selector: MC_NAVBAR,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    template: `\n        <nav class=\"mc-navbar\">\n            <ng-content select=\"[${MC_NAVBAR_CONTAINER}],${MC_NAVBAR_CONTAINER}\"></ng-content>\n        </nav>\n    `,\n    styleUrls: ['./navbar.css'],\n    encapsulation: ViewEncapsulation.None\n})\nexport class McNavbar implements AfterViewInit, OnDestroy {\n\n    private readonly forceRecalculateItemsWidth: boolean = false;\n    private readonly resizeDebounceInterval: number = 100;\n    private readonly firstLevelElement: string = MC_NAVBAR_CONTAINER;\n    private readonly secondLevelElements: string[] = [\n        MC_NAVBAR_ITEM,\n        MC_NAVBAR_BRAND,\n        MC_NAVBAR_TITLE\n    ];\n\n    private _totalItemsWidths: number;\n    private _itemsWidths: CachedItemWidth[];\n\n    private get maxAllowedWidth(): number {\n        return this._elementRef.nativeElement.querySelector('nav').getBoundingClientRect().width;\n    }\n\n    private get itemsWidths(): CachedItemWidth[] {\n        if (this._itemsWidths !== undefined && !this.forceRecalculateItemsWidth) {\n            return this._itemsWidths;\n        }\n\n        this.calculateAndCacheItemsWidth();\n\n        return this._itemsWidths;\n    }\n\n    private get totalItemsWidth(): number {\n        if (this._totalItemsWidths !== undefined && !this.forceRecalculateItemsWidth) {\n            return this._totalItemsWidths;\n        }\n\n        this.calculateAndCacheTotalItemsWidth();\n\n        return this._totalItemsWidths;\n    }\n\n    private _resizeSubscription: Subscription;\n\n    constructor(\n        private _elementRef: ElementRef\n    ) {\n        const resizeObserver = fromEvent(window, 'resize')\n            .pipe(debounceTime(this.resizeDebounceInterval));\n\n        this._resizeSubscription = resizeObserver.subscribe(this.updateCollapsed.bind(this));\n    }\n\n    updateCollapsed(): void {\n        let collapseDelta = this.totalItemsWidth - this.maxAllowedWidth;\n\n        for (let i = this.itemsWidths.length - 1; i >= 0; i--) {\n            const item = this.itemsWidths[i];\n\n            if (!item.canCollapse) {\n                continue;\n            }\n\n            item.processCollapsed(collapseDelta > 0);\n            collapseDelta -= item.collapsedItemsWidth;\n        }\n    }\n\n    ngAfterViewInit(): void {\n        // Note: this wait is required for loading and rendering fonts for icons;\n        // unfortunately we cannot control font rendering\n        setTimeout(() => this.updateCollapsed(), 0);\n    }\n\n    ngOnDestroy() {\n        this._resizeSubscription.unsubscribe();\n    }\n\n    private calculateAndCacheTotalItemsWidth() {\n        this._totalItemsWidths = this.itemsWidths\n            .reduce((acc, item) => acc + item.width, 0);\n    }\n\n    private getOuterElementWidth(element: HTMLElement): number {\n        const baseWidth  = element.getBoundingClientRect().width;\n        const marginRight = parseInt(getComputedStyle(element).getPropertyValue('margin-right'));\n        const marginLeft = parseInt(getComputedStyle(element).getPropertyValue('margin-left'));\n\n        return baseWidth + marginRight + marginLeft;\n    }\n\n    private calculateAndCacheItemsWidth() {\n        const allItemsSelector = this.secondLevelElements\n            .map((e: string) => `${this.firstLevelElement}>${e}`);\n        const allItems: HTMLElement[] = Array.from(this._elementRef.nativeElement.querySelectorAll(allItemsSelector));\n\n        this._itemsWidths = allItems\n            .map((el) => new CachedItemWidth(el, this.getOuterElementWidth(el), this.getItemsForCollapse(el)));\n    }\n\n    private getItemsForCollapse(element: HTMLElement): CollapsibleItem[] {\n        const icon = element.querySelector(`[${MC_ICON}],${MC_NAVBAR_LOGO},[${MC_NAVBAR_LOGO}]`);\n\n        if (!icon) {\n            return [];\n        }\n\n        return Array.from(element.querySelectorAll(MC_NAVBAR_TITLE))\n            .map((el) => new CollapsibleItem(<HTMLElement> el, el.getBoundingClientRect().width));\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { A11yModule } from '@ptsecurity/cdk/a11y';\nimport { PlatformModule } from '@ptsecurity/cdk/platform';\n\nimport { McIconModule } from '@ptsecurity/mosaic/icon';\n\nimport {\n    McNavbar,\n    McNavbarContainer,\n    McNavbarItem,\n    McNavbarTitle,\n    McNavbarBrand,\n    McNavbarLogo\n} from './navbar.component';\n\n\n@NgModule({\n    imports: [\n        CommonModule,\n        A11yModule,\n        PlatformModule,\n        McIconModule\n    ],\n    exports: [\n        McNavbar,\n        McNavbarContainer,\n        McNavbarTitle,\n        McNavbarItem,\n        McNavbarBrand,\n        McNavbarLogo\n    ],\n    declarations: [\n        McNavbar,\n        McNavbarContainer,\n        McNavbarTitle,\n        McNavbarItem,\n        McNavbarBrand,\n        McNavbarLogo\n    ]\n})\nexport class McNavbarModule {}\n","import {\n    ChangeDetectionStrategy,\n    Component,\n    ViewEncapsulation,\n    ElementRef,\n    Input\n} from '@angular/core';\nimport { CanColor, CanColorCtor, mixinColor, ThemePalette } from '@ptsecurity/mosaic/core';\n\n\nexport type ProgressBarMode = 'determinate' | 'indeterminate';\n\nlet idIterator = 0;\n\nconst MIN_PERCENT = 0;\nconst MAX_PERCENT = 100;\n\nexport class McProgressBarBase {\n    constructor(public _elementRef: ElementRef) {}\n}\n\nexport const _McProgressBarMixinBase:\n    CanColorCtor &\n    typeof McProgressBarBase =\n        mixinColor(McProgressBarBase);\n\n@Component({\n    selector: 'mc-progress-bar',\n    templateUrl: './progress-bar.component.html',\n    styleUrls: ['./progress-bar.css'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n    host: {\n        class: 'mc-progress-bar',\n        '[attr.id]': 'id'\n    }\n})\nexport class McProgressBar extends _McProgressBarMixinBase implements CanColor {\n    @Input() id: string = `mc-progress-bar-${idIterator++}`;\n    @Input() value: number = 0;\n    @Input() mode: ProgressBarMode = 'determinate';\n    @Input() color: ThemePalette = ThemePalette.Primary;\n\n    constructor(elementRef: ElementRef) {\n        super(elementRef);\n    }\n\n    get percentage(): number {\n        return Math.max(MIN_PERCENT, Math.min(MAX_PERCENT, this.value)) / MAX_PERCENT;\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { PlatformModule } from '@ptsecurity/cdk/platform';\n\nimport {\n    McProgressBar\n} from './progress-bar.component';\n\n\n@NgModule({\n    imports: [\n        CommonModule,\n        PlatformModule\n    ],\n    exports: [\n        McProgressBar\n    ],\n    declarations: [\n        McProgressBar\n    ]\n})\nexport class McProgressBarModule {}\n","import {\n    ChangeDetectionStrategy,\n    Component,\n    ViewEncapsulation,\n    ElementRef,\n    Input\n} from '@angular/core';\nimport { CanColor, CanColorCtor, mixinColor, ThemePalette } from '@ptsecurity/mosaic/core';\n\n\nexport type ProgressSpinnerMode = 'determinate' | 'indeterminate';\n\nlet idIterator = 0;\n\nconst MIN_PERCENT = 0;\nconst MAX_PERCENT = 100;\n\nexport class McProgressSpinnerBase {\n    constructor(public _elementRef: ElementRef) {}\n}\n\nexport const _McProgressSpinnerMixinBase:\n    CanColorCtor &\n    typeof McProgressSpinnerBase =\n        mixinColor(McProgressSpinnerBase);\n\nconst MAX_DASH_ARRAY = 273;\n\n@Component({\n    selector: 'mc-progress-spinner',\n    templateUrl: './progress-spinner.component.html',\n    styleUrls: ['./progress-spinner.css'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n    host: {\n        class: 'mc-progress-spinner',\n        '[attr.id]': 'id'\n    }\n})\nexport class McProgressSpinner extends _McProgressSpinnerMixinBase implements CanColor {\n    @Input() id: string = `mc-progress-spinner-${idIterator++}`;\n    @Input() value: number = 0;\n    @Input() mode: ProgressSpinnerMode = 'determinate';\n    @Input() color: ThemePalette = ThemePalette.Primary;\n\n    constructor(elementRef: ElementRef) {\n        super(elementRef);\n    }\n\n    get percentage(): number {\n        return Math.max(MIN_PERCENT, Math.min(MAX_PERCENT, this.value)) / MAX_PERCENT;\n    }\n\n    get dashOffsetPercent(): string {\n        return `${MAX_DASH_ARRAY - this.percentage * MAX_DASH_ARRAY}%`;\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { PlatformModule } from '@ptsecurity/cdk/platform';\n\nimport { McProgressSpinner } from './progress-spinner.component';\n\n\n@NgModule({\n    imports: [\n        CommonModule,\n        PlatformModule\n    ],\n    exports: [\n        McProgressSpinner\n    ],\n    declarations: [\n        McProgressSpinner\n    ]\n})\nexport class McProgressSpinnerModule {}\n","import {\n    AfterContentInit,\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component, ContentChildren, Directive, ElementRef, EventEmitter, forwardRef,\n    Input, OnDestroy, OnInit, Optional, Output, QueryList,\n    ViewChild,\n    ViewEncapsulation\n} from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\n\nimport { UniqueSelectionDispatcher } from '@ptsecurity/cdk/collections';\n\nimport {\n    CanColor, CanColorCtor,\n    CanDisable, CanDisableCtor,\n    HasTabIndex, HasTabIndexCtor,\n    mixinColor,\n    mixinDisabled,\n    mixinTabIndex,\n    toBoolean\n} from '@ptsecurity/mosaic/core';\n\n\n// Increasing integer for generating unique ids for radio components.\nlet nextUniqueId = 0;\n\n/** Change event object emitted by McRadio. */\nexport class McRadioChange {\n    constructor(\n        /** The McRadioButton that emits the change event. */\n        public source: McRadioButton,\n        /** The value of the McRadioButton. */\n        public value: any) {}\n}\n\n// Boilerplate for applying mixins to McRadioGroup.\n/** @docs-private */\nexport class McRadioGroupBase {}\nexport const _McRadioGroupMixinBase: CanDisableCtor & typeof McRadioGroupBase = mixinDisabled(McRadioGroupBase);\n\n/**\n * Provider Expression that allows mc-radio-group to register as a ControlValueAccessor. This\n * allows it to support [(ngModel)] and ngControl.\n * @docs-private\n */\nexport const MC_RADIO_GROUP_CONTROL_VALUE_ACCESSOR: any = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => McRadioGroup),\n    multi: true\n};\n\n@Directive({\n    selector: 'mc-radio-group',\n    exportAs: 'mcRadioGroup',\n    providers: [MC_RADIO_GROUP_CONTROL_VALUE_ACCESSOR],\n    host: {\n        role: 'radiogroup',\n        class: 'mc-radio-group'\n    },\n    inputs: ['disabled']\n})\nexport class McRadioGroup extends _McRadioGroupMixinBase\n    implements AfterContentInit, ControlValueAccessor, CanDisable {\n\n    /** Name of the radio button group. All radio buttons inside this group will use this name. */\n    @Input()\n    get name(): string { return this._name; }\n    set name(value: string) {\n        this._name = value;\n        this.updateRadioButtonNames();\n    }\n\n    /** Whether the labels should appear after or before the radio-buttons. Defaults to 'after' */\n    @Input()\n    get labelPosition(): 'before' | 'after' {\n        return this._labelPosition;\n    }\n    set labelPosition(v) {\n        this._labelPosition = v === 'before' ? 'before' : 'after';\n        this.markRadiosForCheck();\n    }\n\n    /** Value of the radio button. */\n    @Input()\n    get value(): any { return this._value; }\n    set value(newValue: any) {\n        if (this._value !== newValue) {\n            // Set this before proceeding to ensure no circular loop occurs with selection.\n            this._value = newValue;\n\n            this.updateSelectedRadioFromValue();\n            this.checkSelectedRadioButton();\n        }\n    }\n\n    /** Whether the radio button is selected. */\n    @Input()\n    get selected() { return this._selected; }\n    set selected(selected: McRadioButton | null) {\n        this._selected = selected;\n        this.value = selected ? selected.value : null;\n        this.checkSelectedRadioButton();\n    }\n\n    /** Whether the radio group is disabled */\n    @Input()\n    get disabled(): boolean { return this._disabled; }\n    set disabled(value) {\n        this._disabled = toBoolean(value);\n        this.markRadiosForCheck();\n    }\n\n    /** Whether the radio group is required */\n    @Input()\n    get required(): boolean { return this._required; }\n    set required(value: boolean) {\n        this._required = toBoolean(value);\n        this.markRadiosForCheck();\n    }\n\n    /**\n     * Event emitted when the group value changes.\n     * Change events are only emitted when the value changes due to user interaction with\n     * a radio button (the same behavior as `<input type-\"radio\">`).\n     */\n    @Output() readonly change: EventEmitter<McRadioChange> = new EventEmitter<McRadioChange>();\n\n    /** Child radio buttons. */\n    @ContentChildren(forwardRef(() => McRadioButton), { descendants: true })\n    _radios: QueryList<McRadioButton>;\n\n    /**\n     * Selected value for group. Should equal the value of the selected radio button if there *is*\n     * a corresponding radio button with a matching value. If there is *not* such a corresponding\n     * radio button, this value persists to be applied in case a new radio button is added with a\n     * matching value.\n     */\n    private _value: any = null;\n\n    /** The HTML name attribute applied to radio buttons in this group. */\n    private _name: string = `mc-radio-group-${nextUniqueId++}`;\n\n    /** The currently selected radio button. Should match value. */\n    private _selected: McRadioButton | null = null;\n\n    /** Whether the `value` has been set to its initial value. */\n    private _isInitialized: boolean = false;\n\n    /** Whether the labels should appear after or before the radio-buttons. Defaults to 'after' */\n    private _labelPosition: 'before' | 'after' = 'after';\n\n    /** Whether the radio group is disabled. */\n    private _disabled: boolean = false;\n\n    /** Whether the radio group is required. */\n    private _required: boolean = false;\n\n    constructor(\n        private readonly _changeDetector: ChangeDetectorRef\n    ) {\n        super();\n    }\n\n    /** The method to be called in order to update ngModel */\n    // tslint:disable-next-line\n    controlValueAccessorChangeFn: (value: any) => void = () => {};\n\n    /**\n     * onTouch function registered via registerOnTouch (ControlValueAccessor).\n     * @docs-private\n     */\n    // tslint:disable-next-line\n    onTouched: () => any = () => {};\n\n    checkSelectedRadioButton() {\n        if (this._selected && !this._selected.checked) {\n            this._selected.checked = true;\n        }\n    }\n\n    /**\n     * Initialize properties once content children are available.\n     * This allows us to propagate relevant attributes to associated buttons.\n     */\n    ngAfterContentInit() {\n        // Mark this component as initialized in AfterContentInit because the initial value can\n        // possibly be set by NgModel on McRadioGroup, and it is possible that the OnInit of the\n        // NgModel occurs *after* the OnInit of the McRadioGroup.\n        this._isInitialized = true;\n    }\n\n    /**\n     * Mark this group as being \"touched\" (for ngModel). Meant to be called by the contained\n     * radio buttons upon their blur.\n     */\n    touch() {\n        if (this.onTouched) {\n            this.onTouched();\n        }\n    }\n\n    /** Dispatch change event with current selection and group value. */\n    emitChangeEvent(): void {\n        if (this._isInitialized) {\n            this.change.emit(new McRadioChange(this._selected!, this._value));\n        }\n    }\n\n    markRadiosForCheck() {\n        if (this._radios) {\n            this._radios.forEach((radio) => radio.markForCheck());\n        }\n    }\n\n    /**\n     * Sets the model value. Implemented as part of ControlValueAccessor.\n     */\n    writeValue(value: any) {\n        this.value = value;\n        this._changeDetector.markForCheck();\n    }\n\n    /**\n     * Registers a callback to be triggered when the model value changes.\n     * Implemented as part of ControlValueAccessor.\n     * @param fn Callback to be registered.\n     */\n    registerOnChange(fn: (value: any) => void) {\n        this.controlValueAccessorChangeFn = fn;\n    }\n\n    /**\n     * Registers a callback to be triggered when the control is touched.\n     * Implemented as part of ControlValueAccessor.\n     * @param fn Callback to be registered.\n     */\n    registerOnTouched(fn: any) {\n        this.onTouched = fn;\n    }\n\n    /**\n     * Sets the disabled state of the control. Implemented as a part of ControlValueAccessor.\n     * @param isDisabled Whether the control should be disabled.\n     */\n    setDisabledState(isDisabled: boolean) {\n        this.disabled = isDisabled;\n        this._changeDetector.markForCheck();\n    }\n\n    private updateRadioButtonNames(): void {\n        if (this._radios) {\n            this._radios.forEach((radio) => {\n                radio.name = this.name;\n            });\n        }\n    }\n\n    /** Updates the `selected` radio button from the internal _value state. */\n    private updateSelectedRadioFromValue(): void {\n        // If the value already matches the selected radio, do nothing.\n        const isAlreadySelected = this._selected !== null && this._selected.value === this._value;\n\n        if (this._radios != null && !isAlreadySelected) {\n            this._selected = null;\n            this._radios.forEach((radio) => {\n                radio.checked = this.value === radio.value;\n                if (radio.checked) {\n                    this._selected = radio;\n                }\n            });\n        }\n    }\n}\n\n\n// Boilerplate for applying mixins to McRadioButton.\n/** @docs-private */\nexport class McRadioButtonBase {\n    // Since the disabled property is manually defined for the McRadioButton and isn't set up in\n    // the mixin base class. To be able to use the tabindex mixin, a disabled property must be\n    // defined to properly work.\n    disabled: boolean;\n\n    constructor(public _elementRef: ElementRef) {}\n}\n\nexport const _McRadioButtonMixinBase:\n    CanColorCtor &\n    HasTabIndexCtor &\n    typeof McRadioButtonBase =\n        mixinColor(mixinTabIndex(McRadioButtonBase));\n\n\n@Component({\n    selector: 'mc-radio-button',\n    templateUrl: 'radio.component.html',\n    styleUrls: ['radio.css'],\n    inputs: ['color', 'tabIndex'],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    exportAs: 'mcRadioButton',\n    host: {\n        class: 'mc-radio-button',\n        '[attr.id]': 'id',\n        '[class.mc-checked]': 'checked',\n        '[class.mc-disabled]': 'disabled',\n        '(focus)': '_inputElement.nativeElement.focus()'\n    }\n})\nexport class McRadioButton extends _McRadioButtonMixinBase\n    implements OnInit, OnDestroy, CanColor, HasTabIndex {\n\n    private readonly _uniqueId: string = `mc-radio-${++nextUniqueId}`;\n\n    /* tslint:disable:member-ordering */\n\n    /** The unique ID for the radio button. */\n    @Input() id: string = this._uniqueId;\n\n    /** Analog to HTML 'name' attribute used to group radios for unique selection. */\n    @Input() name: string;\n\n    /** Used to set the 'aria-label' attribute on the underlying input element. */\n    @Input('aria-label') ariaLabel: string;\n\n    /** The 'aria-labelledby' attribute takes precedence as the element's text alternative. */\n    @Input('aria-labelledby') ariaLabelledby: string;\n\n    /** The 'aria-describedby' attribute is read after the element's label and field type. */\n    @Input('aria-describedby') ariaDescribedby: string;\n\n    /** Whether this radio button is checked. */\n    @Input()\n    get checked(): boolean { return this._checked; }\n    set checked(value: boolean) {\n        const newCheckedState = toBoolean(value);\n\n        if (this._checked !== newCheckedState) {\n            this._checked = newCheckedState;\n\n            if (newCheckedState && this.radioGroup && this.radioGroup.value !== this.value) {\n                this.radioGroup.selected = this;\n            } else if (!newCheckedState && this.radioGroup && this.radioGroup.value === this.value) {\n                // When unchecking the selected radio button, update the selected radio\n                // property on the group.\n                this.radioGroup.selected = null;\n            }\n\n            if (newCheckedState) {\n                // Notify all radio buttons with the same name to un-check.\n                this._radioDispatcher.notify(this.id, this.name);\n            }\n            this._changeDetector.markForCheck();\n        }\n    }\n\n    /** The value of this radio button. */\n    @Input()\n    get value(): any { return this._value; }\n    set value(value: any) {\n        if (this._value !== value) {\n            this._value = value;\n            if (this.radioGroup != null) {\n                if (!this.checked) {\n                    // Update checked when the value changed to match the radio group's value\n                    this.checked = this.radioGroup.value === value;\n                }\n                if (this.checked) {\n                    this.radioGroup.selected = this;\n                }\n            }\n        }\n    }\n\n    /** Whether the radio button is disabled. */\n    @Input()\n    get disabled(): boolean {\n        return this._disabled || (this.radioGroup != null && this.radioGroup.disabled);\n    }\n    set disabled(value: boolean) {\n        const newDisabledState = toBoolean(value);\n\n        if (this._disabled !== newDisabledState) {\n\n            this._disabled = newDisabledState;\n            this._changeDetector.markForCheck();\n        }\n    }\n\n    /** Whether the radio button is required. */\n    @Input()\n    get required(): boolean {\n        return this._required || (this.radioGroup && this.radioGroup.required);\n    }\n    set required(value: boolean) {\n        this._required = toBoolean(value);\n    }\n\n    /** Whether the label should appear after or before the radio button. Defaults to 'after' */\n    @Input()\n    get labelPosition(): 'before' | 'after' {\n        return this._labelPosition || (this.radioGroup && this.radioGroup.labelPosition) || 'after';\n    }\n    set labelPosition(value) {\n        this._labelPosition = value;\n    }\n    private _labelPosition: 'before' | 'after';\n\n    /** The native `<input type=radio>` element */\n    @ViewChild('input') _inputElement: ElementRef;\n\n    /**\n     * Event emitted when the checked state of this radio button changes.\n     * Change events are only emitted when the value changes due to user interaction with\n     * the radio button (the same behavior as `<input type-\"radio\">`).\n     */\n    @Output() readonly change: EventEmitter<McRadioChange> = new EventEmitter<McRadioChange>();\n\n    /** The parent radio group. May or may not be present. */\n    radioGroup: McRadioGroup;\n\n    @Input()\n    isFocused: boolean = false;\n\n    /** ID of the native input element inside `<mc-radio-button>` */\n    get inputId(): string { return `${this.id || this._uniqueId}-input`; }\n\n    /** Whether this radio is checked. */\n    private _checked: boolean = false;\n\n    /** Whether this radio is disabled. */\n    private _disabled: boolean;\n\n    /** Whether this radio is required. */\n    private _required: boolean;\n\n    /** Value assigned to this radio. */\n    private _value: any = null;\n\n    /** Unregister function for _radioDispatcher */\n    // tslint:disable-next-line\n    private readonly removeUniqueSelectionListener: () => void = () => {};\n\n    constructor(\n        @Optional() radioGroup: McRadioGroup,\n        elementRef: ElementRef,\n        private readonly _changeDetector: ChangeDetectorRef,\n        private readonly _radioDispatcher: UniqueSelectionDispatcher\n    ) {\n\n        super(elementRef);\n\n        this.radioGroup = radioGroup;\n\n        this.removeUniqueSelectionListener =\n            _radioDispatcher.listen((id: string, name: string) => {\n                if (id !== this.id && name === this.name) {\n                    this.checked = false;\n                }\n            });\n    }\n\n    ngOnInit() {\n        if (this.radioGroup) {\n            // If the radio is inside a radio group, determine if it should be checked\n            this.checked = this.radioGroup.value === this._value;\n            // Copy name from parent radio group\n            this.name = this.radioGroup.name;\n        }\n    }\n\n    ngOnDestroy() {\n        this.removeUniqueSelectionListener();\n    }\n\n    /** Focuses the radio button. */\n    // tslint:disable-next-line\n    focus(): void {}\n\n    /**\n     * Marks the radio button as needing checking for change detection.\n     * This method is exposed because the parent radio group will directly\n     * update bound properties of the radio button.\n     */\n    markForCheck() {\n        // When group value changes, the button will not be notified. Use `markForCheck` to explicit\n        // update radio button's status\n        this._changeDetector.markForCheck();\n    }\n\n    onInputClick(event: Event) {\n        // We have to stop propagation for click events on the visual hidden input element.\n        // By default, when a user clicks on a label element, a generated click event will be\n        // dispatched on the associated input element. Since we are using a label element as our\n        // root container, the click event on the `radio-button` will be executed twice.\n        // The real click event will bubble up, and the generated click event also tries to bubble up.\n        // This will lead to multiple click events.\n        // Preventing bubbling for the second event will solve that issue.\n        event.stopPropagation();\n    }\n\n    onInputChange(event: Event) {\n        // We always have to stop propagation on the change event.\n        // Otherwise the change event, from the input element, will bubble up and\n        // emit its event object to the `change` output.\n        event.stopPropagation();\n\n        const groupValueChanged = this.radioGroup && this.value !== this.radioGroup.value;\n        this.checked = true;\n        this.emitChangeEvent();\n\n        if (this.radioGroup) {\n            this.radioGroup.controlValueAccessorChangeFn(this.value);\n            this.radioGroup.touch();\n            if (groupValueChanged) {\n                this.radioGroup.emitChangeEvent();\n            }\n        }\n    }\n\n    /** Dispatch change event with current value. */\n    private emitChangeEvent(): void {\n        this.change.emit(new McRadioChange(this, this._value));\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { A11yModule } from '@ptsecurity/cdk/a11y';\nimport { McCommonModule } from '@ptsecurity/mosaic/core';\n\nimport { McRadioButton, McRadioGroup } from './radio.component';\n\n\n@NgModule({\n    imports: [CommonModule, A11yModule, McCommonModule],\n    exports: [McRadioGroup, McRadioButton],\n    declarations: [McRadioGroup, McRadioButton]\n})\nexport class McRadioModule {\n}\n","import { Directive, Input } from '@angular/core';\n\nimport { CdkTreeNodeDef } from '@ptsecurity/cdk/tree';\n\n\n@Directive({\n    selector: '[mcTreeNodeDef]',\n    inputs: ['when: mcTreeNodeDefWhen'],\n    providers: [{ provide: CdkTreeNodeDef, useExisting: McTreeNodeDef }]\n})\nexport class McTreeNodeDef<T> extends CdkTreeNodeDef<T> {\n    @Input('mcTreeNode') data: T;\n}\n","import { Directive, Input, OnInit } from '@angular/core';\nimport { CdkTreeNodePadding } from '@ptsecurity/cdk/tree';\n\n\n@Directive({\n    selector: '[mcTreeNodePadding]',\n    providers: [{ provide: CdkTreeNodePadding, useExisting: McTreeNodePadding }]\n})\nexport class McTreeNodePadding<T> extends CdkTreeNodePadding<T> implements OnInit {\n    @Input('mcTreeNodePadding') level: number;\n\n    @Input('mcTreeNodePaddingIndent') indent: number;\n\n    baseLeftPadding: number = 12;\n    /* tslint:disable-next-line:naming-convention */\n    _indent: number = 20;\n\n    withIcon: boolean;\n    iconWidth: number = 20;\n\n    get leftPadding(): number {\n        return (this.withIcon ? 0 : this.iconWidth) + this.baseLeftPadding;\n    }\n\n    paddingIndent(): string | null {\n        const nodeLevel = (this.treeNode.data && this.tree.treeControl.getLevel)\n            ? this.tree.treeControl.getLevel(this.treeNode.data)\n            : null;\n\n        const level = this.level || nodeLevel;\n\n        return level ? `${(level * this._indent) + this.leftPadding}px` : `${this.baseLeftPadding}px`;\n    }\n\n    ngOnInit(): void {\n        this.withIcon = this.tree.treeControl.isExpandable(this.treeNode.data);\n\n        this.setPadding();\n    }\n}\n","import { Directive } from '@angular/core';\nimport { CdkTreeNodeToggle } from '@ptsecurity/cdk/tree';\n\n\n@Directive({\n    selector: '[mcTreeNodeToggle]',\n    host: {\n        '(click)': 'toggle($event)'\n    },\n    providers: [{ provide: CdkTreeNodeToggle, useExisting: McTreeNodeToggle }]\n})\nexport class McTreeNodeToggle<T> extends CdkTreeNodeToggle<T> {}\n","import {\n    ChangeDetectorRef,\n    Component,\n    EventEmitter,\n    Input,\n    Output,\n    ElementRef,\n    Inject,\n    Optional,\n    InjectionToken\n} from '@angular/core';\nimport { SelectionModel } from '@ptsecurity/cdk/collections';\nimport { CdkTreeNode } from '@ptsecurity/cdk/tree';\nimport { CanDisable, toBoolean } from '@ptsecurity/mosaic/core';\n\n\n/* tslint:disable-next-line:naming-convention */\nexport interface McTreeOptionParentComponent {\n    multiple: boolean;\n    selectionModel: SelectionModel<McTreeOption>;\n    setFocusedOption: any;\n}\n\n/**\n * Injection token used to provide the parent component to options.\n */\nexport const MC_TREE_OPTION_PARENT_COMPONENT =\n    new InjectionToken<McTreeOptionParentComponent>('MC_TREE_OPTION_PARENT_COMPONENT');\n\nexport class McTreeOptionChange {\n    constructor(public source: McTreeOption, public isUserInput = false) {}\n}\n\nlet uniqueIdCounter: number = 0;\n\n@Component({\n    selector: 'mc-tree-option',\n    exportAs: 'mcTreeOption',\n    host: {\n        '[attr.id]': 'id',\n        '[attr.tabindex]': 'getTabIndex()',\n\n        '[attr.disabled]': 'disabled || null',\n\n        class: 'mc-tree-option',\n        '[class.mc-selected]': 'selected',\n        '[class.mc-active]': 'active',\n\n        '(click)': 'selectViaInteraction()'\n    },\n    templateUrl: './tree-option.html',\n    providers: [{ provide: CdkTreeNode, useExisting: McTreeOption }]\n})\nexport class McTreeOption extends CdkTreeNode<McTreeOption> implements CanDisable {\n    @Output() readonly onSelectionChange = new EventEmitter<McTreeOptionChange>();\n\n    @Input() value: any;\n\n    @Input()\n    get disabled() {\n        return this._disabled;\n    }\n\n    set disabled(value: any) {\n        const newValue = toBoolean(value);\n\n        if (newValue !== this._disabled) {\n            this._disabled = newValue;\n        }\n    }\n\n    private _disabled: boolean = false;\n\n    // @Input()\n    // get selected(): boolean {\n    //     return this.treeSelection.selectionModel && this.treeSelection.selectionModel.isSelected(this) || false;\n    // }\n\n    get selected(): boolean {\n        return this._selected;\n    }\n\n    set selected(value: boolean) {\n        const isSelected = toBoolean(value);\n\n        if (isSelected !== this._selected) {\n            this.setSelected(isSelected);\n\n            // this.treeSelection._reportValueChange();\n        }\n    }\n\n    private _selected: boolean = false;\n\n    /**\n     * Whether or not the option is currently active and ready to be selected.\n     * An active option displays styles as if it is focused, but the\n     * focus is actually retained somewhere else. This comes in handy\n     * for components like autocomplete where focus must remain on the input.\n     */\n    get active(): boolean {\n        return this._active;\n    }\n\n    private _active = false;\n\n    get id(): string {\n        return this._id;\n    }\n\n    private _id = `mc-tree-option-${uniqueIdCounter++}`;\n\n    get multiple(): boolean {\n        return this.parent.multiple;\n    }\n\n    constructor(\n        protected elementRef: ElementRef,\n        protected changeDetectorRef: ChangeDetectorRef,\n        @Optional() @Inject(MC_TREE_OPTION_PARENT_COMPONENT) private readonly parent: McTreeOptionParentComponent\n    ) {\n        // todo any\n        super(elementRef, parent as any);\n    }\n\n    toggle(): void {\n        this.selected = !this.selected;\n    }\n\n    setSelected(selected: boolean) {\n        if (this._selected === selected || !this.parent.selectionModel) { return; }\n\n        this._selected = selected;\n\n        if (selected) {\n            this.parent.selectionModel.select(this);\n        } else {\n            this.parent.selectionModel.deselect(this);\n        }\n\n        // this._changeDetector.markForCheck();\n    }\n\n    /**\n     * This method sets display styles on the option to make it appear\n     * active. This is used by the ActiveDescendantKeyManager so key\n     * events will display the proper options as active on arrow key events.\n     */\n    setActiveStyles(): void {\n        if (!this._active) {\n            this._active = true;\n\n            this.changeDetectorRef.markForCheck();\n        }\n    }\n\n    /**\n     * This method removes display styles on the option that made it appear\n     * active. This is used by the ActiveDescendantKeyManager so key\n     * events will display the proper options as active on arrow key events.\n     */\n    setInactiveStyles(): void {\n        if (this._active) {\n            this._active = false;\n            this.changeDetectorRef.markForCheck();\n        }\n    }\n\n    getHeight(): number {\n        const clientRects = this.elementRef.nativeElement.getClientRects();\n        if (clientRects.length) {\n            return clientRects[0].height;\n        }\n\n        return 0;\n    }\n\n    focus(): void {\n        const element = this.getHostElement();\n\n        if (typeof element.focus === 'function') {\n            element.focus();\n        }\n    }\n\n    // todo старая реализация, нужно восстановить tree-selection\n    // handleClick(): void {\n    //     if (this.disabled) { return; }\n    //\n    //     this.treeSelection.setFocusedOption(this);\n    // }\n\n    /**\n     * The displayed value of the option. It is necessary to show the selected option in the\n     * select's trigger.\n     */\n    get viewValue(): string {\n        // TODO(kara): Add input property alternative for node envs.\n        return (this.getHostElement().textContent || '').trim();\n    }\n\n    select(): void {\n        if (!this._selected) {\n            this._selected = true;\n\n            this.changeDetectorRef.markForCheck();\n        }\n    }\n\n    deselect(): void {\n        if (this._selected) {\n            this._selected = false;\n\n            this.changeDetectorRef.markForCheck();\n        }\n    }\n\n    selectViaInteraction(): void {\n        if (!this.disabled) {\n            this._selected = this.multiple ? !this._selected : true;\n\n            this.changeDetectorRef.markForCheck();\n            this.emitSelectionChangeEvent(true);\n\n            if (this.parent.setFocusedOption) {\n                this.parent.setFocusedOption(this);\n            }\n        }\n    }\n\n    emitSelectionChangeEvent(isUserInput = false): void {\n        this.onSelectionChange.emit(new McTreeOptionChange(this, isUserInput));\n    }\n\n    getHostElement(): HTMLElement {\n        return this.elementRef.nativeElement;\n    }\n\n    getTabIndex(): string {\n        return this.disabled ? '-1' : '0';\n    }\n}\n","import {\n    AfterContentInit,\n    Attribute,\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    ContentChildren,\n    EventEmitter,\n    Input,\n    IterableDiffer,\n    IterableDiffers,\n    Output,\n    QueryList,\n    ViewChild,\n    ViewEncapsulation,\n    ElementRef\n} from '@angular/core';\nimport { NodeDef, ViewData } from '@angular/core/src/view';\nimport { ActiveDescendantKeyManager } from '@ptsecurity/cdk/a11y';\nimport { SelectionModel } from '@ptsecurity/cdk/collections';\nimport { END, ENTER, HOME, LEFT_ARROW, PAGE_DOWN, PAGE_UP, RIGHT_ARROW, SPACE } from '@ptsecurity/cdk/keycodes';\nimport { CdkTree, CdkTreeNodeOutlet } from '@ptsecurity/cdk/tree';\nimport {\n    CanDisable,\n    CanDisableCtor,\n    HasTabIndex,\n    HasTabIndexCtor,\n    mixinDisabled,\n    mixinTabIndex,\n    toBoolean\n} from '@ptsecurity/mosaic/core';\nimport { Subject } from 'rxjs';\n\nimport { MC_TREE_OPTION_PARENT_COMPONENT, McTreeOption } from './tree-option';\n\n\nexport class McTreeNavigationChange {\n    constructor(\n        public source: McTreeSelection,\n        public option: McTreeOption\n    ) {}\n}\n\nexport class McTreeSelectionChange {\n    constructor(public source: McTreeSelection, public option: McTreeOption) {}\n}\n\nclass McTreeSelectionBase<T> extends CdkTree<T> {\n    constructor(differs: IterableDiffers, changeDetectorRef: ChangeDetectorRef) {\n        super(differs, changeDetectorRef);\n    }\n}\n\n/* tslint:disable-next-line:naming-convention */\nconst McTreeSelectionBaseMixin: HasTabIndexCtor & CanDisableCtor &\n    typeof McTreeSelectionBase = mixinTabIndex(mixinDisabled(McTreeSelectionBase));\n\n\n@Component({\n    selector: 'mc-tree-selection',\n    exportAs: 'mcTreeSelection',\n    template: `<ng-container cdkTreeNodeOutlet></ng-container>`,\n    host: {\n        class: 'mc-tree-selection',\n\n        '[attr.tabindex]': 'tabIndex',\n\n        '(keydown)': 'onKeyDown($event)',\n        '(window:resize)': 'updateScrollSize()'\n    },\n    styleUrls: ['./tree.css'],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    providers: [\n        { provide: MC_TREE_OPTION_PARENT_COMPONENT, useExisting: McTreeSelection },\n        { provide: CdkTree, useExisting: McTreeSelection }\n    ]\n})\nexport class McTreeSelection extends McTreeSelectionBaseMixin<McTreeOption>\n    implements AfterContentInit, CanDisable, HasTabIndex {\n\n    @ViewChild(CdkTreeNodeOutlet) nodeOutlet: CdkTreeNodeOutlet;\n\n    @ContentChildren(McTreeOption) options: QueryList<McTreeOption>;\n\n    keyManager: ActiveDescendantKeyManager<McTreeOption>;\n\n    selectionModel: SelectionModel<McTreeOption>;\n\n    tabIndex: number;\n    multiple: boolean;\n    autoSelect: boolean;\n    noUnselect: boolean;\n\n    // todo temporary solution\n    withShift: boolean;\n    withCtrl: boolean;\n\n\n    @Output() readonly navigationChange = new EventEmitter<McTreeNavigationChange>();\n\n    @Output() readonly selectionChange = new EventEmitter<McTreeSelectionChange>();\n\n    @Input()\n    get disabled(): boolean {\n        return this._disabled;\n    }\n\n    set disabled(rawValue: boolean) {\n        const value = toBoolean(rawValue);\n\n        if (this._disabled !== value) {\n            this._disabled = value;\n\n            if (this._disabled) {\n                /* tslint:disable-next-line:no-console */\n                console.log('need disable all options');\n            } else {\n                /* tslint:disable-next-line:no-console */\n                console.log('need enable all options');\n            }\n        }\n    }\n\n    private _disabled: boolean = false;\n\n    private readonly destroy = new Subject<void>();\n\n    constructor(\n        private elementRef: ElementRef,\n        differs: IterableDiffers,\n        changeDetectorRef: ChangeDetectorRef,\n        @Attribute('tabindex') tabIndex: string,\n        @Attribute('multiple') multiple: string,\n        @Attribute('auto-select') autoSelect: string,\n        @Attribute('no-unselect') noUnselect: string\n    ) {\n        super(differs, changeDetectorRef);\n\n        this.tabIndex = parseInt(tabIndex) || 0;\n\n        this.multiple = multiple === null ? false : toBoolean(multiple);\n        this.autoSelect = autoSelect === null ? true : toBoolean(autoSelect);\n        this.noUnselect = noUnselect === null ? true : toBoolean(noUnselect);\n\n        this.selectionModel = new SelectionModel<McTreeOption>(this.multiple);\n    }\n\n    ngAfterContentInit(): void {\n        this.keyManager = new ActiveDescendantKeyManager<McTreeOption>(this.options)\n            // .withTypeAhead()\n            .withVerticalOrientation(true)\n            .withHorizontalOrientation(null);\n    }\n\n    ngOnDestroy() {\n        this.destroy.next();\n\n        this.destroy.complete();\n    }\n\n    onKeyDown(event: KeyboardEvent) {\n        const keyCode = event.keyCode;\n        this.withShift = event.shiftKey;\n        this.withCtrl = event.ctrlKey;\n\n        switch (keyCode) {\n            case LEFT_ARROW:\n                if (this.keyManager.activeItem) {\n                    this.treeControl.collapse(this.keyManager.activeItem.data);\n                }\n\n                event.preventDefault();\n\n                break;\n            case RIGHT_ARROW:\n                if (this.keyManager.activeItem) {\n                    this.treeControl.expand(this.keyManager.activeItem.data);\n                }\n\n                event.preventDefault();\n\n                break;\n            case SPACE:\n            case ENTER:\n                this.toggleFocusedOption();\n                event.preventDefault();\n\n                break;\n            case HOME:\n                this.keyManager.setFirstItemActive();\n                event.preventDefault();\n\n                break;\n            case END:\n                this.keyManager.setLastItemActive();\n                event.preventDefault();\n\n                break;\n            case PAGE_UP:\n                this.keyManager.setPreviousPageItemActive();\n                event.preventDefault();\n\n                break;\n            case PAGE_DOWN:\n                this.keyManager.setNextPageItemActive();\n                event.preventDefault();\n\n                break;\n            default:\n                this.keyManager.onKeydown(event);\n        }\n    }\n\n    updateScrollSize(): void {\n        if (!this.options.first) { return; }\n\n        this.keyManager.withScrollSize(Math.floor(this.getHeight() / this.options.first.getHeight()));\n    }\n\n    setFocusedOption(option: McTreeOption) {\n        this.keyManager.setActiveItem(option);\n\n        if (this.withShift && this.multiple) {\n            const previousIndex = this.keyManager.previousActiveItemIndex;\n            const activeIndex = this.keyManager.activeItemIndex;\n\n            if (previousIndex < activeIndex) {\n                this.options.forEach((item, index) => {\n                    if (index >= previousIndex && index <= activeIndex) { item.setSelected(true); }\n                });\n            } else {\n                this.options.forEach((item, index) => {\n                    if (index >= activeIndex && index <= previousIndex) { item.setSelected(true); }\n                });\n            }\n\n            this.withShift = false;\n        } else if (this.withCtrl) {\n            this.withCtrl = false;\n\n            if (!this.canDeselectLast(option)) { return; }\n\n            option.toggle();\n        } else {\n            if (this.autoSelect) {\n                this.options.forEach((item) => item.setSelected(false));\n                option.setSelected(true);\n            }\n        }\n\n        this.emitNavigationEvent(option);\n    }\n\n    toggleFocusedOption(): void {\n        const focusedIndex = this.keyManager.activeItemIndex;\n\n        if (focusedIndex != null && this.isValidIndex(focusedIndex)) {\n            const focusedOption: McTreeOption = this.options.toArray()[focusedIndex];\n\n            if (focusedOption && this.canDeselectLast(focusedOption)) {\n                focusedOption.toggle();\n\n                // Emit a change event because the focused option changed its state through user interaction.\n                this.emitChangeEvent(focusedOption);\n            }\n        }\n    }\n\n    renderNodeChanges(\n        data: McTreeOption[],\n        dataDiffer: IterableDiffer<McTreeOption> = this.dataDiffer,\n        viewContainer: any = this.nodeOutlet.viewContainer,\n        parentData?: McTreeOption\n    ): void {\n        super.renderNodeChanges(data, dataDiffer, viewContainer, parentData);\n\n        const arrayOfInstances = [];\n\n        viewContainer._embeddedViews.forEach((view: ViewData) => {\n            const viewDef = view.def;\n\n            viewDef.nodes.forEach((node: NodeDef) => {\n                if (viewDef.nodeMatchedQueries === node.matchedQueryIds) {\n                    const nodeData: any = view.nodes[node.nodeIndex];\n\n                    arrayOfInstances.push(nodeData.instance as never);\n                }\n            });\n        });\n\n        if (this.options) {\n            this.options.reset(arrayOfInstances);\n            this.options.notifyOnChanges();\n        }\n\n        this.updateScrollSize();\n    }\n\n    getHeight(): number {\n        const clientRects = this.elementRef.nativeElement.getClientRects();\n        if (clientRects.length) {\n            return clientRects[0].height;\n        }\n\n        return 0;\n    }\n\n    emitNavigationEvent(option: McTreeOption): void {\n        this.navigationChange.emit(new McTreeNavigationChange(this, option));\n    }\n\n    emitChangeEvent(option: McTreeOption): void {\n        this.selectionChange.emit(new McTreeNavigationChange(this, option));\n    }\n\n    private isValidIndex(index: number): boolean {\n        return index >= 0 && index < this.options.length;\n    }\n\n    private canDeselectLast(option: McTreeOption): boolean {\n        return !(this.noUnselect && this.selectionModel.selected.length === 1 && option.selected);\n    }\n}\n\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { CdkTreeModule } from '@ptsecurity/cdk/tree';\nimport { McPseudoCheckboxModule } from '@ptsecurity/mosaic/core';\n\nimport { McTreeNodeDef } from './node';\nimport { McTreeNodePadding } from './padding';\nimport { McTreeNodeToggle } from './toggle';\nimport { McTreeOption } from './tree-option';\nimport { McTreeSelection } from './tree-selection';\n\n\nconst MC_TREE_DIRECTIVES = [\n    McTreeSelection,\n    McTreeOption,\n    McTreeNodeDef,\n    McTreeNodePadding,\n    McTreeNodeToggle\n];\n\n@NgModule({\n    imports: [CommonModule, CdkTreeModule, McPseudoCheckboxModule],\n    exports: MC_TREE_DIRECTIVES,\n    declarations: MC_TREE_DIRECTIVES\n})\nexport class McTreeModule {}\n","import { ICollectionViewer, DataSource } from '@ptsecurity/cdk/collections';\nimport { FlatTreeControl, ITreeControl } from '@ptsecurity/cdk/tree';\nimport { BehaviorSubject, merge, Observable } from 'rxjs';\nimport { map, take } from 'rxjs/operators';\n\n\n/**\n * Tree flattener to convert a normal type of node to node with children & level information.\n * Transform nested nodes of type `T` to flattened nodes of type `F`.\n *\n * For example, the input data of type `T` is nested, and contains its children data:\n *   SomeNode: {\n *     key: 'Fruits',\n *     children: [\n *       NodeOne: {\n *         key: 'Apple',\n *       },\n *       NodeTwo: {\n *        key: 'Pear',\n *      }\n *    ]\n *  }\n *  After flattener flatten the tree, the structure will become\n *  SomeNode: {\n *    key: 'Fruits',\n *    expandable: true,\n *    level: 1\n *  },\n *  NodeOne: {\n *    key: 'Apple',\n *    expandable: false,\n *    level: 2\n *  },\n *  NodeTwo: {\n *   key: 'Pear',\n *   expandable: false,\n *   level: 2\n * }\n * and the output flattened type is `F` with additional information.\n */\nexport class McTreeFlattener<T, F> {\n    constructor(\n        public transformFunction: (node: T, level: number) => F,\n        public getLevel: (node: F) => number,\n        public isExpandable: (node: F) => boolean,\n        public getChildren: (node: T) => Observable<T[]>\n    ) {}\n\n    flattenNode(node: T, level: number, resultNodes: F[], parentMap: boolean[]): F[] {\n        const flatNode = this.transformFunction(node, level);\n        resultNodes.push(flatNode);\n\n        if (this.isExpandable(flatNode)) {\n            this.getChildren(node)\n                .pipe(take(1))\n                .subscribe((children) => {\n                    children.forEach((child, index) => {\n                        const childParentMap: boolean[] = parentMap.slice();\n                        childParentMap.push(index !== children.length - 1);\n\n                        this.flattenNode(child, level + 1, resultNodes, childParentMap);\n                    });\n                });\n        }\n\n        return resultNodes;\n    }\n\n    /**\n     * Flatten a list of node type T to flattened version of node F.\n     * Please note that type T may be nested, and the length of `structuredData` may be different\n     * from that of returned list `F[]`.\n     */\n    flattenNodes(structuredData: T[]): F[] {\n        const resultNodes: F[] = [];\n        structuredData.forEach((node) => this.flattenNode(node, 0, resultNodes, []));\n\n        return resultNodes;\n    }\n\n    /**\n     * Expand flattened node with current expansion status.\n     * The returned list may have different length.\n     */\n    expandFlattenedNodes(nodes: F[], treeControl: ITreeControl<F>): F[] {\n        const results: F[] = [];\n        const currentExpand: boolean[] = [];\n        currentExpand[0] = true;\n\n        nodes.forEach((node) => {\n            let expand = true;\n            for (let i = 0; i <= this.getLevel(node); i++) {\n                expand = expand && currentExpand[i];\n            }\n\n            if (expand) { results.push(node); }\n\n            if (this.isExpandable(node)) {\n                currentExpand[this.getLevel(node) + 1] = treeControl.isExpanded(node);\n            }\n        });\n\n        return results;\n    }\n}\n\n\n/**\n * Data source for flat tree.\n * The data source need to handle expansion/collapsion of the tree node and change the data feed\n * to `McTree`.\n * The nested tree nodes of type `T` are flattened through `MсTreeFlattener`, and converted\n * to type `F` for `McTree` to consume.\n */\nexport class McTreeFlatDataSource<T, F> extends DataSource<F> {\n    flattenedData = new BehaviorSubject<F[]>([]);\n\n    expandedData = new BehaviorSubject<F[]>([]);\n\n    get data() {\n        return this._data.value;\n    }\n\n    set data(value: T[]) {\n        this._data.next(value);\n\n        this.flattenedData.next(this.treeFlattener.flattenNodes(this.data));\n        this.treeControl.dataNodes = this.flattenedData.value;\n    }\n\n    private _data: BehaviorSubject<T[]>;\n\n    constructor(\n        private treeControl: FlatTreeControl<F>,\n        private treeFlattener: McTreeFlattener<T, F>,\n        initialData: T[] = []\n    ) {\n        super();\n\n        this._data = new BehaviorSubject<T[]>(initialData);\n    }\n\n    connect(collectionViewer: ICollectionViewer): Observable<F[]> {\n        const changes = [\n            collectionViewer.viewChange,\n            this.treeControl.expansionModel.changed,\n            this.flattenedData\n        ];\n\n        return merge(...changes)\n            .pipe(map(() => {\n                this.expandedData.next(\n                    this.treeFlattener.expandFlattenedNodes(this.flattenedData.value, this.treeControl)\n                );\n\n                return this.expandedData.value;\n            }));\n    }\n\n    disconnect() {\n        // no op\n    }\n}\n\n","import { ICollectionViewer, DataSource } from '@ptsecurity/cdk/collections';\nimport { BehaviorSubject, merge, Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\n\n/**\n * Data source for nested tree.\n *\n * The data source for nested tree doesn't have to consider node flattener, or the way to expand\n * or collapse. The expansion/collapsion will be handled by ITreeControl and each non-leaf node.\n */\nexport class McTreeNestedDataSource<T> extends DataSource<T> {\n\n    get data() {\n        return this._data.value;\n    }\n\n    set data(value: T[]) {\n        this._data.next(value);\n    }\n\n    /* tslint:disable-next-line:naming-convention */\n    private _data = new BehaviorSubject<T[]>([]);\n\n    connect(collectionViewer: ICollectionViewer): Observable<T[]> {\n        return merge(...[collectionViewer.viewChange, this._data])\n            .pipe(map(() => this.data));\n    }\n\n    disconnect() {\n        // no op\n    }\n}\n\n","import { Directive, TemplateRef } from '@angular/core';\n\n\n/** Decorates the `ng-template` tags and reads out the template from it. */\n@Directive({ selector: '[mcTabContent]' })\nexport class McTabContent {\n    constructor(public template: TemplateRef<any>) { }\n}\n","import { Directive } from '@angular/core';\nimport { CdkPortal } from '@ptsecurity/cdk/portal';\n\n\n/** Used to flag tab labels for use with the portal directive */\n@Directive({\n    selector: '[mc-tab-label], [mcTabLabel]'\n})\nexport class McTabLabel extends CdkPortal {}\n\n// TODO: workaround for https://github.com/angular/material2/issues/12760\n(McTabLabel as any).ctorParameters = () => (CdkPortal as any).ctorParameters;\n","import {\n    ChangeDetectionStrategy,\n    Component,\n    ContentChild,\n    Input,\n    OnChanges,\n    OnDestroy,\n    OnInit,\n    SimpleChanges,\n    TemplateRef,\n    ViewChild,\n    ViewContainerRef,\n    ViewEncapsulation\n} from '@angular/core';\nimport { TemplatePortal } from '@ptsecurity/cdk/portal';\nimport {\n    CanDisable,\n    CanDisableCtor,\n    mixinDisabled\n} from '@ptsecurity/mosaic/core';\nimport { Subject } from 'rxjs';\n\nimport { McTabContent } from './tab-content';\nimport { McTabLabel } from './tab-label';\n\n\nexport class McTabBase {}\nexport const mcTabMixinBase: CanDisableCtor & typeof McTabBase = mixinDisabled(\n    McTabBase\n);\n\n@Component({\n    selector: 'mc-tab',\n    // Create a template for the content of the <mc-tab> so that we can grab a reference to this\n    // TemplateRef and use it in a Portal to render the tab content in the appropriate place in the\n    // tab-group.\n    template: '<ng-template><ng-content></ng-content></ng-template>',\n    inputs: ['disabled'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n    exportAs: 'mcTab'\n})\nexport class McTab extends mcTabMixinBase\n    implements OnInit, CanDisable, OnChanges, OnDestroy {\n    /** @docs-private */\n    get content(): TemplatePortal | null {\n        return this.contentPortal;\n    }\n    /** Content for the tab label given by `<ng-template mc-tab-label>`. */\n    @ContentChild(McTabLabel)\n    templateLabel: McTabLabel;\n\n    /**\n     * Template provided in the tab content that will be used if present, used to enable lazy-loading\n     */\n    @ContentChild(McTabContent, { read: TemplateRef })\n    explicitContent: TemplateRef<any>;\n\n    /** Template inside the McTab view that contains an `<ng-content>`. */\n    @ViewChild(TemplateRef)\n    implicitContent: TemplateRef<any>;\n\n    /** Plain text label for the tab, used when there is no template label. */\n    @Input('label')\n    textLabel: string = '';\n\n    /** Aria label for the tab. */\n    @Input('aria-label')\n    ariaLabel: string;\n\n    /**\n     * Reference to the element that the tab is labelled by.\n     * Will be cleared if `aria-label` is set at the same time.\n     */\n    @Input('aria-labelledby')\n    ariaLabelledby: string;\n\n    /** Emits whenever the internal state of the tab changes. */\n    readonly stateChanges = new Subject<void>();\n\n    /**\n     * The relatively indexed position where 0 represents the center, negative is left, and positive\n     * represents the right.\n     */\n    position: number | null = null;\n\n    /**\n     * The initial relatively index origin of the tab if it was created and selected after there\n     * was already a selected tab. Provides context of what position the tab should originate from.\n     */\n    origin: number | null = null;\n\n    /**\n     * Whether the tab is currently active.\n     */\n    isActive = false;\n\n    /** Portal that will be the hosted content of the tab */\n    private contentPortal: TemplatePortal | null = null;\n\n    constructor(private viewContainerRef: ViewContainerRef) {\n        super();\n    }\n\n    ngOnChanges(changes: SimpleChanges): void {\n        if (\n            changes.hasOwnProperty('textLabel') ||\n            changes.hasOwnProperty('disabled')\n        ) {\n            this.stateChanges.next();\n        }\n    }\n\n    ngOnDestroy(): void {\n        this.stateChanges.complete();\n    }\n\n    ngOnInit(): void {\n        this.contentPortal = new TemplatePortal(\n            this.explicitContent || this.implicitContent,\n            this.viewContainerRef\n        );\n    }\n}\n","import {\n    animate,\n    state,\n    style,\n    transition,\n    trigger,\n    AnimationTriggerMetadata\n} from '@angular/animations';\n\n\nexport const mcTabsAnimations: {\n    readonly translateTab: AnimationTriggerMetadata;\n} = {\n    /** Animation translates a tab along the X axis. */\n    translateTab: trigger('translateTab', [\n        // Note: transitions to `none` instead of 0, because some browsers might blur the content.\n        state(\n            'center, void, left-origin-center, right-origin-center',\n            style({ transform: 'none' })\n        ),\n\n        // If the tab is either on the left or right, we additionally add a `min-height` of 1px\n        // in order to ensure that the element has a height before its state changes. This is\n        // necessary because Chrome does seem to skip the transition in RTL mode if the element does\n        // not have a static height and is not rendered. See related issue: #9465\n        state(\n            'left',\n            style({ transform: 'translate3d(-100%, 0, 0)', minHeight: '1px' })\n        ),\n        state(\n            'right',\n            style({ transform: 'translate3d(100%, 0, 0)', minHeight: '1px' })\n        ),\n\n        transition(\n            '* => left, * => right, left => center, right => center',\n            animate('{{animationDuration}} cubic-bezier(0.35, 0, 0.25, 1)')\n        ),\n        transition('void => left-origin-center', [\n            style({ transform: 'translate3d(-100%, 0, 0)' }),\n            animate('{{animationDuration}} cubic-bezier(0.35, 0, 0.25, 1)')\n        ]),\n        transition('void => right-origin-center', [\n            style({ transform: 'translate3d(100%, 0, 0)' }),\n            animate('{{animationDuration}} cubic-bezier(0.35, 0, 0.25, 1)')\n        ])\n    ])\n};\n","// todo пока не делаем, перенесено из материала, но у нас в доках таких простых списков нет.\nimport {\n    AfterContentInit, ChangeDetectionStrategy, Component, ContentChildren, Directive, ElementRef, QueryList,\n    ViewEncapsulation\n} from '@angular/core';\n\nimport { McLine, McLineSetter } from '@ptsecurity/mosaic/core';\n\n\nexport class McListBase {}\n\n@Component({\n    selector: 'mc-list',\n    host: { class: 'mc-list' },\n    template: '<ng-content></ng-content>',\n    styleUrls: ['./list.css'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None\n})\nexport class McList extends McListBase {}\n\n\n/**\n * Directive whose purpose is to add the mc- CSS styling to this selector.\n * @docs-private\n */\n@Directive({\n    selector: '[mc-subheader], [mcSubheader]',\n    host: { class: 'mc-subheader' }\n})\nexport class McListSubheaderCssStyler {}\n\n\n// Boilerplate for applying mixins to McListItem.\nexport class McListItemBase {}\n\n@Component({\n    selector: 'mc-list-item, a[mc-list-item]',\n    host: {\n        class: 'mc-list-item',\n        '(focus)': '_handleFocus()',\n        '(blur)': '_handleBlur()'\n    },\n    templateUrl: './list-item.html',\n    encapsulation: ViewEncapsulation.None,\n    preserveWhitespaces: false,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class McListItem extends McListItemBase implements AfterContentInit {\n    @ContentChildren(McLine) _lines: QueryList<McLine>;\n\n    private _lineSetter: McLineSetter;\n\n    constructor(private _element: ElementRef) {\n        super();\n    }\n\n    ngAfterContentInit() {\n        this._lineSetter = new McLineSetter(this._lines, this._element);\n    }\n\n    _handleFocus() {\n        this._element.nativeElement.classList.add('mc-focused');\n    }\n\n    _handleBlur() {\n        this._element.nativeElement.classList.remove('mc-focused');\n    }\n\n    _getHostElement(): HTMLElement {\n        return this._element.nativeElement;\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { A11yModule } from '@ptsecurity/cdk/a11y';\n\nimport { McLineModule } from '@ptsecurity/mosaic/core';\n\nimport { McListSelection, McListOption } from './list-selection.component';\nimport { McList, McListItem, McListSubheaderCssStyler } from './list.component';\n\n\n@NgModule({\n    imports: [\n        CommonModule,\n        A11yModule,\n        McLineModule\n    ],\n    exports: [\n        McList,\n        McListSelection,\n        McListItem,\n        McListOption,\n        McListSubheaderCssStyler\n    ],\n    declarations: [\n        McList,\n        McListSelection,\n        McListItem,\n        McListOption,\n        McListSubheaderCssStyler\n    ]\n})\nexport class McListModule {}\n","import {\n    Input,\n    Attribute,\n    Component,\n    ElementRef,\n    OnDestroy,\n    ViewEncapsulation,\n    ChangeDetectionStrategy,\n    ChangeDetectorRef\n} from '@angular/core';\n\nimport { FocusMonitor } from '@ptsecurity/cdk/a11y';\nimport {\n    CanDisable, CanDisableCtor,\n    HasTabIndex, HasTabIndexCtor,\n    mixinDisabled,\n    mixinTabIndex,\n    toBoolean\n} from '@ptsecurity/mosaic/core';\n\n\nexport class McLinkBase {\n    constructor(public _elementRef: ElementRef) {\n    }\n}\n\nexport const _McLinkBase: HasTabIndexCtor & CanDisableCtor & typeof McLinkBase\n    = mixinTabIndex(mixinDisabled(McLinkBase));\n\n@Component({\n    selector: 'a.mc-link',\n    template: `<ng-content></ng-content>`,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n    exportAs: 'mcLink',\n    styleUrls: ['./link.css'],\n    inputs: ['disabled'],\n    host: {\n        '[attr.disabled]': 'disabled || null',\n        '[attr.tabindex]': 'tabIndex'\n    }\n})\n\nexport class McLink extends _McLinkBase implements OnDestroy, HasTabIndex, CanDisable {\n\n    @Input()\n    get disabled() {\n        return this._disabled;\n    }\n\n    set disabled(value: any) {\n        const newValue = toBoolean(value);\n\n        if (newValue !== this._disabled) {\n            this._disabled = newValue;\n            this._changeDetector.markForCheck();\n        }\n    }\n\n    private _disabled = false;\n\n    constructor(\n        @Attribute('tabindex') tabIndex: string,\n        public elementRef: ElementRef,\n        private _focusMonitor: FocusMonitor,\n        private _changeDetector: ChangeDetectorRef) {\n\n        super(elementRef);\n        this._focusMonitor.monitor(elementRef.nativeElement, true);\n        this.tabIndex = parseInt(tabIndex) || 0;\n    }\n\n    ngOnDestroy() {\n        this._focusMonitor.stopMonitoring(this.elementRef.nativeElement);\n    }\n\n    focus(): void {\n        this._getHostElement().focus();\n    }\n\n    _getHostElement() {\n        return this.elementRef.nativeElement;\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { A11yModule } from '@ptsecurity/cdk/a11y';\n\nimport { McLink } from './link.component';\n\n\n@NgModule({\n    imports: [\n        CommonModule,\n        A11yModule\n    ],\n    declarations: [McLink],\n    exports: [McLink]\n})\nexport class McLinkModule {}\n","import { Injectable, Optional, SkipSelf } from '@angular/core';\nimport { Subject, Subscription } from 'rxjs';\n\nimport { McModalRef } from './modal-ref.class';\n\n\ninterface IRegisteredMeta {\n    modalRef: McModalRef;\n    afterOpenSubscription: Subscription;\n    afterCloseSubscription: Subscription;\n}\n\n@Injectable()\nexport class McModalControlService {\n\n    // Track singleton afterAllClose through over the injection tree\n    get afterAllClose(): Subject<void> {\n        return this.parentService ? this.parentService.afterAllClose : this.rootAfterAllClose!;\n    }\n\n    // Track singleton openModals array through over the injection tree\n    get openModals(): McModalRef[] {\n        return this.parentService ? this.parentService.openModals : this.rootOpenModals!;\n    }\n\n    // @ts-ignore\n    private rootOpenModals: McModalRef[] = this.parentService ? null : [];\n    // @ts-ignore\n    private rootAfterAllClose: Subject<void> = this.parentService ? null : new Subject<void>();\n    // @ts-ignore\n    private rootRegisteredMetaMap: Map<McModalRef, IRegisteredMeta> = this.parentService ? null : new Map();\n\n    // Registered modal for later usage\n    private get registeredMetaMap(): Map<McModalRef, IRegisteredMeta> {\n        return this.parentService ? this.parentService.registeredMetaMap : this.rootRegisteredMetaMap;\n    }\n\n    constructor(\n        @Optional() @SkipSelf() private parentService: McModalControlService) {\n    }\n\n    // Register a modal to listen its open/close\n    registerModal(modalRef: McModalRef): void {\n        if (!this.hasRegistered(modalRef)) {\n            const afterOpenSubscription = modalRef.afterOpen.subscribe(() => this.openModals.push(modalRef));\n            const afterCloseSubscription = modalRef.afterClose.subscribe(() => this.removeOpenModal(modalRef));\n\n            this.registeredMetaMap.set(modalRef, {modalRef, afterOpenSubscription, afterCloseSubscription});\n        }\n    }\n\n    hasRegistered(modalRef: McModalRef): boolean {\n        return this.registeredMetaMap.has(modalRef);\n    }\n\n    // Close all registered opened modals\n    closeAll(): void {\n        let i = this.openModals.length;\n\n        while (i--) {\n            this.openModals[i].close();\n        }\n    }\n\n    private removeOpenModal(modalRef: McModalRef): void {\n        const index = this.openModals.indexOf(modalRef);\n\n        if (index > -1) {\n            this.openModals.splice(index, 1);\n\n            if (!this.openModals.length) {\n                this.afterAllClose.next();\n            }\n        }\n    }\n}\n","import { Observable } from 'rxjs';\n\nimport { McModalComponent } from './modal.component';\n\n\n/**\n * API class that public to users to handle the modal instance.\n * McModalRef is aim to avoid accessing to the modal instance directly by users.\n */\nexport abstract class McModalRef<T = any, R = any> {\n    abstract afterOpen: Observable<void>;\n    abstract afterClose: Observable<R>;\n\n    abstract open(): void;\n\n    abstract close(result?: R): void;\n\n    abstract destroy(result?: R): void;\n\n    /**\n     * Trigger the mcOnOk/mcOnCancel by manual\n     */\n    abstract triggerOk(): void;\n\n    abstract triggerCancel(): void;\n\n    // /**\n    //  * Return the ComponentRef of mcContent when specify mcContent as a Component\n    //  * Note: this method may return undefined if the Component has not ready yet.\n    //    (it only available after Modal's ngOnInit)\n    //  */\n    // abstract getContentComponentRef(): ComponentRef<{}>;\n\n    /**\n     * Return the component instance of mcContent when specify mcContent as a Component\n     * Note: this method may return undefined if the Component has not ready yet.\n     * (it only available after Modal's ngOnInit)\n     */\n    abstract getContentComponent(): T;\n\n    /**\n     * Get the dom element of this Modal\n     */\n    abstract getElement(): HTMLElement;\n\n    /**\n     * Get the instance of the Modal itself\n     */\n    abstract getInstance(): McModalComponent;\n}\n","export interface IClickPosition {\n    x: number;\n    y: number;\n}\n\nexport class ModalUtil {\n    private lastPosition: IClickPosition;\n\n    constructor(private document: Document) {\n        this.lastPosition = {x: -1, y: -1};\n        this.listenDocumentClick();\n    }\n\n    getLastClickPosition(): IClickPosition {\n        return this.lastPosition;\n    }\n\n    listenDocumentClick(): void {\n        this.document.addEventListener('click', (event: MouseEvent) => {\n            this.lastPosition = {x: event.clientX, y: event.clientY};\n        });\n    }\n}\n\nexport default new ModalUtil(document);\n","import { DOCUMENT } from '@angular/common';\nimport {\n    AfterViewInit, ChangeDetectionStrategy, ChangeDetectorRef,\n    Component,\n    ComponentFactoryResolver,\n    ComponentRef,\n    ElementRef,\n    EventEmitter,\n    Inject,\n    Injector,\n    Input,\n    OnChanges,\n    OnDestroy,\n    OnInit,\n    Output,\n    Renderer2,\n    SimpleChanges,\n    TemplateRef,\n    Type,\n    ViewChild,\n    ViewContainerRef, ViewEncapsulation\n} from '@angular/core';\nimport { ESCAPE } from '@ptsecurity/cdk/keycodes';\nimport { Overlay, OverlayRef } from '@ptsecurity/cdk/overlay';\nimport { McMeasureScrollbarService } from '@ptsecurity/mosaic/core';\nimport { Observable } from 'rxjs';\n\nimport { McModalControlService } from './modal-control.service';\nimport { McModalRef } from './modal-ref.class';\n// tslint:disable-next-line\nimport ModalUtil from './modal-util';\nimport { IModalButtonOptions, IModalOptions, ModalType, OnClickCallback } from './modal.type';\n\n\n// Duration when perform animations (ms)\nexport const MODAL_ANIMATE_DURATION = 200;\n\ntype AnimationState = 'enter' | 'leave' | null;\n\n@Component({\n    selector: 'mc-modal',\n    templateUrl: './modal.component.html',\n    styleUrls: ['./modal.css'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n    host: {\n        '(keydown)': 'onKeyDown($event)'\n    }\n})\nexport class McModalComponent<T = any, R = any> extends McModalRef<T, R>\n    implements OnInit, OnChanges, AfterViewInit, OnDestroy, IModalOptions {\n\n    // tslint:disable-next-line:no-any\n    @Input() mcModalType: ModalType = 'default';\n    // If not specified, will use <ng-content>\n    @Input() mcContent: string | TemplateRef<{}> | Type<T>;\n    // available when mcContent is a component\n    @Input() mcComponentParams: T;\n    // Default Modal ONLY\n    @Input() mcFooter: string | TemplateRef<{}> | IModalButtonOptions<T>[];\n\n    @Input()\n    get mcVisible() { return this._mcVisible; }\n    set mcVisible(value) { this._mcVisible = value; }\n\n    _mcVisible = false;\n\n    @Output() mcVisibleChange = new EventEmitter<boolean>();\n\n    @Input() mcZIndex: number = 1000;\n    @Input() mcWidth: number | string = 480;\n    @Input() mcWrapClassName: string;\n    @Input() mcClassName: string;\n    @Input() mcStyle: object;\n    @Input() mcTitle: string | TemplateRef<{}>;\n    @Input() mcCloseByESC: boolean = true;\n\n    @Input()\n    get mcClosable() { return this._mcClosable; }\n    set mcClosable(value) { this._mcClosable = value; }\n    _mcClosable = true;\n\n    @Input()\n    get mcMask() { return this._mcMask; }\n    set mcMask(value) { this._mcMask = value; }\n    _mcMask = true;\n\n    @Input()\n    get mcMaskClosable() { return this._mcMaskClosable; }\n    set mcMaskClosable(value) { this._mcMaskClosable = value; }\n    _mcMaskClosable = true;\n\n    @Input() mcMaskStyle: object;\n    @Input() mcBodyStyle: object;\n\n    // Trigger when modal open(visible) after animations\n    @Output() mcAfterOpen = new EventEmitter<void>();\n    // Trigger when modal leave-animation over\n    @Output() mcAfterClose = new EventEmitter<R>();\n\n    // --- Predefined OK & Cancel buttons\n    @Input() mcOkText: string;\n    @Input() mcOkType = 'primary';\n\n    @Input()\n    get mcOkLoading() { return this._mcOkLoading; }\n    set mcOkLoading(value) { this._mcOkLoading = value; }\n    _mcOkLoading = false;\n\n    @Input() @Output() mcOnOk: EventEmitter<T> | OnClickCallback<T> = new EventEmitter<T>();\n    @Input() mcCancelText: string;\n\n    @Input()\n    get mcCancelLoading() { return this._mcCancelLoading; }\n    set mcCancelLoading(value) { this._mcCancelLoading = value; }\n    _mcCancelLoading = false;\n\n    @Input() @Output() mcOnCancel: EventEmitter<T> | OnClickCallback<T> = new EventEmitter<T>();\n\n    @ViewChild('modalContainer') modalContainer: ElementRef;\n    @ViewChild('bodyContainer', { read: ViewContainerRef }) bodyContainer: ViewContainerRef;\n    // Only aim to focus the ok button that needs to be auto focused\n    @ViewChild('autoFocusButtonOk', { read: ElementRef }) autoFocusButtonOk: ElementRef;\n\n    maskAnimationClassMap: object;\n    modalAnimationClassMap: object;\n    // The origin point that animation based on\n    transformOrigin = '0px 0px 0px';\n\n    // Observable alias for mcAfterOpen\n    get afterOpen(): Observable<void> {\n        return this.mcAfterOpen.asObservable();\n    }\n\n    // Observable alias for mcAfterClose\n    get afterClose(): Observable<R> {\n        return this.mcAfterClose.asObservable();\n    }\n\n    get okText(): string {\n        return this.mcOkText;\n    }\n\n    get cancelText(): string {\n        return this.mcCancelText;\n    }\n\n    // Indicate whether this dialog should hidden\n    get hidden(): boolean {\n        return !this.mcVisible && !this.animationState;\n    }\n\n    // Handle the reference when using mcContent as Component\n    private contentComponentRef: ComponentRef<T>;\n    // Current animation state\n    private animationState: AnimationState;\n    private container: HTMLElement | OverlayRef;\n\n    constructor(\n        private overlay: Overlay,\n        private renderer: Renderer2,\n        private cfr: ComponentFactoryResolver,\n        private elementRef: ElementRef,\n        private viewContainer: ViewContainerRef,\n        private mcMeasureScrollbarService: McMeasureScrollbarService,\n        private modalControl: McModalControlService,\n        private changeDetector: ChangeDetectorRef,\n        @Inject(DOCUMENT) private document: any) {\n\n        super();\n    }\n\n    @Input() mcGetContainer: HTMLElement | OverlayRef | (() => HTMLElement | OverlayRef) = () => this.overlay.create();\n\n    ngOnInit() {\n\n        // Create component along without View\n        if (this.isComponent(this.mcContent)) {\n            this.createDynamicComponent(this.mcContent as Type<T>);\n        }\n\n        // Setup default button options\n        if (this.isModalButtons(this.mcFooter)) {\n            this.mcFooter = this.formatModalButtons(this.mcFooter as IModalButtonOptions<T>[]);\n        }\n\n        // Place the modal dom to elsewhere\n        this.container = typeof this.mcGetContainer === 'function' ? this.mcGetContainer() : this.mcGetContainer;\n        if (this.container instanceof HTMLElement) {\n            this.container.appendChild(this.elementRef.nativeElement);\n        } else if (this.container instanceof OverlayRef) {\n            // NOTE: only attach the dom to overlay, the view container is not changed actually\n            this.container.overlayElement.appendChild(this.elementRef.nativeElement);\n        }\n\n        // Register modal when afterOpen/afterClose is stable\n        this.modalControl.registerModal(this);\n    }\n\n    // [NOTE] NOT available when using by service!\n    // Because ngOnChanges never be called when using by service,\n    // here we can't support \"mcContent\"(Component) etc. as inputs that initialized dynamically.\n    // BUT: User also can change \"mcContent\" dynamically to trigger UI changes\n    // (provided you don't use \bComponent that needs initializations)\n    ngOnChanges(changes: SimpleChanges) {\n        if (changes.mcVisible) {\n            // Do not trigger animation while initializing\n            this.handleVisibleStateChange(this.mcVisible, !changes.mcVisible.firstChange);\n        }\n    }\n\n    ngAfterViewInit() {\n        // If using Component, it is the time to attach View while bodyContainer is ready\n        if (this.contentComponentRef) {\n            this.bodyContainer.insert(this.contentComponentRef.hostView);\n        }\n\n        if (this.autoFocusButtonOk) {\n            (this.autoFocusButtonOk.nativeElement as HTMLButtonElement).focus();\n        }\n    }\n\n    ngOnDestroy() {\n        if (this.container instanceof OverlayRef) {\n            this.container.dispose();\n        }\n    }\n\n    open() {\n        this.changeVisibleFromInside(true);\n    }\n\n    close(result?: R) {\n        this.changeVisibleFromInside(false, result);\n    }\n\n    // Destroy equals Close\n    destroy(result?: R) {\n        this.close(result);\n    }\n\n    triggerOk() {\n        this.onClickOkCancel('ok');\n    }\n\n    triggerCancel() {\n        this.onClickOkCancel('cancel');\n    }\n\n    getInstance(): McModalComponent {\n        return this;\n    }\n\n    getContentComponentRef(): ComponentRef<T> {\n        return this.contentComponentRef;\n    }\n\n    getContentComponent(): T {\n        return this.contentComponentRef && this.contentComponentRef.instance;\n    }\n\n    getElement(): HTMLElement {\n        return this.elementRef && this.elementRef.nativeElement;\n    }\n\n    onClickMask($event: MouseEvent) {\n        if (\n            this.mcMask &&\n            this.mcMaskClosable &&\n            ($event.target as HTMLElement).classList.contains('mc-modal-wrap') &&\n            this.mcVisible\n        ) {\n            this.onClickOkCancel('cancel');\n        }\n    }\n\n    // tslint:disable-next-line\n    isModalType(type: ModalType): boolean {\n        return this.mcModalType === type;\n    }\n\n    onKeyDown(event: KeyboardEvent): void {\n\n        if (event.keyCode === ESCAPE && this.container && (this.container instanceof OverlayRef)) {\n\n            this.close();\n            event.preventDefault();\n        }\n    }\n\n    // AoT\n    onClickCloseBtn() {\n        if (this.mcVisible) {\n            this.onClickOkCancel('cancel');\n        }\n    }\n\n    // AoT\n    // tslint:disable-next-line\n    onClickOkCancel(type: 'ok' | 'cancel') {\n        const trigger = { ok: this.mcOnOk, cancel: this.mcOnCancel }[type];\n        const loadingKey = { ok: 'mcOkLoading', cancel: 'mcCancelLoading' }[type];\n\n        if (trigger instanceof EventEmitter) {\n            trigger.emit(this.getContentComponent());\n        } else if (typeof trigger === 'function') {\n\n            const result = trigger(this.getContentComponent());\n            // Users can return \"false\" to prevent closing by default\n            const caseClose = (doClose: boolean | void | {}) => (doClose !== false) && this.close(doClose as R);\n\n            if (isPromise(result)) {\n                this[loadingKey] = true;\n                const handleThen = (doClose) => {\n                    this[loadingKey] = false;\n                    caseClose(doClose);\n                };\n                (result as Promise<void>).then(handleThen).catch(handleThen);\n            } else {\n                caseClose(result);\n            }\n        }\n    }\n\n    // AoT\n    isNonEmptyString(value: {}): boolean {\n        return typeof value === 'string' && value !== '';\n    }\n\n    // AoT\n    isTemplateRef(value: {}): boolean {\n        return value instanceof TemplateRef;\n    }\n\n    // AoT\n    isComponent(value: {}): boolean {\n        return value instanceof Type;\n    }\n\n    // AoT\n    isModalButtons(value: {}): boolean {\n        return Array.isArray(value) && value.length > 0;\n    }\n\n    // Do rest things when visible state changed\n    private handleVisibleStateChange(visible: boolean, animation: boolean = true, closeResult?: R): Promise<any> {\n        // Hide scrollbar at the first time when shown up\n        if (visible) {\n            this.changeBodyOverflow(1);\n        }\n\n        return Promise\n            .resolve(animation && this.animateTo(visible))\n            // Emit open/close event after animations over\n            .then(() => {\n                if (visible) {\n                    this.mcAfterOpen.emit();\n                } else {\n                    this.mcAfterClose.emit(closeResult);\n                    // Show/hide scrollbar when animation is over\n                    this.changeBodyOverflow();\n                }\n            });\n    }\n\n    // Lookup a button's property, if the prop is a function, call & then return the result, otherwise, return itself.\n    // AoT\n    // tslint:disable-next-line\n    getButtonCallableProp(options: IModalButtonOptions<T>, prop: string): {} {\n        const value = options[prop];\n        const args: any[] = [];\n        if (this.contentComponentRef) {\n            args.push(this.contentComponentRef.instance);\n        }\n\n        return typeof value === 'function' ? value.apply(options, args) : value;\n    }\n\n    // On mcFooter's modal button click\n    // AoT\n    // tslint:disable-next-line\n    onButtonClick(button: IModalButtonOptions<T>) {\n        // Call onClick directly\n        const result = this.getButtonCallableProp(button, 'onClick');\n        if (isPromise(result)) {\n            button.loading = true;\n            (result as Promise<{}>).then(() => button.loading = false).catch(() => button.loading = false);\n        }\n    }\n\n    // Change mcVisible from inside\n    private changeVisibleFromInside(visible: boolean, closeResult?: R): Promise<void> {\n        if (this.mcVisible !== visible) {\n            // Change mcVisible value immediately\n            this.mcVisible = visible;\n            this.mcVisibleChange.emit(visible);\n\n            return this.handleVisibleStateChange(visible, true, closeResult);\n        }\n\n        return Promise.resolve();\n    }\n\n    private changeAnimationState(state: AnimationState) {\n        this.animationState = state;\n        if (state) {\n            this.maskAnimationClassMap = {\n                [`fade-${state}`]: true,\n                [`fade-${state}-active`]: true\n            };\n            this.modalAnimationClassMap = {\n                [`zoom-${state}`]: true,\n                [`zoom-${state}-active`]: true\n            };\n        } else {\n            // @ts-ignore\n            this.maskAnimationClassMap = this.modalAnimationClassMap = null;\n        }\n\n        if (this.contentComponentRef) {\n            this.contentComponentRef.changeDetectorRef.markForCheck();\n        } else {\n            this.changeDetector.markForCheck();\n        }\n    }\n\n    private animateTo(isVisible: boolean): Promise<any> {\n        // Figure out the lastest click position when shows up\n        if (isVisible) {\n            // [NOTE] Using timeout due to the document.click event is fired later than visible change,\n            // so if not postponed to next event-loop, we can't get the lastest click position\n            window.setTimeout(() => this.updateTransformOrigin());\n        }\n\n        this.changeAnimationState(isVisible ? 'enter' : 'leave');\n\n        // Return when animation is over\n        return new Promise((resolve) => window.setTimeout(() => {\n            this.changeAnimationState(null);\n            resolve();\n        }, MODAL_ANIMATE_DURATION));\n    }\n\n    private formatModalButtons(buttons: IModalButtonOptions<T>[]): IModalButtonOptions<T>[] {\n        return buttons.map((button) => {\n\n            return {\n                ...{\n                    type: 'default',\n                    size: 'default',\n                    autoLoading: true,\n                    show: true,\n                    loading: false,\n                    disabled: false\n                },\n                ...button\n            };\n        });\n    }\n\n    /**\n     * Create a component dynamically but not attach to any View\n     * (this action will be executed when bodyContainer is ready)\n     * @param component Component class\n     */\n    private createDynamicComponent(component: Type<T>) {\n        const factory = this.cfr.resolveComponentFactory(component);\n        const childInjector = Injector.create({\n            providers: [{provide: McModalRef, useValue: this}],\n            parent: this.viewContainer.parentInjector\n        });\n\n        this.contentComponentRef = factory.create(childInjector);\n\n        if (this.mcComponentParams) {\n            Object.assign(this.contentComponentRef.instance, this.mcComponentParams);\n        }\n\n        // Do the first change detection immediately\n        // (or we do detection at ngAfterViewInit, multi-changes error will be thrown)\n        this.contentComponentRef.changeDetectorRef.detectChanges();\n\n\n    }\n\n    // Update transform-origin to the last click position on document\n    private updateTransformOrigin() {\n        const modalElement = this.modalContainer.nativeElement as HTMLElement;\n        const lastPosition = ModalUtil.getLastClickPosition();\n\n        if (lastPosition) {\n            // tslint:disable-next-line\n            this.transformOrigin = `${lastPosition.x - modalElement.offsetLeft}px ${lastPosition.y - modalElement.offsetTop}px 0px`;\n        }\n    }\n\n    /**\n     * Take care of the body's overflow to decide the existense of scrollbar\n     * @param plusNum The number that the openModals.length will increase soon\n     */\n    private changeBodyOverflow(plusNum: number = 0) {\n        const openModals = this.modalControl.openModals;\n\n        if (openModals.length + plusNum > 0) {\n            // tslint:disable-next-line\n            this.renderer.setStyle(this.document.body, 'padding-right', `${this.mcMeasureScrollbarService.scrollBarWidth}px`);\n            this.renderer.setStyle(this.document.body, 'overflow', 'hidden');\n        } else {\n            this.renderer.removeStyle(this.document.body, 'padding-right');\n            this.renderer.removeStyle(this.document.body, 'overflow');\n        }\n    }\n}\n\n////////////\n\nfunction isPromise(obj: {} | void): boolean {\n    // tslint:disable-next-line\n    return !!obj && (typeof obj === 'object' || typeof obj === 'function') && typeof (obj as Promise<{}>).then === 'function' && typeof (obj as Promise<{}>).catch === 'function';\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n\n@Pipe({\n    name: 'toCssUnit'\n})\nexport class CssUnitPipe implements PipeTransform {\n    transform(value: number | string, defaultUnit: string = 'px'): string {\n        const formatted = +value;\n\n        return isNaN(formatted) ? `${value}` : `${formatted}${defaultUnit}`;\n    }\n}\n","import { ComponentRef, Injectable } from '@angular/core';\n\nimport { Observable } from 'rxjs';\nimport { filter } from 'rxjs/operators';\n\nimport { ESCAPE } from '@ptsecurity/cdk/keycodes';\nimport { Overlay, OverlayRef } from '@ptsecurity/cdk/overlay';\nimport { ComponentPortal } from '@ptsecurity/cdk/portal';\n\nimport { McModalControlService } from './modal-control.service';\nimport { McModalRef } from './modal-ref.class';\nimport { McModalComponent } from './modal.component';\nimport { ConfirmType, IModalOptions, IModalOptionsForService } from './modal.type';\n\n\n// A builder used for managing service creating modals\nexport class ModalBuilderForService {\n\n    // Modal ComponentRef, \"null\" means it has been destroyed\n    private modalRef: ComponentRef<McModalComponent> | null;\n    private overlayRef: OverlayRef;\n\n    constructor(private overlay: Overlay, options: IModalOptionsForService = {}) {\n        this.createModal();\n\n        if (!('mcGetContainer' in options)) {\n            options.mcGetContainer = undefined;\n        }\n\n        this.changeProps(options);\n        this.modalRef!.instance.open();\n        this.modalRef!.instance.mcAfterClose.subscribe(() => this.destroyModal());\n\n        this.overlayRef.keydownEvents()\n            // @ts-ignore\n            .pipe(filter((event: KeyboardEvent) => {\n                return event.keyCode === ESCAPE && options.mcCloseByESC;\n            }))\n            .subscribe(() => this.modalRef!.instance.close());\n    }\n\n    getInstance(): McModalComponent | null {\n        return this.modalRef && this.modalRef.instance;\n    }\n\n    destroyModal(): void {\n        if (this.modalRef) {\n            this.overlayRef.dispose();\n            this.modalRef = null;\n        }\n    }\n\n    private changeProps(options: IModalOptions): void {\n        if (this.modalRef) {\n            // here not limit user's inputs at runtime\n            Object.assign(this.modalRef.instance, options);\n        }\n    }\n\n    // Create component to ApplicationRef\n    private createModal(): void {\n        this.overlayRef = this.overlay.create();\n        this.modalRef = this.overlayRef.attach(new ComponentPortal(McModalComponent));\n    }\n}\n\n@Injectable()\nexport class McModalService {\n    // Track of the current close modals (we assume invisible is close this time)\n    get openModals(): McModalRef[] {\n        return this.modalControl.openModals;\n    }\n\n    get afterAllClose(): Observable<void> {\n        return this.modalControl.afterAllClose.asObservable();\n    }\n\n    constructor(\n        private overlay: Overlay,\n        private modalControl: McModalControlService) {\n    }\n\n    // Closes all of the currently-open dialogs\n    closeAll(): void {\n        this.modalControl.closeAll();\n    }\n\n    create<T>(options: IModalOptionsForService<T> = {}): McModalRef<T> {\n\n        if (typeof options.mcOnCancel !== 'function') {\n            // Leave a empty function to close this modal by default\n            // tslint:disable-next-line\n            options.mcOnCancel = () => {};\n        }\n\n        if (!('mcCloseByESC' in options)) {\n            options.mcCloseByESC = true;\n        }\n\n\n        if (!('mcWidth' in options)) {\n            // tslint:disable-next-line\n            options.mcWidth = 480;\n        }\n\n        return new ModalBuilderForService(this.overlay, options).getInstance()!;\n    }\n\n    confirm<T>(options: IModalOptionsForService<T> = {}, confirmType: ConfirmType = 'confirm'): McModalRef<T> {\n        if ('mcFooter' in options) {\n            console.warn(`The Confirm-Modal doesn't support \"mcFooter\", this property will be ignored.`);\n        }\n\n        // NOTE: only support function currently by calling confirm()\n        if (typeof options.mcOnOk !== 'function') {\n            // Leave a empty function to close this modal by default\n            // tslint:disable-next-line\n            options.mcOnOk = () => {};\n        }\n\n        options.mcModalType = 'confirm';\n        options.mcClassName = `mc-confirm mc-confirm-${confirmType} ${options.mcClassName || ''}`;\n        options.mcMaskClosable = false;\n\n        return this.create(options);\n    }\n\n    success<T>(options: IModalOptionsForService<T> = {}): McModalRef<T> {\n        return this.simpleConfirm(options, 'success');\n    }\n\n    delete<T>(options: IModalOptionsForService<T> = {}): McModalRef<T> {\n        return this.simpleConfirm(options, 'warn');\n    }\n\n    private simpleConfirm<T>(options: IModalOptionsForService<T> = {}, confirmType: ConfirmType): McModalRef<T> {\n        // Remove the Cancel button if the user not specify a Cancel button\n        if (!('mcCancelText' in options)) {\n            // @ts-ignore\n            options.mcCancelText = null;\n        }\n\n        return this.confirm(options, confirmType);\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { OverlayModule } from '@ptsecurity/cdk/overlay';\nimport { McButtonModule } from '@ptsecurity/mosaic/button';\nimport { McIconModule } from '@ptsecurity/mosaic/icon';\n\nimport { CssUnitPipe } from './css-unit.pipe';\nimport { McModalControlService } from './modal-control.service';\nimport { McModalComponent } from './modal.component';\nimport { McModalService } from './modal.service';\n\n\n@NgModule({\n    imports: [ CommonModule, OverlayModule, McButtonModule, McIconModule ],\n    exports: [ McModalComponent ],\n    declarations: [ McModalComponent, CssUnitPipe ],\n    entryComponents: [ McModalComponent ],\n    providers: [ McModalControlService, McModalService ]\n})\nexport class McModalModule { }\n","import { DOCUMENT } from '@angular/common';\nimport {\n    ChangeDetectionStrategy,\n    Component,\n    ElementRef,\n    OnDestroy,\n    ViewEncapsulation,\n    Inject,\n    Optional\n} from '@angular/core';\nimport { IFocusableOption, FocusMonitor, FocusOrigin } from '@ptsecurity/cdk/a11y';\nimport {\n    CanDisable, CanDisableCtor,\n    mixinDisabled\n} from '@ptsecurity/mosaic/core';\n\nimport { MC_DROPDOWN_PANEL, McDropdownPanel } from './dropdown-panel';\n\n\n// Boilerplate for applying mixins to McDropdownItem.\n/** @docs-private */\nexport class McDropdownItemBase {}\nexport const _McDropdownItemMixinBase: CanDisableCtor & typeof McDropdownItemBase =\n    mixinDisabled(McDropdownItemBase);\n\n/**\n * This directive is intended to be used inside an mc-dropdown tag.\n * It exists mostly to set the role attribute.\n */\n@Component({\n    selector: 'mc-dropdown-item, [mc-dropdown-item]',\n    exportAs: 'mcDropdownItem',\n    inputs: ['disabled'],\n    host: {\n        role: 'dropdown-item',\n        class: 'mc-dropdown__item',\n        '[attr.tabindex]': '_getTabIndex()',\n        '[attr.disabled]': 'disabled || null',\n        '(click)': '_checkDisabled($event)'\n    },\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n    template: `<ng-content></ng-content>`\n})\nexport class McDropdownItem extends _McDropdownItemMixinBase\n    implements IFocusableOption, CanDisable, OnDestroy {\n\n    private _document: Document;\n\n    constructor(\n        private _elementRef: ElementRef<HTMLElement>,\n        @Inject(DOCUMENT) document: any,\n        private _focusMonitor: FocusMonitor,\n        @Inject(MC_DROPDOWN_PANEL) @Optional() private _parentDropdownPanel?: McDropdownPanel<McDropdownItem>) {\n        super();\n\n        if (_focusMonitor) {\n            // Start monitoring the element so it gets the appropriate focused classes. We want\n            // to show the focus style for dropdown items only when the focus was not caused by a\n            // mouse or touch interaction.\n            _focusMonitor.monitor(this._elementRef.nativeElement, false);\n        }\n\n        if (_parentDropdownPanel && _parentDropdownPanel.addItem) {\n            _parentDropdownPanel.addItem(this);\n        }\n\n        this._document = document;\n    }\n\n    /** Focuses the dropdown item. */\n    focus(origin: FocusOrigin = 'program'): void {\n        if (this._focusMonitor) {\n            this._focusMonitor.focusVia(this._getHostElement(), origin);\n        } else {\n            this._getHostElement().focus();\n        }\n    }\n\n    ngOnDestroy() {\n        if (this._focusMonitor) {\n            this._focusMonitor.stopMonitoring(this._elementRef.nativeElement);\n        }\n\n        if (this._parentDropdownPanel && this._parentDropdownPanel.removeItem) {\n            this._parentDropdownPanel.removeItem(this);\n        }\n    }\n\n    /** Used to set the `tabindex`. */\n    _getTabIndex(): string {\n        return this.disabled ? '-1' : '0';\n    }\n\n    /** Returns the host DOM element. */\n    _getHostElement(): HTMLElement {\n        return this._elementRef.nativeElement;\n    }\n\n    /** Prevents the default element actions if it is disabled. */\n    _checkDisabled(event: Event): void {\n        if (this.disabled) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n    }\n\n    /** Gets the label to be used when determining whether the option should be focused. */\n    getLabel(): string {\n        const element: HTMLElement = this._elementRef.nativeElement;\n        // tslint:disable-next-line:no-magic-numbers\n        const textNodeType = this._document ? this._document.TEXT_NODE : 3;\n        let output = '';\n\n        if (element.childNodes) {\n            const length = element.childNodes.length;\n\n            // Go through all the top-level text nodes and extract their text.\n            // We skip anything that's not a text node to prevent the text from\n            // being thrown off by something like an icon.\n            for (let i = 0; i < length; i++) {\n                if (element.childNodes[i].nodeType === textNodeType) {\n                    output += element.childNodes[i].textContent;\n                }\n            }\n        }\n\n        return output.trim();\n    }\n}\n","import {\n    trigger,\n    state,\n    style,\n    animate,\n    transition,\n    query,\n    group,\n    AnimationTriggerMetadata\n} from '@angular/animations';\n\n\n/**\n * Animations used by the mc-dropdown component.\n * Animation duration and timing values are based on:\n * https://material.io/guidelines/components/menus.html#menus-usage\n * @docs-private\n */\nexport const mcDropdownAnimations: {\n    readonly transformDropdown: AnimationTriggerMetadata;\n    readonly fadeInItems: AnimationTriggerMetadata;\n} = {\n    /**\n     * This animation controls the dropdown panel's entry and exit from the page.\n     *\n     * When the dropdown panel is added to the DOM, it scales in and fades in its border.\n     *\n     * When the dropdown panel is removed from the DOM, it simply fades out after a brief\n     * delay to display the ripple.\n     */\n    transformDropdown: trigger('transformDropdown', [\n        state('void', style({\n            opacity: 0,\n            transform: 'scale(0.8)'\n        })),\n        transition('void => enter', group([\n            query('.mc-dropdown__content', animate('50ms linear', style({opacity: 1}))),\n            animate('50ms cubic-bezier(0, 0, 0.2, 1)', style({transform: 'scale(1)'}))\n        ])),\n        transition('* => void', animate('50ms 25ms linear', style({opacity: 0})))\n    ]),\n\n\n    /**\n     * This animation fades in the background color and content of the dropdown panel\n     * after its containing element is scaled in.\n     */\n    fadeInItems: trigger('fadeInItems', [\n        // now. Remove next time we do breaking changes.\n        state('showing', style({opacity: 1})),\n        transition('void => *', [\n            style({opacity: 0}),\n            animate('200ms 60ms cubic-bezier(0.55, 0, 0.55, 0.2)')\n        ])\n    ])\n};\n\nexport const fadeInItems = mcDropdownAnimations.fadeInItems;\n\nexport const transformDropdown = mcDropdownAnimations.transformDropdown;\n","import { AnimationEvent } from '@angular/animations';\nimport {\n    AfterContentInit,\n    ChangeDetectionStrategy,\n    Component,\n    ContentChild,\n    ContentChildren,\n    ElementRef,\n    EventEmitter,\n    Inject,\n    InjectionToken,\n    Input,\n    NgZone,\n    OnDestroy,\n    Output,\n    TemplateRef,\n    QueryList,\n    ViewChild,\n    ViewEncapsulation,\n    OnInit\n} from '@angular/core';\nimport { FocusKeyManager, FocusOrigin } from '@ptsecurity/cdk/a11y';\nimport { Direction } from '@ptsecurity/cdk/bidi';\nimport { coerceBooleanProperty } from '@ptsecurity/cdk/coercion';\nimport { ESCAPE, DOWN_ARROW, UP_ARROW } from '@ptsecurity/cdk/keycodes';\nimport { Subject, Subscription } from 'rxjs';\nimport { take } from 'rxjs/operators';\n\nimport { mcDropdownAnimations } from './dropdown-animations';\nimport { McDropdownContent } from './dropdown-content';\nimport { throwMcDropdownInvalidPositionX, throwMcDropdownInvalidPositionY } from './dropdown-errors';\nimport { McDropdownItem } from './dropdown-item';\nimport { MC_DROPDOWN_PANEL, McDropdownPanel } from './dropdown-panel';\nimport { DropdownPositionX, DropdownPositionY } from './dropdown-positions';\n\n\n/** Default `mc-dropdown` options that can be overridden. */\n// tslint:disable-next-line:interface-name\nexport interface McDropdownDefaultOptions {\n    /** The x-axis position of the dropdown. */\n    xPosition: DropdownPositionX;\n\n    /** The y-axis position of the dropdown. */\n    yPosition: DropdownPositionY;\n\n    /** Whether the dropdown should overlap the dropdown trigger. */\n    overlapTrigger: boolean;\n\n    /** Class to be applied to the dropdown's backdrop. */\n    backdropClass: string;\n\n    /** Whether the dropdown has a backdrop. */\n    hasBackdrop?: boolean;\n}\n\n/** Injection token to be used to override the default options for `mc-dropdown`. */\nexport const MC_DROPDOWN_DEFAULT_OPTIONS =\n    new InjectionToken<McDropdownDefaultOptions>('mc-dropdown-default-options', {\n        providedIn: 'root',\n        factory: MC_DROPDOWN_DEFAULT_OPTIONS_FACTORY\n    });\n\n/** @docs-private */\nexport function MC_DROPDOWN_DEFAULT_OPTIONS_FACTORY(): McDropdownDefaultOptions {\n    return {\n        overlapTrigger: false,\n        xPosition: 'after',\n        yPosition: 'below',\n        backdropClass: 'cdk-overlay-transparent-backdrop'\n    };\n}\n\n@Component({\n    selector: 'mc-dropdown',\n    templateUrl: 'dropdown.html',\n    styleUrls: ['dropdown.css'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n    exportAs: 'mcDropdown',\n    animations: [\n        mcDropdownAnimations.transformDropdown,\n        mcDropdownAnimations.fadeInItems\n    ],\n    providers: [\n        { provide: MC_DROPDOWN_PANEL, useExisting: McDropdown }\n    ]\n})\nexport class McDropdown implements AfterContentInit, McDropdownPanel<McDropdownItem>, OnInit, OnDestroy {\n\n    /** Position of the dropdown in the X axis. */\n    @Input()\n    get xPosition(): DropdownPositionX { return this._xPosition; }\n    set xPosition(value: DropdownPositionX) {\n        if (value !== 'before' && value !== 'after') {\n            throwMcDropdownInvalidPositionX();\n        }\n\n        this._xPosition = value;\n        this.setPositionClasses();\n    }\n\n    /** Position of the dropdown in the Y axis. */\n    @Input()\n    get yPosition(): DropdownPositionY { return this._yPosition; }\n    set yPosition(value: DropdownPositionY) {\n        if (value !== 'above' && value !== 'below') {\n            throwMcDropdownInvalidPositionY();\n        }\n\n        this._yPosition = value;\n        this.setPositionClasses();\n    }\n\n    /** Whether the dropdown should overlap its trigger. */\n    @Input()\n    get overlapTrigger(): boolean { return this._overlapTrigger; }\n    set overlapTrigger(value: boolean) {\n        this._overlapTrigger = coerceBooleanProperty(value);\n    }\n\n    /** Whether the dropdown has a backdrop. */\n    @Input()\n    get hasBackdrop(): boolean | undefined { return this._hasBackdrop; }\n    set hasBackdrop(value: boolean | undefined) {\n        this._hasBackdrop = coerceBooleanProperty(value);\n    }\n\n    /**\n     * This method takes classes set on the host mc-dropdown element and applies them on the\n     * dropdown template that displays in the overlay container.  Otherwise, it's difficult\n     * to style the containing dropdown from outside the component.\n     * @param classes list of class names\n     */\n    @Input('class')\n    set panelClass(classes: string) {\n        if (classes && classes.length) {\n            this._classList = classes.split(' ').reduce((obj: any, className: string) => {\n                obj[className] = true;\n\n                return obj;\n            }, {});\n\n            this._elementRef.nativeElement.className = '';\n        }\n    }\n\n    /** Config object to be passed into the dropdown's ngClass */\n    _classList: {[key: string]: boolean} = {};\n\n    /** Current state of the panel animation. */\n    _panelAnimationState: 'void' | 'enter' = 'void';\n\n    /** Emits whenever an animation on the dropdown completes. */\n    _animationDone = new Subject<AnimationEvent>();\n\n    /** Whether the dropdown is animating. */\n    _isAnimating: boolean;\n\n    /** Layout direction of the dropdown. */\n    direction: Direction;\n\n    /** Class to be added to the backdrop element. */\n    @Input() backdropClass: string = this._defaultOptions.backdropClass;\n\n    /** @docs-private */\n    @ViewChild(TemplateRef) templateRef: TemplateRef<any>;\n\n    /**\n     * List of the items inside of a dropdown.\n     */\n    @ContentChildren(McDropdownItem) items: QueryList<McDropdownItem>;\n\n    /**\n     * Dropdown content that will be rendered lazily.\n     * @docs-private\n     */\n    @ContentChild(McDropdownContent) lazyContent: McDropdownContent;\n\n    /** Event emitted when the dropdown is closed. */\n    @Output() readonly closed: EventEmitter<void | 'click' | 'keydown' | 'tab'> =\n        new EventEmitter<void | 'click' | 'keydown' | 'tab'>();\n\n    private _keyManager: FocusKeyManager<McDropdownItem>;\n    private _xPosition: DropdownPositionX = this._defaultOptions.xPosition;\n    private _yPosition: DropdownPositionY = this._defaultOptions.yPosition;\n\n    /** Dropdown items inside the current dropdown. */\n    private _items: McDropdownItem[] = [];\n\n    /** Emits whenever the amount of dropdown items changes. */\n    private _itemChanges = new Subject<McDropdownItem[]>();\n\n    /** Subscription to tab events on the dropdown panel */\n    private _tabSubscription = Subscription.EMPTY;\n    private _overlapTrigger: boolean = this._defaultOptions.overlapTrigger;\n    private _hasBackdrop: boolean | undefined = this._defaultOptions.hasBackdrop;\n\n    constructor(\n        private _elementRef: ElementRef<HTMLElement>,\n        private _ngZone: NgZone,\n        @Inject(MC_DROPDOWN_DEFAULT_OPTIONS) private _defaultOptions: McDropdownDefaultOptions) { }\n\n    ngOnInit() {\n        this.setPositionClasses();\n    }\n\n    ngAfterContentInit() {\n        this._keyManager = new FocusKeyManager<McDropdownItem>(this.items).withWrap().withTypeAhead();\n        this._tabSubscription = this._keyManager.tabOut.subscribe(() => this.closed.emit('tab'));\n    }\n\n    ngOnDestroy() {\n        this._tabSubscription.unsubscribe();\n        this.closed.complete();\n    }\n\n    /** Handle a keyboard event from the dropdown, delegating to the appropriate action. */\n    _handleKeydown(event: KeyboardEvent) {\n\n        // tslint:disable-next-line:deprecation\n        switch (event.keyCode) {\n            case ESCAPE:\n                this.closed.emit('keydown');\n                break;\n            case UP_ARROW:\n            case DOWN_ARROW:\n                this._keyManager.setFocusOrigin('keyboard');\n                this._keyManager.onKeydown(event);\n                break;\n            default:\n                // todo зачем обрабатывать лишние события ?\n                this._keyManager.onKeydown(event);\n        }\n    }\n\n    /**\n     * Focus the first item in the dropdown.\n     * @param origin Action from which the focus originated. Used to set the correct styling.\n     */\n    focusFirstItem(origin: FocusOrigin = 'program'): void {\n        // When the content is rendered lazily, it takes a bit before the items are inside the DOM.\n        if (this.lazyContent) {\n            this._ngZone.onStable.asObservable()\n                .pipe(take(1))\n                .subscribe(() => this._keyManager.setFocusOrigin(origin).setFirstItemActive());\n        } else {\n            this._keyManager.setFocusOrigin(origin).setFirstItemActive();\n        }\n    }\n\n    /**\n     * Resets the active item in the dropdown. This is used when the dropdown is opened, allowing\n     * the user to start from the first option when pressing the down arrow.\n     */\n    resetActiveItem() {\n        this._keyManager.setActiveItem(-1);\n    }\n\n    /**\n     * Registers a dropdown item with the dropdown.\n     * @docs-private\n     */\n    addItem(item: McDropdownItem) {\n        // We register the items through this method, rather than picking them up through\n        // `ContentChildren`, because we need the items to be picked up by their closest\n        // `mc-dropdown` ancestor. If we used `@ContentChildren(McDropdownItem, {descendants: true})`,\n        // all descendant items will bleed into the top-level dropdown in the case where the consumer\n        // has `mc-dropdown` instances nested inside each other.\n        if (this._items.indexOf(item) === -1) {\n            this._items.push(item);\n            this._itemChanges.next(this._items);\n        }\n    }\n\n    /**\n     * Removes an item from the dropdown.\n     * @docs-private\n     */\n    removeItem(item: McDropdownItem) {\n        const index = this._items.indexOf(item);\n\n        if (this._items.indexOf(item) > -1) {\n            this._items.splice(index, 1);\n            this._itemChanges.next(this._items);\n        }\n    }\n\n    /**\n     * Adds classes to the dropdown panel based on its position. Can be used by\n     * consumers to add specific styling based on the position.\n     * @param posX Position of the dropdown along the x axis.\n     * @param posY Position of the dropdown along the y axis.\n     * @docs-private\n     */\n    setPositionClasses(posX: DropdownPositionX = this.xPosition, posY: DropdownPositionY = this.yPosition) {\n        const classes = this._classList;\n        classes['mc-dropdown-before'] = posX === 'before';\n        classes['mc-dropdown-after'] = posX === 'after';\n        classes['mc-dropdown-above'] = posY === 'above';\n        classes['mc-dropdown-below'] = posY === 'below';\n    }\n\n    /** Starts the enter animation. */\n    _startAnimation() {\n        this._panelAnimationState = 'enter';\n    }\n\n    /** Resets the panel animation to its initial state. */\n    _resetAnimation() {\n        this._panelAnimationState = 'void';\n    }\n\n    /** Callback that is invoked when the panel animation completes. */\n    _onAnimationDone(event: AnimationEvent) {\n        this._animationDone.next(event);\n        this._isAnimating = false;\n\n        // Scroll the content element to the top once the animation is done. This is necessary, because\n        // we move focus to the first item while it's still being animated, which can throw the browser\n        // off when it determines the scroll position. Alternatively we can move focus when the\n        // animation is done, however moving focus asynchronously will interrupt screen readers\n        // which are in the process of reading out the dropdown already. We take the `element` from\n        // the `event` since we can't use a `ViewChild` to access the pane.\n        if (event.toState === 'enter' && this._keyManager.activeItemIndex === 0) {\n            event.element.scrollTop = 0;\n        }\n    }\n}\n","import {\n    AfterContentInit,\n    Directive,\n    ElementRef,\n    EventEmitter,\n    Inject,\n    InjectionToken,\n    Input,\n    OnDestroy, OnInit,\n    Optional,\n    Output,\n    ViewContainerRef\n} from '@angular/core';\nimport { FocusMonitor, FocusOrigin } from '@ptsecurity/cdk/a11y';\nimport { Direction, Directionality } from '@ptsecurity/cdk/bidi';\nimport {\n    FlexibleConnectedPositionStrategy,\n    HorizontalConnectionPos,\n    Overlay,\n    OverlayConfig,\n    OverlayRef,\n    VerticalConnectionPos,\n    IScrollStrategy\n} from '@ptsecurity/cdk/overlay';\nimport { TemplatePortal } from '@ptsecurity/cdk/portal';\nimport { merge, Subscription } from 'rxjs';\nimport { filter, take, takeUntil } from 'rxjs/operators';\n\nimport { throwMcDropdownMissingError } from './dropdown-errors';\nimport { McDropdownPanel } from './dropdown-panel';\nimport { McDropdown } from './dropdown.component';\n\n\n/** Injection token that determines the scroll handling while the dropdown is open. */\nexport const MC_DROPDOWN_SCROLL_STRATEGY =\n    new InjectionToken<() => IScrollStrategy>('mc-dropdown-scroll-strategy');\n\n/** @docs-private */\nexport function MC_DROPDOWN_SCROLL_STRATEGY_FACTORY(overlay: Overlay): () => IScrollStrategy {\n    return () => overlay.scrollStrategies.reposition();\n}\n\n/** @docs-private */\nexport const MC_DROPDOWN_SCROLL_STRATEGY_FACTORY_PROVIDER = {\n    provide: MC_DROPDOWN_SCROLL_STRATEGY,\n    deps: [Overlay],\n    useFactory: MC_DROPDOWN_SCROLL_STRATEGY_FACTORY\n};\n\n/**\n * This directive is intended to be used in conjunction with an mc-dropdown tag.  It is\n * responsible for toggling the display of the provided dropdown instance.\n */\n@Directive({\n    selector: `[mcDropdownTriggerFor]`,\n    host: {\n        '(touchstart)': '_openedBy = \"touch\"',\n        '(click)': 'toggle()'\n    },\n    exportAs: 'mcDropdownTrigger'\n})\nexport class McDropdownTrigger implements OnInit, AfterContentInit, OnDestroy {\n\n    /** Whether the dropdown is open. */\n    get opened(): boolean {\n        return this._opened;\n    }\n\n    /** The text direction of the containing app. */\n    get dir(): Direction {\n        return this._dir && this._dir.value === 'rtl' ? 'rtl' : 'ltr';\n    }\n\n    // Tracking input type is necessary so it's possible to only auto-focus\n    // the first item of the list when the dropdown is opened via the keyboard\n    _openedBy: 'mouse' | 'touch' | null = null;\n\n    /** References the dropdown instance that the trigger is associated with. */\n    @Input('mcDropdownTriggerFor') dropdown: McDropdownPanel;\n\n    /** Data to be passed along to any lazily-rendered content. */\n    @Input('mcDropdownTriggerData') data: any;\n\n    /** Event emitted when the associated dropdown is opened. */\n    @Output() readonly dropdownOpened: EventEmitter<void> = new EventEmitter<void>();\n\n    /** Event emitted when the associated dropdown is closed. */\n    @Output() readonly dropdownClosed: EventEmitter<void> = new EventEmitter<void>();\n\n    private _portal: TemplatePortal;\n    private _overlayRef: OverlayRef | null = null;\n    private _opened: boolean = false;\n    private _closeSubscription = Subscription.EMPTY;\n    private _hoverSubscription = Subscription.EMPTY;\n\n    constructor(private _overlay: Overlay,\n                private _element: ElementRef<HTMLElement>,\n                private _viewContainerRef: ViewContainerRef,\n                @Inject(MC_DROPDOWN_SCROLL_STRATEGY) private _scrollStrategy: any,\n                @Optional() private _dir: Directionality,\n                private _focusMonitor?: FocusMonitor) {}\n\n    ngOnInit(): void {\n        this.dropdown.closed = this.dropdown.closed || new EventEmitter<void | 'click' | 'keydown' | 'tab'>();\n    }\n\n    ngAfterContentInit() {\n        this._check();\n\n        this.dropdown.closed.asObservable().subscribe(() => {\n            this._destroy();\n        });\n    }\n\n    ngOnDestroy() {\n        if (this._overlayRef) {\n            this._overlayRef.dispose();\n            this._overlayRef = null;\n        }\n\n        this._cleanUpSubscriptions();\n    }\n\n    /** Toggles the dropdown between the open and closed states. */\n    toggle(): void {\n        // tslint:disable-next-line:no-void-expression\n        return this._opened ? this.close() : this.open();\n    }\n\n    /** Opens the dropdown. */\n    open(): void {\n        if (this._opened) {\n            return;\n        }\n\n        this._check();\n\n        const overlayRef = this._createOverlay();\n        this._setPosition(overlayRef.getConfig().positionStrategy as FlexibleConnectedPositionStrategy);\n        overlayRef.attach(this._portal);\n\n        if (this.dropdown.lazyContent) {\n            this.dropdown.lazyContent.attach(this.data);\n        }\n\n        this._closeSubscription = this._closingActions().subscribe(() => this.close());\n        this._init();\n\n        if (this.dropdown instanceof McDropdown) {\n            this.dropdown._startAnimation();\n        }\n    }\n\n    /** Closes the dropdown. */\n    close(): void {\n        this.dropdown.closed.emit();\n    }\n\n    /**\n     * Focuses the dropdown trigger.\n     * @param origin Source of the dropdown trigger's focus.\n     */\n    focus(origin: FocusOrigin = 'program') {\n        if (this._focusMonitor) {\n            this._focusMonitor.focusVia(this._element.nativeElement, origin);\n        } else {\n            this._element.nativeElement.focus();\n        }\n    }\n\n    /** Closes the dropdown and does the necessary cleanup. */\n    private _destroy() {\n        if (!this._overlayRef || !this.opened) {\n            return;\n        }\n\n        const dropdown = this.dropdown;\n\n        this._closeSubscription.unsubscribe();\n        this._overlayRef.detach();\n\n        if (dropdown instanceof McDropdown) {\n            dropdown._resetAnimation();\n\n            if (dropdown.lazyContent) {\n                // Wait for the exit animation to finish before detaching the content.\n                dropdown._animationDone\n                    .pipe(\n                        filter((event) => event.toState === 'void'),\n                        take(1),\n                        // Interrupt if the content got re-attached.\n                        takeUntil(dropdown.lazyContent._attached)\n                    )\n                    .subscribe(() => dropdown.lazyContent.detach(), undefined, () => {\n                        // No matter whether the content got re-attached, reset the dropdown.\n                        this._reset();\n                    });\n            } else {\n                this._reset();\n            }\n        } else {\n            this._reset();\n\n            if (dropdown.lazyContent) {\n                dropdown.lazyContent.detach();\n            }\n        }\n    }\n\n    /**\n     * This method sets the dropdown state to open and focuses the first item if\n     * the dropdown was opened via the keyboard.\n     */\n    private _init(): void {\n        this.dropdown.direction = this.dir;\n        this._setIsOpened(true);\n        this.dropdown.focusFirstItem(this._openedBy || 'program');\n    }\n\n    /**\n     * This method resets the dropdown when it's closed, most importantly restoring\n     * focus to the dropdown trigger if the dropdown was opened via the keyboard.\n     */\n    private _reset(): void {\n        this._setIsOpened(false);\n\n        // We should reset focus if the user is navigating using a keyboard or\n        // if we have a top-level trigger which might cause focus to be lost\n        // when clicking on the backdrop.\n        if (!this._openedBy) {\n            // Note that the focus style will show up both for `program` and\n            // `keyboard` so we don't have to specify which one it is.\n            this.focus();\n        } else {\n            this.focus(this._openedBy);\n        }\n\n        this._openedBy = null;\n    }\n\n    // set state rather than toggle to support triggers sharing a dropdown\n    private _setIsOpened(isOpen: boolean): void {\n        this._opened = isOpen;\n        // tslint:disable-next-line:no-void-expression\n        this._opened ? this.dropdownOpened.emit() : this.dropdownClosed.emit();\n    }\n\n    /**\n     * This method checks that a valid instance of Dropdown has been passed into\n     * mcDropdownTriggerFor. If not, an exception is thrown.\n     */\n    private _check() {\n        if (!this.dropdown) {\n            throwMcDropdownMissingError();\n        }\n    }\n\n    /**\n     * This method creates the overlay from the provided dropdown's template and saves its\n     * OverlayRef so that it can be attached to the DOM when open is called.\n     */\n    private _createOverlay(): OverlayRef {\n        if (!this._overlayRef) {\n            this._portal = new TemplatePortal(this.dropdown.templateRef, this._viewContainerRef);\n            const config = this._getOverlayConfig();\n            this._subscribeToPositions(config.positionStrategy as FlexibleConnectedPositionStrategy);\n            this._overlayRef = this._overlay.create(config);\n\n            // Consume the `keydownEvents` in order to prevent them from going to another overlay.\n            // Ideally we'd also have our keyboard event logic in here, however doing so will\n            // break anybody that may have implemented the `McDropdownPanel` themselves.\n            this._overlayRef.keydownEvents().subscribe();\n        }\n\n        return this._overlayRef;\n    }\n\n    /**\n     * This method builds the configuration object needed to create the overlay, the OverlayState.\n     * @returns OverlayConfig\n     */\n    private _getOverlayConfig(): OverlayConfig {\n        return new OverlayConfig({\n            positionStrategy: this._overlay.position()\n                .flexibleConnectedTo(this._element)\n                .withLockedPosition()\n                .withTransformOriginOn('.mc-dropdown__panel'),\n            hasBackdrop: this.dropdown.hasBackdrop === null || this.dropdown.hasBackdrop === undefined\n                ? true\n                : this.dropdown.hasBackdrop,\n            backdropClass: this.dropdown.backdropClass || 'cdk-overlay-transparent-backdrop',\n            scrollStrategy: this._scrollStrategy(),\n            direction: this._dir\n        });\n    }\n\n    /**\n     * Listens to changes in the position of the overlay and sets the correct classes\n     * on the dropdown based on the new position. This ensures the animation origin is always\n     * correct, even if a fallback position is used for the overlay.\n     */\n    private _subscribeToPositions(position: FlexibleConnectedPositionStrategy): void {\n        if (this.dropdown.setPositionClasses) {\n            // todo possibly we should not recompute positions there\n            /*position.positionChanges.subscribe((change) => {\n                const posX: DropdownPositionX = change.connectionPair.overlayX === 'start' ? 'after' : 'before';\n                const posY: DropdownPositionY = change.connectionPair.overlayY === 'top' ? 'below' : 'above';\n\n                this.dropdown.setPositionClasses!(posX, posY);\n            });*/\n            position.positionChanges.subscribe(() => {\n                this.dropdown.setPositionClasses!(this.dropdown.xPosition, this.dropdown.yPosition);\n            });\n        }\n    }\n\n    /**\n     * Sets the appropriate positions on a position strategy\n     * so the overlay connects with the trigger correctly.\n     * @param positionStrategy Strategy whose position to update.\n     */\n    private _setPosition(positionStrategy: FlexibleConnectedPositionStrategy) {\n        const [originX, originFallbackX]: HorizontalConnectionPos[] =\n            this.dropdown.xPosition === 'before' ? ['end', 'start'] : ['start', 'end'];\n\n        const [overlayY, overlayFallbackY]: VerticalConnectionPos[] =\n            this.dropdown.yPosition === 'above' ? ['bottom', 'top'] : ['top', 'bottom'];\n\n        let [originY, originFallbackY] = [overlayY, overlayFallbackY];\n        const [overlayX, overlayFallbackX] = [originX, originFallbackX];\n        const offsetY = 0;\n\n        if (!this.dropdown.overlapTrigger) {\n            originY = overlayY === 'top' ? 'bottom' : 'top';\n            originFallbackY = overlayFallbackY === 'top' ? 'bottom' : 'top';\n        }\n\n        positionStrategy.withPositions([\n            {originX, originY, overlayX, overlayY, offsetY},\n            {originX: originFallbackX, originY, overlayX: overlayFallbackX, overlayY, offsetY},\n            {\n                originX,\n                originY: originFallbackY,\n                overlayX,\n                overlayY: overlayFallbackY,\n                offsetY: -offsetY\n            },\n            {\n                originX: originFallbackX,\n                originY: originFallbackY,\n                overlayX: overlayFallbackX,\n                overlayY: overlayFallbackY,\n                offsetY: -offsetY\n            }\n        ]);\n    }\n\n    /** Cleans up the active subscriptions. */\n    private _cleanUpSubscriptions(): void {\n        this._closeSubscription.unsubscribe();\n        this._hoverSubscription.unsubscribe();\n    }\n\n    /** Returns a stream that emits whenever an action that should close the dropdown occurs. */\n    private _closingActions() {\n        const backdrop = this._overlayRef!.backdropClick();\n        const detachments = this._overlayRef!.detachments();\n\n        return merge(backdrop, detachments);\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { OverlayModule } from '@ptsecurity/cdk/overlay';\n\nimport { McDropdownContent } from './dropdown-content';\nimport { McDropdownItem } from './dropdown-item';\nimport { MC_DROPDOWN_SCROLL_STRATEGY_FACTORY_PROVIDER, McDropdownTrigger } from './dropdown-trigger';\nimport { McDropdown } from './dropdown.component';\n\n\n@NgModule({\n    imports: [\n        CommonModule,\n        OverlayModule\n    ],\n    exports: [McDropdown, McDropdownItem, McDropdownTrigger, McDropdownContent],\n    declarations: [McDropdown, McDropdownItem, McDropdownTrigger, McDropdownContent],\n    providers: [MC_DROPDOWN_SCROLL_STRATEGY_FACTORY_PROVIDER]\n})\nexport class McDropdownModule {}\n","import { Component } from '@angular/core';\n\n\n@Component({\n    selector: 'mc-content',\n    preserveWhitespaces: false,\n    templateUrl: './content.component.html',\n    styles: [\n        `:host {\n            display: block;\n        }`\n    ],\n    host: {\n        '[class.mc-layout-content]': 'true'\n    }\n})\nexport class McContentComponent {\n}\n","import { Component } from '@angular/core';\n\n\n@Component({\n    selector: 'mc-footer',\n    preserveWhitespaces: false,\n    templateUrl: './footer.component.html',\n    styles: [\n        `:host {\n            display: block;\n        }`\n    ],\n    host: {\n        '[class.mc-layout-footer]': 'true'\n    }\n})\nexport class McFooterComponent {\n}\n","import { Component } from '@angular/core';\n\n\n@Component({\n    selector : 'mc-header',\n    preserveWhitespaces: false,\n    templateUrl: './header.component.html',\n    styles: [\n        `:host {\n            display: block;\n        }`\n    ],\n    host: {\n        '[class.mc-layout-header]': 'true'\n    }\n})\nexport class McHeaderComponent {\n}\n","import { ChangeDetectionStrategy, Component, ViewEncapsulation } from '@angular/core';\n\n\n@Component({\n    selector: 'mc-layout',\n    preserveWhitespaces: false,\n    styleUrls: ['layout.css'],\n    templateUrl: './layout.component.html',\n    host: {\n        '[class.mc-layout]': 'true',\n        '[class.mc-layout-has-sidebar]': 'hasSidebar'\n    },\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class McLayoutComponent {\n    hasSidebar = false;\n}\n","import {\n    ChangeDetectionStrategy,\n    Component,\n    EventEmitter,\n    Host,\n    Input,\n    OnInit,\n    Optional,\n    Output\n} from '@angular/core';\nimport { toBoolean } from '@ptsecurity/mosaic/core';\n\nimport { McLayoutComponent } from './layout.component';\n\n\n@Component({\n    selector: 'mc-sidebar',\n    preserveWhitespaces: false,\n    templateUrl: './sidebar.component.html',\n    host: {\n        '[class.mc-layout-sidebar]': 'true',\n        '[class.mc-layout-sidebar-collapsed]': 'mcCollapsed',\n        '[style.flex]': 'mcFlex',\n        '[style.max-width.px]': 'mcWidth',\n        '[style.min-width.px]': 'mcWidth',\n        '[style.width.px]': 'mcWidth'\n    },\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class McSidebarComponent implements OnInit {\n\n    @Input() _mcWidth = 200;\n    @Input() mcCollapsedWidth = 80;\n\n    @Input()\n    set mcCollapsible(value: boolean) {\n        this.collapsible = toBoolean(value);\n    }\n\n    get mcCollapsible(): boolean {\n        return this.collapsible;\n    }\n\n    @Input()\n    set mcCollapsed(value: boolean) {\n        this.collapsed = toBoolean(value);\n    }\n\n    get mcCollapsed(): boolean {\n        return this.collapsed;\n    }\n\n    // tslint:disable-next-line\n    @Output() mcCollapsedChange = new EventEmitter();\n\n    private collapsed = false;\n    private collapsible = false;\n\n    get mcFlex(): string {\n        if (this.mcCollapsed) {\n            return `0 0 ${this.mcCollapsedWidth}px`;\n        } else {\n            return `0 0 ${this.mcWidth}px`;\n        }\n    }\n\n    get mcWidth(): number {\n        if (this.mcCollapsed) {\n            return this.mcCollapsedWidth;\n        } else {\n            return this._mcWidth;\n        }\n    }\n\n    constructor(\n        @Optional() @Host() private mcLayoutComponent: McLayoutComponent) {\n    }\n\n    ngOnInit() {\n        if (this.mcLayoutComponent) {\n            this.mcLayoutComponent.hasSidebar = true;\n        }\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { McContentComponent } from './content.component';\nimport { McFooterComponent } from './footer.component';\nimport { McHeaderComponent } from './header.component';\nimport { McLayoutComponent } from './layout.component';\nimport { McSidebarComponent } from './sidebar.component';\n\n\n@NgModule({\n    imports: [ CommonModule ],\n    exports: [\n        McLayoutComponent,\n        McContentComponent,\n        McFooterComponent,\n        McHeaderComponent,\n        McSidebarComponent\n    ],\n    declarations: [\n        McLayoutComponent,\n        McContentComponent,\n        McFooterComponent,\n        McHeaderComponent,\n        McSidebarComponent\n    ]\n})\nexport class McLayoutModule {\n}\n","import {\n    AfterContentInit,\n    Attribute,\n    ChangeDetectionStrategy,\n    Component,\n    ContentChildren,\n    ElementRef,\n    EventEmitter,\n    forwardRef,\n    Input,\n    Output,\n    QueryList,\n    ViewEncapsulation,\n    ChangeDetectorRef,\n    Inject,\n    OnDestroy,\n    OnInit,\n    ViewChild\n} from '@angular/core';\n\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\n\nimport { Subscription } from 'rxjs';\n\nimport { FocusKeyManager, IFocusableOption } from '@ptsecurity/cdk/a11y';\nimport { SelectionModel } from '@ptsecurity/cdk/collections';\nimport { END, ENTER, HOME, PAGE_DOWN, PAGE_UP, SPACE } from '@ptsecurity/cdk/keycodes';\n\nimport {\n    McLine,\n    McLineSetter,\n    CanDisable,\n    mixinDisabled,\n    toBoolean, CanDisableCtor\n} from '@ptsecurity/mosaic/core';\n\n\n/**\n * Component for list-options of selection-list. Each list-option can automatically\n * generate a checkbox and can put current item into the selectionModel of selection-list\n * if the current item is selected.\n */\n@Component({\n    exportAs: 'mcListOption',\n    selector: 'mc-list-option',\n    host: {\n        tabindex: '-1',\n\n        class: 'mc-list-option',\n        '[class.mc-selected]': 'selected',\n        '[class.mc-focused]': '_hasFocus',\n        '(focus)': '_handleFocus()',\n        '(blur)': '_handleBlur()',\n        '(click)': '_handleClick()'\n    },\n    templateUrl: 'list-option.html',\n    encapsulation: ViewEncapsulation.None,\n    preserveWhitespaces: false,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class McListOption implements AfterContentInit, OnDestroy, OnInit, IFocusableOption {\n    _hasFocus: boolean = false;\n\n    @ContentChildren(McLine) _lines: QueryList<McLine>;\n\n    @ViewChild('text') _text: ElementRef;\n\n    // Whether the label should appear before or after the checkbox. Defaults to 'after'\n    @Input() checkboxPosition: 'before' | 'after' = 'after';\n\n    @Input() value: any;\n\n    @Input()\n    get disabled() {\n        return this._disabled || (this.listSelection && this.listSelection.disabled);\n    }\n\n    set disabled(value: any) {\n        const newValue = toBoolean(value);\n\n        if (newValue !== this._disabled) {\n            this._disabled = newValue;\n            this._changeDetector.markForCheck();\n        }\n    }\n\n    @Input()\n    get selected(): boolean {\n        return this.listSelection.selectedOptions && this.listSelection.selectedOptions.isSelected(this) || false;\n    }\n\n    set selected(value: boolean) {\n        const isSelected = toBoolean(value);\n\n        if (isSelected !== this._selected) {\n            this.setSelected(isSelected);\n\n            this.listSelection._reportValueChange();\n        }\n    }\n\n    private _lineSetter: McLineSetter;\n    private _selected = false;\n    private _disabled = false;\n\n    constructor(\n        private _element: ElementRef,\n        private _changeDetector: ChangeDetectorRef,\n        @Inject(forwardRef(() => McListSelection))\n        public listSelection: McListSelection\n    ) {}\n\n    ngOnInit() {\n        if (this._selected) {\n            // List options that are selected at initialization can't be reported properly to the form\n            // control. This is because it takes some time until the selection-list knows about all\n            // available options. Also it can happen that the ControlValueAccessor has an initial value\n            // that should be used instead. Deferring the value change report to the next tick ensures\n            // that the form control value is not being overwritten.\n            const wasSelected = this._selected;\n\n            Promise.resolve().then(() => {\n                if (this._selected || wasSelected) {\n                    this.selected = true;\n                    this._changeDetector.markForCheck();\n                }\n            });\n        }\n    }\n\n    ngAfterContentInit() {\n        this._lineSetter = new McLineSetter(this._lines, this._element);\n    }\n\n    ngOnDestroy(): void {\n        if (this.selected) {\n            // We have to delay this until the next tick in order\n            // to avoid changed after checked errors.\n            Promise.resolve().then(() => this.selected = false);\n        }\n\n        this.listSelection._removeOptionFromList(this);\n    }\n\n    toggle(): void {\n        this.selected = !this.selected;\n    }\n\n    focus(): void {\n        this._element.nativeElement.focus();\n\n        this.listSelection.setFocusedOption(this);\n    }\n\n    getLabel() {\n        return this._text ? this._text.nativeElement.textContent : '';\n    }\n\n    setSelected(selected: boolean) {\n        if (this._selected === selected || !this.listSelection.selectedOptions) { return; }\n\n        this._selected = selected;\n\n        if (selected) {\n            this.listSelection.selectedOptions.select(this);\n        } else {\n            this.listSelection.selectedOptions.deselect(this);\n        }\n\n        this._changeDetector.markForCheck();\n    }\n\n    _getHeight(): number {\n        return this._element.nativeElement.getClientRects()[0].height;\n    }\n\n    _handleClick() {\n        if (this.disabled) { return; }\n\n        this.listSelection.setFocusedOption(this);\n    }\n\n    _handleFocus() {\n        if (this.disabled || this._hasFocus) { return; }\n\n        this._hasFocus = true;\n    }\n\n    _handleBlur() {\n        this._hasFocus = false;\n\n        this.listSelection._onTouched();\n    }\n\n    _getHostElement(): HTMLElement {\n        return this._element.nativeElement;\n    }\n}\n\n\nexport const MC_SELECTION_LIST_VALUE_ACCESSOR: any = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => McListSelection),\n    multi: true\n};\n\n// Change event that is being fired whenever the selected state of an option changes. */\nexport class McListSelectionChange {\n    constructor(\n        // Reference to the selection list that emitted the event.\n        public source: McListSelection,\n        // Reference to the option that has been changed.\n        public option: McListOption\n    ) {}\n}\n\n\nexport class McListSelectionBase {}\n\nexport const _McListSelectionMixinBase: CanDisableCtor & typeof McListSelectionBase\n    = mixinDisabled(McListSelectionBase);\n\n@Component({\n    exportAs: 'mcListSelection',\n    selector: 'mc-list-selection',\n    template: '<ng-content></ng-content>',\n    styleUrls: ['./list.css'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n    inputs: ['disabled', 'tabIndex'],\n    host: {\n        class: 'mc-list-selection',\n        '[tabIndex]': 'tabIndex',\n        '(focus)': 'focus()',\n        '(blur)': '_onTouched()',\n        '(keydown)': '_onKeyDown($event)',\n        '(window:resize)': 'updateScrollSize()'\n    },\n    providers: [MC_SELECTION_LIST_VALUE_ACCESSOR],\n    preserveWhitespaces: false\n})\nexport class McListSelection extends _McListSelectionMixinBase implements\n    IFocusableOption, CanDisable, AfterContentInit, ControlValueAccessor {\n\n    _keyManager: FocusKeyManager<McListOption>;\n\n    // The option components contained within this selection-list.\n    @ContentChildren(McListOption) options: QueryList<McListOption>;\n\n    tabIndex: number;\n\n    autoSelect: boolean;\n    noUnselect: boolean;\n    multiple: boolean;\n\n    // todo temporary solution\n    withShift: boolean;\n    withCtrl: boolean;\n\n    @Input() horizontal: boolean = false;\n\n    // Emits a change event whenever the selected state of an option changes.\n    @Output() readonly selectionChange: EventEmitter<McListSelectionChange> = new EventEmitter<McListSelectionChange>();\n\n    selectedOptions: SelectionModel<McListOption>;\n\n    // Used for storing the values that were assigned before the options were initialized.\n    private _tempValues: string[] | null;\n\n    private _modelChanges = Subscription.EMPTY;\n\n    constructor(\n        private _element: ElementRef,\n        @Attribute('tabindex') tabIndex: string,\n        @Attribute('auto-select') autoSelect: string,\n        @Attribute('no-unselect') noUnselect: string,\n        @Attribute('multiple') multiple: string\n    ) {\n        super();\n\n        this.autoSelect = autoSelect === null ? true : toBoolean(autoSelect);\n        this.multiple = multiple === null ? true : toBoolean(multiple);\n        this.noUnselect = noUnselect === null ? true : toBoolean(noUnselect);\n\n        this.tabIndex = parseInt(tabIndex) || 0;\n\n        this.selectedOptions = new SelectionModel<McListOption>(this.multiple);\n    }\n\n    ngAfterContentInit(): void {\n        this.horizontal = toBoolean(this.horizontal);\n\n        this._keyManager = new FocusKeyManager<McListOption>(this.options)\n            .withTypeAhead()\n            .withVerticalOrientation(!this.horizontal)\n            .withHorizontalOrientation(this.horizontal ? 'ltr' : null);\n\n        if (this._tempValues) {\n            this._setOptionsFromValues(this._tempValues);\n            this._tempValues = null;\n        }\n\n        // Sync external changes to the model back to the options.\n        this._modelChanges = this.selectedOptions.onChange!.subscribe((event) => {\n            for (const item of event.added) {\n                item.selected = true;\n            }\n\n            for (const item of event.removed) {\n                item.selected = false;\n            }\n        });\n\n        this.updateScrollSize();\n    }\n\n    ngOnDestroy() {\n        this._modelChanges.unsubscribe();\n    }\n\n    focus() {\n        this._element.nativeElement.focus();\n    }\n\n    selectAll() {\n        this.options.forEach((option) => option.setSelected(true));\n\n        this._reportValueChange();\n    }\n\n    deselectAll() {\n        this.options.forEach((option) => option.setSelected(false));\n\n        this._reportValueChange();\n    }\n\n    updateScrollSize(): void {\n        if (this.horizontal || !this.options.first) { return; }\n\n        this._keyManager.withScrollSize(Math.floor(this._getHeight() / this.options.first._getHeight()));\n    }\n\n    // Sets the focused option of the selection-list.\n    setFocusedOption(option: McListOption): void {\n        this._keyManager.updateActiveItem(option);\n\n        if (this.withShift && this.multiple) {\n            const previousIndex = this._keyManager.previousActiveItemIndex;\n            const activeIndex = this._keyManager.activeItemIndex;\n\n            if (previousIndex < activeIndex) {\n                this.options.forEach((item, index) => {\n                    if (index >= previousIndex && index <= activeIndex) { item.setSelected(true); }\n                });\n            } else {\n                this.options.forEach((item, index) => {\n                    if (index >= activeIndex && index <= previousIndex) { item.setSelected(true); }\n                });\n            }\n\n            this.withShift = false;\n        } else if (this.withCtrl) {\n            this.withCtrl = false;\n\n            if (!this._canDeselectLast(option)) { return; }\n\n            option.toggle();\n        } else {\n            if (this.autoSelect) {\n                this.options.forEach((item) => item.setSelected(false));\n                option.setSelected(true);\n            }\n        }\n\n        this._emitChangeEvent(option);\n        this._reportValueChange();\n    }\n\n    // Implemented as part of ControlValueAccessor.\n    writeValue(values: string[]): void {\n        if (this.options) {\n            this._setOptionsFromValues(values || []);\n        } else {\n            this._tempValues = values;\n        }\n    }\n\n    // Implemented as part of ControlValueAccessor.\n    registerOnChange(fn: (value: any) => void): void {\n        this._onChange = fn;\n    }\n\n    // Implemented as part of ControlValueAccessor.\n    registerOnTouched(fn: () => void): void {\n        this._onTouched = fn;\n    }\n\n    // Implemented as a part of ControlValueAccessor.\n    setDisabledState(isDisabled: boolean): void {\n        if (this.options) {\n            this.options.forEach((option) => option.disabled = isDisabled);\n        }\n    }\n\n    getSelectedOptionValues(): string[] {\n        return this.options.filter((option) => option.selected).map((option) => option.value);\n    }\n\n    // Toggles the selected state of the currently focused option.\n    toggleFocusedOption(): void {\n        const focusedIndex = this._keyManager.activeItemIndex;\n\n        if (focusedIndex != null && this._isValidIndex(focusedIndex)) {\n            const focusedOption: McListOption = this.options.toArray()[focusedIndex];\n\n            if (focusedOption && this._canDeselectLast(focusedOption)) {\n                focusedOption.toggle();\n\n                // Emit a change event because the focused option changed its state through user interaction.\n                this._emitChangeEvent(focusedOption);\n            }\n        }\n    }\n\n    _canDeselectLast(listOption: McListOption): boolean {\n        return !(this.noUnselect && this.selectedOptions.selected.length === 1 && listOption.selected);\n    }\n\n    _getHeight(): number {\n        return this._element.nativeElement.getClientRects()[0].height;\n    }\n\n    // View to model callback that should be called if the list or its options lost focus.\n    _onTouched: () => void = () => {};\n\n    // Removes an option from the selection list and updates the active item.\n    _removeOptionFromList(option: McListOption) {\n        if (option._hasFocus) {\n            const optionIndex = this._getOptionIndex(option);\n\n            // Check whether the option is the last item\n            if (optionIndex > 0) {\n                this._keyManager.setPreviousItemActive();\n            } else if (optionIndex === 0 && this.options.length > 1) {\n                this._keyManager.setNextItemActive();\n            }\n        }\n    }\n\n    _onKeyDown(event: KeyboardEvent) {\n        const keyCode = event.keyCode;\n        this.withShift = event.shiftKey;\n        this.withCtrl = event.ctrlKey;\n\n        switch (keyCode) {\n            case SPACE:\n            case ENTER:\n                this.toggleFocusedOption();\n                event.preventDefault();\n\n                break;\n            case HOME:\n                this._keyManager.setFirstItemActive();\n                event.preventDefault();\n\n                break;\n            case END:\n                this._keyManager.setLastItemActive();\n                event.preventDefault();\n\n                break;\n            case PAGE_UP:\n                if (!this.horizontal) { this._keyManager.setPreviousPageItemActive(); }\n\n                event.preventDefault();\n\n                break;\n            case PAGE_DOWN:\n                if (!this.horizontal) { this._keyManager.setNextPageItemActive(); }\n\n                event.preventDefault();\n\n                break;\n            default:\n                this._keyManager.onKeydown(event);\n        }\n    }\n\n    // Reports a value change to the ControlValueAccessor\n    _reportValueChange() {\n        if (this.options) {\n            this._onChange(this.getSelectedOptionValues());\n        }\n    }\n\n    // Emits a change event if the selected state of an option changed.\n    _emitChangeEvent(option: McListOption) {\n        this.selectionChange.emit(new McListSelectionChange(this, option));\n    }\n\n    // Returns the option with the specified value.\n    private _getOptionByValue(value: string): McListOption | undefined {\n        return this.options.find((option) => option.value === value);\n    }\n\n    // Sets the selected options based on the specified values.\n    private _setOptionsFromValues(values: string[]) {\n        this.options.forEach((option) => option.setSelected(false));\n\n        values\n            .map((value) => this._getOptionByValue(value))\n            .filter(Boolean)\n            .forEach((option) => option!.setSelected(true));\n    }\n\n    /**\n     * Utility to ensure all indexes are valid.\n     * @param index The index to be checked.\n     * @returns True if the index is valid for our list of options.\n     */\n    private _isValidIndex(index: number): boolean {\n        return index >= 0 && index < this.options.length;\n    }\n\n    // Returns the index of the specified list option.\n    private _getOptionIndex(option: McListOption): number {\n        return this.options.toArray().indexOf(option);\n    }\n\n    // View to model callback that should be called whenever the selected options change.\n    private _onChange: (value: any) => void = (_: any) => {};\n}\n","import {\n    AfterContentInit,\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    EventEmitter,\n    Inject,\n    Input,\n    Optional,\n    Output,\n    ViewChild,\n    ViewEncapsulation\n} from '@angular/core';\nimport { Directionality } from '@ptsecurity/cdk/bidi';\nimport { DateAdapter, MC_DATE_FORMATS, McDateFormats } from '@ptsecurity/cdk/datetime';\nimport {\n    DOWN_ARROW,\n    END,\n    ENTER,\n    HOME,\n    LEFT_ARROW,\n    PAGE_DOWN,\n    PAGE_UP,\n    RIGHT_ARROW,\n    UP_ARROW,\n    SPACE\n} from '@ptsecurity/cdk/keycodes';\n\nimport { McCalendarBody, McCalendarCell } from './calendar-body';\nimport { createMissingDateImplError } from './datepicker-errors';\n\n\n/**\n * An internal component used to display a single year in the datepicker.\n * @docs-private\n */\n@Component({\n    selector: 'mc-year-view',\n    templateUrl: 'year-view.html',\n    exportAs: 'mcYearView',\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class McYearView<D> implements AfterContentInit {\n    /** The date to display in this year view (everything other than the year is ignored). */\n    @Input()\n    get activeDate(): D {\n        return this._activeDate;\n    }\n\n    set activeDate(value: D) {\n        const oldActiveDate = this._activeDate;\n        const validDate =\n            this.getValidDateOrNull(this.dateAdapter.deserialize(value)) || this.dateAdapter.today();\n        this._activeDate = this.dateAdapter.clampDate(validDate, this.minDate, this.maxDate);\n\n        if (this.dateAdapter.getYear(oldActiveDate) !== this.dateAdapter.getYear(this._activeDate)) {\n            this.init();\n        }\n    }\n\n    /** The currently selected date. */\n    @Input()\n    get selected(): D | null {\n        return this._selected;\n    }\n\n    set selected(value: D | null) {\n        this._selected = this.getValidDateOrNull(this.dateAdapter.deserialize(value));\n        this.selectedMonth = this.getMonthInCurrentYear(this._selected);\n    }\n\n    /** The minimum selectable date. */\n    @Input()\n    get minDate(): D | null {\n        return this._minDate;\n    }\n\n    set minDate(value: D | null) {\n        this._minDate = this.getValidDateOrNull(this.dateAdapter.deserialize(value));\n    }\n\n    /** The maximum selectable date. */\n    @Input()\n    get maxDate(): D | null {\n        return this._maxDate;\n    }\n\n    set maxDate(value: D | null) {\n        this._maxDate = this.getValidDateOrNull(this.dateAdapter.deserialize(value));\n    }\n\n    /** A function used to filter which dates are selectable. */\n    @Input() dateFilter: (date: D) => boolean;\n\n    /** Emits when a new month is selected. */\n    @Output() readonly selectedChange: EventEmitter<D> = new EventEmitter<D>();\n\n    /** Emits the selected month. This doesn't imply a change on the selected date */\n    @Output() readonly monthSelected: EventEmitter<D> = new EventEmitter<D>();\n\n    /** Emits when any date is activated. */\n    @Output() readonly activeDateChange: EventEmitter<D> = new EventEmitter<D>();\n\n    /** The body of calendar table */\n    @ViewChild(McCalendarBody) mcCalendarBody: McCalendarBody;\n\n    /** Grid of calendar cells representing the months of the year. */\n    months: McCalendarCell[][];\n\n    /** The label for this year (e.g. \"2017\"). */\n    yearLabel: string;\n\n    /** The month in this year that today falls on. Null if today is in a different year. */\n    todayMonth: number | null;\n\n    /**\n     * The month in this year that the selected Date falls on.\n     * Null if the selected Date is in a different year.\n     */\n    selectedMonth: number | null;\n    private _activeDate: D;\n    private _selected: D | null;\n    private _minDate: D | null;\n    private _maxDate: D | null;\n\n    constructor(\n        private changeDetectorRef: ChangeDetectorRef,\n        @Optional() @Inject(MC_DATE_FORMATS) private dateFormats: McDateFormats,\n        @Optional() public dateAdapter: DateAdapter<D>,\n        @Optional() private dir?: Directionality\n    ) {\n        if (!this.dateAdapter) {\n            throw createMissingDateImplError('DateAdapter');\n        }\n\n        if (!this.dateFormats) {\n            throw createMissingDateImplError('MC_DATE_FORMATS');\n        }\n\n        this._activeDate = this.dateAdapter.today();\n    }\n\n    ngAfterContentInit() {\n        this.init();\n    }\n\n    /** Handles when a new month is selected. */\n    onMonthSelected(month: number) {\n        const normalizedDate =\n            this.dateAdapter.createDate(this.dateAdapter.getYear(this.activeDate), month, 1);\n\n        this.monthSelected.emit(normalizedDate);\n\n        const daysInMonth = this.dateAdapter.getNumDaysInMonth(normalizedDate);\n\n        this.selectedChange.emit(this.dateAdapter.createDate(\n            this.dateAdapter.getYear(this.activeDate), month,\n            Math.min(this.dateAdapter.getDate(this.activeDate), daysInMonth)));\n    }\n\n    /** Handles keydown events on the calendar body when calendar is in year view. */\n    handleCalendarBodyKeydown(event: KeyboardEvent): void {\n        // TODO(mmalerba): We currently allow keyboard navigation to disabled dates, but just prevent\n        // disabled ones from being selected. This may not be ideal, we should look into whether\n        // navigation should skip over disabled dates, and if so, how to implement that efficiently.\n\n        const oldActiveDate = this._activeDate;\n        const isRtl = this.isRtl();\n\n        const VERTICAL_SHIFT = 4;\n        const PAGE_SHIFT = 10;\n        const MAX_MONTH_INDEX = 11;\n\n        // tslint:disable-next-line:deprecation\n        switch (event.keyCode) {\n            case LEFT_ARROW:\n                this.activeDate = this.dateAdapter.addCalendarMonths(this._activeDate, isRtl ? 1 : -1);\n                break;\n            case RIGHT_ARROW:\n                this.activeDate = this.dateAdapter.addCalendarMonths(this._activeDate, isRtl ? -1 : 1);\n                break;\n            case UP_ARROW:\n                this.activeDate = this.dateAdapter.addCalendarMonths(this._activeDate, -VERTICAL_SHIFT);\n                break;\n            case DOWN_ARROW:\n                this.activeDate = this.dateAdapter.addCalendarMonths(this._activeDate, VERTICAL_SHIFT);\n                break;\n            case HOME:\n                this.activeDate = this.dateAdapter.addCalendarMonths(this._activeDate,\n                    -this.dateAdapter.getMonth(this._activeDate));\n                break;\n            case END:\n                this.activeDate = this.dateAdapter.addCalendarMonths(this._activeDate,\n                    MAX_MONTH_INDEX - this.dateAdapter.getMonth(this._activeDate));\n                break;\n            case PAGE_UP:\n                this.activeDate =\n                    this.dateAdapter.addCalendarYears(this._activeDate, event.altKey ? -PAGE_SHIFT : -1);\n                break;\n            case PAGE_DOWN:\n                this.activeDate =\n                    this.dateAdapter.addCalendarYears(this._activeDate, event.altKey ? PAGE_SHIFT : 1);\n                break;\n            case ENTER:\n            case SPACE:\n                this.onMonthSelected(this.dateAdapter.getMonth(this._activeDate));\n                break;\n            default:\n                // Don't prevent default or focus active cell on keys that we don't explicitly handle.\n                return;\n        }\n\n        if (this.dateAdapter.compareDate(oldActiveDate, this.activeDate)) {\n            this.activeDateChange.emit(this.activeDate);\n        }\n\n        this.focusActiveCell();\n        // Prevent unexpected default actions such as form submission.\n        event.preventDefault();\n    }\n\n    /** Initializes this year view. */\n    init() {\n        this.selectedMonth = this.getMonthInCurrentYear(this.selected);\n        this.todayMonth = this.getMonthInCurrentYear(this.dateAdapter.today());\n        this.yearLabel = this.dateAdapter.getYearName(this.activeDate);\n\n        const monthNames = this.dateAdapter.getMonthNames('short');\n\n        // First row of months only contains 5 elements so we can fit the year label on the same row.\n        // tslint:disable-next-line:no-magic-numbers\n        this.months = [[0, 1, 2, 3], [4, 5, 6, 7], [8, 9, 10, 11]].map((row) => row.map(\n            (month) => this.createCellForMonth(month, monthNames[month])));\n        this.changeDetectorRef.markForCheck();\n    }\n\n    /** Focuses the active cell after the microtask queue is empty. */\n    focusActiveCell() {\n        this.mcCalendarBody.focusActiveCell();\n    }\n\n    /**\n     * Gets the month in this year that the given Date falls on.\n     * Returns null if the given Date is in another year.\n     */\n    private getMonthInCurrentYear(date: D | null) {\n        return date && this.dateAdapter.getYear(date) === this.dateAdapter.getYear(this.activeDate) ?\n            this.dateAdapter.getMonth(date) : null;\n    }\n\n    /** Creates an McCalendarCell for the given month. */\n    private createCellForMonth(month: number, monthName: string) {\n        const ariaLabel = this.dateAdapter.format(\n            this.dateAdapter.createDate(this.dateAdapter.getYear(this.activeDate), month, 1),\n            this.dateFormats.display.monthYearA11yLabel);\n\n        const newMonthName = monthName[0].toLocaleUpperCase() + monthName.substr(1);\n\n        return new McCalendarCell(\n            month, newMonthName, ariaLabel, this.shouldEnableMonth(month));\n    }\n\n    /** Whether the given month is enabled. */\n    private shouldEnableMonth(month: number) {\n\n        const activeYear = this.dateAdapter.getYear(this.activeDate);\n\n        if (month === undefined || month === null ||\n            this.isYearAndMonthAfterMaxDate(activeYear, month) ||\n            this.isYearAndMonthBeforeMinDate(activeYear, month)) {\n            return false;\n        }\n\n        if (!this.dateFilter) {\n            return true;\n        }\n\n        const firstOfMonth = this.dateAdapter.createDate(activeYear, month, 1);\n\n        // If any date in the month is enabled count the month as enabled.\n        for (let date = firstOfMonth; this.dateAdapter.getMonth(date) === month;\n             date = this.dateAdapter.addCalendarDays(date, 1)) {\n            if (this.dateFilter(date)) {\n                return true;\n            }\n        }\n\n        return false;\n    }\n\n    /**\n     * Tests whether the combination month/year is after this.maxDate, considering\n     * just the month and year of this.maxDate\n     */\n    private isYearAndMonthAfterMaxDate(year: number, month: number) {\n        if (this.maxDate) {\n            const maxYear = this.dateAdapter.getYear(this.maxDate);\n            const maxMonth = this.dateAdapter.getMonth(this.maxDate);\n\n            return year > maxYear || (year === maxYear && month > maxMonth);\n        }\n\n        return false;\n    }\n\n    /**\n     * Tests whether the combination month/year is before this.minDate, considering\n     * just the month and year of this.minDate\n     */\n    private isYearAndMonthBeforeMinDate(year: number, month: number) {\n        if (this.minDate) {\n            const minYear = this.dateAdapter.getYear(this.minDate);\n            const minMonth = this.dateAdapter.getMonth(this.minDate);\n\n            return year < minYear || (year === minYear && month < minMonth);\n        }\n\n        return false;\n    }\n\n    /**\n     * @param obj The object to check.\n     * @returns The given object if it is both a date instance and valid, otherwise null.\n     */\n    private getValidDateOrNull(obj: any): D | null {\n        return (this.dateAdapter.isDateInstance(obj) && this.dateAdapter.isValid(obj)) ? obj : null;\n    }\n\n    /** Determines whether the user has the RTL layout direction. */\n    private isRtl() {\n        return this.dir && this.dir.value === 'rtl';\n    }\n}\n","import {\n    AfterContentInit,\n    AfterViewChecked,\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    EventEmitter,\n    forwardRef,\n    Inject,\n    Input,\n    OnChanges,\n    OnDestroy,\n    Optional,\n    Output,\n    SimpleChanges,\n    ViewChild,\n    ViewEncapsulation\n} from '@angular/core';\nimport { DateAdapter, MC_DATE_FORMATS, McDateFormats } from '@ptsecurity/cdk/datetime';\nimport { ComponentPortal, IComponentType, Portal } from '@ptsecurity/cdk/portal';\nimport { Subject, Subscription } from 'rxjs';\n\nimport { McCalendarCellCssClasses } from './calendar-body';\nimport { createMissingDateImplError } from './datepicker-errors';\nimport { McDatepickerIntl } from './datepicker-intl';\nimport { McMonthView } from './month-view';\nimport { McMultiYearView, yearsPerPage } from './multi-year-view';\nimport { McYearView } from './year-view';\n\n\n/**\n * Possible views for the calendar.\n * @docs-private\n */\nexport type McCalendarView = 'month' | 'year' | 'multi-year';\n\n/** Default header for McCalendar */\n@Component({\n    selector: 'mc-calendar-header',\n    templateUrl: 'calendar-header.html',\n    exportAs: 'mcCalendarHeader',\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class McCalendarHeader<D> {\n    constructor(private intl: McDatepickerIntl,\n                @Inject(forwardRef(() => McCalendar)) public calendar: McCalendar<D>,\n                @Optional() private dateAdapter: DateAdapter<D>,\n                @Optional() @Inject(MC_DATE_FORMATS) private dateFormats: McDateFormats,\n                changeDetectorRef: ChangeDetectorRef) {\n\n        this.calendar.stateChanges.subscribe(() => changeDetectorRef.markForCheck());\n    }\n\n    /** The label for the current calendar view. */\n    get periodButtonText(): string {\n        if (this.calendar.currentView === 'month') {\n            const label = this.dateAdapter\n                .format(this.calendar.activeDate, this.dateFormats.display.monthYearLabel);\n\n            return label[0].toLocaleUpperCase() + label.substr(1);\n        }\n\n        if (this.calendar.currentView === 'year') {\n            return this.dateAdapter.getYearName(this.calendar.activeDate);\n        }\n\n        const activeYear = this.dateAdapter.getYear(this.calendar.activeDate);\n        const firstYearInView = this.dateAdapter.getYearName(\n            // tslint:disable-next-line:no-magic-numbers\n            this.dateAdapter.createDate(activeYear - activeYear % 24, 0, 1));\n        const lastYearInView = this.dateAdapter.getYearName(\n            // tslint:disable-next-line:no-magic-numbers\n            this.dateAdapter.createDate(activeYear + yearsPerPage - 1 - activeYear % 24, 0, 1));\n\n        return `${firstYearInView} \\u2013 ${lastYearInView}`;\n    }\n\n    get periodButtonLabel(): string {\n        return this.calendar.currentView === 'month' ?\n            this.intl.switchToMultiYearViewLabel : this.intl.switchToMonthViewLabel;\n    }\n\n    /** The label for the previous button. */\n    get prevButtonLabel(): string {\n        return {\n            month: this.intl.prevMonthLabel,\n            year: this.intl.prevYearLabel,\n            'multi-year': this.intl.prevMultiYearLabel\n        }[this.calendar.currentView];\n    }\n\n    /** The label for the next button. */\n    get nextButtonLabel(): string {\n        return {\n            month: this.intl.nextMonthLabel,\n            year: this.intl.nextYearLabel,\n            'multi-year': this.intl.nextMultiYearLabel\n        }[this.calendar.currentView];\n    }\n\n    /** Handles user clicks on the period label. */\n    currentPeriodClicked(): void {\n        this.calendar.currentView = this.calendar.currentView === 'month' ? 'multi-year' : 'month';\n    }\n\n    /** Handles user clicks on the previous button. */\n    previousClicked(): void {\n        this.calendar.activeDate = this.calendar.currentView === 'month' ?\n            this.dateAdapter.addCalendarMonths(this.calendar.activeDate, -1) :\n            this.dateAdapter.addCalendarYears(\n                this.calendar.activeDate, this.calendar.currentView === 'year' ? -1 : -yearsPerPage\n            );\n    }\n\n    /** Handles user clicks on the next button. */\n    nextClicked(): void {\n        this.calendar.activeDate = this.calendar.currentView === 'month' ?\n            this.dateAdapter.addCalendarMonths(this.calendar.activeDate, 1) :\n            this.dateAdapter.addCalendarYears(\n                this.calendar.activeDate,\n                this.calendar.currentView === 'year' ? 1 : yearsPerPage\n            );\n    }\n\n    /** Whether the previous period button is enabled. */\n    previousEnabled(): boolean {\n        if (!this.calendar.minDate) {\n            return true;\n        }\n\n        return !this.calendar.minDate ||\n            !this.isSameView(this.calendar.activeDate, this.calendar.minDate);\n    }\n\n    /** Whether the next period button is enabled. */\n    nextEnabled(): boolean {\n        return !this.calendar.maxDate ||\n            !this.isSameView(this.calendar.activeDate, this.calendar.maxDate);\n    }\n\n    /** Whether the two dates represent the same view in the current view mode (month or year). */\n    private isSameView(date1: D, date2: D): boolean {\n        if (this.calendar.currentView === 'month') {\n            return this.dateAdapter.getYear(date1) === this.dateAdapter.getYear(date2) &&\n                this.dateAdapter.getMonth(date1) === this.dateAdapter.getMonth(date2);\n        }\n        if (this.calendar.currentView === 'year') {\n            return this.dateAdapter.getYear(date1) === this.dateAdapter.getYear(date2);\n        }\n\n        // Otherwise we are in 'multi-year' view.\n        return Math.floor(this.dateAdapter.getYear(date1) / yearsPerPage) ===\n            Math.floor(this.dateAdapter.getYear(date2) / yearsPerPage);\n    }\n}\n\n/**\n * A calendar that is used as part of the datepicker.\n * @docs-private\n */\n@Component({\n    selector: 'mc-calendar',\n    templateUrl: 'calendar.html',\n    styleUrls: ['calendar.css'],\n    host: {\n        class: 'mc-calendar'\n    },\n    exportAs: 'mcCalendar',\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class McCalendar<D> implements AfterContentInit, AfterViewChecked, OnDestroy, OnChanges {\n\n    /** A date representing the period (month or year) to start the calendar in. */\n    @Input()\n    get startAt(): D | null {\n        return this._startAt;\n    }\n\n    set startAt(value: D | null) {\n        this._startAt = this.getValidDateOrNull(this.dateAdapter.deserialize(value));\n    }\n\n    /** The currently selected date. */\n    @Input()\n    get selected(): D | null {\n        return this._selected;\n    }\n\n    set selected(value: D | null) {\n        this._selected = this.getValidDateOrNull(this.dateAdapter.deserialize(value));\n    }\n\n    /** The minimum selectable date. */\n    @Input()\n    get minDate(): D | null {\n        return this._minDate;\n    }\n\n    set minDate(value: D | null) {\n        this._minDate = this.getValidDateOrNull(this.dateAdapter.deserialize(value));\n    }\n\n    /** The maximum selectable date. */\n    @Input()\n    get maxDate(): D | null {\n        return this._maxDate;\n    }\n\n    set maxDate(value: D | null) {\n        this._maxDate = this.getValidDateOrNull(this.dateAdapter.deserialize(value));\n    }\n\n    /**\n     * The current active date. This determines which time period is shown and which date is\n     * highlighted when using keyboard navigation.\n     */\n    get activeDate(): D {\n        return this.clampedActiveDate;\n    }\n\n    set activeDate(value: D) {\n        this.clampedActiveDate = this.dateAdapter.clampDate(value, this.minDate, this.maxDate);\n        this.stateChanges.next();\n    }\n\n    /** Whether the calendar is in month view. */\n    get currentView(): McCalendarView {\n        return this._currentView;\n    }\n\n    set currentView(value: McCalendarView) {\n        this._currentView = value;\n        this.moveFocusOnNextTick = true;\n    }\n\n    /** An input indicating the type of the header component, if set. */\n    @Input() headerComponent: IComponentType<any>;\n\n    /** A portal containing the header component type for this calendar. */\n    calendarHeaderPortal: Portal<any>;\n\n    /** Whether the calendar should be started in month or year view. */\n    @Input() startView: McCalendarView = 'month';\n\n    /** Function used to filter which dates are selectable. */\n    @Input() dateFilter: (date: D) => boolean;\n\n    /** Function that can be used to add custom CSS classes to dates. */\n    @Input() dateClass: (date: D) => McCalendarCellCssClasses;\n\n    /** Emits when the currently selected date changes. */\n    @Output() readonly selectedChange: EventEmitter<D> = new EventEmitter<D>();\n\n    /**\n     * Emits the year chosen in multiyear view.\n     * This doesn't imply a change on the selected date.\n     */\n    @Output() readonly yearSelected: EventEmitter<D> = new EventEmitter<D>();\n\n    /**\n     * Emits the month chosen in year view.\n     * This doesn't imply a change on the selected date.\n     */\n    @Output() readonly monthSelected: EventEmitter<D> = new EventEmitter<D>();\n\n    /** Emits when any date is selected. */\n    @Output() readonly userSelection: EventEmitter<void> = new EventEmitter<void>();\n\n    /** Reference to the current month view component. */\n    @ViewChild(McMonthView) monthView: McMonthView<D>;\n\n    /** Reference to the current year view component. */\n    @ViewChild(McYearView) yearView: McYearView<D>;\n\n    /** Reference to the current multi-year view component. */\n    @ViewChild(McMultiYearView) multiYearView: McMultiYearView<D>;\n\n    /**\n     * Emits whenever there is a state change that the header may need to respond to.\n     */\n    stateChanges = new Subject<void>();\n\n    private intlChanges: Subscription;\n\n    /**\n     * Used for scheduling that focus should be moved to the active cell on the next tick.\n     * We need to schedule it, rather than do it immediately, because we have to wait\n     * for Angular to re-evaluate the view children.\n     */\n    private moveFocusOnNextTick = false;\n    private _startAt: D | null;\n    private _selected: D | null;\n    private _minDate: D | null;\n    private _maxDate: D | null;\n    private clampedActiveDate: D;\n    private _currentView: McCalendarView;\n\n    constructor(\n        intl: McDatepickerIntl,\n        @Optional() private dateAdapter: DateAdapter<D>,\n        @Optional() @Inject(MC_DATE_FORMATS) private dateFormats: McDateFormats,\n        private changeDetectorRef: ChangeDetectorRef\n    ) {\n        if (!this.dateAdapter) {\n            throw createMissingDateImplError('DateAdapter');\n        }\n\n        if (!this.dateFormats) {\n            throw createMissingDateImplError('MC_DATE_FORMATS');\n        }\n\n        this.intlChanges = intl.changes.subscribe(() => {\n            changeDetectorRef.markForCheck();\n            this.stateChanges.next();\n        });\n    }\n\n    ngAfterContentInit() {\n        this.calendarHeaderPortal = new ComponentPortal(this.headerComponent || McCalendarHeader);\n        this.activeDate = this.startAt || this.dateAdapter.today();\n\n        // Assign to the private property since we don't want to move focus on init.\n        this._currentView = this.startView;\n    }\n\n    ngAfterViewChecked() {\n        if (this.moveFocusOnNextTick) {\n            this.moveFocusOnNextTick = false;\n            this.focusActiveCell();\n        }\n    }\n\n    ngOnDestroy() {\n        this.intlChanges.unsubscribe();\n        this.stateChanges.complete();\n    }\n\n    ngOnChanges(changes: SimpleChanges) {\n        const change = changes.minDate || changes.maxDate || changes.dateFilter;\n\n        if (change && !change.firstChange) {\n            const view = this.getCurrentViewComponent();\n\n            if (view) {\n                // We need to `detectChanges` manually here, because the `minDate`, `maxDate` etc. are\n                // passed down to the view via data bindings which won't be up-to-date when we call `init`.\n                this.changeDetectorRef.detectChanges();\n                view.init();\n            }\n        }\n\n        this.stateChanges.next();\n    }\n\n    focusActiveCell() {\n        this.getCurrentViewComponent().focusActiveCell();\n    }\n\n    /** Updates today's date after an update of the active date */\n    updateTodaysDate() {\n        const view = this.currentView === 'month' ? this.monthView :\n            (this.currentView === 'year' ? this.yearView : this.multiYearView);\n\n        view.ngAfterContentInit();\n    }\n\n    /** Handles date selection in the month view. */\n    dateSelected(date: D): void {\n        if (!this.dateAdapter.sameDate(date, this.selected)) {\n            this.selectedChange.emit(date);\n        }\n    }\n\n    /** Handles year selection in the multiyear view. */\n    yearSelectedInMultiYearView(normalizedYear: D) {\n        this.yearSelected.emit(normalizedYear);\n    }\n\n    /** Handles month selection in the year view. */\n    monthSelectedInYearView(normalizedMonth: D) {\n        this.monthSelected.emit(normalizedMonth);\n    }\n\n    userSelected(): void {\n        this.userSelection.emit();\n    }\n\n    /** Handles year/month selection in the multi-year/year views. */\n    goToDateInView(date: D, view: 'month' | 'year' | 'multi-year'): void {\n        this.activeDate = date;\n        this.currentView = view;\n    }\n\n    /**\n     * @param obj The object to check.\n     * @returns The given object if it is both a date instance and valid, otherwise null.\n     */\n    private getValidDateOrNull(obj: any): D | null {\n        return (this.dateAdapter.isDateInstance(obj) && this.dateAdapter.isValid(obj)) ? obj : null;\n    }\n\n    /** Returns the component instance that corresponds to the current calendar view. */\n    private getCurrentViewComponent() {\n        return this.monthView || this.yearView || this.multiYearView;\n    }\n}\n","// tslint:disable:no-magic-numbers\nimport {\n    AfterContentInit,\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    EventEmitter,\n    Input,\n    Optional,\n    Output,\n    ViewChild,\n    ViewEncapsulation\n} from '@angular/core';\nimport { Directionality } from '@ptsecurity/cdk/bidi';\nimport { DateAdapter } from '@ptsecurity/cdk/datetime';\nimport {\n    DOWN_ARROW,\n    END,\n    ENTER,\n    HOME,\n    LEFT_ARROW,\n    PAGE_DOWN,\n    PAGE_UP,\n    RIGHT_ARROW,\n    UP_ARROW,\n    SPACE\n} from '@ptsecurity/cdk/keycodes';\n\nimport { McCalendarBody, McCalendarCell } from './calendar-body';\nimport { createMissingDateImplError } from './datepicker-errors';\n\n\nexport const yearsPerPage = 24;\n\nexport const yearsPerRow = 4;\n\n\n/**\n * An internal component used to display a year selector in the datepicker.\n * @docs-private\n */\n@Component({\n    selector: 'mc-multi-year-view',\n    templateUrl: 'multi-year-view.html',\n    exportAs: 'mcMultiYearView',\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class McMultiYearView<D> implements AfterContentInit {\n    /** The date to display in this multi-year view (everything other than the year is ignored). */\n    @Input()\n    get activeDate(): D {\n        return this._activeDate;\n    }\n\n    set activeDate(value: D) {\n        const oldActiveDate = this._activeDate;\n        const validDate =\n            this.getValidDateOrNull(this.dateAdapter.deserialize(value)) || this.dateAdapter.today();\n        this._activeDate = this.dateAdapter.clampDate(validDate, this.minDate, this.maxDate);\n\n        if (Math.floor(this.dateAdapter.getYear(oldActiveDate) / yearsPerPage) !==\n            Math.floor(this.dateAdapter.getYear(this._activeDate) / yearsPerPage)) {\n            this.init();\n        }\n    }\n\n    /** The currently selected date. */\n    @Input()\n    get selected(): D | null {\n        return this._selected;\n    }\n\n    set selected(value: D | null) {\n        this._selected = this.getValidDateOrNull(this.dateAdapter.deserialize(value));\n        this.selectedYear = this._selected && this.dateAdapter.getYear(this._selected);\n    }\n\n    /** The minimum selectable date. */\n    @Input()\n    get minDate(): D | null {\n        return this._minDate;\n    }\n\n    set minDate(value: D | null) {\n        this._minDate = this.getValidDateOrNull(this.dateAdapter.deserialize(value));\n    }\n\n    /** The maximum selectable date. */\n    @Input()\n    get maxDate(): D | null {\n        return this._maxDate;\n    }\n\n    set maxDate(value: D | null) {\n        this._maxDate = this.getValidDateOrNull(this.dateAdapter.deserialize(value));\n    }\n\n    /** A function used to filter which dates are selectable. */\n    @Input() dateFilter: (date: D) => boolean;\n\n    /** Emits when a new year is selected. */\n    @Output() readonly selectedChange: EventEmitter<D> = new EventEmitter<D>();\n\n    /** Emits the selected year. This doesn't imply a change on the selected date */\n    @Output() readonly yearSelected: EventEmitter<D> = new EventEmitter<D>();\n\n    /** Emits when any date is activated. */\n    @Output() readonly activeDateChange: EventEmitter<D> = new EventEmitter<D>();\n\n    /** The body of calendar table */\n    @ViewChild(McCalendarBody) mcCalendarBody: McCalendarBody;\n\n    /** Grid of calendar cells representing the currently displayed years. */\n    years: McCalendarCell[][];\n\n    /** The year that today falls on. */\n    todayYear: number;\n\n    /** The year of the selected date. Null if the selected date is null. */\n    selectedYear: number | null;\n    private _activeDate: D;\n    private _selected: D | null;\n    private _minDate: D | null;\n    private _maxDate: D | null;\n\n    constructor(\n        private changeDetectorRef: ChangeDetectorRef,\n        @Optional() public dateAdapter: DateAdapter<D>,\n        @Optional() private dir?: Directionality\n    ) {\n        if (!this.dateAdapter) {\n            throw createMissingDateImplError('DateAdapter');\n        }\n\n        this._activeDate = this.dateAdapter.today();\n    }\n\n    ngAfterContentInit() {\n        this.init();\n    }\n\n    /** Initializes this multi-year view. */\n    init() {\n        this.todayYear = this.dateAdapter.getYear(this.dateAdapter.today());\n        const activeYear = this.dateAdapter.getYear(this._activeDate);\n        const activeOffset = activeYear % yearsPerPage;\n        this.years = [];\n        for (let i = 0, row: number[] = []; i < yearsPerPage; i++) {\n            row.push(activeYear - activeOffset + i);\n            if (row.length === yearsPerRow) {\n                this.years.push(row.map((year) => this.createCellForYear(year)));\n                row = [];\n            }\n        }\n        this.changeDetectorRef.markForCheck();\n    }\n\n    /** Handles when a new year is selected. */\n    onYearSelected(year: number) {\n        this.yearSelected.emit(this.dateAdapter.createDate(year, 0, 1));\n        const month = this.dateAdapter.getMonth(this.activeDate);\n        const daysInMonth =\n            this.dateAdapter.getNumDaysInMonth(this.dateAdapter.createDate(year, month, 1));\n        this.selectedChange.emit(this.dateAdapter.createDate(year, month,\n            Math.min(this.dateAdapter.getDate(this.activeDate), daysInMonth)));\n    }\n\n    /** Handles keydown events on the calendar body when calendar is in multi-year view. */\n    handleCalendarBodyKeydown(event: KeyboardEvent): void {\n        // TODO(mmalerba): We currently allow keyboard navigation to disabled dates, but just prevent\n        // disabled ones from being selected. This may not be ideal, we should look into whether\n        // navigation should skip over disabled dates, and if so, how to implement that efficiently.\n\n        const oldActiveDate = this._activeDate;\n        const isRtl = this.isRtl();\n\n        // tslint:disable-next-line:deprecation\n        switch (event.keyCode) {\n            case LEFT_ARROW:\n                this.activeDate = this.dateAdapter.addCalendarYears(this._activeDate, isRtl ? 1 : -1);\n                break;\n            case RIGHT_ARROW:\n                this.activeDate = this.dateAdapter.addCalendarYears(this._activeDate, isRtl ? -1 : 1);\n                break;\n            case UP_ARROW:\n                this.activeDate = this.dateAdapter.addCalendarYears(this._activeDate, -yearsPerRow);\n                break;\n            case DOWN_ARROW:\n                this.activeDate = this.dateAdapter.addCalendarYears(this._activeDate, yearsPerRow);\n                break;\n            case HOME:\n                this.activeDate = this.dateAdapter.addCalendarYears(this._activeDate,\n                    -this.dateAdapter.getYear(this._activeDate) % yearsPerPage);\n                break;\n            case END:\n                this.activeDate = this.dateAdapter.addCalendarYears(this._activeDate,\n                    yearsPerPage - this.dateAdapter.getYear(this._activeDate) % yearsPerPage - 1);\n                break;\n            case PAGE_UP:\n                this.activeDate =\n                    this.dateAdapter.addCalendarYears(\n                        this._activeDate, event.altKey ? -yearsPerPage * 10 : -yearsPerPage);\n                break;\n            case PAGE_DOWN:\n                this.activeDate =\n                    this.dateAdapter.addCalendarYears(\n                        this._activeDate, event.altKey ? yearsPerPage * 10 : yearsPerPage);\n                break;\n            case ENTER:\n            case SPACE:\n                this.onYearSelected(this.dateAdapter.getYear(this._activeDate));\n                break;\n            default:\n                // Don't prevent default or focus active cell on keys that we don't explicitly handle.\n                return;\n        }\n\n        if (this.dateAdapter.compareDate(oldActiveDate, this.activeDate)) {\n            this.activeDateChange.emit(this.activeDate);\n        }\n\n        this.focusActiveCell();\n        // Prevent unexpected default actions such as form submission.\n        event.preventDefault();\n    }\n\n    getActiveCell(): number {\n        return this.dateAdapter.getYear(this.activeDate) % yearsPerPage;\n    }\n\n    /** Focuses the active cell after the microtask queue is empty. */\n    focusActiveCell() {\n        this.mcCalendarBody.focusActiveCell();\n    }\n\n    /** Creates an McCalendarCell for the given year. */\n    private createCellForYear(year: number) {\n        const yearName = this.dateAdapter.getYearName(this.dateAdapter.createDate(year, 0, 1));\n\n        return new McCalendarCell(year, yearName, yearName, this.shouldEnableYear(year));\n    }\n\n    /** Whether the given year is enabled. */\n    private shouldEnableYear(year: number) {\n        // disable if the year is greater than maxDate lower than minDate\n        if (year === undefined || year === null ||\n            (this.maxDate && year > this.dateAdapter.getYear(this.maxDate)) ||\n            (this.minDate && year < this.dateAdapter.getYear(this.minDate))) {\n            return false;\n        }\n\n        // enable if it reaches here and there's no filter defined\n        if (!this.dateFilter) {\n            return true;\n        }\n\n        const firstOfYear = this.dateAdapter.createDate(year, 0, 1);\n\n        // If any date in the year is enabled count the year as enabled.\n        for (let date = firstOfYear; this.dateAdapter.getYear(date) === year;\n             date = this.dateAdapter.addCalendarDays(date, 1)) {\n            if (this.dateFilter(date)) {\n                return true;\n            }\n        }\n\n        return false;\n    }\n\n    /**\n     * @param obj The object to check.\n     * @returns The given object if it is both a date instance and valid, otherwise null.\n     */\n    private getValidDateOrNull(obj: any): D | null {\n        return (this.dateAdapter.isDateInstance(obj) && this.dateAdapter.isValid(obj)) ? obj : null;\n    }\n\n    /** Determines whether the user has the RTL layout direction. */\n    private isRtl() {\n        return this.dir && this.dir.value === 'rtl';\n    }\n}\n","import {\n    animate,\n    state,\n    style,\n    transition,\n    trigger,\n    AnimationTriggerMetadata\n} from '@angular/animations';\n\n\n/**\n * Animations used by the mosaic datepicker.\n * @docs-private\n */\nexport const mcDatepickerAnimations: {\n    readonly transformPanel: AnimationTriggerMetadata;\n    readonly fadeInCalendar: AnimationTriggerMetadata;\n} = {\n    /** Transforms the height of the datepicker's calendar. */\n    transformPanel: trigger('transformPanel', [\n        state('void', style({\n            opacity: 0,\n            transform: 'scale(1, 0.8)'\n        })),\n        transition('void => enter', animate('120ms cubic-bezier(0, 0, 0.2, 1)', style({\n            opacity: 1,\n            transform: 'scale(1, 1)'\n        }))),\n        transition('* => void', animate('100ms linear', style({ opacity: 0 })))\n    ]),\n\n    /** Fades in the content of the calendar. */\n    fadeInCalendar: trigger('fadeInCalendar', [\n        state('void', style({ opacity: 0 })),\n        state('enter', style({ opacity: 1 })),\n\n        // need to keep it until #12440 gets in, otherwise the exit animation will look glitchy.\n        transition('void => *', animate('120ms 100ms cubic-bezier(0.55, 0, 0.55, 0.2)'))\n    ])\n};\n\n// todo should be put into polyfils\n// https://github.com/angular/angular/issues/24769\nif (!Element.prototype.matches) {\n    Element.prototype.matches = (Element.prototype as any).msMatchesSelector;\n}\n","// tslint:disable:no-unbound-method\n// tslint:disable:no-magic-numbers\nimport { DOCUMENT } from '@angular/common';\nimport {\n    AfterViewInit,\n    ChangeDetectionStrategy,\n    Component,\n    ComponentRef,\n    ElementRef,\n    EventEmitter,\n    Inject,\n    InjectionToken,\n    Input,\n    NgZone,\n    OnDestroy,\n    Optional,\n    Output,\n    ViewChild,\n    ViewContainerRef,\n    ViewEncapsulation\n} from '@angular/core';\nimport { Directionality } from '@ptsecurity/cdk/bidi';\nimport { coerceBooleanProperty } from '@ptsecurity/cdk/coercion';\nimport { DateAdapter } from '@ptsecurity/cdk/datetime';\nimport { ESCAPE, UP_ARROW } from '@ptsecurity/cdk/keycodes';\nimport {\n    Overlay,\n    OverlayConfig,\n    OverlayRef,\n    IPositionStrategy,\n    IScrollStrategy\n} from '@ptsecurity/cdk/overlay';\nimport { ComponentPortal, IComponentType } from '@ptsecurity/cdk/portal';\nimport {\n    CanColor,\n    CanColorCtor,\n    mixinColor,\n    ThemePalette\n} from '@ptsecurity/mosaic/core';\nimport { McFormFieldControl } from '@ptsecurity/mosaic/form-field';\nimport { merge, Observable, Subject, Subscription } from 'rxjs';\nimport { filter, take } from 'rxjs/operators';\n\nimport { McCalendar } from './calendar';\nimport { McCalendarCellCssClasses } from './calendar-body';\nimport { mcDatepickerAnimations } from './datepicker-animations';\nimport { createMissingDateImplError } from './datepicker-errors';\nimport { McDatepickerInput } from './datepicker-input';\n\n\n/** Used to generate a unique ID for each datepicker instance. */\nlet datepickerUid = 0;\n\n/** Injection token that determines the scroll handling while the calendar is open. */\nexport const MC_DATEPICKER_SCROLL_STRATEGY =\n    new InjectionToken<() => IScrollStrategy>('mc-datepicker-scroll-strategy');\n\n/** @docs-private */\n// tslint:disable-next-line:naming-convention\nexport function MC_DATEPICKER_SCROLL_STRATEGY_FACTORY(overlay: Overlay): () => IScrollStrategy {\n    return () => overlay.scrollStrategies.reposition();\n}\n\n/** @docs-private */\nexport const MC_DATEPICKER_SCROLL_STRATEGY_FACTORY_PROVIDER = {\n    provide: MC_DATEPICKER_SCROLL_STRATEGY,\n    deps: [Overlay],\n    useFactory: MC_DATEPICKER_SCROLL_STRATEGY_FACTORY\n};\n\n// Boilerplate for applying mixins to McDatepickerContent.\n/** @docs-private */\nexport class McDatepickerContentBase {\n    // tslint:disable-next-line:naming-convention\n    constructor(public _elementRef: ElementRef) {\n    }\n}\n\n// tslint:disable-next-line:naming-convention\nexport const McDatepickerContentMixinBase: CanColorCtor & typeof McDatepickerContentBase =\n    mixinColor(McDatepickerContentBase);\n\n/**\n * Component used as the content for the datepicker dialog and popup. We use this instead of using\n * McCalendar directly as the content so we can control the initial focus. This also gives us a\n * place to put additional features of the popup that are not part of the calendar itself in the\n * future. (e.g. confirmation buttons).\n * @docs-private\n */\n@Component({\n    selector: 'mc-datepicker__content',\n    templateUrl: 'datepicker-content.html',\n    styleUrls: ['datepicker-content.css'],\n    host: {\n        class: 'mc-datepicker__content',\n        '[@transformPanel]': '\"enter\"'\n    },\n    animations: [\n        mcDatepickerAnimations.transformPanel,\n        mcDatepickerAnimations.fadeInCalendar\n    ],\n    exportAs: 'mcDatepickerContent',\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    inputs: ['color']\n})\nexport class McDatepickerContent<D> extends McDatepickerContentMixinBase\n    implements AfterViewInit, CanColor {\n\n    /** Reference to the internal calendar component. */\n    @ViewChild(McCalendar) calendar: McCalendar<D>;\n\n    /** Reference to the datepicker that created the overlay. */\n    datepicker: McDatepicker<D>;\n\n    /** Whether the datepicker is above or below the input. */\n    isAbove: boolean;\n\n    constructor(elementRef: ElementRef) {\n        super(elementRef);\n    }\n\n    ngAfterViewInit() {\n        this.calendar.focusActiveCell();\n    }\n}\n\n\n// TODO: We use a component instead of a directive here so the user can use implicit\n// template reference variables (e.g. #d vs #d=\"mcDatepicker\"). We can change this to a directive\n// if angular adds support for `exportAs: '$implicit'` on directives.\n/** Component responsible for managing the datepicker popup/dialog. */\n@Component({\n    selector: 'mc-datepicker',\n    template: '',\n    exportAs: 'mcDatepicker',\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n    providers: [{ provide: McFormFieldControl, useExisting: McDatepicker }]\n})\nexport class McDatepicker<D> implements OnDestroy, CanColor {\n\n    /** The date to open the calendar to initially. */\n    @Input()\n    get startAt(): D | null {\n        // If an explicit startAt is set we start there, otherwise we start at whatever the currently\n        // selected value is.\n        return this._startAt || (this.datepickerInput ? this.datepickerInput.value : null);\n    }\n\n    set startAt(value: D | null) {\n        this._startAt = this.getValidDateOrNull(this.dateAdapter.deserialize(value));\n    }\n\n    /** Color palette to use on the datepicker's calendar. */\n    @Input()\n    get color(): ThemePalette {\n        // @ts-ignore:next-line\n        return this._color ||\n            (this.datepickerInput ? this.datepickerInput.getThemePalette() : undefined);\n    }\n\n    set color(value: ThemePalette) {\n        this._color = value;\n    }\n\n    /** Whether the datepicker pop-up should be disabled. */\n    @Input()\n    get disabled(): boolean {\n        return this._disabled === undefined && this.datepickerInput ?\n            this.datepickerInput.disabled : !!this._disabled;\n    }\n\n    set disabled(value: boolean) {\n        const newValue = coerceBooleanProperty(value);\n\n        if (newValue !== this._disabled) {\n            this._disabled = newValue;\n            this.disabledChange.next(newValue);\n        }\n    }\n\n    /** Whether the calendar is open. */\n    @Input()\n    get opened(): boolean {\n        return this._opened;\n    }\n\n    set opened(value: boolean) {\n        if (value) {\n            this.open();\n        } else {\n            this.close();\n        }\n    }\n\n    /** The currently selected date. */\n    get selected(): D | null {\n        return this.validSelected;\n    }\n\n    set selected(value: D | null) {\n        this.validSelected = value;\n    }\n\n    /** The minimum selectable date. */\n    get minDate(): D | null {\n        return this.datepickerInput && this.datepickerInput.min;\n    }\n\n    /** The maximum selectable date. */\n    get maxDate(): D | null {\n        return this.datepickerInput && this.datepickerInput.max;\n    }\n\n    get dateFilter(): (date: D | null) => boolean {\n        return this.datepickerInput && this.datepickerInput.dateFilter;\n    }\n\n\n    get value(): D | null {\n        return this.selected;\n    }\n\n    /** An input indicating the type of the custom header component for the calendar, if set. */\n    @Input() calendarHeaderComponent: IComponentType<any>;\n\n    /** The view that the calendar should start in. */\n    @Input() startView: 'month' | 'year' | 'multi-year' = 'month';\n\n    /**\n     * Emits selected year in multiyear view.\n     * This doesn't imply a change on the selected date.\n     */\n    @Output() readonly yearSelected: EventEmitter<D> = new EventEmitter<D>();\n\n    /**\n     * Emits selected month in year view.\n     * This doesn't imply a change on the selected date.\n     */\n    @Output() readonly monthSelected: EventEmitter<D> = new EventEmitter<D>();\n\n    /** Classes to be passed to the date picker panel. Supports the same syntax as `ngClass`. */\n    @Input() panelClass: string | string[];\n\n    /** Function that can be used to add custom CSS classes to dates. */\n    @Input() dateClass: (date: D) => McCalendarCellCssClasses;\n\n    /** Emits when the datepicker has been opened. */\n    @Output('opened') openedStream: EventEmitter<void> = new EventEmitter<void>();\n\n    /** Emits when the datepicker has been closed. */\n    @Output('closed') closedStream: EventEmitter<void> = new EventEmitter<void>();\n\n    /** The id for the datepicker calendar. */\n    id: string = `mc-datepicker-${datepickerUid++}`;\n\n    /** A reference to the overlay when the calendar is opened as a popup. */\n    popupRef: OverlayRef;\n\n    /** The input element this datepicker is associated with. */\n    datepickerInput: McDatepickerInput<D>;\n\n    readonly stateChanges: Observable<void> = new Subject<void>();\n\n    /** Emits when the datepicker is disabled. */\n    readonly disabledChange = new Subject<boolean>();\n\n    /** Emits new selected date when selected date changes. */\n    readonly selectedChanged = new Subject<D>();\n    private scrollStrategy: () => IScrollStrategy;\n    private _startAt: D | null;\n    private _disabled: boolean;\n    private _opened = false;\n    private validSelected: D | null = null;\n    private _color: ThemePalette;\n\n    /** A portal containing the calendar for this datepicker. */\n    private calendarPortal: ComponentPortal<McDatepickerContent<D>>;\n\n    /** Reference to the component instantiated in popup mode. */\n    private popupComponentRef: ComponentRef<McDatepickerContent<D>> | null;\n\n    /** The element that was focused before the datepicker was opened. */\n    private focusedElementBeforeOpen: HTMLElement | null = null;\n\n    /** Subscription to value changes in the associated input element. */\n    private inputSubscription = Subscription.EMPTY;\n\n    constructor(private overlay: Overlay,\n                private ngZone: NgZone,\n                private viewContainerRef: ViewContainerRef,\n                @Inject(MC_DATEPICKER_SCROLL_STRATEGY) scrollStrategy: any,\n                @Optional() private dateAdapter: DateAdapter<D>,\n                @Optional() private dir: Directionality,\n                @Optional() @Inject(DOCUMENT) private document: any) {\n        if (!this.dateAdapter) {\n            throw createMissingDateImplError('DateAdapter');\n        }\n\n        this.scrollStrategy = scrollStrategy;\n    }\n\n    ngOnDestroy() {\n        this.close();\n        this.inputSubscription.unsubscribe();\n        this.disabledChange.complete();\n\n        if (this.popupRef) {\n            this.popupRef.dispose();\n            this.popupComponentRef = null;\n        }\n    }\n\n    /** Selects the given date */\n    select(date: D): void {\n        const oldValue = this.selected;\n        this.selected = date;\n        if (!this.dateAdapter.sameDate(oldValue, this.selected)) {\n            this.selectedChanged.next(date);\n        }\n    }\n\n    /** Emits the selected year in multiyear view */\n    selectYear(normalizedYear: D): void {\n        this.yearSelected.emit(normalizedYear);\n    }\n\n    /** Emits selected month in year view */\n    selectMonth(normalizedMonth: D): void {\n        this.monthSelected.emit(normalizedMonth);\n    }\n\n    /**\n     * Register an input with this datepicker.\n     * @param input The datepicker input to register with this datepicker.\n     */\n    registerInput(input: McDatepickerInput<D>): void {\n        if (this.datepickerInput) {\n            throw Error('A McDatepicker can only be associated with a single input.');\n        }\n        this.datepickerInput = input;\n        this.inputSubscription =\n            this.datepickerInput.valueChange.subscribe((value: D | null) => this.selected = value);\n    }\n\n    /** Open the calendar. */\n    open(): void {\n        if (this._opened || this.disabled) {\n            return;\n        }\n        if (!this.datepickerInput) {\n            throw Error('Attempted to open an McDatepicker with no associated input.');\n        }\n        if (this.document) {\n            this.focusedElementBeforeOpen = this.document.activeElement;\n        }\n\n        this.openAsPopup();\n\n        this._opened = true;\n        this.openedStream.emit();\n    }\n\n    /** Close the calendar. */\n    close(): void {\n        if (!this._opened) {\n            return;\n        }\n\n        if (this.popupRef && this.popupRef.hasAttached()) {\n            this.popupRef.detach();\n        }\n\n        if (this.calendarPortal && this.calendarPortal.isAttached) {\n            this.calendarPortal.detach();\n        }\n\n        const completeClose = () => {\n            // The `_opened` could've been reset already if\n            // we got two events in quick succession.\n            if (this._opened) {\n                this._opened = false;\n                this.closedStream.emit();\n                this.focusedElementBeforeOpen = null;\n            }\n        };\n\n        if (this.focusedElementBeforeOpen &&\n            typeof this.focusedElementBeforeOpen.focus === 'function') {\n            // Because IE moves focus asynchronously, we can't count on it being restored before we've\n            // marked the datepicker as closed. If the event fires out of sequence and the element that\n            // we're refocusing opens the datepicker on focus, the user could be stuck with not being\n            // able to close the calendar at all. We work around it by making the logic, that marks\n            // the datepicker as closed, async as well.\n            this.focusedElementBeforeOpen.focus();\n            setTimeout(completeClose);\n        } else {\n            completeClose();\n        }\n    }\n\n    /** Open the calendar as a popup. */\n    private openAsPopup(): void {\n        if (!this.calendarPortal) {\n            this.calendarPortal = new ComponentPortal<McDatepickerContent<D>>(McDatepickerContent,\n                this.viewContainerRef);\n        }\n\n        if (!this.popupRef) {\n            this.createPopup();\n        }\n\n        if (!this.popupRef.hasAttached()) {\n            this.popupComponentRef = this.popupRef.attach(this.calendarPortal);\n            this.popupComponentRef.instance.datepicker = this;\n            this.setColor();\n\n            // Update the position once the calendar has rendered.\n            this.ngZone.onStable.asObservable().pipe(take(1)).subscribe(() => {\n                this.popupRef.updatePosition();\n            });\n        }\n    }\n\n    /** Create the popup. */\n    private createPopup(): void {\n        const overlayConfig = new OverlayConfig({\n            positionStrategy: this.createPopupPositionStrategy(),\n            hasBackdrop: true,\n            backdropClass: 'mc-overlay-transparent-backdrop',\n            direction: this.dir,\n            scrollStrategy: this.scrollStrategy(),\n            panelClass: 'mc-datepicker__popup'\n        });\n\n        this.popupRef = this.overlay.create(overlayConfig);\n        this.popupRef.overlayElement.setAttribute('role', 'dialog');\n\n        merge(\n            this.popupRef.backdropClick(),\n            this.popupRef.detachments(),\n            this.popupRef.keydownEvents().pipe(filter((event) => {\n                // Closing on alt + up is only valid when there's an input associated with the datepicker.\n                // tslint:disable-next-line:deprecation\n                return event.keyCode === ESCAPE || (this.datepickerInput && event.altKey && event.keyCode === UP_ARROW);\n            }))\n        ).subscribe(() => this.close());\n    }\n\n    /** Create the popup PositionStrategy. */\n    private createPopupPositionStrategy(): IPositionStrategy {\n        return this.overlay.position()\n            .flexibleConnectedTo(this.datepickerInput.elementRef)\n            .withTransformOriginOn('.mc-datepicker__content')\n            .withFlexibleDimensions(false)\n            .withViewportMargin(8)\n            .withLockedPosition()\n            .withPositions([\n                {\n                    originX: 'start',\n                    originY: 'bottom',\n                    overlayX: 'start',\n                    overlayY: 'top'\n                },\n                {\n                    originX: 'start',\n                    originY: 'top',\n                    overlayX: 'start',\n                    overlayY: 'bottom'\n                },\n                {\n                    originX: 'end',\n                    originY: 'bottom',\n                    overlayX: 'end',\n                    overlayY: 'top'\n                },\n                {\n                    originX: 'end',\n                    originY: 'top',\n                    overlayX: 'end',\n                    overlayY: 'bottom'\n                }\n            ]);\n    }\n\n    /**\n     * @param obj The object to check.\n     * @returns The given object if it is both a date instance and valid, otherwise null.\n     */\n    private getValidDateOrNull(obj: any): D | null {\n        return (this.dateAdapter.isDateInstance(obj) && this.dateAdapter.isValid(obj)) ? obj : null;\n    }\n\n    /** Passes the current theme color along to the calendar overlay. */\n    private setColor(): void {\n        const color = this.color;\n        if (this.popupComponentRef) {\n            this.popupComponentRef.instance.color = color;\n        }\n    }\n}\n","// tslint:disable:no-empty\nimport {\n    Directive,\n    ElementRef,\n    EventEmitter,\n    forwardRef,\n    Inject,\n    Input,\n    OnDestroy,\n    Optional,\n    Output\n} from '@angular/core';\nimport {\n    AbstractControl,\n    ControlValueAccessor,\n    NG_VALIDATORS,\n    NG_VALUE_ACCESSOR,\n    ValidationErrors,\n    Validator,\n    ValidatorFn,\n    Validators\n} from '@angular/forms';\nimport { coerceBooleanProperty } from '@ptsecurity/cdk/coercion';\nimport { DateAdapter, MC_DATE_FORMATS, McDateFormats } from '@ptsecurity/cdk/datetime';\nimport { DOWN_ARROW } from '@ptsecurity/cdk/keycodes';\nimport { ThemePalette } from '@ptsecurity/mosaic/core';\nimport { McFormField } from '@ptsecurity/mosaic/form-field';\nimport { MC_INPUT_VALUE_ACCESSOR } from '@ptsecurity/mosaic/input';\nimport { Subscription } from 'rxjs';\n\nimport { McDatepicker } from './datepicker';\nimport { createMissingDateImplError } from './datepicker-errors';\n\n\n/** @docs-private */\nexport const MC_DATEPICKER_VALUE_ACCESSOR: any = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => McDatepickerInput),\n    multi: true\n};\n\n/** @docs-private */\nexport const MC_DATEPICKER_VALIDATORS: any = {\n    provide: NG_VALIDATORS,\n    useExisting: forwardRef(() => McDatepickerInput),\n    multi: true\n};\n\n\n/**\n * An event used for datepicker input and change events. We don't always have access to a native\n * input or change event because the event may have been triggered by the user clicking on the\n * calendar popup. For consistency, we always use McDatepickerInputEvent instead.\n */\nexport class McDatepickerInputEvent<D> {\n    /** The new value for the target datepicker input. */\n    value: D | null;\n\n    constructor(\n        /** Reference to the datepicker input component that emitted the event. */\n        public target: McDatepickerInput<D>,\n        /** Reference to the native input element associated with the datepicker input. */\n        public targetElement: HTMLElement) {\n        this.value = this.target.value;\n    }\n}\n\n\n/** Directive used to connect an input to a McDatepicker. */\n@Directive({\n    selector: 'input[mcDatepicker]',\n    providers: [\n        MC_DATEPICKER_VALUE_ACCESSOR,\n        MC_DATEPICKER_VALIDATORS,\n        { provide: MC_INPUT_VALUE_ACCESSOR, useExisting: McDatepickerInput }\n    ],\n    host: {\n        '[attr.aria-haspopup]': 'true',\n        '[attr.aria-owns]': '(datepicker?.opened && datepicker.id) || null',\n        '[attr.min]': 'min ? dateAdapter.toIso8601(min) : null',\n        '[attr.max]': 'max ? dateAdapter.toIso8601(max) : null',\n        '[disabled]': 'disabled',\n        '(input)': 'onInput($event.target.value)',\n        '(change)': 'onChange()',\n        '(blur)': 'onBlur()',\n        '(keydown)': 'onKeydown($event)'\n    },\n    exportAs: 'mcDatepickerInput'\n})\nexport class McDatepickerInput<D> implements ControlValueAccessor, OnDestroy, Validator {\n    /** The datepicker that this input is associated with. */\n    @Input()\n    set mcDatepicker(value: McDatepicker<D>) {\n        if (!value) {\n            return;\n        }\n\n        this.datepicker = value;\n        this.datepicker.registerInput(this);\n        this.datepickerSubscription.unsubscribe();\n\n        this.datepickerSubscription = this.datepicker.selectedChanged.subscribe((selected: D) => {\n            this.value = selected;\n            this.cvaOnChange(selected);\n            this.onTouched();\n            this.dateInput.emit(new McDatepickerInputEvent(this, this.elementRef.nativeElement));\n            this.dateChange.emit(new McDatepickerInputEvent(this, this.elementRef.nativeElement));\n        });\n    }\n\n    /** Function that can be used to filter out dates within the datepicker. */\n    @Input()\n    set mcDatepickerFilter(value: (date: D | null) => boolean) {\n        this.dateFilter = value;\n        this.validatorOnChange();\n    }\n\n    /** The value of the input. */\n    @Input()\n    get value(): D | null {\n        return this._value;\n    }\n\n    set value(value: D | null) {\n        // tslint:disable-next-line:no-parameter-reassignment\n        value = this.dateAdapter.deserialize(value);\n        this.lastValueValid = !value || this.dateAdapter.isValid(value);\n        // tslint:disable-next-line:no-parameter-reassignment\n        value = this.getValidDateOrNull(value);\n        const oldDate = this.value;\n        this._value = value;\n        this.formatValue(value);\n\n        if (!this.dateAdapter.sameDate(oldDate, value)) {\n            this.valueChange.emit(value);\n        }\n    }\n\n    /** The minimum valid date. */\n    @Input()\n    get min(): D | null {\n        return this._min;\n    }\n\n    set min(value: D | null) {\n        this._min = this.getValidDateOrNull(this.dateAdapter.deserialize(value));\n        this.validatorOnChange();\n    }\n\n    /** The maximum valid date. */\n    @Input()\n    get max(): D | null {\n        return this._max;\n    }\n\n    set max(value: D | null) {\n        this._max = this.getValidDateOrNull(this.dateAdapter.deserialize(value));\n        this.validatorOnChange();\n    }\n\n    /** Whether the datepicker-input is disabled. */\n    @Input()\n    get disabled(): boolean {\n        return !!this._disabled;\n    }\n\n    set disabled(value: boolean) {\n        const newValue = coerceBooleanProperty(value);\n        const element = this.elementRef.nativeElement;\n\n        if (this._disabled !== newValue) {\n            this._disabled = newValue;\n            this.disabledChange.emit(newValue);\n        }\n\n        // We need to null check the `blur` method, because it's undefined during SSR.\n        if (newValue && element.blur) {\n            // Normally, native input elements automatically blur if they turn disabled. This behavior\n            // is problematic, because it would mean that it triggers another change detection cycle,\n            // which then causes a changed after checked error if the input element was focused before.\n            element.blur();\n        }\n    }\n\n    datepicker: McDatepicker<D>;\n    dateFilter: (date: D | null) => boolean;\n\n    /** Emits when a `change` event is fired on this `<input>`. */\n    @Output() readonly dateChange: EventEmitter<McDatepickerInputEvent<D>> =\n        new EventEmitter<McDatepickerInputEvent<D>>();\n\n    /** Emits when an `input` event is fired on this `<input>`. */\n    @Output() readonly dateInput: EventEmitter<McDatepickerInputEvent<D>> =\n        new EventEmitter<McDatepickerInputEvent<D>>();\n\n    /** Emits when the value changes (either due to user input or programmatic change). */\n    valueChange = new EventEmitter<D | null>();\n\n    /** Emits when the disabled state has changed */\n    disabledChange = new EventEmitter<boolean>();\n    private _value: D | null;\n    private _min: D | null;\n    private _max: D | null;\n    private _disabled: boolean;\n\n    private datepickerSubscription = Subscription.EMPTY;\n\n    private localeSubscription = Subscription.EMPTY;\n\n    /** Whether the last value set on the input was valid. */\n    private lastValueValid = false;\n\n    constructor(\n        public elementRef: ElementRef<HTMLInputElement>,\n        @Optional() public dateAdapter: DateAdapter<D>,\n        @Optional() @Inject(MC_DATE_FORMATS) private dateFormats: McDateFormats,\n        @Optional() private formField: McFormField\n    ) {\n        if (!this.dateAdapter) {\n            throw createMissingDateImplError('DateAdapter');\n        }\n\n        if (!this.dateFormats) {\n            throw createMissingDateImplError('MC_DATE_FORMATS');\n        }\n\n        // Update the displayed date when the locale changes.\n        this.localeSubscription = dateAdapter.localeChanges.subscribe(() => {\n            this.value = this.value;\n        });\n    }\n\n    onTouched = () => {\n    }\n\n    ngOnDestroy() {\n        this.datepickerSubscription.unsubscribe();\n        this.localeSubscription.unsubscribe();\n        this.valueChange.complete();\n        this.disabledChange.complete();\n    }\n\n    /** @docs-private */\n    registerOnValidatorChange(fn: () => void): void {\n        this.validatorOnChange = fn;\n    }\n\n    /** @docs-private */\n    validate(c: AbstractControl): ValidationErrors | null {\n        return this.validator ? this.validator(c) : null;\n    }\n\n    // Implemented as part of ControlValueAccessor.\n    writeValue(value: D): void {\n        this.value = value;\n    }\n\n    // Implemented as part of ControlValueAccessor.\n    registerOnChange(fn: (value: any) => void): void {\n        this.cvaOnChange = fn;\n    }\n\n    // Implemented as part of ControlValueAccessor.\n    registerOnTouched(fn: () => void): void {\n        this.onTouched = fn;\n    }\n\n    // Implemented as part of ControlValueAccessor.\n    setDisabledState(isDisabled: boolean): void {\n        this.disabled = isDisabled;\n    }\n\n    onKeydown(event: KeyboardEvent) {\n        // tslint:disable-next-line:deprecation\n        const isAltDownArrow = event.altKey && event.keyCode === DOWN_ARROW;\n\n        if (this.datepicker && isAltDownArrow && !this.elementRef.nativeElement.readOnly) {\n            this.datepicker.open();\n            event.preventDefault();\n        }\n    }\n\n    onInput(value: string) {\n        let date = this.dateAdapter.parse(value, this.dateFormats.parse.dateInput);\n        this.lastValueValid = !date || this.dateAdapter.isValid(date);\n        date = this.getValidDateOrNull(date);\n\n        if (!this.dateAdapter.sameDate(date, this._value)) {\n            this._value = date;\n            this.cvaOnChange(date);\n            this.valueChange.emit(date);\n            this.dateInput.emit(new McDatepickerInputEvent(this, this.elementRef.nativeElement));\n        }\n    }\n\n    onChange() {\n        this.dateChange.emit(new McDatepickerInputEvent(this, this.elementRef.nativeElement));\n    }\n\n    /** Returns the palette used by the input's form field, if any. */\n    getThemePalette(): ThemePalette | undefined {\n        return this.formField ? this.formField.color : undefined;\n    }\n\n    /** Handles blur events on the input. */\n    onBlur() {\n        // Reformat the input only if we have a valid value.\n        if (this.value) {\n            this.formatValue(this.value);\n        }\n\n        this.onTouched();\n    }\n\n    private cvaOnChange: (value: any) => void = () => {\n    }\n\n    private validatorOnChange = () => {\n    }\n\n    /** The form control validator for whether the input parses. */\n    private parseValidator: ValidatorFn = (): ValidationErrors | null => {\n        return this.lastValueValid ?\n            null : { mcDatepickerParse: { text: this.elementRef.nativeElement.value } };\n    }\n\n    /** The form control validator for the min date. */\n    private minValidator: ValidatorFn = (control: AbstractControl): ValidationErrors | null => {\n        const controlValue = this.getValidDateOrNull(this.dateAdapter.deserialize(control.value));\n\n        return (!this.min || !controlValue ||\n            this.dateAdapter.compareDate(this.min, controlValue) <= 0) ?\n            null : { mcDatepickerMin: { min: this.min, actual: controlValue } };\n    }\n\n    /** The form control validator for the max date. */\n    private maxValidator: ValidatorFn = (control: AbstractControl): ValidationErrors | null => {\n        const controlValue = this.getValidDateOrNull(this.dateAdapter.deserialize(control.value));\n\n        return (!this.max || !controlValue ||\n            this.dateAdapter.compareDate(this.max, controlValue) >= 0) ?\n            null : { mcDatepickerMax: { max: this.max, actual: controlValue } };\n    }\n\n    /** The form control validator for the date filter. */\n    private filterValidator: ValidatorFn = (control: AbstractControl): ValidationErrors | null => {\n        const controlValue = this.getValidDateOrNull(this.dateAdapter.deserialize(control.value));\n\n        return !this.dateFilter || !controlValue || this.dateFilter(controlValue) ?\n            null : { mcDatepickerFilter: true };\n    }\n\n    /** Formats a value and sets it on the input element. */\n    private formatValue(value: D | null) {\n        this.elementRef.nativeElement.value =\n            value ? this.dateAdapter.format(value, this.dateFormats.display.dateInput) : '';\n    }\n\n    /** The combined form control validator for this input. */\n        // tslint:disable:member-ordering\n    private validator: ValidatorFn | null =\n        Validators.compose([\n            this.parseValidator,\n            this.minValidator,\n            this.maxValidator,\n            this.filterValidator\n        ]);\n\n    /**\n     * @param obj The object to check.\n     * @returns The given object if it is both a date instance and valid, otherwise null.\n     */\n    private getValidDateOrNull(obj: any): D | null {\n        return (this.dateAdapter.isDateInstance(obj) && this.dateAdapter.isValid(obj)) ? obj : null;\n    }\n}\n","import {\n    AfterContentInit,\n    Attribute,\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    ContentChild,\n    Directive,\n    Input,\n    OnChanges,\n    OnDestroy,\n    SimpleChanges,\n    ViewEncapsulation,\n    ViewChild\n} from '@angular/core';\nimport { coerceBooleanProperty } from '@ptsecurity/cdk/coercion';\nimport { McButton } from '@ptsecurity/mosaic/button';\nimport { merge, of as observableOf, Subscription } from 'rxjs';\n\nimport { McDatepicker } from './datepicker';\nimport { McDatepickerIntl } from './datepicker-intl';\n\n\n/** Can be used to override the icon of a `mcDatepickerToggle`. */\n@Directive({\n    selector: '[mcDatepickerToggleIcon]'\n})\nexport class McDatepickerToggleIcon {\n}\n\n\n@Component({\n    selector: 'mc-datepicker-toggle',\n    templateUrl: 'datepicker-toggle.html',\n    styleUrls: ['datepicker-toggle.css'],\n    host: {\n        class: 'mc-datepicker-toggle',\n        // Always set the tabindex to -1 so that it doesn't overlap with any custom tabindex the\n        // consumer may have provided, while still being able to receive focus.\n        '[attr.tabindex]': '-1',\n        '[class.mc-datepicker-toggle_active]': 'datepicker && datepicker.opened',\n        '[class.mc-warn]': 'datepicker && datepicker.color === \"error\"',\n        '(focus)': 'button.focus()'\n    },\n    exportAs: 'mcDatepickerToggle',\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class McDatepickerToggle<D> implements AfterContentInit, OnChanges, OnDestroy {\n\n    /** Whether the toggle button is disabled. */\n    @Input()\n    get disabled(): boolean {\n        return this._disabled === undefined ? this.datepicker.disabled : !!this._disabled;\n    }\n\n    set disabled(value: boolean) {\n        this._disabled = coerceBooleanProperty(value);\n    }\n\n    /** Datepicker instance that the button will toggle. */\n    @Input('for') datepicker: McDatepicker<D>;\n\n    /** Tabindex for the toggle. */\n    @Input() tabIndex: number | null;\n\n    /** Custom icon set by the consumer. */\n    @ContentChild(McDatepickerToggleIcon) customIcon: McDatepickerToggleIcon;\n\n    /** Underlying button element. */\n    @ViewChild('button') button: McButton;\n    private stateChanges = Subscription.EMPTY;\n\n    private _disabled: boolean;\n\n    constructor(\n        public intl: McDatepickerIntl,\n        private changeDetectorRef: ChangeDetectorRef,\n        @Attribute('tabindex') defaultTabIndex: string\n    ) {\n        const parsedTabIndex = Number(defaultTabIndex);\n        this.tabIndex = (parsedTabIndex || parsedTabIndex === 0) ? parsedTabIndex : null;\n    }\n\n    ngOnChanges(changes: SimpleChanges) {\n        if (changes.datepicker) {\n            this.watchStateChanges();\n        }\n    }\n\n    ngOnDestroy() {\n        this.stateChanges.unsubscribe();\n    }\n\n    ngAfterContentInit() {\n        this.watchStateChanges();\n    }\n\n    open(event: Event): void {\n        if (this.datepicker && !this.disabled) {\n            this.datepicker.open();\n            event.stopPropagation();\n        }\n    }\n\n    private watchStateChanges() {\n        const datepickerDisabled = this.datepicker ? this.datepicker.disabledChange : observableOf();\n        const inputDisabled = this.datepicker && this.datepicker.datepickerInput ?\n            this.datepicker.datepickerInput.disabledChange : observableOf();\n        const datepickerToggled = this.datepicker ?\n            merge(this.datepicker.openedStream, this.datepicker.closedStream) :\n            observableOf();\n\n        this.stateChanges.unsubscribe();\n        this.stateChanges = merge(\n            this.intl.changes,\n            datepickerDisabled,\n            inputDisabled,\n            datepickerToggled\n        ).subscribe(() => this.changeDetectorRef.markForCheck());\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { A11yModule } from '@ptsecurity/cdk/a11y';\nimport { OverlayModule } from '@ptsecurity/cdk/overlay';\nimport { PortalModule } from '@ptsecurity/cdk/portal';\nimport { McButtonModule } from '@ptsecurity/mosaic/button';\nimport { McIconModule } from '@ptsecurity/mosaic/icon';\n\nimport { McCalendar, McCalendarHeader } from './calendar';\nimport { McCalendarBody } from './calendar-body';\nimport {\n    McDatepicker,\n    McDatepickerContent,\n    MC_DATEPICKER_SCROLL_STRATEGY_FACTORY_PROVIDER\n} from './datepicker';\nimport { McDatepickerInput } from './datepicker-input';\nimport { McDatepickerIntl } from './datepicker-intl';\nimport { McDatepickerToggle, McDatepickerToggleIcon } from './datepicker-toggle';\nimport { McMonthView } from './month-view';\nimport { McMultiYearView } from './multi-year-view';\nimport { McYearView } from './year-view';\n\n\n@NgModule({\n    imports: [\n        CommonModule,\n        McButtonModule,\n        OverlayModule,\n        A11yModule,\n        PortalModule,\n        McButtonModule,\n        McIconModule\n    ],\n    exports: [\n        McCalendar,\n        McCalendarBody,\n        McDatepicker,\n        McDatepickerContent,\n        McDatepickerInput,\n        McDatepickerToggle,\n        McDatepickerToggleIcon,\n        McMonthView,\n        McYearView,\n        McMultiYearView,\n        McCalendarHeader\n    ],\n    declarations: [\n        McCalendar,\n        McCalendarBody,\n        McDatepicker,\n        McDatepickerContent,\n        McDatepickerInput,\n        McDatepickerToggle,\n        McDatepickerToggleIcon,\n        McMonthView,\n        McYearView,\n        McMultiYearView,\n        McCalendarHeader\n    ],\n    providers: [\n        McDatepickerIntl,\n        MC_DATEPICKER_SCROLL_STRATEGY_FACTORY_PROVIDER\n    ],\n    entryComponents: [\n        McDatepickerContent,\n        McCalendarHeader\n    ]\n})\nexport class McDatepickerModule {\n}\n","import { ChangeDetectionStrategy, Component, Input, ViewEncapsulation } from '@angular/core';\nimport { coerceBooleanProperty } from '@ptsecurity/cdk/coercion';\n\n\n@Component({\n    selector: 'mc-divider',\n    host: {\n        class: 'mc-divider',\n        role: 'separator',\n        '[attr.aria-orientation]': 'vertical ? \"vertical\" : \"horizontal\"',\n        '[class.mc-divider-vertical]': 'vertical',\n        '[class.mc-divider-inset]': 'inset'\n    },\n    template: '',\n    styleUrls: ['divider.css'],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    preserveWhitespaces: false\n})\nexport class McDivider {\n    // Whether the divider is vertically aligned.\n    @Input()\n    get vertical(): boolean {\n        return this._vertical;\n    }\n\n    set vertical(value: boolean) {\n        this._vertical = coerceBooleanProperty(value);\n    }\n\n    private _vertical: boolean = false;\n\n    // Whether the divider is an inset divider.\n    @Input()\n    get inset(): boolean {\n        return this._inset;\n    }\n\n    set inset(value: boolean) {\n        this._inset = coerceBooleanProperty(value);\n    }\n\n    private _inset: boolean = false;\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { McDivider } from './divider.component';\n\n\n@NgModule({\n    imports: [CommonModule],\n    exports: [McDivider],\n    declarations: [McDivider]\n})\nexport class McDividerModule {\n}\n","import { DOCUMENT } from '@angular/common';\nimport {\n    Directive,\n    TemplateRef,\n    ComponentFactoryResolver,\n    ApplicationRef,\n    Injector,\n    ViewContainerRef,\n    Inject,\n    OnDestroy\n} from '@angular/core';\nimport { TemplatePortal, DomPortalOutlet } from '@ptsecurity/cdk/portal';\nimport { Subject } from 'rxjs';\n\n\n/**\n * Dropdown content that will be rendered lazily once the dropdown is opened.\n */\n@Directive({\n    selector: 'ng-template[mcDropdownContent]'\n})\nexport class McDropdownContent implements OnDestroy {\n\n    /** Emits when the dropdown content has been attached. */\n    _attached = new Subject<void>();\n    private _portal: TemplatePortal;\n    private _outlet: DomPortalOutlet;\n\n    constructor(\n        private _template: TemplateRef<any>,\n        private _componentFactoryResolver: ComponentFactoryResolver,\n        private _appRef: ApplicationRef,\n        private _injector: Injector,\n        private _viewContainerRef: ViewContainerRef,\n        @Inject(DOCUMENT) private _document: any) {}\n\n    /**\n     * Attaches the content with a particular context.\n     * @docs-private\n     */\n    attach(context: any = {}) {\n        if (!this._portal) {\n            this._portal = new TemplatePortal(this._template, this._viewContainerRef);\n        }\n\n        this.detach();\n\n        if (!this._outlet) {\n            this._outlet = new DomPortalOutlet(this._document.createElement('div'),\n                this._componentFactoryResolver, this._appRef, this._injector);\n        }\n\n        const element: HTMLElement = this._template.elementRef.nativeElement;\n\n        // Because we support opening the same dropdown from different triggers (which in turn have their\n        // own `OverlayRef` panel), we have to re-insert the host element every time, otherwise we\n        // risk it staying attached to a pane that's no longer in the DOM.\n        element.parentNode!.insertBefore(this._outlet.outletElement, element);\n        this._portal.attach(this._outlet, context);\n        this._attached.next();\n    }\n\n    /**\n     * Detaches the content.\n     * @docs-private\n     */\n    detach() {\n        if (this._portal.isAttached) {\n            this._portal.detach();\n        }\n    }\n\n    ngOnDestroy() {\n        if (this._outlet) {\n            this._outlet.dispose();\n        }\n    }\n}\n","import { EventEmitter, TemplateRef, InjectionToken } from '@angular/core';\nimport { FocusOrigin } from '@ptsecurity/cdk/a11y';\nimport { Direction } from '@ptsecurity/cdk/bidi';\n\nimport { McDropdownContent } from './dropdown-content';\nimport { DropdownPositionX, DropdownPositionY } from './dropdown-positions';\n\n\n/**\n * Injection token used to provide the parent dropdown to dropdown-specific components.\n * @docs-private\n */\nexport const MC_DROPDOWN_PANEL = new InjectionToken<McDropdownPanel>('MC_DROPDOWN_PANEL');\n\n/**\n * Interface for a custom dropdown panel that can be used with `mcDropdownTriggerFor`.\n * @docs-private\n */\n// tslint:disable-next-line:interface-name\nexport interface McDropdownPanel<T = any> {\n    xPosition: DropdownPositionX;\n    yPosition: DropdownPositionY;\n    overlapTrigger: boolean;\n    templateRef: TemplateRef<any>;\n    closed: EventEmitter<void | 'click' | 'keydown' | 'tab'>;\n    direction?: Direction;\n    lazyContent?: McDropdownContent;\n    backdropClass?: string;\n    hasBackdrop?: boolean;\n    focusFirstItem(origin?: FocusOrigin): void;\n    resetActiveItem(): void;\n    setPositionClasses?(x: DropdownPositionX, y: DropdownPositionY): void;\n    addItem?(item: T): void;\n    removeItem?(item: T): void;\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { McIconModule } from '@ptsecurity/mosaic/icon';\n\nimport { McCleaner } from './cleaner';\nimport { McFormField, McFormFieldWithoutBorders } from './form-field';\nimport { McHint } from './hint';\nimport { McPrefix } from './prefix';\nimport { McStepper } from './stepper';\nimport { McSuffix } from './suffix';\n\n\n@NgModule({\n    declarations: [\n        McFormField,\n        McFormFieldWithoutBorders,\n        McHint,\n        McPrefix,\n        McSuffix,\n        McCleaner,\n        McStepper\n    ],\n    imports: [CommonModule, McIconModule],\n    exports: [\n        McFormField,\n        McFormFieldWithoutBorders,\n        McHint,\n        McPrefix,\n        McSuffix,\n        McCleaner,\n        McStepper\n    ]\n})\nexport class McFormFieldModule {\n}\n","import { InjectionToken } from '@angular/core';\n\n\nexport const MC_INPUT_VALUE_ACCESSOR =\n    new InjectionToken<{ value: any }>('MC_INPUT_VALUE_ACCESSOR');\n","function sanitizeNumber(value: number): number | null {\n    return !isFinite(value) || isNaN(value)\n        ? null\n        : value;\n}\n\nfunction getPrecision(value: number): number {\n    const arr = value.toString().split('.');\n\n    return arr.length === 1\n        ? 1\n        // tslint:disable-next-line:no-magic-numbers\n        :  Math.pow(10, arr[1].length);\n}\n\nfunction add(value1: number, value2: number) {\n    const precision = Math.max(getPrecision(value1), getPrecision(value2));\n\n    const res = (value1 * precision + value2 * precision) / precision;\n\n    return sanitizeNumber(res);\n}\n\nexport const stepUp = (value: number | null,\n                       max: number,\n                       min: number,\n                       step: number\n): number | null => {\n    let res;\n\n    if (value === null) {\n        res = add(min, step);\n\n        return res === null ? null : Math.min(res, max);\n    }\n\n    res = add(value, step);\n\n    return res === null ? null : Math.max(Math.min(res, max), min);\n};\n\nexport const stepDown = (value: number | null,\n                         max: number,\n                         min: number,\n                         step: number\n): number | null => {\n    let res;\n\n    if (value === null) {\n        res = add(max, -step);\n\n        return res === null ? null : Math.max(res, min);\n    }\n\n    res = add(value, -step);\n\n    return res === null ? null : Math.min(Math.max(res, min), max);\n};\n","import {\n    Attribute,\n    Directive, DoCheck, ElementRef, Inject, Input, OnChanges,\n    OnDestroy, Optional, Self\n} from '@angular/core';\nimport {\n    FormGroupDirective,\n    NgControl,\n    NgForm, NgModel\n} from '@angular/forms';\nimport { coerceBooleanProperty } from '@ptsecurity/cdk/coercion';\nimport {\n    END, C, V, X, A, DELETE, BACKSPACE, TAB, ENTER,\n    ESCAPE, ZERO, NINE, NUMPAD_ZERO, NUMPAD_NINE, NUMPAD_MINUS, DASH,\n    FF_MINUS, LEFT_ARROW, RIGHT_ARROW, HOME, UP_ARROW, DOWN_ARROW, F1, F12\n} from '@ptsecurity/cdk/keycodes';\nimport { getSupportedInputTypes, Platform } from '@ptsecurity/cdk/platform';\nimport {\n    CanUpdateErrorState,\n    CanUpdateErrorStateCtor,\n    ErrorStateMatcher,\n    mixinErrorState\n} from '@ptsecurity/mosaic/core';\nimport { McFormFieldControl, McFormFieldNumberControl } from '@ptsecurity/mosaic/form-field';\nimport { Subject } from 'rxjs';\n\nimport { getMcInputUnsupportedTypeError } from './input-errors';\nimport { MC_INPUT_VALUE_ACCESSOR } from './input-value-accessor';\nimport { stepDown, stepUp } from './stepperUtils';\n\n\nconst MC_INPUT_INVALID_TYPES = [\n    'button',\n    'checkbox',\n    'file',\n    'hidden',\n    'image',\n    'radio',\n    'range',\n    'reset',\n    'submit'\n];\n\nexport const BIG_STEP = 10;\nexport const SMALL_STEP = 1;\n\nlet nextUniqueId = 0;\n\nexport class McInputBase {\n    constructor(public defaultErrorStateMatcher: ErrorStateMatcher,\n                public parentForm: NgForm,\n                public parentFormGroup: FormGroupDirective,\n                public ngControl: NgControl) {\n    }\n}\n\nexport const _McInputMixinBase: CanUpdateErrorStateCtor & typeof McInputBase = mixinErrorState(McInputBase);\n\n\n@Directive({\n    selector: `input[mcInput][type=\"number\"]`,\n    exportAs: 'mcNumericalInput',\n    providers: [NgModel, { provide: McFormFieldNumberControl, useExisting: McNumberInput }],\n    host: {\n        '(blur)': '_focusChanged(false)',\n        '(focus)': '_focusChanged(true)',\n        '(paste)': 'onPaste($event)',\n        '(keydown)': 'onKeyDown($event)'\n    }\n})\nexport class McNumberInput implements McFormFieldNumberControl<any> {\n\n    /**\n     * Implemented as part of McFormFieldNumberControl.\n     * @docs-private\n     */\n    @Input()\n    bigStep: number;\n\n    /**\n     * Implemented as part of McFormFieldNumberControl.\n     * @docs-private\n     */\n    @Input()\n    step: number;\n\n    @Input()\n    min: number;\n\n    @Input()\n    max: number;\n\n    /**\n     * Implemented as part of McFormFieldNumberControl.\n     * @docs-private\n     */\n    value: any;\n\n    /**\n     * Implemented as part of McFormFieldNumberControl.\n     * @docs-private\n     */\n    focused: boolean = false;\n\n    /**\n     * Implemented as part of McFormFieldNumberControl.\n     * @docs-private\n     */\n    readonly stateChanges: Subject<void> = new Subject<void>();\n\n    private readonly _host: HTMLInputElement;\n\n    constructor(\n        private _platform: Platform ,\n        private _elementRef: ElementRef,\n        private _model: NgModel,\n        @Attribute('step') step: string,\n        @Attribute('big-step') bigStep: string,\n        @Attribute('min') min: string,\n        @Attribute('max') max: string\n    ) {\n        this.step = this.isDigit(step) ? parseFloat(step) : SMALL_STEP;\n        this.bigStep = this.isDigit(bigStep) ? parseFloat(bigStep) : BIG_STEP;\n        this.min = this.isDigit(min) ? parseFloat(min) : -Infinity;\n        this.max = this.isDigit(max) ? parseFloat(max) : Infinity;\n\n        this._host = this._elementRef.nativeElement;\n\n        const self = this;\n\n        if ('valueAsNumber' in this._host) {\n            Object.defineProperty(Object.getPrototypeOf(this._host), 'valueAsNumber', {\n                // tslint:disable-next-line:no-reserved-keywords\n                get() {\n                    const res = parseFloat(self.normalizeSplitter(this.value));\n\n                    return isNaN(res) ? null : res;\n                }\n            });\n        }\n    }\n\n    _focusChanged(isFocused: boolean) {\n        if (isFocused !== this.focused) {\n            this.focused = isFocused;\n            this.stateChanges.next();\n        }\n    }\n\n    onKeyDown(event: KeyboardEvent) {\n        // tslint:disable-next-line:deprecation\n        const keyCode = event.keyCode;\n\n        const isCtrlA = (e) => e.keyCode === A && (e.ctrlKey || e.metaKey);\n        const isCtrlC = (e) => e.keyCode === C && (e.ctrlKey || e.metaKey);\n        const isCtrlV = (e) => e.keyCode === V && (e.ctrlKey || e.metaKey);\n        const isCtrlX = (e) => e.keyCode === X && (e.ctrlKey || e.metaKey);\n\n        const isFKey = (e) => e.keyCode >= F1 && e.keyCode <= F12;\n\n        const isNumber = (e) => (e.keyCode >= ZERO && e.keyCode <= NINE) ||\n            (e.keyCode >= NUMPAD_ZERO && e.keyCode <= NUMPAD_NINE);\n\n        const minuses = [NUMPAD_MINUS, DASH, FF_MINUS];\n        const serviceKeys = [DELETE, BACKSPACE, TAB, ESCAPE, ENTER];\n        const arrows = [LEFT_ARROW, RIGHT_ARROW];\n        const allowedKeys =  [HOME, END].concat(arrows).concat(serviceKeys).concat(minuses);\n\n        const isIEPeriod = (e) => e.key === '.' || e.key === 'Decimal';\n        const isNotIEPeriod = (e) => e.key === '.' || e.key === ',';\n\n        // Decimal is for IE\n        const isPeriod = (e) => this._platform.EDGE || this._platform.TRIDENT\n            ? isIEPeriod(e)\n            : isNotIEPeriod(e);\n\n        if (allowedKeys.indexOf(keyCode) !== -1 ||\n            isCtrlA(event) ||\n            isCtrlC(event) ||\n            isCtrlV(event) ||\n            isCtrlX(event) ||\n            isFKey(event) ||\n            isPeriod(event)\n        ) {\n            // let it happen, don't do anything\n            return;\n        }\n        // Ensure that it is not a number and stop the keypress\n        if (event.shiftKey || !isNumber(event)) {\n            event.preventDefault();\n\n            // process steps\n            const step = event.shiftKey ? this.bigStep : this.step;\n\n            if (keyCode === UP_ARROW) {\n                this.stepUp(step);\n            }\n\n            if (keyCode === DOWN_ARROW) {\n                this.stepDown(step);\n            }\n        }\n    }\n\n    onPaste(event) {\n        let value = event.clipboardData.getData('text');\n        value = this.normalizeSplitter(value);\n\n        if (!this.isDigit(value)) {\n            event.preventDefault();\n        }\n    }\n\n    stepUp(step: number) {\n        this._elementRef.nativeElement.focus();\n        const res = stepUp(this._host.valueAsNumber, this.max, this.min, step);\n        this._host.value = res === null ? '' : res.toString();\n        this._model.update.emit(this._host.valueAsNumber);\n    }\n\n    stepDown(step: number) {\n        this._elementRef.nativeElement.focus();\n        const res = stepDown(this._host.valueAsNumber, this.max, this.min, step);\n        this._host.value = res === null ? '' : res.toString();\n        this._model.update.emit(this._host.valueAsNumber);\n    }\n\n    private normalizeSplitter(value: string): string {\n        return value ? value.replace(/,/g, '.') : value;\n    }\n\n    private isDigit(value: string): boolean {\n        return this.isFloat(value) || this.isInt(value);\n    }\n\n    private isFloat(value: string): boolean {\n        return /^-?\\d+\\.\\d+$/.test(value);\n    }\n\n    private isInt(value: string): boolean {\n        return /^-?\\d+$/.test(value);\n    }\n}\n\n@Directive({\n    selector: `input[mcInput]`,\n    exportAs: 'mcInput',\n    host: {\n        class: 'mc-input',\n        // Native input properties that are overwritten by Angular inputs need to be synced with\n        // the native input element. Otherwise property bindings for those don't work.\n        '[attr.id]': 'id',\n        '[attr.placeholder]': 'placeholder',\n        '[disabled]': 'disabled',\n        '[required]': 'required',\n        '(blur)': '_focusChanged(false)',\n        '(focus)': '_focusChanged(true)',\n        '(input)': '_onInput()'\n    },\n    providers: [{ provide: McFormFieldControl, useExisting: McInput }]\n})\nexport class McInput extends _McInputMixinBase implements McFormFieldControl<any>, OnChanges,\n    OnDestroy, DoCheck, CanUpdateErrorState {\n\n    /** An object used to control when error messages are shown. */\n    @Input() errorStateMatcher: ErrorStateMatcher;\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    focused: boolean = false;\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    readonly stateChanges: Subject<void> = new Subject<void>();\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    controlType: string = 'mc-input';\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    @Input()\n    get disabled(): boolean {\n        if (this.ngControl && this.ngControl.disabled !== null) {\n            return this.ngControl.disabled;\n        }\n\n        return this._disabled;\n    }\n\n    set disabled(value: boolean) {\n        this._disabled = coerceBooleanProperty(value);\n\n        // Browsers may not fire the blur event if the input is disabled too quickly.\n        // Reset from here to ensure that the element doesn't become stuck.\n        if (this.focused) {\n            this.focused = false;\n            this.stateChanges.next();\n        }\n    }\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    @Input()\n    get id(): string {\n        return this._id;\n    }\n\n    set id(value: string) {\n        this._id = value || this._uid;\n    }\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    @Input() placeholder: string;\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    @Input()\n    get required(): boolean {\n        return this._required;\n    }\n\n    set required(value: boolean) {\n        this._required = coerceBooleanProperty(value);\n    }\n\n    // tslint:disable no-reserved-keywords\n    /** Input type of the element. */\n    @Input()\n    get type(): string {\n        return this._type;\n    }\n\n    set type(value: string) {\n        this._type = value || 'text';\n        this._validateType();\n\n        // When using Angular inputs, developers are no longer able to set the properties on the native\n        // input element. To ensure that bindings for `type` work, we need to sync the setter\n        // with the native property. Textarea elements don't support the type property or attribute.\n        if (getSupportedInputTypes().has(this._type)) {\n            this._elementRef.nativeElement.type = this._type;\n        }\n    }\n    // tslint:enable no-reserved-keywords\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    @Input()\n    get value(): string {\n        return this._inputValueAccessor.value;\n    }\n\n    set value(value: string) {\n        if (value !== this.value) {\n            this._inputValueAccessor.value = value;\n            this.stateChanges.next();\n        }\n    }\n\n    protected _uid = `mc-input-${nextUniqueId++}`;\n    protected _previousNativeValue: any;\n    protected _disabled = false;\n    protected _id: string;\n    protected _required = false;\n    protected _type = 'text';\n    protected _neverEmptyInputTypes = [\n        'date',\n        'datetime',\n        'datetime-local',\n        'month',\n        'time',\n        'week'\n    ].filter((t) => getSupportedInputTypes().has(t));\n\n    private _inputValueAccessor: { value: any };\n\n    constructor(protected _elementRef: ElementRef,\n                @Optional() @Self() public ngControl: NgControl,\n                @Optional() parentForm: NgForm,\n                @Optional() parentFormGroup: FormGroupDirective,\n                defaultErrorStateMatcher: ErrorStateMatcher,\n                @Optional() @Self() @Inject(MC_INPUT_VALUE_ACCESSOR) inputValueAccessor: any) {\n        super(defaultErrorStateMatcher, parentForm, parentFormGroup, ngControl);\n        // If no input value accessor was explicitly specified, use the element as the input value\n        // accessor.\n        this._inputValueAccessor = inputValueAccessor || this._elementRef.nativeElement;\n\n        this._previousNativeValue = this.value;\n\n        // Force setter to be called in case id was not specified.\n        this.id = this.id;\n    }\n\n    ngOnChanges() {\n        this.stateChanges.next();\n    }\n\n    ngOnDestroy() {\n        this.stateChanges.complete();\n    }\n\n    ngDoCheck() {\n        if (this.ngControl) {\n            // We need to re-evaluate this on every change detection cycle, because there are some\n            // error triggers that we can't subscribe to (e.g. parent form submissions). This means\n            // that whatever logic is in here has to be super lean or we risk destroying the performance.\n            this.updateErrorState();\n        }\n\n        // We need to dirty-check the native element's value, because there are some cases where\n        // we won't be notified when it changes (e.g. the consumer isn't using forms or they're\n        // updating the value using `emitEvent: false`).\n        this._dirtyCheckNativeValue();\n    }\n\n    /** Focuses the input. */\n    focus(): void {\n        this._elementRef.nativeElement.focus();\n    }\n\n    /** Callback for the cases where the focused state of the input changes. */\n    _focusChanged(isFocused: boolean) {\n        if (isFocused !== this.focused) {\n            this.focused = isFocused;\n            this.stateChanges.next();\n        }\n    }\n\n    _onInput() {\n        // This is a noop function and is used to let Angular know whenever the value changes.\n        // Angular will run a new change detection each time the `input` event has been dispatched.\n        // It's necessary that Angular recognizes the value change, because when floatingLabel\n        // is set to false and Angular forms aren't used, the placeholder won't recognize the\n        // value changes and will not disappear.\n        // Listening to the input event wouldn't be necessary when the input is using the\n        // FormsModule or ReactiveFormsModule, because Angular forms also listens to input events.\n    }\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    get empty(): boolean {\n        return !this._isNeverEmpty() && !this._elementRef.nativeElement.value && !this._isBadInput();\n    }\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    onContainerClick() {\n        this.focus();\n    }\n\n    /** Does some manual dirty checking on the native input `value` property. */\n    protected _dirtyCheckNativeValue() {\n        const newValue = this.value;\n\n        if (this._previousNativeValue !== newValue) {\n            this._previousNativeValue = newValue;\n            this.stateChanges.next();\n        }\n    }\n\n    /** Make sure the input is a supported type. */\n    protected _validateType() {\n        if (MC_INPUT_INVALID_TYPES.indexOf(this._type) > -1) {\n            throw getMcInputUnsupportedTypeError(this._type);\n        }\n    }\n\n    /** Checks whether the input type is one of the types that are never empty. */\n    protected _isNeverEmpty() {\n        return this._neverEmptyInputTypes.indexOf(this._type) > -1;\n    }\n\n    /** Checks whether the input is invalid based on the native validation. */\n    protected _isBadInput() {\n        // The `validity` property won't be present on platform-server.\n        const validity = (this._elementRef.nativeElement as HTMLInputElement).validity;\n\n        return validity && validity.badInput;\n    }\n}\n\n@Directive({\n    selector: 'input[mcInputMonospace]',\n    exportAs: 'McInputMonospace',\n    host: { class: 'mc-input_monospace' }\n})\nexport class McInputMono {\n}\n","import { Directive, forwardRef, Input, OnChanges, Provider, SimpleChanges } from '@angular/core';\nimport { AbstractControl, NG_VALIDATORS, ValidationErrors, Validator, ValidatorFn, Validators } from '@angular/forms';\n\n\nexport const MIN_VALIDATOR: Provider = {\n    provide: NG_VALIDATORS,\n    useExisting: forwardRef(() => MinValidator),\n    multi: true\n};\n\n/**\n * A directive which installs the {@link MinValidator} for any `formControlName`,\n * `formControl`, or control with `ngModel` that also has a `min` attribute.\n *\n * @experimental\n */\n@Directive({\n    selector: '[min][formControlName],[min][formControl],[min][ngModel]',\n    providers: [MIN_VALIDATOR],\n    host: {'[attr.min]': 'min ? min : null'}\n})\nexport class MinValidator implements Validator, OnChanges {\n\n    @Input() min: string;\n    private _validator: ValidatorFn;\n    private _onChange: () => void;\n\n    ngOnChanges(changes: SimpleChanges): void {\n        if ('min' in changes) {\n            this._createValidator();\n            if (this._onChange) { this._onChange(); }\n        }\n    }\n\n    validate(c: AbstractControl): ValidationErrors | null { return this._validator(c); }\n\n    registerOnValidatorChange(fn: () => void): void { this._onChange = fn; }\n\n    private _createValidator(): void { this._validator = Validators.min(parseInt(this.min, 10)); }\n}\n\n\nexport const MAX_VALIDATOR: Provider = {\n    provide: NG_VALIDATORS,\n    useExisting: forwardRef(() => MaxValidator),\n    multi: true\n};\n\n/**\n * A directive which installs the {@link MaxValidator} for any `formControlName`,\n * `formControl`, or control with `ngModel` that also has a `min` attribute.\n *\n * @experimental\n */\n@Directive({\n    selector: '[max][formControlName],[max][formControl],[max][ngModel]',\n    providers: [MAX_VALIDATOR],\n    host: {\n        '[attr.max]': 'max ? max : null'\n    }\n})\nexport class MaxValidator implements Validator,\n    OnChanges {\n\n    @Input() max: string;\n    private _validator: ValidatorFn;\n    private _onChange: () => void;\n\n    ngOnChanges(changes: SimpleChanges): void {\n        if ('max' in changes) {\n            this._createValidator();\n            if (this._onChange) { this._onChange(); }\n        }\n    }\n\n    validate(c: AbstractControl): ValidationErrors | null { return this._validator(c); }\n\n    registerOnValidatorChange(fn: () => void): void { this._onChange = fn; }\n\n    private _createValidator(): void { this._validator = Validators.max(parseInt(this.max, 10)); }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { A11yModule } from '@ptsecurity/cdk/a11y';\nimport { McCommonModule } from '@ptsecurity/mosaic/core';\n\nimport { McInput, McInputMono, McNumberInput } from './input';\nimport { MaxValidator, MinValidator } from './input-number-validators';\n\n\n@NgModule({\n    imports: [CommonModule, A11yModule, McCommonModule, FormsModule],\n    exports: [McInput, McNumberInput, McInputMono, MinValidator, MaxValidator],\n    declarations: [McInput, McNumberInput, McInputMono, MinValidator, MaxValidator ]\n})\nexport class McInputModule {\n}\n","import { Injectable } from '@angular/core';\nimport { Subject } from 'rxjs';\n\n\n/** Datepicker data that requires internationalization. */\n@Injectable({ providedIn: 'root' })\nexport class McDatepickerIntl {\n    /**\n     * Stream that emits whenever the labels here are changed. Use this to notify\n     * components if the labels have changed after initialization.\n     */\n    readonly changes: Subject<void> = new Subject<void>();\n\n    /** A label for the calendar popup (used by screen readers). */\n    calendarLabel: string = 'Calendar';\n\n    /** A label for the button used to open the calendar popup (used by screen readers). */\n    openCalendarLabel: string = 'Open calendar';\n\n    /** A label for the previous month button (used by screen readers). */\n    prevMonthLabel: string = 'Previous month';\n\n    /** A label for the next month button (used by screen readers). */\n    nextMonthLabel: string = 'Next month';\n\n    /** A label for the previous year button (used by screen readers). */\n    prevYearLabel: string = 'Previous year';\n\n    /** A label for the next year button (used by screen readers). */\n    nextYearLabel: string = 'Next year';\n\n    /** A label for the previous multi-year button (used by screen readers). */\n    prevMultiYearLabel: string = 'Previous 20 years';\n\n    /** A label for the next multi-year button (used by screen readers). */\n    nextMultiYearLabel: string = 'Next 20 years';\n\n    /** A label for the 'switch to month view' button (used by screen readers). */\n    switchToMonthViewLabel: string = 'Choose date';\n\n    /** A label for the 'switch to year view' button (used by screen readers). */\n    switchToMultiYearViewLabel: string = 'Choose month and year';\n}\n","// tslint:disable:no-magic-numbers\nimport {\n    ChangeDetectionStrategy,\n    Component,\n    ElementRef,\n    EventEmitter,\n    Input,\n    Output,\n    ViewEncapsulation,\n    NgZone,\n    OnChanges,\n    SimpleChanges\n} from '@angular/core';\nimport { take } from 'rxjs/operators';\n\n\n/**\n * Extra CSS classes that can be associated with a calendar cell.\n */\nexport type McCalendarCellCssClasses = string | string[] | Set<string> | { [key: string]: any };\n\n/**\n * An internal class that represents the data corresponding to a single calendar cell.\n * @docs-private\n */\nexport class McCalendarCell {\n    constructor(\n        public value: number,\n        public displayValue: string,\n        public ariaLabel: string,\n        public enabled: boolean,\n        public cssClasses?: McCalendarCellCssClasses\n    ) {\n    }\n}\n\n\n/**\n * An internal component used to display calendar data in a table.\n * @docs-private\n */\n@Component({\n    selector: '[mc-calendar-body]',\n    templateUrl: 'calendar-body.html',\n    styleUrls: ['calendar-body.css'],\n    host: {\n        class: 'mc-calendar__body',\n        role: 'grid',\n        'aria-readonly': 'true'\n    },\n    exportAs: 'mcCalendarBody',\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class McCalendarBody implements OnChanges {\n    /** The label for the table. (e.g. \"Jan 2017\"). */\n    @Input() label: string;\n\n    /** The cells to display in the table. */\n    @Input() rows: McCalendarCell[][];\n\n    /** The value in the table that corresponds to today. */\n    @Input() todayValue: number;\n\n    /** The value in the table that is currently selected. */\n    @Input() selectedValue: number;\n\n    /** The minimum number of free cells needed to fit the label in the first row. */\n    @Input() labelMinRequiredCells: number;\n\n    /** The number of columns in the table. */\n    @Input() numCols = 7;\n\n    /** The cell number of the active cell in the table. */\n    @Input() activeCell = 0;\n\n    /**\n     * The aspect ratio (width / height) to use for the cells in the table. This aspect ratio will be\n     * maintained even as the table resizes.\n     */\n    @Input() cellAspectRatio = 1;\n\n    /** Emits when a new value is selected. */\n    @Output() readonly selectedValueChange: EventEmitter<number> = new EventEmitter<number>();\n\n    /** The number of blank cells to put at the beginning for the first row. */\n    firstRowOffset: number;\n\n    /** Padding for the individual date cells. */\n    cellPadding: string;\n\n    /** Width of an individual cell. */\n    cellWidth: string;\n\n    constructor(private elementRef: ElementRef<HTMLElement>, private ngZone: NgZone) {\n    }\n\n    cellClicked(cell: McCalendarCell): void {\n        if (cell.enabled) {\n            this.selectedValueChange.emit(cell.value);\n        }\n    }\n\n    ngOnChanges(changes: SimpleChanges) {\n        const columnChanges = changes.numCols;\n        // tslint:disable-next-line:no-this-assignment\n        const { rows, numCols } = this;\n\n        if (changes.rows || columnChanges) {\n            this.firstRowOffset = rows && rows.length && rows[0].length ? numCols - rows[0].length : 0;\n        }\n\n        if (changes.cellAspectRatio || columnChanges || !this.cellPadding) {\n            this.cellPadding = `${this.cellAspectRatio * 50 / numCols}%`;\n        }\n\n        if (columnChanges || !this.cellWidth) {\n            this.cellWidth = `${100 / numCols}%`;\n        }\n    }\n\n    isActiveCell(rowIndex: number, colIndex: number): boolean {\n        let cellNumber = rowIndex * this.numCols + colIndex;\n\n        // Account for the fact that the first row may not have as many cells.\n        if (rowIndex) {\n            cellNumber -= this.firstRowOffset;\n        }\n\n        return cellNumber === this.activeCell;\n    }\n\n    /** Focuses the active cell after the microtask queue is empty. */\n    focusActiveCell() {\n        this.ngZone.runOutsideAngular(() => {\n            this.ngZone.onStable.asObservable().pipe(take(1)).subscribe(() => {\n                const activeCell: HTMLElement | null =\n                    this.elementRef.nativeElement.querySelector('.mc-calendar__body_active');\n\n                if (activeCell) {\n                    activeCell.focus();\n                }\n            });\n        });\n    }\n}\n","// tslint:disable:no-magic-numbers\nimport {\n    AfterContentInit,\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    EventEmitter,\n    Inject,\n    Input,\n    Optional,\n    Output,\n    ViewEncapsulation,\n    ViewChild\n} from '@angular/core';\nimport { Directionality } from '@ptsecurity/cdk/bidi';\nimport { DateAdapter, MC_DATE_FORMATS, McDateFormats } from '@ptsecurity/cdk/datetime';\nimport {\n    DOWN_ARROW,\n    END,\n    ENTER,\n    HOME,\n    LEFT_ARROW,\n    PAGE_DOWN,\n    PAGE_UP,\n    RIGHT_ARROW,\n    UP_ARROW,\n    SPACE\n} from '@ptsecurity/cdk/keycodes';\n\nimport { McCalendarBody, McCalendarCell, McCalendarCellCssClasses } from './calendar-body';\nimport { createMissingDateImplError } from './datepicker-errors';\n\n\nconst DAYS_PER_WEEK = 7;\n\n\n/**\n * An internal component used to display a single month in the datepicker.\n * @docs-private\n */\n@Component({\n    selector: 'mc-month-view',\n    templateUrl: 'month-view.html',\n    exportAs: 'mcMonthView',\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class McMonthView<D> implements AfterContentInit {\n    /**\n     * The date to display in this month view (everything other than the month and year is ignored).\n     */\n    @Input()\n    get activeDate(): D {\n        return this._activeDate;\n    }\n\n    set activeDate(value: D) {\n        const oldActiveDate = this._activeDate;\n        const validDate =\n            this.getValidDateOrNull(this.dateAdapter.deserialize(value)) || this.dateAdapter.today();\n        this._activeDate = this.dateAdapter.clampDate(validDate, this.minDate, this.maxDate);\n\n        if (!this.hasSameMonthAndYear(oldActiveDate, this._activeDate)) {\n            this.init();\n        }\n    }\n\n    /** The currently selected date. */\n    @Input()\n    get selected(): D | null {\n        return this._selected;\n    }\n\n    set selected(value: D | null) {\n        this._selected = this.getValidDateOrNull(this.dateAdapter.deserialize(value));\n        this.selectedDate = this.getDateInCurrentMonth(this._selected);\n    }\n\n    /** The minimum selectable date. */\n    @Input()\n    get minDate(): D | null {\n        return this._minDate;\n    }\n\n    set minDate(value: D | null) {\n        this._minDate = this.getValidDateOrNull(this.dateAdapter.deserialize(value));\n    }\n\n    /** The maximum selectable date. */\n    @Input()\n    get maxDate(): D | null {\n        return this._maxDate;\n    }\n\n    set maxDate(value: D | null) {\n        this._maxDate = this.getValidDateOrNull(this.dateAdapter.deserialize(value));\n    }\n\n    /** Function used to filter which dates are selectable. */\n    @Input() dateFilter: (date: D) => boolean;\n\n    /** Function that can be used to add custom CSS classes to dates. */\n    @Input() dateClass: (date: D) => McCalendarCellCssClasses;\n\n    /** Emits when a new date is selected. */\n    @Output() readonly selectedChange: EventEmitter<D | null> = new EventEmitter<D | null>();\n\n    /** Emits when any date is selected. */\n    @Output() readonly userSelection: EventEmitter<void> = new EventEmitter<void>();\n\n    /** Emits when any date is activated. */\n    @Output() readonly activeDateChange: EventEmitter<D> = new EventEmitter<D>();\n\n    /** The body of calendar table */\n    @ViewChild(McCalendarBody) mcCalendarBody: McCalendarBody;\n\n    /** The label for this month (e.g. \"January 2017\"). */\n    monthLabel: string;\n\n    /** Grid of calendar cells representing the dates of the month. */\n    weeks: McCalendarCell[][];\n\n    /** The number of blank cells in the first row before the 1st of the month. */\n    firstWeekOffset: number;\n\n    /**\n     * The date of the month that the currently selected Date falls on.\n     * Null if the currently selected Date is in another month.\n     */\n    selectedDate: number | null;\n\n    /** The date of the month that today falls on. Null if today is in another month. */\n    todayDate: number | null;\n\n    /** The names of the weekdays. */\n    weekdays: { long: string; narrow: string }[];\n    private _activeDate: D;\n    private _selected: D | null;\n    private _minDate: D | null;\n    private _maxDate: D | null;\n\n    constructor(\n        private changeDetectorRef: ChangeDetectorRef,\n        @Optional() @Inject(MC_DATE_FORMATS) private dateFormats: McDateFormats,\n        @Optional() public dateAdapter: DateAdapter<D>,\n        @Optional() private dir?: Directionality\n    ) {\n\n        if (!this.dateAdapter) {\n            throw createMissingDateImplError('DateAdapter');\n        }\n\n        if (!this.dateFormats) {\n            throw createMissingDateImplError('MC_DATE_FORMATS');\n        }\n\n        const firstDayOfWeek = this.dateAdapter.getFirstDayOfWeek();\n        const narrowWeekdays = this.dateAdapter.getDayOfWeekNames('narrow');\n        const longWeekdays = this.dateAdapter.getDayOfWeekNames('long');\n\n        // Rotate the labels for days of the week based on the configured first day of the week.\n        const weekdays = longWeekdays.map((long, i) => {\n            return { long, narrow: narrowWeekdays[i] };\n        });\n        this.weekdays = weekdays.slice(firstDayOfWeek).concat(weekdays.slice(0, firstDayOfWeek));\n\n        this._activeDate = this.dateAdapter.today();\n    }\n\n    ngAfterContentInit() {\n        this.init();\n    }\n\n    /** Handles when a new date is selected. */\n    dateSelected(date: number) {\n        if (this.selectedDate !== date) {\n            const selectedYear = this.dateAdapter.getYear(this.activeDate);\n            const selectedMonth = this.dateAdapter.getMonth(this.activeDate);\n            const selectedDate = this.dateAdapter.createDate(selectedYear, selectedMonth, date);\n\n            this.selectedChange.emit(selectedDate);\n        }\n\n        this.userSelection.emit();\n    }\n\n    /** Handles keydown events on the calendar body when calendar is in month view. */\n    handleCalendarBodyKeydown(event: KeyboardEvent): void {\n        // TODO(mmalerba): We currently allow keyboard navigation to disabled dates, but just prevent\n        // disabled ones from being selected. This may not be ideal, we should look into whether\n        // navigation should skip over disabled dates, and if so, how to implement that efficiently.\n\n        const oldActiveDate = this._activeDate;\n        const isRtl = this.isRtl();\n\n        // tslint:disable-next-line:deprecation\n        switch (event.keyCode) {\n            case LEFT_ARROW:\n                this.activeDate = this.dateAdapter.addCalendarDays(this._activeDate, isRtl ? 1 : -1);\n                break;\n            case RIGHT_ARROW:\n                this.activeDate = this.dateAdapter.addCalendarDays(this._activeDate, isRtl ? -1 : 1);\n                break;\n            case UP_ARROW:\n                this.activeDate = this.dateAdapter.addCalendarDays(this._activeDate, -7);\n                break;\n            case DOWN_ARROW:\n                this.activeDate = this.dateAdapter.addCalendarDays(this._activeDate, 7);\n                break;\n            case HOME:\n                this.activeDate = this.dateAdapter.addCalendarDays(this._activeDate,\n                    1 - this.dateAdapter.getDate(this._activeDate));\n                break;\n            case END:\n                this.activeDate = this.dateAdapter.addCalendarDays(this._activeDate,\n                    (this.dateAdapter.getNumDaysInMonth(this._activeDate) -\n                        this.dateAdapter.getDate(this._activeDate)));\n                break;\n            case PAGE_UP:\n                this.activeDate = event.altKey ?\n                    this.dateAdapter.addCalendarYears(this._activeDate, -1) :\n                    this.dateAdapter.addCalendarMonths(this._activeDate, -1);\n                break;\n            case PAGE_DOWN:\n                this.activeDate = event.altKey ?\n                    this.dateAdapter.addCalendarYears(this._activeDate, 1) :\n                    this.dateAdapter.addCalendarMonths(this._activeDate, 1);\n                break;\n            case ENTER:\n            case SPACE:\n                if (!this.dateFilter || this.dateFilter(this._activeDate)) {\n                    this.dateSelected(this.dateAdapter.getDate(this._activeDate));\n                    this.userSelection.emit();\n                    // Prevent unexpected default actions such as form submission.\n                    event.preventDefault();\n                }\n\n                return;\n            default:\n                // Don't prevent default or focus active cell on keys that we don't explicitly handle.\n                return;\n        }\n\n        if (this.dateAdapter.compareDate(oldActiveDate, this.activeDate)) {\n            this.activeDateChange.emit(this.activeDate);\n        }\n\n        this.focusActiveCell();\n        // Prevent unexpected default actions such as form submission.\n        event.preventDefault();\n    }\n\n    /** Initializes this month view. */\n    init() {\n        this.selectedDate = this.getDateInCurrentMonth(this.selected);\n        this.todayDate = this.getDateInCurrentMonth(this.dateAdapter.today());\n        this.monthLabel =\n            this.dateAdapter.getMonthNames('short')[this.dateAdapter.getMonth(this.activeDate)];\n\n        this.monthLabel = this.monthLabel[0].toLocaleUpperCase() + this.monthLabel.substr(1);\n\n        const firstOfMonth = this.dateAdapter.createDate(this.dateAdapter.getYear(this.activeDate),\n            this.dateAdapter.getMonth(this.activeDate), 1);\n        this.firstWeekOffset =\n            (DAYS_PER_WEEK + this.dateAdapter.getDayOfWeek(firstOfMonth) -\n                this.dateAdapter.getFirstDayOfWeek()) % DAYS_PER_WEEK;\n\n        this.createWeekCells();\n        this.changeDetectorRef.markForCheck();\n    }\n\n    /** Focuses the active cell after the microtask queue is empty. */\n    focusActiveCell() {\n        this.mcCalendarBody.focusActiveCell();\n    }\n\n    /** Creates McCalendarCells for the dates in this month. */\n    private createWeekCells() {\n        const daysInMonth = this.dateAdapter.getNumDaysInMonth(this.activeDate);\n        const dateNames = this.dateAdapter.getDateNames();\n\n        this.weeks = [[]];\n\n        for (let i = 0, cell = this.firstWeekOffset; i < daysInMonth; i++, cell++) {\n            if (cell === DAYS_PER_WEEK) {\n                this.weeks.push([]);\n                cell = 0;\n            }\n            const date = this.dateAdapter.createDate(\n                this.dateAdapter.getYear(this.activeDate),\n                this.dateAdapter.getMonth(this.activeDate), i + 1);\n            const enabled = this.shouldEnableDate(date);\n            const ariaLabel = this.dateAdapter.format(date, this.dateFormats.display.dateA11yLabel);\n            const cellClasses = this.dateClass ? this.dateClass(date) : undefined;\n\n            this.weeks[this.weeks.length - 1]\n                .push(new McCalendarCell(i + 1, dateNames[i], ariaLabel, enabled, cellClasses));\n        }\n    }\n\n    /** Date filter for the month */\n    private shouldEnableDate(date: D): boolean {\n        return !!date &&\n            (!this.dateFilter || this.dateFilter(date)) &&\n            (!this.minDate || this.dateAdapter.compareDate(date, this.minDate) >= 0) &&\n            (!this.maxDate || this.dateAdapter.compareDate(date, this.maxDate) <= 0);\n    }\n\n    /**\n     * Gets the date in this month that the given Date falls on.\n     * Returns null if the given Date is in another month.\n     */\n    private getDateInCurrentMonth(date: D | null): number | null {\n        return date && this.hasSameMonthAndYear(date, this.activeDate) ?\n            this.dateAdapter.getDate(date) : null;\n    }\n\n    /** Checks whether the 2 dates are non-null and fall within the same month of the same year. */\n    private hasSameMonthAndYear(d1: D | null, d2: D | null): boolean {\n        return !!(d1 && d2 && this.dateAdapter.getMonth(d1) === this.dateAdapter.getMonth(d2) &&\n            this.dateAdapter.getYear(d1) === this.dateAdapter.getYear(d2));\n    }\n\n    /**\n     * @param obj The object to check.\n     * @returns The given object if it is both a date instance and valid, otherwise null.\n     */\n    private getValidDateOrNull(obj: any): D | null {\n        return (this.dateAdapter.isDateInstance(obj) && this.dateAdapter.isValid(obj)) ? obj : null;\n    }\n\n    /** Determines whether the user has the RTL layout direction. */\n    private isRtl() {\n        return this.dir && this.dir.value === 'rtl';\n    }\n}\n","import {\n    ChangeDetectionStrategy,\n    Component,\n    Directive,\n    ElementRef,\n    OnDestroy,\n    QueryList,\n    ViewEncapsulation,\n    ContentChildren\n} from '@angular/core';\n\nimport { FocusMonitor } from '@ptsecurity/cdk/a11y';\n\nimport { mixinColor, mixinDisabled, CanColor, CanDisable, CanDisableCtor, CanColorCtor } from '@ptsecurity/mosaic/core';\nimport { McIcon } from '@ptsecurity/mosaic/icon';\n\n\n@Directive({\n    selector: 'button[mc-button], a[mc-button]',\n    host: { class: 'mc-button' }\n})\nexport class McButtonCSSStyler {}\n\n\n@Directive({\n    selector: 'button[mc-icon-button], a[mc-icon-button]',\n    queries: {\n        contentChildren: new ContentChildren(McIcon)\n    },\n    host: { class: 'mc-icon-button' }\n})\nexport class McIconButtonCSSStyler {\n    nativeElement: Element;\n\n    contentChildren: QueryList<McIcon>;\n\n    constructor(elementRef: ElementRef) {\n        this.nativeElement = elementRef.nativeElement;\n    }\n\n    ngAfterContentInit() {\n        this._addClassModificatorForIcons();\n    }\n\n    _addClassModificatorForIcons() {\n        const twoIcons = 2;\n        const icons = this.contentChildren.map((item) => item._elementRef.nativeElement);\n\n        if (icons.length === 1) {\n            const iconElement = icons[0];\n            const COMMENT_NODE = 8;\n\n            if (!iconElement.previousElementSibling && !iconElement.nextElementSibling) {\n                if (iconElement.nextSibling && iconElement.nextSibling.nodeType !== COMMENT_NODE) {\n                    iconElement.classList.add('mc-icon_left');\n                    this.nativeElement.classList.add('mc-icon-button_left');\n                }\n\n                if (iconElement.previousSibling && iconElement.previousSibling.nodeType !== COMMENT_NODE) {\n                    iconElement.classList.add('mc-icon_right');\n                    this.nativeElement.classList.add('mc-icon-button_right');\n                }\n            }\n        } else if (icons.length === twoIcons) {\n            const firstIconElement = icons[0];\n            const secondIconElement = icons[1];\n\n            firstIconElement.classList.add('mc-icon_left');\n            secondIconElement.classList.add('mc-icon_right');\n        }\n    }\n}\n\n\nexport class McButtonBase {\n    constructor(public _elementRef: ElementRef) {}\n}\n\nexport const _McButtonMixinBase:\n    CanDisableCtor &\n    CanColorCtor &\n    typeof McButtonBase =\n        mixinColor(mixinDisabled(McButtonBase));\n\n\n@Component({\n    selector: `\n        button[mc-button],\n        button[mc-xs-button],\n        button[mc-sm-button],\n        button[mc-lg-button],\n        button[mc-xl-button]\n    `,\n    templateUrl: './button.component.html',\n    styleUrls: ['./button.css'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n    inputs: ['disabled', 'color'],\n    host: {\n        '[disabled]': 'disabled || null'\n    }\n})\nexport class McButton extends _McButtonMixinBase implements OnDestroy, CanDisable, CanColor {\n    constructor(elementRef: ElementRef, private _focusMonitor: FocusMonitor) {\n        super(elementRef);\n\n        this._focusMonitor.monitor(this._elementRef.nativeElement, true);\n    }\n\n    ngOnDestroy() {\n        this._focusMonitor.stopMonitoring(this._elementRef.nativeElement);\n    }\n\n    focus(): void {\n        this._getHostElement().focus();\n    }\n\n    _getHostElement() {\n        return this._elementRef.nativeElement;\n    }\n}\n\n\n@Component({\n    selector: 'a[mc-button], a[mc-xs-button], a[mc-sm-button], a[mc-lg-button], a[mc-xl-button]',\n    templateUrl: './button.component.html',\n    styleUrls: ['./button.css'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n    inputs: ['disabled', 'color'],\n    host: {\n        '[attr.tabindex]': 'disabled ? -1 : 0',\n        '[attr.disabled]': 'disabled || null',\n        '(click)': '_haltDisabledEvents($event)'\n    }\n})\nexport class McAnchor extends McButton {\n    constructor(focusMonitor: FocusMonitor, elementRef: ElementRef) {\n        super(elementRef, focusMonitor);\n    }\n\n    _haltDisabledEvents(event: Event) {\n        if (this.disabled) {\n            event.preventDefault();\n            event.stopImmediatePropagation();\n        }\n    }\n}\n\n\n@Component({\n    selector: 'button[mc-icon-button]',\n    templateUrl: './button.component.html',\n    styleUrls: ['./button.css'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n    inputs: ['disabled', 'color'],\n    host: {\n        '[attr.tabindex]': 'disabled ? -1 : 0',\n        '[attr.disabled]': 'disabled || null'\n    }\n})\nexport class McIconButton extends McButton {\n    constructor(focusMonitor: FocusMonitor, elementRef: ElementRef) {\n        super(elementRef, focusMonitor);\n    }\n\n    _haltDisabledEvents(event: Event) {\n        if (this.disabled) {\n            event.preventDefault();\n            event.stopImmediatePropagation();\n        }\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { A11yModule } from '@ptsecurity/cdk/a11y';\nimport { PlatformModule } from '@ptsecurity/cdk/platform';\n\nimport {\n    McButton,\n    McAnchor,\n    McIconButton,\n    McButtonCSSStyler,\n    McIconButtonCSSStyler\n} from './button.component';\n\n\n@NgModule({\n    imports: [\n        CommonModule,\n        A11yModule,\n        PlatformModule\n    ],\n    exports: [\n        McButton,\n        McAnchor,\n        McIconButton,\n        McButtonCSSStyler,\n        McIconButtonCSSStyler\n    ],\n    declarations: [\n        McButton,\n        McAnchor,\n        McIconButton,\n        McButtonCSSStyler,\n        McIconButtonCSSStyler\n    ]\n})\nexport class McButtonModule {}\n","import {\n    AfterContentInit,\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    ContentChildren,\n    Directive,\n    ElementRef,\n    EventEmitter,\n    forwardRef,\n    Input,\n    OnDestroy,\n    OnInit,\n    Optional,\n    Output,\n    QueryList,\n    ViewEncapsulation,\n    ViewChild\n} from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { FocusMonitor } from '@ptsecurity/cdk/a11y';\nimport { coerceBooleanProperty } from '@ptsecurity/cdk/coercion';\nimport { SelectionModel } from '@ptsecurity/cdk/collections';\nimport { McButton } from '@ptsecurity/mosaic/button';\n\n\n/** Acceptable types for a button toggle. */\nexport type ToggleType = 'checkbox' | 'radio';\n\n/**\n * Provider Expression that allows mc-button-toggle-group to register as a ControlValueAccessor.\n * This allows it to support [(ngModel)].\n * @docs-private\n */\nexport const MC_BUTTON_TOGGLE_GROUP_VALUE_ACCESSOR: any = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => McButtonToggleGroup),\n    multi: true\n};\n\n/** Change event object emitted by MсButtonToggle. */\nexport class McButtonToggleChange {\n    constructor(\n        /** The MсButtonToggle that emits the event. */\n        public source: McButtonToggle,\n        /** The value assigned to the MсButtonToggle. */\n        public value: any) {\n    }\n}\n\n/** Exclusive selection button toggle group that behaves like a radio-button group. */\n@Directive({\n    selector: 'mc-button-toggle-group',\n    providers: [MC_BUTTON_TOGGLE_GROUP_VALUE_ACCESSOR],\n    host: {\n        role: 'group',\n        class: 'mc-button-toggle-group',\n        '[class.mc-button-toggle-vertical]': 'vertical'\n    },\n    exportAs: 'mcButtonToggleGroup'\n})\nexport class McButtonToggleGroup implements ControlValueAccessor, OnInit, AfterContentInit {\n\n    /** Whether the toggle group is vertical. */\n    @Input()\n    get vertical(): boolean {\n        return this._vertical;\n    }\n\n    set vertical(value: boolean) {\n        this._vertical = coerceBooleanProperty(value);\n    }\n\n    /** Value of the toggle group. */\n    @Input()\n    get value(): any {\n        const selected = this.selectionModel ? this.selectionModel.selected : [];\n\n        if (this.multiple) {\n            return selected.map((toggle) => toggle.value);\n        }\n\n        return selected[0] ? selected[0].value : undefined;\n    }\n\n    set value(newValue: any) {\n        this.setSelectionByValue(newValue);\n        this.valueChange.emit(this.value);\n    }\n\n    /** Selected button toggles in the group. */\n    get selected(): any {\n        const selected = this.selectionModel.selected;\n\n        return this.multiple ? selected : (selected[0] || null);\n    }\n\n    /** Whether multiple button toggles can be selected. */\n    @Input()\n    get multiple(): boolean {\n        return this._multiple;\n    }\n\n    set multiple(value: boolean) {\n        this._multiple = coerceBooleanProperty(value);\n    }\n\n    /** Child button toggle buttons. */\n    @ContentChildren(forwardRef(() => McButtonToggle)) buttonToggles: QueryList<McButtonToggle>;\n\n    /** Whether multiple button toggle group is disabled. */\n    @Input()\n    get disabled(): boolean {\n        return this._disabled;\n    }\n\n    set disabled(value: boolean) {\n        this._disabled = coerceBooleanProperty(value);\n\n        if (!this.buttonToggles) {\n            return;\n        }\n\n        this.buttonToggles.forEach((toggle) => toggle.markForCheck());\n    }\n\n    /**\n     * Event that emits whenever the value of the group changes.\n     * Used to facilitate two-way data binding.\n     * @docs-private\n     */\n    @Output() readonly valueChange = new EventEmitter<any>();\n\n    /** Event emitted when the group's value changes. */\n    @Output() readonly change: EventEmitter<McButtonToggleChange> =\n        new EventEmitter<McButtonToggleChange>();\n    private _vertical = false;\n    private _multiple = false;\n    private _disabled = false;\n    private selectionModel: SelectionModel<McButtonToggle>;\n\n    /**\n     * Reference to the raw value that the consumer tried to assign. The real\n     * value will exclude any values from this one that don't correspond to a\n     * toggle. Useful for the cases where the value is assigned before the toggles\n     * have been initialized or at the same that they're being swapped out.\n     */\n    private rawValue: any;\n\n    constructor(private _changeDetector: ChangeDetectorRef) {}\n\n    /**\n     * The method to be called in order to update ngModel.\n     * Now `ngModel` binding is not supported in multiple selection mode.\n     */\n    // tslint:disable-next-line:no-empty\n    controlValueAccessorChangeFn: (value: any) => void = () => {};\n\n    /** onTouch function registered via registerOnTouch (ControlValueAccessor). */\n    // tslint:disable-next-line:no-empty\n    onTouched: () => any = () => {};\n\n    ngOnInit() {\n        this.selectionModel = new SelectionModel<McButtonToggle>(this.multiple, undefined, false);\n    }\n\n    ngAfterContentInit() {\n        this.selectionModel.select(...this.buttonToggles.filter((toggle) => toggle.checked));\n        this.disabled = this._disabled;\n    }\n\n    /**\n     * Sets the model value. Implemented as part of ControlValueAccessor.\n     * @param value Value to be set to the model.\n     */\n    writeValue(value: any) {\n        this.value = value;\n        this._changeDetector.markForCheck();\n    }\n\n    // Implemented as part of ControlValueAccessor.\n    registerOnChange(fn: (value: any) => void) {\n        this.controlValueAccessorChangeFn = fn;\n    }\n\n    // Implemented as part of ControlValueAccessor.\n    registerOnTouched(fn: any) {\n        this.onTouched = fn;\n    }\n\n    // Implemented as part of ControlValueAccessor.\n    setDisabledState(isDisabled: boolean): void {\n        this.disabled = isDisabled;\n    }\n\n    /** Dispatch change event with current selection and group value. */\n    emitChangeEvent(): void {\n        const selected = this.selected;\n        const source = Array.isArray(selected) ? selected[selected.length - 1] : selected;\n        const event = new McButtonToggleChange(source, this.value);\n        this.controlValueAccessorChangeFn(event.value);\n        this.change.emit(event);\n    }\n\n    /**\n     * Syncs a button toggle's selected state with the model value.\n     * @param toggle Toggle to be synced.\n     * @param select Whether the toggle should be selected.\n     * @param isUserInput Whether the change was a result of a user interaction.\n     */\n    syncButtonToggle(toggle: McButtonToggle, select: boolean, isUserInput = false) {\n        // Deselect the currently-selected toggle, if we're in single-selection\n        // mode and the button being toggled isn't selected at the moment.\n        if (!this.multiple && this.selected && !toggle.checked) {\n            (this.selected as McButtonToggle).checked = false;\n        }\n\n        if (select) {\n            this.selectionModel.select(toggle);\n        } else {\n            this.selectionModel.deselect(toggle);\n        }\n\n        // Only emit the change event for user input.\n        if (isUserInput) {\n            this.emitChangeEvent();\n        }\n\n        // Note: we emit this one no matter whether it was a user interaction, because\n        // it is used by Angular to sync up the two-way data binding.\n        this.valueChange.emit(this.value);\n    }\n\n    /** Checks whether a button toggle is selected. */\n    isSelected(toggle: McButtonToggle) {\n        return this.selectionModel.isSelected(toggle);\n    }\n\n    /** Determines whether a button toggle should be checked on init. */\n    isPrechecked(toggle: McButtonToggle) {\n        if (this.rawValue === undefined) {\n            return false;\n        }\n\n        if (this.multiple && Array.isArray(this.rawValue)) {\n            return this.rawValue.some((value) => toggle.value != null && value === toggle.value);\n        }\n\n        return toggle.value === this.rawValue;\n    }\n\n    /** Updates the selection state of the toggles in the group based on a value. */\n    private setSelectionByValue(value: any | any[]) {\n        this.rawValue = value;\n\n        if (!this.buttonToggles) {\n            return;\n        }\n\n        if (this.multiple && value) {\n            if (!Array.isArray(value)) {\n                throw Error('Value must be an array in multiple-selection mode.');\n            }\n\n            this.clearSelection();\n            value.forEach((currentValue: any) => this.selectValue(currentValue));\n        } else {\n            this.clearSelection();\n            this.selectValue(value);\n        }\n    }\n\n    /** Clears the selected toggles. */\n    private clearSelection() {\n        this.selectionModel.clear();\n        this.buttonToggles.forEach((toggle) => toggle.checked = false);\n    }\n\n    /** Selects a value if there's a toggle that corresponds to it. */\n    private selectValue(value: any) {\n        const correspondingOption = this.buttonToggles.find((toggle) => {\n            return toggle.value != null && toggle.value === value;\n        });\n\n        if (correspondingOption) {\n            correspondingOption.checked = true;\n            this.selectionModel.select(correspondingOption);\n        }\n    }\n}\n\n/** Single button inside of a toggle group. */\n@Component({\n    selector: 'mc-button-toggle',\n    template: `\n        <button\n            mc-button\n            [disabled]=\"disabled\"\n            [attr.tabindex]=\"disabled ? -1 : tabIndex\"\n            (click)=\"onToggleClick()\">\n            <ng-content></ng-content>\n        </button>\n    `,\n    styleUrls: ['button-toggle.css'],\n    encapsulation: ViewEncapsulation.None,\n    exportAs: 'mcButtonToggle',\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    host: {\n        '[class.mc-button-toggle-standalone]': '!buttonToggleGroup',\n        '[class.mc-button-toggle-checked]': 'checked',\n        class: 'mc-button-toggle',\n        // Always reset the tabindex to -1 so it doesn't conflict with the one on the `button`,\n        // but can still receive focus from things like cdkFocusInitial.\n        '[attr.tabindex]': '-1',\n        '[attr.disabled]': 'disabled || null',\n        '(focus)': 'focus()'\n    }\n})\nexport class McButtonToggle implements OnInit, OnDestroy {\n\n    /** Whether the button is checked. */\n    @Input()\n    get checked(): boolean {\n        return this.buttonToggleGroup ? this.buttonToggleGroup.isSelected(this) : this._checked;\n    }\n\n    set checked(value: boolean) {\n        const newValue = coerceBooleanProperty(value);\n\n        if (newValue !== this._checked) {\n            this._checked = newValue;\n\n            if (this.buttonToggleGroup) {\n                this.buttonToggleGroup.syncButtonToggle(this, this._checked);\n            }\n\n            this.changeDetectorRef.markForCheck();\n        }\n    }\n\n    // tslint:disable-next-line:no-reserved-keywords\n    type: ToggleType;\n\n    @ViewChild(McButton) mcButton: McButton;\n\n    /** McButtonToggleGroup reads this to assign its own value. */\n    @Input() value: any;\n\n    /** Tabindex for the toggle. */\n    @Input() tabIndex: number | null;\n\n    @Input()\n    get disabled(): boolean {\n        return this._disabled || (this.buttonToggleGroup && this.buttonToggleGroup.disabled);\n    }\n    set disabled(value: boolean) { this._disabled = coerceBooleanProperty(value); }\n\n    /** Event emitted when the group value changes. */\n    @Output() readonly change: EventEmitter<McButtonToggleChange> =\n        new EventEmitter<McButtonToggleChange>();\n\n    private isSingleSelector = false;\n    private _checked = false;\n    private _disabled: boolean = false;\n\n    constructor(\n        @Optional() public buttonToggleGroup: McButtonToggleGroup,\n        private changeDetectorRef: ChangeDetectorRef,\n        private focusMonitor: FocusMonitor,\n        private element: ElementRef\n    ) {}\n\n    ngOnInit() {\n        this.isSingleSelector = this.buttonToggleGroup && !this.buttonToggleGroup.multiple;\n        this.type = this.isSingleSelector ? 'radio' : 'checkbox';\n\n        if (this.buttonToggleGroup && this.buttonToggleGroup.isPrechecked(this)) {\n            this.checked = true;\n        }\n\n        this.focusMonitor.monitor(this.element.nativeElement, true);\n    }\n\n    ngOnDestroy() {\n        const group = this.buttonToggleGroup;\n\n        this.focusMonitor.stopMonitoring(this.element.nativeElement);\n\n        // Remove the toggle from the selection once it's destroyed. Needs to happen\n        // on the next tick in order to avoid \"changed after checked\" errors.\n        if (group && group.isSelected(this)) {\n            Promise.resolve().then(() => group.syncButtonToggle(this, false));\n        }\n    }\n\n    /** Focuses the button. */\n    focus(): void {\n        this.element.nativeElement.focus();\n    }\n\n    /** Checks the button toggle due to an interaction with the underlying native button. */\n    onToggleClick() {\n        if (this.disabled) {\n            return;\n        }\n\n        const newChecked = this.isSingleSelector ? true : !this._checked;\n\n        if (newChecked !== this._checked) {\n            this._checked = newChecked;\n            if (this.buttonToggleGroup) {\n                this.buttonToggleGroup.syncButtonToggle(this, this._checked, true);\n                this.buttonToggleGroup.onTouched();\n            }\n        }\n        // Emit a change event when it's the single selector\n        this.change.emit(new McButtonToggleChange(this, this.value));\n    }\n\n    /**\n     * Marks the button toggle as needing checking for change detection.\n     * This method is exposed because the parent button toggle group will directly\n     * update bound properties of the radio button.\n     */\n    markForCheck() {\n        // When the group value changes, the button will not be notified.\n        // Use `markForCheck` to explicit update button toggle's status.\n        this.changeDetectorRef.markForCheck();\n    }\n}\n","import { NgModule } from '@angular/core';\nimport { McButtonModule } from '@ptsecurity/mosaic/button';\nimport { McCommonModule } from '@ptsecurity/mosaic/core';\n\nimport { McButtonToggle, McButtonToggleGroup } from './button-toggle.component';\n\n\n@NgModule({\n    imports: [McCommonModule, McButtonModule],\n    exports: [McCommonModule, McButtonToggleGroup, McButtonToggle],\n    declarations: [McButtonToggleGroup, McButtonToggle]\n})\nexport class McButtonToggleModule {}\n","import {\n    Output,\n    ChangeDetectionStrategy,\n    Component,\n    ElementRef, Input,\n    OnDestroy, EventEmitter,\n    ViewEncapsulation, HostBinding\n} from '@angular/core';\n\nimport { FocusMonitor } from '@ptsecurity/cdk/a11y';\nimport { SPACE } from '@ptsecurity/cdk/keycodes';\n\n\n@Component({\n    selector: 'mc-card',\n    templateUrl: './card.component.html',\n    styleUrls: ['./card.component.css'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n    inputs: ['color'],\n    host: {\n        class: 'mc-card',\n        '[class.mc-card_readonly]': 'readonly',\n        '[class.mc-card_selected]': 'selected',\n        '(keydown)': 'onKeyDown($event)',\n        '(click)': 'onClick($event)'\n    }\n})\nexport class McCard implements OnDestroy {\n    get tabIndex(): number | null {\n        return this.readonly ? null : this._tabIndex;\n    }\n\n    @HostBinding('attr.tabIndex')\n    @Input()\n    set tabIndex(value: number | null) {\n        this._tabIndex = value;\n    }\n\n    @Input()\n    readonly = false;\n\n    @Input()\n    selected = false;\n\n    @Output()\n    selectedChange = new EventEmitter<boolean>();\n\n    private _tabIndex: number | null = 0;\n\n    constructor(private _elementRef: ElementRef, private _focusMonitor: FocusMonitor) {\n        this._focusMonitor.monitor(this._elementRef.nativeElement, false);\n    }\n\n    ngOnDestroy() {\n        this._focusMonitor.stopMonitoring(this._elementRef.nativeElement);\n    }\n\n    focus(): void {\n        this.hostElement.focus();\n    }\n\n    onClick($event: MouseEvent) {\n        if (!this.readonly) {\n            $event.stopPropagation();\n\n            this.selectedChange.emit(!this.selected);\n        }\n    }\n\n    private get hostElement() {\n        return this._elementRef.nativeElement;\n    }\n\n    onKeyDown($event: KeyboardEvent) {\n        switch ($event.keyCode) {\n            case SPACE:\n                if (!this.readonly) {\n                    $event.preventDefault();\n                    this.selectedChange.emit(!this.selected);\n                }\n                break;\n            default:\n        }\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { A11yModule } from '@ptsecurity/cdk/a11y';\nimport { PlatformModule } from '@ptsecurity/cdk/platform';\n\nimport {\n    McCard\n} from './card.component';\n\n\n@NgModule({\n    imports: [\n        CommonModule,\n        A11yModule,\n        PlatformModule\n    ],\n    exports: [McCard],\n    declarations: [McCard]\n})\nexport class McCardModule {}\n","import { InjectionToken } from '@angular/core';\n\n\n/**\n * Checkbox click action when user click on input element.\n * noop: Do not toggle checked or indeterminate.\n * check: Only toggle checked status, ignore indeterminate.\n * check-indeterminate: Toggle checked status, set indeterminate to false. Default behavior.\n * undefined: Same as `check-indeterminate`.\n */\nexport type McCheckboxClickAction = 'noop' | 'check' | 'check-indeterminate' | undefined;\n\n/**\n * Injection token that can be used to specify the checkbox click behavior.\n */\nexport const MC_CHECKBOX_CLICK_ACTION =\n    new InjectionToken<McCheckboxClickAction>('mc-checkbox-click-action');\n","import {\n    AfterViewInit,\n    Attribute,\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    ElementRef,\n    EventEmitter,\n    forwardRef,\n    Inject,\n    Input,\n    OnDestroy,\n    Optional,\n    Output,\n    ViewChild,\n    ViewEncapsulation\n} from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { FocusMonitor, FocusOrigin } from '@ptsecurity/cdk/a11y';\nimport {\n    CanColor, CanColorCtor,\n    CanDisable, CanDisableCtor,\n    HasTabIndex, HasTabIndexCtor,\n    mixinColor,\n    mixinDisabled,\n    mixinTabIndex,\n    toBoolean\n} from '@ptsecurity/mosaic/core';\n\nimport { MC_CHECKBOX_CLICK_ACTION, McCheckboxClickAction } from './checkbox-config';\n\n\n// Increasing integer for generating unique ids for checkbox components.\nlet nextUniqueId = 0;\n\n/**\n * Provider Expression that allows mc-checkbox to register as a ControlValueAccessor.\n * This allows it to support [(ngModel)].\n * @docs-private\n */\nexport const MC_CHECKBOX_CONTROL_VALUE_ACCESSOR: any = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => McCheckbox),\n    multi: true\n};\n\n/**\n * Represents the different states that require custom transitions between them.\n * @docs-private\n */\nexport enum TransitionCheckState {\n    /** The initial state of the component before any user interaction. */\n    Init,\n    /** The state representing the component when it's becoming checked. */\n    Checked,\n    /** The state representing the component when it's becoming unchecked. */\n    Unchecked,\n    /** The state representing the component when it's becoming indeterminate. */\n    Indeterminate\n}\n\n/** Change event object emitted by McCheckbox. */\nexport class McCheckboxChange {\n    /** The source McCheckbox of the event. */\n    source: McCheckbox;\n    /** The new `checked` value of the checkbox. */\n    checked: boolean;\n}\n\n// Boilerplate for applying mixins to McCheckbox.\n/** @docs-private */\nexport class McCheckboxBase {\n    constructor(public _elementRef: ElementRef) {\n    }\n}\n\nexport const _McCheckboxMixinBase:\n    HasTabIndexCtor &\n    CanColorCtor &\n    CanDisableCtor &\n    typeof McCheckboxBase =\n        mixinTabIndex(mixinColor(mixinDisabled(McCheckboxBase)));\n\n\n/**\n * A mosaic checkbox component. Supports all of the functionality of an HTML5 checkbox,\n * and exposes a similar API. A McCheckbox can be either checked, unchecked, indeterminate, or\n * disabled. Note that all additional accessibility attributes are taken care of by the component,\n * so there is no need to provide them yourself. However, if you want to omit a label and still\n * have the checkbox be accessible, you may supply an [aria-label] input.\n */\n@Component({\n    selector: 'mc-checkbox',\n    templateUrl: 'checkbox.html',\n    styleUrls: ['checkbox.css'],\n    exportAs: 'mcCheckbox',\n    host: {\n        class: 'mc-checkbox',\n        '[id]': 'id',\n        '[attr.id]': 'id',\n        '[class.mc-indeterminate]': 'indeterminate',\n        '[class.mc-checked]': 'checked',\n        '[class.mc-disabled]': 'disabled',\n        '[class.mc-checkbox-label-before]': 'labelPosition == \"before\"'\n    },\n    providers: [MC_CHECKBOX_CONTROL_VALUE_ACCESSOR],\n    inputs: ['color', 'tabIndex'],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class McCheckbox extends _McCheckboxMixinBase implements ControlValueAccessor,\n    AfterViewInit, OnDestroy, CanColor, CanDisable, HasTabIndex {\n\n    /**\n     * Attached to the aria-label attribute of the host element. In most cases, arial-labelledby will\n     * take precedence so this may be omitted.\n     */\n    @Input('aria-label') ariaLabel: string = '';\n\n    /**\n     * Users can specify the `aria-labelledby` attribute which will be forwarded to the input element\n     */\n    @Input('aria-labelledby') ariaLabelledby: string | null = null;\n\n    private _uniqueId: string = `mc-checkbox-${++nextUniqueId}`;\n\n    /** A unique id for the checkbox input. If none is supplied, it will be auto-generated. */\n    @Input() id: string = this._uniqueId;\n\n    /** Returns the unique id for the visual hidden input. */\n    get inputId(): string {\n        return `${this.id || this._uniqueId}-input`;\n    }\n\n    /** Whether the checkbox is required. */\n    @Input()\n    get required(): boolean {\n        return this._required;\n    }\n\n    set required(value: boolean) {\n        this._required = toBoolean(value);\n    }\n\n    private _required: boolean;\n\n    /** Whether the label should appear after or before the checkbox. Defaults to 'after' */\n    @Input() labelPosition: 'before' | 'after' = 'after';\n\n    /** Name value will be applied to the input element if present */\n    @Input() name: string | null = null;\n\n    /** Event emitted when the checkbox's `checked` value changes. */\n    @Output() readonly change: EventEmitter<McCheckboxChange> =\n        new EventEmitter<McCheckboxChange>();\n\n    /** Event emitted when the checkbox's `indeterminate` value changes. */\n    @Output() readonly indeterminateChange: EventEmitter<boolean> = new EventEmitter<boolean>();\n\n    /** The value attribute of the native input element */\n    @Input() value: string;\n\n    /** The native `<input type=\"checkbox\">` element */\n    @ViewChild('input') _inputElement: ElementRef;\n\n    /**\n     * Called when the checkbox is blurred. Needed to properly implement ControlValueAccessor.\n     * @docs-private\n     */\n    _onTouched: () => any = () => {\n    }\n\n    private _currentAnimationClass: string = '';\n\n    private _currentCheckState: TransitionCheckState = TransitionCheckState.Init;\n\n    private _controlValueAccessorChangeFn: (value: any) => void = () => {\n    }\n\n    constructor(elementRef: ElementRef,\n                private _changeDetectorRef: ChangeDetectorRef,\n                private _focusMonitor: FocusMonitor,\n                @Attribute('tabindex') tabIndex: string,\n                @Optional() @Inject(MC_CHECKBOX_CLICK_ACTION)\n                private _clickAction: McCheckboxClickAction) {\n        super(elementRef);\n\n        this.tabIndex = parseInt(tabIndex) || 0;\n    }\n\n    ngAfterViewInit() {\n        this._focusMonitor\n            .monitor(this._inputElement.nativeElement)\n            .subscribe((focusOrigin) => this._onInputFocusChange(focusOrigin));\n    }\n\n    ngOnDestroy() {\n        this._focusMonitor.stopMonitoring(this._inputElement.nativeElement);\n    }\n\n    /**\n     * Whether the checkbox is checked.\n     */\n    @Input()\n    get checked(): boolean {\n        return this._checked;\n    }\n\n    set checked(value: boolean) {\n        if (value != this.checked) {\n            this._checked = value;\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n\n    private _checked: boolean = false;\n\n    /**\n     * Whether the checkbox is disabled. This fully overrides the implementation provided by\n     * mixinDisabled, but the mixin is still required because mixinTabIndex requires it.\n     */\n    @Input()\n    get disabled() {\n        return this._disabled;\n    }\n\n    set disabled(value: any) {\n        if (value != this.disabled) {\n            this._disabled = value;\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n\n    private _disabled: boolean = false;\n\n    /**\n     * Whether the checkbox is indeterminate. This is also known as \"mixed\" mode and can be used to\n     * represent a checkbox with three states, e.g. a checkbox that represents a nested list of\n     * checkable items. Note that whenever checkbox is manually clicked, indeterminate is immediately\n     * set to false.\n     */\n    @Input()\n    get indeterminate(): boolean {\n        return this._indeterminate;\n    }\n\n    set indeterminate(value: boolean) {\n        const changed = value != this._indeterminate;\n        this._indeterminate = value;\n\n        if (changed) {\n            if (this._indeterminate) {\n                this._transitionCheckState(TransitionCheckState.Indeterminate);\n            } else {\n                this._transitionCheckState(\n                    this.checked ? TransitionCheckState.Checked : TransitionCheckState.Unchecked);\n            }\n            this.indeterminateChange.emit(this._indeterminate);\n        }\n    }\n\n    private _indeterminate: boolean = false;\n\n    /** Method being called whenever the label text changes. */\n    _onLabelTextChange() {\n        // This method is getting called whenever the label of the checkbox changes.\n        // Since the checkbox uses the OnPush strategy we need to notify it about the change\n        // that has been recognized by the cdkObserveContent directive.\n        this._changeDetectorRef.markForCheck();\n    }\n\n    // Implemented as part of ControlValueAccessor.\n    writeValue(value: any) {\n        this.checked = !!value;\n    }\n\n    // Implemented as part of ControlValueAccessor.\n    registerOnChange(fn: (value: any) => void) {\n        this._controlValueAccessorChangeFn = fn;\n    }\n\n    // Implemented as part of ControlValueAccessor.\n    registerOnTouched(fn: any) {\n        this._onTouched = fn;\n    }\n\n    // Implemented as part of ControlValueAccessor.\n    setDisabledState(isDisabled: boolean) {\n        this.disabled = isDisabled;\n    }\n\n    _getAriaChecked(): 'true' | 'false' | 'mixed' {\n        return this.checked ? 'true' : (this.indeterminate ? 'mixed' : 'false');\n    }\n\n    private _transitionCheckState(newState: TransitionCheckState) {\n        const oldState = this._currentCheckState;\n        const element: HTMLElement = this._elementRef.nativeElement;\n\n        if (oldState === newState) {\n            return;\n        }\n        if (this._currentAnimationClass.length > 0) {\n            element.classList.remove(this._currentAnimationClass);\n        }\n\n        this._currentCheckState = newState;\n\n        if (this._currentAnimationClass.length > 0) {\n            element.classList.add(this._currentAnimationClass);\n        }\n    }\n\n    private _emitChangeEvent() {\n        const event = new McCheckboxChange();\n        event.source = this;\n        event.checked = this.checked;\n\n        this._controlValueAccessorChangeFn(this.checked);\n        this.change.emit(event);\n    }\n\n    /** Function is called whenever the focus changes for the input element. */\n    private _onInputFocusChange(focusOrigin: FocusOrigin) {\n        if (focusOrigin) {\n            this._onTouched();\n        }\n    }\n\n    /** Toggles the `checked` state of the checkbox. */\n    toggle(): void {\n        this.checked = !this.checked;\n    }\n\n    /**\n     * Event handler for checkbox input element.\n     * Toggles checked state if element is not disabled.\n     * Do not toggle on (change) event since IE doesn't fire change event when\n     *   indeterminate checkbox is clicked.\n     * @param event\n     */\n    _onInputClick(event: Event) {\n        // We have to stop propagation for click events on the visual hidden input element.\n        // By default, when a user clicks on a label element, a generated click event will be\n        // dispatched on the associated input element. Since we are using a label element as our\n        // root container, the click event on the `checkbox` will be executed twice.\n        // The real click event will bubble up, and the generated click event also tries to bubble up.\n        // This will lead to multiple click events.\n        // Preventing bubbling for the second event will solve that issue.\n        event.stopPropagation();\n\n        // If resetIndeterminate is false, and the current state is indeterminate, do nothing on click\n        if (!this.disabled && this._clickAction !== 'noop') {\n            // When user manually click on the checkbox, `indeterminate` is set to false.\n            if (this.indeterminate && this._clickAction !== 'check') {\n\n                Promise.resolve().then(() => {\n                    this._indeterminate = false;\n                    this.indeterminateChange.emit(this._indeterminate);\n                });\n            }\n\n            this.toggle();\n            this._transitionCheckState(\n                this._checked ? TransitionCheckState.Checked : TransitionCheckState.Unchecked);\n\n            // Emit our custom change event if the native input emitted one.\n            // It is important to only emit it, if the native input triggered one, because\n            // we don't want to trigger a change event, when the `checked` variable changes for example.\n            this._emitChangeEvent();\n        } else if (!this.disabled && this._clickAction === 'noop') {\n            // Reset native input when clicked with noop. The native checkbox becomes checked after\n            // click, reset it to be align with `checked` value of `mc-checkbox`.\n            this._inputElement.nativeElement.checked = this.checked;\n            this._inputElement.nativeElement.indeterminate = this.indeterminate;\n        }\n    }\n\n    /** Focuses the checkbox. */\n    focus(): void {\n        this._focusMonitor.focusVia(this._inputElement.nativeElement, 'keyboard');\n    }\n\n    _onInteractionEvent(event: Event) {\n        // We always have to stop propagation on the change event.\n        // Otherwise the change event, from the input element, will bubble up and\n        // emit its event object to the `change` output.\n        event.stopPropagation();\n    }\n}\n","import {\n    Directive,\n    forwardRef,\n    Provider\n} from '@angular/core';\nimport {\n    CheckboxRequiredValidator,\n    NG_VALIDATORS\n} from '@angular/forms';\n\n\nexport const MC_CHECKBOX_REQUIRED_VALIDATOR: Provider = {\n    provide: NG_VALIDATORS,\n    useExisting: forwardRef(() => McCheckboxRequiredValidator),\n    multi: true\n};\n\n/**\n * Validator for Mosaic checkbox's required attribute in template-driven checkbox.\n * Current CheckboxRequiredValidator only work with `input type=checkbox` and does not\n * work with `mc-checkbox`.\n */\n@Directive({\n    selector: `mc-checkbox[required][formControlName],\n             mc-checkbox[required][formControl], mc-checkbox[required][ngModel]`,\n    providers: [MC_CHECKBOX_REQUIRED_VALIDATOR],\n    host: { '[attr.required]': 'required ? \"\" : null' }\n})\nexport class McCheckboxRequiredValidator extends CheckboxRequiredValidator {\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { McCheckbox } from './checkbox';\nimport { McCheckboxRequiredValidator } from './checkbox-required-validator';\n\n\n@NgModule({\n    imports: [CommonModule],\n    exports: [McCheckbox, McCheckboxRequiredValidator],\n    declarations: [McCheckbox, McCheckboxRequiredValidator]\n})\nexport class McCheckboxModule {\n}\n","import { Component } from '@angular/core';\n\n\n@Component({\n    selector: 'mc-cleaner',\n    template: '<i class=\"mc-icon_light\" mc-icon=\"mc-close-M_16\" color=\"second\"></i>'\n})\nexport class McCleaner {}\n","import { NgControl } from '@angular/forms';\nimport { Observable } from 'rxjs';\n\n\n/** An interface which allows a control to work inside of a `MсFormField`. */\nexport abstract class McFormFieldControl<T> {\n    /** The value of the control. */\n    value: T | null;\n\n    /**\n     * Stream that emits whenever the state of the control changes such that the parent `MсFormField`\n     * needs to run change detection.\n     */\n    readonly stateChanges: Observable<void>;\n\n    /** The element ID for this control. */\n    readonly id: string;\n\n    /** The placeholder for this control. */\n    readonly placeholder: string;\n\n    /** Gets the NgControl for this control. */\n    readonly ngControl: NgControl | null;\n\n    /** Whether the control is focused. */\n    readonly focused: boolean;\n\n    /** Whether the control is empty. */\n    readonly empty: boolean;\n\n    /** Whether the control is required. */\n    readonly required: boolean;\n\n    /** Whether the control is disabled. */\n    readonly disabled: boolean;\n\n    /** Whether the control is in an error state. */\n    readonly errorState: boolean;\n\n    /**\n     * An optional name for the control type that can be used to distinguish `mc-form-field` elements\n     * based on their control type. The form field will add a class,\n     * `mc-form-field-type-{{controlType}}` to its root element.\n     */\n    readonly controlType?: string;\n\n    /** Handles a click on the control's container. */\n    abstract onContainerClick(event: MouseEvent): void;\n}\n","import { Observable } from 'rxjs';\n\n\n/** An interface which allows a control to work inside of a `MсFormField`. */\nexport abstract class McFormFieldNumberControl<T> {\n    /** The value of the control. */\n    value: T | null;\n\n    /**\n     * Stream that emits whenever the state of the control changes such that the parent `MсFormField`\n     * needs to run change detection.\n     */\n    readonly stateChanges: Observable<void>;\n\n    /** the number step */\n    step: number;\n\n    /** the number big step */\n    bigStep: number;\n\n    /** Whether the control is focused. */\n    readonly focused: boolean;\n\n    /** Handles step up and down */\n    abstract stepUp(step: number): void;\n\n    abstract stepDown(step: number): void;\n}\n","import { Directive, Input } from '@angular/core';\n\n\nlet nextUniqueId = 0;\n\n@Directive({\n    selector: 'mc-hint',\n    host: {\n        class: 'mc-hint',\n        '[attr.id]': 'id'\n    }\n})\nexport class McHint {\n    @Input() id: string = `mc-hint-${nextUniqueId++}`;\n}\n","import { Directive } from '@angular/core';\n\n\n@Directive({\n    selector: '[mcPrefix]'\n})\nexport class McPrefix {\n}\n","import { Component, EventEmitter, Output } from '@angular/core';\n\n\n@Component({\n    selector: 'mc-stepper',\n    template: `\n        <i class=\"mc mc-icon mc-icon_light mc-second mc-stepper-step-up mc-angle-down-L_16\"\n           (mousedown)=\"onStepUp($event)\">\n        </i>\n        <i class=\"mc mc-icon mc-icon_light mc-second mc-stepper-step-down mc-angle-down-L_16\"\n           (mousedown)=\"onStepDown($event)\">\n        </i>\n    `\n})\nexport class McStepper {\n    @Output()\n    readonly stepUp: EventEmitter<void> = new EventEmitter<void>();\n    @Output()\n    readonly stepDown: EventEmitter<void> = new EventEmitter<void>();\n\n    onStepUp($event: MouseEvent) {\n        this.stepUp.emit();\n        $event.preventDefault();\n    }\n\n    onStepDown($event: MouseEvent) {\n        this.stepDown.emit();\n        $event.preventDefault();\n    }\n}\n","import { Directive } from '@angular/core';\n\n\n@Directive({\n    selector: '[mcSuffix]'\n})\nexport class McSuffix {\n}\n","import {\n    AfterContentChecked,\n    AfterContentInit,\n    AfterViewInit,\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    ContentChild,\n    ContentChildren, Directive,\n    ElementRef,\n    QueryList,\n    ViewEncapsulation\n} from '@angular/core';\nimport { NgControl } from '@angular/forms';\nimport { ESCAPE } from '@ptsecurity/cdk/keycodes';\nimport { CanColor, CanColorCtor, mixinColor } from '@ptsecurity/mosaic/core';\nimport { EMPTY, merge } from 'rxjs';\nimport { startWith } from 'rxjs/operators';\n\n\nimport { McCleaner } from './cleaner';\nimport { McFormFieldControl } from './form-field-control';\nimport { getMcFormFieldMissingControlError } from './form-field-errors';\nimport { McFormFieldNumberControl } from './form-field-number-control';\nimport { McHint } from './hint';\nimport { McPrefix } from './prefix';\nimport { McStepper } from './stepper';\nimport { McSuffix } from './suffix';\n\n\nlet nextUniqueId = 0;\n\nexport class McFormFieldBase {\n    constructor(public _elementRef: ElementRef) {}\n}\n\nexport const _McFormFieldMixinBase: CanColorCtor & typeof McFormFieldBase = mixinColor(McFormFieldBase);\n\n@Component({\n    selector: 'mc-form-field',\n    exportAs: 'mcFormField',\n    templateUrl: 'form-field.html',\n    // McInput is a directive and can't have styles, so we need to include its styles here.\n    // The McInput styles are fairly minimal so it shouldn't be a big deal for people who\n    // aren't using McInput.\n    styleUrls: [\n        'form-field.css',\n        '../input/input.css',\n        '../textarea/textarea.css'\n    ],\n    host: {\n        class: 'mc-form-field',\n        '[class.mc-form-field_invalid]': '_control.errorState',\n        '[class.mc-disabled]': '_control.disabled',\n        '[class.mc-form-field_has-prefix]': 'hasPrefix',\n        '[class.mc-form-field_has-suffix]': 'hasSuffix',\n        '[class.mc-form-field_has-cleaner]': 'canShowCleaner',\n        '[class.mc-form-field_has-stepper]': 'canShowStepper',\n        '[class.mc-focused]': '_control.focused',\n        '[class.ng-untouched]': '_shouldForward(\"untouched\")',\n        '[class.ng-touched]': '_shouldForward(\"touched\")',\n        '[class.ng-pristine]': '_shouldForward(\"pristine\")',\n        '[class.ng-dirty]': '_shouldForward(\"dirty\")',\n        '[class.ng-valid]': '_shouldForward(\"valid\")',\n        '[class.ng-invalid]': '_shouldForward(\"invalid\")',\n        '[class.ng-pending]': '_shouldForward(\"pending\")',\n        '(keydown)': 'onKeyDown($event)',\n        '(mouseenter)': 'onHoverChanged(true)',\n        '(mouseleave)': 'onHoverChanged(false)'\n    },\n    inputs: ['color'],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\n\nexport class McFormField extends _McFormFieldMixinBase implements\n    AfterContentInit, AfterContentChecked, AfterViewInit, CanColor {\n\n    @ContentChild(McFormFieldControl) _control: McFormFieldControl<any>;\n    @ContentChild(McFormFieldNumberControl) _numberControl: McFormFieldNumberControl<any>;\n    @ContentChild(McStepper) _stepper: McStepper;\n\n    @ContentChildren(McHint) _hint: QueryList<McHint>;\n    @ContentChildren(McSuffix) _suffix: QueryList<McSuffix>;\n    @ContentChildren(McPrefix) _prefix: QueryList<McPrefix>;\n    @ContentChildren(McCleaner) _cleaner: QueryList<McCleaner>;\n\n    // Unique id for the internal form field label.\n    _labelId = `mc-form-field-label-${nextUniqueId++}`;\n\n    hovered: boolean = false;\n\n    constructor(public _elementRef: ElementRef, private _changeDetectorRef: ChangeDetectorRef) {\n        super(_elementRef);\n    }\n\n    ngAfterContentInit() {\n        this._validateControlChild();\n\n        if (this._control.controlType) {\n            this._elementRef.nativeElement.classList\n                .add(`mc-form-field-type-${this._control.controlType}`);\n\n            if (this._numberControl && this.hasStepper) {\n                this._stepper.stepUp.subscribe(this.onStepUp.bind(this));\n                this._stepper.stepDown.subscribe(this.onStepDown.bind(this));\n            }\n        }\n\n        // Subscribe to changes in the child control state in order to update the form field UI.\n        this._control.stateChanges.pipe(startWith())\n            .subscribe(() => {\n                this._changeDetectorRef.markForCheck();\n            });\n\n        if (this._numberControl) {\n            this._numberControl.stateChanges.pipe(startWith())\n                .subscribe(() => {\n                    this._changeDetectorRef.markForCheck();\n                });\n        }\n\n        // Run change detection if the value changes.\n        const valueChanges = this._control.ngControl && this._control.ngControl.valueChanges || EMPTY;\n\n        merge(valueChanges)\n            .subscribe(() => this._changeDetectorRef.markForCheck());\n    }\n\n    ngAfterContentChecked() {\n        this._validateControlChild();\n    }\n\n    ngAfterViewInit() {\n        // Avoid animations on load.\n        this._changeDetectorRef.detectChanges();\n    }\n\n    clearValue($event) {\n        $event.stopPropagation();\n\n        if (this._control && this._control.ngControl) {\n            this._control.ngControl.reset();\n        }\n    }\n\n    onContainerClick($event) {\n        if (this._control.onContainerClick) {\n            this._control.onContainerClick($event);\n        }\n    }\n\n    onKeyDown(event: KeyboardEvent): void {\n        // tslint:disable-next-line:deprecation\n        if (event.keyCode === ESCAPE && this._control.focused && this.hasCleaner) {\n            if (this._control && this._control.ngControl) {\n                this._control.ngControl.reset();\n            }\n\n            event.preventDefault();\n        }\n    }\n\n    onHoverChanged(isHovered: boolean) {\n        if (isHovered !== this.hovered) {\n            this.hovered  = isHovered;\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n\n    onStepUp() {\n        if (this._numberControl) {\n            this._numberControl.stepUp(this._numberControl.step);\n        }\n    }\n\n    onStepDown() {\n        if (this._numberControl) {\n            this._numberControl.stepDown(this._numberControl.step);\n        }\n    }\n\n    /** Determines whether a class from the NgControl should be forwarded to the host element. */\n    _shouldForward(prop: keyof NgControl): boolean {\n        const ngControl = this._control ? this._control.ngControl : null;\n\n        return ngControl && ngControl[prop];\n    }\n\n    /** Throws an error if the form field's control is missing. */\n    protected _validateControlChild() {\n        if (!this._control) {\n            throw getMcFormFieldMissingControlError();\n        }\n    }\n\n    get hasHint(): boolean {\n        return this._hint && this._hint.length > 0;\n    }\n\n    get hasSuffix(): boolean {\n        return this._suffix && this._suffix.length > 0;\n    }\n\n    get hasPrefix(): boolean {\n        return this._prefix && this._prefix.length > 0;\n    }\n\n    get hasCleaner(): boolean {\n        return this._cleaner && this._cleaner.length > 0;\n    }\n\n    get hasStepper(): boolean {\n        return !!this._stepper;\n    }\n\n    get canShowCleaner(): boolean {\n        return this.hasCleaner &&\n            this._control &&\n            this._control.ngControl\n                ? this._control.ngControl.value && !this._control.disabled\n                : false;\n    }\n\n\n    get disabled(): boolean {\n        return this._control && this._control.disabled;\n    }\n\n    get canShowStepper(): boolean {\n        return this._numberControl &&\n            !this.disabled &&\n            (\n                this._numberControl.focused ||\n                this.hovered\n            );\n    }\n}\n\n@Directive({\n    selector: 'mc-form-field[mcFormFieldWithoutBorders]',\n    exportAs: 'mcFormFieldWithoutBorders',\n    host: { class: 'mc-form-field_without-borders' }\n})\nexport class McFormFieldWithoutBorders {}\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","\nexport function isBoolean(val: any): val is boolean { return typeof val === 'boolean'; }\n\nexport function toBoolean(value: any): boolean {\n    return value != null && `${value}` !== 'false';\n}\n","import { NgModule, InjectionToken, Optional, Inject, isDevMode } from '@angular/core';\nimport { BidiModule } from '@ptsecurity/cdk/bidi';\n\n\n// Injection token that configures whether the Mosaic sanity checks are enabled.\nexport const MC_SANITY_CHECKS = new InjectionToken<boolean>('mc-sanity-checks', {\n    providedIn: 'root',\n    factory: MC_SANITY_CHECKS_FACTORY\n});\n\nexport function MC_SANITY_CHECKS_FACTORY(): boolean {\n    return true;\n}\n\n/**\n * Module that captures anything that should be loaded and/or run for *all* Mosaic\n * components. This includes Bidi, etc.\n *\n * This module should be imported to each top-level component module (e.g., McTabsModule).\n */\n@NgModule({\n    imports: [ BidiModule ],\n    exports: [ BidiModule ]\n})\nexport class McCommonModule {\n    // Whether we've done the global sanity checks (e.g. a theme is loaded, there is a doctype).\n    private _hasDoneGlobalChecks = false;\n\n    // Reference to the global `document` object.\n    private _document = typeof document === 'object' && document ? document : null;\n\n    // Reference to the global 'window' object.\n    private _window = typeof window === 'object' && window ? window : null;\n\n    constructor(@Optional() @Inject(MC_SANITY_CHECKS) private _sanityChecksEnabled: boolean) {\n        if (this._areChecksEnabled() && !this._hasDoneGlobalChecks) {\n            this._checkDoctypeIsDefined();\n            this._checkThemeIsPresent();\n            this._hasDoneGlobalChecks = true;\n        }\n    }\n\n    // Whether any sanity checks are enabled\n    private _areChecksEnabled(): boolean {\n        return this._sanityChecksEnabled && isDevMode() && !this._isTestEnv();\n    }\n\n    // Whether the code is running in tests.\n    private _isTestEnv() {\n        // tslint:disable-next-line\n        return this._window && (this._window['__karma__'] || this._window['jasmine']);\n    }\n\n    private _checkDoctypeIsDefined(): void {\n        if (this._document && !this._document.doctype) {\n            console.warn(\n                'Current document does not have a doctype. This may cause ' +\n                'some Mosaic components not to behave as expected.'\n            );\n        }\n    }\n\n    private _checkThemeIsPresent(): void {\n        if (this._document && typeof getComputedStyle === 'function') {\n            const testElement = this._document.createElement('div');\n\n            testElement.classList.add('mc-theme-loaded-marker');\n            this._document.body.appendChild(testElement);\n\n            const computedStyle = getComputedStyle(testElement);\n\n            // In some situations, the computed style of the test element can be null. For example in\n            // Firefox, the computed style is null if an application is running inside of a hidden iframe.\n            // See: https://bugzilla.mozilla.org/show_bug.cgi?id=548397\n            if (computedStyle && computedStyle.display !== 'none') {\n                console.warn(\n                    'Could not find Mosaic core theme. Most Mosaic ' +\n                    'components may not work as expected. For more info refer ' +\n                    'to the theming guide: link there'\n                );\n            }\n\n            this._document.body.removeChild(testElement);\n        }\n    }\n}\n","import { coerceBooleanProperty } from '@ptsecurity/cdk/coercion';\n\nimport { Constructor } from './constructor';\n\n\nexport interface CanDisable {\n    disabled: boolean;\n}\n\n/** @docs-private */\nexport type CanDisableCtor = Constructor<CanDisable>;\n\nexport function mixinDisabled<T extends Constructor<{}>>(base: T): CanDisableCtor & T {\n    return class extends base {\n        get disabled() {\n            return this._disabled;\n        }\n\n        set disabled(value: any) {\n            this._disabled = coerceBooleanProperty(value);\n        }\n\n        private _disabled: boolean = false;\n\n        constructor(...args: any[]) {\n            // tslint:disable-next-line\n            super(...args);\n        }\n    };\n}\n","import { ElementRef } from '@angular/core';\n\nimport { Constructor } from './constructor';\n\n\nexport interface CanColor {\n    color: ThemePalette;\n}\n\n/** @docs-private */\nexport type CanColorCtor = Constructor<CanColor>;\n\nexport interface HasElementRef {\n    _elementRef: ElementRef;\n}\n\nexport enum ThemePalette {\n    Primary = 'primary',\n    Second = 'second',\n    Error = 'error',\n    Default = 'second',\n    Empty = ''\n}\n\n/** Mixin to augment a directive with a `color` property. */\nexport function mixinColor<T extends Constructor<HasElementRef>>(\n    base: T,\n    defaultColor: ThemePalette = ThemePalette.Default\n): CanColorCtor & T {\n    return class extends base {\n\n        private _color: ThemePalette;\n\n        get color(): ThemePalette {\n            return this._color;\n        }\n\n        set color(value: ThemePalette) {\n            const colorPalette = value || defaultColor;\n\n            if (colorPalette !== this._color) {\n                if (this._color) {\n                    this._elementRef.nativeElement.classList.remove(`mc-${this._color}`);\n                }\n\n                if (colorPalette) {\n                    this._elementRef.nativeElement.classList.add(`mc-${colorPalette}`);\n                }\n\n                this._color = colorPalette;\n            }\n        }\n\n        constructor(...args: any[]) {\n            super(...args);\n\n            this.color = defaultColor;\n        }\n    };\n}\n\n","import { Constructor } from './constructor';\nimport { CanDisable } from './disabled';\n\n\nexport interface HasTabIndex {\n    tabIndex: number;\n}\n\nexport type HasTabIndexCtor = Constructor<HasTabIndex>;\n\n// Mixin to augment a directive with a `tabIndex` property.\nexport function mixinTabIndex<T extends Constructor<CanDisable>>(base: T, defaultTabIndex = 0): HasTabIndexCtor & T {\n    return class extends base {\n        get tabIndex(): number {\n            return this.disabled ? -1 : this._tabIndex;\n        }\n\n        set tabIndex(value: number) {\n            this._tabIndex = value != null ? value : defaultTabIndex;\n        }\n\n        private _tabIndex: number = defaultTabIndex;\n\n        constructor(...args: any[]) {\n            super(...args);\n        }\n    };\n}\n","import { FormControl, FormGroupDirective, NgControl, NgForm } from '@angular/forms';\nimport { Subject } from 'rxjs';\n\nimport { ErrorStateMatcher } from '../error/error-options';\n\nimport { Constructor } from './constructor';\n\n\n/** @docs-private */\nexport interface CanUpdateErrorState {\n\n    readonly stateChanges: Subject<void>;\n\n    errorState: boolean;\n    errorStateMatcher: ErrorStateMatcher;\n\n    updateErrorState();\n}\n\n/** @docs-private */\nexport type CanUpdateErrorStateCtor = Constructor<CanUpdateErrorState>;\n\n/** @docs-private */\nexport interface HasErrorState {\n    parentFormGroup: FormGroupDirective;\n    parentForm: NgForm;\n    defaultErrorStateMatcher: ErrorStateMatcher;\n    ngControl: NgControl;\n}\n\n/**\n * Mixin to augment a directive with updateErrorState method.\n * For component with `errorState` and need to update `errorState`.\n */\nexport function mixinErrorState<T extends Constructor<HasErrorState>>(base: T): CanUpdateErrorStateCtor & T {\n    return class extends base {\n        /** Whether the component is in an error state. */\n        errorState: boolean = false;\n\n        /**\n         * Stream that emits whenever the state of the input changes such that the wrapping\n         * `MatFormField` needs to run change detection.\n         */\n        readonly stateChanges = new Subject<void>();\n\n        errorStateMatcher: ErrorStateMatcher;\n\n        constructor(...args: any[]) {\n            super(...args);\n        }\n\n        updateErrorState() {\n            const oldState = this.errorState;\n            const parent = this.parentFormGroup || this.parentForm;\n            const matcher = this.errorStateMatcher || this.defaultErrorStateMatcher;\n            const control = this.ngControl ? this.ngControl.control as FormControl : null;\n            const newState = matcher.isErrorState(control, parent);\n\n            if (newState !== oldState) {\n                this.errorState = newState;\n                this.stateChanges.next();\n            }\n        }\n    };\n}\n","import {\n    AfterViewChecked,\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    ElementRef,\n    EventEmitter,\n    Inject,\n    InjectionToken,\n    Input,\n    OnDestroy,\n    Optional,\n    Output,\n    QueryList,\n    ViewEncapsulation\n} from '@angular/core';\nimport { coerceBooleanProperty } from '@ptsecurity/cdk/coercion';\nimport { ENTER, SPACE } from '@ptsecurity/cdk/keycodes';\nimport { Subject } from 'rxjs';\n\nimport { McOptgroup } from './optgroup';\n\n\n/**\n * Option IDs need to be unique across components, so this counter exists outside of\n * the component definition.\n */\nlet uniqueIdCounter = 0;\n\n/** Event object emitted by McOption when selected or deselected. */\nexport class McOptionSelectionChange {\n    constructor(public source: McOption, public isUserInput = false) {}\n}\n\n/**\n * Describes a parent component that manages a list of options.\n * Contains properties that the options can inherit.\n * @docs-private\n */\nexport interface IMcOptionParentComponent {\n    multiple?: boolean;\n}\n\n/**\n * Injection token used to provide the parent component to options.\n */\nexport const MC_OPTION_PARENT_COMPONENT =\n    new InjectionToken<IMcOptionParentComponent>('MC_OPTION_PARENT_COMPONENT');\n\n/**\n * Single option inside of a `<mc-select>` element.\n */\n@Component({\n    selector: 'mc-option',\n    exportAs: 'mcOption',\n    host: {\n        '[attr.tabindex]': 'getTabIndex()',\n        class: 'mc-option',\n        '[class.mc-selected]': 'selected',\n        '[class.mc-option-multiple]': 'multiple',\n        '[class.mc-active]': 'active',\n        '[class.mc-disabled]': 'disabled',\n        '[id]': 'id',\n\n        '(click)': 'selectViaInteraction()',\n        '(keydown)': 'handleKeydown($event)'\n    },\n    styleUrls: ['./option.css'],\n    templateUrl: './option.html',\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class McOption implements AfterViewChecked, OnDestroy {\n    /** The form value of the option. */\n    @Input() value: any;\n\n    /** Event emitted when the option is selected or deselected. */\n    // tslint:disable-next-line:no-output-on-prefix\n    @Output() readonly onSelectionChange = new EventEmitter<McOptionSelectionChange>();\n\n    /** Emits when the state of the option changes and any parents have to be notified. */\n    readonly stateChanges = new Subject<void>();\n\n    /**\n     * The displayed value of the option. It is necessary to show the selected option in the\n     * select's trigger.\n     */\n    get viewValue(): string {\n        // TODO(kara): Add input property alternative for node envs.\n        return (this.getHostElement().textContent || '').trim();\n    }\n\n    /** Whether the wrapping component is in multiple selection mode. */\n    get multiple() {\n        return this.parent && this.parent.multiple;\n    }\n\n    get id(): string {\n        return this._id;\n    }\n\n    private _id = `mc-option-${uniqueIdCounter++}`;\n\n    get selected(): boolean {\n        return this._selected;\n    }\n\n    private _selected = false;\n\n    @Input()\n    get disabled() {\n        return (this.group && this.group.disabled) || this._disabled;\n    }\n\n    set disabled(value: any) {\n        this._disabled = coerceBooleanProperty(value);\n    }\n\n    private _disabled = false;\n\n    /**\n     * Whether or not the option is currently active and ready to be selected.\n     * An active option displays styles as if it is focused, but the\n     * focus is actually retained somewhere else. This comes in handy\n     * for components like autocomplete where focus must remain on the input.\n     */\n    get active(): boolean {\n        return this._active;\n    }\n\n    private _active = false;\n\n    private mostRecentViewValue = '';\n\n    constructor(\n        private readonly element: ElementRef,\n        private readonly changeDetectorRef: ChangeDetectorRef,\n        @Optional() @Inject(MC_OPTION_PARENT_COMPONENT) private readonly parent: IMcOptionParentComponent,\n        @Optional() readonly group: McOptgroup\n    ) {}\n\n    ngAfterViewChecked() {\n        // Since parent components could be using the option's label to display the selected values\n        // (e.g. `mc-select`) and they don't have a way of knowing if the option's label has changed\n        // we have to check for changes in the DOM ourselves and dispatch an event. These checks are\n        // relatively cheap, however we still limit them only to selected options in order to avoid\n        // hitting the DOM too often.\n        if (this._selected) {\n            const viewValue = this.viewValue;\n\n            if (viewValue !== this.mostRecentViewValue) {\n                this.mostRecentViewValue = viewValue;\n                this.stateChanges.next();\n            }\n        }\n    }\n\n    ngOnDestroy() {\n        this.stateChanges.complete();\n    }\n\n    select(): void {\n        if (!this._selected) {\n            this._selected = true;\n\n            this.changeDetectorRef.markForCheck();\n            this.emitSelectionChangeEvent();\n        }\n    }\n\n    deselect(): void {\n        if (this._selected) {\n            this._selected = false;\n\n            this.changeDetectorRef.markForCheck();\n            this.emitSelectionChangeEvent();\n        }\n    }\n\n    focus(): void {\n        const element = this.getHostElement();\n\n        if (typeof element.focus === 'function') {\n            element.focus();\n        }\n    }\n\n    /**\n     * This method sets display styles on the option to make it appear\n     * active. This is used by the ActiveDescendantKeyManager so key\n     * events will display the proper options as active on arrow key events.\n     */\n    setActiveStyles(): void {\n        if (!this._active) {\n            this._active = true;\n            this.changeDetectorRef.markForCheck();\n        }\n    }\n\n    /**\n     * This method removes display styles on the option that made it appear\n     * active. This is used by the ActiveDescendantKeyManager so key\n     * events will display the proper options as active on arrow key events.\n     */\n    setInactiveStyles(): void {\n        if (this._active) {\n            this._active = false;\n            this.changeDetectorRef.markForCheck();\n        }\n    }\n\n    /** Gets the label to be used when determining whether the option should be focused. */\n    getLabel(): string {\n        return this.viewValue;\n    }\n\n    /** Ensures the option is selected when activated from the keyboard. */\n    handleKeydown(event: KeyboardEvent): void {\n        // tslint:disable-next-line\n        if (event.keyCode === ENTER || event.keyCode === SPACE) {\n            this.selectViaInteraction();\n\n            // Prevent the page from scrolling down and form submits.\n            event.preventDefault();\n        }\n    }\n\n    /**\n     * `Selects the option while indicating the selection came from the user. Used to\n     * determine if the select's view -> model callback should be invoked.`\n     */\n    selectViaInteraction(): void {\n        if (!this.disabled) {\n            this._selected = this.multiple ? !this._selected : true;\n\n            this.changeDetectorRef.markForCheck();\n            this.emitSelectionChangeEvent(true);\n        }\n    }\n\n    getTabIndex(): string {\n        return this.disabled ? '-1' : '0';\n    }\n\n    getHostElement(): HTMLElement {\n        return this.element.nativeElement;\n    }\n\n    /** Emits the selection change event. */\n    private emitSelectionChangeEvent(isUserInput = false): void {\n        this.onSelectionChange.emit(new McOptionSelectionChange(this, isUserInput));\n    }\n}\n\n/**\n * Counts the amount of option group labels that precede the specified option.\n * @param optionIndex Index of the option at which to start counting.\n * @param options Flat list of all of the options.\n * @param optionGroups Flat list of all of the option groups.\n * @docs-private\n */\nexport function countGroupLabelsBeforeOption(\n    optionIndex: number,\n    options: QueryList<McOption>,\n    optionGroups: QueryList<McOptgroup>\n): number {\n\n    if (optionGroups.length) {\n        const optionsArray = options.toArray();\n        const groups = optionGroups.toArray();\n\n        let groupCounter = 0;\n\n        for (let i = 0; i < optionIndex + 1; i++) {\n            if (optionsArray[i].group && optionsArray[i].group === groups[groupCounter]) {\n                groupCounter++;\n            }\n        }\n\n        return groupCounter;\n    }\n\n    return 0;\n}\n\n/**\n * Determines the position to which to scroll a panel in order for an option to be into view.\n * @param optionIndex Index of the option to be scrolled into the view.\n * @param optionHeight Height of the options.\n * @param currentScrollPosition Current scroll position of the panel.\n * @param panelHeight Height of the panel.\n * @docs-private\n */\nexport function getOptionScrollPosition(\n    optionIndex: number,\n    optionHeight: number,\n    currentScrollPosition: number,\n    panelHeight: number\n): number {\n    const optionOffset = optionIndex * optionHeight;\n\n    if (optionOffset < currentScrollPosition) { return optionOffset; }\n\n    if (optionOffset + optionHeight > currentScrollPosition + panelHeight) {\n        return Math.max(0, optionOffset - panelHeight + optionHeight);\n    }\n\n    return currentScrollPosition;\n}\n\n","import { ConnectionPositionPair } from '@ptsecurity/cdk/overlay';\n\n\nexport const POSITION_MAP: { [key: string]: ConnectionPositionPair } = {\n    top         : {\n        originX : 'center',\n        originY : 'top',\n        overlayX: 'center',\n        overlayY: 'bottom'\n    },\n    topCenter   : {\n        originX : 'center',\n        originY : 'top',\n        overlayX: 'center',\n        overlayY: 'bottom',\n        offsetX : undefined,\n        offsetY : undefined\n    },\n    topLeft     : {\n        originX : 'start',\n        originY : 'top',\n        overlayX: 'start',\n        overlayY: 'bottom',\n        offsetX : undefined,\n        offsetY : undefined\n    },\n    topRight    : {\n        originX : 'end',\n        originY : 'top',\n        overlayX: 'end',\n        overlayY: 'bottom',\n        offsetX : undefined,\n        offsetY : undefined\n    },\n    right       : {\n        originX : 'end',\n        originY : 'center',\n        overlayX: 'start',\n        overlayY: 'center'\n    },\n    rightTop    : {\n        originX : 'end',\n        originY : 'top',\n        overlayX: 'start',\n        overlayY: 'top',\n        offsetX : undefined,\n        offsetY : undefined\n    },\n    rightBottom : {\n        originX : 'end',\n        originY : 'bottom',\n        overlayX: 'start',\n        overlayY: 'bottom',\n        offsetX : undefined,\n        offsetY : undefined\n    },\n    bottom      : {\n        originX : 'center',\n        originY : 'bottom',\n        overlayX: 'center',\n        overlayY: 'top'\n    },\n    bottomCenter: {\n        originX : 'center',\n        originY : 'bottom',\n        overlayX: 'center',\n        overlayY: 'top'\n    },\n    bottomLeft  : {\n        originX : 'start',\n        originY : 'bottom',\n        overlayX: 'start',\n        overlayY: 'top'\n    },\n    bottomRight : {\n        originX : 'end',\n        originY : 'bottom',\n        overlayX: 'end',\n        overlayY: 'top'\n    },\n    left        : {\n        originX : 'start',\n        originY : 'center',\n        overlayX: 'end',\n        overlayY: 'center'\n    },\n    leftTop     : {\n        originX : 'start',\n        originY : 'top',\n        overlayX: 'end',\n        overlayY: 'top'\n    },\n    leftBottom  : {\n        originX : 'start',\n        originY : 'bottom',\n        overlayX: 'end',\n        overlayY: 'bottom'\n    }\n};\n\nexport const DEFAULT_4_POSITIONS = _objectValues([\n    POSITION_MAP.top, POSITION_MAP.right, POSITION_MAP.bottom, POSITION_MAP.left\n]);\n\nfunction arrayMap<T, S>(array: T[], iteratee: (item: T, index: number, arr: T[]) => S): S[] {\n    let index = -1;\n    const length = array == null ? 0 : array.length;\n    const result = Array(length);\n\n    while (++index < length) {\n        result[ index ] = iteratee(array[ index ], index, array);\n    }\n\n    return result;\n}\nfunction baseValues<T>(object: { [key: string]: T } | T[], props: string[]): T[] {\n    return arrayMap(props,  (key) => {\n        return object[ key ];\n    });\n}\nfunction _objectValues<T>(object: { [key: string]: T } | T[]): T[] {\n    return object == null ? [] : baseValues(object, Object.keys(object));\n}\n","/**\n * Returns an exception to be thrown when attempting to change a select's `multiple` option\n * after initialization.\n * @docs-private\n */\nexport function getMcSelectDynamicMultipleError(): Error {\n    return Error('Cannot change `multiple` mode of select after initialization.');\n}\n\n/**\n * Returns an exception to be thrown when attempting to assign a non-array value to a select\n * in `multiple` mode. Note that `undefined` and `null` are still valid values to allow for\n * resetting the value.\n * @docs-private\n */\nexport function getMcSelectNonArrayValueError(): Error {\n    return Error('Value must be an array in multiple-selection mode.');\n}\n\n/**\n * Returns an exception to be thrown when assigning a non-function value to the comparator\n * used to determine if a value corresponds to an option. Note that whether the function\n * actually takes two values and returns a boolean is not checked.\n */\nexport function getMcSelectNonFunctionValueError(): Error {\n    return Error('`compareWith` must be a function.');\n}\n","export function getMcFormFieldMissingControlError(): Error {\n  return Error('mc-form-field must contain a McFormFieldControl.');\n}\n","export function getMcInputUnsupportedTypeError(inputType: string): Error {\n    return Error(`Input type \"${inputType}\" isn't supported by mcInput.`);\n}\n","/** @docs-private */\nexport function createMissingDateImplError(provider: string) {\n    return Error(\n        `McDatepicker: No provider found for ${provider}. You must import one of the existing ` +\n        `modules at your application root or provide a custom implementation or use exists ones.`);\n}\n","export function throwMcDropdownMissingError() {\n    throw Error(`mcDropdownTriggerFor: must pass in an mc-dropdown instance.\n    Example:\n      <mc-dropdown #dropdown=\"mcDropdown\"></mc-dropdown>\n      <button [mcDropdownTriggerFor]=\"dropdown\"></button>`);\n}\n\n/**\n * Throws an exception for the case when dropdown's x-position value isn't valid.\n * In other words, it doesn't match 'before' or 'after'.\n * @docs-private\n */\nexport function throwMcDropdownInvalidPositionX() {\n    throw Error(`xPosition value must be either 'before' or after'.\n      Example: <mc-dropdown xPosition=\"before\" #dropdown=\"mcDropdown\"></mc-dropdown>`);\n}\n\n/**\n * Throws an exception for the case when dropdown's y-position value isn't valid.\n * In other words, it doesn't match 'above' or 'below'.\n * @docs-private\n */\nexport function throwMcDropdownInvalidPositionY() {\n    throw Error(`yPosition value must be either 'above' or below'.\n      Example: <mc-dropdown yPosition=\"above\" #dropdown=\"mcDropdown\"></mc-dropdown>`);\n}\n","import { NgModule, Directive, ElementRef, QueryList } from '@angular/core';\n\n\n/**\n * Shared directive to count lines inside a text area, such as a list item.\n * Line elements can be extracted with a @ContentChildren(McLine) query, then\n * counted by checking the query list's length.\n */\n@Directive({\n    selector: '[mc-line], [mcLine]',\n    host: { class: 'mc-line' }\n})\nexport class McLine {}\n\n/**\n * Helper that takes a query list of lines and sets the correct class on the host.\n * @docs-private\n */\nexport class McLineSetter {\n    constructor(private _lines: QueryList<McLine>, private _element: ElementRef) {\n        this._setLineClass(this._lines.length);\n\n        this._lines.changes.subscribe(() => {\n            this._setLineClass(this._lines.length);\n        });\n    }\n\n    private _setLineClass(count: number): void {\n        this._resetClasses();\n        if (count === 2 || count === 3) {\n            this._setClass(`mc-${count}-line`, true);\n        } else if (count > 3) {\n            this._setClass(`mc-multi-line`, true);\n        }\n    }\n\n    private _resetClasses(): void {\n        this._setClass('mc-2-line', false);\n        this._setClass('mc-3-line', false);\n        this._setClass('mc-multi-line', false);\n    }\n\n    private _setClass(className: string, isAdd: boolean): void {\n        if (isAdd) {\n            this._element.nativeElement.classList.add(className);\n        } else {\n            this._element.nativeElement.classList.remove(className);\n        }\n    }\n}\n\n@NgModule({\n    imports: [],\n    exports: [McLine],\n    declarations: [McLine]\n})\nexport class McLineModule {}\n","import { Injectable } from '@angular/core';\nimport { FormGroupDirective, NgForm, FormControl } from '@angular/forms';\n\n\n/** Error state matcher that matches when a control is invalid and dirty. */\n@Injectable()\nexport class ShowOnDirtyErrorStateMatcher implements ErrorStateMatcher {\n    isErrorState(control: FormControl | null, form: FormGroupDirective | NgForm | null): boolean {\n        return !!(control && control.invalid && (control.dirty || (form && form.submitted)));\n    }\n}\n\n/** Provider that defines how form controls behave with regards to displaying error messages. */\n@Injectable({ providedIn: 'root' })\nexport class ErrorStateMatcher {\n    isErrorState(control: FormControl | null, form: FormGroupDirective | NgForm | null): boolean {\n        return !!(control && control.invalid && (control.touched || (form && form.submitted)));\n    }\n}\n","import { Component, ViewEncapsulation, Input, ChangeDetectionStrategy } from '@angular/core';\n\n\nexport type McPseudoCheckboxState = 'unchecked' | 'checked' | 'indeterminate';\n\n/**\n * Component that shows a simplified checkbox without including any kind of \"real\" checkbox.\n * Meant to be used when the checkbox is purely decorative and a large number of them will be\n * included, such as for the options in a multi-select. Uses no SVGs or complex animations.\n * Note that theming is meant to be handled by the parent element, e.g.\n * `mc-primary .mc-pseudo-checkbox`.\n *\n * Note that this component will be completely invisible to screen-reader users. This is *not*\n * interchangeable with `<mc-checkbox>` and should *not* be used if the user would directly\n * interact with the checkbox. The pseudo-checkbox should only be used as an implementation detail\n * of more complex components that appropriately handle selected / checked state.\n * @docs-private\n */\n@Component({\n    encapsulation: ViewEncapsulation.None,\n    preserveWhitespaces: false,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    selector: 'mc-pseudo-checkbox',\n    styleUrls: ['pseudo-checkbox.css'],\n    templateUrl: 'pseudo-checkbox.partial.html',\n    host: {\n        class: 'mc-pseudo-checkbox',\n        '[class.mc-indeterminate]': 'state === \"indeterminate\"',\n        '[class.mc-checked]': 'state === \"checked\"',\n        '[class.mc-disabled]': 'disabled'\n    }\n})\nexport class McPseudoCheckbox {\n    @Input() state: McPseudoCheckboxState = 'unchecked';\n\n    @Input() disabled: boolean = false;\n}\n","import { NgModule } from '@angular/core';\n\nimport { McPseudoCheckbox } from './pseudo-checkbox/pseudo-checkbox';\n\n\n@NgModule({\n    exports: [McPseudoCheckbox],\n    declarations: [McPseudoCheckbox]\n})\nexport class McPseudoCheckboxModule {}\n\n\nexport * from './pseudo-checkbox/pseudo-checkbox';\n","import { DOCUMENT } from '@angular/common';\nimport { Inject, Injectable } from '@angular/core';\n\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class McMeasureScrollbarService {\n\n    get scrollBarWidth(): number {\n        if (this._scrollbarWidth) {\n            return this._scrollbarWidth;\n        }\n        this.initScrollBarWidth();\n\n        return this._scrollbarWidth;\n    }\n\n    private _scrollbarWidth: number;\n    private scrollbarMeasure = {\n        position: 'absolute',\n        top: '-9999px',\n        width: '50px',\n        height: '50px',\n        overflow: 'scroll'\n    };\n\n    constructor(\n        @Inject(DOCUMENT) private document: any\n    ) {\n        this.initScrollBarWidth();\n    }\n\n    initScrollBarWidth() {\n        const scrollDiv = this.document.createElement('div');\n\n        // tslint:disable-next-line\n        for (const scrollProp in this.scrollbarMeasure) {\n            if (this.scrollbarMeasure.hasOwnProperty(scrollProp)) {\n                scrollDiv.style[scrollProp] = this.scrollbarMeasure[scrollProp];\n            }\n        }\n\n        this.document.body.appendChild(scrollDiv);\n\n        const width = scrollDiv.offsetWidth - scrollDiv.clientWidth;\n\n        this.document.body.removeChild(scrollDiv);\n        this._scrollbarWidth = width;\n    }\n}\n","import { Component, ViewEncapsulation, Input, ChangeDetectionStrategy } from '@angular/core';\n\nimport { mixinDisabled, CanDisable, CanDisableCtor } from '../common-behaviors/index';\n\n\n// Boilerplate for applying mixins to McOptgroup.\n/** @docs-private */\nexport class McOptgroupBase {}\n\nexport const McOptgroupMixinBase: CanDisableCtor & typeof McOptgroupBase = mixinDisabled(McOptgroupBase);\n\n// Counter for unique group ids.\nlet uniqueOptgroupIdCounter = 0;\n\n/**\n * Component that is used to group instances of `mc-option`.\n */\n@Component({\n    selector: 'mc-optgroup',\n    exportAs: 'mcOptgroup',\n    templateUrl: 'optgroup.html',\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    inputs: ['disabled'],\n    styleUrls: ['optgroup.css'],\n    host: {\n        class: 'mc-optgroup',\n        role: 'group',\n        '[class.mc-optgroup-disabled]': 'disabled',\n        '[attr.aria-disabled]': 'disabled.toString()',\n        '[attr.aria-labelledby]': 'labelId'\n    }\n})\nexport class McOptgroup extends McOptgroupMixinBase implements CanDisable {\n    /** Label for the option group. */\n    @Input() label: string;\n\n    /** Unique id for the underlying label. */\n    labelId: string = `mc-optgroup-label-${uniqueOptgroupIdCounter++}`;\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { McPseudoCheckboxModule } from '../selection/index';\n\nimport { McOptgroup } from './optgroup';\nimport { McOption } from './option';\n\n\n@NgModule({\n    imports: [CommonModule, McPseudoCheckboxModule],\n    exports: [McOption, McOptgroup],\n    declarations: [McOption, McOptgroup]\n})\nexport class McOptionModule {}\n\n\nexport * from './option';\nexport * from './optgroup';\n","import { InjectionToken } from '@angular/core';\n\n\n/** InjectionToken that can be used to specify the global label options. */\nexport const MC_LABEL_GLOBAL_OPTIONS =\n    new InjectionToken<LabelOptions>('mc-label-global-options');\n\n/** Type for the available floatLabel values. */\nexport type FloatLabelType = 'always' | 'never' | 'auto';\n\n/** Configurable options for floating labels. */\nexport interface LabelOptions {\n    /**\n     * Whether the label should float `always`, `never`, or `auto` (only when necessary).\n     * Default behavior is assumed to be `auto`.\n     */\n    float?: FloatLabelType;\n}\n","import {\n    animate,\n    state,\n    style,\n    transition,\n    trigger,\n    AnimationTriggerMetadata\n} from '@angular/animations';\n\n\nexport const fadeAnimation: AnimationTriggerMetadata =  trigger('fadeAnimation', [\n    state('void', style({ opacity: 0 })),\n    state('true', style({ opacity: 1 })),\n    state('false', style({ opacity: 0 })),\n    transition('* => true', animate('150ms cubic-bezier(0.0, 0.0, 0.2, 1)')),\n    transition('* => void', animate('150ms cubic-bezier(0.4, 0.0, 1, 1)'))\n]);\n","export enum AnimationCurves {\n    StandardCurve = 'cubic-bezier(0.4,0.0,0.2,1)',\n    DecelerationCurve = 'cubic-bezier(0.0,0.0,0.2,1)',\n    AccelerationCurve = 'cubic-bezier(0.4,0.0,1,1)',\n    SharpCurve = 'cubic-bezier(0.4,0.0,0.6,1)'\n}\n","import {\n    animate,\n    AnimationTriggerMetadata,\n    state,\n    style,\n    transition,\n    trigger,\n    query,\n    animateChild,\n    group\n} from '@angular/animations';\n\n\n/**\n * The following are all the animations for the mc-select component, with each\n * const containing the metadata for one animation.\n *\n * The values below match the implementation of the AngularJS Material mc-select animation.\n */\nexport const mcSelectAnimations: {\n    readonly transformPanel: AnimationTriggerMetadata;\n    readonly fadeInContent: AnimationTriggerMetadata;\n} = {\n    /**\n     * This animation transforms the select's overlay panel on and off the page.\n     *\n     * When the panel is attached to the DOM, it expands its width by the amount of padding, scales it\n     * up to 100% on the Y axis, fades in its border, and translates slightly up and to the\n     * side to ensure the option text correctly overlaps the trigger text.\n     *\n     * When the panel is removed from the DOM, it simply fades out linearly.\n     */\n    transformPanel: trigger('transformPanel', [\n        state('void', style({\n            transform: 'scaleY(0)',\n            minWidth: '100%',\n            opacity: 0\n        })),\n        transition('void => *', group([\n            query('@fadeInContent', animateChild()),\n            animate('150ms cubic-bezier(0.25, 0.8, 0.25, 1)')\n        ])),\n        transition('* => void', [\n            animate('250ms 100ms linear', style({ opacity: 0 }))\n        ])\n    ]),\n\n    /**\n     * This animation fades in the background color and text content of the\n     * select's options. It is time delayed to occur 100ms after the overlay\n     * panel has transformed in.\n     */\n    fadeInContent: trigger('fadeInContent', [\n        state('showing', style({ opacity: 1 })),\n        transition('void => showing', [\n            style({ opacity: 0 }),\n            animate('150ms 100ms cubic-bezier(0.55, 0, 0.55, 0.2)')\n        ])\n    ])\n};\n\n\n/**\n * @deprecated\n * @breaking-change 7.0.0\n */\nexport const transformPanel = mcSelectAnimations.transformPanel;\n\n/**\n * @deprecated\n * @breaking-change 7.0.0\n */\nexport const fadeInContent = mcSelectAnimations.fadeInContent;\n","import {\n    Attribute,\n    ChangeDetectionStrategy,\n    Component,\n    Directive,\n    ElementRef,\n    ViewEncapsulation\n} from '@angular/core';\n\nimport { mixinColor, CanColor, CanColorCtor, ThemePalette } from '@ptsecurity/mosaic/core';\n\n\n@Directive({\n    selector: '[mc-icon]',\n    host: { class: 'mc mc-icon' }\n})\nexport class McIconCSSStyler {}\n\n\nexport class McIconBase {\n    constructor(public _elementRef: ElementRef) {}\n}\n\nexport const _McIconMixinBase: CanColorCtor & typeof McIconBase = mixinColor(McIconBase, ThemePalette.Empty);\n\n\n@Component({\n    selector: `[mc-icon]`,\n    template: '<ng-content></ng-content>',\n    styleUrls: ['./icon.css'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n    inputs: ['color']\n})\nexport class McIcon extends _McIconMixinBase implements CanColor {\n    constructor(elementRef: ElementRef, @Attribute('mc-icon') iconName: string) {\n        super(elementRef);\n\n        elementRef.nativeElement.classList.add(iconName);\n    }\n\n    _getHostElement() {\n        return this._elementRef.nativeElement;\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { A11yModule } from '@ptsecurity/cdk/a11y';\nimport { PlatformModule } from '@ptsecurity/cdk/platform';\n\nimport {\n    McIcon,\n    McIconCSSStyler\n} from './icon.component';\n\n\n@NgModule({\n    imports: [\n        CommonModule,\n        A11yModule,\n        PlatformModule\n    ],\n    exports: [\n        McIcon,\n        McIconCSSStyler\n    ],\n    declarations: [\n        McIcon,\n        McIconCSSStyler\n    ]\n})\nexport class McIconModule {}\n"],"names":["_this","this","updatedPlacement","mcPlacement","Object","keys","availablePositions","some","key","$event","connectionPair","originX","originY","overlayX","overlayY","updateCompValue","tooltip","setClassMap","markForCheck","handlePositioningUpdate","McTooltip","prototype","overlayRef","createOverlay","pos","overlayElement","clientHeight","hostView","element","nativeElement","currentContainer","style","top","parseInt","split","value","isDynamicTooltip","ngOnInit","initElementRefListeners","ngOnDestroy","dispose","manualListeners","forEach","listener","event","elementRef","removeEventListener","clear","$unsubscribe","next","complete","handleKeydown","e","isTooltipOpen","keyCode","ESCAPE","hide","handleTouchend","mcTrigger","set","show","addEventListener","disabled","detach","portal","ComponentPortal","McTooltipComponent","attach","instance","afterHidden","pipe","takeUntil","destroyed","subscribe","property","mcVisibleChange","distinctUntilChanged","data","mcVisible","emit","updatePosition","position","getConfig","origin","getOrigin","overlay","getOverlayPosition","withPositions","tslib_1.__assign","main","fallback","originPosition","isLtr","direction","getMcTooltipInvalidPositionError","_a","invertPosition","x","y","overlayPosition","newX","newY","type","Directive","args","selector","exportAs","host","(keydown)","(touchend)","Overlay","ElementRef","NgZone","ScrollDispatcher","ViewContainerRef","undefined","decorators","Inject","MC_TOOLTIP_SCROLL_STRATEGY","Directionality","Optional","Output","mcTitle","Input","setTitle","mcMouseEnterDelay","mcMouseLeaveDelay","mcTooltipClass","isOpen","HostBinding","isParentDisabled","McToolTipModule","NgModule","declarations","exports","imports","CommonModule","OverlayModule","providers","MC_TOOLTIP_SCROLL_STRATEGY_FACTORY_PROVIDER","entryComponents","VERSION","Version","SELECT_PANEL_PADDING_X","changeDetection","ChangeDetectionStrategy","OnPush","encapsulation","ViewEncapsulation","None","animations","mcSidepanelAnimations","sidepanelState","class","tabindex","role","aria-modal","[attr.id]","[@state]","(@state.start)","(@state.done)","ChangeDetectorRef","McSidepanelConfig","Boolean","MC_SIDEPANEL_WITH_INDENT","MC_SIDEPANEL_WITH_SHADOW","portalOutlet","ViewChild","CdkPortalOutlet","McSidepanelContainerComponent","BasePortalOutlet","uniqueId","McSidepanelRef","containerInstance","config","afterClosed$","Subject","afterOpened$","id","animationStateChanged","filter","phaseName","toState","McSidepanelAnimationState","Visible","take","Hidden","result","sidepanelConfig","disableClose","merge","backdropClick","keydownEvents","close","closed","detachBackdrop","exit","afterClosed","asObservable","afterOpened","MC_SIDEPANEL_DEFAULT_OPTIONS","InjectionToken","McSidepanelService","injector","defaultOptions","parentSidepanelService","openedSidepanelsAtThisLevel","defineProperty","openedSidepanels","closeSidepanels","open","componentOrTemplateRef","fullConfig","getSidepanelById","Error","container","attachContainer","ref","TemplateRef","attachTemplatePortal","TemplatePortal","$implicit","sidepanelRef","createInjector","contentRef","attachComponentPortal","push","removeOpenSidepanel","enter","closeAll","find","sidepanel","openedSidepanelsWithSamePosition","getOpenedSidepanelsWithSamePosition","PortalInjector","WeakMap","length","containerPortal","sidepanelContainer","injectionTokens","MC_SIDEPANEL_DATA","overlayConfig","OverlayConfig","hasBackdrop","backdropClass","getBackdropClass","maxWidth","panelClass","overlayPanelClass","scrollStrategy","scrollStrategies","block","positionStrategy","global","create","sidepanels","reverse","slice","hasOpenedSidepanelWithBackdrop","requiredBackdrop","index","indexOf","splice","Injectable","Injector","SkipSelf","McSidepanelClose","sidepanelService","setTimeout","getClosestSidepanel","ngOnChanges","changes","proxiedChange","mcSidepanelClose","sidepanelResult","currentValue","(click)","McSidepanelHeader","Component","template","closeable","McSidepanelBody","McSidepanelFooter","McSidepanelActions","McSidepanelModule","PortalModule","McCommonModule","McIconModule","McSplitterComponent","ngZone","renderer","areas","_disabled","_gutterSize","isDragging","areaPositionDivider","listeners","_direction","coerceBooleanProperty","gutterSize","size","coerceNumberProperty","addArea","area","order","getSize","setOrder","initialSize","setStyle","isVertical","onMouseDown","leftAreaIndex","rightAreaIndex","leftArea","rightArea","startPoint","screenX","screenY","item","disableFlex","setSize","runOutsideAngular","listen","onMouseUp","onMouseMove","removeArea","indexToRemove","endPoint","offset","newLeftAreaSize","newRightAreaSize","minLeftAreaSize","getMinSize","minRightAreaSize","rightAreaOffset","unsubscribe","pop","preserveWhitespaces","styles","Renderer2","McGutterDirective","_order","_size","getCursor","getState","coerceCssPixelValue","setAttr","state","attribute","setAttribute","McSplitterAreaDirective","splitter","removeStyle","sz","getSizeProperty","getOffsetSizeProperty","getComputedStyle","parseFloat","getMinSizeProperty","McSplitterModule","nextUniqueId","McToggleBase","_elementRef","_McToggleMixinBase","mixinTabIndex","mixinColor","mixinDisabled","ThemePalette","Primary","McToggleChange","McToggleComponent","_super","_focusMonitor","_changeDetectorRef","tabIndex","call","labelPosition","ariaLabel","ariaLabelledby","_uniqueId","name","_checked","change","EventEmitter","_onTouchedCallback","_onChangeCallback","_","monitor","tslib_1.__extends","stopMonitoring","focus","focusVia","_inputElement","_getAriaChecked","checked","_onInteractionEvent","stopPropagation","_onLabelTextChange","_onInputClick","_updateModelValue","_emitChangeEvent","writeValue","registerOnChange","fn","registerOnTouched","setDisabledState","isDisabled","source","provide","NG_VALUE_ACCESSOR","useExisting","forwardRef","multi","inputs","[id]","[class.mc-disabled]","[class.mc-toggle_off]","trigger","left","transition","animate","FocusMonitor","String","Attribute","McToggleModule","A11yModule","cdr","prefix","positions","DEFAULT_4_POSITIONS","classMap","_mcTrigger","_mcPlacement","_mcVisible","BehaviorSubject","onHideSubject","closeOnInteraction","POSITION_MAP","$visible","_mcTitle","isTitleString","unshift","visible","hideTid","clearTimeout","isContentEmpty","showTid","handleBodyInteraction","outputs","fadeAnimation","(body:click)","deps","useFactory","mcTooltipScrollStrategyFactory","scrollDispatcher","parentDisabled","Map","title","_mcMouseEnterDelay","_mcMouseLeaveDelay","_mcTooltipClass","externalValue","strategy","flexibleConnectedTo","withTransformOriginOn","withFlexibleDimensions","withViewportMargin","scrollableAncestors","getAncestorScrollContainers","withScrollableContainers","positionChanges","onPositionChange","scrollableViewProperties","isOverlayClipped","run","detachments","hasAttached","McTreeSelect","resetOptions","changedOrDestroyed","options","destroy","optionSelectionChanges","onSelect","isUserInput","multiple","_panelOpen","setOptionIds","option","wasSelected","selectionModel","isSelected","selected","select","deselect","tree","keyManager","setActiveItem","sortValues","propagateChanges","stateChanges","options_1","toArray","sort","a","b","sortComparator","fallbackValue","valueToEmit","map","_value","valueChange","onChange","selectionChange","McTreeSelectChange","changeDetectorRef","optionIds","join","highlightCorrectOption","empty","setFirstItemActive","scrollActiveOptionIntoView","activeOptionIndex","activeItemIndex","panel","scrollTop","getOptionScrollPosition","getItemHeight","getOptionIndex","reduce","current","calculateOverlayPosition","itemHeight","items","getItemCount","panelHeight","Math","min","scrollContainerHeight","maxScroll","selectedOptionOffset","scrollBuffer","calculateOverlayScroll","offsetY","calculateOverlayOffsetY","checkOverlayWithinViewport","calculateOverlayOffsetX","overlayRect","overlayDir","getBoundingClientRect","viewportSize","viewportRuler","getViewportSize","isRtl","offsetX","leftOverflow","rightOverflow","right","width","round","topSpaceAvailable","triggerRect","bottomSpaceAvailable","height","bottom","panelHeightTop","abs","totalPanelHeight","panelHeightBottom","adjustPanelUp","adjustPanelDown","transformOrigin","getOriginBasedOnOption","distanceBelowViewport","distanceAboveViewport","optionHeightAdjustment","[attr.tabindex]","[class.mc-select-invalid]","[class.mc-select-required]","(focus)","(blur)","(window:resize)","mcSelectAnimations","transformPanel","fadeInContent","McFormFieldControl","CdkTree","ViewportRuler","ErrorStateMatcher","NgForm","FormGroupDirective","McFormField","NgControl","Self","MC_SELECT_SCROLL_STRATEGY","CdkConnectedOverlay","tags","ViewChildren","McTag","customTrigger","ContentChild","McTreeSelectTrigger","McTreeSelection","openedChange","openedStream","closedStream","errorStateMatcher","placeholder","required","autoSelect","compareWith","McTreeSelectMixinBase","McTreeSelectModule","CdkTreeModule","McTreeModule","McTagModule","McPseudoCheckboxModule","MC_SELECT_SCROLL_STRATEGY_PROVIDER","MC_TEXTAREA_VALUE_ACCESSOR","McTextareaBase","defaultErrorStateMatcher","parentForm","parentFormGroup","ngControl","McTextareaMixinBase","mixinErrorState","McTextarea","inputValueAccessor","canGrow","focused","controlType","uid","_required","lineHeight","freeRowsHeight","minHeight","valueAccessor","previousNativeValue","growObserver","fromEvent","growSubscription","grow","bind","_id","paddingTop","paddingBottom","ngDoCheck","updateErrorState","dirtyCheckNativeValue","textarea","outerHeight","window","diff","max","scrollHeight","focusChanged","isFocused","isBadInput","onContainerClick","newValue","validity","badInput","getGrowHeight","toString","[class.mc-textarea-resizable]","[attr.placeholder]","[attr.aria-invalid]","[disabled]","[required]","McTextareaModule","FormsModule","hours","minutes","seconds","HHmmss","HHmm","TIMEFORMAT_PLACEHOLDERS","TimeFormats","DEFAULT_TIME_FORMAT","HOURS_MINUTES_SECONDS_REGEXP","RegExp","HOURS_MINUTES_REGEXP","HOURS_ONLY_REGEXP","uniqueComponentIdSuffix","formValidators","formValidatorOnChangeRegistrators","validatorOnChange","c","validatorOnChangeHandler","get","McTimepickerBase","McTimepickerMixinBase","ɵ1","validate","__validatorOnChangeHandler","validator","registerOnValidatorChange","McTimepicker","_minTime","_maxTime","noop","Validators","compose","parseValidator","minTimeValidator","maxTimeValidator","applyInputChanges","_timeFormat","formatValue","timeFormatKey","minValue","minDateTime","getDateFromTimeString","maxValue","maxDateTime","onTouched","onBlur","onPaste","preventDefault","clipboardUserInput","clipboardData","getData","onInput","initialCursorStart","selectionStart","initialCursorEnd","selectionEnd","isAutocompleteTriggered","getParsedTimeParts","hoursOnly","hoursAndMinutes","hoursAndMinutesAndSeconds","doTimestringReformat","errors","createSelectionOfTimeComponentInInput","setProperty","getTimeStringFromDate","timeFormat","onKeyDown","getKeyCode","upDownTimeByArrowKeys","switchSelectionBetweenTimeparts","applyParams","changedTime","timeToApply","currentDateTimeInput","updateValueAndValidity","cursorPos","modifiedTimePart","getTimeEditMetrics","incrementTime","decrementTime","getCursorPositionOfPrevTimePartStart","getCursorPositionOfNextTimePartStart","code","newEditParams","cursorStartPosition","cursorEndPosition","dateVal","whatToIncrement","TimeParts","getTimeDigitsFromDate","getDateFromTimeDigits","whatToDecrement","timeString","timeDevider","nextDividerPos","cursorPosition","minutesIndex","hoursIndex","secondsIndex","tempVal","getNumberWithLeadingZero","getHours","getMinutes","getSeconds","match","trim","Number","resultDate","Date","isNaN","getTime","digit","mcTimepickerParse","text","isTimeLowerThenMin","mcTimepickerLowerThenMintime","isTimeGreaterThenMax","mcTimepickerHigherThenMaxtime","timeToCompare","[attr.time-format]","[attr.min-time]","[attr.max-time]","[attr.value]","(input)","(paste)","NG_VALIDATORS","useValue","MC_INPUT_VALUE_ACCESSOR","minTime","maxTime","McTimepickerModule","PlatformModule","Right","Left","Top","Bottom","McSidepanelPosition","Void","mcSidepanelTransformAnimation","in","out","transform","params","transformIn","transformOut","AnimationCurves","AccelerationCurve","DecelerationCurve","withIndent","withShadow","animationState","validatePortalAttached","setAnimation","setPanelClass","detectChanges","onAnimation","animationTransform","classList","add","McSelect","_placeholder","_multiple","getMcSelectDynamicMultipleError","_compareWith","getMcSelectNonFunctionValueError","initializeSelection","_focused","SelectionModel","panelDoneAnimatingStream","panelOpen","panelDoneAnimating","ngAfterContentInit","initKeyManager","changed","added","removed","startWith","ngAfterViewInit","calculateHiddenItems","toggle","triggerFontSize","withHorizontalOrientation","_ngZone","onStable","fontSize","_onTouched","setSelectionByValue","_onChange","selectedOptions","viewValue","isEmpty","_dir","handleOpenKeydown","handleClosedKeydown","onFadeInDone","onFocus","onAttached","positionChange","getPanelTheme","_parentFormField","color","selectedIndex","optionOffsetFromScrollTop","halfOptionHeight","optimalScrollPosition","onRemoveMatcherItem","visibleItems","totalItemsWidth","getTotalItemsWidthInMatcher","totalVisibleItemsWidth","tag","offsetTop","offsetHeight","hiddenItems","itemsCounter","querySelector","matcherList","itemsCounterShowed","matcherListWidth","matcherWidth","triggerClone","cloneNode","remove","_renderer","appendChild","querySelectorAll","isArrowKey","DOWN_ARROW","UP_ARROW","LEFT_ARROW","RIGHT_ARROW","ENTER","SPACE","altKey","onKeydown","manager","HOME","END","setLastItemActive","activeItem","A","ctrlKey","hasDeselectedOptions_1","previouslyFocusedIndex","shiftKey","selectViaInteraction","Promise","resolve","then","Array","isArray","getMcSelectNonArrayValueError","selectValue","correspondingOption","error","isDevMode","console","warn","ActiveDescendantKeyManager","withTypeAhead","withVerticalOrientation","tabOut","apply","McSelectChange","labelCount","countGroupLabelsBeforeOption","optionGroups","_viewportRuler","first","group","MC_OPTION_PARENT_COMPONENT","McSelectTrigger","ContentChildren","McOption","descendants","McOptgroup","McSelectMixinBase","McSelectModule","McOptionModule","McFormFieldModule","McTreeSelectBase","dir","parentFormField","scrollStrategyFactory","oneMoreText","o","defer","onSelectionChange","switchMap","_autoSelect","o1","o2","updateSelectedOptions","onRemoveSelectedOption","selectedOption","originalOnKeyDown","McTabBody","onCentering","beforeCentering","afterLeavingCenter","onCentered","animationDuration","dirChangeSubscription","Subscription","EMPTY","computePositionAnimationState","positionIndex","bodyPosition","computePositionFromOrigin","onTranslateTabStarted","isCentering","isCenterPosition","onTranslateTabComplete","fromState","getLayoutDirection","mcTabsAnimations","translateTab","portalHost","PortalHostDirective","content","McTabBodyPortal","componentFactoryResolver","viewContainerRef","centeringSub","leavingSub","ComponentFactoryResolver","McTabLabelWrapperBase","mcTabLabelWrapperMixinBase","McTabLabelWrapper","getOffsetLeft","offsetLeft","getOffsetWidth","offsetWidth","[attr.aria-disabled]","McTabHeaderBase","McTabHeader","showPaginationControls","disableScrollAfter","disableScrollBefore","selectFocusedIndex","indexFocused","_scrollDistance","selectedIndexChanged","_selectedIndex","coercedValue","updateActiveItem","isValidIndex","focusIndex","v","getMaxScrollDistance","scrollDistanceChanged","checkScrollingControls","ngAfterContentChecked","tabLabelCount","labelWrappers","updatePagination","scrollToLabel","updateTabScrollPosition","dirChange","observableOf","resize","realign","FocusKeyManager","withWrap","requestAnimationFrame","newFocusIndex","setTabFocus","onContentChanges","textContent","currentTextContent","zoneCallback","checkPaginationEnabled","tab","containerEl","tabListContainer","scrollLeft","scrollWidth","scrollDistance","translateX","tabList","scrollHeader","scrollDir","viewLength","labelIndex","selectedLabel","labelBeforePos","labelAfterPos","beforeVisiblePos","afterVisiblePos","isEnabled","[class.mc-tab-header__pagination-controls_enabled]","[class.mc-tab-header_rtl]","McLightTabsCssStyler","McAlignTabsCenterCssStyler","McAlignTabsEndCssStyler","McStretchTabsCssStyler","nextId","McTabChangeEvent","MC_TABS_CONFIG","McTabGroupBase","mcTabGroupMixinBase","McTabGroup","lightTabs","defaultConfig","headerPosition","selectedIndexChange","focusChange","animationDone","selectedTabChange","indexToSelect","tabBodyWrapperHeight","tabsSubscription","tabLabelSubscription","_dynamicHeight","lightTab","groupId","clampTabIndex","isFirstRun_1","createChangeEvent","tabs","isActive","subscribeToTabLabels","i","getTabLabelId","getTabContentId","setTabBodyWrapperHeight","tabHeight","wrapper","tabBodyWrapper","removeTabBodyWrapperHeight","handleClick","tabHeader","getTabIndex","[class.mc-tab-group_dynamic-height]","[class.mc-tab-group_inverted-header]","dynamicHeight","McTab","McTabNavBase","mcTabNavMixinBase","McTabNav","McTabLinkBase","mcTabLinkMixinBase","McTabLink","focusMonitor","[attr.aria-current]","[attr.tabIndex]","[class.mc-active]","active","McTabsModule","McTabLabel","McTabContent","McTagBase","_McTagMixinBase","_addClassModificatorForIcons","icons","contentChildren","iconElement","previousElementSibling","nextElementSibling","nextSibling","previousSibling","firstIconElement","secondIconElement","McIcon","McSelectBase","_scrollStrategyFactory","_totalItemsWidths","McNavbar","updateCollapsed","collapseDelta","maxAllowedWidth","itemsWidths","canCollapse","processCollapsed","collapsedItemsWidth","_resizeSubscription","calculateAndCacheTotalItemsWidth","acc","getOuterElementWidth","getPropertyValue","calculateAndCacheItemsWidth","allItemsSelector","secondLevelElements","firstLevelElement","allItems","from","_itemsWidths","el","CachedItemWidth","getItemsForCollapse","MC_NAVBAR_TITLE","CollapsibleItem","MC_NAVBAR_CONTAINER","McNavbarModule","McNavbarContainer","McNavbarTitle","McNavbarItem","McNavbarBrand","McNavbarLogo","idIterator","McProgressBarBase","_McProgressBarMixinBase","McProgressBar","mode","McProgressBarModule","McProgressSpinnerBase","_McProgressSpinnerMixinBase","McProgressSpinner","percentage","McProgressSpinnerModule","McRadioChange","McRadioGroupBase","_McRadioGroupMixinBase","MC_RADIO_GROUP_CONTROL_VALUE_ACCESSOR","McRadioGroup","_changeDetector","_name","_selected","_isInitialized","_labelPosition","controlValueAccessorChangeFn","updateRadioButtonNames","markRadiosForCheck","updateSelectedRadioFromValue","checkSelectedRadioButton","toBoolean","touch","emitChangeEvent","_radios","radio","isAlreadySelected","McRadioButton","McRadioButtonBase","_McRadioButtonMixinBase","radioGroup","_radioDispatcher","removeUniqueSelectionListener","newCheckedState","notify","newDisabledState","onInputClick","onInputChange","groupValueChanged","[class.mc-checked]","UniqueSelectionDispatcher","ariaDescribedby","McRadioModule","McTreeNodeDef","CdkTreeNodeDef","McTreeNodePadding","arguments","baseLeftPadding","_indent","iconWidth","withIcon","paddingIndent","nodeLevel","treeNode","treeControl","getLevel","level","leftPadding","isExpandable","setPadding","CdkTreeNodePadding","indent","McTreeNodeToggle","CdkTreeNodeToggle","MC_TREE_OPTION_PARENT_COMPONENT","McTreeOptionChange","uniqueIdCounter","McTreeOption","parent","_active","setSelected","setActiveStyles","setInactiveStyles","getHeight","clientRects","getClientRects","getHostElement","emitSelectionChangeEvent","setFocusedOption","[attr.disabled]","[class.mc-selected]","CdkTreeNode","McTreeNavigationChange","McTreeSelectionChange","McTreeSelectionBase","differs","McTreeSelectionBaseMixin","noUnselect","navigationChange","rawValue","log","withShift","withCtrl","collapse","expand","toggleFocusedOption","PAGE_UP","setPreviousPageItemActive","PAGE_DOWN","setNextPageItemActive","updateScrollSize","withScrollSize","floor","previousIndex_1","previousActiveItemIndex","activeIndex_1","canDeselectLast","emitNavigationEvent","focusedIndex","focusedOption","renderNodeChanges","dataDiffer","viewContainer","parentData","nodeOutlet","arrayOfInstances","_embeddedViews","view","viewDef","def","nodes","node","nodeMatchedQueries","matchedQueryIds","nodeData","nodeIndex","reset","notifyOnChanges","IterableDiffers","CdkTreeNodeOutlet","MC_TREE_DIRECTIVES","McTreeFlattener","transformFunction","getChildren","flattenNode","resultNodes","parentMap","flatNode","children","child","childParentMap","flattenNodes","structuredData","expandFlattenedNodes","results","currentExpand","isExpanded","McTreeFlatDataSource","treeFlattener","initialData","flattenedData","expandedData","_data","dataNodes","connect","collectionViewer","viewChange","expansionModel","disconnect","DataSource","McTreeNestedDataSource","CdkPortal","ctorParameters","McTabBase","mcTabMixinBase","textLabel","contentPortal","hasOwnProperty","explicitContent","implicitContent","templateLabel","read","_element","McListItem","_getHostElement","_lines","McLine","McListItemBase","McListModule","McLineModule","McList","McListSelection","McListOption","McListSubheaderCssStyler","McLinkBase","_McLinkBase","McLink","McLinkModule","McModalControlService","parentService","rootOpenModals","rootAfterAllClose","rootRegisteredMetaMap","afterAllClose","openModals","registeredMetaMap","registerModal","modalRef","hasRegistered","afterOpenSubscription","afterOpen","afterCloseSubscription","afterClose","removeOpenModal","has","McModalRef","ModalUtil","document","lastPosition","listenDocumentClick","getLastClickPosition","clientX","clientY","ModalUtil$1","McModalComponent","cfr","mcMeasureScrollbarService","modalControl","changeDetector","mcModalType","mcZIndex","mcWidth","mcCloseByESC","_mcClosable","_mcMask","_mcMaskClosable","mcAfterOpen","mcAfterClose","mcOkType","_mcOkLoading","mcOnOk","_mcCancelLoading","mcOnCancel","mcGetContainer","mcOkText","mcCancelText","isComponent","mcContent","createDynamicComponent","isModalButtons","mcFooter","formatModalButtons","HTMLElement","OverlayRef","handleVisibleStateChange","firstChange","contentComponentRef","bodyContainer","insert","autoFocusButtonOk","changeVisibleFromInside","triggerOk","onClickOkCancel","triggerCancel","getInstance","getContentComponentRef","getContentComponent","getElement","onClickMask","mcMask","mcMaskClosable","contains","isModalType","onClickCloseBtn","ok","cancel","loadingKey","caseClose_1","doClose","isPromise","handleThen","catch","isNonEmptyString","isTemplateRef","Type","animation","closeResult","changeBodyOverflow","animateTo","getButtonCallableProp","prop","onButtonClick","button","loading","changeAnimationState","maskAnimationClassMap","modalAnimationClassMap","_b","isVisible","updateTransformOrigin","buttons","autoLoading","component","factory","resolveComponentFactory","childInjector","parentInjector","mcComponentParams","assign","modalElement","modalContainer","plusNum","body","scrollBarWidth","McMeasureScrollbarService","DOCUMENT","mcWrapClassName","mcClassName","mcStyle","mcClosable","mcMaskStyle","mcBodyStyle","mcOkLoading","mcCancelLoading","CssUnitPipe","defaultUnit","formatted","Pipe","ModalBuilderForService","createModal","changeProps","destroyModal","McModalService","confirm","confirmType","success","simpleConfirm","delete","McModalModule","McButtonModule","MC_NAVBAR_ITEM","MC_NAVBAR_BRAND","McNavbarItemBase","_McNavbarMixinBase","_platform","_cdRef","dropdownItems","isCollapsed","_subscription","encodeURI","dropdownContent","denyClickIfDisabled","_focusMonitor$","hasDropdownContent","listenClickOutside","startListenFocusDropdownItems","stopListenFocusDropdownItems","isActiveDropdownLink","link","isBrowser","location","href","handleClickByItem","toggleDropdown","isNavbarItem","handleClickByDropdownItem","forceCloseDropdown","_dropdownElements","events","eventListeners","hasAttribute","stopImmediatePropagation","Platform","collapsedTitle","dropdownItemTmpl","cssClasses","_collapsed","collapsed","updateCollapsedClass","itemsForCollapse","_collapsedItemsWidth","calculateAndCacheCollapsedItemsWidth","updateTitle","getTitle","computedTitle","getAttribute","decodeURI","innerText","removeAttribute","forceRecalculateItemsWidth","resizeDebounceInterval","resizeObserver","debounceTime","McDropdownItem","_getTabIndex","_checkDisabled","getLabel","textNodeType","_document","TEXT_NODE","output","childNodes","length_1","nodeType","MC_DROPDOWN_PANEL","_McDropdownItemMixinBase","mcDropdownAnimations","transformDropdown","opacity","query","fadeInItems","MC_DROPDOWN_DEFAULT_OPTIONS","providedIn","MC_DROPDOWN_DEFAULT_OPTIONS_FACTORY","McDropdown","_defaultOptions","_classList","_panelAnimationState","_animationDone","_xPosition","xPosition","_yPosition","yPosition","_items","_itemChanges","_tabSubscription","_overlapTrigger","overlapTrigger","_hasBackdrop","throwMcDropdownInvalidPositionX","setPositionClasses","throwMcDropdownInvalidPositionY","classes","obj","className","_keyManager","_handleKeydown","setFocusOrigin","focusFirstItem","lazyContent","resetActiveItem","addItem","removeItem","posX","posY","_startAnimation","_resetAnimation","_onAnimationDone","_isAnimating","templateRef","McDropdownContent","MC_DROPDOWN_SCROLL_STRATEGY","MC_DROPDOWN_SCROLL_STRATEGY_FACTORY_PROVIDER","MC_DROPDOWN_SCROLL_STRATEGY_FACTORY","McDropdownTrigger","_overlay","_viewContainerRef","_scrollStrategy","_openedBy","dropdownOpened","dropdownClosed","_overlayRef","_opened","_closeSubscription","_hoverSubscription","dropdown","_check","_destroy","_cleanUpSubscriptions","_createOverlay","_setPosition","_portal","_closingActions","_init","opened","_attached","_reset","_setIsOpened","throwMcDropdownMissingError","_getOverlayConfig","_subscribeToPositions","withLockedPosition","originFallbackX","overlayFallbackY","_c","originFallbackY","_d","overlayFallbackX","backdrop","(touchstart)","McDropdownModule","McContentComponent","[class.mc-layout-content]","McFooterComponent","[class.mc-layout-footer]","McHeaderComponent","[class.mc-layout-header]","McLayoutComponent","hasSidebar","[class.mc-layout]","[class.mc-layout-has-sidebar]","McSidebarComponent","mcLayoutComponent","_mcWidth","mcCollapsedWidth","mcCollapsedChange","collapsible","mcCollapsed","[class.mc-layout-sidebar]","[class.mc-layout-sidebar-collapsed]","[style.flex]","[style.max-width.px]","[style.min-width.px]","[style.width.px]","Host","mcCollapsible","McLayoutModule","listSelection","_hasFocus","checkboxPosition","_reportValueChange","wasSelected_1","_lineSetter","McLineSetter","_removeOptionFromList","_text","_getHeight","_handleClick","_handleFocus","_handleBlur","[class.mc-focused]","MC_SELECTION_LIST_VALUE_ACCESSOR","McListSelectionChange","McListSelectionBase","_McListSelectionMixinBase","horizontal","_modelChanges","_tempValues","_setOptionsFromValues","_i","selectAll","deselectAll","_canDeselectLast","values","getSelectedOptionValues","_isValidIndex","listOption","optionIndex","_getOptionIndex","setPreviousItemActive","setNextItemActive","_onKeyDown","_getOptionByValue","[tabIndex]","McListBase","maxDate","dateFilter","selectedChange","monthSelected","activeDateChange","mcCalendarBody","McCalendarBody","McYearView","McCalendarHeader","intl","calendar","dateAdapter","dateFormats","currentView","label","format","activeDate","display","monthYearLabel","toLocaleUpperCase","substr","getYearName","activeYear","getYear","createDate","switchToMultiYearViewLabel","switchToMonthViewLabel","month","prevMonthLabel","year","prevYearLabel","multi-year","prevMultiYearLabel","nextMonthLabel","nextYearLabel","nextMultiYearLabel","currentPeriodClicked","previousClicked","addCalendarMonths","addCalendarYears","nextClicked","previousEnabled","minDate","isSameView","nextEnabled","date1","date2","getMonth","McDatepickerIntl","McCalendar","DateAdapter","MC_DATE_FORMATS","startView","yearSelected","userSelection","moveFocusOnNextTick","createMissingDateImplError","intlChanges","_startAt","getValidDateOrNull","deserialize","_minDate","_maxDate","clampedActiveDate","clampDate","_currentView","calendarHeaderPortal","headerComponent","startAt","today","ngAfterViewChecked","focusActiveCell","getCurrentViewComponent","init","updateTodaysDate","monthView","yearView","multiYearView","dateSelected","date","sameDate","yearSelectedInMultiYearView","normalizedYear","monthSelectedInYearView","normalizedMonth","userSelected","goToDateInView","isDateInstance","isValid","dateClass","McMonthView","McMultiYearView","mcDatepickerAnimations","fadeInCalendar","Element","matches","msMatchesSelector","datepickerUid","MC_DATEPICKER_SCROLL_STRATEGY","MC_DATEPICKER_SCROLL_STRATEGY_FACTORY_PROVIDER","MC_DATEPICKER_SCROLL_STRATEGY_FACTORY","McDatepickerContentBase","McDatepickerContentMixinBase","McDatepickerContent","[@transformPanel]","McDatepicker","disabledChange","selectedChanged","validSelected","focusedElementBeforeOpen","inputSubscription","datepickerInput","_color","getThemePalette","popupRef","popupComponentRef","oldValue","selectYear","selectMonth","registerInput","input","activeElement","openAsPopup","calendarPortal","isAttached","completeClose","createPopup","datepicker","setColor","createPopupPositionStrategy","calendarHeaderComponent","MC_DATEPICKER_VALUE_ACCESSOR","McDatepickerInput","MC_DATEPICKER_VALIDATORS","McDatepickerInputEvent","target","targetElement","formField","dateChange","dateInput","datepickerSubscription","localeSubscription","lastValueValid","cvaOnChange","mcDatepickerParse","minValidator","control","controlValue","compareDate","mcDatepickerMin","actual","maxValidator","mcDatepickerMax","filterValidator","mcDatepickerFilter","localeChanges","oldDate","_min","_max","blur","isAltDownArrow","readOnly","parse","[attr.aria-haspopup]","[attr.aria-owns]","[attr.min]","[attr.max]","(change)","mcDatepicker","McDatepickerToggleIcon","McDatepickerToggle","defaultTabIndex","parsedTabIndex","watchStateChanges","datepickerDisabled","inputDisabled","datepickerToggled","[class.mc-datepicker-toggle_active]","[class.mc-warn]","customIcon","McDatepickerModule","McDivider","_vertical","_inset","[attr.aria-orientation]","[class.mc-divider-vertical]","[class.mc-divider-inset]","vertical","inset","McDividerModule","_template","_componentFactoryResolver","_appRef","_injector","context","_outlet","DomPortalOutlet","createElement","insertBefore","outletElement","ApplicationRef","McDropdownItemBase","_parentDropdownPanel","McFormFieldWithoutBorders","McHint","McPrefix","McSuffix","McCleaner","McStepper","stepUp","step","res","stepDown","MC_INPUT_INVALID_TYPES","BIG_STEP","SMALL_STEP","McInputBase","_McInputMixinBase","McNumberInput","_model","bigStep","isDigit","Infinity","_host","self","getPrototypeOf","normalizeSplitter","_focusChanged","minuses","NUMPAD_MINUS","DASH","FF_MINUS","serviceKeys","DELETE","BACKSPACE","TAB","arrows","allowedKeys","concat","isIEPeriod","isNotIEPeriod","metaKey","C","V","X","F1","F12","EDGE","TRIDENT","ZERO","NINE","NUMPAD_ZERO","NUMPAD_NINE","valueAsNumber","update","replace","isFloat","isInt","test","NgModel","McFormFieldNumberControl","McInput","_uid","_type","_neverEmptyInputTypes","t","getSupportedInputTypes","_inputValueAccessor","_previousNativeValue","_validateType","_dirtyCheckNativeValue","_onInput","_isNeverEmpty","_isBadInput","getMcInputUnsupportedTypeError","McInputMono","MIN_VALIDATOR","MinValidator","_createValidator","_validator","MAX_VALIDATOR","MaxValidator","McInputModule","calendarLabel","openCalendarLabel","McCalendarCell","displayValue","enabled","numCols","activeCell","cellAspectRatio","selectedValueChange","cellClicked","cell","columnChanges","rows","firstRowOffset","cellPadding","cellWidth","isActiveCell","rowIndex","colIndex","cellNumber","aria-readonly","todayValue","selectedValue","labelMinRequiredCells","firstDayOfWeek","getFirstDayOfWeek","narrowWeekdays","getDayOfWeekNames","longWeekdays","weekdays","long","narrow","_activeDate","oldActiveDate","validDate","hasSameMonthAndYear","selectedDate","getDateInCurrentMonth","selectedYear","selectedMonth","handleCalendarBodyKeydown","addCalendarDays","getDate","getNumDaysInMonth","todayDate","monthLabel","getMonthNames","firstOfMonth","firstWeekOffset","getDayOfWeek","createWeekCells","daysInMonth","dateNames","getDateNames","weeks","shouldEnableDate","dateA11yLabel","cellClasses","d1","d2","todayYear","activeOffset","years","row","createCellForYear","onYearSelected","yearsPerPage","getActiveCell","yearName","shouldEnableYear","firstOfYear","getMonthInCurrentYear","onMonthSelected","normalizedDate","todayMonth","yearLabel","monthNames","months","createCellForMonth","monthName","monthYearA11yLabel","newMonthName","shouldEnableMonth","isYearAndMonthAfterMaxDate","isYearAndMonthBeforeMinDate","maxYear","maxMonth","minYear","minMonth","McIconButton","McButton","McAnchor","McButtonCSSStyler","McIconButtonCSSStyler","MC_BUTTON_TOGGLE_GROUP_VALUE_ACCESSOR","McButtonToggleGroup","McButtonToggleChange","buttonToggles","syncButtonToggle","isPrechecked","clearSelection","[class.mc-button-toggle-vertical]","McButtonToggle","buttonToggleGroup","isSingleSelector","onToggleClick","newChecked","[class.mc-button-toggle-standalone]","[class.mc-button-toggle-checked]","mcButton","McButtonToggleModule","McCard","readonly","_tabIndex","hostElement","onClick","[class.mc-card_readonly]","[class.mc-card_selected]","McCardModule","MC_CHECKBOX_CLICK_ACTION","MC_CHECKBOX_CONTROL_VALUE_ACCESSOR","McCheckbox","Init","Checked","Unchecked","Indeterminate","McCheckboxChange","McCheckboxBase","_McCheckboxMixinBase","_clickAction","indeterminateChange","_currentAnimationClass","_currentCheckState","TransitionCheckState","_controlValueAccessorChangeFn","_indeterminate","focusOrigin","_onInputFocusChange","_transitionCheckState","indeterminate","newState","oldState","[class.mc-indeterminate]","[class.mc-checkbox-label-before]","MC_CHECKBOX_REQUIRED_VALIDATOR","McCheckboxRequiredValidator","[attr.required]","CheckboxRequiredValidator","McCheckboxModule","onStepUp","onStepDown","McFormFieldBase","_McFormFieldMixinBase","_labelId","hovered","_validateControlChild","_control","_numberControl","hasStepper","_stepper","valueChanges","clearValue","hasCleaner","onHoverChanged","isHovered","_shouldForward","getMcFormFieldMissingControlError","_hint","_suffix","_prefix","_cleaner","[class.mc-form-field_invalid]","[class.mc-form-field_has-prefix]","[class.mc-form-field_has-suffix]","[class.mc-form-field_has-cleaner]","[class.mc-form-field_has-stepper]","[class.ng-untouched]","[class.ng-touched]","[class.ng-pristine]","[class.ng-dirty]","[class.ng-valid]","[class.ng-invalid]","[class.ng-pending]","(mouseenter)","(mouseleave)","__extends","d","__","constructor","extendStatics","isBoolean","val","MC_SANITY_CHECKS_FACTORY","base","class_1","defaultColor","Default","colorPalette","errorState","matcher","isErrorState","optionsArray","groups","groupCounter","optionHeight","currentScrollPosition","optionOffset","arrayMap","array","iteratee","baseValues","object","props","mcSelectScrollStrategyProviderFactory","reposition","inputType","sanitizeNumber","isFinite","getPrecision","arr","pow","value1","value2","precision","provider","openSidepanels","parentElement","scrollThrottle","setPrototypeOf","__proto__","p","__assign","s","n","MC_SANITY_CHECKS","_sanityChecksEnabled","_hasDoneGlobalChecks","_window","_areChecksEnabled","_checkDoctypeIsDefined","_checkThemeIsPresent","_isTestEnv","doctype","testElement","computedStyle","removeChild","BidiModule","Second","Empty","_setLineClass","count","_resetClasses","_setClass","isAdd","ShowOnDirtyErrorStateMatcher","form","invalid","dirty","submitted","touched","McPseudoCheckbox","scrollbarMeasure","overflow","initScrollBarWidth","_scrollbarWidth","scrollDiv","scrollProp","clientWidth","McOptgroupBase","McOptgroupMixinBase","uniqueOptgroupIdCounter","labelId","[class.mc-optgroup-disabled]","[attr.aria-labelledby]","McOptionSelectionChange","mostRecentViewValue","[class.mc-option-multiple]","MC_LABEL_GLOBAL_OPTIONS","StandardCurve","SharpCurve","topCenter","topLeft","topRight","rightTop","rightBottom","bottomCenter","bottomLeft","bottomRight","leftTop","leftBottom","minWidth","animateChild","McIconCSSStyler","McIconBase","_McIconMixinBase","iconName","queries","McButtonBase","_McButtonMixinBase","_haltDisabledEvents"],"mappings":";;;;;;65CmHuBA,SAAgB6oE,GAAUC,EAAGrpD,GAEzB,QAASspD,KAAO9oE,KAAK+oE,YAAcF,EADnCG,EAAcH,EAAGrpD,GAEjBqpD,EAAEznE,UAAkB,OAANoe,EAAarf,OAAO0P,OAAO2P,IAAMspD,EAAG1nE,UAAYoe,EAAEpe,UAAW,GAAI0nE,ICzBnF,QAAgBG,GAAUC,GAA4B,MAAsB,iBAARA,GAEpE,QAAgBt+B,GAAU1oC,GACtB,MAAgB,OAATA,GAAiB,GAAGA,GAAY,QCM3C,QAAgBinE,KACZ,OAAO,ECCX,QAAgBtyD,GAAyCuyD,GACrD,MAAJ,UAAAlyD,GAWQ,QAARmyD,KAAA,IAAoB,GAApB9iE,MAAAikD,EAAA,EAAoBA,EAApBne,UAAA19B,OAAoB67C,IAAAjkD,EAApBikD,GAAAne,UAAAme,EAAQ,IAARzqD,GAAAmX,EAAAmjB,MAAAr6B,KAEqBuG,IAFrBvG,WAFgBD,GAAhBoS,WAAqC,IAMjC,MAfqBgG,GAAzBkxD,EAAAnyD,GACQ/W,OAAR2M,eAAYu8D,EAAZjoE,UAAA,gBAAQ,WACI,MAAOpB,MAAKmS,eAGhB,SAAajQ,GACTlC,KAAKmS,UAAYM,EAAAA,sBAAsBvQ,oCASnDmnE,GAfyBD,GCYzB,QAAgBxyD,GACZwyD,EACAE,GAEA,WAFJ,KAAAA,IAAIA,EAA6BxyD,GAAayyD,SAE9C,SAAAryD,GAwBQ,QAARmyD,KAAA,IAAoB,GAApB9iE,MAAAikD,EAAA,EAAoBA,EAApBne,UAAA19B,OAAoB67C,IAAAjkD,EAApBikD,GAAAne,UAAAme,EAAQ,IAARzqD,GAAAmX,EAAAmjB,MAAAr6B,KACqBuG,IADrBvG,WAGYD,GAAKw2B,MAAQ+yC,IAErB,MA7BqBnxD,GAAzBkxD,EAAAnyD,GAIQ/W,OAAR2M,eAAYu8D,EAAZjoE,UAAA,aAAQ,WACI,MAAOpB,MAAKwyD,YAGhB,SAAUtwD,GAClB,GAAkBsnE,GAAetnE,GAASonE,CAE1BE,KAAiBxpE,KAAKwyD,SAClBxyD,KAAKwyD,QACLxyD,KAAKyW,YAAY7U,cAAcgyB,UAAUiE,OAAO,MAAM73B,KAAKwyD,QAG3DgX,GACAxpE,KAAKyW,YAAY7U,cAAcgyB,UAAUC,IAAI,MAAM21C,GAGvDxpE,KAAKwyD,OAASgX,oCAS9BH,GA7ByBD,GClBzB,QAAgBzyD,GAAiDyyD,EAASjT,GACtE,WADJ,KAAAA,IAA0EA,EAA1E,GACA,SAAAj/C,GAWQ,QAARmyD,KAAA,IAAoB,GAApB9iE,MAAAikD,EAAA,EAAoBA,EAApBne,UAAA19B,OAAoB67C,IAAAjkD,EAApBikD,GAAAne,UAAAme,EAAQ,IAARzqD,GAAAmX,EAAAmjB,MAAAr6B,KACqBuG,IADrBvG,WAFgBD,GAAhBqkE,UAAoCjO,IAKhC,MAdqBh+C,GAAzBkxD,EAAAnyD,GACQ/W,OAAR2M,eAAYu8D,EAAZjoE,UAAA,gBAAQ,WACI,MAAOpB,MAAK6D,UAAY,EAAI7D,KAAKokE,eAGrC,SAAaliE,GACTlC,KAAKokE,UAAqB,MAATliE,EAAgBA,EAAQi0D,mCAQrDkT,GAdyBD,GCsBzB,QAAgBpiD,GAAsDoiD,GAClE,MAAJ,UAAAlyD,GAYQ,QAARmyD,KAAA,IAAoB,GAApB9iE,MAAAikD,EAAA,EAAoBA,EAApBne,UAAA19B,OAAoB67C,IAAAjkD,EAApBikD,GAAAne,UAAAme,EAAQ,IAARzqD,GAAAmX,EAAAmjB,MAAAr6B,KACqBuG,IADrBvG,WAVQD,GAAR0pE,YAA8B,EAMb1pE,EAAjBof,aAAgC,GAAIpU,GAAAA,UAoBhC,MA5BqBoN,GAAzBkxD,EAAAnyD,GAgBQmyD,EAARjoE,UAAAknB,iBAAQ,WACR,GAAkB09C,GAAWhmE,KAAKypE,WAChB97B,EAAS3tC,KAAK6mB,iBAAmB7mB,KAAK4mB,WACtC8iD,EAAU1pE,KAAK6lB,mBAAqB7lB,KAAK2mB,yBACzC+tC,EAAU10D,KAAK8mB,UAAY9mB,KAAK8mB,UAAiB,QAAkB,KACnEi/C,EAAW2D,EAAQC,aAAajV,EAAS/mB,EAE3Co4B,KAAaC,IACbhmE,KAAKypE,WAAa1D,EAClB/lE,KAAKmf,aAAanc,SAGlCqmE,GA5ByBD,GCkOzB,QAAgB5uC,GACZwwB,EACAjtC,EACA0c,GAGA,GAAIA,EAAa9rB,OAAQ,CAMrB,IAAK,GALCi7D,GAAe7rD,EAAQsB,UACvBwqD,EAASpvC,EAAapb,UAExByqD,EAAe,EAEVzlC,EAAI,EAAGA,EAAI2mB,EAAc,EAAG3mB,IAC7BulC,EAAavlC,GAAGzJ,OAASgvC,EAAavlC,GAAGzJ,QAAUivC,EAAOC,IAC1DA,GAIR,OAAOA,GAGX,MAAO,GAWX,QAAgBjpD,GACZmqC,EACA+e,EACAC,EACA1oD,GAEJ,GAAU2oD,GAAejf,EAAc+e,CAEnC,OAAIE,GAAeD,EAAgCC,EAE/CA,EAAeF,EAAeC,EAAwB1oD,EAC/CC,KAAKqH,IAAI,EAAGqhD,EAAe3oD,EAAcyoD,GAG7CC,EC3MX,QAASE,GAAeC,EAAYC,GAKhC,IAJJ,GAAQj6D,IAAS,EACPxB,EAAkB,MAATw7D,EAAgB,EAAIA,EAAMx7D,OACnCjD,EAAS8tB,MAAM7qB,KAEZwB,EAAQxB,GACbjD,EAAQyE,GAAUi6D,EAASD,EAAOh6D,GAASA,EAAOg6D,EAGtD,OAAOz+D,GAEX,QAAS2+D,GAAcC,EAAoCC,GACvD,MAAOL,GAASK,EAAQ,SAAChqE,GACrB,MAAO+pE,GAAQ/pE,KChHvB,QAAgB0zB,KACZ,MAAO5mB,OAAM,iEASjB,QAAgBqsB,KACZ,MAAOrsB,OAAM,sDAQjB,QAAgB8mB,KACZ,MAAO9mB,OAAM,qCxHCjB,QAAgBm9D,GAAsCplE,GAElD,MAAO,YAAM,MAAAA,GAAQqK,iBAAiBg7D,cyH5B1C,QAAgBhD,KACd,MAAOp6D,OAAM,oDCDf,QAAgBqvD,GAA+BgO,GAC3C,MAAOr9D,OAAM,eAAeq9D,EAAhC,kCpCDA,QAASC,GAAezoE,GACpB,OAAQ0oE,SAAS1oE,IAAU0uB,MAAM1uB,GAC3B,KACAA,EAGV,QAAS2oE,GAAa3oE,GACtB,GAAU4oE,GAAM5oE,EAAMonB,WAAWrnB,MAAM,IAEnC,OAAsB,KAAf6oE,EAAIn8D,OACL,EAEC4S,KAAKwpD,IAAI,GAAID,EAAI,GAAGn8D,QAG/B,QAASklB,GAAIm3C,EAAgBC,GAC7B,GAAUC,GAAY3pD,KAAKqH,IAAIiiD,EAAaG,GAASH,EAAaI,GAI9D,OAAON,IAFMK,EAASE,EAAYD,EAASC,GAAaA,GqCjB5D,QAAgBlc,GAA2Bmc,GACvC,MAAO99D,OACH,uCAAuC89D,EAD/C,iI/CyDA,QAAgBvZ,GAAsCxsD,GAClD,MAAO,YAAM,MAAAA,GAAQqK,iBAAiBg7D,cgD5D1C,QAAgB9jB,KACZ,KAAMt5C,OAAM,kMAWhB,QAAgBq2C,KACZ,KAAMr2C,OAAM,+IAShB,QAAgBu2C,KACZ,KAAMv2C,OAAM,6I9DwChB,QAAgBq1C,KACZ,OACIc,gBAAgB,EAChBP,UAAW,QACXE,UAAW,QACXh0C,cAAe,oCC9BvB,QAAgB+1C,GAAoC9/C,GAChD,MAAO,YAAM,MAAAA,GAAQqK,iBAAiBg7D,cP6d1C,QAASrwB,GAAU0J,GAEf,QAASA,IAAuB,gBAARA,IAAmC,kBAARA,KAA4D,kBAA9B,GAAqBvqB,MAA6D,kBAA/B,GAAqB+gB,MlDtZ7J,QAAS1pC,GAAoBjP,EAAkCypE,GAG3D,IAFJ,GAAQz9B,GAA6BhsC,EAAQC,cAAcypE,cAEhD19B,IAAWA,EAAO/Z,UAAUgmB,SAAS,2BACxCjM,EAASA,EAAO09B,aAGpB,OAAO19B,GAASy9B,EAAe/8D,KAAK,SAACC,GAAc,MAAAA,GAAUrD,KAAO,EAAQA,KAAM,KVuFtF,QAAgBmR,GAA+BhX,GAC3C,MAAO,YAAM,MAAAA,GAAQqK,iBAAiBg7D,YAAYa,eAAgB,MAWtE,QAAgBzlE,GAAiCb,GAC7C,MAAOqI,OAAM,uBAAuBrI,EAAxC,iBmH3MA,GAAIgkE,GAAgB,SAASH,EAAGrpD,GAI5B,OAHAwpD,EAAgB7oE,OAAOorE,iBAChBC,uBAA2BhyC,QAAS,SAAUqvC,EAAGrpD,GAAKqpD,EAAE2C,UAAYhsD,IACvE,SAAUqpD,EAAGrpD,GAAK,IAAK,GAAIisD,KAAKjsD,GAAOA,EAAEs0B,eAAe23B,KAAI5C,EAAE4C,GAAKjsD,EAAEisD,MACpD5C,EAAGrpD,IASjBksD,EAAW,WAQlB,MAPAA,GAAWvrE,OAAO87C,QAAU,SAAkBggB,GAC1C,IAAK,GAAI0P,GAAGtnC,EAAI,EAAGunC,EAAIv/B,UAAU19B,OAAQ01B,EAAIunC,EAAGvnC,IAAK,CACjDsnC,EAAIt/B,UAAUhI,EACd,KAAK,GAAIonC,KAAKE,GAAOxrE,OAAOiB,UAAU0yC,eAAex8B,KAAKq0D,EAAGF,KAAIxP,EAAEwP,GAAKE,EAAEF,IAE9E,MAAOxP,IAEJyP,EAASrxC,MAAMr6B,KAAMqsC,YEhCnBw/B,EAAmB,GAAIr/D,GAAAA,eAAwB,oBACxDi2C,WAAY,OACZ7G,QAASutB,IAabt3D,EAAA,WAcI,QAAJA,GAA8Di6D,GAAA9rE,KAA9D8rE,qBAA8DA,EARlD9rE,KAAZ+rE,sBAAmC,EAGvB/rE,KAAZ2hD,UAA4C,gBAAbrL,WAAyBA,SAAWA,SAAW,KAGlEt2C,KAAZgsE,QAAwC,gBAAXtjD,SAAuBA,OAASA,OAAS,KAG1D1oB,KAAKisE,sBAAwBjsE,KAAK+rE,uBAClC/rE,KAAKksE,yBACLlsE,KAAKmsE,uBACLnsE,KAAK+rE,sBAAuB,GA+CxC,MA1CYl6D,GAAZzQ,UAAA6qE,kBAAI,WACI,MAAOjsE,MAAK8rE,sBAAwBhyC,EAAAA,cAAgB95B,KAAKosE,cAIrDv6D,EAAZzQ,UAAAgrE,WAAI,WAEI,MAAOpsE,MAAKgsE,UAAYhsE,KAAKgsE,QAAmB,WAAKhsE,KAAKgsE,QAAiB,UAGvEn6D,EAAZzQ,UAAA8qE,uBAAI,WACQlsE,KAAK2hD,YAAc3hD,KAAK2hD,UAAU0qB,SAClCtyC,QAAQC,KACJ,+GAMJnoB,EAAZzQ,UAAA+qE,qBAAI,WACI,GAAInsE,KAAK2hD,WAAyC,kBAArBxrC,kBAAiC,CACtE,GAAkBm2D,GAActsE,KAAK2hD,UAAUkW,cAAc,MAEjDyU,GAAY14C,UAAUC,IAAI,0BAC1B7zB,KAAK2hD,UAAUtF,KAAKtkB,YAAYu0C,EAE5C,IAAkBC,GAAgBp2D,iBAAiBm2D,EAKnCC,IAA2C,SAA1BA,EAAc9f,SAC/B1yB,QAAQC,KACJ,2IAMRh6B,KAAK2hD,UAAUtF,KAAKmwB,YAAYF,oBA9D5CjmE,KAAC8B,EAAAA,SAAD5B,OACI+B,SAAWmkE,EAAAA,YACXpkE,SAAWokE,EAAAA,oDAYfpmE,KAAA6D,QAAA/C,aAAAd,KAAiBkB,EAAAA,WAAjBlB,KAA6Be,EAAAA,OAA7Bb,MAAoCslE,QAmDpCh6D,SEpEIkF,QAAU,UACV21D,OAAS,SACTr/D,MAAQ,QACRk8D,QAAU,SACVoD,MAAQ,IUbZp4B,GAAA,WAAA,QAAAA,MAIqB,sBAJrBluC,KAACC,EAAAA,UAADC,OACIC,SAAU,sBACVE,MAAQ8C,MAAO,eAEnB+qC,mBAOI,QAAJiV,GAAwBlV,EAAmCH,GAAvD,GAAJp0C,GAAAC,IAAwBA,MAAxBs0C,OAAwBA,EAAmCt0C,KAA3Dm0C,SAA2DA,EACnDn0C,KAAK4sE,cAAc5sE,KAAKs0C,OAAO3lC,QAE/B3O,KAAKs0C,OAAOxjC,QAAQtM,UAAU,WAC1BzE,EAAK6sE,cAAc7sE,EAAKu0C,OAAO3lC,UA0B3C,MAtBY66C,GAAZpoD,UAAAwrE,cAAI,SAAsBC,GAClB7sE,KAAK8sE,gBACS,IAAVD,GAAyB,IAAVA,EACf7sE,KAAK+sE,UAAU,MAAMF,EAAjC,SAA+C,GAC5BA,EAAQ,GACf7sE,KAAK+sE,UAAU,iBAAiB,IAIhCvjB,EAAZpoD,UAAA0rE,cAAI,WACI9sE,KAAK+sE,UAAU,aAAa,GAC5B/sE,KAAK+sE,UAAU,aAAa,GAC5B/sE,KAAK+sE,UAAU,iBAAiB,IAG5BvjB,EAAZpoD,UAAA2rE,UAAI,SAAkBhpB,EAAmBipB,GAC7BA,EACAhtE,KAAKm0C,SAASvyC,cAAcgyB,UAAUC,IAAIkwB,GAE1C/jD,KAAKm0C,SAASvyC,cAAcgyB,UAAUiE,OAAOksB,IAGzDyF,KAEA9U,GAAA,WAAA,QAAAA,MAK2B,sBAL3BruC,KAAC8B,EAAAA,SAAD5B,OACI+B,WACAD,SAAUksC,IACVnsC,cAAemsC,QAEnBG,KCnDAu4B,GAAA,WAAA,QAAAA,MAKA,MAHIA,GAAJ7rE,UAAAuoE,aAAI,SAAajV,EAA6BwY,GACtC,SAAUxY,GAAWA,EAAQyY,UAAYzY,EAAQ0Y,OAAUF,GAAQA,EAAKG,4BAHhFhnE,KAACiK,EAAAA,aAKD28D,KAGAtoD,GAAA,WAAA,QAAAA,MAbA,MAeIA,GAAJvjB,UAAAuoE,aAAI,SAAajV,EAA6BwY,GACtC,SAAUxY,GAAWA,EAAQyY,UAAYzY,EAAQ4Y,SAAYJ,GAAQA,EAAKG,4BAHlFhnE,KAACiK,EAAAA,WAAD/J,OAAck8C,WAAY,8GAb1B99B,KCkBA4oD,GAAA,WAAA,QAAAA,KAeavtE,KAAb0V,MAA4C,YAE/B1V,KAAb6D,UAAiC,EACjC,sBAlBAwC,KAACgL,EAAAA,UAAD9K,OACI2C,cAAeC,EAAAA,kBAAkBC,KACjC4L,qBAAqB,EACrBjM,gBAAiBC,EAAAA,wBAAwBC,OACzCzC,SAAU,qBACVyO,QAAS,qqBACT3D,SAAJ,4GACI5K,MACI8C,MAAO,qBACPy8D,2BAA4B,4BAC5Bn6B,qBAAsB,sBACtBhyB,sBAAuB,kCAI/BpE,QAAArP,KAAKqB,EAAAA,QAEL7D,WAAAwC,KAAKqB,EAAAA,SACL6lE,KC/BAhnD,GAAA,WAAA,QAAAA,MAIqC,sBAJrClgB,KAAC8B,EAAAA,SAAD5B,OACI8B,SAAUklE,IACVnlE,cAAemlE,QAEnBhnD,KCLAg2B,GAAA,WAuBI,QAAJA,GACkCjG,GAAAt2C,KAAlCs2C,SAAkCA,EATtBt2C,KAAZwtE,kBACQxoE,SAAU,WACVjD,IAAK,UACL8gB,MAAO,OACPK,OAAQ,OACRuqD,SAAU,UAMVztE,KAAK0tE,qBA9Bb,MASIvtE,QAAJ2M,eAAQyvC,EAARn7C,UAAA,sBAAI,WACI,MAAIpB,MAAK2tE,gBACE3tE,KAAK2tE,iBAEhB3tE,KAAK0tE,qBAEE1tE,KAAK2tE,kDAkBhBpxB,EAAJn7C,UAAAssE,mBAAI,WACJ,GAAcE,GAAY5tE,KAAKs2C,SAASuhB,cAAc,MAG9C,KAAK,GAAMgW,KAAc7tE,MAAKwtE,iBACtBxtE,KAAKwtE,iBAAiB15B,eAAe+5B,KACrCD,EAAU9rE,MAAM+rE,GAAc7tE,KAAKwtE,iBAAiBK,GAI5D7tE,MAAKs2C,SAAS+F,KAAKtkB,YAAY61C,EAEvC,IAAc/qD,GAAQ+qD,EAAUjvC,YAAcivC,EAAUE,WAEhD9tE,MAAKs2C,SAAS+F,KAAKmwB,YAAYoB,GAC/B5tE,KAAK2tE,gBAAkB9qD,kBA5C/Bxc,KAACiK,EAAAA,WAAD/J,OACIk8C,WAAY,+CAuBhBp8C,SAAAa,GAAAC,aAAAd,KAASe,EAAAA,OAATb,MAAgBi2C,EAAAA,wIA5BhBD,mBCOA,QAAAwxB,MAA6B,MAA7BA,MAEaC,GAA8Dn3D,EAAck3D,IAGrFE,GAA0B,EAK9B/yC,GAAA,SAAAhkB,GAAA,QAAAgkB,KAAA,GAAAn7B,GAAA,OAAAmX,GAAAA,EAAAmjB,MAAAr6B,KAAAqsC,YAAArsC,WAqBID,GAAJmuE,QAAsB,qBAAqBD,OAC3C,MANgC91D,GAAhC+iB,EAAAhkB,kBAhBA7Q,KAACgL,EAAAA,UAAD9K,OACIC,SAAU,cACVC,SAAU,aACV6K,SAAJ,gIACIpI,cAAeC,EAAAA,kBAAkBC,KACjCL,gBAAiBC,EAAAA,wBAAwBC,OACzC2Q,QAAS,YACT3E,QAAS,2HACTvO,MACI8C,MAAO,cACPE,KAAM,QACNykE,+BAAgC,WAChCvvC,uBAAwB,sBACxBwvC,yBAA0B,iCAKlC9hB,QAAAjmD,KAAKqB,EAAAA,SAILwzB,GANgC8yC,IZN5BvgC,GAAkB,gBAIlB,QAAJ4gC,GAAuB/0D,EAAyB6E,OAAhD,KAAAA,IAAgDA,GAAhD,GAAuBne,KAAvBsZ,OAAuBA,EAAyBtZ,KAAhDme,YAAgDA,EAChD,MAAAkwD,MAcaxzC,GACT,GAAIruB,GAAAA,eAAyC,8BAKjDwuB,GAAA,WAkFI,QAAJA,GACyBr5B,EACAue,EACgDytB,EAC5C/S,GAHJ56B,KAAzB2B,QAAyBA,EACA3B,KAAzBkgB,kBAAyBA,EACgDlgB,KAAzE2tC,OAAyEA,EAC5C3tC,KAA7B46B,MAA6BA,EA5DN56B,KAAvB87B,kBAA2C,GAAIhkB,GAAAA,aAGlC9X,KAAbmf,aAA4B,GAAIpU,GAAAA,QAoBpB/K,KAAZkoB,IAAkB,aAAaulB,KAMnBztC,KAAZoqC,WAAwB,EAWZpqC,KAAZmS,WAAwB,EAYZnS,KAAZ4tC,SAAsB,EAEV5tC,KAAZsuE,oBAAkC,GAwHlC,MArKInuE,QAAJ2M,eAAQkuB,EAAR55B,UAAA,iBAAI,WAEI,OAAQpB,KAAKmuC,iBAAiBpN,aAAe,IAAIvQ,wCAIrDrwB,OAAJ2M,eAAQkuB,EAAR55B,UAAA,gBAAI,WACI,MAAOpB,MAAK2tC,QAAU3tC,KAAK2tC,OAAOvvB,0CAGtCje,OAAJ2M,eAAQkuB,EAAR55B,UAAA,UAAI,WACI,MAAOpB,MAAKkoB,qCAKhB/nB,OAAJ2M,eAAQkuB,EAAR55B,UAAA,gBAAI,WACI,MAAOpB,MAAKoqC,2CAKhBjqC,OAAJ2M,eACQkuB,EADR55B,UAAA,gBAAI,WAEI,MAAQpB,MAAK46B,OAAS56B,KAAK46B,MAAM/2B,UAAa7D,KAAKmS,eAGvD,SAAajQ,GACTlC,KAAKmS,UAAYM,EAAAA,sBAAsBvQ,oCAW3C/B,OAAJ2M,eAAQkuB,EAAR55B,UAAA,cAAI,WACI,MAAOpB,MAAK4tC,yCAchB5S,EAAJ55B,UAAA0uD,mBAAI,WAMI,GAAI9vD,KAAKoqC,UAAW,CAC5B,GAAkBxU,GAAY51B,KAAK41B,SAEnBA,KAAc51B,KAAKsuE,sBACnBtuE,KAAKsuE,oBAAsB14C,EAC3B51B,KAAKmf,aAAanc,UAK9Bg4B,EAAJ55B,UAAAkB,YAAI,WACItC,KAAKmf,aAAalc,YAGtB+3B,EAAJ55B,UAAAwd,OAAI,WACS5e,KAAKoqC,YACNpqC,KAAKoqC,WAAY,EAEjBpqC,KAAKkgB,kBAAkBjf,eACvBjB,KAAKouC,6BAIbpT,EAAJ55B,UAAAyd,SAAI,WACQ7e,KAAKoqC,YACLpqC,KAAKoqC,WAAY,EAEjBpqC,KAAKkgB,kBAAkBjf,eACvBjB,KAAKouC,6BAIbpT,EAAJ55B,UAAAiX,MAAI,WACJ,GAAc1W,GAAU3B,KAAKmuC,gBAEQ,mBAAlBxsC,GAAQ0W,OACf1W,EAAQ0W,SAShB2iB,EAAJ55B,UAAA0sC,gBAAI,WACS9tC,KAAK4tC,UACN5tC,KAAK4tC,SAAU,EACf5tC,KAAKkgB,kBAAkBjf,iBAS/B+5B,EAAJ55B,UAAA2sC,kBAAI,WACQ/tC,KAAK4tC,UACL5tC,KAAK4tC,SAAU,EACf5tC,KAAKkgB,kBAAkBjf,iBAK/B+5B,EAAJ55B,UAAAqgD,SAAI,WACI,MAAOzhD,MAAK41B,WAIhBoF,EAAJ55B,UAAA8B,cAAI,SAAcP,GAENA,EAAMU,UAAYi1B,EAAAA,OAAS31B,EAAMU,UAAYk1B,EAAAA,QAC7Cv4B,KAAKo5B,uBAGLz2B,EAAMkqB,mBAQdmO,EAAJ55B,UAAAg4B,qBAAI,WACSp5B,KAAK6D,WACN7D,KAAKoqC,WAAYpqC,KAAKoe,WAAYpe,KAAKoqC,UAEvCpqC,KAAKkgB,kBAAkBjf,eACvBjB,KAAKouC,0BAAyB,KAItCpT,EAAJ55B,UAAA2jC,YAAI,WACI,MAAO/kC,MAAK6D,SAAW,KAAO,KAGlCm3B,EAAJ55B,UAAA+sC,eAAI,WACI,MAAOnuC,MAAK2B,QAAQC,eAIhBo5B,EAAZ55B,UAAAgtC,yBAAI,SAAiCjwB,OAArC,KAAAA,IAAqCA,GAArC,GACQne,KAAK87B,kBAAkBh3B,KAAK,GAAIupE,IAAwBruE,KAAMme,oBAtMtE9X,KAACgL,EAAAA,UAAD9K,OACIC,SAAU,YACVC,SAAU,WACVC,MACIqd,kBAAmB,gBACnBva,MAAO,YACP+kC,sBAAuB,WACvBggC,6BAA8B,WAC9B1oC,oBAAqB,SACrB/rB,sBAAuB,WACvBD,OAAQ,KAER1I,UAAW,yBACXxK,YAAa,yBAEjBsO,QAAS,2iBACT3D,SAAJ,6NACIpI,cAAeC,EAAAA,kBAAkBC,KACjCL,gBAAiBC,EAAAA,wBAAwBC,+CAjE7C5C,KAAIS,EAAAA,aAFJT,KAAI2D,EAAAA,oBAsIJ3D,SAAAa,GAAAC,aAAAd,KAASkB,EAAAA,WAATlB,KAAqBe,EAAAA,OAArBb,MAA4Bs0B,QArH5Bx0B,KAAS60B,GAAT/zB,aAAAd,KAsHSkB,EAAAA,gCAhETrF,QAAAmE,KAAKqB,EAAAA,QAILo0B,oBAAAz1B,KAAKmB,EAAAA,SA+BL3D,WAAAwC,KAAKqB,EAAAA,SA+ILszB,KanPAK,GAAA,WAAA,QAAAA,MAK6B,sBAL7Bh1B,KAAC8B,EAAAA,SAAD5B,OACI+B,SAAUC,EAAAA,aAAcge,IACxBle,SAAU2yB,GAAUE,IACpB9yB,cAAe4yB,GAAUE,QAE7BG,KCVamzC,GACT,GAAIhiE,GAAAA,eAA6B,2BCKxBwP,GAA2ChC,EAAAA,QAAQ,iBAC5DtE,EAAAA,MAAM,OAAQ5T,EAAAA,OAAQugD,QAAS,KAC/B3sC,EAAAA,MAAM,OAAQ5T,EAAAA,OAAQugD,QAAS,KAC/B3sC,EAAAA,MAAM,QAAS5T,EAAAA,OAAQugD,QAAS,KAChCnoC,EAAAA,WAAW,YAAaC,EAAAA,QAAQ,yCAChCD,EAAAA,WAAW,YAAaC,EAAAA,QAAQ,6CCdhCs0D,cAAgB,8BAChBv7C,kBAAoB,8BACpBD,kBAAoB,4BACpBy7C,WAAa,+BfDJtzD,IACTrZ,KACIrB,QAAU,SACVC,QAAU,MACVC,SAAU,SACVC,SAAU,UAEd8tE,WACIjuE,QAAU,SACVC,QAAU,MACVC,SAAU,SACVC,SAAU,SACV4hB,YAAUvb,GACV4a,YAAU5a,IAEd0nE,SACIluE,QAAU,QACVC,QAAU,MACVC,SAAU,QACVC,SAAU,SACV4hB,YAAUvb,GACV4a,YAAU5a,IAEd2nE,UACInuE,QAAU,MACVC,QAAU,MACVC,SAAU,MACVC,SAAU,SACV4hB,YAAUvb,GACV4a,YAAU5a,IAEd0b,OACIliB,QAAU,MACVC,QAAU,SACVC,SAAU,QACVC,SAAU,UAEdiuE,UACIpuE,QAAU,MACVC,QAAU,MACVC,SAAU,QACVC,SAAU,MACV4hB,YAAUvb,GACV4a,YAAU5a,IAEd6nE,aACIruE,QAAU,MACVC,QAAU,SACVC,SAAU,QACVC,SAAU,SACV4hB,YAAUvb,GACV4a,YAAU5a,IAEdic,QACIziB,QAAU,SACVC,QAAU,SACVC,SAAU,SACVC,SAAU,OAEdmuE,cACItuE,QAAU,SACVC,QAAU,SACVC,SAAU,SACVC,SAAU,OAEdouE,YACIvuE,QAAU,QACVC,QAAU,SACVC,SAAU,QACVC,SAAU,OAEdquE,aACIxuE,QAAU,MACVC,QAAU,SACVC,SAAU,MACVC,SAAU,OAEdoZ,MACIvZ,QAAU,QACVC,QAAU,SACVC,SAAU,MACVC,SAAU,UAEdsuE,SACIzuE,QAAU,QACVC,QAAU,MACVC,SAAU,MACVC,SAAU,OAEduuE,YACI1uE,QAAU,QACVC,QAAU,SACVC,SAAU,MACVC,SAAU,WAIL+Z,GAoBb,SAA0B0vD,GACtB,MAAiB,OAAVA,KAAsBD,EAAWC,EAAQnqE,OAAOC,KAAKkqE,MApB5DlvD,GAAarZ,IAAKqZ,GAAawH,MAAOxH,GAAa+H,OAAQ/H,GAAanB,OvH/E/DgL,GACT,GAAIzY,GAAAA,eAAsC,6BASjCga,IACTjN,QAAS0L,GACT/I,MAAOrV,EAAAA,SACPsV,WAAYquD,GuIhBHnmD,IAaTC,eAAgBtK,EAAAA,QAAQ,kBACpBtE,EAAAA,MAAM,OAAQ5T,EAAAA,OACV8wB,UAAW,YACXy8C,SAAU,OACVhtB,QAAS,KAEbnoC,EAAAA,WAAW,YAAa0gB,EAAAA,OACpB0nB,EAAAA,MAAM,iBAAkBgtB,EAAAA,gBACxBn1D,EAAAA,QAAQ,6CAEZD,EAAAA,WAAW,aACPC,EAAAA,QAAQ,qBAAsBrY,EAAAA,OAAQugD,QAAS,SASvD99B,cAAevK,EAAAA,QAAQ,iBACnBtE,EAAAA,MAAM,UAAW5T,EAAAA,OAAQugD,QAAS,KAClCnoC,EAAAA,WAAW,mBACPpY,EAAAA,OAAQugD,QAAS,IACjBloC,EAAAA,QAAQ,qDC5CpBo1D,GAAA,WAAA,QAAAA,MAI8B,sBAJ9BlpE,KAACC,EAAAA,UAADC,OACIC,SAAU,YACVE,MAAQ8C,MAAO,kBAEnB+lE,KAGAC,GAAA,WACI,QAAJA,GAAuB/4D,GAAAzW,KAAvByW,YAAuBA,EACvB,MAAA+4D,MAEaC,GAAqD74D,EAAW44D,GAAY14D,GAAa61D,OAGtG7lC,GAAA,SAAA5vB,GASI,QAAJ4vB,GAAgBlkC,EAA8C8sE,GAA1D,GAAJ3vE,GACQmX,EADRI,KAAAtX,KACc4C,IADd5C,WAGQ4C,GAAWhB,cAAcgyB,UAAUC,IAAI67C,KAM/C,MAV4Bv3D,GAA5B2uB,EAAA5vB,GAOI4vB,EAAJ1lC,UAAAizC,gBAAI,WACI,MAAOr0C,MAAKyW,YAAY7U,8BAhBhCyE,KAACgL,EAAAA,UAAD9K,OACIC,SAAU,YACV8K,SAAU,4BACV2D,QAAS,wPACTlM,gBAAiBC,EAAAA,wBAAwBC,OACzCC,cAAeC,EAAAA,kBAAkBC,KACjCwQ,QAAS,iDA3BbvT,KAAIS,EAAAA,aA8BJT,KAAAgU,OAAAlT,aAAAd,KAAyCiU,EAAAA,UAAzC/T,MAAmD,gBASnDugC,GAV4B2oC,ICtB5B39D,GAAA,WAAA,QAAAA,MAe2B,sBAf3BzL,KAAC8B,EAAAA,SAAD5B,OACI+B,SACIC,EAAAA,aACAiS,EAAAA,WACA0X,EAAAA,gBAEJ7pB,SACIy+B,GACAyoC,IAEJnnE,cACI0+B,GACAyoC,QAGRz9D,K5CVAixD,GAAA,WAAA,QAAAA,MAIgC,sBAJhC18D,KAACC,EAAAA,UAADC,OACIC,SAAU,kCACVE,MAAQ8C,MAAO,iBAEnBu5D,KAGAC,GAAA,WAYI,QAAJA,GAAgBpgE,GACR5C,KAAK4B,cAAgBgB,EAAWhB,cAkCxC,MA/BIohE,GAAJ5hE,UAAAszB,mBAAI,WACI10B,KAAKomC,gCAGT48B,EAAJ5hE,UAAAglC,6BAAI,WACJ,GACcC,GAAQrmC,KAAKsmC,gBAAgB1mB,IAAI,SAAC/L,GAAS,MAAAA,GAAK4C,YAAY7U,eAElE,IAAqB,IAAjBykC,EAAM13B,OAAc,CAChC,GAAkB43B,GAAcF,EAAM,EAGrBE,GAAYC,wBAA2BD,EAAYE,qBAChDF,EAAYG,aAHC,IAGcH,EAAYG,YAAYsb,WACnDzb,EAAY3S,UAAUC,IAAI,gBAC1B7zB,KAAK4B,cAAcgyB,UAAUC,IAAI,wBAGjC0S,EAAYI,iBARC,IAQkBJ,EAAYI,gBAAgBqb,WAC3Dzb,EAAY3S,UAAUC,IAAI,iBAC1B7zB,KAAK4B,cAAcgyB,UAAUC,IAAI,8BAGtC,IAlBU,IAkBNwS,EAAM13B,OAAqB,CAC9C,GAAkBi4B,GAAmBP,EAAM,GACzBQ,EAAoBR,EAAM,EAEhCO,GAAiBhT,UAAUC,IAAI,gBAC/BgT,EAAkBjT,UAAUC,IAAI,kCA5C5CxtB,KAACC,EAAAA,UAADC,OACIC,SAAU,4CACVmpE,SACIrpC,gBAAiB,GAAIvL,GAAAA,gBAAgB+L,KAEzCpgC,MAAQ8C,MAAO,0DAzBnBnD,KAAIS,EAAAA,cAmEJk8D,KAGA4M,GAAA,WACI,QAAJA,GAAuBn5D,GAAAzW,KAAvByW,YAAuBA,EACvB,MAAAm5D,MAEaC,GAILj5D,EAAWC,EAAc+4D,KAGjC/M,GAAA,SAAA3rD,GAkBI,QAAJ2rD,GAAgBjgE,EAAgCuU,GAA5C,GAAJpX,GACQmX,EADRI,KAAAtX,KACc4C,IADd5C,WAAgDD,GAAhDoX,cAAgDA,EAGxCpX,EAAKoX,cAAce,QAAQnY,EAAK0W,YAAY7U,eAAe,KAcnE,MAlB8BuW,GAA9B0qD,EAAA3rD,GAOI2rD,EAAJzhE,UAAAkB,YAAI,WACItC,KAAKmX,cAAciB,eAAepY,KAAKyW,YAAY7U,gBAGvDihE,EAAJzhE,UAAAiX,MAAI,WACIrY,KAAKq0C,kBAAkBh8B,SAG3BwqD,EAAJzhE,UAAAizC,gBAAI,WACI,MAAOr0C,MAAKyW,YAAY7U,8BAjChCyE,KAACgL,EAAAA,UAAD9K,OACIC,SAAU,gKAOV8K,SAAJ,sGACI2D,QAAS,4hGACTlM,gBAAiBC,EAAAA,wBAAwBC,OACzCC,cAAeC,EAAAA,kBAAkBC,KACjCwQ,QAAS,WAAY,SACrBlT,MACIgjB,aAAc,4DA/FtBrjB,KAAIS,EAAAA,aAOJT,KAAS+T,EAAAA,gBA6GTyoD,GAlB8BgN,IAqB9B/M,GAAA,SAAA5rD,GAcI,QAAJ4rD,GAAgBp9B,EAA4B9iC,GAC5C,MAAQsU,GAARI,KAAAtX,KAAc4C,EAAY8iC,IAA1B1lC,KASA,MAX8BmY,GAA9B2qD,EAAA5rD,GAKI4rD,EAAJ1hE,UAAA0uE,oBAAI,SAAoBntE,GACZ3C,KAAK6D,WACLlB,EAAMkqB,iBACNlqB,EAAMq9C,4CArBlB35C,KAACgL,EAAAA,UAAD9K,OACIC,SAAU,mFACV8K,SAAJ,sGACI2D,QAAS,4hGACTlM,gBAAiBC,EAAAA,wBAAwBC,OACzCC,cAAeC,EAAAA,kBAAkBC,KACjCwQ,QAAS,WAAY,SACrBlT,MACIqd,kBAAmB,oBACnBuqB,kBAAmB,mBACnBn9B,UAAW,uEA1HnB9K,KAAS+T,EAAAA,eAPT/T,KAAIS,EAAAA,cA+IJg8D,GAX8BD,IAc9BD,GAAA,SAAA1rD,GAaI,QAAJ0rD,GAAgBl9B,EAA4B9iC,GAC5C,MAAQsU,GAARI,KAAAtX,KAAc4C,EAAY8iC,IAA1B1lC,KASA,MAXkCmY,GAAlCyqD,EAAA1rD,GAKI0rD,EAAJxhE,UAAA0uE,oBAAI,SAAoBntE,GACZ3C,KAAK6D,WACLlB,EAAMkqB,iBACNlqB,EAAMq9C,4CApBlB35C,KAACgL,EAAAA,UAAD9K,OACIC,SAAU,yBACV8K,SAAJ,sGACI2D,QAAS;oiGACTlM,gBAAiBC,EAAAA,wBAAwBC,OACzCC,cAAeC,EAAAA,kBAAkBC,KACjCwQ,QAAS,WAAY,SACrBlT,MACIqd,kBAAmB,oBACnBuqB,kBAAmB,4DApJ3BjoC,KAAS+T,EAAAA,eAPT/T,KAAIS,EAAAA,cAyKJ87D,GAXkCC,ICnJlC7kB,GAAA,WAAA,QAAAA,MAqB6B,sBArB7B33C,KAAC8B,EAAAA,SAAD5B,OACI+B,SACIC,EAAAA,aACAiS,EAAAA,WACA0X,EAAAA,gBAEJ7pB,SACIw6D,GACAC,GACAF,GACAG,GACAC,IAEJ56D,cACIy6D,GACAC,GACAF,GACAG,GACAC,QAGRhlB,KCFailB,IACT1pD,QAASC,EAAAA,kBACTC,YAAaC,EAAAA,WAAW,WAAM,MAAAwpD,MAC9BvpD,OAAO,iBAKP,QAAJwpD,GAEe7pD,EAEApX,GAFAlC,KAAfsZ,OAAeA,EAEAtZ,KAAfkC,MAAeA,EAEf,MAAAihE,MAGAD,GAAA,WAkGI,QAAJA,GAAwBh5B,GAAAlqC,KAAxBkqC,gBAAwBA,EAlBDlqC,KAAvB8f,YAAqC,GAAIhI,GAAAA,aAGlB9X,KAAvB6X,OACQ,GAAIC,GAAAA,aACA9X,KAAZ82D,WAAwB,EACZ92D,KAAZg0B,WAAwB,EACZh0B,KAAZmS,WAAwB,EAkBpBnS,KAAJuqC,6BAAyD,aAIrDvqC,KAAJ0sB,UAA2B,aAiI3B,MAjOIvsB,QAAJ2M,eACQo2D,EADR9hE,UAAA,gBAAI,WAEI,MAAOpB,MAAK82D,eAGhB,SAAa50D,GACTlC,KAAK82D,UAAYrkD,EAAAA,sBAAsBvQ,oCAI3C/B,OAAJ2M,eACQo2D,EADR9hE,UAAA,aAAI,WAEJ,GAAcud,GAAW3e,KAAKye,eAAiBze,KAAKye,eAAeE,WAE3D,OAAI3e,MAAKoe,SACEO,EAASiB,IAAI,SAACsV,GAAW,MAAAA,GAAOhzB,QAGpCyc,EAAS,GAAKA,EAAS,GAAGzc,UAAQgF,QAG7C,SAAUgiB,GACNlpB,KAAKy1B,oBAAoBvM,GACzBlpB,KAAK8f,YAAYhb,KAAK9E,KAAKkC,wCAI/B/B,OAAJ2M,eAAQo2D,EAAR9hE,UAAA,gBAAI,WACJ,GAAcud,GAAW3e,KAAKye,eAAeE,QAErC,OAAO3e,MAAKoe,SAAWO,EAAYA,EAAS,IAAM,sCAItDxe,OAAJ2M,eACQo2D,EADR9hE,UAAA,gBAAI,WAEI,MAAOpB,MAAKg0B,eAGhB,SAAa9xB,GACTlC,KAAKg0B,UAAYvhB,EAAAA,sBAAsBvQ,oCAO3C/B,OAAJ2M,eACQo2D,EADR9hE,UAAA,gBAAI,WAEI,MAAOpB,MAAKmS,eAGhB,SAAajQ,GACTlC,KAAKmS,UAAYM,EAAAA,sBAAsBvQ,GAElClC,KAAKojE,eAIVpjE,KAAKojE,cAAc3gE,QAAQ,SAACyyB,GAAW,MAAAA,GAAOj0B,kDAuClDiiE,EAAJ9hE,UAAAgB,SAAI,WACIpC,KAAKye,eAAiB,GAAI6V,GAAAA,eAA+Bt0B,KAAKoe,aAAUlX,IAAW,IAGvFg8D,EAAJ9hE,UAAAszB,mBAAI,kBACI5uB,EAAA9F,KAAKye,gBAAeG,OAA5Byb,MAAAv0B,EAAsC9F,KAAKojE,cAAcj4D,OAAO,SAAC+pB,GAAW,MAAAA,GAAOzc,WAC3EzY,KAAK6D,SAAW7D,KAAKmS,WAOzB+wD,EAAJ9hE,UAAA4X,WAAI,SAAW9W,GACPlC,KAAKkC,MAAQA,EACblC,KAAKkqC,gBAAgBjpC,gBAIzBiiE,EAAJ9hE,UAAA6X,iBAAI,SAAiBC,GACblZ,KAAKuqC,6BAA+BrxB,GAIxCgqD,EAAJ9hE,UAAA+X,kBAAI,SAAkBD,GACdlZ,KAAK0sB,UAAYxT,GAIrBgqD,EAAJ9hE,UAAAgY,iBAAI,SAAiBC,GACbrZ,KAAK6D,SAAWwV,GAIpB6pD,EAAJ9hE,UAAA0pC,gBAAI,WACJ,GAAcnsB,GAAW3e,KAAK2e,SAChBrF,EAASkgB,MAAMC,QAAQ9a,GAAYA,EAASA,EAAShQ,OAAS,GAAKgQ,EACnEhc,EAAQ,GAAIwgE,IAAqB7pD,EAAQtZ,KAAKkC,MACpDlC,MAAKuqC,6BAA6B5nC,EAAMT,OACxClC,KAAK6X,OAAO/S,KAAKnC,IASrBugE,EAAJ9hE,UAAAiiE,iBAAI,SAAiBnuC,EAAwBtW,EAAiBT,OAA9D,KAAAA,IAA8DA,GAA9D,GAGane,KAAKoe,WAAYpe,KAAK2e,UAAauW,EAAOzc,UAC1CzY,KAAa,SAAoByY,SAAU,GAG5CmG,EACA5e,KAAKye,eAAeG,OAAOsW,GAE3Bl1B,KAAKye,eAAeI,SAASqW,GAI7B/W,GACAne,KAAK8qC,kBAKT9qC,KAAK8f,YAAYhb,KAAK9E,KAAKkC,QAI/BghE,EAAJ9hE,UAAAsd,WAAI,SAAWwW,GACP,MAAOl1B,MAAKye,eAAeC,WAAWwW,IAI1CguC,EAAJ9hE,UAAAkiE,aAAI,SAAapuC,GACT,WAAsBhuB,KAAlBlH,KAAKgvC,WAILhvC,KAAKoe,UAAYob,MAAMC,QAAQz5B,KAAKgvC,UAC7BhvC,KAAKgvC,SAAS1uC,KAAK,SAAC4B,GAAU,MAAgB,OAAhBgzB,EAAOhzB,OAAiBA,IAAUgzB,EAAOhzB,QAG3EgzB,EAAOhzB,QAAUlC,KAAKgvC,WAIzBk0B,EAAZ9hE,UAAAq0B,oBAAI,SAA4BvzB,GAA5B,GAAJnC,GAAAC,IAGQ,IAFAA,KAAKgvC,SAAW9sC,EAEXlC,KAAKojE,cAIV,GAAIpjE,KAAKoe,UAAYlc,EAAO,CACxB,IAAKs3B,MAAMC,QAAQv3B,GACf,KAAMmL,OAAM,qDAGhBrN,MAAKujE,iBACLrhE,EAAMO,QAAQ,SAACyO,GAAsB,MAAAnR,GAAK45B,YAAYzoB,SAEtDlR,MAAKujE,iBACLvjE,KAAK25B,YAAYz3B,IAKjBghE,EAAZ9hE,UAAAmiE,eAAI,WACIvjE,KAAKye,eAAe3b,QACpB9C,KAAKojE,cAAc3gE,QAAQ,SAACyyB,GAAW,MAAAA,GAAOzc,SAAU,KAIpDyqD,EAAZ9hE,UAAAu4B,YAAI,SAAoBz3B,GACxB,GAAc03B,GAAsB55B,KAAKojE,cAAc/0D,KAAK,SAAC6mB,GACjD,MAAuB,OAAhBA,EAAOhzB,OAAiBgzB,EAAOhzB,QAAUA,GAGhD03B,KACAA,EAAoBnhB,SAAU,EAC9BzY,KAAKye,eAAeG,OAAOgb,oBA3OvCvzB,KAACC,EAAAA,UAADC,OACIC,SAAU,yBACViC,WAAYw6D,IACZv8D,MACIgD,KAAM,QACNF,MAAO,yBACPg6D,oCAAqC,YAEzC/8D,SAAU,8DAxDdJ,KAAI2D,EAAAA,uCA6DJmtD,WAAA9wD,KAAKqB,EAAAA,QAULxF,QAAAmE,KAAKqB,EAAAA,QAwBL0W,WAAA/X,KAAKqB,EAAAA,QAUL07D,gBAAA/8D,KAAK00B,EAAAA,gBAALx0B,MAAqBmT,EAAAA,WAAW,WAAM,MAAA+pD,SAGtC5/D,WAAAwC,KAAKqB,EAAAA,QAoBLoY,cAAAzZ,KAAKmB,EAAAA,SAGLqQ,SAAAxR,KAAKmB,EAAAA,UA2JL07D,KAGAO,GAAA,WAyEI,QAAJA,GAC2BC,EACXxjD,EACAwlB,EACA/jC,GAHW3B,KAA3B0jE,kBAA2BA,EACX1jE,KAAhBkgB,kBAAgBA,EACAlgB,KAAhB0lC,aAAgBA,EACA1lC,KAAhB2B,QAAgBA,EAXO3B,KAAvB6X,OACQ,GAAIC,GAAAA,aAEA9X,KAAZ2jE,kBAA+B,EACnB3jE,KAAZ4X,UAAuB,EACX5X,KAAZmS,WAAiC,EAkEjC,MA5GIhS,QAAJ2M,eACQ22D,EADRriE,UAAA,eAAI,WAEI,MAAOpB,MAAK0jE,kBAAoB1jE,KAAK0jE,kBAAkBhlD,WAAW1e,MAAQA,KAAK4X,cAGnF,SAAY1V,GAChB,GAAcgnB,GAAWzW,EAAAA,sBAAsBvQ,EAEnCgnB,KAAalpB,KAAK4X,WAClB5X,KAAK4X,SAAWsR,EAEZlpB,KAAK0jE,mBACL1jE,KAAK0jE,kBAAkBL,iBAAiBrjE,KAAMA,KAAK4X,UAGvD5X,KAAKkgB,kBAAkBjf,iDAe/Bd,OAAJ2M,eACQ22D,EADRriE,UAAA,gBAAI,WAEI,MAAOpB,MAAKmS,WAAcnS,KAAK0jE,mBAAqB1jE,KAAK0jE,kBAAkB7/D,cAE/E,SAAa3B,GAAkBlC,KAAKmS,UAAYM,EAAAA,sBAAsBvQ,oCAiBtEuhE,EAAJriE,UAAAgB,SAAI,WACIpC,KAAK2jE,iBAAmB3jE,KAAK0jE,oBAAsB1jE,KAAK0jE,kBAAkBtlD,SAC1Epe,KAAKqG,KAAOrG,KAAK2jE,iBAAmB,QAAU,WAE1C3jE,KAAK0jE,mBAAqB1jE,KAAK0jE,kBAAkBJ,aAAatjE,QAC9DA,KAAKyY,SAAU,GAGnBzY,KAAK0lC,aAAaxtB,QAAQlY,KAAK2B,QAAQC,eAAe,IAG1D6hE,EAAJriE,UAAAkB,YAAI,WAAA,GAAJvC,GAAAC,KACc46B,EAAQ56B,KAAK0jE,iBAEnB1jE,MAAK0lC,aAAattB,eAAepY,KAAK2B,QAAQC,eAI1Cg5B,GAASA,EAAMlc,WAAW1e,OAC1Bq5B,QAAQC,UAAUC,KAAK,WAAM,MAAAqB,GAAMyoC,iBAAiBtjE,GAAM,MAKlE0jE,EAAJriE,UAAAiX,MAAI,WACIrY,KAAK2B,QAAQC,cAAcyW,SAI/BorD,EAAJriE,UAAAwiE,cAAI,WACI,IAAI5jE,KAAK6D,SAAT,CAIR,GAAcggE,KAAa7jE,KAAK2jE,mBAA2B3jE,KAAK4X,QAEpDisD,KAAe7jE,KAAK4X,WACpB5X,KAAK4X,SAAWisD,EACZ7jE,KAAK0jE,oBACL1jE,KAAK0jE,kBAAkBL,iBAAiBrjE,KAAMA,KAAK4X,UAAU,GAC7D5X,KAAK0jE,kBAAkBh3C,cAI/B1sB,KAAK6X,OAAO/S,KAAK,GAAIq+D,IAAqBnjE,KAAMA,KAAKkC,UAQzDuhE,EAAJriE,UAAAH,aAAI,WAGIjB,KAAKkgB,kBAAkBjf,+BAvI/BoF,KAACgL,EAAAA,UAAD9K,OACIC,SAAU,mBACV8K,SAAU,8OASV2D,QAAS,w5DACT/L,cAAeC,EAAAA,kBAAkBC,KACjC3C,SAAU,iBACVsC,gBAAiBC,EAAAA,wBAAwBC,OACzCvC,MACIo9D,sCAAuC,qBACvCC,mCAAoC,UACpCv6D,MAAO,mBAGPua,kBAAmB,KACnBuqB,kBAAmB,mBACnBpqB,UAAW,mDAmDnB7d,KAA8C68D,GAA9C/7D,aAAAd,KAASkB,EAAAA,aA3WTlB,KAAI2D,EAAAA,oBAiBJ3D,KAAS+T,EAAAA,eAbT/T,KAAIS,EAAAA,gCA0TJ2R,UAAApS,KAAKqB,EAAAA,QAsBLs8D,WAAA39D,KAAKiE,EAAAA,UAAL/D,MAAes8D,MAGf3gE,QAAAmE,KAAKqB,EAAAA,QAGL2P,WAAAhR,KAAKqB,EAAAA,QAEL7D,WAAAwC,KAAKqB,EAAAA,QAOLmQ,SAAAxR,KAAKmB,EAAAA,UAuELi8D,KCtaAQ,GAAA,WAAA,QAAAA,MAKmC,sBALnC59D,KAAC8B,EAAAA,SAAD5B,OACI+B,SAAUuJ,EAAgBmsC,IAC1B31C,SAAUwJ,EAAgBqxD,GAAqBO,IAC/Cr7D,cAAe86D,GAAqBO,QAExCQ,KCCAC,GAAA,WAqCI,QAAJA,GAAwBztD,EAAiCU,GAAjCnX,KAAxByW,YAAwBA,EAAiCzW,KAAzDmX,cAAyDA,EAVrDnX,KAAJmkE,UAAe,EAGXnkE,KAAJ2e,UAAe,EAGX3e,KAAJ0rD,eAAqB,GAAI5zC,GAAAA,aAEb9X,KAAZokE,UAAuC,EAG/BpkE,KAAKmX,cAAce,QAAQlY,KAAKyW,YAAY7U,eAAe,GAkCnE,MAxDIzB,QAAJ2M,eAAQo3D,EAAR9iE,UAAA,gBAAI,WACI,MAAOpB,MAAKmkE,SAAW,KAAOnkE,KAAKokE,eAGvC,SAEaliE,GACTlC,KAAKokE,UAAYliE,mCAkBrBgiE,EAAJ9iE,UAAAkB,YAAI,WACItC,KAAKmX,cAAciB,eAAepY,KAAKyW,YAAY7U,gBAGvDsiE,EAAJ9iE,UAAAiX,MAAI,WACIrY,KAAKqkE,YAAYhsD,SAGrB6rD,EAAJ9iE,UAAAkjE,QAAI,SAAQ9jE,GACCR,KAAKmkE,WACN3jE,EAAOmY,kBAEP3Y,KAAK0rD,eAAe5mD,MAAM9E,KAAK2e,YAIvCxe,OAAJ2M,eAAgBo3D,EAAhB9iE,UAAA,mBAAI,WACI,MAAOpB,MAAKyW,YAAY7U,+CAG5BsiE,EAAJ9iE,UAAA6sB,UAAI,SAAUztB,GACN,OAAQA,EAAO6C,SACX,IAAKk1B,GAAAA,MACIv4B,KAAKmkE,WACN3jE,EAAOqsB,iBACP7sB,KAAK0rD,eAAe5mD,MAAM9E,KAAK2e,4BAlEnDtY,KAACgL,EAAAA,UAAD9K,OACIC,SAAU,UACV8K,SAAJ,gEACI2D,QAAS,gWACTlM,gBAAiBC,EAAAA,wBAAwBC,OACzCC,cAAeC,EAAAA,kBAAkBC,KACjCwQ,QAAS,SACTlT,MACI8C,MAAO,UACP+6D,2BAA4B,WAC5BC,2BAA4B,WAC5B79D,YAAa,oBACbwK,UAAW,2DArBnB9K,KAAIS,EAAAA,aAKJT,KAAS+T,EAAAA,kCAwBT/C,WAAAhR,KAAK2B,EAAAA,YAALzB,MAAiB,mBAAjBF,KACKqB,EAAAA,QAKLy8D,WAAA99D,KAAKqB,EAAAA,QAGLiX,WAAAtY,KAAKqB,EAAAA,QAGLgkD,iBAAArlD,KAAKmB,EAAAA,UAwCL08D,KC1EAO,GAAA,WAAA,QAAAA,MAS2B,sBAT3Bp+D,KAAC8B,EAAAA,SAAD5B,OACI+B,SACIC,EAAAA,aACAiS,EAAAA,WACA0X,EAAAA,gBAEJ7pB,SAAU67D,IACV97D,cAAe87D,QAEnBO,KCLaC,GACT,GAAIl4D,GAAAA,eAAsC,4BCiB1C+J,GAAe,EAONouD,IACTprD,QAASC,EAAAA,kBACTC,YAAaC,EAAAA,WAAW,WAAM,MAAAkrD,MAC9BjrD,OAAO,OASPkrD,KAAJ,EAEIC,QAAJ,EAEIC,UAAJ,EAEIC,cAAJ,gHAIA,mBAAA,QAAAC,MAKA,MAAAA,oBAKI,QAAJC,GAAuBzuD,GAAAzW,KAAvByW,YAAuBA,EAEvB,MAAAyuD,MAEaC,GAKLxuD,EAAcC,EAAWC,EAAcquD,MAU/CN,GAAA,SAAA1tD,GAwFI,QAAJ0tD,GAAgBhiE,EACQwU,EACAD,EACeE,EAEf+tD,GALpB,GAAJrlE,GAMQmX,EANRI,KAAAtX,KAMc4C,IANd5C,WACwBD,GAAxBqX,mBAAwBA,EACArX,EAAxBoX,cAAwBA,EAGApX,EAAxBqlE,aAAwBA,EAnECrlE,EAAzByX,UAA6C,GAKfzX,EAA9B0X,eAA8D,KAElD1X,EAAZ2X,UAAgC,kBAAiBnB,GAGpCxW,EAAbkL,GAA0BlL,EAAK2X,UAoBlB3X,EAAbwX,cAAiD,QAGpCxX,EAAb4X,KAAmC,KAGZ5X,EAAvB8X,OACQ,GAAIC,GAAAA,aAGW/X,EAAvBslE,oBAAoE,GAAIvtD,GAAAA,aAYpE/X,EAAJy1B,WAA4B,aAGhBz1B,EAAZulE,uBAA6C,GAEjCvlE,EAAZwlE,mBAAuDC,GAAqBX,KAEhE9kE,EAAZ0lE,8BAAkE,aAuCtD1lE,EAAZ6X,UAAgC,EAkBpB7X,EAAZoS,WAAiC,EA4BrBpS,EAAZ2lE,gBAAsC,EA1E9B3lE,EAAKsX,SAAWrV,SAASqV,IAAa,IA0M9C,MAvRgCc,GAAhCysD,EAAA1tD,GAoBI/W,OAAJ2M,eAAQ83D,EAARxjE,UAAA,eAAI,WACI,OAAUpB,KAAKiL,IAAMjL,KAAK0X,WAAlC,0CAIIvX,OAAJ2M,eACQ83D,EADRxjE,UAAA,gBAAI,WAEI,MAAOpB,MAAKunB,eAGhB,SAAarlB,GACTlC,KAAKunB,UAAYqjB,EAAU1oC,oCAiD/B0iE,EAAJxjE,UAAA4zB,gBAAI,WAAA,GAAJj1B,GAAAC,IACQA,MAAKmX,cACAe,QAAQlY,KAAKuY,cAAc3W,eAC3B4C,UAAU,SAACmhE,GAAgB,MAAA5lE,GAAK6lE,oBAAoBD,MAG7Df,EAAJxjE,UAAAkB,YAAI,WACItC,KAAKmX,cAAciB,eAAepY,KAAKuY,cAAc3W,gBAMzDzB,OAAJ2M,eACQ83D,EADRxjE,UAAA,eAAI,WAEI,MAAOpB,MAAK4X,cAGhB,SAAY1V,GACJA,GAASlC,KAAKyY,UACdzY,KAAK4X,SAAW1V,EAChBlC,KAAKoX,mBAAmBnW,iDAUhCd,OAAJ2M,eACQ83D,EADRxjE,UAAA,gBAAI,WAEI,MAAOpB,MAAKmS,eAGhB,SAAajQ,GACLA,GAASlC,KAAK6D,WACd7D,KAAKmS,UAAYjQ,EACjBlC,KAAKoX,mBAAmBnW,iDAYhCd,OAAJ2M,eACQ83D,EADRxjE,UAAA,qBAAI,WAEI,MAAOpB,MAAK0lE,oBAGhB,SAAkBxjE,GACtB,GAAc0yB,GAAU1yB,GAASlC,KAAK0lE,cAC9B1lE,MAAK0lE,eAAiBxjE,EAElB0yB,IACI50B,KAAK0lE,eACL1lE,KAAK6lE,sBAAsBL,GAAqBR,eAEhDhlE,KAAK6lE,sBACD7lE,KAAKyY,QAAU+sD,GAAqBV,QAAUU,GAAqBT,WAE3E/kE,KAAKqlE,oBAAoBvgE,KAAK9E,KAAK0lE,kDAO3Cd,EAAJxjE,UAAAwX,mBAAI,WAII5Y,KAAKoX,mBAAmBnW,gBAI5B2jE,EAAJxjE,UAAA4X,WAAI,SAAW9W,GACPlC,KAAKyY,UAAYvW,GAIrB0iE,EAAJxjE,UAAA6X,iBAAI,SAAiBC,GACblZ,KAAKylE,8BAAgCvsD,GAIzC0rD,EAAJxjE,UAAA+X,kBAAI,SAAkBD,GACdlZ,KAAKw1B,WAAatc,GAItB0rD,EAAJxjE,UAAAgY,iBAAI,SAAiBC,GACbrZ,KAAK6D,SAAWwV,GAGpBurD,EAAJxjE,UAAAoX,gBAAI,WACI,MAAOxY,MAAKyY,QAAU,OAAUzY,KAAK8lE,cAAgB,QAAU,SAG3DlB,EAAZxjE,UAAAykE,sBAAI,SAA8BE,GAClC,GAAcC,GAAWhmE,KAAKulE,mBAChB5jE,EAAuB3B,KAAKyW,YAAY7U,aAE1CokE,KAAaD,IAGb/lE,KAAKslE,uBAAuB32D,OAAS,GACrChN,EAAQiyB,UAAUiE,OAAO73B,KAAKslE,wBAGlCtlE,KAAKulE,mBAAqBQ,EAEtB/lE,KAAKslE,uBAAuB32D,OAAS,GACrChN,EAAQiyB,UAAUC,IAAI7zB,KAAKslE,0BAI3BV,EAAZxjE,UAAA2X,iBAAI,WACJ,GAAcpW,GAAQ,GAAIsiE,GAClBtiE,GAAM2W,OAAStZ,KACf2C,EAAM8V,QAAUzY,KAAKyY,QAErBzY,KAAKylE,8BAA8BzlE,KAAKyY,SACxCzY,KAAK6X,OAAO/S,KAAKnC,IAIbiiE,EAAZxjE,UAAAwkE,oBAAI,SAA4BD,GACpBA,GACA3lE,KAAKw1B,cAKbovC,EAAJxjE,UAAA8zB,OAAI,WACIl1B,KAAKyY,SAAWzY,KAAKyY,SAUzBmsD,EAAJxjE,UAAAyX,cAAI,SAAclW,GAAd,GAAJ5C,GAAAC,IAQQ2C,GAAMgW,kBAGD3Y,KAAK6D,UAAkC,SAAtB7D,KAAKolE,aAkBfplE,KAAK6D,UAAkC,SAAtB7D,KAAKolE,eAG9BplE,KAAKuY,cAAc3W,cAAc6W,QAAUzY,KAAKyY,QAChDzY,KAAKuY,cAAc3W,cAAckkE,cAAgB9lE,KAAK8lE,gBApBlD9lE,KAAK8lE,eAAuC,UAAtB9lE,KAAKolE,cAE3B/rC,QAAQC,UAAUC,KAAK,WACnBx5B,EAAK2lE,gBAAiB,EACtB3lE,EAAKslE,oBAAoBvgE,KAAK/E,EAAK2lE,kBAI3C1lE,KAAKk1B,SACLl1B,KAAK6lE,sBACD7lE,KAAK4X,SAAW4tD,GAAqBV,QAAUU,GAAqBT,WAKxE/kE,KAAK+Y,qBAUb6rD,EAAJxjE,UAAAiX,MAAI,WACIrY,KAAKmX,cAAcmB,SAAStY,KAAKuY,cAAc3W,cAAe,aAGlEgjE,EAAJxjE,UAAAsX,oBAAI,SAAoB/V,GAIhBA,EAAMgW,kCAxSdtS,KAACgL,EAAAA,UAAD9K,OACIC,SAAU,cACV8K,SAAJ,26BACI2D,QAAS,w6CACTxO,SAAU,aACVC,MACI8C,MAAO,cACPqQ,OAAQ,KACRjQ,YAAa,KACbq8D,2BAA4B,gBAC5Bn6B,qBAAsB,UACtBhyB,sBAAuB,WACvBosD,mCAAoC,6BAExCz9D,WAAYk8D,IACZ/qD,QAAS,QAAS,YAClB1Q,cAAeC,EAAAA,kBAAkBC,KACjCL,gBAAiBC,EAAAA,wBAAwBC,+CAtG7C5C,KAAIS,EAAAA,aAFJT,KAAI2D,EAAAA,oBAcJ3D,KAAS+T,EAAAA,eAoKT/T,KAAAgU,OAAAlT,aAAAd,KAAiBiU,EAAAA,UAAjB/T,MAA2B,gBAC3BF,SAAAa,GAAAC,aAAAd,KAAiBkB,EAAAA,WAAjBlB,KAA6Be,EAAAA,OAA7Bb,MAAoCm+D,2BAlEpCltD,YAAAnR,KAAKqB,EAAAA,MAALnB,MAAW,gBAKXkR,iBAAApR,KAAKqB,EAAAA,MAALnB,MAAW,qBAKX0E,KAAA5E,KAAKqB,EAAAA,QAQLqe,WAAA1f,KAAKqB,EAAAA,QAYL6P,gBAAAlR,KAAKqB,EAAAA,QAGLiQ,OAAAtR,KAAKqB,EAAAA,QAGLmQ,SAAAxR,KAAKmB,EAAAA,SAIL69D,sBAAAh/D,KAAKmB,EAAAA,SAGLtF,QAAAmE,KAAKqB,EAAAA,QAGL6Q,gBAAAlS,KAAKiE,EAAAA,UAAL/D,MAAe,WAwCfkS,UAAApS,KAAKqB,EAAAA,QAkBL7D,WAAAwC,KAAKqB,EAAAA,QAoBLo+D,gBAAAz/D,KAAKqB,EAAAA,SAoJLk9D,GAvRgCO,ICnGnBgB,IACT5sD,QAASqY,EAAAA,cACTnY,YAAaC,EAAAA,WAAW,WAAM,MAAA0sD,MAC9BzsD,OAAO,GAQXysD,GAAA,SAAAlvD,GAAA,QAAAkvD,oDAOA,MADiDjuD,GAAjDiuD,EAAAlvD,kBANA7Q,KAACC,EAAAA,UAADC,OACIC,SAAU,2HAEViC,WAAY09D,IACZz/D,MAAQ2/D,kBAAmB,4BAG/BD,GADiDE,EAAAA,2BCrBjDC,GAAA,WAAA,QAAAA,MAMA,sBANAlgE,KAAC8B,EAAAA,SAAD5B,OACI+B,SAAUC,EAAAA,cACVF,SAAUu8D,GAAYwB,IACtBh+D,cAAew8D,GAAYwB,QAG/BG,KCVAhO,GAAA,WAAA,QAAAA,MAIwB,sBAJxBlyD,KAACgL,EAAAA,UAAD9K,OACIC,SAAU,aACV8K,SAAU,2EAEdinD,mBCFA,QAAA/zC,MA2CA,MAAAA,oBC5CA,QAAAo3C,MAuBA,MAAAA,MCxBIrlD,GAAe,EAEnB6hD,GAAA,WAAA,QAAAA,KAQap4D,KAAbiL,GAA0B,WAAWsL,KACrC,sBATAlQ,KAACC,EAAAA,UAADC,OACIC,SAAU,UACVE,MACI8C,MAAO,UACPI,YAAa,4BAIrBqB,KAAA5E,KAAKqB,EAAAA,SACL0wD,KCXAC,GAAA,WAAA,QAAAA,MAIA,sBAJAhyD,KAACC,EAAAA,UAADC,OACIC,SAAU,iBAGd6xD,KCJAG,GAAA,WAAA,QAAAA,KAaax4D,KAAby4D,OAA0C,GAAI3gD,GAAAA,aAEjC9X,KAAb44D,SAA4C,GAAI9gD,GAAAA,aAWhD,MATI0gD,GAAJp3D,UAAAolE,SAAI,SAAShmE,GACLR,KAAKy4D,OAAO3zD,OACZtE,EAAOqsB,kBAGX2rC,EAAJp3D,UAAAqlE,WAAI,SAAWjmE,GACPR,KAAK44D,SAAS9zD,OACdtE,EAAOqsB,iCAxBfxmB,KAACgL,EAAAA,UAAD9K,OACIC,SAAU,aACV8K,SAAU,iVAUdmnD,SAAApyD,KAAKmB,EAAAA,SAELoxD,WAAAvyD,KAAKmB,EAAAA,UAYLgxD,KC1BAF,GAAA,WAAA,QAAAA,MAIA,sBAJAjyD,KAACC,EAAAA,UAADC,OACIC,SAAU,iBAGd8xD,KCuBI/hD,GAAe,EAEnBmwD,GAAA,WACI,QAAJA,GAAuBjwD,GAAAzW,KAAvByW,YAAuBA,EACvB,MAAAiwD,MAEaC,GAA+D/vD,EAAW8vD,IAEvF5hD,GAAA,SAAA5N,GAsDI,QAAJ4N,GAAuBrO,EAAiCW,GAApD,GAAJrX,GACQmX,EADRI,KAAAtX,KACcyW,IADdzW,WAAuBD,GAAvB0W,YAAuBA,EAAiC1W,EAAxDqX,mBAAwDA,EAJpDrX,EAAJ6mE,SAAe,uBAAuBrwD,KAElCxW,EAAJ8mE,SAAuB,IAPvB,MARiC1uD,GAAjC2M,EAAA5N,GAqBI4N,EAAJ1jB,UAAAszB,mBAAI,WAAA,GAAJ30B,GAAAC,IACQA,MAAK8mE,wBAED9mE,KAAK+mE,SAAS1/C,cACdrnB,KAAKyW,YAAY7U,cAAcgyB,UAC1BC,IAAI,sBAAsB7zB,KAAK+mE,SAAS1/C,aAEzCrnB,KAAKgnE,gBAAkBhnE,KAAKinE,aAC5BjnE,KAAKknE,SAASzO,OAAOj0D,UAAUxE,KAAKwmE,SAASv+C,KAAKjoB,OAClDA,KAAKknE,SAAStO,SAASp0D,UAAUxE,KAAKymE,WAAWx+C,KAAKjoB,SAK9DA,KAAK+mE,SAAS5nD,aAAa9a,KAAK0wB,EAAAA,aAC3BvwB,UAAU,WACPzE,EAAKqX,mBAAmBnW,iBAG5BjB,KAAKgnE,gBACLhnE,KAAKgnE,eAAe7nD,aAAa9a,KAAK0wB,EAAAA,aACjCvwB,UAAU,WACPzE,EAAKqX,mBAAmBnW,gBAK5C,IAAckmE,GAAennE,KAAK+mE,SAASjgD,WAAa9mB,KAAK+mE,SAASjgD,UAAUqgD,cAAgBpqC,EAAAA,KAExFlxB,GAAAA,MAAMs7D,GACD3iE,UAAU,WAAM,MAAAzE,GAAKqX,mBAAmBnW,kBAGjD6jB,EAAJ1jB,UAAA2+B,sBAAI,WACI//B,KAAK8mE,yBAGThiD,EAAJ1jB,UAAA4zB,gBAAI,WAEIh1B,KAAKoX,mBAAmBqc,iBAG5B3O,EAAJ1jB,UAAAgmE,WAAI,SAAW5mE,GACPA,EAAOmY,kBAEH3Y,KAAK+mE,UAAY/mE,KAAK+mE,SAASjgD,WAC/B9mB,KAAK+mE,SAASjgD,UAAUuqB,SAIhCvsB,EAAJ1jB,UAAA6nB,iBAAI,SAAiBzoB,GACTR,KAAK+mE,SAAS99C,kBACdjpB,KAAK+mE,SAAS99C,iBAAiBzoB,IAIvCskB,EAAJ1jB,UAAA6sB,UAAI,SAAUtrB,GAEFA,EAAMU,UAAYC,EAAAA,QAAUtD,KAAK+mE,SAAS3/C,SAAWpnB,KAAKqnE,aACtDrnE,KAAK+mE,UAAY/mE,KAAK+mE,SAASjgD,WAC/B9mB,KAAK+mE,SAASjgD,UAAUuqB,QAG5B1uC,EAAMkqB,mBAId/H,EAAJ1jB,UAAAkmE,eAAI,SAAeC,GACPA,IAAcvnE,KAAK6mE,UACnB7mE,KAAK6mE,QAAWU,EAChBvnE,KAAKoX,mBAAmBnW,iBAIhC6jB,EAAJ1jB,UAAAolE,SAAI,WACQxmE,KAAKgnE,gBACLhnE,KAAKgnE,eAAevO,OAAOz4D,KAAKgnE,eAAetO,OAIvD5zC,EAAJ1jB,UAAAqlE,WAAI,WACQzmE,KAAKgnE,gBACLhnE,KAAKgnE,eAAepO,SAAS54D,KAAKgnE,eAAetO,OAKzD5zC,EAAJ1jB,UAAAomE,eAAI,SAAezsB,GACnB,GAAcj0B,GAAY9mB,KAAK+mE,SAAW/mE,KAAK+mE,SAASjgD,UAAY,IAE5D,OAAOA,IAAaA,EAAUi0B,IAIxBj2B,EAAd1jB,UAAA0lE,sBAAI,WACI,IAAK9mE,KAAK+mE,SACN,KAAMU,MAIdtnE,OAAJ2M,eAAQgY,EAAR1jB,UAAA,eAAI,WACI,MAAOpB,MAAK0nE,OAAS1nE,KAAK0nE,MAAM/4D,OAAS,mCAG7CxO,OAAJ2M,eAAQgY,EAAR1jB,UAAA,iBAAI,WACI,MAAOpB,MAAK2nE,SAAW3nE,KAAK2nE,QAAQh5D,OAAS,mCAGjDxO,OAAJ2M,eAAQgY,EAAR1jB,UAAA,iBAAI,WACI,MAAOpB,MAAK4nE,SAAW5nE,KAAK4nE,QAAQj5D,OAAS,mCAGjDxO,OAAJ2M,eAAQgY,EAAR1jB,UAAA,kBAAI,WACI,MAAOpB,MAAK6nE,UAAY7nE,KAAK6nE,SAASl5D,OAAS,mCAGnDxO,OAAJ2M,eAAQgY,EAAR1jB,UAAA,kBAAI,WACI,QAASpB,KAAKknE,0CAGlB/mE,OAAJ2M,eAAQgY,EAAR1jB,UAAA,sBAAI,WACI,SAAOpB,KAAKqnE,YACRrnE,KAAK+mE,UACL/mE,KAAK+mE,SAASjgD,aACR9mB,KAAK+mE,SAASjgD,UAAU5kB,QAAUlC,KAAK+mE,SAASljE,2CAK9D1D,OAAJ2M,eAAQgY,EAAR1jB,UAAA,gBAAI,WACI,MAAOpB,MAAK+mE,UAAY/mE,KAAK+mE,SAASljE,0CAG1C1D,OAAJ2M,eAAQgY,EAAR1jB,UAAA,sBAAI,WACI,MAAOpB,MAAKgnE,iBACPhnE,KAAK6D,WAEF7D,KAAKgnE,eAAe5/C,SACpBpnB,KAAK6mE,yDApMrBxgE,KAACgL,EAAAA,UAAD9K,OACIC,SAAU,gBACVC,SAAU,cACV6K,SAAJ,iqBAII2D,QAAS,+rEACbvO,MACQ8C,MAAR,gBACQs+D,gCAAR,sBACAhuD,sBAAA,oBACQiuD,mCAAR,YACQC,mCAAR,YACQC,oCAAR,iBACQC,oCAAR,iBACQne,qBAAR,mBACQoe,uBAAR,8BACQC,qBAAR,4BACQC,sBAAR,6BACQC,mBAAoB,0BACpBC,mBAAR,0BACQC,qBAAsB,4BACtBC,qBAAR,4BACQ9hE,YAAR,oBACQ+hE,eAAR,uBACQC,eAAR,yBAEA/uD,QAAA,SACA1Q,cAAAC,EAAAA,kBAAAC,KACAL,gBAAAC,EAAAA,wBAAAC,WAIA6b,EAAA2uB,eAAA,WAAA,QACAptC,KAAAS,EAAAA,2DAhEAigE,WAAA1gE,KAAAkf,EAAAA,aAAAhf,MAAAie,MAJAwiD,iBAAA3gE,KAAqBkf,EAAAA,aAArBhf,MAAAq1D,4FAyEA+L,UAAAthE,KAAA00B,EAAAA,gBAAAx0B,MAAA+xD,MACAsP,UAAAvhE,KAAA00B,EAAAA,gBAAAx0B,MAAA8xD,MACAwP,WAAAxhE,KAAK00B,EAAAA,gBAALx0B,MAAAgyD,OAGAzzC,GACA6hD,IACAxO,GAAA,yBA4JA,sBAFA9xD,KAAAC,EAAAA,UAAAC,OAAAC,SAAA,2CAKAC,SAAA,6EAHA0xD,K1BpOA78B,GAAA;kBAAA,QAAAA,MAsBA,sBAtBAj1B,KAAC8B,EAAAA,SAAD5B,OACI6B,cACI0c,GACAqzC,GACAC,GACAC,GACAC,GACAC,GACAC,IAEJlwD,SAAUC,EAAAA,aAAcuJ,IACxBzJ,SACIyc,GACAqzC,GACAC,GACAC,GACAC,GACAC,GACAC,QAIRl9B,KChCaxJ,GACT,GAAItlB,GAAAA,eAA+B,2BCmB1BisD,GAAS,SAACv2D,EACA0mB,EACApH,EACAk3C,GAEvB,GAAQC,EAEJ,OAAc,QAAVz2D,GACAy2D,EAAM9kC,EAAIrS,EAAKk3C,GAEA,OAARC,EAAe,KAAOp3C,KAAKC,IAAIm3C,EAAK/vC,KAG/C+vC,EAAM9kC,EAAI3xB,EAAOw2D,GAEF,OAARC,EAAe,KAAOp3C,KAAKqH,IAAIrH,KAAKC,IAAIm3C,EAAK/vC,GAAMpH,KAGjDo3C,GAAW,SAAC12D,EACA0mB,EACApH,EACAk3C,GAEzB,GAAQC,EAEJ,OAAc,QAAVz2D,GACAy2D,EAAM9kC,EAAIjL,GAAM8vC,GAED,OAARC,EAAe,KAAOp3C,KAAKqH,IAAI+vC,EAAKn3C,KAG/Cm3C,EAAM9kC,EAAI3xB,GAAQw2D,GAEH,OAARC,EAAe,KAAOp3C,KAAKC,IAAID,KAAKqH,IAAI+vC,EAAKn3C,GAAMoH,KCzBxDiwC,IACF,SACA,WACA,OACA,SACA,QACA,QACA,QACA,QACA,UAGSC,GAAW,GACXC,GAAa,EAEtBxiD,GAAe,EAEnByiD,GAAA,WACI,QAAJA,GAAuBryC,EACAC,EACAC,EACAC,GAHA9mB,KAAvB2mB,yBAAuBA,EACA3mB,KAAvB4mB,WAAuBA,EACA5mB,KAAvB6mB,gBAAuBA,EACA7mB,KAAvB8mB,UAAuBA,EAEvB,MAAAkyC,MAEaC,GAAkEjyC,EAAgBgyC,IAG/FE,GAAA,WAqDI,QAAJA,GACgB7a,EACA5nC,EACA0iD,EACWT,EACIU,EACL53C,EACAoH,GANV5oB,KAAhBq+C,UAAgBA,EACAr+C,KAAhByW,YAAgBA,EACAzW,KAAhBm5D,OAAgBA,EAbZn5D,KAAJonB,SAAuB,EAMVpnB,KAAbmf,aAA2C,GAAIpU,GAAAA,QAavC/K,KAAK04D,KAAO14D,KAAKq5D,QAAQX,GAAQtiD,WAAWsiD,GAAQK,GACpD/4D,KAAKo5D,QAAUp5D,KAAKq5D,QAAQD,GAAWhjD,WAAWgjD,GAAWN,GAC7D94D,KAAKwhB,IAAMxhB,KAAKq5D,QAAQ73C,GAAOpL,WAAWoL,IAAQ83C,EAAAA,EAClDt5D,KAAK4oB,IAAM5oB,KAAKq5D,QAAQzwC,GAAOxS,WAAWwS,GAAO0wC,EAAAA,EAEjDt5D,KAAKu5D,MAAQv5D,KAAKyW,YAAY7U,aAEtC,IAAc43D,GAAOx5D,IAET,kBAAmBA,MAAKu5D,OACxBp5D,OAAO2M,eAAe3M,OAAOs5D,eAAez5D,KAAKu5D,OAAQ,iBAErDvuC,eAChB,GAA0B2tC,GAAMviD,WAAWojD,EAAKE,kBAAkB15D,KAAKkC,OAEnD,OAAO0uB,OAAM+nC,GAAO,KAAOA,KA0G/C,MApGIO,GAAJ93D,UAAAu4D,cAAI,SAAc5wC,GACNA,IAAc/oB,KAAKonB,UACnBpnB,KAAKonB,QAAU2B,EACf/oB,KAAKmf,aAAanc,SAI1Bk2D,EAAJ93D,UAAA6sB,UAAI,SAAUtrB,GAAV,GAAJ5C,GAAAC,KAEcqD,EAAUV,EAAMU,QAYhBu2D,GAAWC,EAAAA,aAAcC,EAAAA,KAAMC,EAAAA,UAC/BC,GAAeC,EAAAA,OAAQC,EAAAA,UAAWC,EAAAA,IAAK72D,EAAAA,OAAQg1B,EAAAA,OAC/C8hC,GAAUhiC,EAAAA,WAAYC,EAAAA,aACtBgiC,GAAgB1hC,EAAAA,KAAMC,EAAAA,KAAK0hC,OAAOF,GAAQE,OAAON,GAAaM,OAAOV,GAErEW,EAAa,SAACp3D,GAAM,MAAU,MAAVA,EAAE5C,KAAyB,YAAV4C,EAAE5C,KACvCi6D,EAAgB,SAACr3D,GAAM,MAAU,MAAVA,EAAE5C,KAAyB,MAAV4C,EAAE5C,IAOhD,OAAsC,IAAlC85D,EAAYjqD,QAAQ/M,IAvBR,SAACF,GAAM,MAAAA,GAAEE,UAAY01B,EAAAA,IAAM51B,EAAE61B,SAAW71B,EAAEs3D,UAwB9C93D,IAvBI,SAACQ,GAAM,MAAAA,GAAEE,UAAYq3D,EAAAA,IAAMv3D,EAAE61B,SAAW71B,EAAEs3D,UAwB9C93D,IAvBI,SAACQ,GAAM,MAAAA,GAAEE,UAAYs3D,EAAAA,IAAMx3D,EAAE61B,SAAW71B,EAAEs3D,UAwB9C93D,IAvBI,SAACQ,GAAM,MAAAA,GAAEE,UAAYu3D,EAAAA,IAAMz3D,EAAE61B,SAAW71B,EAAEs3D,UAwB9C93D,IAtBG,SAACQ,GAAM,MAAAA,GAAEE,SAAWw3D,EAAAA,IAAM13D,EAAEE,SAAWy3D,EAAAA,KAuB3Cn4D,IATM,SAACQ,GAAM,MAAApD,GAAKs+C,UAAU0c,MAAQh7D,EAAKs+C,UAAU2c,QACxDT,EAAWp3D,GACXq3D,EAAcr3D,IAQPR,MAMTA,EAAMw2B,WA5BO,SAACh2B,GAAM,MAACA,GAAEE,SAAW43D,EAAAA,MAAQ93D,EAAEE,SAAW63D,EAAAA,MACtD/3D,EAAEE,SAAW83D,EAAAA,aAAeh4D,EAAEE,SAAW+3D,EAAAA,aA2Bdz4D,IAAQ,CACpCA,EAAMkqB,gBAGlB,IAAkB6rC,GAAO/1D,EAAMw2B,SAAWn5B,KAAKo5D,QAAUp5D,KAAK04D,IAE9Cr1D,KAAY80B,EAAAA,UACZn4B,KAAKy4D,OAAOC,GAGZr1D,IAAY60B,EAAAA,YACZl4B,KAAK44D,SAASF,KAK1BQ,EAAJ93D,UAAAwrB,QAAI,SAAQjqB,GACZ,GAAYT,GAAQS,EAAMoqB,cAAcC,QAAQ,OACxC9qB,GAAQlC,KAAK05D,kBAAkBx3D,GAE1BlC,KAAKq5D,QAAQn3D,IACdS,EAAMkqB,kBAIdqsC,EAAJ93D,UAAAq3D,OAAI,SAAOC,GACH14D,KAAKyW,YAAY7U,cAAcyW,OACvC,IAAcsgD,GAAMF,GAAOz4D,KAAKu5D,MAAM8B,cAAer7D,KAAK4oB,IAAK5oB,KAAKwhB,IAAKk3C,EACjE14D,MAAKu5D,MAAMr3D,MAAgB,OAARy2D,EAAe,GAAKA,EAAIrvC,WAC3CtpB,KAAKm5D,OAAOmC,OAAOx2D,KAAK9E,KAAKu5D,MAAM8B,gBAGvCnC,EAAJ93D,UAAAw3D,SAAI,SAASF,GACL14D,KAAKyW,YAAY7U,cAAcyW,OACvC,IAAcsgD,GAAMC,GAAS54D,KAAKu5D,MAAM8B,cAAer7D,KAAK4oB,IAAK5oB,KAAKwhB,IAAKk3C,EACnE14D,MAAKu5D,MAAMr3D,MAAgB,OAARy2D,EAAe,GAAKA,EAAIrvC,WAC3CtpB,KAAKm5D,OAAOmC,OAAOx2D,KAAK9E,KAAKu5D,MAAM8B,gBAG/BnC,EAAZ93D,UAAAs4D,kBAAI,SAA0Bx3D,GACtB,MAAOA,GAAQA,EAAMq5D,QAAQ,KAAM,KAAOr5D,GAGtCg3D,EAAZ93D,UAAAi4D,QAAI,SAAgBn3D,GACZ,MAAOlC,MAAKw7D,QAAQt5D,IAAUlC,KAAKy7D,MAAMv5D,IAGrCg3D,EAAZ93D,UAAAo6D,QAAI,SAAgBt5D,GACZ,MAAO,eAAew5D,KAAKx5D,IAGvBg3D,EAAZ93D,UAAAq6D,MAAI,SAAcv5D,GACV,MAAO,UAAUw5D,KAAKx5D,mBArL9BmE,KAACC,EAAAA,UAADC,OACIC,SAAU,gCACVC,SAAU,mBACVgC,WAAYkzD,EAAAA,SAAWpiD,QAASqiD,GAA0BniD,YAAay/C,IACvExyD,MACIyd,SAAU,uBACVD,UAAW,sBACXyN,UAAW,kBACXhrB,YAAa,6DAnDrBN,KAAiC45C,EAAAA,WAdjC55C,KAAwBS,EAAAA,aAMxBT,KAAYs1D,EAAAA,UA4GZt1D,KAAAgU,OAAAlT,aAAAd,KAASiU,EAAAA,UAAT/T,MAAmB,YACnBF,KAAAgU,OAAAlT,aAAAd,KAASiU,EAAAA,UAAT/T,MAAmB,gBACnBF,KAAAgU,OAAAlT,aAAAd,KAASiU,EAAAA,UAAT/T,MAAmB,WACnBF,KAAAgU,OAAAlT,aAAAd,KAASiU,EAAAA,UAAT/T,MAAmB,8BA3CnB6yD,UAAA/yD,KAAKqB,EAAAA,QAOLgxD,OAAAryD,KAAKqB,EAAAA,QAGL8Z,MAAAnb,KAAKqB,EAAAA,QAGLkhB,MAAAviB,KAAKqB,EAAAA,SAyJLwxD,KAEA2C,GAAA,SAAA3kD,GAsJI,QAAJ2kD,GAA0BplD,EACiBqQ,EACfF,EACAC,EACZF,EACqDO,GALjE,GAAJnnB,GAMQmX,EANRI,KAAAtX,KAMc2mB,EAA0BC,EAAYC,EAAiBC,IANrE9mB,WAA0BD,GAA1B0W,YAA0BA,EACiB1W,EAA3C+mB,UAA2CA,EA5HvC/mB,EAAJqnB,SAAuB,EAMVrnB,EAAbof,aAA2C,GAAIpU,GAAAA,QAM3ChL,EAAJsnB,YAA0B,WA8FZtnB,EAAd+7D,KAAqB,YAAYvlD,KAEnBxW,EAAdoS,WAA0B,EAEZpS,EAAdwnB,WAA0B,EACZxnB,EAAdg8D,MAAsB,OACRh8D,EAAdi8D,uBACQ,OACA,WACA,iBACA,QACA,OACA,QACF7wD,OAAO,SAAC8wD,GAAM,MAAAC,GAAAA,yBAAyB/lB,IAAI8lB,KAazCl8D,EAAKo8D,oBAAsBj1C,GAAsBnnB,EAAK0W,YAAY7U,cAElE7B,EAAKq8D,qBAAuBr8D,EAAKmC,MAGjCnC,EAAKkL,GAAKlL,EAAKkL,KA6FvB,MAhP6BkN,GAA7B0jD,EAAA3kD,GA4BI/W,OAAJ2M,eACQ+uD,EADRz6D,UAAA,gBAAI,WAEI,MAAIpB,MAAK8mB,WAAyC,OAA5B9mB,KAAK8mB,UAAUjjB,SAC1B7D,KAAK8mB,UAAUjjB,SAGnB7D,KAAKmS,eAGhB,SAAajQ,GACTlC,KAAKmS,UAAYM,EAAAA,sBAAsBvQ,GAInClC,KAAKonB,UACLpnB,KAAKonB,SAAU,EACfpnB,KAAKmf,aAAanc,yCAQ1B7C,OAAJ2M,eACQ+uD,EADRz6D,UAAA,UAAI,WAEI,MAAOpB,MAAKkoB,SAGhB,SAAOhmB,GACHlC,KAAKkoB,IAAMhmB,GAASlC,KAAK87D,sCAa7B37D,OAAJ2M,eACQ+uD,EADRz6D,UAAA,gBAAI,WAEI,MAAOpB,MAAKunB,eAGhB,SAAarlB,GACTlC,KAAKunB,UAAY9U,EAAAA,sBAAsBvQ,oCAK3C/B,OAAJ2M,eACQ+uD,EADRz6D,UAAA,YAAI,WAEI,MAAOpB,MAAK+7D,WAGhB,SAAS75D,GACLlC,KAAK+7D,MAAQ75D,GAAS,OACtBlC,KAAKq8D,gBAKDH,EAAAA,yBAAyB/lB,IAAIn2C,KAAK+7D,SAClC/7D,KAAKyW,YAAY7U,cAAcyE,KAAOrG,KAAK+7D,wCASnD57D,OAAJ2M,eACQ+uD,EADRz6D,UAAA,aAAI,WAEI,MAAOpB,MAAKm8D,oBAAoBj6D,WAGpC,SAAUA,GACFA,IAAUlC,KAAKkC,QACflC,KAAKm8D,oBAAoBj6D,MAAQA,EACjClC,KAAKmf,aAAanc,yCAsC1B64D,EAAJz6D,UAAAyP,YAAI,WACI7Q,KAAKmf,aAAanc,QAGtB64D,EAAJz6D,UAAAkB,YAAI,WACItC,KAAKmf,aAAalc,YAGtB44D,EAAJz6D,UAAAinB,UAAI,WACQroB,KAAK8mB,WAIL9mB,KAAKsoB,mBAMTtoB,KAAKs8D,0BAITT,EAAJz6D,UAAAiX,MAAI,WACIrY,KAAKyW,YAAY7U,cAAcyW,SAInCwjD,EAAJz6D,UAAAu4D,cAAI,SAAc5wC,GACNA,IAAc/oB,KAAKonB,UACnBpnB,KAAKonB,QAAU2B,EACf/oB,KAAKmf,aAAanc,SAI1B64D,EAAJz6D,UAAAm7D,SAAI,aAcAp8D,OAAJ2M,eAAQ+uD,EAARz6D,UAAA,aAAI,WACI,OAAQpB,KAAKw8D,kBAAoBx8D,KAAKyW,YAAY7U,cAAcM,QAAUlC,KAAKy8D,+CAOnFZ,EAAJz6D,UAAA6nB,iBAAI,WACIjpB,KAAKqY,SAICwjD,EAAdz6D,UAAAk7D,uBAAI,WACJ,GAAcpzC,GAAWlpB,KAAKkC,KAElBlC,MAAKo8D,uBAAyBlzC,IAC9BlpB,KAAKo8D,qBAAuBlzC,EAC5BlpB,KAAKmf,aAAanc,SAKhB64D,EAAdz6D,UAAAi7D,cAAI,WACI,GAAIxD,GAAuBzoD,QAAQpQ,KAAK+7D,QAAU,EAC9C,KAAMW,GAA+B18D,KAAK+7D,QAKxCF,EAAdz6D,UAAAo7D,cAAI,WACI,MAAOx8D,MAAKg8D,sBAAsB5rD,QAAQpQ,KAAK+7D,QAAU,GAInDF,EAAdz6D,UAAAq7D,YAAI,WAEJ,GAActzC,GAAYnpB,KAAKyW,YAAyB,cAAsB0S,QAEtE,OAAOA,IAAYA,EAASC,yBA/PpC/iB,KAACC,EAAAA,UAADC,OACIC,SAAU,iBACVC,SAAU,UACVC,MACI8C,MAAO,WAGPI,YAAa,KACb4f,qBAAsB,cACtBE,aAAc,WACdC,aAAc,WACdxF,SAAU,uBACVD,UAAW,sBACXwN,UAAW,cAEfjpB,YAAc8Q,QAASiL,GAAoB/K,YAAaoiD,4CAjQ5Dx1D,KAAwBS,EAAAA,aAKxBT,KAAI0e,EAAAA,UAAJ5d,aAAAd,KAoYiBkB,EAAAA,WApYjBlB,KAoY6B2e,EAAAA,SAnY7B3e,KAAIue,EAAAA,OAAJzd,aAAAd,KAoYiBkB,EAAAA,aAtYjBlB,KAAIwe,EAAAA,mBAAJ1d,aAAAd,KAuYiBkB,EAAAA,aAzXjBlB,KAAIse,KA2XJte,SAAAa,GAAAC,aAAAd,KAAiBkB,EAAAA,WAAjBlB,KAA6B2e,EAAAA,OAA7B3e,KAAqCe,EAAAA,OAArCb,MAA4CurB,2BAtI5CjM,oBAAAxf,KAAKqB,EAAAA,QAwBL7D,WAAAwC,KAAKqB,EAAAA,QAwBLuD,KAAA5E,KAAKqB,EAAAA,QAaLoe,cAAAzf,KAAKqB,EAAAA,QAMLqe,WAAA1f,KAAKqB,EAAAA,QAWLrB,OAAAA,KAAKqB,EAAAA,QAsBLxF,QAAAmE,KAAKqB,EAAAA,SAwILm0D,GAhP6B5C,IAkP7B0D,GAAA,WAAA,QAAAA,MAMA,sBANAt2D,KAACC,EAAAA,UAADC,OACIC,SAAU,0BACVC,SAAU,mBACVC,MAAQ8C,MAAO,0BAGnBmzD,KCzfaC,IACTrjD,QAASqY,EAAAA,cACTnY,YAAaC,EAAAA,WAAW,WAAM,MAAAmjD,MAC9BljD,OAAO,GASXkjD,GAAA,WAAA,QAAAA,MAuBA,MAZIA,GAAJz7D,UAAAyP,YAAI,SAAYC,GACJ,OAASA,KACT9Q,KAAK88D,mBACD98D,KAAK01B,WAAa11B,KAAK01B,cAInCmnC,EAAJz7D,UAAAgqB,SAAI,SAASN,GAA+C,MAAO9qB,MAAK+8D,WAAWjyC,IAE/E+xC,EAAJz7D,UAAAmqB,0BAAI,SAA0BrS,GAAwBlZ,KAAK01B,UAAYxc,GAE3D2jD,EAAZz7D,UAAA07D,iBAAI,WAAmC98D,KAAK+8D,WAAanxC,EAAAA,WAAWpK,IAAIxf,SAAShC,KAAKwhB,IAAK,qBAtB3Fnb,KAACC,EAAAA,UAADC,OACIC,SAAU,2DACViC,WAAYm0D,IACZl2D,MAAOmvD,aAAc,0CAIzBr0C,MAAAnb,KAAKqB,EAAAA,SAgBLm1D,KAGaG,IACTzjD,QAASqY,EAAAA,cACTnY,YAAaC,EAAAA,WAAW,WAAM,MAAAujD,MAC9BtjD,OAAO,GASXsjD,GAAA,WAAA,QAAAA,MA0BA,MAZIA,GAAJ77D,UAAAyP,YAAI,SAAYC,GACJ,OAASA,KACT9Q,KAAK88D,mBACD98D,KAAK01B,WAAa11B,KAAK01B,cAInCunC,EAAJ77D,UAAAgqB,SAAI,SAASN,GAA+C,MAAO9qB,MAAK+8D,WAAWjyC,IAE/EmyC,EAAJ77D,UAAAmqB,0BAAI,SAA0BrS,GAAwBlZ,KAAK01B,UAAYxc,GAE3D+jD,EAAZ77D,UAAA07D,iBAAI,WAAmC98D,KAAK+8D,WAAanxC,EAAAA,WAAWhD,IAAI5mB,SAAShC,KAAK4oB,IAAK,qBAzB3FviB,KAACC,EAAAA,UAADC,OACIC,SAAU,2DACViC,WAAYu0D,IACZt2D,MACIovD,aAAc,0CAMtBltC,MAAAviB,KAAKqB,EAAAA,SAgBLu1D,KCtEAC,GAAA,WAAA,QAAAA,MAMA,sBANA72D,KAAC8B,EAAAA,SAAD5B,OACI+B,SAAUC,EAAAA,aAAciS,EAAAA,WAAY3I,EAAgBgY,EAAAA,aACpDxhB,SAAUwzD,GAAS3C,GAAeyD,GAAaE,GAAcI,IAC7D70D,cAAeyzD,GAAS3C,GAAeyD,GAAaE,GAAcI,QAGtEC,KCXA1O,GAAA,WAAA,QAAAA,KAMaxuD,KAAb8Q,QAAsC,GAAI/F,GAAAA,QAGtC/K,KAAJm9D,cAA4B,WAGxBn9D,KAAJo9D,kBAAgC,gBAG5Bp9D,KAAJotD,eAA6B,iBAGzBptD,KAAJytD,eAA6B,aAGzBztD,KAAJstD,cAA4B,gBAGxBttD,KAAJ0tD,cAA4B,YAGxB1tD,KAAJwtD,mBAAiC,oBAG7BxtD,KAAJ2tD,mBAAiC,gBAG7B3tD,KAAJktD,uBAAqC,cAGjCltD,KAAJitD,2BAAyC,wBAzCzC,sBAKA5mD,KAACiK,EAAAA,WAAD/J,OAAck8C,WAAY,8GAL1B+L,mBC0BI,QAAJ6O,GACen7D,EACAo7D,EACA9lD,EACA+lD,EACAnd,GAJApgD,KAAfkC,MAAeA,EACAlC,KAAfs9D,aAAeA,EACAt9D,KAAfwX,UAAeA,EACAxX,KAAfu9D,QAAeA,EACAv9D,KAAfogD,WAAeA,EAGf,MAAAid,MAOAvR,GAAA,WAqDI,QAAJA,GAAwBlpD,EAA6CoP,GAA7ChS,KAAxB4C,WAAwBA,EAA6C5C,KAArEgS,OAAqEA,EAvBxDhS,KAAbw9D,QAAuB,EAGVx9D,KAAby9D,WAA0B,EAMbz9D,KAAb09D,gBAA+B,EAGR19D,KAAvB29D,oBAAmE,GAAI7lD,GAAAA,aA8DvE,MAhDIg0C,GAAJ1qD,UAAAw8D,YAAI,SAAYC,GACJA,EAAKN,SACLv9D,KAAK29D,oBAAoB74D,KAAK+4D,EAAK37D,QAI3C4pD,EAAJ1qD,UAAAyP,YAAI,SAAYC,GAChB,GAAcgtD,GAAgBhtD,EAAQ0sD,QAExB13D,EAAd9F,KAAgB+9D,EAAhBj4D,EAAAi4D,KAAsBP,EAAtB13D,EAAA03D,SAEY1sD,EAAQitD,MAAQD,KAChB99D,KAAKg+D,eAAiBD,GAAQA,EAAKpvD,QAAUovD,EAAK,GAAGpvD,OAAS6uD,EAAUO,EAAK,GAAGpvD,OAAS,IAGzFmC,EAAQ4sD,iBAAmBI,IAAkB99D,KAAKi+D,eAClDj+D,KAAKi+D,YAAwC,GAAvBj+D,KAAK09D,gBAAuBF,EAA9D,MAGYM,GAAkB99D,KAAKk+D,YACvBl+D,KAAKk+D,UAAe,IAAMV,EAAtC,MAII1R,EAAJ1qD,UAAA+8D,aAAI,SAAaC,EAAkBC,GACnC,GAAYC,GAAaF,EAAWp+D,KAAKw9D,QAAUa,CAO3C,OAJID,KACAE,GAAct+D,KAAKg+D,gBAGhBM,IAAet+D,KAAKy9D,YAI/B3R,EAAJ1qD,UAAA2uD,gBAAI,WAAA,GAAJhwD,GAAAC,IACQA,MAAKgS,OAAOgC,kBAAkB,WAC1BjU,EAAKiS,OAAOsjB,SAASjpB,eAAehI,KAAKmH,EAAAA,KAAK,IAAIhH,UAAU,WACxE,GAAsBi5D,GACF19D,EAAK6C,WAAWhB,cAAc01B,cAAc,4BAE5CmmC,IACAA,EAAWplD,4BAnG/BhS,KAACgL,EAAAA,UAAD9K,OACIC,SAAU,qBACV8K,SAAJ,0xCACI2D,QAAS,kgCACTvO,MACI8C,MAAO,oBACPE,KAAM,OACN60D,gBAAiB,QAErB93D,SAAU,iBACVyC,cAAeC,EAAAA,kBAAkBC,KACjCL,gBAAiBC,EAAAA,wBAAwBC,+CAhD7C5C,KAAIS,EAAAA,aAKJT,KAAIU,EAAAA,4BA+CJulD,QAAAjmD,KAAKqB,EAAAA,QAGLq2D,OAAA13D,KAAKqB,EAAAA,QAGL82D,aAAAn4D,KAAKqB,EAAAA,QAGL+2D,gBAAAp4D,KAAKqB,EAAAA,QAGLg3D,wBAAAr4D,KAAKqB,EAAAA,QAGL81D,UAAAn3D,KAAKqB,EAAAA,QAGL+1D,aAAAp3D,KAAKqB,EAAAA,QAMLg2D,kBAAAr3D,KAAKqB,EAAAA,QAGLi2D,sBAAAt3D,KAAKmB,EAAAA,UA8DLskD,KCzGAoF,GAAA,WAqGI,QAAJA,GACgBhxC,EACqCksC,EAC1BD,EACC3wB,GAGpB,GANQx7B,KAAhBkgB,kBAAgBA,EACqClgB,KAArDosD,YAAqDA,EAC1BpsD,KAA3BmsD,YAA2BA,EACCnsD,KAA5Bw7B,IAA4BA,EAxCLx7B,KAAvB0rD,eAAgE,GAAI5zC,GAAAA,aAG7C9X,KAAvB8uD,cAA2D,GAAIh3C,GAAAA,aAGxC9X,KAAvB4rD,iBAA2D,GAAI9zC,GAAAA,cAqClD9X,KAAKmsD,YACN,KAAM6C,GAA2B,cAGrC,KAAKhvD,KAAKosD,YACN,KAAM4C,GAA2B,kBAG7C,IAAc2P,GAAiB3+D,KAAKmsD,YAAYyS,oBAClCC,EAAiB7+D,KAAKmsD,YAAY2S,kBAAkB,UACpDC,EAAe/+D,KAAKmsD,YAAY2S,kBAAkB,QAGlDE,EAAWD,EAAan/C,IAAI,SAACq/C,EAAM56B,GACrC,OAAS46B,KAArBA,EAA2BC,OAAQL,EAAex6B,KAE1CrkC,MAAKg/D,SAAWA,EAAShvD,MAAM2uD,GAAgBrE,OAAO0E,EAAShvD,MAAM,EAAG2uD,IAExE3+D,KAAKm/D,YAAcn/D,KAAKmsD,YAAY0D,QAyK5C,MA5RI1vD,QAAJ2M,eACQokD,EADR9vD,UAAA,kBAAI,WAEI,MAAOpB,MAAKm/D,iBAGhB,SAAej9D,GACnB,GAAck9D,GAAgBp/D,KAAKm/D,YACrBE,EACFr/D,KAAKmvD,mBAAmBnvD,KAAKmsD,YAAYiD,YAAYltD,KAAWlC,KAAKmsD,YAAY0D,OACrF7vD,MAAKm/D,YAAcn/D,KAAKmsD,YAAYqD,UAAU6P,EAAWr/D,KAAKkuD,QAASluD,KAAKwrD,SAEvExrD,KAAKs/D,oBAAoBF,EAAep/D,KAAKm/D,cAC9Cn/D,KAAKiwD,wCAKb9vD,OAAJ2M,eACQokD,EADR9vD,UAAA,gBAAI,WAEI,MAAOpB,MAAKoqC,eAGhB,SAAaloC,GACTlC,KAAKoqC,UAAYpqC,KAAKmvD,mBAAmBnvD,KAAKmsD,YAAYiD,YAAYltD,IACtElC,KAAKu/D,aAAev/D,KAAKw/D,sBAAsBx/D,KAAKoqC,4CAIxDjqC,OAAJ2M,eACQokD,EADR9vD,UAAA,eAAI,WAEI,MAAOpB,MAAKqvD,cAGhB,SAAYntD,GACRlC,KAAKqvD,SAAWrvD,KAAKmvD,mBAAmBnvD,KAAKmsD,YAAYiD,YAAYltD,qCAIzE/B,OAAJ2M,eACQokD,EADR9vD,UAAA,eAAI,WAEI,MAAOpB,MAAKsvD,cAGhB,SAAYptD,GACRlC,KAAKsvD,SAAWtvD,KAAKmvD,mBAAmBnvD,KAAKmsD,YAAYiD,YAAYltD,qCA0EzEgvD,EAAJ9vD,UAAAszB,mBAAI,WACI10B,KAAKiwD,QAITiB,EAAJ9vD,UAAAkvD,aAAI,SAAaC,GACT,GAAIvwD,KAAKu/D,eAAiBhP,EAAM,CACxC,GAAkBkP,GAAez/D,KAAKmsD,YAAYY,QAAQ/sD,KAAKwsD,YAC7CkT,EAAgB1/D,KAAKmsD,YAAYoC,SAASvuD,KAAKwsD,YAC/C+S,EAAev/D,KAAKmsD,YAAYa,WAAWyS,EAAcC,EAAenP,EAE9EvwD,MAAK0rD,eAAe5mD,KAAKy6D,GAG7Bv/D,KAAK8uD,cAAchqD,QAIvBosD,EAAJ9vD,UAAAu+D,0BAAI,SAA0Bh9D,GAK9B,GAAcy8D,GAAgBp/D,KAAKm/D,YACrB38C,EAAQxiB,KAAKwiB,OAGnB,QAAQ7f,EAAMU,SACV,IAAK+0B,GAAAA,WACDp4B,KAAKwsD,WAAaxsD,KAAKmsD,YAAYyT,gBAAgB5/D,KAAKm/D,YAAa38C,EAAQ,GAAK,EAClF,MACJ,KAAK6V,GAAAA,YACDr4B,KAAKwsD,WAAaxsD,KAAKmsD,YAAYyT,gBAAgB5/D,KAAKm/D,YAAa38C,GAAS,EAAI,EAClF,MACJ,KAAK2V,GAAAA,SACDn4B,KAAKwsD,WAAaxsD,KAAKmsD,YAAYyT,gBAAgB5/D,KAAKm/D,aAAc,EACtE,MACJ,KAAKjnC,GAAAA,WACDl4B,KAAKwsD,WAAaxsD,KAAKmsD,YAAYyT,gBAAgB5/D,KAAKm/D,YAAa,EACrE,MACJ,KAAKxmC,GAAAA,KACD34B,KAAKwsD,WAAaxsD,KAAKmsD,YAAYyT,gBAAgB5/D,KAAKm/D,YACpD,EAAIn/D,KAAKmsD,YAAY0T,QAAQ7/D,KAAKm/D,aACtC,MACJ,KAAKvmC,GAAAA,IACD54B,KAAKwsD,WAAaxsD,KAAKmsD,YAAYyT,gBAAgB5/D,KAAKm/D,YACnDn/D,KAAKmsD,YAAY2T,kBAAkB9/D,KAAKm/D,aACrCn/D,KAAKmsD,YAAY0T,QAAQ7/D,KAAKm/D,aACtC,MACJ,KAAK5vB,GAAAA,QACDvvC,KAAKwsD,WAAa7pD,EAAM61B,OACpBx4B,KAAKmsD,YAAY4B,iBAAiB/tD,KAAKm/D,aAAc,GACrDn/D,KAAKmsD,YAAY2B,kBAAkB9tD,KAAKm/D,aAAc,EAC1D,MACJ,KAAK1vB,GAAAA,UACDzvC,KAAKwsD,WAAa7pD,EAAM61B,OACpBx4B,KAAKmsD,YAAY4B,iBAAiB/tD,KAAKm/D,YAAa,GACpDn/D,KAAKmsD,YAAY2B,kBAAkB9tD,KAAKm/D,YAAa,EACzD,MACJ,KAAK7mC,GAAAA,MACL,IAAKC,GAAAA,MAQD,YAPKv4B,KAAKyrD,aAAczrD,KAAKyrD,WAAWzrD,KAAKm/D,eACzCn/D,KAAKswD,aAAatwD,KAAKmsD,YAAY0T,QAAQ7/D,KAAKm/D,cAChDn/D,KAAK8uD,cAAchqD,OAEnBnC,EAAMkqB,kBAId,SAEI,OAGJ7sB,KAAKmsD,YAAYyI,YAAYwK,EAAep/D,KAAKwsD,aACjDxsD,KAAK4rD,iBAAiB9mD,KAAK9E,KAAKwsD,YAGpCxsD,KAAK+vD,kBAELptD,EAAMkqB,kBAIVqkC,EAAJ9vD,UAAA6uD,KAAI,WACIjwD,KAAKu/D,aAAev/D,KAAKw/D,sBAAsBx/D,KAAK2e,UACpD3e,KAAK+/D,UAAY//D,KAAKw/D,sBAAsBx/D,KAAKmsD,YAAY0D,SAC7D7vD,KAAKggE,WACDhgE,KAAKmsD,YAAY8T,cAAc,SAASjgE,KAAKmsD,YAAYoC,SAASvuD,KAAKwsD,aAE3ExsD,KAAKggE,WAAahgE,KAAKggE,WAAW,GAAGrT,oBAAsB3sD,KAAKggE,WAAWpT,OAAO,EAE1F,IAAcsT,GAAelgE,KAAKmsD,YAAYa,WAAWhtD,KAAKmsD,YAAYY,QAAQ/sD,KAAKwsD,YAC3ExsD,KAAKmsD,YAAYoC,SAASvuD,KAAKwsD,YAAa,EAChDxsD,MAAKmgE,iBAtOS,EAuOOngE,KAAKmsD,YAAYiU,aAAaF,GAC3ClgE,KAAKmsD,YAAYyS,qBAxOX,EA0Od5+D,KAAKqgE,kBACLrgE,KAAKkgB,kBAAkBjf,gBAI3BiwD,EAAJ9vD,UAAA2uD,gBAAI,WACI/vD,KAAK6rD,eAAekE,mBAIhBmB,EAAZ9vD,UAAAi/D,gBAAI,WACJ,GAAcC,GAActgE,KAAKmsD,YAAY2T,kBAAkB9/D,KAAKwsD,YACtD+T,EAAYvgE,KAAKmsD,YAAYqU,cAEnCxgE,MAAKygE,UAEL,KAAK,GAAIp8B,GAAI,EAAGw5B,EAAO79D,KAAKmgE,gBAAiB97B,EAAIi8B,EAAaj8B,IAAKw5B,IAAQ,CA1P7D,IA2PNA,IACA79D,KAAKygE,MAAMxyD,SACX4vD,EAAO,EAEvB,IAAkBtN,GAAOvwD,KAAKmsD,YAAYa,WAC1BhtD,KAAKmsD,YAAYY,QAAQ/sD,KAAKwsD,YAC9BxsD,KAAKmsD,YAAYoC,SAASvuD,KAAKwsD,YAAanoB,EAAI,GAC9Ck5B,EAAUv9D,KAAK0gE,iBAAiBnQ,GAChC/4C,EAAYxX,KAAKmsD,YAAYI,OAAOgE,EAAMvwD,KAAKosD,YAAYK,QAAQkU,eACnEC,EAAc5gE,KAAKixD,UAAYjxD,KAAKixD,UAAUV,OAAQrpD,EAE5DlH,MAAKygE,MAAMzgE,KAAKygE,MAAM9xD,OAAS,GAC1BV,KAAK,GAAIovD,IAAeh5B,EAAI,EAAGk8B,EAAUl8B,GAAI7sB,EAAW+lD,EAASqD,MAKtE1P,EAAZ9vD,UAAAs/D,iBAAI,SAAyBnQ,GACrB,QAASA,KACHvwD,KAAKyrD,YAAczrD,KAAKyrD,WAAW8E,OACnCvwD,KAAKkuD,SAAWluD,KAAKmsD,YAAYyI,YAAYrE,EAAMvwD,KAAKkuD,UAAY,MACpEluD,KAAKwrD,SAAWxrD,KAAKmsD,YAAYyI,YAAYrE,EAAMvwD,KAAKwrD,UAAY,IAOtE0F,EAAZ9vD,UAAAo+D,sBAAI,SAA8BjP,GAC1B,MAAOA,IAAQvwD,KAAKs/D,oBAAoB/O,EAAMvwD,KAAKwsD,YAC/CxsD,KAAKmsD,YAAY0T,QAAQtP,GAAQ,MAIjCW,EAAZ9vD,UAAAk+D,oBAAI,SAA4BuB,EAAcC,GACtC,SAAUD,IAAMC,GAAM9gE,KAAKmsD,YAAYoC,SAASsS,KAAQ7gE,KAAKmsD,YAAYoC,SAASuS,IAC9E9gE,KAAKmsD,YAAYY,QAAQ8T,KAAQ7gE,KAAKmsD,YAAYY,QAAQ+T,KAO1D5P,EAAZ9vD,UAAA+tD,mBAAI,SAA2BrL,GACvB,MAAQ9jD,MAAKmsD,YAAY4E,eAAejN,IAAQ9jD,KAAKmsD,YAAY6E,QAAQlN,GAAQA,EAAM,MAInFoN,EAAZ9vD,UAAAohB,MAAI,WACI,MAAOxiB,MAAKw7B,KAA0B,QAAnBx7B,KAAKw7B,IAAIt5B,sBArSpCmE,KAACgL,EAAAA,UAAD9K,OACIC,SAAU,gBACV8K,SAAJ,yjBACI7K,SAAU,cACVyC,cAAeC,EAAAA,kBAAkBC,KACjCL,gBAAiBC,EAAAA,wBAAwBC,+CAzC7C5C,KAAI2D,EAAAA,oBA2IJ3D,SAAAa,GAAAC,aAAAd,KAASkB,EAAAA,WAATlB,KAAqBe,EAAAA,OAArBb,MAA4BooD,EAAAA,qBAhI5BtoD,KAASqoD,EAAAA,YAATvnD,aAAAd,KAiISkB,EAAAA,aAlITlB,KAASiB,EAAAA,eAATH,aAAAd,KAmISkB,EAAAA,gCA9FTilD,aAAAnmD,KAAKqB,EAAAA,QAiBLiX,WAAAtY,KAAKqB,EAAAA,QAWLwmD,UAAA7nD,KAAKqB,EAAAA,QAUL8jD,UAAAnlD,KAAKqB,EAAAA,QAUL+jD,aAAAplD,KAAKqB,EAAAA,QAGLupD,YAAA5qD,KAAKqB,EAAAA,QAGLgkD,iBAAArlD,KAAKmB,EAAAA,SAGLsnD,gBAAAzoD,KAAKmB,EAAAA,SAGLokD,mBAAAvlD,KAAKmB,EAAAA,SAGLqkD,iBAAAxlD,KAAKiE,EAAAA,UAAL/D,MAAeulD,OA6NfoF,KlBtSAC,GAAA,WAqFI,QAAJA,GACgBjxC,EACWisC,EACC3wB,GAEpB,GAJQx7B,KAAhBkgB,kBAAgBA,EACWlgB,KAA3BmsD,YAA2BA,EACCnsD,KAA5Bw7B,IAA4BA,EA3BLx7B,KAAvB0rD,eAAyD,GAAI5zC,GAAAA,aAGtC9X,KAAvB6uD,aAAuD,GAAI/2C,GAAAA,aAGpC9X,KAAvB4rD,iBAA2D,GAAI9zC,GAAAA,cAuBlD9X,KAAKmsD,YACN,KAAM6C,GAA2B,cAGrChvD,MAAKm/D,YAAcn/D,KAAKmsD,YAAY0D,QAmJ5C,MAxOI1vD,QAAJ2M,eACQqkD,EADR/vD,UAAA,kBAAI,WAEI,MAAOpB,MAAKm/D,iBAGhB,SAAej9D,GACnB,GAAck9D,GAAgBp/D,KAAKm/D,YACrBE,EACFr/D,KAAKmvD,mBAAmBnvD,KAAKmsD,YAAYiD,YAAYltD,KAAWlC,KAAKmsD,YAAY0D,OACrF7vD,MAAKm/D,YAAcn/D,KAAKmsD,YAAYqD,UAAU6P,EAAWr/D,KAAKkuD,QAASluD,KAAKwrD,SAExEjqC,KAAKsuB,MAAM7vC,KAAKmsD,YAAYY,QAAQqS,GA7BpB,MA8BhB79C,KAAKsuB,MAAM7vC,KAAKmsD,YAAYY,QAAQ/sD,KAAKm/D,aA9BzB,KA+BhBn/D,KAAKiwD,wCAKb9vD,OAAJ2M,eACQqkD,EADR/vD,UAAA,gBAAI,WAEI,MAAOpB,MAAKoqC,eAGhB,SAAaloC,GACTlC,KAAKoqC,UAAYpqC,KAAKmvD,mBAAmBnvD,KAAKmsD,YAAYiD,YAAYltD,IACtElC,KAAKy/D,aAAez/D,KAAKoqC,WAAapqC,KAAKmsD,YAAYY,QAAQ/sD,KAAKoqC,4CAIxEjqC,OAAJ2M,eACQqkD,EADR/vD,UAAA,eAAI,WAEI,MAAOpB,MAAKqvD,cAGhB,SAAYntD,GACRlC,KAAKqvD,SAAWrvD,KAAKmvD,mBAAmBnvD,KAAKmsD,YAAYiD,YAAYltD,qCAIzE/B,OAAJ2M,eACQqkD,EADR/vD,UAAA,eAAI,WAEI,MAAOpB,MAAKsvD,cAGhB,SAAYptD,GACRlC,KAAKsvD,SAAWtvD,KAAKmvD,mBAAmBnvD,KAAKmsD,YAAYiD,YAAYltD,qCA2CzEivD,EAAJ/vD,UAAAszB,mBAAI,WACI10B,KAAKiwD,QAITkB,EAAJ/vD,UAAA6uD,KAAI,WAAA,GAAJlwD,GAAAC,IACQA,MAAK+gE,UAAY/gE,KAAKmsD,YAAYY,QAAQ/sD,KAAKmsD,YAAY0D,QACnE,IAAc/C,GAAa9sD,KAAKmsD,YAAYY,QAAQ/sD,KAAKm/D,aAC3C6B,EAAelU,EAlHD,EAmHpB9sD,MAAKihE,QACL,KAAK,GAAI58B,GAAI,EAAG68B,KAAoB78B,EApHhB,GAoHkCA,IAClD68B,EAAIjzD,KAAK6+C,EAAakU,EAAe38B,GAnHtB,IAoHX68B,EAAIvyD,SACJ3O,KAAKihE,MAAMhzD,KAAKizD,EAAIthD,IAAI,SAACytC,GAAS,MAAAttD,GAAKohE,kBAAkB9T,MACzD6T,KAGRlhE,MAAKkgB,kBAAkBjf,gBAI3BkwD,EAAJ/vD,UAAAggE,eAAI,SAAe/T,GACXrtD,KAAK6uD,aAAa/pD,KAAK9E,KAAKmsD,YAAYa,WAAWK,EAAM,EAAG,GACpE,IAAcF,GAAQntD,KAAKmsD,YAAYoC,SAASvuD,KAAKwsD,YACvC8T,EACFtgE,KAAKmsD,YAAY2T,kBAAkB9/D,KAAKmsD,YAAYa,WAAWK,EAAMF,EAAO,GAChFntD,MAAK0rD,eAAe5mD,KAAK9E,KAAKmsD,YAAYa,WAAWK,EAAMF,EACvD5rC,KAAKC,IAAIxhB,KAAKmsD,YAAY0T,QAAQ7/D,KAAKwsD,YAAa8T,MAI5DnP,EAAJ/vD,UAAAu+D,0BAAI,SAA0Bh9D,GAK9B,GAAcy8D,GAAgBp/D,KAAKm/D,YACrB38C,EAAQxiB,KAAKwiB,OAGnB,QAAQ7f,EAAMU,SACV,IAAK+0B,GAAAA,WACDp4B,KAAKwsD,WAAaxsD,KAAKmsD,YAAY4B,iBAAiB/tD,KAAKm/D,YAAa38C,EAAQ,GAAK,EACnF,MACJ,KAAK6V,GAAAA,YACDr4B,KAAKwsD,WAAaxsD,KAAKmsD,YAAY4B,iBAAiB/tD,KAAKm/D,YAAa38C,GAAS,EAAI,EACnF,MACJ,KAAK2V,GAAAA,SACDn4B,KAAKwsD,WAAaxsD,KAAKmsD,YAAY4B,iBAAiB/tD,KAAKm/D,aAxJ9C,EAyJX,MACJ,KAAKjnC,GAAAA,WACDl4B,KAAKwsD,WAAaxsD,KAAKmsD,YAAY4B,iBAAiB/tD,KAAKm/D,YA3J9C,EA4JX,MACJ,KAAKxmC,GAAAA,KACD34B,KAAKwsD,WAAaxsD,KAAKmsD,YAAY4B,iBAAiB/tD,KAAKm/D,aACpDn/D,KAAKmsD,YAAYY,QAAQ/sD,KAAKm/D,aAjKvB,GAkKZ,MACJ,KAAKvmC,GAAAA,IACD54B,KAAKwsD,WAAaxsD,KAAKmsD,YAAY4B,iBAAiB/tD,KAAKm/D,YApK7C,GAqKOn/D,KAAKmsD,YAAYY,QAAQ/sD,KAAKm/D,aArKrC,GAqKmE,EAC/E,MACJ,KAAK5vB,GAAAA,QACDvvC,KAAKwsD,WACDxsD,KAAKmsD,YAAY4B,iBACb/tD,KAAKm/D,YAAax8D,EAAM61B,QAAS,KA1K7B,GA2KZ,MACJ,KAAKiX,GAAAA,UACDzvC,KAAKwsD,WACDxsD,KAAKmsD,YAAY4B,iBACb/tD,KAAKm/D,YAAax8D,EAAM61B,OAAS6oC,IA/K7B,GAgLZ,MACJ,KAAK/oC,GAAAA,MACL,IAAKC,GAAAA,MACDv4B,KAAKohE,eAAephE,KAAKmsD,YAAYY,QAAQ/sD,KAAKm/D,aAClD,MACJ,SAEI,OAGJn/D,KAAKmsD,YAAYyI,YAAYwK,EAAep/D,KAAKwsD,aACjDxsD,KAAK4rD,iBAAiB9mD,KAAK9E,KAAKwsD,YAGpCxsD,KAAK+vD,kBAELptD,EAAMkqB,kBAGVskC,EAAJ/vD,UAAAkgE,cAAI,WACI,MAAOthE,MAAKmsD,YAAYY,QAAQ/sD,KAAKwsD,YApMjB,IAwMxB2E,EAAJ/vD,UAAA2uD,gBAAI,WACI/vD,KAAK6rD,eAAekE,mBAIhBoB,EAAZ/vD,UAAA+/D,kBAAI,SAA0B9T,GAC9B,GAAckU,GAAWvhE,KAAKmsD,YAAYU,YAAY7sD,KAAKmsD,YAAYa,WAAWK,EAAM,EAAG,GAEnF,OAAO,IAAIgQ,IAAehQ,EAAMkU,EAAUA,EAAUvhE,KAAKwhE,iBAAiBnU,KAItE8D,EAAZ/vD,UAAAogE,iBAAI,SAAyBnU,GAErB,OAAanmD,KAATmmD,GAA+B,OAATA,GACrBrtD,KAAKwrD,SAAW6B,EAAOrtD,KAAKmsD,YAAYY,QAAQ/sD,KAAKwrD,UACrDxrD,KAAKkuD,SAAWb,EAAOrtD,KAAKmsD,YAAYY,QAAQ/sD,KAAKkuD,SACtD,OAAO,CAIX,KAAKluD,KAAKyrD,WACN,OAAO,CAMX,KAAK,GAHCgW,GAAczhE,KAAKmsD,YAAYa,WAAWK,EAAM,EAAG,GAGhDkD,EAAOkR,EAAazhE,KAAKmsD,YAAYY,QAAQwD,KAAUlD,EAC3DkD,EAAOvwD,KAAKmsD,YAAYyT,gBAAgBrP,EAAM,GAC/C,GAAIvwD,KAAKyrD,WAAW8E,GAChB,OAAO,CAIf,QAAO,GAOHY,EAAZ/vD,UAAA+tD,mBAAI,SAA2BrL,GACvB,MAAQ9jD,MAAKmsD,YAAY4E,eAAejN,IAAQ9jD,KAAKmsD,YAAY6E,QAAQlN,GAAQA,EAAM,MAInFqN,EAAZ/vD,UAAAohB,MAAI,WACI,MAAOxiB,MAAKw7B,KAA0B,QAAnBx7B,KAAKw7B,IAAIt5B,sBA/OpCmE,KAACgL,EAAAA,UAAD9K,OACIC,SAAU,qBACV8K,SAAJ,ibACI7K,SAAU,kBACVyC,cAAeC,EAAAA,kBAAkBC,KACjCL,gBAAiBC,EAAAA,wBAAwBC,+CA1C7C5C,KAAI2D,EAAAA,oBAUJ3D,KAASqoD,EAAAA,YAATvnD,aAAAd,KAkHSkB,EAAAA,aAnHTlB,KAASiB,EAAAA,eAATH,aAAAd,KAoHSkB,EAAAA,gCA/ETilD,aAAAnmD,KAAKqB,EAAAA,QAkBLiX,WAAAtY,KAAKqB,EAAAA,QAWLwmD,UAAA7nD,KAAKqB,EAAAA,QAUL8jD,UAAAnlD,KAAKqB,EAAAA,QAUL+jD,aAAAplD,KAAKqB,EAAAA,QAGLgkD,iBAAArlD,KAAKmB,EAAAA,SAGLqnD,eAAAxoD,KAAKmB,EAAAA,SAGLokD,mBAAAvlD,KAAKmB,EAAAA,SAGLqkD,iBAAAxlD,KAAKiE,EAAAA,UAAL/D,MAAeulD,OA2KfqF,KFtPApF,GAAA,WA0FI,QAAJA,GACgB7rC,EACqCksC,EAC1BD,EACC3wB,GAEpB,GALQx7B,KAAhBkgB,kBAAgBA,EACqClgB,KAArDosD,YAAqDA,EAC1BpsD,KAA3BmsD,YAA2BA,EACCnsD,KAA5Bw7B,IAA4BA,EAlCLx7B,KAAvB0rD,eAAyD,GAAI5zC,GAAAA,aAGtC9X,KAAvB2rD,cAAwD,GAAI7zC,GAAAA,aAGrC9X,KAAvB4rD,iBAA2D,GAAI9zC,GAAAA,cA8BlD9X,KAAKmsD,YACN,KAAM6C,GAA2B,cAGrC,KAAKhvD,KAAKosD,YACN,KAAM4C,GAA2B,kBAGrChvD,MAAKm/D,YAAcn/D,KAAKmsD,YAAY0D,QAiM5C,MAhSI1vD,QAAJ2M,eACQi/C,EADR3qD,UAAA,kBAAI,WAEI,MAAOpB,MAAKm/D,iBAGhB,SAAej9D,GACnB,GAAck9D,GAAgBp/D,KAAKm/D,YACrBE,EACFr/D,KAAKmvD,mBAAmBnvD,KAAKmsD,YAAYiD,YAAYltD,KAAWlC,KAAKmsD,YAAY0D,OACrF7vD,MAAKm/D,YAAcn/D,KAAKmsD,YAAYqD,UAAU6P,EAAWr/D,KAAKkuD,QAASluD,KAAKwrD,SAExExrD,KAAKmsD,YAAYY,QAAQqS,KAAmBp/D,KAAKmsD,YAAYY,QAAQ/sD,KAAKm/D,cAC1En/D,KAAKiwD,wCAKb9vD,OAAJ2M,eACQi/C,EADR3qD,UAAA,gBAAI,WAEI,MAAOpB,MAAKoqC,eAGhB,SAAaloC,GACTlC,KAAKoqC,UAAYpqC,KAAKmvD,mBAAmBnvD,KAAKmsD,YAAYiD,YAAYltD,IACtElC,KAAK0/D,cAAgB1/D,KAAK0hE,sBAAsB1hE,KAAKoqC,4CAIzDjqC,OAAJ2M,eACQi/C,EADR3qD,UAAA,eAAI,WAEI,MAAOpB,MAAKqvD,cAGhB,SAAYntD,GACRlC,KAAKqvD,SAAWrvD,KAAKmvD,mBAAmBnvD,KAAKmsD,YAAYiD,YAAYltD,qCAIzE/B,OAAJ2M,eACQi/C,EADR3qD,UAAA,eAAI,WAEI,MAAOpB,MAAKsvD,cAGhB,SAAYptD,GACRlC,KAAKsvD,SAAWtvD,KAAKmvD,mBAAmBnvD,KAAKmsD,YAAYiD,YAAYltD,qCAsDzE6pD,EAAJ3qD,UAAAszB,mBAAI,WACI10B,KAAKiwD,QAITlE,EAAJ3qD,UAAAugE,gBAAI,SAAgBxU,GACpB,GAAcyU,GACF5hE,KAAKmsD,YAAYa,WAAWhtD,KAAKmsD,YAAYY,QAAQ/sD,KAAKwsD,YAAaW,EAAO,EAElFntD,MAAK2rD,cAAc7mD,KAAK88D,EAEhC,IAActB,GAActgE,KAAKmsD,YAAY2T,kBAAkB8B,EAEvD5hE,MAAK0rD,eAAe5mD,KAAK9E,KAAKmsD,YAAYa,WACtChtD,KAAKmsD,YAAYY,QAAQ/sD,KAAKwsD,YAAaW,EAC3C5rC,KAAKC,IAAIxhB,KAAKmsD,YAAY0T,QAAQ7/D,KAAKwsD,YAAa8T,MAI5DvU,EAAJ3qD,UAAAu+D,0BAAI,SAA0Bh9D,GAK9B,GAAcy8D,GAAgBp/D,KAAKm/D,YACrB38C,EAAQxiB,KAAKwiB,OAOnB,QAAQ7f,EAAMU,SACV,IAAK+0B,GAAAA,WACDp4B,KAAKwsD,WAAaxsD,KAAKmsD,YAAY2B,kBAAkB9tD,KAAKm/D,YAAa38C,EAAQ,GAAK,EACpF,MACJ,KAAK6V,GAAAA,YACDr4B,KAAKwsD,WAAaxsD,KAAKmsD,YAAY2B,kBAAkB9tD,KAAKm/D,YAAa38C,GAAS,EAAI,EACpF,MACJ,KAAK2V,GAAAA,SACDn4B,KAAKwsD,WAAaxsD,KAAKmsD,YAAY2B,kBAAkB9tD,KAAKm/D,aAb3C,EAcf,MACJ,KAAKjnC,GAAAA,WACDl4B,KAAKwsD,WAAaxsD,KAAKmsD,YAAY2B,kBAAkB9tD,KAAKm/D,YAhB3C,EAiBf,MACJ,KAAKxmC,GAAAA,KACD34B,KAAKwsD,WAAaxsD,KAAKmsD,YAAY2B,kBAAkB9tD,KAAKm/D,aACrDn/D,KAAKmsD,YAAYoC,SAASvuD,KAAKm/D,aACpC,MACJ,KAAKvmC,GAAAA,IACD54B,KAAKwsD,WAAaxsD,KAAKmsD,YAAY2B,kBAAkB9tD,KAAKm/D,YArB1C,GAsBMn/D,KAAKmsD,YAAYoC,SAASvuD,KAAKm/D,aACrD,MACJ,KAAK5vB,GAAAA,QACDvvC,KAAKwsD,WACDxsD,KAAKmsD,YAAY4B,iBAAiB/tD,KAAKm/D,YAAax8D,EAAM61B,QA3BnD,IA2B2E,EACtF,MACJ,KAAKiX,GAAAA,UACDzvC,KAAKwsD,WACDxsD,KAAKmsD,YAAY4B,iBAAiB/tD,KAAKm/D,YAAax8D,EAAM61B,OA/BnD,GA+ByE,EACpF,MACJ,KAAKF,GAAAA,MACL,IAAKC,GAAAA,MACDv4B,KAAK2hE,gBAAgB3hE,KAAKmsD,YAAYoC,SAASvuD,KAAKm/D,aACpD,MACJ,SAEI,OAGJn/D,KAAKmsD,YAAYyI,YAAYwK,EAAep/D,KAAKwsD,aACjDxsD,KAAK4rD,iBAAiB9mD,KAAK9E,KAAKwsD,YAGpCxsD,KAAK+vD,kBAELptD,EAAMkqB,kBAIVk/B,EAAJ3qD,UAAA6uD,KAAI,WAAA,GAAJlwD,GAAAC,IACQA,MAAK0/D,cAAgB1/D,KAAK0hE,sBAAsB1hE,KAAK2e,UACrD3e,KAAK6hE,WAAa7hE,KAAK0hE,sBAAsB1hE,KAAKmsD,YAAY0D,SAC9D7vD,KAAK8hE,UAAY9hE,KAAKmsD,YAAYU,YAAY7sD,KAAKwsD,WAE3D,IAAcuV,GAAa/hE,KAAKmsD,YAAY8T,cAAc,QAIlDjgE,MAAKgiE,SAAW,EAAG,EAAG,EAAG,IAAK,EAAG,EAAG,EAAG,IAAK,EAAG,EAAG,GAAI,KAAKpiD,IAAI,SAACshD,GAAQ,MAAAA,GAAIthD,IACxE,SAACutC,GAAU,MAAAptD,GAAKkiE,mBAAmB9U,EAAO4U,EAAW5U,QACzDntD,KAAKkgB,kBAAkBjf,gBAI3B8qD,EAAJ3qD,UAAA2uD,gBAAI,WACI/vD,KAAK6rD,eAAekE,mBAOhBhE,EAAZ3qD,UAAAsgE,sBAAI,SAA8BnR,GAC1B,MAAOA,IAAQvwD,KAAKmsD,YAAYY,QAAQwD,KAAUvwD,KAAKmsD,YAAYY,QAAQ/sD,KAAKwsD,YAC5ExsD,KAAKmsD,YAAYoC,SAASgC,GAAQ,MAIlCxE,EAAZ3qD,UAAA6gE,mBAAI,SAA2B9U,EAAe+U,GAC9C,GAAc1qD,GAAYxX,KAAKmsD,YAAYI,OAC/BvsD,KAAKmsD,YAAYa,WAAWhtD,KAAKmsD,YAAYY,QAAQ/sD,KAAKwsD,YAAaW,EAAO,GAC9EntD,KAAKosD,YAAYK,QAAQ0V,oBAEvBC,EAAeF,EAAU,GAAGvV,oBAAsBuV,EAAUtV,OAAO,EAEzE,OAAO,IAAIyQ,IACPlQ,EAAOiV,EAAc5qD,EAAWxX,KAAKqiE,kBAAkBlV,KAIvDpB,EAAZ3qD,UAAAihE,kBAAI,SAA0BlV,GAE9B,GAAcL,GAAa9sD,KAAKmsD,YAAYY,QAAQ/sD,KAAKwsD,WAEjD,QAActlD,KAAVimD,GAAiC,OAAVA,GACvBntD,KAAKsiE,2BAA2BxV,EAAYK,IAC5CntD,KAAKuiE,4BAA4BzV,EAAYK,GAC7C,OAAO,CAGX,KAAKntD,KAAKyrD,WACN,OAAO,CAMX,KAAK,GAHCyU,GAAelgE,KAAKmsD,YAAYa,WAAWF,EAAYK,EAAO,GAG3DoD,EAAO2P,EAAclgE,KAAKmsD,YAAYoC,SAASgC,KAAUpD,EAC7DoD,EAAOvwD,KAAKmsD,YAAYyT,gBAAgBrP,EAAM,GAC/C,GAAIvwD,KAAKyrD,WAAW8E,GAChB,OAAO,CAIf,QAAO,GAOHxE,EAAZ3qD,UAAAkhE,2BAAI,SAAmCjV,EAAcF,GAC7C,GAAIntD,KAAKwrD,QAAS,CAC1B,GAAkBgX,GAAUxiE,KAAKmsD,YAAYY,QAAQ/sD,KAAKwrD,SACxCiX,EAAWziE,KAAKmsD,YAAYoC,SAASvuD,KAAKwrD,QAEhD,OAAO6B,GAAOmV,GAAYnV,IAASmV,GAAWrV,EAAQsV,EAG1D,OAAO,GAOH1W,EAAZ3qD,UAAAmhE,4BAAI,SAAoClV,EAAcF,GAC9C,GAAIntD,KAAKkuD,QAAS,CAC1B,GAAkBwU,GAAU1iE,KAAKmsD,YAAYY,QAAQ/sD,KAAKkuD,SACxCyU,EAAW3iE,KAAKmsD,YAAYoC,SAASvuD,KAAKkuD,QAEhD,OAAOb,GAAOqV,GAAYrV,IAASqV,GAAWvV,EAAQwV,EAG1D,OAAO,GAOH5W,EAAZ3qD,UAAA+tD,mBAAI,SAA2BrL,GACvB,MAAQ9jD,MAAKmsD,YAAY4E,eAAejN,IAAQ9jD,KAAKmsD,YAAY6E,QAAQlN,GAAQA,EAAM,MAInFiI,EAAZ3qD,UAAAohB,MAAI,WACI,MAAOxiB,MAAKw7B,KAA0B,QAAnBx7B,KAAKw7B,IAAIt5B,sBAvSpCmE,KAACgL,EAAAA,UAAD9K,OACIC,SAAU,eACV8K,SAAJ,sfACI7K,SAAU,aACVyC,cAAeC,EAAAA,kBAAkBC,KACjCL,gBAAiBC,EAAAA,wBAAwBC,+CAtC7C5C,KAAI2D,EAAAA,oBA6HJ3D,SAAAa,GAAAC,aAAAd,KAASkB,EAAAA,WAATlB,KAAqBe,EAAAA,OAArBb,MAA4BooD,EAAAA,qBAlH5BtoD,KAASqoD,EAAAA,YAATvnD,aAAAd,KAmHSkB,EAAAA,aApHTlB,KAASiB,EAAAA,eAATH,aAAAd,KAqHSkB,EAAAA,gCArFTilD,aAAAnmD,KAAKqB,EAAAA,QAiBLiX,WAAAtY,KAAKqB,EAAAA,QAWLwmD,UAAA7nD,KAAKqB,EAAAA;eAUL8jD,UAAAnlD,KAAKqB,EAAAA,QAUL+jD,aAAAplD,KAAKqB,EAAAA,QAGLgkD,iBAAArlD,KAAKmB,EAAAA,SAGLmkD,gBAAAtlD,KAAKmB,EAAAA,SAGLokD,mBAAAvlD,KAAKmB,EAAAA,SAGLqkD,iBAAAxlD,KAAKiE,EAAAA,UAAL/D,MAAeulD,OAoOfC,KCxSAC,GAAA,WAQI,QAAJA,GAAwBC,EACqCC,EACzBC,EACyBC,EAC7ClsC,GAJQlgB,KAAxBisD,KAAwBA,EACqCjsD,KAA7DksD,SAA6DA,EACzBlsD,KAApCmsD,YAAoCA,EACyBnsD,KAA7DosD,YAA6DA,EAGrDpsD,KAAKksD,SAAS/sC,aAAa3a,UAAU,WAAM,MAAA0b,GAAkBjf,iBAwGrE,MApGId,QAAJ2M,eAAQk/C,EAAR5qD,UAAA,wBAAI,WACI,GAAkC,UAA9BpB,KAAKksD,SAASG,YAAyB,CACnD,GAAkBC,GAAQtsD,KAAKmsD,YACdI,OAAOvsD,KAAKksD,SAASM,WAAYxsD,KAAKosD,YAAYK,QAAQC,eAE/D,OAAOJ,GAAM,GAAGK,oBAAsBL,EAAMM,OAAO,GAGvD,GAAkC,SAA9B5sD,KAAKksD,SAASG,YACd,MAAOrsD,MAAKmsD,YAAYU,YAAY7sD,KAAKksD,SAASM,WAG9D,IAAcM,GAAa9sD,KAAKmsD,YAAYY,QAAQ/sD,KAAKksD,SAASM,WAQ1D,OAPwBxsD,MAAKmsD,YAAYU,YAErC7sD,KAAKmsD,YAAYa,WAAWF,EAAaA,EAAa,GAAI,EAAG,IAKzE,MAJ+B9sD,KAAKmsD,YAAYU,YAEpC7sD,KAAKmsD,YAAYa,WAAWF,ECzCZ,GDyCwC,EAAIA,EAAa,GAAI,EAAG,qCAKxF3sD,OAAJ2M,eAAQk/C,EAAR5qD,UAAA,yBAAI,WACI,MAAqC,UAA9BpB,KAAKksD,SAASG,YACjBrsD,KAAKisD,KAAKgB,2BAA6BjtD,KAAKisD,KAAKiB,wDAIzD/sD,OAAJ2M,eAAQk/C,EAAR5qD,UAAA,uBAAI,WACI,OACI+rD,MAAOntD,KAAKisD,KAAKmB,eACjBC,KAAMrtD,KAAKisD,KAAKqB,cAChBC,aAAcvtD,KAAKisD,KAAKuB,oBAC1BxtD,KAAKksD,SAASG,8CAIpBlsD,OAAJ2M,eAAQk/C,EAAR5qD,UAAA,uBAAI,WACI,OACI+rD,MAAOntD,KAAKisD,KAAKwB,eACjBJ,KAAMrtD,KAAKisD,KAAKyB,cAChBH,aAAcvtD,KAAKisD,KAAK0B,oBAC1B3tD,KAAKksD,SAASG,8CAIpBL,EAAJ5qD,UAAAwsD,qBAAI,WACI5tD,KAAKksD,SAASG,YAA4C,UAA9BrsD,KAAKksD,SAASG,YAA0B,aAAe,SAIvFL,EAAJ5qD,UAAAysD,gBAAI,WACI7tD,KAAKksD,SAASM,WAA2C,UAA9BxsD,KAAKksD,SAASG,YACrCrsD,KAAKmsD,YAAY2B,kBAAkB9tD,KAAKksD,SAASM,YAAa,GAC9DxsD,KAAKmsD,YAAY4B,iBACb/tD,KAAKksD,SAASM,WAA0C,SAA9BxsD,KAAKksD,SAASG,aAA0B,GC/EtD,KDoFxBL,EAAJ5qD,UAAA4sD,YAAI,WACIhuD,KAAKksD,SAASM,WAA2C,UAA9BxsD,KAAKksD,SAASG,YACrCrsD,KAAKmsD,YAAY2B,kBAAkB9tD,KAAKksD,SAASM,WAAY,GAC7DxsD,KAAKmsD,YAAY4B,iBACb/tD,KAAKksD,SAASM,WACgB,SAA9BxsD,KAAKksD,SAASG,YAAyB,ECzF3B,KD8FxBL,EAAJ5qD,UAAA6sD,gBAAI,WACI,OAAKjuD,KAAKksD,SAASgC,WAIXluD,KAAKksD,SAASgC,UACjBluD,KAAKmuD,WAAWnuD,KAAKksD,SAASM,WAAYxsD,KAAKksD,SAASgC,WAIjElC,EAAJ5qD,UAAAgtD,YAAI,WACI,OAAQpuD,KAAKksD,SAASV,UACjBxrD,KAAKmuD,WAAWnuD,KAAKksD,SAASM,WAAYxsD,KAAKksD,SAASV,UAIzDQ,EAAZ5qD,UAAA+sD,WAAI,SAAmBE,EAAUC,GACzB,MAAkC,UAA9BtuD,KAAKksD,SAASG,YACPrsD,KAAKmsD,YAAYY,QAAQsB,KAAWruD,KAAKmsD,YAAYY,QAAQuB,IAChEtuD,KAAKmsD,YAAYoC,SAASF,KAAWruD,KAAKmsD,YAAYoC,SAASD,GAErC,SAA9BtuD,KAAKksD,SAASG,YACPrsD,KAAKmsD,YAAYY,QAAQsB,KAAWruD,KAAKmsD,YAAYY,QAAQuB,GAIjE/sC,KAAKsuB,MAAM7vC,KAAKmsD,YAAYY,QAAQsB,GCxHvB,MDyHhB9sC,KAAKsuB,MAAM7vC,KAAKmsD,YAAYY,QAAQuB,GCzHpB,oBDK5BjoD,KAACgL,EAAAA,UAAD9K,OACIC,SAAU,qBACV8K,SAAJ,s3BACI7K,SAAU,mBACVyC,cAAeC,EAAAA,kBAAkBC,KACjCL,gBAAiBC,EAAAA,wBAAwBC,+CAlB7C5C,KAASmoD,KAsBTnoD,KAAuEooD,GAAvEtnD,aAAAd,KAAiBe,EAAAA,OAAjBb,MAAwBmT,EAAAA,WAAW,WAAM,MAAA+0C,WA5BzCpoD,KAASqoD,EAAAA,YAATvnD,aAAAd,KA6BiBkB,EAAAA,aACjBlB,SAAAa,GAAAC,aAAAd,KAAiBkB,EAAAA,WAAjBlB,KAA6Be,EAAAA,OAA7Bb,MAAoCooD,EAAAA,qBA5CpCtoD,KAAI2D,EAAAA,qBAuJJgiD,KAMAyC,GAAA,WA0II,QAAJA,GACQxC,EACoBE,EACyBC,EACrClsC,GAJZ,GAAJngB,GAAAC,IAMQ,IAJoBA,KAA5BmsD,YAA4BA,EACyBnsD,KAArDosD,YAAqDA,EACrCpsD,KAAhBkgB,kBAAgBA,EA3DHlgB,KAAb4uD,UAAyC,QASlB5uD,KAAvB0rD,eAAyD,GAAI5zC,GAAAA,aAMtC9X,KAAvB6uD,aAAuD,GAAI/2C,GAAAA,aAMpC9X,KAAvB2rD,cAAwD,GAAI7zC,GAAAA,aAGrC9X,KAAvB8uD,cAA2D,GAAIh3C,GAAAA,aAc3D9X,KAAJmf,aAAmB,GAAIpU,GAAAA,QASX/K,KAAZ+uD,qBAAkC,GAcrB/uD,KAAKmsD,YACN,KAAM6C,GAA2B,cAGrC,KAAKhvD,KAAKosD,YACN,KAAM4C,GAA2B,kBAGrChvD,MAAKivD,YAAchD,EAAKn7C,QAAQtM,UAAU,WACtC0b,EAAkBjf,eAClBlB,EAAKof,aAAanc,SA4F9B,MAxOI7C,QAAJ2M,eACQ2hD,EADRrtD,UAAA,eAAI,WAEI,MAAOpB,MAAKkvD,cAGhB,SAAYhtD,GACRlC,KAAKkvD,SAAWlvD,KAAKmvD,mBAAmBnvD,KAAKmsD,YAAYiD,YAAYltD,qCAIzE/B,OAAJ2M,eACQ2hD,EADRrtD,UAAA,gBAAI,WAEI,MAAOpB,MAAKoqC,eAGhB,SAAaloC,GACTlC,KAAKoqC,UAAYpqC,KAAKmvD,mBAAmBnvD,KAAKmsD,YAAYiD,YAAYltD,qCAI1E/B,OAAJ2M,eACQ2hD,EADRrtD,UAAA,eAAI,WAEI,MAAOpB,MAAKqvD,cAGhB,SAAYntD,GACRlC,KAAKqvD,SAAWrvD,KAAKmvD,mBAAmBnvD,KAAKmsD,YAAYiD,YAAYltD,qCAIzE/B,OAAJ2M,eACQ2hD,EADRrtD,UAAA,eAAI,WAEI,MAAOpB,MAAKsvD,cAGhB,SAAYptD,GACRlC,KAAKsvD,SAAWtvD,KAAKmvD,mBAAmBnvD,KAAKmsD,YAAYiD,YAAYltD,qCAOzE/B,OAAJ2M,eAAQ2hD,EAARrtD,UAAA,kBAAI,WACI,MAAOpB,MAAKuvD,uBAGhB,SAAertD,GACXlC,KAAKuvD,kBAAoBvvD,KAAKmsD,YAAYqD,UAAUttD,EAAOlC,KAAKkuD,QAASluD,KAAKwrD,SAC9ExrD,KAAKmf,aAAanc,wCAItB7C,OAAJ2M,eAAQ2hD,EAARrtD,UAAA,mBAAI,WACI,MAAOpB,MAAKyvD,kBAGhB,SAAgBvtD,GACZlC,KAAKyvD,aAAevtD,EACpBlC,KAAK+uD,qBAAsB,mCAqF/BN,EAAJrtD,UAAAszB,mBAAI,WACI10B,KAAK0vD,qBAAuB,GAAI1rD,GAAAA,gBAAgBhE,KAAK2vD,iBAAmB3D,IACxEhsD,KAAKwsD,WAAaxsD,KAAK4vD,SAAW5vD,KAAKmsD,YAAY0D,QAGnD7vD,KAAKyvD,aAAezvD,KAAK4uD,WAG7BH,EAAJrtD,UAAA0uD,mBAAI,WACQ9vD,KAAK+uD,sBACL/uD,KAAK+uD,qBAAsB,EAC3B/uD,KAAK+vD,oBAIbtB,EAAJrtD,UAAAkB,YAAI,WACItC,KAAKivD,YAAYn6C,cACjB9U,KAAKmf,aAAalc,YAGtBwrD,EAAJrtD,UAAAyP,YAAI,SAAYC,GAChB,GAAc+G,GAAS/G,EAAQo9C,SAAWp9C,EAAQ06C,SAAW16C,EAAQ26C,UAE7D,IAAI5zC,IAAWA,EAAO+gC,YAAa,CAC3C,GAAkBhI,GAAO5wC,KAAKgwD,yBAEdpf,KAGA5wC,KAAKkgB,kBAAkBuT,gBACvBmd,EAAKqf,QAIbjwD,KAAKmf,aAAanc,QAGtByrD,EAAJrtD,UAAA2uD,gBAAI,WACI/vD,KAAKgwD,0BAA0BD,mBAInCtB,EAAJrtD,UAAA8uD,iBAAI,YACsC,UAArBlwD,KAAKqsD,YAA0BrsD,KAAKmwD,UACvB,SAArBnwD,KAAKqsD,YAAyBrsD,KAAKowD,SAAWpwD,KAAKqwD,eAEnD37B,sBAIT+5B,EAAJrtD,UAAAkvD,aAAI,SAAaC,GACJvwD,KAAKmsD,YAAYqE,SAASD,EAAMvwD,KAAK2e,WACtC3e,KAAK0rD,eAAe5mD,KAAKyrD,IAKjC9B,EAAJrtD,UAAAqvD,4BAAI,SAA4BC,GACxB1wD,KAAK6uD,aAAa/pD,KAAK4rD,IAI3BjC,EAAJrtD,UAAAuvD,wBAAI,SAAwBC,GACpB5wD,KAAK2rD,cAAc7mD,KAAK8rD,IAG5BnC,EAAJrtD,UAAAyvD,aAAI,WACI7wD,KAAK8uD,cAAchqD,QAIvB2pD,EAAJrtD,UAAA0vD,eAAI,SAAeP,EAAS3f,GACpB5wC,KAAKwsD,WAAa+D,EAClBvwD,KAAKqsD,YAAczb,GAOf6d,EAAZrtD,UAAA+tD,mBAAI,SAA2BrL,GACvB,MAAQ9jD,MAAKmsD,YAAY4E,eAAejN,IAAQ9jD,KAAKmsD,YAAY6E,QAAQlN,GAAQA,EAAM,MAInF2K,EAAZrtD,UAAA4uD,wBAAI,WACI,MAAOhwD,MAAKmwD,WAAanwD,KAAKowD,UAAYpwD,KAAKqwD,8BApPvDhqD,KAACgL,EAAAA,UAAD9K,OACIC,SAAU,cACV8K,SAAJ,i/BACI2D,QAAS,0wBACTvO,MACI8C,MAAO,eAEX/C,SAAU,aACVyC,cAAeC,EAAAA,kBAAkBC,KACjCL,gBAAiBC,EAAAA,wBAAwBC,+CAlJ7C5C,KAASmoD,KANTnoD,KAASqoD,EAAAA,YAATvnD,aAAAd,KA2RSkB,EAAAA,aACTlB,SAAAa,GAAAC,aAAAd,KAASkB,EAAAA,WAATlB,KAAqBe,EAAAA,OAArBb,MAA4BooD,EAAAA,qBA1S5BtoD,KAAI2D,EAAAA,uCA2KJ4lD,UAAAvpD,KAAKqB,EAAAA,QAULiX,WAAAtY,KAAKqB,EAAAA,QAULwmD,UAAA7nD,KAAKqB,EAAAA,QAUL8jD,UAAAnlD,KAAKqB,EAAAA,QAiCLioD,kBAAAtpD,KAAKqB,EAAAA,QAMLknD,YAAAvoD,KAAKqB,EAAAA,QAGL+jD,aAAAplD,KAAKqB,EAAAA,QAGLupD,YAAA5qD,KAAKqB,EAAAA,QAGLgkD,iBAAArlD,KAAKmB,EAAAA,SAMLqnD,eAAAxoD,KAAKmB,EAAAA,SAMLmkD,gBAAAtlD,KAAKmB,EAAAA,SAGLsnD,gBAAAzoD,KAAKmB,EAAAA,SAGL2oD,YAAA9pD,KAAKiE,EAAAA,UAAL/D,MAAe2qD,MAGfd,WAAA/pD,KAAKiE,EAAAA,UAAL/D,MAAewlD,MAGfsE,gBAAAhqD,KAAKiE,EAAAA,UAAL/D,MAAe4qD,OAkIf1C,KEzYa2C,IAKT9sC,eAAgBtK,EAAAA,QAAQ,kBACpBtE,EAAAA,MAAM,OAAQ5T,EAAAA,OACVugD,QAAS,EACTzvB,UAAW,mBAEf1Y,EAAAA,WAAW,gBAAiBC,EAAAA,QAAQ,mCAAoCrY,EAAAA,OACpEugD,QAAS,EACTzvB,UAAW,kBAEf1Y,EAAAA,WAAW,YAAaC,EAAAA,QAAQ,eAAgBrY,EAAAA,OAAQugD,QAAS,QAIrEgP,eAAgBr3C,EAAAA,QAAQ,kBACpBtE,EAAAA,MAAM,OAAQ5T,EAAAA,OAAQugD,QAAS,KAC/B3sC,EAAAA,MAAM,QAAS5T,EAAAA,OAAQugD,QAAS,KAGhCnoC,EAAAA,WAAW,YAAaC,EAAAA,QAAQ,mDAMnCm3C,SAAQlwD,UAAUmwD,UACnBD,QAAQlwD,UAAUmwD,QAAWD,QAAiB,UAASE,kBCO3D,IAAIC,IAAgB,EAGPC,GACT,GAAIllD,GAAAA,eAAsC,iCASjCmlD,IACTp4C,QAASm4C,GACTx1C,MAAOrV,EAAAA,SACPsV,WAAYy1C,iBAOZ,QAAJC,GAAuBp7C,GAAAzW,KAAvByW,YAAuBA,EAEvB,MAAAo7C,MAGaC,GACTl7C,EAAWi7C,IASfE,GAAA,SAAA76C,GA6BI,QAAJ66C,GAAgBnvD,GAChB,MAAQsU,GAARI,KAAAtX,KAAc4C,IAAd5C,KAMA,MAnB4CmY,GAA5C45C,EAAA76C,GAgBI66C,EAAJ3wD,UAAA4zB,gBAAI,WACIh1B,KAAKksD,SAAS6D,kCAlCtB1pD,KAACgL,EAAAA,UAAD9K,OACIC,SAAU,yBACV8K,SAAJ,qkBACI2D,QAAS,qYACTvO,MACI8C,MAAO,yBACPwoD,oBAAqB,WAEzB3oD,YACI+nD,GAAuB9sC,eACvB8sC,GAAuBC,gBAE3B5qD,SAAU,sBACVyC,cAAeC,EAAAA,kBAAkBC,KACjCL,gBAAiBC,EAAAA,wBAAwBC,OACzC2Q,QAAS,iDAhGbvT,KAAIS,EAAAA,gCAsGJolD,WAAA7lD,KAAKiE,EAAAA,UAAL/D,MAAekoD,OAefsD,GAnB4CD,IA0B5CG,GAAA,WA6JI,QAAJA,GAAwB7sD,EACA4M,EACAisB,EAC+BzuB,EACnB28C,EACA3wB,EACkB8a,GAC9C,GAPgBt2C,KAAxBoF,QAAwBA,EACApF,KAAxBgS,OAAwBA,EACAhS,KAAxBi+B,iBAAwBA,EAEYj+B,KAApCmsD,YAAoCA,EACAnsD,KAApCw7B,IAAoCA,EACkBx7B,KAAtDs2C,SAAsDA,EAnEzCt2C,KAAb4uD,UAA0D,QAMnC5uD,KAAvB6uD,aAAuD,GAAI/2C,GAAAA,aAMpC9X,KAAvB2rD,cAAwD,GAAI7zC,GAAAA,aAStC9X,KAAtB2lB,aAAyD,GAAI7N,GAAAA,aAGvC9X,KAAtB4lB,aAAyD,GAAI9N,GAAAA,aAGzD9X,KAAJiL,GAAiB,iBAAiBwmD,KAQrBzxD,KAAbmf,aAA8C,GAAIpU,GAAAA,QAGrC/K,KAAbkyD,eAA8B,GAAInnD,GAAAA,QAGrB/K,KAAbmyD,gBAA+B,GAAIpnD,GAAAA,QAIvB/K,KAAZ2lD,SAAsB,EACV3lD,KAAZoyD,cAAsC,KAU1BpyD,KAAZqyD,yBAA2D,KAG/CryD,KAAZsyD,kBAAgCx1B,EAAAA,aAAaC,OAShC/8B,KAAKmsD,YACN,KAAM6C,GAA2B,cAGrChvD,MAAKwP,eAAiBA,EAyM9B,MAtWIrP,QAAJ2M,eACQmlD,EADR7wD,UAAA,eAAI,WAII,MAAOpB,MAAKkvD,WAAalvD,KAAKuyD,gBAAkBvyD,KAAKuyD,gBAAgBrwD,MAAQ,WAGjF,SAAYA,GACRlC,KAAKkvD,SAAWlvD,KAAKmvD,mBAAmBnvD,KAAKmsD,YAAYiD,YAAYltD,qCAIzE/B,OAAJ2M,eACQmlD,EADR7wD,UAAA,aAAI,WAGI,MAAOpB,MAAKwyD,SACPxyD,KAAKuyD,gBAAkBvyD,KAAKuyD,gBAAgBE,sBAAoBvrD,SAGzE,SAAUhF,GACNlC,KAAKwyD,OAAStwD,mCAIlB/B,OAAJ2M,eACQmlD,EADR7wD,UAAA,gBAAI,WAEI,WAA0B8F,KAAnBlH,KAAKmS,WAA2BnS,KAAKuyD,gBACxCvyD,KAAKuyD,gBAAgB1uD,WAAa7D,KAAKmS,eAG/C,SAAajQ,GACjB,GAAcgnB,GAAWzW,EAAAA,sBAAsBvQ,EAEnCgnB,KAAalpB,KAAKmS,YAClBnS,KAAKmS,UAAY+W,EACjBlpB,KAAKkyD,eAAelvD,KAAKkmB,qCAKjC/oB,OAAJ2M,eACQmlD,EADR7wD,UAAA,cAAI,WAEI,MAAOpB,MAAK2lD,aAGhB,SAAWzjD,GACHA,EACAlC,KAAKiN,OAELjN,KAAKgM,yCAKb7L,OAAJ2M,eAAQmlD,EAAR7wD,UAAA,gBAAI,WACI,MAAOpB,MAAKoyD,mBAGhB,SAAalwD,GACTlC,KAAKoyD,cAAgBlwD,mCAIzB/B,OAAJ2M,eAAQmlD,EAAR7wD,UAAA,eAAI,WACI,MAAOpB,MAAKuyD,iBAAmBvyD,KAAKuyD,gBAAgB/wC,qCAIxDrhB,OAAJ2M,eAAQmlD,EAAR7wD,UAAA,eAAI,WACI,MAAOpB,MAAKuyD,iBAAmBvyD,KAAKuyD,gBAAgB3pC,qCAGxDzoB,OAAJ2M,eAAQmlD,EAAR7wD,UAAA,kBAAI,WACI,MAAOpB,MAAKuyD,iBAAmBvyD,KAAKuyD,gBAAgB9G,4CAIxDtrD,OAAJ2M,eAAQmlD,EAAR7wD,UAAA,aAAI,WACI,MAAOpB,MAAK2e,0CAkFhBszC,EAAJ7wD,UAAAkB,YAAI,WACItC,KAAKgM,QACLhM,KAAKsyD,kBAAkBx9C,cACvB9U,KAAKkyD,eAAejvD,WAEhBjD,KAAK0yD,WACL1yD,KAAK0yD,SAASnwD,UACdvC,KAAK2yD,kBAAoB,OAKjCV,EAAJ7wD,UAAAwd,OAAI,SAAO2xC,GACX,GAAcqC,GAAW5yD,KAAK2e,QACtB3e,MAAK2e,SAAW4xC,EACXvwD,KAAKmsD,YAAYqE,SAASoC,EAAU5yD,KAAK2e,WAC1C3e,KAAKmyD,gBAAgBnvD,KAAKutD,IAKlC0B,EAAJ7wD,UAAAyxD,WAAI,SAAWnC,GACP1wD,KAAK6uD,aAAa/pD,KAAK4rD,IAI3BuB,EAAJ7wD,UAAA0xD,YAAI,SAAYlC,GACR5wD,KAAK2rD,cAAc7mD,KAAK8rD,IAO5BqB,EAAJ7wD,UAAA2xD,cAAI,SAAcC,GAAd,GAAJjzD,GAAAC,IACQ,IAAIA,KAAKuyD,gBACL,KAAMllD,OAAM,6DAEhBrN,MAAKuyD,gBAAkBS,EACvBhzD,KAAKsyD,kBACDtyD,KAAKuyD,gBAAgBzyC,YAAYtb,UAAU,SAACtC,GAAoB,MAAAnC,GAAK4e,SAAWzc,KAIxF+vD,EAAJ7wD,UAAA6L,KAAI,WACI,IAAIjN,KAAK2lD,UAAW3lD,KAAK6D,SAAzB,CAGA,IAAK7D,KAAKuyD,gBACN,KAAMllD,OAAM,8DAEZrN,MAAKs2C,WACLt2C,KAAKqyD,yBAA2BryD,KAAKs2C,SAAS2c,eAGlDjzD,KAAKkzD,cAELlzD,KAAK2lD,SAAU,EACf3lD,KAAK2lB,aAAa7gB,SAItBmtD,EAAJ7wD,UAAA4K,MAAI,WAAA,GAAJjM,GAAAC,IACQ,IAAKA,KAAK2lD,QAAV,CAII3lD,KAAK0yD,UAAY1yD,KAAK0yD,SAAS/0C,eAC/B3d,KAAK0yD,SAAS5uD,SAGd9D,KAAKmzD,gBAAkBnzD,KAAKmzD,eAAeC,YAC3CpzD,KAAKmzD,eAAervD,QAGhC,IAAcuvD,GAAgB,WAGdtzD,EAAK4lD,UACL5lD,EAAK4lD,SAAU,EACf5lD,EAAK6lB,aAAa9gB,OAClB/E,EAAKsyD,yBAA2B,MAIpCryD,MAAKqyD,0BAC0C,kBAAxCryD,MAAKqyD,yBAAyBh6C,OAMrCrY,KAAKqyD,yBAAyBh6C,QAC9B1H,WAAW0iD,IAEXA,MAKApB,EAAZ7wD,UAAA8xD,YAAI,WAAA,GAAJnzD,GAAAC,IACaA,MAAKmzD,iBACNnzD,KAAKmzD,eAAiB,GAAInvD,GAAAA,gBAAwC+tD,GAC9D/xD,KAAKi+B,mBAGRj+B,KAAK0yD,UACN1yD,KAAKszD,cAGJtzD,KAAK0yD,SAAS/0C,gBACf3d,KAAK2yD,kBAAoB3yD,KAAK0yD,SAASxuD,OAAOlE,KAAKmzD,gBACnDnzD,KAAK2yD,kBAAkBxuD,SAASovD,WAAavzD,KAC7CA,KAAKwzD,WAGLxzD,KAAKgS,OAAOsjB,SAASjpB,eAAehI,KAAKmH,EAAAA,KAAK,IAAIhH,UAAU,WACxDzE,EAAK2yD,SAAS3tD,qBAMlBktD,EAAZ7wD,UAAAkyD,YAAI,WAAA,GAAJvzD,GAAAC,KACcgP,EAAgB,GAAIC,GAAAA,eACtBU,iBAAkB3P,KAAKyzD,8BACvBvkD,aAAa,EACbC,cAAe,kCACfvJ,UAAW5F,KAAKw7B,IAChBhsB,eAAgBxP,KAAKwP,iBACrBF,WAAY,wBAGhBtP,MAAK0yD,SAAW1yD,KAAKoF,QAAQyK,OAAOb,GACpChP,KAAK0yD,SAASlxD,eAAeoU,aAAa,OAAQ,UAElD/J,EAAAA,MACI7L,KAAK0yD,SAAS5mD,gBACd9L,KAAK0yD,SAASh1C,cACd1d,KAAK0yD,SAAS3mD,gBAAgB1H,KAAK8G,EAAAA,OAAO,SAACxI,GAGvC,MAAOA,GAAMU,UAAYC,EAAAA,QAAWvD,EAAKwyD,iBAAmB5vD,EAAM61B,QAAU71B,EAAMU,UAAY80B,EAAAA,aAEpG3zB,UAAU,WAAM,MAAAzE,GAAKiM,WAInBimD,EAAZ7wD,UAAAqyD,4BAAI,WACI,MAAOzzD,MAAKoF,QAAQJ,WACf8X,oBAAoB9c,KAAKuyD,gBAAgB3vD,YACzCma,sBAAsB,2BACtBC,wBAAuB,GACvBC,mBAAmB,GACnB6pC,qBACAxhD,gBAEO5E,QAAS,QACTC,QAAS,SACTC,SAAU,QACVC,SAAU,QAGVH,QAAS,QACTC,QAAS,MACTC,SAAU,QACVC,SAAU,WAGVH,QAAS,MACTC,QAAS,SACTC,SAAU,MACVC,SAAU,QAGVH,QAAS,MACTC,QAAS,MACTC,SAAU,MACVC,SAAU,aASlBoxD,EAAZ7wD,UAAA+tD,mBAAI,SAA2BrL,GACvB,MAAQ9jD,MAAKmsD,YAAY4E,eAAejN,IAAQ9jD,KAAKmsD,YAAY6E,QAAQlN,GAAQA,EAAM,MAInFmO,EAAZ7wD,UAAAoyD,SAAI,WACJ,GAAcj9B,GAAQv2B,KAAKu2B,KACfv2B,MAAK2yD,oBACL3yD,KAAK2yD,kBAAkBxuD,SAASoyB,MAAQA,mBA9WpDlwB,KAACgL,EAAAA,UAAD9K,OACIC,SAAU,gBACV8K,SAAU,GACV7K,SAAU,eACVsC,gBAAiBC,EAAAA,wBAAwBC,OACzCC,cAAeC,EAAAA,kBAAkBC,KACjCX,YAAc8Q,QAASiL,GAAoB/K,YAAaw4C,4CAhH5D5rD,KAAIQ,EAAAA,UAbJR,KAAIU,EAAAA,SAKJV,KAAIY,EAAAA,mBAkRJZ,SAAAa,GAAAC,aAAAd,KAAiBe,EAAAA,OAAjBb,MAAwBmrD,QA7QxBrrD,KAASqoD,EAAAA,YAATvnD,aAAAd,KA8QiBkB,EAAAA,aAhRjBlB,KAASiB,EAAAA,eAATH,aAAAd,KAiRiBkB,EAAAA,aACjBlB,SAAAa,GAAAC,aAAAd,KAAiBkB,EAAAA,WAAjBlB,KAA6Be,EAAAA,OAA7Bb,MAAoCi2C,EAAAA,iCAxJpCoT,UAAAvpD,KAAKqB,EAAAA,QAYL6uB,QAAAlwB,KAAKqB,EAAAA,QAYL7D,WAAAwC,KAAKqB,EAAAA,QAgBL6+C,SAAAlgD,KAAKqB,EAAAA,QA0CLgsD,0BAAArtD,KAAKqB,EAAAA,QAGLknD,YAAAvoD,KAAKqB,EAAAA,QAMLmnD,eAAAxoD,KAAKmB,EAAAA,SAMLmkD,gBAAAtlD,KAAKmB,EAAAA,SAGL8H,aAAAjJ,KAAKqB,EAAAA,QAGLupD,YAAA5qD,KAAKqB,EAAAA,QAGLie,eAAAtf,KAAKmB,EAAAA,OAALjB,MAAY,YAGZqf,eAAAvf,KAAKmB,EAAAA,OAALjB,MAAY,aAyPZ0rD,KClda0B,IACTp6C,QAASC,EAAAA,kBACTC,YAAaC,EAAAA,WAAW,WAAM,MAAAk6C,MAC9Bj6C,OAAO,GAIEk6C,IACTt6C,QAASqY,EAAAA,cACTnY,YAAaC,EAAAA,WAAW,WAAM,MAAAk6C,MAC9Bj6C,OAAO,iBAaP,QAAJm6C,GAEeC,EAEAC,GAFAh0D,KAAf+zD,OAAeA,EAEA/zD,KAAfg0D,cAAeA,EACPh0D,KAAKkC,MAAQlC,KAAK+zD,OAAO7xD,MAEjC,MAAA4xD,MAIAF,GAAA,WA+II,QAAJA,GACehxD,EACYupD,EAC0BC,EACzB6H,GAJxB,GAAJl0D,GAAAC,IAMQ,IALOA,KAAf4C,WAAeA,EACY5C,KAA3BmsD,YAA2BA,EAC0BnsD,KAArDosD,YAAqDA,EACzBpsD,KAA5Bi0D,UAA4BA,EA5BLj0D,KAAvBk0D,WACQ,GAAIp8C,GAAAA,aAGW9X,KAAvBm0D,UACQ,GAAIr8C,GAAAA,aAGR9X,KAAJ8f,YAAkB,GAAIhI,GAAAA,aAGlB9X,KAAJkyD,eAAqB,GAAIp6C,GAAAA,aAMb9X,KAAZo0D,uBAAqCt3B,EAAAA,aAAaC,MAEtC/8B,KAAZq0D,mBAAiCv3B,EAAAA,aAAaC,MAGlC/8B,KAAZs0D,gBAA6B,EAsBzBt0D,KAAJ0sB,UAAgB,aAkFJ1sB,KAAZu0D,YAAgD,aAGpCv0D,KAAZ6qB,kBAAgC,aAIpB7qB,KAAZ8rB,eAA0C,WAClC,MAAO/rB,GAAKu0D,eACR,MAASE,mBAAqBxjC,KAAMjxB,EAAK6C,WAAWhB,cAAcM,SAIlElC,KAAZy0D,aAAwC,SAACC,GACzC,GAAcC,GAAe50D,EAAKovD,mBAAmBpvD,EAAKosD,YAAYiD,YAAYsF,EAAQxyD,OAElF,QAASnC,EAAKyhB,MAAQmzC,GAClB50D,EAAKosD,YAAYyI,YAAY70D,EAAKyhB,IAAKmzC,IAAiB,EACxD,MAASE,iBAAmBrzC,IAAKzhB,EAAKyhB,IAAKszC,OAAQH,KAInD30D,KAAZ+0D,aAAwC,SAACL,GACzC,GAAcC,GAAe50D,EAAKovD,mBAAmBpvD,EAAKosD,YAAYiD,YAAYsF,EAAQxyD,OAElF,QAASnC,EAAK6oB,MAAQ+rC,GAClB50D,EAAKosD,YAAYyI,YAAY70D,EAAK6oB,IAAK+rC,IAAiB,EACxD,MAASK,iBAAmBpsC,IAAK7oB,EAAK6oB,IAAKksC,OAAQH,KAInD30D,KAAZi1D,gBAA2C,SAACP,GAC5C,GAAcC,GAAe50D,EAAKovD,mBAAmBpvD,EAAKosD,YAAYiD,YAAYsF,EAAQxyD,OAElF,OAAQnC,GAAK0rD,YAAekJ,IAAgB50D,EAAK0rD,WAAWkJ,IAC/CO,oBAAoB,GAA7B,MAWAl1D,KAAZsrB,UACQM,EAAAA,WAAWC,SACP7rB,KAAK8rB,eACL9rB,KAAKy0D,aACLz0D,KAAK+0D,aACL/0D,KAAKi1D,mBAnJJj1D,KAAKmsD,YACN,KAAM6C,GAA2B,cAGrC,KAAKhvD,KAAKosD,YACN,KAAM4C,GAA2B,kBAIrChvD,MAAKq0D,mBAAqBlI,EAAYgJ,cAAc3wD,UAAU,WAC1DzE,EAAKmC,MAAQnC,EAAKmC,QAmJ9B,MA5RI/B,QAAJ2M,eACQ8mD,EADRxyD,UAAA,oBAAI,SACiBc,GADjB,GAAJnC,GAAAC,IAEakC,KAILlC,KAAKuzD,WAAarxD,EAClBlC,KAAKuzD,WAAWR,cAAc/yD,MAC9BA,KAAKo0D,uBAAuBt/C,cAE5B9U,KAAKo0D,uBAAyBp0D,KAAKuzD,WAAWpB,gBAAgB3tD,UAAU,SAACma,GACrE5e,EAAKmC,MAAQyc,EACb5e,EAAKw0D,YAAY51C,GACjB5e,EAAK2sB,YACL3sB,EAAKo0D,UAAUrvD,KAAK,GAAIgvD,IAAuB/zD,EAAMA,EAAK6C,WAAWhB,gBACrE7B,EAAKm0D,WAAWpvD,KAAK,GAAIgvD,IAAuB/zD,EAAMA,EAAK6C,WAAWhB,oDAK9EzB,OAAJ2M,eACQ8mD,EADRxyD,UAAA,0BAAI,SACuBc,GACnBlC,KAAKyrD,WAAavpD,EAClBlC,KAAK6qB,qDAIT1qB,OAAJ2M,eACQ8mD,EADRxyD,UAAA,aAAI,WAEI,MAAOpB,MAAK6f,YAGhB,SAAU3d,GAENA,EAAQlC,KAAKmsD,YAAYiD,YAAYltD,GACrClC,KAAKs0D,gBAAkBpyD,GAASlC,KAAKmsD,YAAY6E,QAAQ9uD,GAEzDA,EAAQlC,KAAKmvD,mBAAmBjtD,EACxC,IAAckzD,GAAUp1D,KAAKkC,KACrBlC,MAAK6f,OAAS3d,EACdlC,KAAKmsB,YAAYjqB,GAEZlC,KAAKmsD,YAAYqE,SAAS4E,EAASlzD,IACpClC,KAAK8f,YAAYhb,KAAK5C,oCAK9B/B,OAAJ2M,eACQ8mD,EADRxyD,UAAA,WAAI,WAEI,MAAOpB,MAAKq1D,UAGhB,SAAQnzD,GACJlC,KAAKq1D,KAAOr1D,KAAKmvD,mBAAmBnvD,KAAKmsD,YAAYiD,YAAYltD,IACjElC,KAAK6qB,qDAIT1qB,OAAJ2M,eACQ8mD,EADRxyD,UAAA,WAAI,WAEI,MAAOpB,MAAKs1D,UAGhB,SAAQpzD,GACJlC,KAAKs1D,KAAOt1D,KAAKmvD,mBAAmBnvD,KAAKmsD,YAAYiD,YAAYltD,IACjElC,KAAK6qB,qDAIT1qB,OAAJ2M,eACQ8mD,EADRxyD,UAAA,gBAAI,WAEI,QAASpB,KAAKmS,eAGlB,SAAajQ,GACjB,GAAcgnB,GAAWzW,EAAAA,sBAAsBvQ,GACjCP,EAAU3B,KAAK4C,WAAWhB,aAE5B5B,MAAKmS,YAAc+W,IACnBlpB,KAAKmS,UAAY+W,EACjBlpB,KAAKkyD,eAAeptD,KAAKokB,IAIzBA,GAAYvnB,EAAQ4zD,MAIpB5zD,EAAQ4zD,wCAuDhB3B,EAAJxyD,UAAAkB,YAAI,WACItC,KAAKo0D,uBAAuBt/C,cAC5B9U,KAAKq0D,mBAAmBv/C,cACxB9U,KAAK8f,YAAY7c,WACjBjD,KAAKkyD,eAAejvD,YAIxB2wD,EAAJxyD,UAAAmqB,0BAAI,SAA0BrS,GACtBlZ,KAAK6qB,kBAAoB3R,GAI7B06C,EAAJxyD,UAAAgqB,SAAI,SAASN,GACL,MAAO9qB,MAAKsrB,UAAYtrB,KAAKsrB,UAAUR,GAAK,MAIhD8oC,EAAJxyD,UAAA4X,WAAI,SAAW9W,GACPlC,KAAKkC,MAAQA,GAIjB0xD,EAAJxyD,UAAA6X,iBAAI,SAAiBC,GACblZ,KAAKu0D,YAAcr7C,GAIvB06C,EAAJxyD,UAAA+X,kBAAI,SAAkBD,GACdlZ,KAAK0sB,UAAYxT,GAIrB06C,EAAJxyD,UAAAgY,iBAAI,SAAiBC,GACbrZ,KAAK6D,SAAWwV,GAGpBu6C,EAAJxyD,UAAAq3B,UAAI,SAAU91B,GAEd,GAAc6yD,GAAiB7yD,EAAM61B,QAAU71B,EAAMU,UAAY60B,EAAAA,UAErDl4B,MAAKuzD,YAAciC,IAAmBx1D,KAAK4C,WAAWhB,cAAc6zD,WACpEz1D,KAAKuzD,WAAWtmD,OAChBtK,EAAMkqB,mBAId+mC,EAAJxyD,UAAA6rB,QAAI,SAAQ/qB,GACZ,GAAYquD,GAAOvwD,KAAKmsD,YAAYuJ,MAAMxzD,EAAOlC,KAAKosD,YAAYsJ,MAAMvB,UAChEn0D,MAAKs0D,gBAAkB/D,GAAQvwD,KAAKmsD,YAAY6E,QAAQT,GACxDA,EAAOvwD,KAAKmvD,mBAAmBoB,GAE1BvwD,KAAKmsD,YAAYqE,SAASD,EAAMvwD,KAAK6f,UACtC7f,KAAK6f,OAAS0wC,EACdvwD,KAAKu0D,YAAYhE,GACjBvwD,KAAK8f,YAAYhb,KAAKyrD,GACtBvwD,KAAKm0D,UAAUrvD,KAAK,GAAIgvD,IAAuB9zD,KAAMA,KAAK4C,WAAWhB,kBAI7EgyD,EAAJxyD,UAAA2e,SAAI,WACI/f,KAAKk0D,WAAWpvD,KAAK,GAAIgvD,IAAuB9zD,KAAMA,KAAK4C,WAAWhB,iBAI1EgyD,EAAJxyD,UAAAqxD,gBAAI,WACI,MAAOzyD,MAAKi0D,UAAYj0D,KAAKi0D,UAAU19B,UAAQrvB,IAInD0sD,EAAJxyD,UAAAurB,OAAI,WAEQ3sB,KAAKkC,OACLlC,KAAKmsB,YAAYnsB,KAAKkC,OAG1BlC,KAAK0sB,aA0CDknC,EAAZxyD,UAAA+qB,YAAI,SAAoBjqB,GAChBlC,KAAK4C,WAAWhB,cAAcM,MAC1BA,EAAQlC,KAAKmsD,YAAYI,OAAOrqD,EAAOlC,KAAKosD,YAAYK,QAAQ0H,WAAa,IAiB7EP,EAAZxyD,UAAA+tD,mBAAI,SAA2BrL,GACvB,MAAQ9jD,MAAKmsD,YAAY4E,eAAejN,IAAQ9jD,KAAKmsD,YAAY6E,QAAQlN,GAAQA,EAAM,qBAhT/Fz9C,KAACC,EAAAA,UAADC,OACIC,SAAU,sBACViC,WACIkrD,GACAE,IACEt6C,QAASuY,GAAyBrY,YAAam6C,IAErDltD,MACIivD,uBAAwB,OACxBC,mBAAoB,gDACpBC,aAAc,0CACdC,aAAc,0CACdpsC,aAAc,WACdgI,UAAW,+BACXqkC,WAAY,aACZ5xC,SAAU,WACVxd,YAAa,qBAEjBF,SAAU,4DApFdJ,KAAIS,EAAAA,aAoBJT,KAASqoD,EAAAA,YAATvnD,aAAAd,KA+LSkB,EAAAA,aACTlB,SAAAa,GAAAC,aAAAd,KAASkB,EAAAA,WAATlB,KAAqBe,EAAAA,OAArBb,MAA4BooD,EAAAA,qBA7L5BtoD,KAASye,GAAT3d,aAAAd,KA8LSkB,EAAAA,gCA7HTyuD,eAAA3vD,KAAKqB,EAAAA,QAoBLwtD,qBAAA7uD,KAAKqB,EAAAA,QAOLxF,QAAAmE,KAAKqB,EAAAA,QAqBL8Z,MAAAnb,KAAKqB,EAAAA,QAWLkhB,MAAAviB,KAAKqB,EAAAA,QAWL7D,WAAAwC,KAAKqB,EAAAA,QA2BLwsD,aAAA7tD,KAAKmB,EAAAA,SAIL2sD,YAAA9tD,KAAKmB,EAAAA,UAuLLosD,KC/VAqC,GAAA,WAAA,QAAAA,MAIA,sBAJA5vD,KAACC,EAAAA,UAADC,OACIC,SAAU,+BAGdyvD,KAGAC,GAAA,WA4CI,QAAJA,GACejK,EACC/rC,EACei2C,GAFhBn2D,KAAfisD,KAAeA,EACCjsD,KAAhBkgB,kBAAgBA,EANJlgB,KAAZmf,aAA2B2d,EAAAA,aAAaC,KASxC,IAAcq5B,GAAiB3lC,OAAO0lC,EAC9Bn2D,MAAKqX,SAAY++C,GAAqC,IAAnBA,EAAwBA,EAAiB,KAwCpF,MAtEIj2D,QAAJ2M,eACQopD,EADR90D,UAAA,gBAAI,WAEI,WAA0B8F,KAAnBlH,KAAKmS,UAA0BnS,KAAKuzD,WAAW1vD,WAAa7D,KAAKmS,eAG5E,SAAajQ,GACTlC,KAAKmS,UAAYM,EAAAA,sBAAsBvQ,oCA2B3Cg0D,EAAJ90D,UAAAyP,YAAI,SAAYC,GACJA,EAAQyiD,YACRvzD,KAAKq2D,qBAIbH,EAAJ90D,UAAAkB,YAAI,WACItC,KAAKmf,aAAarK,eAGtBohD,EAAJ90D,UAAAszB,mBAAI,WACI10B,KAAKq2D,qBAGTH,EAAJ90D,UAAA6L,KAAI,SAAKtK,GACG3C,KAAKuzD,aAAevzD,KAAK6D,WACzB7D,KAAKuzD,WAAWtmD,OAChBtK,EAAMgW,oBAINu9C,EAAZ90D,UAAAi1D,kBAAI,WAAA,GAAJt2D,GAAAC,KACcs2D,EAAqBt2D,KAAKuzD,WAAavzD,KAAKuzD,WAAWrB,eAAiB5xB,EAAAA,KACxEi2B,EAAgBv2D,KAAKuzD,YAAcvzD,KAAKuzD,WAAWhB,gBACrDvyD,KAAKuzD,WAAWhB,gBAAgBL,eAAiB5xB,EAAAA,KAC/Ck2B,EAAoBx2D,KAAKuzD,WAC3B1nD,EAAAA,MAAM7L,KAAKuzD,WAAW5tC,aAAc3lB,KAAKuzD,WAAW3tC,cACpD0a,EAAAA,IAEJtgC,MAAKmf,aAAarK,cAClB9U,KAAKmf,aAAetT,EAAAA,MAChB7L,KAAKisD,KAAKn7C,QACVwlD,EACAC,EACAC,GACFhyD,UAAU,WAAM,MAAAzE,GAAKmgB,kBAAkBjf,iCAxFjDoF,KAACgL,EAAAA,UAAD9K,OACIC,SAAU,uBACV8K,SAAJ,gZACI2D,QAAS,60BACTvO,MACI8C,MAAO,uBAGPua,kBAAmB,KACnB0yC,sCAAuC,kCACvCC,kBAAmB,6CACnBxyC,UAAW,kBAEfzd,SAAU,qBACVyC,cAAeC,EAAAA,kBAAkBC,KACjCL,gBAAiBC,EAAAA,wBAAwBC,+CA1B7C5C,KAASmoD,KAhBTnoD,KAAI2D,EAAAA,oBA0EJ3D,KAAAgU,OAAAlT,aAAAd,KAASiU,EAAAA,UAAT/T,MAAmB,mCA3BnB1C,WAAAwC,KAAKqB,EAAAA,QAUL6rD,aAAAltD,KAAKqB,EAAAA,MAALnB,MAAW,SAGX8Q,WAAAhR,KAAKqB,EAAAA,QAGLivD,aAAAtwD,KAAKkf,EAAAA,aAALhf,MAAkB0vD,MAGlBhb,SAAA50C,KAAKiE,EAAAA,UAAL/D,MAAe,aAmDf2vD,KClGAU,GAAA,WAAA,QAAAA,MA8CA,sBA9CAvwD,KAAC8B,EAAAA,SAAD5B,OACI+B,SACIC,EAAAA,aACAy1C,GACAx1C,EAAAA,cACAgS,EAAAA,WACA5I,EAAAA,aACAosC,GACAlsC,IAEJzJ,SACIomD,GACA3C,GACAmG,GACAF,GACA6B,GACAsC,GACAD,GACA/E,GACAnF,GACAoF,GACAnF,IAEJ5jD,cACIqmD,GACA3C,GACAmG,GACAF,GACA6B,GACAsC,GACAD,GACA/E,GACAnF,GACAoF,GACAnF,IAEJvjD,WACI+lD,GACAmD,IAEJhpD,iBACIopD,GACA/F,QAIR4K,KCjEAC,GAAA,WAAA,QAAAA,KA0BY72D,KAAZ82D,WAAiC,EAYrB92D,KAAZ+2D,QAA8B,EAC9B,MAtBI52D,QAAJ2M,eACQ+pD,EADRz1D,UAAA,gBAAI,WAEI,MAAOpB,MAAK82D,eAGhB,SAAa50D,GACTlC,KAAK82D,UAAYrkD,EAAAA,sBAAsBvQ,oCAM3C/B,OAAJ2M,eACQ+pD,EADRz1D,UAAA,aAAI,WAEI,MAAOpB,MAAK+2D,YAGhB,SAAU70D,GACNlC,KAAK+2D,OAAStkD,EAAAA,sBAAsBvQ,mDAnC5CmE,KAACgL,EAAAA,UAAD9K,OACIC,SAAU,aACVE,MACI8C,MAAO,aACPE,KAAM,YACNstD,0BAA2B,uCAC3BC,8BAA+B,WAC/BC,2BAA4B,SAEhC5lD,SAAU,GACV2D,QAAS,wSACT/L,cAAeC,EAAAA,kBAAkBC,KACjCL,gBAAiBC,EAAAA,wBAAwBC,OACzC+L,qBAAqB,wBAIzBmiD,WAAA9wD,KAAKqB,EAAAA,QAYL0vD,QAAA/wD,KAAKqB,EAAAA,SAULmvD,KCrCAQ,GAAA,WAAA,QAAAA,MAMA,sBANAhxD,KAAC8B,EAAAA,SAAD5B,OACI+B,SAAUC,EAAAA,cACVF,SAAUwuD,IACVzuD,cAAeyuD,QAGnBQ,KCMAtS,GAAA,WAUI,QAAJA,GACgBuS,EACAC,EACAC,EACAC,EACApS,EACkB1D,GALlB3hD,KAAhBs3D,UAAgBA,EACAt3D,KAAhBu3D,0BAAgBA,EACAv3D,KAAhBw3D,QAAgBA,EACAx3D,KAAhBy3D,UAAgBA,EACAz3D,KAAhBqlD,kBAAgBA,EACkBrlD,KAAlC2hD,UAAkCA,EAV9B3hD,KAAJwmD,UAAgB,GAAIz7C,GAAAA,QAqDpB,MArCIg6C,GAAJ3jD,UAAA8C,OAAI,SAAOwzD,OAAX,KAAAA,IAAWA,MACE13D,KAAKomD,UACNpmD,KAAKomD,QAAU,GAAIz4C,GAAAA,eAAe3N,KAAKs3D,UAAWt3D,KAAKqlD,oBAG3DrlD,KAAK8D,SAEA9D,KAAK23D,UACN33D,KAAK23D,QAAU,GAAIC,GAAAA,gBAAgB53D,KAAK2hD,UAAUkW,cAAc,OAC5D73D,KAAKu3D,0BAA2Bv3D,KAAKw3D,QAASx3D,KAAKy3D,WAGnE,IAAc91D,GAAuB3B,KAAKs3D,UAAU10D,WAAWhB,aAKvDD,GAAkB,WAAEm2D,aAAa93D,KAAK23D,QAAQI,cAAep2D,GAC7D3B,KAAKomD,QAAQliD,OAAOlE,KAAK23D,QAASD,GAClC13D,KAAKwmD,UAAUxjD,QAOnB+hD,EAAJ3jD,UAAA0C,OAAI,WACQ9D,KAAKomD,QAAQgN,YACbpzD,KAAKomD,QAAQtiD,UAIrBihD,EAAJ3jD,UAAAkB,YAAI,WACQtC,KAAK23D,SACL33D,KAAK23D,QAAQp1D,0BAxDzB8D,KAACC,EAAAA,UAADC,OACIC,SAAU,yEAhBdH,KAAIoH,EAAAA,cACJpH,KAAI+3B,EAAAA,2BACJ/3B,KAAI2xD,EAAAA,iBACJ3xD,KAAIkK,EAAAA,WACJlK,KAAIY,EAAAA,mBA2BJZ,SAAAa,GAAAC,aAAAd,KAASe,EAAAA,OAATb,MAAgBi2C,EAAAA,eA2ChBuI,KCjEa9C,GAAoB,GAAIz1C,GAAAA,eAAgC,mCvBSrE,QAAAyrD,MAAiC,MAAjCA,MACa/V,GACTrrC,EAAcohD,IAMlB3W,GAAA,SAAApqC,GAoBI,QAAJoqC,GACgB7qC,EACU6/B,EACVn/B,EACuC+gD,GAJnD,GAAJn4D,GAKQmX,EALRI,KAAAtX,OAAAA,WACgBD,GAAhB0W,YAAgBA,EAEA1W,EAAhBoX,cAAgBA,EACuCpX,EAAvDm4D,qBAAuDA,EAG3C/gD,GAIAA,EAAce,QAAQnY,EAAK0W,YAAY7U,eAAe,GAGtDs2D,GAAwBA,EAAqB5T,SAC7C4T,EAAqB5T,QAAQvkD,GAGjCA,EAAK4hD,UAAYrL,IA8DzB,MArFoCn+B,GAApCmpC,EAAApqC,GA2BIoqC,EAAJlgD,UAAAiX,MAAI,SAAMnT,OAAV,KAAAA,IAAUA,EAAV,WACYlF,KAAKmX,cACLnX,KAAKmX,cAAcmB,SAAStY,KAAKq0C,kBAAmBnvC,GAEpDlF,KAAKq0C,kBAAkBh8B,SAI/BipC,EAAJlgD,UAAAkB,YAAI,WACQtC,KAAKmX,eACLnX,KAAKmX,cAAciB,eAAepY,KAAKyW,YAAY7U,eAGnD5B,KAAKk4D,sBAAwBl4D,KAAKk4D,qBAAqB3T,YACvDvkD,KAAKk4D,qBAAqB3T,WAAWvkD;6GAK7CshD,EAAJlgD,UAAAmgD,aAAI,WACI,MAAOvhD,MAAK6D,SAAW,KAAO,KAIlCy9C,EAAJlgD,UAAAizC,gBAAI,WACI,MAAOr0C,MAAKyW,YAAY7U,eAI5B0/C,EAAJlgD,UAAAogD,eAAI,SAAe7+C,GACP3C,KAAK6D,WACLlB,EAAMkqB,iBACNlqB,EAAMgW,oBAKd2oC,EAAJlgD,UAAAqgD,SAAI,WACJ,GAAc9/C,GAAuB3B,KAAKyW,YAAY7U,cAExC8/C,EAAe1hD,KAAK2hD,UAAY3hD,KAAK2hD,UAAUC,UAAY,EAC7DC,EAAS,EAEb,IAAIlgD,EAAQmgD,WAMR,IAAK,GALCC,GAASpgD,EAAQmgD,WAAWnzC,OAKzB01B,EAAI,EAAGA,EAAI0d,EAAQ1d,IACpB1iC,EAAQmgD,WAAWzd,GAAG2d,WAAaN,IACnCG,GAAUlgD,EAAQmgD,WAAWzd,GAAGtD,YAK5C,OAAO8gB,GAAOrxB,uBAlGtBnqB,KAACgL,EAAAA,UAAD9K,OACIC,SAAU,uCACVC,SAAU,iBACVmT,QAAS,YACTlT,MACIgD,KAAM,gBACNF,MAAO,oBACPua,kBAAmB,iBACnBuqB,kBAAmB,mBACnBn9B,UAAW,0BAEfpI,gBAAiBC,EAAAA,wBAAwBC,OACzCC,cAAeC,EAAAA,kBAAkBC,KACjCkI,SAAU,oEAtCdjL,KAAIS,EAAAA,aA+CJT,SAAAa,GAAAC,aAAAd,KAASe,EAAAA,OAATb,MAAgBi2C,EAAAA,cAzChBn2C,KAA2B+T,EAAAA,eA2C3B/T,SAAAa,GAAAC,aAAAd,KAASe,EAAAA,OAATb,MAAgB07C,MAAhB57C,KAAoCkB,EAAAA,cA4EpC+5C,GArFoCY,IC1BvBC,IAYTC,kBAAmBpoC,EAAAA,QAAQ,qBACvBtE,EAAAA,MAAM,OAAQ5T,EAAAA,OACVugD,QAAS,EACTzvB,UAAW,gBAEf1Y,EAAAA,WAAW,gBAAiB0gB,EAAAA,OACxB0nB,EAAAA,MAAM,wBAAyBnoC,EAAAA,QAAQ,cAAerY,EAAAA,OAAOugD,QAAS,MACtEloC,EAAAA,QAAQ,kCAAmCrY,EAAAA,OAAO8wB,UAAW,iBAEjE1Y,EAAAA,WAAW,YAAaC,EAAAA,QAAQ,mBAAoBrY,EAAAA,OAAOugD,QAAS,QAQxEE,YAAavoC,EAAAA,QAAQ,eAEjBtE,EAAAA,MAAM,UAAW5T,EAAAA,OAAOugD,QAAS,KACjCnoC,EAAAA,WAAW,aACPpY,EAAAA,OAAOugD,QAAS,IAChBloC,EAAAA,QAAQ,oDAKPooC,GAAcJ,GAAqBI,YAEnCH,GAAoBD,GAAqBC,kBCHzCI,GACT,GAAIh2C,GAAAA,eAAyC,+BACzCi2C,WAAY,OACZ7G,QAAS8G,IAajBC,GAAA,WA6HI,QAAJA,GACgBlsC,EACA4e,EACqCutB,GAFrC5iD,KAAhByW,YAAgBA,EACAzW,KAAhBq1B,QAAgBA,EACqCr1B,KAArD4iD,gBAAqDA,EArDjD5iD,KAAJ6iD,cAGI7iD,KAAJ8iD,qBAA6C,OAGzC9iD,KAAJ+iD,eAAqB,GAAIh4C,GAAAA,QASZ/K,KAAbmP,cAAqCnP,KAAK4iD,gBAAgBzzC,cAiBnCnP,KAAvBiM,OACQ,GAAI6L,GAAAA,aAGA9X,KAAZgjD,WAA4ChjD,KAAK4iD,gBAAgBK,UACrDjjD,KAAZkjD,WAA4CljD,KAAK4iD,gBAAgBO,UAGrDnjD,KAAZojD,UAGYpjD,KAAZqjD,aAA2B,GAAIt4C,GAAAA,QAGnB/K,KAAZsjD,iBAA+BxmB,EAAAA,aAAaC,MAChC/8B,KAAZujD,gBAAuCvjD,KAAK4iD,gBAAgBY,eAChDxjD,KAAZyjD,aAAgDzjD,KAAK4iD,gBAAgB1zC,YAoIrE,MA7OI/O,QAAJ2M,eACQ61C,EADRvhD,UAAA,iBAAI,WACqC,MAAOpB,MAAKgjD,gBACjD,SAAc9gD,GACI,WAAVA,GAAgC,UAAVA,GACtBwhD,IAGJ1jD,KAAKgjD,WAAa9gD,EAClBlC,KAAK2jD,sDAITxjD,OAAJ2M,eACQ61C,EADRvhD,UAAA,iBAAI,WACqC,MAAOpB,MAAKkjD,gBACjD,SAAchhD,GACI,UAAVA,GAA+B,UAAVA,GACrB0hD,IAGJ5jD,KAAKkjD,WAAahhD,EAClBlC,KAAK2jD,sDAITxjD,OAAJ2M,eACQ61C,EADRvhD,UAAA,sBAAI,WACgC,MAAOpB,MAAKujD,qBAC5C,SAAmBrhD,GACflC,KAAKujD,gBAAkB9wC,EAAAA,sBAAsBvQ,oCAIjD/B,OAAJ2M,eACQ61C,EADRvhD,UAAA,mBAAI,WACyC,MAAOpB,MAAKyjD,kBACrD,SAAgBvhD,GACZlC,KAAKyjD,aAAehxC,EAAAA,sBAAsBvQ,oCAS9C/B,OAAJ2M,eACQ61C,EADRvhD,UAAA,kBAAI,SACeyiD,GACPA,GAAWA,EAAQl1C,SACnB3O,KAAK6iD,WAAagB,EAAQ5hD,MAAM,KAAK+e,OAAO,SAAC8iC,EAAUC,GAGnD,MAFAD,GAAIC,IAAa,EAEVD,OAGX9jD,KAAKyW,YAAY7U,cAAcmiD,UAAY,qCA4DnDpB,EAAJvhD,UAAAgB,SAAI,WACIpC,KAAK2jD,sBAGThB,EAAJvhD,UAAAszB,mBAAI,WAAA,GAAJ30B,GAAAC,IACQA,MAAKgkD,YAAc,GAAIvjB,GAAAA,gBAAgCzgC,KAAKohB,OAAOsf,WAAWxG,gBAC9El6B,KAAKsjD,iBAAmBtjD,KAAKgkD,YAAY5pB,OAAO51B,UAAU,WAAM,MAAAzE,GAAKkM,OAAOnH,KAAK,UAGrF69C,EAAJvhD,UAAAkB,YAAI,WACItC,KAAKsjD,iBAAiBxuC,cACtB9U,KAAKiM,OAAOhJ,YAIhB0/C,EAAJvhD,UAAA6iD,eAAI,SAAethD,GAGX,OAAQA,EAAMU,SACV,IAAKC,GAAAA,OACDtD,KAAKiM,OAAOnH,KAAK,UACjB,MACJ,KAAKqzB,GAAAA,SACL,IAAKD,GAAAA,WACDl4B,KAAKgkD,YAAYE,eAAe,YAChClkD,KAAKgkD,YAAYvrB,UAAU91B,EAC3B,MACJ,SAEI3C,KAAKgkD,YAAYvrB,UAAU91B,KAQvCggD,EAAJvhD,UAAA+iD,eAAI,SAAej/C,GAAf,GAAJnF,GAAAC,SAAA,KAAAkF,IAAmBA,EAAnB,WAEYlF,KAAKokD,YACLpkD,KAAKq1B,QAAQC,SAASjpB,eACjBhI,KAAKmH,EAAAA,KAAK,IACVhH,UAAU,WAAM,MAAAzE,GAAKikD,YAAYE,eAAeh/C,GAAQqb,uBAE7DvgB,KAAKgkD,YAAYE,eAAeh/C,GAAQqb,sBAQhDoiC,EAAJvhD,UAAAijD,gBAAI,WACIrkD,KAAKgkD,YAAYhlC,eAAe,IAOpC2jC,EAAJvhD,UAAAkjD,QAAI,SAAQzwC,IAM+B,IAA/B7T,KAAKojD,OAAOhzC,QAAQyD,KACpB7T,KAAKojD,OAAOn1C,KAAK4F,GACjB7T,KAAKqjD,aAAargD,KAAKhD,KAAKojD,UAQpCT,EAAJvhD,UAAAmjD,WAAI,SAAW1wC,GACf,GAAc1D,GAAQnQ,KAAKojD,OAAOhzC,QAAQyD,EAE9B7T,MAAKojD,OAAOhzC,QAAQyD,IAAS,IAC7B7T,KAAKojD,OAAO/yC,OAAOF,EAAO,GAC1BnQ,KAAKqjD,aAAargD,KAAKhD,KAAKojD,UAWpCT,EAAJvhD,UAAAuiD,mBAAI,SAAmBa,EAA0CC,OAAjE,KAAAD,IAAuBA,EAA0BxkD,KAAKijD,eAAtD,KAAAwB,IAAiEA,EAA0BzkD,KAAKmjD,UAChG,IAAcU,GAAU7jD,KAAK6iD,UACrBgB,GAAQ,sBAAiC,WAATW,EAChCX,EAAQ,qBAAgC,UAATW,EAC/BX,EAAQ,qBAAgC,UAATY,EAC/BZ,EAAQ,qBAAgC,UAATY,GAInC9B,EAAJvhD,UAAAsjD,gBAAI,WACI1kD,KAAK8iD,qBAAuB,SAIhCH,EAAJvhD,UAAAujD,gBAAI,WACI3kD,KAAK8iD,qBAAuB,QAIhCH,EAAJvhD,UAAAwjD,iBAAI,SAAiBjiD,GACb3C,KAAK+iD,eAAe//C,KAAKL,GACzB3C,KAAK6kD,cAAe,EAQE,UAAlBliD,EAAM0I,SAA4D,IAArCrL,KAAKgkD,YAAYtjC,kBAC9C/d,EAAMhB,QAAQif,UAAY,mBA5PtCva,KAACgL,EAAAA,UAAD9K,OACIC,SAAU,cACV8K,SAAJ,gYACI2D,QAAS,+mBACTlM,gBAAiBC,EAAAA,wBAAwBC,OACzCC,cAAeC,EAAAA,kBAAkBC,KACjC3C,SAAU,aACV4C,YACI84C,GAAqBC,kBACrBD,GAAqBI,aAEzB95C,YACM8Q,QAAS0oC,GAAmBxoC,YAAakpC,4CA7EnDt8C,KAAIS,EAAAA,aAKJT,KAAIU,EAAAA,SA4LJV,SAAAa,GAAAC,aAAAd,KAASe,EAAAA,OAATb,MAAgBi8C,2BA9GhBS,YAAA58C,KAAKqB,EAAAA,QAYLy7C,YAAA98C,KAAKqB,EAAAA,QAYL87C,iBAAAn9C,KAAKqB,EAAAA,QAOLwH,cAAA7I,KAAKqB,EAAAA,QAYL4H,aAAAjJ,KAAKqB,EAAAA,MAALnB,MAAW,WA6BX4I,gBAAA9I,KAAKqB,EAAAA,QAGLo9C,cAAAz+C,KAAKiE,EAAAA,UAAL/D,MAAekH,EAAAA,eAKf2T,QAAA/a,KAAK00B,EAAAA,gBAALx0B,MAAqB+6C,MAMrB8C,cAAA/9C,KAAKkf,EAAAA,aAALhf,MAAkBw+C,MAGlB94C,SAAA5F,KAAKmB,EAAAA,UAoJLm7C,KCrSaqC,GACT,GAAIx4C,GAAAA,eAAsC,+BAQjCy4C,IACT1rC,QAASyrC,GACT9oC,MAAOrV,EAAAA,SACPsV,WAAY+oC,GAOhBC,GAAA,WA0CI,QAAJA,GAAwBC,EACAjR,EACAkR,EACqCC,EACzBxvB,EACZ3e,GALAnX,KAAxBolD,SAAwBA,EACAplD,KAAxBm0C,SAAwBA,EACAn0C,KAAxBqlD,kBAAwBA,EACqCrlD,KAA7DslD,gBAA6DA,EACzBtlD,KAApC81B,KAAoCA,EACZ91B,KAAxBmX,cAAwBA,EAzBpBnX,KAAJulD,UAA0C,KASnBvlD,KAAvBwlD,eAA4D,GAAI1tC,GAAAA,aAGzC9X,KAAvBylD,eAA4D,GAAI3tC,GAAAA,aAGpD9X,KAAZ0lD,YAA6C,KACjC1lD,KAAZ2lD,SAA+B,EACnB3lD,KAAZ4lD,mBAAiC9oB,EAAAA,aAAaC,MAClC/8B,KAAZ6lD,mBAAiC/oB,EAAAA,aAAaC,MAqR9C,MAlTI58B,QAAJ2M,eAAQq4C,EAAR/jD,UAAA,cAAI,WACI,MAAOpB,MAAK2lD,yCAIhBxlD,OAAJ2M,eAAQq4C,EAAR/jD,UAAA,WAAI,WACI,MAAOpB,MAAK81B,MAA4B,QAApB91B,KAAK81B,KAAK5zB,MAAkB,MAAQ,uCAgC5DijD,EAAJ/jD,UAAAgB,SAAI,WACIpC,KAAK8lD,SAAS75C,OAASjM,KAAK8lD,SAAS75C,QAAU,GAAI6L,GAAAA,cAGvDqtC,EAAJ/jD,UAAAszB,mBAAI,WAAA,GAAJ30B,GAAAC,IACQA,MAAK+lD,SAEL/lD,KAAK8lD,SAAS75C,OAAOI,eAAe7H,UAAU,WAC1CzE,EAAKimD,cAIbb,EAAJ/jD,UAAAkB,YAAI,WACQtC,KAAK0lD,cACL1lD,KAAK0lD,YAAYnjD,UACjBvC,KAAK0lD,YAAc,MAGvB1lD,KAAKimD,yBAITd,EAAJ/jD,UAAA8zB,OAAI,WAEI,MAAOl1B,MAAK2lD,QAAU3lD,KAAKgM,QAAUhM,KAAKiN,QAI9Ck4C,EAAJ/jD,UAAA6L,KAAI,WAAA,GAAJlN,GAAAC,IACQ,KAAIA,KAAK2lD,QAAT,CAIA3lD,KAAK+lD,QAEb,IAAc1kD,GAAarB,KAAKkmD,gBACxBlmD,MAAKmmD,aAAa9kD,EAAW4D,YAA4B,kBACzD5D,EAAW6C,OAAOlE,KAAKomD,SAEnBpmD,KAAK8lD,SAAS1B,aACdpkD,KAAK8lD,SAAS1B,YAAYlgD,OAAOlE,KAAK4E,MAG1C5E,KAAK4lD,mBAAqB5lD,KAAKqmD,kBAAkB7hD,UAAU,WAAM,MAAAzE,GAAKiM,UACtEhM,KAAKsmD,QAEDtmD,KAAK8lD,mBAAoBnD,KACzB3iD,KAAK8lD,SAASpB,oBAKtBS,EAAJ/jD,UAAA4K,MAAI,WACIhM,KAAK8lD,SAAS75C,OAAOnH,QAOzBqgD,EAAJ/jD,UAAAiX,MAAI,SAAMnT,OAAV,KAAAA,IAAUA,EAAV,WACYlF,KAAKmX,cACLnX,KAAKmX,cAAcmB,SAAStY,KAAKm0C,SAASvyC,cAAesD,GAEzDlF,KAAKm0C,SAASvyC,cAAcyW,SAK5B8sC,EAAZ/jD,UAAA4kD,SAAI,WAAA,GAAJjmD,GAAAC,IACQ,IAAKA,KAAK0lD,aAAgB1lD,KAAKumD,OAA/B,CAIR,GAAcT,GAAW9lD,KAAK8lD,QAEtB9lD,MAAK4lD,mBAAmB9wC,cACxB9U,KAAK0lD,YAAY5hD,SAEbgiD,YAAoBnD,KACpBmD,EAASnB,kBAELmB,EAAS1B,YAET0B,EAAS/C,eACJ1+C,KACG8G,EAAAA,OAAO,SAACxI,GAAU,MAAkB,SAAlBA,EAAM0I,UACxBG,EAAAA,KAAK,GAELlH,EAAAA,UAAUwhD,EAAS1B,YAAYoC,YAElChiD,UAAU,WAAM,MAAAshD,GAAS1B,YAAYtgD,cAAUoD,GAAW,WAEvDnH,EAAK0mD,WAGbzmD,KAAKymD,WAGTzmD,KAAKymD,SAEDX,EAAS1B,aACT0B,EAAS1B,YAAYtgD,YASzBqhD,EAAZ/jD,UAAAklD,MAAI,WACItmD,KAAK8lD,SAASlgD,UAAY5F,KAAKw7B,IAC/Bx7B,KAAK0mD,cAAa,GAClB1mD,KAAK8lD,SAAS3B,eAAenkD,KAAKulD,WAAa,YAO3CJ,EAAZ/jD,UAAAqlD,OAAI,WACIzmD,KAAK0mD,cAAa,GAKb1mD,KAAKulD,UAKNvlD,KAAKqY,MAAMrY,KAAKulD,WAFhBvlD,KAAKqY,QAKTrY,KAAKulD,UAAY,MAIbJ,EAAZ/jD,UAAAslD,aAAI,SAAqB3+C,GACjB/H,KAAK2lD,QAAU59C,EAEf/H,KAAK2lD,QAAU3lD,KAAKwlD,eAAe1gD,OAAS9E,KAAKylD,eAAe3gD,QAO5DqgD,EAAZ/jD,UAAA2kD,OAAI,WACS/lD,KAAK8lD,UACNa,KAQAxB,EAAZ/jD,UAAA8kD,eAAI,WACI,IAAKlmD,KAAK0lD,YAAa,CACnB1lD,KAAKomD,QAAU,GAAIz4C,GAAAA,eAAe3N,KAAK8lD,SAAShB,YAAa9kD,KAAKqlD,kBAC9E,IAAkBx6C,GAAS7K,KAAK4mD,mBACpB5mD,MAAK6mD,sBAAsBh8C,EAAuB,kBAClD7K,KAAK0lD,YAAc1lD,KAAKolD,SAASv1C,OAAOhF,GAKxC7K,KAAK0lD,YAAY35C,gBAAgBvH,YAGrC,MAAOxE,MAAK0lD,aAORP,EAAZ/jD,UAAAwlD,kBAAI,WACI,MAAO,IAAI33C,GAAAA,eACPU,iBAAkB3P,KAAKolD,SAASpgD,WAC3B8X,oBAAoB9c,KAAKm0C,UACzB2S,qBACA/pC,sBAAsB,uBAC3B7N,YAA2C,OAA9BlP,KAAK8lD,SAAS52C,iBAAsDhI,KAA9BlH,KAAK8lD,SAAS52C,aAE3DlP,KAAK8lD,SAAS52C,YACpBC,cAAenP,KAAK8lD,SAAS32C,eAAiB,mCAC9CK,eAAgBxP,KAAKslD,kBACrB1/C,UAAW5F,KAAK81B,QAShBqvB,EAAZ/jD,UAAAylD,sBAAI,SAA8B7hD,GAA9B,GAAJjF,GAAAC,IACYA,MAAK8lD,SAASnC,oBAQd3+C,EAASqY,gBAAgB7Y,UAAU,WAC/BzE,EAAK+lD,SAA2B,mBAAE/lD,EAAK+lD,SAAS7C,UAAWljD,EAAK+lD,SAAS3C,cAU7EgC,EAAZ/jD,UAAA+kD,aAAI,SAAqBx2C,GACX,GAAA7J,GAAd,WAAA9F,KAAA8lD,SAAA7C,WAAA,MAAA,UAAA,QAAA,OAAeviD,EAAfoF,EAAA,GAAwBihD,EAAxBjhD,EAAA,GAGcw1C,EAAd,UAAAt7C,KAAA8lD,SAAA3C,WAAA,SAAA,QAAA,MAAA,UAAetiD,EAAfy6C,EAAA,GAAyB0L,EAAzB1L,EAAA,GAGY2L,GAAZpmD,EAAAmmD,GAAarmD,EAAbsmD,EAAA,GAAsBC,EAAtBD,EAAA,GACcE,GAAdzmD,EAAAqmD,GAAenmD,EAAfumD,EAAA,GAAyBC,EAAzBD,EAAA,EAGannD,MAAK8lD,SAAStC,iBACf7iD,EAAuB,QAAbE,EAAqB,SAAW,MAC1CqmD,EAAuC,QAArBF,EAA6B,SAAW,OAG9Dr3C,EAAiBrK,gBACZ5E,QAAbA,EAAsBC,QAAtBA,EAA+BC,SAA/BA,EAAyCC,SAAzCA,EAAmDihB,QAR3B,IASXphB,QAASqmD,EAAiBpmD,QAAvCA,EAAgDC,SAAUwmD,EAAkBvmD,SAA5EA,EAAsFihB,QAT9D,IAWRphB,QAAhBA,EACgBC,QAASumD,EACTtmD,SAAhBA,EACgBC,SAAUmmD,EACVllC,SAfQ,IAkBRphB,QAASqmD,EACTpmD,QAASumD,EACTtmD,SAAUwmD,EACVvmD,SAAUmmD,EACVllC,SAtBQ,MA4BZqjC,EAAZ/jD,UAAA6kD,sBAAI,WACIjmD,KAAK4lD,mBAAmB9wC,cACxB9U,KAAK6lD,mBAAmB/wC,eAIpBqwC,EAAZ/jD,UAAAilD,gBAAI,WACJ,GAAcgB,GAAWrnD,KAAgB,YAAE8L,gBAC7B4R,EAAc1d,KAAgB,YAAE0d,aAEtC,OAAO7R,GAAAA,MAAMw7C,EAAU3pC,mBA3T/BrX,KAACC,EAAAA,UAADC,OACIC,SAAU,yBACVE,MACI4gD,eAAgB,sBAChBn2C,UAAW,YAEf1K,SAAU,4DAzCdJ,KAAIQ,EAAAA,UAfJR,KAAIS,EAAAA,aAQJT,KAAIY,EAAAA,mBAuFJZ,SAAAa,GAAAC,aAAAd,KAAiBe,EAAAA,OAAjBb,MAAwBy+C,QApFxB3+C,KAAoBiB,EAAAA,eAApBH,aAAAd,KAqFiBkB,EAAAA,aAtFjBlB,KAAS+T,EAAAA,kCAiET0rC,WAAAz/C,KAAKqB,EAAAA,MAALnB,MAAW,0BAGX3B,OAAAyB,KAAKqB,EAAAA,MAALnB,MAAW,2BAGXi/C,iBAAAn/C,KAAKmB,EAAAA,SAGLi+C,iBAAAp/C,KAAKmB,EAAAA,UA2RL29C,KCxWAoC,GAAA,WAAA,QAAAA,MAS+B,sBAT/BlhD,KAAC8B,EAAAA,SAAD5B,OACI+B,SACIC,EAAAA,aACAC,EAAAA,eAEJH,SAAUs6C,GAAYrB,GAAgB6D,GAAmBJ,IACzD38C,cAAeu6C,GAAYrB,GAAgB6D,GAAmBJ,IAC9Dt8C,WAAYw8C,QAEhBsC,KChBAC,GAAA,WAAA,QAAAA,MAcA,sBAdAnhD,KAACgL,EAAAA,UAAD9K,OACIC,SAAU,aACVwO,qBAAqB,EACrB1D,SAAJ,4BACI2D,QACI,mDAIJvO,MACI+gD,4BAA6B,YAIrCD,KCdAE,GAAA,WAAA,QAAAA,MAcA,sBAdArhD,KAACgL,EAAAA,UAAD9K,OACIC,SAAU,YACVwO,qBAAqB,EACrB1D,SAAJ,4BACI2D,QACI,mDAIJvO,MACIihD,2BAA4B,YAIpCD,KCdAE,GAAA,WAAA,QAAAA,MAcA,sBAdAvhD,KAACgL,EAAAA,UAAD9K,OACIC,SAAW,YACXwO,qBAAqB,EACrB1D,SAAJ,4BACI2D,QACI,mDAIJvO,MACImhD,2BAA4B,YAIpCD,KCdAE,GAAA,WAAA,QAAAA,KAaI9nD,KAAJ+nD,YAAiB,EACjB,sBAdA1hD,KAACgL,EAAAA,UAAD9K,OACIC,SAAU,YACVwO,qBAAqB,EACrBC,QAAS,sfACT3D,SAAJ,4BACI5K,MACIshD,oBAAqB,OACrBC,gCAAiC,cAErC/+C,cAAeC,EAAAA,kBAAkBC,KACjCL,gBAAiBC,EAAAA,wBAAwBC,WAI7C6+C,KCFAI,GAAA,WA2DI,QAAJA,GACoCC,GAAAnoD,KAApCmoD,kBAAoCA,EA5CvBnoD,KAAbooD,SAAwB,IACXpoD,KAAbqoD,iBAAgC,GAqBlBroD,KAAdsoD,kBAAkC,GAAIxwC,GAAAA,aAE1B9X,KAAZsgD,WAAwB,EACZtgD,KAAZuoD,aAA0B,EA2B1B,MAjDIpoD,QAAJ2M,eACQo7C,EADR9mD,UAAA,qBAKI,WACI,MAAOpB,MAAKuoD,iBANhB,SACkBrmD,GACdlC,KAAKuoD,YAAc3d,EAAU1oC,oCAOjC/B,OAAJ2M,eACQo7C,EADR9mD,UAAA,mBAKI,WACI,MAAOpB,MAAKsgD,eANhB,SACgBp+C,GACZlC,KAAKsgD,UAAY1V,EAAU1oC,oCAa/B/B,OAAJ2M,eAAQo7C,EAAR9mD,UAAA,cAAI,WACI,MAAIpB,MAAKwoD,YACE,OAAOxoD,KAAKqoD,iBAA/B,KAEmB,OAAOroD,KAAKo3C,QAA/B,sCAIIj3C,OAAJ2M,eAAQo7C,EAAR9mD,UAAA,eAAI,WACI,MAAIpB,MAAKwoD,YACExoD,KAAKqoD,iBAELroD,KAAKooD,0CAQpBF,EAAJ9mD,UAAAgB,SAAI,WACQpC,KAAKmoD,oBACLnoD,KAAKmoD,kBAAkBJ,YAAa,mBAjEhD1hD,KAACgL,EAAAA,UAAD9K,OACIC,SAAU,aACVwO,qBAAqB,EACrB1D,SAAJ,0EACI5K,MACI+hD,4BAA6B,OAC7BC,sCAAuC,cACvCC,eAAgB,SAChBC,uBAAwB,UACxBC,uBAAwB,UACxBC,mBAAoB,WAExB//C,gBAAiBC,EAAAA,wBAAwBC,+CAf7C5C,KAASyhD,GAAT3gD,aAAAd,KA+DSkB,EAAAA,WA/DTlB,KA+DqB0iD,EAAAA,4BA5CrBX,WAAA/hD,KAAKqB,EAAAA,QACL2gD,mBAAAhiD,KAAKqB,EAAAA,QAELshD,gBAAA3iD,KAAKqB,EAAAA,QASL8gD,cAAAniD,KAAKqB,EAAAA,QAUL4gD,oBAAAjiD,KAAKmB,EAAAA,UA8BL0gD,KCzEAe,GAAA,WAAA,QAAAA,MAkBA,sBAlBA5iD,KAAC8B,EAAAA,SAAD5B,OACI+B,SAAWC,EAAAA,cACXF,SACIy/C,GACAN,GACAE,GACAE,GACAM,IAEJ9/C,cACI0/C,GACAN,GACAE,GACAE,GACAM,QAIRe,KCcApU,GAAA,WA+DI,QAAJA,GACgBV,EACAjK,EAEDgf,GAHClpD,KAAhBm0C,SAAgBA,EACAn0C,KAAhBkqC,gBAAgBA,EAEDlqC,KAAfkpD,cAAeA,EAhDXlpD,KAAJmpD,WAAyB,EAOZnpD,KAAbopD,iBAAoD,QAkCxCppD,KAAZoqC,WAAwB,EACZpqC,KAAZmS,WAAwB,EA8FxB,MA7HIhS,QAAJ2M,eACQ+nC,EADRzzC,UAAA,gBAAI,WAEI,MAAOpB,MAAKmS,WAAcnS,KAAKkpD,eAAiBlpD,KAAKkpD,cAAcrlD,cAGvE,SAAa3B,GACjB,GAAcgnB,GAAW0hB,EAAU1oC,EAEvBgnB,KAAalpB,KAAKmS,YAClBnS,KAAKmS,UAAY+W,EACjBlpB,KAAKkqC,gBAAgBjpC,iDAI7Bd,OAAJ2M,eACQ+nC,EADRzzC,UAAA,gBAAI,WAEI,MAAOpB,MAAKkpD,cAAcvzB,iBAAmB31B,KAAKkpD,cAAcvzB,gBAAgBjX,WAAW1e,QAAS,OAGxG,SAAakC,GACjB,GAAcwc,GAAaksB,EAAU1oC,EAEzBwc,KAAe1e,KAAKoqC,YACpBpqC,KAAK6tC,YAAYnvB,GAEjB1e,KAAKkpD,cAAcG,uDAe3BxU,EAAJzzC,UAAAgB,SAAI,WAAA,GAAJrC,GAAAC,IACQ,IAAIA,KAAKoqC,UAAW,CAM5B,GAAkBkf,GAActpD,KAAKoqC,SAEzB/Q,SAAQC,UAAUC,KAAK,YACfx5B,EAAKqqC,WAAakf,KAClBvpD,EAAK4e,UAAW,EAChB5e,EAAKmqC,gBAAgBjpC,oBAMrC4zC,EAAJzzC,UAAAszB,mBAAI,WACI10B,KAAKupD,YAAc,GAAIC,IAAaxpD,KAAKs0C,OAAQt0C,KAAKm0C,WAG1DU,EAAJzzC,UAAAkB,YAAI,WAAA,GAAJvC,GAAAC,IACYA,MAAK2e,UAGL0a,QAAQC,UAAUC,KAAK,WAAM,MAAAx5B,GAAK4e,UAAW,IAGjD3e,KAAKkpD,cAAcO,sBAAsBzpD,OAG7C60C,EAAJzzC,UAAA8zB,OAAI,WACIl1B,KAAK2e,UAAY3e,KAAK2e,UAG1Bk2B,EAAJzzC,UAAAiX,MAAI,WACIrY,KAAKm0C,SAASvyC,cAAcyW,QAE5BrY,KAAKkpD,cAAc7a,iBAAiBruC,OAGxC60C,EAAJzzC,UAAAqgD,SAAI,WACI,MAAOzhD,MAAK0pD,MAAQ1pD,KAAK0pD,MAAM9nD,cAAcm/B,YAAc,IAG/D8T,EAAJzzC,UAAAysC,YAAI,SAAYlvB,GACJ3e,KAAKoqC,YAAczrB,GAAa3e,KAAKkpD,cAAcvzB,kBAEvD31B,KAAKoqC,UAAYzrB,EAEbA,EACA3e,KAAKkpD,cAAcvzB,gBAAgB/W,OAAO5e,MAE1CA,KAAKkpD,cAAcvzB,gBAAgB9W,SAAS7e,MAGhDA,KAAKkqC,gBAAgBjpC,iBAGzB4zC,EAAJzzC,UAAAuoD,WAAI,WACI,MAAO3pD,MAAKm0C,SAASvyC,cAAcssC,iBAAiB,GAAGhrB,QAG3D2xB,EAAJzzC,UAAAwoD,aAAI,WACQ5pD,KAAK6D,UAET7D,KAAKkpD,cAAc7a,iBAAiBruC,OAGxC60C,EAAJzzC,UAAAyoD,aAAI,WACQ7pD,KAAK6D,UAAY7D,KAAKmpD,YAE1BnpD,KAAKmpD,WAAY,IAGrBtU,EAAJzzC,UAAA0oD,YAAI,WACI9pD,KAAKmpD,WAAY,EAEjBnpD,KAAKkpD,cAAc1zB,cAGvBqf,EAAJzzC,UAAAizC,gBAAI,WACI,MAAOr0C,MAAKm0C,SAASvyC,8BAzJ7ByE,KAACgL,EAAAA,UAAD9K,OACIE,SAAU,eACVD,SAAU,iBACVE,MACI+C,SAAU,KAEVD,MAAO,iBACP+kC,sBAAuB,WACvBwb,qBAAsB,YACtB7lC,UAAW,iBACXC,SAAU,gBACVhT,UAAW,kBAEfG,SAAJ,0GACIpI,cAAeC,EAAAA,kBAAkBC,KACjC4L,qBAAqB,EACrBjM,gBAAiBC,EAAAA,wBAAwBC,+CApD7C5C,KAAIS,EAAAA,aAOJT,KAAI2D,EAAAA,oBAgGJ3D,KAA8BuuC,GAA9BztC,aAAAd,KADSe,EAAAA,OACTb,MADgBmT,EAAAA,WAAW,WAAM,MAAAk7B,8BA7CjCN,SAAAjuC,KAAK00B,EAAAA,gBAALx0B,MAAqBguC,MAErBmV,QAAArjD,KAAKiE,EAAAA,UAAL/D,MAAe,UAGf6iD,mBAAA/iD,KAAKqB,EAAAA,QAELxF,QAAAmE,KAAKqB,EAAAA,QAEL7D,WAAAwC,KAAKqB,EAAAA,QAcLiX,WAAAtY,KAAKqB,EAAAA,SA+GLmtC,KAGamV,IACTzwC,QAASC,EAAAA,kBACTC,YAAaC,EAAAA,WAAW,WAAM,MAAAk7B,MAC9Bj7B,OAAO,iBAKP,QAAJswC,GAEe3wC,EAEAiF,GAFAve,KAAfsZ,OAAeA,EAEAtZ,KAAfue,OAAeA,EAEf,MAAA0rC,MAGAC,GAAA,WAAA,QAAAA,MAAkC,MAAlCA,MAEaC,GACPtzC,EAAcqzC,IAEpBtV,GAAA,SAAA19B,GAiDI,QAAJ09B,GACgBT,EACe98B,EACG2O,EACA8oB,EACH1wB,GAL3B,GAAJre,GAOQmX,EAPRI,KAAAtX,OAAAA,WACgBD,GAAhBo0C,SAAgBA,EAbHp0C,EAAbqqD,YAAmC,EAGZrqD,EAAvBigB,gBAA8E,GAAIlI,GAAAA,aAOtE/X,EAAZsqD,cAA4BvtB,EAAAA,aAAaC,MAoKrCh9B,EAAJy1B,WAA6B,aAiGjBz1B,EAAZ21B,UAA8C,SAACzd,KA1PvClY,EAAKimB,WAA4B,OAAfA,GAA6B4kB,EAAU5kB,GACzDjmB,EAAKqe,SAAwB,OAAbA,GAA2BwsB,EAAUxsB,GACrDre,EAAK+uC,WAA4B,OAAfA,GAA6BlE,EAAUkE,GAEzD/uC,EAAKsX,SAAWrV,SAASqV,IAAa,EAEtCtX,EAAK41B,gBAAkB,GAAIrB,GAAAA,eAA6Bv0B,EAAKqe,YAqPrE,MAlSqCjG,GAArCy8B,EAAA19B,GAgDI09B,EAAJxzC,UAAAszB,mBAAI,WACI10B,KAAKoqD,WAAaxf,EAAU5qC,KAAKoqD,YAEjCpqD,KAAKgkD,YAAc,GAAIvjB,GAAAA,gBAA8BzgC,KAAK+d,SACrDmc,gBACAC,yBAAyBn6B,KAAKoqD,YAC9Bh1B,0BAA0Bp1B,KAAKoqD,WAAa,MAAQ,MAErDpqD,KAAKsqD,cACLtqD,KAAKuqD,sBAAsBvqD,KAAKsqD,aAChCtqD,KAAKsqD,YAAc,MAIvBtqD,KAAKqqD,cAAgBrqD,KAAK21B,gBAAwB,SAAEnxB,UAAU,SAAC7B,GAC3D,IAAmB,GAA/B6nD,GAAA,EAA+B1kD,EAAAnD,EAAMkyB,MAAN21B,EAA/B1kD,EAAA6I,OAA+B67C,IAAa,CAA3B,GAAM32C,GAAvB/N,EAAA0kD,EACgB32C,GAAK8K,UAAW,EAGpB,IAAmB,GAA/B28B,GAAA,EAA+B2L,EAAAtkD,EAAMmyB,QAANwmB,EAA/B2L,EAAAt4C,OAA+B2sC,IAAe,CAA7B,GAAMznC,GAAvBozC,EAAA3L,EACgBznC,GAAK8K,UAAW,KAIxB3e,KAAK2vC,oBAGTiF,EAAJxzC,UAAAkB,YAAI,WACItC,KAAKqqD,cAAcv1C,eAGvB8/B,EAAJxzC,UAAAiX,MAAI,WACIrY,KAAKm0C,SAASvyC,cAAcyW,SAGhCu8B,EAAJxzC,UAAAqpD,UAAI,WACIzqD,KAAK+d,QAAQtb,QAAQ,SAAC8b,GAAW,MAAAA,GAAOsvB,aAAY,KAEpD7tC,KAAKqpD,sBAGTzU,EAAJxzC,UAAAspD,YAAI,WACI1qD,KAAK+d,QAAQtb,QAAQ,SAAC8b,GAAW,MAAAA,GAAOsvB,aAAY,KAEpD7tC,KAAKqpD,sBAGTzU,EAAJxzC,UAAAuuC,iBAAI,YACQ3vC,KAAKoqD,YAAepqD,KAAK+d,QAAQ4c,OAErC36B,KAAKgkD,YAAYpU,eAAeruB,KAAKsuB,MAAM7vC,KAAK2pD,aAAe3pD,KAAK+d,QAAQ4c,MAAMgvB,gBAItF/U,EAAJxzC,UAAAitC,iBAAI,SAAiB9vB,GAGb,GAFAve,KAAKgkD,YAAYxkB,iBAAiBjhB,GAE9Bve,KAAKkvC,WAAalvC,KAAKoe,SAAU,CAC7C,GAAkB0xB,GAAgB9vC,KAAKgkD,YAAYjU,wBACjCC,EAAchwC,KAAKgkD,YAAYtjC,eAEjCovB,GAAgBE,EAChBhwC,KAAK+d,QAAQtb,QAAQ,SAACoR,EAAM1D,GACpBA,GAAS2/B,GAAiB3/B,GAAS6/B,GAAen8B,EAAKg6B,aAAY,KAG3E7tC,KAAK+d,QAAQtb,QAAQ,SAACoR,EAAM1D,GACpBA,GAAS6/B,GAAe7/B,GAAS2/B,GAAiBj8B,EAAKg6B,aAAY,KAI/E7tC,KAAKkvC,WAAY,MACd,IAAIlvC,KAAKmvC,SAAU,CAGtB,GAFAnvC,KAAKmvC,UAAW,GAEXnvC,KAAK2qD,iBAAiBpsC,GAAW,MAEtCA,GAAO2W,aAEHl1B,MAAKgmB,aACLhmB,KAAK+d,QAAQtb,QAAQ,SAACoR,GAAS,MAAAA,GAAKg6B,aAAY,KAChDtvB,EAAOsvB,aAAY,GAI3B7tC,MAAK+Y,iBAAiBwF,GACtBve,KAAKqpD,sBAITzU,EAAJxzC,UAAA4X,WAAI,SAAW4xC,GACH5qD,KAAK+d,QACL/d,KAAKuqD,sBAAsBK,OAE3B5qD,KAAKsqD,YAAcM,GAK3BhW,EAAJxzC,UAAA6X,iBAAI,SAAiBC,GACblZ,KAAK01B,UAAYxc,GAIrB07B,EAAJxzC,UAAA+X,kBAAI,SAAkBD,GACdlZ,KAAKw1B,WAAatc,GAItB07B,EAAJxzC,UAAAgY,iBAAI,SAAiBC,GACTrZ,KAAK+d,SACL/d,KAAK+d,QAAQtb,QAAQ,SAAC8b,GAAW,MAAAA,GAAO1a,SAAWwV,KAI3Du7B,EAAJxzC,UAAAypD,wBAAI,WACI,MAAO7qD,MAAK+d,QAAQ5S,OAAO,SAACoT,GAAW,MAAAA,GAAOI,WAAUiB,IAAI,SAACrB,GAAW,MAAAA,GAAOrc,SAInF0yC,EAAJxzC,UAAAkuC,oBAAI,WACJ,GAAca,GAAenwC,KAAKgkD,YAAYtjC,eAEtC,IAAoB,MAAhByvB,GAAwBnwC,KAAK8qD,cAAc3a,GAAe,CACtE,GAAkBC,GAA8BpwC,KAAK+d,QAAQsB,UAAU8wB,EAEvDC,IAAiBpwC,KAAK2qD,iBAAiBva,KACvCA,EAAclb,SAGdl1B,KAAK+Y,iBAAiBq3B,MAKlCwE,EAAJxzC,UAAAupD,iBAAI,SAAiBI,GACb,QAAS/qD,KAAK8uC,YAAuD,IAAzC9uC,KAAK21B,gBAAgBhX,SAAShQ,QAAgBo8C,EAAWpsC,WAGzFi2B,EAAJxzC,UAAAuoD,WAAI,WACI,MAAO3pD,MAAKm0C,SAASvyC,cAAcssC,iBAAiB,GAAGhrB,QAO3D0xB,EAAJxzC,UAAAqoD,sBAAI,SAAsBlrC,GAClB,GAAIA,EAAO4qC,UAAW,CAC9B,GAAkB6B,GAAchrD,KAAKirD,gBAAgB1sC,EAGrCysC,GAAc,EACdhrD,KAAKgkD,YAAYkH,wBACM,IAAhBF,GAAqBhrD,KAAK+d,QAAQpP,OAAS,GAClD3O,KAAKgkD,YAAYmH,sBAK7BvW,EAAJxzC,UAAAgqD,WAAI,SAAWzoD,GACf,GAAcU,GAAUV,EAAMU,OAItB,QAHArD,KAAKkvC,UAAYvsC,EAAMw2B,SACvBn5B,KAAKmvC,SAAWxsC,EAAMq2B,QAEd31B,GACJ,IAAKk1B,GAAAA,MACL,IAAKD,GAAAA,MACDt4B,KAAKsvC,sBACL3sC,EAAMkqB,gBAEN,MACJ,KAAK8L,GAAAA,KACD34B,KAAKgkD,YAAYzjC,qBACjB5d,EAAMkqB,gBAEN,MACJ,KAAK+L,GAAAA,IACD54B,KAAKgkD,YAAYnrB,oBACjBl2B,EAAMkqB,gBAEN,MACJ,KAAK0iB,GAAAA,QACIvvC,KAAKoqD,YAAcpqD,KAAKgkD,YAAYxU,4BAEzC7sC,EAAMkqB,gBAEN,MACJ,KAAK4iB,GAAAA,UACIzvC,KAAKoqD,YAAcpqD,KAAKgkD,YAAYtU,wBAEzC/sC,EAAMkqB,gBAEN,MACJ,SACI7sB,KAAKgkD,YAAYvrB,UAAU91B,KAKvCiyC,EAAJxzC,UAAAioD,mBAAI,WACQrpD,KAAK+d,SACL/d,KAAK01B,UAAU11B,KAAK6qD,4BAK5BjW,EAAJxzC,UAAA2X,iBAAI,SAAiBwF,GACbve,KAAKggB,gBAAgBlb,KAAK,GAAImlD,IAAsBjqD,KAAMue,KAItDq2B,EAAZxzC,UAAAiqD,kBAAI,SAA0BnpD,GACtB,MAAOlC,MAAK+d,QAAQ1P,KAAK,SAACkQ,GAAW,MAAAA,GAAOrc,QAAUA,KAIlD0yC,EAAZxzC,UAAAmpD,sBAAI,SAA8BK,GAA9B,GAAJ7qD,GAAAC,IACQA,MAAK+d,QAAQtb,QAAQ,SAAC8b,GAAW,MAAAA,GAAOsvB,aAAY,KAEpD+c,EACKhrC,IAAI,SAAC1d,GAAU,MAAAnC,GAAKsrD,kBAAkBnpD,KACtCiJ,OAAOjB,SACPzH,QAAQ,SAAC8b,GAAW,MAAA,GAAQsvB,aAAY,MAQzC+G,EAAZxzC,UAAA0pD,cAAI,SAAsB36C,GAClB,MAAOA,IAAS,GAAKA,EAAQnQ,KAAK+d,QAAQpP,QAItCimC,EAAZxzC,UAAA6pD,gBAAI,SAAwB1sC,GACpB,MAAOve,MAAK+d,QAAQsB,UAAUjP,QAAQmO,mBAhT9ClY,KAACgL,EAAAA,UAAD9K,OACIE,SAAU,kBACVD,SAAU,oBACV8K,SAAU,4BACV2D,QAAS,orGACTlM,gBAAiBC,EAAAA,wBAAwBC,OACzCC,cAAeC,EAAAA,kBAAkBC,KACjCwQ,QAAS,WAAY,YACrBlT,MACI8C,MAAO,oBACP8hD,aAAc,WACdpnC,UAAW,UACXC,SAAU,eACVxd,YAAa,qBACbyd,kBAAmB,sBAEvB3b,WAAYuhD,IACZh1C,qBAAqB,0CAzOzB3O,KAAIS,EAAAA,aA2QJT,KAAAgU,OAAAlT,aAAAd,KAASiU,EAAAA,UAAT/T,MAAmB,gBACnBF,KAAAgU,OAAAlT,aAAAd,KAASiU,EAAAA,UAAT/T,MAAmB,mBACnBF,KAAAgU,OAAAlT,aAAAd,KAASiU,EAAAA,UAAT/T,MAAmB,mBACnBF,KAAAgU,OAAAlT,aAAAd,KAASiU,EAAAA,UAAT/T,MAAmB,mCA7BnBwX,UAAA1X,KAAK00B,EAAAA,gBAALx0B,MAAqBsuC,MAYrBuV,aAAA/jD,KAAKqB,EAAAA,QAGLsY,kBAAA3Z,KAAKmB,EAAAA,UA6QLotC,GAlSqCuV,ItBxOrCoB,GAAA,WAAA,QAAAA,MAAyB,MAAzBA,MAEA5W,GAAA,SAAAz9B,GAAA,QAAAy9B,oDAQwC,MAAZx8B,GAA5Bw8B,EAAAz9B,kBARA7Q,KAACgL,EAAAA,UAAD9K,OACIC,SAAU,UACVE,MAAQ8C,MAAO,WACf8H,SAAU,4BACV2D,QAAS,orGACTlM,gBAAiBC,EAAAA,wBAAwBC,OACzCC,cAAeC,EAAAA,kBAAkBC,SAErCurC,GAA4B4W,IAO5BzW,GAAA,WAAA,QAAAA,MAIuC,sBAJvCzuC,KAACC,EAAAA,UAADC,OACIC,SAAU,gCACVE,MAAQ8C,MAAO,oBAEnBsrC,mBAIA,QAAAN,MAA6B,MAA7BA,MAEAJ,GAAA,SAAAl9B,GAiBI,QAAJk9B,GAAwBD,GAApB,GAAJp0C,GACQmX,EADRI,KAAAtX,OAAAA,WAAwBD,GAAxBo0C,SAAwBA,IAmBxB,MAxBgCh8B,GAAhCi8B,EAAAl9B,GASIk9B,EAAJhzC,UAAAszB,mBAAI,WACI10B,KAAKupD,YAAc,GAAIC,IAAaxpD,KAAKs0C,OAAQt0C,KAAKm0C,WAG1DC,EAAJhzC,UAAAyoD,aAAI,WACI7pD,KAAKm0C,SAASvyC,cAAcgyB,UAAUC,IAAI,eAG9CugB,EAAJhzC,UAAA0oD,YAAI;mCACI9pD,KAAKm0C,SAASvyC,cAAcgyB,UAAUiE,OAAO,eAGjDuc,EAAJhzC,UAAAizC,gBAAI,WACI,MAAOr0C,MAAKm0C,SAASvyC,8BAlC7ByE,KAACgL,EAAAA,UAAD9K,OACIC,SAAU,gCACVE,MACI8C,MAAO,eACP0a,UAAW,iBACXC,SAAU,iBAEd7S,SAAJ,yNACIpI,cAAeC,EAAAA,kBAAkBC,KACjC4L,qBAAqB,EACrBjM,gBAAiBC,EAAAA,wBAAwBC,+CA5C7C5C,KAAsFS,EAAAA,gCA+CtFwtC,SAAAjuC,KAAK00B,EAAAA,gBAALx0B,MAAqBguC,OAuBrBH,GAxBgCI,ICrChCC,GAAA,WAAA,QAAAA,MAqB2B,sBArB3BpuC,KAAC8B,EAAAA,SAAD5B,OACI+B,SACIC,EAAAA,aACAiS,EAAAA,WACAk6B,IAEJrsC,SACIssC,GACAC,GACAR,GACAS,GACAC,IAEJ1sC,cACIusC,GACAC,GACAR,GACAS,GACAC,QAGRL,KCXAM,GAAA,WACI,QAAJA,GAAuBt+B,GAAAzW,KAAvByW,YAAuBA,EAEvB,MAAAs+B,MAEaC,GACPr+B,EAAcE,EAAck+B,KAElCE,GAAA,SAAA/9B,GAgCI,QAAJ+9B,GAC+B59B,EAChBzU,EACCuU,EACA+yB,GAJZ,GAAJnqC,GAMQmX,EANRI,KAAAtX,KAMc4C,IANd5C,WAEeD,GAAf6C,WAAeA,EACC7C,EAAhBoX,cAAgBA,EACApX,EAAhBmqC,gBAAgBA,EANJnqC,EAAZoS,WAAwB,EAShBpS,EAAKoX,cAAce,QAAQtV,EAAWhB,eAAe,GACrD7B,EAAKsX,SAAWrV,SAASqV,IAAa,IAc9C,MAxC4Bc,GAA5B88B,EAAA/9B,GAEI/W,OAAJ2M,eACQmoC,EADR7zC,UAAA,gBAAI,WAEI,MAAOpB,MAAKmS,eAGhB,SAAajQ,GACjB,GAAcgnB,GAAW0hB,EAAU1oC,EAEvBgnB,KAAalpB,KAAKmS,YAClBnS,KAAKmS,UAAY+W,EACjBlpB,KAAKkqC,gBAAgBjpC,iDAiB7Bg0C,EAAJ7zC,UAAAkB,YAAI,WACItC,KAAKmX,cAAciB,eAAepY,KAAK4C,WAAWhB,gBAGtDqzC,EAAJ7zC,UAAAiX,MAAI,WACIrY,KAAKq0C,kBAAkBh8B,SAG3B48B,EAAJ7zC,UAAAizC,gBAAI,WACI,MAAOr0C,MAAK4C,WAAWhB,8BApD/ByE,KAACgL,EAAAA,UAAD9K,OACIC,SAAU,YACV8K,SAAU,4BACVvI,gBAAiBC,EAAAA,wBAAwBC,OACzCC,cAAeC,EAAAA,kBAAkBC,KACjC3C,SAAU,SACVwO,QAAS,mgCACT2E,QAAS,YACTlT,MACI4nC,kBAAmB,mBACnBvqB,kBAAmB,oDAuB3B1d,KAAAgU,OAAAlT,aAAAd,KAASiU,EAAAA,UAAT/T,MAAmB,gBA1DnBF,KAAIS,EAAAA,aAOJT,KAAS+T,EAAAA,eAHT/T,KAAI2D,EAAAA,uCAqCJnG,WAAAwC,KAAKqB,EAAAA,SAsCLutC,GAxC4BD,ICnC5BE,GAAA,WAAA,QAAAA,MAQ2B,sBAR3B7uC,KAAC8B,EAAAA,SAAD5B,OACI+B,SACIC,EAAAA,aACAiS,EAAAA,YAEJpS,cAAe6sC,IACf5sC,SAAU4sC,QAEdC,KCJAC,GAAA,WAyBI,QAAJA,GACwCC,GAAAp1C,KAAxCo1C,cAAwCA,EAZ5Bp1C,KAAZq1C,eAA2Cr1C,KAAKo1C,cAAgB,QAEpDp1C,KAAZs1C,kBAA+Ct1C,KAAKo1C,cAAgB,KAAO,GAAIrqC,GAAAA,QAEnE/K,KAAZu1C,sBAAsEv1C,KAAKo1C,cAAgB,KAAO,GAAI74B,KA6CtG,MA3DIpc,QAAJ2M,eAAQqoC,EAAR/zC,UAAA,qBAAI,WACI,MAAOpB,MAAKo1C,cAAgBp1C,KAAKo1C,cAAcI,cAAgBx1C,KAAsB,mDAIzFG,OAAJ2M,eAAQqoC,EAAR/zC,UAAA,kBAAI,WACI,MAAOpB,MAAKo1C,cAAgBp1C,KAAKo1C,cAAcK,WAAaz1C,KAAmB,gDAWnFG,OAAJ2M,eAAgBqoC,EAAhB/zC,UAAA,yBAAI,WACI,MAAOpB,MAAKo1C,cAAgBp1C,KAAKo1C,cAAcM,kBAAoB11C,KAAKu1C,uDAQ5EJ,EAAJ/zC,UAAAu0C,cAAI,SAAcC,GAAd,GAAJ71C,GAAAC,IACQ,KAAKA,KAAK61C,cAAcD,GAAW,CAC3C,GAAkBE,GAAwBF,EAASG,UAAUvxC,UAAU,WAAM,MAAAzE,GAAK01C,WAAWxnC,KAAK2nC,KAChFI,EAAyBJ,EAASK,WAAWzxC,UAAU,WAAM,MAAAzE,GAAKm2C,gBAAgBN,IAExF51C,MAAK01C,kBAAkBhyC,IAAIkyC,GAAWA,SAAlDA,EAA4DE,sBAA5DA,EAAmFE,uBAAnFA,MAIIb,EAAJ/zC,UAAAy0C,cAAI,SAAcD,GACV,MAAO51C,MAAK01C,kBAAkBS,IAAIP,IAItCT,EAAJ/zC,UAAAgN,SAAI,WAGI,IAFR,GAAYi2B,GAAIrkC,KAAKy1C,WAAW9mC,OAEjB01B,KACHrkC,KAAKy1C,WAAWpR,GAAGr4B,SAInBmpC,EAAZ/zC,UAAA80C,gBAAI,SAAwBN,GAC5B,GAAczlC,GAAQnQ,KAAKy1C,WAAWrlC,QAAQwlC,EAElCzlC,IAAS,IACTnQ,KAAKy1C,WAAWplC,OAAOF,EAAO,GAEzBnQ,KAAKy1C,WAAW9mC,QACjB3O,KAAKw1C,cAAcxyC,wBA3DnCqD,KAACiK,EAAAA,iDA0BDjK,KAAuD8uC,EAAvDhuC,aAAAd,KAASkB,EAAAA,WAATlB,KAAqBmK,EAAAA,cAqCrB2kC,mBClEA,QAAAiB,MAwCA,MAAAA,MC5CAC,GAAA,WAGI,QAAJA,GAAwBC,GAAAt2C,KAAxBs2C,SAAwBA,EAChBt2C,KAAKu2C,cAAgBvwC,GAAI,EAAGC,GAAI,GAChCjG,KAAKw2C,sBAYb,MATIH,GAAJj1C,UAAAq1C,qBAAI,WACI,MAAOz2C,MAAKu2C,cAGhBF,EAAJj1C,UAAAo1C,oBAAI,WAAA,GAAJz2C,GAAAC,IACQA,MAAKs2C,SAAS1yC,iBAAiB,QAAS,SAACjB,GACrC5C,EAAKw2C,cAAgBvwC,EAAGrD,EAAM+zC,QAASzwC,EAAGtD,EAAMg0C,YAG5DN,KAEAO,GAAe,GAAIP,IAAUC,UCe7BO,GAAA,SAAA3/B,GAuHI,QAAJ2/B,GACgBzxC,EACA6M,EACA6kC,EACAl0C,EACA2tC,EACAwG,EACAC,EACAC,EACkBX,GAT9B,GAAJv2C,GAWQmX,EAXRI,KAAAtX,OAAAA,WACgBD,GAAhBqF,QAAgBA,EACArF,EAAhBkS,SAAgBA,EACAlS,EAAhB+2C,IAAgBA,EACA/2C,EAAhB6C,WAAgBA,EACA7C,EAAhBwwC,cAAgBA,EACAxwC,EAAhBg3C,0BAAgBA,EACAh3C,EAAhBi3C,aAAgBA,EACAj3C,EAAhBk3C,eAAgBA,EACkBl3C,EAAlCu2C,SAAkCA,EAlHrBv2C,EAAbm3C,YAAsC,UAYlCn3C,EAAJib,YAAiB,EAEHjb,EAAd2E,gBAAgC,GAAIoT,GAAAA,aAEvB/X,EAAbo3C,SAAgC,IACnBp3C,EAAbq3C,QAAwC,IAK3Br3C,EAAbs3C,cAAqC,EAKjCt3C,EAAJu3C,aAAkB,EAKdv3C,EAAJw3C,SAAc,EAKVx3C,EAAJy3C,iBAAsB,EAMRz3C,EAAd03C,YAA4B,GAAI3/B,GAAAA,aAElB/X,EAAd23C,aAA6B,GAAI5/B,GAAAA,aAIpB/X,EAAb43C,SAAwB,UAKpB53C,EAAJ63C,cAAmB,EAEI73C,EAAvB83C,OAAsE,GAAI//B,GAAAA,aAMtE/X,EAAJ+3C,kBAAuB,EAEA/3C,EAAvBg4C,WAA0E,GAAIjgC,GAAAA,aAU1E/X,EAAJ2jB,gBAAsB,cA6CT3jB,EAAbi4C,eAA2F,WAAM,MAAAj4C,GAAKqF,QAAQyK,YAoV9G,MA/cwDsI,GAAxD0+B,EAAA3/B,GAYI/W,OAAJ2M,eACQ+pC,EADRz1C,UAAA,iBAAI,WACkB,MAAOpB,MAAKgb,gBAC9B,SAAc9Y,GAASlC,KAAKgb,WAAa9Y,mCAczC/B,OAAJ2M,eACQ+pC,EADRz1C,UAAA,kBAAI,WACmB,MAAOpB,MAAKs3C,iBAC/B,SAAep1C,GAASlC,KAAKs3C,YAAcp1C,mCAG3C/B,OAAJ2M,eACQ+pC,EADRz1C,UAAA,cAAI,WACe,MAAOpB,MAAKu3C,aAC3B,SAAWr1C,GAASlC,KAAKu3C,QAAUr1C,mCAGnC/B,OAAJ2M,eACQ+pC,EADRz1C,UAAA,sBAAI,WACuB,MAAOpB,MAAKw3C,qBACnC,SAAmBt1C,GAASlC,KAAKw3C,gBAAkBt1C,mCAenD/B,OAAJ2M,eACQ+pC,EADRz1C,UAAA,mBAAI,WACoB,MAAOpB,MAAK43C,kBAChC,SAAgB11C,GAASlC,KAAK43C,aAAe11C,mCAM7C/B,OAAJ2M,eACQ+pC,EADRz1C,UAAA,uBAAI,WACwB,MAAOpB,MAAK83C,sBACpC,SAAoB51C,GAASlC,KAAK83C,iBAAmB51C,mCAgBrD/B,OAAJ2M,eAAQ+pC,EAARz1C,UAAA,iBAAI,WACI,MAAOpB,MAAKy3C,YAAYprC,gDAI5BlM,OAAJ2M,eAAQ+pC,EAARz1C,UAAA,kBAAI,WACI,MAAOpB,MAAK03C,aAAarrC,gDAG7BlM,OAAJ2M,eAAQ+pC,EAARz1C,UAAA,cAAI,WACI,MAAOpB,MAAKi4C,0CAGhB93C,OAAJ2M,eAAQ+pC,EAARz1C,UAAA,kBAAI,WACI,MAAOpB,MAAKk4C,8CAIhB/3C,OAAJ2M,eAAQ+pC,EAARz1C,UAAA,cAAI,WACI,OAAQpB,KAAK6E,YAAc7E,KAAKqzB,gDAyBpCwjB,EAAJz1C,UAAAgB,SAAI,WAGQpC,KAAKm4C,YAAYn4C,KAAKo4C,YACtBp4C,KAAKq4C,uBAAuBr4C,KAAc,WAI1CA,KAAKs4C,eAAet4C,KAAKu4C,YACzBv4C,KAAKu4C,SAAWv4C,KAAKw4C,mBAAmBx4C,KAAa,WAIzDA,KAAKsN,UAA2C,kBAAxBtN,MAAKg4C,eAAgCh4C,KAAKg4C,iBAAmBh4C,KAAKg4C,eACtFh4C,KAAKsN,oBAAqBmrC,aAC1Bz4C,KAAKsN,UAAUyqB,YAAY/3B,KAAK4C,WAAWhB,eACpC5B,KAAKsN,oBAAqBorC,GAAAA,YAEjC14C,KAAKsN,UAAU9L,eAAeu2B,YAAY/3B,KAAK4C,WAAWhB,eAI9D5B,KAAKg3C,aAAarB,cAAc31C,OAQpC62C,EAAJz1C,UAAAyP,YAAI,SAAYC,GACJA,EAAQjM,WAER7E,KAAK24C,yBAAyB34C,KAAK6E,WAAYiM,EAAQjM,UAAU+zC,cAIzE/B,EAAJz1C,UAAA4zB,gBAAI,WAEQh1B,KAAK64C,qBACL74C,KAAK84C,cAAcC,OAAO/4C,KAAK64C,oBAAoBn3C,UAGnD1B,KAAKg5C,mBACJh5C,KAAKg5C,kBAA+B,cAAuB3gC,SAIpEw+B,EAAJz1C,UAAAkB,YAAI,WACQtC,KAAKsN,oBAAqBorC,GAAAA,YAC1B14C,KAAKsN,UAAU/K,WAIvBs0C,EAAJz1C,UAAA6L,KAAI,WACIjN,KAAKi5C,yBAAwB,IAGjCpC,EAAJz1C,UAAA4K,MAAI,SAAMN,GACF1L,KAAKi5C,yBAAwB,EAAOvtC,IAIxCmrC,EAAJz1C,UAAA4c,QAAI,SAAQtS,GACJ1L,KAAKgM,MAAMN,IAGfmrC,EAAJz1C,UAAA83C,UAAI,WACIl5C,KAAKm5C,gBAAgB,OAGzBtC,EAAJz1C,UAAAg4C,cAAI,WACIp5C,KAAKm5C,gBAAgB,WAGzBtC,EAAJz1C,UAAAi4C,YAAI,WACI,MAAOr5C,OAGX62C,EAAJz1C,UAAAk4C,uBAAI,WACI,MAAOt5C,MAAK64C,qBAGhBhC,EAAJz1C,UAAAm4C,oBAAI,WACI,MAAOv5C,MAAK64C,qBAAuB74C,KAAK64C,oBAAoB10C,UAGhE0yC,EAAJz1C,UAAAo4C,WAAI,WACI,MAAOx5C,MAAK4C,YAAc5C,KAAK4C,WAAWhB,eAG9Ci1C,EAAJz1C,UAAAq4C,YAAI,SAAYj5C,GAEJR,KAAK05C,QACL15C,KAAK25C,gBACJn5C,EAAa,OAAiBozB,UAAUgmB,SAAS,kBAClD55C,KAAK6E,WAEL7E,KAAKm5C,gBAAgB,WAK7BtC,EAAJz1C,UAAAy4C,YAAI,SAAYxzC,GACR,MAAOrG,MAAKk3C,cAAgB7wC,GAGhCwwC,EAAJz1C,UAAA6sB,UAAI,SAAUtrB,GAEFA,EAAMU,UAAYC,EAAAA,QAAUtD,KAAKsN,WAActN,KAAKsN,oBAAqBorC,GAAAA,aAEzE14C,KAAKgM,QACLrJ,EAAMkqB,mBAKdgqB,EAAJz1C,UAAA04C,gBAAI,WACQ95C,KAAK6E,WACL7E,KAAKm5C,gBAAgB,WAM7BtC,EAAJz1C,UAAA+3C,gBAAI,SAAgB9yC,GAAhB,GAAJtG,GAAAC,KACcga,GAAY+/B,GAAI/5C,KAAK63C,OAAQmC,OAAQh6C,KAAK+3C,YAAa1xC,GACvD4zC,GAAeF,GAAI,cAAeC,OAAQ,mBAAoB3zC,EAEpE,IAAI2T,YAAmBlC,GAAAA,aACnBkC,EAAQlV,KAAK9E,KAAKu5C,2BACf,IAAuB,kBAAZv/B,GAAwB,CAElD,GAAkBtO,GAASsO,EAAQha,KAAKu5C,uBAEtBW,EAAY,SAACC,GAAiC,OAAa,IAAZA,GAAsBp6C,EAAKiM,MAAK,GAErF,IAAIouC,EAAU1uC,GAAS,CACnB1L,KAAKi6C,IAAc,CACnC,IAAsBI,GAAa,SAACF,GAChBp6C,EAAKk6C,IAAc,EACnBC,EAAUC,GAEd,GAA0B5gB,KAAK8gB,GAAYC,MAAMD,OAEjDH,GAAUxuC,KAMtBmrC,EAAJz1C,UAAAm5C,iBAAI,SAAiBr4C,GACb,MAAwB,gBAAVA,IAAgC,KAAVA,GAIxC20C,EAAJz1C,UAAAo5C,cAAI,SAAct4C,GACV,MAAOA,aAAiBuL,GAAAA,aAI5BopC,EAAJz1C,UAAA+2C,YAAI,SAAYj2C,GACR,MAAOA,aAAiBu4C,GAAAA,MAI5B5D,EAAJz1C,UAAAk3C,eAAI,SAAep2C,GACX,MAAOs3B,OAAMC,QAAQv3B,IAAUA,EAAMyM,OAAS,GAI1CkoC,EAAZz1C,UAAAu3C,yBAAI,SAAiCl9B,EAAkBi/B,EAA2BC,GAA9E,GAAJ56C,GAAAC,IAMQ,YANR,KAAA06C,IAAuDA,GAAvD,GAEYj/B,GACAzb,KAAK46C,mBAAmB,GAGrBvhB,QACFC,QAAQohB,GAAa16C,KAAK66C,UAAUp/B,IAEpC8d,KAAK,WACE9d,EACA1b,EAAK03C,YAAY3yC,QAEjB/E,EAAK23C,aAAa5yC,KAAK61C,GAEvB56C,EAAK66C,yBAQrB/D,EAAJz1C,UAAA05C,sBAAI,SAAsB/8B,EAAiCg9B,GAC3D,GAAc74C,GAAQ6b,EAAQg9B,GAChBx0C,IAKN,OAJIvG,MAAK64C,qBACLtyC,EAAK0H,KAAKjO,KAAK64C,oBAAoB10C,UAGf,kBAAVjC,GAAuBA,EAAMm4B,MAAMtc,EAASxX,GAAQrE,GAMtE20C,EAAJz1C,UAAA45C,cAAI,SAAcC,GAElB,GAAcvvC,GAAS1L,KAAK86C,sBAAsBG,EAAQ,UAC9Cb,GAAU1uC,KACVuvC,EAAOC,SAAU,EACjB,EAAwB3hB,KAAK,WAAM,MAAA0hB,GAAOC,SAAU,IAAOZ,MAAM,WAAM,MAAAW,GAAOC,SAAU,MAKxFrE,EAAZz1C,UAAA63C,wBAAI,SAAgCx9B,EAAkBk/B,GAC9C,MAAI36C,MAAK6E,YAAc4W,GAEnBzb,KAAK6E,UAAY4W,EACjBzb,KAAK0E,gBAAgBI,KAAK2W,GAEnBzb,KAAK24C,yBAAyBl9B,GAAS,EAAMk/B,IAGjDthB,QAAQC,WAGXud,EAAZz1C,UAAA+5C,qBAAI,SAA6BzlC,UACzB1V,MAAKqzB,eAAiB3d,EAClBA,GACA1V,KAAKo7C,uBAAjBt1C,KACgBA,EAAC,QAAQ4P,IAAU,EACnB5P,EAAC,QAAQ4P,EAAzB,YAA0C,EAC1C5P,GACY9F,KAAKq7C,wBAAjBC,KACgBA,EAAC,QAAQ5lC,IAAU,EACnB4lC,EAAC,QAAQ5lC,EAAzB,YAA0C,EAC1C4lC,IAGYt7C,KAAKo7C,sBAAwBp7C,KAAKq7C,uBAAyB,KAG3Dr7C,KAAK64C,oBACL74C,KAAK64C,oBAAoB34B,kBAAkBjf,eAE3CjB,KAAKi3C,eAAeh2C,gBAIpB41C,EAAZz1C,UAAAy5C,UAAI,SAAkBU,GAAlB,GAAJx7C,GAAAC,IAWQ,OATIu7C,IAGA7yB,OAAO/X,WAAW,WAAM,MAAA5Q,GAAKy7C,0BAGjCx7C,KAAKm7C,qBAAqBI,EAAY,QAAU,SAGzC,GAAIliB,SAAQ,SAACC,GAAY,MAAA5Q,QAAO/X,WAAW,WAC9C5Q,EAAKo7C,qBAAqB,MAC1B7hB,KApZ0B,QAwZ1Bud,EAAZz1C,UAAAo3C,mBAAI,SAA2BiD,GACvB,MAAOA,GAAQ77B,IAAI,SAACq7B,GAEhB,MAAZ11C,IAEoBc,KAAM,UACNsM,KAAM,UACN+oC,aAAa,EACb/3C,MAAM,EACNu3C,SAAS,EACTr3C,UAAU,GAEXo3C,MAUPpE,EAAZz1C,UAAAi3C,uBAAI,SAA+BsD,GACnC,GAAcC,GAAU57C,KAAK82C,IAAI+E,wBAAwBF,GAC3CG,EAAgBvrC,EAAAA,SAASV,QAC3BpH,YAAa8Q,QAAS68B,GAAYvkB,SAAU7xB,OAC5C2tC,OAAQ3tC,KAAKuwC,cAAcwL,gBAG/B/7C,MAAK64C,oBAAsB+C,EAAQ/rC,OAAOisC,GAEtC97C,KAAKg8C,mBACL77C,OAAO87C,OAAOj8C,KAAK64C,oBAAoB10C,SAAUnE,KAAKg8C,mBAK1Dh8C,KAAK64C,oBAAoB34B,kBAAkBuT,iBAMvCojB,EAAZz1C,UAAAo6C,sBAAI,WACJ,GAAcU,GAAel8C,KAAKm8C,eAA4B,cAChD5F,EAAeF,GAAUI,sBAE3BF,KAEAv2C,KAAK0jB,gBAAqB6yB,EAAavwC,EAAIk2C,EAAazd,WAApE,OAAoF8X,EAAatwC,EAAIi2C,EAAahlB,WAAlH,WAQY2f,EAAZz1C,UAAAw5C,mBAAI,SAA2BwB,OAA/B,KAAAA,IAA+BA,EAA/B,GAC2Bp8C,KAAKg3C,aAAavB,WAEtB9mC,OAASytC,EAAU,GAE9Bp8C,KAAKiS,SAASkB,SAASnT,KAAKs2C,SAAS+F,KAAM,gBAAoBr8C,KAAK+2C,0BAA0BuF,eAA1G,MACYt8C,KAAKiS,SAASkB,SAASnT,KAAKs2C,SAAS+F,KAAM,WAAY,YAEvDr8C,KAAKiS,SAAS8D,YAAY/V,KAAKs2C,SAAS+F,KAAM,iBAC9Cr8C,KAAKiS,SAAS8D,YAAY/V,KAAKs2C,SAAS+F,KAAM,6BAtd1Dh2C,KAACgL,EAAAA,UAAD9K,OACIC,SAAU,WACV8K,SAAJ,quHACI2D,QAAS,8lGACTlM,gBAAiBC,EAAAA,wBAAwBC,OACzCC,cAAeC,EAAAA,kBAAkBC,KACjC1C,MACIC,YAAa,6DAvBrBN,KAASQ,EAAAA,UARTR,KAAI6O,EAAAA,YAXJ7O,KAAI+3B,EAAAA,2BAEJ/3B,KAAIS,EAAAA,aAcJT,KAAIY,EAAAA,mBAIJZ,KAASk2C,KAGTl2C,KAAS8uC,KAzBT9uC,KAA4C2D,EAAAA,oBAqK5C3D,SAAAa,GAAAC,aAAAd,KAASe,EAAAA,OAATb,MAAgBi2C,EAAAA,iCAlHhBtF,cAAA7wC,KAAKqB,EAAAA,QAEL0wC,YAAA/xC,KAAKqB,EAAAA,QAELs0C,oBAAA31C,KAAKqB,EAAAA,QAEL6wC,WAAAlyC,KAAKqB,EAAAA,QAEL7C,YAAAwB,KAAKqB,EAAAA,QAMLhD,kBAAA2B,KAAKmB,EAAAA,SAEL2vC,WAAA9wC,KAAKqB,EAAAA,QACL0vC,UAAA/wC,KAAKqB,EAAAA,QACL+0C,kBAAAp2C,KAAKqB,EAAAA,QACLg1C,cAAAr2C,KAAKqB,EAAAA,QACLi1C,UAAAt2C,KAAKqB,EAAAA,QACLD,UAAApB,KAAKqB,EAAAA,QACL2vC,eAAAhxC,KAAKqB,EAAAA,QAELk1C,aAAAv2C,KAAKqB,EAAAA,QAKLgyC,SAAArzC,KAAKqB,EAAAA,QAKLiyC,iBAAAtzC,KAAKqB,EAAAA,QAKLm1C,cAAAx2C,KAAKqB,EAAAA,QACLo1C,cAAAz2C,KAAKqB,EAAAA,QAGL+vC,cAAApxC,KAAKmB,EAAAA,SAELkwC,eAAArxC,KAAKmB,EAAAA,SAGLywC,WAAA5xC,KAAKqB,EAAAA,QACLiwC,WAAAtxC,KAAKqB,EAAAA,QAELq1C,cAAA12C,KAAKqB,EAAAA,QAKLmwC,SAAAxxC,KAAKqB,EAAAA,QAALrB,KAAcmB,EAAAA,SACd0wC,eAAA7xC,KAAKqB,EAAAA,QAELs1C,kBAAA32C,KAAKqB,EAAAA,QAKLqwC,aAAA1xC,KAAKqB,EAAAA,QAALrB,KAAcmB,EAAAA,SAEd20C,iBAAA91C,KAAKiE,EAAAA,UAAL/D,MAAe,oBACfuyC,gBAAAzyC,KAAKiE,EAAAA,UAAL/D,MAAe,iBAAmB2tC,KAAMjtC,EAAAA,qBAExC+xC,oBAAA3yC,KAAKiE,EAAAA,UAAL/D,MAAe,qBAAuB2tC,KAAMptC,EAAAA,eAkD5CkxC,iBAAA3xC,KAAKqB,EAAAA,SAoVLmvC,GA/cwDT,IC9CxD6G,GAAA,WAAA,QAAAA,MASA,MALIA,GAAJ77C,UAAAwxB,UAAI,SAAU1wB,EAAwBg7C,OAAtC,KAAAA,IAAsCA,EAAtC,KACA,IAAcC,IAAaj7C,CAEnB,OAAO0uB,OAAMusB,GAAa,GAAGj7C,EAAU,GAAGi7C,EAAYD,kBAP9D72C,KAAC+2C,EAAAA,KAAD72C,OACIoR,KAAM,gBAQVslC,mBCUI,QAAJI,GAAwBj4C,EAAkB2Y,OAA1C,KAAAA,IAA0CA,KAAtC,IAAJhe,GAAAC,IAAwBA,MAAxBoF,QAAwBA,EAChBpF,KAAKs9C,cAEC,kBAAoBv/B,KACtBA,EAAQi6B,mBAAiB9wC,IAG7BlH,KAAKu9C,YAAYx/B,GACjB/d,KAAa,SAAEmE,SAAS8I,OACxBjN,KAAa,SAAEmE,SAASuzC,aAAalzC,UAAU,WAAM,MAAAzE,GAAKy9C,iBAE1Dx9C,KAAKqB,WAAW0K,gBAEX1H,KAAK8G,EAAAA,OAAO,SAACxI,GACV,MAAOA,GAAMU,UAAYC,EAAAA,QAAUya,EAAQs5B,gBAE9C7yC,UAAU,WAAM,MAAAzE,GAAa,SAAEoE,SAAS6H,UA0BrD,MAvBIqxC,GAAJj8C,UAAAi4C,YAAI,WACI,MAAOr5C,MAAK41C,UAAY51C,KAAK41C,SAASzxC,UAG1Ck5C,EAAJj8C,UAAAo8C,aAAI,WACQx9C,KAAK41C,WACL51C,KAAKqB,WAAWkB,UAChBvC,KAAK41C,SAAW,OAIhByH,EAAZj8C,UAAAm8C,YAAI,SAAoBx/B,GACZ/d,KAAK41C,UAELz1C,OAAO87C,OAAOj8C,KAAK41C,SAASzxC,SAAU4Z,IAKtCs/B,EAAZj8C,UAAAk8C,YAAI,WACIt9C,KAAKqB,WAAarB,KAAKoF,QAAQyK,SAC/B7P,KAAK41C,SAAW51C,KAAKqB,WAAW6C,OAAO,GAAIF,GAAAA,gBAAgB6yC,MAEnEwG,KAEAI,GAAA,WAWI,QAAJA,GACgBr4C,EACA4xC,GADAh3C,KAAhBoF,QAAgBA,EACApF,KAAhBg3C,aAAgBA,EAiEhB,MA3EI72C,QAAJ2M,eAAQ2wC,EAARr8C,UAAA,kBAAI,WACI,MAAOpB,MAAKg3C,aAAavB,4CAG7Bt1C,OAAJ2M,eAAQ2wC,EAARr8C,UAAA,qBAAI,WACI,MAAOpB,MAAKg3C,aAAaxB,cAAcnpC,gDAS3CoxC,EAAJr8C,UAAAgN,SAAI,WACIpO,KAAKg3C,aAAa5oC,YAGtBqvC,EAAJr8C,UAAAyO,OAAI,SAAUkO,GAkBN,WAlBR,KAAAA,IAAcA,MAE4B,kBAAvBA,GAAQg6B,aAGfh6B,EAAQg6B,WAAa,cAGnB,gBAAkBh6B,KACpBA,EAAQs5B,cAAe,GAIrB,WAAat5B,KAEfA,EAAQq5B,QAAU,KAGf,GAAIiG,IAAuBr9C,KAAKoF,QAAS2Y,GAASs7B,eAG7DoE,EAAJr8C,UAAAs8C,QAAI,SAAW3/B,EAA0C4/B,GAgBjD,WAhBR,KAAA5/B,IAAeA,UAAf,KAAA4/B,IAAyDA,EAAzD,WACY,YAAc5/B,IACdgc,QAAQC,KAAK,iFAIa,kBAAnBjc,GAAQ85B,SAGf95B,EAAQ85B,OAAS,cAGrB95B,EAAQm5B,YAAc,UACtBn5B,EAAQ2+B,YAAc,yBAAyBiB,EAAvD,KAAsE5/B,EAAQ2+B,aAAe,IACrF3+B,EAAQ47B,gBAAiB,EAElB35C,KAAK6P,OAAOkO,IAGvB0/B,EAAJr8C,UAAAw8C,QAAI,SAAW7/B,GACP,WADR,KAAAA,IAAeA,MACA/d,KAAK69C,cAAc9/B,EAAS,YAGvC0/B,EAAJr8C,UAAA08C,OAAI,SAAU//B,GACN,WADR,KAAAA,IAAcA,MACC/d,KAAK69C,cAAc9/B,EAAS,SAG/B0/B,EAAZr8C,UAAAy8C,cAAI,SAAyB9/B,EAA0C4/B,GAO/D,WAPR,KAAA5/B,IAA6BA,MAEf,gBAAkBA,KAEpBA,EAAQm6B,aAAe,MAGpBl4C,KAAK09C,QAAQ3/B,EAAS4/B,mBA5ErCt3C,KAACiK,EAAAA,iDA5DDjK,KAASQ,EAAAA,UAGTR,KAAS8uC,MAuITsI,KCnIAM,GAAA,WAAA,QAAAA,MAO6B,sBAP7B13C,KAAC8B,EAAAA,SAAD5B,OACI+B,SAAWC,EAAAA,aAAcC,EAAAA,cAAew1C,GAAgBlsC,IACxDzJ,SAAWwuC,IACXzuC,cAAgByuC,GAAkBoG,IAClCt0C,iBAAmBkuC,IACnBpuC,WAAa0sC,GAAuBsI,QAExCM,K9BOMpV,GAAsB,sBACtBsV,GAAiB,iBACjBC,GAAkB,kBAClBzV,GAAkB,kBAUxBQ,GAAA,WAAA,QAAAA,MAM2B,sBAN3B5iC,KAACC,EAAAA,UAADC,OACIC,SAVmB,iBAWnBE,MACI8C,MAZe,sBAevBy/B,KAEAD,GAAA,WAAA,QAAAA,MAM4B,sBAN5B3iC,KAACC,EAAAA,UAADC,OACIC,SAAU03C,GACVx3C,MACI8C,MAAO00C,QAGflV,KAEAF,GAAA,WAAA,QAAAA,MAM4B,sBAN5BziC,KAACC,EAAAA,UAADC,OACIC,SAAUiiC,GACV/hC,MACI8C,MAAOi/B,QAGfK,KAEAqV,GAAA,WACI,QAAJA,GAAuB1nC,GAAAzW,KAAvByW,YAAuBA,EACvB,MAAA0nC,MAEaC,GAA+DvnC,EAAcsnC,IAE1FpV,GAAA,SAAA7xB,GA2EI,QAAJ6xB,GACgBnmC,EACAuU,EACAknC,EACAC,GAJZ,GAAJv+C,GAMQmX,EANRI,KAAAtX,KAMc4C,IANd5C,WACgBD,GAAhB6C,WAAgBA,EACA7C,EAAhBoX,cAAgBA,EACApX,EAAhBs+C,UAAgBA,EACAt+C,EAAhBu+C,OAAgBA,EAjCZv+C,EAAJsX,SAAuB,EAGnBtX,EAAJw+C,iBAiBIx+C,EAAJy+C,aAA2B,EAEfz+C,EAAZ0+C,cAA0C,GAAI3hB,GAAAA,eA8G9C,MAvIkC3kB,GAAlC4wB,EAAA7xB,GAQI/W,OAAJ2M,eACQi8B,EADR3nC,UAAA,sBAAI,SACmBc,GACflC,KAAK4C,WAAWhB,cAAcgU,aAAa,gBAAiB8oC,UAAUx8C,qCAS1E/B,OAAJ2M,eAAQi8B,EAAR3nC,UAAA,0BAAI,WACI,MAAOpB,MAAKu+C,cAAc5vC,OAAS,mCAQvCxO,OAAJ2M,eAAgBi8B,EAAhB3nC,UAAA,yBAAI,WACI,MAAOpB,MAAK2+C,gBAAkB3+C,KAAK2+C,gBAAgB/8C,cAAco2B,iBAAiB,8CAYtF+Q,EAAJ3nC,UAAAgB,SAAI,WACIpC,KAAK4+C,sBAEL5+C,KAAK6+C,eAAiB7+C,KAAKmX,cAAce,QAAQlY,KAAK4C,WAAWhB,eAAe,GAE5E5B,KAAK8+C,oBACL9+C,KAAK++C,sBAIbhW,EAAJ3nC,UAAA4zB,gBAAI,WACSh1B,KAAK8+C,oBAIV9+C,KAAKg/C,iCAGTjW,EAAJ3nC,UAAAkB,YAAI,WACItC,KAAKy+C,cAAc3pC,cACnB9U,KAAKmX,cAAciB,eAAepY,KAAK4C,WAAWhB,eAClD5B,KAAKi/C,gCAGTlW,EAAJ3nC,UAAA89C,qBAAI,SAAqBC,GACjB,QAAKn/C,KAAKq+C,UAAUe,WAIb12B,OAAO22B,SAASC,KAAKlvC,QAAQ+uC,IAAS,GAGjDpW,EAAJ3nC,UAAAm+C,kBAAI,WACIv/C,KAAKw/C,kBAGTzW,EAAJ3nC,UAAA8B,cAAI,SAAc1C,GAClB,GAAci/C,GAAgBj/C,EAAa,OAAiBozB,UAAUgmB,SAASqE,GAGnEj+C,MAAK8+C,oBAAsBt+C,EAAO6C,UAAYk1B,EAAAA,OAASknB,GACvDz/C,KAAKw/C,kBAIbzW,EAAJ3nC,UAAAs+C,0BAAI,WACI1/C,KAAK2/C,sBAGD5W,EAAZ3nC,UAAA29C,mBAAI,WAAA,GAAJh/C,GAAAC,IACQA,MAAKy+C,cAAc5qB,IACf7zB,KAAK6+C,eAAer6C,UAAU,SAACU,GACZ,OAAXA,GACAnF,EAAK4/C,yBAMb5W,EAAZ3nC,UAAAo+C,eAAI,WACIx/C,KAAKw+C,aAAex+C,KAAKw+C,aAGrBzV,EAAZ3nC,UAAAu+C,mBAAI,WACI3/C,KAAKw+C,aAAc,EACnBx+C,KAAKs+C,OAAO7qB,iBAGRsV,EAAZ3nC,UAAA49C,8BAAI,WAAA,GAAJj/C,GAAAC,IACQA,MAAK4/C,kBAAkBn9C,QAAQ,SAAC6lC,GAC5BvoC,EAAKoX,cAAce,QAAQowB,GAAI,MAI/BS,EAAZ3nC,UAAA69C,6BAAI,WAAA,GAAJl/C,GAAAC,IACQA,MAAK4/C,kBAAkBn9C,QAAQ,SAAC6lC,GAC5BvoC,EAAKoX,cAAciB,eAAekwB,MAKlCS,EAAZ3nC,UAAAw9C,oBAAI,WAAA,GAAJ7+C,GAAAC,KACc6/C,EAAkB7/C,KAAK4C,WAAWhB,cAAck+C,eAAe,QAErED,GAAOp9C,QAAQ,SAACE,GAAU,MAAA5C,GAAK6C,WAAWhB,cAAciB,oBAAoB,QAASF,KAErF3C,KAAK4C,WAAWhB,cAAcgC,iBAAiB,QAAS,SAACjB,GACjD5C,EAAK6C,WAAWhB,cAAcm+C,aAAa,aAC3Cp9C,EAAMq9C,6BAEX,GAEHH,EAAOp9C,QAAQ,SAACE,GAAU,MAAA5C,GAAK6C,WAAWhB,cAAcgC,iBAAiB,QAASjB,qBAhL1F0D,KAACgL,EAAAA,UAAD9K,OACIC,SAAUy3C,GACV3sC,SAAU,suCAiCVpI,cAAeC,EAAAA,kBAAkBC,KACjCL,gBAAiBC,EAAAA,wBAAwBC,OACzC2Q,QAAS,YACTlT,MACI4nC,kBAAmB,mBACnBvqB,kBAAmB,8CAxG3B1d,KAAIS,EAAAA,aAYJT,KAAS+T,EAAAA,eAET/T,KAAS45C,EAAAA,WANT55C,KAAI2D,EAAAA,uCAqGJqN,WAAAhR,KAAKqB,EAAAA,QAGL62C,gBAAAl4C,KAAKqB,EAAAA,QAGLw4C,iBAAA75C,KAAKqB,EAAAA,QAKLy4C,mBAAA95C,KAAKkf,EAAAA,aAALhf,MAAkB,oBAAsB2tC,KAAMzmC,EAAAA,gBAG9CkxC,kBAAAt4C,KAAKiE,EAAAA,UAAL/D,MAAe,mBAAqB2tC,KAAMptC,EAAAA,gBAuH1CiiC,GAvIkCqV,IAyIlCvV,GAAA,WAAA,QAAAA,KAKI7oC,KAAJgF,SAA8C,OAM9C,MAJI7E,QAAJ2M,eACQ+7B,EADRznC,UAAA,kBAAI,WAEI,MAAyB,SAAlBpB,KAAKgF,SAAsB,iBAAmB,kEAT7DqB,KAACC,EAAAA,UAADC,OACIC,SAAUmiC,yBAGd3jC,WAAAqB,KAAKqB,EAAAA,QAGL04C,aAAA/5C,KAAK2B,EAAAA,YAALzB,MAAiB,YAIjBsiC,KAEAH,GAAA,WAGI,QAAJA,GACe/mC,EACAkhB,GADA7iB,KAAf2B,QAAeA,EACA3B,KAAf6iB,MAAeA,EAJH7iB,KAAZqgD,YAAkC,EAqBlC,MAdI3X,GAAJtnC,UAAAomC,iBAAI,SAAiB8Y,GACbtgD,KAAKqgD,WAAaC,EAElBtgD,KAAKugD,wBAGD7X,EAAZtnC,UAAAm/C,qBAAI,WACQvgD,KAAKqgD,WACLrgD,KAAK2B,QAAQiyB,UAAUC,IA/PH,6BAiQpB7zB,KAAK2B,QAAQiyB,UAAUiE,OAjQH,8BAqQhC6Q,KAEAH,GAAA,WAkBI,QAAJA,GACe5mC,EACAkhB,EACA29B,OAAf,KAAAA,IAAeA,MAFAxgD,KAAf2B,QAAeA,EACA3B,KAAf6iB,MAAeA,EACA7iB,KAAfwgD,iBAAeA,EA+Bf,MAlDIrgD,QAAJ2M,eAAQy7B,EAARnnC,UAAA,mBAAI,WACI,MAAOpB,MAAKwgD,iBAAiB7xC,OAAS,mCAK1CxO,OAAJ2M,eAAQy7B,EAARnnC,UAAA,2BAAI,WACI,WAAkC8F,KAA9BlH,KAAKygD,qBACEzgD,KAAKygD,sBAGhBzgD,KAAK0gD,uCAEE1gD,KAAKygD,uDAShBlY,EAAJnnC,UAAAomC,iBAAI,SAAiB8Y,GACTtgD,KAAKwgD,iBAAiB7xC,OAAS,GAC/B3O,KAAK2gD,YAAYL,GAGrBtgD,KAAKwgD,iBAAiB/9C,QAAQ,SAACoR,GAAS,MAAAA,GAAK2zB,iBAAiB8Y,MAG1D/X,EAAZnnC,UAAAs/C,qCAAI,WACI1gD,KAAKygD,qBAAuBzgD,KAAKwgD,iBAC5Bx/B,OAAO,SAAC4mB,EAAK/zB,GAAS,MAAA+zB,GAAM/zB,EAAKgP,OAAO,IAGzC0lB,EAAZnnC,UAAAw/C,SAAI,WACJ,GAAcC,GAAgB7gD,KAAK2B,QAAQm/C,aAAa,gBAEhD,OAAOD,GACDE,UAAUF,GACT7gD,KAAKwgD,iBAAiB7xC,OAAS,EAAI3O,KAAKwgD,iBAAiB,GAAG7+C,QAAQq/C,UAAY,IAGnFzY,EAAZnnC,UAAAu/C,YAAI,SAAoBL,GACZA,EACAtgD,KAAK2B,QAAQiU,aAAa,QAAS5V,KAAK4gD,YAExC5gD,KAAK2B,QAAQs/C,gBAAgB,UAGzC1Y,KAGArB,GAAA,WAmDI,QAAJA,GACgBzwB,GAAAzW,KAAhByW,YAAgBA,EAvCKzW,KAArBkhD,4BAA2D,EACtClhD,KAArBmhD,uBAAsD,IACjCnhD,KAArBkoC,kBAAiDS,GAC5B3oC,KAArBioC,qBACQgW,GACAC,GACAzV,GAmCR,IAAc2Y,GAAiBt5B,EAAAA,UAAUY,OAAQ,UACpCrkB,KAAKg9C,EAAAA,aAAarhD,KAAKmhD,wBAE5BnhD,MAAK0nC,oBAAsB0Z,EAAe58C,UAAUxE,KAAKmnC,gBAAgBlf,KAAKjoB,OA4DtF,MA5FIG,QAAJ2M,eAAgBo6B,EAAhB9lC,UAAA,uBAAI,WACI,MAAOpB,MAAKyW,YAAY7U,cAAc01B,cAAc,OAAOlV,wBAAwBS,uCAGvF1iB,OAAJ2M,eAAgBo6B,EAAhB9lC,UAAA,mBAAI,WACI,WAA0B8F,KAAtBlH,KAAKqoC,cAA+BroC,KAAKkhD,4BAI7ClhD,KAAK+nC,8BAEE/nC,KAAKqoC,cALDroC,KAAKqoC,8CAQpBloC,OAAJ2M,eAAgBo6B,EAAhB9lC,UAAA,uBAAI,WACI,WAA+B8F,KAA3BlH,KAAKinC,mBAAoCjnC,KAAKkhD,4BAIlDlhD,KAAK2nC;iHAEE3nC,KAAKinC,mBALDjnC,KAAKinC,mDAmBpBC,EAAJ9lC,UAAA+lC,gBAAI,WAGI,IAAK,GAFDC,GAAgBpnC,KAAK82B,gBAAkB92B,KAAKqnC,gBAEvChD,EAAIrkC,KAAKsnC,YAAY34B,OAAS,EAAG01B,GAAK,EAAGA,IAAK,CAC/D,GAAkBxwB,GAAO7T,KAAKsnC,YAAYjD,EAEzBxwB,GAAK0zB,cAIV1zB,EAAK2zB,iBAAiBJ,EAAgB,GACtCA,GAAiBvzB,EAAK4zB,uBAI9BP,EAAJ9lC,UAAA4zB,gBAAI,WAAA,GAAJj1B,GAAAC,IAGQ2Q,YAAW,WAAM,MAAA5Q,GAAKonC,mBAAmB,IAG7CD,EAAJ9lC,UAAAkB,YAAI,WACItC,KAAK0nC,oBAAoB5yB,eAGrBoyB,EAAZ9lC,UAAAumC,iCAAI,WACI3nC,KAAKinC,kBAAoBjnC,KAAKsnC,YACzBtmB,OAAO,SAAC4mB,EAAK/zB,GAAS,MAAA+zB,GAAM/zB,EAAKgP,OAAO,IAGzCqkB,EAAZ9lC,UAAAymC,qBAAI,SAA6BlmC,GAKzB,MAJmBA,GAAQygB,wBAAwBS,MAC/B7gB,SAASmU,iBAAiBxU,GAASmmC,iBAAiB,iBACrD9lC,SAASmU,iBAAiBxU,GAASmmC,iBAAiB,iBAKnEZ,EAAZ9lC,UAAA2mC,4BAAI,WAAA,GAAJhoC,GAAAC,KACcgoC,EAAmBhoC,KAAKioC,oBACzBroB,IAAI,SAACzc,GAAc,MAAGpD,GAAKmoC,kBAAxC,IAA6D/kC,IAC/CglC,EAA0B3O,MAAM4O,KAAKpoC,KAAKyW,YAAY7U,cAAco2B,iBAAiBgQ,GAE3FhoC,MAAKqoC,aAAeF,EACfvoB,IAAI,SAAC0oB,GAAO,MAAA,IAAIC,IAAgBD,EAAIvoC,EAAK8nC,qBAAqBS,GAAKvoC,EAAKyoC,oBAAoBF,OAG7FpB,EAAZ9lC,UAAAonC,oBAAI,SAA4B7mC,GAGxB,MAFaA,GAAQ21B,cAAc,6CAM5BkC,MAAM4O,KAAKzmC,EAAQq2B,iBAAiByQ,KACtC7oB,IAAI,SAAC0oB,GAAO,MAAA,IAAII,IAAe,EAAmBJ,EAAGlmB,wBAAwBS,4BAnH1Fxc,KAACgL,EAAAA,UAAD9K,OACIC,SA7Tc,YA8TduC,gBAAiBC,EAAAA,wBAAwBC,OACzCqI,SAAU,uEAEqBq3B,GAFnC,KAE2DA,GAF3D,wCAKI1zB,QAAS,u4DACT/L,cAAeC,EAAAA,kBAAkBC,6CAzVrC/C,KAAIS,EAAAA,cAqcJogC,KCzbA0B,GAAA,WAAA,QAAAA,MAwB6B,sBAxB7BviC,KAAC8B,EAAAA,SAAD5B,OACI+B,SACIC,EAAAA,aACAiS,EAAAA,WACA0X,EAAAA,eACApgB,IAEJzJ,SACI6+B,GACA2B,GACAC,GACAC,GACAC,GACAC,IAEJ7gC,cACI8+B,GACA2B,GACAC,GACAC,GACAC,GACAC,QAGRL,KC9BIM,GAAa,EAKjBC,GAAA,WACI,QAAJA,GAAuB1yB,GAAAzW,KAAvByW,YAAuBA,EACvB,MAAA0yB,MAEaC,GAGLxyB,EAAWuyB,IAEnBE,GAAA,SAAAnyB,GAiBI,QAAJmyB,GAAgBzmC,GAAZ,GAAJ7C,GACQmX,EADRI,KAAAtX,KACc4C,IADd5C,WALaD,GAAbkL,GAA0B,mBAAmBi+B,KAChCnpC,EAAbmC,MAA6B,EAChBnC,EAAbupC,KAAqC,cACxBvpC,EAAbw2B,MAAmCzf,GAAaC,UAShD,MAbmCoB,GAAnCkxB,EAAAnyB,GAUI/W,OAAJ2M,eAAQu8B,EAARjoC,UAAA,kBAAI,WACI,MAAOmgB,MAAKqH,IAlCA,EAkCiBrH,KAAKC,IAjCtB,IAiCuCxhB,KAAKkC,QAjC5C,oDAWpBmE,KAACgL,EAAAA,UAAD9K,OACIC,SAAU,kBACV8K,SAAJ,gVACI2D,QAAS,ydACTlM,gBAAiBC,EAAAA,wBAAwBC,OACzCC,cAAeC,EAAAA,kBAAkBC,KACjC1C,MACI8C,MAAO,kBACPI,YAAa,8CA9BrBvD,KAAIS,EAAAA,gCAkCJmE,KAAA5E,KAAKqB,EAAAA,QACLxF,QAAAmE,KAAKqB,EAAAA,QACL4hC,OAAAjjC,KAAKqB,EAAAA,QACL6uB,QAAAlwB,KAAKqB,EAAAA,SASL2hC,GAbmCD,IC3BnCG,GAAA,WAAA,QAAAA,MAYkC,sBAZlCljC,KAAC8B,EAAAA,SAAD5B,OACI+B,SACIC,EAAAA,aACA2pB,EAAAA,gBAEJ7pB,SACIghC,IAEJjhC,cACIihC,QAGRE,KCVIL,GAAa,EAKjBM,GAAA,WACI,QAAJA,GAAuB/yB,GAAAzW,KAAvByW,YAAuBA,EACvB,MAAA+yB,MAEaC,GAGL7yB,EAAW4yB,IAInBE,GAAA,SAAAxyB,GAiBI,QAAJwyB,GAAgB9mC,GAAZ,GAAJ7C,GACQmX,EADRI,KAAAtX,KACc4C,IADd5C,WALaD,GAAbkL,GAA0B,uBAAuBi+B,KACpCnpC,EAAbmC,MAA6B,EAChBnC,EAAbupC,KAAyC,cAC5BvpC,EAAbw2B,MAAmCzf,GAAaC,UAahD,MAjBuCoB,GAAvCuxB,EAAAxyB,GAUI/W,OAAJ2M,eAAQ48B,EAARtoC,UAAA,kBAAI,WACI,MAAOmgB,MAAKqH,IApCA,EAoCiBrH,KAAKC,IAnCtB,IAmCuCxhB,KAAKkC,QAnC5C,qCAsChB/B,OAAJ2M,eAAQ48B,EAARtoC,UAAA,yBAAI,WACI,MA5Be,KAAA,IA4BYpB,KAAK2pC,WAAxC,oDA1BAtjC,KAACgL,EAAAA,UAAD9K,OACIC,SAAU,sBACV8K,SAAJ,2aACI2D,QAAS,8pBACTlM,gBAAiBC,EAAAA,wBAAwBC,OACzCC,cAAeC,EAAAA,kBAAkBC,KACjC1C,MACI8C,MAAO,sBACPI,YAAa,8CAhCrBvD,KAAIS,EAAAA,gCAoCJmE,KAAA5E,KAAKqB,EAAAA,QACLxF,QAAAmE,KAAKqB,EAAAA,QACL4hC,OAAAjjC,KAAKqB,EAAAA,QACL6uB,QAAAlwB,KAAKqB,EAAAA,SAaLgiC,GAjBuCD,IC/BvCG,GAAA,WAAA,QAAAA,MAYsC,sBAZtCvjC,KAAC8B,EAAAA,SAAD5B,OACI+B,SACIC,EAAAA,aACA2pB,EAAAA,gBAEJ7pB,SACIqhC,IAEJthC,cACIshC,QAGRE,KCKIrzB,GAAe,gBAIf,QAAJszB,GAEevwB,EAEApX,GAFAlC,KAAfsZ,OAAeA,EAEAtZ,KAAfkC,MAAeA,EACf,MAAA2nC,oBAIA,QAAAC,MAA+B,MAA/BA,MACaC,GAAmElzB,EAAcizB,IAOjFE,IACTzwB,QAASC,EAAAA,kBACTC,YAAaC,EAAAA,WAAW,WAAM,MAAAuwB,MAC9BtwB,OAAO,GAGXswB,GAAA,SAAA/yB,GA0GI,QAAJ+yB,GACyBC,GADrB,GAAJnqC,GAGQmX,EAHRI,KAAAtX,OAAAA,WACyBD,GAAzBmqC,gBAAyBA,EAjCFnqC,EAAvB8X,OAA6D,GAAIC,GAAAA,aAYrD/X,EAAZ8f,OAA0B,KAGd9f,EAAZoqC,MAA4B,kBAAkB5zB,KAGlCxW,EAAZqqC,UAA8C,KAGlCrqC,EAAZsqC,gBAAsC,EAG1BtqC,EAAZuqC,eAAiD,QAGrCvqC,EAAZoS,WAAiC,EAGrBpS,EAAZwnB,WAAiC,EAU7BxnB,EAAJwqC,6BAAyD,aAOrDxqC,EAAJ2sB,UAA2B,eAoG3B,MAnNkCvU,GAAlC8xB,EAAA/yB,GAII/W,OAAJ2M,eACQm9B,EADR7oC,UAAA,YAAI,WACqB,MAAOpB,MAAKmqC,WACjC,SAASjoC,GACLlC,KAAKmqC,MAAQjoC,EACblC,KAAKwqC,0DAITrqC,OAAJ2M,eACQm9B,EADR7oC,UAAA,qBAAI,WAEI,MAAOpB,MAAKsqC,oBAEhB,SAAkB3K,GACd3/B,KAAKsqC,eAAuB,WAAN3K,EAAiB,SAAW,QAClD3/B,KAAKyqC,sDAITtqC,OAAJ2M,eACQm9B,EADR7oC,UAAA,aAAI,WACmB,MAAOpB,MAAK6f,YAC/B,SAAUqJ,GACFlpB,KAAK6f,SAAWqJ,IAEhBlpB,KAAK6f,OAASqJ,EAEdlpB,KAAK0qC,+BACL1qC,KAAK2qC,6DAKbxqC,OAAJ2M,eACQm9B,EADR7oC,UAAA,gBAAI,WACiB,MAAOpB,MAAKoqC,eAC7B,SAAazrB,GACT3e,KAAKoqC,UAAYzrB,EACjB3e,KAAKkC,MAAQyc,EAAWA,EAASzc,MAAQ,KACzClC,KAAK2qC,4DAITxqC,OAAJ2M,eACQm9B,EADR7oC,UAAA,gBAAI,WAC0B,MAAOpB,MAAKmS,eACtC,SAAajQ,GACTlC,KAAKmS,UAAYy4B,EAAU1oC,GAC3BlC,KAAKyqC,sDAITtqC,OAAJ2M,eACQm9B,EADR7oC,UAAA,gBAAI,WAC0B,MAAOpB,MAAKunB,eACtC,SAAarlB,GACTlC,KAAKunB,UAAYqjB,EAAU1oC,GAC3BlC,KAAKyqC,sDAyDTR,EAAJ7oC,UAAAupC,yBAAI,WACQ3qC,KAAKoqC,YAAcpqC,KAAKoqC,UAAU3xB,UAClCzY,KAAKoqC,UAAU3xB,SAAU,IAQjCwxB,EAAJ7oC,UAAAszB,mBAAI,WAII10B,KAAKqqC,gBAAiB,GAO1BJ,EAAJ7oC,UAAAypC,MAAI,WACQ7qC,KAAK0sB,WACL1sB,KAAK0sB,aAKbud,EAAJ7oC,UAAA0pC,gBAAI,WACQ9qC,KAAKqqC,gBACLrqC,KAAK6X,OAAO/S,KAAK,GAAI+kC,IAAc7pC,KAAc,UAAGA,KAAK6f,UAIjEoqB,EAAJ7oC,UAAAqpC,mBAAI,WACQzqC,KAAK+qC,SACL/qC,KAAK+qC,QAAQtoC,QAAQ,SAACuoC,GAAU,MAAAA,GAAM/pC,kBAO9CgpC,EAAJ7oC,UAAA4X,WAAI,SAAW9W,GACPlC,KAAKkC,MAAQA,EACblC,KAAKkqC,gBAAgBjpC,gBAQzBgpC,EAAJ7oC,UAAA6X,iBAAI,SAAiBC,GACblZ,KAAKuqC,6BAA+BrxB,GAQxC+wB,EAAJ7oC,UAAA+X,kBAAI,SAAkBD,GACdlZ,KAAK0sB,UAAYxT,GAOrB+wB,EAAJ7oC,UAAAgY,iBAAI,SAAiBC,GACbrZ,KAAK6D,SAAWwV,EAChBrZ,KAAKkqC,gBAAgBjpC,gBAGjBgpC,EAAZ7oC,UAAAopC,uBAAI,WAAA,GAAJzqC,GAAAC,IACYA,MAAK+qC,SACL/qC,KAAK+qC,QAAQtoC,QAAQ,SAACuoC,GAClBA,EAAMrzB,KAAO5X,EAAK4X,QAMtBsyB,EAAZ7oC,UAAAspC,6BAAI,WAAA,GAAJ3qC,GAAAC,KAEcirC,EAAuC,OAAnBjrC,KAAKoqC,WAAsBpqC,KAAKoqC,UAAUloC,QAAUlC,KAAK6f,MAE/D,OAAhB7f,KAAK+qC,SAAoBE,IACzBjrC,KAAKoqC,UAAY,KACjBpqC,KAAK+qC,QAAQtoC,QAAQ,SAACuoC,GAClBA,EAAMvyB,QAAU1Y,EAAKmC,QAAU8oC,EAAM9oC,MACjC8oC,EAAMvyB,UACN1Y,EAAKqqC,UAAYY,sBAxNrC3kC,KAACC,EAAAA,UAADC,OACIC,SAAU,iBACVC,SAAU,eACVgC,WAAYuhC,IACZtjC,MACIgD,KAAM,aACNF,MAAO,kBAEXoQ,QAAS,oDAzDbvT,KAAI2D,EAAAA,uCA+DJ2N,OAAAtR,KAAKqB,EAAAA,QAQL6P,gBAAAlR,KAAKqB,EAAAA,QAULxF,QAAAmE,KAAKqB,EAAAA,QAaLiX,WAAAtY,KAAKqB,EAAAA,QASL7D,WAAAwC,KAAKqB,EAAAA,QAQLqe,WAAA1f,KAAKqB,EAAAA,QAYLmQ,SAAAxR,KAAKmB,EAAAA,SAGLujC,UAAA1kC,KAAK00B,EAAAA,gBAALx0B,MAAqBmT,EAAAA,WAAW,WAAM,MAAAwxB,OAAkBjQ,aAAa,OAgJrEgP,GAnNkCF,kBA8N9B,QAAJoB,GAAuB10B,GAAAzW,KAAvByW,YAAuBA,EACvB,MAAA00B,MAEaC,GAILx0B,EAAWD,EAAcw0B,KAGjCD,GAAA,SAAAh0B,GAsJI,QAAJg0B,GACoBG,EACZzoC,EACiBsnC,EACAoB,GAJrB,GAAJvrC,GAOQmX,EAPRI,KAAAtX,KAOc4C,IAPd5C,WAGyBD,GAAzBmqC,gBAAyBA,EACAnqC,EAAzBurC,iBAAyBA,EAvIJvrC,EAArB2X,UAAyC,eAAcnB,GAK1CxW,EAAbkL,GAA0BlL,EAAK2X,UAmGR3X,EAAvB8X,OAA6D,GAAIC,GAAAA,aAM7D/X,EAAJgpB,WAAyB,EAMbhpB,EAAZ6X,UAAgC,EASpB7X,EAAZ8f,OAA0B,KAIL9f,EAArBwrC,8BAAiE,aAWzDxrC,EAAKsrC,WAAaA,EAElBtrC,EAAKwrC,8BACDD,EAAiBr3B,OAAO,SAAChJ,EAAY0M,GAC7B1M,IAAOlL,EAAKkL,IAAM0M,IAAS5X,EAAK4X,OAChC5X,EAAK0Y,SAAU,OAmEnC,MAvNmCN,GAAnC+yB,EAAAh0B,GAuBI/W,OAAJ2M,eACQo+B,EADR9pC,UAAA,eAAI,WACyB,MAAOpB,MAAK4X,cACrC,SAAY1V,GAChB,GAAcspC,GAAkBZ,EAAU1oC,EAE9BlC,MAAK4X,WAAa4zB,IAClBxrC,KAAK4X,SAAW4zB,EAEZA,GAAmBxrC,KAAKqrC,YAAcrrC,KAAKqrC,WAAWnpC,QAAUlC,KAAKkC,MACrElC,KAAKqrC,WAAW1sB,SAAW3e,MACnBwrC,GAAmBxrC,KAAKqrC,YAAcrrC,KAAKqrC,WAAWnpC,QAAUlC,KAAKkC,QAG7ElC,KAAKqrC,WAAW1sB,SAAW,MAG3B6sB,GAEAxrC,KAAKsrC,iBAAiBG,OAAOzrC,KAAKiL,GAAIjL,KAAK2X,MAE/C3X,KAAKkqC,gBAAgBjpC,iDAK7Bd,OAAJ2M,eACQo+B,EADR9pC,UAAA,aAAI,WACmB,MAAOpB,MAAK6f,YAC/B,SAAU3d,GACFlC,KAAK6f,SAAW3d,IAChBlC,KAAK6f,OAAS3d,EACS,MAAnBlC,KAAKqrC,aACArrC,KAAKyY,UAENzY,KAAKyY,QAAUzY,KAAKqrC,WAAWnpC,QAAUA,GAEzClC,KAAKyY,UACLzY,KAAKqrC,WAAW1sB,SAAW3e,yCAO3CG,OAAJ2M,eACQo+B,EADR9pC,UAAA,gBAAI,WAEI,MAAOpB,MAAKmS,WAAiC,MAAnBnS,KAAKqrC,YAAsBrrC,KAAKqrC,WAAWxnC,cAEzE,SAAa3B,GACjB,GAAcwpC,GAAmBd,EAAU1oC,EAE/BlC,MAAKmS,YAAcu5B,IAEnB1rC,KAAKmS,UAAYu5B,EACjB1rC,KAAKkqC,gBAAgBjpC,iDAK7Bd,OAAJ2M,eACQo+B,EADR9pC,UAAA,gBAAI,WAEI,MAAOpB,MAAKunB,WAAcvnB,KAAKqrC,YAAcrrC,KAAKqrC,WAAWtlB,cAEjE,SAAa7jB,GACTlC,KAAKunB,UAAYqjB,EAAU1oC,oCAI/B/B,OAAJ2M,eACQo+B,EADR9pC,UAAA,qBAAI,WAEI,MAAOpB,MAAKsqC,gBAAmBtqC,KAAKqrC,YAAcrrC,KAAKqrC,WAAW9zB,eAAkB,aAExF,SAAkBrV,GACdlC,KAAKsqC,eAAiBpoC,mCAqB1B/B,OAAJ2M,eAAQo+B,EAAR9pC,UAAA,eAAI,WAAwB,OAAUpB,KAAKiL,IAAMjL,KAAK0X,WAAtD,0CAqCIwzB,EAAJ9pC,UAAAgB,SAAI,WACQpC,KAAKqrC,aAELrrC,KAAKyY,QAAUzY,KAAKqrC,WAAWnpC,QAAUlC,KAAK6f,OAE9C7f,KAAK2X,KAAO3X,KAAKqrC,WAAW1zB,OAIpCuzB,EAAJ9pC,UAAAkB,YAAI,WACItC,KAAKurC,iCAKTL,EAAJ9pC,UAAAiX,MAAI,aAOA6yB,EAAJ9pC,UAAAH,aAAI,WAGIjB,KAAKkqC,gBAAgBjpC,gBAGzBiqC,EAAJ9pC,UAAAuqC,aAAI,SAAahpC,GAQTA,EAAMgW,mBAGVuyB,EAAJ9pC,UAAAwqC,cAAI,SAAcjpC,GAIVA,EAAMgW,iBAEd,IAAckzB,GAAoB7rC,KAAKqrC,YAAcrrC,KAAKkC,QAAUlC,KAAKqrC,WAAWnpC,KAC5ElC,MAAKyY,SAAU,EACfzY,KAAK8qC,kBAED9qC,KAAKqrC,aACLrrC,KAAKqrC,WAAWd,6BAA6BvqC,KAAKkC,OAClDlC,KAAKqrC,WAAWR,QACZgB,GACA7rC,KAAKqrC,WAAWP,oBAMpBI,EAAZ9pC,UAAA0pC,gBAAI,WACI9qC,KAAK6X,OAAO/S,KAAK,GAAI+kC,IAAc7pC,KAAMA,KAAK6f,yBArOtDxZ,KAACgL,EAAAA,UAAD9K,OACIC,SAAU,kBACV8K,SAAJ,opBACI2D,QAAS,i3BACT2E,QAAS,QAAS,YAClB1Q,cAAeC,EAAAA,kBAAkBC,KACjCL,gBAAiBC,EAAAA,wBAAwBC,OACzCxC,SAAU,gBACVC,MACI8C,MAAO,kBACPI,YAAa,KACbkiC,qBAAsB,UACtBhyB,sBAAuB,WACvBoK,UAAW,+EA0InB7d,KAAgC4jC,GAAhC9iC,aAAAd,KAASkB,EAAAA,aAzbTlB,KAA2CS,EAAAA,aAD3CT,KAAI2D,EAAAA,oBAQJ3D,KAAS0lC,EAAAA,+CAmTT9gC,KAAA5E,KAAKqB,EAAAA,QAGLiQ,OAAAtR,KAAKqB,EAAAA,QAGL8P,YAAAnR,KAAKqB,EAAAA,MAALnB,MAAW,gBAGXkR,iBAAApR,KAAKqB,EAAAA,MAALnB,MAAW,qBAGXylC,kBAAA3lC,KAAKqB,EAAAA,MAALnB,MAAW,sBAGXkS,UAAApS,KAAKqB,EAAAA,QAyBLxF,QAAAmE,KAAKqB,EAAAA,QAkBL7D,WAAAwC,KAAKqB,EAAAA,QAeLqe,WAAA1f,KAAKqB,EAAAA,QASL6P,gBAAAlR,KAAKqB,EAAAA,QAUL6Q,gBAAAlS,KAAKiE,EAAAA,UAAL/D,MAAe,WAOfsR,SAAAxR,KAAKmB,EAAAA,SAKLuhB,YAAA1iB,KAAKqB,EAAAA,SAuGLwjC,GAvNmCE,IC7SnCa,GAAA,WAAA,QAAAA,MAMA,sBANA5lC,KAAC8B,EAAAA,SAAD5B,OACI+B,SAAUC,EAAAA,aAAciS,EAAAA,WAAY3I,GACpCxJ,SAAU4hC,GAAciB,IACxB9iC,cAAe6hC,GAAciB,QAGjCe,KCVAC,GAAA,SAAAh1B,GAAA,QAAAg1B,oDAOA,MAFsC/zB,GAAtC+zB,EAAAh1B,kBALA7Q,KAACC,EAAAA,UAADC,OACIC,SAAU,kBACVoT,QAAS,2BACTnR,YAAc8Q,QAAS4yB,EAAAA,eAAgB1yB,YAAayyB,0BAGxDtnC,OAAAyB,KAAKqB,EAAAA,MAALnB,MAAW,iBACX2lC,GAFsCC,EAAAA,gBCNtCC,GAAA,SAAAl1B,GAAA,QAAAk1B,KAAA,GAAArsC,GAAA,OAAAmX,GAAAA,EAAAmjB,MAAAr6B,KAAAqsC,YAAArsC,WASID,GAAJusC,gBAA8B,GAE1BvsC,EAAJwsC,QAAsB,GAGlBxsC,EAAJysC,UAAwB,KAqBxB,MA/B0Cr0B,GAA1Ci0B,EAAAl1B,GAYI/W,OAAJ2M,eAAQs/B,EAARhrC,UAAA,mBAAI,WACI,OAAQpB,KAAKysC,SAAW,EAAIzsC,KAAKwsC,WAAaxsC,KAAKssC,iDAGvDF,EAAJhrC,UAAAsrC,cAAI,WACJ,GAAcC,GAAa3sC,KAAK4sC,SAAShoC,MAAQ5E,KAAK8e,KAAK+tB,YAAYC,SACzD9sC,KAAK8e,KAAK+tB,YAAYC,SAAS9sC,KAAK4sC,SAAShoC,MAC7C,KAEAmoC,EAAQ/sC,KAAK+sC,OAASJ,CAE5B,OAAOI,GAAYA,EAAQ/sC,KAAKusC,QAAWvsC,KAAKgtC,YAAxD,KAA6EhtC,KAAKssC,gBAAlF,MAGIF,EAAJhrC,UAAAgB,SAAI,WACIpC,KAAKysC,SAAWzsC,KAAK8e,KAAK+tB,YAAYI,aAAajtC,KAAK4sC,SAAShoC,MAEjE5E,KAAKktC,6BAjCb7mC,KAACC,EAAAA,UAADC,OACIC,SAAU,sBACViC,YAAc8Q,QAAS4zB,EAAAA,mBAAoB1zB,YAAa2yB,0BAG5DW,QAAA1mC,KAAKqB,EAAAA,MAALnB,MAAW,uBAEX6mC,SAAA/mC,KAAKqB,EAAAA,MAALnB,MAAW,8BA4BX6lC,GA/B0Ce,EAAAA,oBCJ1CE,GAAA,SAAAn2B,GAAA,QAAAm2B,oDAO+D,MAAtBl1B,GAAzCk1B,EAAAn2B,kBAPA7Q,KAACC,EAAAA,UAADC,OACIC,SAAU,qBACVE,MACIyK,UAAW,kBAEf1I,YAAc8Q,QAAS+zB,EAAAA,kBAAmB7zB,YAAa4zB,QAE3DA,GAAyCC,EAAAA,mBCe5BC,GACT,GAAI/gC,GAAAA,eAA4C,mCAEpDghC,GAAA,WACI,QAAJA,GAAuBl0B,EAA6B6E,OAApD,KAAAA,IAAoDA,GAApD,GAAuBne,KAAvBsZ,OAAuBA,EAA6BtZ,KAApDme,YAAoDA,EACpD,MAAAqvB,MAEIC,GAA0B,EAE9BC,GAAA,SAAAx2B,GAiFI,QAAJw2B,GACkB9qC,EACAsd,EAC4DytB,GAH1E,GAAJ5tC,GAMQmX,EAARI,KAAAtX,KAAc4C,EAAU,IAAxB5C,WALkBD,GAAlB6C,WAAkBA,EACA7C,EAAlBmgB,kBAAkBA,EAC4DngB,EAA9E4tC,OAA8EA,EAjEvD5tC,EAAvB+7B,kBAA2C,GAAIhkB,GAAAA,aAiBnC/X,EAAZoS,WAAiC,EAqBrBpS,EAAZqqC,WAAiC,EAYrBrqC,EAAZ6tC,SAAsB,EAMV7tC,EAAZmoB,IAAkB,kBAAkBulB,OAmIpC,MA5LkCt1B,GAAlCu1B,EAAAx2B,GAKI/W,OAAJ2M,eACQ4gC,EADRtsC,UAAA,gBAAI,WAEI,MAAOpB,MAAKmS,eAGhB,SAAajQ,GACjB,GAAcgnB,GAAW0hB,EAAU1oC,EAEvBgnB,KAAalpB,KAAKmS,YAClBnS,KAAKmS,UAAY+W,oCAWzB/oB,OAAJ2M,eAAQ4gC,EAARtsC,UAAA,gBAAI,WACI,MAAOpB,MAAKoqC,eAGhB,SAAaloC,GACjB,GAAcwc,GAAaksB,EAAU1oC,EAEzBwc,KAAe1e,KAAKoqC,WACpBpqC,KAAK6tC,YAAYnvB,oCAczBve,OAAJ2M,eAAQ4gC,EAARtsC,UAAA,cAAI,WACI,MAAOpB,MAAK4tC,yCAKhBztC,OAAJ2M,eAAQ4gC,EAARtsC,UAAA,UAAI,WACI,MAAOpB,MAAKkoB,qCAKhB/nB,OAAJ2M,eAAQ4gC,EAARtsC,UAAA,gBAAI,WACI,MAAOpB,MAAK2tC,OAAOvvB,0CAYvBsvB,EAAJtsC,UAAA8zB,OAAI,WACIl1B,KAAK2e,UAAY3e,KAAK2e,UAG1B+uB,EAAJtsC,UAAAysC,YAAI,SAAYlvB,GACJ3e,KAAKoqC,YAAczrB,GAAa3e,KAAK2tC,OAAOlvB,iBAEhDze,KAAKoqC,UAAYzrB,EAEbA,EACA3e,KAAK2tC,OAAOlvB,eAAeG,OAAO5e,MAElCA,KAAK2tC,OAAOlvB,eAAeI,SAAS7e,QAW5C0tC,EAAJtsC,UAAA0sC,gBAAI,WACS9tC,KAAK4tC,UACN5tC,KAAK4tC,SAAU,EAEf5tC,KAAKkgB,kBAAkBjf,iBAS/BysC,EAAJtsC,UAAA2sC,kBAAI,WACQ/tC,KAAK4tC,UACL5tC,KAAK4tC,SAAU,EACf5tC,KAAKkgB,kBAAkBjf,iBAI/BysC,EAAJtsC,UAAA4sC,UAAI,WACJ,GAAcC,GAAcjuC,KAAK4C,WAAWhB,cAAcssC,gBAClD,OAAID,GAAYt/B,OACLs/B,EAAY,GAAG/qB,OAGnB,GAGXwqB,EAAJtsC,UAAAiX,MAAI,WACJ,GAAc1W,GAAU3B,KAAKmuC,gBAEQ,mBAAlBxsC,GAAQ0W,OACf1W,EAAQ0W,SAehBlY,OAAJ2M,eAAQ4gC,EAARtsC,UAAA,iBAAI,WAEI,OAAQpB,KAAKmuC,iBAAiBpN,aAAe,IAAIvQ,wCAGrDkd,EAAJtsC,UAAAwd,OAAI,WACS5e,KAAKoqC,YACNpqC,KAAKoqC,WAAY,EAEjBpqC,KAAKkgB,kBAAkBjf,iBAI/BysC,EAAJtsC,UAAAyd,SAAI,WACQ7e,KAAKoqC,YACLpqC,KAAKoqC,WAAY,EAEjBpqC,KAAKkgB,kBAAkBjf,iBAI/BysC,EAAJtsC,UAAAg4B,qBAAI,WACSp5B,KAAK6D,WACN7D,KAAKoqC,WAAYpqC,KAAKoe,WAAYpe,KAAKoqC,UAEvCpqC,KAAKkgB,kBAAkBjf,eACvBjB,KAAKouC,0BAAyB,GAE1BpuC,KAAK2tC,OAAOU,kBACZruC,KAAK2tC,OAAOU,iBAAiBruC,QAKzC0tC,EAAJtsC,UAAAgtC,yBAAI,SAAyBjwB,OAA7B,KAAAA,IAA6BA,GAA7B,GACQne,KAAK87B,kBAAkBh3B,KAAK,GAAI0oC,IAAmBxtC,KAAMme,KAG7DuvB,EAAJtsC,UAAA+sC,eAAI,WACI,MAAOnuC,MAAK4C,WAAWhB,eAG3B8rC,EAAJtsC,UAAA2jC,YAAI,WACI,MAAO/kC,MAAK6D,SAAW,KAAO,oBA5MtCwC,KAACgL,EAAAA,UAAD9K,OACIC,SAAU,iBACVC,SAAU,eACVC,MACIkD,YAAa,KACbma,kBAAmB,gBAEnBuqB,kBAAmB,mBAEnB9kC,MAAO,iBACP+kC,sBAAuB,WACvB1I,oBAAqB,SAErB10B,UAAW,0BAEfG,SAAJ,yQACI7I,YAAc8Q,QAASi1B,EAAAA,YAAa/0B,YAAai0B,4CA7CrDrnC,KAAIS,EAAAA,aALJT,KAAI2D,EAAAA,oBAsHJ3D,SAAAa,GAAAC,aAAAd,KAASkB,EAAAA,WAATlB,KAAqBe,EAAAA,OAArBb,MAA4BgnC,2BAjE5BzR,oBAAAz1B,KAAKmB,EAAAA,SAELtF,QAAAmE,KAAKqB,EAAAA,QAEL7D,WAAAwC,KAAKqB,EAAAA,SAuLLgmC,GA5LkCc,EAAAA,aCjBlCC,GAAA,WACI,QAAJA,GACen1B,EACAiF,GADAve,KAAfsZ,OAAeA,EACAtZ,KAAfue,OAAeA,EAEf,MAAAkwB,MAEAC,GAAA,WACI,QAAJA,GAAuBp1B,EAAgCiF,GAAhCve,KAAvBsZ,OAAuBA,EAAgCtZ,KAAvDue,OAAuDA,EACvD,MAAAmwB,qBAGI,QAAJC,GAAgBC,EAA0B1uB,GAC1C,MAAQhJ,GAARI,KAAAtX,KAAc4uC,EAAS1uB,IAAvBlgB,KAEA,MAJqCmY,GAArCw2B,EAAAz3B,GAIAy3B,GAJqClqB,EAAAA,SAO/BoqB,GAC2Bl4B,EAAcE,EAAc83B,KAG7DlpB,GAAA,SAAAvO,GAsEI,QAAJuO,GACgB7iB,EACRgsC,EACA1uB,EACuB7I,EACA+G,EACG4H,EACA8oB,GAP9B,GAAJ/uC,GASQmX,EATRI,KAAAtX,KASc4uC,EAAS1uB,IATvBlgB,WACgBD,GAAhB6C,WAAgBA,EA9BO7C,EAAvBgvC,iBAA0C,GAAIj3B,GAAAA,aAEvB/X,EAAvBigB,gBAAyC,GAAIlI,GAAAA,aAuBjC/X,EAAZoS,WAAiC,EAEZpS,EAArBie,QAA+B,GAAIjT,GAAAA,QAa3BhL,EAAKsX,SAAWrV,SAASqV,IAAa,EAEtCtX,EAAKqe,SAAwB,OAAbA,GAA4BwsB,EAAUxsB,GACtDre,EAAKimB,WAA4B,OAAfA,GAA6B4kB,EAAU5kB,GACzDjmB,EAAK+uC,WAA4B,OAAfA,GAA6BlE,EAAUkE,GAEzD/uC,EAAK0e,eAAiB,GAAI6V,GAAAA,eAA6Bv0B,EAAKqe,YAkLpE,MArPqCjG,GAArCsN,EAAAvO,GAyBI/W,OAAJ2M,eACQ2Y,EADRrkB,UAAA,gBAAI,WAEI,MAAOpB,MAAKmS,eAGhB,SAAa68B,GACjB,GAAc9sC,GAAQ0oC,EAAUoE,EAEpBhvC,MAAKmS,YAAcjQ,IACnBlC,KAAKmS,UAAYjQ,EAEblC,KAAKmS,UAEL4nB,QAAQkV,IAAI,4BAGZlV,QAAQkV,IAAI,6DA6BxBxpB,EAAJrkB,UAAAszB,mBAAI,WACI10B,KAAK+e,WAAa,GAAIkb,GAAAA,2BAAyCj6B,KAAK+d,SAE/Doc,yBAAwB,GACxB/E,0BAA0B,OAGnC3P,EAAJrkB,UAAAkB,YAAI,WACItC,KAAKge,QAAQhb,OAEbhD,KAAKge,QAAQ/a,YAGjBwiB,EAAJrkB,UAAA6sB,UAAI,SAAUtrB,GACd,GAAcU,GAAUV,EAAMU,OAItB,QAHArD,KAAKkvC,UAAYvsC,EAAMw2B,SACvBn5B,KAAKmvC,SAAWxsC,EAAMq2B,QAEd31B,GACJ,IAAK+0B,GAAAA,WACGp4B,KAAK+e,WAAW+Z,YAChB94B,KAAK6sC,YAAYuC,SAASpvC,KAAK+e,WAAW+Z,WAAWl0B,MAGzDjC,EAAMkqB,gBAEN,MACJ,KAAKwL,GAAAA,YACGr4B,KAAK+e,WAAW+Z,YAChB94B,KAAK6sC,YAAYwC,OAAOrvC,KAAK+e,WAAW+Z,WAAWl0B,MAGvDjC,EAAMkqB,gBAEN,MACJ,KAAK0L,GAAAA,MACL,IAAKD,GAAAA,MACDt4B,KAAKsvC,sBACL3sC,EAAMkqB,gBAEN,MACJ,KAAK8L,GAAAA,KACD34B,KAAK+e,WAAWwB,qBAChB5d,EAAMkqB,gBAEN,MACJ,KAAK+L,GAAAA,IACD54B,KAAK+e,WAAW8Z,oBAChBl2B,EAAMkqB,gBAEN,MACJ,KAAK0iB,GAAAA,QACDvvC,KAAK+e,WAAWywB,4BAChB7sC,EAAMkqB,gBAEN,MACJ,KAAK4iB,GAAAA,UACDzvC,KAAK+e,WAAW2wB,wBAChB/sC,EAAMkqB,gBAEN,MACJ,SACI7sB,KAAK+e,WAAW0Z,UAAU91B,KAItC8iB,EAAJrkB,UAAAuuC,iBAAI,WACS3vC,KAAK+d,QAAQ4c,OAElB36B,KAAK+e,WAAW6wB,eAAeruB,KAAKsuB,MAAM7vC,KAAKguC,YAAchuC,KAAK+d,QAAQ4c,MAAMqT,eAGpFvoB,EAAJrkB,UAAAitC,iBAAI,SAAiB9vB,GAGb,GAFAve,KAAK+e,WAAWC,cAAcT,GAE1Bve,KAAKkvC,WAAalvC,KAAKoe,SAAU,CAC7C,GAAkB0xB,GAAgB9vC,KAAK+e,WAAWgxB,wBAChCC,EAAchwC,KAAK+e,WAAW2B,eAEhCovB,GAAgBE,EAChBhwC,KAAK+d,QAAQtb,QAAQ,SAACoR,EAAM1D,GACpBA,GAAS2/B,GAAiB3/B,GAAS6/B,GAAen8B,EAAKg6B,aAAY,KAG3E7tC,KAAK+d,QAAQtb,QAAQ,SAACoR,EAAM1D,GACpBA,GAAS6/B,GAAe7/B,GAAS2/B,GAAiBj8B,EAAKg6B,aAAY,KAI/E7tC,KAAKkvC,WAAY,MACd,IAAIlvC,KAAKmvC,SAAU,CAGtB,GAFAnvC,KAAKmvC,UAAW,GAEXnvC,KAAKiwC,gBAAgB1xB,GAAW,MAErCA,GAAO2W,aAEHl1B,MAAKgmB,aACLhmB,KAAK+d,QAAQtb,QAAQ,SAACoR,GAAS,MAAAA,GAAKg6B,aAAY,KAChDtvB,EAAOsvB,aAAY,GAI3B7tC,MAAKkwC,oBAAoB3xB,IAG7BkH,EAAJrkB,UAAAkuC,oBAAI,WACJ,GAAca,GAAenwC,KAAK+e,WAAW2B,eAErC,IAAoB,MAAhByvB,GAAwBnwC,KAAKy/B,aAAa0Q,GAAe,CACrE,GAAkBC,GAA8BpwC,KAAK+d,QAAQsB,UAAU8wB,EAEvDC,IAAiBpwC,KAAKiwC,gBAAgBG,KACtCA,EAAclb,SAGdl1B,KAAK8qC,gBAAgBsF,MAKjC3qB,EAAJrkB,UAAAivC,kBAAI,SACIzrC,EACA0rC,EACAC,EACAC,OAFR,KAAAF,IAAQA,EAA2CtwC,KAAKswC,gBACxD,KAAAC,IAAQA,EAAqBvwC,KAAKywC,WAAWF,eAGrCr5B,EAAR9V,UAAcivC,kBAAd/4B,KAAAtX,KAAgC4E,EAAM0rC,EAAYC,EAAeC,EAEjE,IAAcE,KAENH,GAAcI,eAAeluC,QAAQ,SAACmuC,GAC9C,GAAkBC,GAAUD,EAAKE,GAErBD,GAAQE,MAAMtuC,QAAQ,SAACuuC,GACnB,GAAIH,EAAQI,qBAAuBD,EAAKE,gBAAiB,CACzE,GAA0BC,GAAgBP,EAAKG,MAAMC,EAAKI,UAEtCV,GAAiBziC,KAAKkjC,EAAiB,eAK/CnxC,KAAK+d,UACL/d,KAAK+d,QAAQszB,MAAMX,GACnB1wC,KAAK+d,QAAQuzB,mBAGjBtxC,KAAK2vC,oBAGTlqB,EAAJrkB,UAAA4sC,UAAI,WACJ,GAAcC,GAAcjuC,KAAK4C,WAAWhB,cAAcssC,gBAClD,OAAID,GAAYt/B,OACLs/B,EAAY,GAAG/qB,OAGnB,GAGXuC,EAAJrkB,UAAA8uC,oBAAI,SAAoB3xB,GAChBve,KAAK+uC,iBAAiBjqC,KAAK,GAAI2pC,IAAuBzuC,KAAMue,KAGhEkH,EAAJrkB,UAAA0pC,gBAAI,SAAgBvsB,GACZve,KAAKggB,gBAAgBlb,KAAK,GAAI2pC,IAAuBzuC,KAAMue,KAGvDkH,EAAZrkB,UAAAq+B,aAAI,SAAqBtvB,GACjB,MAAOA,IAAS,GAAKA,EAAQnQ,KAAK+d,QAAQpP,QAGtC8W,EAAZrkB,UAAA6uC,gBAAI,SAAwB1xB,GACpB,QAASve,KAAK8uC,YAAsD,IAAxC9uC,KAAKye,eAAeE,SAAShQ,QAAgB4P,EAAOI,0BAvQxFtY,KAACgL,EAAAA,UAAD9K,OACIC,SAAU,oBACVC,SAAU,kBACV6K,SAAU,kDACV5K,MACI8C,MAAO,oBAEPua,kBAAmB,WAEnBpd,YAAa,oBACbyd,kBAAmB,sBAEvBnP,QAAS,qdACT/L,cAAeC,EAAAA,kBAAkBC,KACjCL,gBAAiBC,EAAAA,wBAAwBC,OACzCR,YACM8Q,QAASg0B,GAAiC9zB,YAAagM,IACvDlM,QAASkL,EAAAA,QAAShL,YAAagM,4CA5DzCpf,KAAIS,EAAAA,aALJT,KAAIkrC,EAAAA,kBANJlrC,KAAI2D,EAAAA,oBAgIJ3D,KAAAgU,OAAAlT,aAAAd,KAASiU,EAAAA,UAAT/T,MAAmB,gBACnBF,KAAAgU,OAAAlT,aAAAd,KAASiU,EAAAA,UAAT/T,MAAmB,gBACnBF,KAAAgU,OAAAlT,aAAAd,KAASiU,EAAAA,UAAT/T,MAAmB,mBACnBF,KAAAgU,OAAAlT,aAAAd,KAASiU,EAAAA,UAAT/T,MAAmB,sCAtDnBkqC,aAAApqC,KAAKiE,EAAAA,UAAL/D,MAAeirC,EAAAA,qBAEfzzB,UAAA1X,KAAK00B,EAAAA,gBAALx0B,MAAqBmnC,MAgBrBqB,mBAAA1oC,KAAKmB,EAAAA,SAELwY,kBAAA3Z,KAAKmB,EAAAA,SAEL3D,WAAAwC,KAAKqB,EAAAA,SA4NL+d,GArPqCopB,IClE/B4C,IACFhsB,GACAioB,GACAxB,GACAE,GACAiB,IAGJhnB,GAAA,WAAA,QAAAA,MAK2B,sBAL3BhgB,KAAC8B,EAAAA,SAAD5B,OACI+B,SAAUC,EAAAA,aAAc6d,EAAAA,cAAeG,IACvCle,QAASopC,GACTrpC,aAAcqpC,OAElBprB,mBCgBI,QAAJqrB,GACeC,EACA7E,EACAG,EACA2E,GAHA5xC,KAAf2xC,kBAAeA,EACA3xC,KAAf8sC,SAAeA,EACA9sC,KAAfitC,aAAeA,EACAjtC,KAAf4xC,YAAeA,EA2Df,MAxDIF,GAAJtwC,UAAAywC,YAAI,SAAYb,EAASjE,EAAe+E,EAAkBC,GAAtD,GAAJhyC,GAAAC,KACcgyC,EAAWhyC,KAAK2xC,kBAAkBX,EAAMjE,EAgB9C,OAfA+E,GAAY7jC,KAAK+jC,GAEbhyC,KAAKitC,aAAa+E,IAClBhyC,KAAK4xC,YAAYZ,GACZ3sC,KAAKmH,EAAAA,KAAK,IACVhH,UAAU,SAACytC,GACRA,EAASxvC,QAAQ,SAACyvC,EAAO/hC,GAC7C,GAA8BgiC,GAA4BJ,EAAU/hC,OAC5CmiC,GAAelkC,KAAKkC,IAAU8hC,EAAStjC,OAAS,GAEhD5O,EAAK8xC,YAAYK,EAAOnF,EAAQ,EAAG+E,EAAaK,OAKzDL,GAQXJ,EAAJtwC,UAAAgxC,aAAI,SAAaC,GAAb,GAAJtyC,GAAAC,KACc8xC,IAGN,OAFAO,GAAe5vC,QAAQ,SAACuuC,GAAS,MAAAjxC,GAAK8xC,YAAYb,EAAM,EAAGc,QAEpDA,GAOXJ,EAAJtwC,UAAAkxC,qBAAI,SAAqBvB,EAAYlE,GAAjC,GAAJ9sC,GAAAC,KACcuyC,KACAC,IAgBN,OAfAA,GAAc,IAAK,EAEnBzB,EAAMtuC,QAAQ,SAACuuC,GAEX,IAAK,GADD3B,IAAS,EACJhL,EAAI,EAAGA,GAAKtkC,EAAK+sC,SAASkE,GAAO3M,IACtCgL,EAASA,GAAUmD,EAAcnO,EAGjCgL,IAAUkD,EAAQtkC,KAAK+iC,GAEvBjxC,EAAKktC,aAAa+D,KAClBwB,EAAczyC,EAAK+sC,SAASkE,GAAQ,GAAKnE,EAAY4F,WAAWzB,MAIjEuB,GAEfb,oBA4BI,QAAJgB,GACgB7F,EACA8F,EACRC,OAAR,KAAAA,IAAQA,KAHJ,IAAJ7yC,GAKQmX,EALRI,KAAAtX,OAAAA,WACgBD,GAAhB8sC,YAAgBA,EACA9sC,EAAhB4yC,cAAgBA,EAnBZ5yC,EAAJ8yC,cAAoB,GAAI53B,GAAAA,oBAEpBlb,EAAJ+yC,aAAmB,GAAI73B,GAAAA,oBAsBflb,EAAKgzC,MAAQ,GAAI93B,GAAAA,gBAAqB23B,KAuB9C,MAhDgDz6B,GAAhDu6B,EAAAx7B,GAKI/W,OAAJ2M,eAAQ4lC,EAARtxC,UAAA,YAAI,WACI,MAAOpB,MAAK+yC,MAAM7wC,WAGtB,SAASA,GACLlC,KAAK+yC,MAAM/vC,KAAKd,GAEhBlC,KAAK6yC,cAAc7vC,KAAKhD,KAAK2yC,cAAcP,aAAapyC,KAAK4E,OAC7D5E,KAAK6sC,YAAYmG,UAAYhzC,KAAK6yC,cAAc3wC,uCAepDwwC,EAAJtxC,UAAA6xC,QAAI,SAAQC,GAAR,GAAJnzC,GAAAC,KACc8Q,GACFoiC,EAAiBC,WACjBnzC,KAAK6sC,YAAYuG,eAAexe,QAChC50B,KAAK6yC,cAGT,OAAOhnC,GAAAA,MAAfwuB,UAAA,GAAwBvpB,GACXzM,KAAKub,EAAAA,IAAI,WAKN,MAJA7f,GAAK+yC,aAAa9vC,KACdjD,EAAK4yC,cAAcL,qBAAqBvyC,EAAK8yC,cAAc3wC,MAAOnC,EAAK8sC,cAGpE9sC,EAAK+yC,aAAa5wC,UAIrCwwC,EAAJtxC,UAAAiyC,WAAI,aAGJX,GAhDgDY,EAAAA,2BCvGhD,QAAAC,KAAA,GAAAxzC,GAAA,OAAAmX,GAAAA,EAAAmjB,MAAAr6B,KAAAqsC,YAAArsC,WAWYD,GAAZgzC,MAAoB,GAAI93B,GAAAA,sBAUxB,MArB+C9C,GAA/Co7B,EAAAr8B,GAEI/W,OAAJ2M,eAAQymC,EAARnyC,UAAA,YAAI,WACI,MAAOpB,MAAK+yC,MAAM7wC,WAGtB,SAASA,GACLlC,KAAK+yC,MAAM/vC,KAAKd,oCAMpBqxC,EAAJnyC,UAAA6xC,QAAI,SAAQC,GAAR,GAAJnzC,GAAAC,IACQ,OAAO6L,GAAAA,MAAfwuB,UAAA,IAAyB6Y,EAAiBC,WAAYnzC,KAAK+yC,QAC9C1uC,KAAKub,EAAAA,IAAI,WAAM,MAAA7f,GAAK6E,SAG7B2uC,EAAJnyC,UAAAiyC,WAAI,aAGJE,GArB+CD,EAAAA,YCP/CrN,GAAA,WAEI,QAAJA,GAAuB30B,GAAAtR,KAAvBsR,SAAuBA,EACvB,sBAHAjL,KAACC,EAAAA,UAADC,OAAaC,SAAU,yDAJvBH,KAAoBoH,EAAAA,eAOpBw4B,KCFAD,GAAA,SAAA9uB,GAAA,QAAA8uB,oDAG2C,MAAX7tB,GAAhC6tB,EAAA9uB,kBAHA7Q,KAACC,EAAAA,UAADC,OACIC,SAAU,mCAEdw/B,GAAgCwN,EAAAA,UAGhC,IAAoBC,eAAiB,WAAM,MAACD,GAAS,UAASC,eCe9D,QAAAC,GAAA,WAAA,QAAAA,MAAwB,MAAxBA,MACaC,GAAoD98B,EAC7D68B,IAGJvO,GAAA,SAAAjuB,GAqEI,QAAJiuB,GAAwBlH,GAApB,GAAJl+B,GACQmX,EADRI,KAAAtX,OAAAA,WAAwBD,GAAxBk+B,iBAAwBA,EApCpBl+B,EAAJ6zC,UAAwB,GAcX7zC,EAAbof,aAA4B,GAAIpU,GAAAA,QAM5BhL,EAAJiF,SAA8B,KAM1BjF,EAAJmF,OAA4B,KAKxBnF,EAAJokC,UAAe,EAGHpkC,EAAZ8zC,cAAmD,OAyBnD,MAjF2B17B,GAA3BgtB,EAAAjuB,GAGI/W,OAAJ2M,eAAQq4B,EAAR/jC,UAAA,eAAI,WACI,MAAOpB,MAAK6zC,+CA0DhB1O,EAAJ/jC,UAAAyP,YAAI,SAAYC,IAEJA,EAAQgjC,eAAe,cACvBhjC,EAAQgjC,eAAe,cAEvB9zC,KAAKmf,aAAanc,QAI1BmiC,EAAJ/jC,UAAAkB,YAAI,WACItC,KAAKmf,aAAalc,YAGtBkiC,EAAJ/jC,UAAAgB,SAAI,WACIpC,KAAK6zC,cAAgB,GAAIlmC,GAAAA,eACrB3N,KAAK+zC,iBAAmB/zC,KAAKg0C,gBAC7Bh0C,KAAKi+B,kCAzFjB53B,KAACgL,EAAAA,UAAD9K,OACIC,SAAU,SAIV8K,SAAU,uDACVsI,QAAS,YACT7Q,gBAAiBC,EAAAA,wBAAwBC,OACzCC,cAAeC,EAAAA,kBAAkBC,KACjC3C,SAAU,gDA7BdJ,KAAIY,EAAAA,sCAsCJgtC,gBAAA5tC,KAAKkf,EAAAA,aAALhf,MAAkBy/B,MAMlB+N,kBAAA1tC,KAAKkf,EAAAA,aAALhf,MAAkB0/B,IAAgBiO,KAAMzmC,EAAAA,gBAIxCumC,kBAAA3tC,KAAKiE,EAAAA,UAAL/D,MAAekH,EAAAA,eAIfmmC,YAAAvtC,KAAKqB,EAAAA,MAALnB,MAAW,WAIXiR,YAAAnR,KAAKqB,EAAAA,MAALnB,MAAW,gBAOXkR,iBAAApR,KAAKqB,EAAAA,MAALnB,MAAW,sBAiDX4+B,GAjF2BwO,IChCdjW,IAITC,aAAc3jB,EAAAA,QAAQ,gBAElBtE,EAAAA,MACI,wDACA5T,EAAAA,OAAQ8wB,UAAW,UAOvBld,EAAAA,MACI,OACA5T,EAAAA,OAAQ8wB,UAAW,2BAA4BlL,UAAW,SAE9DhS,EAAAA,MACI,QACA5T,EAAAA,OAAQ8wB,UAAW,0BAA2BlL,UAAW,SAG7DxN,EAAAA,WACI,yDACAC,EAAAA,QAAQ,yDAEZD,EAAAA,WAAW,8BACPpY,EAAAA,OAAQ8wB,UAAW,6BACnBzY,EAAAA,QAAQ,0DAEZD,EAAAA,WAAW,+BACPpY,EAAAA,OAAQ8wB,UAAW,4BACnBzY,EAAAA,QAAQ;0E3BSpBoiB,GAAA,WAuDI,QAAJA,GAAwB35B,EACY44B,EACpBtb,GAFZ,GAAJngB,GAAAC,IAAwBA,MAAxB4C,WAAwBA,EACY5C,KAApCw7B,IAAoCA,EAhCbx7B,KAAvBw8B,YAA2D,GAAI1kB,GAAAA,aAGxC9X,KAAvBy8B,gBAAgE,GAAI3kB,GAAAA,aAG7C9X,KAAvB08B,mBAAmE,GAAI5kB,GAAAA,aAGhD9X,KAAvB28B,WAAwD,GAAI7kB,GAAAA,cAAmB,GAclE9X,KAAb48B,kBAAyC,MAM7B58B,KAAZ68B,sBAAoCC,EAAAA,aAAaC,MAMrC/8B,KAAKw7B,KAAOtb,IACZlgB,KAAK68B,sBAAwB78B,KAAKw7B,IAAI3jB,OAAOrT,UAAU,SAACoB,GACpD7F,EAAKi9B,8BAA8Bp3B,GACnCsa,EAAkBjf,kBA0ElC,MA1HId,QAAJ2M,eACQyvB,EADRn7B,UAAA,gBAAI,SACa4D,GACThF,KAAKi9B,cAAgBj4B,EACrBhF,KAAKg9B,iEAsDTT,EAAJn7B,UAAAgB,SAAI,WAC8B,WAAtBpC,KAAKk9B,cAA4C,MAAfl9B,KAAKkF,SACvClF,KAAKk9B,aAAel9B,KAAKm9B,8BAIjCZ,EAAJn7B,UAAAkB,YAAI,WACItC,KAAK68B,sBAAsB/nB,eAG/BynB,EAAJn7B,UAAAg8B,sBAAI,SAAsBj6B,GAC1B,GAAck6B,GAAcr9B,KAAKs9B,iBAAiBn6B,EAAEkI,QAC5CrL,MAAKy8B,gBAAgB33B,KAAKu4B,GACtBA,GACAr9B,KAAKw8B,YAAY13B,KAAK9E,KAAK4C,WAAWhB,cAAcH,eAI5D86B,EAAJn7B,UAAAm8B,uBAAI,SAAuBp6B,GAEfnD,KAAKs9B,iBAAiBn6B,EAAEkI,UAAYrL,KAAKs9B,iBAAiBt9B,KAAKk9B,eAC/Dl9B,KAAK28B,WAAW73B,OAGhB9E,KAAKs9B,iBAAiBn6B,EAAEq6B,aAAex9B,KAAKs9B,iBAAiBt9B,KAAKk9B,eAClEl9B,KAAK08B,mBAAmB53B,QAKhCy3B,EAAJn7B,UAAAq8B,mBAAI,WACI,MAAOz9B,MAAKw7B,KAA0B,QAAnBx7B,KAAKw7B,IAAIt5B,MAAkB,MAAQ,OAI1Dq6B,EAAJn7B,UAAAk8B,iBAAI,SAAiBt4B,GACb,MAAoB,WAAbA,GACU,uBAAbA,GACa,wBAAbA,GAIAu3B,EAAZn7B,UAAA47B,8BAAI,SAAsCxB,OAA1C,KAAAA,IAA0CA,EAAiBx7B,KAAKy9B,sBACpDz9B,KAAKi9B,cAAgB,EACrBj9B,KAAKk9B,aAAuB,QAAR1B,EAAgB,OAAS,QACtCx7B,KAAKi9B,cAAgB,EAC5Bj9B,KAAKk9B,aAAuB,QAAR1B,EAAgB,QAAU,OAE9Cx7B,KAAKk9B,aAAe,UAQpBX,EAAZn7B,UAAA+7B,0BAAI,WACJ,GAAc3B,GAAMx7B,KAAKy9B,oBAEjB,OAAa,QAARjC,GAAiBx7B,KAAKkF,QAAU,GAAe,QAARs2B,GAAiBx7B,KAAKkF,OAAS,EAChE,qBAGJ,sCAtIfmB,KAACgL,EAAAA,UAAD9K,OACIC,SAAU,cACV8K,SAAJ,mSACI2D,QAAS,uHACT/L,cAAeC,EAAAA,kBAAkBC,KACjCL,gBAAiBC,EAAAA,wBAAwBC,OACzCI,YAAaq0B,GAAiBC,cAC9Bj3B,MACI8C,MAAO,uDAnDfnD,KAAIS,EAAAA,aAUJT,KAASiB,EAAAA,eAATH,aAAAd,KAyFiBkB,EAAAA,aA1GjBlB,KAAI2D,EAAAA,uCAgEJhF,WAAAqB,KAAKqB,EAAAA,QAUL80B,cAAAn2B,KAAKmB,EAAAA,SAGLi1B,kBAAAp2B,KAAKmB,EAAAA,SAGLk1B,qBAAAr2B,KAAKmB,EAAAA,SAGLm1B,aAAAt2B,KAAKmB,EAAAA,SAGLo2B,aAAAv3B,KAAKiE,EAAAA,UAAL/D,MAAes3B,EAAAA,uBAGfC,UAAAz3B,KAAKqB,EAAAA,MAALnB,MAAW,aAGXrB,SAAAmB,KAAKqB,EAAAA,QAKLk1B,oBAAAv2B,KAAKqB,EAAAA,SAyFL60B,KAMAwB,GAAA,SAAA7mB,GASI,QAAJ6mB,GACQC,EACAC,EAC6Cv3B,GAHjD,GAAJ3G,GAIQmX,EAJRI,KAAAtX,KAIcg+B,EAA0BC,IAJxCj+B,WAGqDD,GAArD2G,KAAqDA,EAPzC3G,EAAZm+B,aAA2BpB,EAAAA,aAAaC,MAE5Bh9B,EAAZo+B,WAAyBrB,EAAAA,aAAaC,QAgCtC,MApCqC5kB,GAArC4lB,EAAA7mB,GAcI6mB,EAAJ38B,UAAAgB,SAAI,WAAA,GAAJrC,GAAAC,IACQkX,GAAR9V,UAAcgB,SAAdkV,KAAAtX,MAEQA,KAAKk+B,aAAel+B,KAAK0G,KAAK+1B,gBACzBp4B,KAAK0wB,EAAAA,UAAU/0B,KAAK0G,KAAK42B,iBAAiBt9B,KAAK0G,KAAKw2B,gBACpD14B,UAAU,SAAC64B,GACJA,IAAgBt9B,EAAK4d,eACrB5d,EAAKmE,OAAOnE,EAAK2G,KAAKo3B,WAIlC99B,KAAKm+B,WAAan+B,KAAK0G,KAAKg2B,mBAAmBl4B,UAAU,WACrDzE,EAAK+D,YAKbi6B,EAAJ38B,UAAAkB,YAAI,WACI4U,EAAR9V,UAAckB,YAAdgV,KAAAtX,MACQA,KAAKk+B,aAAappB,cAClB9U,KAAKm+B,WAAWrpB,8BArCxBzO,KAACC,EAAAA,UAADC,OACIC,SAAU,0DArLdH,KAAI+3B,EAAAA,2BACJ/3B,KAAIY,EAAAA,mBA+LJZ,KAA2Dk2B,GAA3Dp1B,aAAAd,KAASe,EAAAA,OAATb,MAAgBmT,EAAAA,WAAW,WAAM,MAAA6iB,YA2BjCwB,GApCqCxzB,EAAAA,+BC5LrC,QAAA8zB,MAAoC,MAApCA,MACaC,GACsBznB,EAAcwnB,IAMjDE,GAAA,SAAArnB,GASI,QAAJqnB,GAAuB37B,GAAnB,GAAJ7C,GACQmX,EADRI,KAAAtX,OAAAA,WAAuBD,GAAvB6C,WAAuBA,IAgBvB,MAjBuCuV,GAAvComB,EAAArnB,GAMIqnB,EAAJn9B,UAAAiX,MAAI,WACIrY,KAAK4C,WAAWhB,cAAcyW,SAGlCkmB,EAAJn9B,UAAAo9B,cAAI,WACI,MAAOx+B,MAAK4C,WAAWhB,cAAc68B,YAGzCF,EAAJn9B,UAAAs9B,eAAI,WACI,MAAO1+B,MAAK4C,WAAWhB,cAAc+8B,4BAvB7Ct4B,KAACC,EAAAA,UAADC,OACIC,SAAU,sBACVoT,QAAS,YACTlT,MACIoT,sBAAuB,WACvB8kB,uBAAwB,sDAvBhCv4B,KAAoBS,EAAAA,cA2CpBy3B,GAjBuCD,kBCsBvC,QAAAO,MAA8B,MAA9BA,MASAC,GAAA,SAAA5nB,GAkHI,QAAJ4nB,GACgBl8B,EACAsd,EACAoC,EACYkZ,EACZxpB,GALZ,GAAJjS,GAOQmX,EAPRI,KAAAtX,OAAAA,WACgBD,GAAhB6C,WAAgBA,EACA7C,EAAhBmgB,kBAAgBA,EACAngB,EAAhBuiB,cAAgBA,EACYviB,EAA5By7B,IAA4BA,EACZz7B,EAAhBiS,OAAgBA,EA/CZjS,EAAJg/B,wBAA6B,EAGzBh/B,EAAJi/B,oBAAyB,EAGrBj/B,EAAJk/B,qBAA0B,EAIbl/B,EAAbm/B,mBAAwD,GAAIpnB,GAAAA,aAI/C/X,EAAbo/B,aAAkD,GAAIrnB,GAAAA,aAG1C/X,EAAZq/B,gBAA8B,EAGlBr/B,EAAZs/B,sBAAmC,EAGdt/B,EAArBwE,UAAiC,GAAIwG,GAAAA,QAiBzBhL,EAAZu/B,eAAqC,IAsUrC,MAzaiCnnB,GAAjC2mB,EAAA5nB,GAGI/W,OAAJ2M,eACQgyB,EADR19B,UAAA,qBAAI,WAEI,MAAOpB,MAAKs/B,oBAEhB,SAAkBp9B,GACtB,GAAcq9B,GAAe3sB,EAAAA,qBAAqB1Q,EAC1ClC,MAAKq/B,qBAAuBr/B,KAAKs/B,iBAAmBC,EACpDv/B,KAAKs/B,eAAiBC,EAElBv/B,KAAK+e,YACL/e,KAAK+e,WAAWygB,iBAAiBD,oCAKzCp/B,OAAJ2M,eAAQgyB,EAAR19B,UAAA,kBAAI,WACI,MAAOpB,MAAK+e,WAAa/e,KAAK+e,WAA0B,gBAAI,OAIhE,SAAe7c,GAENlC,KAAKy/B,aAAav9B,IACnBlC,KAAK0/B,aAAex9B,GACnBlC,KAAK+e,YAKV/e,KAAK+e,WAAWC,cAAc9c,oCAIlC/B,OAAJ2M,eAAQgyB,EAAR19B,UAAA,sBAAI,WACI,MAAOpB,MAAKo/B,qBAEhB,SAAmBO,GACf3/B,KAAKo/B,gBAAkB7d,KAAKqH,IACxB,EACArH,KAAKC,IAAIxhB,KAAK4/B,uBAAwBD,IAK1C3/B,KAAK6/B,uBAAwB,EAC7B7/B,KAAK8/B,0DA+DThB,EAAJ19B,UAAA2+B,sBAAI,WAEQ//B,KAAKggC,gBAAkBhgC,KAAKigC,cAActxB,SAC1C3O,KAAKkgC,mBACLlgC,KAAKggC,cAAgBhgC,KAAKigC,cAActxB,OACxC3O,KAAKkgB,kBAAkBjf,gBAKvBjB,KAAKq/B,uBACLr/B,KAAKmgC,cAAcngC,KAAKs/B,gBACxBt/B,KAAK8/B,yBACL9/B,KAAKq/B,sBAAuB,EAC5Br/B,KAAKkgB,kBAAkBjf,gBAKvBjB,KAAK6/B,wBACL7/B,KAAKogC,0BACLpgC,KAAK6/B,uBAAwB,EAC7B7/B,KAAKkgB,kBAAkBjf,iBAI/B69B,EAAJ19B,UAAA8B,cAAI,SAAcP,GACV,OAAQA,EAAMU,SACV,IAAKs1B,GAAAA,KACD34B,KAAK+e,WAAWwB,qBAChB5d,EAAMkqB,gBACN,MACJ,KAAK+L,GAAAA,IACD54B,KAAK+e,WAAW8Z,oBAChBl2B,EAAMkqB,gBACN,MACJ,KAAKyL,GAAAA,MACL,IAAKC,GAAAA,MACDv4B,KAAKk/B,mBAAmBp6B,KAAK9E,KAAK0/B,YAClC/8B,EAAMkqB,gBACN,MACJ,SACI7sB,KAAK+e,WAAW0Z,UAAU91B,KAItCm8B,EAAJ19B,UAAAszB,mBAAI,WAAA,GAAJ30B,GAAAC,KACcqgC,EAAYrgC,KAAKw7B,IAAMx7B,KAAKw7B,IAAI3jB,OAASyoB,EAAAA,GAAa,MACtDC,EAASvgC,KAAKsiB,cAAczK,OAxMX,KAyMjB2oB,EAAU,WACZzgC,EAAKmgC,mBAGTlgC,MAAK+e,WAAa,GAAI0hB,GAAAA,gBAAgBzgC,KAAKigC,eACtC7K,0BAA0Bp1B,KAAKy9B,sBAC/BiD,WAEL1gC,KAAK+e,WAAWygB,iBAAiB,OAIAt4B,WAA1By5B,uBACDH,IACAG,sBAAsBH,GAI5B30B,EAAAA,MAAMw0B,EAAWE,GACZl8B,KAAKC,EAAAA,UAAUtE,KAAKuE,YACpBC,UAAU,WACPg8B,IACAzgC,EAAKgf,WAAWqW,0BACZr1B,EAAK09B,wBAOjBz9B,KAAK+e,WAAWlH,OACXxT,KAAKC,EAAAA,UAAUtE,KAAKuE,YACpBC,UAAU,SAACo8B,GACR7gC,EAAKo/B,aAAar6B,KAAK87B,GACvB7gC,EAAK8gC,YAAYD,MAI7B9B,EAAJ19B,UAAAkB,YAAI,WACItC,KAAKuE,UAAUvB,OACfhD,KAAKuE,UAAUtB,YAMnB67B,EAAJ19B,UAAA0/B,iBAAI,WAAA,GAAJ/gC,GAAAC,KACc+gC,EAAc/gC,KAAK4C,WAAWhB,cAAcm/B,WAMlD,IAAIA,IAAgB/gC,KAAKghC,mBAAoB,CACzChhC,KAAKghC,mBAAqBD,CAEtC,IAAkBE,GAAe,WACjBlhC,EAAKmgC,mBACLngC,EAAKmgB,kBAAkBjf,eAM3BjB,MAAKgS,OAAShS,KAAKgS,OAAOyL,IAAIwjB,GAAgBA,MAWtDnC,EAAJ19B,UAAA8+B,iBAAI,WACIlgC,KAAKkhC,yBACLlhC,KAAK8/B,yBACL9/B,KAAKogC,2BAOTtB,EAAJ19B,UAAAq+B,aAAI,SAAatvB,GACT,IAAKnQ,KAAKigC,cACN,OAAO,CAGnB,IAAckB,GAAMnhC,KAAKigC,cACXjgC,KAAKigC,cAAc5gB,UAAUlP,GAC7B,IAEN,SAASgxB,IAAQA,EAAIt9B,UAOzBi7B,EAAJ19B,UAAAy/B,YAAI,SAAYxpB,GAKR,GAJIrX,KAAK++B,wBACL/+B,KAAKmgC,cAAc9oB,GAGnBrX,KAAKigC,eAAiBjgC,KAAKigC,cAActxB,OAAQ,CACjD3O,KAAKigC,cAAc5gB,UAAUhI,GAAUgB,OAKnD,IAAkB+oB,GAAcphC,KAAKqhC,iBAAiBz/B,cACpC45B,EAAMx7B,KAAKy9B,oBAGb2D,GAAYE,WADJ,QAAR9F,EACyB,EAGrB4F,EAAYG,YAAcH,EAAYzC,cAMtDG,EAAJ19B,UAAAq8B,mBAAI,WACI,MAAOz9B,MAAKw7B,KAA0B,QAAnBx7B,KAAKw7B,IAAIt5B,MAAkB,MAAQ,OAI1D48B,EAAJ19B,UAAAg/B,wBAAI,WACJ,GAAcoB,GAAiBxhC,KAAKwhC,eACtBC,EAC4B,QAA9BzhC,KAAKy9B,sBACE+D,EACDA,CAOVxhC,MAAK0hC,QAAQ9/B,cAAcE,MAAM8wB,UAAY,cAAcrR,KAAKuB,MAAM2e,GAA9E,MAKQzhC,KAAK0hC,QAAQ9/B,cAAc0/B,WAAa,GAW5CxC,EAAJ19B,UAAAugC,aAAI,SAAaC,GACjB,GAAcC,GAAa7hC,KAAKqhC,iBAAiBz/B,cAAc+8B,WAGvD3+B,MAAKwhC,iBACe,WAAdI,GAA0B,EAAI,GAAKC,EA3Wf,GAoX9B/C,EAAJ19B,UAAA++B,cAAI,SAAc2B,GAClB,GAAcC,GAAgB/hC,KAAKigC,cACrBjgC,KAAKigC,cAAc5gB,UAAUyiB,GAC7B,IAEN,IAAKC,EAAL,CAKR,GAEYC,GACAC,EAHEJ,EAAa7hC,KAAKqhC,iBAAiBz/B,cAAc+8B,WAKrB,SAA9B3+B,KAAKy9B,sBACLuE,EAAiBD,EAAcvD,gBAC/ByD,EAAgBD,EAAiBD,EAAcrD,mBAE/CuD,EACIjiC,KAAK0hC,QAAQ9/B,cAAc+8B,YAC3BoD,EAAcvD,gBAClBwD,EAAiBC,EAAgBF,EAAcrD,iBAG3D,IAAcwD,GAAmBliC,KAAKwhC,eACxBW,EAAkBniC,KAAKwhC,eAAiBK,CAE1CG,GAAiBE,EAEjBliC,KAAKwhC,gBACDU,EAAmBF,EArYJ,GAsYZC,EAAgBE,IAEvBniC,KAAKwhC,gBACDS,EAAgBE,EAzYD,MAqZ3BrD,EAAJ19B,UAAA8/B,uBAAI,WACJ,GAAckB,GACFpiC,KAAK0hC,QAAQ9/B,cAAc2/B,YAC3BvhC,KAAK4C,WAAWhB,cAAc+8B,WAE7ByD,KACDpiC,KAAKwhC,eAAiB,GAGtBY,IAAcpiC,KAAK++B,wBACnB/+B,KAAKkgB,kBAAkBjf,eAG3BjB,KAAK++B,uBAAyBqD,GAYlCtD,EAAJ19B,UAAA0+B,uBAAI,WAEI9/B,KAAKi/B,oBAA8C,IAAxBj/B,KAAKwhC,eAChCxhC,KAAKg/B,mBACDh/B,KAAKwhC,iBAAmBxhC,KAAK4/B,uBACjC5/B,KAAKkgB,kBAAkBjf,gBAU3B69B,EAAJ19B,UAAAw+B,qBAAI,WAII,MAHwB5/B,MAAK0hC,QAAQ9/B,cAAc2/B,YAChCvhC,KAAKqhC,iBAAiBz/B,cAAc+8B,aAEhB,kBApb/Ct4B,KAACgL,EAAAA,UAAD9K,OACIC,SAAU,gBACV8K,SAAJ,2vBACI2D,QAAS,44CACT/L,cAAeC,EAAAA,kBAAkBC,KACjCL,gBAAiBC,EAAAA,wBAAwBC,OACzCvC,MACI8C,MAAO,gBACP64B,qDACI,yBACJC,4BAA6B,yEA5DrCj8B,KAAIS,EAAAA,aAHJT,KAAI2D,EAAAA,oBAkBJ3D,KAASqe,EAAAA,gBAHTre,KAAoBiB,EAAAA,eAApBH,aAAAd,KA4JSkB,EAAAA,aArKTlB,KAAIU,EAAAA,4BA+DJyvB,gBAAAnwB,KAAKqB,EAAAA,QAgDLu4B,gBAAA55B,KAAK00B,EAAAA,gBAALx0B,MAAqBg4B,MAErB8C,mBAAAh7B,KAAKiE,EAAAA,UAAL/D,MAAe,sBAEfm7B,UAAAr7B,KAAKiE,EAAAA,UAAL/D,MAAe,aAaf24B,qBAAA74B,KAAKmB,EAAAA,SAIL23B,eAAA94B,KAAKmB,EAAAA,UAiWLs3B,GAzaiCD,ICrCjC0D,GAAA,WAAA,QAAAA,MAIoC,sBAJpCl8B,KAACC,EAAAA,UAADC,OACIC,SAAU,+DACVE,MAAQ8C,MAAO,0BAEnB+4B,KAEAC,GAAA,WAAA,QAAAA,MAI0C,sBAJ1Cn8B,KAACC,EAAAA,UAADC,OACIC,SAAU,6EACVE,MAAQ8C,MAAO,wCAEnBg5B,KAEAC,GAAA,WAAA,QAAAA,MAIuC,sBAJvCp8B,KAACC,EAAAA,UAADC,OACIC,SAAU,uEACVE,MAAQ8C,MAAO,qCAEnBi5B,KAEAC,GAAA,WAAA,QAAAA,MAIsC,sBAJtCr8B,KAACC,EAAAA,UAADC,OACIC,SAAU,mEACVE,MAAQ8C,MAAO,mCAEnBk5B,KAGIC,GAAS,gBAGb,QAAAC,MAKA,MAAAA,MAYaC,GAAiB,GAAIr2B,GAAAA,eAAe,gCAM7C,QAAJs2B,GAAuBrsB,GAAAzW,KAAvByW,YAAuBA,EACvB,MAAAqsB,MACaC,GAGTnsB,EAAWC,EAAcisB,KAM7BE,GAAA,SAAA9rB,GAwEI,QAAJ8rB,GACQpgC,EACQsd,EACoB+iB,EACQC,GAJxC,GAAJnjC,GAMQmX,EANRI,KAAAtX,KAMc4C,IANd5C,WAEgBD,GAAhBmgB,kBAAgBA,EArCHngB,EAAbojC,eAAmD,QAM5BpjC,EAAvBqjC,oBAAmE,GAAItrB,GAAAA,aAGhD/X,EAAvBsjC,YACQ,GAAIvrB,GAAAA,aAGW/X,EAAvBujC,cAA2D,GAAIxrB,GAAAA,aAGxC/X,EAAvBwjC,kBACQ,GAAIzrB,GAAAA,cAA+B,GAG/B/X,EAAZyjC,cAA2C,EAG/BzjC,EAAZ0jC,qBAA2C,EAG/B1jC,EAAZ2jC,iBAA+B5G,EAAAA,aAAaC,MAGhCh9B,EAAZ4jC,qBAAmC7G,EAAAA,aAAaC,MACpCh9B,EAAZ6jC,gBAAsC,EAC1B7jC,EAAZu/B,eAA4C,KAYpCv/B,EAAK8jC,SAAWpxB,EAAAA,sBAAsBwwB,GAEtCljC,EAAK+jC,QAAUnB,KACf5iC,EAAK68B,kBAAoBsG,GAAiBA,EAActG,kBACpDsG,EAActG,kBAAoB,QA4K9C,MAlPgCzkB,GAAhC6qB,EAAA9rB,GAKI/W,OAAJ2M,eACQk2B,EADR5hC,UAAA,qBAAI,WAC+B,MAAOpB,MAAK4jC,oBAC3C,SAAkB1hC,GAAkBlC,KAAK4jC,eAAiBnxB,EAAAA,sBAAsBvQ,oCAGhF/B,OAAJ2M,eACQk2B,EADR5hC,UAAA,qBAAI,WACqC,MAAOpB,MAAKs/B,oBACjD,SAAkBp9B,GACdlC,KAAKwjC,cAAgB5wB,EAAAA,qBAAqB1Q,EAAO,uCAkErD8gC,EAAJ5hC,UAAA2+B,sBAAI,WAAA,GAAJhgC,GAAAC,KAGcwjC,EAAgBxjC,KAAKwjC,cAAgBxjC,KAAK+jC,cAAc/jC,KAAKwjC,cAInE,IAAIxjC,KAAKs/B,iBAAmBkE,EAAe,CACnD,GAAkBQ,GAAoC,MAAvBhkC,KAAKs/B,cAEnB0E,IACDhkC,KAAKujC,kBAAkBz+B,KAAK9E,KAAKikC,kBAAkBT,IAKvDnK,QAAQC,UAAUC,KAAK,WACnBx5B,EAAKmkC,KAAKzhC,QAAQ,SAAC0+B,EAAKhxB,GAAU,MAAAgxB,GAAIgD,SAAWh0B,IAAUqzB,IAEtDQ,GACDjkC,EAAKqjC,oBAAoBt+B,KAAK0+B,KAM1CxjC,KAAKkkC,KAAKzhC,QAAQ,SAAC0+B,EAAYhxB,GAC3BgxB,EAAIn8B,SAAWmL,EAAQqzB,EAII,MAAvBzjC,EAAKu/B,gBAA2C,IAAjB6B,EAAIn8B,UAAmBm8B,EAAIj8B,SAC1Di8B,EAAIj8B,OAASs+B,EAAgBzjC,EAAKu/B,kBAItCt/B,KAAKs/B,iBAAmBkE,IACxBxjC,KAAKs/B,eAAiBkE,EACtBxjC,KAAKkgB,kBAAkBjf,iBAI/B+hC,EAAJ5hC,UAAAszB,mBAAI,WAAA,GAAJ30B,GAAAC,IACQA,MAAKokC,uBAILpkC,KAAK0jC,iBAAmB1jC,KAAKkkC,KAAKpzB,QAAQtM,UAAU,WAKhD,GAJsBzE,EAAKgkC,cAAchkC,EAAKyjC,iBAIxBzjC,EAAKu/B,eAGvB,IAAK,GAFC4E,GAAOnkC,EAAKmkC,KAAK7kB,UAEdglB,EAAI,EAAGA,EAAIH,EAAKv1B,OAAQ01B,IAC7B,GAAIH,EAAKG,GAAGF,SAAU,CAIlBpkC,EAAKyjC,cAAgBzjC,EAAKu/B,eAAiB+E,CAC3C,OAKZtkC,EAAKqkC,uBACLrkC,EAAKmgB,kBAAkBjf,kBAI/B+hC,EAAJ5hC,UAAAkB,YAAI,WACItC,KAAK0jC,iBAAiB5uB,cACtB9U,KAAK2jC,qBAAqB7uB,eAG9BkuB,EAAJ5hC,UAAA0nB,aAAI,SAAa3Y,GACTnQ,KAAKqjC,YAAYv+B,KAAK9E,KAAKikC,kBAAkB9zB,KAIjD6yB,EAAJ5hC,UAAAkjC,cAAI,SAAcD,GACV,MAAO,gBAAgBrkC,KAAK8jC,QAApC,IAA+CO,GAI3CrB,EAAJ5hC,UAAAmjC,gBAAI,SAAgBF,GACZ,MAAO,kBAAkBrkC,KAAK8jC,QAAtC,IAAiDO,GAO7CrB,EAAJ5hC,UAAAojC,wBAAI,SAAwBC,GACpB,GAAKzkC,KAAK4jC,gBAAmB5jC,KAAKyjC,qBAAlC,CAER,GAAciB,GAAuB1kC,KAAK2kC,eAAe/iC,aAEjD8iC,GAAQ5iC,MAAMohB,OAAYljB,KAAKyjC,qBAAvC,KAIYzjC,KAAK2kC,eAAe/iC,cAAcu1B,eAClCuN,EAAQ5iC,MAAMohB,OAAYuhB,EAAtC,QAKIzB,EAAJ5hC,UAAAwjC,2BAAI,WACI5kC,KAAKyjC,qBAAuBzjC,KAAK2kC,eAAe/iC,cAAcH,aAC9DzB,KAAK2kC,eAAe/iC,cAAcE,MAAMohB,OAAS,GACjDljB,KAAKsjC,cAAcx+B,QAIvBk+B,EAAJ5hC,UAAAyjC,YAAI,SAAY1D,EAAY2D,EAAwB30B,GACvCgxB,EAAIt9B,WACL7D,KAAKw2B,cAAgBsO,EAAUpF,WAAavvB,IAKpD6yB,EAAJ5hC,UAAA2jC,YAAI,SAAY5D,EAAYhxB,GACpB,MAAIgxB,GAAIt9B,SACG,KAGJ7D,KAAKw2B,gBAAkBrmB,EAAQ,GAAK,GAGvC6yB,EAAZ5hC,UAAA6iC,kBAAI,SAA0B9zB,GAC9B,GAAcxN,GAAQ,GAAIigC,GAMlB,OALAjgC,GAAMwN,MAAQA,EACVnQ,KAAKkkC,MAAQlkC,KAAKkkC,KAAKv1B,SACvBhM,EAAMw+B,IAAMnhC,KAAKkkC,KAAK7kB,UAAUlP,IAG7BxN,GASHqgC,EAAZ5hC,UAAAgjC,qBAAI,WAAA,GAAJrkC,GAAAC,IACYA,MAAK2jC,sBACL3jC,KAAK2jC,qBAAqB7uB,cAG9B9U,KAAK2jC,qBAAuB93B,EAAAA,MAApCwuB,UAAA,GAA6Cr6B,KAAKkkC,KAAKtkB,IAAI,SAACuhB,GAAQ,MAAAA,GAAIhiB,gBAC3D3a,UAAU,WAAM,MAAAzE,GAAKmgB,kBAAkBjf,kBAIxC+hC,EAAZ5hC,UAAA2iC,cAAI,SAAsB5zB,GAIlB,MAAOoR,MAAKC,IAAIxhB,KAAKkkC,KAAKv1B,OAAS,EAAG4S,KAAKqH,IAAIzY,GAAS,EAAG,oBA9PnE9J,KAACgL,EAAAA,UAAD9K,OACIC,SAAU,eACVC,SAAU,aACV6K,SAAJ,s+CACI2D,QAAS,s0FACT/L,cAAeC,EAAAA,kBAAkBC,KACjCL,gBAAiBC,EAAAA,wBAAwBC,OACzC2Q,QAAS,SACTlT,MACI8C,MAAO,eACPw7B,sCAAuC,gBACvCC,uCAAwC,sEAnGhD5+B,KAAIS,EAAAA,aAHJT,KAAI2D,EAAAA,oBAsKJ3D,KAAAgU,OAAAlT,aAAAd,KAASiU,EAAAA,UAAT/T,MAAmB,qBACnBF,SAAAa,GAAAC,aAAAd,KAASe,EAAAA,OAATb,MAAgBs8B,MAAhBx8B,KAAiCkB,EAAAA,gCAzDjC29B,gBAAA7+B,KAAKqB,EAAAA,QAKL8uB,gBAAAnwB,KAAKqB,EAAAA,QAMLw8B,OAAA79B,KAAK00B,EAAAA,gBAALx0B,MAAqB4+B,MAErBR,iBAAAt+B,KAAKiE,EAAAA,UAAL/D,MAAe,oBAEfu+B,YAAAz+B,KAAKiE,EAAAA,UAAL/D,MAAe,eAGf48B,iBAAA98B,KAAKqB,EAAAA,QAGLk1B,oBAAAv2B,KAAKqB,EAAAA,QAGL07B,sBAAA/8B,KAAKmB,EAAAA,SAGL67B,cAAAh9B,KAAKmB,EAAAA,SAIL87B,gBAAAj9B,KAAKmB,EAAAA,SAGL+7B,oBAAAl9B,KAAKmB,EAAAA,UA2MLw7B,GAlPgCD,kBCjF5B,QAAJqC,GAAuB3uB,GAAAzW,KAAvByW,YAAuBA,EACvB,MAAA2uB,MACaC,GACazuB,EAAWwuB,IAKrCE,GAAA,SAAApuB,GAYQ,QAARouB,GAAoB1iC,GACpB,MAAYsU,GAAZI,KAAAtX,KAAkB4C,IAAlB5C,KAEK,MALyBmY,GAA9BmtB,EAAApuB,kBAVA7Q,KAACgL,EAAAA,UAAD9K,OACIC,SAAU,mBACVC,SAAU,wBACVmT,QAAS,SACTtI,SAAJ,4DACI2D,QAAS,q4GACTvO,MAAQ8C,MAAO,kBACfN,cAAeC,EAAAA,kBAAkBC,KACjCL,gBAAiBC,EAAAA,wBAAwBC,+CAvC7C5C,KAAIS,EAAAA,cA8CJw+B,GAL8BD,kBAQ9B,QAAAE,MAA4B,MAA5BA,MACaC,GACc7uB,EAAcE,EAAc0uB,KAKvDE,GAAA,SAAAvuB,GA6BI,QAAJuuB,GACe7iC,EACgByU,EACfquB,GAHZ,GAAJ3lC,GAKQmX,EALRI,KAAAtX,OAAAA,WACeD,GAAf6C,WAAeA,EAEC7C,EAAhB2lC,aAAgBA,EALF3lC,EAAdokC,UAAkC,EAS1BpkC,EAAKsX,SAAWrV,SAASqV,IAAa,EACtCtX,EAAK2lC,aAAaxtB,QAAQnY,EAAK6C,WAAWhB,iBAMlD,MA9B+BuW,GAA/BstB,EAAAvuB,GAGI/W,OAAJ2M,eACQ24B,EADRrkC,UAAA,cAAI,WAEI,MAAOpB,MAAKmkC,cAEhB,SAAWjiC,GACHA,IAAUlC,KAAKmkC,WACfnkC,KAAKmkC,SAAWjiC,oCAkBxBujC,EAAJrkC,UAAAkB,YAAI,WACItC,KAAK0lC,aAAattB,eAAepY,KAAK4C,WAAWhB,+BAzCzDyE,KAACC,EAAAA,UAADC,OACIC,SAAU,6BACVC,SAAU,YACVmT,QAAS,WAAY,YACrBlT,MACI8C,MAAO,cACPm8B,sBAAuB,SACvB/G,uBAAwB,sBACxBgH,kBAAmB,WACnB9rB,sBAAuB,WACvB+rB,oBAAqB,kDAlE7Bx/B,KAAIS,EAAAA,aAuFJT,KAAAgU,OAAAlT,aAAAd,KAASiU,EAAAA,UAAT/T,MAAmB,gBAlFnBF,KAAS+T,EAAAA,kCAmET0rB,SAAAz/B,KAAKqB,EAAAA,SA2BL+9B,GA9B+BD,ICpD/BO,GAAA,WAAA,QAAAA,MAsC2B,sBAtC3B1/B,KAAC8B,EAAAA,SAAD5B,OACI+B,SACIC,EAAAA,aACAsJ,EACAD,EAAAA,aACA4I,EAAAA,YAGJnS,SACIwJ,EACAmxB,GACAgD,GACAb,GACAG,GACAG,GACAQ,GACA1D,GACAC,GACAC,GACAC,IAEJt6B,cACI46B,GACAgD,GACAb,GACA5G,GACA+G,GACAG,GACAlJ,GACAwB,GACAe,GACAmH,GACA1D,GACAC,GACAC,GACAC,QAGRqD,KCxCAG,GAAA,WACI,QAAJA,GAAuBzvB,GAAAzW,KAAvByW,YAAuBA,EACvB,MAAAyvB,MAEaC,GAAoEvvB,EAAWC,EAAcqvB,KAG1G7gB,GAAA,SAAAnO,GA2BI,QAAJmO,GAAgBziB,GAAZ,GAAJ7C,GACQmX,EADRI,KAAAtX,KACc4C,IADd5C,WAVYD,GAAZoS,WAAiC,EAazBpS,EAAK6B,cAAgBgB,EAAWhB,gBAgCxC,MAlD2BuW,GAA3BkN,EAAAnO,GAOI/W,OAAJ2M,eAAQuY,EAARjkB,UAAA,gBAAI,WACI,MAAOpB,MAAKmS,eAGhB,SAAajQ,GACLA,IAAUlC,KAAK6D,WAAY7D,KAAKmS,UAAYjQ,oCASpDmjB,EAAJjkB,UAAAszB,mBAAI,WACI10B,KAAKomC,gCAGT/gB,EAAJjkB,UAAAglC,6BAAI,WACJ,GAAcC,GAAQrmC,KAAKsmC,gBAAgB1mB,IAAI,SAAC/L,GAAS,MAAAA,GAAK4C,YAAY7U,eAElE,IAAqB,IAAjBykC,EAAM13B,OAAc,CAChC,GAAkB43B,GAAcF,EAAM,EAErBE,GAAYC,wBAA2BD,EAAYE,qBAChDF,EAAYG,cACZH,EAAY3S,UAAUC,IAAI,gBAC1B7zB,KAAK4B,cAAcgyB,UAAUC,IAAI,iBAGjC0S,EAAYI,kBACZJ,EAAY3S,UAAUC,IAAI,iBAC1B7zB,KAAK4B,cAAcgyB,UAAUC,IAAI,uBAGtC,IAAIwS,EAAM13B,OAAS,EAAG,CACrC,GAAkBi4B,GAAmBP,EAAM,GACzBQ,EAAoBR,EAAM,EAEhCO,GAAiBhT,UAAUC,IAAI,gBAC/BgT,EAAkBjT,UAAUC,IAAI,kCA3D5CxtB,KAACgL,EAAAA,UAAD9K,OACIC,SAAU,SACV8K,SAAJ,+KACI2D,QAAS,8rBACTlM,gBAAiBC,EAAAA,wBAAwBC,OACzCC,cAAeC,EAAAA,kBAAkBC,KACjC1C,MACI8C,MAAO,SACPsQ,sBAAuB,YAE3BF,QAAS,QAAS,oDApCtBvT,KAAIS,EAAAA,gCAuCJw/B,kBAAAjgC,KAAK00B,EAAAA,gBAALx0B,MAAqBugC,OAiDrBzhB,GAlD2B8gB,IC/B3B7f,GAAA,WAAA,QAAAA,MAY0B,sBAZ1BjgB,KAAC8B,EAAAA,SAAD5B,OACI+B,SACIC,EAAAA,aACA2pB,EAAAA,gBAEJ7pB,SACIgd,IAEJjd,cACIid,QAGRiB,K3BwEI/P,GAAe,gBAOf,QAAJ+jB,GAAuBhhB,EAAyBpX,GAAzBlC,KAAvBsZ,OAAuBA,EAAyBtZ,KAAhDkC,MAAgDA,EAChD,MAAAo4B,MAEAyM,GAAA,WACI,QAAJA,GACenkC,EACA+jB,EACAC,EACAC,EACAC,GAJA9mB,KAAf4C,WAAeA,EACA5C,KAAf2mB,yBAAeA,EACA3mB,KAAf4mB,WAAeA,EACA5mB,KAAf6mB,gBAAeA,EACA7mB,KAAf8mB,UAAeA,EAEf,MAAAigB,MAEM5L,GACoBxkB,EAAcE,EAAcmQ,EAAgB+f,MAGtEjM,GAAA,WAAA,QAAAA,MAC8B,sBAD9Bz0B,KAACC,EAAAA,UAADC,OAAaC,SAAU,wBACvBs0B,KAGAhH,GAAA,SAAA5c,GAqRI,QAAJ4c,GACyB4G,EACAtjB,EACAie,EACAyC,EACjBnR,EACA/jB,EAC6BkzB,EACjBlP,EACAC,EACiByP,EACFxP,EACJzP,EAC6B2vB,GAbxD,GAAJjnC,GAeQmX,EAfRI,KAAAtX,KAec4C,EAAY+jB,EAA0BC,EAAYC,EAAiBC,IAfjF9mB,WACyBD,GAAzB26B,eAAyBA,EACA36B,EAAzBqX,mBAAyBA,EACArX,EAAzBs1B,QAAyBA,EACAt1B,EAAzB+3B,UAAyBA,EAGY/3B,EAArC+1B,KAAqCA,EAGA/1B,EAArCu2B,iBAAqCA,EACFv2B,EAAnC+mB,UAAmCA,EAEyB/mB,EAA5DinC,uBAA4DA,EAhQxDjnC,EAAJsnB,YAAkB,YAEdtnB,EAAJq3B,YAA0B,EACtBr3B,EAAJ47B,YAA0B,SAMtB57B,EAAJo1B,gBAAsB,EASlBp1B,EAAJogB,UAAwB,GAGpBpgB,EAAJ2jB,gBAA8B,MAG1B3jB,EAAJ00B,oBAAkC,EAG9B10B,EAAJw0B,yBAA+B,GAAIxpB,GAAAA,QAG/BhL,EAAJyP,eAAqBzP,EAAKinC,yBAOtBjnC,EAAJ+hB,QAAc,EAQV/hB,EAAJ4a,YAEYja,QAAS,QACTC,QAAS,SACTC,SAAU,QACVC,SAAU,QAGVH,QAAS,QACTC,QAAS,MACTC,SAAU,QACVC,SAAU,WAkCTd,EAAbke,uBAA2E4d,EAAAA,MAAM,WACzE,MAAI97B,GAAKge,QACElS,EAAAA,MAAnBwuB,UAAA,GAA4Bt6B,EAAKge,QAAQ6B,IAAI,SAACrB,GAAW,MAAAA,GAAOud,qBAGjD/7B,EAAKs1B,QAAQC,SACfjpB,eACAhI,KAAKmH,EAAAA,KAAK,GAAIuwB,EAAAA,UAAU,WAAM,MAAAh8B,GAAKke,4BAIzBle,EAAvB2lB,aAA6D,GAAI5N,GAAAA,aAGlC/X,EAA/B4lB,aACQ5lB,EAAK2lB,aAAarhB,KAAK8G,EAAAA,OAAO,SAACywB,GAAM,MAAAA,KAAIhc,EAAAA,IAAI,eAGtB7f,EAA/B6lB,aACQ7lB,EAAK2lB,aAAarhB,KAAK8G,EAAAA,OAAO,SAACywB,GAAM,OAACA,IAAIhc,EAAAA,IAAI,eAG/B7f,EAAvBigB,gBAAuE,GAAIlI,GAAAA,aAOpD/X,EAAvB+f,YAAwD,GAAIhI,GAAAA,aA0BhD/X,EAAZwnB,WAAiC,EAerBxnB,EAAZi0B,WAAiC,EAkErBj0B,EAAZs0B,UAAuB,EAMXt0B,EAAZse,YAAyB,EAGbte,EAAZ6gB,UAAwB,EAGH7gB,EAArBunB,IAA2B,aAAa/Q,KAGnBxW,EAArBie,QAA+B,GAAIjT,GAAAA,QAiG/BhL,EAAJ21B,UAAsC,aAGlC31B,EAAJy1B,WAAiB,aA8vBLz1B,EAAZm0B,aAA2B,SAAC+H,EAASC,GAAY,MAAAD,KAAOC,GA/0B5Cn8B,EAAK+mB,YAGL/mB,EAAK+mB,UAAUa,cAAgB5nB;2CAGnCA,EAAKsX,SAAWrV,SAASqV,IAAa,EAGtCtX,EAAKkL,GAAKlL,EAAKkL,KAu0BvB,MAzlC8BkN,GAA9B2b,EAAA5c,GA8HI/W,OAAJ2M,eACQgnB,EADR1yB,UAAA,mBAAI,WAEI,MAAOpB,MAAK+zB,kBAGhB,SAAgB7xB,GACZlC,KAAK+zB,aAAe7xB,EAEpBlC,KAAKmf,aAAanc,wCAKtB7C,OAAJ2M,eACQgnB,EADR1yB,UAAA,gBAAI,WAEI,MAAOpB,MAAKunB,eAGhB,SAAarlB,GACTlC,KAAKunB,UAAY9U,EAAAA,sBAAsBvQ,GAEvClC,KAAKmf,aAAanc,wCAKtB7C,OAAJ2M,eACQgnB,EADR1yB,UAAA,gBAAI,WAEI,MAAOpB,MAAKg0B,eAGhB,SAAa9xB,GACT,GAAIlC,KAAKye,eACL,KAAMwV,IAGVj0B,MAAKg0B,UAAYvhB,EAAAA,sBAAsBvQ,oCAU3C/B,OAAJ2M,eACQgnB,EADR1yB,UAAA,mBAAI,WAEI,MAAOpB,MAAKk0B,kBAGhB,SAAgBhb,GAEZ,GAAkB,kBAAPA,GACP,KAAMib,IAGVn0B,MAAKk0B,aAAehb,EAEhBlZ,KAAKye,gBAELze,KAAKo0B,uDAKbj0B,OAAJ2M,eACQgnB,EADR1yB,UAAA,aAAI,WAEI,MAAOpB,MAAK6f,YAGhB,SAAUqJ,GACFA,IAAalpB,KAAK6f,SAClB7f,KAAKgZ,WAAWkQ,GAChBlpB,KAAK6f,OAASqJ,oCAMtB/oB,OAAJ2M,eACQgnB,EADR1yB,UAAA,UAAI,WAEI,MAAOpB,MAAKkoB,SAGhB,SAAOhmB,GACHlC,KAAKkoB,IAAMhmB,GAASlC,KAAKsnB,IACzBtnB,KAAKmf,aAAanc,wCAMtB7C,OAAJ2M,eAAQgnB,EAAR1yB,UAAA,eAAI,WACI,MAAOpB,MAAKq0B,UAAYr0B,KAAKqe,gBAOjC,SAAYnc,GACRlC,KAAKq0B,SAAWnyB,mCAKpB/B,OAAJ2M,eAAQgnB,EAAR1yB,UAAA,iBAAI,WACI,MAAOpB,MAAKqe,4CA2ChByV,EAAJ1yB,UAAAgB,SAAI,WAAA,GAAJrC,GAAAC,IACQA,MAAKye,eAAiB,GAAI6V,GAAAA,eAAyBt0B,KAAKoe,UACxDpe,KAAKmf,aAAanc,OAKlBhD,KAAKu0B,yBACAlwB,KAAKM,EAAAA,uBAAwBL,EAAAA,UAAUtE,KAAKge,UAC5CxZ,UAAU,WACHzE,EAAKy0B,WACLz0B,EAAK6gB,UAAY,EACjB7gB,EAAK2lB,aAAa5gB,MAAK,KAEvB/E,EAAK2lB,aAAa5gB,MAAK,GACvB/E,EAAK00B,oBAAqB,EAC1B10B,EAAKoiB,WAAWM,QAAU,EAC1B1iB,EAAKqX,mBAAmBnW,mBAKxC6yB,EAAJ1yB,UAAAszB,mBAAI,WAAA,GAAJ30B,GAAAC,IACQA,MAAK20B,iBAEL30B,KAAKye,eAAemW,QACfvwB,KAAKC,EAAAA,UAAUtE,KAAKge,UACpBxZ,UAAU,SAAC7B,GACRA,EAAMkyB,MAAMpyB,QAAQ,SAAC8b,GAAW,MAAAA,GAAOK,WACvCjc,EAAMmyB,QAAQryB,QAAQ,SAAC8b,GAAW,MAAAA,GAAOM,eAGjD7e,KAAK+d,QAAQjN,QACRzM,KAAK0wB,EAAAA,UAAU,MAAOzwB,EAAAA,UAAUtE,KAAKge,UACrCxZ,UAAU,WACPzE,EAAK8d,eACL9d,EAAKq0B,yBAIjBN,EAAJ1yB,UAAA4zB,gBAAI,WAAA,GAAJj1B,GAAAC,IACQA,MAAKmlB,KAAKrU,QACLtM,UAAU,WACPmM,WAAW,WAAM,MAAA5Q,GAAKk1B,wBAAwB,MAI1DnB,EAAJ1yB,UAAAinB,UAAI,WACQroB,KAAK8mB,WAAa9mB,KAAKsoB,oBAG/BwL,EAAJ1yB,UAAAyP,YAAI,SAAYC,GAGJA,EAAQjN,UACR7D,KAAKmf,aAAanc,QAI1B8wB,EAAJ1yB,UAAAkB,YAAI,WACItC,KAAKge,QAAQhb,OACbhD,KAAKge,QAAQ/a,WACbjD,KAAKmf,aAAalc,YAUtB6wB,EAAJ1yB,UAAA8zB,OAAI,WACQl1B,KAAKw0B,UACLx0B,KAAKgM,QAELhM,KAAKiN,QAKb6mB,EAAJ1yB,UAAA6L,KAAI,WAAA,GAAJlN,GAAAC,MACYA,KAAK6D,UAAa7D,KAAK+d,SAAY/d,KAAK+d,QAAQpP,SAAU3O,KAAKqe,aAEnEre,KAAKgjB,YAAchjB,KAAKga,QAAQpY,cAAcwgB,wBAG9CpiB,KAAKm1B,gBAAkBnzB,SAASmU,iBAAiBnW,KAAKga,QAAQpY,eAAe,cAE7E5B,KAAKqe,YAAa,EAClBre,KAAK+e,WAAWqW,0BAA0B,MAC1Cp1B,KAAKkhB,2BACLlhB,KAAKqgB,yBACLrgB,KAAKoX,mBAAmBnW,eAGxBjB,KAAKq1B,QAAQC,SAASjpB,eACjBhI,KAAKmH,EAAAA,KAAK,IACVhH,UAAU,WACHzE,EAAKo1B,iBAAmBp1B,EAAKoiB,WAAW9gB,YAActB,EAAKoiB,WAAW9gB,WAAWG,iBACjFzB,EAAKoiB,WAAW9gB,WAAWG,eAAeM,MAAMyzB,SAAcx1B,EAAKo1B,gBAAvF,UAMIrB,EAAJ1yB,UAAA4K,MAAI,WACQhM,KAAKqe,aACLre,KAAKqe,YAAa,EAClBre,KAAK+e,WAAWqW,0BAA0Bp1B,KAAKwiB,QAAU,MAAQ,OACjExiB,KAAKoX,mBAAmBnW,eACxBjB,KAAKw1B,eAUb1B,EAAJ1yB,UAAA4X,WAAI,SAAW9W,GACHlC,KAAK+d,SACL/d,KAAKy1B,oBAAoBvzB,IAWjC4xB,EAAJ1yB,UAAA6X,iBAAI,SAAiBC,GACblZ,KAAK01B,UAAYxc,GAUrB4a,EAAJ1yB,UAAA+X,kBAAI,SAAkBD,GACdlZ,KAAKw1B,WAAatc,GAStB4a,EAAJ1yB,UAAAgY,iBAAI,SAAiBC,GACbrZ,KAAK6D,SAAWwV,EAChBrZ,KAAKoX,mBAAmBnW,eACxBjB,KAAKmf,aAAanc,QAGtB7C,OAAJ2M,eAAQgnB,EAAR1yB,UAAA,gBAAI,WACI,MAAOpB,MAAKoe,SAAWpe,KAAKye,eAAeE,SAAW3e,KAAKye,eAAeE,SAAS,oCAGvFxe,OAAJ2M,eAAQgnB,EAAR1yB,UAAA,oBAAI,WACI,GAAIpB,KAAKsgB,MAAS,MAAO,EAEzB,IAAItgB,KAAKg0B,UAAW,CAC5B,GAAkB2B,GAAkB31B,KAAKye,eAAeE,SAASiB,IAAI,SAACrB,GAAW,MAAAA,GAAOqX,WAI5E,OAFI51B,MAAKwiB,SAAWmT,EAAgB5lB,UAE7B4lB,EAAgBvV,KAAK,MAGhC,MAAOpgB,MAAKye,eAAeE,SAAS,GAAGiX,2CAG3Cz1B,OAAJ2M,eAAQgnB,EAAR1yB,UAAA,qBAAI,WACI,GAAIpB,KAAKsgB,MAAS,QAElB,IAAItgB,KAAKg0B,UAAW,CAC5B,GAAkB2B,GAAkB31B,KAAKye,eAAeE,QAI5C,OAFI3e,MAAKwiB,SAAWmT,EAAgB5lB,UAE7B4lB,EAGX,OAAQ31B,KAAKye,eAAeE,SAAS,qCAGzCxe,OAAJ2M,eAAQgnB,EAAR1yB,UAAA,aAAI,WACI,OAAQpB,KAAKye,gBAAkBze,KAAKye,eAAeoX,2CAGvD/B,EAAJ1yB,UAAAohB,MAAI,WACI,QAAOxiB,KAAK81B,MAA2B,QAApB91B,KAAK81B,KAAK5zB,OAGjC4xB,EAAJ1yB,UAAA8B,cAAI,SAAcP,GACL3C,KAAK6D,WACF7D,KAAKw0B,UACLx0B,KAAK+1B,kBAAkBpzB,GAEvB3C,KAAKg2B,oBAAoBrzB,KASrCmxB,EAAJ1yB,UAAA60B,aAAI,WACIj2B,KAAKy0B,mBAAqBz0B,KAAKw0B,UAC/Bx0B,KAAKoX,mBAAmBnW,gBAG5B6yB,EAAJ1yB,UAAA80B,QAAI,WACSl2B,KAAK6D,WACN7D,KAAKq0B,UAAW,EAEhBr0B,KAAKmf,aAAanc,SAQ1B8wB,EAAJ1yB,UAAAurB,OAAI,WACI3sB,KAAKq0B,UAAW,EAEXr0B,KAAK6D,UAAa7D,KAAKw0B,YACxBx0B,KAAKw1B,aACLx1B,KAAKoX,mBAAmBnW,eACxBjB,KAAKmf,aAAanc,SAO1B8wB,EAAJ1yB,UAAA+0B,WAAI,WAAA,GAAJp2B,GAAAC,IACQA,MAAKmiB,WAAWiU,eACX/xB,KAAKmH,EAAAA,KAAK,IACVhH,UAAU,WACPzE,EAAKqX,mBAAmBqc,gBACxB1zB,EAAKkiB,0BACLliB,EAAK4gB,MAAM/e,cAAcgf,UAAY7gB,EAAK6gB,aAKtDkT,EAAJ1yB,UAAAi1B,cAAI,WACI,MAAOr2B,MAAKs2B,iBAAmB,MAAMt2B,KAAKs2B,iBAAiBC,MAAU,IAIzEzC,EAAJ1yB,UAAAiX,MAAI,WACIrY,KAAK4C,WAAWhB,cAAcyW,SAUlCyb,EAAJ1yB,UAAAygB,uBAAI,SAAuB2U,EAAuB5U,EAAsBF,GACxE,GAAcP,GAAanhB,KAAK8gB,gBAClB2V,EAA4BtV,EAAaqV,EAGzCE,EAAmBvV,EAAa,EAMhCwV,EAAwBF,EAA4B7U,EAAe8U,CAEzE,OAAOnV,MAAKC,IAAID,KAAKqH,IAAI,EAAG+N,GAAwBjV,IAOxDoS,EAAJ1yB,UAAA6nB,iBAAI,WACIjpB,KAAKqY,QACLrY,KAAKiN,QAIT6mB,EAAJ1yB,UAAAw1B,oBAAI,SAAoBrY,EAAkB/d,GAClCA,EAAOmY,kBAEP4F,EAAOM,YAGXiV,EAAJ1yB,UAAA6zB,qBAAI,WACI,IAAIj1B,KAAKsgB,OAAUtgB,KAAKoe,SAAxB,CAER,GAAYyY,GAAuB,EACrBC,EAAkB92B,KAAK+2B,8BACzBC,EAAiC,CAYrC,IATAh3B,KAAKmlB,KAAK1iB,QAAQ,SAACw0B,GACXA,EAAIr1B,cAAcs1B,UAAYD,EAAIr1B,cAAcu1B,eAChDH,GAA0BC,EAAIr1B,cAAcwgB,wBAAwBS,MAJjD,EAKnBgU,OAIR72B,KAAKo3B,YAAep3B,KAAa,SAAyB2O,OAASkoB,EAE/D72B,KAAKo3B,YAAa,CAC9B,GAAkBC,GAAer3B,KAAKga,QAAQpY,cAAc01B,cAAc,iCACxDC,EAAcv3B,KAAKga,QAAQpY,cAAc01B,cAAc,0BAEvDE,EAAqBH,EAAaH,UAAYG,EAAaF,aAI3DM,EAA2BF,EAAYnV,wBAAwBS,MAC/D6U,EAAuBD,EAHK,EAOlC,IAFID,GAAuBV,EAAkBY,IAAiB13B,KAAKo3B,YAAc,GAG7EJ,IAA2BS,GAC1BT,EAT6B,GASiBS,EAI/C,WAFAz3B,MAAKoX,mBAAmBnW,gBAGhBu2B,GAAuBV,EAdD,GAcwCY,GACtE13B,KAAKo3B,cAIbp3B,KAAKoX,mBAAmBnW,iBAGpB6yB,EAAZ1yB,UAAA21B,4BAAI,WACJ,GAAcY,GAAe33B,KAAKga,QAAQpY,cAAcg2B,WAAU,EAC1DD,GAAaL,cAAc,iCAAiCO,SAE5D73B,KAAK83B,UAAU3kB,SAASwkB,EAAc,WAAY,YAClD33B,KAAK83B,UAAU3kB,SAASwkB,EAAc,aAAc,UACpD33B,KAAK83B,UAAU3kB,SAASwkB,EAAc,MAAO,SAC7C33B,KAAK83B,UAAU3kB,SAASwkB,EAAc,OAAQ,KAE9C33B,KAAK83B,UAAUC,YAAY/3B,KAAKga,QAAQpY,cAAe+1B,EAE/D,IAAYb,GAA0B,CAQ9B,OANAa,GAAaK,iBAAiB,UAAUv1B,QAAQ,SAACoR,GAC7CijB,GAAmBjjB,EAAKuO,wBAA6B,MAF9B,IAK3BuV,EAAaE,SAENf,GAIHhD,EAAZ1yB,UAAA40B,oBAAI,SAA4BrzB,GAEhC,GAAcU,GAAUV,EAAMU,QAChB40B,EAAa50B,IAAY60B,EAAAA,YAAc70B,IAAY80B,EAAAA,UACrD90B,IAAY+0B,EAAAA,YAAc/0B,IAAYg1B,EAAAA,WACxBh1B,KAAYi1B,EAAAA,OAASj1B,IAAYk1B,EAAAA,QAGhCv4B,KAAKoe,UAAYzb,EAAM61B,SAAWP,GACjDt1B,EAAMkqB,iBACN7sB,KAAKiN,QACGjN,KAAKoe,UACbpe,KAAK+e,WAAW0Z,UAAU91B,IAK1BmxB,EAAZ1yB,UAAA20B,kBAAI,SAA0BpzB,GAE9B,GAAcU,GAAUV,EAAMU,QAChB40B,EAAa50B,IAAY60B,EAAAA,YAAc70B,IAAY80B,EAAAA,SACnDO,EAAU14B,KAAK+e,UAErB,IAAI1b,IAAYs1B,EAAAA,MAAQt1B,IAAYu1B,EAAAA,IAChCj2B,EAAMkqB,iBAEFxpB,IAAYs1B,EAAAA,KACZD,EAAQnY,qBAERmY,EAAQG,wBAGT,IAAIZ,GAAct1B,EAAM61B,OAE3B71B,EAAMkqB,iBACN7sB,KAAKgM,YACF,IAAK3I,IAAYi1B,EAAAA,OAASj1B,IAAYk1B,EAAAA,QAAUG,EAAQI,WAGxD,GAAI94B,KAAKg0B,WAAa3wB,IAAY01B,EAAAA,GAAKp2B,EAAMq2B,QAAS,CACzDr2B,EAAMkqB,gBAClB,IAAkBoM,GAAuBj5B,KAAK+d,QAAQzd,KAAK,SAACie,GAAW,OAACA,EAAOI,UACnE3e,MAAK+d,QAAQtb,QAAQ,SAAC8b,GACd0a,IAAyB1a,EAAO1a,SAChC0a,EAAOK,SAEPL,EAAOM,iBAGZ,CACf,GAAkBqa,GAAyBR,EAAQhY,eAEvCgY,GAAQD,UAAU91B,GAEd3C,KAAKg0B,WAAaiE,GAAct1B,EAAMw2B,UAAYT,EAAQI,YAC1DJ,EAAQhY,kBAAoBwY,GAC5BR,EAAQI,WAAWM,2BAnBvBz2B,GAAMkqB,iBACN6L,EAAQI,WAAWM,wBAuBnBtF,EAAZ1yB,UAAAgzB,oBAAI,WAAA,GAAJr0B,GAAAC,IAGQq5B,SAAQC,UAAUC,KAAK,WACnBx5B,EAAK01B,oBAAoB11B,EAAK+mB,UAAY/mB,EAAK+mB,UAAU5kB,MAAQnC,EAAK8f,WAQtEiU,EAAZ1yB,UAAAq0B,oBAAI,SAA4BvzB,GAA5B,GAAJnC,GAAAC,IACQ,IAAIA,KAAKoe,UAAYlc,EAAO,CACxB,IAAKs3B,MAAMC,QAAQv3B,GACf,KAAMw3B,IAGV15B,MAAKye,eAAe3b,QACpBZ,EAAMO,QAAQ,SAACyO,GAAsB,MAAAnR,GAAK45B,YAAYzoB,KACtDlR,KAAKif,iBACF,CACHjf,KAAKye,eAAe3b,OAChC,IAAkB82B,GAAsB55B,KAAK25B,YAAYz3B,EAIzC03B,IACA55B,KAAK+e,WAAWC,cAAc4a,GAItC55B,KAAKoX,mBAAmBnW,gBAOpB6yB,EAAZ1yB,UAAAu4B,YAAI,SAAoBz3B,GAApB,GAAJnC,GAAAC,KACc45B,EAAsB55B,KAAK+d,QAAQ1P,KAAK,SAACkQ,GAC3C,IAEI,MAAuB,OAAhBA,EAAOrc,OAAiBnC,EAAKm0B,aAAa3V,EAAOrc,MAAOA,GACjE,MAAO23B,GAML,MALIC,GAAAA,aAEAC,QAAQC,KAAKH,IAGV,IAQf,OAJID,IACA55B,KAAKye,eAAeG,OAAOgb,GAGxBA,GAIH9F,EAAZ1yB,UAAAuzB,eAAI,WAAA,GAAJ50B,GAAAC,IACQA,MAAK+e,WAAa,GAAIkb,GAAAA,2BAAqCj6B,KAAK+d,SAC3Dmc,gBACAC,0BACA/E,0BAA0Bp1B,KAAKwiB,QAAU,MAAQ,OAEtDxiB,KAAK+e,WAAWqb,OACX/1B,KAAKC,EAAAA,UAAUtE,KAAKge,UACpBxZ,UAAU,WAGPzE,EAAKsY,QACLtY,EAAKiM,UAGbhM,KAAK+e,WAAWlH,OACXxT,KAAKC,EAAAA,UAAUtE,KAAKge,UACpBxZ,UAAU,WACHzE,EAAKse,YAActe,EAAK4gB,MACxB5gB,EAAKygB,6BACGzgB,EAAKse,YAAete,EAAKqe,WAAYre,EAAKgf,WAAW+Z,YAC7D/4B,EAAKgf,WAAW+Z,WAAWM,0BAMnCtF,EAAZ1yB,UAAAyc,aAAI,WAAA,GAAJ9d,GAAAC,KACc8d,EAAqBjS,EAAAA,MAAM7L,KAAK+d,QAAQjN,QAAS9Q,KAAKge,QAE5Dhe,MAAKie,uBACA5Z,KAAKC,EAAAA,UAAUwZ,IACftZ,UAAU,SAAC7B,GACR5C,EAAKme,SAASvb,EAAM2W,OAAQ3W,EAAMwb,aAE9Bxb,EAAMwb,cAAgBpe,EAAKqe,UAAYre,EAAKse,aAC5Cte,EAAKiM,QACLjM,EAAKsY,WAMjBxM,EAAAA,MAARwuB,UAAA,GAAiBr6B,KAAK+d,QAAQ6B,IAAI,SAACrB,GAAW,MAAAA,GAAOY,gBACxC9a,KAAKC,EAAAA,UAAUwZ,IACftZ,UAAU,WACPzE,EAAKqX,mBAAmBnW,eACxBlB,EAAKof,aAAanc,SAG1BhD,KAAKse,gBAIDwV,EAAZ1yB,UAAA8c,SAAI,SAAiBK,EAAkBJ,GACvC,GAAcK,GAAcxe,KAAKye,eAAeC,WAAWH,EAE/B,OAAhBA,EAAOrc,OAAkBlC,KAAKg0B,WAK1BzV,EAAOI,SACP3e,KAAKye,eAAeG,OAAOL,GAE3Bve,KAAKye,eAAeI,SAASN,GAG7BJ,GACAne,KAAK+e,WAAWC,cAAcT,GAG9Bve,KAAKoe,WACLpe,KAAKif,aAEDd,GAKAne,KAAKqY,WAtBbkG,EAAOM,WACP7e,KAAKye,eAAe3b,QACpB9C,KAAKkf,iBAAiBX,EAAOrc,QAyB7Bsc,IAAgBxe,KAAKye,eAAeC,WAAWH,IAC/Cve,KAAKkf,mBAGTlf,KAAKmf,aAAanc,QAId8wB,EAAZ1yB,UAAA6d,WAAI,WAAA,GAAJlf,GAAAC,IACQ,IAAIA,KAAKoe,SAAU,CAC3B,GAAkBgB,GAAUpf,KAAK+d,QAAQsB,SAE7Brf,MAAKye,eAAea,KAAK,SAACC,EAAGC,GACzB,MAAOzf,GAAK0f,eAAiB1f,EAAK0f,eAAeF,EAAGC,EAAGJ,GACnDA,EAAQhP,QAAQmP,GAAKH,EAAQhP,QAAQoP,KAE7Cxf,KAAKmf,aAAanc,SAKlB8wB,EAAZ1yB,UAAA8d,iBAAI,SAAyBQ,GAC7B,GAAYC,GAAmB,IAGnBA,GADA3f,KAAKoe,SACUpe,KAAa,SAAgB4f,IAAI,SAACrB,GAAW,MAAAA,GAAOrc,QAErDlC,KAAK2e,SAAY3e,KAAa,SAAckC,MAAQwd,EAGtE1f,KAAK6f,OAASF,EACd3f,KAAK8f,YAAYhb,KAAK6a,GACtB3f,KAAK01B,UAAU/V,GACf3f,KAAKggB,gBAAgBlb,KAAK,GAAIw1B,IAAet6B,KAAM2f,IACnD3f,KAAKoX,mBAAmBnW,gBAIpB6yB,EAAZ1yB,UAAAkd,aAAI,WACIte,KAAKmgB,UAAYngB,KAAK+d,QAAQ6B,IAAI,SAACrB,GAAW,MAAAA,GAAOtT,KAAImV,KAAK,MAO1D0T,EAAZ1yB,UAAAif,uBAAI,WACQrgB,KAAK+e,aACD/e,KAAKsgB,MACLtgB,KAAK+e,WAAWwB,qBAEhBvgB,KAAK+e,WAAWC,cAAchf,KAAKye,eAAeE,SAAS,MAM/DmV,EAAZ1yB,UAAAof,2BAAI,WACJ,GAAcC,GAAoBzgB,KAAK+e,WAAW2B,iBAAmB,EACvD6Z,EAAaC,EAA6B/Z,EAAmBzgB,KAAK+d,QAAS/d,KAAKy6B,aAEtFz6B,MAAK2gB,MAAM/e,cAAcgf,UAAYC,EACjCJ,EAAoB8Z,EACpBv6B,KAAK8gB,gBACL9gB,KAAK2gB,MAAM/e,cAAcgf,UDziCE,MC+iC3BkT,EAAZ1yB,UAAA2f,eAAI,SAAuBxC,GAEnB,MAAOve,MAAK+d,QAAQiD,OAAO,SAACtV,EAAgBuV,EAAmB9Q,GAE3D,WAAkBjJ,KAAXwE,EAAwB6S,IAAW0C,EAAU9Q,MAAQjJ,GAAawE,OAC1ExE,KAIC4sB,EAAZ1yB,UAAA8f,yBAAI,WACJ,GAAcC,GAAanhB,KAAK8gB,gBAClBM,EAAQphB,KAAKqhB,eACbC,EAAcC,KAAKC,IAAIJ,EAAQD,ED3jCN,KC4jCzBM,EAAwBL,EAAQD,EAGhCO,EAAYD,EAAwBH,EAGtCK,EACA3hB,KAAKsgB,MAAQ,EAAItgB,KAAK+gB,eAAe/gB,KAAKye,eAAeE,SAAS,GAEtEgD,IAAwB6Y,EAA6B7Y,EAAsB3hB,KAAK+d,QAAS/d,KAAKy6B,aAKtG,IAAc7Y,GAAeN,EAAc,CACnCthB,MAAK4gB,UAAY5gB,KAAK6hB,uBAAuBF,EAAsBC,EAAcF,GACjF1hB,KAAK8hB,QAAU9hB,KAAK+hB,0BAEpB/hB,KAAKgiB,2BAA2BN,IAU5BoS,EAAZ1yB,UAAA6gB,wBAAI,WACJ,GAKYQ,GALEP,EAAcliB,KAAKmiB,WAAW9gB,WAAWG,eAAe4gB,wBACxDC,EAAeriB,KAAK06B,eAAenY,kBACnCC,EAAQxiB,KAAKwiB,QAKb7D,EAAW3e,KAAKye,eAAeE,SAAS,IAAM3e,KAAK+d,QAAQ4c,KACjElY,GAAU9D,GAAYA,EAASic,MD1lCM9xB,EAJP,ECimCzB0Z,IAASC,IAAY,EAGlC,IAAcC,GAAe,GAAKR,EAAYjI,KAAOwI,GAAWD,EAVnC1Z,EAU0D,IACzE6Z,EAAgBT,EAAYU,MAAQH,EAAUJ,EAAaQ,OAC1DL,EAAQ,EAZM1Z,EAejB4Z,GAAe,EACfD,GAAWC,EDhmCsB,ECimC1BC,EAAgB,IACvBF,GAAWE,EDlmCsB,GCwmCrC3iB,KAAKmiB,WAAWM,QAAUlB,KAAKuB,MAAML,GACrCziB,KAAKmiB,WAAW9gB,WAAW0D,kBAQvB+uB,EAAZ1yB,UAAA2gB,wBAAI,WAKI,MAAO,IAUH+R,EAAZ1yB,UAAA4gB,2BAAI,SAAmCN,GACvC,GAAcP,GAAanhB,KAAK8gB,gBAClBuB,EAAeriB,KAAK06B,eAAenY,kBAEnCQ,EAAoB/iB,KAAKgjB,YAAYjhB,IDpoCN,ECqoC/BkhB,EACFZ,EAAaa,OAASljB,KAAKgjB,YAAYG,ODtoCN,ECwoC/BC,EAAiB7B,KAAK8B,IAAIrjB,KAAK8hB,SAC/BwB,EACF/B,KAAKC,IAAIxhB,KAAKqhB,eAAiBF,EDvpCJ,KCwpCzBoC,EAAoBD,EAAmBF,EAAiBpjB,KAAKgjB,YAAYE,MAE3EK,GAAoBN,EACpBjjB,KAAKwjB,cAAcD,EAAmBN,GAC/BG,EAAiBL,EACxB/iB,KAAKyjB,gBAAgBL,EAAgBL,EAAmBrB,GAExD1hB,KAAK0jB,gBAAkB1jB,KAAK2jB,0BAK5BmQ,EAAZ1yB,UAAAoiB,cAAI,SAAsBD,EAA2BN,GAErD,GAAcW,GAAwBrC,KAAKuB,MAAMS,EAAoBN,EAI7DjjB,MAAK4gB,WAAagD,EAClB5jB,KAAK8hB,SAAW8B,EAChB5jB,KAAK0jB,gBAAkB1jB,KAAK2jB,yBAKxB3jB,KAAK4gB,WAAa,IAClB5gB,KAAK4gB,UAAY,EACjB5gB,KAAK8hB,QAAU,EACf9hB,KAAK0jB,gBAAkB,mBAKvBoQ,EAAZ1yB,UAAAqiB,gBAAI,SAAwBL,EAAwBL,EAA2BrB,GAE/E,GAAcmC,GAAwBtC,KAAKuB,MAAMM,EAAiBL,EAW1D,IAPA/iB,KAAK4gB,WAAaiD,EAClB7jB,KAAK8hB,SAAW+B,EAChB7jB,KAAK0jB,gBAAkB1jB,KAAK2jB,yBAKxB3jB,KAAK4gB,WAAac,EAKlB,MAJA1hB,MAAK4gB,UAAYc,EACjB1hB,KAAK8hB,QAAU,OACf9hB,KAAK0jB,gBAAkB,gBAOvBoQ,EAAZ1yB,UAAAuiB,uBAAI,WACJ,GAAcxC,GAAanhB,KAAK8gB,gBAElBgD,GAA0B3C,EAAanhB,KAAKgjB,YAAYE,QAAU,CAIxE,OAAO,QAFS3B,KAAK8B,IAAIrjB,KAAK8hB,SAAWgC,EAAyB3C,EAAa,GAEvF,UAIY2S,EAAZ1yB,UAAAigB,aAAI,WACI,MAAOrhB,MAAK+d,QAAQpP,OAAS3O,KAAKy6B,aAAa9rB,QAI3CmlB,EAAZ1yB,UAAA0f,cAAI,WAGI,MAAO,oBAhnCfza,KAACgL,EAAAA,UAAD9K,OACIC,SAAU,YACVC,SAAU,WACV6K,SAAJ,0lEACI2D,QAAS,mmEACT2E,QAAS,WAAY,YACrB1Q,cAAeC,EAAAA,kBAAkBC,KACjCL,gBAAiBC,EAAAA,wBAAwBC,OACzCvC,MACIkD,YAAa,KACbma,kBAAmB,WACnBva,MAAO,YACPsQ,sBAAuB,WACvBkK,4BAA6B,aAC7BC,6BAA8B,WAC9Btd,YAAa,wBACbud,UAAW,YACXC,SAAU,WACVC,kBAAmB,0BAEvB/a,YACIgb,GAAmBC,eACnBD,GAAmBE,eAEvB9b,YACM8Q,QAASiL,GAAoB/K,YAAaqa,IAC1Cva,QAASshB,GAA4BphB,YAAaqa,4CAnG5DztB,KAAIqe,EAAAA,gBAzCJre,KAAI2D,EAAAA,oBAWJ3D,KAAIU,EAAAA,SAMJV,KAAe6O,EAAAA,YAiCf7O,KAAIse,KA5CJte,KAAIS,EAAAA,aAmBJT,KAASiB,EAAAA,eAATH,aAAAd,KAqXSkB,EAAAA,aAvXTlB,KAA8Due,EAAAA,OAA9Dzd,aAAAd,KAwXSkB,EAAAA,aAxXTlB,KAA+Bwe,EAAAA,mBAA/B1d,aAAAd,KAyXSkB,EAAAA,aAxUTlB,KAASye,GAAT3d,aAAAd,KAyUSkB,EAAAA,aA1XTlB,KAAmD0e,EAAAA,UAAnD5d,aAAAd,KA2XS2e,EAAAA,OA3XT3e,KA2XiBkB,EAAAA,aACjBlB,KAAAgU,OAAAlT,aAAAd,KAASiU,EAAAA,UAAT/T,MAAmB,gBACnBF,SAAAa,GAAAC,aAAAd,KAASe,EAAAA,OAATb,MAAgB0e,2BApMhBjL,UAAA3T,KAAKiE,EAAAA,UAAL/D,MAAe,aAEfoa,QAAAta,KAAKiE,EAAAA,UAAL/D,MAAe,WAEf4b,aAAA9b,KAAKiE,EAAAA,UAAL/D,MAAe2e,EAAAA,uBAEfC,OAAA9e,KAAK+e,EAAAA,aAAL7e,MAAkB8e,MAGlBC,gBAAAjf,KAAKkf,EAAAA,aAALhf,MAAkBu0B,MAGlB/c,UAAA1X,KAAK00B,EAAAA,gBAALx0B,MAAqBy0B,IAAYC,aAAa,MAG9CR,eAAAp0B,KAAK00B,EAAAA,gBAALx0B,MAAqB20B,MAGrB5rB,aAAAjJ,KAAKqB,EAAAA,QAGLme,oBAAAxf,KAAKqB,EAAAA,QAML+X,iBAAApZ,KAAKqB,EAAAA,QAcLge,eAAArf,KAAKmB,EAAAA,SAGLme,eAAAtf,KAAKmB,EAAAA,OAALjB,MAAY,YAIZqf,eAAAvf,KAAKmB,EAAAA,OAALjB,MAAY,YAIZyZ,kBAAA3Z,KAAKmB,EAAAA,SAOLsY,cAAAzZ,KAAKmB,EAAAA,SAELse,cAAAzf,KAAKqB,EAAAA,QAaLqe,WAAA1f,KAAKqB,EAAAA,QAaL0W,WAAA/X,KAAKqB,EAAAA,QAoBLue,cAAA5f,KAAKqB,EAAAA,QAoBLxF,QAAAmE,KAAKqB,EAAAA,QAcLuD,KAAA5E,KAAKqB,EAAAA,SA24BLosB,GAzlC8BqH,ImBzI9BC,GAAA,WAAA,QAAAA,MAY6B,sBAZ7B/0B,KAAC8B,EAAAA,SAAD5B,OACI+B,SACIC,EAAAA,aACAC,EAAAA,cACA6yB,GACAvpB,GACAwU,IAEJje,SAAUizB,GAAmBxH,GAAUgH,GAAiBO,GAAgB9yB,EAAAA,cACxEH,cAAe0rB,GAAUgH,IACzBryB,WAAY+d,QAEhB4U,KRiEI7kB,GAAe,gBAIf,QAAJ0J,GAAuB3G,EAA6BpX,EAAmBic,OAAvE,KAAAA,IAAuEA,GAAvE,GAAuBne,KAAvBsZ,OAAuBA,EAA6BtZ,KAApDkC,MAAoDA,EAAmBlC,KAAvEme,YAAuEA,EACvE,MAAA8B,MAGAuF,GAAA,WAAA,QAAAA,MACkC,sBADlCnf,KAACC,EAAAA,UAADC,OAAaC,SAAU,6BACvBgf,KAGA+V,GAAA,WACI,QAAJA,GACe34B,EACA+jB,EACAC,EACAC,EACAC,GAJA9mB,KAAf4C,WAAeA,EACA5C,KAAf2mB,yBAAeA,EACA3mB,KAAf4mB,WAAeA,EACA5mB,KAAf6mB,gBAAeA,EACA7mB,KAAf8mB,UAAeA,EAEf,MAAAyU,MAGMrV,GACwBvP,EAAcE,EAAcmQ,EAAgBuU,MAG1E3d,GAAA,SAAA1G,GAmSI,QAAJ0G,GACyB0E,EACRpC,EACQlO,EACAC,EACjB0U,EACO/jB,EACsB44B,EACjB5U,EACAC,EACiB4U,EACF3U,EACJzP,EAC6BqkB,GAbxD,GAAJ37B,GAeQmX,EAfRI,KAAAtX,KAec4C,EAAY+jB,EAA0BC,EAAYC,EAAiBC,IAfjF9mB,WACyBD,GAAzBuiB,cAAyBA,EACRviB,EAAjBmgB,kBAAiBA,EACQngB,EAAzBiS,OAAyBA,EACAjS,EAAzBkS,SAAyBA,EAEVlS,EAAf6C,WAAeA,EACsB7C,EAArCy7B,IAAqCA,EAGAz7B,EAArC07B,gBAAqCA,EACF17B,EAAnC+mB,UAAmCA,EAEyB/mB,EAA5D27B,sBAA4DA,EA5QxD37B,EAAJsnB,YAAkB,YAEdtnB,EAAJq3B,YAA0B,EACtBr3B,EAAJ47B,YAA0B,SAMtB57B,EAAJo1B,gBAAsB,EAMlBp1B,EAAJogB,UAAwB,GAGpBpgB,EAAJ2jB,gBAA8B,MAG1B3jB,EAAJ00B,oBAAkC,EAG9B10B,EAAJw0B,yBAA+B,GAAIxpB,GAAAA,QAG/BhL,EAAJyP,eAAqBzP,EAAK27B,wBAOtB37B,EAAJ+hB,QAAc,EAQV/hB,EAAJ4a,YAEYja,QAAS,QACTC,QAAS,SACTC,SAAU,QACVC,SAAU,QAGVH,QAAS,QACTC,QAAS,MACTC,SAAU,QACVC,SAAU,WAkBCd,EAAvB2lB,aAA6D,GAAI5N,GAAAA,aAGlC/X,EAA/B4lB,aACQ5lB,EAAK2lB,aAAarhB,KAAK8G,EAAAA,OAAO,SAACywB,GAAM,MAAAA,KAAIhc,EAAAA,IAAI,eAGtB7f,EAA/B6lB,aACQ7lB,EAAK2lB,aAAarhB,KAAK8G,EAAAA,OAAO,SAACywB,GAAM,OAACA,IAAIhc,EAAAA,IAAI,eAG/B7f,EAAvBigB,gBAAyC,GAAIlI,GAAAA,aAOtB/X,EAAvB+f,YAAwD,GAAIhI,GAAAA,aAiB/C/X,EAAbke,uBAAsE4d,EAAAA,MAAM,WACpE,MAAI97B,GAAKge,QACElS,EAAAA,MAAnBwuB,UAAA,GAA4Bt6B,EAAKge,QAAQ6B,IAAI,SAACrB,GAAW,MAAAA,GAAOud,qBAGjD/7B,EAAKiS,OAAOsjB,SACdjpB,eACAhI,KAAKmH,EAAAA,KAAK,GAAIuwB,EAAAA,UAAU,WAAM,MAAAh8B,GAAKke,4BA+BpCle,EAAZwnB,WAAiC,EAerBxnB,EAAZi0B,WAAiC,EAarBj0B,EAAZi8B,aAAmC,EAkEvBj8B,EAAZs0B,UAAuB,EAMXt0B,EAAZse,YAAyB,EAGbte,EAAZ6gB,UAAwB,EAGH7gB,EAArBunB,IAA2B,aAAa/Q,KAGnBxW,EAArBie,QAA+B,GAAIjT,GAAAA,QA8G/BhL,EAAJggB,SAAqC,aAGjChgB,EAAJ2sB,UAAgB,aA8vBJ3sB,EAAZm0B,aAA2B,SAAC+H,EAASC,GAAY,MAAAD,KAAOC,GA51B5Cn8B,EAAK+mB,YAGL/mB,EAAK+mB,UAAUa,cAAgB5nB,GAGnCA,EAAKsX,SAAWrV,SAASqV,IAAa,EAGtCtX,EAAKkL,GAAKlL,EAAKkL,KAo1BvB,MAlnCkCkN,GAAlCyF,EAAA1G,GA6HI/W,OAAJ2M,eACQ8Q,EADRxc,UAAA,mBAAI,WAEI,MAAOpB,MAAK+zB,kBAGhB,SAAgB7xB,GACZlC,KAAK+zB,aAAe7xB,EAEpBlC,KAAKmf,aAAanc,wCAKtB7C,OAAJ2M,eACQ8Q,EADRxc,UAAA,gBAAI,WAEI,MAAOpB,MAAKunB,eAGhB,SAAarlB,GACTlC,KAAKunB,UAAY9U,EAAAA,sBAAsBvQ,GAEvClC,KAAKmf,aAAanc,wCAKtB7C,OAAJ2M,eACQ8Q,EADRxc,UAAA,gBAAI,WAEI,MAAOpB,MAAKg0B,eAGhB,SAAa9xB,GACT,GAAIlC,KAAKye,eACL,KAAMwV,IAGVj0B,MAAKg0B,UAAYvhB,EAAAA,sBAAsBvQ,oCAK3C/B,OAAJ2M,eACQ8Q,EADRxc,UAAA,kBAAI,WAEI,OAAIpB,KAAKoe,UAEFpe,KAAKg8B,iBAGhB,SAAe95B,GACXlC,KAAKg8B,YAAcvpB,EAAAA,sBAAsBvQ,oCAU7C/B,OAAJ2M,eACQ8Q,EADRxc,UAAA,mBAAI,WAEI,MAAOpB,MAAKk0B,kBAGhB,SAAgBhb,GAEZ,GAAkB,kBAAPA,GACP,KAAMib,IAGVn0B,MAAKk0B,aAAehb,EAEhBlZ,KAAKye,gBAELze,KAAKo0B,uDAKbj0B,OAAJ2M,eACQ8Q,EADRxc,UAAA,aAAI,WAEI,MAAOpB,MAAK6f,YAGhB,SAAUqJ,GACFA,IAAalpB,KAAK6f,SAClB7f,KAAKgZ,WAAWkQ,GAChBlpB,KAAK6f,OAASqJ,oCAMtB/oB,OAAJ2M,eACQ8Q,EADRxc,UAAA,UAAI,WAEI,MAAOpB,MAAKkoB,SAGhB,SAAOhmB,GACHlC,KAAKkoB,IAAMhmB,GAASlC,KAAKsnB,IACzBtnB,KAAKmf,aAAanc,wCAMtB7C,OAAJ2M,eAAQ8Q,EAARxc,UAAA,eAAI,WACI,MAAOpB,MAAKq0B,UAAYr0B,KAAKqe,gBAOjC,SAAYnc,GACRlC,KAAKq0B,SAAWnyB,mCAKpB/B,OAAJ2M,eAAQ8Q,EAARxc,UAAA,iBAAI,WACI,MAAOpB,MAAKqe,4CA2ChBT,EAAJxc,UAAAgB,SAAI,WAAA,GAAJrC,GAAAC,IACYA,MAAK8e,OACL9e,KAAK8e,KAAKV,SAAWpe,KAAKoe,UAG9Bpe,KAAKmf,aAAanc,OAKlBhD,KAAKu0B,yBACAlwB,KAAKM,EAAAA,uBAAwBL,EAAAA,UAAUtE,KAAKge,UAC5CxZ,UAAU,WACHzE,EAAKy0B,WACLz0B,EAAK6gB,UAAY,EACjB7gB,EAAK2lB,aAAa5gB,MAAK,KAEvB/E,EAAK2lB,aAAa5gB,MAAK,GACvB/E,EAAK00B,oBAAqB,EAC1B10B,EAAKoiB,WAAWM,QAAU,EAC1B1iB,EAAKmgB,kBAAkBjf,mBAKvC2c,EAAJxc,UAAAszB,mBAAI,WACS10B,KAAK8e,OAEV9e,KAAK20B,iBAEL30B,KAAKye,eAAiBze,KAAK8e,KAAKL,eAAiB,GAAI6V,GAAAA,eAA6Bt0B,KAAKoe,UACvFpe,KAAK+d,QAAU/d,KAAK8e,KAAKf,QACzB/d,KAAK8e,KAAKkH,WAAahmB,KAAKgmB,WAE5BhmB,KAAKye,eAAemW,QACfvwB,KAAKC,EAAAA,UAAUtE,KAAKge,UACpBxZ,UAAU,SAAC7B,GACRA,EAAMkyB,MAAMpyB,QAAQ,SAAC8b,GAAW,MAAAA,GAAOK,WACvCjc,EAAMmyB,QAAQryB,QAAQ,SAAC8b,GAAW,MAAAA,GAAOM,iBAIrDjB,EAAJxc,UAAA4zB,gBAAI,WAAA,GAAJj1B,GAAAC,IACaA,MAAK8e,OAEV9e,KAAKmlB,KAAKrU,QACLtM,UAAU,WACPmM,WAAW,WAAM,MAAA5Q,GAAKk1B,wBAAwB,KAGtDj1B,KAAK+d,QAAQjN,QACRzM,KAAK0wB,EAAAA,UAAU,MAAOzwB,EAAAA,UAAUtE,KAAKge,UACrCxZ,UAAU,WACPzE,EAAKo8B,wBAELp8B,EAAK8d,mBAIjBD,EAAJxc,UAAAinB,UAAI,WACQroB,KAAK8mB,WAAa9mB,KAAKsoB,oBAG/B1K,EAAJxc,UAAAyP,YAAI,SAAYC,GAGJA,EAAQjN,UACR7D,KAAKmf,aAAanc,QAI1B4a,EAAJxc,UAAAkB,YAAI,WACItC,KAAKge,QAAQhb,OAEbhD,KAAKge,QAAQ/a,WACbjD,KAAKmf,aAAalc,YAStB2a,EAAJxc,UAAA8zB,OAAI,WACQl1B,KAAKw0B,UACLx0B,KAAKgM,QAELhM,KAAKiN,QAIb2Q,EAAJxc,UAAA6L,KAAI,WAAA,GAAJlN,GAAAC,MACYA,KAAK6D,UAAa7D,KAAK+d,SAAY/d,KAAK+d,QAAQpP,SAAU3O,KAAKqe,aAEnEre,KAAKgjB,YAAchjB,KAAKga,QAAQpY,cAAcwgB,wBAG9CpiB,KAAKm1B,gBAAkBnzB,SAASmU,iBAAiBnW,KAAKga,QAAQpY,eAAe,cAE7E5B,KAAKqe,YAAa,EAElBre,KAAKkhB,2BACLlhB,KAAKqgB,yBACLrgB,KAAKkgB,kBAAkBjf,eAGvBjB,KAAKgS,OAAOsjB,SAASjpB,eAChBhI,KAAKmH,EAAAA,KAAK,IACVhH,UAAU,WACHzE,EAAKo1B,iBAAmBp1B,EAAKoiB,WAAW9gB,YACxCtB,EAAKoiB,WAAW9gB,WAAWG,iBAC3BzB,EAAKoiB,WAAW9gB,WAAWG,eAAeM,MAAMyzB,SAAcx1B,EAAKo1B,gBAAvF,UAMIvX,EAAJxc,UAAA4K,MAAI,WACQhM,KAAKqe,aACLre,KAAKqe,YAAa,EAKlBre,KAAKkgB,kBAAkBjf,eACvBjB,KAAK0sB,cAWb9O,EAAJxc,UAAA4X,WAAI,SAAW9W,GACHlC,KAAK+d,SACL/d,KAAKy1B,oBAAoBvzB,IAWjC0b,EAAJxc,UAAA6X,iBAAI,SAAiBC,GACblZ,KAAK+f,SAAW7G,GAUpB0E,EAAJxc,UAAA+X,kBAAI,SAAkBD,GACdlZ,KAAK0sB,UAAYxT,GASrB0E,EAAJxc,UAAAgY,iBAAI,SAAiBC,GACbrZ,KAAK6D,SAAWwV,EAChBrZ,KAAKkgB,kBAAkBjf,eACvBjB,KAAKmf,aAAanc,QAGtB7C,OAAJ2M,eAAQ8Q,EAARxc,UAAA,gBAAI,WACI,MAAOpB,MAAKoe,SAAWpe,KAAKye,eAAeE,SAAW3e,KAAKye,eAAeE,SAAS,oCAGvFxe,OAAJ2M,eAAQ8Q,EAARxc,UAAA,oBAAI,WACI,MAAIpB,MAAKsgB,MAAgB,GAEjBtgB,KAAa,SAAkB41B,2CAG3Cz1B,OAAJ2M,eAAQ8Q,EAARxc,UAAA,qBAAI,WACI,GAAIpB,KAAKsgB,MAAS,QAE1B,IAAcqV,GAAkB31B,KAAKye,eAAeE,QAI5C,OAFI3e,MAAKwiB,SAAWmT,EAAgB5lB,UAE7B4lB,mCAGXx1B,OAAJ2M,eAAQ8Q,EAARxc,UAAA,aAAI,WACI,OAAQpB,KAAKye,gBAAkBze,KAAKye,eAAeoX,2CAGvDjY,EAAJxc,UAAAohB,MAAI,WACI,QAAOxiB,KAAKw7B,KAAyB,QAAnBx7B,KAAKw7B,IAAIt5B,OAG/B0b,EAAJxc,UAAA8B,cAAI,SAAcP,GACL3C,KAAK6D,WACF7D,KAAKw0B,UACLx0B,KAAK+1B,kBAAkBpzB,GAEvB3C,KAAKg2B,oBAAoBrzB,KASrCib,EAAJxc,UAAA60B,aAAI,WACIj2B,KAAKy0B,mBAAqBz0B,KAAKw0B,UAC/Bx0B,KAAKkgB,kBAAkBjf,gBAG3B2c,EAAJxc,UAAA80B,QAAI,WACSl2B,KAAK6D,WACN7D,KAAKq0B,UAAW,EAEhBr0B,KAAKmf,aAAanc,SAQ1B4a,EAAJxc,UAAAurB,OAAI,WACI3sB,KAAKq0B,UAAW,EAEXr0B,KAAK6D,UAAa7D,KAAKw0B,YACxBx0B,KAAK0sB,YACL1sB,KAAKkgB,kBAAkBjf,eACvBjB,KAAKmf,aAAanc,SAK1B4a,EAAJxc,UAAA+0B,WAAI,WAAA,GAAJp2B,GAAAC,IACQA,MAAKmiB,WAAWiU,eACX/xB,KAAKmH,EAAAA,KAAK,IACVhH,UAAU,WACPzE,EAAKmgB,kBAAkBuT,gBACvB1zB,EAAKkiB,0BACLliB,EAAK4gB,MAAM/e,cAAcgf,UAAY7gB,EAAK6gB,aAKtDhD,EAAJxc,UAAAi1B,cAAI,WACI,MAAOr2B,MAAKy7B,gBAAkB,MAAMz7B,KAAKy7B,gBAAgBlF,MAAU,IAIvE3Y,EAAJxc,UAAAiX,MAAI,WACIrY,KAAK4C,WAAWhB,cAAcyW,SAUlCuF,EAAJxc,UAAAygB,uBAAI,SAAuB2U,EAAuB5U,EAAsBF,GACxE,GAAcP,GAAanhB,KAAK8gB,gBAClB2V,EAA4BtV,EAAaqV,EAGzCE,EAAmBvV,EAAa,EAMhCwV,EAAwBF,EAA4B7U,EAAe8U,CAEzE,OAAOnV,MAAKC,IAAID,KAAKqH,IAAI,EAAG+N,GAAwBjV,IAOxD9D,EAAJxc,UAAA6nB,iBAAI,WACIjpB,KAAKqY,QACLrY,KAAKiN,QAIT2Q,EAAJxc,UAAAg7B,uBAAI,SAAuBC,EAA8B77B,GACjDA,EAAOmY,kBAEP3Y,KAAK+d,QAAQtb,QAAQ,SAAC8b,GACdA,EAAO3Z,OAASy3B,EAAez3B,MAAQ2Z,EAAOM,aAGtD7e,KAAKye,eAAeI,SAASwd,IAGjCze,EAAJxc,UAAA6zB,qBAAI,WACI,IAAIj1B,KAAKsgB,OAAUtgB,KAAKoe,SAAxB,CAER,GAAYyY,GAAuB,EACrBC,EAAkB92B,KAAK+2B,8BACzBC,EAAiC,CAYrC,IATAh3B,KAAKmlB,KAAK1iB,QAAQ,SAACw0B,GACXA,EAAIr1B,cAAcs1B,UAAYD,EAAIr1B,cAAcu1B,eAChDH,GAA0BC,EAAIr1B,cAAcwgB,wBAAwBS,MAJjD,EAKnBgU,OAIR72B,KAAKo3B,YAAcp3B,KAAKye,eAAeE,SAAShQ,OAASkoB,EAErD72B,KAAKo3B,YAAa,CAC9B,GAAkBC,GAAer3B,KAAKga,QAAQpY,cAAc01B,cAAc,sCACxDC,EAAcv3B,KAAKga,QAAQpY,cAAc01B,cAAc,+BAEvDE,EAAqBH,EAAaH,UAAYG,EAAaF,aAI3DM,EAA2BF,EAAYnV,wBAAwBS,MAC/D6U,EAAuBD,EAHK,EAOlC,IAFID,GAAuBV,EAAkBY,IAAiB13B,KAAKo3B,YAAc,GAG7EJ,IAA2BS,GAC1BT,EAT6B,GASiBS,EAI/C,WAFAz3B,MAAKkgB,kBAAkBjf,gBAGfu2B,GAAuBV,EAdD,GAcwCY,GACtE13B,KAAKo3B,cAIbp3B,KAAKkgB,kBAAkBjf,iBAGnB2c,EAAZxc,UAAA+6B,sBAAI,WAAA,GAAJp8B,GAAAC,IACQA,MAAKye,eAAeE,SAASlc,QAAQ,SAAC45B,GAClCt8B,EAAKge,QAAQtb,QAAQ,SAAC8b,GACdA,EAAO3Z,OAASy3B,EAAez3B,OAC/B7E,EAAK0e,eAAeI,SAASwd,GAC7Bt8B,EAAK0e,eAAeG,OAAOL,GAE3BA,EAAOK,eAMfhB,EAAZxc,UAAA21B,4BAAI,WACJ,GAAcY,GAAe33B,KAAKga,QAAQpY,cAAcg2B,WAAU,EAC1DD,GAAaL,cAAc,sCAAsCO,SAEjE73B,KAAKiS,SAASkB,SAASwkB,EAAc,WAAY,YACjD33B,KAAKiS,SAASkB,SAASwkB,EAAc,aAAc,UACnD33B,KAAKiS,SAASkB,SAASwkB,EAAc,MAAO,SAC5C33B,KAAKiS,SAASkB,SAASwkB,EAAc,OAAQ,KAE7C33B,KAAKiS,SAAS8lB,YAAY/3B,KAAKga,QAAQpY,cAAe+1B,EAE9D,IAAYb,GAA0B,CAQ9B,OANAa,GAAaK,iBAAiB,UAAUv1B,QAAQ,SAACoR,GAC7CijB,GAAmBjjB,EAAKuO,wBAA6B,MAF9B,IAK3BuV,EAAaE,SAENf,GAGHlZ,EAAZxc,UAAA40B,oBAAI,SAA4BrzB,GAEhC,GAAcU,GAAUV,EAAMU,QAChB40B,EAAa50B,IAAY60B,EAAAA,YAAc70B,IAAY80B,EAAAA,UACrD90B,IAAY+0B,EAAAA,YAAc/0B,IAAYg1B,EAAAA,WACxBh1B,KAAYi1B,EAAAA,OAASj1B,IAAYk1B,EAAAA,QAGhCv4B,KAAKoe,UAAYzb,EAAM61B,SAAWP,GAEjDt1B,EAAMkqB,iBAEN7sB,KAAKiN,SACGjN,KAAKoe,UAAYpe,KAAK8e,KAAKC,YAAc/e,KAAK8e,KAAKC,WAAW0Z,WACtEz4B,KAAK8e,KAAKC,WAAW0Z,UAAU91B,IAI/Bib,EAAZxc,UAAA20B,kBAAI,SAA0BpzB,GAE9B,GAAcU,GAAUV,EAAMU,QAChB40B,EAAa50B,IAAY60B,EAAAA,YAAc70B,IAAY80B,EAAAA,QAEzD,IAAIF,GAAct1B,EAAM61B,OAEpB71B,EAAMkqB,iBAEN7sB,KAAKgM,YACF,CAAA,GAAI3I,IAAY+0B,EAAAA,YAAc/0B,IAAYg1B,EAAAA,YAC7C,MAAOr4B,MAAKs8B,kBAAkBhlB,KAAKtX,KAAK8e,KAAMnc,EAC3C,IAAIU,IAAYs1B,EAAAA,MAAQt1B,IAAYu1B,EAAAA,IACvCj2B,EAAMkqB,iBAEFxpB,IAAYs1B,EAAAA,KACZ34B,KAAK8e,KAAKC,WAAWwB,qBAErBvgB,KAAK8e,KAAKC,WAAW8Z,wBAEtB,IAAKx1B,IAAYi1B,EAAAA,OAASj1B,IAAYk1B,EAAAA,QAAUv4B,KAAK8e,KAAKC,WAAW+Z,WAIrE,GAAI94B,KAAKoe,UAAY/a,IAAY01B,EAAAA,GAAKp2B,EAAMq2B,QAAS,CACxDr2B,EAAMkqB,gBAElB,IAAkBoM,GAAuBj5B,KAAK+d,QAAQzd,KAAK,SAACie,GAAW,OAACA,EAAOI,UAEnE3e,MAAK+d,QAAQtb,QAAQ,SAAC8b,GACd0a,IAAyB1a,EAAO1a,SAChC0a,EAAOK,SAEPL,EAAOM,iBAGZ,CACf,GAAkBqa,GAAyBl5B,KAAK8e,KAAKC,WAAW2B,eAEpD1gB,MAAK8e,KAAKC,WAAW0Z,UAAU91B,GAE3B3C,KAAKoe,UAAY6Z,GAAct1B,EAAMw2B,UAAYn5B,KAAK8e,KAAKC,WAAW+Z,YACtE94B,KAAK8e,KAAKC,WAAW2B,kBAAoBwY,GACzCl5B,KAAK8e,KAAKC,WAAW+Z,WAAWM,2BAtBpCz2B,GAAMkqB,iBAEN7sB,KAAK8e,KAAKC,WAAW+Z,WAAWM,yBAyBhCxb,EAAZxc,UAAAgzB,oBAAI,WAAA,GAAJr0B,GAAAC,IAGQq5B,SAAQC,UAAUC,KAAK,WACnBx5B,EAAK01B,oBAAoB11B,EAAK+mB,UAAY/mB,EAAK+mB,UAAU5kB,MAAQnC,EAAK8f,WAQtEjC,EAAZxc,UAAAq0B,oBAAI,SAA4BvzB,GAA5B,GAAJnC,GAAAC,IACQ,IAAIA,KAAKoe,UAAYlc,EAAO,CACxB,IAAKs3B,MAAMC,QAAQv3B,GAAU,KAAMw3B,IAEnC15B,MAAKye,eAAe3b,QACpBZ,EAAMO,QAAQ,SAACyO,GAAsB,MAAAnR,GAAK45B,YAAYzoB,KACtDlR,KAAKif,iBACF,CACHjf,KAAKye,eAAe3b,OAChC,IAAkB82B,GAAsB55B,KAAK25B,YAAYz3B,EAIzC03B,IACA55B,KAAK8e,KAAKC,WAAWC,cAAc4a,GAI3C55B,KAAKkgB,kBAAkBjf,gBAOnB2c,EAAZxc,UAAAu4B,YAAI,SAAoBz3B,GAApB,GAAJnC,GAAAC,KACc45B,EAAsB55B,KAAK+d,QAAQ1P,KAAK,SAACkQ,GAC3C,IAEI,MAAuB,OAAhBA,EAAOrc,OAAiBnC,EAAKm0B,aAAa3V,EAAOrc,MAAOA,GACjE,MAAO23B,GAML,MALIC,GAAAA,aAEAC,QAAQC,KAAKH,IAGV,IAQf,OAJID,IACA55B,KAAKye,eAAeG,OAAOgb,GAGxBA,GAGHhc,EAAZxc,UAAAuzB,eAAI,WAAA,GAAJ50B,GAAAC,IACQA,MAAKs8B,kBAAoBt8B,KAAK8e,KAAKmP,UAEnCjuB,KAAK8e,KAAKmP,UAAY,aAEtBjuB,KAAK8e,KAAKC,WAAWqb,OAChB/1B,KAAKC,EAAAA,UAAUtE,KAAKge,UACpBxZ,UAAU,WAGPzE,EAAKsY,QACLtY,EAAKiM,UAGbhM,KAAK8e,KAAKC,WAAWlH,OAChBxT,KAAKC,EAAAA,UAAUtE,KAAKge,UACpBxZ,UAAU,WACHzE,EAAKse,YAActe,EAAK4gB,MACxB5gB,EAAKygB,6BACGzgB,EAAKse,YAAete,EAAKqe,WAAYre,EAAK+e,KAAKC,WAAW+Z,YAClE/4B,EAAK+e,KAAKC,WAAW+Z,WAAWM;qKAMxCxb,EAAZxc,UAAAyc,aAAI,WAAA,GAAJ9d,GAAAC,KACc8d,EAAqBjS,EAAAA,MAAM7L,KAAK+d,QAAQjN,QAAS9Q,KAAKge,QAE5Dhe,MAAKie,uBACA5Z,KAAKC,EAAAA,UAAUwZ,IACftZ,UAAU,SAAC7B,GACR5C,EAAKme,SAASvb,EAAM2W,OAAQ3W,EAAMwb,aAE9Bxb,EAAMwb,cAAgBpe,EAAKqe,UAAYre,EAAKse,aAC5Cte,EAAKiM,QACLjM,EAAKsY,WAajBrY,KAAKse,gBAIDV,EAAZxc,UAAA8c,SAAI,SAAiBK,EAAsBJ,GAC3C,GAAcK,GAAcxe,KAAKye,eAAeC,WAAWH,EAE/B,OAAhBA,EAAOrc,OAAkBlC,KAAKoe,UAK1BG,EAAOI,SACP3e,KAAKye,eAAeG,OAAOL,GAE3Bve,KAAKye,eAAeI,SAASN,GAG7BJ,GACAne,KAAK8e,KAAKC,WAAWC,cAAcT,GAGnCve,KAAKoe,WACLpe,KAAKif,aAEDd,GAKAne,KAAKqY,WAtBbkG,EAAOM,WACP7e,KAAKye,eAAe3b,QACpB9C,KAAKkf,iBAAiBX,EAAOrc,QAyB7Bsc,IAAgBxe,KAAKye,eAAeC,WAAWH,IAC/Cve,KAAKkf,mBAGTlf,KAAKmf,aAAanc,QAId4a,EAAZxc,UAAA6d,WAAI,WAAA,GAAJlf,GAAAC,IACQ,IAAIA,KAAKoe,SAAU,CAC3B,GAAkBgB,GAAUpf,KAAK+d,QAAQsB,SAE7Brf,MAAKye,eAAea,KAAK,SAACC,EAAGC,GACzB,MAAOzf,GAAK0f,eAAiB1f,EAAK0f,eAAeF,EAAGC,EAAGJ,GACnDA,EAAQhP,QAAQmP,GAAKH,EAAQhP,QAAQoP,KAE7Cxf,KAAKmf,aAAanc,SAKlB4a,EAAZxc,UAAA8d,iBAAI,SAAyBQ,GAC7B,GAAYC,GAAmB,IAGnBA,GADA3f,KAAKoe,SACUpe,KAAa,SAAS4f,IAAI,SAACrB,GAAW,MAAAA,GAAOrc,QAE9ClC,KAAK2e,SAAY3e,KAAa,SAASkC,MAAQwd,EAGjE1f,KAAK6f,OAASF,EACd3f,KAAK8f,YAAYhb,KAAK6a,GACtB3f,KAAK+f,SAASJ,GACd3f,KAAKggB,gBAAgBlb,KAAK,GAAImb,IAAkB,KAAcN,IAC9D3f,KAAKkgB,kBAAkBjf,gBAInB2c,EAAZxc,UAAAkd,aAAI,WACIte,KAAKmgB,UAAYngB,KAAK+d,QAAQ6B,IAAI,SAACrB,GAAW,MAAAA,GAAOtT,KAAImV,KAAK,MAO1DxC,EAAZxc,UAAAif,uBAAI,WACQrgB,KAAK8e,KAAKC,aACN/e,KAAKsgB,MACLtgB,KAAK8e,KAAKC,WAAWwB,qBAErBvgB,KAAK8e,KAAKC,WAAWC,cAAchf,KAAKye,eAAeE,SAAS,MAMpEf,EAAZxc,UAAAof,2BAAI,WACJ,GAAcC,GAAoBzgB,KAAK8e,KAAKC,WAAW2B,iBAAmB,CAElE1gB,MAAK2gB,MAAM/e,cAAcgf,UAAYC,EACjCJ,EACAzgB,KAAK8gB,gBACL9gB,KAAK2gB,MAAM/e,cAAcgf,UZrkCE,MY2kC3BhD,EAAZxc,UAAA2f,eAAI,SAAuBxC,GAEnB,MAAOve,MAAK+d,QAAQiD,OAAO,SAACtV,EAAgBuV,EAAuB9Q,GAE/D,WAAkBjJ,KAAXwE,EAAwB6S,IAAW0C,EAAU9Q,MAAQjJ,GAAawE,OAC1ExE,KAIC0W,EAAZxc,UAAA8f,yBAAI,WACJ,GAAcC,GAAanhB,KAAK8gB,gBAClBM,EAAQphB,KAAKqhB,eACbC,EAAcC,KAAKC,IAAIJ,EAAQD,EZvlCN,KYwlCzBM,EAAwBL,EAAQD,EAGhCO,EAAYD,EAAwBH,EAGpCK,EACF3hB,KAAKsgB,MAAQ,EAAItgB,KAAK+gB,eAAe/gB,KAAKye,eAAeE,SAAS,IAKhEiD,EAAeN,EAAc,CACnCthB,MAAK4gB,UAAY5gB,KAAK6hB,uBAAuBF,EAAsBC,EAAcF,GACjF1hB,KAAK8hB,QAAU9hB,KAAK+hB,0BAEpB/hB,KAAKgiB,2BAA2BN,IAU5B9D,EAAZxc,UAAA6gB,wBAAI,WACJ,GAAcC,GAAcliB,KAAKmiB,WAAW9gB,WAAWG,eAAe4gB,wBACxDC,EAAeriB,KAAKsiB,cAAcC,kBAClCC,EAAQxiB,KAAKwiB,QAGfC,EZrnC0B,CYwnCzBD,KAASC,IAAY,EAGlC,IAAcC,GAAe,GAAKR,EAAYjI,KAAOwI,GAAWD,EAPnC1Z,EAO0D,IACzE6Z,EAAgBT,EAAYU,MAAQH,EAAUJ,EAAaQ,OAC1DL,EAAQ,EATM1Z,EAYjB4Z,GAAe,EACfD,GAAWC,EZvnCsB,EYwnC1BC,EAAgB,IACvBF,GAAWE,EZznCsB,GY+nCrC3iB,KAAKmiB,WAAWM,QAAUlB,KAAKuB,MAAML,GACrCziB,KAAKmiB,WAAW9gB,WAAW0D,kBAQvB6Y,EAAZxc,UAAA2gB,wBAAI,WAKI,MAAO,IAUHnE,EAAZxc,UAAA4gB,2BAAI,SAAmCN,GACvC,GAAcP,GAAanhB,KAAK8gB,gBAClBuB,EAAeriB,KAAKsiB,cAAcC,kBAElCQ,EAAoB/iB,KAAKgjB,YAAYjhB,IZ3pCN,EY4pC/BkhB,EACFZ,EAAaa,OAASljB,KAAKgjB,YAAYG,OZ7pCN,EY+pC/BC,EAAiB7B,KAAK8B,IAAIrjB,KAAK8hB,SAC/BwB,EACF/B,KAAKC,IAAIxhB,KAAKqhB,eAAiBF,EZ9qCJ,KY+qCzBoC,EAAoBD,EAAmBF,EAAiBpjB,KAAKgjB,YAAYE,MAE3EK,GAAoBN,EACpBjjB,KAAKwjB,cAAcD,EAAmBN,GAC/BG,EAAiBL,EACxB/iB,KAAKyjB,gBAAgBL,EAAgBL,EAAmBrB,GAExD1hB,KAAK0jB,gBAAkB1jB,KAAK2jB,0BAK5B/F,EAAZxc,UAAAoiB,cAAI,SAAsBD,EAA2BN,GAErD,GAAcW,GAAwBrC,KAAKuB,MAAMS,EAAoBN,EAI7DjjB,MAAK4gB,WAAagD,EAClB5jB,KAAK8hB,SAAW8B,EAChB5jB,KAAK0jB,gBAAkB1jB,KAAK2jB,yBAKxB3jB,KAAK4gB,WAAa,IAClB5gB,KAAK4gB,UAAY,EACjB5gB,KAAK8hB,QAAU,EACf9hB,KAAK0jB,gBAAkB,mBAKvB9F,EAAZxc,UAAAqiB,gBAAI,SAAwBL,EAAwBL,EAA2BrB,GAE/E,GAAcmC,GAAwBtC,KAAKuB,MAAMM,EAAiBL,EAW1D,IAPA/iB,KAAK4gB,WAAaiD,EAClB7jB,KAAK8hB,SAAW+B,EAChB7jB,KAAK0jB,gBAAkB1jB,KAAK2jB,yBAKxB3jB,KAAK4gB,WAAac,EAKlB,MAJA1hB,MAAK4gB,UAAYc,EACjB1hB,KAAK8hB,QAAU,OACf9hB,KAAK0jB,gBAAkB,gBAOvB9F,EAAZxc,UAAAuiB,uBAAI,WACJ,GAAcxC,GAAanhB,KAAK8gB,gBAElBgD,GAA0B3C,EAAanhB,KAAKgjB,YAAYE,QAAU,CAIxE,OAAO,QAFS3B,KAAK8B,IAAIrjB,KAAK8hB,SAAWgC,EAAyB3C,EAAa,GAEvF,UAIYvD,EAAZxc,UAAAigB,aAAI,WACI,MAAOrhB,MAAK+d,QAAQpP,QAIhBiP,EAAZxc,UAAA0f,cAAI,WAGI,MAAO,oBA3oCfza,KAACgL,EAAAA,UAAD9K,OACIC,SAAU,iBACVC,SAAU,eACV6K,SAAJ,+pEACI2D,QAAS,qxFACT2E,QAAS,WAAY,YACrB1Q,cAAeC,EAAAA,kBAAkBC,KACjCL,gBAAiBC,EAAAA,wBAAwBC,OACzCvC,MACIkD,YAAa,KACbma,kBAAmB,WAEnBva,MAAO,iBACPsQ,sBAAuB,WACvBkK,4BAA6B,aAC7BC,6BAA8B,WAE9Btd,YAAa,wBACbud,UAAW,YACXC,SAAU,WACVC,kBAAmB,0BAEvB/a,YACIgb,GAAmBC,eACnBD,GAAmBE,eAEvB9b,YACM8Q,QAASiL,GAAoB/K,YAAamE,IAC1CrE,QAASkL,EAAAA,QAAShL,YAAamE,4CAhGzCvX,KAAIqe,EAAAA,gBAzCJre,KAAI2D,EAAAA,oBAUJ3D,KAAIU,EAAAA,SAOJV,KAAI6O,EAAAA,YA+BJ7O,KAAIse,KA3CJte,KAAIS,EAAAA,aAoBJT,KAASiB,EAAAA,eAATH,aAAAd,KA8XSkB,EAAAA,aA/XTlB,KAA8Due,EAAAA,OAA9Dzd,aAAAd,KAgYSkB,EAAAA,aAhYTlB,KAA+Bwe,EAAAA,mBAA/B1d,aAAAd,KAiYSkB,EAAAA,aAtVTlB,KAASye,GAAT3d,aAAAd,KAuVSkB,EAAAA,aAlYTlB,KAAmD0e,EAAAA,UAAnD5d,aAAAd,KAmYS2e,EAAAA,OAnYT3e,KAmYiBkB,EAAAA,aACjBlB,KAAAgU,OAAAlT,aAAAd,KAASiU,EAAAA,UAAT/T,MAAmB,gBACnBF,SAAAa,GAAAC,aAAAd,KAASe,EAAAA,OAATb,MAAgB0e,2BAnNhBjL,UAAA3T,KAAKiE,EAAAA,UAAL/D,MAAe,aAEfoa,QAAAta,KAAKiE,EAAAA,UAAL/D,MAAe,WAEf4b,aAAA9b,KAAKiE,EAAAA,UAAL/D,MAAe2e,EAAAA,uBAEfC,OAAA9e,KAAK+e,EAAAA,aAAL7e,MAAkB8e,MAGlBC,gBAAAjf,KAAKkf,EAAAA,aAALhf,MAAkBif,MAElB1G,OAAAzY,KAAKkf,EAAAA,aAALhf,MAAkBkf,MAGlBC,eAAArf,KAAKmB,EAAAA,SAGLme,eAAAtf,KAAKmB,EAAAA,OAALjB,MAAY,YAIZqf,eAAAvf,KAAKmB,EAAAA,OAALjB,MAAY,YAIZyZ,kBAAA3Z,KAAKmB,EAAAA,SAOLsY,cAAAzZ,KAAKmB,EAAAA,SAGL8H,aAAAjJ,KAAKqB,EAAAA,QAGLme,oBAAAxf,KAAKqB,EAAAA,QAML+X,iBAAApZ,KAAKqB,EAAAA,QAmBLoe,cAAAzf,KAAKqB,EAAAA,QAaLqe,WAAA1f,KAAKqB,EAAAA,QAaL0W,WAAA/X,KAAKqB,EAAAA,QAeLse,aAAA3f,KAAKqB,EAAAA,QAkBLue,cAAA5f,KAAKqB,EAAAA,QAoBLxF,QAAAmE,KAAKqB,EAAAA,QAcLuD,KAAA5E,KAAKqB,EAAAA,SAw5BLkW,GAlnCkCsI,ICvIlCC,GAAA,WAAA,QAAAA,MAciC,sBAdjC9f,KAAC8B,EAAAA,SAAD5B,OACI+B,SACIC,EAAAA,aACAC,EAAAA,cACA4d,EAAAA,cACAC,GACAvU,GACAwU,GACAC,IAEJle,SAAUuV,GAAc4H,GAAqBjd,EAAAA,cAC7CH,cAAewV,GAAc4H,IAC7B/c,WAAY+d,QAEhBL,KCRaM,GACT,GAAIja,GAAAA,eAA+B,8BAEnC+J,GAAe,EAInBmQ,GAAA,WACI,QAAJA,GAAuBC,EACAC,EACAC,EACAC,GAHA9mB,KAAvB2mB,yBAAuBA,EACA3mB,KAAvB4mB,WAAuBA,EACA5mB,KAAvB6mB,gBAAuBA,EACA7mB,KAAvB8mB,UAAuBA,EAEvB,MAAAJ,MAGaK,GAAuEC,EAAgBN,IAEpGO,GAAA,SAAA/P,GA6HI,QAAJ+P,GAA0BrkB,EACiBkkB,EACfF,EACAC,EACZF,EACwDO,EAChDlV,GANpB,GAAJjS,GAOQmX,EAPRI,KAAAtX,KAOc2mB,EAA0BC,EAAYC,EAAiBC,IAPrE9mB,IAA0BD,GAA1B6C,WAA0BA,EACiB7C,EAA3C+mB,UAA2CA,EAKnB/mB,EAAxBiS,OAAwBA,EAhHXjS,EAAbonB,SAAgC,EAS5BpnB,EAAJqnB,SAAuB,EAMVrnB,EAAbof,aAA2C,GAAIpU,GAAAA,QAM3ChL,EAAJsnB,YAA0B,cAwEZtnB,EAAdunB,IAAoB,eAAe/Q,KAErBxW,EAAdoS,WAA0B,EAEZpS,EAAdwnB,WAA0B,EAKdxnB,EAAZynB,WAAiC,EACrBznB,EAAZ0nB,eAAqC,EACzB1nB,EAAZ2nB,UAAgC,EAYxB3nB,EAAK4nB,cAAgBT,GAAsBnnB,EAAK6C,WAAWhB,cAE3D7B,EAAK6nB,oBAAsB7nB,EAAKmC,MAGhCnC,EAAKkL,GAAKlL,EAAKkL,EAEvB,IAAc4c,GAAeC,EAAAA,UAAUllB,EAAWhB,cAAe,eAMzD7B,GAAKgoB,iBAAmBF,EAAarjB,UAAUzE,EAAKioB,KAAKC,KAAKloB,MA+GtE,MAnPgCoY,GAAhC8O,EAAA/P,GA8BI/W,OAAJ2M,eACQma,EADR7lB,UAAA,gBAAI,WAEI,MAAIpB,MAAK8mB,WAAyC,OAA5B9mB,KAAK8mB,UAAUjjB,SAC1B7D,KAAK8mB,UAAUjjB,SAGnB7D,KAAKmS,eAGhB,SAAajQ,GACTlC,KAAKmS,UAAYM,EAAAA,sBAAsBvQ,GAEnClC,KAAKonB,UACLpnB,KAAKonB,SAAU,EACfpnB,KAAKmf,aAAanc,yCAQ1B7C,OAAJ2M,eACQma,EADR7lB,UAAA,UAAI,WAEI,MAAOpB,MAAKkoB,SAGhB,SAAOhmB,GACHlC,KAAKkoB,IAAMhmB,GAASlC,KAAKsnB,qCAa7BnnB,OAAJ2M,eACQma,EADR7lB,UAAA,gBAAI,WAEI,MAAOpB,MAAKunB,eAGhB,SAAarlB,GACTlC,KAAKunB,UAAY9U,EAAAA,sBAAsBvQ,oCAO3C/B,OAAJ2M,eACQma,EADR7lB,UAAA,aAAI,WAEI,MAAOpB,MAAK2nB,cAAczlB,WAG9B,SAAUA,GACFA,IAAUlC,KAAKkC,QACflC,KAAK2nB,cAAczlB,MAAQA,EAC3BlC,KAAKmf,aAAanc,yCA2C1BikB,EAAJ7lB,UAAAgB,SAAI,WAAA,GAAJrC,GAAAC,IACQ2Q,YAAW,WAAM,MAAA5Q,GAAKioB,QAAQ,GAC9BhoB,KAAKwnB,WAAaxlB,SAASmU,iBAAiBnW,KAAK4C,WAAWhB,eAAyB,WAAG,GAEhG,IAAcumB,GAAanmB,SAASmU,iBAAiBnW,KAAK4C,WAAWhB,eAAyB,WAAG,IACnFwmB,EAAgBpmB,SAASmU,iBAAiBnW,KAAK4C,WAAWhB,eAA4B,cAAG,GAG/F5B,MAAK0nB,UAA8B,EAAlB1nB,KAAKwnB,WAAiBW,EAAaC,EACpDpoB,KAAKynB,eAAiBznB,KAAKwnB,YAG/BP,EAAJ7lB,UAAAyP,YAAI,WACI7Q,KAAKmf,aAAanc,QAGtBikB,EAAJ7lB,UAAAkB,YAAI,WACItC,KAAKmf,aAAalc,WAClBjD,KAAK+nB,iBAAiBjT,eAG1BmS,EAAJ7lB,UAAAinB,UAAI,WACQroB,KAAK8mB,WAIL9mB,KAAKsoB,mBAMTtoB,KAAKuoB,yBAITtB,EAAJ7lB,UAAA4mB,KAAI,WAAA,GAAJjoB,GAAAC,IACaA,MAAKmnB,SAIVnnB,KAAKgS,OAAOgC,kBAAkB,WACtC,GAAkBwU,GAAWzoB,EAAK6C,WAAWhB,cAE3B6mB,EAAczmB,SAAS0mB,OAAOvS,iBAAiBqS,GAAgB,OAAG,IAClEG,EAAOF,EAAcD,EAAS/mB,YAEpC+mB,GAAS1mB,MAAMohB,OAAS,CAEpC,IAAkBA,GAAS3B,KAAKqH,IAAI7oB,EAAK2nB,UAAWc,EAASK,aAAeF,EAAO5oB,EAAK0nB,eAC5Ee,GAAS1mB,MAAMohB,OAAYA,EAAvC,QAKI+D,EAAJ7lB,UAAAiX,MAAI,WACIrY,KAAK4C,WAAWhB,cAAcyW,SAIlC4O,EAAJ7lB,UAAA0nB,aAAI,SAAaC,GACLA,IAAc/oB,KAAKonB,UACnBpnB,KAAKonB,QAAU2B,EACf/oB,KAAKmf,aAAanc,SAQ1B7C,OAAJ2M,eAAQma,EAAR7lB,UAAA,aAAI,WACI,OAAQpB,KAAK4C,WAAWhB,cAAcM,QAAUlC,KAAKgpB,8CAOzD/B,EAAJ7lB,UAAA6nB,iBAAI,WACIjpB,KAAKqY,SAIC4O,EAAd7lB,UAAAmnB,sBAAI,WACJ,GAAcW,GAAWlpB,KAAKkC,KAElBlC,MAAK4nB,sBAAwBsB,IAC7BlpB,KAAK4nB,oBAAsBsB,EAC3BlpB,KAAKmf,aAAanc,SAKhBikB,EAAd7lB,UAAA4nB,WAAI,WAEJ,GAAcG,GAAYnpB,KAAK4C,WAAwB,cAAyBumB,QAExE,OAAOA,IAAYA,EAASC,UAGxBnC,EAAZ7lB,UAAAioB,cAAI,WACJ,GAAcb,GAAWxoB,KAAK4C,WAAWhB,cAC3B6mB,EAAczmB,SAAS0mB,OAAOvS,iBAAiBqS,GAAgB,OAAEc,WAAY,IAC7EX,EAAOF,EAAcD,EAAS/mB,YAEpC,OAAO8f,MAAKqH,IAAI5oB,KAAK0nB,UAAWc,EAASK,aAAeF,mBAjQhEtiB,KAACC,EAAAA,UAADC,OACIC,SAAU,uBACVC,SAAU,aACVC,MACI8C,MAAO,cACP+f,gCAAiC,WACjC3f,YAAa,KACb4f,qBAAsB,cACtBC,sBAAuB,aACvBC,aAAc,WACdC,aAAc,WACdxF,SAAU,sBACVD,UAAW,sBAEfzb,YAAc8Q,QAASiL,GAAoB/K,YAAawN,4CAjD5D5gB,KAAwBS,EAAAA,aAIxBT,KAA6B0e,EAAAA,UAA7B5d,aAAAd,KA6JiBkB,EAAAA,WA7JjBlB,KA6J6B2e,EAAAA,SA7J7B3e,KAAwCue,EAAAA,OAAxCzd,aAAAd,KA8JiBkB,EAAAA,aA9JjBlB,KAASwe,EAAAA,mBAAT1d,aAAAd,KA+JiBkB,EAAAA,aA1JjBlB,KAAIse,KA4JJte,SAAAa,GAAAC,aAAAd,KAAiBkB,EAAAA,WAAjBlB,KAA6B2e,EAAAA,OAA7B3e,KAAqCe,EAAAA,OAArCb,MAA4CkgB,QAnK5CpgB,KAA0BU,EAAAA,4BAoD1BogB,UAAA9gB,KAAKqB,EAAAA,QAGLme,oBAAAxf,KAAKqB,EAAAA,QAwBL7D,WAAAwC,KAAKqB,EAAAA,QAsBLuD,KAAA5E,KAAKqB,EAAAA,QAaLoe,cAAAzf,KAAKqB,EAAAA,QAMLqe,WAAA1f,KAAKqB,EAAAA,QAaLxF,QAAAmE,KAAKqB,EAAAA,SA+JLuf,GAnPgCF,IC3ChC6C,GAAA,WAAA,QAAAA,MAMA,sBANAvjB,KAAC8B,EAAAA,SAAD5B,OACI+B,SAAUC,EAAAA,aAAciS,EAAAA,WAAY3I,EAAgBgY,EAAAA,aACpDxhB,SAAU4e,IACV7e,cAAe6e,QAGnB2C,SbdIE,MAAJ,EACIC,QAAJ,EACIC,QAAJ,kFAIIC,OAAS,WACTC,KAAO,SAGEC,IAAbrkB,MACIA,GAACskB,GAAYH,QAAS,WACtBnkB,GAACskB,GAAYF,MAAO,QACxBpkB,IAEaukB,GAAmCD,GAAYF,KAE/CI,GACT,GAAIC,QAAO,yEACFC,GAAuB,qDACvBC,GAAoB,mCcmC7BC,GAAkC,EAEhCC,GAA2D,GAAIjc,SAC/Dkc,GAAsE,GAAIlc,SAC1Emc,GAAoB,SAACC,GAC3B,GAAUC,GAA2BH,GAAkCI,IAAIF,OAEtC5jB,KAA7B6jB,GAA0CA,KAGlDE,GAAA,WACI,QAAJA,GACetE,EACAC,EACAC,EACAC,GAHA9mB,KAAf2mB,yBAAeA,EACA3mB,KAAf4mB,WAAeA,EACA5mB,KAAf6mB,gBAAeA,EACA7mB,KAAf8mB,UAAeA,EACf,MAAAmE,MAGaC,GAEiBlE,EAAgBiE,IA2B9CE,IACgBC,SAAhB,SAAyBN,OAGmC5jB,KAApClH,KAAKqrB,6BACLT,GAAkClnB,IAAIonB,EAAG9qB,KAAKqrB,4BAC9CrrB,KAAKqrB,+BAA6BnkB,GAE1D,IAA0BokB,GAAYX,GAAeK,IAAIF,EAErC,OAAOQ,GAAYA,EAAUR,GAAK,MAEtCS,0BAAA,SAA0BrS,GACtBlZ,KAAKqrB,2BAA6BnS,IAtCtDsS,GAAA,SAAAtU,GAmLI,QAAJsU,GAAiC5oB,EACUkkB,EACfF,EACAC,EACZF,EACqDO,EACpCjV,GAN7B,GAAJlS,GAOQmX,EAPRI,KAAAtX,KAOc2mB,EAA0BC,EAAYC,EAAiBC,IAPrE9mB,WAAiCD,GAAjC6C,WAAiCA,EACU7C,EAA3C+mB,UAA2CA,EAKV/mB,EAAjCkS,SAAiCA,EAxH7BlS,EAAJqnB,SAAuB,EAMVrnB,EAAbof,aAA2C,GAAIpU,GAAAA,QAM3ChL,EAAJsnB,YAA0B,gBAwFLtnB,EAArBunB,IAA2B,iBAAiBoD,KAQhC3qB,EAAZ0rB,SAAsC,KAE1B1rB,EAAZ2rB,SAAsC,KAe9B3rB,EAAKmnB,mBAAqBA,GAAsBnnB,EAAK6C,WAAWhB,cAEhE7B,EAAK6nB,oBAAsB7nB,EAAKmC,MAChCnC,EAAKggB,SAAW4L,EAAAA,KAGhB5rB,EAAKkL,GAAKlL,EAAKkL,GAEflL,EAAK+lB,YAAcqE,GAAwBE,IAGvCtqB,EAAK+mB,YAAa/mB,EAAK+mB,UAAUa,cAAgB5nB,GAIrD4qB,GAAejnB,IACG3D,EAAK+mB,UAAiB,QACpC8E,EAAAA,WAAWC,SACP,WAAM,MAAA9rB,GAAK+rB,kBACX,WAAM,MAAA/rB,GAAKgsB,oBACX,WAAM,MAAAhsB,GAAKisB,yBA6c3B,MA7mBkC7T,GAAlCqT,EAAAtU,GA6BI/W,OAAJ2M,eACQ0e,EADRpqB,UAAA,gBAAI,WAEI,MAAIpB,MAAK8mB,WAAyC,OAA5B9mB,KAAK8mB,UAAUjjB,SAA4B7D,KAAK8mB,UAAUjjB,SAEzE7D,KAAKmS,eAGhB,SAAajQ,GACTlC,KAAKmS,UAAYM,EAAAA,sBAAsBvQ,GAInClC,KAAKonB,UACLpnB,KAAKonB,SAAU,GAGnBpnB,KAAKmf,aAAanc,wCAGtB7C,OAAJ2M,eACQ0e,EADRpqB,UAAA,UAAI,WACmB,MAAOpB,MAAKkoB,SAE/B,SAAOhmB,GAAiBlC,KAAKkoB,IAAMhmB,GAASlC,KAAKsnB,qCAajDnnB,OAAJ2M,eACQ0e,EADRpqB,UAAA,gBAAI,WAC0B,MAAOpB,MAAKunB,eAEtC,SAAarlB,GAAkBlC,KAAKunB,UAAY9U,EAAAA,sBAAsBvQ,oCAMtE/B,OAAJ2M,eACQ0e,EADRpqB,UAAA,aAAI,WACsB,MAAOpB,MAAKknB,mBAAmBhlB,WAErD,SAAUA,GACFA,IAAUlC,KAAKkC,QACflC,KAAKknB,mBAAmBhlB,MAAQA,EAChClC,KAAKisB,sDAIb9rB,OAAJ2M,eACQ0e,EADRpqB,UAAA,kBAAI,WACgC,MAAOpB,MAAKksB,iBAE5C,SAAeC,GACXnsB,KAAKksB,YAAc/rB,OACdC,KAAKgqB,IACLxK,IAAI,SAACwM,GAAkB,MAAAhC,IAAYgC,KACnChc,QAAQ+b,IAAgB,EAAIA,EAAc9B,GAE/CQ,GAAgC7qB,KAAK8mB,UAAiB,SACtD9mB,KAAK8lB,YAAcqE,GAAwBnqB,KAAKksB,8CAGpD/rB,OAAJ2M,eACQ0e,EADRpqB,UAAA,eAAI,WAC+B,MAAOpB,MAAKyrB,cAE3C,SAAYY,GACRrsB,KAAKyrB,SAAWY,EAChBrsB,KAAKssB,YAA2B,OAAbD,EAAoBrsB,KAAKusB,sBAAsBF,OAAYnlB,GAC9E2jB,GAAgC7qB,KAAK8mB,UAAiB,0CAG1D3mB,OAAJ2M,eACQ0e,EADRpqB,UAAA,eAAI,WAC+B,MAAOpB,MAAK0rB,cAE3C,SAAYc,GACRxsB,KAAK0rB,SAAWc,EAChBxsB,KAAKysB,YAA2B,OAAbD,EAAoBxsB,KAAKusB,sBAAsBC,OAAYtlB,GAC9E2jB,GAAgC7qB,KAAK8mB,UAAiB,0CAsD1D0E,EAAJpqB,UAAAyP,YAAI,WACI7Q,KAAKmf,aAAanc,QAGtBwoB,EAAJpqB,UAAAkB,YAAI,WACItC,KAAKmf,aAAalc,YAGtBuoB,EAAJpqB,UAAAinB,UAAI,WACQroB,KAAK8mB,WAIL9mB,KAAKsoB,mBAMTtoB,KAAKuoB,yBAGTiD,EAAJpqB,UAAAiX,MAAI,WACIrY,KAAK4C,WAAWhB,cAAcyW,SAGlCmT,EAAJpqB,UAAA0nB,aAAI,SAAaC,GACLA,IAAc/oB,KAAKonB,UACnBpnB,KAAKonB,QAAU2B,EACf/oB,KAAK0sB,YACL1sB,KAAKmf,aAAanc,SAI1BwoB,EAAJpqB,UAAAurB,OAAI,WACI3sB,KAAKisB,oBACLjsB,KAAK8oB,cAAa,IAGtB0C,EAAJpqB,UAAAwrB,QAAI,SAAQpsB,GACJA,EAAOqsB,gBACf,IAAcC,GAA6BtsB,EAAOusB,cAAcC,QAAQ,YAET9lB,KAAnDlH,KAAKusB,sBAAsBO,KAE/B9sB,KAAK4C,WAAWhB,cAAcM,MAAQ4qB,EACtC9sB,KAAKitB,YAGTzB,EAAJpqB,UAAA6rB,QAAI,WACJ,GAAcC,GAA6BltB,KAAK4C,WAAWhB,cAAcurB,eAC3DC,EAA2BptB,KAAK4C,WAAWhB,cAAcyrB,aAC3DC,GAAmC,EAEjCxnB,EAAd9F,KAAAutB,mBAAAvtB,KAAA4C,WAAAhB,cAAAM,OACYsrB,EADZ1nB,EAAA0nB,UAEYC,EAFZ3nB,EAAA2nB,gBAGYC,EAHZ5nB,EAAA4nB,yBAOYF,IACAA,EAAU,IACc,IAAxBA,EAAU,GAAG7e,OACb2e,GAA0B,EACnBG,GACuB,IAA9BA,EAAgB,GAAG9e,QACnB8e,EAAgB,IACc,IAA9BA,EAAgB,GAAG9e,OACnB2e,GAA0B,EACnBI,GACiC,IAAxCA,EAA0B,GAAG/e,QACW,IAAxC+e,EAA0B,GAAG/e,QAC7B+e,EAA0B,IACc,IAAxCA,EAA0B,GAAG/e,SAC7B2e,GAA0B,GAI9BttB,KAAKisB,mBAAoB0B,qBAAsBL,IAE/CttB,KAAK4C,WAAWhB,cAAcurB,eAAiBD,EAC/CltB,KAAK4C,WAAWhB,cAAcyrB,aAAeD,EAEzCE,GAAqD,OAA1BttB,KAAK8mB,UAAU8G,QAC1C5tB,KAAK6tB,sCAAsCX,EAAqB,IAQxE/sB,OAAJ2M,eAAQ0e,EAARpqB,UAAA,aAAI,WACI,OAAQpB,KAAK4C,WAAWhB,cAAcM,QAAUlC,KAAKgpB,8CAOzDwC,EAAJpqB,UAAA6nB,iBAAI,WACIjpB,KAAKqY,SAGTmT,EAAJpqB,UAAA4X,WAAI,SAAW9W,GACO,OAAVA,GACAlC,KAAKiS,SAAS6b,YAAY9tB,KAAK4C,WAAWhB,cACtC,QACA5B,KAAK+tB,sBAAsB7rB,EAAOlC,KAAKguB,aAG/ChuB,KAAK+f,SAAS7d,GAAS,MACvBlC,KAAKisB,qBAGTT,EAAJpqB,UAAA6sB,UAAI,SAAUtrB,GAEd,GAAcU,GAAkBrD,KAAKkuB,WAAWvrB,EdhYR,ackY5BU,GdjY8B,cciYEA,GAChCrD,KAAKmuB,sBAAsBxrB,GdjYG,ccmY9BU,GdlY+B,eckYGA,GAClCrD,KAAKouB,gCAAgCzrB,IAI7C6oB,EAAJpqB,UAAA6X,iBAAI,SAAiBC,GACblZ,KAAK+f,SAAW7G,GAGpBsS,EAAJpqB,UAAA+X,kBAAI,SAAkBD,GACdlZ,KAAK0sB,UAAYxT,GAIbsS,EAAZpqB,UAAAmnB,sBAAI,WACJ,GAAcW,GAAWlpB,KAAKkC,KAElBlC,MAAK4nB,sBAAwBsB,IAC7BlpB,KAAK4nB,oBAAsBsB,EAC3BlpB,KAAKmf,aAAanc,SAKlBwoB,EAAZpqB,UAAA4nB,WAAI,WACJ,GAAcG,GAA+BnpB,KAAK4C,WAAwB,cAAEumB,QAEpE,OAAOA,IAAYA,EAASC,UAGxBoC,EAAZpqB,UAAA6qB,kBAAI,SAA0BoC,OAA9B,KAAAA,IAA8BA,KAId,IAAAC,GAAhBD,EAAAC,YAA6BxoB,EAA7BuoB,EAAAV,qBAA6BA,MAA7B,KAAA7nB,GAAAA,EACcyoB,EAAgCD,GAClCtuB,KAAKusB,sBAAsBvsB,KAAK4C,WAAWhB,cAAcM,MAG7D,IAFAlC,KAAKwuB,qBAAuBD,EAExBZ,OAAwCzmB,KAAhBqnB,EAA2B,CAC/D,GAAkBpB,GAAyBntB,KAAK4C,WAAWhB,cAAcurB,eACvDE,EAAuBrtB,KAAK4C,WAAWhB,cAAcyrB,YAC3DrtB,MAAKiS,SAAS6b,YACV9tB,KAAK4C,WAAWhB,cAChB,QACA5B,KAAK+tB,sBAAsBQ,EAAavuB,KAAKguB,aACjDhuB,KAAK4C,WAAWhB,cAAcurB,eAAiBA,EAC/CntB,KAAK4C,WAAWhB,cAAcyrB,aAAeA,EAGlCrtB,KAAK8mB,UAAiB,QAAE2H,wBAC/C,IAAc/iB,GAAmC,OAA1B1L,KAAK8mB,UAAU8G,YAAmC1mB,KAAhBqnB,EAA4BA,EAAc,IAC3FvuB,MAAK+f,SAASrU,GACd1L,KAAKmf,aAAanc,QAGdwoB,EAAZpqB,UAAA+sB,sBAAI,SAA8BxrB,GAC1BA,EAAMkqB,gBAEd,IAAYyB,GAAgCtuB,KAAKwuB,oBACzC,QAAoBtnB,KAAhBonB,EAA2B,CACvC,GAAkBI,GAAY1uB,KAAK4C,WAAWhB,cAAcurB,eAE1CwB,EAAmB3uB,KAAK4uB,mBAAmBF,GAC5CC,iBACCtrB,EAAkBrD,KAAKkuB,WAAWvrB,EdtcZ,acucxBU,IAAgCirB,EAActuB,KAAK6uB,cAAcP,EAAaK,IdtcpD,ccuc1BtrB,IAAkCirB,EAActuB,KAAK8uB,cAAcR,EAAaK,IACpF3uB,KAAKisB,mBAAoBqC,YAArCA,IACYtuB,KAAK6tB,sCAAsCa,KAI3ClD,EAAZpqB,UAAAgtB,gCAAI,SAAwCzrB,GAC5C,GAAc2rB,GAAgCtuB,KAAKwuB,qBACrCnrB,EAAkBrD,KAAKkuB,WAAWvrB,EAExC,QAAoBuE,KAAhBonB,EAA2B,CACvC,GAAgBI,GAAoB1uB,KAAK4C,WAAWhB,cAAcurB,cdjdxB,eckd1B9pB,EACAqrB,EAAY1uB,KAAK+uB,qCAAqCL,EAAW1uB,KAAK4C,WAAWhB,cAAcM,OdldpE,ecmdpBmB,IACPqrB,EAAY1uB,KAAKgvB,qCAAqCN,EAAW1uB,KAAK4C,WAAWhB,cAAcM,QAEnGlC,KAAK6tB,sCAAsCa,KAO3ClD,EAAZpqB,UAAA8sB,WAAI,SAAmBvrB,GACf,MAAOA,GAAMssB,MAAQtsB,EAAMpC,KAGvBirB,EAAZpqB,UAAAysB,sCAAI,SAA8Ca,GAA9C,GAAJ3uB,GAAAC,IACQ2Q,YAAW,WACnB,GAAkBue,GAAgBnvB,EAAK6uB,mBAAmBF,EAC9C3uB,GAAK6C,WAAWhB,cAAcurB,eAAiB+B,EAAcC,oBAC7DpvB,EAAK6C,WAAWhB,cAAcyrB,aAAe6B,EAAcE,qBAI3D5D,EAAZpqB,UAAAytB,cAAI,SAAsBQ,EACAC,OAA1B,KAAAA,IAA0BA,EAA6BC,GAAUvF,QACrD,IAAAlkB,GAAZ9F,KAAAwvB,sBAAAH,GAAcvF,EAAdhkB,EAAAgkB,MAAqBC,EAArBjkB,EAAAikB,QAA8BC,EAA9BlkB,EAAAkkB,OAEQ,QAAQsF,GACJ,IAAKC,IAAUzF,MACXA,GACA,MACJ,KAAKyF,IAAUxF,QACXA,GACA,MACJ,KAAKwF,IAAUvF,QACXA,IAWR,MANIA,GdlgB8B,KckgBEA,EAAU,GAE1CD,EdngB4B,KcmgBEA,EAAU,GAExCD,EdpgByB,KcogBAA,EAAQ,GAEvB9pB,KAAKyvB,sBAAsB3F,EAAOC,EAASC,IAMrDwB,EAAZpqB,UAAA0tB,cAAI,SAAsBO,EACAK,OAA1B,KAAAA,IAA0BA,EAA6BH,GAAUvF,QACrD,IAAAlkB,GAAZ9F,KAAAwvB,sBAAAH,GAAcvF,EAAdhkB,EAAAgkB,MAAqBC,EAArBjkB,EAAAikB,QAA8BC,EAA9BlkB,EAAAkkB,OAEQ,QAAQ0F,GACJ,IAAKH,IAAUzF,MACXA,GACA,MACJ,KAAKyF,IAAUxF,QACXA,GACA,MACJ,KAAKwF,IAAUvF,QACXA,IAWR,MANIA,GAAU,IAAKA,Ed/hBe,IciiB9BD,EAAU,IAAKA,EdhiBa,IckiB5BD,EAAQ,IAAKA,EdjiBY,IcmiBf9pB,KAAKyvB,sBAAsB3F,EAAOC,EAASC,IAGrDwB,EAAZpqB,UAAA2tB,qCAAI,SAA6CL,EAAmBiB,GAC5D,MAAqB,KAAdjB,EAAkBiB,EAAWhhB,OAAS+f,EAAY,GAGrDlD,EAAZpqB,UAAA4tB,qCAAI,SAA6CN,EACAiB,EACAC,OAAjD,KAAAA,IAAiDA,EAAjD,IACA,IAAcC,GAAyBF,EAAWvf,QAAQwf,EAAalB,EAE/D,YAA0BxnB,KAAnB2oB,EAA+BA,EAAiB,EAAI,GAOvDrE,EAAZpqB,UAAAwtB,mBAAI,SAA2BkB,GAK/B,GACYnB,GACAQ,EACAC,EAHEO,EAAqB3vB,KAAK4C,WAAWhB,cAAcM,MAKnD6tB,EAAeJ,EAAWvf,QAAQ,IAAK4f,GACvCC,GAAiC,IAAlBF,EAAsBJ,EAAWvf,QAAQ,IAAK2f,EAAe,IAAM,CAgBxF,QAdsB,IAAlBE,GAAuBH,EAAiBG,GACxCtB,EAAmBY,GAAUvF,QAC7BmF,EAAsBc,EAAe,EACrCb,EAAoBO,EAAWhhB,SACN,IAAlBohB,GAAuBD,EAAiBC,GAC/CpB,EAAmBY,GAAUxF,QAC7BoF,EAAsBY,EAAe,EACrCX,EAAoBa,GAAgB,EAAIA,EAAeN,EAAWhhB,SAElEggB,EAAmBY,GAAUzF,MAC7BqF,EAde,EAefC,GAAsC,IAAlBW,EAAsBA,EAAeJ,EAAWhhB,SAIpEggB,iBAAZA,EACYQ,oBAAZA,EACYC,kBAAZA,IAOY5D,EAAZpqB,UAAA2sB,sBAAI,SAA8BmC,EACAlC,OAAlC,KAAAA,IAAkCA,EAAlC3D,UACcP,EAAgB9pB,KAAKmwB,yBAAyBD,EAAQE,YACtDrG,EAAkB/pB,KAAKmwB,yBAAyBD,EAAQG,cACxDrG,EAAkBhqB,KAAKmwB,yBAAyBD,EAAQI,aAO9D,QALRxqB,KACYA,EAACskB,GAAYF,MAAO,WAAM,MAAGJ,GAAzC,IAAkDC,GACtCjkB,EAACskB,GAAYH,QAAS,WAAM,MAAGH,GAA3C,IAAoDC,EAApD,IAA+DC,GAC/DlkB,GAEuCkoB,MAG3BxC,EAAZpqB,UAAAmsB,mBAAI,SAA2BoC,GAK/B,GAAcjC,GAA4BiC,EAAWY,MAAMjG,IAC7CmD,EAAkBkC,EAAWY,MAAM/F,GAGzC,QACIgD,UAHcmC,EAAWY,MAAM9F,IAI/BgD,gBAAZA,EACYC,0BAAZA,IAOYlC,EAAZpqB,UAAAquB,sBAAI,SAA8B3F,EAAeC,EAAiBC,GAC1D,WADR,KAAAA,IAAkEA,EAAlE,GACehqB,KAAKusB,sBAAyBzC,EAA7C,IAAsDC,EAAtD,IAAiEC,IAGrDwB,EAAZpqB,UAAAmrB,sBAAI,SAA8BoD,GAE1B,OAAmBzoB,KAAfyoB,EAAJ,CAEM,GAAA7pB,GAAd9F,KAAAutB,mBAAAoC,GACYnC,EADZ1nB,EAAA0nB,UAEYC,EAFZ3nB,EAAA2nB,gBAGYC,EAHZ5nB,EAAA4nB,yBAMQ,IAAiC,IAA7BiC,EAAWa,OAAO7hB,SACJ,OAAd6e,GAA0C,OAApBC,GAA0D,OAA9BC,GADtD,CAMR,GAAY5D,GAAgB,EAChBC,EAAkB,EAClBC,EAAkB,CAElBwD,GACA1D,EAAQ2G,OAAOjD,EAAU,IAClBC,GACP3D,EAAQ2G,OAAOhD,EAAgB,IAC/B1D,EAAU0G,OAAOhD,EAAgB,KAC1BC,IACP5D,EAAQ2G,OAAO/C,EAA0B,IACzC3D,EAAU0G,OAAO/C,EAA0B,IAC3C1D,EAAUyG,OAAO/C,EAA0B,IAGvD,IAAcgD,GAAmB,GAAIC,MAAK,KAAM,EAAG,EAAG7G,EAAOC,EAASC,EAG9D,OAAO4G,OAAMF,EAAWG,eAAa3pB,GAAYwpB,KAG7ClF,EAAZpqB,UAAA+uB,yBAAI,SAAiCW,GAG7B,MAAOA,GAFqC,EAEC,GAAGA,EAAU,IAAIA,GAG1DtF,EAAZpqB,UAAAouB,sBAAI,SAA8BH,GAC1B,OACIvF,MAAOuF,EAAQe,WACfrG,QAASsF,EAAQgB,aACjBrG,QAASqF,EAAQiB,eAIjB9E,EAAZpqB,UAAA0qB,eAAI,WACI,WAAqC5kB,KAA9BlH,KAAKwuB,sBACNuC,mBAAqBC,KAAMhxB,KAAK4C,WAAWhB,cAAcM,QAC3D,MAGAspB,EAAZpqB,UAAA2qB,iBAAI,WAEI,WAAkC7kB,KAA9BlH,KAAKwuB,0BACgBtnB,KAArBlH,KAAKssB,aACLtsB,KAAKixB,mBAAmBjxB,KAAKwuB,uBACpB0C,8BAAgCF,KAAMhxB,KAAK4C,WAAWhB,cAAcM,QAG1E,MAGHspB,EAAZpqB,UAAA4qB,iBAAI,WACI,WAAkC9kB,KAA9BlH,KAAKwuB,0BACgBtnB,KAArBlH,KAAKysB,aACLzsB,KAAKmxB,qBAAqBnxB,KAAKwuB,uBACtB4C,+BAAiCJ,KAAMhxB,KAAK4C,WAAWhB,cAAcM,QAG3E,MAGHspB,EAAZpqB,UAAA6vB,mBAAI,SAA2BI,GACvB,MAAOA,GAAcR,UAAoB7wB,KAAgB,YAAE6wB,UAAY,GAGnErF,EAAZpqB,UAAA+vB,qBAAI,SAA6BE,GACzB,MAAOA,GAAcR,UAAoB7wB,KAAgB,YAAE6wB,WAAa,kBA7pBhFxqB,KAACC,EAAAA,UAADC,OACIC,SAAU,sBACVC,SAAU,oBACVC,MACI8C,MAAO,yBAGPI,YAAa,KACb4f,qBAAsB,cACtBE,aAAc,WACdC,aAAc,WACd2H,qBAAsB,aACtBC,kBAAmB,UACnBC,kBAAmB,UACnBC,eAAgB,QAChBhI,sBAAuB,aACvBtF,SAAU,WACVD,UAAW,qBACXwN,UAAW,YACXC,UAAW,kBACXhrB,YAAa,qBAEjB8B,YAEQ8Q,QAASqY,EAAAA,cACTC,SAAZ1G,GAgBYxR,OAAO,IAGPJ,QAASiL,GACT/K,YAAaC,EAAAA,WAAW,WAAM,MAAA8R,+CAzH1CnlB,KAAIS,EAAAA,aAeJT,KAAI0e,EAAAA,UAAJ5d,aAAAd,KAiPiBkB,EAAAA,WAjPjBlB,KAiP6B2e,EAAAA,SAhP7B3e,KAAIue,EAAAA,OAAJzd,aAAAd,KAiPiBkB,EAAAA,aApPjBlB,KAAIwe,EAAAA,mBAAJ1d,aAAAd,KAqPiBkB,EAAAA,aAzOjBlB,KAAIse,KA2OJte,SAAAa,GAAAC,aAAAd,KAAiBkB,EAAAA,WAAjBlB,KAA6B2e,EAAAA,OAA7B3e,KAAqCe,EAAAA,OAArCb,MAA4CurB,QA7P5CzrB,KAAI6O,EAAAA,+BAgIJ2Q,oBAAAxf,KAAKqB,EAAAA,QAoBL7D,WAAAwC,KAAKqB,EAAAA,QAmBLuD,KAAA5E,KAAKqB,EAAAA,QAULoe,cAAAzf,KAAKqB,EAAAA,QAMLqe,WAAA1f,KAAKqB,EAAAA,QASLxF,QAAAmE,KAAKqB,EAAAA,QAULsmB,aAAA3nB,KAAKqB,EAAAA,MAALnB,MAAW,iBAaXwrB,UAAA1rB,KAAKqB,EAAAA,MAALnB,MAAW,cASXyrB,UAAA3rB,KAAKqB,EAAAA,MAALnB,MAAW,eAogBXilB,GA7mBkCN,ICvHlC+G,GAAA,WAAA,QAAAA,MAciC,sBAdjC5rB,KAAC8B,EAAAA,SAAD5B,OACI+B,SACIC,EAAAA,aACAiS,EAAAA,WACA0X,EAAAA,eACArI,EAAAA,aAEJzhB,cACIojB,IAEJnjB,SACImjB,QAGRyG,KCpBaljB,GAAoB,GAAIvC,GAAAA,eAAoB,uBAGrD2lB,MAAQ,QACRC,KAAO,OACPC,IAAM,MACNC,OAAS,wBAGb,QAAAroB,KAKIjK,KAAJ4E,KAAsB,KAElB5E,KAAJgF,SAAqCutB,GAAoBJ,MAGrDnyB,KAAJkP,aAA4B,EAGxBlP,KAAJkQ,kBAAiC,EAG7BlQ,KAAJ4L,cAA6B,EAGzB5L,KAAJuP,kBAA4C,GAC5C,MAAAtF,UC1BIuoB,KAAO,OACPjnB,QAAU,UACVE,OAAS,UAKAgnB,IACT7P,OAAS8P,GAAI,mBAAoBC,IAAK,kBACtC1Y,MAAQyY,GAAI,oBAAqBC,IAAK,kBACtC5wB,KAAO2wB,GAAI,oBAAqBC,IAAK,kBACrCxP,QAAUuP,GAAI,mBAAoBC,IAAK,mBAG9BrpB,IAGTC,eAAgByQ,EAAAA,QAAQ,SACpBtE,EAAAA,MAAM,SACF5T,EAAAA,OAAQ8wB,UAAW,qBACjBC,QAAUC,YAAaL,GAA8BF,GAAoBJ,OAAOO,MAEtFhd,EAAAA,MAAM,UACF5T,EAAAA,OAAQ8wB,UAAW,sBACjBC,QAAUE,aAAcN,GAA8BF,GAAoBJ,OAAOQ,OAEvFzY,EAAAA,WAAW,qCACPC,EAAAA,QAAQ,SAAS6Y,GAAgBC,oBACrC/Y,EAAAA,WAAW,kBACPC,EAAAA,QAAQ,SAAS6Y,GAAgBE,uBhBXhC/oB,GACT,GAAIqC,GAAAA,eAAwB,4BAEnBpC,GACT,GAAIoC,GAAAA,eAAwB,4BAEhChC,GAAA,SAAA0M,GAuCI,QAAJ1M,GACgB5H,EACAsd,EACDvU,EACkCwnB,EACAC,GAL7C,GAAJrzB,GAMQmX,EANRI,KAAAtX,OAAAA,WACgBD,GAAhB6C,WAAgBA,EACA7C,EAAhBmgB,kBAAgBA,EACDngB,EAAf4L,gBAAeA,EACkC5L,EAAjDozB,WAAiDA,EACApzB,EAAjDqzB,WAAiDA,EAf7CrzB,EAAJszB,eAAgD/nB,GAA0BknB,KAKtEzyB,EAAJmL,sBAA4B,GAAI4M,GAAAA,eAiFhC,MA9FmDK,GAAnD3N,EAAA0M,GA2BI1M,EAAJpJ,UAAAkB,YAAI,WACItC,KAAKuE,WAAY,GAIrBiG,EAAJpJ,UAAA4M,sBAAI,SAAyBjK,GAKrB,MAJA/D,MAAKszB,yBACLtzB,KAAKuzB,eACLvzB,KAAKwzB,gBAEExzB,KAAKqK,aAAa2D,sBAAsBjK,IAInDyG,EAAJpJ,UAAAsM,qBAAI,SAAwB3J,GAKpB,MAJA/D,MAAKszB,yBACLtzB,KAAKuzB,eACLvzB,KAAKwzB,gBAEExzB,KAAKqK,aAAaqD,qBAAqB3J,IAIlDyG,EAAJpJ,UAAA+M,MAAI,WACSnO,KAAKuE,YACNvE,KAAKqzB,eAAiB/nB,GAA0BC,QAChDvL,KAAKkgB,kBAAkBuT,kBAK/BjpB,EAAJpJ,UAAA+K,KAAI,WACSnM,KAAKuE,YACNvE,KAAKqzB,eAAiB/nB,GAA0BG,OAChDzL,KAAKkgB,kBAAkBjf,iBAI/BuJ,EAAJpJ,UAAAsyB,YAAI,SAAY/wB,GACR3C,KAAKkL,sBAAsBpG,KAAKnC,IAG5B6H,EAAZpJ,UAAAmyB,aAAI,WACJ,GAAcvuB,GAAgChF,KAAK2L,gBAAwB,QAEnE3L,MAAK2zB,oBACDb,YAAaL,GAA8BztB,GAAU0tB,GACrDK,aAAcN,GAA8BztB,GAAU2tB,MAItDnoB,EAAZpJ,UAAAoyB,cAAI,WACJ,GAAc7xB,GAAuB3B,KAAK4C,WAAWhB,cACvCoD,EAAgChF,KAAK2L,gBAAwB,QAEnEhK,GAAQiyB,UAAUC,IAAI,0BAA0B7uB,GAE5ChF,KAAKozB,YACLzxB,EAAQiyB,UAAUC,IAAI,oCAItBrpB,EAAZpJ,UAAAkyB,uBAAI,WACI,GAAItzB,KAAKqK,aAAasT,cAClB,KAAMtQ,OAAM,4FAhHxBhH,KAACgL,EAAAA,UAAD9K,OACIC,SAAU,yBACV8K,SAAJ,0NACI2D,QAAS;ymFACTlM,gBAAiBC,EAAAA,wBAAwBC,OACzCC,cAAeC,EAAAA,kBAAkBC,KACjCC,YAAaC,GAAsBC,gBACnC7C,MACI8C,MAAO,yBACPC,SAAU,KACVC,KAAM,SACNC,aAAc,OACdC,YAAa,KACbC,WAAY,2FAIZC,iBAAkB,sBAClBC,gBAAiB,+DA3CzB1D,KAAIS,EAAAA,aAHJT,KAAI2D,EAAAA,oBAmBJ3D,KAAS4D,KAoDT5D,KAAA6D,QAAA/C,aAAAd,KAASe,EAAAA,OAATb,MAAgB4D,QAChB9D,KAAA6D,QAAA/C,aAAAd,KAASe,EAAAA,OAATb,MAAgB6D,2BAlBhBC,eAAAhE,KAAKiE,EAAAA,UAAL/D,MAAegE,EAAAA,oBAyFfC,GA9FmDC,EAAAA,kBCzC/CC,GAAW,gBAiBX,QAAJC,GACeC,EACCvJ,EACDwJ,GAHX,GAAJ9K,GAAAC,IACeA,MAAf4K,kBAAeA,EACC5K,KAAhBqB,WAAgBA,EACDrB,KAAf6K,OAAeA,EAXM7K,KAArB8K,aAAoC,GAAIC,GAAAA,QAGnB/K,KAArBgL,aAAoC,GAAID,GAAAA,QAUhC/K,KAAKiL,GAAKjL,KAAK6K,OAAOI,IAAM,gBAAgBP,KAC5C1K,KAAK4K,kBAAkBK,GAAKjL,KAAKiL,GAGjCL,EAAkBM,sBAAsB7G,KACpC8G,EAAAA,OACI,SAACxI,GAAU,MAAoB,SAApBA,EAAMyI,WAAwBzI,EAAM0I,UAAYC,GAA0BC,UAEzFC,EAAAA,KAAK,IACPhH,UAAU,WACRzE,EAAKiL,aAAahI,OAClBjD,EAAKiL,aAAa/H,aAItB2H,EAAkBM,sBAAsB7G,KACpC8G,EAAAA,OACI,SAACxI,GAAU,MAAoB,SAApBA,EAAMyI,WAAwBzI,EAAM0I,UAAYC,GAA0BG,SAEzFD,EAAAA,KAAK,IACPhH,UAAU,WACRnD,EAAWkB,UACXxC,EAAK+K,aAAa9H,KAAKjD,EAAK2L,QAC5B3L,EAAK+K,aAAa7H,aAGjB2H,EAAkBe,gBAAgBC,cACnCC,EAAAA,MACIxK,EAAWyK,gBACXzK,EAAW0K,gBAAgB1H,KAGvB8G,EAAAA,OAAO,SAACxI,GAAU,MAAAA,GAAMU,UAAYC,EAAAA,WAE1CkB,UAAU,WAAM,MAAAzE,GAAKiM,UA0BnC,MAtBIrB,GAAJvJ,UAAA4K,MAAI,SAAMN,GAAN,GAAJ3L,GAAAC,IACaA,MAAK8K,aAAamB,SAEnBjM,KAAK4K,kBAAkBM,sBAAsB7G,KACzC8G,EAAAA,OAAO,SAACxI,GAAU,MAAoB,SAApBA,EAAMyI,YACxBI,EAAAA,KAAK,IACPhH,UAAU,WAAM,MAAAzE,GAAKsB,WAAW6K,mBAElClM,KAAK0L,OAASA,EACd1L,KAAK4K,kBAAkBuB,SAK/BxB,EAAJvJ,UAAAgL,YAAI,WACI,MAAOpM,MAAK8K,aAAauB,gBAI7B1B,EAAJvJ,UAAAkL,YAAI,WACI,MAAOtM,MAAKgL,aAAaqB,gBAEjC1B,KCtEa4B,GACT,GAAIC,GAAAA,eAAkC,gCAE1CC,GAAA,WAUI,QAAJA,GACgBrH,EACAsH,EACkDC,EAC1BC,GAHxB5M,KAAhBoF,QAAgBA,EACApF,KAAhB0M,SAAgBA,EACkD1M,KAAlE2M,eAAkEA,EAC1B3M,KAAxC4M,uBAAwCA,EAZ5B5M,KAAZ6M,+BAmKA,MAhKI1M,QAAJ2M,eAAQL,EAARrL,UAAA,wBAAI,WACI,MAAOpB,MAAK4M,uBAAyB5M,KAAK4M,uBAAuBG,iBAC7D/M,KAAK6M,6DAUbJ,EAAJrL,UAAAkB,YAAI,WAGItC,KAAKgN,gBAAgBhN,KAAK6M,8BAG9BJ,EAAJrL,UAAA6L,KAAI,SAAiBC,EACArC,GADjB,GAAJ9K,GAAAC,KAEcmN,EAAd5H,KACgBvF,KAAK2M,gBAAkB,GAAI1C,IAC5BY,EAGP,IAAIsC,EAAWlC,IAAMjL,KAAKoN,iBAAiBD,EAAWlC,IAClD,KAAMoC,OAAM,sBAAsBF,EAAWlC,GAAzD,qDAGA,IAAc5J,GAAarB,KAAKsB,cAAc6L,GAChCG,EAAYtN,KAAKuN,gBAAgBlM,EAAY8L,GAC7CK,EAAM,GAAI7C,IAAe2C,EAAWjM,EAAY8L,EAEtD,IAAID,YAAkCO,GAAAA,YAClCH,EAAUI,qBAAqB,GAAIC,GAAAA,eAAkBT,EAAsB,MACvEU,UAAWT,EAAWvI,KACtBiJ,aAAcL,SAEf,CACf,GAAkBd,GAAW1M,KAAK8N,eAAeX,EAAYK,EAAKF,GAChDvJ,EAAS,GAAIC,GAAAA,gBAAgBkJ,MAAwBhG,GAAWwF,GAChEqB,EAAaT,EAAUU,sBAAsBjK,EAEnDyJ,GAAIrJ,SAAW4J,EAAW5J,SAO9B,MAJAnE,MAAK+M,iBAAiBkB,KAAKT,GAC3BA,EAAIpB,cAAc5H,UAAU,WAAM,MAAAzE,GAAKmO,oBAAoBV,KAC3DF,EAAUa,QAEHX,GAMXf,EAAJrL,UAAAgN,SAAI,WACIpO,KAAKgN,gBAAgBhN,KAAK+M,mBAO9BN,EAAJrL,UAAAgM,iBAAI,SAAiBnC,GACb,MAAOjL,MAAK+M,iBAAiBsB,KAAK,SAACC,GAAc,MAAAA,GAAUrD,KAAOA,KAM9DwB,EAAZrL,UAAAmM,gBAAI,SAAwBlM,EAAwBwJ,GACpD,GAAc0D,GAAmCvO,KAAKwO,oCAAoC3D,GAE5E6B,EAAW,GAAI+B,GAAAA,eAAezO,KAAK0M,SAAU,GAAIgC,WAClDzE,GAAmBY,IACnBV,GAA0BoE,EAAiCI,QAAU,IACrEvE,GAA0BmE,EAAiCI,OAAS,MAGnEC,EAAkB,GAAI5K,GAAAA,gBAAgBwG,OAA+BtD,GAAWwF,EAGtF,OAFkErL,GAAW6C,OAAO0K,GAEhEzK,UAWhBsI,EAAZrL,UAAA0M,eAAI,SACIjD,EACAgD,EACAgB,GAMR,GAAcC,GAAkB,GAAIJ,WACvBlE,GAA+BqE,IAC/BE,GAAmBlE,EAAOjG,OAC1B+F,GAAgBkD,IAGrB,OAAO,IAAIY,GAAAA,eAAezO,KAAK0M,SAAUoC,IAOrCrC,EAAZrL,UAAAE,cAAI,SAAsBuJ,GAC1B,GAAcmE,GAAgB,GAAIC,GAAAA,eACtBC,YAAarE,EAAOqE,YACpBC,cAAenP,KAAKoP,iBAAiBvE,GACrCwE,SAAU,OACVC,WAAYzE,EAAO0E,kBACnBC,eAAgBxP,KAAKoF,QAAQqK,iBAAiBC,QAC9CC,iBAAkB3P,KAAKoF,QAAQJ,WAAW4K,UAG9C,OAAO5P,MAAKoF,QAAQyK,OAAOb,IAGvBvC,EAAZrL,UAAA4L,gBAAI,SAAwB8C,GACiBA,EAAWC,UAAxDC,QAEiCvN,QAAQ,SAACoL,GAC9BA,EAAa7B,WAIbS,EAAZrL,UAAAgO,iBAAI,SAAyBvE,GAC7B,GAAcoF,GACFjQ,KAAK+M,iBAAiBzM,KAAK,SAACuN,GADxC,MACyDA,GAAahD,OAAkB,aAEhF,OAAOA,GAAOqF,mBAAqBD,EAAiC,4BAChE,oCAGAxD,EAAZrL,UAAAoN,oCAAI,SAA4C3D,GACxC,MAAO7K,MAAK+M,iBAAiB5B,OAAO,SAAC0C,GAAiB,MAAAA,GAAahD,OAAO7F,WAAa6F,EAAO7F,YAO1FyH,EAAZrL,UAAA8M,oBAAI,SAA4BL,GAChC,GAAcsC,GAAQnQ,KAAK+M,iBAAiBqD,QAAQvC,EAExCsC,IAAS,GACTnQ,KAAK+M,iBAAiBsD,OAAOF,EAAO,mBAlKhD9J,KAACiK,EAAAA,iDAhBDjK,KAASQ,EAAAA,UALTR,KAAIkK,EAAAA,WAQJlK,KAA4B4D,GAA5B9C,aAAAd,KA0BSkB,EAAAA,WA1BTlB,KA0BqBe,EAAAA,OA1BrBb,MA0B4BgG,QAC5BlG,KAAgEoG,EAAhEtF,aAAAd,KAASkB,EAAAA,WAATlB,KAAqBmK,EAAAA,cAuJrB/D,KCtLAgE,GAAA,WAaI,QAAJA,GAC2B5C,EACXjL,EACA8N,GAFW1Q,KAA3B6N,aAA2BA,EACX7N,KAAhB4C,WAAgBA,EACA5C,KAAhB0Q,iBAAgBA,EAwBhB,MArBID,GAAJrP,UAAAgB,SAAI,WAAA,GAAJrC,GAAAC,IACaA,MAAK6N,cAON8C,WAAW,WACP5Q,EAAK8N,aAAe+C,EAAoB7Q,EAAK6C,WAAY7C,EAAK2Q,iBAAiB3D,qBAK3F0D,EAAJrP,UAAAyP,YAAI,SAAYC,GAChB,GAAcC,GAAgBD,EAAQE,kBAAoBF,EAAQG,eAEtDF,KACA/Q,KAAKiR,gBAAkBF,EAAcG,8BArCjD7K,KAACC,EAAAA,UAADC,OACIC,SAAU,uDACVE,MACIyK,UAAW,sCACX3H,MAAO,qBACPnD,KAAM,kDAZdA,KAASsE,GAATxD,aAAAd,KAqBSkB,EAAAA,aAvBTlB,KAA+BS,EAAAA,aAG/BT,KAASoG,wBAeTwE,kBAAA5K,KAAKqB,EAAAA,MAALnB,MAAW,wBAEXyK,mBAAA3K,KAAKqB,EAAAA,MAALnB,MAAW,uBA6BXkK,KAKAW,GAAA,WAAA,QAAAA,MAkBA,sBAlBA/K,KAACgL,EAAAA,UAAD9K,OACIC,SAAU,sBACV8K,SAAU,wVAUV5K,MACI8C,MAAO,6CAIf+H,YAAAlL,KAAKqB,EAAAA,SACL0J,KAKAI,GAAA,WAAA,QAAAA,MAM8B,sBAN9BnL,KAACC,EAAAA,UAADC,OACIC,SAAU,0DACVE,MACI8C,MAAO,yBAGfgI,KAKAC,GAAA,WAAA,QAAAA,MAMgC,sBANhCpL,KAACC,EAAAA,UAADC,OACIC,SAAU,gEACVE,MACI8C,MAAO,2BAGfiI,KAKAC,GAAA,WAAA,QAAAA,MAMiC,sBANjCrL,KAACC,EAAAA,UAADC,OACIC,SAAU,mEACVE,MACI8C,MAAO,4BAGfkI,KCvFAC,GAAA,WAAA,QAAAA,MA2BgC,sBA3BhCtL,KAAC8B,EAAAA,SAAD5B,OACI+B,SACIC,EAAAA,aACAC,EAAAA,cACAoJ,EAAAA,aACAC,EACAC,IAEJrJ,WAAYgE,IACZrE,cACIoC,GACAiG,GACAW,GACAI,GACAC,GACAC,IAEJ/I,iBAAkB6B,IAClBnC,SACImC,GACAiG,GACAW,GACAI,GACAC,GACAC,QAGRC,KCmBAI,GAAA,WAgDI,QAAJA,GAAwBnP,EACAoP,EACAC,GAFAjS,KAAxB4C,WAAwBA,EACA5C,KAAxBgS,OAAwBA,EACAhS,KAAxBiS,SAAwBA,EAzCXjS,KAAbkS,SAGYlS,KAAZmS,WAAiC,EACrBnS,KAAZoS,YAAkC,EAEtBpS,KAAZqS,YAAkC,EAEbrS,KAArBsS,oBAAmD,EAC9BtS,KAArBuS,aAkLA,MAhLIpS,QAAJ2M,eACQiF,EADR3Q,UAAA,iBAKI,WACI,MAAOpB,MAAKwS,gBANhB,SACc5M,GACV5F,KAAKwS,WAAa5M,mCAOtBzF,OAAJ2M,eACQiF,EADR3Q,UAAA,gBAKI,WACI,MAAOpB,MAAKmS,eANhB,SACatO,GACT7D,KAAKmS,UAAYM,EAAAA,sBAAsB5O,oCAO3C1D,OAAJ2M,eACQiF,EADR3Q,UAAA,kBAMI,WACI,MAAOpB,MAAKoS,iBAPhB,SACeM,GACnB,GAAcC,GAAOC,EAAAA,qBAAqBF,EAClC1S,MAAKoS,YAAcO,EAAO,EAAIA,EAAO3S,KAAK0S,4CAW9CX,EAAJ3Q,UAAAyR,QAAI,SAAQC,GACZ,GAAc3C,GAAgBnQ,KAAKkS,MAAMvD,OAC3BoE,EAAgB5C,EAAQnQ,KAAKsS,oBAC7BK,EAAeG,EAAKE,SAE1BF,GAAKG,SAASF,GAEd/S,KAAKkS,MAAMjE,MACP6E,KAAZA,EACY3C,MAAZA,EACY4C,MAAZA,EACYG,YAAaP,KAIrBZ,EAAJ3Q,UAAAgB,SAAI,WACSpC,KAAK4F,YACN5F,KAAK4F,UAAjB,cAGQ5F,KAAKmT,SAAb,iBAAmDnT,KAAKoT,aAAe,SAAW,QAG9ErB,EAAJ3Q,UAAAiS,YAAI,SAAY1Q,EAAmB2Q,EAAuBC,GAAtD,GAAJxT,GAAAC,IACQ,KAAIA,KAAK6D,SAAT,CAIR,GAAc2P,GAAWxT,KAAKkS,MAAMoB,GACtBG,EAAYzT,KAAKkS,MAAMqB,GAEvBG,GACF1N,EAAGrD,EAAMgR,QACT1N,EAAGtD,EAAMiR,QAGbJ,GAASN,YAAcM,EAASV,KAAKE,UACrCS,EAAUP,YAAcO,EAAUX,KAAKE,UAEvChT,KAAKkS,MAAMzP,QAAQ,SAACoR,GAC5B,GAAkBlB,GAAOkB,EAAKf,KAAKE,SACvBa,GAAKf,KAAKgB,cACVD,EAAKf,KAAKiB,QAAQpB,KAGtB3S,KAAKgS,OAAOgC,kBAAkB,WAC1BjU,EAAKwS,UAAUtE,KACXlO,EAAKkS,SAASgC,OACV,WACA,UACA,WAAM,MAAAlU,GAAKmU,iBAKvBlU,KAAKgS,OAAOgC,kBAAkB,WAC1BjU,EAAKwS,UAAUtE,KACXlO,EAAKkS,SAASgC,OACV,WACA,YACA,SAAC9Q,GAAkB,MAAApD,GAAKoU,YAAYhR,EAAGuQ,EAAYF,EAAUC,QAKzEzT,KAAKqS,YAAa,IAGtBN,EAAJ3Q,UAAAgT,WAAI,SAAWtB,GACf,GAAYuB,IAAyB,CAE7BrU,MAAKkS,MAAM5R,KAAK,SAACuT,EAAM1D,GACnB,MAAI0D,GAAKf,OAASA,IACduB,EAAgBlE,GAET,MAMQ,IAAnBkE,GAIJrU,KAAKkS,MAAM7B,OAAOgE,EAAe,IAG7BtC,EAAZ3Q,UAAAgS,WAAI,WACI,MAAR,aAAepT,KAAK4F,WAGRmM,EAAZ3Q,UAAA+S,YAAI,SAAoBxR,EAAmB+Q,EAAoBF,EAAiBC,GACxE,GAAKzT,KAAKqS,aAAcrS,KAAK6D,SAA7B,CAIR,GAAcyQ,IACFtO,EAAGrD,EAAMgR,QACT1N,EAAGtD,EAAMiR,SAGPW,EAASvU,KAAKoT,aACdM,EAAWzN,EAAIqO,EAASrO,EACxByN,EAAW1N,EAAIsO,EAAStO,EAExBwO,EAAkBhB,EAASN,YAAcqB,EACzCE,EAAmBhB,EAAUP,YAAcqB,EAE3CG,EAAkBlB,EAASV,KAAK6B,aAChCC,EAAmBnB,EAAUX,KAAK6B,YAExC,IAAIH,GAAmBE,GAAmBD,GAAoBG,EAAkB,CACxF,GAAkBC,GAAkBrB,EAASN,YAAcwB,CAE/ClB,GAASV,KAAKiB,QAAQW,GACtBjB,EAAUX,KAAKiB,QAAQN,EAAUP,YAAc2B,OACxCL,IAAmB,GAC1BhB,EAASV,KAAKiB,QAAQ,GACtBN,EAAUX,KAAKiB,QAAQN,EAAUP,YAAcM,EAASN,cACjDuB,GAAoB,GAC3BjB,EAASV,KAAKiB,QAAQN,EAAUP,YAAcM,EAASN,aACvDO,EAAUX,KAAKiB,QAAQ,KAEvBP,EAASV,KAAKiB,QAAQS,GACtBf,EAAUX,KAAKiB,QAAQU,MAIvB1C,EAAZ3Q,UAAA8S,UAAI,WACI,KAAOlU,KAAKuS,UAAU5D,OAAS,GAAG,CAC1C,GAAkBmG,GAAc9U,KAAKuS,UAAUwC,KAE/BD,IACAA,IAIR9U,KAAKqS,YAAa,GAGdN,EAAZ3Q,UAAA+R,SAAI,SAAiB1O,EAAyBvC,GACtClC,KAAKiS,SAASkB,SAASnT,KAAK4C,WAAWhB,cAAe6C,EAAUvC,mBAlMxEmE,KAACgL,EAAAA,UAAD9K,OACIC,SAAU,cACVwO,qBAAqB,EACrBC,QAAS,qQACT3D,SAAJ,0aACIpI,cAAeC,EAAAA,kBAAkBC,KACjCL,gBAAiBC,EAAAA,wBAAwBC,+CAlE7C5C,KAAIS,EAAAA,aAEJT,KAAIU,EAAAA,SAEJV,KAAI6O,EAAAA,+BA4EJtP,YAAAS,KAAKqB,EAAAA,QASL7D,WAAAwC,KAAKqB,EAAAA,QASLgL,aAAArM,KAAKqB,EAAAA,SA8JLqK,KAEAoD,GAAA,WA6CI,QAAJA,GAAwBlD,EACArP,GADA5C,KAAxBiS,SAAwBA,EACAjS,KAAxB4C,WAAwBA,EA1CZ5C,KAAZwS,WAAA,WACYxS,KAAZmS,WAAiC,EACrBnS,KAAZoV,OAA6B,EACjBpV,KAAZqV,MAA4B,EA4F5B,MA1FIlV,QAAJ2M,eACQqI,EADR/T,UAAA,iBAKI,WACI,MAAOpB,MAAKwS,gBANhB,SACc5M,GACV5F,KAAKwS,WAAa5M,mCAOtBzF,OAAJ2M,eACQqI,EADR/T,UAAA,gBAKI,WACI,MAAOpB,MAAKmS,eANhB,SACatO,GACT7D,KAAKmS,UAAYM,EAAAA,sBAAsB5O,oCAO3C1D,OAAJ2M,eACQqI,EADR/T,UAAA,aAKI,WACI,MAAOpB,MAAKoV,YANhB,SACUrC,GACN/S,KAAKoV,OAASxC,EAAAA,qBAAqBG,oCAOvC5S,OAAJ2M,eACQqI,EADR/T,UAAA,YAKI,WACI,MAAOpB,MAAKqV,WANhB,SACS1C,GACL3S,KAAKqV,MAAQzC,EAAAA,qBAAqBD,oCAWtCwC,EAAJ/T,UAAAgB,SAAI,WACIpC,KAAKmT,SAAb,SAA4CnT,KAAKsV,UAAUtV,KAAKuV,aACxDvV,KAAKmT,SAAb,aAA+CqC,EAAAA,oBAAoBxV,KAAK2S,OAChE3S,KAAKmT,SAASnT,KAAKoT,aAA3B,SAAA,QAAsFoC,EAAAA,oBAAoBxV,KAAK2S,OACvG3S,KAAKmT,SAAb,QAA2CnT,KAAK+S,OAEnC/S,KAAKoT,cACNpT,KAAKmT,SAAjB,SAAgD,QAGpCnT,KAAK6D,UACL7D,KAAKyV,QAAjB,WAAqD,QAI7CzV,KAAKmT,SAAb,iBAAmDnT,KAAKoT,aAAe,MAAQ,WAGnE+B,EAAZ/T,UAAAgS,WAAI,WACI,MAAR,aAAepT,KAAK4F,WAGRuP,EAAZ/T,UAAAkU,UAAI,SAAkBI,GACd,OAAQA,GACJ,IAAZ,WACgB,MAAhB,SACY,KAAZ,WACgB,MAAhB,YACY,KAAZ,aACgB,MAAhB,YACY,SACI,KAAMrI,OAAM,oCAAoCqI,KAIpDP,EAAZ/T,UAAAmU,SAAI,WACI,MAAOvV,MAAK6D,SACpB,WACA,aAAc7D,KAAK4F,UACnB,WACA,cAGYuP,EAAZ/T,UAAA+R,SAAI,SAAiB1O,EAAyBvC,GACtClC,KAAKiS,SAASkB,SAASnT,KAAK4C,WAAWhB,cAAe6C,EAAUvC,IAG5DiT,EAAZ/T,UAAAqU,QAAI,SAAgBE,EAA8BzT,GAC1ClC,KAAKiS,SAAS2D,aAAa5V,KAAK4C,WAAWhB,cAAe+T,EAAWzT,mBAjG7EmE,KAACC,EAAAA,UAADC,OACIC,SAAU,oDA/PdH,KAAI6O,EAAAA,YAJJ7O,KAAIS,EAAAA,gCA2QJlB,YAAAS,KAAKqB,EAAAA,QASL7D,WAAAwC,KAAKqB,EAAAA,QASLqL,QAAA1M,KAAKqB,EAAAA,QASLiL,OAAAtM,KAAKqB,EAAAA,SA+DLyN,KAEAU,GAAA,WAII,QAAJA,GAAwBjT,EACAqP,EACA6D,GAFA9V,KAAxB4C,WAAwBA,EACA5C,KAAxBiS,SAAwBA,EACAjS,KAAxB8V,SAAwBA,EAyExB,MAvEID,GAAJzU,UAAA0S,YAAI,WACI9T,KAAKiS,SAAS8D,YAAY/V,KAAK4C,WAAWhB,cAAe,SAG7DiU,EAAJzU,UAAAgB,SAAI,WACIpC,KAAK8V,SAASjD,QAAQ7S,MAEtBA,KAAK+V,YAAb,aACQ/V,KAAKmT,SAAb,OAA0C,KAE1C,aAAYnT,KAAK8V,SAASlQ,WACd5F,KAAKmT,SAAjB,QAA+C,QACnCnT,KAAK+V,YAAjB,YAEY/V,KAAKmT,SAAjB,SAAgD,QACpCnT,KAAK+V,YAAjB,WAIIF,EAAJzU,UAAAkB,YAAI,WACItC,KAAK8V,SAAS1B,WAAWpU,OAG7B6V,EAAJzU,UAAA6R,SAAI,SAASF,GACL/S,KAAKmT,SAAb,QAA2CJ,IAGvC8C,EAAJzU,UAAA2S,QAAI,SAAQpB,GACZ,GAAcqD,GAAKpD,EAAAA,qBAAqBD,EAChC3S,MAAKmT,SAASnT,KAAKiW,kBAAmBT,EAAAA,oBAAoBQ,KAG9DH,EAAJzU,UAAA4R,QAAI,WACI,MAAOhT,MAAK4C,WAAWhB,cAAc5B,KAAKkW,0BAG9CL,EAAJzU,UAAAuT,WAAI,WACJ,GAAcM,GAASkB,iBAAiBnW,KAAK4C,WAAWhB,cAEhD,OAAOwU,YAAWnB,EAAOjV,KAAKqW,wBAG1BR,EAAZzU,UAAAgS,WAAI,WACI,MAAR,aAAepT,KAAK8V,SAASlQ,WAGjBiQ,EAAZzU,UAAAiV,mBAAI,WACI,MAAOrW,MAAKoT,aACpB,aACA,YAGYyC,EAAZzU,UAAA8U,sBAAI,WACI,MAAOlW,MAAKoT,aACpB,eACA,eAGYyC,EAAZzU,UAAA6U,gBAAI,WACI,MAAOjW,MAAKoT,aACpB,SACA,SAGYyC,EAAZzU,UAAA+R,SAAI,SAAiBrR,EAAsBI,GACnClC,KAAKiS,SAASkB,SAASnT,KAAK4C,WAAWhB,cAAeE,EAAOI,IAGzD2T,EAAZzU,UAAA2U,YAAI,SAAoBjU,GAChB9B,KAAKiS,SAAS8D,YAAY/V,KAAK4C,WAAWhB,cAAeE,mBA7EjEuE,KAACC,EAAAA,UAADC,OACIC,SAAU,2DAxWdH,KAAIS,EAAAA,aAIJT,KAAI6O,EAAAA,YAyWJ7O,KAAkC0L,MAyElC8D,KClbAS,GAAA,WAAA,QAAAA,MAiBA,sBAjBAjQ,KAAC8B,EAAAA,SAAD5B,OACI+B,SACIC,EAAAA,aACAuJ,IAEJzJ,SACI8M,GACAU,GACA9D,IAEJ3J,cACI+M,GACAU,GACA9D,QAIRuE,KCHIC,GAAe,EAInBC,GAAA,WACI,QAAJA,GAAuBC,GAAAzW,KAAvByW,YAAuBA,EACvB,MAAAD,MAEaE,GAIaC,EAAcC,EAAWC,EAAcL,IAAeM,GAAaC,UAE7FC,GAAA,WAAA,QAAAA,MAGA,MAAAA,MAEAC,GAAA,SAAAC,GAgFI,QAAJD,GAAuBR,EACCU,EACAC,EACeC,GAHnC,GAAJtX,GAKQmX,EALRI,KAAAtX,KAKcyW,IALdzW,WAAuBD,GAAvB0W,YAAuBA,EACC1W,EAAxBoX,cAAwBA,EACApX,EAAxBqX,mBAAwBA,EAnDXrX,EAAbwX,cAAsD,QAE7BxX,EAAzByX,UAA6C,GACfzX,EAA9B0X,eAA8D,KAElD1X,EAAZ2X,UAAgC,gBAAenB,GAGlCxW,EAAbkL,GAA0BlL,EAAK2X,UAMlB3X,EAAb4X,KAAmC,KAIvB5X,EAAZoS,WAAiC,EAcrBpS,EAAZ6X,UAAgC,EAcT7X,EAAvB8X,OACQ,GAAIC,GAAAA,aAyDA/X,EAAZgY,mBAAiC,aAGrBhY,EAAZiY,kBAAgC,SAACC,KAnDzBlY,EAAKsX,SAAWrV,SAASqV,IAAa,EAEtCtX,EAAKoX,cAAce,QAAQnY,EAAK0W,YAAY7U,eAAe,KAiEnE,MAhIuCuW,GAAvClB,EAAAC,GAeI/W,OAAJ2M,eAAQmK,EAAR7V,UAAA,eAAI,WACI,OAAUpB,KAAKiL,IAAMjL,KAAK0X,WAAlC,0CASIvX,OAAJ2M,eACQmK,EADR7V,UAAA,gBAAI,WAEI,MAAOpB,MAAKmS,eAGhB,SAAajQ,GACLA,IAAUlC,KAAKmS,YACfnS,KAAKmS,UAAYjQ,EACjBlC,KAAKoX,mBAAmBnW,iDAMhCd,OAAJ2M,eAAQmK,EAAR7V,UAAA,eAAI,WACI,MAAOpB,MAAK4X,cAGhB,SACY1V,GACJA,IAAUlC,KAAK4X,WACf5X,KAAK4X,SAAW1V,EAChBlC,KAAKoX,mBAAmBnW,iDAmBhCgW,EAAJ7V,UAAAkB,YAAI,WACItC,KAAKmX,cAAciB,eAAepY,KAAKyW,YAAY7U,gBAGvDqV,EAAJ7V,UAAAiX,MAAI,WACIrY,KAAKmX,cAAcmB,SAAStY,KAAKuY,cAAc3W,cAAe,aAGlEqV,EAAJ7V,UAAAoX,gBAAI,WACI,MAAOxY,MAAKyY,SAGhBxB,EAAJ7V,UAAAsX,oBAAI,SAAoB/V,GAChBA,EAAMgW,mBAGV1B,EAAJ7V,UAAAwX,mBAAI,WACI5Y,KAAKoX,mBAAmBnW,gBAG5BgW,EAAJ7V,UAAAyX,cAAI,SAAclW,GACVA,EAAMgW,kBACN3Y,KAAK8Y,oBACL9Y,KAAK+Y,oBAGT9B,EAAJ7V,UAAA4X,WAAI,SAAW9W,GACPlC,KAAKyY,UAAYvW,GAGrB+U,EAAJ7V,UAAA6X,iBAAI,SAAiBC,GACblZ,KAAKgY,kBAAoBkB,GAG7BjC,EAAJ7V,UAAA+X,kBAAI,SAAkBD,GACdlZ,KAAK+X,mBAAqBmB,GAG9BjC,EAAJ7V,UAAAgY,iBAAI,SAAiBC,GACbrZ,KAAK6D,SAAWwV,GASZpC,EAAZ7V,UAAA0X,kBAAI,WACI9Y,KAAK4X,UAAY5X,KAAKyY,QACtBzY,KAAKgY,kBAAkBhY,KAAKyY,SAC5BzY,KAAK+X,sBAGDd,EAAZ7V,UAAA2X,iBAAI,WACJ,GAAcpW,GAAQ,GAAIqU,GAClBrU,GAAM2W,OAAStZ,KACf2C,EAAM8V,QAAUzY,KAAKyY,QAErBzY,KAAKgY,kBAAkBhY,KAAKyY,SAC5BzY,KAAK6X,OAAO/S,KAAKnC,mBAxJzB0D,KAACgL,EAAAA,UAAD9K,OACIC,SAAU,YACVC,SAAU,WACV6K,SAAJ,26BACI2D,QAAS,yzCACTxM,YACK8Q,QAASC,EAAAA,kBAAmBC,YAAaC,EAAAA,WAAW,WAAM,MAAAzC,KAAoB0C,OAAO,IAE1F5Q,gBAAiBC,EAAAA,wBAAwBC,OACzCC,cAAeC,EAAAA,kBAAkBC,KACjCwQ,QAAS,WAAY,QAAS,YAC9BlT,MACI8C,MAAO,YACPqQ,OAAQ,KACRjQ,YAAa,KACbkQ,sBAAuB,WACvBC,wBAAyB,YAE7B1Q,YACI2Q,EAAAA,QAAQ,UACJtE,EAAAA,MAAM,OAAS5T,EAAAA,OAAQmY,KAAM,SAC7BvE,EAAAA,MAAM,QAAS5T,EAAAA,OAAQmY,KAAM,SAC7BC,EAAAA,WAAW,iBAAkBC,EAAAA,QAAQ,qDA1DjD9T,KAAIS,EAAAA,aAKJT,KAAS+T,EAAAA,eAPT/T,KAA6B2D,EAAAA,oBAyH7B3D,KAAAgU,OAAAlT,aAAAd,KAAiBiU,EAAAA,UAAjB/T,MAA2B,mCAtD3BgS,gBAAAlS,KAAKiE,EAAAA,UAAL/D,MAAe,WAEfgR,gBAAAlR,KAAKqB,EAAAA,QAEL8P,YAAAnR,KAAKqB,EAAAA,MAALnB,MAAW,gBACXkR,iBAAApR,KAAKqB,EAAAA,MAALnB,MAAW,qBAKX0E,KAAA5E,KAAKqB,EAAAA,QAMLiQ,OAAAtR,KAAKqB,EAAAA,QAELxF,QAAAmE,KAAKqB,EAAAA,QAIL7D,WAAAwC,KAAKqB,EAAAA,QAkBL+Q,UAAApS,KAAKqB,EAAAA,QAQLmQ,SAAAxR,KAAKmB,EAAAA,UA6ELyP,GAhIuCP,IC3DvC6D,GAAA,WAAA,QAAAA,MAMA,sBANAlU,KAAC8B,EAAAA,SAAD5B,OACI+B,SAAUC,EAAAA,aAAciS,EAAAA,WAAY3I,GACpCxJ,SAAU4O,IACV7O,cAAe6O,QAGnBsD,KfgCAtW,GAAA,WA2FI,QAAJA,GAAuBwW,GAAAza,KAAvBya,IAAuBA,EArEnBza,KAAJ0a,OAAa,uBACT1a,KAAJ2a,UAA+CC,GAA/C5K,QACIhQ,KAAJ6a,YAOc7a,KAAd0E,gBAAuD,GAAIoT,GAAAA,aAE9C9X,KAAb4H,kBAAiC,IAEpB5H,KAAb6H,kBAAiC,EAsBrB7H,KAAZ8a,WAAiC,QAcrB9a,KAAZ+a,aAAmC,MAcvB/a,KAAZgb,WAAmD,GAAIC,GAAAA,iBAAyB,GAG3Djb,KAArBkb,cAAmD,GAAInQ,GAAAA,QAC3C/K,KAAZmb,oBAA0C,EAGlCnb,KAAKK,mBAAqB+a,GAC1Bpb,KAAKqb,SAAWrb,KAAKgb,WAAW3O,eA6DxC,MArHIlM,QAAJ2M,eACQ7I,EADR7C,UAAA,eAAI,WAEI,MAAOpB,MAAKsb,cAEhB,SAAYpZ,GACRlC,KAAKub,gBAAkBrZ,YAAiBuL,GAAAA,aAEpCzN,KAAKub,gBACLvb,KAAKsb,SAAWpZ,oCAKxB/B,OAAJ2M,eACQ7I,EADR7C,UAAA,iBAAI,WAEI,MAAOpB,MAAK8a,gBAEhB,SAAc5Y,GACVlC,KAAK8a,WAAa5Y,mCAItB/B,OAAJ2M,eACQ7I,EADR7C,UAAA,mBAAI,WAEI,MAAOpB,MAAK+a,kBAEhB,SAAgB7Y,GACRA,IAAUlC,KAAK+a,cACf/a,KAAK+a,aAAe7Y,EACpBlC,KAAK2a,UAAUa,QAAQJ,GAAcpb,KAAKE,eAClCgC,IACRlC,KAAK+a,aAAe,wCAK5B5a,OAAJ2M,eACQ7I,EADR7C,UAAA,iBAAI,WAEI,MAAOpB,MAAKgb,WAAW9Y,WAE3B,SAAcA,GAClB,GAAcuZ,GAAUhJ,EAAAA,sBAAsBvQ,EAElClC,MAAKgb,WAAW9Y,QAAUuZ,IAC1Bzb,KAAKgb,WAAWhY,KAAKyY,GACrBzb,KAAK0E,gBAAgBI,KAAK2W,qCAclCxX,EAAJ7C,UAAAuC,KAAI,WAAA,GAAJ5D,GAAAC,IACYA,MAAK0b,SACLC,aAAa3b,KAAK0b,SAGjB1b,KAAK4b,mBACiB,WAAnB5b,KAAKyD,YACLzD,KAAKmb,oBAAqB,GAE9Bnb,KAAK6b,QAAUlL,WAAW,WACtB5Q,EAAK8E,WAAY,EACjB9E,EAAK2E,gBAAgBI,MAAK,GAI1B/E,EAAKkB,gBACNjB,KAAK4H,qBAIhB3D,EAAJ7C,UAAAmC,KAAI,WAAA,GAAJxD,GAAAC,IACYA,MAAK6b,SACLF,aAAa3b,KAAK6b,SAGtB7b,KAAK0b,QAAU/K,WAAW,WACtB5Q,EAAK8E,WAAY,EACjB9E,EAAK2E,gBAAgBI,MAAK,GAC1B/E,EAAKmb,cAAclY,OAInBjD,EAAKkB,gBACNjB,KAAK6H,oBAGZ5D,EAAJ7C,UAAAJ,YAAI,WACIhB,KAAK6a,SAAc7a,KAAK0a,OAAhC,IAA0C1a,KAAKE,aAG3C+D,EAAJ7C,UAAAwa,eAAI,WACI,QAAO5b,KAAKub,gBAAkC,KAAjBvb,KAAKyH,UAAmBzH,KAAKyH,UAI9DxD,EAAJ7C,UAAAgD,YAAI,WACI,MAAOpE,MAAKkb,cAAc7O,gBAG9BpI,EAAJ7C,UAAAH,aAAI,WACIjB,KAAKya,IAAIxZ,gBAGbgD,EAAJ7C,UAAA0a,sBAAI,WACQ9b,KAAKmb,oBACLnb,KAAKuD,uBAvJjB8C,KAACgL,EAAAA,UAAD9K,OACIC,SAAU,uBACVoT,QACI,oBACA,oBACA,UACA,YACA,YACA,eAEJmC,SAAU,mBACV1S,YAAc2S,IACd1K,SAAJ,yPACI0D,qBAAqB,EACrBC,QAAS,ymEACT/L,cAAeC,EAAAA,kBAAkBC,KACjCL,gBAAiBC,EAAAA,wBAAwBC,OACzCvC,MACIuV,eAAgB,wEA9DxB5V,KAAI2D,EAAAA,uCA2EJtF,kBAAA2B,KAAKmB,EAAAA,SAELI,oBAAAvB,KAAKqB,EAAAA,QAELG,oBAAAxB,KAAKqB,EAAAA,QAELD,UAAApB,KAAKqB,EAAAA,QAaLjE,YAAA4C,KAAKqB,EAAAA,QASLxH,cAAAmG,KAAKqB,EAAAA,QAcL7C,YAAAwB,KAAKqB,EAAAA,SAiFLzD,KAEaoD,GACT,GAAImF,GAAAA,eAAsC,8BAQjC9D,IACT6Q,QAASlS,GACT6U,MAAOrV,EAAAA,SACPsV,WAAYC,GAUhBjb,GAAA,WAiII,QAAJA,GACgBiE,EACAxC,EACAoP,EACAqK,EACA3a,EACoC8N,EACxB5J,GANZ5F,KAAhBoF,QAAgBA,EACApF,KAAhB4C,WAAgBA,EACA5C,KAAhBgS,OAAgBA,EACAhS,KAAhBqc,iBAAgBA,EACArc,KAAhB0B,SAAgBA,EACoC1B,KAApDwP,eAAoDA,EACxBxP,KAA5B4F,UAA4BA,EA/HxB5F,KAAJoD,eAA6B,EACzBpD,KAAJmC,kBAAuB,EACnBnC,KAAJsc,gBAA8B,EAMhBtc,KAAd0E,gBAAgC,GAAIoT,GAAAA,aACxB9X,KAAZ+C,aAA2B,GAAIgI,GAAAA,QAsBnB/K,KAAZmS,WAAiC,EAkCrBnS,KAAZ8a,WAAiC,QAcrB9a,KAAZ+a,aAAmC,MAsCvB/a,KAAZwC,gBAA8B,GAAI+Z,KACbvc,KAArBuE,UAAiC,GAAIwG,GAAAA,QAUzB/K,KAAKK,mBAAqB+a,GAoStC,MAzZIjb,QAAJ2M,eACQ3L,EADRC,UAAA,eAAI,WAEI,MAAOpB,MAAKsb,cAEhB,SAAYkB,GACRxc,KAAKsb,SAAWkB,EAChBxc,KAAKc,gBAAgB,UAAW0b,oCAIpCrc,OAAJ2M,eACQ3L,EADRC,UAAA,gBAAI,SACaob,GACTxc,KAAKyH,QAAU+U,mCAGnBrc,OAAJ2M,eACQ3L,EADRC,UAAA,gBAAI,WAC0B,MAAOpB,MAAKmS,eACtC,SAAajQ,GACTlC,KAAKmS,UAAYM,EAAAA,sBAAsBvQ,oCAI3C/B,OAAJ2M,eACQ3L,EADRC,UAAA,yBAAI,WAEI,MAAOpB,MAAKyc,wBAEhB,SAAsBva,GAClBlC,KAAKyc,mBAAqBva,EAC1BlC,KAAKc,gBAAgB,oBAAqBoB,oCAI9C/B,OAAJ2M,eACQ3L,EADRC,UAAA,yBAAI,WAEI,MAAOpB,MAAK0c,wBAEhB,SAAsBxa,GAClBlC,KAAK0c,mBAAqBxa,EAC1BlC,KAAKc,gBAAgB,oBAAqBoB,oCAI9C/B,OAAJ2M,eACQ3L,EADRC,UAAA,iBAAI,WAEI,MAAOpB,MAAK8a,gBAEhB,SAAc5Y,GACNA,GACAlC,KAAK8a,WAAa5Y,EAClBlC,KAAKc,gBAAgB,YAAaoB,IAElClC,KAAK8a,WAAa,yCAK1B3a,OAAJ2M,eACQ3L,EADRC,UAAA,mBAAI,WAEI,MAAOpB,MAAK+a,kBAEhB,SAAgB7Y,GACRA,GACAlC,KAAK+a,aAAe7Y,EACpBlC,KAAKc,gBAAgB,cAAeoB,IAEpClC,KAAK+a,aAAe,uCAK5B5a,OAAJ2M,eACQ3L,EADRC,UAAA,sBAAI,WACuB,MAAOpB,MAAK2c,iDACnCxc,OAAJ2M,eAAQ3L,EAARC,UAAA,sBAAI,SAAmBc,GACflC,KAAK2c,gBAAkBza,EAEnBlC,KAAKe,SACLf,KAAKe,QAAQC,+CAKrBb,OAAJ2M,eACQ3L,EADRC,UAAA,iBAAI,WAEI,MAAOpB,MAAKgb,gBAEhB,SAAc4B,GAClB,GAAc1a,GAAQuQ,EAAAA,sBAAsBmK,EACpC5c,MAAKgb,WAAa9Y,EAClBlC,KAAKc,gBAAgB,YAAaoB,GAE9BA,GACAlC,KAAK2D,wCAKbxD,OAAJ2M,eACQ3L,EADRC,UAAA,cAAI,WAEI,MAAOpB,MAAKoD,+CAGhBjD,OAAJ2M,eACQ3L,EADRC,UAAA,wBAAI,WAEI,MAAOpB,MAAKsc,gDAkBhBnb,EAAJC,UAAAE,cAAI,WAAA,GAAJvB,GAAAC,IACQ,IAAIA,KAAKqB,WACL,MAAOrB,MAAKqB,UAIxB,IAAcwb,GAAW7c,KAAKoF,QAAQJ,WACzB8X,oBAAoB9c,KAAK4C,YACzBma,sBAAsB,eACtBC,wBAAuB,GACvBC,mBAzJmB,GA0JnB3X,cAAmBsV,GAAhC5K,SAEckN,EAAsBld,KAAKqc,iBAC5Bc,4BAA4Bnd,KAAK4C,WA4BtC,OA1BAia,GAASO,yBAAyBF,GAElCL,EAASQ,gBAAgBhZ,KAAKC,EAAAA,UAAUtE,KAAKuE,YAAYC,UAAU,SAACqT,GAC5D9X,EAAKgB,UACLhB,EAAKud,iBAAiBzF,GAClBA,EAAO0F,yBAAyBC,kBAAoBzd,EAAKgB,QAAQ8D,WAGjE9E,EAAKiS,OAAOyL,IAAI,WAAM,MAAA1d,GAAKwD,YAKvCvD,KAAKqB,WAAarB,KAAKoF,QAAQyK,QAC3BjK,UAAW5F,KAAK4F,UAChB+J,iBAAkBkN,EAClBvN,WAAY,mBACZE,eAAgBxP,KAAKwP,mBAGzBxP,KAAK+E,iBAEL/E,KAAKqB,WAAWqc,cACXrZ,KAAKC,EAAAA,UAAUtE,KAAKuE,YACpBC,UAAU,WAAM,MAAAzE,GAAK+D,WAEnB9D,KAAKqB,YAGhBF,EAAJC,UAAA0C,OAAI,WACQ9D,KAAKqB,YAAcrB,KAAKqB,WAAWsc,eACnC3d,KAAKqB,WAAWyC,SAGpB9D,KAAKe,QAAU,MAGnBI,EAAJC,UAAAkc,iBAAI,SAAiB9c;yCAAjB,GAAJT,GAAAC,KACYC,EAAmBD,KAAKE,WAC5BC,QAAOC,KAAKJ,KAAKK,oBAAoBC,KAAK,SAACC,GACvC,MAAIC,GAAOC,eAAeC,UAAYX,EAAKM,mBAAmBE,GAAKG,SAC/DF,EAAOC,eAAeE,UAAYZ,EAAKM,mBAAmBE,GAAKI,SAC/DH,EAAOC,eAAeG,WAAab,EAAKM,mBAAmBE,GAAKK,UAChEJ,EAAOC,eAAeI,WAAad,EAAKM,mBAAmBE,GAAKM,WAChEZ,EAAmBM,GAEZ,KAKfP,KAAKc,gBAAgB,cAAeb,GAEhCD,KAAKe,UACLf,KAAKe,QAAQC,cACbhB,KAAKe,QAAQE,gBAGjBjB,KAAKkB,2BAGTC,EAAJC,UAAAF,wBAAI,WAII,GAHKlB,KAAKqB,aACNrB,KAAKqB,WAAarB,KAAKsB,iBAEF,UAArBtB,KAAKE,aAAgD,SAArBF,KAAKE,YAAwB,CACzE,GAAkBqB,IACDvB,KAAKqB,WAAWG,eAAeC,aAC5BzB,KAAK0B,SAASC,QAAQC,cAAcH,cAAgB,EACtDI,EAAmB7B,KAAKqB,WAAWG,eAAeM,MAAMC,KAAO,KACrE/B,MAAKqB,WAAWG,eAAeM,MAAMC,IAC9BC,SAASH,EAAiBI,MAAM,MAAM,GAAI,IAAMV,EAAM,EAAzE,OAMIJ,EAAJC,UAAAN,gBAAI,SAAgBP,EAAa2B,GACrBlC,KAAKmC,kBAAoBD,GACrBlC,KAAKe,UACLf,KAAKe,QAAQR,GAAO2B,IAKhCf,EAAJC,UAAAgB,SAAI,WACIpC,KAAKqC,2BAGTlB,EAAJC,UAAAkB,YAAI,WAAA,GAAJvC,GAAAC,IACYA,MAAKqB,YACLrB,KAAKqB,WAAWkB,UAEpBvC,KAAKwC,gBAAgBC,QAAQ,SAACC,EAAUC,GACpC,MAAA5C,GAAK6C,WAAWhB,cAAciB,oBAAoBF,EAAOD,KAC7D1C,KAAKwC,gBAAgBM,QAErB9C,KAAK+C,aAAaC,OAClBhD,KAAK+C,aAAaE,YAGtB9B,EAAJC,UAAA8B,cAAI,SAAcC,GACNnD,KAAKoD,eAAiBD,EAAEE,UAAYC,EAAAA,QACpCtD,KAAKuD,QAIbpC,EAAJC,UAAAoC,eAAI,WACIxD,KAAKuD,QAGTpC,EAAJC,UAAAiB,wBAAI,WAAA,GAAJtC,GAAAC,IAC+B,WAAnBA,KAAKyD,WAELzD,KAAKwC,gBACAkB,IAAI,aAAc,WAAM,MAAA3D,GAAK4D,SAC7BD,IAAI,aAAc,WAAM,MAAA3D,GAAKwD,SAC7Bd,QAAQ,SAACC,EAAUC,GAAU,MAAA5C,GAAK6C,WAAWhB,cAAcgC,iBAAiBjB,EAAOD,KAGrE,UAAnB1C,KAAKyD,WAELzD,KAAKwC,gBACAkB,IAAI,QAAS,WAAM,MAAA3D,GAAK4D,SACxBD,IAAI,OAAQ,WAAM,MAAA3D,GAAKwD,SACvBd,QAAQ,SAACC,EAAUC,GAAU,MAAA5C,GAAK6C,WAAWhB,cAAcgC,iBAAiBjB,EAAOD,MAIhGvB,EAAJC,UAAAuC,KAAI,WAAA,GAAJ5D,GAAAC,IACQ,KAAKA,KAAK6D,SAAU,CAChB,IAAK7D,KAAKe,QAAS,CAC/B,GAAsBM,GAAarB,KAAKsB,eACxBtB,MAAK8D,SAEL9D,KAAK+D,OAAS/D,KAAK+D,QAAU,GAAIC,GAAAA,gBAAgBC,GAAoBjE,KAAK0B,UAE1E1B,KAAKe,QAAUM,EAAW6C,OAAOlE,KAAK+D,QAAQI,SAC9CnE,KAAKe,QAAQqD,cACRC,KAAKC,EAAAA,UAAUtE,KAAKuE,YACpBC,UAAU,WAAM,MAAAzE,GAAK+D,WAC1B9D,KAAKmC,kBAAmB,GAEpB,UACA,cACA,YACA,oBACA,oBACA,oBACA,iBACA,aAEOM,QAAQ,SAACgC,GAAa,MAAA1E,GAAKe,gBAAgB2D,EAAU1E,EAAM0E,MACtEzE,KAAKe,QAAQ2D,gBAAgBL,KAAKC,EAAAA,UAAUtE,KAAK+C,cAAe4B,EAAAA,wBAC3DH,UAAU,SAACI,GACR7E,EAAK8E,UAAYD,EACjB7E,EAAK2E,gBAAgBI,KAAKF,GAC1B7E,EAAKqD,cAAgBwB,IAGjC5E,KAAK+E,iBACL/E,KAAKe,QAAQ4C,SAIrBxC,EAAJC,UAAAmC,KAAI,WACQvD,KAAKe,SACLf,KAAKe,QAAQwC,QAKrBpC,EAAJC,UAAA2D,eAAI,WACS/E,KAAKqB,aACNrB,KAAKqB,WAAarB,KAAKsB,gBAEnC,IAAc0D,GACFhF,KAAKqB,WAAW4D,YAA4B,iBAC1CC,EAASlF,KAAKmF,YACdC,EAAUpF,KAAKqF,oBAErBL,GAASM,eACjBC,KAAgBL,EAAOM,KAASJ,EAAQI,MACxCD,KAAgBL,EAAOO,SAAaL,EAAQK,aAQxCtE,EAAJC,UAAA+D,UAAI,WACJ,GAEYO,GAFEV,EAAWhF,KAAKE,YAChByF,GAAS3F,KAAK4F,WAAsC,QAAzB5F,KAAK4F,UAAU1D,KAGhD,IAAiB,QAAb8C,GAAmC,WAAbA,EACtBU,GAAkBhF,QAAS,SAAUC,QAAsB,QAAbqE,EAAqB,MAAQ,cACxE,IACU,QAAbA,GACc,SAAbA,GAAuBW,GACV,UAAbX,IAAyBW,EAC1BD,GAAkBhF,QAAS,QAASC,QAAS,cAC1C,CAAA,KACU,WAAbqE,GACc,UAAbA,GAAwBW,GACX,SAAbX,IAAwBW,GAGzB,KAAME,GAAiCb,EAFvCU,IAAkBhF,QAAS,MAAOC,QAAS,UAKzC,GAAAmF,GAAd9F,KAAA+F,eAAAL,EAAAhF,QAAAgF,EAAA/E,QAEQ,QACI6E,KAAME,EACND,UAAW/E,QAJvBoF,EAAAE,EAImCrF,QAJnCmF,EAAAG,KASI9E,EAAJC,UAAAiE,mBAAI,WACJ,GAEYa,GAFElB,EAAWhF,KAAKE,YAChByF,GAAS3F,KAAK4F,WAAsC,QAAzB5F,KAAK4F,UAAU1D,KAGhD,IAAiB,QAAb8C,EACAkB,GAAmBtF,SAAU,SAAUC,SAAU,cAC9C,IAAiB,WAAbmE,EACPkB,GAAmBtF,SAAU,SAAUC,SAAU,WAC9C,IACU,QAAbmE,GACc,SAAbA,GAAuBW,GACV,UAAbX,IAAyBW,EAC1BO,GAAmBtF,SAAU,MAAOC,SAAU,cAC3C,CAAA,KACU,WAAbmE,GACc,UAAbA,GAAwBW,GACX,SAAbX,IAAwBW,GAGzB,KAAME,GAAiCb,EAFvCkB,IAAmBtF,SAAU,QAASC,SAAU,UAK9C,GAAAiF,GAAd9F,KAAA+F,eAAAG,EAAAtF,SAAAsF,EAAArF,SAEQ,QACI2E,KAAMU,EACNT,UAAW7E,SAJvBkF,EAAAE,EAIoCnF,SAJpCiF,EAAAG,KASY9E,EAAZC,UAAA2E,eAAI,SAAuBC,EAA4BC,GACvD,GAAYE,GAAgCH,EAChCI,EAA8BH,CAelC,OAdyB,QAArBjG,KAAKE,aAA8C,WAArBF,KAAKE,YACzB,QAAN+F,EACAG,EAAO,SACM,WAANH,IACPG,EAAO,OAGD,QAANJ,EACAG,EAAO,QACM,UAANH,IACPG,EAAO,QAIPH,EAAGG,EAAMF,EAAGG,mBA3a5BC,KAACC,EAAAA,UAADC,OACIC,SAAU,wCACVC,SAAU,YACVC,MACIC,YAAa,wBACbC,aAAc,4DA3MtBP,KAAIQ,EAAAA,UArBJR,KAAIS,EAAAA,aAMJT,KAAIU,EAAAA,SAiBJV,KAAIW,EAAAA,mBAXJX,KAAIY,EAAAA,mBAsVJZ,SAAAa,GAAAC,aAAAd,KAASe,EAAAA,OAATb,MAAgBc,QAnVhBhB,KAASiB,EAAAA,eAATH,aAAAd,KAoVSkB,EAAAA,gCAvHT7C,kBAAA2B,KAAKmB,EAAAA,SAGLC,UAAApB,KAAKqB,EAAAA,MAALnB,MAAW,eAUXoB,WAAAtB,KAAKqB,EAAAA,MAALnB,MAAW,aAKX1C,WAAAwC,KAAKqB,EAAAA,MAALnB,MAAW,uBAOXqB,oBAAAvB,KAAKqB,EAAAA,MAALnB,MAAW,uBAUXsB,oBAAAxB,KAAKqB,EAAAA,MAALnB,MAAW,uBAUX9C,YAAA4C,KAAKqB,EAAAA,MAALnB,MAAW,eAcXrG,cAAAmG,KAAKqB,EAAAA,MAALnB,MAAW,iBAcXuB,iBAAAzB,KAAKqB,EAAAA,MAALnB,MAAW,oBAWX1B,YAAAwB,KAAKqB,EAAAA,MAALnB,MAAW,eAeXwB,SAAA1B,KAAK2B,EAAAA,YAALzB,MAAiB,2BAKjB0B,mBAAA5B,KAAK2B,EAAAA,YAALzB,MAAiB,qBAoTjBpF,KCloBA+G,GAAA,WAAA,QAAAA,MAQA,sBARA7B,KAAC8B,EAAAA,SAAD5B,OACI6B,cAAenE,GAAoB9C,IACnCkH,SAAUpE,GAAoB9C,IAC9BmH,SAAUC,EAAAA,aAAcC,EAAAA,eACxBC,WAAYC,IACZC,iBAAkB1E,QAGtBiE,KChBaU,GAAU,GAAIC,GAAAA,QAAQ,ivBCHP,8LCKW,6BAGD,kCAIOC,kCAMA,m4IC6ER,+iBCxEK,sBACF,mBACH,sBAGG,+BACE,iCACA,kCACC"}