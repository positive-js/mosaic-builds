{"version":3,"file":"mosaic.umd.min.js","sources":["../../src/lib/tooltip/tooltip.component.ts","../../src/lib/tooltip/tooltip.module.ts","../../src/lib/version.ts","../../src/lib/timepicker/timepicker.constants.ts","../../src/lib/select/select.component.ts","../../src/lib/select/select.module.ts","../../src/lib/splitter/splitter.component.ts","../../src/lib/splitter/splitter.module.ts","../../src/lib/toggle/toggle.component.ts","../../src/lib/toggle/toggle.module.ts","../../src/lib/tabs/tab-group.ts","../../src/lib/tabs/tab-nav-bar/tab-nav-bar.ts","../../src/lib/tabs/tabs.module.ts","../../src/lib/tag/tag.component.ts","../../src/lib/tag/tag.module.ts","../../src/lib/textarea/textarea.component.ts","../../src/lib/textarea/textarea.module.ts","../../src/lib/timepicker/timepicker.ts","../../src/lib/timepicker/timepicker.module.ts","../../src/lib/select/select-animations.ts","../../src/lib/tree/tree-selection.ts","../../src/lib/tree/tree.module.ts","../../src/lib/tree/data-source/flat-data-source.ts","../../src/lib/tree/data-source/nested-data-source.ts","../../src/lib/tabs/tab-content.ts","../../src/lib/tabs/tab-label.ts","../../src/lib/tabs/tab.ts","../../src/lib/tabs/tabs-animations.ts","../../src/lib/tabs/tab-body.ts","../../src/lib/tabs/tab-label-wrapper.ts","../../src/lib/tabs/tab-header.ts","../../src/lib/modal/modal.service.ts","../../src/lib/modal/modal.module.ts","../../src/lib/navbar/navbar.component.ts","../../src/lib/navbar/navbar.module.ts","../../src/lib/progress-bar/progress-bar.component.ts","../../src/lib/progress-bar/progress-bar.module.ts","../../src/lib/progress-spinner/progress-spinner.component.ts","../../src/lib/progress-spinner/progress-spinner.module.ts","../../src/lib/radio/radio.component.ts","../../src/lib/radio/radio.module.ts","../../src/lib/tree/node.ts","../../src/lib/tree/padding.ts","../../src/lib/list/list-selection.component.ts","../../src/lib/list/list.component.ts","../../src/lib/list/list.module.ts","../../src/lib/link/link.component.ts","../../src/lib/link/link.module.ts","../../src/lib/modal/modal-control.service.ts","../../src/lib/modal/modal-ref.class.ts","../../src/lib/modal/modal-util.ts","../../src/lib/modal/modal.component.ts","../../src/lib/modal/css-unit.pipe.ts","../../src/lib/form-field/form-field.ts","../../src/lib/form-field/form-field.module.ts","../../src/lib/input/input-value-accessor.ts","../../src/lib/input/stepperUtils.ts","../../src/lib/input/input.ts","../../src/lib/input/input-number-validators.ts","../../src/lib/input/input.module.ts","../../src/lib/layout/content.component.ts","../../src/lib/layout/footer.component.ts","../../src/lib/layout/header.component.ts","../../src/lib/layout/layout.component.ts","../../src/lib/layout/sidebar.component.ts","../../src/lib/layout/layout.module.ts","../../src/lib/button/button.component.ts","../../src/lib/button/button.module.ts","../../src/lib/card/card.component.ts","../../src/lib/card/card.module.ts","../../src/lib/checkbox/checkbox-config.ts","../../src/lib/checkbox/checkbox.ts","../../src/lib/checkbox/checkbox-required-validator.ts","../../src/lib/checkbox/checkbox-module.ts","../../src/lib/divider/divider.component.ts","../../src/lib/divider/divider.module.ts","../../src/lib/dropdown/dropdown-content.ts","../../src/lib/dropdown/dropdown-panel.ts","../../src/lib/dropdown/dropdown-item.ts","../../src/lib/dropdown/dropdown-animations.ts","../../src/lib/dropdown/dropdown.component.ts","../../src/lib/dropdown/dropdown-trigger.ts","../../src/lib/dropdown/dropdown.module.ts","../../src/lib/form-field/cleaner.ts","../../src/lib/form-field/form-field-control.ts","../../src/lib/form-field/form-field-number-control.ts","../../src/lib/form-field/hint.ts","../../src/lib/form-field/prefix.ts","../../src/lib/form-field/stepper.ts","../../src/lib/form-field/suffix.ts","../../node_modules/tslib/tslib.es6.js","../../src/lib/core/utils/utils.ts","../../src/lib/core/common-behaviors/common-module.ts","../../src/lib/core/common-behaviors/disabled.ts","../../src/lib/core/common-behaviors/color.ts","../../src/lib/core/common-behaviors/tabindex.ts","../../src/lib/core/common-behaviors/error-state.ts","../../src/lib/core/option/option.ts","../../src/lib/core/overlay/overlay-position-map.ts","../../src/lib/dropdown/dropdown-errors.ts","../../src/lib/form-field/form-field-errors.ts","../../src/lib/input/input-errors.ts","../../src/lib/select/select-errors.ts","../../src/lib/core/line/line.ts","../../src/lib/core/error/error-options.ts","../../src/lib/core/selection/pseudo-checkbox/pseudo-checkbox.ts","../../src/lib/core/selection/index.ts","../../src/lib/core/services/measure-scrollbar.service.ts","../../src/lib/core/option/optgroup.ts","../../src/lib/core/option/index.ts","../../src/lib/core/label/label-options.ts","../../src/lib/core/animation/fade-animations.ts","../../src/lib/icon/icon.component.ts","../../src/lib/icon/icon.module.ts"],"sourcesContent":["import {\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    Directive,\n    ElementRef,\n    EventEmitter,\n    HostBinding,\n    Inject,\n    InjectionToken,\n    Input,\n    NgZone,\n    OnDestroy,\n    OnInit,\n    Optional,\n    Output,\n    TemplateRef,\n    ViewContainerRef,\n    ViewEncapsulation\n} from '@angular/core';\nimport { Directionality } from '@ptsecurity/cdk/bidi';\nimport { coerceBooleanProperty } from '@ptsecurity/cdk/coercion';\nimport { ESCAPE } from '@ptsecurity/cdk/keycodes';\nimport {\n    ConnectedOverlayPositionChange,\n    ConnectionPositionPair,\n    Overlay,\n    OverlayRef,\n    ScrollDispatcher,\n    IScrollStrategy,\n    FlexibleConnectedPositionStrategy,\n    IOverlayConnectionPosition,\n    IOriginConnectionPosition,\n    HorizontalConnectionPos,\n    VerticalConnectionPos\n} from '@ptsecurity/cdk/overlay';\nimport { ComponentPortal } from '@ptsecurity/cdk/portal';\nimport {\n    fadeAnimation,\n    DEFAULT_4_POSITIONS,\n    POSITION_MAP\n} from '@ptsecurity/mosaic/core';\nimport { BehaviorSubject, Observable, Subject } from 'rxjs';\nimport { distinctUntilChanged, takeUntil } from 'rxjs/operators';\n\n\n@Component({\n    selector: 'mc-tooltip-component',\n    inputs: [\n        'mcMouseEnterDelay',\n        'mcMouseLeaveDelay',\n        'mcTitle',\n        'mcVisible',\n        'mcTrigger',\n        'mcPlacement'\n    ],\n    outputs: ['mcVisibleChange'],\n    animations: [ fadeAnimation ],\n    templateUrl: './tooltip.component.html',\n    preserveWhitespaces: false,\n    styleUrls: ['./tooltip.css'],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    host: {\n        '(body:click)': 'this.handleBodyInteraction()'\n    }\n})\nexport class McTooltipComponent {\n    prefix = 'mc-tooltip_placement';\n    positions: ConnectionPositionPair[] = [ ...DEFAULT_4_POSITIONS ];\n    classMap = {};\n    isTitleString: boolean;\n    showTid: number;\n    hideTid: number;\n    availablePositions: any;\n    $visible: Observable<boolean>;\n\n    @Output() mcVisibleChange: EventEmitter<boolean> = new EventEmitter();\n\n    @Input() mcMouseEnterDelay = 400;\n\n    @Input() mcMouseLeaveDelay = 0;\n\n    @Input()\n    get mcTitle(): string | TemplateRef<void> {\n        return this._mcTitle;\n    }\n    set mcTitle(value: string | TemplateRef<void>) {\n        this.isTitleString = !(value instanceof TemplateRef);\n\n        if (this.isTitleString) {\n            this._mcTitle = value;\n        }\n    }\n    private _mcTitle: string | TemplateRef<void>;\n\n    @Input()\n    get mcTrigger(): string {\n        return this._mcTrigger;\n    }\n    set mcTrigger(value: string) {\n        this._mcTrigger = value;\n    }\n    private _mcTrigger: string = 'hover';\n\n    @Input()\n    get mcPlacement(): string {\n        return this._mcPlacement;\n    }\n    set mcPlacement(value: string) {\n        if (value !== this._mcPlacement) {\n            this._mcPlacement = value;\n            this.positions.unshift(POSITION_MAP[ this.mcPlacement ]);\n        } else if (!value) {\n            this._mcPlacement = 'top';\n        }\n    }\n    private _mcPlacement: string = 'top';\n\n    @Input()\n    get mcVisible(): boolean {\n        return this._mcVisible.value;\n    }\n    set mcVisible(value: boolean) {\n        const visible = coerceBooleanProperty(value);\n\n        if (this._mcVisible.value !== visible) {\n            this._mcVisible.next(visible);\n            this.mcVisibleChange.emit(visible);\n        }\n    }\n    private _mcVisible: BehaviorSubject<boolean> = new BehaviorSubject<boolean>(false);\n\n    /** Subject for notifying that the tooltip has been hidden from the view */\n    private readonly onHideSubject: Subject<any> = new Subject();\n    private closeOnInteraction: boolean = false;\n\n    constructor(public cdr: ChangeDetectorRef) {\n        this.availablePositions = POSITION_MAP;\n        this.$visible = this._mcVisible.asObservable();\n    }\n\n    show(): void {\n        if (this.hideTid) {\n            clearTimeout(this.hideTid);\n        }\n\n        if (!this.isContentEmpty()) {\n            if (this.mcTrigger !== 'manual') {\n                this.closeOnInteraction = true;\n            }\n            this.showTid = setTimeout(() => {\n                this.mcVisible = true;\n                this.mcVisibleChange.emit(true);\n\n                // Mark for check so if any parent component has set the\n                // ChangeDetectionStrategy to OnPush it will be checked anyways\n                this.markForCheck();\n            }, this.mcMouseEnterDelay);\n        }\n    }\n\n    hide(): void {\n        if (this.showTid) {\n            clearTimeout(this.showTid);\n        }\n\n        this.hideTid = setTimeout(() => {\n            this.mcVisible = false;\n            this.mcVisibleChange.emit(false);\n            this.onHideSubject.next();\n\n            // Mark for check so if any parent component has set the\n            // ChangeDetectionStrategy to OnPush it will be checked anyways\n            this.markForCheck();\n        }, this.mcMouseLeaveDelay);\n    }\n\n    setClassMap(): void {\n        this.classMap = `${this.prefix}-${this.mcPlacement}`;\n    }\n\n    isContentEmpty(): boolean {\n        return this.isTitleString ? (this.mcTitle === '' || !this.mcTitle) : false;\n    }\n\n    /** Returns an observable that notifies when the tooltip has been hidden from view. */\n    afterHidden(): Observable<void> {\n        return this.onHideSubject.asObservable();\n    }\n\n    markForCheck(): void {\n        this.cdr.markForCheck();\n    }\n\n    handleBodyInteraction(): void {\n        if (this.closeOnInteraction) {\n            this.hide();\n        }\n    }\n}\n\nexport const MC_TOOLTIP_SCROLL_STRATEGY =\n    new InjectionToken<() => IScrollStrategy>('mc-tooltip-scroll-strategy');\n\n/** @docs-private */\nexport function mcTooltipScrollStrategyFactory(overlay: Overlay): () => IScrollStrategy {\n    return () => overlay.scrollStrategies.reposition({scrollThrottle: 20});\n}\n\n/** @docs-private */\nexport const MC_TOOLTIP_SCROLL_STRATEGY_FACTORY_PROVIDER = {\n    provide: MC_TOOLTIP_SCROLL_STRATEGY,\n    deps: [Overlay],\n    useFactory: mcTooltipScrollStrategyFactory\n};\n\n/** Creates an error to be thrown if the user supplied an invalid tooltip position. */\nexport function getMcTooltipInvalidPositionError(position: string) {\n    return Error(`McTooltip position \"${position}\" is invalid.`);\n}\n\nconst VIEWPORT_MARGIN: number = 8;\n\n@Directive({\n    selector: '[mcTooltip], [attribute^=\"mcTooltip\"]',\n    exportAs: 'mcTooltip',\n    host: {\n        '(keydown)': 'handleKeydown($event)',\n        '(touchend)': 'handleTouchend()'\n    }\n})\nexport class McTooltip implements OnInit, OnDestroy {\n    isTooltipOpen: boolean = false;\n    isDynamicTooltip = false;\n    parentDisabled: boolean = false;\n    overlayRef: OverlayRef | null;\n    portal: ComponentPortal<McTooltipComponent>;\n    availablePositions: any;\n    tooltip: McTooltipComponent | null;\n\n    @Output() mcVisibleChange = new EventEmitter<boolean>();\n    private $unsubscribe = new Subject<void>();\n\n    @Input('mcTooltip')\n    get mcTitle(): string {\n        return this._mcTitle;\n    }\n    set mcTitle(title: string) {\n        this._mcTitle = title;\n        this.updateCompValue('mcTitle', title);\n    }\n    private _mcTitle: string;\n\n    @Input('mcTitle')\n    set setTitle(title: string) {\n        this.mcTitle = title;\n    }\n\n    @Input('mcTooltipDisabled')\n    get disabled(): boolean { return this._disabled; }\n    set disabled(value) {\n        this._disabled = coerceBooleanProperty(value);\n    }\n    private _disabled: boolean = false;\n\n    @Input('mcMouseEnterDelay')\n    get mcMouseEnterDelay(): number {\n        return this._mcMouseEnterDelay;\n    }\n    set mcMouseEnterDelay(value: number) {\n        this._mcMouseEnterDelay = value;\n        this.updateCompValue('mcMouseEnterDelay', value);\n    }\n    private _mcMouseEnterDelay: number;\n\n    @Input('mcMouseLeaveDelay')\n    get mcMouseLeaveDelay(): number {\n        return this._mcMouseLeaveDelay;\n    }\n    set mcMouseLeaveDelay(value: number) {\n        this._mcMouseLeaveDelay = value;\n        this.updateCompValue('mcMouseLeaveDelay', value);\n    }\n    private _mcMouseLeaveDelay: number;\n\n    @Input('mcTrigger')\n    get mcTrigger(): string {\n        return this._mcTrigger;\n    }\n    set mcTrigger(value: string) {\n        if (value) {\n            this._mcTrigger = value;\n            this.updateCompValue('mcTrigger', value);\n        } else {\n            this._mcTrigger = 'hover';\n        }\n    }\n    private _mcTrigger: string = 'hover';\n\n    @Input('mcPlacement')\n    get mcPlacement(): string {\n        return this._mcPlacement;\n    }\n    set mcPlacement(value: string) {\n        if (value) {\n            this._mcPlacement = value;\n            this.updateCompValue('mcPlacement', value);\n        } else {\n            this._mcPlacement = 'top';\n        }\n    }\n    private _mcPlacement: string = 'top';\n\n    @Input('mcTooltipClass')\n    get mcTooltipClass() { return this._mcTooltipClass; }\n    set mсTooltipClass(value: string | string[] | Set<string> | {[key: string]: any}) {\n        this._mcTooltipClass = value;\n\n        if (this.tooltip) {\n            this.tooltip.setClassMap();\n        }\n    }\n    private _mcTooltipClass: string | string[] | Set<string> | {[key: string]: any};\n\n    @Input('mcVisible')\n    get mcVisible(): boolean {\n        return this._mcVisible;\n    }\n    set mcVisible(externalValue: boolean) {\n        const value = coerceBooleanProperty(externalValue);\n        this._mcVisible = value;\n        this.updateCompValue('mcVisible', value);\n\n        if (value) {\n            this.show();\n        }\n    }\n    private _mcVisible: boolean;\n\n    @HostBinding('class.mc-tooltip-open')\n    get isOpen(): boolean {\n        return this.isTooltipOpen;\n    }\n\n    @HostBinding('class.disabled')\n    get isParentDisabled(): boolean {\n        return this.parentDisabled;\n    }\n\n    private manualListeners = new Map<string, EventListenerOrEventListenerObject>();\n    private readonly destroyed = new Subject<void>();\n\n    constructor(\n        private overlay: Overlay,\n        private elementRef: ElementRef,\n        private ngZone: NgZone,\n        private scrollDispatcher: ScrollDispatcher,\n        private hostView: ViewContainerRef,\n        @Inject(MC_TOOLTIP_SCROLL_STRATEGY) private scrollStrategy,\n        @Optional() private direction: Directionality) {\n            this.availablePositions = POSITION_MAP;\n        }\n\n    /** Create the overlay config and position strategy */\n    createOverlay(): OverlayRef {\n        if (this.overlayRef) {\n            return this.overlayRef;\n        }\n\n        // Create connected position strategy that listens for scroll events to reposition.\n        const strategy = this.overlay.position()\n            .flexibleConnectedTo(this.elementRef)\n            .withTransformOriginOn('.mc-tooltip')\n            .withFlexibleDimensions(false)\n            .withViewportMargin(VIEWPORT_MARGIN)\n            .withPositions([ ...DEFAULT_4_POSITIONS ]);\n\n        const scrollableAncestors = this.scrollDispatcher\n            .getAncestorScrollContainers(this.elementRef);\n\n        strategy.withScrollableContainers(scrollableAncestors);\n\n        strategy.positionChanges.pipe(takeUntil(this.destroyed)).subscribe((change) => {\n            if (this.tooltip) {\n                this.onPositionChange(change);\n                if (change.scrollableViewProperties.isOverlayClipped && this.tooltip.mcVisible) {\n                    // After position changes occur and the overlay is clipped by\n                    // a parent scrollable then close the tooltip.\n                    this.ngZone.run(() => this.hide());\n                }\n            }\n        });\n\n        this.overlayRef = this.overlay.create({\n            direction: this.direction,\n            positionStrategy: strategy,\n            panelClass: 'mc-tooltip-panel',\n            scrollStrategy: this.scrollStrategy()\n        });\n\n        this.updatePosition();\n\n        this.overlayRef.detachments()\n            .pipe(takeUntil(this.destroyed))\n            .subscribe(() => this.detach());\n\n        return this.overlayRef;\n    }\n\n    detach() {\n        if (this.overlayRef && this.overlayRef.hasAttached()) {\n            this.overlayRef.detach();\n        }\n\n        this.tooltip = null;\n    }\n\n    onPositionChange($event: ConnectedOverlayPositionChange): void {\n        let updatedPlacement = this.mcPlacement;\n        Object.keys(this.availablePositions).some((key) => {\n            if ($event.connectionPair.originX === this.availablePositions[key].originX &&\n                $event.connectionPair.originY === this.availablePositions[key].originY &&\n                $event.connectionPair.overlayX === this.availablePositions[key].overlayX &&\n                $event.connectionPair.overlayY === this.availablePositions[key].overlayY) {\n                updatedPlacement = key;\n\n                return true;\n            }\n\n            return false;\n        });\n        this.updateCompValue('mcPlacement', updatedPlacement);\n\n        if (this.tooltip) {\n            this.tooltip.setClassMap();\n            this.tooltip.markForCheck();\n        }\n\n        this.handlePositioningUpdate();\n    }\n\n    handlePositioningUpdate() {\n        if (!this.overlayRef) {\n            this.overlayRef = this.createOverlay();\n        }\n        if (this.mcPlacement === 'right' || this.mcPlacement === 'left') {\n            const pos =\n                (this.overlayRef.overlayElement.clientHeight -\n                    this.hostView.element.nativeElement.clientHeight) / 2; // tslint:disable-line\n            const currentContainer = this.overlayRef.overlayElement.style.top || '0px';\n            this.overlayRef.overlayElement.style.top =\n                `${parseInt(currentContainer.split('px')[0], 10) + pos - 1}px`;\n            // TODO: обновлять положение стрелки\\указателя\\\"дятла\"\n        }\n    }\n\n    // tslint:disable-next-line:no-any\n    updateCompValue(key: string, value: any): void {\n        if (this.isDynamicTooltip && value) {\n            if (this.tooltip) {\n                this.tooltip[key] = value;\n            }\n        }\n    }\n\n    ngOnInit(): void {\n        this.initElementRefListeners();\n    }\n\n    ngOnDestroy(): void {\n        if (this.overlayRef) {\n            this.overlayRef.dispose();\n        }\n        this.manualListeners.forEach((listener, event) =>\n            this.elementRef.nativeElement.removeEventListener(event, listener));\n        this.manualListeners.clear();\n\n        this.$unsubscribe.next();\n        this.$unsubscribe.complete();\n    }\n\n    handleKeydown(e: KeyboardEvent) {\n        if (this.isTooltipOpen && e.keyCode === ESCAPE) { // tslint:disable-line\n            this.hide();\n        }\n    }\n\n    handleTouchend() {\n        this.hide();\n    }\n\n    initElementRefListeners() {\n        if (this.mcTrigger === 'hover') {\n\n            this.manualListeners\n                .set('mouseenter', () => this.show())\n                .set('mouseleave', () => this.hide())\n                .forEach((listener, event) => this.elementRef.nativeElement.addEventListener(event, listener));\n        }\n\n        if (this.mcTrigger === 'focus') {\n\n            this.manualListeners\n                .set('focus', () => this.show())\n                .set('blur', () => this.hide())\n                .forEach((listener, event) => this.elementRef.nativeElement.addEventListener(event, listener));\n        }\n    }\n\n    show(): void {\n        if (!this.disabled) {\n            if (!this.tooltip) {\n                const overlayRef = this.createOverlay();\n                this.detach();\n\n                this.portal = this.portal || new ComponentPortal(McTooltipComponent, this.hostView);\n\n                this.tooltip = overlayRef.attach(this.portal).instance;\n                this.tooltip.afterHidden()\n                    .pipe(takeUntil(this.destroyed))\n                    .subscribe(() => this.detach());\n                this.isDynamicTooltip = true;\n                const properties = [\n                    'mcTitle',\n                    'mcPlacement',\n                    'mcTrigger',\n                    'mcTooltipDisabled',\n                    'mcMouseEnterDelay',\n                    'mcMouseLeaveDelay',\n                    'mсTooltipClass',\n                    'mcVisible'\n                ];\n                properties.forEach((property) => this.updateCompValue(property, this[ property ]));\n                this.tooltip.mcVisibleChange.pipe(takeUntil(this.$unsubscribe), distinctUntilChanged())\n                    .subscribe((data) => {\n                        this.mcVisible = data;\n                        this.mcVisibleChange.emit(data);\n                        this.isTooltipOpen = data;\n                    });\n            }\n            this.updatePosition();\n            this.tooltip.show();\n        }\n    }\n\n    hide(): void {\n        if (this.tooltip) {\n            this.tooltip.hide();\n        }\n    }\n\n    /** Updates the position of the current tooltip. */\n    updatePosition() {\n        if (!this.overlayRef) {\n            this.overlayRef = this.createOverlay();\n        }\n        const position =\n            this.overlayRef.getConfig().positionStrategy as FlexibleConnectedPositionStrategy;\n        const origin = this.getOrigin();\n        const overlay = this.getOverlayPosition();\n\n        position.withPositions([\n            {...origin.main, ...overlay.main},\n            {...origin.fallback, ...overlay.fallback}\n        ]);\n    }\n\n    /**\n     * Returns the origin position and a fallback position based on the user's position preference.\n     * The fallback position is the inverse of the origin (e.g. `'below' -> 'above'`).\n     */\n    getOrigin(): {main: IOriginConnectionPosition; fallback: IOriginConnectionPosition} {\n        const position = this.mcPlacement;\n        const isLtr = !this.direction || this.direction.value === 'ltr';\n        let originPosition: IOriginConnectionPosition;\n\n        if (position === 'top' || position === 'bottom') {\n            originPosition = {originX: 'center', originY: position === 'top' ? 'top' : 'bottom'};\n        } else if (\n            position === 'top' ||\n            (position === 'left' && isLtr) ||\n            (position === 'right' && !isLtr)) {\n            originPosition = {originX: 'start', originY: 'center'};\n        } else if (\n            position === 'bottom' ||\n            (position === 'right' && isLtr) ||\n            (position === 'left' && !isLtr)) {\n            originPosition = {originX: 'end', originY: 'center'};\n        } else {\n            throw getMcTooltipInvalidPositionError(position);\n        }\n\n        const {x, y} = this.invertPosition(originPosition.originX, originPosition.originY);\n\n        return {\n            main: originPosition,\n            fallback: {originX: x, originY: y}\n        };\n    }\n\n    /** Returns the overlay position and a fallback position based on the user's preference */\n    getOverlayPosition(): {main: IOverlayConnectionPosition; fallback: IOverlayConnectionPosition} {\n        const position = this.mcPlacement;\n        const isLtr = !this.direction || this.direction.value === 'ltr';\n        let overlayPosition: IOverlayConnectionPosition;\n\n        if (position === 'top') {\n            overlayPosition = {overlayX: 'center', overlayY: 'bottom'};\n        } else if (position === 'bottom') {\n            overlayPosition = {overlayX: 'center', overlayY: 'top'};\n        } else if (\n            position === 'top' ||\n            (position === 'left' && isLtr) ||\n            (position === 'right' && !isLtr)) {\n            overlayPosition = {overlayX: 'end', overlayY: 'center'};\n        } else if (\n            position === 'bottom' ||\n            (position === 'right' && isLtr) ||\n            (position === 'left' && !isLtr)) {\n            overlayPosition = {overlayX: 'start', overlayY: 'center'};\n        } else {\n            throw getMcTooltipInvalidPositionError(position);\n        }\n\n        const {x, y} = this.invertPosition(overlayPosition.overlayX, overlayPosition.overlayY);\n\n        return {\n            main: overlayPosition,\n            fallback: {overlayX: x, overlayY: y}\n        };\n    }\n\n    /** Inverts an overlay position. */\n    private invertPosition(x: HorizontalConnectionPos, y: VerticalConnectionPos) {\n        let newX: HorizontalConnectionPos = x;\n        let newY: VerticalConnectionPos = y;\n        if (this.mcPlacement === 'top' || this.mcPlacement === 'bottom') {\n            if (y === 'top') {\n                newY = 'bottom';\n            } else if (y === 'bottom') {\n                newY = 'top';\n            }\n        } else {\n            if (x === 'end') {\n                newX = 'start';\n            } else if (x === 'start') {\n                newX = 'end';\n            }\n        }\n\n        return {x: newX, y: newY};\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { OverlayModule } from '@ptsecurity/cdk/overlay';\n\nimport {\n    McTooltipComponent,\n    McTooltip,\n    MC_TOOLTIP_SCROLL_STRATEGY_FACTORY_PROVIDER\n} from './tooltip.component';\n\n\n@NgModule({\n    declarations: [McTooltipComponent, McTooltip],\n    exports: [McTooltipComponent, McTooltip],\n    imports: [CommonModule, OverlayModule],\n    providers: [MC_TOOLTIP_SCROLL_STRATEGY_FACTORY_PROVIDER],\n    entryComponents: [McTooltipComponent]\n})\nexport class McToolTipModule {\n}\n","import { Version } from '@angular/core';\n\n\nexport const VERSION = new Version('1.0.0-beta.0-e8f1cdd');\n","export enum TimeParts {\n    hours,\n    minutes,\n    seconds\n}\n\nexport enum TimeFormats {\n    HHmmss = 'HH:mm:ss',\n    HHmm = 'HH:mm'\n}\n\nexport const TIMEFORMAT_PLACEHOLDERS: { [timeFormat: string]: string } = {\n    [TimeFormats.HHmmss]: '  :  :  ',\n    [TimeFormats.HHmm]: '  :  '\n};\n\nexport const DEFAULT_TIME_FORMAT: TimeFormats = TimeFormats.HHmm;\n\nexport const HOURS_MINUTES_SECONDS_REGEXP =\n    new RegExp(/^([0-9]|0[0-9]|1[0-9]|2[0-3]):([0-5][0-9]|[0-9]):([0-5][0-9]|[0-9])?$/);\nexport const HOURS_MINUTES_REGEXP = /^([0-9]|0[0-9]|1[0-9]|2[0-3]):([0-5][0-9]|[0-9])?$/;\nexport const HOURS_ONLY_REGEXP = /^([0-9]|0[0-9]|1[0-9]|2[0-3]):?$/;\n\nexport const SECONDS_PER_MINUTE: number = 59;\nexport const MINUTES_PER_HOUR: number = 59;\nexport const HOURS_PER_DAY: number = 23;\n\n// TODO Move it to common CDK\nexport const ARROW_UP_KEYCODE: string = 'ArrowUp';\nexport const ARROW_DOWN_KEYCODE: string = 'ArrowDown';\nexport const ARROW_LEFT_KEYCODE: string = 'ArrowLeft';\nexport const ARROW_RIGHT_KEYCODE: string = 'ArrowRight';\n","/* tslint:disable:no-empty */\n\nimport { ActiveDescendantKeyManager } from '@ptsecurity/cdk/a11y';\nimport { Directionality } from '@ptsecurity/cdk/bidi';\nimport { coerceBooleanProperty } from '@ptsecurity/cdk/coercion';\nimport { SelectionModel } from '@ptsecurity/cdk/collections';\nimport {\n    DOWN_ARROW,\n    END,\n    ENTER,\n    HOME,\n    LEFT_ARROW,\n    RIGHT_ARROW,\n    SPACE,\n    UP_ARROW,\n    A\n} from '@ptsecurity/cdk/keycodes';\nimport {\n    CdkConnectedOverlay,\n    Overlay,\n    RepositionScrollStrategy,\n    IScrollStrategy,\n    ViewportRuler\n} from '@ptsecurity/cdk/overlay';\n\nimport {\n    AfterContentInit, AfterViewInit,\n    Attribute,\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    ContentChild,\n    ContentChildren,\n    Directive,\n    DoCheck,\n    ElementRef,\n    EventEmitter,\n    Inject,\n    InjectionToken,\n    Input,\n    isDevMode,\n    NgZone,\n    OnChanges,\n    OnDestroy,\n    OnInit,\n    Optional,\n    Output,\n    QueryList, Renderer2,\n    Self,\n    SimpleChanges,\n    ViewChild, ViewChildren,\n    ViewEncapsulation\n} from '@angular/core';\nimport { ControlValueAccessor, FormGroupDirective, NgControl, NgForm } from '@angular/forms';\nimport {\n    _countGroupLabelsBeforeOption,\n    _getOptionScrollPosition,\n    CanDisable,\n    CanDisableCtor,\n    CanUpdateErrorState,\n    CanUpdateErrorStateCtor,\n    ErrorStateMatcher,\n    HasTabIndex, HasTabIndexCtor,\n    MC_OPTION_PARENT_COMPONENT,\n    McOptgroup,\n    McOption,\n    McOptionSelectionChange,\n    mixinDisabled,\n    mixinErrorState,\n    mixinTabIndex\n} from '@ptsecurity/mosaic/core';\n\nimport { McFormField, McFormFieldControl } from '@ptsecurity/mosaic/form-field';\nimport { McTag } from '@ptsecurity/mosaic/tag';\n\n\nimport { defer, merge, Observable, Subject } from 'rxjs';\nimport {\n    filter,\n    map,\n    startWith,\n    switchMap,\n    take,\n    takeUntil,\n    distinctUntilChanged\n} from 'rxjs/operators';\n\nimport {\n    getMcSelectDynamicMultipleError,\n    getMcSelectNonArrayValueError,\n    getMcSelectNonFunctionValueError\n} from './select-errors';\n\nimport { mcSelectAnimations } from './select-animations';\n\n\nlet nextUniqueId = 0;\n\n/**\n * The following style constants are necessary to save here in order\n * to properly calculate the alignment of the selected option over\n * the trigger element.\n */\n\n/** The max height of the select's overlay panel */\nexport const SELECT_PANEL_MAX_HEIGHT = 224;\n\n/** The panel's padding on the x-axis */\nexport const SELECT_PANEL_PADDING_X = 1;\n\n/** The panel's x axis padding if it is indented (e.g. there is an option group). */\n/* tslint:disable-next-line:no-magic-numbers */\nexport const SELECT_PANEL_INDENT_PADDING_X = SELECT_PANEL_PADDING_X * 2;\n\n/** The height of the select items in `em` units. */\nexport const SELECT_ITEM_HEIGHT_EM = 2;\n\n/**\n * The select panel will only \"fit\" inside the viewport if it is positioned at\n * this value or more away from the viewport boundary.\n */\nexport const SELECT_PANEL_VIEWPORT_PADDING = 8;\n\n/** Injection token that determines the scroll handling while a select is open. */\nexport const MC_SELECT_SCROLL_STRATEGY =\n    new InjectionToken<() => IScrollStrategy>('mc-select-scroll-strategy');\n\n/** @docs-private */\nexport function MC_SELECT_SCROLL_STRATEGY_PROVIDER_FACTORY(overlay: Overlay):\n    () => RepositionScrollStrategy {\n    return () => overlay.scrollStrategies.reposition();\n}\n\n/** @docs-private */\nexport const MC_SELECT_SCROLL_STRATEGY_PROVIDER = {\n    provide: MC_SELECT_SCROLL_STRATEGY,\n    deps: [Overlay],\n    useFactory: MC_SELECT_SCROLL_STRATEGY_PROVIDER_FACTORY\n};\n\n/** Change event object that is emitted when the select value has changed. */\nexport class McSelectChange {\n    constructor(\n        /** Reference to the select that emitted the change event. */\n        public source: McSelect,\n        /** Current value of the select that emitted the event. */\n        public value: any) {\n    }\n}\n\n// Boilerplate for applying mixins to McSelect.\n/** @docs-private */\nexport class McSelectBase {\n    constructor(\n        public _elementRef: ElementRef,\n        public _defaultErrorStateMatcher: ErrorStateMatcher,\n        public _parentForm: NgForm,\n        public _parentFormGroup: FormGroupDirective,\n        public ngControl: NgControl\n    ) {}\n}\n\nexport const _McSelectMixinBase:\n    CanDisableCtor &\n    HasTabIndexCtor &\n    CanUpdateErrorStateCtor & typeof McSelectBase\n    = mixinTabIndex(mixinDisabled(mixinErrorState(McSelectBase)));\n\n\n/**\n * Allows the user to customize the trigger that is displayed when the select has a value.\n */\n@Directive({ selector: 'mc-select-trigger' })\nexport class McSelectTrigger {}\n\n\n@Component({\n    selector: 'mc-select',\n    exportAs: 'mcSelect',\n    templateUrl: 'select.html',\n    styleUrls: ['./select.css'],\n    inputs: ['disabled', 'tabIndex'],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    host: {\n        '[attr.id]': 'id',\n        '[attr.tabindex]': 'tabIndex',\n        class: 'mc-select',\n        '[class.mc-disabled]': 'disabled',\n        '[class.mc-select-invalid]': 'errorState',\n        '[class.mc-select-required]': 'required',\n        '(keydown)': '_handleKeydown($event)',\n        '(focus)': '_onFocus()',\n        '(blur)': '_onBlur()',\n        '(window:resize)': '_calculateHiddenItems()'\n    },\n    animations: [\n        mcSelectAnimations.transformPanel,\n        mcSelectAnimations.fadeInContent\n    ],\n    providers: [\n        { provide: McFormFieldControl, useExisting: McSelect },\n        { provide: MC_OPTION_PARENT_COMPONENT, useExisting: McSelect }\n    ]\n})\nexport class McSelect extends _McSelectMixinBase implements\n    AfterContentInit, AfterViewInit, OnChanges, OnDestroy, OnInit, DoCheck, ControlValueAccessor, CanDisable,\n    HasTabIndex, McFormFieldControl<any>, CanUpdateErrorState {\n\n    /** The last measured value for the trigger's client bounding rect. */\n    _triggerRect: ClientRect;\n\n    /** The cached font-size of the trigger element. */\n    _triggerFontSize = 0;\n\n    /** Deals with the selection logic. */\n    _selectionModel: SelectionModel<McOption>;\n\n    /** Manages keyboard events for options in the panel. */\n    _keyManager: ActiveDescendantKeyManager<McOption>;\n\n    /** The IDs of child options to be passed to the aria-owns attribute. */\n    _optionIds: string = '';\n\n    /** The value of the select panel's transform-origin property. */\n    _transformOrigin: string = 'top';\n\n    /** Whether the panel's animation is done. */\n    _panelDoneAnimating: boolean = false;\n\n    /** Emits when the panel element is finished transforming in. */\n    _panelDoneAnimatingStream = new Subject<string>();\n\n    /** Strategy that will be used to handle scrolling while the select panel is open. */\n    _scrollStrategy = this._scrollStrategyFactory();\n\n    /**\n     * The y-offset of the overlay panel in relation to the trigger's top start corner.\n     * This must be adjusted to align the selected option text over the trigger text.\n     * when the panel opens. Will change based on the y-position of the selected option.\n     */\n    _offsetY = 0;\n\n    /**\n     * This position config ensures that the top \"start\" corner of the overlay\n     * is aligned with with the top \"start\" of the origin by default (overlapping\n     * the trigger completely). If the panel cannot fit below the trigger, it\n     * will fall back to a position above the trigger.\n     */\n    _positions = [\n        {\n            originX: 'start',\n            originY: 'bottom',\n            overlayX: 'start',\n            overlayY: 'top'\n        },\n        {\n            originX: 'start',\n            originY: 'top',\n            overlayX: 'start',\n            overlayY: 'bottom'\n        }\n    ];\n\n    /** Whether the select is focused. */\n    get focused(): boolean {\n        return this._focused || this._panelOpen;\n    }\n\n    /**\n     * @deprecated Setter to be removed as this property is intended to be readonly.\n     * @breaking-change 8.0.0\n     */\n    set focused(value: boolean) {\n        this._focused = value;\n    }\n\n    /** A name for this control that can be used by `mc-form-field`. */\n    controlType = 'mc-select';\n\n    @ViewChild('trigger') trigger: ElementRef;\n    @ViewChildren(McTag) tags: QueryList<McTag>;\n\n    @ViewChild('panel') panel: ElementRef;\n\n    /** Overlay pane containing the options. */\n    @ViewChild(CdkConnectedOverlay) overlayDir: CdkConnectedOverlay;\n\n    /** All of the defined select options. */\n    @ContentChildren(McOption, { descendants: true }) options: QueryList<McOption>;\n\n    /** All of the defined groups of options. */\n    @ContentChildren(McOptgroup) optionGroups: QueryList<McOptgroup>;\n\n    /** Classes to be passed to the select panel. Supports the same syntax as `ngClass`. */\n    @Input() panelClass: string | string[] | Set<string> | { [key: string]: any };\n\n    /** User-supplied override of the trigger element. */\n    @ContentChild(McSelectTrigger) customTrigger: McSelectTrigger;\n\n    /** Placeholder to be shown if no value has been selected. */\n    @Input()\n    get placeholder(): string {\n        return this._placeholder;\n    }\n\n    set placeholder(value: string) {\n        this._placeholder = value;\n        this.stateChanges.next();\n    }\n\n    /** Whether the component is required. */\n    @Input()\n    get required(): boolean {\n        return this._required;\n    }\n\n    set required(value: boolean) {\n        this._required = coerceBooleanProperty(value);\n        this.stateChanges.next();\n    }\n\n    /** Whether the user should be allowed to select multiple options. */\n    @Input()\n    get multiple(): boolean {\n        return this._multiple;\n    }\n\n    set multiple(value: boolean) {\n        if (this._selectionModel) {\n            throw getMcSelectDynamicMultipleError();\n        }\n\n        this._multiple = coerceBooleanProperty(value);\n    }\n\n    /**\n     * Function to compare the option values with the selected values. The first argument\n     * is a value from an option. The second is a value from the selection. A boolean\n     * should be returned.\n     */\n    @Input()\n    get compareWith() {\n        return this._compareWith;\n    }\n\n    set compareWith(fn: (o1: any, o2: any) => boolean) {\n        /* tslint:disable-next-line:strict-type-predicates */\n        if (typeof fn !== 'function') {\n            throw getMcSelectNonFunctionValueError();\n        }\n\n        this._compareWith = fn;\n\n        if (this._selectionModel) {\n            // A different comparator means the selection could change.\n            this._initializeSelection();\n        }\n    }\n\n    /** Value of the select control. */\n    @Input()\n    get value(): any {\n        return this._value;\n    }\n\n    set value(newValue: any) {\n        if (newValue !== this._value) {\n            this.writeValue(newValue);\n            this._value = newValue;\n        }\n    }\n\n    /** Object used to control when error messages are shown. */\n    @Input() errorStateMatcher: ErrorStateMatcher;\n\n    /**\n     * Function used to sort the values in a select in multiple mode.\n     * Follows the same logic as `Array.prototype.sort`.\n     */\n    @Input() sortComparator: (a: McOption, b: McOption, options: McOption[]) => number;\n\n    @Input()\n    get id(): string {\n        return this._id;\n    }\n\n    set id(value: string) {\n        this._id = value || this._uid;\n        this.stateChanges.next();\n    }\n\n    /** Combined stream of all of the child options' change events. */\n    readonly optionSelectionChanges: Observable<McOptionSelectionChange> = defer(() => {\n        if (this.options) {\n            return merge(...this.options.map((option) => option.onSelectionChange));\n        }\n\n        return this._ngZone.onStable\n            .asObservable()\n            .pipe(take(1), switchMap(() => this.optionSelectionChanges));\n    });\n\n    /** Event emitted when the select panel has been toggled. */\n    @Output() readonly openedChange: EventEmitter<boolean> = new EventEmitter<boolean>();\n\n    /** Event emitted when the select has been opened. */\n    @Output('opened') readonly _openedStream: Observable<void> =\n        this.openedChange.pipe(filter((o) => o), map(() => {}));\n\n    /** Event emitted when the select has been closed. */\n    @Output('closed') readonly _closedStream: Observable<void> =\n        this.openedChange.pipe(filter((o) => !o), map(() => {}));\n\n    /** Event emitted when the selected value has been changed by the user. */\n    @Output() readonly selectionChange: EventEmitter<McSelectChange> = new EventEmitter<McSelectChange>();\n\n    /**\n     * Event that emits whenever the raw value of the select changes. This is here primarily\n     * to facilitate the two-way binding for the `value` input.\n     * @docs-private\n     */\n    @Output() readonly valueChange: EventEmitter<any> = new EventEmitter<any>();\n\n    hiddenItems: number = 0;\n    oneMoreText: string = '...ещё';\n\n    /** Whether or not the overlay panel is open. */\n    private _panelOpen = false;\n\n    /** Whether filling out the select is required in the form. */\n    private _required: boolean = false;\n\n    /** The scroll position of the overlay panel, calculated to center the selected option. */\n    private _scrollTop = 0;\n\n    /** The placeholder displayed in the trigger of the select. */\n    private _placeholder: string;\n\n    /** Whether the component is in multiple selection mode. */\n    private _multiple: boolean = false;\n\n    /** Unique id for this input. */\n    private readonly _uid = `mc-select-${nextUniqueId++}`;\n\n    /** Emits whenever the component is destroyed. */\n    private readonly _destroy = new Subject<void>();\n\n    private _focused = false;\n\n    private _value: any;\n\n    private _id: string;\n\n    constructor(\n        private readonly _viewportRuler: ViewportRuler,\n        private readonly _changeDetectorRef: ChangeDetectorRef,\n        private readonly _ngZone: NgZone,\n        private readonly _renderer: Renderer2,\n        _defaultErrorStateMatcher: ErrorStateMatcher,\n        elementRef: ElementRef,\n        @Optional() private readonly _dir: Directionality,\n        @Optional() _parentForm: NgForm,\n        @Optional() _parentFormGroup: FormGroupDirective,\n        @Optional() private readonly _parentFormField: McFormField,\n        @Self() @Optional() public ngControl: NgControl,\n        @Attribute('tabindex') tabIndex: string,\n        @Inject(MC_SELECT_SCROLL_STRATEGY) private readonly _scrollStrategyFactory\n    ) {\n        super(elementRef, _defaultErrorStateMatcher, _parentForm, _parentFormGroup, ngControl);\n\n        if (this.ngControl) {\n            // Note: we provide the value accessor through here, instead of\n            // the `providers` to avoid running into a circular import.\n            this.ngControl.valueAccessor = this;\n        }\n\n        this.tabIndex = parseInt(tabIndex) || 0;\n\n        // Force setter to be called in case id was not specified.\n        this.id = this.id;\n    }\n\n    ngOnInit() {\n        this._selectionModel = new SelectionModel<McOption>(this.multiple);\n        this.stateChanges.next();\n\n        // We need `distinctUntilChanged` here, because some browsers will\n        // fire the animation end event twice for the same animation. See:\n        // https://github.com/angular/angular/issues/24084\n        this._panelDoneAnimatingStream\n            .pipe(distinctUntilChanged(), takeUntil(this._destroy))\n            .subscribe(() => {\n                if (this.panelOpen) {\n                    this._scrollTop = 0;\n                    this.openedChange.emit(true);\n                } else {\n                    this.openedChange.emit(false);\n                    this._panelDoneAnimating = false;\n                    this.overlayDir.offsetX = 0;\n                    this._changeDetectorRef.markForCheck();\n                }\n            });\n    }\n\n    ngAfterContentInit() {\n        this._initKeyManager();\n\n        this._selectionModel.onChange!\n            .pipe(takeUntil(this._destroy))\n            .subscribe((event) => {\n                event.added.forEach((option) => option.select());\n                event.removed.forEach((option) => option.deselect());\n            });\n\n        this.options.changes\n            .pipe(startWith(null), takeUntil(this._destroy))\n            .subscribe(() => {\n                this._resetOptions();\n                this._initializeSelection();\n            });\n    }\n\n    ngAfterViewInit(): void {\n        this.tags.changes\n            .subscribe(() => {\n                setTimeout(() => this._calculateHiddenItems(), 0);\n            });\n    }\n\n    ngDoCheck() {\n        if (this.ngControl) { this.updateErrorState(); }\n    }\n\n    ngOnChanges(changes: SimpleChanges) {\n        // Updating the disabled state is handled by `mixinDisabled`, but we need to additionally let\n        // the parent form field know to run change detection when the disabled state changes.\n        if (changes.disabled) {\n            this.stateChanges.next();\n        }\n    }\n\n    ngOnDestroy() {\n        this._destroy.next();\n        this._destroy.complete();\n        this.stateChanges.complete();\n    }\n\n    /** `View -> model callback called when value changes` */\n    _onChange: (value: any) => void = () => {};\n\n    /** `View -> model callback called when select has been touched` */\n    _onTouched = () => {};\n\n    /** Toggles the overlay panel open or closed. */\n    toggle(): void {\n        if (this.panelOpen) {\n            this.close();\n        } else {\n            this.open();\n        }\n    }\n\n    /** Opens the overlay panel. */\n    open(): void {\n        if (this.disabled || !this.options || !this.options.length || this._panelOpen) { return; }\n\n        this._triggerRect = this.trigger.nativeElement.getBoundingClientRect();\n        // Note: The computed font-size will be a string pixel value (e.g. \"16px\").\n        // `parseInt` ignores the trailing 'px' and converts this to a number.\n        this._triggerFontSize = parseInt(getComputedStyle(this.trigger.nativeElement)['font-size']);\n\n        this._panelOpen = true;\n        this._keyManager.withHorizontalOrientation(null);\n        this._calculateOverlayPosition();\n        this._highlightCorrectOption();\n        this._changeDetectorRef.markForCheck();\n\n        // Set the font size on the panel element once it exists.\n        this._ngZone.onStable.asObservable()\n            .pipe(take(1))\n            .subscribe(() => {\n                if (this._triggerFontSize && this.overlayDir.overlayRef &&\n                    this.overlayDir.overlayRef.overlayElement) {\n                    this.overlayDir.overlayRef.overlayElement.style.fontSize = `${this._triggerFontSize}px`;\n                }\n            });\n    }\n\n    /** Closes the overlay panel and focuses the host element. */\n    close(): void {\n        if (this._panelOpen) {\n            this._panelOpen = false;\n            this._keyManager.withHorizontalOrientation(this._isRtl() ? 'rtl' : 'ltr');\n            this._changeDetectorRef.markForCheck();\n            this._onTouched();\n        }\n    }\n\n    /**\n     * Sets the select's value. Part of the ControlValueAccessor interface\n     * required to integrate with Angular's core forms API.\n     *\n     * @param value New value to be written to the model.\n     */\n    writeValue(value: any): void {\n        if (this.options) {\n            this._setSelectionByValue(value);\n        }\n    }\n\n    /**\n     * Saves a callback function to be invoked when the select's value\n     * changes from user input. Part of the ControlValueAccessor interface\n     * required to integrate with Angular's core forms API.\n     *\n     * @param fn Callback to be triggered when the value changes.\n     */\n    registerOnChange(fn: (value: any) => void): void {\n        this._onChange = fn;\n    }\n\n    /**\n     * Saves a callback function to be invoked when the select is blurred\n     * by the user. Part of the ControlValueAccessor interface required\n     * to integrate with Angular's core forms API.\n     *\n     * @param fn Callback to be triggered when the component has been touched.\n     */\n    registerOnTouched(fn: () => {}): void {\n        this._onTouched = fn;\n    }\n\n    /**\n     * Disables the select. Part of the ControlValueAccessor interface required\n     * to integrate with Angular's core forms API.\n     *\n     * @param isDisabled Sets whether the component is disabled.\n     */\n    setDisabledState(isDisabled: boolean): void {\n        this.disabled = isDisabled;\n        this._changeDetectorRef.markForCheck();\n        this.stateChanges.next();\n    }\n\n    get panelOpen(): boolean {\n        return this._panelOpen;\n    }\n\n    get selected(): McOption | McOption[] {\n        return this.multiple ? this._selectionModel.selected : this._selectionModel.selected[0];\n    }\n\n    get triggerValue(): string {\n        if (this.empty) { return ''; }\n\n        if (this._multiple) {\n            const selectedOptions = this._selectionModel.selected.map((option) => option.viewValue);\n\n            if (this._isRtl()) { selectedOptions.reverse(); }\n\n            return selectedOptions.join(', ');\n        }\n\n        return this._selectionModel.selected[0].viewValue;\n    }\n\n    get triggerValues(): McOption[] {\n        if (this.empty) { return []; }\n\n        if (this._multiple) {\n            const selectedOptions = this._selectionModel.selected;\n\n            if (this._isRtl()) { selectedOptions.reverse(); }\n\n            return selectedOptions;\n        }\n\n        return [this._selectionModel.selected[0]];\n    }\n\n    get empty(): boolean {\n        return !this._selectionModel || this._selectionModel.isEmpty();\n    }\n\n    _isRtl(): boolean {\n        return this._dir ? this._dir.value === 'rtl' : false;\n    }\n\n    _handleKeydown(event: KeyboardEvent): void {\n        if (!this.disabled) {\n            if (this.panelOpen) {\n                this._handleOpenKeydown(event);\n            } else {\n                this._handleClosedKeydown(event);\n            }\n        }\n    }\n\n    /**\n     * When the panel content is done fading in, the _panelDoneAnimating property is\n     * set so the proper class can be added to the panel.\n     */\n    _onFadeInDone(): void {\n        this._panelDoneAnimating = this.panelOpen;\n        this._changeDetectorRef.markForCheck();\n    }\n\n    _onFocus() {\n        if (!this.disabled) {\n            this._focused = true;\n            this.stateChanges.next();\n        }\n    }\n\n    /**\n     * Calls the touched callback only if the panel is closed. Otherwise, the trigger will\n     * \"blur\" to the panel when it opens, causing a false positive.\n     */\n    _onBlur() {\n        this._focused = false;\n\n        if (!this.disabled && !this.panelOpen) {\n            this._onTouched();\n            this._changeDetectorRef.markForCheck();\n            this.stateChanges.next();\n        }\n    }\n\n    /**\n     * Callback that is invoked when the overlay panel has been attached.\n     */\n    _onAttached(): void {\n        this.overlayDir.positionChange\n            .pipe(take(1))\n            .subscribe(() => {\n                this._changeDetectorRef.detectChanges();\n                this._calculateOverlayOffsetX();\n                this.panel.nativeElement.scrollTop = this._scrollTop;\n            });\n    }\n\n    /** Returns the theme to be used on the panel. */\n    _getPanelTheme(): string {\n        return this._parentFormField ? `mc-${this._parentFormField.color}` : '';\n    }\n\n    /** Focuses the select element. */\n    focus(): void {\n        this._elementRef.nativeElement.focus();\n    }\n\n    /**\n     * Calculates the scroll position of the select's overlay panel.\n     *\n     * Attempts to center the selected option in the panel. If the option is\n     * too high or too low in the panel to be scrolled to the center, it clamps the\n     * scroll position to the min or max scroll positions respectively.\n     */\n    _calculateOverlayScroll(selectedIndex: number, scrollBuffer: number, maxScroll: number): number {\n        const itemHeight = this._getItemHeight();\n        const optionOffsetFromScrollTop = itemHeight * selectedIndex;\n\n        /* tslint:disable-next-line:no-magic-numbers */\n        const halfOptionHeight = itemHeight / 2;\n\n        // Starts at the optionOffsetFromScrollTop, which scrolls the option to the top of the\n        // scroll container, then subtracts the scroll buffer to scroll the option down to\n        // the center of the overlay panel. Half the option height must be re-added to the\n        // scrollTop so the option is centered based on its middle, not its top edge.\n        const optimalScrollPosition = optionOffsetFromScrollTop - scrollBuffer + halfOptionHeight;\n\n        return Math.min(Math.max(0, optimalScrollPosition), maxScroll);\n    }\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    onContainerClick() {\n        this.focus();\n        this.open();\n    }\n\n    /** Invoked when an option is clicked. */\n    onRemoveMatcherItem(option: McOption, $event): void {\n        $event.stopPropagation();\n\n        option.deselect();\n    }\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    get shouldLabelFloat(): boolean {\n        return this._panelOpen || !this.empty;\n    }\n\n    _calculateHiddenItems(): void {\n        if (this.empty) { return; }\n\n        let visibleItems: number = 0;\n        const totalItemsWidth = this._getTotalItemsWidthInMatcher();\n        let totalVisibleItemsWidth: number = 0;\n        const itemMargin: number = 4;\n\n        this.tags.forEach((tag) => {\n            if (tag.nativeElement.offsetTop < tag.nativeElement.offsetHeight) {\n                totalVisibleItemsWidth += tag.nativeElement.getBoundingClientRect().width + itemMargin;\n                visibleItems++;\n            }\n        });\n\n        this.hiddenItems = (this.selected as ArrayLike<McOption>).length - visibleItems;\n\n        if (this.hiddenItems) {\n            const itemsCounter = this.trigger.nativeElement.querySelector('.mc-select__match-hidden-text');\n            const matcherList = this.trigger.nativeElement.querySelector('.mc-select__match-list');\n\n            const itemsCounterShowed = itemsCounter.offsetTop < itemsCounter.offsetHeight;\n            // const itemsCounterWidth: number = itemsCounter.getBoundingClientRect().width;\n            const itemsCounterWidth: number = 86;\n\n            const matcherListWidth: number = matcherList.getBoundingClientRect().width;\n            const matcherWidth: number = matcherListWidth + itemsCounterWidth;\n\n            if (itemsCounterShowed && (totalItemsWidth < matcherWidth)) { this.hiddenItems = 0; }\n\n            if (\n                totalVisibleItemsWidth === matcherListWidth ||\n                (totalVisibleItemsWidth + itemsCounterWidth) < matcherListWidth\n            ) {\n                this._changeDetectorRef.markForCheck();\n\n                return ;\n            } else if (!itemsCounterShowed && (totalItemsWidth + itemsCounterWidth) > matcherWidth) {\n                this.hiddenItems++;\n            }\n        }\n\n        this._changeDetectorRef.markForCheck();\n    }\n\n    private _getTotalItemsWidthInMatcher(): number {\n        const triggerClone = this.trigger.nativeElement.cloneNode(true);\n        triggerClone.querySelector('.mc-select__match-hidden-text').remove();\n\n        this._renderer.setStyle(triggerClone, 'position', 'absolute');\n        this._renderer.setStyle(triggerClone, 'visibility', 'hidden');\n        this._renderer.setStyle(triggerClone, 'top', '-100%');\n        this._renderer.setStyle(triggerClone, 'left', '0');\n\n        this._renderer.appendChild(this.trigger.nativeElement, triggerClone);\n\n        let totalItemsWidth: number = 0;\n        const itemMargin: number = 4;\n        triggerClone.querySelectorAll('mc-tag').forEach((item) => {\n            totalItemsWidth += item.getBoundingClientRect().width as number + itemMargin;\n        });\n\n        triggerClone.remove();\n\n        return totalItemsWidth;\n    }\n\n    /** Handles keyboard events while the select is closed. */\n    private _handleClosedKeydown(event: KeyboardEvent): void {\n        /* tslint:disable-next-line */\n        const keyCode = event.keyCode;\n        const isArrowKey = keyCode === DOWN_ARROW || keyCode === UP_ARROW ||\n            keyCode === LEFT_ARROW || keyCode === RIGHT_ARROW;\n        const isOpenKey = keyCode === ENTER || keyCode === SPACE;\n\n        // Open the select on ALT + arrow key to match the native <select>\n        if (isOpenKey || ((this.multiple || event.altKey) && isArrowKey)) {\n            event.preventDefault(); // prevents the page from scrolling down when pressing space\n            this.open();\n        } else if (!this.multiple) {\n            this._keyManager.onKeydown(event);\n        }\n    }\n\n    /** Handles keyboard events when the selected is open. */\n    private _handleOpenKeydown(event: KeyboardEvent): void {\n        /* tslint:disable-next-line */\n        const keyCode = event.keyCode;\n        const isArrowKey = keyCode === DOWN_ARROW || keyCode === UP_ARROW;\n        const manager = this._keyManager;\n\n        if (keyCode === HOME || keyCode === END) {\n            event.preventDefault();\n\n            if (keyCode === HOME) {\n                manager.setFirstItemActive();\n            } else {\n                manager.setLastItemActive();\n            }\n\n        } else if (isArrowKey && event.altKey) {\n            // Close the select on ALT + arrow key to match the native <select>\n            event.preventDefault();\n            this.close();\n        } else if ((keyCode === ENTER || keyCode === SPACE) && manager.activeItem) {\n            event.preventDefault();\n            manager.activeItem._selectViaInteraction();\n        } else if (this._multiple && keyCode === A && event.ctrlKey) {\n            event.preventDefault();\n            const hasDeselectedOptions = this.options.some((option) => !option.selected);\n            this.options.forEach((option) => {\n                if (hasDeselectedOptions && !option.disabled) {\n                    option.select();\n                } else {\n                    option.deselect();\n                }\n            });\n        } else {\n            const previouslyFocusedIndex = manager.activeItemIndex;\n\n            manager.onKeydown(event);\n\n            if (this._multiple && isArrowKey && event.shiftKey && manager.activeItem &&\n                manager.activeItemIndex !== previouslyFocusedIndex) {\n                manager.activeItem._selectViaInteraction();\n            }\n        }\n    }\n\n    private _initializeSelection(): void {\n        // Defer setting the value in order to avoid the \"Expression\n        // has changed after it was checked\" errors from Angular.\n        Promise.resolve().then(() => {\n            this._setSelectionByValue(this.ngControl ? this.ngControl.value : this._value);\n        });\n    }\n\n    /**\n     * Sets the selected option based on a value. If no option can be\n     * found with the designated value, the select trigger is cleared.\n     */\n    private _setSelectionByValue(value: any | any[]): void {\n        if (this.multiple && value) {\n            if (!Array.isArray(value)) {\n                throw getMcSelectNonArrayValueError();\n            }\n\n            this._selectionModel.clear();\n            value.forEach((currentValue: any) => this._selectValue(currentValue));\n            this._sortValues();\n        } else {\n            this._selectionModel.clear();\n            const correspondingOption = this._selectValue(value);\n\n            // Shift focus to the active item. Note that we shouldn't do this in multiple\n            // mode, because we don't know what option the user interacted with last.\n            if (correspondingOption) {\n                this._keyManager.setActiveItem(correspondingOption);\n            }\n        }\n\n        this._changeDetectorRef.markForCheck();\n    }\n\n    /**\n     * Finds and selects and option based on its value.\n     * @returns Option that has the corresponding value.\n     */\n    private _selectValue(value: any): McOption | undefined {\n        const correspondingOption = this.options.find((option: McOption) => {\n            try {\n                // Treat null as a special reset value.\n                return option.value != null && this._compareWith(option.value, value);\n            } catch (error) {\n                if (isDevMode()) {\n                    // Notify developers of errors in their comparator.\n                    console.warn(error);\n                }\n\n                return false;\n            }\n        });\n\n        if (correspondingOption) {\n            this._selectionModel.select(correspondingOption);\n        }\n\n        return correspondingOption;\n    }\n\n    /** Sets up a key manager to listen to keyboard events on the overlay panel. */\n    private _initKeyManager() {\n        this._keyManager = new ActiveDescendantKeyManager<McOption>(this.options)\n            .withTypeAhead()\n            .withVerticalOrientation()\n            .withHorizontalOrientation(this._isRtl() ? 'rtl' : 'ltr');\n\n        this._keyManager.tabOut\n            .pipe(takeUntil(this._destroy))\n            .subscribe(() => {\n                // Restore focus to the trigger before closing. Ensures that the focus\n                // position won't be lost if the user got focus into the overlay.\n                this.focus();\n                this.close();\n            });\n\n        this._keyManager.change\n            .pipe(takeUntil(this._destroy))\n            .subscribe(() => {\n                if (this._panelOpen && this.panel) {\n                    this._scrollActiveOptionIntoView();\n                } else if (!this._panelOpen && !this.multiple && this._keyManager.activeItem) {\n                    this._keyManager.activeItem._selectViaInteraction();\n                }\n            });\n    }\n\n    /** Drops current option subscriptions and IDs and resets from scratch. */\n    private _resetOptions(): void {\n        const changedOrDestroyed = merge(this.options.changes, this._destroy);\n\n        this.optionSelectionChanges\n            .pipe(takeUntil(changedOrDestroyed))\n            .subscribe((event) => {\n                this._onSelect(event.source, event.isUserInput);\n\n                if (event.isUserInput && !this.multiple && this._panelOpen) {\n                    this.close();\n                    this.focus();\n                }\n            });\n\n        // Listen to changes in the internal state of the options and react accordingly.\n        // Handles cases like the labels of the selected options changing.\n        merge(...this.options.map((option) => option._stateChanges))\n            .pipe(takeUntil(changedOrDestroyed))\n            .subscribe(() => {\n                this._changeDetectorRef.markForCheck();\n                this.stateChanges.next();\n            });\n\n        this._setOptionIds();\n    }\n\n    /** Invoked when an option is clicked. */\n    private _onSelect(option: McOption, isUserInput: boolean): void {\n        const wasSelected = this._selectionModel.isSelected(option);\n\n        if (option.value == null && !this._multiple) {\n            option.deselect();\n            this._selectionModel.clear();\n            this._propagateChanges(option.value);\n        } else {\n            if (option.selected) {\n                this._selectionModel.select(option);\n            } else {\n                this._selectionModel.deselect(option);\n            }\n\n            if (isUserInput) {\n                this._keyManager.setActiveItem(option);\n            }\n\n            if (this.multiple) {\n                this._sortValues();\n\n                if (isUserInput) {\n                    // In case the user selected the option with their mouse, we\n                    // want to restore focus back to the trigger, in order to\n                    // prevent the select keyboard controls from clashing with\n                    // the ones from `mc-option`.\n                    this.focus();\n                }\n            }\n        }\n\n        if (wasSelected !== this._selectionModel.isSelected(option)) {\n            this._propagateChanges();\n        }\n\n        this.stateChanges.next();\n    }\n\n    /** Sorts the selected values in the selected based on their order in the panel. */\n    private _sortValues() {\n        if (this.multiple) {\n            const options = this.options.toArray();\n\n            this._selectionModel.sort((a, b) => {\n                return this.sortComparator ? this.sortComparator(a, b, options) :\n                    options.indexOf(a) - options.indexOf(b);\n            });\n            this.stateChanges.next();\n        }\n    }\n\n    /** Emits change event to set the model value. */\n    private _propagateChanges(fallbackValue?: any): void {\n        let valueToEmit: any = null;\n\n        if (this.multiple) {\n            valueToEmit = (this.selected as McOption[]).map((option) => option.value);\n        } else {\n            valueToEmit = this.selected ? (this.selected as McOption).value : fallbackValue;\n        }\n\n        this._value = valueToEmit;\n        this.valueChange.emit(valueToEmit);\n        this._onChange(valueToEmit);\n        this.selectionChange.emit(new McSelectChange(this, valueToEmit));\n        this._changeDetectorRef.markForCheck();\n    }\n\n    /** Records option IDs to pass to the aria-owns property. */\n    private _setOptionIds() {\n        this._optionIds = this.options.map((option) => option.id).join(' ');\n    }\n\n    /**\n     * Highlights the selected item. If no option is selected, it will highlight\n     * the first item instead.\n     */\n    private _highlightCorrectOption(): void {\n        if (this._keyManager) {\n            if (this.empty) {\n                this._keyManager.setFirstItemActive();\n            } else {\n                this._keyManager.setActiveItem(this._selectionModel.selected[0]);\n            }\n        }\n    }\n\n    /** Scrolls the active option into view. */\n    private _scrollActiveOptionIntoView(): void {\n        const activeOptionIndex = this._keyManager.activeItemIndex || 0;\n        const labelCount = _countGroupLabelsBeforeOption(activeOptionIndex, this.options, this.optionGroups);\n\n        this.panel.nativeElement.scrollTop = _getOptionScrollPosition(\n            activeOptionIndex + labelCount,\n            this._getItemHeight(),\n            this.panel.nativeElement.scrollTop,\n            SELECT_PANEL_MAX_HEIGHT\n        );\n    }\n\n    /** Gets the index of the provided option in the option list. */\n    private _getOptionIndex(option: McOption): number | undefined {\n        /* tslint:disable-next-line */\n        return this.options.reduce((result: number, current: McOption, index: number) => {\n            /* tslint:disable-next-line:strict-type-predicates */\n            return result === undefined ? (option === current ? index : undefined) : result;\n        }, undefined);\n    }\n\n    /** Calculates the scroll position and x- and y-offsets of the overlay panel. */\n    private _calculateOverlayPosition(): void {\n        const itemHeight = this._getItemHeight();\n        const items = this._getItemCount();\n        const panelHeight = Math.min(items * itemHeight, SELECT_PANEL_MAX_HEIGHT);\n        const scrollContainerHeight = items * itemHeight;\n\n        // The farthest the panel can be scrolled before it hits the bottom\n        const maxScroll = scrollContainerHeight - panelHeight;\n\n        // If no value is selected we open the popup to the first item.\n        let selectedOptionOffset =\n            this.empty ? 0 : this._getOptionIndex(this._selectionModel.selected[0])!;\n\n        selectedOptionOffset += _countGroupLabelsBeforeOption(selectedOptionOffset, this.options,\n            this.optionGroups);\n\n        // We must maintain a scroll buffer so the selected option will be scrolled to the\n        // center of the overlay panel rather than the top.\n        /* tslint:disable-next-line:no-magic-numbers */\n        const scrollBuffer = panelHeight / 2;\n        this._scrollTop = this._calculateOverlayScroll(selectedOptionOffset, scrollBuffer, maxScroll);\n        this._offsetY = this._calculateOverlayOffsetY();\n\n        this._checkOverlayWithinViewport(maxScroll);\n    }\n\n    /**\n     * Sets the x-offset of the overlay panel in relation to the trigger's top start corner.\n     * This must be adjusted to align the selected option text over the trigger text when\n     * the panel opens. Will change based on LTR or RTL text direction. Note that the offset\n     * can't be calculated until the panel has been attached, because we need to know the\n     * content width in order to constrain the panel within the viewport.\n     */\n    private _calculateOverlayOffsetX(): void {\n        const overlayRect = this.overlayDir.overlayRef.overlayElement.getBoundingClientRect();\n        const viewportSize = this._viewportRuler.getViewportSize();\n        const isRtl = this._isRtl();\n        /* tslint:disable-next-line:no-magic-numbers */\n        const paddingWidth = SELECT_PANEL_PADDING_X * 2;\n        let offsetX: number;\n\n        const selected = this._selectionModel.selected[0] || this.options.first;\n        offsetX = selected && selected.group ? SELECT_PANEL_INDENT_PADDING_X : SELECT_PANEL_PADDING_X;\n\n        // Invert the offset in LTR.\n        if (!isRtl) { offsetX *= -1; }\n\n        // Determine how much the select overflows on each side.\n        const leftOverflow = 0 - (overlayRect.left + offsetX - (isRtl ? paddingWidth : 0));\n        const rightOverflow = overlayRect.right + offsetX - viewportSize.width\n            + (isRtl ? 0 : paddingWidth);\n\n        // If the element overflows on either side, reduce the offset to allow it to fit.\n        if (leftOverflow > 0) {\n            offsetX += leftOverflow + SELECT_PANEL_VIEWPORT_PADDING;\n        } else if (rightOverflow > 0) {\n            offsetX -= rightOverflow + SELECT_PANEL_VIEWPORT_PADDING;\n        }\n\n        // Set the offset directly in order to avoid having to go through change detection and\n        // potentially triggering \"changed after it was checked\" errors. Round the value to avoid\n        // blurry content in some browsers.\n        this.overlayDir.offsetX = Math.round(offsetX);\n        this.overlayDir.overlayRef.updatePosition();\n    }\n\n    /**\n     * Calculates the y-offset of the select's overlay panel in relation to the\n     * top start corner of the trigger. It has to be adjusted in order for the\n     * selected option to be aligned over the trigger when the panel opens.\n     */\n    private _calculateOverlayOffsetY(): number {\n        // const itemHeight = this._getItemHeight();\n        // const optionHeightAdjustment = (itemHeight - this._triggerRect.height) / 2;\n\n        // todo I'm not sure that we will use it\n        return 0;\n        // return Math.round(-optionHeightAdjustment);\n    }\n\n    /**\n     * Checks that the attempted overlay position will fit within the viewport.\n     * If it will not fit, tries to adjust the scroll position and the associated\n     * y-offset so the panel can open fully on-screen. If it still won't fit,\n     * sets the offset back to 0 to allow the fallback position to take over.\n     */\n    private _checkOverlayWithinViewport(maxScroll: number): void {\n        const itemHeight = this._getItemHeight();\n        const viewportSize = this._viewportRuler.getViewportSize();\n\n        const topSpaceAvailable = this._triggerRect.top - SELECT_PANEL_VIEWPORT_PADDING;\n        const bottomSpaceAvailable =\n            viewportSize.height - this._triggerRect.bottom - SELECT_PANEL_VIEWPORT_PADDING;\n\n        const panelHeightTop = Math.abs(this._offsetY);\n        const totalPanelHeight =\n            Math.min(this._getItemCount() * itemHeight, SELECT_PANEL_MAX_HEIGHT);\n        const panelHeightBottom = totalPanelHeight - panelHeightTop - this._triggerRect.height;\n\n        if (panelHeightBottom > bottomSpaceAvailable) {\n            this._adjustPanelUp(panelHeightBottom, bottomSpaceAvailable);\n        } else if (panelHeightTop > topSpaceAvailable) {\n            this._adjustPanelDown(panelHeightTop, topSpaceAvailable, maxScroll);\n        } else {\n            this._transformOrigin = this._getOriginBasedOnOption();\n        }\n    }\n\n    /** Adjusts the overlay panel up to fit in the viewport. */\n    private _adjustPanelUp(panelHeightBottom: number, bottomSpaceAvailable: number) {\n        // Browsers ignore fractional scroll offsets, so we need to round.\n        const distanceBelowViewport = Math.round(panelHeightBottom - bottomSpaceAvailable);\n\n        // Scrolls the panel up by the distance it was extending past the boundary, then\n        // adjusts the offset by that amount to move the panel up into the viewport.\n        this._scrollTop -= distanceBelowViewport;\n        this._offsetY -= distanceBelowViewport;\n        this._transformOrigin = this._getOriginBasedOnOption();\n\n        // If the panel is scrolled to the very top, it won't be able to fit the panel\n        // by scrolling, so set the offset to 0 to allow the fallback position to take\n        // effect.\n        if (this._scrollTop <= 0) {\n            this._scrollTop = 0;\n            this._offsetY = 0;\n            this._transformOrigin = `50% bottom 0px`;\n        }\n    }\n\n    /** Adjusts the overlay panel down to fit in the viewport. */\n    private _adjustPanelDown(panelHeightTop: number, topSpaceAvailable: number, maxScroll: number) {\n        // Browsers ignore fractional scroll offsets, so we need to round.\n        const distanceAboveViewport = Math.round(panelHeightTop - topSpaceAvailable);\n\n        // Scrolls the panel down by the distance it was extending past the boundary, then\n        // adjusts the offset by that amount to move the panel down into the viewport.\n        this._scrollTop += distanceAboveViewport;\n        this._offsetY += distanceAboveViewport;\n        this._transformOrigin = this._getOriginBasedOnOption();\n\n        // If the panel is scrolled to the very bottom, it won't be able to fit the\n        // panel by scrolling, so set the offset to 0 to allow the fallback position\n        // to take effect.\n        if (this._scrollTop >= maxScroll) {\n            this._scrollTop = maxScroll;\n            this._offsetY = 0;\n            this._transformOrigin = `50% top 0px`;\n\n            return;\n        }\n    }\n\n    /** Sets the transform origin point based on the selected option. */\n    private _getOriginBasedOnOption(): string {\n        const itemHeight = this._getItemHeight();\n        /* tslint:disable-next-line:no-magic-numbers */\n        const optionHeightAdjustment = (itemHeight - this._triggerRect.height) / 2;\n        /* tslint:disable-next-line:no-magic-numbers */\n        const originY = Math.abs(this._offsetY) - optionHeightAdjustment + itemHeight / 2;\n\n        return `50% ${originY}px 0px`;\n    }\n\n    /** Calculates the amount of items in the select. This includes options and group labels. */\n    private _getItemCount(): number {\n        return this.options.length + this.optionGroups.length;\n    }\n\n    /** Calculates the height of the select's options. */\n    private _getItemHeight(): number {\n        /* tslint:disable-next-line:no-magic-numbers */\n        return 32;\n        // return this._triggerFontSize * SELECT_ITEM_HEIGHT_EM;\n    }\n\n    /** Comparison function to specify which option is displayed. Defaults to object equality. */\n    private _compareWith = (o1: any, o2: any) => o1 === o2;\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { OverlayModule } from '@ptsecurity/cdk/overlay';\nimport { McOptionModule } from '@ptsecurity/mosaic/core';\nimport { McFormFieldModule } from '@ptsecurity/mosaic/form-field';\nimport { McIconModule } from '@ptsecurity/mosaic/icon';\nimport { McTagModule } from '@ptsecurity/mosaic/tag';\n\nimport { MC_SELECT_SCROLL_STRATEGY_PROVIDER, McSelect, McSelectTrigger } from './select.component';\n\n\n@NgModule({\n    imports: [\n        CommonModule,\n        OverlayModule,\n        McOptionModule,\n        McIconModule,\n        McTagModule\n    ],\n    exports: [McFormFieldModule, McSelect, McSelectTrigger, McOptionModule, CommonModule],\n    declarations: [McSelect, McSelectTrigger],\n    providers: [MC_SELECT_SCROLL_STRATEGY_PROVIDER]\n})\nexport class McSelectModule {}\n","import {\n    ChangeDetectionStrategy,\n    Component,\n    Directive,\n    ElementRef,\n    Input,\n    NgZone, OnDestroy,\n    OnInit,\n    Renderer2,\n    ViewEncapsulation\n} from '@angular/core';\n\nimport { coerceBooleanProperty, coerceCssPixelValue, coerceNumberProperty } from '@ptsecurity/cdk/coercion';\n\n\ninterface IArea {\n    area: McSplitterAreaDirective;\n    index: number;\n    order: number;\n    initialSize: number;\n}\n\ninterface IPoint {\n    x: number;\n    y: number;\n}\n\n\nconst enum AttributeProperty {\n    Disabled = 'disabled'\n}\n\nconst enum Cursor {\n    Default = 'default',\n    ResizeColumn = 'col-resize',\n    ResizeRow = 'row-resize'\n}\n\nconst enum StyleProperty {\n    Cursor = 'cursor',\n    Flex = 'flex',\n    FlexBasis = 'flex-basis',\n    FlexDirection = 'flex-direction',\n    Height = 'height',\n    MaxWidth = 'max-width',\n    MinHeight = 'min-height',\n    MinWidth = 'minWidth',\n    OffsetHeight = 'offsetHeight',\n    OffsetWidth = 'offsetWidth',\n    Order = 'order',\n    Width = 'width'\n}\n\nconst enum State {\n    Disabled = 'disabled',\n    Horizontal = 'horizontal',\n    Vertical = 'vertical'\n}\n\nexport const enum Direction {\n    Horizontal = 'horizontal',\n    Vertical = 'vertical'\n}\n\n@Component({\n    selector: 'mc-splitter',\n    preserveWhitespaces: false,\n    styleUrls: ['splitter.css'],\n    templateUrl: './splitter.component.html',\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class McSplitterComponent implements OnInit {\n    readonly areas: IArea[] = [];\n\n    private _direction: Direction;\n    private _disabled: boolean = false;\n    private _gutterSize: number = 6;\n\n    private isDragging: boolean = false;\n\n    private readonly areaPositionDivider: number = 2;\n    private readonly listeners: (() => void)[] = [];\n\n    @Input()\n    set direction(direction: Direction) {\n        this._direction = direction;\n    }\n\n    get direction(): Direction {\n        return this._direction;\n    }\n\n    @Input()\n    set disabled(disabled: boolean) {\n        this._disabled = coerceBooleanProperty(disabled);\n    }\n\n    get disabled(): boolean {\n        return this._disabled;\n    }\n\n    @Input()\n    set gutterSize(gutterSize: number) {\n        const size = coerceNumberProperty(gutterSize);\n        this._gutterSize = size > 0 ? size : this.gutterSize;\n    }\n\n    get gutterSize(): number {\n        return this._gutterSize;\n    }\n\n    constructor(private elementRef: ElementRef,\n                private ngZone: NgZone,\n                private renderer: Renderer2) {}\n\n    addArea(area: McSplitterAreaDirective): void {\n        const index: number = this.areas.length;\n        const order: number = index * this.areaPositionDivider;\n        const size: number = area.getSize();\n\n        area.setOrder(order);\n\n        this.areas.push({\n            area,\n            index,\n            order,\n            initialSize: size\n        });\n    }\n\n    ngOnInit(): void {\n        if (!this.direction) {\n            this.direction = Direction.Horizontal;\n        }\n\n        this.setStyle(StyleProperty.FlexDirection, this.isVertical() ? 'column' : 'row');\n    }\n\n    onMouseDown(event: MouseEvent, leftAreaIndex: number, rightAreaIndex: number) {\n        if (this.disabled) {\n            return;\n        }\n\n        const leftArea = this.areas[leftAreaIndex];\n        const rightArea = this.areas[rightAreaIndex];\n\n        const startPoint: IPoint = {\n            x: event.screenX,\n            y: event.screenY\n        };\n\n        leftArea.initialSize = leftArea.area.getSize();\n        rightArea.initialSize = rightArea.area.getSize();\n\n        this.areas.forEach((item) => {\n            const size = item.area.getSize();\n            item.area.disableFlex();\n            item.area.setSize(size);\n        });\n\n        this.ngZone.runOutsideAngular(() => {\n            this.listeners.push(\n                this.renderer.listen(\n                    'document',\n                    'mouseup',\n                    () => this.onMouseUp()\n                )\n            );\n        });\n\n        this.ngZone.runOutsideAngular(() => {\n            this.listeners.push(\n                this.renderer.listen(\n                    'document',\n                    'mousemove',\n                    (e: MouseEvent) => this.onMouseMove(e, startPoint, leftArea, rightArea)\n                )\n            );\n        });\n\n        this.isDragging = true;\n    }\n\n    removeArea(area: McSplitterAreaDirective): void {\n        let indexToRemove: number = -1;\n\n        this.areas.some((item, index) => {\n            if (item.area === area) {\n                indexToRemove = index;\n\n                return true;\n            }\n\n            return false;\n        });\n\n        if (indexToRemove === -1) {\n            return;\n        }\n\n        this.areas.splice(indexToRemove, 1);\n    }\n\n    private isVertical(): boolean {\n        return this.direction === Direction.Vertical;\n    }\n\n    private onMouseMove(event: MouseEvent, startPoint: IPoint, leftArea: IArea, rightArea: IArea) {\n        if (!this.isDragging || this.disabled) {\n            return;\n        }\n\n        const endPoint: IPoint = {\n            x: event.screenX,\n            y: event.screenY\n        };\n\n        const offset = this.isVertical()\n            ? startPoint.y - endPoint.y\n            : startPoint.x - endPoint.x;\n\n        const newLeftAreaSize = leftArea.initialSize - offset;\n        const newRightAreaSize = rightArea.initialSize + offset;\n\n        const minLeftAreaSize = leftArea.area.getMinSize();\n        const minRightAreaSize = rightArea.area.getMinSize();\n\n        if (newLeftAreaSize <= minLeftAreaSize || newRightAreaSize <= minRightAreaSize) {\n            const rightAreaOffset = leftArea.initialSize - minLeftAreaSize;\n\n            leftArea.area.setSize(minLeftAreaSize);\n            rightArea.area.setSize(rightArea.initialSize + rightAreaOffset);\n        } else if (newLeftAreaSize <= 0) {\n            leftArea.area.setSize(0);\n            rightArea.area.setSize(rightArea.initialSize + leftArea.initialSize);\n        } else if (newRightAreaSize <= 0) {\n            leftArea.area.setSize(rightArea.initialSize + leftArea.initialSize);\n            rightArea.area.setSize(0);\n        } else {\n            leftArea.area.setSize(newLeftAreaSize);\n            rightArea.area.setSize(newRightAreaSize);\n        }\n    }\n\n    private onMouseUp() {\n        while (this.listeners.length > 0) {\n            const unsubscribe = this.listeners.pop();\n\n            if (unsubscribe) {\n                unsubscribe();\n            }\n        }\n\n        this.isDragging = false;\n    }\n\n    private setStyle(property: StyleProperty, value: string | number) {\n        this.renderer.setStyle(this.elementRef.nativeElement, property, value);\n    }\n}\n\n@Directive({\n    selector: 'mc-gutter'\n})\nexport class McGutterDirective implements OnInit {\n    private _direction: Direction = Direction.Vertical;\n    private _disabled: boolean = false;\n    private _order: number = 0;\n    private _size: number = 6;\n\n    @Input()\n    set direction(direction: Direction) {\n        this._direction = direction;\n    }\n\n    get direction(): Direction {\n        return this._direction;\n    }\n\n    @Input()\n    set disabled(disabled: boolean) {\n        this._disabled = coerceBooleanProperty(disabled);\n    }\n\n    get disabled(): boolean {\n        return this._disabled;\n    }\n\n    @Input()\n    set order(order: number) {\n        this._order = coerceNumberProperty(order);\n    }\n\n    get order(): number {\n        return this._order;\n    }\n\n    @Input()\n    set size(size: number) {\n        this._size = coerceNumberProperty(size);\n    }\n\n    get size(): number {\n        return this._size;\n    }\n\n    constructor(private renderer: Renderer2,\n                private elementRef: ElementRef) {\n    }\n\n    ngOnInit(): void {\n        this.setStyle(StyleProperty.Cursor, this.getCursor(this.getState()));\n        this.setStyle(StyleProperty.FlexBasis, coerceCssPixelValue(this.size));\n        this.setStyle(this.isVertical() ? StyleProperty.Height : StyleProperty.Width, coerceCssPixelValue(this.size));\n        this.setStyle(StyleProperty.Order, this.order);\n\n        if (!this.isVertical()) {\n            this.setStyle(StyleProperty.Height, '100%');\n        }\n\n        if (this.disabled) {\n            this.setAttr(AttributeProperty.Disabled, 'true');\n        }\n\n        // fix IE issue with gutter icon. flex-direction is requied for flex alignment options\n        this.setStyle(StyleProperty.FlexDirection, this.isVertical() ? 'row' : 'column');\n    }\n\n    private isVertical(): boolean {\n        return this.direction === Direction.Vertical;\n    }\n\n    private getCursor(state: State): string {\n        switch (state) {\n            case State.Disabled:\n                return Cursor.Default;\n            case State.Vertical:\n                return  Cursor.ResizeRow;\n            case State.Horizontal:\n                return Cursor.ResizeColumn;\n            default:\n                throw Error(`Unknown gutter state for cursor: ${state}`);\n        }\n    }\n\n    private getState(): State {\n        return this.disabled\n            ? State.Disabled\n            : this.direction === Direction.Vertical\n                ? State.Vertical\n                : State.Horizontal;\n    }\n\n    private setStyle(property: StyleProperty, value: string | number) {\n        this.renderer.setStyle(this.elementRef.nativeElement, property, value);\n    }\n\n    private setAttr(attribute: AttributeProperty, value: string) {\n        this.renderer.setAttribute(this.elementRef.nativeElement, attribute, value);\n    }\n}\n\n@Directive({\n    selector: 'mc-splitter-area'\n})\nexport class McSplitterAreaDirective implements OnInit, OnDestroy {\n    constructor(private elementRef: ElementRef,\n                private renderer: Renderer2,\n                private splitter: McSplitterComponent) {}\n\n    disableFlex(): void {\n        this.renderer.removeStyle(this.elementRef.nativeElement, 'flex');\n    }\n\n    ngOnInit(): void {\n        this.splitter.addArea(this);\n\n        this.removeStyle(StyleProperty.MaxWidth);\n        this.setStyle(StyleProperty.Flex, '1');\n\n        if (this.splitter.direction === Direction.Vertical) {\n            this.setStyle(StyleProperty.Width, '100%');\n            this.removeStyle(StyleProperty.Height);\n        } else {\n            this.setStyle(StyleProperty.Height, '100%');\n            this.removeStyle(StyleProperty.Width);\n        }\n    }\n\n    ngOnDestroy(): void {\n        this.splitter.removeArea(this);\n    }\n\n    setOrder(order: number): void {\n        this.setStyle(StyleProperty.Order, order);\n    }\n\n    setSize(size: number): void {\n        const sz = coerceNumberProperty(size);\n        this.setStyle(this.getSizeProperty(), coerceCssPixelValue(sz));\n    }\n\n    getSize(): number {\n        return this.elementRef.nativeElement[this.getOffsetSizeProperty()];\n    }\n\n    getMinSize(): number {\n        const styles = getComputedStyle(this.elementRef.nativeElement);\n\n        return parseFloat(styles[this.getMinSizeProperty()]);\n    }\n\n    private isVertical(): boolean {\n        return this.splitter.direction === Direction.Vertical;\n    }\n\n    private getMinSizeProperty(): StyleProperty {\n        return this.isVertical()\n            ? StyleProperty.MinHeight\n            : StyleProperty.MinWidth;\n    }\n\n    private getOffsetSizeProperty(): StyleProperty {\n        return this.isVertical()\n            ? StyleProperty.OffsetHeight\n            : StyleProperty.OffsetWidth;\n    }\n\n    private getSizeProperty(): StyleProperty {\n        return this.isVertical()\n            ? StyleProperty.Height\n            : StyleProperty.Width;\n    }\n\n    private setStyle(style: StyleProperty, value: string | number) {\n        this.renderer.setStyle(this.elementRef.nativeElement, style, value);\n    }\n\n    private removeStyle(style: StyleProperty) {\n        this.renderer.removeStyle(this.elementRef.nativeElement, style);\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { McIconModule } from '@ptsecurity/mosaic/icon';\n\nimport { McGutterDirective, McSplitterAreaDirective, McSplitterComponent } from './splitter.component';\n\n\n@NgModule({\n    imports: [\n        CommonModule,\n        McIconModule\n    ],\n    exports: [\n        McGutterDirective,\n        McSplitterAreaDirective,\n        McSplitterComponent\n    ],\n    declarations: [\n        McGutterDirective,\n        McSplitterAreaDirective,\n        McSplitterComponent\n    ]\n})\nexport class McSplitterModule {\n}\n","import { animate, state, style, transition, trigger } from '@angular/animations';\nimport {\n    Attribute,\n    ChangeDetectionStrategy, ChangeDetectorRef,\n    Component,\n    ElementRef, EventEmitter, forwardRef,\n    Input, Output, ViewChild,\n    ViewEncapsulation\n} from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { FocusMonitor } from '@ptsecurity/cdk/a11y';\nimport {\n    ThemePalette,\n    CanColor, CanColorCtor,\n    CanDisable, CanDisableCtor,\n    HasTabIndex, HasTabIndexCtor,\n    mixinColor,\n    mixinDisabled,\n    mixinTabIndex\n} from '@ptsecurity/mosaic/core';\n\n\nlet nextUniqueId = 0;\n\ntype ToggleLabelPositionType = 'left' | 'right';\n\nexport class McToggleBase {\n    constructor(public _elementRef: ElementRef) {}\n}\n\nexport const _McToggleMixinBase:\n    HasTabIndexCtor &\n    CanDisableCtor &\n    CanColorCtor &\n    typeof McToggleBase = mixinTabIndex(mixinColor(mixinDisabled(McToggleBase), ThemePalette.Primary));\n\nexport class McToggleChange {\n    source: McToggleComponent;\n    checked: boolean;\n}\n\n@Component({\n    selector: 'mc-toggle',\n    exportAs: 'mcToggle',\n    templateUrl: './toggle.component.html',\n    styleUrls: ['./toggle.css'],\n    providers: [\n        {provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => McToggleComponent), multi: true}\n    ],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n    inputs: ['disabled', 'color', 'tabIndex'],\n    host: {\n        class: 'mc-toggle',\n        '[id]': 'id',\n        '[attr.id]': 'id',\n        '[class.mc-disabled]': 'disabled',\n        '[class.mc-toggle_off]': '!checked'\n    },\n    animations: [\n        trigger('switch', [\n            state('true' , style({ left: '50%' })),\n            state('false', style({ left: '1px' })),\n            transition('true <=> false', animate('150ms'))\n        ])\n    ]\n})\nexport class McToggleComponent extends _McToggleMixinBase\n    implements ControlValueAccessor, CanColor, CanDisable, HasTabIndex {\n\n    @ViewChild('input') _inputElement: ElementRef;\n\n    @Input() labelPosition: ToggleLabelPositionType = 'right';\n\n    @Input('aria-label') ariaLabel: string = '';\n    @Input('aria-labelledby') ariaLabelledby: string | null = null;\n\n    private _uniqueId: string = `mc-toggle-${++nextUniqueId}`;\n\n    // tslint:disable:member-ordering\n    @Input() id: string = this._uniqueId;\n\n    get inputId(): string {\n        return `${this.id || this._uniqueId}-input`;\n    }\n\n    @Input() name: string | null = null;\n\n    @Input() value: string;\n\n    private _disabled: boolean = false;\n\n    @Input()\n    get disabled() {\n        return this._disabled;\n    }\n\n    set disabled(value: any) {\n        if (value !== this._disabled) {\n            this._disabled = value;\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n\n    private _checked: boolean = false;\n\n    get checked() {\n        return this._checked;\n    }\n\n    @Input()\n    set checked(value: boolean) {\n        if (value !== this._checked) {\n            this._checked = value;\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n\n    @Output() readonly change: EventEmitter<McToggleChange> =\n        new EventEmitter<McToggleChange>();\n\n    constructor(public _elementRef: ElementRef,\n                private _focusMonitor: FocusMonitor,\n                private _changeDetectorRef: ChangeDetectorRef,\n                @Attribute('tabindex') tabIndex: string\n    ) {\n        super(_elementRef);\n\n        this.tabIndex = parseInt(tabIndex) || 0;\n\n        this._focusMonitor.monitor(this._elementRef.nativeElement, true);\n    }\n\n    ngOnDestroy() {\n        this._focusMonitor.stopMonitoring(this._elementRef.nativeElement);\n    }\n\n    focus(): void {\n        this._focusMonitor.focusVia(this._inputElement.nativeElement, 'keyboard');\n    }\n\n    _getAriaChecked(): boolean {\n        return this.checked;\n    }\n\n    _onInteractionEvent(event: Event) {\n        event.stopPropagation();\n    }\n\n    _onLabelTextChange() {\n        this._changeDetectorRef.markForCheck();\n    }\n\n    _onInputClick(event: MouseEvent) {\n        event.stopPropagation();\n        this._updateModelValue();\n        this._emitChangeEvent();\n    }\n\n    writeValue(value: any) {\n        this.checked = !!value;\n    }\n\n    registerOnChange(fn: any) {\n        this._onChangeCallback = fn;\n    }\n\n    registerOnTouched(fn: any) {\n        this._onTouchedCallback = fn;\n    }\n\n    setDisabledState(isDisabled: boolean) {\n        this.disabled = isDisabled;\n    }\n\n    // tslint:disable-next-line:no-empty\n    private _onTouchedCallback = () => {};\n\n    // tslint:disable-next-line:no-empty\n    private _onChangeCallback = (_: any) => {};\n\n    private _updateModelValue() {\n        this._checked = !this.checked;\n        this._onChangeCallback(this.checked);\n        this._onTouchedCallback();\n    }\n\n    private _emitChangeEvent() {\n        const event = new McToggleChange();\n        event.source = this;\n        event.checked = this.checked;\n\n        this._onChangeCallback(this.checked);\n        this.change.emit(event);\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { A11yModule } from '@ptsecurity/cdk/a11y';\nimport { McCommonModule } from '@ptsecurity/mosaic/core';\n\nimport { McToggleComponent } from './toggle.component';\n\n\n@NgModule({\n    imports: [CommonModule, A11yModule, McCommonModule],\n    exports: [McToggleComponent],\n    declarations: [McToggleComponent]\n})\nexport class McToggleModule {\n}\n","import {\n    AfterContentChecked,\n    AfterContentInit,\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    ContentChildren,\n    ElementRef,\n    EventEmitter,\n    Input,\n    OnDestroy,\n    Output,\n    QueryList,\n    ViewChild,\n    ViewEncapsulation,\n    InjectionToken,\n    Inject,\n    Optional,\n    Directive, Attribute\n} from '@angular/core';\nimport { coerceBooleanProperty, coerceNumberProperty } from '@ptsecurity/cdk/coercion';\nimport {\n    CanColor,\n    CanColorCtor,\n    mixinColor,\n    mixinDisabled\n} from '@ptsecurity/mosaic/core';\nimport { merge, Subscription } from 'rxjs';\n\nimport { McTab } from './tab';\nimport { McTabHeader } from './tab-header';\n\n\n@Directive({\n    selector: 'mc-tab-group[mc-light-tabs], [mc-tab-nav-bar][mc-light-tabs]',\n    host: { class: 'mc-tab-group_light' }\n})\nexport class McLightTabsCssStyler { }\n\n@Directive({\n    selector: 'mc-tab-group[mc-align-tabs-center], [mc-tab-nav-bar][mc-align-tabs-center]',\n    host: { class: 'mc-tab-group_align-labels-center' }\n})\nexport class McAlignTabsCenterCssStyler { }\n\n@Directive({\n    selector: 'mc-tab-group[mc-align-tabs-end], [mc-tab-nav-bar][mc-align-tabs-end]',\n    host: { class: 'mc-tab-group_align-labels-end' }\n})\nexport class McAlignTabsEndCssStyler { }\n\n@Directive({\n    selector: 'mc-tab-group[mc-stretch-tabs], [mc-tab-nav-bar][mc-stretch-tabs]',\n    host: { class: 'mc-tab-group_stretch-labels' }\n})\nexport class McStretchTabsCssStyler { }\n\n/** Used to generate unique ID's for each tab component */\nlet nextId = 0;\n\n/** A simple change event emitted on focus or selection changes. */\nexport class McTabChangeEvent {\n    /** Index of the currently-selected tab. */\n    index: number;\n    /** Reference to the currently-selected tab. */\n    tab: McTab;\n}\n\n/** Possible positions for the tab header. */\nexport type McTabHeaderPosition = 'above' | 'below';\n\n/** Object that can be used to configure the default options for the tabs module. */\nexport interface IMcTabsConfig {\n    /** Duration for the tab animation. Must be a valid CSS value (e.g. 600ms). */\n    animationDuration?: string;\n}\n\n/** Injection token that can be used to provide the default options the tabs module. */\nexport const MC_TABS_CONFIG = new InjectionToken('MC_TABS_CONFIG');\n\n// Boilerplate for applying mixins to McTabGroup.\n/** @docs-private */\nexport class McTabGroupBase {\n    // tslint:disable-next-line:naming-convention\n    constructor(public _elementRef: ElementRef) { }\n}\nexport const mcTabGroupMixinBase:\n    CanColorCtor &\n    typeof McTabGroupBase =\n    mixinColor(mixinDisabled(McTabGroupBase));\n\n/**\n * Tab-group component.  Supports basic tab pairs (label + content) and includes\n * keyboard navigation.\n */\n@Component({\n    selector: 'mc-tab-group',\n    exportAs: 'mcTabGroup',\n    templateUrl: 'tab-group.html',\n    styleUrls: ['tab-group.css'],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    inputs: ['color'],\n    host: {\n        class: 'mc-tab-group',\n        '[class.mc-tab-group_dynamic-height]': 'dynamicHeight',\n        '[class.mc-tab-group_inverted-header]': 'headerPosition === \"below\"'\n    }\n})\nexport class McTabGroup extends mcTabGroupMixinBase implements AfterContentInit,\n    AfterContentChecked, OnDestroy, CanColor {\n    lightTab: boolean;\n\n    /** Whether the tab group should grow to the size of the active tab. */\n    @Input()\n    get dynamicHeight(): boolean { return this._dynamicHeight; }\n    set dynamicHeight(value: boolean) { this._dynamicHeight = coerceBooleanProperty(value); }\n\n    /** The index of the active tab. */\n    @Input()\n    get selectedIndex(): number | null { return this._selectedIndex; }\n    set selectedIndex(value: number | null) {\n        this.indexToSelect = coerceNumberProperty(value, null);\n    }\n\n    @ContentChildren(McTab) tabs: QueryList<McTab>;\n\n    @ViewChild('tabBodyWrapper') tabBodyWrapper: ElementRef;\n\n    @ViewChild('tabHeader') tabHeader: McTabHeader;\n\n    /** Position of the tab header. */\n    @Input() headerPosition: McTabHeaderPosition = 'above';\n\n    /** Duration for the tab animation. Must be a valid CSS value (e.g. 600ms). */\n    @Input() animationDuration: string;\n\n    /** Output to enable support for two-way binding on `[(selectedIndex)]` */\n    @Output() readonly selectedIndexChange: EventEmitter<number> = new EventEmitter<number>();\n\n    /** Event emitted when focus has changed within a tab group. */\n    @Output() readonly focusChange: EventEmitter<McTabChangeEvent> =\n        new EventEmitter<McTabChangeEvent>();\n\n    /** Event emitted when the body animation has completed */\n    @Output() readonly animationDone: EventEmitter<void> = new EventEmitter<void>();\n\n    /** Event emitted when the tab selection has changed. */\n    @Output() readonly selectedTabChange: EventEmitter<McTabChangeEvent> =\n        new EventEmitter<McTabChangeEvent>(true);\n\n    /** The tab index that should be selected after the content has been checked. */\n    private indexToSelect: number | null = 0;\n\n    /** Snapshot of the height of the tab body wrapper before another tab is activated. */\n    private tabBodyWrapperHeight: number = 0;\n\n    /** Subscription to tabs being added/removed. */\n    private tabsSubscription = Subscription.EMPTY;\n\n    /** Subscription to changes in the tab labels. */\n    private tabLabelSubscription = Subscription.EMPTY;\n    private _dynamicHeight: boolean = false;\n    private _selectedIndex: number | null = null;\n\n    private groupId: number;\n\n    constructor(\n        elementRef: ElementRef,\n        private changeDetectorRef: ChangeDetectorRef,\n        @Attribute('mc-light-tabs') lightTabs: string,\n        @Inject(MC_TABS_CONFIG) @Optional() defaultConfig?: IMcTabsConfig\n    ) {\n        super(elementRef);\n\n        this.lightTab = coerceBooleanProperty(lightTabs);\n\n        this.groupId = nextId++;\n        this.animationDuration = defaultConfig && defaultConfig.animationDuration ?\n            defaultConfig.animationDuration : '0ms';\n    }\n\n    /**\n     * After the content is checked, this component knows what tabs have been defined\n     * and what the selected index should be. This is where we can know exactly what position\n     * each tab should be in according to the new selected index, and additionally we know how\n     * a new selected tab should transition in (from the left or right).\n     */\n    ngAfterContentChecked() {\n        // Don't clamp the `indexToSelect` immediately in the setter because it can happen that\n        // the amount of tabs changes before the actual change detection runs.\n        const indexToSelect = this.indexToSelect = this.clampTabIndex(this.indexToSelect);\n\n        // If there is a change in selected index, emit a change event. Should not trigger if\n        // the selected index has not yet been initialized.\n        if (this._selectedIndex !== indexToSelect) {\n            const isFirstRun = this._selectedIndex == null;\n\n            if (!isFirstRun) {\n                this.selectedTabChange.emit(this.createChangeEvent(indexToSelect));\n            }\n\n            // Changing these values after change detection has run\n            // since the checked content may contain references to them.\n            Promise.resolve().then(() => {\n                this.tabs.forEach((tab, index) => tab.isActive = index === indexToSelect);\n\n                if (!isFirstRun) {\n                    this.selectedIndexChange.emit(indexToSelect);\n                }\n            });\n        }\n\n        // Setup the position for each tab and optionally setup an origin on the next selected tab.\n        this.tabs.forEach((tab: McTab, index: number) => {\n            tab.position = index - indexToSelect;\n\n            // If there is already a selected tab, then set up an origin for the next selected tab\n            // if it doesn't have one already.\n            if (this._selectedIndex != null && tab.position === 0 && !tab.origin) {\n                tab.origin = indexToSelect - this._selectedIndex;\n            }\n        });\n\n        if (this._selectedIndex !== indexToSelect) {\n            this._selectedIndex = indexToSelect;\n            this.changeDetectorRef.markForCheck();\n        }\n    }\n\n    ngAfterContentInit() {\n        this.subscribeToTabLabels();\n\n        // Subscribe to changes in the amount of tabs, in order to be\n        // able to re-render the content as new tabs are added or removed.\n        this.tabsSubscription = this.tabs.changes.subscribe(() => {\n            const indexToSelect = this.clampTabIndex(this.indexToSelect);\n\n            // Maintain the previously-selected tab if a new tab is added or removed and there is no\n            // explicit change that selects a different tab.\n            if (indexToSelect === this._selectedIndex) {\n                const tabs = this.tabs.toArray();\n\n                for (let i = 0; i < tabs.length; i++) {\n                    if (tabs[i].isActive) {\n                        // Assign both to the `_indexToSelect` and `_selectedIndex` so we don't fire a changed\n                        // event, otherwise the consumer may end up in an infinite loop in some edge cases like\n                        // adding a tab within the `selectedIndexChange` event.\n                        this.indexToSelect = this._selectedIndex = i;\n                        break;\n                    }\n                }\n            }\n\n            this.subscribeToTabLabels();\n            this.changeDetectorRef.markForCheck();\n        });\n    }\n\n    ngOnDestroy() {\n        this.tabsSubscription.unsubscribe();\n        this.tabLabelSubscription.unsubscribe();\n    }\n\n    focusChanged(index: number) {\n        this.focusChange.emit(this.createChangeEvent(index));\n    }\n\n    /** Returns a unique id for each tab label element */\n    getTabLabelId(i: number): string {\n        return `mc-tab-label-${this.groupId}-${i}`;\n    }\n\n    /** Returns a unique id for each tab content element */\n    getTabContentId(i: number): string {\n        return `mc-tab-content-${this.groupId}-${i}`;\n    }\n\n    /**\n     * Sets the height of the body wrapper to the height of the activating tab if dynamic\n     * height property is true.\n     */\n    setTabBodyWrapperHeight(tabHeight: number): void {\n        if (!this._dynamicHeight || !this.tabBodyWrapperHeight) { return; }\n\n        const wrapper: HTMLElement = this.tabBodyWrapper.nativeElement;\n\n        wrapper.style.height = `${this.tabBodyWrapperHeight}px`;\n\n        // This conditional forces the browser to paint the height so that\n        // the animation to the new height can have an origin.\n        if (this.tabBodyWrapper.nativeElement.offsetHeight) {\n            wrapper.style.height = `${tabHeight}px`;\n        }\n    }\n\n    /** Removes the height of the tab body wrapper. */\n    removeTabBodyWrapperHeight(): void {\n        this.tabBodyWrapperHeight = this.tabBodyWrapper.nativeElement.clientHeight;\n        this.tabBodyWrapper.nativeElement.style.height = '';\n        this.animationDone.emit();\n    }\n\n    /** Handle click events, setting new selected index if appropriate. */\n    handleClick(tab: McTab, tabHeader: McTabHeader, index: number) {\n        if (!tab.disabled) {\n            this.selectedIndex = tabHeader.focusIndex = index;\n        }\n    }\n\n    /** Retrieves the tabindex for the tab. */\n    getTabIndex(tab: McTab, index: number): number | null {\n        if (tab.disabled) {\n            return null;\n        }\n\n        return this.selectedIndex === index ? 0 : -1;\n    }\n\n    private createChangeEvent(index: number): McTabChangeEvent {\n        const event = new McTabChangeEvent();\n        event.index = index;\n        if (this.tabs && this.tabs.length) {\n            event.tab = this.tabs.toArray()[index];\n        }\n\n        return event;\n    }\n\n    /**\n     * Subscribes to changes in the tab labels. This is needed, because the @Input for the label is\n     * on the McTab component, whereas the data binding is inside the McTabGroup. In order for the\n     * binding to be updated, we need to subscribe to changes in it and trigger change detection\n     * manually.\n     */\n    private subscribeToTabLabels() {\n        if (this.tabLabelSubscription) {\n            this.tabLabelSubscription.unsubscribe();\n        }\n\n        this.tabLabelSubscription = merge(...this.tabs.map((tab) => tab.stateChanges))\n            .subscribe(() => this.changeDetectorRef.markForCheck());\n    }\n\n    /** Clamps the given index to the bounds of 0 and the tabs length. */\n    private clampTabIndex(index: number | null): number {\n        // Note the `|| 0`, which ensures that values like NaN can't get through\n        // and which would otherwise throw the component into an infinite loop\n        // (since Mch.max(NaN, 0) === NaN).\n        return Math.min(this.tabs.length - 1, Math.max(index || 0, 0));\n    }\n}\n","import {\n    Attribute,\n    ChangeDetectionStrategy,\n    Component,\n    Directive,\n    ElementRef,\n    Input,\n    OnDestroy,\n    ViewEncapsulation\n} from '@angular/core';\nimport { FocusMonitor } from '@ptsecurity/cdk/a11y';\nimport {\n    CanColor,\n    CanColorCtor,\n    CanDisable,\n    CanDisableCtor,\n    HasTabIndex,\n    HasTabIndexCtor,\n    mixinColor,\n    mixinDisabled,\n    mixinTabIndex\n} from '@ptsecurity/mosaic/core';\n\n\n// Boilerplate for applying mixins to McTabNav.\n/** @docs-private */\nexport class McTabNavBase {\n    // tslint:disable-next-line:naming-convention\n    constructor(public _elementRef: ElementRef) {}\n}\nexport const mcTabNavMixinBase: CanColorCtor &\n    typeof McTabNavBase = mixinColor(McTabNavBase);\n\n/**\n * Navigation component matching the styles of the tab group header.\n */\n@Component({\n    selector: '[mc-tab-nav-bar]',\n    exportAs: 'mcTabNavBar, mcTabNav',\n    inputs: ['color'],\n    templateUrl: 'tab-nav-bar.html',\n    styleUrls: ['tab-nav-bar.css'],\n    host: { class: 'mc-tab-nav-bar' },\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class McTabNav extends mcTabNavMixinBase\n    implements CanColor {\n        constructor(elementRef: ElementRef) {\n            super(elementRef);\n        }\n     }\n\n// Boilerplate for applying mixins to McTabLink.\nexport class McTabLinkBase {}\nexport const mcTabLinkMixinBase: HasTabIndexCtor & CanDisableCtor &\n    typeof McTabLinkBase = mixinTabIndex(mixinDisabled(McTabLinkBase));\n\n/**\n * Link inside of a `mc-tab-nav-bar`.\n */\n@Directive({\n    selector: '[mc-tab-link], [mcTabLink]',\n    exportAs: 'mcTabLink',\n    inputs: ['disabled', 'tabIndex'],\n    host: {\n        class: 'mc-tab-link',\n        '[attr.aria-current]': 'active',\n        '[attr.aria-disabled]': 'disabled.toString()',\n        '[attr.tabIndex]': 'tabIndex',\n        '[class.mc-disabled]': 'disabled',\n        '[class.mc-active]': 'active'\n    }\n})\nexport class McTabLink extends mcTabLinkMixinBase\n    implements OnDestroy, CanDisable, HasTabIndex {\n    /** Whether the link is active. */\n    @Input()\n    get active(): boolean {\n        return this.isActive;\n    }\n    set active(value: boolean) {\n        if (value !== this.isActive) {\n            this.isActive = value;\n        }\n    }\n\n    /** Whether the tab link is active or not. */\n    protected isActive: boolean = false;\n\n    constructor(\n        public elementRef: ElementRef,\n        @Attribute('tabindex') tabIndex: string,\n        private focusMonitor: FocusMonitor\n    ) {\n        super();\n\n        this.tabIndex = parseInt(tabIndex) || 0;\n        this.focusMonitor.monitor(this.elementRef.nativeElement);\n    }\n\n    ngOnDestroy() {\n        this.focusMonitor.stopMonitoring(this.elementRef.nativeElement);\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { A11yModule } from '@ptsecurity/cdk/a11y';\nimport { PortalModule } from '@ptsecurity/cdk/portal';\nimport { McCommonModule } from '@ptsecurity/mosaic/core';\n\nimport { McTab } from './tab';\nimport { McTabBody, McTabBodyPortal } from './tab-body';\nimport { McTabContent } from './tab-content';\nimport {\n    McTabGroup,\n    McLightTabsCssStyler,\n    McAlignTabsCenterCssStyler,\n    McAlignTabsEndCssStyler,\n    McStretchTabsCssStyler\n} from './tab-group';\nimport { McTabHeader } from './tab-header';\nimport { McTabLabel } from './tab-label';\nimport { McTabLabelWrapper } from './tab-label-wrapper';\nimport { McTabLink, McTabNav } from './tab-nav-bar/tab-nav-bar';\n\n\n@NgModule({\n    imports: [\n        CommonModule,\n        McCommonModule,\n        PortalModule,\n        A11yModule\n    ],\n    // Don't export all components because some are only to be used internally.\n    exports: [\n        McCommonModule,\n        McTabGroup,\n        McTabLabel,\n        McTab,\n        McTabNav,\n        McTabLink,\n        McTabContent,\n        McLightTabsCssStyler,\n        McAlignTabsCenterCssStyler,\n        McAlignTabsEndCssStyler,\n        McStretchTabsCssStyler\n    ],\n    declarations: [\n        McTabGroup,\n        McTabLabel,\n        McTab,\n        McTabLabelWrapper,\n        McTabNav,\n        McTabLink,\n        McTabBody,\n        McTabBodyPortal,\n        McTabHeader,\n        McTabContent,\n        McLightTabsCssStyler,\n        McAlignTabsCenterCssStyler,\n        McAlignTabsEndCssStyler,\n        McStretchTabsCssStyler\n    ]\n})\nexport class McTabsModule {}\n","import {\n    ElementRef,\n    QueryList,\n    ContentChildren,\n    Component,\n    ChangeDetectionStrategy,\n    ViewEncapsulation\n} from '@angular/core';\n\nimport {\n    mixinColor,\n    CanColor,\n    CanColorCtor,\n    CanDisable,\n    CanDisableCtor,\n    mixinDisabled\n} from '@ptsecurity/mosaic/core';\nimport { McIcon } from '@ptsecurity/mosaic/icon';\n\n\nexport class McTagBase {\n    constructor(public _elementRef: ElementRef) {}\n}\n\nexport const _McTagMixinBase: CanColorCtor & CanDisableCtor & typeof McTagBase = mixinColor(mixinDisabled(McTagBase));\n\n\n@Component({\n    selector: 'mc-tag',\n    templateUrl: 'tag.partial.html',\n    styleUrls: ['./tag.css'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n    host: {\n        class: 'mc-tag',\n        '[class.mc-disabled]': 'disabled'\n    },\n    inputs: ['color', 'disabled']\n})\nexport class McTag extends _McTagMixinBase implements CanColor, CanDisable {\n    @ContentChildren(McIcon) contentChildren: QueryList<McIcon>;\n\n    nativeElement: HTMLElement;\n\n    private _disabled: boolean = false;\n\n    get disabled() {\n        return this._disabled;\n    }\n\n    set disabled(value: any) {\n        if (value !== this.disabled) { this._disabled = value; }\n    }\n\n    constructor(elementRef: ElementRef) {\n        super(elementRef);\n\n        this.nativeElement = elementRef.nativeElement;\n    }\n\n    ngAfterContentInit() {\n        this._addClassModificatorForIcons();\n    }\n\n    _addClassModificatorForIcons() {\n        const icons = this.contentChildren.map((item) => item._elementRef.nativeElement);\n\n        if (icons.length === 1) {\n            const iconElement = icons[0];\n\n            if (!iconElement.previousElementSibling && !iconElement.nextElementSibling) {\n                if (iconElement.nextSibling) {\n                    iconElement.classList.add('mc-icon_left');\n                    this.nativeElement.classList.add('mc-left-icon');\n                }\n\n                if (iconElement.previousSibling) {\n                    iconElement.classList.add('mc-icon_right');\n                    this.nativeElement.classList.add('mc-right-icon');\n                }\n            }\n        } else if (icons.length > 1) {\n            const firstIconElement = icons[0];\n            const secondIconElement = icons[1];\n\n            firstIconElement.classList.add('mc-icon_left');\n            secondIconElement.classList.add('mc-icon_right');\n        }\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { PlatformModule } from '@ptsecurity/cdk/platform';\n\nimport { McTag } from './tag.component';\n\n\n@NgModule({\n    imports: [\n        CommonModule,\n        PlatformModule\n    ],\n    exports: [\n        McTag\n    ],\n    declarations: [\n        McTag\n    ]\n})\nexport class McTagModule {}\n","import {\n    Directive, DoCheck, ElementRef, Inject,\n    Input, OnChanges, OnDestroy, Optional,\n    Self, InjectionToken, NgZone, OnInit\n} from '@angular/core';\nimport { FormGroupDirective, NgControl, NgForm } from '@angular/forms';\nimport { coerceBooleanProperty } from '@ptsecurity/cdk/coercion';\nimport {\n    CanUpdateErrorState,\n    CanUpdateErrorStateCtor,\n    ErrorStateMatcher,\n    mixinErrorState\n} from '@ptsecurity/mosaic/core';\nimport { McFormFieldControl } from '@ptsecurity/mosaic/form-field';\nimport { fromEvent, Subscription, Subject } from 'rxjs';\nimport { distinctUntilChanged, map } from 'rxjs/operators';\n\n\nexport const MC_TEXTAREA_VALUE_ACCESSOR =\n    new InjectionToken<{ value: any }>('MC_TEXTAREA_VALUE_ACCESSOR');\n\nlet nextUniqueId = 0;\n\nconst ROW_SEPARATOR = '\\n';\n\nexport class McTextareaBase {\n    constructor(public _defaultErrorStateMatcher: ErrorStateMatcher,\n                public _parentForm: NgForm,\n                public _parentFormGroup: FormGroupDirective,\n                public ngControl: NgControl) {\n    }\n}\n\n// tslint:disable-next-line:naming-convention\nexport const McTextareaMixinBase: CanUpdateErrorStateCtor & typeof McTextareaBase = mixinErrorState(McTextareaBase);\n\n@Directive({\n    selector: 'textarea[mcTextarea]',\n    exportAs: 'mcTextarea',\n    host: {\n        class: 'mc-textarea',\n        '[class.mc-textarea-resizable]': '!canGrow',\n        '[attr.id]': 'id',\n        '[attr.placeholder]': 'placeholder',\n        '[disabled]': 'disabled',\n        '[required]': 'required',\n        '(blur)': 'focusChanged(false)',\n        '(focus)': 'focusChanged(true)'\n    },\n    providers: [{ provide: McFormFieldControl, useExisting: McTextarea }]\n})\nexport class McTextarea extends McTextareaMixinBase implements McFormFieldControl<any>, OnInit, OnChanges,\n    OnDestroy, DoCheck, CanUpdateErrorState {\n\n    @Input() canGrow: boolean = true;\n\n    /** An object used to control when error messages are shown. */\n    @Input() errorStateMatcher: ErrorStateMatcher;\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    focused: boolean = false;\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    readonly stateChanges: Subject<void> = new Subject<void>();\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    controlType: string = 'mc-textarea';\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    @Input()\n    get disabled(): boolean {\n        if (this.ngControl && this.ngControl.disabled !== null) {\n            return this.ngControl.disabled;\n        }\n\n        return this._disabled;\n    }\n\n    set disabled(value: boolean) {\n        this._disabled = coerceBooleanProperty(value);\n\n        if (this.focused) {\n            this.focused = false;\n            this.stateChanges.next();\n        }\n    }\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    @Input()\n    get id(): string {\n        return this._id;\n    }\n\n    set id(value: string) {\n        this._id = value || this.uid;\n    }\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    @Input() placeholder: string;\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    @Input()\n    get required(): boolean {\n        return this._required;\n    }\n\n    set required(value: boolean) {\n        this._required = coerceBooleanProperty(value);\n    }\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    @Input()\n    get value(): string {\n        return this.valueAccessor.value;\n    }\n\n    set value(value: string) {\n        if (value !== this.value) {\n            this.valueAccessor.value = value;\n            this.stateChanges.next();\n        }\n    }\n\n    protected uid = `mc-textsrea-${nextUniqueId++}`;\n    protected previousNativeValue: any;\n    protected _disabled = false;\n    protected _id: string;\n    protected _required = false;\n\n    private valueAccessor: { value: any };\n    private growSubscription: Subscription;\n\n    private lineHeight: number = 0;\n    private freeRowsHeight: number = 0;\n    private minHeight: number = 0;\n\n    constructor(protected elementRef: ElementRef,\n                @Optional() @Self() public ngControl: NgControl,\n                @Optional() _parentForm: NgForm,\n                @Optional() _parentFormGroup: FormGroupDirective,\n                _defaultErrorStateMatcher: ErrorStateMatcher,\n                @Optional() @Self() @Inject(MC_TEXTAREA_VALUE_ACCESSOR) inputValueAccessor: any,\n                private ngZone: NgZone) {\n        super(_defaultErrorStateMatcher, _parentForm, _parentFormGroup, ngControl);\n        // If no input value accessor was explicitly specified, use the element as the textarea value\n        // accessor.\n        this.valueAccessor = inputValueAccessor || this.elementRef.nativeElement;\n\n        this.previousNativeValue = this.value;\n\n        // Force setter to be called in case id was not specified.\n        this.id = this.id;\n\n        const growObserver = fromEvent(elementRef.nativeElement, 'input')\n            /*.pipe(\n                map((event: any) => this.getGrowHeight()),\n                // map((event: any) => event.target.scrollHeight),\n                distinctUntilChanged()\n            )*/;\n        this.growSubscription = growObserver.subscribe(this.grow.bind(this));\n    }\n\n    ngOnInit() {\n        setTimeout(() => this.grow(), 0);\n        this.lineHeight = parseInt(getComputedStyle(this.elementRef.nativeElement).lineHeight!, 10);\n\n        const paddingTop = parseInt(getComputedStyle(this.elementRef.nativeElement).paddingTop!, 10);\n        const paddingBottom = parseInt(getComputedStyle(this.elementRef.nativeElement).paddingBottom!, 10);\n\n        // tslint:disable-next-line:no-magic-numbers\n        this.minHeight = this.lineHeight * 2 + paddingTop + paddingBottom;\n        this.freeRowsHeight = this.lineHeight;\n    }\n\n    ngOnChanges() {\n        this.stateChanges.next();\n    }\n\n    ngOnDestroy() {\n        this.stateChanges.complete();\n        this.growSubscription.unsubscribe();\n    }\n\n    ngDoCheck() {\n        if (this.ngControl) {\n            // We need to re-evaluate this on every change detection cycle, because there are some\n            // error triggers that we can't subscribe to (e.g. parent form submissions). This means\n            // that whatever logic is in here has to be super lean or we risk destroying the performance.\n            this.updateErrorState();\n        }\n\n        // We need to dirty-check the native element's value, because there are some cases where\n        // we won't be notified when it changes (e.g. the consumer isn't using forms or they're\n        // updating the value using `emitEvent: false`).\n        this.dirtyCheckNativeValue();\n    }\n\n    /** Grow textarea height to avoid vertical scroll  */\n    grow() {\n        if (!this.canGrow) {\n            return;\n        }\n\n        this.ngZone.runOutsideAngular(() => {\n            const textarea = this.elementRef.nativeElement;\n\n            const outerHeight = parseInt(window.getComputedStyle(textarea).height!, 10);\n            const diff = outerHeight - textarea.clientHeight;\n\n            textarea.style.height = 0; // this line is important to height recalculation\n\n            const height = Math.max(this.minHeight, textarea.scrollHeight + diff + this.freeRowsHeight);\n            textarea.style.height = `${height}px`;\n        });\n    }\n\n    /** Focuses the textarea. */\n    focus(): void {\n        this.elementRef.nativeElement.focus();\n    }\n\n    /** Callback for the cases where the focused state of the textarea changes. */\n    focusChanged(isFocused: boolean) {\n        if (isFocused !== this.focused) {\n            this.focused = isFocused;\n            this.stateChanges.next();\n        }\n    }\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    get empty(): boolean {\n        return !this.elementRef.nativeElement.value && !this.isBadInput();\n    }\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    onContainerClick() {\n        this.focus();\n    }\n\n    /** Does some manual dirty checking on the native textarea `value` property. */\n    protected dirtyCheckNativeValue() {\n        const newValue = this.value;\n\n        if (this.previousNativeValue !== newValue) {\n            this.previousNativeValue = newValue;\n            this.stateChanges.next();\n        }\n    }\n\n    /** Checks whether the textarea is invalid based on the native validation. */\n    protected isBadInput(): boolean {\n        // The `validity` property won't be present on platform-server.\n        const validity = (this.elementRef.nativeElement as HTMLTextAreaElement).validity;\n\n        return validity && validity.badInput;\n    }\n\n    private getGrowHeight(): number {\n        const textarea = this.elementRef.nativeElement;\n        const outerHeight = parseInt(window.getComputedStyle(textarea).height!.toString(), 10);\n        const diff = outerHeight - textarea.clientHeight;\n\n        return Math.max(this.minHeight, textarea.scrollHeight + diff);\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { A11yModule } from '@ptsecurity/cdk/a11y';\nimport { McCommonModule } from '@ptsecurity/mosaic/core';\n\nimport { McTextarea } from './textarea.component';\n\n\n@NgModule({\n    imports: [CommonModule, A11yModule, McCommonModule, FormsModule],\n    exports: [McTextarea],\n    declarations: [McTextarea]\n})\nexport class McTextareaModule {\n}\n","import {\n    Directive,\n    DoCheck,\n    ElementRef,\n    forwardRef,\n    Inject,\n    InjectionToken,\n    Input,\n    OnChanges,\n    OnDestroy,\n    Optional,\n    Renderer2,\n    Self\n} from '@angular/core';\nimport {\n    ControlValueAccessor,\n    FormControl,\n    FormGroupDirective,\n    NG_VALIDATORS,\n    NgControl,\n    NgForm,\n    ValidationErrors,\n    ValidatorFn,\n    Validators\n} from '@angular/forms';\nimport {\n    noop,\n    Subject\n} from 'rxjs';\n\nimport { coerceBooleanProperty } from '@ptsecurity/cdk/coercion';\nimport {\n    CanUpdateErrorState,\n    CanUpdateErrorStateCtor,\n    ErrorStateMatcher,\n    mixinErrorState\n} from '@ptsecurity/mosaic/core';\nimport { McFormFieldControl } from '@ptsecurity/mosaic/form-field';\n\nimport {\n    ARROW_DOWN_KEYCODE,\n    ARROW_LEFT_KEYCODE,\n    ARROW_RIGHT_KEYCODE,\n    ARROW_UP_KEYCODE,\n    DEFAULT_TIME_FORMAT,\n    HOURS_PER_DAY,\n    HOURS_MINUTES_REGEXP,\n    HOURS_MINUTES_SECONDS_REGEXP,\n    HOURS_ONLY_REGEXP,\n    MINUTES_PER_HOUR,\n    SECONDS_PER_MINUTE,\n    TIMEFORMAT_PLACEHOLDERS,\n    TimeFormats,\n    TimeParts\n} from './timepicker.constants';\n\n\nlet uniqueComponentIdSuffix: number = 0;\nlet validatorOnChange: () => void = noop;\nlet validator: ValidatorFn | null = () => null;\n\nexport const MC_INPUT_VALUE_ACCESSOR =\n    new InjectionToken<{ value: any }>('MC_INPUT_VALUE_ACCESSOR');\n\nexport class McTimepickerBase {\n    constructor(\n        public _defaultErrorStateMatcher: ErrorStateMatcher,\n        public _parentForm: NgForm,\n        public _parentFormGroup: FormGroupDirective,\n        public ngControl: NgControl) { }\n}\n\n// tslint:disable-next-line naming-convention\nexport const McTimepickerMixinBase:\n    CanUpdateErrorStateCtor &\n    typeof McTimepickerBase = mixinErrorState(McTimepickerBase);\n\n@Directive({\n    selector: 'input[mcTimepicker]',\n    exportAs: 'mcTimepickerInput',\n    host: {\n        class: 'mc-timepicker mc-input',\n        // Native input properties that are overwritten by Angular inputs need to be synced with\n        // the native input element. Otherwise property bindings for those don't work.\n        '[attr.id]': 'id',\n        '[attr.placeholder]': 'placeholder',\n        '[disabled]': 'disabled',\n        '[required]': 'required',\n        '[attr.time-format]': 'timeFormat',\n        '[attr.min-time]': 'minTime',\n        '[attr.max-time]': 'maxTime',\n        '[attr.value]': 'value',\n        '(blur)': 'onBlur()',\n        '(focus)': 'focusChanged(true)',\n        '(input)': 'onInput()',\n        '(paste)': 'onPaste($event)',\n        '(keydown)': 'onKeyDown($event)'\n    },\n    providers: [\n        {\n            provide: NG_VALIDATORS,\n            useValue: {\n                validate(c) { return validator ? validator(c) : null; },\n                registerOnValidatorChange(fn: () => void): void { validatorOnChange = fn; }\n            },\n            multi: true\n        },\n        {\n            provide: McFormFieldControl,\n            useExisting: forwardRef(() => McTimepicker)\n        }\n    ]\n\n})\nexport class McTimepicker extends McTimepickerMixinBase\n    implements McFormFieldControl<any>,\n        OnChanges,\n        OnDestroy,\n        DoCheck,\n        CanUpdateErrorState,\n        ControlValueAccessor {\n\n    /** An object used to control when error messages are shown. */\n    @Input() errorStateMatcher: ErrorStateMatcher;\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    focused: boolean = false;\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    readonly stateChanges: Subject<void> = new Subject<void>();\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    controlType: string = 'mc-timepicker';\n\n    @Input()\n    get disabled(): boolean {\n        if (this.ngControl && this.ngControl.disabled !== null) { return this.ngControl.disabled; }\n\n        return this._disabled;\n    }\n\n    set disabled(value: boolean) {\n        this._disabled = coerceBooleanProperty(value);\n\n        // Browsers may not fire the blur event if the input is disabled too quickly.\n        // Reset from here to ensure that the element doesn't become stuck.\n        if (this.focused) {\n            this.focused = false;\n        }\n\n        this.stateChanges.next();\n    }\n\n    @Input()\n    get id(): string { return this._id; }\n\n    set id(value: string) { this._id = value || this.uid; }\n\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    @Input() placeholder: string;\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    @Input()\n    get required(): boolean { return this._required; }\n\n    set required(value: boolean) { this._required = coerceBooleanProperty(value); }\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    @Input()\n    get value(): string { return this.inputValueAccessor.value; }\n\n    set value(value: string) {\n        if (value !== this.value) {\n            this.inputValueAccessor.value = value;\n            this.applyInputChanges();\n        }\n    }\n\n    @Input('time-format')\n    get timeFormat(): TimeFormats { return this._timeFormat; }\n\n    set timeFormat(formatValue: TimeFormats) {\n        this._timeFormat = Object\n            .keys(TimeFormats)\n            .map((timeFormatKey) => TimeFormats[timeFormatKey])\n            .indexOf(formatValue) > -1 ? formatValue : DEFAULT_TIME_FORMAT;\n\n        validatorOnChange();\n        this.placeholder = TIMEFORMAT_PLACEHOLDERS[this._timeFormat];\n    }\n\n    @Input('min-time')\n    get minTime(): string | null { return this._minTime; }\n\n    set minTime(minValue: string | null) {\n        this._minTime = minValue;\n        this.minDateTime = minValue !== null ? this.getDateFromTimeString(minValue) : undefined;\n        validatorOnChange();\n    }\n\n    @Input('max-time')\n    get maxTime(): string | null { return this._maxTime; }\n\n    set maxTime(maxValue: string | null) {\n        this._maxTime = maxValue;\n        this.maxDateTime = maxValue !== null ? this.getDateFromTimeString(maxValue) : undefined;\n        validatorOnChange();\n    }\n\n    private _id: string;\n    private readonly uid = `mc-timepicker-${uniqueComponentIdSuffix++}`;\n    private _disabled: boolean;\n    private _required: boolean;\n    private previousNativeValue: any;\n    private readonly inputValueAccessor: { value: any };\n    private onChange: (value: any) => void;\n    private onTouched: () => void;\n    private _timeFormat: TimeFormats;\n    private _minTime: string | null = null;\n    private minDateTime: Date | undefined;\n    private _maxTime: string | null = null;\n    private maxDateTime: Date | undefined;\n    private currentDateTimeInput: Date | undefined;\n\n    constructor(private readonly elementRef: ElementRef,\n                @Optional() @Self() public ngControl: NgControl,\n                @Optional() _parentForm: NgForm,\n                @Optional() _parentFormGroup: FormGroupDirective,\n                _defaultErrorStateMatcher: ErrorStateMatcher,\n                @Optional() @Self() @Inject(MC_INPUT_VALUE_ACCESSOR) inputValueAccessor: any,\n                private readonly renderer: Renderer2) {\n        super(_defaultErrorStateMatcher, _parentForm, _parentFormGroup, ngControl);\n\n        // If no input value accessor was explicitly specified, use the element as the input value\n        // accessor.\n        this.inputValueAccessor = inputValueAccessor || this.elementRef.nativeElement;\n\n        this.previousNativeValue = this.value;\n        this.onChange = noop;\n\n        // Force setter to be called in case id was not specified.\n        this.id = this.id;\n\n        this.placeholder = TIMEFORMAT_PLACEHOLDERS[DEFAULT_TIME_FORMAT];\n\n        // Instead of NG_VALUE_ACCESSOR (https://github.com/angular/material2/issues/8158#issuecomment-344618103)\n        if (this.ngControl) { this.ngControl.valueAccessor = this; }\n\n        // Substitute initial empty validator with validator linked to directive object instance (workaround)\n        validator = Validators.compose([\n            () => this.parseValidator(),\n            () => this.minTimeValidator(),\n            () => this.maxTimeValidator()\n        ]);\n    }\n\n    ngOnChanges(): void {\n        this.stateChanges.next();\n    }\n\n    ngOnDestroy(): void {\n        this.stateChanges.complete();\n    }\n\n    ngDoCheck(): void {\n        if (this.ngControl) {\n            // We need to re-evaluate this on every change detection cycle, because there are some\n            // error triggers that we can't subscribe to (e.g. parent form submissions). This means\n            // that whatever logic is in here has to be super lean or we risk destroying the performance.\n            this.updateErrorState();\n        }\n\n        // We need to dirty-check the native element's value, because there are some cases where\n        // we won't be notified when it changes (e.g. the consumer isn't using forms or they're\n        // updating the value using `emitEvent: false`).\n        this.dirtyCheckNativeValue();\n    }\n\n    focus(): void {\n        this.elementRef.nativeElement.focus();\n    }\n\n    focusChanged(isFocused: boolean): void {\n        if (isFocused !== this.focused) {\n            this.focused = isFocused;\n            this.onTouched();\n            this.stateChanges.next();\n        }\n    }\n\n    onBlur() {\n        this.applyInputChanges();\n        this.focusChanged(false);\n    }\n\n    onPaste($event) {\n        $event.preventDefault();\n        const clipboardUserInput: string = $event.clipboardData.getData('text');\n\n        if (this.getDateFromTimeString(clipboardUserInput) === undefined) { return; }\n\n        this.elementRef.nativeElement.value = clipboardUserInput;\n        this.onInput();\n    }\n\n    onInput() {\n        const initialCursorStart: number = this.elementRef.nativeElement.selectionStart;\n        const initialCursorEnd: number = this.elementRef.nativeElement.selectionEnd;\n        let isAutocompleteTriggered: boolean = false;\n\n        const {\n            hoursOnly,\n            hoursAndMinutes,\n            hoursAndMinutesAndSeconds\n        } = this.getParsedTimeParts(this.elementRef.nativeElement.value);\n\n        // tslint:disable no-magic-numbers\n        if (hoursOnly &&\n            hoursOnly[1] &&\n            hoursOnly[1].length === 2) {\n            isAutocompleteTriggered = true;\n        } else if (hoursAndMinutes &&\n            hoursAndMinutes[1].length === 1 &&\n            hoursAndMinutes[2] &&\n            hoursAndMinutes[2].length === 2) {\n            isAutocompleteTriggered = true;\n        } else if (hoursAndMinutesAndSeconds &&\n            hoursAndMinutesAndSeconds[1].length === 2 &&\n            hoursAndMinutesAndSeconds[2].length === 2 &&\n            hoursAndMinutesAndSeconds[3] &&\n            hoursAndMinutesAndSeconds[3].length === 2) {\n            isAutocompleteTriggered = true;\n        }\n        // tslint:enable no-magic-numbers\n\n        this.applyInputChanges({ doTimestringReformat: isAutocompleteTriggered });\n\n        this.elementRef.nativeElement.selectionStart = initialCursorStart;\n        this.elementRef.nativeElement.selectionEnd = initialCursorEnd;\n\n        if (isAutocompleteTriggered && this.ngControl.errors === null) {\n            this.createSelectionOfTimeComponentInInput(initialCursorStart + 1);\n        }\n    }\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    get empty(): boolean {\n        return !this.elementRef.nativeElement.value && !this.isBadInput();\n    }\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    onContainerClick() {\n        this.focus();\n    }\n\n    writeValue(value: Date | null): void {\n        if (value !== null) {\n            this.renderer.setProperty(this.elementRef.nativeElement,\n                'value',\n                this.getTimeStringFromDate(value, this.timeFormat)\n            );\n        }\n        this.onChange(value || null);\n        this.applyInputChanges();\n    }\n\n    onKeyDown(event: KeyboardEvent): void {\n\n        const keyCode: string = this.getKeyCode(event);\n\n        if (keyCode === ARROW_UP_KEYCODE || keyCode === ARROW_DOWN_KEYCODE) {\n            this.upDownTimeByArrowKeys(event);\n        }\n        if (keyCode === ARROW_LEFT_KEYCODE || keyCode === ARROW_RIGHT_KEYCODE) {\n            this.switchSelectionBetweenTimeparts(event);\n        }\n    }\n\n    registerOnChange(fn: (value: Date) => void): void {\n        this.onChange = fn;\n    }\n\n    registerOnTouched(fn: () => void): void {\n        this.onTouched = fn;\n    }\n\n    /** Does some manual dirty checking on the native input `value` property. */\n    private dirtyCheckNativeValue() {\n        const newValue = this.value;\n\n        if (this.previousNativeValue !== newValue) {\n            this.previousNativeValue = newValue;\n            this.stateChanges.next();\n        }\n    }\n\n    /** Checks whether the input is invalid based on the native validation. */\n    private isBadInput(): boolean {\n        const validity = (<HTMLInputElement> this.elementRef.nativeElement).validity;\n\n        return validity && validity.badInput;\n    }\n\n    private applyInputChanges(applyParams: {\n        changedTime?: Date;\n        doTimestringReformat?: boolean;\n    } = {}): void {\n        const { changedTime, doTimestringReformat = true } = applyParams;\n\n        const timeToApply: Date | undefined = changedTime ||\n            this.getDateFromTimeString(this.elementRef.nativeElement.value);\n        this.currentDateTimeInput = timeToApply;\n\n        if (doTimestringReformat && timeToApply !== undefined) {\n            const selectionStart: number = this.elementRef.nativeElement.selectionStart;\n            const selectionEnd: number = this.elementRef.nativeElement.selectionEnd;\n            this.renderer.setProperty(\n                this.elementRef.nativeElement,\n                'value',\n                this.getTimeStringFromDate(timeToApply, this.timeFormat));\n            this.elementRef.nativeElement.selectionStart = selectionStart;\n            this.elementRef.nativeElement.selectionEnd = selectionEnd;\n        }\n\n        (<FormControl> this.ngControl.control).updateValueAndValidity();\n        const result = this.ngControl.errors === null && timeToApply !== undefined ? timeToApply : null;\n        this.onChange(result);\n        this.stateChanges.next();\n    }\n\n    private upDownTimeByArrowKeys(event: KeyboardEvent): void {\n        event.preventDefault();\n\n        let changedTime: Date | undefined = this.currentDateTimeInput;\n        if (changedTime !== undefined) {\n            const cursorPos = this.elementRef.nativeElement.selectionStart;\n\n            const modifiedTimePart = this.getTimeEditMetrics(cursorPos)\n                .modifiedTimePart;\n            const keyCode: string = this.getKeyCode(event);\n            if (keyCode === ARROW_UP_KEYCODE) { changedTime = this.incrementTime(changedTime, modifiedTimePart); }\n            if (keyCode === ARROW_DOWN_KEYCODE) { changedTime = this.decrementTime(changedTime, modifiedTimePart); }\n            this.applyInputChanges({ changedTime });\n            this.createSelectionOfTimeComponentInInput(cursorPos);\n        }\n    }\n\n    private switchSelectionBetweenTimeparts(event: KeyboardEvent): void {\n        const changedTime: Date | undefined = this.currentDateTimeInput;\n        const keyCode: string = this.getKeyCode(event);\n\n        if (changedTime !== undefined) {\n            let cursorPos: number = this.elementRef.nativeElement.selectionStart;\n            if (keyCode === ARROW_LEFT_KEYCODE) {\n                cursorPos = this.getCursorPositionOfPrevTimePartStart(cursorPos, this.elementRef.nativeElement.value);\n            } else if (keyCode === ARROW_RIGHT_KEYCODE) {\n                cursorPos = this.getCursorPositionOfNextTimePartStart(cursorPos, this.elementRef.nativeElement.value);\n            }\n            this.createSelectionOfTimeComponentInInput(cursorPos);\n        }\n    }\n\n    /**\n     * @description Microsoft EDGE doesn't support KeyboaedEvent.code thus we need this helper\n     */\n    private getKeyCode(event: KeyboardEvent): string {\n        return event.code || event.key;\n    }\n\n    private createSelectionOfTimeComponentInInput(cursorPos: number): void {\n        setTimeout(() => {\n            const newEditParams = this.getTimeEditMetrics(cursorPos);\n            this.elementRef.nativeElement.selectionStart = newEditParams.cursorStartPosition;\n            this.elementRef.nativeElement.selectionEnd = newEditParams.cursorEndPosition;\n        });\n    }\n\n    private incrementTime(dateVal: Date,\n                          whatToIncrement: TimeParts = TimeParts.seconds): Date {\n        let { hours, minutes, seconds } = this.getTimeDigitsFromDate(dateVal);\n\n        switch (whatToIncrement) {\n            case TimeParts.hours:\n                hours++;\n                break;\n            case TimeParts.minutes:\n                minutes++;\n                break;\n            case TimeParts.seconds:\n                seconds++;\n                break;\n            default:\n        }\n\n        if (seconds > SECONDS_PER_MINUTE) { seconds = 0; }\n\n        if (minutes > MINUTES_PER_HOUR) { minutes = 0; }\n\n        if (hours > HOURS_PER_DAY) { hours = 0; }\n\n        return <Date> this.getDateFromTimeDigits(hours, minutes, seconds);\n    }\n\n    /**\n     * @description Decrement part of time\n     */\n    private decrementTime(dateVal: Date,\n                          whatToDecrement: TimeParts = TimeParts.seconds): Date {\n        let { hours, minutes, seconds } = this.getTimeDigitsFromDate(dateVal);\n\n        switch (whatToDecrement) {\n            case TimeParts.hours:\n                hours--;\n                break;\n            case TimeParts.minutes:\n                minutes--;\n                break;\n            case TimeParts.seconds:\n                seconds--;\n                break;\n            default:\n        }\n\n        if (seconds < 0) { seconds = SECONDS_PER_MINUTE; }\n\n        if (minutes < 0) { minutes = MINUTES_PER_HOUR; }\n\n        if (hours < 0) { hours = HOURS_PER_DAY; }\n\n        return <Date> this.getDateFromTimeDigits(hours, minutes, seconds);\n    }\n\n    private getCursorPositionOfPrevTimePartStart(cursorPos: number, timeString: string): number {\n        return cursorPos === 0 ? timeString.length : cursorPos - 1;\n    }\n\n    private getCursorPositionOfNextTimePartStart(cursorPos: number,\n                                                 timeString: string,\n                                                 timeDevider: string = ':'): number {\n        const nextDividerPos: number = timeString.indexOf(timeDevider, cursorPos);\n\n        return nextDividerPos !== undefined ? nextDividerPos + 1 : 0;\n    }\n\n    /**\n     * @description Get params for arrow-keys (up/down) time valie edit.\n     * @param cursorPosition Current cursor position in timeString\n     */\n    private getTimeEditMetrics(cursorPosition: number): {\n        modifiedTimePart: TimeParts;\n        cursorStartPosition: number;\n        cursorEndPosition: number;\n    } {\n        const timeString: string = this.elementRef.nativeElement.value;\n        let modifiedTimePart: TimeParts;\n        let cursorStartPosition: number;\n        let cursorEndPosition: number;\n        const hoursIndex = 0;\n        const minutesIndex = timeString.indexOf(':', hoursIndex + 1);\n        const secondsIndex = minutesIndex !== -1 ? timeString.indexOf(':', minutesIndex + 1) : -1;\n\n        if (secondsIndex !== -1 && cursorPosition > secondsIndex) {\n            modifiedTimePart = TimeParts.seconds;\n            cursorStartPosition = secondsIndex + 1;\n            cursorEndPosition = timeString.length;\n        } else if (minutesIndex !== -1 && cursorPosition > minutesIndex) {\n            modifiedTimePart = TimeParts.minutes;\n            cursorStartPosition = minutesIndex + 1;\n            cursorEndPosition = secondsIndex > -1 ? secondsIndex : timeString.length;\n        } else {\n            modifiedTimePart = TimeParts.hours;\n            cursorStartPosition = hoursIndex;\n            cursorEndPosition = minutesIndex !== -1 ? minutesIndex : timeString.length;\n        }\n\n        return {\n            modifiedTimePart,\n            cursorStartPosition,\n            cursorEndPosition\n        };\n    }\n\n    /**\n     * @description Create time string for displaying inside input element of UI\n     */\n    private getTimeStringFromDate(tempVal: Date,\n                                  timeFormat: TimeFormats = DEFAULT_TIME_FORMAT): string {\n        const hours: string = this.getNumberWithLeadingZero(tempVal.getHours());\n        const minutes: string = this.getNumberWithLeadingZero(tempVal.getMinutes());\n        const seconds: string = this.getNumberWithLeadingZero(tempVal.getSeconds());\n\n        const formattedTimeGenerators = {\n            [TimeFormats.HHmm]: () => `${hours}:${minutes}`,\n            [TimeFormats.HHmmss]: () => `${hours}:${minutes}:${seconds}`\n        };\n\n        return formattedTimeGenerators[timeFormat]();\n    }\n\n    private getParsedTimeParts(timeString: string): {\n        hoursOnly: any;\n        hoursAndMinutes: any;\n        hoursAndMinutesAndSeconds: any;\n    } {\n        const hoursAndMinutesAndSeconds = timeString.match(HOURS_MINUTES_SECONDS_REGEXP);\n        const hoursAndMinutes = timeString.match(HOURS_MINUTES_REGEXP);\n        const hoursOnly = timeString.match(HOURS_ONLY_REGEXP);\n\n        return {\n            hoursOnly,\n            hoursAndMinutes,\n            hoursAndMinutesAndSeconds\n        };\n    }\n\n    /**\n     * @description Create Date object from separate parts of time\n     */\n    private getDateFromTimeDigits(hours: number, minutes: number, seconds: number = 0): Date | undefined {\n        return this.getDateFromTimeString(`${hours}:${minutes}:${seconds}`);\n    }\n\n    private getDateFromTimeString(timeString: string | undefined): Date | undefined {\n        // TODO Use moment-js\n        if (timeString === undefined) { return; }\n\n        const {\n            hoursOnly,\n            hoursAndMinutes,\n            hoursAndMinutesAndSeconds\n        } = this.getParsedTimeParts(timeString);\n\n        if (timeString.trim().length === 0 ||\n            hoursOnly === null && hoursAndMinutes === null && hoursAndMinutesAndSeconds === null) {\n            return;\n        }\n\n        // tslint:disable no-magic-numbers\n        let hours: number = 0;\n        let minutes: number = 0;\n        let seconds: number = 0;\n\n        if (hoursOnly) {\n            hours = Number(hoursOnly[1]);\n        } else if (hoursAndMinutes) {\n            hours = Number(hoursAndMinutes[1]);\n            minutes = Number(hoursAndMinutes[2]);\n        } else if (hoursAndMinutesAndSeconds) {\n            hours = Number(hoursAndMinutesAndSeconds[1]);\n            minutes = Number(hoursAndMinutesAndSeconds[2]);\n            seconds = Number(hoursAndMinutesAndSeconds[3]);\n        }\n        // const timestamp: number = Date.parse(fullDateString);\n        const resultDate: Date = new Date(1970, 0, 1, hours, minutes, seconds);\n        // tslint:enable no-magic-numbers\n\n        return isNaN(resultDate.getTime()) ? undefined : resultDate;\n    }\n\n    private getNumberWithLeadingZero(digit: number): string {\n        const MAX_DIGIT_WITH_LEADING_ZERO: number = 9;\n\n        return digit > MAX_DIGIT_WITH_LEADING_ZERO ? `${digit}` : `0${digit}`;\n    }\n\n    private getTimeDigitsFromDate(dateVal: Date): { hours: number; minutes: number; seconds: number } {\n        return {\n            hours: dateVal.getHours(),\n            minutes: dateVal.getMinutes(),\n            seconds: dateVal.getSeconds()\n        };\n    }\n\n    private parseValidator(): ValidationErrors | null {\n        return this.currentDateTimeInput === undefined ?\n            { mcTimepickerParse: { text: this.elementRef.nativeElement.value } } :\n            null;\n    }\n\n    private minTimeValidator(): ValidationErrors | null {\n\n        if (this.currentDateTimeInput !== undefined &&\n            this.minDateTime !== undefined &&\n            this.isTimeLowerThenMin(this.currentDateTimeInput)) {\n            return { mcTimepickerLowerThenMintime: { text: this.elementRef.nativeElement.value } };\n        }\n\n        return null;\n    }\n\n    private maxTimeValidator(): ValidationErrors | null {\n        if (this.currentDateTimeInput !== undefined &&\n            this.maxDateTime !== undefined &&\n            this.isTimeGreaterThenMax(this.currentDateTimeInput)) {\n            return { mcTimepickerHigherThenMaxtime: { text: this.elementRef.nativeElement.value } };\n        }\n\n        return null;\n    }\n\n    private isTimeLowerThenMin(timeToCompare: Date): boolean {\n        return timeToCompare.getTime() - (<Date> this.minDateTime).getTime() < 0;\n    }\n\n    private isTimeGreaterThenMax(timeToCompare: Date): boolean {\n        return timeToCompare.getTime() - (<Date> this.maxDateTime).getTime() >= 0;\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\n\nimport { A11yModule } from '@ptsecurity/cdk/a11y';\nimport { PlatformModule } from '@ptsecurity/cdk/platform';\n\nimport { McTimepicker } from './timepicker';\n\n\n@NgModule({\n    imports: [\n        CommonModule,\n        A11yModule,\n        PlatformModule,\n        FormsModule\n    ],\n    declarations: [\n        McTimepicker\n    ],\n    exports: [\n        McTimepicker\n    ]\n})\nexport class McTimepickerModule {}\n","import {\n    animate,\n    AnimationTriggerMetadata,\n    state,\n    style,\n    transition,\n    trigger,\n    query,\n    animateChild,\n    group\n} from '@angular/animations';\n\n\n/**\n * The following are all the animations for the mat-select component, with each\n * const containing the metadata for one animation.\n *\n * The values below match the implementation of the AngularJS Material mat-select animation.\n */\nexport const mcSelectAnimations: {\n    readonly transformPanel: AnimationTriggerMetadata;\n    readonly fadeInContent: AnimationTriggerMetadata;\n} = {\n    /**\n     * This animation transforms the select's overlay panel on and off the page.\n     *\n     * When the panel is attached to the DOM, it expands its width by the amount of padding, scales it\n     * up to 100% on the Y axis, fades in its border, and translates slightly up and to the\n     * side to ensure the option text correctly overlaps the trigger text.\n     *\n     * When the panel is removed from the DOM, it simply fades out linearly.\n     */\n    transformPanel: trigger('transformPanel', [\n        state('void', style({\n            transform: 'scaleY(0)',\n            minWidth: '100%',\n            opacity: 0\n        })),\n        transition('void => *', group([\n            query('@fadeInContent', animateChild()),\n            animate('150ms cubic-bezier(0.25, 0.8, 0.25, 1)')\n        ])),\n        transition('* => void', [\n            animate('250ms 100ms linear', style({ opacity: 0 }))\n        ])\n    ]),\n\n    /**\n     * This animation fades in the background color and text content of the\n     * select's options. It is time delayed to occur 100ms after the overlay\n     * panel has transformed in.\n     */\n    fadeInContent: trigger('fadeInContent', [\n        state('showing', style({ opacity: 1 })),\n        transition('void => showing', [\n            style({ opacity: 0 }),\n            animate('150ms 100ms cubic-bezier(0.55, 0, 0.55, 0.2)')\n        ])\n    ])\n};\n\n\n/**\n * @deprecated\n * @breaking-change 7.0.0\n */\nexport const transformPanel = mcSelectAnimations.transformPanel;\n\n/**\n * @deprecated\n * @breaking-change 7.0.0\n */\nexport const fadeInContent = mcSelectAnimations.fadeInContent;\n","import {\n    AfterContentInit,\n    Attribute,\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component, ContentChildren, EventEmitter, forwardRef, Input, IterableDiffer,\n    IterableDiffers, Output, QueryList,\n    ViewChild,\n    ViewEncapsulation,\n    Directive, ElementRef, Inject\n} from '@angular/core';\nimport { NodeDef, ViewData } from '@angular/core/src/view';\n\nimport { SelectionModel } from '@ptsecurity/cdk/collections';\nimport { CdkTreeNode, CdkTree, CdkTreeNodeOutlet } from '@ptsecurity/cdk/tree';\n\nimport {\n    CanDisable, CanDisableCtor,\n    HasTabIndex,\n    HasTabIndexCtor,\n    mixinDisabled,\n    mixinTabIndex,\n    toBoolean\n} from '@ptsecurity/mosaic/core';\n\nimport { FocusKeyManager } from '@ptsecurity/cdk/a11y';\n\nimport { END, ENTER, HOME, LEFT_ARROW, PAGE_DOWN, PAGE_UP, RIGHT_ARROW, SPACE } from '@ptsecurity/cdk/keycodes';\n\n\n/**\n * Wrapper for the CdkTree node with Material design styles.\n */\n@Directive({\n    exportAs: 'mcTreeNodeOption',\n    selector: 'mc-tree-node-option',\n    host: {\n        tabindex: '-1',\n        '[class.mc-selected]': 'selected',\n        '[class.mc-focused]': '_hasFocus',\n        '[attr.aria-expanded]': 'isExpanded',\n        '[attr.aria-level]': 'role === \"treeitem\" ? level : null',\n        class: 'mc-tree-node',\n\n        '(focus)': '_handleFocus()',\n        '(blur)': '_handleBlur()',\n\n        '(click)': '_handleClick()'\n    },\n    providers: [\n        { provide: CdkTreeNode, useExisting: McTreeNodeOption }\n    ]\n})\nexport class McTreeNodeOption<T> extends CdkTreeNode<T> implements CanDisable {\n    @Input() role: 'treeitem' | 'group' = 'treeitem';\n\n    @Input()\n    get disabled() {\n        return this._disabled;\n    }\n\n    set disabled(value: any) {\n        const newValue = toBoolean(value);\n\n        if (newValue !== this._disabled) {\n            this._disabled = newValue;\n        }\n    }\n\n    @Input()\n    get selected(): boolean {\n        return this.treeSelection.selectedOptions && this.treeSelection.selectedOptions.isSelected(this) || false;\n    }\n\n    set selected(value: boolean) {\n        const isSelected = toBoolean(value);\n\n        if (isSelected !== this._selected) {\n            this.setSelected(isSelected);\n\n            // this.treeSelection._reportValueChange();\n        }\n    }\n\n    private _hasFocus: boolean = false;\n\n    private _disabled: boolean = false;\n    private _selected: boolean = false;\n\n    constructor(\n        protected _elementRef: ElementRef,\n        @Inject(forwardRef(() => McTreeSelection))\n        protected treeSelection: McTreeSelection<T>\n    ) {\n        super(_elementRef, treeSelection);\n    }\n\n    focus(): void {\n        this._elementRef.nativeElement.focus();\n\n        this.treeSelection.setFocusedOption(this);\n    }\n\n    toggle(): void {\n        this.selected = !this.selected;\n    }\n\n    setSelected(selected: boolean) {\n        if (this._selected === selected || !this.treeSelection.selectedOptions) { return; }\n\n        this._selected = selected;\n\n        if (selected) {\n            this.treeSelection.selectedOptions.select(this);\n        } else {\n            this.treeSelection.selectedOptions.deselect(this);\n        }\n\n        // this._changeDetector.markForCheck();\n    }\n\n    _getHeight(): number {\n        return this._elementRef.nativeElement.getClientRects()[0].height;\n    }\n\n    _handleFocus(): void {\n        if (this.disabled || this._hasFocus) { return; }\n\n        this._hasFocus = true;\n    }\n\n    _handleBlur(): void {\n        this._hasFocus = false;\n    }\n\n    _handleClick(): void {\n        if (this.disabled) { return; }\n\n        this.treeSelection.setFocusedOption(this);\n    }\n}\n\nexport const _McTreeSelectionBase:\n    HasTabIndexCtor &\n    CanDisableCtor &\n    typeof CdkTree\n    = mixinTabIndex(mixinDisabled(CdkTree));\n\nexport class McTreeNavigationChange {\n    constructor(\n        public source: McTreeSelection<any>,\n        public option: McTreeNodeOption<any>\n    ) {}\n}\n\nexport class McTreeSelectionChange {\n    constructor(\n        public source: McTreeSelection<any>,\n        public option: McTreeNodeOption<any>\n    ) {}\n}\n\n@Component({\n    exportAs: 'mcTreeSelection',\n    selector: 'mc-tree-selection',\n    template: `<ng-container cdkTreeNodeOutlet></ng-container>`,\n    host: {\n        '[tabIndex]': 'tabIndex',\n        class: 'mc-tree-selection',\n        role: 'tree-selection',\n        '(keydown)': '_onKeyDown($event)',\n        '(window:resize)': 'updateScrollSize()'\n    },\n    styleUrls: ['./tree.css'],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    providers: [{ provide: CdkTree, useExisting: McTreeSelection }]\n})\nexport class McTreeSelection<T> extends _McTreeSelectionBase<T>\n    implements AfterContentInit, CanDisable, HasTabIndex {\n    // Outlets within the tree's template where the dataNodes will be inserted.\n    @ViewChild(CdkTreeNodeOutlet) _nodeOutlet: CdkTreeNodeOutlet;\n\n    @ContentChildren(forwardRef(() => McTreeNodeOption)) options: QueryList<McTreeNodeOption<T>>;\n\n    _keyManager: FocusKeyManager<McTreeNodeOption<T>>;\n\n    selectedOptions: SelectionModel<McTreeNodeOption<T>>;\n\n    _disabled: boolean = false;\n    tabIndex: number;\n    multiple: boolean;\n    autoSelect: boolean;\n    noUnselect: boolean;\n\n    // todo temporary solution\n    withShift: boolean;\n    withCtrl: boolean;\n\n    @Input()\n    get disabled(): boolean {\n        return this._disabled;\n    }\n\n    set disabled(rawValue: boolean) {\n        const value = toBoolean(rawValue);\n\n        if (this._disabled !== value) {\n            this._disabled = value;\n\n            if (this._disabled) {\n                console.log('need disable all options');\n            } else {\n                console.log('need enable all options');\n            }\n        }\n    }\n\n    @Output() readonly navigationChange = new EventEmitter<McTreeNavigationChange>();\n\n    @Output() readonly selectionChange = new EventEmitter<McTreeSelectionChange>();\n\n    constructor(\n        private _elementRef: ElementRef,\n        _differs: IterableDiffers,\n        _changeDetectorRef: ChangeDetectorRef,\n        @Attribute('tabindex') tabIndex: string,\n        @Attribute('multiple') multiple: string,\n        @Attribute('auto-select') autoSelect: string,\n        @Attribute('no-unselect') noUnselect: string\n    ) {\n        super(_differs, _changeDetectorRef);\n\n        this.tabIndex = parseInt(tabIndex) || 0;\n\n        this.multiple = multiple === null ? true : toBoolean(multiple);\n        this.autoSelect = autoSelect === null ? true : toBoolean(autoSelect);\n        this.noUnselect = noUnselect === null ? true : toBoolean(noUnselect);\n\n        this.selectedOptions = new SelectionModel<McTreeNodeOption<T>>(this.multiple);\n    }\n\n    _onKeyDown(event: KeyboardEvent) {\n        const keyCode = event.keyCode;\n        this.withShift = event.shiftKey;\n        this.withCtrl = event.ctrlKey;\n\n        switch (keyCode) {\n            case LEFT_ARROW:\n                if (this._keyManager.activeItem) {\n                    this.treeControl.collapse(this._keyManager.activeItem.data);\n                }\n\n                event.preventDefault();\n\n                break;\n            case RIGHT_ARROW:\n                if (this._keyManager.activeItem) {\n                    this.treeControl.expand(this._keyManager.activeItem.data);\n                }\n\n                event.preventDefault();\n\n                break;\n            case SPACE:\n            case ENTER:\n                this.toggleFocusedOption();\n                event.preventDefault();\n\n                break;\n            case HOME:\n                this._keyManager.setFirstItemActive();\n                event.preventDefault();\n\n                break;\n            case END:\n                this._keyManager.setLastItemActive();\n                event.preventDefault();\n\n                break;\n            case PAGE_UP:\n                this._keyManager.setPreviousPageItemActive();\n                event.preventDefault();\n\n                break;\n            case PAGE_DOWN:\n                this._keyManager.setNextPageItemActive();\n                event.preventDefault();\n\n                break;\n            default:\n                this._keyManager.onKeydown(event);\n        }\n    }\n\n    ngAfterContentInit(): void {\n        this._keyManager = new FocusKeyManager<McTreeNodeOption<T>>(this.options)\n            .withTypeAhead()\n            .withVerticalOrientation(true)\n            .withHorizontalOrientation(null);\n    }\n\n    updateScrollSize(): void {\n        if (!this.options.first) { return; }\n\n        this._keyManager.withScrollSize(Math.floor(this._getHeight() / this.options.first._getHeight()));\n    }\n\n    setFocusedOption(option: McTreeNodeOption<T>): void {\n        this._keyManager.updateActiveItem(option);\n\n        if (this.withShift && this.multiple) {\n            const previousIndex = this._keyManager.previousActiveItemIndex;\n            const activeIndex = this._keyManager.activeItemIndex;\n\n            if (previousIndex < activeIndex) {\n                this.options.forEach((item, index) => {\n                    if (index >= previousIndex && index <= activeIndex) { item.setSelected(true); }\n                });\n            } else {\n                this.options.forEach((item, index) => {\n                    if (index >= activeIndex && index <= previousIndex) { item.setSelected(true); }\n                });\n            }\n\n            this.withShift = false;\n        } else if (this.withCtrl) {\n            this.withCtrl = false;\n\n            if (!this._canDeselectLast(option)) { return; }\n\n            option.toggle();\n        } else {\n            if (this.autoSelect) {\n                this.options.forEach((item) => item.setSelected(false));\n                option.setSelected(true);\n            }\n        }\n\n        this._emitNavigationEvent(option);\n    }\n\n    // Toggles the selected state of the currently focused option.\n    toggleFocusedOption(): void {\n        const focusedIndex = this._keyManager.activeItemIndex;\n\n        if (focusedIndex != null && this._isValidIndex(focusedIndex)) {\n            const focusedOption: McTreeNodeOption<T> = this.options.toArray()[focusedIndex];\n\n            if (focusedOption && this._canDeselectLast(focusedOption)) {\n                focusedOption.toggle();\n\n                // Emit a change event because the focused option changed its state through user interaction.\n                this._emitChangeEvent(focusedOption);\n            }\n        }\n    }\n\n    renderNodeChanges(\n        data: T[],\n        dataDiffer: IterableDiffer<T> = this._dataDiffer,\n        viewContainer: any = this._nodeOutlet.viewContainer,\n        parentData?: T\n    ) {\n        super.renderNodeChanges(data, dataDiffer, viewContainer, parentData);\n\n        const arrayOfInstances = [];\n\n        viewContainer._embeddedViews.forEach((view: ViewData) => {\n            const viewDef = view.def;\n\n            viewDef.nodes.forEach((node: NodeDef) => {\n                if (viewDef.nodeMatchedQueries === node.matchedQueryIds) {\n                    const nodeData: any = view.nodes[node.nodeIndex];\n\n                    arrayOfInstances.push(nodeData.instance as never);\n                }\n            });\n        });\n\n        if (this.options) {\n            this.options.reset(arrayOfInstances);\n            this.options.notifyOnChanges();\n        }\n\n        this.updateScrollSize();\n    }\n\n    _getHeight(): number {\n        return this._elementRef.nativeElement.getClientRects()[0].height;\n    }\n\n    _emitNavigationEvent(option: McTreeNodeOption<T>): void {\n        this.navigationChange.emit(new McTreeNavigationChange(this, option));\n    }\n\n    _emitChangeEvent(option: McTreeNodeOption<T>): void {\n        this.selectionChange.emit(new McTreeNavigationChange(this, option));\n    }\n\n    /**\n     * Utility to ensure all indexes are valid.\n     * @param index The index to be checked.\n     * @returns True if the index is valid for our list of options.\n     */\n    private _isValidIndex(index: number): boolean {\n        return index >= 0 && index < this.options.length;\n    }\n\n    private _canDeselectLast(option: McTreeNodeOption<T>): boolean {\n        return !(this.noUnselect && this.selectedOptions.selected.length === 1 && option.selected);\n    }\n}\n\n","import { NgModule } from '@angular/core';\n\nimport { CommonModule } from '@angular/common';\nimport { CdkTreeModule } from '@ptsecurity/cdk/tree';\n\nimport { McTreeNodeDef } from './node';\nimport { McTreeNodePadding } from './padding';\nimport { McTreeSelection, McTreeNodeOption } from './tree-selection';\n\n\nconst MC_TREE_DIRECTIVES = [\n    McTreeNodeDef,\n    McTreeNodePadding,\n    McTreeSelection,\n    McTreeNodeOption\n];\n\n@NgModule({\n    imports: [CommonModule, CdkTreeModule],\n    exports: MC_TREE_DIRECTIVES,\n    declarations: MC_TREE_DIRECTIVES\n})\nexport class McTreeModule {}\n","import { ICollectionViewer, DataSource } from '@ptsecurity/cdk/collections';\nimport { FlatTreeControl, ITreeControl } from '@ptsecurity/cdk/tree';\nimport { BehaviorSubject, merge, Observable } from 'rxjs';\nimport { map, take } from 'rxjs/operators';\n\n\n/**\n * Tree flattener to convert a normal type of node to node with children & level information.\n * Transform nested nodes of type `T` to flattened nodes of type `F`.\n *\n * For example, the input data of type `T` is nested, and contains its children data:\n *   SomeNode: {\n *     key: 'Fruits',\n *     children: [\n *       NodeOne: {\n *         key: 'Apple',\n *       },\n *       NodeTwo: {\n *        key: 'Pear',\n *      }\n *    ]\n *  }\n *  After flattener flatten the tree, the structure will become\n *  SomeNode: {\n *    key: 'Fruits',\n *    expandable: true,\n *    level: 1\n *  },\n *  NodeOne: {\n *    key: 'Apple',\n *    expandable: false,\n *    level: 2\n *  },\n *  NodeTwo: {\n *   key: 'Pear',\n *   expandable: false,\n *   level: 2\n * }\n * and the output flattened type is `F` with additional information.\n */\nexport class McTreeFlattener<T, F> {\n\n    constructor(public transformFunction: (node: T, level: number) => F,\n                public getLevel: (node: F) => number,\n                public isExpandable: (node: F) => boolean,\n                public getChildren: (node: T) => Observable<T[]>) {\n    }\n\n    _flattenNode(node: T, level: number,\n                 resultNodes: F[], parentMap: boolean[]): F[] {\n        const flatNode = this.transformFunction(node, level);\n        resultNodes.push(flatNode);\n\n        if (this.isExpandable(flatNode)) {\n            this.getChildren(node).pipe(take(1)).subscribe((children) => {\n                children.forEach((child, index) => {\n                    const childParentMap: boolean[] = parentMap.slice();\n                    childParentMap.push(index !== children.length - 1);\n                    this._flattenNode(child, level + 1, resultNodes, childParentMap);\n                });\n            });\n        }\n\n        return resultNodes;\n    }\n\n    /**\n     * Flatten a list of node type T to flattened version of node F.\n     * Please note that type T may be nested, and the length of `structuredData` may be different\n     * from that of returned list `F[]`.\n     */\n    flattenNodes(structuredData: T[]): F[] {\n        const resultNodes: F[] = [];\n        structuredData.forEach((node) => this._flattenNode(node, 0, resultNodes, []));\n\n        return resultNodes;\n    }\n\n    /**\n     * Expand flattened node with current expansion status.\n     * The returned list may have different length.\n     */\n    expandFlattenedNodes(nodes: F[], treeControl: ITreeControl<F>): F[] {\n        const results: F[] = [];\n        const currentExpand: boolean[] = [];\n        currentExpand[0] = true;\n\n        nodes.forEach((node) => {\n            let expand = true;\n            for (let i = 0; i <= this.getLevel(node); i++) {\n                expand = expand && currentExpand[i];\n            }\n\n            if (expand) { results.push(node); }\n\n            if (this.isExpandable(node)) {\n                currentExpand[this.getLevel(node) + 1] = treeControl.isExpanded(node);\n            }\n        });\n\n        return results;\n    }\n}\n\n\n/**\n * Data source for flat tree.\n * The data source need to handle expansion/collapsion of the tree node and change the data feed\n * to `McTree`.\n * The nested tree nodes of type `T` are flattened through `MсTreeFlattener`, and converted\n * to type `F` for `McTree` to consume.\n */\nexport class McTreeFlatDataSource<T, F> extends DataSource<F> {\n    _flattenedData = new BehaviorSubject<F[]>([]);\n\n    _expandedData = new BehaviorSubject<F[]>([]);\n\n    _data: BehaviorSubject<T[]>;\n\n    get data() {\n        return this._data.value;\n    }\n\n    set data(value: T[]) {\n        this._data.next(value);\n        this._flattenedData.next(this.treeFlattener.flattenNodes(this.data));\n        this.treeControl.dataNodes = this._flattenedData.value;\n    }\n\n    constructor(private treeControl: FlatTreeControl<F>,\n                private treeFlattener: McTreeFlattener<T, F>,\n                initialData: T[] = []) {\n        super();\n        this._data = new BehaviorSubject<T[]>(initialData);\n    }\n\n    connect(collectionViewer: ICollectionViewer): Observable<F[]> {\n        const changes = [\n            collectionViewer.viewChange,\n            this.treeControl.expansionModel.onChange!,\n            this._flattenedData\n        ];\n\n        return merge(...changes).pipe(map(() => {\n            this._expandedData.next(\n                this.treeFlattener.expandFlattenedNodes(this._flattenedData.value, this.treeControl));\n\n            return this._expandedData.value;\n        }));\n    }\n\n    disconnect() {\n        // no op\n    }\n}\n\n","import { ICollectionViewer, DataSource } from '@ptsecurity/cdk/collections';\nimport { BehaviorSubject, merge, Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\n\n/**\n * Data source for nested tree.\n *\n * The data source for nested tree doesn't have to consider node flattener, or the way to expand\n * or collapse. The expansion/collapsion will be handled by ITreeControl and each non-leaf node.\n */\nexport class McTreeNestedDataSource<T> extends DataSource<T> {\n    _data = new BehaviorSubject<T[]>([]);\n\n    /**\n     * Data for the nested tree\n     */\n    get data() {\n        return this._data.value;\n    }\n\n    set data(value: T[]) {\n        this._data.next(value);\n    }\n\n    connect(collectionViewer: ICollectionViewer): Observable<T[]> {\n        return merge(...[collectionViewer.viewChange, this._data])\n            .pipe(map(() => this.data));\n    }\n\n    disconnect() {\n        // no op\n    }\n}\n\n","import { Directive, TemplateRef } from '@angular/core';\n\n\n/** Decorates the `ng-template` tags and reads out the template from it. */\n@Directive({ selector: '[mcTabContent]' })\nexport class McTabContent {\n    constructor(public template: TemplateRef<any>) { }\n}\n","import { Directive } from '@angular/core';\nimport { CdkPortal } from '@ptsecurity/cdk/portal';\n\n\n/** Used to flag tab labels for use with the portal directive */\n@Directive({\n    selector: '[mc-tab-label], [mcTabLabel]'\n})\nexport class McTabLabel extends CdkPortal {}\n\n// TODO: workaround for https://github.com/angular/material2/issues/12760\n(McTabLabel as any).ctorParameters = () => (CdkPortal as any).ctorParameters;\n","import {\n    ChangeDetectionStrategy,\n    Component,\n    ContentChild,\n    Input,\n    OnChanges,\n    OnDestroy,\n    OnInit,\n    SimpleChanges,\n    TemplateRef,\n    ViewChild,\n    ViewContainerRef,\n    ViewEncapsulation\n} from '@angular/core';\nimport { TemplatePortal } from '@ptsecurity/cdk/portal';\nimport {\n    CanDisable,\n    CanDisableCtor,\n    mixinDisabled\n} from '@ptsecurity/mosaic/core';\nimport { Subject } from 'rxjs';\n\nimport { McTabContent } from './tab-content';\nimport { McTabLabel } from './tab-label';\n\n\nexport class McTabBase {}\nexport const mcTabMixinBase: CanDisableCtor & typeof McTabBase = mixinDisabled(\n    McTabBase\n);\n\n@Component({\n    selector: 'mc-tab',\n    // Create a template for the content of the <mc-tab> so that we can grab a reference to this\n    // TemplateRef and use it in a Portal to render the tab content in the appropriate place in the\n    // tab-group.\n    template: '<ng-template><ng-content></ng-content></ng-template>',\n    inputs: ['disabled'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n    exportAs: 'mcTab'\n})\nexport class McTab extends mcTabMixinBase\n    implements OnInit, CanDisable, OnChanges, OnDestroy {\n    /** @docs-private */\n    get content(): TemplatePortal | null {\n        return this.contentPortal;\n    }\n    /** Content for the tab label given by `<ng-template mc-tab-label>`. */\n    @ContentChild(McTabLabel)\n    templateLabel: McTabLabel;\n\n    /**\n     * Template provided in the tab content that will be used if present, used to enable lazy-loading\n     */\n    @ContentChild(McTabContent, { read: TemplateRef })\n    explicitContent: TemplateRef<any>;\n\n    /** Template inside the McTab view that contains an `<ng-content>`. */\n    @ViewChild(TemplateRef)\n    implicitContent: TemplateRef<any>;\n\n    /** Plain text label for the tab, used when there is no template label. */\n    @Input('label')\n    textLabel: string = '';\n\n    /** Aria label for the tab. */\n    @Input('aria-label')\n    ariaLabel: string;\n\n    /**\n     * Reference to the element that the tab is labelled by.\n     * Will be cleared if `aria-label` is set at the same time.\n     */\n    @Input('aria-labelledby')\n    ariaLabelledby: string;\n\n    /** Emits whenever the internal state of the tab changes. */\n    readonly stateChanges = new Subject<void>();\n\n    /**\n     * The relatively indexed position where 0 represents the center, negative is left, and positive\n     * represents the right.\n     */\n    position: number | null = null;\n\n    /**\n     * The initial relatively index origin of the tab if it was created and selected after there\n     * was already a selected tab. Provides context of what position the tab should originate from.\n     */\n    origin: number | null = null;\n\n    /**\n     * Whether the tab is currently active.\n     */\n    isActive = false;\n\n    /** Portal that will be the hosted content of the tab */\n    private contentPortal: TemplatePortal | null = null;\n\n    constructor(private viewContainerRef: ViewContainerRef) {\n        super();\n    }\n\n    ngOnChanges(changes: SimpleChanges): void {\n        if (\n            changes.hasOwnProperty('textLabel') ||\n            changes.hasOwnProperty('disabled')\n        ) {\n            this.stateChanges.next();\n        }\n    }\n\n    ngOnDestroy(): void {\n        this.stateChanges.complete();\n    }\n\n    ngOnInit(): void {\n        this.contentPortal = new TemplatePortal(\n            this.explicitContent || this.implicitContent,\n            this.viewContainerRef\n        );\n    }\n}\n","import {\n    animate,\n    state,\n    style,\n    transition,\n    trigger,\n    AnimationTriggerMetadata\n} from '@angular/animations';\n\n\nexport const mcTabsAnimations: {\n    readonly translateTab: AnimationTriggerMetadata;\n} = {\n    /** Animation translates a tab along the X axis. */\n    translateTab: trigger('translateTab', [\n        // Note: transitions to `none` instead of 0, because some browsers might blur the content.\n        state(\n            'center, void, left-origin-center, right-origin-center',\n            style({ transform: 'none' })\n        ),\n\n        // If the tab is either on the left or right, we additionally add a `min-height` of 1px\n        // in order to ensure that the element has a height before its state changes. This is\n        // necessary because Chrome does seem to skip the transition in RTL mode if the element does\n        // not have a static height and is not rendered. See related issue: #9465\n        state(\n            'left',\n            style({ transform: 'translate3d(-100%, 0, 0)', minHeight: '1px' })\n        ),\n        state(\n            'right',\n            style({ transform: 'translate3d(100%, 0, 0)', minHeight: '1px' })\n        ),\n\n        transition(\n            '* => left, * => right, left => center, right => center',\n            animate('{{animationDuration}} cubic-bezier(0.35, 0, 0.25, 1)')\n        ),\n        transition('void => left-origin-center', [\n            style({ transform: 'translate3d(-100%, 0, 0)' }),\n            animate('{{animationDuration}} cubic-bezier(0.35, 0, 0.25, 1)')\n        ]),\n        transition('void => right-origin-center', [\n            style({ transform: 'translate3d(100%, 0, 0)' }),\n            animate('{{animationDuration}} cubic-bezier(0.35, 0, 0.25, 1)')\n        ])\n    ])\n};\n","import { AnimationEvent } from '@angular/animations';\nimport {\n    Component,\n    ChangeDetectorRef,\n    Input,\n    Inject,\n    Output,\n    EventEmitter,\n    OnDestroy,\n    OnInit,\n    ElementRef,\n    Directive,\n    Optional,\n    ViewEncapsulation,\n    ChangeDetectionStrategy,\n    ComponentFactoryResolver,\n    ViewContainerRef,\n    forwardRef,\n    ViewChild\n} from '@angular/core';\nimport { Directionality, Direction } from '@ptsecurity/cdk/bidi';\nimport { TemplatePortal, CdkPortalOutlet, PortalHostDirective } from '@ptsecurity/cdk/portal';\nimport { Subscription } from 'rxjs';\nimport { startWith } from 'rxjs/operators';\n\nimport { mcTabsAnimations } from './tabs-animations';\n\n\n/**\n * These position states are used internally as animation states for the tab body. Setting the\n * position state to left, right, or center will transition the tab body from its current\n * position to its respective state. If there is not current position (void, in the case of a new\n * tab body), then there will be no transition animation to its state.\n *\n * In the case of a new tab body that should immediately be centered with an animating transition,\n * then left-origin-center or right-origin-center can be used, which will use left or right as its\n * psuedo-prior state.\n */\nexport type McTabBodyPositionState =\n    'left' | 'center' | 'right' | 'left-origin-center' | 'right-origin-center';\n\n/**\n * The origin state is an internally used state that is set on a new tab body indicating if it\n * began to the left or right of the prior selected index. For example, if the selected index was\n * set to 1, and a new tab is created and selected at index 2, then the tab body would have an\n * origin of right because its index was greater than the prior selected index.\n */\nexport type McTabBodyOriginState = 'left' | 'right';\n\n/**\n * Wrapper for the contents of a tab.\n * @docs-private\n */\n@Component({\n    selector: 'mc-tab-body',\n    templateUrl: 'tab-body.html',\n    styleUrls: ['tab-body.css'],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    animations: [mcTabsAnimations.translateTab],\n    host: {\n        class: 'mc-tab-body'\n    }\n})\nexport class McTabBody implements OnInit, OnDestroy {\n\n    /** The shifted index position of the tab body, where zero represents the active center tab. */\n    @Input()\n    set position(position: number) {\n        this.positionIndex = position;\n        this.computePositionAnimationState();\n    }\n\n    /** Tab body position state. Used by the animation trigger for the current state. */\n    bodyPosition: McTabBodyPositionState;\n\n    /** Event emitted when the tab begins to animate towards the center as the active tab. */\n    @Output() readonly onCentering: EventEmitter<number> = new EventEmitter<number>();\n\n    /** Event emitted before the centering of the tab begins. */\n    @Output() readonly beforeCentering: EventEmitter<boolean> = new EventEmitter<boolean>();\n\n    /** Event emitted before the centering of the tab begins. */\n    @Output() readonly afterLeavingCenter: EventEmitter<boolean> = new EventEmitter<boolean>();\n\n    /** Event emitted when the tab completes its animation towards the center. */\n    @Output() readonly onCentered: EventEmitter<void> = new EventEmitter<void>(true);\n\n    /** The portal host inside of this container into which the tab body content will be loaded. */\n    @ViewChild(PortalHostDirective) portalHost: PortalHostDirective;\n\n    /** The tab body content to display. */\n    @Input('content') content: TemplatePortal;\n\n    /** Position that will be used when the tab is immediately becoming visible after creation. */\n    @Input() origin: number;\n\n    // Note that the default value will always be overwritten by `McTabBody`, but we need one\n    // anyway to prevent the animations module from throwing an error if the body is used on its own.\n    /** Duration for the tab's animation. */\n    @Input() animationDuration: string = '0ms';\n\n    /** Current position of the tab-body in the tab-group. Zero means that the tab is visible. */\n    private positionIndex: number;\n\n    /** Subscription to the directionality change observable. */\n    private dirChangeSubscription = Subscription.EMPTY;\n\n    constructor(private elementRef: ElementRef<HTMLElement>,\n                @Optional() private dir: Directionality,\n                changeDetectorRef: ChangeDetectorRef) {\n\n        if (this.dir && changeDetectorRef) {\n            this.dirChangeSubscription = this.dir.change.subscribe((direction: Direction) => {\n                this.computePositionAnimationState(direction);\n                changeDetectorRef.markForCheck();\n            });\n        }\n    }\n\n    /**\n     * After initialized, check if the content is centered and has an origin. If so, set the\n     * special position states that transition the tab from the left or right before centering.\n     */\n    ngOnInit() {\n        if (this.bodyPosition === 'center' && this.origin != null) {\n            this.bodyPosition = this.computePositionFromOrigin();\n        }\n    }\n\n    ngOnDestroy() {\n        this.dirChangeSubscription.unsubscribe();\n    }\n\n    onTranslateTabStarted(e: AnimationEvent): void {\n        const isCentering = this.isCenterPosition(e.toState);\n        this.beforeCentering.emit(isCentering);\n        if (isCentering) {\n            this.onCentering.emit(this.elementRef.nativeElement.clientHeight);\n        }\n    }\n\n    onTranslateTabComplete(e: AnimationEvent): void {\n        // If the transition to the center is complete, emit an event.\n        if (this.isCenterPosition(e.toState) && this.isCenterPosition(this.bodyPosition)) {\n            this.onCentered.emit();\n        }\n\n        if (this.isCenterPosition(e.fromState) && !this.isCenterPosition(this.bodyPosition)) {\n            this.afterLeavingCenter.emit();\n        }\n    }\n\n    /** The text direction of the containing app. */\n    getLayoutDirection(): Direction {\n        return this.dir && this.dir.value === 'rtl' ? 'rtl' : 'ltr';\n    }\n\n    /** Whether the provided position state is considered center, regardless of origin. */\n    isCenterPosition(position: McTabBodyPositionState | string): boolean {\n        return position === 'center' ||\n            position === 'left-origin-center' ||\n            position === 'right-origin-center';\n    }\n\n    /** Computes the position state that will be used for the tab-body animation trigger. */\n    private computePositionAnimationState(dir: Direction = this.getLayoutDirection()) {\n        if (this.positionIndex < 0) {\n            this.bodyPosition = dir === 'ltr' ? 'left' : 'right';\n        } else if (this.positionIndex > 0) {\n            this.bodyPosition = dir === 'ltr' ? 'right' : 'left';\n        } else {\n            this.bodyPosition = 'center';\n        }\n    }\n\n    /**\n     * Computes the position state based on the specified origin position. This is used if the\n     * tab is becoming visible immediately after creation.\n     */\n    private computePositionFromOrigin(): McTabBodyPositionState {\n        const dir = this.getLayoutDirection();\n\n        if ((dir === 'ltr' && this.origin <= 0) || (dir === 'rtl' && this.origin > 0)) {\n            return 'left-origin-center';\n        }\n\n        return 'right-origin-center';\n    }\n}\n\n/**\n * The portal host directive for the contents of the tab.\n * @docs-private\n */\n@Directive({\n    selector: '[mcTabBodyHost]'\n})\nexport class McTabBodyPortal extends CdkPortalOutlet implements OnInit, OnDestroy {\n    /** Subscription to events for when the tab body begins centering. */\n    private centeringSub = Subscription.EMPTY;\n    /** Subscription to events for when the tab body finishes leaving from center position. */\n    private leavingSub = Subscription.EMPTY;\n\n    constructor(\n        componentFactoryResolver: ComponentFactoryResolver,\n        viewContainerRef: ViewContainerRef,\n        @Inject(forwardRef(() => McTabBody)) private host: McTabBody) {\n        super(componentFactoryResolver, viewContainerRef);\n    }\n\n    /** Set initial visibility or set up subscription for changing visibility. */\n    ngOnInit(): void {\n        super.ngOnInit();\n\n        this.centeringSub = this.host.beforeCentering\n            .pipe(startWith(this.host.isCenterPosition(this.host.bodyPosition)))\n            .subscribe((isCentering: boolean) => {\n                if (isCentering && !this.hasAttached()) {\n                    this.attach(this.host.content);\n                }\n            });\n\n        this.leavingSub = this.host.afterLeavingCenter.subscribe(() => {\n            this.detach();\n        });\n    }\n\n    /** Clean up centering subscription. */\n    ngOnDestroy(): void {\n        super.ngOnDestroy();\n        this.centeringSub.unsubscribe();\n        this.leavingSub.unsubscribe();\n    }\n}\n","import { Directive, ElementRef } from '@angular/core';\nimport {\n    CanDisable,\n    CanDisableCtor,\n    mixinDisabled\n} from '@ptsecurity/mosaic/core';\n\n\n// Boilerplate for applying mixins to McTabLabelWrapper.\n/** @docs-private */\nexport class McTabLabelWrapperBase {}\nexport const mcTabLabelWrapperMixinBase: CanDisableCtor &\n    typeof McTabLabelWrapperBase = mixinDisabled(McTabLabelWrapperBase);\n\n/**\n * Used in the `mc-tab-group` view to display tab labels.\n * @docs-private\n */\n@Directive({\n    selector: '[mcTabLabelWrapper]',\n    inputs: ['disabled'],\n    host: {\n        '[class.mc-disabled]': 'disabled',\n        '[attr.aria-disabled]': '!!disabled'\n    }\n})\nexport class McTabLabelWrapper extends mcTabLabelWrapperMixinBase implements CanDisable {\n    constructor(public elementRef: ElementRef) {\n        super();\n    }\n\n    /** Sets focus on the wrapper element */\n    focus(): void {\n        this.elementRef.nativeElement.focus();\n    }\n\n    getOffsetLeft(): number {\n        return this.elementRef.nativeElement.offsetLeft;\n    }\n\n    getOffsetWidth(): number {\n        return this.elementRef.nativeElement.offsetWidth;\n    }\n}\n","import {\n    AfterContentChecked,\n    AfterContentInit,\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    ContentChildren,\n    ElementRef,\n    EventEmitter,\n    Input,\n    NgZone,\n    OnDestroy,\n    Optional,\n    Output,\n    QueryList,\n    ViewChild,\n    ViewEncapsulation\n} from '@angular/core';\nimport { FocusKeyManager } from '@ptsecurity/cdk/a11y';\nimport { Direction, Directionality } from '@ptsecurity/cdk/bidi';\nimport { coerceNumberProperty } from '@ptsecurity/cdk/coercion';\nimport { END, ENTER, HOME, SPACE } from '@ptsecurity/cdk/keycodes';\nimport { ViewportRuler } from '@ptsecurity/cdk/scrolling';\nimport { merge, of as observableOf, Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\n\nimport { McTabLabelWrapper } from './tab-label-wrapper';\n\n\nconst VIEWPORT_THROTTLE_TIME = 150;\nconst SCROLL_DISTANCE_DELIMITER = 3;\n\n\n/**\n * The directions that scrolling can go in when the header's tabs exceed the header width. 'After'\n * will scroll the header towards the end of the tabs list and 'before' will scroll towards the\n * beginning of the list.\n */\nexport type ScrollDirection = 'after' | 'before';\n\n/**\n * The distance in pixels that will be overshot when scrolling a tab label into view. This helps\n * provide a small affordance to the label next to it.\n */\nconst EXAGGERATED_OVERSCROLL = 60;\n\n// Boilerplate for applying mixins to McTabHeader.\n/** @docs-private */\nexport class McTabHeaderBase {}\n\n/**\n * The header of the tab group which displays a list of all the tabs in the tab group.\n * When the tabs list's width exceeds the width of the header container,\n * then arrows will be displayed to allow the user to scroll\n * left and right across the header.\n * @docs-private\n */\n@Component({\n    selector: 'mc-tab-header',\n    templateUrl: 'tab-header.html',\n    styleUrls: ['tab-header.css'],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    host: {\n        class: 'mc-tab-header',\n        '[class.mc-tab-header__pagination-controls_enabled]':\n            'showPaginationControls',\n        '[class.mc-tab-header_rtl]': 'getLayoutDirection() == \\'rtl\\''\n    }\n})\nexport class McTabHeader extends McTabHeaderBase\n    implements AfterContentChecked, AfterContentInit, OnDestroy {\n    /** The index of the active tab. */\n    @Input()\n    get selectedIndex(): number {\n        return this._selectedIndex;\n    }\n    set selectedIndex(value: number) {\n        const coercedValue = coerceNumberProperty(value);\n        this.selectedIndexChanged = this._selectedIndex !== coercedValue;\n        this._selectedIndex = coercedValue;\n\n        if (this.keyManager) {\n            this.keyManager.updateActiveItem(coercedValue);\n        }\n    }\n\n    /** Tracks which element has focus; used for keyboard navigation */\n    get focusIndex(): number {\n        return this.keyManager ? this.keyManager.activeItemIndex! : 0;\n    }\n\n    /** When the focus index is set, we must manually send focus to the correct label */\n    set focusIndex(value: number) {\n        if (\n            !this.isValidIndex(value) ||\n            this.focusIndex === value ||\n            !this.keyManager\n        ) {\n            return;\n        }\n\n        this.keyManager.setActiveItem(value);\n    }\n\n    /** Sets the distance in pixels that the tab header should be transformed in the X-axis. */\n    get scrollDistance(): number {\n        return this._scrollDistance;\n    }\n    set scrollDistance(v: number) {\n        this._scrollDistance = Math.max(\n            0,\n            Math.min(this.getMaxScrollDistance(), v)\n        );\n\n        // Mark that the scroll distance has changed so that after the view is checked, the CSS\n        // transformation can move the header.\n        this.scrollDistanceChanged = true;\n        this.checkScrollingControls();\n    }\n\n    @ContentChildren(McTabLabelWrapper)\n    labelWrappers: QueryList<McTabLabelWrapper>;\n    @ViewChild('tabListContainer')\n    tabListContainer: ElementRef;\n    @ViewChild('tabList')\n    tabList: ElementRef;\n\n    /** Whether the controls for pagination should be displayed */\n    showPaginationControls = false;\n\n    /** Whether the tab list can be scrolled more towards the end of the tab label list. */\n    disableScrollAfter = true;\n\n    /** Whether the tab list can be scrolled more towards the beginning of the tab label list. */\n    disableScrollBefore = true;\n\n    /** Event emitted when the option is selected. */\n    @Output()\n    readonly selectFocusedIndex: EventEmitter<number> = new EventEmitter<number>();\n\n    /** Event emitted when a label is focused. */\n    @Output()\n    readonly indexFocused: EventEmitter<number> = new EventEmitter<number>();\n\n    /** The distance in pixels that the tab labels should be translated to the left. */\n    private _scrollDistance = 0;\n\n    /** Whether the header should scroll to the selected index after the view has been checked. */\n    private selectedIndexChanged = false;\n\n    /** Emits when the component is destroyed. */\n    private readonly destroyed = new Subject<void>();\n\n    /**\n     * The number of tab labels that are displayed on the header. When this changes, the header\n     * should re-evaluate the scroll position.\n     */\n    private tabLabelCount: number;\n\n    /** Whether the scroll distance has changed and should be applied after the view is checked. */\n    private scrollDistanceChanged: boolean;\n\n    /** Used to manage focus between the tabs. */\n    private keyManager: FocusKeyManager<McTabLabelWrapper>;\n\n    /** Cached text content of the header. */\n    private currentTextContent: string;\n\n    private _selectedIndex: number = 0;\n\n    constructor(\n        private elementRef: ElementRef,\n        private changeDetectorRef: ChangeDetectorRef,\n        private viewportRuler: ViewportRuler,\n        @Optional() private dir: Directionality,\n        private ngZone: NgZone\n    ) {\n        super();\n    }\n\n    ngAfterContentChecked(): void {\n        // If the number of tab labels have changed, check if scrolling should be enabled\n        if (this.tabLabelCount !== this.labelWrappers.length) {\n            this.updatePagination();\n            this.tabLabelCount = this.labelWrappers.length;\n            this.changeDetectorRef.markForCheck();\n        }\n\n        // If the selected index has changed, scroll to the label and check if the scrolling controls\n        // should be disabled.\n        if (this.selectedIndexChanged) {\n            this.scrollToLabel(this._selectedIndex);\n            this.checkScrollingControls();\n            this.selectedIndexChanged = false;\n            this.changeDetectorRef.markForCheck();\n        }\n\n        // If the scroll distance has been changed (tab selected, focused, scroll controls activated),\n        // then translate the header to reflect this.\n        if (this.scrollDistanceChanged) {\n            this.updateTabScrollPosition();\n            this.scrollDistanceChanged = false;\n            this.changeDetectorRef.markForCheck();\n        }\n    }\n\n    handleKeydown(event: KeyboardEvent) {\n        switch (event.keyCode) {\n            case HOME:\n                this.keyManager.setFirstItemActive();\n                event.preventDefault();\n                break;\n            case END:\n                this.keyManager.setLastItemActive();\n                event.preventDefault();\n                break;\n            case ENTER:\n            case SPACE:\n                this.selectFocusedIndex.emit(this.focusIndex);\n                event.preventDefault();\n                break;\n            default:\n                this.keyManager.onKeydown(event);\n        }\n    }\n\n    ngAfterContentInit() {\n        const dirChange = this.dir ? this.dir.change : observableOf(null);\n        const resize = this.viewportRuler.change(VIEWPORT_THROTTLE_TIME);\n        const realign = () => {\n            this.updatePagination();\n        };\n\n        this.keyManager = new FocusKeyManager(this.labelWrappers)\n            .withHorizontalOrientation(this.getLayoutDirection())\n            .withWrap();\n\n        this.keyManager.updateActiveItem(0);\n\n        // Defer the first call in order to allow for slower browsers to lay out the elements.\n        // This helps in cases where the user lands directly on a page with paginated tabs.\n        typeof requestAnimationFrame === undefined\n            ? realign()\n            : requestAnimationFrame(realign);\n\n        // On dir change or window resize, update the orientation of\n        // the key manager if the direction has changed.\n        merge(dirChange, resize)\n            .pipe(takeUntil(this.destroyed))\n            .subscribe(() => {\n                realign();\n                this.keyManager.withHorizontalOrientation(\n                    this.getLayoutDirection()\n                );\n            });\n\n        // If there is a change in the focus key manager we need to emit the `indexFocused`\n        // event in order to provide a public event that notifies about focus changes. Also we realign\n        // the tabs container by scrolling the new focused tab into the visible section.\n        this.keyManager.change\n            .pipe(takeUntil(this.destroyed))\n            .subscribe((newFocusIndex) => {\n                this.indexFocused.emit(newFocusIndex);\n                this.setTabFocus(newFocusIndex);\n            });\n    }\n\n    ngOnDestroy() {\n        this.destroyed.next();\n        this.destroyed.complete();\n    }\n\n    /**\n     * Callback for when the MutationObserver detects that the content has changed.\n     */\n    onContentChanges() {\n        const textContent = this.elementRef.nativeElement.textContent;\n\n        // We need to diff the text content of the header, because the MutationObserver callback\n        // will fire even if the text content didn't change which is inefficient and is prone\n        // to infinite loops if a poorly constructed expression is passed in.\n\n        if (textContent !== this.currentTextContent) {\n            this.currentTextContent = textContent;\n\n            const zoneCallback = () => {\n                this.updatePagination();\n                this.changeDetectorRef.markForCheck();\n            };\n\n            // The content observer runs outside the `NgZone` by default, which\n            // means that we need to bring the callback back in ourselves.\n            // TODO: Remove null check for `_ngZone` once it's a required parameter.\n            this.ngZone ? this.ngZone.run(zoneCallback) : zoneCallback();\n        }\n    }\n\n    /**\n     * Updating the view whether pagination should be enabled or not\n     *\n     * WARNING: Calling this method can be very costly in terms of performance.  It should be called\n     * as infrequently as possible from outside of the Tabs component as it causes a reflow of the\n     * page.\n     */\n    updatePagination() {\n        this.checkPaginationEnabled();\n        this.checkScrollingControls();\n        this.updateTabScrollPosition();\n    }\n\n    /**\n     * Determines if an index is valid.  If the tabs are not ready yet, we assume that the user is\n     * providing a valid index and return true.\n     */\n    isValidIndex(index: number): boolean {\n        if (!this.labelWrappers) {\n            return true;\n        }\n\n        const tab = this.labelWrappers\n            ? this.labelWrappers.toArray()[index]\n            : null;\n\n        return !!tab && !tab.disabled;\n    }\n\n    /**\n     * Sets focus on the HTML element for the label wrapper and scrolls it into the view if\n     * scrolling is enabled.\n     */\n    setTabFocus(tabIndex: number) {\n        if (this.showPaginationControls) {\n            this.scrollToLabel(tabIndex);\n        }\n\n        if (this.labelWrappers && this.labelWrappers.length) {\n            this.labelWrappers.toArray()[tabIndex].focus();\n\n            // Do not let the browser manage scrolling to focus the element, this will be handled\n            // by using translation. In LTR, the scroll left should be 0. In RTL, the scroll width\n            // should be the full width minus the offset width.\n            const containerEl = this.tabListContainer.nativeElement;\n            const dir = this.getLayoutDirection();\n\n            if (dir === 'ltr') {\n                containerEl.scrollLeft = 0;\n            } else {\n                containerEl.scrollLeft =\n                    containerEl.scrollWidth - containerEl.offsetWidth;\n            }\n        }\n    }\n\n    /** The layout direction of the containing app. */\n    getLayoutDirection(): Direction {\n        return this.dir && this.dir.value === 'rtl' ? 'rtl' : 'ltr';\n    }\n\n    /** Performs the CSS transformation on the tab list that will cause the list to scroll. */\n    updateTabScrollPosition() {\n        const scrollDistance = this.scrollDistance;\n        const translateX =\n            this.getLayoutDirection() === 'ltr'\n                ? -scrollDistance\n                : scrollDistance;\n\n        // Don't use `translate3d` here because we don't want to create a new layer. A new layer\n        // seems to cause flickering and overflow in Internet Explorer.\n        // See: https://github.com/angular/material2/issues/10276\n        // We round the `transform` here, because transforms with sub-pixel precision cause some\n        // browsers to blur the content of the element.\n        this.tabList.nativeElement.style.transform = `translateX(${Math.round(translateX)}px)`;\n\n        // Setting the `transform` on IE will change the scroll offset of the parent, causing the\n        // position to be thrown off in some cases. We have to reset it ourselves to ensure that\n        // it doesn't get thrown off.\n        this.tabList.nativeElement.scrollLeft = 0;\n    }\n\n    /**\n     * Moves the tab list in the 'before' or 'after' direction (towards the beginning of the list or\n     * the end of the list, respectively). The distance to scroll is computed to be a third of the\n     * length of the tab list view window.\n     *\n     * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n     * should be called sparingly.\n     */\n    scrollHeader(scrollDir: ScrollDirection) {\n        const viewLength = this.tabListContainer.nativeElement.offsetWidth;\n\n        // Move the scroll distance one-third the length of the tab list's viewport.\n        this.scrollDistance +=\n            ((scrollDir === 'before' ? -1 : 1) * viewLength) / SCROLL_DISTANCE_DELIMITER;\n    }\n\n    /**\n     * Moves the tab list such that the desired tab label (marked by index) is moved into view.\n     *\n     * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n     * should be called sparingly.\n     */\n    scrollToLabel(labelIndex: number) {\n        const selectedLabel = this.labelWrappers\n            ? this.labelWrappers.toArray()[labelIndex]\n            : null;\n\n        if (!selectedLabel) {\n            return;\n        }\n\n        // The view length is the visible width of the tab labels.\n        const viewLength = this.tabListContainer.nativeElement.offsetWidth;\n\n        let labelBeforePos: number;\n        let labelAfterPos: number;\n\n        if (this.getLayoutDirection() === 'ltr') {\n            labelBeforePos = selectedLabel.getOffsetLeft();\n            labelAfterPos = labelBeforePos + selectedLabel.getOffsetWidth();\n        } else {\n            labelAfterPos =\n                this.tabList.nativeElement.offsetWidth -\n                selectedLabel.getOffsetLeft();\n            labelBeforePos = labelAfterPos - selectedLabel.getOffsetWidth();\n        }\n\n        const beforeVisiblePos = this.scrollDistance;\n        const afterVisiblePos = this.scrollDistance + viewLength;\n\n        if (labelBeforePos < beforeVisiblePos) {\n            // Scroll header to move label to the before direction\n            this.scrollDistance -=\n                beforeVisiblePos - labelBeforePos + EXAGGERATED_OVERSCROLL;\n        } else if (labelAfterPos > afterVisiblePos) {\n            // Scroll header to move label to the after direction\n            this.scrollDistance +=\n                labelAfterPos - afterVisiblePos + EXAGGERATED_OVERSCROLL;\n        }\n    }\n\n    /**\n     * Evaluate whether the pagination controls should be displayed. If the scroll width of the\n     * tab list is wider than the size of the header container, then the pagination controls should\n     * be shown.\n     *\n     * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n     * should be called sparingly.\n     */\n    checkPaginationEnabled() {\n        const isEnabled =\n            this.tabList.nativeElement.scrollWidth >\n            this.elementRef.nativeElement.offsetWidth;\n\n        if (!isEnabled) {\n            this.scrollDistance = 0;\n        }\n\n        if (isEnabled !== this.showPaginationControls) {\n            this.changeDetectorRef.markForCheck();\n        }\n\n        this.showPaginationControls = isEnabled;\n    }\n\n    /**\n     * Evaluate whether the before and after controls should be enabled or disabled.\n     * If the header is at the beginning of the list (scroll distance is equal to 0) then disable the\n     * before button. If the header is at the end of the list (scroll distance is equal to the\n     * maximum distance we can scroll), then disable the after button.\n     *\n     * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n     * should be called sparingly.\n     */\n    checkScrollingControls() {\n        // Check if the pagination arrows should be activated.\n        this.disableScrollBefore = this.scrollDistance === 0;\n        this.disableScrollAfter =\n            this.scrollDistance === this.getMaxScrollDistance();\n        this.changeDetectorRef.markForCheck();\n    }\n\n    /**\n     * Determines what is the maximum length in pixels that can be set for the scroll distance. This\n     * is equal to the difference in width between the tab list container and tab header container.\n     *\n     * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n     * should be called sparingly.\n     */\n    getMaxScrollDistance(): number {\n        const lengthOfTabList = this.tabList.nativeElement.scrollWidth;\n        const viewLength = this.tabListContainer.nativeElement.offsetWidth;\n\n        return lengthOfTabList - viewLength || 0;\n    }\n}\n","import { ComponentRef, Injectable } from '@angular/core';\n\nimport { Observable } from 'rxjs';\nimport { filter } from 'rxjs/operators';\n\nimport { ESCAPE } from '@ptsecurity/cdk/keycodes';\nimport { Overlay, OverlayRef } from '@ptsecurity/cdk/overlay';\nimport { ComponentPortal } from '@ptsecurity/cdk/portal';\n\nimport { McModalControlService } from './modal-control.service';\nimport { McModalRef } from './modal-ref.class';\nimport { McModalComponent } from './modal.component';\nimport { ConfirmType, IModalOptions, IModalOptionsForService } from './modal.type';\n\n\n// A builder used for managing service creating modals\nexport class ModalBuilderForService {\n\n    // Modal ComponentRef, \"null\" means it has been destroyed\n    private modalRef: ComponentRef<McModalComponent>;\n    private overlayRef: OverlayRef;\n\n    constructor(private overlay: Overlay, options: IModalOptionsForService = {}) {\n        this.createModal();\n\n        if (!('mcGetContainer' in options)) {\n            options.mcGetContainer = null;\n        }\n\n        this.changeProps(options);\n        this.modalRef.instance.open();\n        this.modalRef.instance.mcAfterClose.subscribe(() => this.destroyModal());\n\n        this.overlayRef.keydownEvents()\n            // @ts-ignore\n            .pipe(filter((event: KeyboardEvent) => {\n                return event.keyCode === ESCAPE && options.mcCloseByESC;\n            }))\n            .subscribe(() => this.modalRef.instance.close());\n    }\n\n    getInstance(): McModalComponent {\n        return this.modalRef && this.modalRef.instance;\n    }\n\n    destroyModal(): void {\n        if (this.modalRef) {\n            this.overlayRef.dispose();\n            // @ts-ignore\n            this.modalRef = null;\n        }\n    }\n\n    private changeProps(options: IModalOptions): void {\n        if (this.modalRef) {\n            // here not limit user's inputs at runtime\n            Object.assign(this.modalRef.instance, options);\n        }\n    }\n\n    // Create component to ApplicationRef\n    private createModal(): void {\n        this.overlayRef = this.overlay.create();\n        this.modalRef = this.overlayRef.attach(new ComponentPortal(McModalComponent));\n    }\n}\n\n@Injectable()\nexport class McModalService {\n    // Track of the current close modals (we assume invisible is close this time)\n    get openModals(): McModalRef[] {\n        return this.modalControl.openModals;\n    }\n\n    get afterAllClose(): Observable<void> {\n        return this.modalControl.afterAllClose.asObservable();\n    }\n\n    constructor(\n        private overlay: Overlay,\n        private modalControl: McModalControlService) {\n    }\n\n    // Closes all of the currently-open dialogs\n    closeAll(): void {\n        this.modalControl.closeAll();\n    }\n\n    create<T>(options: IModalOptionsForService<T> = {}): McModalRef<T> {\n\n        if (typeof options.mcOnCancel !== 'function') {\n            // Leave a empty function to close this modal by default\n            // tslint:disable-next-line\n            options.mcOnCancel = () => {};\n        }\n\n        if (!('mcCloseByESC' in options)) {\n            options.mcCloseByESC = true;\n        }\n\n\n        if (!('mcWidth' in options)) {\n            // tslint:disable-next-line\n            options.mcWidth = 480;\n        }\n\n        return new ModalBuilderForService(this.overlay, options).getInstance();\n    }\n\n    confirm<T>(options: IModalOptionsForService<T> = {}, confirmType: ConfirmType = 'confirm'): McModalRef<T> {\n        if ('mcFooter' in options) {\n            console.warn(`The Confirm-Modal doesn't support \"mcFooter\", this property will be ignored.`);\n        }\n\n        // NOTE: only support function currently by calling confirm()\n        if (typeof options.mcOnOk !== 'function') {\n            // Leave a empty function to close this modal by default\n            // tslint:disable-next-line\n            options.mcOnOk = () => {};\n        }\n\n        options.mcModalType = 'confirm';\n        options.mcClassName = `mc-confirm mc-confirm-${confirmType} ${options.mcClassName || ''}`;\n        options.mcMaskClosable = false;\n\n        return this.create(options);\n    }\n\n    success<T>(options: IModalOptionsForService<T> = {}): McModalRef<T> {\n        return this.simpleConfirm(options, 'success');\n    }\n\n    delete<T>(options: IModalOptionsForService<T> = {}): McModalRef<T> {\n        return this.simpleConfirm(options, 'warn');\n    }\n\n    private simpleConfirm<T>(options: IModalOptionsForService<T> = {}, confirmType: ConfirmType): McModalRef<T> {\n        // Remove the Cancel button if the user not specify a Cancel button\n        if (!('mcCancelText' in options)) {\n            // @ts-ignore\n            options.mcCancelText = null;\n        }\n\n        return this.confirm(options, confirmType);\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { OverlayModule } from '@ptsecurity/cdk/overlay';\nimport { McButtonModule } from '@ptsecurity/mosaic/button';\nimport { McIconModule } from '@ptsecurity/mosaic/icon';\n\nimport { CssUnitPipe } from './css-unit.pipe';\nimport { McModalControlService } from './modal-control.service';\nimport { McModalComponent } from './modal.component';\nimport { McModalService } from './modal.service';\n\n\n@NgModule({\n    imports: [ CommonModule, OverlayModule, McButtonModule, McIconModule ],\n    exports: [ McModalComponent ],\n    declarations: [ McModalComponent, CssUnitPipe ],\n    entryComponents: [ McModalComponent ],\n    providers: [ McModalControlService, McModalService ]\n})\nexport class McModalModule { }\n","import { fromEvent, Observable, Subscription } from 'rxjs';\nimport { debounceTime } from 'rxjs/operators';\n\nimport {\n    AfterViewInit,\n    Component, Directive,\n    ElementRef,\n    HostBinding,\n    Input,\n    OnDestroy,\n    OnInit,\n    ViewEncapsulation,\n    ContentChild,\n    TemplateRef,\n    ChangeDetectorRef,\n    ChangeDetectionStrategy,\n    ViewChild\n} from '@angular/core';\nimport { FocusMonitor, FocusOrigin } from '@ptsecurity/cdk/a11y';\nimport { SPACE } from '@ptsecurity/cdk/keycodes';\nimport { Platform } from '@ptsecurity/cdk/platform';\nimport { CanDisable, CanDisableCtor, mixinDisabled } from '@ptsecurity/mosaic/core';\n\n\nconst COLLAPSED_CLASS: string = 'mc-navbar-collapsed-title';\nconst MC_ICON = 'mc-icon';\nconst MC_NAVBAR = 'mc-navbar';\nconst MC_NAVBAR_CONTAINER = 'mc-navbar-container';\nconst MC_NAVBAR_ITEM = 'mc-navbar-item';\nconst MC_NAVBAR_BRAND = 'mc-navbar-brand';\nconst MC_NAVBAR_TITLE = 'mc-navbar-title';\nconst MC_NAVBAR_LOGO = 'mc-navbar-logo';\n\nexport type McNavbarContainerPositionType = 'left' | 'right';\n\nexport interface IMcNavbarDropdownItem {\n    link?: string;\n    text: string;\n}\n\n@Directive({\n    selector: MC_NAVBAR_LOGO,\n    host: {\n        class: MC_NAVBAR_LOGO\n    }\n})\nexport class McNavbarLogo {}\n\n@Directive({\n    selector: MC_NAVBAR_BRAND,\n    host: {\n        class: MC_NAVBAR_BRAND\n    }\n})\nexport class McNavbarBrand {}\n\n@Directive({\n    selector: MC_NAVBAR_TITLE,\n    host: {\n        class: MC_NAVBAR_TITLE\n    }\n})\nexport class McNavbarTitle {}\n\nexport class McNavbarItemBase {\n    constructor(public _elementRef: ElementRef) {}\n}\n\nexport const _McNavbarMixinBase: CanDisableCtor & typeof McNavbarItemBase = mixinDisabled(McNavbarItemBase);\n\n@Component({\n    selector: MC_NAVBAR_ITEM,\n    template: `\n        <a\n            [attr.tabindex]=\\\"disabled ? -1 : tabIndex\\\"\n            (click)=\"handleClickByItem()\"\n            (keydown)=\"handleKeydown($event)\"\n            class=\"mc-navbar-item\"\n        >\n            <ng-content></ng-content>\n            <i *ngIf=\"hasDropdownContent\" mc-icon=\"mc-angle-M_16\"></i>\n        </a>\n        <ul\n            #dropdownContent\n            *ngIf=\"hasDropdownContent\"\n            [ngClass]=\"{ 'is-collapsed': isCollapsed }\"\n            class=\"mc-navbar-dropdown\"\n        >\n            <li\n                *ngFor=\"let item of dropdownItems\"\n                (click)=\"handleClickByDropdownItem()\"\n                class=\"mc-navbar-dropdown-item\"\n            >\n                <ng-container *ngIf=\"dropdownItemTmpl\">\n                    <ng-container *ngTemplateOutlet=\"dropdownItemTmpl; context: { $implicit: item }\"></ng-container>\n                </ng-container>\n                <a\n                    *ngIf=\"!dropdownItemTmpl\"\n                    [attr.href]=\"item.link\"\n                    [ngClass]=\"{ 'is-active': isActiveDropdownLink(item.link) }\"\n                    class=\"mc-navbar-dropdown-link\"\n                >{{ item.text }}</a>\n            </li>\n        </ul>\n    `,\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    inputs: ['disabled'],\n    host: {\n        '[attr.disabled]': 'disabled || null',\n        '[attr.tabindex]': '-1'\n    }\n})\nexport class McNavbarItem extends _McNavbarMixinBase implements OnInit, AfterViewInit, OnDestroy, CanDisable {\n\n    @Input()\n    tabIndex: number = 0;\n\n    @Input()\n    dropdownItems: IMcNavbarDropdownItem[] = [];\n\n    @Input()\n    set collapsedTitle(value: string) {\n        this.elementRef.nativeElement.setAttribute('computedTitle', encodeURI(value));\n    }\n\n    @ContentChild('dropdownItemTmpl', { read: TemplateRef })\n    dropdownItemTmpl: TemplateRef<IMcNavbarDropdownItem>;\n\n    @ViewChild('dropdownContent', { read: ElementRef })\n    dropdownContent: ElementRef;\n\n    get hasDropdownContent() {\n        return this.dropdownItems.length > 0;\n    }\n\n    isCollapsed: boolean = true;\n\n    private _subscription: Subscription = new Subscription();\n    private _focusMonitor$: Observable<FocusOrigin>;\n\n    private get _dropdownElements(): HTMLElement[] {\n        return this.dropdownContent ? this.dropdownContent.nativeElement.querySelectorAll('li > *') : [];\n    }\n\n    constructor(\n        public  elementRef: ElementRef,\n        private _focusMonitor: FocusMonitor,\n        private _platform: Platform,\n        private _cdRef: ChangeDetectorRef\n    ) {\n        super(elementRef);\n    }\n\n    ngOnInit() {\n        this.denyClickIfDisabled();\n\n        this._focusMonitor$ = this._focusMonitor.monitor(this.elementRef.nativeElement, true);\n\n        if (this.hasDropdownContent) {\n            this.listenClickOutside();\n        }\n    }\n\n    ngAfterViewInit() {\n        if (!this.hasDropdownContent) {\n            return;\n        }\n\n        this.startListenFocusDropdownItems();\n    }\n\n    ngOnDestroy() {\n        this._subscription.unsubscribe();\n        this._focusMonitor.stopMonitoring(this.elementRef.nativeElement);\n        this.stopListenFocusDropdownItems();\n    }\n\n    isActiveDropdownLink(link: string): boolean {\n        if (!this._platform.isBrowser) {\n            return false;\n        }\n\n        return window.location.href.indexOf(link) >= 0;\n    }\n\n    handleClickByItem() {\n        this.toggleDropdown();\n    }\n\n    handleKeydown($event: KeyboardEvent) {\n        const isNavbarItem = ($event.target as HTMLElement).classList.contains(MC_NAVBAR_ITEM);\n\n        // tslint:disable-next-line\n        if (this.hasDropdownContent && $event.keyCode === SPACE && isNavbarItem) {\n            this.toggleDropdown();\n        }\n    }\n\n    handleClickByDropdownItem() {\n        this.forceCloseDropdown();\n    }\n\n    private listenClickOutside() {\n        this._subscription.add(\n            this._focusMonitor$.subscribe((origin) => {\n                if (origin === null) {\n                    this.forceCloseDropdown();\n                }\n            })\n        );\n    }\n\n    private toggleDropdown() {\n        this.isCollapsed = !this.isCollapsed;\n    }\n\n    private forceCloseDropdown() {\n        this.isCollapsed = true;\n        this._cdRef.detectChanges();\n    }\n\n    private startListenFocusDropdownItems() {\n        this._dropdownElements.forEach((el) => {\n            this._focusMonitor.monitor(el, true);\n        });\n    }\n\n    private stopListenFocusDropdownItems() {\n        this._dropdownElements.forEach((el) => {\n            this._focusMonitor.stopMonitoring(el);\n        });\n    }\n\n    // This method is required due to angular 2 issue https://github.com/angular/angular/issues/11200\n    private denyClickIfDisabled() {\n        const events: Event[] = this.elementRef.nativeElement.eventListeners('click');\n\n        events.forEach((event) => this.elementRef.nativeElement.removeEventListener('click', event));\n\n        this.elementRef.nativeElement.addEventListener('click', (event: MouseEvent) => {\n            if (this.elementRef.nativeElement.hasAttribute('disabled')) {\n                event.stopImmediatePropagation();\n            }\n        }, true);\n\n        events.forEach((event) => this.elementRef.nativeElement.addEventListener('click', event));\n    }\n}\n\n@Directive({\n    selector: MC_NAVBAR_CONTAINER\n})\nexport class McNavbarContainer {\n    @Input()\n    position: McNavbarContainerPositionType = 'left';\n\n    @HostBinding('class')\n    get cssClasses(): string {\n        return this.position === 'left' ? 'mc-navbar-left' : 'mc-navbar-right';\n    }\n}\n\nclass CollapsibleItem {\n    private _collapsed: boolean = false;\n\n    constructor(\n        public element: HTMLElement,\n        public width: number\n    ) {}\n\n    processCollapsed(collapsed: boolean) {\n        this._collapsed = collapsed;\n\n        this.updateCollapsedClass();\n    }\n\n    private updateCollapsedClass() {\n        if (this._collapsed) {\n            this.element.classList.add(COLLAPSED_CLASS);\n        } else {\n            this.element.classList.remove(COLLAPSED_CLASS);\n        }\n\n    }\n}\n\nclass CachedItemWidth {\n\n    get canCollapse(): boolean {\n        return this.itemsForCollapse.length > 0;\n    }\n\n    private _collapsedItemsWidth: number;\n\n    get collapsedItemsWidth(): number {\n        if (this._collapsedItemsWidth !== undefined) {\n            return this._collapsedItemsWidth;\n        }\n\n        this.calculateAndCacheCollapsedItemsWidth();\n\n        return this._collapsedItemsWidth;\n    }\n\n    constructor(\n        public element: HTMLElement,\n        public width: number,\n        public itemsForCollapse: CollapsibleItem[] = []\n    ) {}\n\n    processCollapsed(collapsed: boolean) {\n        if (this.itemsForCollapse.length > 0) {\n            this.updateTitle(collapsed);\n        }\n\n        this.itemsForCollapse.forEach((item) => item.processCollapsed(collapsed));\n    }\n\n    private calculateAndCacheCollapsedItemsWidth() {\n        this._collapsedItemsWidth = this.itemsForCollapse\n            .reduce((acc, item) => acc + item.width, 0);\n    }\n\n    private getTitle(): string {\n        const computedTitle = this.element.getAttribute('computedTitle');\n\n        return computedTitle\n            ? decodeURI(computedTitle)\n            : (this.itemsForCollapse.length > 0 ? this.itemsForCollapse[0].element.innerText : '');\n    }\n\n    private updateTitle(collapsed: boolean) {\n        if (collapsed) {\n            this.element.setAttribute('title', this.getTitle());\n        } else {\n            this.element.removeAttribute('title');\n        }\n    }\n}\n\n\n@Component({\n    selector: MC_NAVBAR,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    template: `\n        <nav class=\"mc-navbar\">\n            <ng-content select=\"[${MC_NAVBAR_CONTAINER}],${MC_NAVBAR_CONTAINER}\"></ng-content>\n        </nav>\n    `,\n    styleUrls: ['./navbar.css'],\n    encapsulation: ViewEncapsulation.None\n})\nexport class McNavbar implements AfterViewInit, OnDestroy {\n\n    private readonly forceRecalculateItemsWidth: boolean = false;\n    private readonly resizeDebounceInterval: number = 100;\n    private readonly firstLevelElement: string = MC_NAVBAR_CONTAINER;\n    private readonly secondLevelElements: string[] = [\n        MC_NAVBAR_ITEM,\n        MC_NAVBAR_BRAND,\n        MC_NAVBAR_TITLE\n    ];\n\n    private _totalItemsWidths: number;\n    private _itemsWidths: CachedItemWidth[];\n\n    private get maxAllowedWidth(): number {\n        return this._elementRef.nativeElement.querySelector('nav').getBoundingClientRect().width;\n    }\n\n    private get itemsWidths(): CachedItemWidth[] {\n        if (this._itemsWidths !== undefined && !this.forceRecalculateItemsWidth) {\n            return this._itemsWidths;\n        }\n\n        this.calculateAndCacheItemsWidth();\n\n        return this._itemsWidths;\n    }\n\n    private get totalItemsWidth(): number {\n        if (this._totalItemsWidths !== undefined && !this.forceRecalculateItemsWidth) {\n            return this._totalItemsWidths;\n        }\n\n        this.calculateAndCacheTotalItemsWidth();\n\n        return this._totalItemsWidths;\n    }\n\n    private _resizeSubscription: Subscription;\n\n    constructor(\n        private _elementRef: ElementRef\n    ) {\n        const resizeObserver = fromEvent(window, 'resize')\n            .pipe(debounceTime(this.resizeDebounceInterval));\n\n        this._resizeSubscription = resizeObserver.subscribe(this.updateCollapsed.bind(this));\n    }\n\n    updateCollapsed(): void {\n        let collapseDelta = this.totalItemsWidth - this.maxAllowedWidth;\n\n        for (let i = this.itemsWidths.length - 1; i >= 0; i--) {\n            const item = this.itemsWidths[i];\n\n            if (!item.canCollapse) {\n                continue;\n            }\n\n            item.processCollapsed(collapseDelta > 0);\n            collapseDelta -= item.collapsedItemsWidth;\n        }\n    }\n\n    ngAfterViewInit(): void {\n        // Note: this wait is required for loading and rendering fonts for icons;\n        // unfortunately we cannot control font rendering\n        setTimeout(() => this.updateCollapsed(), 0);\n    }\n\n    ngOnDestroy() {\n        this._resizeSubscription.unsubscribe();\n    }\n\n    private calculateAndCacheTotalItemsWidth() {\n        this._totalItemsWidths = this.itemsWidths\n            .reduce((acc, item) => acc + item.width, 0);\n    }\n\n    private getOuterElementWidth(element: HTMLElement): number {\n        const baseWidth  = element.getBoundingClientRect().width;\n        const marginRight = parseInt(getComputedStyle(element).getPropertyValue('margin-right'));\n        const marginLeft = parseInt(getComputedStyle(element).getPropertyValue('margin-left'));\n\n        return baseWidth + marginRight + marginLeft;\n    }\n\n    private calculateAndCacheItemsWidth() {\n        const allItemsSelector = this.secondLevelElements\n            .map((e: string) => `${this.firstLevelElement}>${e}`);\n        const allItems: HTMLElement[] = Array.from(this._elementRef.nativeElement.querySelectorAll(allItemsSelector));\n\n        this._itemsWidths = allItems\n            .map((el) => new CachedItemWidth(el, this.getOuterElementWidth(el), this.getItemsForCollapse(el)));\n    }\n\n    private getItemsForCollapse(element: HTMLElement): CollapsibleItem[] {\n        const icon = element.querySelector(`[${MC_ICON}],${MC_NAVBAR_LOGO},[${MC_NAVBAR_LOGO}]`);\n\n        if (!icon) {\n            return [];\n        }\n\n        return Array.from(element.querySelectorAll(MC_NAVBAR_TITLE))\n            .map((el) => new CollapsibleItem(<HTMLElement> el, el.getBoundingClientRect().width));\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { A11yModule } from '@ptsecurity/cdk/a11y';\nimport { PlatformModule } from '@ptsecurity/cdk/platform';\n\nimport { McIconModule } from '@ptsecurity/mosaic/icon';\n\nimport {\n    McNavbar,\n    McNavbarContainer,\n    McNavbarItem,\n    McNavbarTitle,\n    McNavbarBrand,\n    McNavbarLogo\n} from './navbar.component';\n\n\n@NgModule({\n    imports: [\n        CommonModule,\n        A11yModule,\n        PlatformModule,\n        McIconModule\n    ],\n    exports: [\n        McNavbar,\n        McNavbarContainer,\n        McNavbarTitle,\n        McNavbarItem,\n        McNavbarBrand,\n        McNavbarLogo\n    ],\n    declarations: [\n        McNavbar,\n        McNavbarContainer,\n        McNavbarTitle,\n        McNavbarItem,\n        McNavbarBrand,\n        McNavbarLogo\n    ]\n})\nexport class McNavbarModule {}\n","import {\n    ChangeDetectionStrategy,\n    Component,\n    ViewEncapsulation,\n    ElementRef,\n    Input\n} from '@angular/core';\nimport { CanColor, CanColorCtor, mixinColor, ThemePalette } from '@ptsecurity/mosaic/core';\n\n\nexport type ProgressBarMode = 'determinate' | 'indeterminate';\n\nlet idIterator = 0;\n\nconst MIN_PERCENT = 0;\nconst MAX_PERCENT = 100;\n\nexport class McProgressBarBase {\n    constructor(public _elementRef: ElementRef) {}\n}\n\nexport const _McProgressBarMixinBase:\n    CanColorCtor &\n    typeof McProgressBarBase =\n        mixinColor(McProgressBarBase);\n\n@Component({\n    selector: 'mc-progress-bar',\n    templateUrl: './progress-bar.component.html',\n    styleUrls: ['./progress-bar.css'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n    host: {\n        class: 'mc-progress-bar',\n        '[attr.id]': 'id'\n    }\n})\nexport class McProgressBar extends _McProgressBarMixinBase implements CanColor {\n    @Input() id: string = `mc-progress-bar-${idIterator++}`;\n    @Input() value: number = 0;\n    @Input() mode: ProgressBarMode = 'determinate';\n    @Input() color: ThemePalette = ThemePalette.Primary;\n\n    constructor(elementRef: ElementRef) {\n        super(elementRef);\n    }\n\n    get percentage(): number {\n        return Math.max(MIN_PERCENT, Math.min(MAX_PERCENT, this.value)) / MAX_PERCENT;\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { PlatformModule } from '@ptsecurity/cdk/platform';\n\nimport {\n    McProgressBar\n} from './progress-bar.component';\n\n\n@NgModule({\n    imports: [\n        CommonModule,\n        PlatformModule\n    ],\n    exports: [\n        McProgressBar\n    ],\n    declarations: [\n        McProgressBar\n    ]\n})\nexport class McProgressBarModule {}\n","import {\n    ChangeDetectionStrategy,\n    Component,\n    ViewEncapsulation,\n    ElementRef,\n    Input\n} from '@angular/core';\nimport { CanColor, CanColorCtor, mixinColor, ThemePalette } from '@ptsecurity/mosaic/core';\n\n\nexport type ProgressSpinnerMode = 'determinate' | 'indeterminate';\n\nlet idIterator = 0;\n\nconst MIN_PERCENT = 0;\nconst MAX_PERCENT = 100;\n\nexport class McProgressSpinnerBase {\n    constructor(public _elementRef: ElementRef) {}\n}\n\nexport const _McProgressSpinnerMixinBase:\n    CanColorCtor &\n    typeof McProgressSpinnerBase =\n        mixinColor(McProgressSpinnerBase);\n\nconst MAX_DASH_ARRAY = 273;\n\n@Component({\n    selector: 'mc-progress-spinner',\n    templateUrl: './progress-spinner.component.html',\n    styleUrls: ['./progress-spinner.css'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n    host: {\n        class: 'mc-progress-spinner',\n        '[attr.id]': 'id'\n    }\n})\nexport class McProgressSpinner extends _McProgressSpinnerMixinBase implements CanColor {\n    @Input() id: string = `mc-progress-spinner-${idIterator++}`;\n    @Input() value: number = 0;\n    @Input() mode: ProgressSpinnerMode = 'determinate';\n    @Input() color: ThemePalette = ThemePalette.Primary;\n\n    constructor(elementRef: ElementRef) {\n        super(elementRef);\n    }\n\n    get percentage(): number {\n        return Math.max(MIN_PERCENT, Math.min(MAX_PERCENT, this.value)) / MAX_PERCENT;\n    }\n\n    get dashOffsetPercent(): string {\n        return `${MAX_DASH_ARRAY - this.percentage * MAX_DASH_ARRAY}%`;\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { PlatformModule } from '@ptsecurity/cdk/platform';\n\nimport { McProgressSpinner } from './progress-spinner.component';\n\n\n@NgModule({\n    imports: [\n        CommonModule,\n        PlatformModule\n    ],\n    exports: [\n        McProgressSpinner\n    ],\n    declarations: [\n        McProgressSpinner\n    ]\n})\nexport class McProgressSpinnerModule {}\n","import {\n    AfterContentInit,\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component, ContentChildren, Directive, ElementRef, EventEmitter, forwardRef,\n    Input, OnDestroy, OnInit, Optional, Output, QueryList,\n    ViewChild,\n    ViewEncapsulation\n} from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\n\nimport { UniqueSelectionDispatcher } from '@ptsecurity/cdk/collections';\n\nimport {\n    CanColor, CanColorCtor,\n    CanDisable, CanDisableCtor,\n    HasTabIndex, HasTabIndexCtor,\n    mixinColor,\n    mixinDisabled,\n    mixinTabIndex,\n    toBoolean\n} from '@ptsecurity/mosaic/core';\n\n\n// Increasing integer for generating unique ids for radio components.\nlet nextUniqueId = 0;\n\n/** Change event object emitted by McRadio. */\nexport class McRadioChange {\n    constructor(\n        /** The McRadioButton that emits the change event. */\n        public source: McRadioButton,\n        /** The value of the McRadioButton. */\n        public value: any) {}\n}\n\n// Boilerplate for applying mixins to McRadioGroup.\n/** @docs-private */\nexport class McRadioGroupBase {}\nexport const _McRadioGroupMixinBase: CanDisableCtor & typeof McRadioGroupBase = mixinDisabled(McRadioGroupBase);\n\n/**\n * Provider Expression that allows mc-radio-group to register as a ControlValueAccessor. This\n * allows it to support [(ngModel)] and ngControl.\n * @docs-private\n */\nexport const MC_RADIO_GROUP_CONTROL_VALUE_ACCESSOR: any = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => McRadioGroup),\n    multi: true\n};\n\n@Directive({\n    selector: 'mc-radio-group',\n    exportAs: 'mcRadioGroup',\n    providers: [MC_RADIO_GROUP_CONTROL_VALUE_ACCESSOR],\n    host: {\n        role: 'radiogroup',\n        class: 'mc-radio-group'\n    },\n    inputs: ['disabled']\n})\nexport class McRadioGroup extends _McRadioGroupMixinBase\n    implements AfterContentInit, ControlValueAccessor, CanDisable {\n\n    /** Name of the radio button group. All radio buttons inside this group will use this name. */\n    @Input()\n    get name(): string { return this._name; }\n    set name(value: string) {\n        this._name = value;\n        this.updateRadioButtonNames();\n    }\n\n    /** Whether the labels should appear after or before the radio-buttons. Defaults to 'after' */\n    @Input()\n    get labelPosition(): 'before' | 'after' {\n        return this._labelPosition;\n    }\n    set labelPosition(v) {\n        this._labelPosition = v === 'before' ? 'before' : 'after';\n        this.markRadiosForCheck();\n    }\n\n    /** Value of the radio button. */\n    @Input()\n    get value(): any { return this._value; }\n    set value(newValue: any) {\n        if (this._value !== newValue) {\n            // Set this before proceeding to ensure no circular loop occurs with selection.\n            this._value = newValue;\n\n            this.updateSelectedRadioFromValue();\n            this.checkSelectedRadioButton();\n        }\n    }\n\n    /** Whether the radio button is selected. */\n    @Input()\n    get selected() { return this._selected; }\n    set selected(selected: McRadioButton | null) {\n        this._selected = selected;\n        this.value = selected ? selected.value : null;\n        this.checkSelectedRadioButton();\n    }\n\n    /** Whether the radio group is disabled */\n    @Input()\n    get disabled(): boolean { return this._disabled; }\n    set disabled(value) {\n        this._disabled = toBoolean(value);\n        this.markRadiosForCheck();\n    }\n\n    /** Whether the radio group is required */\n    @Input()\n    get required(): boolean { return this._required; }\n    set required(value: boolean) {\n        this._required = toBoolean(value);\n        this.markRadiosForCheck();\n    }\n\n    /**\n     * Event emitted when the group value changes.\n     * Change events are only emitted when the value changes due to user interaction with\n     * a radio button (the same behavior as `<input type-\"radio\">`).\n     */\n    @Output() readonly change: EventEmitter<McRadioChange> = new EventEmitter<McRadioChange>();\n\n    /** Child radio buttons. */\n    @ContentChildren(forwardRef(() => McRadioButton), { descendants: true })\n    _radios: QueryList<McRadioButton>;\n\n    /**\n     * Selected value for group. Should equal the value of the selected radio button if there *is*\n     * a corresponding radio button with a matching value. If there is *not* such a corresponding\n     * radio button, this value persists to be applied in case a new radio button is added with a\n     * matching value.\n     */\n    private _value: any = null;\n\n    /** The HTML name attribute applied to radio buttons in this group. */\n    private _name: string = `mc-radio-group-${nextUniqueId++}`;\n\n    /** The currently selected radio button. Should match value. */\n    private _selected: McRadioButton | null = null;\n\n    /** Whether the `value` has been set to its initial value. */\n    private _isInitialized: boolean = false;\n\n    /** Whether the labels should appear after or before the radio-buttons. Defaults to 'after' */\n    private _labelPosition: 'before' | 'after' = 'after';\n\n    /** Whether the radio group is disabled. */\n    private _disabled: boolean = false;\n\n    /** Whether the radio group is required. */\n    private _required: boolean = false;\n\n    constructor(\n        private readonly _changeDetector: ChangeDetectorRef\n    ) {\n        super();\n    }\n\n    /** The method to be called in order to update ngModel */\n    // tslint:disable-next-line\n    controlValueAccessorChangeFn: (value: any) => void = () => {};\n\n    /**\n     * onTouch function registered via registerOnTouch (ControlValueAccessor).\n     * @docs-private\n     */\n    // tslint:disable-next-line\n    onTouched: () => any = () => {};\n\n    checkSelectedRadioButton() {\n        if (this._selected && !this._selected.checked) {\n            this._selected.checked = true;\n        }\n    }\n\n    /**\n     * Initialize properties once content children are available.\n     * This allows us to propagate relevant attributes to associated buttons.\n     */\n    ngAfterContentInit() {\n        // Mark this component as initialized in AfterContentInit because the initial value can\n        // possibly be set by NgModel on McRadioGroup, and it is possible that the OnInit of the\n        // NgModel occurs *after* the OnInit of the McRadioGroup.\n        this._isInitialized = true;\n    }\n\n    /**\n     * Mark this group as being \"touched\" (for ngModel). Meant to be called by the contained\n     * radio buttons upon their blur.\n     */\n    touch() {\n        if (this.onTouched) {\n            this.onTouched();\n        }\n    }\n\n    /** Dispatch change event with current selection and group value. */\n    emitChangeEvent(): void {\n        if (this._isInitialized) {\n            this.change.emit(new McRadioChange(this._selected!, this._value));\n        }\n    }\n\n    markRadiosForCheck() {\n        if (this._radios) {\n            this._radios.forEach((radio) => radio.markForCheck());\n        }\n    }\n\n    /**\n     * Sets the model value. Implemented as part of ControlValueAccessor.\n     */\n    writeValue(value: any) {\n        this.value = value;\n        this._changeDetector.markForCheck();\n    }\n\n    /**\n     * Registers a callback to be triggered when the model value changes.\n     * Implemented as part of ControlValueAccessor.\n     * @param fn Callback to be registered.\n     */\n    registerOnChange(fn: (value: any) => void) {\n        this.controlValueAccessorChangeFn = fn;\n    }\n\n    /**\n     * Registers a callback to be triggered when the control is touched.\n     * Implemented as part of ControlValueAccessor.\n     * @param fn Callback to be registered.\n     */\n    registerOnTouched(fn: any) {\n        this.onTouched = fn;\n    }\n\n    /**\n     * Sets the disabled state of the control. Implemented as a part of ControlValueAccessor.\n     * @param isDisabled Whether the control should be disabled.\n     */\n    setDisabledState(isDisabled: boolean) {\n        this.disabled = isDisabled;\n        this._changeDetector.markForCheck();\n    }\n\n    private updateRadioButtonNames(): void {\n        if (this._radios) {\n            this._radios.forEach((radio) => {\n                radio.name = this.name;\n            });\n        }\n    }\n\n    /** Updates the `selected` radio button from the internal _value state. */\n    private updateSelectedRadioFromValue(): void {\n        // If the value already matches the selected radio, do nothing.\n        const isAlreadySelected = this._selected !== null && this._selected.value === this._value;\n\n        if (this._radios != null && !isAlreadySelected) {\n            this._selected = null;\n            this._radios.forEach((radio) => {\n                radio.checked = this.value === radio.value;\n                if (radio.checked) {\n                    this._selected = radio;\n                }\n            });\n        }\n    }\n}\n\n\n// Boilerplate for applying mixins to McRadioButton.\n/** @docs-private */\nexport class McRadioButtonBase {\n    // Since the disabled property is manually defined for the McRadioButton and isn't set up in\n    // the mixin base class. To be able to use the tabindex mixin, a disabled property must be\n    // defined to properly work.\n    disabled: boolean;\n\n    constructor(public _elementRef: ElementRef) {}\n}\n\nexport const _McRadioButtonMixinBase:\n    CanColorCtor &\n    HasTabIndexCtor &\n    typeof McRadioButtonBase =\n        mixinColor(mixinTabIndex(McRadioButtonBase));\n\n\n@Component({\n    selector: 'mc-radio-button',\n    templateUrl: 'radio.component.html',\n    styleUrls: ['radio.css'],\n    inputs: ['color', 'tabIndex'],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    exportAs: 'mcRadioButton',\n    host: {\n        class: 'mc-radio-button',\n        '[attr.id]': 'id',\n        '[class.mc-checked]': 'checked',\n        '[class.mc-disabled]': 'disabled',\n        '(focus)': '_inputElement.nativeElement.focus()'\n    }\n})\nexport class McRadioButton extends _McRadioButtonMixinBase\n    implements OnInit, OnDestroy, CanColor, HasTabIndex {\n\n    private readonly _uniqueId: string = `mc-radio-${++nextUniqueId}`;\n\n    /* tslint:disable:member-ordering */\n\n    /** The unique ID for the radio button. */\n    @Input() id: string = this._uniqueId;\n\n    /** Analog to HTML 'name' attribute used to group radios for unique selection. */\n    @Input() name: string;\n\n    /** Used to set the 'aria-label' attribute on the underlying input element. */\n    @Input('aria-label') ariaLabel: string;\n\n    /** The 'aria-labelledby' attribute takes precedence as the element's text alternative. */\n    @Input('aria-labelledby') ariaLabelledby: string;\n\n    /** The 'aria-describedby' attribute is read after the element's label and field type. */\n    @Input('aria-describedby') ariaDescribedby: string;\n\n    /** Whether this radio button is checked. */\n    @Input()\n    get checked(): boolean { return this._checked; }\n    set checked(value: boolean) {\n        const newCheckedState = toBoolean(value);\n\n        if (this._checked !== newCheckedState) {\n            this._checked = newCheckedState;\n\n            if (newCheckedState && this.radioGroup && this.radioGroup.value !== this.value) {\n                this.radioGroup.selected = this;\n            } else if (!newCheckedState && this.radioGroup && this.radioGroup.value === this.value) {\n                // When unchecking the selected radio button, update the selected radio\n                // property on the group.\n                this.radioGroup.selected = null;\n            }\n\n            if (newCheckedState) {\n                // Notify all radio buttons with the same name to un-check.\n                this._radioDispatcher.notify(this.id, this.name);\n            }\n            this._changeDetector.markForCheck();\n        }\n    }\n\n    /** The value of this radio button. */\n    @Input()\n    get value(): any { return this._value; }\n    set value(value: any) {\n        if (this._value !== value) {\n            this._value = value;\n            if (this.radioGroup != null) {\n                if (!this.checked) {\n                    // Update checked when the value changed to match the radio group's value\n                    this.checked = this.radioGroup.value === value;\n                }\n                if (this.checked) {\n                    this.radioGroup.selected = this;\n                }\n            }\n        }\n    }\n\n    /** Whether the radio button is disabled. */\n    @Input()\n    get disabled(): boolean {\n        return this._disabled || (this.radioGroup != null && this.radioGroup.disabled);\n    }\n    set disabled(value: boolean) {\n        const newDisabledState = toBoolean(value);\n\n        if (this._disabled !== newDisabledState) {\n\n            this._disabled = newDisabledState;\n            this._changeDetector.markForCheck();\n        }\n    }\n\n    /** Whether the radio button is required. */\n    @Input()\n    get required(): boolean {\n        return this._required || (this.radioGroup && this.radioGroup.required);\n    }\n    set required(value: boolean) {\n        this._required = toBoolean(value);\n    }\n\n    /** Whether the label should appear after or before the radio button. Defaults to 'after' */\n    @Input()\n    get labelPosition(): 'before' | 'after' {\n        return this._labelPosition || (this.radioGroup && this.radioGroup.labelPosition) || 'after';\n    }\n    set labelPosition(value) {\n        this._labelPosition = value;\n    }\n    private _labelPosition: 'before' | 'after';\n\n    /** The native `<input type=radio>` element */\n    @ViewChild('input') _inputElement: ElementRef;\n\n    /**\n     * Event emitted when the checked state of this radio button changes.\n     * Change events are only emitted when the value changes due to user interaction with\n     * the radio button (the same behavior as `<input type-\"radio\">`).\n     */\n    @Output() readonly change: EventEmitter<McRadioChange> = new EventEmitter<McRadioChange>();\n\n    /** The parent radio group. May or may not be present. */\n    radioGroup: McRadioGroup;\n\n    @Input()\n    isFocused: boolean = false;\n\n    /** ID of the native input element inside `<mc-radio-button>` */\n    get inputId(): string { return `${this.id || this._uniqueId}-input`; }\n\n    /** Whether this radio is checked. */\n    private _checked: boolean = false;\n\n    /** Whether this radio is disabled. */\n    private _disabled: boolean;\n\n    /** Whether this radio is required. */\n    private _required: boolean;\n\n    /** Value assigned to this radio. */\n    private _value: any = null;\n\n    /** Unregister function for _radioDispatcher */\n    // tslint:disable-next-line\n    private readonly removeUniqueSelectionListener: () => void = () => {};\n\n    constructor(\n        @Optional() radioGroup: McRadioGroup,\n        elementRef: ElementRef,\n        private readonly _changeDetector: ChangeDetectorRef,\n        private readonly _radioDispatcher: UniqueSelectionDispatcher\n    ) {\n\n        super(elementRef);\n\n        this.radioGroup = radioGroup;\n\n        this.removeUniqueSelectionListener =\n            _radioDispatcher.listen((id: string, name: string) => {\n                if (id !== this.id && name === this.name) {\n                    this.checked = false;\n                }\n            });\n    }\n\n    ngOnInit() {\n        if (this.radioGroup) {\n            // If the radio is inside a radio group, determine if it should be checked\n            this.checked = this.radioGroup.value === this._value;\n            // Copy name from parent radio group\n            this.name = this.radioGroup.name;\n        }\n    }\n\n    ngOnDestroy() {\n        this.removeUniqueSelectionListener();\n    }\n\n    /** Focuses the radio button. */\n    // tslint:disable-next-line\n    focus(): void {}\n\n    /**\n     * Marks the radio button as needing checking for change detection.\n     * This method is exposed because the parent radio group will directly\n     * update bound properties of the radio button.\n     */\n    markForCheck() {\n        // When group value changes, the button will not be notified. Use `markForCheck` to explicit\n        // update radio button's status\n        this._changeDetector.markForCheck();\n    }\n\n    onInputClick(event: Event) {\n        // We have to stop propagation for click events on the visual hidden input element.\n        // By default, when a user clicks on a label element, a generated click event will be\n        // dispatched on the associated input element. Since we are using a label element as our\n        // root container, the click event on the `radio-button` will be executed twice.\n        // The real click event will bubble up, and the generated click event also tries to bubble up.\n        // This will lead to multiple click events.\n        // Preventing bubbling for the second event will solve that issue.\n        event.stopPropagation();\n    }\n\n    onInputChange(event: Event) {\n        // We always have to stop propagation on the change event.\n        // Otherwise the change event, from the input element, will bubble up and\n        // emit its event object to the `change` output.\n        event.stopPropagation();\n\n        const groupValueChanged = this.radioGroup && this.value !== this.radioGroup.value;\n        this.checked = true;\n        this.emitChangeEvent();\n\n        if (this.radioGroup) {\n            this.radioGroup.controlValueAccessorChangeFn(this.value);\n            this.radioGroup.touch();\n            if (groupValueChanged) {\n                this.radioGroup.emitChangeEvent();\n            }\n        }\n    }\n\n    /** Dispatch change event with current value. */\n    private emitChangeEvent(): void {\n        this.change.emit(new McRadioChange(this, this._value));\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { A11yModule } from '@ptsecurity/cdk/a11y';\nimport { McCommonModule } from '@ptsecurity/mosaic/core';\n\nimport { McRadioButton, McRadioGroup } from './radio.component';\n\n\n@NgModule({\n    imports: [CommonModule, A11yModule, McCommonModule],\n    exports: [McRadioGroup, McRadioButton],\n    declarations: [McRadioGroup, McRadioButton]\n})\nexport class McRadioModule {\n}\n","import { Directive, Input } from '@angular/core';\n\nimport { CdkTreeNodeDef } from '@ptsecurity/cdk/tree';\n\n\n@Directive({\n    selector: '[mcTreeNodeDef]',\n    inputs: ['when: mcTreeNodeDefWhen'],\n    providers: [{ provide: CdkTreeNodeDef, useExisting: McTreeNodeDef }]\n})\nexport class McTreeNodeDef<T> extends CdkTreeNodeDef<T> {\n    @Input('mcTreeNode') data: T;\n}\n","import { Directive, Input, OnInit } from '@angular/core';\nimport { CdkTreeNodePadding } from '@ptsecurity/cdk/tree';\n\n\n@Directive({\n    selector: '[mcTreeNodePadding]',\n    providers: [{ provide: CdkTreeNodePadding, useExisting: McTreeNodePadding }]\n})\nexport class McTreeNodePadding<T> extends CdkTreeNodePadding<T> implements OnInit {\n    get leftPadding(): number {\n        return (this._withIcon ? 0 : this._iconWidth) + this._baseLeftPadding;\n    }\n\n    _baseLeftPadding: number = 6;\n    _iconWidth: number = 20;\n    _indent: number = 16;\n\n    @Input('mcTreeNodePadding') level: number;\n\n    @Input('mcTreeNodePaddingIndent') indent: number;\n\n    _withIcon: boolean;\n\n    _paddingIndent(): string | null {\n        const nodeLevel = (this._treeNode.data && this._tree.treeControl.getLevel)\n            ? this._tree.treeControl.getLevel(this._treeNode.data)\n            : null;\n\n        const level = this._level || nodeLevel;\n\n        return level ? `${(level * this._indent) + this.leftPadding}px` : `${this._baseLeftPadding}px`;\n    }\n\n    ngOnInit(): void {\n        this._withIcon = this._tree.treeControl.isExpandable(this._treeNode.data);\n        this._setPadding();\n    }\n}\n","import {\n    AfterContentInit,\n    Attribute,\n    ChangeDetectionStrategy,\n    Component,\n    ContentChildren,\n    ElementRef,\n    EventEmitter,\n    forwardRef,\n    Input,\n    Output,\n    QueryList,\n    ViewEncapsulation,\n    ChangeDetectorRef,\n    Inject,\n    OnDestroy,\n    OnInit,\n    ViewChild\n} from '@angular/core';\n\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\n\nimport { Subscription } from 'rxjs';\n\nimport { FocusKeyManager, IFocusableOption } from '@ptsecurity/cdk/a11y';\nimport { SelectionModel } from '@ptsecurity/cdk/collections';\nimport { END, ENTER, HOME, PAGE_DOWN, PAGE_UP, SPACE } from '@ptsecurity/cdk/keycodes';\n\nimport {\n    McLine,\n    McLineSetter,\n    CanDisable,\n    mixinDisabled,\n    toBoolean, CanDisableCtor\n} from '@ptsecurity/mosaic/core';\n\n\n/**\n * Component for list-options of selection-list. Each list-option can automatically\n * generate a checkbox and can put current item into the selectionModel of selection-list\n * if the current item is selected.\n */\n@Component({\n    exportAs: 'mcListOption',\n    selector: 'mc-list-option',\n    host: {\n        tabindex: '-1',\n\n        class: 'mc-list-option',\n        '[class.mc-selected]': 'selected',\n        '[class.mc-focused]': '_hasFocus',\n        '(focus)': '_handleFocus()',\n        '(blur)': '_handleBlur()',\n        '(click)': '_handleClick()'\n    },\n    templateUrl: 'list-option.html',\n    encapsulation: ViewEncapsulation.None,\n    preserveWhitespaces: false,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class McListOption implements AfterContentInit, OnDestroy, OnInit, IFocusableOption {\n    _hasFocus: boolean = false;\n\n    @ContentChildren(McLine) _lines: QueryList<McLine>;\n\n    @ViewChild('text') _text: ElementRef;\n\n    // Whether the label should appear before or after the checkbox. Defaults to 'after'\n    @Input() checkboxPosition: 'before' | 'after' = 'after';\n\n    @Input() value: any;\n\n    @Input()\n    get disabled() {\n        return this._disabled || (this.listSelection && this.listSelection.disabled);\n    }\n\n    set disabled(value: any) {\n        const newValue = toBoolean(value);\n\n        if (newValue !== this._disabled) {\n            this._disabled = newValue;\n            this._changeDetector.markForCheck();\n        }\n    }\n\n    @Input()\n    get selected(): boolean {\n        return this.listSelection.selectedOptions && this.listSelection.selectedOptions.isSelected(this) || false;\n    }\n\n    set selected(value: boolean) {\n        const isSelected = toBoolean(value);\n\n        if (isSelected !== this._selected) {\n            this.setSelected(isSelected);\n\n            this.listSelection._reportValueChange();\n        }\n    }\n\n    private _lineSetter: McLineSetter;\n    private _selected = false;\n    private _disabled = false;\n\n    constructor(\n        private _element: ElementRef,\n        private _changeDetector: ChangeDetectorRef,\n        @Inject(forwardRef(() => McListSelection))\n        public listSelection: McListSelection\n    ) {}\n\n    ngOnInit() {\n        if (this._selected) {\n            // List options that are selected at initialization can't be reported properly to the form\n            // control. This is because it takes some time until the selection-list knows about all\n            // available options. Also it can happen that the ControlValueAccessor has an initial value\n            // that should be used instead. Deferring the value change report to the next tick ensures\n            // that the form control value is not being overwritten.\n            const wasSelected = this._selected;\n\n            Promise.resolve().then(() => {\n                if (this._selected || wasSelected) {\n                    this.selected = true;\n                    this._changeDetector.markForCheck();\n                }\n            });\n        }\n    }\n\n    ngAfterContentInit() {\n        this._lineSetter = new McLineSetter(this._lines, this._element);\n    }\n\n    ngOnDestroy(): void {\n        if (this.selected) {\n            // We have to delay this until the next tick in order\n            // to avoid changed after checked errors.\n            Promise.resolve().then(() => this.selected = false);\n        }\n\n        this.listSelection._removeOptionFromList(this);\n    }\n\n    toggle(): void {\n        this.selected = !this.selected;\n    }\n\n    focus(): void {\n        this._element.nativeElement.focus();\n\n        this.listSelection.setFocusedOption(this);\n    }\n\n    getLabel() {\n        return this._text ? this._text.nativeElement.textContent : '';\n    }\n\n    setSelected(selected: boolean) {\n        if (this._selected === selected || !this.listSelection.selectedOptions) { return; }\n\n        this._selected = selected;\n\n        if (selected) {\n            this.listSelection.selectedOptions.select(this);\n        } else {\n            this.listSelection.selectedOptions.deselect(this);\n        }\n\n        this._changeDetector.markForCheck();\n    }\n\n    _getHeight(): number {\n        return this._element.nativeElement.getClientRects()[0].height;\n    }\n\n    _handleClick() {\n        if (this.disabled) { return; }\n\n        this.listSelection.setFocusedOption(this);\n    }\n\n    _handleFocus() {\n        if (this.disabled || this._hasFocus) { return; }\n\n        this._hasFocus = true;\n    }\n\n    _handleBlur() {\n        this._hasFocus = false;\n\n        this.listSelection._onTouched();\n    }\n\n    _getHostElement(): HTMLElement {\n        return this._element.nativeElement;\n    }\n}\n\n\nexport const MC_SELECTION_LIST_VALUE_ACCESSOR: any = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => McListSelection),\n    multi: true\n};\n\n// Change event that is being fired whenever the selected state of an option changes. */\nexport class McListSelectionChange {\n    constructor(\n        // Reference to the selection list that emitted the event.\n        public source: McListSelection,\n        // Reference to the option that has been changed.\n        public option: McListOption\n    ) {}\n}\n\n\nexport class McListSelectionBase {}\n\nexport const _McListSelectionMixinBase: CanDisableCtor & typeof McListSelectionBase\n    = mixinDisabled(McListSelectionBase);\n\n@Component({\n    exportAs: 'mcListSelection',\n    selector: 'mc-list-selection',\n    template: '<ng-content></ng-content>',\n    styleUrls: ['./list.css'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n    inputs: ['disabled', 'tabIndex'],\n    host: {\n        class: 'mc-list-selection',\n        '[tabIndex]': 'tabIndex',\n        '(focus)': 'focus()',\n        '(blur)': '_onTouched()',\n        '(keydown)': '_onKeyDown($event)',\n        '(window:resize)': 'updateScrollSize()'\n    },\n    providers: [MC_SELECTION_LIST_VALUE_ACCESSOR],\n    preserveWhitespaces: false\n})\nexport class McListSelection extends _McListSelectionMixinBase implements\n    IFocusableOption, CanDisable, AfterContentInit, ControlValueAccessor {\n\n    _keyManager: FocusKeyManager<McListOption>;\n\n    // The option components contained within this selection-list.\n    @ContentChildren(McListOption) options: QueryList<McListOption>;\n\n    tabIndex: number;\n\n    autoSelect: boolean;\n    noUnselect: boolean;\n    multiple: boolean;\n\n    // todo temporary solution\n    withShift: boolean;\n    withCtrl: boolean;\n\n    @Input() horizontal: boolean = false;\n\n    // Emits a change event whenever the selected state of an option changes.\n    @Output() readonly selectionChange: EventEmitter<McListSelectionChange> = new EventEmitter<McListSelectionChange>();\n\n    selectedOptions: SelectionModel<McListOption>;\n\n    // Used for storing the values that were assigned before the options were initialized.\n    private _tempValues: string[] | null;\n\n    private _modelChanges = Subscription.EMPTY;\n\n    constructor(\n        private _element: ElementRef,\n        @Attribute('tabindex') tabIndex: string,\n        @Attribute('auto-select') autoSelect: string,\n        @Attribute('no-unselect') noUnselect: string,\n        @Attribute('multiple') multiple: string\n    ) {\n        super();\n\n        this.autoSelect = autoSelect === null ? true : toBoolean(autoSelect);\n        this.multiple = multiple === null ? true : toBoolean(multiple);\n        this.noUnselect = noUnselect === null ? true : toBoolean(noUnselect);\n\n        this.tabIndex = parseInt(tabIndex) || 0;\n\n        this.selectedOptions = new SelectionModel<McListOption>(this.multiple);\n    }\n\n    ngAfterContentInit(): void {\n        this.horizontal = toBoolean(this.horizontal);\n\n        this._keyManager = new FocusKeyManager<McListOption>(this.options)\n            .withTypeAhead()\n            .withVerticalOrientation(!this.horizontal)\n            .withHorizontalOrientation(this.horizontal ? 'ltr' : null);\n\n        if (this._tempValues) {\n            this._setOptionsFromValues(this._tempValues);\n            this._tempValues = null;\n        }\n\n        // Sync external changes to the model back to the options.\n        this._modelChanges = this.selectedOptions.onChange!.subscribe((event) => {\n            for (const item of event.added) {\n                item.selected = true;\n            }\n\n            for (const item of event.removed) {\n                item.selected = false;\n            }\n        });\n\n        this.updateScrollSize();\n    }\n\n    ngOnDestroy() {\n        this._modelChanges.unsubscribe();\n    }\n\n    focus() {\n        this._element.nativeElement.focus();\n    }\n\n    selectAll() {\n        this.options.forEach((option) => option.setSelected(true));\n\n        this._reportValueChange();\n    }\n\n    deselectAll() {\n        this.options.forEach((option) => option.setSelected(false));\n\n        this._reportValueChange();\n    }\n\n    updateScrollSize(): void {\n        if (this.horizontal || !this.options.first) { return; }\n\n        this._keyManager.withScrollSize(Math.floor(this._getHeight() / this.options.first._getHeight()));\n    }\n\n    // Sets the focused option of the selection-list.\n    setFocusedOption(option: McListOption): void {\n        this._keyManager.updateActiveItem(option);\n\n        if (this.withShift && this.multiple) {\n            const previousIndex = this._keyManager.previousActiveItemIndex;\n            const activeIndex = this._keyManager.activeItemIndex;\n\n            if (previousIndex < activeIndex) {\n                this.options.forEach((item, index) => {\n                    if (index >= previousIndex && index <= activeIndex) { item.setSelected(true); }\n                });\n            } else {\n                this.options.forEach((item, index) => {\n                    if (index >= activeIndex && index <= previousIndex) { item.setSelected(true); }\n                });\n            }\n\n            this.withShift = false;\n        } else if (this.withCtrl) {\n            this.withCtrl = false;\n\n            if (!this._canDeselectLast(option)) { return; }\n\n            option.toggle();\n        } else {\n            if (this.autoSelect) {\n                this.options.forEach((item) => item.setSelected(false));\n                option.setSelected(true);\n            }\n        }\n\n        this._emitChangeEvent(option);\n        this._reportValueChange();\n    }\n\n    // Implemented as part of ControlValueAccessor.\n    writeValue(values: string[]): void {\n        if (this.options) {\n            this._setOptionsFromValues(values || []);\n        } else {\n            this._tempValues = values;\n        }\n    }\n\n    // Implemented as part of ControlValueAccessor.\n    registerOnChange(fn: (value: any) => void): void {\n        this._onChange = fn;\n    }\n\n    // Implemented as part of ControlValueAccessor.\n    registerOnTouched(fn: () => void): void {\n        this._onTouched = fn;\n    }\n\n    // Implemented as a part of ControlValueAccessor.\n    setDisabledState(isDisabled: boolean): void {\n        if (this.options) {\n            this.options.forEach((option) => option.disabled = isDisabled);\n        }\n    }\n\n    getSelectedOptionValues(): string[] {\n        return this.options.filter((option) => option.selected).map((option) => option.value);\n    }\n\n    // Toggles the selected state of the currently focused option.\n    toggleFocusedOption(): void {\n        const focusedIndex = this._keyManager.activeItemIndex;\n\n        if (focusedIndex != null && this._isValidIndex(focusedIndex)) {\n            const focusedOption: McListOption = this.options.toArray()[focusedIndex];\n\n            if (focusedOption && this._canDeselectLast(focusedOption)) {\n                focusedOption.toggle();\n\n                // Emit a change event because the focused option changed its state through user interaction.\n                this._emitChangeEvent(focusedOption);\n            }\n        }\n    }\n\n    _canDeselectLast(listOption: McListOption): boolean {\n        return !(this.noUnselect && this.selectedOptions.selected.length === 1 && listOption.selected);\n    }\n\n    _getHeight(): number {\n        return this._element.nativeElement.getClientRects()[0].height;\n    }\n\n    // View to model callback that should be called if the list or its options lost focus.\n    _onTouched: () => void = () => {};\n\n    // Removes an option from the selection list and updates the active item.\n    _removeOptionFromList(option: McListOption) {\n        if (option._hasFocus) {\n            const optionIndex = this._getOptionIndex(option);\n\n            // Check whether the option is the last item\n            if (optionIndex > 0) {\n                this._keyManager.setPreviousItemActive();\n            } else if (optionIndex === 0 && this.options.length > 1) {\n                this._keyManager.setNextItemActive();\n            }\n        }\n    }\n\n    _onKeyDown(event: KeyboardEvent) {\n        const keyCode = event.keyCode;\n        this.withShift = event.shiftKey;\n        this.withCtrl = event.ctrlKey;\n\n        switch (keyCode) {\n            case SPACE:\n            case ENTER:\n                this.toggleFocusedOption();\n                event.preventDefault();\n\n                break;\n            case HOME:\n                this._keyManager.setFirstItemActive();\n                event.preventDefault();\n\n                break;\n            case END:\n                this._keyManager.setLastItemActive();\n                event.preventDefault();\n\n                break;\n            case PAGE_UP:\n                if (!this.horizontal) { this._keyManager.setPreviousPageItemActive(); }\n\n                event.preventDefault();\n\n                break;\n            case PAGE_DOWN:\n                if (!this.horizontal) { this._keyManager.setNextPageItemActive(); }\n\n                event.preventDefault();\n\n                break;\n            default:\n                this._keyManager.onKeydown(event);\n        }\n    }\n\n    // Reports a value change to the ControlValueAccessor\n    _reportValueChange() {\n        if (this.options) {\n            this._onChange(this.getSelectedOptionValues());\n        }\n    }\n\n    // Emits a change event if the selected state of an option changed.\n    _emitChangeEvent(option: McListOption) {\n        this.selectionChange.emit(new McListSelectionChange(this, option));\n    }\n\n    // Returns the option with the specified value.\n    private _getOptionByValue(value: string): McListOption | undefined {\n        return this.options.find((option) => option.value === value);\n    }\n\n    // Sets the selected options based on the specified values.\n    private _setOptionsFromValues(values: string[]) {\n        this.options.forEach((option) => option.setSelected(false));\n\n        values\n            .map((value) => this._getOptionByValue(value))\n            .filter(Boolean)\n            .forEach((option) => option!.setSelected(true));\n    }\n\n    /**\n     * Utility to ensure all indexes are valid.\n     * @param index The index to be checked.\n     * @returns True if the index is valid for our list of options.\n     */\n    private _isValidIndex(index: number): boolean {\n        return index >= 0 && index < this.options.length;\n    }\n\n    // Returns the index of the specified list option.\n    private _getOptionIndex(option: McListOption): number {\n        return this.options.toArray().indexOf(option);\n    }\n\n    // View to model callback that should be called whenever the selected options change.\n    private _onChange: (value: any) => void = (_: any) => {};\n}\n","// todo пока не делаем, перенесено из материала, но у нас в доках таких простых списков нет.\nimport {\n    AfterContentInit, ChangeDetectionStrategy, Component, ContentChildren, Directive, ElementRef, QueryList,\n    ViewEncapsulation\n} from '@angular/core';\n\nimport { McLine, McLineSetter } from '@ptsecurity/mosaic/core';\n\n\nexport class McListBase {}\n\n@Component({\n    selector: 'mc-list',\n    host: { class: 'mc-list' },\n    template: '<ng-content></ng-content>',\n    styleUrls: ['./list.css'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None\n})\nexport class McList extends McListBase {}\n\n\n/**\n * Directive whose purpose is to add the mc- CSS styling to this selector.\n * @docs-private\n */\n@Directive({\n    selector: '[mc-subheader], [mcSubheader]',\n    host: { class: 'mc-subheader' }\n})\nexport class McListSubheaderCssStyler {}\n\n\n// Boilerplate for applying mixins to McListItem.\nexport class McListItemBase {}\n\n@Component({\n    selector: 'mc-list-item, a[mc-list-item]',\n    host: {\n        class: 'mc-list-item',\n        '(focus)': '_handleFocus()',\n        '(blur)': '_handleBlur()'\n    },\n    templateUrl: './list-item.html',\n    encapsulation: ViewEncapsulation.None,\n    preserveWhitespaces: false,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class McListItem extends McListItemBase implements AfterContentInit {\n    @ContentChildren(McLine) _lines: QueryList<McLine>;\n\n    private _lineSetter: McLineSetter;\n\n    constructor(private _element: ElementRef) {\n        super();\n    }\n\n    ngAfterContentInit() {\n        this._lineSetter = new McLineSetter(this._lines, this._element);\n    }\n\n    _handleFocus() {\n        this._element.nativeElement.classList.add('mc-focused');\n    }\n\n    _handleBlur() {\n        this._element.nativeElement.classList.remove('mc-focused');\n    }\n\n    _getHostElement(): HTMLElement {\n        return this._element.nativeElement;\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { A11yModule } from '@ptsecurity/cdk/a11y';\n\nimport { McLineModule } from '@ptsecurity/mosaic/core';\n\nimport { McListSelection, McListOption } from './list-selection.component';\nimport { McList, McListItem, McListSubheaderCssStyler } from './list.component';\n\n\n@NgModule({\n    imports: [\n        CommonModule,\n        A11yModule,\n        McLineModule\n    ],\n    exports: [\n        McList,\n        McListSelection,\n        McListItem,\n        McListOption,\n        McListSubheaderCssStyler\n    ],\n    declarations: [\n        McList,\n        McListSelection,\n        McListItem,\n        McListOption,\n        McListSubheaderCssStyler\n    ]\n})\nexport class McListModule {}\n","import {\n    Input,\n    Attribute,\n    Component,\n    ElementRef,\n    OnDestroy,\n    ViewEncapsulation,\n    ChangeDetectionStrategy,\n    ChangeDetectorRef\n} from '@angular/core';\n\nimport { FocusMonitor } from '@ptsecurity/cdk/a11y';\nimport {\n    CanDisable, CanDisableCtor,\n    HasTabIndex, HasTabIndexCtor,\n    mixinDisabled,\n    mixinTabIndex,\n    toBoolean\n} from '@ptsecurity/mosaic/core';\n\n\nexport class McLinkBase {\n    constructor(public _elementRef: ElementRef) {\n    }\n}\n\nexport const _McLinkBase: HasTabIndexCtor & CanDisableCtor & typeof McLinkBase\n    = mixinTabIndex(mixinDisabled(McLinkBase));\n\n@Component({\n    selector: 'a.mc-link',\n    template: `<ng-content></ng-content>`,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n    exportAs: 'mcLink',\n    styleUrls: ['./link.css'],\n    inputs: ['disabled'],\n    host: {\n        '[attr.disabled]': 'disabled || null',\n        '[attr.tabindex]': 'tabIndex'\n    }\n})\n\nexport class McLink extends _McLinkBase implements OnDestroy, HasTabIndex, CanDisable {\n\n    @Input()\n    get disabled() {\n        return this._disabled;\n    }\n\n    set disabled(value: any) {\n        const newValue = toBoolean(value);\n\n        if (newValue !== this._disabled) {\n            this._disabled = newValue;\n            this._changeDetector.markForCheck();\n        }\n    }\n\n    private _disabled = false;\n\n    constructor(\n        @Attribute('tabindex') tabIndex: string,\n        public elementRef: ElementRef,\n        private _focusMonitor: FocusMonitor,\n        private _changeDetector: ChangeDetectorRef) {\n\n        super(elementRef);\n        this._focusMonitor.monitor(elementRef.nativeElement, true);\n        this.tabIndex = parseInt(tabIndex) || 0;\n    }\n\n    ngOnDestroy() {\n        this._focusMonitor.stopMonitoring(this.elementRef.nativeElement);\n    }\n\n    focus(): void {\n        this._getHostElement().focus();\n    }\n\n    _getHostElement() {\n        return this.elementRef.nativeElement;\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { A11yModule } from '@ptsecurity/cdk/a11y';\n\nimport { McLink } from './link.component';\n\n\n@NgModule({\n    imports: [\n        CommonModule,\n        A11yModule\n    ],\n    declarations: [McLink],\n    exports: [McLink]\n})\nexport class McLinkModule {}\n","import { Injectable, Optional, SkipSelf } from '@angular/core';\nimport { Subject, Subscription } from 'rxjs';\n\nimport { McModalRef } from './modal-ref.class';\n\n\ninterface IRegisteredMeta {\n    modalRef: McModalRef;\n    afterOpenSubscription: Subscription;\n    afterCloseSubscription: Subscription;\n}\n\n@Injectable()\nexport class McModalControlService {\n\n    // Track singleton afterAllClose through over the injection tree\n    get afterAllClose(): Subject<void> {\n        return this.parentService ? this.parentService.afterAllClose : this.rootAfterAllClose;\n    }\n\n    // Track singleton openModals array through over the injection tree\n    get openModals(): McModalRef[] {\n        return this.parentService ? this.parentService.openModals : this.rootOpenModals;\n    }\n\n    // @ts-ignore\n    private rootOpenModals: McModalRef[] = this.parentService ? null : [];\n    // @ts-ignore\n    private rootAfterAllClose: Subject<void> = this.parentService ? null : new Subject<void>();\n    // @ts-ignore\n    private rootRegisteredMetaMap: Map<McModalRef, IRegisteredMeta> = this.parentService ? null : new Map();\n\n    // Registered modal for later usage\n    private get registeredMetaMap(): Map<McModalRef, IRegisteredMeta> {\n        return this.parentService ? this.parentService.registeredMetaMap : this.rootRegisteredMetaMap;\n    }\n\n    constructor(\n        @Optional() @SkipSelf() private parentService: McModalControlService) {\n    }\n\n    // Register a modal to listen its open/close\n    registerModal(modalRef: McModalRef): void {\n        if (!this.hasRegistered(modalRef)) {\n            const afterOpenSubscription = modalRef.afterOpen.subscribe(() => this.openModals.push(modalRef));\n            const afterCloseSubscription = modalRef.afterClose.subscribe(() => this.removeOpenModal(modalRef));\n\n            this.registeredMetaMap.set(modalRef, {modalRef, afterOpenSubscription, afterCloseSubscription});\n        }\n    }\n\n    hasRegistered(modalRef: McModalRef): boolean {\n        return this.registeredMetaMap.has(modalRef);\n    }\n\n    // Close all registered opened modals\n    closeAll(): void {\n        let i = this.openModals.length;\n\n        while (i--) {\n            this.openModals[i].close();\n        }\n    }\n\n    private removeOpenModal(modalRef: McModalRef): void {\n        const index = this.openModals.indexOf(modalRef);\n\n        if (index > -1) {\n            this.openModals.splice(index, 1);\n\n            if (!this.openModals.length) {\n                this.afterAllClose.next();\n            }\n        }\n    }\n}\n","import { Observable } from 'rxjs';\n\nimport { McModalComponent } from './modal.component';\n\n\n/**\n * API class that public to users to handle the modal instance.\n * McModalRef is aim to avoid accessing to the modal instance directly by users.\n */\nexport abstract class McModalRef<T = any, R = any> {\n    abstract afterOpen: Observable<void>;\n    abstract afterClose: Observable<R>;\n\n    abstract open(): void;\n\n    abstract close(result?: R): void;\n\n    abstract destroy(result?: R): void;\n\n    /**\n     * Trigger the nzOnOk/nzOnCancel by manual\n     */\n    abstract triggerOk(): void;\n\n    abstract triggerCancel(): void;\n\n    // /**\n    //  * Return the ComponentRef of nzContent when specify nzContent as a Component\n    //  * Note: this method may return undefined if the Component has not ready yet.\n    //    (it only available after Modal's ngOnInit)\n    //  */\n    // abstract getContentComponentRef(): ComponentRef<{}>;\n\n    /**\n     * Return the component instance of nzContent when specify nzContent as a Component\n     * Note: this method may return undefined if the Component has not ready yet.\n     * (it only available after Modal's ngOnInit)\n     */\n    abstract getContentComponent(): T;\n\n    /**\n     * Get the dom element of this Modal\n     */\n    abstract getElement(): HTMLElement;\n\n    /**\n     * Get the instance of the Modal itself\n     */\n    abstract getInstance(): McModalComponent;\n}\n","export interface IClickPosition {\n    x: number;\n    y: number;\n}\n\nexport class ModalUtil {\n    private lastPosition: IClickPosition;\n\n    constructor(private document: Document) {\n        this.lastPosition = {x: -1, y: -1};\n        this.listenDocumentClick();\n    }\n\n    getLastClickPosition(): IClickPosition {\n        return this.lastPosition;\n    }\n\n    listenDocumentClick(): void {\n        this.document.addEventListener('click', (event: MouseEvent) => {\n            this.lastPosition = {x: event.clientX, y: event.clientY};\n        });\n    }\n}\n\nexport default new ModalUtil(document);\n","import { DOCUMENT } from '@angular/common';\nimport {\n    AfterViewInit, ChangeDetectionStrategy, ChangeDetectorRef,\n    Component,\n    ComponentFactoryResolver,\n    ComponentRef,\n    ElementRef,\n    EventEmitter,\n    Inject,\n    Injector,\n    Input,\n    OnChanges,\n    OnDestroy,\n    OnInit,\n    Output,\n    Renderer2,\n    SimpleChanges,\n    TemplateRef,\n    Type,\n    ViewChild,\n    ViewContainerRef, ViewEncapsulation\n} from '@angular/core';\nimport { ESCAPE } from '@ptsecurity/cdk/keycodes';\nimport { Overlay, OverlayRef } from '@ptsecurity/cdk/overlay';\nimport { McMeasureScrollbarService } from '@ptsecurity/mosaic/core';\nimport { Observable } from 'rxjs';\n\nimport { McModalControlService } from './modal-control.service';\nimport { McModalRef } from './modal-ref.class';\n// tslint:disable-next-line\nimport ModalUtil from './modal-util';\nimport { IModalButtonOptions, IModalOptions, ModalType, OnClickCallback } from './modal.type';\n\n\n// Duration when perform animations (ms)\nexport const MODAL_ANIMATE_DURATION = 200;\n\ntype AnimationState = 'enter' | 'leave' | null;\n\n@Component({\n    selector: 'mc-modal',\n    templateUrl: './modal.component.html',\n    styleUrls: ['./modal.css'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n    host: {\n        '(keydown)': 'onKeyDown($event)'\n    }\n})\nexport class McModalComponent<T = any, R = any> extends McModalRef<T, R>\n    implements OnInit, OnChanges, AfterViewInit, OnDestroy, IModalOptions {\n\n    // tslint:disable-next-line:no-any\n    @Input() mcModalType: ModalType = 'default';\n    // If not specified, will use <ng-content>\n    @Input() mcContent: string | TemplateRef<{}> | Type<T>;\n    // available when mcContent is a component\n    @Input() mcComponentParams: object;\n    // Default Modal ONLY\n    @Input() mcFooter: string | TemplateRef<{}> | IModalButtonOptions<T>[];\n\n    @Input()\n    get mcVisible() { return this._mcVisible; }\n    set mcVisible(value) { this._mcVisible = value; }\n    _mcVisible = false;\n\n    @Output() mcVisibleChange = new EventEmitter<boolean>();\n\n    @Input() mcZIndex: number = 1000;\n    @Input() mcWidth: number | string = 480;\n    @Input() mcWrapClassName: string;\n    @Input() mcClassName: string;\n    @Input() mcStyle: object;\n    @Input() mcTitle: string | TemplateRef<{}>;\n    @Input() mcCloseByESC: boolean = true;\n\n    @Input()\n    get mcClosable() { return this._mcClosable; }\n    set mcClosable(value) { this._mcClosable = value; }\n    _mcClosable = true;\n\n    @Input()\n    get mcMask() { return this._mcMask; }\n    set mcMask(value) { this._mcMask = value; }\n    _mcMask = true;\n\n    @Input()\n    get mcMaskClosable() { return this._mcMaskClosable; }\n    set mcMaskClosable(value) { this._mcMaskClosable = value; }\n    _mcMaskClosable = true;\n\n    @Input() mcMaskStyle: object;\n    @Input() mcBodyStyle: object;\n\n    // Trigger when modal open(visible) after animations\n    @Output() mcAfterOpen = new EventEmitter<void>();\n    // Trigger when modal leave-animation over\n    @Output() mcAfterClose = new EventEmitter<R>();\n\n    // --- Predefined OK & Cancel buttons\n    @Input() mcOkText: string;\n    @Input() mcOkType = 'primary';\n\n    @Input()\n    get mcOkLoading() { return this._mcOkLoading; }\n    set mcOkLoading(value) { this._mcOkLoading = value; }\n    _mcOkLoading = false;\n\n    @Input() @Output() mcOnOk: EventEmitter<T> | OnClickCallback<T> = new EventEmitter<T>();\n    // Only aim to focus the ok button that needs to be auto focused\n    @ViewChild('autoFocusButtonOk', {read: ElementRef}) autoFocusButtonOk: ElementRef;\n    @Input() mcCancelText: string;\n\n    @Input()\n    get mcCancelLoading() { return this._mcCancelLoading; }\n    set mcCancelLoading(value) { this._mcCancelLoading = value; }\n    _mcCancelLoading = false;\n\n    @Input() @Output() mcOnCancel: EventEmitter<T> | OnClickCallback<T> = new EventEmitter<T>();\n    @ViewChild('modalContainer') modalContainer: ElementRef;\n    @ViewChild('bodyContainer', {read: ViewContainerRef}) bodyContainer: ViewContainerRef;\n    maskAnimationClassMap: object;\n    modalAnimationClassMap: object;\n    // The origin point that animation based on\n    transformOrigin = '0px 0px 0px';\n\n    // Observable alias for mcAfterOpen\n    get afterOpen(): Observable<void> {\n        return this.mcAfterOpen.asObservable();\n    }\n\n    // Observable alias for mcAfterClose\n    get afterClose(): Observable<R> {\n        return this.mcAfterClose.asObservable();\n    }\n\n    get okText(): string {\n        return this.mcOkText;\n    }\n\n    get cancelText(): string {\n        return this.mcCancelText;\n    }\n\n    // Indicate whether this dialog should hidden\n    get hidden(): boolean {\n        return !this.mcVisible && !this.animationState;\n    }\n\n    // Handle the reference when using mcContent as Component\n    private contentComponentRef: ComponentRef<T>;\n    // Current animation state\n    private animationState: AnimationState;\n    private container: HTMLElement | OverlayRef;\n\n    constructor(\n        private overlay: Overlay,\n        private renderer: Renderer2,\n        private cfr: ComponentFactoryResolver,\n        private elementRef: ElementRef,\n        private viewContainer: ViewContainerRef,\n        private mcMeasureScrollbarService: McMeasureScrollbarService,\n        private modalControl: McModalControlService,\n        private changeDetector: ChangeDetectorRef,\n        @Inject(DOCUMENT) private document: any) {\n\n        super();\n    }\n\n    @Input() mcGetContainer: HTMLElement | OverlayRef | (() => HTMLElement | OverlayRef) = () => this.overlay.create();\n\n    ngOnInit() {\n\n        // Create component along without View\n        if (this.isComponent(this.mcContent)) {\n            this.createDynamicComponent(this.mcContent as Type<T>);\n        }\n\n        // Setup default button options\n        if (this.isModalButtons(this.mcFooter)) {\n            this.mcFooter = this.formatModalButtons(this.mcFooter as IModalButtonOptions<T>[]);\n        }\n\n        // Place the modal dom to elsewhere\n        this.container = typeof this.mcGetContainer === 'function' ? this.mcGetContainer() : this.mcGetContainer;\n        if (this.container instanceof HTMLElement) {\n            this.container.appendChild(this.elementRef.nativeElement);\n        } else if (this.container instanceof OverlayRef) {\n            // NOTE: only attach the dom to overlay, the view container is not changed actually\n            this.container.overlayElement.appendChild(this.elementRef.nativeElement);\n        }\n\n        // Register modal when afterOpen/afterClose is stable\n        this.modalControl.registerModal(this);\n    }\n\n    // [NOTE] NOT available when using by service!\n    // Because ngOnChanges never be called when using by service,\n    // here we can't support \"mcContent\"(Component) etc. as inputs that initialized dynamically.\n    // BUT: User also can change \"mcContent\" dynamically to trigger UI changes\n    // (provided you don't use \bComponent that needs initializations)\n    ngOnChanges(changes: SimpleChanges) {\n        if (changes.mcVisible) {\n            // Do not trigger animation while initializing\n            this.handleVisibleStateChange(this.mcVisible, !changes.mcVisible.firstChange);\n        }\n    }\n\n    ngAfterViewInit() {\n        // If using Component, it is the time to attach View while bodyContainer is ready\n        if (this.contentComponentRef) {\n            this.bodyContainer.insert(this.contentComponentRef.hostView);\n        }\n\n        if (this.autoFocusButtonOk) {\n            (this.autoFocusButtonOk.nativeElement as HTMLButtonElement).focus();\n        }\n    }\n\n    ngOnDestroy() {\n        if (this.container instanceof OverlayRef) {\n            this.container.dispose();\n        }\n    }\n\n    open() {\n        this.changeVisibleFromInside(true);\n    }\n\n    close(result?: R) {\n        this.changeVisibleFromInside(false, result);\n    }\n\n    // Destroy equals Close\n    destroy(result?: R) {\n        this.close(result);\n    }\n\n    triggerOk() {\n        this.onClickOkCancel('ok');\n    }\n\n    triggerCancel() {\n        this.onClickOkCancel('cancel');\n    }\n\n    getInstance(): McModalComponent {\n        return this;\n    }\n\n    getContentComponentRef(): ComponentRef<T> {\n        return this.contentComponentRef;\n    }\n\n    getContentComponent(): T {\n        return this.contentComponentRef && this.contentComponentRef.instance;\n    }\n\n    getElement(): HTMLElement {\n        return this.elementRef && this.elementRef.nativeElement;\n    }\n\n    onClickMask($event: MouseEvent) {\n        if (\n            this.mcMask &&\n            this.mcMaskClosable &&\n            ($event.target as HTMLElement).classList.contains('mc-modal-wrap') &&\n            this.mcVisible\n        ) {\n            this.onClickOkCancel('cancel');\n        }\n    }\n\n    // tslint:disable-next-line\n    isModalType(type: ModalType): boolean {\n        return this.mcModalType === type;\n    }\n\n    onKeyDown(event: KeyboardEvent): void {\n\n        if (event.keyCode === ESCAPE && this.container && (this.container instanceof OverlayRef)) {\n\n            this.close();\n            event.preventDefault();\n        }\n    }\n\n    // AoT\n    onClickCloseBtn() {\n        if (this.mcVisible) {\n            this.onClickOkCancel('cancel');\n        }\n    }\n\n    // AoT\n    // tslint:disable-next-line\n    onClickOkCancel(type: 'ok' | 'cancel') {\n        const trigger = { ok: this.mcOnOk, cancel: this.mcOnCancel }[type];\n        const loadingKey = { ok: 'mcOkLoading', cancel: 'mcCancelLoading' }[type];\n\n        if (trigger instanceof EventEmitter) {\n            trigger.emit(this.getContentComponent());\n        } else if (typeof trigger === 'function') {\n\n            const result = trigger(this.getContentComponent());\n            // Users can return \"false\" to prevent closing by default\n            const caseClose = (doClose: boolean | void | {}) => (doClose !== false) && this.close(doClose as R);\n\n            if (isPromise(result)) {\n                this[loadingKey] = true;\n                const handleThen = (doClose) => {\n                    this[loadingKey] = false;\n                    caseClose(doClose);\n                };\n                (result as Promise<void>).then(handleThen).catch(handleThen);\n            } else {\n                caseClose(result);\n            }\n        }\n    }\n\n    // AoT\n    isNonEmptyString(value: {}): boolean {\n        return typeof value === 'string' && value !== '';\n    }\n\n    // AoT\n    isTemplateRef(value: {}): boolean {\n        return value instanceof TemplateRef;\n    }\n\n    // AoT\n    isComponent(value: {}): boolean {\n        return value instanceof Type;\n    }\n\n    // AoT\n    isModalButtons(value: {}): boolean {\n        return Array.isArray(value) && value.length > 0;\n    }\n\n    // Do rest things when visible state changed\n    private handleVisibleStateChange(visible: boolean, animation: boolean = true, closeResult?: R): Promise<any> {\n        // Hide scrollbar at the first time when shown up\n        if (visible) {\n            this.changeBodyOverflow(1);\n        }\n\n        return Promise\n            .resolve(animation && this.animateTo(visible))\n            // Emit open/close event after animations over\n            .then(() => {\n                if (visible) {\n                    this.mcAfterOpen.emit();\n                } else {\n                    this.mcAfterClose.emit(closeResult);\n                    // Show/hide scrollbar when animation is over\n                    this.changeBodyOverflow();\n                }\n            });\n    }\n\n    // Lookup a button's property, if the prop is a function, call & then return the result, otherwise, return itself.\n    // AoT\n    // tslint:disable-next-line\n    getButtonCallableProp(options: IModalButtonOptions<T>, prop: string): {} {\n        const value = options[prop];\n        const args: any[] = [];\n        if (this.contentComponentRef) {\n            args.push(this.contentComponentRef.instance);\n        }\n\n        return typeof value === 'function' ? value.apply(options, args) : value;\n    }\n\n    // On mcFooter's modal button click\n    // AoT\n    // tslint:disable-next-line\n    onButtonClick(button: IModalButtonOptions<T>) {\n        // Call onClick directly\n        const result = this.getButtonCallableProp(button, 'onClick');\n        if (isPromise(result)) {\n            button.loading = true;\n            (result as Promise<{}>).then(() => button.loading = false).catch(() => button.loading = false);\n        }\n    }\n\n    // Change mcVisible from inside\n    private changeVisibleFromInside(visible: boolean, closeResult?: R): Promise<void> {\n        if (this.mcVisible !== visible) {\n            // Change mcVisible value immediately\n            this.mcVisible = visible;\n            this.mcVisibleChange.emit(visible);\n\n            return this.handleVisibleStateChange(visible, true, closeResult);\n        }\n\n        return Promise.resolve();\n    }\n\n    private changeAnimationState(state: AnimationState) {\n        this.animationState = state;\n        if (state) {\n            this.maskAnimationClassMap = {\n                [`fade-${state}`]: true,\n                [`fade-${state}-active`]: true\n            };\n            this.modalAnimationClassMap = {\n                [`zoom-${state}`]: true,\n                [`zoom-${state}-active`]: true\n            };\n        } else {\n            // @ts-ignore\n            this.maskAnimationClassMap = this.modalAnimationClassMap = null;\n        }\n\n        if (this.contentComponentRef) {\n            this.contentComponentRef.changeDetectorRef.markForCheck();\n        } else {\n            this.changeDetector.markForCheck();\n        }\n    }\n\n    private animateTo(isVisible: boolean): Promise<any> {\n        // Figure out the lastest click position when shows up\n        if (isVisible) {\n            // [NOTE] Using timeout due to the document.click event is fired later than visible change,\n            // so if not postponed to next event-loop, we can't get the lastest click position\n            window.setTimeout(() => this.updateTransformOrigin());\n        }\n\n        this.changeAnimationState(isVisible ? 'enter' : 'leave');\n\n        // Return when animation is over\n        return new Promise((resolve) => window.setTimeout(() => {\n            this.changeAnimationState(null);\n            resolve();\n        }, MODAL_ANIMATE_DURATION));\n    }\n\n    private formatModalButtons(buttons: IModalButtonOptions<T>[]): IModalButtonOptions<T>[] {\n        return buttons.map((button) => {\n\n            return {\n                ...{\n                    type: 'default',\n                    size: 'default',\n                    autoLoading: true,\n                    show: true,\n                    loading: false,\n                    disabled: false\n                },\n                ...button\n            };\n        });\n    }\n\n    /**\n     * Create a component dynamically but not attach to any View\n     * (this action will be executed when bodyContainer is ready)\n     * @param component Component class\n     */\n    private createDynamicComponent(component: Type<T>) {\n        const factory = this.cfr.resolveComponentFactory(component);\n        const childInjector = Injector.create({\n            providers: [{provide: McModalRef, useValue: this}],\n            parent: this.viewContainer.parentInjector\n        });\n\n        this.contentComponentRef = factory.create(childInjector);\n\n        if (this.mcComponentParams) {\n            Object.assign(this.contentComponentRef.instance, this.mcComponentParams);\n        }\n\n        // Do the first change detection immediately\n        // (or we do detection at ngAfterViewInit, multi-changes error will be thrown)\n        this.contentComponentRef.changeDetectorRef.detectChanges();\n\n\n    }\n\n    // Update transform-origin to the last click position on document\n    private updateTransformOrigin() {\n        const modalElement = this.modalContainer.nativeElement as HTMLElement;\n        const lastPosition = ModalUtil.getLastClickPosition();\n\n        if (lastPosition) {\n            // tslint:disable-next-line\n            this.transformOrigin = `${lastPosition.x - modalElement.offsetLeft}px ${lastPosition.y - modalElement.offsetTop}px 0px`;\n        }\n    }\n\n    /**\n     * Take care of the body's overflow to decide the existense of scrollbar\n     * @param plusNum The number that the openModals.length will increase soon\n     */\n    private changeBodyOverflow(plusNum: number = 0) {\n        const openModals = this.modalControl.openModals;\n\n        if (openModals.length + plusNum > 0) {\n            // tslint:disable-next-line\n            this.renderer.setStyle(this.document.body, 'padding-right', `${this.mcMeasureScrollbarService.scrollBarWidth}px`);\n            this.renderer.setStyle(this.document.body, 'overflow', 'hidden');\n        } else {\n            this.renderer.removeStyle(this.document.body, 'padding-right');\n            this.renderer.removeStyle(this.document.body, 'overflow');\n        }\n    }\n}\n\n////////////\n\nfunction isPromise(obj: {} | void): boolean {\n    // tslint:disable-next-line\n    return !!obj && (typeof obj === 'object' || typeof obj === 'function') && typeof (obj as Promise<{}>).then === 'function' && typeof (obj as Promise<{}>).catch === 'function';\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n\n@Pipe({\n    name: 'toCssUnit'\n})\nexport class CssUnitPipe implements PipeTransform {\n    transform(value: number | string, defaultUnit: string = 'px'): string {\n        const formatted = +value;\n\n        return isNaN(formatted) ? `${value}` : `${formatted}${defaultUnit}`;\n    }\n}\n","import {\n    AfterContentChecked,\n    AfterContentInit,\n    AfterViewInit,\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    ContentChild,\n    ContentChildren, Directive,\n    ElementRef,\n    QueryList,\n    ViewEncapsulation\n} from '@angular/core';\nimport { NgControl } from '@angular/forms';\nimport { ESCAPE } from '@ptsecurity/cdk/keycodes';\nimport { CanColor, CanColorCtor, mixinColor } from '@ptsecurity/mosaic/core';\nimport { EMPTY, merge } from 'rxjs';\nimport { startWith } from 'rxjs/operators';\n\n\nimport { McCleaner } from './cleaner';\nimport { McFormFieldControl } from './form-field-control';\nimport { getMcFormFieldMissingControlError } from './form-field-errors';\nimport { McFormFieldNumberControl } from './form-field-number-control';\nimport { McHint } from './hint';\nimport { McPrefix } from './prefix';\nimport { McStepper } from './stepper';\nimport { McSuffix } from './suffix';\n\n\nlet nextUniqueId = 0;\n\nexport class McFormFieldBase {\n    constructor(public _elementRef: ElementRef) {}\n}\n\nexport const _McFormFieldMixinBase: CanColorCtor & typeof McFormFieldBase = mixinColor(McFormFieldBase);\n\n@Component({\n    selector: 'mc-form-field',\n    exportAs: 'mcFormField',\n    templateUrl: 'form-field.html',\n    // McInput is a directive and can't have styles, so we need to include its styles here.\n    // The McInput styles are fairly minimal so it shouldn't be a big deal for people who\n    // aren't using McInput.\n    styleUrls: [\n        'form-field.css',\n        '../input/input.css',\n        '../textarea/textarea.css'\n    ],\n    host: {\n        class: 'mc-form-field',\n        '[class.mc-form-field_invalid]': '_control.errorState',\n        '[class.mc-disabled]': '_control.disabled',\n        '[class.mc-form-field_has-prefix]': 'hasPrefix',\n        '[class.mc-form-field_has-suffix]': 'hasSuffix',\n        '[class.mc-form-field_has-cleaner]': 'canShowCleaner',\n        '[class.mc-form-field_has-stepper]': 'canShowStepper',\n        '[class.mc-focused]': '_control.focused',\n        '[class.ng-untouched]': '_shouldForward(\"untouched\")',\n        '[class.ng-touched]': '_shouldForward(\"touched\")',\n        '[class.ng-pristine]': '_shouldForward(\"pristine\")',\n        '[class.ng-dirty]': '_shouldForward(\"dirty\")',\n        '[class.ng-valid]': '_shouldForward(\"valid\")',\n        '[class.ng-invalid]': '_shouldForward(\"invalid\")',\n        '[class.ng-pending]': '_shouldForward(\"pending\")',\n        '(keydown)': 'onKeyDown($event)',\n        '(mouseenter)': 'onHoverChanged(true)',\n        '(mouseleave)': 'onHoverChanged(false)'\n    },\n    inputs: ['color'],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\n\nexport class McFormField extends _McFormFieldMixinBase implements\n    AfterContentInit, AfterContentChecked, AfterViewInit, CanColor {\n\n    @ContentChild(McFormFieldControl) _control: McFormFieldControl<any>;\n    @ContentChild(McFormFieldNumberControl) _numberControl: McFormFieldNumberControl<any>;\n    @ContentChild(McStepper) _stepper: McStepper;\n\n    @ContentChildren(McHint) _hint: QueryList<McHint>;\n    @ContentChildren(McSuffix) _suffix: QueryList<McSuffix>;\n    @ContentChildren(McPrefix) _prefix: QueryList<McPrefix>;\n    @ContentChildren(McCleaner) _cleaner: QueryList<McCleaner>;\n\n    // Unique id for the internal form field label.\n    _labelId = `mc-form-field-label-${nextUniqueId++}`;\n\n    hovered: boolean = false;\n\n    constructor(public _elementRef: ElementRef, private _changeDetectorRef: ChangeDetectorRef) {\n        super(_elementRef);\n    }\n\n    ngAfterContentInit() {\n        this._validateControlChild();\n\n        if (this._control.controlType) {\n            this._elementRef.nativeElement.classList\n                .add(`mc-form-field-type-${this._control.controlType}`);\n\n            if (this._numberControl && this.hasStepper) {\n                this._stepper.stepUp.subscribe(this.onStepUp.bind(this));\n                this._stepper.stepDown.subscribe(this.onStepDown.bind(this));\n            }\n        }\n\n        // Subscribe to changes in the child control state in order to update the form field UI.\n        this._control.stateChanges.pipe(startWith())\n            .subscribe(() => {\n                this._changeDetectorRef.markForCheck();\n            });\n\n        if (this._numberControl) {\n            this._numberControl.stateChanges.pipe(startWith())\n                .subscribe(() => {\n                    this._changeDetectorRef.markForCheck();\n                });\n        }\n\n        // Run change detection if the value changes.\n        const valueChanges = this._control.ngControl && this._control.ngControl.valueChanges || EMPTY;\n\n        merge(valueChanges)\n            .subscribe(() => this._changeDetectorRef.markForCheck());\n    }\n\n    ngAfterContentChecked() {\n        this._validateControlChild();\n    }\n\n    ngAfterViewInit() {\n        // Avoid animations on load.\n        this._changeDetectorRef.detectChanges();\n    }\n\n    clearValue($event) {\n        $event.stopPropagation();\n\n        if (this._control && this._control.ngControl) {\n            this._control.ngControl.reset();\n        }\n    }\n\n    onContainerClick($event) {\n        if (this._control.onContainerClick) {\n            this._control.onContainerClick($event);\n        }\n    }\n\n    onKeyDown(event: KeyboardEvent): void {\n        // tslint:disable-next-line:deprecation\n        if (event.keyCode === ESCAPE && this._control.focused && this.hasCleaner) {\n            if (this._control && this._control.ngControl) {\n                this._control.ngControl.reset();\n            }\n\n            event.preventDefault();\n        }\n    }\n\n    onHoverChanged(isHovered: boolean) {\n        if (isHovered !== this.hovered) {\n            this.hovered  = isHovered;\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n\n    onStepUp() {\n        if (this._numberControl) {\n            this._numberControl.stepUp(this._numberControl.step);\n        }\n    }\n\n    onStepDown() {\n        if (this._numberControl) {\n            this._numberControl.stepDown(this._numberControl.step);\n        }\n    }\n\n    /** Determines whether a class from the NgControl should be forwarded to the host element. */\n    _shouldForward(prop: keyof NgControl): boolean {\n        const ngControl = this._control ? this._control.ngControl : null;\n\n        return ngControl && ngControl[prop];\n    }\n\n    /** Throws an error if the form field's control is missing. */\n    protected _validateControlChild() {\n        if (!this._control) {\n            throw getMcFormFieldMissingControlError();\n        }\n    }\n\n    get hasHint(): boolean {\n        return this._hint && this._hint.length > 0;\n    }\n\n    get hasSuffix(): boolean {\n        return this._suffix && this._suffix.length > 0;\n    }\n\n    get hasPrefix(): boolean {\n        return this._prefix && this._prefix.length > 0;\n    }\n\n    get hasCleaner(): boolean {\n        return this._cleaner && this._cleaner.length > 0;\n    }\n\n    get hasStepper(): boolean {\n        return !!this._stepper;\n    }\n\n    get canShowCleaner(): boolean {\n        return this.hasCleaner &&\n            this._control &&\n            this._control.ngControl\n                ? this._control.ngControl.value && !this._control.disabled\n                : false;\n    }\n\n\n    get disabled(): boolean {\n        return this._control && this._control.disabled;\n    }\n\n    get canShowStepper(): boolean {\n        return this._numberControl &&\n            !this.disabled &&\n            (\n                this._numberControl.focused ||\n                this.hovered\n            );\n    }\n}\n\n@Directive({\n    selector: 'mc-form-field[mcFormFieldWithoutBorders]',\n    exportAs: 'mcFormFieldWithoutBorders',\n    host: { class: 'mc-form-field_without-borders' }\n})\nexport class McFormFieldWithoutBorders {}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { McIconModule } from '@ptsecurity/mosaic/icon';\n\nimport { McCleaner } from './cleaner';\nimport { McFormField, McFormFieldWithoutBorders } from './form-field';\nimport { McHint } from './hint';\nimport { McPrefix } from './prefix';\nimport { McStepper } from './stepper';\nimport { McSuffix } from './suffix';\n\n\n@NgModule({\n    declarations: [\n        McFormField,\n        McFormFieldWithoutBorders,\n        McHint,\n        McPrefix,\n        McSuffix,\n        McCleaner,\n        McStepper\n    ],\n    imports: [CommonModule, McIconModule],\n    exports: [\n        McFormField,\n        McFormFieldWithoutBorders,\n        McHint,\n        McPrefix,\n        McSuffix,\n        McCleaner,\n        McStepper\n    ]\n})\nexport class McFormFieldModule {\n}\n","import { InjectionToken } from '@angular/core';\n\n\nexport const MC_INPUT_VALUE_ACCESSOR =\n    new InjectionToken<{ value: any }>('MC_INPUT_VALUE_ACCESSOR');\n","function sanitizeNumber(value: number): number | null {\n    return !isFinite(value) || isNaN(value)\n        ? null\n        : value;\n}\n\nfunction getPrecision(value: number): number {\n    const arr = value.toString().split('.');\n\n    return arr.length === 1\n        ? 1\n        // tslint:disable-next-line:no-magic-numbers\n        :  Math.pow(10, arr[1].length);\n}\n\nfunction add(value1: number, value2: number) {\n    const precision = Math.max(getPrecision(value1), getPrecision(value2));\n\n    const res = (value1 * precision + value2 * precision) / precision;\n\n    return sanitizeNumber(res);\n}\n\nexport const stepUp = (value: number | null,\n                       max: number,\n                       min: number,\n                       step: number\n): number | null => {\n    let res;\n\n    if (value === null) {\n        res = add(min, step);\n\n        return res === null ? null : Math.min(res, max);\n    }\n\n    res = add(value, step);\n\n    return res === null ? null : Math.max(Math.min(res, max), min);\n};\n\nexport const stepDown = (value: number | null,\n                         max: number,\n                         min: number,\n                         step: number\n): number | null => {\n    let res;\n\n    if (value === null) {\n        res = add(max, -step);\n\n        return res === null ? null : Math.max(res, min);\n    }\n\n    res = add(value, -step);\n\n    return res === null ? null : Math.min(Math.max(res, min), max);\n};\n","import {\n    Attribute,\n    Directive, DoCheck, ElementRef, Inject, Input, OnChanges,\n    OnDestroy, Optional, Self\n} from '@angular/core';\nimport {\n    FormGroupDirective,\n    NgControl,\n    NgForm, NgModel\n} from '@angular/forms';\nimport { coerceBooleanProperty } from '@ptsecurity/cdk/coercion';\nimport {\n    END, C, V, X, A, DELETE, BACKSPACE, TAB, ENTER,\n    ESCAPE, ZERO, NINE, NUMPAD_ZERO, NUMPAD_NINE, NUMPAD_MINUS, DASH,\n    FF_MINUS, LEFT_ARROW, RIGHT_ARROW, HOME, UP_ARROW, DOWN_ARROW, F1, F12\n} from '@ptsecurity/cdk/keycodes';\nimport { getSupportedInputTypes, Platform } from '@ptsecurity/cdk/platform';\nimport {\n    CanUpdateErrorState,\n    CanUpdateErrorStateCtor,\n    ErrorStateMatcher,\n    mixinErrorState\n} from '@ptsecurity/mosaic/core';\nimport { McFormFieldControl, McFormFieldNumberControl } from '@ptsecurity/mosaic/form-field';\nimport { Subject } from 'rxjs';\n\nimport { getMcInputUnsupportedTypeError } from './input-errors';\nimport { MC_INPUT_VALUE_ACCESSOR } from './input-value-accessor';\nimport { stepDown, stepUp } from './stepperUtils';\n\n\nconst MC_INPUT_INVALID_TYPES = [\n    'button',\n    'checkbox',\n    'file',\n    'hidden',\n    'image',\n    'radio',\n    'range',\n    'reset',\n    'submit'\n];\n\nexport const BIG_STEP = 10;\nexport const SMALL_STEP = 1;\n\nlet nextUniqueId = 0;\n\nexport class McInputBase {\n    constructor(public _defaultErrorStateMatcher: ErrorStateMatcher,\n                public _parentForm: NgForm,\n                public _parentFormGroup: FormGroupDirective,\n                public ngControl: NgControl) {\n    }\n}\n\nexport const _McInputMixinBase: CanUpdateErrorStateCtor & typeof McInputBase = mixinErrorState(McInputBase);\n\n\n@Directive({\n    selector: `input[mcInput][type=\"number\"]`,\n    exportAs: 'mcNumericalInput',\n    providers: [NgModel, { provide: McFormFieldNumberControl, useExisting: McNumberInput }],\n    host: {\n        '(blur)': '_focusChanged(false)',\n        '(focus)': '_focusChanged(true)',\n        '(paste)': 'onPaste($event)',\n        '(keydown)': 'onKeyDown($event)'\n    }\n})\nexport class McNumberInput implements McFormFieldNumberControl<any> {\n\n    /**\n     * Implemented as part of McFormFieldNumberControl.\n     * @docs-private\n     */\n    @Input()\n    bigStep: number;\n\n    /**\n     * Implemented as part of McFormFieldNumberControl.\n     * @docs-private\n     */\n    @Input()\n    step: number;\n\n    @Input()\n    min: number;\n\n    @Input()\n    max: number;\n\n    /**\n     * Implemented as part of McFormFieldNumberControl.\n     * @docs-private\n     */\n    value: any;\n\n    /**\n     * Implemented as part of McFormFieldNumberControl.\n     * @docs-private\n     */\n    focused: boolean = false;\n\n    /**\n     * Implemented as part of McFormFieldNumberControl.\n     * @docs-private\n     */\n    readonly stateChanges: Subject<void> = new Subject<void>();\n\n    private readonly _host: HTMLInputElement;\n\n    constructor(\n        private _platform: Platform ,\n        private _elementRef: ElementRef,\n        private _model: NgModel,\n        @Attribute('step') step: string,\n        @Attribute('big-step') bigStep: string,\n        @Attribute('min') min: string,\n        @Attribute('max') max: string\n    ) {\n        this.step = this.isDigit(step) ? parseFloat(step) : SMALL_STEP;\n        this.bigStep = this.isDigit(bigStep) ? parseFloat(bigStep) : BIG_STEP;\n        this.min = this.isDigit(min) ? parseFloat(min) : -Infinity;\n        this.max = this.isDigit(max) ? parseFloat(max) : Infinity;\n\n        this._host = this._elementRef.nativeElement;\n\n        const self = this;\n\n        if ('valueAsNumber' in this._host) {\n            Object.defineProperty(Object.getPrototypeOf(this._host), 'valueAsNumber', {\n                // tslint:disable-next-line:no-reserved-keywords\n                get() {\n                    const res = parseFloat(self.normalizeSplitter(this.value));\n\n                    return isNaN(res) ? null : res;\n                }\n            });\n        }\n    }\n\n    _focusChanged(isFocused: boolean) {\n        if (isFocused !== this.focused) {\n            this.focused = isFocused;\n            this.stateChanges.next();\n        }\n    }\n\n    onKeyDown(event: KeyboardEvent) {\n        // tslint:disable-next-line:deprecation\n        const keyCode = event.keyCode;\n\n        const isCtrlA = (e) => e.keyCode === A && (e.ctrlKey || e.metaKey);\n        const isCtrlC = (e) => e.keyCode === C && (e.ctrlKey || e.metaKey);\n        const isCtrlV = (e) => e.keyCode === V && (e.ctrlKey || e.metaKey);\n        const isCtrlX = (e) => e.keyCode === X && (e.ctrlKey || e.metaKey);\n\n        const isFKey = (e) => e.keyCode >= F1 && e.keyCode <= F12;\n\n        const isNumber = (e) => (e.keyCode >= ZERO && e.keyCode <= NINE) ||\n            (e.keyCode >= NUMPAD_ZERO && e.keyCode <= NUMPAD_NINE);\n\n        const minuses = [NUMPAD_MINUS, DASH, FF_MINUS];\n        const serviceKeys = [DELETE, BACKSPACE, TAB, ESCAPE, ENTER];\n        const arrows = [LEFT_ARROW, RIGHT_ARROW];\n        const allowedKeys =  [HOME, END].concat(arrows).concat(serviceKeys).concat(minuses);\n\n        const isIEPeriod = (e) => e.key === '.' || e.key === 'Decimal';\n        const isNotIEPeriod = (e) => e.key === '.' || e.key === ',';\n\n        // Decimal is for IE\n        const isPeriod = (e) => this._platform.EDGE || this._platform.TRIDENT\n            ? isIEPeriod(e)\n            : isNotIEPeriod(e);\n\n        if (allowedKeys.indexOf(keyCode) !== -1 ||\n            isCtrlA(event) ||\n            isCtrlC(event) ||\n            isCtrlV(event) ||\n            isCtrlX(event) ||\n            isFKey(event) ||\n            isPeriod(event)\n        ) {\n            // let it happen, don't do anything\n            return;\n        }\n        // Ensure that it is not a number and stop the keypress\n        if (event.shiftKey || !isNumber(event)) {\n            event.preventDefault();\n\n            // process steps\n            const step = event.shiftKey ? this.bigStep : this.step;\n\n            if (keyCode === UP_ARROW) {\n                this.stepUp(step);\n            }\n\n            if (keyCode === DOWN_ARROW) {\n                this.stepDown(step);\n            }\n        }\n    }\n\n    onPaste(event) {\n        let value = event.clipboardData.getData('text');\n        value = this.normalizeSplitter(value);\n\n        if (!this.isDigit(value)) {\n            event.preventDefault();\n        }\n    }\n\n    stepUp(step: number) {\n        this._elementRef.nativeElement.focus();\n        const res = stepUp(this._host.valueAsNumber, this.max, this.min, step);\n        this._host.value = res === null ? '' : res.toString();\n        this._model.update.emit(this._host.valueAsNumber);\n    }\n\n    stepDown(step: number) {\n        this._elementRef.nativeElement.focus();\n        const res = stepDown(this._host.valueAsNumber, this.max, this.min, step);\n        this._host.value = res === null ? '' : res.toString();\n        this._model.update.emit(this._host.valueAsNumber);\n    }\n\n    private normalizeSplitter(value: string): string {\n        return value ? value.replace(/,/g, '.') : value;\n    }\n\n    private isDigit(value: string): boolean {\n        return this.isFloat(value) || this.isInt(value);\n    }\n\n    private isFloat(value: string): boolean {\n        return /^-?\\d+\\.\\d+$/.test(value);\n    }\n\n    private isInt(value: string): boolean {\n        return /^-?\\d+$/.test(value);\n    }\n}\n\n@Directive({\n    selector: `input[mcInput]`,\n    exportAs: 'mcInput',\n    host: {\n        class: 'mc-input',\n        // Native input properties that are overwritten by Angular inputs need to be synced with\n        // the native input element. Otherwise property bindings for those don't work.\n        '[attr.id]': 'id',\n        '[attr.placeholder]': 'placeholder',\n        '[disabled]': 'disabled',\n        '[required]': 'required',\n        '(blur)': '_focusChanged(false)',\n        '(focus)': '_focusChanged(true)',\n        '(input)': '_onInput()'\n    },\n    providers: [{ provide: McFormFieldControl, useExisting: McInput }]\n})\nexport class McInput extends _McInputMixinBase implements McFormFieldControl<any>, OnChanges,\n    OnDestroy, DoCheck, CanUpdateErrorState {\n\n    /** An object used to control when error messages are shown. */\n    @Input() errorStateMatcher: ErrorStateMatcher;\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    focused: boolean = false;\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    readonly stateChanges: Subject<void> = new Subject<void>();\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    controlType: string = 'mc-input';\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    @Input()\n    get disabled(): boolean {\n        if (this.ngControl && this.ngControl.disabled !== null) {\n            return this.ngControl.disabled;\n        }\n\n        return this._disabled;\n    }\n\n    set disabled(value: boolean) {\n        this._disabled = coerceBooleanProperty(value);\n\n        // Browsers may not fire the blur event if the input is disabled too quickly.\n        // Reset from here to ensure that the element doesn't become stuck.\n        if (this.focused) {\n            this.focused = false;\n            this.stateChanges.next();\n        }\n    }\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    @Input()\n    get id(): string {\n        return this._id;\n    }\n\n    set id(value: string) {\n        this._id = value || this._uid;\n    }\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    @Input() placeholder: string;\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    @Input()\n    get required(): boolean {\n        return this._required;\n    }\n\n    set required(value: boolean) {\n        this._required = coerceBooleanProperty(value);\n    }\n\n    // tslint:disable no-reserved-keywords\n    /** Input type of the element. */\n    @Input()\n    get type(): string {\n        return this._type;\n    }\n\n    set type(value: string) {\n        this._type = value || 'text';\n        this._validateType();\n\n        // When using Angular inputs, developers are no longer able to set the properties on the native\n        // input element. To ensure that bindings for `type` work, we need to sync the setter\n        // with the native property. Textarea elements don't support the type property or attribute.\n        if (getSupportedInputTypes().has(this._type)) {\n            this._elementRef.nativeElement.type = this._type;\n        }\n    }\n    // tslint:enable no-reserved-keywords\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    @Input()\n    get value(): string {\n        return this._inputValueAccessor.value;\n    }\n\n    set value(value: string) {\n        if (value !== this.value) {\n            this._inputValueAccessor.value = value;\n            this.stateChanges.next();\n        }\n    }\n\n    protected _uid = `mc-input-${nextUniqueId++}`;\n    protected _previousNativeValue: any;\n    protected _disabled = false;\n    protected _id: string;\n    protected _required = false;\n    protected _type = 'text';\n    protected _neverEmptyInputTypes = [\n        'date',\n        'datetime',\n        'datetime-local',\n        'month',\n        'time',\n        'week'\n    ].filter((t) => getSupportedInputTypes().has(t));\n\n    private _inputValueAccessor: { value: any };\n\n    constructor(protected _elementRef: ElementRef,\n                @Optional() @Self() public ngControl: NgControl,\n                @Optional() _parentForm: NgForm,\n                @Optional() _parentFormGroup: FormGroupDirective,\n                _defaultErrorStateMatcher: ErrorStateMatcher,\n                @Optional() @Self() @Inject(MC_INPUT_VALUE_ACCESSOR) inputValueAccessor: any) {\n        super(_defaultErrorStateMatcher, _parentForm, _parentFormGroup, ngControl);\n        // If no input value accessor was explicitly specified, use the element as the input value\n        // accessor.\n        this._inputValueAccessor = inputValueAccessor || this._elementRef.nativeElement;\n\n        this._previousNativeValue = this.value;\n\n        // Force setter to be called in case id was not specified.\n        this.id = this.id;\n    }\n\n    ngOnChanges() {\n        this.stateChanges.next();\n    }\n\n    ngOnDestroy() {\n        this.stateChanges.complete();\n    }\n\n    ngDoCheck() {\n        if (this.ngControl) {\n            // We need to re-evaluate this on every change detection cycle, because there are some\n            // error triggers that we can't subscribe to (e.g. parent form submissions). This means\n            // that whatever logic is in here has to be super lean or we risk destroying the performance.\n            this.updateErrorState();\n        }\n\n        // We need to dirty-check the native element's value, because there are some cases where\n        // we won't be notified when it changes (e.g. the consumer isn't using forms or they're\n        // updating the value using `emitEvent: false`).\n        this._dirtyCheckNativeValue();\n    }\n\n    /** Focuses the input. */\n    focus(): void {\n        this._elementRef.nativeElement.focus();\n    }\n\n    /** Callback for the cases where the focused state of the input changes. */\n    _focusChanged(isFocused: boolean) {\n        if (isFocused !== this.focused) {\n            this.focused = isFocused;\n            this.stateChanges.next();\n        }\n    }\n\n    _onInput() {\n        // This is a noop function and is used to let Angular know whenever the value changes.\n        // Angular will run a new change detection each time the `input` event has been dispatched.\n        // It's necessary that Angular recognizes the value change, because when floatingLabel\n        // is set to false and Angular forms aren't used, the placeholder won't recognize the\n        // value changes and will not disappear.\n        // Listening to the input event wouldn't be necessary when the input is using the\n        // FormsModule or ReactiveFormsModule, because Angular forms also listens to input events.\n    }\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    get empty(): boolean {\n        return !this._isNeverEmpty() && !this._elementRef.nativeElement.value && !this._isBadInput();\n    }\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    onContainerClick() {\n        this.focus();\n    }\n\n    /** Does some manual dirty checking on the native input `value` property. */\n    protected _dirtyCheckNativeValue() {\n        const newValue = this.value;\n\n        if (this._previousNativeValue !== newValue) {\n            this._previousNativeValue = newValue;\n            this.stateChanges.next();\n        }\n    }\n\n    /** Make sure the input is a supported type. */\n    protected _validateType() {\n        if (MC_INPUT_INVALID_TYPES.indexOf(this._type) > -1) {\n            throw getMcInputUnsupportedTypeError(this._type);\n        }\n    }\n\n    /** Checks whether the input type is one of the types that are never empty. */\n    protected _isNeverEmpty() {\n        return this._neverEmptyInputTypes.indexOf(this._type) > -1;\n    }\n\n    /** Checks whether the input is invalid based on the native validation. */\n    protected _isBadInput() {\n        // The `validity` property won't be present on platform-server.\n        const validity = (this._elementRef.nativeElement as HTMLInputElement).validity;\n\n        return validity && validity.badInput;\n    }\n}\n\n@Directive({\n    selector: 'input[mcInputMonospace]',\n    exportAs: 'McInputMonospace',\n    host: { class: 'mc-input_monospace' }\n})\nexport class McInputMono {\n}\n","import { Directive, forwardRef, Input, OnChanges, Provider, SimpleChanges } from '@angular/core';\nimport { AbstractControl, NG_VALIDATORS, ValidationErrors, Validator, ValidatorFn, Validators } from '@angular/forms';\n\n\nexport const MIN_VALIDATOR: Provider = {\n    provide: NG_VALIDATORS,\n    useExisting: forwardRef(() => MinValidator),\n    multi: true\n};\n\n/**\n * A directive which installs the {@link MinValidator} for any `formControlName`,\n * `formControl`, or control with `ngModel` that also has a `min` attribute.\n *\n * @experimental\n */\n@Directive({\n    selector: '[min][formControlName],[min][formControl],[min][ngModel]',\n    providers: [MIN_VALIDATOR],\n    host: {'[attr.min]': 'min ? min : null'}\n})\nexport class MinValidator implements Validator, OnChanges {\n\n    @Input() min: string;\n    private _validator: ValidatorFn;\n    private _onChange: () => void;\n\n    ngOnChanges(changes: SimpleChanges): void {\n        if ('min' in changes) {\n            this._createValidator();\n            if (this._onChange) { this._onChange(); }\n        }\n    }\n\n    validate(c: AbstractControl): ValidationErrors | null { return this._validator(c); }\n\n    registerOnValidatorChange(fn: () => void): void { this._onChange = fn; }\n\n    private _createValidator(): void { this._validator = Validators.min(parseInt(this.min, 10)); }\n}\n\n\nexport const MAX_VALIDATOR: Provider = {\n    provide: NG_VALIDATORS,\n    useExisting: forwardRef(() => MaxValidator),\n    multi: true\n};\n\n/**\n * A directive which installs the {@link MaxValidator} for any `formControlName`,\n * `formControl`, or control with `ngModel` that also has a `min` attribute.\n *\n * @experimental\n */\n@Directive({\n    selector: '[max][formControlName],[max][formControl],[max][ngModel]',\n    providers: [MAX_VALIDATOR],\n    host: {\n        '[attr.max]': 'max ? max : null'\n    }\n})\nexport class MaxValidator implements Validator,\n    OnChanges {\n\n    @Input() max: string;\n    private _validator: ValidatorFn;\n    private _onChange: () => void;\n\n    ngOnChanges(changes: SimpleChanges): void {\n        if ('max' in changes) {\n            this._createValidator();\n            if (this._onChange) { this._onChange(); }\n        }\n    }\n\n    validate(c: AbstractControl): ValidationErrors | null { return this._validator(c); }\n\n    registerOnValidatorChange(fn: () => void): void { this._onChange = fn; }\n\n    private _createValidator(): void { this._validator = Validators.max(parseInt(this.max, 10)); }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { A11yModule } from '@ptsecurity/cdk/a11y';\nimport { McCommonModule } from '@ptsecurity/mosaic/core';\n\nimport { McInput, McInputMono, McNumberInput } from './input';\nimport { MaxValidator, MinValidator } from './input-number-validators';\n\n\n@NgModule({\n    imports: [CommonModule, A11yModule, McCommonModule, FormsModule],\n    exports: [McInput, McNumberInput, McInputMono, MinValidator, MaxValidator],\n    declarations: [McInput, McNumberInput, McInputMono, MinValidator, MaxValidator ]\n})\nexport class McInputModule {\n}\n","import { Component } from '@angular/core';\n\n\n@Component({\n    selector: 'mc-content',\n    preserveWhitespaces: false,\n    templateUrl: './content.component.html',\n    styles: [\n        `:host {\n            display: block;\n        }`\n    ],\n    host: {\n        '[class.mc-layout-content]': 'true'\n    }\n})\nexport class McContentComponent {\n}\n","import { Component } from '@angular/core';\n\n\n@Component({\n    selector: 'mc-footer',\n    preserveWhitespaces: false,\n    templateUrl: './footer.component.html',\n    styles: [\n        `:host {\n            display: block;\n        }`\n    ],\n    host: {\n        '[class.mc-layout-footer]': 'true'\n    }\n})\nexport class McFooterComponent {\n}\n","import { Component } from '@angular/core';\n\n\n@Component({\n    selector : 'mc-header',\n    preserveWhitespaces: false,\n    templateUrl: './header.component.html',\n    styles: [\n        `:host {\n            display: block;\n        }`\n    ],\n    host: {\n        '[class.mc-layout-header]': 'true'\n    }\n})\nexport class McHeaderComponent {\n}\n","import { ChangeDetectionStrategy, Component, ViewEncapsulation } from '@angular/core';\n\n\n@Component({\n    selector: 'mc-layout',\n    preserveWhitespaces: false,\n    styleUrls: ['layout.css'],\n    templateUrl: './layout.component.html',\n    host: {\n        '[class.mc-layout]': 'true',\n        '[class.mc-layout-has-sidebar]': 'hasSidebar'\n    },\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class McLayoutComponent {\n    hasSidebar = false;\n}\n","import {\n    ChangeDetectionStrategy,\n    Component,\n    EventEmitter,\n    Host,\n    Input,\n    OnInit,\n    Optional,\n    Output\n} from '@angular/core';\nimport { toBoolean } from '@ptsecurity/mosaic/core';\n\nimport { McLayoutComponent } from './layout.component';\n\n\n@Component({\n    selector: 'mc-sidebar',\n    preserveWhitespaces: false,\n    templateUrl: './sidebar.component.html',\n    host: {\n        '[class.mc-layout-sidebar]': 'true',\n        '[class.mc-layout-sidebar-collapsed]': 'mcCollapsed',\n        '[style.flex]': 'mcFlex',\n        '[style.max-width.px]': 'mcWidth',\n        '[style.min-width.px]': 'mcWidth',\n        '[style.width.px]': 'mcWidth'\n    },\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class McSidebarComponent implements OnInit {\n\n    @Input() _mcWidth = 200;\n    @Input() mcCollapsedWidth = 80;\n\n    @Input()\n    set mcCollapsible(value: boolean) {\n        this.collapsible = toBoolean(value);\n    }\n\n    get mcCollapsible(): boolean {\n        return this.collapsible;\n    }\n\n    @Input()\n    set mcCollapsed(value: boolean) {\n        this.collapsed = toBoolean(value);\n    }\n\n    get mcCollapsed(): boolean {\n        return this.collapsed;\n    }\n\n    // tslint:disable-next-line\n    @Output() mcCollapsedChange = new EventEmitter();\n\n    private collapsed = false;\n    private collapsible = false;\n\n    get mcFlex(): string {\n        if (this.mcCollapsed) {\n            return `0 0 ${this.mcCollapsedWidth}px`;\n        } else {\n            return `0 0 ${this.mcWidth}px`;\n        }\n    }\n\n    get mcWidth(): number {\n        if (this.mcCollapsed) {\n            return this.mcCollapsedWidth;\n        } else {\n            return this._mcWidth;\n        }\n    }\n\n    constructor(\n        @Optional() @Host() private mcLayoutComponent: McLayoutComponent) {\n    }\n\n    ngOnInit() {\n        if (this.mcLayoutComponent) {\n            this.mcLayoutComponent.hasSidebar = true;\n        }\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { McContentComponent } from './content.component';\nimport { McFooterComponent } from './footer.component';\nimport { McHeaderComponent } from './header.component';\nimport { McLayoutComponent } from './layout.component';\nimport { McSidebarComponent } from './sidebar.component';\n\n\n@NgModule({\n    imports: [ CommonModule ],\n    exports: [\n        McLayoutComponent,\n        McContentComponent,\n        McFooterComponent,\n        McHeaderComponent,\n        McSidebarComponent\n    ],\n    declarations: [\n        McLayoutComponent,\n        McContentComponent,\n        McFooterComponent,\n        McHeaderComponent,\n        McSidebarComponent\n    ]\n})\nexport class McLayoutModule {\n}\n","import {\n    ChangeDetectionStrategy,\n    Component,\n    Directive,\n    ElementRef,\n    OnDestroy,\n    QueryList,\n    ViewEncapsulation,\n    ContentChildren\n} from '@angular/core';\n\nimport { FocusMonitor } from '@ptsecurity/cdk/a11y';\n\nimport { mixinColor, mixinDisabled, CanColor, CanDisable, CanDisableCtor, CanColorCtor } from '@ptsecurity/mosaic/core';\nimport { McIcon } from '@ptsecurity/mosaic/icon';\n\n\n@Directive({\n    selector: 'button[mc-button], a[mc-button]',\n    host: { class: 'mc-button' }\n})\nexport class McButtonCSSStyler {}\n\n\n@Directive({\n    selector: 'button[mc-icon-button], a[mc-icon-button]',\n    queries: {\n        contentChildren: new ContentChildren(McIcon)\n    },\n    host: { class: 'mc-icon-button' }\n})\nexport class McIconButtonCSSStyler {\n    nativeElement: Element;\n\n    contentChildren: QueryList<McIcon>;\n\n    constructor(elementRef: ElementRef) {\n        this.nativeElement = elementRef.nativeElement;\n    }\n\n    ngAfterContentInit() {\n        this._addClassModificatorForIcons();\n    }\n\n    _addClassModificatorForIcons() {\n        const twoIcons = 2;\n        const icons = this.contentChildren.map((item) => item._elementRef.nativeElement);\n\n        if (icons.length === 1) {\n            const iconElement = icons[0];\n            const COMMENT_NODE = 8;\n\n            if (!iconElement.previousElementSibling && !iconElement.nextElementSibling) {\n                if (iconElement.nextSibling && iconElement.nextSibling.nodeType !== COMMENT_NODE) {\n                    iconElement.classList.add('mc-icon_left');\n                    this.nativeElement.classList.add('mc-icon-button_left');\n                }\n\n                if (iconElement.previousSibling && iconElement.previousSibling.nodeType !== COMMENT_NODE) {\n                    iconElement.classList.add('mc-icon_right');\n                    this.nativeElement.classList.add('mc-icon-button_right');\n                }\n            }\n        } else if (icons.length === twoIcons) {\n            const firstIconElement = icons[0];\n            const secondIconElement = icons[1];\n\n            firstIconElement.classList.add('mc-icon_left');\n            secondIconElement.classList.add('mc-icon_right');\n        }\n    }\n}\n\n\nexport class McButtonBase {\n    constructor(public _elementRef: ElementRef) {}\n}\n\nexport const _McButtonMixinBase:\n    CanDisableCtor &\n    CanColorCtor &\n    typeof McButtonBase =\n        mixinColor(mixinDisabled(McButtonBase));\n\n\n@Component({\n    selector: `\n        button[mc-button],\n        button[mc-xs-button],\n        button[mc-sm-button],\n        button[mc-lg-button],\n        button[mc-xl-button]\n    `,\n    templateUrl: './button.component.html',\n    styleUrls: ['./button.css'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n    inputs: ['disabled', 'color'],\n    host: {\n        '[disabled]': 'disabled || null'\n    }\n})\nexport class McButton extends _McButtonMixinBase implements OnDestroy, CanDisable, CanColor {\n    constructor(elementRef: ElementRef, private _focusMonitor: FocusMonitor) {\n        super(elementRef);\n\n        this._focusMonitor.monitor(this._elementRef.nativeElement, true);\n    }\n\n    ngOnDestroy() {\n        this._focusMonitor.stopMonitoring(this._elementRef.nativeElement);\n    }\n\n    focus(): void {\n        this._getHostElement().focus();\n    }\n\n    _getHostElement() {\n        return this._elementRef.nativeElement;\n    }\n}\n\n\n@Component({\n    selector: 'a[mc-button], a[mc-xs-button], a[mc-sm-button], a[mc-lg-button], a[mc-xl-button]',\n    templateUrl: './button.component.html',\n    styleUrls: ['./button.css'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n    inputs: ['disabled', 'color'],\n    host: {\n        '[attr.tabindex]': 'disabled ? -1 : 0',\n        '[attr.disabled]': 'disabled || null',\n        '(click)': '_haltDisabledEvents($event)'\n    }\n})\nexport class McAnchor extends McButton {\n    constructor(focusMonitor: FocusMonitor, elementRef: ElementRef) {\n        super(elementRef, focusMonitor);\n    }\n\n    _haltDisabledEvents(event: Event) {\n        if (this.disabled) {\n            event.preventDefault();\n            event.stopImmediatePropagation();\n        }\n    }\n}\n\n\n@Component({\n    selector: 'button[mc-icon-button]',\n    templateUrl: './button.component.html',\n    styleUrls: ['./button.css'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n    inputs: ['disabled', 'color'],\n    host: {\n        '[attr.tabindex]': 'disabled ? -1 : 0',\n        '[attr.disabled]': 'disabled || null'\n    }\n})\nexport class McIconButton extends McButton {\n    constructor(focusMonitor: FocusMonitor, elementRef: ElementRef) {\n        super(elementRef, focusMonitor);\n    }\n\n    _haltDisabledEvents(event: Event) {\n        if (this.disabled) {\n            event.preventDefault();\n            event.stopImmediatePropagation();\n        }\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { A11yModule } from '@ptsecurity/cdk/a11y';\nimport { PlatformModule } from '@ptsecurity/cdk/platform';\n\nimport {\n    McButton,\n    McAnchor,\n    McIconButton,\n    McButtonCSSStyler,\n    McIconButtonCSSStyler\n} from './button.component';\n\n\n@NgModule({\n    imports: [\n        CommonModule,\n        A11yModule,\n        PlatformModule\n    ],\n    exports: [\n        McButton,\n        McAnchor,\n        McIconButton,\n        McButtonCSSStyler,\n        McIconButtonCSSStyler\n    ],\n    declarations: [\n        McButton,\n        McAnchor,\n        McIconButton,\n        McButtonCSSStyler,\n        McIconButtonCSSStyler\n    ]\n})\nexport class McButtonModule {}\n","import {\n    Output,\n    ChangeDetectionStrategy,\n    Component,\n    ElementRef, Input,\n    OnDestroy, EventEmitter,\n    ViewEncapsulation, HostBinding\n} from '@angular/core';\n\nimport { FocusMonitor } from '@ptsecurity/cdk/a11y';\nimport { SPACE } from '@ptsecurity/cdk/keycodes';\n\n\n@Component({\n    selector: 'mc-card',\n    templateUrl: './card.component.html',\n    styleUrls: ['./card.component.css'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n    inputs: ['color'],\n    host: {\n        class: 'mc-card',\n        '[class.mc-card_readonly]': 'readonly',\n        '[class.mc-card_selected]': 'selected',\n        '(keydown)': 'onKeyDown($event)',\n        '(click)': 'onClick($event)'\n    }\n})\nexport class McCard implements OnDestroy {\n    get tabIndex(): number | null {\n        return this.readonly ? null : this._tabIndex;\n    }\n\n    @HostBinding('attr.tabIndex')\n    @Input()\n    set tabIndex(value: number | null) {\n        this._tabIndex = value;\n    }\n\n    @Input()\n    readonly = false;\n\n    @Input()\n    selected = false;\n\n    @Output()\n    selectedChange = new EventEmitter<boolean>();\n\n    private _tabIndex: number | null = 0;\n\n    constructor(private _elementRef: ElementRef, private _focusMonitor: FocusMonitor) {\n        this._focusMonitor.monitor(this._elementRef.nativeElement, false);\n    }\n\n    ngOnDestroy() {\n        this._focusMonitor.stopMonitoring(this._elementRef.nativeElement);\n    }\n\n    focus(): void {\n        this.hostElement.focus();\n    }\n\n    onClick($event: MouseEvent) {\n        if (!this.readonly) {\n            $event.stopPropagation();\n\n            this.selectedChange.emit(!this.selected);\n        }\n    }\n\n    private get hostElement() {\n        return this._elementRef.nativeElement;\n    }\n\n    onKeyDown($event: KeyboardEvent) {\n        switch ($event.keyCode) {\n            case SPACE:\n                if (!this.readonly) {\n                    $event.preventDefault();\n                    this.selectedChange.emit(!this.selected);\n                }\n                break;\n            default:\n        }\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { A11yModule } from '@ptsecurity/cdk/a11y';\nimport { PlatformModule } from '@ptsecurity/cdk/platform';\n\nimport {\n    McCard\n} from './card.component';\n\n\n@NgModule({\n    imports: [\n        CommonModule,\n        A11yModule,\n        PlatformModule\n    ],\n    exports: [McCard],\n    declarations: [McCard]\n})\nexport class McCardModule {}\n","import { InjectionToken } from '@angular/core';\n\n\n/**\n * Checkbox click action when user click on input element.\n * noop: Do not toggle checked or indeterminate.\n * check: Only toggle checked status, ignore indeterminate.\n * check-indeterminate: Toggle checked status, set indeterminate to false. Default behavior.\n * undefined: Same as `check-indeterminate`.\n */\nexport type McCheckboxClickAction = 'noop' | 'check' | 'check-indeterminate' | undefined;\n\n/**\n * Injection token that can be used to specify the checkbox click behavior.\n */\nexport const MC_CHECKBOX_CLICK_ACTION =\n    new InjectionToken<McCheckboxClickAction>('mc-checkbox-click-action');\n","import {\n    AfterViewInit,\n    Attribute,\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    ElementRef,\n    EventEmitter,\n    forwardRef,\n    Inject,\n    Input,\n    OnDestroy,\n    Optional,\n    Output,\n    ViewChild,\n    ViewEncapsulation\n} from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { FocusMonitor, FocusOrigin } from '@ptsecurity/cdk/a11y';\nimport {\n    CanColor, CanColorCtor,\n    CanDisable, CanDisableCtor,\n    HasTabIndex, HasTabIndexCtor,\n    mixinColor,\n    mixinDisabled,\n    mixinTabIndex,\n    toBoolean\n} from '@ptsecurity/mosaic/core';\n\nimport { MC_CHECKBOX_CLICK_ACTION, McCheckboxClickAction } from './checkbox-config';\n\n\n// Increasing integer for generating unique ids for checkbox components.\nlet nextUniqueId = 0;\n\n/**\n * Provider Expression that allows mc-checkbox to register as a ControlValueAccessor.\n * This allows it to support [(ngModel)].\n * @docs-private\n */\nexport const MC_CHECKBOX_CONTROL_VALUE_ACCESSOR: any = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => McCheckbox),\n    multi: true\n};\n\n/**\n * Represents the different states that require custom transitions between them.\n * @docs-private\n */\nexport enum TransitionCheckState {\n    /** The initial state of the component before any user interaction. */\n    Init,\n    /** The state representing the component when it's becoming checked. */\n    Checked,\n    /** The state representing the component when it's becoming unchecked. */\n    Unchecked,\n    /** The state representing the component when it's becoming indeterminate. */\n    Indeterminate\n}\n\n/** Change event object emitted by McCheckbox. */\nexport class McCheckboxChange {\n    /** The source McCheckbox of the event. */\n    source: McCheckbox;\n    /** The new `checked` value of the checkbox. */\n    checked: boolean;\n}\n\n// Boilerplate for applying mixins to McCheckbox.\n/** @docs-private */\nexport class McCheckboxBase {\n    constructor(public _elementRef: ElementRef) {\n    }\n}\n\nexport const _McCheckboxMixinBase:\n    HasTabIndexCtor &\n    CanColorCtor &\n    CanDisableCtor &\n    typeof McCheckboxBase =\n        mixinTabIndex(mixinColor(mixinDisabled(McCheckboxBase)));\n\n\n/**\n * A mosaic checkbox component. Supports all of the functionality of an HTML5 checkbox,\n * and exposes a similar API. A McCheckbox can be either checked, unchecked, indeterminate, or\n * disabled. Note that all additional accessibility attributes are taken care of by the component,\n * so there is no need to provide them yourself. However, if you want to omit a label and still\n * have the checkbox be accessible, you may supply an [aria-label] input.\n */\n@Component({\n    selector: 'mc-checkbox',\n    templateUrl: 'checkbox.html',\n    styleUrls: ['checkbox.css'],\n    exportAs: 'mcCheckbox',\n    host: {\n        class: 'mc-checkbox',\n        '[id]': 'id',\n        '[attr.id]': 'id',\n        '[class.mc-indeterminate]': 'indeterminate',\n        '[class.mc-checked]': 'checked',\n        '[class.mc-disabled]': 'disabled',\n        '[class.mc-checkbox-label-before]': 'labelPosition == \"before\"'\n    },\n    providers: [MC_CHECKBOX_CONTROL_VALUE_ACCESSOR],\n    inputs: ['color', 'tabIndex'],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class McCheckbox extends _McCheckboxMixinBase implements ControlValueAccessor,\n    AfterViewInit, OnDestroy, CanColor, CanDisable, HasTabIndex {\n\n    /**\n     * Attached to the aria-label attribute of the host element. In most cases, arial-labelledby will\n     * take precedence so this may be omitted.\n     */\n    @Input('aria-label') ariaLabel: string = '';\n\n    /**\n     * Users can specify the `aria-labelledby` attribute which will be forwarded to the input element\n     */\n    @Input('aria-labelledby') ariaLabelledby: string | null = null;\n\n    private _uniqueId: string = `mc-checkbox-${++nextUniqueId}`;\n\n    /** A unique id for the checkbox input. If none is supplied, it will be auto-generated. */\n    @Input() id: string = this._uniqueId;\n\n    /** Returns the unique id for the visual hidden input. */\n    get inputId(): string {\n        return `${this.id || this._uniqueId}-input`;\n    }\n\n    /** Whether the checkbox is required. */\n    @Input()\n    get required(): boolean {\n        return this._required;\n    }\n\n    set required(value: boolean) {\n        this._required = toBoolean(value);\n    }\n\n    private _required: boolean;\n\n    /** Whether the label should appear after or before the checkbox. Defaults to 'after' */\n    @Input() labelPosition: 'before' | 'after' = 'after';\n\n    /** Name value will be applied to the input element if present */\n    @Input() name: string | null = null;\n\n    /** Event emitted when the checkbox's `checked` value changes. */\n    @Output() readonly change: EventEmitter<McCheckboxChange> =\n        new EventEmitter<McCheckboxChange>();\n\n    /** Event emitted when the checkbox's `indeterminate` value changes. */\n    @Output() readonly indeterminateChange: EventEmitter<boolean> = new EventEmitter<boolean>();\n\n    /** The value attribute of the native input element */\n    @Input() value: string;\n\n    /** The native `<input type=\"checkbox\">` element */\n    @ViewChild('input') _inputElement: ElementRef;\n\n    /**\n     * Called when the checkbox is blurred. Needed to properly implement ControlValueAccessor.\n     * @docs-private\n     */\n    _onTouched: () => any = () => {\n    }\n\n    private _currentAnimationClass: string = '';\n\n    private _currentCheckState: TransitionCheckState = TransitionCheckState.Init;\n\n    private _controlValueAccessorChangeFn: (value: any) => void = () => {\n    }\n\n    constructor(elementRef: ElementRef,\n                private _changeDetectorRef: ChangeDetectorRef,\n                private _focusMonitor: FocusMonitor,\n                @Attribute('tabindex') tabIndex: string,\n                @Optional() @Inject(MC_CHECKBOX_CLICK_ACTION)\n                private _clickAction: McCheckboxClickAction) {\n        super(elementRef);\n\n        this.tabIndex = parseInt(tabIndex) || 0;\n    }\n\n    ngAfterViewInit() {\n        this._focusMonitor\n            .monitor(this._inputElement.nativeElement)\n            .subscribe((focusOrigin) => this._onInputFocusChange(focusOrigin));\n    }\n\n    ngOnDestroy() {\n        this._focusMonitor.stopMonitoring(this._inputElement.nativeElement);\n    }\n\n    /**\n     * Whether the checkbox is checked.\n     */\n    @Input()\n    get checked(): boolean {\n        return this._checked;\n    }\n\n    set checked(value: boolean) {\n        if (value != this.checked) {\n            this._checked = value;\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n\n    private _checked: boolean = false;\n\n    /**\n     * Whether the checkbox is disabled. This fully overrides the implementation provided by\n     * mixinDisabled, but the mixin is still required because mixinTabIndex requires it.\n     */\n    @Input()\n    get disabled() {\n        return this._disabled;\n    }\n\n    set disabled(value: any) {\n        if (value != this.disabled) {\n            this._disabled = value;\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n\n    private _disabled: boolean = false;\n\n    /**\n     * Whether the checkbox is indeterminate. This is also known as \"mixed\" mode and can be used to\n     * represent a checkbox with three states, e.g. a checkbox that represents a nested list of\n     * checkable items. Note that whenever checkbox is manually clicked, indeterminate is immediately\n     * set to false.\n     */\n    @Input()\n    get indeterminate(): boolean {\n        return this._indeterminate;\n    }\n\n    set indeterminate(value: boolean) {\n        const changed = value != this._indeterminate;\n        this._indeterminate = value;\n\n        if (changed) {\n            if (this._indeterminate) {\n                this._transitionCheckState(TransitionCheckState.Indeterminate);\n            } else {\n                this._transitionCheckState(\n                    this.checked ? TransitionCheckState.Checked : TransitionCheckState.Unchecked);\n            }\n            this.indeterminateChange.emit(this._indeterminate);\n        }\n    }\n\n    private _indeterminate: boolean = false;\n\n    /** Method being called whenever the label text changes. */\n    _onLabelTextChange() {\n        // This method is getting called whenever the label of the checkbox changes.\n        // Since the checkbox uses the OnPush strategy we need to notify it about the change\n        // that has been recognized by the cdkObserveContent directive.\n        this._changeDetectorRef.markForCheck();\n    }\n\n    // Implemented as part of ControlValueAccessor.\n    writeValue(value: any) {\n        this.checked = !!value;\n    }\n\n    // Implemented as part of ControlValueAccessor.\n    registerOnChange(fn: (value: any) => void) {\n        this._controlValueAccessorChangeFn = fn;\n    }\n\n    // Implemented as part of ControlValueAccessor.\n    registerOnTouched(fn: any) {\n        this._onTouched = fn;\n    }\n\n    // Implemented as part of ControlValueAccessor.\n    setDisabledState(isDisabled: boolean) {\n        this.disabled = isDisabled;\n    }\n\n    _getAriaChecked(): 'true' | 'false' | 'mixed' {\n        return this.checked ? 'true' : (this.indeterminate ? 'mixed' : 'false');\n    }\n\n    private _transitionCheckState(newState: TransitionCheckState) {\n        const oldState = this._currentCheckState;\n        const element: HTMLElement = this._elementRef.nativeElement;\n\n        if (oldState === newState) {\n            return;\n        }\n        if (this._currentAnimationClass.length > 0) {\n            element.classList.remove(this._currentAnimationClass);\n        }\n\n        this._currentCheckState = newState;\n\n        if (this._currentAnimationClass.length > 0) {\n            element.classList.add(this._currentAnimationClass);\n        }\n    }\n\n    private _emitChangeEvent() {\n        const event = new McCheckboxChange();\n        event.source = this;\n        event.checked = this.checked;\n\n        this._controlValueAccessorChangeFn(this.checked);\n        this.change.emit(event);\n    }\n\n    /** Function is called whenever the focus changes for the input element. */\n    private _onInputFocusChange(focusOrigin: FocusOrigin) {\n        if (focusOrigin) {\n            this._onTouched();\n        }\n    }\n\n    /** Toggles the `checked` state of the checkbox. */\n    toggle(): void {\n        this.checked = !this.checked;\n    }\n\n    /**\n     * Event handler for checkbox input element.\n     * Toggles checked state if element is not disabled.\n     * Do not toggle on (change) event since IE doesn't fire change event when\n     *   indeterminate checkbox is clicked.\n     * @param event\n     */\n    _onInputClick(event: Event) {\n        // We have to stop propagation for click events on the visual hidden input element.\n        // By default, when a user clicks on a label element, a generated click event will be\n        // dispatched on the associated input element. Since we are using a label element as our\n        // root container, the click event on the `checkbox` will be executed twice.\n        // The real click event will bubble up, and the generated click event also tries to bubble up.\n        // This will lead to multiple click events.\n        // Preventing bubbling for the second event will solve that issue.\n        event.stopPropagation();\n\n        // If resetIndeterminate is false, and the current state is indeterminate, do nothing on click\n        if (!this.disabled && this._clickAction !== 'noop') {\n            // When user manually click on the checkbox, `indeterminate` is set to false.\n            if (this.indeterminate && this._clickAction !== 'check') {\n\n                Promise.resolve().then(() => {\n                    this._indeterminate = false;\n                    this.indeterminateChange.emit(this._indeterminate);\n                });\n            }\n\n            this.toggle();\n            this._transitionCheckState(\n                this._checked ? TransitionCheckState.Checked : TransitionCheckState.Unchecked);\n\n            // Emit our custom change event if the native input emitted one.\n            // It is important to only emit it, if the native input triggered one, because\n            // we don't want to trigger a change event, when the `checked` variable changes for example.\n            this._emitChangeEvent();\n        } else if (!this.disabled && this._clickAction === 'noop') {\n            // Reset native input when clicked with noop. The native checkbox becomes checked after\n            // click, reset it to be align with `checked` value of `mc-checkbox`.\n            this._inputElement.nativeElement.checked = this.checked;\n            this._inputElement.nativeElement.indeterminate = this.indeterminate;\n        }\n    }\n\n    /** Focuses the checkbox. */\n    focus(): void {\n        this._focusMonitor.focusVia(this._inputElement.nativeElement, 'keyboard');\n    }\n\n    _onInteractionEvent(event: Event) {\n        // We always have to stop propagation on the change event.\n        // Otherwise the change event, from the input element, will bubble up and\n        // emit its event object to the `change` output.\n        event.stopPropagation();\n    }\n}\n","import {\n    Directive,\n    forwardRef,\n    Provider\n} from '@angular/core';\nimport {\n    CheckboxRequiredValidator,\n    NG_VALIDATORS\n} from '@angular/forms';\n\n\nexport const MC_CHECKBOX_REQUIRED_VALIDATOR: Provider = {\n    provide: NG_VALIDATORS,\n    useExisting: forwardRef(() => McCheckboxRequiredValidator),\n    multi: true\n};\n\n/**\n * Validator for Mosaic checkbox's required attribute in template-driven checkbox.\n * Current CheckboxRequiredValidator only work with `input type=checkbox` and does not\n * work with `mc-checkbox`.\n */\n@Directive({\n    selector: `mc-checkbox[required][formControlName],\n             mc-checkbox[required][formControl], mc-checkbox[required][ngModel]`,\n    providers: [MC_CHECKBOX_REQUIRED_VALIDATOR],\n    host: { '[attr.required]': 'required ? \"\" : null' }\n})\nexport class McCheckboxRequiredValidator extends CheckboxRequiredValidator {\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { McCheckbox } from './checkbox';\nimport { McCheckboxRequiredValidator } from './checkbox-required-validator';\n\n\n@NgModule({\n    imports: [CommonModule],\n    exports: [McCheckbox, McCheckboxRequiredValidator],\n    declarations: [McCheckbox, McCheckboxRequiredValidator]\n})\nexport class McCheckboxModule {\n}\n","import { ChangeDetectionStrategy, Component, Input, ViewEncapsulation } from '@angular/core';\nimport { coerceBooleanProperty } from '@ptsecurity/cdk/coercion';\n\n\n@Component({\n    selector: 'mc-divider',\n    host: {\n        class: 'mc-divider',\n        role: 'separator',\n        '[attr.aria-orientation]': 'vertical ? \"vertical\" : \"horizontal\"',\n        '[class.mc-divider-vertical]': 'vertical',\n        '[class.mc-divider-inset]': 'inset'\n    },\n    template: '',\n    styleUrls: ['divider.css'],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    preserveWhitespaces: false\n})\nexport class McDivider {\n    // Whether the divider is vertically aligned.\n    @Input()\n    get vertical(): boolean {\n        return this._vertical;\n    }\n\n    set vertical(value: boolean) {\n        this._vertical = coerceBooleanProperty(value);\n    }\n\n    private _vertical: boolean = false;\n\n    // Whether the divider is an inset divider.\n    @Input()\n    get inset(): boolean {\n        return this._inset;\n    }\n\n    set inset(value: boolean) {\n        this._inset = coerceBooleanProperty(value);\n    }\n\n    private _inset: boolean = false;\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { McDivider } from './divider.component';\n\n\n@NgModule({\n    imports: [CommonModule],\n    exports: [McDivider],\n    declarations: [McDivider]\n})\nexport class McDividerModule {\n}\n","import { DOCUMENT } from '@angular/common';\nimport {\n    Directive,\n    TemplateRef,\n    ComponentFactoryResolver,\n    ApplicationRef,\n    Injector,\n    ViewContainerRef,\n    Inject,\n    OnDestroy\n} from '@angular/core';\nimport { TemplatePortal, DomPortalOutlet } from '@ptsecurity/cdk/portal';\nimport { Subject } from 'rxjs';\n\n\n/**\n * Dropdown content that will be rendered lazily once the dropdown is opened.\n */\n@Directive({\n    selector: 'ng-template[mcDropdownContent]'\n})\nexport class McDropdownContent implements OnDestroy {\n\n    /** Emits when the dropdown content has been attached. */\n    _attached = new Subject<void>();\n    private _portal: TemplatePortal;\n    private _outlet: DomPortalOutlet;\n\n    constructor(\n        private _template: TemplateRef<any>,\n        private _componentFactoryResolver: ComponentFactoryResolver,\n        private _appRef: ApplicationRef,\n        private _injector: Injector,\n        private _viewContainerRef: ViewContainerRef,\n        @Inject(DOCUMENT) private _document: any) {}\n\n    /**\n     * Attaches the content with a particular context.\n     * @docs-private\n     */\n    attach(context: any = {}) {\n        if (!this._portal) {\n            this._portal = new TemplatePortal(this._template, this._viewContainerRef);\n        }\n\n        this.detach();\n\n        if (!this._outlet) {\n            this._outlet = new DomPortalOutlet(this._document.createElement('div'),\n                this._componentFactoryResolver, this._appRef, this._injector);\n        }\n\n        const element: HTMLElement = this._template.elementRef.nativeElement;\n\n        // Because we support opening the same dropdown from different triggers (which in turn have their\n        // own `OverlayRef` panel), we have to re-insert the host element every time, otherwise we\n        // risk it staying attached to a pane that's no longer in the DOM.\n        element.parentNode!.insertBefore(this._outlet.outletElement, element);\n        this._portal.attach(this._outlet, context);\n        this._attached.next();\n    }\n\n    /**\n     * Detaches the content.\n     * @docs-private\n     */\n    detach() {\n        if (this._portal.isAttached) {\n            this._portal.detach();\n        }\n    }\n\n    ngOnDestroy() {\n        if (this._outlet) {\n            this._outlet.dispose();\n        }\n    }\n}\n","import { EventEmitter, TemplateRef, InjectionToken } from '@angular/core';\nimport { FocusOrigin } from '@ptsecurity/cdk/a11y';\nimport { Direction } from '@ptsecurity/cdk/bidi';\n\nimport { McDropdownContent } from './dropdown-content';\nimport { DropdownPositionX, DropdownPositionY } from './dropdown-positions';\n\n\n/**\n * Injection token used to provide the parent dropdown to dropdown-specific components.\n * @docs-private\n */\nexport const MC_DROPDOWN_PANEL = new InjectionToken<McDropdownPanel>('MC_DROPDOWN_PANEL');\n\n/**\n * Interface for a custom dropdown panel that can be used with `mcDropdownTriggerFor`.\n * @docs-private\n */\n// tslint:disable-next-line:interface-name\nexport interface McDropdownPanel<T = any> {\n    xPosition: DropdownPositionX;\n    yPosition: DropdownPositionY;\n    overlapTrigger: boolean;\n    templateRef: TemplateRef<any>;\n    closed: EventEmitter<void | 'click' | 'keydown' | 'tab'>;\n    direction?: Direction;\n    lazyContent?: McDropdownContent;\n    backdropClass?: string;\n    hasBackdrop?: boolean;\n    focusFirstItem(origin?: FocusOrigin): void;\n    resetActiveItem(): void;\n    setPositionClasses?(x: DropdownPositionX, y: DropdownPositionY): void;\n    addItem?(item: T): void;\n    removeItem?(item: T): void;\n}\n","import { DOCUMENT } from '@angular/common';\nimport {\n    ChangeDetectionStrategy,\n    Component,\n    ElementRef,\n    OnDestroy,\n    ViewEncapsulation,\n    Inject,\n    Optional\n} from '@angular/core';\nimport { IFocusableOption, FocusMonitor, FocusOrigin } from '@ptsecurity/cdk/a11y';\nimport {\n    CanDisable, CanDisableCtor,\n    mixinDisabled\n} from '@ptsecurity/mosaic/core';\n\nimport { MC_DROPDOWN_PANEL, McDropdownPanel } from './dropdown-panel';\n\n\n// Boilerplate for applying mixins to McDropdownItem.\n/** @docs-private */\nexport class McDropdownItemBase {}\nexport const _McDropdownItemMixinBase: CanDisableCtor & typeof McDropdownItemBase =\n    mixinDisabled(McDropdownItemBase);\n\n/**\n * This directive is intended to be used inside an mc-dropdown tag.\n * It exists mostly to set the role attribute.\n */\n@Component({\n    selector: 'mc-dropdown-item, [mc-dropdown-item]',\n    exportAs: 'mcDropdownItem',\n    inputs: ['disabled'],\n    host: {\n        role: 'dropdown-item',\n        class: 'mc-dropdown__item',\n        '[attr.tabindex]': '_getTabIndex()',\n        '[attr.disabled]': 'disabled || null',\n        '(click)': '_checkDisabled($event)'\n    },\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n    template: `<ng-content></ng-content>`\n})\nexport class McDropdownItem extends _McDropdownItemMixinBase\n    implements IFocusableOption, CanDisable, OnDestroy {\n\n    private _document: Document;\n\n    constructor(\n        private _elementRef: ElementRef<HTMLElement>,\n        @Inject(DOCUMENT) document: any,\n        private _focusMonitor: FocusMonitor,\n        @Inject(MC_DROPDOWN_PANEL) @Optional() private _parentDropdownPanel?: McDropdownPanel<McDropdownItem>) {\n        super();\n\n        if (_focusMonitor) {\n            // Start monitoring the element so it gets the appropriate focused classes. We want\n            // to show the focus style for dropdown items only when the focus was not caused by a\n            // mouse or touch interaction.\n            _focusMonitor.monitor(this._elementRef.nativeElement, false);\n        }\n\n        if (_parentDropdownPanel && _parentDropdownPanel.addItem) {\n            _parentDropdownPanel.addItem(this);\n        }\n\n        this._document = document;\n    }\n\n    /** Focuses the dropdown item. */\n    focus(origin: FocusOrigin = 'program'): void {\n        if (this._focusMonitor) {\n            this._focusMonitor.focusVia(this._getHostElement(), origin);\n        } else {\n            this._getHostElement().focus();\n        }\n    }\n\n    ngOnDestroy() {\n        if (this._focusMonitor) {\n            this._focusMonitor.stopMonitoring(this._elementRef.nativeElement);\n        }\n\n        if (this._parentDropdownPanel && this._parentDropdownPanel.removeItem) {\n            this._parentDropdownPanel.removeItem(this);\n        }\n    }\n\n    /** Used to set the `tabindex`. */\n    _getTabIndex(): string {\n        return this.disabled ? '-1' : '0';\n    }\n\n    /** Returns the host DOM element. */\n    _getHostElement(): HTMLElement {\n        return this._elementRef.nativeElement;\n    }\n\n    /** Prevents the default element actions if it is disabled. */\n    _checkDisabled(event: Event): void {\n        if (this.disabled) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n    }\n\n    /** Gets the label to be used when determining whether the option should be focused. */\n    getLabel(): string {\n        const element: HTMLElement = this._elementRef.nativeElement;\n        // tslint:disable-next-line:no-magic-numbers\n        const textNodeType = this._document ? this._document.TEXT_NODE : 3;\n        let output = '';\n\n        if (element.childNodes) {\n            const length = element.childNodes.length;\n\n            // Go through all the top-level text nodes and extract their text.\n            // We skip anything that's not a text node to prevent the text from\n            // being thrown off by something like an icon.\n            for (let i = 0; i < length; i++) {\n                if (element.childNodes[i].nodeType === textNodeType) {\n                    output += element.childNodes[i].textContent;\n                }\n            }\n        }\n\n        return output.trim();\n    }\n}\n","import {\n    trigger,\n    state,\n    style,\n    animate,\n    transition,\n    query,\n    group,\n    AnimationTriggerMetadata\n} from '@angular/animations';\n\n\n/**\n * Animations used by the mc-dropdown component.\n * Animation duration and timing values are based on:\n * https://material.io/guidelines/components/menus.html#menus-usage\n * @docs-private\n */\nexport const mcDropdownAnimations: {\n    readonly transformDropdown: AnimationTriggerMetadata;\n    readonly fadeInItems: AnimationTriggerMetadata;\n} = {\n    /**\n     * This animation controls the dropdown panel's entry and exit from the page.\n     *\n     * When the dropdown panel is added to the DOM, it scales in and fades in its border.\n     *\n     * When the dropdown panel is removed from the DOM, it simply fades out after a brief\n     * delay to display the ripple.\n     */\n    transformDropdown: trigger('transformDropdown', [\n        state('void', style({\n            opacity: 0,\n            transform: 'scale(0.8)'\n        })),\n        transition('void => enter', group([\n            query('.mc-dropdown__content', animate('50ms linear', style({opacity: 1}))),\n            animate('50ms cubic-bezier(0, 0, 0.2, 1)', style({transform: 'scale(1)'}))\n        ])),\n        transition('* => void', animate('50ms 25ms linear', style({opacity: 0})))\n    ]),\n\n\n    /**\n     * This animation fades in the background color and content of the dropdown panel\n     * after its containing element is scaled in.\n     */\n    fadeInItems: trigger('fadeInItems', [\n        // now. Remove next time we do breaking changes.\n        state('showing', style({opacity: 1})),\n        transition('void => *', [\n            style({opacity: 0}),\n            animate('200ms 60ms cubic-bezier(0.55, 0, 0.55, 0.2)')\n        ])\n    ])\n};\n\nexport const fadeInItems = mcDropdownAnimations.fadeInItems;\n\nexport const transformDropdown = mcDropdownAnimations.transformDropdown;\n","import { AnimationEvent } from '@angular/animations';\nimport {\n    AfterContentInit,\n    ChangeDetectionStrategy,\n    Component,\n    ContentChild,\n    ContentChildren,\n    ElementRef,\n    EventEmitter,\n    Inject,\n    InjectionToken,\n    Input,\n    NgZone,\n    OnDestroy,\n    Output,\n    TemplateRef,\n    QueryList,\n    ViewChild,\n    ViewEncapsulation,\n    OnInit\n} from '@angular/core';\nimport { FocusKeyManager, FocusOrigin } from '@ptsecurity/cdk/a11y';\nimport { Direction } from '@ptsecurity/cdk/bidi';\nimport { coerceBooleanProperty } from '@ptsecurity/cdk/coercion';\nimport { ESCAPE, DOWN_ARROW, UP_ARROW } from '@ptsecurity/cdk/keycodes';\nimport { Subject, Subscription } from 'rxjs';\nimport { take } from 'rxjs/operators';\n\nimport { mcDropdownAnimations } from './dropdown-animations';\nimport { McDropdownContent } from './dropdown-content';\nimport { throwMcDropdownInvalidPositionX, throwMcDropdownInvalidPositionY } from './dropdown-errors';\nimport { McDropdownItem } from './dropdown-item';\nimport { MC_DROPDOWN_PANEL, McDropdownPanel } from './dropdown-panel';\nimport { DropdownPositionX, DropdownPositionY } from './dropdown-positions';\n\n\n/** Default `mc-dropdown` options that can be overridden. */\n// tslint:disable-next-line:interface-name\nexport interface McDropdownDefaultOptions {\n    /** The x-axis position of the dropdown. */\n    xPosition: DropdownPositionX;\n\n    /** The y-axis position of the dropdown. */\n    yPosition: DropdownPositionY;\n\n    /** Whether the dropdown should overlap the dropdown trigger. */\n    overlapTrigger: boolean;\n\n    /** Class to be applied to the dropdown's backdrop. */\n    backdropClass: string;\n\n    /** Whether the dropdown has a backdrop. */\n    hasBackdrop?: boolean;\n}\n\n/** Injection token to be used to override the default options for `mc-dropdown`. */\nexport const MC_DROPDOWN_DEFAULT_OPTIONS =\n    new InjectionToken<McDropdownDefaultOptions>('mc-dropdown-default-options', {\n        providedIn: 'root',\n        factory: MC_DROPDOWN_DEFAULT_OPTIONS_FACTORY\n    });\n\n/** @docs-private */\nexport function MC_DROPDOWN_DEFAULT_OPTIONS_FACTORY(): McDropdownDefaultOptions {\n    return {\n        overlapTrigger: false,\n        xPosition: 'after',\n        yPosition: 'below',\n        backdropClass: 'cdk-overlay-transparent-backdrop'\n    };\n}\n\n@Component({\n    selector: 'mc-dropdown',\n    templateUrl: 'dropdown.html',\n    styleUrls: ['dropdown.css'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n    exportAs: 'mcDropdown',\n    animations: [\n        mcDropdownAnimations.transformDropdown,\n        mcDropdownAnimations.fadeInItems\n    ],\n    providers: [\n        { provide: MC_DROPDOWN_PANEL, useExisting: McDropdown }\n    ]\n})\nexport class McDropdown implements AfterContentInit, McDropdownPanel<McDropdownItem>, OnInit, OnDestroy {\n\n    /** Position of the dropdown in the X axis. */\n    @Input()\n    get xPosition(): DropdownPositionX { return this._xPosition; }\n    set xPosition(value: DropdownPositionX) {\n        if (value !== 'before' && value !== 'after') {\n            throwMcDropdownInvalidPositionX();\n        }\n\n        this._xPosition = value;\n        this.setPositionClasses();\n    }\n\n    /** Position of the dropdown in the Y axis. */\n    @Input()\n    get yPosition(): DropdownPositionY { return this._yPosition; }\n    set yPosition(value: DropdownPositionY) {\n        if (value !== 'above' && value !== 'below') {\n            throwMcDropdownInvalidPositionY();\n        }\n\n        this._yPosition = value;\n        this.setPositionClasses();\n    }\n\n    /** Whether the dropdown should overlap its trigger. */\n    @Input()\n    get overlapTrigger(): boolean { return this._overlapTrigger; }\n    set overlapTrigger(value: boolean) {\n        this._overlapTrigger = coerceBooleanProperty(value);\n    }\n\n    /** Whether the dropdown has a backdrop. */\n    @Input()\n    get hasBackdrop(): boolean | undefined { return this._hasBackdrop; }\n    set hasBackdrop(value: boolean | undefined) {\n        this._hasBackdrop = coerceBooleanProperty(value);\n    }\n\n    /**\n     * This method takes classes set on the host mc-dropdown element and applies them on the\n     * dropdown template that displays in the overlay container.  Otherwise, it's difficult\n     * to style the containing dropdown from outside the component.\n     * @param classes list of class names\n     */\n    @Input('class')\n    set panelClass(classes: string) {\n        if (classes && classes.length) {\n            this._classList = classes.split(' ').reduce((obj: any, className: string) => {\n                obj[className] = true;\n\n                return obj;\n            }, {});\n\n            this._elementRef.nativeElement.className = '';\n        }\n    }\n\n    /** Config object to be passed into the dropdown's ngClass */\n    _classList: {[key: string]: boolean} = {};\n\n    /** Current state of the panel animation. */\n    _panelAnimationState: 'void' | 'enter' = 'void';\n\n    /** Emits whenever an animation on the dropdown completes. */\n    _animationDone = new Subject<AnimationEvent>();\n\n    /** Whether the dropdown is animating. */\n    _isAnimating: boolean;\n\n    /** Layout direction of the dropdown. */\n    direction: Direction;\n\n    /** Class to be added to the backdrop element. */\n    @Input() backdropClass: string = this._defaultOptions.backdropClass;\n\n    /** @docs-private */\n    @ViewChild(TemplateRef) templateRef: TemplateRef<any>;\n\n    /**\n     * List of the items inside of a dropdown.\n     */\n    @ContentChildren(McDropdownItem) items: QueryList<McDropdownItem>;\n\n    /**\n     * Dropdown content that will be rendered lazily.\n     * @docs-private\n     */\n    @ContentChild(McDropdownContent) lazyContent: McDropdownContent;\n\n    /** Event emitted when the dropdown is closed. */\n    @Output() readonly closed: EventEmitter<void | 'click' | 'keydown' | 'tab'> =\n        new EventEmitter<void | 'click' | 'keydown' | 'tab'>();\n\n    private _keyManager: FocusKeyManager<McDropdownItem>;\n    private _xPosition: DropdownPositionX = this._defaultOptions.xPosition;\n    private _yPosition: DropdownPositionY = this._defaultOptions.yPosition;\n\n    /** Dropdown items inside the current dropdown. */\n    private _items: McDropdownItem[] = [];\n\n    /** Emits whenever the amount of dropdown items changes. */\n    private _itemChanges = new Subject<McDropdownItem[]>();\n\n    /** Subscription to tab events on the dropdown panel */\n    private _tabSubscription = Subscription.EMPTY;\n    private _overlapTrigger: boolean = this._defaultOptions.overlapTrigger;\n    private _hasBackdrop: boolean | undefined = this._defaultOptions.hasBackdrop;\n\n    constructor(\n        private _elementRef: ElementRef<HTMLElement>,\n        private _ngZone: NgZone,\n        @Inject(MC_DROPDOWN_DEFAULT_OPTIONS) private _defaultOptions: McDropdownDefaultOptions) { }\n\n    ngOnInit() {\n        this.setPositionClasses();\n    }\n\n    ngAfterContentInit() {\n        this._keyManager = new FocusKeyManager<McDropdownItem>(this.items).withWrap().withTypeAhead();\n        this._tabSubscription = this._keyManager.tabOut.subscribe(() => this.closed.emit('tab'));\n    }\n\n    ngOnDestroy() {\n        this._tabSubscription.unsubscribe();\n        this.closed.complete();\n    }\n\n    /** Handle a keyboard event from the dropdown, delegating to the appropriate action. */\n    _handleKeydown(event: KeyboardEvent) {\n\n        // tslint:disable-next-line:deprecation\n        switch (event.keyCode) {\n            case ESCAPE:\n                this.closed.emit('keydown');\n                break;\n            case UP_ARROW:\n            case DOWN_ARROW:\n                this._keyManager.setFocusOrigin('keyboard');\n                this._keyManager.onKeydown(event);\n                break;\n            default:\n                // todo зачем обрабатывать лишние события ?\n                this._keyManager.onKeydown(event);\n        }\n    }\n\n    /**\n     * Focus the first item in the dropdown.\n     * @param origin Action from which the focus originated. Used to set the correct styling.\n     */\n    focusFirstItem(origin: FocusOrigin = 'program'): void {\n        // When the content is rendered lazily, it takes a bit before the items are inside the DOM.\n        if (this.lazyContent) {\n            this._ngZone.onStable.asObservable()\n                .pipe(take(1))\n                .subscribe(() => this._keyManager.setFocusOrigin(origin).setFirstItemActive());\n        } else {\n            this._keyManager.setFocusOrigin(origin).setFirstItemActive();\n        }\n    }\n\n    /**\n     * Resets the active item in the dropdown. This is used when the dropdown is opened, allowing\n     * the user to start from the first option when pressing the down arrow.\n     */\n    resetActiveItem() {\n        this._keyManager.setActiveItem(-1);\n    }\n\n    /**\n     * Registers a dropdown item with the dropdown.\n     * @docs-private\n     */\n    addItem(item: McDropdownItem) {\n        // We register the items through this method, rather than picking them up through\n        // `ContentChildren`, because we need the items to be picked up by their closest\n        // `mc-dropdown` ancestor. If we used `@ContentChildren(McDropdownItem, {descendants: true})`,\n        // all descendant items will bleed into the top-level dropdown in the case where the consumer\n        // has `mc-dropdown` instances nested inside each other.\n        if (this._items.indexOf(item) === -1) {\n            this._items.push(item);\n            this._itemChanges.next(this._items);\n        }\n    }\n\n    /**\n     * Removes an item from the dropdown.\n     * @docs-private\n     */\n    removeItem(item: McDropdownItem) {\n        const index = this._items.indexOf(item);\n\n        if (this._items.indexOf(item) > -1) {\n            this._items.splice(index, 1);\n            this._itemChanges.next(this._items);\n        }\n    }\n\n    /**\n     * Adds classes to the dropdown panel based on its position. Can be used by\n     * consumers to add specific styling based on the position.\n     * @param posX Position of the dropdown along the x axis.\n     * @param posY Position of the dropdown along the y axis.\n     * @docs-private\n     */\n    setPositionClasses(posX: DropdownPositionX = this.xPosition, posY: DropdownPositionY = this.yPosition) {\n        const classes = this._classList;\n        classes['mc-dropdown-before'] = posX === 'before';\n        classes['mc-dropdown-after'] = posX === 'after';\n        classes['mc-dropdown-above'] = posY === 'above';\n        classes['mc-dropdown-below'] = posY === 'below';\n    }\n\n    /** Starts the enter animation. */\n    _startAnimation() {\n        this._panelAnimationState = 'enter';\n    }\n\n    /** Resets the panel animation to its initial state. */\n    _resetAnimation() {\n        this._panelAnimationState = 'void';\n    }\n\n    /** Callback that is invoked when the panel animation completes. */\n    _onAnimationDone(event: AnimationEvent) {\n        this._animationDone.next(event);\n        this._isAnimating = false;\n\n        // Scroll the content element to the top once the animation is done. This is necessary, because\n        // we move focus to the first item while it's still being animated, which can throw the browser\n        // off when it determines the scroll position. Alternatively we can move focus when the\n        // animation is done, however moving focus asynchronously will interrupt screen readers\n        // which are in the process of reading out the dropdown already. We take the `element` from\n        // the `event` since we can't use a `ViewChild` to access the pane.\n        if (event.toState === 'enter' && this._keyManager.activeItemIndex === 0) {\n            event.element.scrollTop = 0;\n        }\n    }\n}\n","import {\n    AfterContentInit,\n    Directive,\n    ElementRef,\n    EventEmitter,\n    Inject,\n    InjectionToken,\n    Input,\n    OnDestroy, OnInit,\n    Optional,\n    Output,\n    ViewContainerRef\n} from '@angular/core';\nimport { FocusMonitor, FocusOrigin } from '@ptsecurity/cdk/a11y';\nimport { Direction, Directionality } from '@ptsecurity/cdk/bidi';\nimport {\n    FlexibleConnectedPositionStrategy,\n    HorizontalConnectionPos,\n    Overlay,\n    OverlayConfig,\n    OverlayRef,\n    VerticalConnectionPos,\n    IScrollStrategy\n} from '@ptsecurity/cdk/overlay';\nimport { TemplatePortal } from '@ptsecurity/cdk/portal';\nimport { merge, Subscription } from 'rxjs';\nimport { filter, take, takeUntil } from 'rxjs/operators';\n\nimport { throwMcDropdownMissingError } from './dropdown-errors';\nimport { McDropdownPanel } from './dropdown-panel';\nimport { McDropdown } from './dropdown.component';\n\n\n/** Injection token that determines the scroll handling while the dropdown is open. */\nexport const MC_DROPDOWN_SCROLL_STRATEGY =\n    new InjectionToken<() => IScrollStrategy>('mc-dropdown-scroll-strategy');\n\n/** @docs-private */\nexport function MC_DROPDOWN_SCROLL_STRATEGY_FACTORY(overlay: Overlay): () => IScrollStrategy {\n    return () => overlay.scrollStrategies.reposition();\n}\n\n/** @docs-private */\nexport const MC_DROPDOWN_SCROLL_STRATEGY_FACTORY_PROVIDER = {\n    provide: MC_DROPDOWN_SCROLL_STRATEGY,\n    deps: [Overlay],\n    useFactory: MC_DROPDOWN_SCROLL_STRATEGY_FACTORY\n};\n\n/**\n * This directive is intended to be used in conjunction with an mc-dropdown tag.  It is\n * responsible for toggling the display of the provided dropdown instance.\n */\n@Directive({\n    selector: `[mcDropdownTriggerFor]`,\n    host: {\n        '(touchstart)': '_openedBy = \"touch\"',\n        '(click)': 'toggle()'\n    },\n    exportAs: 'mcDropdownTrigger'\n})\nexport class McDropdownTrigger implements OnInit, AfterContentInit, OnDestroy {\n\n    /** Whether the dropdown is open. */\n    get opened(): boolean {\n        return this._opened;\n    }\n\n    /** The text direction of the containing app. */\n    get dir(): Direction {\n        return this._dir && this._dir.value === 'rtl' ? 'rtl' : 'ltr';\n    }\n\n    // Tracking input type is necessary so it's possible to only auto-focus\n    // the first item of the list when the dropdown is opened via the keyboard\n    _openedBy: 'mouse' | 'touch' | null = null;\n\n    /** References the dropdown instance that the trigger is associated with. */\n    @Input('mcDropdownTriggerFor') dropdown: McDropdownPanel;\n\n    /** Data to be passed along to any lazily-rendered content. */\n    @Input('mcDropdownTriggerData') data: any;\n\n    /** Event emitted when the associated dropdown is opened. */\n    @Output() readonly dropdownOpened: EventEmitter<void> = new EventEmitter<void>();\n\n    /** Event emitted when the associated dropdown is closed. */\n    @Output() readonly dropdownClosed: EventEmitter<void> = new EventEmitter<void>();\n\n    private _portal: TemplatePortal;\n    private _overlayRef: OverlayRef | null = null;\n    private _opened: boolean = false;\n    private _closeSubscription = Subscription.EMPTY;\n    private _hoverSubscription = Subscription.EMPTY;\n\n    constructor(private _overlay: Overlay,\n                private _element: ElementRef<HTMLElement>,\n                private _viewContainerRef: ViewContainerRef,\n                @Inject(MC_DROPDOWN_SCROLL_STRATEGY) private _scrollStrategy: any,\n                @Optional() private _dir: Directionality,\n                private _focusMonitor?: FocusMonitor) {}\n\n    ngOnInit(): void {\n        this.dropdown.closed = this.dropdown.closed || new EventEmitter<void | 'click' | 'keydown' | 'tab'>();\n    }\n\n    ngAfterContentInit() {\n        this._check();\n\n        this.dropdown.closed.asObservable().subscribe(() => {\n            this._destroy();\n        });\n    }\n\n    ngOnDestroy() {\n        if (this._overlayRef) {\n            this._overlayRef.dispose();\n            this._overlayRef = null;\n        }\n\n        this._cleanUpSubscriptions();\n    }\n\n    /** Toggles the dropdown between the open and closed states. */\n    toggle(): void {\n        // tslint:disable-next-line:no-void-expression\n        return this._opened ? this.close() : this.open();\n    }\n\n    /** Opens the dropdown. */\n    open(): void {\n        if (this._opened) {\n            return;\n        }\n\n        this._check();\n\n        const overlayRef = this._createOverlay();\n        this._setPosition(overlayRef.getConfig().positionStrategy as FlexibleConnectedPositionStrategy);\n        overlayRef.attach(this._portal);\n\n        if (this.dropdown.lazyContent) {\n            this.dropdown.lazyContent.attach(this.data);\n        }\n\n        this._closeSubscription = this._closingActions().subscribe(() => this.close());\n        this._init();\n\n        if (this.dropdown instanceof McDropdown) {\n            this.dropdown._startAnimation();\n        }\n    }\n\n    /** Closes the dropdown. */\n    close(): void {\n        this.dropdown.closed.emit();\n    }\n\n    /**\n     * Focuses the dropdown trigger.\n     * @param origin Source of the dropdown trigger's focus.\n     */\n    focus(origin: FocusOrigin = 'program') {\n        if (this._focusMonitor) {\n            this._focusMonitor.focusVia(this._element.nativeElement, origin);\n        } else {\n            this._element.nativeElement.focus();\n        }\n    }\n\n    /** Closes the dropdown and does the necessary cleanup. */\n    private _destroy() {\n        if (!this._overlayRef || !this.opened) {\n            return;\n        }\n\n        const dropdown = this.dropdown;\n\n        this._closeSubscription.unsubscribe();\n        this._overlayRef.detach();\n\n        if (dropdown instanceof McDropdown) {\n            dropdown._resetAnimation();\n\n            if (dropdown.lazyContent) {\n                // Wait for the exit animation to finish before detaching the content.\n                dropdown._animationDone\n                    .pipe(\n                        filter((event) => event.toState === 'void'),\n                        take(1),\n                        // Interrupt if the content got re-attached.\n                        takeUntil(dropdown.lazyContent._attached)\n                    )\n                    .subscribe(() => dropdown.lazyContent.detach(), undefined, () => {\n                        // No matter whether the content got re-attached, reset the dropdown.\n                        this._reset();\n                    });\n            } else {\n                this._reset();\n            }\n        } else {\n            this._reset();\n\n            if (dropdown.lazyContent) {\n                dropdown.lazyContent.detach();\n            }\n        }\n    }\n\n    /**\n     * This method sets the dropdown state to open and focuses the first item if\n     * the dropdown was opened via the keyboard.\n     */\n    private _init(): void {\n        this.dropdown.direction = this.dir;\n        this._setIsOpened(true);\n        this.dropdown.focusFirstItem(this._openedBy || 'program');\n    }\n\n    /**\n     * This method resets the dropdown when it's closed, most importantly restoring\n     * focus to the dropdown trigger if the dropdown was opened via the keyboard.\n     */\n    private _reset(): void {\n        this._setIsOpened(false);\n\n        // We should reset focus if the user is navigating using a keyboard or\n        // if we have a top-level trigger which might cause focus to be lost\n        // when clicking on the backdrop.\n        if (!this._openedBy) {\n            // Note that the focus style will show up both for `program` and\n            // `keyboard` so we don't have to specify which one it is.\n            this.focus();\n        } else {\n            this.focus(this._openedBy);\n        }\n\n        this._openedBy = null;\n    }\n\n    // set state rather than toggle to support triggers sharing a dropdown\n    private _setIsOpened(isOpen: boolean): void {\n        this._opened = isOpen;\n        // tslint:disable-next-line:no-void-expression\n        this._opened ? this.dropdownOpened.emit() : this.dropdownClosed.emit();\n    }\n\n    /**\n     * This method checks that a valid instance of Dropdown has been passed into\n     * mcDropdownTriggerFor. If not, an exception is thrown.\n     */\n    private _check() {\n        if (!this.dropdown) {\n            throwMcDropdownMissingError();\n        }\n    }\n\n    /**\n     * This method creates the overlay from the provided dropdown's template and saves its\n     * OverlayRef so that it can be attached to the DOM when open is called.\n     */\n    private _createOverlay(): OverlayRef {\n        if (!this._overlayRef) {\n            this._portal = new TemplatePortal(this.dropdown.templateRef, this._viewContainerRef);\n            const config = this._getOverlayConfig();\n            this._subscribeToPositions(config.positionStrategy as FlexibleConnectedPositionStrategy);\n            this._overlayRef = this._overlay.create(config);\n\n            // Consume the `keydownEvents` in order to prevent them from going to another overlay.\n            // Ideally we'd also have our keyboard event logic in here, however doing so will\n            // break anybody that may have implemented the `McDropdownPanel` themselves.\n            this._overlayRef.keydownEvents().subscribe();\n        }\n\n        return this._overlayRef;\n    }\n\n    /**\n     * This method builds the configuration object needed to create the overlay, the OverlayState.\n     * @returns OverlayConfig\n     */\n    private _getOverlayConfig(): OverlayConfig {\n        return new OverlayConfig({\n            positionStrategy: this._overlay.position()\n                .flexibleConnectedTo(this._element)\n                .withLockedPosition()\n                .withTransformOriginOn('.mc-dropdown__panel'),\n            hasBackdrop: this.dropdown.hasBackdrop === null || this.dropdown.hasBackdrop === undefined\n                ? true\n                : this.dropdown.hasBackdrop,\n            backdropClass: this.dropdown.backdropClass || 'cdk-overlay-transparent-backdrop',\n            scrollStrategy: this._scrollStrategy(),\n            direction: this._dir\n        });\n    }\n\n    /**\n     * Listens to changes in the position of the overlay and sets the correct classes\n     * on the dropdown based on the new position. This ensures the animation origin is always\n     * correct, even if a fallback position is used for the overlay.\n     */\n    private _subscribeToPositions(position: FlexibleConnectedPositionStrategy): void {\n        if (this.dropdown.setPositionClasses) {\n            // todo possibly we should not recompute positions there\n            /*position.positionChanges.subscribe((change) => {\n                const posX: DropdownPositionX = change.connectionPair.overlayX === 'start' ? 'after' : 'before';\n                const posY: DropdownPositionY = change.connectionPair.overlayY === 'top' ? 'below' : 'above';\n\n                this.dropdown.setPositionClasses!(posX, posY);\n            });*/\n            position.positionChanges.subscribe(() => {\n                this.dropdown.setPositionClasses!(this.dropdown.xPosition, this.dropdown.yPosition);\n            });\n        }\n    }\n\n    /**\n     * Sets the appropriate positions on a position strategy\n     * so the overlay connects with the trigger correctly.\n     * @param positionStrategy Strategy whose position to update.\n     */\n    private _setPosition(positionStrategy: FlexibleConnectedPositionStrategy) {\n        const [originX, originFallbackX]: HorizontalConnectionPos[] =\n            this.dropdown.xPosition === 'before' ? ['end', 'start'] : ['start', 'end'];\n\n        const [overlayY, overlayFallbackY]: VerticalConnectionPos[] =\n            this.dropdown.yPosition === 'above' ? ['bottom', 'top'] : ['top', 'bottom'];\n\n        let [originY, originFallbackY] = [overlayY, overlayFallbackY];\n        const [overlayX, overlayFallbackX] = [originX, originFallbackX];\n        const offsetY = 0;\n\n        if (!this.dropdown.overlapTrigger) {\n            originY = overlayY === 'top' ? 'bottom' : 'top';\n            originFallbackY = overlayFallbackY === 'top' ? 'bottom' : 'top';\n        }\n\n        positionStrategy.withPositions([\n            {originX, originY, overlayX, overlayY, offsetY},\n            {originX: originFallbackX, originY, overlayX: overlayFallbackX, overlayY, offsetY},\n            {\n                originX,\n                originY: originFallbackY,\n                overlayX,\n                overlayY: overlayFallbackY,\n                offsetY: -offsetY\n            },\n            {\n                originX: originFallbackX,\n                originY: originFallbackY,\n                overlayX: overlayFallbackX,\n                overlayY: overlayFallbackY,\n                offsetY: -offsetY\n            }\n        ]);\n    }\n\n    /** Cleans up the active subscriptions. */\n    private _cleanUpSubscriptions(): void {\n        this._closeSubscription.unsubscribe();\n        this._hoverSubscription.unsubscribe();\n    }\n\n    /** Returns a stream that emits whenever an action that should close the dropdown occurs. */\n    private _closingActions() {\n        const backdrop = this._overlayRef!.backdropClick();\n        const detachments = this._overlayRef!.detachments();\n\n        return merge(backdrop, detachments);\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { OverlayModule } from '@ptsecurity/cdk/overlay';\n\nimport { McDropdownContent } from './dropdown-content';\nimport { McDropdownItem } from './dropdown-item';\nimport { MC_DROPDOWN_SCROLL_STRATEGY_FACTORY_PROVIDER, McDropdownTrigger } from './dropdown-trigger';\nimport { McDropdown } from './dropdown.component';\n\n\n@NgModule({\n    imports: [\n        CommonModule,\n        OverlayModule\n    ],\n    exports: [McDropdown, McDropdownItem, McDropdownTrigger, McDropdownContent],\n    declarations: [McDropdown, McDropdownItem, McDropdownTrigger, McDropdownContent],\n    providers: [MC_DROPDOWN_SCROLL_STRATEGY_FACTORY_PROVIDER]\n})\nexport class McDropdownModule {}\n","import { Component } from '@angular/core';\n\n\n@Component({\n    selector: 'mc-cleaner',\n    template: '<i class=\"mc-icon_light\" mc-icon=\"mc-close-M_16\" color=\"second\"></i>'\n})\nexport class McCleaner {}\n","import { NgControl } from '@angular/forms';\nimport { Observable } from 'rxjs';\n\n\n/** An interface which allows a control to work inside of a `MсFormField`. */\nexport abstract class McFormFieldControl<T> {\n    /** The value of the control. */\n    value: T | null;\n\n    /**\n     * Stream that emits whenever the state of the control changes such that the parent `MсFormField`\n     * needs to run change detection.\n     */\n    readonly stateChanges: Observable<void>;\n\n    /** The element ID for this control. */\n    readonly id: string;\n\n    /** The placeholder for this control. */\n    readonly placeholder: string;\n\n    /** Gets the NgControl for this control. */\n    readonly ngControl: NgControl | null;\n\n    /** Whether the control is focused. */\n    readonly focused: boolean;\n\n    /** Whether the control is empty. */\n    readonly empty: boolean;\n\n    /** Whether the control is required. */\n    readonly required: boolean;\n\n    /** Whether the control is disabled. */\n    readonly disabled: boolean;\n\n    /** Whether the control is in an error state. */\n    readonly errorState: boolean;\n\n    /**\n     * An optional name for the control type that can be used to distinguish `mc-form-field` elements\n     * based on their control type. The form field will add a class,\n     * `mc-form-field-type-{{controlType}}` to its root element.\n     */\n    readonly controlType?: string;\n\n    /** Handles a click on the control's container. */\n    abstract onContainerClick(event: MouseEvent): void;\n}\n","import { Observable } from 'rxjs';\n\n\n/** An interface which allows a control to work inside of a `MсFormField`. */\nexport abstract class McFormFieldNumberControl<T> {\n    /** The value of the control. */\n    value: T | null;\n\n    /**\n     * Stream that emits whenever the state of the control changes such that the parent `MсFormField`\n     * needs to run change detection.\n     */\n    readonly stateChanges: Observable<void>;\n\n    /** the number step */\n    step: number;\n\n    /** the number big step */\n    bigStep: number;\n\n    /** Whether the control is focused. */\n    readonly focused: boolean;\n\n    /** Handles step up and down */\n    abstract stepUp(step: number): void;\n\n    abstract stepDown(step: number): void;\n}\n","import { Directive, Input } from '@angular/core';\n\n\nlet nextUniqueId = 0;\n\n@Directive({\n    selector: 'mc-hint',\n    host: {\n        class: 'mc-hint',\n        '[attr.id]': 'id'\n    }\n})\nexport class McHint {\n    @Input() id: string = `mc-hint-${nextUniqueId++}`;\n}\n","import { Directive } from '@angular/core';\n\n\n@Directive({\n    selector: '[mcPrefix]'\n})\nexport class McPrefix {\n}\n","import { Component, EventEmitter, Output } from '@angular/core';\n\n\n@Component({\n    selector: 'mc-stepper',\n    template: `\n        <i class=\"mc mc-icon mc-icon_light mc-second mc-stepper-step-up mc-angle-L_16\"\n           (mousedown)=\"onStepUp($event)\">\n        </i>\n        <i class=\"mc mc-icon mc-icon_light mc-second mc-stepper-step-down mc-angle-L_16\"\n           (mousedown)=\"onStepDown($event)\">\n        </i>\n    `\n})\nexport class McStepper {\n    @Output()\n    readonly stepUp: EventEmitter<void> = new EventEmitter<void>();\n    @Output()\n    readonly stepDown: EventEmitter<void> = new EventEmitter<void>();\n\n    onStepUp($event: MouseEvent) {\n        this.stepUp.emit();\n        $event.preventDefault();\n    }\n\n    onStepDown($event: MouseEvent) {\n        this.stepDown.emit();\n        $event.preventDefault();\n    }\n}\n","import { Directive } from '@angular/core';\n\n\n@Directive({\n    selector: '[mcSuffix]'\n})\nexport class McSuffix {\n}\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","\nexport function isBoolean(val: any): val is boolean { return typeof val === 'boolean'; }\n\nexport function toBoolean(value: any): boolean {\n    return value != null && `${value}` !== 'false';\n}\n","import { NgModule, InjectionToken, Optional, Inject, isDevMode } from '@angular/core';\nimport { BidiModule } from '@ptsecurity/cdk/bidi';\n\n\n// Injection token that configures whether the Mosaic sanity checks are enabled.\nexport const MC_SANITY_CHECKS = new InjectionToken<boolean>('mc-sanity-checks', {\n    providedIn: 'root',\n    factory: MC_SANITY_CHECKS_FACTORY\n});\n\nexport function MC_SANITY_CHECKS_FACTORY(): boolean {\n    return true;\n}\n\n/**\n * Module that captures anything that should be loaded and/or run for *all* Mosaic\n * components. This includes Bidi, etc.\n *\n * This module should be imported to each top-level component module (e.g., McTabsModule).\n */\n@NgModule({\n    imports: [ BidiModule ],\n    exports: [ BidiModule ]\n})\nexport class McCommonModule {\n    // Whether we've done the global sanity checks (e.g. a theme is loaded, there is a doctype).\n    private _hasDoneGlobalChecks = false;\n\n    // Reference to the global `document` object.\n    private _document = typeof document === 'object' && document ? document : null;\n\n    // Reference to the global 'window' object.\n    private _window = typeof window === 'object' && window ? window : null;\n\n    constructor(@Optional() @Inject(MC_SANITY_CHECKS) private _sanityChecksEnabled: boolean) {\n        if (this._areChecksEnabled() && !this._hasDoneGlobalChecks) {\n            this._checkDoctypeIsDefined();\n            this._checkThemeIsPresent();\n            this._hasDoneGlobalChecks = true;\n        }\n    }\n\n    // Whether any sanity checks are enabled\n    private _areChecksEnabled(): boolean {\n        return this._sanityChecksEnabled && isDevMode() && !this._isTestEnv();\n    }\n\n    // Whether the code is running in tests.\n    private _isTestEnv() {\n        // tslint:disable-next-line\n        return this._window && (this._window['__karma__'] || this._window['jasmine']);\n    }\n\n    private _checkDoctypeIsDefined(): void {\n        if (this._document && !this._document.doctype) {\n            console.warn(\n                'Current document does not have a doctype. This may cause ' +\n                'some Mosaic components not to behave as expected.'\n            );\n        }\n    }\n\n    private _checkThemeIsPresent(): void {\n        if (this._document && typeof getComputedStyle === 'function') {\n            const testElement = this._document.createElement('div');\n\n            testElement.classList.add('mc-theme-loaded-marker');\n            this._document.body.appendChild(testElement);\n\n            const computedStyle = getComputedStyle(testElement);\n\n            // In some situations, the computed style of the test element can be null. For example in\n            // Firefox, the computed style is null if an application is running inside of a hidden iframe.\n            // See: https://bugzilla.mozilla.org/show_bug.cgi?id=548397\n            if (computedStyle && computedStyle.display !== 'none') {\n                console.warn(\n                    'Could not find Mosaic core theme. Most Mosaic ' +\n                    'components may not work as expected. For more info refer ' +\n                    'to the theming guide: link there'\n                );\n            }\n\n            this._document.body.removeChild(testElement);\n        }\n    }\n}\n","import { coerceBooleanProperty } from '@ptsecurity/cdk/coercion';\n\nimport { Constructor } from './constructor';\n\n\nexport interface CanDisable {\n    disabled: boolean;\n}\n\n/** @docs-private */\nexport type CanDisableCtor = Constructor<CanDisable>;\n\n// Mixin to augment a directive with a `disabled` property.\nexport function mixinDisabled<T extends Constructor<{}>>(base: T): CanDisableCtor & T {\n    return class extends base {\n        private _disabled: boolean = false;\n\n        get disabled() {\n            return this._disabled;\n        }\n\n        set disabled(value: any) {\n            this._disabled = coerceBooleanProperty(value);\n        }\n\n        constructor(...args: any[]) {\n            // tslint:disable-next-line\n            super(...args);\n        }\n    };\n}\n","import { ElementRef } from '@angular/core';\n\nimport { Constructor } from './constructor';\n\n\nexport interface CanColor {\n    color: ThemePalette;\n}\n\n/** @docs-private */\nexport type CanColorCtor = Constructor<CanColor>;\n\nexport interface HasElementRef {\n    _elementRef: ElementRef;\n}\n\nexport enum ThemePalette {\n    Primary = 'primary',\n    Second = 'second',\n    Error = 'error',\n    Default = 'second',\n    Empty = ''\n}\n\n/** Mixin to augment a directive with a `color` property. */\nexport function mixinColor<T extends Constructor<HasElementRef>>(\n    base: T,\n    defaultColor: ThemePalette = ThemePalette.Default\n): CanColorCtor & T {\n    return class extends base {\n\n        private _color: ThemePalette;\n\n        get color(): ThemePalette {\n            return this._color;\n        }\n\n        set color(value: ThemePalette) {\n            const colorPalette = value || defaultColor;\n\n            if (colorPalette !== this._color) {\n                if (this._color) {\n                    this._elementRef.nativeElement.classList.remove(`mc-${this._color}`);\n                }\n\n                if (colorPalette) {\n                    this._elementRef.nativeElement.classList.add(`mc-${colorPalette}`);\n                }\n\n                this._color = colorPalette;\n            }\n        }\n\n        constructor(...args: any[]) {\n            super(...args);\n\n            this.color = defaultColor;\n        }\n    };\n}\n\n","import { Constructor } from './constructor';\nimport { CanDisable } from './disabled';\n\n\nexport interface HasTabIndex {\n    tabIndex: number;\n}\n\nexport type HasTabIndexCtor = Constructor<HasTabIndex>;\n\n// Mixin to augment a directive with a `tabIndex` property.\nexport function mixinTabIndex<T extends Constructor<CanDisable>>(base: T, defaultTabIndex = 0)\n    : HasTabIndexCtor & T {\n    return class extends base {\n        private _tabIndex: number = defaultTabIndex;\n\n        get tabIndex(): number {\n            return this.disabled ? -1 : this._tabIndex;\n        }\n\n        set tabIndex(value: number) {\n            this._tabIndex = value != null ? value : defaultTabIndex;\n        }\n\n        constructor(...args: any[]) {\n            super(...args);\n        }\n    };\n}\n","import { FormControl, FormGroupDirective, NgControl, NgForm } from '@angular/forms';\nimport { Subject } from 'rxjs';\n\nimport { ErrorStateMatcher } from '../error/error-options';\n\nimport { Constructor } from './constructor';\n\n\n/** @docs-private */\nexport interface CanUpdateErrorState {\n\n    readonly stateChanges: Subject<void>;\n\n    errorState: boolean;\n    errorStateMatcher: ErrorStateMatcher;\n\n    updateErrorState();\n}\n\n/** @docs-private */\nexport type CanUpdateErrorStateCtor = Constructor<CanUpdateErrorState>;\n\n/** @docs-private */\nexport interface HasErrorState {\n    _parentFormGroup: FormGroupDirective;\n    _parentForm: NgForm;\n    _defaultErrorStateMatcher: ErrorStateMatcher;\n    ngControl: NgControl;\n}\n\n/**\n * Mixin to augment a directive with updateErrorState method.\n * For component with `errorState` and need to update `errorState`.\n */\nexport function mixinErrorState<T extends Constructor<HasErrorState>>(base: T): CanUpdateErrorStateCtor & T {\n    return class extends base {\n        /** Whether the component is in an error state. */\n        errorState: boolean = false;\n\n        /**\n         * Stream that emits whenever the state of the input changes such that the wrapping\n         * `MatFormField` needs to run change detection.\n         */\n        readonly stateChanges = new Subject<void>();\n\n        errorStateMatcher: ErrorStateMatcher;\n\n        constructor(...args: any[]) {\n            super(...args);\n        }\n\n        updateErrorState() {\n            const oldState = this.errorState;\n            const parent = this._parentFormGroup || this._parentForm;\n            const matcher = this.errorStateMatcher || this._defaultErrorStateMatcher;\n            const control = this.ngControl ? this.ngControl.control as FormControl : null;\n            const newState = matcher.isErrorState(control, parent);\n\n            if (newState !== oldState) {\n                this.errorState = newState;\n                this.stateChanges.next();\n            }\n        }\n    };\n}\n","import {\n    AfterViewChecked,\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    ElementRef,\n    EventEmitter,\n    Inject,\n    InjectionToken,\n    Input,\n    OnDestroy,\n    Optional,\n    Output,\n    QueryList,\n    ViewEncapsulation\n} from '@angular/core';\nimport { coerceBooleanProperty } from '@ptsecurity/cdk/coercion';\nimport { ENTER, SPACE } from '@ptsecurity/cdk/keycodes';\nimport { Subject } from 'rxjs';\n\nimport { McOptgroup } from './optgroup';\n\n\n/**\n * Option IDs need to be unique across components, so this counter exists outside of\n * the component definition.\n */\nlet _uniqueIdCounter = 0;\n\n/** Event object emitted by McOption when selected or deselected. */\nexport class McOptionSelectionChange {\n    constructor(\n        /** Reference to the option that emitted the event. */\n        public source: McOption,\n        /** Whether the change in the option's value was a result of a user action. */\n        public isUserInput = false) {\n    }\n}\n\n/**\n * Describes a parent component that manages a list of options.\n * Contains properties that the options can inherit.\n * @docs-private\n */\nexport interface IMcOptionParentComponent {\n    disableRipple?: boolean;\n    multiple?: boolean;\n}\n\n/**\n * Injection token used to provide the parent component to options.\n */\nexport const MC_OPTION_PARENT_COMPONENT =\n    new InjectionToken<IMcOptionParentComponent>('MC_OPTION_PARENT_COMPONENT');\n\n/**\n * Single option inside of a `<mat-select>` element.\n */\n@Component({\n    selector: 'mc-option',\n    exportAs: 'mcOption',\n    host: {\n        '[attr.tabindex]': '_getTabIndex()',\n        '[class.mc-selected]': 'selected',\n        '[class.mc-option-multiple]': 'multiple',\n        '[class.mc-active]': 'active',\n        '[id]': 'id',\n        '[class.mc-disabled]': 'disabled',\n        '(click)': '_selectViaInteraction()',\n        '(keydown)': '_handleKeydown($event)',\n        class: 'mc-option'\n    },\n    styleUrls: ['option.css'],\n    templateUrl: 'option.html',\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class McOption implements AfterViewChecked, OnDestroy {\n    /** Whether the wrapping component is in multiple selection mode. */\n    get multiple() {\n        return this._parent && this._parent.multiple;\n    }\n\n    /** The unique ID of the option. */\n    get id(): string {\n        return this._id;\n    }\n\n    /** Whether or not the option is currently selected. */\n    get selected(): boolean {\n        return this._selected;\n    }\n\n    /** The form value of the option. */\n    @Input() value: any;\n\n    /** Whether the option is disabled. */\n    @Input()\n    get disabled() {\n        return (this.group && this.group.disabled) || this._disabled;\n    }\n\n    set disabled(value: any) {\n        this._disabled = coerceBooleanProperty(value);\n    }\n\n    /** Whether ripples for the option are disabled. */\n    get disableRipple() {\n        return this._parent && this._parent.disableRipple;\n    }\n\n    /** Event emitted when the option is selected or deselected. */\n        // tslint:disable-next-line:no-output-on-prefix\n    @Output() readonly onSelectionChange = new EventEmitter<McOptionSelectionChange>();\n\n    /** Emits when the state of the option changes and any parents have to be notified. */\n    readonly _stateChanges = new Subject<void>();\n\n    private _selected = false;\n    private _active = false;\n    private _disabled = false;\n    private readonly _id = `mc-option-${_uniqueIdCounter++}`;\n    private _mostRecentViewValue = '';\n\n    constructor(\n        private readonly _element: ElementRef,\n        private readonly _changeDetectorRef: ChangeDetectorRef,\n        @Optional() @Inject(MC_OPTION_PARENT_COMPONENT) private readonly _parent: IMcOptionParentComponent,\n        @Optional() readonly group: McOptgroup) {\n    }\n\n    /**\n     * Whether or not the option is currently active and ready to be selected.\n     * An active option displays styles as if it is focused, but the\n     * focus is actually retained somewhere else. This comes in handy\n     * for components like autocomplete where focus must remain on the input.\n     */\n    get active(): boolean {\n        return this._active;\n    }\n\n    /**\n     * The displayed value of the option. It is necessary to show the selected option in the\n     * select's trigger.\n     */\n    get viewValue(): string {\n        // TODO(kara): Add input property alternative for node envs.\n        return (this._getHostElement().textContent || '').trim();\n    }\n\n    /** Selects the option. */\n    select(): void {\n        if (!this._selected) {\n            this._selected = true;\n            this._changeDetectorRef.markForCheck();\n            this._emitSelectionChangeEvent();\n        }\n    }\n\n    /** Deselects the option. */\n    deselect(): void {\n        if (this._selected) {\n            this._selected = false;\n            this._changeDetectorRef.markForCheck();\n            this._emitSelectionChangeEvent();\n        }\n    }\n\n    /** Sets focus onto this option. */\n    focus(): void {\n        const element = this._getHostElement();\n\n        if (typeof element.focus === 'function') {\n            element.focus();\n        }\n    }\n\n    /**\n     * This method sets display styles on the option to make it appear\n     * active. This is used by the ActiveDescendantKeyManager so key\n     * events will display the proper options as active on arrow key events.\n     */\n    setActiveStyles(): void {\n        if (!this._active) {\n            this._active = true;\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n\n    /**\n     * This method removes display styles on the option that made it appear\n     * active. This is used by the ActiveDescendantKeyManager so key\n     * events will display the proper options as active on arrow key events.\n     */\n    setInactiveStyles(): void {\n        if (this._active) {\n            this._active = false;\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n\n    /** Gets the label to be used when determining whether the option should be focused. */\n    getLabel(): string {\n        return this.viewValue;\n    }\n\n    /** Ensures the option is selected when activated from the keyboard. */\n    _handleKeydown(event: KeyboardEvent): void {\n        // tslint:disable-next-line\n        if (event.keyCode === ENTER || event.keyCode === SPACE) {\n            this._selectViaInteraction();\n\n            // Prevent the page from scrolling down and form submits.\n            event.preventDefault();\n        }\n    }\n\n    /**\n     * `Selects the option while indicating the selection came from the user. Used to\n     * determine if the select's view -> model callback should be invoked.`\n     */\n    _selectViaInteraction(): void {\n        if (!this.disabled) {\n            this._selected = this.multiple ? !this._selected : true;\n            this._changeDetectorRef.markForCheck();\n            this._emitSelectionChangeEvent(true);\n        }\n    }\n\n    /** Returns the correct tabindex for the option depending on disabled state. */\n    _getTabIndex(): string {\n        return this.disabled ? '-1' : '0';\n    }\n\n    /** Gets the host DOM element. */\n    _getHostElement(): HTMLElement {\n        return this._element.nativeElement;\n    }\n\n    ngAfterViewChecked() {\n        // Since parent components could be using the option's label to display the selected values\n        // (e.g. `mat-select`) and they don't have a way of knowing if the option's label has changed\n        // we have to check for changes in the DOM ourselves and dispatch an event. These checks are\n        // relatively cheap, however we still limit them only to selected options in order to avoid\n        // hitting the DOM too often.\n        if (this._selected) {\n            const viewValue = this.viewValue;\n\n            if (viewValue !== this._mostRecentViewValue) {\n                this._mostRecentViewValue = viewValue;\n                this._stateChanges.next();\n            }\n        }\n    }\n\n    ngOnDestroy() {\n        this._stateChanges.complete();\n    }\n\n    /** Emits the selection change event. */\n    private _emitSelectionChangeEvent(isUserInput = false): void {\n        this.onSelectionChange.emit(new McOptionSelectionChange(this, isUserInput));\n    }\n}\n\n/**\n * Counts the amount of option group labels that precede the specified option.\n * @param optionIndex Index of the option at which to start counting.\n * @param options Flat list of all of the options.\n * @param optionGroups Flat list of all of the option groups.\n * @docs-private\n */\nexport function _countGroupLabelsBeforeOption(\n    optionIndex: number, options: QueryList<McOption>,\n    optionGroups: QueryList<McOptgroup>\n): number {\n\n    if (optionGroups.length) {\n        const optionsArray = options.toArray();\n        const groups = optionGroups.toArray();\n\n        let groupCounter = 0;\n\n        for (let i = 0; i < optionIndex + 1; i++) {\n            if (optionsArray[i].group && optionsArray[i].group === groups[groupCounter]) {\n                groupCounter++;\n            }\n        }\n\n        return groupCounter;\n    }\n\n    return 0;\n}\n\n/**\n * Determines the position to which to scroll a panel in order for an option to be into view.\n * @param optionIndex Index of the option to be scrolled into the view.\n * @param optionHeight Height of the options.\n * @param currentScrollPosition Current scroll position of the panel.\n * @param panelHeight Height of the panel.\n * @docs-private\n */\nexport function _getOptionScrollPosition(\n    optionIndex: number,\n    optionHeight: number,\n    currentScrollPosition: number,\n    panelHeight: number\n): number {\n    const optionOffset = optionIndex * optionHeight;\n\n    if (optionOffset < currentScrollPosition) { return optionOffset; }\n\n    if (optionOffset + optionHeight > currentScrollPosition + panelHeight) {\n        return Math.max(0, optionOffset - panelHeight + optionHeight);\n    }\n\n    return currentScrollPosition;\n}\n\n","import { ConnectionPositionPair } from '@ptsecurity/cdk/overlay';\n\n\nexport const POSITION_MAP: { [key: string]: ConnectionPositionPair } = {\n    top         : {\n        originX : 'center',\n        originY : 'top',\n        overlayX: 'center',\n        overlayY: 'bottom'\n    },\n    topCenter   : {\n        originX : 'center',\n        originY : 'top',\n        overlayX: 'center',\n        overlayY: 'bottom',\n        offsetX : undefined,\n        offsetY : undefined\n    },\n    topLeft     : {\n        originX : 'start',\n        originY : 'top',\n        overlayX: 'start',\n        overlayY: 'bottom',\n        offsetX : undefined,\n        offsetY : undefined\n    },\n    topRight    : {\n        originX : 'end',\n        originY : 'top',\n        overlayX: 'end',\n        overlayY: 'bottom',\n        offsetX : undefined,\n        offsetY : undefined\n    },\n    right       : {\n        originX : 'end',\n        originY : 'center',\n        overlayX: 'start',\n        overlayY: 'center'\n    },\n    rightTop    : {\n        originX : 'end',\n        originY : 'top',\n        overlayX: 'start',\n        overlayY: 'top',\n        offsetX : undefined,\n        offsetY : undefined\n    },\n    rightBottom : {\n        originX : 'end',\n        originY : 'bottom',\n        overlayX: 'start',\n        overlayY: 'bottom',\n        offsetX : undefined,\n        offsetY : undefined\n    },\n    bottom      : {\n        originX : 'center',\n        originY : 'bottom',\n        overlayX: 'center',\n        overlayY: 'top'\n    },\n    bottomCenter: {\n        originX : 'center',\n        originY : 'bottom',\n        overlayX: 'center',\n        overlayY: 'top'\n    },\n    bottomLeft  : {\n        originX : 'start',\n        originY : 'bottom',\n        overlayX: 'start',\n        overlayY: 'top'\n    },\n    bottomRight : {\n        originX : 'end',\n        originY : 'bottom',\n        overlayX: 'end',\n        overlayY: 'top'\n    },\n    left        : {\n        originX : 'start',\n        originY : 'center',\n        overlayX: 'end',\n        overlayY: 'center'\n    },\n    leftTop     : {\n        originX : 'start',\n        originY : 'top',\n        overlayX: 'end',\n        overlayY: 'top'\n    },\n    leftBottom  : {\n        originX : 'start',\n        originY : 'bottom',\n        overlayX: 'end',\n        overlayY: 'bottom'\n    }\n};\n\nexport const DEFAULT_4_POSITIONS = _objectValues([\n    POSITION_MAP.top, POSITION_MAP.right, POSITION_MAP.bottom, POSITION_MAP.left\n]);\n\nfunction arrayMap<T, S>(array: T[], iteratee: (item: T, index: number, arr: T[]) => S): S[] {\n    let index = -1;\n    const length = array == null ? 0 : array.length;\n    const result = Array(length);\n\n    while (++index < length) {\n        result[ index ] = iteratee(array[ index ], index, array);\n    }\n\n    return result;\n}\nfunction baseValues<T>(object: { [key: string]: T } | T[], props: string[]): T[] {\n    return arrayMap(props,  (key) => {\n        return object[ key ];\n    });\n}\nfunction _objectValues<T>(object: { [key: string]: T } | T[]): T[] {\n    return object == null ? [] : baseValues(object, Object.keys(object));\n}\n","export function throwMcDropdownMissingError() {\n    throw Error(`mcDropdownTriggerFor: must pass in an mc-dropdown instance.\n    Example:\n      <mc-dropdown #dropdown=\"mcDropdown\"></mc-dropdown>\n      <button [mcDropdownTriggerFor]=\"dropdown\"></button>`);\n}\n\n/**\n * Throws an exception for the case when dropdown's x-position value isn't valid.\n * In other words, it doesn't match 'before' or 'after'.\n * @docs-private\n */\nexport function throwMcDropdownInvalidPositionX() {\n    throw Error(`xPosition value must be either 'before' or after'.\n      Example: <mc-dropdown xPosition=\"before\" #dropdown=\"mcDropdown\"></mc-dropdown>`);\n}\n\n/**\n * Throws an exception for the case when dropdown's y-position value isn't valid.\n * In other words, it doesn't match 'above' or 'below'.\n * @docs-private\n */\nexport function throwMcDropdownInvalidPositionY() {\n    throw Error(`yPosition value must be either 'above' or below'.\n      Example: <mc-dropdown yPosition=\"above\" #dropdown=\"mcDropdown\"></mc-dropdown>`);\n}\n","export function getMcFormFieldMissingControlError(): Error {\n  return Error('mc-form-field must contain a McFormFieldControl.');\n}\n","export function getMcInputUnsupportedTypeError(inputType: string): Error {\n    return Error(`Input type \"${inputType}\" isn't supported by mcInput.`);\n}\n","/**\n * Returns an exception to be thrown when attempting to change a select's `multiple` option\n * after initialization.\n * @docs-private\n */\nexport function getMcSelectDynamicMultipleError(): Error {\n    return Error('Cannot change `multiple` mode of select after initialization.');\n}\n\n/**\n * Returns an exception to be thrown when attempting to assign a non-array value to a select\n * in `multiple` mode. Note that `undefined` and `null` are still valid values to allow for\n * resetting the value.\n * @docs-private\n */\nexport function getMcSelectNonArrayValueError(): Error {\n    return Error('Value must be an array in multiple-selection mode.');\n}\n\n/**\n * Returns an exception to be thrown when assigning a non-function value to the comparator\n * used to determine if a value corresponds to an option. Note that whether the function\n * actually takes two values and returns a boolean is not checked.\n */\nexport function getMcSelectNonFunctionValueError(): Error {\n    return Error('`compareWith` must be a function.');\n}\n","import { NgModule, Directive, ElementRef, QueryList } from '@angular/core';\n\n\n/**\n * Shared directive to count lines inside a text area, such as a list item.\n * Line elements can be extracted with a @ContentChildren(McLine) query, then\n * counted by checking the query list's length.\n */\n@Directive({\n    selector: '[mc-line], [mcLine]',\n    host: { class: 'mc-line' }\n})\nexport class McLine {}\n\n/**\n * Helper that takes a query list of lines and sets the correct class on the host.\n * @docs-private\n */\nexport class McLineSetter {\n    constructor(private _lines: QueryList<McLine>, private _element: ElementRef) {\n        this._setLineClass(this._lines.length);\n\n        this._lines.changes.subscribe(() => {\n            this._setLineClass(this._lines.length);\n        });\n    }\n\n    private _setLineClass(count: number): void {\n        this._resetClasses();\n        if (count === 2 || count === 3) {\n            this._setClass(`mc-${count}-line`, true);\n        } else if (count > 3) {\n            this._setClass(`mc-multi-line`, true);\n        }\n    }\n\n    private _resetClasses(): void {\n        this._setClass('mc-2-line', false);\n        this._setClass('mc-3-line', false);\n        this._setClass('mc-multi-line', false);\n    }\n\n    private _setClass(className: string, isAdd: boolean): void {\n        if (isAdd) {\n            this._element.nativeElement.classList.add(className);\n        } else {\n            this._element.nativeElement.classList.remove(className);\n        }\n    }\n}\n\n@NgModule({\n    imports: [],\n    exports: [McLine],\n    declarations: [McLine]\n})\nexport class McLineModule {}\n","import { Injectable } from '@angular/core';\nimport { FormGroupDirective, NgForm, FormControl } from '@angular/forms';\n\n\n/** Error state matcher that matches when a control is invalid and dirty. */\n@Injectable()\nexport class ShowOnDirtyErrorStateMatcher implements ErrorStateMatcher {\n    isErrorState(control: FormControl | null, form: FormGroupDirective | NgForm | null): boolean {\n        return !!(control && control.invalid && (control.dirty || (form && form.submitted)));\n    }\n}\n\n/** Provider that defines how form controls behave with regards to displaying error messages. */\n@Injectable({ providedIn: 'root' })\nexport class ErrorStateMatcher {\n    isErrorState(control: FormControl | null, form: FormGroupDirective | NgForm | null): boolean {\n        return !!(control && control.invalid && (control.touched || (form && form.submitted)));\n    }\n}\n","import { Component, ViewEncapsulation, Input, ChangeDetectionStrategy } from '@angular/core';\n\n\nexport type McPseudoCheckboxState = 'unchecked' | 'checked' | 'indeterminate';\n\n/**\n * Component that shows a simplified checkbox without including any kind of \"real\" checkbox.\n * Meant to be used when the checkbox is purely decorative and a large number of them will be\n * included, such as for the options in a multi-select. Uses no SVGs or complex animations.\n * Note that theming is meant to be handled by the parent element, e.g.\n * `mc-primary .mc-pseudo-checkbox`.\n *\n * Note that this component will be completely invisible to screen-reader users. This is *not*\n * interchangeable with `<mc-checkbox>` and should *not* be used if the user would directly\n * interact with the checkbox. The pseudo-checkbox should only be used as an implementation detail\n * of more complex components that appropriately handle selected / checked state.\n * @docs-private\n */\n@Component({\n    encapsulation: ViewEncapsulation.None,\n    preserveWhitespaces: false,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    selector: 'mc-pseudo-checkbox',\n    styleUrls: ['pseudo-checkbox.css'],\n    templateUrl: 'pseudo-checkbox.partial.html',\n    host: {\n        class: 'mc-pseudo-checkbox',\n        '[class.mc-indeterminate]': 'state === \"indeterminate\"',\n        '[class.mc-checked]': 'state === \"checked\"',\n        '[class.mc-disabled]': 'disabled'\n    }\n})\nexport class McPseudoCheckbox {\n    @Input() state: McPseudoCheckboxState = 'unchecked';\n\n    @Input() disabled: boolean = false;\n}\n","import { NgModule } from '@angular/core';\n\nimport { McPseudoCheckbox } from './pseudo-checkbox/pseudo-checkbox';\n\n\n@NgModule({\n    exports: [McPseudoCheckbox],\n    declarations: [McPseudoCheckbox]\n})\nexport class McPseudoCheckboxModule {}\n\n\nexport * from './pseudo-checkbox/pseudo-checkbox';\n","import { DOCUMENT } from '@angular/common';\nimport { Inject, Injectable } from '@angular/core';\n\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class McMeasureScrollbarService {\n\n    get scrollBarWidth(): number {\n        if (this._scrollbarWidth) {\n            return this._scrollbarWidth;\n        }\n        this.initScrollBarWidth();\n\n        return this._scrollbarWidth;\n    }\n\n    private _scrollbarWidth: number;\n    private scrollbarMeasure = {\n        position: 'absolute',\n        top: '-9999px',\n        width: '50px',\n        height: '50px',\n        overflow: 'scroll'\n    };\n\n    constructor(\n        @Inject(DOCUMENT) private document: any\n    ) {\n        this.initScrollBarWidth();\n    }\n\n    initScrollBarWidth() {\n        const scrollDiv = this.document.createElement('div');\n\n        // tslint:disable-next-line\n        for (const scrollProp in this.scrollbarMeasure) {\n            if (this.scrollbarMeasure.hasOwnProperty(scrollProp)) {\n                scrollDiv.style[scrollProp] = this.scrollbarMeasure[scrollProp];\n            }\n        }\n\n        this.document.body.appendChild(scrollDiv);\n\n        const width = scrollDiv.offsetWidth - scrollDiv.clientWidth;\n\n        this.document.body.removeChild(scrollDiv);\n        this._scrollbarWidth = width;\n    }\n}\n","import { Component, ViewEncapsulation, Input, ChangeDetectionStrategy } from '@angular/core';\n\nimport { mixinDisabled, CanDisable, CanDisableCtor } from '../common-behaviors/index';\n\n\n// Boilerplate for applying mixins to McOptgroup.\n/** @docs-private */\nexport class McOptgroupBase {}\n\nexport const _McOptgroupMixinBase: CanDisableCtor & typeof McOptgroupBase = mixinDisabled(McOptgroupBase);\n\n// Counter for unique group ids.\nlet _uniqueOptgroupIdCounter = 0;\n\n/**\n * Component that is used to group instances of `mc-option`.\n */\n@Component({\n    selector: 'mc-optgroup',\n    exportAs: 'mcOptgroup',\n    templateUrl: 'optgroup.html',\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    inputs: ['disabled'],\n    styleUrls: ['optgroup.css'],\n    host: {\n        class: 'mc-optgroup',\n        role: 'group',\n        '[class.mc-optgroup-disabled]': 'disabled',\n        '[attr.aria-disabled]': 'disabled.toString()',\n        '[attr.aria-labelledby]': '_labelId'\n    }\n})\nexport class McOptgroup extends _McOptgroupMixinBase implements CanDisable {\n    /** Label for the option group. */\n    @Input() label: string;\n\n    /** Unique id for the underlying label. */\n    _labelId: string = `mc-optgroup-label-${_uniqueOptgroupIdCounter++}`;\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { McPseudoCheckboxModule } from '../selection/index';\n\nimport { McOptgroup } from './optgroup';\nimport { McOption } from './option';\n\n\n@NgModule({\n    imports: [CommonModule, McPseudoCheckboxModule],\n    exports: [McOption, McOptgroup],\n    declarations: [McOption, McOptgroup]\n})\nexport class McOptionModule {}\n\n\nexport * from './option';\nexport * from './optgroup';\n","import { InjectionToken } from '@angular/core';\n\n\n/** InjectionToken that can be used to specify the global label options. */\nexport const MC_LABEL_GLOBAL_OPTIONS =\n    new InjectionToken<LabelOptions>('mc-label-global-options');\n\n/** Type for the available floatLabel values. */\nexport type FloatLabelType = 'always' | 'never' | 'auto';\n\n/** Configurable options for floating labels. */\nexport interface LabelOptions {\n    /**\n     * Whether the label should float `always`, `never`, or `auto` (only when necessary).\n     * Default behavior is assumed to be `auto`.\n     */\n    float?: FloatLabelType;\n}\n","import {\n    animate,\n    state,\n    style,\n    transition,\n    trigger,\n    AnimationTriggerMetadata,\n} from '@angular/animations';\n\n\nexport const fadeAnimation: AnimationTriggerMetadata =  trigger('fadeAnimation', [\n    state('void', style({ opacity: 0 })),\n    state('true', style({ opacity: 1 })),\n    state('false', style({ opacity: 0 })),\n    transition('* => true', animate('150ms cubic-bezier(0.0, 0.0, 0.2, 1)')),\n    transition('* => void', animate('150ms cubic-bezier(0.4, 0.0, 1, 1)')),\n]);\n","import {\n    Attribute,\n    ChangeDetectionStrategy,\n    Component,\n    Directive,\n    ElementRef,\n    ViewEncapsulation\n} from '@angular/core';\n\nimport { mixinColor, CanColor, CanColorCtor, ThemePalette } from '@ptsecurity/mosaic/core';\n\n\n@Directive({\n    selector: '[mc-icon]',\n    host: { class: 'mc mc-icon' }\n})\nexport class McIconCSSStyler {}\n\n\nexport class McIconBase {\n    constructor(public _elementRef: ElementRef) {}\n}\n\nexport const _McIconMixinBase: CanColorCtor & typeof McIconBase = mixinColor(McIconBase, ThemePalette.Empty);\n\n\n@Component({\n    selector: `[mc-icon]`,\n    template: '<ng-content></ng-content>',\n    styleUrls: ['./icon.css'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n    inputs: ['color']\n})\nexport class McIcon extends _McIconMixinBase implements CanColor {\n    constructor(elementRef: ElementRef, @Attribute('mc-icon') iconName: string) {\n        super(elementRef);\n\n        elementRef.nativeElement.classList.add(iconName);\n    }\n\n    _getHostElement() {\n        return this._elementRef.nativeElement;\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { A11yModule } from '@ptsecurity/cdk/a11y';\nimport { PlatformModule } from '@ptsecurity/cdk/platform';\n\nimport {\n    McIcon,\n    McIconCSSStyler\n} from './icon.component';\n\n\n@NgModule({\n    imports: [\n        CommonModule,\n        A11yModule,\n        PlatformModule\n    ],\n    exports: [\n        McIcon,\n        McIconCSSStyler\n    ],\n    declarations: [\n        McIcon,\n        McIconCSSStyler\n    ]\n})\nexport class McIconModule {}\n"],"names":["McTooltipComponent","prototype","setClassMap","this","classMap","prefix","mcPlacement","isContentEmpty","isTitleString","mcTitle","afterHidden","onHideSubject","asObservable","markForCheck","cdr","handleBodyInteraction","closeOnInteraction","hide","tslib_1.__decorate","Output","tslib_1.__metadata","EventEmitter","Input","Component","selector","inputs","outputs","animations","fadeAnimation","template","preserveWhitespaces","styles","encapsulation","ViewEncapsulation","None","changeDetection","ChangeDetectionStrategy","OnPush","host","(body:click)","ChangeDetectorRef","MC_TOOLTIP_SCROLL_STRATEGY","InjectionToken","MC_TOOLTIP_SCROLL_STRATEGY_FACTORY_PROVIDER","provide","deps","Overlay","useFactory","mcTooltipScrollStrategyFactory","McTooltip","overlay","elementRef","ngZone","scrollDispatcher","hostView","scrollStrategy","direction","isTooltipOpen","isDynamicTooltip","parentDisabled","mcVisibleChange","$unsubscribe","Subject","_disabled","_mcTrigger","_mcPlacement","manualListeners","Map","destroyed","availablePositions","POSITION_MAP","Object","defineProperty","get","_mcTitle","set","title","updateCompValue","value","coerceBooleanProperty","_mcMouseEnterDelay","_mcMouseLeaveDelay","_mcTooltipClass","tooltip","_mcVisible","externalValue","show","createOverlay","_this","overlayRef","strategy","position","flexibleConnectedTo","withTransformOriginOn","withFlexibleDimensions","withViewportMargin","withPositions","DEFAULT_4_POSITIONS","slice","scrollableAncestors","getAncestorScrollContainers","withScrollableContainers","positionChanges","pipe","takeUntil","subscribe","change","onPositionChange","scrollableViewProperties","isOverlayClipped","mcVisible","run","create","positionStrategy","panelClass","updatePosition","detachments","detach","hasAttached","$event","updatedPlacement","keys","some","key","connectionPair","originX","originY","overlayX","overlayY","handlePositioningUpdate","pos","overlayElement","clientHeight","element","nativeElement","currentContainer","style","top","parseInt","split","ngOnInit","initElementRefListeners","ngOnDestroy","dispose","forEach","listener","event","removeEventListener","clear","next","complete","handleKeydown","e","keyCode","ESCAPE","handleTouchend","mcTrigger","addEventListener","disabled","portal","ComponentPortal","attach","instance","property","distinctUntilChanged","data","emit","getConfig","origin","getOrigin","getOverlayPosition","tslib_1.__assign","main","fallback","originPosition","isLtr","getMcTooltipInvalidPositionError","_a","invertPosition","x","y","overlayPosition","newX","newY","HostBinding","Directive","exportAs","(keydown)","(touchend)","tslib_1.__param","Inject","Optional","ElementRef","NgZone","ScrollDispatcher","ViewContainerRef","Directionality","McToolTipModule","NgModule","declarations","exports","imports","CommonModule","OverlayModule","providers","entryComponents","VERSION","Version","SELECT_PANEL_PADDING_X","McSelect","_onFadeInDone","_panelDoneAnimating","panelOpen","_changeDetectorRef","_onFocus","_focused","stateChanges","_onBlur","_onTouched","_onAttached","overlayDir","positionChange","take","detectChanges","_calculateOverlayOffsetX","panel","scrollTop","_scrollTop","_getPanelTheme","_parentFormField","color","focus","_elementRef","_calculateOverlayScroll","selectedIndex","scrollBuffer","maxScroll","itemHeight","_getItemHeight","optionOffsetFromScrollTop","halfOptionHeight","optimalScrollPosition","Math","min","max","onContainerClick","open","onRemoveMatcherItem","option","stopPropagation","deselect","_panelOpen","empty","_calculateHiddenItems","visibleItems","totalItemsWidth","_getTotalItemsWidthInMatcher","totalVisibleItemsWidth","tags","tag","offsetTop","offsetHeight","getBoundingClientRect","width","hiddenItems","selected","length","itemsCounter","trigger","querySelector","matcherList","itemsCounterShowed","matcherListWidth","matcherWidth","triggerClone","cloneNode","remove","_renderer","setStyle","appendChild","querySelectorAll","item","_handleClosedKeydown","isArrowKey","DOWN_ARROW","UP_ARROW","LEFT_ARROW","RIGHT_ARROW","ENTER","SPACE","multiple","altKey","preventDefault","_keyManager","onKeydown","_handleOpenKeydown","manager","HOME","END","setFirstItemActive","setLastItemActive","close","activeItem","_multiple","A","ctrlKey","hasDeselectedOptions_1","options","select","previouslyFocusedIndex","activeItemIndex","shiftKey","_selectViaInteraction","_initializeSelection","Promise","resolve","then","_setSelectionByValue","ngControl","_value","Array","isArray","getMcSelectNonArrayValueError","_selectionModel","currentValue","_selectValue","_sortValues","correspondingOption","setActiveItem","find","_compareWith","error","isDevMode","console","warn","_initKeyManager","ActiveDescendantKeyManager","withTypeAhead","withVerticalOrientation","withHorizontalOrientation","_isRtl","tabOut","_destroy","_scrollActiveOptionIntoView","_resetOptions","changedOrDestroyed","merge","changes","optionSelectionChanges","_onSelect","source","isUserInput","apply","map","_stateChanges","_setOptionIds","wasSelected","isSelected","_propagateChanges","options_1","toArray","sort","a","b","sortComparator","indexOf","fallbackValue","valueToEmit","valueChange","_onChange","selectionChange","McSelectChange","_optionIds","id","join","_highlightCorrectOption","activeOptionIndex","labelCount","_countGroupLabelsBeforeOption","optionGroups","_getOptionScrollPosition","_getOptionIndex","reduce","result","current","index","undefined","_calculateOverlayPosition","items","_getItemCount","panelHeight","scrollContainerHeight","selectedOptionOffset","_offsetY","_calculateOverlayOffsetY","_checkOverlayWithinViewport","offsetX","overlayRect","viewportSize","_viewportRuler","getViewportSize","isRtl","first","group","leftOverflow","left","rightOverflow","right","round","topSpaceAvailable","_triggerRect","bottomSpaceAvailable","height","bottom","panelHeightTop","abs","totalPanelHeight","panelHeightBottom","_adjustPanelUp","_adjustPanelDown","_transformOrigin","_getOriginBasedOnOption","distanceBelowViewport","distanceAboveViewport","optionHeightAdjustment","ViewChild","ViewChildren","McTag","QueryList","CdkConnectedOverlay","ContentChildren","McOption","descendants","McOptgroup","ContentChild","McSelectTrigger","ErrorStateMatcher","Observable","McSelect_1","[attr.id]","[attr.tabindex]","class","[class.mc-disabled]","[class.mc-select-invalid]","[class.mc-select-required]","(focus)","(blur)","(window:resize)","mcSelectAnimations","transformPanel","fadeInContent","McFormFieldControl","useExisting","MC_OPTION_PARENT_COMPONENT","Self","Attribute","MC_SELECT_SCROLL_STRATEGY","ViewportRuler","Renderer2","NgForm","FormGroupDirective","McFormField","NgControl","String","_McSelectMixinBase","McSelectModule","McOptionModule","McIconModule","McTagModule","McFormFieldModule","MC_SELECT_SCROLL_STRATEGY_PROVIDER","McSplitterComponent","renderer","areas","_gutterSize","isDragging","areaPositionDivider","listeners","_direction","gutterSize","size","coerceNumberProperty","addArea","area","order","getSize","setOrder","push","initialSize","isVertical","onMouseDown","leftAreaIndex","rightAreaIndex","leftArea","rightArea","startPoint","screenX","screenY","disableFlex","setSize","runOutsideAngular","listen","onMouseUp","onMouseMove","removeArea","indexToRemove","splice","endPoint","offset","newLeftAreaSize","newRightAreaSize","minLeftAreaSize","getMinSize","minRightAreaSize","rightAreaOffset","unsubscribe","pop","McGutterDirective","_order","_size","getCursor","getState","coerceCssPixelValue","setAttr","state","Error","attribute","setAttribute","McSplitterAreaDirective","splitter","removeStyle","sz","getSizeProperty","getOffsetSizeProperty","getComputedStyle","parseFloat","getMinSizeProperty","McSplitterModule","nextUniqueId","McToggleBase","_McToggleMixinBase","mixinTabIndex","mixinColor","mixinDisabled","ThemePalette","Primary","McToggleChange","McToggleComponent","_super","_focusMonitor","tabIndex","call","labelPosition","ariaLabel","ariaLabelledby","_uniqueId","name","_checked","_onTouchedCallback","_onChangeCallback","_","monitor","tslib_1.__extends","McToggleComponent_1","stopMonitoring","focusVia","_inputElement","_getAriaChecked","checked","_onInteractionEvent","_onLabelTextChange","_onInputClick","_updateModelValue","_emitChangeEvent","writeValue","registerOnChange","fn","registerOnTouched","setDisabledState","isDisabled","NG_VALUE_ACCESSOR","forwardRef","multi","[id]","[class.mc-toggle_off]","transition","animate","FocusMonitor","McToggleModule","A11yModule","McCommonModule","positions","mcMouseEnterDelay","mcMouseLeaveDelay","BehaviorSubject","$visible","TemplateRef","unshift","visible","hideTid","clearTimeout","showTid","setTimeout","mcTabGroupMixinBase","McTabNavBase","mcTabNavMixinBase","McTabNav","McTabLinkBase","mcTabLinkMixinBase","McTabLink","focusMonitor","isActive","[attr.aria-current]","[attr.aria-disabled]","[attr.tabIndex]","[class.mc-active]","McTabsModule","PortalModule","McTabGroup","McTabLabel","McTab","McTabContent","McLightTabsCssStyler","McAlignTabsCenterCssStyler","McAlignTabsEndCssStyler","McStretchTabsCssStyler","McTabLabelWrapper","McTabBody","McTabBodyPortal","McTabHeader","McTagBase","_McTagMixinBase","ngAfterContentInit","_addClassModificatorForIcons","icons","contentChildren","iconElement","previousElementSibling","nextElementSibling","nextSibling","classList","add","previousSibling","firstIconElement","secondIconElement","McIcon","PlatformModule","MC_TEXTAREA_VALUE_ACCESSOR","McTextareaBase","_defaultErrorStateMatcher","_parentForm","_parentFormGroup","McTextareaMixinBase","mixinErrorState","McTextarea","inputValueAccessor","canGrow","focused","controlType","uid","_required","lineHeight","freeRowsHeight","minHeight","valueAccessor","previousNativeValue","growObserver","fromEvent","growSubscription","grow","bind","McTextarea_1","_id","paddingTop","paddingBottom","ngOnChanges","ngDoCheck","updateErrorState","dirtyCheckNativeValue","textarea","outerHeight","window","diff","scrollHeight","focusChanged","isFocused","isBadInput","newValue","validity","badInput","getGrowHeight","toString","[class.mc-textarea-resizable]","[attr.placeholder]","[disabled]","[required]","McTextareaModule","FormsModule","TimeParts","TimeFormats","TIMEFORMAT_PLACEHOLDERS","HHmmss","HHmm","DEFAULT_TIME_FORMAT","HOURS_MINUTES_SECONDS_REGEXP","RegExp","HOURS_MINUTES_REGEXP","HOURS_ONLY_REGEXP","uniqueComponentIdSuffix","validatorOnChange","noop","validator","MC_INPUT_VALUE_ACCESSOR","McTimepickerBase","McTimepickerMixinBase","ɵ1","validate","c","registerOnValidatorChange","McTimepicker","_minTime","_maxTime","onChange","placeholder","Validators","compose","parseValidator","minTimeValidator","maxTimeValidator","McTimepicker_1","applyInputChanges","_timeFormat","formatValue","timeFormatKey","minValue","minDateTime","getDateFromTimeString","maxValue","maxDateTime","onTouched","onBlur","onPaste","clipboardUserInput","clipboardData","getData","onInput","initialCursorStart","selectionStart","initialCursorEnd","selectionEnd","isAutocompleteTriggered","getParsedTimeParts","hoursOnly","hoursAndMinutes","hoursAndMinutesAndSeconds","doTimestringReformat","errors","createSelectionOfTimeComponentInInput","setProperty","getTimeStringFromDate","timeFormat","onKeyDown","getKeyCode","upDownTimeByArrowKeys","switchSelectionBetweenTimeparts","applyParams","changedTime","timeToApply","currentDateTimeInput","control","updateValueAndValidity","cursorPos","modifiedTimePart","getTimeEditMetrics","incrementTime","decrementTime","getCursorPositionOfPrevTimePartStart","getCursorPositionOfNextTimePartStart","code","newEditParams","cursorStartPosition","cursorEndPosition","dateVal","whatToIncrement","seconds","getTimeDigitsFromDate","hours","minutes","getDateFromTimeDigits","whatToDecrement","timeString","timeDevider","nextDividerPos","cursorPosition","minutesIndex","hoursIndex","secondsIndex","tempVal","getNumberWithLeadingZero","getHours","getMinutes","getSeconds","match","trim","Number","resultDate","Date","isNaN","getTime","digit","mcTimepickerParse","text","isTimeLowerThenMin","mcTimepickerLowerThenMintime","isTimeGreaterThenMax","mcTimepickerHigherThenMaxtime","timeToCompare","[attr.time-format]","[attr.min-time]","[attr.max-time]","[attr.value]","(input)","(paste)","NG_VALIDATORS","useValue","McTimepickerModule","transform","minWidth","opacity","query","animateChild","MC_SELECT_SCROLL_STRATEGY_PROVIDER_FACTORY","McSelectBase","_ngZone","_dir","_scrollStrategyFactory","_triggerFontSize","_panelDoneAnimatingStream","_scrollStrategy","_positions","defer","onSelectionChange","onStable","switchMap","openedChange","_openedStream","filter","o","_closedStream","oneMoreText","_uid","o1","o2","_placeholder","getMcSelectDynamicMultipleError","getMcSelectNonFunctionValueError","SelectionModel","added","removed","startWith","ngAfterViewInit","toggle","fontSize","selectedOptions","viewValue","reverse","isEmpty","_handleKeydown","PAGE_DOWN","setNextPageItemActive","McTreeSelection","FocusKeyManager","updateScrollSize","withScrollSize","floor","_getHeight","setFocusedOption","updateActiveItem","withShift","previousIndex_1","previousActiveItemIndex","activeIndex_1","setSelected","withCtrl","_canDeselectLast","autoSelect","_emitNavigationEvent","toggleFocusedOption","focusedIndex","_isValidIndex","focusedOption","renderNodeChanges","dataDiffer","viewContainer","parentData","_dataDiffer","_nodeOutlet","arrayOfInstances","_embeddedViews","view","viewDef","def","nodes","node","nodeMatchedQueries","matchedQueryIds","nodeData","nodeIndex","reset","notifyOnChanges","getClientRects","navigationChange","McTreeNavigationChange","noUnselect","CdkTreeNodeOutlet","McTreeNodeOption","McTreeSelection_1","[tabIndex]","role","CdkTree","IterableDiffers","_McTreeSelectionBase","MC_TREE_DIRECTIVES","McTreeNodeDef","McTreeNodePadding","McTreeModule","CdkTreeModule","McTreeFlattener","transformFunction","getLevel","isExpandable","getChildren","_flattenNode","level","resultNodes","parentMap","flatNode","children","child","childParentMap","flattenNodes","structuredData","expandFlattenedNodes","treeControl","results","currentExpand","expand","i","isExpanded","McTreeFlatDataSource","treeFlattener","initialData","_flattenedData","_expandedData","_data","dataNodes","connect","collectionViewer","viewChange","expansionModel","disconnect","DataSource","McTreeNestedDataSource","arguments","CdkPortal","ctorParameters","McTabBase","mcTabMixinBase","viewContainerRef","textLabel","contentPortal","hasOwnProperty","TemplatePortal","explicitContent","implicitContent","read","mcTabsAnimations","translateTab","dir","changeDetectorRef","onCentering","beforeCentering","afterLeavingCenter","onCentered","animationDuration","dirChangeSubscription","Subscription","EMPTY","computePositionAnimationState","positionIndex","bodyPosition","computePositionFromOrigin","onTranslateTabStarted","isCentering","isCenterPosition","toState","onTranslateTabComplete","fromState","getLayoutDirection","PortalHostDirective","componentFactoryResolver","centeringSub","leavingSub","content","ComponentFactoryResolver","CdkPortalOutlet","McTabLabelWrapperBase","mcTabLabelWrapperMixinBase","getOffsetLeft","offsetLeft","getOffsetWidth","offsetWidth","McTabHeaderBase","viewportRuler","showPaginationControls","disableScrollAfter","disableScrollBefore","selectFocusedIndex","indexFocused","_scrollDistance","selectedIndexChanged","_selectedIndex","coercedValue","keyManager","isValidIndex","focusIndex","v","getMaxScrollDistance","scrollDistanceChanged","checkScrollingControls","ngAfterContentChecked","tabLabelCount","labelWrappers","updatePagination","scrollToLabel","updateTabScrollPosition","dirChange","observableOf","resize","realign","withWrap","requestAnimationFrame","newFocusIndex","setTabFocus","onContentChanges","textContent","currentTextContent","zoneCallback","checkPaginationEnabled","tab","containerEl","tabListContainer","scrollLeft","scrollWidth","scrollDistance","translateX","tabList","scrollHeader","scrollDir","viewLength","labelIndex","selectedLabel","labelBeforePos","labelAfterPos","beforeVisiblePos","afterVisiblePos","isEnabled","[class.mc-tab-header__pagination-controls_enabled]","[class.mc-tab-header_rtl]","nextId","McTabChangeEvent","MC_TABS_CONFIG","McTabGroupBase","lightTabs","defaultConfig","headerPosition","selectedIndexChange","focusChange","animationDone","selectedTabChange","indexToSelect","tabBodyWrapperHeight","tabsSubscription","tabLabelSubscription","_dynamicHeight","lightTab","groupId","clampTabIndex","isFirstRun_1","createChangeEvent","tabs","subscribeToTabLabels","getTabLabelId","getTabContentId","setTabBodyWrapperHeight","tabHeight","wrapper","tabBodyWrapper","removeTabBodyWrapperHeight","handleClick","tabHeader","getTabIndex","[class.mc-tab-group_dynamic-height]","[class.mc-tab-group_inverted-header]","modalControl","closeAll","McModalService","mcOnCancel","mcCloseByESC","mcWidth","ModalBuilderForService","getInstance","confirm","confirmType","mcOnOk","mcModalType","mcClassName","mcMaskClosable","success","simpleConfirm","delete","mcCancelText","Injectable","McModalControlService","McModalModule","McButtonModule","McModalComponent","CssUnitPipe","MC_NAVBAR_CONTAINER","MC_NAVBAR_ITEM","MC_NAVBAR_BRAND","MC_NAVBAR_TITLE","McNavbarLogo","McNavbarBrand","McNavbarTitle","McNavbarItemBase","_McNavbarMixinBase","McNavbarItem","_platform","_cdRef","dropdownItems","isCollapsed","_subscription","encodeURI","dropdownContent","denyClickIfDisabled","_focusMonitor$","hasDropdownContent","listenClickOutside","startListenFocusDropdownItems","stopListenFocusDropdownItems","isActiveDropdownLink","link","isBrowser","location","href","handleClickByItem","toggleDropdown","isNavbarItem","target","contains","handleClickByDropdownItem","forceCloseDropdown","_dropdownElements","el","events","eventListeners","hasAttribute","stopImmediatePropagation","[attr.disabled]","Platform","McNavbarContainer","CollapsibleItem","_collapsed","processCollapsed","collapsed","updateCollapsedClass","CachedItemWidth","itemsForCollapse","_collapsedItemsWidth","calculateAndCacheCollapsedItemsWidth","updateTitle","acc","getTitle","computedTitle","getAttribute","decodeURI","innerText","removeAttribute","McNavbar","forceRecalculateItemsWidth","resizeDebounceInterval","firstLevelElement","secondLevelElements","resizeObserver","debounceTime","_resizeSubscription","updateCollapsed","_itemsWidths","calculateAndCacheItemsWidth","_totalItemsWidths","calculateAndCacheTotalItemsWidth","collapseDelta","maxAllowedWidth","itemsWidths","canCollapse","collapsedItemsWidth","getOuterElementWidth","getPropertyValue","allItemsSelector","allItems","from","getItemsForCollapse","McNavbarModule","idIterator","McProgressBarBase","_McProgressBarMixinBase","McProgressBar","mode","McProgressBarModule","McProgressSpinnerBase","_McProgressSpinnerMixinBase","McProgressSpinner","percentage","McProgressSpinnerModule","McRadioChange","McRadioGroupBase","_McRadioGroupMixinBase","MC_RADIO_GROUP_CONTROL_VALUE_ACCESSOR","McRadioGroup","_changeDetector","_name","_selected","_isInitialized","_labelPosition","controlValueAccessorChangeFn","updateRadioButtonNames","markRadiosForCheck","updateSelectedRadioFromValue","checkSelectedRadioButton","toBoolean","touch","emitChangeEvent","_radios","radio","isAlreadySelected","McRadioButton","McRadioButtonBase","_McRadioButtonMixinBase","radioGroup","_radioDispatcher","removeUniqueSelectionListener","newCheckedState","notify","newDisabledState","required","onInputClick","onInputChange","groupValueChanged","[class.mc-checked]","UniqueSelectionDispatcher","McRadioModule","McTreeNodeDef_1","CdkTreeNodeDef","_baseLeftPadding","_iconWidth","_indent","McTreeNodePadding_1","_withIcon","_paddingIndent","nodeLevel","_treeNode","_tree","_level","leftPadding","_setPadding","CdkTreeNodePadding","treeSelection","_hasFocus","McTreeNodeOption_1","_handleFocus","_handleBlur","_handleClick","tabindex","[class.mc-selected]","[class.mc-focused]","[attr.aria-expanded]","[attr.aria-level]","(click)","CdkTreeNode","McTreeSelectionChange","_differs","rawValue","log","_onKeyDown","collapse","PAGE_UP","setPreviousPageItemActive","MC_SELECTION_LIST_VALUE_ACCESSOR","McListSelection","_McListSelectionMixinBase","McListBase","McList","McListSubheaderCssStyler","McListItemBase","McListItem","_element","_lineSetter","McLineSetter","_lines","_getHostElement","McLine","McListModule","McLineModule","McListOption","McLinkBase","_McLinkBase","McLink","McLinkModule","parentService","rootOpenModals","rootAfterAllClose","rootRegisteredMetaMap","afterAllClose","openModals","registeredMetaMap","registerModal","modalRef","hasRegistered","afterOpenSubscription","afterOpen","afterCloseSubscription","afterClose","removeOpenModal","has","SkipSelf","McModalRef","ModalUtil","document","lastPosition","listenDocumentClick","getLastClickPosition","clientX","clientY","ModalUtil$1","cfr","mcMeasureScrollbarService","changeDetector","mcZIndex","_mcClosable","_mcMask","_mcMaskClosable","mcAfterOpen","mcAfterClose","mcOkType","_mcOkLoading","_mcCancelLoading","transformOrigin","mcGetContainer","mcOkText","animationState","isComponent","mcContent","createDynamicComponent","isModalButtons","mcFooter","formatModalButtons","container","HTMLElement","OverlayRef","handleVisibleStateChange","firstChange","contentComponentRef","bodyContainer","insert","autoFocusButtonOk","changeVisibleFromInside","destroy","triggerOk","onClickOkCancel","triggerCancel","getContentComponentRef","getContentComponent","getElement","onClickMask","mcMask","isModalType","type","onClickCloseBtn","ok","cancel","loadingKey","caseClose_1","doClose","isPromise","handleThen","catch","isNonEmptyString","isTemplateRef","Type","animation","closeResult","changeBodyOverflow","animateTo","getButtonCallableProp","prop","args","onButtonClick","button","loading","changeAnimationState","maskAnimationClassMap","modalAnimationClassMap","_b","isVisible","updateTransformOrigin","buttons","autoLoading","component","factory","resolveComponentFactory","childInjector","Injector","parent","parentInjector","mcComponentParams","assign","modalElement","modalContainer","plusNum","body","scrollBarWidth","DOCUMENT","McMeasureScrollbarService","defaultUnit","formatted","Pipe","createModal","changeProps","destroyModal","keydownEvents","McFormFieldBase","_McFormFieldMixinBase","_labelId","hovered","_validateControlChild","_control","_numberControl","hasStepper","_stepper","stepUp","onStepUp","stepDown","onStepDown","valueChanges","clearValue","hasCleaner","onHoverChanged","isHovered","step","_shouldForward","getMcFormFieldMissingControlError","_hint","_suffix","_prefix","_cleaner","McFormFieldNumberControl","McStepper","McHint","McSuffix","McPrefix","McCleaner","[class.mc-form-field_invalid]","[class.mc-form-field_has-prefix]","[class.mc-form-field_has-suffix]","[class.mc-form-field_has-cleaner]","[class.mc-form-field_has-stepper]","[class.ng-untouched]","[class.ng-touched]","[class.ng-pristine]","[class.ng-dirty]","[class.ng-valid]","[class.ng-invalid]","[class.ng-pending]","(mouseenter)","(mouseleave)","McFormFieldWithoutBorders","res","MC_INPUT_INVALID_TYPES","BIG_STEP","SMALL_STEP","McInputBase","_McInputMixinBase","McNumberInput","_model","bigStep","isDigit","Infinity","_host","self","getPrototypeOf","normalizeSplitter","McNumberInput_1","_focusChanged","minuses","NUMPAD_MINUS","DASH","FF_MINUS","serviceKeys","DELETE","BACKSPACE","TAB","arrows","allowedKeys","concat","isIEPeriod","isNotIEPeriod","metaKey","C","V","X","F1","F12","EDGE","TRIDENT","ZERO","NINE","NUMPAD_ZERO","NUMPAD_NINE","valueAsNumber","update","replace","isFloat","isInt","test","NgModel","McInput","_type","_neverEmptyInputTypes","t","getSupportedInputTypes","_inputValueAccessor","_previousNativeValue","McInput_1","_validateType","_dirtyCheckNativeValue","_onInput","_isNeverEmpty","_isBadInput","getMcInputUnsupportedTypeError","McInputMono","MIN_VALIDATOR","MinValidator","_createValidator","_validator","[attr.min]","MAX_VALIDATOR","MaxValidator","[attr.max]","McInputModule","McContentComponent","[class.mc-layout-content]","McFooterComponent","[class.mc-layout-footer]","McHeaderComponent","[class.mc-layout-header]","McLayoutComponent","hasSidebar","[class.mc-layout]","[class.mc-layout-has-sidebar]","McSidebarComponent","mcLayoutComponent","_mcWidth","mcCollapsedWidth","mcCollapsedChange","collapsible","mcCollapsed","[class.mc-layout-sidebar]","[class.mc-layout-sidebar-collapsed]","[style.flex]","[style.max-width.px]","[style.min-width.px]","[style.width.px]","Host","McLayoutModule","listSelection","checkboxPosition","_reportValueChange","wasSelected_1","_removeOptionFromList","getLabel","_text","McListSelectionChange","McListSelectionBase","horizontal","_modelChanges","_tempValues","_setOptionsFromValues","_i","_c","selectAll","deselectAll","values","getSelectedOptionValues","listOption","optionIndex","setPreviousItemActive","setNextItemActive","_getOptionByValue","Boolean","McIconButton","McButton","McAnchor","McButtonCSSStyler","McIconButtonCSSStyler","McCard","readonly","selectedChange","_tabIndex","hostElement","onClick","[class.mc-card_readonly]","[class.mc-card_selected]","McCardModule","MC_CHECKBOX_CLICK_ACTION","MC_CHECKBOX_CONTROL_VALUE_ACCESSOR","McCheckbox","TransitionCheckState","McCheckboxChange","McCheckboxBase","_McCheckboxMixinBase","_clickAction","indeterminateChange","_currentAnimationClass","_currentCheckState","Init","_controlValueAccessorChangeFn","_indeterminate","focusOrigin","_onInputFocusChange","changed","_transitionCheckState","Indeterminate","Checked","Unchecked","indeterminate","newState","oldState","[class.mc-indeterminate]","[class.mc-checkbox-label-before]","MC_CHECKBOX_REQUIRED_VALIDATOR","McCheckboxRequiredValidator","[attr.required]","CheckboxRequiredValidator","McCheckboxModule","McDivider","_vertical","_inset","[attr.aria-orientation]","[class.mc-divider-vertical]","[class.mc-divider-inset]","McDividerModule","McDropdownContent","_template","_componentFactoryResolver","_appRef","_injector","_viewContainerRef","_document","_attached","context","_portal","_outlet","DomPortalOutlet","createElement","parentNode","insertBefore","outletElement","isAttached","ApplicationRef","MC_DROPDOWN_PANEL","McDropdownItemBase","_McDropdownItemMixinBase","McDropdownItem","_parentDropdownPanel","addItem","removeItem","_getTabIndex","_checkDisabled","textNodeType","TEXT_NODE","output","childNodes","length_1","nodeType","mcDropdownAnimations","transformDropdown","fadeInItems","MC_DROPDOWN_DEFAULT_OPTIONS","providedIn","MC_DROPDOWN_DEFAULT_OPTIONS_FACTORY","McDropdown","_defaultOptions","_classList","_panelAnimationState","_animationDone","backdropClass","closed","_xPosition","xPosition","_yPosition","yPosition","_items","_itemChanges","_tabSubscription","_overlapTrigger","overlapTrigger","_hasBackdrop","hasBackdrop","McDropdown_1","throwMcDropdownInvalidPositionX","setPositionClasses","throwMcDropdownInvalidPositionY","classes","obj","className","setFocusOrigin","focusFirstItem","lazyContent","resetActiveItem","posX","posY","_startAnimation","_resetAnimation","_onAnimationDone","_isAnimating","MC_DROPDOWN_SCROLL_STRATEGY","MC_DROPDOWN_SCROLL_STRATEGY_FACTORY_PROVIDER","MC_DROPDOWN_SCROLL_STRATEGY_FACTORY","McDropdownTrigger","_overlay","_openedBy","dropdownOpened","dropdownClosed","_overlayRef","_opened","_closeSubscription","_hoverSubscription","dropdown","_check","_cleanUpSubscriptions","_createOverlay","_setPosition","_closingActions","_init","opened","_reset","_setIsOpened","isOpen","throwMcDropdownMissingError","templateRef","config","_getOverlayConfig","_subscribeToPositions","OverlayConfig","withLockedPosition","originFallbackX","overlayFallbackY","originFallbackY","_d","overlayFallbackX","offsetY","backdrop","backdropClick","(touchstart)","McDropdownModule","__extends","d","__","constructor","extendStatics","__decorate","decorators","desc","r","getOwnPropertyDescriptor","Reflect","decorate","__param","paramIndex","decorator","__metadata","metadataKey","metadataValue","metadata","isBoolean","val","MC_SANITY_CHECKS_FACTORY","base","class_1","defaultColor","Default","_color","colorPalette","defaultTabIndex","errorState","matcher","errorStateMatcher","isErrorState","optionsArray","groups","groupCounter","optionHeight","currentScrollPosition","optionOffset","arrayMap","array","iteratee","baseValues","object","props","scrollStrategies","reposition","inputType","sanitizeNumber","isFinite","getPrecision","arr","pow","value1","value2","precision","scrollThrottle","setPrototypeOf","__proto__","p","__assign","s","n","MC_SANITY_CHECKS","_sanityChecksEnabled","_hasDoneGlobalChecks","_window","_areChecksEnabled","_checkDoctypeIsDefined","_checkThemeIsPresent","_isTestEnv","doctype","testElement","computedStyle","display","removeChild","BidiModule","_setLineClass","count","_resetClasses","_setClass","isAdd","ShowOnDirtyErrorStateMatcher","form","invalid","dirty","submitted","touched","McPseudoCheckbox","McPseudoCheckboxModule","scrollbarMeasure","overflow","initScrollBarWidth","_scrollbarWidth","scrollDiv","scrollProp","clientWidth","McOptgroupBase","_McOptgroupMixinBase","_uniqueOptgroupIdCounter","[class.mc-optgroup-disabled]","[attr.aria-labelledby]","_uniqueIdCounter","McOptionSelectionChange","_parent","_active","_mostRecentViewValue","disableRipple","_emitSelectionChangeEvent","setActiveStyles","setInactiveStyles","ngAfterViewChecked","[class.mc-option-multiple]","MC_LABEL_GLOBAL_OPTIONS","topCenter","topLeft","topRight","rightTop","rightBottom","bottomCenter","bottomLeft","bottomRight","leftTop","leftBottom","McIconCSSStyler","McIconBase","_McIconMixinBase","Empty","iconName","queries","McButtonBase","_McButtonMixinBase","_haltDisabledEvents"],"mappings":"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"}