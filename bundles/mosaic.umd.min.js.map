{"version":3,"file":"mosaic.umd.min.js","sources":["../../src/lib/splitter/splitter.component.ts","../../src/lib/splitter/splitter.module.ts","../../src/lib/toggle/toggle.component.ts","../../src/lib/toggle/toggle.module.ts","../../src/lib/tooltip/tooltip.component.ts","../../src/lib/tooltip/tooltip.module.ts","../../src/lib/version.ts","../../src/lib/timepicker/timepicker.constants.ts","../../src/lib/select/select.component.ts","../../src/lib/timepicker/timepicker.ts","../../src/lib/timepicker/timepicker.module.ts","../../src/lib/select/select-animations.ts","../../src/lib/select/select.module.ts","../../src/lib/progress-spinner/progress-spinner.component.ts","../../src/lib/progress-spinner/progress-spinner.module.ts","../../src/lib/radio/radio.component.ts","../../src/lib/radio/radio.module.ts","../../src/lib/tree/node.ts","../../src/lib/tree/padding.ts","../../src/lib/tree/tree-selection.ts","../../src/lib/tree/tree.module.ts","../../src/lib/tree/data-source/flat-data-source.ts","../../src/lib/tree/data-source/nested-data-source.ts","../../src/lib/tag/tag.component.ts","../../src/lib/tag/tag.module.ts","../../src/lib/modal/modal.component.ts","../../src/lib/modal/css-unit.pipe.ts","../../src/lib/modal/modal.service.ts","../../src/lib/modal/modal.module.ts","../../src/lib/navbar/navbar.component.ts","../../src/lib/navbar/navbar.module.ts","../../src/lib/progress-bar/progress-bar.component.ts","../../src/lib/progress-bar/progress-bar.module.ts","../../src/lib/input/input-number-validators.ts","../../src/lib/input/input.module.ts","../../src/lib/layout/content.component.ts","../../src/lib/layout/footer.component.ts","../../src/lib/layout/header.component.ts","../../src/lib/layout/layout.component.ts","../../src/lib/layout/sidebar.component.ts","../../src/lib/layout/layout.module.ts","../../src/lib/list/list-selection.component.ts","../../src/lib/list/list.component.ts","../../src/lib/list/list.module.ts","../../src/lib/link/link.component.ts","../../src/lib/link/link.module.ts","../../src/lib/modal/modal-control.service.ts","../../src/lib/modal/modal-ref.class.ts","../../src/lib/modal/modal-util.ts","../../src/lib/button/button.component.ts","../../src/lib/button/button.module.ts","../../src/lib/card/card.component.ts","../../src/lib/card/card.module.ts","../../src/lib/checkbox/checkbox-config.ts","../../src/lib/checkbox/checkbox.ts","../../src/lib/checkbox/checkbox-required-validator.ts","../../src/lib/checkbox/checkbox-module.ts","../../src/lib/divider/divider.component.ts","../../src/lib/divider/divider.module.ts","../../src/lib/form-field/cleaner.ts","../../src/lib/form-field/form-field-control.ts","../../src/lib/form-field/form-field-number-control.ts","../../src/lib/form-field/hint.ts","../../src/lib/form-field/prefix.ts","../../src/lib/form-field/stepper.ts","../../src/lib/form-field/suffix.ts","../../src/lib/form-field/form-field.ts","../../src/lib/form-field/form-field.module.ts","../../src/lib/input/input-value-accessor.ts","../../src/lib/input/stepperUtils.ts","../../src/lib/input/input.ts","../../node_modules/tslib/tslib.es6.js","../../src/lib/core/utils/utils.ts","../../src/lib/core/common-behaviors/common-module.ts","../../src/lib/core/common-behaviors/disabled.ts","../../src/lib/core/common-behaviors/color.ts","../../src/lib/core/common-behaviors/tabindex.ts","../../src/lib/core/common-behaviors/error-state.ts","../../src/lib/core/option/option.ts","../../src/lib/core/overlay/overlay-position-map.ts","../../src/lib/form-field/form-field-errors.ts","../../src/lib/input/input-errors.ts","../../src/lib/select/select-errors.ts","../../src/lib/core/line/line.ts","../../src/lib/core/error/error-options.ts","../../src/lib/core/selection/pseudo-checkbox/pseudo-checkbox.ts","../../src/lib/core/selection/index.ts","../../src/lib/core/services/measure-scrollbar.service.ts","../../src/lib/core/option/optgroup.ts","../../src/lib/core/option/index.ts","../../src/lib/core/label/label-options.ts","../../src/lib/core/animation/fade-animations.ts","../../src/lib/icon/icon.component.ts","../../src/lib/icon/icon.module.ts"],"sourcesContent":["import {\n    ChangeDetectionStrategy,\n    Component,\n    Directive,\n    ElementRef,\n    Input,\n    NgZone, OnDestroy,\n    OnInit,\n    Renderer2,\n    ViewEncapsulation\n} from '@angular/core';\n\nimport { coerceBooleanProperty, coerceCssPixelValue, coerceNumberProperty } from '@ptsecurity/cdk/coercion';\n\n\ninterface IArea {\n    area: McSplitterAreaDirective;\n    index: number;\n    order: number;\n    initialSize: number;\n}\n\ninterface IPoint {\n    x: number;\n    y: number;\n}\n\n\nconst enum AttributeProperty {\n    Disabled = 'disabled'\n}\n\nconst enum Cursor {\n    Default = 'default',\n    ResizeColumn = 'col-resize',\n    ResizeRow = 'row-resize'\n}\n\nconst enum StyleProperty {\n    Cursor = 'cursor',\n    Flex = 'flex',\n    FlexBasis = 'flex-basis',\n    FlexDirection = 'flex-direction',\n    Height = 'height',\n    MaxWidth = 'max-width',\n    MinHeight = 'min-height',\n    MinWidth = 'minWidth',\n    OffsetHeight = 'offsetHeight',\n    OffsetWidth = 'offsetWidth',\n    Order = 'order',\n    Width = 'width'\n}\n\nconst enum State {\n    Disabled = 'disabled',\n    Horizontal = 'horizontal',\n    Vertical = 'vertical'\n}\n\nexport const enum Direction {\n    Horizontal = 'horizontal',\n    Vertical = 'vertical'\n}\n\n@Component({\n    selector: 'mc-splitter',\n    preserveWhitespaces: false,\n    styleUrls: ['splitter.css'],\n    templateUrl: './splitter.component.html',\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class McSplitterComponent implements OnInit {\n    readonly areas: IArea[] = [];\n\n    private _direction: Direction;\n    private _disabled: boolean = false;\n    private _gutterSize: number = 6;\n\n    private isDragging: boolean = false;\n\n    private readonly areaPositionDivider: number = 2;\n    private readonly listeners: (() => void)[] = [];\n\n    @Input()\n    set direction(direction: Direction) {\n        this._direction = direction;\n    }\n\n    get direction(): Direction {\n        return this._direction;\n    }\n\n    @Input()\n    set disabled(disabled: boolean) {\n        this._disabled = coerceBooleanProperty(disabled);\n    }\n\n    get disabled(): boolean {\n        return this._disabled;\n    }\n\n    @Input()\n    set gutterSize(gutterSize: number) {\n        const size = coerceNumberProperty(gutterSize);\n        this._gutterSize = size > 0 ? size : this.gutterSize;\n    }\n\n    get gutterSize(): number {\n        return this._gutterSize;\n    }\n\n    constructor(private elementRef: ElementRef,\n                private ngZone: NgZone,\n                private renderer: Renderer2) {}\n\n    addArea(area: McSplitterAreaDirective): void {\n        const index: number = this.areas.length;\n        const order: number = index * this.areaPositionDivider;\n        const size: number = area.getSize();\n\n        area.setOrder(order);\n\n        this.areas.push({\n            area,\n            index,\n            order,\n            initialSize: size\n        });\n    }\n\n    ngOnInit(): void {\n        if (!this.direction) {\n            this.direction = Direction.Horizontal;\n        }\n\n        this.setStyle(StyleProperty.FlexDirection, this.isVertical() ? 'column' : 'row');\n    }\n\n    onMouseDown(event: MouseEvent, leftAreaIndex: number, rightAreaIndex: number) {\n        if (this.disabled) {\n            return;\n        }\n\n        const leftArea = this.areas[leftAreaIndex];\n        const rightArea = this.areas[rightAreaIndex];\n\n        const startPoint: IPoint = {\n            x: event.screenX,\n            y: event.screenY\n        };\n\n        leftArea.initialSize = leftArea.area.getSize();\n        rightArea.initialSize = rightArea.area.getSize();\n\n        this.areas.forEach((item) => {\n            const size = item.area.getSize();\n            item.area.disableFlex();\n            item.area.setSize(size);\n        });\n\n        this.ngZone.runOutsideAngular(() => {\n            this.listeners.push(\n                this.renderer.listen(\n                    'document',\n                    'mouseup',\n                    () => this.onMouseUp()\n                )\n            );\n        });\n\n        this.ngZone.runOutsideAngular(() => {\n            this.listeners.push(\n                this.renderer.listen(\n                    'document',\n                    'mousemove',\n                    (e: MouseEvent) => this.onMouseMove(e, startPoint, leftArea, rightArea)\n                )\n            );\n        });\n\n        this.isDragging = true;\n    }\n\n    removeArea(area: McSplitterAreaDirective): void {\n        let indexToRemove: number = -1;\n\n        this.areas.some((item, index) => {\n            if (item.area === area) {\n                indexToRemove = index;\n\n                return true;\n            }\n\n            return false;\n        });\n\n        if (indexToRemove === -1) {\n            return;\n        }\n\n        this.areas.splice(indexToRemove, 1);\n    }\n\n    private isVertical(): boolean {\n        return this.direction === Direction.Vertical;\n    }\n\n    private onMouseMove(event: MouseEvent, startPoint: IPoint, leftArea: IArea, rightArea: IArea) {\n        if (!this.isDragging || this.disabled) {\n            return;\n        }\n\n        const endPoint: IPoint = {\n            x: event.screenX,\n            y: event.screenY\n        };\n\n        const offset = this.isVertical()\n            ? startPoint.y - endPoint.y\n            : startPoint.x - endPoint.x;\n\n        const newLeftAreaSize = leftArea.initialSize - offset;\n        const newRightAreaSize = rightArea.initialSize + offset;\n\n        const minLeftAreaSize = leftArea.area.getMinSize();\n        const minRightAreaSize = rightArea.area.getMinSize();\n\n        if (newLeftAreaSize <= minLeftAreaSize || newRightAreaSize <= minRightAreaSize) {\n            const rightAreaOffset = leftArea.initialSize - minLeftAreaSize;\n\n            leftArea.area.setSize(minLeftAreaSize);\n            rightArea.area.setSize(rightArea.initialSize + rightAreaOffset);\n        } else if (newLeftAreaSize <= 0) {\n            leftArea.area.setSize(0);\n            rightArea.area.setSize(rightArea.initialSize + leftArea.initialSize);\n        } else if (newRightAreaSize <= 0) {\n            leftArea.area.setSize(rightArea.initialSize + leftArea.initialSize);\n            rightArea.area.setSize(0);\n        } else {\n            leftArea.area.setSize(newLeftAreaSize);\n            rightArea.area.setSize(newRightAreaSize);\n        }\n    }\n\n    private onMouseUp() {\n        while (this.listeners.length > 0) {\n            const unsubscribe = this.listeners.pop();\n\n            if (unsubscribe) {\n                unsubscribe();\n            }\n        }\n\n        this.isDragging = false;\n    }\n\n    private setStyle(property: StyleProperty, value: string | number) {\n        this.renderer.setStyle(this.elementRef.nativeElement, property, value);\n    }\n}\n\n@Directive({\n    selector: 'mc-gutter'\n})\nexport class McGutterDirective implements OnInit {\n    private _direction: Direction = Direction.Vertical;\n    private _disabled: boolean = false;\n    private _order: number = 0;\n    private _size: number = 6;\n\n    @Input()\n    set direction(direction: Direction) {\n        this._direction = direction;\n    }\n\n    get direction(): Direction {\n        return this._direction;\n    }\n\n    @Input()\n    set disabled(disabled: boolean) {\n        this._disabled = coerceBooleanProperty(disabled);\n    }\n\n    get disabled(): boolean {\n        return this._disabled;\n    }\n\n    @Input()\n    set order(order: number) {\n        this._order = coerceNumberProperty(order);\n    }\n\n    get order(): number {\n        return this._order;\n    }\n\n    @Input()\n    set size(size: number) {\n        this._size = coerceNumberProperty(size);\n    }\n\n    get size(): number {\n        return this._size;\n    }\n\n    constructor(private renderer: Renderer2,\n                private elementRef: ElementRef) {\n    }\n\n    ngOnInit(): void {\n        this.setStyle(StyleProperty.Cursor, this.getCursor(this.getState()));\n        this.setStyle(StyleProperty.FlexBasis, coerceCssPixelValue(this.size));\n        this.setStyle(this.isVertical() ? StyleProperty.Height : StyleProperty.Width, coerceCssPixelValue(this.size));\n        this.setStyle(StyleProperty.Order, this.order);\n\n        if (!this.isVertical()) {\n            this.setStyle(StyleProperty.Height, '100%');\n        }\n\n        if (this.disabled) {\n            this.setAttr(AttributeProperty.Disabled, 'true');\n        }\n\n        // fix IE issue with gutter icon. flex-direction is requied for flex alignment options\n        this.setStyle(StyleProperty.FlexDirection, this.isVertical() ? 'row' : 'column');\n    }\n\n    private isVertical(): boolean {\n        return this.direction === Direction.Vertical;\n    }\n\n    private getCursor(state: State): string {\n        switch (state) {\n            case State.Disabled:\n                return Cursor.Default;\n            case State.Vertical:\n                return  Cursor.ResizeRow;\n            case State.Horizontal:\n                return Cursor.ResizeColumn;\n            default:\n                throw Error(`Unknown gutter state for cursor: ${state}`);\n        }\n    }\n\n    private getState(): State {\n        return this.disabled\n            ? State.Disabled\n            : this.direction === Direction.Vertical\n                ? State.Vertical\n                : State.Horizontal;\n    }\n\n    private setStyle(property: StyleProperty, value: string | number) {\n        this.renderer.setStyle(this.elementRef.nativeElement, property, value);\n    }\n\n    private setAttr(attribute: AttributeProperty, value: string) {\n        this.renderer.setAttribute(this.elementRef.nativeElement, attribute, value);\n    }\n}\n\n@Directive({\n    selector: 'mc-splitter-area'\n})\nexport class McSplitterAreaDirective implements OnInit, OnDestroy {\n    constructor(private elementRef: ElementRef,\n                private renderer: Renderer2,\n                private splitter: McSplitterComponent) {}\n\n    disableFlex(): void {\n        this.renderer.removeStyle(this.elementRef.nativeElement, 'flex');\n    }\n\n    ngOnInit(): void {\n        this.splitter.addArea(this);\n\n        this.removeStyle(StyleProperty.MaxWidth);\n        this.setStyle(StyleProperty.Flex, '1');\n\n        if (this.splitter.direction === Direction.Vertical) {\n            this.setStyle(StyleProperty.Width, '100%');\n            this.removeStyle(StyleProperty.Height);\n        } else {\n            this.setStyle(StyleProperty.Height, '100%');\n            this.removeStyle(StyleProperty.Width);\n        }\n    }\n\n    ngOnDestroy(): void {\n        this.splitter.removeArea(this);\n    }\n\n    setOrder(order: number): void {\n        this.setStyle(StyleProperty.Order, order);\n    }\n\n    setSize(size: number): void {\n        const sz = coerceNumberProperty(size);\n        this.setStyle(this.getSizeProperty(), coerceCssPixelValue(sz));\n    }\n\n    getSize(): number {\n        return this.elementRef.nativeElement[this.getOffsetSizeProperty()];\n    }\n\n    getMinSize(): number {\n        const styles = getComputedStyle(this.elementRef.nativeElement);\n\n        return parseFloat(styles[this.getMinSizeProperty()]);\n    }\n\n    private isVertical(): boolean {\n        return this.splitter.direction === Direction.Vertical;\n    }\n\n    private getMinSizeProperty(): StyleProperty {\n        return this.isVertical()\n            ? StyleProperty.MinHeight\n            : StyleProperty.MinWidth;\n    }\n\n    private getOffsetSizeProperty(): StyleProperty {\n        return this.isVertical()\n            ? StyleProperty.OffsetHeight\n            : StyleProperty.OffsetWidth;\n    }\n\n    private getSizeProperty(): StyleProperty {\n        return this.isVertical()\n            ? StyleProperty.Height\n            : StyleProperty.Width;\n    }\n\n    private setStyle(style: StyleProperty, value: string | number) {\n        this.renderer.setStyle(this.elementRef.nativeElement, style, value);\n    }\n\n    private removeStyle(style: StyleProperty) {\n        this.renderer.removeStyle(this.elementRef.nativeElement, style);\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { McIconModule } from '@ptsecurity/mosaic/icon';\n\nimport { McGutterDirective, McSplitterAreaDirective, McSplitterComponent } from './splitter.component';\n\n\n@NgModule({\n    imports: [\n        CommonModule,\n        McIconModule\n    ],\n    exports: [\n        McGutterDirective,\n        McSplitterAreaDirective,\n        McSplitterComponent\n    ],\n    declarations: [\n        McGutterDirective,\n        McSplitterAreaDirective,\n        McSplitterComponent\n    ]\n})\nexport class McSplitterModule {\n}\n","// tslint:disable:no-empty\nimport { animate, state, style, transition, trigger } from '@angular/animations';\nimport {\n    Attribute,\n    ChangeDetectionStrategy, ChangeDetectorRef,\n    Component,\n    ElementRef, EventEmitter, forwardRef,\n    Input, Output, ViewChild,\n    ViewEncapsulation\n} from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { FocusMonitor } from '@ptsecurity/cdk/a11y';\nimport {\n    ThemePalette,\n    CanColor, CanColorCtor,\n    CanDisable, CanDisableCtor,\n    HasTabIndex, HasTabIndexCtor,\n    mixinColor,\n    mixinDisabled,\n    mixinTabIndex\n} from '@ptsecurity/mosaic/core';\n\n\nlet nextUniqueId = 0;\n\ntype ToggleLabelPositionType = 'left' | 'right';\n\nexport class McToggleBase {\n    constructor(public _elementRef: ElementRef) {}\n}\n\nexport const _McToggleMixinBase:\n    HasTabIndexCtor &\n    CanDisableCtor &\n    CanColorCtor &\n    typeof McToggleBase = mixinTabIndex(mixinColor(mixinDisabled(McToggleBase)));\n\nexport class McToggleChange {\n    source: McToggleComponent;\n    checked: boolean;\n}\n\n@Component({\n    selector: 'mc-toggle',\n    exportAs: 'mcToggle',\n    templateUrl: './toggle.component.html',\n    styleUrls: ['./toggle.css'],\n    providers: [\n        {provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => McToggleComponent), multi: true}\n    ],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n    inputs: ['disabled', 'color', 'tabIndex'],\n    host: {\n        '[id]': 'id',\n        '[attr.id]': 'id',\n        '[class.mc-disabled]': 'disabled',\n        '[class.mc-toggle-off]': '!checked'\n    },\n    animations: [\n        trigger('switch', [\n            state('true' , style({ right: '-1px' })),\n            state('false', style({ right: '*' })),\n            transition('* => *', animate('150ms'))\n        ])\n    ]\n})\nexport class McToggleComponent extends _McToggleMixinBase\n    implements ControlValueAccessor, CanColor, CanDisable, HasTabIndex {\n\n    color: ThemePalette = ThemePalette.Primary;\n\n    @ViewChild('input') _inputElement: ElementRef;\n\n    @Input() labelPosition: ToggleLabelPositionType = 'right';\n\n    @Input('aria-label') ariaLabel: string = '';\n    @Input('aria-labelledby') ariaLabelledby: string | null = null;\n\n    private _uniqueId: string = `mc-toggle-${++nextUniqueId}`;\n\n    // tslint:disable:member-ordering\n    @Input() id: string = this._uniqueId;\n\n    get inputId(): string {\n        return `${this.id || this._uniqueId}-input`;\n    }\n\n    @Input() name: string | null = null;\n\n    @Input() value: string;\n\n    private _disabled: boolean = false;\n\n    @Input()\n    get disabled() {\n        return this._disabled;\n    }\n\n    set disabled(value: any) {\n        if (value !== this._disabled) {\n            this._disabled = value;\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n\n    private _checked: boolean = false;\n\n    get checked() {\n        return this._checked;\n    }\n\n    @Input()\n    set checked(value: boolean) {\n        if (value !== this._checked) {\n            this._checked = value;\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n\n    @Output() readonly change: EventEmitter<McToggleChange> =\n        new EventEmitter<McToggleChange>();\n\n    constructor(public _elementRef: ElementRef,\n                private _focusMonitor: FocusMonitor,\n                private _changeDetectorRef: ChangeDetectorRef,\n                @Attribute('tabindex') tabIndex: string\n    ) {\n        super(_elementRef);\n\n        this.tabIndex = parseInt(tabIndex) || 0;\n\n        this._focusMonitor.monitor(this._elementRef.nativeElement, true);\n    }\n\n    ngOnDestroy() {\n        this._focusMonitor.stopMonitoring(this._elementRef.nativeElement);\n    }\n\n    focus(): void {\n        this._focusMonitor.focusVia(this._inputElement.nativeElement, 'keyboard');\n    }\n\n    _getAriaChecked(): boolean {\n        return this.checked;\n    }\n\n    _onInteractionEvent(event: Event) {\n        event.stopPropagation();\n    }\n\n    _onLabelTextChange() {\n        this._changeDetectorRef.markForCheck();\n    }\n\n    _onInputClick(event: MouseEvent) {\n        event.stopPropagation();\n        this._updateModelValue();\n        this._emitChangeEvent();\n    }\n\n    writeValue(value: any) {\n        this.checked = !!value;\n    }\n\n    registerOnChange(fn: any) {\n        this._onChangeCallback = fn;\n    }\n\n    registerOnTouched(fn: any) {\n        this._onTouchedCallback = fn;\n    }\n\n    setDisabledState(isDisabled: boolean) {\n        this.disabled = isDisabled;\n    }\n\n    private _onTouchedCallback = () => {};\n\n    private _onChangeCallback = (_: any) => {};\n\n    private _updateModelValue() {\n        this._checked = !this.checked;\n        this._onChangeCallback(this.checked);\n        this._onTouchedCallback();\n    }\n\n    private _emitChangeEvent() {\n        const event = new McToggleChange();\n        event.source = this;\n        event.checked = this.checked;\n\n        this._onChangeCallback(this.checked);\n        this.change.emit(event);\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { A11yModule } from '@ptsecurity/cdk/a11y';\nimport { McCommonModule } from '@ptsecurity/mosaic/core';\n\nimport { McToggleComponent } from './toggle.component';\n\n\n@NgModule({\n    imports: [CommonModule, BrowserAnimationsModule, A11yModule, McCommonModule],\n    exports: [McToggleComponent],\n    declarations: [McToggleComponent]\n})\nexport class McToggleModule {\n}\n","import {\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    Directive,\n    ElementRef,\n    EventEmitter,\n    HostBinding,\n    Inject,\n    InjectionToken,\n    Input,\n    NgZone,\n    OnDestroy,\n    OnInit,\n    Optional,\n    Output,\n    TemplateRef,\n    ViewContainerRef,\n    ViewEncapsulation\n} from '@angular/core';\nimport { Directionality } from '@ptsecurity/cdk/bidi';\nimport { coerceBooleanProperty } from '@ptsecurity/cdk/coercion';\nimport { ESCAPE } from '@ptsecurity/cdk/keycodes';\nimport {\n    ConnectedOverlayPositionChange,\n    ConnectionPositionPair,\n    Overlay,\n    OverlayRef,\n    ScrollDispatcher,\n    IScrollStrategy,\n    FlexibleConnectedPositionStrategy,\n    IOverlayConnectionPosition,\n    IOriginConnectionPosition,\n    HorizontalConnectionPos,\n    VerticalConnectionPos\n} from '@ptsecurity/cdk/overlay';\nimport { ComponentPortal } from '@ptsecurity/cdk/portal';\nimport {\n    fadeAnimation,\n    DEFAULT_4_POSITIONS,\n    POSITION_MAP\n} from '@ptsecurity/mosaic/core';\nimport { BehaviorSubject, Observable, Subject } from 'rxjs';\nimport { distinctUntilChanged, takeUntil } from 'rxjs/operators';\n\n\n@Component({\n    selector: 'mc-tooltip',\n    animations: [ fadeAnimation ],\n    templateUrl: './tooltip.component.html',\n    preserveWhitespaces: false,\n    styleUrls: ['./tooltip.css'],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    host: {\n        '(body:click)': 'this._handleBodyInteraction()'\n    }\n})\n\nexport class McToolTipComponent {\n    _prefix = 'mc-tooltip_placement';\n    _positions: ConnectionPositionPair[] = [ ...DEFAULT_4_POSITIONS ];\n    _classMap = {};\n    _placement = 'top';\n    _trigger = 'hover';\n    isTitleString: boolean;\n    visibleSource = new BehaviorSubject<boolean>(false);\n    $visible: Observable<boolean> = this.visibleSource.asObservable();\n    _title: string | TemplateRef<void>;\n    showTId: number;\n    hideTId: number;\n    availablePositions: any;\n\n    @Output() mcVisibleChange: EventEmitter<boolean> = new EventEmitter();\n\n    @Input() mcMouseEnterDelay = 400;\n\n    @Input() mcMouseLeaveDelay = 0;\n\n    @Input()\n    set mcTitle(value: string | TemplateRef<void>) {\n        this.isTitleString = !(value instanceof TemplateRef);\n\n        if (this.isTitleString) {\n            this._title = value;\n        }\n    }\n\n    get mcTitle(): string | TemplateRef<void> {\n        return this._title;\n    }\n\n    @Input()\n    set mcVisible(value: boolean) {\n        const visible = coerceBooleanProperty(value);\n\n        if (this.visibleSource.value !== visible) {\n            this.visibleSource.next(visible);\n            this.mcVisibleChange.emit(visible);\n        }\n    }\n\n    get mcVisible(): boolean {\n        return this.visibleSource.value;\n    }\n\n    @Input()\n    set mcTrigger(value: string) {\n        this._trigger = value;\n    }\n\n    get mcTrigger(): string {\n        return this._trigger;\n    }\n\n    @Input()\n    set mcPlacement(value: string) {\n        if (value !== this._placement) {\n            this._placement = value;\n            this._positions.unshift(POSITION_MAP[ this.mcPlacement ]);\n        } else if (!value) {\n            this._placement = 'top';\n        }\n    }\n    get mcPlacement(): string {\n        return this._placement;\n    }\n\n    /** Subject for notifying that the tooltip has been hidden from the view */\n    private readonly _onHide: Subject<any> = new Subject();\n    private _closeOnInteraction: boolean = false;\n\n    constructor(public cdr: ChangeDetectorRef) {\n        this.availablePositions = POSITION_MAP;\n    }\n\n    show(): void {\n        if (this.hideTId) {\n            clearTimeout(this.hideTId);\n        }\n\n        if (!this.isContentEmpty()) {\n            this._closeOnInteraction = true;\n            this.showTId = setTimeout(() => {\n                this.mcVisible = true;\n                this.mcVisibleChange.emit(true);\n\n                // Mark for check so if any parent component has set the\n                // ChangeDetectionStrategy to OnPush it will be checked anyways\n                this._markForCheck();\n            }, this.mcMouseEnterDelay);\n        }\n    }\n\n    hide(): void {\n        if (this.showTId) {\n            clearTimeout(this.showTId);\n        }\n\n        this.hideTId = setTimeout(() => {\n            this.mcVisible = false;\n            this.mcVisibleChange.emit(false);\n            this._onHide.next();\n\n            // Mark for check so if any parent component has set the\n            // ChangeDetectionStrategy to OnPush it will be checked anyways\n            this._markForCheck();\n        }, this.mcMouseLeaveDelay);\n    }\n\n    setClassMap(): void {\n        this._classMap = {\n            [ `${this._prefix}-${this._placement}` ]: true\n        };\n    }\n\n    isContentEmpty(): boolean {\n        return this.isTitleString ? (this.mcTitle === '' || !this.mcTitle) : false;\n    }\n\n    /** Returns an observable that notifies when the tooltip has been hidden from view. */\n    afterHidden(): Observable<void> {\n        return this._onHide.asObservable();\n    }\n\n    _markForCheck(): void {\n        this.cdr.markForCheck();\n    }\n\n    _handleBodyInteraction(): void {\n        if (this._closeOnInteraction) {\n            this.hide();\n        }\n    }\n}\n\nexport const MC_TOOLTIP_SCROLL_STRATEGY =\n    new InjectionToken<() => IScrollStrategy>('mc-tooltip-scroll-strategy');\n\n/** @docs-private */\nexport function MC_TOOLTIP_SCROLL_STRATEGY_FACTORY(overlay: Overlay): () => IScrollStrategy {\n    return () => overlay.scrollStrategies.reposition({scrollThrottle: 20});\n}\n\n/** @docs-private */\nexport const MC_TOOLTIP_SCROLL_STRATEGY_FACTORY_PROVIDER = {\n    provide: MC_TOOLTIP_SCROLL_STRATEGY,\n    deps: [Overlay],\n    useFactory: MC_TOOLTIP_SCROLL_STRATEGY_FACTORY\n};\n\n/** Creates an error to be thrown if the user supplied an invalid tooltip position. */\nexport function getMcTooltipInvalidPositionError(position: string) {\n    return Error(`McTooltip position \"${position}\" is invalid.`);\n}\n\nconst VIEWPORT_MARGIN: number = 8;\n\n@Directive({\n    selector: '[mc-tooltip]',\n    host: {\n        '(keydown)': 'handleKeydown($event)',\n        '(touchend)': 'handleTouchend()'\n    }\n})\n\nexport class McTooltipDirective implements OnInit, OnDestroy {\n    isTooltipOpen: boolean = false;\n    isDynamicTooltip = false;\n    parentDisabled: boolean = false;\n    _title: string;\n    _disabled: boolean = false;\n    _mouseEnterDelay: number;\n    _mouseLeaveDelay: number;\n    _visible: boolean;\n    _trigger: string = 'hover';\n    _placement: string = 'top';\n    _overlayRef: OverlayRef | null;\n    _portal: ComponentPortal<McToolTipComponent>;\n    availablePositions: any;\n    tooltip: McToolTipComponent | null;\n\n    @Output() mcVisibleChange = new EventEmitter<boolean>();\n    private $unsubscribe = new Subject<void>();\n\n    @Input('mc-tooltip')\n    set mcTitle(title: string) {\n        this._title = title;\n        this.updateCompValue('mcTitle', title);\n    }\n\n    get mcTitle(): string {\n        return this._title;\n    }\n\n    @Input('mcTitle')\n    set setTitle(title: string) {\n        this.mcTitle = title;\n    }\n\n    @Input('mcTooltipDisabled')\n    get disabled(): boolean { return this._disabled; }\n    set disabled(value) {\n        this._disabled = coerceBooleanProperty(value);\n    }\n\n    @Input('mcMouseEnterDelay')\n    set mcMouseEnterDelay(value: number) {\n        this._mouseEnterDelay = value;\n        this.updateCompValue('mcMouseEnterDelay', value);\n    }\n\n    get mcMouseEnterDelay(): number {\n        return this._mouseEnterDelay;\n    }\n\n    @Input('mcMouseLeaveDelay')\n    set mcMouseLeaveDelay(value: number) {\n        this._mouseLeaveDelay = value;\n        this.updateCompValue('mcMouseLeaveDelay', value);\n    }\n\n    get mcMouseLeaveDelay(): number {\n        return this._mouseEnterDelay;\n    }\n\n    @Input('mcVisible')\n    set mcVisible(value: boolean) {\n        this._visible = value;\n        this.updateCompValue('mcVisible', value);\n    }\n\n    get mcVisible(): boolean {\n        return this._visible;\n    }\n\n    @Input('mcTrigger')\n    set mcTrigger(value: string) {\n        this._trigger = value;\n        this.updateCompValue('mcTrigger', value);\n    }\n\n    get mcTrigger(): string {\n        return this._trigger;\n    }\n\n    @Input('mcPlacement')\n    set mcPlacement(value: string) {\n        if (value) {\n            this._placement = value;\n            this.updateCompValue('mcPlacement', value);\n        } else {\n            this._placement = 'top';\n        }\n    }\n\n    get mcPlacement(): string {\n        return this._placement;\n    }\n\n    @HostBinding('class.mc-tooltip-open')\n    get isOpen(): boolean {\n        return this.isTooltipOpen;\n    }\n\n    @HostBinding('class.disabled')\n    get isParentDisabled(): boolean {\n        return this.parentDisabled;\n    }\n\n    private manualListeners = new Map<string, EventListenerOrEventListenerObject>();\n    private readonly _destroyed = new Subject<void>();\n\n    constructor(\n        private _overlay: Overlay,\n        private elementRef: ElementRef,\n        private _ngZone: NgZone,\n        private _scrollDispatcher: ScrollDispatcher,\n        private hostView: ViewContainerRef,\n        @Inject(MC_TOOLTIP_SCROLL_STRATEGY) private _scrollStrategy,\n        @Optional() private _dir: Directionality) {\n            this.availablePositions = POSITION_MAP;\n        }\n\n    /** Create the overlay config and position strategy */\n    _createOverlay(): OverlayRef {\n        if (this._overlayRef) {\n            return this._overlayRef;\n        }\n\n        // Create connected position strategy that listens for scroll events to reposition.\n        const strategy = this._overlay.position()\n            .flexibleConnectedTo(this.elementRef)\n            .withTransformOriginOn('.mc-tooltip')\n            .withFlexibleDimensions(false)\n            .withViewportMargin(VIEWPORT_MARGIN)\n            .withPositions([ ...DEFAULT_4_POSITIONS ]);\n\n        const scrollableAncestors = this._scrollDispatcher\n            .getAncestorScrollContainers(this.elementRef);\n\n        strategy.withScrollableContainers(scrollableAncestors);\n\n        strategy.positionChanges.pipe(takeUntil(this._destroyed)).subscribe((change) => {\n            if (this.tooltip) {\n                this.onPositionChange(change);\n                if (change.scrollableViewProperties.isOverlayClipped && this.tooltip.mcVisible) {\n                    // After position changes occur and the overlay is clipped by\n                    // a parent scrollable then close the tooltip.\n                    this._ngZone.run(() => this.hide());\n                }\n            }\n        });\n\n        this._overlayRef = this._overlay.create({\n            direction: this._dir,\n            positionStrategy: strategy,\n            panelClass: 'mc-tooltip-panel',\n            scrollStrategy: this._scrollStrategy()\n        });\n\n        this._updatePosition();\n\n        this._overlayRef.detachments()\n            .pipe(takeUntil(this._destroyed))\n            .subscribe(() => this._detach());\n\n        return this._overlayRef;\n    }\n\n    _detach() {\n        if (this._overlayRef && this._overlayRef.hasAttached()) {\n            this._overlayRef.detach();\n        }\n\n        this.tooltip = null;\n    }\n\n    onPositionChange($event: ConnectedOverlayPositionChange): void {\n        let updatedPlacement = this.mcPlacement;\n        Object.keys(this.availablePositions).some((key) => {\n            if ($event.connectionPair.originX === this.availablePositions[key].originX &&\n                $event.connectionPair.originY === this.availablePositions[key].originY &&\n                $event.connectionPair.overlayX === this.availablePositions[key].overlayX &&\n                $event.connectionPair.overlayY === this.availablePositions[key].overlayY) {\n                updatedPlacement = key;\n\n                return true;\n            }\n\n            return false;\n        });\n        this.updateCompValue('mcPlacement', updatedPlacement);\n\n        if (this.tooltip) {\n            this.tooltip.setClassMap();\n        }\n\n        this.handlePositioningUpdate();\n    }\n\n    handlePositioningUpdate() {\n        if (!this._overlayRef) {\n            this._overlayRef = this._createOverlay();\n        }\n        if (this.mcPlacement === 'right' || this.mcPlacement === 'left') {\n            const pos =\n                (this._overlayRef.overlayElement.clientHeight -\n                    this.hostView.element.nativeElement.clientHeight) / 2; // tslint:disable-line\n            const currentContainer = this._overlayRef.overlayElement.style.top || '0px';\n            this._overlayRef.overlayElement.style.top =\n                `${parseInt(currentContainer.split('px')[0], 10) + pos - 1}px`;\n            // TODO: обновлять положение стрелки\\указателя\\\"дятла\"\n        }\n    }\n\n    // tslint:disable-next-line:no-any\n    updateCompValue(key: string, value: any): void {\n        if (this.isDynamicTooltip && value) {\n            if (this.tooltip) {\n                this.tooltip[key] = value;\n            }\n        }\n    }\n\n    ngOnInit(): void {\n        if (this.mcTrigger === 'hover') {\n\n            this.manualListeners\n                .set('mouseenter', () => this.show())\n                .set('mouseleave', () => this.hide())\n                .forEach((listener, event) => this.elementRef.nativeElement.addEventListener(event, listener));\n        }\n\n        if (this.mcTrigger === 'focus') {\n\n            this.manualListeners\n                .set('focus', () => this.show())\n                .set('blur', () => this.hide())\n                .forEach((listener, event) => this.elementRef.nativeElement.addEventListener(event, listener));\n        }\n    }\n\n    ngOnDestroy(): void {\n        if (this._overlayRef) {\n            this._overlayRef.dispose();\n        }\n        this.manualListeners.forEach((listener, event) =>\n            this.elementRef.nativeElement.removeEventListener(event, listener));\n        this.manualListeners.clear();\n\n        this.$unsubscribe.next();\n        this.$unsubscribe.complete();\n    }\n\n    handleKeydown(e: KeyboardEvent) {\n        if (this.isTooltipOpen && e.keyCode === ESCAPE) { // tslint:disable-line\n            this.hide();\n        }\n    }\n\n    handleTouchend() {\n        this.hide();\n    }\n\n    /** Updates the position of the current tooltip. */\n    _updatePosition() {\n        if (!this._overlayRef) {\n            this._overlayRef = this._createOverlay();\n        }\n        const position =\n            this._overlayRef.getConfig().positionStrategy as FlexibleConnectedPositionStrategy;\n        const origin = this._getOrigin();\n        const overlay = this._getOverlayPosition();\n\n        position.withPositions([\n            {...origin.main, ...overlay.main},\n            {...origin.fallback, ...overlay.fallback}\n        ]);\n    }\n\n    /**\n     * Returns the origin position and a fallback position based on the user's position preference.\n     * The fallback position is the inverse of the origin (e.g. `'below' -> 'above'`).\n     */\n    _getOrigin(): {main: IOriginConnectionPosition; fallback: IOriginConnectionPosition} {\n        const position = this.mcPlacement;\n        const isLtr = !this._dir || this._dir.value === 'ltr';\n        let originPosition: IOriginConnectionPosition;\n\n        if (position === 'top' || position === 'bottom') {\n            originPosition = {originX: 'center', originY: position === 'top' ? 'top' : 'bottom'};\n        } else if (\n            position === 'top' ||\n            (position === 'left' && isLtr) ||\n            (position === 'right' && !isLtr)) {\n            originPosition = {originX: 'start', originY: 'center'};\n        } else if (\n            position === 'bottom' ||\n            (position === 'right' && isLtr) ||\n            (position === 'left' && !isLtr)) {\n            originPosition = {originX: 'end', originY: 'center'};\n        } else {\n            throw getMcTooltipInvalidPositionError(position);\n        }\n\n        const {x, y} = this._invertPosition(originPosition.originX, originPosition.originY);\n\n        return {\n            main: originPosition,\n            fallback: {originX: x, originY: y}\n        };\n    }\n\n    /** Returns the overlay position and a fallback position based on the user's preference */\n    _getOverlayPosition(): {main: IOverlayConnectionPosition; fallback: IOverlayConnectionPosition} {\n        const position = this.mcPlacement;\n        const isLtr = !this._dir || this._dir.value === 'ltr';\n        let overlayPosition: IOverlayConnectionPosition;\n\n        if (position === 'top') {\n            overlayPosition = {overlayX: 'center', overlayY: 'bottom'};\n        } else if (position === 'bottom') {\n            overlayPosition = {overlayX: 'center', overlayY: 'top'};\n        } else if (\n            position === 'top' ||\n            (position === 'left' && isLtr) ||\n            (position === 'right' && !isLtr)) {\n            overlayPosition = {overlayX: 'end', overlayY: 'center'};\n        } else if (\n            position === 'bottom' ||\n            (position === 'right' && isLtr) ||\n            (position === 'left' && !isLtr)) {\n            overlayPosition = {overlayX: 'start', overlayY: 'center'};\n        } else {\n            throw getMcTooltipInvalidPositionError(position);\n        }\n\n        const {x, y} = this._invertPosition(overlayPosition.overlayX, overlayPosition.overlayY);\n\n        return {\n            main: overlayPosition,\n            fallback: {overlayX: x, overlayY: y}\n        };\n    }\n\n    /** Inverts an overlay position. */\n    private _invertPosition(x: HorizontalConnectionPos, y: VerticalConnectionPos) {\n        let newX: HorizontalConnectionPos = x;\n        let newY: VerticalConnectionPos = y;\n        if (this.mcPlacement === 'top' || this.mcPlacement === 'bottom') {\n            if (y === 'top') {\n                newY = 'bottom';\n            } else if (y === 'bottom') {\n                newY = 'top';\n            }\n        } else {\n            if (x === 'end') {\n                newX = 'start';\n            } else if (x === 'start') {\n                newX = 'end';\n            }\n        }\n\n        return {x: newX, y: newY};\n    }\n\n    private show(): void {\n        if (!this.disabled) {\n            if (!this.tooltip) {\n                const overlayRef = this._createOverlay();\n                this._detach();\n                this._portal = this._portal || new ComponentPortal(McToolTipComponent, this.hostView);\n                this.tooltip = overlayRef.attach(this._portal).instance;\n                this.tooltip.afterHidden()\n                    .pipe(takeUntil(this._destroyed))\n                    .subscribe(() => this._detach());\n                this.isDynamicTooltip = true;\n                const properties = [\n                    'mcTitle',\n                    'mcMouseEnterDelay',\n                    'mcMouseLeaveDelay',\n                    'mcVisible',\n                    'mcTrigger',\n                    'mcPlacement' ];\n                properties.forEach((property) => this.updateCompValue(property, this[ property ]));\n                this.tooltip.mcVisibleChange.pipe(takeUntil(this.$unsubscribe), distinctUntilChanged())\n                    .subscribe((data) => {\n                        this._visible = data;\n                        this.mcVisibleChange.emit(data);\n                    });\n            }\n            this._updatePosition();\n            this.tooltip.show();\n            this.isTooltipOpen = true;\n        }\n    }\n\n    private hide(): void {\n        if (this.tooltip) {\n            this.tooltip.hide();\n            this.isTooltipOpen = false;\n        }\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { OverlayModule } from '@ptsecurity/cdk/overlay';\n\nimport {\n    McToolTipComponent,\n    McTooltipDirective,\n    MC_TOOLTIP_SCROLL_STRATEGY_FACTORY_PROVIDER\n} from './tooltip.component';\n\n\n@NgModule({\n    declarations: [ McToolTipComponent, McTooltipDirective ],\n    exports: [ McToolTipComponent, McTooltipDirective ],\n    imports: [ BrowserAnimationsModule, CommonModule, OverlayModule ],\n    providers: [MC_TOOLTIP_SCROLL_STRATEGY_FACTORY_PROVIDER],\n    entryComponents: [ McToolTipComponent ]\n})\nexport class McToolTipModule {\n}\n","import { Version } from '@angular/core';\n\n\nexport const VERSION = new Version('0.0.1-dffeeec');\n","export enum TimeParts {\n    hours,\n    minutes,\n    seconds\n}\n\nexport enum TimeFormats {\n    HHmmss = 'HH:mm:ss',\n    HHmm = 'HH:mm'\n}\n\nexport const TIMEFORMAT_PLACEHOLDERS: { [timeFormat: string]: string } = {\n    'hh:mm:ss': '  :  :  ',\n    'hh:mm': '  :  '\n};\n\nexport const DEFAULT_TIME_FORMAT: TimeFormats = TimeFormats.HHmm;\n\nexport const HOURS_MINUTES_SECONDS_REGEXP =\n    new RegExp(/^([0-9]|0[0-9]|1[0-9]|2[0-3]):([0-5][0-9]|[0-9]):([0-5][0-9]|[0-9])?$/);\nexport const HOURS_MINUTES_REGEXP = /^([0-9]|0[0-9]|1[0-9]|2[0-3]):([0-5][0-9]|[0-9])?$/;\nexport const HOURS_ONLY_REGEXP = /^([0-9]|0[0-9]|1[0-9]|2[0-3]):?$/;\n\nexport const SECONDS_PER_MINUTE: number = 59;\nexport const MINUTES_PER_HOUR: number = 59;\nexport const HOURS_PER_DAY: number = 23;\n\n// TODO Move it to common CDK\nexport const ARROW_UP_KEYCODE: string = 'ArrowUp';\nexport const ARROW_DOWN_KEYCODE: string = 'ArrowDown';\nexport const ARROW_LEFT_KEYCODE: string = 'ArrowLeft';\nexport const ARROW_RIGHT_KEYCODE: string = 'ArrowRight';\n","/* tslint:disable:no-empty */\n\nimport { ActiveDescendantKeyManager } from '@ptsecurity/cdk/a11y';\nimport { Directionality } from '@ptsecurity/cdk/bidi';\nimport { coerceBooleanProperty } from '@ptsecurity/cdk/coercion';\nimport { SelectionModel } from '@ptsecurity/cdk/collections';\nimport {\n    DOWN_ARROW,\n    END,\n    ENTER,\n    HOME,\n    LEFT_ARROW,\n    RIGHT_ARROW,\n    SPACE,\n    UP_ARROW,\n    A\n} from '@ptsecurity/cdk/keycodes';\nimport {\n    CdkConnectedOverlay,\n    Overlay,\n    RepositionScrollStrategy,\n    IScrollStrategy,\n    ViewportRuler\n} from '@ptsecurity/cdk/overlay';\n\nimport {\n    AfterContentInit, AfterViewInit,\n    Attribute,\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    ContentChild,\n    ContentChildren,\n    Directive,\n    DoCheck,\n    ElementRef,\n    EventEmitter,\n    Inject,\n    InjectionToken,\n    Input,\n    isDevMode,\n    NgZone,\n    OnChanges,\n    OnDestroy,\n    OnInit,\n    Optional,\n    Output,\n    QueryList, Renderer2,\n    Self,\n    SimpleChanges,\n    ViewChild, ViewChildren,\n    ViewEncapsulation\n} from '@angular/core';\nimport { ControlValueAccessor, FormGroupDirective, NgControl, NgForm } from '@angular/forms';\nimport {\n    _countGroupLabelsBeforeOption,\n    _getOptionScrollPosition,\n    CanDisable,\n    CanDisableCtor,\n    CanUpdateErrorState,\n    CanUpdateErrorStateCtor,\n    ErrorStateMatcher,\n    HasTabIndex, HasTabIndexCtor,\n    MC_OPTION_PARENT_COMPONENT,\n    McOptgroup,\n    McOption,\n    McOptionSelectionChange,\n    mixinDisabled,\n    mixinErrorState,\n    mixinTabIndex\n} from '@ptsecurity/mosaic/core';\n\nimport { McFormField, McFormFieldControl } from '@ptsecurity/mosaic/form-field';\nimport { McTag } from '@ptsecurity/mosaic/tag';\n\n\nimport { defer, merge, Observable, Subject } from 'rxjs';\nimport {\n    filter,\n    map,\n    startWith,\n    switchMap,\n    take,\n    takeUntil,\n    distinctUntilChanged\n} from 'rxjs/operators';\n\nimport {\n    getMcSelectDynamicMultipleError,\n    getMcSelectNonArrayValueError,\n    getMcSelectNonFunctionValueError\n} from './select-errors';\n\nimport { mcSelectAnimations } from './select-animations';\n\n\nlet nextUniqueId = 0;\n\n/**\n * The following style constants are necessary to save here in order\n * to properly calculate the alignment of the selected option over\n * the trigger element.\n */\n\n/** The max height of the select's overlay panel */\nexport const SELECT_PANEL_MAX_HEIGHT = 224;\n\n/** The panel's padding on the x-axis */\nexport const SELECT_PANEL_PADDING_X = 1;\n\n/** The panel's x axis padding if it is indented (e.g. there is an option group). */\n/* tslint:disable-next-line:no-magic-numbers */\nexport const SELECT_PANEL_INDENT_PADDING_X = SELECT_PANEL_PADDING_X * 2;\n\n/** The height of the select items in `em` units. */\nexport const SELECT_ITEM_HEIGHT_EM = 2;\n\n/**\n * The select panel will only \"fit\" inside the viewport if it is positioned at\n * this value or more away from the viewport boundary.\n */\nexport const SELECT_PANEL_VIEWPORT_PADDING = 8;\n\n/** Injection token that determines the scroll handling while a select is open. */\nexport const MC_SELECT_SCROLL_STRATEGY =\n    new InjectionToken<() => IScrollStrategy>('mc-select-scroll-strategy');\n\n/** @docs-private */\nexport function MC_SELECT_SCROLL_STRATEGY_PROVIDER_FACTORY(overlay: Overlay):\n    () => RepositionScrollStrategy {\n    return () => overlay.scrollStrategies.reposition();\n}\n\n/** @docs-private */\nexport const MC_SELECT_SCROLL_STRATEGY_PROVIDER = {\n    provide: MC_SELECT_SCROLL_STRATEGY,\n    deps: [Overlay],\n    useFactory: MC_SELECT_SCROLL_STRATEGY_PROVIDER_FACTORY\n};\n\n/** Change event object that is emitted when the select value has changed. */\nexport class McSelectChange {\n    constructor(\n        /** Reference to the select that emitted the change event. */\n        public source: McSelect,\n        /** Current value of the select that emitted the event. */\n        public value: any) {\n    }\n}\n\n// Boilerplate for applying mixins to McSelect.\n/** @docs-private */\nexport class McSelectBase {\n    constructor(\n        public _elementRef: ElementRef,\n        public _defaultErrorStateMatcher: ErrorStateMatcher,\n        public _parentForm: NgForm,\n        public _parentFormGroup: FormGroupDirective,\n        public ngControl: NgControl\n    ) {}\n}\n\nexport const _McSelectMixinBase:\n    CanDisableCtor &\n    HasTabIndexCtor &\n    CanUpdateErrorStateCtor & typeof McSelectBase\n    = mixinTabIndex(mixinDisabled(mixinErrorState(McSelectBase)));\n\n\n/**\n * Allows the user to customize the trigger that is displayed when the select has a value.\n */\n@Directive({ selector: 'mc-select-trigger' })\nexport class McSelectTrigger {}\n\n\n@Component({\n    selector: 'mc-select',\n    exportAs: 'mcSelect',\n    templateUrl: 'select.html',\n    styleUrls: ['./select.css'],\n    inputs: ['disabled', 'tabIndex'],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    host: {\n        '[attr.id]': 'id',\n        '[attr.tabindex]': 'tabIndex',\n        class: 'mc-select',\n        '[class.mc-disabled]': 'disabled',\n        '[class.mc-select-invalid]': 'errorState',\n        '[class.mc-select-required]': 'required',\n        '(keydown)': '_handleKeydown($event)',\n        '(focus)': '_onFocus()',\n        '(blur)': '_onBlur()',\n        '(window:resize)': '_calculateHiddenItems()'\n    },\n    animations: [\n        mcSelectAnimations.transformPanel,\n        mcSelectAnimations.fadeInContent\n    ],\n    providers: [\n        { provide: McFormFieldControl, useExisting: McSelect },\n        { provide: MC_OPTION_PARENT_COMPONENT, useExisting: McSelect }\n    ]\n})\nexport class McSelect extends _McSelectMixinBase implements\n    AfterContentInit, AfterViewInit, OnChanges, OnDestroy, OnInit, DoCheck, ControlValueAccessor, CanDisable,\n    HasTabIndex, McFormFieldControl<any>, CanUpdateErrorState {\n\n    /** The last measured value for the trigger's client bounding rect. */\n    _triggerRect: ClientRect;\n\n    /** The cached font-size of the trigger element. */\n    _triggerFontSize = 0;\n\n    /** Deals with the selection logic. */\n    _selectionModel: SelectionModel<McOption>;\n\n    /** Manages keyboard events for options in the panel. */\n    _keyManager: ActiveDescendantKeyManager<McOption>;\n\n    /** The IDs of child options to be passed to the aria-owns attribute. */\n    _optionIds: string = '';\n\n    /** The value of the select panel's transform-origin property. */\n    _transformOrigin: string = 'top';\n\n    /** Whether the panel's animation is done. */\n    _panelDoneAnimating: boolean = false;\n\n    /** Emits when the panel element is finished transforming in. */\n    _panelDoneAnimatingStream = new Subject<string>();\n\n    /** Strategy that will be used to handle scrolling while the select panel is open. */\n    _scrollStrategy = this._scrollStrategyFactory();\n\n    /**\n     * The y-offset of the overlay panel in relation to the trigger's top start corner.\n     * This must be adjusted to align the selected option text over the trigger text.\n     * when the panel opens. Will change based on the y-position of the selected option.\n     */\n    _offsetY = 0;\n\n    /**\n     * This position config ensures that the top \"start\" corner of the overlay\n     * is aligned with with the top \"start\" of the origin by default (overlapping\n     * the trigger completely). If the panel cannot fit below the trigger, it\n     * will fall back to a position above the trigger.\n     */\n    _positions = [\n        {\n            originX: 'start',\n            originY: 'bottom',\n            overlayX: 'start',\n            overlayY: 'top'\n        },\n        {\n            originX: 'start',\n            originY: 'top',\n            overlayX: 'start',\n            overlayY: 'bottom'\n        }\n    ];\n\n    /** Whether the select is focused. */\n    get focused(): boolean {\n        return this._focused || this._panelOpen;\n    }\n\n    /**\n     * @deprecated Setter to be removed as this property is intended to be readonly.\n     * @breaking-change 8.0.0\n     */\n    set focused(value: boolean) {\n        this._focused = value;\n    }\n\n    /** A name for this control that can be used by `mc-form-field`. */\n    controlType = 'mc-select';\n\n    @ViewChild('trigger') trigger: ElementRef;\n    @ViewChildren(McTag) tags: QueryList<McTag>;\n\n    @ViewChild('panel') panel: ElementRef;\n\n    /** Overlay pane containing the options. */\n    @ViewChild(CdkConnectedOverlay) overlayDir: CdkConnectedOverlay;\n\n    /** All of the defined select options. */\n    @ContentChildren(McOption, { descendants: true }) options: QueryList<McOption>;\n\n    /** All of the defined groups of options. */\n    @ContentChildren(McOptgroup) optionGroups: QueryList<McOptgroup>;\n\n    /** Classes to be passed to the select panel. Supports the same syntax as `ngClass`. */\n    @Input() panelClass: string | string[] | Set<string> | { [key: string]: any };\n\n    /** User-supplied override of the trigger element. */\n    @ContentChild(McSelectTrigger) customTrigger: McSelectTrigger;\n\n    /** Placeholder to be shown if no value has been selected. */\n    @Input()\n    get placeholder(): string {\n        return this._placeholder;\n    }\n\n    set placeholder(value: string) {\n        this._placeholder = value;\n        this.stateChanges.next();\n    }\n\n    /** Whether the component is required. */\n    @Input()\n    get required(): boolean {\n        return this._required;\n    }\n\n    set required(value: boolean) {\n        this._required = coerceBooleanProperty(value);\n        this.stateChanges.next();\n    }\n\n    /** Whether the user should be allowed to select multiple options. */\n    @Input()\n    get multiple(): boolean {\n        return this._multiple;\n    }\n\n    set multiple(value: boolean) {\n        if (this._selectionModel) {\n            throw getMcSelectDynamicMultipleError();\n        }\n\n        this._multiple = coerceBooleanProperty(value);\n    }\n\n    /**\n     * Function to compare the option values with the selected values. The first argument\n     * is a value from an option. The second is a value from the selection. A boolean\n     * should be returned.\n     */\n    @Input()\n    get compareWith() {\n        return this._compareWith;\n    }\n\n    set compareWith(fn: (o1: any, o2: any) => boolean) {\n        /* tslint:disable-next-line:strict-type-predicates */\n        if (typeof fn !== 'function') {\n            throw getMcSelectNonFunctionValueError();\n        }\n\n        this._compareWith = fn;\n\n        if (this._selectionModel) {\n            // A different comparator means the selection could change.\n            this._initializeSelection();\n        }\n    }\n\n    /** Value of the select control. */\n    @Input()\n    get value(): any {\n        return this._value;\n    }\n\n    set value(newValue: any) {\n        if (newValue !== this._value) {\n            this.writeValue(newValue);\n            this._value = newValue;\n        }\n    }\n\n    /** Object used to control when error messages are shown. */\n    @Input() errorStateMatcher: ErrorStateMatcher;\n\n    /**\n     * Function used to sort the values in a select in multiple mode.\n     * Follows the same logic as `Array.prototype.sort`.\n     */\n    @Input() sortComparator: (a: McOption, b: McOption, options: McOption[]) => number;\n\n    @Input()\n    get id(): string {\n        return this._id;\n    }\n\n    set id(value: string) {\n        this._id = value || this._uid;\n        this.stateChanges.next();\n    }\n\n    /** Combined stream of all of the child options' change events. */\n    readonly optionSelectionChanges: Observable<McOptionSelectionChange> = defer(() => {\n        if (this.options) {\n            return merge(...this.options.map((option) => option.onSelectionChange));\n        }\n\n        return this._ngZone.onStable\n            .asObservable()\n            .pipe(take(1), switchMap(() => this.optionSelectionChanges));\n    });\n\n    /** Event emitted when the select panel has been toggled. */\n    @Output() readonly openedChange: EventEmitter<boolean> = new EventEmitter<boolean>();\n\n    /** Event emitted when the select has been opened. */\n    @Output('opened') readonly _openedStream: Observable<void> =\n        this.openedChange.pipe(filter((o) => o), map(() => {}));\n\n    /** Event emitted when the select has been closed. */\n    @Output('closed') readonly _closedStream: Observable<void> =\n        this.openedChange.pipe(filter((o) => !o), map(() => {}));\n\n    /** Event emitted when the selected value has been changed by the user. */\n    @Output() readonly selectionChange: EventEmitter<McSelectChange> = new EventEmitter<McSelectChange>();\n\n    /**\n     * Event that emits whenever the raw value of the select changes. This is here primarily\n     * to facilitate the two-way binding for the `value` input.\n     * @docs-private\n     */\n    @Output() readonly valueChange: EventEmitter<any> = new EventEmitter<any>();\n\n    hiddenItems: number = 0;\n\n    /** Whether or not the overlay panel is open. */\n    private _panelOpen = false;\n\n    /** Whether filling out the select is required in the form. */\n    private _required: boolean = false;\n\n    /** The scroll position of the overlay panel, calculated to center the selected option. */\n    private _scrollTop = 0;\n\n    /** The placeholder displayed in the trigger of the select. */\n    private _placeholder: string;\n\n    /** Whether the component is in multiple selection mode. */\n    private _multiple: boolean = false;\n\n    /** Unique id for this input. */\n    private readonly _uid = `mc-select-${nextUniqueId++}`;\n\n    /** Emits whenever the component is destroyed. */\n    private readonly _destroy = new Subject<void>();\n\n    private _focused = false;\n\n    private _value: any;\n\n    private _id: string;\n\n    constructor(\n        private readonly _viewportRuler: ViewportRuler,\n        private readonly _changeDetectorRef: ChangeDetectorRef,\n        private readonly _ngZone: NgZone,\n        private readonly _renderer: Renderer2,\n        _defaultErrorStateMatcher: ErrorStateMatcher,\n        elementRef: ElementRef,\n        @Optional() private readonly _dir: Directionality,\n        @Optional() _parentForm: NgForm,\n        @Optional() _parentFormGroup: FormGroupDirective,\n        @Optional() private readonly _parentFormField: McFormField,\n        @Self() @Optional() public ngControl: NgControl,\n        @Attribute('tabindex') tabIndex: string,\n        @Inject(MC_SELECT_SCROLL_STRATEGY) private readonly _scrollStrategyFactory\n    ) {\n        super(elementRef, _defaultErrorStateMatcher, _parentForm, _parentFormGroup, ngControl);\n\n        if (this.ngControl) {\n            // Note: we provide the value accessor through here, instead of\n            // the `providers` to avoid running into a circular import.\n            this.ngControl.valueAccessor = this;\n        }\n\n        this.tabIndex = parseInt(tabIndex) || 0;\n\n        // Force setter to be called in case id was not specified.\n        this.id = this.id;\n    }\n\n    ngOnInit() {\n        this._selectionModel = new SelectionModel<McOption>(this.multiple);\n        this.stateChanges.next();\n\n        // We need `distinctUntilChanged` here, because some browsers will\n        // fire the animation end event twice for the same animation. See:\n        // https://github.com/angular/angular/issues/24084\n        this._panelDoneAnimatingStream\n            .pipe(distinctUntilChanged(), takeUntil(this._destroy))\n            .subscribe(() => {\n                if (this.panelOpen) {\n                    this._scrollTop = 0;\n                    this.openedChange.emit(true);\n                } else {\n                    this.openedChange.emit(false);\n                    this._panelDoneAnimating = false;\n                    this.overlayDir.offsetX = 0;\n                    this._changeDetectorRef.markForCheck();\n                }\n            });\n    }\n\n    ngAfterContentInit() {\n        this._initKeyManager();\n\n        this._selectionModel.onChange!\n            .pipe(takeUntil(this._destroy))\n            .subscribe((event) => {\n                event.added.forEach((option) => option.select());\n                event.removed.forEach((option) => option.deselect());\n            });\n\n        this.options.changes\n            .pipe(startWith(null), takeUntil(this._destroy))\n            .subscribe(() => {\n                this._resetOptions();\n                this._initializeSelection();\n            });\n    }\n\n    ngAfterViewInit(): void {\n        this.tags.changes\n            .subscribe(() => {\n                setTimeout(() => this._calculateHiddenItems(), 0);\n            });\n    }\n\n    ngDoCheck() {\n        if (this.ngControl) { this.updateErrorState(); }\n    }\n\n    ngOnChanges(changes: SimpleChanges) {\n        // Updating the disabled state is handled by `mixinDisabled`, but we need to additionally let\n        // the parent form field know to run change detection when the disabled state changes.\n        if (changes.disabled) {\n            this.stateChanges.next();\n        }\n    }\n\n    ngOnDestroy() {\n        this._destroy.next();\n        this._destroy.complete();\n        this.stateChanges.complete();\n    }\n\n    /** `View -> model callback called when value changes` */\n    _onChange: (value: any) => void = () => {};\n\n    /** `View -> model callback called when select has been touched` */\n    _onTouched = () => {};\n\n    /** Toggles the overlay panel open or closed. */\n    toggle(): void {\n        if (this.panelOpen) {\n            this.close();\n        } else {\n            this.open();\n        }\n    }\n\n    /** Opens the overlay panel. */\n    open(): void {\n        if (this.disabled || !this.options || !this.options.length || this._panelOpen) { return; }\n\n        this._triggerRect = this.trigger.nativeElement.getBoundingClientRect();\n        // Note: The computed font-size will be a string pixel value (e.g. \"16px\").\n        // `parseInt` ignores the trailing 'px' and converts this to a number.\n        this._triggerFontSize = parseInt(getComputedStyle(this.trigger.nativeElement)['font-size']);\n\n        this._panelOpen = true;\n        this._keyManager.withHorizontalOrientation(null);\n        this._calculateOverlayPosition();\n        this._highlightCorrectOption();\n        this._changeDetectorRef.markForCheck();\n\n        // Set the font size on the panel element once it exists.\n        this._ngZone.onStable.asObservable()\n            .pipe(take(1))\n            .subscribe(() => {\n                if (this._triggerFontSize && this.overlayDir.overlayRef &&\n                    this.overlayDir.overlayRef.overlayElement) {\n                    this.overlayDir.overlayRef.overlayElement.style.fontSize = `${this._triggerFontSize}px`;\n                }\n            });\n    }\n\n    /** Closes the overlay panel and focuses the host element. */\n    close(): void {\n        if (this._panelOpen) {\n            this._panelOpen = false;\n            this._keyManager.withHorizontalOrientation(this._isRtl() ? 'rtl' : 'ltr');\n            this._changeDetectorRef.markForCheck();\n            this._onTouched();\n        }\n    }\n\n    /**\n     * Sets the select's value. Part of the ControlValueAccessor interface\n     * required to integrate with Angular's core forms API.\n     *\n     * @param value New value to be written to the model.\n     */\n    writeValue(value: any): void {\n        if (this.options) {\n            this._setSelectionByValue(value);\n        }\n    }\n\n    /**\n     * Saves a callback function to be invoked when the select's value\n     * changes from user input. Part of the ControlValueAccessor interface\n     * required to integrate with Angular's core forms API.\n     *\n     * @param fn Callback to be triggered when the value changes.\n     */\n    registerOnChange(fn: (value: any) => void): void {\n        this._onChange = fn;\n    }\n\n    /**\n     * Saves a callback function to be invoked when the select is blurred\n     * by the user. Part of the ControlValueAccessor interface required\n     * to integrate with Angular's core forms API.\n     *\n     * @param fn Callback to be triggered when the component has been touched.\n     */\n    registerOnTouched(fn: () => {}): void {\n        this._onTouched = fn;\n    }\n\n    /**\n     * Disables the select. Part of the ControlValueAccessor interface required\n     * to integrate with Angular's core forms API.\n     *\n     * @param isDisabled Sets whether the component is disabled.\n     */\n    setDisabledState(isDisabled: boolean): void {\n        this.disabled = isDisabled;\n        this._changeDetectorRef.markForCheck();\n        this.stateChanges.next();\n    }\n\n    get panelOpen(): boolean {\n        return this._panelOpen;\n    }\n\n    get selected(): McOption | McOption[] {\n        return this.multiple ? this._selectionModel.selected : this._selectionModel.selected[0];\n    }\n\n    get triggerValue(): string {\n        if (this.empty) { return ''; }\n\n        if (this._multiple) {\n            const selectedOptions = this._selectionModel.selected.map((option) => option.viewValue);\n\n            if (this._isRtl()) { selectedOptions.reverse(); }\n\n            return selectedOptions.join(', ');\n        }\n\n        return this._selectionModel.selected[0].viewValue;\n    }\n\n    get triggerValues(): McOption[] {\n        if (this.empty) { return []; }\n\n        if (this._multiple) {\n            const selectedOptions = this._selectionModel.selected;\n\n            if (this._isRtl()) { selectedOptions.reverse(); }\n\n            return selectedOptions;\n        }\n\n        return [this._selectionModel.selected[0]];\n    }\n\n    get empty(): boolean {\n        return !this._selectionModel || this._selectionModel.isEmpty();\n    }\n\n    _isRtl(): boolean {\n        return this._dir ? this._dir.value === 'rtl' : false;\n    }\n\n    _handleKeydown(event: KeyboardEvent): void {\n        if (!this.disabled) {\n            if (this.panelOpen) {\n                this._handleOpenKeydown(event);\n            } else {\n                this._handleClosedKeydown(event);\n            }\n        }\n    }\n\n    /**\n     * When the panel content is done fading in, the _panelDoneAnimating property is\n     * set so the proper class can be added to the panel.\n     */\n    _onFadeInDone(): void {\n        this._panelDoneAnimating = this.panelOpen;\n        this._changeDetectorRef.markForCheck();\n    }\n\n    _onFocus() {\n        if (!this.disabled) {\n            this._focused = true;\n            this.stateChanges.next();\n        }\n    }\n\n    /**\n     * Calls the touched callback only if the panel is closed. Otherwise, the trigger will\n     * \"blur\" to the panel when it opens, causing a false positive.\n     */\n    _onBlur() {\n        this._focused = false;\n\n        if (!this.disabled && !this.panelOpen) {\n            this._onTouched();\n            this._changeDetectorRef.markForCheck();\n            this.stateChanges.next();\n        }\n    }\n\n    /**\n     * Callback that is invoked when the overlay panel has been attached.\n     */\n    _onAttached(): void {\n        this.overlayDir.positionChange\n            .pipe(take(1))\n            .subscribe(() => {\n                this._changeDetectorRef.detectChanges();\n                this._calculateOverlayOffsetX();\n                this.panel.nativeElement.scrollTop = this._scrollTop;\n            });\n    }\n\n    /** Returns the theme to be used on the panel. */\n    _getPanelTheme(): string {\n        return this._parentFormField ? `mc-${this._parentFormField.color}` : '';\n    }\n\n    /** Focuses the select element. */\n    focus(): void {\n        this._elementRef.nativeElement.focus();\n    }\n\n    /**\n     * Calculates the scroll position of the select's overlay panel.\n     *\n     * Attempts to center the selected option in the panel. If the option is\n     * too high or too low in the panel to be scrolled to the center, it clamps the\n     * scroll position to the min or max scroll positions respectively.\n     */\n    _calculateOverlayScroll(selectedIndex: number, scrollBuffer: number, maxScroll: number): number {\n        const itemHeight = this._getItemHeight();\n        const optionOffsetFromScrollTop = itemHeight * selectedIndex;\n\n        /* tslint:disable-next-line:no-magic-numbers */\n        const halfOptionHeight = itemHeight / 2;\n\n        // Starts at the optionOffsetFromScrollTop, which scrolls the option to the top of the\n        // scroll container, then subtracts the scroll buffer to scroll the option down to\n        // the center of the overlay panel. Half the option height must be re-added to the\n        // scrollTop so the option is centered based on its middle, not its top edge.\n        const optimalScrollPosition = optionOffsetFromScrollTop - scrollBuffer + halfOptionHeight;\n\n        return Math.min(Math.max(0, optimalScrollPosition), maxScroll);\n    }\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    onContainerClick() {\n        this.focus();\n        this.open();\n    }\n\n    /** Invoked when an option is clicked. */\n    onRemoveMatcherItem(option: McOption, $event): void {\n        $event.stopPropagation();\n\n        option.deselect();\n    }\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    get shouldLabelFloat(): boolean {\n        return this._panelOpen || !this.empty;\n    }\n\n    _calculateHiddenItems(): void {\n        if (this.empty) { return; }\n\n        let visibleItems: number = 0;\n        const totalItemsWidth = this._getTotalItemsWidthInMatcher();\n        let totalVisibleItemsWidth: number = 0;\n        const itemMargin: number = 4;\n\n        this.tags.forEach((tag) => {\n            if (tag.nativeElement.offsetTop < tag.nativeElement.offsetHeight) {\n                totalVisibleItemsWidth += tag.nativeElement.getBoundingClientRect().width + itemMargin;\n                visibleItems++;\n            }\n        });\n\n        this.hiddenItems = (this.selected as ArrayLike<McOption>).length - visibleItems;\n\n        if (this.hiddenItems) {\n            const itemsCounter = this.trigger.nativeElement.querySelector('.mc-select__match-hidden-text');\n            const matcherList = this.trigger.nativeElement.querySelector('.mc-select__match-list');\n\n            const itemsCounterShowed = itemsCounter.offsetTop < itemsCounter.offsetHeight;\n            // const itemsCounterWidth: number = itemsCounter.getBoundingClientRect().width;\n            const itemsCounterWidth: number = 86;\n\n            const matcherListWidth: number = matcherList.getBoundingClientRect().width;\n            const matcherWidth: number = matcherListWidth + itemsCounterWidth;\n\n            if (itemsCounterShowed && (totalItemsWidth < matcherWidth)) { this.hiddenItems = 0; }\n\n            if (\n                totalVisibleItemsWidth === matcherListWidth ||\n                (totalVisibleItemsWidth + itemsCounterWidth) < matcherListWidth\n            ) {\n                this._changeDetectorRef.markForCheck();\n\n                return ;\n            } else if (!itemsCounterShowed && (totalItemsWidth + itemsCounterWidth) > matcherWidth) {\n                this.hiddenItems++;\n            }\n        }\n\n        this._changeDetectorRef.markForCheck();\n    }\n\n    private _getTotalItemsWidthInMatcher(): number {\n        const triggerClone = this.trigger.nativeElement.cloneNode(true);\n        triggerClone.querySelector('.mc-select__match-hidden-text').remove();\n\n        this._renderer.setStyle(triggerClone, 'position', 'absolute');\n        this._renderer.setStyle(triggerClone, 'visibility', 'hidden');\n        this._renderer.setStyle(triggerClone, 'top', '-100%');\n        this._renderer.setStyle(triggerClone, 'left', '0');\n\n        this._renderer.appendChild(this.trigger.nativeElement, triggerClone);\n\n        let totalItemsWidth: number = 0;\n        const itemMargin: number = 4;\n        triggerClone.querySelectorAll('mc-tag').forEach((item) => {\n            totalItemsWidth += item.getBoundingClientRect().width as number + itemMargin;\n        });\n\n        triggerClone.remove();\n\n        return totalItemsWidth;\n    }\n\n    /** Handles keyboard events while the select is closed. */\n    private _handleClosedKeydown(event: KeyboardEvent): void {\n        /* tslint:disable-next-line */\n        const keyCode = event.keyCode;\n        const isArrowKey = keyCode === DOWN_ARROW || keyCode === UP_ARROW ||\n            keyCode === LEFT_ARROW || keyCode === RIGHT_ARROW;\n        const isOpenKey = keyCode === ENTER || keyCode === SPACE;\n\n        // Open the select on ALT + arrow key to match the native <select>\n        if (isOpenKey || ((this.multiple || event.altKey) && isArrowKey)) {\n            event.preventDefault(); // prevents the page from scrolling down when pressing space\n            this.open();\n        } else if (!this.multiple) {\n            this._keyManager.onKeydown(event);\n        }\n    }\n\n    /** Handles keyboard events when the selected is open. */\n    private _handleOpenKeydown(event: KeyboardEvent): void {\n        /* tslint:disable-next-line */\n        const keyCode = event.keyCode;\n        const isArrowKey = keyCode === DOWN_ARROW || keyCode === UP_ARROW;\n        const manager = this._keyManager;\n\n        if (keyCode === HOME || keyCode === END) {\n            event.preventDefault();\n\n            if (keyCode === HOME) {\n                manager.setFirstItemActive();\n            } else {\n                manager.setLastItemActive();\n            }\n\n        } else if (isArrowKey && event.altKey) {\n            // Close the select on ALT + arrow key to match the native <select>\n            event.preventDefault();\n            this.close();\n        } else if ((keyCode === ENTER || keyCode === SPACE) && manager.activeItem) {\n            event.preventDefault();\n            manager.activeItem._selectViaInteraction();\n        } else if (this._multiple && keyCode === A && event.ctrlKey) {\n            event.preventDefault();\n            const hasDeselectedOptions = this.options.some((option) => !option.selected);\n            this.options.forEach((option) => {\n                if (hasDeselectedOptions && !option.disabled) {\n                    option.select();\n                } else {\n                    option.deselect();\n                }\n            });\n        } else {\n            const previouslyFocusedIndex = manager.activeItemIndex;\n\n            manager.onKeydown(event);\n\n            if (this._multiple && isArrowKey && event.shiftKey && manager.activeItem &&\n                manager.activeItemIndex !== previouslyFocusedIndex) {\n                manager.activeItem._selectViaInteraction();\n            }\n        }\n    }\n\n    private _initializeSelection(): void {\n        // Defer setting the value in order to avoid the \"Expression\n        // has changed after it was checked\" errors from Angular.\n        Promise.resolve().then(() => {\n            this._setSelectionByValue(this.ngControl ? this.ngControl.value : this._value);\n        });\n    }\n\n    /**\n     * Sets the selected option based on a value. If no option can be\n     * found with the designated value, the select trigger is cleared.\n     */\n    private _setSelectionByValue(value: any | any[]): void {\n        if (this.multiple && value) {\n            if (!Array.isArray(value)) {\n                throw getMcSelectNonArrayValueError();\n            }\n\n            this._selectionModel.clear();\n            value.forEach((currentValue: any) => this._selectValue(currentValue));\n            this._sortValues();\n        } else {\n            this._selectionModel.clear();\n            const correspondingOption = this._selectValue(value);\n\n            // Shift focus to the active item. Note that we shouldn't do this in multiple\n            // mode, because we don't know what option the user interacted with last.\n            if (correspondingOption) {\n                this._keyManager.setActiveItem(correspondingOption);\n            }\n        }\n\n        this._changeDetectorRef.markForCheck();\n    }\n\n    /**\n     * Finds and selects and option based on its value.\n     * @returns Option that has the corresponding value.\n     */\n    private _selectValue(value: any): McOption | undefined {\n        const correspondingOption = this.options.find((option: McOption) => {\n            try {\n                // Treat null as a special reset value.\n                return option.value != null && this._compareWith(option.value, value);\n            } catch (error) {\n                if (isDevMode()) {\n                    // Notify developers of errors in their comparator.\n                    console.warn(error);\n                }\n\n                return false;\n            }\n        });\n\n        if (correspondingOption) {\n            this._selectionModel.select(correspondingOption);\n        }\n\n        return correspondingOption;\n    }\n\n    /** Sets up a key manager to listen to keyboard events on the overlay panel. */\n    private _initKeyManager() {\n        this._keyManager = new ActiveDescendantKeyManager<McOption>(this.options)\n            .withTypeAhead()\n            .withVerticalOrientation()\n            .withHorizontalOrientation(this._isRtl() ? 'rtl' : 'ltr');\n\n        this._keyManager.tabOut\n            .pipe(takeUntil(this._destroy))\n            .subscribe(() => {\n                // Restore focus to the trigger before closing. Ensures that the focus\n                // position won't be lost if the user got focus into the overlay.\n                this.focus();\n                this.close();\n            });\n\n        this._keyManager.change\n            .pipe(takeUntil(this._destroy))\n            .subscribe(() => {\n                if (this._panelOpen && this.panel) {\n                    this._scrollActiveOptionIntoView();\n                } else if (!this._panelOpen && !this.multiple && this._keyManager.activeItem) {\n                    this._keyManager.activeItem._selectViaInteraction();\n                }\n            });\n    }\n\n    /** Drops current option subscriptions and IDs and resets from scratch. */\n    private _resetOptions(): void {\n        const changedOrDestroyed = merge(this.options.changes, this._destroy);\n\n        this.optionSelectionChanges\n            .pipe(takeUntil(changedOrDestroyed))\n            .subscribe((event) => {\n                this._onSelect(event.source, event.isUserInput);\n\n                if (event.isUserInput && !this.multiple && this._panelOpen) {\n                    this.close();\n                    this.focus();\n                }\n            });\n\n        // Listen to changes in the internal state of the options and react accordingly.\n        // Handles cases like the labels of the selected options changing.\n        merge(...this.options.map((option) => option._stateChanges))\n            .pipe(takeUntil(changedOrDestroyed))\n            .subscribe(() => {\n                this._changeDetectorRef.markForCheck();\n                this.stateChanges.next();\n            });\n\n        this._setOptionIds();\n    }\n\n    /** Invoked when an option is clicked. */\n    private _onSelect(option: McOption, isUserInput: boolean): void {\n        const wasSelected = this._selectionModel.isSelected(option);\n\n        if (option.value == null && !this._multiple) {\n            option.deselect();\n            this._selectionModel.clear();\n            this._propagateChanges(option.value);\n        } else {\n            if (option.selected) {\n                this._selectionModel.select(option);\n            } else {\n                this._selectionModel.deselect(option);\n            }\n\n            if (isUserInput) {\n                this._keyManager.setActiveItem(option);\n            }\n\n            if (this.multiple) {\n                this._sortValues();\n\n                if (isUserInput) {\n                    // In case the user selected the option with their mouse, we\n                    // want to restore focus back to the trigger, in order to\n                    // prevent the select keyboard controls from clashing with\n                    // the ones from `mc-option`.\n                    this.focus();\n                }\n            }\n        }\n\n        if (wasSelected !== this._selectionModel.isSelected(option)) {\n            this._propagateChanges();\n        }\n\n        this.stateChanges.next();\n    }\n\n    /** Sorts the selected values in the selected based on their order in the panel. */\n    private _sortValues() {\n        if (this.multiple) {\n            const options = this.options.toArray();\n\n            this._selectionModel.sort((a, b) => {\n                return this.sortComparator ? this.sortComparator(a, b, options) :\n                    options.indexOf(a) - options.indexOf(b);\n            });\n            this.stateChanges.next();\n        }\n    }\n\n    /** Emits change event to set the model value. */\n    private _propagateChanges(fallbackValue?: any): void {\n        let valueToEmit: any = null;\n\n        if (this.multiple) {\n            valueToEmit = (this.selected as McOption[]).map((option) => option.value);\n        } else {\n            valueToEmit = this.selected ? (this.selected as McOption).value : fallbackValue;\n        }\n\n        this._value = valueToEmit;\n        this.valueChange.emit(valueToEmit);\n        this._onChange(valueToEmit);\n        this.selectionChange.emit(new McSelectChange(this, valueToEmit));\n        this._changeDetectorRef.markForCheck();\n    }\n\n    /** Records option IDs to pass to the aria-owns property. */\n    private _setOptionIds() {\n        this._optionIds = this.options.map((option) => option.id).join(' ');\n    }\n\n    /**\n     * Highlights the selected item. If no option is selected, it will highlight\n     * the first item instead.\n     */\n    private _highlightCorrectOption(): void {\n        if (this._keyManager) {\n            if (this.empty) {\n                this._keyManager.setFirstItemActive();\n            } else {\n                this._keyManager.setActiveItem(this._selectionModel.selected[0]);\n            }\n        }\n    }\n\n    /** Scrolls the active option into view. */\n    private _scrollActiveOptionIntoView(): void {\n        const activeOptionIndex = this._keyManager.activeItemIndex || 0;\n        const labelCount = _countGroupLabelsBeforeOption(activeOptionIndex, this.options, this.optionGroups);\n\n        this.panel.nativeElement.scrollTop = _getOptionScrollPosition(\n            activeOptionIndex + labelCount,\n            this._getItemHeight(),\n            this.panel.nativeElement.scrollTop,\n            SELECT_PANEL_MAX_HEIGHT\n        );\n    }\n\n    /** Gets the index of the provided option in the option list. */\n    private _getOptionIndex(option: McOption): number | undefined {\n        /* tslint:disable-next-line */\n        return this.options.reduce((result: number, current: McOption, index: number) => {\n            /* tslint:disable-next-line:strict-type-predicates */\n            return result === undefined ? (option === current ? index : undefined) : result;\n        }, undefined);\n    }\n\n    /** Calculates the scroll position and x- and y-offsets of the overlay panel. */\n    private _calculateOverlayPosition(): void {\n        const itemHeight = this._getItemHeight();\n        const items = this._getItemCount();\n        const panelHeight = Math.min(items * itemHeight, SELECT_PANEL_MAX_HEIGHT);\n        const scrollContainerHeight = items * itemHeight;\n\n        // The farthest the panel can be scrolled before it hits the bottom\n        const maxScroll = scrollContainerHeight - panelHeight;\n\n        // If no value is selected we open the popup to the first item.\n        let selectedOptionOffset =\n            this.empty ? 0 : this._getOptionIndex(this._selectionModel.selected[0])!;\n\n        selectedOptionOffset += _countGroupLabelsBeforeOption(selectedOptionOffset, this.options,\n            this.optionGroups);\n\n        // We must maintain a scroll buffer so the selected option will be scrolled to the\n        // center of the overlay panel rather than the top.\n        /* tslint:disable-next-line:no-magic-numbers */\n        const scrollBuffer = panelHeight / 2;\n        this._scrollTop = this._calculateOverlayScroll(selectedOptionOffset, scrollBuffer, maxScroll);\n        this._offsetY = this._calculateOverlayOffsetY();\n\n        this._checkOverlayWithinViewport(maxScroll);\n    }\n\n    /**\n     * Sets the x-offset of the overlay panel in relation to the trigger's top start corner.\n     * This must be adjusted to align the selected option text over the trigger text when\n     * the panel opens. Will change based on LTR or RTL text direction. Note that the offset\n     * can't be calculated until the panel has been attached, because we need to know the\n     * content width in order to constrain the panel within the viewport.\n     */\n    private _calculateOverlayOffsetX(): void {\n        const overlayRect = this.overlayDir.overlayRef.overlayElement.getBoundingClientRect();\n        const viewportSize = this._viewportRuler.getViewportSize();\n        const isRtl = this._isRtl();\n        /* tslint:disable-next-line:no-magic-numbers */\n        const paddingWidth = SELECT_PANEL_PADDING_X * 2;\n        let offsetX: number;\n\n        const selected = this._selectionModel.selected[0] || this.options.first;\n        offsetX = selected && selected.group ? SELECT_PANEL_INDENT_PADDING_X : SELECT_PANEL_PADDING_X;\n\n        // Invert the offset in LTR.\n        if (!isRtl) { offsetX *= -1; }\n\n        // Determine how much the select overflows on each side.\n        const leftOverflow = 0 - (overlayRect.left + offsetX - (isRtl ? paddingWidth : 0));\n        const rightOverflow = overlayRect.right + offsetX - viewportSize.width\n            + (isRtl ? 0 : paddingWidth);\n\n        // If the element overflows on either side, reduce the offset to allow it to fit.\n        if (leftOverflow > 0) {\n            offsetX += leftOverflow + SELECT_PANEL_VIEWPORT_PADDING;\n        } else if (rightOverflow > 0) {\n            offsetX -= rightOverflow + SELECT_PANEL_VIEWPORT_PADDING;\n        }\n\n        // Set the offset directly in order to avoid having to go through change detection and\n        // potentially triggering \"changed after it was checked\" errors. Round the value to avoid\n        // blurry content in some browsers.\n        this.overlayDir.offsetX = Math.round(offsetX);\n        this.overlayDir.overlayRef.updatePosition();\n    }\n\n    /**\n     * Calculates the y-offset of the select's overlay panel in relation to the\n     * top start corner of the trigger. It has to be adjusted in order for the\n     * selected option to be aligned over the trigger when the panel opens.\n     */\n    private _calculateOverlayOffsetY(): number {\n        // const itemHeight = this._getItemHeight();\n        // const optionHeightAdjustment = (itemHeight - this._triggerRect.height) / 2;\n\n        // todo I'm not sure that we will use it\n        return 0;\n        // return Math.round(-optionHeightAdjustment);\n    }\n\n    /**\n     * Checks that the attempted overlay position will fit within the viewport.\n     * If it will not fit, tries to adjust the scroll position and the associated\n     * y-offset so the panel can open fully on-screen. If it still won't fit,\n     * sets the offset back to 0 to allow the fallback position to take over.\n     */\n    private _checkOverlayWithinViewport(maxScroll: number): void {\n        const itemHeight = this._getItemHeight();\n        const viewportSize = this._viewportRuler.getViewportSize();\n\n        const topSpaceAvailable = this._triggerRect.top - SELECT_PANEL_VIEWPORT_PADDING;\n        const bottomSpaceAvailable =\n            viewportSize.height - this._triggerRect.bottom - SELECT_PANEL_VIEWPORT_PADDING;\n\n        const panelHeightTop = Math.abs(this._offsetY);\n        const totalPanelHeight =\n            Math.min(this._getItemCount() * itemHeight, SELECT_PANEL_MAX_HEIGHT);\n        const panelHeightBottom = totalPanelHeight - panelHeightTop - this._triggerRect.height;\n\n        if (panelHeightBottom > bottomSpaceAvailable) {\n            this._adjustPanelUp(panelHeightBottom, bottomSpaceAvailable);\n        } else if (panelHeightTop > topSpaceAvailable) {\n            this._adjustPanelDown(panelHeightTop, topSpaceAvailable, maxScroll);\n        } else {\n            this._transformOrigin = this._getOriginBasedOnOption();\n        }\n    }\n\n    /** Adjusts the overlay panel up to fit in the viewport. */\n    private _adjustPanelUp(panelHeightBottom: number, bottomSpaceAvailable: number) {\n        // Browsers ignore fractional scroll offsets, so we need to round.\n        const distanceBelowViewport = Math.round(panelHeightBottom - bottomSpaceAvailable);\n\n        // Scrolls the panel up by the distance it was extending past the boundary, then\n        // adjusts the offset by that amount to move the panel up into the viewport.\n        this._scrollTop -= distanceBelowViewport;\n        this._offsetY -= distanceBelowViewport;\n        this._transformOrigin = this._getOriginBasedOnOption();\n\n        // If the panel is scrolled to the very top, it won't be able to fit the panel\n        // by scrolling, so set the offset to 0 to allow the fallback position to take\n        // effect.\n        if (this._scrollTop <= 0) {\n            this._scrollTop = 0;\n            this._offsetY = 0;\n            this._transformOrigin = `50% bottom 0px`;\n        }\n    }\n\n    /** Adjusts the overlay panel down to fit in the viewport. */\n    private _adjustPanelDown(panelHeightTop: number, topSpaceAvailable: number, maxScroll: number) {\n        // Browsers ignore fractional scroll offsets, so we need to round.\n        const distanceAboveViewport = Math.round(panelHeightTop - topSpaceAvailable);\n\n        // Scrolls the panel down by the distance it was extending past the boundary, then\n        // adjusts the offset by that amount to move the panel down into the viewport.\n        this._scrollTop += distanceAboveViewport;\n        this._offsetY += distanceAboveViewport;\n        this._transformOrigin = this._getOriginBasedOnOption();\n\n        // If the panel is scrolled to the very bottom, it won't be able to fit the\n        // panel by scrolling, so set the offset to 0 to allow the fallback position\n        // to take effect.\n        if (this._scrollTop >= maxScroll) {\n            this._scrollTop = maxScroll;\n            this._offsetY = 0;\n            this._transformOrigin = `50% top 0px`;\n\n            return;\n        }\n    }\n\n    /** Sets the transform origin point based on the selected option. */\n    private _getOriginBasedOnOption(): string {\n        const itemHeight = this._getItemHeight();\n        /* tslint:disable-next-line:no-magic-numbers */\n        const optionHeightAdjustment = (itemHeight - this._triggerRect.height) / 2;\n        /* tslint:disable-next-line:no-magic-numbers */\n        const originY = Math.abs(this._offsetY) - optionHeightAdjustment + itemHeight / 2;\n\n        return `50% ${originY}px 0px`;\n    }\n\n    /** Calculates the amount of items in the select. This includes options and group labels. */\n    private _getItemCount(): number {\n        return this.options.length + this.optionGroups.length;\n    }\n\n    /** Calculates the height of the select's options. */\n    private _getItemHeight(): number {\n        /* tslint:disable-next-line:no-magic-numbers */\n        return 32;\n        // return this._triggerFontSize * SELECT_ITEM_HEIGHT_EM;\n    }\n\n    /** Comparison function to specify which option is displayed. Defaults to object equality. */\n    private _compareWith = (o1: any, o2: any) => o1 === o2;\n}\n","import {\n    Directive,\n    DoCheck,\n    ElementRef,\n    forwardRef,\n    Inject,\n    InjectionToken,\n    Input,\n    OnChanges,\n    OnDestroy,\n    Optional,\n    Renderer2,\n    Self\n} from '@angular/core';\nimport {\n    ControlValueAccessor,\n    FormControl,\n    FormGroupDirective,\n    NG_VALIDATORS,\n    NgControl,\n    NgForm,\n    ValidationErrors,\n    ValidatorFn,\n    Validators\n} from '@angular/forms';\nimport {\n    noop,\n    Subject\n} from 'rxjs';\n\nimport { coerceBooleanProperty } from '@ptsecurity/cdk/coercion';\nimport {\n    CanUpdateErrorState,\n    CanUpdateErrorStateCtor,\n    ErrorStateMatcher,\n    mixinErrorState\n} from '@ptsecurity/mosaic/core';\nimport { McFormFieldControl } from '@ptsecurity/mosaic/form-field';\n\nimport {\n    ARROW_DOWN_KEYCODE,\n    ARROW_LEFT_KEYCODE,\n    ARROW_RIGHT_KEYCODE,\n    ARROW_UP_KEYCODE,\n    DEFAULT_TIME_FORMAT,\n    HOURS_PER_DAY,\n    HOURS_MINUTES_REGEXP,\n    HOURS_MINUTES_SECONDS_REGEXP,\n    HOURS_ONLY_REGEXP,\n    MINUTES_PER_HOUR,\n    SECONDS_PER_MINUTE,\n    TIMEFORMAT_PLACEHOLDERS,\n    TimeFormats,\n    TimeParts\n} from './timepicker.constants';\n\n\nlet _uniqueComponentIdSuffix: number = 0;\nlet _validatorOnChange: () => void = noop;\nlet _validator: ValidatorFn | null = () => null;\n\nexport const MC_INPUT_VALUE_ACCESSOR =\n    new InjectionToken<{ value: any }>('MC_INPUT_VALUE_ACCESSOR');\n\nexport class McTimepickerBase {\n    constructor(\n        public _defaultErrorStateMatcher: ErrorStateMatcher,\n        public _parentForm: NgForm,\n        public _parentFormGroup: FormGroupDirective,\n        public ngControl: NgControl) { }\n}\n\nexport const McTimepickerMixinBase:\n    CanUpdateErrorStateCtor &\n    typeof McTimepickerBase = mixinErrorState(McTimepickerBase);\n\n@Directive({\n    selector: 'input[mcTimepicker]',\n    exportAs: 'mcTimepickerInput',\n    host: {\n        class: 'mc-timepicker mc-input',\n        // Native input properties that are overwritten by Angular inputs need to be synced with\n        // the native input element. Otherwise property bindings for those don't work.\n        '[attr.id]': 'id',\n        '[attr.placeholder]': 'placeholder',\n        '[disabled]': 'disabled',\n        '[required]': 'required',\n        '[attr.time-format]': 'timeFormat',\n        '[attr.min-time]': 'minTime',\n        '[attr.max-time]': 'maxTime',\n        '[attr.value]': 'value',\n        '(blur)': 'onBlur()',\n        '(focus)': 'focusChanged(true)',\n        '(input)': 'onInput()',\n        '(paste)': 'onPaste($event)',\n        '(keydown)': 'onKeyDown($event)'\n    },\n    providers: [\n        {\n            provide: NG_VALIDATORS,\n            useValue: {\n                validate(c) { return _validator ? _validator(c) : null; },\n                registerOnValidatorChange(fn: () => void): void { _validatorOnChange = fn; }\n            },\n            multi: true\n        },\n        {\n            provide: McFormFieldControl,\n            useExisting: forwardRef(() => McTimepicker)\n        }\n    ]\n\n})\nexport class McTimepicker extends McTimepickerMixinBase\n    implements McFormFieldControl<any>,\n        OnChanges,\n        OnDestroy,\n        DoCheck,\n        CanUpdateErrorState,\n        ControlValueAccessor {\n\n    /** An object used to control when error messages are shown. */\n    @Input() errorStateMatcher: ErrorStateMatcher;\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    focused: boolean = false;\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    readonly stateChanges: Subject<void> = new Subject<void>();\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    controlType: string = 'mc-timepicker';\n\n    @Input()\n    get disabled(): boolean {\n        if (this.ngControl && this.ngControl.disabled !== null) { return this.ngControl.disabled; }\n\n        return this._disabled;\n    }\n\n    set disabled(value: boolean) {\n        this._disabled = coerceBooleanProperty(value);\n\n        // Browsers may not fire the blur event if the input is disabled too quickly.\n        // Reset from here to ensure that the element doesn't become stuck.\n        if (this.focused) {\n            this.focused = false;\n        }\n\n        this.stateChanges.next();\n    }\n\n    @Input()\n    get id(): string { return this._id; }\n\n    set id(value: string) { this._id = value || this._uid; }\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    @Input() placeholder: string;\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    @Input()\n    get required(): boolean { return this._required; }\n\n    set required(value: boolean) { this._required = coerceBooleanProperty(value); }\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    @Input()\n    get value(): string { return this._inputValueAccessor.value; }\n\n    set value(value: string) {\n        if (value !== this.value) {\n            this._inputValueAccessor.value = value;\n            this._applyInputChanges();\n        }\n    }\n\n    @Input('time-format')\n    get timeFormat(): TimeFormats { return this._timeFormat; }\n\n    set timeFormat(formatValue: TimeFormats) {\n        this._timeFormat = Object\n            .keys(TimeFormats)\n            .map((timeFormatKey) => TimeFormats[timeFormatKey])\n            .indexOf(formatValue) > -1 ? formatValue : DEFAULT_TIME_FORMAT;\n\n        _validatorOnChange();\n        this.placeholder = TIMEFORMAT_PLACEHOLDERS[this._timeFormat.toLowerCase()];\n    }\n\n    @Input('min-time')\n    get minTime(): string | null { return this._minTime; }\n\n    set minTime(minValue: string | null) {\n        this._minTime = minValue;\n        this._minDTime = minValue !== null ? this._getDateFromTimeString(minValue) : undefined;\n        _validatorOnChange();\n    }\n\n    @Input('max-time')\n    get maxTime(): string | null { return this._maxTime; }\n\n    set maxTime(maxValue: string | null) {\n        this._maxTime = maxValue;\n        this._maxDTime = maxValue !== null ? this._getDateFromTimeString(maxValue) : undefined;\n        _validatorOnChange();\n    }\n\n    private _id: string;\n    private readonly _uid = `mc-timepicker-${_uniqueComponentIdSuffix++}`;\n    private _disabled: boolean;\n    private _required: boolean;\n    private _previousNativeValue: any;\n    private readonly _inputValueAccessor: { value: any };\n    private _onChange: (value: any) => void;\n    private _onTouched: () => void;\n    private _timeFormat: TimeFormats;\n    private _minTime: string | null = null;\n    private _minDTime: Date | undefined;\n    private _maxTime: string | null = null;\n    private _maxDTime: Date | undefined;\n    private _currentDTimeInput: Date | undefined;\n\n    constructor(private readonly _elementRef: ElementRef,\n                @Optional() @Self() public ngControl: NgControl,\n                @Optional() _parentForm: NgForm,\n                @Optional() _parentFormGroup: FormGroupDirective,\n                _defaultErrorStateMatcher: ErrorStateMatcher,\n                @Optional() @Self() @Inject(MC_INPUT_VALUE_ACCESSOR) inputValueAccessor: any,\n                private readonly _renderer: Renderer2) {\n        super(_defaultErrorStateMatcher, _parentForm, _parentFormGroup, ngControl);\n\n        // If no input value accessor was explicitly specified, use the element as the input value\n        // accessor.\n        this._inputValueAccessor = inputValueAccessor || this._elementRef.nativeElement;\n\n        this._previousNativeValue = this.value;\n        this._onChange = noop;\n\n        // Force setter to be called in case id was not specified.\n        this.id = this.id;\n\n        // Instead of NG_VALUE_ACCESSOR (https://github.com/angular/material2/issues/8158#issuecomment-344618103)\n        if (this.ngControl) { this.ngControl.valueAccessor = this; }\n\n        // Substitute initial empty validator with validator linked to directive object instance (workaround)\n        _validator = Validators.compose([\n            () => this._parseValidator(),\n            () => this._minTimeValidator(),\n            () => this._maxTimeValidator()\n        ]);\n    }\n\n    ngOnChanges(): void {\n        this.stateChanges.next();\n    }\n\n    ngOnDestroy(): void {\n        this.stateChanges.complete();\n    }\n\n    ngDoCheck(): void {\n        if (this.ngControl) {\n            // We need to re-evaluate this on every change detection cycle, because there are some\n            // error triggers that we can't subscribe to (e.g. parent form submissions). This means\n            // that whatever logic is in here has to be super lean or we risk destroying the performance.\n            this.updateErrorState();\n        }\n\n        // We need to dirty-check the native element's value, because there are some cases where\n        // we won't be notified when it changes (e.g. the consumer isn't using forms or they're\n        // updating the value using `emitEvent: false`).\n        this._dirtyCheckNativeValue();\n    }\n\n    focus(): void {\n        this._elementRef.nativeElement.focus();\n    }\n\n    focusChanged(isFocused: boolean): void {\n        if (isFocused !== this.focused) {\n            this.focused = isFocused;\n            this._onTouched();\n            this.stateChanges.next();\n        }\n    }\n\n    onBlur() {\n        this._applyInputChanges();\n        this.focusChanged(false);\n    }\n\n    onPaste($event) {\n        $event.preventDefault();\n        const clipboardUserInput: string = $event.clipboardData.getData('text');\n\n        if (this._getDateFromTimeString(clipboardUserInput) === undefined) { return; }\n\n        this._elementRef.nativeElement.value = clipboardUserInput;\n        this.onInput();\n    }\n\n    onInput() {\n        const initialCursorStart: number = this._elementRef.nativeElement.selectionStart;\n        const initialCursorEnd: number = this._elementRef.nativeElement.selectionEnd;\n        let isAutocompleteTriggered: boolean = false;\n\n        const {\n            hoursOnly,\n            hoursAndMinutes,\n            hoursAndMinutesAndSeconds\n        } = this._getParsedTimeParts(this._elementRef.nativeElement.value);\n\n        // tslint:disable no-magic-numbers\n        if (hoursOnly &&\n            hoursOnly[1] &&\n            hoursOnly[1].length === 2) {\n            isAutocompleteTriggered = true;\n        } else if (hoursAndMinutes &&\n            hoursAndMinutes[1].length === 1 &&\n            hoursAndMinutes[2] &&\n            hoursAndMinutes[2].length === 2) {\n            isAutocompleteTriggered = true;\n        } else if (hoursAndMinutesAndSeconds &&\n            hoursAndMinutesAndSeconds[1].length === 2 &&\n            hoursAndMinutesAndSeconds[2].length === 2 &&\n            hoursAndMinutesAndSeconds[3] &&\n            hoursAndMinutesAndSeconds[3].length === 2) {\n            isAutocompleteTriggered = true;\n        }\n        // tslint:enable no-magic-numbers\n\n        this._applyInputChanges({ doTimestringReformat: isAutocompleteTriggered });\n\n        this._elementRef.nativeElement.selectionStart = initialCursorStart;\n        this._elementRef.nativeElement.selectionEnd = initialCursorEnd;\n\n        if (isAutocompleteTriggered && this.ngControl.errors === null) {\n            this._createSelectionOfTimeComponentInInput(initialCursorStart + 1);\n        }\n    }\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    get empty(): boolean {\n        return !this._elementRef.nativeElement.value && !this._isBadInput();\n    }\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    onContainerClick() {\n        this.focus();\n    }\n\n    writeValue(value: Date | null): void {\n        if (value !== null) {\n            this._renderer.setProperty(this._elementRef.nativeElement,\n                'value',\n                this._getTimeStringFromDate(value, this.timeFormat)\n            );\n        }\n        this._onChange(value || null);\n        this._applyInputChanges();\n    }\n\n    onKeyDown(event: KeyboardEvent): void {\n\n        const keyCode: string = this._getKeyCode(event);\n\n        if (keyCode === ARROW_UP_KEYCODE || keyCode === ARROW_DOWN_KEYCODE) {\n            this._upDownTimeByArrowKeys(event);\n        }\n        if (keyCode === ARROW_LEFT_KEYCODE || keyCode === ARROW_RIGHT_KEYCODE) {\n            this._switchSelectionBetweenTimeparts(event);\n        }\n    }\n\n    registerOnChange(fn: (value: Date) => void): void {\n        this._onChange = fn;\n    }\n\n    registerOnTouched(fn: () => void): void {\n        this._onTouched = fn;\n    }\n\n    /** Does some manual dirty checking on the native input `value` property. */\n    private _dirtyCheckNativeValue() {\n        const newValue = this.value;\n\n        if (this._previousNativeValue !== newValue) {\n            this._previousNativeValue = newValue;\n            this.stateChanges.next();\n        }\n    }\n\n    /** Checks whether the input is invalid based on the native validation. */\n    private _isBadInput(): boolean {\n        const validity = (<HTMLInputElement> this._elementRef.nativeElement).validity;\n\n        return validity && validity.badInput;\n    }\n\n    private _applyInputChanges(applyParams: {\n        changedTime?: Date;\n        doTimestringReformat?: boolean;\n    } = {}): void {\n        const { changedTime, doTimestringReformat = true } = applyParams;\n\n        const timeToApply: Date | undefined = changedTime ||\n            this._getDateFromTimeString(this._elementRef.nativeElement.value);\n        this._currentDTimeInput = timeToApply;\n\n        if (doTimestringReformat && timeToApply !== undefined) {\n            const selectionStart: number = this._elementRef.nativeElement.selectionStart;\n            const selectionEnd: number = this._elementRef.nativeElement.selectionEnd;\n            this._renderer.setProperty(\n                this._elementRef.nativeElement,\n                'value',\n                this._getTimeStringFromDate(timeToApply, this.timeFormat));\n            this._elementRef.nativeElement.selectionStart = selectionStart;\n            this._elementRef.nativeElement.selectionEnd = selectionEnd;\n        }\n\n        (<FormControl> this.ngControl.control).updateValueAndValidity();\n        const result = this.ngControl.errors === null && timeToApply !== undefined ? timeToApply : null;\n        this._onChange(result);\n        this.stateChanges.next();\n    }\n\n    private _upDownTimeByArrowKeys(event: KeyboardEvent): void {\n        event.preventDefault();\n\n        let changedTime: Date | undefined = this._currentDTimeInput;\n        if (changedTime !== undefined) {\n            const cursorPos = this._elementRef.nativeElement.selectionStart;\n\n            const modifiedTimePart = this._getTimeEditMetrics(cursorPos)\n                .modifiedTimePart;\n            const keyCode: string = this._getKeyCode(event);\n            if (keyCode === ARROW_UP_KEYCODE) { changedTime = this._incrementTime(changedTime, modifiedTimePart); }\n            if (keyCode === ARROW_DOWN_KEYCODE) { changedTime = this._decrementTime(changedTime, modifiedTimePart); }\n            this._applyInputChanges({ changedTime });\n            this._createSelectionOfTimeComponentInInput(cursorPos);\n        }\n    }\n\n    private _switchSelectionBetweenTimeparts(event: KeyboardEvent): void {\n        const changedTime: Date | undefined = this._currentDTimeInput;\n        const keyCode: string = this._getKeyCode(event);\n\n        if (changedTime !== undefined) {\n            let cursorPos: number = this._elementRef.nativeElement.selectionStart;\n            if (keyCode === ARROW_LEFT_KEYCODE) {\n                cursorPos = this._getCursorPositionOfPrevTimePartStart(cursorPos, this._elementRef.nativeElement.value);\n            } else if (keyCode === ARROW_RIGHT_KEYCODE) {\n                cursorPos = this._getCursorPositionOfNextTimePartStart(cursorPos, this._elementRef.nativeElement.value);\n            }\n            this._createSelectionOfTimeComponentInInput(cursorPos);\n        }\n    }\n\n    /**\n     * @description Microsoft EDGE doesn't support KeyboaedEvent.code thus we need this helper\n     */\n    private _getKeyCode(event: KeyboardEvent): string {\n        return event.code || event.key;\n    }\n\n    private _createSelectionOfTimeComponentInInput(cursorPos: number): void {\n        setTimeout(() => {\n            const newEditParams = this._getTimeEditMetrics(cursorPos);\n            this._elementRef.nativeElement.selectionStart = newEditParams.cursorStartPosition;\n            this._elementRef.nativeElement.selectionEnd = newEditParams.cursorEndPosition;\n        });\n    }\n\n    private _incrementTime(dateVal: Date,\n                           whatToIncrement: TimeParts = TimeParts.seconds): Date {\n        let { hours, minutes, seconds } = this._getTimeDigitsFromDate(dateVal);\n\n        switch (whatToIncrement) {\n            case TimeParts.hours:\n                hours++;\n                break;\n            case TimeParts.minutes:\n                minutes++;\n                break;\n            case TimeParts.seconds:\n                seconds++;\n                break;\n            default:\n        }\n\n        if (seconds > SECONDS_PER_MINUTE) { seconds = 0; }\n\n        if (minutes > MINUTES_PER_HOUR) { minutes = 0; }\n\n        if (hours > HOURS_PER_DAY) { hours = 0; }\n\n        return <Date> this._getDateFromTimeDigits(hours, minutes, seconds);\n    }\n\n    /**\n     * @description Decrement part of time\n     */\n    private _decrementTime(dateVal: Date,\n                           whatToDecrement: TimeParts = TimeParts.seconds): Date {\n        let { hours, minutes, seconds } = this._getTimeDigitsFromDate(dateVal);\n\n        switch (whatToDecrement) {\n            case TimeParts.hours:\n                hours--;\n                break;\n            case TimeParts.minutes:\n                minutes--;\n                break;\n            case TimeParts.seconds:\n                seconds--;\n                break;\n            default:\n        }\n\n        if (seconds < 0) { seconds = SECONDS_PER_MINUTE; }\n\n        if (minutes < 0) { minutes = MINUTES_PER_HOUR; }\n\n        if (hours < 0) { hours = HOURS_PER_DAY; }\n\n        return <Date> this._getDateFromTimeDigits(hours, minutes, seconds);\n    }\n\n    private _getCursorPositionOfPrevTimePartStart(cursorPos: number, timeString: string): number {\n        return cursorPos === 0 ? timeString.length : cursorPos - 1;\n    }\n\n    private _getCursorPositionOfNextTimePartStart(cursorPos: number,\n                                                  timeString: string,\n                                                  timeDevider: string = ':'): number {\n        const nextDividerPos: number = timeString.indexOf(timeDevider, cursorPos);\n\n        return nextDividerPos !== undefined ? nextDividerPos + 1 : 0;\n    }\n\n    /**\n     * @description Get params for arrow-keys (up/down) time valie edit.\n     * @param cursorPosition Current cursor position in timeString\n     */\n    private _getTimeEditMetrics(cursorPosition: number): {\n        modifiedTimePart: TimeParts;\n        cursorStartPosition: number;\n        cursorEndPosition: number;\n    } {\n        const timeString: string = this._elementRef.nativeElement.value;\n        let modifiedTimePart: TimeParts;\n        let cursorStartPosition: number;\n        let cursorEndPosition: number;\n        const hoursIndex = 0;\n        const minutesIndex = timeString.indexOf(':', hoursIndex + 1);\n        const secondsIndex = minutesIndex !== -1 ? timeString.indexOf(':', minutesIndex + 1) : -1;\n\n        if (secondsIndex !== -1 && cursorPosition > secondsIndex) {\n            modifiedTimePart = TimeParts.seconds;\n            cursorStartPosition = secondsIndex + 1;\n            cursorEndPosition = timeString.length;\n        } else if (minutesIndex !== -1 && cursorPosition > minutesIndex) {\n            modifiedTimePart = TimeParts.minutes;\n            cursorStartPosition = minutesIndex + 1;\n            cursorEndPosition = secondsIndex > -1 ? secondsIndex : timeString.length;\n        } else {\n            modifiedTimePart = TimeParts.hours;\n            cursorStartPosition = hoursIndex;\n            cursorEndPosition = minutesIndex !== -1 ? minutesIndex : timeString.length;\n        }\n\n        return {\n            modifiedTimePart,\n            cursorStartPosition,\n            cursorEndPosition\n        };\n    }\n\n    /**\n     * @description Create time string for displaying inside input element of UI\n     */\n    private _getTimeStringFromDate(tempVal: Date,\n                                   timeFormat: TimeFormats = DEFAULT_TIME_FORMAT): string {\n        const hours: string = this._getNumberWithLeadingZero(tempVal.getHours());\n        const minutes: string = this._getNumberWithLeadingZero(tempVal.getMinutes());\n        const seconds: string = this._getNumberWithLeadingZero(tempVal.getSeconds());\n\n        const formattedTimeGenerators = {\n            [TimeFormats.HHmm]: () => `${hours}:${minutes}`,\n            [TimeFormats.HHmmss]: () => `${hours}:${minutes}:${seconds}`\n        };\n\n        return formattedTimeGenerators[timeFormat]();\n    }\n\n    private _getParsedTimeParts(timeString: string): {\n        hoursOnly: any;\n        hoursAndMinutes: any;\n        hoursAndMinutesAndSeconds: any;\n    } {\n        const hoursAndMinutesAndSeconds = timeString.match(HOURS_MINUTES_SECONDS_REGEXP);\n        const hoursAndMinutes = timeString.match(HOURS_MINUTES_REGEXP);\n        const hoursOnly = timeString.match(HOURS_ONLY_REGEXP);\n\n        return {\n            hoursOnly,\n            hoursAndMinutes,\n            hoursAndMinutesAndSeconds\n        };\n    }\n\n    /**\n     * @description Create Date object from separate parts of time\n     */\n    private _getDateFromTimeDigits(hours: number, minutes: number, seconds: number = 0): Date | undefined {\n        return this._getDateFromTimeString(`${hours}:${minutes}:${seconds}`);\n    }\n\n    private _getDateFromTimeString(timeString: string | undefined): Date | undefined {\n        // TODO Use moment-js\n        if (timeString === undefined) { return; }\n\n        const {\n            hoursOnly,\n            hoursAndMinutes,\n            hoursAndMinutesAndSeconds\n        } = this._getParsedTimeParts(timeString);\n\n        if (timeString.trim().length === 0 ||\n            hoursOnly === null && hoursAndMinutes === null && hoursAndMinutesAndSeconds === null) {\n            return;\n        }\n\n        // tslint:disable no-magic-numbers\n        let hours: number = 0;\n        let minutes: number = 0;\n        let seconds: number = 0;\n\n        if (hoursOnly) {\n            hours = Number(hoursOnly[1]);\n        } else if (hoursAndMinutes) {\n            hours = Number(hoursAndMinutes[1]);\n            minutes = Number(hoursAndMinutes[2]);\n        } else if (hoursAndMinutesAndSeconds) {\n            hours = Number(hoursAndMinutesAndSeconds[1]);\n            minutes = Number(hoursAndMinutesAndSeconds[2]);\n            seconds = Number(hoursAndMinutesAndSeconds[3]);\n        }\n        // const timestamp: number = Date.parse(fullDateString);\n        const resultDate: Date = new Date(1970, 0, 1, hours, minutes, seconds);\n        // tslint:enable no-magic-numbers\n\n        return isNaN(resultDate.getTime()) ? undefined : resultDate;\n    }\n\n    private _getNumberWithLeadingZero(digit: number): string {\n        const MAX_DIGIT_WITH_LEADING_ZERO: number = 9;\n\n        return digit > MAX_DIGIT_WITH_LEADING_ZERO ? `${digit}` : `0${digit}`;\n    }\n\n    private _getTimeDigitsFromDate(dateVal: Date): { hours: number; minutes: number; seconds: number } {\n        return {\n            hours: dateVal.getHours(),\n            minutes: dateVal.getMinutes(),\n            seconds: dateVal.getSeconds()\n        };\n    }\n\n    private _parseValidator(): ValidationErrors | null {\n        return this._currentDTimeInput === undefined ?\n            { mcTimepickerParse: { text: this._elementRef.nativeElement.value } } :\n            null;\n    }\n\n    private _minTimeValidator(): ValidationErrors | null {\n\n        if (this._currentDTimeInput !== undefined &&\n            this._minDTime !== undefined &&\n            this._isTimeLowerThenMin(this._currentDTimeInput)) {\n            return { mcTimepickerLowerThenMintime: { text: this._elementRef.nativeElement.value } };\n        }\n\n        return null;\n    }\n\n    private _maxTimeValidator(): ValidationErrors | null {\n        if (this._currentDTimeInput !== undefined &&\n            this._maxDTime !== undefined &&\n            this._isTimeGreaterThenMax(this._currentDTimeInput)) {\n            return { mcTimepickerHigherThenMaxtime: { text: this._elementRef.nativeElement.value } };\n        }\n\n        return null;\n    }\n\n    private _isTimeLowerThenMin(timeToCompare: Date): boolean {\n        return timeToCompare.getTime() - (<Date> this._minDTime).getTime() < 0;\n    }\n\n    private _isTimeGreaterThenMax(timeToCompare: Date): boolean {\n        return timeToCompare.getTime() - (<Date> this._maxDTime).getTime() >= 0;\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\n\nimport { A11yModule } from '@ptsecurity/cdk/a11y';\nimport { PlatformModule } from '@ptsecurity/cdk/platform';\n\nimport { McTimepicker } from './timepicker';\n\n\n@NgModule({\n    imports: [\n        CommonModule,\n        A11yModule,\n        PlatformModule,\n        FormsModule\n    ],\n    declarations: [\n        McTimepicker\n    ],\n    exports: [\n        McTimepicker\n    ]\n})\nexport class McTimepickerModule {}\n","import {\n    animate,\n    AnimationTriggerMetadata,\n    state,\n    style,\n    transition,\n    trigger,\n    query,\n    animateChild,\n    group\n} from '@angular/animations';\n\n\n/**\n * The following are all the animations for the mat-select component, with each\n * const containing the metadata for one animation.\n *\n * The values below match the implementation of the AngularJS Material mat-select animation.\n */\nexport const mcSelectAnimations: {\n    readonly transformPanel: AnimationTriggerMetadata;\n    readonly fadeInContent: AnimationTriggerMetadata;\n} = {\n    /**\n     * This animation transforms the select's overlay panel on and off the page.\n     *\n     * When the panel is attached to the DOM, it expands its width by the amount of padding, scales it\n     * up to 100% on the Y axis, fades in its border, and translates slightly up and to the\n     * side to ensure the option text correctly overlaps the trigger text.\n     *\n     * When the panel is removed from the DOM, it simply fades out linearly.\n     */\n    transformPanel: trigger('transformPanel', [\n        state('void', style({\n            transform: 'scaleY(0)',\n            minWidth: '100%',\n            opacity: 0\n        })),\n        transition('void => *', group([\n            query('@fadeInContent', animateChild()),\n            animate('150ms cubic-bezier(0.25, 0.8, 0.25, 1)')\n        ])),\n        transition('* => void', [\n            animate('250ms 100ms linear', style({ opacity: 0 }))\n        ])\n    ]),\n\n    /**\n     * This animation fades in the background color and text content of the\n     * select's options. It is time delayed to occur 100ms after the overlay\n     * panel has transformed in.\n     */\n    fadeInContent: trigger('fadeInContent', [\n        state('showing', style({ opacity: 1 })),\n        transition('void => showing', [\n            style({ opacity: 0 }),\n            animate('150ms 100ms cubic-bezier(0.55, 0, 0.55, 0.2)')\n        ])\n    ])\n};\n\n\n/**\n * @deprecated\n * @breaking-change 7.0.0\n */\nexport const transformPanel = mcSelectAnimations.transformPanel;\n\n/**\n * @deprecated\n * @breaking-change 7.0.0\n */\nexport const fadeInContent = mcSelectAnimations.fadeInContent;\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { OverlayModule } from '@ptsecurity/cdk/overlay';\nimport { McOptionModule } from '@ptsecurity/mosaic/core';\nimport { McFormFieldModule } from '@ptsecurity/mosaic/form-field';\nimport { McIconModule } from '@ptsecurity/mosaic/icon';\nimport { McTagModule } from '@ptsecurity/mosaic/tag';\n\nimport { MC_SELECT_SCROLL_STRATEGY_PROVIDER, McSelect, McSelectTrigger } from './select.component';\n\n\n@NgModule({\n    imports: [\n        CommonModule,\n        OverlayModule,\n        McOptionModule,\n        McIconModule,\n        McTagModule\n    ],\n    exports: [McFormFieldModule, McSelect, McSelectTrigger, McOptionModule, CommonModule],\n    declarations: [McSelect, McSelectTrigger],\n    providers: [MC_SELECT_SCROLL_STRATEGY_PROVIDER]\n})\nexport class McSelectModule {}\n","import {\n    ChangeDetectionStrategy,\n    Component,\n    ViewEncapsulation,\n    ElementRef,\n    Input\n} from '@angular/core';\nimport { CanColor, CanColorCtor, mixinColor, ThemePalette } from '@ptsecurity/mosaic/core';\n\n\nexport type ProgressSpinnerMode = 'determinate' | 'indeterminate';\n\nlet idIterator = 0;\n\nconst MIN_PERCENT = 0;\nconst MAX_PERCENT = 100;\n\nexport class McProgressSpinnerBase {\n    constructor(public _elementRef: ElementRef) {}\n}\n\nexport const _McProgressSpinnerMixinBase:\n    CanColorCtor &\n    typeof McProgressSpinnerBase =\n        mixinColor(McProgressSpinnerBase);\n\nconst MAX_DASH_ARRAY = 273;\n\n@Component({\n    selector: 'mc-progress-spinner',\n    templateUrl: './progress-spinner.component.html',\n    styleUrls: ['./progress-spinner.css'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n    host: {\n        class: 'mc-progress-spinner',\n        '[attr.id]': 'id'\n    }\n})\nexport class McProgressSpinner extends _McProgressSpinnerMixinBase implements CanColor {\n    @Input() id: string = `mc-progress-spinner-${idIterator++}`;\n    @Input() value: number = 0;\n    @Input() mode: ProgressSpinnerMode = 'determinate';\n    @Input() color: ThemePalette = ThemePalette.Primary;\n\n    constructor(elementRef: ElementRef) {\n        super(elementRef);\n    }\n\n    get percentage(): number {\n        return Math.max(MIN_PERCENT, Math.min(MAX_PERCENT, this.value)) / MAX_PERCENT;\n    }\n\n    get dashOffsetPercent(): string {\n        return `${MAX_DASH_ARRAY - this.percentage * MAX_DASH_ARRAY}%`;\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { PlatformModule } from '@ptsecurity/cdk/platform';\n\nimport { McProgressSpinner } from './progress-spinner.component';\n\n\n@NgModule({\n    imports: [\n        CommonModule,\n        PlatformModule\n    ],\n    exports: [\n        McProgressSpinner\n    ],\n    declarations: [\n        McProgressSpinner\n    ]\n})\nexport class McProgressSpinnerModule {}\n","import {\n    AfterContentInit,\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component, ContentChildren, Directive, ElementRef, EventEmitter, forwardRef,\n    Input, OnDestroy, OnInit, Optional, Output, QueryList,\n    ViewChild,\n    ViewEncapsulation\n} from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\n\nimport { UniqueSelectionDispatcher } from '@ptsecurity/cdk/collections';\n\nimport {\n    CanColor, CanColorCtor,\n    CanDisable, CanDisableCtor,\n    HasTabIndex, HasTabIndexCtor,\n    mixinColor,\n    mixinDisabled,\n    mixinTabIndex,\n    toBoolean\n} from '@ptsecurity/mosaic/core';\n\n\n// Increasing integer for generating unique ids for radio components.\nlet nextUniqueId = 0;\n\n/** Change event object emitted by McRadio. */\nexport class McRadioChange {\n    constructor(\n        /** The McRadioButton that emits the change event. */\n        public source: McRadioButton,\n        /** The value of the McRadioButton. */\n        public value: any) {}\n}\n\n// Boilerplate for applying mixins to McRadioGroup.\n/** @docs-private */\nexport class McRadioGroupBase {}\nexport const _McRadioGroupMixinBase: CanDisableCtor & typeof McRadioGroupBase = mixinDisabled(McRadioGroupBase);\n\n/**\n * Provider Expression that allows mc-radio-group to register as a ControlValueAccessor. This\n * allows it to support [(ngModel)] and ngControl.\n * @docs-private\n */\nexport const MC_RADIO_GROUP_CONTROL_VALUE_ACCESSOR: any = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => McRadioGroup),\n    multi: true\n};\n\n@Directive({\n    selector: 'mc-radio-group',\n    exportAs: 'mcRadioGroup',\n    providers: [MC_RADIO_GROUP_CONTROL_VALUE_ACCESSOR],\n    host: {\n        role: 'radiogroup',\n        class: 'mc-radio-group'\n    },\n    inputs: ['disabled']\n})\nexport class McRadioGroup extends _McRadioGroupMixinBase\n    implements AfterContentInit, ControlValueAccessor, CanDisable {\n\n    /** Name of the radio button group. All radio buttons inside this group will use this name. */\n    @Input()\n    get name(): string { return this._name; }\n    set name(value: string) {\n        this._name = value;\n        this.updateRadioButtonNames();\n    }\n\n    /** Whether the labels should appear after or before the radio-buttons. Defaults to 'after' */\n    @Input()\n    get labelPosition(): 'before' | 'after' {\n        return this._labelPosition;\n    }\n    set labelPosition(v) {\n        this._labelPosition = v === 'before' ? 'before' : 'after';\n        this.markRadiosForCheck();\n    }\n\n    /** Value of the radio button. */\n    @Input()\n    get value(): any { return this._value; }\n    set value(newValue: any) {\n        if (this._value !== newValue) {\n            // Set this before proceeding to ensure no circular loop occurs with selection.\n            this._value = newValue;\n\n            this.updateSelectedRadioFromValue();\n            this.checkSelectedRadioButton();\n        }\n    }\n\n    /** Whether the radio button is selected. */\n    @Input()\n    get selected() { return this._selected; }\n    set selected(selected: McRadioButton | null) {\n        this._selected = selected;\n        this.value = selected ? selected.value : null;\n        this.checkSelectedRadioButton();\n    }\n\n    /** Whether the radio group is disabled */\n    @Input()\n    get disabled(): boolean { return this._disabled; }\n    set disabled(value) {\n        this._disabled = toBoolean(value);\n        this.markRadiosForCheck();\n    }\n\n    /** Whether the radio group is required */\n    @Input()\n    get required(): boolean { return this._required; }\n    set required(value: boolean) {\n        this._required = toBoolean(value);\n        this.markRadiosForCheck();\n    }\n\n    /**\n     * Event emitted when the group value changes.\n     * Change events are only emitted when the value changes due to user interaction with\n     * a radio button (the same behavior as `<input type-\"radio\">`).\n     */\n    @Output() readonly change: EventEmitter<McRadioChange> = new EventEmitter<McRadioChange>();\n\n    /** Child radio buttons. */\n    @ContentChildren(forwardRef(() => McRadioButton), { descendants: true })\n    _radios: QueryList<McRadioButton>;\n\n    /**\n     * Selected value for group. Should equal the value of the selected radio button if there *is*\n     * a corresponding radio button with a matching value. If there is *not* such a corresponding\n     * radio button, this value persists to be applied in case a new radio button is added with a\n     * matching value.\n     */\n    private _value: any = null;\n\n    /** The HTML name attribute applied to radio buttons in this group. */\n    private _name: string = `mc-radio-group-${nextUniqueId++}`;\n\n    /** The currently selected radio button. Should match value. */\n    private _selected: McRadioButton | null = null;\n\n    /** Whether the `value` has been set to its initial value. */\n    private _isInitialized: boolean = false;\n\n    /** Whether the labels should appear after or before the radio-buttons. Defaults to 'after' */\n    private _labelPosition: 'before' | 'after' = 'after';\n\n    /** Whether the radio group is disabled. */\n    private _disabled: boolean = false;\n\n    /** Whether the radio group is required. */\n    private _required: boolean = false;\n\n    constructor(\n        private readonly _changeDetector: ChangeDetectorRef\n    ) {\n        super();\n    }\n\n    /** The method to be called in order to update ngModel */\n    // tslint:disable-next-line\n    controlValueAccessorChangeFn: (value: any) => void = () => {};\n\n    /**\n     * onTouch function registered via registerOnTouch (ControlValueAccessor).\n     * @docs-private\n     */\n    // tslint:disable-next-line\n    onTouched: () => any = () => {};\n\n    checkSelectedRadioButton() {\n        if (this._selected && !this._selected.checked) {\n            this._selected.checked = true;\n        }\n    }\n\n    /**\n     * Initialize properties once content children are available.\n     * This allows us to propagate relevant attributes to associated buttons.\n     */\n    ngAfterContentInit() {\n        // Mark this component as initialized in AfterContentInit because the initial value can\n        // possibly be set by NgModel on McRadioGroup, and it is possible that the OnInit of the\n        // NgModel occurs *after* the OnInit of the McRadioGroup.\n        this._isInitialized = true;\n    }\n\n    /**\n     * Mark this group as being \"touched\" (for ngModel). Meant to be called by the contained\n     * radio buttons upon their blur.\n     */\n    touch() {\n        if (this.onTouched) {\n            this.onTouched();\n        }\n    }\n\n    /** Dispatch change event with current selection and group value. */\n    emitChangeEvent(): void {\n        if (this._isInitialized) {\n            this.change.emit(new McRadioChange(this._selected!, this._value));\n        }\n    }\n\n    markRadiosForCheck() {\n        if (this._radios) {\n            this._radios.forEach((radio) => radio.markForCheck());\n        }\n    }\n\n    /**\n     * Sets the model value. Implemented as part of ControlValueAccessor.\n     */\n    writeValue(value: any) {\n        this.value = value;\n        this._changeDetector.markForCheck();\n    }\n\n    /**\n     * Registers a callback to be triggered when the model value changes.\n     * Implemented as part of ControlValueAccessor.\n     * @param fn Callback to be registered.\n     */\n    registerOnChange(fn: (value: any) => void) {\n        this.controlValueAccessorChangeFn = fn;\n    }\n\n    /**\n     * Registers a callback to be triggered when the control is touched.\n     * Implemented as part of ControlValueAccessor.\n     * @param fn Callback to be registered.\n     */\n    registerOnTouched(fn: any) {\n        this.onTouched = fn;\n    }\n\n    /**\n     * Sets the disabled state of the control. Implemented as a part of ControlValueAccessor.\n     * @param isDisabled Whether the control should be disabled.\n     */\n    setDisabledState(isDisabled: boolean) {\n        this.disabled = isDisabled;\n        this._changeDetector.markForCheck();\n    }\n\n    private updateRadioButtonNames(): void {\n        if (this._radios) {\n            this._radios.forEach((radio) => {\n                radio.name = this.name;\n            });\n        }\n    }\n\n    /** Updates the `selected` radio button from the internal _value state. */\n    private updateSelectedRadioFromValue(): void {\n        // If the value already matches the selected radio, do nothing.\n        const isAlreadySelected = this._selected !== null && this._selected.value === this._value;\n\n        if (this._radios != null && !isAlreadySelected) {\n            this._selected = null;\n            this._radios.forEach((radio) => {\n                radio.checked = this.value === radio.value;\n                if (radio.checked) {\n                    this._selected = radio;\n                }\n            });\n        }\n    }\n}\n\n\n// Boilerplate for applying mixins to McRadioButton.\n/** @docs-private */\nexport class McRadioButtonBase {\n    // Since the disabled property is manually defined for the McRadioButton and isn't set up in\n    // the mixin base class. To be able to use the tabindex mixin, a disabled property must be\n    // defined to properly work.\n    disabled: boolean;\n\n    constructor(public _elementRef: ElementRef) {}\n}\n\nexport const _McRadioButtonMixinBase:\n    CanColorCtor &\n    HasTabIndexCtor &\n    typeof McRadioButtonBase =\n        mixinColor(mixinTabIndex(McRadioButtonBase));\n\n\n@Component({\n    selector: 'mc-radio-button',\n    templateUrl: 'radio.component.html',\n    styleUrls: ['radio.css'],\n    inputs: ['color', 'tabIndex'],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    exportAs: 'mcRadioButton',\n    host: {\n        class: 'mc-radio-button',\n        '[attr.id]': 'id',\n        '[class.mc-radio-checked]': 'checked',\n        '[class.mc-radio-disabled]': 'disabled',\n        '(focus)': '_inputElement.nativeElement.focus()'\n    }\n})\nexport class McRadioButton extends _McRadioButtonMixinBase\n    implements OnInit, OnDestroy, CanColor, HasTabIndex {\n\n    private readonly _uniqueId: string = `mc-radio-${++nextUniqueId}`;\n\n    /* tslint:disable:member-ordering */\n\n    /** The unique ID for the radio button. */\n    @Input() id: string = this._uniqueId;\n\n    /** Analog to HTML 'name' attribute used to group radios for unique selection. */\n    @Input() name: string;\n\n    /** Used to set the 'aria-label' attribute on the underlying input element. */\n    @Input('aria-label') ariaLabel: string;\n\n    /** The 'aria-labelledby' attribute takes precedence as the element's text alternative. */\n    @Input('aria-labelledby') ariaLabelledby: string;\n\n    /** The 'aria-describedby' attribute is read after the element's label and field type. */\n    @Input('aria-describedby') ariaDescribedby: string;\n\n    /** Whether this radio button is checked. */\n    @Input()\n    get checked(): boolean { return this._checked; }\n    set checked(value: boolean) {\n        const newCheckedState = toBoolean(value);\n\n        if (this._checked !== newCheckedState) {\n            this._checked = newCheckedState;\n\n            if (newCheckedState && this.radioGroup && this.radioGroup.value !== this.value) {\n                this.radioGroup.selected = this;\n            } else if (!newCheckedState && this.radioGroup && this.radioGroup.value === this.value) {\n                // When unchecking the selected radio button, update the selected radio\n                // property on the group.\n                this.radioGroup.selected = null;\n            }\n\n            if (newCheckedState) {\n                // Notify all radio buttons with the same name to un-check.\n                this._radioDispatcher.notify(this.id, this.name);\n            }\n            this._changeDetector.markForCheck();\n        }\n    }\n\n    /** The value of this radio button. */\n    @Input()\n    get value(): any { return this._value; }\n    set value(value: any) {\n        if (this._value !== value) {\n            this._value = value;\n            if (this.radioGroup != null) {\n                if (!this.checked) {\n                    // Update checked when the value changed to match the radio group's value\n                    this.checked = this.radioGroup.value === value;\n                }\n                if (this.checked) {\n                    this.radioGroup.selected = this;\n                }\n            }\n        }\n    }\n\n    /** Whether the radio button is disabled. */\n    @Input()\n    get disabled(): boolean {\n        return this._disabled || (this.radioGroup != null && this.radioGroup.disabled);\n    }\n    set disabled(value: boolean) {\n        const newDisabledState = toBoolean(value);\n\n        if (this._disabled !== newDisabledState) {\n\n            this._disabled = newDisabledState;\n            this._changeDetector.markForCheck();\n        }\n    }\n\n    /** Whether the radio button is required. */\n    @Input()\n    get required(): boolean {\n        return this._required || (this.radioGroup && this.radioGroup.required);\n    }\n    set required(value: boolean) {\n        this._required = toBoolean(value);\n    }\n\n    /** Whether the label should appear after or before the radio button. Defaults to 'after' */\n    @Input()\n    get labelPosition(): 'before' | 'after' {\n        return this._labelPosition || (this.radioGroup && this.radioGroup.labelPosition) || 'after';\n    }\n    set labelPosition(value) {\n        this._labelPosition = value;\n    }\n    private _labelPosition: 'before' | 'after';\n\n    /** The native `<input type=radio>` element */\n    @ViewChild('input') _inputElement: ElementRef;\n\n    /**\n     * Event emitted when the checked state of this radio button changes.\n     * Change events are only emitted when the value changes due to user interaction with\n     * the radio button (the same behavior as `<input type-\"radio\">`).\n     */\n    @Output() readonly change: EventEmitter<McRadioChange> = new EventEmitter<McRadioChange>();\n\n    /** The parent radio group. May or may not be present. */\n    radioGroup: McRadioGroup;\n\n    @Input()\n    isFocused: boolean = false;\n\n    /** ID of the native input element inside `<mc-radio-button>` */\n    get inputId(): string { return `${this.id || this._uniqueId}-input`; }\n\n    /** Whether this radio is checked. */\n    private _checked: boolean = false;\n\n    /** Whether this radio is disabled. */\n    private _disabled: boolean;\n\n    /** Whether this radio is required. */\n    private _required: boolean;\n\n    /** Value assigned to this radio. */\n    private _value: any = null;\n\n    /** Unregister function for _radioDispatcher */\n    // tslint:disable-next-line\n    private readonly removeUniqueSelectionListener: () => void = () => {};\n\n    constructor(\n        @Optional() radioGroup: McRadioGroup,\n        elementRef: ElementRef,\n        private readonly _changeDetector: ChangeDetectorRef,\n        private readonly _radioDispatcher: UniqueSelectionDispatcher\n    ) {\n\n        super(elementRef);\n\n        this.radioGroup = radioGroup;\n\n        this.removeUniqueSelectionListener =\n            _radioDispatcher.listen((id: string, name: string) => {\n                if (id !== this.id && name === this.name) {\n                    this.checked = false;\n                }\n            });\n    }\n\n    ngOnInit() {\n        if (this.radioGroup) {\n            // If the radio is inside a radio group, determine if it should be checked\n            this.checked = this.radioGroup.value === this._value;\n            // Copy name from parent radio group\n            this.name = this.radioGroup.name;\n        }\n    }\n\n    ngOnDestroy() {\n        this.removeUniqueSelectionListener();\n    }\n\n    /** Focuses the radio button. */\n    // tslint:disable-next-line\n    focus(): void {}\n\n    /**\n     * Marks the radio button as needing checking for change detection.\n     * This method is exposed because the parent radio group will directly\n     * update bound properties of the radio button.\n     */\n    markForCheck() {\n        // When group value changes, the button will not be notified. Use `markForCheck` to explicit\n        // update radio button's status\n        this._changeDetector.markForCheck();\n    }\n\n    onInputClick(event: Event) {\n        // We have to stop propagation for click events on the visual hidden input element.\n        // By default, when a user clicks on a label element, a generated click event will be\n        // dispatched on the associated input element. Since we are using a label element as our\n        // root container, the click event on the `radio-button` will be executed twice.\n        // The real click event will bubble up, and the generated click event also tries to bubble up.\n        // This will lead to multiple click events.\n        // Preventing bubbling for the second event will solve that issue.\n        event.stopPropagation();\n    }\n\n    onInputChange(event: Event) {\n        // We always have to stop propagation on the change event.\n        // Otherwise the change event, from the input element, will bubble up and\n        // emit its event object to the `change` output.\n        event.stopPropagation();\n\n        const groupValueChanged = this.radioGroup && this.value !== this.radioGroup.value;\n        this.checked = true;\n        this.emitChangeEvent();\n\n        if (this.radioGroup) {\n            this.radioGroup.controlValueAccessorChangeFn(this.value);\n            this.radioGroup.touch();\n            if (groupValueChanged) {\n                this.radioGroup.emitChangeEvent();\n            }\n        }\n    }\n\n    /** Dispatch change event with current value. */\n    private emitChangeEvent(): void {\n        this.change.emit(new McRadioChange(this, this._value));\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { A11yModule } from '@ptsecurity/cdk/a11y';\nimport { McCommonModule } from '@ptsecurity/mosaic/core';\n\nimport { McRadioButton, McRadioGroup } from './radio.component';\n\n\n@NgModule({\n    imports: [CommonModule, A11yModule, McCommonModule],\n    exports: [McRadioGroup, McRadioButton],\n    declarations: [McRadioGroup, McRadioButton]\n})\nexport class McRadioModule {\n}\n","import { Directive, Input } from '@angular/core';\n\nimport { CdkTreeNodeDef } from '@ptsecurity/cdk/tree';\n\n\n@Directive({\n    selector: '[mcTreeNodeDef]',\n    inputs: ['when: mcTreeNodeDefWhen'],\n    providers: [{ provide: CdkTreeNodeDef, useExisting: McTreeNodeDef }]\n})\nexport class McTreeNodeDef<T> extends CdkTreeNodeDef<T> {\n    @Input('mcTreeNode') data: T;\n}\n","import { Directive, Input, OnInit } from '@angular/core';\nimport { CdkTreeNodePadding } from '@ptsecurity/cdk/tree';\n\n\n@Directive({\n    selector: '[mcTreeNodePadding]',\n    providers: [{ provide: CdkTreeNodePadding, useExisting: McTreeNodePadding }]\n})\nexport class McTreeNodePadding<T> extends CdkTreeNodePadding<T> implements OnInit {\n    get leftPadding(): number {\n        return (this._withIcon ? 0 : this._iconWidth) + this._baseLeftPadding;\n    }\n\n    _baseLeftPadding: number = 6;\n    _iconWidth: number = 20;\n    _indent: number = 16;\n\n    @Input('mcTreeNodePadding') level: number;\n\n    @Input('mcTreeNodePaddingIndent') indent: number;\n\n    _withIcon: boolean;\n\n    _paddingIndent(): string | null {\n        const nodeLevel = (this._treeNode.data && this._tree.treeControl.getLevel)\n            ? this._tree.treeControl.getLevel(this._treeNode.data)\n            : null;\n\n        const level = this._level || nodeLevel;\n\n        return level ? `${(level * this._indent) + this.leftPadding}px` : `${this._baseLeftPadding}px`;\n    }\n\n    ngOnInit(): void {\n        this._withIcon = this._tree.treeControl.isExpandable(this._treeNode.data);\n        this._setPadding();\n    }\n}\n","import {\n    AfterContentInit,\n    Attribute,\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component, ContentChildren, EventEmitter, forwardRef, Input, IterableDiffer,\n    IterableDiffers, Output, QueryList,\n    ViewChild,\n    ViewEncapsulation,\n    Directive, ElementRef, Inject\n} from '@angular/core';\nimport { NodeDef, ViewData } from '@angular/core/src/view';\n\nimport { SelectionModel } from '@ptsecurity/cdk/collections';\nimport { CdkTreeNode, CdkTree, CdkTreeNodeOutlet } from '@ptsecurity/cdk/tree';\n\nimport {\n    CanDisable, CanDisableCtor,\n    HasTabIndex,\n    HasTabIndexCtor,\n    mixinDisabled,\n    mixinTabIndex,\n    toBoolean\n} from '@ptsecurity/mosaic/core';\n\nimport { FocusKeyManager } from '@ptsecurity/cdk/a11y';\n\nimport { END, ENTER, HOME, LEFT_ARROW, PAGE_DOWN, PAGE_UP, RIGHT_ARROW, SPACE } from '@ptsecurity/cdk/keycodes';\n\n\n/**\n * Wrapper for the CdkTree node with Material design styles.\n */\n@Directive({\n    exportAs: 'mcTreeNodeOption',\n    selector: 'mc-tree-node-option',\n    host: {\n        tabindex: '-1',\n        '[class.mc-selected]': 'selected',\n        '[class.mc-focused]': '_hasFocus',\n        '[attr.aria-expanded]': 'isExpanded',\n        '[attr.aria-level]': 'role === \"treeitem\" ? level : null',\n        class: 'mc-tree-node',\n\n        '(focus)': '_handleFocus()',\n        '(blur)': '_handleBlur()',\n\n        '(click)': '_handleClick()'\n    },\n    providers: [\n        { provide: CdkTreeNode, useExisting: McTreeNodeOption }\n    ]\n})\nexport class McTreeNodeOption<T> extends CdkTreeNode<T> implements CanDisable {\n    @Input() role: 'treeitem' | 'group' = 'treeitem';\n\n    @Input()\n    get disabled() {\n        return this._disabled;\n    }\n\n    set disabled(value: any) {\n        const newValue = toBoolean(value);\n\n        if (newValue !== this._disabled) {\n            this._disabled = newValue;\n        }\n    }\n\n    @Input()\n    get selected(): boolean {\n        return this.treeSelection.selectedOptions && this.treeSelection.selectedOptions.isSelected(this) || false;\n    }\n\n    set selected(value: boolean) {\n        const isSelected = toBoolean(value);\n\n        if (isSelected !== this._selected) {\n            this.setSelected(isSelected);\n\n            // this.treeSelection._reportValueChange();\n        }\n    }\n\n    private _hasFocus: boolean = false;\n\n    private _disabled: boolean = false;\n    private _selected: boolean = false;\n\n    constructor(\n        protected _elementRef: ElementRef,\n        @Inject(forwardRef(() => McTreeSelection))\n        protected treeSelection: McTreeSelection<T>\n    ) {\n        super(_elementRef, treeSelection);\n    }\n\n    focus(): void {\n        this._elementRef.nativeElement.focus();\n\n        this.treeSelection.setFocusedOption(this);\n    }\n\n    toggle(): void {\n        this.selected = !this.selected;\n    }\n\n    setSelected(selected: boolean) {\n        if (this._selected === selected || !this.treeSelection.selectedOptions) { return; }\n\n        this._selected = selected;\n\n        if (selected) {\n            this.treeSelection.selectedOptions.select(this);\n        } else {\n            this.treeSelection.selectedOptions.deselect(this);\n        }\n\n        // this._changeDetector.markForCheck();\n    }\n\n    _getHeight(): number {\n        return this._elementRef.nativeElement.getClientRects()[0].height;\n    }\n\n    _handleFocus(): void {\n        if (this.disabled || this._hasFocus) { return; }\n\n        this._hasFocus = true;\n    }\n\n    _handleBlur(): void {\n        this._hasFocus = false;\n    }\n\n    _handleClick(): void {\n        if (this.disabled) { return; }\n\n        this.treeSelection.setFocusedOption(this);\n    }\n}\n\nexport const _McTreeSelectionBase:\n    HasTabIndexCtor &\n    CanDisableCtor &\n    typeof CdkTree\n    = mixinTabIndex(mixinDisabled(CdkTree));\n\nexport class McTreeNavigationChange {\n    constructor(\n        public source: McTreeSelection<any>,\n        public option: McTreeNodeOption<any>\n    ) {}\n}\n\nexport class McTreeSelectionChange {\n    constructor(\n        public source: McTreeSelection<any>,\n        public option: McTreeNodeOption<any>\n    ) {}\n}\n\n@Component({\n    exportAs: 'mcTreeSelection',\n    selector: 'mc-tree-selection',\n    template: `<ng-container cdkTreeNodeOutlet></ng-container>`,\n    host: {\n        '[tabIndex]': 'tabIndex',\n        class: 'mc-tree-selection',\n        role: 'tree-selection',\n        '(keydown)': '_onKeyDown($event)',\n        '(window:resize)': 'updateScrollSize()'\n    },\n    styleUrls: ['./tree.css'],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    providers: [{ provide: CdkTree, useExisting: McTreeSelection }]\n})\nexport class McTreeSelection<T> extends _McTreeSelectionBase<T>\n    implements AfterContentInit, CanDisable, HasTabIndex {\n    // Outlets within the tree's template where the dataNodes will be inserted.\n    @ViewChild(CdkTreeNodeOutlet) _nodeOutlet: CdkTreeNodeOutlet;\n\n    @ContentChildren(forwardRef(() => McTreeNodeOption)) options: QueryList<McTreeNodeOption<T>>;\n\n    _keyManager: FocusKeyManager<McTreeNodeOption<T>>;\n\n    selectedOptions: SelectionModel<McTreeNodeOption<T>>;\n\n    _disabled: boolean = false;\n    tabIndex: number;\n    multiple: boolean;\n    autoSelect: boolean;\n    noUnselect: boolean;\n\n    // todo temporary solution\n    withShift: boolean;\n    withCtrl: boolean;\n\n    @Input()\n    get disabled(): boolean {\n        return this._disabled;\n    }\n\n    set disabled(rawValue: boolean) {\n        const value = toBoolean(rawValue);\n\n        if (this._disabled !== value) {\n            this._disabled = value;\n\n            if (this._disabled) {\n                console.log('need disable all options');\n            } else {\n                console.log('need enable all options');\n            }\n        }\n    }\n\n    @Output() readonly navigationChange = new EventEmitter<McTreeNavigationChange>();\n\n    @Output() readonly selectionChange = new EventEmitter<McTreeSelectionChange>();\n\n    constructor(\n        private _elementRef: ElementRef,\n        _differs: IterableDiffers,\n        _changeDetectorRef: ChangeDetectorRef,\n        @Attribute('tabindex') tabIndex: string,\n        @Attribute('multiple') multiple: string,\n        @Attribute('auto-select') autoSelect: string,\n        @Attribute('no-unselect') noUnselect: string\n    ) {\n        super(_differs, _changeDetectorRef);\n\n        this.tabIndex = parseInt(tabIndex) || 0;\n\n        this.multiple = multiple === null ? true : toBoolean(multiple);\n        this.autoSelect = autoSelect === null ? true : toBoolean(autoSelect);\n        this.noUnselect = noUnselect === null ? true : toBoolean(noUnselect);\n\n        this.selectedOptions = new SelectionModel<McTreeNodeOption<T>>(this.multiple);\n    }\n\n    _onKeyDown(event: KeyboardEvent) {\n        const keyCode = event.keyCode;\n        this.withShift = event.shiftKey;\n        this.withCtrl = event.ctrlKey;\n\n        switch (keyCode) {\n            case LEFT_ARROW:\n                if (this._keyManager.activeItem) {\n                    this.treeControl.collapse(this._keyManager.activeItem.data);\n                }\n\n                event.preventDefault();\n\n                break;\n            case RIGHT_ARROW:\n                if (this._keyManager.activeItem) {\n                    this.treeControl.expand(this._keyManager.activeItem.data);\n                }\n\n                event.preventDefault();\n\n                break;\n            case SPACE:\n            case ENTER:\n                this.toggleFocusedOption();\n                event.preventDefault();\n\n                break;\n            case HOME:\n                this._keyManager.setFirstItemActive();\n                event.preventDefault();\n\n                break;\n            case END:\n                this._keyManager.setLastItemActive();\n                event.preventDefault();\n\n                break;\n            case PAGE_UP:\n                this._keyManager.setPreviousPageItemActive();\n                event.preventDefault();\n\n                break;\n            case PAGE_DOWN:\n                this._keyManager.setNextPageItemActive();\n                event.preventDefault();\n\n                break;\n            default:\n                this._keyManager.onKeydown(event);\n        }\n    }\n\n    ngAfterContentInit(): void {\n        this._keyManager = new FocusKeyManager<McTreeNodeOption<T>>(this.options)\n            .withTypeAhead()\n            .withVerticalOrientation(true)\n            .withHorizontalOrientation(null);\n    }\n\n    updateScrollSize(): void {\n        if (!this.options.first) { return; }\n\n        this._keyManager.withScrollSize(Math.floor(this._getHeight() / this.options.first._getHeight()));\n    }\n\n    setFocusedOption(option: McTreeNodeOption<T>): void {\n        this._keyManager.updateActiveItem(option);\n\n        if (this.withShift && this.multiple) {\n            const previousIndex = this._keyManager.previousActiveItemIndex;\n            const activeIndex = this._keyManager.activeItemIndex;\n\n            if (previousIndex < activeIndex) {\n                this.options.forEach((item, index) => {\n                    if (index >= previousIndex && index <= activeIndex) { item.setSelected(true); }\n                });\n            } else {\n                this.options.forEach((item, index) => {\n                    if (index >= activeIndex && index <= previousIndex) { item.setSelected(true); }\n                });\n            }\n\n            this.withShift = false;\n        } else if (this.withCtrl) {\n            this.withCtrl = false;\n\n            if (!this._canDeselectLast(option)) { return; }\n\n            option.toggle();\n        } else {\n            if (this.autoSelect) {\n                this.options.forEach((item) => item.setSelected(false));\n                option.setSelected(true);\n            }\n        }\n\n        this._emitNavigationEvent(option);\n    }\n\n    // Toggles the selected state of the currently focused option.\n    toggleFocusedOption(): void {\n        const focusedIndex = this._keyManager.activeItemIndex;\n\n        if (focusedIndex != null && this._isValidIndex(focusedIndex)) {\n            const focusedOption: McTreeNodeOption<T> = this.options.toArray()[focusedIndex];\n\n            if (focusedOption && this._canDeselectLast(focusedOption)) {\n                focusedOption.toggle();\n\n                // Emit a change event because the focused option changed its state through user interaction.\n                this._emitChangeEvent(focusedOption);\n            }\n        }\n    }\n\n    renderNodeChanges(\n        data: T[],\n        dataDiffer: IterableDiffer<T> = this._dataDiffer,\n        viewContainer: any = this._nodeOutlet.viewContainer,\n        parentData?: T\n    ) {\n        super.renderNodeChanges(data, dataDiffer, viewContainer, parentData);\n\n        const arrayOfInstances = [];\n\n        viewContainer._embeddedViews.forEach((view: ViewData) => {\n            const viewDef = view.def;\n\n            viewDef.nodes.forEach((node: NodeDef) => {\n                if (viewDef.nodeMatchedQueries === node.matchedQueryIds) {\n                    const nodeData: any = view.nodes[node.nodeIndex];\n\n                    arrayOfInstances.push(nodeData.instance as never);\n                }\n            });\n        });\n\n        if (this.options) {\n            this.options.reset(arrayOfInstances);\n            this.options.notifyOnChanges();\n        }\n\n        this.updateScrollSize();\n    }\n\n    _getHeight(): number {\n        return this._elementRef.nativeElement.getClientRects()[0].height;\n    }\n\n    _emitNavigationEvent(option: McTreeNodeOption<T>): void {\n        this.navigationChange.emit(new McTreeNavigationChange(this, option));\n    }\n\n    _emitChangeEvent(option: McTreeNodeOption<T>): void {\n        this.selectionChange.emit(new McTreeNavigationChange(this, option));\n    }\n\n    /**\n     * Utility to ensure all indexes are valid.\n     * @param index The index to be checked.\n     * @returns True if the index is valid for our list of options.\n     */\n    private _isValidIndex(index: number): boolean {\n        return index >= 0 && index < this.options.length;\n    }\n\n    private _canDeselectLast(option: McTreeNodeOption<T>): boolean {\n        return !(this.noUnselect && this.selectedOptions.selected.length === 1 && option.selected);\n    }\n}\n\n","import { NgModule } from '@angular/core';\n\nimport { CommonModule } from '@angular/common';\nimport { CdkTreeModule } from '@ptsecurity/cdk/tree';\n\nimport { McTreeNodeDef } from './node';\nimport { McTreeNodePadding } from './padding';\nimport { McTreeSelection, McTreeNodeOption } from './tree-selection';\n\n\nconst MC_TREE_DIRECTIVES = [\n    McTreeNodeDef,\n    McTreeNodePadding,\n    McTreeSelection,\n    McTreeNodeOption\n];\n\n@NgModule({\n    imports: [CommonModule, CdkTreeModule],\n    exports: MC_TREE_DIRECTIVES,\n    declarations: MC_TREE_DIRECTIVES\n})\nexport class McTreeModule {}\n","import { ICollectionViewer, DataSource } from '@ptsecurity/cdk/collections';\nimport { FlatTreeControl, ITreeControl } from '@ptsecurity/cdk/tree';\nimport { BehaviorSubject, merge, Observable } from 'rxjs';\nimport { map, take } from 'rxjs/operators';\n\n\n/**\n * Tree flattener to convert a normal type of node to node with children & level information.\n * Transform nested nodes of type `T` to flattened nodes of type `F`.\n *\n * For example, the input data of type `T` is nested, and contains its children data:\n *   SomeNode: {\n *     key: 'Fruits',\n *     children: [\n *       NodeOne: {\n *         key: 'Apple',\n *       },\n *       NodeTwo: {\n *        key: 'Pear',\n *      }\n *    ]\n *  }\n *  After flattener flatten the tree, the structure will become\n *  SomeNode: {\n *    key: 'Fruits',\n *    expandable: true,\n *    level: 1\n *  },\n *  NodeOne: {\n *    key: 'Apple',\n *    expandable: false,\n *    level: 2\n *  },\n *  NodeTwo: {\n *   key: 'Pear',\n *   expandable: false,\n *   level: 2\n * }\n * and the output flattened type is `F` with additional information.\n */\nexport class McTreeFlattener<T, F> {\n\n    constructor(public transformFunction: (node: T, level: number) => F,\n                public getLevel: (node: F) => number,\n                public isExpandable: (node: F) => boolean,\n                public getChildren: (node: T) => Observable<T[]>) {\n    }\n\n    _flattenNode(node: T, level: number,\n                 resultNodes: F[], parentMap: boolean[]): F[] {\n        const flatNode = this.transformFunction(node, level);\n        resultNodes.push(flatNode);\n\n        if (this.isExpandable(flatNode)) {\n            this.getChildren(node).pipe(take(1)).subscribe((children) => {\n                children.forEach((child, index) => {\n                    const childParentMap: boolean[] = parentMap.slice();\n                    childParentMap.push(index !== children.length - 1);\n                    this._flattenNode(child, level + 1, resultNodes, childParentMap);\n                });\n            });\n        }\n\n        return resultNodes;\n    }\n\n    /**\n     * Flatten a list of node type T to flattened version of node F.\n     * Please note that type T may be nested, and the length of `structuredData` may be different\n     * from that of returned list `F[]`.\n     */\n    flattenNodes(structuredData: T[]): F[] {\n        const resultNodes: F[] = [];\n        structuredData.forEach((node) => this._flattenNode(node, 0, resultNodes, []));\n\n        return resultNodes;\n    }\n\n    /**\n     * Expand flattened node with current expansion status.\n     * The returned list may have different length.\n     */\n    expandFlattenedNodes(nodes: F[], treeControl: ITreeControl<F>): F[] {\n        const results: F[] = [];\n        const currentExpand: boolean[] = [];\n        currentExpand[0] = true;\n\n        nodes.forEach((node) => {\n            let expand = true;\n            for (let i = 0; i <= this.getLevel(node); i++) {\n                expand = expand && currentExpand[i];\n            }\n\n            if (expand) { results.push(node); }\n\n            if (this.isExpandable(node)) {\n                currentExpand[this.getLevel(node) + 1] = treeControl.isExpanded(node);\n            }\n        });\n\n        return results;\n    }\n}\n\n\n/**\n * Data source for flat tree.\n * The data source need to handle expansion/collapsion of the tree node and change the data feed\n * to `McTree`.\n * The nested tree nodes of type `T` are flattened through `MсTreeFlattener`, and converted\n * to type `F` for `McTree` to consume.\n */\nexport class McTreeFlatDataSource<T, F> extends DataSource<F> {\n    _flattenedData = new BehaviorSubject<F[]>([]);\n\n    _expandedData = new BehaviorSubject<F[]>([]);\n\n    _data: BehaviorSubject<T[]>;\n\n    get data() {\n        return this._data.value;\n    }\n\n    set data(value: T[]) {\n        this._data.next(value);\n        this._flattenedData.next(this.treeFlattener.flattenNodes(this.data));\n        this.treeControl.dataNodes = this._flattenedData.value;\n    }\n\n    constructor(private treeControl: FlatTreeControl<F>,\n                private treeFlattener: McTreeFlattener<T, F>,\n                initialData: T[] = []) {\n        super();\n        this._data = new BehaviorSubject<T[]>(initialData);\n    }\n\n    connect(collectionViewer: ICollectionViewer): Observable<F[]> {\n        const changes = [\n            collectionViewer.viewChange,\n            this.treeControl.expansionModel.onChange!,\n            this._flattenedData\n        ];\n\n        return merge(...changes).pipe(map(() => {\n            this._expandedData.next(\n                this.treeFlattener.expandFlattenedNodes(this._flattenedData.value, this.treeControl));\n\n            return this._expandedData.value;\n        }));\n    }\n\n    disconnect() {\n        // no op\n    }\n}\n\n","import { ICollectionViewer, DataSource } from '@ptsecurity/cdk/collections';\nimport { BehaviorSubject, merge, Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\n\n/**\n * Data source for nested tree.\n *\n * The data source for nested tree doesn't have to consider node flattener, or the way to expand\n * or collapse. The expansion/collapsion will be handled by ITreeControl and each non-leaf node.\n */\nexport class McTreeNestedDataSource<T> extends DataSource<T> {\n    _data = new BehaviorSubject<T[]>([]);\n\n    /**\n     * Data for the nested tree\n     */\n    get data() {\n        return this._data.value;\n    }\n\n    set data(value: T[]) {\n        this._data.next(value);\n    }\n\n    connect(collectionViewer: ICollectionViewer): Observable<T[]> {\n        return merge(...[collectionViewer.viewChange, this._data])\n            .pipe(map(() => this.data));\n    }\n\n    disconnect() {\n        // no op\n    }\n}\n\n","import {\n    ElementRef,\n    QueryList,\n    ContentChildren,\n    Component,\n    ChangeDetectionStrategy,\n    ViewEncapsulation\n} from '@angular/core';\n\nimport { mixinColor, CanColor, CanColorCtor } from '@ptsecurity/mosaic/core';\nimport { McIcon } from '@ptsecurity/mosaic/icon';\n\n\nexport class McTagBase {\n    constructor(public _elementRef: ElementRef) {}\n}\n\nexport const _McTagMixinBase: CanColorCtor & typeof McTagBase\n    = mixinColor(McTagBase);\n\n\n@Component({\n    selector: 'mc-tag',\n    templateUrl: 'tag.partial.html',\n    styleUrls: ['./tag.css'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n    host: { class: 'mc-tag' },\n    inputs: ['color']\n})\nexport class McTag extends _McTagMixinBase implements CanColor {\n    @ContentChildren(McIcon) contentChildren: QueryList<McIcon>;\n\n    nativeElement: HTMLElement;\n\n    constructor(elementRef: ElementRef) {\n        super(elementRef);\n\n        this.nativeElement = elementRef.nativeElement;\n    }\n\n    ngAfterContentInit() {\n        this._addClassModificatorForIcons();\n    }\n\n    _addClassModificatorForIcons() {\n        const icons = this.contentChildren.map((item) => item._elementRef.nativeElement);\n\n        if (icons.length === 1) {\n            const iconElement = icons[0];\n\n            if (!iconElement.previousElementSibling && !iconElement.nextElementSibling) {\n                if (iconElement.nextSibling) {\n                    iconElement.classList.add('mc-icon_left');\n                    this.nativeElement.classList.add('mc-left-icon');\n                }\n\n                if (iconElement.previousSibling) {\n                    iconElement.classList.add('mc-icon_right');\n                    this.nativeElement.classList.add('mc-right-icon');\n                }\n            }\n        } else if (icons.length > 1) {\n            const firstIconElement = icons[0];\n            const secondIconElement = icons[1];\n\n            firstIconElement.classList.add('mc-icon_left');\n            secondIconElement.classList.add('mc-icon_right');\n        }\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { PlatformModule } from '@ptsecurity/cdk/platform';\n\nimport { McTag } from './tag.component';\n\n\n@NgModule({\n    imports: [\n        CommonModule,\n        PlatformModule\n    ],\n    exports: [\n        McTag\n    ],\n    declarations: [\n        McTag\n    ]\n})\nexport class McTagModule {}\n","import { DOCUMENT } from '@angular/common';\nimport {\n    AfterViewInit, ChangeDetectionStrategy, ChangeDetectorRef,\n    Component,\n    ComponentFactoryResolver,\n    ComponentRef,\n    ElementRef,\n    EventEmitter,\n    Inject,\n    Injector,\n    Input,\n    OnChanges,\n    OnDestroy,\n    OnInit,\n    Output,\n    Renderer2,\n    SimpleChanges,\n    TemplateRef,\n    Type,\n    ViewChild,\n    ViewContainerRef, ViewEncapsulation\n} from '@angular/core';\nimport { ESCAPE } from '@ptsecurity/cdk/keycodes';\nimport { Overlay, OverlayRef } from '@ptsecurity/cdk/overlay';\nimport { McMeasureScrollbarService } from '@ptsecurity/mosaic/core';\nimport { Observable } from 'rxjs';\n\nimport { McModalControlService } from './modal-control.service';\nimport { McModalRef } from './modal-ref.class';\n// tslint:disable-next-line\nimport ModalUtil from './modal-util';\nimport { IModalButtonOptions, IModalOptions, ModalType, OnClickCallback } from './modal.type';\n\n\n// Duration when perform animations (ms)\nexport const MODAL_ANIMATE_DURATION = 200;\n\ntype AnimationState = 'enter' | 'leave' | null;\n\n@Component({\n    selector: 'mc-modal',\n    templateUrl: './modal.component.html',\n    styleUrls: ['./modal.css'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n    host: {\n        '(keydown)': 'onKeyDown($event)'\n    }\n})\nexport class McModalComponent<T = any, R = any> extends McModalRef<T, R>\n    implements OnInit, OnChanges, AfterViewInit, OnDestroy, IModalOptions {\n\n    // tslint:disable-next-line:no-any\n    @Input() mcModalType: ModalType = 'default';\n    // If not specified, will use <ng-content>\n    @Input() mcContent: string | TemplateRef<{}> | Type<T>;\n    // available when mcContent is a component\n    @Input() mcComponentParams: object;\n    // Default Modal ONLY\n    @Input() mcFooter: string | TemplateRef<{}> | IModalButtonOptions<T>[];\n\n    @Input()\n    get mcVisible() { return this._mcVisible; }\n    set mcVisible(value) { this._mcVisible = value; }\n    _mcVisible = false;\n\n    @Output() mcVisibleChange = new EventEmitter<boolean>();\n\n    @Input() mcZIndex: number = 1000;\n    @Input() mcWidth: number | string = 480;\n    @Input() mcWrapClassName: string;\n    @Input() mcClassName: string;\n    @Input() mcStyle: object;\n    @Input() mcTitle: string | TemplateRef<{}>;\n    @Input() mcCloseByESC: boolean = true;\n\n    @Input()\n    get mcClosable() { return this._mcClosable; }\n    set mcClosable(value) { this._mcClosable = value; }\n    _mcClosable = true;\n\n    @Input()\n    get mcMask() { return this._mcMask; }\n    set mcMask(value) { this._mcMask = value; }\n    _mcMask = true;\n\n    @Input()\n    get mcMaskClosable() { return this._mcMaskClosable; }\n    set mcMaskClosable(value) { this._mcMaskClosable = value; }\n    _mcMaskClosable = true;\n\n    @Input() mcMaskStyle: object;\n    @Input() mcBodyStyle: object;\n\n    // Trigger when modal open(visible) after animations\n    @Output() mcAfterOpen = new EventEmitter<void>();\n    // Trigger when modal leave-animation over\n    @Output() mcAfterClose = new EventEmitter<R>();\n\n    // --- Predefined OK & Cancel buttons\n    @Input() mcOkText: string;\n    @Input() mcOkType = 'primary';\n\n    @Input()\n    get mcOkLoading() { return this._mcOkLoading; }\n    set mcOkLoading(value) { this._mcOkLoading = value; }\n    _mcOkLoading = false;\n\n    @Input() @Output() mcOnOk: EventEmitter<T> | OnClickCallback<T> = new EventEmitter<T>();\n    // Only aim to focus the ok button that needs to be auto focused\n    @ViewChild('autoFocusButtonOk', {read: ElementRef}) autoFocusButtonOk: ElementRef;\n    @Input() mcCancelText: string;\n\n    @Input()\n    get mcCancelLoading() { return this._mcCancelLoading; }\n    set mcCancelLoading(value) { this._mcCancelLoading = value; }\n    _mcCancelLoading = false;\n\n    @Input() @Output() mcOnCancel: EventEmitter<T> | OnClickCallback<T> = new EventEmitter<T>();\n    @ViewChild('modalContainer') modalContainer: ElementRef;\n    @ViewChild('bodyContainer', {read: ViewContainerRef}) bodyContainer: ViewContainerRef;\n    maskAnimationClassMap: object;\n    modalAnimationClassMap: object;\n    // The origin point that animation based on\n    transformOrigin = '0px 0px 0px';\n\n    // Observable alias for mcAfterOpen\n    get afterOpen(): Observable<void> {\n        return this.mcAfterOpen.asObservable();\n    }\n\n    // Observable alias for mcAfterClose\n    get afterClose(): Observable<R> {\n        return this.mcAfterClose.asObservable();\n    }\n\n    get okText(): string {\n        return this.mcOkText;\n    }\n\n    get cancelText(): string {\n        return this.mcCancelText;\n    }\n\n    // Indicate whether this dialog should hidden\n    get hidden(): boolean {\n        return !this.mcVisible && !this.animationState;\n    }\n\n    // Handle the reference when using mcContent as Component\n    private contentComponentRef: ComponentRef<T>;\n    // Current animation state\n    private animationState: AnimationState;\n    private container: HTMLElement | OverlayRef;\n\n    constructor(\n        private overlay: Overlay,\n        private renderer: Renderer2,\n        private cfr: ComponentFactoryResolver,\n        private elementRef: ElementRef,\n        private viewContainer: ViewContainerRef,\n        private mcMeasureScrollbarService: McMeasureScrollbarService,\n        private modalControl: McModalControlService,\n        private changeDetector: ChangeDetectorRef,\n        @Inject(DOCUMENT) private document: any) {\n\n        super();\n    }\n\n    @Input() mcGetContainer: HTMLElement | OverlayRef | (() => HTMLElement | OverlayRef) = () => this.overlay.create();\n\n    ngOnInit() {\n\n        // Create component along without View\n        if (this.isComponent(this.mcContent)) {\n            this.createDynamicComponent(this.mcContent as Type<T>);\n        }\n\n        // Setup default button options\n        if (this.isModalButtons(this.mcFooter)) {\n            this.mcFooter = this.formatModalButtons(this.mcFooter as IModalButtonOptions<T>[]);\n        }\n\n        // Place the modal dom to elsewhere\n        this.container = typeof this.mcGetContainer === 'function' ? this.mcGetContainer() : this.mcGetContainer;\n        if (this.container instanceof HTMLElement) {\n            this.container.appendChild(this.elementRef.nativeElement);\n        } else if (this.container instanceof OverlayRef) {\n            // NOTE: only attach the dom to overlay, the view container is not changed actually\n            this.container.overlayElement.appendChild(this.elementRef.nativeElement);\n        }\n\n        // Register modal when afterOpen/afterClose is stable\n        this.modalControl.registerModal(this);\n    }\n\n    // [NOTE] NOT available when using by service!\n    // Because ngOnChanges never be called when using by service,\n    // here we can't support \"mcContent\"(Component) etc. as inputs that initialized dynamically.\n    // BUT: User also can change \"mcContent\" dynamically to trigger UI changes\n    // (provided you don't use \bComponent that needs initializations)\n    ngOnChanges(changes: SimpleChanges) {\n        if (changes.mcVisible) {\n            // Do not trigger animation while initializing\n            this.handleVisibleStateChange(this.mcVisible, !changes.mcVisible.firstChange);\n        }\n    }\n\n    ngAfterViewInit() {\n        // If using Component, it is the time to attach View while bodyContainer is ready\n        if (this.contentComponentRef) {\n            this.bodyContainer.insert(this.contentComponentRef.hostView);\n        }\n\n        if (this.autoFocusButtonOk) {\n            (this.autoFocusButtonOk.nativeElement as HTMLButtonElement).focus();\n        }\n    }\n\n    ngOnDestroy() {\n        if (this.container instanceof OverlayRef) {\n            this.container.dispose();\n        }\n    }\n\n    open() {\n        this.changeVisibleFromInside(true);\n    }\n\n    close(result?: R) {\n        this.changeVisibleFromInside(false, result);\n    }\n\n    // Destroy equals Close\n    destroy(result?: R) {\n        this.close(result);\n    }\n\n    triggerOk() {\n        this.onClickOkCancel('ok');\n    }\n\n    triggerCancel() {\n        this.onClickOkCancel('cancel');\n    }\n\n    getInstance(): McModalComponent {\n        return this;\n    }\n\n    getContentComponentRef(): ComponentRef<T> {\n        return this.contentComponentRef;\n    }\n\n    getContentComponent(): T {\n        return this.contentComponentRef && this.contentComponentRef.instance;\n    }\n\n    getElement(): HTMLElement {\n        return this.elementRef && this.elementRef.nativeElement;\n    }\n\n    onClickMask($event: MouseEvent) {\n        if (\n            this.mcMask &&\n            this.mcMaskClosable &&\n            ($event.target as HTMLElement).classList.contains('mc-modal-wrap') &&\n            this.mcVisible\n        ) {\n            this.onClickOkCancel('cancel');\n        }\n    }\n\n    // tslint:disable-next-line\n    isModalType(type: ModalType): boolean {\n        return this.mcModalType === type;\n    }\n\n    onKeyDown(event: KeyboardEvent): void {\n\n        if (event.keyCode === ESCAPE && this.container && (this.container instanceof OverlayRef)) {\n\n            this.close();\n            event.preventDefault();\n        }\n    }\n\n    // AoT\n    onClickCloseBtn() {\n        if (this.mcVisible) {\n            this.onClickOkCancel('cancel');\n        }\n    }\n\n    // AoT\n    // tslint:disable-next-line\n    onClickOkCancel(type: 'ok' | 'cancel') {\n        const trigger = { ok: this.mcOnOk, cancel: this.mcOnCancel }[type];\n        const loadingKey = { ok: 'mcOkLoading', cancel: 'mcCancelLoading' }[type];\n\n        if (trigger instanceof EventEmitter) {\n            trigger.emit(this.getContentComponent());\n        } else if (typeof trigger === 'function') {\n\n            const result = trigger(this.getContentComponent());\n            // Users can return \"false\" to prevent closing by default\n            const caseClose = (doClose: boolean | void | {}) => (doClose !== false) && this.close(doClose as R);\n\n            if (isPromise(result)) {\n                this[loadingKey] = true;\n                const handleThen = (doClose) => {\n                    this[loadingKey] = false;\n                    caseClose(doClose);\n                };\n                (result as Promise<void>).then(handleThen).catch(handleThen);\n            } else {\n                caseClose(result);\n            }\n        }\n    }\n\n    // AoT\n    isNonEmptyString(value: {}): boolean {\n        return typeof value === 'string' && value !== '';\n    }\n\n    // AoT\n    isTemplateRef(value: {}): boolean {\n        return value instanceof TemplateRef;\n    }\n\n    // AoT\n    isComponent(value: {}): boolean {\n        return value instanceof Type;\n    }\n\n    // AoT\n    isModalButtons(value: {}): boolean {\n        return Array.isArray(value) && value.length > 0;\n    }\n\n    // Do rest things when visible state changed\n    private handleVisibleStateChange(visible: boolean, animation: boolean = true, closeResult?: R): Promise<any> {\n        // Hide scrollbar at the first time when shown up\n        if (visible) {\n            this.changeBodyOverflow(1);\n        }\n\n        return Promise\n            .resolve(animation && this.animateTo(visible))\n            // Emit open/close event after animations over\n            .then(() => {\n                if (visible) {\n                    this.mcAfterOpen.emit();\n                } else {\n                    this.mcAfterClose.emit(closeResult);\n                    // Show/hide scrollbar when animation is over\n                    this.changeBodyOverflow();\n                }\n            });\n    }\n\n    // Lookup a button's property, if the prop is a function, call & then return the result, otherwise, return itself.\n    // AoT\n    // tslint:disable-next-line\n    getButtonCallableProp(options: IModalButtonOptions<T>, prop: string): {} {\n        const value = options[prop];\n        const args: any[] = [];\n        if (this.contentComponentRef) {\n            args.push(this.contentComponentRef.instance);\n        }\n\n        return typeof value === 'function' ? value.apply(options, args) : value;\n    }\n\n    // On mcFooter's modal button click\n    // AoT\n    // tslint:disable-next-line\n    onButtonClick(button: IModalButtonOptions<T>) {\n        // Call onClick directly\n        const result = this.getButtonCallableProp(button, 'onClick');\n        if (isPromise(result)) {\n            button.loading = true;\n            (result as Promise<{}>).then(() => button.loading = false).catch(() => button.loading = false);\n        }\n    }\n\n    // Change mcVisible from inside\n    private changeVisibleFromInside(visible: boolean, closeResult?: R): Promise<void> {\n        if (this.mcVisible !== visible) {\n            // Change mcVisible value immediately\n            this.mcVisible = visible;\n            this.mcVisibleChange.emit(visible);\n\n            return this.handleVisibleStateChange(visible, true, closeResult);\n        }\n\n        return Promise.resolve();\n    }\n\n    private changeAnimationState(state: AnimationState) {\n        this.animationState = state;\n        if (state) {\n            this.maskAnimationClassMap = {\n                [`fade-${state}`]: true,\n                [`fade-${state}-active`]: true\n            };\n            this.modalAnimationClassMap = {\n                [`zoom-${state}`]: true,\n                [`zoom-${state}-active`]: true\n            };\n        } else {\n            // @ts-ignore\n            this.maskAnimationClassMap = this.modalAnimationClassMap = null;\n        }\n\n        if (this.contentComponentRef) {\n            this.contentComponentRef.changeDetectorRef.markForCheck();\n        } else {\n            this.changeDetector.markForCheck();\n        }\n    }\n\n    private animateTo(isVisible: boolean): Promise<any> {\n        // Figure out the lastest click position when shows up\n        if (isVisible) {\n            // [NOTE] Using timeout due to the document.click event is fired later than visible change,\n            // so if not postponed to next event-loop, we can't get the lastest click position\n            window.setTimeout(() => this.updateTransformOrigin());\n        }\n\n        this.changeAnimationState(isVisible ? 'enter' : 'leave');\n\n        // Return when animation is over\n        return new Promise((resolve) => window.setTimeout(() => {\n            this.changeAnimationState(null);\n            resolve();\n        }, MODAL_ANIMATE_DURATION));\n    }\n\n    private formatModalButtons(buttons: IModalButtonOptions<T>[]): IModalButtonOptions<T>[] {\n        return buttons.map((button) => {\n\n            return {\n                ...{\n                    type: 'default',\n                    size: 'default',\n                    autoLoading: true,\n                    show: true,\n                    loading: false,\n                    disabled: false\n                },\n                ...button\n            };\n        });\n    }\n\n    /**\n     * Create a component dynamically but not attach to any View\n     * (this action will be executed when bodyContainer is ready)\n     * @param component Component class\n     */\n    private createDynamicComponent(component: Type<T>) {\n        const factory = this.cfr.resolveComponentFactory(component);\n        const childInjector = Injector.create({\n            providers: [{provide: McModalRef, useValue: this}],\n            parent: this.viewContainer.parentInjector\n        });\n\n        this.contentComponentRef = factory.create(childInjector);\n\n        if (this.mcComponentParams) {\n            Object.assign(this.contentComponentRef.instance, this.mcComponentParams);\n        }\n\n        // Do the first change detection immediately\n        // (or we do detection at ngAfterViewInit, multi-changes error will be thrown)\n        this.contentComponentRef.changeDetectorRef.detectChanges();\n\n\n    }\n\n    // Update transform-origin to the last click position on document\n    private updateTransformOrigin() {\n        const modalElement = this.modalContainer.nativeElement as HTMLElement;\n        const lastPosition = ModalUtil.getLastClickPosition();\n\n        if (lastPosition) {\n            // tslint:disable-next-line\n            this.transformOrigin = `${lastPosition.x - modalElement.offsetLeft}px ${lastPosition.y - modalElement.offsetTop}px 0px`;\n        }\n    }\n\n    /**\n     * Take care of the body's overflow to decide the existense of scrollbar\n     * @param plusNum The number that the openModals.length will increase soon\n     */\n    private changeBodyOverflow(plusNum: number = 0) {\n        const openModals = this.modalControl.openModals;\n\n        if (openModals.length + plusNum > 0) {\n            // tslint:disable-next-line\n            this.renderer.setStyle(this.document.body, 'padding-right', `${this.mcMeasureScrollbarService.scrollBarWidth}px`);\n            this.renderer.setStyle(this.document.body, 'overflow', 'hidden');\n        } else {\n            this.renderer.removeStyle(this.document.body, 'padding-right');\n            this.renderer.removeStyle(this.document.body, 'overflow');\n        }\n    }\n}\n\n////////////\n\nfunction isPromise(obj: {} | void): boolean {\n    // tslint:disable-next-line\n    return !!obj && (typeof obj === 'object' || typeof obj === 'function') && typeof (obj as Promise<{}>).then === 'function' && typeof (obj as Promise<{}>).catch === 'function';\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n\n@Pipe({\n    name: 'toCssUnit'\n})\nexport class CssUnitPipe implements PipeTransform {\n    transform(value: number | string, defaultUnit: string = 'px'): string {\n        const formatted = +value;\n\n        return isNaN(formatted) ? `${value}` : `${formatted}${defaultUnit}`;\n    }\n}\n","import { ComponentRef, Injectable } from '@angular/core';\n\nimport { Observable } from 'rxjs';\nimport { filter } from 'rxjs/operators';\n\nimport { ESCAPE } from '@ptsecurity/cdk/keycodes';\nimport { Overlay, OverlayRef } from '@ptsecurity/cdk/overlay';\nimport { ComponentPortal } from '@ptsecurity/cdk/portal';\n\nimport { McModalControlService } from './modal-control.service';\nimport { McModalRef } from './modal-ref.class';\nimport { McModalComponent } from './modal.component';\nimport { ConfirmType, IModalOptions, IModalOptionsForService } from './modal.type';\n\n\n// A builder used for managing service creating modals\nexport class ModalBuilderForService {\n\n    // Modal ComponentRef, \"null\" means it has been destroyed\n    private modalRef: ComponentRef<McModalComponent>;\n    private overlayRef: OverlayRef;\n\n    constructor(private overlay: Overlay, options: IModalOptionsForService = {}) {\n        this.createModal();\n\n        if (!('mcGetContainer' in options)) {\n            options.mcGetContainer = null;\n        }\n\n        this.changeProps(options);\n        this.modalRef.instance.open();\n        this.modalRef.instance.mcAfterClose.subscribe(() => this.destroyModal());\n\n        this.overlayRef.keydownEvents()\n            // @ts-ignore\n            .pipe(filter((event: KeyboardEvent) => {\n                return event.keyCode === ESCAPE && options.mcCloseByESC;\n            }))\n            .subscribe(() => this.modalRef.instance.close());\n    }\n\n    getInstance(): McModalComponent {\n        return this.modalRef && this.modalRef.instance;\n    }\n\n    destroyModal(): void {\n        if (this.modalRef) {\n            this.overlayRef.dispose();\n            // @ts-ignore\n            this.modalRef = null;\n        }\n    }\n\n    private changeProps(options: IModalOptions): void {\n        if (this.modalRef) {\n            // here not limit user's inputs at runtime\n            Object.assign(this.modalRef.instance, options);\n        }\n    }\n\n    // Create component to ApplicationRef\n    private createModal(): void {\n        this.overlayRef = this.overlay.create();\n        this.modalRef = this.overlayRef.attach(new ComponentPortal(McModalComponent));\n    }\n}\n\n@Injectable()\nexport class McModalService {\n    // Track of the current close modals (we assume invisible is close this time)\n    get openModals(): McModalRef[] {\n        return this.modalControl.openModals;\n    }\n\n    get afterAllClose(): Observable<void> {\n        return this.modalControl.afterAllClose.asObservable();\n    }\n\n    constructor(\n        private overlay: Overlay,\n        private modalControl: McModalControlService) {\n    }\n\n    // Closes all of the currently-open dialogs\n    closeAll(): void {\n        this.modalControl.closeAll();\n    }\n\n    create<T>(options: IModalOptionsForService<T> = {}): McModalRef<T> {\n\n        if (typeof options.mcOnCancel !== 'function') {\n            // Leave a empty function to close this modal by default\n            // tslint:disable-next-line\n            options.mcOnCancel = () => {};\n        }\n\n        if (!('mcCloseByESC' in options)) {\n            options.mcCloseByESC = true;\n        }\n\n\n        if (!('mcWidth' in options)) {\n            // tslint:disable-next-line\n            options.mcWidth = 480;\n        }\n\n        return new ModalBuilderForService(this.overlay, options).getInstance();\n    }\n\n    confirm<T>(options: IModalOptionsForService<T> = {}, confirmType: ConfirmType = 'confirm'): McModalRef<T> {\n        if ('mcFooter' in options) {\n            console.warn(`The Confirm-Modal doesn't support \"mcFooter\", this property will be ignored.`);\n        }\n\n        // NOTE: only support function currently by calling confirm()\n        if (typeof options.mcOnOk !== 'function') {\n            // Leave a empty function to close this modal by default\n            // tslint:disable-next-line\n            options.mcOnOk = () => {};\n        }\n\n        options.mcModalType = 'confirm';\n        options.mcClassName = `mc-confirm mc-confirm-${confirmType} ${options.mcClassName || ''}`;\n        options.mcMaskClosable = false;\n\n        return this.create(options);\n    }\n\n    success<T>(options: IModalOptionsForService<T> = {}): McModalRef<T> {\n        return this.simpleConfirm(options, 'success');\n    }\n\n    delete<T>(options: IModalOptionsForService<T> = {}): McModalRef<T> {\n        return this.simpleConfirm(options, 'warn');\n    }\n\n    private simpleConfirm<T>(options: IModalOptionsForService<T> = {}, confirmType: ConfirmType): McModalRef<T> {\n        // Remove the Cancel button if the user not specify a Cancel button\n        if (!('mcCancelText' in options)) {\n            // @ts-ignore\n            options.mcCancelText = null;\n        }\n\n        return this.confirm(options, confirmType);\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { OverlayModule } from '@ptsecurity/cdk/overlay';\nimport { McButtonModule } from '@ptsecurity/mosaic/button';\nimport { McIconModule } from '@ptsecurity/mosaic/icon';\n\nimport { CssUnitPipe } from './css-unit.pipe';\nimport { McModalControlService } from './modal-control.service';\nimport { McModalComponent } from './modal.component';\nimport { McModalService } from './modal.service';\n\n\n@NgModule({\n    imports: [ CommonModule, OverlayModule, McButtonModule, McIconModule ],\n    exports: [ McModalComponent ],\n    declarations: [ McModalComponent, CssUnitPipe ],\n    entryComponents: [ McModalComponent ],\n    providers: [ McModalControlService, McModalService ]\n})\nexport class McModalModule { }\n","import { fromEvent, Observable, Subscription } from 'rxjs';\nimport { debounceTime } from 'rxjs/operators';\n\nimport {\n    AfterViewInit,\n    Component, Directive,\n    ElementRef,\n    HostBinding,\n    Input,\n    OnDestroy,\n    OnInit,\n    ViewEncapsulation,\n    ContentChild,\n    TemplateRef,\n    ChangeDetectorRef,\n    ChangeDetectionStrategy,\n    ViewChild\n} from '@angular/core';\nimport { FocusMonitor, FocusOrigin } from '@ptsecurity/cdk/a11y';\nimport { SPACE } from '@ptsecurity/cdk/keycodes';\nimport { Platform } from '@ptsecurity/cdk/platform';\nimport { CanDisable, CanDisableCtor, mixinDisabled } from '@ptsecurity/mosaic/core';\n\n\nconst COLLAPSED_CLASS: string = 'mc-navbar-collapsed-title';\nconst MC_ICON = 'mc-icon';\nconst MC_NAVBAR = 'mc-navbar';\nconst MC_NAVBAR_CONTAINER = 'mc-navbar-container';\nconst MC_NAVBAR_ITEM = 'mc-navbar-item';\nconst MC_NAVBAR_BRAND = 'mc-navbar-brand';\nconst MC_NAVBAR_TITLE = 'mc-navbar-title';\nconst MC_NAVBAR_LOGO = 'mc-navbar-logo';\n\nexport type McNavbarContainerPositionType = 'left' | 'right';\n\nexport interface IMcNavbarDropdownItem {\n    link?: string;\n    text: string;\n}\n\n@Directive({\n    selector: MC_NAVBAR_LOGO,\n    host: {\n        class: MC_NAVBAR_LOGO\n    }\n})\nexport class McNavbarLogo {}\n\n@Directive({\n    selector: MC_NAVBAR_BRAND,\n    host: {\n        class: MC_NAVBAR_BRAND\n    }\n})\nexport class McNavbarBrand {}\n\n@Directive({\n    selector: MC_NAVBAR_TITLE,\n    host: {\n        class: MC_NAVBAR_TITLE\n    }\n})\nexport class McNavbarTitle {}\n\nexport class McNavbarItemBase {\n    constructor(public _elementRef: ElementRef) {}\n}\n\nexport const _McNavbarMixinBase: CanDisableCtor & typeof McNavbarItemBase = mixinDisabled(McNavbarItemBase);\n\n@Component({\n    selector: MC_NAVBAR_ITEM,\n    template: `\n        <a\n            [attr.tabindex]=\\\"disabled ? -1 : tabIndex\\\"\n            (click)=\"handleClickByItem()\"\n            (keydown)=\"handleKeydown($event)\"\n            class=\"mc-navbar-item\"\n        >\n            <ng-content></ng-content>\n            <i *ngIf=\"hasDropdownContent\" mc-icon=\"mc-angle-M_16\"></i>\n        </a>\n        <ul\n            #dropdownContent\n            *ngIf=\"hasDropdownContent\"\n            [ngClass]=\"{ 'is-collapsed': isCollapsed }\"\n            class=\"mc-navbar-dropdown\"\n        >\n            <li\n                *ngFor=\"let item of dropdownItems\"\n                (click)=\"handleClickByDropdownItem()\"\n                class=\"mc-navbar-dropdown-item\"\n            >\n                <ng-container *ngIf=\"dropdownItemTmpl\">\n                    <ng-container *ngTemplateOutlet=\"dropdownItemTmpl; context: { $implicit: item }\"></ng-container>\n                </ng-container>\n                <a\n                    *ngIf=\"!dropdownItemTmpl\"\n                    [attr.href]=\"item.link\"\n                    [ngClass]=\"{ 'is-active': isActiveDropdownLink(item.link) }\"\n                    class=\"mc-navbar-dropdown-link\"\n                >{{ item.text }}</a>\n            </li>\n        </ul>\n    `,\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    inputs: ['disabled'],\n    host: {\n        '[attr.disabled]': 'disabled || null',\n        '[attr.tabindex]': '-1'\n    }\n})\nexport class McNavbarItem extends _McNavbarMixinBase implements OnInit, AfterViewInit, OnDestroy, CanDisable {\n\n    @Input()\n    tabIndex: number = 0;\n\n    @Input()\n    dropdownItems: IMcNavbarDropdownItem[] = [];\n\n    @Input()\n    set collapsedTitle(value: string) {\n        this.elementRef.nativeElement.setAttribute('computedTitle', encodeURI(value));\n    }\n\n    @ContentChild('dropdownItemTmpl', { read: TemplateRef })\n    dropdownItemTmpl: TemplateRef<IMcNavbarDropdownItem>;\n\n    @ViewChild('dropdownContent', { read: ElementRef })\n    dropdownContent: ElementRef;\n\n    get hasDropdownContent() {\n        return this.dropdownItems.length > 0;\n    }\n\n    isCollapsed: boolean = true;\n\n    private _subscription: Subscription = new Subscription();\n    private _focusMonitor$: Observable<FocusOrigin>;\n\n    private get _dropdownElements(): HTMLElement[] {\n        return this.dropdownContent ? this.dropdownContent.nativeElement.querySelectorAll('li > *') : [];\n    }\n\n    constructor(\n        public  elementRef: ElementRef,\n        private _focusMonitor: FocusMonitor,\n        private _platform: Platform,\n        private _cdRef: ChangeDetectorRef\n    ) {\n        super(elementRef);\n    }\n\n    ngOnInit() {\n        this.denyClickIfDisabled();\n\n        this._focusMonitor$ = this._focusMonitor.monitor(this.elementRef.nativeElement, true);\n\n        if (this.hasDropdownContent) {\n            this.listenClickOutside();\n        }\n    }\n\n    ngAfterViewInit() {\n        if (!this.hasDropdownContent) {\n            return;\n        }\n\n        this.startListenFocusDropdownItems();\n    }\n\n    ngOnDestroy() {\n        this._subscription.unsubscribe();\n        this._focusMonitor.stopMonitoring(this.elementRef.nativeElement);\n        this.stopListenFocusDropdownItems();\n    }\n\n    isActiveDropdownLink(link: string): boolean {\n        if (!this._platform.isBrowser) {\n            return false;\n        }\n\n        return window.location.href.indexOf(link) >= 0;\n    }\n\n    handleClickByItem() {\n        this.toggleDropdown();\n    }\n\n    handleKeydown($event: KeyboardEvent) {\n        const isNavbarItem = ($event.target as HTMLElement).classList.contains(MC_NAVBAR_ITEM);\n\n        // tslint:disable-next-line\n        if (this.hasDropdownContent && $event.keyCode === SPACE && isNavbarItem) {\n            this.toggleDropdown();\n        }\n    }\n\n    handleClickByDropdownItem() {\n        this.forceCloseDropdown();\n    }\n\n    private listenClickOutside() {\n        this._subscription.add(\n            this._focusMonitor$.subscribe((origin) => {\n                if (origin === null) {\n                    this.forceCloseDropdown();\n                }\n            })\n        );\n    }\n\n    private toggleDropdown() {\n        this.isCollapsed = !this.isCollapsed;\n    }\n\n    private forceCloseDropdown() {\n        this.isCollapsed = true;\n        this._cdRef.detectChanges();\n    }\n\n    private startListenFocusDropdownItems() {\n        this._dropdownElements.forEach((el) => {\n            this._focusMonitor.monitor(el, true);\n        });\n    }\n\n    private stopListenFocusDropdownItems() {\n        this._dropdownElements.forEach((el) => {\n            this._focusMonitor.stopMonitoring(el);\n        });\n    }\n\n    // This method is required due to angular 2 issue https://github.com/angular/angular/issues/11200\n    private denyClickIfDisabled() {\n        const events: Event[] = this.elementRef.nativeElement.eventListeners('click');\n\n        events.forEach((event) => this.elementRef.nativeElement.removeEventListener('click', event));\n\n        this.elementRef.nativeElement.addEventListener('click', (event: MouseEvent) => {\n            if (this.elementRef.nativeElement.hasAttribute('disabled')) {\n                event.stopImmediatePropagation();\n            }\n        }, true);\n\n        events.forEach((event) => this.elementRef.nativeElement.addEventListener('click', event));\n    }\n}\n\n@Directive({\n    selector: MC_NAVBAR_CONTAINER\n})\nexport class McNavbarContainer {\n    @Input()\n    position: McNavbarContainerPositionType = 'left';\n\n    @HostBinding('class')\n    get cssClasses(): string {\n        return this.position === 'left' ? 'mc-navbar-left' : 'mc-navbar-right';\n    }\n}\n\nclass CollapsibleItem {\n    private _collapsed: boolean = false;\n\n    constructor(\n        public element: HTMLElement,\n        public width: number\n    ) {}\n\n    processCollapsed(collapsed: boolean) {\n        this._collapsed = collapsed;\n\n        this.updateCollapsedClass();\n    }\n\n    private updateCollapsedClass() {\n        if (this._collapsed) {\n            this.element.classList.add(COLLAPSED_CLASS);\n        } else {\n            this.element.classList.remove(COLLAPSED_CLASS);\n        }\n\n    }\n}\n\nclass CachedItemWidth {\n\n    get canCollapse(): boolean {\n        return this.itemsForCollapse.length > 0;\n    }\n\n    private _collapsedItemsWidth: number;\n\n    get collapsedItemsWidth(): number {\n        if (this._collapsedItemsWidth !== undefined) {\n            return this._collapsedItemsWidth;\n        }\n\n        this.calculateAndCacheCollapsedItemsWidth();\n\n        return this._collapsedItemsWidth;\n    }\n\n    constructor(\n        public element: HTMLElement,\n        public width: number,\n        public itemsForCollapse: CollapsibleItem[] = []\n    ) {}\n\n    processCollapsed(collapsed: boolean) {\n        if (this.itemsForCollapse.length > 0) {\n            this.updateTitle(collapsed);\n        }\n\n        this.itemsForCollapse.forEach((item) => item.processCollapsed(collapsed));\n    }\n\n    private calculateAndCacheCollapsedItemsWidth() {\n        this._collapsedItemsWidth = this.itemsForCollapse\n            .reduce((acc, item) => acc + item.width, 0);\n    }\n\n    private getTitle(): string {\n        const computedTitle = this.element.getAttribute('computedTitle');\n\n        return computedTitle\n            ? decodeURI(computedTitle)\n            : (this.itemsForCollapse.length > 0 ? this.itemsForCollapse[0].element.innerText : '');\n    }\n\n    private updateTitle(collapsed: boolean) {\n        if (collapsed) {\n            this.element.setAttribute('title', this.getTitle());\n        } else {\n            this.element.removeAttribute('title');\n        }\n    }\n}\n\n\n@Component({\n    selector: MC_NAVBAR,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    template: `\n        <nav class=\"mc-navbar\">\n            <ng-content select=\"[${MC_NAVBAR_CONTAINER}],${MC_NAVBAR_CONTAINER}\"></ng-content>\n        </nav>\n    `,\n    styleUrls: ['./navbar.css'],\n    encapsulation: ViewEncapsulation.None\n})\nexport class McNavbar implements AfterViewInit, OnDestroy {\n\n    private readonly forceRecalculateItemsWidth: boolean = false;\n    private readonly resizeDebounceInterval: number = 100;\n    private readonly firstLevelElement: string = MC_NAVBAR_CONTAINER;\n    private readonly secondLevelElements: string[] = [\n        MC_NAVBAR_ITEM,\n        MC_NAVBAR_BRAND,\n        MC_NAVBAR_TITLE\n    ];\n\n    private _totalItemsWidths: number;\n    private _itemsWidths: CachedItemWidth[];\n\n    private get maxAllowedWidth(): number {\n        return this._elementRef.nativeElement.querySelector('nav').getBoundingClientRect().width;\n    }\n\n    private get itemsWidths(): CachedItemWidth[] {\n        if (this._itemsWidths !== undefined && !this.forceRecalculateItemsWidth) {\n            return this._itemsWidths;\n        }\n\n        this.calculateAndCacheItemsWidth();\n\n        return this._itemsWidths;\n    }\n\n    private get totalItemsWidth(): number {\n        if (this._totalItemsWidths !== undefined && !this.forceRecalculateItemsWidth) {\n            return this._totalItemsWidths;\n        }\n\n        this.calculateAndCacheTotalItemsWidth();\n\n        return this._totalItemsWidths;\n    }\n\n    private _resizeSubscription: Subscription;\n\n    constructor(\n        private _elementRef: ElementRef\n    ) {\n        const resizeObserver = fromEvent(window, 'resize')\n            .pipe(debounceTime(this.resizeDebounceInterval));\n\n        this._resizeSubscription = resizeObserver.subscribe(this.updateCollapsed.bind(this));\n    }\n\n    updateCollapsed(): void {\n        let collapseDelta = this.totalItemsWidth - this.maxAllowedWidth;\n\n        for (let i = this.itemsWidths.length - 1; i >= 0; i--) {\n            const item = this.itemsWidths[i];\n\n            if (!item.canCollapse) {\n                continue;\n            }\n\n            item.processCollapsed(collapseDelta > 0);\n            collapseDelta -= item.collapsedItemsWidth;\n        }\n    }\n\n    ngAfterViewInit(): void {\n        // Note: this wait is required for loading and rendering fonts for icons;\n        // unfortunately we cannot control font rendering\n        setTimeout(() => this.updateCollapsed(), 0);\n    }\n\n    ngOnDestroy() {\n        this._resizeSubscription.unsubscribe();\n    }\n\n    private calculateAndCacheTotalItemsWidth() {\n        this._totalItemsWidths = this.itemsWidths\n            .reduce((acc, item) => acc + item.width, 0);\n    }\n\n    private getOuterElementWidth(element: HTMLElement): number {\n        const baseWidth  = element.getBoundingClientRect().width;\n        const marginRight = parseInt(getComputedStyle(element).getPropertyValue('margin-right'));\n        const marginLeft = parseInt(getComputedStyle(element).getPropertyValue('margin-left'));\n\n        return baseWidth + marginRight + marginLeft;\n    }\n\n    private calculateAndCacheItemsWidth() {\n        const allItemsSelector = this.secondLevelElements\n            .map((e: string) => `${this.firstLevelElement}>${e}`);\n        const allItems: HTMLElement[] = Array.from(this._elementRef.nativeElement.querySelectorAll(allItemsSelector));\n\n        this._itemsWidths = allItems\n            .map((el) => new CachedItemWidth(el, this.getOuterElementWidth(el), this.getItemsForCollapse(el)));\n    }\n\n    private getItemsForCollapse(element: HTMLElement): CollapsibleItem[] {\n        const icon = element.querySelector(`[${MC_ICON}],${MC_NAVBAR_LOGO},[${MC_NAVBAR_LOGO}]`);\n\n        if (!icon) {\n            return [];\n        }\n\n        return Array.from(element.querySelectorAll(MC_NAVBAR_TITLE))\n            .map((el) => new CollapsibleItem(<HTMLElement> el, el.getBoundingClientRect().width));\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { A11yModule } from '@ptsecurity/cdk/a11y';\nimport { PlatformModule } from '@ptsecurity/cdk/platform';\n\nimport { McIconModule } from '@ptsecurity/mosaic/icon';\n\nimport {\n    McNavbar,\n    McNavbarContainer,\n    McNavbarItem,\n    McNavbarTitle,\n    McNavbarBrand,\n    McNavbarLogo\n} from './navbar.component';\n\n\n@NgModule({\n    imports: [\n        CommonModule,\n        A11yModule,\n        PlatformModule,\n        McIconModule\n    ],\n    exports: [\n        McNavbar,\n        McNavbarContainer,\n        McNavbarTitle,\n        McNavbarItem,\n        McNavbarBrand,\n        McNavbarLogo\n    ],\n    declarations: [\n        McNavbar,\n        McNavbarContainer,\n        McNavbarTitle,\n        McNavbarItem,\n        McNavbarBrand,\n        McNavbarLogo\n    ]\n})\nexport class McNavbarModule {}\n","import {\n    ChangeDetectionStrategy,\n    Component,\n    ViewEncapsulation,\n    ElementRef,\n    Input\n} from '@angular/core';\nimport { CanColor, CanColorCtor, mixinColor, ThemePalette } from '@ptsecurity/mosaic/core';\n\n\nexport type ProgressBarMode = 'determinate' | 'indeterminate';\n\nlet idIterator = 0;\n\nconst MIN_PERCENT = 0;\nconst MAX_PERCENT = 100;\n\nexport class McProgressBarBase {\n    constructor(public _elementRef: ElementRef) {}\n}\n\nexport const _McProgressBarMixinBase:\n    CanColorCtor &\n    typeof McProgressBarBase =\n        mixinColor(McProgressBarBase);\n\n@Component({\n    selector: 'mc-progress-bar',\n    templateUrl: './progress-bar.component.html',\n    styleUrls: ['./progress-bar.css'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n    host: {\n        class: 'mc-progress-bar',\n        '[attr.id]': 'id'\n    }\n})\nexport class McProgressBar extends _McProgressBarMixinBase implements CanColor {\n    @Input() id: string = `mc-progress-bar-${idIterator++}`;\n    @Input() value: number = 0;\n    @Input() mode: ProgressBarMode = 'determinate';\n    @Input() color: ThemePalette = ThemePalette.Primary;\n\n    constructor(elementRef: ElementRef) {\n        super(elementRef);\n    }\n\n    get percentage(): number {\n        return Math.max(MIN_PERCENT, Math.min(MAX_PERCENT, this.value)) / MAX_PERCENT;\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { PlatformModule } from '@ptsecurity/cdk/platform';\n\nimport {\n    McProgressBar\n} from './progress-bar.component';\n\n\n@NgModule({\n    imports: [\n        CommonModule,\n        PlatformModule\n    ],\n    exports: [\n        McProgressBar\n    ],\n    declarations: [\n        McProgressBar\n    ]\n})\nexport class McProgressBarModule {}\n","import { Directive, forwardRef, Input, OnChanges, Provider, SimpleChanges } from '@angular/core';\nimport { AbstractControl, NG_VALIDATORS, ValidationErrors, Validator, ValidatorFn, Validators } from '@angular/forms';\n\n\nexport const MIN_VALIDATOR: Provider = {\n    provide: NG_VALIDATORS,\n    useExisting: forwardRef(() => MinValidator),\n    multi: true\n};\n\n/**\n * A directive which installs the {@link MinValidator} for any `formControlName`,\n * `formControl`, or control with `ngModel` that also has a `min` attribute.\n *\n * @experimental\n */\n@Directive({\n    selector: '[min][formControlName],[min][formControl],[min][ngModel]',\n    providers: [MIN_VALIDATOR],\n    host: {'[attr.min]': 'min ? min : null'}\n})\nexport class MinValidator implements Validator, OnChanges {\n\n    @Input() min: string;\n    private _validator: ValidatorFn;\n    private _onChange: () => void;\n\n    ngOnChanges(changes: SimpleChanges): void {\n        if ('min' in changes) {\n            this._createValidator();\n            if (this._onChange) { this._onChange(); }\n        }\n    }\n\n    validate(c: AbstractControl): ValidationErrors | null { return this._validator(c); }\n\n    registerOnValidatorChange(fn: () => void): void { this._onChange = fn; }\n\n    private _createValidator(): void { this._validator = Validators.min(parseInt(this.min, 10)); }\n}\n\n\nexport const MAX_VALIDATOR: Provider = {\n    provide: NG_VALIDATORS,\n    useExisting: forwardRef(() => MaxValidator),\n    multi: true\n};\n\n/**\n * A directive which installs the {@link MaxValidator} for any `formControlName`,\n * `formControl`, or control with `ngModel` that also has a `min` attribute.\n *\n * @experimental\n */\n@Directive({\n    selector: '[max][formControlName],[max][formControl],[max][ngModel]',\n    providers: [MAX_VALIDATOR],\n    host: {'[attr.max]': 'max ? max : null'}\n})\nexport class MaxValidator implements Validator,\n    OnChanges {\n\n    @Input() max: string;\n    private _validator: ValidatorFn;\n    private _onChange: () => void;\n\n    ngOnChanges(changes: SimpleChanges): void {\n        if ('max' in changes) {\n            this._createValidator();\n            if (this._onChange) { this._onChange(); }\n        }\n    }\n\n    validate(c: AbstractControl): ValidationErrors | null { return this._validator(c); }\n\n    registerOnValidatorChange(fn: () => void): void { this._onChange = fn; }\n\n    private _createValidator(): void { this._validator = Validators.max(parseInt(this.max, 10)); }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { A11yModule } from '@ptsecurity/cdk/a11y';\nimport { McCommonModule } from '@ptsecurity/mosaic/core';\n\nimport { McInput, McInputMono, McNumberInput } from './input';\nimport { MaxValidator, MinValidator } from './input-number-validators';\n\n\n@NgModule({\n    imports: [CommonModule, A11yModule, McCommonModule, FormsModule],\n    exports: [McInput, McNumberInput, McInputMono, MinValidator, MaxValidator],\n    declarations: [McInput, McNumberInput, McInputMono, MinValidator, MaxValidator ]\n})\nexport class McInputModule {\n}\n","import { Component } from '@angular/core';\n\n\n@Component({\n    selector: 'mc-content',\n    preserveWhitespaces: false,\n    templateUrl: './content.component.html',\n    styles: [\n        `:host {\n            display: block;\n        }`\n    ],\n    host: {\n        '[class.mc-layout-content]': 'true'\n    }\n})\nexport class McContentComponent {\n}\n","import { Component } from '@angular/core';\n\n\n@Component({\n    selector: 'mc-footer',\n    preserveWhitespaces: false,\n    templateUrl: './footer.component.html',\n    styles: [\n        `:host {\n            display: block;\n        }`\n    ],\n    host: {\n        '[class.mc-layout-footer]': 'true'\n    }\n})\nexport class McFooterComponent {\n}\n","import { Component } from '@angular/core';\n\n\n@Component({\n    selector : 'mc-header',\n    preserveWhitespaces: false,\n    templateUrl: './header.component.html',\n    styles: [\n        `:host {\n            display: block;\n        }`\n    ],\n    host: {\n        '[class.mc-layout-header]': 'true'\n    }\n})\nexport class McHeaderComponent {\n}\n","import { ChangeDetectionStrategy, Component, ViewEncapsulation } from '@angular/core';\n\n\n@Component({\n    selector: 'mc-layout',\n    preserveWhitespaces: false,\n    styleUrls: ['layout.css'],\n    templateUrl: './layout.component.html',\n    host: {\n        '[class.mc-layout]': 'true',\n        '[class.mc-layout-has-sidebar]': 'hasSidebar'\n    },\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class McLayoutComponent {\n    hasSidebar = false;\n}\n","import {\n    ChangeDetectionStrategy,\n    Component,\n    EventEmitter,\n    Host,\n    Input,\n    OnInit,\n    Optional,\n    Output\n} from '@angular/core';\nimport { toBoolean } from '@ptsecurity/mosaic/core';\n\nimport { McLayoutComponent } from './layout.component';\n\n\n@Component({\n    selector: 'mc-sidebar',\n    preserveWhitespaces: false,\n    templateUrl: './sidebar.component.html',\n    host: {\n        '[class.mc-layout-sidebar]': 'true',\n        '[class.mc-layout-sidebar-collapsed]': 'mcCollapsed',\n        '[style.flex]': 'mcFlex',\n        '[style.max-width.px]': 'mcWidth',\n        '[style.min-width.px]': 'mcWidth',\n        '[style.width.px]': 'mcWidth'\n    },\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class McSidebarComponent implements OnInit {\n\n    @Input() _mcWidth = 200;\n    @Input() mcCollapsedWidth = 80;\n\n    @Input()\n    set mcCollapsible(value: boolean) {\n        this.collapsible = toBoolean(value);\n    }\n\n    get mcCollapsible(): boolean {\n        return this.collapsible;\n    }\n\n    @Input()\n    set mcCollapsed(value: boolean) {\n        this.collapsed = toBoolean(value);\n    }\n\n    get mcCollapsed(): boolean {\n        return this.collapsed;\n    }\n\n    // tslint:disable-next-line\n    @Output() mcCollapsedChange = new EventEmitter();\n\n    private collapsed = false;\n    private collapsible = false;\n\n    get mcFlex(): string {\n        if (this.mcCollapsed) {\n            return `0 0 ${this.mcCollapsedWidth}px`;\n        } else {\n            return `0 0 ${this.mcWidth}px`;\n        }\n    }\n\n    get mcWidth(): number {\n        if (this.mcCollapsed) {\n            return this.mcCollapsedWidth;\n        } else {\n            return this._mcWidth;\n        }\n    }\n\n    constructor(\n        @Optional() @Host() private mcLayoutComponent: McLayoutComponent) {\n    }\n\n    ngOnInit() {\n        if (this.mcLayoutComponent) {\n            this.mcLayoutComponent.hasSidebar = true;\n        }\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { McContentComponent } from './content.component';\nimport { McFooterComponent } from './footer.component';\nimport { McHeaderComponent } from './header.component';\nimport { McLayoutComponent } from './layout.component';\nimport { McSidebarComponent } from './sidebar.component';\n\n\n@NgModule({\n    imports: [ CommonModule ],\n    exports: [\n        McLayoutComponent,\n        McContentComponent,\n        McFooterComponent,\n        McHeaderComponent,\n        McSidebarComponent\n    ],\n    declarations: [\n        McLayoutComponent,\n        McContentComponent,\n        McFooterComponent,\n        McHeaderComponent,\n        McSidebarComponent\n    ]\n})\nexport class McLayoutModule {\n}\n","import {\n    AfterContentInit,\n    Attribute,\n    ChangeDetectionStrategy,\n    Component,\n    ContentChildren,\n    ElementRef,\n    EventEmitter,\n    forwardRef,\n    Input,\n    Output,\n    QueryList,\n    ViewEncapsulation,\n    ChangeDetectorRef,\n    Inject,\n    OnDestroy,\n    OnInit,\n    ViewChild\n} from '@angular/core';\n\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\n\nimport { Subscription } from 'rxjs';\n\nimport { FocusKeyManager, IFocusableOption } from '@ptsecurity/cdk/a11y';\nimport { SelectionModel } from '@ptsecurity/cdk/collections';\nimport { END, ENTER, HOME, PAGE_DOWN, PAGE_UP, SPACE } from '@ptsecurity/cdk/keycodes';\n\nimport {\n    McLine,\n    McLineSetter,\n    CanDisable,\n    mixinDisabled,\n    toBoolean, CanDisableCtor\n} from '@ptsecurity/mosaic/core';\n\n\n/**\n * Component for list-options of selection-list. Each list-option can automatically\n * generate a checkbox and can put current item into the selectionModel of selection-list\n * if the current item is selected.\n */\n@Component({\n    exportAs: 'mcListOption',\n    selector: 'mc-list-option',\n    host: {\n        tabindex: '-1',\n\n        class: 'mc-list-option',\n        '[class.mc-selected]': 'selected',\n        '[class.mc-focused]': '_hasFocus',\n        '(focus)': '_handleFocus()',\n        '(blur)': '_handleBlur()',\n        '(click)': '_handleClick()'\n    },\n    templateUrl: 'list-option.html',\n    encapsulation: ViewEncapsulation.None,\n    preserveWhitespaces: false,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class McListOption implements AfterContentInit, OnDestroy, OnInit, IFocusableOption {\n    _hasFocus: boolean = false;\n\n    @ContentChildren(McLine) _lines: QueryList<McLine>;\n\n    @ViewChild('text') _text: ElementRef;\n\n    // Whether the label should appear before or after the checkbox. Defaults to 'after'\n    @Input() checkboxPosition: 'before' | 'after' = 'after';\n\n    @Input() value: any;\n\n    @Input()\n    get disabled() {\n        return this._disabled || (this.listSelection && this.listSelection.disabled);\n    }\n\n    set disabled(value: any) {\n        const newValue = toBoolean(value);\n\n        if (newValue !== this._disabled) {\n            this._disabled = newValue;\n            this._changeDetector.markForCheck();\n        }\n    }\n\n    @Input()\n    get selected(): boolean {\n        return this.listSelection.selectedOptions && this.listSelection.selectedOptions.isSelected(this) || false;\n    }\n\n    set selected(value: boolean) {\n        const isSelected = toBoolean(value);\n\n        if (isSelected !== this._selected) {\n            this.setSelected(isSelected);\n\n            this.listSelection._reportValueChange();\n        }\n    }\n\n    private _lineSetter: McLineSetter;\n    private _selected = false;\n    private _disabled = false;\n\n    constructor(\n        private _element: ElementRef,\n        private _changeDetector: ChangeDetectorRef,\n        @Inject(forwardRef(() => McListSelection))\n        public listSelection: McListSelection\n    ) {}\n\n    ngOnInit() {\n        if (this._selected) {\n            // List options that are selected at initialization can't be reported properly to the form\n            // control. This is because it takes some time until the selection-list knows about all\n            // available options. Also it can happen that the ControlValueAccessor has an initial value\n            // that should be used instead. Deferring the value change report to the next tick ensures\n            // that the form control value is not being overwritten.\n            const wasSelected = this._selected;\n\n            Promise.resolve().then(() => {\n                if (this._selected || wasSelected) {\n                    this.selected = true;\n                    this._changeDetector.markForCheck();\n                }\n            });\n        }\n    }\n\n    ngAfterContentInit() {\n        this._lineSetter = new McLineSetter(this._lines, this._element);\n    }\n\n    ngOnDestroy(): void {\n        if (this.selected) {\n            // We have to delay this until the next tick in order\n            // to avoid changed after checked errors.\n            Promise.resolve().then(() => this.selected = false);\n        }\n\n        this.listSelection._removeOptionFromList(this);\n    }\n\n    toggle(): void {\n        this.selected = !this.selected;\n    }\n\n    focus(): void {\n        this._element.nativeElement.focus();\n\n        this.listSelection.setFocusedOption(this);\n    }\n\n    getLabel() {\n        return this._text ? this._text.nativeElement.textContent : '';\n    }\n\n    setSelected(selected: boolean) {\n        if (this._selected === selected || !this.listSelection.selectedOptions) { return; }\n\n        this._selected = selected;\n\n        if (selected) {\n            this.listSelection.selectedOptions.select(this);\n        } else {\n            this.listSelection.selectedOptions.deselect(this);\n        }\n\n        this._changeDetector.markForCheck();\n    }\n\n    _getHeight(): number {\n        return this._element.nativeElement.getClientRects()[0].height;\n    }\n\n    _handleClick() {\n        if (this.disabled) { return; }\n\n        this.listSelection.setFocusedOption(this);\n    }\n\n    _handleFocus() {\n        if (this.disabled || this._hasFocus) { return; }\n\n        this._hasFocus = true;\n    }\n\n    _handleBlur() {\n        this._hasFocus = false;\n\n        this.listSelection._onTouched();\n    }\n\n    _getHostElement(): HTMLElement {\n        return this._element.nativeElement;\n    }\n}\n\n\nexport const MC_SELECTION_LIST_VALUE_ACCESSOR: any = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => McListSelection),\n    multi: true\n};\n\n// Change event that is being fired whenever the selected state of an option changes. */\nexport class McListSelectionChange {\n    constructor(\n        // Reference to the selection list that emitted the event.\n        public source: McListSelection,\n        // Reference to the option that has been changed.\n        public option: McListOption\n    ) {}\n}\n\n\nexport class McListSelectionBase {}\n\nexport const _McListSelectionMixinBase: CanDisableCtor & typeof McListSelectionBase\n    = mixinDisabled(McListSelectionBase);\n\n@Component({\n    exportAs: 'mcListSelection',\n    selector: 'mc-list-selection',\n    template: '<ng-content></ng-content>',\n    styleUrls: ['./list.css'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n    inputs: ['disabled', 'tabIndex'],\n    host: {\n        class: 'mc-list-selection',\n        '[tabIndex]': 'tabIndex',\n        '(focus)': 'focus()',\n        '(blur)': '_onTouched()',\n        '(keydown)': '_onKeyDown($event)',\n        '(window:resize)': 'updateScrollSize()'\n    },\n    providers: [MC_SELECTION_LIST_VALUE_ACCESSOR],\n    preserveWhitespaces: false\n})\nexport class McListSelection extends _McListSelectionMixinBase implements\n    IFocusableOption, CanDisable, AfterContentInit, ControlValueAccessor {\n\n    _keyManager: FocusKeyManager<McListOption>;\n\n    // The option components contained within this selection-list.\n    @ContentChildren(McListOption) options: QueryList<McListOption>;\n\n    tabIndex: number;\n\n    autoSelect: boolean;\n    noUnselect: boolean;\n    multiple: boolean;\n\n    // todo temporary solution\n    withShift: boolean;\n    withCtrl: boolean;\n\n    @Input() horizontal: boolean = false;\n\n    // Emits a change event whenever the selected state of an option changes.\n    @Output() readonly selectionChange: EventEmitter<McListSelectionChange> = new EventEmitter<McListSelectionChange>();\n\n    selectedOptions: SelectionModel<McListOption>;\n\n    // Used for storing the values that were assigned before the options were initialized.\n    private _tempValues: string[] | null;\n\n    private _modelChanges = Subscription.EMPTY;\n\n    constructor(\n        private _element: ElementRef,\n        @Attribute('tabindex') tabIndex: string,\n        @Attribute('auto-select') autoSelect: string,\n        @Attribute('no-unselect') noUnselect: string,\n        @Attribute('multiple') multiple: string\n    ) {\n        super();\n\n        this.autoSelect = autoSelect === null ? true : toBoolean(autoSelect);\n        this.multiple = multiple === null ? true : toBoolean(multiple);\n        this.noUnselect = noUnselect === null ? true : toBoolean(noUnselect);\n\n        this.tabIndex = parseInt(tabIndex) || 0;\n\n        this.selectedOptions = new SelectionModel<McListOption>(this.multiple);\n    }\n\n    ngAfterContentInit(): void {\n        this.horizontal = toBoolean(this.horizontal);\n\n        this._keyManager = new FocusKeyManager<McListOption>(this.options)\n            .withTypeAhead()\n            .withVerticalOrientation(!this.horizontal)\n            .withHorizontalOrientation(this.horizontal ? 'ltr' : null);\n\n        if (this._tempValues) {\n            this._setOptionsFromValues(this._tempValues);\n            this._tempValues = null;\n        }\n\n        // Sync external changes to the model back to the options.\n        this._modelChanges = this.selectedOptions.onChange!.subscribe((event) => {\n            for (const item of event.added) {\n                item.selected = true;\n            }\n\n            for (const item of event.removed) {\n                item.selected = false;\n            }\n        });\n\n        this.updateScrollSize();\n    }\n\n    ngOnDestroy() {\n        this._modelChanges.unsubscribe();\n    }\n\n    focus() {\n        this._element.nativeElement.focus();\n    }\n\n    selectAll() {\n        this.options.forEach((option) => option.setSelected(true));\n\n        this._reportValueChange();\n    }\n\n    deselectAll() {\n        this.options.forEach((option) => option.setSelected(false));\n\n        this._reportValueChange();\n    }\n\n    updateScrollSize(): void {\n        if (this.horizontal || !this.options.first) { return; }\n\n        this._keyManager.withScrollSize(Math.floor(this._getHeight() / this.options.first._getHeight()));\n    }\n\n    // Sets the focused option of the selection-list.\n    setFocusedOption(option: McListOption): void {\n        this._keyManager.updateActiveItem(option);\n\n        if (this.withShift && this.multiple) {\n            const previousIndex = this._keyManager.previousActiveItemIndex;\n            const activeIndex = this._keyManager.activeItemIndex;\n\n            if (previousIndex < activeIndex) {\n                this.options.forEach((item, index) => {\n                    if (index >= previousIndex && index <= activeIndex) { item.setSelected(true); }\n                });\n            } else {\n                this.options.forEach((item, index) => {\n                    if (index >= activeIndex && index <= previousIndex) { item.setSelected(true); }\n                });\n            }\n\n            this.withShift = false;\n        } else if (this.withCtrl) {\n            this.withCtrl = false;\n\n            if (!this._canDeselectLast(option)) { return; }\n\n            option.toggle();\n        } else {\n            if (this.autoSelect) {\n                this.options.forEach((item) => item.setSelected(false));\n                option.setSelected(true);\n            }\n        }\n\n        this._emitChangeEvent(option);\n        this._reportValueChange();\n    }\n\n    // Implemented as part of ControlValueAccessor.\n    writeValue(values: string[]): void {\n        if (this.options) {\n            this._setOptionsFromValues(values || []);\n        } else {\n            this._tempValues = values;\n        }\n    }\n\n    // Implemented as part of ControlValueAccessor.\n    registerOnChange(fn: (value: any) => void): void {\n        this._onChange = fn;\n    }\n\n    // Implemented as part of ControlValueAccessor.\n    registerOnTouched(fn: () => void): void {\n        this._onTouched = fn;\n    }\n\n    // Implemented as a part of ControlValueAccessor.\n    setDisabledState(isDisabled: boolean): void {\n        if (this.options) {\n            this.options.forEach((option) => option.disabled = isDisabled);\n        }\n    }\n\n    getSelectedOptionValues(): string[] {\n        return this.options.filter((option) => option.selected).map((option) => option.value);\n    }\n\n    // Toggles the selected state of the currently focused option.\n    toggleFocusedOption(): void {\n        const focusedIndex = this._keyManager.activeItemIndex;\n\n        if (focusedIndex != null && this._isValidIndex(focusedIndex)) {\n            const focusedOption: McListOption = this.options.toArray()[focusedIndex];\n\n            if (focusedOption && this._canDeselectLast(focusedOption)) {\n                focusedOption.toggle();\n\n                // Emit a change event because the focused option changed its state through user interaction.\n                this._emitChangeEvent(focusedOption);\n            }\n        }\n    }\n\n    _canDeselectLast(listOption: McListOption): boolean {\n        return !(this.noUnselect && this.selectedOptions.selected.length === 1 && listOption.selected);\n    }\n\n    _getHeight(): number {\n        return this._element.nativeElement.getClientRects()[0].height;\n    }\n\n    // View to model callback that should be called if the list or its options lost focus.\n    _onTouched: () => void = () => {};\n\n    // Removes an option from the selection list and updates the active item.\n    _removeOptionFromList(option: McListOption) {\n        if (option._hasFocus) {\n            const optionIndex = this._getOptionIndex(option);\n\n            // Check whether the option is the last item\n            if (optionIndex > 0) {\n                this._keyManager.setPreviousItemActive();\n            } else if (optionIndex === 0 && this.options.length > 1) {\n                this._keyManager.setNextItemActive();\n            }\n        }\n    }\n\n    _onKeyDown(event: KeyboardEvent) {\n        const keyCode = event.keyCode;\n        this.withShift = event.shiftKey;\n        this.withCtrl = event.ctrlKey;\n\n        switch (keyCode) {\n            case SPACE:\n            case ENTER:\n                this.toggleFocusedOption();\n                event.preventDefault();\n\n                break;\n            case HOME:\n                this._keyManager.setFirstItemActive();\n                event.preventDefault();\n\n                break;\n            case END:\n                this._keyManager.setLastItemActive();\n                event.preventDefault();\n\n                break;\n            case PAGE_UP:\n                if (!this.horizontal) { this._keyManager.setPreviousPageItemActive(); }\n\n                event.preventDefault();\n\n                break;\n            case PAGE_DOWN:\n                if (!this.horizontal) { this._keyManager.setNextPageItemActive(); }\n\n                event.preventDefault();\n\n                break;\n            default:\n                this._keyManager.onKeydown(event);\n        }\n    }\n\n    // Reports a value change to the ControlValueAccessor\n    _reportValueChange() {\n        if (this.options) {\n            this._onChange(this.getSelectedOptionValues());\n        }\n    }\n\n    // Emits a change event if the selected state of an option changed.\n    _emitChangeEvent(option: McListOption) {\n        this.selectionChange.emit(new McListSelectionChange(this, option));\n    }\n\n    // Returns the option with the specified value.\n    private _getOptionByValue(value: string): McListOption | undefined {\n        return this.options.find((option) => option.value === value);\n    }\n\n    // Sets the selected options based on the specified values.\n    private _setOptionsFromValues(values: string[]) {\n        this.options.forEach((option) => option.setSelected(false));\n\n        values\n            .map((value) => this._getOptionByValue(value))\n            .filter(Boolean)\n            .forEach((option) => option!.setSelected(true));\n    }\n\n    /**\n     * Utility to ensure all indexes are valid.\n     * @param index The index to be checked.\n     * @returns True if the index is valid for our list of options.\n     */\n    private _isValidIndex(index: number): boolean {\n        return index >= 0 && index < this.options.length;\n    }\n\n    // Returns the index of the specified list option.\n    private _getOptionIndex(option: McListOption): number {\n        return this.options.toArray().indexOf(option);\n    }\n\n    // View to model callback that should be called whenever the selected options change.\n    private _onChange: (value: any) => void = (_: any) => {};\n}\n","// todo пока не делаем, перенесено из материала, но у нас в доках таких простых списков нет.\nimport {\n    AfterContentInit, ChangeDetectionStrategy, Component, ContentChildren, Directive, ElementRef, QueryList,\n    ViewEncapsulation\n} from '@angular/core';\n\nimport { McLine, McLineSetter } from '@ptsecurity/mosaic/core';\n\n\nexport class McListBase {}\n\n@Component({\n    selector: 'mc-list',\n    host: { class: 'mc-list' },\n    template: '<ng-content></ng-content>',\n    styleUrls: ['./list.css'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None\n})\nexport class McList extends McListBase {}\n\n\n/**\n * Directive whose purpose is to add the mc- CSS styling to this selector.\n * @docs-private\n */\n@Directive({\n    selector: '[mc-subheader], [mcSubheader]',\n    host: { class: 'mc-subheader' }\n})\nexport class McListSubheaderCssStyler {}\n\n\n// Boilerplate for applying mixins to McListItem.\nexport class McListItemBase {}\n\n@Component({\n    selector: 'mc-list-item, a[mc-list-item]',\n    host: {\n        class: 'mc-list-item',\n        '(focus)': '_handleFocus()',\n        '(blur)': '_handleBlur()'\n    },\n    templateUrl: './list-item.html',\n    encapsulation: ViewEncapsulation.None,\n    preserveWhitespaces: false,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class McListItem extends McListItemBase implements AfterContentInit {\n    @ContentChildren(McLine) _lines: QueryList<McLine>;\n\n    private _lineSetter: McLineSetter;\n\n    constructor(private _element: ElementRef) {\n        super();\n    }\n\n    ngAfterContentInit() {\n        this._lineSetter = new McLineSetter(this._lines, this._element);\n    }\n\n    _handleFocus() {\n        this._element.nativeElement.classList.add('mc-focused');\n    }\n\n    _handleBlur() {\n        this._element.nativeElement.classList.remove('mc-focused');\n    }\n\n    _getHostElement(): HTMLElement {\n        return this._element.nativeElement;\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { A11yModule } from '@ptsecurity/cdk/a11y';\n\nimport { McLineModule } from '@ptsecurity/mosaic/core';\n\nimport { McListSelection, McListOption } from './list-selection.component';\nimport { McList, McListItem, McListSubheaderCssStyler } from './list.component';\n\n\n@NgModule({\n    imports: [\n        CommonModule,\n        A11yModule,\n        McLineModule\n    ],\n    exports: [\n        McList,\n        McListSelection,\n        McListItem,\n        McListOption,\n        McListSubheaderCssStyler\n    ],\n    declarations: [\n        McList,\n        McListSelection,\n        McListItem,\n        McListOption,\n        McListSubheaderCssStyler\n    ]\n})\nexport class McListModule {}\n","import {\n    Input,\n    Attribute,\n    Component,\n    ElementRef,\n    OnDestroy,\n    ViewEncapsulation,\n    ChangeDetectionStrategy,\n    ChangeDetectorRef\n} from '@angular/core';\n\nimport { FocusMonitor } from '@ptsecurity/cdk/a11y';\nimport {\n    CanDisable, CanDisableCtor,\n    HasTabIndex, HasTabIndexCtor,\n    mixinDisabled,\n    mixinTabIndex,\n    toBoolean\n} from '@ptsecurity/mosaic/core';\n\n\nexport class McLinkBase {\n    constructor(public _elementRef: ElementRef) {\n    }\n}\n\nexport const _McLinkBase: HasTabIndexCtor & CanDisableCtor & typeof McLinkBase\n    = mixinTabIndex(mixinDisabled(McLinkBase));\n\n@Component({\n    selector: 'a.mc-link',\n    template: `<ng-content></ng-content>`,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n    exportAs: 'mcLink',\n    styleUrls: ['./link.css'],\n    inputs: ['disabled'],\n    host: {\n        '[attr.disabled]': 'disabled || null',\n        '[attr.tabindex]': 'tabIndex'\n    }\n})\n\nexport class McLink extends _McLinkBase implements OnDestroy, HasTabIndex, CanDisable {\n\n    @Input()\n    get disabled() {\n        return this._disabled;\n    }\n\n    set disabled(value: any) {\n        const newValue = toBoolean(value);\n\n        if (newValue !== this._disabled) {\n            this._disabled = newValue;\n            this._changeDetector.markForCheck();\n        }\n    }\n\n    private _disabled = false;\n\n    constructor(\n        @Attribute('tabindex') tabIndex: string,\n        public elementRef: ElementRef,\n        private _focusMonitor: FocusMonitor,\n        private _changeDetector: ChangeDetectorRef) {\n\n        super(elementRef);\n        this._focusMonitor.monitor(elementRef.nativeElement, true);\n        this.tabIndex = parseInt(tabIndex) || 0;\n    }\n\n    ngOnDestroy() {\n        this._focusMonitor.stopMonitoring(this.elementRef.nativeElement);\n    }\n\n    focus(): void {\n        this._getHostElement().focus();\n    }\n\n    _getHostElement() {\n        return this.elementRef.nativeElement;\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { A11yModule } from '@ptsecurity/cdk/a11y';\n\nimport { McLink } from './link.component';\n\n\n@NgModule({\n    imports: [\n        CommonModule,\n        A11yModule\n    ],\n    declarations: [McLink],\n    exports: [McLink]\n})\nexport class McLinkModule {}\n","import { Injectable, Optional, SkipSelf } from '@angular/core';\nimport { Subject, Subscription } from 'rxjs';\n\nimport { McModalRef } from './modal-ref.class';\n\n\ninterface IRegisteredMeta {\n    modalRef: McModalRef;\n    afterOpenSubscription: Subscription;\n    afterCloseSubscription: Subscription;\n}\n\n@Injectable()\nexport class McModalControlService {\n\n    // Track singleton afterAllClose through over the injection tree\n    get afterAllClose(): Subject<void> {\n        return this.parentService ? this.parentService.afterAllClose : this.rootAfterAllClose;\n    }\n\n    // Track singleton openModals array through over the injection tree\n    get openModals(): McModalRef[] {\n        return this.parentService ? this.parentService.openModals : this.rootOpenModals;\n    }\n\n    // @ts-ignore\n    private rootOpenModals: McModalRef[] = this.parentService ? null : [];\n    // @ts-ignore\n    private rootAfterAllClose: Subject<void> = this.parentService ? null : new Subject<void>();\n    // @ts-ignore\n    private rootRegisteredMetaMap: Map<McModalRef, IRegisteredMeta> = this.parentService ? null : new Map();\n\n    // Registered modal for later usage\n    private get registeredMetaMap(): Map<McModalRef, IRegisteredMeta> {\n        return this.parentService ? this.parentService.registeredMetaMap : this.rootRegisteredMetaMap;\n    }\n\n    constructor(\n        @Optional() @SkipSelf() private parentService: McModalControlService) {\n    }\n\n    // Register a modal to listen its open/close\n    registerModal(modalRef: McModalRef): void {\n        if (!this.hasRegistered(modalRef)) {\n            const afterOpenSubscription = modalRef.afterOpen.subscribe(() => this.openModals.push(modalRef));\n            const afterCloseSubscription = modalRef.afterClose.subscribe(() => this.removeOpenModal(modalRef));\n\n            this.registeredMetaMap.set(modalRef, {modalRef, afterOpenSubscription, afterCloseSubscription});\n        }\n    }\n\n    hasRegistered(modalRef: McModalRef): boolean {\n        return this.registeredMetaMap.has(modalRef);\n    }\n\n    // Close all registered opened modals\n    closeAll(): void {\n        let i = this.openModals.length;\n\n        while (i--) {\n            this.openModals[i].close();\n        }\n    }\n\n    private removeOpenModal(modalRef: McModalRef): void {\n        const index = this.openModals.indexOf(modalRef);\n\n        if (index > -1) {\n            this.openModals.splice(index, 1);\n\n            if (!this.openModals.length) {\n                this.afterAllClose.next();\n            }\n        }\n    }\n}\n","import { Observable } from 'rxjs';\n\nimport { McModalComponent } from './modal.component';\n\n\n/**\n * API class that public to users to handle the modal instance.\n * McModalRef is aim to avoid accessing to the modal instance directly by users.\n */\nexport abstract class McModalRef<T = any, R = any> {\n    abstract afterOpen: Observable<void>;\n    abstract afterClose: Observable<R>;\n\n    abstract open(): void;\n\n    abstract close(result?: R): void;\n\n    abstract destroy(result?: R): void;\n\n    /**\n     * Trigger the nzOnOk/nzOnCancel by manual\n     */\n    abstract triggerOk(): void;\n\n    abstract triggerCancel(): void;\n\n    // /**\n    //  * Return the ComponentRef of nzContent when specify nzContent as a Component\n    //  * Note: this method may return undefined if the Component has not ready yet.\n    //    (it only available after Modal's ngOnInit)\n    //  */\n    // abstract getContentComponentRef(): ComponentRef<{}>;\n\n    /**\n     * Return the component instance of nzContent when specify nzContent as a Component\n     * Note: this method may return undefined if the Component has not ready yet.\n     * (it only available after Modal's ngOnInit)\n     */\n    abstract getContentComponent(): T;\n\n    /**\n     * Get the dom element of this Modal\n     */\n    abstract getElement(): HTMLElement;\n\n    /**\n     * Get the instance of the Modal itself\n     */\n    abstract getInstance(): McModalComponent;\n}\n","export interface IClickPosition {\n    x: number;\n    y: number;\n}\n\nexport class ModalUtil {\n    private lastPosition: IClickPosition;\n\n    constructor(private document: Document) {\n        this.lastPosition = {x: -1, y: -1};\n        this.listenDocumentClick();\n    }\n\n    getLastClickPosition(): IClickPosition {\n        return this.lastPosition;\n    }\n\n    listenDocumentClick(): void {\n        this.document.addEventListener('click', (event: MouseEvent) => {\n            this.lastPosition = {x: event.clientX, y: event.clientY};\n        });\n    }\n}\n\nexport default new ModalUtil(document);\n","import {\n    ChangeDetectionStrategy,\n    Component,\n    Directive,\n    ElementRef,\n    OnDestroy,\n    QueryList,\n    ViewEncapsulation,\n    ContentChildren\n} from '@angular/core';\n\nimport { FocusMonitor } from '@ptsecurity/cdk/a11y';\nimport { Platform } from '@ptsecurity/cdk/platform';\n\nimport { mixinColor, mixinDisabled, CanColor, CanDisable, CanDisableCtor, CanColorCtor } from '@ptsecurity/mosaic/core';\nimport { McIcon } from '@ptsecurity/mosaic/icon';\n\n\n@Directive({\n    selector: 'button[mc-button], a[mc-button]',\n    host: { class: 'mc-button' }\n})\nexport class McButtonCSSStyler {}\n\n\n@Directive({\n    selector: 'button[mc-xs-button], a[mc-xs-button]',\n    host: { class: 'mc-button mc-button_xs' }\n})\nexport class McXSButtonCSSStyler {}\n\n\n@Directive({\n    selector: 'button[mc-sm-button], a[mc-sm-button]',\n    host: { class: 'mc-button mc-button_sm' }\n})\nexport class McSMButtonCSSStyler {}\n\n\n@Directive({\n    selector: 'button[mc-lg-button], a[mc-lg-button]',\n    host: { class: 'mc-button mc-button_lg' }\n})\nexport class McLGButtonCSSStyler {}\n\n\n@Directive({\n    selector: 'button[mc-xl-button], a[mc-xl-button]',\n    host: { class: 'mc-button mc-button_xl' }\n})\nexport class McXLButtonCSSStyler {}\n\n\n@Directive({\n    selector: 'button[mc-icon-button], a[mc-icon-button]',\n    queries: {\n        contentChildren: new ContentChildren(McIcon)\n    },\n    host: { class: 'mc-icon-button' }\n})\nexport class McIconButtonCSSStyler {\n    nativeElement: Element;\n\n    contentChildren: QueryList<McIcon>;\n\n    constructor(elementRef: ElementRef) {\n        this.nativeElement = elementRef.nativeElement;\n    }\n\n    ngAfterContentInit() {\n        this._addClassModificatorForIcons();\n    }\n\n    _addClassModificatorForIcons() {\n        const twoIcons = 2;\n        const icons = this.contentChildren.map((item) => item._elementRef.nativeElement);\n\n        if (icons.length === 1) {\n            const iconElement = icons[0];\n\n            if (!iconElement.previousElementSibling && !iconElement.nextElementSibling) {\n                if (iconElement.nextSibling) {\n                    iconElement.classList.add('mc-icon_left');\n                    this.nativeElement.classList.add('mc-icon-button_left');\n                }\n\n                if (iconElement.previousSibling) {\n                    iconElement.classList.add('mc-icon_right');\n                    this.nativeElement.classList.add('mc-icon-button_right');\n                }\n            }\n        } else if (icons.length === twoIcons) {\n            const firstIconElement = icons[0];\n            const secondIconElement = icons[1];\n\n            firstIconElement.classList.add('mc-icon_left');\n            secondIconElement.classList.add('mc-icon_right');\n        }\n    }\n}\n\n\nexport class McButtonBase {\n    constructor(public _elementRef: ElementRef) {}\n}\n\nexport const _McButtonMixinBase:\n    CanDisableCtor &\n    CanColorCtor &\n    typeof McButtonBase =\n        mixinColor(mixinDisabled(McButtonBase));\n\n\n@Component({\n    selector: `\n        button[mc-button],\n        button[mc-xs-button],\n        button[mc-sm-button],\n        button[mc-lg-button],\n        button[mc-xl-button]\n    `,\n    templateUrl: './button.component.html',\n    styleUrls: ['./button.css'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n    inputs: ['disabled', 'color'],\n    host: {\n        '[disabled]': 'disabled || null'\n    }\n})\nexport class McButton extends _McButtonMixinBase implements OnDestroy, CanDisable, CanColor {\n    constructor(elementRef: ElementRef, private _focusMonitor: FocusMonitor) {\n        super(elementRef);\n\n        this._focusMonitor.monitor(this._elementRef.nativeElement, true);\n    }\n\n    ngOnDestroy() {\n        this._focusMonitor.stopMonitoring(this._elementRef.nativeElement);\n    }\n\n    focus(): void {\n        this._getHostElement().focus();\n    }\n\n    _getHostElement() {\n        return this._elementRef.nativeElement;\n    }\n}\n\n\n@Component({\n    selector: 'a[mc-button], a[mc-xs-button], a[mc-sm-button], a[mc-lg-button], a[mc-xl-button]',\n    templateUrl: './button.component.html',\n    styleUrls: ['./button.css'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n    inputs: ['disabled', 'color'],\n    host: {\n        '[attr.tabindex]': 'disabled ? -1 : 0',\n        '[attr.disabled]': 'disabled || null',\n        '(click)': '_haltDisabledEvents($event)'\n    }\n})\nexport class McAnchor extends McButton {\n    constructor(focusMonitor: FocusMonitor, elementRef: ElementRef) {\n        super(elementRef, focusMonitor);\n    }\n\n    _haltDisabledEvents(event: Event) {\n        if (this.disabled) {\n            event.preventDefault();\n            event.stopImmediatePropagation();\n        }\n    }\n}\n\n\n@Component({\n    selector: 'button[mc-icon-button]',\n    templateUrl: './button.component.html',\n    styleUrls: ['./button.css'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n    inputs: ['disabled', 'color'],\n    host: {\n        '[attr.tabindex]': 'disabled ? -1 : 0',\n        '[attr.disabled]': 'disabled || null'\n    }\n})\nexport class McIconButton extends McButton {\n    constructor(focusMonitor: FocusMonitor, elementRef: ElementRef) {\n        super(elementRef, focusMonitor);\n    }\n\n    _haltDisabledEvents(event: Event) {\n        if (this.disabled) {\n            event.preventDefault();\n            event.stopImmediatePropagation();\n        }\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { A11yModule } from '@ptsecurity/cdk/a11y';\nimport { PlatformModule } from '@ptsecurity/cdk/platform';\n\nimport {\n    McButton,\n    McAnchor,\n    McIconButton,\n    McButtonCSSStyler,\n    McXSButtonCSSStyler,\n    McSMButtonCSSStyler,\n    McLGButtonCSSStyler,\n    McXLButtonCSSStyler,\n    McIconButtonCSSStyler\n} from './button.component';\n\n\n@NgModule({\n    imports: [\n        CommonModule,\n        A11yModule,\n        PlatformModule\n    ],\n    exports: [\n        McButton,\n        McAnchor,\n        McIconButton,\n        McButtonCSSStyler,\n        McXSButtonCSSStyler,\n        McSMButtonCSSStyler,\n        McLGButtonCSSStyler,\n        McXLButtonCSSStyler,\n        McIconButtonCSSStyler\n    ],\n    declarations: [\n        McButton,\n        McAnchor,\n        McIconButton,\n        McButtonCSSStyler,\n        McXSButtonCSSStyler,\n        McSMButtonCSSStyler,\n        McLGButtonCSSStyler,\n        McXLButtonCSSStyler,\n        McIconButtonCSSStyler\n    ]\n})\nexport class McButtonModule {}\n","import {\n    Output,\n    ChangeDetectionStrategy,\n    Component,\n    ElementRef, Input,\n    OnDestroy, EventEmitter,\n    ViewEncapsulation, HostBinding, Directive, ContentChild\n} from '@angular/core';\n\nimport { FocusMonitor } from '@ptsecurity/cdk/a11y';\nimport { SPACE } from '@ptsecurity/cdk/keycodes';\n\n\nexport enum Status {\n    Info,\n    Success,\n    Warning,\n    Error\n}\n\nconst name = 'mc-card';\n\n@Component({\n    selector: name,\n    templateUrl: './card.component.html',\n    styleUrls: ['./card.component.css'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n    inputs: ['color'],\n    host: {\n        class: name,\n        '[class.mc-card_readonly]': 'readonly',\n        '(keydown)': 'onKeyDown($event)'\n    }\n})\nexport class McCard implements OnDestroy {\n    get tabIndex(): number | null {\n        return this.readonly ? null : this._tabIndex;\n    }\n\n    @HostBinding('attr.tabIndex')\n    @Input()\n    set tabIndex(value: number | null) {\n        this._tabIndex = value;\n    }\n\n    @Input()\n    readonly = false;\n\n    @Input()\n    selected = false;\n\n    @Output()\n    selectedChange = new EventEmitter<boolean>();\n\n    @Input()\n    mode: 'color' | 'white' = 'color';\n\n    @Input()\n    status: Status = Status.Info;\n\n    private _tabIndex: number | null = 0;\n\n    constructor(private _elementRef: ElementRef, private _focusMonitor: FocusMonitor) {\n        this._focusMonitor.monitor(this._elementRef.nativeElement, false);\n    }\n\n    get statusClass() {\n        switch (this.status) {\n            case Status.Error:\n                return `${name}_error`;\n            case Status.Info:\n                return `${name}_info`;\n            case Status.Success:\n                return `${name}_success`;\n            case Status.Warning:\n                return `${name}_warning`;\n            default:\n                return '';\n        }\n    }\n\n    get isWhiteMode() {\n        return this.mode === 'white';\n    }\n\n    ngOnDestroy() {\n        this._focusMonitor.stopMonitoring(this._elementRef.nativeElement);\n    }\n\n    focus(): void {\n        this.hostElement.focus();\n    }\n\n    clicked($event: MouseEvent) {\n        if (!this.readonly) {\n            $event.stopPropagation();\n            this.selectedChange.emit(!this.selected);\n        }\n    }\n\n    private get hostElement() {\n        return this._elementRef.nativeElement;\n    }\n\n    onKeyDown($event: KeyboardEvent) {\n        const keyCode = $event.keyCode;\n        switch (keyCode) {\n            case SPACE:\n                if (!this.readonly) {\n                    $event.preventDefault();\n                    this.selectedChange.emit(!this.selected);\n                }\n                break;\n            default:\n        }\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { A11yModule } from '@ptsecurity/cdk/a11y';\nimport { PlatformModule } from '@ptsecurity/cdk/platform';\n\nimport {\n    McCard\n} from './card.component';\n\n\n@NgModule({\n    imports: [\n        CommonModule,\n        A11yModule,\n        PlatformModule\n    ],\n    exports: [\n        McCard\n    ],\n    declarations: [\n        McCard\n    ]\n})\nexport class McCardModule {}\n","import { InjectionToken } from '@angular/core';\n\n\n/**\n * Checkbox click action when user click on input element.\n * noop: Do not toggle checked or indeterminate.\n * check: Only toggle checked status, ignore indeterminate.\n * check-indeterminate: Toggle checked status, set indeterminate to false. Default behavior.\n * undefined: Same as `check-indeterminate`.\n */\nexport type McCheckboxClickAction = 'noop' | 'check' | 'check-indeterminate' | undefined;\n\n/**\n * Injection token that can be used to specify the checkbox click behavior.\n */\nexport const MC_CHECKBOX_CLICK_ACTION =\n    new InjectionToken<McCheckboxClickAction>('mc-checkbox-click-action');\n","import {\n    AfterViewInit,\n    Attribute,\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    ElementRef,\n    EventEmitter,\n    forwardRef,\n    Inject,\n    Input,\n    OnDestroy,\n    Optional,\n    Output,\n    ViewChild,\n    ViewEncapsulation\n} from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { FocusMonitor, FocusOrigin } from '@ptsecurity/cdk/a11y';\nimport {\n    CanColor, CanColorCtor,\n    CanDisable, CanDisableCtor,\n    HasTabIndex, HasTabIndexCtor,\n    mixinColor,\n    mixinDisabled,\n    mixinTabIndex,\n    toBoolean\n} from '@ptsecurity/mosaic/core';\n\nimport { MC_CHECKBOX_CLICK_ACTION, McCheckboxClickAction } from './checkbox-config';\n\n\n// Increasing integer for generating unique ids for checkbox components.\nlet nextUniqueId = 0;\n\n/**\n * Provider Expression that allows mc-checkbox to register as a ControlValueAccessor.\n * This allows it to support [(ngModel)].\n * @docs-private\n */\nexport const MC_CHECKBOX_CONTROL_VALUE_ACCESSOR: any = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => McCheckbox),\n    multi: true\n};\n\n/**\n * Represents the different states that require custom transitions between them.\n * @docs-private\n */\nexport enum TransitionCheckState {\n    /** The initial state of the component before any user interaction. */\n    Init,\n    /** The state representing the component when it's becoming checked. */\n    Checked,\n    /** The state representing the component when it's becoming unchecked. */\n    Unchecked,\n    /** The state representing the component when it's becoming indeterminate. */\n    Indeterminate\n}\n\n/** Change event object emitted by McCheckbox. */\nexport class McCheckboxChange {\n    /** The source McCheckbox of the event. */\n    source: McCheckbox;\n    /** The new `checked` value of the checkbox. */\n    checked: boolean;\n}\n\n// Boilerplate for applying mixins to McCheckbox.\n/** @docs-private */\nexport class McCheckboxBase {\n    constructor(public _elementRef: ElementRef) {\n    }\n}\n\nexport const _McCheckboxMixinBase:\n    HasTabIndexCtor &\n    CanColorCtor &\n    CanDisableCtor &\n    typeof McCheckboxBase =\n        mixinTabIndex(mixinColor(mixinDisabled(McCheckboxBase)));\n\n\n/**\n * A mosaic checkbox component. Supports all of the functionality of an HTML5 checkbox,\n * and exposes a similar API. A McCheckbox can be either checked, unchecked, indeterminate, or\n * disabled. Note that all additional accessibility attributes are taken care of by the component,\n * so there is no need to provide them yourself. However, if you want to omit a label and still\n * have the checkbox be accessible, you may supply an [aria-label] input.\n */\n@Component({\n    selector: 'mc-checkbox',\n    templateUrl: 'checkbox.html',\n    styleUrls: ['checkbox.css'],\n    exportAs: 'mcCheckbox',\n    host: {\n        class: 'mc-checkbox',\n        '[id]': 'id',\n        '[attr.id]': 'id',\n        '[class.mc-checkbox-indeterminate]': 'indeterminate',\n        '[class.mc-checkbox-checked]': 'checked',\n        '[class.mc-checkbox-disabled]': 'disabled',\n        '[class.mc-checkbox-label-before]': 'labelPosition == \"before\"'\n    },\n    providers: [MC_CHECKBOX_CONTROL_VALUE_ACCESSOR],\n    inputs: ['color', 'tabIndex'],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class McCheckbox extends _McCheckboxMixinBase implements ControlValueAccessor,\n    AfterViewInit, OnDestroy, CanColor, CanDisable, HasTabIndex {\n\n    /**\n     * Attached to the aria-label attribute of the host element. In most cases, arial-labelledby will\n     * take precedence so this may be omitted.\n     */\n    @Input('aria-label') ariaLabel: string = '';\n\n    /**\n     * Users can specify the `aria-labelledby` attribute which will be forwarded to the input element\n     */\n    @Input('aria-labelledby') ariaLabelledby: string | null = null;\n\n    private _uniqueId: string = `mc-checkbox-${++nextUniqueId}`;\n\n    /** A unique id for the checkbox input. If none is supplied, it will be auto-generated. */\n    @Input() id: string = this._uniqueId;\n\n    /** Returns the unique id for the visual hidden input. */\n    get inputId(): string {\n        return `${this.id || this._uniqueId}-input`;\n    }\n\n    /** Whether the checkbox is required. */\n    @Input()\n    get required(): boolean {\n        return this._required;\n    }\n\n    set required(value: boolean) {\n        this._required = toBoolean(value);\n    }\n\n    private _required: boolean;\n\n    /** Whether the label should appear after or before the checkbox. Defaults to 'after' */\n    @Input() labelPosition: 'before' | 'after' = 'after';\n\n    /** Name value will be applied to the input element if present */\n    @Input() name: string | null = null;\n\n    /** Event emitted when the checkbox's `checked` value changes. */\n    @Output() readonly change: EventEmitter<McCheckboxChange> =\n        new EventEmitter<McCheckboxChange>();\n\n    /** Event emitted when the checkbox's `indeterminate` value changes. */\n    @Output() readonly indeterminateChange: EventEmitter<boolean> = new EventEmitter<boolean>();\n\n    /** The value attribute of the native input element */\n    @Input() value: string;\n\n    /** The native `<input type=\"checkbox\">` element */\n    @ViewChild('input') _inputElement: ElementRef;\n\n    /**\n     * Called when the checkbox is blurred. Needed to properly implement ControlValueAccessor.\n     * @docs-private\n     */\n    _onTouched: () => any = () => {\n    }\n\n    private _currentAnimationClass: string = '';\n\n    private _currentCheckState: TransitionCheckState = TransitionCheckState.Init;\n\n    private _controlValueAccessorChangeFn: (value: any) => void = () => {\n    }\n\n    constructor(elementRef: ElementRef,\n                private _changeDetectorRef: ChangeDetectorRef,\n                private _focusMonitor: FocusMonitor,\n                @Attribute('tabindex') tabIndex: string,\n                @Optional() @Inject(MC_CHECKBOX_CLICK_ACTION)\n                private _clickAction: McCheckboxClickAction) {\n        super(elementRef);\n\n        this.tabIndex = parseInt(tabIndex) || 0;\n    }\n\n    ngAfterViewInit() {\n        this._focusMonitor\n            .monitor(this._inputElement.nativeElement)\n            .subscribe((focusOrigin) => this._onInputFocusChange(focusOrigin));\n    }\n\n    ngOnDestroy() {\n        this._focusMonitor.stopMonitoring(this._inputElement.nativeElement);\n    }\n\n    /**\n     * Whether the checkbox is checked.\n     */\n    @Input()\n    get checked(): boolean {\n        return this._checked;\n    }\n\n    set checked(value: boolean) {\n        if (value != this.checked) {\n            this._checked = value;\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n\n    private _checked: boolean = false;\n\n    /**\n     * Whether the checkbox is disabled. This fully overrides the implementation provided by\n     * mixinDisabled, but the mixin is still required because mixinTabIndex requires it.\n     */\n    @Input()\n    get disabled() {\n        return this._disabled;\n    }\n\n    set disabled(value: any) {\n        if (value != this.disabled) {\n            this._disabled = value;\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n\n    private _disabled: boolean = false;\n\n    /**\n     * Whether the checkbox is indeterminate. This is also known as \"mixed\" mode and can be used to\n     * represent a checkbox with three states, e.g. a checkbox that represents a nested list of\n     * checkable items. Note that whenever checkbox is manually clicked, indeterminate is immediately\n     * set to false.\n     */\n    @Input()\n    get indeterminate(): boolean {\n        return this._indeterminate;\n    }\n\n    set indeterminate(value: boolean) {\n        const changed = value != this._indeterminate;\n        this._indeterminate = value;\n\n        if (changed) {\n            if (this._indeterminate) {\n                this._transitionCheckState(TransitionCheckState.Indeterminate);\n            } else {\n                this._transitionCheckState(\n                    this.checked ? TransitionCheckState.Checked : TransitionCheckState.Unchecked);\n            }\n            this.indeterminateChange.emit(this._indeterminate);\n        }\n    }\n\n    private _indeterminate: boolean = false;\n\n    /** Method being called whenever the label text changes. */\n    _onLabelTextChange() {\n        // This method is getting called whenever the label of the checkbox changes.\n        // Since the checkbox uses the OnPush strategy we need to notify it about the change\n        // that has been recognized by the cdkObserveContent directive.\n        this._changeDetectorRef.markForCheck();\n    }\n\n    // Implemented as part of ControlValueAccessor.\n    writeValue(value: any) {\n        this.checked = !!value;\n    }\n\n    // Implemented as part of ControlValueAccessor.\n    registerOnChange(fn: (value: any) => void) {\n        this._controlValueAccessorChangeFn = fn;\n    }\n\n    // Implemented as part of ControlValueAccessor.\n    registerOnTouched(fn: any) {\n        this._onTouched = fn;\n    }\n\n    // Implemented as part of ControlValueAccessor.\n    setDisabledState(isDisabled: boolean) {\n        this.disabled = isDisabled;\n    }\n\n    _getAriaChecked(): 'true' | 'false' | 'mixed' {\n        return this.checked ? 'true' : (this.indeterminate ? 'mixed' : 'false');\n    }\n\n    private _transitionCheckState(newState: TransitionCheckState) {\n        const oldState = this._currentCheckState;\n        const element: HTMLElement = this._elementRef.nativeElement;\n\n        if (oldState === newState) {\n            return;\n        }\n        if (this._currentAnimationClass.length > 0) {\n            element.classList.remove(this._currentAnimationClass);\n        }\n\n        this._currentCheckState = newState;\n\n        if (this._currentAnimationClass.length > 0) {\n            element.classList.add(this._currentAnimationClass);\n        }\n    }\n\n    private _emitChangeEvent() {\n        const event = new McCheckboxChange();\n        event.source = this;\n        event.checked = this.checked;\n\n        this._controlValueAccessorChangeFn(this.checked);\n        this.change.emit(event);\n    }\n\n    /** Function is called whenever the focus changes for the input element. */\n    private _onInputFocusChange(focusOrigin: FocusOrigin) {\n        if (focusOrigin) {\n            this._onTouched();\n        }\n    }\n\n    /** Toggles the `checked` state of the checkbox. */\n    toggle(): void {\n        this.checked = !this.checked;\n    }\n\n    /**\n     * Event handler for checkbox input element.\n     * Toggles checked state if element is not disabled.\n     * Do not toggle on (change) event since IE doesn't fire change event when\n     *   indeterminate checkbox is clicked.\n     * @param event\n     */\n    _onInputClick(event: Event) {\n        // We have to stop propagation for click events on the visual hidden input element.\n        // By default, when a user clicks on a label element, a generated click event will be\n        // dispatched on the associated input element. Since we are using a label element as our\n        // root container, the click event on the `checkbox` will be executed twice.\n        // The real click event will bubble up, and the generated click event also tries to bubble up.\n        // This will lead to multiple click events.\n        // Preventing bubbling for the second event will solve that issue.\n        event.stopPropagation();\n\n        // If resetIndeterminate is false, and the current state is indeterminate, do nothing on click\n        if (!this.disabled && this._clickAction !== 'noop') {\n            // When user manually click on the checkbox, `indeterminate` is set to false.\n            if (this.indeterminate && this._clickAction !== 'check') {\n\n                Promise.resolve().then(() => {\n                    this._indeterminate = false;\n                    this.indeterminateChange.emit(this._indeterminate);\n                });\n            }\n\n            this.toggle();\n            this._transitionCheckState(\n                this._checked ? TransitionCheckState.Checked : TransitionCheckState.Unchecked);\n\n            // Emit our custom change event if the native input emitted one.\n            // It is important to only emit it, if the native input triggered one, because\n            // we don't want to trigger a change event, when the `checked` variable changes for example.\n            this._emitChangeEvent();\n        } else if (!this.disabled && this._clickAction === 'noop') {\n            // Reset native input when clicked with noop. The native checkbox becomes checked after\n            // click, reset it to be align with `checked` value of `mc-checkbox`.\n            this._inputElement.nativeElement.checked = this.checked;\n            this._inputElement.nativeElement.indeterminate = this.indeterminate;\n        }\n    }\n\n    /** Focuses the checkbox. */\n    focus(): void {\n        this._focusMonitor.focusVia(this._inputElement.nativeElement, 'keyboard');\n    }\n\n    _onInteractionEvent(event: Event) {\n        // We always have to stop propagation on the change event.\n        // Otherwise the change event, from the input element, will bubble up and\n        // emit its event object to the `change` output.\n        event.stopPropagation();\n    }\n}\n","import {\n    Directive,\n    forwardRef,\n    Provider\n} from '@angular/core';\nimport {\n    CheckboxRequiredValidator,\n    NG_VALIDATORS\n} from '@angular/forms';\n\n\nexport const MC_CHECKBOX_REQUIRED_VALIDATOR: Provider = {\n    provide: NG_VALIDATORS,\n    useExisting: forwardRef(() => McCheckboxRequiredValidator),\n    multi: true\n};\n\n/**\n * Validator for Mosaic checkbox's required attribute in template-driven checkbox.\n * Current CheckboxRequiredValidator only work with `input type=checkbox` and does not\n * work with `mc-checkbox`.\n */\n@Directive({\n    selector: `mc-checkbox[required][formControlName],\n             mc-checkbox[required][formControl], mc-checkbox[required][ngModel]`,\n    providers: [MC_CHECKBOX_REQUIRED_VALIDATOR],\n    host: { '[attr.required]': 'required ? \"\" : null' }\n})\nexport class McCheckboxRequiredValidator extends CheckboxRequiredValidator {\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { McCheckbox } from './checkbox';\nimport { McCheckboxRequiredValidator } from './checkbox-required-validator';\n\n\n@NgModule({\n    imports: [CommonModule],\n    exports: [McCheckbox, McCheckboxRequiredValidator],\n    declarations: [McCheckbox, McCheckboxRequiredValidator]\n})\nexport class McCheckboxModule {\n}\n","import { ChangeDetectionStrategy, Component, Input, ViewEncapsulation } from '@angular/core';\nimport { coerceBooleanProperty } from '@ptsecurity/cdk/coercion';\n\n\n@Component({\n    selector: 'mc-divider',\n    host: {\n        class: 'mc-divider',\n        role: 'separator',\n        '[attr.aria-orientation]': 'vertical ? \"vertical\" : \"horizontal\"',\n        '[class.mc-divider-vertical]': 'vertical',\n        '[class.mc-divider-inset]': 'inset'\n    },\n    template: '',\n    styleUrls: ['divider.css'],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    preserveWhitespaces: false\n})\nexport class McDivider {\n    // Whether the divider is vertically aligned.\n    @Input()\n    get vertical(): boolean {\n        return this._vertical;\n    }\n\n    set vertical(value: boolean) {\n        this._vertical = coerceBooleanProperty(value);\n    }\n\n    private _vertical: boolean = false;\n\n    // Whether the divider is an inset divider.\n    @Input()\n    get inset(): boolean {\n        return this._inset;\n    }\n\n    set inset(value: boolean) {\n        this._inset = coerceBooleanProperty(value);\n    }\n\n    private _inset: boolean = false;\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { McDivider } from './divider.component';\n\n\n@NgModule({\n    imports: [CommonModule],\n    exports: [McDivider],\n    declarations: [McDivider]\n})\nexport class McDividerModule {\n}\n","import { Component } from '@angular/core';\n\n\n@Component({\n    selector: 'mc-cleaner',\n    template: '<i mc-icon=\"mc-close-M_16\" class=\"mc-cleaner__icon\"></i>'\n})\nexport class McCleaner {\n}\n","import { NgControl } from '@angular/forms';\nimport { Observable } from 'rxjs';\n\n\n/** An interface which allows a control to work inside of a `MсFormField`. */\nexport abstract class McFormFieldControl<T> {\n    /** The value of the control. */\n    value: T | null;\n\n    /**\n     * Stream that emits whenever the state of the control changes such that the parent `MсFormField`\n     * needs to run change detection.\n     */\n    readonly stateChanges: Observable<void>;\n\n    /** The element ID for this control. */\n    readonly id: string;\n\n    /** The placeholder for this control. */\n    readonly placeholder: string;\n\n    /** Gets the NgControl for this control. */\n    readonly ngControl: NgControl | null;\n\n    /** Whether the control is focused. */\n    readonly focused: boolean;\n\n    /** Whether the control is empty. */\n    readonly empty: boolean;\n\n    /** Whether the control is required. */\n    readonly required: boolean;\n\n    /** Whether the control is disabled. */\n    readonly disabled: boolean;\n\n    /** Whether the control is in an error state. */\n    readonly errorState: boolean;\n\n    /**\n     * An optional name for the control type that can be used to distinguish `mc-form-field` elements\n     * based on their control type. The form field will add a class,\n     * `mc-form-field-type-{{controlType}}` to its root element.\n     */\n    readonly controlType?: string;\n\n    /** Handles a click on the control's container. */\n    abstract onContainerClick(event: MouseEvent): void;\n}\n","import { Observable } from 'rxjs';\n\n\n/** An interface which allows a control to work inside of a `MсFormField`. */\nexport abstract class McFormFieldNumberControl<T> {\n    /** The value of the control. */\n    value: T | null;\n\n    /**\n     * Stream that emits whenever the state of the control changes such that the parent `MсFormField`\n     * needs to run change detection.\n     */\n    readonly stateChanges: Observable<void>;\n\n    /** the number step */\n    step: number;\n\n    /** the number big step */\n    bigStep: number;\n\n    /** Whether the control is focused. */\n    readonly focused: boolean;\n\n    /** Handles step up and down */\n    abstract stepUp(step: number): void;\n\n    abstract stepDown(step: number): void;\n}\n","import { Directive, Input } from '@angular/core';\n\n\nlet nextUniqueId = 0;\n\n@Directive({\n    selector: 'mc-hint',\n    host: {\n        class: 'mc-hint',\n        '[attr.id]': 'id'\n    }\n})\nexport class McHint {\n    @Input() id: string = `mc-hint-${nextUniqueId++}`;\n}\n","import { Directive } from '@angular/core';\n\n\n@Directive({\n    selector: '[mcPrefix]'\n})\nexport class McPrefix {\n}\n","import { Component, EventEmitter, Output } from '@angular/core';\n\n\n@Component({\n    selector: 'mc-stepper',\n    template: `\n        <i class=\"mc mc-stepper-step-up mc-icon mc-angle-L_16 mc-icon-flip-h\" (mousedown)=\"onStepUp($event)\"></i>\n        <i class=\"mc mc-stepper-step-down mc-icon mc-angle-L_16\" (mousedown)=\"onStepDown($event)\"></i>\n    `\n})\nexport class McStepper {\n    @Output()\n    readonly stepUp: EventEmitter<void> = new EventEmitter<void>();\n    @Output()\n    readonly stepDown: EventEmitter<void> = new EventEmitter<void>();\n\n    onStepUp($event: MouseEvent) {\n        this.stepUp.emit();\n        $event.preventDefault();\n    }\n\n    onStepDown($event: MouseEvent) {\n        this.stepDown.emit();\n        $event.preventDefault();\n    }\n}\n","import { Directive } from '@angular/core';\n\n\n@Directive({\n    selector: '[mcSuffix]'\n})\nexport class McSuffix {\n}\n","import {\n    AfterContentChecked,\n    AfterContentInit,\n    AfterViewInit,\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    ContentChild,\n    ContentChildren, Directive,\n    ElementRef,\n    QueryList,\n    ViewEncapsulation\n} from '@angular/core';\nimport { ESCAPE } from '@ptsecurity/cdk/keycodes';\nimport { CanColor, CanColorCtor, mixinColor, ThemePalette } from '@ptsecurity/mosaic/core';\nimport { EMPTY, merge } from 'rxjs';\nimport { startWith } from 'rxjs/operators';\n\n\nimport { McCleaner } from './cleaner';\nimport { McFormFieldControl } from './form-field-control';\nimport { getMcFormFieldMissingControlError } from './form-field-errors';\nimport { McFormFieldNumberControl } from './form-field-number-control';\nimport { McHint } from './hint';\nimport { McPrefix } from './prefix';\nimport { McStepper } from './stepper';\nimport { McSuffix } from './suffix';\n\n\nlet nextUniqueId = 0;\n\nexport class McFormFieldBase {\n    constructor(public _elementRef: ElementRef) {}\n}\n\nexport const _McFormFieldMixinBase: CanColorCtor & typeof McFormFieldBase\n    = mixinColor(McFormFieldBase, ThemePalette.Primary);\n\n@Component({\n    selector: 'mc-form-field',\n    exportAs: 'mcFormField',\n    templateUrl: 'form-field.html',\n    // McInput is a directive and can't have styles, so we need to include its styles here.\n    // The McInput styles are fairly minimal so it shouldn't be a big deal for people who\n    // aren't using McInput.\n    styleUrls: [\n        'form-field.css',\n        '../input/input.css'\n    ],\n    host: {\n        class: 'mc-form-field',\n        '[class.mc-form-field_invalid]': '_control.errorState',\n        '[class.mc-form-field_disabled]': '_control.disabled',\n        '[class.mc-form-field_has-prefix]': 'hasPrefix',\n        '[class.mc-form-field_has-suffix]': 'hasSuffix',\n        '[class.mc-form-field_has-cleaner]': 'canShowCleaner',\n        '[class.mc-form-field_has-stepper]': 'canShowStepper',\n        '[class.mc-focused]': '_control.focused',\n        '[class.ng-untouched]': '_shouldForward(\"untouched\")',\n        '[class.ng-touched]': '_shouldForward(\"touched\")',\n        '[class.ng-pristine]': '_shouldForward(\"pristine\")',\n        '[class.ng-dirty]': '_shouldForward(\"dirty\")',\n        '[class.ng-valid]': '_shouldForward(\"valid\")',\n        '[class.ng-invalid]': '_shouldForward(\"invalid\")',\n        '[class.ng-pending]': '_shouldForward(\"pending\")',\n        '(keydown)': 'onKeyDown($event)',\n        '(mouseenter)': 'onHoverChanged(true)',\n        '(mouseleave)': 'onHoverChanged(false)'\n    },\n    inputs: ['color'],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\n\nexport class McFormField extends _McFormFieldMixinBase implements\n    AfterContentInit, AfterContentChecked, AfterViewInit, CanColor {\n\n    @ContentChild(McFormFieldControl) _control: McFormFieldControl<any>;\n    @ContentChild(McFormFieldNumberControl) _numberControl: McFormFieldNumberControl<any>;\n    @ContentChildren(McHint) _hint: QueryList<McHint>;\n    @ContentChildren(McSuffix) _suffix: QueryList<McSuffix>;\n    @ContentChildren(McPrefix) _prefix: QueryList<McPrefix>;\n    @ContentChildren(McCleaner) _cleaner: QueryList<McCleaner>;\n    @ContentChild(McStepper) _stepper: McStepper;\n\n    // Unique id for the internal form field label.\n    _labelId = `mc-form-field-label-${nextUniqueId++}`;\n\n    hovered: boolean = false;\n\n    constructor(public _elementRef: ElementRef, private _changeDetectorRef: ChangeDetectorRef) {\n        super(_elementRef);\n    }\n\n    ngAfterContentInit() {\n        this._validateControlChild();\n        if (this._control.controlType) {\n            this._elementRef.nativeElement.classList\n                .add(`mc-form-field-type-${this._control.controlType}`);\n\n            if (this._numberControl && this.hasStepper) {\n                this._stepper.stepUp.subscribe(this.onStepUp.bind(this));\n                this._stepper.stepDown.subscribe(this.onStepDown.bind(this));\n            }\n        }\n\n        // Subscribe to changes in the child control state in order to update the form field UI.\n        this._control.stateChanges.pipe(startWith())\n            .subscribe(() => {\n                this._changeDetectorRef.markForCheck();\n            });\n\n        if (this._numberControl) {\n            this._numberControl.stateChanges.pipe(startWith())\n                .subscribe(() => {\n                    this._changeDetectorRef.markForCheck();\n                });\n        }\n\n        // Run change detection if the value changes.\n        const valueChanges = this._control.ngControl && this._control.ngControl.valueChanges || EMPTY;\n        merge(valueChanges)\n            .subscribe(() => this._changeDetectorRef.markForCheck());\n    }\n\n    ngAfterContentChecked() {\n        this._validateControlChild();\n    }\n\n    ngAfterViewInit() {\n        // Avoid animations on load.\n        this._changeDetectorRef.detectChanges();\n    }\n\n    clearValue($event) {\n        $event.stopPropagation();\n\n        if (this._control && this._control.ngControl) {\n            this._control.ngControl.reset();\n        }\n    }\n\n    onContainerClick($event) {\n        if (this._control.onContainerClick) {\n            this._control.onContainerClick($event);\n        }\n    }\n\n    onKeyDown(e: KeyboardEvent): void {\n        // tslint:disable-next-line:deprecation\n        if (e.keyCode === ESCAPE &&\n            this._control.focused &&\n            this.hasCleaner) {\n\n            if (this._control && this._control.ngControl) {\n                this._control.ngControl.reset();\n            }\n\n            e.preventDefault();\n        }\n    }\n\n    onHoverChanged(isHovered: boolean) {\n        if (isHovered !== this.hovered) {\n            this.hovered  = isHovered;\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n\n    onStepUp() {\n        if (this._numberControl) {\n            this._numberControl.stepUp(this._numberControl.step);\n        }\n    }\n\n    onStepDown() {\n        if (this._numberControl) {\n            this._numberControl.stepDown(this._numberControl.step);\n        }\n    }\n\n    /** Determines whether a class from the NgControl should be forwarded to the host element. */\n    _shouldForward(prop: string): boolean {\n        const ngControl = this._control ? this._control.ngControl : null;\n\n        return ngControl && ngControl[prop];\n    }\n\n    /** Throws an error if the form field's control is missing. */\n    protected _validateControlChild() {\n        if (!this._control) {\n            throw getMcFormFieldMissingControlError();\n        }\n    }\n\n    get hasHint(): boolean {\n        return this._hint && this._hint.length > 0;\n    }\n\n    get hasSuffix(): boolean {\n        return this._suffix && this._suffix.length > 0;\n    }\n\n    get hasPrefix(): boolean {\n        return this._prefix && this._prefix.length > 0;\n    }\n\n    get hasCleaner(): boolean {\n        return this._cleaner && this._cleaner.length > 0;\n    }\n\n    get hasStepper(): boolean {\n        return !!this._stepper;\n    }\n\n    get canShowCleaner(): boolean {\n        return this.hasCleaner &&\n            this._control &&\n            this._control.ngControl\n                ? this._control.ngControl.value && !this._control.disabled\n                : false;\n    }\n\n\n    get disabled(): boolean {\n        return this._control && this._control.disabled;\n    }\n\n    get canShowStepper(): boolean {\n        return this._numberControl &&\n            !this.disabled &&\n            (\n                this._numberControl.focused ||\n                this.hovered\n            );\n    }\n}\n\n@Directive({\n    selector: 'mc-form-field[mcFormFieldWithoutBorders]',\n    exportAs: 'mcFormFieldWithoutBorders',\n    host: { class: 'mc-form-field_without-borders' }\n})\nexport class McFormFieldWithoutBorders {\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { McIconModule } from '@ptsecurity/mosaic/icon';\n\nimport { McCleaner } from './cleaner';\nimport { McFormField, McFormFieldWithoutBorders } from './form-field';\nimport { McHint } from './hint';\nimport { McPrefix } from './prefix';\nimport { McStepper } from './stepper';\nimport { McSuffix } from './suffix';\n\n\n@NgModule({\n    declarations: [\n        McFormField,\n        McFormFieldWithoutBorders,\n        McHint,\n        McPrefix,\n        McSuffix,\n        McCleaner,\n        McStepper\n    ],\n    imports: [CommonModule, McIconModule],\n    exports: [\n        McFormField,\n        McFormFieldWithoutBorders,\n        McHint,\n        McPrefix,\n        McSuffix,\n        McCleaner,\n        McStepper\n    ]\n})\nexport class McFormFieldModule {\n}\n","import { InjectionToken } from '@angular/core';\n\n\nexport const MC_INPUT_VALUE_ACCESSOR =\n    new InjectionToken<{ value: any }>('MC_INPUT_VALUE_ACCESSOR');\n","function sanitizeNumber(value: number): number | null {\n    return !isFinite(value) || isNaN(value)\n        ? null\n        : value;\n}\n\nfunction getPrecision(value: number): number {\n    const arr = value.toString().split('.');\n\n    return arr.length === 1\n        ? 1\n        // tslint:disable-next-line:no-magic-numbers\n        :  Math.pow(10, arr[1].length);\n}\n\nfunction add(value1: number, value2: number) {\n    const precision = Math.max(getPrecision(value1), getPrecision(value2));\n\n    const res = (value1 * precision + value2 * precision) / precision;\n\n    return sanitizeNumber(res);\n}\n\nexport const stepUp = (value: number | null,\n                       max: number,\n                       min: number,\n                       step: number\n): number | null => {\n    let res;\n\n    if (value === null) {\n        res = add(min, step);\n\n        return res === null ? null : Math.min(res, max);\n    }\n\n    res = add(value, step);\n\n    return res === null ? null : Math.max(Math.min(res, max), min);\n};\n\nexport const stepDown = (value: number | null,\n                         max: number,\n                         min: number,\n                         step: number\n): number | null => {\n    let res;\n\n    if (value === null) {\n        res = add(max, -step);\n\n        return res === null ? null : Math.max(res, min);\n    }\n\n    res = add(value, -step);\n\n    return res === null ? null : Math.min(Math.max(res, min), max);\n};\n","import {\n    Attribute,\n    Directive, DoCheck, ElementRef, Inject, Input, OnChanges,\n    OnDestroy, Optional, Self\n} from '@angular/core';\nimport {\n    FormGroupDirective,\n    NgControl,\n    NgForm, NgModel\n} from '@angular/forms';\nimport { coerceBooleanProperty } from '@ptsecurity/cdk/coercion';\nimport {\n    END, C, V, X, A, DELETE, BACKSPACE, TAB, ENTER,\n    ESCAPE, ZERO, NINE, NUMPAD_ZERO, NUMPAD_NINE, NUMPAD_MINUS, DASH,\n    FF_MINUS, LEFT_ARROW, RIGHT_ARROW, HOME, UP_ARROW, DOWN_ARROW, F1, F12\n} from '@ptsecurity/cdk/keycodes';\nimport { getSupportedInputTypes, Platform } from '@ptsecurity/cdk/platform';\nimport {\n    CanUpdateErrorState,\n    CanUpdateErrorStateCtor,\n    ErrorStateMatcher,\n    mixinErrorState\n} from '@ptsecurity/mosaic/core';\nimport { McFormFieldControl, McFormFieldNumberControl } from '@ptsecurity/mosaic/form-field';\nimport { Subject } from 'rxjs';\n\nimport { getMcInputUnsupportedTypeError } from './input-errors';\nimport { MC_INPUT_VALUE_ACCESSOR } from './input-value-accessor';\nimport { stepDown, stepUp } from './stepperUtils';\n\n\nconst MC_INPUT_INVALID_TYPES = [\n    'button',\n    'checkbox',\n    'file',\n    'hidden',\n    'image',\n    'radio',\n    'range',\n    'reset',\n    'submit'\n];\n\nexport const BIG_STEP = 10;\nexport const SMALL_STEP = 1;\n\nlet nextUniqueId = 0;\n\nexport class McInputBase {\n    constructor(public _defaultErrorStateMatcher: ErrorStateMatcher,\n                public _parentForm: NgForm,\n                public _parentFormGroup: FormGroupDirective,\n                public ngControl: NgControl) {\n    }\n}\n\nexport const _McInputMixinBase: CanUpdateErrorStateCtor & typeof McInputBase =\n    mixinErrorState(McInputBase);\n\n\n@Directive({\n    selector: `input[mcInput][type=\"number\"]`,\n    exportAs: 'mcNumericalInput',\n    providers: [NgModel, { provide: McFormFieldNumberControl, useExisting: McNumberInput }],\n    host: {\n        '(blur)': '_focusChanged(false)',\n        '(focus)': '_focusChanged(true)',\n        '(paste)': 'onPaste($event)',\n        '(keydown)': 'onKeyDown($event)'\n    }\n})\nexport class McNumberInput implements McFormFieldNumberControl<any> {\n\n    /**\n     * Implemented as part of McFormFieldNumberControl.\n     * @docs-private\n     */\n    @Input()\n    bigStep: number;\n\n    /**\n     * Implemented as part of McFormFieldNumberControl.\n     * @docs-private\n     */\n    @Input()\n    step: number;\n\n    @Input()\n    min: number;\n\n    @Input()\n    max: number;\n\n    /**\n     * Implemented as part of McFormFieldNumberControl.\n     * @docs-private\n     */\n    value: any;\n\n    /**\n     * Implemented as part of McFormFieldNumberControl.\n     * @docs-private\n     */\n    focused: boolean = false;\n\n    /**\n     * Implemented as part of McFormFieldNumberControl.\n     * @docs-private\n     */\n    readonly stateChanges: Subject<void> = new Subject<void>();\n\n    private readonly _host: HTMLInputElement;\n\n    constructor(\n        private _platform: Platform ,\n        private _elementRef: ElementRef,\n        private _model: NgModel,\n        @Attribute('step') step: string,\n        @Attribute('big-step') bigStep: string,\n        @Attribute('min') min: string,\n        @Attribute('max') max: string\n    ) {\n        this.step = this.isDigit(step) ? parseFloat(step) : SMALL_STEP;\n        this.bigStep = this.isDigit(bigStep) ? parseFloat(bigStep) : BIG_STEP;\n        this.min = this.isDigit(min) ? parseFloat(min) : -Infinity;\n        this.max = this.isDigit(max) ? parseFloat(max) : Infinity;\n\n        this._host = this._elementRef.nativeElement;\n\n        const self = this;\n\n        if ('valueAsNumber' in this._host) {\n            Object.defineProperty(Object.getPrototypeOf(this._host), 'valueAsNumber', {\n                // tslint:disable-next-line:no-reserved-keywords\n                get() {\n                    const res = parseFloat(self.normalizeSplitter(this.value));\n\n                    return isNaN(res) ? null : res;\n                }\n            });\n        }\n    }\n\n    _focusChanged(isFocused: boolean) {\n        if (isFocused !== this.focused) {\n            this.focused = isFocused;\n            this.stateChanges.next();\n        }\n    }\n\n    onKeyDown(event: KeyboardEvent) {\n        // tslint:disable-next-line:deprecation\n        const keyCode = event.keyCode;\n\n        const isCtrlA = (e) => e.keyCode === A && (e.ctrlKey || e.metaKey);\n        const isCtrlC = (e) => e.keyCode === C && (e.ctrlKey || e.metaKey);\n        const isCtrlV = (e) => e.keyCode === V && (e.ctrlKey || e.metaKey);\n        const isCtrlX = (e) => e.keyCode === X && (e.ctrlKey || e.metaKey);\n\n        const isFKey = (e) => e.keyCode >= F1 && e.keyCode <= F12;\n\n        const isNumber = (e) => (e.keyCode >= ZERO && e.keyCode <= NINE) ||\n            (e.keyCode >= NUMPAD_ZERO && e.keyCode <= NUMPAD_NINE);\n\n        const minuses = [NUMPAD_MINUS, DASH, FF_MINUS];\n        const serviceKeys = [DELETE, BACKSPACE, TAB, ESCAPE, ENTER];\n        const arrows = [LEFT_ARROW, RIGHT_ARROW];\n        const allowedKeys =  [HOME, END].concat(arrows).concat(serviceKeys).concat(minuses);\n\n        const isIEPeriod = (e) => e.key === '.' || e.key === 'Decimal';\n        const isNotIEPeriod = (e) => e.key === '.' || e.key === ',';\n\n        // Decimal is for IE\n        const isPeriod = (e) => this._platform.EDGE || this._platform.TRIDENT\n            ? isIEPeriod(e)\n            : isNotIEPeriod(e);\n\n        if (allowedKeys.indexOf(keyCode) !== -1 ||\n            isCtrlA(event) ||\n            isCtrlC(event) ||\n            isCtrlV(event) ||\n            isCtrlX(event) ||\n            isFKey(event) ||\n            isPeriod(event)\n        ) {\n            // let it happen, don't do anything\n            return;\n        }\n        // Ensure that it is not a number and stop the keypress\n        if (event.shiftKey || !isNumber(event)) {\n            event.preventDefault();\n\n            // process steps\n            const step = event.shiftKey ? this.bigStep : this.step;\n\n            if (keyCode === UP_ARROW) {\n                this.stepUp(step);\n            }\n\n            if (keyCode === DOWN_ARROW) {\n                this.stepDown(step);\n            }\n        }\n    }\n\n    onPaste(event) {\n        let value = event.clipboardData.getData('text');\n        value = this.normalizeSplitter(value);\n\n        if (!this.isDigit(value)) {\n            event.preventDefault();\n        }\n    }\n\n    stepUp(step: number) {\n        this._elementRef.nativeElement.focus();\n        const res = stepUp(this._host.valueAsNumber, this.max, this.min, step);\n        this._host.value = res === null ? '' : res.toString();\n        this._model.update.emit(this._host.valueAsNumber);\n    }\n\n    stepDown(step: number) {\n        this._elementRef.nativeElement.focus();\n        const res = stepDown(this._host.valueAsNumber, this.max, this.min, step);\n        this._host.value = res === null ? '' : res.toString();\n        this._model.update.emit(this._host.valueAsNumber);\n    }\n\n    private normalizeSplitter(value: string): string {\n        return value ? value.replace(/,/g, '.') : value;\n    }\n\n    private isDigit(value: string): boolean {\n        return this.isFloat(value) || this.isInt(value);\n    }\n\n    private isFloat(value: string): boolean {\n        return /^-?\\d+\\.\\d+$/.test(value);\n    }\n\n    private isInt(value: string): boolean {\n        return /^-?\\d+$/.test(value);\n    }\n}\n\n@Directive({\n    selector: `input[mcInput]`,\n    exportAs: 'mcInput',\n    host: {\n        class: 'mc-input',\n        // Native input properties that are overwritten by Angular inputs need to be synced with\n        // the native input element. Otherwise property bindings for those don't work.\n        '[attr.id]': 'id',\n        '[attr.placeholder]': 'placeholder',\n        '[disabled]': 'disabled',\n        '[required]': 'required',\n        '(blur)': '_focusChanged(false)',\n        '(focus)': '_focusChanged(true)',\n        '(input)': '_onInput()'\n    },\n    providers: [{ provide: McFormFieldControl, useExisting: McInput }]\n})\nexport class McInput extends _McInputMixinBase implements McFormFieldControl<any>, OnChanges,\n    OnDestroy, DoCheck, CanUpdateErrorState {\n\n    /** An object used to control when error messages are shown. */\n    @Input() errorStateMatcher: ErrorStateMatcher;\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    focused: boolean = false;\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    readonly stateChanges: Subject<void> = new Subject<void>();\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    controlType: string = 'mc-input';\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    @Input()\n    get disabled(): boolean {\n        if (this.ngControl && this.ngControl.disabled !== null) {\n            return this.ngControl.disabled;\n        }\n\n        return this._disabled;\n    }\n\n    set disabled(value: boolean) {\n        this._disabled = coerceBooleanProperty(value);\n\n        // Browsers may not fire the blur event if the input is disabled too quickly.\n        // Reset from here to ensure that the element doesn't become stuck.\n        if (this.focused) {\n            this.focused = false;\n            this.stateChanges.next();\n        }\n    }\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    @Input()\n    get id(): string {\n        return this._id;\n    }\n\n    set id(value: string) {\n        this._id = value || this._uid;\n    }\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    @Input() placeholder: string;\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    @Input()\n    get required(): boolean {\n        return this._required;\n    }\n\n    set required(value: boolean) {\n        this._required = coerceBooleanProperty(value);\n    }\n\n    // tslint:disable no-reserved-keywords\n    /** Input type of the element. */\n    @Input()\n    get type(): string {\n        return this._type;\n    }\n\n    set type(value: string) {\n        this._type = value || 'text';\n        this._validateType();\n\n        // When using Angular inputs, developers are no longer able to set the properties on the native\n        // input element. To ensure that bindings for `type` work, we need to sync the setter\n        // with the native property. Textarea elements don't support the type property or attribute.\n        if (getSupportedInputTypes().has(this._type)) {\n            this._elementRef.nativeElement.type = this._type;\n        }\n    }\n    // tslint:enable no-reserved-keywords\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    @Input()\n    get value(): string {\n        return this._inputValueAccessor.value;\n    }\n\n    set value(value: string) {\n        if (value !== this.value) {\n            this._inputValueAccessor.value = value;\n            this.stateChanges.next();\n        }\n    }\n\n    protected _uid = `mc-input-${nextUniqueId++}`;\n    protected _previousNativeValue: any;\n    protected _disabled = false;\n    protected _id: string;\n    protected _required = false;\n    protected _type = 'text';\n    protected _neverEmptyInputTypes = [\n        'date',\n        'datetime',\n        'datetime-local',\n        'month',\n        'time',\n        'week'\n    ].filter((t) => getSupportedInputTypes().has(t));\n\n    private _inputValueAccessor: { value: any };\n\n    constructor(protected _elementRef: ElementRef,\n                @Optional() @Self() public ngControl: NgControl,\n                @Optional() _parentForm: NgForm,\n                @Optional() _parentFormGroup: FormGroupDirective,\n                _defaultErrorStateMatcher: ErrorStateMatcher,\n                @Optional() @Self() @Inject(MC_INPUT_VALUE_ACCESSOR) inputValueAccessor: any) {\n        super(_defaultErrorStateMatcher, _parentForm, _parentFormGroup, ngControl);\n        // If no input value accessor was explicitly specified, use the element as the input value\n        // accessor.\n        this._inputValueAccessor = inputValueAccessor || this._elementRef.nativeElement;\n\n        this._previousNativeValue = this.value;\n\n        // Force setter to be called in case id was not specified.\n        this.id = this.id;\n    }\n\n    ngOnChanges() {\n        this.stateChanges.next();\n    }\n\n    ngOnDestroy() {\n        this.stateChanges.complete();\n    }\n\n    ngDoCheck() {\n        if (this.ngControl) {\n            // We need to re-evaluate this on every change detection cycle, because there are some\n            // error triggers that we can't subscribe to (e.g. parent form submissions). This means\n            // that whatever logic is in here has to be super lean or we risk destroying the performance.\n            this.updateErrorState();\n        }\n\n        // We need to dirty-check the native element's value, because there are some cases where\n        // we won't be notified when it changes (e.g. the consumer isn't using forms or they're\n        // updating the value using `emitEvent: false`).\n        this._dirtyCheckNativeValue();\n    }\n\n    /** Focuses the input. */\n    focus(): void {\n        this._elementRef.nativeElement.focus();\n    }\n\n    /** Callback for the cases where the focused state of the input changes. */\n    _focusChanged(isFocused: boolean) {\n        if (isFocused !== this.focused) {\n            this.focused = isFocused;\n            this.stateChanges.next();\n        }\n    }\n\n    _onInput() {\n        // This is a noop function and is used to let Angular know whenever the value changes.\n        // Angular will run a new change detection each time the `input` event has been dispatched.\n        // It's necessary that Angular recognizes the value change, because when floatingLabel\n        // is set to false and Angular forms aren't used, the placeholder won't recognize the\n        // value changes and will not disappear.\n        // Listening to the input event wouldn't be necessary when the input is using the\n        // FormsModule or ReactiveFormsModule, because Angular forms also listens to input events.\n    }\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    get empty(): boolean {\n        return !this._isNeverEmpty() && !this._elementRef.nativeElement.value && !this._isBadInput();\n    }\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    onContainerClick() {\n        this.focus();\n    }\n\n    /** Does some manual dirty checking on the native input `value` property. */\n    protected _dirtyCheckNativeValue() {\n        const newValue = this.value;\n\n        if (this._previousNativeValue !== newValue) {\n            this._previousNativeValue = newValue;\n            this.stateChanges.next();\n        }\n    }\n\n    /** Make sure the input is a supported type. */\n    protected _validateType() {\n        if (MC_INPUT_INVALID_TYPES.indexOf(this._type) > -1) {\n            throw getMcInputUnsupportedTypeError(this._type);\n        }\n    }\n\n    /** Checks whether the input type is one of the types that are never empty. */\n    protected _isNeverEmpty() {\n        return this._neverEmptyInputTypes.indexOf(this._type) > -1;\n    }\n\n    /** Checks whether the input is invalid based on the native validation. */\n    protected _isBadInput() {\n        // The `validity` property won't be present on platform-server.\n        const validity = (this._elementRef.nativeElement as HTMLInputElement).validity;\n\n        return validity && validity.badInput;\n    }\n}\n\n@Directive({\n    selector: 'input[mcInputMonospace]',\n    exportAs: 'McInputMonospace',\n    host: { class: 'mc-input_monospace' }\n})\nexport class McInputMono {\n}\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","\nexport function isBoolean(val: any): val is boolean { return typeof val === 'boolean'; }\n\nexport function toBoolean(value: any): boolean {\n    return value != null && `${value}` !== 'false';\n}\n","import { NgModule, InjectionToken, Optional, Inject, isDevMode } from '@angular/core';\nimport { BidiModule } from '@ptsecurity/cdk/bidi';\n\n\n// Injection token that configures whether the Mosaic sanity checks are enabled.\nexport const MC_SANITY_CHECKS = new InjectionToken<boolean>('mc-sanity-checks', {\n    providedIn: 'root',\n    factory: MC_SANITY_CHECKS_FACTORY\n});\n\nexport function MC_SANITY_CHECKS_FACTORY(): boolean {\n    return true;\n}\n\n/**\n * Module that captures anything that should be loaded and/or run for *all* Mosaic\n * components. This includes Bidi, etc.\n *\n * This module should be imported to each top-level component module (e.g., MatTabsModule).\n */\n@NgModule({\n    imports: [ BidiModule ],\n    exports: [ BidiModule ]\n})\nexport class McCommonModule {\n    // Whether we've done the global sanity checks (e.g. a theme is loaded, there is a doctype).\n    private _hasDoneGlobalChecks = false;\n\n    // Reference to the global `document` object.\n    private _document = typeof document === 'object' && document ? document : null;\n\n    // Reference to the global 'window' object.\n    private _window = typeof window === 'object' && window ? window : null;\n\n    constructor(@Optional() @Inject(MC_SANITY_CHECKS) private _sanityChecksEnabled: boolean) {\n        if (this._areChecksEnabled() && !this._hasDoneGlobalChecks) {\n            this._checkDoctypeIsDefined();\n            this._checkThemeIsPresent();\n            this._hasDoneGlobalChecks = true;\n        }\n    }\n\n    // Whether any sanity checks are enabled\n    private _areChecksEnabled(): boolean {\n        return this._sanityChecksEnabled && isDevMode() && !this._isTestEnv();\n    }\n\n    // Whether the code is running in tests.\n    private _isTestEnv() {\n        // tslint:disable-next-line\n        return this._window && (this._window['__karma__'] || this._window['jasmine']);\n    }\n\n    private _checkDoctypeIsDefined(): void {\n        if (this._document && !this._document.doctype) {\n            console.warn(\n                'Current document does not have a doctype. This may cause ' +\n                'some Mosaic components not to behave as expected.'\n            );\n        }\n    }\n\n    private _checkThemeIsPresent(): void {\n        if (this._document && typeof getComputedStyle === 'function') {\n            const testElement = this._document.createElement('div');\n\n            testElement.classList.add('mc-theme-loaded-marker');\n            this._document.body.appendChild(testElement);\n\n            const computedStyle = getComputedStyle(testElement);\n\n            // In some situations, the computed style of the test element can be null. For example in\n            // Firefox, the computed style is null if an application is running inside of a hidden iframe.\n            // See: https://bugzilla.mozilla.org/show_bug.cgi?id=548397\n            if (computedStyle && computedStyle.display !== 'none') {\n                console.warn(\n                    'Could not find Mosaic core theme. Most Mosaic ' +\n                    'components may not work as expected. For more info refer ' +\n                    'to the theming guide: link there'\n                );\n            }\n\n            this._document.body.removeChild(testElement);\n        }\n    }\n}\n","import { coerceBooleanProperty } from '@ptsecurity/cdk/coercion';\n\nimport { Constructor } from './constructor';\n\n\nexport interface CanDisable {\n    disabled: boolean;\n}\n\n/** @docs-private */\nexport type CanDisableCtor = Constructor<CanDisable>;\n\n// Mixin to augment a directive with a `disabled` property.\nexport function mixinDisabled<T extends Constructor<{}>>(base: T): CanDisableCtor & T {\n    return class extends base {\n        private _disabled: boolean = false;\n\n        get disabled() {\n            return this._disabled;\n        }\n\n        set disabled(value: any) {\n            this._disabled = coerceBooleanProperty(value);\n        }\n\n        constructor(...args: any[]) {\n            // tslint:disable-next-line\n            super(...args);\n        }\n    };\n}\n","import { ElementRef } from '@angular/core';\n\nimport { Constructor } from './constructor';\n\n\nexport interface CanColor {\n    color: ThemePalette;\n}\n\n/** @docs-private */\nexport type CanColorCtor = Constructor<CanColor>;\n\nexport interface HasElementRef {\n    _elementRef: ElementRef;\n}\n\nexport enum ThemePalette {\n    Primary = 'primary',\n    Second = 'second',\n    Error = 'error',\n    Default = 'second'\n}\n\n/** Mixin to augment a directive with a `color` property. */\nexport function mixinColor<T extends Constructor<HasElementRef>>(\n    base: T,\n    defaultColor: ThemePalette = ThemePalette.Default\n): CanColorCtor & T {\n    return class extends base {\n\n        private _color: ThemePalette;\n\n        get color(): ThemePalette {\n            return this._color;\n        }\n\n        set color(value: ThemePalette) {\n            const colorPalette = value || defaultColor;\n\n            if (colorPalette !== this._color) {\n                if (this._color) {\n                    this._elementRef.nativeElement.classList.remove(`mc-${this._color}`);\n                }\n\n                if (colorPalette) {\n                    this._elementRef.nativeElement.classList.add(`mc-${colorPalette}`);\n                }\n\n                this._color = colorPalette;\n            }\n        }\n\n        constructor(...args: any[]) {\n            super(...args);\n\n            this.color = defaultColor;\n        }\n    };\n}\n\n","import { Constructor } from './constructor';\nimport { CanDisable } from './disabled';\n\n\nexport interface HasTabIndex {\n    tabIndex: number;\n}\n\nexport type HasTabIndexCtor = Constructor<HasTabIndex>;\n\n// Mixin to augment a directive with a `tabIndex` property.\nexport function mixinTabIndex<T extends Constructor<CanDisable>>(base: T, defaultTabIndex = 0)\n    : HasTabIndexCtor & T {\n    return class extends base {\n        private _tabIndex: number = defaultTabIndex;\n\n        get tabIndex(): number {\n            return this.disabled ? -1 : this._tabIndex;\n        }\n\n        set tabIndex(value: number) {\n            this._tabIndex = value != null ? value : defaultTabIndex;\n        }\n\n        constructor(...args: any[]) {\n            super(...args);\n        }\n    };\n}\n","import { FormControl, FormGroupDirective, NgControl, NgForm } from '@angular/forms';\nimport { Subject } from 'rxjs';\n\nimport { ErrorStateMatcher } from '../error/error-options';\n\nimport { Constructor } from './constructor';\n\n\n/** @docs-private */\nexport interface CanUpdateErrorState {\n\n    readonly stateChanges: Subject<void>;\n\n    errorState: boolean;\n    errorStateMatcher: ErrorStateMatcher;\n\n    updateErrorState();\n}\n\n/** @docs-private */\nexport type CanUpdateErrorStateCtor = Constructor<CanUpdateErrorState>;\n\n/** @docs-private */\nexport interface HasErrorState {\n    _parentFormGroup: FormGroupDirective;\n    _parentForm: NgForm;\n    _defaultErrorStateMatcher: ErrorStateMatcher;\n    ngControl: NgControl;\n}\n\n/**\n * Mixin to augment a directive with updateErrorState method.\n * For component with `errorState` and need to update `errorState`.\n */\nexport function mixinErrorState<T extends Constructor<HasErrorState>>(base: T)\n    : CanUpdateErrorStateCtor & T {\n    return class extends base {\n        /** Whether the component is in an error state. */\n        errorState: boolean = false;\n\n        /**\n         * Stream that emits whenever the state of the input changes such that the wrapping\n         * `MatFormField` needs to run change detection.\n         */\n        readonly stateChanges = new Subject<void>();\n\n        errorStateMatcher: ErrorStateMatcher;\n\n        constructor(...args: any[]) {\n            super(...args);\n        }\n\n        updateErrorState() {\n            const oldState = this.errorState;\n            const parent = this._parentFormGroup || this._parentForm;\n            const matcher = this.errorStateMatcher || this._defaultErrorStateMatcher;\n            const control = this.ngControl ? this.ngControl.control as FormControl : null;\n            const newState = matcher.isErrorState(control, parent);\n\n            if (newState !== oldState) {\n                this.errorState = newState;\n                this.stateChanges.next();\n            }\n        }\n    };\n}\n","import {\n    AfterViewChecked,\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    ElementRef,\n    EventEmitter,\n    Inject,\n    InjectionToken,\n    Input,\n    OnDestroy,\n    Optional,\n    Output,\n    QueryList,\n    ViewEncapsulation\n} from '@angular/core';\nimport { coerceBooleanProperty } from '@ptsecurity/cdk/coercion';\nimport { ENTER, SPACE } from '@ptsecurity/cdk/keycodes';\nimport { Subject } from 'rxjs';\n\nimport { McOptgroup } from './optgroup';\n\n\n/**\n * Option IDs need to be unique across components, so this counter exists outside of\n * the component definition.\n */\nlet _uniqueIdCounter = 0;\n\n/** Event object emitted by McOption when selected or deselected. */\nexport class McOptionSelectionChange {\n    constructor(\n        /** Reference to the option that emitted the event. */\n        public source: McOption,\n        /** Whether the change in the option's value was a result of a user action. */\n        public isUserInput = false) {\n    }\n}\n\n/**\n * Describes a parent component that manages a list of options.\n * Contains properties that the options can inherit.\n * @docs-private\n */\nexport interface IMcOptionParentComponent {\n    disableRipple?: boolean;\n    multiple?: boolean;\n}\n\n/**\n * Injection token used to provide the parent component to options.\n */\nexport const MC_OPTION_PARENT_COMPONENT =\n    new InjectionToken<IMcOptionParentComponent>('MC_OPTION_PARENT_COMPONENT');\n\n/**\n * Single option inside of a `<mat-select>` element.\n */\n@Component({\n    selector: 'mc-option',\n    exportAs: 'mcOption',\n    host: {\n        '[attr.tabindex]': '_getTabIndex()',\n        '[class.mc-selected]': 'selected',\n        '[class.mc-option-multiple]': 'multiple',\n        '[class.mc-active]': 'active',\n        '[id]': 'id',\n        '[class.mc-disabled]': 'disabled',\n        '(click)': '_selectViaInteraction()',\n        '(keydown)': '_handleKeydown($event)',\n        class: 'mc-option'\n    },\n    styleUrls: ['option.css'],\n    templateUrl: 'option.html',\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class McOption implements AfterViewChecked, OnDestroy {\n    /** Whether the wrapping component is in multiple selection mode. */\n    get multiple() {\n        return this._parent && this._parent.multiple;\n    }\n\n    /** The unique ID of the option. */\n    get id(): string {\n        return this._id;\n    }\n\n    /** Whether or not the option is currently selected. */\n    get selected(): boolean {\n        return this._selected;\n    }\n\n    /** The form value of the option. */\n    @Input() value: any;\n\n    /** Whether the option is disabled. */\n    @Input()\n    get disabled() {\n        return (this.group && this.group.disabled) || this._disabled;\n    }\n\n    set disabled(value: any) {\n        this._disabled = coerceBooleanProperty(value);\n    }\n\n    /** Whether ripples for the option are disabled. */\n    get disableRipple() {\n        return this._parent && this._parent.disableRipple;\n    }\n\n    /** Event emitted when the option is selected or deselected. */\n        // tslint:disable-next-line:no-output-on-prefix\n    @Output() readonly onSelectionChange = new EventEmitter<McOptionSelectionChange>();\n\n    /** Emits when the state of the option changes and any parents have to be notified. */\n    readonly _stateChanges = new Subject<void>();\n\n    private _selected = false;\n    private _active = false;\n    private _disabled = false;\n    private readonly _id = `mc-option-${_uniqueIdCounter++}`;\n    private _mostRecentViewValue = '';\n\n    constructor(\n        private readonly _element: ElementRef,\n        private readonly _changeDetectorRef: ChangeDetectorRef,\n        @Optional() @Inject(MC_OPTION_PARENT_COMPONENT) private readonly _parent: IMcOptionParentComponent,\n        @Optional() readonly group: McOptgroup) {\n    }\n\n    /**\n     * Whether or not the option is currently active and ready to be selected.\n     * An active option displays styles as if it is focused, but the\n     * focus is actually retained somewhere else. This comes in handy\n     * for components like autocomplete where focus must remain on the input.\n     */\n    get active(): boolean {\n        return this._active;\n    }\n\n    /**\n     * The displayed value of the option. It is necessary to show the selected option in the\n     * select's trigger.\n     */\n    get viewValue(): string {\n        // TODO(kara): Add input property alternative for node envs.\n        return (this._getHostElement().textContent || '').trim();\n    }\n\n    /** Selects the option. */\n    select(): void {\n        if (!this._selected) {\n            this._selected = true;\n            this._changeDetectorRef.markForCheck();\n            this._emitSelectionChangeEvent();\n        }\n    }\n\n    /** Deselects the option. */\n    deselect(): void {\n        if (this._selected) {\n            this._selected = false;\n            this._changeDetectorRef.markForCheck();\n            this._emitSelectionChangeEvent();\n        }\n    }\n\n    /** Sets focus onto this option. */\n    focus(): void {\n        const element = this._getHostElement();\n\n        if (typeof element.focus === 'function') {\n            element.focus();\n        }\n    }\n\n    /**\n     * This method sets display styles on the option to make it appear\n     * active. This is used by the ActiveDescendantKeyManager so key\n     * events will display the proper options as active on arrow key events.\n     */\n    setActiveStyles(): void {\n        if (!this._active) {\n            this._active = true;\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n\n    /**\n     * This method removes display styles on the option that made it appear\n     * active. This is used by the ActiveDescendantKeyManager so key\n     * events will display the proper options as active on arrow key events.\n     */\n    setInactiveStyles(): void {\n        if (this._active) {\n            this._active = false;\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n\n    /** Gets the label to be used when determining whether the option should be focused. */\n    getLabel(): string {\n        return this.viewValue;\n    }\n\n    /** Ensures the option is selected when activated from the keyboard. */\n    _handleKeydown(event: KeyboardEvent): void {\n        // tslint:disable-next-line\n        if (event.keyCode === ENTER || event.keyCode === SPACE) {\n            this._selectViaInteraction();\n\n            // Prevent the page from scrolling down and form submits.\n            event.preventDefault();\n        }\n    }\n\n    /**\n     * `Selects the option while indicating the selection came from the user. Used to\n     * determine if the select's view -> model callback should be invoked.`\n     */\n    _selectViaInteraction(): void {\n        if (!this.disabled) {\n            this._selected = this.multiple ? !this._selected : true;\n            this._changeDetectorRef.markForCheck();\n            this._emitSelectionChangeEvent(true);\n        }\n    }\n\n    /** Returns the correct tabindex for the option depending on disabled state. */\n    _getTabIndex(): string {\n        return this.disabled ? '-1' : '0';\n    }\n\n    /** Gets the host DOM element. */\n    _getHostElement(): HTMLElement {\n        return this._element.nativeElement;\n    }\n\n    ngAfterViewChecked() {\n        // Since parent components could be using the option's label to display the selected values\n        // (e.g. `mat-select`) and they don't have a way of knowing if the option's label has changed\n        // we have to check for changes in the DOM ourselves and dispatch an event. These checks are\n        // relatively cheap, however we still limit them only to selected options in order to avoid\n        // hitting the DOM too often.\n        if (this._selected) {\n            const viewValue = this.viewValue;\n\n            if (viewValue !== this._mostRecentViewValue) {\n                this._mostRecentViewValue = viewValue;\n                this._stateChanges.next();\n            }\n        }\n    }\n\n    ngOnDestroy() {\n        this._stateChanges.complete();\n    }\n\n    /** Emits the selection change event. */\n    private _emitSelectionChangeEvent(isUserInput = false): void {\n        this.onSelectionChange.emit(new McOptionSelectionChange(this, isUserInput));\n    }\n}\n\n/**\n * Counts the amount of option group labels that precede the specified option.\n * @param optionIndex Index of the option at which to start counting.\n * @param options Flat list of all of the options.\n * @param optionGroups Flat list of all of the option groups.\n * @docs-private\n */\nexport function _countGroupLabelsBeforeOption(\n    optionIndex: number, options: QueryList<McOption>,\n    optionGroups: QueryList<McOptgroup>\n): number {\n\n    if (optionGroups.length) {\n        const optionsArray = options.toArray();\n        const groups = optionGroups.toArray();\n\n        let groupCounter = 0;\n\n        for (let i = 0; i < optionIndex + 1; i++) {\n            if (optionsArray[i].group && optionsArray[i].group === groups[groupCounter]) {\n                groupCounter++;\n            }\n        }\n\n        return groupCounter;\n    }\n\n    return 0;\n}\n\n/**\n * Determines the position to which to scroll a panel in order for an option to be into view.\n * @param optionIndex Index of the option to be scrolled into the view.\n * @param optionHeight Height of the options.\n * @param currentScrollPosition Current scroll position of the panel.\n * @param panelHeight Height of the panel.\n * @docs-private\n */\nexport function _getOptionScrollPosition(\n    optionIndex: number,\n    optionHeight: number,\n    currentScrollPosition: number,\n    panelHeight: number\n): number {\n    const optionOffset = optionIndex * optionHeight;\n\n    if (optionOffset < currentScrollPosition) { return optionOffset; }\n\n    if (optionOffset + optionHeight > currentScrollPosition + panelHeight) {\n        return Math.max(0, optionOffset - panelHeight + optionHeight);\n    }\n\n    return currentScrollPosition;\n}\n\n","import { ConnectionPositionPair } from '@ptsecurity/cdk/overlay';\n\n\nexport const POSITION_MAP: { [key: string]: ConnectionPositionPair } = {\n    top         : {\n        originX : 'center',\n        originY : 'top',\n        overlayX: 'center',\n        overlayY: 'bottom'\n    },\n    topCenter   : {\n        originX : 'center',\n        originY : 'top',\n        overlayX: 'center',\n        overlayY: 'bottom',\n        offsetX : undefined,\n        offsetY : undefined\n    },\n    topLeft     : {\n        originX : 'start',\n        originY : 'top',\n        overlayX: 'start',\n        overlayY: 'bottom',\n        offsetX : undefined,\n        offsetY : undefined\n    },\n    topRight    : {\n        originX : 'end',\n        originY : 'top',\n        overlayX: 'end',\n        overlayY: 'bottom',\n        offsetX : undefined,\n        offsetY : undefined\n    },\n    right       : {\n        originX : 'end',\n        originY : 'center',\n        overlayX: 'start',\n        overlayY: 'center'\n    },\n    rightTop    : {\n        originX : 'end',\n        originY : 'top',\n        overlayX: 'start',\n        overlayY: 'top',\n        offsetX : undefined,\n        offsetY : undefined\n    },\n    rightBottom : {\n        originX : 'end',\n        originY : 'bottom',\n        overlayX: 'start',\n        overlayY: 'bottom',\n        offsetX : undefined,\n        offsetY : undefined\n    },\n    bottom      : {\n        originX : 'center',\n        originY : 'bottom',\n        overlayX: 'center',\n        overlayY: 'top'\n    },\n    bottomCenter: {\n        originX : 'center',\n        originY : 'bottom',\n        overlayX: 'center',\n        overlayY: 'top'\n    },\n    bottomLeft  : {\n        originX : 'start',\n        originY : 'bottom',\n        overlayX: 'start',\n        overlayY: 'top'\n    },\n    bottomRight : {\n        originX : 'end',\n        originY : 'bottom',\n        overlayX: 'end',\n        overlayY: 'top'\n    },\n    left        : {\n        originX : 'start',\n        originY : 'center',\n        overlayX: 'end',\n        overlayY: 'center'\n    },\n    leftTop     : {\n        originX : 'start',\n        originY : 'top',\n        overlayX: 'end',\n        overlayY: 'top'\n    },\n    leftBottom  : {\n        originX : 'start',\n        originY : 'bottom',\n        overlayX: 'end',\n        overlayY: 'bottom'\n    }\n};\n\nexport const DEFAULT_4_POSITIONS = _objectValues([\n    POSITION_MAP.top, POSITION_MAP.right, POSITION_MAP.bottom, POSITION_MAP.left\n]);\n\nfunction arrayMap<T, S>(array: T[], iteratee: (item: T, index: number, arr: T[]) => S): S[] {\n    let index = -1;\n    const length = array == null ? 0 : array.length;\n    const result = Array(length);\n\n    while (++index < length) {\n        result[ index ] = iteratee(array[ index ], index, array);\n    }\n\n    return result;\n}\nfunction baseValues<T>(object: { [key: string]: T } | T[], props: string[]): T[] {\n    return arrayMap(props,  (key) => {\n        return object[ key ];\n    });\n}\nfunction _objectValues<T>(object: { [key: string]: T } | T[]): T[] {\n    return object == null ? [] : baseValues(object, Object.keys(object));\n}\n","export function getMcFormFieldMissingControlError(): Error {\n  return Error('mc-form-field must contain a McFormFieldControl.');\n}\n","export function getMcInputUnsupportedTypeError(inputType: string): Error {\n    return Error(`Input type \"${inputType}\" isn't supported by mcInput.`);\n}\n","/**\n * Returns an exception to be thrown when attempting to change a select's `multiple` option\n * after initialization.\n * @docs-private\n */\nexport function getMcSelectDynamicMultipleError(): Error {\n    return Error('Cannot change `multiple` mode of select after initialization.');\n}\n\n/**\n * Returns an exception to be thrown when attempting to assign a non-array value to a select\n * in `multiple` mode. Note that `undefined` and `null` are still valid values to allow for\n * resetting the value.\n * @docs-private\n */\nexport function getMcSelectNonArrayValueError(): Error {\n    return Error('Value must be an array in multiple-selection mode.');\n}\n\n/**\n * Returns an exception to be thrown when assigning a non-function value to the comparator\n * used to determine if a value corresponds to an option. Note that whether the function\n * actually takes two values and returns a boolean is not checked.\n */\nexport function getMcSelectNonFunctionValueError(): Error {\n    return Error('`compareWith` must be a function.');\n}\n","import { NgModule, Directive, ElementRef, QueryList } from '@angular/core';\n\n\n/**\n * Shared directive to count lines inside a text area, such as a list item.\n * Line elements can be extracted with a @ContentChildren(McLine) query, then\n * counted by checking the query list's length.\n */\n@Directive({\n    selector: '[mc-line], [mcLine]',\n    host: { class: 'mc-line' }\n})\nexport class McLine {}\n\n/**\n * Helper that takes a query list of lines and sets the correct class on the host.\n * @docs-private\n */\nexport class McLineSetter {\n    constructor(private _lines: QueryList<McLine>, private _element: ElementRef) {\n        this._setLineClass(this._lines.length);\n\n        this._lines.changes.subscribe(() => {\n            this._setLineClass(this._lines.length);\n        });\n    }\n\n    private _setLineClass(count: number): void {\n        this._resetClasses();\n        if (count === 2 || count === 3) {\n            this._setClass(`mc-${count}-line`, true);\n        } else if (count > 3) {\n            this._setClass(`mc-multi-line`, true);\n        }\n    }\n\n    private _resetClasses(): void {\n        this._setClass('mc-2-line', false);\n        this._setClass('mc-3-line', false);\n        this._setClass('mc-multi-line', false);\n    }\n\n    private _setClass(className: string, isAdd: boolean): void {\n        if (isAdd) {\n            this._element.nativeElement.classList.add(className);\n        } else {\n            this._element.nativeElement.classList.remove(className);\n        }\n    }\n}\n\n@NgModule({\n    imports: [],\n    exports: [McLine],\n    declarations: [McLine]\n})\nexport class McLineModule {}\n","import { Injectable } from '@angular/core';\nimport { FormGroupDirective, NgForm, FormControl } from '@angular/forms';\n\n\n/** Error state matcher that matches when a control is invalid and dirty. */\n@Injectable()\nexport class ShowOnDirtyErrorStateMatcher implements ErrorStateMatcher {\n    isErrorState(control: FormControl | null, form: FormGroupDirective | NgForm | null): boolean {\n        return !!(control && control.invalid && (control.dirty || (form && form.submitted)));\n    }\n}\n\n/** Provider that defines how form controls behave with regards to displaying error messages. */\n@Injectable({ providedIn: 'root' })\nexport class ErrorStateMatcher {\n    isErrorState(control: FormControl | null, form: FormGroupDirective | NgForm | null): boolean {\n        return !!(control && control.invalid && (control.touched || (form && form.submitted)));\n    }\n}\n","import { Component, ViewEncapsulation, Input, ChangeDetectionStrategy } from '@angular/core';\n\n\nexport type McPseudoCheckboxState = 'unchecked' | 'checked' | 'indeterminate';\n\n/**\n * Component that shows a simplified checkbox without including any kind of \"real\" checkbox.\n * Meant to be used when the checkbox is purely decorative and a large number of them will be\n * included, such as for the options in a multi-select. Uses no SVGs or complex animations.\n * Note that theming is meant to be handled by the parent element, e.g.\n * `mc-primary .mc-pseudo-checkbox`.\n *\n * Note that this component will be completely invisible to screen-reader users. This is *not*\n * interchangeable with `<mc-checkbox>` and should *not* be used if the user would directly\n * interact with the checkbox. The pseudo-checkbox should only be used as an implementation detail\n * of more complex components that appropriately handle selected / checked state.\n * @docs-private\n */\n@Component({\n    encapsulation: ViewEncapsulation.None,\n    preserveWhitespaces: false,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    selector: 'mc-pseudo-checkbox',\n    styleUrls: ['pseudo-checkbox.css'],\n    templateUrl: 'pseudo-checkbox.partial.html',\n    host: {\n        class: 'mc-pseudo-checkbox',\n        '[class.mc-pseudo-checkbox_indeterminate]': 'state === \"indeterminate\"',\n        '[class.mc-pseudo-checkbox_checked]': 'state === \"checked\"',\n        '[class.mc-disabled]': 'disabled'\n    }\n})\nexport class McPseudoCheckbox {\n    @Input() state: McPseudoCheckboxState = 'unchecked';\n\n    @Input() disabled: boolean = false;\n}\n","import { NgModule } from '@angular/core';\n\nimport { McPseudoCheckbox } from './pseudo-checkbox/pseudo-checkbox';\n\n\n@NgModule({\n    exports: [McPseudoCheckbox],\n    declarations: [McPseudoCheckbox]\n})\nexport class McPseudoCheckboxModule {}\n\n\nexport * from './pseudo-checkbox/pseudo-checkbox';\n","import { DOCUMENT } from '@angular/common';\nimport { Inject, Injectable } from '@angular/core';\n\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class McMeasureScrollbarService {\n\n    get scrollBarWidth(): number {\n        if (this._scrollbarWidth) {\n            return this._scrollbarWidth;\n        }\n        this.initScrollBarWidth();\n\n        return this._scrollbarWidth;\n    }\n\n    private _scrollbarWidth: number;\n    private scrollbarMeasure = {\n        position: 'absolute',\n        top: '-9999px',\n        width: '50px',\n        height: '50px',\n        overflow: 'scroll'\n    };\n\n    constructor(\n        @Inject(DOCUMENT) private document: any\n    ) {\n        this.initScrollBarWidth();\n    }\n\n    initScrollBarWidth() {\n        const scrollDiv = this.document.createElement('div');\n\n        // tslint:disable-next-line\n        for (const scrollProp in this.scrollbarMeasure) {\n            if (this.scrollbarMeasure.hasOwnProperty(scrollProp)) {\n                scrollDiv.style[scrollProp] = this.scrollbarMeasure[scrollProp];\n            }\n        }\n\n        this.document.body.appendChild(scrollDiv);\n\n        const width = scrollDiv.offsetWidth - scrollDiv.clientWidth;\n\n        this.document.body.removeChild(scrollDiv);\n        this._scrollbarWidth = width;\n    }\n}\n","import { Component, ViewEncapsulation, Input, ChangeDetectionStrategy } from '@angular/core';\n\nimport { mixinDisabled, CanDisable, CanDisableCtor } from '../common-behaviors/index';\n\n\n// Boilerplate for applying mixins to McOptgroup.\n/** @docs-private */\nexport class McOptgroupBase {}\n\nexport const _McOptgroupMixinBase: CanDisableCtor & typeof McOptgroupBase = mixinDisabled(McOptgroupBase);\n\n// Counter for unique group ids.\nlet _uniqueOptgroupIdCounter = 0;\n\n/**\n * Component that is used to group instances of `mc-option`.\n */\n@Component({\n    selector: 'mc-optgroup',\n    exportAs: 'mcOptgroup',\n    templateUrl: 'optgroup.html',\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    inputs: ['disabled'],\n    styleUrls: ['optgroup.css'],\n    host: {\n        class: 'mc-optgroup',\n        role: 'group',\n        '[class.mc-optgroup-disabled]': 'disabled',\n        '[attr.aria-disabled]': 'disabled.toString()',\n        '[attr.aria-labelledby]': '_labelId'\n    }\n})\nexport class McOptgroup extends _McOptgroupMixinBase implements CanDisable {\n    /** Label for the option group. */\n    @Input() label: string;\n\n    /** Unique id for the underlying label. */\n    _labelId: string = `mc-optgroup-label-${_uniqueOptgroupIdCounter++}`;\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { McPseudoCheckboxModule } from '../selection/index';\n\nimport { McOptgroup } from './optgroup';\nimport { McOption } from './option';\n\n\n@NgModule({\n    imports: [CommonModule, McPseudoCheckboxModule],\n    exports: [McOption, McOptgroup],\n    declarations: [McOption, McOptgroup]\n})\nexport class McOptionModule {}\n\n\nexport * from './option';\nexport * from './optgroup';\n","import { InjectionToken } from '@angular/core';\n\n\n/** InjectionToken that can be used to specify the global label options. */\nexport const MC_LABEL_GLOBAL_OPTIONS =\n    new InjectionToken<LabelOptions>('mc-label-global-options');\n\n/** Type for the available floatLabel values. */\nexport type FloatLabelType = 'always' | 'never' | 'auto';\n\n/** Configurable options for floating labels. */\nexport interface LabelOptions {\n    /**\n     * Whether the label should float `always`, `never`, or `auto` (only when necessary).\n     * Default behavior is assumed to be `auto`.\n     */\n    float?: FloatLabelType;\n}\n","import {\n    animate,\n    state,\n    style,\n    transition,\n    trigger,\n    AnimationTriggerMetadata,\n} from '@angular/animations';\n\n\nexport const fadeAnimation: AnimationTriggerMetadata =  trigger('fadeAnimation', [\n    state('void', style({ opacity: 0 })),\n    state('true', style({ opacity: 1 })),\n    state('false', style({ opacity: 0 })),\n    transition('* => true', animate('150ms cubic-bezier(0.0, 0.0, 0.2, 1)')),\n    transition('* => void', animate('150ms cubic-bezier(0.4, 0.0, 1, 1)')),\n]);\n","import {\n    Attribute,\n    ChangeDetectionStrategy,\n    Component,\n    Directive,\n    ElementRef,\n    ViewEncapsulation\n} from '@angular/core';\n\nimport { mixinColor, CanColor, CanColorCtor } from '@ptsecurity/mosaic/core';\n\n\n@Directive({\n    selector: '[mc-icon]',\n    host: { class: 'mc mc-icon' }\n})\nexport class McIconCSSStyler {}\n\n\nexport class McIconBase {\n    constructor(public _elementRef: ElementRef) {}\n}\n\nexport const _McIconMixinBase: CanColorCtor & typeof McIconBase\n    = mixinColor(McIconBase);\n\n\n@Component({\n    selector: `[mc-icon]`,\n    template: '<ng-content></ng-content>',\n    styleUrls: ['./icon.css'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n    inputs: ['color']\n})\nexport class McIcon extends _McIconMixinBase implements CanColor {\n    constructor(elementRef: ElementRef, @Attribute('mc-icon') iconName: string) {\n        super(elementRef);\n\n        elementRef.nativeElement.classList.add(iconName);\n    }\n\n    _getHostElement() {\n        return this._elementRef.nativeElement;\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { A11yModule } from '@ptsecurity/cdk/a11y';\nimport { PlatformModule } from '@ptsecurity/cdk/platform';\n\nimport {\n    McIcon,\n    McIconCSSStyler\n} from './icon.component';\n\n\n@NgModule({\n    imports: [\n        CommonModule,\n        A11yModule,\n        PlatformModule\n    ],\n    exports: [\n        McIcon,\n        McIconCSSStyler\n    ],\n    declarations: [\n        McIcon,\n        McIconCSSStyler\n    ]\n})\nexport class McIconModule {}\n"],"names":["template","encapsulation","ViewEncapsulation","None","changeDetection","ChangeDetectionStrategy","OnPush","tslib_1.__metadata","ElementRef","NgZone","Renderer2","McSplitterComponent","McGutterDirective","renderer","elementRef","this","_direction","_disabled","_order","_size","Object","defineProperty","prototype","get","set","direction","disabled","coerceBooleanProperty","order","coerceNumberProperty","size","ngOnInit","setStyle","getCursor","getState","coerceCssPixelValue","isVertical","setAttr","state","Error","property","value","nativeElement","attribute","setAttribute","tslib_1.__decorate","Input","Directive","selector","McSplitterAreaDirective","splitter","disableFlex","removeStyle","addArea","ngOnDestroy","removeArea","setOrder","setSize","sz","getSizeProperty","getSize","getOffsetSizeProperty","getMinSize","styles","getComputedStyle","parseFloat","getMinSizeProperty","style","McSplitterModule","NgModule","imports","CommonModule","McIconModule","exports","declarations","nextUniqueId","McToggleBase","_elementRef","_McToggleMixinBase","mixinTabIndex","mixinColor","mixinDisabled","McToggleChange","McToggleComponent","_super","_focusMonitor","_changeDetectorRef","tabIndex","_this","call","color","ThemePalette","Primary","labelPosition","ariaLabel","ariaLabelledby","_uniqueId","id","name","_checked","change","EventEmitter","_onTouchedCallback","_onChangeCallback","_","parseInt","monitor","tslib_1.__extends","McToggleComponent_1","markForCheck","stopMonitoring","focus","focusVia","_inputElement","_getAriaChecked","checked","_onInteractionEvent","event","stopPropagation","_onLabelTextChange","_onInputClick","_updateModelValue","_emitChangeEvent","writeValue","registerOnChange","fn","registerOnTouched","setDisabledState","isDisabled","source","emit","ViewChild","Output","Component","exportAs","providers","provide","NG_VALUE_ACCESSOR","useExisting","forwardRef","multi","inputs","host","[id]","[attr.id]","[class.mc-disabled]","[class.mc-toggle-off]","animations","trigger","right","transition","animate","tslib_1.__param","Attribute","FocusMonitor","ChangeDetectorRef","String","McToggleModule","BrowserAnimationsModule","A11yModule","McCommonModule","McToolTipComponent","cdr","_prefix","_positions","DEFAULT_4_POSITIONS","slice","_classMap","_placement","_trigger","visibleSource","BehaviorSubject","$visible","asObservable","mcVisibleChange","mcMouseEnterDelay","mcMouseLeaveDelay","_onHide","Subject","_closeOnInteraction","availablePositions","POSITION_MAP","_title","isTitleString","TemplateRef","visible","next","unshift","mcPlacement","show","hideTId","clearTimeout","isContentEmpty","showTId","setTimeout","mcVisible","_markForCheck","hide","setClassMap","_a","mcTitle","afterHidden","_handleBodyInteraction","fadeAnimation","preserveWhitespaces","(body:click)","MC_TOOLTIP_SCROLL_STRATEGY","InjectionToken","MC_TOOLTIP_SCROLL_STRATEGY_FACTORY_PROVIDER","deps","Overlay","useFactory","MC_TOOLTIP_SCROLL_STRATEGY_FACTORY","McTooltipDirective","_overlay","_ngZone","_scrollDispatcher","hostView","_scrollStrategy","_dir","isTooltipOpen","isDynamicTooltip","parentDisabled","$unsubscribe","manualListeners","Map","_destroyed","title","updateCompValue","_mouseEnterDelay","_mouseLeaveDelay","_visible","_createOverlay","_overlayRef","strategy","position","flexibleConnectedTo","withTransformOriginOn","withFlexibleDimensions","withViewportMargin","withPositions","scrollableAncestors","getAncestorScrollContainers","withScrollableContainers","positionChanges","pipe","takeUntil","subscribe","tooltip","onPositionChange","scrollableViewProperties","isOverlayClipped","run","create","positionStrategy","panelClass","scrollStrategy","_updatePosition","detachments","_detach","hasAttached","detach","$event","updatedPlacement","keys","some","key","connectionPair","originX","originY","overlayX","overlayY","handlePositioningUpdate","pos","overlayElement","clientHeight","element","currentContainer","top","split","mcTrigger","forEach","listener","addEventListener","dispose","removeEventListener","clear","complete","handleKeydown","e","keyCode","ESCAPE","handleTouchend","getConfig","origin","_getOrigin","overlay","_getOverlayPosition","tslib_1.__assign","main","fallback","originPosition","isLtr","getMcTooltipInvalidPositionError","_invertPosition","x","y","overlayPosition","newX","newY","overlayRef","_portal","ComponentPortal","attach","instance","distinctUntilChanged","data","HostBinding","(keydown)","(touchend)","Inject","Optional","ScrollDispatcher","ViewContainerRef","Directionality","McToolTipModule","OverlayModule","entryComponents","VERSION","Version","SELECT_PANEL_PADDING_X","selectionEnd","newEditParams","cursorEndPosition","McTimepicker","_incrementTime","dateVal","whatToIncrement","TimeParts","seconds","_getTimeDigitsFromDate","hours","minutes","_getDateFromTimeDigits","_decrementTime","whatToDecrement","_getCursorPositionOfPrevTimePartStart","cursorPos","timeString","length","_getCursorPositionOfNextTimePartStart","timeDevider","nextDividerPos","indexOf","undefined","_getTimeEditMetrics","cursorPosition","modifiedTimePart","cursorStartPosition","minutesIndex","hoursIndex","secondsIndex","_getTimeStringFromDate","tempVal","timeFormat","DEFAULT_TIME_FORMAT","_getNumberWithLeadingZero","getHours","getMinutes","getSeconds","TimeFormats","HHmm","HHmmss","_getParsedTimeParts","hoursAndMinutesAndSeconds","match","HOURS_MINUTES_SECONDS_REGEXP","hoursAndMinutes","HOURS_MINUTES_REGEXP","hoursOnly","HOURS_ONLY_REGEXP","_getDateFromTimeString","trim","Number","resultDate","Date","isNaN","getTime","digit","_parseValidator","_currentDTimeInput","mcTimepickerParse","text","_minTimeValidator","_minDTime","_isTimeLowerThenMin","mcTimepickerLowerThenMintime","_maxTimeValidator","_maxDTime","_isTimeGreaterThenMax","mcTimepickerHigherThenMaxtime","timeToCompare","ErrorStateMatcher","McTimepicker_1","class","[attr.placeholder]","[disabled]","[required]","[attr.time-format]","[attr.min-time]","[attr.max-time]","[attr.value]","(blur)","(focus)","(input)","(paste)","NG_VALIDATORS","useValue","ɵ1","McFormFieldControl","Self","MC_INPUT_VALUE_ACCESSOR","NgControl","NgForm","FormGroupDirective","McTimepickerMixinBase","McTimepickerModule","PlatformModule","FormsModule","mcSelectAnimations","transformPanel","transform","minWidth","opacity","group","query","animateChild","fadeInContent","MC_SELECT_SCROLL_STRATEGY","MC_SELECT_SCROLL_STRATEGY_PROVIDER","MC_SELECT_SCROLL_STRATEGY_PROVIDER_FACTORY","McSelectChange","McSelectBase","_defaultErrorStateMatcher","_parentForm","_parentFormGroup","ngControl","_McSelectMixinBase","mixinErrorState","McSelectTrigger","McSelect","_viewportRuler","_renderer","_parentFormField","_scrollStrategyFactory","_triggerFontSize","_optionIds","_transformOrigin","_panelDoneAnimating","_panelDoneAnimatingStream","_offsetY","controlType","optionSelectionChanges","defer","options","merge","apply","map","option","onSelectionChange","onStable","take","switchMap","openedChange","_openedStream","filter","o","_closedStream","selectionChange","valueChange","hiddenItems","_panelOpen","_required","_scrollTop","_multiple","_uid","_destroy","_focused","_onChange","_onTouched","_compareWith","o1","o2","valueAccessor","McSelect_1","_placeholder","stateChanges","_selectionModel","getMcSelectDynamicMultipleError","getMcSelectNonFunctionValueError","_initializeSelection","_value","newValue","_id","SelectionModel","multiple","panelOpen","overlayDir","offsetX","ngAfterContentInit","_initKeyManager","onChange","added","select","removed","deselect","changes","startWith","_resetOptions","ngAfterViewInit","tags","_calculateHiddenItems","ngDoCheck","updateErrorState","ngOnChanges","toggle","close","open","_triggerRect","getBoundingClientRect","_keyManager","withHorizontalOrientation","_calculateOverlayPosition","_highlightCorrectOption","fontSize","_isRtl","_setSelectionByValue","selected","empty","selectedOptions","viewValue","reverse","join","isEmpty","_handleKeydown","_handleOpenKeydown","_handleClosedKeydown","_onFadeInDone","_onFocus","_onBlur","_onAttached","positionChange","detectChanges","_calculateOverlayOffsetX","panel","scrollTop","_getPanelTheme","_calculateOverlayScroll","selectedIndex","scrollBuffer","maxScroll","itemHeight","_getItemHeight","optionOffsetFromScrollTop","halfOptionHeight","optimalScrollPosition","Math","min","max","onContainerClick","onRemoveMatcherItem","visibleItems","totalItemsWidth","_getTotalItemsWidthInMatcher","totalVisibleItemsWidth","tag","offsetTop","offsetHeight","width","itemsCounter","querySelector","matcherList","itemsCounterShowed","matcherListWidth","matcherWidth","triggerClone","cloneNode","remove","appendChild","querySelectorAll","item","isArrowKey","DOWN_ARROW","UP_ARROW","LEFT_ARROW","RIGHT_ARROW","ENTER","SPACE","altKey","preventDefault","onKeydown","manager","HOME","END","setFirstItemActive","setLastItemActive","activeItem","A","ctrlKey","hasDeselectedOptions_1","previouslyFocusedIndex","activeItemIndex","shiftKey","_selectViaInteraction","Promise","resolve","then","Array","isArray","getMcSelectNonArrayValueError","currentValue","_selectValue","_sortValues","correspondingOption","setActiveItem","find","error","isDevMode","console","warn","ActiveDescendantKeyManager","withTypeAhead","withVerticalOrientation","tabOut","_scrollActiveOptionIntoView","changedOrDestroyed","_onSelect","isUserInput","_stateChanges","_setOptionIds","wasSelected","isSelected","_propagateChanges","options_1","toArray","sort","a","b","sortComparator","fallbackValue","valueToEmit","activeOptionIndex","labelCount","_countGroupLabelsBeforeOption","optionGroups","_getOptionScrollPosition","_getOptionIndex","reduce","result","current","index","items","_getItemCount","panelHeight","scrollContainerHeight","selectedOptionOffset","_calculateOverlayOffsetY","_checkOverlayWithinViewport","overlayRect","viewportSize","getViewportSize","isRtl","first","leftOverflow","left","rightOverflow","round","updatePosition","topSpaceAvailable","bottomSpaceAvailable","height","bottom","panelHeightTop","abs","totalPanelHeight","panelHeightBottom","_adjustPanelUp","_adjustPanelDown","_getOriginBasedOnOption","distanceBelowViewport","distanceAboveViewport","optionHeightAdjustment","ViewChildren","McTag","QueryList","CdkConnectedOverlay","ContentChildren","McOption","descendants","McOptgroup","ContentChild","Observable","[attr.tabindex]","[class.mc-select-invalid]","[class.mc-select-required]","(window:resize)","MC_OPTION_PARENT_COMPONENT","ViewportRuler","McFormField","McSelectModule","McOptionModule","McTagModule","McFormFieldModule","ngZone","areas","_gutterSize","isDragging","areaPositionDivider","listeners","gutterSize","area","push","initialSize","onMouseDown","leftAreaIndex","rightAreaIndex","leftArea","rightArea","startPoint","screenX","screenY","runOutsideAngular","listen","onMouseUp","onMouseMove","indexToRemove","splice","endPoint","offset","newLeftAreaSize","newRightAreaSize","minLeftAreaSize","minRightAreaSize","rightAreaOffset","unsubscribe","pop","McProgressSpinner","percentage","_McProgressSpinnerMixinBase","McProgressSpinnerModule","McRadioChange","McRadioGroupBase","_McRadioGroupMixinBase","MC_RADIO_GROUP_CONTROL_VALUE_ACCESSOR","McRadioGroup","_changeDetector","_name","_selected","_isInitialized","_labelPosition","controlValueAccessorChangeFn","onTouched","updateRadioButtonNames","v","markRadiosForCheck","updateSelectedRadioFromValue","checkSelectedRadioButton","toBoolean","touch","emitChangeEvent","_radios","radio","isAlreadySelected","McRadioButton","role","McRadioButtonBase","_McRadioButtonMixinBase","radioGroup","_radioDispatcher","isFocused","removeUniqueSelectionListener","newCheckedState","notify","newDisabledState","required","onInputClick","onInputChange","groupValueChanged","[class.mc-radio-checked]","[class.mc-radio-disabled]","UniqueSelectionDispatcher","McRadioModule","McTreeNodeDef","McTreeNodeDef_1","CdkTreeNodeDef","McTreeNodePadding","arguments","_baseLeftPadding","_iconWidth","_indent","McTreeNodePadding_1","_withIcon","_paddingIndent","nodeLevel","_treeNode","_tree","treeControl","getLevel","level","_level","leftPadding","isExpandable","_setPadding","CdkTreeNodePadding","McTreeNodeOption","treeSelection","_hasFocus","McTreeNodeOption_1","setSelected","setFocusedOption","_getHeight","getClientRects","_handleFocus","_handleBlur","_handleClick","tabindex","[class.mc-selected]","[class.mc-focused]","[attr.aria-expanded]","[attr.aria-level]","(click)","CdkTreeNode","McTreeSelection","_McTreeSelectionBase","CdkTree","McTreeNavigationChange","McTreeSelectionChange","_differs","autoSelect","noUnselect","navigationChange","McTreeSelection_1","rawValue","log","_onKeyDown","withShift","withCtrl","collapse","expand","toggleFocusedOption","PAGE_UP","setPreviousPageItemActive","PAGE_DOWN","setNextPageItemActive","FocusKeyManager","updateScrollSize","withScrollSize","floor","updateActiveItem","previousIndex_1","previousActiveItemIndex","activeIndex_1","_canDeselectLast","_emitNavigationEvent","focusedIndex","_isValidIndex","focusedOption","renderNodeChanges","dataDiffer","viewContainer","parentData","_dataDiffer","_nodeOutlet","arrayOfInstances","_embeddedViews","view","viewDef","def","nodes","node","nodeMatchedQueries","matchedQueryIds","nodeData","nodeIndex","reset","notifyOnChanges","CdkTreeNodeOutlet","[tabIndex]","IterableDiffers","MC_TREE_DIRECTIVES","McTreeModule","CdkTreeModule","McTreeFlattener","transformFunction","getChildren","_flattenNode","resultNodes","parentMap","flatNode","children","child","childParentMap","flattenNodes","structuredData","expandFlattenedNodes","results","currentExpand","i","isExpanded","McTreeFlatDataSource","treeFlattener","initialData","_flattenedData","_expandedData","_data","dataNodes","connect","collectionViewer","viewChange","expansionModel","disconnect","DataSource","McTreeNestedDataSource","McTagBase","_McTagMixinBase","_addClassModificatorForIcons","icons","contentChildren","iconElement","previousElementSibling","nextElementSibling","nextSibling","classList","add","previousSibling","firstIconElement","secondIconElement","McIcon","TIMEFORMAT_PLACEHOLDERS","hh:mm:ss","hh:mm","RegExp","_uniqueComponentIdSuffix","_validatorOnChange","noop","_validator","McTimepickerBase","validate","c","registerOnValidatorChange","inputValueAccessor","focused","_minTime","_maxTime","_inputValueAccessor","_previousNativeValue","Validators","compose","_applyInputChanges","_timeFormat","formatValue","timeFormatKey","placeholder","toLowerCase","minValue","maxValue","_dirtyCheckNativeValue","focusChanged","onBlur","onPaste","clipboardUserInput","clipboardData","getData","onInput","initialCursorStart","selectionStart","initialCursorEnd","isAutocompleteTriggered","doTimestringReformat","errors","_createSelectionOfTimeComponentInInput","_isBadInput","setProperty","onKeyDown","_getKeyCode","_upDownTimeByArrowKeys","_switchSelectionBetweenTimeparts","validity","badInput","applyParams","changedTime","timeToApply","control","updateValueAndValidity","code","McModalComponent","animationState","isComponent","mcContent","createDynamicComponent","isModalButtons","mcFooter","formatModalButtons","container","mcGetContainer","HTMLElement","OverlayRef","modalControl","registerModal","handleVisibleStateChange","firstChange","contentComponentRef","bodyContainer","insert","autoFocusButtonOk","changeVisibleFromInside","destroy","triggerOk","onClickOkCancel","triggerCancel","getInstance","getContentComponentRef","getContentComponent","getElement","onClickMask","mcMask","mcMaskClosable","target","contains","isModalType","type","mcModalType","onClickCloseBtn","ok","mcOnOk","cancel","mcOnCancel","loadingKey","caseClose_1","doClose","isPromise","handleThen","catch","isNonEmptyString","isTemplateRef","Type","animation","closeResult","changeBodyOverflow","animateTo","mcAfterOpen","mcAfterClose","getButtonCallableProp","prop","args","onButtonClick","button","loading","changeAnimationState","maskAnimationClassMap","modalAnimationClassMap","_b","changeDetectorRef","changeDetector","isVisible","window","updateTransformOrigin","buttons","autoLoading","component","factory","cfr","resolveComponentFactory","childInjector","Injector","McModalRef","parent","parentInjector","mcComponentParams","assign","modalElement","modalContainer","lastPosition","ModalUtil","getLastClickPosition","transformOrigin","offsetLeft","plusNum","openModals","document","body","mcMeasureScrollbarService","scrollBarWidth","read","DOCUMENT","ComponentFactoryResolver","McMeasureScrollbarService","McModalControlService","CssUnitPipe","defaultUnit","formatted","Pipe","ModalBuilderForService","createModal","changeProps","modalRef","destroyModal","keydownEvents","mcCloseByESC","McModalService","afterAllClose","closeAll","mcWidth","confirm","confirmType","mcClassName","success","simpleConfirm","delete","mcCancelText","Injectable","McModalModule","McButtonModule","MC_NAVBAR_CONTAINER","MC_NAVBAR_ITEM","MC_NAVBAR_BRAND","MC_NAVBAR_TITLE","McNavbarLogo","McNavbarBrand","McNavbarTitle","McNavbarItemBase","_McNavbarMixinBase","McNavbarItem","_platform","_cdRef","dropdownItems","isCollapsed","_subscription","Subscription","encodeURI","dropdownContent","denyClickIfDisabled","_focusMonitor$","hasDropdownContent","listenClickOutside","startListenFocusDropdownItems","stopListenFocusDropdownItems","isActiveDropdownLink","link","isBrowser","location","href","handleClickByItem","toggleDropdown","isNavbarItem","handleClickByDropdownItem","forceCloseDropdown","_dropdownElements","el","events","eventListeners","hasAttribute","stopImmediatePropagation","[attr.disabled]","Platform","McNavbarContainer","CollapsibleItem","_collapsed","processCollapsed","collapsed","updateCollapsedClass","CachedItemWidth","itemsForCollapse","_collapsedItemsWidth","calculateAndCacheCollapsedItemsWidth","updateTitle","acc","getTitle","computedTitle","getAttribute","decodeURI","innerText","removeAttribute","McNavbar","forceRecalculateItemsWidth","resizeDebounceInterval","firstLevelElement","secondLevelElements","resizeObserver","fromEvent","debounceTime","_resizeSubscription","updateCollapsed","bind","_itemsWidths","calculateAndCacheItemsWidth","_totalItemsWidths","calculateAndCacheTotalItemsWidth","collapseDelta","maxAllowedWidth","itemsWidths","canCollapse","collapsedItemsWidth","getOuterElementWidth","getPropertyValue","allItemsSelector","allItems","from","getItemsForCollapse","McNavbarModule","idIterator","McProgressBarBase","_McProgressBarMixinBase","McProgressBar","mode","McProgressBarModule","McProgressSpinnerBase","MaxValidator","_createValidator","MAX_VALIDATOR","[attr.max]","McInputModule","McInput","McNumberInput","McInputMono","MinValidator","McContentComponent","[class.mc-layout-content]","McFooterComponent","[class.mc-layout-footer]","McHeaderComponent","[class.mc-layout-header]","McLayoutComponent","hasSidebar","[class.mc-layout]","[class.mc-layout-has-sidebar]","McSidebarComponent","mcLayoutComponent","_mcWidth","mcCollapsedWidth","mcCollapsedChange","collapsible","mcCollapsed","[class.mc-layout-sidebar]","[class.mc-layout-sidebar-collapsed]","[style.flex]","[style.max-width.px]","[style.min-width.px]","[style.width.px]","Host","McLayoutModule","McListOption","_element","listSelection","checkboxPosition","_reportValueChange","wasSelected_1","_lineSetter","McLineSetter","_lines","_removeOptionFromList","getLabel","_text","textContent","_getHostElement","McLine","McListSelection","MC_SELECTION_LIST_VALUE_ACCESSOR","McListSelectionChange","McListSelectionBase","_McListSelectionMixinBase","horizontal","_modelChanges","EMPTY","_tempValues","_setOptionsFromValues","_i","_c","selectAll","deselectAll","values","getSelectedOptionValues","listOption","optionIndex","setPreviousItemActive","setNextItemActive","_getOptionByValue","Boolean","McListBase","McList","McListSubheaderCssStyler","McListItemBase","McListItem","McListModule","McLineModule","McLinkBase","_McLinkBase","McLink","McLinkModule","parentService","rootOpenModals","rootAfterAllClose","rootRegisteredMetaMap","registeredMetaMap","hasRegistered","afterOpenSubscription","afterOpen","afterCloseSubscription","afterClose","removeOpenModal","has","SkipSelf","listenDocumentClick","clientX","clientY","ModalUtil$1","_mcVisible","mcZIndex","_mcClosable","_mcMask","_mcMaskClosable","mcOkType","_mcOkLoading","_mcCancelLoading","mcOkText","McButton","McAnchor","McIconButton","McButtonCSSStyler","McXSButtonCSSStyler","McSMButtonCSSStyler","McLGButtonCSSStyler","McXLButtonCSSStyler","McIconButtonCSSStyler","Status","McCard","readonly","selectedChange","status","Info","_tabIndex","Success","Warning","hostElement","clicked","[class.mc-card_readonly]","McCardModule","MC_CHECKBOX_CLICK_ACTION","MC_CHECKBOX_CONTROL_VALUE_ACCESSOR","McCheckbox","TransitionCheckState","McCheckboxChange","McCheckboxBase","_McCheckboxMixinBase","_clickAction","indeterminateChange","_currentAnimationClass","_currentCheckState","Init","_controlValueAccessorChangeFn","_indeterminate","focusOrigin","_onInputFocusChange","changed","_transitionCheckState","Indeterminate","Checked","Unchecked","indeterminate","newState","oldState","[class.mc-checkbox-indeterminate]","[class.mc-checkbox-checked]","[class.mc-checkbox-disabled]","[class.mc-checkbox-label-before]","MC_CHECKBOX_REQUIRED_VALIDATOR","McCheckboxRequiredValidator","[attr.required]","CheckboxRequiredValidator","McCheckboxModule","McDivider","_vertical","_inset","[attr.aria-orientation]","[class.mc-divider-vertical]","[class.mc-divider-inset]","McDividerModule","McCleaner","McFormFieldNumberControl","McHint","McPrefix","McStepper","stepUp","stepDown","onStepUp","onStepDown","McSuffix","McFormFieldBase","_McFormFieldMixinBase","_labelId","hovered","_validateControlChild","_control","_numberControl","hasStepper","_stepper","valueChanges","ngAfterContentChecked","clearValue","hasCleaner","onHoverChanged","isHovered","step","_shouldForward","getMcFormFieldMissingControlError","_hint","_suffix","_cleaner","[class.mc-form-field_invalid]","[class.mc-form-field_disabled]","[class.mc-form-field_has-prefix]","[class.mc-form-field_has-suffix]","[class.mc-form-field_has-cleaner]","[class.mc-form-field_has-stepper]","[class.ng-untouched]","[class.ng-touched]","[class.ng-pristine]","[class.ng-dirty]","[class.ng-valid]","[class.ng-invalid]","[class.ng-pending]","(mouseenter)","(mouseleave)","McFormFieldWithoutBorders","res","MC_INPUT_INVALID_TYPES","BIG_STEP","SMALL_STEP","McInputBase","_McInputMixinBase","_model","bigStep","isDigit","Infinity","_host","self","getPrototypeOf","normalizeSplitter","McNumberInput_1","_focusChanged","minuses","NUMPAD_MINUS","DASH","FF_MINUS","serviceKeys","DELETE","BACKSPACE","TAB","arrows","allowedKeys","concat","isIEPeriod","isNotIEPeriod","metaKey","C","V","X","F1","F12","EDGE","TRIDENT","ZERO","NINE","NUMPAD_ZERO","NUMPAD_NINE","valueAsNumber","toString","update","replace","isFloat","isInt","test","NgModel","_type","_neverEmptyInputTypes","t","getSupportedInputTypes","McInput_1","_validateType","_onInput","_isNeverEmpty","getMcInputUnsupportedTypeError","MIN_VALIDATOR","[attr.min]","__extends","d","__","constructor","extendStatics","__decorate","decorators","desc","r","getOwnPropertyDescriptor","Reflect","decorate","__param","paramIndex","decorator","__metadata","metadataKey","metadataValue","metadata","isBoolean","val","MC_SANITY_CHECKS_FACTORY","base","class_1","defaultColor","Default","_color","colorPalette","defaultTabIndex","errorState","matcher","errorStateMatcher","isErrorState","optionsArray","groups","groupCounter","optionHeight","currentScrollPosition","optionOffset","arrayMap","array","iteratee","baseValues","object","props","inputType","sanitizeNumber","isFinite","getPrecision","arr","pow","value1","value2","precision","obj","scrollStrategies","reposition","scrollThrottle","setPrototypeOf","__proto__","p","hasOwnProperty","__assign","s","n","MC_SANITY_CHECKS","providedIn","_sanityChecksEnabled","_hasDoneGlobalChecks","_document","_window","_areChecksEnabled","_checkDoctypeIsDefined","_checkThemeIsPresent","_isTestEnv","doctype","testElement","createElement","computedStyle","display","removeChild","BidiModule","_setLineClass","count","_resetClasses","_setClass","className","isAdd","ShowOnDirtyErrorStateMatcher","form","invalid","dirty","submitted","touched","McPseudoCheckbox","[class.mc-pseudo-checkbox_indeterminate]","[class.mc-pseudo-checkbox_checked]","McPseudoCheckboxModule","scrollbarMeasure","overflow","initScrollBarWidth","_scrollbarWidth","scrollDiv","scrollProp","offsetWidth","clientWidth","McOptgroupBase","_McOptgroupMixinBase","_uniqueOptgroupIdCounter","[class.mc-optgroup-disabled]","[attr.aria-disabled]","[attr.aria-labelledby]","_uniqueIdCounter","McOptionSelectionChange","_parent","_active","_mostRecentViewValue","disableRipple","_emitSelectionChangeEvent","setActiveStyles","setInactiveStyles","_getTabIndex","ngAfterViewChecked","[class.mc-option-multiple]","[class.mc-active]","MC_LABEL_GLOBAL_OPTIONS","topCenter","offsetY","topLeft","topRight","rightTop","rightBottom","bottomCenter","bottomLeft","bottomRight","leftTop","leftBottom","McIconCSSStyler","McIconBase","_McIconMixinBase","iconName","queries","McButtonBase","_McButtonMixinBase","focusMonitor","_haltDisabledEvents"],"mappings":"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"}