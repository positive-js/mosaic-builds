{"version":3,"file":"mosaic.umd.min.js","sources":["../../src/lib/tooltip/tooltip.component.ts","../../src/lib/tooltip/tooltip.module.ts","../../src/lib/version.ts","../../src/lib/timepicker/timepicker.constants.ts","../../src/lib/select/select.component.ts","../../src/lib/select/select.module.ts","../../src/lib/splitter/splitter.component.ts","../../src/lib/splitter/splitter.module.ts","../../src/lib/toggle/toggle.component.ts","../../src/lib/toggle/toggle.module.ts","../../src/lib/tree/tree-selection.ts","../../src/lib/tree/tree.module.ts","../../src/lib/tree/data-source/flat-data-source.ts","../../src/lib/tree/data-source/nested-data-source.ts","../../src/lib/tag/tag.component.ts","../../src/lib/tag/tag.module.ts","../../src/lib/timepicker/timepicker.ts","../../src/lib/timepicker/timepicker.module.ts","../../src/lib/select/select-animations.ts","../../src/lib/navbar/navbar.component.ts","../../src/lib/navbar/navbar.module.ts","../../src/lib/progress-bar/progress-bar.component.ts","../../src/lib/progress-bar/progress-bar.module.ts","../../src/lib/progress-spinner/progress-spinner.component.ts","../../src/lib/progress-spinner/progress-spinner.module.ts","../../src/lib/radio/radio.component.ts","../../src/lib/radio/radio.module.ts","../../src/lib/tree/node.ts","../../src/lib/tree/padding.ts","../../src/lib/list/list-selection.component.ts","../../src/lib/list/list.component.ts","../../src/lib/list/list.module.ts","../../src/lib/link/link.component.ts","../../src/lib/link/link.module.ts","../../src/lib/modal/modal-control.service.ts","../../src/lib/modal/modal-ref.class.ts","../../src/lib/modal/modal-util.ts","../../src/lib/modal/modal.component.ts","../../src/lib/modal/css-unit.pipe.ts","../../src/lib/modal/modal.service.ts","../../src/lib/modal/modal.module.ts","../../src/lib/form-field/form-field.ts","../../src/lib/form-field/form-field.module.ts","../../src/lib/input/input-value-accessor.ts","../../src/lib/input/stepperUtils.ts","../../src/lib/input/input.ts","../../src/lib/input/input-number-validators.ts","../../src/lib/input/input.module.ts","../../src/lib/layout/content.component.ts","../../src/lib/layout/footer.component.ts","../../src/lib/layout/header.component.ts","../../src/lib/layout/layout.component.ts","../../src/lib/layout/sidebar.component.ts","../../src/lib/layout/layout.module.ts","../../src/lib/button/button.component.ts","../../src/lib/button/button.module.ts","../../src/lib/card/card.component.ts","../../src/lib/card/card.module.ts","../../src/lib/checkbox/checkbox-config.ts","../../src/lib/checkbox/checkbox.ts","../../src/lib/checkbox/checkbox-required-validator.ts","../../src/lib/checkbox/checkbox-module.ts","../../src/lib/divider/divider.component.ts","../../src/lib/divider/divider.module.ts","../../src/lib/dropdown/dropdown-content.ts","../../src/lib/dropdown/dropdown-panel.ts","../../src/lib/dropdown/dropdown-item.ts","../../src/lib/dropdown/dropdown-animations.ts","../../src/lib/dropdown/dropdown.component.ts","../../src/lib/dropdown/dropdown-trigger.ts","../../src/lib/dropdown/dropdown.module.ts","../../src/lib/form-field/cleaner.ts","../../src/lib/form-field/form-field-control.ts","../../src/lib/form-field/form-field-number-control.ts","../../src/lib/form-field/hint.ts","../../src/lib/form-field/prefix.ts","../../src/lib/form-field/stepper.ts","../../src/lib/form-field/suffix.ts","../../node_modules/tslib/tslib.es6.js","../../src/lib/core/utils/utils.ts","../../src/lib/core/common-behaviors/common-module.ts","../../src/lib/core/common-behaviors/disabled.ts","../../src/lib/core/common-behaviors/color.ts","../../src/lib/core/common-behaviors/tabindex.ts","../../src/lib/core/common-behaviors/error-state.ts","../../src/lib/core/option/option.ts","../../src/lib/core/overlay/overlay-position-map.ts","../../src/lib/dropdown/dropdown-errors.ts","../../src/lib/form-field/form-field-errors.ts","../../src/lib/input/input-errors.ts","../../src/lib/select/select-errors.ts","../../src/lib/core/line/line.ts","../../src/lib/core/error/error-options.ts","../../src/lib/core/selection/pseudo-checkbox/pseudo-checkbox.ts","../../src/lib/core/selection/index.ts","../../src/lib/core/services/measure-scrollbar.service.ts","../../src/lib/core/option/optgroup.ts","../../src/lib/core/option/index.ts","../../src/lib/core/label/label-options.ts","../../src/lib/core/animation/fade-animations.ts","../../src/lib/icon/icon.component.ts","../../src/lib/icon/icon.module.ts"],"sourcesContent":["import {\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    Directive,\n    ElementRef,\n    EventEmitter,\n    HostBinding,\n    Inject,\n    InjectionToken,\n    Input,\n    NgZone,\n    OnDestroy,\n    OnInit,\n    Optional,\n    Output,\n    TemplateRef,\n    ViewContainerRef,\n    ViewEncapsulation\n} from '@angular/core';\nimport { Directionality } from '@ptsecurity/cdk/bidi';\nimport { coerceBooleanProperty } from '@ptsecurity/cdk/coercion';\nimport { ESCAPE } from '@ptsecurity/cdk/keycodes';\nimport {\n    ConnectedOverlayPositionChange,\n    ConnectionPositionPair,\n    Overlay,\n    OverlayRef,\n    ScrollDispatcher,\n    IScrollStrategy,\n    FlexibleConnectedPositionStrategy,\n    IOverlayConnectionPosition,\n    IOriginConnectionPosition,\n    HorizontalConnectionPos,\n    VerticalConnectionPos\n} from '@ptsecurity/cdk/overlay';\nimport { ComponentPortal } from '@ptsecurity/cdk/portal';\nimport {\n    fadeAnimation,\n    DEFAULT_4_POSITIONS,\n    POSITION_MAP\n} from '@ptsecurity/mosaic/core';\nimport { BehaviorSubject, Observable, Subject } from 'rxjs';\nimport { distinctUntilChanged, takeUntil } from 'rxjs/operators';\n\n\n@Component({\n    selector: 'mc-tooltip',\n    animations: [ fadeAnimation ],\n    templateUrl: './tooltip.component.html',\n    preserveWhitespaces: false,\n    styleUrls: ['./tooltip.css'],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    host: {\n        '(body:click)': 'this._handleBodyInteraction()'\n    }\n})\n\nexport class McToolTipComponent {\n    _prefix = 'mc-tooltip_placement';\n    _positions: ConnectionPositionPair[] = [ ...DEFAULT_4_POSITIONS ];\n    _classMap = {};\n    _placement = 'top';\n    _trigger = 'hover';\n    isTitleString: boolean;\n    visibleSource = new BehaviorSubject<boolean>(false);\n    $visible: Observable<boolean> = this.visibleSource.asObservable();\n    _title: string | TemplateRef<void>;\n    showTId: number;\n    hideTId: number;\n    availablePositions: any;\n\n    @Output() mcVisibleChange: EventEmitter<boolean> = new EventEmitter();\n\n    @Input() mcMouseEnterDelay = 400;\n\n    @Input() mcMouseLeaveDelay = 0;\n\n    @Input()\n    set mcTitle(value: string | TemplateRef<void>) {\n        this.isTitleString = !(value instanceof TemplateRef);\n\n        if (this.isTitleString) {\n            this._title = value;\n        }\n    }\n\n    get mcTitle(): string | TemplateRef<void> {\n        return this._title;\n    }\n\n    @Input()\n    set mcVisible(value: boolean) {\n        const visible = coerceBooleanProperty(value);\n\n        if (this.visibleSource.value !== visible) {\n            this.visibleSource.next(visible);\n            this.mcVisibleChange.emit(visible);\n        }\n    }\n\n    get mcVisible(): boolean {\n        return this.visibleSource.value;\n    }\n\n    @Input()\n    set mcTrigger(value: string) {\n        this._trigger = value;\n    }\n\n    get mcTrigger(): string {\n        return this._trigger;\n    }\n\n    @Input()\n    set mcPlacement(value: string) {\n        if (value !== this._placement) {\n            this._placement = value;\n            this._positions.unshift(POSITION_MAP[ this.mcPlacement ]);\n        } else if (!value) {\n            this._placement = 'top';\n        }\n    }\n    get mcPlacement(): string {\n        return this._placement;\n    }\n\n    /** Subject for notifying that the tooltip has been hidden from the view */\n    private readonly _onHide: Subject<any> = new Subject();\n    private _closeOnInteraction: boolean = false;\n\n    constructor(public cdr: ChangeDetectorRef) {\n        this.availablePositions = POSITION_MAP;\n    }\n\n    show(): void {\n        if (this.hideTId) {\n            clearTimeout(this.hideTId);\n        }\n\n        if (!this.isContentEmpty()) {\n            this._closeOnInteraction = true;\n            this.showTId = setTimeout(() => {\n                this.mcVisible = true;\n                this.mcVisibleChange.emit(true);\n\n                // Mark for check so if any parent component has set the\n                // ChangeDetectionStrategy to OnPush it will be checked anyways\n                this._markForCheck();\n            }, this.mcMouseEnterDelay);\n        }\n    }\n\n    hide(): void {\n        if (this.showTId) {\n            clearTimeout(this.showTId);\n        }\n\n        this.hideTId = setTimeout(() => {\n            this.mcVisible = false;\n            this.mcVisibleChange.emit(false);\n            this._onHide.next();\n\n            // Mark for check so if any parent component has set the\n            // ChangeDetectionStrategy to OnPush it will be checked anyways\n            this._markForCheck();\n        }, this.mcMouseLeaveDelay);\n    }\n\n    setClassMap(): void {\n        this._classMap = {\n            [ `${this._prefix}-${this._placement}` ]: true\n        };\n    }\n\n    isContentEmpty(): boolean {\n        return this.isTitleString ? (this.mcTitle === '' || !this.mcTitle) : false;\n    }\n\n    /** Returns an observable that notifies when the tooltip has been hidden from view. */\n    afterHidden(): Observable<void> {\n        return this._onHide.asObservable();\n    }\n\n    _markForCheck(): void {\n        this.cdr.markForCheck();\n    }\n\n    _handleBodyInteraction(): void {\n        if (this._closeOnInteraction) {\n            this.hide();\n        }\n    }\n}\n\nexport const MC_TOOLTIP_SCROLL_STRATEGY =\n    new InjectionToken<() => IScrollStrategy>('mc-tooltip-scroll-strategy');\n\n/** @docs-private */\nexport function MC_TOOLTIP_SCROLL_STRATEGY_FACTORY(overlay: Overlay): () => IScrollStrategy {\n    return () => overlay.scrollStrategies.reposition({scrollThrottle: 20});\n}\n\n/** @docs-private */\nexport const MC_TOOLTIP_SCROLL_STRATEGY_FACTORY_PROVIDER = {\n    provide: MC_TOOLTIP_SCROLL_STRATEGY,\n    deps: [Overlay],\n    useFactory: MC_TOOLTIP_SCROLL_STRATEGY_FACTORY\n};\n\n/** Creates an error to be thrown if the user supplied an invalid tooltip position. */\nexport function getMcTooltipInvalidPositionError(position: string) {\n    return Error(`McTooltip position \"${position}\" is invalid.`);\n}\n\nconst VIEWPORT_MARGIN: number = 8;\n\n@Directive({\n    selector: '[mc-tooltip]',\n    host: {\n        '(keydown)': 'handleKeydown($event)',\n        '(touchend)': 'handleTouchend()'\n    }\n})\n\nexport class McTooltipDirective implements OnInit, OnDestroy {\n    isTooltipOpen: boolean = false;\n    isDynamicTooltip = false;\n    parentDisabled: boolean = false;\n    _title: string;\n    _disabled: boolean = false;\n    _mouseEnterDelay: number;\n    _mouseLeaveDelay: number;\n    _visible: boolean;\n    _trigger: string = 'hover';\n    _placement: string = 'top';\n    _overlayRef: OverlayRef | null;\n    _portal: ComponentPortal<McToolTipComponent>;\n    availablePositions: any;\n    tooltip: McToolTipComponent | null;\n\n    @Output() mcVisibleChange = new EventEmitter<boolean>();\n    private $unsubscribe = new Subject<void>();\n\n    @Input('mc-tooltip')\n    set mcTitle(title: string) {\n        this._title = title;\n        this.updateCompValue('mcTitle', title);\n    }\n\n    get mcTitle(): string {\n        return this._title;\n    }\n\n    @Input('mcTitle')\n    set setTitle(title: string) {\n        this.mcTitle = title;\n    }\n\n    @Input('mcTooltipDisabled')\n    get disabled(): boolean { return this._disabled; }\n    set disabled(value) {\n        this._disabled = coerceBooleanProperty(value);\n    }\n\n    @Input('mcMouseEnterDelay')\n    set mcMouseEnterDelay(value: number) {\n        this._mouseEnterDelay = value;\n        this.updateCompValue('mcMouseEnterDelay', value);\n    }\n\n    get mcMouseEnterDelay(): number {\n        return this._mouseEnterDelay;\n    }\n\n    @Input('mcMouseLeaveDelay')\n    set mcMouseLeaveDelay(value: number) {\n        this._mouseLeaveDelay = value;\n        this.updateCompValue('mcMouseLeaveDelay', value);\n    }\n\n    get mcMouseLeaveDelay(): number {\n        return this._mouseEnterDelay;\n    }\n\n    @Input('mcVisible')\n    set mcVisible(value: boolean) {\n        this._visible = value;\n        this.updateCompValue('mcVisible', value);\n    }\n\n    get mcVisible(): boolean {\n        return this._visible;\n    }\n\n    @Input('mcTrigger')\n    set mcTrigger(value: string) {\n        this._trigger = value;\n        this.updateCompValue('mcTrigger', value);\n    }\n\n    get mcTrigger(): string {\n        return this._trigger;\n    }\n\n    @Input('mcPlacement')\n    set mcPlacement(value: string) {\n        if (value) {\n            this._placement = value;\n            this.updateCompValue('mcPlacement', value);\n        } else {\n            this._placement = 'top';\n        }\n    }\n\n    get mcPlacement(): string {\n        return this._placement;\n    }\n\n    @HostBinding('class.mc-tooltip-open')\n    get isOpen(): boolean {\n        return this.isTooltipOpen;\n    }\n\n    @HostBinding('class.disabled')\n    get isParentDisabled(): boolean {\n        return this.parentDisabled;\n    }\n\n    private manualListeners = new Map<string, EventListenerOrEventListenerObject>();\n    private readonly _destroyed = new Subject<void>();\n\n    constructor(\n        private _overlay: Overlay,\n        private elementRef: ElementRef,\n        private _ngZone: NgZone,\n        private _scrollDispatcher: ScrollDispatcher,\n        private hostView: ViewContainerRef,\n        @Inject(MC_TOOLTIP_SCROLL_STRATEGY) private _scrollStrategy,\n        @Optional() private _dir: Directionality) {\n            this.availablePositions = POSITION_MAP;\n        }\n\n    /** Create the overlay config and position strategy */\n    _createOverlay(): OverlayRef {\n        if (this._overlayRef) {\n            return this._overlayRef;\n        }\n\n        // Create connected position strategy that listens for scroll events to reposition.\n        const strategy = this._overlay.position()\n            .flexibleConnectedTo(this.elementRef)\n            .withTransformOriginOn('.mc-tooltip')\n            .withFlexibleDimensions(false)\n            .withViewportMargin(VIEWPORT_MARGIN)\n            .withPositions([ ...DEFAULT_4_POSITIONS ]);\n\n        const scrollableAncestors = this._scrollDispatcher\n            .getAncestorScrollContainers(this.elementRef);\n\n        strategy.withScrollableContainers(scrollableAncestors);\n\n        strategy.positionChanges.pipe(takeUntil(this._destroyed)).subscribe((change) => {\n            if (this.tooltip) {\n                this.onPositionChange(change);\n                if (change.scrollableViewProperties.isOverlayClipped && this.tooltip.mcVisible) {\n                    // After position changes occur and the overlay is clipped by\n                    // a parent scrollable then close the tooltip.\n                    this._ngZone.run(() => this.hide());\n                }\n            }\n        });\n\n        this._overlayRef = this._overlay.create({\n            direction: this._dir,\n            positionStrategy: strategy,\n            panelClass: 'mc-tooltip-panel',\n            scrollStrategy: this._scrollStrategy()\n        });\n\n        this._updatePosition();\n\n        this._overlayRef.detachments()\n            .pipe(takeUntil(this._destroyed))\n            .subscribe(() => this._detach());\n\n        return this._overlayRef;\n    }\n\n    _detach() {\n        if (this._overlayRef && this._overlayRef.hasAttached()) {\n            this._overlayRef.detach();\n        }\n\n        this.tooltip = null;\n    }\n\n    onPositionChange($event: ConnectedOverlayPositionChange): void {\n        let updatedPlacement = this.mcPlacement;\n        Object.keys(this.availablePositions).some((key) => {\n            if ($event.connectionPair.originX === this.availablePositions[key].originX &&\n                $event.connectionPair.originY === this.availablePositions[key].originY &&\n                $event.connectionPair.overlayX === this.availablePositions[key].overlayX &&\n                $event.connectionPair.overlayY === this.availablePositions[key].overlayY) {\n                updatedPlacement = key;\n\n                return true;\n            }\n\n            return false;\n        });\n        this.updateCompValue('mcPlacement', updatedPlacement);\n\n        if (this.tooltip) {\n            this.tooltip.setClassMap();\n        }\n\n        this.handlePositioningUpdate();\n    }\n\n    handlePositioningUpdate() {\n        if (!this._overlayRef) {\n            this._overlayRef = this._createOverlay();\n        }\n        if (this.mcPlacement === 'right' || this.mcPlacement === 'left') {\n            const pos =\n                (this._overlayRef.overlayElement.clientHeight -\n                    this.hostView.element.nativeElement.clientHeight) / 2; // tslint:disable-line\n            const currentContainer = this._overlayRef.overlayElement.style.top || '0px';\n            this._overlayRef.overlayElement.style.top =\n                `${parseInt(currentContainer.split('px')[0], 10) + pos - 1}px`;\n            // TODO: обновлять положение стрелки\\указателя\\\"дятла\"\n        }\n    }\n\n    // tslint:disable-next-line:no-any\n    updateCompValue(key: string, value: any): void {\n        if (this.isDynamicTooltip && value) {\n            if (this.tooltip) {\n                this.tooltip[key] = value;\n            }\n        }\n    }\n\n    ngOnInit(): void {\n        if (this.mcTrigger === 'hover') {\n\n            this.manualListeners\n                .set('mouseenter', () => this.show())\n                .set('mouseleave', () => this.hide())\n                .forEach((listener, event) => this.elementRef.nativeElement.addEventListener(event, listener));\n        }\n\n        if (this.mcTrigger === 'focus') {\n\n            this.manualListeners\n                .set('focus', () => this.show())\n                .set('blur', () => this.hide())\n                .forEach((listener, event) => this.elementRef.nativeElement.addEventListener(event, listener));\n        }\n    }\n\n    ngOnDestroy(): void {\n        if (this._overlayRef) {\n            this._overlayRef.dispose();\n        }\n        this.manualListeners.forEach((listener, event) =>\n            this.elementRef.nativeElement.removeEventListener(event, listener));\n        this.manualListeners.clear();\n\n        this.$unsubscribe.next();\n        this.$unsubscribe.complete();\n    }\n\n    handleKeydown(e: KeyboardEvent) {\n        if (this.isTooltipOpen && e.keyCode === ESCAPE) { // tslint:disable-line\n            this.hide();\n        }\n    }\n\n    handleTouchend() {\n        this.hide();\n    }\n\n    /** Updates the position of the current tooltip. */\n    _updatePosition() {\n        if (!this._overlayRef) {\n            this._overlayRef = this._createOverlay();\n        }\n        const position =\n            this._overlayRef.getConfig().positionStrategy as FlexibleConnectedPositionStrategy;\n        const origin = this._getOrigin();\n        const overlay = this._getOverlayPosition();\n\n        position.withPositions([\n            {...origin.main, ...overlay.main},\n            {...origin.fallback, ...overlay.fallback}\n        ]);\n    }\n\n    /**\n     * Returns the origin position and a fallback position based on the user's position preference.\n     * The fallback position is the inverse of the origin (e.g. `'below' -> 'above'`).\n     */\n    _getOrigin(): {main: IOriginConnectionPosition; fallback: IOriginConnectionPosition} {\n        const position = this.mcPlacement;\n        const isLtr = !this._dir || this._dir.value === 'ltr';\n        let originPosition: IOriginConnectionPosition;\n\n        if (position === 'top' || position === 'bottom') {\n            originPosition = {originX: 'center', originY: position === 'top' ? 'top' : 'bottom'};\n        } else if (\n            position === 'top' ||\n            (position === 'left' && isLtr) ||\n            (position === 'right' && !isLtr)) {\n            originPosition = {originX: 'start', originY: 'center'};\n        } else if (\n            position === 'bottom' ||\n            (position === 'right' && isLtr) ||\n            (position === 'left' && !isLtr)) {\n            originPosition = {originX: 'end', originY: 'center'};\n        } else {\n            throw getMcTooltipInvalidPositionError(position);\n        }\n\n        const {x, y} = this._invertPosition(originPosition.originX, originPosition.originY);\n\n        return {\n            main: originPosition,\n            fallback: {originX: x, originY: y}\n        };\n    }\n\n    /** Returns the overlay position and a fallback position based on the user's preference */\n    _getOverlayPosition(): {main: IOverlayConnectionPosition; fallback: IOverlayConnectionPosition} {\n        const position = this.mcPlacement;\n        const isLtr = !this._dir || this._dir.value === 'ltr';\n        let overlayPosition: IOverlayConnectionPosition;\n\n        if (position === 'top') {\n            overlayPosition = {overlayX: 'center', overlayY: 'bottom'};\n        } else if (position === 'bottom') {\n            overlayPosition = {overlayX: 'center', overlayY: 'top'};\n        } else if (\n            position === 'top' ||\n            (position === 'left' && isLtr) ||\n            (position === 'right' && !isLtr)) {\n            overlayPosition = {overlayX: 'end', overlayY: 'center'};\n        } else if (\n            position === 'bottom' ||\n            (position === 'right' && isLtr) ||\n            (position === 'left' && !isLtr)) {\n            overlayPosition = {overlayX: 'start', overlayY: 'center'};\n        } else {\n            throw getMcTooltipInvalidPositionError(position);\n        }\n\n        const {x, y} = this._invertPosition(overlayPosition.overlayX, overlayPosition.overlayY);\n\n        return {\n            main: overlayPosition,\n            fallback: {overlayX: x, overlayY: y}\n        };\n    }\n\n    /** Inverts an overlay position. */\n    private _invertPosition(x: HorizontalConnectionPos, y: VerticalConnectionPos) {\n        let newX: HorizontalConnectionPos = x;\n        let newY: VerticalConnectionPos = y;\n        if (this.mcPlacement === 'top' || this.mcPlacement === 'bottom') {\n            if (y === 'top') {\n                newY = 'bottom';\n            } else if (y === 'bottom') {\n                newY = 'top';\n            }\n        } else {\n            if (x === 'end') {\n                newX = 'start';\n            } else if (x === 'start') {\n                newX = 'end';\n            }\n        }\n\n        return {x: newX, y: newY};\n    }\n\n    private show(): void {\n        if (!this.disabled) {\n            if (!this.tooltip) {\n                const overlayRef = this._createOverlay();\n                this._detach();\n                this._portal = this._portal || new ComponentPortal(McToolTipComponent, this.hostView);\n                this.tooltip = overlayRef.attach(this._portal).instance;\n                this.tooltip.afterHidden()\n                    .pipe(takeUntil(this._destroyed))\n                    .subscribe(() => this._detach());\n                this.isDynamicTooltip = true;\n                const properties = [\n                    'mcTitle',\n                    'mcMouseEnterDelay',\n                    'mcMouseLeaveDelay',\n                    'mcVisible',\n                    'mcTrigger',\n                    'mcPlacement' ];\n                properties.forEach((property) => this.updateCompValue(property, this[ property ]));\n                this.tooltip.mcVisibleChange.pipe(takeUntil(this.$unsubscribe), distinctUntilChanged())\n                    .subscribe((data) => {\n                        this._visible = data;\n                        this.mcVisibleChange.emit(data);\n                    });\n            }\n            this._updatePosition();\n            this.tooltip.show();\n            this.isTooltipOpen = true;\n        }\n    }\n\n    private hide(): void {\n        if (this.tooltip) {\n            this.tooltip.hide();\n            this.isTooltipOpen = false;\n        }\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { OverlayModule } from '@ptsecurity/cdk/overlay';\n\nimport {\n    McToolTipComponent,\n    McTooltipDirective,\n    MC_TOOLTIP_SCROLL_STRATEGY_FACTORY_PROVIDER\n} from './tooltip.component';\n\n\n@NgModule({\n    declarations: [ McToolTipComponent, McTooltipDirective ],\n    exports: [ McToolTipComponent, McTooltipDirective ],\n    imports: [ BrowserAnimationsModule, CommonModule, OverlayModule ],\n    providers: [MC_TOOLTIP_SCROLL_STRATEGY_FACTORY_PROVIDER],\n    entryComponents: [ McToolTipComponent ]\n})\nexport class McToolTipModule {\n}\n","import { Version } from '@angular/core';\n\n\nexport const VERSION = new Version('0.0.1-260caf0');\n","export enum TimeParts {\n    hours,\n    minutes,\n    seconds\n}\n\nexport enum TimeFormats {\n    HHmmss = 'HH:mm:ss',\n    HHmm = 'HH:mm'\n}\n\nexport const TIMEFORMAT_PLACEHOLDERS: { [timeFormat: string]: string } = {\n    [TimeFormats.HHmmss]: '  :  :  ',\n    [TimeFormats.HHmm]: '  :  '\n};\n\nexport const DEFAULT_TIME_FORMAT: TimeFormats = TimeFormats.HHmm;\n\nexport const HOURS_MINUTES_SECONDS_REGEXP =\n    new RegExp(/^([0-9]|0[0-9]|1[0-9]|2[0-3]):([0-5][0-9]|[0-9]):([0-5][0-9]|[0-9])?$/);\nexport const HOURS_MINUTES_REGEXP = /^([0-9]|0[0-9]|1[0-9]|2[0-3]):([0-5][0-9]|[0-9])?$/;\nexport const HOURS_ONLY_REGEXP = /^([0-9]|0[0-9]|1[0-9]|2[0-3]):?$/;\n\nexport const SECONDS_PER_MINUTE: number = 59;\nexport const MINUTES_PER_HOUR: number = 59;\nexport const HOURS_PER_DAY: number = 23;\n\n// TODO Move it to common CDK\nexport const ARROW_UP_KEYCODE: string = 'ArrowUp';\nexport const ARROW_DOWN_KEYCODE: string = 'ArrowDown';\nexport const ARROW_LEFT_KEYCODE: string = 'ArrowLeft';\nexport const ARROW_RIGHT_KEYCODE: string = 'ArrowRight';\n","/* tslint:disable:no-empty */\n\nimport { ActiveDescendantKeyManager } from '@ptsecurity/cdk/a11y';\nimport { Directionality } from '@ptsecurity/cdk/bidi';\nimport { coerceBooleanProperty } from '@ptsecurity/cdk/coercion';\nimport { SelectionModel } from '@ptsecurity/cdk/collections';\nimport {\n    DOWN_ARROW,\n    END,\n    ENTER,\n    HOME,\n    LEFT_ARROW,\n    RIGHT_ARROW,\n    SPACE,\n    UP_ARROW,\n    A\n} from '@ptsecurity/cdk/keycodes';\nimport {\n    CdkConnectedOverlay,\n    Overlay,\n    RepositionScrollStrategy,\n    IScrollStrategy,\n    ViewportRuler\n} from '@ptsecurity/cdk/overlay';\n\nimport {\n    AfterContentInit, AfterViewInit,\n    Attribute,\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    ContentChild,\n    ContentChildren,\n    Directive,\n    DoCheck,\n    ElementRef,\n    EventEmitter,\n    Inject,\n    InjectionToken,\n    Input,\n    isDevMode,\n    NgZone,\n    OnChanges,\n    OnDestroy,\n    OnInit,\n    Optional,\n    Output,\n    QueryList, Renderer2,\n    Self,\n    SimpleChanges,\n    ViewChild, ViewChildren,\n    ViewEncapsulation\n} from '@angular/core';\nimport { ControlValueAccessor, FormGroupDirective, NgControl, NgForm } from '@angular/forms';\nimport {\n    _countGroupLabelsBeforeOption,\n    _getOptionScrollPosition,\n    CanDisable,\n    CanDisableCtor,\n    CanUpdateErrorState,\n    CanUpdateErrorStateCtor,\n    ErrorStateMatcher,\n    HasTabIndex, HasTabIndexCtor,\n    MC_OPTION_PARENT_COMPONENT,\n    McOptgroup,\n    McOption,\n    McOptionSelectionChange,\n    mixinDisabled,\n    mixinErrorState,\n    mixinTabIndex\n} from '@ptsecurity/mosaic/core';\n\nimport { McFormField, McFormFieldControl } from '@ptsecurity/mosaic/form-field';\nimport { McTag } from '@ptsecurity/mosaic/tag';\n\n\nimport { defer, merge, Observable, Subject } from 'rxjs';\nimport {\n    filter,\n    map,\n    startWith,\n    switchMap,\n    take,\n    takeUntil,\n    distinctUntilChanged\n} from 'rxjs/operators';\n\nimport {\n    getMcSelectDynamicMultipleError,\n    getMcSelectNonArrayValueError,\n    getMcSelectNonFunctionValueError\n} from './select-errors';\n\nimport { mcSelectAnimations } from './select-animations';\n\n\nlet nextUniqueId = 0;\n\n/**\n * The following style constants are necessary to save here in order\n * to properly calculate the alignment of the selected option over\n * the trigger element.\n */\n\n/** The max height of the select's overlay panel */\nexport const SELECT_PANEL_MAX_HEIGHT = 224;\n\n/** The panel's padding on the x-axis */\nexport const SELECT_PANEL_PADDING_X = 1;\n\n/** The panel's x axis padding if it is indented (e.g. there is an option group). */\n/* tslint:disable-next-line:no-magic-numbers */\nexport const SELECT_PANEL_INDENT_PADDING_X = SELECT_PANEL_PADDING_X * 2;\n\n/** The height of the select items in `em` units. */\nexport const SELECT_ITEM_HEIGHT_EM = 2;\n\n/**\n * The select panel will only \"fit\" inside the viewport if it is positioned at\n * this value or more away from the viewport boundary.\n */\nexport const SELECT_PANEL_VIEWPORT_PADDING = 8;\n\n/** Injection token that determines the scroll handling while a select is open. */\nexport const MC_SELECT_SCROLL_STRATEGY =\n    new InjectionToken<() => IScrollStrategy>('mc-select-scroll-strategy');\n\n/** @docs-private */\nexport function MC_SELECT_SCROLL_STRATEGY_PROVIDER_FACTORY(overlay: Overlay):\n    () => RepositionScrollStrategy {\n    return () => overlay.scrollStrategies.reposition();\n}\n\n/** @docs-private */\nexport const MC_SELECT_SCROLL_STRATEGY_PROVIDER = {\n    provide: MC_SELECT_SCROLL_STRATEGY,\n    deps: [Overlay],\n    useFactory: MC_SELECT_SCROLL_STRATEGY_PROVIDER_FACTORY\n};\n\n/** Change event object that is emitted when the select value has changed. */\nexport class McSelectChange {\n    constructor(\n        /** Reference to the select that emitted the change event. */\n        public source: McSelect,\n        /** Current value of the select that emitted the event. */\n        public value: any) {\n    }\n}\n\n// Boilerplate for applying mixins to McSelect.\n/** @docs-private */\nexport class McSelectBase {\n    constructor(\n        public _elementRef: ElementRef,\n        public _defaultErrorStateMatcher: ErrorStateMatcher,\n        public _parentForm: NgForm,\n        public _parentFormGroup: FormGroupDirective,\n        public ngControl: NgControl\n    ) {}\n}\n\nexport const _McSelectMixinBase:\n    CanDisableCtor &\n    HasTabIndexCtor &\n    CanUpdateErrorStateCtor & typeof McSelectBase\n    = mixinTabIndex(mixinDisabled(mixinErrorState(McSelectBase)));\n\n\n/**\n * Allows the user to customize the trigger that is displayed when the select has a value.\n */\n@Directive({ selector: 'mc-select-trigger' })\nexport class McSelectTrigger {}\n\n\n@Component({\n    selector: 'mc-select',\n    exportAs: 'mcSelect',\n    templateUrl: 'select.html',\n    styleUrls: ['./select.css'],\n    inputs: ['disabled', 'tabIndex'],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    host: {\n        '[attr.id]': 'id',\n        '[attr.tabindex]': 'tabIndex',\n        class: 'mc-select',\n        '[class.mc-disabled]': 'disabled',\n        '[class.mc-select-invalid]': 'errorState',\n        '[class.mc-select-required]': 'required',\n        '(keydown)': '_handleKeydown($event)',\n        '(focus)': '_onFocus()',\n        '(blur)': '_onBlur()',\n        '(window:resize)': '_calculateHiddenItems()'\n    },\n    animations: [\n        mcSelectAnimations.transformPanel,\n        mcSelectAnimations.fadeInContent\n    ],\n    providers: [\n        { provide: McFormFieldControl, useExisting: McSelect },\n        { provide: MC_OPTION_PARENT_COMPONENT, useExisting: McSelect }\n    ]\n})\nexport class McSelect extends _McSelectMixinBase implements\n    AfterContentInit, AfterViewInit, OnChanges, OnDestroy, OnInit, DoCheck, ControlValueAccessor, CanDisable,\n    HasTabIndex, McFormFieldControl<any>, CanUpdateErrorState {\n\n    /** The last measured value for the trigger's client bounding rect. */\n    _triggerRect: ClientRect;\n\n    /** The cached font-size of the trigger element. */\n    _triggerFontSize = 0;\n\n    /** Deals with the selection logic. */\n    _selectionModel: SelectionModel<McOption>;\n\n    /** Manages keyboard events for options in the panel. */\n    _keyManager: ActiveDescendantKeyManager<McOption>;\n\n    /** The IDs of child options to be passed to the aria-owns attribute. */\n    _optionIds: string = '';\n\n    /** The value of the select panel's transform-origin property. */\n    _transformOrigin: string = 'top';\n\n    /** Whether the panel's animation is done. */\n    _panelDoneAnimating: boolean = false;\n\n    /** Emits when the panel element is finished transforming in. */\n    _panelDoneAnimatingStream = new Subject<string>();\n\n    /** Strategy that will be used to handle scrolling while the select panel is open. */\n    _scrollStrategy = this._scrollStrategyFactory();\n\n    /**\n     * The y-offset of the overlay panel in relation to the trigger's top start corner.\n     * This must be adjusted to align the selected option text over the trigger text.\n     * when the panel opens. Will change based on the y-position of the selected option.\n     */\n    _offsetY = 0;\n\n    /**\n     * This position config ensures that the top \"start\" corner of the overlay\n     * is aligned with with the top \"start\" of the origin by default (overlapping\n     * the trigger completely). If the panel cannot fit below the trigger, it\n     * will fall back to a position above the trigger.\n     */\n    _positions = [\n        {\n            originX: 'start',\n            originY: 'bottom',\n            overlayX: 'start',\n            overlayY: 'top'\n        },\n        {\n            originX: 'start',\n            originY: 'top',\n            overlayX: 'start',\n            overlayY: 'bottom'\n        }\n    ];\n\n    /** Whether the select is focused. */\n    get focused(): boolean {\n        return this._focused || this._panelOpen;\n    }\n\n    /**\n     * @deprecated Setter to be removed as this property is intended to be readonly.\n     * @breaking-change 8.0.0\n     */\n    set focused(value: boolean) {\n        this._focused = value;\n    }\n\n    /** A name for this control that can be used by `mc-form-field`. */\n    controlType = 'mc-select';\n\n    @ViewChild('trigger') trigger: ElementRef;\n    @ViewChildren(McTag) tags: QueryList<McTag>;\n\n    @ViewChild('panel') panel: ElementRef;\n\n    /** Overlay pane containing the options. */\n    @ViewChild(CdkConnectedOverlay) overlayDir: CdkConnectedOverlay;\n\n    /** All of the defined select options. */\n    @ContentChildren(McOption, { descendants: true }) options: QueryList<McOption>;\n\n    /** All of the defined groups of options. */\n    @ContentChildren(McOptgroup) optionGroups: QueryList<McOptgroup>;\n\n    /** Classes to be passed to the select panel. Supports the same syntax as `ngClass`. */\n    @Input() panelClass: string | string[] | Set<string> | { [key: string]: any };\n\n    /** User-supplied override of the trigger element. */\n    @ContentChild(McSelectTrigger) customTrigger: McSelectTrigger;\n\n    /** Placeholder to be shown if no value has been selected. */\n    @Input()\n    get placeholder(): string {\n        return this._placeholder;\n    }\n\n    set placeholder(value: string) {\n        this._placeholder = value;\n        this.stateChanges.next();\n    }\n\n    /** Whether the component is required. */\n    @Input()\n    get required(): boolean {\n        return this._required;\n    }\n\n    set required(value: boolean) {\n        this._required = coerceBooleanProperty(value);\n        this.stateChanges.next();\n    }\n\n    /** Whether the user should be allowed to select multiple options. */\n    @Input()\n    get multiple(): boolean {\n        return this._multiple;\n    }\n\n    set multiple(value: boolean) {\n        if (this._selectionModel) {\n            throw getMcSelectDynamicMultipleError();\n        }\n\n        this._multiple = coerceBooleanProperty(value);\n    }\n\n    /**\n     * Function to compare the option values with the selected values. The first argument\n     * is a value from an option. The second is a value from the selection. A boolean\n     * should be returned.\n     */\n    @Input()\n    get compareWith() {\n        return this._compareWith;\n    }\n\n    set compareWith(fn: (o1: any, o2: any) => boolean) {\n        /* tslint:disable-next-line:strict-type-predicates */\n        if (typeof fn !== 'function') {\n            throw getMcSelectNonFunctionValueError();\n        }\n\n        this._compareWith = fn;\n\n        if (this._selectionModel) {\n            // A different comparator means the selection could change.\n            this._initializeSelection();\n        }\n    }\n\n    /** Value of the select control. */\n    @Input()\n    get value(): any {\n        return this._value;\n    }\n\n    set value(newValue: any) {\n        if (newValue !== this._value) {\n            this.writeValue(newValue);\n            this._value = newValue;\n        }\n    }\n\n    /** Object used to control when error messages are shown. */\n    @Input() errorStateMatcher: ErrorStateMatcher;\n\n    /**\n     * Function used to sort the values in a select in multiple mode.\n     * Follows the same logic as `Array.prototype.sort`.\n     */\n    @Input() sortComparator: (a: McOption, b: McOption, options: McOption[]) => number;\n\n    @Input()\n    get id(): string {\n        return this._id;\n    }\n\n    set id(value: string) {\n        this._id = value || this._uid;\n        this.stateChanges.next();\n    }\n\n    /** Combined stream of all of the child options' change events. */\n    readonly optionSelectionChanges: Observable<McOptionSelectionChange> = defer(() => {\n        if (this.options) {\n            return merge(...this.options.map((option) => option.onSelectionChange));\n        }\n\n        return this._ngZone.onStable\n            .asObservable()\n            .pipe(take(1), switchMap(() => this.optionSelectionChanges));\n    });\n\n    /** Event emitted when the select panel has been toggled. */\n    @Output() readonly openedChange: EventEmitter<boolean> = new EventEmitter<boolean>();\n\n    /** Event emitted when the select has been opened. */\n    @Output('opened') readonly _openedStream: Observable<void> =\n        this.openedChange.pipe(filter((o) => o), map(() => {}));\n\n    /** Event emitted when the select has been closed. */\n    @Output('closed') readonly _closedStream: Observable<void> =\n        this.openedChange.pipe(filter((o) => !o), map(() => {}));\n\n    /** Event emitted when the selected value has been changed by the user. */\n    @Output() readonly selectionChange: EventEmitter<McSelectChange> = new EventEmitter<McSelectChange>();\n\n    /**\n     * Event that emits whenever the raw value of the select changes. This is here primarily\n     * to facilitate the two-way binding for the `value` input.\n     * @docs-private\n     */\n    @Output() readonly valueChange: EventEmitter<any> = new EventEmitter<any>();\n\n    hiddenItems: number = 0;\n\n    /** Whether or not the overlay panel is open. */\n    private _panelOpen = false;\n\n    /** Whether filling out the select is required in the form. */\n    private _required: boolean = false;\n\n    /** The scroll position of the overlay panel, calculated to center the selected option. */\n    private _scrollTop = 0;\n\n    /** The placeholder displayed in the trigger of the select. */\n    private _placeholder: string;\n\n    /** Whether the component is in multiple selection mode. */\n    private _multiple: boolean = false;\n\n    /** Unique id for this input. */\n    private readonly _uid = `mc-select-${nextUniqueId++}`;\n\n    /** Emits whenever the component is destroyed. */\n    private readonly _destroy = new Subject<void>();\n\n    private _focused = false;\n\n    private _value: any;\n\n    private _id: string;\n\n    constructor(\n        private readonly _viewportRuler: ViewportRuler,\n        private readonly _changeDetectorRef: ChangeDetectorRef,\n        private readonly _ngZone: NgZone,\n        private readonly _renderer: Renderer2,\n        _defaultErrorStateMatcher: ErrorStateMatcher,\n        elementRef: ElementRef,\n        @Optional() private readonly _dir: Directionality,\n        @Optional() _parentForm: NgForm,\n        @Optional() _parentFormGroup: FormGroupDirective,\n        @Optional() private readonly _parentFormField: McFormField,\n        @Self() @Optional() public ngControl: NgControl,\n        @Attribute('tabindex') tabIndex: string,\n        @Inject(MC_SELECT_SCROLL_STRATEGY) private readonly _scrollStrategyFactory\n    ) {\n        super(elementRef, _defaultErrorStateMatcher, _parentForm, _parentFormGroup, ngControl);\n\n        if (this.ngControl) {\n            // Note: we provide the value accessor through here, instead of\n            // the `providers` to avoid running into a circular import.\n            this.ngControl.valueAccessor = this;\n        }\n\n        this.tabIndex = parseInt(tabIndex) || 0;\n\n        // Force setter to be called in case id was not specified.\n        this.id = this.id;\n    }\n\n    ngOnInit() {\n        this._selectionModel = new SelectionModel<McOption>(this.multiple);\n        this.stateChanges.next();\n\n        // We need `distinctUntilChanged` here, because some browsers will\n        // fire the animation end event twice for the same animation. See:\n        // https://github.com/angular/angular/issues/24084\n        this._panelDoneAnimatingStream\n            .pipe(distinctUntilChanged(), takeUntil(this._destroy))\n            .subscribe(() => {\n                if (this.panelOpen) {\n                    this._scrollTop = 0;\n                    this.openedChange.emit(true);\n                } else {\n                    this.openedChange.emit(false);\n                    this._panelDoneAnimating = false;\n                    this.overlayDir.offsetX = 0;\n                    this._changeDetectorRef.markForCheck();\n                }\n            });\n    }\n\n    ngAfterContentInit() {\n        this._initKeyManager();\n\n        this._selectionModel.onChange!\n            .pipe(takeUntil(this._destroy))\n            .subscribe((event) => {\n                event.added.forEach((option) => option.select());\n                event.removed.forEach((option) => option.deselect());\n            });\n\n        this.options.changes\n            .pipe(startWith(null), takeUntil(this._destroy))\n            .subscribe(() => {\n                this._resetOptions();\n                this._initializeSelection();\n            });\n    }\n\n    ngAfterViewInit(): void {\n        this.tags.changes\n            .subscribe(() => {\n                setTimeout(() => this._calculateHiddenItems(), 0);\n            });\n    }\n\n    ngDoCheck() {\n        if (this.ngControl) { this.updateErrorState(); }\n    }\n\n    ngOnChanges(changes: SimpleChanges) {\n        // Updating the disabled state is handled by `mixinDisabled`, but we need to additionally let\n        // the parent form field know to run change detection when the disabled state changes.\n        if (changes.disabled) {\n            this.stateChanges.next();\n        }\n    }\n\n    ngOnDestroy() {\n        this._destroy.next();\n        this._destroy.complete();\n        this.stateChanges.complete();\n    }\n\n    /** `View -> model callback called when value changes` */\n    _onChange: (value: any) => void = () => {};\n\n    /** `View -> model callback called when select has been touched` */\n    _onTouched = () => {};\n\n    /** Toggles the overlay panel open or closed. */\n    toggle(): void {\n        if (this.panelOpen) {\n            this.close();\n        } else {\n            this.open();\n        }\n    }\n\n    /** Opens the overlay panel. */\n    open(): void {\n        if (this.disabled || !this.options || !this.options.length || this._panelOpen) { return; }\n\n        this._triggerRect = this.trigger.nativeElement.getBoundingClientRect();\n        // Note: The computed font-size will be a string pixel value (e.g. \"16px\").\n        // `parseInt` ignores the trailing 'px' and converts this to a number.\n        this._triggerFontSize = parseInt(getComputedStyle(this.trigger.nativeElement)['font-size']);\n\n        this._panelOpen = true;\n        this._keyManager.withHorizontalOrientation(null);\n        this._calculateOverlayPosition();\n        this._highlightCorrectOption();\n        this._changeDetectorRef.markForCheck();\n\n        // Set the font size on the panel element once it exists.\n        this._ngZone.onStable.asObservable()\n            .pipe(take(1))\n            .subscribe(() => {\n                if (this._triggerFontSize && this.overlayDir.overlayRef &&\n                    this.overlayDir.overlayRef.overlayElement) {\n                    this.overlayDir.overlayRef.overlayElement.style.fontSize = `${this._triggerFontSize}px`;\n                }\n            });\n    }\n\n    /** Closes the overlay panel and focuses the host element. */\n    close(): void {\n        if (this._panelOpen) {\n            this._panelOpen = false;\n            this._keyManager.withHorizontalOrientation(this._isRtl() ? 'rtl' : 'ltr');\n            this._changeDetectorRef.markForCheck();\n            this._onTouched();\n        }\n    }\n\n    /**\n     * Sets the select's value. Part of the ControlValueAccessor interface\n     * required to integrate with Angular's core forms API.\n     *\n     * @param value New value to be written to the model.\n     */\n    writeValue(value: any): void {\n        if (this.options) {\n            this._setSelectionByValue(value);\n        }\n    }\n\n    /**\n     * Saves a callback function to be invoked when the select's value\n     * changes from user input. Part of the ControlValueAccessor interface\n     * required to integrate with Angular's core forms API.\n     *\n     * @param fn Callback to be triggered when the value changes.\n     */\n    registerOnChange(fn: (value: any) => void): void {\n        this._onChange = fn;\n    }\n\n    /**\n     * Saves a callback function to be invoked when the select is blurred\n     * by the user. Part of the ControlValueAccessor interface required\n     * to integrate with Angular's core forms API.\n     *\n     * @param fn Callback to be triggered when the component has been touched.\n     */\n    registerOnTouched(fn: () => {}): void {\n        this._onTouched = fn;\n    }\n\n    /**\n     * Disables the select. Part of the ControlValueAccessor interface required\n     * to integrate with Angular's core forms API.\n     *\n     * @param isDisabled Sets whether the component is disabled.\n     */\n    setDisabledState(isDisabled: boolean): void {\n        this.disabled = isDisabled;\n        this._changeDetectorRef.markForCheck();\n        this.stateChanges.next();\n    }\n\n    get panelOpen(): boolean {\n        return this._panelOpen;\n    }\n\n    get selected(): McOption | McOption[] {\n        return this.multiple ? this._selectionModel.selected : this._selectionModel.selected[0];\n    }\n\n    get triggerValue(): string {\n        if (this.empty) { return ''; }\n\n        if (this._multiple) {\n            const selectedOptions = this._selectionModel.selected.map((option) => option.viewValue);\n\n            if (this._isRtl()) { selectedOptions.reverse(); }\n\n            return selectedOptions.join(', ');\n        }\n\n        return this._selectionModel.selected[0].viewValue;\n    }\n\n    get triggerValues(): McOption[] {\n        if (this.empty) { return []; }\n\n        if (this._multiple) {\n            const selectedOptions = this._selectionModel.selected;\n\n            if (this._isRtl()) { selectedOptions.reverse(); }\n\n            return selectedOptions;\n        }\n\n        return [this._selectionModel.selected[0]];\n    }\n\n    get empty(): boolean {\n        return !this._selectionModel || this._selectionModel.isEmpty();\n    }\n\n    _isRtl(): boolean {\n        return this._dir ? this._dir.value === 'rtl' : false;\n    }\n\n    _handleKeydown(event: KeyboardEvent): void {\n        if (!this.disabled) {\n            if (this.panelOpen) {\n                this._handleOpenKeydown(event);\n            } else {\n                this._handleClosedKeydown(event);\n            }\n        }\n    }\n\n    /**\n     * When the panel content is done fading in, the _panelDoneAnimating property is\n     * set so the proper class can be added to the panel.\n     */\n    _onFadeInDone(): void {\n        this._panelDoneAnimating = this.panelOpen;\n        this._changeDetectorRef.markForCheck();\n    }\n\n    _onFocus() {\n        if (!this.disabled) {\n            this._focused = true;\n            this.stateChanges.next();\n        }\n    }\n\n    /**\n     * Calls the touched callback only if the panel is closed. Otherwise, the trigger will\n     * \"blur\" to the panel when it opens, causing a false positive.\n     */\n    _onBlur() {\n        this._focused = false;\n\n        if (!this.disabled && !this.panelOpen) {\n            this._onTouched();\n            this._changeDetectorRef.markForCheck();\n            this.stateChanges.next();\n        }\n    }\n\n    /**\n     * Callback that is invoked when the overlay panel has been attached.\n     */\n    _onAttached(): void {\n        this.overlayDir.positionChange\n            .pipe(take(1))\n            .subscribe(() => {\n                this._changeDetectorRef.detectChanges();\n                this._calculateOverlayOffsetX();\n                this.panel.nativeElement.scrollTop = this._scrollTop;\n            });\n    }\n\n    /** Returns the theme to be used on the panel. */\n    _getPanelTheme(): string {\n        return this._parentFormField ? `mc-${this._parentFormField.color}` : '';\n    }\n\n    /** Focuses the select element. */\n    focus(): void {\n        this._elementRef.nativeElement.focus();\n    }\n\n    /**\n     * Calculates the scroll position of the select's overlay panel.\n     *\n     * Attempts to center the selected option in the panel. If the option is\n     * too high or too low in the panel to be scrolled to the center, it clamps the\n     * scroll position to the min or max scroll positions respectively.\n     */\n    _calculateOverlayScroll(selectedIndex: number, scrollBuffer: number, maxScroll: number): number {\n        const itemHeight = this._getItemHeight();\n        const optionOffsetFromScrollTop = itemHeight * selectedIndex;\n\n        /* tslint:disable-next-line:no-magic-numbers */\n        const halfOptionHeight = itemHeight / 2;\n\n        // Starts at the optionOffsetFromScrollTop, which scrolls the option to the top of the\n        // scroll container, then subtracts the scroll buffer to scroll the option down to\n        // the center of the overlay panel. Half the option height must be re-added to the\n        // scrollTop so the option is centered based on its middle, not its top edge.\n        const optimalScrollPosition = optionOffsetFromScrollTop - scrollBuffer + halfOptionHeight;\n\n        return Math.min(Math.max(0, optimalScrollPosition), maxScroll);\n    }\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    onContainerClick() {\n        this.focus();\n        this.open();\n    }\n\n    /** Invoked when an option is clicked. */\n    onRemoveMatcherItem(option: McOption, $event): void {\n        $event.stopPropagation();\n\n        option.deselect();\n    }\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    get shouldLabelFloat(): boolean {\n        return this._panelOpen || !this.empty;\n    }\n\n    _calculateHiddenItems(): void {\n        if (this.empty) { return; }\n\n        let visibleItems: number = 0;\n        const totalItemsWidth = this._getTotalItemsWidthInMatcher();\n        let totalVisibleItemsWidth: number = 0;\n        const itemMargin: number = 4;\n\n        this.tags.forEach((tag) => {\n            if (tag.nativeElement.offsetTop < tag.nativeElement.offsetHeight) {\n                totalVisibleItemsWidth += tag.nativeElement.getBoundingClientRect().width + itemMargin;\n                visibleItems++;\n            }\n        });\n\n        this.hiddenItems = (this.selected as ArrayLike<McOption>).length - visibleItems;\n\n        if (this.hiddenItems) {\n            const itemsCounter = this.trigger.nativeElement.querySelector('.mc-select__match-hidden-text');\n            const matcherList = this.trigger.nativeElement.querySelector('.mc-select__match-list');\n\n            const itemsCounterShowed = itemsCounter.offsetTop < itemsCounter.offsetHeight;\n            // const itemsCounterWidth: number = itemsCounter.getBoundingClientRect().width;\n            const itemsCounterWidth: number = 86;\n\n            const matcherListWidth: number = matcherList.getBoundingClientRect().width;\n            const matcherWidth: number = matcherListWidth + itemsCounterWidth;\n\n            if (itemsCounterShowed && (totalItemsWidth < matcherWidth)) { this.hiddenItems = 0; }\n\n            if (\n                totalVisibleItemsWidth === matcherListWidth ||\n                (totalVisibleItemsWidth + itemsCounterWidth) < matcherListWidth\n            ) {\n                this._changeDetectorRef.markForCheck();\n\n                return ;\n            } else if (!itemsCounterShowed && (totalItemsWidth + itemsCounterWidth) > matcherWidth) {\n                this.hiddenItems++;\n            }\n        }\n\n        this._changeDetectorRef.markForCheck();\n    }\n\n    private _getTotalItemsWidthInMatcher(): number {\n        const triggerClone = this.trigger.nativeElement.cloneNode(true);\n        triggerClone.querySelector('.mc-select__match-hidden-text').remove();\n\n        this._renderer.setStyle(triggerClone, 'position', 'absolute');\n        this._renderer.setStyle(triggerClone, 'visibility', 'hidden');\n        this._renderer.setStyle(triggerClone, 'top', '-100%');\n        this._renderer.setStyle(triggerClone, 'left', '0');\n\n        this._renderer.appendChild(this.trigger.nativeElement, triggerClone);\n\n        let totalItemsWidth: number = 0;\n        const itemMargin: number = 4;\n        triggerClone.querySelectorAll('mc-tag').forEach((item) => {\n            totalItemsWidth += item.getBoundingClientRect().width as number + itemMargin;\n        });\n\n        triggerClone.remove();\n\n        return totalItemsWidth;\n    }\n\n    /** Handles keyboard events while the select is closed. */\n    private _handleClosedKeydown(event: KeyboardEvent): void {\n        /* tslint:disable-next-line */\n        const keyCode = event.keyCode;\n        const isArrowKey = keyCode === DOWN_ARROW || keyCode === UP_ARROW ||\n            keyCode === LEFT_ARROW || keyCode === RIGHT_ARROW;\n        const isOpenKey = keyCode === ENTER || keyCode === SPACE;\n\n        // Open the select on ALT + arrow key to match the native <select>\n        if (isOpenKey || ((this.multiple || event.altKey) && isArrowKey)) {\n            event.preventDefault(); // prevents the page from scrolling down when pressing space\n            this.open();\n        } else if (!this.multiple) {\n            this._keyManager.onKeydown(event);\n        }\n    }\n\n    /** Handles keyboard events when the selected is open. */\n    private _handleOpenKeydown(event: KeyboardEvent): void {\n        /* tslint:disable-next-line */\n        const keyCode = event.keyCode;\n        const isArrowKey = keyCode === DOWN_ARROW || keyCode === UP_ARROW;\n        const manager = this._keyManager;\n\n        if (keyCode === HOME || keyCode === END) {\n            event.preventDefault();\n\n            if (keyCode === HOME) {\n                manager.setFirstItemActive();\n            } else {\n                manager.setLastItemActive();\n            }\n\n        } else if (isArrowKey && event.altKey) {\n            // Close the select on ALT + arrow key to match the native <select>\n            event.preventDefault();\n            this.close();\n        } else if ((keyCode === ENTER || keyCode === SPACE) && manager.activeItem) {\n            event.preventDefault();\n            manager.activeItem._selectViaInteraction();\n        } else if (this._multiple && keyCode === A && event.ctrlKey) {\n            event.preventDefault();\n            const hasDeselectedOptions = this.options.some((option) => !option.selected);\n            this.options.forEach((option) => {\n                if (hasDeselectedOptions && !option.disabled) {\n                    option.select();\n                } else {\n                    option.deselect();\n                }\n            });\n        } else {\n            const previouslyFocusedIndex = manager.activeItemIndex;\n\n            manager.onKeydown(event);\n\n            if (this._multiple && isArrowKey && event.shiftKey && manager.activeItem &&\n                manager.activeItemIndex !== previouslyFocusedIndex) {\n                manager.activeItem._selectViaInteraction();\n            }\n        }\n    }\n\n    private _initializeSelection(): void {\n        // Defer setting the value in order to avoid the \"Expression\n        // has changed after it was checked\" errors from Angular.\n        Promise.resolve().then(() => {\n            this._setSelectionByValue(this.ngControl ? this.ngControl.value : this._value);\n        });\n    }\n\n    /**\n     * Sets the selected option based on a value. If no option can be\n     * found with the designated value, the select trigger is cleared.\n     */\n    private _setSelectionByValue(value: any | any[]): void {\n        if (this.multiple && value) {\n            if (!Array.isArray(value)) {\n                throw getMcSelectNonArrayValueError();\n            }\n\n            this._selectionModel.clear();\n            value.forEach((currentValue: any) => this._selectValue(currentValue));\n            this._sortValues();\n        } else {\n            this._selectionModel.clear();\n            const correspondingOption = this._selectValue(value);\n\n            // Shift focus to the active item. Note that we shouldn't do this in multiple\n            // mode, because we don't know what option the user interacted with last.\n            if (correspondingOption) {\n                this._keyManager.setActiveItem(correspondingOption);\n            }\n        }\n\n        this._changeDetectorRef.markForCheck();\n    }\n\n    /**\n     * Finds and selects and option based on its value.\n     * @returns Option that has the corresponding value.\n     */\n    private _selectValue(value: any): McOption | undefined {\n        const correspondingOption = this.options.find((option: McOption) => {\n            try {\n                // Treat null as a special reset value.\n                return option.value != null && this._compareWith(option.value, value);\n            } catch (error) {\n                if (isDevMode()) {\n                    // Notify developers of errors in their comparator.\n                    console.warn(error);\n                }\n\n                return false;\n            }\n        });\n\n        if (correspondingOption) {\n            this._selectionModel.select(correspondingOption);\n        }\n\n        return correspondingOption;\n    }\n\n    /** Sets up a key manager to listen to keyboard events on the overlay panel. */\n    private _initKeyManager() {\n        this._keyManager = new ActiveDescendantKeyManager<McOption>(this.options)\n            .withTypeAhead()\n            .withVerticalOrientation()\n            .withHorizontalOrientation(this._isRtl() ? 'rtl' : 'ltr');\n\n        this._keyManager.tabOut\n            .pipe(takeUntil(this._destroy))\n            .subscribe(() => {\n                // Restore focus to the trigger before closing. Ensures that the focus\n                // position won't be lost if the user got focus into the overlay.\n                this.focus();\n                this.close();\n            });\n\n        this._keyManager.change\n            .pipe(takeUntil(this._destroy))\n            .subscribe(() => {\n                if (this._panelOpen && this.panel) {\n                    this._scrollActiveOptionIntoView();\n                } else if (!this._panelOpen && !this.multiple && this._keyManager.activeItem) {\n                    this._keyManager.activeItem._selectViaInteraction();\n                }\n            });\n    }\n\n    /** Drops current option subscriptions and IDs and resets from scratch. */\n    private _resetOptions(): void {\n        const changedOrDestroyed = merge(this.options.changes, this._destroy);\n\n        this.optionSelectionChanges\n            .pipe(takeUntil(changedOrDestroyed))\n            .subscribe((event) => {\n                this._onSelect(event.source, event.isUserInput);\n\n                if (event.isUserInput && !this.multiple && this._panelOpen) {\n                    this.close();\n                    this.focus();\n                }\n            });\n\n        // Listen to changes in the internal state of the options and react accordingly.\n        // Handles cases like the labels of the selected options changing.\n        merge(...this.options.map((option) => option._stateChanges))\n            .pipe(takeUntil(changedOrDestroyed))\n            .subscribe(() => {\n                this._changeDetectorRef.markForCheck();\n                this.stateChanges.next();\n            });\n\n        this._setOptionIds();\n    }\n\n    /** Invoked when an option is clicked. */\n    private _onSelect(option: McOption, isUserInput: boolean): void {\n        const wasSelected = this._selectionModel.isSelected(option);\n\n        if (option.value == null && !this._multiple) {\n            option.deselect();\n            this._selectionModel.clear();\n            this._propagateChanges(option.value);\n        } else {\n            if (option.selected) {\n                this._selectionModel.select(option);\n            } else {\n                this._selectionModel.deselect(option);\n            }\n\n            if (isUserInput) {\n                this._keyManager.setActiveItem(option);\n            }\n\n            if (this.multiple) {\n                this._sortValues();\n\n                if (isUserInput) {\n                    // In case the user selected the option with their mouse, we\n                    // want to restore focus back to the trigger, in order to\n                    // prevent the select keyboard controls from clashing with\n                    // the ones from `mc-option`.\n                    this.focus();\n                }\n            }\n        }\n\n        if (wasSelected !== this._selectionModel.isSelected(option)) {\n            this._propagateChanges();\n        }\n\n        this.stateChanges.next();\n    }\n\n    /** Sorts the selected values in the selected based on their order in the panel. */\n    private _sortValues() {\n        if (this.multiple) {\n            const options = this.options.toArray();\n\n            this._selectionModel.sort((a, b) => {\n                return this.sortComparator ? this.sortComparator(a, b, options) :\n                    options.indexOf(a) - options.indexOf(b);\n            });\n            this.stateChanges.next();\n        }\n    }\n\n    /** Emits change event to set the model value. */\n    private _propagateChanges(fallbackValue?: any): void {\n        let valueToEmit: any = null;\n\n        if (this.multiple) {\n            valueToEmit = (this.selected as McOption[]).map((option) => option.value);\n        } else {\n            valueToEmit = this.selected ? (this.selected as McOption).value : fallbackValue;\n        }\n\n        this._value = valueToEmit;\n        this.valueChange.emit(valueToEmit);\n        this._onChange(valueToEmit);\n        this.selectionChange.emit(new McSelectChange(this, valueToEmit));\n        this._changeDetectorRef.markForCheck();\n    }\n\n    /** Records option IDs to pass to the aria-owns property. */\n    private _setOptionIds() {\n        this._optionIds = this.options.map((option) => option.id).join(' ');\n    }\n\n    /**\n     * Highlights the selected item. If no option is selected, it will highlight\n     * the first item instead.\n     */\n    private _highlightCorrectOption(): void {\n        if (this._keyManager) {\n            if (this.empty) {\n                this._keyManager.setFirstItemActive();\n            } else {\n                this._keyManager.setActiveItem(this._selectionModel.selected[0]);\n            }\n        }\n    }\n\n    /** Scrolls the active option into view. */\n    private _scrollActiveOptionIntoView(): void {\n        const activeOptionIndex = this._keyManager.activeItemIndex || 0;\n        const labelCount = _countGroupLabelsBeforeOption(activeOptionIndex, this.options, this.optionGroups);\n\n        this.panel.nativeElement.scrollTop = _getOptionScrollPosition(\n            activeOptionIndex + labelCount,\n            this._getItemHeight(),\n            this.panel.nativeElement.scrollTop,\n            SELECT_PANEL_MAX_HEIGHT\n        );\n    }\n\n    /** Gets the index of the provided option in the option list. */\n    private _getOptionIndex(option: McOption): number | undefined {\n        /* tslint:disable-next-line */\n        return this.options.reduce((result: number, current: McOption, index: number) => {\n            /* tslint:disable-next-line:strict-type-predicates */\n            return result === undefined ? (option === current ? index : undefined) : result;\n        }, undefined);\n    }\n\n    /** Calculates the scroll position and x- and y-offsets of the overlay panel. */\n    private _calculateOverlayPosition(): void {\n        const itemHeight = this._getItemHeight();\n        const items = this._getItemCount();\n        const panelHeight = Math.min(items * itemHeight, SELECT_PANEL_MAX_HEIGHT);\n        const scrollContainerHeight = items * itemHeight;\n\n        // The farthest the panel can be scrolled before it hits the bottom\n        const maxScroll = scrollContainerHeight - panelHeight;\n\n        // If no value is selected we open the popup to the first item.\n        let selectedOptionOffset =\n            this.empty ? 0 : this._getOptionIndex(this._selectionModel.selected[0])!;\n\n        selectedOptionOffset += _countGroupLabelsBeforeOption(selectedOptionOffset, this.options,\n            this.optionGroups);\n\n        // We must maintain a scroll buffer so the selected option will be scrolled to the\n        // center of the overlay panel rather than the top.\n        /* tslint:disable-next-line:no-magic-numbers */\n        const scrollBuffer = panelHeight / 2;\n        this._scrollTop = this._calculateOverlayScroll(selectedOptionOffset, scrollBuffer, maxScroll);\n        this._offsetY = this._calculateOverlayOffsetY();\n\n        this._checkOverlayWithinViewport(maxScroll);\n    }\n\n    /**\n     * Sets the x-offset of the overlay panel in relation to the trigger's top start corner.\n     * This must be adjusted to align the selected option text over the trigger text when\n     * the panel opens. Will change based on LTR or RTL text direction. Note that the offset\n     * can't be calculated until the panel has been attached, because we need to know the\n     * content width in order to constrain the panel within the viewport.\n     */\n    private _calculateOverlayOffsetX(): void {\n        const overlayRect = this.overlayDir.overlayRef.overlayElement.getBoundingClientRect();\n        const viewportSize = this._viewportRuler.getViewportSize();\n        const isRtl = this._isRtl();\n        /* tslint:disable-next-line:no-magic-numbers */\n        const paddingWidth = SELECT_PANEL_PADDING_X * 2;\n        let offsetX: number;\n\n        const selected = this._selectionModel.selected[0] || this.options.first;\n        offsetX = selected && selected.group ? SELECT_PANEL_INDENT_PADDING_X : SELECT_PANEL_PADDING_X;\n\n        // Invert the offset in LTR.\n        if (!isRtl) { offsetX *= -1; }\n\n        // Determine how much the select overflows on each side.\n        const leftOverflow = 0 - (overlayRect.left + offsetX - (isRtl ? paddingWidth : 0));\n        const rightOverflow = overlayRect.right + offsetX - viewportSize.width\n            + (isRtl ? 0 : paddingWidth);\n\n        // If the element overflows on either side, reduce the offset to allow it to fit.\n        if (leftOverflow > 0) {\n            offsetX += leftOverflow + SELECT_PANEL_VIEWPORT_PADDING;\n        } else if (rightOverflow > 0) {\n            offsetX -= rightOverflow + SELECT_PANEL_VIEWPORT_PADDING;\n        }\n\n        // Set the offset directly in order to avoid having to go through change detection and\n        // potentially triggering \"changed after it was checked\" errors. Round the value to avoid\n        // blurry content in some browsers.\n        this.overlayDir.offsetX = Math.round(offsetX);\n        this.overlayDir.overlayRef.updatePosition();\n    }\n\n    /**\n     * Calculates the y-offset of the select's overlay panel in relation to the\n     * top start corner of the trigger. It has to be adjusted in order for the\n     * selected option to be aligned over the trigger when the panel opens.\n     */\n    private _calculateOverlayOffsetY(): number {\n        // const itemHeight = this._getItemHeight();\n        // const optionHeightAdjustment = (itemHeight - this._triggerRect.height) / 2;\n\n        // todo I'm not sure that we will use it\n        return 0;\n        // return Math.round(-optionHeightAdjustment);\n    }\n\n    /**\n     * Checks that the attempted overlay position will fit within the viewport.\n     * If it will not fit, tries to adjust the scroll position and the associated\n     * y-offset so the panel can open fully on-screen. If it still won't fit,\n     * sets the offset back to 0 to allow the fallback position to take over.\n     */\n    private _checkOverlayWithinViewport(maxScroll: number): void {\n        const itemHeight = this._getItemHeight();\n        const viewportSize = this._viewportRuler.getViewportSize();\n\n        const topSpaceAvailable = this._triggerRect.top - SELECT_PANEL_VIEWPORT_PADDING;\n        const bottomSpaceAvailable =\n            viewportSize.height - this._triggerRect.bottom - SELECT_PANEL_VIEWPORT_PADDING;\n\n        const panelHeightTop = Math.abs(this._offsetY);\n        const totalPanelHeight =\n            Math.min(this._getItemCount() * itemHeight, SELECT_PANEL_MAX_HEIGHT);\n        const panelHeightBottom = totalPanelHeight - panelHeightTop - this._triggerRect.height;\n\n        if (panelHeightBottom > bottomSpaceAvailable) {\n            this._adjustPanelUp(panelHeightBottom, bottomSpaceAvailable);\n        } else if (panelHeightTop > topSpaceAvailable) {\n            this._adjustPanelDown(panelHeightTop, topSpaceAvailable, maxScroll);\n        } else {\n            this._transformOrigin = this._getOriginBasedOnOption();\n        }\n    }\n\n    /** Adjusts the overlay panel up to fit in the viewport. */\n    private _adjustPanelUp(panelHeightBottom: number, bottomSpaceAvailable: number) {\n        // Browsers ignore fractional scroll offsets, so we need to round.\n        const distanceBelowViewport = Math.round(panelHeightBottom - bottomSpaceAvailable);\n\n        // Scrolls the panel up by the distance it was extending past the boundary, then\n        // adjusts the offset by that amount to move the panel up into the viewport.\n        this._scrollTop -= distanceBelowViewport;\n        this._offsetY -= distanceBelowViewport;\n        this._transformOrigin = this._getOriginBasedOnOption();\n\n        // If the panel is scrolled to the very top, it won't be able to fit the panel\n        // by scrolling, so set the offset to 0 to allow the fallback position to take\n        // effect.\n        if (this._scrollTop <= 0) {\n            this._scrollTop = 0;\n            this._offsetY = 0;\n            this._transformOrigin = `50% bottom 0px`;\n        }\n    }\n\n    /** Adjusts the overlay panel down to fit in the viewport. */\n    private _adjustPanelDown(panelHeightTop: number, topSpaceAvailable: number, maxScroll: number) {\n        // Browsers ignore fractional scroll offsets, so we need to round.\n        const distanceAboveViewport = Math.round(panelHeightTop - topSpaceAvailable);\n\n        // Scrolls the panel down by the distance it was extending past the boundary, then\n        // adjusts the offset by that amount to move the panel down into the viewport.\n        this._scrollTop += distanceAboveViewport;\n        this._offsetY += distanceAboveViewport;\n        this._transformOrigin = this._getOriginBasedOnOption();\n\n        // If the panel is scrolled to the very bottom, it won't be able to fit the\n        // panel by scrolling, so set the offset to 0 to allow the fallback position\n        // to take effect.\n        if (this._scrollTop >= maxScroll) {\n            this._scrollTop = maxScroll;\n            this._offsetY = 0;\n            this._transformOrigin = `50% top 0px`;\n\n            return;\n        }\n    }\n\n    /** Sets the transform origin point based on the selected option. */\n    private _getOriginBasedOnOption(): string {\n        const itemHeight = this._getItemHeight();\n        /* tslint:disable-next-line:no-magic-numbers */\n        const optionHeightAdjustment = (itemHeight - this._triggerRect.height) / 2;\n        /* tslint:disable-next-line:no-magic-numbers */\n        const originY = Math.abs(this._offsetY) - optionHeightAdjustment + itemHeight / 2;\n\n        return `50% ${originY}px 0px`;\n    }\n\n    /** Calculates the amount of items in the select. This includes options and group labels. */\n    private _getItemCount(): number {\n        return this.options.length + this.optionGroups.length;\n    }\n\n    /** Calculates the height of the select's options. */\n    private _getItemHeight(): number {\n        /* tslint:disable-next-line:no-magic-numbers */\n        return 32;\n        // return this._triggerFontSize * SELECT_ITEM_HEIGHT_EM;\n    }\n\n    /** Comparison function to specify which option is displayed. Defaults to object equality. */\n    private _compareWith = (o1: any, o2: any) => o1 === o2;\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { OverlayModule } from '@ptsecurity/cdk/overlay';\nimport { McOptionModule } from '@ptsecurity/mosaic/core';\nimport { McFormFieldModule } from '@ptsecurity/mosaic/form-field';\nimport { McIconModule } from '@ptsecurity/mosaic/icon';\nimport { McTagModule } from '@ptsecurity/mosaic/tag';\n\nimport { MC_SELECT_SCROLL_STRATEGY_PROVIDER, McSelect, McSelectTrigger } from './select.component';\n\n\n@NgModule({\n    imports: [\n        CommonModule,\n        OverlayModule,\n        McOptionModule,\n        McIconModule,\n        McTagModule\n    ],\n    exports: [McFormFieldModule, McSelect, McSelectTrigger, McOptionModule, CommonModule],\n    declarations: [McSelect, McSelectTrigger],\n    providers: [MC_SELECT_SCROLL_STRATEGY_PROVIDER]\n})\nexport class McSelectModule {}\n","import {\n    ChangeDetectionStrategy,\n    Component,\n    Directive,\n    ElementRef,\n    Input,\n    NgZone, OnDestroy,\n    OnInit,\n    Renderer2,\n    ViewEncapsulation\n} from '@angular/core';\n\nimport { coerceBooleanProperty, coerceCssPixelValue, coerceNumberProperty } from '@ptsecurity/cdk/coercion';\n\n\ninterface IArea {\n    area: McSplitterAreaDirective;\n    index: number;\n    order: number;\n    initialSize: number;\n}\n\ninterface IPoint {\n    x: number;\n    y: number;\n}\n\n\nconst enum AttributeProperty {\n    Disabled = 'disabled'\n}\n\nconst enum Cursor {\n    Default = 'default',\n    ResizeColumn = 'col-resize',\n    ResizeRow = 'row-resize'\n}\n\nconst enum StyleProperty {\n    Cursor = 'cursor',\n    Flex = 'flex',\n    FlexBasis = 'flex-basis',\n    FlexDirection = 'flex-direction',\n    Height = 'height',\n    MaxWidth = 'max-width',\n    MinHeight = 'min-height',\n    MinWidth = 'minWidth',\n    OffsetHeight = 'offsetHeight',\n    OffsetWidth = 'offsetWidth',\n    Order = 'order',\n    Width = 'width'\n}\n\nconst enum State {\n    Disabled = 'disabled',\n    Horizontal = 'horizontal',\n    Vertical = 'vertical'\n}\n\nexport const enum Direction {\n    Horizontal = 'horizontal',\n    Vertical = 'vertical'\n}\n\n@Component({\n    selector: 'mc-splitter',\n    preserveWhitespaces: false,\n    styleUrls: ['splitter.css'],\n    templateUrl: './splitter.component.html',\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class McSplitterComponent implements OnInit {\n    readonly areas: IArea[] = [];\n\n    private _direction: Direction;\n    private _disabled: boolean = false;\n    private _gutterSize: number = 6;\n\n    private isDragging: boolean = false;\n\n    private readonly areaPositionDivider: number = 2;\n    private readonly listeners: (() => void)[] = [];\n\n    @Input()\n    set direction(direction: Direction) {\n        this._direction = direction;\n    }\n\n    get direction(): Direction {\n        return this._direction;\n    }\n\n    @Input()\n    set disabled(disabled: boolean) {\n        this._disabled = coerceBooleanProperty(disabled);\n    }\n\n    get disabled(): boolean {\n        return this._disabled;\n    }\n\n    @Input()\n    set gutterSize(gutterSize: number) {\n        const size = coerceNumberProperty(gutterSize);\n        this._gutterSize = size > 0 ? size : this.gutterSize;\n    }\n\n    get gutterSize(): number {\n        return this._gutterSize;\n    }\n\n    constructor(private elementRef: ElementRef,\n                private ngZone: NgZone,\n                private renderer: Renderer2) {}\n\n    addArea(area: McSplitterAreaDirective): void {\n        const index: number = this.areas.length;\n        const order: number = index * this.areaPositionDivider;\n        const size: number = area.getSize();\n\n        area.setOrder(order);\n\n        this.areas.push({\n            area,\n            index,\n            order,\n            initialSize: size\n        });\n    }\n\n    ngOnInit(): void {\n        if (!this.direction) {\n            this.direction = Direction.Horizontal;\n        }\n\n        this.setStyle(StyleProperty.FlexDirection, this.isVertical() ? 'column' : 'row');\n    }\n\n    onMouseDown(event: MouseEvent, leftAreaIndex: number, rightAreaIndex: number) {\n        if (this.disabled) {\n            return;\n        }\n\n        const leftArea = this.areas[leftAreaIndex];\n        const rightArea = this.areas[rightAreaIndex];\n\n        const startPoint: IPoint = {\n            x: event.screenX,\n            y: event.screenY\n        };\n\n        leftArea.initialSize = leftArea.area.getSize();\n        rightArea.initialSize = rightArea.area.getSize();\n\n        this.areas.forEach((item) => {\n            const size = item.area.getSize();\n            item.area.disableFlex();\n            item.area.setSize(size);\n        });\n\n        this.ngZone.runOutsideAngular(() => {\n            this.listeners.push(\n                this.renderer.listen(\n                    'document',\n                    'mouseup',\n                    () => this.onMouseUp()\n                )\n            );\n        });\n\n        this.ngZone.runOutsideAngular(() => {\n            this.listeners.push(\n                this.renderer.listen(\n                    'document',\n                    'mousemove',\n                    (e: MouseEvent) => this.onMouseMove(e, startPoint, leftArea, rightArea)\n                )\n            );\n        });\n\n        this.isDragging = true;\n    }\n\n    removeArea(area: McSplitterAreaDirective): void {\n        let indexToRemove: number = -1;\n\n        this.areas.some((item, index) => {\n            if (item.area === area) {\n                indexToRemove = index;\n\n                return true;\n            }\n\n            return false;\n        });\n\n        if (indexToRemove === -1) {\n            return;\n        }\n\n        this.areas.splice(indexToRemove, 1);\n    }\n\n    private isVertical(): boolean {\n        return this.direction === Direction.Vertical;\n    }\n\n    private onMouseMove(event: MouseEvent, startPoint: IPoint, leftArea: IArea, rightArea: IArea) {\n        if (!this.isDragging || this.disabled) {\n            return;\n        }\n\n        const endPoint: IPoint = {\n            x: event.screenX,\n            y: event.screenY\n        };\n\n        const offset = this.isVertical()\n            ? startPoint.y - endPoint.y\n            : startPoint.x - endPoint.x;\n\n        const newLeftAreaSize = leftArea.initialSize - offset;\n        const newRightAreaSize = rightArea.initialSize + offset;\n\n        const minLeftAreaSize = leftArea.area.getMinSize();\n        const minRightAreaSize = rightArea.area.getMinSize();\n\n        if (newLeftAreaSize <= minLeftAreaSize || newRightAreaSize <= minRightAreaSize) {\n            const rightAreaOffset = leftArea.initialSize - minLeftAreaSize;\n\n            leftArea.area.setSize(minLeftAreaSize);\n            rightArea.area.setSize(rightArea.initialSize + rightAreaOffset);\n        } else if (newLeftAreaSize <= 0) {\n            leftArea.area.setSize(0);\n            rightArea.area.setSize(rightArea.initialSize + leftArea.initialSize);\n        } else if (newRightAreaSize <= 0) {\n            leftArea.area.setSize(rightArea.initialSize + leftArea.initialSize);\n            rightArea.area.setSize(0);\n        } else {\n            leftArea.area.setSize(newLeftAreaSize);\n            rightArea.area.setSize(newRightAreaSize);\n        }\n    }\n\n    private onMouseUp() {\n        while (this.listeners.length > 0) {\n            const unsubscribe = this.listeners.pop();\n\n            if (unsubscribe) {\n                unsubscribe();\n            }\n        }\n\n        this.isDragging = false;\n    }\n\n    private setStyle(property: StyleProperty, value: string | number) {\n        this.renderer.setStyle(this.elementRef.nativeElement, property, value);\n    }\n}\n\n@Directive({\n    selector: 'mc-gutter'\n})\nexport class McGutterDirective implements OnInit {\n    private _direction: Direction = Direction.Vertical;\n    private _disabled: boolean = false;\n    private _order: number = 0;\n    private _size: number = 6;\n\n    @Input()\n    set direction(direction: Direction) {\n        this._direction = direction;\n    }\n\n    get direction(): Direction {\n        return this._direction;\n    }\n\n    @Input()\n    set disabled(disabled: boolean) {\n        this._disabled = coerceBooleanProperty(disabled);\n    }\n\n    get disabled(): boolean {\n        return this._disabled;\n    }\n\n    @Input()\n    set order(order: number) {\n        this._order = coerceNumberProperty(order);\n    }\n\n    get order(): number {\n        return this._order;\n    }\n\n    @Input()\n    set size(size: number) {\n        this._size = coerceNumberProperty(size);\n    }\n\n    get size(): number {\n        return this._size;\n    }\n\n    constructor(private renderer: Renderer2,\n                private elementRef: ElementRef) {\n    }\n\n    ngOnInit(): void {\n        this.setStyle(StyleProperty.Cursor, this.getCursor(this.getState()));\n        this.setStyle(StyleProperty.FlexBasis, coerceCssPixelValue(this.size));\n        this.setStyle(this.isVertical() ? StyleProperty.Height : StyleProperty.Width, coerceCssPixelValue(this.size));\n        this.setStyle(StyleProperty.Order, this.order);\n\n        if (!this.isVertical()) {\n            this.setStyle(StyleProperty.Height, '100%');\n        }\n\n        if (this.disabled) {\n            this.setAttr(AttributeProperty.Disabled, 'true');\n        }\n\n        // fix IE issue with gutter icon. flex-direction is requied for flex alignment options\n        this.setStyle(StyleProperty.FlexDirection, this.isVertical() ? 'row' : 'column');\n    }\n\n    private isVertical(): boolean {\n        return this.direction === Direction.Vertical;\n    }\n\n    private getCursor(state: State): string {\n        switch (state) {\n            case State.Disabled:\n                return Cursor.Default;\n            case State.Vertical:\n                return  Cursor.ResizeRow;\n            case State.Horizontal:\n                return Cursor.ResizeColumn;\n            default:\n                throw Error(`Unknown gutter state for cursor: ${state}`);\n        }\n    }\n\n    private getState(): State {\n        return this.disabled\n            ? State.Disabled\n            : this.direction === Direction.Vertical\n                ? State.Vertical\n                : State.Horizontal;\n    }\n\n    private setStyle(property: StyleProperty, value: string | number) {\n        this.renderer.setStyle(this.elementRef.nativeElement, property, value);\n    }\n\n    private setAttr(attribute: AttributeProperty, value: string) {\n        this.renderer.setAttribute(this.elementRef.nativeElement, attribute, value);\n    }\n}\n\n@Directive({\n    selector: 'mc-splitter-area'\n})\nexport class McSplitterAreaDirective implements OnInit, OnDestroy {\n    constructor(private elementRef: ElementRef,\n                private renderer: Renderer2,\n                private splitter: McSplitterComponent) {}\n\n    disableFlex(): void {\n        this.renderer.removeStyle(this.elementRef.nativeElement, 'flex');\n    }\n\n    ngOnInit(): void {\n        this.splitter.addArea(this);\n\n        this.removeStyle(StyleProperty.MaxWidth);\n        this.setStyle(StyleProperty.Flex, '1');\n\n        if (this.splitter.direction === Direction.Vertical) {\n            this.setStyle(StyleProperty.Width, '100%');\n            this.removeStyle(StyleProperty.Height);\n        } else {\n            this.setStyle(StyleProperty.Height, '100%');\n            this.removeStyle(StyleProperty.Width);\n        }\n    }\n\n    ngOnDestroy(): void {\n        this.splitter.removeArea(this);\n    }\n\n    setOrder(order: number): void {\n        this.setStyle(StyleProperty.Order, order);\n    }\n\n    setSize(size: number): void {\n        const sz = coerceNumberProperty(size);\n        this.setStyle(this.getSizeProperty(), coerceCssPixelValue(sz));\n    }\n\n    getSize(): number {\n        return this.elementRef.nativeElement[this.getOffsetSizeProperty()];\n    }\n\n    getMinSize(): number {\n        const styles = getComputedStyle(this.elementRef.nativeElement);\n\n        return parseFloat(styles[this.getMinSizeProperty()]);\n    }\n\n    private isVertical(): boolean {\n        return this.splitter.direction === Direction.Vertical;\n    }\n\n    private getMinSizeProperty(): StyleProperty {\n        return this.isVertical()\n            ? StyleProperty.MinHeight\n            : StyleProperty.MinWidth;\n    }\n\n    private getOffsetSizeProperty(): StyleProperty {\n        return this.isVertical()\n            ? StyleProperty.OffsetHeight\n            : StyleProperty.OffsetWidth;\n    }\n\n    private getSizeProperty(): StyleProperty {\n        return this.isVertical()\n            ? StyleProperty.Height\n            : StyleProperty.Width;\n    }\n\n    private setStyle(style: StyleProperty, value: string | number) {\n        this.renderer.setStyle(this.elementRef.nativeElement, style, value);\n    }\n\n    private removeStyle(style: StyleProperty) {\n        this.renderer.removeStyle(this.elementRef.nativeElement, style);\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { McIconModule } from '@ptsecurity/mosaic/icon';\n\nimport { McGutterDirective, McSplitterAreaDirective, McSplitterComponent } from './splitter.component';\n\n\n@NgModule({\n    imports: [\n        CommonModule,\n        McIconModule\n    ],\n    exports: [\n        McGutterDirective,\n        McSplitterAreaDirective,\n        McSplitterComponent\n    ],\n    declarations: [\n        McGutterDirective,\n        McSplitterAreaDirective,\n        McSplitterComponent\n    ]\n})\nexport class McSplitterModule {\n}\n","// tslint:disable:no-empty\nimport { animate, state, style, transition, trigger } from '@angular/animations';\nimport {\n    Attribute,\n    ChangeDetectionStrategy, ChangeDetectorRef,\n    Component,\n    ElementRef, EventEmitter, forwardRef,\n    Input, Output, ViewChild,\n    ViewEncapsulation\n} from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { FocusMonitor } from '@ptsecurity/cdk/a11y';\nimport {\n    ThemePalette,\n    CanColor, CanColorCtor,\n    CanDisable, CanDisableCtor,\n    HasTabIndex, HasTabIndexCtor,\n    mixinColor,\n    mixinDisabled,\n    mixinTabIndex\n} from '@ptsecurity/mosaic/core';\n\n\nlet nextUniqueId = 0;\n\ntype ToggleLabelPositionType = 'left' | 'right';\n\nexport class McToggleBase {\n    constructor(public _elementRef: ElementRef) {}\n}\n\nexport const _McToggleMixinBase:\n    HasTabIndexCtor &\n    CanDisableCtor &\n    CanColorCtor &\n    typeof McToggleBase = mixinTabIndex(mixinColor(mixinDisabled(McToggleBase)));\n\nexport class McToggleChange {\n    source: McToggleComponent;\n    checked: boolean;\n}\n\n@Component({\n    selector: 'mc-toggle',\n    exportAs: 'mcToggle',\n    templateUrl: './toggle.component.html',\n    styleUrls: ['./toggle.css'],\n    providers: [\n        {provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => McToggleComponent), multi: true}\n    ],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n    inputs: ['disabled', 'color', 'tabIndex'],\n    host: {\n        '[id]': 'id',\n        '[attr.id]': 'id',\n        '[class.mc-disabled]': 'disabled',\n        '[class.mc-toggle-off]': '!checked'\n    },\n    animations: [\n        trigger('switch', [\n            state('true' , style({ left: '50%' })),\n            state('false', style({ left: '1px' })),\n            transition('true <=> false', animate('150ms'))\n        ])\n    ]\n})\nexport class McToggleComponent extends _McToggleMixinBase\n    implements ControlValueAccessor, CanColor, CanDisable, HasTabIndex {\n\n    color: ThemePalette = ThemePalette.Primary;\n\n    @ViewChild('input') _inputElement: ElementRef;\n\n    @Input() labelPosition: ToggleLabelPositionType = 'right';\n\n    @Input('aria-label') ariaLabel: string = '';\n    @Input('aria-labelledby') ariaLabelledby: string | null = null;\n\n    private _uniqueId: string = `mc-toggle-${++nextUniqueId}`;\n\n    // tslint:disable:member-ordering\n    @Input() id: string = this._uniqueId;\n\n    get inputId(): string {\n        return `${this.id || this._uniqueId}-input`;\n    }\n\n    @Input() name: string | null = null;\n\n    @Input() value: string;\n\n    private _disabled: boolean = false;\n\n    @Input()\n    get disabled() {\n        return this._disabled;\n    }\n\n    set disabled(value: any) {\n        if (value !== this._disabled) {\n            this._disabled = value;\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n\n    private _checked: boolean = false;\n\n    get checked() {\n        return this._checked;\n    }\n\n    @Input()\n    set checked(value: boolean) {\n        if (value !== this._checked) {\n            this._checked = value;\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n\n    @Output() readonly change: EventEmitter<McToggleChange> =\n        new EventEmitter<McToggleChange>();\n\n    constructor(public _elementRef: ElementRef,\n                private _focusMonitor: FocusMonitor,\n                private _changeDetectorRef: ChangeDetectorRef,\n                @Attribute('tabindex') tabIndex: string\n    ) {\n        super(_elementRef);\n\n        this.tabIndex = parseInt(tabIndex) || 0;\n\n        this._focusMonitor.monitor(this._elementRef.nativeElement, true);\n    }\n\n    ngOnDestroy() {\n        this._focusMonitor.stopMonitoring(this._elementRef.nativeElement);\n    }\n\n    focus(): void {\n        this._focusMonitor.focusVia(this._inputElement.nativeElement, 'keyboard');\n    }\n\n    _getAriaChecked(): boolean {\n        return this.checked;\n    }\n\n    _onInteractionEvent(event: Event) {\n        event.stopPropagation();\n    }\n\n    _onLabelTextChange() {\n        this._changeDetectorRef.markForCheck();\n    }\n\n    _onInputClick(event: MouseEvent) {\n        event.stopPropagation();\n        this._updateModelValue();\n        this._emitChangeEvent();\n    }\n\n    writeValue(value: any) {\n        this.checked = !!value;\n    }\n\n    registerOnChange(fn: any) {\n        this._onChangeCallback = fn;\n    }\n\n    registerOnTouched(fn: any) {\n        this._onTouchedCallback = fn;\n    }\n\n    setDisabledState(isDisabled: boolean) {\n        this.disabled = isDisabled;\n    }\n\n    private _onTouchedCallback = () => {};\n\n    private _onChangeCallback = (_: any) => {};\n\n    private _updateModelValue() {\n        this._checked = !this.checked;\n        this._onChangeCallback(this.checked);\n        this._onTouchedCallback();\n    }\n\n    private _emitChangeEvent() {\n        const event = new McToggleChange();\n        event.source = this;\n        event.checked = this.checked;\n\n        this._onChangeCallback(this.checked);\n        this.change.emit(event);\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { A11yModule } from '@ptsecurity/cdk/a11y';\nimport { McCommonModule } from '@ptsecurity/mosaic/core';\n\nimport { McToggleComponent } from './toggle.component';\n\n\n@NgModule({\n    imports: [CommonModule, BrowserAnimationsModule, A11yModule, McCommonModule],\n    exports: [McToggleComponent],\n    declarations: [McToggleComponent]\n})\nexport class McToggleModule {\n}\n","import {\n    AfterContentInit,\n    Attribute,\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component, ContentChildren, EventEmitter, forwardRef, Input, IterableDiffer,\n    IterableDiffers, Output, QueryList,\n    ViewChild,\n    ViewEncapsulation,\n    Directive, ElementRef, Inject\n} from '@angular/core';\nimport { NodeDef, ViewData } from '@angular/core/src/view';\n\nimport { SelectionModel } from '@ptsecurity/cdk/collections';\nimport { CdkTreeNode, CdkTree, CdkTreeNodeOutlet } from '@ptsecurity/cdk/tree';\n\nimport {\n    CanDisable, CanDisableCtor,\n    HasTabIndex,\n    HasTabIndexCtor,\n    mixinDisabled,\n    mixinTabIndex,\n    toBoolean\n} from '@ptsecurity/mosaic/core';\n\nimport { FocusKeyManager } from '@ptsecurity/cdk/a11y';\n\nimport { END, ENTER, HOME, LEFT_ARROW, PAGE_DOWN, PAGE_UP, RIGHT_ARROW, SPACE } from '@ptsecurity/cdk/keycodes';\n\n\n/**\n * Wrapper for the CdkTree node with Material design styles.\n */\n@Directive({\n    exportAs: 'mcTreeNodeOption',\n    selector: 'mc-tree-node-option',\n    host: {\n        tabindex: '-1',\n        '[class.mc-selected]': 'selected',\n        '[class.mc-focused]': '_hasFocus',\n        '[attr.aria-expanded]': 'isExpanded',\n        '[attr.aria-level]': 'role === \"treeitem\" ? level : null',\n        class: 'mc-tree-node',\n\n        '(focus)': '_handleFocus()',\n        '(blur)': '_handleBlur()',\n\n        '(click)': '_handleClick()'\n    },\n    providers: [\n        { provide: CdkTreeNode, useExisting: McTreeNodeOption }\n    ]\n})\nexport class McTreeNodeOption<T> extends CdkTreeNode<T> implements CanDisable {\n    @Input() role: 'treeitem' | 'group' = 'treeitem';\n\n    @Input()\n    get disabled() {\n        return this._disabled;\n    }\n\n    set disabled(value: any) {\n        const newValue = toBoolean(value);\n\n        if (newValue !== this._disabled) {\n            this._disabled = newValue;\n        }\n    }\n\n    @Input()\n    get selected(): boolean {\n        return this.treeSelection.selectedOptions && this.treeSelection.selectedOptions.isSelected(this) || false;\n    }\n\n    set selected(value: boolean) {\n        const isSelected = toBoolean(value);\n\n        if (isSelected !== this._selected) {\n            this.setSelected(isSelected);\n\n            // this.treeSelection._reportValueChange();\n        }\n    }\n\n    private _hasFocus: boolean = false;\n\n    private _disabled: boolean = false;\n    private _selected: boolean = false;\n\n    constructor(\n        protected _elementRef: ElementRef,\n        @Inject(forwardRef(() => McTreeSelection))\n        protected treeSelection: McTreeSelection<T>\n    ) {\n        super(_elementRef, treeSelection);\n    }\n\n    focus(): void {\n        this._elementRef.nativeElement.focus();\n\n        this.treeSelection.setFocusedOption(this);\n    }\n\n    toggle(): void {\n        this.selected = !this.selected;\n    }\n\n    setSelected(selected: boolean) {\n        if (this._selected === selected || !this.treeSelection.selectedOptions) { return; }\n\n        this._selected = selected;\n\n        if (selected) {\n            this.treeSelection.selectedOptions.select(this);\n        } else {\n            this.treeSelection.selectedOptions.deselect(this);\n        }\n\n        // this._changeDetector.markForCheck();\n    }\n\n    _getHeight(): number {\n        return this._elementRef.nativeElement.getClientRects()[0].height;\n    }\n\n    _handleFocus(): void {\n        if (this.disabled || this._hasFocus) { return; }\n\n        this._hasFocus = true;\n    }\n\n    _handleBlur(): void {\n        this._hasFocus = false;\n    }\n\n    _handleClick(): void {\n        if (this.disabled) { return; }\n\n        this.treeSelection.setFocusedOption(this);\n    }\n}\n\nexport const _McTreeSelectionBase:\n    HasTabIndexCtor &\n    CanDisableCtor &\n    typeof CdkTree\n    = mixinTabIndex(mixinDisabled(CdkTree));\n\nexport class McTreeNavigationChange {\n    constructor(\n        public source: McTreeSelection<any>,\n        public option: McTreeNodeOption<any>\n    ) {}\n}\n\nexport class McTreeSelectionChange {\n    constructor(\n        public source: McTreeSelection<any>,\n        public option: McTreeNodeOption<any>\n    ) {}\n}\n\n@Component({\n    exportAs: 'mcTreeSelection',\n    selector: 'mc-tree-selection',\n    template: `<ng-container cdkTreeNodeOutlet></ng-container>`,\n    host: {\n        '[tabIndex]': 'tabIndex',\n        class: 'mc-tree-selection',\n        role: 'tree-selection',\n        '(keydown)': '_onKeyDown($event)',\n        '(window:resize)': 'updateScrollSize()'\n    },\n    styleUrls: ['./tree.css'],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    providers: [{ provide: CdkTree, useExisting: McTreeSelection }]\n})\nexport class McTreeSelection<T> extends _McTreeSelectionBase<T>\n    implements AfterContentInit, CanDisable, HasTabIndex {\n    // Outlets within the tree's template where the dataNodes will be inserted.\n    @ViewChild(CdkTreeNodeOutlet) _nodeOutlet: CdkTreeNodeOutlet;\n\n    @ContentChildren(forwardRef(() => McTreeNodeOption)) options: QueryList<McTreeNodeOption<T>>;\n\n    _keyManager: FocusKeyManager<McTreeNodeOption<T>>;\n\n    selectedOptions: SelectionModel<McTreeNodeOption<T>>;\n\n    _disabled: boolean = false;\n    tabIndex: number;\n    multiple: boolean;\n    autoSelect: boolean;\n    noUnselect: boolean;\n\n    // todo temporary solution\n    withShift: boolean;\n    withCtrl: boolean;\n\n    @Input()\n    get disabled(): boolean {\n        return this._disabled;\n    }\n\n    set disabled(rawValue: boolean) {\n        const value = toBoolean(rawValue);\n\n        if (this._disabled !== value) {\n            this._disabled = value;\n\n            if (this._disabled) {\n                console.log('need disable all options');\n            } else {\n                console.log('need enable all options');\n            }\n        }\n    }\n\n    @Output() readonly navigationChange = new EventEmitter<McTreeNavigationChange>();\n\n    @Output() readonly selectionChange = new EventEmitter<McTreeSelectionChange>();\n\n    constructor(\n        private _elementRef: ElementRef,\n        _differs: IterableDiffers,\n        _changeDetectorRef: ChangeDetectorRef,\n        @Attribute('tabindex') tabIndex: string,\n        @Attribute('multiple') multiple: string,\n        @Attribute('auto-select') autoSelect: string,\n        @Attribute('no-unselect') noUnselect: string\n    ) {\n        super(_differs, _changeDetectorRef);\n\n        this.tabIndex = parseInt(tabIndex) || 0;\n\n        this.multiple = multiple === null ? true : toBoolean(multiple);\n        this.autoSelect = autoSelect === null ? true : toBoolean(autoSelect);\n        this.noUnselect = noUnselect === null ? true : toBoolean(noUnselect);\n\n        this.selectedOptions = new SelectionModel<McTreeNodeOption<T>>(this.multiple);\n    }\n\n    _onKeyDown(event: KeyboardEvent) {\n        const keyCode = event.keyCode;\n        this.withShift = event.shiftKey;\n        this.withCtrl = event.ctrlKey;\n\n        switch (keyCode) {\n            case LEFT_ARROW:\n                if (this._keyManager.activeItem) {\n                    this.treeControl.collapse(this._keyManager.activeItem.data);\n                }\n\n                event.preventDefault();\n\n                break;\n            case RIGHT_ARROW:\n                if (this._keyManager.activeItem) {\n                    this.treeControl.expand(this._keyManager.activeItem.data);\n                }\n\n                event.preventDefault();\n\n                break;\n            case SPACE:\n            case ENTER:\n                this.toggleFocusedOption();\n                event.preventDefault();\n\n                break;\n            case HOME:\n                this._keyManager.setFirstItemActive();\n                event.preventDefault();\n\n                break;\n            case END:\n                this._keyManager.setLastItemActive();\n                event.preventDefault();\n\n                break;\n            case PAGE_UP:\n                this._keyManager.setPreviousPageItemActive();\n                event.preventDefault();\n\n                break;\n            case PAGE_DOWN:\n                this._keyManager.setNextPageItemActive();\n                event.preventDefault();\n\n                break;\n            default:\n                this._keyManager.onKeydown(event);\n        }\n    }\n\n    ngAfterContentInit(): void {\n        this._keyManager = new FocusKeyManager<McTreeNodeOption<T>>(this.options)\n            .withTypeAhead()\n            .withVerticalOrientation(true)\n            .withHorizontalOrientation(null);\n    }\n\n    updateScrollSize(): void {\n        if (!this.options.first) { return; }\n\n        this._keyManager.withScrollSize(Math.floor(this._getHeight() / this.options.first._getHeight()));\n    }\n\n    setFocusedOption(option: McTreeNodeOption<T>): void {\n        this._keyManager.updateActiveItem(option);\n\n        if (this.withShift && this.multiple) {\n            const previousIndex = this._keyManager.previousActiveItemIndex;\n            const activeIndex = this._keyManager.activeItemIndex;\n\n            if (previousIndex < activeIndex) {\n                this.options.forEach((item, index) => {\n                    if (index >= previousIndex && index <= activeIndex) { item.setSelected(true); }\n                });\n            } else {\n                this.options.forEach((item, index) => {\n                    if (index >= activeIndex && index <= previousIndex) { item.setSelected(true); }\n                });\n            }\n\n            this.withShift = false;\n        } else if (this.withCtrl) {\n            this.withCtrl = false;\n\n            if (!this._canDeselectLast(option)) { return; }\n\n            option.toggle();\n        } else {\n            if (this.autoSelect) {\n                this.options.forEach((item) => item.setSelected(false));\n                option.setSelected(true);\n            }\n        }\n\n        this._emitNavigationEvent(option);\n    }\n\n    // Toggles the selected state of the currently focused option.\n    toggleFocusedOption(): void {\n        const focusedIndex = this._keyManager.activeItemIndex;\n\n        if (focusedIndex != null && this._isValidIndex(focusedIndex)) {\n            const focusedOption: McTreeNodeOption<T> = this.options.toArray()[focusedIndex];\n\n            if (focusedOption && this._canDeselectLast(focusedOption)) {\n                focusedOption.toggle();\n\n                // Emit a change event because the focused option changed its state through user interaction.\n                this._emitChangeEvent(focusedOption);\n            }\n        }\n    }\n\n    renderNodeChanges(\n        data: T[],\n        dataDiffer: IterableDiffer<T> = this._dataDiffer,\n        viewContainer: any = this._nodeOutlet.viewContainer,\n        parentData?: T\n    ) {\n        super.renderNodeChanges(data, dataDiffer, viewContainer, parentData);\n\n        const arrayOfInstances = [];\n\n        viewContainer._embeddedViews.forEach((view: ViewData) => {\n            const viewDef = view.def;\n\n            viewDef.nodes.forEach((node: NodeDef) => {\n                if (viewDef.nodeMatchedQueries === node.matchedQueryIds) {\n                    const nodeData: any = view.nodes[node.nodeIndex];\n\n                    arrayOfInstances.push(nodeData.instance as never);\n                }\n            });\n        });\n\n        if (this.options) {\n            this.options.reset(arrayOfInstances);\n            this.options.notifyOnChanges();\n        }\n\n        this.updateScrollSize();\n    }\n\n    _getHeight(): number {\n        return this._elementRef.nativeElement.getClientRects()[0].height;\n    }\n\n    _emitNavigationEvent(option: McTreeNodeOption<T>): void {\n        this.navigationChange.emit(new McTreeNavigationChange(this, option));\n    }\n\n    _emitChangeEvent(option: McTreeNodeOption<T>): void {\n        this.selectionChange.emit(new McTreeNavigationChange(this, option));\n    }\n\n    /**\n     * Utility to ensure all indexes are valid.\n     * @param index The index to be checked.\n     * @returns True if the index is valid for our list of options.\n     */\n    private _isValidIndex(index: number): boolean {\n        return index >= 0 && index < this.options.length;\n    }\n\n    private _canDeselectLast(option: McTreeNodeOption<T>): boolean {\n        return !(this.noUnselect && this.selectedOptions.selected.length === 1 && option.selected);\n    }\n}\n\n","import { NgModule } from '@angular/core';\n\nimport { CommonModule } from '@angular/common';\nimport { CdkTreeModule } from '@ptsecurity/cdk/tree';\n\nimport { McTreeNodeDef } from './node';\nimport { McTreeNodePadding } from './padding';\nimport { McTreeSelection, McTreeNodeOption } from './tree-selection';\n\n\nconst MC_TREE_DIRECTIVES = [\n    McTreeNodeDef,\n    McTreeNodePadding,\n    McTreeSelection,\n    McTreeNodeOption\n];\n\n@NgModule({\n    imports: [CommonModule, CdkTreeModule],\n    exports: MC_TREE_DIRECTIVES,\n    declarations: MC_TREE_DIRECTIVES\n})\nexport class McTreeModule {}\n","import { ICollectionViewer, DataSource } from '@ptsecurity/cdk/collections';\nimport { FlatTreeControl, ITreeControl } from '@ptsecurity/cdk/tree';\nimport { BehaviorSubject, merge, Observable } from 'rxjs';\nimport { map, take } from 'rxjs/operators';\n\n\n/**\n * Tree flattener to convert a normal type of node to node with children & level information.\n * Transform nested nodes of type `T` to flattened nodes of type `F`.\n *\n * For example, the input data of type `T` is nested, and contains its children data:\n *   SomeNode: {\n *     key: 'Fruits',\n *     children: [\n *       NodeOne: {\n *         key: 'Apple',\n *       },\n *       NodeTwo: {\n *        key: 'Pear',\n *      }\n *    ]\n *  }\n *  After flattener flatten the tree, the structure will become\n *  SomeNode: {\n *    key: 'Fruits',\n *    expandable: true,\n *    level: 1\n *  },\n *  NodeOne: {\n *    key: 'Apple',\n *    expandable: false,\n *    level: 2\n *  },\n *  NodeTwo: {\n *   key: 'Pear',\n *   expandable: false,\n *   level: 2\n * }\n * and the output flattened type is `F` with additional information.\n */\nexport class McTreeFlattener<T, F> {\n\n    constructor(public transformFunction: (node: T, level: number) => F,\n                public getLevel: (node: F) => number,\n                public isExpandable: (node: F) => boolean,\n                public getChildren: (node: T) => Observable<T[]>) {\n    }\n\n    _flattenNode(node: T, level: number,\n                 resultNodes: F[], parentMap: boolean[]): F[] {\n        const flatNode = this.transformFunction(node, level);\n        resultNodes.push(flatNode);\n\n        if (this.isExpandable(flatNode)) {\n            this.getChildren(node).pipe(take(1)).subscribe((children) => {\n                children.forEach((child, index) => {\n                    const childParentMap: boolean[] = parentMap.slice();\n                    childParentMap.push(index !== children.length - 1);\n                    this._flattenNode(child, level + 1, resultNodes, childParentMap);\n                });\n            });\n        }\n\n        return resultNodes;\n    }\n\n    /**\n     * Flatten a list of node type T to flattened version of node F.\n     * Please note that type T may be nested, and the length of `structuredData` may be different\n     * from that of returned list `F[]`.\n     */\n    flattenNodes(structuredData: T[]): F[] {\n        const resultNodes: F[] = [];\n        structuredData.forEach((node) => this._flattenNode(node, 0, resultNodes, []));\n\n        return resultNodes;\n    }\n\n    /**\n     * Expand flattened node with current expansion status.\n     * The returned list may have different length.\n     */\n    expandFlattenedNodes(nodes: F[], treeControl: ITreeControl<F>): F[] {\n        const results: F[] = [];\n        const currentExpand: boolean[] = [];\n        currentExpand[0] = true;\n\n        nodes.forEach((node) => {\n            let expand = true;\n            for (let i = 0; i <= this.getLevel(node); i++) {\n                expand = expand && currentExpand[i];\n            }\n\n            if (expand) { results.push(node); }\n\n            if (this.isExpandable(node)) {\n                currentExpand[this.getLevel(node) + 1] = treeControl.isExpanded(node);\n            }\n        });\n\n        return results;\n    }\n}\n\n\n/**\n * Data source for flat tree.\n * The data source need to handle expansion/collapsion of the tree node and change the data feed\n * to `McTree`.\n * The nested tree nodes of type `T` are flattened through `MсTreeFlattener`, and converted\n * to type `F` for `McTree` to consume.\n */\nexport class McTreeFlatDataSource<T, F> extends DataSource<F> {\n    _flattenedData = new BehaviorSubject<F[]>([]);\n\n    _expandedData = new BehaviorSubject<F[]>([]);\n\n    _data: BehaviorSubject<T[]>;\n\n    get data() {\n        return this._data.value;\n    }\n\n    set data(value: T[]) {\n        this._data.next(value);\n        this._flattenedData.next(this.treeFlattener.flattenNodes(this.data));\n        this.treeControl.dataNodes = this._flattenedData.value;\n    }\n\n    constructor(private treeControl: FlatTreeControl<F>,\n                private treeFlattener: McTreeFlattener<T, F>,\n                initialData: T[] = []) {\n        super();\n        this._data = new BehaviorSubject<T[]>(initialData);\n    }\n\n    connect(collectionViewer: ICollectionViewer): Observable<F[]> {\n        const changes = [\n            collectionViewer.viewChange,\n            this.treeControl.expansionModel.onChange!,\n            this._flattenedData\n        ];\n\n        return merge(...changes).pipe(map(() => {\n            this._expandedData.next(\n                this.treeFlattener.expandFlattenedNodes(this._flattenedData.value, this.treeControl));\n\n            return this._expandedData.value;\n        }));\n    }\n\n    disconnect() {\n        // no op\n    }\n}\n\n","import { ICollectionViewer, DataSource } from '@ptsecurity/cdk/collections';\nimport { BehaviorSubject, merge, Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\n\n/**\n * Data source for nested tree.\n *\n * The data source for nested tree doesn't have to consider node flattener, or the way to expand\n * or collapse. The expansion/collapsion will be handled by ITreeControl and each non-leaf node.\n */\nexport class McTreeNestedDataSource<T> extends DataSource<T> {\n    _data = new BehaviorSubject<T[]>([]);\n\n    /**\n     * Data for the nested tree\n     */\n    get data() {\n        return this._data.value;\n    }\n\n    set data(value: T[]) {\n        this._data.next(value);\n    }\n\n    connect(collectionViewer: ICollectionViewer): Observable<T[]> {\n        return merge(...[collectionViewer.viewChange, this._data])\n            .pipe(map(() => this.data));\n    }\n\n    disconnect() {\n        // no op\n    }\n}\n\n","import {\n    ElementRef,\n    QueryList,\n    ContentChildren,\n    Component,\n    ChangeDetectionStrategy,\n    ViewEncapsulation\n} from '@angular/core';\n\nimport { mixinColor, CanColor, CanColorCtor } from '@ptsecurity/mosaic/core';\nimport { McIcon } from '@ptsecurity/mosaic/icon';\n\n\nexport class McTagBase {\n    constructor(public _elementRef: ElementRef) {}\n}\n\nexport const _McTagMixinBase: CanColorCtor & typeof McTagBase\n    = mixinColor(McTagBase);\n\n\n@Component({\n    selector: 'mc-tag',\n    templateUrl: 'tag.partial.html',\n    styleUrls: ['./tag.css'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n    host: { class: 'mc-tag' },\n    inputs: ['color']\n})\nexport class McTag extends _McTagMixinBase implements CanColor {\n    @ContentChildren(McIcon) contentChildren: QueryList<McIcon>;\n\n    nativeElement: HTMLElement;\n\n    constructor(elementRef: ElementRef) {\n        super(elementRef);\n\n        this.nativeElement = elementRef.nativeElement;\n    }\n\n    ngAfterContentInit() {\n        this._addClassModificatorForIcons();\n    }\n\n    _addClassModificatorForIcons() {\n        const icons = this.contentChildren.map((item) => item._elementRef.nativeElement);\n\n        if (icons.length === 1) {\n            const iconElement = icons[0];\n\n            if (!iconElement.previousElementSibling && !iconElement.nextElementSibling) {\n                if (iconElement.nextSibling) {\n                    iconElement.classList.add('mc-icon_left');\n                    this.nativeElement.classList.add('mc-left-icon');\n                }\n\n                if (iconElement.previousSibling) {\n                    iconElement.classList.add('mc-icon_right');\n                    this.nativeElement.classList.add('mc-right-icon');\n                }\n            }\n        } else if (icons.length > 1) {\n            const firstIconElement = icons[0];\n            const secondIconElement = icons[1];\n\n            firstIconElement.classList.add('mc-icon_left');\n            secondIconElement.classList.add('mc-icon_right');\n        }\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { PlatformModule } from '@ptsecurity/cdk/platform';\n\nimport { McTag } from './tag.component';\n\n\n@NgModule({\n    imports: [\n        CommonModule,\n        PlatformModule\n    ],\n    exports: [\n        McTag\n    ],\n    declarations: [\n        McTag\n    ]\n})\nexport class McTagModule {}\n","import {\n    Directive,\n    DoCheck,\n    ElementRef,\n    forwardRef,\n    Inject,\n    InjectionToken,\n    Input,\n    OnChanges,\n    OnDestroy,\n    Optional,\n    Renderer2,\n    Self\n} from '@angular/core';\nimport {\n    ControlValueAccessor,\n    FormControl,\n    FormGroupDirective,\n    NG_VALIDATORS,\n    NgControl,\n    NgForm,\n    ValidationErrors,\n    ValidatorFn,\n    Validators\n} from '@angular/forms';\nimport {\n    noop,\n    Subject\n} from 'rxjs';\n\nimport { coerceBooleanProperty } from '@ptsecurity/cdk/coercion';\nimport {\n    CanUpdateErrorState,\n    CanUpdateErrorStateCtor,\n    ErrorStateMatcher,\n    mixinErrorState\n} from '@ptsecurity/mosaic/core';\nimport { McFormFieldControl } from '@ptsecurity/mosaic/form-field';\n\nimport {\n    ARROW_DOWN_KEYCODE,\n    ARROW_LEFT_KEYCODE,\n    ARROW_RIGHT_KEYCODE,\n    ARROW_UP_KEYCODE,\n    DEFAULT_TIME_FORMAT,\n    HOURS_PER_DAY,\n    HOURS_MINUTES_REGEXP,\n    HOURS_MINUTES_SECONDS_REGEXP,\n    HOURS_ONLY_REGEXP,\n    MINUTES_PER_HOUR,\n    SECONDS_PER_MINUTE,\n    TIMEFORMAT_PLACEHOLDERS,\n    TimeFormats,\n    TimeParts\n} from './timepicker.constants';\n\n\nlet uniqueComponentIdSuffix: number = 0;\nlet validatorOnChange: () => void = noop;\nlet validator: ValidatorFn | null = () => null;\n\nexport const MC_INPUT_VALUE_ACCESSOR =\n    new InjectionToken<{ value: any }>('MC_INPUT_VALUE_ACCESSOR');\n\nexport class McTimepickerBase {\n    constructor(\n        public _defaultErrorStateMatcher: ErrorStateMatcher,\n        public _parentForm: NgForm,\n        public _parentFormGroup: FormGroupDirective,\n        public ngControl: NgControl) { }\n}\n\n// tslint:disable-next-line naming-convention\nexport const McTimepickerMixinBase:\n    CanUpdateErrorStateCtor &\n    typeof McTimepickerBase = mixinErrorState(McTimepickerBase);\n\n@Directive({\n    selector: 'input[mcTimepicker]',\n    exportAs: 'mcTimepickerInput',\n    host: {\n        class: 'mc-timepicker mc-input',\n        // Native input properties that are overwritten by Angular inputs need to be synced with\n        // the native input element. Otherwise property bindings for those don't work.\n        '[attr.id]': 'id',\n        '[attr.placeholder]': 'placeholder',\n        '[disabled]': 'disabled',\n        '[required]': 'required',\n        '[attr.time-format]': 'timeFormat',\n        '[attr.min-time]': 'minTime',\n        '[attr.max-time]': 'maxTime',\n        '[attr.value]': 'value',\n        '(blur)': 'onBlur()',\n        '(focus)': 'focusChanged(true)',\n        '(input)': 'onInput()',\n        '(paste)': 'onPaste($event)',\n        '(keydown)': 'onKeyDown($event)'\n    },\n    providers: [\n        {\n            provide: NG_VALIDATORS,\n            useValue: {\n                validate(c) { return validator ? validator(c) : null; },\n                registerOnValidatorChange(fn: () => void): void { validatorOnChange = fn; }\n            },\n            multi: true\n        },\n        {\n            provide: McFormFieldControl,\n            useExisting: forwardRef(() => McTimepicker)\n        }\n    ]\n\n})\nexport class McTimepicker extends McTimepickerMixinBase\n    implements McFormFieldControl<any>,\n        OnChanges,\n        OnDestroy,\n        DoCheck,\n        CanUpdateErrorState,\n        ControlValueAccessor {\n\n    /** An object used to control when error messages are shown. */\n    @Input() errorStateMatcher: ErrorStateMatcher;\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    focused: boolean = false;\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    readonly stateChanges: Subject<void> = new Subject<void>();\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    controlType: string = 'mc-timepicker';\n\n    @Input()\n    get disabled(): boolean {\n        if (this.ngControl && this.ngControl.disabled !== null) { return this.ngControl.disabled; }\n\n        return this._disabled;\n    }\n\n    set disabled(value: boolean) {\n        this._disabled = coerceBooleanProperty(value);\n\n        // Browsers may not fire the blur event if the input is disabled too quickly.\n        // Reset from here to ensure that the element doesn't become stuck.\n        if (this.focused) {\n            this.focused = false;\n        }\n\n        this.stateChanges.next();\n    }\n\n    @Input()\n    get id(): string { return this._id; }\n\n    set id(value: string) { this._id = value || this.uid; }\n\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    @Input() placeholder: string;\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    @Input()\n    get required(): boolean { return this._required; }\n\n    set required(value: boolean) { this._required = coerceBooleanProperty(value); }\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    @Input()\n    get value(): string { return this.inputValueAccessor.value; }\n\n    set value(value: string) {\n        if (value !== this.value) {\n            this.inputValueAccessor.value = value;\n            this.applyInputChanges();\n        }\n    }\n\n    @Input('time-format')\n    get timeFormat(): TimeFormats { return this._timeFormat; }\n\n    set timeFormat(formatValue: TimeFormats) {\n        this._timeFormat = Object\n            .keys(TimeFormats)\n            .map((timeFormatKey) => TimeFormats[timeFormatKey])\n            .indexOf(formatValue) > -1 ? formatValue : DEFAULT_TIME_FORMAT;\n\n        validatorOnChange();\n        this.placeholder = TIMEFORMAT_PLACEHOLDERS[this._timeFormat];\n    }\n\n    @Input('min-time')\n    get minTime(): string | null { return this._minTime; }\n\n    set minTime(minValue: string | null) {\n        this._minTime = minValue;\n        this.minDateTime = minValue !== null ? this.getDateFromTimeString(minValue) : undefined;\n        validatorOnChange();\n    }\n\n    @Input('max-time')\n    get maxTime(): string | null { return this._maxTime; }\n\n    set maxTime(maxValue: string | null) {\n        this._maxTime = maxValue;\n        this.maxDateTime = maxValue !== null ? this.getDateFromTimeString(maxValue) : undefined;\n        validatorOnChange();\n    }\n\n    private _id: string;\n    private readonly uid = `mc-timepicker-${uniqueComponentIdSuffix++}`;\n    private _disabled: boolean;\n    private _required: boolean;\n    private previousNativeValue: any;\n    private readonly inputValueAccessor: { value: any };\n    private onChange: (value: any) => void;\n    private onTouched: () => void;\n    private _timeFormat: TimeFormats;\n    private _minTime: string | null = null;\n    private minDateTime: Date | undefined;\n    private _maxTime: string | null = null;\n    private maxDateTime: Date | undefined;\n    private currentDateTimeInput: Date | undefined;\n\n    constructor(private readonly elementRef: ElementRef,\n                @Optional() @Self() public ngControl: NgControl,\n                @Optional() _parentForm: NgForm,\n                @Optional() _parentFormGroup: FormGroupDirective,\n                _defaultErrorStateMatcher: ErrorStateMatcher,\n                @Optional() @Self() @Inject(MC_INPUT_VALUE_ACCESSOR) inputValueAccessor: any,\n                private readonly renderer: Renderer2) {\n        super(_defaultErrorStateMatcher, _parentForm, _parentFormGroup, ngControl);\n\n        // If no input value accessor was explicitly specified, use the element as the input value\n        // accessor.\n        this.inputValueAccessor = inputValueAccessor || this.elementRef.nativeElement;\n\n        this.previousNativeValue = this.value;\n        this.onChange = noop;\n\n        // Force setter to be called in case id was not specified.\n        this.id = this.id;\n\n        this.placeholder = TIMEFORMAT_PLACEHOLDERS[DEFAULT_TIME_FORMAT];\n\n        // Instead of NG_VALUE_ACCESSOR (https://github.com/angular/material2/issues/8158#issuecomment-344618103)\n        if (this.ngControl) { this.ngControl.valueAccessor = this; }\n\n        // Substitute initial empty validator with validator linked to directive object instance (workaround)\n        validator = Validators.compose([\n            () => this.parseValidator(),\n            () => this.minTimeValidator(),\n            () => this.maxTimeValidator()\n        ]);\n    }\n\n    ngOnChanges(): void {\n        this.stateChanges.next();\n    }\n\n    ngOnDestroy(): void {\n        this.stateChanges.complete();\n    }\n\n    ngDoCheck(): void {\n        if (this.ngControl) {\n            // We need to re-evaluate this on every change detection cycle, because there are some\n            // error triggers that we can't subscribe to (e.g. parent form submissions). This means\n            // that whatever logic is in here has to be super lean or we risk destroying the performance.\n            this.updateErrorState();\n        }\n\n        // We need to dirty-check the native element's value, because there are some cases where\n        // we won't be notified when it changes (e.g. the consumer isn't using forms or they're\n        // updating the value using `emitEvent: false`).\n        this.dirtyCheckNativeValue();\n    }\n\n    focus(): void {\n        this.elementRef.nativeElement.focus();\n    }\n\n    focusChanged(isFocused: boolean): void {\n        if (isFocused !== this.focused) {\n            this.focused = isFocused;\n            this.onTouched();\n            this.stateChanges.next();\n        }\n    }\n\n    onBlur() {\n        this.applyInputChanges();\n        this.focusChanged(false);\n    }\n\n    onPaste($event) {\n        $event.preventDefault();\n        const clipboardUserInput: string = $event.clipboardData.getData('text');\n\n        if (this.getDateFromTimeString(clipboardUserInput) === undefined) { return; }\n\n        this.elementRef.nativeElement.value = clipboardUserInput;\n        this.onInput();\n    }\n\n    onInput() {\n        const initialCursorStart: number = this.elementRef.nativeElement.selectionStart;\n        const initialCursorEnd: number = this.elementRef.nativeElement.selectionEnd;\n        let isAutocompleteTriggered: boolean = false;\n\n        const {\n            hoursOnly,\n            hoursAndMinutes,\n            hoursAndMinutesAndSeconds\n        } = this.getParsedTimeParts(this.elementRef.nativeElement.value);\n\n        // tslint:disable no-magic-numbers\n        if (hoursOnly &&\n            hoursOnly[1] &&\n            hoursOnly[1].length === 2) {\n            isAutocompleteTriggered = true;\n        } else if (hoursAndMinutes &&\n            hoursAndMinutes[1].length === 1 &&\n            hoursAndMinutes[2] &&\n            hoursAndMinutes[2].length === 2) {\n            isAutocompleteTriggered = true;\n        } else if (hoursAndMinutesAndSeconds &&\n            hoursAndMinutesAndSeconds[1].length === 2 &&\n            hoursAndMinutesAndSeconds[2].length === 2 &&\n            hoursAndMinutesAndSeconds[3] &&\n            hoursAndMinutesAndSeconds[3].length === 2) {\n            isAutocompleteTriggered = true;\n        }\n        // tslint:enable no-magic-numbers\n\n        this.applyInputChanges({ doTimestringReformat: isAutocompleteTriggered });\n\n        this.elementRef.nativeElement.selectionStart = initialCursorStart;\n        this.elementRef.nativeElement.selectionEnd = initialCursorEnd;\n\n        if (isAutocompleteTriggered && this.ngControl.errors === null) {\n            this.createSelectionOfTimeComponentInInput(initialCursorStart + 1);\n        }\n    }\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    get empty(): boolean {\n        return !this.elementRef.nativeElement.value && !this.isBadInput();\n    }\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    onContainerClick() {\n        this.focus();\n    }\n\n    writeValue(value: Date | null): void {\n        if (value !== null) {\n            this.renderer.setProperty(this.elementRef.nativeElement,\n                'value',\n                this.getTimeStringFromDate(value, this.timeFormat)\n            );\n        }\n        this.onChange(value || null);\n        this.applyInputChanges();\n    }\n\n    onKeyDown(event: KeyboardEvent): void {\n\n        const keyCode: string = this.getKeyCode(event);\n\n        if (keyCode === ARROW_UP_KEYCODE || keyCode === ARROW_DOWN_KEYCODE) {\n            this.upDownTimeByArrowKeys(event);\n        }\n        if (keyCode === ARROW_LEFT_KEYCODE || keyCode === ARROW_RIGHT_KEYCODE) {\n            this.switchSelectionBetweenTimeparts(event);\n        }\n    }\n\n    registerOnChange(fn: (value: Date) => void): void {\n        this.onChange = fn;\n    }\n\n    registerOnTouched(fn: () => void): void {\n        this.onTouched = fn;\n    }\n\n    /** Does some manual dirty checking on the native input `value` property. */\n    private dirtyCheckNativeValue() {\n        const newValue = this.value;\n\n        if (this.previousNativeValue !== newValue) {\n            this.previousNativeValue = newValue;\n            this.stateChanges.next();\n        }\n    }\n\n    /** Checks whether the input is invalid based on the native validation. */\n    private isBadInput(): boolean {\n        const validity = (<HTMLInputElement> this.elementRef.nativeElement).validity;\n\n        return validity && validity.badInput;\n    }\n\n    private applyInputChanges(applyParams: {\n        changedTime?: Date;\n        doTimestringReformat?: boolean;\n    } = {}): void {\n        const { changedTime, doTimestringReformat = true } = applyParams;\n\n        const timeToApply: Date | undefined = changedTime ||\n            this.getDateFromTimeString(this.elementRef.nativeElement.value);\n        this.currentDateTimeInput = timeToApply;\n\n        if (doTimestringReformat && timeToApply !== undefined) {\n            const selectionStart: number = this.elementRef.nativeElement.selectionStart;\n            const selectionEnd: number = this.elementRef.nativeElement.selectionEnd;\n            this.renderer.setProperty(\n                this.elementRef.nativeElement,\n                'value',\n                this.getTimeStringFromDate(timeToApply, this.timeFormat));\n            this.elementRef.nativeElement.selectionStart = selectionStart;\n            this.elementRef.nativeElement.selectionEnd = selectionEnd;\n        }\n\n        (<FormControl> this.ngControl.control).updateValueAndValidity();\n        const result = this.ngControl.errors === null && timeToApply !== undefined ? timeToApply : null;\n        this.onChange(result);\n        this.stateChanges.next();\n    }\n\n    private upDownTimeByArrowKeys(event: KeyboardEvent): void {\n        event.preventDefault();\n\n        let changedTime: Date | undefined = this.currentDateTimeInput;\n        if (changedTime !== undefined) {\n            const cursorPos = this.elementRef.nativeElement.selectionStart;\n\n            const modifiedTimePart = this.getTimeEditMetrics(cursorPos)\n                .modifiedTimePart;\n            const keyCode: string = this.getKeyCode(event);\n            if (keyCode === ARROW_UP_KEYCODE) { changedTime = this.incrementTime(changedTime, modifiedTimePart); }\n            if (keyCode === ARROW_DOWN_KEYCODE) { changedTime = this.decrementTime(changedTime, modifiedTimePart); }\n            this.applyInputChanges({ changedTime });\n            this.createSelectionOfTimeComponentInInput(cursorPos);\n        }\n    }\n\n    private switchSelectionBetweenTimeparts(event: KeyboardEvent): void {\n        const changedTime: Date | undefined = this.currentDateTimeInput;\n        const keyCode: string = this.getKeyCode(event);\n\n        if (changedTime !== undefined) {\n            let cursorPos: number = this.elementRef.nativeElement.selectionStart;\n            if (keyCode === ARROW_LEFT_KEYCODE) {\n                cursorPos = this.getCursorPositionOfPrevTimePartStart(cursorPos, this.elementRef.nativeElement.value);\n            } else if (keyCode === ARROW_RIGHT_KEYCODE) {\n                cursorPos = this.getCursorPositionOfNextTimePartStart(cursorPos, this.elementRef.nativeElement.value);\n            }\n            this.createSelectionOfTimeComponentInInput(cursorPos);\n        }\n    }\n\n    /**\n     * @description Microsoft EDGE doesn't support KeyboaedEvent.code thus we need this helper\n     */\n    private getKeyCode(event: KeyboardEvent): string {\n        return event.code || event.key;\n    }\n\n    private createSelectionOfTimeComponentInInput(cursorPos: number): void {\n        setTimeout(() => {\n            const newEditParams = this.getTimeEditMetrics(cursorPos);\n            this.elementRef.nativeElement.selectionStart = newEditParams.cursorStartPosition;\n            this.elementRef.nativeElement.selectionEnd = newEditParams.cursorEndPosition;\n        });\n    }\n\n    private incrementTime(dateVal: Date,\n                          whatToIncrement: TimeParts = TimeParts.seconds): Date {\n        let { hours, minutes, seconds } = this.getTimeDigitsFromDate(dateVal);\n\n        switch (whatToIncrement) {\n            case TimeParts.hours:\n                hours++;\n                break;\n            case TimeParts.minutes:\n                minutes++;\n                break;\n            case TimeParts.seconds:\n                seconds++;\n                break;\n            default:\n        }\n\n        if (seconds > SECONDS_PER_MINUTE) { seconds = 0; }\n\n        if (minutes > MINUTES_PER_HOUR) { minutes = 0; }\n\n        if (hours > HOURS_PER_DAY) { hours = 0; }\n\n        return <Date> this.getDateFromTimeDigits(hours, minutes, seconds);\n    }\n\n    /**\n     * @description Decrement part of time\n     */\n    private decrementTime(dateVal: Date,\n                          whatToDecrement: TimeParts = TimeParts.seconds): Date {\n        let { hours, minutes, seconds } = this.getTimeDigitsFromDate(dateVal);\n\n        switch (whatToDecrement) {\n            case TimeParts.hours:\n                hours--;\n                break;\n            case TimeParts.minutes:\n                minutes--;\n                break;\n            case TimeParts.seconds:\n                seconds--;\n                break;\n            default:\n        }\n\n        if (seconds < 0) { seconds = SECONDS_PER_MINUTE; }\n\n        if (minutes < 0) { minutes = MINUTES_PER_HOUR; }\n\n        if (hours < 0) { hours = HOURS_PER_DAY; }\n\n        return <Date> this.getDateFromTimeDigits(hours, minutes, seconds);\n    }\n\n    private getCursorPositionOfPrevTimePartStart(cursorPos: number, timeString: string): number {\n        return cursorPos === 0 ? timeString.length : cursorPos - 1;\n    }\n\n    private getCursorPositionOfNextTimePartStart(cursorPos: number,\n                                                 timeString: string,\n                                                 timeDevider: string = ':'): number {\n        const nextDividerPos: number = timeString.indexOf(timeDevider, cursorPos);\n\n        return nextDividerPos !== undefined ? nextDividerPos + 1 : 0;\n    }\n\n    /**\n     * @description Get params for arrow-keys (up/down) time valie edit.\n     * @param cursorPosition Current cursor position in timeString\n     */\n    private getTimeEditMetrics(cursorPosition: number): {\n        modifiedTimePart: TimeParts;\n        cursorStartPosition: number;\n        cursorEndPosition: number;\n    } {\n        const timeString: string = this.elementRef.nativeElement.value;\n        let modifiedTimePart: TimeParts;\n        let cursorStartPosition: number;\n        let cursorEndPosition: number;\n        const hoursIndex = 0;\n        const minutesIndex = timeString.indexOf(':', hoursIndex + 1);\n        const secondsIndex = minutesIndex !== -1 ? timeString.indexOf(':', minutesIndex + 1) : -1;\n\n        if (secondsIndex !== -1 && cursorPosition > secondsIndex) {\n            modifiedTimePart = TimeParts.seconds;\n            cursorStartPosition = secondsIndex + 1;\n            cursorEndPosition = timeString.length;\n        } else if (minutesIndex !== -1 && cursorPosition > minutesIndex) {\n            modifiedTimePart = TimeParts.minutes;\n            cursorStartPosition = minutesIndex + 1;\n            cursorEndPosition = secondsIndex > -1 ? secondsIndex : timeString.length;\n        } else {\n            modifiedTimePart = TimeParts.hours;\n            cursorStartPosition = hoursIndex;\n            cursorEndPosition = minutesIndex !== -1 ? minutesIndex : timeString.length;\n        }\n\n        return {\n            modifiedTimePart,\n            cursorStartPosition,\n            cursorEndPosition\n        };\n    }\n\n    /**\n     * @description Create time string for displaying inside input element of UI\n     */\n    private getTimeStringFromDate(tempVal: Date,\n                                  timeFormat: TimeFormats = DEFAULT_TIME_FORMAT): string {\n        const hours: string = this.getNumberWithLeadingZero(tempVal.getHours());\n        const minutes: string = this.getNumberWithLeadingZero(tempVal.getMinutes());\n        const seconds: string = this.getNumberWithLeadingZero(tempVal.getSeconds());\n\n        const formattedTimeGenerators = {\n            [TimeFormats.HHmm]: () => `${hours}:${minutes}`,\n            [TimeFormats.HHmmss]: () => `${hours}:${minutes}:${seconds}`\n        };\n\n        return formattedTimeGenerators[timeFormat]();\n    }\n\n    private getParsedTimeParts(timeString: string): {\n        hoursOnly: any;\n        hoursAndMinutes: any;\n        hoursAndMinutesAndSeconds: any;\n    } {\n        const hoursAndMinutesAndSeconds = timeString.match(HOURS_MINUTES_SECONDS_REGEXP);\n        const hoursAndMinutes = timeString.match(HOURS_MINUTES_REGEXP);\n        const hoursOnly = timeString.match(HOURS_ONLY_REGEXP);\n\n        return {\n            hoursOnly,\n            hoursAndMinutes,\n            hoursAndMinutesAndSeconds\n        };\n    }\n\n    /**\n     * @description Create Date object from separate parts of time\n     */\n    private getDateFromTimeDigits(hours: number, minutes: number, seconds: number = 0): Date | undefined {\n        return this.getDateFromTimeString(`${hours}:${minutes}:${seconds}`);\n    }\n\n    private getDateFromTimeString(timeString: string | undefined): Date | undefined {\n        // TODO Use moment-js\n        if (timeString === undefined) { return; }\n\n        const {\n            hoursOnly,\n            hoursAndMinutes,\n            hoursAndMinutesAndSeconds\n        } = this.getParsedTimeParts(timeString);\n\n        if (timeString.trim().length === 0 ||\n            hoursOnly === null && hoursAndMinutes === null && hoursAndMinutesAndSeconds === null) {\n            return;\n        }\n\n        // tslint:disable no-magic-numbers\n        let hours: number = 0;\n        let minutes: number = 0;\n        let seconds: number = 0;\n\n        if (hoursOnly) {\n            hours = Number(hoursOnly[1]);\n        } else if (hoursAndMinutes) {\n            hours = Number(hoursAndMinutes[1]);\n            minutes = Number(hoursAndMinutes[2]);\n        } else if (hoursAndMinutesAndSeconds) {\n            hours = Number(hoursAndMinutesAndSeconds[1]);\n            minutes = Number(hoursAndMinutesAndSeconds[2]);\n            seconds = Number(hoursAndMinutesAndSeconds[3]);\n        }\n        // const timestamp: number = Date.parse(fullDateString);\n        const resultDate: Date = new Date(1970, 0, 1, hours, minutes, seconds);\n        // tslint:enable no-magic-numbers\n\n        return isNaN(resultDate.getTime()) ? undefined : resultDate;\n    }\n\n    private getNumberWithLeadingZero(digit: number): string {\n        const MAX_DIGIT_WITH_LEADING_ZERO: number = 9;\n\n        return digit > MAX_DIGIT_WITH_LEADING_ZERO ? `${digit}` : `0${digit}`;\n    }\n\n    private getTimeDigitsFromDate(dateVal: Date): { hours: number; minutes: number; seconds: number } {\n        return {\n            hours: dateVal.getHours(),\n            minutes: dateVal.getMinutes(),\n            seconds: dateVal.getSeconds()\n        };\n    }\n\n    private parseValidator(): ValidationErrors | null {\n        return this.currentDateTimeInput === undefined ?\n            { mcTimepickerParse: { text: this.elementRef.nativeElement.value } } :\n            null;\n    }\n\n    private minTimeValidator(): ValidationErrors | null {\n\n        if (this.currentDateTimeInput !== undefined &&\n            this.minDateTime !== undefined &&\n            this.isTimeLowerThenMin(this.currentDateTimeInput)) {\n            return { mcTimepickerLowerThenMintime: { text: this.elementRef.nativeElement.value } };\n        }\n\n        return null;\n    }\n\n    private maxTimeValidator(): ValidationErrors | null {\n        if (this.currentDateTimeInput !== undefined &&\n            this.maxDateTime !== undefined &&\n            this.isTimeGreaterThenMax(this.currentDateTimeInput)) {\n            return { mcTimepickerHigherThenMaxtime: { text: this.elementRef.nativeElement.value } };\n        }\n\n        return null;\n    }\n\n    private isTimeLowerThenMin(timeToCompare: Date): boolean {\n        return timeToCompare.getTime() - (<Date> this.minDateTime).getTime() < 0;\n    }\n\n    private isTimeGreaterThenMax(timeToCompare: Date): boolean {\n        return timeToCompare.getTime() - (<Date> this.maxDateTime).getTime() >= 0;\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\n\nimport { A11yModule } from '@ptsecurity/cdk/a11y';\nimport { PlatformModule } from '@ptsecurity/cdk/platform';\n\nimport { McTimepicker } from './timepicker';\n\n\n@NgModule({\n    imports: [\n        CommonModule,\n        A11yModule,\n        PlatformModule,\n        FormsModule\n    ],\n    declarations: [\n        McTimepicker\n    ],\n    exports: [\n        McTimepicker\n    ]\n})\nexport class McTimepickerModule {}\n","import {\n    animate,\n    AnimationTriggerMetadata,\n    state,\n    style,\n    transition,\n    trigger,\n    query,\n    animateChild,\n    group\n} from '@angular/animations';\n\n\n/**\n * The following are all the animations for the mat-select component, with each\n * const containing the metadata for one animation.\n *\n * The values below match the implementation of the AngularJS Material mat-select animation.\n */\nexport const mcSelectAnimations: {\n    readonly transformPanel: AnimationTriggerMetadata;\n    readonly fadeInContent: AnimationTriggerMetadata;\n} = {\n    /**\n     * This animation transforms the select's overlay panel on and off the page.\n     *\n     * When the panel is attached to the DOM, it expands its width by the amount of padding, scales it\n     * up to 100% on the Y axis, fades in its border, and translates slightly up and to the\n     * side to ensure the option text correctly overlaps the trigger text.\n     *\n     * When the panel is removed from the DOM, it simply fades out linearly.\n     */\n    transformPanel: trigger('transformPanel', [\n        state('void', style({\n            transform: 'scaleY(0)',\n            minWidth: '100%',\n            opacity: 0\n        })),\n        transition('void => *', group([\n            query('@fadeInContent', animateChild()),\n            animate('150ms cubic-bezier(0.25, 0.8, 0.25, 1)')\n        ])),\n        transition('* => void', [\n            animate('250ms 100ms linear', style({ opacity: 0 }))\n        ])\n    ]),\n\n    /**\n     * This animation fades in the background color and text content of the\n     * select's options. It is time delayed to occur 100ms after the overlay\n     * panel has transformed in.\n     */\n    fadeInContent: trigger('fadeInContent', [\n        state('showing', style({ opacity: 1 })),\n        transition('void => showing', [\n            style({ opacity: 0 }),\n            animate('150ms 100ms cubic-bezier(0.55, 0, 0.55, 0.2)')\n        ])\n    ])\n};\n\n\n/**\n * @deprecated\n * @breaking-change 7.0.0\n */\nexport const transformPanel = mcSelectAnimations.transformPanel;\n\n/**\n * @deprecated\n * @breaking-change 7.0.0\n */\nexport const fadeInContent = mcSelectAnimations.fadeInContent;\n","import { fromEvent, Observable, Subscription } from 'rxjs';\nimport { debounceTime } from 'rxjs/operators';\n\nimport {\n    AfterViewInit,\n    Component, Directive,\n    ElementRef,\n    HostBinding,\n    Input,\n    OnDestroy,\n    OnInit,\n    ViewEncapsulation,\n    ContentChild,\n    TemplateRef,\n    ChangeDetectorRef,\n    ChangeDetectionStrategy,\n    ViewChild\n} from '@angular/core';\nimport { FocusMonitor, FocusOrigin } from '@ptsecurity/cdk/a11y';\nimport { SPACE } from '@ptsecurity/cdk/keycodes';\nimport { Platform } from '@ptsecurity/cdk/platform';\nimport { CanDisable, CanDisableCtor, mixinDisabled } from '@ptsecurity/mosaic/core';\n\n\nconst COLLAPSED_CLASS: string = 'mc-navbar-collapsed-title';\nconst MC_ICON = 'mc-icon';\nconst MC_NAVBAR = 'mc-navbar';\nconst MC_NAVBAR_CONTAINER = 'mc-navbar-container';\nconst MC_NAVBAR_ITEM = 'mc-navbar-item';\nconst MC_NAVBAR_BRAND = 'mc-navbar-brand';\nconst MC_NAVBAR_TITLE = 'mc-navbar-title';\nconst MC_NAVBAR_LOGO = 'mc-navbar-logo';\n\nexport type McNavbarContainerPositionType = 'left' | 'right';\n\nexport interface IMcNavbarDropdownItem {\n    link?: string;\n    text: string;\n}\n\n@Directive({\n    selector: MC_NAVBAR_LOGO,\n    host: {\n        class: MC_NAVBAR_LOGO\n    }\n})\nexport class McNavbarLogo {}\n\n@Directive({\n    selector: MC_NAVBAR_BRAND,\n    host: {\n        class: MC_NAVBAR_BRAND\n    }\n})\nexport class McNavbarBrand {}\n\n@Directive({\n    selector: MC_NAVBAR_TITLE,\n    host: {\n        class: MC_NAVBAR_TITLE\n    }\n})\nexport class McNavbarTitle {}\n\nexport class McNavbarItemBase {\n    constructor(public _elementRef: ElementRef) {}\n}\n\nexport const _McNavbarMixinBase: CanDisableCtor & typeof McNavbarItemBase = mixinDisabled(McNavbarItemBase);\n\n@Component({\n    selector: MC_NAVBAR_ITEM,\n    template: `\n        <a\n            [attr.tabindex]=\\\"disabled ? -1 : tabIndex\\\"\n            (click)=\"handleClickByItem()\"\n            (keydown)=\"handleKeydown($event)\"\n            class=\"mc-navbar-item\"\n        >\n            <ng-content></ng-content>\n            <i *ngIf=\"hasDropdownContent\" mc-icon=\"mc-angle-M_16\"></i>\n        </a>\n        <ul\n            #dropdownContent\n            *ngIf=\"hasDropdownContent\"\n            [ngClass]=\"{ 'is-collapsed': isCollapsed }\"\n            class=\"mc-navbar-dropdown\"\n        >\n            <li\n                *ngFor=\"let item of dropdownItems\"\n                (click)=\"handleClickByDropdownItem()\"\n                class=\"mc-navbar-dropdown-item\"\n            >\n                <ng-container *ngIf=\"dropdownItemTmpl\">\n                    <ng-container *ngTemplateOutlet=\"dropdownItemTmpl; context: { $implicit: item }\"></ng-container>\n                </ng-container>\n                <a\n                    *ngIf=\"!dropdownItemTmpl\"\n                    [attr.href]=\"item.link\"\n                    [ngClass]=\"{ 'is-active': isActiveDropdownLink(item.link) }\"\n                    class=\"mc-navbar-dropdown-link\"\n                >{{ item.text }}</a>\n            </li>\n        </ul>\n    `,\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    inputs: ['disabled'],\n    host: {\n        '[attr.disabled]': 'disabled || null',\n        '[attr.tabindex]': '-1'\n    }\n})\nexport class McNavbarItem extends _McNavbarMixinBase implements OnInit, AfterViewInit, OnDestroy, CanDisable {\n\n    @Input()\n    tabIndex: number = 0;\n\n    @Input()\n    dropdownItems: IMcNavbarDropdownItem[] = [];\n\n    @Input()\n    set collapsedTitle(value: string) {\n        this.elementRef.nativeElement.setAttribute('computedTitle', encodeURI(value));\n    }\n\n    @ContentChild('dropdownItemTmpl', { read: TemplateRef })\n    dropdownItemTmpl: TemplateRef<IMcNavbarDropdownItem>;\n\n    @ViewChild('dropdownContent', { read: ElementRef })\n    dropdownContent: ElementRef;\n\n    get hasDropdownContent() {\n        return this.dropdownItems.length > 0;\n    }\n\n    isCollapsed: boolean = true;\n\n    private _subscription: Subscription = new Subscription();\n    private _focusMonitor$: Observable<FocusOrigin>;\n\n    private get _dropdownElements(): HTMLElement[] {\n        return this.dropdownContent ? this.dropdownContent.nativeElement.querySelectorAll('li > *') : [];\n    }\n\n    constructor(\n        public  elementRef: ElementRef,\n        private _focusMonitor: FocusMonitor,\n        private _platform: Platform,\n        private _cdRef: ChangeDetectorRef\n    ) {\n        super(elementRef);\n    }\n\n    ngOnInit() {\n        this.denyClickIfDisabled();\n\n        this._focusMonitor$ = this._focusMonitor.monitor(this.elementRef.nativeElement, true);\n\n        if (this.hasDropdownContent) {\n            this.listenClickOutside();\n        }\n    }\n\n    ngAfterViewInit() {\n        if (!this.hasDropdownContent) {\n            return;\n        }\n\n        this.startListenFocusDropdownItems();\n    }\n\n    ngOnDestroy() {\n        this._subscription.unsubscribe();\n        this._focusMonitor.stopMonitoring(this.elementRef.nativeElement);\n        this.stopListenFocusDropdownItems();\n    }\n\n    isActiveDropdownLink(link: string): boolean {\n        if (!this._platform.isBrowser) {\n            return false;\n        }\n\n        return window.location.href.indexOf(link) >= 0;\n    }\n\n    handleClickByItem() {\n        this.toggleDropdown();\n    }\n\n    handleKeydown($event: KeyboardEvent) {\n        const isNavbarItem = ($event.target as HTMLElement).classList.contains(MC_NAVBAR_ITEM);\n\n        // tslint:disable-next-line\n        if (this.hasDropdownContent && $event.keyCode === SPACE && isNavbarItem) {\n            this.toggleDropdown();\n        }\n    }\n\n    handleClickByDropdownItem() {\n        this.forceCloseDropdown();\n    }\n\n    private listenClickOutside() {\n        this._subscription.add(\n            this._focusMonitor$.subscribe((origin) => {\n                if (origin === null) {\n                    this.forceCloseDropdown();\n                }\n            })\n        );\n    }\n\n    private toggleDropdown() {\n        this.isCollapsed = !this.isCollapsed;\n    }\n\n    private forceCloseDropdown() {\n        this.isCollapsed = true;\n        this._cdRef.detectChanges();\n    }\n\n    private startListenFocusDropdownItems() {\n        this._dropdownElements.forEach((el) => {\n            this._focusMonitor.monitor(el, true);\n        });\n    }\n\n    private stopListenFocusDropdownItems() {\n        this._dropdownElements.forEach((el) => {\n            this._focusMonitor.stopMonitoring(el);\n        });\n    }\n\n    // This method is required due to angular 2 issue https://github.com/angular/angular/issues/11200\n    private denyClickIfDisabled() {\n        const events: Event[] = this.elementRef.nativeElement.eventListeners('click');\n\n        events.forEach((event) => this.elementRef.nativeElement.removeEventListener('click', event));\n\n        this.elementRef.nativeElement.addEventListener('click', (event: MouseEvent) => {\n            if (this.elementRef.nativeElement.hasAttribute('disabled')) {\n                event.stopImmediatePropagation();\n            }\n        }, true);\n\n        events.forEach((event) => this.elementRef.nativeElement.addEventListener('click', event));\n    }\n}\n\n@Directive({\n    selector: MC_NAVBAR_CONTAINER\n})\nexport class McNavbarContainer {\n    @Input()\n    position: McNavbarContainerPositionType = 'left';\n\n    @HostBinding('class')\n    get cssClasses(): string {\n        return this.position === 'left' ? 'mc-navbar-left' : 'mc-navbar-right';\n    }\n}\n\nclass CollapsibleItem {\n    private _collapsed: boolean = false;\n\n    constructor(\n        public element: HTMLElement,\n        public width: number\n    ) {}\n\n    processCollapsed(collapsed: boolean) {\n        this._collapsed = collapsed;\n\n        this.updateCollapsedClass();\n    }\n\n    private updateCollapsedClass() {\n        if (this._collapsed) {\n            this.element.classList.add(COLLAPSED_CLASS);\n        } else {\n            this.element.classList.remove(COLLAPSED_CLASS);\n        }\n\n    }\n}\n\nclass CachedItemWidth {\n\n    get canCollapse(): boolean {\n        return this.itemsForCollapse.length > 0;\n    }\n\n    private _collapsedItemsWidth: number;\n\n    get collapsedItemsWidth(): number {\n        if (this._collapsedItemsWidth !== undefined) {\n            return this._collapsedItemsWidth;\n        }\n\n        this.calculateAndCacheCollapsedItemsWidth();\n\n        return this._collapsedItemsWidth;\n    }\n\n    constructor(\n        public element: HTMLElement,\n        public width: number,\n        public itemsForCollapse: CollapsibleItem[] = []\n    ) {}\n\n    processCollapsed(collapsed: boolean) {\n        if (this.itemsForCollapse.length > 0) {\n            this.updateTitle(collapsed);\n        }\n\n        this.itemsForCollapse.forEach((item) => item.processCollapsed(collapsed));\n    }\n\n    private calculateAndCacheCollapsedItemsWidth() {\n        this._collapsedItemsWidth = this.itemsForCollapse\n            .reduce((acc, item) => acc + item.width, 0);\n    }\n\n    private getTitle(): string {\n        const computedTitle = this.element.getAttribute('computedTitle');\n\n        return computedTitle\n            ? decodeURI(computedTitle)\n            : (this.itemsForCollapse.length > 0 ? this.itemsForCollapse[0].element.innerText : '');\n    }\n\n    private updateTitle(collapsed: boolean) {\n        if (collapsed) {\n            this.element.setAttribute('title', this.getTitle());\n        } else {\n            this.element.removeAttribute('title');\n        }\n    }\n}\n\n\n@Component({\n    selector: MC_NAVBAR,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    template: `\n        <nav class=\"mc-navbar\">\n            <ng-content select=\"[${MC_NAVBAR_CONTAINER}],${MC_NAVBAR_CONTAINER}\"></ng-content>\n        </nav>\n    `,\n    styleUrls: ['./navbar.css'],\n    encapsulation: ViewEncapsulation.None\n})\nexport class McNavbar implements AfterViewInit, OnDestroy {\n\n    private readonly forceRecalculateItemsWidth: boolean = false;\n    private readonly resizeDebounceInterval: number = 100;\n    private readonly firstLevelElement: string = MC_NAVBAR_CONTAINER;\n    private readonly secondLevelElements: string[] = [\n        MC_NAVBAR_ITEM,\n        MC_NAVBAR_BRAND,\n        MC_NAVBAR_TITLE\n    ];\n\n    private _totalItemsWidths: number;\n    private _itemsWidths: CachedItemWidth[];\n\n    private get maxAllowedWidth(): number {\n        return this._elementRef.nativeElement.querySelector('nav').getBoundingClientRect().width;\n    }\n\n    private get itemsWidths(): CachedItemWidth[] {\n        if (this._itemsWidths !== undefined && !this.forceRecalculateItemsWidth) {\n            return this._itemsWidths;\n        }\n\n        this.calculateAndCacheItemsWidth();\n\n        return this._itemsWidths;\n    }\n\n    private get totalItemsWidth(): number {\n        if (this._totalItemsWidths !== undefined && !this.forceRecalculateItemsWidth) {\n            return this._totalItemsWidths;\n        }\n\n        this.calculateAndCacheTotalItemsWidth();\n\n        return this._totalItemsWidths;\n    }\n\n    private _resizeSubscription: Subscription;\n\n    constructor(\n        private _elementRef: ElementRef\n    ) {\n        const resizeObserver = fromEvent(window, 'resize')\n            .pipe(debounceTime(this.resizeDebounceInterval));\n\n        this._resizeSubscription = resizeObserver.subscribe(this.updateCollapsed.bind(this));\n    }\n\n    updateCollapsed(): void {\n        let collapseDelta = this.totalItemsWidth - this.maxAllowedWidth;\n\n        for (let i = this.itemsWidths.length - 1; i >= 0; i--) {\n            const item = this.itemsWidths[i];\n\n            if (!item.canCollapse) {\n                continue;\n            }\n\n            item.processCollapsed(collapseDelta > 0);\n            collapseDelta -= item.collapsedItemsWidth;\n        }\n    }\n\n    ngAfterViewInit(): void {\n        // Note: this wait is required for loading and rendering fonts for icons;\n        // unfortunately we cannot control font rendering\n        setTimeout(() => this.updateCollapsed(), 0);\n    }\n\n    ngOnDestroy() {\n        this._resizeSubscription.unsubscribe();\n    }\n\n    private calculateAndCacheTotalItemsWidth() {\n        this._totalItemsWidths = this.itemsWidths\n            .reduce((acc, item) => acc + item.width, 0);\n    }\n\n    private getOuterElementWidth(element: HTMLElement): number {\n        const baseWidth  = element.getBoundingClientRect().width;\n        const marginRight = parseInt(getComputedStyle(element).getPropertyValue('margin-right'));\n        const marginLeft = parseInt(getComputedStyle(element).getPropertyValue('margin-left'));\n\n        return baseWidth + marginRight + marginLeft;\n    }\n\n    private calculateAndCacheItemsWidth() {\n        const allItemsSelector = this.secondLevelElements\n            .map((e: string) => `${this.firstLevelElement}>${e}`);\n        const allItems: HTMLElement[] = Array.from(this._elementRef.nativeElement.querySelectorAll(allItemsSelector));\n\n        this._itemsWidths = allItems\n            .map((el) => new CachedItemWidth(el, this.getOuterElementWidth(el), this.getItemsForCollapse(el)));\n    }\n\n    private getItemsForCollapse(element: HTMLElement): CollapsibleItem[] {\n        const icon = element.querySelector(`[${MC_ICON}],${MC_NAVBAR_LOGO},[${MC_NAVBAR_LOGO}]`);\n\n        if (!icon) {\n            return [];\n        }\n\n        return Array.from(element.querySelectorAll(MC_NAVBAR_TITLE))\n            .map((el) => new CollapsibleItem(<HTMLElement> el, el.getBoundingClientRect().width));\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { A11yModule } from '@ptsecurity/cdk/a11y';\nimport { PlatformModule } from '@ptsecurity/cdk/platform';\n\nimport { McIconModule } from '@ptsecurity/mosaic/icon';\n\nimport {\n    McNavbar,\n    McNavbarContainer,\n    McNavbarItem,\n    McNavbarTitle,\n    McNavbarBrand,\n    McNavbarLogo\n} from './navbar.component';\n\n\n@NgModule({\n    imports: [\n        CommonModule,\n        A11yModule,\n        PlatformModule,\n        McIconModule\n    ],\n    exports: [\n        McNavbar,\n        McNavbarContainer,\n        McNavbarTitle,\n        McNavbarItem,\n        McNavbarBrand,\n        McNavbarLogo\n    ],\n    declarations: [\n        McNavbar,\n        McNavbarContainer,\n        McNavbarTitle,\n        McNavbarItem,\n        McNavbarBrand,\n        McNavbarLogo\n    ]\n})\nexport class McNavbarModule {}\n","import {\n    ChangeDetectionStrategy,\n    Component,\n    ViewEncapsulation,\n    ElementRef,\n    Input\n} from '@angular/core';\nimport { CanColor, CanColorCtor, mixinColor, ThemePalette } from '@ptsecurity/mosaic/core';\n\n\nexport type ProgressBarMode = 'determinate' | 'indeterminate';\n\nlet idIterator = 0;\n\nconst MIN_PERCENT = 0;\nconst MAX_PERCENT = 100;\n\nexport class McProgressBarBase {\n    constructor(public _elementRef: ElementRef) {}\n}\n\nexport const _McProgressBarMixinBase:\n    CanColorCtor &\n    typeof McProgressBarBase =\n        mixinColor(McProgressBarBase);\n\n@Component({\n    selector: 'mc-progress-bar',\n    templateUrl: './progress-bar.component.html',\n    styleUrls: ['./progress-bar.css'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n    host: {\n        class: 'mc-progress-bar',\n        '[attr.id]': 'id'\n    }\n})\nexport class McProgressBar extends _McProgressBarMixinBase implements CanColor {\n    @Input() id: string = `mc-progress-bar-${idIterator++}`;\n    @Input() value: number = 0;\n    @Input() mode: ProgressBarMode = 'determinate';\n    @Input() color: ThemePalette = ThemePalette.Primary;\n\n    constructor(elementRef: ElementRef) {\n        super(elementRef);\n    }\n\n    get percentage(): number {\n        return Math.max(MIN_PERCENT, Math.min(MAX_PERCENT, this.value)) / MAX_PERCENT;\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { PlatformModule } from '@ptsecurity/cdk/platform';\n\nimport {\n    McProgressBar\n} from './progress-bar.component';\n\n\n@NgModule({\n    imports: [\n        CommonModule,\n        PlatformModule\n    ],\n    exports: [\n        McProgressBar\n    ],\n    declarations: [\n        McProgressBar\n    ]\n})\nexport class McProgressBarModule {}\n","import {\n    ChangeDetectionStrategy,\n    Component,\n    ViewEncapsulation,\n    ElementRef,\n    Input\n} from '@angular/core';\nimport { CanColor, CanColorCtor, mixinColor, ThemePalette } from '@ptsecurity/mosaic/core';\n\n\nexport type ProgressSpinnerMode = 'determinate' | 'indeterminate';\n\nlet idIterator = 0;\n\nconst MIN_PERCENT = 0;\nconst MAX_PERCENT = 100;\n\nexport class McProgressSpinnerBase {\n    constructor(public _elementRef: ElementRef) {}\n}\n\nexport const _McProgressSpinnerMixinBase:\n    CanColorCtor &\n    typeof McProgressSpinnerBase =\n        mixinColor(McProgressSpinnerBase);\n\nconst MAX_DASH_ARRAY = 273;\n\n@Component({\n    selector: 'mc-progress-spinner',\n    templateUrl: './progress-spinner.component.html',\n    styleUrls: ['./progress-spinner.css'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n    host: {\n        class: 'mc-progress-spinner',\n        '[attr.id]': 'id'\n    }\n})\nexport class McProgressSpinner extends _McProgressSpinnerMixinBase implements CanColor {\n    @Input() id: string = `mc-progress-spinner-${idIterator++}`;\n    @Input() value: number = 0;\n    @Input() mode: ProgressSpinnerMode = 'determinate';\n    @Input() color: ThemePalette = ThemePalette.Primary;\n\n    constructor(elementRef: ElementRef) {\n        super(elementRef);\n    }\n\n    get percentage(): number {\n        return Math.max(MIN_PERCENT, Math.min(MAX_PERCENT, this.value)) / MAX_PERCENT;\n    }\n\n    get dashOffsetPercent(): string {\n        return `${MAX_DASH_ARRAY - this.percentage * MAX_DASH_ARRAY}%`;\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { PlatformModule } from '@ptsecurity/cdk/platform';\n\nimport { McProgressSpinner } from './progress-spinner.component';\n\n\n@NgModule({\n    imports: [\n        CommonModule,\n        PlatformModule\n    ],\n    exports: [\n        McProgressSpinner\n    ],\n    declarations: [\n        McProgressSpinner\n    ]\n})\nexport class McProgressSpinnerModule {}\n","import {\n    AfterContentInit,\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component, ContentChildren, Directive, ElementRef, EventEmitter, forwardRef,\n    Input, OnDestroy, OnInit, Optional, Output, QueryList,\n    ViewChild,\n    ViewEncapsulation\n} from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\n\nimport { UniqueSelectionDispatcher } from '@ptsecurity/cdk/collections';\n\nimport {\n    CanColor, CanColorCtor,\n    CanDisable, CanDisableCtor,\n    HasTabIndex, HasTabIndexCtor,\n    mixinColor,\n    mixinDisabled,\n    mixinTabIndex,\n    toBoolean\n} from '@ptsecurity/mosaic/core';\n\n\n// Increasing integer for generating unique ids for radio components.\nlet nextUniqueId = 0;\n\n/** Change event object emitted by McRadio. */\nexport class McRadioChange {\n    constructor(\n        /** The McRadioButton that emits the change event. */\n        public source: McRadioButton,\n        /** The value of the McRadioButton. */\n        public value: any) {}\n}\n\n// Boilerplate for applying mixins to McRadioGroup.\n/** @docs-private */\nexport class McRadioGroupBase {}\nexport const _McRadioGroupMixinBase: CanDisableCtor & typeof McRadioGroupBase = mixinDisabled(McRadioGroupBase);\n\n/**\n * Provider Expression that allows mc-radio-group to register as a ControlValueAccessor. This\n * allows it to support [(ngModel)] and ngControl.\n * @docs-private\n */\nexport const MC_RADIO_GROUP_CONTROL_VALUE_ACCESSOR: any = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => McRadioGroup),\n    multi: true\n};\n\n@Directive({\n    selector: 'mc-radio-group',\n    exportAs: 'mcRadioGroup',\n    providers: [MC_RADIO_GROUP_CONTROL_VALUE_ACCESSOR],\n    host: {\n        role: 'radiogroup',\n        class: 'mc-radio-group'\n    },\n    inputs: ['disabled']\n})\nexport class McRadioGroup extends _McRadioGroupMixinBase\n    implements AfterContentInit, ControlValueAccessor, CanDisable {\n\n    /** Name of the radio button group. All radio buttons inside this group will use this name. */\n    @Input()\n    get name(): string { return this._name; }\n    set name(value: string) {\n        this._name = value;\n        this.updateRadioButtonNames();\n    }\n\n    /** Whether the labels should appear after or before the radio-buttons. Defaults to 'after' */\n    @Input()\n    get labelPosition(): 'before' | 'after' {\n        return this._labelPosition;\n    }\n    set labelPosition(v) {\n        this._labelPosition = v === 'before' ? 'before' : 'after';\n        this.markRadiosForCheck();\n    }\n\n    /** Value of the radio button. */\n    @Input()\n    get value(): any { return this._value; }\n    set value(newValue: any) {\n        if (this._value !== newValue) {\n            // Set this before proceeding to ensure no circular loop occurs with selection.\n            this._value = newValue;\n\n            this.updateSelectedRadioFromValue();\n            this.checkSelectedRadioButton();\n        }\n    }\n\n    /** Whether the radio button is selected. */\n    @Input()\n    get selected() { return this._selected; }\n    set selected(selected: McRadioButton | null) {\n        this._selected = selected;\n        this.value = selected ? selected.value : null;\n        this.checkSelectedRadioButton();\n    }\n\n    /** Whether the radio group is disabled */\n    @Input()\n    get disabled(): boolean { return this._disabled; }\n    set disabled(value) {\n        this._disabled = toBoolean(value);\n        this.markRadiosForCheck();\n    }\n\n    /** Whether the radio group is required */\n    @Input()\n    get required(): boolean { return this._required; }\n    set required(value: boolean) {\n        this._required = toBoolean(value);\n        this.markRadiosForCheck();\n    }\n\n    /**\n     * Event emitted when the group value changes.\n     * Change events are only emitted when the value changes due to user interaction with\n     * a radio button (the same behavior as `<input type-\"radio\">`).\n     */\n    @Output() readonly change: EventEmitter<McRadioChange> = new EventEmitter<McRadioChange>();\n\n    /** Child radio buttons. */\n    @ContentChildren(forwardRef(() => McRadioButton), { descendants: true })\n    _radios: QueryList<McRadioButton>;\n\n    /**\n     * Selected value for group. Should equal the value of the selected radio button if there *is*\n     * a corresponding radio button with a matching value. If there is *not* such a corresponding\n     * radio button, this value persists to be applied in case a new radio button is added with a\n     * matching value.\n     */\n    private _value: any = null;\n\n    /** The HTML name attribute applied to radio buttons in this group. */\n    private _name: string = `mc-radio-group-${nextUniqueId++}`;\n\n    /** The currently selected radio button. Should match value. */\n    private _selected: McRadioButton | null = null;\n\n    /** Whether the `value` has been set to its initial value. */\n    private _isInitialized: boolean = false;\n\n    /** Whether the labels should appear after or before the radio-buttons. Defaults to 'after' */\n    private _labelPosition: 'before' | 'after' = 'after';\n\n    /** Whether the radio group is disabled. */\n    private _disabled: boolean = false;\n\n    /** Whether the radio group is required. */\n    private _required: boolean = false;\n\n    constructor(\n        private readonly _changeDetector: ChangeDetectorRef\n    ) {\n        super();\n    }\n\n    /** The method to be called in order to update ngModel */\n    // tslint:disable-next-line\n    controlValueAccessorChangeFn: (value: any) => void = () => {};\n\n    /**\n     * onTouch function registered via registerOnTouch (ControlValueAccessor).\n     * @docs-private\n     */\n    // tslint:disable-next-line\n    onTouched: () => any = () => {};\n\n    checkSelectedRadioButton() {\n        if (this._selected && !this._selected.checked) {\n            this._selected.checked = true;\n        }\n    }\n\n    /**\n     * Initialize properties once content children are available.\n     * This allows us to propagate relevant attributes to associated buttons.\n     */\n    ngAfterContentInit() {\n        // Mark this component as initialized in AfterContentInit because the initial value can\n        // possibly be set by NgModel on McRadioGroup, and it is possible that the OnInit of the\n        // NgModel occurs *after* the OnInit of the McRadioGroup.\n        this._isInitialized = true;\n    }\n\n    /**\n     * Mark this group as being \"touched\" (for ngModel). Meant to be called by the contained\n     * radio buttons upon their blur.\n     */\n    touch() {\n        if (this.onTouched) {\n            this.onTouched();\n        }\n    }\n\n    /** Dispatch change event with current selection and group value. */\n    emitChangeEvent(): void {\n        if (this._isInitialized) {\n            this.change.emit(new McRadioChange(this._selected!, this._value));\n        }\n    }\n\n    markRadiosForCheck() {\n        if (this._radios) {\n            this._radios.forEach((radio) => radio.markForCheck());\n        }\n    }\n\n    /**\n     * Sets the model value. Implemented as part of ControlValueAccessor.\n     */\n    writeValue(value: any) {\n        this.value = value;\n        this._changeDetector.markForCheck();\n    }\n\n    /**\n     * Registers a callback to be triggered when the model value changes.\n     * Implemented as part of ControlValueAccessor.\n     * @param fn Callback to be registered.\n     */\n    registerOnChange(fn: (value: any) => void) {\n        this.controlValueAccessorChangeFn = fn;\n    }\n\n    /**\n     * Registers a callback to be triggered when the control is touched.\n     * Implemented as part of ControlValueAccessor.\n     * @param fn Callback to be registered.\n     */\n    registerOnTouched(fn: any) {\n        this.onTouched = fn;\n    }\n\n    /**\n     * Sets the disabled state of the control. Implemented as a part of ControlValueAccessor.\n     * @param isDisabled Whether the control should be disabled.\n     */\n    setDisabledState(isDisabled: boolean) {\n        this.disabled = isDisabled;\n        this._changeDetector.markForCheck();\n    }\n\n    private updateRadioButtonNames(): void {\n        if (this._radios) {\n            this._radios.forEach((radio) => {\n                radio.name = this.name;\n            });\n        }\n    }\n\n    /** Updates the `selected` radio button from the internal _value state. */\n    private updateSelectedRadioFromValue(): void {\n        // If the value already matches the selected radio, do nothing.\n        const isAlreadySelected = this._selected !== null && this._selected.value === this._value;\n\n        if (this._radios != null && !isAlreadySelected) {\n            this._selected = null;\n            this._radios.forEach((radio) => {\n                radio.checked = this.value === radio.value;\n                if (radio.checked) {\n                    this._selected = radio;\n                }\n            });\n        }\n    }\n}\n\n\n// Boilerplate for applying mixins to McRadioButton.\n/** @docs-private */\nexport class McRadioButtonBase {\n    // Since the disabled property is manually defined for the McRadioButton and isn't set up in\n    // the mixin base class. To be able to use the tabindex mixin, a disabled property must be\n    // defined to properly work.\n    disabled: boolean;\n\n    constructor(public _elementRef: ElementRef) {}\n}\n\nexport const _McRadioButtonMixinBase:\n    CanColorCtor &\n    HasTabIndexCtor &\n    typeof McRadioButtonBase =\n        mixinColor(mixinTabIndex(McRadioButtonBase));\n\n\n@Component({\n    selector: 'mc-radio-button',\n    templateUrl: 'radio.component.html',\n    styleUrls: ['radio.css'],\n    inputs: ['color', 'tabIndex'],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    exportAs: 'mcRadioButton',\n    host: {\n        class: 'mc-radio-button',\n        '[attr.id]': 'id',\n        '[class.mc-radio-checked]': 'checked',\n        '[class.mc-radio-disabled]': 'disabled',\n        '(focus)': '_inputElement.nativeElement.focus()'\n    }\n})\nexport class McRadioButton extends _McRadioButtonMixinBase\n    implements OnInit, OnDestroy, CanColor, HasTabIndex {\n\n    private readonly _uniqueId: string = `mc-radio-${++nextUniqueId}`;\n\n    /* tslint:disable:member-ordering */\n\n    /** The unique ID for the radio button. */\n    @Input() id: string = this._uniqueId;\n\n    /** Analog to HTML 'name' attribute used to group radios for unique selection. */\n    @Input() name: string;\n\n    /** Used to set the 'aria-label' attribute on the underlying input element. */\n    @Input('aria-label') ariaLabel: string;\n\n    /** The 'aria-labelledby' attribute takes precedence as the element's text alternative. */\n    @Input('aria-labelledby') ariaLabelledby: string;\n\n    /** The 'aria-describedby' attribute is read after the element's label and field type. */\n    @Input('aria-describedby') ariaDescribedby: string;\n\n    /** Whether this radio button is checked. */\n    @Input()\n    get checked(): boolean { return this._checked; }\n    set checked(value: boolean) {\n        const newCheckedState = toBoolean(value);\n\n        if (this._checked !== newCheckedState) {\n            this._checked = newCheckedState;\n\n            if (newCheckedState && this.radioGroup && this.radioGroup.value !== this.value) {\n                this.radioGroup.selected = this;\n            } else if (!newCheckedState && this.radioGroup && this.radioGroup.value === this.value) {\n                // When unchecking the selected radio button, update the selected radio\n                // property on the group.\n                this.radioGroup.selected = null;\n            }\n\n            if (newCheckedState) {\n                // Notify all radio buttons with the same name to un-check.\n                this._radioDispatcher.notify(this.id, this.name);\n            }\n            this._changeDetector.markForCheck();\n        }\n    }\n\n    /** The value of this radio button. */\n    @Input()\n    get value(): any { return this._value; }\n    set value(value: any) {\n        if (this._value !== value) {\n            this._value = value;\n            if (this.radioGroup != null) {\n                if (!this.checked) {\n                    // Update checked when the value changed to match the radio group's value\n                    this.checked = this.radioGroup.value === value;\n                }\n                if (this.checked) {\n                    this.radioGroup.selected = this;\n                }\n            }\n        }\n    }\n\n    /** Whether the radio button is disabled. */\n    @Input()\n    get disabled(): boolean {\n        return this._disabled || (this.radioGroup != null && this.radioGroup.disabled);\n    }\n    set disabled(value: boolean) {\n        const newDisabledState = toBoolean(value);\n\n        if (this._disabled !== newDisabledState) {\n\n            this._disabled = newDisabledState;\n            this._changeDetector.markForCheck();\n        }\n    }\n\n    /** Whether the radio button is required. */\n    @Input()\n    get required(): boolean {\n        return this._required || (this.radioGroup && this.radioGroup.required);\n    }\n    set required(value: boolean) {\n        this._required = toBoolean(value);\n    }\n\n    /** Whether the label should appear after or before the radio button. Defaults to 'after' */\n    @Input()\n    get labelPosition(): 'before' | 'after' {\n        return this._labelPosition || (this.radioGroup && this.radioGroup.labelPosition) || 'after';\n    }\n    set labelPosition(value) {\n        this._labelPosition = value;\n    }\n    private _labelPosition: 'before' | 'after';\n\n    /** The native `<input type=radio>` element */\n    @ViewChild('input') _inputElement: ElementRef;\n\n    /**\n     * Event emitted when the checked state of this radio button changes.\n     * Change events are only emitted when the value changes due to user interaction with\n     * the radio button (the same behavior as `<input type-\"radio\">`).\n     */\n    @Output() readonly change: EventEmitter<McRadioChange> = new EventEmitter<McRadioChange>();\n\n    /** The parent radio group. May or may not be present. */\n    radioGroup: McRadioGroup;\n\n    @Input()\n    isFocused: boolean = false;\n\n    /** ID of the native input element inside `<mc-radio-button>` */\n    get inputId(): string { return `${this.id || this._uniqueId}-input`; }\n\n    /** Whether this radio is checked. */\n    private _checked: boolean = false;\n\n    /** Whether this radio is disabled. */\n    private _disabled: boolean;\n\n    /** Whether this radio is required. */\n    private _required: boolean;\n\n    /** Value assigned to this radio. */\n    private _value: any = null;\n\n    /** Unregister function for _radioDispatcher */\n    // tslint:disable-next-line\n    private readonly removeUniqueSelectionListener: () => void = () => {};\n\n    constructor(\n        @Optional() radioGroup: McRadioGroup,\n        elementRef: ElementRef,\n        private readonly _changeDetector: ChangeDetectorRef,\n        private readonly _radioDispatcher: UniqueSelectionDispatcher\n    ) {\n\n        super(elementRef);\n\n        this.radioGroup = radioGroup;\n\n        this.removeUniqueSelectionListener =\n            _radioDispatcher.listen((id: string, name: string) => {\n                if (id !== this.id && name === this.name) {\n                    this.checked = false;\n                }\n            });\n    }\n\n    ngOnInit() {\n        if (this.radioGroup) {\n            // If the radio is inside a radio group, determine if it should be checked\n            this.checked = this.radioGroup.value === this._value;\n            // Copy name from parent radio group\n            this.name = this.radioGroup.name;\n        }\n    }\n\n    ngOnDestroy() {\n        this.removeUniqueSelectionListener();\n    }\n\n    /** Focuses the radio button. */\n    // tslint:disable-next-line\n    focus(): void {}\n\n    /**\n     * Marks the radio button as needing checking for change detection.\n     * This method is exposed because the parent radio group will directly\n     * update bound properties of the radio button.\n     */\n    markForCheck() {\n        // When group value changes, the button will not be notified. Use `markForCheck` to explicit\n        // update radio button's status\n        this._changeDetector.markForCheck();\n    }\n\n    onInputClick(event: Event) {\n        // We have to stop propagation for click events on the visual hidden input element.\n        // By default, when a user clicks on a label element, a generated click event will be\n        // dispatched on the associated input element. Since we are using a label element as our\n        // root container, the click event on the `radio-button` will be executed twice.\n        // The real click event will bubble up, and the generated click event also tries to bubble up.\n        // This will lead to multiple click events.\n        // Preventing bubbling for the second event will solve that issue.\n        event.stopPropagation();\n    }\n\n    onInputChange(event: Event) {\n        // We always have to stop propagation on the change event.\n        // Otherwise the change event, from the input element, will bubble up and\n        // emit its event object to the `change` output.\n        event.stopPropagation();\n\n        const groupValueChanged = this.radioGroup && this.value !== this.radioGroup.value;\n        this.checked = true;\n        this.emitChangeEvent();\n\n        if (this.radioGroup) {\n            this.radioGroup.controlValueAccessorChangeFn(this.value);\n            this.radioGroup.touch();\n            if (groupValueChanged) {\n                this.radioGroup.emitChangeEvent();\n            }\n        }\n    }\n\n    /** Dispatch change event with current value. */\n    private emitChangeEvent(): void {\n        this.change.emit(new McRadioChange(this, this._value));\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { A11yModule } from '@ptsecurity/cdk/a11y';\nimport { McCommonModule } from '@ptsecurity/mosaic/core';\n\nimport { McRadioButton, McRadioGroup } from './radio.component';\n\n\n@NgModule({\n    imports: [CommonModule, A11yModule, McCommonModule],\n    exports: [McRadioGroup, McRadioButton],\n    declarations: [McRadioGroup, McRadioButton]\n})\nexport class McRadioModule {\n}\n","import { Directive, Input } from '@angular/core';\n\nimport { CdkTreeNodeDef } from '@ptsecurity/cdk/tree';\n\n\n@Directive({\n    selector: '[mcTreeNodeDef]',\n    inputs: ['when: mcTreeNodeDefWhen'],\n    providers: [{ provide: CdkTreeNodeDef, useExisting: McTreeNodeDef }]\n})\nexport class McTreeNodeDef<T> extends CdkTreeNodeDef<T> {\n    @Input('mcTreeNode') data: T;\n}\n","import { Directive, Input, OnInit } from '@angular/core';\nimport { CdkTreeNodePadding } from '@ptsecurity/cdk/tree';\n\n\n@Directive({\n    selector: '[mcTreeNodePadding]',\n    providers: [{ provide: CdkTreeNodePadding, useExisting: McTreeNodePadding }]\n})\nexport class McTreeNodePadding<T> extends CdkTreeNodePadding<T> implements OnInit {\n    get leftPadding(): number {\n        return (this._withIcon ? 0 : this._iconWidth) + this._baseLeftPadding;\n    }\n\n    _baseLeftPadding: number = 6;\n    _iconWidth: number = 20;\n    _indent: number = 16;\n\n    @Input('mcTreeNodePadding') level: number;\n\n    @Input('mcTreeNodePaddingIndent') indent: number;\n\n    _withIcon: boolean;\n\n    _paddingIndent(): string | null {\n        const nodeLevel = (this._treeNode.data && this._tree.treeControl.getLevel)\n            ? this._tree.treeControl.getLevel(this._treeNode.data)\n            : null;\n\n        const level = this._level || nodeLevel;\n\n        return level ? `${(level * this._indent) + this.leftPadding}px` : `${this._baseLeftPadding}px`;\n    }\n\n    ngOnInit(): void {\n        this._withIcon = this._tree.treeControl.isExpandable(this._treeNode.data);\n        this._setPadding();\n    }\n}\n","import {\n    AfterContentInit,\n    Attribute,\n    ChangeDetectionStrategy,\n    Component,\n    ContentChildren,\n    ElementRef,\n    EventEmitter,\n    forwardRef,\n    Input,\n    Output,\n    QueryList,\n    ViewEncapsulation,\n    ChangeDetectorRef,\n    Inject,\n    OnDestroy,\n    OnInit,\n    ViewChild\n} from '@angular/core';\n\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\n\nimport { Subscription } from 'rxjs';\n\nimport { FocusKeyManager, IFocusableOption } from '@ptsecurity/cdk/a11y';\nimport { SelectionModel } from '@ptsecurity/cdk/collections';\nimport { END, ENTER, HOME, PAGE_DOWN, PAGE_UP, SPACE } from '@ptsecurity/cdk/keycodes';\n\nimport {\n    McLine,\n    McLineSetter,\n    CanDisable,\n    mixinDisabled,\n    toBoolean, CanDisableCtor\n} from '@ptsecurity/mosaic/core';\n\n\n/**\n * Component for list-options of selection-list. Each list-option can automatically\n * generate a checkbox and can put current item into the selectionModel of selection-list\n * if the current item is selected.\n */\n@Component({\n    exportAs: 'mcListOption',\n    selector: 'mc-list-option',\n    host: {\n        tabindex: '-1',\n\n        class: 'mc-list-option',\n        '[class.mc-selected]': 'selected',\n        '[class.mc-focused]': '_hasFocus',\n        '(focus)': '_handleFocus()',\n        '(blur)': '_handleBlur()',\n        '(click)': '_handleClick()'\n    },\n    templateUrl: 'list-option.html',\n    encapsulation: ViewEncapsulation.None,\n    preserveWhitespaces: false,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class McListOption implements AfterContentInit, OnDestroy, OnInit, IFocusableOption {\n    _hasFocus: boolean = false;\n\n    @ContentChildren(McLine) _lines: QueryList<McLine>;\n\n    @ViewChild('text') _text: ElementRef;\n\n    // Whether the label should appear before or after the checkbox. Defaults to 'after'\n    @Input() checkboxPosition: 'before' | 'after' = 'after';\n\n    @Input() value: any;\n\n    @Input()\n    get disabled() {\n        return this._disabled || (this.listSelection && this.listSelection.disabled);\n    }\n\n    set disabled(value: any) {\n        const newValue = toBoolean(value);\n\n        if (newValue !== this._disabled) {\n            this._disabled = newValue;\n            this._changeDetector.markForCheck();\n        }\n    }\n\n    @Input()\n    get selected(): boolean {\n        return this.listSelection.selectedOptions && this.listSelection.selectedOptions.isSelected(this) || false;\n    }\n\n    set selected(value: boolean) {\n        const isSelected = toBoolean(value);\n\n        if (isSelected !== this._selected) {\n            this.setSelected(isSelected);\n\n            this.listSelection._reportValueChange();\n        }\n    }\n\n    private _lineSetter: McLineSetter;\n    private _selected = false;\n    private _disabled = false;\n\n    constructor(\n        private _element: ElementRef,\n        private _changeDetector: ChangeDetectorRef,\n        @Inject(forwardRef(() => McListSelection))\n        public listSelection: McListSelection\n    ) {}\n\n    ngOnInit() {\n        if (this._selected) {\n            // List options that are selected at initialization can't be reported properly to the form\n            // control. This is because it takes some time until the selection-list knows about all\n            // available options. Also it can happen that the ControlValueAccessor has an initial value\n            // that should be used instead. Deferring the value change report to the next tick ensures\n            // that the form control value is not being overwritten.\n            const wasSelected = this._selected;\n\n            Promise.resolve().then(() => {\n                if (this._selected || wasSelected) {\n                    this.selected = true;\n                    this._changeDetector.markForCheck();\n                }\n            });\n        }\n    }\n\n    ngAfterContentInit() {\n        this._lineSetter = new McLineSetter(this._lines, this._element);\n    }\n\n    ngOnDestroy(): void {\n        if (this.selected) {\n            // We have to delay this until the next tick in order\n            // to avoid changed after checked errors.\n            Promise.resolve().then(() => this.selected = false);\n        }\n\n        this.listSelection._removeOptionFromList(this);\n    }\n\n    toggle(): void {\n        this.selected = !this.selected;\n    }\n\n    focus(): void {\n        this._element.nativeElement.focus();\n\n        this.listSelection.setFocusedOption(this);\n    }\n\n    getLabel() {\n        return this._text ? this._text.nativeElement.textContent : '';\n    }\n\n    setSelected(selected: boolean) {\n        if (this._selected === selected || !this.listSelection.selectedOptions) { return; }\n\n        this._selected = selected;\n\n        if (selected) {\n            this.listSelection.selectedOptions.select(this);\n        } else {\n            this.listSelection.selectedOptions.deselect(this);\n        }\n\n        this._changeDetector.markForCheck();\n    }\n\n    _getHeight(): number {\n        return this._element.nativeElement.getClientRects()[0].height;\n    }\n\n    _handleClick() {\n        if (this.disabled) { return; }\n\n        this.listSelection.setFocusedOption(this);\n    }\n\n    _handleFocus() {\n        if (this.disabled || this._hasFocus) { return; }\n\n        this._hasFocus = true;\n    }\n\n    _handleBlur() {\n        this._hasFocus = false;\n\n        this.listSelection._onTouched();\n    }\n\n    _getHostElement(): HTMLElement {\n        return this._element.nativeElement;\n    }\n}\n\n\nexport const MC_SELECTION_LIST_VALUE_ACCESSOR: any = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => McListSelection),\n    multi: true\n};\n\n// Change event that is being fired whenever the selected state of an option changes. */\nexport class McListSelectionChange {\n    constructor(\n        // Reference to the selection list that emitted the event.\n        public source: McListSelection,\n        // Reference to the option that has been changed.\n        public option: McListOption\n    ) {}\n}\n\n\nexport class McListSelectionBase {}\n\nexport const _McListSelectionMixinBase: CanDisableCtor & typeof McListSelectionBase\n    = mixinDisabled(McListSelectionBase);\n\n@Component({\n    exportAs: 'mcListSelection',\n    selector: 'mc-list-selection',\n    template: '<ng-content></ng-content>',\n    styleUrls: ['./list.css'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n    inputs: ['disabled', 'tabIndex'],\n    host: {\n        class: 'mc-list-selection',\n        '[tabIndex]': 'tabIndex',\n        '(focus)': 'focus()',\n        '(blur)': '_onTouched()',\n        '(keydown)': '_onKeyDown($event)',\n        '(window:resize)': 'updateScrollSize()'\n    },\n    providers: [MC_SELECTION_LIST_VALUE_ACCESSOR],\n    preserveWhitespaces: false\n})\nexport class McListSelection extends _McListSelectionMixinBase implements\n    IFocusableOption, CanDisable, AfterContentInit, ControlValueAccessor {\n\n    _keyManager: FocusKeyManager<McListOption>;\n\n    // The option components contained within this selection-list.\n    @ContentChildren(McListOption) options: QueryList<McListOption>;\n\n    tabIndex: number;\n\n    autoSelect: boolean;\n    noUnselect: boolean;\n    multiple: boolean;\n\n    // todo temporary solution\n    withShift: boolean;\n    withCtrl: boolean;\n\n    @Input() horizontal: boolean = false;\n\n    // Emits a change event whenever the selected state of an option changes.\n    @Output() readonly selectionChange: EventEmitter<McListSelectionChange> = new EventEmitter<McListSelectionChange>();\n\n    selectedOptions: SelectionModel<McListOption>;\n\n    // Used for storing the values that were assigned before the options were initialized.\n    private _tempValues: string[] | null;\n\n    private _modelChanges = Subscription.EMPTY;\n\n    constructor(\n        private _element: ElementRef,\n        @Attribute('tabindex') tabIndex: string,\n        @Attribute('auto-select') autoSelect: string,\n        @Attribute('no-unselect') noUnselect: string,\n        @Attribute('multiple') multiple: string\n    ) {\n        super();\n\n        this.autoSelect = autoSelect === null ? true : toBoolean(autoSelect);\n        this.multiple = multiple === null ? true : toBoolean(multiple);\n        this.noUnselect = noUnselect === null ? true : toBoolean(noUnselect);\n\n        this.tabIndex = parseInt(tabIndex) || 0;\n\n        this.selectedOptions = new SelectionModel<McListOption>(this.multiple);\n    }\n\n    ngAfterContentInit(): void {\n        this.horizontal = toBoolean(this.horizontal);\n\n        this._keyManager = new FocusKeyManager<McListOption>(this.options)\n            .withTypeAhead()\n            .withVerticalOrientation(!this.horizontal)\n            .withHorizontalOrientation(this.horizontal ? 'ltr' : null);\n\n        if (this._tempValues) {\n            this._setOptionsFromValues(this._tempValues);\n            this._tempValues = null;\n        }\n\n        // Sync external changes to the model back to the options.\n        this._modelChanges = this.selectedOptions.onChange!.subscribe((event) => {\n            for (const item of event.added) {\n                item.selected = true;\n            }\n\n            for (const item of event.removed) {\n                item.selected = false;\n            }\n        });\n\n        this.updateScrollSize();\n    }\n\n    ngOnDestroy() {\n        this._modelChanges.unsubscribe();\n    }\n\n    focus() {\n        this._element.nativeElement.focus();\n    }\n\n    selectAll() {\n        this.options.forEach((option) => option.setSelected(true));\n\n        this._reportValueChange();\n    }\n\n    deselectAll() {\n        this.options.forEach((option) => option.setSelected(false));\n\n        this._reportValueChange();\n    }\n\n    updateScrollSize(): void {\n        if (this.horizontal || !this.options.first) { return; }\n\n        this._keyManager.withScrollSize(Math.floor(this._getHeight() / this.options.first._getHeight()));\n    }\n\n    // Sets the focused option of the selection-list.\n    setFocusedOption(option: McListOption): void {\n        this._keyManager.updateActiveItem(option);\n\n        if (this.withShift && this.multiple) {\n            const previousIndex = this._keyManager.previousActiveItemIndex;\n            const activeIndex = this._keyManager.activeItemIndex;\n\n            if (previousIndex < activeIndex) {\n                this.options.forEach((item, index) => {\n                    if (index >= previousIndex && index <= activeIndex) { item.setSelected(true); }\n                });\n            } else {\n                this.options.forEach((item, index) => {\n                    if (index >= activeIndex && index <= previousIndex) { item.setSelected(true); }\n                });\n            }\n\n            this.withShift = false;\n        } else if (this.withCtrl) {\n            this.withCtrl = false;\n\n            if (!this._canDeselectLast(option)) { return; }\n\n            option.toggle();\n        } else {\n            if (this.autoSelect) {\n                this.options.forEach((item) => item.setSelected(false));\n                option.setSelected(true);\n            }\n        }\n\n        this._emitChangeEvent(option);\n        this._reportValueChange();\n    }\n\n    // Implemented as part of ControlValueAccessor.\n    writeValue(values: string[]): void {\n        if (this.options) {\n            this._setOptionsFromValues(values || []);\n        } else {\n            this._tempValues = values;\n        }\n    }\n\n    // Implemented as part of ControlValueAccessor.\n    registerOnChange(fn: (value: any) => void): void {\n        this._onChange = fn;\n    }\n\n    // Implemented as part of ControlValueAccessor.\n    registerOnTouched(fn: () => void): void {\n        this._onTouched = fn;\n    }\n\n    // Implemented as a part of ControlValueAccessor.\n    setDisabledState(isDisabled: boolean): void {\n        if (this.options) {\n            this.options.forEach((option) => option.disabled = isDisabled);\n        }\n    }\n\n    getSelectedOptionValues(): string[] {\n        return this.options.filter((option) => option.selected).map((option) => option.value);\n    }\n\n    // Toggles the selected state of the currently focused option.\n    toggleFocusedOption(): void {\n        const focusedIndex = this._keyManager.activeItemIndex;\n\n        if (focusedIndex != null && this._isValidIndex(focusedIndex)) {\n            const focusedOption: McListOption = this.options.toArray()[focusedIndex];\n\n            if (focusedOption && this._canDeselectLast(focusedOption)) {\n                focusedOption.toggle();\n\n                // Emit a change event because the focused option changed its state through user interaction.\n                this._emitChangeEvent(focusedOption);\n            }\n        }\n    }\n\n    _canDeselectLast(listOption: McListOption): boolean {\n        return !(this.noUnselect && this.selectedOptions.selected.length === 1 && listOption.selected);\n    }\n\n    _getHeight(): number {\n        return this._element.nativeElement.getClientRects()[0].height;\n    }\n\n    // View to model callback that should be called if the list or its options lost focus.\n    _onTouched: () => void = () => {};\n\n    // Removes an option from the selection list and updates the active item.\n    _removeOptionFromList(option: McListOption) {\n        if (option._hasFocus) {\n            const optionIndex = this._getOptionIndex(option);\n\n            // Check whether the option is the last item\n            if (optionIndex > 0) {\n                this._keyManager.setPreviousItemActive();\n            } else if (optionIndex === 0 && this.options.length > 1) {\n                this._keyManager.setNextItemActive();\n            }\n        }\n    }\n\n    _onKeyDown(event: KeyboardEvent) {\n        const keyCode = event.keyCode;\n        this.withShift = event.shiftKey;\n        this.withCtrl = event.ctrlKey;\n\n        switch (keyCode) {\n            case SPACE:\n            case ENTER:\n                this.toggleFocusedOption();\n                event.preventDefault();\n\n                break;\n            case HOME:\n                this._keyManager.setFirstItemActive();\n                event.preventDefault();\n\n                break;\n            case END:\n                this._keyManager.setLastItemActive();\n                event.preventDefault();\n\n                break;\n            case PAGE_UP:\n                if (!this.horizontal) { this._keyManager.setPreviousPageItemActive(); }\n\n                event.preventDefault();\n\n                break;\n            case PAGE_DOWN:\n                if (!this.horizontal) { this._keyManager.setNextPageItemActive(); }\n\n                event.preventDefault();\n\n                break;\n            default:\n                this._keyManager.onKeydown(event);\n        }\n    }\n\n    // Reports a value change to the ControlValueAccessor\n    _reportValueChange() {\n        if (this.options) {\n            this._onChange(this.getSelectedOptionValues());\n        }\n    }\n\n    // Emits a change event if the selected state of an option changed.\n    _emitChangeEvent(option: McListOption) {\n        this.selectionChange.emit(new McListSelectionChange(this, option));\n    }\n\n    // Returns the option with the specified value.\n    private _getOptionByValue(value: string): McListOption | undefined {\n        return this.options.find((option) => option.value === value);\n    }\n\n    // Sets the selected options based on the specified values.\n    private _setOptionsFromValues(values: string[]) {\n        this.options.forEach((option) => option.setSelected(false));\n\n        values\n            .map((value) => this._getOptionByValue(value))\n            .filter(Boolean)\n            .forEach((option) => option!.setSelected(true));\n    }\n\n    /**\n     * Utility to ensure all indexes are valid.\n     * @param index The index to be checked.\n     * @returns True if the index is valid for our list of options.\n     */\n    private _isValidIndex(index: number): boolean {\n        return index >= 0 && index < this.options.length;\n    }\n\n    // Returns the index of the specified list option.\n    private _getOptionIndex(option: McListOption): number {\n        return this.options.toArray().indexOf(option);\n    }\n\n    // View to model callback that should be called whenever the selected options change.\n    private _onChange: (value: any) => void = (_: any) => {};\n}\n","// todo пока не делаем, перенесено из материала, но у нас в доках таких простых списков нет.\nimport {\n    AfterContentInit, ChangeDetectionStrategy, Component, ContentChildren, Directive, ElementRef, QueryList,\n    ViewEncapsulation\n} from '@angular/core';\n\nimport { McLine, McLineSetter } from '@ptsecurity/mosaic/core';\n\n\nexport class McListBase {}\n\n@Component({\n    selector: 'mc-list',\n    host: { class: 'mc-list' },\n    template: '<ng-content></ng-content>',\n    styleUrls: ['./list.css'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None\n})\nexport class McList extends McListBase {}\n\n\n/**\n * Directive whose purpose is to add the mc- CSS styling to this selector.\n * @docs-private\n */\n@Directive({\n    selector: '[mc-subheader], [mcSubheader]',\n    host: { class: 'mc-subheader' }\n})\nexport class McListSubheaderCssStyler {}\n\n\n// Boilerplate for applying mixins to McListItem.\nexport class McListItemBase {}\n\n@Component({\n    selector: 'mc-list-item, a[mc-list-item]',\n    host: {\n        class: 'mc-list-item',\n        '(focus)': '_handleFocus()',\n        '(blur)': '_handleBlur()'\n    },\n    templateUrl: './list-item.html',\n    encapsulation: ViewEncapsulation.None,\n    preserveWhitespaces: false,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class McListItem extends McListItemBase implements AfterContentInit {\n    @ContentChildren(McLine) _lines: QueryList<McLine>;\n\n    private _lineSetter: McLineSetter;\n\n    constructor(private _element: ElementRef) {\n        super();\n    }\n\n    ngAfterContentInit() {\n        this._lineSetter = new McLineSetter(this._lines, this._element);\n    }\n\n    _handleFocus() {\n        this._element.nativeElement.classList.add('mc-focused');\n    }\n\n    _handleBlur() {\n        this._element.nativeElement.classList.remove('mc-focused');\n    }\n\n    _getHostElement(): HTMLElement {\n        return this._element.nativeElement;\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { A11yModule } from '@ptsecurity/cdk/a11y';\n\nimport { McLineModule } from '@ptsecurity/mosaic/core';\n\nimport { McListSelection, McListOption } from './list-selection.component';\nimport { McList, McListItem, McListSubheaderCssStyler } from './list.component';\n\n\n@NgModule({\n    imports: [\n        CommonModule,\n        A11yModule,\n        McLineModule\n    ],\n    exports: [\n        McList,\n        McListSelection,\n        McListItem,\n        McListOption,\n        McListSubheaderCssStyler\n    ],\n    declarations: [\n        McList,\n        McListSelection,\n        McListItem,\n        McListOption,\n        McListSubheaderCssStyler\n    ]\n})\nexport class McListModule {}\n","import {\n    Input,\n    Attribute,\n    Component,\n    ElementRef,\n    OnDestroy,\n    ViewEncapsulation,\n    ChangeDetectionStrategy,\n    ChangeDetectorRef\n} from '@angular/core';\n\nimport { FocusMonitor } from '@ptsecurity/cdk/a11y';\nimport {\n    CanDisable, CanDisableCtor,\n    HasTabIndex, HasTabIndexCtor,\n    mixinDisabled,\n    mixinTabIndex,\n    toBoolean\n} from '@ptsecurity/mosaic/core';\n\n\nexport class McLinkBase {\n    constructor(public _elementRef: ElementRef) {\n    }\n}\n\nexport const _McLinkBase: HasTabIndexCtor & CanDisableCtor & typeof McLinkBase\n    = mixinTabIndex(mixinDisabled(McLinkBase));\n\n@Component({\n    selector: 'a.mc-link',\n    template: `<ng-content></ng-content>`,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n    exportAs: 'mcLink',\n    styleUrls: ['./link.css'],\n    inputs: ['disabled'],\n    host: {\n        '[attr.disabled]': 'disabled || null',\n        '[attr.tabindex]': 'tabIndex'\n    }\n})\n\nexport class McLink extends _McLinkBase implements OnDestroy, HasTabIndex, CanDisable {\n\n    @Input()\n    get disabled() {\n        return this._disabled;\n    }\n\n    set disabled(value: any) {\n        const newValue = toBoolean(value);\n\n        if (newValue !== this._disabled) {\n            this._disabled = newValue;\n            this._changeDetector.markForCheck();\n        }\n    }\n\n    private _disabled = false;\n\n    constructor(\n        @Attribute('tabindex') tabIndex: string,\n        public elementRef: ElementRef,\n        private _focusMonitor: FocusMonitor,\n        private _changeDetector: ChangeDetectorRef) {\n\n        super(elementRef);\n        this._focusMonitor.monitor(elementRef.nativeElement, true);\n        this.tabIndex = parseInt(tabIndex) || 0;\n    }\n\n    ngOnDestroy() {\n        this._focusMonitor.stopMonitoring(this.elementRef.nativeElement);\n    }\n\n    focus(): void {\n        this._getHostElement().focus();\n    }\n\n    _getHostElement() {\n        return this.elementRef.nativeElement;\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { A11yModule } from '@ptsecurity/cdk/a11y';\n\nimport { McLink } from './link.component';\n\n\n@NgModule({\n    imports: [\n        CommonModule,\n        A11yModule\n    ],\n    declarations: [McLink],\n    exports: [McLink]\n})\nexport class McLinkModule {}\n","import { Injectable, Optional, SkipSelf } from '@angular/core';\nimport { Subject, Subscription } from 'rxjs';\n\nimport { McModalRef } from './modal-ref.class';\n\n\ninterface IRegisteredMeta {\n    modalRef: McModalRef;\n    afterOpenSubscription: Subscription;\n    afterCloseSubscription: Subscription;\n}\n\n@Injectable()\nexport class McModalControlService {\n\n    // Track singleton afterAllClose through over the injection tree\n    get afterAllClose(): Subject<void> {\n        return this.parentService ? this.parentService.afterAllClose : this.rootAfterAllClose;\n    }\n\n    // Track singleton openModals array through over the injection tree\n    get openModals(): McModalRef[] {\n        return this.parentService ? this.parentService.openModals : this.rootOpenModals;\n    }\n\n    // @ts-ignore\n    private rootOpenModals: McModalRef[] = this.parentService ? null : [];\n    // @ts-ignore\n    private rootAfterAllClose: Subject<void> = this.parentService ? null : new Subject<void>();\n    // @ts-ignore\n    private rootRegisteredMetaMap: Map<McModalRef, IRegisteredMeta> = this.parentService ? null : new Map();\n\n    // Registered modal for later usage\n    private get registeredMetaMap(): Map<McModalRef, IRegisteredMeta> {\n        return this.parentService ? this.parentService.registeredMetaMap : this.rootRegisteredMetaMap;\n    }\n\n    constructor(\n        @Optional() @SkipSelf() private parentService: McModalControlService) {\n    }\n\n    // Register a modal to listen its open/close\n    registerModal(modalRef: McModalRef): void {\n        if (!this.hasRegistered(modalRef)) {\n            const afterOpenSubscription = modalRef.afterOpen.subscribe(() => this.openModals.push(modalRef));\n            const afterCloseSubscription = modalRef.afterClose.subscribe(() => this.removeOpenModal(modalRef));\n\n            this.registeredMetaMap.set(modalRef, {modalRef, afterOpenSubscription, afterCloseSubscription});\n        }\n    }\n\n    hasRegistered(modalRef: McModalRef): boolean {\n        return this.registeredMetaMap.has(modalRef);\n    }\n\n    // Close all registered opened modals\n    closeAll(): void {\n        let i = this.openModals.length;\n\n        while (i--) {\n            this.openModals[i].close();\n        }\n    }\n\n    private removeOpenModal(modalRef: McModalRef): void {\n        const index = this.openModals.indexOf(modalRef);\n\n        if (index > -1) {\n            this.openModals.splice(index, 1);\n\n            if (!this.openModals.length) {\n                this.afterAllClose.next();\n            }\n        }\n    }\n}\n","import { Observable } from 'rxjs';\n\nimport { McModalComponent } from './modal.component';\n\n\n/**\n * API class that public to users to handle the modal instance.\n * McModalRef is aim to avoid accessing to the modal instance directly by users.\n */\nexport abstract class McModalRef<T = any, R = any> {\n    abstract afterOpen: Observable<void>;\n    abstract afterClose: Observable<R>;\n\n    abstract open(): void;\n\n    abstract close(result?: R): void;\n\n    abstract destroy(result?: R): void;\n\n    /**\n     * Trigger the nzOnOk/nzOnCancel by manual\n     */\n    abstract triggerOk(): void;\n\n    abstract triggerCancel(): void;\n\n    // /**\n    //  * Return the ComponentRef of nzContent when specify nzContent as a Component\n    //  * Note: this method may return undefined if the Component has not ready yet.\n    //    (it only available after Modal's ngOnInit)\n    //  */\n    // abstract getContentComponentRef(): ComponentRef<{}>;\n\n    /**\n     * Return the component instance of nzContent when specify nzContent as a Component\n     * Note: this method may return undefined if the Component has not ready yet.\n     * (it only available after Modal's ngOnInit)\n     */\n    abstract getContentComponent(): T;\n\n    /**\n     * Get the dom element of this Modal\n     */\n    abstract getElement(): HTMLElement;\n\n    /**\n     * Get the instance of the Modal itself\n     */\n    abstract getInstance(): McModalComponent;\n}\n","export interface IClickPosition {\n    x: number;\n    y: number;\n}\n\nexport class ModalUtil {\n    private lastPosition: IClickPosition;\n\n    constructor(private document: Document) {\n        this.lastPosition = {x: -1, y: -1};\n        this.listenDocumentClick();\n    }\n\n    getLastClickPosition(): IClickPosition {\n        return this.lastPosition;\n    }\n\n    listenDocumentClick(): void {\n        this.document.addEventListener('click', (event: MouseEvent) => {\n            this.lastPosition = {x: event.clientX, y: event.clientY};\n        });\n    }\n}\n\nexport default new ModalUtil(document);\n","import { DOCUMENT } from '@angular/common';\nimport {\n    AfterViewInit, ChangeDetectionStrategy, ChangeDetectorRef,\n    Component,\n    ComponentFactoryResolver,\n    ComponentRef,\n    ElementRef,\n    EventEmitter,\n    Inject,\n    Injector,\n    Input,\n    OnChanges,\n    OnDestroy,\n    OnInit,\n    Output,\n    Renderer2,\n    SimpleChanges,\n    TemplateRef,\n    Type,\n    ViewChild,\n    ViewContainerRef, ViewEncapsulation\n} from '@angular/core';\nimport { ESCAPE } from '@ptsecurity/cdk/keycodes';\nimport { Overlay, OverlayRef } from '@ptsecurity/cdk/overlay';\nimport { McMeasureScrollbarService } from '@ptsecurity/mosaic/core';\nimport { Observable } from 'rxjs';\n\nimport { McModalControlService } from './modal-control.service';\nimport { McModalRef } from './modal-ref.class';\n// tslint:disable-next-line\nimport ModalUtil from './modal-util';\nimport { IModalButtonOptions, IModalOptions, ModalType, OnClickCallback } from './modal.type';\n\n\n// Duration when perform animations (ms)\nexport const MODAL_ANIMATE_DURATION = 200;\n\ntype AnimationState = 'enter' | 'leave' | null;\n\n@Component({\n    selector: 'mc-modal',\n    templateUrl: './modal.component.html',\n    styleUrls: ['./modal.css'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n    host: {\n        '(keydown)': 'onKeyDown($event)'\n    }\n})\nexport class McModalComponent<T = any, R = any> extends McModalRef<T, R>\n    implements OnInit, OnChanges, AfterViewInit, OnDestroy, IModalOptions {\n\n    // tslint:disable-next-line:no-any\n    @Input() mcModalType: ModalType = 'default';\n    // If not specified, will use <ng-content>\n    @Input() mcContent: string | TemplateRef<{}> | Type<T>;\n    // available when mcContent is a component\n    @Input() mcComponentParams: object;\n    // Default Modal ONLY\n    @Input() mcFooter: string | TemplateRef<{}> | IModalButtonOptions<T>[];\n\n    @Input()\n    get mcVisible() { return this._mcVisible; }\n    set mcVisible(value) { this._mcVisible = value; }\n    _mcVisible = false;\n\n    @Output() mcVisibleChange = new EventEmitter<boolean>();\n\n    @Input() mcZIndex: number = 1000;\n    @Input() mcWidth: number | string = 480;\n    @Input() mcWrapClassName: string;\n    @Input() mcClassName: string;\n    @Input() mcStyle: object;\n    @Input() mcTitle: string | TemplateRef<{}>;\n    @Input() mcCloseByESC: boolean = true;\n\n    @Input()\n    get mcClosable() { return this._mcClosable; }\n    set mcClosable(value) { this._mcClosable = value; }\n    _mcClosable = true;\n\n    @Input()\n    get mcMask() { return this._mcMask; }\n    set mcMask(value) { this._mcMask = value; }\n    _mcMask = true;\n\n    @Input()\n    get mcMaskClosable() { return this._mcMaskClosable; }\n    set mcMaskClosable(value) { this._mcMaskClosable = value; }\n    _mcMaskClosable = true;\n\n    @Input() mcMaskStyle: object;\n    @Input() mcBodyStyle: object;\n\n    // Trigger when modal open(visible) after animations\n    @Output() mcAfterOpen = new EventEmitter<void>();\n    // Trigger when modal leave-animation over\n    @Output() mcAfterClose = new EventEmitter<R>();\n\n    // --- Predefined OK & Cancel buttons\n    @Input() mcOkText: string;\n    @Input() mcOkType = 'primary';\n\n    @Input()\n    get mcOkLoading() { return this._mcOkLoading; }\n    set mcOkLoading(value) { this._mcOkLoading = value; }\n    _mcOkLoading = false;\n\n    @Input() @Output() mcOnOk: EventEmitter<T> | OnClickCallback<T> = new EventEmitter<T>();\n    // Only aim to focus the ok button that needs to be auto focused\n    @ViewChild('autoFocusButtonOk', {read: ElementRef}) autoFocusButtonOk: ElementRef;\n    @Input() mcCancelText: string;\n\n    @Input()\n    get mcCancelLoading() { return this._mcCancelLoading; }\n    set mcCancelLoading(value) { this._mcCancelLoading = value; }\n    _mcCancelLoading = false;\n\n    @Input() @Output() mcOnCancel: EventEmitter<T> | OnClickCallback<T> = new EventEmitter<T>();\n    @ViewChild('modalContainer') modalContainer: ElementRef;\n    @ViewChild('bodyContainer', {read: ViewContainerRef}) bodyContainer: ViewContainerRef;\n    maskAnimationClassMap: object;\n    modalAnimationClassMap: object;\n    // The origin point that animation based on\n    transformOrigin = '0px 0px 0px';\n\n    // Observable alias for mcAfterOpen\n    get afterOpen(): Observable<void> {\n        return this.mcAfterOpen.asObservable();\n    }\n\n    // Observable alias for mcAfterClose\n    get afterClose(): Observable<R> {\n        return this.mcAfterClose.asObservable();\n    }\n\n    get okText(): string {\n        return this.mcOkText;\n    }\n\n    get cancelText(): string {\n        return this.mcCancelText;\n    }\n\n    // Indicate whether this dialog should hidden\n    get hidden(): boolean {\n        return !this.mcVisible && !this.animationState;\n    }\n\n    // Handle the reference when using mcContent as Component\n    private contentComponentRef: ComponentRef<T>;\n    // Current animation state\n    private animationState: AnimationState;\n    private container: HTMLElement | OverlayRef;\n\n    constructor(\n        private overlay: Overlay,\n        private renderer: Renderer2,\n        private cfr: ComponentFactoryResolver,\n        private elementRef: ElementRef,\n        private viewContainer: ViewContainerRef,\n        private mcMeasureScrollbarService: McMeasureScrollbarService,\n        private modalControl: McModalControlService,\n        private changeDetector: ChangeDetectorRef,\n        @Inject(DOCUMENT) private document: any) {\n\n        super();\n    }\n\n    @Input() mcGetContainer: HTMLElement | OverlayRef | (() => HTMLElement | OverlayRef) = () => this.overlay.create();\n\n    ngOnInit() {\n\n        // Create component along without View\n        if (this.isComponent(this.mcContent)) {\n            this.createDynamicComponent(this.mcContent as Type<T>);\n        }\n\n        // Setup default button options\n        if (this.isModalButtons(this.mcFooter)) {\n            this.mcFooter = this.formatModalButtons(this.mcFooter as IModalButtonOptions<T>[]);\n        }\n\n        // Place the modal dom to elsewhere\n        this.container = typeof this.mcGetContainer === 'function' ? this.mcGetContainer() : this.mcGetContainer;\n        if (this.container instanceof HTMLElement) {\n            this.container.appendChild(this.elementRef.nativeElement);\n        } else if (this.container instanceof OverlayRef) {\n            // NOTE: only attach the dom to overlay, the view container is not changed actually\n            this.container.overlayElement.appendChild(this.elementRef.nativeElement);\n        }\n\n        // Register modal when afterOpen/afterClose is stable\n        this.modalControl.registerModal(this);\n    }\n\n    // [NOTE] NOT available when using by service!\n    // Because ngOnChanges never be called when using by service,\n    // here we can't support \"mcContent\"(Component) etc. as inputs that initialized dynamically.\n    // BUT: User also can change \"mcContent\" dynamically to trigger UI changes\n    // (provided you don't use \bComponent that needs initializations)\n    ngOnChanges(changes: SimpleChanges) {\n        if (changes.mcVisible) {\n            // Do not trigger animation while initializing\n            this.handleVisibleStateChange(this.mcVisible, !changes.mcVisible.firstChange);\n        }\n    }\n\n    ngAfterViewInit() {\n        // If using Component, it is the time to attach View while bodyContainer is ready\n        if (this.contentComponentRef) {\n            this.bodyContainer.insert(this.contentComponentRef.hostView);\n        }\n\n        if (this.autoFocusButtonOk) {\n            (this.autoFocusButtonOk.nativeElement as HTMLButtonElement).focus();\n        }\n    }\n\n    ngOnDestroy() {\n        if (this.container instanceof OverlayRef) {\n            this.container.dispose();\n        }\n    }\n\n    open() {\n        this.changeVisibleFromInside(true);\n    }\n\n    close(result?: R) {\n        this.changeVisibleFromInside(false, result);\n    }\n\n    // Destroy equals Close\n    destroy(result?: R) {\n        this.close(result);\n    }\n\n    triggerOk() {\n        this.onClickOkCancel('ok');\n    }\n\n    triggerCancel() {\n        this.onClickOkCancel('cancel');\n    }\n\n    getInstance(): McModalComponent {\n        return this;\n    }\n\n    getContentComponentRef(): ComponentRef<T> {\n        return this.contentComponentRef;\n    }\n\n    getContentComponent(): T {\n        return this.contentComponentRef && this.contentComponentRef.instance;\n    }\n\n    getElement(): HTMLElement {\n        return this.elementRef && this.elementRef.nativeElement;\n    }\n\n    onClickMask($event: MouseEvent) {\n        if (\n            this.mcMask &&\n            this.mcMaskClosable &&\n            ($event.target as HTMLElement).classList.contains('mc-modal-wrap') &&\n            this.mcVisible\n        ) {\n            this.onClickOkCancel('cancel');\n        }\n    }\n\n    // tslint:disable-next-line\n    isModalType(type: ModalType): boolean {\n        return this.mcModalType === type;\n    }\n\n    onKeyDown(event: KeyboardEvent): void {\n\n        if (event.keyCode === ESCAPE && this.container && (this.container instanceof OverlayRef)) {\n\n            this.close();\n            event.preventDefault();\n        }\n    }\n\n    // AoT\n    onClickCloseBtn() {\n        if (this.mcVisible) {\n            this.onClickOkCancel('cancel');\n        }\n    }\n\n    // AoT\n    // tslint:disable-next-line\n    onClickOkCancel(type: 'ok' | 'cancel') {\n        const trigger = { ok: this.mcOnOk, cancel: this.mcOnCancel }[type];\n        const loadingKey = { ok: 'mcOkLoading', cancel: 'mcCancelLoading' }[type];\n\n        if (trigger instanceof EventEmitter) {\n            trigger.emit(this.getContentComponent());\n        } else if (typeof trigger === 'function') {\n\n            const result = trigger(this.getContentComponent());\n            // Users can return \"false\" to prevent closing by default\n            const caseClose = (doClose: boolean | void | {}) => (doClose !== false) && this.close(doClose as R);\n\n            if (isPromise(result)) {\n                this[loadingKey] = true;\n                const handleThen = (doClose) => {\n                    this[loadingKey] = false;\n                    caseClose(doClose);\n                };\n                (result as Promise<void>).then(handleThen).catch(handleThen);\n            } else {\n                caseClose(result);\n            }\n        }\n    }\n\n    // AoT\n    isNonEmptyString(value: {}): boolean {\n        return typeof value === 'string' && value !== '';\n    }\n\n    // AoT\n    isTemplateRef(value: {}): boolean {\n        return value instanceof TemplateRef;\n    }\n\n    // AoT\n    isComponent(value: {}): boolean {\n        return value instanceof Type;\n    }\n\n    // AoT\n    isModalButtons(value: {}): boolean {\n        return Array.isArray(value) && value.length > 0;\n    }\n\n    // Do rest things when visible state changed\n    private handleVisibleStateChange(visible: boolean, animation: boolean = true, closeResult?: R): Promise<any> {\n        // Hide scrollbar at the first time when shown up\n        if (visible) {\n            this.changeBodyOverflow(1);\n        }\n\n        return Promise\n            .resolve(animation && this.animateTo(visible))\n            // Emit open/close event after animations over\n            .then(() => {\n                if (visible) {\n                    this.mcAfterOpen.emit();\n                } else {\n                    this.mcAfterClose.emit(closeResult);\n                    // Show/hide scrollbar when animation is over\n                    this.changeBodyOverflow();\n                }\n            });\n    }\n\n    // Lookup a button's property, if the prop is a function, call & then return the result, otherwise, return itself.\n    // AoT\n    // tslint:disable-next-line\n    getButtonCallableProp(options: IModalButtonOptions<T>, prop: string): {} {\n        const value = options[prop];\n        const args: any[] = [];\n        if (this.contentComponentRef) {\n            args.push(this.contentComponentRef.instance);\n        }\n\n        return typeof value === 'function' ? value.apply(options, args) : value;\n    }\n\n    // On mcFooter's modal button click\n    // AoT\n    // tslint:disable-next-line\n    onButtonClick(button: IModalButtonOptions<T>) {\n        // Call onClick directly\n        const result = this.getButtonCallableProp(button, 'onClick');\n        if (isPromise(result)) {\n            button.loading = true;\n            (result as Promise<{}>).then(() => button.loading = false).catch(() => button.loading = false);\n        }\n    }\n\n    // Change mcVisible from inside\n    private changeVisibleFromInside(visible: boolean, closeResult?: R): Promise<void> {\n        if (this.mcVisible !== visible) {\n            // Change mcVisible value immediately\n            this.mcVisible = visible;\n            this.mcVisibleChange.emit(visible);\n\n            return this.handleVisibleStateChange(visible, true, closeResult);\n        }\n\n        return Promise.resolve();\n    }\n\n    private changeAnimationState(state: AnimationState) {\n        this.animationState = state;\n        if (state) {\n            this.maskAnimationClassMap = {\n                [`fade-${state}`]: true,\n                [`fade-${state}-active`]: true\n            };\n            this.modalAnimationClassMap = {\n                [`zoom-${state}`]: true,\n                [`zoom-${state}-active`]: true\n            };\n        } else {\n            // @ts-ignore\n            this.maskAnimationClassMap = this.modalAnimationClassMap = null;\n        }\n\n        if (this.contentComponentRef) {\n            this.contentComponentRef.changeDetectorRef.markForCheck();\n        } else {\n            this.changeDetector.markForCheck();\n        }\n    }\n\n    private animateTo(isVisible: boolean): Promise<any> {\n        // Figure out the lastest click position when shows up\n        if (isVisible) {\n            // [NOTE] Using timeout due to the document.click event is fired later than visible change,\n            // so if not postponed to next event-loop, we can't get the lastest click position\n            window.setTimeout(() => this.updateTransformOrigin());\n        }\n\n        this.changeAnimationState(isVisible ? 'enter' : 'leave');\n\n        // Return when animation is over\n        return new Promise((resolve) => window.setTimeout(() => {\n            this.changeAnimationState(null);\n            resolve();\n        }, MODAL_ANIMATE_DURATION));\n    }\n\n    private formatModalButtons(buttons: IModalButtonOptions<T>[]): IModalButtonOptions<T>[] {\n        return buttons.map((button) => {\n\n            return {\n                ...{\n                    type: 'default',\n                    size: 'default',\n                    autoLoading: true,\n                    show: true,\n                    loading: false,\n                    disabled: false\n                },\n                ...button\n            };\n        });\n    }\n\n    /**\n     * Create a component dynamically but not attach to any View\n     * (this action will be executed when bodyContainer is ready)\n     * @param component Component class\n     */\n    private createDynamicComponent(component: Type<T>) {\n        const factory = this.cfr.resolveComponentFactory(component);\n        const childInjector = Injector.create({\n            providers: [{provide: McModalRef, useValue: this}],\n            parent: this.viewContainer.parentInjector\n        });\n\n        this.contentComponentRef = factory.create(childInjector);\n\n        if (this.mcComponentParams) {\n            Object.assign(this.contentComponentRef.instance, this.mcComponentParams);\n        }\n\n        // Do the first change detection immediately\n        // (or we do detection at ngAfterViewInit, multi-changes error will be thrown)\n        this.contentComponentRef.changeDetectorRef.detectChanges();\n\n\n    }\n\n    // Update transform-origin to the last click position on document\n    private updateTransformOrigin() {\n        const modalElement = this.modalContainer.nativeElement as HTMLElement;\n        const lastPosition = ModalUtil.getLastClickPosition();\n\n        if (lastPosition) {\n            // tslint:disable-next-line\n            this.transformOrigin = `${lastPosition.x - modalElement.offsetLeft}px ${lastPosition.y - modalElement.offsetTop}px 0px`;\n        }\n    }\n\n    /**\n     * Take care of the body's overflow to decide the existense of scrollbar\n     * @param plusNum The number that the openModals.length will increase soon\n     */\n    private changeBodyOverflow(plusNum: number = 0) {\n        const openModals = this.modalControl.openModals;\n\n        if (openModals.length + plusNum > 0) {\n            // tslint:disable-next-line\n            this.renderer.setStyle(this.document.body, 'padding-right', `${this.mcMeasureScrollbarService.scrollBarWidth}px`);\n            this.renderer.setStyle(this.document.body, 'overflow', 'hidden');\n        } else {\n            this.renderer.removeStyle(this.document.body, 'padding-right');\n            this.renderer.removeStyle(this.document.body, 'overflow');\n        }\n    }\n}\n\n////////////\n\nfunction isPromise(obj: {} | void): boolean {\n    // tslint:disable-next-line\n    return !!obj && (typeof obj === 'object' || typeof obj === 'function') && typeof (obj as Promise<{}>).then === 'function' && typeof (obj as Promise<{}>).catch === 'function';\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n\n@Pipe({\n    name: 'toCssUnit'\n})\nexport class CssUnitPipe implements PipeTransform {\n    transform(value: number | string, defaultUnit: string = 'px'): string {\n        const formatted = +value;\n\n        return isNaN(formatted) ? `${value}` : `${formatted}${defaultUnit}`;\n    }\n}\n","import { ComponentRef, Injectable } from '@angular/core';\n\nimport { Observable } from 'rxjs';\nimport { filter } from 'rxjs/operators';\n\nimport { ESCAPE } from '@ptsecurity/cdk/keycodes';\nimport { Overlay, OverlayRef } from '@ptsecurity/cdk/overlay';\nimport { ComponentPortal } from '@ptsecurity/cdk/portal';\n\nimport { McModalControlService } from './modal-control.service';\nimport { McModalRef } from './modal-ref.class';\nimport { McModalComponent } from './modal.component';\nimport { ConfirmType, IModalOptions, IModalOptionsForService } from './modal.type';\n\n\n// A builder used for managing service creating modals\nexport class ModalBuilderForService {\n\n    // Modal ComponentRef, \"null\" means it has been destroyed\n    private modalRef: ComponentRef<McModalComponent>;\n    private overlayRef: OverlayRef;\n\n    constructor(private overlay: Overlay, options: IModalOptionsForService = {}) {\n        this.createModal();\n\n        if (!('mcGetContainer' in options)) {\n            options.mcGetContainer = null;\n        }\n\n        this.changeProps(options);\n        this.modalRef.instance.open();\n        this.modalRef.instance.mcAfterClose.subscribe(() => this.destroyModal());\n\n        this.overlayRef.keydownEvents()\n            // @ts-ignore\n            .pipe(filter((event: KeyboardEvent) => {\n                return event.keyCode === ESCAPE && options.mcCloseByESC;\n            }))\n            .subscribe(() => this.modalRef.instance.close());\n    }\n\n    getInstance(): McModalComponent {\n        return this.modalRef && this.modalRef.instance;\n    }\n\n    destroyModal(): void {\n        if (this.modalRef) {\n            this.overlayRef.dispose();\n            // @ts-ignore\n            this.modalRef = null;\n        }\n    }\n\n    private changeProps(options: IModalOptions): void {\n        if (this.modalRef) {\n            // here not limit user's inputs at runtime\n            Object.assign(this.modalRef.instance, options);\n        }\n    }\n\n    // Create component to ApplicationRef\n    private createModal(): void {\n        this.overlayRef = this.overlay.create();\n        this.modalRef = this.overlayRef.attach(new ComponentPortal(McModalComponent));\n    }\n}\n\n@Injectable()\nexport class McModalService {\n    // Track of the current close modals (we assume invisible is close this time)\n    get openModals(): McModalRef[] {\n        return this.modalControl.openModals;\n    }\n\n    get afterAllClose(): Observable<void> {\n        return this.modalControl.afterAllClose.asObservable();\n    }\n\n    constructor(\n        private overlay: Overlay,\n        private modalControl: McModalControlService) {\n    }\n\n    // Closes all of the currently-open dialogs\n    closeAll(): void {\n        this.modalControl.closeAll();\n    }\n\n    create<T>(options: IModalOptionsForService<T> = {}): McModalRef<T> {\n\n        if (typeof options.mcOnCancel !== 'function') {\n            // Leave a empty function to close this modal by default\n            // tslint:disable-next-line\n            options.mcOnCancel = () => {};\n        }\n\n        if (!('mcCloseByESC' in options)) {\n            options.mcCloseByESC = true;\n        }\n\n\n        if (!('mcWidth' in options)) {\n            // tslint:disable-next-line\n            options.mcWidth = 480;\n        }\n\n        return new ModalBuilderForService(this.overlay, options).getInstance();\n    }\n\n    confirm<T>(options: IModalOptionsForService<T> = {}, confirmType: ConfirmType = 'confirm'): McModalRef<T> {\n        if ('mcFooter' in options) {\n            console.warn(`The Confirm-Modal doesn't support \"mcFooter\", this property will be ignored.`);\n        }\n\n        // NOTE: only support function currently by calling confirm()\n        if (typeof options.mcOnOk !== 'function') {\n            // Leave a empty function to close this modal by default\n            // tslint:disable-next-line\n            options.mcOnOk = () => {};\n        }\n\n        options.mcModalType = 'confirm';\n        options.mcClassName = `mc-confirm mc-confirm-${confirmType} ${options.mcClassName || ''}`;\n        options.mcMaskClosable = false;\n\n        return this.create(options);\n    }\n\n    success<T>(options: IModalOptionsForService<T> = {}): McModalRef<T> {\n        return this.simpleConfirm(options, 'success');\n    }\n\n    delete<T>(options: IModalOptionsForService<T> = {}): McModalRef<T> {\n        return this.simpleConfirm(options, 'warn');\n    }\n\n    private simpleConfirm<T>(options: IModalOptionsForService<T> = {}, confirmType: ConfirmType): McModalRef<T> {\n        // Remove the Cancel button if the user not specify a Cancel button\n        if (!('mcCancelText' in options)) {\n            // @ts-ignore\n            options.mcCancelText = null;\n        }\n\n        return this.confirm(options, confirmType);\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { OverlayModule } from '@ptsecurity/cdk/overlay';\nimport { McButtonModule } from '@ptsecurity/mosaic/button';\nimport { McIconModule } from '@ptsecurity/mosaic/icon';\n\nimport { CssUnitPipe } from './css-unit.pipe';\nimport { McModalControlService } from './modal-control.service';\nimport { McModalComponent } from './modal.component';\nimport { McModalService } from './modal.service';\n\n\n@NgModule({\n    imports: [ CommonModule, OverlayModule, McButtonModule, McIconModule ],\n    exports: [ McModalComponent ],\n    declarations: [ McModalComponent, CssUnitPipe ],\n    entryComponents: [ McModalComponent ],\n    providers: [ McModalControlService, McModalService ]\n})\nexport class McModalModule { }\n","import {\n    AfterContentChecked,\n    AfterContentInit,\n    AfterViewInit,\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    ContentChild,\n    ContentChildren, Directive,\n    ElementRef,\n    QueryList,\n    ViewEncapsulation\n} from '@angular/core';\nimport { ESCAPE } from '@ptsecurity/cdk/keycodes';\nimport { CanColor, CanColorCtor, mixinColor } from '@ptsecurity/mosaic/core';\nimport { EMPTY, merge } from 'rxjs';\nimport { startWith } from 'rxjs/operators';\n\n\nimport { McCleaner } from './cleaner';\nimport { McFormFieldControl } from './form-field-control';\nimport { getMcFormFieldMissingControlError } from './form-field-errors';\nimport { McFormFieldNumberControl } from './form-field-number-control';\nimport { McHint } from './hint';\nimport { McPrefix } from './prefix';\nimport { McStepper } from './stepper';\nimport { McSuffix } from './suffix';\n\n\nlet nextUniqueId = 0;\n\nexport class McFormFieldBase {\n    constructor(public _elementRef: ElementRef) {}\n}\n\nexport const _McFormFieldMixinBase: CanColorCtor & typeof McFormFieldBase = mixinColor(McFormFieldBase);\n\n@Component({\n    selector: 'mc-form-field',\n    exportAs: 'mcFormField',\n    templateUrl: 'form-field.html',\n    // McInput is a directive and can't have styles, so we need to include its styles here.\n    // The McInput styles are fairly minimal so it shouldn't be a big deal for people who\n    // aren't using McInput.\n    styleUrls: [\n        'form-field.css',\n        '../input/input.css'\n    ],\n    host: {\n        class: 'mc-form-field',\n        '[class.mc-form-field_invalid]': '_control.errorState',\n        '[class.mc-disabled]': '_control.disabled',\n        '[class.mc-form-field_has-prefix]': 'hasPrefix',\n        '[class.mc-form-field_has-suffix]': 'hasSuffix',\n        '[class.mc-form-field_has-cleaner]': 'canShowCleaner',\n        '[class.mc-form-field_has-stepper]': 'canShowStepper',\n        '[class.mc-focused]': '_control.focused',\n        '[class.ng-untouched]': '_shouldForward(\"untouched\")',\n        '[class.ng-touched]': '_shouldForward(\"touched\")',\n        '[class.ng-pristine]': '_shouldForward(\"pristine\")',\n        '[class.ng-dirty]': '_shouldForward(\"dirty\")',\n        '[class.ng-valid]': '_shouldForward(\"valid\")',\n        '[class.ng-invalid]': '_shouldForward(\"invalid\")',\n        '[class.ng-pending]': '_shouldForward(\"pending\")',\n        '(keydown)': 'onKeyDown($event)',\n        '(mouseenter)': 'onHoverChanged(true)',\n        '(mouseleave)': 'onHoverChanged(false)'\n    },\n    inputs: ['color'],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\n\nexport class McFormField extends _McFormFieldMixinBase implements\n    AfterContentInit, AfterContentChecked, AfterViewInit, CanColor {\n\n    @ContentChild(McFormFieldControl) _control: McFormFieldControl<any>;\n    @ContentChild(McFormFieldNumberControl) _numberControl: McFormFieldNumberControl<any>;\n    @ContentChild(McStepper) _stepper: McStepper;\n\n    @ContentChildren(McHint) _hint: QueryList<McHint>;\n    @ContentChildren(McSuffix) _suffix: QueryList<McSuffix>;\n    @ContentChildren(McPrefix) _prefix: QueryList<McPrefix>;\n    @ContentChildren(McCleaner) _cleaner: QueryList<McCleaner>;\n\n    // Unique id for the internal form field label.\n    _labelId = `mc-form-field-label-${nextUniqueId++}`;\n\n    hovered: boolean = false;\n\n    constructor(public _elementRef: ElementRef, private _changeDetectorRef: ChangeDetectorRef) {\n        super(_elementRef);\n    }\n\n    ngAfterContentInit() {\n        this._validateControlChild();\n        if (this._control.controlType) {\n            this._elementRef.nativeElement.classList\n                .add(`mc-form-field-type-${this._control.controlType}`);\n\n            if (this._numberControl && this.hasStepper) {\n                this._stepper.stepUp.subscribe(this.onStepUp.bind(this));\n                this._stepper.stepDown.subscribe(this.onStepDown.bind(this));\n            }\n        }\n\n        // Subscribe to changes in the child control state in order to update the form field UI.\n        this._control.stateChanges.pipe(startWith())\n            .subscribe(() => {\n                this._changeDetectorRef.markForCheck();\n            });\n\n        if (this._numberControl) {\n            this._numberControl.stateChanges.pipe(startWith())\n                .subscribe(() => {\n                    this._changeDetectorRef.markForCheck();\n                });\n        }\n\n        // Run change detection if the value changes.\n        const valueChanges = this._control.ngControl && this._control.ngControl.valueChanges || EMPTY;\n        merge(valueChanges)\n            .subscribe(() => this._changeDetectorRef.markForCheck());\n    }\n\n    ngAfterContentChecked() {\n        this._validateControlChild();\n    }\n\n    ngAfterViewInit() {\n        // Avoid animations on load.\n        this._changeDetectorRef.detectChanges();\n    }\n\n    clearValue($event) {\n        $event.stopPropagation();\n\n        if (this._control && this._control.ngControl) {\n            this._control.ngControl.reset();\n        }\n    }\n\n    onContainerClick($event) {\n        if (this._control.onContainerClick) {\n            this._control.onContainerClick($event);\n        }\n    }\n\n    onKeyDown(e: KeyboardEvent): void {\n        // tslint:disable-next-line:deprecation\n        if (e.keyCode === ESCAPE &&\n            this._control.focused &&\n            this.hasCleaner) {\n\n            if (this._control && this._control.ngControl) {\n                this._control.ngControl.reset();\n            }\n\n            e.preventDefault();\n        }\n    }\n\n    onHoverChanged(isHovered: boolean) {\n        if (isHovered !== this.hovered) {\n            this.hovered  = isHovered;\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n\n    onStepUp() {\n        if (this._numberControl) {\n            this._numberControl.stepUp(this._numberControl.step);\n        }\n    }\n\n    onStepDown() {\n        if (this._numberControl) {\n            this._numberControl.stepDown(this._numberControl.step);\n        }\n    }\n\n    /** Determines whether a class from the NgControl should be forwarded to the host element. */\n    _shouldForward(prop: string): boolean {\n        const ngControl = this._control ? this._control.ngControl : null;\n\n        return ngControl && ngControl[prop];\n    }\n\n    /** Throws an error if the form field's control is missing. */\n    protected _validateControlChild() {\n        if (!this._control) {\n            throw getMcFormFieldMissingControlError();\n        }\n    }\n\n    get hasHint(): boolean {\n        return this._hint && this._hint.length > 0;\n    }\n\n    get hasSuffix(): boolean {\n        return this._suffix && this._suffix.length > 0;\n    }\n\n    get hasPrefix(): boolean {\n        return this._prefix && this._prefix.length > 0;\n    }\n\n    get hasCleaner(): boolean {\n        return this._cleaner && this._cleaner.length > 0;\n    }\n\n    get hasStepper(): boolean {\n        return !!this._stepper;\n    }\n\n    get canShowCleaner(): boolean {\n        return this.hasCleaner &&\n            this._control &&\n            this._control.ngControl\n                ? this._control.ngControl.value && !this._control.disabled\n                : false;\n    }\n\n\n    get disabled(): boolean {\n        return this._control && this._control.disabled;\n    }\n\n    get canShowStepper(): boolean {\n        return this._numberControl &&\n            !this.disabled &&\n            (\n                this._numberControl.focused ||\n                this.hovered\n            );\n    }\n}\n\n@Directive({\n    selector: 'mc-form-field[mcFormFieldWithoutBorders]',\n    exportAs: 'mcFormFieldWithoutBorders',\n    host: { class: 'mc-form-field_without-borders' }\n})\nexport class McFormFieldWithoutBorders {\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { McIconModule } from '@ptsecurity/mosaic/icon';\n\nimport { McCleaner } from './cleaner';\nimport { McFormField, McFormFieldWithoutBorders } from './form-field';\nimport { McHint } from './hint';\nimport { McPrefix } from './prefix';\nimport { McStepper } from './stepper';\nimport { McSuffix } from './suffix';\n\n\n@NgModule({\n    declarations: [\n        McFormField,\n        McFormFieldWithoutBorders,\n        McHint,\n        McPrefix,\n        McSuffix,\n        McCleaner,\n        McStepper\n    ],\n    imports: [CommonModule, McIconModule],\n    exports: [\n        McFormField,\n        McFormFieldWithoutBorders,\n        McHint,\n        McPrefix,\n        McSuffix,\n        McCleaner,\n        McStepper\n    ]\n})\nexport class McFormFieldModule {\n}\n","import { InjectionToken } from '@angular/core';\n\n\nexport const MC_INPUT_VALUE_ACCESSOR =\n    new InjectionToken<{ value: any }>('MC_INPUT_VALUE_ACCESSOR');\n","function sanitizeNumber(value: number): number | null {\n    return !isFinite(value) || isNaN(value)\n        ? null\n        : value;\n}\n\nfunction getPrecision(value: number): number {\n    const arr = value.toString().split('.');\n\n    return arr.length === 1\n        ? 1\n        // tslint:disable-next-line:no-magic-numbers\n        :  Math.pow(10, arr[1].length);\n}\n\nfunction add(value1: number, value2: number) {\n    const precision = Math.max(getPrecision(value1), getPrecision(value2));\n\n    const res = (value1 * precision + value2 * precision) / precision;\n\n    return sanitizeNumber(res);\n}\n\nexport const stepUp = (value: number | null,\n                       max: number,\n                       min: number,\n                       step: number\n): number | null => {\n    let res;\n\n    if (value === null) {\n        res = add(min, step);\n\n        return res === null ? null : Math.min(res, max);\n    }\n\n    res = add(value, step);\n\n    return res === null ? null : Math.max(Math.min(res, max), min);\n};\n\nexport const stepDown = (value: number | null,\n                         max: number,\n                         min: number,\n                         step: number\n): number | null => {\n    let res;\n\n    if (value === null) {\n        res = add(max, -step);\n\n        return res === null ? null : Math.max(res, min);\n    }\n\n    res = add(value, -step);\n\n    return res === null ? null : Math.min(Math.max(res, min), max);\n};\n","import {\n    Attribute,\n    Directive, DoCheck, ElementRef, Inject, Input, OnChanges,\n    OnDestroy, Optional, Self\n} from '@angular/core';\nimport {\n    FormGroupDirective,\n    NgControl,\n    NgForm, NgModel\n} from '@angular/forms';\nimport { coerceBooleanProperty } from '@ptsecurity/cdk/coercion';\nimport {\n    END, C, V, X, A, DELETE, BACKSPACE, TAB, ENTER,\n    ESCAPE, ZERO, NINE, NUMPAD_ZERO, NUMPAD_NINE, NUMPAD_MINUS, DASH,\n    FF_MINUS, LEFT_ARROW, RIGHT_ARROW, HOME, UP_ARROW, DOWN_ARROW, F1, F12\n} from '@ptsecurity/cdk/keycodes';\nimport { getSupportedInputTypes, Platform } from '@ptsecurity/cdk/platform';\nimport {\n    CanUpdateErrorState,\n    CanUpdateErrorStateCtor,\n    ErrorStateMatcher,\n    mixinErrorState\n} from '@ptsecurity/mosaic/core';\nimport { McFormFieldControl, McFormFieldNumberControl } from '@ptsecurity/mosaic/form-field';\nimport { Subject } from 'rxjs';\n\nimport { getMcInputUnsupportedTypeError } from './input-errors';\nimport { MC_INPUT_VALUE_ACCESSOR } from './input-value-accessor';\nimport { stepDown, stepUp } from './stepperUtils';\n\n\nconst MC_INPUT_INVALID_TYPES = [\n    'button',\n    'checkbox',\n    'file',\n    'hidden',\n    'image',\n    'radio',\n    'range',\n    'reset',\n    'submit'\n];\n\nexport const BIG_STEP = 10;\nexport const SMALL_STEP = 1;\n\nlet nextUniqueId = 0;\n\nexport class McInputBase {\n    constructor(public _defaultErrorStateMatcher: ErrorStateMatcher,\n                public _parentForm: NgForm,\n                public _parentFormGroup: FormGroupDirective,\n                public ngControl: NgControl) {\n    }\n}\n\nexport const _McInputMixinBase: CanUpdateErrorStateCtor & typeof McInputBase = mixinErrorState(McInputBase);\n\n\n@Directive({\n    selector: `input[mcInput][type=\"number\"]`,\n    exportAs: 'mcNumericalInput',\n    providers: [NgModel, { provide: McFormFieldNumberControl, useExisting: McNumberInput }],\n    host: {\n        '(blur)': '_focusChanged(false)',\n        '(focus)': '_focusChanged(true)',\n        '(paste)': 'onPaste($event)',\n        '(keydown)': 'onKeyDown($event)'\n    }\n})\nexport class McNumberInput implements McFormFieldNumberControl<any> {\n\n    /**\n     * Implemented as part of McFormFieldNumberControl.\n     * @docs-private\n     */\n    @Input()\n    bigStep: number;\n\n    /**\n     * Implemented as part of McFormFieldNumberControl.\n     * @docs-private\n     */\n    @Input()\n    step: number;\n\n    @Input()\n    min: number;\n\n    @Input()\n    max: number;\n\n    /**\n     * Implemented as part of McFormFieldNumberControl.\n     * @docs-private\n     */\n    value: any;\n\n    /**\n     * Implemented as part of McFormFieldNumberControl.\n     * @docs-private\n     */\n    focused: boolean = false;\n\n    /**\n     * Implemented as part of McFormFieldNumberControl.\n     * @docs-private\n     */\n    readonly stateChanges: Subject<void> = new Subject<void>();\n\n    private readonly _host: HTMLInputElement;\n\n    constructor(\n        private _platform: Platform ,\n        private _elementRef: ElementRef,\n        private _model: NgModel,\n        @Attribute('step') step: string,\n        @Attribute('big-step') bigStep: string,\n        @Attribute('min') min: string,\n        @Attribute('max') max: string\n    ) {\n        this.step = this.isDigit(step) ? parseFloat(step) : SMALL_STEP;\n        this.bigStep = this.isDigit(bigStep) ? parseFloat(bigStep) : BIG_STEP;\n        this.min = this.isDigit(min) ? parseFloat(min) : -Infinity;\n        this.max = this.isDigit(max) ? parseFloat(max) : Infinity;\n\n        this._host = this._elementRef.nativeElement;\n\n        const self = this;\n\n        if ('valueAsNumber' in this._host) {\n            Object.defineProperty(Object.getPrototypeOf(this._host), 'valueAsNumber', {\n                // tslint:disable-next-line:no-reserved-keywords\n                get() {\n                    const res = parseFloat(self.normalizeSplitter(this.value));\n\n                    return isNaN(res) ? null : res;\n                }\n            });\n        }\n    }\n\n    _focusChanged(isFocused: boolean) {\n        if (isFocused !== this.focused) {\n            this.focused = isFocused;\n            this.stateChanges.next();\n        }\n    }\n\n    onKeyDown(event: KeyboardEvent) {\n        // tslint:disable-next-line:deprecation\n        const keyCode = event.keyCode;\n\n        const isCtrlA = (e) => e.keyCode === A && (e.ctrlKey || e.metaKey);\n        const isCtrlC = (e) => e.keyCode === C && (e.ctrlKey || e.metaKey);\n        const isCtrlV = (e) => e.keyCode === V && (e.ctrlKey || e.metaKey);\n        const isCtrlX = (e) => e.keyCode === X && (e.ctrlKey || e.metaKey);\n\n        const isFKey = (e) => e.keyCode >= F1 && e.keyCode <= F12;\n\n        const isNumber = (e) => (e.keyCode >= ZERO && e.keyCode <= NINE) ||\n            (e.keyCode >= NUMPAD_ZERO && e.keyCode <= NUMPAD_NINE);\n\n        const minuses = [NUMPAD_MINUS, DASH, FF_MINUS];\n        const serviceKeys = [DELETE, BACKSPACE, TAB, ESCAPE, ENTER];\n        const arrows = [LEFT_ARROW, RIGHT_ARROW];\n        const allowedKeys =  [HOME, END].concat(arrows).concat(serviceKeys).concat(minuses);\n\n        const isIEPeriod = (e) => e.key === '.' || e.key === 'Decimal';\n        const isNotIEPeriod = (e) => e.key === '.' || e.key === ',';\n\n        // Decimal is for IE\n        const isPeriod = (e) => this._platform.EDGE || this._platform.TRIDENT\n            ? isIEPeriod(e)\n            : isNotIEPeriod(e);\n\n        if (allowedKeys.indexOf(keyCode) !== -1 ||\n            isCtrlA(event) ||\n            isCtrlC(event) ||\n            isCtrlV(event) ||\n            isCtrlX(event) ||\n            isFKey(event) ||\n            isPeriod(event)\n        ) {\n            // let it happen, don't do anything\n            return;\n        }\n        // Ensure that it is not a number and stop the keypress\n        if (event.shiftKey || !isNumber(event)) {\n            event.preventDefault();\n\n            // process steps\n            const step = event.shiftKey ? this.bigStep : this.step;\n\n            if (keyCode === UP_ARROW) {\n                this.stepUp(step);\n            }\n\n            if (keyCode === DOWN_ARROW) {\n                this.stepDown(step);\n            }\n        }\n    }\n\n    onPaste(event) {\n        let value = event.clipboardData.getData('text');\n        value = this.normalizeSplitter(value);\n\n        if (!this.isDigit(value)) {\n            event.preventDefault();\n        }\n    }\n\n    stepUp(step: number) {\n        this._elementRef.nativeElement.focus();\n        const res = stepUp(this._host.valueAsNumber, this.max, this.min, step);\n        this._host.value = res === null ? '' : res.toString();\n        this._model.update.emit(this._host.valueAsNumber);\n    }\n\n    stepDown(step: number) {\n        this._elementRef.nativeElement.focus();\n        const res = stepDown(this._host.valueAsNumber, this.max, this.min, step);\n        this._host.value = res === null ? '' : res.toString();\n        this._model.update.emit(this._host.valueAsNumber);\n    }\n\n    private normalizeSplitter(value: string): string {\n        return value ? value.replace(/,/g, '.') : value;\n    }\n\n    private isDigit(value: string): boolean {\n        return this.isFloat(value) || this.isInt(value);\n    }\n\n    private isFloat(value: string): boolean {\n        return /^-?\\d+\\.\\d+$/.test(value);\n    }\n\n    private isInt(value: string): boolean {\n        return /^-?\\d+$/.test(value);\n    }\n}\n\n@Directive({\n    selector: `input[mcInput]`,\n    exportAs: 'mcInput',\n    host: {\n        class: 'mc-input',\n        // Native input properties that are overwritten by Angular inputs need to be synced with\n        // the native input element. Otherwise property bindings for those don't work.\n        '[attr.id]': 'id',\n        '[attr.placeholder]': 'placeholder',\n        '[disabled]': 'disabled',\n        '[required]': 'required',\n        '(blur)': '_focusChanged(false)',\n        '(focus)': '_focusChanged(true)',\n        '(input)': '_onInput()'\n    },\n    providers: [{ provide: McFormFieldControl, useExisting: McInput }]\n})\nexport class McInput extends _McInputMixinBase implements McFormFieldControl<any>, OnChanges,\n    OnDestroy, DoCheck, CanUpdateErrorState {\n\n    /** An object used to control when error messages are shown. */\n    @Input() errorStateMatcher: ErrorStateMatcher;\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    focused: boolean = false;\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    readonly stateChanges: Subject<void> = new Subject<void>();\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    controlType: string = 'mc-input';\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    @Input()\n    get disabled(): boolean {\n        if (this.ngControl && this.ngControl.disabled !== null) {\n            return this.ngControl.disabled;\n        }\n\n        return this._disabled;\n    }\n\n    set disabled(value: boolean) {\n        this._disabled = coerceBooleanProperty(value);\n\n        // Browsers may not fire the blur event if the input is disabled too quickly.\n        // Reset from here to ensure that the element doesn't become stuck.\n        if (this.focused) {\n            this.focused = false;\n            this.stateChanges.next();\n        }\n    }\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    @Input()\n    get id(): string {\n        return this._id;\n    }\n\n    set id(value: string) {\n        this._id = value || this._uid;\n    }\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    @Input() placeholder: string;\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    @Input()\n    get required(): boolean {\n        return this._required;\n    }\n\n    set required(value: boolean) {\n        this._required = coerceBooleanProperty(value);\n    }\n\n    // tslint:disable no-reserved-keywords\n    /** Input type of the element. */\n    @Input()\n    get type(): string {\n        return this._type;\n    }\n\n    set type(value: string) {\n        this._type = value || 'text';\n        this._validateType();\n\n        // When using Angular inputs, developers are no longer able to set the properties on the native\n        // input element. To ensure that bindings for `type` work, we need to sync the setter\n        // with the native property. Textarea elements don't support the type property or attribute.\n        if (getSupportedInputTypes().has(this._type)) {\n            this._elementRef.nativeElement.type = this._type;\n        }\n    }\n    // tslint:enable no-reserved-keywords\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    @Input()\n    get value(): string {\n        return this._inputValueAccessor.value;\n    }\n\n    set value(value: string) {\n        if (value !== this.value) {\n            this._inputValueAccessor.value = value;\n            this.stateChanges.next();\n        }\n    }\n\n    protected _uid = `mc-input-${nextUniqueId++}`;\n    protected _previousNativeValue: any;\n    protected _disabled = false;\n    protected _id: string;\n    protected _required = false;\n    protected _type = 'text';\n    protected _neverEmptyInputTypes = [\n        'date',\n        'datetime',\n        'datetime-local',\n        'month',\n        'time',\n        'week'\n    ].filter((t) => getSupportedInputTypes().has(t));\n\n    private _inputValueAccessor: { value: any };\n\n    constructor(protected _elementRef: ElementRef,\n                @Optional() @Self() public ngControl: NgControl,\n                @Optional() _parentForm: NgForm,\n                @Optional() _parentFormGroup: FormGroupDirective,\n                _defaultErrorStateMatcher: ErrorStateMatcher,\n                @Optional() @Self() @Inject(MC_INPUT_VALUE_ACCESSOR) inputValueAccessor: any) {\n        super(_defaultErrorStateMatcher, _parentForm, _parentFormGroup, ngControl);\n        // If no input value accessor was explicitly specified, use the element as the input value\n        // accessor.\n        this._inputValueAccessor = inputValueAccessor || this._elementRef.nativeElement;\n\n        this._previousNativeValue = this.value;\n\n        // Force setter to be called in case id was not specified.\n        this.id = this.id;\n    }\n\n    ngOnChanges() {\n        this.stateChanges.next();\n    }\n\n    ngOnDestroy() {\n        this.stateChanges.complete();\n    }\n\n    ngDoCheck() {\n        if (this.ngControl) {\n            // We need to re-evaluate this on every change detection cycle, because there are some\n            // error triggers that we can't subscribe to (e.g. parent form submissions). This means\n            // that whatever logic is in here has to be super lean or we risk destroying the performance.\n            this.updateErrorState();\n        }\n\n        // We need to dirty-check the native element's value, because there are some cases where\n        // we won't be notified when it changes (e.g. the consumer isn't using forms or they're\n        // updating the value using `emitEvent: false`).\n        this._dirtyCheckNativeValue();\n    }\n\n    /** Focuses the input. */\n    focus(): void {\n        this._elementRef.nativeElement.focus();\n    }\n\n    /** Callback for the cases where the focused state of the input changes. */\n    _focusChanged(isFocused: boolean) {\n        if (isFocused !== this.focused) {\n            this.focused = isFocused;\n            this.stateChanges.next();\n        }\n    }\n\n    _onInput() {\n        // This is a noop function and is used to let Angular know whenever the value changes.\n        // Angular will run a new change detection each time the `input` event has been dispatched.\n        // It's necessary that Angular recognizes the value change, because when floatingLabel\n        // is set to false and Angular forms aren't used, the placeholder won't recognize the\n        // value changes and will not disappear.\n        // Listening to the input event wouldn't be necessary when the input is using the\n        // FormsModule or ReactiveFormsModule, because Angular forms also listens to input events.\n    }\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    get empty(): boolean {\n        return !this._isNeverEmpty() && !this._elementRef.nativeElement.value && !this._isBadInput();\n    }\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    onContainerClick() {\n        this.focus();\n    }\n\n    /** Does some manual dirty checking on the native input `value` property. */\n    protected _dirtyCheckNativeValue() {\n        const newValue = this.value;\n\n        if (this._previousNativeValue !== newValue) {\n            this._previousNativeValue = newValue;\n            this.stateChanges.next();\n        }\n    }\n\n    /** Make sure the input is a supported type. */\n    protected _validateType() {\n        if (MC_INPUT_INVALID_TYPES.indexOf(this._type) > -1) {\n            throw getMcInputUnsupportedTypeError(this._type);\n        }\n    }\n\n    /** Checks whether the input type is one of the types that are never empty. */\n    protected _isNeverEmpty() {\n        return this._neverEmptyInputTypes.indexOf(this._type) > -1;\n    }\n\n    /** Checks whether the input is invalid based on the native validation. */\n    protected _isBadInput() {\n        // The `validity` property won't be present on platform-server.\n        const validity = (this._elementRef.nativeElement as HTMLInputElement).validity;\n\n        return validity && validity.badInput;\n    }\n}\n\n@Directive({\n    selector: 'input[mcInputMonospace]',\n    exportAs: 'McInputMonospace',\n    host: { class: 'mc-input_monospace' }\n})\nexport class McInputMono {\n}\n","import { Directive, forwardRef, Input, OnChanges, Provider, SimpleChanges } from '@angular/core';\nimport { AbstractControl, NG_VALIDATORS, ValidationErrors, Validator, ValidatorFn, Validators } from '@angular/forms';\n\n\nexport const MIN_VALIDATOR: Provider = {\n    provide: NG_VALIDATORS,\n    useExisting: forwardRef(() => MinValidator),\n    multi: true\n};\n\n/**\n * A directive which installs the {@link MinValidator} for any `formControlName`,\n * `formControl`, or control with `ngModel` that also has a `min` attribute.\n *\n * @experimental\n */\n@Directive({\n    selector: '[min][formControlName],[min][formControl],[min][ngModel]',\n    providers: [MIN_VALIDATOR],\n    host: {'[attr.min]': 'min ? min : null'}\n})\nexport class MinValidator implements Validator, OnChanges {\n\n    @Input() min: string;\n    private _validator: ValidatorFn;\n    private _onChange: () => void;\n\n    ngOnChanges(changes: SimpleChanges): void {\n        if ('min' in changes) {\n            this._createValidator();\n            if (this._onChange) { this._onChange(); }\n        }\n    }\n\n    validate(c: AbstractControl): ValidationErrors | null { return this._validator(c); }\n\n    registerOnValidatorChange(fn: () => void): void { this._onChange = fn; }\n\n    private _createValidator(): void { this._validator = Validators.min(parseInt(this.min, 10)); }\n}\n\n\nexport const MAX_VALIDATOR: Provider = {\n    provide: NG_VALIDATORS,\n    useExisting: forwardRef(() => MaxValidator),\n    multi: true\n};\n\n/**\n * A directive which installs the {@link MaxValidator} for any `formControlName`,\n * `formControl`, or control with `ngModel` that also has a `min` attribute.\n *\n * @experimental\n */\n@Directive({\n    selector: '[max][formControlName],[max][formControl],[max][ngModel]',\n    providers: [MAX_VALIDATOR],\n    host: {\n        '[attr.max]': 'max ? max : null'\n    }\n})\nexport class MaxValidator implements Validator,\n    OnChanges {\n\n    @Input() max: string;\n    private _validator: ValidatorFn;\n    private _onChange: () => void;\n\n    ngOnChanges(changes: SimpleChanges): void {\n        if ('max' in changes) {\n            this._createValidator();\n            if (this._onChange) { this._onChange(); }\n        }\n    }\n\n    validate(c: AbstractControl): ValidationErrors | null { return this._validator(c); }\n\n    registerOnValidatorChange(fn: () => void): void { this._onChange = fn; }\n\n    private _createValidator(): void { this._validator = Validators.max(parseInt(this.max, 10)); }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { A11yModule } from '@ptsecurity/cdk/a11y';\nimport { McCommonModule } from '@ptsecurity/mosaic/core';\n\nimport { McInput, McInputMono, McNumberInput } from './input';\nimport { MaxValidator, MinValidator } from './input-number-validators';\n\n\n@NgModule({\n    imports: [CommonModule, A11yModule, McCommonModule, FormsModule],\n    exports: [McInput, McNumberInput, McInputMono, MinValidator, MaxValidator],\n    declarations: [McInput, McNumberInput, McInputMono, MinValidator, MaxValidator ]\n})\nexport class McInputModule {\n}\n","import { Component } from '@angular/core';\n\n\n@Component({\n    selector: 'mc-content',\n    preserveWhitespaces: false,\n    templateUrl: './content.component.html',\n    styles: [\n        `:host {\n            display: block;\n        }`\n    ],\n    host: {\n        '[class.mc-layout-content]': 'true'\n    }\n})\nexport class McContentComponent {\n}\n","import { Component } from '@angular/core';\n\n\n@Component({\n    selector: 'mc-footer',\n    preserveWhitespaces: false,\n    templateUrl: './footer.component.html',\n    styles: [\n        `:host {\n            display: block;\n        }`\n    ],\n    host: {\n        '[class.mc-layout-footer]': 'true'\n    }\n})\nexport class McFooterComponent {\n}\n","import { Component } from '@angular/core';\n\n\n@Component({\n    selector : 'mc-header',\n    preserveWhitespaces: false,\n    templateUrl: './header.component.html',\n    styles: [\n        `:host {\n            display: block;\n        }`\n    ],\n    host: {\n        '[class.mc-layout-header]': 'true'\n    }\n})\nexport class McHeaderComponent {\n}\n","import { ChangeDetectionStrategy, Component, ViewEncapsulation } from '@angular/core';\n\n\n@Component({\n    selector: 'mc-layout',\n    preserveWhitespaces: false,\n    styleUrls: ['layout.css'],\n    templateUrl: './layout.component.html',\n    host: {\n        '[class.mc-layout]': 'true',\n        '[class.mc-layout-has-sidebar]': 'hasSidebar'\n    },\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class McLayoutComponent {\n    hasSidebar = false;\n}\n","import {\n    ChangeDetectionStrategy,\n    Component,\n    EventEmitter,\n    Host,\n    Input,\n    OnInit,\n    Optional,\n    Output\n} from '@angular/core';\nimport { toBoolean } from '@ptsecurity/mosaic/core';\n\nimport { McLayoutComponent } from './layout.component';\n\n\n@Component({\n    selector: 'mc-sidebar',\n    preserveWhitespaces: false,\n    templateUrl: './sidebar.component.html',\n    host: {\n        '[class.mc-layout-sidebar]': 'true',\n        '[class.mc-layout-sidebar-collapsed]': 'mcCollapsed',\n        '[style.flex]': 'mcFlex',\n        '[style.max-width.px]': 'mcWidth',\n        '[style.min-width.px]': 'mcWidth',\n        '[style.width.px]': 'mcWidth'\n    },\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class McSidebarComponent implements OnInit {\n\n    @Input() _mcWidth = 200;\n    @Input() mcCollapsedWidth = 80;\n\n    @Input()\n    set mcCollapsible(value: boolean) {\n        this.collapsible = toBoolean(value);\n    }\n\n    get mcCollapsible(): boolean {\n        return this.collapsible;\n    }\n\n    @Input()\n    set mcCollapsed(value: boolean) {\n        this.collapsed = toBoolean(value);\n    }\n\n    get mcCollapsed(): boolean {\n        return this.collapsed;\n    }\n\n    // tslint:disable-next-line\n    @Output() mcCollapsedChange = new EventEmitter();\n\n    private collapsed = false;\n    private collapsible = false;\n\n    get mcFlex(): string {\n        if (this.mcCollapsed) {\n            return `0 0 ${this.mcCollapsedWidth}px`;\n        } else {\n            return `0 0 ${this.mcWidth}px`;\n        }\n    }\n\n    get mcWidth(): number {\n        if (this.mcCollapsed) {\n            return this.mcCollapsedWidth;\n        } else {\n            return this._mcWidth;\n        }\n    }\n\n    constructor(\n        @Optional() @Host() private mcLayoutComponent: McLayoutComponent) {\n    }\n\n    ngOnInit() {\n        if (this.mcLayoutComponent) {\n            this.mcLayoutComponent.hasSidebar = true;\n        }\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { McContentComponent } from './content.component';\nimport { McFooterComponent } from './footer.component';\nimport { McHeaderComponent } from './header.component';\nimport { McLayoutComponent } from './layout.component';\nimport { McSidebarComponent } from './sidebar.component';\n\n\n@NgModule({\n    imports: [ CommonModule ],\n    exports: [\n        McLayoutComponent,\n        McContentComponent,\n        McFooterComponent,\n        McHeaderComponent,\n        McSidebarComponent\n    ],\n    declarations: [\n        McLayoutComponent,\n        McContentComponent,\n        McFooterComponent,\n        McHeaderComponent,\n        McSidebarComponent\n    ]\n})\nexport class McLayoutModule {\n}\n","import {\n    ChangeDetectionStrategy,\n    Component,\n    Directive,\n    ElementRef,\n    OnDestroy,\n    QueryList,\n    ViewEncapsulation,\n    ContentChildren\n} from '@angular/core';\n\nimport { FocusMonitor } from '@ptsecurity/cdk/a11y';\n\nimport { mixinColor, mixinDisabled, CanColor, CanDisable, CanDisableCtor, CanColorCtor } from '@ptsecurity/mosaic/core';\nimport { McIcon } from '@ptsecurity/mosaic/icon';\n\n\n@Directive({\n    selector: 'button[mc-button], a[mc-button]',\n    host: { class: 'mc-button' }\n})\nexport class McButtonCSSStyler {}\n\n\n@Directive({\n    selector: 'button[mc-icon-button], a[mc-icon-button]',\n    queries: {\n        contentChildren: new ContentChildren(McIcon)\n    },\n    host: { class: 'mc-icon-button' }\n})\nexport class McIconButtonCSSStyler {\n    nativeElement: Element;\n\n    contentChildren: QueryList<McIcon>;\n\n    constructor(elementRef: ElementRef) {\n        this.nativeElement = elementRef.nativeElement;\n    }\n\n    ngAfterContentInit() {\n        this._addClassModificatorForIcons();\n    }\n\n    _addClassModificatorForIcons() {\n        const twoIcons = 2;\n        const icons = this.contentChildren.map((item) => item._elementRef.nativeElement);\n\n        if (icons.length === 1) {\n            const iconElement = icons[0];\n\n            if (!iconElement.previousElementSibling && !iconElement.nextElementSibling) {\n                if (iconElement.nextSibling) {\n                    iconElement.classList.add('mc-icon_left');\n                    this.nativeElement.classList.add('mc-icon-button_left');\n                }\n\n                if (iconElement.previousSibling) {\n                    iconElement.classList.add('mc-icon_right');\n                    this.nativeElement.classList.add('mc-icon-button_right');\n                }\n            }\n        } else if (icons.length === twoIcons) {\n            const firstIconElement = icons[0];\n            const secondIconElement = icons[1];\n\n            firstIconElement.classList.add('mc-icon_left');\n            secondIconElement.classList.add('mc-icon_right');\n        }\n    }\n}\n\n\nexport class McButtonBase {\n    constructor(public _elementRef: ElementRef) {}\n}\n\nexport const _McButtonMixinBase:\n    CanDisableCtor &\n    CanColorCtor &\n    typeof McButtonBase =\n        mixinColor(mixinDisabled(McButtonBase));\n\n\n@Component({\n    selector: `\n        button[mc-button],\n        button[mc-xs-button],\n        button[mc-sm-button],\n        button[mc-lg-button],\n        button[mc-xl-button]\n    `,\n    templateUrl: './button.component.html',\n    styleUrls: ['./button.css'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n    inputs: ['disabled', 'color'],\n    host: {\n        '[disabled]': 'disabled || null'\n    }\n})\nexport class McButton extends _McButtonMixinBase implements OnDestroy, CanDisable, CanColor {\n    constructor(elementRef: ElementRef, private _focusMonitor: FocusMonitor) {\n        super(elementRef);\n\n        this._focusMonitor.monitor(this._elementRef.nativeElement, true);\n    }\n\n    ngOnDestroy() {\n        this._focusMonitor.stopMonitoring(this._elementRef.nativeElement);\n    }\n\n    focus(): void {\n        this._getHostElement().focus();\n    }\n\n    _getHostElement() {\n        return this._elementRef.nativeElement;\n    }\n}\n\n\n@Component({\n    selector: 'a[mc-button], a[mc-xs-button], a[mc-sm-button], a[mc-lg-button], a[mc-xl-button]',\n    templateUrl: './button.component.html',\n    styleUrls: ['./button.css'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n    inputs: ['disabled', 'color'],\n    host: {\n        '[attr.tabindex]': 'disabled ? -1 : 0',\n        '[attr.disabled]': 'disabled || null',\n        '(click)': '_haltDisabledEvents($event)'\n    }\n})\nexport class McAnchor extends McButton {\n    constructor(focusMonitor: FocusMonitor, elementRef: ElementRef) {\n        super(elementRef, focusMonitor);\n    }\n\n    _haltDisabledEvents(event: Event) {\n        if (this.disabled) {\n            event.preventDefault();\n            event.stopImmediatePropagation();\n        }\n    }\n}\n\n\n@Component({\n    selector: 'button[mc-icon-button]',\n    templateUrl: './button.component.html',\n    styleUrls: ['./button.css'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n    inputs: ['disabled', 'color'],\n    host: {\n        '[attr.tabindex]': 'disabled ? -1 : 0',\n        '[attr.disabled]': 'disabled || null'\n    }\n})\nexport class McIconButton extends McButton {\n    constructor(focusMonitor: FocusMonitor, elementRef: ElementRef) {\n        super(elementRef, focusMonitor);\n    }\n\n    _haltDisabledEvents(event: Event) {\n        if (this.disabled) {\n            event.preventDefault();\n            event.stopImmediatePropagation();\n        }\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { A11yModule } from '@ptsecurity/cdk/a11y';\nimport { PlatformModule } from '@ptsecurity/cdk/platform';\n\nimport {\n    McButton,\n    McAnchor,\n    McIconButton,\n    McButtonCSSStyler,\n    McIconButtonCSSStyler\n} from './button.component';\n\n\n@NgModule({\n    imports: [\n        CommonModule,\n        A11yModule,\n        PlatformModule\n    ],\n    exports: [\n        McButton,\n        McAnchor,\n        McIconButton,\n        McButtonCSSStyler,\n        McIconButtonCSSStyler\n    ],\n    declarations: [\n        McButton,\n        McAnchor,\n        McIconButton,\n        McButtonCSSStyler,\n        McIconButtonCSSStyler\n    ]\n})\nexport class McButtonModule {}\n","import {\n    Output,\n    ChangeDetectionStrategy,\n    Component,\n    ElementRef, Input,\n    OnDestroy, EventEmitter,\n    ViewEncapsulation, HostBinding\n} from '@angular/core';\n\nimport { FocusMonitor } from '@ptsecurity/cdk/a11y';\nimport { SPACE } from '@ptsecurity/cdk/keycodes';\n\n\n@Component({\n    selector: 'mc-card',\n    templateUrl: './card.component.html',\n    styleUrls: ['./card.component.css'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n    inputs: ['color'],\n    host: {\n        class: 'mc-card',\n        '[class.mc-card_readonly]': 'readonly',\n        '[class.mc-card_selected]': 'selected',\n        '(keydown)': 'onKeyDown($event)',\n        '(click)': 'onClick($event)'\n    }\n})\nexport class McCard implements OnDestroy {\n    get tabIndex(): number | null {\n        return this.readonly ? null : this._tabIndex;\n    }\n\n    @HostBinding('attr.tabIndex')\n    @Input()\n    set tabIndex(value: number | null) {\n        this._tabIndex = value;\n    }\n\n    @Input()\n    readonly = false;\n\n    @Input()\n    selected = false;\n\n    @Output()\n    selectedChange = new EventEmitter<boolean>();\n\n    private _tabIndex: number | null = 0;\n\n    constructor(private _elementRef: ElementRef, private _focusMonitor: FocusMonitor) {\n        this._focusMonitor.monitor(this._elementRef.nativeElement, false);\n    }\n\n    ngOnDestroy() {\n        this._focusMonitor.stopMonitoring(this._elementRef.nativeElement);\n    }\n\n    focus(): void {\n        this.hostElement.focus();\n    }\n\n    onClick($event: MouseEvent) {\n        if (!this.readonly) {\n            $event.stopPropagation();\n\n            this.selectedChange.emit(!this.selected);\n        }\n    }\n\n    private get hostElement() {\n        return this._elementRef.nativeElement;\n    }\n\n    onKeyDown($event: KeyboardEvent) {\n        switch ($event.keyCode) {\n            case SPACE:\n                if (!this.readonly) {\n                    $event.preventDefault();\n                    this.selectedChange.emit(!this.selected);\n                }\n                break;\n            default:\n        }\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { A11yModule } from '@ptsecurity/cdk/a11y';\nimport { PlatformModule } from '@ptsecurity/cdk/platform';\n\nimport {\n    McCard\n} from './card.component';\n\n\n@NgModule({\n    imports: [\n        CommonModule,\n        A11yModule,\n        PlatformModule\n    ],\n    exports: [McCard],\n    declarations: [McCard]\n})\nexport class McCardModule {}\n","import { InjectionToken } from '@angular/core';\n\n\n/**\n * Checkbox click action when user click on input element.\n * noop: Do not toggle checked or indeterminate.\n * check: Only toggle checked status, ignore indeterminate.\n * check-indeterminate: Toggle checked status, set indeterminate to false. Default behavior.\n * undefined: Same as `check-indeterminate`.\n */\nexport type McCheckboxClickAction = 'noop' | 'check' | 'check-indeterminate' | undefined;\n\n/**\n * Injection token that can be used to specify the checkbox click behavior.\n */\nexport const MC_CHECKBOX_CLICK_ACTION =\n    new InjectionToken<McCheckboxClickAction>('mc-checkbox-click-action');\n","import {\n    AfterViewInit,\n    Attribute,\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    ElementRef,\n    EventEmitter,\n    forwardRef,\n    Inject,\n    Input,\n    OnDestroy,\n    Optional,\n    Output,\n    ViewChild,\n    ViewEncapsulation\n} from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { FocusMonitor, FocusOrigin } from '@ptsecurity/cdk/a11y';\nimport {\n    CanColor, CanColorCtor,\n    CanDisable, CanDisableCtor,\n    HasTabIndex, HasTabIndexCtor,\n    mixinColor,\n    mixinDisabled,\n    mixinTabIndex,\n    toBoolean\n} from '@ptsecurity/mosaic/core';\n\nimport { MC_CHECKBOX_CLICK_ACTION, McCheckboxClickAction } from './checkbox-config';\n\n\n// Increasing integer for generating unique ids for checkbox components.\nlet nextUniqueId = 0;\n\n/**\n * Provider Expression that allows mc-checkbox to register as a ControlValueAccessor.\n * This allows it to support [(ngModel)].\n * @docs-private\n */\nexport const MC_CHECKBOX_CONTROL_VALUE_ACCESSOR: any = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => McCheckbox),\n    multi: true\n};\n\n/**\n * Represents the different states that require custom transitions between them.\n * @docs-private\n */\nexport enum TransitionCheckState {\n    /** The initial state of the component before any user interaction. */\n    Init,\n    /** The state representing the component when it's becoming checked. */\n    Checked,\n    /** The state representing the component when it's becoming unchecked. */\n    Unchecked,\n    /** The state representing the component when it's becoming indeterminate. */\n    Indeterminate\n}\n\n/** Change event object emitted by McCheckbox. */\nexport class McCheckboxChange {\n    /** The source McCheckbox of the event. */\n    source: McCheckbox;\n    /** The new `checked` value of the checkbox. */\n    checked: boolean;\n}\n\n// Boilerplate for applying mixins to McCheckbox.\n/** @docs-private */\nexport class McCheckboxBase {\n    constructor(public _elementRef: ElementRef) {\n    }\n}\n\nexport const _McCheckboxMixinBase:\n    HasTabIndexCtor &\n    CanColorCtor &\n    CanDisableCtor &\n    typeof McCheckboxBase =\n        mixinTabIndex(mixinColor(mixinDisabled(McCheckboxBase)));\n\n\n/**\n * A mosaic checkbox component. Supports all of the functionality of an HTML5 checkbox,\n * and exposes a similar API. A McCheckbox can be either checked, unchecked, indeterminate, or\n * disabled. Note that all additional accessibility attributes are taken care of by the component,\n * so there is no need to provide them yourself. However, if you want to omit a label and still\n * have the checkbox be accessible, you may supply an [aria-label] input.\n */\n@Component({\n    selector: 'mc-checkbox',\n    templateUrl: 'checkbox.html',\n    styleUrls: ['checkbox.css'],\n    exportAs: 'mcCheckbox',\n    host: {\n        class: 'mc-checkbox',\n        '[id]': 'id',\n        '[attr.id]': 'id',\n        '[class.mc-checkbox-indeterminate]': 'indeterminate',\n        '[class.mc-checkbox-checked]': 'checked',\n        '[class.mc-checkbox-disabled]': 'disabled',\n        '[class.mc-checkbox-label-before]': 'labelPosition == \"before\"'\n    },\n    providers: [MC_CHECKBOX_CONTROL_VALUE_ACCESSOR],\n    inputs: ['color', 'tabIndex'],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class McCheckbox extends _McCheckboxMixinBase implements ControlValueAccessor,\n    AfterViewInit, OnDestroy, CanColor, CanDisable, HasTabIndex {\n\n    /**\n     * Attached to the aria-label attribute of the host element. In most cases, arial-labelledby will\n     * take precedence so this may be omitted.\n     */\n    @Input('aria-label') ariaLabel: string = '';\n\n    /**\n     * Users can specify the `aria-labelledby` attribute which will be forwarded to the input element\n     */\n    @Input('aria-labelledby') ariaLabelledby: string | null = null;\n\n    private _uniqueId: string = `mc-checkbox-${++nextUniqueId}`;\n\n    /** A unique id for the checkbox input. If none is supplied, it will be auto-generated. */\n    @Input() id: string = this._uniqueId;\n\n    /** Returns the unique id for the visual hidden input. */\n    get inputId(): string {\n        return `${this.id || this._uniqueId}-input`;\n    }\n\n    /** Whether the checkbox is required. */\n    @Input()\n    get required(): boolean {\n        return this._required;\n    }\n\n    set required(value: boolean) {\n        this._required = toBoolean(value);\n    }\n\n    private _required: boolean;\n\n    /** Whether the label should appear after or before the checkbox. Defaults to 'after' */\n    @Input() labelPosition: 'before' | 'after' = 'after';\n\n    /** Name value will be applied to the input element if present */\n    @Input() name: string | null = null;\n\n    /** Event emitted when the checkbox's `checked` value changes. */\n    @Output() readonly change: EventEmitter<McCheckboxChange> =\n        new EventEmitter<McCheckboxChange>();\n\n    /** Event emitted when the checkbox's `indeterminate` value changes. */\n    @Output() readonly indeterminateChange: EventEmitter<boolean> = new EventEmitter<boolean>();\n\n    /** The value attribute of the native input element */\n    @Input() value: string;\n\n    /** The native `<input type=\"checkbox\">` element */\n    @ViewChild('input') _inputElement: ElementRef;\n\n    /**\n     * Called when the checkbox is blurred. Needed to properly implement ControlValueAccessor.\n     * @docs-private\n     */\n    _onTouched: () => any = () => {\n    }\n\n    private _currentAnimationClass: string = '';\n\n    private _currentCheckState: TransitionCheckState = TransitionCheckState.Init;\n\n    private _controlValueAccessorChangeFn: (value: any) => void = () => {\n    }\n\n    constructor(elementRef: ElementRef,\n                private _changeDetectorRef: ChangeDetectorRef,\n                private _focusMonitor: FocusMonitor,\n                @Attribute('tabindex') tabIndex: string,\n                @Optional() @Inject(MC_CHECKBOX_CLICK_ACTION)\n                private _clickAction: McCheckboxClickAction) {\n        super(elementRef);\n\n        this.tabIndex = parseInt(tabIndex) || 0;\n    }\n\n    ngAfterViewInit() {\n        this._focusMonitor\n            .monitor(this._inputElement.nativeElement)\n            .subscribe((focusOrigin) => this._onInputFocusChange(focusOrigin));\n    }\n\n    ngOnDestroy() {\n        this._focusMonitor.stopMonitoring(this._inputElement.nativeElement);\n    }\n\n    /**\n     * Whether the checkbox is checked.\n     */\n    @Input()\n    get checked(): boolean {\n        return this._checked;\n    }\n\n    set checked(value: boolean) {\n        if (value != this.checked) {\n            this._checked = value;\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n\n    private _checked: boolean = false;\n\n    /**\n     * Whether the checkbox is disabled. This fully overrides the implementation provided by\n     * mixinDisabled, but the mixin is still required because mixinTabIndex requires it.\n     */\n    @Input()\n    get disabled() {\n        return this._disabled;\n    }\n\n    set disabled(value: any) {\n        if (value != this.disabled) {\n            this._disabled = value;\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n\n    private _disabled: boolean = false;\n\n    /**\n     * Whether the checkbox is indeterminate. This is also known as \"mixed\" mode and can be used to\n     * represent a checkbox with three states, e.g. a checkbox that represents a nested list of\n     * checkable items. Note that whenever checkbox is manually clicked, indeterminate is immediately\n     * set to false.\n     */\n    @Input()\n    get indeterminate(): boolean {\n        return this._indeterminate;\n    }\n\n    set indeterminate(value: boolean) {\n        const changed = value != this._indeterminate;\n        this._indeterminate = value;\n\n        if (changed) {\n            if (this._indeterminate) {\n                this._transitionCheckState(TransitionCheckState.Indeterminate);\n            } else {\n                this._transitionCheckState(\n                    this.checked ? TransitionCheckState.Checked : TransitionCheckState.Unchecked);\n            }\n            this.indeterminateChange.emit(this._indeterminate);\n        }\n    }\n\n    private _indeterminate: boolean = false;\n\n    /** Method being called whenever the label text changes. */\n    _onLabelTextChange() {\n        // This method is getting called whenever the label of the checkbox changes.\n        // Since the checkbox uses the OnPush strategy we need to notify it about the change\n        // that has been recognized by the cdkObserveContent directive.\n        this._changeDetectorRef.markForCheck();\n    }\n\n    // Implemented as part of ControlValueAccessor.\n    writeValue(value: any) {\n        this.checked = !!value;\n    }\n\n    // Implemented as part of ControlValueAccessor.\n    registerOnChange(fn: (value: any) => void) {\n        this._controlValueAccessorChangeFn = fn;\n    }\n\n    // Implemented as part of ControlValueAccessor.\n    registerOnTouched(fn: any) {\n        this._onTouched = fn;\n    }\n\n    // Implemented as part of ControlValueAccessor.\n    setDisabledState(isDisabled: boolean) {\n        this.disabled = isDisabled;\n    }\n\n    _getAriaChecked(): 'true' | 'false' | 'mixed' {\n        return this.checked ? 'true' : (this.indeterminate ? 'mixed' : 'false');\n    }\n\n    private _transitionCheckState(newState: TransitionCheckState) {\n        const oldState = this._currentCheckState;\n        const element: HTMLElement = this._elementRef.nativeElement;\n\n        if (oldState === newState) {\n            return;\n        }\n        if (this._currentAnimationClass.length > 0) {\n            element.classList.remove(this._currentAnimationClass);\n        }\n\n        this._currentCheckState = newState;\n\n        if (this._currentAnimationClass.length > 0) {\n            element.classList.add(this._currentAnimationClass);\n        }\n    }\n\n    private _emitChangeEvent() {\n        const event = new McCheckboxChange();\n        event.source = this;\n        event.checked = this.checked;\n\n        this._controlValueAccessorChangeFn(this.checked);\n        this.change.emit(event);\n    }\n\n    /** Function is called whenever the focus changes for the input element. */\n    private _onInputFocusChange(focusOrigin: FocusOrigin) {\n        if (focusOrigin) {\n            this._onTouched();\n        }\n    }\n\n    /** Toggles the `checked` state of the checkbox. */\n    toggle(): void {\n        this.checked = !this.checked;\n    }\n\n    /**\n     * Event handler for checkbox input element.\n     * Toggles checked state if element is not disabled.\n     * Do not toggle on (change) event since IE doesn't fire change event when\n     *   indeterminate checkbox is clicked.\n     * @param event\n     */\n    _onInputClick(event: Event) {\n        // We have to stop propagation for click events on the visual hidden input element.\n        // By default, when a user clicks on a label element, a generated click event will be\n        // dispatched on the associated input element. Since we are using a label element as our\n        // root container, the click event on the `checkbox` will be executed twice.\n        // The real click event will bubble up, and the generated click event also tries to bubble up.\n        // This will lead to multiple click events.\n        // Preventing bubbling for the second event will solve that issue.\n        event.stopPropagation();\n\n        // If resetIndeterminate is false, and the current state is indeterminate, do nothing on click\n        if (!this.disabled && this._clickAction !== 'noop') {\n            // When user manually click on the checkbox, `indeterminate` is set to false.\n            if (this.indeterminate && this._clickAction !== 'check') {\n\n                Promise.resolve().then(() => {\n                    this._indeterminate = false;\n                    this.indeterminateChange.emit(this._indeterminate);\n                });\n            }\n\n            this.toggle();\n            this._transitionCheckState(\n                this._checked ? TransitionCheckState.Checked : TransitionCheckState.Unchecked);\n\n            // Emit our custom change event if the native input emitted one.\n            // It is important to only emit it, if the native input triggered one, because\n            // we don't want to trigger a change event, when the `checked` variable changes for example.\n            this._emitChangeEvent();\n        } else if (!this.disabled && this._clickAction === 'noop') {\n            // Reset native input when clicked with noop. The native checkbox becomes checked after\n            // click, reset it to be align with `checked` value of `mc-checkbox`.\n            this._inputElement.nativeElement.checked = this.checked;\n            this._inputElement.nativeElement.indeterminate = this.indeterminate;\n        }\n    }\n\n    /** Focuses the checkbox. */\n    focus(): void {\n        this._focusMonitor.focusVia(this._inputElement.nativeElement, 'keyboard');\n    }\n\n    _onInteractionEvent(event: Event) {\n        // We always have to stop propagation on the change event.\n        // Otherwise the change event, from the input element, will bubble up and\n        // emit its event object to the `change` output.\n        event.stopPropagation();\n    }\n}\n","import {\n    Directive,\n    forwardRef,\n    Provider\n} from '@angular/core';\nimport {\n    CheckboxRequiredValidator,\n    NG_VALIDATORS\n} from '@angular/forms';\n\n\nexport const MC_CHECKBOX_REQUIRED_VALIDATOR: Provider = {\n    provide: NG_VALIDATORS,\n    useExisting: forwardRef(() => McCheckboxRequiredValidator),\n    multi: true\n};\n\n/**\n * Validator for Mosaic checkbox's required attribute in template-driven checkbox.\n * Current CheckboxRequiredValidator only work with `input type=checkbox` and does not\n * work with `mc-checkbox`.\n */\n@Directive({\n    selector: `mc-checkbox[required][formControlName],\n             mc-checkbox[required][formControl], mc-checkbox[required][ngModel]`,\n    providers: [MC_CHECKBOX_REQUIRED_VALIDATOR],\n    host: { '[attr.required]': 'required ? \"\" : null' }\n})\nexport class McCheckboxRequiredValidator extends CheckboxRequiredValidator {\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { McCheckbox } from './checkbox';\nimport { McCheckboxRequiredValidator } from './checkbox-required-validator';\n\n\n@NgModule({\n    imports: [CommonModule],\n    exports: [McCheckbox, McCheckboxRequiredValidator],\n    declarations: [McCheckbox, McCheckboxRequiredValidator]\n})\nexport class McCheckboxModule {\n}\n","import { ChangeDetectionStrategy, Component, Input, ViewEncapsulation } from '@angular/core';\nimport { coerceBooleanProperty } from '@ptsecurity/cdk/coercion';\n\n\n@Component({\n    selector: 'mc-divider',\n    host: {\n        class: 'mc-divider',\n        role: 'separator',\n        '[attr.aria-orientation]': 'vertical ? \"vertical\" : \"horizontal\"',\n        '[class.mc-divider-vertical]': 'vertical',\n        '[class.mc-divider-inset]': 'inset'\n    },\n    template: '',\n    styleUrls: ['divider.css'],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    preserveWhitespaces: false\n})\nexport class McDivider {\n    // Whether the divider is vertically aligned.\n    @Input()\n    get vertical(): boolean {\n        return this._vertical;\n    }\n\n    set vertical(value: boolean) {\n        this._vertical = coerceBooleanProperty(value);\n    }\n\n    private _vertical: boolean = false;\n\n    // Whether the divider is an inset divider.\n    @Input()\n    get inset(): boolean {\n        return this._inset;\n    }\n\n    set inset(value: boolean) {\n        this._inset = coerceBooleanProperty(value);\n    }\n\n    private _inset: boolean = false;\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { McDivider } from './divider.component';\n\n\n@NgModule({\n    imports: [CommonModule],\n    exports: [McDivider],\n    declarations: [McDivider]\n})\nexport class McDividerModule {\n}\n","import { DOCUMENT } from '@angular/common';\nimport {\n    Directive,\n    TemplateRef,\n    ComponentFactoryResolver,\n    ApplicationRef,\n    Injector,\n    ViewContainerRef,\n    Inject,\n    OnDestroy\n} from '@angular/core';\nimport { TemplatePortal, DomPortalOutlet } from '@ptsecurity/cdk/portal';\nimport { Subject } from 'rxjs';\n\n\n/**\n * Dropdown content that will be rendered lazily once the dropdown is opened.\n */\n@Directive({\n    selector: 'ng-template[mcDropdownContent]'\n})\nexport class McDropdownContent implements OnDestroy {\n\n    /** Emits when the dropdown content has been attached. */\n    _attached = new Subject<void>();\n    private _portal: TemplatePortal;\n    private _outlet: DomPortalOutlet;\n\n    constructor(\n        private _template: TemplateRef<any>,\n        private _componentFactoryResolver: ComponentFactoryResolver,\n        private _appRef: ApplicationRef,\n        private _injector: Injector,\n        private _viewContainerRef: ViewContainerRef,\n        @Inject(DOCUMENT) private _document: any) {}\n\n    /**\n     * Attaches the content with a particular context.\n     * @docs-private\n     */\n    attach(context: any = {}) {\n        if (!this._portal) {\n            this._portal = new TemplatePortal(this._template, this._viewContainerRef);\n        }\n\n        this.detach();\n\n        if (!this._outlet) {\n            this._outlet = new DomPortalOutlet(this._document.createElement('div'),\n                this._componentFactoryResolver, this._appRef, this._injector);\n        }\n\n        const element: HTMLElement = this._template.elementRef.nativeElement;\n\n        // Because we support opening the same dropdown from different triggers (which in turn have their\n        // own `OverlayRef` panel), we have to re-insert the host element every time, otherwise we\n        // risk it staying attached to a pane that's no longer in the DOM.\n        element.parentNode!.insertBefore(this._outlet.outletElement, element);\n        this._portal.attach(this._outlet, context);\n        this._attached.next();\n    }\n\n    /**\n     * Detaches the content.\n     * @docs-private\n     */\n    detach() {\n        if (this._portal.isAttached) {\n            this._portal.detach();\n        }\n    }\n\n    ngOnDestroy() {\n        if (this._outlet) {\n            this._outlet.dispose();\n        }\n    }\n}\n","import { EventEmitter, TemplateRef, InjectionToken } from '@angular/core';\nimport { FocusOrigin } from '@ptsecurity/cdk/a11y';\nimport { Direction } from '@ptsecurity/cdk/bidi';\n\nimport { McDropdownContent } from './dropdown-content';\nimport { DropdownPositionX, DropdownPositionY } from './dropdown-positions';\n\n\n/**\n * Injection token used to provide the parent dropdown to dropdown-specific components.\n * @docs-private\n */\nexport const MC_DROPDOWN_PANEL = new InjectionToken<McDropdownPanel>('MC_DROPDOWN_PANEL');\n\n/**\n * Interface for a custom dropdown panel that can be used with `mcDropdownTriggerFor`.\n * @docs-private\n */\n// tslint:disable-next-line:interface-name\nexport interface McDropdownPanel<T = any> {\n    xPosition: DropdownPositionX;\n    yPosition: DropdownPositionY;\n    overlapTrigger: boolean;\n    templateRef: TemplateRef<any>;\n    closed: EventEmitter<void | 'click' | 'keydown' | 'tab'>;\n    direction?: Direction;\n    lazyContent?: McDropdownContent;\n    backdropClass?: string;\n    hasBackdrop?: boolean;\n    focusFirstItem(origin?: FocusOrigin): void;\n    resetActiveItem(): void;\n    setPositionClasses?(x: DropdownPositionX, y: DropdownPositionY): void;\n    addItem?(item: T): void;\n    removeItem?(item: T): void;\n}\n","import { DOCUMENT } from '@angular/common';\nimport {\n    ChangeDetectionStrategy,\n    Component,\n    ElementRef,\n    OnDestroy,\n    ViewEncapsulation,\n    Inject,\n    Optional\n} from '@angular/core';\nimport { IFocusableOption, FocusMonitor, FocusOrigin } from '@ptsecurity/cdk/a11y';\nimport {\n    CanDisable, CanDisableCtor,\n    mixinDisabled\n} from '@ptsecurity/mosaic/core';\n\nimport { MC_DROPDOWN_PANEL, McDropdownPanel } from './dropdown-panel';\n\n\n// Boilerplate for applying mixins to McDropdownItem.\n/** @docs-private */\nexport class McDropdownItemBase {}\nexport const _McDropdownItemMixinBase: CanDisableCtor & typeof McDropdownItemBase =\n    mixinDisabled(McDropdownItemBase);\n\n/**\n * This directive is intended to be used inside an mc-dropdown tag.\n * It exists mostly to set the role attribute.\n */\n@Component({\n    selector: 'mc-dropdown-item, [mc-dropdown-item]',\n    exportAs: 'mcDropdownItem',\n    inputs: ['disabled'],\n    host: {\n        role: 'dropdown-item',\n        class: 'mc-dropdown__item',\n        '[attr.tabindex]': '_getTabIndex()',\n        '[attr.disabled]': 'disabled || null',\n        '(click)': '_checkDisabled($event)'\n    },\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n    template: `<ng-content></ng-content>`\n})\nexport class McDropdownItem extends _McDropdownItemMixinBase\n    implements IFocusableOption, CanDisable, OnDestroy {\n\n    private _document: Document;\n\n    constructor(\n        private _elementRef: ElementRef<HTMLElement>,\n        @Inject(DOCUMENT) document: any,\n        private _focusMonitor: FocusMonitor,\n        @Inject(MC_DROPDOWN_PANEL) @Optional() private _parentDropdownPanel?: McDropdownPanel<McDropdownItem>) {\n        super();\n\n        if (_focusMonitor) {\n            // Start monitoring the element so it gets the appropriate focused classes. We want\n            // to show the focus style for dropdown items only when the focus was not caused by a\n            // mouse or touch interaction.\n            _focusMonitor.monitor(this._elementRef.nativeElement, false);\n        }\n\n        if (_parentDropdownPanel && _parentDropdownPanel.addItem) {\n            _parentDropdownPanel.addItem(this);\n        }\n\n        this._document = document;\n    }\n\n    /** Focuses the dropdown item. */\n    focus(origin: FocusOrigin = 'program'): void {\n        if (this._focusMonitor) {\n            this._focusMonitor.focusVia(this._getHostElement(), origin);\n        } else {\n            this._getHostElement().focus();\n        }\n    }\n\n    ngOnDestroy() {\n        if (this._focusMonitor) {\n            this._focusMonitor.stopMonitoring(this._elementRef.nativeElement);\n        }\n\n        if (this._parentDropdownPanel && this._parentDropdownPanel.removeItem) {\n            this._parentDropdownPanel.removeItem(this);\n        }\n    }\n\n    /** Used to set the `tabindex`. */\n    _getTabIndex(): string {\n        return this.disabled ? '-1' : '0';\n    }\n\n    /** Returns the host DOM element. */\n    _getHostElement(): HTMLElement {\n        return this._elementRef.nativeElement;\n    }\n\n    /** Prevents the default element actions if it is disabled. */\n    _checkDisabled(event: Event): void {\n        if (this.disabled) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n    }\n\n    /** Gets the label to be used when determining whether the option should be focused. */\n    getLabel(): string {\n        const element: HTMLElement = this._elementRef.nativeElement;\n        // tslint:disable-next-line:no-magic-numbers\n        const textNodeType = this._document ? this._document.TEXT_NODE : 3;\n        let output = '';\n\n        if (element.childNodes) {\n            const length = element.childNodes.length;\n\n            // Go through all the top-level text nodes and extract their text.\n            // We skip anything that's not a text node to prevent the text from\n            // being thrown off by something like an icon.\n            for (let i = 0; i < length; i++) {\n                if (element.childNodes[i].nodeType === textNodeType) {\n                    output += element.childNodes[i].textContent;\n                }\n            }\n        }\n\n        return output.trim();\n    }\n}\n","import {\n    trigger,\n    state,\n    style,\n    animate,\n    transition,\n    query,\n    group,\n    AnimationTriggerMetadata\n} from '@angular/animations';\n\n\n/**\n * Animations used by the mc-dropdown component.\n * Animation duration and timing values are based on:\n * https://material.io/guidelines/components/menus.html#menus-usage\n * @docs-private\n */\nexport const mcDropdownAnimations: {\n    readonly transformDropdown: AnimationTriggerMetadata;\n    readonly fadeInItems: AnimationTriggerMetadata;\n} = {\n    /**\n     * This animation controls the dropdown panel's entry and exit from the page.\n     *\n     * When the dropdown panel is added to the DOM, it scales in and fades in its border.\n     *\n     * When the dropdown panel is removed from the DOM, it simply fades out after a brief\n     * delay to display the ripple.\n     */\n    transformDropdown: trigger('transformDropdown', [\n        state('void', style({\n            opacity: 0,\n            transform: 'scale(0.8)'\n        })),\n        transition('void => enter', group([\n            query('.mc-dropdown__content', animate('50ms linear', style({opacity: 1}))),\n            animate('50ms cubic-bezier(0, 0, 0.2, 1)', style({transform: 'scale(1)'}))\n        ])),\n        transition('* => void', animate('50ms 25ms linear', style({opacity: 0})))\n    ]),\n\n\n    /**\n     * This animation fades in the background color and content of the dropdown panel\n     * after its containing element is scaled in.\n     */\n    fadeInItems: trigger('fadeInItems', [\n        // now. Remove next time we do breaking changes.\n        state('showing', style({opacity: 1})),\n        transition('void => *', [\n            style({opacity: 0}),\n            animate('200ms 60ms cubic-bezier(0.55, 0, 0.55, 0.2)')\n        ])\n    ])\n};\n\nexport const fadeInItems = mcDropdownAnimations.fadeInItems;\n\nexport const transformDropdown = mcDropdownAnimations.transformDropdown;\n","import { AnimationEvent } from '@angular/animations';\nimport {\n    AfterContentInit,\n    ChangeDetectionStrategy,\n    Component,\n    ContentChild,\n    ContentChildren,\n    ElementRef,\n    EventEmitter,\n    Inject,\n    InjectionToken,\n    Input,\n    NgZone,\n    OnDestroy,\n    Output,\n    TemplateRef,\n    QueryList,\n    ViewChild,\n    ViewEncapsulation,\n    OnInit\n} from '@angular/core';\nimport { FocusKeyManager, FocusOrigin } from '@ptsecurity/cdk/a11y';\nimport { Direction } from '@ptsecurity/cdk/bidi';\nimport { coerceBooleanProperty } from '@ptsecurity/cdk/coercion';\nimport { ESCAPE, DOWN_ARROW, UP_ARROW } from '@ptsecurity/cdk/keycodes';\nimport { Subject, Subscription } from 'rxjs';\nimport { take } from 'rxjs/operators';\n\nimport { mcDropdownAnimations } from './dropdown-animations';\nimport { McDropdownContent } from './dropdown-content';\nimport { throwMcDropdownInvalidPositionX, throwMcDropdownInvalidPositionY } from './dropdown-errors';\nimport { McDropdownItem } from './dropdown-item';\nimport { MC_DROPDOWN_PANEL, McDropdownPanel } from './dropdown-panel';\nimport { DropdownPositionX, DropdownPositionY } from './dropdown-positions';\n\n\n/** Default `mc-dropdown` options that can be overridden. */\n// tslint:disable-next-line:interface-name\nexport interface McDropdownDefaultOptions {\n    /** The x-axis position of the dropdown. */\n    xPosition: DropdownPositionX;\n\n    /** The y-axis position of the dropdown. */\n    yPosition: DropdownPositionY;\n\n    /** Whether the dropdown should overlap the dropdown trigger. */\n    overlapTrigger: boolean;\n\n    /** Class to be applied to the dropdown's backdrop. */\n    backdropClass: string;\n\n    /** Whether the dropdown has a backdrop. */\n    hasBackdrop?: boolean;\n}\n\n/** Injection token to be used to override the default options for `mc-dropdown`. */\nexport const MC_DROPDOWN_DEFAULT_OPTIONS =\n    new InjectionToken<McDropdownDefaultOptions>('mc-dropdown-default-options', {\n        providedIn: 'root',\n        factory: MC_DROPDOWN_DEFAULT_OPTIONS_FACTORY\n    });\n\n/** @docs-private */\nexport function MC_DROPDOWN_DEFAULT_OPTIONS_FACTORY(): McDropdownDefaultOptions {\n    return {\n        overlapTrigger: false,\n        xPosition: 'after',\n        yPosition: 'below',\n        backdropClass: 'cdk-overlay-transparent-backdrop'\n    };\n}\n\n@Component({\n    selector: 'mc-dropdown',\n    templateUrl: 'dropdown.html',\n    styleUrls: ['dropdown.css'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n    exportAs: 'mcDropdown',\n    animations: [\n        mcDropdownAnimations.transformDropdown,\n        mcDropdownAnimations.fadeInItems\n    ],\n    providers: [\n        {provide: MC_DROPDOWN_PANEL, useExisting: McDropdown}\n    ]\n})\nexport class McDropdown implements AfterContentInit, McDropdownPanel<McDropdownItem>, OnInit, OnDestroy {\n\n    /** Position of the dropdown in the X axis. */\n    @Input()\n    get xPosition(): DropdownPositionX { return this._xPosition; }\n    set xPosition(value: DropdownPositionX) {\n        if (value !== 'before' && value !== 'after') {\n            throwMcDropdownInvalidPositionX();\n        }\n        this._xPosition = value;\n        this.setPositionClasses();\n    }\n\n    /** Position of the dropdown in the Y axis. */\n    @Input()\n    get yPosition(): DropdownPositionY { return this._yPosition; }\n    set yPosition(value: DropdownPositionY) {\n        if (value !== 'above' && value !== 'below') {\n            throwMcDropdownInvalidPositionY();\n        }\n        this._yPosition = value;\n        this.setPositionClasses();\n    }\n\n    /** Whether the dropdown should overlap its trigger. */\n    @Input()\n    get overlapTrigger(): boolean { return this._overlapTrigger; }\n    set overlapTrigger(value: boolean) {\n        this._overlapTrigger = coerceBooleanProperty(value);\n    }\n\n    /** Whether the dropdown has a backdrop. */\n    @Input()\n    get hasBackdrop(): boolean | undefined { return this._hasBackdrop; }\n    set hasBackdrop(value: boolean | undefined) {\n        this._hasBackdrop = coerceBooleanProperty(value);\n    }\n\n    /**\n     * This method takes classes set on the host mc-dropdown element and applies them on the\n     * dropdown template that displays in the overlay container.  Otherwise, it's difficult\n     * to style the containing dropdown from outside the component.\n     * @param classes list of class names\n     */\n    @Input('class')\n    set panelClass(classes: string) {\n        if (classes && classes.length) {\n            this._classList = classes.split(' ').reduce((obj: any, className: string) => {\n                obj[className] = true;\n\n                return obj;\n            }, {});\n\n            this._elementRef.nativeElement.className = '';\n        }\n    }\n\n    /** Config object to be passed into the dropdown's ngClass */\n    _classList: {[key: string]: boolean} = {};\n\n    /** Current state of the panel animation. */\n    _panelAnimationState: 'void' | 'enter' = 'void';\n\n    /** Emits whenever an animation on the dropdown completes. */\n    _animationDone = new Subject<AnimationEvent>();\n\n    /** Whether the dropdown is animating. */\n    _isAnimating: boolean;\n\n    /** Layout direction of the dropdown. */\n    direction: Direction;\n\n    /** Class to be added to the backdrop element. */\n    @Input() backdropClass: string = this._defaultOptions.backdropClass;\n\n    /** @docs-private */\n    @ViewChild(TemplateRef) templateRef: TemplateRef<any>;\n\n    /**\n     * List of the items inside of a dropdown.\n     */\n    @ContentChildren(McDropdownItem) items: QueryList<McDropdownItem>;\n\n    /**\n     * Dropdown content that will be rendered lazily.\n     * @docs-private\n     */\n    @ContentChild(McDropdownContent) lazyContent: McDropdownContent;\n\n    /** Event emitted when the dropdown is closed. */\n    @Output() readonly closed: EventEmitter<void | 'click' | 'keydown' | 'tab'> =\n        new EventEmitter<void | 'click' | 'keydown' | 'tab'>();\n\n    private _keyManager: FocusKeyManager<McDropdownItem>;\n    private _xPosition: DropdownPositionX = this._defaultOptions.xPosition;\n    private _yPosition: DropdownPositionY = this._defaultOptions.yPosition;\n\n    /** Dropdown items inside the current dropdown. */\n    private _items: McDropdownItem[] = [];\n\n    /** Emits whenever the amount of dropdown items changes. */\n    private _itemChanges = new Subject<McDropdownItem[]>();\n\n    /** Subscription to tab events on the dropdown panel */\n    private _tabSubscription = Subscription.EMPTY;\n    private _overlapTrigger: boolean = this._defaultOptions.overlapTrigger;\n    private _hasBackdrop: boolean | undefined = this._defaultOptions.hasBackdrop;\n\n    constructor(\n        private _elementRef: ElementRef<HTMLElement>,\n        private _ngZone: NgZone,\n        @Inject(MC_DROPDOWN_DEFAULT_OPTIONS) private _defaultOptions: McDropdownDefaultOptions) { }\n\n    ngOnInit() {\n        this.setPositionClasses();\n    }\n\n    ngAfterContentInit() {\n        this._keyManager = new FocusKeyManager<McDropdownItem>(this.items).withWrap().withTypeAhead();\n        this._tabSubscription = this._keyManager.tabOut.subscribe(() => this.closed.emit('tab'));\n    }\n\n    ngOnDestroy() {\n        this._tabSubscription.unsubscribe();\n        this.closed.complete();\n    }\n\n    /** Handle a keyboard event from the dropdown, delegating to the appropriate action. */\n    _handleKeydown(event: KeyboardEvent) {\n        // tslint:disable-next-line:deprecation\n        const keyCode = event.keyCode;\n\n        switch (keyCode) {\n            case ESCAPE:\n                this.closed.emit('keydown');\n                break;\n            case UP_ARROW:\n            case DOWN_ARROW:\n                this._keyManager.setFocusOrigin('keyboard');\n                this._keyManager.onKeydown(event);\n                break;\n              default:\n                this._keyManager.onKeydown(event);\n        }\n    }\n\n    /**\n     * Focus the first item in the dropdown.\n     * @param origin Action from which the focus originated. Used to set the correct styling.\n     */\n    focusFirstItem(origin: FocusOrigin = 'program'): void {\n        // When the content is rendered lazily, it takes a bit before the items are inside the DOM.\n        if (this.lazyContent) {\n            this._ngZone.onStable.asObservable()\n                .pipe(take(1))\n                .subscribe(() => this._keyManager.setFocusOrigin(origin).setFirstItemActive());\n        } else {\n            this._keyManager.setFocusOrigin(origin).setFirstItemActive();\n        }\n    }\n\n    /**\n     * Resets the active item in the dropdown. This is used when the dropdown is opened, allowing\n     * the user to start from the first option when pressing the down arrow.\n     */\n    resetActiveItem() {\n        this._keyManager.setActiveItem(-1);\n    }\n\n    /**\n     * Registers a dropdown item with the dropdown.\n     * @docs-private\n     */\n    addItem(item: McDropdownItem) {\n        // We register the items through this method, rather than picking them up through\n        // `ContentChildren`, because we need the items to be picked up by their closest\n        // `mc-dropdown` ancestor. If we used `@ContentChildren(McDropdownItem, {descendants: true})`,\n        // all descendant items will bleed into the top-level dropdown in the case where the consumer\n        // has `mc-dropdown` instances nested inside each other.\n        if (this._items.indexOf(item) === -1) {\n            this._items.push(item);\n            this._itemChanges.next(this._items);\n        }\n    }\n\n    /**\n     * Removes an item from the dropdown.\n     * @docs-private\n     */\n    removeItem(item: McDropdownItem) {\n        const index = this._items.indexOf(item);\n\n        if (this._items.indexOf(item) > -1) {\n            this._items.splice(index, 1);\n            this._itemChanges.next(this._items);\n        }\n    }\n\n    /**\n     * Adds classes to the dropdown panel based on its position. Can be used by\n     * consumers to add specific styling based on the position.\n     * @param posX Position of the dropdown along the x axis.\n     * @param posY Position of the dropdown along the y axis.\n     * @docs-private\n     */\n    setPositionClasses(posX: DropdownPositionX = this.xPosition, posY: DropdownPositionY = this.yPosition) {\n        const classes = this._classList;\n        classes['mc-dropdown-before'] = posX === 'before';\n        classes['mc-dropdown-after'] = posX === 'after';\n        classes['mc-dropdown-above'] = posY === 'above';\n        classes['mc-dropdown-below'] = posY === 'below';\n    }\n\n    /** Starts the enter animation. */\n    _startAnimation() {\n        this._panelAnimationState = 'enter';\n    }\n\n    /** Resets the panel animation to its initial state. */\n    _resetAnimation() {\n        this._panelAnimationState = 'void';\n    }\n\n    /** Callback that is invoked when the panel animation completes. */\n    _onAnimationDone(event: AnimationEvent) {\n        this._animationDone.next(event);\n        this._isAnimating = false;\n\n        // Scroll the content element to the top once the animation is done. This is necessary, because\n        // we move focus to the first item while it's still being animated, which can throw the browser\n        // off when it determines the scroll position. Alternatively we can move focus when the\n        // animation is done, however moving focus asynchronously will interrupt screen readers\n        // which are in the process of reading out the dropdown already. We take the `element` from\n        // the `event` since we can't use a `ViewChild` to access the pane.\n        if (event.toState === 'enter' && this._keyManager.activeItemIndex === 0) {\n            event.element.scrollTop = 0;\n        }\n    }\n}\n","import {\n    AfterContentInit,\n    Directive,\n    ElementRef,\n    EventEmitter,\n    Inject,\n    InjectionToken,\n    Input,\n    OnDestroy, OnInit,\n    Optional,\n    Output,\n    ViewContainerRef\n} from '@angular/core';\nimport { FocusMonitor, FocusOrigin } from '@ptsecurity/cdk/a11y';\nimport { Direction, Directionality } from '@ptsecurity/cdk/bidi';\nimport {\n    FlexibleConnectedPositionStrategy,\n    HorizontalConnectionPos,\n    Overlay,\n    OverlayConfig,\n    OverlayRef,\n    VerticalConnectionPos,\n    IScrollStrategy\n} from '@ptsecurity/cdk/overlay';\nimport { TemplatePortal } from '@ptsecurity/cdk/portal';\nimport { merge, Subscription } from 'rxjs';\nimport { filter, take, takeUntil } from 'rxjs/operators';\n\nimport { throwMcDropdownMissingError } from './dropdown-errors';\nimport { McDropdownPanel } from './dropdown-panel';\nimport { McDropdown } from './dropdown.component';\n\n\n/** Injection token that determines the scroll handling while the dropdown is open. */\nexport const MC_DROPDOWN_SCROLL_STRATEGY =\n    new InjectionToken<() => IScrollStrategy>('mc-dropdown-scroll-strategy');\n\n/** @docs-private */\nexport function MC_DROPDOWN_SCROLL_STRATEGY_FACTORY(overlay: Overlay): () => IScrollStrategy {\n    return () => overlay.scrollStrategies.reposition();\n}\n\n/** @docs-private */\nexport const MC_DROPDOWN_SCROLL_STRATEGY_FACTORY_PROVIDER = {\n    provide: MC_DROPDOWN_SCROLL_STRATEGY,\n    deps: [Overlay],\n    useFactory: MC_DROPDOWN_SCROLL_STRATEGY_FACTORY\n};\n\n/**\n * This directive is intended to be used in conjunction with an mc-dropdown tag.  It is\n * responsible for toggling the display of the provided dropdown instance.\n */\n@Directive({\n    selector: `[mcDropdownTriggerFor]`,\n    host: {\n        '(touchstart)': '_openedBy = \"touch\"',\n        '(click)': 'toggle()'\n    },\n    exportAs: 'mcDropdownTrigger'\n})\nexport class McDropdownTrigger implements OnInit, AfterContentInit, OnDestroy {\n\n    /** Whether the dropdown is open. */\n    get opened(): boolean {\n        return this._opened;\n    }\n\n    /** The text direction of the containing app. */\n    get dir(): Direction {\n        return this._dir && this._dir.value === 'rtl' ? 'rtl' : 'ltr';\n    }\n\n    // Tracking input type is necessary so it's possible to only auto-focus\n    // the first item of the list when the dropdown is opened via the keyboard\n    _openedBy: 'mouse' | 'touch' | null = null;\n\n    /** References the dropdown instance that the trigger is associated with. */\n    @Input('mcDropdownTriggerFor') dropdown: McDropdownPanel;\n\n    /** Data to be passed along to any lazily-rendered content. */\n    @Input('mcDropdownTriggerData') data: any;\n\n    /** Event emitted when the associated dropdown is opened. */\n    @Output() readonly dropdownOpened: EventEmitter<void> = new EventEmitter<void>();\n\n    /** Event emitted when the associated dropdown is closed. */\n    @Output() readonly dropdownClosed: EventEmitter<void> = new EventEmitter<void>();\n\n    private _portal: TemplatePortal;\n    private _overlayRef: OverlayRef | null = null;\n    private _opened: boolean = false;\n    private _closeSubscription = Subscription.EMPTY;\n    private _hoverSubscription = Subscription.EMPTY;\n\n    constructor(private _overlay: Overlay,\n                private _element: ElementRef<HTMLElement>,\n                private _viewContainerRef: ViewContainerRef,\n                @Inject(MC_DROPDOWN_SCROLL_STRATEGY) private _scrollStrategy: any,\n                @Optional() private _dir: Directionality,\n                private _focusMonitor?: FocusMonitor) {}\n\n    ngOnInit(): void {\n        this.dropdown.closed = this.dropdown.closed || new EventEmitter<void | 'click' | 'keydown' | 'tab'>();\n    }\n\n    ngAfterContentInit() {\n        this._check();\n\n        this.dropdown.closed.asObservable().subscribe(() => {\n            this._destroy();\n        });\n    }\n\n    ngOnDestroy() {\n        if (this._overlayRef) {\n            this._overlayRef.dispose();\n            this._overlayRef = null;\n        }\n\n        this._cleanUpSubscriptions();\n    }\n\n    /** Toggles the dropdown between the open and closed states. */\n    toggle(): void {\n        // tslint:disable-next-line:no-void-expression\n        return this._opened ? this.close() : this.open();\n    }\n\n    /** Opens the dropdown. */\n    open(): void {\n        if (this._opened) {\n            return;\n        }\n\n        this._check();\n\n        const overlayRef = this._createOverlay();\n        this._setPosition(overlayRef.getConfig().positionStrategy as FlexibleConnectedPositionStrategy);\n        overlayRef.attach(this._portal);\n\n        if (this.dropdown.lazyContent) {\n            this.dropdown.lazyContent.attach(this.data);\n        }\n\n        this._closeSubscription = this._closingActions().subscribe(() => this.close());\n        this._init();\n\n        if (this.dropdown instanceof McDropdown) {\n            this.dropdown._startAnimation();\n        }\n    }\n\n    /** Closes the dropdown. */\n    close(): void {\n        this.dropdown.closed.emit();\n    }\n\n    /**\n     * Focuses the dropdown trigger.\n     * @param origin Source of the dropdown trigger's focus.\n     */\n    focus(origin: FocusOrigin = 'program') {\n        if (this._focusMonitor) {\n            this._focusMonitor.focusVia(this._element.nativeElement, origin);\n        } else {\n            this._element.nativeElement.focus();\n        }\n    }\n\n    /** Closes the dropdown and does the necessary cleanup. */\n    private _destroy() {\n        if (!this._overlayRef || !this.opened) {\n            return;\n        }\n\n        const dropdown = this.dropdown;\n\n        this._closeSubscription.unsubscribe();\n        this._overlayRef.detach();\n\n        if (dropdown instanceof McDropdown) {\n            dropdown._resetAnimation();\n\n            if (dropdown.lazyContent) {\n                // Wait for the exit animation to finish before detaching the content.\n                dropdown._animationDone\n                    .pipe(\n                        filter((event) => event.toState === 'void'),\n                        take(1),\n                        // Interrupt if the content got re-attached.\n                        takeUntil(dropdown.lazyContent._attached)\n                    )\n                    .subscribe(() => dropdown.lazyContent.detach(), undefined, () => {\n                        // No matter whether the content got re-attached, reset the dropdown.\n                        this._reset();\n                    });\n            } else {\n                this._reset();\n            }\n        } else {\n            this._reset();\n\n            if (dropdown.lazyContent) {\n                dropdown.lazyContent.detach();\n            }\n        }\n    }\n\n    /**\n     * This method sets the dropdown state to open and focuses the first item if\n     * the dropdown was opened via the keyboard.\n     */\n    private _init(): void {\n        this.dropdown.direction = this.dir;\n        this._setIsOpened(true);\n        this.dropdown.focusFirstItem(this._openedBy || 'program');\n    }\n\n    /**\n     * This method resets the dropdown when it's closed, most importantly restoring\n     * focus to the dropdown trigger if the dropdown was opened via the keyboard.\n     */\n    private _reset(): void {\n        this._setIsOpened(false);\n\n        // We should reset focus if the user is navigating using a keyboard or\n        // if we have a top-level trigger which might cause focus to be lost\n        // when clicking on the backdrop.\n        if (!this._openedBy) {\n            // Note that the focus style will show up both for `program` and\n            // `keyboard` so we don't have to specify which one it is.\n            this.focus();\n        } else {\n            this.focus(this._openedBy);\n        }\n\n        this._openedBy = null;\n    }\n\n    // set state rather than toggle to support triggers sharing a dropdown\n    private _setIsOpened(isOpen: boolean): void {\n        this._opened = isOpen;\n        // tslint:disable-next-line:no-void-expression\n        this._opened ? this.dropdownOpened.emit() : this.dropdownClosed.emit();\n    }\n\n    /**\n     * This method checks that a valid instance of Dropdown has been passed into\n     * mcDropdownTriggerFor. If not, an exception is thrown.\n     */\n    private _check() {\n        if (!this.dropdown) {\n            throwMcDropdownMissingError();\n        }\n    }\n\n    /**\n     * This method creates the overlay from the provided dropdown's template and saves its\n     * OverlayRef so that it can be attached to the DOM when open is called.\n     */\n    private _createOverlay(): OverlayRef {\n        if (!this._overlayRef) {\n            this._portal = new TemplatePortal(this.dropdown.templateRef, this._viewContainerRef);\n            const config = this._getOverlayConfig();\n            this._subscribeToPositions(config.positionStrategy as FlexibleConnectedPositionStrategy);\n            this._overlayRef = this._overlay.create(config);\n\n            // Consume the `keydownEvents` in order to prevent them from going to another overlay.\n            // Ideally we'd also have our keyboard event logic in here, however doing so will\n            // break anybody that may have implemented the `McDropdownPanel` themselves.\n            this._overlayRef.keydownEvents().subscribe();\n        }\n\n        return this._overlayRef;\n    }\n\n    /**\n     * This method builds the configuration object needed to create the overlay, the OverlayState.\n     * @returns OverlayConfig\n     */\n    private _getOverlayConfig(): OverlayConfig {\n        return new OverlayConfig({\n            positionStrategy: this._overlay.position()\n                .flexibleConnectedTo(this._element)\n                .withLockedPosition()\n                .withTransformOriginOn('.mc-dropdown__panel'),\n            hasBackdrop: this.dropdown.hasBackdrop === null || this.dropdown.hasBackdrop === undefined\n                ? true\n                : this.dropdown.hasBackdrop,\n            backdropClass: this.dropdown.backdropClass || 'cdk-overlay-transparent-backdrop',\n            scrollStrategy: this._scrollStrategy(),\n            direction: this._dir\n        });\n    }\n\n    /**\n     * Listens to changes in the position of the overlay and sets the correct classes\n     * on the dropdown based on the new position. This ensures the animation origin is always\n     * correct, even if a fallback position is used for the overlay.\n     */\n    private _subscribeToPositions(position: FlexibleConnectedPositionStrategy): void {\n        if (this.dropdown.setPositionClasses) {\n            // todo possibly we should not recompute positions there\n            /*position.positionChanges.subscribe((change) => {\n                const posX: DropdownPositionX = change.connectionPair.overlayX === 'start' ? 'after' : 'before';\n                const posY: DropdownPositionY = change.connectionPair.overlayY === 'top' ? 'below' : 'above';\n\n                this.dropdown.setPositionClasses!(posX, posY);\n            });*/\n            position.positionChanges.subscribe(() => {\n                this.dropdown.setPositionClasses!(this.dropdown.xPosition, this.dropdown.yPosition);\n            });\n        }\n    }\n\n    /**\n     * Sets the appropriate positions on a position strategy\n     * so the overlay connects with the trigger correctly.\n     * @param positionStrategy Strategy whose position to update.\n     */\n    private _setPosition(positionStrategy: FlexibleConnectedPositionStrategy) {\n        const [originX, originFallbackX]: HorizontalConnectionPos[] =\n            this.dropdown.xPosition === 'before' ? ['end', 'start'] : ['start', 'end'];\n\n        const [overlayY, overlayFallbackY]: VerticalConnectionPos[] =\n            this.dropdown.yPosition === 'above' ? ['bottom', 'top'] : ['top', 'bottom'];\n\n        let [originY, originFallbackY] = [overlayY, overlayFallbackY];\n        const [overlayX, overlayFallbackX] = [originX, originFallbackX];\n        const offsetY = 0;\n\n        if (!this.dropdown.overlapTrigger) {\n            originY = overlayY === 'top' ? 'bottom' : 'top';\n            originFallbackY = overlayFallbackY === 'top' ? 'bottom' : 'top';\n        }\n\n        positionStrategy.withPositions([\n            {originX, originY, overlayX, overlayY, offsetY},\n            {originX: originFallbackX, originY, overlayX: overlayFallbackX, overlayY, offsetY},\n            {\n                originX,\n                originY: originFallbackY,\n                overlayX,\n                overlayY: overlayFallbackY,\n                offsetY: -offsetY\n            },\n            {\n                originX: originFallbackX,\n                originY: originFallbackY,\n                overlayX: overlayFallbackX,\n                overlayY: overlayFallbackY,\n                offsetY: -offsetY\n            }\n        ]);\n    }\n\n    /** Cleans up the active subscriptions. */\n    private _cleanUpSubscriptions(): void {\n        this._closeSubscription.unsubscribe();\n        this._hoverSubscription.unsubscribe();\n    }\n\n    /** Returns a stream that emits whenever an action that should close the dropdown occurs. */\n    private _closingActions() {\n        const backdrop = this._overlayRef!.backdropClick();\n        const detachments = this._overlayRef!.detachments();\n\n        return merge(backdrop, detachments);\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { OverlayModule } from '@ptsecurity/cdk/overlay';\n\nimport { McDropdownContent } from './dropdown-content';\nimport { McDropdownItem } from './dropdown-item';\nimport { MC_DROPDOWN_SCROLL_STRATEGY_FACTORY_PROVIDER, McDropdownTrigger } from './dropdown-trigger';\nimport { McDropdown } from './dropdown.component';\n\n\n@NgModule({\n    imports: [\n        CommonModule,\n        OverlayModule\n    ],\n    exports: [McDropdown, McDropdownItem, McDropdownTrigger, McDropdownContent],\n    declarations: [McDropdown, McDropdownItem, McDropdownTrigger, McDropdownContent],\n    providers: [MC_DROPDOWN_SCROLL_STRATEGY_FACTORY_PROVIDER]\n})\nexport class McDropdownModule {}\n","import { Component } from '@angular/core';\n\n\n@Component({\n    selector: 'mc-cleaner',\n    template: '<i class=\"mc-icon_light\" mc-icon=\"mc-close-M_16\" color=\"second\"></i>'\n})\nexport class McCleaner {\n}\n","import { NgControl } from '@angular/forms';\nimport { Observable } from 'rxjs';\n\n\n/** An interface which allows a control to work inside of a `MсFormField`. */\nexport abstract class McFormFieldControl<T> {\n    /** The value of the control. */\n    value: T | null;\n\n    /**\n     * Stream that emits whenever the state of the control changes such that the parent `MсFormField`\n     * needs to run change detection.\n     */\n    readonly stateChanges: Observable<void>;\n\n    /** The element ID for this control. */\n    readonly id: string;\n\n    /** The placeholder for this control. */\n    readonly placeholder: string;\n\n    /** Gets the NgControl for this control. */\n    readonly ngControl: NgControl | null;\n\n    /** Whether the control is focused. */\n    readonly focused: boolean;\n\n    /** Whether the control is empty. */\n    readonly empty: boolean;\n\n    /** Whether the control is required. */\n    readonly required: boolean;\n\n    /** Whether the control is disabled. */\n    readonly disabled: boolean;\n\n    /** Whether the control is in an error state. */\n    readonly errorState: boolean;\n\n    /**\n     * An optional name for the control type that can be used to distinguish `mc-form-field` elements\n     * based on their control type. The form field will add a class,\n     * `mc-form-field-type-{{controlType}}` to its root element.\n     */\n    readonly controlType?: string;\n\n    /** Handles a click on the control's container. */\n    abstract onContainerClick(event: MouseEvent): void;\n}\n","import { Observable } from 'rxjs';\n\n\n/** An interface which allows a control to work inside of a `MсFormField`. */\nexport abstract class McFormFieldNumberControl<T> {\n    /** The value of the control. */\n    value: T | null;\n\n    /**\n     * Stream that emits whenever the state of the control changes such that the parent `MсFormField`\n     * needs to run change detection.\n     */\n    readonly stateChanges: Observable<void>;\n\n    /** the number step */\n    step: number;\n\n    /** the number big step */\n    bigStep: number;\n\n    /** Whether the control is focused. */\n    readonly focused: boolean;\n\n    /** Handles step up and down */\n    abstract stepUp(step: number): void;\n\n    abstract stepDown(step: number): void;\n}\n","import { Directive, Input } from '@angular/core';\n\n\nlet nextUniqueId = 0;\n\n@Directive({\n    selector: 'mc-hint',\n    host: {\n        class: 'mc-hint',\n        '[attr.id]': 'id'\n    }\n})\nexport class McHint {\n    @Input() id: string = `mc-hint-${nextUniqueId++}`;\n}\n","import { Directive } from '@angular/core';\n\n\n@Directive({\n    selector: '[mcPrefix]'\n})\nexport class McPrefix {\n}\n","import { Component, EventEmitter, Output } from '@angular/core';\n\n\n@Component({\n    selector: 'mc-stepper',\n    template: `\n        <i class=\"mc mc-icon mc-icon_light mc-second mc-stepper-step-up mc-angle-L_16\"\n           (mousedown)=\"onStepUp($event)\">\n        </i>\n        <i class=\"mc mc-icon mc-icon_light mc-second mc-stepper-step-down mc-angle-L_16\"\n           (mousedown)=\"onStepDown($event)\">\n        </i>\n    `\n})\nexport class McStepper {\n    @Output()\n    readonly stepUp: EventEmitter<void> = new EventEmitter<void>();\n    @Output()\n    readonly stepDown: EventEmitter<void> = new EventEmitter<void>();\n\n    onStepUp($event: MouseEvent) {\n        this.stepUp.emit();\n        $event.preventDefault();\n    }\n\n    onStepDown($event: MouseEvent) {\n        this.stepDown.emit();\n        $event.preventDefault();\n    }\n}\n","import { Directive } from '@angular/core';\n\n\n@Directive({\n    selector: '[mcSuffix]'\n})\nexport class McSuffix {\n}\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","\nexport function isBoolean(val: any): val is boolean { return typeof val === 'boolean'; }\n\nexport function toBoolean(value: any): boolean {\n    return value != null && `${value}` !== 'false';\n}\n","import { NgModule, InjectionToken, Optional, Inject, isDevMode } from '@angular/core';\nimport { BidiModule } from '@ptsecurity/cdk/bidi';\n\n\n// Injection token that configures whether the Mosaic sanity checks are enabled.\nexport const MC_SANITY_CHECKS = new InjectionToken<boolean>('mc-sanity-checks', {\n    providedIn: 'root',\n    factory: MC_SANITY_CHECKS_FACTORY\n});\n\nexport function MC_SANITY_CHECKS_FACTORY(): boolean {\n    return true;\n}\n\n/**\n * Module that captures anything that should be loaded and/or run for *all* Mosaic\n * components. This includes Bidi, etc.\n *\n * This module should be imported to each top-level component module (e.g., MatTabsModule).\n */\n@NgModule({\n    imports: [ BidiModule ],\n    exports: [ BidiModule ]\n})\nexport class McCommonModule {\n    // Whether we've done the global sanity checks (e.g. a theme is loaded, there is a doctype).\n    private _hasDoneGlobalChecks = false;\n\n    // Reference to the global `document` object.\n    private _document = typeof document === 'object' && document ? document : null;\n\n    // Reference to the global 'window' object.\n    private _window = typeof window === 'object' && window ? window : null;\n\n    constructor(@Optional() @Inject(MC_SANITY_CHECKS) private _sanityChecksEnabled: boolean) {\n        if (this._areChecksEnabled() && !this._hasDoneGlobalChecks) {\n            this._checkDoctypeIsDefined();\n            this._checkThemeIsPresent();\n            this._hasDoneGlobalChecks = true;\n        }\n    }\n\n    // Whether any sanity checks are enabled\n    private _areChecksEnabled(): boolean {\n        return this._sanityChecksEnabled && isDevMode() && !this._isTestEnv();\n    }\n\n    // Whether the code is running in tests.\n    private _isTestEnv() {\n        // tslint:disable-next-line\n        return this._window && (this._window['__karma__'] || this._window['jasmine']);\n    }\n\n    private _checkDoctypeIsDefined(): void {\n        if (this._document && !this._document.doctype) {\n            console.warn(\n                'Current document does not have a doctype. This may cause ' +\n                'some Mosaic components not to behave as expected.'\n            );\n        }\n    }\n\n    private _checkThemeIsPresent(): void {\n        if (this._document && typeof getComputedStyle === 'function') {\n            const testElement = this._document.createElement('div');\n\n            testElement.classList.add('mc-theme-loaded-marker');\n            this._document.body.appendChild(testElement);\n\n            const computedStyle = getComputedStyle(testElement);\n\n            // In some situations, the computed style of the test element can be null. For example in\n            // Firefox, the computed style is null if an application is running inside of a hidden iframe.\n            // See: https://bugzilla.mozilla.org/show_bug.cgi?id=548397\n            if (computedStyle && computedStyle.display !== 'none') {\n                console.warn(\n                    'Could not find Mosaic core theme. Most Mosaic ' +\n                    'components may not work as expected. For more info refer ' +\n                    'to the theming guide: link there'\n                );\n            }\n\n            this._document.body.removeChild(testElement);\n        }\n    }\n}\n","import { coerceBooleanProperty } from '@ptsecurity/cdk/coercion';\n\nimport { Constructor } from './constructor';\n\n\nexport interface CanDisable {\n    disabled: boolean;\n}\n\n/** @docs-private */\nexport type CanDisableCtor = Constructor<CanDisable>;\n\n// Mixin to augment a directive with a `disabled` property.\nexport function mixinDisabled<T extends Constructor<{}>>(base: T): CanDisableCtor & T {\n    return class extends base {\n        private _disabled: boolean = false;\n\n        get disabled() {\n            return this._disabled;\n        }\n\n        set disabled(value: any) {\n            this._disabled = coerceBooleanProperty(value);\n        }\n\n        constructor(...args: any[]) {\n            // tslint:disable-next-line\n            super(...args);\n        }\n    };\n}\n","import { ElementRef } from '@angular/core';\n\nimport { Constructor } from './constructor';\n\n\nexport interface CanColor {\n    color: ThemePalette;\n}\n\n/** @docs-private */\nexport type CanColorCtor = Constructor<CanColor>;\n\nexport interface HasElementRef {\n    _elementRef: ElementRef;\n}\n\nexport enum ThemePalette {\n    Primary = 'primary',\n    Second = 'second',\n    Error = 'error',\n    Default = 'second',\n    Empty = ''\n}\n\n/** Mixin to augment a directive with a `color` property. */\nexport function mixinColor<T extends Constructor<HasElementRef>>(\n    base: T,\n    defaultColor: ThemePalette = ThemePalette.Default\n): CanColorCtor & T {\n    return class extends base {\n\n        private _color: ThemePalette;\n\n        get color(): ThemePalette {\n            return this._color;\n        }\n\n        set color(value: ThemePalette) {\n            const colorPalette = value || defaultColor;\n\n            if (colorPalette !== this._color) {\n                if (this._color) {\n                    this._elementRef.nativeElement.classList.remove(`mc-${this._color}`);\n                }\n\n                if (colorPalette) {\n                    this._elementRef.nativeElement.classList.add(`mc-${colorPalette}`);\n                }\n\n                this._color = colorPalette;\n            }\n        }\n\n        constructor(...args: any[]) {\n            super(...args);\n\n            this.color = defaultColor;\n        }\n    };\n}\n\n","import { Constructor } from './constructor';\nimport { CanDisable } from './disabled';\n\n\nexport interface HasTabIndex {\n    tabIndex: number;\n}\n\nexport type HasTabIndexCtor = Constructor<HasTabIndex>;\n\n// Mixin to augment a directive with a `tabIndex` property.\nexport function mixinTabIndex<T extends Constructor<CanDisable>>(base: T, defaultTabIndex = 0)\n    : HasTabIndexCtor & T {\n    return class extends base {\n        private _tabIndex: number = defaultTabIndex;\n\n        get tabIndex(): number {\n            return this.disabled ? -1 : this._tabIndex;\n        }\n\n        set tabIndex(value: number) {\n            this._tabIndex = value != null ? value : defaultTabIndex;\n        }\n\n        constructor(...args: any[]) {\n            super(...args);\n        }\n    };\n}\n","import { FormControl, FormGroupDirective, NgControl, NgForm } from '@angular/forms';\nimport { Subject } from 'rxjs';\n\nimport { ErrorStateMatcher } from '../error/error-options';\n\nimport { Constructor } from './constructor';\n\n\n/** @docs-private */\nexport interface CanUpdateErrorState {\n\n    readonly stateChanges: Subject<void>;\n\n    errorState: boolean;\n    errorStateMatcher: ErrorStateMatcher;\n\n    updateErrorState();\n}\n\n/** @docs-private */\nexport type CanUpdateErrorStateCtor = Constructor<CanUpdateErrorState>;\n\n/** @docs-private */\nexport interface HasErrorState {\n    _parentFormGroup: FormGroupDirective;\n    _parentForm: NgForm;\n    _defaultErrorStateMatcher: ErrorStateMatcher;\n    ngControl: NgControl;\n}\n\n/**\n * Mixin to augment a directive with updateErrorState method.\n * For component with `errorState` and need to update `errorState`.\n */\nexport function mixinErrorState<T extends Constructor<HasErrorState>>(base: T)\n    : CanUpdateErrorStateCtor & T {\n    return class extends base {\n        /** Whether the component is in an error state. */\n        errorState: boolean = false;\n\n        /**\n         * Stream that emits whenever the state of the input changes such that the wrapping\n         * `MatFormField` needs to run change detection.\n         */\n        readonly stateChanges = new Subject<void>();\n\n        errorStateMatcher: ErrorStateMatcher;\n\n        constructor(...args: any[]) {\n            super(...args);\n        }\n\n        updateErrorState() {\n            const oldState = this.errorState;\n            const parent = this._parentFormGroup || this._parentForm;\n            const matcher = this.errorStateMatcher || this._defaultErrorStateMatcher;\n            const control = this.ngControl ? this.ngControl.control as FormControl : null;\n            const newState = matcher.isErrorState(control, parent);\n\n            if (newState !== oldState) {\n                this.errorState = newState;\n                this.stateChanges.next();\n            }\n        }\n    };\n}\n","import {\n    AfterViewChecked,\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    ElementRef,\n    EventEmitter,\n    Inject,\n    InjectionToken,\n    Input,\n    OnDestroy,\n    Optional,\n    Output,\n    QueryList,\n    ViewEncapsulation\n} from '@angular/core';\nimport { coerceBooleanProperty } from '@ptsecurity/cdk/coercion';\nimport { ENTER, SPACE } from '@ptsecurity/cdk/keycodes';\nimport { Subject } from 'rxjs';\n\nimport { McOptgroup } from './optgroup';\n\n\n/**\n * Option IDs need to be unique across components, so this counter exists outside of\n * the component definition.\n */\nlet _uniqueIdCounter = 0;\n\n/** Event object emitted by McOption when selected or deselected. */\nexport class McOptionSelectionChange {\n    constructor(\n        /** Reference to the option that emitted the event. */\n        public source: McOption,\n        /** Whether the change in the option's value was a result of a user action. */\n        public isUserInput = false) {\n    }\n}\n\n/**\n * Describes a parent component that manages a list of options.\n * Contains properties that the options can inherit.\n * @docs-private\n */\nexport interface IMcOptionParentComponent {\n    disableRipple?: boolean;\n    multiple?: boolean;\n}\n\n/**\n * Injection token used to provide the parent component to options.\n */\nexport const MC_OPTION_PARENT_COMPONENT =\n    new InjectionToken<IMcOptionParentComponent>('MC_OPTION_PARENT_COMPONENT');\n\n/**\n * Single option inside of a `<mat-select>` element.\n */\n@Component({\n    selector: 'mc-option',\n    exportAs: 'mcOption',\n    host: {\n        '[attr.tabindex]': '_getTabIndex()',\n        '[class.mc-selected]': 'selected',\n        '[class.mc-option-multiple]': 'multiple',\n        '[class.mc-active]': 'active',\n        '[id]': 'id',\n        '[class.mc-disabled]': 'disabled',\n        '(click)': '_selectViaInteraction()',\n        '(keydown)': '_handleKeydown($event)',\n        class: 'mc-option'\n    },\n    styleUrls: ['option.css'],\n    templateUrl: 'option.html',\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class McOption implements AfterViewChecked, OnDestroy {\n    /** Whether the wrapping component is in multiple selection mode. */\n    get multiple() {\n        return this._parent && this._parent.multiple;\n    }\n\n    /** The unique ID of the option. */\n    get id(): string {\n        return this._id;\n    }\n\n    /** Whether or not the option is currently selected. */\n    get selected(): boolean {\n        return this._selected;\n    }\n\n    /** The form value of the option. */\n    @Input() value: any;\n\n    /** Whether the option is disabled. */\n    @Input()\n    get disabled() {\n        return (this.group && this.group.disabled) || this._disabled;\n    }\n\n    set disabled(value: any) {\n        this._disabled = coerceBooleanProperty(value);\n    }\n\n    /** Whether ripples for the option are disabled. */\n    get disableRipple() {\n        return this._parent && this._parent.disableRipple;\n    }\n\n    /** Event emitted when the option is selected or deselected. */\n        // tslint:disable-next-line:no-output-on-prefix\n    @Output() readonly onSelectionChange = new EventEmitter<McOptionSelectionChange>();\n\n    /** Emits when the state of the option changes and any parents have to be notified. */\n    readonly _stateChanges = new Subject<void>();\n\n    private _selected = false;\n    private _active = false;\n    private _disabled = false;\n    private readonly _id = `mc-option-${_uniqueIdCounter++}`;\n    private _mostRecentViewValue = '';\n\n    constructor(\n        private readonly _element: ElementRef,\n        private readonly _changeDetectorRef: ChangeDetectorRef,\n        @Optional() @Inject(MC_OPTION_PARENT_COMPONENT) private readonly _parent: IMcOptionParentComponent,\n        @Optional() readonly group: McOptgroup) {\n    }\n\n    /**\n     * Whether or not the option is currently active and ready to be selected.\n     * An active option displays styles as if it is focused, but the\n     * focus is actually retained somewhere else. This comes in handy\n     * for components like autocomplete where focus must remain on the input.\n     */\n    get active(): boolean {\n        return this._active;\n    }\n\n    /**\n     * The displayed value of the option. It is necessary to show the selected option in the\n     * select's trigger.\n     */\n    get viewValue(): string {\n        // TODO(kara): Add input property alternative for node envs.\n        return (this._getHostElement().textContent || '').trim();\n    }\n\n    /** Selects the option. */\n    select(): void {\n        if (!this._selected) {\n            this._selected = true;\n            this._changeDetectorRef.markForCheck();\n            this._emitSelectionChangeEvent();\n        }\n    }\n\n    /** Deselects the option. */\n    deselect(): void {\n        if (this._selected) {\n            this._selected = false;\n            this._changeDetectorRef.markForCheck();\n            this._emitSelectionChangeEvent();\n        }\n    }\n\n    /** Sets focus onto this option. */\n    focus(): void {\n        const element = this._getHostElement();\n\n        if (typeof element.focus === 'function') {\n            element.focus();\n        }\n    }\n\n    /**\n     * This method sets display styles on the option to make it appear\n     * active. This is used by the ActiveDescendantKeyManager so key\n     * events will display the proper options as active on arrow key events.\n     */\n    setActiveStyles(): void {\n        if (!this._active) {\n            this._active = true;\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n\n    /**\n     * This method removes display styles on the option that made it appear\n     * active. This is used by the ActiveDescendantKeyManager so key\n     * events will display the proper options as active on arrow key events.\n     */\n    setInactiveStyles(): void {\n        if (this._active) {\n            this._active = false;\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n\n    /** Gets the label to be used when determining whether the option should be focused. */\n    getLabel(): string {\n        return this.viewValue;\n    }\n\n    /** Ensures the option is selected when activated from the keyboard. */\n    _handleKeydown(event: KeyboardEvent): void {\n        // tslint:disable-next-line\n        if (event.keyCode === ENTER || event.keyCode === SPACE) {\n            this._selectViaInteraction();\n\n            // Prevent the page from scrolling down and form submits.\n            event.preventDefault();\n        }\n    }\n\n    /**\n     * `Selects the option while indicating the selection came from the user. Used to\n     * determine if the select's view -> model callback should be invoked.`\n     */\n    _selectViaInteraction(): void {\n        if (!this.disabled) {\n            this._selected = this.multiple ? !this._selected : true;\n            this._changeDetectorRef.markForCheck();\n            this._emitSelectionChangeEvent(true);\n        }\n    }\n\n    /** Returns the correct tabindex for the option depending on disabled state. */\n    _getTabIndex(): string {\n        return this.disabled ? '-1' : '0';\n    }\n\n    /** Gets the host DOM element. */\n    _getHostElement(): HTMLElement {\n        return this._element.nativeElement;\n    }\n\n    ngAfterViewChecked() {\n        // Since parent components could be using the option's label to display the selected values\n        // (e.g. `mat-select`) and they don't have a way of knowing if the option's label has changed\n        // we have to check for changes in the DOM ourselves and dispatch an event. These checks are\n        // relatively cheap, however we still limit them only to selected options in order to avoid\n        // hitting the DOM too often.\n        if (this._selected) {\n            const viewValue = this.viewValue;\n\n            if (viewValue !== this._mostRecentViewValue) {\n                this._mostRecentViewValue = viewValue;\n                this._stateChanges.next();\n            }\n        }\n    }\n\n    ngOnDestroy() {\n        this._stateChanges.complete();\n    }\n\n    /** Emits the selection change event. */\n    private _emitSelectionChangeEvent(isUserInput = false): void {\n        this.onSelectionChange.emit(new McOptionSelectionChange(this, isUserInput));\n    }\n}\n\n/**\n * Counts the amount of option group labels that precede the specified option.\n * @param optionIndex Index of the option at which to start counting.\n * @param options Flat list of all of the options.\n * @param optionGroups Flat list of all of the option groups.\n * @docs-private\n */\nexport function _countGroupLabelsBeforeOption(\n    optionIndex: number, options: QueryList<McOption>,\n    optionGroups: QueryList<McOptgroup>\n): number {\n\n    if (optionGroups.length) {\n        const optionsArray = options.toArray();\n        const groups = optionGroups.toArray();\n\n        let groupCounter = 0;\n\n        for (let i = 0; i < optionIndex + 1; i++) {\n            if (optionsArray[i].group && optionsArray[i].group === groups[groupCounter]) {\n                groupCounter++;\n            }\n        }\n\n        return groupCounter;\n    }\n\n    return 0;\n}\n\n/**\n * Determines the position to which to scroll a panel in order for an option to be into view.\n * @param optionIndex Index of the option to be scrolled into the view.\n * @param optionHeight Height of the options.\n * @param currentScrollPosition Current scroll position of the panel.\n * @param panelHeight Height of the panel.\n * @docs-private\n */\nexport function _getOptionScrollPosition(\n    optionIndex: number,\n    optionHeight: number,\n    currentScrollPosition: number,\n    panelHeight: number\n): number {\n    const optionOffset = optionIndex * optionHeight;\n\n    if (optionOffset < currentScrollPosition) { return optionOffset; }\n\n    if (optionOffset + optionHeight > currentScrollPosition + panelHeight) {\n        return Math.max(0, optionOffset - panelHeight + optionHeight);\n    }\n\n    return currentScrollPosition;\n}\n\n","import { ConnectionPositionPair } from '@ptsecurity/cdk/overlay';\n\n\nexport const POSITION_MAP: { [key: string]: ConnectionPositionPair } = {\n    top         : {\n        originX : 'center',\n        originY : 'top',\n        overlayX: 'center',\n        overlayY: 'bottom'\n    },\n    topCenter   : {\n        originX : 'center',\n        originY : 'top',\n        overlayX: 'center',\n        overlayY: 'bottom',\n        offsetX : undefined,\n        offsetY : undefined\n    },\n    topLeft     : {\n        originX : 'start',\n        originY : 'top',\n        overlayX: 'start',\n        overlayY: 'bottom',\n        offsetX : undefined,\n        offsetY : undefined\n    },\n    topRight    : {\n        originX : 'end',\n        originY : 'top',\n        overlayX: 'end',\n        overlayY: 'bottom',\n        offsetX : undefined,\n        offsetY : undefined\n    },\n    right       : {\n        originX : 'end',\n        originY : 'center',\n        overlayX: 'start',\n        overlayY: 'center'\n    },\n    rightTop    : {\n        originX : 'end',\n        originY : 'top',\n        overlayX: 'start',\n        overlayY: 'top',\n        offsetX : undefined,\n        offsetY : undefined\n    },\n    rightBottom : {\n        originX : 'end',\n        originY : 'bottom',\n        overlayX: 'start',\n        overlayY: 'bottom',\n        offsetX : undefined,\n        offsetY : undefined\n    },\n    bottom      : {\n        originX : 'center',\n        originY : 'bottom',\n        overlayX: 'center',\n        overlayY: 'top'\n    },\n    bottomCenter: {\n        originX : 'center',\n        originY : 'bottom',\n        overlayX: 'center',\n        overlayY: 'top'\n    },\n    bottomLeft  : {\n        originX : 'start',\n        originY : 'bottom',\n        overlayX: 'start',\n        overlayY: 'top'\n    },\n    bottomRight : {\n        originX : 'end',\n        originY : 'bottom',\n        overlayX: 'end',\n        overlayY: 'top'\n    },\n    left        : {\n        originX : 'start',\n        originY : 'center',\n        overlayX: 'end',\n        overlayY: 'center'\n    },\n    leftTop     : {\n        originX : 'start',\n        originY : 'top',\n        overlayX: 'end',\n        overlayY: 'top'\n    },\n    leftBottom  : {\n        originX : 'start',\n        originY : 'bottom',\n        overlayX: 'end',\n        overlayY: 'bottom'\n    }\n};\n\nexport const DEFAULT_4_POSITIONS = _objectValues([\n    POSITION_MAP.top, POSITION_MAP.right, POSITION_MAP.bottom, POSITION_MAP.left\n]);\n\nfunction arrayMap<T, S>(array: T[], iteratee: (item: T, index: number, arr: T[]) => S): S[] {\n    let index = -1;\n    const length = array == null ? 0 : array.length;\n    const result = Array(length);\n\n    while (++index < length) {\n        result[ index ] = iteratee(array[ index ], index, array);\n    }\n\n    return result;\n}\nfunction baseValues<T>(object: { [key: string]: T } | T[], props: string[]): T[] {\n    return arrayMap(props,  (key) => {\n        return object[ key ];\n    });\n}\nfunction _objectValues<T>(object: { [key: string]: T } | T[]): T[] {\n    return object == null ? [] : baseValues(object, Object.keys(object));\n}\n","export function throwMcDropdownMissingError() {\n    throw Error(`mcDropdownTriggerFor: must pass in an mc-dropdown instance.\n    Example:\n      <mc-dropdown #dropdown=\"mcDropdown\"></mc-dropdown>\n      <button [mcDropdownTriggerFor]=\"dropdown\"></button>`);\n}\n\n/**\n * Throws an exception for the case when dropdown's x-position value isn't valid.\n * In other words, it doesn't match 'before' or 'after'.\n * @docs-private\n */\nexport function throwMcDropdownInvalidPositionX() {\n    throw Error(`xPosition value must be either 'before' or after'.\n      Example: <mc-dropdown xPosition=\"before\" #dropdown=\"mcDropdown\"></mc-dropdown>`);\n}\n\n/**\n * Throws an exception for the case when dropdown's y-position value isn't valid.\n * In other words, it doesn't match 'above' or 'below'.\n * @docs-private\n */\nexport function throwMcDropdownInvalidPositionY() {\n    throw Error(`yPosition value must be either 'above' or below'.\n      Example: <mc-dropdown yPosition=\"above\" #dropdown=\"mcDropdown\"></mc-dropdown>`);\n}\n","export function getMcFormFieldMissingControlError(): Error {\n  return Error('mc-form-field must contain a McFormFieldControl.');\n}\n","export function getMcInputUnsupportedTypeError(inputType: string): Error {\n    return Error(`Input type \"${inputType}\" isn't supported by mcInput.`);\n}\n","/**\n * Returns an exception to be thrown when attempting to change a select's `multiple` option\n * after initialization.\n * @docs-private\n */\nexport function getMcSelectDynamicMultipleError(): Error {\n    return Error('Cannot change `multiple` mode of select after initialization.');\n}\n\n/**\n * Returns an exception to be thrown when attempting to assign a non-array value to a select\n * in `multiple` mode. Note that `undefined` and `null` are still valid values to allow for\n * resetting the value.\n * @docs-private\n */\nexport function getMcSelectNonArrayValueError(): Error {\n    return Error('Value must be an array in multiple-selection mode.');\n}\n\n/**\n * Returns an exception to be thrown when assigning a non-function value to the comparator\n * used to determine if a value corresponds to an option. Note that whether the function\n * actually takes two values and returns a boolean is not checked.\n */\nexport function getMcSelectNonFunctionValueError(): Error {\n    return Error('`compareWith` must be a function.');\n}\n","import { NgModule, Directive, ElementRef, QueryList } from '@angular/core';\n\n\n/**\n * Shared directive to count lines inside a text area, such as a list item.\n * Line elements can be extracted with a @ContentChildren(McLine) query, then\n * counted by checking the query list's length.\n */\n@Directive({\n    selector: '[mc-line], [mcLine]',\n    host: { class: 'mc-line' }\n})\nexport class McLine {}\n\n/**\n * Helper that takes a query list of lines and sets the correct class on the host.\n * @docs-private\n */\nexport class McLineSetter {\n    constructor(private _lines: QueryList<McLine>, private _element: ElementRef) {\n        this._setLineClass(this._lines.length);\n\n        this._lines.changes.subscribe(() => {\n            this._setLineClass(this._lines.length);\n        });\n    }\n\n    private _setLineClass(count: number): void {\n        this._resetClasses();\n        if (count === 2 || count === 3) {\n            this._setClass(`mc-${count}-line`, true);\n        } else if (count > 3) {\n            this._setClass(`mc-multi-line`, true);\n        }\n    }\n\n    private _resetClasses(): void {\n        this._setClass('mc-2-line', false);\n        this._setClass('mc-3-line', false);\n        this._setClass('mc-multi-line', false);\n    }\n\n    private _setClass(className: string, isAdd: boolean): void {\n        if (isAdd) {\n            this._element.nativeElement.classList.add(className);\n        } else {\n            this._element.nativeElement.classList.remove(className);\n        }\n    }\n}\n\n@NgModule({\n    imports: [],\n    exports: [McLine],\n    declarations: [McLine]\n})\nexport class McLineModule {}\n","import { Injectable } from '@angular/core';\nimport { FormGroupDirective, NgForm, FormControl } from '@angular/forms';\n\n\n/** Error state matcher that matches when a control is invalid and dirty. */\n@Injectable()\nexport class ShowOnDirtyErrorStateMatcher implements ErrorStateMatcher {\n    isErrorState(control: FormControl | null, form: FormGroupDirective | NgForm | null): boolean {\n        return !!(control && control.invalid && (control.dirty || (form && form.submitted)));\n    }\n}\n\n/** Provider that defines how form controls behave with regards to displaying error messages. */\n@Injectable({ providedIn: 'root' })\nexport class ErrorStateMatcher {\n    isErrorState(control: FormControl | null, form: FormGroupDirective | NgForm | null): boolean {\n        return !!(control && control.invalid && (control.touched || (form && form.submitted)));\n    }\n}\n","import { Component, ViewEncapsulation, Input, ChangeDetectionStrategy } from '@angular/core';\n\n\nexport type McPseudoCheckboxState = 'unchecked' | 'checked' | 'indeterminate';\n\n/**\n * Component that shows a simplified checkbox without including any kind of \"real\" checkbox.\n * Meant to be used when the checkbox is purely decorative and a large number of them will be\n * included, such as for the options in a multi-select. Uses no SVGs or complex animations.\n * Note that theming is meant to be handled by the parent element, e.g.\n * `mc-primary .mc-pseudo-checkbox`.\n *\n * Note that this component will be completely invisible to screen-reader users. This is *not*\n * interchangeable with `<mc-checkbox>` and should *not* be used if the user would directly\n * interact with the checkbox. The pseudo-checkbox should only be used as an implementation detail\n * of more complex components that appropriately handle selected / checked state.\n * @docs-private\n */\n@Component({\n    encapsulation: ViewEncapsulation.None,\n    preserveWhitespaces: false,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    selector: 'mc-pseudo-checkbox',\n    styleUrls: ['pseudo-checkbox.css'],\n    templateUrl: 'pseudo-checkbox.partial.html',\n    host: {\n        class: 'mc-pseudo-checkbox',\n        '[class.mc-pseudo-checkbox_indeterminate]': 'state === \"indeterminate\"',\n        '[class.mc-pseudo-checkbox_checked]': 'state === \"checked\"',\n        '[class.mc-disabled]': 'disabled'\n    }\n})\nexport class McPseudoCheckbox {\n    @Input() state: McPseudoCheckboxState = 'unchecked';\n\n    @Input() disabled: boolean = false;\n}\n","import { NgModule } from '@angular/core';\n\nimport { McPseudoCheckbox } from './pseudo-checkbox/pseudo-checkbox';\n\n\n@NgModule({\n    exports: [McPseudoCheckbox],\n    declarations: [McPseudoCheckbox]\n})\nexport class McPseudoCheckboxModule {}\n\n\nexport * from './pseudo-checkbox/pseudo-checkbox';\n","import { DOCUMENT } from '@angular/common';\nimport { Inject, Injectable } from '@angular/core';\n\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class McMeasureScrollbarService {\n\n    get scrollBarWidth(): number {\n        if (this._scrollbarWidth) {\n            return this._scrollbarWidth;\n        }\n        this.initScrollBarWidth();\n\n        return this._scrollbarWidth;\n    }\n\n    private _scrollbarWidth: number;\n    private scrollbarMeasure = {\n        position: 'absolute',\n        top: '-9999px',\n        width: '50px',\n        height: '50px',\n        overflow: 'scroll'\n    };\n\n    constructor(\n        @Inject(DOCUMENT) private document: any\n    ) {\n        this.initScrollBarWidth();\n    }\n\n    initScrollBarWidth() {\n        const scrollDiv = this.document.createElement('div');\n\n        // tslint:disable-next-line\n        for (const scrollProp in this.scrollbarMeasure) {\n            if (this.scrollbarMeasure.hasOwnProperty(scrollProp)) {\n                scrollDiv.style[scrollProp] = this.scrollbarMeasure[scrollProp];\n            }\n        }\n\n        this.document.body.appendChild(scrollDiv);\n\n        const width = scrollDiv.offsetWidth - scrollDiv.clientWidth;\n\n        this.document.body.removeChild(scrollDiv);\n        this._scrollbarWidth = width;\n    }\n}\n","import { Component, ViewEncapsulation, Input, ChangeDetectionStrategy } from '@angular/core';\n\nimport { mixinDisabled, CanDisable, CanDisableCtor } from '../common-behaviors/index';\n\n\n// Boilerplate for applying mixins to McOptgroup.\n/** @docs-private */\nexport class McOptgroupBase {}\n\nexport const _McOptgroupMixinBase: CanDisableCtor & typeof McOptgroupBase = mixinDisabled(McOptgroupBase);\n\n// Counter for unique group ids.\nlet _uniqueOptgroupIdCounter = 0;\n\n/**\n * Component that is used to group instances of `mc-option`.\n */\n@Component({\n    selector: 'mc-optgroup',\n    exportAs: 'mcOptgroup',\n    templateUrl: 'optgroup.html',\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    inputs: ['disabled'],\n    styleUrls: ['optgroup.css'],\n    host: {\n        class: 'mc-optgroup',\n        role: 'group',\n        '[class.mc-optgroup-disabled]': 'disabled',\n        '[attr.aria-disabled]': 'disabled.toString()',\n        '[attr.aria-labelledby]': '_labelId'\n    }\n})\nexport class McOptgroup extends _McOptgroupMixinBase implements CanDisable {\n    /** Label for the option group. */\n    @Input() label: string;\n\n    /** Unique id for the underlying label. */\n    _labelId: string = `mc-optgroup-label-${_uniqueOptgroupIdCounter++}`;\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { McPseudoCheckboxModule } from '../selection/index';\n\nimport { McOptgroup } from './optgroup';\nimport { McOption } from './option';\n\n\n@NgModule({\n    imports: [CommonModule, McPseudoCheckboxModule],\n    exports: [McOption, McOptgroup],\n    declarations: [McOption, McOptgroup]\n})\nexport class McOptionModule {}\n\n\nexport * from './option';\nexport * from './optgroup';\n","import { InjectionToken } from '@angular/core';\n\n\n/** InjectionToken that can be used to specify the global label options. */\nexport const MC_LABEL_GLOBAL_OPTIONS =\n    new InjectionToken<LabelOptions>('mc-label-global-options');\n\n/** Type for the available floatLabel values. */\nexport type FloatLabelType = 'always' | 'never' | 'auto';\n\n/** Configurable options for floating labels. */\nexport interface LabelOptions {\n    /**\n     * Whether the label should float `always`, `never`, or `auto` (only when necessary).\n     * Default behavior is assumed to be `auto`.\n     */\n    float?: FloatLabelType;\n}\n","import {\n    animate,\n    state,\n    style,\n    transition,\n    trigger,\n    AnimationTriggerMetadata,\n} from '@angular/animations';\n\n\nexport const fadeAnimation: AnimationTriggerMetadata =  trigger('fadeAnimation', [\n    state('void', style({ opacity: 0 })),\n    state('true', style({ opacity: 1 })),\n    state('false', style({ opacity: 0 })),\n    transition('* => true', animate('150ms cubic-bezier(0.0, 0.0, 0.2, 1)')),\n    transition('* => void', animate('150ms cubic-bezier(0.4, 0.0, 1, 1)')),\n]);\n","import {\n    Attribute,\n    ChangeDetectionStrategy,\n    Component,\n    Directive,\n    ElementRef,\n    ViewEncapsulation\n} from '@angular/core';\n\nimport { mixinColor, CanColor, CanColorCtor, ThemePalette } from '@ptsecurity/mosaic/core';\n\n\n@Directive({\n    selector: '[mc-icon]',\n    host: { class: 'mc mc-icon' }\n})\nexport class McIconCSSStyler {}\n\n\nexport class McIconBase {\n    constructor(public _elementRef: ElementRef) {}\n}\n\nexport const _McIconMixinBase: CanColorCtor & typeof McIconBase = mixinColor(McIconBase, ThemePalette.Empty);\n\n\n@Component({\n    selector: `[mc-icon]`,\n    template: '<ng-content></ng-content>',\n    styleUrls: ['./icon.css'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n    inputs: ['color']\n})\nexport class McIcon extends _McIconMixinBase implements CanColor {\n    constructor(elementRef: ElementRef, @Attribute('mc-icon') iconName: string) {\n        super(elementRef);\n\n        elementRef.nativeElement.classList.add(iconName);\n    }\n\n    _getHostElement() {\n        return this._elementRef.nativeElement;\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { A11yModule } from '@ptsecurity/cdk/a11y';\nimport { PlatformModule } from '@ptsecurity/cdk/platform';\n\nimport {\n    McIcon,\n    McIconCSSStyler\n} from './icon.component';\n\n\n@NgModule({\n    imports: [\n        CommonModule,\n        A11yModule,\n        PlatformModule\n    ],\n    exports: [\n        McIcon,\n        McIconCSSStyler\n    ],\n    declarations: [\n        McIcon,\n        McIconCSSStyler\n    ]\n})\nexport class McIconModule {}\n"],"names":["set","value","this","_mouseLeaveDelay","updateCompValue","Object","defineProperty","McTooltipDirective","prototype","get","_visible","_trigger","_placement","isTooltipOpen","parentDisabled","_createOverlay","_this","_overlayRef","strategy","_overlay","position","flexibleConnectedTo","elementRef","withTransformOriginOn","withFlexibleDimensions","withViewportMargin","withPositions","DEFAULT_4_POSITIONS","slice","scrollableAncestors","_scrollDispatcher","getAncestorScrollContainers","withScrollableContainers","positionChanges","pipe","takeUntil","_destroyed","subscribe","change","tooltip","onPositionChange","scrollableViewProperties","isOverlayClipped","mcVisible","_ngZone","run","hide","create","direction","_dir","positionStrategy","panelClass","scrollStrategy","_scrollStrategy","_updatePosition","detachments","_detach","hasAttached","detach","$event","updatedPlacement","mcPlacement","keys","availablePositions","some","key","connectionPair","originX","originY","overlayX","overlayY","setClassMap","handlePositioningUpdate","pos","overlayElement","clientHeight","hostView","element","nativeElement","currentContainer","style","top","parseInt","split","isDynamicTooltip","ngOnInit","mcTrigger","manualListeners","show","forEach","listener","event","addEventListener","ngOnDestroy","dispose","removeEventListener","clear","$unsubscribe","next","complete","handleKeydown","e","keyCode","ESCAPE","handleTouchend","getConfig","origin","_getOrigin","overlay","_getOverlayPosition","tslib_1.__assign","main","fallback","originPosition","isLtr","getMcTooltipInvalidPositionError","_a","_invertPosition","x","y","overlayPosition","newX","newY","disabled","overlayRef","_portal","ComponentPortal","McToolTipComponent","attach","instance","afterHidden","property","mcVisibleChange","distinctUntilChanged","data","emit","tslib_1.__decorate","Output","Input","HostBinding","Directive","selector","host","(keydown)","(touchend)","tslib_1.__param","Inject","MC_TOOLTIP_SCROLL_STRATEGY","Optional","tslib_1.__metadata","Overlay","ElementRef","NgZone","ScrollDispatcher","ViewContainerRef","Directionality","McToolTipModule","NgModule","declarations","exports","imports","BrowserAnimationsModule","CommonModule","OverlayModule","providers","MC_TOOLTIP_SCROLL_STRATEGY_FACTORY_PROVIDER","entryComponents","VERSION","Version","SELECT_PANEL_PADDING_X","multiple","options_1","options","toArray","_selectionModel","sort","a","b","sortComparator","indexOf","stateChanges","McSelect","_propagateChanges","fallbackValue","valueToEmit","selected","map","option","_value","valueChange","_onChange","selectionChange","McSelectChange","_changeDetectorRef","markForCheck","_setOptionIds","_optionIds","id","join","_highlightCorrectOption","_keyManager","empty","setFirstItemActive","setActiveItem","_scrollActiveOptionIntoView","activeOptionIndex","activeItemIndex","labelCount","_countGroupLabelsBeforeOption","optionGroups","panel","scrollTop","_getOptionScrollPosition","_getItemHeight","_getOptionIndex","reduce","result","current","index","undefined","_calculateOverlayPosition","itemHeight","items","_getItemCount","panelHeight","Math","min","scrollContainerHeight","maxScroll","selectedOptionOffset","scrollBuffer","_scrollTop","_calculateOverlayScroll","_offsetY","_calculateOverlayOffsetY","_checkOverlayWithinViewport","_calculateOverlayOffsetX","offsetX","overlayRect","overlayDir","getBoundingClientRect","viewportSize","_viewportRuler","getViewportSize","isRtl","_isRtl","first","group","leftOverflow","left","rightOverflow","right","width","round","updatePosition","topSpaceAvailable","_triggerRect","bottomSpaceAvailable","height","bottom","panelHeightTop","abs","totalPanelHeight","panelHeightBottom","_adjustPanelUp","_adjustPanelDown","_transformOrigin","_getOriginBasedOnOption","distanceBelowViewport","distanceAboveViewport","optionHeightAdjustment","length","ViewChild","ViewChildren","McTag","QueryList","CdkConnectedOverlay","ContentChildren","McOption","descendants","McOptgroup","ContentChild","McSelectTrigger","ErrorStateMatcher","EventEmitter","Observable","McSelect_1","Component","exportAs","template","styles","inputs","encapsulation","ViewEncapsulation","None","changeDetection","ChangeDetectionStrategy","OnPush","[attr.id]","[attr.tabindex]","class","[class.mc-disabled]","[class.mc-select-invalid]","[class.mc-select-required]","(focus)","(blur)","(window:resize)","animations","mcSelectAnimations","transformPanel","fadeInContent","provide","McFormFieldControl","useExisting","MC_OPTION_PARENT_COMPONENT","Self","Attribute","MC_SELECT_SCROLL_STRATEGY","ViewportRuler","ChangeDetectorRef","Renderer2","NgForm","FormGroupDirective","McFormField","NgControl","String","_McSelectMixinBase","McSelectModule","McOptionModule","McIconModule","McTagModule","McFormFieldModule","MC_SELECT_SCROLL_STRATEGY_PROVIDER","McSplitterComponent","ngZone","renderer","areas","_disabled","_gutterSize","isDragging","areaPositionDivider","listeners","_direction","coerceBooleanProperty","gutterSize","size","coerceNumberProperty","addArea","area","order","getSize","setOrder","push","initialSize","setStyle","isVertical","onMouseDown","leftAreaIndex","rightAreaIndex","leftArea","rightArea","startPoint","screenX","screenY","item","disableFlex","setSize","runOutsideAngular","listen","onMouseUp","onMouseMove","removeArea","indexToRemove","splice","endPoint","offset","newLeftAreaSize","newRightAreaSize","minLeftAreaSize","getMinSize","minRightAreaSize","rightAreaOffset","unsubscribe","pop","preserveWhitespaces","McGutterDirective","_order","_size","getCursor","getState","coerceCssPixelValue","setAttr","state","Error","attribute","setAttribute","McSplitterAreaDirective","splitter","removeStyle","sz","getSizeProperty","getOffsetSizeProperty","getComputedStyle","parseFloat","getMinSizeProperty","McSplitterModule","nextUniqueId","McToggleBase","_elementRef","_McToggleMixinBase","mixinTabIndex","mixinColor","mixinDisabled","McToggleChange","McToggleComponent","_super","_focusMonitor","tabIndex","call","color","ThemePalette","Primary","labelPosition","ariaLabel","ariaLabelledby","_uniqueId","name","_checked","_onTouchedCallback","_onChangeCallback","_","monitor","tslib_1.__extends","McToggleComponent_1","stopMonitoring","focus","focusVia","_inputElement","_getAriaChecked","checked","_onInteractionEvent","stopPropagation","_onLabelTextChange","_onInputClick","_updateModelValue","_emitChangeEvent","writeValue","registerOnChange","fn","registerOnTouched","setDisabledState","isDisabled","source","NG_VALUE_ACCESSOR","forwardRef","multi","[id]","[class.mc-toggle-off]","trigger","transition","animate","FocusMonitor","McToggleModule","A11yModule","McCommonModule","cdr","_prefix","_positions","_classMap","visibleSource","BehaviorSubject","$visible","asObservable","mcMouseEnterDelay","mcMouseLeaveDelay","_onHide","Subject","_closeOnInteraction","POSITION_MAP","_title","isTitleString","TemplateRef","visible","unshift","hideTId","clearTimeout","isContentEmpty","showTId","setTimeout","_markForCheck","mcTitle","_handleBodyInteraction","fadeAnimation","(body:click)","InjectionToken","deps","useFactory","MC_TOOLTIP_SCROLL_STRATEGY_FACTORY","Map","title","_mouseEnterDelay","focusedOption","_canDeselectLast","toggle","McTreeSelection","renderNodeChanges","dataDiffer","viewContainer","parentData","_dataDiffer","_nodeOutlet","arrayOfInstances","_embeddedViews","view","viewDef","def","nodes","node","nodeMatchedQueries","matchedQueryIds","nodeData","nodeIndex","reset","notifyOnChanges","updateScrollSize","_getHeight","getClientRects","_emitNavigationEvent","navigationChange","McTreeNavigationChange","_isValidIndex","noUnselect","selectedOptions","CdkTreeNodeOutlet","McTreeNodeOption","McTreeSelection_1","[tabIndex]","role","CdkTree","IterableDiffers","_McTreeSelectionBase","MC_TREE_DIRECTIVES","McTreeNodeDef","McTreeNodePadding","McTreeModule","CdkTreeModule","McTreeFlattener","transformFunction","getLevel","isExpandable","getChildren","_flattenNode","level","resultNodes","parentMap","flatNode","take","children","child","childParentMap","flattenNodes","structuredData","expandFlattenedNodes","treeControl","results","currentExpand","expand","i","isExpanded","McTreeFlatDataSource","treeFlattener","initialData","_flattenedData","_expandedData","_data","dataNodes","connect","collectionViewer","changes","viewChange","expansionModel","onChange","merge","apply","disconnect","DataSource","McTreeNestedDataSource","arguments","McTagBase","_McTagMixinBase","ngAfterContentInit","_addClassModificatorForIcons","icons","contentChildren","iconElement","previousElementSibling","nextElementSibling","nextSibling","classList","add","previousSibling","firstIconElement","secondIconElement","McIcon","PlatformModule","TimeParts","TimeFormats","TIMEFORMAT_PLACEHOLDERS","HHmmss","HHmm","DEFAULT_TIME_FORMAT","HOURS_MINUTES_SECONDS_REGEXP","RegExp","HOURS_MINUTES_REGEXP","HOURS_ONLY_REGEXP","uniqueComponentIdSuffix","validatorOnChange","noop","validator","MC_INPUT_VALUE_ACCESSOR","McTimepickerBase","_defaultErrorStateMatcher","_parentForm","_parentFormGroup","ngControl","McTimepickerMixinBase","mixinErrorState","ɵ1","validate","c","registerOnValidatorChange","McTimepicker","inputValueAccessor","focused","controlType","uid","_minTime","_maxTime","previousNativeValue","placeholder","valueAccessor","Validators","compose","parseValidator","minTimeValidator","maxTimeValidator","McTimepicker_1","_id","_required","applyInputChanges","_timeFormat","formatValue","timeFormatKey","minValue","minDateTime","getDateFromTimeString","maxValue","maxDateTime","ngOnChanges","ngDoCheck","updateErrorState","dirtyCheckNativeValue","focusChanged","isFocused","onTouched","onBlur","onPaste","preventDefault","clipboardUserInput","clipboardData","getData","onInput","initialCursorStart","selectionStart","initialCursorEnd","selectionEnd","isAutocompleteTriggered","getParsedTimeParts","hoursOnly","hoursAndMinutes","hoursAndMinutesAndSeconds","doTimestringReformat","errors","createSelectionOfTimeComponentInInput","isBadInput","onContainerClick","setProperty","getTimeStringFromDate","timeFormat","onKeyDown","getKeyCode","upDownTimeByArrowKeys","switchSelectionBetweenTimeparts","newValue","validity","badInput","applyParams","changedTime","timeToApply","currentDateTimeInput","control","updateValueAndValidity","cursorPos","modifiedTimePart","getTimeEditMetrics","incrementTime","decrementTime","getCursorPositionOfPrevTimePartStart","getCursorPositionOfNextTimePartStart","code","newEditParams","cursorStartPosition","cursorEndPosition","dateVal","whatToIncrement","seconds","getTimeDigitsFromDate","hours","minutes","getDateFromTimeDigits","whatToDecrement","timeString","timeDevider","nextDividerPos","cursorPosition","minutesIndex","hoursIndex","secondsIndex","tempVal","getNumberWithLeadingZero","getHours","getMinutes","getSeconds","match","trim","Number","resultDate","Date","isNaN","getTime","digit","mcTimepickerParse","text","isTimeLowerThenMin","mcTimepickerLowerThenMintime","isTimeGreaterThenMax","mcTimepickerHigherThenMaxtime","timeToCompare","[attr.placeholder]","[disabled]","[required]","[attr.time-format]","[attr.min-time]","[attr.max-time]","[attr.value]","(input)","(paste)","NG_VALIDATORS","useValue","McTimepickerModule","FormsModule","transform","minWidth","opacity","query","animateChild","MC_SELECT_SCROLL_STRATEGY_PROVIDER_FACTORY","McSelectBase","_renderer","_parentFormField","_scrollStrategyFactory","_triggerFontSize","_panelDoneAnimating","_panelDoneAnimatingStream","optionSelectionChanges","defer","onSelectionChange","onStable","switchMap","openedChange","_openedStream","filter","o","_closedStream","hiddenItems","_panelOpen","_multiple","_uid","_destroy","_focused","_onTouched","_compareWith","o1","o2","_placeholder","getMcSelectDynamicMultipleError","getMcSelectNonFunctionValueError","_initializeSelection","SelectionModel","panelOpen","_initKeyManager","added","select","removed","deselect","startWith","_resetOptions","ngAfterViewInit","tags","_calculateHiddenItems","close","open","withHorizontalOrientation","fontSize","_setSelectionByValue","viewValue","reverse","isEmpty","_handleKeydown","_handleOpenKeydown","_handleClosedKeydown","_onFadeInDone","_onFocus","_onBlur","_onAttached","positionChange","detectChanges","_getPanelTheme","selectedIndex","optionOffsetFromScrollTop","halfOptionHeight","optimalScrollPosition","max","onRemoveMatcherItem","visibleItems","totalItemsWidth","_getTotalItemsWidthInMatcher","totalVisibleItemsWidth","tag","offsetTop","offsetHeight","itemsCounter","querySelector","matcherList","itemsCounterShowed","matcherListWidth","matcherWidth","triggerClone","cloneNode","remove","appendChild","querySelectorAll","isArrowKey","DOWN_ARROW","UP_ARROW","LEFT_ARROW","RIGHT_ARROW","ENTER","SPACE","altKey","onKeydown","manager","HOME","END","setLastItemActive","activeItem","A","ctrlKey","hasDeselectedOptions_1","previouslyFocusedIndex","shiftKey","_selectViaInteraction","Promise","resolve","then","Array","isArray","getMcSelectNonArrayValueError","currentValue","_selectValue","_sortValues","correspondingOption","find","error","isDevMode","console","warn","ActiveDescendantKeyManager","withTypeAhead","withVerticalOrientation","tabOut","changedOrDestroyed","_onSelect","isUserInput","_stateChanges","wasSelected","isSelected","MC_NAVBAR_BRAND","McNavbarBrand","McNavbarTitle","MC_NAVBAR_TITLE","McNavbarItemBase","_McNavbarMixinBase","McNavbarItem","_platform","_cdRef","dropdownItems","isCollapsed","_subscription","Subscription","encodeURI","dropdownContent","denyClickIfDisabled","_focusMonitor$","hasDropdownContent","listenClickOutside","startListenFocusDropdownItems","stopListenFocusDropdownItems","isActiveDropdownLink","link","isBrowser","window","location","href","handleClickByItem","toggleDropdown","isNavbarItem","target","contains","MC_NAVBAR_ITEM","handleClickByDropdownItem","forceCloseDropdown","_dropdownElements","el","events","eventListeners","hasAttribute","stopImmediatePropagation","read","[attr.disabled]","Platform","McNavbarContainer","MC_NAVBAR_CONTAINER","CollapsibleItem","_collapsed","processCollapsed","collapsed","updateCollapsedClass","CachedItemWidth","itemsForCollapse","_collapsedItemsWidth","calculateAndCacheCollapsedItemsWidth","updateTitle","acc","getTitle","computedTitle","getAttribute","decodeURI","innerText","removeAttribute","McNavbar","forceRecalculateItemsWidth","resizeDebounceInterval","firstLevelElement","secondLevelElements","resizeObserver","fromEvent","debounceTime","_resizeSubscription","updateCollapsed","bind","_itemsWidths","calculateAndCacheItemsWidth","_totalItemsWidths","calculateAndCacheTotalItemsWidth","collapseDelta","maxAllowedWidth","itemsWidths","canCollapse","collapsedItemsWidth","getOuterElementWidth","getPropertyValue","allItemsSelector","allItems","from","getItemsForCollapse","McNavbarModule","McNavbarLogo","idIterator","McProgressBarBase","_McProgressBarMixinBase","McProgressBar","mode","McProgressBarModule","McProgressSpinnerBase","_McProgressSpinnerMixinBase","McProgressSpinner","percentage","McProgressSpinnerModule","McRadioChange","McRadioGroupBase","_McRadioGroupMixinBase","MC_RADIO_GROUP_CONTROL_VALUE_ACCESSOR","McRadioGroup","_changeDetector","_name","_selected","_isInitialized","_labelPosition","controlValueAccessorChangeFn","updateRadioButtonNames","v","markRadiosForCheck","updateSelectedRadioFromValue","checkSelectedRadioButton","toBoolean","touch","emitChangeEvent","_radios","radio","isAlreadySelected","McRadioButton","McRadioButtonBase","_McRadioButtonMixinBase","radioGroup","_radioDispatcher","removeUniqueSelectionListener","newCheckedState","notify","newDisabledState","required","onInputClick","onInputChange","groupValueChanged","[class.mc-radio-checked]","[class.mc-radio-disabled]","UniqueSelectionDispatcher","McRadioModule","McTreeNodeDef_1","CdkTreeNodeDef","_baseLeftPadding","_iconWidth","_indent","McTreeNodePadding_1","_withIcon","_paddingIndent","nodeLevel","_treeNode","_tree","_level","leftPadding","_setPadding","CdkTreeNodePadding","treeSelection","_hasFocus","McTreeNodeOption_1","setSelected","setFocusedOption","_handleFocus","_handleBlur","_handleClick","tabindex","[class.mc-selected]","[class.mc-focused]","[attr.aria-expanded]","[attr.aria-level]","(click)","CdkTreeNode","McTreeSelectionChange","_differs","autoSelect","rawValue","log","_onKeyDown","withShift","withCtrl","collapse","toggleFocusedOption","PAGE_UP","setPreviousPageItemActive","PAGE_DOWN","setNextPageItemActive","FocusKeyManager","withScrollSize","floor","updateActiveItem","previousIndex_1","previousActiveItemIndex","activeIndex_1","focusedIndex","_McListSelectionMixinBase","McListBase","McList","McListSubheaderCssStyler","McListItemBase","McListItem","_element","_lineSetter","McLineSetter","_lines","_getHostElement","McLine","McListModule","McLineModule","McListSelection","McListOption","McLinkBase","_McLinkBase","McLink","McLinkModule","McModalControlService","parentService","rootOpenModals","rootAfterAllClose","rootRegisteredMetaMap","afterAllClose","openModals","registeredMetaMap","registerModal","modalRef","hasRegistered","afterOpenSubscription","afterOpen","afterCloseSubscription","afterClose","removeOpenModal","has","closeAll","Injectable","SkipSelf","McModalRef","ModalUtil","document","lastPosition","listenDocumentClick","getLastClickPosition","clientX","clientY","ModalUtil$1","McModalComponent","cfr","mcMeasureScrollbarService","modalControl","changeDetector","mcModalType","_mcVisible","mcZIndex","mcWidth","mcCloseByESC","_mcClosable","_mcMask","_mcMaskClosable","mcAfterOpen","mcAfterClose","mcOkType","_mcOkLoading","mcOnOk","_mcCancelLoading","mcOnCancel","transformOrigin","mcGetContainer","mcOkText","mcCancelText","animationState","isComponent","mcContent","createDynamicComponent","isModalButtons","mcFooter","formatModalButtons","container","HTMLElement","OverlayRef","handleVisibleStateChange","firstChange","contentComponentRef","bodyContainer","insert","autoFocusButtonOk","changeVisibleFromInside","destroy","triggerOk","onClickOkCancel","triggerCancel","getInstance","getContentComponentRef","getContentComponent","getElement","onClickMask","mcMask","mcMaskClosable","isModalType","type","onClickCloseBtn","ok","cancel","loadingKey","caseClose_1","doClose","isPromise","handleThen","catch","isNonEmptyString","isTemplateRef","Type","animation","closeResult","changeBodyOverflow","animateTo","getButtonCallableProp","prop","args","onButtonClick","button","loading","changeAnimationState","maskAnimationClassMap","modalAnimationClassMap","_b","changeDetectorRef","isVisible","updateTransformOrigin","buttons","autoLoading","component","factory","resolveComponentFactory","childInjector","Injector","parent","parentInjector","mcComponentParams","assign","modalElement","modalContainer","offsetLeft","plusNum","body","scrollBarWidth","DOCUMENT","ComponentFactoryResolver","McMeasureScrollbarService","CssUnitPipe","defaultUnit","formatted","Pipe","ModalBuilderForService","createModal","changeProps","destroyModal","keydownEvents","McModalService","confirm","confirmType","mcClassName","success","simpleConfirm","delete","McModalModule","McButtonModule","hasCleaner","_control","_numberControl","hovered","McFormFieldNumberControl","McStepper","McHint","McSuffix","McPrefix","McCleaner","[class.mc-form-field_invalid]","[class.mc-form-field_has-prefix]","[class.mc-form-field_has-suffix]","[class.mc-form-field_has-cleaner]","[class.mc-form-field_has-stepper]","[class.ng-untouched]","[class.ng-touched]","[class.ng-pristine]","[class.ng-dirty]","[class.ng-valid]","[class.ng-invalid]","[class.ng-pending]","(mouseenter)","(mouseleave)","_McFormFieldMixinBase","McFormFieldWithoutBorders","stepUp","step","res","stepDown","MC_INPUT_INVALID_TYPES","BIG_STEP","SMALL_STEP","McInputBase","_McInputMixinBase","McNumberInput","_model","bigStep","isDigit","Infinity","_host","self","getPrototypeOf","normalizeSplitter","McNumberInput_1","_focusChanged","minuses","NUMPAD_MINUS","DASH","FF_MINUS","serviceKeys","DELETE","BACKSPACE","TAB","arrows","allowedKeys","concat","isIEPeriod","isNotIEPeriod","metaKey","C","V","X","F1","F12","EDGE","TRIDENT","ZERO","NINE","NUMPAD_ZERO","NUMPAD_NINE","valueAsNumber","toString","update","replace","isFloat","isInt","test","NgModel","McInput","_type","_neverEmptyInputTypes","t","getSupportedInputTypes","_inputValueAccessor","_previousNativeValue","McInput_1","_validateType","_dirtyCheckNativeValue","_onInput","_isNeverEmpty","_isBadInput","getMcInputUnsupportedTypeError","McInputMono","MIN_VALIDATOR","MinValidator","_createValidator","_validator","[attr.min]","MAX_VALIDATOR","MaxValidator","[attr.max]","McInputModule","McContentComponent","[class.mc-layout-content]","McFooterComponent","[class.mc-layout-footer]","McHeaderComponent","[class.mc-layout-header]","McLayoutComponent","hasSidebar","[class.mc-layout]","[class.mc-layout-has-sidebar]","McSidebarComponent","mcLayoutComponent","_mcWidth","mcCollapsedWidth","mcCollapsedChange","collapsible","mcCollapsed","[class.mc-layout-sidebar]","[class.mc-layout-sidebar-collapsed]","[style.flex]","[style.max-width.px]","[style.min-width.px]","[style.width.px]","Host","McLayoutModule","listSelection","checkboxPosition","_reportValueChange","wasSelected_1","_removeOptionFromList","getLabel","_text","textContent","MC_SELECTION_LIST_VALUE_ACCESSOR","McListSelectionChange","McListSelectionBase","horizontal","_modelChanges","EMPTY","_tempValues","_setOptionsFromValues","_i","_c","selectAll","deselectAll","values","getSelectedOptionValues","listOption","optionIndex","setPreviousItemActive","setNextItemActive","_getOptionByValue","Boolean","McIconButton","McButton","McAnchor","McButtonCSSStyler","McIconButtonCSSStyler","McCard","readonly","selectedChange","_tabIndex","hostElement","onClick","[class.mc-card_readonly]","[class.mc-card_selected]","McCardModule","MC_CHECKBOX_CLICK_ACTION","MC_CHECKBOX_CONTROL_VALUE_ACCESSOR","McCheckbox","TransitionCheckState","McCheckboxChange","McCheckboxBase","_McCheckboxMixinBase","_clickAction","indeterminateChange","_currentAnimationClass","_currentCheckState","Init","_controlValueAccessorChangeFn","_indeterminate","focusOrigin","_onInputFocusChange","changed","_transitionCheckState","Indeterminate","Checked","Unchecked","indeterminate","newState","oldState","[class.mc-checkbox-indeterminate]","[class.mc-checkbox-checked]","[class.mc-checkbox-disabled]","[class.mc-checkbox-label-before]","MC_CHECKBOX_REQUIRED_VALIDATOR","McCheckboxRequiredValidator","[attr.required]","CheckboxRequiredValidator","McCheckboxModule","McDivider","_vertical","_inset","[attr.aria-orientation]","[class.mc-divider-vertical]","[class.mc-divider-inset]","McDividerModule","McDropdownContent","_template","_componentFactoryResolver","_appRef","_injector","_viewContainerRef","_document","_attached","context","TemplatePortal","_outlet","DomPortalOutlet","createElement","parentNode","insertBefore","outletElement","isAttached","ApplicationRef","MC_DROPDOWN_PANEL","McDropdownItemBase","_McDropdownItemMixinBase","McDropdownItem","_parentDropdownPanel","addItem","removeItem","_getTabIndex","_checkDisabled","textNodeType","TEXT_NODE","output","childNodes","length_1","nodeType","mcDropdownAnimations","transformDropdown","fadeInItems","MC_DROPDOWN_DEFAULT_OPTIONS","providedIn","MC_DROPDOWN_DEFAULT_OPTIONS_FACTORY","McDropdown","_defaultOptions","_classList","_panelAnimationState","_animationDone","backdropClass","closed","_xPosition","xPosition","_yPosition","yPosition","_items","_itemChanges","_tabSubscription","_overlapTrigger","overlapTrigger","_hasBackdrop","hasBackdrop","McDropdown_1","throwMcDropdownInvalidPositionX","setPositionClasses","throwMcDropdownInvalidPositionY","classes","obj","className","withWrap","setFocusOrigin","focusFirstItem","lazyContent","resetActiveItem","posX","posY","_startAnimation","_resetAnimation","_onAnimationDone","_isAnimating","toState","MC_DROPDOWN_SCROLL_STRATEGY","MC_DROPDOWN_SCROLL_STRATEGY_FACTORY_PROVIDER","MC_DROPDOWN_SCROLL_STRATEGY_FACTORY","McDropdownTrigger","_openedBy","dropdownOpened","dropdownClosed","_opened","_closeSubscription","_hoverSubscription","dropdown","_check","_cleanUpSubscriptions","_setPosition","_closingActions","_init","opened","_reset","dir","_setIsOpened","isOpen","throwMcDropdownMissingError","templateRef","config","_getOverlayConfig","_subscribeToPositions","OverlayConfig","withLockedPosition","originFallbackX","overlayFallbackY","originFallbackY","_d","overlayFallbackX","offsetY","backdrop","backdropClick","(touchstart)","McDropdownModule","onStepUp","onStepDown","McFormFieldBase","_labelId","_validateControlChild","hasStepper","_stepper","valueChanges","ngAfterContentChecked","clearValue","onHoverChanged","isHovered","_shouldForward","getMcFormFieldMissingControlError","_hint","_suffix","_cleaner","__extends","d","__","constructor","extendStatics","__decorate","decorators","desc","r","getOwnPropertyDescriptor","Reflect","decorate","__param","paramIndex","decorator","__metadata","metadataKey","metadataValue","metadata","isBoolean","val","MC_SANITY_CHECKS_FACTORY","base","class_1","defaultColor","Default","_color","colorPalette","defaultTabIndex","errorState","matcher","errorStateMatcher","isErrorState","optionsArray","groups","groupCounter","optionHeight","currentScrollPosition","optionOffset","arrayMap","array","iteratee","baseValues","object","props","scrollStrategies","reposition","inputType","sanitizeNumber","isFinite","getPrecision","arr","pow","value1","value2","precision","scrollThrottle","setPrototypeOf","__proto__","p","hasOwnProperty","__assign","s","n","MC_SANITY_CHECKS","_sanityChecksEnabled","_hasDoneGlobalChecks","_window","_areChecksEnabled","_checkDoctypeIsDefined","_checkThemeIsPresent","_isTestEnv","doctype","testElement","computedStyle","display","removeChild","BidiModule","_setLineClass","count","_resetClasses","_setClass","isAdd","ShowOnDirtyErrorStateMatcher","form","invalid","dirty","submitted","touched","McPseudoCheckbox","[class.mc-pseudo-checkbox_indeterminate]","[class.mc-pseudo-checkbox_checked]","McPseudoCheckboxModule","scrollbarMeasure","overflow","initScrollBarWidth","_scrollbarWidth","scrollDiv","scrollProp","offsetWidth","clientWidth","McOptgroupBase","_McOptgroupMixinBase","_uniqueOptgroupIdCounter","[class.mc-optgroup-disabled]","[attr.aria-disabled]","[attr.aria-labelledby]","_uniqueIdCounter","McOptionSelectionChange","_parent","_active","_mostRecentViewValue","disableRipple","_emitSelectionChangeEvent","setActiveStyles","setInactiveStyles","ngAfterViewChecked","[class.mc-option-multiple]","[class.mc-active]","MC_LABEL_GLOBAL_OPTIONS","topCenter","topLeft","topRight","rightTop","rightBottom","bottomCenter","bottomLeft","bottomRight","leftTop","leftBottom","McIconCSSStyler","McIconBase","_McIconMixinBase","Empty","iconName","queries","McButtonBase","_McButtonMixinBase","focusMonitor","_haltDisabledEvents"],"mappings":"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"}