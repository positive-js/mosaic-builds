{"version":3,"file":"mosaic.umd.min.js","sources":["../../src/lib/splitter/splitter.component.ts","../../src/lib/splitter/splitter.module.ts","../../src/lib/toggle/toggle.component.ts","../../src/lib/toggle/toggle.module.ts","../../src/lib/tooltip/tooltip.component.ts","../../src/lib/tooltip/tooltip.module.ts","../../src/lib/version.ts","../../src/lib/timepicker/timepicker.constants.ts","../../src/lib/select/select.component.ts","../../src/lib/timepicker/timepicker.ts","../../src/lib/timepicker/timepicker.module.ts","../../src/lib/select/select-animations.ts","../../src/lib/select/select.module.ts","../../src/lib/radio/radio.component.ts","../../src/lib/radio/radio.module.ts","../../src/lib/tree/node.ts","../../src/lib/tree/padding.ts","../../src/lib/tree/tree-selection.ts","../../src/lib/tree/tree.module.ts","../../src/lib/tree/data-source/flat-data-source.ts","../../src/lib/tree/data-source/nested-data-source.ts","../../src/lib/tag/tag.component.ts","../../src/lib/tag/tag.module.ts","../../src/lib/modal/modal.component.ts","../../src/lib/modal/css-unit.pipe.ts","../../src/lib/modal/modal.service.ts","../../src/lib/modal/modal.module.ts","../../src/lib/navbar/navbar.component.ts","../../src/lib/navbar/navbar.module.ts","../../src/lib/progress-bar/progress-bar.component.ts","../../src/lib/progress-bar/progress-bar.module.ts","../../src/lib/progress-spinner/progress-spinner.component.ts","../../src/lib/progress-spinner/progress-spinner.module.ts","../../src/lib/layout/sidebar.component.ts","../../src/lib/layout/layout.module.ts","../../src/lib/list/list-selection.component.ts","../../src/lib/list/list.component.ts","../../src/lib/list/list.module.ts","../../src/lib/link/link.component.ts","../../src/lib/link/link.module.ts","../../src/lib/modal/modal-control.service.ts","../../src/lib/modal/modal-ref.class.ts","../../src/lib/modal/modal-util.ts","../../src/lib/button/button.component.ts","../../src/lib/button/button.module.ts","../../src/lib/checkbox/checkbox-config.ts","../../src/lib/checkbox/checkbox.ts","../../src/lib/checkbox/checkbox-required-validator.ts","../../src/lib/checkbox/checkbox-module.ts","../../src/lib/divider/divider.component.ts","../../src/lib/divider/divider.module.ts","../../src/lib/form-field/cleaner.ts","../../src/lib/form-field/form-field-control.ts","../../src/lib/form-field/form-field-number-control.ts","../../src/lib/form-field/hint.ts","../../src/lib/form-field/prefix.ts","../../src/lib/form-field/stepper.ts","../../src/lib/form-field/suffix.ts","../../src/lib/form-field/form-field.ts","../../src/lib/form-field/form-field.module.ts","../../src/lib/input/input-value-accessor.ts","../../src/lib/input/stepperUtils.ts","../../src/lib/input/input.ts","../../src/lib/input/input-number-validators.ts","../../src/lib/input/input.module.ts","../../src/lib/layout/content.component.ts","../../src/lib/layout/footer.component.ts","../../src/lib/layout/header.component.ts","../../src/lib/layout/layout.component.ts","../../node_modules/tslib/tslib.es6.js","../../src/lib/core/utils/utils.ts","../../src/lib/core/common-behaviors/common-module.ts","../../src/lib/core/common-behaviors/disabled.ts","../../src/lib/core/common-behaviors/color.ts","../../src/lib/core/common-behaviors/tabindex.ts","../../src/lib/core/common-behaviors/error-state.ts","../../src/lib/core/option/option.ts","../../src/lib/core/overlay/overlay-position-map.ts","../../src/lib/form-field/form-field-errors.ts","../../src/lib/input/input-errors.ts","../../src/lib/select/select-errors.ts","../../src/lib/core/line/line.ts","../../src/lib/core/error/error-options.ts","../../src/lib/core/selection/pseudo-checkbox/pseudo-checkbox.ts","../../src/lib/core/selection/index.ts","../../src/lib/core/services/measure-scrollbar.service.ts","../../src/lib/core/option/optgroup.ts","../../src/lib/core/option/index.ts","../../src/lib/core/label/label-options.ts","../../src/lib/core/animation/fade-animations.ts","../../src/lib/icon/icon.component.ts","../../src/lib/icon/icon.module.ts"],"sourcesContent":["import {\n    ChangeDetectionStrategy,\n    Component,\n    Directive,\n    ElementRef,\n    Input,\n    NgZone, OnDestroy,\n    OnInit,\n    Renderer2,\n    ViewEncapsulation\n} from '@angular/core';\n\nimport { coerceBooleanProperty, coerceCssPixelValue, coerceNumberProperty } from '@ptsecurity/cdk/coercion';\n\n\ninterface IArea {\n    area: McSplitterAreaDirective;\n    index: number;\n    order: number;\n    initialSize: number;\n}\n\ninterface IPoint {\n    x: number;\n    y: number;\n}\n\n\nconst enum AttributeProperty {\n    Disabled = 'disabled'\n}\n\nconst enum Cursor {\n    Default = 'default',\n    ResizeColumn = 'col-resize',\n    ResizeRow = 'row-resize'\n}\n\nconst enum StyleProperty {\n    Cursor = 'cursor',\n    Flex = 'flex',\n    FlexBasis = 'flex-basis',\n    FlexDirection = 'flex-direction',\n    Height = 'height',\n    MaxWidth = 'max-width',\n    MinHeight = 'min-height',\n    MinWidth = 'minWidth',\n    OffsetHeight = 'offsetHeight',\n    OffsetWidth = 'offsetWidth',\n    Order = 'order',\n    Width = 'width'\n}\n\nconst enum State {\n    Disabled = 'disabled',\n    Horizontal = 'horizontal',\n    Vertical = 'vertical'\n}\n\nexport const enum Direction {\n    Horizontal = 'horizontal',\n    Vertical = 'vertical'\n}\n\n@Component({\n    selector: 'mc-splitter',\n    preserveWhitespaces: false,\n    styleUrls: ['splitter.css'],\n    templateUrl: './splitter.component.html',\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class McSplitterComponent implements OnInit {\n    readonly areas: IArea[] = [];\n\n    private _direction: Direction;\n    private _disabled: boolean = false;\n    private _gutterSize: number = 6;\n\n    private isDragging: boolean = false;\n\n    private readonly areaPositionDivider: number = 2;\n    private readonly listeners: (() => void)[] = [];\n\n    @Input()\n    set direction(direction: Direction) {\n        this._direction = direction;\n    }\n\n    get direction(): Direction {\n        return this._direction;\n    }\n\n    @Input()\n    set disabled(disabled: boolean) {\n        this._disabled = coerceBooleanProperty(disabled);\n    }\n\n    get disabled(): boolean {\n        return this._disabled;\n    }\n\n    @Input()\n    set gutterSize(gutterSize: number) {\n        const size = coerceNumberProperty(gutterSize);\n        this._gutterSize = size > 0 ? size : this.gutterSize;\n    }\n\n    get gutterSize(): number {\n        return this._gutterSize;\n    }\n\n    constructor(private elementRef: ElementRef,\n                private ngZone: NgZone,\n                private renderer: Renderer2) {}\n\n    addArea(area: McSplitterAreaDirective): void {\n        const index: number = this.areas.length;\n        const order: number = index * this.areaPositionDivider;\n        const size: number = area.getSize();\n\n        area.setOrder(order);\n\n        this.areas.push({\n            area,\n            index,\n            order,\n            initialSize: size\n        });\n    }\n\n    ngOnInit(): void {\n        if (!this.direction) {\n            this.direction = Direction.Horizontal;\n        }\n\n        this.setStyle(StyleProperty.FlexDirection, this.isVertical() ? 'column' : 'row');\n    }\n\n    onMouseDown(event: MouseEvent, leftAreaIndex: number, rightAreaIndex: number) {\n        if (this.disabled) {\n            return;\n        }\n\n        const leftArea = this.areas[leftAreaIndex];\n        const rightArea = this.areas[rightAreaIndex];\n\n        const startPoint: IPoint = {\n            x: event.screenX,\n            y: event.screenY\n        };\n\n        leftArea.initialSize = leftArea.area.getSize();\n        rightArea.initialSize = rightArea.area.getSize();\n\n        this.areas.forEach((item) => {\n            const size = item.area.getSize();\n            item.area.disableFlex();\n            item.area.setSize(size);\n        });\n\n        this.ngZone.runOutsideAngular(() => {\n            this.listeners.push(\n                this.renderer.listen(\n                    'document',\n                    'mouseup',\n                    () => this.onMouseUp()\n                )\n            );\n        });\n\n        this.ngZone.runOutsideAngular(() => {\n            this.listeners.push(\n                this.renderer.listen(\n                    'document',\n                    'mousemove',\n                    (e: MouseEvent) => this.onMouseMove(e, startPoint, leftArea, rightArea)\n                )\n            );\n        });\n\n        this.isDragging = true;\n    }\n\n    removeArea(area: McSplitterAreaDirective): void {\n        let indexToRemove: number = -1;\n\n        this.areas.some((item, index) => {\n            if (item.area === area) {\n                indexToRemove = index;\n\n                return true;\n            }\n\n            return false;\n        });\n\n        if (indexToRemove === -1) {\n            return;\n        }\n\n        this.areas.splice(indexToRemove, 1);\n    }\n\n    private isVertical(): boolean {\n        return this.direction === Direction.Vertical;\n    }\n\n    private onMouseMove(event: MouseEvent, startPoint: IPoint, leftArea: IArea, rightArea: IArea) {\n        if (!this.isDragging || this.disabled) {\n            return;\n        }\n\n        const endPoint: IPoint = {\n            x: event.screenX,\n            y: event.screenY\n        };\n\n        const offset = this.isVertical()\n            ? startPoint.y - endPoint.y\n            : startPoint.x - endPoint.x;\n\n        const newLeftAreaSize = leftArea.initialSize - offset;\n        const newRightAreaSize = rightArea.initialSize + offset;\n\n        const minLeftAreaSize = leftArea.area.getMinSize();\n        const minRightAreaSize = rightArea.area.getMinSize();\n\n        if (newLeftAreaSize <= minLeftAreaSize || newRightAreaSize <= minRightAreaSize) {\n            const rightAreaOffset = leftArea.initialSize - minLeftAreaSize;\n\n            leftArea.area.setSize(minLeftAreaSize);\n            rightArea.area.setSize(rightArea.initialSize + rightAreaOffset);\n        } else if (newLeftAreaSize <= 0) {\n            leftArea.area.setSize(0);\n            rightArea.area.setSize(rightArea.initialSize + leftArea.initialSize);\n        } else if (newRightAreaSize <= 0) {\n            leftArea.area.setSize(rightArea.initialSize + leftArea.initialSize);\n            rightArea.area.setSize(0);\n        } else {\n            leftArea.area.setSize(newLeftAreaSize);\n            rightArea.area.setSize(newRightAreaSize);\n        }\n    }\n\n    private onMouseUp() {\n        while (this.listeners.length > 0) {\n            const unsubscribe = this.listeners.pop();\n\n            if (unsubscribe) {\n                unsubscribe();\n            }\n        }\n\n        this.isDragging = false;\n    }\n\n    private setStyle(property: StyleProperty, value: string | number) {\n        this.renderer.setStyle(this.elementRef.nativeElement, property, value);\n    }\n}\n\n@Directive({\n    selector: 'mc-gutter'\n})\nexport class McGutterDirective implements OnInit {\n    private _direction: Direction = Direction.Vertical;\n    private _disabled: boolean = false;\n    private _order: number = 0;\n    private _size: number = 6;\n\n    @Input()\n    set direction(direction: Direction) {\n        this._direction = direction;\n    }\n\n    get direction(): Direction {\n        return this._direction;\n    }\n\n    @Input()\n    set disabled(disabled: boolean) {\n        this._disabled = coerceBooleanProperty(disabled);\n    }\n\n    get disabled(): boolean {\n        return this._disabled;\n    }\n\n    @Input()\n    set order(order: number) {\n        this._order = coerceNumberProperty(order);\n    }\n\n    get order(): number {\n        return this._order;\n    }\n\n    @Input()\n    set size(size: number) {\n        this._size = coerceNumberProperty(size);\n    }\n\n    get size(): number {\n        return this._size;\n    }\n\n    constructor(private renderer: Renderer2,\n                private elementRef: ElementRef) {\n    }\n\n    ngOnInit(): void {\n        this.setStyle(StyleProperty.Cursor, this.getCursor(this.getState()));\n        this.setStyle(StyleProperty.FlexBasis, coerceCssPixelValue(this.size));\n        this.setStyle(this.isVertical() ? StyleProperty.Height : StyleProperty.Width, coerceCssPixelValue(this.size));\n        this.setStyle(StyleProperty.Order, this.order);\n\n        if (!this.isVertical()) {\n            this.setStyle(StyleProperty.Height, '100%');\n        }\n\n        if (this.disabled) {\n            this.setAttr(AttributeProperty.Disabled, 'true');\n        }\n\n        // fix IE issue with gutter icon. flex-direction is requied for flex alignment options\n        this.setStyle(StyleProperty.FlexDirection, this.isVertical() ? 'row' : 'column');\n    }\n\n    private isVertical(): boolean {\n        return this.direction === Direction.Vertical;\n    }\n\n    private getCursor(state: State): string {\n        switch (state) {\n            case State.Disabled:\n                return Cursor.Default;\n            case State.Vertical:\n                return  Cursor.ResizeRow;\n            case State.Horizontal:\n                return Cursor.ResizeColumn;\n            default:\n                throw Error(`Unknown gutter state for cursor: ${state}`);\n        }\n    }\n\n    private getState(): State {\n        return this.disabled\n            ? State.Disabled\n            : this.direction === Direction.Vertical\n                ? State.Vertical\n                : State.Horizontal;\n    }\n\n    private setStyle(property: StyleProperty, value: string | number) {\n        this.renderer.setStyle(this.elementRef.nativeElement, property, value);\n    }\n\n    private setAttr(attribute: AttributeProperty, value: string) {\n        this.renderer.setAttribute(this.elementRef.nativeElement, attribute, value);\n    }\n}\n\n@Directive({\n    selector: 'mc-splitter-area'\n})\nexport class McSplitterAreaDirective implements OnInit, OnDestroy {\n    constructor(private elementRef: ElementRef,\n                private renderer: Renderer2,\n                private splitter: McSplitterComponent) {}\n\n    disableFlex(): void {\n        this.renderer.removeStyle(this.elementRef.nativeElement, 'flex');\n    }\n\n    ngOnInit(): void {\n        this.splitter.addArea(this);\n\n        this.removeStyle(StyleProperty.MaxWidth);\n        this.setStyle(StyleProperty.Flex, '1');\n\n        if (this.splitter.direction === Direction.Vertical) {\n            this.setStyle(StyleProperty.Width, '100%');\n            this.removeStyle(StyleProperty.Height);\n        } else {\n            this.setStyle(StyleProperty.Height, '100%');\n            this.removeStyle(StyleProperty.Width);\n        }\n    }\n\n    ngOnDestroy(): void {\n        this.splitter.removeArea(this);\n    }\n\n    setOrder(order: number): void {\n        this.setStyle(StyleProperty.Order, order);\n    }\n\n    setSize(size: number): void {\n        const sz = coerceNumberProperty(size);\n        this.setStyle(this.getSizeProperty(), coerceCssPixelValue(sz));\n    }\n\n    getSize(): number {\n        return this.elementRef.nativeElement[this.getOffsetSizeProperty()];\n    }\n\n    getMinSize(): number {\n        const styles = getComputedStyle(this.elementRef.nativeElement);\n\n        return parseFloat(styles[this.getMinSizeProperty()]);\n    }\n\n    private isVertical(): boolean {\n        return this.splitter.direction === Direction.Vertical;\n    }\n\n    private getMinSizeProperty(): StyleProperty {\n        return this.isVertical()\n            ? StyleProperty.MinHeight\n            : StyleProperty.MinWidth;\n    }\n\n    private getOffsetSizeProperty(): StyleProperty {\n        return this.isVertical()\n            ? StyleProperty.OffsetHeight\n            : StyleProperty.OffsetWidth;\n    }\n\n    private getSizeProperty(): StyleProperty {\n        return this.isVertical()\n            ? StyleProperty.Height\n            : StyleProperty.Width;\n    }\n\n    private setStyle(style: StyleProperty, value: string | number) {\n        this.renderer.setStyle(this.elementRef.nativeElement, style, value);\n    }\n\n    private removeStyle(style: StyleProperty) {\n        this.renderer.removeStyle(this.elementRef.nativeElement, style);\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { McIconModule } from '@ptsecurity/mosaic/icon';\n\nimport { McGutterDirective, McSplitterAreaDirective, McSplitterComponent } from './splitter.component';\n\n\n@NgModule({\n    imports: [\n        CommonModule,\n        McIconModule\n    ],\n    exports: [\n        McGutterDirective,\n        McSplitterAreaDirective,\n        McSplitterComponent\n    ],\n    declarations: [\n        McGutterDirective,\n        McSplitterAreaDirective,\n        McSplitterComponent\n    ]\n})\nexport class McSplitterModule {\n}\n","// tslint:disable:no-empty\nimport { animate, state, style, transition, trigger } from '@angular/animations';\nimport {\n    Attribute,\n    ChangeDetectionStrategy, ChangeDetectorRef,\n    Component,\n    ElementRef, EventEmitter, forwardRef,\n    Input, Output, ViewChild,\n    ViewEncapsulation\n} from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { FocusMonitor } from '@ptsecurity/cdk/a11y';\nimport {\n    ThemePalette,\n    CanColor, CanColorCtor,\n    CanDisable, CanDisableCtor,\n    HasTabIndex, HasTabIndexCtor,\n    mixinColor,\n    mixinDisabled,\n    mixinTabIndex\n} from '@ptsecurity/mosaic/core';\n\n\nlet nextUniqueId = 0;\n\ntype ToggleLabelPositionType = 'left' | 'right';\n\nexport class McToggleBase {\n    constructor(public _elementRef: ElementRef) {}\n}\n\nexport const _McToggleMixinBase:\n    HasTabIndexCtor &\n    CanDisableCtor &\n    CanColorCtor &\n    typeof McToggleBase = mixinTabIndex(mixinColor(mixinDisabled(McToggleBase)));\n\nexport class McToggleChange {\n    source: McToggleComponent;\n    checked: boolean;\n}\n\n@Component({\n    selector: 'mc-toggle',\n    exportAs: 'mcToggle',\n    templateUrl: './toggle.component.html',\n    styleUrls: ['./toggle.css'],\n    providers: [\n        {provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => McToggleComponent), multi: true}\n    ],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n    inputs: ['disabled', 'color', 'tabIndex'],\n    host: {\n        '[id]': 'id',\n        '[attr.id]': 'id',\n        '[class.mc-disabled]': 'disabled',\n        '[class.mc-toggle-off]': '!checked'\n    },\n    animations: [\n        trigger('switch', [\n            state('true' , style({ right: '-1px' })),\n            state('false', style({ right: '*' })),\n            transition('* => *', animate('150ms'))\n        ])\n    ]\n})\nexport class McToggleComponent extends _McToggleMixinBase\n    implements ControlValueAccessor, CanColor, CanDisable, HasTabIndex {\n\n    color: ThemePalette = ThemePalette.Primary;\n\n    @ViewChild('input') _inputElement: ElementRef;\n\n    @Input() labelPosition: ToggleLabelPositionType = 'right';\n\n    @Input('aria-label') ariaLabel: string = '';\n    @Input('aria-labelledby') ariaLabelledby: string | null = null;\n\n    private _uniqueId: string = `mc-toggle-${++nextUniqueId}`;\n\n    // tslint:disable:member-ordering\n    @Input() id: string = this._uniqueId;\n\n    get inputId(): string {\n        return `${this.id || this._uniqueId}-input`;\n    }\n\n    @Input() name: string | null = null;\n\n    @Input() value: string;\n\n    private _disabled: boolean = false;\n\n    @Input()\n    get disabled() {\n        return this._disabled;\n    }\n\n    set disabled(value: any) {\n        if (value !== this._disabled) {\n            this._disabled = value;\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n\n    private _checked: boolean = false;\n\n    get checked() {\n        return this._checked;\n    }\n\n    @Input()\n    set checked(value: boolean) {\n        if (value !== this._checked) {\n            this._checked = value;\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n\n    @Output() readonly change: EventEmitter<McToggleChange> =\n        new EventEmitter<McToggleChange>();\n\n    constructor(public _elementRef: ElementRef,\n                private _focusMonitor: FocusMonitor,\n                private _changeDetectorRef: ChangeDetectorRef,\n                @Attribute('tabindex') tabIndex: string\n    ) {\n        super(_elementRef);\n\n        this.tabIndex = parseInt(tabIndex) || 0;\n\n        this._focusMonitor.monitor(this._elementRef.nativeElement, true);\n    }\n\n    ngOnDestroy() {\n        this._focusMonitor.stopMonitoring(this._elementRef.nativeElement);\n    }\n\n    focus(): void {\n        this._focusMonitor.focusVia(this._inputElement.nativeElement, 'keyboard');\n    }\n\n    _getAriaChecked(): boolean {\n        return this.checked;\n    }\n\n    _onInteractionEvent(event: Event) {\n        event.stopPropagation();\n    }\n\n    _onLabelTextChange() {\n        this._changeDetectorRef.markForCheck();\n    }\n\n    _onInputClick(event: MouseEvent) {\n        event.stopPropagation();\n        this._updateModelValue();\n        this._emitChangeEvent();\n    }\n\n    writeValue(value: any) {\n        this.checked = !!value;\n    }\n\n    registerOnChange(fn: any) {\n        this._onChangeCallback = fn;\n    }\n\n    registerOnTouched(fn: any) {\n        this._onTouchedCallback = fn;\n    }\n\n    setDisabledState(isDisabled: boolean) {\n        this.disabled = isDisabled;\n    }\n\n    private _onTouchedCallback = () => {};\n\n    private _onChangeCallback = (_: any) => {};\n\n    private _updateModelValue() {\n        this._checked = !this.checked;\n        this._onChangeCallback(this.checked);\n        this._onTouchedCallback();\n    }\n\n    private _emitChangeEvent() {\n        const event = new McToggleChange();\n        event.source = this;\n        event.checked = this.checked;\n\n        this._onChangeCallback(this.checked);\n        this.change.emit(event);\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { A11yModule } from '@ptsecurity/cdk/a11y';\nimport { McCommonModule } from '@ptsecurity/mosaic/core';\n\nimport { McToggleComponent } from './toggle.component';\n\n\n@NgModule({\n    imports: [CommonModule, BrowserAnimationsModule, A11yModule, McCommonModule],\n    exports: [McToggleComponent],\n    declarations: [McToggleComponent]\n})\nexport class McToggleModule {\n}\n","import {\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    Directive,\n    ElementRef,\n    EventEmitter,\n    HostBinding,\n    Inject,\n    InjectionToken,\n    Input,\n    NgZone,\n    OnDestroy,\n    OnInit,\n    Optional,\n    Output,\n    TemplateRef,\n    ViewContainerRef,\n    ViewEncapsulation\n} from '@angular/core';\nimport { Directionality } from '@ptsecurity/cdk/bidi';\nimport { coerceBooleanProperty } from '@ptsecurity/cdk/coercion';\nimport { ESCAPE } from '@ptsecurity/cdk/keycodes';\nimport {\n    ConnectedOverlayPositionChange,\n    ConnectionPositionPair,\n    Overlay,\n    OverlayRef,\n    ScrollDispatcher,\n    IScrollStrategy,\n    FlexibleConnectedPositionStrategy,\n    IOverlayConnectionPosition,\n    IOriginConnectionPosition,\n    HorizontalConnectionPos,\n    VerticalConnectionPos\n} from '@ptsecurity/cdk/overlay';\nimport { ComponentPortal } from '@ptsecurity/cdk/portal';\nimport {\n    fadeAnimation,\n    DEFAULT_4_POSITIONS,\n    POSITION_MAP\n} from '@ptsecurity/mosaic/core';\nimport { BehaviorSubject, Observable, Subject } from 'rxjs';\nimport { distinctUntilChanged, takeUntil } from 'rxjs/operators';\n\n\n@Component({\n    selector: 'mc-tooltip',\n    animations: [ fadeAnimation ],\n    templateUrl: './tooltip.component.html',\n    preserveWhitespaces: false,\n    styleUrls: ['./tooltip.css'],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    host: {\n        '(body:click)': 'this._handleBodyInteraction()'\n    }\n})\n\nexport class McToolTipComponent {\n    _prefix = 'mc-tooltip_placement';\n    _positions: ConnectionPositionPair[] = [ ...DEFAULT_4_POSITIONS ];\n    _classMap = {};\n    _placement = 'top';\n    _trigger = 'hover';\n    isTitleString: boolean;\n    visibleSource = new BehaviorSubject<boolean>(false);\n    $visible: Observable<boolean> = this.visibleSource.asObservable();\n    _title: string | TemplateRef<void>;\n    showTId: number;\n    hideTId: number;\n    availablePositions: any;\n\n    @Output() mcVisibleChange: EventEmitter<boolean> = new EventEmitter();\n\n    @Input() mcMouseEnterDelay = 400;\n\n    @Input() mcMouseLeaveDelay = 0;\n\n    @Input()\n    set mcTitle(value: string | TemplateRef<void>) {\n        this.isTitleString = !(value instanceof TemplateRef);\n\n        if (this.isTitleString) {\n            this._title = value;\n        }\n    }\n\n    get mcTitle(): string | TemplateRef<void> {\n        return this._title;\n    }\n\n    @Input()\n    set mcVisible(value: boolean) {\n        const visible = coerceBooleanProperty(value);\n\n        if (this.visibleSource.value !== visible) {\n            this.visibleSource.next(visible);\n            this.mcVisibleChange.emit(visible);\n        }\n    }\n\n    get mcVisible(): boolean {\n        return this.visibleSource.value;\n    }\n\n    @Input()\n    set mcTrigger(value: string) {\n        this._trigger = value;\n    }\n\n    get mcTrigger(): string {\n        return this._trigger;\n    }\n\n    @Input()\n    set mcPlacement(value: string) {\n        if (value !== this._placement) {\n            this._placement = value;\n            this._positions.unshift(POSITION_MAP[ this.mcPlacement ]);\n        } else if (!value) {\n            this._placement = 'top';\n        }\n    }\n    get mcPlacement(): string {\n        return this._placement;\n    }\n\n    /** Subject for notifying that the tooltip has been hidden from the view */\n    private readonly _onHide: Subject<any> = new Subject();\n    private _closeOnInteraction: boolean = false;\n\n    constructor(public cdr: ChangeDetectorRef) {\n        this.availablePositions = POSITION_MAP;\n    }\n\n    show(): void {\n        if (this.hideTId) {\n            clearTimeout(this.hideTId);\n        }\n\n        if (!this.isContentEmpty()) {\n            this._closeOnInteraction = true;\n            this.showTId = setTimeout(() => {\n                this.mcVisible = true;\n                this.mcVisibleChange.emit(true);\n\n                // Mark for check so if any parent component has set the\n                // ChangeDetectionStrategy to OnPush it will be checked anyways\n                this._markForCheck();\n            }, this.mcMouseEnterDelay);\n        }\n    }\n\n    hide(): void {\n        if (this.showTId) {\n            clearTimeout(this.showTId);\n        }\n\n        this.hideTId = setTimeout(() => {\n            this.mcVisible = false;\n            this.mcVisibleChange.emit(false);\n            this._onHide.next();\n\n            // Mark for check so if any parent component has set the\n            // ChangeDetectionStrategy to OnPush it will be checked anyways\n            this._markForCheck();\n        }, this.mcMouseLeaveDelay);\n    }\n\n    setClassMap(): void {\n        this._classMap = {\n            [ `${this._prefix}-${this._placement}` ]: true\n        };\n    }\n\n    isContentEmpty(): boolean {\n        return this.isTitleString ? (this.mcTitle === '' || !this.mcTitle) : false;\n    }\n\n    /** Returns an observable that notifies when the tooltip has been hidden from view. */\n    afterHidden(): Observable<void> {\n        return this._onHide.asObservable();\n    }\n\n    _markForCheck(): void {\n        this.cdr.markForCheck();\n    }\n\n    _handleBodyInteraction(): void {\n        if (this._closeOnInteraction) {\n            this.hide();\n        }\n    }\n}\n\nexport const MC_TOOLTIP_SCROLL_STRATEGY =\n    new InjectionToken<() => IScrollStrategy>('mc-tooltip-scroll-strategy');\n\n/** @docs-private */\nexport function MC_TOOLTIP_SCROLL_STRATEGY_FACTORY(overlay: Overlay): () => IScrollStrategy {\n    return () => overlay.scrollStrategies.reposition({scrollThrottle: 20});\n}\n\n/** @docs-private */\nexport const MC_TOOLTIP_SCROLL_STRATEGY_FACTORY_PROVIDER = {\n    provide: MC_TOOLTIP_SCROLL_STRATEGY,\n    deps: [Overlay],\n    useFactory: MC_TOOLTIP_SCROLL_STRATEGY_FACTORY\n};\n\n/** Creates an error to be thrown if the user supplied an invalid tooltip position. */\nexport function getMcTooltipInvalidPositionError(position: string) {\n    return Error(`McTooltip position \"${position}\" is invalid.`);\n}\n\nconst VIEWPORT_MARGIN: number = 8;\n\n@Directive({\n    selector: '[mc-tooltip]',\n    host: {\n        '(keydown)': 'handleKeydown($event)',\n        '(touchend)': 'handleTouchend()'\n    }\n})\n\nexport class McTooltipDirective implements OnInit, OnDestroy {\n    isTooltipOpen: boolean = false;\n    isDynamicTooltip = false;\n    parentDisabled: boolean = false;\n    _title: string;\n    _disabled: boolean = false;\n    _mouseEnterDelay: number;\n    _mouseLeaveDelay: number;\n    _visible: boolean;\n    _trigger: string = 'hover';\n    _placement: string = 'top';\n    _overlayRef: OverlayRef | null;\n    _portal: ComponentPortal<McToolTipComponent>;\n    availablePositions: any;\n    tooltip: McToolTipComponent | null;\n\n    @Output() mcVisibleChange = new EventEmitter<boolean>();\n    private $unsubscribe = new Subject<void>();\n\n    @Input('mc-tooltip')\n    set mcTitle(title: string) {\n        this._title = title;\n        this.updateCompValue('mcTitle', title);\n    }\n\n    get mcTitle(): string {\n        return this._title;\n    }\n\n    @Input('mcTitle')\n    set setTitle(title: string) {\n        this.mcTitle = title;\n    }\n\n    @Input('mcTooltipDisabled')\n    get disabled(): boolean { return this._disabled; }\n    set disabled(value) {\n        this._disabled = coerceBooleanProperty(value);\n    }\n\n    @Input('mcMouseEnterDelay')\n    set mcMouseEnterDelay(value: number) {\n        this._mouseEnterDelay = value;\n        this.updateCompValue('mcMouseEnterDelay', value);\n    }\n\n    get mcMouseEnterDelay(): number {\n        return this._mouseEnterDelay;\n    }\n\n    @Input('mcMouseLeaveDelay')\n    set mcMouseLeaveDelay(value: number) {\n        this._mouseLeaveDelay = value;\n        this.updateCompValue('mcMouseLeaveDelay', value);\n    }\n\n    get mcMouseLeaveDelay(): number {\n        return this._mouseEnterDelay;\n    }\n\n    @Input('mcVisible')\n    set mcVisible(value: boolean) {\n        this._visible = value;\n        this.updateCompValue('mcVisible', value);\n    }\n\n    get mcVisible(): boolean {\n        return this._visible;\n    }\n\n    @Input('mcTrigger')\n    set mcTrigger(value: string) {\n        this._trigger = value;\n        this.updateCompValue('mcTrigger', value);\n    }\n\n    get mcTrigger(): string {\n        return this._trigger;\n    }\n\n    @Input('mcPlacement')\n    set mcPlacement(value: string) {\n        if (value) {\n            this._placement = value;\n            this.updateCompValue('mcPlacement', value);\n        } else {\n            this._placement = 'top';\n        }\n    }\n\n    get mcPlacement(): string {\n        return this._placement;\n    }\n\n    @HostBinding('class.mc-tooltip-open')\n    get isOpen(): boolean {\n        return this.isTooltipOpen;\n    }\n\n    @HostBinding('class.disabled')\n    get isParentDisabled(): boolean {\n        return this.parentDisabled;\n    }\n\n    private manualListeners = new Map<string, EventListenerOrEventListenerObject>();\n    private readonly _destroyed = new Subject<void>();\n\n    constructor(\n        private _overlay: Overlay,\n        private elementRef: ElementRef,\n        private _ngZone: NgZone,\n        private _scrollDispatcher: ScrollDispatcher,\n        private hostView: ViewContainerRef,\n        @Inject(MC_TOOLTIP_SCROLL_STRATEGY) private _scrollStrategy,\n        @Optional() private _dir: Directionality) {\n            this.availablePositions = POSITION_MAP;\n        }\n\n    /** Create the overlay config and position strategy */\n    _createOverlay(): OverlayRef {\n        if (this._overlayRef) {\n            return this._overlayRef;\n        }\n\n        // Create connected position strategy that listens for scroll events to reposition.\n        const strategy = this._overlay.position()\n            .flexibleConnectedTo(this.elementRef)\n            .withTransformOriginOn('.mc-tooltip')\n            .withFlexibleDimensions(false)\n            .withViewportMargin(VIEWPORT_MARGIN)\n            .withPositions([ ...DEFAULT_4_POSITIONS ]);\n\n        const scrollableAncestors = this._scrollDispatcher\n            .getAncestorScrollContainers(this.elementRef);\n\n        strategy.withScrollableContainers(scrollableAncestors);\n\n        strategy.positionChanges.pipe(takeUntil(this._destroyed)).subscribe((change) => {\n            if (this.tooltip) {\n                this.onPositionChange(change);\n                if (change.scrollableViewProperties.isOverlayClipped && this.tooltip.mcVisible) {\n                    // After position changes occur and the overlay is clipped by\n                    // a parent scrollable then close the tooltip.\n                    this._ngZone.run(() => this.hide());\n                }\n            }\n        });\n\n        this._overlayRef = this._overlay.create({\n            direction: this._dir,\n            positionStrategy: strategy,\n            panelClass: 'mc-tooltip-panel',\n            scrollStrategy: this._scrollStrategy()\n        });\n\n        this._updatePosition();\n\n        this._overlayRef.detachments()\n            .pipe(takeUntil(this._destroyed))\n            .subscribe(() => this._detach());\n\n        return this._overlayRef;\n    }\n\n    _detach() {\n        if (this._overlayRef && this._overlayRef.hasAttached()) {\n            this._overlayRef.detach();\n        }\n\n        this.tooltip = null;\n    }\n\n    onPositionChange($event: ConnectedOverlayPositionChange): void {\n        let updatedPlacement = this.mcPlacement;\n        Object.keys(this.availablePositions).some((key) => {\n            if ($event.connectionPair.originX === this.availablePositions[key].originX &&\n                $event.connectionPair.originY === this.availablePositions[key].originY &&\n                $event.connectionPair.overlayX === this.availablePositions[key].overlayX &&\n                $event.connectionPair.overlayY === this.availablePositions[key].overlayY) {\n                updatedPlacement = key;\n\n                return true;\n            }\n\n            return false;\n        });\n        this.updateCompValue('mcPlacement', updatedPlacement);\n\n        if (this.tooltip) {\n            this.tooltip.setClassMap();\n        }\n\n        this.handlePositioningUpdate();\n    }\n\n    handlePositioningUpdate() {\n        if (!this._overlayRef) {\n            this._overlayRef = this._createOverlay();\n        }\n        if (this.mcPlacement === 'right' || this.mcPlacement === 'left') {\n            const pos =\n                (this._overlayRef.overlayElement.clientHeight -\n                    this.hostView.element.nativeElement.clientHeight) / 2; // tslint:disable-line\n            const currentContainer = this._overlayRef.overlayElement.style.top || '0px';\n            this._overlayRef.overlayElement.style.top =\n                `${parseInt(currentContainer.split('px')[0], 10) + pos - 1}px`;\n            // TODO: обновлять положение стрелки\\указателя\\\"дятла\"\n        }\n    }\n\n    // tslint:disable-next-line:no-any\n    updateCompValue(key: string, value: any): void {\n        if (this.isDynamicTooltip && value) {\n            if (this.tooltip) {\n                this.tooltip[key] = value;\n            }\n        }\n    }\n\n    ngOnInit(): void {\n        if (this.mcTrigger === 'hover') {\n\n            this.manualListeners\n                .set('mouseenter', () => this.show())\n                .set('mouseleave', () => this.hide())\n                .forEach((listener, event) => this.elementRef.nativeElement.addEventListener(event, listener));\n        }\n\n        if (this.mcTrigger === 'focus') {\n\n            this.manualListeners\n                .set('focus', () => this.show())\n                .set('blur', () => this.hide())\n                .forEach((listener, event) => this.elementRef.nativeElement.addEventListener(event, listener));\n        }\n    }\n\n    ngOnDestroy(): void {\n        if (this._overlayRef) {\n            this._overlayRef.dispose();\n        }\n        this.manualListeners.forEach((listener, event) =>\n            this.elementRef.nativeElement.removeEventListener(event, listener));\n        this.manualListeners.clear();\n\n        this.$unsubscribe.next();\n        this.$unsubscribe.complete();\n    }\n\n    handleKeydown(e: KeyboardEvent) {\n        if (this.isTooltipOpen && e.keyCode === ESCAPE) { // tslint:disable-line\n            this.hide();\n        }\n    }\n\n    handleTouchend() {\n        this.hide();\n    }\n\n    /** Updates the position of the current tooltip. */\n    _updatePosition() {\n        if (!this._overlayRef) {\n            this._overlayRef = this._createOverlay();\n        }\n        const position =\n            this._overlayRef.getConfig().positionStrategy as FlexibleConnectedPositionStrategy;\n        const origin = this._getOrigin();\n        const overlay = this._getOverlayPosition();\n\n        position.withPositions([\n            {...origin.main, ...overlay.main},\n            {...origin.fallback, ...overlay.fallback}\n        ]);\n    }\n\n    /**\n     * Returns the origin position and a fallback position based on the user's position preference.\n     * The fallback position is the inverse of the origin (e.g. `'below' -> 'above'`).\n     */\n    _getOrigin(): {main: IOriginConnectionPosition; fallback: IOriginConnectionPosition} {\n        const position = this.mcPlacement;\n        const isLtr = !this._dir || this._dir.value === 'ltr';\n        let originPosition: IOriginConnectionPosition;\n\n        if (position === 'top' || position === 'bottom') {\n            originPosition = {originX: 'center', originY: position === 'top' ? 'top' : 'bottom'};\n        } else if (\n            position === 'top' ||\n            (position === 'left' && isLtr) ||\n            (position === 'right' && !isLtr)) {\n            originPosition = {originX: 'start', originY: 'center'};\n        } else if (\n            position === 'bottom' ||\n            (position === 'right' && isLtr) ||\n            (position === 'left' && !isLtr)) {\n            originPosition = {originX: 'end', originY: 'center'};\n        } else {\n            throw getMcTooltipInvalidPositionError(position);\n        }\n\n        const {x, y} = this._invertPosition(originPosition.originX, originPosition.originY);\n\n        return {\n            main: originPosition,\n            fallback: {originX: x, originY: y}\n        };\n    }\n\n    /** Returns the overlay position and a fallback position based on the user's preference */\n    _getOverlayPosition(): {main: IOverlayConnectionPosition; fallback: IOverlayConnectionPosition} {\n        const position = this.mcPlacement;\n        const isLtr = !this._dir || this._dir.value === 'ltr';\n        let overlayPosition: IOverlayConnectionPosition;\n\n        if (position === 'top') {\n            overlayPosition = {overlayX: 'center', overlayY: 'bottom'};\n        } else if (position === 'bottom') {\n            overlayPosition = {overlayX: 'center', overlayY: 'top'};\n        } else if (\n            position === 'top' ||\n            (position === 'left' && isLtr) ||\n            (position === 'right' && !isLtr)) {\n            overlayPosition = {overlayX: 'end', overlayY: 'center'};\n        } else if (\n            position === 'bottom' ||\n            (position === 'right' && isLtr) ||\n            (position === 'left' && !isLtr)) {\n            overlayPosition = {overlayX: 'start', overlayY: 'center'};\n        } else {\n            throw getMcTooltipInvalidPositionError(position);\n        }\n\n        const {x, y} = this._invertPosition(overlayPosition.overlayX, overlayPosition.overlayY);\n\n        return {\n            main: overlayPosition,\n            fallback: {overlayX: x, overlayY: y}\n        };\n    }\n\n    /** Inverts an overlay position. */\n    private _invertPosition(x: HorizontalConnectionPos, y: VerticalConnectionPos) {\n        let newX: HorizontalConnectionPos = x;\n        let newY: VerticalConnectionPos = y;\n        if (this.mcPlacement === 'top' || this.mcPlacement === 'bottom') {\n            if (y === 'top') {\n                newY = 'bottom';\n            } else if (y === 'bottom') {\n                newY = 'top';\n            }\n        } else {\n            if (x === 'end') {\n                newX = 'start';\n            } else if (x === 'start') {\n                newX = 'end';\n            }\n        }\n\n        return {x: newX, y: newY};\n    }\n\n    private show(): void {\n        if (!this.disabled) {\n            if (!this.tooltip) {\n                const overlayRef = this._createOverlay();\n                this._detach();\n                this._portal = this._portal || new ComponentPortal(McToolTipComponent, this.hostView);\n                this.tooltip = overlayRef.attach(this._portal).instance;\n                this.tooltip.afterHidden()\n                    .pipe(takeUntil(this._destroyed))\n                    .subscribe(() => this._detach());\n                this.isDynamicTooltip = true;\n                const properties = [\n                    'mcTitle',\n                    'mcMouseEnterDelay',\n                    'mcMouseLeaveDelay',\n                    'mcVisible',\n                    'mcTrigger',\n                    'mcPlacement' ];\n                properties.forEach((property) => this.updateCompValue(property, this[ property ]));\n                this.tooltip.mcVisibleChange.pipe(takeUntil(this.$unsubscribe), distinctUntilChanged())\n                    .subscribe((data) => {\n                        this._visible = data;\n                        this.mcVisibleChange.emit(data);\n                    });\n            }\n            this._updatePosition();\n            this.tooltip.show();\n            this.isTooltipOpen = true;\n        }\n    }\n\n    private hide(): void {\n        if (this.tooltip) {\n            this.tooltip.hide();\n            this.isTooltipOpen = false;\n        }\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { OverlayModule } from '@ptsecurity/cdk/overlay';\n\nimport {\n    McToolTipComponent,\n    McTooltipDirective,\n    MC_TOOLTIP_SCROLL_STRATEGY_FACTORY_PROVIDER\n} from './tooltip.component';\n\n\n@NgModule({\n    declarations: [ McToolTipComponent, McTooltipDirective ],\n    exports: [ McToolTipComponent, McTooltipDirective ],\n    imports: [ BrowserAnimationsModule, CommonModule, OverlayModule ],\n    providers: [MC_TOOLTIP_SCROLL_STRATEGY_FACTORY_PROVIDER],\n    entryComponents: [ McToolTipComponent ]\n})\nexport class McToolTipModule {\n}\n","import { Version } from '@angular/core';\n\n\nexport const VERSION = new Version('0.0.1-29d35de');\n","export enum TimeParts {\n    hours,\n    minutes,\n    seconds\n}\n\nexport enum TimeFormats {\n    HHmmss = 'HH:mm:ss',\n    HHmm = 'HH:mm'\n}\n\nexport const TIMEFORMAT_PLACEHOLDERS: { [timeFormat: string]: string } = {\n    'hh:mm:ss': '  :  :  ',\n    'hh:mm': '  :  '\n};\n\nexport const DEFAULT_TIME_FORMAT: TimeFormats = TimeFormats.HHmm;\n\nexport const HOURS_MINUTES_SECONDS_REGEXP =\n    new RegExp(/^([0-9]|0[0-9]|1[0-9]|2[0-3]):([0-5][0-9]|[0-9]):([0-5][0-9]|[0-9])?$/);\nexport const HOURS_MINUTES_REGEXP = /^([0-9]|0[0-9]|1[0-9]|2[0-3]):([0-5][0-9]|[0-9])?$/;\nexport const HOURS_ONLY_REGEXP = /^([0-9]|0[0-9]|1[0-9]|2[0-3]):?$/;\n\nexport const SECONDS_PER_MINUTE: number = 59;\nexport const MINUTES_PER_HOUR: number = 59;\nexport const HOURS_PER_DAY: number = 23;\n\n// TODO Move it to common CDK\nexport const ARROW_UP_KEYCODE: string = 'ArrowUp';\nexport const ARROW_DOWN_KEYCODE: string = 'ArrowDown';\nexport const ARROW_LEFT_KEYCODE: string = 'ArrowLeft';\nexport const ARROW_RIGHT_KEYCODE: string = 'ArrowRight';\n","/* tslint:disable:no-empty */\n\nimport { ActiveDescendantKeyManager } from '@ptsecurity/cdk/a11y';\nimport { Directionality } from '@ptsecurity/cdk/bidi';\nimport { coerceBooleanProperty } from '@ptsecurity/cdk/coercion';\nimport { SelectionModel } from '@ptsecurity/cdk/collections';\nimport {\n    DOWN_ARROW,\n    END,\n    ENTER,\n    HOME,\n    LEFT_ARROW,\n    RIGHT_ARROW,\n    SPACE,\n    UP_ARROW,\n    A\n} from '@ptsecurity/cdk/keycodes';\nimport {\n    CdkConnectedOverlay,\n    Overlay,\n    RepositionScrollStrategy,\n    IScrollStrategy,\n    ViewportRuler\n} from '@ptsecurity/cdk/overlay';\n\nimport {\n    AfterContentInit, AfterViewInit,\n    Attribute,\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    ContentChild,\n    ContentChildren,\n    Directive,\n    DoCheck,\n    ElementRef,\n    EventEmitter,\n    Inject,\n    InjectionToken,\n    Input,\n    isDevMode,\n    NgZone,\n    OnChanges,\n    OnDestroy,\n    OnInit,\n    Optional,\n    Output,\n    QueryList, Renderer2,\n    Self,\n    SimpleChanges,\n    ViewChild, ViewChildren,\n    ViewEncapsulation\n} from '@angular/core';\nimport { ControlValueAccessor, FormGroupDirective, NgControl, NgForm } from '@angular/forms';\nimport {\n    _countGroupLabelsBeforeOption,\n    _getOptionScrollPosition,\n    CanDisable,\n    CanDisableCtor,\n    CanUpdateErrorState,\n    CanUpdateErrorStateCtor,\n    ErrorStateMatcher,\n    HasTabIndex, HasTabIndexCtor,\n    MC_OPTION_PARENT_COMPONENT,\n    McOptgroup,\n    McOption,\n    McOptionSelectionChange,\n    mixinDisabled,\n    mixinErrorState,\n    mixinTabIndex\n} from '@ptsecurity/mosaic/core';\n\nimport { McFormField, McFormFieldControl } from '@ptsecurity/mosaic/form-field';\nimport { McTag } from '@ptsecurity/mosaic/tag';\n\n\nimport { defer, merge, Observable, Subject } from 'rxjs';\nimport {\n    filter,\n    map,\n    startWith,\n    switchMap,\n    take,\n    takeUntil,\n    distinctUntilChanged\n} from 'rxjs/operators';\n\nimport {\n    getMcSelectDynamicMultipleError,\n    getMcSelectNonArrayValueError,\n    getMcSelectNonFunctionValueError\n} from './select-errors';\n\nimport { mcSelectAnimations } from './select-animations';\n\n\nlet nextUniqueId = 0;\n\n/**\n * The following style constants are necessary to save here in order\n * to properly calculate the alignment of the selected option over\n * the trigger element.\n */\n\n/** The max height of the select's overlay panel */\nexport const SELECT_PANEL_MAX_HEIGHT = 224;\n\n/** The panel's padding on the x-axis */\nexport const SELECT_PANEL_PADDING_X = 1;\n\n/** The panel's x axis padding if it is indented (e.g. there is an option group). */\n/* tslint:disable-next-line:no-magic-numbers */\nexport const SELECT_PANEL_INDENT_PADDING_X = SELECT_PANEL_PADDING_X * 2;\n\n/** The height of the select items in `em` units. */\nexport const SELECT_ITEM_HEIGHT_EM = 2;\n\n/**\n * The select panel will only \"fit\" inside the viewport if it is positioned at\n * this value or more away from the viewport boundary.\n */\nexport const SELECT_PANEL_VIEWPORT_PADDING = 8;\n\n/** Injection token that determines the scroll handling while a select is open. */\nexport const MC_SELECT_SCROLL_STRATEGY =\n    new InjectionToken<() => IScrollStrategy>('mc-select-scroll-strategy');\n\n/** @docs-private */\nexport function MC_SELECT_SCROLL_STRATEGY_PROVIDER_FACTORY(overlay: Overlay):\n    () => RepositionScrollStrategy {\n    return () => overlay.scrollStrategies.reposition();\n}\n\n/** @docs-private */\nexport const MC_SELECT_SCROLL_STRATEGY_PROVIDER = {\n    provide: MC_SELECT_SCROLL_STRATEGY,\n    deps: [Overlay],\n    useFactory: MC_SELECT_SCROLL_STRATEGY_PROVIDER_FACTORY\n};\n\n/** Change event object that is emitted when the select value has changed. */\nexport class McSelectChange {\n    constructor(\n        /** Reference to the select that emitted the change event. */\n        public source: McSelect,\n        /** Current value of the select that emitted the event. */\n        public value: any) {\n    }\n}\n\n// Boilerplate for applying mixins to McSelect.\n/** @docs-private */\nexport class McSelectBase {\n    constructor(\n        public _elementRef: ElementRef,\n        public _defaultErrorStateMatcher: ErrorStateMatcher,\n        public _parentForm: NgForm,\n        public _parentFormGroup: FormGroupDirective,\n        public ngControl: NgControl\n    ) {}\n}\n\nexport const _McSelectMixinBase:\n    CanDisableCtor &\n    HasTabIndexCtor &\n    CanUpdateErrorStateCtor & typeof McSelectBase\n    = mixinTabIndex(mixinDisabled(mixinErrorState(McSelectBase)));\n\n\n/**\n * Allows the user to customize the trigger that is displayed when the select has a value.\n */\n@Directive({ selector: 'mc-select-trigger' })\nexport class McSelectTrigger {}\n\n\n@Component({\n    selector: 'mc-select',\n    exportAs: 'mcSelect',\n    templateUrl: 'select.html',\n    styleUrls: ['./select.css'],\n    inputs: ['disabled', 'tabIndex'],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    host: {\n        '[attr.id]': 'id',\n        '[attr.tabindex]': 'tabIndex',\n        class: 'mc-select',\n        '[class.mc-disabled]': 'disabled',\n        '[class.mc-select-invalid]': 'errorState',\n        '[class.mc-select-required]': 'required',\n        '(keydown)': '_handleKeydown($event)',\n        '(focus)': '_onFocus()',\n        '(blur)': '_onBlur()',\n        '(window:resize)': '_calculateHiddenItems()'\n    },\n    animations: [\n        mcSelectAnimations.transformPanel,\n        mcSelectAnimations.fadeInContent\n    ],\n    providers: [\n        { provide: McFormFieldControl, useExisting: McSelect },\n        { provide: MC_OPTION_PARENT_COMPONENT, useExisting: McSelect }\n    ]\n})\nexport class McSelect extends _McSelectMixinBase implements\n    AfterContentInit, AfterViewInit, OnChanges, OnDestroy, OnInit, DoCheck, ControlValueAccessor, CanDisable,\n    HasTabIndex, McFormFieldControl<any>, CanUpdateErrorState {\n\n    /** The last measured value for the trigger's client bounding rect. */\n    _triggerRect: ClientRect;\n\n    /** The cached font-size of the trigger element. */\n    _triggerFontSize = 0;\n\n    /** Deals with the selection logic. */\n    _selectionModel: SelectionModel<McOption>;\n\n    /** Manages keyboard events for options in the panel. */\n    _keyManager: ActiveDescendantKeyManager<McOption>;\n\n    /** The IDs of child options to be passed to the aria-owns attribute. */\n    _optionIds: string = '';\n\n    /** The value of the select panel's transform-origin property. */\n    _transformOrigin: string = 'top';\n\n    /** Whether the panel's animation is done. */\n    _panelDoneAnimating: boolean = false;\n\n    /** Emits when the panel element is finished transforming in. */\n    _panelDoneAnimatingStream = new Subject<string>();\n\n    /** Strategy that will be used to handle scrolling while the select panel is open. */\n    _scrollStrategy = this._scrollStrategyFactory();\n\n    /**\n     * The y-offset of the overlay panel in relation to the trigger's top start corner.\n     * This must be adjusted to align the selected option text over the trigger text.\n     * when the panel opens. Will change based on the y-position of the selected option.\n     */\n    _offsetY = 0;\n\n    /**\n     * This position config ensures that the top \"start\" corner of the overlay\n     * is aligned with with the top \"start\" of the origin by default (overlapping\n     * the trigger completely). If the panel cannot fit below the trigger, it\n     * will fall back to a position above the trigger.\n     */\n    _positions = [\n        {\n            originX: 'start',\n            originY: 'bottom',\n            overlayX: 'start',\n            overlayY: 'top'\n        },\n        {\n            originX: 'start',\n            originY: 'top',\n            overlayX: 'start',\n            overlayY: 'bottom'\n        }\n    ];\n\n    /** Whether the select is focused. */\n    get focused(): boolean {\n        return this._focused || this._panelOpen;\n    }\n\n    /**\n     * @deprecated Setter to be removed as this property is intended to be readonly.\n     * @breaking-change 8.0.0\n     */\n    set focused(value: boolean) {\n        this._focused = value;\n    }\n\n    /** A name for this control that can be used by `mc-form-field`. */\n    controlType = 'mc-select';\n\n    @ViewChild('trigger') trigger: ElementRef;\n    @ViewChildren(McTag) tags: QueryList<McTag>;\n\n    @ViewChild('panel') panel: ElementRef;\n\n    /** Overlay pane containing the options. */\n    @ViewChild(CdkConnectedOverlay) overlayDir: CdkConnectedOverlay;\n\n    /** All of the defined select options. */\n    @ContentChildren(McOption, { descendants: true }) options: QueryList<McOption>;\n\n    /** All of the defined groups of options. */\n    @ContentChildren(McOptgroup) optionGroups: QueryList<McOptgroup>;\n\n    /** Classes to be passed to the select panel. Supports the same syntax as `ngClass`. */\n    @Input() panelClass: string | string[] | Set<string> | { [key: string]: any };\n\n    /** User-supplied override of the trigger element. */\n    @ContentChild(McSelectTrigger) customTrigger: McSelectTrigger;\n\n    /** Placeholder to be shown if no value has been selected. */\n    @Input()\n    get placeholder(): string {\n        return this._placeholder;\n    }\n\n    set placeholder(value: string) {\n        this._placeholder = value;\n        this.stateChanges.next();\n    }\n\n    /** Whether the component is required. */\n    @Input()\n    get required(): boolean {\n        return this._required;\n    }\n\n    set required(value: boolean) {\n        this._required = coerceBooleanProperty(value);\n        this.stateChanges.next();\n    }\n\n    /** Whether the user should be allowed to select multiple options. */\n    @Input()\n    get multiple(): boolean {\n        return this._multiple;\n    }\n\n    set multiple(value: boolean) {\n        if (this._selectionModel) {\n            throw getMcSelectDynamicMultipleError();\n        }\n\n        this._multiple = coerceBooleanProperty(value);\n    }\n\n    /**\n     * Function to compare the option values with the selected values. The first argument\n     * is a value from an option. The second is a value from the selection. A boolean\n     * should be returned.\n     */\n    @Input()\n    get compareWith() {\n        return this._compareWith;\n    }\n\n    set compareWith(fn: (o1: any, o2: any) => boolean) {\n        /* tslint:disable-next-line:strict-type-predicates */\n        if (typeof fn !== 'function') {\n            throw getMcSelectNonFunctionValueError();\n        }\n\n        this._compareWith = fn;\n\n        if (this._selectionModel) {\n            // A different comparator means the selection could change.\n            this._initializeSelection();\n        }\n    }\n\n    /** Value of the select control. */\n    @Input()\n    get value(): any {\n        return this._value;\n    }\n\n    set value(newValue: any) {\n        if (newValue !== this._value) {\n            this.writeValue(newValue);\n            this._value = newValue;\n        }\n    }\n\n    /** Object used to control when error messages are shown. */\n    @Input() errorStateMatcher: ErrorStateMatcher;\n\n    /**\n     * Function used to sort the values in a select in multiple mode.\n     * Follows the same logic as `Array.prototype.sort`.\n     */\n    @Input() sortComparator: (a: McOption, b: McOption, options: McOption[]) => number;\n\n    @Input()\n    get id(): string {\n        return this._id;\n    }\n\n    set id(value: string) {\n        this._id = value || this._uid;\n        this.stateChanges.next();\n    }\n\n    /** Combined stream of all of the child options' change events. */\n    readonly optionSelectionChanges: Observable<McOptionSelectionChange> = defer(() => {\n        if (this.options) {\n            return merge(...this.options.map((option) => option.onSelectionChange));\n        }\n\n        return this._ngZone.onStable\n            .asObservable()\n            .pipe(take(1), switchMap(() => this.optionSelectionChanges));\n    });\n\n    /** Event emitted when the select panel has been toggled. */\n    @Output() readonly openedChange: EventEmitter<boolean> = new EventEmitter<boolean>();\n\n    /** Event emitted when the select has been opened. */\n    @Output('opened') readonly _openedStream: Observable<void> =\n        this.openedChange.pipe(filter((o) => o), map(() => {}));\n\n    /** Event emitted when the select has been closed. */\n    @Output('closed') readonly _closedStream: Observable<void> =\n        this.openedChange.pipe(filter((o) => !o), map(() => {}));\n\n    /** Event emitted when the selected value has been changed by the user. */\n    @Output() readonly selectionChange: EventEmitter<McSelectChange> = new EventEmitter<McSelectChange>();\n\n    /**\n     * Event that emits whenever the raw value of the select changes. This is here primarily\n     * to facilitate the two-way binding for the `value` input.\n     * @docs-private\n     */\n    @Output() readonly valueChange: EventEmitter<any> = new EventEmitter<any>();\n\n    hiddenItems: number = 0;\n\n    /** Whether or not the overlay panel is open. */\n    private _panelOpen = false;\n\n    /** Whether filling out the select is required in the form. */\n    private _required: boolean = false;\n\n    /** The scroll position of the overlay panel, calculated to center the selected option. */\n    private _scrollTop = 0;\n\n    /** The placeholder displayed in the trigger of the select. */\n    private _placeholder: string;\n\n    /** Whether the component is in multiple selection mode. */\n    private _multiple: boolean = false;\n\n    /** Unique id for this input. */\n    private readonly _uid = `mc-select-${nextUniqueId++}`;\n\n    /** Emits whenever the component is destroyed. */\n    private readonly _destroy = new Subject<void>();\n\n    private _focused = false;\n\n    private _value: any;\n\n    private _id: string;\n\n    constructor(\n        private readonly _viewportRuler: ViewportRuler,\n        private readonly _changeDetectorRef: ChangeDetectorRef,\n        private readonly _ngZone: NgZone,\n        private readonly _renderer: Renderer2,\n        _defaultErrorStateMatcher: ErrorStateMatcher,\n        elementRef: ElementRef,\n        @Optional() private readonly _dir: Directionality,\n        @Optional() _parentForm: NgForm,\n        @Optional() _parentFormGroup: FormGroupDirective,\n        @Optional() private readonly _parentFormField: McFormField,\n        @Self() @Optional() public ngControl: NgControl,\n        @Attribute('tabindex') tabIndex: string,\n        @Inject(MC_SELECT_SCROLL_STRATEGY) private readonly _scrollStrategyFactory\n    ) {\n        super(elementRef, _defaultErrorStateMatcher, _parentForm, _parentFormGroup, ngControl);\n\n        if (this.ngControl) {\n            // Note: we provide the value accessor through here, instead of\n            // the `providers` to avoid running into a circular import.\n            this.ngControl.valueAccessor = this;\n        }\n\n        this.tabIndex = parseInt(tabIndex) || 0;\n\n        // Force setter to be called in case id was not specified.\n        this.id = this.id;\n    }\n\n    ngOnInit() {\n        this._selectionModel = new SelectionModel<McOption>(this.multiple);\n        this.stateChanges.next();\n\n        // We need `distinctUntilChanged` here, because some browsers will\n        // fire the animation end event twice for the same animation. See:\n        // https://github.com/angular/angular/issues/24084\n        this._panelDoneAnimatingStream\n            .pipe(distinctUntilChanged(), takeUntil(this._destroy))\n            .subscribe(() => {\n                if (this.panelOpen) {\n                    this._scrollTop = 0;\n                    this.openedChange.emit(true);\n                } else {\n                    this.openedChange.emit(false);\n                    this._panelDoneAnimating = false;\n                    this.overlayDir.offsetX = 0;\n                    this._changeDetectorRef.markForCheck();\n                }\n            });\n    }\n\n    ngAfterContentInit() {\n        this._initKeyManager();\n\n        this._selectionModel.onChange!\n            .pipe(takeUntil(this._destroy))\n            .subscribe((event) => {\n                event.added.forEach((option) => option.select());\n                event.removed.forEach((option) => option.deselect());\n            });\n\n        this.options.changes\n            .pipe(startWith(null), takeUntil(this._destroy))\n            .subscribe(() => {\n                this._resetOptions();\n                this._initializeSelection();\n            });\n    }\n\n    ngAfterViewInit(): void {\n        this.tags.changes\n            .subscribe(() => {\n                setTimeout(() => this._calculateHiddenItems(), 0);\n            });\n    }\n\n    ngDoCheck() {\n        if (this.ngControl) { this.updateErrorState(); }\n    }\n\n    ngOnChanges(changes: SimpleChanges) {\n        // Updating the disabled state is handled by `mixinDisabled`, but we need to additionally let\n        // the parent form field know to run change detection when the disabled state changes.\n        if (changes.disabled) {\n            this.stateChanges.next();\n        }\n    }\n\n    ngOnDestroy() {\n        this._destroy.next();\n        this._destroy.complete();\n        this.stateChanges.complete();\n    }\n\n    /** `View -> model callback called when value changes` */\n    _onChange: (value: any) => void = () => {};\n\n    /** `View -> model callback called when select has been touched` */\n    _onTouched = () => {};\n\n    /** Toggles the overlay panel open or closed. */\n    toggle(): void {\n        if (this.panelOpen) {\n            this.close();\n        } else {\n            this.open();\n        }\n    }\n\n    /** Opens the overlay panel. */\n    open(): void {\n        if (this.disabled || !this.options || !this.options.length || this._panelOpen) { return; }\n\n        this._triggerRect = this.trigger.nativeElement.getBoundingClientRect();\n        // Note: The computed font-size will be a string pixel value (e.g. \"16px\").\n        // `parseInt` ignores the trailing 'px' and converts this to a number.\n        this._triggerFontSize = parseInt(getComputedStyle(this.trigger.nativeElement)['font-size']);\n\n        this._panelOpen = true;\n        this._keyManager.withHorizontalOrientation(null);\n        this._calculateOverlayPosition();\n        this._highlightCorrectOption();\n        this._changeDetectorRef.markForCheck();\n\n        // Set the font size on the panel element once it exists.\n        this._ngZone.onStable.asObservable()\n            .pipe(take(1))\n            .subscribe(() => {\n                if (this._triggerFontSize && this.overlayDir.overlayRef &&\n                    this.overlayDir.overlayRef.overlayElement) {\n                    this.overlayDir.overlayRef.overlayElement.style.fontSize = `${this._triggerFontSize}px`;\n                }\n            });\n    }\n\n    /** Closes the overlay panel and focuses the host element. */\n    close(): void {\n        if (this._panelOpen) {\n            this._panelOpen = false;\n            this._keyManager.withHorizontalOrientation(this._isRtl() ? 'rtl' : 'ltr');\n            this._changeDetectorRef.markForCheck();\n            this._onTouched();\n        }\n    }\n\n    /**\n     * Sets the select's value. Part of the ControlValueAccessor interface\n     * required to integrate with Angular's core forms API.\n     *\n     * @param value New value to be written to the model.\n     */\n    writeValue(value: any): void {\n        if (this.options) {\n            this._setSelectionByValue(value);\n        }\n    }\n\n    /**\n     * Saves a callback function to be invoked when the select's value\n     * changes from user input. Part of the ControlValueAccessor interface\n     * required to integrate with Angular's core forms API.\n     *\n     * @param fn Callback to be triggered when the value changes.\n     */\n    registerOnChange(fn: (value: any) => void): void {\n        this._onChange = fn;\n    }\n\n    /**\n     * Saves a callback function to be invoked when the select is blurred\n     * by the user. Part of the ControlValueAccessor interface required\n     * to integrate with Angular's core forms API.\n     *\n     * @param fn Callback to be triggered when the component has been touched.\n     */\n    registerOnTouched(fn: () => {}): void {\n        this._onTouched = fn;\n    }\n\n    /**\n     * Disables the select. Part of the ControlValueAccessor interface required\n     * to integrate with Angular's core forms API.\n     *\n     * @param isDisabled Sets whether the component is disabled.\n     */\n    setDisabledState(isDisabled: boolean): void {\n        this.disabled = isDisabled;\n        this._changeDetectorRef.markForCheck();\n        this.stateChanges.next();\n    }\n\n    get panelOpen(): boolean {\n        return this._panelOpen;\n    }\n\n    get selected(): McOption | McOption[] {\n        return this.multiple ? this._selectionModel.selected : this._selectionModel.selected[0];\n    }\n\n    get triggerValue(): string {\n        if (this.empty) { return ''; }\n\n        if (this._multiple) {\n            const selectedOptions = this._selectionModel.selected.map((option) => option.viewValue);\n\n            if (this._isRtl()) { selectedOptions.reverse(); }\n\n            return selectedOptions.join(', ');\n        }\n\n        return this._selectionModel.selected[0].viewValue;\n    }\n\n    get triggerValues(): McOption[] {\n        if (this.empty) { return []; }\n\n        if (this._multiple) {\n            const selectedOptions = this._selectionModel.selected;\n\n            if (this._isRtl()) { selectedOptions.reverse(); }\n\n            return selectedOptions;\n        }\n\n        return [this._selectionModel.selected[0]];\n    }\n\n    get empty(): boolean {\n        return !this._selectionModel || this._selectionModel.isEmpty();\n    }\n\n    _isRtl(): boolean {\n        return this._dir ? this._dir.value === 'rtl' : false;\n    }\n\n    _handleKeydown(event: KeyboardEvent): void {\n        if (!this.disabled) {\n            if (this.panelOpen) {\n                this._handleOpenKeydown(event);\n            } else {\n                this._handleClosedKeydown(event);\n            }\n        }\n    }\n\n    /**\n     * When the panel content is done fading in, the _panelDoneAnimating property is\n     * set so the proper class can be added to the panel.\n     */\n    _onFadeInDone(): void {\n        this._panelDoneAnimating = this.panelOpen;\n        this._changeDetectorRef.markForCheck();\n    }\n\n    _onFocus() {\n        if (!this.disabled) {\n            this._focused = true;\n            this.stateChanges.next();\n        }\n    }\n\n    /**\n     * Calls the touched callback only if the panel is closed. Otherwise, the trigger will\n     * \"blur\" to the panel when it opens, causing a false positive.\n     */\n    _onBlur() {\n        this._focused = false;\n\n        if (!this.disabled && !this.panelOpen) {\n            this._onTouched();\n            this._changeDetectorRef.markForCheck();\n            this.stateChanges.next();\n        }\n    }\n\n    /**\n     * Callback that is invoked when the overlay panel has been attached.\n     */\n    _onAttached(): void {\n        this.overlayDir.positionChange\n            .pipe(take(1))\n            .subscribe(() => {\n                this._changeDetectorRef.detectChanges();\n                this._calculateOverlayOffsetX();\n                this.panel.nativeElement.scrollTop = this._scrollTop;\n            });\n    }\n\n    /** Returns the theme to be used on the panel. */\n    _getPanelTheme(): string {\n        return this._parentFormField ? `mc-${this._parentFormField.color}` : '';\n    }\n\n    /** Focuses the select element. */\n    focus(): void {\n        this._elementRef.nativeElement.focus();\n    }\n\n    /**\n     * Calculates the scroll position of the select's overlay panel.\n     *\n     * Attempts to center the selected option in the panel. If the option is\n     * too high or too low in the panel to be scrolled to the center, it clamps the\n     * scroll position to the min or max scroll positions respectively.\n     */\n    _calculateOverlayScroll(selectedIndex: number, scrollBuffer: number, maxScroll: number): number {\n        const itemHeight = this._getItemHeight();\n        const optionOffsetFromScrollTop = itemHeight * selectedIndex;\n\n        /* tslint:disable-next-line:no-magic-numbers */\n        const halfOptionHeight = itemHeight / 2;\n\n        // Starts at the optionOffsetFromScrollTop, which scrolls the option to the top of the\n        // scroll container, then subtracts the scroll buffer to scroll the option down to\n        // the center of the overlay panel. Half the option height must be re-added to the\n        // scrollTop so the option is centered based on its middle, not its top edge.\n        const optimalScrollPosition = optionOffsetFromScrollTop - scrollBuffer + halfOptionHeight;\n\n        return Math.min(Math.max(0, optimalScrollPosition), maxScroll);\n    }\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    onContainerClick() {\n        this.focus();\n        this.open();\n    }\n\n    /** Invoked when an option is clicked. */\n    onRemoveMatcherItem(option: McOption, $event): void {\n        $event.stopPropagation();\n\n        option.deselect();\n    }\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    get shouldLabelFloat(): boolean {\n        return this._panelOpen || !this.empty;\n    }\n\n    _calculateHiddenItems(): void {\n        if (this.empty) { return; }\n\n        let visibleItems: number = 0;\n        const totalItemsWidth = this._getTotalItemsWidthInMatcher();\n        let totalVisibleItemsWidth: number = 0;\n        const itemMargin: number = 4;\n\n        this.tags.forEach((tag) => {\n            if (tag.nativeElement.offsetTop < tag.nativeElement.offsetHeight) {\n                totalVisibleItemsWidth += tag.nativeElement.getBoundingClientRect().width + itemMargin;\n                visibleItems++;\n            }\n        });\n\n        this.hiddenItems = (this.selected as ArrayLike<McOption>).length - visibleItems;\n\n        if (this.hiddenItems) {\n            const itemsCounter = this.trigger.nativeElement.querySelector('.mc-select__match-hidden-text');\n            const matcherList = this.trigger.nativeElement.querySelector('.mc-select__match-list');\n\n            const itemsCounterShowed = itemsCounter.offsetTop < itemsCounter.offsetHeight;\n            // const itemsCounterWidth: number = itemsCounter.getBoundingClientRect().width;\n            const itemsCounterWidth: number = 86;\n\n            const matcherListWidth: number = matcherList.getBoundingClientRect().width;\n            const matcherWidth: number = matcherListWidth + itemsCounterWidth;\n\n            if (itemsCounterShowed && (totalItemsWidth < matcherWidth)) { this.hiddenItems = 0; }\n\n            if (\n                totalVisibleItemsWidth === matcherListWidth ||\n                (totalVisibleItemsWidth + itemsCounterWidth) < matcherListWidth\n            ) {\n                this._changeDetectorRef.markForCheck();\n\n                return ;\n            } else if (!itemsCounterShowed && (totalItemsWidth + itemsCounterWidth) > matcherWidth) {\n                this.hiddenItems++;\n            }\n        }\n\n        this._changeDetectorRef.markForCheck();\n    }\n\n    private _getTotalItemsWidthInMatcher(): number {\n        const triggerClone = this.trigger.nativeElement.cloneNode(true);\n        triggerClone.querySelector('.mc-select__match-hidden-text').remove();\n\n        this._renderer.setStyle(triggerClone, 'position', 'absolute');\n        this._renderer.setStyle(triggerClone, 'visibility', 'hidden');\n        this._renderer.setStyle(triggerClone, 'top', '-100%');\n        this._renderer.setStyle(triggerClone, 'left', '0');\n\n        this._renderer.appendChild(this.trigger.nativeElement, triggerClone);\n\n        let totalItemsWidth: number = 0;\n        const itemMargin: number = 4;\n        triggerClone.querySelectorAll('mc-tag').forEach((item) => {\n            totalItemsWidth += item.getBoundingClientRect().width as number + itemMargin;\n        });\n\n        triggerClone.remove();\n\n        return totalItemsWidth;\n    }\n\n    /** Handles keyboard events while the select is closed. */\n    private _handleClosedKeydown(event: KeyboardEvent): void {\n        /* tslint:disable-next-line */\n        const keyCode = event.keyCode;\n        const isArrowKey = keyCode === DOWN_ARROW || keyCode === UP_ARROW ||\n            keyCode === LEFT_ARROW || keyCode === RIGHT_ARROW;\n        const isOpenKey = keyCode === ENTER || keyCode === SPACE;\n\n        // Open the select on ALT + arrow key to match the native <select>\n        if (isOpenKey || ((this.multiple || event.altKey) && isArrowKey)) {\n            event.preventDefault(); // prevents the page from scrolling down when pressing space\n            this.open();\n        } else if (!this.multiple) {\n            this._keyManager.onKeydown(event);\n        }\n    }\n\n    /** Handles keyboard events when the selected is open. */\n    private _handleOpenKeydown(event: KeyboardEvent): void {\n        /* tslint:disable-next-line */\n        const keyCode = event.keyCode;\n        const isArrowKey = keyCode === DOWN_ARROW || keyCode === UP_ARROW;\n        const manager = this._keyManager;\n\n        if (keyCode === HOME || keyCode === END) {\n            event.preventDefault();\n\n            if (keyCode === HOME) {\n                manager.setFirstItemActive();\n            } else {\n                manager.setLastItemActive();\n            }\n\n        } else if (isArrowKey && event.altKey) {\n            // Close the select on ALT + arrow key to match the native <select>\n            event.preventDefault();\n            this.close();\n        } else if ((keyCode === ENTER || keyCode === SPACE) && manager.activeItem) {\n            event.preventDefault();\n            manager.activeItem._selectViaInteraction();\n        } else if (this._multiple && keyCode === A && event.ctrlKey) {\n            event.preventDefault();\n            const hasDeselectedOptions = this.options.some((option) => !option.selected);\n            this.options.forEach((option) => {\n                if (hasDeselectedOptions && !option.disabled) {\n                    option.select();\n                } else {\n                    option.deselect();\n                }\n            });\n        } else {\n            const previouslyFocusedIndex = manager.activeItemIndex;\n\n            manager.onKeydown(event);\n\n            if (this._multiple && isArrowKey && event.shiftKey && manager.activeItem &&\n                manager.activeItemIndex !== previouslyFocusedIndex) {\n                manager.activeItem._selectViaInteraction();\n            }\n        }\n    }\n\n    private _initializeSelection(): void {\n        // Defer setting the value in order to avoid the \"Expression\n        // has changed after it was checked\" errors from Angular.\n        Promise.resolve().then(() => {\n            this._setSelectionByValue(this.ngControl ? this.ngControl.value : this._value);\n        });\n    }\n\n    /**\n     * Sets the selected option based on a value. If no option can be\n     * found with the designated value, the select trigger is cleared.\n     */\n    private _setSelectionByValue(value: any | any[]): void {\n        if (this.multiple && value) {\n            if (!Array.isArray(value)) {\n                throw getMcSelectNonArrayValueError();\n            }\n\n            this._selectionModel.clear();\n            value.forEach((currentValue: any) => this._selectValue(currentValue));\n            this._sortValues();\n        } else {\n            this._selectionModel.clear();\n            const correspondingOption = this._selectValue(value);\n\n            // Shift focus to the active item. Note that we shouldn't do this in multiple\n            // mode, because we don't know what option the user interacted with last.\n            if (correspondingOption) {\n                this._keyManager.setActiveItem(correspondingOption);\n            }\n        }\n\n        this._changeDetectorRef.markForCheck();\n    }\n\n    /**\n     * Finds and selects and option based on its value.\n     * @returns Option that has the corresponding value.\n     */\n    private _selectValue(value: any): McOption | undefined {\n        const correspondingOption = this.options.find((option: McOption) => {\n            try {\n                // Treat null as a special reset value.\n                return option.value != null && this._compareWith(option.value, value);\n            } catch (error) {\n                if (isDevMode()) {\n                    // Notify developers of errors in their comparator.\n                    console.warn(error);\n                }\n\n                return false;\n            }\n        });\n\n        if (correspondingOption) {\n            this._selectionModel.select(correspondingOption);\n        }\n\n        return correspondingOption;\n    }\n\n    /** Sets up a key manager to listen to keyboard events on the overlay panel. */\n    private _initKeyManager() {\n        this._keyManager = new ActiveDescendantKeyManager<McOption>(this.options)\n            .withTypeAhead()\n            .withVerticalOrientation()\n            .withHorizontalOrientation(this._isRtl() ? 'rtl' : 'ltr');\n\n        this._keyManager.tabOut\n            .pipe(takeUntil(this._destroy))\n            .subscribe(() => {\n                // Restore focus to the trigger before closing. Ensures that the focus\n                // position won't be lost if the user got focus into the overlay.\n                this.focus();\n                this.close();\n            });\n\n        this._keyManager.change\n            .pipe(takeUntil(this._destroy))\n            .subscribe(() => {\n                if (this._panelOpen && this.panel) {\n                    this._scrollActiveOptionIntoView();\n                } else if (!this._panelOpen && !this.multiple && this._keyManager.activeItem) {\n                    this._keyManager.activeItem._selectViaInteraction();\n                }\n            });\n    }\n\n    /** Drops current option subscriptions and IDs and resets from scratch. */\n    private _resetOptions(): void {\n        const changedOrDestroyed = merge(this.options.changes, this._destroy);\n\n        this.optionSelectionChanges\n            .pipe(takeUntil(changedOrDestroyed))\n            .subscribe((event) => {\n                this._onSelect(event.source, event.isUserInput);\n\n                if (event.isUserInput && !this.multiple && this._panelOpen) {\n                    this.close();\n                    this.focus();\n                }\n            });\n\n        // Listen to changes in the internal state of the options and react accordingly.\n        // Handles cases like the labels of the selected options changing.\n        merge(...this.options.map((option) => option._stateChanges))\n            .pipe(takeUntil(changedOrDestroyed))\n            .subscribe(() => {\n                this._changeDetectorRef.markForCheck();\n                this.stateChanges.next();\n            });\n\n        this._setOptionIds();\n    }\n\n    /** Invoked when an option is clicked. */\n    private _onSelect(option: McOption, isUserInput: boolean): void {\n        const wasSelected = this._selectionModel.isSelected(option);\n\n        if (option.value == null && !this._multiple) {\n            option.deselect();\n            this._selectionModel.clear();\n            this._propagateChanges(option.value);\n        } else {\n            if (option.selected) {\n                this._selectionModel.select(option);\n            } else {\n                this._selectionModel.deselect(option);\n            }\n\n            if (isUserInput) {\n                this._keyManager.setActiveItem(option);\n            }\n\n            if (this.multiple) {\n                this._sortValues();\n\n                if (isUserInput) {\n                    // In case the user selected the option with their mouse, we\n                    // want to restore focus back to the trigger, in order to\n                    // prevent the select keyboard controls from clashing with\n                    // the ones from `mc-option`.\n                    this.focus();\n                }\n            }\n        }\n\n        if (wasSelected !== this._selectionModel.isSelected(option)) {\n            this._propagateChanges();\n        }\n\n        this.stateChanges.next();\n    }\n\n    /** Sorts the selected values in the selected based on their order in the panel. */\n    private _sortValues() {\n        if (this.multiple) {\n            const options = this.options.toArray();\n\n            this._selectionModel.sort((a, b) => {\n                return this.sortComparator ? this.sortComparator(a, b, options) :\n                    options.indexOf(a) - options.indexOf(b);\n            });\n            this.stateChanges.next();\n        }\n    }\n\n    /** Emits change event to set the model value. */\n    private _propagateChanges(fallbackValue?: any): void {\n        let valueToEmit: any = null;\n\n        if (this.multiple) {\n            valueToEmit = (this.selected as McOption[]).map((option) => option.value);\n        } else {\n            valueToEmit = this.selected ? (this.selected as McOption).value : fallbackValue;\n        }\n\n        this._value = valueToEmit;\n        this.valueChange.emit(valueToEmit);\n        this._onChange(valueToEmit);\n        this.selectionChange.emit(new McSelectChange(this, valueToEmit));\n        this._changeDetectorRef.markForCheck();\n    }\n\n    /** Records option IDs to pass to the aria-owns property. */\n    private _setOptionIds() {\n        this._optionIds = this.options.map((option) => option.id).join(' ');\n    }\n\n    /**\n     * Highlights the selected item. If no option is selected, it will highlight\n     * the first item instead.\n     */\n    private _highlightCorrectOption(): void {\n        if (this._keyManager) {\n            if (this.empty) {\n                this._keyManager.setFirstItemActive();\n            } else {\n                this._keyManager.setActiveItem(this._selectionModel.selected[0]);\n            }\n        }\n    }\n\n    /** Scrolls the active option into view. */\n    private _scrollActiveOptionIntoView(): void {\n        const activeOptionIndex = this._keyManager.activeItemIndex || 0;\n        const labelCount = _countGroupLabelsBeforeOption(activeOptionIndex, this.options, this.optionGroups);\n\n        this.panel.nativeElement.scrollTop = _getOptionScrollPosition(\n            activeOptionIndex + labelCount,\n            this._getItemHeight(),\n            this.panel.nativeElement.scrollTop,\n            SELECT_PANEL_MAX_HEIGHT\n        );\n    }\n\n    /** Gets the index of the provided option in the option list. */\n    private _getOptionIndex(option: McOption): number | undefined {\n        /* tslint:disable-next-line */\n        return this.options.reduce((result: number, current: McOption, index: number) => {\n            /* tslint:disable-next-line:strict-type-predicates */\n            return result === undefined ? (option === current ? index : undefined) : result;\n        }, undefined);\n    }\n\n    /** Calculates the scroll position and x- and y-offsets of the overlay panel. */\n    private _calculateOverlayPosition(): void {\n        const itemHeight = this._getItemHeight();\n        const items = this._getItemCount();\n        const panelHeight = Math.min(items * itemHeight, SELECT_PANEL_MAX_HEIGHT);\n        const scrollContainerHeight = items * itemHeight;\n\n        // The farthest the panel can be scrolled before it hits the bottom\n        const maxScroll = scrollContainerHeight - panelHeight;\n\n        // If no value is selected we open the popup to the first item.\n        let selectedOptionOffset =\n            this.empty ? 0 : this._getOptionIndex(this._selectionModel.selected[0])!;\n\n        selectedOptionOffset += _countGroupLabelsBeforeOption(selectedOptionOffset, this.options,\n            this.optionGroups);\n\n        // We must maintain a scroll buffer so the selected option will be scrolled to the\n        // center of the overlay panel rather than the top.\n        /* tslint:disable-next-line:no-magic-numbers */\n        const scrollBuffer = panelHeight / 2;\n        this._scrollTop = this._calculateOverlayScroll(selectedOptionOffset, scrollBuffer, maxScroll);\n        this._offsetY = this._calculateOverlayOffsetY();\n\n        this._checkOverlayWithinViewport(maxScroll);\n    }\n\n    /**\n     * Sets the x-offset of the overlay panel in relation to the trigger's top start corner.\n     * This must be adjusted to align the selected option text over the trigger text when\n     * the panel opens. Will change based on LTR or RTL text direction. Note that the offset\n     * can't be calculated until the panel has been attached, because we need to know the\n     * content width in order to constrain the panel within the viewport.\n     */\n    private _calculateOverlayOffsetX(): void {\n        const overlayRect = this.overlayDir.overlayRef.overlayElement.getBoundingClientRect();\n        const viewportSize = this._viewportRuler.getViewportSize();\n        const isRtl = this._isRtl();\n        /* tslint:disable-next-line:no-magic-numbers */\n        const paddingWidth = SELECT_PANEL_PADDING_X * 2;\n        let offsetX: number;\n\n        const selected = this._selectionModel.selected[0] || this.options.first;\n        offsetX = selected && selected.group ? SELECT_PANEL_INDENT_PADDING_X : SELECT_PANEL_PADDING_X;\n\n        // Invert the offset in LTR.\n        if (!isRtl) { offsetX *= -1; }\n\n        // Determine how much the select overflows on each side.\n        const leftOverflow = 0 - (overlayRect.left + offsetX - (isRtl ? paddingWidth : 0));\n        const rightOverflow = overlayRect.right + offsetX - viewportSize.width\n            + (isRtl ? 0 : paddingWidth);\n\n        // If the element overflows on either side, reduce the offset to allow it to fit.\n        if (leftOverflow > 0) {\n            offsetX += leftOverflow + SELECT_PANEL_VIEWPORT_PADDING;\n        } else if (rightOverflow > 0) {\n            offsetX -= rightOverflow + SELECT_PANEL_VIEWPORT_PADDING;\n        }\n\n        // Set the offset directly in order to avoid having to go through change detection and\n        // potentially triggering \"changed after it was checked\" errors. Round the value to avoid\n        // blurry content in some browsers.\n        this.overlayDir.offsetX = Math.round(offsetX);\n        this.overlayDir.overlayRef.updatePosition();\n    }\n\n    /**\n     * Calculates the y-offset of the select's overlay panel in relation to the\n     * top start corner of the trigger. It has to be adjusted in order for the\n     * selected option to be aligned over the trigger when the panel opens.\n     */\n    private _calculateOverlayOffsetY(): number {\n        // const itemHeight = this._getItemHeight();\n        // const optionHeightAdjustment = (itemHeight - this._triggerRect.height) / 2;\n\n        // todo I'm not sure that we will use it\n        return 0;\n        // return Math.round(-optionHeightAdjustment);\n    }\n\n    /**\n     * Checks that the attempted overlay position will fit within the viewport.\n     * If it will not fit, tries to adjust the scroll position and the associated\n     * y-offset so the panel can open fully on-screen. If it still won't fit,\n     * sets the offset back to 0 to allow the fallback position to take over.\n     */\n    private _checkOverlayWithinViewport(maxScroll: number): void {\n        const itemHeight = this._getItemHeight();\n        const viewportSize = this._viewportRuler.getViewportSize();\n\n        const topSpaceAvailable = this._triggerRect.top - SELECT_PANEL_VIEWPORT_PADDING;\n        const bottomSpaceAvailable =\n            viewportSize.height - this._triggerRect.bottom - SELECT_PANEL_VIEWPORT_PADDING;\n\n        const panelHeightTop = Math.abs(this._offsetY);\n        const totalPanelHeight =\n            Math.min(this._getItemCount() * itemHeight, SELECT_PANEL_MAX_HEIGHT);\n        const panelHeightBottom = totalPanelHeight - panelHeightTop - this._triggerRect.height;\n\n        if (panelHeightBottom > bottomSpaceAvailable) {\n            this._adjustPanelUp(panelHeightBottom, bottomSpaceAvailable);\n        } else if (panelHeightTop > topSpaceAvailable) {\n            this._adjustPanelDown(panelHeightTop, topSpaceAvailable, maxScroll);\n        } else {\n            this._transformOrigin = this._getOriginBasedOnOption();\n        }\n    }\n\n    /** Adjusts the overlay panel up to fit in the viewport. */\n    private _adjustPanelUp(panelHeightBottom: number, bottomSpaceAvailable: number) {\n        // Browsers ignore fractional scroll offsets, so we need to round.\n        const distanceBelowViewport = Math.round(panelHeightBottom - bottomSpaceAvailable);\n\n        // Scrolls the panel up by the distance it was extending past the boundary, then\n        // adjusts the offset by that amount to move the panel up into the viewport.\n        this._scrollTop -= distanceBelowViewport;\n        this._offsetY -= distanceBelowViewport;\n        this._transformOrigin = this._getOriginBasedOnOption();\n\n        // If the panel is scrolled to the very top, it won't be able to fit the panel\n        // by scrolling, so set the offset to 0 to allow the fallback position to take\n        // effect.\n        if (this._scrollTop <= 0) {\n            this._scrollTop = 0;\n            this._offsetY = 0;\n            this._transformOrigin = `50% bottom 0px`;\n        }\n    }\n\n    /** Adjusts the overlay panel down to fit in the viewport. */\n    private _adjustPanelDown(panelHeightTop: number, topSpaceAvailable: number, maxScroll: number) {\n        // Browsers ignore fractional scroll offsets, so we need to round.\n        const distanceAboveViewport = Math.round(panelHeightTop - topSpaceAvailable);\n\n        // Scrolls the panel down by the distance it was extending past the boundary, then\n        // adjusts the offset by that amount to move the panel down into the viewport.\n        this._scrollTop += distanceAboveViewport;\n        this._offsetY += distanceAboveViewport;\n        this._transformOrigin = this._getOriginBasedOnOption();\n\n        // If the panel is scrolled to the very bottom, it won't be able to fit the\n        // panel by scrolling, so set the offset to 0 to allow the fallback position\n        // to take effect.\n        if (this._scrollTop >= maxScroll) {\n            this._scrollTop = maxScroll;\n            this._offsetY = 0;\n            this._transformOrigin = `50% top 0px`;\n\n            return;\n        }\n    }\n\n    /** Sets the transform origin point based on the selected option. */\n    private _getOriginBasedOnOption(): string {\n        const itemHeight = this._getItemHeight();\n        /* tslint:disable-next-line:no-magic-numbers */\n        const optionHeightAdjustment = (itemHeight - this._triggerRect.height) / 2;\n        /* tslint:disable-next-line:no-magic-numbers */\n        const originY = Math.abs(this._offsetY) - optionHeightAdjustment + itemHeight / 2;\n\n        return `50% ${originY}px 0px`;\n    }\n\n    /** Calculates the amount of items in the select. This includes options and group labels. */\n    private _getItemCount(): number {\n        return this.options.length + this.optionGroups.length;\n    }\n\n    /** Calculates the height of the select's options. */\n    private _getItemHeight(): number {\n        /* tslint:disable-next-line:no-magic-numbers */\n        return 32;\n        // return this._triggerFontSize * SELECT_ITEM_HEIGHT_EM;\n    }\n\n    /** Comparison function to specify which option is displayed. Defaults to object equality. */\n    private _compareWith = (o1: any, o2: any) => o1 === o2;\n}\n","import {\n    Directive,\n    DoCheck,\n    ElementRef,\n    forwardRef,\n    Inject,\n    InjectionToken,\n    Input,\n    OnChanges,\n    OnDestroy,\n    Optional,\n    Renderer2,\n    Self\n} from '@angular/core';\nimport {\n    ControlValueAccessor,\n    FormControl,\n    FormGroupDirective,\n    NG_VALIDATORS,\n    NgControl,\n    NgForm,\n    ValidationErrors,\n    ValidatorFn,\n    Validators\n} from '@angular/forms';\nimport {\n    noop,\n    Subject\n} from 'rxjs';\n\nimport { coerceBooleanProperty } from '@ptsecurity/cdk/coercion';\nimport {\n    CanUpdateErrorState,\n    CanUpdateErrorStateCtor,\n    ErrorStateMatcher,\n    mixinErrorState\n} from '@ptsecurity/mosaic/core';\nimport { McFormFieldControl } from '@ptsecurity/mosaic/form-field';\n\nimport {\n    ARROW_DOWN_KEYCODE,\n    ARROW_LEFT_KEYCODE,\n    ARROW_RIGHT_KEYCODE,\n    ARROW_UP_KEYCODE,\n    DEFAULT_TIME_FORMAT,\n    HOURS_PER_DAY,\n    HOURS_MINUTES_REGEXP,\n    HOURS_MINUTES_SECONDS_REGEXP,\n    HOURS_ONLY_REGEXP,\n    MINUTES_PER_HOUR,\n    SECONDS_PER_MINUTE,\n    TIMEFORMAT_PLACEHOLDERS,\n    TimeFormats,\n    TimeParts\n} from './timepicker.constants';\n\n\nlet _uniqueComponentIdSuffix: number = 0;\nlet _validatorOnChange: () => void = noop;\nlet _validator: ValidatorFn | null = () => null;\n\nexport const MC_INPUT_VALUE_ACCESSOR =\n    new InjectionToken<{ value: any }>('MC_INPUT_VALUE_ACCESSOR');\n\nexport class McTimepickerBase {\n    constructor(\n        public _defaultErrorStateMatcher: ErrorStateMatcher,\n        public _parentForm: NgForm,\n        public _parentFormGroup: FormGroupDirective,\n        public ngControl: NgControl) { }\n}\n\nexport const McTimepickerMixinBase:\n    CanUpdateErrorStateCtor &\n    typeof McTimepickerBase = mixinErrorState(McTimepickerBase);\n\n@Directive({\n    selector: 'input[mcTimepicker]',\n    exportAs: 'mcTimepickerInput',\n    host: {\n        class: 'mc-timepicker mc-input',\n        // Native input properties that are overwritten by Angular inputs need to be synced with\n        // the native input element. Otherwise property bindings for those don't work.\n        '[attr.id]': 'id',\n        '[attr.placeholder]': 'placeholder',\n        '[disabled]': 'disabled',\n        '[required]': 'required',\n        '[attr.time-format]': 'timeFormat',\n        '[attr.min-time]': 'minTime',\n        '[attr.max-time]': 'maxTime',\n        '[attr.value]': 'value',\n        '(blur)': 'onBlur()',\n        '(focus)': 'focusChanged(true)',\n        '(input)': 'onInput()',\n        '(paste)': 'onPaste($event)',\n        '(keydown)': 'onKeyDown($event)'\n    },\n    providers: [\n        {\n            provide: NG_VALIDATORS,\n            useValue: {\n                validate(c) { return _validator ? _validator(c) : null; },\n                registerOnValidatorChange(fn: () => void): void { _validatorOnChange = fn; }\n            },\n            multi: true\n        },\n        {\n            provide: McFormFieldControl,\n            useExisting: forwardRef(() => McTimepicker)\n        }\n    ]\n\n})\nexport class McTimepicker extends McTimepickerMixinBase\n    implements McFormFieldControl<any>,\n        OnChanges,\n        OnDestroy,\n        DoCheck,\n        CanUpdateErrorState,\n        ControlValueAccessor {\n\n    /** An object used to control when error messages are shown. */\n    @Input() errorStateMatcher: ErrorStateMatcher;\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    focused: boolean = false;\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    readonly stateChanges: Subject<void> = new Subject<void>();\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    controlType: string = 'mc-timepicker';\n\n    @Input()\n    get disabled(): boolean {\n        if (this.ngControl && this.ngControl.disabled !== null) { return this.ngControl.disabled; }\n\n        return this._disabled;\n    }\n\n    set disabled(value: boolean) {\n        this._disabled = coerceBooleanProperty(value);\n\n        // Browsers may not fire the blur event if the input is disabled too quickly.\n        // Reset from here to ensure that the element doesn't become stuck.\n        if (this.focused) {\n            this.focused = false;\n        }\n\n        this.stateChanges.next();\n    }\n\n    @Input()\n    get id(): string { return this._id; }\n\n    set id(value: string) { this._id = value || this._uid; }\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    @Input() placeholder: string;\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    @Input()\n    get required(): boolean { return this._required; }\n\n    set required(value: boolean) { this._required = coerceBooleanProperty(value); }\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    @Input()\n    get value(): string { return this._inputValueAccessor.value; }\n\n    set value(value: string) {\n        if (value !== this.value) {\n            this._inputValueAccessor.value = value;\n            this._applyInputChanges();\n        }\n    }\n\n    @Input('time-format')\n    get timeFormat(): TimeFormats { return this._timeFormat; }\n\n    set timeFormat(formatValue: TimeFormats) {\n        this._timeFormat = Object\n            .keys(TimeFormats)\n            .map((timeFormatKey) => TimeFormats[timeFormatKey])\n            .indexOf(formatValue) > -1 ? formatValue : DEFAULT_TIME_FORMAT;\n\n        _validatorOnChange();\n        this.placeholder = TIMEFORMAT_PLACEHOLDERS[this._timeFormat.toLowerCase()];\n    }\n\n    @Input('min-time')\n    get minTime(): string | null { return this._minTime; }\n\n    set minTime(minValue: string | null) {\n        this._minTime = minValue;\n        this._minDTime = minValue !== null ? this._getDateFromTimeString(minValue) : undefined;\n        _validatorOnChange();\n    }\n\n    @Input('max-time')\n    get maxTime(): string | null { return this._maxTime; }\n\n    set maxTime(maxValue: string | null) {\n        this._maxTime = maxValue;\n        this._maxDTime = maxValue !== null ? this._getDateFromTimeString(maxValue) : undefined;\n        _validatorOnChange();\n    }\n\n    private _id: string;\n    private readonly _uid = `mc-timepicker-${_uniqueComponentIdSuffix++}`;\n    private _disabled: boolean;\n    private _required: boolean;\n    private _previousNativeValue: any;\n    private readonly _inputValueAccessor: { value: any };\n    private _onChange: (value: any) => void;\n    private _onTouched: () => void;\n    private _timeFormat: TimeFormats;\n    private _minTime: string | null = null;\n    private _minDTime: Date | undefined;\n    private _maxTime: string | null = null;\n    private _maxDTime: Date | undefined;\n    private _currentDTimeInput: Date | undefined;\n\n    constructor(private readonly _elementRef: ElementRef,\n                @Optional() @Self() public ngControl: NgControl,\n                @Optional() _parentForm: NgForm,\n                @Optional() _parentFormGroup: FormGroupDirective,\n                _defaultErrorStateMatcher: ErrorStateMatcher,\n                @Optional() @Self() @Inject(MC_INPUT_VALUE_ACCESSOR) inputValueAccessor: any,\n                private readonly _renderer: Renderer2) {\n        super(_defaultErrorStateMatcher, _parentForm, _parentFormGroup, ngControl);\n\n        // If no input value accessor was explicitly specified, use the element as the input value\n        // accessor.\n        this._inputValueAccessor = inputValueAccessor || this._elementRef.nativeElement;\n\n        this._previousNativeValue = this.value;\n        this._onChange = noop;\n\n        // Force setter to be called in case id was not specified.\n        this.id = this.id;\n\n        // Instead of NG_VALUE_ACCESSOR (https://github.com/angular/material2/issues/8158#issuecomment-344618103)\n        if (this.ngControl) { this.ngControl.valueAccessor = this; }\n\n        // Substitute initial empty validator with validator linked to directive object instance (workaround)\n        _validator = Validators.compose([\n            () => this._parseValidator(),\n            () => this._minTimeValidator(),\n            () => this._maxTimeValidator()\n        ]);\n    }\n\n    ngOnChanges(): void {\n        this.stateChanges.next();\n    }\n\n    ngOnDestroy(): void {\n        this.stateChanges.complete();\n    }\n\n    ngDoCheck(): void {\n        if (this.ngControl) {\n            // We need to re-evaluate this on every change detection cycle, because there are some\n            // error triggers that we can't subscribe to (e.g. parent form submissions). This means\n            // that whatever logic is in here has to be super lean or we risk destroying the performance.\n            this.updateErrorState();\n        }\n\n        // We need to dirty-check the native element's value, because there are some cases where\n        // we won't be notified when it changes (e.g. the consumer isn't using forms or they're\n        // updating the value using `emitEvent: false`).\n        this._dirtyCheckNativeValue();\n    }\n\n    focus(): void {\n        this._elementRef.nativeElement.focus();\n    }\n\n    focusChanged(isFocused: boolean): void {\n        if (isFocused !== this.focused) {\n            this.focused = isFocused;\n            this._onTouched();\n            this.stateChanges.next();\n        }\n    }\n\n    onBlur() {\n        this._applyInputChanges();\n        this.focusChanged(false);\n    }\n\n    onPaste($event) {\n        $event.preventDefault();\n        const clipboardUserInput: string = $event.clipboardData.getData('text');\n\n        if (this._getDateFromTimeString(clipboardUserInput) === undefined) { return; }\n\n        this._elementRef.nativeElement.value = clipboardUserInput;\n        this.onInput();\n    }\n\n    onInput() {\n        const initialCursorStart: number = this._elementRef.nativeElement.selectionStart;\n        const initialCursorEnd: number = this._elementRef.nativeElement.selectionEnd;\n        let isAutocompleteTriggered: boolean = false;\n\n        const {\n            hoursOnly,\n            hoursAndMinutes,\n            hoursAndMinutesAndSeconds\n        } = this._getParsedTimeParts(this._elementRef.nativeElement.value);\n\n        // tslint:disable no-magic-numbers\n        if (hoursOnly &&\n            hoursOnly[1] &&\n            hoursOnly[1].length === 2) {\n            isAutocompleteTriggered = true;\n        } else if (hoursAndMinutes &&\n            hoursAndMinutes[1].length === 1 &&\n            hoursAndMinutes[2] &&\n            hoursAndMinutes[2].length === 2) {\n            isAutocompleteTriggered = true;\n        } else if (hoursAndMinutesAndSeconds &&\n            hoursAndMinutesAndSeconds[1].length === 2 &&\n            hoursAndMinutesAndSeconds[2].length === 2 &&\n            hoursAndMinutesAndSeconds[3] &&\n            hoursAndMinutesAndSeconds[3].length === 2) {\n            isAutocompleteTriggered = true;\n        }\n        // tslint:enable no-magic-numbers\n\n        this._applyInputChanges({ doTimestringReformat: isAutocompleteTriggered });\n\n        this._elementRef.nativeElement.selectionStart = initialCursorStart;\n        this._elementRef.nativeElement.selectionEnd = initialCursorEnd;\n\n        if (isAutocompleteTriggered && this.ngControl.errors === null) {\n            this._createSelectionOfTimeComponentInInput(initialCursorStart + 1);\n        }\n    }\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    get empty(): boolean {\n        return !this._elementRef.nativeElement.value && !this._isBadInput();\n    }\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    onContainerClick() {\n        this.focus();\n    }\n\n    writeValue(value: Date | null): void {\n        if (value !== null) {\n            this._renderer.setProperty(this._elementRef.nativeElement,\n                'value',\n                this._getTimeStringFromDate(value, this.timeFormat)\n            );\n        }\n        this._onChange(value || null);\n        this._applyInputChanges();\n    }\n\n    onKeyDown(event: KeyboardEvent): void {\n\n        const keyCode: string = this._getKeyCode(event);\n\n        if (keyCode === ARROW_UP_KEYCODE || keyCode === ARROW_DOWN_KEYCODE) {\n            this._upDownTimeByArrowKeys(event);\n        }\n        if (keyCode === ARROW_LEFT_KEYCODE || keyCode === ARROW_RIGHT_KEYCODE) {\n            this._switchSelectionBetweenTimeparts(event);\n        }\n    }\n\n    registerOnChange(fn: (value: Date) => void): void {\n        this._onChange = fn;\n    }\n\n    registerOnTouched(fn: () => void): void {\n        this._onTouched = fn;\n    }\n\n    /** Does some manual dirty checking on the native input `value` property. */\n    private _dirtyCheckNativeValue() {\n        const newValue = this.value;\n\n        if (this._previousNativeValue !== newValue) {\n            this._previousNativeValue = newValue;\n            this.stateChanges.next();\n        }\n    }\n\n    /** Checks whether the input is invalid based on the native validation. */\n    private _isBadInput(): boolean {\n        const validity = (<HTMLInputElement> this._elementRef.nativeElement).validity;\n\n        return validity && validity.badInput;\n    }\n\n    private _applyInputChanges(applyParams: {\n        changedTime?: Date;\n        doTimestringReformat?: boolean;\n    } = {}): void {\n        const { changedTime, doTimestringReformat = true } = applyParams;\n\n        const timeToApply: Date | undefined = changedTime ||\n            this._getDateFromTimeString(this._elementRef.nativeElement.value);\n        this._currentDTimeInput = timeToApply;\n\n        if (doTimestringReformat && timeToApply !== undefined) {\n            const selectionStart: number = this._elementRef.nativeElement.selectionStart;\n            const selectionEnd: number = this._elementRef.nativeElement.selectionEnd;\n            this._renderer.setProperty(\n                this._elementRef.nativeElement,\n                'value',\n                this._getTimeStringFromDate(timeToApply, this.timeFormat));\n            this._elementRef.nativeElement.selectionStart = selectionStart;\n            this._elementRef.nativeElement.selectionEnd = selectionEnd;\n        }\n\n        (<FormControl> this.ngControl.control).updateValueAndValidity();\n        const result = this.ngControl.errors === null && timeToApply !== undefined ? timeToApply : null;\n        this._onChange(result);\n        this.stateChanges.next();\n    }\n\n    private _upDownTimeByArrowKeys(event: KeyboardEvent): void {\n        event.preventDefault();\n\n        let changedTime: Date | undefined = this._currentDTimeInput;\n        if (changedTime !== undefined) {\n            const cursorPos = this._elementRef.nativeElement.selectionStart;\n\n            const modifiedTimePart = this._getTimeEditMetrics(cursorPos)\n                .modifiedTimePart;\n            const keyCode: string = this._getKeyCode(event);\n            if (keyCode === ARROW_UP_KEYCODE) { changedTime = this._incrementTime(changedTime, modifiedTimePart); }\n            if (keyCode === ARROW_DOWN_KEYCODE) { changedTime = this._decrementTime(changedTime, modifiedTimePart); }\n            this._applyInputChanges({ changedTime });\n            this._createSelectionOfTimeComponentInInput(cursorPos);\n        }\n    }\n\n    private _switchSelectionBetweenTimeparts(event: KeyboardEvent): void {\n        const changedTime: Date | undefined = this._currentDTimeInput;\n        const keyCode: string = this._getKeyCode(event);\n\n        if (changedTime !== undefined) {\n            let cursorPos: number = this._elementRef.nativeElement.selectionStart;\n            if (keyCode === ARROW_LEFT_KEYCODE) {\n                cursorPos = this._getCursorPositionOfPrevTimePartStart(cursorPos, this._elementRef.nativeElement.value);\n            } else if (keyCode === ARROW_RIGHT_KEYCODE) {\n                cursorPos = this._getCursorPositionOfNextTimePartStart(cursorPos, this._elementRef.nativeElement.value);\n            }\n            this._createSelectionOfTimeComponentInInput(cursorPos);\n        }\n    }\n\n    /**\n     * @description Microsoft EDGE doesn't support KeyboaedEvent.code thus we need this helper\n     */\n    private _getKeyCode(event: KeyboardEvent): string {\n        return event.code || event.key;\n    }\n\n    private _createSelectionOfTimeComponentInInput(cursorPos: number): void {\n        setTimeout(() => {\n            const newEditParams = this._getTimeEditMetrics(cursorPos);\n            this._elementRef.nativeElement.selectionStart = newEditParams.cursorStartPosition;\n            this._elementRef.nativeElement.selectionEnd = newEditParams.cursorEndPosition;\n        });\n    }\n\n    private _incrementTime(dateVal: Date,\n                           whatToIncrement: TimeParts = TimeParts.seconds): Date {\n        let { hours, minutes, seconds } = this._getTimeDigitsFromDate(dateVal);\n\n        switch (whatToIncrement) {\n            case TimeParts.hours:\n                hours++;\n                break;\n            case TimeParts.minutes:\n                minutes++;\n                break;\n            case TimeParts.seconds:\n                seconds++;\n                break;\n            default:\n        }\n\n        if (seconds > SECONDS_PER_MINUTE) { seconds = 0; }\n\n        if (minutes > MINUTES_PER_HOUR) { minutes = 0; }\n\n        if (hours > HOURS_PER_DAY) { hours = 0; }\n\n        return <Date> this._getDateFromTimeDigits(hours, minutes, seconds);\n    }\n\n    /**\n     * @description Decrement part of time\n     */\n    private _decrementTime(dateVal: Date,\n                           whatToDecrement: TimeParts = TimeParts.seconds): Date {\n        let { hours, minutes, seconds } = this._getTimeDigitsFromDate(dateVal);\n\n        switch (whatToDecrement) {\n            case TimeParts.hours:\n                hours--;\n                break;\n            case TimeParts.minutes:\n                minutes--;\n                break;\n            case TimeParts.seconds:\n                seconds--;\n                break;\n            default:\n        }\n\n        if (seconds < 0) { seconds = SECONDS_PER_MINUTE; }\n\n        if (minutes < 0) { minutes = MINUTES_PER_HOUR; }\n\n        if (hours < 0) { hours = HOURS_PER_DAY; }\n\n        return <Date> this._getDateFromTimeDigits(hours, minutes, seconds);\n    }\n\n    private _getCursorPositionOfPrevTimePartStart(cursorPos: number, timeString: string): number {\n        return cursorPos === 0 ? timeString.length : cursorPos - 1;\n    }\n\n    private _getCursorPositionOfNextTimePartStart(cursorPos: number,\n                                                  timeString: string,\n                                                  timeDevider: string = ':'): number {\n        const nextDividerPos: number = timeString.indexOf(timeDevider, cursorPos);\n\n        return nextDividerPos !== undefined ? nextDividerPos + 1 : 0;\n    }\n\n    /**\n     * @description Get params for arrow-keys (up/down) time valie edit.\n     * @param cursorPosition Current cursor position in timeString\n     */\n    private _getTimeEditMetrics(cursorPosition: number): {\n        modifiedTimePart: TimeParts;\n        cursorStartPosition: number;\n        cursorEndPosition: number;\n    } {\n        const timeString: string = this._elementRef.nativeElement.value;\n        let modifiedTimePart: TimeParts;\n        let cursorStartPosition: number;\n        let cursorEndPosition: number;\n        const hoursIndex = 0;\n        const minutesIndex = timeString.indexOf(':', hoursIndex + 1);\n        const secondsIndex = minutesIndex !== -1 ? timeString.indexOf(':', minutesIndex + 1) : -1;\n\n        if (secondsIndex !== -1 && cursorPosition > secondsIndex) {\n            modifiedTimePart = TimeParts.seconds;\n            cursorStartPosition = secondsIndex + 1;\n            cursorEndPosition = timeString.length;\n        } else if (minutesIndex !== -1 && cursorPosition > minutesIndex) {\n            modifiedTimePart = TimeParts.minutes;\n            cursorStartPosition = minutesIndex + 1;\n            cursorEndPosition = secondsIndex > -1 ? secondsIndex : timeString.length;\n        } else {\n            modifiedTimePart = TimeParts.hours;\n            cursorStartPosition = hoursIndex;\n            cursorEndPosition = minutesIndex !== -1 ? minutesIndex : timeString.length;\n        }\n\n        return {\n            modifiedTimePart,\n            cursorStartPosition,\n            cursorEndPosition\n        };\n    }\n\n    /**\n     * @description Create time string for displaying inside input element of UI\n     */\n    private _getTimeStringFromDate(tempVal: Date,\n                                   timeFormat: TimeFormats = DEFAULT_TIME_FORMAT): string {\n        const hours: string = this._getNumberWithLeadingZero(tempVal.getHours());\n        const minutes: string = this._getNumberWithLeadingZero(tempVal.getMinutes());\n        const seconds: string = this._getNumberWithLeadingZero(tempVal.getSeconds());\n\n        const formattedTimeGenerators = {\n            [TimeFormats.HHmm]: () => `${hours}:${minutes}`,\n            [TimeFormats.HHmmss]: () => `${hours}:${minutes}:${seconds}`\n        };\n\n        return formattedTimeGenerators[timeFormat]();\n    }\n\n    private _getParsedTimeParts(timeString: string): {\n        hoursOnly: any;\n        hoursAndMinutes: any;\n        hoursAndMinutesAndSeconds: any;\n    } {\n        const hoursAndMinutesAndSeconds = timeString.match(HOURS_MINUTES_SECONDS_REGEXP);\n        const hoursAndMinutes = timeString.match(HOURS_MINUTES_REGEXP);\n        const hoursOnly = timeString.match(HOURS_ONLY_REGEXP);\n\n        return {\n            hoursOnly,\n            hoursAndMinutes,\n            hoursAndMinutesAndSeconds\n        };\n    }\n\n    /**\n     * @description Create Date object from separate parts of time\n     */\n    private _getDateFromTimeDigits(hours: number, minutes: number, seconds: number = 0): Date | undefined {\n        return this._getDateFromTimeString(`${hours}:${minutes}:${seconds}`);\n    }\n\n    private _getDateFromTimeString(timeString: string | undefined): Date | undefined {\n        // TODO Use moment-js\n        if (timeString === undefined) { return; }\n\n        const {\n            hoursOnly,\n            hoursAndMinutes,\n            hoursAndMinutesAndSeconds\n        } = this._getParsedTimeParts(timeString);\n\n        if (timeString.trim().length === 0 ||\n            hoursOnly === null && hoursAndMinutes === null && hoursAndMinutesAndSeconds === null) {\n            return;\n        }\n\n        // tslint:disable no-magic-numbers\n        let hours: number = 0;\n        let minutes: number = 0;\n        let seconds: number = 0;\n\n        if (hoursOnly) {\n            hours = Number(hoursOnly[1]);\n        } else if (hoursAndMinutes) {\n            hours = Number(hoursAndMinutes[1]);\n            minutes = Number(hoursAndMinutes[2]);\n        } else if (hoursAndMinutesAndSeconds) {\n            hours = Number(hoursAndMinutesAndSeconds[1]);\n            minutes = Number(hoursAndMinutesAndSeconds[2]);\n            seconds = Number(hoursAndMinutesAndSeconds[3]);\n        }\n        // const timestamp: number = Date.parse(fullDateString);\n        const resultDate: Date = new Date(1970, 0, 1, hours, minutes, seconds);\n        // tslint:enable no-magic-numbers\n\n        return isNaN(resultDate.getTime()) ? undefined : resultDate;\n    }\n\n    private _getNumberWithLeadingZero(digit: number): string {\n        const MAX_DIGIT_WITH_LEADING_ZERO: number = 9;\n\n        return digit > MAX_DIGIT_WITH_LEADING_ZERO ? `${digit}` : `0${digit}`;\n    }\n\n    private _getTimeDigitsFromDate(dateVal: Date): { hours: number; minutes: number; seconds: number } {\n        return {\n            hours: dateVal.getHours(),\n            minutes: dateVal.getMinutes(),\n            seconds: dateVal.getSeconds()\n        };\n    }\n\n    private _parseValidator(): ValidationErrors | null {\n        return this._currentDTimeInput === undefined ?\n            { mcTimepickerParse: { text: this._elementRef.nativeElement.value } } :\n            null;\n    }\n\n    private _minTimeValidator(): ValidationErrors | null {\n\n        if (this._currentDTimeInput !== undefined &&\n            this._minDTime !== undefined &&\n            this._isTimeLowerThenMin(this._currentDTimeInput)) {\n            return { mcTimepickerLowerThenMintime: { text: this._elementRef.nativeElement.value } };\n        }\n\n        return null;\n    }\n\n    private _maxTimeValidator(): ValidationErrors | null {\n        if (this._currentDTimeInput !== undefined &&\n            this._maxDTime !== undefined &&\n            this._isTimeGreaterThenMax(this._currentDTimeInput)) {\n            return { mcTimepickerHigherThenMaxtime: { text: this._elementRef.nativeElement.value } };\n        }\n\n        return null;\n    }\n\n    private _isTimeLowerThenMin(timeToCompare: Date): boolean {\n        return timeToCompare.getTime() - (<Date> this._minDTime).getTime() < 0;\n    }\n\n    private _isTimeGreaterThenMax(timeToCompare: Date): boolean {\n        return timeToCompare.getTime() - (<Date> this._maxDTime).getTime() >= 0;\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\n\nimport { A11yModule } from '@ptsecurity/cdk/a11y';\nimport { PlatformModule } from '@ptsecurity/cdk/platform';\n\nimport { McTimepicker } from './timepicker';\n\n\n@NgModule({\n    imports: [\n        CommonModule,\n        A11yModule,\n        PlatformModule,\n        FormsModule\n    ],\n    declarations: [\n        McTimepicker\n    ],\n    exports: [\n        McTimepicker\n    ]\n})\nexport class McTimepickerModule {}\n","import {\n    animate,\n    AnimationTriggerMetadata,\n    state,\n    style,\n    transition,\n    trigger,\n    query,\n    animateChild,\n    group\n} from '@angular/animations';\n\n\n/**\n * The following are all the animations for the mat-select component, with each\n * const containing the metadata for one animation.\n *\n * The values below match the implementation of the AngularJS Material mat-select animation.\n */\nexport const mcSelectAnimations: {\n    readonly transformPanel: AnimationTriggerMetadata;\n    readonly fadeInContent: AnimationTriggerMetadata;\n} = {\n    /**\n     * This animation transforms the select's overlay panel on and off the page.\n     *\n     * When the panel is attached to the DOM, it expands its width by the amount of padding, scales it\n     * up to 100% on the Y axis, fades in its border, and translates slightly up and to the\n     * side to ensure the option text correctly overlaps the trigger text.\n     *\n     * When the panel is removed from the DOM, it simply fades out linearly.\n     */\n    transformPanel: trigger('transformPanel', [\n        state('void', style({\n            transform: 'scaleY(0)',\n            minWidth: '100%',\n            opacity: 0\n        })),\n        transition('void => *', group([\n            query('@fadeInContent', animateChild()),\n            animate('150ms cubic-bezier(0.25, 0.8, 0.25, 1)')\n        ])),\n        transition('* => void', [\n            animate('250ms 100ms linear', style({ opacity: 0 }))\n        ])\n    ]),\n\n    /**\n     * This animation fades in the background color and text content of the\n     * select's options. It is time delayed to occur 100ms after the overlay\n     * panel has transformed in.\n     */\n    fadeInContent: trigger('fadeInContent', [\n        state('showing', style({ opacity: 1 })),\n        transition('void => showing', [\n            style({ opacity: 0 }),\n            animate('150ms 100ms cubic-bezier(0.55, 0, 0.55, 0.2)')\n        ])\n    ])\n};\n\n\n/**\n * @deprecated\n * @breaking-change 7.0.0\n */\nexport const transformPanel = mcSelectAnimations.transformPanel;\n\n/**\n * @deprecated\n * @breaking-change 7.0.0\n */\nexport const fadeInContent = mcSelectAnimations.fadeInContent;\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { OverlayModule } from '@ptsecurity/cdk/overlay';\nimport { McOptionModule } from '@ptsecurity/mosaic/core';\nimport { McFormFieldModule } from '@ptsecurity/mosaic/form-field';\nimport { McIconModule } from '@ptsecurity/mosaic/icon';\nimport { McTagModule } from '@ptsecurity/mosaic/tag';\n\nimport { MC_SELECT_SCROLL_STRATEGY_PROVIDER, McSelect, McSelectTrigger } from './select.component';\n\n\n@NgModule({\n    imports: [\n        CommonModule,\n        OverlayModule,\n        McOptionModule,\n        McIconModule,\n        McTagModule\n    ],\n    exports: [McFormFieldModule, McSelect, McSelectTrigger, McOptionModule, CommonModule],\n    declarations: [McSelect, McSelectTrigger],\n    providers: [MC_SELECT_SCROLL_STRATEGY_PROVIDER]\n})\nexport class McSelectModule {}\n","import {\n    AfterContentInit,\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component, ContentChildren, Directive, ElementRef, EventEmitter, forwardRef,\n    Input, OnDestroy, OnInit, Optional, Output, QueryList,\n    ViewChild,\n    ViewEncapsulation\n} from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\n\nimport { UniqueSelectionDispatcher } from '@ptsecurity/cdk/collections';\n\nimport {\n    CanColor, CanColorCtor,\n    CanDisable, CanDisableCtor,\n    HasTabIndex, HasTabIndexCtor,\n    mixinColor,\n    mixinDisabled,\n    mixinTabIndex,\n    toBoolean\n} from '@ptsecurity/mosaic/core';\n\n\n// Increasing integer for generating unique ids for radio components.\nlet nextUniqueId = 0;\n\n/** Change event object emitted by McRadio. */\nexport class McRadioChange {\n    constructor(\n        /** The McRadioButton that emits the change event. */\n        public source: McRadioButton,\n        /** The value of the McRadioButton. */\n        public value: any) {}\n}\n\n// Boilerplate for applying mixins to McRadioGroup.\n/** @docs-private */\nexport class McRadioGroupBase {}\nexport const _McRadioGroupMixinBase: CanDisableCtor & typeof McRadioGroupBase = mixinDisabled(McRadioGroupBase);\n\n/**\n * Provider Expression that allows mc-radio-group to register as a ControlValueAccessor. This\n * allows it to support [(ngModel)] and ngControl.\n * @docs-private\n */\nexport const MC_RADIO_GROUP_CONTROL_VALUE_ACCESSOR: any = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => McRadioGroup),\n    multi: true\n};\n\n@Directive({\n    selector: 'mc-radio-group',\n    exportAs: 'mcRadioGroup',\n    providers: [MC_RADIO_GROUP_CONTROL_VALUE_ACCESSOR],\n    host: {\n        role: 'radiogroup',\n        class: 'mc-radio-group'\n    },\n    inputs: ['disabled']\n})\nexport class McRadioGroup extends _McRadioGroupMixinBase\n    implements AfterContentInit, ControlValueAccessor, CanDisable {\n\n    /** Name of the radio button group. All radio buttons inside this group will use this name. */\n    @Input()\n    get name(): string { return this._name; }\n    set name(value: string) {\n        this._name = value;\n        this.updateRadioButtonNames();\n    }\n\n    /** Whether the labels should appear after or before the radio-buttons. Defaults to 'after' */\n    @Input()\n    get labelPosition(): 'before' | 'after' {\n        return this._labelPosition;\n    }\n    set labelPosition(v) {\n        this._labelPosition = v === 'before' ? 'before' : 'after';\n        this.markRadiosForCheck();\n    }\n\n    /** Value of the radio button. */\n    @Input()\n    get value(): any { return this._value; }\n    set value(newValue: any) {\n        if (this._value !== newValue) {\n            // Set this before proceeding to ensure no circular loop occurs with selection.\n            this._value = newValue;\n\n            this.updateSelectedRadioFromValue();\n            this.checkSelectedRadioButton();\n        }\n    }\n\n    /** Whether the radio button is selected. */\n    @Input()\n    get selected() { return this._selected; }\n    set selected(selected: McRadioButton | null) {\n        this._selected = selected;\n        this.value = selected ? selected.value : null;\n        this.checkSelectedRadioButton();\n    }\n\n    /** Whether the radio group is disabled */\n    @Input()\n    get disabled(): boolean { return this._disabled; }\n    set disabled(value) {\n        this._disabled = toBoolean(value);\n        this.markRadiosForCheck();\n    }\n\n    /** Whether the radio group is required */\n    @Input()\n    get required(): boolean { return this._required; }\n    set required(value: boolean) {\n        this._required = toBoolean(value);\n        this.markRadiosForCheck();\n    }\n\n    /**\n     * Event emitted when the group value changes.\n     * Change events are only emitted when the value changes due to user interaction with\n     * a radio button (the same behavior as `<input type-\"radio\">`).\n     */\n    @Output() readonly change: EventEmitter<McRadioChange> = new EventEmitter<McRadioChange>();\n\n    /** Child radio buttons. */\n    @ContentChildren(forwardRef(() => McRadioButton), { descendants: true })\n    _radios: QueryList<McRadioButton>;\n\n    /**\n     * Selected value for group. Should equal the value of the selected radio button if there *is*\n     * a corresponding radio button with a matching value. If there is *not* such a corresponding\n     * radio button, this value persists to be applied in case a new radio button is added with a\n     * matching value.\n     */\n    private _value: any = null;\n\n    /** The HTML name attribute applied to radio buttons in this group. */\n    private _name: string = `mc-radio-group-${nextUniqueId++}`;\n\n    /** The currently selected radio button. Should match value. */\n    private _selected: McRadioButton | null = null;\n\n    /** Whether the `value` has been set to its initial value. */\n    private _isInitialized: boolean = false;\n\n    /** Whether the labels should appear after or before the radio-buttons. Defaults to 'after' */\n    private _labelPosition: 'before' | 'after' = 'after';\n\n    /** Whether the radio group is disabled. */\n    private _disabled: boolean = false;\n\n    /** Whether the radio group is required. */\n    private _required: boolean = false;\n\n    constructor(\n        private readonly _changeDetector: ChangeDetectorRef\n    ) {\n        super();\n    }\n\n    /** The method to be called in order to update ngModel */\n    // tslint:disable-next-line\n    controlValueAccessorChangeFn: (value: any) => void = () => {};\n\n    /**\n     * onTouch function registered via registerOnTouch (ControlValueAccessor).\n     * @docs-private\n     */\n    // tslint:disable-next-line\n    onTouched: () => any = () => {};\n\n    checkSelectedRadioButton() {\n        if (this._selected && !this._selected.checked) {\n            this._selected.checked = true;\n        }\n    }\n\n    /**\n     * Initialize properties once content children are available.\n     * This allows us to propagate relevant attributes to associated buttons.\n     */\n    ngAfterContentInit() {\n        // Mark this component as initialized in AfterContentInit because the initial value can\n        // possibly be set by NgModel on McRadioGroup, and it is possible that the OnInit of the\n        // NgModel occurs *after* the OnInit of the McRadioGroup.\n        this._isInitialized = true;\n    }\n\n    /**\n     * Mark this group as being \"touched\" (for ngModel). Meant to be called by the contained\n     * radio buttons upon their blur.\n     */\n    touch() {\n        if (this.onTouched) {\n            this.onTouched();\n        }\n    }\n\n    /** Dispatch change event with current selection and group value. */\n    emitChangeEvent(): void {\n        if (this._isInitialized) {\n            this.change.emit(new McRadioChange(this._selected!, this._value));\n        }\n    }\n\n    markRadiosForCheck() {\n        if (this._radios) {\n            this._radios.forEach((radio) => radio.markForCheck());\n        }\n    }\n\n    /**\n     * Sets the model value. Implemented as part of ControlValueAccessor.\n     */\n    writeValue(value: any) {\n        this.value = value;\n        this._changeDetector.markForCheck();\n    }\n\n    /**\n     * Registers a callback to be triggered when the model value changes.\n     * Implemented as part of ControlValueAccessor.\n     * @param fn Callback to be registered.\n     */\n    registerOnChange(fn: (value: any) => void) {\n        this.controlValueAccessorChangeFn = fn;\n    }\n\n    /**\n     * Registers a callback to be triggered when the control is touched.\n     * Implemented as part of ControlValueAccessor.\n     * @param fn Callback to be registered.\n     */\n    registerOnTouched(fn: any) {\n        this.onTouched = fn;\n    }\n\n    /**\n     * Sets the disabled state of the control. Implemented as a part of ControlValueAccessor.\n     * @param isDisabled Whether the control should be disabled.\n     */\n    setDisabledState(isDisabled: boolean) {\n        this.disabled = isDisabled;\n        this._changeDetector.markForCheck();\n    }\n\n    private updateRadioButtonNames(): void {\n        if (this._radios) {\n            this._radios.forEach((radio) => {\n                radio.name = this.name;\n            });\n        }\n    }\n\n    /** Updates the `selected` radio button from the internal _value state. */\n    private updateSelectedRadioFromValue(): void {\n        // If the value already matches the selected radio, do nothing.\n        const isAlreadySelected = this._selected !== null && this._selected.value === this._value;\n\n        if (this._radios != null && !isAlreadySelected) {\n            this._selected = null;\n            this._radios.forEach((radio) => {\n                radio.checked = this.value === radio.value;\n                if (radio.checked) {\n                    this._selected = radio;\n                }\n            });\n        }\n    }\n}\n\n\n// Boilerplate for applying mixins to McRadioButton.\n/** @docs-private */\nexport class McRadioButtonBase {\n    // Since the disabled property is manually defined for the McRadioButton and isn't set up in\n    // the mixin base class. To be able to use the tabindex mixin, a disabled property must be\n    // defined to properly work.\n    disabled: boolean;\n\n    constructor(public _elementRef: ElementRef) {}\n}\n\nexport const _McRadioButtonMixinBase:\n    CanColorCtor &\n    HasTabIndexCtor &\n    typeof McRadioButtonBase =\n        mixinColor(mixinTabIndex(McRadioButtonBase));\n\n\n@Component({\n    selector: 'mc-radio-button',\n    templateUrl: 'radio.component.html',\n    styleUrls: ['radio.css'],\n    inputs: ['color', 'tabIndex'],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    exportAs: 'mcRadioButton',\n    host: {\n        class: 'mc-radio-button',\n        '[attr.id]': 'id',\n        '[class.mc-radio-checked]': 'checked',\n        '[class.mc-radio-disabled]': 'disabled',\n        '(focus)': '_inputElement.nativeElement.focus()'\n    }\n})\nexport class McRadioButton extends _McRadioButtonMixinBase\n    implements OnInit, OnDestroy, CanColor, HasTabIndex {\n\n    private readonly _uniqueId: string = `mc-radio-${++nextUniqueId}`;\n\n    /* tslint:disable:member-ordering */\n\n    /** The unique ID for the radio button. */\n    @Input() id: string = this._uniqueId;\n\n    /** Analog to HTML 'name' attribute used to group radios for unique selection. */\n    @Input() name: string;\n\n    /** Used to set the 'aria-label' attribute on the underlying input element. */\n    @Input('aria-label') ariaLabel: string;\n\n    /** The 'aria-labelledby' attribute takes precedence as the element's text alternative. */\n    @Input('aria-labelledby') ariaLabelledby: string;\n\n    /** The 'aria-describedby' attribute is read after the element's label and field type. */\n    @Input('aria-describedby') ariaDescribedby: string;\n\n    /** Whether this radio button is checked. */\n    @Input()\n    get checked(): boolean { return this._checked; }\n    set checked(value: boolean) {\n        const newCheckedState = toBoolean(value);\n\n        if (this._checked !== newCheckedState) {\n            this._checked = newCheckedState;\n\n            if (newCheckedState && this.radioGroup && this.radioGroup.value !== this.value) {\n                this.radioGroup.selected = this;\n            } else if (!newCheckedState && this.radioGroup && this.radioGroup.value === this.value) {\n                // When unchecking the selected radio button, update the selected radio\n                // property on the group.\n                this.radioGroup.selected = null;\n            }\n\n            if (newCheckedState) {\n                // Notify all radio buttons with the same name to un-check.\n                this._radioDispatcher.notify(this.id, this.name);\n            }\n            this._changeDetector.markForCheck();\n        }\n    }\n\n    /** The value of this radio button. */\n    @Input()\n    get value(): any { return this._value; }\n    set value(value: any) {\n        if (this._value !== value) {\n            this._value = value;\n            if (this.radioGroup != null) {\n                if (!this.checked) {\n                    // Update checked when the value changed to match the radio group's value\n                    this.checked = this.radioGroup.value === value;\n                }\n                if (this.checked) {\n                    this.radioGroup.selected = this;\n                }\n            }\n        }\n    }\n\n    /** Whether the radio button is disabled. */\n    @Input()\n    get disabled(): boolean {\n        return this._disabled || (this.radioGroup != null && this.radioGroup.disabled);\n    }\n    set disabled(value: boolean) {\n        const newDisabledState = toBoolean(value);\n\n        if (this._disabled !== newDisabledState) {\n\n            this._disabled = newDisabledState;\n            this._changeDetector.markForCheck();\n        }\n    }\n\n    /** Whether the radio button is required. */\n    @Input()\n    get required(): boolean {\n        return this._required || (this.radioGroup && this.radioGroup.required);\n    }\n    set required(value: boolean) {\n        this._required = toBoolean(value);\n    }\n\n    /** Whether the label should appear after or before the radio button. Defaults to 'after' */\n    @Input()\n    get labelPosition(): 'before' | 'after' {\n        return this._labelPosition || (this.radioGroup && this.radioGroup.labelPosition) || 'after';\n    }\n    set labelPosition(value) {\n        this._labelPosition = value;\n    }\n    private _labelPosition: 'before' | 'after';\n\n    /** The native `<input type=radio>` element */\n    @ViewChild('input') _inputElement: ElementRef;\n\n    /**\n     * Event emitted when the checked state of this radio button changes.\n     * Change events are only emitted when the value changes due to user interaction with\n     * the radio button (the same behavior as `<input type-\"radio\">`).\n     */\n    @Output() readonly change: EventEmitter<McRadioChange> = new EventEmitter<McRadioChange>();\n\n    /** The parent radio group. May or may not be present. */\n    radioGroup: McRadioGroup;\n\n    @Input()\n    isFocused: boolean = false;\n\n    /** ID of the native input element inside `<mc-radio-button>` */\n    get inputId(): string { return `${this.id || this._uniqueId}-input`; }\n\n    /** Whether this radio is checked. */\n    private _checked: boolean = false;\n\n    /** Whether this radio is disabled. */\n    private _disabled: boolean;\n\n    /** Whether this radio is required. */\n    private _required: boolean;\n\n    /** Value assigned to this radio. */\n    private _value: any = null;\n\n    /** Unregister function for _radioDispatcher */\n    // tslint:disable-next-line\n    private readonly removeUniqueSelectionListener: () => void = () => {};\n\n    constructor(\n        @Optional() radioGroup: McRadioGroup,\n        elementRef: ElementRef,\n        private readonly _changeDetector: ChangeDetectorRef,\n        private readonly _radioDispatcher: UniqueSelectionDispatcher\n    ) {\n\n        super(elementRef);\n\n        this.radioGroup = radioGroup;\n\n        this.removeUniqueSelectionListener =\n            _radioDispatcher.listen((id: string, name: string) => {\n                if (id !== this.id && name === this.name) {\n                    this.checked = false;\n                }\n            });\n    }\n\n    ngOnInit() {\n        if (this.radioGroup) {\n            // If the radio is inside a radio group, determine if it should be checked\n            this.checked = this.radioGroup.value === this._value;\n            // Copy name from parent radio group\n            this.name = this.radioGroup.name;\n        }\n    }\n\n    ngOnDestroy() {\n        this.removeUniqueSelectionListener();\n    }\n\n    /** Focuses the radio button. */\n    // tslint:disable-next-line\n    focus(): void {}\n\n    /**\n     * Marks the radio button as needing checking for change detection.\n     * This method is exposed because the parent radio group will directly\n     * update bound properties of the radio button.\n     */\n    markForCheck() {\n        // When group value changes, the button will not be notified. Use `markForCheck` to explicit\n        // update radio button's status\n        this._changeDetector.markForCheck();\n    }\n\n    onInputClick(event: Event) {\n        // We have to stop propagation for click events on the visual hidden input element.\n        // By default, when a user clicks on a label element, a generated click event will be\n        // dispatched on the associated input element. Since we are using a label element as our\n        // root container, the click event on the `radio-button` will be executed twice.\n        // The real click event will bubble up, and the generated click event also tries to bubble up.\n        // This will lead to multiple click events.\n        // Preventing bubbling for the second event will solve that issue.\n        event.stopPropagation();\n    }\n\n    onInputChange(event: Event) {\n        // We always have to stop propagation on the change event.\n        // Otherwise the change event, from the input element, will bubble up and\n        // emit its event object to the `change` output.\n        event.stopPropagation();\n\n        const groupValueChanged = this.radioGroup && this.value !== this.radioGroup.value;\n        this.checked = true;\n        this.emitChangeEvent();\n\n        if (this.radioGroup) {\n            this.radioGroup.controlValueAccessorChangeFn(this.value);\n            this.radioGroup.touch();\n            if (groupValueChanged) {\n                this.radioGroup.emitChangeEvent();\n            }\n        }\n    }\n\n    /** Dispatch change event with current value. */\n    private emitChangeEvent(): void {\n        this.change.emit(new McRadioChange(this, this._value));\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { A11yModule } from '@ptsecurity/cdk/a11y';\nimport { McCommonModule } from '@ptsecurity/mosaic/core';\n\nimport { McRadioButton, McRadioGroup } from './radio.component';\n\n\n@NgModule({\n    imports: [CommonModule, A11yModule, McCommonModule],\n    exports: [McRadioGroup, McRadioButton],\n    declarations: [McRadioGroup, McRadioButton]\n})\nexport class McRadioModule {\n}\n","import { Directive, Input } from '@angular/core';\n\nimport { CdkTreeNodeDef } from '@ptsecurity/cdk/tree';\n\n\n@Directive({\n    selector: '[mcTreeNodeDef]',\n    inputs: ['when: mcTreeNodeDefWhen'],\n    providers: [{ provide: CdkTreeNodeDef, useExisting: McTreeNodeDef }]\n})\nexport class McTreeNodeDef<T> extends CdkTreeNodeDef<T> {\n    @Input('mcTreeNode') data: T;\n}\n","import { Directive, Input, OnInit } from '@angular/core';\nimport { CdkTreeNodePadding } from '@ptsecurity/cdk/tree';\n\n\n@Directive({\n    selector: '[mcTreeNodePadding]',\n    providers: [{ provide: CdkTreeNodePadding, useExisting: McTreeNodePadding }]\n})\nexport class McTreeNodePadding<T> extends CdkTreeNodePadding<T> implements OnInit {\n    get leftPadding(): number {\n        return (this._withIcon ? 0 : this._iconWidth) + this._baseLeftPadding;\n    }\n\n    _baseLeftPadding: number = 6;\n    _iconWidth: number = 20;\n    _indent: number = 16;\n\n    @Input('mcTreeNodePadding') level: number;\n\n    @Input('mcTreeNodePaddingIndent') indent: number;\n\n    _withIcon: boolean;\n\n    _paddingIndent(): string | null {\n        const nodeLevel = (this._treeNode.data && this._tree.treeControl.getLevel)\n            ? this._tree.treeControl.getLevel(this._treeNode.data)\n            : null;\n\n        const level = this._level || nodeLevel;\n\n        return level ? `${(level * this._indent) + this.leftPadding}px` : `${this._baseLeftPadding}px`;\n    }\n\n    ngOnInit(): void {\n        this._withIcon = this._tree.treeControl.isExpandable(this._treeNode.data);\n        this._setPadding();\n    }\n}\n","import {\n    AfterContentInit,\n    Attribute,\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component, ContentChildren, EventEmitter, forwardRef, Input, IterableDiffer,\n    IterableDiffers, Output, QueryList,\n    ViewChild,\n    ViewEncapsulation,\n    Directive, ElementRef, Inject\n} from '@angular/core';\nimport { NodeDef, ViewData } from '@angular/core/src/view';\n\nimport { SelectionModel } from '@ptsecurity/cdk/collections';\nimport { CdkTreeNode, CdkTree, CdkTreeNodeOutlet } from '@ptsecurity/cdk/tree';\n\nimport {\n    CanDisable, CanDisableCtor,\n    HasTabIndex,\n    HasTabIndexCtor,\n    mixinDisabled,\n    mixinTabIndex,\n    toBoolean\n} from '@ptsecurity/mosaic/core';\n\nimport { FocusKeyManager } from '@ptsecurity/cdk/a11y';\n\nimport { END, ENTER, HOME, LEFT_ARROW, PAGE_DOWN, PAGE_UP, RIGHT_ARROW, SPACE } from '@ptsecurity/cdk/keycodes';\n\n\n/**\n * Wrapper for the CdkTree node with Material design styles.\n */\n@Directive({\n    exportAs: 'mcTreeNodeOption',\n    selector: 'mc-tree-node-option',\n    host: {\n        tabindex: '-1',\n        '[class.mc-selected]': 'selected',\n        '[class.mc-focused]': '_hasFocus',\n        '[attr.aria-expanded]': 'isExpanded',\n        '[attr.aria-level]': 'role === \"treeitem\" ? level : null',\n        class: 'mc-tree-node',\n\n        '(focus)': '_handleFocus()',\n        '(blur)': '_handleBlur()',\n\n        '(click)': '_handleClick()'\n    },\n    providers: [\n        { provide: CdkTreeNode, useExisting: McTreeNodeOption }\n    ]\n})\nexport class McTreeNodeOption<T> extends CdkTreeNode<T> implements CanDisable {\n    @Input() role: 'treeitem' | 'group' = 'treeitem';\n\n    @Input()\n    get disabled() {\n        return this._disabled;\n    }\n\n    set disabled(value: any) {\n        const newValue = toBoolean(value);\n\n        if (newValue !== this._disabled) {\n            this._disabled = newValue;\n        }\n    }\n\n    @Input()\n    get selected(): boolean {\n        return this.treeSelection.selectedOptions && this.treeSelection.selectedOptions.isSelected(this) || false;\n    }\n\n    set selected(value: boolean) {\n        const isSelected = toBoolean(value);\n\n        if (isSelected !== this._selected) {\n            this.setSelected(isSelected);\n\n            // this.treeSelection._reportValueChange();\n        }\n    }\n\n    private _hasFocus: boolean = false;\n\n    private _disabled: boolean = false;\n    private _selected: boolean = false;\n\n    constructor(\n        protected _elementRef: ElementRef,\n        @Inject(forwardRef(() => McTreeSelection))\n        protected treeSelection: McTreeSelection<T>\n    ) {\n        super(_elementRef, treeSelection);\n    }\n\n    focus(): void {\n        this._elementRef.nativeElement.focus();\n\n        this.treeSelection.setFocusedOption(this);\n    }\n\n    toggle(): void {\n        this.selected = !this.selected;\n    }\n\n    setSelected(selected: boolean) {\n        if (this._selected === selected || !this.treeSelection.selectedOptions) { return; }\n\n        this._selected = selected;\n\n        if (selected) {\n            this.treeSelection.selectedOptions.select(this);\n        } else {\n            this.treeSelection.selectedOptions.deselect(this);\n        }\n\n        // this._changeDetector.markForCheck();\n    }\n\n    _getHeight(): number {\n        return this._elementRef.nativeElement.getClientRects()[0].height;\n    }\n\n    _handleFocus(): void {\n        if (this.disabled || this._hasFocus) { return; }\n\n        this._hasFocus = true;\n    }\n\n    _handleBlur(): void {\n        this._hasFocus = false;\n    }\n\n    _handleClick(): void {\n        if (this.disabled) { return; }\n\n        this.treeSelection.setFocusedOption(this);\n    }\n}\n\nexport const _McTreeSelectionBase:\n    HasTabIndexCtor &\n    CanDisableCtor &\n    typeof CdkTree\n    = mixinTabIndex(mixinDisabled(CdkTree));\n\nexport class McTreeNavigationChange {\n    constructor(\n        public source: McTreeSelection<any>,\n        public option: McTreeNodeOption<any>\n    ) {}\n}\n\nexport class McTreeSelectionChange {\n    constructor(\n        public source: McTreeSelection<any>,\n        public option: McTreeNodeOption<any>\n    ) {}\n}\n\n@Component({\n    exportAs: 'mcTreeSelection',\n    selector: 'mc-tree-selection',\n    template: `<ng-container cdkTreeNodeOutlet></ng-container>`,\n    host: {\n        '[tabIndex]': 'tabIndex',\n        class: 'mc-tree-selection',\n        role: 'tree-selection',\n        '(keydown)': '_onKeyDown($event)',\n        '(window:resize)': 'updateScrollSize()'\n    },\n    styleUrls: ['./tree.css'],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    providers: [{ provide: CdkTree, useExisting: McTreeSelection }]\n})\nexport class McTreeSelection<T> extends _McTreeSelectionBase<T>\n    implements AfterContentInit, CanDisable, HasTabIndex {\n    // Outlets within the tree's template where the dataNodes will be inserted.\n    @ViewChild(CdkTreeNodeOutlet) _nodeOutlet: CdkTreeNodeOutlet;\n\n    @ContentChildren(forwardRef(() => McTreeNodeOption)) options: QueryList<McTreeNodeOption<T>>;\n\n    _keyManager: FocusKeyManager<McTreeNodeOption<T>>;\n\n    selectedOptions: SelectionModel<McTreeNodeOption<T>>;\n\n    _disabled: boolean = false;\n    tabIndex: number;\n    multiple: boolean;\n    autoSelect: boolean;\n    noUnselect: boolean;\n\n    // todo temporary solution\n    withShift: boolean;\n    withCtrl: boolean;\n\n    @Input()\n    get disabled(): boolean {\n        return this._disabled;\n    }\n\n    set disabled(rawValue: boolean) {\n        const value = toBoolean(rawValue);\n\n        if (this._disabled !== value) {\n            this._disabled = value;\n\n            if (this._disabled) {\n                console.log('need disable all options');\n            } else {\n                console.log('need enable all options');\n            }\n        }\n    }\n\n    @Output() readonly navigationChange = new EventEmitter<McTreeNavigationChange>();\n\n    @Output() readonly selectionChange = new EventEmitter<McTreeSelectionChange>();\n\n    constructor(\n        private _elementRef: ElementRef,\n        _differs: IterableDiffers,\n        _changeDetectorRef: ChangeDetectorRef,\n        @Attribute('tabindex') tabIndex: string,\n        @Attribute('multiple') multiple: string,\n        @Attribute('auto-select') autoSelect: string,\n        @Attribute('no-unselect') noUnselect: string\n    ) {\n        super(_differs, _changeDetectorRef);\n\n        this.tabIndex = parseInt(tabIndex) || 0;\n\n        this.multiple = multiple === null ? true : toBoolean(multiple);\n        this.autoSelect = autoSelect === null ? true : toBoolean(autoSelect);\n        this.noUnselect = noUnselect === null ? true : toBoolean(noUnselect);\n\n        this.selectedOptions = new SelectionModel<McTreeNodeOption<T>>(this.multiple);\n    }\n\n    _onKeyDown(event: KeyboardEvent) {\n        const keyCode = event.keyCode;\n        this.withShift = event.shiftKey;\n        this.withCtrl = event.ctrlKey;\n\n        switch (keyCode) {\n            case LEFT_ARROW:\n                if (this._keyManager.activeItem) {\n                    this.treeControl.collapse(this._keyManager.activeItem.data);\n                }\n\n                event.preventDefault();\n\n                break;\n            case RIGHT_ARROW:\n                if (this._keyManager.activeItem) {\n                    this.treeControl.expand(this._keyManager.activeItem.data);\n                }\n\n                event.preventDefault();\n\n                break;\n            case SPACE:\n            case ENTER:\n                this.toggleFocusedOption();\n                event.preventDefault();\n\n                break;\n            case HOME:\n                this._keyManager.setFirstItemActive();\n                event.preventDefault();\n\n                break;\n            case END:\n                this._keyManager.setLastItemActive();\n                event.preventDefault();\n\n                break;\n            case PAGE_UP:\n                this._keyManager.setPreviousPageItemActive();\n                event.preventDefault();\n\n                break;\n            case PAGE_DOWN:\n                this._keyManager.setNextPageItemActive();\n                event.preventDefault();\n\n                break;\n            default:\n                this._keyManager.onKeydown(event);\n        }\n    }\n\n    ngAfterContentInit(): void {\n        this._keyManager = new FocusKeyManager<McTreeNodeOption<T>>(this.options)\n            .withTypeAhead()\n            .withVerticalOrientation(true)\n            .withHorizontalOrientation(null);\n    }\n\n    updateScrollSize(): void {\n        if (!this.options.first) { return; }\n\n        this._keyManager.withScrollSize(Math.floor(this._getHeight() / this.options.first._getHeight()));\n    }\n\n    setFocusedOption(option: McTreeNodeOption<T>): void {\n        this._keyManager.updateActiveItem(option);\n\n        if (this.withShift && this.multiple) {\n            const previousIndex = this._keyManager.previousActiveItemIndex;\n            const activeIndex = this._keyManager.activeItemIndex;\n\n            if (previousIndex < activeIndex) {\n                this.options.forEach((item, index) => {\n                    if (index >= previousIndex && index <= activeIndex) { item.setSelected(true); }\n                });\n            } else {\n                this.options.forEach((item, index) => {\n                    if (index >= activeIndex && index <= previousIndex) { item.setSelected(true); }\n                });\n            }\n\n            this.withShift = false;\n        } else if (this.withCtrl) {\n            this.withCtrl = false;\n\n            if (!this._canDeselectLast(option)) { return; }\n\n            option.toggle();\n        } else {\n            if (this.autoSelect) {\n                this.options.forEach((item) => item.setSelected(false));\n                option.setSelected(true);\n            }\n        }\n\n        this._emitNavigationEvent(option);\n    }\n\n    // Toggles the selected state of the currently focused option.\n    toggleFocusedOption(): void {\n        const focusedIndex = this._keyManager.activeItemIndex;\n\n        if (focusedIndex != null && this._isValidIndex(focusedIndex)) {\n            const focusedOption: McTreeNodeOption<T> = this.options.toArray()[focusedIndex];\n\n            if (focusedOption && this._canDeselectLast(focusedOption)) {\n                focusedOption.toggle();\n\n                // Emit a change event because the focused option changed its state through user interaction.\n                this._emitChangeEvent(focusedOption);\n            }\n        }\n    }\n\n    renderNodeChanges(\n        data: T[],\n        dataDiffer: IterableDiffer<T> = this._dataDiffer,\n        viewContainer: any = this._nodeOutlet.viewContainer,\n        parentData?: T\n    ) {\n        super.renderNodeChanges(data, dataDiffer, viewContainer, parentData);\n\n        const arrayOfInstances = [];\n\n        viewContainer._embeddedViews.forEach((view: ViewData) => {\n            const viewDef = view.def;\n\n            viewDef.nodes.forEach((node: NodeDef) => {\n                if (viewDef.nodeMatchedQueries === node.matchedQueryIds) {\n                    const nodeData: any = view.nodes[node.nodeIndex];\n\n                    arrayOfInstances.push(nodeData.instance as never);\n                }\n            });\n        });\n\n        if (this.options) {\n            this.options.reset(arrayOfInstances);\n            this.options.notifyOnChanges();\n        }\n\n        this.updateScrollSize();\n    }\n\n    _getHeight(): number {\n        return this._elementRef.nativeElement.getClientRects()[0].height;\n    }\n\n    _emitNavigationEvent(option: McTreeNodeOption<T>): void {\n        this.navigationChange.emit(new McTreeNavigationChange(this, option));\n    }\n\n    _emitChangeEvent(option: McTreeNodeOption<T>): void {\n        this.selectionChange.emit(new McTreeNavigationChange(this, option));\n    }\n\n    /**\n     * Utility to ensure all indexes are valid.\n     * @param index The index to be checked.\n     * @returns True if the index is valid for our list of options.\n     */\n    private _isValidIndex(index: number): boolean {\n        return index >= 0 && index < this.options.length;\n    }\n\n    private _canDeselectLast(option: McTreeNodeOption<T>): boolean {\n        return !(this.noUnselect && this.selectedOptions.selected.length === 1 && option.selected);\n    }\n}\n\n","import { NgModule } from '@angular/core';\n\nimport { CommonModule } from '@angular/common';\nimport { CdkTreeModule } from '@ptsecurity/cdk/tree';\n\nimport { McTreeNodeDef } from './node';\nimport { McTreeNodePadding } from './padding';\nimport { McTreeSelection, McTreeNodeOption } from './tree-selection';\n\n\nconst MC_TREE_DIRECTIVES = [\n    McTreeNodeDef,\n    McTreeNodePadding,\n    McTreeSelection,\n    McTreeNodeOption\n];\n\n@NgModule({\n    imports: [CommonModule, CdkTreeModule],\n    exports: MC_TREE_DIRECTIVES,\n    declarations: MC_TREE_DIRECTIVES\n})\nexport class McTreeModule {}\n","import { ICollectionViewer, DataSource } from '@ptsecurity/cdk/collections';\nimport { FlatTreeControl, ITreeControl } from '@ptsecurity/cdk/tree';\nimport { BehaviorSubject, merge, Observable } from 'rxjs';\nimport { map, take } from 'rxjs/operators';\n\n\n/**\n * Tree flattener to convert a normal type of node to node with children & level information.\n * Transform nested nodes of type `T` to flattened nodes of type `F`.\n *\n * For example, the input data of type `T` is nested, and contains its children data:\n *   SomeNode: {\n *     key: 'Fruits',\n *     children: [\n *       NodeOne: {\n *         key: 'Apple',\n *       },\n *       NodeTwo: {\n *        key: 'Pear',\n *      }\n *    ]\n *  }\n *  After flattener flatten the tree, the structure will become\n *  SomeNode: {\n *    key: 'Fruits',\n *    expandable: true,\n *    level: 1\n *  },\n *  NodeOne: {\n *    key: 'Apple',\n *    expandable: false,\n *    level: 2\n *  },\n *  NodeTwo: {\n *   key: 'Pear',\n *   expandable: false,\n *   level: 2\n * }\n * and the output flattened type is `F` with additional information.\n */\nexport class McTreeFlattener<T, F> {\n\n    constructor(public transformFunction: (node: T, level: number) => F,\n                public getLevel: (node: F) => number,\n                public isExpandable: (node: F) => boolean,\n                public getChildren: (node: T) => Observable<T[]>) {\n    }\n\n    _flattenNode(node: T, level: number,\n                 resultNodes: F[], parentMap: boolean[]): F[] {\n        const flatNode = this.transformFunction(node, level);\n        resultNodes.push(flatNode);\n\n        if (this.isExpandable(flatNode)) {\n            this.getChildren(node).pipe(take(1)).subscribe((children) => {\n                children.forEach((child, index) => {\n                    const childParentMap: boolean[] = parentMap.slice();\n                    childParentMap.push(index !== children.length - 1);\n                    this._flattenNode(child, level + 1, resultNodes, childParentMap);\n                });\n            });\n        }\n\n        return resultNodes;\n    }\n\n    /**\n     * Flatten a list of node type T to flattened version of node F.\n     * Please note that type T may be nested, and the length of `structuredData` may be different\n     * from that of returned list `F[]`.\n     */\n    flattenNodes(structuredData: T[]): F[] {\n        const resultNodes: F[] = [];\n        structuredData.forEach((node) => this._flattenNode(node, 0, resultNodes, []));\n\n        return resultNodes;\n    }\n\n    /**\n     * Expand flattened node with current expansion status.\n     * The returned list may have different length.\n     */\n    expandFlattenedNodes(nodes: F[], treeControl: ITreeControl<F>): F[] {\n        const results: F[] = [];\n        const currentExpand: boolean[] = [];\n        currentExpand[0] = true;\n\n        nodes.forEach((node) => {\n            let expand = true;\n            for (let i = 0; i <= this.getLevel(node); i++) {\n                expand = expand && currentExpand[i];\n            }\n\n            if (expand) { results.push(node); }\n\n            if (this.isExpandable(node)) {\n                currentExpand[this.getLevel(node) + 1] = treeControl.isExpanded(node);\n            }\n        });\n\n        return results;\n    }\n}\n\n\n/**\n * Data source for flat tree.\n * The data source need to handle expansion/collapsion of the tree node and change the data feed\n * to `McTree`.\n * The nested tree nodes of type `T` are flattened through `MсTreeFlattener`, and converted\n * to type `F` for `McTree` to consume.\n */\nexport class McTreeFlatDataSource<T, F> extends DataSource<F> {\n    _flattenedData = new BehaviorSubject<F[]>([]);\n\n    _expandedData = new BehaviorSubject<F[]>([]);\n\n    _data: BehaviorSubject<T[]>;\n\n    get data() {\n        return this._data.value;\n    }\n\n    set data(value: T[]) {\n        this._data.next(value);\n        this._flattenedData.next(this.treeFlattener.flattenNodes(this.data));\n        this.treeControl.dataNodes = this._flattenedData.value;\n    }\n\n    constructor(private treeControl: FlatTreeControl<F>,\n                private treeFlattener: McTreeFlattener<T, F>,\n                initialData: T[] = []) {\n        super();\n        this._data = new BehaviorSubject<T[]>(initialData);\n    }\n\n    connect(collectionViewer: ICollectionViewer): Observable<F[]> {\n        const changes = [\n            collectionViewer.viewChange,\n            this.treeControl.expansionModel.onChange!,\n            this._flattenedData\n        ];\n\n        return merge(...changes).pipe(map(() => {\n            this._expandedData.next(\n                this.treeFlattener.expandFlattenedNodes(this._flattenedData.value, this.treeControl));\n\n            return this._expandedData.value;\n        }));\n    }\n\n    disconnect() {\n        // no op\n    }\n}\n\n","import { ICollectionViewer, DataSource } from '@ptsecurity/cdk/collections';\nimport { BehaviorSubject, merge, Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\n\n/**\n * Data source for nested tree.\n *\n * The data source for nested tree doesn't have to consider node flattener, or the way to expand\n * or collapse. The expansion/collapsion will be handled by ITreeControl and each non-leaf node.\n */\nexport class McTreeNestedDataSource<T> extends DataSource<T> {\n    _data = new BehaviorSubject<T[]>([]);\n\n    /**\n     * Data for the nested tree\n     */\n    get data() {\n        return this._data.value;\n    }\n\n    set data(value: T[]) {\n        this._data.next(value);\n    }\n\n    connect(collectionViewer: ICollectionViewer): Observable<T[]> {\n        return merge(...[collectionViewer.viewChange, this._data])\n            .pipe(map(() => this.data));\n    }\n\n    disconnect() {\n        // no op\n    }\n}\n\n","import {\n    ElementRef,\n    QueryList,\n    ContentChildren,\n    Component,\n    ChangeDetectionStrategy,\n    ViewEncapsulation\n} from '@angular/core';\n\nimport { mixinColor, CanColor, CanColorCtor } from '@ptsecurity/mosaic/core';\nimport { McIcon } from '@ptsecurity/mosaic/icon';\n\n\nexport class McTagBase {\n    constructor(public _elementRef: ElementRef) {}\n}\n\nexport const _McTagMixinBase: CanColorCtor & typeof McTagBase\n    = mixinColor(McTagBase);\n\n\n@Component({\n    selector: 'mc-tag',\n    templateUrl: 'tag.partial.html',\n    styleUrls: ['./tag.css'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n    host: { class: 'mc-tag' },\n    inputs: ['color']\n})\nexport class McTag extends _McTagMixinBase implements CanColor {\n    @ContentChildren(McIcon) contentChildren: QueryList<McIcon>;\n\n    nativeElement: HTMLElement;\n\n    constructor(elementRef: ElementRef) {\n        super(elementRef);\n\n        this.nativeElement = elementRef.nativeElement;\n    }\n\n    ngAfterContentInit() {\n        this._addClassModificatorForIcons();\n    }\n\n    _addClassModificatorForIcons() {\n        const icons = this.contentChildren.map((item) => item._elementRef.nativeElement);\n\n        if (icons.length === 1) {\n            const iconElement = icons[0];\n\n            if (!iconElement.previousElementSibling && !iconElement.nextElementSibling) {\n                if (iconElement.nextSibling) {\n                    iconElement.classList.add('mc-icon_left');\n                    this.nativeElement.classList.add('mc-left-icon');\n                }\n\n                if (iconElement.previousSibling) {\n                    iconElement.classList.add('mc-icon_right');\n                    this.nativeElement.classList.add('mc-right-icon');\n                }\n            }\n        } else if (icons.length > 1) {\n            const firstIconElement = icons[0];\n            const secondIconElement = icons[1];\n\n            firstIconElement.classList.add('mc-icon_left');\n            secondIconElement.classList.add('mc-icon_right');\n        }\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { PlatformModule } from '@ptsecurity/cdk/platform';\n\nimport { McTag } from './tag.component';\n\n\n@NgModule({\n    imports: [\n        CommonModule,\n        PlatformModule\n    ],\n    exports: [\n        McTag\n    ],\n    declarations: [\n        McTag\n    ]\n})\nexport class McTagModule {}\n","import { DOCUMENT } from '@angular/common';\nimport {\n    AfterViewInit, ChangeDetectionStrategy, ChangeDetectorRef,\n    Component,\n    ComponentFactoryResolver,\n    ComponentRef,\n    ElementRef,\n    EventEmitter,\n    Inject,\n    Injector,\n    Input,\n    OnChanges,\n    OnDestroy,\n    OnInit,\n    Output,\n    Renderer2,\n    SimpleChanges,\n    TemplateRef,\n    Type,\n    ViewChild,\n    ViewContainerRef, ViewEncapsulation\n} from '@angular/core';\nimport { ESCAPE } from '@ptsecurity/cdk/keycodes';\nimport { Overlay, OverlayRef } from '@ptsecurity/cdk/overlay';\nimport { McMeasureScrollbarService } from '@ptsecurity/mosaic/core';\nimport { Observable } from 'rxjs';\n\nimport { McModalControlService } from './modal-control.service';\nimport { McModalRef } from './modal-ref.class';\n// tslint:disable-next-line\nimport ModalUtil from './modal-util';\nimport { IModalButtonOptions, IModalOptions, ModalType, OnClickCallback } from './modal.type';\n\n\n// Duration when perform animations (ms)\nexport const MODAL_ANIMATE_DURATION = 200;\n\ntype AnimationState = 'enter' | 'leave' | null;\n\n@Component({\n    selector: 'mc-modal',\n    templateUrl: './modal.component.html',\n    styleUrls: ['./modal.css'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n    host: {\n        '(keydown)': 'onKeyDown($event)'\n    }\n})\nexport class McModalComponent<T = any, R = any> extends McModalRef<T, R>\n    implements OnInit, OnChanges, AfterViewInit, OnDestroy, IModalOptions {\n\n    // tslint:disable-next-line:no-any\n    @Input() mcModalType: ModalType = 'default';\n    // If not specified, will use <ng-content>\n    @Input() mcContent: string | TemplateRef<{}> | Type<T>;\n    // available when mcContent is a component\n    @Input() mcComponentParams: object;\n    // Default Modal ONLY\n    @Input() mcFooter: string | TemplateRef<{}> | IModalButtonOptions<T>[];\n\n    @Input()\n    get mcVisible() { return this._mcVisible; }\n    set mcVisible(value) { this._mcVisible = value; }\n    _mcVisible = false;\n\n    @Output() mcVisibleChange = new EventEmitter<boolean>();\n\n    @Input() mcZIndex: number = 1000;\n    @Input() mcWidth: number | string = 480;\n    @Input() mcWrapClassName: string;\n    @Input() mcClassName: string;\n    @Input() mcStyle: object;\n    @Input() mcTitle: string | TemplateRef<{}>;\n    @Input() mcCloseByESC: boolean = true;\n\n    @Input()\n    get mcClosable() { return this._mcClosable; }\n    set mcClosable(value) { this._mcClosable = value; }\n    _mcClosable = true;\n\n    @Input()\n    get mcMask() { return this._mcMask; }\n    set mcMask(value) { this._mcMask = value; }\n    _mcMask = true;\n\n    @Input()\n    get mcMaskClosable() { return this._mcMaskClosable; }\n    set mcMaskClosable(value) { this._mcMaskClosable = value; }\n    _mcMaskClosable = true;\n\n    @Input() mcMaskStyle: object;\n    @Input() mcBodyStyle: object;\n\n    // Trigger when modal open(visible) after animations\n    @Output() mcAfterOpen = new EventEmitter<void>();\n    // Trigger when modal leave-animation over\n    @Output() mcAfterClose = new EventEmitter<R>();\n\n    // --- Predefined OK & Cancel buttons\n    @Input() mcOkText: string;\n    @Input() mcOkType = 'primary';\n\n    @Input()\n    get mcOkLoading() { return this._mcOkLoading; }\n    set mcOkLoading(value) { this._mcOkLoading = value; }\n    _mcOkLoading = false;\n\n    @Input() @Output() mcOnOk: EventEmitter<T> | OnClickCallback<T> = new EventEmitter<T>();\n    // Only aim to focus the ok button that needs to be auto focused\n    @ViewChild('autoFocusButtonOk', {read: ElementRef}) autoFocusButtonOk: ElementRef;\n    @Input() mcCancelText: string;\n\n    @Input()\n    get mcCancelLoading() { return this._mcCancelLoading; }\n    set mcCancelLoading(value) { this._mcCancelLoading = value; }\n    _mcCancelLoading = false;\n\n    @Input() @Output() mcOnCancel: EventEmitter<T> | OnClickCallback<T> = new EventEmitter<T>();\n    @ViewChild('modalContainer') modalContainer: ElementRef;\n    @ViewChild('bodyContainer', {read: ViewContainerRef}) bodyContainer: ViewContainerRef;\n    maskAnimationClassMap: object;\n    modalAnimationClassMap: object;\n    // The origin point that animation based on\n    transformOrigin = '0px 0px 0px';\n\n    // Observable alias for mcAfterOpen\n    get afterOpen(): Observable<void> {\n        return this.mcAfterOpen.asObservable();\n    }\n\n    // Observable alias for mcAfterClose\n    get afterClose(): Observable<R> {\n        return this.mcAfterClose.asObservable();\n    }\n\n    get okText(): string {\n        return this.mcOkText;\n    }\n\n    get cancelText(): string {\n        return this.mcCancelText;\n    }\n\n    // Indicate whether this dialog should hidden\n    get hidden(): boolean {\n        return !this.mcVisible && !this.animationState;\n    }\n\n    // Handle the reference when using mcContent as Component\n    private contentComponentRef: ComponentRef<T>;\n    // Current animation state\n    private animationState: AnimationState;\n    private container: HTMLElement | OverlayRef;\n\n    constructor(\n        private overlay: Overlay,\n        private renderer: Renderer2,\n        private cfr: ComponentFactoryResolver,\n        private elementRef: ElementRef,\n        private viewContainer: ViewContainerRef,\n        private mcMeasureScrollbarService: McMeasureScrollbarService,\n        private modalControl: McModalControlService,\n        private changeDetector: ChangeDetectorRef,\n        @Inject(DOCUMENT) private document: any) {\n\n        super();\n    }\n\n    @Input() mcGetContainer: HTMLElement | OverlayRef | (() => HTMLElement | OverlayRef) = () => this.overlay.create();\n\n    ngOnInit() {\n\n        // Create component along without View\n        if (this.isComponent(this.mcContent)) {\n            this.createDynamicComponent(this.mcContent as Type<T>);\n        }\n\n        // Setup default button options\n        if (this.isModalButtons(this.mcFooter)) {\n            this.mcFooter = this.formatModalButtons(this.mcFooter as IModalButtonOptions<T>[]);\n        }\n\n        // Place the modal dom to elsewhere\n        this.container = typeof this.mcGetContainer === 'function' ? this.mcGetContainer() : this.mcGetContainer;\n        if (this.container instanceof HTMLElement) {\n            this.container.appendChild(this.elementRef.nativeElement);\n        } else if (this.container instanceof OverlayRef) {\n            // NOTE: only attach the dom to overlay, the view container is not changed actually\n            this.container.overlayElement.appendChild(this.elementRef.nativeElement);\n        }\n\n        // Register modal when afterOpen/afterClose is stable\n        this.modalControl.registerModal(this);\n    }\n\n    // [NOTE] NOT available when using by service!\n    // Because ngOnChanges never be called when using by service,\n    // here we can't support \"mcContent\"(Component) etc. as inputs that initialized dynamically.\n    // BUT: User also can change \"mcContent\" dynamically to trigger UI changes\n    // (provided you don't use \bComponent that needs initializations)\n    ngOnChanges(changes: SimpleChanges) {\n        if (changes.mcVisible) {\n            // Do not trigger animation while initializing\n            this.handleVisibleStateChange(this.mcVisible, !changes.mcVisible.firstChange);\n        }\n    }\n\n    ngAfterViewInit() {\n        // If using Component, it is the time to attach View while bodyContainer is ready\n        if (this.contentComponentRef) {\n            this.bodyContainer.insert(this.contentComponentRef.hostView);\n        }\n\n        if (this.autoFocusButtonOk) {\n            (this.autoFocusButtonOk.nativeElement as HTMLButtonElement).focus();\n        }\n    }\n\n    ngOnDestroy() {\n        if (this.container instanceof OverlayRef) {\n            this.container.dispose();\n        }\n    }\n\n    open() {\n        this.changeVisibleFromInside(true);\n    }\n\n    close(result?: R) {\n        this.changeVisibleFromInside(false, result);\n    }\n\n    // Destroy equals Close\n    destroy(result?: R) {\n        this.close(result);\n    }\n\n    triggerOk() {\n        this.onClickOkCancel('ok');\n    }\n\n    triggerCancel() {\n        this.onClickOkCancel('cancel');\n    }\n\n    getInstance(): McModalComponent {\n        return this;\n    }\n\n    getContentComponentRef(): ComponentRef<T> {\n        return this.contentComponentRef;\n    }\n\n    getContentComponent(): T {\n        return this.contentComponentRef && this.contentComponentRef.instance;\n    }\n\n    getElement(): HTMLElement {\n        return this.elementRef && this.elementRef.nativeElement;\n    }\n\n    onClickMask($event: MouseEvent) {\n        if (\n            this.mcMask &&\n            this.mcMaskClosable &&\n            ($event.target as HTMLElement).classList.contains('mc-modal-wrap') &&\n            this.mcVisible\n        ) {\n            this.onClickOkCancel('cancel');\n        }\n    }\n\n    // tslint:disable-next-line\n    isModalType(type: ModalType): boolean {\n        return this.mcModalType === type;\n    }\n\n    onKeyDown(event: KeyboardEvent): void {\n\n        if (event.keyCode === ESCAPE && this.container && (this.container instanceof OverlayRef)) {\n\n            this.close();\n            event.preventDefault();\n        }\n    }\n\n    // AoT\n    onClickCloseBtn() {\n        if (this.mcVisible) {\n            this.onClickOkCancel('cancel');\n        }\n    }\n\n    // AoT\n    // tslint:disable-next-line\n    onClickOkCancel(type: 'ok' | 'cancel') {\n        const trigger = { ok: this.mcOnOk, cancel: this.mcOnCancel }[type];\n        const loadingKey = { ok: 'mcOkLoading', cancel: 'mcCancelLoading' }[type];\n\n        if (trigger instanceof EventEmitter) {\n            trigger.emit(this.getContentComponent());\n        } else if (typeof trigger === 'function') {\n\n            const result = trigger(this.getContentComponent());\n            // Users can return \"false\" to prevent closing by default\n            const caseClose = (doClose: boolean | void | {}) => (doClose !== false) && this.close(doClose as R);\n\n            if (isPromise(result)) {\n                this[loadingKey] = true;\n                const handleThen = (doClose) => {\n                    this[loadingKey] = false;\n                    caseClose(doClose);\n                };\n                (result as Promise<void>).then(handleThen).catch(handleThen);\n            } else {\n                caseClose(result);\n            }\n        }\n    }\n\n    // AoT\n    isNonEmptyString(value: {}): boolean {\n        return typeof value === 'string' && value !== '';\n    }\n\n    // AoT\n    isTemplateRef(value: {}): boolean {\n        return value instanceof TemplateRef;\n    }\n\n    // AoT\n    isComponent(value: {}): boolean {\n        return value instanceof Type;\n    }\n\n    // AoT\n    isModalButtons(value: {}): boolean {\n        return Array.isArray(value) && value.length > 0;\n    }\n\n    // Do rest things when visible state changed\n    private handleVisibleStateChange(visible: boolean, animation: boolean = true, closeResult?: R): Promise<any> {\n        // Hide scrollbar at the first time when shown up\n        if (visible) {\n            this.changeBodyOverflow(1);\n        }\n\n        return Promise\n            .resolve(animation && this.animateTo(visible))\n            // Emit open/close event after animations over\n            .then(() => {\n                if (visible) {\n                    this.mcAfterOpen.emit();\n                } else {\n                    this.mcAfterClose.emit(closeResult);\n                    // Show/hide scrollbar when animation is over\n                    this.changeBodyOverflow();\n                }\n            });\n    }\n\n    // Lookup a button's property, if the prop is a function, call & then return the result, otherwise, return itself.\n    // AoT\n    // tslint:disable-next-line\n    getButtonCallableProp(options: IModalButtonOptions<T>, prop: string): {} {\n        const value = options[prop];\n        const args: any[] = [];\n        if (this.contentComponentRef) {\n            args.push(this.contentComponentRef.instance);\n        }\n\n        return typeof value === 'function' ? value.apply(options, args) : value;\n    }\n\n    // On mcFooter's modal button click\n    // AoT\n    // tslint:disable-next-line\n    onButtonClick(button: IModalButtonOptions<T>) {\n        // Call onClick directly\n        const result = this.getButtonCallableProp(button, 'onClick');\n        if (isPromise(result)) {\n            button.loading = true;\n            (result as Promise<{}>).then(() => button.loading = false).catch(() => button.loading = false);\n        }\n    }\n\n    // Change mcVisible from inside\n    private changeVisibleFromInside(visible: boolean, closeResult?: R): Promise<void> {\n        if (this.mcVisible !== visible) {\n            // Change mcVisible value immediately\n            this.mcVisible = visible;\n            this.mcVisibleChange.emit(visible);\n\n            return this.handleVisibleStateChange(visible, true, closeResult);\n        }\n\n        return Promise.resolve();\n    }\n\n    private changeAnimationState(state: AnimationState) {\n        this.animationState = state;\n        if (state) {\n            this.maskAnimationClassMap = {\n                [`fade-${state}`]: true,\n                [`fade-${state}-active`]: true\n            };\n            this.modalAnimationClassMap = {\n                [`zoom-${state}`]: true,\n                [`zoom-${state}-active`]: true\n            };\n        } else {\n            // @ts-ignore\n            this.maskAnimationClassMap = this.modalAnimationClassMap = null;\n        }\n\n        if (this.contentComponentRef) {\n            this.contentComponentRef.changeDetectorRef.markForCheck();\n        } else {\n            this.changeDetector.markForCheck();\n        }\n    }\n\n    private animateTo(isVisible: boolean): Promise<any> {\n        // Figure out the lastest click position when shows up\n        if (isVisible) {\n            // [NOTE] Using timeout due to the document.click event is fired later than visible change,\n            // so if not postponed to next event-loop, we can't get the lastest click position\n            window.setTimeout(() => this.updateTransformOrigin());\n        }\n\n        this.changeAnimationState(isVisible ? 'enter' : 'leave');\n\n        // Return when animation is over\n        return new Promise((resolve) => window.setTimeout(() => {\n            this.changeAnimationState(null);\n            resolve();\n        }, MODAL_ANIMATE_DURATION));\n    }\n\n    private formatModalButtons(buttons: IModalButtonOptions<T>[]): IModalButtonOptions<T>[] {\n        return buttons.map((button) => {\n\n            return {\n                ...{\n                    type: 'default',\n                    size: 'default',\n                    autoLoading: true,\n                    show: true,\n                    loading: false,\n                    disabled: false\n                },\n                ...button\n            };\n        });\n    }\n\n    /**\n     * Create a component dynamically but not attach to any View\n     * (this action will be executed when bodyContainer is ready)\n     * @param component Component class\n     */\n    private createDynamicComponent(component: Type<T>) {\n        const factory = this.cfr.resolveComponentFactory(component);\n        const childInjector = Injector.create({\n            providers: [{provide: McModalRef, useValue: this}],\n            parent: this.viewContainer.parentInjector\n        });\n\n        this.contentComponentRef = factory.create(childInjector);\n\n        if (this.mcComponentParams) {\n            Object.assign(this.contentComponentRef.instance, this.mcComponentParams);\n        }\n\n        // Do the first change detection immediately\n        // (or we do detection at ngAfterViewInit, multi-changes error will be thrown)\n        this.contentComponentRef.changeDetectorRef.detectChanges();\n\n\n    }\n\n    // Update transform-origin to the last click position on document\n    private updateTransformOrigin() {\n        const modalElement = this.modalContainer.nativeElement as HTMLElement;\n        const lastPosition = ModalUtil.getLastClickPosition();\n\n        if (lastPosition) {\n            // tslint:disable-next-line\n            this.transformOrigin = `${lastPosition.x - modalElement.offsetLeft}px ${lastPosition.y - modalElement.offsetTop}px 0px`;\n        }\n    }\n\n    /**\n     * Take care of the body's overflow to decide the existense of scrollbar\n     * @param plusNum The number that the openModals.length will increase soon\n     */\n    private changeBodyOverflow(plusNum: number = 0) {\n        const openModals = this.modalControl.openModals;\n\n        if (openModals.length + plusNum > 0) {\n            // tslint:disable-next-line\n            this.renderer.setStyle(this.document.body, 'padding-right', `${this.mcMeasureScrollbarService.scrollBarWidth}px`);\n            this.renderer.setStyle(this.document.body, 'overflow', 'hidden');\n        } else {\n            this.renderer.removeStyle(this.document.body, 'padding-right');\n            this.renderer.removeStyle(this.document.body, 'overflow');\n        }\n    }\n}\n\n////////////\n\nfunction isPromise(obj: {} | void): boolean {\n    // tslint:disable-next-line\n    return !!obj && (typeof obj === 'object' || typeof obj === 'function') && typeof (obj as Promise<{}>).then === 'function' && typeof (obj as Promise<{}>).catch === 'function';\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n\n@Pipe({\n    name: 'toCssUnit'\n})\nexport class CssUnitPipe implements PipeTransform {\n    transform(value: number | string, defaultUnit: string = 'px'): string {\n        const formatted = +value;\n\n        return isNaN(formatted) ? `${value}` : `${formatted}${defaultUnit}`;\n    }\n}\n","import { ComponentRef, Injectable } from '@angular/core';\n\nimport { Observable } from 'rxjs';\nimport { filter } from 'rxjs/operators';\n\nimport { ESCAPE } from '@ptsecurity/cdk/keycodes';\nimport { Overlay, OverlayRef } from '@ptsecurity/cdk/overlay';\nimport { ComponentPortal } from '@ptsecurity/cdk/portal';\n\nimport { McModalControlService } from './modal-control.service';\nimport { McModalRef } from './modal-ref.class';\nimport { McModalComponent } from './modal.component';\nimport { ConfirmType, IModalOptions, IModalOptionsForService } from './modal.type';\n\n\n// A builder used for managing service creating modals\nexport class ModalBuilderForService {\n\n    // Modal ComponentRef, \"null\" means it has been destroyed\n    private modalRef: ComponentRef<McModalComponent>;\n    private overlayRef: OverlayRef;\n\n    constructor(private overlay: Overlay, options: IModalOptionsForService = {}) {\n        this.createModal();\n\n        if (!('mcGetContainer' in options)) {\n            options.mcGetContainer = null;\n        }\n\n        this.changeProps(options);\n        this.modalRef.instance.open();\n        this.modalRef.instance.mcAfterClose.subscribe(() => this.destroyModal());\n\n        this.overlayRef.keydownEvents()\n            // @ts-ignore\n            .pipe(filter((event: KeyboardEvent) => {\n                return event.keyCode === ESCAPE && options.mcCloseByESC;\n            }))\n            .subscribe(() => this.modalRef.instance.close());\n    }\n\n    getInstance(): McModalComponent {\n        return this.modalRef && this.modalRef.instance;\n    }\n\n    destroyModal(): void {\n        if (this.modalRef) {\n            this.overlayRef.dispose();\n            // @ts-ignore\n            this.modalRef = null;\n        }\n    }\n\n    private changeProps(options: IModalOptions): void {\n        if (this.modalRef) {\n            // here not limit user's inputs at runtime\n            Object.assign(this.modalRef.instance, options);\n        }\n    }\n\n    // Create component to ApplicationRef\n    private createModal(): void {\n        this.overlayRef = this.overlay.create();\n        this.modalRef = this.overlayRef.attach(new ComponentPortal(McModalComponent));\n    }\n}\n\n@Injectable()\nexport class McModalService {\n    // Track of the current close modals (we assume invisible is close this time)\n    get openModals(): McModalRef[] {\n        return this.modalControl.openModals;\n    }\n\n    get afterAllClose(): Observable<void> {\n        return this.modalControl.afterAllClose.asObservable();\n    }\n\n    constructor(\n        private overlay: Overlay,\n        private modalControl: McModalControlService) {\n    }\n\n    // Closes all of the currently-open dialogs\n    closeAll(): void {\n        this.modalControl.closeAll();\n    }\n\n    create<T>(options: IModalOptionsForService<T> = {}): McModalRef<T> {\n\n        if (typeof options.mcOnCancel !== 'function') {\n            // Leave a empty function to close this modal by default\n            // tslint:disable-next-line\n            options.mcOnCancel = () => {};\n        }\n\n        if (!('mcCloseByESC' in options)) {\n            options.mcCloseByESC = true;\n        }\n\n\n        if (!('mcWidth' in options)) {\n            // tslint:disable-next-line\n            options.mcWidth = 480;\n        }\n\n        return new ModalBuilderForService(this.overlay, options).getInstance();\n    }\n\n    confirm<T>(options: IModalOptionsForService<T> = {}, confirmType: ConfirmType = 'confirm'): McModalRef<T> {\n        if ('mcFooter' in options) {\n            console.warn(`The Confirm-Modal doesn't support \"mcFooter\", this property will be ignored.`);\n        }\n\n        // NOTE: only support function currently by calling confirm()\n        if (typeof options.mcOnOk !== 'function') {\n            // Leave a empty function to close this modal by default\n            // tslint:disable-next-line\n            options.mcOnOk = () => {};\n        }\n\n        options.mcModalType = 'confirm';\n        options.mcClassName = `mc-confirm mc-confirm-${confirmType} ${options.mcClassName || ''}`;\n        options.mcMaskClosable = false;\n\n        return this.create(options);\n    }\n\n    success<T>(options: IModalOptionsForService<T> = {}): McModalRef<T> {\n        return this.simpleConfirm(options, 'success');\n    }\n\n    delete<T>(options: IModalOptionsForService<T> = {}): McModalRef<T> {\n        return this.simpleConfirm(options, 'warn');\n    }\n\n    private simpleConfirm<T>(options: IModalOptionsForService<T> = {}, confirmType: ConfirmType): McModalRef<T> {\n        // Remove the Cancel button if the user not specify a Cancel button\n        if (!('mcCancelText' in options)) {\n            // @ts-ignore\n            options.mcCancelText = null;\n        }\n\n        return this.confirm(options, confirmType);\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { OverlayModule } from '@ptsecurity/cdk/overlay';\nimport { McButtonModule } from '@ptsecurity/mosaic/button';\nimport { McIconModule } from '@ptsecurity/mosaic/icon';\n\nimport { CssUnitPipe } from './css-unit.pipe';\nimport { McModalControlService } from './modal-control.service';\nimport { McModalComponent } from './modal.component';\nimport { McModalService } from './modal.service';\n\n\n@NgModule({\n    imports: [ CommonModule, OverlayModule, McButtonModule, McIconModule ],\n    exports: [ McModalComponent ],\n    declarations: [ McModalComponent, CssUnitPipe ],\n    entryComponents: [ McModalComponent ],\n    providers: [ McModalControlService, McModalService ]\n})\nexport class McModalModule { }\n","import { fromEvent, Observable, Subscription } from 'rxjs';\nimport { debounceTime } from 'rxjs/operators';\n\nimport {\n    AfterViewInit,\n    Component, Directive,\n    ElementRef,\n    HostBinding,\n    Input,\n    OnDestroy,\n    OnInit,\n    ViewEncapsulation,\n    ContentChild,\n    TemplateRef,\n    ChangeDetectorRef,\n    ChangeDetectionStrategy,\n    ViewChild\n} from '@angular/core';\nimport { FocusMonitor, FocusOrigin } from '@ptsecurity/cdk/a11y';\nimport { SPACE } from '@ptsecurity/cdk/keycodes';\nimport { Platform } from '@ptsecurity/cdk/platform';\nimport { CanDisable, CanDisableCtor, mixinDisabled } from '@ptsecurity/mosaic/core';\n\n\nconst COLLAPSED_CLASS: string = 'mc-navbar-collapsed-title';\nconst MC_ICON = 'mc-icon';\nconst MC_NAVBAR = 'mc-navbar';\nconst MC_NAVBAR_CONTAINER = 'mc-navbar-container';\nconst MC_NAVBAR_ITEM = 'mc-navbar-item';\nconst MC_NAVBAR_BRAND = 'mc-navbar-brand';\nconst MC_NAVBAR_TITLE = 'mc-navbar-title';\nconst MC_NAVBAR_LOGO = 'mc-navbar-logo';\n\nexport type McNavbarContainerPositionType = 'left' | 'right';\n\nexport interface IMcNavbarDropdownItem {\n    link?: string;\n    text: string;\n}\n\n@Directive({\n    selector: MC_NAVBAR_LOGO,\n    host: {\n        class: MC_NAVBAR_LOGO\n    }\n})\nexport class McNavbarLogo {}\n\n@Directive({\n    selector: MC_NAVBAR_BRAND,\n    host: {\n        class: MC_NAVBAR_BRAND\n    }\n})\nexport class McNavbarBrand {}\n\n@Directive({\n    selector: MC_NAVBAR_TITLE,\n    host: {\n        class: MC_NAVBAR_TITLE\n    }\n})\nexport class McNavbarTitle {}\n\nexport class McNavbarItemBase {\n    constructor(public _elementRef: ElementRef) {}\n}\n\nexport const _McNavbarMixinBase: CanDisableCtor & typeof McNavbarItemBase = mixinDisabled(McNavbarItemBase);\n\n@Component({\n    selector: MC_NAVBAR_ITEM,\n    template: `\n        <a\n            [attr.tabindex]=\\\"disabled ? -1 : tabIndex\\\"\n            (click)=\"handleClickByItem()\"\n            (keydown)=\"handleKeydown($event)\"\n            class=\"mc-navbar-item\"\n        >\n            <ng-content></ng-content>\n            <i *ngIf=\"hasDropdownContent\" mc-icon=\"mc-angle-M_16\"></i>\n        </a>\n        <ul\n            #dropdownContent\n            *ngIf=\"hasDropdownContent\"\n            [ngClass]=\"{ 'is-collapsed': isCollapsed }\"\n            class=\"mc-navbar-dropdown\"\n        >\n            <li\n                *ngFor=\"let item of dropdownItems\"\n                (click)=\"handleClickByDropdownItem()\"\n                class=\"mc-navbar-dropdown-item\"\n            >\n                <ng-container *ngIf=\"dropdownItemTmpl\">\n                    <ng-container *ngTemplateOutlet=\"dropdownItemTmpl; context: { $implicit: item }\"></ng-container>\n                </ng-container>\n                <a\n                    *ngIf=\"!dropdownItemTmpl\"\n                    [attr.href]=\"item.link\"\n                    [ngClass]=\"{ 'is-active': isActiveDropdownLink(item.link) }\"\n                    class=\"mc-navbar-dropdown-link\"\n                >{{ item.text }}</a>\n            </li>\n        </ul>\n    `,\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    inputs: ['disabled'],\n    host: {\n        '[attr.disabled]': 'disabled || null',\n        '[attr.tabindex]': '-1'\n    }\n})\nexport class McNavbarItem extends _McNavbarMixinBase implements OnInit, AfterViewInit, OnDestroy, CanDisable {\n\n    @Input()\n    tabIndex: number = 0;\n\n    @Input()\n    dropdownItems: IMcNavbarDropdownItem[] = [];\n\n    @Input()\n    set collapsedTitle(value: string) {\n        this.elementRef.nativeElement.setAttribute('computedTitle', encodeURI(value));\n    }\n\n    @ContentChild('dropdownItemTmpl', { read: TemplateRef })\n    dropdownItemTmpl: TemplateRef<IMcNavbarDropdownItem>;\n\n    @ViewChild('dropdownContent', { read: ElementRef })\n    dropdownContent: ElementRef;\n\n    get hasDropdownContent() {\n        return this.dropdownItems.length > 0;\n    }\n\n    isCollapsed: boolean = true;\n\n    private _subscription: Subscription = new Subscription();\n    private _focusMonitor$: Observable<FocusOrigin>;\n\n    private get _dropdownElements(): HTMLElement[] {\n        return this.dropdownContent ? this.dropdownContent.nativeElement.querySelectorAll('li > *') : [];\n    }\n\n    constructor(\n        public  elementRef: ElementRef,\n        private _focusMonitor: FocusMonitor,\n        private _platform: Platform,\n        private _cdRef: ChangeDetectorRef\n    ) {\n        super(elementRef);\n    }\n\n    ngOnInit() {\n        this.denyClickIfDisabled();\n\n        this._focusMonitor$ = this._focusMonitor.monitor(this.elementRef.nativeElement, true);\n\n        if (this.hasDropdownContent) {\n            this.listenClickOutside();\n        }\n    }\n\n    ngAfterViewInit() {\n        if (!this.hasDropdownContent) {\n            return;\n        }\n\n        this.startListenFocusDropdownItems();\n    }\n\n    ngOnDestroy() {\n        this._subscription.unsubscribe();\n        this._focusMonitor.stopMonitoring(this.elementRef.nativeElement);\n        this.stopListenFocusDropdownItems();\n    }\n\n    isActiveDropdownLink(link: string): boolean {\n        if (!this._platform.isBrowser) {\n            return false;\n        }\n\n        return window.location.href.indexOf(link) >= 0;\n    }\n\n    handleClickByItem() {\n        this.toggleDropdown();\n    }\n\n    handleKeydown($event: KeyboardEvent) {\n        const isNavbarItem = ($event.target as HTMLElement).classList.contains(MC_NAVBAR_ITEM);\n\n        // tslint:disable-next-line\n        if (this.hasDropdownContent && $event.keyCode === SPACE && isNavbarItem) {\n            this.toggleDropdown();\n        }\n    }\n\n    handleClickByDropdownItem() {\n        this.forceCloseDropdown();\n    }\n\n    private listenClickOutside() {\n        this._subscription.add(\n            this._focusMonitor$.subscribe((origin) => {\n                if (origin === null) {\n                    this.forceCloseDropdown();\n                }\n            })\n        );\n    }\n\n    private toggleDropdown() {\n        this.isCollapsed = !this.isCollapsed;\n    }\n\n    private forceCloseDropdown() {\n        this.isCollapsed = true;\n        this._cdRef.detectChanges();\n    }\n\n    private startListenFocusDropdownItems() {\n        this._dropdownElements.forEach((el) => {\n            this._focusMonitor.monitor(el, true);\n        });\n    }\n\n    private stopListenFocusDropdownItems() {\n        this._dropdownElements.forEach((el) => {\n            this._focusMonitor.stopMonitoring(el);\n        });\n    }\n\n    // This method is required due to angular 2 issue https://github.com/angular/angular/issues/11200\n    private denyClickIfDisabled() {\n        const events: Event[] = this.elementRef.nativeElement.eventListeners('click');\n\n        events.forEach((event) => this.elementRef.nativeElement.removeEventListener('click', event));\n\n        this.elementRef.nativeElement.addEventListener('click', (event: MouseEvent) => {\n            if (this.elementRef.nativeElement.hasAttribute('disabled')) {\n                event.stopImmediatePropagation();\n            }\n        }, true);\n\n        events.forEach((event) => this.elementRef.nativeElement.addEventListener('click', event));\n    }\n}\n\n@Directive({\n    selector: MC_NAVBAR_CONTAINER\n})\nexport class McNavbarContainer {\n    @Input()\n    position: McNavbarContainerPositionType = 'left';\n\n    @HostBinding('class')\n    get cssClasses(): string {\n        return this.position === 'left' ? 'mc-navbar-left' : 'mc-navbar-right';\n    }\n}\n\nclass CollapsibleItem {\n    private _collapsed: boolean = false;\n\n    constructor(\n        public element: HTMLElement,\n        public width: number\n    ) {}\n\n    processCollapsed(collapsed: boolean) {\n        this._collapsed = collapsed;\n\n        this.updateCollapsedClass();\n    }\n\n    private updateCollapsedClass() {\n        if (this._collapsed) {\n            this.element.classList.add(COLLAPSED_CLASS);\n        } else {\n            this.element.classList.remove(COLLAPSED_CLASS);\n        }\n\n    }\n}\n\nclass CachedItemWidth {\n\n    get canCollapse(): boolean {\n        return this.itemsForCollapse.length > 0;\n    }\n\n    private _collapsedItemsWidth: number;\n\n    get collapsedItemsWidth(): number {\n        if (this._collapsedItemsWidth !== undefined) {\n            return this._collapsedItemsWidth;\n        }\n\n        this.calculateAndCacheCollapsedItemsWidth();\n\n        return this._collapsedItemsWidth;\n    }\n\n    constructor(\n        public element: HTMLElement,\n        public width: number,\n        public itemsForCollapse: CollapsibleItem[] = []\n    ) {}\n\n    processCollapsed(collapsed: boolean) {\n        if (this.itemsForCollapse.length > 0) {\n            this.updateTitle(collapsed);\n        }\n\n        this.itemsForCollapse.forEach((item) => item.processCollapsed(collapsed));\n    }\n\n    private calculateAndCacheCollapsedItemsWidth() {\n        this._collapsedItemsWidth = this.itemsForCollapse\n            .reduce((acc, item) => acc + item.width, 0);\n    }\n\n    private getTitle(): string {\n        const computedTitle = this.element.getAttribute('computedTitle');\n\n        return computedTitle\n            ? decodeURI(computedTitle)\n            : (this.itemsForCollapse.length > 0 ? this.itemsForCollapse[0].element.innerText : '');\n    }\n\n    private updateTitle(collapsed: boolean) {\n        if (collapsed) {\n            this.element.setAttribute('title', this.getTitle());\n        } else {\n            this.element.removeAttribute('title');\n        }\n    }\n}\n\n\n@Component({\n    selector: MC_NAVBAR,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    template: `\n        <nav class=\"mc-navbar\">\n            <ng-content select=\"[${MC_NAVBAR_CONTAINER}],${MC_NAVBAR_CONTAINER}\"></ng-content>\n        </nav>\n    `,\n    styleUrls: ['./navbar.css'],\n    encapsulation: ViewEncapsulation.None\n})\nexport class McNavbar implements AfterViewInit, OnDestroy {\n\n    private readonly forceRecalculateItemsWidth: boolean = false;\n    private readonly resizeDebounceInterval: number = 100;\n    private readonly firstLevelElement: string = MC_NAVBAR_CONTAINER;\n    private readonly secondLevelElements: string[] = [\n        MC_NAVBAR_ITEM,\n        MC_NAVBAR_BRAND,\n        MC_NAVBAR_TITLE\n    ];\n\n    private _totalItemsWidths: number;\n    private _itemsWidths: CachedItemWidth[];\n\n    private get maxAllowedWidth(): number {\n        return this._elementRef.nativeElement.querySelector('nav').getBoundingClientRect().width;\n    }\n\n    private get itemsWidths(): CachedItemWidth[] {\n        if (this._itemsWidths !== undefined && !this.forceRecalculateItemsWidth) {\n            return this._itemsWidths;\n        }\n\n        this.calculateAndCacheItemsWidth();\n\n        return this._itemsWidths;\n    }\n\n    private get totalItemsWidth(): number {\n        if (this._totalItemsWidths !== undefined && !this.forceRecalculateItemsWidth) {\n            return this._totalItemsWidths;\n        }\n\n        this.calculateAndCacheTotalItemsWidth();\n\n        return this._totalItemsWidths;\n    }\n\n    private _resizeSubscription: Subscription;\n\n    constructor(\n        private _elementRef: ElementRef\n    ) {\n        const resizeObserver = fromEvent(window, 'resize')\n            .pipe(debounceTime(this.resizeDebounceInterval));\n\n        this._resizeSubscription = resizeObserver.subscribe(this.updateCollapsed.bind(this));\n    }\n\n    updateCollapsed(): void {\n        let collapseDelta = this.totalItemsWidth - this.maxAllowedWidth;\n\n        for (let i = this.itemsWidths.length - 1; i >= 0; i--) {\n            const item = this.itemsWidths[i];\n\n            if (!item.canCollapse) {\n                continue;\n            }\n\n            item.processCollapsed(collapseDelta > 0);\n            collapseDelta -= item.collapsedItemsWidth;\n        }\n    }\n\n    ngAfterViewInit(): void {\n        // Note: this wait is required for loading and rendering fonts for icons;\n        // unfortunately we cannot control font rendering\n        setTimeout(() => this.updateCollapsed(), 0);\n    }\n\n    ngOnDestroy() {\n        this._resizeSubscription.unsubscribe();\n    }\n\n    private calculateAndCacheTotalItemsWidth() {\n        this._totalItemsWidths = this.itemsWidths\n            .reduce((acc, item) => acc + item.width, 0);\n    }\n\n    private getOuterElementWidth(element: HTMLElement): number {\n        const baseWidth  = element.getBoundingClientRect().width;\n        const marginRight = parseInt(getComputedStyle(element).getPropertyValue('margin-right'));\n        const marginLeft = parseInt(getComputedStyle(element).getPropertyValue('margin-left'));\n\n        return baseWidth + marginRight + marginLeft;\n    }\n\n    private calculateAndCacheItemsWidth() {\n        const allItemsSelector = this.secondLevelElements\n            .map((e: string) => `${this.firstLevelElement}>${e}`);\n        const allItems: HTMLElement[] = Array.from(this._elementRef.nativeElement.querySelectorAll(allItemsSelector));\n\n        this._itemsWidths = allItems\n            .map((el) => new CachedItemWidth(el, this.getOuterElementWidth(el), this.getItemsForCollapse(el)));\n    }\n\n    private getItemsForCollapse(element: HTMLElement): CollapsibleItem[] {\n        const icon = element.querySelector(`[${MC_ICON}],${MC_NAVBAR_LOGO},[${MC_NAVBAR_LOGO}]`);\n\n        if (!icon) {\n            return [];\n        }\n\n        return Array.from(element.querySelectorAll(MC_NAVBAR_TITLE))\n            .map((el) => new CollapsibleItem(<HTMLElement> el, el.getBoundingClientRect().width));\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { A11yModule } from '@ptsecurity/cdk/a11y';\nimport { PlatformModule } from '@ptsecurity/cdk/platform';\n\nimport { McIconModule } from '@ptsecurity/mosaic/icon';\n\nimport {\n    McNavbar,\n    McNavbarContainer,\n    McNavbarItem,\n    McNavbarTitle,\n    McNavbarBrand,\n    McNavbarLogo\n} from './navbar.component';\n\n\n@NgModule({\n    imports: [\n        CommonModule,\n        A11yModule,\n        PlatformModule,\n        McIconModule\n    ],\n    exports: [\n        McNavbar,\n        McNavbarContainer,\n        McNavbarTitle,\n        McNavbarItem,\n        McNavbarBrand,\n        McNavbarLogo\n    ],\n    declarations: [\n        McNavbar,\n        McNavbarContainer,\n        McNavbarTitle,\n        McNavbarItem,\n        McNavbarBrand,\n        McNavbarLogo\n    ]\n})\nexport class McNavbarModule {}\n","import {\n    ChangeDetectionStrategy,\n    Component,\n    ViewEncapsulation,\n    ElementRef,\n    Input\n} from '@angular/core';\nimport { CanColor, CanColorCtor, mixinColor, ThemePalette } from '@ptsecurity/mosaic/core';\n\n\nexport type ProgressBarMode = 'determinate' | 'indeterminate';\n\nlet idIterator = 0;\n\nconst MIN_PERCENT = 0;\nconst MAX_PERCENT = 100;\n\nexport class McProgressBarBase {\n    constructor(public _elementRef: ElementRef) {}\n}\n\nexport const _McProgressBarMixinBase:\n    CanColorCtor &\n    typeof McProgressBarBase =\n        mixinColor(McProgressBarBase);\n\n@Component({\n    selector: 'mc-progress-bar',\n    templateUrl: './progress-bar.component.html',\n    styleUrls: ['./progress-bar.css'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n    host: {\n        class: 'mc-progress-bar',\n        '[attr.id]': 'id'\n    }\n})\nexport class McProgressBar extends _McProgressBarMixinBase implements CanColor {\n    @Input() id: string = `mc-progress-bar-${idIterator++}`;\n    @Input() value: number = 0;\n    @Input() mode: ProgressBarMode = 'determinate';\n    @Input() color: ThemePalette = ThemePalette.Primary;\n\n    constructor(elementRef: ElementRef) {\n        super(elementRef);\n    }\n\n    get percentage(): number {\n        return Math.max(MIN_PERCENT, Math.min(MAX_PERCENT, this.value)) / MAX_PERCENT;\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { PlatformModule } from '@ptsecurity/cdk/platform';\n\nimport {\n    McProgressBar\n} from './progress-bar.component';\n\n\n@NgModule({\n    imports: [\n        CommonModule,\n        PlatformModule\n    ],\n    exports: [\n        McProgressBar\n    ],\n    declarations: [\n        McProgressBar\n    ]\n})\nexport class McProgressBarModule {}\n","import {\n    ChangeDetectionStrategy,\n    Component,\n    ViewEncapsulation,\n    ElementRef,\n    Input\n} from '@angular/core';\nimport { CanColor, CanColorCtor, mixinColor, ThemePalette } from '@ptsecurity/mosaic/core';\n\n\nexport type ProgressSpinnerMode = 'determinate' | 'indeterminate';\n\nlet idIterator = 0;\n\nconst MIN_PERCENT = 0;\nconst MAX_PERCENT = 100;\n\nexport class McProgressSpinnerBase {\n    constructor(public _elementRef: ElementRef) {}\n}\n\nexport const _McProgressSpinnerMixinBase:\n    CanColorCtor &\n    typeof McProgressSpinnerBase =\n        mixinColor(McProgressSpinnerBase);\n\nconst MAX_DASH_ARRAY = 273;\n\n@Component({\n    selector: 'mc-progress-spinner',\n    templateUrl: './progress-spinner.component.html',\n    styleUrls: ['./progress-spinner.css'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n    host: {\n        class: 'mc-progress-spinner',\n        '[attr.id]': 'id'\n    }\n})\nexport class McProgressSpinner extends _McProgressSpinnerMixinBase implements CanColor {\n    @Input() id: string = `mc-progress-spinner-${idIterator++}`;\n    @Input() value: number = 0;\n    @Input() mode: ProgressSpinnerMode = 'determinate';\n    @Input() color: ThemePalette = ThemePalette.Primary;\n\n    constructor(elementRef: ElementRef) {\n        super(elementRef);\n    }\n\n    get percentage(): number {\n        return Math.max(MIN_PERCENT, Math.min(MAX_PERCENT, this.value)) / MAX_PERCENT;\n    }\n\n    get dashOffsetPercent(): string {\n        return `${MAX_DASH_ARRAY - this.percentage * MAX_DASH_ARRAY}%`;\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { PlatformModule } from '@ptsecurity/cdk/platform';\n\nimport { McProgressSpinner } from './progress-spinner.component';\n\n\n@NgModule({\n    imports: [\n        CommonModule,\n        PlatformModule\n    ],\n    exports: [\n        McProgressSpinner\n    ],\n    declarations: [\n        McProgressSpinner\n    ]\n})\nexport class McProgressSpinnerModule {}\n","import {\n    ChangeDetectionStrategy,\n    Component,\n    EventEmitter,\n    Host,\n    Input,\n    OnInit,\n    Optional,\n    Output\n} from '@angular/core';\nimport { toBoolean } from '@ptsecurity/mosaic/core';\n\nimport { McLayoutComponent } from './layout.component';\n\n\n@Component({\n    selector: 'mc-sidebar',\n    preserveWhitespaces: false,\n    templateUrl: './sidebar.component.html',\n    host: {\n        '[class.mc-layout-sidebar]': 'true',\n        '[class.mc-layout-sidebar-collapsed]': 'mcCollapsed',\n        '[style.flex]': 'mcFlex',\n        '[style.max-width.px]': 'mcWidth',\n        '[style.min-width.px]': 'mcWidth',\n        '[style.width.px]': 'mcWidth'\n    },\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class McSidebarComponent implements OnInit {\n\n    @Input() _mcWidth = 200;\n    @Input() mcCollapsedWidth = 80;\n\n    @Input()\n    set mcCollapsible(value: boolean) {\n        this.collapsible = toBoolean(value);\n    }\n\n    get mcCollapsible(): boolean {\n        return this.collapsible;\n    }\n\n    @Input()\n    set mcCollapsed(value: boolean) {\n        this.collapsed = toBoolean(value);\n    }\n\n    get mcCollapsed(): boolean {\n        return this.collapsed;\n    }\n\n    // tslint:disable-next-line\n    @Output() mcCollapsedChange = new EventEmitter();\n\n    private collapsed = false;\n    private collapsible = false;\n\n    get mcFlex(): string {\n        if (this.mcCollapsed) {\n            return `0 0 ${this.mcCollapsedWidth}px`;\n        } else {\n            return `0 0 ${this.mcWidth}px`;\n        }\n    }\n\n    get mcWidth(): number {\n        if (this.mcCollapsed) {\n            return this.mcCollapsedWidth;\n        } else {\n            return this._mcWidth;\n        }\n    }\n\n    constructor(\n        @Optional() @Host() private mcLayoutComponent: McLayoutComponent) {\n    }\n\n    ngOnInit() {\n        if (this.mcLayoutComponent) {\n            this.mcLayoutComponent.hasSidebar = true;\n        }\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { McContentComponent } from './content.component';\nimport { McFooterComponent } from './footer.component';\nimport { McHeaderComponent } from './header.component';\nimport { McLayoutComponent } from './layout.component';\nimport { McSidebarComponent } from './sidebar.component';\n\n\n@NgModule({\n    imports: [ CommonModule ],\n    exports: [\n        McLayoutComponent,\n        McContentComponent,\n        McFooterComponent,\n        McHeaderComponent,\n        McSidebarComponent\n    ],\n    declarations: [\n        McLayoutComponent,\n        McContentComponent,\n        McFooterComponent,\n        McHeaderComponent,\n        McSidebarComponent\n    ]\n})\nexport class McLayoutModule {\n}\n","import {\n    AfterContentInit,\n    Attribute,\n    ChangeDetectionStrategy,\n    Component,\n    ContentChildren,\n    ElementRef,\n    EventEmitter,\n    forwardRef,\n    Input,\n    Output,\n    QueryList,\n    ViewEncapsulation,\n    ChangeDetectorRef,\n    Inject,\n    OnDestroy,\n    OnInit,\n    ViewChild\n} from '@angular/core';\n\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\n\nimport { Subscription } from 'rxjs';\n\nimport { FocusKeyManager, IFocusableOption } from '@ptsecurity/cdk/a11y';\nimport { SelectionModel } from '@ptsecurity/cdk/collections';\nimport { END, ENTER, HOME, PAGE_DOWN, PAGE_UP, SPACE } from '@ptsecurity/cdk/keycodes';\n\nimport {\n    McLine,\n    McLineSetter,\n    CanDisable,\n    mixinDisabled,\n    toBoolean, CanDisableCtor\n} from '@ptsecurity/mosaic/core';\n\n\n/**\n * Component for list-options of selection-list. Each list-option can automatically\n * generate a checkbox and can put current item into the selectionModel of selection-list\n * if the current item is selected.\n */\n@Component({\n    exportAs: 'mcListOption',\n    selector: 'mc-list-option',\n    host: {\n        tabindex: '-1',\n\n        class: 'mc-list-option',\n        '[class.mc-selected]': 'selected',\n        '[class.mc-focused]': '_hasFocus',\n        '(focus)': '_handleFocus()',\n        '(blur)': '_handleBlur()',\n        '(click)': '_handleClick()'\n    },\n    templateUrl: 'list-option.html',\n    encapsulation: ViewEncapsulation.None,\n    preserveWhitespaces: false,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class McListOption implements AfterContentInit, OnDestroy, OnInit, IFocusableOption {\n    _hasFocus: boolean = false;\n\n    @ContentChildren(McLine) _lines: QueryList<McLine>;\n\n    @ViewChild('text') _text: ElementRef;\n\n    // Whether the label should appear before or after the checkbox. Defaults to 'after'\n    @Input() checkboxPosition: 'before' | 'after' = 'after';\n\n    @Input() value: any;\n\n    @Input()\n    get disabled() {\n        return this._disabled || (this.listSelection && this.listSelection.disabled);\n    }\n\n    set disabled(value: any) {\n        const newValue = toBoolean(value);\n\n        if (newValue !== this._disabled) {\n            this._disabled = newValue;\n            this._changeDetector.markForCheck();\n        }\n    }\n\n    @Input()\n    get selected(): boolean {\n        return this.listSelection.selectedOptions && this.listSelection.selectedOptions.isSelected(this) || false;\n    }\n\n    set selected(value: boolean) {\n        const isSelected = toBoolean(value);\n\n        if (isSelected !== this._selected) {\n            this.setSelected(isSelected);\n\n            this.listSelection._reportValueChange();\n        }\n    }\n\n    private _lineSetter: McLineSetter;\n    private _selected = false;\n    private _disabled = false;\n\n    constructor(\n        private _element: ElementRef,\n        private _changeDetector: ChangeDetectorRef,\n        @Inject(forwardRef(() => McListSelection))\n        public listSelection: McListSelection\n    ) {}\n\n    ngOnInit() {\n        if (this._selected) {\n            // List options that are selected at initialization can't be reported properly to the form\n            // control. This is because it takes some time until the selection-list knows about all\n            // available options. Also it can happen that the ControlValueAccessor has an initial value\n            // that should be used instead. Deferring the value change report to the next tick ensures\n            // that the form control value is not being overwritten.\n            const wasSelected = this._selected;\n\n            Promise.resolve().then(() => {\n                if (this._selected || wasSelected) {\n                    this.selected = true;\n                    this._changeDetector.markForCheck();\n                }\n            });\n        }\n    }\n\n    ngAfterContentInit() {\n        this._lineSetter = new McLineSetter(this._lines, this._element);\n    }\n\n    ngOnDestroy(): void {\n        if (this.selected) {\n            // We have to delay this until the next tick in order\n            // to avoid changed after checked errors.\n            Promise.resolve().then(() => this.selected = false);\n        }\n\n        this.listSelection._removeOptionFromList(this);\n    }\n\n    toggle(): void {\n        this.selected = !this.selected;\n    }\n\n    focus(): void {\n        this._element.nativeElement.focus();\n\n        this.listSelection.setFocusedOption(this);\n    }\n\n    getLabel() {\n        return this._text ? this._text.nativeElement.textContent : '';\n    }\n\n    setSelected(selected: boolean) {\n        if (this._selected === selected || !this.listSelection.selectedOptions) { return; }\n\n        this._selected = selected;\n\n        if (selected) {\n            this.listSelection.selectedOptions.select(this);\n        } else {\n            this.listSelection.selectedOptions.deselect(this);\n        }\n\n        this._changeDetector.markForCheck();\n    }\n\n    _getHeight(): number {\n        return this._element.nativeElement.getClientRects()[0].height;\n    }\n\n    _handleClick() {\n        if (this.disabled) { return; }\n\n        this.listSelection.setFocusedOption(this);\n    }\n\n    _handleFocus() {\n        if (this.disabled || this._hasFocus) { return; }\n\n        this._hasFocus = true;\n    }\n\n    _handleBlur() {\n        this._hasFocus = false;\n\n        this.listSelection._onTouched();\n    }\n\n    _getHostElement(): HTMLElement {\n        return this._element.nativeElement;\n    }\n}\n\n\nexport const MC_SELECTION_LIST_VALUE_ACCESSOR: any = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => McListSelection),\n    multi: true\n};\n\n// Change event that is being fired whenever the selected state of an option changes. */\nexport class McListSelectionChange {\n    constructor(\n        // Reference to the selection list that emitted the event.\n        public source: McListSelection,\n        // Reference to the option that has been changed.\n        public option: McListOption\n    ) {}\n}\n\n\nexport class McListSelectionBase {}\n\nexport const _McListSelectionMixinBase: CanDisableCtor & typeof McListSelectionBase\n    = mixinDisabled(McListSelectionBase);\n\n@Component({\n    exportAs: 'mcListSelection',\n    selector: 'mc-list-selection',\n    template: '<ng-content></ng-content>',\n    styleUrls: ['./list.css'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n    inputs: ['disabled', 'tabIndex'],\n    host: {\n        class: 'mc-list-selection',\n        '[tabIndex]': 'tabIndex',\n        '(focus)': 'focus()',\n        '(blur)': '_onTouched()',\n        '(keydown)': '_onKeyDown($event)',\n        '(window:resize)': 'updateScrollSize()'\n    },\n    providers: [MC_SELECTION_LIST_VALUE_ACCESSOR],\n    preserveWhitespaces: false\n})\nexport class McListSelection extends _McListSelectionMixinBase implements\n    IFocusableOption, CanDisable, AfterContentInit, ControlValueAccessor {\n\n    _keyManager: FocusKeyManager<McListOption>;\n\n    // The option components contained within this selection-list.\n    @ContentChildren(McListOption) options: QueryList<McListOption>;\n\n    tabIndex: number;\n\n    autoSelect: boolean;\n    noUnselect: boolean;\n    multiple: boolean;\n\n    // todo temporary solution\n    withShift: boolean;\n    withCtrl: boolean;\n\n    @Input() horizontal: boolean = false;\n\n    // Emits a change event whenever the selected state of an option changes.\n    @Output() readonly selectionChange: EventEmitter<McListSelectionChange> = new EventEmitter<McListSelectionChange>();\n\n    selectedOptions: SelectionModel<McListOption>;\n\n    // Used for storing the values that were assigned before the options were initialized.\n    private _tempValues: string[] | null;\n\n    private _modelChanges = Subscription.EMPTY;\n\n    constructor(\n        private _element: ElementRef,\n        @Attribute('tabindex') tabIndex: string,\n        @Attribute('auto-select') autoSelect: string,\n        @Attribute('no-unselect') noUnselect: string,\n        @Attribute('multiple') multiple: string\n    ) {\n        super();\n\n        this.autoSelect = autoSelect === null ? true : toBoolean(autoSelect);\n        this.multiple = multiple === null ? true : toBoolean(multiple);\n        this.noUnselect = noUnselect === null ? true : toBoolean(noUnselect);\n\n        this.tabIndex = parseInt(tabIndex) || 0;\n\n        this.selectedOptions = new SelectionModel<McListOption>(this.multiple);\n    }\n\n    ngAfterContentInit(): void {\n        this.horizontal = toBoolean(this.horizontal);\n\n        this._keyManager = new FocusKeyManager<McListOption>(this.options)\n            .withTypeAhead()\n            .withVerticalOrientation(!this.horizontal)\n            .withHorizontalOrientation(this.horizontal ? 'ltr' : null);\n\n        if (this._tempValues) {\n            this._setOptionsFromValues(this._tempValues);\n            this._tempValues = null;\n        }\n\n        // Sync external changes to the model back to the options.\n        this._modelChanges = this.selectedOptions.onChange!.subscribe((event) => {\n            for (const item of event.added) {\n                item.selected = true;\n            }\n\n            for (const item of event.removed) {\n                item.selected = false;\n            }\n        });\n\n        this.updateScrollSize();\n    }\n\n    ngOnDestroy() {\n        this._modelChanges.unsubscribe();\n    }\n\n    focus() {\n        this._element.nativeElement.focus();\n    }\n\n    selectAll() {\n        this.options.forEach((option) => option.setSelected(true));\n\n        this._reportValueChange();\n    }\n\n    deselectAll() {\n        this.options.forEach((option) => option.setSelected(false));\n\n        this._reportValueChange();\n    }\n\n    updateScrollSize(): void {\n        if (this.horizontal || !this.options.first) { return; }\n\n        this._keyManager.withScrollSize(Math.floor(this._getHeight() / this.options.first._getHeight()));\n    }\n\n    // Sets the focused option of the selection-list.\n    setFocusedOption(option: McListOption): void {\n        this._keyManager.updateActiveItem(option);\n\n        if (this.withShift && this.multiple) {\n            const previousIndex = this._keyManager.previousActiveItemIndex;\n            const activeIndex = this._keyManager.activeItemIndex;\n\n            if (previousIndex < activeIndex) {\n                this.options.forEach((item, index) => {\n                    if (index >= previousIndex && index <= activeIndex) { item.setSelected(true); }\n                });\n            } else {\n                this.options.forEach((item, index) => {\n                    if (index >= activeIndex && index <= previousIndex) { item.setSelected(true); }\n                });\n            }\n\n            this.withShift = false;\n        } else if (this.withCtrl) {\n            this.withCtrl = false;\n\n            if (!this._canDeselectLast(option)) { return; }\n\n            option.toggle();\n        } else {\n            if (this.autoSelect) {\n                this.options.forEach((item) => item.setSelected(false));\n                option.setSelected(true);\n            }\n        }\n\n        this._emitChangeEvent(option);\n        this._reportValueChange();\n    }\n\n    // Implemented as part of ControlValueAccessor.\n    writeValue(values: string[]): void {\n        if (this.options) {\n            this._setOptionsFromValues(values || []);\n        } else {\n            this._tempValues = values;\n        }\n    }\n\n    // Implemented as part of ControlValueAccessor.\n    registerOnChange(fn: (value: any) => void): void {\n        this._onChange = fn;\n    }\n\n    // Implemented as part of ControlValueAccessor.\n    registerOnTouched(fn: () => void): void {\n        this._onTouched = fn;\n    }\n\n    // Implemented as a part of ControlValueAccessor.\n    setDisabledState(isDisabled: boolean): void {\n        if (this.options) {\n            this.options.forEach((option) => option.disabled = isDisabled);\n        }\n    }\n\n    getSelectedOptionValues(): string[] {\n        return this.options.filter((option) => option.selected).map((option) => option.value);\n    }\n\n    // Toggles the selected state of the currently focused option.\n    toggleFocusedOption(): void {\n        const focusedIndex = this._keyManager.activeItemIndex;\n\n        if (focusedIndex != null && this._isValidIndex(focusedIndex)) {\n            const focusedOption: McListOption = this.options.toArray()[focusedIndex];\n\n            if (focusedOption && this._canDeselectLast(focusedOption)) {\n                focusedOption.toggle();\n\n                // Emit a change event because the focused option changed its state through user interaction.\n                this._emitChangeEvent(focusedOption);\n            }\n        }\n    }\n\n    _canDeselectLast(listOption: McListOption): boolean {\n        return !(this.noUnselect && this.selectedOptions.selected.length === 1 && listOption.selected);\n    }\n\n    _getHeight(): number {\n        return this._element.nativeElement.getClientRects()[0].height;\n    }\n\n    // View to model callback that should be called if the list or its options lost focus.\n    _onTouched: () => void = () => {};\n\n    // Removes an option from the selection list and updates the active item.\n    _removeOptionFromList(option: McListOption) {\n        if (option._hasFocus) {\n            const optionIndex = this._getOptionIndex(option);\n\n            // Check whether the option is the last item\n            if (optionIndex > 0) {\n                this._keyManager.setPreviousItemActive();\n            } else if (optionIndex === 0 && this.options.length > 1) {\n                this._keyManager.setNextItemActive();\n            }\n        }\n    }\n\n    _onKeyDown(event: KeyboardEvent) {\n        const keyCode = event.keyCode;\n        this.withShift = event.shiftKey;\n        this.withCtrl = event.ctrlKey;\n\n        switch (keyCode) {\n            case SPACE:\n            case ENTER:\n                this.toggleFocusedOption();\n                event.preventDefault();\n\n                break;\n            case HOME:\n                this._keyManager.setFirstItemActive();\n                event.preventDefault();\n\n                break;\n            case END:\n                this._keyManager.setLastItemActive();\n                event.preventDefault();\n\n                break;\n            case PAGE_UP:\n                if (!this.horizontal) { this._keyManager.setPreviousPageItemActive(); }\n\n                event.preventDefault();\n\n                break;\n            case PAGE_DOWN:\n                if (!this.horizontal) { this._keyManager.setNextPageItemActive(); }\n\n                event.preventDefault();\n\n                break;\n            default:\n                this._keyManager.onKeydown(event);\n        }\n    }\n\n    // Reports a value change to the ControlValueAccessor\n    _reportValueChange() {\n        if (this.options) {\n            this._onChange(this.getSelectedOptionValues());\n        }\n    }\n\n    // Emits a change event if the selected state of an option changed.\n    _emitChangeEvent(option: McListOption) {\n        this.selectionChange.emit(new McListSelectionChange(this, option));\n    }\n\n    // Returns the option with the specified value.\n    private _getOptionByValue(value: string): McListOption | undefined {\n        return this.options.find((option) => option.value === value);\n    }\n\n    // Sets the selected options based on the specified values.\n    private _setOptionsFromValues(values: string[]) {\n        this.options.forEach((option) => option.setSelected(false));\n\n        values\n            .map((value) => this._getOptionByValue(value))\n            .filter(Boolean)\n            .forEach((option) => option!.setSelected(true));\n    }\n\n    /**\n     * Utility to ensure all indexes are valid.\n     * @param index The index to be checked.\n     * @returns True if the index is valid for our list of options.\n     */\n    private _isValidIndex(index: number): boolean {\n        return index >= 0 && index < this.options.length;\n    }\n\n    // Returns the index of the specified list option.\n    private _getOptionIndex(option: McListOption): number {\n        return this.options.toArray().indexOf(option);\n    }\n\n    // View to model callback that should be called whenever the selected options change.\n    private _onChange: (value: any) => void = (_: any) => {};\n}\n","// todo пока не делаем, перенесено из материала, но у нас в доках таких простых списков нет.\nimport {\n    AfterContentInit, ChangeDetectionStrategy, Component, ContentChildren, Directive, ElementRef, QueryList,\n    ViewEncapsulation\n} from '@angular/core';\n\nimport { McLine, McLineSetter } from '@ptsecurity/mosaic/core';\n\n\nexport class McListBase {}\n\n@Component({\n    selector: 'mc-list',\n    host: { class: 'mc-list' },\n    template: '<ng-content></ng-content>',\n    styleUrls: ['./list.css'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None\n})\nexport class McList extends McListBase {}\n\n\n/**\n * Directive whose purpose is to add the mc- CSS styling to this selector.\n * @docs-private\n */\n@Directive({\n    selector: '[mc-subheader], [mcSubheader]',\n    host: { class: 'mc-subheader' }\n})\nexport class McListSubheaderCssStyler {}\n\n\n// Boilerplate for applying mixins to McListItem.\nexport class McListItemBase {}\n\n@Component({\n    selector: 'mc-list-item, a[mc-list-item]',\n    host: {\n        class: 'mc-list-item',\n        '(focus)': '_handleFocus()',\n        '(blur)': '_handleBlur()'\n    },\n    templateUrl: './list-item.html',\n    encapsulation: ViewEncapsulation.None,\n    preserveWhitespaces: false,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class McListItem extends McListItemBase implements AfterContentInit {\n    @ContentChildren(McLine) _lines: QueryList<McLine>;\n\n    private _lineSetter: McLineSetter;\n\n    constructor(private _element: ElementRef) {\n        super();\n    }\n\n    ngAfterContentInit() {\n        this._lineSetter = new McLineSetter(this._lines, this._element);\n    }\n\n    _handleFocus() {\n        this._element.nativeElement.classList.add('mc-focused');\n    }\n\n    _handleBlur() {\n        this._element.nativeElement.classList.remove('mc-focused');\n    }\n\n    _getHostElement(): HTMLElement {\n        return this._element.nativeElement;\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { A11yModule } from '@ptsecurity/cdk/a11y';\n\nimport { McLineModule } from '@ptsecurity/mosaic/core';\n\nimport { McListSelection, McListOption } from './list-selection.component';\nimport { McList, McListItem, McListSubheaderCssStyler } from './list.component';\n\n\n@NgModule({\n    imports: [\n        CommonModule,\n        A11yModule,\n        McLineModule\n    ],\n    exports: [\n        McList,\n        McListSelection,\n        McListItem,\n        McListOption,\n        McListSubheaderCssStyler\n    ],\n    declarations: [\n        McList,\n        McListSelection,\n        McListItem,\n        McListOption,\n        McListSubheaderCssStyler\n    ]\n})\nexport class McListModule {}\n","import {\n    Input,\n    Attribute,\n    Component,\n    ElementRef,\n    OnDestroy,\n    ViewEncapsulation,\n    ChangeDetectionStrategy,\n    ChangeDetectorRef\n} from '@angular/core';\n\nimport { FocusMonitor } from '@ptsecurity/cdk/a11y';\nimport {\n    CanDisable, CanDisableCtor,\n    HasTabIndex, HasTabIndexCtor,\n    mixinDisabled,\n    mixinTabIndex,\n    toBoolean\n} from '@ptsecurity/mosaic/core';\n\n\nexport class McLinkBase {\n    constructor(public _elementRef: ElementRef) {\n    }\n}\n\nexport const _McLinkBase: HasTabIndexCtor & CanDisableCtor & typeof McLinkBase\n    = mixinTabIndex(mixinDisabled(McLinkBase));\n\n@Component({\n    selector: 'a.mc-link',\n    template: `<ng-content></ng-content>`,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n    exportAs: 'mcLink',\n    styleUrls: ['./link.css'],\n    inputs: ['disabled'],\n    host: {\n        '[attr.disabled]': 'disabled || null',\n        '[attr.tabindex]': 'tabIndex'\n    }\n})\n\nexport class McLink extends _McLinkBase implements OnDestroy, HasTabIndex, CanDisable {\n\n    @Input()\n    get disabled() {\n        return this._disabled;\n    }\n\n    set disabled(value: any) {\n        const newValue = toBoolean(value);\n\n        if (newValue !== this._disabled) {\n            this._disabled = newValue;\n            this._changeDetector.markForCheck();\n        }\n    }\n\n    private _disabled = false;\n\n    constructor(\n        @Attribute('tabindex') tabIndex: string,\n        public elementRef: ElementRef,\n        private _focusMonitor: FocusMonitor,\n        private _changeDetector: ChangeDetectorRef) {\n\n        super(elementRef);\n        this._focusMonitor.monitor(elementRef.nativeElement, true);\n        this.tabIndex = parseInt(tabIndex) || 0;\n    }\n\n    ngOnDestroy() {\n        this._focusMonitor.stopMonitoring(this.elementRef.nativeElement);\n    }\n\n    focus(): void {\n        this._getHostElement().focus();\n    }\n\n    _getHostElement() {\n        return this.elementRef.nativeElement;\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { A11yModule } from '@ptsecurity/cdk/a11y';\n\nimport { McLink } from './link.component';\n\n\n@NgModule({\n    imports: [\n        CommonModule,\n        A11yModule\n    ],\n    declarations: [McLink],\n    exports: [McLink]\n})\nexport class McLinkModule {}\n","import { Injectable, Optional, SkipSelf } from '@angular/core';\nimport { Subject, Subscription } from 'rxjs';\n\nimport { McModalRef } from './modal-ref.class';\n\n\ninterface IRegisteredMeta {\n    modalRef: McModalRef;\n    afterOpenSubscription: Subscription;\n    afterCloseSubscription: Subscription;\n}\n\n@Injectable()\nexport class McModalControlService {\n\n    // Track singleton afterAllClose through over the injection tree\n    get afterAllClose(): Subject<void> {\n        return this.parentService ? this.parentService.afterAllClose : this.rootAfterAllClose;\n    }\n\n    // Track singleton openModals array through over the injection tree\n    get openModals(): McModalRef[] {\n        return this.parentService ? this.parentService.openModals : this.rootOpenModals;\n    }\n\n    // @ts-ignore\n    private rootOpenModals: McModalRef[] = this.parentService ? null : [];\n    // @ts-ignore\n    private rootAfterAllClose: Subject<void> = this.parentService ? null : new Subject<void>();\n    // @ts-ignore\n    private rootRegisteredMetaMap: Map<McModalRef, IRegisteredMeta> = this.parentService ? null : new Map();\n\n    // Registered modal for later usage\n    private get registeredMetaMap(): Map<McModalRef, IRegisteredMeta> {\n        return this.parentService ? this.parentService.registeredMetaMap : this.rootRegisteredMetaMap;\n    }\n\n    constructor(\n        @Optional() @SkipSelf() private parentService: McModalControlService) {\n    }\n\n    // Register a modal to listen its open/close\n    registerModal(modalRef: McModalRef): void {\n        if (!this.hasRegistered(modalRef)) {\n            const afterOpenSubscription = modalRef.afterOpen.subscribe(() => this.openModals.push(modalRef));\n            const afterCloseSubscription = modalRef.afterClose.subscribe(() => this.removeOpenModal(modalRef));\n\n            this.registeredMetaMap.set(modalRef, {modalRef, afterOpenSubscription, afterCloseSubscription});\n        }\n    }\n\n    hasRegistered(modalRef: McModalRef): boolean {\n        return this.registeredMetaMap.has(modalRef);\n    }\n\n    // Close all registered opened modals\n    closeAll(): void {\n        let i = this.openModals.length;\n\n        while (i--) {\n            this.openModals[i].close();\n        }\n    }\n\n    private removeOpenModal(modalRef: McModalRef): void {\n        const index = this.openModals.indexOf(modalRef);\n\n        if (index > -1) {\n            this.openModals.splice(index, 1);\n\n            if (!this.openModals.length) {\n                this.afterAllClose.next();\n            }\n        }\n    }\n}\n","import { Observable } from 'rxjs';\n\nimport { McModalComponent } from './modal.component';\n\n\n/**\n * API class that public to users to handle the modal instance.\n * McModalRef is aim to avoid accessing to the modal instance directly by users.\n */\nexport abstract class McModalRef<T = any, R = any> {\n    abstract afterOpen: Observable<void>;\n    abstract afterClose: Observable<R>;\n\n    abstract open(): void;\n\n    abstract close(result?: R): void;\n\n    abstract destroy(result?: R): void;\n\n    /**\n     * Trigger the nzOnOk/nzOnCancel by manual\n     */\n    abstract triggerOk(): void;\n\n    abstract triggerCancel(): void;\n\n    // /**\n    //  * Return the ComponentRef of nzContent when specify nzContent as a Component\n    //  * Note: this method may return undefined if the Component has not ready yet.\n    //    (it only available after Modal's ngOnInit)\n    //  */\n    // abstract getContentComponentRef(): ComponentRef<{}>;\n\n    /**\n     * Return the component instance of nzContent when specify nzContent as a Component\n     * Note: this method may return undefined if the Component has not ready yet.\n     * (it only available after Modal's ngOnInit)\n     */\n    abstract getContentComponent(): T;\n\n    /**\n     * Get the dom element of this Modal\n     */\n    abstract getElement(): HTMLElement;\n\n    /**\n     * Get the instance of the Modal itself\n     */\n    abstract getInstance(): McModalComponent;\n}\n","export interface IClickPosition {\n    x: number;\n    y: number;\n}\n\nexport class ModalUtil {\n    private lastPosition: IClickPosition;\n\n    constructor(private document: Document) {\n        this.lastPosition = {x: -1, y: -1};\n        this.listenDocumentClick();\n    }\n\n    getLastClickPosition(): IClickPosition {\n        return this.lastPosition;\n    }\n\n    listenDocumentClick(): void {\n        this.document.addEventListener('click', (event: MouseEvent) => {\n            this.lastPosition = {x: event.clientX, y: event.clientY};\n        });\n    }\n}\n\nexport default new ModalUtil(document);\n","import {\n    ChangeDetectionStrategy,\n    Component,\n    Directive,\n    ElementRef,\n    OnDestroy,\n    QueryList,\n    ViewEncapsulation,\n    ContentChildren\n} from '@angular/core';\n\nimport { FocusMonitor } from '@ptsecurity/cdk/a11y';\nimport { Platform } from '@ptsecurity/cdk/platform';\n\nimport { mixinColor, mixinDisabled, CanColor, CanDisable, CanDisableCtor, CanColorCtor } from '@ptsecurity/mosaic/core';\nimport { McIcon } from '@ptsecurity/mosaic/icon';\n\n\n@Directive({\n    selector: 'button[mc-button], a[mc-button]',\n    host: { class: 'mc-button' }\n})\nexport class McButtonCSSStyler {}\n\n\n@Directive({\n    selector: 'button[mc-xs-button], a[mc-xs-button]',\n    host: { class: 'mc-button mc-button_xs' }\n})\nexport class McXSButtonCSSStyler {}\n\n\n@Directive({\n    selector: 'button[mc-sm-button], a[mc-sm-button]',\n    host: { class: 'mc-button mc-button_sm' }\n})\nexport class McSMButtonCSSStyler {}\n\n\n@Directive({\n    selector: 'button[mc-lg-button], a[mc-lg-button]',\n    host: { class: 'mc-button mc-button_lg' }\n})\nexport class McLGButtonCSSStyler {}\n\n\n@Directive({\n    selector: 'button[mc-xl-button], a[mc-xl-button]',\n    host: { class: 'mc-button mc-button_xl' }\n})\nexport class McXLButtonCSSStyler {}\n\n\n@Directive({\n    selector: 'button[mc-icon-button], a[mc-icon-button]',\n    queries: {\n        contentChildren: new ContentChildren(McIcon)\n    },\n    host: { class: 'mc-icon-button' }\n})\nexport class McIconButtonCSSStyler {\n    nativeElement: Element;\n\n    contentChildren: QueryList<McIcon>;\n\n    constructor(elementRef: ElementRef) {\n        this.nativeElement = elementRef.nativeElement;\n    }\n\n    ngAfterContentInit() {\n        this._addClassModificatorForIcons();\n    }\n\n    _addClassModificatorForIcons() {\n        const twoIcons = 2;\n        const icons = this.contentChildren.map((item) => item._elementRef.nativeElement);\n\n        if (icons.length === 1) {\n            const iconElement = icons[0];\n\n            if (!iconElement.previousElementSibling && !iconElement.nextElementSibling) {\n                if (iconElement.nextSibling) {\n                    iconElement.classList.add('mc-icon_left');\n                    this.nativeElement.classList.add('mc-icon-button_left');\n                }\n\n                if (iconElement.previousSibling) {\n                    iconElement.classList.add('mc-icon_right');\n                    this.nativeElement.classList.add('mc-icon-button_right');\n                }\n            }\n        } else if (icons.length === twoIcons) {\n            const firstIconElement = icons[0];\n            const secondIconElement = icons[1];\n\n            firstIconElement.classList.add('mc-icon_left');\n            secondIconElement.classList.add('mc-icon_right');\n        }\n    }\n}\n\n\nexport class McButtonBase {\n    constructor(public _elementRef: ElementRef) {}\n}\n\nexport const _McButtonMixinBase:\n    CanDisableCtor &\n    CanColorCtor &\n    typeof McButtonBase =\n        mixinColor(mixinDisabled(McButtonBase));\n\n\n@Component({\n    selector: `\n        button[mc-button],\n        button[mc-xs-button],\n        button[mc-sm-button],\n        button[mc-lg-button],\n        button[mc-xl-button]\n    `,\n    templateUrl: './button.component.html',\n    styleUrls: ['./button.css'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n    inputs: ['disabled', 'color'],\n    host: {\n        '[disabled]': 'disabled || null'\n    }\n})\nexport class McButton extends _McButtonMixinBase implements OnDestroy, CanDisable, CanColor {\n    constructor(elementRef: ElementRef, private _focusMonitor: FocusMonitor) {\n        super(elementRef);\n\n        this._focusMonitor.monitor(this._elementRef.nativeElement, true);\n    }\n\n    ngOnDestroy() {\n        this._focusMonitor.stopMonitoring(this._elementRef.nativeElement);\n    }\n\n    focus(): void {\n        this._getHostElement().focus();\n    }\n\n    _getHostElement() {\n        return this._elementRef.nativeElement;\n    }\n}\n\n\n@Component({\n    selector: 'a[mc-button], a[mc-xs-button], a[mc-sm-button], a[mc-lg-button], a[mc-xl-button]',\n    templateUrl: './button.component.html',\n    styleUrls: ['./button.css'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n    inputs: ['disabled', 'color'],\n    host: {\n        '[attr.tabindex]': 'disabled ? -1 : 0',\n        '[attr.disabled]': 'disabled || null',\n        '(click)': '_haltDisabledEvents($event)'\n    }\n})\nexport class McAnchor extends McButton {\n    constructor(focusMonitor: FocusMonitor, elementRef: ElementRef) {\n        super(elementRef, focusMonitor);\n    }\n\n    _haltDisabledEvents(event: Event) {\n        if (this.disabled) {\n            event.preventDefault();\n            event.stopImmediatePropagation();\n        }\n    }\n}\n\n\n@Component({\n    selector: 'button[mc-icon-button]',\n    templateUrl: './button.component.html',\n    styleUrls: ['./button.css'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n    inputs: ['disabled', 'color'],\n    host: {\n        '[attr.tabindex]': 'disabled ? -1 : 0',\n        '[attr.disabled]': 'disabled || null'\n    }\n})\nexport class McIconButton extends McButton {\n    constructor(focusMonitor: FocusMonitor, elementRef: ElementRef) {\n        super(elementRef, focusMonitor);\n    }\n\n    _haltDisabledEvents(event: Event) {\n        if (this.disabled) {\n            event.preventDefault();\n            event.stopImmediatePropagation();\n        }\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { A11yModule } from '@ptsecurity/cdk/a11y';\nimport { PlatformModule } from '@ptsecurity/cdk/platform';\n\nimport {\n    McButton,\n    McAnchor,\n    McIconButton,\n    McButtonCSSStyler,\n    McXSButtonCSSStyler,\n    McSMButtonCSSStyler,\n    McLGButtonCSSStyler,\n    McXLButtonCSSStyler,\n    McIconButtonCSSStyler\n} from './button.component';\n\n\n@NgModule({\n    imports: [\n        CommonModule,\n        A11yModule,\n        PlatformModule\n    ],\n    exports: [\n        McButton,\n        McAnchor,\n        McIconButton,\n        McButtonCSSStyler,\n        McXSButtonCSSStyler,\n        McSMButtonCSSStyler,\n        McLGButtonCSSStyler,\n        McXLButtonCSSStyler,\n        McIconButtonCSSStyler\n    ],\n    declarations: [\n        McButton,\n        McAnchor,\n        McIconButton,\n        McButtonCSSStyler,\n        McXSButtonCSSStyler,\n        McSMButtonCSSStyler,\n        McLGButtonCSSStyler,\n        McXLButtonCSSStyler,\n        McIconButtonCSSStyler\n    ]\n})\nexport class McButtonModule {}\n","import { InjectionToken } from '@angular/core';\n\n\n/**\n * Checkbox click action when user click on input element.\n * noop: Do not toggle checked or indeterminate.\n * check: Only toggle checked status, ignore indeterminate.\n * check-indeterminate: Toggle checked status, set indeterminate to false. Default behavior.\n * undefined: Same as `check-indeterminate`.\n */\nexport type McCheckboxClickAction = 'noop' | 'check' | 'check-indeterminate' | undefined;\n\n/**\n * Injection token that can be used to specify the checkbox click behavior.\n */\nexport const MC_CHECKBOX_CLICK_ACTION =\n    new InjectionToken<McCheckboxClickAction>('mc-checkbox-click-action');\n","import {\n    AfterViewInit,\n    Attribute,\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    ElementRef,\n    EventEmitter,\n    forwardRef,\n    Inject,\n    Input,\n    OnDestroy,\n    Optional,\n    Output,\n    ViewChild,\n    ViewEncapsulation\n} from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { FocusMonitor, FocusOrigin } from '@ptsecurity/cdk/a11y';\nimport {\n    CanColor, CanColorCtor,\n    CanDisable, CanDisableCtor,\n    HasTabIndex, HasTabIndexCtor,\n    mixinColor,\n    mixinDisabled,\n    mixinTabIndex,\n    toBoolean\n} from '@ptsecurity/mosaic/core';\n\nimport { MC_CHECKBOX_CLICK_ACTION, McCheckboxClickAction } from './checkbox-config';\n\n\n// Increasing integer for generating unique ids for checkbox components.\nlet nextUniqueId = 0;\n\n/**\n * Provider Expression that allows mc-checkbox to register as a ControlValueAccessor.\n * This allows it to support [(ngModel)].\n * @docs-private\n */\nexport const MC_CHECKBOX_CONTROL_VALUE_ACCESSOR: any = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => McCheckbox),\n    multi: true\n};\n\n/**\n * Represents the different states that require custom transitions between them.\n * @docs-private\n */\nexport enum TransitionCheckState {\n    /** The initial state of the component before any user interaction. */\n    Init,\n    /** The state representing the component when it's becoming checked. */\n    Checked,\n    /** The state representing the component when it's becoming unchecked. */\n    Unchecked,\n    /** The state representing the component when it's becoming indeterminate. */\n    Indeterminate\n}\n\n/** Change event object emitted by McCheckbox. */\nexport class McCheckboxChange {\n    /** The source McCheckbox of the event. */\n    source: McCheckbox;\n    /** The new `checked` value of the checkbox. */\n    checked: boolean;\n}\n\n// Boilerplate for applying mixins to McCheckbox.\n/** @docs-private */\nexport class McCheckboxBase {\n    constructor(public _elementRef: ElementRef) {\n    }\n}\n\nexport const _McCheckboxMixinBase:\n    HasTabIndexCtor &\n    CanColorCtor &\n    CanDisableCtor &\n    typeof McCheckboxBase =\n        mixinTabIndex(mixinColor(mixinDisabled(McCheckboxBase)));\n\n\n/**\n * A mosaic checkbox component. Supports all of the functionality of an HTML5 checkbox,\n * and exposes a similar API. A McCheckbox can be either checked, unchecked, indeterminate, or\n * disabled. Note that all additional accessibility attributes are taken care of by the component,\n * so there is no need to provide them yourself. However, if you want to omit a label and still\n * have the checkbox be accessible, you may supply an [aria-label] input.\n */\n@Component({\n    selector: 'mc-checkbox',\n    templateUrl: 'checkbox.html',\n    styleUrls: ['checkbox.css'],\n    exportAs: 'mcCheckbox',\n    host: {\n        class: 'mc-checkbox',\n        '[id]': 'id',\n        '[attr.id]': 'id',\n        '[class.mc-checkbox-indeterminate]': 'indeterminate',\n        '[class.mc-checkbox-checked]': 'checked',\n        '[class.mc-checkbox-disabled]': 'disabled',\n        '[class.mc-checkbox-label-before]': 'labelPosition == \"before\"'\n    },\n    providers: [MC_CHECKBOX_CONTROL_VALUE_ACCESSOR],\n    inputs: ['color', 'tabIndex'],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class McCheckbox extends _McCheckboxMixinBase implements ControlValueAccessor,\n    AfterViewInit, OnDestroy, CanColor, CanDisable, HasTabIndex {\n\n    /**\n     * Attached to the aria-label attribute of the host element. In most cases, arial-labelledby will\n     * take precedence so this may be omitted.\n     */\n    @Input('aria-label') ariaLabel: string = '';\n\n    /**\n     * Users can specify the `aria-labelledby` attribute which will be forwarded to the input element\n     */\n    @Input('aria-labelledby') ariaLabelledby: string | null = null;\n\n    private _uniqueId: string = `mc-checkbox-${++nextUniqueId}`;\n\n    /** A unique id for the checkbox input. If none is supplied, it will be auto-generated. */\n    @Input() id: string = this._uniqueId;\n\n    /** Returns the unique id for the visual hidden input. */\n    get inputId(): string {\n        return `${this.id || this._uniqueId}-input`;\n    }\n\n    /** Whether the checkbox is required. */\n    @Input()\n    get required(): boolean {\n        return this._required;\n    }\n\n    set required(value: boolean) {\n        this._required = toBoolean(value);\n    }\n\n    private _required: boolean;\n\n    /** Whether the label should appear after or before the checkbox. Defaults to 'after' */\n    @Input() labelPosition: 'before' | 'after' = 'after';\n\n    /** Name value will be applied to the input element if present */\n    @Input() name: string | null = null;\n\n    /** Event emitted when the checkbox's `checked` value changes. */\n    @Output() readonly change: EventEmitter<McCheckboxChange> =\n        new EventEmitter<McCheckboxChange>();\n\n    /** Event emitted when the checkbox's `indeterminate` value changes. */\n    @Output() readonly indeterminateChange: EventEmitter<boolean> = new EventEmitter<boolean>();\n\n    /** The value attribute of the native input element */\n    @Input() value: string;\n\n    /** The native `<input type=\"checkbox\">` element */\n    @ViewChild('input') _inputElement: ElementRef;\n\n    /**\n     * Called when the checkbox is blurred. Needed to properly implement ControlValueAccessor.\n     * @docs-private\n     */\n    _onTouched: () => any = () => {\n    }\n\n    private _currentAnimationClass: string = '';\n\n    private _currentCheckState: TransitionCheckState = TransitionCheckState.Init;\n\n    private _controlValueAccessorChangeFn: (value: any) => void = () => {\n    }\n\n    constructor(elementRef: ElementRef,\n                private _changeDetectorRef: ChangeDetectorRef,\n                private _focusMonitor: FocusMonitor,\n                @Attribute('tabindex') tabIndex: string,\n                @Optional() @Inject(MC_CHECKBOX_CLICK_ACTION)\n                private _clickAction: McCheckboxClickAction) {\n        super(elementRef);\n\n        this.tabIndex = parseInt(tabIndex) || 0;\n    }\n\n    ngAfterViewInit() {\n        this._focusMonitor\n            .monitor(this._inputElement.nativeElement)\n            .subscribe((focusOrigin) => this._onInputFocusChange(focusOrigin));\n    }\n\n    ngOnDestroy() {\n        this._focusMonitor.stopMonitoring(this._inputElement.nativeElement);\n    }\n\n    /**\n     * Whether the checkbox is checked.\n     */\n    @Input()\n    get checked(): boolean {\n        return this._checked;\n    }\n\n    set checked(value: boolean) {\n        if (value != this.checked) {\n            this._checked = value;\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n\n    private _checked: boolean = false;\n\n    /**\n     * Whether the checkbox is disabled. This fully overrides the implementation provided by\n     * mixinDisabled, but the mixin is still required because mixinTabIndex requires it.\n     */\n    @Input()\n    get disabled() {\n        return this._disabled;\n    }\n\n    set disabled(value: any) {\n        if (value != this.disabled) {\n            this._disabled = value;\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n\n    private _disabled: boolean = false;\n\n    /**\n     * Whether the checkbox is indeterminate. This is also known as \"mixed\" mode and can be used to\n     * represent a checkbox with three states, e.g. a checkbox that represents a nested list of\n     * checkable items. Note that whenever checkbox is manually clicked, indeterminate is immediately\n     * set to false.\n     */\n    @Input()\n    get indeterminate(): boolean {\n        return this._indeterminate;\n    }\n\n    set indeterminate(value: boolean) {\n        const changed = value != this._indeterminate;\n        this._indeterminate = value;\n\n        if (changed) {\n            if (this._indeterminate) {\n                this._transitionCheckState(TransitionCheckState.Indeterminate);\n            } else {\n                this._transitionCheckState(\n                    this.checked ? TransitionCheckState.Checked : TransitionCheckState.Unchecked);\n            }\n            this.indeterminateChange.emit(this._indeterminate);\n        }\n    }\n\n    private _indeterminate: boolean = false;\n\n    /** Method being called whenever the label text changes. */\n    _onLabelTextChange() {\n        // This method is getting called whenever the label of the checkbox changes.\n        // Since the checkbox uses the OnPush strategy we need to notify it about the change\n        // that has been recognized by the cdkObserveContent directive.\n        this._changeDetectorRef.markForCheck();\n    }\n\n    // Implemented as part of ControlValueAccessor.\n    writeValue(value: any) {\n        this.checked = !!value;\n    }\n\n    // Implemented as part of ControlValueAccessor.\n    registerOnChange(fn: (value: any) => void) {\n        this._controlValueAccessorChangeFn = fn;\n    }\n\n    // Implemented as part of ControlValueAccessor.\n    registerOnTouched(fn: any) {\n        this._onTouched = fn;\n    }\n\n    // Implemented as part of ControlValueAccessor.\n    setDisabledState(isDisabled: boolean) {\n        this.disabled = isDisabled;\n    }\n\n    _getAriaChecked(): 'true' | 'false' | 'mixed' {\n        return this.checked ? 'true' : (this.indeterminate ? 'mixed' : 'false');\n    }\n\n    private _transitionCheckState(newState: TransitionCheckState) {\n        const oldState = this._currentCheckState;\n        const element: HTMLElement = this._elementRef.nativeElement;\n\n        if (oldState === newState) {\n            return;\n        }\n        if (this._currentAnimationClass.length > 0) {\n            element.classList.remove(this._currentAnimationClass);\n        }\n\n        this._currentCheckState = newState;\n\n        if (this._currentAnimationClass.length > 0) {\n            element.classList.add(this._currentAnimationClass);\n        }\n    }\n\n    private _emitChangeEvent() {\n        const event = new McCheckboxChange();\n        event.source = this;\n        event.checked = this.checked;\n\n        this._controlValueAccessorChangeFn(this.checked);\n        this.change.emit(event);\n    }\n\n    /** Function is called whenever the focus changes for the input element. */\n    private _onInputFocusChange(focusOrigin: FocusOrigin) {\n        if (focusOrigin) {\n            this._onTouched();\n        }\n    }\n\n    /** Toggles the `checked` state of the checkbox. */\n    toggle(): void {\n        this.checked = !this.checked;\n    }\n\n    /**\n     * Event handler for checkbox input element.\n     * Toggles checked state if element is not disabled.\n     * Do not toggle on (change) event since IE doesn't fire change event when\n     *   indeterminate checkbox is clicked.\n     * @param event\n     */\n    _onInputClick(event: Event) {\n        // We have to stop propagation for click events on the visual hidden input element.\n        // By default, when a user clicks on a label element, a generated click event will be\n        // dispatched on the associated input element. Since we are using a label element as our\n        // root container, the click event on the `checkbox` will be executed twice.\n        // The real click event will bubble up, and the generated click event also tries to bubble up.\n        // This will lead to multiple click events.\n        // Preventing bubbling for the second event will solve that issue.\n        event.stopPropagation();\n\n        // If resetIndeterminate is false, and the current state is indeterminate, do nothing on click\n        if (!this.disabled && this._clickAction !== 'noop') {\n            // When user manually click on the checkbox, `indeterminate` is set to false.\n            if (this.indeterminate && this._clickAction !== 'check') {\n\n                Promise.resolve().then(() => {\n                    this._indeterminate = false;\n                    this.indeterminateChange.emit(this._indeterminate);\n                });\n            }\n\n            this.toggle();\n            this._transitionCheckState(\n                this._checked ? TransitionCheckState.Checked : TransitionCheckState.Unchecked);\n\n            // Emit our custom change event if the native input emitted one.\n            // It is important to only emit it, if the native input triggered one, because\n            // we don't want to trigger a change event, when the `checked` variable changes for example.\n            this._emitChangeEvent();\n        } else if (!this.disabled && this._clickAction === 'noop') {\n            // Reset native input when clicked with noop. The native checkbox becomes checked after\n            // click, reset it to be align with `checked` value of `mc-checkbox`.\n            this._inputElement.nativeElement.checked = this.checked;\n            this._inputElement.nativeElement.indeterminate = this.indeterminate;\n        }\n    }\n\n    /** Focuses the checkbox. */\n    focus(): void {\n        this._focusMonitor.focusVia(this._inputElement.nativeElement, 'keyboard');\n    }\n\n    _onInteractionEvent(event: Event) {\n        // We always have to stop propagation on the change event.\n        // Otherwise the change event, from the input element, will bubble up and\n        // emit its event object to the `change` output.\n        event.stopPropagation();\n    }\n}\n","import {\n    Directive,\n    forwardRef,\n    Provider\n} from '@angular/core';\nimport {\n    CheckboxRequiredValidator,\n    NG_VALIDATORS\n} from '@angular/forms';\n\n\nexport const MC_CHECKBOX_REQUIRED_VALIDATOR: Provider = {\n    provide: NG_VALIDATORS,\n    useExisting: forwardRef(() => McCheckboxRequiredValidator),\n    multi: true\n};\n\n/**\n * Validator for Mosaic checkbox's required attribute in template-driven checkbox.\n * Current CheckboxRequiredValidator only work with `input type=checkbox` and does not\n * work with `mc-checkbox`.\n */\n@Directive({\n    selector: `mc-checkbox[required][formControlName],\n             mc-checkbox[required][formControl], mc-checkbox[required][ngModel]`,\n    providers: [MC_CHECKBOX_REQUIRED_VALIDATOR],\n    host: { '[attr.required]': 'required ? \"\" : null' }\n})\nexport class McCheckboxRequiredValidator extends CheckboxRequiredValidator {\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { McCheckbox } from './checkbox';\nimport { McCheckboxRequiredValidator } from './checkbox-required-validator';\n\n\n@NgModule({\n    imports: [CommonModule],\n    exports: [McCheckbox, McCheckboxRequiredValidator],\n    declarations: [McCheckbox, McCheckboxRequiredValidator]\n})\nexport class McCheckboxModule {\n}\n","import { ChangeDetectionStrategy, Component, Input, ViewEncapsulation } from '@angular/core';\nimport { coerceBooleanProperty } from '@ptsecurity/cdk/coercion';\n\n\n@Component({\n    selector: 'mc-divider',\n    host: {\n        class: 'mc-divider',\n        role: 'separator',\n        '[attr.aria-orientation]': 'vertical ? \"vertical\" : \"horizontal\"',\n        '[class.mc-divider-vertical]': 'vertical',\n        '[class.mc-divider-inset]': 'inset'\n    },\n    template: '',\n    styleUrls: ['divider.css'],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    preserveWhitespaces: false\n})\nexport class McDivider {\n    // Whether the divider is vertically aligned.\n    @Input()\n    get vertical(): boolean {\n        return this._vertical;\n    }\n\n    set vertical(value: boolean) {\n        this._vertical = coerceBooleanProperty(value);\n    }\n\n    private _vertical: boolean = false;\n\n    // Whether the divider is an inset divider.\n    @Input()\n    get inset(): boolean {\n        return this._inset;\n    }\n\n    set inset(value: boolean) {\n        this._inset = coerceBooleanProperty(value);\n    }\n\n    private _inset: boolean = false;\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { McDivider } from './divider.component';\n\n\n@NgModule({\n    imports: [CommonModule],\n    exports: [McDivider],\n    declarations: [McDivider]\n})\nexport class McDividerModule {\n}\n","import { Component } from '@angular/core';\n\n\n@Component({\n    selector: 'mc-cleaner',\n    template: '<i mc-icon=\"mc-close-M_16\" class=\"mc-cleaner__icon\"></i>'\n})\nexport class McCleaner {\n}\n","import { NgControl } from '@angular/forms';\nimport { Observable } from 'rxjs';\n\n\n/** An interface which allows a control to work inside of a `MсFormField`. */\nexport abstract class McFormFieldControl<T> {\n    /** The value of the control. */\n    value: T | null;\n\n    /**\n     * Stream that emits whenever the state of the control changes such that the parent `MсFormField`\n     * needs to run change detection.\n     */\n    readonly stateChanges: Observable<void>;\n\n    /** The element ID for this control. */\n    readonly id: string;\n\n    /** The placeholder for this control. */\n    readonly placeholder: string;\n\n    /** Gets the NgControl for this control. */\n    readonly ngControl: NgControl | null;\n\n    /** Whether the control is focused. */\n    readonly focused: boolean;\n\n    /** Whether the control is empty. */\n    readonly empty: boolean;\n\n    /** Whether the control is required. */\n    readonly required: boolean;\n\n    /** Whether the control is disabled. */\n    readonly disabled: boolean;\n\n    /** Whether the control is in an error state. */\n    readonly errorState: boolean;\n\n    /**\n     * An optional name for the control type that can be used to distinguish `mc-form-field` elements\n     * based on their control type. The form field will add a class,\n     * `mc-form-field-type-{{controlType}}` to its root element.\n     */\n    readonly controlType?: string;\n\n    /** Handles a click on the control's container. */\n    abstract onContainerClick(event: MouseEvent): void;\n}\n","import { Observable } from 'rxjs';\n\n\n/** An interface which allows a control to work inside of a `MсFormField`. */\nexport abstract class McFormFieldNumberControl<T> {\n    /** The value of the control. */\n    value: T | null;\n\n    /**\n     * Stream that emits whenever the state of the control changes such that the parent `MсFormField`\n     * needs to run change detection.\n     */\n    readonly stateChanges: Observable<void>;\n\n    /** the number step */\n    step: number;\n\n    /** the number big step */\n    bigStep: number;\n\n    /** Whether the control is focused. */\n    readonly focused: boolean;\n\n    /** Handles step up and down */\n    abstract stepUp(step: number): void;\n\n    abstract stepDown(step: number): void;\n}\n","import { Directive, Input } from '@angular/core';\n\n\nlet nextUniqueId = 0;\n\n@Directive({\n    selector: 'mc-hint',\n    host: {\n        class: 'mc-hint',\n        '[attr.id]': 'id'\n    }\n})\nexport class McHint {\n    @Input() id: string = `mc-hint-${nextUniqueId++}`;\n}\n","import { Directive } from '@angular/core';\n\n\n@Directive({\n    selector: '[mcPrefix]'\n})\nexport class McPrefix {\n}\n","import { Component, EventEmitter, Output } from '@angular/core';\n\n\n@Component({\n    selector: 'mc-stepper',\n    template: `\n        <i class=\"mc mc-stepper-step-up mc-icon mc-angle-L_16 mc-icon-flip-h\" (mousedown)=\"onStepUp($event)\"></i>\n        <i class=\"mc mc-stepper-step-down mc-icon mc-angle-L_16\" (mousedown)=\"onStepDown($event)\"></i>\n    `\n})\nexport class McStepper {\n    @Output()\n    readonly stepUp: EventEmitter<void> = new EventEmitter<void>();\n    @Output()\n    readonly stepDown: EventEmitter<void> = new EventEmitter<void>();\n\n    onStepUp($event: MouseEvent) {\n        this.stepUp.emit();\n        $event.preventDefault();\n    }\n\n    onStepDown($event: MouseEvent) {\n        this.stepDown.emit();\n        $event.preventDefault();\n    }\n}\n","import { Directive } from '@angular/core';\n\n\n@Directive({\n    selector: '[mcSuffix]'\n})\nexport class McSuffix {\n}\n","import {\n    AfterContentChecked,\n    AfterContentInit,\n    AfterViewInit,\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    ContentChild,\n    ContentChildren, Directive,\n    ElementRef,\n    QueryList,\n    ViewEncapsulation\n} from '@angular/core';\nimport { ESCAPE } from '@ptsecurity/cdk/keycodes';\nimport { CanColor, CanColorCtor, mixinColor, ThemePalette } from '@ptsecurity/mosaic/core';\nimport { EMPTY, merge } from 'rxjs';\nimport { startWith } from 'rxjs/operators';\n\n\nimport { McCleaner } from './cleaner';\nimport { McFormFieldControl } from './form-field-control';\nimport { getMcFormFieldMissingControlError } from './form-field-errors';\nimport { McFormFieldNumberControl } from './form-field-number-control';\nimport { McHint } from './hint';\nimport { McPrefix } from './prefix';\nimport { McStepper } from './stepper';\nimport { McSuffix } from './suffix';\n\n\nlet nextUniqueId = 0;\n\nexport class McFormFieldBase {\n    constructor(public _elementRef: ElementRef) {}\n}\n\nexport const _McFormFieldMixinBase: CanColorCtor & typeof McFormFieldBase\n    = mixinColor(McFormFieldBase, ThemePalette.Primary);\n\n@Component({\n    selector: 'mc-form-field',\n    exportAs: 'mcFormField',\n    templateUrl: 'form-field.html',\n    // McInput is a directive and can't have styles, so we need to include its styles here.\n    // The McInput styles are fairly minimal so it shouldn't be a big deal for people who\n    // aren't using McInput.\n    styleUrls: [\n        'form-field.css',\n        '../input/input.css'\n    ],\n    host: {\n        class: 'mc-form-field',\n        '[class.mc-form-field_invalid]': '_control.errorState',\n        '[class.mc-form-field_disabled]': '_control.disabled',\n        '[class.mc-form-field_has-prefix]': 'hasPrefix',\n        '[class.mc-form-field_has-suffix]': 'hasSuffix',\n        '[class.mc-form-field_has-cleaner]': 'canShowCleaner',\n        '[class.mc-form-field_has-stepper]': 'canShowStepper',\n        '[class.mc-focused]': '_control.focused',\n        '[class.ng-untouched]': '_shouldForward(\"untouched\")',\n        '[class.ng-touched]': '_shouldForward(\"touched\")',\n        '[class.ng-pristine]': '_shouldForward(\"pristine\")',\n        '[class.ng-dirty]': '_shouldForward(\"dirty\")',\n        '[class.ng-valid]': '_shouldForward(\"valid\")',\n        '[class.ng-invalid]': '_shouldForward(\"invalid\")',\n        '[class.ng-pending]': '_shouldForward(\"pending\")',\n        '(keydown)': 'onKeyDown($event)',\n        '(mouseenter)': 'onHoverChanged(true)',\n        '(mouseleave)': 'onHoverChanged(false)'\n    },\n    inputs: ['color'],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\n\nexport class McFormField extends _McFormFieldMixinBase implements\n    AfterContentInit, AfterContentChecked, AfterViewInit, CanColor {\n\n    @ContentChild(McFormFieldControl) _control: McFormFieldControl<any>;\n    @ContentChild(McFormFieldNumberControl) _numberControl: McFormFieldNumberControl<any>;\n    @ContentChildren(McHint) _hint: QueryList<McHint>;\n    @ContentChildren(McSuffix) _suffix: QueryList<McSuffix>;\n    @ContentChildren(McPrefix) _prefix: QueryList<McPrefix>;\n    @ContentChildren(McCleaner) _cleaner: QueryList<McCleaner>;\n    @ContentChild(McStepper) _stepper: McStepper;\n\n    // Unique id for the internal form field label.\n    _labelId = `mc-form-field-label-${nextUniqueId++}`;\n\n    hovered: boolean = false;\n\n    constructor(public _elementRef: ElementRef, private _changeDetectorRef: ChangeDetectorRef) {\n        super(_elementRef);\n    }\n\n    ngAfterContentInit() {\n        this._validateControlChild();\n        if (this._control.controlType) {\n            this._elementRef.nativeElement.classList\n                .add(`mc-form-field-type-${this._control.controlType}`);\n\n            if (this._numberControl && this.hasStepper) {\n                this._stepper.stepUp.subscribe(this.onStepUp.bind(this));\n                this._stepper.stepDown.subscribe(this.onStepDown.bind(this));\n            }\n        }\n\n        // Subscribe to changes in the child control state in order to update the form field UI.\n        this._control.stateChanges.pipe(startWith())\n            .subscribe(() => {\n                this._changeDetectorRef.markForCheck();\n            });\n\n        if (this._numberControl) {\n            this._numberControl.stateChanges.pipe(startWith())\n                .subscribe(() => {\n                    this._changeDetectorRef.markForCheck();\n                });\n        }\n\n        // Run change detection if the value changes.\n        const valueChanges = this._control.ngControl && this._control.ngControl.valueChanges || EMPTY;\n        merge(valueChanges)\n            .subscribe(() => this._changeDetectorRef.markForCheck());\n    }\n\n    ngAfterContentChecked() {\n        this._validateControlChild();\n    }\n\n    ngAfterViewInit() {\n        // Avoid animations on load.\n        this._changeDetectorRef.detectChanges();\n    }\n\n    clearValue($event) {\n        $event.stopPropagation();\n\n        if (this._control && this._control.ngControl) {\n            this._control.ngControl.reset();\n        }\n    }\n\n    onContainerClick($event) {\n        if (this._control.onContainerClick) {\n            this._control.onContainerClick($event);\n        }\n    }\n\n    onKeyDown(e: KeyboardEvent): void {\n        // tslint:disable-next-line:deprecation\n        if (e.keyCode === ESCAPE &&\n            this._control.focused &&\n            this.hasCleaner) {\n\n            if (this._control && this._control.ngControl) {\n                this._control.ngControl.reset();\n            }\n\n            e.preventDefault();\n        }\n    }\n\n    onHoverChanged(isHovered: boolean) {\n        if (isHovered !== this.hovered) {\n            this.hovered  = isHovered;\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n\n    onStepUp() {\n        if (this._numberControl) {\n            this._numberControl.stepUp(this._numberControl.step);\n        }\n    }\n\n    onStepDown() {\n        if (this._numberControl) {\n            this._numberControl.stepDown(this._numberControl.step);\n        }\n    }\n\n    /** Determines whether a class from the NgControl should be forwarded to the host element. */\n    _shouldForward(prop: string): boolean {\n        const ngControl = this._control ? this._control.ngControl : null;\n\n        return ngControl && ngControl[prop];\n    }\n\n    /** Throws an error if the form field's control is missing. */\n    protected _validateControlChild() {\n        if (!this._control) {\n            throw getMcFormFieldMissingControlError();\n        }\n    }\n\n    get hasHint(): boolean {\n        return this._hint && this._hint.length > 0;\n    }\n\n    get hasSuffix(): boolean {\n        return this._suffix && this._suffix.length > 0;\n    }\n\n    get hasPrefix(): boolean {\n        return this._prefix && this._prefix.length > 0;\n    }\n\n    get hasCleaner(): boolean {\n        return this._cleaner && this._cleaner.length > 0;\n    }\n\n    get hasStepper(): boolean {\n        return !!this._stepper;\n    }\n\n    get canShowCleaner(): boolean {\n        return this.hasCleaner &&\n            this._control &&\n            this._control.ngControl\n                ? this._control.ngControl.value && !this._control.disabled\n                : false;\n    }\n\n\n    get disabled(): boolean {\n        return this._control && this._control.disabled;\n    }\n\n    get canShowStepper(): boolean {\n        return this._numberControl &&\n            !this.disabled &&\n            (\n                this._numberControl.focused ||\n                this.hovered\n            );\n    }\n}\n\n@Directive({\n    selector: 'mc-form-field[mcFormFieldWithoutBorders]',\n    exportAs: 'mcFormFieldWithoutBorders',\n    host: { class: 'mc-form-field_without-borders' }\n})\nexport class McFormFieldWithoutBorders {\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { McIconModule } from '@ptsecurity/mosaic/icon';\n\nimport { McCleaner } from './cleaner';\nimport { McFormField, McFormFieldWithoutBorders } from './form-field';\nimport { McHint } from './hint';\nimport { McPrefix } from './prefix';\nimport { McStepper } from './stepper';\nimport { McSuffix } from './suffix';\n\n\n@NgModule({\n    declarations: [\n        McFormField,\n        McFormFieldWithoutBorders,\n        McHint,\n        McPrefix,\n        McSuffix,\n        McCleaner,\n        McStepper\n    ],\n    imports: [CommonModule, McIconModule],\n    exports: [\n        McFormField,\n        McFormFieldWithoutBorders,\n        McHint,\n        McPrefix,\n        McSuffix,\n        McCleaner,\n        McStepper\n    ]\n})\nexport class McFormFieldModule {\n}\n","import { InjectionToken } from '@angular/core';\n\n\nexport const MC_INPUT_VALUE_ACCESSOR =\n    new InjectionToken<{ value: any }>('MC_INPUT_VALUE_ACCESSOR');\n","function sanitizeNumber(value: number): number | null {\n    return !isFinite(value) || isNaN(value)\n        ? null\n        : value;\n}\n\nfunction getPrecision(value: number): number {\n    const arr = value.toString().split('.');\n\n    return arr.length === 1\n        ? 1\n        // tslint:disable-next-line:no-magic-numbers\n        :  Math.pow(10, arr[1].length);\n}\n\nfunction add(value1: number, value2: number) {\n    const precision = Math.max(getPrecision(value1), getPrecision(value2));\n\n    const res = (value1 * precision + value2 * precision) / precision;\n\n    return sanitizeNumber(res);\n}\n\nexport const stepUp = (value: number | null,\n                       max: number,\n                       min: number,\n                       step: number\n): number | null => {\n    let res;\n\n    if (value === null) {\n        res = add(min, step);\n\n        return res === null ? null : Math.min(res, max);\n    }\n\n    res = add(value, step);\n\n    return res === null ? null : Math.max(Math.min(res, max), min);\n};\n\nexport const stepDown = (value: number | null,\n                         max: number,\n                         min: number,\n                         step: number\n): number | null => {\n    let res;\n\n    if (value === null) {\n        res = add(max, -step);\n\n        return res === null ? null : Math.max(res, min);\n    }\n\n    res = add(value, -step);\n\n    return res === null ? null : Math.min(Math.max(res, min), max);\n};\n","import {\n    Attribute,\n    Directive, DoCheck, ElementRef, Inject, Input, OnChanges,\n    OnDestroy, Optional, Self\n} from '@angular/core';\nimport {\n    FormGroupDirective,\n    NgControl,\n    NgForm, NgModel\n} from '@angular/forms';\nimport { coerceBooleanProperty } from '@ptsecurity/cdk/coercion';\nimport {\n    END, C, V, X, A, DELETE, BACKSPACE, TAB, ENTER,\n    ESCAPE, ZERO, NINE, NUMPAD_ZERO, NUMPAD_NINE, NUMPAD_MINUS, DASH,\n    FF_MINUS, LEFT_ARROW, RIGHT_ARROW, HOME, UP_ARROW, DOWN_ARROW, F1, F12\n} from '@ptsecurity/cdk/keycodes';\nimport { getSupportedInputTypes, Platform } from '@ptsecurity/cdk/platform';\nimport {\n    CanUpdateErrorState,\n    CanUpdateErrorStateCtor,\n    ErrorStateMatcher,\n    mixinErrorState\n} from '@ptsecurity/mosaic/core';\nimport { McFormFieldControl, McFormFieldNumberControl } from '@ptsecurity/mosaic/form-field';\nimport { Subject } from 'rxjs';\n\nimport { getMcInputUnsupportedTypeError } from './input-errors';\nimport { MC_INPUT_VALUE_ACCESSOR } from './input-value-accessor';\nimport { stepDown, stepUp } from './stepperUtils';\n\n\nconst MC_INPUT_INVALID_TYPES = [\n    'button',\n    'checkbox',\n    'file',\n    'hidden',\n    'image',\n    'radio',\n    'range',\n    'reset',\n    'submit'\n];\n\nexport const BIG_STEP = 10;\nexport const SMALL_STEP = 1;\n\nlet nextUniqueId = 0;\n\nexport class McInputBase {\n    constructor(public _defaultErrorStateMatcher: ErrorStateMatcher,\n                public _parentForm: NgForm,\n                public _parentFormGroup: FormGroupDirective,\n                public ngControl: NgControl) {\n    }\n}\n\nexport const _McInputMixinBase: CanUpdateErrorStateCtor & typeof McInputBase =\n    mixinErrorState(McInputBase);\n\n\n@Directive({\n    selector: `input[mcInput][type=\"number\"]`,\n    exportAs: 'mcNumericalInput',\n    providers: [NgModel, { provide: McFormFieldNumberControl, useExisting: McNumberInput }],\n    host: {\n        '(blur)': '_focusChanged(false)',\n        '(focus)': '_focusChanged(true)',\n        '(paste)': 'onPaste($event)',\n        '(keydown)': 'onKeyDown($event)'\n    }\n})\nexport class McNumberInput implements McFormFieldNumberControl<any> {\n\n    /**\n     * Implemented as part of McFormFieldNumberControl.\n     * @docs-private\n     */\n    @Input()\n    bigStep: number;\n\n    /**\n     * Implemented as part of McFormFieldNumberControl.\n     * @docs-private\n     */\n    @Input()\n    step: number;\n\n    @Input()\n    min: number;\n\n    @Input()\n    max: number;\n\n    /**\n     * Implemented as part of McFormFieldNumberControl.\n     * @docs-private\n     */\n    value: any;\n\n    /**\n     * Implemented as part of McFormFieldNumberControl.\n     * @docs-private\n     */\n    focused: boolean = false;\n\n    /**\n     * Implemented as part of McFormFieldNumberControl.\n     * @docs-private\n     */\n    readonly stateChanges: Subject<void> = new Subject<void>();\n\n    private readonly _host: HTMLInputElement;\n\n    constructor(\n        private _platform: Platform ,\n        private _elementRef: ElementRef,\n        private _model: NgModel,\n        @Attribute('step') step: string,\n        @Attribute('big-step') bigStep: string,\n        @Attribute('min') min: string,\n        @Attribute('max') max: string\n    ) {\n        this.step = this.isDigit(step) ? parseFloat(step) : SMALL_STEP;\n        this.bigStep = this.isDigit(bigStep) ? parseFloat(bigStep) : BIG_STEP;\n        this.min = this.isDigit(min) ? parseFloat(min) : -Infinity;\n        this.max = this.isDigit(max) ? parseFloat(max) : Infinity;\n\n        this._host = this._elementRef.nativeElement;\n\n        const self = this;\n\n        if ('valueAsNumber' in this._host) {\n            Object.defineProperty(Object.getPrototypeOf(this._host), 'valueAsNumber', {\n                // tslint:disable-next-line:no-reserved-keywords\n                get() {\n                    const res = parseFloat(self.normalizeSplitter(this.value));\n\n                    return isNaN(res) ? null : res;\n                }\n            });\n        }\n    }\n\n    _focusChanged(isFocused: boolean) {\n        if (isFocused !== this.focused) {\n            this.focused = isFocused;\n            this.stateChanges.next();\n        }\n    }\n\n    onKeyDown(event: KeyboardEvent) {\n        // tslint:disable-next-line:deprecation\n        const keyCode = event.keyCode;\n\n        const isCtrlA = (e) => e.keyCode === A && (e.ctrlKey || e.metaKey);\n        const isCtrlC = (e) => e.keyCode === C && (e.ctrlKey || e.metaKey);\n        const isCtrlV = (e) => e.keyCode === V && (e.ctrlKey || e.metaKey);\n        const isCtrlX = (e) => e.keyCode === X && (e.ctrlKey || e.metaKey);\n\n        const isFKey = (e) => e.keyCode >= F1 && e.keyCode <= F12;\n\n        const isNumber = (e) => (e.keyCode >= ZERO && e.keyCode <= NINE) ||\n            (e.keyCode >= NUMPAD_ZERO && e.keyCode <= NUMPAD_NINE);\n\n        const minuses = [NUMPAD_MINUS, DASH, FF_MINUS];\n        const serviceKeys = [DELETE, BACKSPACE, TAB, ESCAPE, ENTER];\n        const arrows = [LEFT_ARROW, RIGHT_ARROW];\n        const allowedKeys =  [HOME, END].concat(arrows).concat(serviceKeys).concat(minuses);\n\n        const isIEPeriod = (e) => e.key === '.' || e.key === 'Decimal';\n        const isNotIEPeriod = (e) => e.key === '.' || e.key === ',';\n\n        // Decimal is for IE\n        const isPeriod = (e) => this._platform.EDGE || this._platform.TRIDENT\n            ? isIEPeriod(e)\n            : isNotIEPeriod(e);\n\n        if (allowedKeys.indexOf(keyCode) !== -1 ||\n            isCtrlA(event) ||\n            isCtrlC(event) ||\n            isCtrlV(event) ||\n            isCtrlX(event) ||\n            isFKey(event) ||\n            isPeriod(event)\n        ) {\n            // let it happen, don't do anything\n            return;\n        }\n        // Ensure that it is not a number and stop the keypress\n        if (event.shiftKey || !isNumber(event)) {\n            event.preventDefault();\n\n            // process steps\n            const step = event.shiftKey ? this.bigStep : this.step;\n\n            if (keyCode === UP_ARROW) {\n                this.stepUp(step);\n            }\n\n            if (keyCode === DOWN_ARROW) {\n                this.stepDown(step);\n            }\n        }\n    }\n\n    onPaste(event) {\n        let value = event.clipboardData.getData('text');\n        value = this.normalizeSplitter(value);\n\n        if (!this.isDigit(value)) {\n            event.preventDefault();\n        }\n    }\n\n    stepUp(step: number) {\n        this._elementRef.nativeElement.focus();\n        const res = stepUp(this._host.valueAsNumber, this.max, this.min, step);\n        this._host.value = res === null ? '' : res.toString();\n        this._model.update.emit(this._host.valueAsNumber);\n    }\n\n    stepDown(step: number) {\n        this._elementRef.nativeElement.focus();\n        const res = stepDown(this._host.valueAsNumber, this.max, this.min, step);\n        this._host.value = res === null ? '' : res.toString();\n        this._model.update.emit(this._host.valueAsNumber);\n    }\n\n    private normalizeSplitter(value: string): string {\n        return value ? value.replace(/,/g, '.') : value;\n    }\n\n    private isDigit(value: string): boolean {\n        return this.isFloat(value) || this.isInt(value);\n    }\n\n    private isFloat(value: string): boolean {\n        return /^-?\\d+\\.\\d+$/.test(value);\n    }\n\n    private isInt(value: string): boolean {\n        return /^-?\\d+$/.test(value);\n    }\n}\n\n@Directive({\n    selector: `input[mcInput]`,\n    exportAs: 'mcInput',\n    host: {\n        class: 'mc-input',\n        // Native input properties that are overwritten by Angular inputs need to be synced with\n        // the native input element. Otherwise property bindings for those don't work.\n        '[attr.id]': 'id',\n        '[attr.placeholder]': 'placeholder',\n        '[disabled]': 'disabled',\n        '[required]': 'required',\n        '(blur)': '_focusChanged(false)',\n        '(focus)': '_focusChanged(true)',\n        '(input)': '_onInput()'\n    },\n    providers: [{ provide: McFormFieldControl, useExisting: McInput }]\n})\nexport class McInput extends _McInputMixinBase implements McFormFieldControl<any>, OnChanges,\n    OnDestroy, DoCheck, CanUpdateErrorState {\n\n    /** An object used to control when error messages are shown. */\n    @Input() errorStateMatcher: ErrorStateMatcher;\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    focused: boolean = false;\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    readonly stateChanges: Subject<void> = new Subject<void>();\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    controlType: string = 'mc-input';\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    @Input()\n    get disabled(): boolean {\n        if (this.ngControl && this.ngControl.disabled !== null) {\n            return this.ngControl.disabled;\n        }\n\n        return this._disabled;\n    }\n\n    set disabled(value: boolean) {\n        this._disabled = coerceBooleanProperty(value);\n\n        // Browsers may not fire the blur event if the input is disabled too quickly.\n        // Reset from here to ensure that the element doesn't become stuck.\n        if (this.focused) {\n            this.focused = false;\n            this.stateChanges.next();\n        }\n    }\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    @Input()\n    get id(): string {\n        return this._id;\n    }\n\n    set id(value: string) {\n        this._id = value || this._uid;\n    }\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    @Input() placeholder: string;\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    @Input()\n    get required(): boolean {\n        return this._required;\n    }\n\n    set required(value: boolean) {\n        this._required = coerceBooleanProperty(value);\n    }\n\n    // tslint:disable no-reserved-keywords\n    /** Input type of the element. */\n    @Input()\n    get type(): string {\n        return this._type;\n    }\n\n    set type(value: string) {\n        this._type = value || 'text';\n        this._validateType();\n\n        // When using Angular inputs, developers are no longer able to set the properties on the native\n        // input element. To ensure that bindings for `type` work, we need to sync the setter\n        // with the native property. Textarea elements don't support the type property or attribute.\n        if (getSupportedInputTypes().has(this._type)) {\n            this._elementRef.nativeElement.type = this._type;\n        }\n    }\n    // tslint:enable no-reserved-keywords\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    @Input()\n    get value(): string {\n        return this._inputValueAccessor.value;\n    }\n\n    set value(value: string) {\n        if (value !== this.value) {\n            this._inputValueAccessor.value = value;\n            this.stateChanges.next();\n        }\n    }\n\n    protected _uid = `mc-input-${nextUniqueId++}`;\n    protected _previousNativeValue: any;\n    protected _disabled = false;\n    protected _id: string;\n    protected _required = false;\n    protected _type = 'text';\n    protected _neverEmptyInputTypes = [\n        'date',\n        'datetime',\n        'datetime-local',\n        'month',\n        'time',\n        'week'\n    ].filter((t) => getSupportedInputTypes().has(t));\n\n    private _inputValueAccessor: { value: any };\n\n    constructor(protected _elementRef: ElementRef,\n                @Optional() @Self() public ngControl: NgControl,\n                @Optional() _parentForm: NgForm,\n                @Optional() _parentFormGroup: FormGroupDirective,\n                _defaultErrorStateMatcher: ErrorStateMatcher,\n                @Optional() @Self() @Inject(MC_INPUT_VALUE_ACCESSOR) inputValueAccessor: any) {\n        super(_defaultErrorStateMatcher, _parentForm, _parentFormGroup, ngControl);\n        // If no input value accessor was explicitly specified, use the element as the input value\n        // accessor.\n        this._inputValueAccessor = inputValueAccessor || this._elementRef.nativeElement;\n\n        this._previousNativeValue = this.value;\n\n        // Force setter to be called in case id was not specified.\n        this.id = this.id;\n    }\n\n    ngOnChanges() {\n        this.stateChanges.next();\n    }\n\n    ngOnDestroy() {\n        this.stateChanges.complete();\n    }\n\n    ngDoCheck() {\n        if (this.ngControl) {\n            // We need to re-evaluate this on every change detection cycle, because there are some\n            // error triggers that we can't subscribe to (e.g. parent form submissions). This means\n            // that whatever logic is in here has to be super lean or we risk destroying the performance.\n            this.updateErrorState();\n        }\n\n        // We need to dirty-check the native element's value, because there are some cases where\n        // we won't be notified when it changes (e.g. the consumer isn't using forms or they're\n        // updating the value using `emitEvent: false`).\n        this._dirtyCheckNativeValue();\n    }\n\n    /** Focuses the input. */\n    focus(): void {\n        this._elementRef.nativeElement.focus();\n    }\n\n    /** Callback for the cases where the focused state of the input changes. */\n    _focusChanged(isFocused: boolean) {\n        if (isFocused !== this.focused) {\n            this.focused = isFocused;\n            this.stateChanges.next();\n        }\n    }\n\n    _onInput() {\n        // This is a noop function and is used to let Angular know whenever the value changes.\n        // Angular will run a new change detection each time the `input` event has been dispatched.\n        // It's necessary that Angular recognizes the value change, because when floatingLabel\n        // is set to false and Angular forms aren't used, the placeholder won't recognize the\n        // value changes and will not disappear.\n        // Listening to the input event wouldn't be necessary when the input is using the\n        // FormsModule or ReactiveFormsModule, because Angular forms also listens to input events.\n    }\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    get empty(): boolean {\n        return !this._isNeverEmpty() && !this._elementRef.nativeElement.value && !this._isBadInput();\n    }\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    onContainerClick() {\n        this.focus();\n    }\n\n    /** Does some manual dirty checking on the native input `value` property. */\n    protected _dirtyCheckNativeValue() {\n        const newValue = this.value;\n\n        if (this._previousNativeValue !== newValue) {\n            this._previousNativeValue = newValue;\n            this.stateChanges.next();\n        }\n    }\n\n    /** Make sure the input is a supported type. */\n    protected _validateType() {\n        if (MC_INPUT_INVALID_TYPES.indexOf(this._type) > -1) {\n            throw getMcInputUnsupportedTypeError(this._type);\n        }\n    }\n\n    /** Checks whether the input type is one of the types that are never empty. */\n    protected _isNeverEmpty() {\n        return this._neverEmptyInputTypes.indexOf(this._type) > -1;\n    }\n\n    /** Checks whether the input is invalid based on the native validation. */\n    protected _isBadInput() {\n        // The `validity` property won't be present on platform-server.\n        const validity = (this._elementRef.nativeElement as HTMLInputElement).validity;\n\n        return validity && validity.badInput;\n    }\n}\n\n@Directive({\n    selector: 'input[mcInputMonospace]',\n    exportAs: 'McInputMonospace',\n    host: { class: 'mc-input_monospace' }\n})\nexport class McInputMono {\n}\n","import { Directive, forwardRef, Input, OnChanges, Provider, SimpleChanges } from '@angular/core';\nimport { AbstractControl, NG_VALIDATORS, ValidationErrors, Validator, ValidatorFn, Validators } from '@angular/forms';\n\n\nexport const MIN_VALIDATOR: Provider = {\n    provide: NG_VALIDATORS,\n    useExisting: forwardRef(() => MinValidator),\n    multi: true\n};\n\n/**\n * A directive which installs the {@link MinValidator} for any `formControlName`,\n * `formControl`, or control with `ngModel` that also has a `min` attribute.\n *\n * @experimental\n */\n@Directive({\n    selector: '[min][formControlName],[min][formControl],[min][ngModel]',\n    providers: [MIN_VALIDATOR],\n    host: {'[attr.min]': 'min ? min : null'}\n})\nexport class MinValidator implements Validator, OnChanges {\n\n    @Input() min: string;\n    private _validator: ValidatorFn;\n    private _onChange: () => void;\n\n    ngOnChanges(changes: SimpleChanges): void {\n        if ('min' in changes) {\n            this._createValidator();\n            if (this._onChange) { this._onChange(); }\n        }\n    }\n\n    validate(c: AbstractControl): ValidationErrors | null { return this._validator(c); }\n\n    registerOnValidatorChange(fn: () => void): void { this._onChange = fn; }\n\n    private _createValidator(): void { this._validator = Validators.min(parseInt(this.min, 10)); }\n}\n\n\nexport const MAX_VALIDATOR: Provider = {\n    provide: NG_VALIDATORS,\n    useExisting: forwardRef(() => MaxValidator),\n    multi: true\n};\n\n/**\n * A directive which installs the {@link MaxValidator} for any `formControlName`,\n * `formControl`, or control with `ngModel` that also has a `min` attribute.\n *\n * @experimental\n */\n@Directive({\n    selector: '[max][formControlName],[max][formControl],[max][ngModel]',\n    providers: [MAX_VALIDATOR],\n    host: {'[attr.max]': 'max ? max : null'}\n})\nexport class MaxValidator implements Validator,\n    OnChanges {\n\n    @Input() max: string;\n    private _validator: ValidatorFn;\n    private _onChange: () => void;\n\n    ngOnChanges(changes: SimpleChanges): void {\n        if ('max' in changes) {\n            this._createValidator();\n            if (this._onChange) { this._onChange(); }\n        }\n    }\n\n    validate(c: AbstractControl): ValidationErrors | null { return this._validator(c); }\n\n    registerOnValidatorChange(fn: () => void): void { this._onChange = fn; }\n\n    private _createValidator(): void { this._validator = Validators.max(parseInt(this.max, 10)); }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { A11yModule } from '@ptsecurity/cdk/a11y';\nimport { McCommonModule } from '@ptsecurity/mosaic/core';\n\nimport { McInput, McInputMono, McNumberInput } from './input';\nimport { MaxValidator, MinValidator } from './input-number-validators';\n\n\n@NgModule({\n    imports: [CommonModule, A11yModule, McCommonModule, FormsModule],\n    exports: [McInput, McNumberInput, McInputMono, MinValidator, MaxValidator],\n    declarations: [McInput, McNumberInput, McInputMono, MinValidator, MaxValidator ]\n})\nexport class McInputModule {\n}\n","import { Component } from '@angular/core';\n\n\n@Component({\n    selector: 'mc-content',\n    preserveWhitespaces: false,\n    templateUrl: './content.component.html',\n    styles: [\n        `:host {\n            display: block;\n        }`\n    ],\n    host: {\n        '[class.mc-layout-content]': 'true'\n    }\n})\nexport class McContentComponent {\n}\n","import { Component } from '@angular/core';\n\n\n@Component({\n    selector: 'mc-footer',\n    preserveWhitespaces: false,\n    templateUrl: './footer.component.html',\n    styles: [\n        `:host {\n            display: block;\n        }`\n    ],\n    host: {\n        '[class.mc-layout-footer]': 'true'\n    }\n})\nexport class McFooterComponent {\n}\n","import { Component } from '@angular/core';\n\n\n@Component({\n    selector : 'mc-header',\n    preserveWhitespaces: false,\n    templateUrl: './header.component.html',\n    styles: [\n        `:host {\n            display: block;\n        }`\n    ],\n    host: {\n        '[class.mc-layout-header]': 'true'\n    }\n})\nexport class McHeaderComponent {\n}\n","import { ChangeDetectionStrategy, Component, ViewEncapsulation } from '@angular/core';\n\n\n@Component({\n    selector: 'mc-layout',\n    preserveWhitespaces: false,\n    styleUrls: ['layout.css'],\n    templateUrl: './layout.component.html',\n    host: {\n        '[class.mc-layout]': 'true',\n        '[class.mc-layout-has-sidebar]': 'hasSidebar'\n    },\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class McLayoutComponent {\n    hasSidebar = false;\n}\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","\nexport function isBoolean(val: any): val is boolean { return typeof val === 'boolean'; }\n\nexport function toBoolean(value: any): boolean {\n    return value != null && `${value}` !== 'false';\n}\n","import { NgModule, InjectionToken, Optional, Inject, isDevMode } from '@angular/core';\nimport { BidiModule } from '@ptsecurity/cdk/bidi';\n\n\n// Injection token that configures whether the Mosaic sanity checks are enabled.\nexport const MC_SANITY_CHECKS = new InjectionToken<boolean>('mc-sanity-checks', {\n    providedIn: 'root',\n    factory: MC_SANITY_CHECKS_FACTORY\n});\n\nexport function MC_SANITY_CHECKS_FACTORY(): boolean {\n    return true;\n}\n\n/**\n * Module that captures anything that should be loaded and/or run for *all* Mosaic\n * components. This includes Bidi, etc.\n *\n * This module should be imported to each top-level component module (e.g., MatTabsModule).\n */\n@NgModule({\n    imports: [ BidiModule ],\n    exports: [ BidiModule ]\n})\nexport class McCommonModule {\n    // Whether we've done the global sanity checks (e.g. a theme is loaded, there is a doctype).\n    private _hasDoneGlobalChecks = false;\n\n    // Reference to the global `document` object.\n    private _document = typeof document === 'object' && document ? document : null;\n\n    // Reference to the global 'window' object.\n    private _window = typeof window === 'object' && window ? window : null;\n\n    constructor(@Optional() @Inject(MC_SANITY_CHECKS) private _sanityChecksEnabled: boolean) {\n        if (this._areChecksEnabled() && !this._hasDoneGlobalChecks) {\n            this._checkDoctypeIsDefined();\n            this._checkThemeIsPresent();\n            this._hasDoneGlobalChecks = true;\n        }\n    }\n\n    // Whether any sanity checks are enabled\n    private _areChecksEnabled(): boolean {\n        return this._sanityChecksEnabled && isDevMode() && !this._isTestEnv();\n    }\n\n    // Whether the code is running in tests.\n    private _isTestEnv() {\n        // tslint:disable-next-line\n        return this._window && (this._window['__karma__'] || this._window['jasmine']);\n    }\n\n    private _checkDoctypeIsDefined(): void {\n        if (this._document && !this._document.doctype) {\n            console.warn(\n                'Current document does not have a doctype. This may cause ' +\n                'some Mosaic components not to behave as expected.'\n            );\n        }\n    }\n\n    private _checkThemeIsPresent(): void {\n        if (this._document && typeof getComputedStyle === 'function') {\n            const testElement = this._document.createElement('div');\n\n            testElement.classList.add('mc-theme-loaded-marker');\n            this._document.body.appendChild(testElement);\n\n            const computedStyle = getComputedStyle(testElement);\n\n            // In some situations, the computed style of the test element can be null. For example in\n            // Firefox, the computed style is null if an application is running inside of a hidden iframe.\n            // See: https://bugzilla.mozilla.org/show_bug.cgi?id=548397\n            if (computedStyle && computedStyle.display !== 'none') {\n                console.warn(\n                    'Could not find Mosaic core theme. Most Mosaic ' +\n                    'components may not work as expected. For more info refer ' +\n                    'to the theming guide: link there'\n                );\n            }\n\n            this._document.body.removeChild(testElement);\n        }\n    }\n}\n","import { coerceBooleanProperty } from '@ptsecurity/cdk/coercion';\n\nimport { Constructor } from './constructor';\n\n\nexport interface CanDisable {\n    disabled: boolean;\n}\n\n/** @docs-private */\nexport type CanDisableCtor = Constructor<CanDisable>;\n\n// Mixin to augment a directive with a `disabled` property.\nexport function mixinDisabled<T extends Constructor<{}>>(base: T): CanDisableCtor & T {\n    return class extends base {\n        private _disabled: boolean = false;\n\n        get disabled() {\n            return this._disabled;\n        }\n\n        set disabled(value: any) {\n            this._disabled = coerceBooleanProperty(value);\n        }\n\n        constructor(...args: any[]) {\n            // tslint:disable-next-line\n            super(...args);\n        }\n    };\n}\n","import { ElementRef } from '@angular/core';\n\nimport { Constructor } from './constructor';\n\n\nexport interface CanColor {\n    color: ThemePalette;\n}\n\n/** @docs-private */\nexport type CanColorCtor = Constructor<CanColor>;\n\nexport interface HasElementRef {\n    _elementRef: ElementRef;\n}\n\nexport enum ThemePalette {\n    Primary = 'primary',\n    Second = 'second',\n    Error = 'error',\n    Default = 'second'\n}\n\n/** Mixin to augment a directive with a `color` property. */\nexport function mixinColor<T extends Constructor<HasElementRef>>(\n    base: T,\n    defaultColor: ThemePalette = ThemePalette.Default\n): CanColorCtor & T {\n    return class extends base {\n\n        private _color: ThemePalette;\n\n        get color(): ThemePalette {\n            return this._color;\n        }\n\n        set color(value: ThemePalette) {\n            const colorPalette = value || defaultColor;\n\n            if (colorPalette !== this._color) {\n                if (this._color) {\n                    this._elementRef.nativeElement.classList.remove(`mc-${this._color}`);\n                }\n\n                if (colorPalette) {\n                    this._elementRef.nativeElement.classList.add(`mc-${colorPalette}`);\n                }\n\n                this._color = colorPalette;\n            }\n        }\n\n        constructor(...args: any[]) {\n            super(...args);\n\n            this.color = defaultColor;\n        }\n    };\n}\n\n","import { Constructor } from './constructor';\nimport { CanDisable } from './disabled';\n\n\nexport interface HasTabIndex {\n    tabIndex: number;\n}\n\nexport type HasTabIndexCtor = Constructor<HasTabIndex>;\n\n// Mixin to augment a directive with a `tabIndex` property.\nexport function mixinTabIndex<T extends Constructor<CanDisable>>(base: T, defaultTabIndex = 0)\n    : HasTabIndexCtor & T {\n    return class extends base {\n        private _tabIndex: number = defaultTabIndex;\n\n        get tabIndex(): number {\n            return this.disabled ? -1 : this._tabIndex;\n        }\n\n        set tabIndex(value: number) {\n            this._tabIndex = value != null ? value : defaultTabIndex;\n        }\n\n        constructor(...args: any[]) {\n            super(...args);\n        }\n    };\n}\n","import { FormControl, FormGroupDirective, NgControl, NgForm } from '@angular/forms';\nimport { Subject } from 'rxjs';\n\nimport { ErrorStateMatcher } from '../error/error-options';\n\nimport { Constructor } from './constructor';\n\n\n/** @docs-private */\nexport interface CanUpdateErrorState {\n\n    readonly stateChanges: Subject<void>;\n\n    errorState: boolean;\n    errorStateMatcher: ErrorStateMatcher;\n\n    updateErrorState();\n}\n\n/** @docs-private */\nexport type CanUpdateErrorStateCtor = Constructor<CanUpdateErrorState>;\n\n/** @docs-private */\nexport interface HasErrorState {\n    _parentFormGroup: FormGroupDirective;\n    _parentForm: NgForm;\n    _defaultErrorStateMatcher: ErrorStateMatcher;\n    ngControl: NgControl;\n}\n\n/**\n * Mixin to augment a directive with updateErrorState method.\n * For component with `errorState` and need to update `errorState`.\n */\nexport function mixinErrorState<T extends Constructor<HasErrorState>>(base: T)\n    : CanUpdateErrorStateCtor & T {\n    return class extends base {\n        /** Whether the component is in an error state. */\n        errorState: boolean = false;\n\n        /**\n         * Stream that emits whenever the state of the input changes such that the wrapping\n         * `MatFormField` needs to run change detection.\n         */\n        readonly stateChanges = new Subject<void>();\n\n        errorStateMatcher: ErrorStateMatcher;\n\n        constructor(...args: any[]) {\n            super(...args);\n        }\n\n        updateErrorState() {\n            const oldState = this.errorState;\n            const parent = this._parentFormGroup || this._parentForm;\n            const matcher = this.errorStateMatcher || this._defaultErrorStateMatcher;\n            const control = this.ngControl ? this.ngControl.control as FormControl : null;\n            const newState = matcher.isErrorState(control, parent);\n\n            if (newState !== oldState) {\n                this.errorState = newState;\n                this.stateChanges.next();\n            }\n        }\n    };\n}\n","import {\n    AfterViewChecked,\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    ElementRef,\n    EventEmitter,\n    Inject,\n    InjectionToken,\n    Input,\n    OnDestroy,\n    Optional,\n    Output,\n    QueryList,\n    ViewEncapsulation\n} from '@angular/core';\nimport { coerceBooleanProperty } from '@ptsecurity/cdk/coercion';\nimport { ENTER, SPACE } from '@ptsecurity/cdk/keycodes';\nimport { Subject } from 'rxjs';\n\nimport { McOptgroup } from './optgroup';\n\n\n/**\n * Option IDs need to be unique across components, so this counter exists outside of\n * the component definition.\n */\nlet _uniqueIdCounter = 0;\n\n/** Event object emitted by McOption when selected or deselected. */\nexport class McOptionSelectionChange {\n    constructor(\n        /** Reference to the option that emitted the event. */\n        public source: McOption,\n        /** Whether the change in the option's value was a result of a user action. */\n        public isUserInput = false) {\n    }\n}\n\n/**\n * Describes a parent component that manages a list of options.\n * Contains properties that the options can inherit.\n * @docs-private\n */\nexport interface IMcOptionParentComponent {\n    disableRipple?: boolean;\n    multiple?: boolean;\n}\n\n/**\n * Injection token used to provide the parent component to options.\n */\nexport const MC_OPTION_PARENT_COMPONENT =\n    new InjectionToken<IMcOptionParentComponent>('MC_OPTION_PARENT_COMPONENT');\n\n/**\n * Single option inside of a `<mat-select>` element.\n */\n@Component({\n    selector: 'mc-option',\n    exportAs: 'mcOption',\n    host: {\n        '[attr.tabindex]': '_getTabIndex()',\n        '[class.mc-selected]': 'selected',\n        '[class.mc-option-multiple]': 'multiple',\n        '[class.mc-active]': 'active',\n        '[id]': 'id',\n        '[class.mc-disabled]': 'disabled',\n        '(click)': '_selectViaInteraction()',\n        '(keydown)': '_handleKeydown($event)',\n        class: 'mc-option'\n    },\n    styleUrls: ['option.css'],\n    templateUrl: 'option.html',\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class McOption implements AfterViewChecked, OnDestroy {\n    /** Whether the wrapping component is in multiple selection mode. */\n    get multiple() {\n        return this._parent && this._parent.multiple;\n    }\n\n    /** The unique ID of the option. */\n    get id(): string {\n        return this._id;\n    }\n\n    /** Whether or not the option is currently selected. */\n    get selected(): boolean {\n        return this._selected;\n    }\n\n    /** The form value of the option. */\n    @Input() value: any;\n\n    /** Whether the option is disabled. */\n    @Input()\n    get disabled() {\n        return (this.group && this.group.disabled) || this._disabled;\n    }\n\n    set disabled(value: any) {\n        this._disabled = coerceBooleanProperty(value);\n    }\n\n    /** Whether ripples for the option are disabled. */\n    get disableRipple() {\n        return this._parent && this._parent.disableRipple;\n    }\n\n    /** Event emitted when the option is selected or deselected. */\n        // tslint:disable-next-line:no-output-on-prefix\n    @Output() readonly onSelectionChange = new EventEmitter<McOptionSelectionChange>();\n\n    /** Emits when the state of the option changes and any parents have to be notified. */\n    readonly _stateChanges = new Subject<void>();\n\n    private _selected = false;\n    private _active = false;\n    private _disabled = false;\n    private readonly _id = `mc-option-${_uniqueIdCounter++}`;\n    private _mostRecentViewValue = '';\n\n    constructor(\n        private readonly _element: ElementRef,\n        private readonly _changeDetectorRef: ChangeDetectorRef,\n        @Optional() @Inject(MC_OPTION_PARENT_COMPONENT) private readonly _parent: IMcOptionParentComponent,\n        @Optional() readonly group: McOptgroup) {\n    }\n\n    /**\n     * Whether or not the option is currently active and ready to be selected.\n     * An active option displays styles as if it is focused, but the\n     * focus is actually retained somewhere else. This comes in handy\n     * for components like autocomplete where focus must remain on the input.\n     */\n    get active(): boolean {\n        return this._active;\n    }\n\n    /**\n     * The displayed value of the option. It is necessary to show the selected option in the\n     * select's trigger.\n     */\n    get viewValue(): string {\n        // TODO(kara): Add input property alternative for node envs.\n        return (this._getHostElement().textContent || '').trim();\n    }\n\n    /** Selects the option. */\n    select(): void {\n        if (!this._selected) {\n            this._selected = true;\n            this._changeDetectorRef.markForCheck();\n            this._emitSelectionChangeEvent();\n        }\n    }\n\n    /** Deselects the option. */\n    deselect(): void {\n        if (this._selected) {\n            this._selected = false;\n            this._changeDetectorRef.markForCheck();\n            this._emitSelectionChangeEvent();\n        }\n    }\n\n    /** Sets focus onto this option. */\n    focus(): void {\n        const element = this._getHostElement();\n\n        if (typeof element.focus === 'function') {\n            element.focus();\n        }\n    }\n\n    /**\n     * This method sets display styles on the option to make it appear\n     * active. This is used by the ActiveDescendantKeyManager so key\n     * events will display the proper options as active on arrow key events.\n     */\n    setActiveStyles(): void {\n        if (!this._active) {\n            this._active = true;\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n\n    /**\n     * This method removes display styles on the option that made it appear\n     * active. This is used by the ActiveDescendantKeyManager so key\n     * events will display the proper options as active on arrow key events.\n     */\n    setInactiveStyles(): void {\n        if (this._active) {\n            this._active = false;\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n\n    /** Gets the label to be used when determining whether the option should be focused. */\n    getLabel(): string {\n        return this.viewValue;\n    }\n\n    /** Ensures the option is selected when activated from the keyboard. */\n    _handleKeydown(event: KeyboardEvent): void {\n        // tslint:disable-next-line\n        if (event.keyCode === ENTER || event.keyCode === SPACE) {\n            this._selectViaInteraction();\n\n            // Prevent the page from scrolling down and form submits.\n            event.preventDefault();\n        }\n    }\n\n    /**\n     * `Selects the option while indicating the selection came from the user. Used to\n     * determine if the select's view -> model callback should be invoked.`\n     */\n    _selectViaInteraction(): void {\n        if (!this.disabled) {\n            this._selected = this.multiple ? !this._selected : true;\n            this._changeDetectorRef.markForCheck();\n            this._emitSelectionChangeEvent(true);\n        }\n    }\n\n    /** Returns the correct tabindex for the option depending on disabled state. */\n    _getTabIndex(): string {\n        return this.disabled ? '-1' : '0';\n    }\n\n    /** Gets the host DOM element. */\n    _getHostElement(): HTMLElement {\n        return this._element.nativeElement;\n    }\n\n    ngAfterViewChecked() {\n        // Since parent components could be using the option's label to display the selected values\n        // (e.g. `mat-select`) and they don't have a way of knowing if the option's label has changed\n        // we have to check for changes in the DOM ourselves and dispatch an event. These checks are\n        // relatively cheap, however we still limit them only to selected options in order to avoid\n        // hitting the DOM too often.\n        if (this._selected) {\n            const viewValue = this.viewValue;\n\n            if (viewValue !== this._mostRecentViewValue) {\n                this._mostRecentViewValue = viewValue;\n                this._stateChanges.next();\n            }\n        }\n    }\n\n    ngOnDestroy() {\n        this._stateChanges.complete();\n    }\n\n    /** Emits the selection change event. */\n    private _emitSelectionChangeEvent(isUserInput = false): void {\n        this.onSelectionChange.emit(new McOptionSelectionChange(this, isUserInput));\n    }\n}\n\n/**\n * Counts the amount of option group labels that precede the specified option.\n * @param optionIndex Index of the option at which to start counting.\n * @param options Flat list of all of the options.\n * @param optionGroups Flat list of all of the option groups.\n * @docs-private\n */\nexport function _countGroupLabelsBeforeOption(\n    optionIndex: number, options: QueryList<McOption>,\n    optionGroups: QueryList<McOptgroup>\n): number {\n\n    if (optionGroups.length) {\n        const optionsArray = options.toArray();\n        const groups = optionGroups.toArray();\n\n        let groupCounter = 0;\n\n        for (let i = 0; i < optionIndex + 1; i++) {\n            if (optionsArray[i].group && optionsArray[i].group === groups[groupCounter]) {\n                groupCounter++;\n            }\n        }\n\n        return groupCounter;\n    }\n\n    return 0;\n}\n\n/**\n * Determines the position to which to scroll a panel in order for an option to be into view.\n * @param optionIndex Index of the option to be scrolled into the view.\n * @param optionHeight Height of the options.\n * @param currentScrollPosition Current scroll position of the panel.\n * @param panelHeight Height of the panel.\n * @docs-private\n */\nexport function _getOptionScrollPosition(\n    optionIndex: number,\n    optionHeight: number,\n    currentScrollPosition: number,\n    panelHeight: number\n): number {\n    const optionOffset = optionIndex * optionHeight;\n\n    if (optionOffset < currentScrollPosition) { return optionOffset; }\n\n    if (optionOffset + optionHeight > currentScrollPosition + panelHeight) {\n        return Math.max(0, optionOffset - panelHeight + optionHeight);\n    }\n\n    return currentScrollPosition;\n}\n\n","import { ConnectionPositionPair } from '@ptsecurity/cdk/overlay';\n\n\nexport const POSITION_MAP: { [key: string]: ConnectionPositionPair } = {\n    top         : {\n        originX : 'center',\n        originY : 'top',\n        overlayX: 'center',\n        overlayY: 'bottom'\n    },\n    topCenter   : {\n        originX : 'center',\n        originY : 'top',\n        overlayX: 'center',\n        overlayY: 'bottom',\n        offsetX : undefined,\n        offsetY : undefined\n    },\n    topLeft     : {\n        originX : 'start',\n        originY : 'top',\n        overlayX: 'start',\n        overlayY: 'bottom',\n        offsetX : undefined,\n        offsetY : undefined\n    },\n    topRight    : {\n        originX : 'end',\n        originY : 'top',\n        overlayX: 'end',\n        overlayY: 'bottom',\n        offsetX : undefined,\n        offsetY : undefined\n    },\n    right       : {\n        originX : 'end',\n        originY : 'center',\n        overlayX: 'start',\n        overlayY: 'center'\n    },\n    rightTop    : {\n        originX : 'end',\n        originY : 'top',\n        overlayX: 'start',\n        overlayY: 'top',\n        offsetX : undefined,\n        offsetY : undefined\n    },\n    rightBottom : {\n        originX : 'end',\n        originY : 'bottom',\n        overlayX: 'start',\n        overlayY: 'bottom',\n        offsetX : undefined,\n        offsetY : undefined\n    },\n    bottom      : {\n        originX : 'center',\n        originY : 'bottom',\n        overlayX: 'center',\n        overlayY: 'top'\n    },\n    bottomCenter: {\n        originX : 'center',\n        originY : 'bottom',\n        overlayX: 'center',\n        overlayY: 'top'\n    },\n    bottomLeft  : {\n        originX : 'start',\n        originY : 'bottom',\n        overlayX: 'start',\n        overlayY: 'top'\n    },\n    bottomRight : {\n        originX : 'end',\n        originY : 'bottom',\n        overlayX: 'end',\n        overlayY: 'top'\n    },\n    left        : {\n        originX : 'start',\n        originY : 'center',\n        overlayX: 'end',\n        overlayY: 'center'\n    },\n    leftTop     : {\n        originX : 'start',\n        originY : 'top',\n        overlayX: 'end',\n        overlayY: 'top'\n    },\n    leftBottom  : {\n        originX : 'start',\n        originY : 'bottom',\n        overlayX: 'end',\n        overlayY: 'bottom'\n    }\n};\n\nexport const DEFAULT_4_POSITIONS = _objectValues([\n    POSITION_MAP.top, POSITION_MAP.right, POSITION_MAP.bottom, POSITION_MAP.left\n]);\n\nfunction arrayMap<T, S>(array: T[], iteratee: (item: T, index: number, arr: T[]) => S): S[] {\n    let index = -1;\n    const length = array == null ? 0 : array.length;\n    const result = Array(length);\n\n    while (++index < length) {\n        result[ index ] = iteratee(array[ index ], index, array);\n    }\n\n    return result;\n}\nfunction baseValues<T>(object: { [key: string]: T } | T[], props: string[]): T[] {\n    return arrayMap(props,  (key) => {\n        return object[ key ];\n    });\n}\nfunction _objectValues<T>(object: { [key: string]: T } | T[]): T[] {\n    return object == null ? [] : baseValues(object, Object.keys(object));\n}\n","export function getMcFormFieldMissingControlError(): Error {\n  return Error('mc-form-field must contain a McFormFieldControl.');\n}\n","export function getMcInputUnsupportedTypeError(inputType: string): Error {\n    return Error(`Input type \"${inputType}\" isn't supported by mcInput.`);\n}\n","/**\n * Returns an exception to be thrown when attempting to change a select's `multiple` option\n * after initialization.\n * @docs-private\n */\nexport function getMcSelectDynamicMultipleError(): Error {\n    return Error('Cannot change `multiple` mode of select after initialization.');\n}\n\n/**\n * Returns an exception to be thrown when attempting to assign a non-array value to a select\n * in `multiple` mode. Note that `undefined` and `null` are still valid values to allow for\n * resetting the value.\n * @docs-private\n */\nexport function getMcSelectNonArrayValueError(): Error {\n    return Error('Value must be an array in multiple-selection mode.');\n}\n\n/**\n * Returns an exception to be thrown when assigning a non-function value to the comparator\n * used to determine if a value corresponds to an option. Note that whether the function\n * actually takes two values and returns a boolean is not checked.\n */\nexport function getMcSelectNonFunctionValueError(): Error {\n    return Error('`compareWith` must be a function.');\n}\n","import { NgModule, Directive, ElementRef, QueryList } from '@angular/core';\n\n\n/**\n * Shared directive to count lines inside a text area, such as a list item.\n * Line elements can be extracted with a @ContentChildren(McLine) query, then\n * counted by checking the query list's length.\n */\n@Directive({\n    selector: '[mc-line], [mcLine]',\n    host: { class: 'mc-line' }\n})\nexport class McLine {}\n\n/**\n * Helper that takes a query list of lines and sets the correct class on the host.\n * @docs-private\n */\nexport class McLineSetter {\n    constructor(private _lines: QueryList<McLine>, private _element: ElementRef) {\n        this._setLineClass(this._lines.length);\n\n        this._lines.changes.subscribe(() => {\n            this._setLineClass(this._lines.length);\n        });\n    }\n\n    private _setLineClass(count: number): void {\n        this._resetClasses();\n        if (count === 2 || count === 3) {\n            this._setClass(`mc-${count}-line`, true);\n        } else if (count > 3) {\n            this._setClass(`mc-multi-line`, true);\n        }\n    }\n\n    private _resetClasses(): void {\n        this._setClass('mc-2-line', false);\n        this._setClass('mc-3-line', false);\n        this._setClass('mc-multi-line', false);\n    }\n\n    private _setClass(className: string, isAdd: boolean): void {\n        if (isAdd) {\n            this._element.nativeElement.classList.add(className);\n        } else {\n            this._element.nativeElement.classList.remove(className);\n        }\n    }\n}\n\n@NgModule({\n    imports: [],\n    exports: [McLine],\n    declarations: [McLine]\n})\nexport class McLineModule {}\n","import { Injectable } from '@angular/core';\nimport { FormGroupDirective, NgForm, FormControl } from '@angular/forms';\n\n\n/** Error state matcher that matches when a control is invalid and dirty. */\n@Injectable()\nexport class ShowOnDirtyErrorStateMatcher implements ErrorStateMatcher {\n    isErrorState(control: FormControl | null, form: FormGroupDirective | NgForm | null): boolean {\n        return !!(control && control.invalid && (control.dirty || (form && form.submitted)));\n    }\n}\n\n/** Provider that defines how form controls behave with regards to displaying error messages. */\n@Injectable({ providedIn: 'root' })\nexport class ErrorStateMatcher {\n    isErrorState(control: FormControl | null, form: FormGroupDirective | NgForm | null): boolean {\n        return !!(control && control.invalid && (control.touched || (form && form.submitted)));\n    }\n}\n","import { Component, ViewEncapsulation, Input, ChangeDetectionStrategy } from '@angular/core';\n\n\nexport type McPseudoCheckboxState = 'unchecked' | 'checked' | 'indeterminate';\n\n/**\n * Component that shows a simplified checkbox without including any kind of \"real\" checkbox.\n * Meant to be used when the checkbox is purely decorative and a large number of them will be\n * included, such as for the options in a multi-select. Uses no SVGs or complex animations.\n * Note that theming is meant to be handled by the parent element, e.g.\n * `mc-primary .mc-pseudo-checkbox`.\n *\n * Note that this component will be completely invisible to screen-reader users. This is *not*\n * interchangeable with `<mc-checkbox>` and should *not* be used if the user would directly\n * interact with the checkbox. The pseudo-checkbox should only be used as an implementation detail\n * of more complex components that appropriately handle selected / checked state.\n * @docs-private\n */\n@Component({\n    encapsulation: ViewEncapsulation.None,\n    preserveWhitespaces: false,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    selector: 'mc-pseudo-checkbox',\n    styleUrls: ['pseudo-checkbox.css'],\n    templateUrl: 'pseudo-checkbox.partial.html',\n    host: {\n        class: 'mc-pseudo-checkbox',\n        '[class.mc-pseudo-checkbox_indeterminate]': 'state === \"indeterminate\"',\n        '[class.mc-pseudo-checkbox_checked]': 'state === \"checked\"',\n        '[class.mc-disabled]': 'disabled'\n    }\n})\nexport class McPseudoCheckbox {\n    @Input() state: McPseudoCheckboxState = 'unchecked';\n\n    @Input() disabled: boolean = false;\n}\n","import { NgModule } from '@angular/core';\n\nimport { McPseudoCheckbox } from './pseudo-checkbox/pseudo-checkbox';\n\n\n@NgModule({\n    exports: [McPseudoCheckbox],\n    declarations: [McPseudoCheckbox]\n})\nexport class McPseudoCheckboxModule {}\n\n\nexport * from './pseudo-checkbox/pseudo-checkbox';\n","import { DOCUMENT } from '@angular/common';\nimport { Inject, Injectable } from '@angular/core';\n\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class McMeasureScrollbarService {\n\n    get scrollBarWidth(): number {\n        if (this._scrollbarWidth) {\n            return this._scrollbarWidth;\n        }\n        this.initScrollBarWidth();\n\n        return this._scrollbarWidth;\n    }\n\n    private _scrollbarWidth: number;\n    private scrollbarMeasure = {\n        position: 'absolute',\n        top: '-9999px',\n        width: '50px',\n        height: '50px',\n        overflow: 'scroll'\n    };\n\n    constructor(\n        @Inject(DOCUMENT) private document: any\n    ) {\n        this.initScrollBarWidth();\n    }\n\n    initScrollBarWidth() {\n        const scrollDiv = this.document.createElement('div');\n\n        // tslint:disable-next-line\n        for (const scrollProp in this.scrollbarMeasure) {\n            if (this.scrollbarMeasure.hasOwnProperty(scrollProp)) {\n                scrollDiv.style[scrollProp] = this.scrollbarMeasure[scrollProp];\n            }\n        }\n\n        this.document.body.appendChild(scrollDiv);\n\n        const width = scrollDiv.offsetWidth - scrollDiv.clientWidth;\n\n        this.document.body.removeChild(scrollDiv);\n        this._scrollbarWidth = width;\n    }\n}\n","import { Component, ViewEncapsulation, Input, ChangeDetectionStrategy } from '@angular/core';\n\nimport { mixinDisabled, CanDisable, CanDisableCtor } from '../common-behaviors/index';\n\n\n// Boilerplate for applying mixins to McOptgroup.\n/** @docs-private */\nexport class McOptgroupBase {}\n\nexport const _McOptgroupMixinBase: CanDisableCtor & typeof McOptgroupBase = mixinDisabled(McOptgroupBase);\n\n// Counter for unique group ids.\nlet _uniqueOptgroupIdCounter = 0;\n\n/**\n * Component that is used to group instances of `mc-option`.\n */\n@Component({\n    selector: 'mc-optgroup',\n    exportAs: 'mcOptgroup',\n    templateUrl: 'optgroup.html',\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    inputs: ['disabled'],\n    styleUrls: ['optgroup.css'],\n    host: {\n        class: 'mc-optgroup',\n        role: 'group',\n        '[class.mc-optgroup-disabled]': 'disabled',\n        '[attr.aria-disabled]': 'disabled.toString()',\n        '[attr.aria-labelledby]': '_labelId'\n    }\n})\nexport class McOptgroup extends _McOptgroupMixinBase implements CanDisable {\n    /** Label for the option group. */\n    @Input() label: string;\n\n    /** Unique id for the underlying label. */\n    _labelId: string = `mc-optgroup-label-${_uniqueOptgroupIdCounter++}`;\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { McPseudoCheckboxModule } from '../selection/index';\n\nimport { McOptgroup } from './optgroup';\nimport { McOption } from './option';\n\n\n@NgModule({\n    imports: [CommonModule, McPseudoCheckboxModule],\n    exports: [McOption, McOptgroup],\n    declarations: [McOption, McOptgroup]\n})\nexport class McOptionModule {}\n\n\nexport * from './option';\nexport * from './optgroup';\n","import { InjectionToken } from '@angular/core';\n\n\n/** InjectionToken that can be used to specify the global label options. */\nexport const MC_LABEL_GLOBAL_OPTIONS =\n    new InjectionToken<LabelOptions>('mc-label-global-options');\n\n/** Type for the available floatLabel values. */\nexport type FloatLabelType = 'always' | 'never' | 'auto';\n\n/** Configurable options for floating labels. */\nexport interface LabelOptions {\n    /**\n     * Whether the label should float `always`, `never`, or `auto` (only when necessary).\n     * Default behavior is assumed to be `auto`.\n     */\n    float?: FloatLabelType;\n}\n","import {\n    animate,\n    state,\n    style,\n    transition,\n    trigger,\n    AnimationTriggerMetadata,\n} from '@angular/animations';\n\n\nexport const fadeAnimation: AnimationTriggerMetadata =  trigger('fadeAnimation', [\n    state('void', style({ opacity: 0 })),\n    state('true', style({ opacity: 1 })),\n    state('false', style({ opacity: 0 })),\n    transition('* => true', animate('150ms cubic-bezier(0.0, 0.0, 0.2, 1)')),\n    transition('* => void', animate('150ms cubic-bezier(0.4, 0.0, 1, 1)')),\n]);\n","import {\n    Attribute,\n    ChangeDetectionStrategy,\n    Component,\n    Directive,\n    ElementRef,\n    ViewEncapsulation\n} from '@angular/core';\n\nimport { mixinColor, CanColor, CanColorCtor } from '@ptsecurity/mosaic/core';\n\n\n@Directive({\n    selector: '[mc-icon]',\n    host: { class: 'mc mc-icon' }\n})\nexport class McIconCSSStyler {}\n\n\nexport class McIconBase {\n    constructor(public _elementRef: ElementRef) {}\n}\n\nexport const _McIconMixinBase: CanColorCtor & typeof McIconBase\n    = mixinColor(McIconBase);\n\n\n@Component({\n    selector: `[mc-icon]`,\n    template: '<ng-content></ng-content>',\n    styleUrls: ['./icon.css'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n    inputs: ['color']\n})\nexport class McIcon extends _McIconMixinBase implements CanColor {\n    constructor(elementRef: ElementRef, @Attribute('mc-icon') iconName: string) {\n        super(elementRef);\n\n        elementRef.nativeElement.classList.add(iconName);\n    }\n\n    _getHostElement() {\n        return this._elementRef.nativeElement;\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { A11yModule } from '@ptsecurity/cdk/a11y';\nimport { PlatformModule } from '@ptsecurity/cdk/platform';\n\nimport {\n    McIcon,\n    McIconCSSStyler\n} from './icon.component';\n\n\n@NgModule({\n    imports: [\n        CommonModule,\n        A11yModule,\n        PlatformModule\n    ],\n    exports: [\n        McIcon,\n        McIconCSSStyler\n    ],\n    declarations: [\n        McIcon,\n        McIconCSSStyler\n    ]\n})\nexport class McIconModule {}\n"],"names":["this","removeStyle","setStyle","McSplitterAreaDirective","prototype","ngOnDestroy","splitter","removeArea","setOrder","order","setSize","size","sz","coerceNumberProperty","getSizeProperty","coerceCssPixelValue","getSize","elementRef","nativeElement","getOffsetSizeProperty","getMinSize","styles","getComputedStyle","parseFloat","getMinSizeProperty","isVertical","direction","style","value","renderer","tslib_1.__decorate","Directive","selector","tslib_1.__metadata","ElementRef","Renderer2","McSplitterComponent","McSplitterModule","NgModule","imports","CommonModule","McIconModule","exports","McGutterDirective","declarations","nextUniqueId","McToggleBase","_elementRef","_McToggleMixinBase","mixinTabIndex","mixinColor","mixinDisabled","McToggleChange","McToggleComponent","_super","_focusMonitor","_changeDetectorRef","tabIndex","_this","call","color","ThemePalette","Primary","labelPosition","ariaLabel","ariaLabelledby","_uniqueId","id","name","_disabled","_checked","change","EventEmitter","_onTouchedCallback","_onChangeCallback","_","parseInt","monitor","tslib_1.__extends","McToggleComponent_1","Object","defineProperty","get","set","markForCheck","stopMonitoring","focus","focusVia","_inputElement","_getAriaChecked","checked","_onInteractionEvent","event","stopPropagation","_onLabelTextChange","_onInputClick","_updateModelValue","_emitChangeEvent","writeValue","registerOnChange","fn","registerOnTouched","setDisabledState","isDisabled","disabled","source","emit","ViewChild","Input","Output","Component","exportAs","template","providers","provide","NG_VALUE_ACCESSOR","useExisting","forwardRef","multi","changeDetection","ChangeDetectionStrategy","OnPush","encapsulation","ViewEncapsulation","None","inputs","host","[id]","[attr.id]","[class.mc-disabled]","[class.mc-toggle-off]","animations","trigger","state","right","transition","animate","tslib_1.__param","Attribute","FocusMonitor","ChangeDetectorRef","String","McToggleModule","BrowserAnimationsModule","A11yModule","McCommonModule","McToolTipComponent","cdr","_prefix","_positions","DEFAULT_4_POSITIONS","slice","_classMap","_placement","_trigger","visibleSource","BehaviorSubject","$visible","asObservable","mcVisibleChange","mcMouseEnterDelay","mcMouseLeaveDelay","_onHide","Subject","_closeOnInteraction","availablePositions","POSITION_MAP","_title","isTitleString","TemplateRef","visible","coerceBooleanProperty","next","unshift","mcPlacement","show","hideTId","clearTimeout","isContentEmpty","showTId","setTimeout","mcVisible","_markForCheck","hide","setClassMap","_a","mcTitle","afterHidden","_handleBodyInteraction","fadeAnimation","preserveWhitespaces","(body:click)","MC_TOOLTIP_SCROLL_STRATEGY","InjectionToken","MC_TOOLTIP_SCROLL_STRATEGY_FACTORY_PROVIDER","deps","Overlay","useFactory","MC_TOOLTIP_SCROLL_STRATEGY_FACTORY","McTooltipDirective","_overlay","_ngZone","_scrollDispatcher","hostView","_scrollStrategy","_dir","isTooltipOpen","isDynamicTooltip","parentDisabled","$unsubscribe","manualListeners","Map","_destroyed","title","updateCompValue","_mouseEnterDelay","_mouseLeaveDelay","_visible","_createOverlay","_overlayRef","strategy","position","flexibleConnectedTo","withTransformOriginOn","withFlexibleDimensions","withViewportMargin","withPositions","scrollableAncestors","getAncestorScrollContainers","withScrollableContainers","positionChanges","pipe","takeUntil","subscribe","tooltip","onPositionChange","scrollableViewProperties","isOverlayClipped","run","create","positionStrategy","panelClass","scrollStrategy","_updatePosition","detachments","_detach","hasAttached","detach","$event","updatedPlacement","keys","some","key","connectionPair","originX","originY","overlayX","overlayY","handlePositioningUpdate","pos","overlayElement","clientHeight","element","currentContainer","top","split","ngOnInit","mcTrigger","forEach","listener","addEventListener","dispose","removeEventListener","clear","complete","handleKeydown","e","keyCode","ESCAPE","handleTouchend","getConfig","origin","_getOrigin","overlay","_getOverlayPosition","tslib_1.__assign","main","fallback","originPosition","isLtr","getMcTooltipInvalidPositionError","_invertPosition","x","y","overlayPosition","newX","newY","overlayRef","_portal","ComponentPortal","attach","instance","property","distinctUntilChanged","data","HostBinding","(keydown)","(touchend)","Inject","Optional","NgZone","ScrollDispatcher","ViewContainerRef","Directionality","McToolTipModule","OverlayModule","entryComponents","VERSION","Version","SELECT_PANEL_PADDING_X","McTimepicker","_isTimeGreaterThenMax","timeToCompare","getTime","_maxDTime","ErrorStateMatcher","McTimepicker_1","class","[attr.placeholder]","[disabled]","[required]","[attr.time-format]","[attr.min-time]","[attr.max-time]","[attr.value]","(blur)","(focus)","(input)","(paste)","NG_VALIDATORS","useValue","ɵ1","McFormFieldControl","Self","MC_INPUT_VALUE_ACCESSOR","NgControl","NgForm","FormGroupDirective","McTimepickerMixinBase","McTimepickerModule","PlatformModule","FormsModule","mcSelectAnimations","transformPanel","transform","minWidth","opacity","group","query","animateChild","fadeInContent","MC_SELECT_SCROLL_STRATEGY","MC_SELECT_SCROLL_STRATEGY_PROVIDER","MC_SELECT_SCROLL_STRATEGY_PROVIDER_FACTORY","McSelectChange","McSelectBase","_defaultErrorStateMatcher","_parentForm","_parentFormGroup","ngControl","_McSelectMixinBase","mixinErrorState","McSelectTrigger","McSelect","_viewportRuler","_renderer","_parentFormField","_scrollStrategyFactory","_triggerFontSize","_optionIds","_transformOrigin","_panelDoneAnimating","_panelDoneAnimatingStream","_offsetY","controlType","optionSelectionChanges","defer","options","merge","apply","map","option","onSelectionChange","onStable","take","switchMap","openedChange","_openedStream","filter","o","_closedStream","selectionChange","valueChange","hiddenItems","_panelOpen","_required","_scrollTop","_multiple","_uid","_destroy","_focused","_onChange","_onTouched","_compareWith","o1","o2","valueAccessor","McSelect_1","_placeholder","stateChanges","_selectionModel","getMcSelectDynamicMultipleError","getMcSelectNonFunctionValueError","_initializeSelection","_value","newValue","_id","SelectionModel","multiple","panelOpen","overlayDir","offsetX","ngAfterContentInit","_initKeyManager","onChange","added","select","removed","deselect","changes","startWith","_resetOptions","ngAfterViewInit","tags","_calculateHiddenItems","ngDoCheck","updateErrorState","ngOnChanges","toggle","close","open","length","_triggerRect","getBoundingClientRect","_keyManager","withHorizontalOrientation","_calculateOverlayPosition","_highlightCorrectOption","fontSize","_isRtl","_setSelectionByValue","selected","empty","selectedOptions","viewValue","reverse","join","isEmpty","_handleKeydown","_handleOpenKeydown","_handleClosedKeydown","_onFadeInDone","_onFocus","_onBlur","_onAttached","positionChange","detectChanges","_calculateOverlayOffsetX","panel","scrollTop","_getPanelTheme","_calculateOverlayScroll","selectedIndex","scrollBuffer","maxScroll","itemHeight","_getItemHeight","optionOffsetFromScrollTop","halfOptionHeight","optimalScrollPosition","Math","min","max","onContainerClick","onRemoveMatcherItem","visibleItems","totalItemsWidth","_getTotalItemsWidthInMatcher","totalVisibleItemsWidth","tag","offsetTop","offsetHeight","width","itemsCounter","querySelector","matcherList","itemsCounterShowed","matcherListWidth","matcherWidth","triggerClone","cloneNode","remove","appendChild","querySelectorAll","item","isArrowKey","DOWN_ARROW","UP_ARROW","LEFT_ARROW","RIGHT_ARROW","ENTER","SPACE","altKey","preventDefault","onKeydown","manager","HOME","END","setFirstItemActive","setLastItemActive","activeItem","A","ctrlKey","hasDeselectedOptions_1","previouslyFocusedIndex","activeItemIndex","shiftKey","_selectViaInteraction","Promise","resolve","then","Array","isArray","getMcSelectNonArrayValueError","currentValue","_selectValue","_sortValues","correspondingOption","setActiveItem","find","error","isDevMode","console","warn","ActiveDescendantKeyManager","withTypeAhead","withVerticalOrientation","tabOut","_scrollActiveOptionIntoView","changedOrDestroyed","_onSelect","isUserInput","_stateChanges","_setOptionIds","wasSelected","isSelected","_propagateChanges","options_1","toArray","sort","a","b","sortComparator","indexOf","fallbackValue","valueToEmit","activeOptionIndex","labelCount","_countGroupLabelsBeforeOption","optionGroups","_getOptionScrollPosition","_getOptionIndex","reduce","result","current","index","undefined","items","_getItemCount","panelHeight","scrollContainerHeight","selectedOptionOffset","_calculateOverlayOffsetY","_checkOverlayWithinViewport","overlayRect","viewportSize","getViewportSize","isRtl","first","leftOverflow","left","rightOverflow","round","updatePosition","topSpaceAvailable","bottomSpaceAvailable","height","bottom","panelHeightTop","abs","totalPanelHeight","panelHeightBottom","_adjustPanelUp","_adjustPanelDown","_getOriginBasedOnOption","distanceBelowViewport","distanceAboveViewport","optionHeightAdjustment","ViewChildren","McTag","QueryList","CdkConnectedOverlay","ContentChildren","McOption","descendants","McOptgroup","ContentChild","Observable","[attr.tabindex]","[class.mc-select-invalid]","[class.mc-select-required]","(window:resize)","MC_OPTION_PARENT_COMPONENT","ViewportRuler","McFormField","McSelectModule","McOptionModule","McTagModule","McFormFieldModule","ngZone","areas","_gutterSize","isDragging","areaPositionDivider","listeners","_direction","gutterSize","addArea","area","push","initialSize","onMouseDown","leftAreaIndex","rightAreaIndex","leftArea","rightArea","startPoint","screenX","screenY","disableFlex","runOutsideAngular","listen","onMouseUp","onMouseMove","indexToRemove","splice","endPoint","offset","newLeftAreaSize","newRightAreaSize","minLeftAreaSize","minRightAreaSize","rightAreaOffset","unsubscribe","pop","_order","_size","getCursor","getState","setAttr","Error","attribute","setAttribute","toBoolean","markRadiosForCheck","McRadioGroup","checkSelectedRadioButton","_selected","_isInitialized","touch","onTouched","emitChangeEvent","McRadioChange","_radios","radio","_changeDetector","controlValueAccessorChangeFn","updateRadioButtonNames","updateSelectedRadioFromValue","isAlreadySelected","McRadioButton","MC_RADIO_GROUP_CONTROL_VALUE_ACCESSOR","role","_McRadioGroupMixinBase","McRadioButtonBase","_McRadioButtonMixinBase","radioGroup","_radioDispatcher","isFocused","removeUniqueSelectionListener","newCheckedState","notify","newDisabledState","required","_labelPosition","onInputClick","onInputChange","groupValueChanged","[class.mc-radio-checked]","[class.mc-radio-disabled]","UniqueSelectionDispatcher","McRadioModule","McTreeNodeDef","McTreeNodeDef_1","CdkTreeNodeDef","McTreeNodePadding","arguments","_baseLeftPadding","_iconWidth","_indent","McTreeNodePadding_1","_withIcon","_paddingIndent","nodeLevel","_treeNode","_tree","treeControl","getLevel","level","_level","leftPadding","isExpandable","_setPadding","CdkTreeNodePadding","McTreeNodeOption","treeSelection","_hasFocus","McTreeNodeOption_1","setSelected","setFocusedOption","_getHeight","getClientRects","_handleFocus","_handleBlur","_handleClick","tabindex","[class.mc-selected]","[class.mc-focused]","[attr.aria-expanded]","[attr.aria-level]","(click)","CdkTreeNode","McTreeSelection","_McTreeSelectionBase","CdkTree","McTreeNavigationChange","McTreeSelectionChange","_differs","autoSelect","noUnselect","navigationChange","McTreeSelection_1","rawValue","log","_onKeyDown","withShift","withCtrl","collapse","expand","toggleFocusedOption","PAGE_UP","setPreviousPageItemActive","PAGE_DOWN","setNextPageItemActive","FocusKeyManager","updateScrollSize","withScrollSize","floor","updateActiveItem","previousIndex_1","previousActiveItemIndex","activeIndex_1","_canDeselectLast","_emitNavigationEvent","focusedIndex","_isValidIndex","focusedOption","renderNodeChanges","dataDiffer","viewContainer","parentData","_dataDiffer","_nodeOutlet","arrayOfInstances","_embeddedViews","view","viewDef","def","nodes","node","nodeMatchedQueries","matchedQueryIds","nodeData","nodeIndex","reset","notifyOnChanges","CdkTreeNodeOutlet","[tabIndex]","IterableDiffers","MC_TREE_DIRECTIVES","McTreeModule","CdkTreeModule","McTreeFlattener","transformFunction","getChildren","_flattenNode","resultNodes","parentMap","flatNode","children","child","childParentMap","flattenNodes","structuredData","expandFlattenedNodes","results","currentExpand","i","isExpanded","McTreeFlatDataSource","treeFlattener","initialData","_flattenedData","_expandedData","_data","dataNodes","connect","collectionViewer","viewChange","expansionModel","disconnect","DataSource","McTreeNestedDataSource","McTagBase","_McTagMixinBase","_addClassModificatorForIcons","icons","contentChildren","iconElement","previousElementSibling","nextElementSibling","nextSibling","classList","add","previousSibling","firstIconElement","secondIconElement","McIcon","TimeParts","TimeFormats","TIMEFORMAT_PLACEHOLDERS","hh:mm:ss","hh:mm","DEFAULT_TIME_FORMAT","HHmm","HOURS_MINUTES_SECONDS_REGEXP","RegExp","HOURS_MINUTES_REGEXP","HOURS_ONLY_REGEXP","_uniqueComponentIdSuffix","_validatorOnChange","noop","_validator","McTimepickerBase","validate","c","registerOnValidatorChange","inputValueAccessor","focused","_minTime","_maxTime","_inputValueAccessor","_previousNativeValue","Validators","compose","_parseValidator","_minTimeValidator","_maxTimeValidator","_applyInputChanges","_timeFormat","formatValue","timeFormatKey","placeholder","toLowerCase","minValue","_minDTime","_getDateFromTimeString","maxValue","_dirtyCheckNativeValue","focusChanged","onBlur","onPaste","clipboardUserInput","clipboardData","getData","onInput","initialCursorStart","selectionStart","initialCursorEnd","selectionEnd","isAutocompleteTriggered","_getParsedTimeParts","hoursOnly","hoursAndMinutes","hoursAndMinutesAndSeconds","doTimestringReformat","errors","_createSelectionOfTimeComponentInInput","_isBadInput","setProperty","_getTimeStringFromDate","timeFormat","onKeyDown","_getKeyCode","_upDownTimeByArrowKeys","_switchSelectionBetweenTimeparts","validity","badInput","applyParams","changedTime","timeToApply","_currentDTimeInput","control","updateValueAndValidity","cursorPos","modifiedTimePart","_getTimeEditMetrics","_incrementTime","_decrementTime","_getCursorPositionOfPrevTimePartStart","_getCursorPositionOfNextTimePartStart","code","newEditParams","cursorStartPosition","cursorEndPosition","dateVal","whatToIncrement","seconds","_getTimeDigitsFromDate","hours","minutes","_getDateFromTimeDigits","whatToDecrement","timeString","timeDevider","nextDividerPos","cursorPosition","minutesIndex","hoursIndex","secondsIndex","tempVal","_getNumberWithLeadingZero","getHours","getMinutes","getSeconds","HHmmss","match","trim","Number","resultDate","Date","isNaN","digit","mcTimepickerParse","text","_isTimeLowerThenMin","mcTimepickerLowerThenMintime","mcTimepickerHigherThenMaxtime","McModalComponent","onButtonClick","button","getButtonCallableProp","isPromise","loading","catch","changeVisibleFromInside","closeResult","handleVisibleStateChange","changeAnimationState","animationState","maskAnimationClassMap","modalAnimationClassMap","_b","contentComponentRef","changeDetectorRef","changeDetector","animateTo","isVisible","window","updateTransformOrigin","formatModalButtons","buttons","type","autoLoading","createDynamicComponent","component","factory","cfr","resolveComponentFactory","childInjector","Injector","McModalRef","parent","parentInjector","mcComponentParams","assign","modalElement","modalContainer","lastPosition","ModalUtil","getLastClickPosition","transformOrigin","offsetLeft","changeBodyOverflow","plusNum","modalControl","openModals","document","body","mcMeasureScrollbarService","scrollBarWidth","read","DOCUMENT","ComponentFactoryResolver","McMeasureScrollbarService","McModalControlService","CssUnitPipe","defaultUnit","formatted","Pipe","ModalBuilderForService","createModal","mcGetContainer","changeProps","modalRef","mcAfterClose","destroyModal","keydownEvents","mcCloseByESC","getInstance","McModalService","afterAllClose","closeAll","mcOnCancel","mcWidth","confirm","confirmType","mcOnOk","mcModalType","mcClassName","mcMaskClosable","success","simpleConfirm","delete","mcCancelText","Injectable","McModalModule","McButtonModule","MC_NAVBAR_CONTAINER","MC_NAVBAR_ITEM","MC_NAVBAR_BRAND","MC_NAVBAR_TITLE","McNavbarLogo","McNavbarBrand","McNavbarTitle","McNavbarItemBase","_McNavbarMixinBase","McNavbarItem","_platform","_cdRef","dropdownItems","isCollapsed","_subscription","Subscription","encodeURI","dropdownContent","denyClickIfDisabled","_focusMonitor$","hasDropdownContent","listenClickOutside","startListenFocusDropdownItems","stopListenFocusDropdownItems","isActiveDropdownLink","link","isBrowser","location","href","handleClickByItem","toggleDropdown","isNavbarItem","target","contains","handleClickByDropdownItem","forceCloseDropdown","_dropdownElements","el","events","eventListeners","hasAttribute","stopImmediatePropagation","[attr.disabled]","Platform","McNavbarContainer","CollapsibleItem","_collapsed","processCollapsed","collapsed","updateCollapsedClass","CachedItemWidth","itemsForCollapse","_collapsedItemsWidth","calculateAndCacheCollapsedItemsWidth","updateTitle","acc","getTitle","computedTitle","getAttribute","decodeURI","innerText","removeAttribute","McNavbar","forceRecalculateItemsWidth","resizeDebounceInterval","firstLevelElement","secondLevelElements","resizeObserver","fromEvent","debounceTime","_resizeSubscription","updateCollapsed","bind","_itemsWidths","calculateAndCacheItemsWidth","_totalItemsWidths","calculateAndCacheTotalItemsWidth","collapseDelta","maxAllowedWidth","itemsWidths","canCollapse","collapsedItemsWidth","getOuterElementWidth","getPropertyValue","allItemsSelector","allItems","from","getItemsForCollapse","McNavbarModule","idIterator","McProgressBarBase","_McProgressBarMixinBase","McProgressBar","mode","McProgressBarModule","McProgressSpinnerBase","_McProgressSpinnerMixinBase","McProgressSpinner","percentage","McProgressSpinnerModule","McRadioGroupBase","_name","v","McSidebarComponent","[class.mc-layout-sidebar]","[class.mc-layout-sidebar-collapsed]","[style.flex]","[style.max-width.px]","[style.min-width.px]","[style.width.px]","Host","McLayoutComponent","McLayoutModule","McContentComponent","McFooterComponent","McHeaderComponent","McListOption","_element","listSelection","checkboxPosition","_reportValueChange","wasSelected_1","_lineSetter","McLineSetter","_lines","_removeOptionFromList","getLabel","_text","textContent","_getHostElement","McLine","McListSelection","MC_SELECTION_LIST_VALUE_ACCESSOR","McListSelectionChange","McListSelectionBase","_McListSelectionMixinBase","horizontal","_modelChanges","EMPTY","_tempValues","_setOptionsFromValues","_i","_c","selectAll","deselectAll","values","getSelectedOptionValues","listOption","optionIndex","setPreviousItemActive","setNextItemActive","_getOptionByValue","Boolean","McListBase","McList","McListSubheaderCssStyler","McListItemBase","McListItem","McListModule","McLineModule","McLinkBase","_McLinkBase","McLink","McLinkModule","parentService","rootOpenModals","rootAfterAllClose","rootRegisteredMetaMap","registeredMetaMap","registerModal","hasRegistered","afterOpenSubscription","afterOpen","afterCloseSubscription","afterClose","removeOpenModal","has","SkipSelf","listenDocumentClick","clientX","clientY","ModalUtil$1","_mcVisible","mcZIndex","_mcClosable","_mcMask","_mcMaskClosable","mcAfterOpen","mcOkType","_mcOkLoading","_mcCancelLoading","mcOkText","isComponent","mcContent","isModalButtons","mcFooter","container","HTMLElement","OverlayRef","firstChange","bodyContainer","insert","autoFocusButtonOk","destroy","triggerOk","onClickOkCancel","triggerCancel","getContentComponentRef","getContentComponent","getElement","onClickMask","mcMask","isModalType","onClickCloseBtn","ok","cancel","loadingKey","caseClose_1","doClose","handleThen","isNonEmptyString","isTemplateRef","Type","animation","prop","args","McButton","McAnchor","McIconButton","McButtonCSSStyler","McXSButtonCSSStyler","McSMButtonCSSStyler","McLGButtonCSSStyler","McXLButtonCSSStyler","McIconButtonCSSStyler","MC_CHECKBOX_CLICK_ACTION","MC_CHECKBOX_CONTROL_VALUE_ACCESSOR","McCheckbox","TransitionCheckState","McCheckboxChange","McCheckboxBase","_McCheckboxMixinBase","_clickAction","indeterminateChange","_currentAnimationClass","_currentCheckState","Init","_controlValueAccessorChangeFn","_indeterminate","focusOrigin","_onInputFocusChange","changed","_transitionCheckState","Indeterminate","Checked","Unchecked","indeterminate","newState","oldState","[class.mc-checkbox-indeterminate]","[class.mc-checkbox-checked]","[class.mc-checkbox-disabled]","[class.mc-checkbox-label-before]","MC_CHECKBOX_REQUIRED_VALIDATOR","McCheckboxRequiredValidator","[attr.required]","CheckboxRequiredValidator","McCheckboxModule","McDivider","_vertical","_inset","[attr.aria-orientation]","[class.mc-divider-vertical]","[class.mc-divider-inset]","McDividerModule","McCleaner","McFormFieldNumberControl","McHint","McPrefix","McStepper","stepUp","stepDown","onStepUp","onStepDown","McSuffix","McFormFieldBase","_McFormFieldMixinBase","_labelId","hovered","_validateControlChild","_control","_numberControl","hasStepper","_stepper","valueChanges","ngAfterContentChecked","clearValue","hasCleaner","onHoverChanged","isHovered","step","_shouldForward","getMcFormFieldMissingControlError","_hint","_suffix","_cleaner","[class.mc-form-field_invalid]","[class.mc-form-field_disabled]","[class.mc-form-field_has-prefix]","[class.mc-form-field_has-suffix]","[class.mc-form-field_has-cleaner]","[class.mc-form-field_has-stepper]","[class.ng-untouched]","[class.ng-touched]","[class.ng-pristine]","[class.ng-dirty]","[class.ng-valid]","[class.ng-invalid]","[class.ng-pending]","(mouseenter)","(mouseleave)","McFormFieldWithoutBorders","res","MC_INPUT_INVALID_TYPES","BIG_STEP","SMALL_STEP","McInputBase","_McInputMixinBase","McNumberInput","_model","bigStep","isDigit","Infinity","_host","self","getPrototypeOf","normalizeSplitter","McNumberInput_1","_focusChanged","minuses","NUMPAD_MINUS","DASH","FF_MINUS","serviceKeys","DELETE","BACKSPACE","TAB","arrows","allowedKeys","concat","isIEPeriod","isNotIEPeriod","metaKey","C","V","X","F1","F12","EDGE","TRIDENT","ZERO","NINE","NUMPAD_ZERO","NUMPAD_NINE","valueAsNumber","toString","update","replace","isFloat","isInt","test","NgModel","McInput","_type","_neverEmptyInputTypes","t","getSupportedInputTypes","McInput_1","_validateType","_onInput","_isNeverEmpty","getMcInputUnsupportedTypeError","McInputMono","MIN_VALIDATOR","MinValidator","_createValidator","[attr.min]","MAX_VALIDATOR","MaxValidator","[attr.max]","McInputModule","[class.mc-layout-content]","[class.mc-layout-footer]","[class.mc-layout-header]","hasSidebar","[class.mc-layout]","[class.mc-layout-has-sidebar]","mcLayoutComponent","_mcWidth","mcCollapsedWidth","mcCollapsedChange","collapsible","mcCollapsed","__extends","d","__","constructor","extendStatics","__decorate","decorators","desc","r","getOwnPropertyDescriptor","Reflect","decorate","__param","paramIndex","decorator","__metadata","metadataKey","metadataValue","metadata","isBoolean","val","MC_SANITY_CHECKS_FACTORY","base","class_1","defaultColor","Default","_color","colorPalette","defaultTabIndex","_tabIndex","errorState","matcher","errorStateMatcher","isErrorState","optionsArray","groups","groupCounter","optionHeight","currentScrollPosition","optionOffset","arrayMap","array","iteratee","baseValues","object","props","inputType","sanitizeNumber","isFinite","getPrecision","arr","pow","value1","value2","precision","obj","scrollStrategies","reposition","scrollThrottle","setPrototypeOf","__proto__","p","hasOwnProperty","__assign","s","n","MC_SANITY_CHECKS","providedIn","_sanityChecksEnabled","_hasDoneGlobalChecks","_document","_window","_areChecksEnabled","_checkDoctypeIsDefined","_checkThemeIsPresent","_isTestEnv","doctype","testElement","createElement","computedStyle","display","removeChild","BidiModule","_setLineClass","count","_resetClasses","_setClass","className","isAdd","ShowOnDirtyErrorStateMatcher","form","invalid","dirty","submitted","touched","McPseudoCheckbox","[class.mc-pseudo-checkbox_indeterminate]","[class.mc-pseudo-checkbox_checked]","McPseudoCheckboxModule","scrollbarMeasure","overflow","initScrollBarWidth","_scrollbarWidth","scrollDiv","scrollProp","offsetWidth","clientWidth","McOptgroupBase","_McOptgroupMixinBase","_uniqueOptgroupIdCounter","[class.mc-optgroup-disabled]","[attr.aria-disabled]","[attr.aria-labelledby]","_uniqueIdCounter","McOptionSelectionChange","_parent","_active","_mostRecentViewValue","disableRipple","_emitSelectionChangeEvent","setActiveStyles","setInactiveStyles","_getTabIndex","ngAfterViewChecked","[class.mc-option-multiple]","[class.mc-active]","MC_LABEL_GLOBAL_OPTIONS","topCenter","offsetY","topLeft","topRight","rightTop","rightBottom","bottomCenter","bottomLeft","bottomRight","leftTop","leftBottom","McIconCSSStyler","McIconBase","_McIconMixinBase","iconName","queries","McButtonBase","_McButtonMixinBase","focusMonitor","_haltDisabledEvents"],"mappings":"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"}