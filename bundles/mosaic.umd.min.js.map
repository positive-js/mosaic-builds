{"version":3,"file":"mosaic.umd.min.js","sources":["../../src/lib/toggle/toggle.module.ts","../../src/lib/tooltip/tooltip.component.ts","../../src/lib/tooltip/tooltip.module.ts","../../src/lib/version.ts","../../src/lib/timepicker/timepicker.constants.ts","../../src/lib/select/select.component.ts","../../src/lib/select/select.module.ts","../../src/lib/sidepanel/sidepanel-config.ts","../../src/lib/sidepanel/sidepanel-animations.ts","../../src/lib/sidepanel/sidepanel-container.component.ts","../../src/lib/sidepanel/sidepanel-ref.ts","../../src/lib/sidepanel/sidepanel.service.ts","../../src/lib/sidepanel/sidepanel-directives.ts","../../src/lib/sidepanel/sidepanel.module.ts","../../src/lib/splitter/splitter.component.ts","../../src/lib/splitter/splitter.module.ts","../../src/lib/toggle/toggle.component.ts","../../src/lib/textarea/textarea.component.ts","../../src/lib/textarea/textarea.module.ts","../../src/lib/timepicker/timepicker.ts","../../src/lib/timepicker/timepicker.module.ts","../../src/lib/select/select-animations.ts","../../src/lib/tabs/tab-body.ts","../../src/lib/tabs/tab-label-wrapper.ts","../../src/lib/tabs/tab-header.ts","../../src/lib/tabs/tab-group.ts","../../src/lib/tabs/tab-nav-bar/tab-nav-bar.ts","../../src/lib/tabs/tabs.module.ts","../../src/lib/tag/tag.component.ts","../../src/lib/tag/tag.module.ts","../../src/lib/navbar/navbar.component.ts","../../src/lib/navbar/navbar.module.ts","../../src/lib/progress-bar/progress-bar.component.ts","../../src/lib/progress-bar/progress-bar.module.ts","../../src/lib/progress-spinner/progress-spinner.component.ts","../../src/lib/progress-spinner/progress-spinner.module.ts","../../src/lib/radio/radio.component.ts","../../src/lib/radio/radio.module.ts","../../src/lib/tree/node.ts","../../src/lib/tree/padding.ts","../../src/lib/tree/tree-selection.ts","../../src/lib/tree/tree.module.ts","../../src/lib/tree/data-source/flat-data-source.ts","../../src/lib/tree/data-source/nested-data-source.ts","../../src/lib/tabs/tab-content.ts","../../src/lib/tabs/tab-label.ts","../../src/lib/tabs/tab.ts","../../src/lib/tabs/tabs-animations.ts","../../src/lib/modal/modal-control.service.ts","../../src/lib/modal/modal-ref.class.ts","../../src/lib/modal/modal-util.ts","../../src/lib/modal/modal.component.ts","../../src/lib/modal/css-unit.pipe.ts","../../src/lib/modal/modal.service.ts","../../src/lib/modal/modal.module.ts","../../src/lib/dropdown/dropdown.component.ts","../../src/lib/dropdown/dropdown-trigger.ts","../../src/lib/dropdown/dropdown.module.ts","../../src/lib/layout/content.component.ts","../../src/lib/layout/footer.component.ts","../../src/lib/layout/header.component.ts","../../src/lib/layout/layout.component.ts","../../src/lib/layout/sidebar.component.ts","../../src/lib/layout/layout.module.ts","../../src/lib/list/list-selection.component.ts","../../src/lib/list/list.component.ts","../../src/lib/list/list.module.ts","../../src/lib/link/link.component.ts","../../src/lib/link/link.module.ts","../../src/lib/datepicker/calendar.ts","../../src/lib/datepicker/datepicker-animations.ts","../../src/lib/datepicker/datepicker.ts","../../src/lib/datepicker/datepicker-input.ts","../../src/lib/datepicker/datepicker-toggle.ts","../../src/lib/datepicker/datepicker-module.ts","../../src/lib/divider/divider.component.ts","../../src/lib/divider/divider.module.ts","../../src/lib/dropdown/dropdown-content.ts","../../src/lib/dropdown/dropdown-panel.ts","../../src/lib/dropdown/dropdown-item.ts","../../src/lib/dropdown/dropdown-animations.ts","../../src/lib/input/input.ts","../../src/lib/input/input-number-validators.ts","../../src/lib/input/input.module.ts","../../src/lib/datepicker/datepicker-intl.ts","../../src/lib/datepicker/calendar-body.ts","../../src/lib/datepicker/month-view.ts","../../src/lib/datepicker/multi-year-view.ts","../../src/lib/datepicker/year-view.ts","../../src/lib/button/button.component.ts","../../src/lib/button/button.module.ts","../../src/lib/card/card.component.ts","../../src/lib/card/card.module.ts","../../src/lib/checkbox/checkbox-config.ts","../../src/lib/checkbox/checkbox.ts","../../src/lib/checkbox/checkbox-required-validator.ts","../../src/lib/checkbox/checkbox-module.ts","../../src/lib/form-field/cleaner.ts","../../src/lib/form-field/form-field-control.ts","../../src/lib/form-field/form-field-number-control.ts","../../src/lib/form-field/hint.ts","../../src/lib/form-field/prefix.ts","../../src/lib/form-field/stepper.ts","../../src/lib/form-field/suffix.ts","../../src/lib/form-field/form-field.ts","../../src/lib/form-field/form-field.module.ts","../../src/lib/input/input-value-accessor.ts","../../src/lib/input/stepperUtils.ts","../../node_modules/tslib/tslib.es6.js","../../src/lib/core/utils/utils.ts","../../src/lib/core/common-behaviors/common-module.ts","../../src/lib/core/common-behaviors/disabled.ts","../../src/lib/core/common-behaviors/color.ts","../../src/lib/core/common-behaviors/tabindex.ts","../../src/lib/core/common-behaviors/error-state.ts","../../src/lib/core/option/option.ts","../../src/lib/core/overlay/overlay-position-map.ts","../../src/lib/form-field/form-field-errors.ts","../../src/lib/input/input-errors.ts","../../src/lib/datepicker/datepicker-errors.ts","../../src/lib/dropdown/dropdown-errors.ts","../../src/lib/select/select-errors.ts","../../src/lib/core/line/line.ts","../../src/lib/core/error/error-options.ts","../../src/lib/core/selection/pseudo-checkbox/pseudo-checkbox.ts","../../src/lib/core/selection/index.ts","../../src/lib/core/services/measure-scrollbar.service.ts","../../src/lib/core/option/optgroup.ts","../../src/lib/core/option/index.ts","../../src/lib/core/label/label-options.ts","../../src/lib/core/animation/fade-animations.ts","../../src/lib/core/animation/animation.ts","../../src/lib/icon/icon.component.ts","../../src/lib/icon/icon.module.ts"],"sourcesContent":["import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { A11yModule } from '@ptsecurity/cdk/a11y';\nimport { McCommonModule } from '@ptsecurity/mosaic/core';\n\nimport { McToggleComponent } from './toggle.component';\n\n\n@NgModule({\n    imports: [CommonModule, A11yModule, McCommonModule],\n    exports: [McToggleComponent],\n    declarations: [McToggleComponent]\n})\nexport class McToggleModule {\n}\n","import {\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    Directive,\n    ElementRef,\n    EventEmitter,\n    HostBinding,\n    Inject,\n    InjectionToken,\n    Input,\n    NgZone,\n    OnDestroy,\n    OnInit,\n    Optional,\n    Output,\n    TemplateRef,\n    ViewContainerRef,\n    ViewEncapsulation\n} from '@angular/core';\nimport { Directionality } from '@ptsecurity/cdk/bidi';\nimport { coerceBooleanProperty } from '@ptsecurity/cdk/coercion';\nimport { ESCAPE } from '@ptsecurity/cdk/keycodes';\nimport {\n    ConnectedOverlayPositionChange,\n    ConnectionPositionPair,\n    Overlay,\n    OverlayRef,\n    ScrollDispatcher,\n    IScrollStrategy,\n    FlexibleConnectedPositionStrategy,\n    IOverlayConnectionPosition,\n    IOriginConnectionPosition,\n    HorizontalConnectionPos,\n    VerticalConnectionPos\n} from '@ptsecurity/cdk/overlay';\nimport { ComponentPortal } from '@ptsecurity/cdk/portal';\nimport {\n    fadeAnimation,\n    DEFAULT_4_POSITIONS,\n    POSITION_MAP\n} from '@ptsecurity/mosaic/core';\nimport { BehaviorSubject, Observable, Subject } from 'rxjs';\nimport { distinctUntilChanged, takeUntil } from 'rxjs/operators';\n\n\n@Component({\n    selector: 'mc-tooltip-component',\n    inputs: [\n        'mcMouseEnterDelay',\n        'mcMouseLeaveDelay',\n        'mcTitle',\n        'mcVisible',\n        'mcTrigger',\n        'mcPlacement'\n    ],\n    outputs: ['mcVisibleChange'],\n    animations: [ fadeAnimation ],\n    templateUrl: './tooltip.component.html',\n    preserveWhitespaces: false,\n    styleUrls: ['./tooltip.css'],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    host: {\n        '(body:click)': 'this.handleBodyInteraction()'\n    }\n})\nexport class McTooltipComponent {\n    prefix = 'mc-tooltip_placement';\n    positions: ConnectionPositionPair[] = [ ...DEFAULT_4_POSITIONS ];\n    classMap = {};\n    isTitleString: boolean;\n    showTid: number;\n    hideTid: number;\n    availablePositions: any;\n    $visible: Observable<boolean>;\n\n    @Output() mcVisibleChange: EventEmitter<boolean> = new EventEmitter();\n\n    @Input() mcMouseEnterDelay = 400;\n\n    @Input() mcMouseLeaveDelay = 0;\n\n    @Input()\n    get mcTitle(): string | TemplateRef<void> {\n        return this._mcTitle;\n    }\n    set mcTitle(value: string | TemplateRef<void>) {\n        this.isTitleString = !(value instanceof TemplateRef);\n\n        if (this.isTitleString) {\n            this._mcTitle = value;\n        }\n    }\n    private _mcTitle: string | TemplateRef<void>;\n\n    @Input()\n    get mcTrigger(): string {\n        return this._mcTrigger;\n    }\n    set mcTrigger(value: string) {\n        this._mcTrigger = value;\n    }\n    private _mcTrigger: string = 'hover';\n\n    @Input()\n    get mcPlacement(): string {\n        return this._mcPlacement;\n    }\n    set mcPlacement(value: string) {\n        if (value !== this._mcPlacement) {\n            this._mcPlacement = value;\n            this.positions.unshift(POSITION_MAP[ this.mcPlacement ]);\n        } else if (!value) {\n            this._mcPlacement = 'top';\n        }\n    }\n    private _mcPlacement: string = 'top';\n\n    @Input()\n    get mcVisible(): boolean {\n        return this._mcVisible.value;\n    }\n    set mcVisible(value: boolean) {\n        const visible = coerceBooleanProperty(value);\n\n        if (this._mcVisible.value !== visible) {\n            this._mcVisible.next(visible);\n            this.mcVisibleChange.emit(visible);\n        }\n    }\n    private _mcVisible: BehaviorSubject<boolean> = new BehaviorSubject<boolean>(false);\n\n    /** Subject for notifying that the tooltip has been hidden from the view */\n    private readonly onHideSubject: Subject<any> = new Subject();\n    private closeOnInteraction: boolean = false;\n\n    constructor(public cdr: ChangeDetectorRef) {\n        this.availablePositions = POSITION_MAP;\n        this.$visible = this._mcVisible.asObservable();\n    }\n\n    show(): void {\n        if (this.hideTid) {\n            clearTimeout(this.hideTid);\n        }\n\n        if (!this.isContentEmpty()) {\n            if (this.mcTrigger !== 'manual') {\n                this.closeOnInteraction = true;\n            }\n            this.showTid = setTimeout(() => {\n                this.mcVisible = true;\n                this.mcVisibleChange.emit(true);\n\n                // Mark for check so if any parent component has set the\n                // ChangeDetectionStrategy to OnPush it will be checked anyways\n                this.markForCheck();\n            }, this.mcMouseEnterDelay);\n        }\n    }\n\n    hide(): void {\n        if (this.showTid) {\n            clearTimeout(this.showTid);\n        }\n\n        this.hideTid = setTimeout(() => {\n            this.mcVisible = false;\n            this.mcVisibleChange.emit(false);\n            this.onHideSubject.next();\n\n            // Mark for check so if any parent component has set the\n            // ChangeDetectionStrategy to OnPush it will be checked anyways\n            this.markForCheck();\n        }, this.mcMouseLeaveDelay);\n    }\n\n    setClassMap(): void {\n        this.classMap = `${this.prefix}-${this.mcPlacement}`;\n    }\n\n    isContentEmpty(): boolean {\n        return this.isTitleString ? (this.mcTitle === '' || !this.mcTitle) : false;\n    }\n\n    /** Returns an observable that notifies when the tooltip has been hidden from view. */\n    afterHidden(): Observable<void> {\n        return this.onHideSubject.asObservable();\n    }\n\n    markForCheck(): void {\n        this.cdr.markForCheck();\n    }\n\n    handleBodyInteraction(): void {\n        if (this.closeOnInteraction) {\n            this.hide();\n        }\n    }\n}\n\nexport const MC_TOOLTIP_SCROLL_STRATEGY =\n    new InjectionToken<() => IScrollStrategy>('mc-tooltip-scroll-strategy');\n\n/** @docs-private */\nexport function mcTooltipScrollStrategyFactory(overlay: Overlay): () => IScrollStrategy {\n    return () => overlay.scrollStrategies.reposition({scrollThrottle: 20});\n}\n\n/** @docs-private */\nexport const MC_TOOLTIP_SCROLL_STRATEGY_FACTORY_PROVIDER = {\n    provide: MC_TOOLTIP_SCROLL_STRATEGY,\n    deps: [Overlay],\n    useFactory: mcTooltipScrollStrategyFactory\n};\n\n/** Creates an error to be thrown if the user supplied an invalid tooltip position. */\nexport function getMcTooltipInvalidPositionError(position: string) {\n    return Error(`McTooltip position \"${position}\" is invalid.`);\n}\n\nconst VIEWPORT_MARGIN: number = 8;\n\n@Directive({\n    selector: '[mcTooltip], [attribute^=\"mcTooltip\"]',\n    exportAs: 'mcTooltip',\n    host: {\n        '(keydown)': 'handleKeydown($event)',\n        '(touchend)': 'handleTouchend()'\n    }\n})\nexport class McTooltip implements OnInit, OnDestroy {\n    isTooltipOpen: boolean = false;\n    isDynamicTooltip = false;\n    parentDisabled: boolean = false;\n    overlayRef: OverlayRef | null;\n    portal: ComponentPortal<McTooltipComponent>;\n    availablePositions: any;\n    tooltip: McTooltipComponent | null;\n\n    @Output() mcVisibleChange = new EventEmitter<boolean>();\n    private $unsubscribe = new Subject<void>();\n\n    @Input('mcTooltip')\n    get mcTitle(): string {\n        return this._mcTitle;\n    }\n    set mcTitle(title: string) {\n        this._mcTitle = title;\n        this.updateCompValue('mcTitle', title);\n    }\n    private _mcTitle: string;\n\n    @Input('mcTitle')\n    set setTitle(title: string) {\n        this.mcTitle = title;\n    }\n\n    @Input('mcTooltipDisabled')\n    get disabled(): boolean { return this._disabled; }\n    set disabled(value) {\n        this._disabled = coerceBooleanProperty(value);\n    }\n    private _disabled: boolean = false;\n\n    @Input('mcMouseEnterDelay')\n    get mcMouseEnterDelay(): number {\n        return this._mcMouseEnterDelay;\n    }\n    set mcMouseEnterDelay(value: number) {\n        this._mcMouseEnterDelay = value;\n        this.updateCompValue('mcMouseEnterDelay', value);\n    }\n    private _mcMouseEnterDelay: number;\n\n    @Input('mcMouseLeaveDelay')\n    get mcMouseLeaveDelay(): number {\n        return this._mcMouseLeaveDelay;\n    }\n    set mcMouseLeaveDelay(value: number) {\n        this._mcMouseLeaveDelay = value;\n        this.updateCompValue('mcMouseLeaveDelay', value);\n    }\n    private _mcMouseLeaveDelay: number;\n\n    @Input('mcTrigger')\n    get mcTrigger(): string {\n        return this._mcTrigger;\n    }\n    set mcTrigger(value: string) {\n        if (value) {\n            this._mcTrigger = value;\n            this.updateCompValue('mcTrigger', value);\n        } else {\n            this._mcTrigger = 'hover';\n        }\n    }\n    private _mcTrigger: string = 'hover';\n\n    @Input('mcPlacement')\n    get mcPlacement(): string {\n        return this._mcPlacement;\n    }\n    set mcPlacement(value: string) {\n        if (value) {\n            this._mcPlacement = value;\n            this.updateCompValue('mcPlacement', value);\n        } else {\n            this._mcPlacement = 'top';\n        }\n    }\n    private _mcPlacement: string = 'top';\n\n    @Input('mcTooltipClass')\n    get mcTooltipClass() { return this._mcTooltipClass; }\n    set mсTooltipClass(value: string | string[] | Set<string> | {[key: string]: any}) {\n        this._mcTooltipClass = value;\n\n        if (this.tooltip) {\n            this.tooltip.setClassMap();\n        }\n    }\n    private _mcTooltipClass: string | string[] | Set<string> | {[key: string]: any};\n\n    @Input('mcVisible')\n    get mcVisible(): boolean {\n        return this._mcVisible;\n    }\n    set mcVisible(externalValue: boolean) {\n        const value = coerceBooleanProperty(externalValue);\n        this._mcVisible = value;\n        this.updateCompValue('mcVisible', value);\n\n        if (value) {\n            this.show();\n        }\n    }\n    private _mcVisible: boolean;\n\n    @HostBinding('class.mc-tooltip-open')\n    get isOpen(): boolean {\n        return this.isTooltipOpen;\n    }\n\n    @HostBinding('class.disabled')\n    get isParentDisabled(): boolean {\n        return this.parentDisabled;\n    }\n\n    private manualListeners = new Map<string, EventListenerOrEventListenerObject>();\n    private readonly destroyed = new Subject<void>();\n\n    constructor(\n        private overlay: Overlay,\n        private elementRef: ElementRef,\n        private ngZone: NgZone,\n        private scrollDispatcher: ScrollDispatcher,\n        private hostView: ViewContainerRef,\n        @Inject(MC_TOOLTIP_SCROLL_STRATEGY) private scrollStrategy,\n        @Optional() private direction: Directionality) {\n            this.availablePositions = POSITION_MAP;\n        }\n\n    /** Create the overlay config and position strategy */\n    createOverlay(): OverlayRef {\n        if (this.overlayRef) {\n            return this.overlayRef;\n        }\n\n        // Create connected position strategy that listens for scroll events to reposition.\n        const strategy = this.overlay.position()\n            .flexibleConnectedTo(this.elementRef)\n            .withTransformOriginOn('.mc-tooltip')\n            .withFlexibleDimensions(false)\n            .withViewportMargin(VIEWPORT_MARGIN)\n            .withPositions([ ...DEFAULT_4_POSITIONS ]);\n\n        const scrollableAncestors = this.scrollDispatcher\n            .getAncestorScrollContainers(this.elementRef);\n\n        strategy.withScrollableContainers(scrollableAncestors);\n\n        strategy.positionChanges.pipe(takeUntil(this.destroyed)).subscribe((change) => {\n            if (this.tooltip) {\n                this.onPositionChange(change);\n                if (change.scrollableViewProperties.isOverlayClipped && this.tooltip.mcVisible) {\n                    // After position changes occur and the overlay is clipped by\n                    // a parent scrollable then close the tooltip.\n                    this.ngZone.run(() => this.hide());\n                }\n            }\n        });\n\n        this.overlayRef = this.overlay.create({\n            direction: this.direction,\n            positionStrategy: strategy,\n            panelClass: 'mc-tooltip-panel',\n            scrollStrategy: this.scrollStrategy()\n        });\n\n        this.updatePosition();\n\n        this.overlayRef.detachments()\n            .pipe(takeUntil(this.destroyed))\n            .subscribe(() => this.detach());\n\n        return this.overlayRef;\n    }\n\n    detach() {\n        if (this.overlayRef && this.overlayRef.hasAttached()) {\n            this.overlayRef.detach();\n        }\n\n        this.tooltip = null;\n    }\n\n    onPositionChange($event: ConnectedOverlayPositionChange): void {\n        let updatedPlacement = this.mcPlacement;\n        Object.keys(this.availablePositions).some((key) => {\n            if ($event.connectionPair.originX === this.availablePositions[key].originX &&\n                $event.connectionPair.originY === this.availablePositions[key].originY &&\n                $event.connectionPair.overlayX === this.availablePositions[key].overlayX &&\n                $event.connectionPair.overlayY === this.availablePositions[key].overlayY) {\n                updatedPlacement = key;\n\n                return true;\n            }\n\n            return false;\n        });\n        this.updateCompValue('mcPlacement', updatedPlacement);\n\n        if (this.tooltip) {\n            this.tooltip.setClassMap();\n            this.tooltip.markForCheck();\n        }\n\n        this.handlePositioningUpdate();\n    }\n\n    handlePositioningUpdate() {\n        if (!this.overlayRef) {\n            this.overlayRef = this.createOverlay();\n        }\n        if (this.mcPlacement === 'right' || this.mcPlacement === 'left') {\n            const pos =\n                (this.overlayRef.overlayElement.clientHeight -\n                    this.hostView.element.nativeElement.clientHeight) / 2; // tslint:disable-line\n            const currentContainer = this.overlayRef.overlayElement.style.top || '0px';\n            this.overlayRef.overlayElement.style.top =\n                `${parseInt(currentContainer.split('px')[0], 10) + pos - 1}px`;\n            // TODO: обновлять положение стрелки\\указателя\\\"дятла\"\n        }\n    }\n\n    // tslint:disable-next-line:no-any\n    updateCompValue(key: string, value: any): void {\n        if (this.isDynamicTooltip && value) {\n            if (this.tooltip) {\n                this.tooltip[key] = value;\n            }\n        }\n    }\n\n    ngOnInit(): void {\n        this.initElementRefListeners();\n    }\n\n    ngOnDestroy(): void {\n        if (this.overlayRef) {\n            this.overlayRef.dispose();\n        }\n        this.manualListeners.forEach((listener, event) =>\n            this.elementRef.nativeElement.removeEventListener(event, listener));\n        this.manualListeners.clear();\n\n        this.$unsubscribe.next();\n        this.$unsubscribe.complete();\n    }\n\n    handleKeydown(e: KeyboardEvent) {\n        if (this.isTooltipOpen && e.keyCode === ESCAPE) { // tslint:disable-line\n            this.hide();\n        }\n    }\n\n    handleTouchend() {\n        this.hide();\n    }\n\n    initElementRefListeners() {\n        if (this.mcTrigger === 'hover') {\n\n            this.manualListeners\n                .set('mouseenter', () => this.show())\n                .set('mouseleave', () => this.hide())\n                .forEach((listener, event) => this.elementRef.nativeElement.addEventListener(event, listener));\n        }\n\n        if (this.mcTrigger === 'focus') {\n\n            this.manualListeners\n                .set('focus', () => this.show())\n                .set('blur', () => this.hide())\n                .forEach((listener, event) => this.elementRef.nativeElement.addEventListener(event, listener));\n        }\n    }\n\n    show(): void {\n        if (!this.disabled) {\n            if (!this.tooltip) {\n                const overlayRef = this.createOverlay();\n                this.detach();\n\n                this.portal = this.portal || new ComponentPortal(McTooltipComponent, this.hostView);\n\n                this.tooltip = overlayRef.attach(this.portal).instance;\n                this.tooltip.afterHidden()\n                    .pipe(takeUntil(this.destroyed))\n                    .subscribe(() => this.detach());\n                this.isDynamicTooltip = true;\n                const properties = [\n                    'mcTitle',\n                    'mcPlacement',\n                    'mcTrigger',\n                    'mcTooltipDisabled',\n                    'mcMouseEnterDelay',\n                    'mcMouseLeaveDelay',\n                    'mсTooltipClass',\n                    'mcVisible'\n                ];\n                properties.forEach((property) => this.updateCompValue(property, this[ property ]));\n                this.tooltip.mcVisibleChange.pipe(takeUntil(this.$unsubscribe), distinctUntilChanged())\n                    .subscribe((data) => {\n                        this.mcVisible = data;\n                        this.mcVisibleChange.emit(data);\n                        this.isTooltipOpen = data;\n                    });\n            }\n            this.updatePosition();\n            this.tooltip.show();\n        }\n    }\n\n    hide(): void {\n        if (this.tooltip) {\n            this.tooltip.hide();\n        }\n    }\n\n    /** Updates the position of the current tooltip. */\n    updatePosition() {\n        if (!this.overlayRef) {\n            this.overlayRef = this.createOverlay();\n        }\n        const position =\n            this.overlayRef.getConfig().positionStrategy as FlexibleConnectedPositionStrategy;\n        const origin = this.getOrigin();\n        const overlay = this.getOverlayPosition();\n\n        position.withPositions([\n            {...origin.main, ...overlay.main},\n            {...origin.fallback, ...overlay.fallback}\n        ]);\n    }\n\n    /**\n     * Returns the origin position and a fallback position based on the user's position preference.\n     * The fallback position is the inverse of the origin (e.g. `'below' -> 'above'`).\n     */\n    getOrigin(): {main: IOriginConnectionPosition; fallback: IOriginConnectionPosition} {\n        const position = this.mcPlacement;\n        const isLtr = !this.direction || this.direction.value === 'ltr';\n        let originPosition: IOriginConnectionPosition;\n\n        if (position === 'top' || position === 'bottom') {\n            originPosition = {originX: 'center', originY: position === 'top' ? 'top' : 'bottom'};\n        } else if (\n            position === 'top' ||\n            (position === 'left' && isLtr) ||\n            (position === 'right' && !isLtr)) {\n            originPosition = {originX: 'start', originY: 'center'};\n        } else if (\n            position === 'bottom' ||\n            (position === 'right' && isLtr) ||\n            (position === 'left' && !isLtr)) {\n            originPosition = {originX: 'end', originY: 'center'};\n        } else {\n            throw getMcTooltipInvalidPositionError(position);\n        }\n\n        const {x, y} = this.invertPosition(originPosition.originX, originPosition.originY);\n\n        return {\n            main: originPosition,\n            fallback: {originX: x, originY: y}\n        };\n    }\n\n    /** Returns the overlay position and a fallback position based on the user's preference */\n    getOverlayPosition(): {main: IOverlayConnectionPosition; fallback: IOverlayConnectionPosition} {\n        const position = this.mcPlacement;\n        const isLtr = !this.direction || this.direction.value === 'ltr';\n        let overlayPosition: IOverlayConnectionPosition;\n\n        if (position === 'top') {\n            overlayPosition = {overlayX: 'center', overlayY: 'bottom'};\n        } else if (position === 'bottom') {\n            overlayPosition = {overlayX: 'center', overlayY: 'top'};\n        } else if (\n            position === 'top' ||\n            (position === 'left' && isLtr) ||\n            (position === 'right' && !isLtr)) {\n            overlayPosition = {overlayX: 'end', overlayY: 'center'};\n        } else if (\n            position === 'bottom' ||\n            (position === 'right' && isLtr) ||\n            (position === 'left' && !isLtr)) {\n            overlayPosition = {overlayX: 'start', overlayY: 'center'};\n        } else {\n            throw getMcTooltipInvalidPositionError(position);\n        }\n\n        const {x, y} = this.invertPosition(overlayPosition.overlayX, overlayPosition.overlayY);\n\n        return {\n            main: overlayPosition,\n            fallback: {overlayX: x, overlayY: y}\n        };\n    }\n\n    /** Inverts an overlay position. */\n    private invertPosition(x: HorizontalConnectionPos, y: VerticalConnectionPos) {\n        let newX: HorizontalConnectionPos = x;\n        let newY: VerticalConnectionPos = y;\n        if (this.mcPlacement === 'top' || this.mcPlacement === 'bottom') {\n            if (y === 'top') {\n                newY = 'bottom';\n            } else if (y === 'bottom') {\n                newY = 'top';\n            }\n        } else {\n            if (x === 'end') {\n                newX = 'start';\n            } else if (x === 'start') {\n                newX = 'end';\n            }\n        }\n\n        return {x: newX, y: newY};\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { OverlayModule } from '@ptsecurity/cdk/overlay';\n\nimport {\n    McTooltipComponent,\n    McTooltip,\n    MC_TOOLTIP_SCROLL_STRATEGY_FACTORY_PROVIDER\n} from './tooltip.component';\n\n\n@NgModule({\n    declarations: [McTooltipComponent, McTooltip],\n    exports: [McTooltipComponent, McTooltip],\n    imports: [CommonModule, OverlayModule],\n    providers: [MC_TOOLTIP_SCROLL_STRATEGY_FACTORY_PROVIDER],\n    entryComponents: [McTooltipComponent]\n})\nexport class McToolTipModule {\n}\n","import { Version } from '@angular/core';\n\n\nexport const VERSION = new Version('1.0.0-beta.2-c6a8426');\n","export enum TimeParts {\n    hours,\n    minutes,\n    seconds\n}\n\nexport enum TimeFormats {\n    HHmmss = 'HH:mm:ss',\n    HHmm = 'HH:mm'\n}\n\nexport const TIMEFORMAT_PLACEHOLDERS: { [timeFormat: string]: string } = {\n    [TimeFormats.HHmmss]: '  :  :  ',\n    [TimeFormats.HHmm]: '  :  '\n};\n\nexport const DEFAULT_TIME_FORMAT: TimeFormats = TimeFormats.HHmm;\n\nexport const HOURS_MINUTES_SECONDS_REGEXP =\n    new RegExp(/^([0-9]|0[0-9]|1[0-9]|2[0-3]):([0-5][0-9]|[0-9]):([0-5][0-9]|[0-9])?$/);\nexport const HOURS_MINUTES_REGEXP = /^([0-9]|0[0-9]|1[0-9]|2[0-3]):([0-5][0-9]|[0-9])?$/;\nexport const HOURS_ONLY_REGEXP = /^([0-9]|0[0-9]|1[0-9]|2[0-3]):?$/;\n\nexport const SECONDS_PER_MINUTE: number = 59;\nexport const MINUTES_PER_HOUR: number = 59;\nexport const HOURS_PER_DAY: number = 23;\n\n// TODO Move it to common CDK\nexport const ARROW_UP_KEYCODE: string = 'ArrowUp';\nexport const ARROW_DOWN_KEYCODE: string = 'ArrowDown';\nexport const ARROW_LEFT_KEYCODE: string = 'ArrowLeft';\nexport const ARROW_RIGHT_KEYCODE: string = 'ArrowRight';\n","/* tslint:disable:no-empty */\n\nimport { ActiveDescendantKeyManager } from '@ptsecurity/cdk/a11y';\nimport { Directionality } from '@ptsecurity/cdk/bidi';\nimport { coerceBooleanProperty } from '@ptsecurity/cdk/coercion';\nimport { SelectionModel } from '@ptsecurity/cdk/collections';\nimport {\n    DOWN_ARROW,\n    END,\n    ENTER,\n    HOME,\n    LEFT_ARROW,\n    RIGHT_ARROW,\n    SPACE,\n    UP_ARROW,\n    A\n} from '@ptsecurity/cdk/keycodes';\nimport {\n    CdkConnectedOverlay,\n    Overlay,\n    RepositionScrollStrategy,\n    IScrollStrategy,\n    ViewportRuler\n} from '@ptsecurity/cdk/overlay';\n\nimport {\n    AfterContentInit, AfterViewInit,\n    Attribute,\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    ContentChild,\n    ContentChildren,\n    Directive,\n    DoCheck,\n    ElementRef,\n    EventEmitter,\n    Inject,\n    InjectionToken,\n    Input,\n    isDevMode,\n    NgZone,\n    OnChanges,\n    OnDestroy,\n    OnInit,\n    Optional,\n    Output,\n    QueryList, Renderer2,\n    Self,\n    SimpleChanges,\n    ViewChild, ViewChildren,\n    ViewEncapsulation\n} from '@angular/core';\nimport { ControlValueAccessor, FormGroupDirective, NgControl, NgForm } from '@angular/forms';\nimport {\n    _countGroupLabelsBeforeOption,\n    _getOptionScrollPosition,\n    CanDisable,\n    CanDisableCtor,\n    CanUpdateErrorState,\n    CanUpdateErrorStateCtor,\n    ErrorStateMatcher,\n    HasTabIndex, HasTabIndexCtor,\n    MC_OPTION_PARENT_COMPONENT,\n    McOptgroup,\n    McOption,\n    McOptionSelectionChange,\n    mixinDisabled,\n    mixinErrorState,\n    mixinTabIndex\n} from '@ptsecurity/mosaic/core';\n\nimport { McFormField, McFormFieldControl } from '@ptsecurity/mosaic/form-field';\nimport { McTag } from '@ptsecurity/mosaic/tag';\n\n\nimport { defer, merge, Observable, Subject } from 'rxjs';\nimport {\n    filter,\n    map,\n    startWith,\n    switchMap,\n    take,\n    takeUntil,\n    distinctUntilChanged\n} from 'rxjs/operators';\n\nimport {\n    getMcSelectDynamicMultipleError,\n    getMcSelectNonArrayValueError,\n    getMcSelectNonFunctionValueError\n} from './select-errors';\n\nimport { mcSelectAnimations } from './select-animations';\n\n\nlet nextUniqueId = 0;\n\n/**\n * The following style constants are necessary to save here in order\n * to properly calculate the alignment of the selected option over\n * the trigger element.\n */\n\n/** The max height of the select's overlay panel */\nexport const SELECT_PANEL_MAX_HEIGHT = 224;\n\n/** The panel's padding on the x-axis */\nexport const SELECT_PANEL_PADDING_X = 1;\n\n/** The panel's x axis padding if it is indented (e.g. there is an option group). */\n/* tslint:disable-next-line:no-magic-numbers */\nexport const SELECT_PANEL_INDENT_PADDING_X = SELECT_PANEL_PADDING_X * 2;\n\n/** The height of the select items in `em` units. */\nexport const SELECT_ITEM_HEIGHT_EM = 2;\n\n/**\n * The select panel will only \"fit\" inside the viewport if it is positioned at\n * this value or more away from the viewport boundary.\n */\nexport const SELECT_PANEL_VIEWPORT_PADDING = 8;\n\n/** Injection token that determines the scroll handling while a select is open. */\nexport const MC_SELECT_SCROLL_STRATEGY =\n    new InjectionToken<() => IScrollStrategy>('mc-select-scroll-strategy');\n\n/** @docs-private */\nexport function MC_SELECT_SCROLL_STRATEGY_PROVIDER_FACTORY(overlay: Overlay):\n    () => RepositionScrollStrategy {\n    return () => overlay.scrollStrategies.reposition();\n}\n\n/** @docs-private */\nexport const MC_SELECT_SCROLL_STRATEGY_PROVIDER = {\n    provide: MC_SELECT_SCROLL_STRATEGY,\n    deps: [Overlay],\n    useFactory: MC_SELECT_SCROLL_STRATEGY_PROVIDER_FACTORY\n};\n\n/** Change event object that is emitted when the select value has changed. */\nexport class McSelectChange {\n    constructor(\n        /** Reference to the select that emitted the change event. */\n        public source: McSelect,\n        /** Current value of the select that emitted the event. */\n        public value: any) {\n    }\n}\n\n// Boilerplate for applying mixins to McSelect.\n/** @docs-private */\nexport class McSelectBase {\n    constructor(\n        public _elementRef: ElementRef,\n        public _defaultErrorStateMatcher: ErrorStateMatcher,\n        public _parentForm: NgForm,\n        public _parentFormGroup: FormGroupDirective,\n        public ngControl: NgControl\n    ) {}\n}\n\nexport const _McSelectMixinBase:\n    CanDisableCtor &\n    HasTabIndexCtor &\n    CanUpdateErrorStateCtor & typeof McSelectBase\n    = mixinTabIndex(mixinDisabled(mixinErrorState(McSelectBase)));\n\n\n/**\n * Allows the user to customize the trigger that is displayed when the select has a value.\n */\n@Directive({ selector: 'mc-select-trigger' })\nexport class McSelectTrigger {}\n\n\n@Component({\n    selector: 'mc-select',\n    exportAs: 'mcSelect',\n    templateUrl: 'select.html',\n    styleUrls: ['./select.css'],\n    inputs: ['disabled', 'tabIndex'],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    host: {\n        '[attr.id]': 'id',\n        '[attr.tabindex]': 'tabIndex',\n        class: 'mc-select',\n        '[class.mc-disabled]': 'disabled',\n        '[class.mc-select-invalid]': 'errorState',\n        '[class.mc-select-required]': 'required',\n        '(keydown)': '_handleKeydown($event)',\n        '(focus)': '_onFocus()',\n        '(blur)': '_onBlur()',\n        '(window:resize)': '_calculateHiddenItems()'\n    },\n    animations: [\n        mcSelectAnimations.transformPanel,\n        mcSelectAnimations.fadeInContent\n    ],\n    providers: [\n        { provide: McFormFieldControl, useExisting: McSelect },\n        { provide: MC_OPTION_PARENT_COMPONENT, useExisting: McSelect }\n    ]\n})\nexport class McSelect extends _McSelectMixinBase implements\n    AfterContentInit, AfterViewInit, OnChanges, OnDestroy, OnInit, DoCheck, ControlValueAccessor, CanDisable,\n    HasTabIndex, McFormFieldControl<any>, CanUpdateErrorState {\n\n    /** The last measured value for the trigger's client bounding rect. */\n    _triggerRect: ClientRect;\n\n    /** The cached font-size of the trigger element. */\n    _triggerFontSize = 0;\n\n    /** Deals with the selection logic. */\n    _selectionModel: SelectionModel<McOption>;\n\n    /** Manages keyboard events for options in the panel. */\n    _keyManager: ActiveDescendantKeyManager<McOption>;\n\n    /** The IDs of child options to be passed to the aria-owns attribute. */\n    _optionIds: string = '';\n\n    /** The value of the select panel's transform-origin property. */\n    _transformOrigin: string = 'top';\n\n    /** Whether the panel's animation is done. */\n    _panelDoneAnimating: boolean = false;\n\n    /** Emits when the panel element is finished transforming in. */\n    _panelDoneAnimatingStream = new Subject<string>();\n\n    /** Strategy that will be used to handle scrolling while the select panel is open. */\n    _scrollStrategy = this._scrollStrategyFactory();\n\n    /**\n     * The y-offset of the overlay panel in relation to the trigger's top start corner.\n     * This must be adjusted to align the selected option text over the trigger text.\n     * when the panel opens. Will change based on the y-position of the selected option.\n     */\n    _offsetY = 0;\n\n    /**\n     * This position config ensures that the top \"start\" corner of the overlay\n     * is aligned with with the top \"start\" of the origin by default (overlapping\n     * the trigger completely). If the panel cannot fit below the trigger, it\n     * will fall back to a position above the trigger.\n     */\n    _positions = [\n        {\n            originX: 'start',\n            originY: 'bottom',\n            overlayX: 'start',\n            overlayY: 'top'\n        },\n        {\n            originX: 'start',\n            originY: 'top',\n            overlayX: 'start',\n            overlayY: 'bottom'\n        }\n    ];\n\n    /** Whether the select is focused. */\n    get focused(): boolean {\n        return this._focused || this._panelOpen;\n    }\n\n    /**\n     * @deprecated Setter to be removed as this property is intended to be readonly.\n     * @breaking-change 8.0.0\n     */\n    set focused(value: boolean) {\n        this._focused = value;\n    }\n\n    /** A name for this control that can be used by `mc-form-field`. */\n    controlType = 'mc-select';\n\n    @ViewChild('trigger') trigger: ElementRef;\n    @ViewChildren(McTag) tags: QueryList<McTag>;\n\n    @ViewChild('panel') panel: ElementRef;\n\n    /** Overlay pane containing the options. */\n    @ViewChild(CdkConnectedOverlay) overlayDir: CdkConnectedOverlay;\n\n    /** All of the defined select options. */\n    @ContentChildren(McOption, { descendants: true }) options: QueryList<McOption>;\n\n    /** All of the defined groups of options. */\n    @ContentChildren(McOptgroup) optionGroups: QueryList<McOptgroup>;\n\n    /** Classes to be passed to the select panel. Supports the same syntax as `ngClass`. */\n    @Input() panelClass: string | string[] | Set<string> | { [key: string]: any };\n\n    /** User-supplied override of the trigger element. */\n    @ContentChild(McSelectTrigger) customTrigger: McSelectTrigger;\n\n    /** Placeholder to be shown if no value has been selected. */\n    @Input()\n    get placeholder(): string {\n        return this._placeholder;\n    }\n\n    set placeholder(value: string) {\n        this._placeholder = value;\n        this.stateChanges.next();\n    }\n\n    /** Whether the component is required. */\n    @Input()\n    get required(): boolean {\n        return this._required;\n    }\n\n    set required(value: boolean) {\n        this._required = coerceBooleanProperty(value);\n        this.stateChanges.next();\n    }\n\n    /** Whether the user should be allowed to select multiple options. */\n    @Input()\n    get multiple(): boolean {\n        return this._multiple;\n    }\n\n    set multiple(value: boolean) {\n        if (this._selectionModel) {\n            throw getMcSelectDynamicMultipleError();\n        }\n\n        this._multiple = coerceBooleanProperty(value);\n    }\n\n    /**\n     * Function to compare the option values with the selected values. The first argument\n     * is a value from an option. The second is a value from the selection. A boolean\n     * should be returned.\n     */\n    @Input()\n    get compareWith() {\n        return this._compareWith;\n    }\n\n    set compareWith(fn: (o1: any, o2: any) => boolean) {\n        /* tslint:disable-next-line:strict-type-predicates */\n        if (typeof fn !== 'function') {\n            throw getMcSelectNonFunctionValueError();\n        }\n\n        this._compareWith = fn;\n\n        if (this._selectionModel) {\n            // A different comparator means the selection could change.\n            this._initializeSelection();\n        }\n    }\n\n    /** Value of the select control. */\n    @Input()\n    get value(): any {\n        return this._value;\n    }\n\n    set value(newValue: any) {\n        if (newValue !== this._value) {\n            this.writeValue(newValue);\n            this._value = newValue;\n        }\n    }\n\n    /** Object used to control when error messages are shown. */\n    @Input() errorStateMatcher: ErrorStateMatcher;\n\n    /**\n     * Function used to sort the values in a select in multiple mode.\n     * Follows the same logic as `Array.prototype.sort`.\n     */\n    @Input() sortComparator: (a: McOption, b: McOption, options: McOption[]) => number;\n\n    @Input()\n    get id(): string {\n        return this._id;\n    }\n\n    set id(value: string) {\n        this._id = value || this._uid;\n        this.stateChanges.next();\n    }\n\n    /** Combined stream of all of the child options' change events. */\n    readonly optionSelectionChanges: Observable<McOptionSelectionChange> = defer(() => {\n        if (this.options) {\n            return merge(...this.options.map((option) => option.onSelectionChange));\n        }\n\n        return this._ngZone.onStable\n            .asObservable()\n            .pipe(take(1), switchMap(() => this.optionSelectionChanges));\n    });\n\n    /** Event emitted when the select panel has been toggled. */\n    @Output() readonly openedChange: EventEmitter<boolean> = new EventEmitter<boolean>();\n\n    /** Event emitted when the select has been opened. */\n    @Output('opened') readonly _openedStream: Observable<void> =\n        this.openedChange.pipe(filter((o) => o), map(() => {}));\n\n    /** Event emitted when the select has been closed. */\n    @Output('closed') readonly _closedStream: Observable<void> =\n        this.openedChange.pipe(filter((o) => !o), map(() => {}));\n\n    /** Event emitted when the selected value has been changed by the user. */\n    @Output() readonly selectionChange: EventEmitter<McSelectChange> = new EventEmitter<McSelectChange>();\n\n    /**\n     * Event that emits whenever the raw value of the select changes. This is here primarily\n     * to facilitate the two-way binding for the `value` input.\n     * @docs-private\n     */\n    @Output() readonly valueChange: EventEmitter<any> = new EventEmitter<any>();\n\n    hiddenItems: number = 0;\n    oneMoreText: string = '...ещё';\n\n    /** Whether or not the overlay panel is open. */\n    private _panelOpen = false;\n\n    /** Whether filling out the select is required in the form. */\n    private _required: boolean = false;\n\n    /** The scroll position of the overlay panel, calculated to center the selected option. */\n    private _scrollTop = 0;\n\n    /** The placeholder displayed in the trigger of the select. */\n    private _placeholder: string;\n\n    /** Whether the component is in multiple selection mode. */\n    private _multiple: boolean = false;\n\n    /** Unique id for this input. */\n    private readonly _uid = `mc-select-${nextUniqueId++}`;\n\n    /** Emits whenever the component is destroyed. */\n    private readonly _destroy = new Subject<void>();\n\n    private _focused = false;\n\n    private _value: any;\n\n    private _id: string;\n\n    constructor(\n        private readonly _viewportRuler: ViewportRuler,\n        private readonly _changeDetectorRef: ChangeDetectorRef,\n        private readonly _ngZone: NgZone,\n        private readonly _renderer: Renderer2,\n        _defaultErrorStateMatcher: ErrorStateMatcher,\n        elementRef: ElementRef,\n        @Optional() private readonly _dir: Directionality,\n        @Optional() _parentForm: NgForm,\n        @Optional() _parentFormGroup: FormGroupDirective,\n        @Optional() private readonly _parentFormField: McFormField,\n        @Self() @Optional() public ngControl: NgControl,\n        @Attribute('tabindex') tabIndex: string,\n        @Inject(MC_SELECT_SCROLL_STRATEGY) private readonly _scrollStrategyFactory\n    ) {\n        super(elementRef, _defaultErrorStateMatcher, _parentForm, _parentFormGroup, ngControl);\n\n        if (this.ngControl) {\n            // Note: we provide the value accessor through here, instead of\n            // the `providers` to avoid running into a circular import.\n            this.ngControl.valueAccessor = this;\n        }\n\n        this.tabIndex = parseInt(tabIndex) || 0;\n\n        // Force setter to be called in case id was not specified.\n        this.id = this.id;\n    }\n\n    ngOnInit() {\n        this._selectionModel = new SelectionModel<McOption>(this.multiple);\n        this.stateChanges.next();\n\n        // We need `distinctUntilChanged` here, because some browsers will\n        // fire the animation end event twice for the same animation. See:\n        // https://github.com/angular/angular/issues/24084\n        this._panelDoneAnimatingStream\n            .pipe(distinctUntilChanged(), takeUntil(this._destroy))\n            .subscribe(() => {\n                if (this.panelOpen) {\n                    this._scrollTop = 0;\n                    this.openedChange.emit(true);\n                } else {\n                    this.openedChange.emit(false);\n                    this._panelDoneAnimating = false;\n                    this.overlayDir.offsetX = 0;\n                    this._changeDetectorRef.markForCheck();\n                }\n            });\n    }\n\n    ngAfterContentInit() {\n        this._initKeyManager();\n\n        this._selectionModel.onChange!\n            .pipe(takeUntil(this._destroy))\n            .subscribe((event) => {\n                event.added.forEach((option) => option.select());\n                event.removed.forEach((option) => option.deselect());\n            });\n\n        this.options.changes\n            .pipe(startWith(null), takeUntil(this._destroy))\n            .subscribe(() => {\n                this._resetOptions();\n                this._initializeSelection();\n            });\n    }\n\n    ngAfterViewInit(): void {\n        this.tags.changes\n            .subscribe(() => {\n                setTimeout(() => this._calculateHiddenItems(), 0);\n            });\n    }\n\n    ngDoCheck() {\n        if (this.ngControl) { this.updateErrorState(); }\n    }\n\n    ngOnChanges(changes: SimpleChanges) {\n        // Updating the disabled state is handled by `mixinDisabled`, but we need to additionally let\n        // the parent form field know to run change detection when the disabled state changes.\n        if (changes.disabled) {\n            this.stateChanges.next();\n        }\n    }\n\n    ngOnDestroy() {\n        this._destroy.next();\n        this._destroy.complete();\n        this.stateChanges.complete();\n    }\n\n    /** `View -> model callback called when value changes` */\n    _onChange: (value: any) => void = () => {};\n\n    /** `View -> model callback called when select has been touched` */\n    _onTouched = () => {};\n\n    /** Toggles the overlay panel open or closed. */\n    toggle(): void {\n        if (this.panelOpen) {\n            this.close();\n        } else {\n            this.open();\n        }\n    }\n\n    /** Opens the overlay panel. */\n    open(): void {\n        if (this.disabled || !this.options || !this.options.length || this._panelOpen) { return; }\n\n        this._triggerRect = this.trigger.nativeElement.getBoundingClientRect();\n        // Note: The computed font-size will be a string pixel value (e.g. \"16px\").\n        // `parseInt` ignores the trailing 'px' and converts this to a number.\n        this._triggerFontSize = parseInt(getComputedStyle(this.trigger.nativeElement)['font-size']);\n\n        this._panelOpen = true;\n        this._keyManager.withHorizontalOrientation(null);\n        this._calculateOverlayPosition();\n        this._highlightCorrectOption();\n        this._changeDetectorRef.markForCheck();\n\n        // Set the font size on the panel element once it exists.\n        this._ngZone.onStable.asObservable()\n            .pipe(take(1))\n            .subscribe(() => {\n                if (this._triggerFontSize && this.overlayDir.overlayRef &&\n                    this.overlayDir.overlayRef.overlayElement) {\n                    this.overlayDir.overlayRef.overlayElement.style.fontSize = `${this._triggerFontSize}px`;\n                }\n            });\n    }\n\n    /** Closes the overlay panel and focuses the host element. */\n    close(): void {\n        if (this._panelOpen) {\n            this._panelOpen = false;\n            this._keyManager.withHorizontalOrientation(this._isRtl() ? 'rtl' : 'ltr');\n            this._changeDetectorRef.markForCheck();\n            this._onTouched();\n        }\n    }\n\n    /**\n     * Sets the select's value. Part of the ControlValueAccessor interface\n     * required to integrate with Angular's core forms API.\n     *\n     * @param value New value to be written to the model.\n     */\n    writeValue(value: any): void {\n        if (this.options) {\n            this._setSelectionByValue(value);\n        }\n    }\n\n    /**\n     * Saves a callback function to be invoked when the select's value\n     * changes from user input. Part of the ControlValueAccessor interface\n     * required to integrate with Angular's core forms API.\n     *\n     * @param fn Callback to be triggered when the value changes.\n     */\n    registerOnChange(fn: (value: any) => void): void {\n        this._onChange = fn;\n    }\n\n    /**\n     * Saves a callback function to be invoked when the select is blurred\n     * by the user. Part of the ControlValueAccessor interface required\n     * to integrate with Angular's core forms API.\n     *\n     * @param fn Callback to be triggered when the component has been touched.\n     */\n    registerOnTouched(fn: () => {}): void {\n        this._onTouched = fn;\n    }\n\n    /**\n     * Disables the select. Part of the ControlValueAccessor interface required\n     * to integrate with Angular's core forms API.\n     *\n     * @param isDisabled Sets whether the component is disabled.\n     */\n    setDisabledState(isDisabled: boolean): void {\n        this.disabled = isDisabled;\n        this._changeDetectorRef.markForCheck();\n        this.stateChanges.next();\n    }\n\n    get panelOpen(): boolean {\n        return this._panelOpen;\n    }\n\n    get selected(): McOption | McOption[] {\n        return this.multiple ? this._selectionModel.selected : this._selectionModel.selected[0];\n    }\n\n    get triggerValue(): string {\n        if (this.empty) { return ''; }\n\n        if (this._multiple) {\n            const selectedOptions = this._selectionModel.selected.map((option) => option.viewValue);\n\n            if (this._isRtl()) { selectedOptions.reverse(); }\n\n            return selectedOptions.join(', ');\n        }\n\n        return this._selectionModel.selected[0].viewValue;\n    }\n\n    get triggerValues(): McOption[] {\n        if (this.empty) { return []; }\n\n        if (this._multiple) {\n            const selectedOptions = this._selectionModel.selected;\n\n            if (this._isRtl()) { selectedOptions.reverse(); }\n\n            return selectedOptions;\n        }\n\n        return [this._selectionModel.selected[0]];\n    }\n\n    get empty(): boolean {\n        return !this._selectionModel || this._selectionModel.isEmpty();\n    }\n\n    _isRtl(): boolean {\n        return this._dir ? this._dir.value === 'rtl' : false;\n    }\n\n    _handleKeydown(event: KeyboardEvent): void {\n        if (!this.disabled) {\n            if (this.panelOpen) {\n                this._handleOpenKeydown(event);\n            } else {\n                this._handleClosedKeydown(event);\n            }\n        }\n    }\n\n    /**\n     * When the panel content is done fading in, the _panelDoneAnimating property is\n     * set so the proper class can be added to the panel.\n     */\n    _onFadeInDone(): void {\n        this._panelDoneAnimating = this.panelOpen;\n        this._changeDetectorRef.markForCheck();\n    }\n\n    _onFocus() {\n        if (!this.disabled) {\n            this._focused = true;\n            this.stateChanges.next();\n        }\n    }\n\n    /**\n     * Calls the touched callback only if the panel is closed. Otherwise, the trigger will\n     * \"blur\" to the panel when it opens, causing a false positive.\n     */\n    _onBlur() {\n        this._focused = false;\n\n        if (!this.disabled && !this.panelOpen) {\n            this._onTouched();\n            this._changeDetectorRef.markForCheck();\n            this.stateChanges.next();\n        }\n    }\n\n    /**\n     * Callback that is invoked when the overlay panel has been attached.\n     */\n    _onAttached(): void {\n        this.overlayDir.positionChange\n            .pipe(take(1))\n            .subscribe(() => {\n                this._changeDetectorRef.detectChanges();\n                this._calculateOverlayOffsetX();\n                this.panel.nativeElement.scrollTop = this._scrollTop;\n            });\n    }\n\n    /** Returns the theme to be used on the panel. */\n    _getPanelTheme(): string {\n        return this._parentFormField ? `mc-${this._parentFormField.color}` : '';\n    }\n\n    /** Focuses the select element. */\n    focus(): void {\n        this._elementRef.nativeElement.focus();\n    }\n\n    /**\n     * Calculates the scroll position of the select's overlay panel.\n     *\n     * Attempts to center the selected option in the panel. If the option is\n     * too high or too low in the panel to be scrolled to the center, it clamps the\n     * scroll position to the min or max scroll positions respectively.\n     */\n    _calculateOverlayScroll(selectedIndex: number, scrollBuffer: number, maxScroll: number): number {\n        const itemHeight = this._getItemHeight();\n        const optionOffsetFromScrollTop = itemHeight * selectedIndex;\n\n        /* tslint:disable-next-line:no-magic-numbers */\n        const halfOptionHeight = itemHeight / 2;\n\n        // Starts at the optionOffsetFromScrollTop, which scrolls the option to the top of the\n        // scroll container, then subtracts the scroll buffer to scroll the option down to\n        // the center of the overlay panel. Half the option height must be re-added to the\n        // scrollTop so the option is centered based on its middle, not its top edge.\n        const optimalScrollPosition = optionOffsetFromScrollTop - scrollBuffer + halfOptionHeight;\n\n        return Math.min(Math.max(0, optimalScrollPosition), maxScroll);\n    }\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    onContainerClick() {\n        this.focus();\n        this.open();\n    }\n\n    /** Invoked when an option is clicked. */\n    onRemoveMatcherItem(option: McOption, $event): void {\n        $event.stopPropagation();\n\n        option.deselect();\n    }\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    get shouldLabelFloat(): boolean {\n        return this._panelOpen || !this.empty;\n    }\n\n    _calculateHiddenItems(): void {\n        if (this.empty) { return; }\n\n        let visibleItems: number = 0;\n        const totalItemsWidth = this._getTotalItemsWidthInMatcher();\n        let totalVisibleItemsWidth: number = 0;\n        const itemMargin: number = 4;\n\n        this.tags.forEach((tag) => {\n            if (tag.nativeElement.offsetTop < tag.nativeElement.offsetHeight) {\n                totalVisibleItemsWidth += tag.nativeElement.getBoundingClientRect().width + itemMargin;\n                visibleItems++;\n            }\n        });\n\n        this.hiddenItems = (this.selected as ArrayLike<McOption>).length - visibleItems;\n\n        if (this.hiddenItems) {\n            const itemsCounter = this.trigger.nativeElement.querySelector('.mc-select__match-hidden-text');\n            const matcherList = this.trigger.nativeElement.querySelector('.mc-select__match-list');\n\n            const itemsCounterShowed = itemsCounter.offsetTop < itemsCounter.offsetHeight;\n            // const itemsCounterWidth: number = itemsCounter.getBoundingClientRect().width;\n            const itemsCounterWidth: number = 86;\n\n            const matcherListWidth: number = matcherList.getBoundingClientRect().width;\n            const matcherWidth: number = matcherListWidth + itemsCounterWidth;\n\n            if (itemsCounterShowed && (totalItemsWidth < matcherWidth)) { this.hiddenItems = 0; }\n\n            if (\n                totalVisibleItemsWidth === matcherListWidth ||\n                (totalVisibleItemsWidth + itemsCounterWidth) < matcherListWidth\n            ) {\n                this._changeDetectorRef.markForCheck();\n\n                return ;\n            } else if (!itemsCounterShowed && (totalItemsWidth + itemsCounterWidth) > matcherWidth) {\n                this.hiddenItems++;\n            }\n        }\n\n        this._changeDetectorRef.markForCheck();\n    }\n\n    private _getTotalItemsWidthInMatcher(): number {\n        const triggerClone = this.trigger.nativeElement.cloneNode(true);\n        triggerClone.querySelector('.mc-select__match-hidden-text').remove();\n\n        this._renderer.setStyle(triggerClone, 'position', 'absolute');\n        this._renderer.setStyle(triggerClone, 'visibility', 'hidden');\n        this._renderer.setStyle(triggerClone, 'top', '-100%');\n        this._renderer.setStyle(triggerClone, 'left', '0');\n\n        this._renderer.appendChild(this.trigger.nativeElement, triggerClone);\n\n        let totalItemsWidth: number = 0;\n        const itemMargin: number = 4;\n        triggerClone.querySelectorAll('mc-tag').forEach((item) => {\n            totalItemsWidth += item.getBoundingClientRect().width as number + itemMargin;\n        });\n\n        triggerClone.remove();\n\n        return totalItemsWidth;\n    }\n\n    /** Handles keyboard events while the select is closed. */\n    private _handleClosedKeydown(event: KeyboardEvent): void {\n        /* tslint:disable-next-line */\n        const keyCode = event.keyCode;\n        const isArrowKey = keyCode === DOWN_ARROW || keyCode === UP_ARROW ||\n            keyCode === LEFT_ARROW || keyCode === RIGHT_ARROW;\n        const isOpenKey = keyCode === ENTER || keyCode === SPACE;\n\n        // Open the select on ALT + arrow key to match the native <select>\n        if (isOpenKey || ((this.multiple || event.altKey) && isArrowKey)) {\n            event.preventDefault(); // prevents the page from scrolling down when pressing space\n            this.open();\n        } else if (!this.multiple) {\n            this._keyManager.onKeydown(event);\n        }\n    }\n\n    /** Handles keyboard events when the selected is open. */\n    private _handleOpenKeydown(event: KeyboardEvent): void {\n        /* tslint:disable-next-line */\n        const keyCode = event.keyCode;\n        const isArrowKey = keyCode === DOWN_ARROW || keyCode === UP_ARROW;\n        const manager = this._keyManager;\n\n        if (keyCode === HOME || keyCode === END) {\n            event.preventDefault();\n\n            if (keyCode === HOME) {\n                manager.setFirstItemActive();\n            } else {\n                manager.setLastItemActive();\n            }\n\n        } else if (isArrowKey && event.altKey) {\n            // Close the select on ALT + arrow key to match the native <select>\n            event.preventDefault();\n            this.close();\n        } else if ((keyCode === ENTER || keyCode === SPACE) && manager.activeItem) {\n            event.preventDefault();\n            manager.activeItem._selectViaInteraction();\n        } else if (this._multiple && keyCode === A && event.ctrlKey) {\n            event.preventDefault();\n            const hasDeselectedOptions = this.options.some((option) => !option.selected);\n            this.options.forEach((option) => {\n                if (hasDeselectedOptions && !option.disabled) {\n                    option.select();\n                } else {\n                    option.deselect();\n                }\n            });\n        } else {\n            const previouslyFocusedIndex = manager.activeItemIndex;\n\n            manager.onKeydown(event);\n\n            if (this._multiple && isArrowKey && event.shiftKey && manager.activeItem &&\n                manager.activeItemIndex !== previouslyFocusedIndex) {\n                manager.activeItem._selectViaInteraction();\n            }\n        }\n    }\n\n    private _initializeSelection(): void {\n        // Defer setting the value in order to avoid the \"Expression\n        // has changed after it was checked\" errors from Angular.\n        Promise.resolve().then(() => {\n            this._setSelectionByValue(this.ngControl ? this.ngControl.value : this._value);\n        });\n    }\n\n    /**\n     * Sets the selected option based on a value. If no option can be\n     * found with the designated value, the select trigger is cleared.\n     */\n    private _setSelectionByValue(value: any | any[]): void {\n        if (this.multiple && value) {\n            if (!Array.isArray(value)) {\n                throw getMcSelectNonArrayValueError();\n            }\n\n            this._selectionModel.clear();\n            value.forEach((currentValue: any) => this._selectValue(currentValue));\n            this._sortValues();\n        } else {\n            this._selectionModel.clear();\n            const correspondingOption = this._selectValue(value);\n\n            // Shift focus to the active item. Note that we shouldn't do this in multiple\n            // mode, because we don't know what option the user interacted with last.\n            if (correspondingOption) {\n                this._keyManager.setActiveItem(correspondingOption);\n            }\n        }\n\n        this._changeDetectorRef.markForCheck();\n    }\n\n    /**\n     * Finds and selects and option based on its value.\n     * @returns Option that has the corresponding value.\n     */\n    private _selectValue(value: any): McOption | undefined {\n        const correspondingOption = this.options.find((option: McOption) => {\n            try {\n                // Treat null as a special reset value.\n                return option.value != null && this._compareWith(option.value, value);\n            } catch (error) {\n                if (isDevMode()) {\n                    // Notify developers of errors in their comparator.\n                    console.warn(error);\n                }\n\n                return false;\n            }\n        });\n\n        if (correspondingOption) {\n            this._selectionModel.select(correspondingOption);\n        }\n\n        return correspondingOption;\n    }\n\n    /** Sets up a key manager to listen to keyboard events on the overlay panel. */\n    private _initKeyManager() {\n        this._keyManager = new ActiveDescendantKeyManager<McOption>(this.options)\n            .withTypeAhead()\n            .withVerticalOrientation()\n            .withHorizontalOrientation(this._isRtl() ? 'rtl' : 'ltr');\n\n        this._keyManager.tabOut\n            .pipe(takeUntil(this._destroy))\n            .subscribe(() => {\n                // Restore focus to the trigger before closing. Ensures that the focus\n                // position won't be lost if the user got focus into the overlay.\n                this.focus();\n                this.close();\n            });\n\n        this._keyManager.change\n            .pipe(takeUntil(this._destroy))\n            .subscribe(() => {\n                if (this._panelOpen && this.panel) {\n                    this._scrollActiveOptionIntoView();\n                } else if (!this._panelOpen && !this.multiple && this._keyManager.activeItem) {\n                    this._keyManager.activeItem._selectViaInteraction();\n                }\n            });\n    }\n\n    /** Drops current option subscriptions and IDs and resets from scratch. */\n    private _resetOptions(): void {\n        const changedOrDestroyed = merge(this.options.changes, this._destroy);\n\n        this.optionSelectionChanges\n            .pipe(takeUntil(changedOrDestroyed))\n            .subscribe((event) => {\n                this._onSelect(event.source, event.isUserInput);\n\n                if (event.isUserInput && !this.multiple && this._panelOpen) {\n                    this.close();\n                    this.focus();\n                }\n            });\n\n        // Listen to changes in the internal state of the options and react accordingly.\n        // Handles cases like the labels of the selected options changing.\n        merge(...this.options.map((option) => option._stateChanges))\n            .pipe(takeUntil(changedOrDestroyed))\n            .subscribe(() => {\n                this._changeDetectorRef.markForCheck();\n                this.stateChanges.next();\n            });\n\n        this._setOptionIds();\n    }\n\n    /** Invoked when an option is clicked. */\n    private _onSelect(option: McOption, isUserInput: boolean): void {\n        const wasSelected = this._selectionModel.isSelected(option);\n\n        if (option.value == null && !this._multiple) {\n            option.deselect();\n            this._selectionModel.clear();\n            this._propagateChanges(option.value);\n        } else {\n            if (option.selected) {\n                this._selectionModel.select(option);\n            } else {\n                this._selectionModel.deselect(option);\n            }\n\n            if (isUserInput) {\n                this._keyManager.setActiveItem(option);\n            }\n\n            if (this.multiple) {\n                this._sortValues();\n\n                if (isUserInput) {\n                    // In case the user selected the option with their mouse, we\n                    // want to restore focus back to the trigger, in order to\n                    // prevent the select keyboard controls from clashing with\n                    // the ones from `mc-option`.\n                    this.focus();\n                }\n            }\n        }\n\n        if (wasSelected !== this._selectionModel.isSelected(option)) {\n            this._propagateChanges();\n        }\n\n        this.stateChanges.next();\n    }\n\n    /** Sorts the selected values in the selected based on their order in the panel. */\n    private _sortValues() {\n        if (this.multiple) {\n            const options = this.options.toArray();\n\n            this._selectionModel.sort((a, b) => {\n                return this.sortComparator ? this.sortComparator(a, b, options) :\n                    options.indexOf(a) - options.indexOf(b);\n            });\n            this.stateChanges.next();\n        }\n    }\n\n    /** Emits change event to set the model value. */\n    private _propagateChanges(fallbackValue?: any): void {\n        let valueToEmit: any = null;\n\n        if (this.multiple) {\n            valueToEmit = (this.selected as McOption[]).map((option) => option.value);\n        } else {\n            valueToEmit = this.selected ? (this.selected as McOption).value : fallbackValue;\n        }\n\n        this._value = valueToEmit;\n        this.valueChange.emit(valueToEmit);\n        this._onChange(valueToEmit);\n        this.selectionChange.emit(new McSelectChange(this, valueToEmit));\n        this._changeDetectorRef.markForCheck();\n    }\n\n    /** Records option IDs to pass to the aria-owns property. */\n    private _setOptionIds() {\n        this._optionIds = this.options.map((option) => option.id).join(' ');\n    }\n\n    /**\n     * Highlights the selected item. If no option is selected, it will highlight\n     * the first item instead.\n     */\n    private _highlightCorrectOption(): void {\n        if (this._keyManager) {\n            if (this.empty) {\n                this._keyManager.setFirstItemActive();\n            } else {\n                this._keyManager.setActiveItem(this._selectionModel.selected[0]);\n            }\n        }\n    }\n\n    /** Scrolls the active option into view. */\n    private _scrollActiveOptionIntoView(): void {\n        const activeOptionIndex = this._keyManager.activeItemIndex || 0;\n        const labelCount = _countGroupLabelsBeforeOption(activeOptionIndex, this.options, this.optionGroups);\n\n        this.panel.nativeElement.scrollTop = _getOptionScrollPosition(\n            activeOptionIndex + labelCount,\n            this._getItemHeight(),\n            this.panel.nativeElement.scrollTop,\n            SELECT_PANEL_MAX_HEIGHT\n        );\n    }\n\n    /** Gets the index of the provided option in the option list. */\n    private _getOptionIndex(option: McOption): number | undefined {\n        /* tslint:disable-next-line */\n        return this.options.reduce((result: number, current: McOption, index: number) => {\n            /* tslint:disable-next-line:strict-type-predicates */\n            return result === undefined ? (option === current ? index : undefined) : result;\n        }, undefined);\n    }\n\n    /** Calculates the scroll position and x- and y-offsets of the overlay panel. */\n    private _calculateOverlayPosition(): void {\n        const itemHeight = this._getItemHeight();\n        const items = this._getItemCount();\n        const panelHeight = Math.min(items * itemHeight, SELECT_PANEL_MAX_HEIGHT);\n        const scrollContainerHeight = items * itemHeight;\n\n        // The farthest the panel can be scrolled before it hits the bottom\n        const maxScroll = scrollContainerHeight - panelHeight;\n\n        // If no value is selected we open the popup to the first item.\n        let selectedOptionOffset =\n            this.empty ? 0 : this._getOptionIndex(this._selectionModel.selected[0])!;\n\n        selectedOptionOffset += _countGroupLabelsBeforeOption(selectedOptionOffset, this.options,\n            this.optionGroups);\n\n        // We must maintain a scroll buffer so the selected option will be scrolled to the\n        // center of the overlay panel rather than the top.\n        /* tslint:disable-next-line:no-magic-numbers */\n        const scrollBuffer = panelHeight / 2;\n        this._scrollTop = this._calculateOverlayScroll(selectedOptionOffset, scrollBuffer, maxScroll);\n        this._offsetY = this._calculateOverlayOffsetY();\n\n        this._checkOverlayWithinViewport(maxScroll);\n    }\n\n    /**\n     * Sets the x-offset of the overlay panel in relation to the trigger's top start corner.\n     * This must be adjusted to align the selected option text over the trigger text when\n     * the panel opens. Will change based on LTR or RTL text direction. Note that the offset\n     * can't be calculated until the panel has been attached, because we need to know the\n     * content width in order to constrain the panel within the viewport.\n     */\n    private _calculateOverlayOffsetX(): void {\n        const overlayRect = this.overlayDir.overlayRef.overlayElement.getBoundingClientRect();\n        const viewportSize = this._viewportRuler.getViewportSize();\n        const isRtl = this._isRtl();\n        /* tslint:disable-next-line:no-magic-numbers */\n        const paddingWidth = SELECT_PANEL_PADDING_X * 2;\n        let offsetX: number;\n\n        const selected = this._selectionModel.selected[0] || this.options.first;\n        offsetX = selected && selected.group ? SELECT_PANEL_INDENT_PADDING_X : SELECT_PANEL_PADDING_X;\n\n        // Invert the offset in LTR.\n        if (!isRtl) { offsetX *= -1; }\n\n        // Determine how much the select overflows on each side.\n        const leftOverflow = 0 - (overlayRect.left + offsetX - (isRtl ? paddingWidth : 0));\n        const rightOverflow = overlayRect.right + offsetX - viewportSize.width\n            + (isRtl ? 0 : paddingWidth);\n\n        // If the element overflows on either side, reduce the offset to allow it to fit.\n        if (leftOverflow > 0) {\n            offsetX += leftOverflow + SELECT_PANEL_VIEWPORT_PADDING;\n        } else if (rightOverflow > 0) {\n            offsetX -= rightOverflow + SELECT_PANEL_VIEWPORT_PADDING;\n        }\n\n        // Set the offset directly in order to avoid having to go through change detection and\n        // potentially triggering \"changed after it was checked\" errors. Round the value to avoid\n        // blurry content in some browsers.\n        this.overlayDir.offsetX = Math.round(offsetX);\n        this.overlayDir.overlayRef.updatePosition();\n    }\n\n    /**\n     * Calculates the y-offset of the select's overlay panel in relation to the\n     * top start corner of the trigger. It has to be adjusted in order for the\n     * selected option to be aligned over the trigger when the panel opens.\n     */\n    private _calculateOverlayOffsetY(): number {\n        // const itemHeight = this._getItemHeight();\n        // const optionHeightAdjustment = (itemHeight - this._triggerRect.height) / 2;\n\n        // todo I'm not sure that we will use it\n        return 0;\n        // return Math.round(-optionHeightAdjustment);\n    }\n\n    /**\n     * Checks that the attempted overlay position will fit within the viewport.\n     * If it will not fit, tries to adjust the scroll position and the associated\n     * y-offset so the panel can open fully on-screen. If it still won't fit,\n     * sets the offset back to 0 to allow the fallback position to take over.\n     */\n    private _checkOverlayWithinViewport(maxScroll: number): void {\n        const itemHeight = this._getItemHeight();\n        const viewportSize = this._viewportRuler.getViewportSize();\n\n        const topSpaceAvailable = this._triggerRect.top - SELECT_PANEL_VIEWPORT_PADDING;\n        const bottomSpaceAvailable =\n            viewportSize.height - this._triggerRect.bottom - SELECT_PANEL_VIEWPORT_PADDING;\n\n        const panelHeightTop = Math.abs(this._offsetY);\n        const totalPanelHeight =\n            Math.min(this._getItemCount() * itemHeight, SELECT_PANEL_MAX_HEIGHT);\n        const panelHeightBottom = totalPanelHeight - panelHeightTop - this._triggerRect.height;\n\n        if (panelHeightBottom > bottomSpaceAvailable) {\n            this._adjustPanelUp(panelHeightBottom, bottomSpaceAvailable);\n        } else if (panelHeightTop > topSpaceAvailable) {\n            this._adjustPanelDown(panelHeightTop, topSpaceAvailable, maxScroll);\n        } else {\n            this._transformOrigin = this._getOriginBasedOnOption();\n        }\n    }\n\n    /** Adjusts the overlay panel up to fit in the viewport. */\n    private _adjustPanelUp(panelHeightBottom: number, bottomSpaceAvailable: number) {\n        // Browsers ignore fractional scroll offsets, so we need to round.\n        const distanceBelowViewport = Math.round(panelHeightBottom - bottomSpaceAvailable);\n\n        // Scrolls the panel up by the distance it was extending past the boundary, then\n        // adjusts the offset by that amount to move the panel up into the viewport.\n        this._scrollTop -= distanceBelowViewport;\n        this._offsetY -= distanceBelowViewport;\n        this._transformOrigin = this._getOriginBasedOnOption();\n\n        // If the panel is scrolled to the very top, it won't be able to fit the panel\n        // by scrolling, so set the offset to 0 to allow the fallback position to take\n        // effect.\n        if (this._scrollTop <= 0) {\n            this._scrollTop = 0;\n            this._offsetY = 0;\n            this._transformOrigin = `50% bottom 0px`;\n        }\n    }\n\n    /** Adjusts the overlay panel down to fit in the viewport. */\n    private _adjustPanelDown(panelHeightTop: number, topSpaceAvailable: number, maxScroll: number) {\n        // Browsers ignore fractional scroll offsets, so we need to round.\n        const distanceAboveViewport = Math.round(panelHeightTop - topSpaceAvailable);\n\n        // Scrolls the panel down by the distance it was extending past the boundary, then\n        // adjusts the offset by that amount to move the panel down into the viewport.\n        this._scrollTop += distanceAboveViewport;\n        this._offsetY += distanceAboveViewport;\n        this._transformOrigin = this._getOriginBasedOnOption();\n\n        // If the panel is scrolled to the very bottom, it won't be able to fit the\n        // panel by scrolling, so set the offset to 0 to allow the fallback position\n        // to take effect.\n        if (this._scrollTop >= maxScroll) {\n            this._scrollTop = maxScroll;\n            this._offsetY = 0;\n            this._transformOrigin = `50% top 0px`;\n\n            return;\n        }\n    }\n\n    /** Sets the transform origin point based on the selected option. */\n    private _getOriginBasedOnOption(): string {\n        const itemHeight = this._getItemHeight();\n        /* tslint:disable-next-line:no-magic-numbers */\n        const optionHeightAdjustment = (itemHeight - this._triggerRect.height) / 2;\n        /* tslint:disable-next-line:no-magic-numbers */\n        const originY = Math.abs(this._offsetY) - optionHeightAdjustment + itemHeight / 2;\n\n        return `50% ${originY}px 0px`;\n    }\n\n    /** Calculates the amount of items in the select. This includes options and group labels. */\n    private _getItemCount(): number {\n        return this.options.length + this.optionGroups.length;\n    }\n\n    /** Calculates the height of the select's options. */\n    private _getItemHeight(): number {\n        /* tslint:disable-next-line:no-magic-numbers */\n        return 32;\n        // return this._triggerFontSize * SELECT_ITEM_HEIGHT_EM;\n    }\n\n    /** Comparison function to specify which option is displayed. Defaults to object equality. */\n    private _compareWith = (o1: any, o2: any) => o1 === o2;\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { OverlayModule } from '@ptsecurity/cdk/overlay';\nimport { McOptionModule } from '@ptsecurity/mosaic/core';\nimport { McFormFieldModule } from '@ptsecurity/mosaic/form-field';\nimport { McIconModule } from '@ptsecurity/mosaic/icon';\nimport { McTagModule } from '@ptsecurity/mosaic/tag';\n\nimport { MC_SELECT_SCROLL_STRATEGY_PROVIDER, McSelect, McSelectTrigger } from './select.component';\n\n\n@NgModule({\n    imports: [\n        CommonModule,\n        OverlayModule,\n        McOptionModule,\n        McIconModule,\n        McTagModule\n    ],\n    exports: [McFormFieldModule, McSelect, McSelectTrigger, McOptionModule, CommonModule],\n    declarations: [McSelect, McSelectTrigger],\n    providers: [MC_SELECT_SCROLL_STRATEGY_PROVIDER]\n})\nexport class McSelectModule {}\n","import { InjectionToken } from '@angular/core';\n\n\n/** Injection token that can be used to access the data that was passed in to a sidepanel. */\nexport const MC_SIDEPANEL_DATA = new InjectionToken<any>('McSidepanelData');\n\nexport enum McSidepanelPosition {\n    Right = 'right',\n    Left = 'left',\n    Top = 'top',\n    Bottom = 'bottom'\n}\n\nexport class McSidepanelConfig<D = any> {\n    /** ID for the sidepanel. If omitted, a unique one will be generated. */\n    id?: string;\n\n    /** Data being injected into the child component. */\n    data?: D | null = null;\n\n    position?: McSidepanelPosition = McSidepanelPosition.Right;\n\n    /** Whether the sidepanel has a backdrop. */\n    hasBackdrop?: boolean = true;\n\n    /** When we open multiple sidepanels, backdrop appears only once, except cases then this flag is true. */\n    requiredBackdrop?: boolean = false;\n\n    /** Whether the user can use escape or clicking outside to close the sidepanel. */\n    disableClose?: boolean = false;\n\n    /** Custom class for the overlay pane. */\n    overlayPanelClass?: string | string[] = '';\n}\n","import { animate, AnimationTriggerMetadata, state, style, transition, trigger } from '@angular/animations';\nimport { AnimationCurves } from '@ptsecurity/mosaic/core';\n\nimport { McSidepanelPosition } from './sidepanel-config';\n\n\nexport enum McSidepanelAnimationState {\n    Void = 'void',\n    Visible = 'visible',\n    Hidden = 'hidden'\n}\n\n// TODO Find a way to use dynamic keys and avoid error \"Expression form not supported.\"\n// tslint:disable-next-line\nexport const mcSidepanelTransformAnimation: Record<McSidepanelPosition, { in: string; out: string }> = {\n    right: { in: 'translateX(100%)', out: 'translateX(0%)' },\n    left: { in: 'translateX(-100%)', out: 'translateX(0%)' },\n    top: { in: 'translateY(-100%)', out: 'translateY(0%)' },\n    bottom: { in: 'translateY(100%)', out: 'translateY(0%)' }\n};\n\nexport const mcSidepanelAnimations: {\n    readonly sidepanelState: AnimationTriggerMetadata;\n} = {\n    sidepanelState: trigger('state', [\n        state('hidden',\n            style({ transform: '{{transformIn}}' }),\n            { params: { transformIn: mcSidepanelTransformAnimation[McSidepanelPosition.Right].in }}\n        ),\n        state('visible',\n            style({ transform: '{{transformOut}}' }),\n            { params: { transformOut: mcSidepanelTransformAnimation[McSidepanelPosition.Right].out }}\n        ),\n        transition('visible => void, visible => hidden',\n            animate(`200ms ${AnimationCurves.AccelerationCurve}`)),\n        transition('void => visible',\n            animate(`200ms ${AnimationCurves.DecelerationCurve}`))\n    ])\n};\n","import { AnimationEvent } from '@angular/animations';\nimport {\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    ComponentRef,\n    ElementRef,\n    EmbeddedViewRef,\n    EventEmitter, Inject, InjectionToken,\n    OnDestroy,\n    ViewChild,\n    ViewEncapsulation\n} from '@angular/core';\n\nimport { BasePortalOutlet, CdkPortalOutlet, ComponentPortal, TemplatePortal } from '@ptsecurity/cdk/portal';\n\nimport {\n    mcSidepanelAnimations,\n    McSidepanelAnimationState,\n    mcSidepanelTransformAnimation\n} from './sidepanel-animations';\n\nimport { McSidepanelConfig, McSidepanelPosition } from './sidepanel-config';\n\n\nexport const MC_SIDEPANEL_WITH_INDENT =\n    new InjectionToken<boolean>('mc-sidepanel-with-indent');\n\nexport const MC_SIDEPANEL_WITH_SHADOW =\n    new InjectionToken<boolean>('mc-sidepanel-with-shadow');\n\n@Component({\n    selector: 'mc-sidepanel-container',\n    templateUrl: './sidepanel-container.component.html',\n    styleUrls: ['./sidepanel.css'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n    animations: [mcSidepanelAnimations.sidepanelState],\n    host: {\n        class: 'mc-sidepanel-container',\n        tabindex: '-1',\n        role: 'dialog',\n        'aria-modal': 'true',\n        '[attr.id]': 'id',\n        '[@state]': `{\n            value: animationState,\n            params: animationTransform\n        }`,\n        '(@state.start)': 'onAnimation($event)',\n        '(@state.done)': 'onAnimation($event)'\n    }\n})\nexport class McSidepanelContainerComponent extends BasePortalOutlet implements OnDestroy {\n    /** ID for the container DOM element. */\n    id: string;\n\n    /** The portal outlet inside of this container into which the content will be loaded. */\n    @ViewChild(CdkPortalOutlet) portalOutlet: CdkPortalOutlet;\n\n    /** The state of the sidepanel animations. */\n    animationState: McSidepanelAnimationState = McSidepanelAnimationState.Void;\n\n    animationTransform: { transformIn: string; transformOut: string };\n\n    /** Emits whenever the state of the animation changes. */\n    animationStateChanged = new EventEmitter<AnimationEvent>();\n\n    /** Whether the component has been destroyed. */\n    private destroyed: boolean;\n\n    constructor(\n        private elementRef: ElementRef<HTMLElement>,\n        private changeDetectorRef: ChangeDetectorRef,\n        public sidepanelConfig: McSidepanelConfig,\n        @Inject(MC_SIDEPANEL_WITH_INDENT) public withIndent: boolean,\n        @Inject(MC_SIDEPANEL_WITH_SHADOW) public withShadow: boolean) {\n        super();\n    }\n\n    ngOnDestroy(): void {\n        this.destroyed = true;\n    }\n\n    /** Attach a component portal as content to this sidepanel container. */\n    attachComponentPortal<T>(portal: ComponentPortal<T>): ComponentRef<T> {\n        this.validatePortalAttached();\n        this.setAnimation();\n        this.setPanelClass();\n\n        return this.portalOutlet.attachComponentPortal(portal);\n    }\n\n    /** Attach a template portal as content to this sidepanel container. */\n    attachTemplatePortal<C>(portal: TemplatePortal<C>): EmbeddedViewRef<C> {\n        this.validatePortalAttached();\n        this.setAnimation();\n        this.setPanelClass();\n\n        return this.portalOutlet.attachTemplatePortal(portal);\n    }\n\n    /** Begin animation of the sidepanel entrance into view. */\n    enter(): void {\n        if (!this.destroyed) {\n            this.animationState = McSidepanelAnimationState.Visible;\n            this.changeDetectorRef.detectChanges();\n        }\n    }\n\n    /** Begin animation of the sidepanel exiting from view. */\n    exit(): void {\n        if (!this.destroyed) {\n            this.animationState = McSidepanelAnimationState.Hidden;\n            this.changeDetectorRef.markForCheck();\n        }\n    }\n\n    onAnimation(event: AnimationEvent) {\n        this.animationStateChanged.emit(event);\n    }\n\n    private setAnimation() {\n        const position: McSidepanelPosition = this.sidepanelConfig.position!;\n\n        this.animationTransform = {\n            transformIn: mcSidepanelTransformAnimation[position].in,\n            transformOut: mcSidepanelTransformAnimation[position].out\n        };\n    }\n\n    private setPanelClass() {\n        const element: HTMLElement = this.elementRef.nativeElement;\n        const position: McSidepanelPosition = this.sidepanelConfig.position!;\n\n        element.classList.add(`mc-sidepanel-container_${position}`);\n\n        if (this.withShadow) {\n            element.classList.add('mc-sidepanel-container_shadowed');\n        }\n    }\n\n    private validatePortalAttached() {\n        if (this.portalOutlet.hasAttached()) {\n            throw Error('Attempting to attach sidepanel content after content is already attached');\n        }\n    }\n}\n","import { ESCAPE } from '@ptsecurity/cdk/keycodes';\nimport { OverlayRef } from '@ptsecurity/cdk/overlay';\nimport { merge, Observable, Subject } from 'rxjs';\nimport { filter, take } from 'rxjs/operators';\n\nimport { McSidepanelAnimationState } from './sidepanel-animations';\nimport { McSidepanelConfig } from './sidepanel-config';\nimport { McSidepanelContainerComponent } from './sidepanel-container.component';\n\n\n// Counter for unique sidepanel ids.\nlet uniqueId = 0;\n\nexport class McSidepanelRef<T = any, R = any> {\n    readonly id: string;\n\n    /** Instance of the component making up the content of the sidepanel. */\n    instance: T;\n\n    /** Subject for notifying the user that the sidepanel has been closed and dismissed. */\n    private readonly afterClosed$ = new Subject<R | undefined>();\n\n    /** Subject for notifying the user that the sidepanel has opened and appeared. */\n    private readonly afterOpened$ = new Subject<void>();\n\n    /** Result to be passed down to the `afterDismissed` stream. */\n    private result: R | undefined;\n\n    constructor(\n        public containerInstance: McSidepanelContainerComponent,\n        private overlayRef: OverlayRef,\n        public config: McSidepanelConfig) {\n\n        this.id = this.config.id || `mc-sidepanel-${uniqueId++}`;\n        this.containerInstance.id = this.id;\n\n        // Emit when opening animation completes\n        containerInstance.animationStateChanged.pipe(\n            filter(\n                (event) => event.phaseName === 'done' && event.toState === McSidepanelAnimationState.Visible\n            ),\n            take(1)\n        ).subscribe(() => {\n            this.afterOpened$.next();\n            this.afterOpened$.complete();\n        });\n\n        // Dispose overlay when closing animation is complete\n        containerInstance.animationStateChanged.pipe(\n            filter(\n                (event) => event.phaseName === 'done' && event.toState === McSidepanelAnimationState.Hidden\n            ),\n            take(1)\n        ).subscribe(() => {\n            overlayRef.dispose();\n            this.afterClosed$.next(this.result);\n            this.afterClosed$.complete();\n        });\n\n        if (!containerInstance.sidepanelConfig.disableClose) {\n            merge(\n                overlayRef.backdropClick(),\n                overlayRef.keydownEvents().pipe(\n                    // tslint:disable:deprecation\n                    // keyCode is deprecated, but IE11 and Edge don't support code property, which we need use instead\n                    filter((event) => event.keyCode === ESCAPE)\n                )\n            ).subscribe(() => this.close());\n        }\n    }\n\n    close(result?: R): void {\n        if (!this.afterClosed$.closed) {\n            // Transition the backdrop in parallel to the sidepanel.\n            this.containerInstance.animationStateChanged.pipe(\n                filter((event) => event.phaseName === 'done'),\n                take(1)\n            ).subscribe(() => this.overlayRef.detachBackdrop());\n\n            this.result = result;\n            this.containerInstance.exit();\n        }\n    }\n\n    /** Gets an observable that is notified when the sidepanel is finished closing. */\n    afterClosed(): Observable<R | undefined> {\n        return this.afterClosed$.asObservable();\n    }\n\n    /** Gets an observable that is notified when the sidepanel has opened and appeared. */\n    afterOpened(): Observable<void> {\n        return this.afterOpened$.asObservable();\n    }\n}\n","import {\n    ComponentRef,\n    Inject,\n    Injectable,\n    InjectionToken,\n    Injector, OnDestroy,\n    Optional,\n    SkipSelf,\n    TemplateRef\n} from '@angular/core';\nimport { Overlay, OverlayConfig, OverlayRef } from '@ptsecurity/cdk/overlay';\nimport { ComponentPortal, IComponentType, PortalInjector, TemplatePortal } from '@ptsecurity/cdk/portal';\n\nimport { MC_SIDEPANEL_DATA, McSidepanelConfig } from './sidepanel-config';\nimport {\n    McSidepanelContainerComponent,\n    MC_SIDEPANEL_WITH_INDENT,\n    MC_SIDEPANEL_WITH_SHADOW\n} from './sidepanel-container.component';\nimport { McSidepanelRef } from './sidepanel-ref';\n\n\n/** Injection token that can be used to specify default sidepanel options. */\nexport const MC_SIDEPANEL_DEFAULT_OPTIONS =\n    new InjectionToken<McSidepanelConfig>('mc-sidepanel-default-options');\n\n@Injectable()\nexport class McSidepanelService implements OnDestroy {\n    private openedSidepanelsAtThisLevel: McSidepanelRef[] = [];\n\n    /** Keeps track of the currently-open sidepanels. */\n    get openedSidepanels(): McSidepanelRef[] {\n        return this.parentSidepanelService ? this.parentSidepanelService.openedSidepanels :\n            this.openedSidepanelsAtThisLevel;\n    }\n\n    constructor(\n        private overlay: Overlay,\n        private injector: Injector,\n        @Optional() @Inject(MC_SIDEPANEL_DEFAULT_OPTIONS) private defaultOptions: McSidepanelConfig,\n        @Optional() @SkipSelf() private parentSidepanelService: McSidepanelService) {\n    }\n\n    ngOnDestroy() {\n        // Only close the sidepanels at this level on destroy\n        // since the parent service may still be active.\n        this.closeSidepanels(this.openedSidepanelsAtThisLevel);\n    }\n\n    open<T, D = any>(componentOrTemplateRef: IComponentType<T> | TemplateRef<T>,\n                     config?: McSidepanelConfig<D>): McSidepanelRef<T> {\n        const fullConfig = {\n            ...(this.defaultOptions || new McSidepanelConfig()),\n            ...config\n        };\n\n        if (fullConfig.id && this.getSidepanelById(fullConfig.id)) {\n            throw Error(`Sidepanel with id \"${fullConfig.id}\" exists already. The sidepanel id must be unique.`);\n        }\n\n        const overlayRef = this.createOverlay(fullConfig);\n        const container = this.attachContainer(overlayRef, fullConfig);\n        const ref = new McSidepanelRef(container, overlayRef, fullConfig);\n\n        if (componentOrTemplateRef instanceof TemplateRef) {\n            container.attachTemplatePortal(new TemplatePortal<T>(componentOrTemplateRef, null!, {\n                $implicit: fullConfig.data,\n                sidepanelRef: ref\n            } as any));\n        } else {\n            const injector = this.createInjector(fullConfig, ref, container);\n            const portal = new ComponentPortal(componentOrTemplateRef, undefined, injector);\n            const contentRef = container.attachComponentPortal(portal);\n\n            ref.instance = contentRef.instance;\n        }\n\n        this.openedSidepanels.push(ref);\n        ref.afterClosed().subscribe(() => this.removeOpenSidepanel(ref));\n        container.enter();\n\n        return ref;\n    }\n\n    /**\n     * Closes all of the currently-open sidepanels.\n     */\n    closeAll(): void {\n        this.closeSidepanels(this.openedSidepanels);\n    }\n\n    /**\n     * Finds an open sidepanel by its id.\n     * @param id ID to use when looking up the sidepanel.\n     */\n    getSidepanelById(id: string): McSidepanelRef | undefined {\n        return this.openedSidepanels.find((sidepanel) => sidepanel.id === id);\n    }\n\n    /**\n     * Attaches the sidepanel container component to the overlay.\n     */\n    private attachContainer(overlayRef: OverlayRef, config: McSidepanelConfig): McSidepanelContainerComponent {\n        const openedSidepanelsWithSamePosition = this.getOpenedSidepanelsWithSamePosition(config);\n\n        const injector = new PortalInjector(this.injector, new WeakMap<any>([\n            [McSidepanelConfig, config],\n            [MC_SIDEPANEL_WITH_INDENT, openedSidepanelsWithSamePosition.length >= 1],\n            [MC_SIDEPANEL_WITH_SHADOW, openedSidepanelsWithSamePosition.length < 2] // tslint:disable-line\n        ]));\n\n        const containerPortal = new ComponentPortal(McSidepanelContainerComponent, undefined, injector);\n        const containerRef: ComponentRef<McSidepanelContainerComponent> = overlayRef.attach(containerPortal);\n\n        return containerRef.instance;\n    }\n\n    /**\n     * Creates a custom injector to be used inside the sidepanel. This allows a component loaded inside\n     * of a sidepanel to close itself and, optionally, to return a value.\n     * @param config Config object that is used to construct the sidepanel.\n     * @param sidepanelRef Reference to the sidepanel.\n     * @param sidepanelContainer Sidepanel container element that wraps all of the contents.\n     * @returns The custom injector that can be used inside the sidepanel.\n     */\n    private createInjector<T>(\n        config: McSidepanelConfig,\n        sidepanelRef: McSidepanelRef<T>,\n        sidepanelContainer: McSidepanelContainerComponent): PortalInjector {\n\n        // The McSidepanelContainerComponent is injected in the portal as the McSidepanelContainerComponent and\n        // the sidepanel's content are created out of the same ViewContainerRef and as such, are siblings for injector\n        // purposes. To allow the hierarchy that is expected, the McSidepanelContainerComponent is explicitly\n        // added to the injection tokens.\n        const injectionTokens = new WeakMap<any>([\n            [McSidepanelContainerComponent, sidepanelContainer],\n            [MC_SIDEPANEL_DATA, config.data],\n            [McSidepanelRef, sidepanelRef]\n        ]);\n\n        return new PortalInjector(this.injector, injectionTokens);\n    }\n\n    /**\n     * Creates a new overlay and places it in the correct location.\n     * @param config The user-specified sidepanel config.\n     */\n    private createOverlay(config: McSidepanelConfig): OverlayRef {\n        const overlayConfig = new OverlayConfig({\n            hasBackdrop: config.hasBackdrop,\n            backdropClass: this.getBackdropClass(config),\n            maxWidth: '100%',\n            panelClass: config.overlayPanelClass,\n            scrollStrategy: this.overlay.scrollStrategies.block(),\n            positionStrategy: this.overlay.position().global()\n        });\n\n        return this.overlay.create(overlayConfig);\n    }\n\n    private closeSidepanels(sidepanels: McSidepanelRef[]) {\n        const reversedOpenedSidepanels = [...sidepanels.reverse()];\n\n        reversedOpenedSidepanels.forEach((sidepanelRef: McSidepanelRef) => {\n            sidepanelRef.close();\n        });\n    }\n\n    private getBackdropClass(config: McSidepanelConfig): string {\n        const hasOpenedSidepanelWithBackdrop =\n            this.openedSidepanels.some((sidepanelRef) => sidepanelRef.config.hasBackdrop!);\n\n        return config.requiredBackdrop || !hasOpenedSidepanelWithBackdrop ? 'cdk-overlay-dark-backdrop' :\n            'cdk-overlay-transparent-backdrop';\n    }\n\n    private getOpenedSidepanelsWithSamePosition(config: McSidepanelConfig): McSidepanelRef[] {\n        return this.openedSidepanels.filter((sidepanelRef) => sidepanelRef.config.position === config.position);\n    }\n\n    /**\n     * Removes a sidepanel from the array of open sidepanels.\n     * @param sidepanelRef Sidepanel to be removed.\n     */\n    private removeOpenSidepanel(sidepanelRef: McSidepanelRef) {\n        const index = this.openedSidepanels.indexOf(sidepanelRef);\n\n        if (index > -1) {\n            this.openedSidepanels.splice(index, 1);\n        }\n    }\n}\n","import { Component, Directive, ElementRef, Input, OnChanges, OnInit, Optional, SimpleChanges } from '@angular/core';\n\nimport { McSidepanelRef } from './sidepanel-ref';\nimport { McSidepanelService } from './sidepanel.service';\n\n\n/**\n * Button that will close the current sidepanel.\n */\n@Directive({\n    selector: 'button[mc-sidepanel-close], button[mcSidepanelClose]',\n    host: {\n        '(click)': 'sidepanelRef.close(sidepanelResult)',\n        class: 'mc-sidepanel-close',\n        type: 'button'\n    }\n})\nexport class McSidepanelClose implements OnInit, OnChanges {\n    @Input('mc-sidepanel-close') sidepanelResult: any;\n\n    @Input('mcSidepanelClose') mcSidepanelClose: any;\n\n    constructor(\n        @Optional() public sidepanelRef: McSidepanelRef,\n        private elementRef: ElementRef<HTMLElement>,\n        private sidepanelService: McSidepanelService\n    ) {}\n\n    ngOnInit() {\n        if (!this.sidepanelRef) {\n            // When this directive is included in a sidepanel via TemplateRef (rather than being\n            // in a Component), the SidepanelRef isn't available via injection because embedded\n            // views cannot be given a custom injector. Instead, we look up the SidepanelRef by\n            // ID.\n            // This must occur in `onInit`, as the ID binding for the sidepanel container won't\n            // be resolved at constructor time. We use setTimeout by same reason.\n            setTimeout(() => {\n                this.sidepanelRef = getClosestSidepanel(this.elementRef, this.sidepanelService.openedSidepanels)!;\n            });\n        }\n    }\n\n    ngOnChanges(changes: SimpleChanges) {\n        const proxiedChange = changes.mcSidepanelClose || changes.sidepanelResult;\n\n        if (proxiedChange) {\n            this.sidepanelResult = proxiedChange.currentValue;\n        }\n    }\n}\n\n/**\n * Header of a sidepanel.\n */\n@Component({\n    selector: 'mc-sidepanel-header',\n    template: `\n        <div class=\"mc-sidepanel-title\">\n            <ng-content></ng-content>\n        </div>\n        <button *ngIf=\"closeable\" mc-sidepanel-close>\n            <span class=\"mc-sidepanel-close-x\">\n                <i mc-icon=\"mc-close-L_16\" class=\"mc-icon mc-icon_light\" color=\"second\"></i>\n            </span>\n        </button>\n    `,\n    host: {\n        class: 'mc-sidepanel-header'\n    }\n})\nexport class McSidepanelHeader {\n    @Input() closeable: boolean;\n}\n\n/**\n * Scrollable content container of a sidepanel.\n */\n@Directive({\n    selector: 'mc-sidepanel-body, [mc-sidepanel-body], mcSidepanelBody',\n    host: {\n        class: 'mc-sidepanel-body'\n    }\n})\nexport class McSidepanelBody {}\n\n/**\n * Footer of a sidepanel.\n */\n@Directive({\n    selector: 'mc-sidepanel-footer, [mc-sidepanel-footer], mcSidepanelFooter',\n    host: {\n        class: 'mc-sidepanel-footer'\n    }\n})\nexport class McSidepanelFooter {}\n\n/**\n * Actions block of a sidepanel footer.\n */\n@Directive({\n    selector: 'mc-sidepanel-actions, [mc-sidepanel-actions], mcSidepanelActions',\n    host: {\n        class: 'mc-sidepanel-actions'\n    }\n})\nexport class McSidepanelActions {}\n\n/**\n * Finds the closest McSidepanelRef to an element by looking at the DOM.\n * @param element Element relative to which to look for a sidepanel.\n * @param openSidepanels References to the currently-open sidepanels.\n */\nfunction getClosestSidepanel(element: ElementRef<HTMLElement>, openSidepanels: McSidepanelRef[]) {\n    let parent: HTMLElement | null = element.nativeElement.parentElement;\n\n    while (parent && !parent.classList.contains('mc-sidepanel-container')) {\n        parent = parent.parentElement;\n    }\n\n    return parent ? openSidepanels.find((sidepanel) => sidepanel.id === parent!.id) : null;\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { OverlayModule } from '@ptsecurity/cdk/overlay';\nimport { PortalModule } from '@ptsecurity/cdk/portal';\nimport { McCommonModule } from '@ptsecurity/mosaic/core';\nimport { McIconModule } from '@ptsecurity/mosaic/icon';\n\nimport { McSidepanelContainerComponent } from './sidepanel-container.component';\nimport {\n    McSidepanelActions,\n    McSidepanelBody,\n    McSidepanelClose,\n    McSidepanelFooter,\n    McSidepanelHeader\n} from './sidepanel-directives';\nimport { McSidepanelService } from './sidepanel.service';\n\n\n@NgModule({\n    imports: [\n        CommonModule,\n        OverlayModule,\n        PortalModule,\n        McCommonModule,\n        McIconModule\n    ],\n    providers: [McSidepanelService],\n    declarations: [\n        McSidepanelContainerComponent,\n        McSidepanelClose,\n        McSidepanelHeader,\n        McSidepanelBody,\n        McSidepanelFooter,\n        McSidepanelActions\n    ],\n    entryComponents: [McSidepanelContainerComponent],\n    exports: [\n        McSidepanelContainerComponent,\n        McSidepanelClose,\n        McSidepanelHeader,\n        McSidepanelBody,\n        McSidepanelFooter,\n        McSidepanelActions\n    ]\n})\nexport class McSidepanelModule {}\n","import {\n    ChangeDetectionStrategy,\n    Component,\n    Directive,\n    ElementRef,\n    Input,\n    NgZone, OnDestroy,\n    OnInit,\n    Renderer2,\n    ViewEncapsulation\n} from '@angular/core';\n\nimport { coerceBooleanProperty, coerceCssPixelValue, coerceNumberProperty } from '@ptsecurity/cdk/coercion';\n\n\ninterface IArea {\n    area: McSplitterAreaDirective;\n    index: number;\n    order: number;\n    initialSize: number;\n}\n\ninterface IPoint {\n    x: number;\n    y: number;\n}\n\n\nconst enum AttributeProperty {\n    Disabled = 'disabled'\n}\n\nconst enum Cursor {\n    Default = 'default',\n    ResizeColumn = 'col-resize',\n    ResizeRow = 'row-resize'\n}\n\nconst enum StyleProperty {\n    Cursor = 'cursor',\n    Flex = 'flex',\n    FlexBasis = 'flex-basis',\n    FlexDirection = 'flex-direction',\n    Height = 'height',\n    MaxWidth = 'max-width',\n    MinHeight = 'min-height',\n    MinWidth = 'minWidth',\n    OffsetHeight = 'offsetHeight',\n    OffsetWidth = 'offsetWidth',\n    Order = 'order',\n    Width = 'width'\n}\n\nconst enum State {\n    Disabled = 'disabled',\n    Horizontal = 'horizontal',\n    Vertical = 'vertical'\n}\n\nexport const enum Direction {\n    Horizontal = 'horizontal',\n    Vertical = 'vertical'\n}\n\n@Component({\n    selector: 'mc-splitter',\n    preserveWhitespaces: false,\n    styleUrls: ['splitter.css'],\n    templateUrl: './splitter.component.html',\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class McSplitterComponent implements OnInit {\n    readonly areas: IArea[] = [];\n\n    private _direction: Direction;\n    private _disabled: boolean = false;\n    private _gutterSize: number = 6;\n\n    private isDragging: boolean = false;\n\n    private readonly areaPositionDivider: number = 2;\n    private readonly listeners: (() => void)[] = [];\n\n    @Input()\n    set direction(direction: Direction) {\n        this._direction = direction;\n    }\n\n    get direction(): Direction {\n        return this._direction;\n    }\n\n    @Input()\n    set disabled(disabled: boolean) {\n        this._disabled = coerceBooleanProperty(disabled);\n    }\n\n    get disabled(): boolean {\n        return this._disabled;\n    }\n\n    @Input()\n    set gutterSize(gutterSize: number) {\n        const size = coerceNumberProperty(gutterSize);\n        this._gutterSize = size > 0 ? size : this.gutterSize;\n    }\n\n    get gutterSize(): number {\n        return this._gutterSize;\n    }\n\n    constructor(private elementRef: ElementRef,\n                private ngZone: NgZone,\n                private renderer: Renderer2) {}\n\n    addArea(area: McSplitterAreaDirective): void {\n        const index: number = this.areas.length;\n        const order: number = index * this.areaPositionDivider;\n        const size: number = area.getSize();\n\n        area.setOrder(order);\n\n        this.areas.push({\n            area,\n            index,\n            order,\n            initialSize: size\n        });\n    }\n\n    ngOnInit(): void {\n        if (!this.direction) {\n            this.direction = Direction.Horizontal;\n        }\n\n        this.setStyle(StyleProperty.FlexDirection, this.isVertical() ? 'column' : 'row');\n    }\n\n    onMouseDown(event: MouseEvent, leftAreaIndex: number, rightAreaIndex: number) {\n        if (this.disabled) {\n            return;\n        }\n\n        const leftArea = this.areas[leftAreaIndex];\n        const rightArea = this.areas[rightAreaIndex];\n\n        const startPoint: IPoint = {\n            x: event.screenX,\n            y: event.screenY\n        };\n\n        leftArea.initialSize = leftArea.area.getSize();\n        rightArea.initialSize = rightArea.area.getSize();\n\n        this.areas.forEach((item) => {\n            const size = item.area.getSize();\n            item.area.disableFlex();\n            item.area.setSize(size);\n        });\n\n        this.ngZone.runOutsideAngular(() => {\n            this.listeners.push(\n                this.renderer.listen(\n                    'document',\n                    'mouseup',\n                    () => this.onMouseUp()\n                )\n            );\n        });\n\n        this.ngZone.runOutsideAngular(() => {\n            this.listeners.push(\n                this.renderer.listen(\n                    'document',\n                    'mousemove',\n                    (e: MouseEvent) => this.onMouseMove(e, startPoint, leftArea, rightArea)\n                )\n            );\n        });\n\n        this.isDragging = true;\n    }\n\n    removeArea(area: McSplitterAreaDirective): void {\n        let indexToRemove: number = -1;\n\n        this.areas.some((item, index) => {\n            if (item.area === area) {\n                indexToRemove = index;\n\n                return true;\n            }\n\n            return false;\n        });\n\n        if (indexToRemove === -1) {\n            return;\n        }\n\n        this.areas.splice(indexToRemove, 1);\n    }\n\n    private isVertical(): boolean {\n        return this.direction === Direction.Vertical;\n    }\n\n    private onMouseMove(event: MouseEvent, startPoint: IPoint, leftArea: IArea, rightArea: IArea) {\n        if (!this.isDragging || this.disabled) {\n            return;\n        }\n\n        const endPoint: IPoint = {\n            x: event.screenX,\n            y: event.screenY\n        };\n\n        const offset = this.isVertical()\n            ? startPoint.y - endPoint.y\n            : startPoint.x - endPoint.x;\n\n        const newLeftAreaSize = leftArea.initialSize - offset;\n        const newRightAreaSize = rightArea.initialSize + offset;\n\n        const minLeftAreaSize = leftArea.area.getMinSize();\n        const minRightAreaSize = rightArea.area.getMinSize();\n\n        if (newLeftAreaSize <= minLeftAreaSize || newRightAreaSize <= minRightAreaSize) {\n            const rightAreaOffset = leftArea.initialSize - minLeftAreaSize;\n\n            leftArea.area.setSize(minLeftAreaSize);\n            rightArea.area.setSize(rightArea.initialSize + rightAreaOffset);\n        } else if (newLeftAreaSize <= 0) {\n            leftArea.area.setSize(0);\n            rightArea.area.setSize(rightArea.initialSize + leftArea.initialSize);\n        } else if (newRightAreaSize <= 0) {\n            leftArea.area.setSize(rightArea.initialSize + leftArea.initialSize);\n            rightArea.area.setSize(0);\n        } else {\n            leftArea.area.setSize(newLeftAreaSize);\n            rightArea.area.setSize(newRightAreaSize);\n        }\n    }\n\n    private onMouseUp() {\n        while (this.listeners.length > 0) {\n            const unsubscribe = this.listeners.pop();\n\n            if (unsubscribe) {\n                unsubscribe();\n            }\n        }\n\n        this.isDragging = false;\n    }\n\n    private setStyle(property: StyleProperty, value: string | number) {\n        this.renderer.setStyle(this.elementRef.nativeElement, property, value);\n    }\n}\n\n@Directive({\n    selector: 'mc-gutter'\n})\nexport class McGutterDirective implements OnInit {\n    private _direction: Direction = Direction.Vertical;\n    private _disabled: boolean = false;\n    private _order: number = 0;\n    private _size: number = 6;\n\n    @Input()\n    set direction(direction: Direction) {\n        this._direction = direction;\n    }\n\n    get direction(): Direction {\n        return this._direction;\n    }\n\n    @Input()\n    set disabled(disabled: boolean) {\n        this._disabled = coerceBooleanProperty(disabled);\n    }\n\n    get disabled(): boolean {\n        return this._disabled;\n    }\n\n    @Input()\n    set order(order: number) {\n        this._order = coerceNumberProperty(order);\n    }\n\n    get order(): number {\n        return this._order;\n    }\n\n    @Input()\n    set size(size: number) {\n        this._size = coerceNumberProperty(size);\n    }\n\n    get size(): number {\n        return this._size;\n    }\n\n    constructor(private renderer: Renderer2,\n                private elementRef: ElementRef) {\n    }\n\n    ngOnInit(): void {\n        this.setStyle(StyleProperty.Cursor, this.getCursor(this.getState()));\n        this.setStyle(StyleProperty.FlexBasis, coerceCssPixelValue(this.size));\n        this.setStyle(this.isVertical() ? StyleProperty.Height : StyleProperty.Width, coerceCssPixelValue(this.size));\n        this.setStyle(StyleProperty.Order, this.order);\n\n        if (!this.isVertical()) {\n            this.setStyle(StyleProperty.Height, '100%');\n        }\n\n        if (this.disabled) {\n            this.setAttr(AttributeProperty.Disabled, 'true');\n        }\n\n        // fix IE issue with gutter icon. flex-direction is requied for flex alignment options\n        this.setStyle(StyleProperty.FlexDirection, this.isVertical() ? 'row' : 'column');\n    }\n\n    private isVertical(): boolean {\n        return this.direction === Direction.Vertical;\n    }\n\n    private getCursor(state: State): string {\n        switch (state) {\n            case State.Disabled:\n                return Cursor.Default;\n            case State.Vertical:\n                return  Cursor.ResizeRow;\n            case State.Horizontal:\n                return Cursor.ResizeColumn;\n            default:\n                throw Error(`Unknown gutter state for cursor: ${state}`);\n        }\n    }\n\n    private getState(): State {\n        return this.disabled\n            ? State.Disabled\n            : this.direction === Direction.Vertical\n                ? State.Vertical\n                : State.Horizontal;\n    }\n\n    private setStyle(property: StyleProperty, value: string | number) {\n        this.renderer.setStyle(this.elementRef.nativeElement, property, value);\n    }\n\n    private setAttr(attribute: AttributeProperty, value: string) {\n        this.renderer.setAttribute(this.elementRef.nativeElement, attribute, value);\n    }\n}\n\n@Directive({\n    selector: 'mc-splitter-area'\n})\nexport class McSplitterAreaDirective implements OnInit, OnDestroy {\n    constructor(private elementRef: ElementRef,\n                private renderer: Renderer2,\n                private splitter: McSplitterComponent) {}\n\n    disableFlex(): void {\n        this.renderer.removeStyle(this.elementRef.nativeElement, 'flex');\n    }\n\n    ngOnInit(): void {\n        this.splitter.addArea(this);\n\n        this.removeStyle(StyleProperty.MaxWidth);\n        this.setStyle(StyleProperty.Flex, '1');\n\n        if (this.splitter.direction === Direction.Vertical) {\n            this.setStyle(StyleProperty.Width, '100%');\n            this.removeStyle(StyleProperty.Height);\n        } else {\n            this.setStyle(StyleProperty.Height, '100%');\n            this.removeStyle(StyleProperty.Width);\n        }\n    }\n\n    ngOnDestroy(): void {\n        this.splitter.removeArea(this);\n    }\n\n    setOrder(order: number): void {\n        this.setStyle(StyleProperty.Order, order);\n    }\n\n    setSize(size: number): void {\n        const sz = coerceNumberProperty(size);\n        this.setStyle(this.getSizeProperty(), coerceCssPixelValue(sz));\n    }\n\n    getSize(): number {\n        return this.elementRef.nativeElement[this.getOffsetSizeProperty()];\n    }\n\n    getMinSize(): number {\n        const styles = getComputedStyle(this.elementRef.nativeElement);\n\n        return parseFloat(styles[this.getMinSizeProperty()]);\n    }\n\n    private isVertical(): boolean {\n        return this.splitter.direction === Direction.Vertical;\n    }\n\n    private getMinSizeProperty(): StyleProperty {\n        return this.isVertical()\n            ? StyleProperty.MinHeight\n            : StyleProperty.MinWidth;\n    }\n\n    private getOffsetSizeProperty(): StyleProperty {\n        return this.isVertical()\n            ? StyleProperty.OffsetHeight\n            : StyleProperty.OffsetWidth;\n    }\n\n    private getSizeProperty(): StyleProperty {\n        return this.isVertical()\n            ? StyleProperty.Height\n            : StyleProperty.Width;\n    }\n\n    private setStyle(style: StyleProperty, value: string | number) {\n        this.renderer.setStyle(this.elementRef.nativeElement, style, value);\n    }\n\n    private removeStyle(style: StyleProperty) {\n        this.renderer.removeStyle(this.elementRef.nativeElement, style);\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { McIconModule } from '@ptsecurity/mosaic/icon';\n\nimport { McGutterDirective, McSplitterAreaDirective, McSplitterComponent } from './splitter.component';\n\n\n@NgModule({\n    imports: [\n        CommonModule,\n        McIconModule\n    ],\n    exports: [\n        McGutterDirective,\n        McSplitterAreaDirective,\n        McSplitterComponent\n    ],\n    declarations: [\n        McGutterDirective,\n        McSplitterAreaDirective,\n        McSplitterComponent\n    ]\n})\nexport class McSplitterModule {\n}\n","import { animate, state, style, transition, trigger } from '@angular/animations';\nimport {\n    Attribute,\n    ChangeDetectionStrategy, ChangeDetectorRef,\n    Component,\n    ElementRef, EventEmitter, forwardRef,\n    Input, Output, ViewChild,\n    ViewEncapsulation\n} from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { FocusMonitor } from '@ptsecurity/cdk/a11y';\nimport {\n    ThemePalette,\n    CanColor, CanColorCtor,\n    CanDisable, CanDisableCtor,\n    HasTabIndex, HasTabIndexCtor,\n    mixinColor,\n    mixinDisabled,\n    mixinTabIndex\n} from '@ptsecurity/mosaic/core';\n\n\nlet nextUniqueId = 0;\n\ntype ToggleLabelPositionType = 'left' | 'right';\n\nexport class McToggleBase {\n    constructor(public _elementRef: ElementRef) {}\n}\n\nexport const _McToggleMixinBase:\n    HasTabIndexCtor &\n    CanDisableCtor &\n    CanColorCtor &\n    typeof McToggleBase = mixinTabIndex(mixinColor(mixinDisabled(McToggleBase), ThemePalette.Primary));\n\nexport class McToggleChange {\n    source: McToggleComponent;\n    checked: boolean;\n}\n\n@Component({\n    selector: 'mc-toggle',\n    exportAs: 'mcToggle',\n    templateUrl: './toggle.component.html',\n    styleUrls: ['./toggle.css'],\n    providers: [\n        {provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => McToggleComponent), multi: true}\n    ],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n    inputs: ['disabled', 'color', 'tabIndex'],\n    host: {\n        class: 'mc-toggle',\n        '[id]': 'id',\n        '[attr.id]': 'id',\n        '[class.mc-disabled]': 'disabled',\n        '[class.mc-toggle_off]': '!checked'\n    },\n    animations: [\n        trigger('switch', [\n            state('true' , style({ left: '50%' })),\n            state('false', style({ left: '1px' })),\n            transition('true <=> false', animate('150ms'))\n        ])\n    ]\n})\nexport class McToggleComponent extends _McToggleMixinBase\n    implements ControlValueAccessor, CanColor, CanDisable, HasTabIndex {\n\n    @ViewChild('input') _inputElement: ElementRef;\n\n    @Input() labelPosition: ToggleLabelPositionType = 'right';\n\n    @Input('aria-label') ariaLabel: string = '';\n    @Input('aria-labelledby') ariaLabelledby: string | null = null;\n\n    private _uniqueId: string = `mc-toggle-${++nextUniqueId}`;\n\n    // tslint:disable:member-ordering\n    @Input() id: string = this._uniqueId;\n\n    get inputId(): string {\n        return `${this.id || this._uniqueId}-input`;\n    }\n\n    @Input() name: string | null = null;\n\n    @Input() value: string;\n\n    private _disabled: boolean = false;\n\n    @Input()\n    get disabled() {\n        return this._disabled;\n    }\n\n    set disabled(value: any) {\n        if (value !== this._disabled) {\n            this._disabled = value;\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n\n    private _checked: boolean = false;\n\n    get checked() {\n        return this._checked;\n    }\n\n    @Input()\n    set checked(value: boolean) {\n        if (value !== this._checked) {\n            this._checked = value;\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n\n    @Output() readonly change: EventEmitter<McToggleChange> =\n        new EventEmitter<McToggleChange>();\n\n    constructor(public _elementRef: ElementRef,\n                private _focusMonitor: FocusMonitor,\n                private _changeDetectorRef: ChangeDetectorRef,\n                @Attribute('tabindex') tabIndex: string\n    ) {\n        super(_elementRef);\n\n        this.tabIndex = parseInt(tabIndex) || 0;\n\n        this._focusMonitor.monitor(this._elementRef.nativeElement, true);\n    }\n\n    ngOnDestroy() {\n        this._focusMonitor.stopMonitoring(this._elementRef.nativeElement);\n    }\n\n    focus(): void {\n        this._focusMonitor.focusVia(this._inputElement.nativeElement, 'keyboard');\n    }\n\n    _getAriaChecked(): boolean {\n        return this.checked;\n    }\n\n    _onInteractionEvent(event: Event) {\n        event.stopPropagation();\n    }\n\n    _onLabelTextChange() {\n        this._changeDetectorRef.markForCheck();\n    }\n\n    _onInputClick(event: MouseEvent) {\n        event.stopPropagation();\n        this._updateModelValue();\n        this._emitChangeEvent();\n    }\n\n    writeValue(value: any) {\n        this.checked = !!value;\n    }\n\n    registerOnChange(fn: any) {\n        this._onChangeCallback = fn;\n    }\n\n    registerOnTouched(fn: any) {\n        this._onTouchedCallback = fn;\n    }\n\n    setDisabledState(isDisabled: boolean) {\n        this.disabled = isDisabled;\n    }\n\n    // tslint:disable-next-line:no-empty\n    private _onTouchedCallback = () => {};\n\n    // tslint:disable-next-line:no-empty\n    private _onChangeCallback = (_: any) => {};\n\n    private _updateModelValue() {\n        this._checked = !this.checked;\n        this._onChangeCallback(this.checked);\n        this._onTouchedCallback();\n    }\n\n    private _emitChangeEvent() {\n        const event = new McToggleChange();\n        event.source = this;\n        event.checked = this.checked;\n\n        this._onChangeCallback(this.checked);\n        this.change.emit(event);\n    }\n}\n","import {\n    Directive, DoCheck, ElementRef, Inject,\n    Input, OnChanges, OnDestroy, Optional,\n    Self, InjectionToken, NgZone, OnInit\n} from '@angular/core';\nimport { FormGroupDirective, NgControl, NgForm } from '@angular/forms';\nimport { coerceBooleanProperty } from '@ptsecurity/cdk/coercion';\nimport {\n    CanUpdateErrorState,\n    CanUpdateErrorStateCtor,\n    ErrorStateMatcher,\n    mixinErrorState\n} from '@ptsecurity/mosaic/core';\nimport { McFormFieldControl } from '@ptsecurity/mosaic/form-field';\nimport { fromEvent, Subscription, Subject } from 'rxjs';\nimport { distinctUntilChanged, map } from 'rxjs/operators';\n\n\nexport const MC_TEXTAREA_VALUE_ACCESSOR =\n    new InjectionToken<{ value: any }>('MC_TEXTAREA_VALUE_ACCESSOR');\n\nlet nextUniqueId = 0;\n\nconst ROW_SEPARATOR = '\\n';\n\nexport class McTextareaBase {\n    constructor(public _defaultErrorStateMatcher: ErrorStateMatcher,\n                public _parentForm: NgForm,\n                public _parentFormGroup: FormGroupDirective,\n                public ngControl: NgControl) {\n    }\n}\n\n// tslint:disable-next-line:naming-convention\nexport const McTextareaMixinBase: CanUpdateErrorStateCtor & typeof McTextareaBase = mixinErrorState(McTextareaBase);\n\n@Directive({\n    selector: 'textarea[mcTextarea]',\n    exportAs: 'mcTextarea',\n    host: {\n        class: 'mc-textarea',\n        '[class.mc-textarea-resizable]': '!canGrow',\n        '[attr.id]': 'id',\n        '[attr.placeholder]': 'placeholder',\n        '[attr.aria-invalid]': 'errorState',\n        '[disabled]': 'disabled',\n        '[required]': 'required',\n        '(blur)': 'focusChanged(false)',\n        '(focus)': 'focusChanged(true)'\n    },\n    providers: [{ provide: McFormFieldControl, useExisting: McTextarea }]\n})\nexport class McTextarea extends McTextareaMixinBase implements McFormFieldControl<any>, OnInit, OnChanges,\n    OnDestroy, DoCheck, CanUpdateErrorState {\n\n    @Input() canGrow: boolean = true;\n\n    /** An object used to control when error messages are shown. */\n    @Input() errorStateMatcher: ErrorStateMatcher;\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    focused: boolean = false;\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    readonly stateChanges: Subject<void> = new Subject<void>();\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    controlType: string = 'mc-textarea';\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    @Input()\n    get disabled(): boolean {\n        if (this.ngControl && this.ngControl.disabled !== null) {\n            return this.ngControl.disabled;\n        }\n\n        return this._disabled;\n    }\n\n    set disabled(value: boolean) {\n        this._disabled = coerceBooleanProperty(value);\n\n        if (this.focused) {\n            this.focused = false;\n            this.stateChanges.next();\n        }\n    }\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    @Input()\n    get id(): string {\n        return this._id;\n    }\n\n    set id(value: string) {\n        this._id = value || this.uid;\n    }\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    @Input() placeholder: string;\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    @Input()\n    get required(): boolean {\n        return this._required;\n    }\n\n    set required(value: boolean) {\n        this._required = coerceBooleanProperty(value);\n    }\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    @Input()\n    get value(): string {\n        return this.valueAccessor.value;\n    }\n\n    set value(value: string) {\n        if (value !== this.value) {\n            this.valueAccessor.value = value;\n            this.stateChanges.next();\n        }\n    }\n\n    protected uid = `mc-textsrea-${nextUniqueId++}`;\n    protected previousNativeValue: any;\n    protected _disabled = false;\n    protected _id: string;\n    protected _required = false;\n\n    private valueAccessor: { value: any };\n    private growSubscription: Subscription;\n\n    private lineHeight: number = 0;\n    private freeRowsHeight: number = 0;\n    private minHeight: number = 0;\n\n    constructor(protected elementRef: ElementRef,\n                @Optional() @Self() public ngControl: NgControl,\n                @Optional() _parentForm: NgForm,\n                @Optional() _parentFormGroup: FormGroupDirective,\n                _defaultErrorStateMatcher: ErrorStateMatcher,\n                @Optional() @Self() @Inject(MC_TEXTAREA_VALUE_ACCESSOR) inputValueAccessor: any,\n                private ngZone: NgZone) {\n        super(_defaultErrorStateMatcher, _parentForm, _parentFormGroup, ngControl);\n        // If no input value accessor was explicitly specified, use the element as the textarea value\n        // accessor.\n        this.valueAccessor = inputValueAccessor || this.elementRef.nativeElement;\n\n        this.previousNativeValue = this.value;\n\n        // Force setter to be called in case id was not specified.\n        this.id = this.id;\n\n        const growObserver = fromEvent(elementRef.nativeElement, 'input')\n            /*.pipe(\n                map((event: any) => this.getGrowHeight()),\n                // map((event: any) => event.target.scrollHeight),\n                distinctUntilChanged()\n            )*/;\n        this.growSubscription = growObserver.subscribe(this.grow.bind(this));\n    }\n\n    ngOnInit() {\n        setTimeout(() => this.grow(), 0);\n        this.lineHeight = parseInt(getComputedStyle(this.elementRef.nativeElement).lineHeight!, 10);\n\n        const paddingTop = parseInt(getComputedStyle(this.elementRef.nativeElement).paddingTop!, 10);\n        const paddingBottom = parseInt(getComputedStyle(this.elementRef.nativeElement).paddingBottom!, 10);\n\n        // tslint:disable-next-line:no-magic-numbers\n        this.minHeight = this.lineHeight * 2 + paddingTop + paddingBottom;\n        this.freeRowsHeight = this.lineHeight;\n    }\n\n    ngOnChanges() {\n        this.stateChanges.next();\n    }\n\n    ngOnDestroy() {\n        this.stateChanges.complete();\n        this.growSubscription.unsubscribe();\n    }\n\n    ngDoCheck() {\n        if (this.ngControl) {\n            // We need to re-evaluate this on every change detection cycle, because there are some\n            // error triggers that we can't subscribe to (e.g. parent form submissions). This means\n            // that whatever logic is in here has to be super lean or we risk destroying the performance.\n            this.updateErrorState();\n        }\n\n        // We need to dirty-check the native element's value, because there are some cases where\n        // we won't be notified when it changes (e.g. the consumer isn't using forms or they're\n        // updating the value using `emitEvent: false`).\n        this.dirtyCheckNativeValue();\n    }\n\n    /** Grow textarea height to avoid vertical scroll  */\n    grow() {\n        if (!this.canGrow) {\n            return;\n        }\n\n        this.ngZone.runOutsideAngular(() => {\n            const textarea = this.elementRef.nativeElement;\n\n            const outerHeight = parseInt(window.getComputedStyle(textarea).height!, 10);\n            const diff = outerHeight - textarea.clientHeight;\n\n            textarea.style.height = 0; // this line is important to height recalculation\n\n            const height = Math.max(this.minHeight, textarea.scrollHeight + diff + this.freeRowsHeight);\n            textarea.style.height = `${height}px`;\n        });\n    }\n\n    /** Focuses the textarea. */\n    focus(): void {\n        this.elementRef.nativeElement.focus();\n    }\n\n    /** Callback for the cases where the focused state of the textarea changes. */\n    focusChanged(isFocused: boolean) {\n        if (isFocused !== this.focused) {\n            this.focused = isFocused;\n            this.stateChanges.next();\n        }\n    }\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    get empty(): boolean {\n        return !this.elementRef.nativeElement.value && !this.isBadInput();\n    }\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    onContainerClick() {\n        this.focus();\n    }\n\n    /** Does some manual dirty checking on the native textarea `value` property. */\n    protected dirtyCheckNativeValue() {\n        const newValue = this.value;\n\n        if (this.previousNativeValue !== newValue) {\n            this.previousNativeValue = newValue;\n            this.stateChanges.next();\n        }\n    }\n\n    /** Checks whether the textarea is invalid based on the native validation. */\n    protected isBadInput(): boolean {\n        // The `validity` property won't be present on platform-server.\n        const validity = (this.elementRef.nativeElement as HTMLTextAreaElement).validity;\n\n        return validity && validity.badInput;\n    }\n\n    private getGrowHeight(): number {\n        const textarea = this.elementRef.nativeElement;\n        const outerHeight = parseInt(window.getComputedStyle(textarea).height!.toString(), 10);\n        const diff = outerHeight - textarea.clientHeight;\n\n        return Math.max(this.minHeight, textarea.scrollHeight + diff);\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { A11yModule } from '@ptsecurity/cdk/a11y';\nimport { McCommonModule } from '@ptsecurity/mosaic/core';\n\nimport { McTextarea } from './textarea.component';\n\n\n@NgModule({\n    imports: [CommonModule, A11yModule, McCommonModule, FormsModule],\n    exports: [McTextarea],\n    declarations: [McTextarea]\n})\nexport class McTextareaModule {\n}\n","import {\n    Directive,\n    DoCheck,\n    ElementRef,\n    forwardRef,\n    Inject,\n    Input,\n    OnChanges,\n    OnDestroy,\n    Optional,\n    Renderer2,\n    Self\n} from '@angular/core';\nimport {\n    ControlValueAccessor,\n    FormControl,\n    FormGroupDirective,\n    NG_VALIDATORS,\n    NgControl,\n    NgForm,\n    ValidationErrors,\n    ValidatorFn,\n    Validators\n} from '@angular/forms';\nimport { coerceBooleanProperty } from '@ptsecurity/cdk/coercion';\nimport {\n    CanUpdateErrorState,\n    CanUpdateErrorStateCtor,\n    ErrorStateMatcher,\n    mixinErrorState\n} from '@ptsecurity/mosaic/core';\nimport { McFormFieldControl } from '@ptsecurity/mosaic/form-field';\nimport { MC_INPUT_VALUE_ACCESSOR } from '@ptsecurity/mosaic/input';\nimport {\n    noop,\n    Subject\n} from 'rxjs';\n\nimport {\n    ARROW_DOWN_KEYCODE,\n    ARROW_LEFT_KEYCODE,\n    ARROW_RIGHT_KEYCODE,\n    ARROW_UP_KEYCODE,\n    DEFAULT_TIME_FORMAT,\n    HOURS_PER_DAY,\n    HOURS_MINUTES_REGEXP,\n    HOURS_MINUTES_SECONDS_REGEXP,\n    HOURS_ONLY_REGEXP,\n    MINUTES_PER_HOUR,\n    SECONDS_PER_MINUTE,\n    TIMEFORMAT_PLACEHOLDERS,\n    TimeFormats,\n    TimeParts\n} from './timepicker.constants';\n\n\nlet uniqueComponentIdSuffix: number = 0;\n\nconst formValidators: WeakMap<FormControl, ValidatorFn | null> = new WeakMap();\nconst formValidatorOnChangeRegistrators: WeakMap<FormControl, () => void> = new WeakMap();\nconst validatorOnChange = (c: FormControl) => {\n    const validatorOnChangeHandler = formValidatorOnChangeRegistrators.get(c);\n\n    if (validatorOnChangeHandler !== undefined) { validatorOnChangeHandler(); }\n};\n\nexport class McTimepickerBase {\n    constructor(\n        // tslint:disable-next-line naming-convention\n        public _defaultErrorStateMatcher: ErrorStateMatcher,\n        // tslint:disable-next-line naming-convention\n        public _parentForm: NgForm,\n        // tslint:disable-next-line naming-convention\n        public _parentFormGroup: FormGroupDirective,\n        public ngControl: NgControl) { }\n}\n\n// tslint:disable-next-line naming-convention\nexport const McTimepickerMixinBase:\n    CanUpdateErrorStateCtor &\n    typeof McTimepickerBase = mixinErrorState(McTimepickerBase);\n\n@Directive({\n    selector: 'input[mcTimepicker]',\n    exportAs: 'mcTimepickerInput',\n    host: {\n        class: 'mc-timepicker mc-input',\n        // Native input properties that are overwritten by Angular inputs need to be synced with\n        // the native input element. Otherwise property bindings for those don't work.\n        '[attr.id]': 'id',\n        '[attr.placeholder]': 'placeholder',\n        '[disabled]': 'disabled',\n        '[required]': 'required',\n        '[attr.time-format]': 'timeFormat',\n        '[attr.min-time]': 'minTime',\n        '[attr.max-time]': 'maxTime',\n        '[attr.value]': 'value',\n        '[attr.aria-invalid]': 'errorState',\n        '(blur)': 'onBlur()',\n        '(focus)': 'focusChanged(true)',\n        '(input)': 'onInput()',\n        '(paste)': 'onPaste($event)',\n        '(keydown)': 'onKeyDown($event)'\n    },\n    providers: [\n        {\n            provide: NG_VALIDATORS,\n            useValue: {\n                validate(c: FormControl) {\n                    // TODO This is `workaround` to bind singleton-like Validator implementation to\n                    // context of each validated component. This MUST be realized in proper way!\n                    if (this.__validatorOnChangeHandler !== undefined) {\n                        formValidatorOnChangeRegistrators.set(c, this.__validatorOnChangeHandler);\n                        this.__validatorOnChangeHandler = undefined;\n                    }\n                    const validator = formValidators.get(c);\n\n                    return validator ? validator(c) : null;\n                },\n                registerOnValidatorChange(fn: () => void): void {\n                    this.__validatorOnChangeHandler = fn;\n                }\n            },\n            multi: true\n        },\n        {\n            provide: McFormFieldControl,\n            useExisting: forwardRef(() => McTimepicker)\n        }\n    ]\n\n})\nexport class McTimepicker extends McTimepickerMixinBase\n    implements McFormFieldControl<any>,\n        OnChanges,\n        OnDestroy,\n        DoCheck,\n        CanUpdateErrorState,\n        ControlValueAccessor {\n\n    /** An object used to control when error messages are shown. */\n    @Input() errorStateMatcher: ErrorStateMatcher;\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    focused: boolean = false;\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    readonly stateChanges: Subject<void> = new Subject<void>();\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    controlType: string = 'mc-timepicker';\n\n    @Input()\n    get disabled(): boolean {\n        if (this.ngControl && this.ngControl.disabled !== null) { return this.ngControl.disabled; }\n\n        return this._disabled;\n    }\n\n    set disabled(value: boolean) {\n        this._disabled = coerceBooleanProperty(value);\n\n        // Browsers may not fire the blur event if the input is disabled too quickly.\n        // Reset from here to ensure that the element doesn't become stuck.\n        if (this.focused) {\n            this.focused = false;\n        }\n\n        this.stateChanges.next();\n    }\n\n    @Input()\n    get id(): string { return this._id; }\n\n    set id(value: string) { this._id = value || this.uid; }\n\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    @Input() placeholder: string;\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    @Input()\n    get required(): boolean { return this._required; }\n\n    set required(value: boolean) { this._required = coerceBooleanProperty(value); }\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    @Input()\n    get value(): string { return this.inputValueAccessor.value; }\n\n    set value(value: string) {\n        if (value !== this.value) {\n            this.inputValueAccessor.value = value;\n            this.applyInputChanges();\n        }\n    }\n\n    @Input('time-format')\n    get timeFormat(): TimeFormats { return this._timeFormat; }\n\n    set timeFormat(formatValue: TimeFormats) {\n        this._timeFormat = Object\n            .keys(TimeFormats)\n            .map((timeFormatKey) => TimeFormats[timeFormatKey])\n            .indexOf(formatValue) > -1 ? formatValue : DEFAULT_TIME_FORMAT;\n\n        validatorOnChange(<FormControl> this.ngControl.control);\n        this.placeholder = TIMEFORMAT_PLACEHOLDERS[this._timeFormat];\n    }\n\n    @Input('min-time')\n    get minTime(): string | null { return this._minTime; }\n\n    set minTime(minValue: string | null) {\n        this._minTime = minValue;\n        this.minDateTime = minValue !== null ? this.getDateFromTimeString(minValue) : undefined;\n        validatorOnChange(<FormControl> this.ngControl.control);\n    }\n\n    @Input('max-time')\n    get maxTime(): string | null { return this._maxTime; }\n\n    set maxTime(maxValue: string | null) {\n        this._maxTime = maxValue;\n        this.maxDateTime = maxValue !== null ? this.getDateFromTimeString(maxValue) : undefined;\n        validatorOnChange(<FormControl> this.ngControl.control);\n    }\n\n    private _id: string;\n    private readonly uid = `mc-timepicker-${uniqueComponentIdSuffix++}`;\n    private _disabled: boolean;\n    private _required: boolean;\n    private previousNativeValue: any;\n    private readonly inputValueAccessor: { value: any };\n    private onChange: (value: any) => void;\n    private onTouched: () => void;\n    private _timeFormat: TimeFormats;\n    private _minTime: string | null = null;\n    private minDateTime: Date | undefined;\n    private _maxTime: string | null = null;\n    private maxDateTime: Date | undefined;\n    private currentDateTimeInput: Date | undefined;\n\n    constructor(private readonly elementRef: ElementRef,\n                @Optional() @Self() public ngControl: NgControl,\n                // tslint:disable-next-line naming-convention\n                @Optional() _parentForm: NgForm,\n                // tslint:disable-next-line naming-convention\n                @Optional() _parentFormGroup: FormGroupDirective,\n                // tslint:disable-next-line naming-convention\n                _defaultErrorStateMatcher: ErrorStateMatcher,\n                @Optional() @Self() @Inject(MC_INPUT_VALUE_ACCESSOR) inputValueAccessor: any,\n                private readonly renderer: Renderer2) {\n        super(_defaultErrorStateMatcher, _parentForm, _parentFormGroup, ngControl);\n\n        // If no input value accessor was explicitly specified, use the element as the input value\n        // accessor.\n        this.inputValueAccessor = inputValueAccessor || this.elementRef.nativeElement;\n\n        this.previousNativeValue = this.value;\n        this.onChange = noop;\n\n        // Force setter to be called in case id was not specified.\n        this.id = this.id;\n\n        this.placeholder = TIMEFORMAT_PLACEHOLDERS[DEFAULT_TIME_FORMAT];\n\n        // Instead of NG_VALUE_ACCESSOR (https://github.com/angular/material2/issues/8158#issuecomment-344618103)\n        if (this.ngControl) { this.ngControl.valueAccessor = this; }\n\n        // Substitute initial empty validator with validator linked to directive object instance (workaround)\n\n        formValidators.set(\n            <FormControl> this.ngControl.control,\n            Validators.compose([\n                () => this.parseValidator(),\n                () => this.minTimeValidator(),\n                () => this.maxTimeValidator()\n            ])\n        );\n    }\n\n    ngOnChanges(): void {\n        this.stateChanges.next();\n    }\n\n    ngOnDestroy(): void {\n        this.stateChanges.complete();\n    }\n\n    ngDoCheck(): void {\n        if (this.ngControl) {\n            // We need to re-evaluate this on every change detection cycle, because there are some\n            // error triggers that we can't subscribe to (e.g. parent form submissions). This means\n            // that whatever logic is in here has to be super lean or we risk destroying the performance.\n            this.updateErrorState();\n        }\n\n        // We need to dirty-check the native element's value, because there are some cases where\n        // we won't be notified when it changes (e.g. the consumer isn't using forms or they're\n        // updating the value using `emitEvent: false`).\n        this.dirtyCheckNativeValue();\n    }\n\n    focus(): void {\n        this.elementRef.nativeElement.focus();\n    }\n\n    focusChanged(isFocused: boolean): void {\n        if (isFocused !== this.focused) {\n            this.focused = isFocused;\n            this.onTouched();\n            this.stateChanges.next();\n        }\n    }\n\n    onBlur() {\n        this.applyInputChanges();\n        this.focusChanged(false);\n    }\n\n    onPaste($event) {\n        $event.preventDefault();\n        const clipboardUserInput: string = $event.clipboardData.getData('text');\n\n        if (this.getDateFromTimeString(clipboardUserInput) === undefined) { return; }\n\n        this.elementRef.nativeElement.value = clipboardUserInput;\n        this.onInput();\n    }\n\n    onInput() {\n        const initialCursorStart: number = this.elementRef.nativeElement.selectionStart;\n        const initialCursorEnd: number = this.elementRef.nativeElement.selectionEnd;\n        let isAutocompleteTriggered: boolean = false;\n\n        const {\n            hoursOnly,\n            hoursAndMinutes,\n            hoursAndMinutesAndSeconds\n        } = this.getParsedTimeParts(this.elementRef.nativeElement.value);\n\n        // tslint:disable no-magic-numbers\n        if (hoursOnly &&\n            hoursOnly[1] &&\n            hoursOnly[1].length === 2) {\n            isAutocompleteTriggered = true;\n        } else if (hoursAndMinutes &&\n            hoursAndMinutes[1].length === 1 &&\n            hoursAndMinutes[2] &&\n            hoursAndMinutes[2].length === 2) {\n            isAutocompleteTriggered = true;\n        } else if (hoursAndMinutesAndSeconds &&\n            hoursAndMinutesAndSeconds[1].length === 2 &&\n            hoursAndMinutesAndSeconds[2].length === 2 &&\n            hoursAndMinutesAndSeconds[3] &&\n            hoursAndMinutesAndSeconds[3].length === 2) {\n            isAutocompleteTriggered = true;\n        }\n        // tslint:enable no-magic-numbers\n\n        this.applyInputChanges({ doTimestringReformat: isAutocompleteTriggered });\n\n        this.elementRef.nativeElement.selectionStart = initialCursorStart;\n        this.elementRef.nativeElement.selectionEnd = initialCursorEnd;\n\n        if (isAutocompleteTriggered && this.ngControl.errors === null) {\n            this.createSelectionOfTimeComponentInInput(initialCursorStart + 1);\n        }\n    }\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    get empty(): boolean {\n        return !this.elementRef.nativeElement.value && !this.isBadInput();\n    }\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    onContainerClick() {\n        this.focus();\n    }\n\n    writeValue(value: Date | null): void {\n        if (value !== null) {\n            this.renderer.setProperty(this.elementRef.nativeElement,\n                'value',\n                this.getTimeStringFromDate(value, this.timeFormat)\n            );\n        }\n        this.onChange(value || null);\n        this.applyInputChanges();\n    }\n\n    onKeyDown(event: KeyboardEvent): void {\n\n        const keyCode: string = this.getKeyCode(event);\n\n        if (keyCode === ARROW_UP_KEYCODE || keyCode === ARROW_DOWN_KEYCODE) {\n            this.upDownTimeByArrowKeys(event);\n        }\n        if (keyCode === ARROW_LEFT_KEYCODE || keyCode === ARROW_RIGHT_KEYCODE) {\n            this.switchSelectionBetweenTimeparts(event);\n        }\n    }\n\n    registerOnChange(fn: (value: Date) => void): void {\n        this.onChange = fn;\n    }\n\n    registerOnTouched(fn: () => void): void {\n        this.onTouched = fn;\n    }\n\n    /** Does some manual dirty checking on the native input `value` property. */\n    private dirtyCheckNativeValue() {\n        const newValue = this.value;\n\n        if (this.previousNativeValue !== newValue) {\n            this.previousNativeValue = newValue;\n            this.stateChanges.next();\n        }\n    }\n\n    /** Checks whether the input is invalid based on the native validation. */\n    private isBadInput(): boolean {\n        const validity = (<HTMLInputElement> this.elementRef.nativeElement).validity;\n\n        return validity && validity.badInput;\n    }\n\n    private applyInputChanges(applyParams: {\n        changedTime?: Date;\n        doTimestringReformat?: boolean;\n    } = {}): void {\n        const { changedTime, doTimestringReformat = true } = applyParams;\n        const timeToApply: Date | undefined = changedTime ||\n            this.getDateFromTimeString(this.elementRef.nativeElement.value);\n        this.currentDateTimeInput = timeToApply;\n\n        if (doTimestringReformat && timeToApply !== undefined) {\n            const selectionStart: number = this.elementRef.nativeElement.selectionStart;\n            const selectionEnd: number = this.elementRef.nativeElement.selectionEnd;\n            this.renderer.setProperty(\n                this.elementRef.nativeElement,\n                'value',\n                this.getTimeStringFromDate(timeToApply, this.timeFormat));\n            this.elementRef.nativeElement.selectionStart = selectionStart;\n            this.elementRef.nativeElement.selectionEnd = selectionEnd;\n        }\n\n        (<FormControl> this.ngControl.control).updateValueAndValidity();\n        const result = this.ngControl.errors === null && timeToApply !== undefined ? timeToApply : null;\n        this.onChange(result);\n        this.stateChanges.next();\n    }\n\n    private upDownTimeByArrowKeys(event: KeyboardEvent): void {\n        event.preventDefault();\n\n        let changedTime: Date | undefined = this.currentDateTimeInput;\n        if (changedTime !== undefined) {\n            const cursorPos = this.elementRef.nativeElement.selectionStart;\n\n            const modifiedTimePart = this.getTimeEditMetrics(cursorPos)\n                .modifiedTimePart;\n            const keyCode: string = this.getKeyCode(event);\n            if (keyCode === ARROW_UP_KEYCODE) { changedTime = this.incrementTime(changedTime, modifiedTimePart); }\n            if (keyCode === ARROW_DOWN_KEYCODE) { changedTime = this.decrementTime(changedTime, modifiedTimePart); }\n            this.applyInputChanges({ changedTime });\n            this.createSelectionOfTimeComponentInInput(cursorPos);\n        }\n    }\n\n    private switchSelectionBetweenTimeparts(event: KeyboardEvent): void {\n        const changedTime: Date | undefined = this.currentDateTimeInput;\n        const keyCode: string = this.getKeyCode(event);\n\n        if (changedTime !== undefined) {\n            let cursorPos: number = this.elementRef.nativeElement.selectionStart;\n            if (keyCode === ARROW_LEFT_KEYCODE) {\n                cursorPos = this.getCursorPositionOfPrevTimePartStart(cursorPos, this.elementRef.nativeElement.value);\n            } else if (keyCode === ARROW_RIGHT_KEYCODE) {\n                cursorPos = this.getCursorPositionOfNextTimePartStart(cursorPos, this.elementRef.nativeElement.value);\n            }\n            this.createSelectionOfTimeComponentInInput(cursorPos);\n        }\n    }\n\n    /**\n     * @description Microsoft EDGE doesn't support KeyboaedEvent.code thus we need this helper\n     */\n    private getKeyCode(event: KeyboardEvent): string {\n        return event.code || event.key;\n    }\n\n    private createSelectionOfTimeComponentInInput(cursorPos: number): void {\n        setTimeout(() => {\n            const newEditParams = this.getTimeEditMetrics(cursorPos);\n            this.elementRef.nativeElement.selectionStart = newEditParams.cursorStartPosition;\n            this.elementRef.nativeElement.selectionEnd = newEditParams.cursorEndPosition;\n        });\n    }\n\n    private incrementTime(dateVal: Date,\n                          whatToIncrement: TimeParts = TimeParts.seconds): Date {\n        let { hours, minutes, seconds } = this.getTimeDigitsFromDate(dateVal);\n\n        switch (whatToIncrement) {\n            case TimeParts.hours:\n                hours++;\n                break;\n            case TimeParts.minutes:\n                minutes++;\n                break;\n            case TimeParts.seconds:\n                seconds++;\n                break;\n            default:\n        }\n\n        if (seconds > SECONDS_PER_MINUTE) { seconds = 0; }\n\n        if (minutes > MINUTES_PER_HOUR) { minutes = 0; }\n\n        if (hours > HOURS_PER_DAY) { hours = 0; }\n\n        return <Date> this.getDateFromTimeDigits(hours, minutes, seconds);\n    }\n\n    /**\n     * @description Decrement part of time\n     */\n    private decrementTime(dateVal: Date,\n                          whatToDecrement: TimeParts = TimeParts.seconds): Date {\n        let { hours, minutes, seconds } = this.getTimeDigitsFromDate(dateVal);\n\n        switch (whatToDecrement) {\n            case TimeParts.hours:\n                hours--;\n                break;\n            case TimeParts.minutes:\n                minutes--;\n                break;\n            case TimeParts.seconds:\n                seconds--;\n                break;\n            default:\n        }\n\n        if (seconds < 0) { seconds = SECONDS_PER_MINUTE; }\n\n        if (minutes < 0) { minutes = MINUTES_PER_HOUR; }\n\n        if (hours < 0) { hours = HOURS_PER_DAY; }\n\n        return <Date> this.getDateFromTimeDigits(hours, minutes, seconds);\n    }\n\n    private getCursorPositionOfPrevTimePartStart(cursorPos: number, timeString: string): number {\n        return cursorPos === 0 ? timeString.length : cursorPos - 1;\n    }\n\n    private getCursorPositionOfNextTimePartStart(cursorPos: number,\n                                                 timeString: string,\n                                                 timeDevider: string = ':'): number {\n        const nextDividerPos: number = timeString.indexOf(timeDevider, cursorPos);\n\n        return nextDividerPos !== undefined ? nextDividerPos + 1 : 0;\n    }\n\n    /**\n     * @description Get params for arrow-keys (up/down) time valie edit.\n     * @param cursorPosition Current cursor position in timeString\n     */\n    private getTimeEditMetrics(cursorPosition: number): {\n        modifiedTimePart: TimeParts;\n        cursorStartPosition: number;\n        cursorEndPosition: number;\n    } {\n        const timeString: string = this.elementRef.nativeElement.value;\n        let modifiedTimePart: TimeParts;\n        let cursorStartPosition: number;\n        let cursorEndPosition: number;\n        const hoursIndex = 0;\n        const minutesIndex = timeString.indexOf(':', hoursIndex + 1);\n        const secondsIndex = minutesIndex !== -1 ? timeString.indexOf(':', minutesIndex + 1) : -1;\n\n        if (secondsIndex !== -1 && cursorPosition > secondsIndex) {\n            modifiedTimePart = TimeParts.seconds;\n            cursorStartPosition = secondsIndex + 1;\n            cursorEndPosition = timeString.length;\n        } else if (minutesIndex !== -1 && cursorPosition > minutesIndex) {\n            modifiedTimePart = TimeParts.minutes;\n            cursorStartPosition = minutesIndex + 1;\n            cursorEndPosition = secondsIndex > -1 ? secondsIndex : timeString.length;\n        } else {\n            modifiedTimePart = TimeParts.hours;\n            cursorStartPosition = hoursIndex;\n            cursorEndPosition = minutesIndex !== -1 ? minutesIndex : timeString.length;\n        }\n\n        return {\n            modifiedTimePart,\n            cursorStartPosition,\n            cursorEndPosition\n        };\n    }\n\n    /**\n     * @description Create time string for displaying inside input element of UI\n     */\n    private getTimeStringFromDate(tempVal: Date,\n                                  timeFormat: TimeFormats = DEFAULT_TIME_FORMAT): string {\n        const hours: string = this.getNumberWithLeadingZero(tempVal.getHours());\n        const minutes: string = this.getNumberWithLeadingZero(tempVal.getMinutes());\n        const seconds: string = this.getNumberWithLeadingZero(tempVal.getSeconds());\n\n        const formattedTimeGenerators = {\n            [TimeFormats.HHmm]: () => `${hours}:${minutes}`,\n            [TimeFormats.HHmmss]: () => `${hours}:${minutes}:${seconds}`\n        };\n\n        return formattedTimeGenerators[timeFormat]();\n    }\n\n    private getParsedTimeParts(timeString: string): {\n        hoursOnly: any;\n        hoursAndMinutes: any;\n        hoursAndMinutesAndSeconds: any;\n    } {\n        const hoursAndMinutesAndSeconds = timeString.match(HOURS_MINUTES_SECONDS_REGEXP);\n        const hoursAndMinutes = timeString.match(HOURS_MINUTES_REGEXP);\n        const hoursOnly = timeString.match(HOURS_ONLY_REGEXP);\n\n        return {\n            hoursOnly,\n            hoursAndMinutes,\n            hoursAndMinutesAndSeconds\n        };\n    }\n\n    /**\n     * @description Create Date object from separate parts of time\n     */\n    private getDateFromTimeDigits(hours: number, minutes: number, seconds: number = 0): Date | undefined {\n        return this.getDateFromTimeString(`${hours}:${minutes}:${seconds}`);\n    }\n\n    private getDateFromTimeString(timeString: string | undefined): Date | undefined {\n        // TODO Use moment-js\n        if (timeString === undefined) { return; }\n\n        const {\n            hoursOnly,\n            hoursAndMinutes,\n            hoursAndMinutesAndSeconds\n        } = this.getParsedTimeParts(timeString);\n\n        if (timeString.trim().length === 0 ||\n            hoursOnly === null && hoursAndMinutes === null && hoursAndMinutesAndSeconds === null) {\n            return;\n        }\n\n        // tslint:disable no-magic-numbers\n        let hours: number = 0;\n        let minutes: number = 0;\n        let seconds: number = 0;\n\n        if (hoursOnly) {\n            hours = Number(hoursOnly[1]);\n        } else if (hoursAndMinutes) {\n            hours = Number(hoursAndMinutes[1]);\n            minutes = Number(hoursAndMinutes[2]);\n        } else if (hoursAndMinutesAndSeconds) {\n            hours = Number(hoursAndMinutesAndSeconds[1]);\n            minutes = Number(hoursAndMinutesAndSeconds[2]);\n            seconds = Number(hoursAndMinutesAndSeconds[3]);\n        }\n        // const timestamp: number = Date.parse(fullDateString);\n        const resultDate: Date = new Date(1970, 0, 1, hours, minutes, seconds);\n        // tslint:enable no-magic-numbers\n\n        return isNaN(resultDate.getTime()) ? undefined : resultDate;\n    }\n\n    private getNumberWithLeadingZero(digit: number): string {\n        const MAX_DIGIT_WITH_LEADING_ZERO: number = 9;\n\n        return digit > MAX_DIGIT_WITH_LEADING_ZERO ? `${digit}` : `0${digit}`;\n    }\n\n    private getTimeDigitsFromDate(dateVal: Date): { hours: number; minutes: number; seconds: number } {\n        return {\n            hours: dateVal.getHours(),\n            minutes: dateVal.getMinutes(),\n            seconds: dateVal.getSeconds()\n        };\n    }\n\n    private parseValidator(): ValidationErrors | null {\n        return this.currentDateTimeInput === undefined ?\n            { mcTimepickerParse: { text: this.elementRef.nativeElement.value } } :\n            null;\n    }\n\n    private minTimeValidator(): ValidationErrors | null {\n\n        if (this.currentDateTimeInput !== undefined &&\n            this.minDateTime !== undefined &&\n            this.isTimeLowerThenMin(this.currentDateTimeInput)) {\n            return { mcTimepickerLowerThenMintime: { text: this.elementRef.nativeElement.value } };\n        }\n\n        return null;\n    }\n\n    private maxTimeValidator(): ValidationErrors | null {\n        if (this.currentDateTimeInput !== undefined &&\n            this.maxDateTime !== undefined &&\n            this.isTimeGreaterThenMax(this.currentDateTimeInput)) {\n            return { mcTimepickerHigherThenMaxtime: { text: this.elementRef.nativeElement.value } };\n        }\n\n        return null;\n    }\n\n    private isTimeLowerThenMin(timeToCompare: Date): boolean {\n        return timeToCompare.getTime() - (<Date> this.minDateTime).getTime() < 0;\n    }\n\n    private isTimeGreaterThenMax(timeToCompare: Date): boolean {\n        return timeToCompare.getTime() - (<Date> this.maxDateTime).getTime() >= 0;\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\n\nimport { A11yModule } from '@ptsecurity/cdk/a11y';\nimport { PlatformModule } from '@ptsecurity/cdk/platform';\n\nimport { McTimepicker } from './timepicker';\n\n\n@NgModule({\n    imports: [\n        CommonModule,\n        A11yModule,\n        PlatformModule,\n        FormsModule\n    ],\n    declarations: [\n        McTimepicker\n    ],\n    exports: [\n        McTimepicker\n    ]\n})\nexport class McTimepickerModule {}\n","import {\n    animate,\n    AnimationTriggerMetadata,\n    state,\n    style,\n    transition,\n    trigger,\n    query,\n    animateChild,\n    group\n} from '@angular/animations';\n\n\n/**\n * The following are all the animations for the mat-select component, with each\n * const containing the metadata for one animation.\n *\n * The values below match the implementation of the AngularJS Material mat-select animation.\n */\nexport const mcSelectAnimations: {\n    readonly transformPanel: AnimationTriggerMetadata;\n    readonly fadeInContent: AnimationTriggerMetadata;\n} = {\n    /**\n     * This animation transforms the select's overlay panel on and off the page.\n     *\n     * When the panel is attached to the DOM, it expands its width by the amount of padding, scales it\n     * up to 100% on the Y axis, fades in its border, and translates slightly up and to the\n     * side to ensure the option text correctly overlaps the trigger text.\n     *\n     * When the panel is removed from the DOM, it simply fades out linearly.\n     */\n    transformPanel: trigger('transformPanel', [\n        state('void', style({\n            transform: 'scaleY(0)',\n            minWidth: '100%',\n            opacity: 0\n        })),\n        transition('void => *', group([\n            query('@fadeInContent', animateChild()),\n            animate('150ms cubic-bezier(0.25, 0.8, 0.25, 1)')\n        ])),\n        transition('* => void', [\n            animate('250ms 100ms linear', style({ opacity: 0 }))\n        ])\n    ]),\n\n    /**\n     * This animation fades in the background color and text content of the\n     * select's options. It is time delayed to occur 100ms after the overlay\n     * panel has transformed in.\n     */\n    fadeInContent: trigger('fadeInContent', [\n        state('showing', style({ opacity: 1 })),\n        transition('void => showing', [\n            style({ opacity: 0 }),\n            animate('150ms 100ms cubic-bezier(0.55, 0, 0.55, 0.2)')\n        ])\n    ])\n};\n\n\n/**\n * @deprecated\n * @breaking-change 7.0.0\n */\nexport const transformPanel = mcSelectAnimations.transformPanel;\n\n/**\n * @deprecated\n * @breaking-change 7.0.0\n */\nexport const fadeInContent = mcSelectAnimations.fadeInContent;\n","import { AnimationEvent } from '@angular/animations';\nimport {\n    Component,\n    ChangeDetectorRef,\n    Input,\n    Inject,\n    Output,\n    EventEmitter,\n    OnDestroy,\n    OnInit,\n    ElementRef,\n    Directive,\n    Optional,\n    ViewEncapsulation,\n    ChangeDetectionStrategy,\n    ComponentFactoryResolver,\n    ViewContainerRef,\n    forwardRef,\n    ViewChild\n} from '@angular/core';\nimport { Directionality, Direction } from '@ptsecurity/cdk/bidi';\nimport { TemplatePortal, CdkPortalOutlet, PortalHostDirective } from '@ptsecurity/cdk/portal';\nimport { Subscription } from 'rxjs';\nimport { startWith } from 'rxjs/operators';\n\nimport { mcTabsAnimations } from './tabs-animations';\n\n\n/**\n * These position states are used internally as animation states for the tab body. Setting the\n * position state to left, right, or center will transition the tab body from its current\n * position to its respective state. If there is not current position (void, in the case of a new\n * tab body), then there will be no transition animation to its state.\n *\n * In the case of a new tab body that should immediately be centered with an animating transition,\n * then left-origin-center or right-origin-center can be used, which will use left or right as its\n * psuedo-prior state.\n */\nexport type McTabBodyPositionState =\n    'left' | 'center' | 'right' | 'left-origin-center' | 'right-origin-center';\n\n/**\n * The origin state is an internally used state that is set on a new tab body indicating if it\n * began to the left or right of the prior selected index. For example, if the selected index was\n * set to 1, and a new tab is created and selected at index 2, then the tab body would have an\n * origin of right because its index was greater than the prior selected index.\n */\nexport type McTabBodyOriginState = 'left' | 'right';\n\n/**\n * Wrapper for the contents of a tab.\n * @docs-private\n */\n@Component({\n    selector: 'mc-tab-body',\n    templateUrl: 'tab-body.html',\n    styleUrls: ['tab-body.css'],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    animations: [mcTabsAnimations.translateTab],\n    host: {\n        class: 'mc-tab-body'\n    }\n})\nexport class McTabBody implements OnInit, OnDestroy {\n\n    /** The shifted index position of the tab body, where zero represents the active center tab. */\n    @Input()\n    set position(position: number) {\n        this.positionIndex = position;\n        this.computePositionAnimationState();\n    }\n\n    /** Tab body position state. Used by the animation trigger for the current state. */\n    bodyPosition: McTabBodyPositionState;\n\n    /** Event emitted when the tab begins to animate towards the center as the active tab. */\n    @Output() readonly onCentering: EventEmitter<number> = new EventEmitter<number>();\n\n    /** Event emitted before the centering of the tab begins. */\n    @Output() readonly beforeCentering: EventEmitter<boolean> = new EventEmitter<boolean>();\n\n    /** Event emitted before the centering of the tab begins. */\n    @Output() readonly afterLeavingCenter: EventEmitter<boolean> = new EventEmitter<boolean>();\n\n    /** Event emitted when the tab completes its animation towards the center. */\n    @Output() readonly onCentered: EventEmitter<void> = new EventEmitter<void>(true);\n\n    /** The portal host inside of this container into which the tab body content will be loaded. */\n    @ViewChild(PortalHostDirective) portalHost: PortalHostDirective;\n\n    /** The tab body content to display. */\n    @Input('content') content: TemplatePortal;\n\n    /** Position that will be used when the tab is immediately becoming visible after creation. */\n    @Input() origin: number;\n\n    // Note that the default value will always be overwritten by `McTabBody`, but we need one\n    // anyway to prevent the animations module from throwing an error if the body is used on its own.\n    /** Duration for the tab's animation. */\n    @Input() animationDuration: string = '0ms';\n\n    /** Current position of the tab-body in the tab-group. Zero means that the tab is visible. */\n    private positionIndex: number;\n\n    /** Subscription to the directionality change observable. */\n    private dirChangeSubscription = Subscription.EMPTY;\n\n    constructor(private elementRef: ElementRef<HTMLElement>,\n                @Optional() private dir: Directionality,\n                changeDetectorRef: ChangeDetectorRef) {\n\n        if (this.dir && changeDetectorRef) {\n            this.dirChangeSubscription = this.dir.change.subscribe((direction: Direction) => {\n                this.computePositionAnimationState(direction);\n                changeDetectorRef.markForCheck();\n            });\n        }\n    }\n\n    /**\n     * After initialized, check if the content is centered and has an origin. If so, set the\n     * special position states that transition the tab from the left or right before centering.\n     */\n    ngOnInit() {\n        if (this.bodyPosition === 'center' && this.origin != null) {\n            this.bodyPosition = this.computePositionFromOrigin();\n        }\n    }\n\n    ngOnDestroy() {\n        this.dirChangeSubscription.unsubscribe();\n    }\n\n    onTranslateTabStarted(e: AnimationEvent): void {\n        const isCentering = this.isCenterPosition(e.toState);\n        this.beforeCentering.emit(isCentering);\n        if (isCentering) {\n            this.onCentering.emit(this.elementRef.nativeElement.clientHeight);\n        }\n    }\n\n    onTranslateTabComplete(e: AnimationEvent): void {\n        // If the transition to the center is complete, emit an event.\n        if (this.isCenterPosition(e.toState) && this.isCenterPosition(this.bodyPosition)) {\n            this.onCentered.emit();\n        }\n\n        if (this.isCenterPosition(e.fromState) && !this.isCenterPosition(this.bodyPosition)) {\n            this.afterLeavingCenter.emit();\n        }\n    }\n\n    /** The text direction of the containing app. */\n    getLayoutDirection(): Direction {\n        return this.dir && this.dir.value === 'rtl' ? 'rtl' : 'ltr';\n    }\n\n    /** Whether the provided position state is considered center, regardless of origin. */\n    isCenterPosition(position: McTabBodyPositionState | string): boolean {\n        return position === 'center' ||\n            position === 'left-origin-center' ||\n            position === 'right-origin-center';\n    }\n\n    /** Computes the position state that will be used for the tab-body animation trigger. */\n    private computePositionAnimationState(dir: Direction = this.getLayoutDirection()) {\n        if (this.positionIndex < 0) {\n            this.bodyPosition = dir === 'ltr' ? 'left' : 'right';\n        } else if (this.positionIndex > 0) {\n            this.bodyPosition = dir === 'ltr' ? 'right' : 'left';\n        } else {\n            this.bodyPosition = 'center';\n        }\n    }\n\n    /**\n     * Computes the position state based on the specified origin position. This is used if the\n     * tab is becoming visible immediately after creation.\n     */\n    private computePositionFromOrigin(): McTabBodyPositionState {\n        const dir = this.getLayoutDirection();\n\n        if ((dir === 'ltr' && this.origin <= 0) || (dir === 'rtl' && this.origin > 0)) {\n            return 'left-origin-center';\n        }\n\n        return 'right-origin-center';\n    }\n}\n\n/**\n * The portal host directive for the contents of the tab.\n * @docs-private\n */\n@Directive({\n    selector: '[mcTabBodyHost]'\n})\nexport class McTabBodyPortal extends CdkPortalOutlet implements OnInit, OnDestroy {\n    /** Subscription to events for when the tab body begins centering. */\n    private centeringSub = Subscription.EMPTY;\n    /** Subscription to events for when the tab body finishes leaving from center position. */\n    private leavingSub = Subscription.EMPTY;\n\n    constructor(\n        componentFactoryResolver: ComponentFactoryResolver,\n        viewContainerRef: ViewContainerRef,\n        @Inject(forwardRef(() => McTabBody)) private host: McTabBody) {\n        super(componentFactoryResolver, viewContainerRef);\n    }\n\n    /** Set initial visibility or set up subscription for changing visibility. */\n    ngOnInit(): void {\n        super.ngOnInit();\n\n        this.centeringSub = this.host.beforeCentering\n            .pipe(startWith(this.host.isCenterPosition(this.host.bodyPosition)))\n            .subscribe((isCentering: boolean) => {\n                if (isCentering && !this.hasAttached()) {\n                    this.attach(this.host.content);\n                }\n            });\n\n        this.leavingSub = this.host.afterLeavingCenter.subscribe(() => {\n            this.detach();\n        });\n    }\n\n    /** Clean up centering subscription. */\n    ngOnDestroy(): void {\n        super.ngOnDestroy();\n        this.centeringSub.unsubscribe();\n        this.leavingSub.unsubscribe();\n    }\n}\n","import { Directive, ElementRef } from '@angular/core';\nimport {\n    CanDisable,\n    CanDisableCtor,\n    mixinDisabled\n} from '@ptsecurity/mosaic/core';\n\n\n// Boilerplate for applying mixins to McTabLabelWrapper.\n/** @docs-private */\nexport class McTabLabelWrapperBase {}\nexport const mcTabLabelWrapperMixinBase: CanDisableCtor &\n    typeof McTabLabelWrapperBase = mixinDisabled(McTabLabelWrapperBase);\n\n/**\n * Used in the `mc-tab-group` view to display tab labels.\n * @docs-private\n */\n@Directive({\n    selector: '[mcTabLabelWrapper]',\n    inputs: ['disabled'],\n    host: {\n        '[class.mc-disabled]': 'disabled',\n        '[attr.aria-disabled]': '!!disabled'\n    }\n})\nexport class McTabLabelWrapper extends mcTabLabelWrapperMixinBase implements CanDisable {\n    constructor(public elementRef: ElementRef) {\n        super();\n    }\n\n    /** Sets focus on the wrapper element */\n    focus(): void {\n        this.elementRef.nativeElement.focus();\n    }\n\n    getOffsetLeft(): number {\n        return this.elementRef.nativeElement.offsetLeft;\n    }\n\n    getOffsetWidth(): number {\n        return this.elementRef.nativeElement.offsetWidth;\n    }\n}\n","import {\n    AfterContentChecked,\n    AfterContentInit,\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    ContentChildren,\n    ElementRef,\n    EventEmitter,\n    Input,\n    NgZone,\n    OnDestroy,\n    Optional,\n    Output,\n    QueryList,\n    ViewChild,\n    ViewEncapsulation\n} from '@angular/core';\nimport { FocusKeyManager } from '@ptsecurity/cdk/a11y';\nimport { Direction, Directionality } from '@ptsecurity/cdk/bidi';\nimport { coerceNumberProperty } from '@ptsecurity/cdk/coercion';\nimport { END, ENTER, HOME, SPACE } from '@ptsecurity/cdk/keycodes';\nimport { ViewportRuler } from '@ptsecurity/cdk/scrolling';\nimport { merge, of as observableOf, Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\n\nimport { McTabLabelWrapper } from './tab-label-wrapper';\n\n\nconst VIEWPORT_THROTTLE_TIME = 150;\nconst SCROLL_DISTANCE_DELIMITER = 3;\n\n\n/**\n * The directions that scrolling can go in when the header's tabs exceed the header width. 'After'\n * will scroll the header towards the end of the tabs list and 'before' will scroll towards the\n * beginning of the list.\n */\nexport type ScrollDirection = 'after' | 'before';\n\n/**\n * The distance in pixels that will be overshot when scrolling a tab label into view. This helps\n * provide a small affordance to the label next to it.\n */\nconst EXAGGERATED_OVERSCROLL = 60;\n\n// Boilerplate for applying mixins to McTabHeader.\n/** @docs-private */\nexport class McTabHeaderBase {}\n\n/**\n * The header of the tab group which displays a list of all the tabs in the tab group.\n * When the tabs list's width exceeds the width of the header container,\n * then arrows will be displayed to allow the user to scroll\n * left and right across the header.\n * @docs-private\n */\n@Component({\n    selector: 'mc-tab-header',\n    templateUrl: 'tab-header.html',\n    styleUrls: ['tab-header.css'],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    host: {\n        class: 'mc-tab-header',\n        '[class.mc-tab-header__pagination-controls_enabled]':\n            'showPaginationControls',\n        '[class.mc-tab-header_rtl]': 'getLayoutDirection() == \\'rtl\\''\n    }\n})\nexport class McTabHeader extends McTabHeaderBase\n    implements AfterContentChecked, AfterContentInit, OnDestroy {\n    /** The index of the active tab. */\n    @Input()\n    get selectedIndex(): number {\n        return this._selectedIndex;\n    }\n    set selectedIndex(value: number) {\n        const coercedValue = coerceNumberProperty(value);\n        this.selectedIndexChanged = this._selectedIndex !== coercedValue;\n        this._selectedIndex = coercedValue;\n\n        if (this.keyManager) {\n            this.keyManager.updateActiveItem(coercedValue);\n        }\n    }\n\n    /** Tracks which element has focus; used for keyboard navigation */\n    get focusIndex(): number {\n        return this.keyManager ? this.keyManager.activeItemIndex! : 0;\n    }\n\n    /** When the focus index is set, we must manually send focus to the correct label */\n    set focusIndex(value: number) {\n        if (\n            !this.isValidIndex(value) ||\n            this.focusIndex === value ||\n            !this.keyManager\n        ) {\n            return;\n        }\n\n        this.keyManager.setActiveItem(value);\n    }\n\n    /** Sets the distance in pixels that the tab header should be transformed in the X-axis. */\n    get scrollDistance(): number {\n        return this._scrollDistance;\n    }\n    set scrollDistance(v: number) {\n        this._scrollDistance = Math.max(\n            0,\n            Math.min(this.getMaxScrollDistance(), v)\n        );\n\n        // Mark that the scroll distance has changed so that after the view is checked, the CSS\n        // transformation can move the header.\n        this.scrollDistanceChanged = true;\n        this.checkScrollingControls();\n    }\n\n    @ContentChildren(McTabLabelWrapper)\n    labelWrappers: QueryList<McTabLabelWrapper>;\n    @ViewChild('tabListContainer')\n    tabListContainer: ElementRef;\n    @ViewChild('tabList')\n    tabList: ElementRef;\n\n    /** Whether the controls for pagination should be displayed */\n    showPaginationControls = false;\n\n    /** Whether the tab list can be scrolled more towards the end of the tab label list. */\n    disableScrollAfter = true;\n\n    /** Whether the tab list can be scrolled more towards the beginning of the tab label list. */\n    disableScrollBefore = true;\n\n    /** Event emitted when the option is selected. */\n    @Output()\n    readonly selectFocusedIndex: EventEmitter<number> = new EventEmitter<number>();\n\n    /** Event emitted when a label is focused. */\n    @Output()\n    readonly indexFocused: EventEmitter<number> = new EventEmitter<number>();\n\n    /** The distance in pixels that the tab labels should be translated to the left. */\n    private _scrollDistance = 0;\n\n    /** Whether the header should scroll to the selected index after the view has been checked. */\n    private selectedIndexChanged = false;\n\n    /** Emits when the component is destroyed. */\n    private readonly destroyed = new Subject<void>();\n\n    /**\n     * The number of tab labels that are displayed on the header. When this changes, the header\n     * should re-evaluate the scroll position.\n     */\n    private tabLabelCount: number;\n\n    /** Whether the scroll distance has changed and should be applied after the view is checked. */\n    private scrollDistanceChanged: boolean;\n\n    /** Used to manage focus between the tabs. */\n    private keyManager: FocusKeyManager<McTabLabelWrapper>;\n\n    /** Cached text content of the header. */\n    private currentTextContent: string;\n\n    private _selectedIndex: number = 0;\n\n    constructor(\n        private elementRef: ElementRef,\n        private changeDetectorRef: ChangeDetectorRef,\n        private viewportRuler: ViewportRuler,\n        @Optional() private dir: Directionality,\n        private ngZone: NgZone\n    ) {\n        super();\n    }\n\n    ngAfterContentChecked(): void {\n        // If the number of tab labels have changed, check if scrolling should be enabled\n        if (this.tabLabelCount !== this.labelWrappers.length) {\n            this.updatePagination();\n            this.tabLabelCount = this.labelWrappers.length;\n            this.changeDetectorRef.markForCheck();\n        }\n\n        // If the selected index has changed, scroll to the label and check if the scrolling controls\n        // should be disabled.\n        if (this.selectedIndexChanged) {\n            this.scrollToLabel(this._selectedIndex);\n            this.checkScrollingControls();\n            this.selectedIndexChanged = false;\n            this.changeDetectorRef.markForCheck();\n        }\n\n        // If the scroll distance has been changed (tab selected, focused, scroll controls activated),\n        // then translate the header to reflect this.\n        if (this.scrollDistanceChanged) {\n            this.updateTabScrollPosition();\n            this.scrollDistanceChanged = false;\n            this.changeDetectorRef.markForCheck();\n        }\n    }\n\n    handleKeydown(event: KeyboardEvent) {\n        switch (event.keyCode) {\n            case HOME:\n                this.keyManager.setFirstItemActive();\n                event.preventDefault();\n                break;\n            case END:\n                this.keyManager.setLastItemActive();\n                event.preventDefault();\n                break;\n            case ENTER:\n            case SPACE:\n                this.selectFocusedIndex.emit(this.focusIndex);\n                event.preventDefault();\n                break;\n            default:\n                this.keyManager.onKeydown(event);\n        }\n    }\n\n    ngAfterContentInit() {\n        const dirChange = this.dir ? this.dir.change : observableOf(null);\n        const resize = this.viewportRuler.change(VIEWPORT_THROTTLE_TIME);\n        const realign = () => {\n            this.updatePagination();\n        };\n\n        this.keyManager = new FocusKeyManager(this.labelWrappers)\n            .withHorizontalOrientation(this.getLayoutDirection())\n            .withWrap();\n\n        this.keyManager.updateActiveItem(0);\n\n        // Defer the first call in order to allow for slower browsers to lay out the elements.\n        // This helps in cases where the user lands directly on a page with paginated tabs.\n        typeof requestAnimationFrame === undefined\n            ? realign()\n            : requestAnimationFrame(realign);\n\n        // On dir change or window resize, update the orientation of\n        // the key manager if the direction has changed.\n        merge(dirChange, resize)\n            .pipe(takeUntil(this.destroyed))\n            .subscribe(() => {\n                realign();\n                this.keyManager.withHorizontalOrientation(\n                    this.getLayoutDirection()\n                );\n            });\n\n        // If there is a change in the focus key manager we need to emit the `indexFocused`\n        // event in order to provide a public event that notifies about focus changes. Also we realign\n        // the tabs container by scrolling the new focused tab into the visible section.\n        this.keyManager.change\n            .pipe(takeUntil(this.destroyed))\n            .subscribe((newFocusIndex) => {\n                this.indexFocused.emit(newFocusIndex);\n                this.setTabFocus(newFocusIndex);\n            });\n    }\n\n    ngOnDestroy() {\n        this.destroyed.next();\n        this.destroyed.complete();\n    }\n\n    /**\n     * Callback for when the MutationObserver detects that the content has changed.\n     */\n    onContentChanges() {\n        const textContent = this.elementRef.nativeElement.textContent;\n\n        // We need to diff the text content of the header, because the MutationObserver callback\n        // will fire even if the text content didn't change which is inefficient and is prone\n        // to infinite loops if a poorly constructed expression is passed in.\n\n        if (textContent !== this.currentTextContent) {\n            this.currentTextContent = textContent;\n\n            const zoneCallback = () => {\n                this.updatePagination();\n                this.changeDetectorRef.markForCheck();\n            };\n\n            // The content observer runs outside the `NgZone` by default, which\n            // means that we need to bring the callback back in ourselves.\n            // TODO: Remove null check for `_ngZone` once it's a required parameter.\n            this.ngZone ? this.ngZone.run(zoneCallback) : zoneCallback();\n        }\n    }\n\n    /**\n     * Updating the view whether pagination should be enabled or not\n     *\n     * WARNING: Calling this method can be very costly in terms of performance.  It should be called\n     * as infrequently as possible from outside of the Tabs component as it causes a reflow of the\n     * page.\n     */\n    updatePagination() {\n        this.checkPaginationEnabled();\n        this.checkScrollingControls();\n        this.updateTabScrollPosition();\n    }\n\n    /**\n     * Determines if an index is valid.  If the tabs are not ready yet, we assume that the user is\n     * providing a valid index and return true.\n     */\n    isValidIndex(index: number): boolean {\n        if (!this.labelWrappers) {\n            return true;\n        }\n\n        const tab = this.labelWrappers\n            ? this.labelWrappers.toArray()[index]\n            : null;\n\n        return !!tab && !tab.disabled;\n    }\n\n    /**\n     * Sets focus on the HTML element for the label wrapper and scrolls it into the view if\n     * scrolling is enabled.\n     */\n    setTabFocus(tabIndex: number) {\n        if (this.showPaginationControls) {\n            this.scrollToLabel(tabIndex);\n        }\n\n        if (this.labelWrappers && this.labelWrappers.length) {\n            this.labelWrappers.toArray()[tabIndex].focus();\n\n            // Do not let the browser manage scrolling to focus the element, this will be handled\n            // by using translation. In LTR, the scroll left should be 0. In RTL, the scroll width\n            // should be the full width minus the offset width.\n            const containerEl = this.tabListContainer.nativeElement;\n            const dir = this.getLayoutDirection();\n\n            if (dir === 'ltr') {\n                containerEl.scrollLeft = 0;\n            } else {\n                containerEl.scrollLeft =\n                    containerEl.scrollWidth - containerEl.offsetWidth;\n            }\n        }\n    }\n\n    /** The layout direction of the containing app. */\n    getLayoutDirection(): Direction {\n        return this.dir && this.dir.value === 'rtl' ? 'rtl' : 'ltr';\n    }\n\n    /** Performs the CSS transformation on the tab list that will cause the list to scroll. */\n    updateTabScrollPosition() {\n        const scrollDistance = this.scrollDistance;\n        const translateX =\n            this.getLayoutDirection() === 'ltr'\n                ? -scrollDistance\n                : scrollDistance;\n\n        // Don't use `translate3d` here because we don't want to create a new layer. A new layer\n        // seems to cause flickering and overflow in Internet Explorer.\n        // See: https://github.com/angular/material2/issues/10276\n        // We round the `transform` here, because transforms with sub-pixel precision cause some\n        // browsers to blur the content of the element.\n        this.tabList.nativeElement.style.transform = `translateX(${Math.round(translateX)}px)`;\n\n        // Setting the `transform` on IE will change the scroll offset of the parent, causing the\n        // position to be thrown off in some cases. We have to reset it ourselves to ensure that\n        // it doesn't get thrown off.\n        this.tabList.nativeElement.scrollLeft = 0;\n    }\n\n    /**\n     * Moves the tab list in the 'before' or 'after' direction (towards the beginning of the list or\n     * the end of the list, respectively). The distance to scroll is computed to be a third of the\n     * length of the tab list view window.\n     *\n     * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n     * should be called sparingly.\n     */\n    scrollHeader(scrollDir: ScrollDirection) {\n        const viewLength = this.tabListContainer.nativeElement.offsetWidth;\n\n        // Move the scroll distance one-third the length of the tab list's viewport.\n        this.scrollDistance +=\n            ((scrollDir === 'before' ? -1 : 1) * viewLength) / SCROLL_DISTANCE_DELIMITER;\n    }\n\n    /**\n     * Moves the tab list such that the desired tab label (marked by index) is moved into view.\n     *\n     * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n     * should be called sparingly.\n     */\n    scrollToLabel(labelIndex: number) {\n        const selectedLabel = this.labelWrappers\n            ? this.labelWrappers.toArray()[labelIndex]\n            : null;\n\n        if (!selectedLabel) {\n            return;\n        }\n\n        // The view length is the visible width of the tab labels.\n        const viewLength = this.tabListContainer.nativeElement.offsetWidth;\n\n        let labelBeforePos: number;\n        let labelAfterPos: number;\n\n        if (this.getLayoutDirection() === 'ltr') {\n            labelBeforePos = selectedLabel.getOffsetLeft();\n            labelAfterPos = labelBeforePos + selectedLabel.getOffsetWidth();\n        } else {\n            labelAfterPos =\n                this.tabList.nativeElement.offsetWidth -\n                selectedLabel.getOffsetLeft();\n            labelBeforePos = labelAfterPos - selectedLabel.getOffsetWidth();\n        }\n\n        const beforeVisiblePos = this.scrollDistance;\n        const afterVisiblePos = this.scrollDistance + viewLength;\n\n        if (labelBeforePos < beforeVisiblePos) {\n            // Scroll header to move label to the before direction\n            this.scrollDistance -=\n                beforeVisiblePos - labelBeforePos + EXAGGERATED_OVERSCROLL;\n        } else if (labelAfterPos > afterVisiblePos) {\n            // Scroll header to move label to the after direction\n            this.scrollDistance +=\n                labelAfterPos - afterVisiblePos + EXAGGERATED_OVERSCROLL;\n        }\n    }\n\n    /**\n     * Evaluate whether the pagination controls should be displayed. If the scroll width of the\n     * tab list is wider than the size of the header container, then the pagination controls should\n     * be shown.\n     *\n     * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n     * should be called sparingly.\n     */\n    checkPaginationEnabled() {\n        const isEnabled =\n            this.tabList.nativeElement.scrollWidth >\n            this.elementRef.nativeElement.offsetWidth;\n\n        if (!isEnabled) {\n            this.scrollDistance = 0;\n        }\n\n        if (isEnabled !== this.showPaginationControls) {\n            this.changeDetectorRef.markForCheck();\n        }\n\n        this.showPaginationControls = isEnabled;\n    }\n\n    /**\n     * Evaluate whether the before and after controls should be enabled or disabled.\n     * If the header is at the beginning of the list (scroll distance is equal to 0) then disable the\n     * before button. If the header is at the end of the list (scroll distance is equal to the\n     * maximum distance we can scroll), then disable the after button.\n     *\n     * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n     * should be called sparingly.\n     */\n    checkScrollingControls() {\n        // Check if the pagination arrows should be activated.\n        this.disableScrollBefore = this.scrollDistance === 0;\n        this.disableScrollAfter =\n            this.scrollDistance === this.getMaxScrollDistance();\n        this.changeDetectorRef.markForCheck();\n    }\n\n    /**\n     * Determines what is the maximum length in pixels that can be set for the scroll distance. This\n     * is equal to the difference in width between the tab list container and tab header container.\n     *\n     * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n     * should be called sparingly.\n     */\n    getMaxScrollDistance(): number {\n        const lengthOfTabList = this.tabList.nativeElement.scrollWidth;\n        const viewLength = this.tabListContainer.nativeElement.offsetWidth;\n\n        return lengthOfTabList - viewLength || 0;\n    }\n}\n","import {\n    AfterContentChecked,\n    AfterContentInit,\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    ContentChildren,\n    ElementRef,\n    EventEmitter,\n    Input,\n    OnDestroy,\n    Output,\n    QueryList,\n    ViewChild,\n    ViewEncapsulation,\n    InjectionToken,\n    Inject,\n    Optional,\n    Directive, Attribute\n} from '@angular/core';\nimport { coerceBooleanProperty, coerceNumberProperty } from '@ptsecurity/cdk/coercion';\nimport {\n    CanColor,\n    CanColorCtor,\n    mixinColor,\n    mixinDisabled\n} from '@ptsecurity/mosaic/core';\nimport { merge, Subscription } from 'rxjs';\n\nimport { McTab } from './tab';\nimport { McTabHeader } from './tab-header';\n\n\n@Directive({\n    selector: 'mc-tab-group[mc-light-tabs], [mc-tab-nav-bar][mc-light-tabs]',\n    host: { class: 'mc-tab-group_light' }\n})\nexport class McLightTabsCssStyler { }\n\n@Directive({\n    selector: 'mc-tab-group[mc-align-tabs-center], [mc-tab-nav-bar][mc-align-tabs-center]',\n    host: { class: 'mc-tab-group_align-labels-center' }\n})\nexport class McAlignTabsCenterCssStyler { }\n\n@Directive({\n    selector: 'mc-tab-group[mc-align-tabs-end], [mc-tab-nav-bar][mc-align-tabs-end]',\n    host: { class: 'mc-tab-group_align-labels-end' }\n})\nexport class McAlignTabsEndCssStyler { }\n\n@Directive({\n    selector: 'mc-tab-group[mc-stretch-tabs], [mc-tab-nav-bar][mc-stretch-tabs]',\n    host: { class: 'mc-tab-group_stretch-labels' }\n})\nexport class McStretchTabsCssStyler { }\n\n/** Used to generate unique ID's for each tab component */\nlet nextId = 0;\n\n/** A simple change event emitted on focus or selection changes. */\nexport class McTabChangeEvent {\n    /** Index of the currently-selected tab. */\n    index: number;\n    /** Reference to the currently-selected tab. */\n    tab: McTab;\n}\n\n/** Possible positions for the tab header. */\nexport type McTabHeaderPosition = 'above' | 'below';\n\n/** Object that can be used to configure the default options for the tabs module. */\nexport interface IMcTabsConfig {\n    /** Duration for the tab animation. Must be a valid CSS value (e.g. 600ms). */\n    animationDuration?: string;\n}\n\n/** Injection token that can be used to provide the default options the tabs module. */\nexport const MC_TABS_CONFIG = new InjectionToken('MC_TABS_CONFIG');\n\n// Boilerplate for applying mixins to McTabGroup.\n/** @docs-private */\nexport class McTabGroupBase {\n    // tslint:disable-next-line:naming-convention\n    constructor(public _elementRef: ElementRef) { }\n}\nexport const mcTabGroupMixinBase:\n    CanColorCtor &\n    typeof McTabGroupBase =\n    mixinColor(mixinDisabled(McTabGroupBase));\n\n/**\n * Tab-group component.  Supports basic tab pairs (label + content) and includes\n * keyboard navigation.\n */\n@Component({\n    selector: 'mc-tab-group',\n    exportAs: 'mcTabGroup',\n    templateUrl: 'tab-group.html',\n    styleUrls: ['tab-group.css'],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    inputs: ['color'],\n    host: {\n        class: 'mc-tab-group',\n        '[class.mc-tab-group_dynamic-height]': 'dynamicHeight',\n        '[class.mc-tab-group_inverted-header]': 'headerPosition === \"below\"'\n    }\n})\nexport class McTabGroup extends mcTabGroupMixinBase implements AfterContentInit,\n    AfterContentChecked, OnDestroy, CanColor {\n    lightTab: boolean;\n\n    /** Whether the tab group should grow to the size of the active tab. */\n    @Input()\n    get dynamicHeight(): boolean { return this._dynamicHeight; }\n    set dynamicHeight(value: boolean) { this._dynamicHeight = coerceBooleanProperty(value); }\n\n    /** The index of the active tab. */\n    @Input()\n    get selectedIndex(): number | null { return this._selectedIndex; }\n    set selectedIndex(value: number | null) {\n        this.indexToSelect = coerceNumberProperty(value, null);\n    }\n\n    @ContentChildren(McTab) tabs: QueryList<McTab>;\n\n    @ViewChild('tabBodyWrapper') tabBodyWrapper: ElementRef;\n\n    @ViewChild('tabHeader') tabHeader: McTabHeader;\n\n    /** Position of the tab header. */\n    @Input() headerPosition: McTabHeaderPosition = 'above';\n\n    /** Duration for the tab animation. Must be a valid CSS value (e.g. 600ms). */\n    @Input() animationDuration: string;\n\n    /** Output to enable support for two-way binding on `[(selectedIndex)]` */\n    @Output() readonly selectedIndexChange: EventEmitter<number> = new EventEmitter<number>();\n\n    /** Event emitted when focus has changed within a tab group. */\n    @Output() readonly focusChange: EventEmitter<McTabChangeEvent> =\n        new EventEmitter<McTabChangeEvent>();\n\n    /** Event emitted when the body animation has completed */\n    @Output() readonly animationDone: EventEmitter<void> = new EventEmitter<void>();\n\n    /** Event emitted when the tab selection has changed. */\n    @Output() readonly selectedTabChange: EventEmitter<McTabChangeEvent> =\n        new EventEmitter<McTabChangeEvent>(true);\n\n    /** The tab index that should be selected after the content has been checked. */\n    private indexToSelect: number | null = 0;\n\n    /** Snapshot of the height of the tab body wrapper before another tab is activated. */\n    private tabBodyWrapperHeight: number = 0;\n\n    /** Subscription to tabs being added/removed. */\n    private tabsSubscription = Subscription.EMPTY;\n\n    /** Subscription to changes in the tab labels. */\n    private tabLabelSubscription = Subscription.EMPTY;\n    private _dynamicHeight: boolean = false;\n    private _selectedIndex: number | null = null;\n\n    private groupId: number;\n\n    constructor(\n        elementRef: ElementRef,\n        private changeDetectorRef: ChangeDetectorRef,\n        @Attribute('mc-light-tabs') lightTabs: string,\n        @Inject(MC_TABS_CONFIG) @Optional() defaultConfig?: IMcTabsConfig\n    ) {\n        super(elementRef);\n\n        this.lightTab = coerceBooleanProperty(lightTabs);\n\n        this.groupId = nextId++;\n        this.animationDuration = defaultConfig && defaultConfig.animationDuration ?\n            defaultConfig.animationDuration : '0ms';\n    }\n\n    /**\n     * After the content is checked, this component knows what tabs have been defined\n     * and what the selected index should be. This is where we can know exactly what position\n     * each tab should be in according to the new selected index, and additionally we know how\n     * a new selected tab should transition in (from the left or right).\n     */\n    ngAfterContentChecked() {\n        // Don't clamp the `indexToSelect` immediately in the setter because it can happen that\n        // the amount of tabs changes before the actual change detection runs.\n        const indexToSelect = this.indexToSelect = this.clampTabIndex(this.indexToSelect);\n\n        // If there is a change in selected index, emit a change event. Should not trigger if\n        // the selected index has not yet been initialized.\n        if (this._selectedIndex !== indexToSelect) {\n            const isFirstRun = this._selectedIndex == null;\n\n            if (!isFirstRun) {\n                this.selectedTabChange.emit(this.createChangeEvent(indexToSelect));\n            }\n\n            // Changing these values after change detection has run\n            // since the checked content may contain references to them.\n            Promise.resolve().then(() => {\n                this.tabs.forEach((tab, index) => tab.isActive = index === indexToSelect);\n\n                if (!isFirstRun) {\n                    this.selectedIndexChange.emit(indexToSelect);\n                }\n            });\n        }\n\n        // Setup the position for each tab and optionally setup an origin on the next selected tab.\n        this.tabs.forEach((tab: McTab, index: number) => {\n            tab.position = index - indexToSelect;\n\n            // If there is already a selected tab, then set up an origin for the next selected tab\n            // if it doesn't have one already.\n            if (this._selectedIndex != null && tab.position === 0 && !tab.origin) {\n                tab.origin = indexToSelect - this._selectedIndex;\n            }\n        });\n\n        if (this._selectedIndex !== indexToSelect) {\n            this._selectedIndex = indexToSelect;\n            this.changeDetectorRef.markForCheck();\n        }\n    }\n\n    ngAfterContentInit() {\n        this.subscribeToTabLabels();\n\n        // Subscribe to changes in the amount of tabs, in order to be\n        // able to re-render the content as new tabs are added or removed.\n        this.tabsSubscription = this.tabs.changes.subscribe(() => {\n            const indexToSelect = this.clampTabIndex(this.indexToSelect);\n\n            // Maintain the previously-selected tab if a new tab is added or removed and there is no\n            // explicit change that selects a different tab.\n            if (indexToSelect === this._selectedIndex) {\n                const tabs = this.tabs.toArray();\n\n                for (let i = 0; i < tabs.length; i++) {\n                    if (tabs[i].isActive) {\n                        // Assign both to the `_indexToSelect` and `_selectedIndex` so we don't fire a changed\n                        // event, otherwise the consumer may end up in an infinite loop in some edge cases like\n                        // adding a tab within the `selectedIndexChange` event.\n                        this.indexToSelect = this._selectedIndex = i;\n                        break;\n                    }\n                }\n            }\n\n            this.subscribeToTabLabels();\n            this.changeDetectorRef.markForCheck();\n        });\n    }\n\n    ngOnDestroy() {\n        this.tabsSubscription.unsubscribe();\n        this.tabLabelSubscription.unsubscribe();\n    }\n\n    focusChanged(index: number) {\n        this.focusChange.emit(this.createChangeEvent(index));\n    }\n\n    /** Returns a unique id for each tab label element */\n    getTabLabelId(i: number): string {\n        return `mc-tab-label-${this.groupId}-${i}`;\n    }\n\n    /** Returns a unique id for each tab content element */\n    getTabContentId(i: number): string {\n        return `mc-tab-content-${this.groupId}-${i}`;\n    }\n\n    /**\n     * Sets the height of the body wrapper to the height of the activating tab if dynamic\n     * height property is true.\n     */\n    setTabBodyWrapperHeight(tabHeight: number): void {\n        if (!this._dynamicHeight || !this.tabBodyWrapperHeight) { return; }\n\n        const wrapper: HTMLElement = this.tabBodyWrapper.nativeElement;\n\n        wrapper.style.height = `${this.tabBodyWrapperHeight}px`;\n\n        // This conditional forces the browser to paint the height so that\n        // the animation to the new height can have an origin.\n        if (this.tabBodyWrapper.nativeElement.offsetHeight) {\n            wrapper.style.height = `${tabHeight}px`;\n        }\n    }\n\n    /** Removes the height of the tab body wrapper. */\n    removeTabBodyWrapperHeight(): void {\n        this.tabBodyWrapperHeight = this.tabBodyWrapper.nativeElement.clientHeight;\n        this.tabBodyWrapper.nativeElement.style.height = '';\n        this.animationDone.emit();\n    }\n\n    /** Handle click events, setting new selected index if appropriate. */\n    handleClick(tab: McTab, tabHeader: McTabHeader, index: number) {\n        if (!tab.disabled) {\n            this.selectedIndex = tabHeader.focusIndex = index;\n        }\n    }\n\n    /** Retrieves the tabindex for the tab. */\n    getTabIndex(tab: McTab, index: number): number | null {\n        if (tab.disabled) {\n            return null;\n        }\n\n        return this.selectedIndex === index ? 0 : -1;\n    }\n\n    private createChangeEvent(index: number): McTabChangeEvent {\n        const event = new McTabChangeEvent();\n        event.index = index;\n        if (this.tabs && this.tabs.length) {\n            event.tab = this.tabs.toArray()[index];\n        }\n\n        return event;\n    }\n\n    /**\n     * Subscribes to changes in the tab labels. This is needed, because the @Input for the label is\n     * on the McTab component, whereas the data binding is inside the McTabGroup. In order for the\n     * binding to be updated, we need to subscribe to changes in it and trigger change detection\n     * manually.\n     */\n    private subscribeToTabLabels() {\n        if (this.tabLabelSubscription) {\n            this.tabLabelSubscription.unsubscribe();\n        }\n\n        this.tabLabelSubscription = merge(...this.tabs.map((tab) => tab.stateChanges))\n            .subscribe(() => this.changeDetectorRef.markForCheck());\n    }\n\n    /** Clamps the given index to the bounds of 0 and the tabs length. */\n    private clampTabIndex(index: number | null): number {\n        // Note the `|| 0`, which ensures that values like NaN can't get through\n        // and which would otherwise throw the component into an infinite loop\n        // (since Mch.max(NaN, 0) === NaN).\n        return Math.min(this.tabs.length - 1, Math.max(index || 0, 0));\n    }\n}\n","import {\n    Attribute,\n    ChangeDetectionStrategy,\n    Component,\n    Directive,\n    ElementRef,\n    Input,\n    OnDestroy,\n    ViewEncapsulation\n} from '@angular/core';\nimport { FocusMonitor } from '@ptsecurity/cdk/a11y';\nimport {\n    CanColor,\n    CanColorCtor,\n    CanDisable,\n    CanDisableCtor,\n    HasTabIndex,\n    HasTabIndexCtor,\n    mixinColor,\n    mixinDisabled,\n    mixinTabIndex\n} from '@ptsecurity/mosaic/core';\n\n\n// Boilerplate for applying mixins to McTabNav.\n/** @docs-private */\nexport class McTabNavBase {\n    // tslint:disable-next-line:naming-convention\n    constructor(public _elementRef: ElementRef) {}\n}\nexport const mcTabNavMixinBase: CanColorCtor &\n    typeof McTabNavBase = mixinColor(McTabNavBase);\n\n/**\n * Navigation component matching the styles of the tab group header.\n */\n@Component({\n    selector: '[mc-tab-nav-bar]',\n    exportAs: 'mcTabNavBar, mcTabNav',\n    inputs: ['color'],\n    templateUrl: 'tab-nav-bar.html',\n    styleUrls: ['tab-nav-bar.css'],\n    host: { class: 'mc-tab-nav-bar' },\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class McTabNav extends mcTabNavMixinBase\n    implements CanColor {\n        constructor(elementRef: ElementRef) {\n            super(elementRef);\n        }\n     }\n\n// Boilerplate for applying mixins to McTabLink.\nexport class McTabLinkBase {}\nexport const mcTabLinkMixinBase: HasTabIndexCtor & CanDisableCtor &\n    typeof McTabLinkBase = mixinTabIndex(mixinDisabled(McTabLinkBase));\n\n/**\n * Link inside of a `mc-tab-nav-bar`.\n */\n@Directive({\n    selector: '[mc-tab-link], [mcTabLink]',\n    exportAs: 'mcTabLink',\n    inputs: ['disabled', 'tabIndex'],\n    host: {\n        class: 'mc-tab-link',\n        '[attr.aria-current]': 'active',\n        '[attr.aria-disabled]': 'disabled.toString()',\n        '[attr.tabIndex]': 'tabIndex',\n        '[class.mc-disabled]': 'disabled',\n        '[class.mc-active]': 'active'\n    }\n})\nexport class McTabLink extends mcTabLinkMixinBase\n    implements OnDestroy, CanDisable, HasTabIndex {\n    /** Whether the link is active. */\n    @Input()\n    get active(): boolean {\n        return this.isActive;\n    }\n    set active(value: boolean) {\n        if (value !== this.isActive) {\n            this.isActive = value;\n        }\n    }\n\n    /** Whether the tab link is active or not. */\n    protected isActive: boolean = false;\n\n    constructor(\n        public elementRef: ElementRef,\n        @Attribute('tabindex') tabIndex: string,\n        private focusMonitor: FocusMonitor\n    ) {\n        super();\n\n        this.tabIndex = parseInt(tabIndex) || 0;\n        this.focusMonitor.monitor(this.elementRef.nativeElement);\n    }\n\n    ngOnDestroy() {\n        this.focusMonitor.stopMonitoring(this.elementRef.nativeElement);\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { A11yModule } from '@ptsecurity/cdk/a11y';\nimport { PortalModule } from '@ptsecurity/cdk/portal';\nimport { McCommonModule } from '@ptsecurity/mosaic/core';\n\nimport { McTab } from './tab';\nimport { McTabBody, McTabBodyPortal } from './tab-body';\nimport { McTabContent } from './tab-content';\nimport {\n    McTabGroup,\n    McLightTabsCssStyler,\n    McAlignTabsCenterCssStyler,\n    McAlignTabsEndCssStyler,\n    McStretchTabsCssStyler\n} from './tab-group';\nimport { McTabHeader } from './tab-header';\nimport { McTabLabel } from './tab-label';\nimport { McTabLabelWrapper } from './tab-label-wrapper';\nimport { McTabLink, McTabNav } from './tab-nav-bar/tab-nav-bar';\n\n\n@NgModule({\n    imports: [\n        CommonModule,\n        McCommonModule,\n        PortalModule,\n        A11yModule\n    ],\n    // Don't export all components because some are only to be used internally.\n    exports: [\n        McCommonModule,\n        McTabGroup,\n        McTabLabel,\n        McTab,\n        McTabNav,\n        McTabLink,\n        McTabContent,\n        McLightTabsCssStyler,\n        McAlignTabsCenterCssStyler,\n        McAlignTabsEndCssStyler,\n        McStretchTabsCssStyler\n    ],\n    declarations: [\n        McTabGroup,\n        McTabLabel,\n        McTab,\n        McTabLabelWrapper,\n        McTabNav,\n        McTabLink,\n        McTabBody,\n        McTabBodyPortal,\n        McTabHeader,\n        McTabContent,\n        McLightTabsCssStyler,\n        McAlignTabsCenterCssStyler,\n        McAlignTabsEndCssStyler,\n        McStretchTabsCssStyler\n    ]\n})\nexport class McTabsModule {}\n","import {\n    ElementRef,\n    QueryList,\n    ContentChildren,\n    Component,\n    ChangeDetectionStrategy,\n    ViewEncapsulation\n} from '@angular/core';\n\nimport {\n    mixinColor,\n    CanColor,\n    CanColorCtor,\n    CanDisable,\n    CanDisableCtor,\n    mixinDisabled\n} from '@ptsecurity/mosaic/core';\nimport { McIcon } from '@ptsecurity/mosaic/icon';\n\n\nexport class McTagBase {\n    constructor(public _elementRef: ElementRef) {}\n}\n\nexport const _McTagMixinBase: CanColorCtor & CanDisableCtor & typeof McTagBase = mixinColor(mixinDisabled(McTagBase));\n\n\n@Component({\n    selector: 'mc-tag',\n    templateUrl: 'tag.partial.html',\n    styleUrls: ['./tag.css'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n    host: {\n        class: 'mc-tag',\n        '[class.mc-disabled]': 'disabled'\n    },\n    inputs: ['color', 'disabled']\n})\nexport class McTag extends _McTagMixinBase implements CanColor, CanDisable {\n    @ContentChildren(McIcon) contentChildren: QueryList<McIcon>;\n\n    nativeElement: HTMLElement;\n\n    private _disabled: boolean = false;\n\n    get disabled() {\n        return this._disabled;\n    }\n\n    set disabled(value: any) {\n        if (value !== this.disabled) { this._disabled = value; }\n    }\n\n    constructor(elementRef: ElementRef) {\n        super(elementRef);\n\n        this.nativeElement = elementRef.nativeElement;\n    }\n\n    ngAfterContentInit() {\n        this._addClassModificatorForIcons();\n    }\n\n    _addClassModificatorForIcons() {\n        const icons = this.contentChildren.map((item) => item._elementRef.nativeElement);\n\n        if (icons.length === 1) {\n            const iconElement = icons[0];\n\n            if (!iconElement.previousElementSibling && !iconElement.nextElementSibling) {\n                if (iconElement.nextSibling) {\n                    iconElement.classList.add('mc-icon_left');\n                    this.nativeElement.classList.add('mc-left-icon');\n                }\n\n                if (iconElement.previousSibling) {\n                    iconElement.classList.add('mc-icon_right');\n                    this.nativeElement.classList.add('mc-right-icon');\n                }\n            }\n        } else if (icons.length > 1) {\n            const firstIconElement = icons[0];\n            const secondIconElement = icons[1];\n\n            firstIconElement.classList.add('mc-icon_left');\n            secondIconElement.classList.add('mc-icon_right');\n        }\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { PlatformModule } from '@ptsecurity/cdk/platform';\n\nimport { McTag } from './tag.component';\n\n\n@NgModule({\n    imports: [\n        CommonModule,\n        PlatformModule\n    ],\n    exports: [\n        McTag\n    ],\n    declarations: [\n        McTag\n    ]\n})\nexport class McTagModule {}\n","import { fromEvent, Observable, Subscription } from 'rxjs';\nimport { debounceTime } from 'rxjs/operators';\n\nimport {\n    AfterViewInit,\n    Component, Directive,\n    ElementRef,\n    HostBinding,\n    Input,\n    OnDestroy,\n    OnInit,\n    ViewEncapsulation,\n    ContentChild,\n    TemplateRef,\n    ChangeDetectorRef,\n    ChangeDetectionStrategy,\n    ViewChild\n} from '@angular/core';\nimport { FocusMonitor, FocusOrigin } from '@ptsecurity/cdk/a11y';\nimport { SPACE } from '@ptsecurity/cdk/keycodes';\nimport { Platform } from '@ptsecurity/cdk/platform';\nimport { CanDisable, CanDisableCtor, mixinDisabled } from '@ptsecurity/mosaic/core';\n\n\nconst COLLAPSED_CLASS: string = 'mc-navbar-collapsed-title';\nconst MC_ICON = 'mc-icon';\nconst MC_NAVBAR = 'mc-navbar';\nconst MC_NAVBAR_CONTAINER = 'mc-navbar-container';\nconst MC_NAVBAR_ITEM = 'mc-navbar-item';\nconst MC_NAVBAR_BRAND = 'mc-navbar-brand';\nconst MC_NAVBAR_TITLE = 'mc-navbar-title';\nconst MC_NAVBAR_LOGO = 'mc-navbar-logo';\n\nexport type McNavbarContainerPositionType = 'left' | 'right';\n\nexport interface IMcNavbarDropdownItem {\n    link?: string;\n    text: string;\n}\n\n@Directive({\n    selector: MC_NAVBAR_LOGO,\n    host: {\n        class: MC_NAVBAR_LOGO\n    }\n})\nexport class McNavbarLogo {}\n\n@Directive({\n    selector: MC_NAVBAR_BRAND,\n    host: {\n        class: MC_NAVBAR_BRAND\n    }\n})\nexport class McNavbarBrand {}\n\n@Directive({\n    selector: MC_NAVBAR_TITLE,\n    host: {\n        class: MC_NAVBAR_TITLE\n    }\n})\nexport class McNavbarTitle {}\n\nexport class McNavbarItemBase {\n    constructor(public _elementRef: ElementRef) {}\n}\n\nexport const _McNavbarMixinBase: CanDisableCtor & typeof McNavbarItemBase = mixinDisabled(McNavbarItemBase);\n\n@Component({\n    selector: MC_NAVBAR_ITEM,\n    template: `\n        <a\n            [attr.tabindex]=\\\"disabled ? -1 : tabIndex\\\"\n            (click)=\"handleClickByItem()\"\n            (keydown)=\"handleKeydown($event)\"\n            class=\"mc-navbar-item\"\n        >\n            <ng-content></ng-content>\n            <i *ngIf=\"hasDropdownContent\" mc-icon=\"mc-angle-down-M_16\"></i>\n        </a>\n        <ul\n            #dropdownContent\n            *ngIf=\"hasDropdownContent\"\n            [ngClass]=\"{ 'is-collapsed': isCollapsed }\"\n            class=\"mc-navbar-dropdown\"\n        >\n            <li\n                *ngFor=\"let item of dropdownItems\"\n                (click)=\"handleClickByDropdownItem()\"\n                class=\"mc-navbar-dropdown-item\"\n            >\n                <ng-container *ngIf=\"dropdownItemTmpl\">\n                    <ng-container *ngTemplateOutlet=\"dropdownItemTmpl; context: { $implicit: item }\"></ng-container>\n                </ng-container>\n                <a\n                    *ngIf=\"!dropdownItemTmpl\"\n                    [attr.href]=\"item.link\"\n                    [ngClass]=\"{ 'is-active': isActiveDropdownLink(item.link) }\"\n                    class=\"mc-navbar-dropdown-link\"\n                >{{ item.text }}</a>\n            </li>\n        </ul>\n    `,\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    inputs: ['disabled'],\n    host: {\n        '[attr.disabled]': 'disabled || null',\n        '[attr.tabindex]': '-1'\n    }\n})\nexport class McNavbarItem extends _McNavbarMixinBase implements OnInit, AfterViewInit, OnDestroy, CanDisable {\n\n    @Input()\n    tabIndex: number = 0;\n\n    @Input()\n    dropdownItems: IMcNavbarDropdownItem[] = [];\n\n    @Input()\n    set collapsedTitle(value: string) {\n        this.elementRef.nativeElement.setAttribute('computedTitle', encodeURI(value));\n    }\n\n    @ContentChild('dropdownItemTmpl', { read: TemplateRef })\n    dropdownItemTmpl: TemplateRef<IMcNavbarDropdownItem>;\n\n    @ViewChild('dropdownContent', { read: ElementRef })\n    dropdownContent: ElementRef;\n\n    get hasDropdownContent() {\n        return this.dropdownItems.length > 0;\n    }\n\n    isCollapsed: boolean = true;\n\n    private _subscription: Subscription = new Subscription();\n    private _focusMonitor$: Observable<FocusOrigin>;\n\n    private get _dropdownElements(): HTMLElement[] {\n        return this.dropdownContent ? this.dropdownContent.nativeElement.querySelectorAll('li > *') : [];\n    }\n\n    constructor(\n        public  elementRef: ElementRef,\n        private _focusMonitor: FocusMonitor,\n        private _platform: Platform,\n        private _cdRef: ChangeDetectorRef\n    ) {\n        super(elementRef);\n    }\n\n    ngOnInit() {\n        this.denyClickIfDisabled();\n\n        this._focusMonitor$ = this._focusMonitor.monitor(this.elementRef.nativeElement, true);\n\n        if (this.hasDropdownContent) {\n            this.listenClickOutside();\n        }\n    }\n\n    ngAfterViewInit() {\n        if (!this.hasDropdownContent) {\n            return;\n        }\n\n        this.startListenFocusDropdownItems();\n    }\n\n    ngOnDestroy() {\n        this._subscription.unsubscribe();\n        this._focusMonitor.stopMonitoring(this.elementRef.nativeElement);\n        this.stopListenFocusDropdownItems();\n    }\n\n    isActiveDropdownLink(link: string): boolean {\n        if (!this._platform.isBrowser) {\n            return false;\n        }\n\n        return window.location.href.indexOf(link) >= 0;\n    }\n\n    handleClickByItem() {\n        this.toggleDropdown();\n    }\n\n    handleKeydown($event: KeyboardEvent) {\n        const isNavbarItem = ($event.target as HTMLElement).classList.contains(MC_NAVBAR_ITEM);\n\n        // tslint:disable-next-line\n        if (this.hasDropdownContent && $event.keyCode === SPACE && isNavbarItem) {\n            this.toggleDropdown();\n        }\n    }\n\n    handleClickByDropdownItem() {\n        this.forceCloseDropdown();\n    }\n\n    private listenClickOutside() {\n        this._subscription.add(\n            this._focusMonitor$.subscribe((origin) => {\n                if (origin === null) {\n                    this.forceCloseDropdown();\n                }\n            })\n        );\n    }\n\n    private toggleDropdown() {\n        this.isCollapsed = !this.isCollapsed;\n    }\n\n    private forceCloseDropdown() {\n        this.isCollapsed = true;\n        this._cdRef.detectChanges();\n    }\n\n    private startListenFocusDropdownItems() {\n        this._dropdownElements.forEach((el) => {\n            this._focusMonitor.monitor(el, true);\n        });\n    }\n\n    private stopListenFocusDropdownItems() {\n        this._dropdownElements.forEach((el) => {\n            this._focusMonitor.stopMonitoring(el);\n        });\n    }\n\n    // This method is required due to angular 2 issue https://github.com/angular/angular/issues/11200\n    private denyClickIfDisabled() {\n        const events: Event[] = this.elementRef.nativeElement.eventListeners('click');\n\n        events.forEach((event) => this.elementRef.nativeElement.removeEventListener('click', event));\n\n        this.elementRef.nativeElement.addEventListener('click', (event: MouseEvent) => {\n            if (this.elementRef.nativeElement.hasAttribute('disabled')) {\n                event.stopImmediatePropagation();\n            }\n        }, true);\n\n        events.forEach((event) => this.elementRef.nativeElement.addEventListener('click', event));\n    }\n}\n\n@Directive({\n    selector: MC_NAVBAR_CONTAINER\n})\nexport class McNavbarContainer {\n    @Input()\n    position: McNavbarContainerPositionType = 'left';\n\n    @HostBinding('class')\n    get cssClasses(): string {\n        return this.position === 'left' ? 'mc-navbar-left' : 'mc-navbar-right';\n    }\n}\n\nclass CollapsibleItem {\n    private _collapsed: boolean = false;\n\n    constructor(\n        public element: HTMLElement,\n        public width: number\n    ) {}\n\n    processCollapsed(collapsed: boolean) {\n        this._collapsed = collapsed;\n\n        this.updateCollapsedClass();\n    }\n\n    private updateCollapsedClass() {\n        if (this._collapsed) {\n            this.element.classList.add(COLLAPSED_CLASS);\n        } else {\n            this.element.classList.remove(COLLAPSED_CLASS);\n        }\n\n    }\n}\n\nclass CachedItemWidth {\n\n    get canCollapse(): boolean {\n        return this.itemsForCollapse.length > 0;\n    }\n\n    private _collapsedItemsWidth: number;\n\n    get collapsedItemsWidth(): number {\n        if (this._collapsedItemsWidth !== undefined) {\n            return this._collapsedItemsWidth;\n        }\n\n        this.calculateAndCacheCollapsedItemsWidth();\n\n        return this._collapsedItemsWidth;\n    }\n\n    constructor(\n        public element: HTMLElement,\n        public width: number,\n        public itemsForCollapse: CollapsibleItem[] = []\n    ) {}\n\n    processCollapsed(collapsed: boolean) {\n        if (this.itemsForCollapse.length > 0) {\n            this.updateTitle(collapsed);\n        }\n\n        this.itemsForCollapse.forEach((item) => item.processCollapsed(collapsed));\n    }\n\n    private calculateAndCacheCollapsedItemsWidth() {\n        this._collapsedItemsWidth = this.itemsForCollapse\n            .reduce((acc, item) => acc + item.width, 0);\n    }\n\n    private getTitle(): string {\n        const computedTitle = this.element.getAttribute('computedTitle');\n\n        return computedTitle\n            ? decodeURI(computedTitle)\n            : (this.itemsForCollapse.length > 0 ? this.itemsForCollapse[0].element.innerText : '');\n    }\n\n    private updateTitle(collapsed: boolean) {\n        if (collapsed) {\n            this.element.setAttribute('title', this.getTitle());\n        } else {\n            this.element.removeAttribute('title');\n        }\n    }\n}\n\n\n@Component({\n    selector: MC_NAVBAR,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    template: `\n        <nav class=\"mc-navbar\">\n            <ng-content select=\"[${MC_NAVBAR_CONTAINER}],${MC_NAVBAR_CONTAINER}\"></ng-content>\n        </nav>\n    `,\n    styleUrls: ['./navbar.css'],\n    encapsulation: ViewEncapsulation.None\n})\nexport class McNavbar implements AfterViewInit, OnDestroy {\n\n    private readonly forceRecalculateItemsWidth: boolean = false;\n    private readonly resizeDebounceInterval: number = 100;\n    private readonly firstLevelElement: string = MC_NAVBAR_CONTAINER;\n    private readonly secondLevelElements: string[] = [\n        MC_NAVBAR_ITEM,\n        MC_NAVBAR_BRAND,\n        MC_NAVBAR_TITLE\n    ];\n\n    private _totalItemsWidths: number;\n    private _itemsWidths: CachedItemWidth[];\n\n    private get maxAllowedWidth(): number {\n        return this._elementRef.nativeElement.querySelector('nav').getBoundingClientRect().width;\n    }\n\n    private get itemsWidths(): CachedItemWidth[] {\n        if (this._itemsWidths !== undefined && !this.forceRecalculateItemsWidth) {\n            return this._itemsWidths;\n        }\n\n        this.calculateAndCacheItemsWidth();\n\n        return this._itemsWidths;\n    }\n\n    private get totalItemsWidth(): number {\n        if (this._totalItemsWidths !== undefined && !this.forceRecalculateItemsWidth) {\n            return this._totalItemsWidths;\n        }\n\n        this.calculateAndCacheTotalItemsWidth();\n\n        return this._totalItemsWidths;\n    }\n\n    private _resizeSubscription: Subscription;\n\n    constructor(\n        private _elementRef: ElementRef\n    ) {\n        const resizeObserver = fromEvent(window, 'resize')\n            .pipe(debounceTime(this.resizeDebounceInterval));\n\n        this._resizeSubscription = resizeObserver.subscribe(this.updateCollapsed.bind(this));\n    }\n\n    updateCollapsed(): void {\n        let collapseDelta = this.totalItemsWidth - this.maxAllowedWidth;\n\n        for (let i = this.itemsWidths.length - 1; i >= 0; i--) {\n            const item = this.itemsWidths[i];\n\n            if (!item.canCollapse) {\n                continue;\n            }\n\n            item.processCollapsed(collapseDelta > 0);\n            collapseDelta -= item.collapsedItemsWidth;\n        }\n    }\n\n    ngAfterViewInit(): void {\n        // Note: this wait is required for loading and rendering fonts for icons;\n        // unfortunately we cannot control font rendering\n        setTimeout(() => this.updateCollapsed(), 0);\n    }\n\n    ngOnDestroy() {\n        this._resizeSubscription.unsubscribe();\n    }\n\n    private calculateAndCacheTotalItemsWidth() {\n        this._totalItemsWidths = this.itemsWidths\n            .reduce((acc, item) => acc + item.width, 0);\n    }\n\n    private getOuterElementWidth(element: HTMLElement): number {\n        const baseWidth  = element.getBoundingClientRect().width;\n        const marginRight = parseInt(getComputedStyle(element).getPropertyValue('margin-right'));\n        const marginLeft = parseInt(getComputedStyle(element).getPropertyValue('margin-left'));\n\n        return baseWidth + marginRight + marginLeft;\n    }\n\n    private calculateAndCacheItemsWidth() {\n        const allItemsSelector = this.secondLevelElements\n            .map((e: string) => `${this.firstLevelElement}>${e}`);\n        const allItems: HTMLElement[] = Array.from(this._elementRef.nativeElement.querySelectorAll(allItemsSelector));\n\n        this._itemsWidths = allItems\n            .map((el) => new CachedItemWidth(el, this.getOuterElementWidth(el), this.getItemsForCollapse(el)));\n    }\n\n    private getItemsForCollapse(element: HTMLElement): CollapsibleItem[] {\n        const icon = element.querySelector(`[${MC_ICON}],${MC_NAVBAR_LOGO},[${MC_NAVBAR_LOGO}]`);\n\n        if (!icon) {\n            return [];\n        }\n\n        return Array.from(element.querySelectorAll(MC_NAVBAR_TITLE))\n            .map((el) => new CollapsibleItem(<HTMLElement> el, el.getBoundingClientRect().width));\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { A11yModule } from '@ptsecurity/cdk/a11y';\nimport { PlatformModule } from '@ptsecurity/cdk/platform';\n\nimport { McIconModule } from '@ptsecurity/mosaic/icon';\n\nimport {\n    McNavbar,\n    McNavbarContainer,\n    McNavbarItem,\n    McNavbarTitle,\n    McNavbarBrand,\n    McNavbarLogo\n} from './navbar.component';\n\n\n@NgModule({\n    imports: [\n        CommonModule,\n        A11yModule,\n        PlatformModule,\n        McIconModule\n    ],\n    exports: [\n        McNavbar,\n        McNavbarContainer,\n        McNavbarTitle,\n        McNavbarItem,\n        McNavbarBrand,\n        McNavbarLogo\n    ],\n    declarations: [\n        McNavbar,\n        McNavbarContainer,\n        McNavbarTitle,\n        McNavbarItem,\n        McNavbarBrand,\n        McNavbarLogo\n    ]\n})\nexport class McNavbarModule {}\n","import {\n    ChangeDetectionStrategy,\n    Component,\n    ViewEncapsulation,\n    ElementRef,\n    Input\n} from '@angular/core';\nimport { CanColor, CanColorCtor, mixinColor, ThemePalette } from '@ptsecurity/mosaic/core';\n\n\nexport type ProgressBarMode = 'determinate' | 'indeterminate';\n\nlet idIterator = 0;\n\nconst MIN_PERCENT = 0;\nconst MAX_PERCENT = 100;\n\nexport class McProgressBarBase {\n    constructor(public _elementRef: ElementRef) {}\n}\n\nexport const _McProgressBarMixinBase:\n    CanColorCtor &\n    typeof McProgressBarBase =\n        mixinColor(McProgressBarBase);\n\n@Component({\n    selector: 'mc-progress-bar',\n    templateUrl: './progress-bar.component.html',\n    styleUrls: ['./progress-bar.css'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n    host: {\n        class: 'mc-progress-bar',\n        '[attr.id]': 'id'\n    }\n})\nexport class McProgressBar extends _McProgressBarMixinBase implements CanColor {\n    @Input() id: string = `mc-progress-bar-${idIterator++}`;\n    @Input() value: number = 0;\n    @Input() mode: ProgressBarMode = 'determinate';\n    @Input() color: ThemePalette = ThemePalette.Primary;\n\n    constructor(elementRef: ElementRef) {\n        super(elementRef);\n    }\n\n    get percentage(): number {\n        return Math.max(MIN_PERCENT, Math.min(MAX_PERCENT, this.value)) / MAX_PERCENT;\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { PlatformModule } from '@ptsecurity/cdk/platform';\n\nimport {\n    McProgressBar\n} from './progress-bar.component';\n\n\n@NgModule({\n    imports: [\n        CommonModule,\n        PlatformModule\n    ],\n    exports: [\n        McProgressBar\n    ],\n    declarations: [\n        McProgressBar\n    ]\n})\nexport class McProgressBarModule {}\n","import {\n    ChangeDetectionStrategy,\n    Component,\n    ViewEncapsulation,\n    ElementRef,\n    Input\n} from '@angular/core';\nimport { CanColor, CanColorCtor, mixinColor, ThemePalette } from '@ptsecurity/mosaic/core';\n\n\nexport type ProgressSpinnerMode = 'determinate' | 'indeterminate';\n\nlet idIterator = 0;\n\nconst MIN_PERCENT = 0;\nconst MAX_PERCENT = 100;\n\nexport class McProgressSpinnerBase {\n    constructor(public _elementRef: ElementRef) {}\n}\n\nexport const _McProgressSpinnerMixinBase:\n    CanColorCtor &\n    typeof McProgressSpinnerBase =\n        mixinColor(McProgressSpinnerBase);\n\nconst MAX_DASH_ARRAY = 273;\n\n@Component({\n    selector: 'mc-progress-spinner',\n    templateUrl: './progress-spinner.component.html',\n    styleUrls: ['./progress-spinner.css'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n    host: {\n        class: 'mc-progress-spinner',\n        '[attr.id]': 'id'\n    }\n})\nexport class McProgressSpinner extends _McProgressSpinnerMixinBase implements CanColor {\n    @Input() id: string = `mc-progress-spinner-${idIterator++}`;\n    @Input() value: number = 0;\n    @Input() mode: ProgressSpinnerMode = 'determinate';\n    @Input() color: ThemePalette = ThemePalette.Primary;\n\n    constructor(elementRef: ElementRef) {\n        super(elementRef);\n    }\n\n    get percentage(): number {\n        return Math.max(MIN_PERCENT, Math.min(MAX_PERCENT, this.value)) / MAX_PERCENT;\n    }\n\n    get dashOffsetPercent(): string {\n        return `${MAX_DASH_ARRAY - this.percentage * MAX_DASH_ARRAY}%`;\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { PlatformModule } from '@ptsecurity/cdk/platform';\n\nimport { McProgressSpinner } from './progress-spinner.component';\n\n\n@NgModule({\n    imports: [\n        CommonModule,\n        PlatformModule\n    ],\n    exports: [\n        McProgressSpinner\n    ],\n    declarations: [\n        McProgressSpinner\n    ]\n})\nexport class McProgressSpinnerModule {}\n","import {\n    AfterContentInit,\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component, ContentChildren, Directive, ElementRef, EventEmitter, forwardRef,\n    Input, OnDestroy, OnInit, Optional, Output, QueryList,\n    ViewChild,\n    ViewEncapsulation\n} from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\n\nimport { UniqueSelectionDispatcher } from '@ptsecurity/cdk/collections';\n\nimport {\n    CanColor, CanColorCtor,\n    CanDisable, CanDisableCtor,\n    HasTabIndex, HasTabIndexCtor,\n    mixinColor,\n    mixinDisabled,\n    mixinTabIndex,\n    toBoolean\n} from '@ptsecurity/mosaic/core';\n\n\n// Increasing integer for generating unique ids for radio components.\nlet nextUniqueId = 0;\n\n/** Change event object emitted by McRadio. */\nexport class McRadioChange {\n    constructor(\n        /** The McRadioButton that emits the change event. */\n        public source: McRadioButton,\n        /** The value of the McRadioButton. */\n        public value: any) {}\n}\n\n// Boilerplate for applying mixins to McRadioGroup.\n/** @docs-private */\nexport class McRadioGroupBase {}\nexport const _McRadioGroupMixinBase: CanDisableCtor & typeof McRadioGroupBase = mixinDisabled(McRadioGroupBase);\n\n/**\n * Provider Expression that allows mc-radio-group to register as a ControlValueAccessor. This\n * allows it to support [(ngModel)] and ngControl.\n * @docs-private\n */\nexport const MC_RADIO_GROUP_CONTROL_VALUE_ACCESSOR: any = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => McRadioGroup),\n    multi: true\n};\n\n@Directive({\n    selector: 'mc-radio-group',\n    exportAs: 'mcRadioGroup',\n    providers: [MC_RADIO_GROUP_CONTROL_VALUE_ACCESSOR],\n    host: {\n        role: 'radiogroup',\n        class: 'mc-radio-group'\n    },\n    inputs: ['disabled']\n})\nexport class McRadioGroup extends _McRadioGroupMixinBase\n    implements AfterContentInit, ControlValueAccessor, CanDisable {\n\n    /** Name of the radio button group. All radio buttons inside this group will use this name. */\n    @Input()\n    get name(): string { return this._name; }\n    set name(value: string) {\n        this._name = value;\n        this.updateRadioButtonNames();\n    }\n\n    /** Whether the labels should appear after or before the radio-buttons. Defaults to 'after' */\n    @Input()\n    get labelPosition(): 'before' | 'after' {\n        return this._labelPosition;\n    }\n    set labelPosition(v) {\n        this._labelPosition = v === 'before' ? 'before' : 'after';\n        this.markRadiosForCheck();\n    }\n\n    /** Value of the radio button. */\n    @Input()\n    get value(): any { return this._value; }\n    set value(newValue: any) {\n        if (this._value !== newValue) {\n            // Set this before proceeding to ensure no circular loop occurs with selection.\n            this._value = newValue;\n\n            this.updateSelectedRadioFromValue();\n            this.checkSelectedRadioButton();\n        }\n    }\n\n    /** Whether the radio button is selected. */\n    @Input()\n    get selected() { return this._selected; }\n    set selected(selected: McRadioButton | null) {\n        this._selected = selected;\n        this.value = selected ? selected.value : null;\n        this.checkSelectedRadioButton();\n    }\n\n    /** Whether the radio group is disabled */\n    @Input()\n    get disabled(): boolean { return this._disabled; }\n    set disabled(value) {\n        this._disabled = toBoolean(value);\n        this.markRadiosForCheck();\n    }\n\n    /** Whether the radio group is required */\n    @Input()\n    get required(): boolean { return this._required; }\n    set required(value: boolean) {\n        this._required = toBoolean(value);\n        this.markRadiosForCheck();\n    }\n\n    /**\n     * Event emitted when the group value changes.\n     * Change events are only emitted when the value changes due to user interaction with\n     * a radio button (the same behavior as `<input type-\"radio\">`).\n     */\n    @Output() readonly change: EventEmitter<McRadioChange> = new EventEmitter<McRadioChange>();\n\n    /** Child radio buttons. */\n    @ContentChildren(forwardRef(() => McRadioButton), { descendants: true })\n    _radios: QueryList<McRadioButton>;\n\n    /**\n     * Selected value for group. Should equal the value of the selected radio button if there *is*\n     * a corresponding radio button with a matching value. If there is *not* such a corresponding\n     * radio button, this value persists to be applied in case a new radio button is added with a\n     * matching value.\n     */\n    private _value: any = null;\n\n    /** The HTML name attribute applied to radio buttons in this group. */\n    private _name: string = `mc-radio-group-${nextUniqueId++}`;\n\n    /** The currently selected radio button. Should match value. */\n    private _selected: McRadioButton | null = null;\n\n    /** Whether the `value` has been set to its initial value. */\n    private _isInitialized: boolean = false;\n\n    /** Whether the labels should appear after or before the radio-buttons. Defaults to 'after' */\n    private _labelPosition: 'before' | 'after' = 'after';\n\n    /** Whether the radio group is disabled. */\n    private _disabled: boolean = false;\n\n    /** Whether the radio group is required. */\n    private _required: boolean = false;\n\n    constructor(\n        private readonly _changeDetector: ChangeDetectorRef\n    ) {\n        super();\n    }\n\n    /** The method to be called in order to update ngModel */\n    // tslint:disable-next-line\n    controlValueAccessorChangeFn: (value: any) => void = () => {};\n\n    /**\n     * onTouch function registered via registerOnTouch (ControlValueAccessor).\n     * @docs-private\n     */\n    // tslint:disable-next-line\n    onTouched: () => any = () => {};\n\n    checkSelectedRadioButton() {\n        if (this._selected && !this._selected.checked) {\n            this._selected.checked = true;\n        }\n    }\n\n    /**\n     * Initialize properties once content children are available.\n     * This allows us to propagate relevant attributes to associated buttons.\n     */\n    ngAfterContentInit() {\n        // Mark this component as initialized in AfterContentInit because the initial value can\n        // possibly be set by NgModel on McRadioGroup, and it is possible that the OnInit of the\n        // NgModel occurs *after* the OnInit of the McRadioGroup.\n        this._isInitialized = true;\n    }\n\n    /**\n     * Mark this group as being \"touched\" (for ngModel). Meant to be called by the contained\n     * radio buttons upon their blur.\n     */\n    touch() {\n        if (this.onTouched) {\n            this.onTouched();\n        }\n    }\n\n    /** Dispatch change event with current selection and group value. */\n    emitChangeEvent(): void {\n        if (this._isInitialized) {\n            this.change.emit(new McRadioChange(this._selected!, this._value));\n        }\n    }\n\n    markRadiosForCheck() {\n        if (this._radios) {\n            this._radios.forEach((radio) => radio.markForCheck());\n        }\n    }\n\n    /**\n     * Sets the model value. Implemented as part of ControlValueAccessor.\n     */\n    writeValue(value: any) {\n        this.value = value;\n        this._changeDetector.markForCheck();\n    }\n\n    /**\n     * Registers a callback to be triggered when the model value changes.\n     * Implemented as part of ControlValueAccessor.\n     * @param fn Callback to be registered.\n     */\n    registerOnChange(fn: (value: any) => void) {\n        this.controlValueAccessorChangeFn = fn;\n    }\n\n    /**\n     * Registers a callback to be triggered when the control is touched.\n     * Implemented as part of ControlValueAccessor.\n     * @param fn Callback to be registered.\n     */\n    registerOnTouched(fn: any) {\n        this.onTouched = fn;\n    }\n\n    /**\n     * Sets the disabled state of the control. Implemented as a part of ControlValueAccessor.\n     * @param isDisabled Whether the control should be disabled.\n     */\n    setDisabledState(isDisabled: boolean) {\n        this.disabled = isDisabled;\n        this._changeDetector.markForCheck();\n    }\n\n    private updateRadioButtonNames(): void {\n        if (this._radios) {\n            this._radios.forEach((radio) => {\n                radio.name = this.name;\n            });\n        }\n    }\n\n    /** Updates the `selected` radio button from the internal _value state. */\n    private updateSelectedRadioFromValue(): void {\n        // If the value already matches the selected radio, do nothing.\n        const isAlreadySelected = this._selected !== null && this._selected.value === this._value;\n\n        if (this._radios != null && !isAlreadySelected) {\n            this._selected = null;\n            this._radios.forEach((radio) => {\n                radio.checked = this.value === radio.value;\n                if (radio.checked) {\n                    this._selected = radio;\n                }\n            });\n        }\n    }\n}\n\n\n// Boilerplate for applying mixins to McRadioButton.\n/** @docs-private */\nexport class McRadioButtonBase {\n    // Since the disabled property is manually defined for the McRadioButton and isn't set up in\n    // the mixin base class. To be able to use the tabindex mixin, a disabled property must be\n    // defined to properly work.\n    disabled: boolean;\n\n    constructor(public _elementRef: ElementRef) {}\n}\n\nexport const _McRadioButtonMixinBase:\n    CanColorCtor &\n    HasTabIndexCtor &\n    typeof McRadioButtonBase =\n        mixinColor(mixinTabIndex(McRadioButtonBase));\n\n\n@Component({\n    selector: 'mc-radio-button',\n    templateUrl: 'radio.component.html',\n    styleUrls: ['radio.css'],\n    inputs: ['color', 'tabIndex'],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    exportAs: 'mcRadioButton',\n    host: {\n        class: 'mc-radio-button',\n        '[attr.id]': 'id',\n        '[class.mc-checked]': 'checked',\n        '[class.mc-disabled]': 'disabled',\n        '(focus)': '_inputElement.nativeElement.focus()'\n    }\n})\nexport class McRadioButton extends _McRadioButtonMixinBase\n    implements OnInit, OnDestroy, CanColor, HasTabIndex {\n\n    private readonly _uniqueId: string = `mc-radio-${++nextUniqueId}`;\n\n    /* tslint:disable:member-ordering */\n\n    /** The unique ID for the radio button. */\n    @Input() id: string = this._uniqueId;\n\n    /** Analog to HTML 'name' attribute used to group radios for unique selection. */\n    @Input() name: string;\n\n    /** Used to set the 'aria-label' attribute on the underlying input element. */\n    @Input('aria-label') ariaLabel: string;\n\n    /** The 'aria-labelledby' attribute takes precedence as the element's text alternative. */\n    @Input('aria-labelledby') ariaLabelledby: string;\n\n    /** The 'aria-describedby' attribute is read after the element's label and field type. */\n    @Input('aria-describedby') ariaDescribedby: string;\n\n    /** Whether this radio button is checked. */\n    @Input()\n    get checked(): boolean { return this._checked; }\n    set checked(value: boolean) {\n        const newCheckedState = toBoolean(value);\n\n        if (this._checked !== newCheckedState) {\n            this._checked = newCheckedState;\n\n            if (newCheckedState && this.radioGroup && this.radioGroup.value !== this.value) {\n                this.radioGroup.selected = this;\n            } else if (!newCheckedState && this.radioGroup && this.radioGroup.value === this.value) {\n                // When unchecking the selected radio button, update the selected radio\n                // property on the group.\n                this.radioGroup.selected = null;\n            }\n\n            if (newCheckedState) {\n                // Notify all radio buttons with the same name to un-check.\n                this._radioDispatcher.notify(this.id, this.name);\n            }\n            this._changeDetector.markForCheck();\n        }\n    }\n\n    /** The value of this radio button. */\n    @Input()\n    get value(): any { return this._value; }\n    set value(value: any) {\n        if (this._value !== value) {\n            this._value = value;\n            if (this.radioGroup != null) {\n                if (!this.checked) {\n                    // Update checked when the value changed to match the radio group's value\n                    this.checked = this.radioGroup.value === value;\n                }\n                if (this.checked) {\n                    this.radioGroup.selected = this;\n                }\n            }\n        }\n    }\n\n    /** Whether the radio button is disabled. */\n    @Input()\n    get disabled(): boolean {\n        return this._disabled || (this.radioGroup != null && this.radioGroup.disabled);\n    }\n    set disabled(value: boolean) {\n        const newDisabledState = toBoolean(value);\n\n        if (this._disabled !== newDisabledState) {\n\n            this._disabled = newDisabledState;\n            this._changeDetector.markForCheck();\n        }\n    }\n\n    /** Whether the radio button is required. */\n    @Input()\n    get required(): boolean {\n        return this._required || (this.radioGroup && this.radioGroup.required);\n    }\n    set required(value: boolean) {\n        this._required = toBoolean(value);\n    }\n\n    /** Whether the label should appear after or before the radio button. Defaults to 'after' */\n    @Input()\n    get labelPosition(): 'before' | 'after' {\n        return this._labelPosition || (this.radioGroup && this.radioGroup.labelPosition) || 'after';\n    }\n    set labelPosition(value) {\n        this._labelPosition = value;\n    }\n    private _labelPosition: 'before' | 'after';\n\n    /** The native `<input type=radio>` element */\n    @ViewChild('input') _inputElement: ElementRef;\n\n    /**\n     * Event emitted when the checked state of this radio button changes.\n     * Change events are only emitted when the value changes due to user interaction with\n     * the radio button (the same behavior as `<input type-\"radio\">`).\n     */\n    @Output() readonly change: EventEmitter<McRadioChange> = new EventEmitter<McRadioChange>();\n\n    /** The parent radio group. May or may not be present. */\n    radioGroup: McRadioGroup;\n\n    @Input()\n    isFocused: boolean = false;\n\n    /** ID of the native input element inside `<mc-radio-button>` */\n    get inputId(): string { return `${this.id || this._uniqueId}-input`; }\n\n    /** Whether this radio is checked. */\n    private _checked: boolean = false;\n\n    /** Whether this radio is disabled. */\n    private _disabled: boolean;\n\n    /** Whether this radio is required. */\n    private _required: boolean;\n\n    /** Value assigned to this radio. */\n    private _value: any = null;\n\n    /** Unregister function for _radioDispatcher */\n    // tslint:disable-next-line\n    private readonly removeUniqueSelectionListener: () => void = () => {};\n\n    constructor(\n        @Optional() radioGroup: McRadioGroup,\n        elementRef: ElementRef,\n        private readonly _changeDetector: ChangeDetectorRef,\n        private readonly _radioDispatcher: UniqueSelectionDispatcher\n    ) {\n\n        super(elementRef);\n\n        this.radioGroup = radioGroup;\n\n        this.removeUniqueSelectionListener =\n            _radioDispatcher.listen((id: string, name: string) => {\n                if (id !== this.id && name === this.name) {\n                    this.checked = false;\n                }\n            });\n    }\n\n    ngOnInit() {\n        if (this.radioGroup) {\n            // If the radio is inside a radio group, determine if it should be checked\n            this.checked = this.radioGroup.value === this._value;\n            // Copy name from parent radio group\n            this.name = this.radioGroup.name;\n        }\n    }\n\n    ngOnDestroy() {\n        this.removeUniqueSelectionListener();\n    }\n\n    /** Focuses the radio button. */\n    // tslint:disable-next-line\n    focus(): void {}\n\n    /**\n     * Marks the radio button as needing checking for change detection.\n     * This method is exposed because the parent radio group will directly\n     * update bound properties of the radio button.\n     */\n    markForCheck() {\n        // When group value changes, the button will not be notified. Use `markForCheck` to explicit\n        // update radio button's status\n        this._changeDetector.markForCheck();\n    }\n\n    onInputClick(event: Event) {\n        // We have to stop propagation for click events on the visual hidden input element.\n        // By default, when a user clicks on a label element, a generated click event will be\n        // dispatched on the associated input element. Since we are using a label element as our\n        // root container, the click event on the `radio-button` will be executed twice.\n        // The real click event will bubble up, and the generated click event also tries to bubble up.\n        // This will lead to multiple click events.\n        // Preventing bubbling for the second event will solve that issue.\n        event.stopPropagation();\n    }\n\n    onInputChange(event: Event) {\n        // We always have to stop propagation on the change event.\n        // Otherwise the change event, from the input element, will bubble up and\n        // emit its event object to the `change` output.\n        event.stopPropagation();\n\n        const groupValueChanged = this.radioGroup && this.value !== this.radioGroup.value;\n        this.checked = true;\n        this.emitChangeEvent();\n\n        if (this.radioGroup) {\n            this.radioGroup.controlValueAccessorChangeFn(this.value);\n            this.radioGroup.touch();\n            if (groupValueChanged) {\n                this.radioGroup.emitChangeEvent();\n            }\n        }\n    }\n\n    /** Dispatch change event with current value. */\n    private emitChangeEvent(): void {\n        this.change.emit(new McRadioChange(this, this._value));\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { A11yModule } from '@ptsecurity/cdk/a11y';\nimport { McCommonModule } from '@ptsecurity/mosaic/core';\n\nimport { McRadioButton, McRadioGroup } from './radio.component';\n\n\n@NgModule({\n    imports: [CommonModule, A11yModule, McCommonModule],\n    exports: [McRadioGroup, McRadioButton],\n    declarations: [McRadioGroup, McRadioButton]\n})\nexport class McRadioModule {\n}\n","import { Directive, Input } from '@angular/core';\n\nimport { CdkTreeNodeDef } from '@ptsecurity/cdk/tree';\n\n\n@Directive({\n    selector: '[mcTreeNodeDef]',\n    inputs: ['when: mcTreeNodeDefWhen'],\n    providers: [{ provide: CdkTreeNodeDef, useExisting: McTreeNodeDef }]\n})\nexport class McTreeNodeDef<T> extends CdkTreeNodeDef<T> {\n    @Input('mcTreeNode') data: T;\n}\n","import { Directive, Input, OnInit } from '@angular/core';\nimport { CdkTreeNodePadding } from '@ptsecurity/cdk/tree';\n\n\n@Directive({\n    selector: '[mcTreeNodePadding]',\n    providers: [{ provide: CdkTreeNodePadding, useExisting: McTreeNodePadding }]\n})\nexport class McTreeNodePadding<T> extends CdkTreeNodePadding<T> implements OnInit {\n    get leftPadding(): number {\n        return (this._withIcon ? 0 : this._iconWidth) + this._baseLeftPadding;\n    }\n\n    _baseLeftPadding: number = 6;\n    _iconWidth: number = 20;\n    _indent: number = 16;\n\n    @Input('mcTreeNodePadding') level: number;\n\n    @Input('mcTreeNodePaddingIndent') indent: number;\n\n    _withIcon: boolean;\n\n    _paddingIndent(): string | null {\n        const nodeLevel = (this._treeNode.data && this._tree.treeControl.getLevel)\n            ? this._tree.treeControl.getLevel(this._treeNode.data)\n            : null;\n\n        const level = this._level || nodeLevel;\n\n        return level ? `${(level * this._indent) + this.leftPadding}px` : `${this._baseLeftPadding}px`;\n    }\n\n    ngOnInit(): void {\n        this._withIcon = this._tree.treeControl.isExpandable(this._treeNode.data);\n        this._setPadding();\n    }\n}\n","import {\n    AfterContentInit,\n    Attribute,\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component, ContentChildren, EventEmitter, forwardRef, Input, IterableDiffer,\n    IterableDiffers, Output, QueryList,\n    ViewChild,\n    ViewEncapsulation,\n    Directive, ElementRef, Inject\n} from '@angular/core';\nimport { NodeDef, ViewData } from '@angular/core/src/view';\n\nimport { SelectionModel } from '@ptsecurity/cdk/collections';\nimport { CdkTreeNode, CdkTree, CdkTreeNodeOutlet } from '@ptsecurity/cdk/tree';\n\nimport {\n    CanDisable, CanDisableCtor,\n    HasTabIndex,\n    HasTabIndexCtor,\n    mixinDisabled,\n    mixinTabIndex,\n    toBoolean\n} from '@ptsecurity/mosaic/core';\n\nimport { FocusKeyManager } from '@ptsecurity/cdk/a11y';\n\nimport { END, ENTER, HOME, LEFT_ARROW, PAGE_DOWN, PAGE_UP, RIGHT_ARROW, SPACE } from '@ptsecurity/cdk/keycodes';\n\n\n/**\n * Wrapper for the CdkTree node with Material design styles.\n */\n@Directive({\n    exportAs: 'mcTreeNodeOption',\n    selector: 'mc-tree-node-option',\n    host: {\n        tabindex: '-1',\n        '[class.mc-selected]': 'selected',\n        '[class.mc-focused]': '_hasFocus',\n        '[attr.aria-expanded]': 'isExpanded',\n        '[attr.aria-level]': 'role === \"treeitem\" ? level : null',\n        class: 'mc-tree-node',\n\n        '(focus)': '_handleFocus()',\n        '(blur)': '_handleBlur()',\n\n        '(click)': '_handleClick()'\n    },\n    providers: [\n        { provide: CdkTreeNode, useExisting: McTreeNodeOption }\n    ]\n})\nexport class McTreeNodeOption<T> extends CdkTreeNode<T> implements CanDisable {\n    @Input() role: 'treeitem' | 'group' = 'treeitem';\n\n    @Input()\n    get disabled() {\n        return this._disabled;\n    }\n\n    set disabled(value: any) {\n        const newValue = toBoolean(value);\n\n        if (newValue !== this._disabled) {\n            this._disabled = newValue;\n        }\n    }\n\n    @Input()\n    get selected(): boolean {\n        return this.treeSelection.selectedOptions && this.treeSelection.selectedOptions.isSelected(this) || false;\n    }\n\n    set selected(value: boolean) {\n        const isSelected = toBoolean(value);\n\n        if (isSelected !== this._selected) {\n            this.setSelected(isSelected);\n\n            // this.treeSelection._reportValueChange();\n        }\n    }\n\n    private _hasFocus: boolean = false;\n\n    private _disabled: boolean = false;\n    private _selected: boolean = false;\n\n    constructor(\n        protected _elementRef: ElementRef,\n        @Inject(forwardRef(() => McTreeSelection))\n        protected treeSelection: McTreeSelection<T>\n    ) {\n        super(_elementRef, treeSelection);\n    }\n\n    focus(): void {\n        this._elementRef.nativeElement.focus();\n\n        this.treeSelection.setFocusedOption(this);\n    }\n\n    toggle(): void {\n        this.selected = !this.selected;\n    }\n\n    setSelected(selected: boolean) {\n        if (this._selected === selected || !this.treeSelection.selectedOptions) { return; }\n\n        this._selected = selected;\n\n        if (selected) {\n            this.treeSelection.selectedOptions.select(this);\n        } else {\n            this.treeSelection.selectedOptions.deselect(this);\n        }\n\n        // this._changeDetector.markForCheck();\n    }\n\n    _getHeight(): number {\n        return this._elementRef.nativeElement.getClientRects()[0].height;\n    }\n\n    _handleFocus(): void {\n        if (this.disabled || this._hasFocus) { return; }\n\n        this._hasFocus = true;\n    }\n\n    _handleBlur(): void {\n        this._hasFocus = false;\n    }\n\n    _handleClick(): void {\n        if (this.disabled) { return; }\n\n        this.treeSelection.setFocusedOption(this);\n    }\n}\n\nexport const _McTreeSelectionBase:\n    HasTabIndexCtor &\n    CanDisableCtor &\n    typeof CdkTree\n    = mixinTabIndex(mixinDisabled(CdkTree));\n\nexport class McTreeNavigationChange {\n    constructor(\n        public source: McTreeSelection<any>,\n        public option: McTreeNodeOption<any>\n    ) {}\n}\n\nexport class McTreeSelectionChange {\n    constructor(\n        public source: McTreeSelection<any>,\n        public option: McTreeNodeOption<any>\n    ) {}\n}\n\n@Component({\n    exportAs: 'mcTreeSelection',\n    selector: 'mc-tree-selection',\n    template: `<ng-container cdkTreeNodeOutlet></ng-container>`,\n    host: {\n        '[tabIndex]': 'tabIndex',\n        class: 'mc-tree-selection',\n        role: 'tree-selection',\n        '(keydown)': '_onKeyDown($event)',\n        '(window:resize)': 'updateScrollSize()'\n    },\n    styleUrls: ['./tree.css'],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    providers: [{ provide: CdkTree, useExisting: McTreeSelection }]\n})\nexport class McTreeSelection<T> extends _McTreeSelectionBase<T>\n    implements AfterContentInit, CanDisable, HasTabIndex {\n    // Outlets within the tree's template where the dataNodes will be inserted.\n    @ViewChild(CdkTreeNodeOutlet) _nodeOutlet: CdkTreeNodeOutlet;\n\n    @ContentChildren(forwardRef(() => McTreeNodeOption)) options: QueryList<McTreeNodeOption<T>>;\n\n    _keyManager: FocusKeyManager<McTreeNodeOption<T>>;\n\n    selectedOptions: SelectionModel<McTreeNodeOption<T>>;\n\n    _disabled: boolean = false;\n    tabIndex: number;\n    multiple: boolean;\n    autoSelect: boolean;\n    noUnselect: boolean;\n\n    // todo temporary solution\n    withShift: boolean;\n    withCtrl: boolean;\n\n    @Input()\n    get disabled(): boolean {\n        return this._disabled;\n    }\n\n    set disabled(rawValue: boolean) {\n        const value = toBoolean(rawValue);\n\n        if (this._disabled !== value) {\n            this._disabled = value;\n\n            if (this._disabled) {\n                console.log('need disable all options');\n            } else {\n                console.log('need enable all options');\n            }\n        }\n    }\n\n    @Output() readonly navigationChange = new EventEmitter<McTreeNavigationChange>();\n\n    @Output() readonly selectionChange = new EventEmitter<McTreeSelectionChange>();\n\n    constructor(\n        private _elementRef: ElementRef,\n        _differs: IterableDiffers,\n        _changeDetectorRef: ChangeDetectorRef,\n        @Attribute('tabindex') tabIndex: string,\n        @Attribute('multiple') multiple: string,\n        @Attribute('auto-select') autoSelect: string,\n        @Attribute('no-unselect') noUnselect: string\n    ) {\n        super(_differs, _changeDetectorRef);\n\n        this.tabIndex = parseInt(tabIndex) || 0;\n\n        this.multiple = multiple === null ? true : toBoolean(multiple);\n        this.autoSelect = autoSelect === null ? true : toBoolean(autoSelect);\n        this.noUnselect = noUnselect === null ? true : toBoolean(noUnselect);\n\n        this.selectedOptions = new SelectionModel<McTreeNodeOption<T>>(this.multiple);\n    }\n\n    _onKeyDown(event: KeyboardEvent) {\n        const keyCode = event.keyCode;\n        this.withShift = event.shiftKey;\n        this.withCtrl = event.ctrlKey;\n\n        switch (keyCode) {\n            case LEFT_ARROW:\n                if (this._keyManager.activeItem) {\n                    this.treeControl.collapse(this._keyManager.activeItem.data);\n                }\n\n                event.preventDefault();\n\n                break;\n            case RIGHT_ARROW:\n                if (this._keyManager.activeItem) {\n                    this.treeControl.expand(this._keyManager.activeItem.data);\n                }\n\n                event.preventDefault();\n\n                break;\n            case SPACE:\n            case ENTER:\n                this.toggleFocusedOption();\n                event.preventDefault();\n\n                break;\n            case HOME:\n                this._keyManager.setFirstItemActive();\n                event.preventDefault();\n\n                break;\n            case END:\n                this._keyManager.setLastItemActive();\n                event.preventDefault();\n\n                break;\n            case PAGE_UP:\n                this._keyManager.setPreviousPageItemActive();\n                event.preventDefault();\n\n                break;\n            case PAGE_DOWN:\n                this._keyManager.setNextPageItemActive();\n                event.preventDefault();\n\n                break;\n            default:\n                this._keyManager.onKeydown(event);\n        }\n    }\n\n    ngAfterContentInit(): void {\n        this._keyManager = new FocusKeyManager<McTreeNodeOption<T>>(this.options)\n            .withTypeAhead()\n            .withVerticalOrientation(true)\n            .withHorizontalOrientation(null);\n    }\n\n    updateScrollSize(): void {\n        if (!this.options.first) { return; }\n\n        this._keyManager.withScrollSize(Math.floor(this._getHeight() / this.options.first._getHeight()));\n    }\n\n    setFocusedOption(option: McTreeNodeOption<T>): void {\n        this._keyManager.updateActiveItem(option);\n\n        if (this.withShift && this.multiple) {\n            const previousIndex = this._keyManager.previousActiveItemIndex;\n            const activeIndex = this._keyManager.activeItemIndex;\n\n            if (previousIndex < activeIndex) {\n                this.options.forEach((item, index) => {\n                    if (index >= previousIndex && index <= activeIndex) { item.setSelected(true); }\n                });\n            } else {\n                this.options.forEach((item, index) => {\n                    if (index >= activeIndex && index <= previousIndex) { item.setSelected(true); }\n                });\n            }\n\n            this.withShift = false;\n        } else if (this.withCtrl) {\n            this.withCtrl = false;\n\n            if (!this._canDeselectLast(option)) { return; }\n\n            option.toggle();\n        } else {\n            if (this.autoSelect) {\n                this.options.forEach((item) => item.setSelected(false));\n                option.setSelected(true);\n            }\n        }\n\n        this._emitNavigationEvent(option);\n    }\n\n    // Toggles the selected state of the currently focused option.\n    toggleFocusedOption(): void {\n        const focusedIndex = this._keyManager.activeItemIndex;\n\n        if (focusedIndex != null && this._isValidIndex(focusedIndex)) {\n            const focusedOption: McTreeNodeOption<T> = this.options.toArray()[focusedIndex];\n\n            if (focusedOption && this._canDeselectLast(focusedOption)) {\n                focusedOption.toggle();\n\n                // Emit a change event because the focused option changed its state through user interaction.\n                this._emitChangeEvent(focusedOption);\n            }\n        }\n    }\n\n    renderNodeChanges(\n        data: T[],\n        dataDiffer: IterableDiffer<T> = this._dataDiffer,\n        viewContainer: any = this._nodeOutlet.viewContainer,\n        parentData?: T\n    ) {\n        super.renderNodeChanges(data, dataDiffer, viewContainer, parentData);\n\n        const arrayOfInstances = [];\n\n        viewContainer._embeddedViews.forEach((view: ViewData) => {\n            const viewDef = view.def;\n\n            viewDef.nodes.forEach((node: NodeDef) => {\n                if (viewDef.nodeMatchedQueries === node.matchedQueryIds) {\n                    const nodeData: any = view.nodes[node.nodeIndex];\n\n                    arrayOfInstances.push(nodeData.instance as never);\n                }\n            });\n        });\n\n        if (this.options) {\n            this.options.reset(arrayOfInstances);\n            this.options.notifyOnChanges();\n        }\n\n        this.updateScrollSize();\n    }\n\n    _getHeight(): number {\n        return this._elementRef.nativeElement.getClientRects()[0].height;\n    }\n\n    _emitNavigationEvent(option: McTreeNodeOption<T>): void {\n        this.navigationChange.emit(new McTreeNavigationChange(this, option));\n    }\n\n    _emitChangeEvent(option: McTreeNodeOption<T>): void {\n        this.selectionChange.emit(new McTreeNavigationChange(this, option));\n    }\n\n    /**\n     * Utility to ensure all indexes are valid.\n     * @param index The index to be checked.\n     * @returns True if the index is valid for our list of options.\n     */\n    private _isValidIndex(index: number): boolean {\n        return index >= 0 && index < this.options.length;\n    }\n\n    private _canDeselectLast(option: McTreeNodeOption<T>): boolean {\n        return !(this.noUnselect && this.selectedOptions.selected.length === 1 && option.selected);\n    }\n}\n\n","import { NgModule } from '@angular/core';\n\nimport { CommonModule } from '@angular/common';\nimport { CdkTreeModule } from '@ptsecurity/cdk/tree';\n\nimport { McTreeNodeDef } from './node';\nimport { McTreeNodePadding } from './padding';\nimport { McTreeSelection, McTreeNodeOption } from './tree-selection';\n\n\nconst MC_TREE_DIRECTIVES = [\n    McTreeNodeDef,\n    McTreeNodePadding,\n    McTreeSelection,\n    McTreeNodeOption\n];\n\n@NgModule({\n    imports: [CommonModule, CdkTreeModule],\n    exports: MC_TREE_DIRECTIVES,\n    declarations: MC_TREE_DIRECTIVES\n})\nexport class McTreeModule {}\n","import { ICollectionViewer, DataSource } from '@ptsecurity/cdk/collections';\nimport { FlatTreeControl, ITreeControl } from '@ptsecurity/cdk/tree';\nimport { BehaviorSubject, merge, Observable } from 'rxjs';\nimport { map, take } from 'rxjs/operators';\n\n\n/**\n * Tree flattener to convert a normal type of node to node with children & level information.\n * Transform nested nodes of type `T` to flattened nodes of type `F`.\n *\n * For example, the input data of type `T` is nested, and contains its children data:\n *   SomeNode: {\n *     key: 'Fruits',\n *     children: [\n *       NodeOne: {\n *         key: 'Apple',\n *       },\n *       NodeTwo: {\n *        key: 'Pear',\n *      }\n *    ]\n *  }\n *  After flattener flatten the tree, the structure will become\n *  SomeNode: {\n *    key: 'Fruits',\n *    expandable: true,\n *    level: 1\n *  },\n *  NodeOne: {\n *    key: 'Apple',\n *    expandable: false,\n *    level: 2\n *  },\n *  NodeTwo: {\n *   key: 'Pear',\n *   expandable: false,\n *   level: 2\n * }\n * and the output flattened type is `F` with additional information.\n */\nexport class McTreeFlattener<T, F> {\n\n    constructor(public transformFunction: (node: T, level: number) => F,\n                public getLevel: (node: F) => number,\n                public isExpandable: (node: F) => boolean,\n                public getChildren: (node: T) => Observable<T[]>) {\n    }\n\n    _flattenNode(node: T, level: number,\n                 resultNodes: F[], parentMap: boolean[]): F[] {\n        const flatNode = this.transformFunction(node, level);\n        resultNodes.push(flatNode);\n\n        if (this.isExpandable(flatNode)) {\n            this.getChildren(node).pipe(take(1)).subscribe((children) => {\n                children.forEach((child, index) => {\n                    const childParentMap: boolean[] = parentMap.slice();\n                    childParentMap.push(index !== children.length - 1);\n                    this._flattenNode(child, level + 1, resultNodes, childParentMap);\n                });\n            });\n        }\n\n        return resultNodes;\n    }\n\n    /**\n     * Flatten a list of node type T to flattened version of node F.\n     * Please note that type T may be nested, and the length of `structuredData` may be different\n     * from that of returned list `F[]`.\n     */\n    flattenNodes(structuredData: T[]): F[] {\n        const resultNodes: F[] = [];\n        structuredData.forEach((node) => this._flattenNode(node, 0, resultNodes, []));\n\n        return resultNodes;\n    }\n\n    /**\n     * Expand flattened node with current expansion status.\n     * The returned list may have different length.\n     */\n    expandFlattenedNodes(nodes: F[], treeControl: ITreeControl<F>): F[] {\n        const results: F[] = [];\n        const currentExpand: boolean[] = [];\n        currentExpand[0] = true;\n\n        nodes.forEach((node) => {\n            let expand = true;\n            for (let i = 0; i <= this.getLevel(node); i++) {\n                expand = expand && currentExpand[i];\n            }\n\n            if (expand) { results.push(node); }\n\n            if (this.isExpandable(node)) {\n                currentExpand[this.getLevel(node) + 1] = treeControl.isExpanded(node);\n            }\n        });\n\n        return results;\n    }\n}\n\n\n/**\n * Data source for flat tree.\n * The data source need to handle expansion/collapsion of the tree node and change the data feed\n * to `McTree`.\n * The nested tree nodes of type `T` are flattened through `MсTreeFlattener`, and converted\n * to type `F` for `McTree` to consume.\n */\nexport class McTreeFlatDataSource<T, F> extends DataSource<F> {\n    _flattenedData = new BehaviorSubject<F[]>([]);\n\n    _expandedData = new BehaviorSubject<F[]>([]);\n\n    _data: BehaviorSubject<T[]>;\n\n    get data() {\n        return this._data.value;\n    }\n\n    set data(value: T[]) {\n        this._data.next(value);\n        this._flattenedData.next(this.treeFlattener.flattenNodes(this.data));\n        this.treeControl.dataNodes = this._flattenedData.value;\n    }\n\n    constructor(private treeControl: FlatTreeControl<F>,\n                private treeFlattener: McTreeFlattener<T, F>,\n                initialData: T[] = []) {\n        super();\n        this._data = new BehaviorSubject<T[]>(initialData);\n    }\n\n    connect(collectionViewer: ICollectionViewer): Observable<F[]> {\n        const changes = [\n            collectionViewer.viewChange,\n            this.treeControl.expansionModel.onChange!,\n            this._flattenedData\n        ];\n\n        return merge(...changes).pipe(map(() => {\n            this._expandedData.next(\n                this.treeFlattener.expandFlattenedNodes(this._flattenedData.value, this.treeControl));\n\n            return this._expandedData.value;\n        }));\n    }\n\n    disconnect() {\n        // no op\n    }\n}\n\n","import { ICollectionViewer, DataSource } from '@ptsecurity/cdk/collections';\nimport { BehaviorSubject, merge, Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\n\n/**\n * Data source for nested tree.\n *\n * The data source for nested tree doesn't have to consider node flattener, or the way to expand\n * or collapse. The expansion/collapsion will be handled by ITreeControl and each non-leaf node.\n */\nexport class McTreeNestedDataSource<T> extends DataSource<T> {\n    _data = new BehaviorSubject<T[]>([]);\n\n    /**\n     * Data for the nested tree\n     */\n    get data() {\n        return this._data.value;\n    }\n\n    set data(value: T[]) {\n        this._data.next(value);\n    }\n\n    connect(collectionViewer: ICollectionViewer): Observable<T[]> {\n        return merge(...[collectionViewer.viewChange, this._data])\n            .pipe(map(() => this.data));\n    }\n\n    disconnect() {\n        // no op\n    }\n}\n\n","import { Directive, TemplateRef } from '@angular/core';\n\n\n/** Decorates the `ng-template` tags and reads out the template from it. */\n@Directive({ selector: '[mcTabContent]' })\nexport class McTabContent {\n    constructor(public template: TemplateRef<any>) { }\n}\n","import { Directive } from '@angular/core';\nimport { CdkPortal } from '@ptsecurity/cdk/portal';\n\n\n/** Used to flag tab labels for use with the portal directive */\n@Directive({\n    selector: '[mc-tab-label], [mcTabLabel]'\n})\nexport class McTabLabel extends CdkPortal {}\n\n// TODO: workaround for https://github.com/angular/material2/issues/12760\n(McTabLabel as any).ctorParameters = () => (CdkPortal as any).ctorParameters;\n","import {\n    ChangeDetectionStrategy,\n    Component,\n    ContentChild,\n    Input,\n    OnChanges,\n    OnDestroy,\n    OnInit,\n    SimpleChanges,\n    TemplateRef,\n    ViewChild,\n    ViewContainerRef,\n    ViewEncapsulation\n} from '@angular/core';\nimport { TemplatePortal } from '@ptsecurity/cdk/portal';\nimport {\n    CanDisable,\n    CanDisableCtor,\n    mixinDisabled\n} from '@ptsecurity/mosaic/core';\nimport { Subject } from 'rxjs';\n\nimport { McTabContent } from './tab-content';\nimport { McTabLabel } from './tab-label';\n\n\nexport class McTabBase {}\nexport const mcTabMixinBase: CanDisableCtor & typeof McTabBase = mixinDisabled(\n    McTabBase\n);\n\n@Component({\n    selector: 'mc-tab',\n    // Create a template for the content of the <mc-tab> so that we can grab a reference to this\n    // TemplateRef and use it in a Portal to render the tab content in the appropriate place in the\n    // tab-group.\n    template: '<ng-template><ng-content></ng-content></ng-template>',\n    inputs: ['disabled'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n    exportAs: 'mcTab'\n})\nexport class McTab extends mcTabMixinBase\n    implements OnInit, CanDisable, OnChanges, OnDestroy {\n    /** @docs-private */\n    get content(): TemplatePortal | null {\n        return this.contentPortal;\n    }\n    /** Content for the tab label given by `<ng-template mc-tab-label>`. */\n    @ContentChild(McTabLabel)\n    templateLabel: McTabLabel;\n\n    /**\n     * Template provided in the tab content that will be used if present, used to enable lazy-loading\n     */\n    @ContentChild(McTabContent, { read: TemplateRef })\n    explicitContent: TemplateRef<any>;\n\n    /** Template inside the McTab view that contains an `<ng-content>`. */\n    @ViewChild(TemplateRef)\n    implicitContent: TemplateRef<any>;\n\n    /** Plain text label for the tab, used when there is no template label. */\n    @Input('label')\n    textLabel: string = '';\n\n    /** Aria label for the tab. */\n    @Input('aria-label')\n    ariaLabel: string;\n\n    /**\n     * Reference to the element that the tab is labelled by.\n     * Will be cleared if `aria-label` is set at the same time.\n     */\n    @Input('aria-labelledby')\n    ariaLabelledby: string;\n\n    /** Emits whenever the internal state of the tab changes. */\n    readonly stateChanges = new Subject<void>();\n\n    /**\n     * The relatively indexed position where 0 represents the center, negative is left, and positive\n     * represents the right.\n     */\n    position: number | null = null;\n\n    /**\n     * The initial relatively index origin of the tab if it was created and selected after there\n     * was already a selected tab. Provides context of what position the tab should originate from.\n     */\n    origin: number | null = null;\n\n    /**\n     * Whether the tab is currently active.\n     */\n    isActive = false;\n\n    /** Portal that will be the hosted content of the tab */\n    private contentPortal: TemplatePortal | null = null;\n\n    constructor(private viewContainerRef: ViewContainerRef) {\n        super();\n    }\n\n    ngOnChanges(changes: SimpleChanges): void {\n        if (\n            changes.hasOwnProperty('textLabel') ||\n            changes.hasOwnProperty('disabled')\n        ) {\n            this.stateChanges.next();\n        }\n    }\n\n    ngOnDestroy(): void {\n        this.stateChanges.complete();\n    }\n\n    ngOnInit(): void {\n        this.contentPortal = new TemplatePortal(\n            this.explicitContent || this.implicitContent,\n            this.viewContainerRef\n        );\n    }\n}\n","import {\n    animate,\n    state,\n    style,\n    transition,\n    trigger,\n    AnimationTriggerMetadata\n} from '@angular/animations';\n\n\nexport const mcTabsAnimations: {\n    readonly translateTab: AnimationTriggerMetadata;\n} = {\n    /** Animation translates a tab along the X axis. */\n    translateTab: trigger('translateTab', [\n        // Note: transitions to `none` instead of 0, because some browsers might blur the content.\n        state(\n            'center, void, left-origin-center, right-origin-center',\n            style({ transform: 'none' })\n        ),\n\n        // If the tab is either on the left or right, we additionally add a `min-height` of 1px\n        // in order to ensure that the element has a height before its state changes. This is\n        // necessary because Chrome does seem to skip the transition in RTL mode if the element does\n        // not have a static height and is not rendered. See related issue: #9465\n        state(\n            'left',\n            style({ transform: 'translate3d(-100%, 0, 0)', minHeight: '1px' })\n        ),\n        state(\n            'right',\n            style({ transform: 'translate3d(100%, 0, 0)', minHeight: '1px' })\n        ),\n\n        transition(\n            '* => left, * => right, left => center, right => center',\n            animate('{{animationDuration}} cubic-bezier(0.35, 0, 0.25, 1)')\n        ),\n        transition('void => left-origin-center', [\n            style({ transform: 'translate3d(-100%, 0, 0)' }),\n            animate('{{animationDuration}} cubic-bezier(0.35, 0, 0.25, 1)')\n        ]),\n        transition('void => right-origin-center', [\n            style({ transform: 'translate3d(100%, 0, 0)' }),\n            animate('{{animationDuration}} cubic-bezier(0.35, 0, 0.25, 1)')\n        ])\n    ])\n};\n","import { Injectable, Optional, SkipSelf } from '@angular/core';\nimport { Subject, Subscription } from 'rxjs';\n\nimport { McModalRef } from './modal-ref.class';\n\n\ninterface IRegisteredMeta {\n    modalRef: McModalRef;\n    afterOpenSubscription: Subscription;\n    afterCloseSubscription: Subscription;\n}\n\n@Injectable()\nexport class McModalControlService {\n\n    // Track singleton afterAllClose through over the injection tree\n    get afterAllClose(): Subject<void> {\n        return this.parentService ? this.parentService.afterAllClose : this.rootAfterAllClose;\n    }\n\n    // Track singleton openModals array through over the injection tree\n    get openModals(): McModalRef[] {\n        return this.parentService ? this.parentService.openModals : this.rootOpenModals;\n    }\n\n    // @ts-ignore\n    private rootOpenModals: McModalRef[] = this.parentService ? null : [];\n    // @ts-ignore\n    private rootAfterAllClose: Subject<void> = this.parentService ? null : new Subject<void>();\n    // @ts-ignore\n    private rootRegisteredMetaMap: Map<McModalRef, IRegisteredMeta> = this.parentService ? null : new Map();\n\n    // Registered modal for later usage\n    private get registeredMetaMap(): Map<McModalRef, IRegisteredMeta> {\n        return this.parentService ? this.parentService.registeredMetaMap : this.rootRegisteredMetaMap;\n    }\n\n    constructor(\n        @Optional() @SkipSelf() private parentService: McModalControlService) {\n    }\n\n    // Register a modal to listen its open/close\n    registerModal(modalRef: McModalRef): void {\n        if (!this.hasRegistered(modalRef)) {\n            const afterOpenSubscription = modalRef.afterOpen.subscribe(() => this.openModals.push(modalRef));\n            const afterCloseSubscription = modalRef.afterClose.subscribe(() => this.removeOpenModal(modalRef));\n\n            this.registeredMetaMap.set(modalRef, {modalRef, afterOpenSubscription, afterCloseSubscription});\n        }\n    }\n\n    hasRegistered(modalRef: McModalRef): boolean {\n        return this.registeredMetaMap.has(modalRef);\n    }\n\n    // Close all registered opened modals\n    closeAll(): void {\n        let i = this.openModals.length;\n\n        while (i--) {\n            this.openModals[i].close();\n        }\n    }\n\n    private removeOpenModal(modalRef: McModalRef): void {\n        const index = this.openModals.indexOf(modalRef);\n\n        if (index > -1) {\n            this.openModals.splice(index, 1);\n\n            if (!this.openModals.length) {\n                this.afterAllClose.next();\n            }\n        }\n    }\n}\n","import { Observable } from 'rxjs';\n\nimport { McModalComponent } from './modal.component';\n\n\n/**\n * API class that public to users to handle the modal instance.\n * McModalRef is aim to avoid accessing to the modal instance directly by users.\n */\nexport abstract class McModalRef<T = any, R = any> {\n    abstract afterOpen: Observable<void>;\n    abstract afterClose: Observable<R>;\n\n    abstract open(): void;\n\n    abstract close(result?: R): void;\n\n    abstract destroy(result?: R): void;\n\n    /**\n     * Trigger the nzOnOk/nzOnCancel by manual\n     */\n    abstract triggerOk(): void;\n\n    abstract triggerCancel(): void;\n\n    // /**\n    //  * Return the ComponentRef of nzContent when specify nzContent as a Component\n    //  * Note: this method may return undefined if the Component has not ready yet.\n    //    (it only available after Modal's ngOnInit)\n    //  */\n    // abstract getContentComponentRef(): ComponentRef<{}>;\n\n    /**\n     * Return the component instance of nzContent when specify nzContent as a Component\n     * Note: this method may return undefined if the Component has not ready yet.\n     * (it only available after Modal's ngOnInit)\n     */\n    abstract getContentComponent(): T;\n\n    /**\n     * Get the dom element of this Modal\n     */\n    abstract getElement(): HTMLElement;\n\n    /**\n     * Get the instance of the Modal itself\n     */\n    abstract getInstance(): McModalComponent;\n}\n","export interface IClickPosition {\n    x: number;\n    y: number;\n}\n\nexport class ModalUtil {\n    private lastPosition: IClickPosition;\n\n    constructor(private document: Document) {\n        this.lastPosition = {x: -1, y: -1};\n        this.listenDocumentClick();\n    }\n\n    getLastClickPosition(): IClickPosition {\n        return this.lastPosition;\n    }\n\n    listenDocumentClick(): void {\n        this.document.addEventListener('click', (event: MouseEvent) => {\n            this.lastPosition = {x: event.clientX, y: event.clientY};\n        });\n    }\n}\n\nexport default new ModalUtil(document);\n","import { DOCUMENT } from '@angular/common';\nimport {\n    AfterViewInit, ChangeDetectionStrategy, ChangeDetectorRef,\n    Component,\n    ComponentFactoryResolver,\n    ComponentRef,\n    ElementRef,\n    EventEmitter,\n    Inject,\n    Injector,\n    Input,\n    OnChanges,\n    OnDestroy,\n    OnInit,\n    Output,\n    Renderer2,\n    SimpleChanges,\n    TemplateRef,\n    Type,\n    ViewChild,\n    ViewContainerRef, ViewEncapsulation\n} from '@angular/core';\nimport { ESCAPE } from '@ptsecurity/cdk/keycodes';\nimport { Overlay, OverlayRef } from '@ptsecurity/cdk/overlay';\nimport { McMeasureScrollbarService } from '@ptsecurity/mosaic/core';\nimport { Observable } from 'rxjs';\n\nimport { McModalControlService } from './modal-control.service';\nimport { McModalRef } from './modal-ref.class';\n// tslint:disable-next-line\nimport ModalUtil from './modal-util';\nimport { IModalButtonOptions, IModalOptions, ModalType, OnClickCallback } from './modal.type';\n\n\n// Duration when perform animations (ms)\nexport const MODAL_ANIMATE_DURATION = 200;\n\ntype AnimationState = 'enter' | 'leave' | null;\n\n@Component({\n    selector: 'mc-modal',\n    templateUrl: './modal.component.html',\n    styleUrls: ['./modal.css'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n    host: {\n        '(keydown)': 'onKeyDown($event)'\n    }\n})\nexport class McModalComponent<T = any, R = any> extends McModalRef<T, R>\n    implements OnInit, OnChanges, AfterViewInit, OnDestroy, IModalOptions {\n\n    // tslint:disable-next-line:no-any\n    @Input() mcModalType: ModalType = 'default';\n    // If not specified, will use <ng-content>\n    @Input() mcContent: string | TemplateRef<{}> | Type<T>;\n    // available when mcContent is a component\n    @Input() mcComponentParams: object;\n    // Default Modal ONLY\n    @Input() mcFooter: string | TemplateRef<{}> | IModalButtonOptions<T>[];\n\n    @Input()\n    get mcVisible() { return this._mcVisible; }\n    set mcVisible(value) { this._mcVisible = value; }\n    _mcVisible = false;\n\n    @Output() mcVisibleChange = new EventEmitter<boolean>();\n\n    @Input() mcZIndex: number = 1000;\n    @Input() mcWidth: number | string = 480;\n    @Input() mcWrapClassName: string;\n    @Input() mcClassName: string;\n    @Input() mcStyle: object;\n    @Input() mcTitle: string | TemplateRef<{}>;\n    @Input() mcCloseByESC: boolean = true;\n\n    @Input()\n    get mcClosable() { return this._mcClosable; }\n    set mcClosable(value) { this._mcClosable = value; }\n    _mcClosable = true;\n\n    @Input()\n    get mcMask() { return this._mcMask; }\n    set mcMask(value) { this._mcMask = value; }\n    _mcMask = true;\n\n    @Input()\n    get mcMaskClosable() { return this._mcMaskClosable; }\n    set mcMaskClosable(value) { this._mcMaskClosable = value; }\n    _mcMaskClosable = true;\n\n    @Input() mcMaskStyle: object;\n    @Input() mcBodyStyle: object;\n\n    // Trigger when modal open(visible) after animations\n    @Output() mcAfterOpen = new EventEmitter<void>();\n    // Trigger when modal leave-animation over\n    @Output() mcAfterClose = new EventEmitter<R>();\n\n    // --- Predefined OK & Cancel buttons\n    @Input() mcOkText: string;\n    @Input() mcOkType = 'primary';\n\n    @Input()\n    get mcOkLoading() { return this._mcOkLoading; }\n    set mcOkLoading(value) { this._mcOkLoading = value; }\n    _mcOkLoading = false;\n\n    @Input() @Output() mcOnOk: EventEmitter<T> | OnClickCallback<T> = new EventEmitter<T>();\n    // Only aim to focus the ok button that needs to be auto focused\n    @ViewChild('autoFocusButtonOk', {read: ElementRef}) autoFocusButtonOk: ElementRef;\n    @Input() mcCancelText: string;\n\n    @Input()\n    get mcCancelLoading() { return this._mcCancelLoading; }\n    set mcCancelLoading(value) { this._mcCancelLoading = value; }\n    _mcCancelLoading = false;\n\n    @Input() @Output() mcOnCancel: EventEmitter<T> | OnClickCallback<T> = new EventEmitter<T>();\n    @ViewChild('modalContainer') modalContainer: ElementRef;\n    @ViewChild('bodyContainer', {read: ViewContainerRef}) bodyContainer: ViewContainerRef;\n    maskAnimationClassMap: object;\n    modalAnimationClassMap: object;\n    // The origin point that animation based on\n    transformOrigin = '0px 0px 0px';\n\n    // Observable alias for mcAfterOpen\n    get afterOpen(): Observable<void> {\n        return this.mcAfterOpen.asObservable();\n    }\n\n    // Observable alias for mcAfterClose\n    get afterClose(): Observable<R> {\n        return this.mcAfterClose.asObservable();\n    }\n\n    get okText(): string {\n        return this.mcOkText;\n    }\n\n    get cancelText(): string {\n        return this.mcCancelText;\n    }\n\n    // Indicate whether this dialog should hidden\n    get hidden(): boolean {\n        return !this.mcVisible && !this.animationState;\n    }\n\n    // Handle the reference when using mcContent as Component\n    private contentComponentRef: ComponentRef<T>;\n    // Current animation state\n    private animationState: AnimationState;\n    private container: HTMLElement | OverlayRef;\n\n    constructor(\n        private overlay: Overlay,\n        private renderer: Renderer2,\n        private cfr: ComponentFactoryResolver,\n        private elementRef: ElementRef,\n        private viewContainer: ViewContainerRef,\n        private mcMeasureScrollbarService: McMeasureScrollbarService,\n        private modalControl: McModalControlService,\n        private changeDetector: ChangeDetectorRef,\n        @Inject(DOCUMENT) private document: any) {\n\n        super();\n    }\n\n    @Input() mcGetContainer: HTMLElement | OverlayRef | (() => HTMLElement | OverlayRef) = () => this.overlay.create();\n\n    ngOnInit() {\n\n        // Create component along without View\n        if (this.isComponent(this.mcContent)) {\n            this.createDynamicComponent(this.mcContent as Type<T>);\n        }\n\n        // Setup default button options\n        if (this.isModalButtons(this.mcFooter)) {\n            this.mcFooter = this.formatModalButtons(this.mcFooter as IModalButtonOptions<T>[]);\n        }\n\n        // Place the modal dom to elsewhere\n        this.container = typeof this.mcGetContainer === 'function' ? this.mcGetContainer() : this.mcGetContainer;\n        if (this.container instanceof HTMLElement) {\n            this.container.appendChild(this.elementRef.nativeElement);\n        } else if (this.container instanceof OverlayRef) {\n            // NOTE: only attach the dom to overlay, the view container is not changed actually\n            this.container.overlayElement.appendChild(this.elementRef.nativeElement);\n        }\n\n        // Register modal when afterOpen/afterClose is stable\n        this.modalControl.registerModal(this);\n    }\n\n    // [NOTE] NOT available when using by service!\n    // Because ngOnChanges never be called when using by service,\n    // here we can't support \"mcContent\"(Component) etc. as inputs that initialized dynamically.\n    // BUT: User also can change \"mcContent\" dynamically to trigger UI changes\n    // (provided you don't use \bComponent that needs initializations)\n    ngOnChanges(changes: SimpleChanges) {\n        if (changes.mcVisible) {\n            // Do not trigger animation while initializing\n            this.handleVisibleStateChange(this.mcVisible, !changes.mcVisible.firstChange);\n        }\n    }\n\n    ngAfterViewInit() {\n        // If using Component, it is the time to attach View while bodyContainer is ready\n        if (this.contentComponentRef) {\n            this.bodyContainer.insert(this.contentComponentRef.hostView);\n        }\n\n        if (this.autoFocusButtonOk) {\n            (this.autoFocusButtonOk.nativeElement as HTMLButtonElement).focus();\n        }\n    }\n\n    ngOnDestroy() {\n        if (this.container instanceof OverlayRef) {\n            this.container.dispose();\n        }\n    }\n\n    open() {\n        this.changeVisibleFromInside(true);\n    }\n\n    close(result?: R) {\n        this.changeVisibleFromInside(false, result);\n    }\n\n    // Destroy equals Close\n    destroy(result?: R) {\n        this.close(result);\n    }\n\n    triggerOk() {\n        this.onClickOkCancel('ok');\n    }\n\n    triggerCancel() {\n        this.onClickOkCancel('cancel');\n    }\n\n    getInstance(): McModalComponent {\n        return this;\n    }\n\n    getContentComponentRef(): ComponentRef<T> {\n        return this.contentComponentRef;\n    }\n\n    getContentComponent(): T {\n        return this.contentComponentRef && this.contentComponentRef.instance;\n    }\n\n    getElement(): HTMLElement {\n        return this.elementRef && this.elementRef.nativeElement;\n    }\n\n    onClickMask($event: MouseEvent) {\n        if (\n            this.mcMask &&\n            this.mcMaskClosable &&\n            ($event.target as HTMLElement).classList.contains('mc-modal-wrap') &&\n            this.mcVisible\n        ) {\n            this.onClickOkCancel('cancel');\n        }\n    }\n\n    // tslint:disable-next-line\n    isModalType(type: ModalType): boolean {\n        return this.mcModalType === type;\n    }\n\n    onKeyDown(event: KeyboardEvent): void {\n\n        if (event.keyCode === ESCAPE && this.container && (this.container instanceof OverlayRef)) {\n\n            this.close();\n            event.preventDefault();\n        }\n    }\n\n    // AoT\n    onClickCloseBtn() {\n        if (this.mcVisible) {\n            this.onClickOkCancel('cancel');\n        }\n    }\n\n    // AoT\n    // tslint:disable-next-line\n    onClickOkCancel(type: 'ok' | 'cancel') {\n        const trigger = { ok: this.mcOnOk, cancel: this.mcOnCancel }[type];\n        const loadingKey = { ok: 'mcOkLoading', cancel: 'mcCancelLoading' }[type];\n\n        if (trigger instanceof EventEmitter) {\n            trigger.emit(this.getContentComponent());\n        } else if (typeof trigger === 'function') {\n\n            const result = trigger(this.getContentComponent());\n            // Users can return \"false\" to prevent closing by default\n            const caseClose = (doClose: boolean | void | {}) => (doClose !== false) && this.close(doClose as R);\n\n            if (isPromise(result)) {\n                this[loadingKey] = true;\n                const handleThen = (doClose) => {\n                    this[loadingKey] = false;\n                    caseClose(doClose);\n                };\n                (result as Promise<void>).then(handleThen).catch(handleThen);\n            } else {\n                caseClose(result);\n            }\n        }\n    }\n\n    // AoT\n    isNonEmptyString(value: {}): boolean {\n        return typeof value === 'string' && value !== '';\n    }\n\n    // AoT\n    isTemplateRef(value: {}): boolean {\n        return value instanceof TemplateRef;\n    }\n\n    // AoT\n    isComponent(value: {}): boolean {\n        return value instanceof Type;\n    }\n\n    // AoT\n    isModalButtons(value: {}): boolean {\n        return Array.isArray(value) && value.length > 0;\n    }\n\n    // Do rest things when visible state changed\n    private handleVisibleStateChange(visible: boolean, animation: boolean = true, closeResult?: R): Promise<any> {\n        // Hide scrollbar at the first time when shown up\n        if (visible) {\n            this.changeBodyOverflow(1);\n        }\n\n        return Promise\n            .resolve(animation && this.animateTo(visible))\n            // Emit open/close event after animations over\n            .then(() => {\n                if (visible) {\n                    this.mcAfterOpen.emit();\n                } else {\n                    this.mcAfterClose.emit(closeResult);\n                    // Show/hide scrollbar when animation is over\n                    this.changeBodyOverflow();\n                }\n            });\n    }\n\n    // Lookup a button's property, if the prop is a function, call & then return the result, otherwise, return itself.\n    // AoT\n    // tslint:disable-next-line\n    getButtonCallableProp(options: IModalButtonOptions<T>, prop: string): {} {\n        const value = options[prop];\n        const args: any[] = [];\n        if (this.contentComponentRef) {\n            args.push(this.contentComponentRef.instance);\n        }\n\n        return typeof value === 'function' ? value.apply(options, args) : value;\n    }\n\n    // On mcFooter's modal button click\n    // AoT\n    // tslint:disable-next-line\n    onButtonClick(button: IModalButtonOptions<T>) {\n        // Call onClick directly\n        const result = this.getButtonCallableProp(button, 'onClick');\n        if (isPromise(result)) {\n            button.loading = true;\n            (result as Promise<{}>).then(() => button.loading = false).catch(() => button.loading = false);\n        }\n    }\n\n    // Change mcVisible from inside\n    private changeVisibleFromInside(visible: boolean, closeResult?: R): Promise<void> {\n        if (this.mcVisible !== visible) {\n            // Change mcVisible value immediately\n            this.mcVisible = visible;\n            this.mcVisibleChange.emit(visible);\n\n            return this.handleVisibleStateChange(visible, true, closeResult);\n        }\n\n        return Promise.resolve();\n    }\n\n    private changeAnimationState(state: AnimationState) {\n        this.animationState = state;\n        if (state) {\n            this.maskAnimationClassMap = {\n                [`fade-${state}`]: true,\n                [`fade-${state}-active`]: true\n            };\n            this.modalAnimationClassMap = {\n                [`zoom-${state}`]: true,\n                [`zoom-${state}-active`]: true\n            };\n        } else {\n            // @ts-ignore\n            this.maskAnimationClassMap = this.modalAnimationClassMap = null;\n        }\n\n        if (this.contentComponentRef) {\n            this.contentComponentRef.changeDetectorRef.markForCheck();\n        } else {\n            this.changeDetector.markForCheck();\n        }\n    }\n\n    private animateTo(isVisible: boolean): Promise<any> {\n        // Figure out the lastest click position when shows up\n        if (isVisible) {\n            // [NOTE] Using timeout due to the document.click event is fired later than visible change,\n            // so if not postponed to next event-loop, we can't get the lastest click position\n            window.setTimeout(() => this.updateTransformOrigin());\n        }\n\n        this.changeAnimationState(isVisible ? 'enter' : 'leave');\n\n        // Return when animation is over\n        return new Promise((resolve) => window.setTimeout(() => {\n            this.changeAnimationState(null);\n            resolve();\n        }, MODAL_ANIMATE_DURATION));\n    }\n\n    private formatModalButtons(buttons: IModalButtonOptions<T>[]): IModalButtonOptions<T>[] {\n        return buttons.map((button) => {\n\n            return {\n                ...{\n                    type: 'default',\n                    size: 'default',\n                    autoLoading: true,\n                    show: true,\n                    loading: false,\n                    disabled: false\n                },\n                ...button\n            };\n        });\n    }\n\n    /**\n     * Create a component dynamically but not attach to any View\n     * (this action will be executed when bodyContainer is ready)\n     * @param component Component class\n     */\n    private createDynamicComponent(component: Type<T>) {\n        const factory = this.cfr.resolveComponentFactory(component);\n        const childInjector = Injector.create({\n            providers: [{provide: McModalRef, useValue: this}],\n            parent: this.viewContainer.parentInjector\n        });\n\n        this.contentComponentRef = factory.create(childInjector);\n\n        if (this.mcComponentParams) {\n            Object.assign(this.contentComponentRef.instance, this.mcComponentParams);\n        }\n\n        // Do the first change detection immediately\n        // (or we do detection at ngAfterViewInit, multi-changes error will be thrown)\n        this.contentComponentRef.changeDetectorRef.detectChanges();\n\n\n    }\n\n    // Update transform-origin to the last click position on document\n    private updateTransformOrigin() {\n        const modalElement = this.modalContainer.nativeElement as HTMLElement;\n        const lastPosition = ModalUtil.getLastClickPosition();\n\n        if (lastPosition) {\n            // tslint:disable-next-line\n            this.transformOrigin = `${lastPosition.x - modalElement.offsetLeft}px ${lastPosition.y - modalElement.offsetTop}px 0px`;\n        }\n    }\n\n    /**\n     * Take care of the body's overflow to decide the existense of scrollbar\n     * @param plusNum The number that the openModals.length will increase soon\n     */\n    private changeBodyOverflow(plusNum: number = 0) {\n        const openModals = this.modalControl.openModals;\n\n        if (openModals.length + plusNum > 0) {\n            // tslint:disable-next-line\n            this.renderer.setStyle(this.document.body, 'padding-right', `${this.mcMeasureScrollbarService.scrollBarWidth}px`);\n            this.renderer.setStyle(this.document.body, 'overflow', 'hidden');\n        } else {\n            this.renderer.removeStyle(this.document.body, 'padding-right');\n            this.renderer.removeStyle(this.document.body, 'overflow');\n        }\n    }\n}\n\n////////////\n\nfunction isPromise(obj: {} | void): boolean {\n    // tslint:disable-next-line\n    return !!obj && (typeof obj === 'object' || typeof obj === 'function') && typeof (obj as Promise<{}>).then === 'function' && typeof (obj as Promise<{}>).catch === 'function';\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n\n@Pipe({\n    name: 'toCssUnit'\n})\nexport class CssUnitPipe implements PipeTransform {\n    transform(value: number | string, defaultUnit: string = 'px'): string {\n        const formatted = +value;\n\n        return isNaN(formatted) ? `${value}` : `${formatted}${defaultUnit}`;\n    }\n}\n","import { ComponentRef, Injectable } from '@angular/core';\n\nimport { Observable } from 'rxjs';\nimport { filter } from 'rxjs/operators';\n\nimport { ESCAPE } from '@ptsecurity/cdk/keycodes';\nimport { Overlay, OverlayRef } from '@ptsecurity/cdk/overlay';\nimport { ComponentPortal } from '@ptsecurity/cdk/portal';\n\nimport { McModalControlService } from './modal-control.service';\nimport { McModalRef } from './modal-ref.class';\nimport { McModalComponent } from './modal.component';\nimport { ConfirmType, IModalOptions, IModalOptionsForService } from './modal.type';\n\n\n// A builder used for managing service creating modals\nexport class ModalBuilderForService {\n\n    // Modal ComponentRef, \"null\" means it has been destroyed\n    private modalRef: ComponentRef<McModalComponent>;\n    private overlayRef: OverlayRef;\n\n    constructor(private overlay: Overlay, options: IModalOptionsForService = {}) {\n        this.createModal();\n\n        if (!('mcGetContainer' in options)) {\n            options.mcGetContainer = null;\n        }\n\n        this.changeProps(options);\n        this.modalRef.instance.open();\n        this.modalRef.instance.mcAfterClose.subscribe(() => this.destroyModal());\n\n        this.overlayRef.keydownEvents()\n            // @ts-ignore\n            .pipe(filter((event: KeyboardEvent) => {\n                return event.keyCode === ESCAPE && options.mcCloseByESC;\n            }))\n            .subscribe(() => this.modalRef.instance.close());\n    }\n\n    getInstance(): McModalComponent {\n        return this.modalRef && this.modalRef.instance;\n    }\n\n    destroyModal(): void {\n        if (this.modalRef) {\n            this.overlayRef.dispose();\n            // @ts-ignore\n            this.modalRef = null;\n        }\n    }\n\n    private changeProps(options: IModalOptions): void {\n        if (this.modalRef) {\n            // here not limit user's inputs at runtime\n            Object.assign(this.modalRef.instance, options);\n        }\n    }\n\n    // Create component to ApplicationRef\n    private createModal(): void {\n        this.overlayRef = this.overlay.create();\n        this.modalRef = this.overlayRef.attach(new ComponentPortal(McModalComponent));\n    }\n}\n\n@Injectable()\nexport class McModalService {\n    // Track of the current close modals (we assume invisible is close this time)\n    get openModals(): McModalRef[] {\n        return this.modalControl.openModals;\n    }\n\n    get afterAllClose(): Observable<void> {\n        return this.modalControl.afterAllClose.asObservable();\n    }\n\n    constructor(\n        private overlay: Overlay,\n        private modalControl: McModalControlService) {\n    }\n\n    // Closes all of the currently-open dialogs\n    closeAll(): void {\n        this.modalControl.closeAll();\n    }\n\n    create<T>(options: IModalOptionsForService<T> = {}): McModalRef<T> {\n\n        if (typeof options.mcOnCancel !== 'function') {\n            // Leave a empty function to close this modal by default\n            // tslint:disable-next-line\n            options.mcOnCancel = () => {};\n        }\n\n        if (!('mcCloseByESC' in options)) {\n            options.mcCloseByESC = true;\n        }\n\n\n        if (!('mcWidth' in options)) {\n            // tslint:disable-next-line\n            options.mcWidth = 480;\n        }\n\n        return new ModalBuilderForService(this.overlay, options).getInstance();\n    }\n\n    confirm<T>(options: IModalOptionsForService<T> = {}, confirmType: ConfirmType = 'confirm'): McModalRef<T> {\n        if ('mcFooter' in options) {\n            console.warn(`The Confirm-Modal doesn't support \"mcFooter\", this property will be ignored.`);\n        }\n\n        // NOTE: only support function currently by calling confirm()\n        if (typeof options.mcOnOk !== 'function') {\n            // Leave a empty function to close this modal by default\n            // tslint:disable-next-line\n            options.mcOnOk = () => {};\n        }\n\n        options.mcModalType = 'confirm';\n        options.mcClassName = `mc-confirm mc-confirm-${confirmType} ${options.mcClassName || ''}`;\n        options.mcMaskClosable = false;\n\n        return this.create(options);\n    }\n\n    success<T>(options: IModalOptionsForService<T> = {}): McModalRef<T> {\n        return this.simpleConfirm(options, 'success');\n    }\n\n    delete<T>(options: IModalOptionsForService<T> = {}): McModalRef<T> {\n        return this.simpleConfirm(options, 'warn');\n    }\n\n    private simpleConfirm<T>(options: IModalOptionsForService<T> = {}, confirmType: ConfirmType): McModalRef<T> {\n        // Remove the Cancel button if the user not specify a Cancel button\n        if (!('mcCancelText' in options)) {\n            // @ts-ignore\n            options.mcCancelText = null;\n        }\n\n        return this.confirm(options, confirmType);\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { OverlayModule } from '@ptsecurity/cdk/overlay';\nimport { McButtonModule } from '@ptsecurity/mosaic/button';\nimport { McIconModule } from '@ptsecurity/mosaic/icon';\n\nimport { CssUnitPipe } from './css-unit.pipe';\nimport { McModalControlService } from './modal-control.service';\nimport { McModalComponent } from './modal.component';\nimport { McModalService } from './modal.service';\n\n\n@NgModule({\n    imports: [ CommonModule, OverlayModule, McButtonModule, McIconModule ],\n    exports: [ McModalComponent ],\n    declarations: [ McModalComponent, CssUnitPipe ],\n    entryComponents: [ McModalComponent ],\n    providers: [ McModalControlService, McModalService ]\n})\nexport class McModalModule { }\n","import { AnimationEvent } from '@angular/animations';\nimport {\n    AfterContentInit,\n    ChangeDetectionStrategy,\n    Component,\n    ContentChild,\n    ContentChildren,\n    ElementRef,\n    EventEmitter,\n    Inject,\n    InjectionToken,\n    Input,\n    NgZone,\n    OnDestroy,\n    Output,\n    TemplateRef,\n    QueryList,\n    ViewChild,\n    ViewEncapsulation,\n    OnInit\n} from '@angular/core';\nimport { FocusKeyManager, FocusOrigin } from '@ptsecurity/cdk/a11y';\nimport { Direction } from '@ptsecurity/cdk/bidi';\nimport { coerceBooleanProperty } from '@ptsecurity/cdk/coercion';\nimport { ESCAPE, DOWN_ARROW, UP_ARROW } from '@ptsecurity/cdk/keycodes';\nimport { Subject, Subscription } from 'rxjs';\nimport { take } from 'rxjs/operators';\n\nimport { mcDropdownAnimations } from './dropdown-animations';\nimport { McDropdownContent } from './dropdown-content';\nimport { throwMcDropdownInvalidPositionX, throwMcDropdownInvalidPositionY } from './dropdown-errors';\nimport { McDropdownItem } from './dropdown-item';\nimport { MC_DROPDOWN_PANEL, McDropdownPanel } from './dropdown-panel';\nimport { DropdownPositionX, DropdownPositionY } from './dropdown-positions';\n\n\n/** Default `mc-dropdown` options that can be overridden. */\n// tslint:disable-next-line:interface-name\nexport interface McDropdownDefaultOptions {\n    /** The x-axis position of the dropdown. */\n    xPosition: DropdownPositionX;\n\n    /** The y-axis position of the dropdown. */\n    yPosition: DropdownPositionY;\n\n    /** Whether the dropdown should overlap the dropdown trigger. */\n    overlapTrigger: boolean;\n\n    /** Class to be applied to the dropdown's backdrop. */\n    backdropClass: string;\n\n    /** Whether the dropdown has a backdrop. */\n    hasBackdrop?: boolean;\n}\n\n/** Injection token to be used to override the default options for `mc-dropdown`. */\nexport const MC_DROPDOWN_DEFAULT_OPTIONS =\n    new InjectionToken<McDropdownDefaultOptions>('mc-dropdown-default-options', {\n        providedIn: 'root',\n        factory: MC_DROPDOWN_DEFAULT_OPTIONS_FACTORY\n    });\n\n/** @docs-private */\nexport function MC_DROPDOWN_DEFAULT_OPTIONS_FACTORY(): McDropdownDefaultOptions {\n    return {\n        overlapTrigger: false,\n        xPosition: 'after',\n        yPosition: 'below',\n        backdropClass: 'cdk-overlay-transparent-backdrop'\n    };\n}\n\n@Component({\n    selector: 'mc-dropdown',\n    templateUrl: 'dropdown.html',\n    styleUrls: ['dropdown.css'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n    exportAs: 'mcDropdown',\n    animations: [\n        mcDropdownAnimations.transformDropdown,\n        mcDropdownAnimations.fadeInItems\n    ],\n    providers: [\n        { provide: MC_DROPDOWN_PANEL, useExisting: McDropdown }\n    ]\n})\nexport class McDropdown implements AfterContentInit, McDropdownPanel<McDropdownItem>, OnInit, OnDestroy {\n\n    /** Position of the dropdown in the X axis. */\n    @Input()\n    get xPosition(): DropdownPositionX { return this._xPosition; }\n    set xPosition(value: DropdownPositionX) {\n        if (value !== 'before' && value !== 'after') {\n            throwMcDropdownInvalidPositionX();\n        }\n\n        this._xPosition = value;\n        this.setPositionClasses();\n    }\n\n    /** Position of the dropdown in the Y axis. */\n    @Input()\n    get yPosition(): DropdownPositionY { return this._yPosition; }\n    set yPosition(value: DropdownPositionY) {\n        if (value !== 'above' && value !== 'below') {\n            throwMcDropdownInvalidPositionY();\n        }\n\n        this._yPosition = value;\n        this.setPositionClasses();\n    }\n\n    /** Whether the dropdown should overlap its trigger. */\n    @Input()\n    get overlapTrigger(): boolean { return this._overlapTrigger; }\n    set overlapTrigger(value: boolean) {\n        this._overlapTrigger = coerceBooleanProperty(value);\n    }\n\n    /** Whether the dropdown has a backdrop. */\n    @Input()\n    get hasBackdrop(): boolean | undefined { return this._hasBackdrop; }\n    set hasBackdrop(value: boolean | undefined) {\n        this._hasBackdrop = coerceBooleanProperty(value);\n    }\n\n    /**\n     * This method takes classes set on the host mc-dropdown element and applies them on the\n     * dropdown template that displays in the overlay container.  Otherwise, it's difficult\n     * to style the containing dropdown from outside the component.\n     * @param classes list of class names\n     */\n    @Input('class')\n    set panelClass(classes: string) {\n        if (classes && classes.length) {\n            this._classList = classes.split(' ').reduce((obj: any, className: string) => {\n                obj[className] = true;\n\n                return obj;\n            }, {});\n\n            this._elementRef.nativeElement.className = '';\n        }\n    }\n\n    /** Config object to be passed into the dropdown's ngClass */\n    _classList: {[key: string]: boolean} = {};\n\n    /** Current state of the panel animation. */\n    _panelAnimationState: 'void' | 'enter' = 'void';\n\n    /** Emits whenever an animation on the dropdown completes. */\n    _animationDone = new Subject<AnimationEvent>();\n\n    /** Whether the dropdown is animating. */\n    _isAnimating: boolean;\n\n    /** Layout direction of the dropdown. */\n    direction: Direction;\n\n    /** Class to be added to the backdrop element. */\n    @Input() backdropClass: string = this._defaultOptions.backdropClass;\n\n    /** @docs-private */\n    @ViewChild(TemplateRef) templateRef: TemplateRef<any>;\n\n    /**\n     * List of the items inside of a dropdown.\n     */\n    @ContentChildren(McDropdownItem) items: QueryList<McDropdownItem>;\n\n    /**\n     * Dropdown content that will be rendered lazily.\n     * @docs-private\n     */\n    @ContentChild(McDropdownContent) lazyContent: McDropdownContent;\n\n    /** Event emitted when the dropdown is closed. */\n    @Output() readonly closed: EventEmitter<void | 'click' | 'keydown' | 'tab'> =\n        new EventEmitter<void | 'click' | 'keydown' | 'tab'>();\n\n    private _keyManager: FocusKeyManager<McDropdownItem>;\n    private _xPosition: DropdownPositionX = this._defaultOptions.xPosition;\n    private _yPosition: DropdownPositionY = this._defaultOptions.yPosition;\n\n    /** Dropdown items inside the current dropdown. */\n    private _items: McDropdownItem[] = [];\n\n    /** Emits whenever the amount of dropdown items changes. */\n    private _itemChanges = new Subject<McDropdownItem[]>();\n\n    /** Subscription to tab events on the dropdown panel */\n    private _tabSubscription = Subscription.EMPTY;\n    private _overlapTrigger: boolean = this._defaultOptions.overlapTrigger;\n    private _hasBackdrop: boolean | undefined = this._defaultOptions.hasBackdrop;\n\n    constructor(\n        private _elementRef: ElementRef<HTMLElement>,\n        private _ngZone: NgZone,\n        @Inject(MC_DROPDOWN_DEFAULT_OPTIONS) private _defaultOptions: McDropdownDefaultOptions) { }\n\n    ngOnInit() {\n        this.setPositionClasses();\n    }\n\n    ngAfterContentInit() {\n        this._keyManager = new FocusKeyManager<McDropdownItem>(this.items).withWrap().withTypeAhead();\n        this._tabSubscription = this._keyManager.tabOut.subscribe(() => this.closed.emit('tab'));\n    }\n\n    ngOnDestroy() {\n        this._tabSubscription.unsubscribe();\n        this.closed.complete();\n    }\n\n    /** Handle a keyboard event from the dropdown, delegating to the appropriate action. */\n    _handleKeydown(event: KeyboardEvent) {\n\n        // tslint:disable-next-line:deprecation\n        switch (event.keyCode) {\n            case ESCAPE:\n                this.closed.emit('keydown');\n                break;\n            case UP_ARROW:\n            case DOWN_ARROW:\n                this._keyManager.setFocusOrigin('keyboard');\n                this._keyManager.onKeydown(event);\n                break;\n            default:\n                // todo зачем обрабатывать лишние события ?\n                this._keyManager.onKeydown(event);\n        }\n    }\n\n    /**\n     * Focus the first item in the dropdown.\n     * @param origin Action from which the focus originated. Used to set the correct styling.\n     */\n    focusFirstItem(origin: FocusOrigin = 'program'): void {\n        // When the content is rendered lazily, it takes a bit before the items are inside the DOM.\n        if (this.lazyContent) {\n            this._ngZone.onStable.asObservable()\n                .pipe(take(1))\n                .subscribe(() => this._keyManager.setFocusOrigin(origin).setFirstItemActive());\n        } else {\n            this._keyManager.setFocusOrigin(origin).setFirstItemActive();\n        }\n    }\n\n    /**\n     * Resets the active item in the dropdown. This is used when the dropdown is opened, allowing\n     * the user to start from the first option when pressing the down arrow.\n     */\n    resetActiveItem() {\n        this._keyManager.setActiveItem(-1);\n    }\n\n    /**\n     * Registers a dropdown item with the dropdown.\n     * @docs-private\n     */\n    addItem(item: McDropdownItem) {\n        // We register the items through this method, rather than picking them up through\n        // `ContentChildren`, because we need the items to be picked up by their closest\n        // `mc-dropdown` ancestor. If we used `@ContentChildren(McDropdownItem, {descendants: true})`,\n        // all descendant items will bleed into the top-level dropdown in the case where the consumer\n        // has `mc-dropdown` instances nested inside each other.\n        if (this._items.indexOf(item) === -1) {\n            this._items.push(item);\n            this._itemChanges.next(this._items);\n        }\n    }\n\n    /**\n     * Removes an item from the dropdown.\n     * @docs-private\n     */\n    removeItem(item: McDropdownItem) {\n        const index = this._items.indexOf(item);\n\n        if (this._items.indexOf(item) > -1) {\n            this._items.splice(index, 1);\n            this._itemChanges.next(this._items);\n        }\n    }\n\n    /**\n     * Adds classes to the dropdown panel based on its position. Can be used by\n     * consumers to add specific styling based on the position.\n     * @param posX Position of the dropdown along the x axis.\n     * @param posY Position of the dropdown along the y axis.\n     * @docs-private\n     */\n    setPositionClasses(posX: DropdownPositionX = this.xPosition, posY: DropdownPositionY = this.yPosition) {\n        const classes = this._classList;\n        classes['mc-dropdown-before'] = posX === 'before';\n        classes['mc-dropdown-after'] = posX === 'after';\n        classes['mc-dropdown-above'] = posY === 'above';\n        classes['mc-dropdown-below'] = posY === 'below';\n    }\n\n    /** Starts the enter animation. */\n    _startAnimation() {\n        this._panelAnimationState = 'enter';\n    }\n\n    /** Resets the panel animation to its initial state. */\n    _resetAnimation() {\n        this._panelAnimationState = 'void';\n    }\n\n    /** Callback that is invoked when the panel animation completes. */\n    _onAnimationDone(event: AnimationEvent) {\n        this._animationDone.next(event);\n        this._isAnimating = false;\n\n        // Scroll the content element to the top once the animation is done. This is necessary, because\n        // we move focus to the first item while it's still being animated, which can throw the browser\n        // off when it determines the scroll position. Alternatively we can move focus when the\n        // animation is done, however moving focus asynchronously will interrupt screen readers\n        // which are in the process of reading out the dropdown already. We take the `element` from\n        // the `event` since we can't use a `ViewChild` to access the pane.\n        if (event.toState === 'enter' && this._keyManager.activeItemIndex === 0) {\n            event.element.scrollTop = 0;\n        }\n    }\n}\n","import {\n    AfterContentInit,\n    Directive,\n    ElementRef,\n    EventEmitter,\n    Inject,\n    InjectionToken,\n    Input,\n    OnDestroy, OnInit,\n    Optional,\n    Output,\n    ViewContainerRef\n} from '@angular/core';\nimport { FocusMonitor, FocusOrigin } from '@ptsecurity/cdk/a11y';\nimport { Direction, Directionality } from '@ptsecurity/cdk/bidi';\nimport {\n    FlexibleConnectedPositionStrategy,\n    HorizontalConnectionPos,\n    Overlay,\n    OverlayConfig,\n    OverlayRef,\n    VerticalConnectionPos,\n    IScrollStrategy\n} from '@ptsecurity/cdk/overlay';\nimport { TemplatePortal } from '@ptsecurity/cdk/portal';\nimport { merge, Subscription } from 'rxjs';\nimport { filter, take, takeUntil } from 'rxjs/operators';\n\nimport { throwMcDropdownMissingError } from './dropdown-errors';\nimport { McDropdownPanel } from './dropdown-panel';\nimport { McDropdown } from './dropdown.component';\n\n\n/** Injection token that determines the scroll handling while the dropdown is open. */\nexport const MC_DROPDOWN_SCROLL_STRATEGY =\n    new InjectionToken<() => IScrollStrategy>('mc-dropdown-scroll-strategy');\n\n/** @docs-private */\nexport function MC_DROPDOWN_SCROLL_STRATEGY_FACTORY(overlay: Overlay): () => IScrollStrategy {\n    return () => overlay.scrollStrategies.reposition();\n}\n\n/** @docs-private */\nexport const MC_DROPDOWN_SCROLL_STRATEGY_FACTORY_PROVIDER = {\n    provide: MC_DROPDOWN_SCROLL_STRATEGY,\n    deps: [Overlay],\n    useFactory: MC_DROPDOWN_SCROLL_STRATEGY_FACTORY\n};\n\n/**\n * This directive is intended to be used in conjunction with an mc-dropdown tag.  It is\n * responsible for toggling the display of the provided dropdown instance.\n */\n@Directive({\n    selector: `[mcDropdownTriggerFor]`,\n    host: {\n        '(touchstart)': '_openedBy = \"touch\"',\n        '(click)': 'toggle()'\n    },\n    exportAs: 'mcDropdownTrigger'\n})\nexport class McDropdownTrigger implements OnInit, AfterContentInit, OnDestroy {\n\n    /** Whether the dropdown is open. */\n    get opened(): boolean {\n        return this._opened;\n    }\n\n    /** The text direction of the containing app. */\n    get dir(): Direction {\n        return this._dir && this._dir.value === 'rtl' ? 'rtl' : 'ltr';\n    }\n\n    // Tracking input type is necessary so it's possible to only auto-focus\n    // the first item of the list when the dropdown is opened via the keyboard\n    _openedBy: 'mouse' | 'touch' | null = null;\n\n    /** References the dropdown instance that the trigger is associated with. */\n    @Input('mcDropdownTriggerFor') dropdown: McDropdownPanel;\n\n    /** Data to be passed along to any lazily-rendered content. */\n    @Input('mcDropdownTriggerData') data: any;\n\n    /** Event emitted when the associated dropdown is opened. */\n    @Output() readonly dropdownOpened: EventEmitter<void> = new EventEmitter<void>();\n\n    /** Event emitted when the associated dropdown is closed. */\n    @Output() readonly dropdownClosed: EventEmitter<void> = new EventEmitter<void>();\n\n    private _portal: TemplatePortal;\n    private _overlayRef: OverlayRef | null = null;\n    private _opened: boolean = false;\n    private _closeSubscription = Subscription.EMPTY;\n    private _hoverSubscription = Subscription.EMPTY;\n\n    constructor(private _overlay: Overlay,\n                private _element: ElementRef<HTMLElement>,\n                private _viewContainerRef: ViewContainerRef,\n                @Inject(MC_DROPDOWN_SCROLL_STRATEGY) private _scrollStrategy: any,\n                @Optional() private _dir: Directionality,\n                private _focusMonitor?: FocusMonitor) {}\n\n    ngOnInit(): void {\n        this.dropdown.closed = this.dropdown.closed || new EventEmitter<void | 'click' | 'keydown' | 'tab'>();\n    }\n\n    ngAfterContentInit() {\n        this._check();\n\n        this.dropdown.closed.asObservable().subscribe(() => {\n            this._destroy();\n        });\n    }\n\n    ngOnDestroy() {\n        if (this._overlayRef) {\n            this._overlayRef.dispose();\n            this._overlayRef = null;\n        }\n\n        this._cleanUpSubscriptions();\n    }\n\n    /** Toggles the dropdown between the open and closed states. */\n    toggle(): void {\n        // tslint:disable-next-line:no-void-expression\n        return this._opened ? this.close() : this.open();\n    }\n\n    /** Opens the dropdown. */\n    open(): void {\n        if (this._opened) {\n            return;\n        }\n\n        this._check();\n\n        const overlayRef = this._createOverlay();\n        this._setPosition(overlayRef.getConfig().positionStrategy as FlexibleConnectedPositionStrategy);\n        overlayRef.attach(this._portal);\n\n        if (this.dropdown.lazyContent) {\n            this.dropdown.lazyContent.attach(this.data);\n        }\n\n        this._closeSubscription = this._closingActions().subscribe(() => this.close());\n        this._init();\n\n        if (this.dropdown instanceof McDropdown) {\n            this.dropdown._startAnimation();\n        }\n    }\n\n    /** Closes the dropdown. */\n    close(): void {\n        this.dropdown.closed.emit();\n    }\n\n    /**\n     * Focuses the dropdown trigger.\n     * @param origin Source of the dropdown trigger's focus.\n     */\n    focus(origin: FocusOrigin = 'program') {\n        if (this._focusMonitor) {\n            this._focusMonitor.focusVia(this._element.nativeElement, origin);\n        } else {\n            this._element.nativeElement.focus();\n        }\n    }\n\n    /** Closes the dropdown and does the necessary cleanup. */\n    private _destroy() {\n        if (!this._overlayRef || !this.opened) {\n            return;\n        }\n\n        const dropdown = this.dropdown;\n\n        this._closeSubscription.unsubscribe();\n        this._overlayRef.detach();\n\n        if (dropdown instanceof McDropdown) {\n            dropdown._resetAnimation();\n\n            if (dropdown.lazyContent) {\n                // Wait for the exit animation to finish before detaching the content.\n                dropdown._animationDone\n                    .pipe(\n                        filter((event) => event.toState === 'void'),\n                        take(1),\n                        // Interrupt if the content got re-attached.\n                        takeUntil(dropdown.lazyContent._attached)\n                    )\n                    .subscribe(() => dropdown.lazyContent.detach(), undefined, () => {\n                        // No matter whether the content got re-attached, reset the dropdown.\n                        this._reset();\n                    });\n            } else {\n                this._reset();\n            }\n        } else {\n            this._reset();\n\n            if (dropdown.lazyContent) {\n                dropdown.lazyContent.detach();\n            }\n        }\n    }\n\n    /**\n     * This method sets the dropdown state to open and focuses the first item if\n     * the dropdown was opened via the keyboard.\n     */\n    private _init(): void {\n        this.dropdown.direction = this.dir;\n        this._setIsOpened(true);\n        this.dropdown.focusFirstItem(this._openedBy || 'program');\n    }\n\n    /**\n     * This method resets the dropdown when it's closed, most importantly restoring\n     * focus to the dropdown trigger if the dropdown was opened via the keyboard.\n     */\n    private _reset(): void {\n        this._setIsOpened(false);\n\n        // We should reset focus if the user is navigating using a keyboard or\n        // if we have a top-level trigger which might cause focus to be lost\n        // when clicking on the backdrop.\n        if (!this._openedBy) {\n            // Note that the focus style will show up both for `program` and\n            // `keyboard` so we don't have to specify which one it is.\n            this.focus();\n        } else {\n            this.focus(this._openedBy);\n        }\n\n        this._openedBy = null;\n    }\n\n    // set state rather than toggle to support triggers sharing a dropdown\n    private _setIsOpened(isOpen: boolean): void {\n        this._opened = isOpen;\n        // tslint:disable-next-line:no-void-expression\n        this._opened ? this.dropdownOpened.emit() : this.dropdownClosed.emit();\n    }\n\n    /**\n     * This method checks that a valid instance of Dropdown has been passed into\n     * mcDropdownTriggerFor. If not, an exception is thrown.\n     */\n    private _check() {\n        if (!this.dropdown) {\n            throwMcDropdownMissingError();\n        }\n    }\n\n    /**\n     * This method creates the overlay from the provided dropdown's template and saves its\n     * OverlayRef so that it can be attached to the DOM when open is called.\n     */\n    private _createOverlay(): OverlayRef {\n        if (!this._overlayRef) {\n            this._portal = new TemplatePortal(this.dropdown.templateRef, this._viewContainerRef);\n            const config = this._getOverlayConfig();\n            this._subscribeToPositions(config.positionStrategy as FlexibleConnectedPositionStrategy);\n            this._overlayRef = this._overlay.create(config);\n\n            // Consume the `keydownEvents` in order to prevent them from going to another overlay.\n            // Ideally we'd also have our keyboard event logic in here, however doing so will\n            // break anybody that may have implemented the `McDropdownPanel` themselves.\n            this._overlayRef.keydownEvents().subscribe();\n        }\n\n        return this._overlayRef;\n    }\n\n    /**\n     * This method builds the configuration object needed to create the overlay, the OverlayState.\n     * @returns OverlayConfig\n     */\n    private _getOverlayConfig(): OverlayConfig {\n        return new OverlayConfig({\n            positionStrategy: this._overlay.position()\n                .flexibleConnectedTo(this._element)\n                .withLockedPosition()\n                .withTransformOriginOn('.mc-dropdown__panel'),\n            hasBackdrop: this.dropdown.hasBackdrop === null || this.dropdown.hasBackdrop === undefined\n                ? true\n                : this.dropdown.hasBackdrop,\n            backdropClass: this.dropdown.backdropClass || 'cdk-overlay-transparent-backdrop',\n            scrollStrategy: this._scrollStrategy(),\n            direction: this._dir\n        });\n    }\n\n    /**\n     * Listens to changes in the position of the overlay and sets the correct classes\n     * on the dropdown based on the new position. This ensures the animation origin is always\n     * correct, even if a fallback position is used for the overlay.\n     */\n    private _subscribeToPositions(position: FlexibleConnectedPositionStrategy): void {\n        if (this.dropdown.setPositionClasses) {\n            // todo possibly we should not recompute positions there\n            /*position.positionChanges.subscribe((change) => {\n                const posX: DropdownPositionX = change.connectionPair.overlayX === 'start' ? 'after' : 'before';\n                const posY: DropdownPositionY = change.connectionPair.overlayY === 'top' ? 'below' : 'above';\n\n                this.dropdown.setPositionClasses!(posX, posY);\n            });*/\n            position.positionChanges.subscribe(() => {\n                this.dropdown.setPositionClasses!(this.dropdown.xPosition, this.dropdown.yPosition);\n            });\n        }\n    }\n\n    /**\n     * Sets the appropriate positions on a position strategy\n     * so the overlay connects with the trigger correctly.\n     * @param positionStrategy Strategy whose position to update.\n     */\n    private _setPosition(positionStrategy: FlexibleConnectedPositionStrategy) {\n        const [originX, originFallbackX]: HorizontalConnectionPos[] =\n            this.dropdown.xPosition === 'before' ? ['end', 'start'] : ['start', 'end'];\n\n        const [overlayY, overlayFallbackY]: VerticalConnectionPos[] =\n            this.dropdown.yPosition === 'above' ? ['bottom', 'top'] : ['top', 'bottom'];\n\n        let [originY, originFallbackY] = [overlayY, overlayFallbackY];\n        const [overlayX, overlayFallbackX] = [originX, originFallbackX];\n        const offsetY = 0;\n\n        if (!this.dropdown.overlapTrigger) {\n            originY = overlayY === 'top' ? 'bottom' : 'top';\n            originFallbackY = overlayFallbackY === 'top' ? 'bottom' : 'top';\n        }\n\n        positionStrategy.withPositions([\n            {originX, originY, overlayX, overlayY, offsetY},\n            {originX: originFallbackX, originY, overlayX: overlayFallbackX, overlayY, offsetY},\n            {\n                originX,\n                originY: originFallbackY,\n                overlayX,\n                overlayY: overlayFallbackY,\n                offsetY: -offsetY\n            },\n            {\n                originX: originFallbackX,\n                originY: originFallbackY,\n                overlayX: overlayFallbackX,\n                overlayY: overlayFallbackY,\n                offsetY: -offsetY\n            }\n        ]);\n    }\n\n    /** Cleans up the active subscriptions. */\n    private _cleanUpSubscriptions(): void {\n        this._closeSubscription.unsubscribe();\n        this._hoverSubscription.unsubscribe();\n    }\n\n    /** Returns a stream that emits whenever an action that should close the dropdown occurs. */\n    private _closingActions() {\n        const backdrop = this._overlayRef!.backdropClick();\n        const detachments = this._overlayRef!.detachments();\n\n        return merge(backdrop, detachments);\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { OverlayModule } from '@ptsecurity/cdk/overlay';\n\nimport { McDropdownContent } from './dropdown-content';\nimport { McDropdownItem } from './dropdown-item';\nimport { MC_DROPDOWN_SCROLL_STRATEGY_FACTORY_PROVIDER, McDropdownTrigger } from './dropdown-trigger';\nimport { McDropdown } from './dropdown.component';\n\n\n@NgModule({\n    imports: [\n        CommonModule,\n        OverlayModule\n    ],\n    exports: [McDropdown, McDropdownItem, McDropdownTrigger, McDropdownContent],\n    declarations: [McDropdown, McDropdownItem, McDropdownTrigger, McDropdownContent],\n    providers: [MC_DROPDOWN_SCROLL_STRATEGY_FACTORY_PROVIDER]\n})\nexport class McDropdownModule {}\n","import { Component } from '@angular/core';\n\n\n@Component({\n    selector: 'mc-content',\n    preserveWhitespaces: false,\n    templateUrl: './content.component.html',\n    styles: [\n        `:host {\n            display: block;\n        }`\n    ],\n    host: {\n        '[class.mc-layout-content]': 'true'\n    }\n})\nexport class McContentComponent {\n}\n","import { Component } from '@angular/core';\n\n\n@Component({\n    selector: 'mc-footer',\n    preserveWhitespaces: false,\n    templateUrl: './footer.component.html',\n    styles: [\n        `:host {\n            display: block;\n        }`\n    ],\n    host: {\n        '[class.mc-layout-footer]': 'true'\n    }\n})\nexport class McFooterComponent {\n}\n","import { Component } from '@angular/core';\n\n\n@Component({\n    selector : 'mc-header',\n    preserveWhitespaces: false,\n    templateUrl: './header.component.html',\n    styles: [\n        `:host {\n            display: block;\n        }`\n    ],\n    host: {\n        '[class.mc-layout-header]': 'true'\n    }\n})\nexport class McHeaderComponent {\n}\n","import { ChangeDetectionStrategy, Component, ViewEncapsulation } from '@angular/core';\n\n\n@Component({\n    selector: 'mc-layout',\n    preserveWhitespaces: false,\n    styleUrls: ['layout.css'],\n    templateUrl: './layout.component.html',\n    host: {\n        '[class.mc-layout]': 'true',\n        '[class.mc-layout-has-sidebar]': 'hasSidebar'\n    },\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class McLayoutComponent {\n    hasSidebar = false;\n}\n","import {\n    ChangeDetectionStrategy,\n    Component,\n    EventEmitter,\n    Host,\n    Input,\n    OnInit,\n    Optional,\n    Output\n} from '@angular/core';\nimport { toBoolean } from '@ptsecurity/mosaic/core';\n\nimport { McLayoutComponent } from './layout.component';\n\n\n@Component({\n    selector: 'mc-sidebar',\n    preserveWhitespaces: false,\n    templateUrl: './sidebar.component.html',\n    host: {\n        '[class.mc-layout-sidebar]': 'true',\n        '[class.mc-layout-sidebar-collapsed]': 'mcCollapsed',\n        '[style.flex]': 'mcFlex',\n        '[style.max-width.px]': 'mcWidth',\n        '[style.min-width.px]': 'mcWidth',\n        '[style.width.px]': 'mcWidth'\n    },\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class McSidebarComponent implements OnInit {\n\n    @Input() _mcWidth = 200;\n    @Input() mcCollapsedWidth = 80;\n\n    @Input()\n    set mcCollapsible(value: boolean) {\n        this.collapsible = toBoolean(value);\n    }\n\n    get mcCollapsible(): boolean {\n        return this.collapsible;\n    }\n\n    @Input()\n    set mcCollapsed(value: boolean) {\n        this.collapsed = toBoolean(value);\n    }\n\n    get mcCollapsed(): boolean {\n        return this.collapsed;\n    }\n\n    // tslint:disable-next-line\n    @Output() mcCollapsedChange = new EventEmitter();\n\n    private collapsed = false;\n    private collapsible = false;\n\n    get mcFlex(): string {\n        if (this.mcCollapsed) {\n            return `0 0 ${this.mcCollapsedWidth}px`;\n        } else {\n            return `0 0 ${this.mcWidth}px`;\n        }\n    }\n\n    get mcWidth(): number {\n        if (this.mcCollapsed) {\n            return this.mcCollapsedWidth;\n        } else {\n            return this._mcWidth;\n        }\n    }\n\n    constructor(\n        @Optional() @Host() private mcLayoutComponent: McLayoutComponent) {\n    }\n\n    ngOnInit() {\n        if (this.mcLayoutComponent) {\n            this.mcLayoutComponent.hasSidebar = true;\n        }\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { McContentComponent } from './content.component';\nimport { McFooterComponent } from './footer.component';\nimport { McHeaderComponent } from './header.component';\nimport { McLayoutComponent } from './layout.component';\nimport { McSidebarComponent } from './sidebar.component';\n\n\n@NgModule({\n    imports: [ CommonModule ],\n    exports: [\n        McLayoutComponent,\n        McContentComponent,\n        McFooterComponent,\n        McHeaderComponent,\n        McSidebarComponent\n    ],\n    declarations: [\n        McLayoutComponent,\n        McContentComponent,\n        McFooterComponent,\n        McHeaderComponent,\n        McSidebarComponent\n    ]\n})\nexport class McLayoutModule {\n}\n","import {\n    AfterContentInit,\n    Attribute,\n    ChangeDetectionStrategy,\n    Component,\n    ContentChildren,\n    ElementRef,\n    EventEmitter,\n    forwardRef,\n    Input,\n    Output,\n    QueryList,\n    ViewEncapsulation,\n    ChangeDetectorRef,\n    Inject,\n    OnDestroy,\n    OnInit,\n    ViewChild\n} from '@angular/core';\n\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\n\nimport { Subscription } from 'rxjs';\n\nimport { FocusKeyManager, IFocusableOption } from '@ptsecurity/cdk/a11y';\nimport { SelectionModel } from '@ptsecurity/cdk/collections';\nimport { END, ENTER, HOME, PAGE_DOWN, PAGE_UP, SPACE } from '@ptsecurity/cdk/keycodes';\n\nimport {\n    McLine,\n    McLineSetter,\n    CanDisable,\n    mixinDisabled,\n    toBoolean, CanDisableCtor\n} from '@ptsecurity/mosaic/core';\n\n\n/**\n * Component for list-options of selection-list. Each list-option can automatically\n * generate a checkbox and can put current item into the selectionModel of selection-list\n * if the current item is selected.\n */\n@Component({\n    exportAs: 'mcListOption',\n    selector: 'mc-list-option',\n    host: {\n        tabindex: '-1',\n\n        class: 'mc-list-option',\n        '[class.mc-selected]': 'selected',\n        '[class.mc-focused]': '_hasFocus',\n        '(focus)': '_handleFocus()',\n        '(blur)': '_handleBlur()',\n        '(click)': '_handleClick()'\n    },\n    templateUrl: 'list-option.html',\n    encapsulation: ViewEncapsulation.None,\n    preserveWhitespaces: false,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class McListOption implements AfterContentInit, OnDestroy, OnInit, IFocusableOption {\n    _hasFocus: boolean = false;\n\n    @ContentChildren(McLine) _lines: QueryList<McLine>;\n\n    @ViewChild('text') _text: ElementRef;\n\n    // Whether the label should appear before or after the checkbox. Defaults to 'after'\n    @Input() checkboxPosition: 'before' | 'after' = 'after';\n\n    @Input() value: any;\n\n    @Input()\n    get disabled() {\n        return this._disabled || (this.listSelection && this.listSelection.disabled);\n    }\n\n    set disabled(value: any) {\n        const newValue = toBoolean(value);\n\n        if (newValue !== this._disabled) {\n            this._disabled = newValue;\n            this._changeDetector.markForCheck();\n        }\n    }\n\n    @Input()\n    get selected(): boolean {\n        return this.listSelection.selectedOptions && this.listSelection.selectedOptions.isSelected(this) || false;\n    }\n\n    set selected(value: boolean) {\n        const isSelected = toBoolean(value);\n\n        if (isSelected !== this._selected) {\n            this.setSelected(isSelected);\n\n            this.listSelection._reportValueChange();\n        }\n    }\n\n    private _lineSetter: McLineSetter;\n    private _selected = false;\n    private _disabled = false;\n\n    constructor(\n        private _element: ElementRef,\n        private _changeDetector: ChangeDetectorRef,\n        @Inject(forwardRef(() => McListSelection))\n        public listSelection: McListSelection\n    ) {}\n\n    ngOnInit() {\n        if (this._selected) {\n            // List options that are selected at initialization can't be reported properly to the form\n            // control. This is because it takes some time until the selection-list knows about all\n            // available options. Also it can happen that the ControlValueAccessor has an initial value\n            // that should be used instead. Deferring the value change report to the next tick ensures\n            // that the form control value is not being overwritten.\n            const wasSelected = this._selected;\n\n            Promise.resolve().then(() => {\n                if (this._selected || wasSelected) {\n                    this.selected = true;\n                    this._changeDetector.markForCheck();\n                }\n            });\n        }\n    }\n\n    ngAfterContentInit() {\n        this._lineSetter = new McLineSetter(this._lines, this._element);\n    }\n\n    ngOnDestroy(): void {\n        if (this.selected) {\n            // We have to delay this until the next tick in order\n            // to avoid changed after checked errors.\n            Promise.resolve().then(() => this.selected = false);\n        }\n\n        this.listSelection._removeOptionFromList(this);\n    }\n\n    toggle(): void {\n        this.selected = !this.selected;\n    }\n\n    focus(): void {\n        this._element.nativeElement.focus();\n\n        this.listSelection.setFocusedOption(this);\n    }\n\n    getLabel() {\n        return this._text ? this._text.nativeElement.textContent : '';\n    }\n\n    setSelected(selected: boolean) {\n        if (this._selected === selected || !this.listSelection.selectedOptions) { return; }\n\n        this._selected = selected;\n\n        if (selected) {\n            this.listSelection.selectedOptions.select(this);\n        } else {\n            this.listSelection.selectedOptions.deselect(this);\n        }\n\n        this._changeDetector.markForCheck();\n    }\n\n    _getHeight(): number {\n        return this._element.nativeElement.getClientRects()[0].height;\n    }\n\n    _handleClick() {\n        if (this.disabled) { return; }\n\n        this.listSelection.setFocusedOption(this);\n    }\n\n    _handleFocus() {\n        if (this.disabled || this._hasFocus) { return; }\n\n        this._hasFocus = true;\n    }\n\n    _handleBlur() {\n        this._hasFocus = false;\n\n        this.listSelection._onTouched();\n    }\n\n    _getHostElement(): HTMLElement {\n        return this._element.nativeElement;\n    }\n}\n\n\nexport const MC_SELECTION_LIST_VALUE_ACCESSOR: any = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => McListSelection),\n    multi: true\n};\n\n// Change event that is being fired whenever the selected state of an option changes. */\nexport class McListSelectionChange {\n    constructor(\n        // Reference to the selection list that emitted the event.\n        public source: McListSelection,\n        // Reference to the option that has been changed.\n        public option: McListOption\n    ) {}\n}\n\n\nexport class McListSelectionBase {}\n\nexport const _McListSelectionMixinBase: CanDisableCtor & typeof McListSelectionBase\n    = mixinDisabled(McListSelectionBase);\n\n@Component({\n    exportAs: 'mcListSelection',\n    selector: 'mc-list-selection',\n    template: '<ng-content></ng-content>',\n    styleUrls: ['./list.css'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n    inputs: ['disabled', 'tabIndex'],\n    host: {\n        class: 'mc-list-selection',\n        '[tabIndex]': 'tabIndex',\n        '(focus)': 'focus()',\n        '(blur)': '_onTouched()',\n        '(keydown)': '_onKeyDown($event)',\n        '(window:resize)': 'updateScrollSize()'\n    },\n    providers: [MC_SELECTION_LIST_VALUE_ACCESSOR],\n    preserveWhitespaces: false\n})\nexport class McListSelection extends _McListSelectionMixinBase implements\n    IFocusableOption, CanDisable, AfterContentInit, ControlValueAccessor {\n\n    _keyManager: FocusKeyManager<McListOption>;\n\n    // The option components contained within this selection-list.\n    @ContentChildren(McListOption) options: QueryList<McListOption>;\n\n    tabIndex: number;\n\n    autoSelect: boolean;\n    noUnselect: boolean;\n    multiple: boolean;\n\n    // todo temporary solution\n    withShift: boolean;\n    withCtrl: boolean;\n\n    @Input() horizontal: boolean = false;\n\n    // Emits a change event whenever the selected state of an option changes.\n    @Output() readonly selectionChange: EventEmitter<McListSelectionChange> = new EventEmitter<McListSelectionChange>();\n\n    selectedOptions: SelectionModel<McListOption>;\n\n    // Used for storing the values that were assigned before the options were initialized.\n    private _tempValues: string[] | null;\n\n    private _modelChanges = Subscription.EMPTY;\n\n    constructor(\n        private _element: ElementRef,\n        @Attribute('tabindex') tabIndex: string,\n        @Attribute('auto-select') autoSelect: string,\n        @Attribute('no-unselect') noUnselect: string,\n        @Attribute('multiple') multiple: string\n    ) {\n        super();\n\n        this.autoSelect = autoSelect === null ? true : toBoolean(autoSelect);\n        this.multiple = multiple === null ? true : toBoolean(multiple);\n        this.noUnselect = noUnselect === null ? true : toBoolean(noUnselect);\n\n        this.tabIndex = parseInt(tabIndex) || 0;\n\n        this.selectedOptions = new SelectionModel<McListOption>(this.multiple);\n    }\n\n    ngAfterContentInit(): void {\n        this.horizontal = toBoolean(this.horizontal);\n\n        this._keyManager = new FocusKeyManager<McListOption>(this.options)\n            .withTypeAhead()\n            .withVerticalOrientation(!this.horizontal)\n            .withHorizontalOrientation(this.horizontal ? 'ltr' : null);\n\n        if (this._tempValues) {\n            this._setOptionsFromValues(this._tempValues);\n            this._tempValues = null;\n        }\n\n        // Sync external changes to the model back to the options.\n        this._modelChanges = this.selectedOptions.onChange!.subscribe((event) => {\n            for (const item of event.added) {\n                item.selected = true;\n            }\n\n            for (const item of event.removed) {\n                item.selected = false;\n            }\n        });\n\n        this.updateScrollSize();\n    }\n\n    ngOnDestroy() {\n        this._modelChanges.unsubscribe();\n    }\n\n    focus() {\n        this._element.nativeElement.focus();\n    }\n\n    selectAll() {\n        this.options.forEach((option) => option.setSelected(true));\n\n        this._reportValueChange();\n    }\n\n    deselectAll() {\n        this.options.forEach((option) => option.setSelected(false));\n\n        this._reportValueChange();\n    }\n\n    updateScrollSize(): void {\n        if (this.horizontal || !this.options.first) { return; }\n\n        this._keyManager.withScrollSize(Math.floor(this._getHeight() / this.options.first._getHeight()));\n    }\n\n    // Sets the focused option of the selection-list.\n    setFocusedOption(option: McListOption): void {\n        this._keyManager.updateActiveItem(option);\n\n        if (this.withShift && this.multiple) {\n            const previousIndex = this._keyManager.previousActiveItemIndex;\n            const activeIndex = this._keyManager.activeItemIndex;\n\n            if (previousIndex < activeIndex) {\n                this.options.forEach((item, index) => {\n                    if (index >= previousIndex && index <= activeIndex) { item.setSelected(true); }\n                });\n            } else {\n                this.options.forEach((item, index) => {\n                    if (index >= activeIndex && index <= previousIndex) { item.setSelected(true); }\n                });\n            }\n\n            this.withShift = false;\n        } else if (this.withCtrl) {\n            this.withCtrl = false;\n\n            if (!this._canDeselectLast(option)) { return; }\n\n            option.toggle();\n        } else {\n            if (this.autoSelect) {\n                this.options.forEach((item) => item.setSelected(false));\n                option.setSelected(true);\n            }\n        }\n\n        this._emitChangeEvent(option);\n        this._reportValueChange();\n    }\n\n    // Implemented as part of ControlValueAccessor.\n    writeValue(values: string[]): void {\n        if (this.options) {\n            this._setOptionsFromValues(values || []);\n        } else {\n            this._tempValues = values;\n        }\n    }\n\n    // Implemented as part of ControlValueAccessor.\n    registerOnChange(fn: (value: any) => void): void {\n        this._onChange = fn;\n    }\n\n    // Implemented as part of ControlValueAccessor.\n    registerOnTouched(fn: () => void): void {\n        this._onTouched = fn;\n    }\n\n    // Implemented as a part of ControlValueAccessor.\n    setDisabledState(isDisabled: boolean): void {\n        if (this.options) {\n            this.options.forEach((option) => option.disabled = isDisabled);\n        }\n    }\n\n    getSelectedOptionValues(): string[] {\n        return this.options.filter((option) => option.selected).map((option) => option.value);\n    }\n\n    // Toggles the selected state of the currently focused option.\n    toggleFocusedOption(): void {\n        const focusedIndex = this._keyManager.activeItemIndex;\n\n        if (focusedIndex != null && this._isValidIndex(focusedIndex)) {\n            const focusedOption: McListOption = this.options.toArray()[focusedIndex];\n\n            if (focusedOption && this._canDeselectLast(focusedOption)) {\n                focusedOption.toggle();\n\n                // Emit a change event because the focused option changed its state through user interaction.\n                this._emitChangeEvent(focusedOption);\n            }\n        }\n    }\n\n    _canDeselectLast(listOption: McListOption): boolean {\n        return !(this.noUnselect && this.selectedOptions.selected.length === 1 && listOption.selected);\n    }\n\n    _getHeight(): number {\n        return this._element.nativeElement.getClientRects()[0].height;\n    }\n\n    // View to model callback that should be called if the list or its options lost focus.\n    _onTouched: () => void = () => {};\n\n    // Removes an option from the selection list and updates the active item.\n    _removeOptionFromList(option: McListOption) {\n        if (option._hasFocus) {\n            const optionIndex = this._getOptionIndex(option);\n\n            // Check whether the option is the last item\n            if (optionIndex > 0) {\n                this._keyManager.setPreviousItemActive();\n            } else if (optionIndex === 0 && this.options.length > 1) {\n                this._keyManager.setNextItemActive();\n            }\n        }\n    }\n\n    _onKeyDown(event: KeyboardEvent) {\n        const keyCode = event.keyCode;\n        this.withShift = event.shiftKey;\n        this.withCtrl = event.ctrlKey;\n\n        switch (keyCode) {\n            case SPACE:\n            case ENTER:\n                this.toggleFocusedOption();\n                event.preventDefault();\n\n                break;\n            case HOME:\n                this._keyManager.setFirstItemActive();\n                event.preventDefault();\n\n                break;\n            case END:\n                this._keyManager.setLastItemActive();\n                event.preventDefault();\n\n                break;\n            case PAGE_UP:\n                if (!this.horizontal) { this._keyManager.setPreviousPageItemActive(); }\n\n                event.preventDefault();\n\n                break;\n            case PAGE_DOWN:\n                if (!this.horizontal) { this._keyManager.setNextPageItemActive(); }\n\n                event.preventDefault();\n\n                break;\n            default:\n                this._keyManager.onKeydown(event);\n        }\n    }\n\n    // Reports a value change to the ControlValueAccessor\n    _reportValueChange() {\n        if (this.options) {\n            this._onChange(this.getSelectedOptionValues());\n        }\n    }\n\n    // Emits a change event if the selected state of an option changed.\n    _emitChangeEvent(option: McListOption) {\n        this.selectionChange.emit(new McListSelectionChange(this, option));\n    }\n\n    // Returns the option with the specified value.\n    private _getOptionByValue(value: string): McListOption | undefined {\n        return this.options.find((option) => option.value === value);\n    }\n\n    // Sets the selected options based on the specified values.\n    private _setOptionsFromValues(values: string[]) {\n        this.options.forEach((option) => option.setSelected(false));\n\n        values\n            .map((value) => this._getOptionByValue(value))\n            .filter(Boolean)\n            .forEach((option) => option!.setSelected(true));\n    }\n\n    /**\n     * Utility to ensure all indexes are valid.\n     * @param index The index to be checked.\n     * @returns True if the index is valid for our list of options.\n     */\n    private _isValidIndex(index: number): boolean {\n        return index >= 0 && index < this.options.length;\n    }\n\n    // Returns the index of the specified list option.\n    private _getOptionIndex(option: McListOption): number {\n        return this.options.toArray().indexOf(option);\n    }\n\n    // View to model callback that should be called whenever the selected options change.\n    private _onChange: (value: any) => void = (_: any) => {};\n}\n","// todo пока не делаем, перенесено из материала, но у нас в доках таких простых списков нет.\nimport {\n    AfterContentInit, ChangeDetectionStrategy, Component, ContentChildren, Directive, ElementRef, QueryList,\n    ViewEncapsulation\n} from '@angular/core';\n\nimport { McLine, McLineSetter } from '@ptsecurity/mosaic/core';\n\n\nexport class McListBase {}\n\n@Component({\n    selector: 'mc-list',\n    host: { class: 'mc-list' },\n    template: '<ng-content></ng-content>',\n    styleUrls: ['./list.css'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None\n})\nexport class McList extends McListBase {}\n\n\n/**\n * Directive whose purpose is to add the mc- CSS styling to this selector.\n * @docs-private\n */\n@Directive({\n    selector: '[mc-subheader], [mcSubheader]',\n    host: { class: 'mc-subheader' }\n})\nexport class McListSubheaderCssStyler {}\n\n\n// Boilerplate for applying mixins to McListItem.\nexport class McListItemBase {}\n\n@Component({\n    selector: 'mc-list-item, a[mc-list-item]',\n    host: {\n        class: 'mc-list-item',\n        '(focus)': '_handleFocus()',\n        '(blur)': '_handleBlur()'\n    },\n    templateUrl: './list-item.html',\n    encapsulation: ViewEncapsulation.None,\n    preserveWhitespaces: false,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class McListItem extends McListItemBase implements AfterContentInit {\n    @ContentChildren(McLine) _lines: QueryList<McLine>;\n\n    private _lineSetter: McLineSetter;\n\n    constructor(private _element: ElementRef) {\n        super();\n    }\n\n    ngAfterContentInit() {\n        this._lineSetter = new McLineSetter(this._lines, this._element);\n    }\n\n    _handleFocus() {\n        this._element.nativeElement.classList.add('mc-focused');\n    }\n\n    _handleBlur() {\n        this._element.nativeElement.classList.remove('mc-focused');\n    }\n\n    _getHostElement(): HTMLElement {\n        return this._element.nativeElement;\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { A11yModule } from '@ptsecurity/cdk/a11y';\n\nimport { McLineModule } from '@ptsecurity/mosaic/core';\n\nimport { McListSelection, McListOption } from './list-selection.component';\nimport { McList, McListItem, McListSubheaderCssStyler } from './list.component';\n\n\n@NgModule({\n    imports: [\n        CommonModule,\n        A11yModule,\n        McLineModule\n    ],\n    exports: [\n        McList,\n        McListSelection,\n        McListItem,\n        McListOption,\n        McListSubheaderCssStyler\n    ],\n    declarations: [\n        McList,\n        McListSelection,\n        McListItem,\n        McListOption,\n        McListSubheaderCssStyler\n    ]\n})\nexport class McListModule {}\n","import {\n    Input,\n    Attribute,\n    Component,\n    ElementRef,\n    OnDestroy,\n    ViewEncapsulation,\n    ChangeDetectionStrategy,\n    ChangeDetectorRef\n} from '@angular/core';\n\nimport { FocusMonitor } from '@ptsecurity/cdk/a11y';\nimport {\n    CanDisable, CanDisableCtor,\n    HasTabIndex, HasTabIndexCtor,\n    mixinDisabled,\n    mixinTabIndex,\n    toBoolean\n} from '@ptsecurity/mosaic/core';\n\n\nexport class McLinkBase {\n    constructor(public _elementRef: ElementRef) {\n    }\n}\n\nexport const _McLinkBase: HasTabIndexCtor & CanDisableCtor & typeof McLinkBase\n    = mixinTabIndex(mixinDisabled(McLinkBase));\n\n@Component({\n    selector: 'a.mc-link',\n    template: `<ng-content></ng-content>`,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n    exportAs: 'mcLink',\n    styleUrls: ['./link.css'],\n    inputs: ['disabled'],\n    host: {\n        '[attr.disabled]': 'disabled || null',\n        '[attr.tabindex]': 'tabIndex'\n    }\n})\n\nexport class McLink extends _McLinkBase implements OnDestroy, HasTabIndex, CanDisable {\n\n    @Input()\n    get disabled() {\n        return this._disabled;\n    }\n\n    set disabled(value: any) {\n        const newValue = toBoolean(value);\n\n        if (newValue !== this._disabled) {\n            this._disabled = newValue;\n            this._changeDetector.markForCheck();\n        }\n    }\n\n    private _disabled = false;\n\n    constructor(\n        @Attribute('tabindex') tabIndex: string,\n        public elementRef: ElementRef,\n        private _focusMonitor: FocusMonitor,\n        private _changeDetector: ChangeDetectorRef) {\n\n        super(elementRef);\n        this._focusMonitor.monitor(elementRef.nativeElement, true);\n        this.tabIndex = parseInt(tabIndex) || 0;\n    }\n\n    ngOnDestroy() {\n        this._focusMonitor.stopMonitoring(this.elementRef.nativeElement);\n    }\n\n    focus(): void {\n        this._getHostElement().focus();\n    }\n\n    _getHostElement() {\n        return this.elementRef.nativeElement;\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { A11yModule } from '@ptsecurity/cdk/a11y';\n\nimport { McLink } from './link.component';\n\n\n@NgModule({\n    imports: [\n        CommonModule,\n        A11yModule\n    ],\n    declarations: [McLink],\n    exports: [McLink]\n})\nexport class McLinkModule {}\n","import {\n    AfterContentInit,\n    AfterViewChecked,\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    EventEmitter,\n    forwardRef,\n    Inject,\n    Input,\n    OnChanges,\n    OnDestroy,\n    Optional,\n    Output,\n    SimpleChanges,\n    ViewChild,\n    ViewEncapsulation\n} from '@angular/core';\nimport { DateAdapter, MC_DATE_FORMATS, McDateFormats } from '@ptsecurity/cdk/datetime';\nimport { ComponentPortal, IComponentType, Portal } from '@ptsecurity/cdk/portal';\nimport { Subject, Subscription } from 'rxjs';\n\nimport { McCalendarCellCssClasses } from './calendar-body';\nimport { createMissingDateImplError } from './datepicker-errors';\nimport { McDatepickerIntl } from './datepicker-intl';\nimport { McMonthView } from './month-view';\nimport { McMultiYearView, yearsPerPage } from './multi-year-view';\nimport { McYearView } from './year-view';\n\n\n/**\n * Possible views for the calendar.\n * @docs-private\n */\nexport type McCalendarView = 'month' | 'year' | 'multi-year';\n\n/** Default header for McCalendar */\n@Component({\n    selector: 'mc-calendar-header',\n    templateUrl: 'calendar-header.html',\n    exportAs: 'mcCalendarHeader',\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class McCalendarHeader<D> {\n    constructor(private intl: McDatepickerIntl,\n                @Inject(forwardRef(() => McCalendar)) public calendar: McCalendar<D>,\n                @Optional() private dateAdapter: DateAdapter<D>,\n                @Optional() @Inject(MC_DATE_FORMATS) private dateFormats: McDateFormats,\n                changeDetectorRef: ChangeDetectorRef) {\n\n        this.calendar.stateChanges.subscribe(() => changeDetectorRef.markForCheck());\n    }\n\n    /** The label for the current calendar view. */\n    get periodButtonText(): string {\n        if (this.calendar.currentView === 'month') {\n            const label = this.dateAdapter\n                .format(this.calendar.activeDate, this.dateFormats.display.monthYearLabel);\n\n            return label[0].toLocaleUpperCase() + label.substr(1);\n        }\n\n        if (this.calendar.currentView === 'year') {\n            return this.dateAdapter.getYearName(this.calendar.activeDate);\n        }\n\n        const activeYear = this.dateAdapter.getYear(this.calendar.activeDate);\n        const firstYearInView = this.dateAdapter.getYearName(\n            // tslint:disable-next-line:no-magic-numbers\n            this.dateAdapter.createDate(activeYear - activeYear % 24, 0, 1));\n        const lastYearInView = this.dateAdapter.getYearName(\n            // tslint:disable-next-line:no-magic-numbers\n            this.dateAdapter.createDate(activeYear + yearsPerPage - 1 - activeYear % 24, 0, 1));\n\n        return `${firstYearInView} \\u2013 ${lastYearInView}`;\n    }\n\n    get periodButtonLabel(): string {\n        return this.calendar.currentView === 'month' ?\n            this.intl.switchToMultiYearViewLabel : this.intl.switchToMonthViewLabel;\n    }\n\n    /** The label for the previous button. */\n    get prevButtonLabel(): string {\n        return {\n            month: this.intl.prevMonthLabel,\n            year: this.intl.prevYearLabel,\n            'multi-year': this.intl.prevMultiYearLabel\n        }[this.calendar.currentView];\n    }\n\n    /** The label for the next button. */\n    get nextButtonLabel(): string {\n        return {\n            month: this.intl.nextMonthLabel,\n            year: this.intl.nextYearLabel,\n            'multi-year': this.intl.nextMultiYearLabel\n        }[this.calendar.currentView];\n    }\n\n    /** Handles user clicks on the period label. */\n    currentPeriodClicked(): void {\n        this.calendar.currentView = this.calendar.currentView === 'month' ? 'multi-year' : 'month';\n    }\n\n    /** Handles user clicks on the previous button. */\n    previousClicked(): void {\n        this.calendar.activeDate = this.calendar.currentView === 'month' ?\n            this.dateAdapter.addCalendarMonths(this.calendar.activeDate, -1) :\n            this.dateAdapter.addCalendarYears(\n                this.calendar.activeDate, this.calendar.currentView === 'year' ? -1 : -yearsPerPage\n            );\n    }\n\n    /** Handles user clicks on the next button. */\n    nextClicked(): void {\n        this.calendar.activeDate = this.calendar.currentView === 'month' ?\n            this.dateAdapter.addCalendarMonths(this.calendar.activeDate, 1) :\n            this.dateAdapter.addCalendarYears(\n                this.calendar.activeDate,\n                this.calendar.currentView === 'year' ? 1 : yearsPerPage\n            );\n    }\n\n    /** Whether the previous period button is enabled. */\n    previousEnabled(): boolean {\n        if (!this.calendar.minDate) {\n            return true;\n        }\n\n        return !this.calendar.minDate ||\n            !this.isSameView(this.calendar.activeDate, this.calendar.minDate);\n    }\n\n    /** Whether the next period button is enabled. */\n    nextEnabled(): boolean {\n        return !this.calendar.maxDate ||\n            !this.isSameView(this.calendar.activeDate, this.calendar.maxDate);\n    }\n\n    /** Whether the two dates represent the same view in the current view mode (month or year). */\n    private isSameView(date1: D, date2: D): boolean {\n        if (this.calendar.currentView === 'month') {\n            return this.dateAdapter.getYear(date1) === this.dateAdapter.getYear(date2) &&\n                this.dateAdapter.getMonth(date1) === this.dateAdapter.getMonth(date2);\n        }\n        if (this.calendar.currentView === 'year') {\n            return this.dateAdapter.getYear(date1) === this.dateAdapter.getYear(date2);\n        }\n\n        // Otherwise we are in 'multi-year' view.\n        return Math.floor(this.dateAdapter.getYear(date1) / yearsPerPage) ===\n            Math.floor(this.dateAdapter.getYear(date2) / yearsPerPage);\n    }\n}\n\n/**\n * A calendar that is used as part of the datepicker.\n * @docs-private\n */\n@Component({\n    selector: 'mc-calendar',\n    templateUrl: 'calendar.html',\n    styleUrls: ['calendar.css'],\n    host: {\n        class: 'mc-calendar'\n    },\n    exportAs: 'mcCalendar',\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class McCalendar<D> implements AfterContentInit, AfterViewChecked, OnDestroy, OnChanges {\n\n    /** A date representing the period (month or year) to start the calendar in. */\n    @Input()\n    get startAt(): D | null {\n        return this._startAt;\n    }\n\n    set startAt(value: D | null) {\n        this._startAt = this.getValidDateOrNull(this.dateAdapter.deserialize(value));\n    }\n\n    /** The currently selected date. */\n    @Input()\n    get selected(): D | null {\n        return this._selected;\n    }\n\n    set selected(value: D | null) {\n        this._selected = this.getValidDateOrNull(this.dateAdapter.deserialize(value));\n    }\n\n    /** The minimum selectable date. */\n    @Input()\n    get minDate(): D | null {\n        return this._minDate;\n    }\n\n    set minDate(value: D | null) {\n        this._minDate = this.getValidDateOrNull(this.dateAdapter.deserialize(value));\n    }\n\n    /** The maximum selectable date. */\n    @Input()\n    get maxDate(): D | null {\n        return this._maxDate;\n    }\n\n    set maxDate(value: D | null) {\n        this._maxDate = this.getValidDateOrNull(this.dateAdapter.deserialize(value));\n    }\n\n    /**\n     * The current active date. This determines which time period is shown and which date is\n     * highlighted when using keyboard navigation.\n     */\n    get activeDate(): D {\n        return this.clampedActiveDate;\n    }\n\n    set activeDate(value: D) {\n        this.clampedActiveDate = this.dateAdapter.clampDate(value, this.minDate, this.maxDate);\n        this.stateChanges.next();\n    }\n\n    /** Whether the calendar is in month view. */\n    get currentView(): McCalendarView {\n        return this._currentView;\n    }\n\n    set currentView(value: McCalendarView) {\n        this._currentView = value;\n        this.moveFocusOnNextTick = true;\n    }\n\n    /** An input indicating the type of the header component, if set. */\n    @Input() headerComponent: IComponentType<any>;\n\n    /** A portal containing the header component type for this calendar. */\n    calendarHeaderPortal: Portal<any>;\n\n    /** Whether the calendar should be started in month or year view. */\n    @Input() startView: McCalendarView = 'month';\n\n    /** Function used to filter which dates are selectable. */\n    @Input() dateFilter: (date: D) => boolean;\n\n    /** Function that can be used to add custom CSS classes to dates. */\n    @Input() dateClass: (date: D) => McCalendarCellCssClasses;\n\n    /** Emits when the currently selected date changes. */\n    @Output() readonly selectedChange: EventEmitter<D> = new EventEmitter<D>();\n\n    /**\n     * Emits the year chosen in multiyear view.\n     * This doesn't imply a change on the selected date.\n     */\n    @Output() readonly yearSelected: EventEmitter<D> = new EventEmitter<D>();\n\n    /**\n     * Emits the month chosen in year view.\n     * This doesn't imply a change on the selected date.\n     */\n    @Output() readonly monthSelected: EventEmitter<D> = new EventEmitter<D>();\n\n    /** Emits when any date is selected. */\n    @Output() readonly userSelection: EventEmitter<void> = new EventEmitter<void>();\n\n    /** Reference to the current month view component. */\n    @ViewChild(McMonthView) monthView: McMonthView<D>;\n\n    /** Reference to the current year view component. */\n    @ViewChild(McYearView) yearView: McYearView<D>;\n\n    /** Reference to the current multi-year view component. */\n    @ViewChild(McMultiYearView) multiYearView: McMultiYearView<D>;\n\n    /**\n     * Emits whenever there is a state change that the header may need to respond to.\n     */\n    stateChanges = new Subject<void>();\n\n    private intlChanges: Subscription;\n\n    /**\n     * Used for scheduling that focus should be moved to the active cell on the next tick.\n     * We need to schedule it, rather than do it immediately, because we have to wait\n     * for Angular to re-evaluate the view children.\n     */\n    private moveFocusOnNextTick = false;\n    private _startAt: D | null;\n    private _selected: D | null;\n    private _minDate: D | null;\n    private _maxDate: D | null;\n    private clampedActiveDate: D;\n    private _currentView: McCalendarView;\n\n    constructor(\n        intl: McDatepickerIntl,\n        @Optional() private dateAdapter: DateAdapter<D>,\n        @Optional() @Inject(MC_DATE_FORMATS) private dateFormats: McDateFormats,\n        private changeDetectorRef: ChangeDetectorRef\n    ) {\n        if (!this.dateAdapter) {\n            throw createMissingDateImplError('DateAdapter');\n        }\n\n        if (!this.dateFormats) {\n            throw createMissingDateImplError('MC_DATE_FORMATS');\n        }\n\n        this.intlChanges = intl.changes.subscribe(() => {\n            changeDetectorRef.markForCheck();\n            this.stateChanges.next();\n        });\n    }\n\n    ngAfterContentInit() {\n        this.calendarHeaderPortal = new ComponentPortal(this.headerComponent || McCalendarHeader);\n        this.activeDate = this.startAt || this.dateAdapter.today();\n\n        // Assign to the private property since we don't want to move focus on init.\n        this._currentView = this.startView;\n    }\n\n    ngAfterViewChecked() {\n        if (this.moveFocusOnNextTick) {\n            this.moveFocusOnNextTick = false;\n            this.focusActiveCell();\n        }\n    }\n\n    ngOnDestroy() {\n        this.intlChanges.unsubscribe();\n        this.stateChanges.complete();\n    }\n\n    ngOnChanges(changes: SimpleChanges) {\n        const change = changes.minDate || changes.maxDate || changes.dateFilter;\n\n        if (change && !change.firstChange) {\n            const view = this.getCurrentViewComponent();\n\n            if (view) {\n                // We need to `detectChanges` manually here, because the `minDate`, `maxDate` etc. are\n                // passed down to the view via data bindings which won't be up-to-date when we call `init`.\n                this.changeDetectorRef.detectChanges();\n                view.init();\n            }\n        }\n\n        this.stateChanges.next();\n    }\n\n    focusActiveCell() {\n        this.getCurrentViewComponent().focusActiveCell();\n    }\n\n    /** Updates today's date after an update of the active date */\n    updateTodaysDate() {\n        const view = this.currentView === 'month' ? this.monthView :\n            (this.currentView === 'year' ? this.yearView : this.multiYearView);\n\n        view.ngAfterContentInit();\n    }\n\n    /** Handles date selection in the month view. */\n    dateSelected(date: D): void {\n        if (!this.dateAdapter.sameDate(date, this.selected)) {\n            this.selectedChange.emit(date);\n        }\n    }\n\n    /** Handles year selection in the multiyear view. */\n    yearSelectedInMultiYearView(normalizedYear: D) {\n        this.yearSelected.emit(normalizedYear);\n    }\n\n    /** Handles month selection in the year view. */\n    monthSelectedInYearView(normalizedMonth: D) {\n        this.monthSelected.emit(normalizedMonth);\n    }\n\n    userSelected(): void {\n        this.userSelection.emit();\n    }\n\n    /** Handles year/month selection in the multi-year/year views. */\n    goToDateInView(date: D, view: 'month' | 'year' | 'multi-year'): void {\n        this.activeDate = date;\n        this.currentView = view;\n    }\n\n    /**\n     * @param obj The object to check.\n     * @returns The given object if it is both a date instance and valid, otherwise null.\n     */\n    private getValidDateOrNull(obj: any): D | null {\n        return (this.dateAdapter.isDateInstance(obj) && this.dateAdapter.isValid(obj)) ? obj : null;\n    }\n\n    /** Returns the component instance that corresponds to the current calendar view. */\n    private getCurrentViewComponent() {\n        return this.monthView || this.yearView || this.multiYearView;\n    }\n}\n","import {\n    animate,\n    state,\n    style,\n    transition,\n    trigger,\n    AnimationTriggerMetadata\n} from '@angular/animations';\n\n\n/**\n * Animations used by the mosaic datepicker.\n * @docs-private\n */\nexport const mcDatepickerAnimations: {\n    readonly transformPanel: AnimationTriggerMetadata;\n    readonly fadeInCalendar: AnimationTriggerMetadata;\n} = {\n    /** Transforms the height of the datepicker's calendar. */\n    transformPanel: trigger('transformPanel', [\n        state('void', style({\n            opacity: 0,\n            transform: 'scale(1, 0.8)'\n        })),\n        transition('void => enter', animate('120ms cubic-bezier(0, 0, 0.2, 1)', style({\n            opacity: 1,\n            transform: 'scale(1, 1)'\n        }))),\n        transition('* => void', animate('100ms linear', style({ opacity: 0 })))\n    ]),\n\n    /** Fades in the content of the calendar. */\n    fadeInCalendar: trigger('fadeInCalendar', [\n        state('void', style({ opacity: 0 })),\n        state('enter', style({ opacity: 1 })),\n\n        // need to keep it until #12440 gets in, otherwise the exit animation will look glitchy.\n        transition('void => *', animate('120ms 100ms cubic-bezier(0.55, 0, 0.55, 0.2)'))\n    ])\n};\n\n// todo should be put into polyfils\n// https://github.com/angular/angular/issues/24769\nif (!Element.prototype.matches) {\n    Element.prototype.matches = (Element.prototype as any).msMatchesSelector;\n}\n","// tslint:disable:no-unbound-method\n// tslint:disable:no-magic-numbers\nimport { DOCUMENT } from '@angular/common';\nimport {\n    AfterViewInit,\n    ChangeDetectionStrategy,\n    Component,\n    ComponentRef,\n    ElementRef,\n    EventEmitter,\n    Inject,\n    InjectionToken,\n    Input,\n    NgZone,\n    OnDestroy,\n    Optional,\n    Output,\n    ViewChild,\n    ViewContainerRef,\n    ViewEncapsulation\n} from '@angular/core';\nimport { Directionality } from '@ptsecurity/cdk/bidi';\nimport { coerceBooleanProperty } from '@ptsecurity/cdk/coercion';\nimport { DateAdapter } from '@ptsecurity/cdk/datetime';\nimport { ESCAPE, UP_ARROW } from '@ptsecurity/cdk/keycodes';\nimport {\n    Overlay,\n    OverlayConfig,\n    OverlayRef,\n    IPositionStrategy,\n    IScrollStrategy\n} from '@ptsecurity/cdk/overlay';\nimport { ComponentPortal, IComponentType } from '@ptsecurity/cdk/portal';\nimport {\n    CanColor,\n    CanColorCtor,\n    mixinColor,\n    ThemePalette\n} from '@ptsecurity/mosaic/core';\nimport { McFormFieldControl } from '@ptsecurity/mosaic/form-field';\nimport { merge, Observable, Subject, Subscription } from 'rxjs';\nimport { filter, take } from 'rxjs/operators';\n\nimport { McCalendar } from './calendar';\nimport { McCalendarCellCssClasses } from './calendar-body';\nimport { mcDatepickerAnimations } from './datepicker-animations';\nimport { createMissingDateImplError } from './datepicker-errors';\nimport { McDatepickerInput } from './datepicker-input';\n\n\n/** Used to generate a unique ID for each datepicker instance. */\nlet datepickerUid = 0;\n\n/** Injection token that determines the scroll handling while the calendar is open. */\nexport const MC_DATEPICKER_SCROLL_STRATEGY =\n    new InjectionToken<() => IScrollStrategy>('mc-datepicker-scroll-strategy');\n\n/** @docs-private */\n// tslint:disable-next-line:naming-convention\nexport function MC_DATEPICKER_SCROLL_STRATEGY_FACTORY(overlay: Overlay): () => IScrollStrategy {\n    return () => overlay.scrollStrategies.reposition();\n}\n\n/** @docs-private */\nexport const MC_DATEPICKER_SCROLL_STRATEGY_FACTORY_PROVIDER = {\n    provide: MC_DATEPICKER_SCROLL_STRATEGY,\n    deps: [Overlay],\n    useFactory: MC_DATEPICKER_SCROLL_STRATEGY_FACTORY\n};\n\n// Boilerplate for applying mixins to McDatepickerContent.\n/** @docs-private */\nexport class McDatepickerContentBase {\n    // tslint:disable-next-line:naming-convention\n    constructor(public _elementRef: ElementRef) {\n    }\n}\n\n// tslint:disable-next-line:naming-convention\nexport const McDatepickerContentMixinBase: CanColorCtor & typeof McDatepickerContentBase =\n    mixinColor(McDatepickerContentBase);\n\n/**\n * Component used as the content for the datepicker dialog and popup. We use this instead of using\n * McCalendar directly as the content so we can control the initial focus. This also gives us a\n * place to put additional features of the popup that are not part of the calendar itself in the\n * future. (e.g. confirmation buttons).\n * @docs-private\n */\n@Component({\n    selector: 'mc-datepicker__content',\n    templateUrl: 'datepicker-content.html',\n    styleUrls: ['datepicker-content.css'],\n    host: {\n        class: 'mc-datepicker__content',\n        '[@transformPanel]': '\"enter\"'\n    },\n    animations: [\n        mcDatepickerAnimations.transformPanel,\n        mcDatepickerAnimations.fadeInCalendar\n    ],\n    exportAs: 'mcDatepickerContent',\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    inputs: ['color']\n})\nexport class McDatepickerContent<D> extends McDatepickerContentMixinBase\n    implements AfterViewInit, CanColor {\n\n    /** Reference to the internal calendar component. */\n    @ViewChild(McCalendar) calendar: McCalendar<D>;\n\n    /** Reference to the datepicker that created the overlay. */\n    datepicker: McDatepicker<D>;\n\n    /** Whether the datepicker is above or below the input. */\n    isAbove: boolean;\n\n    constructor(elementRef: ElementRef) {\n        super(elementRef);\n    }\n\n    ngAfterViewInit() {\n        this.calendar.focusActiveCell();\n    }\n}\n\n\n// TODO: We use a component instead of a directive here so the user can use implicit\n// template reference variables (e.g. #d vs #d=\"mcDatepicker\"). We can change this to a directive\n// if angular adds support for `exportAs: '$implicit'` on directives.\n/** Component responsible for managing the datepicker popup/dialog. */\n@Component({\n    selector: 'mc-datepicker',\n    template: '',\n    exportAs: 'mcDatepicker',\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n    providers: [{ provide: McFormFieldControl, useExisting: McDatepicker }]\n})\nexport class McDatepicker<D> implements OnDestroy, CanColor {\n\n    /** The date to open the calendar to initially. */\n    @Input()\n    get startAt(): D | null {\n        // If an explicit startAt is set we start there, otherwise we start at whatever the currently\n        // selected value is.\n        return this._startAt || (this.datepickerInput ? this.datepickerInput.value : null);\n    }\n\n    set startAt(value: D | null) {\n        this._startAt = this.getValidDateOrNull(this.dateAdapter.deserialize(value));\n    }\n\n    /** Color palette to use on the datepicker's calendar. */\n    @Input()\n    get color(): ThemePalette {\n        // @ts-ignore:next-line\n        return this._color ||\n            (this.datepickerInput ? this.datepickerInput.getThemePalette() : undefined);\n    }\n\n    set color(value: ThemePalette) {\n        this._color = value;\n    }\n\n    /** Whether the datepicker pop-up should be disabled. */\n    @Input()\n    get disabled(): boolean {\n        return this._disabled === undefined && this.datepickerInput ?\n            this.datepickerInput.disabled : !!this._disabled;\n    }\n\n    set disabled(value: boolean) {\n        const newValue = coerceBooleanProperty(value);\n\n        if (newValue !== this._disabled) {\n            this._disabled = newValue;\n            this.disabledChange.next(newValue);\n        }\n    }\n\n    /** Whether the calendar is open. */\n    @Input()\n    get opened(): boolean {\n        return this._opened;\n    }\n\n    set opened(value: boolean) {\n        if (value) {\n            this.open();\n        } else {\n            this.close();\n        }\n    }\n\n    /** The currently selected date. */\n    get selected(): D | null {\n        return this.validSelected;\n    }\n\n    set selected(value: D | null) {\n        this.validSelected = value;\n    }\n\n    /** The minimum selectable date. */\n    get minDate(): D | null {\n        return this.datepickerInput && this.datepickerInput.min;\n    }\n\n    /** The maximum selectable date. */\n    get maxDate(): D | null {\n        return this.datepickerInput && this.datepickerInput.max;\n    }\n\n    get dateFilter(): (date: D | null) => boolean {\n        return this.datepickerInput && this.datepickerInput.dateFilter;\n    }\n\n\n    get value(): D | null {\n        return this.selected;\n    }\n\n    /** An input indicating the type of the custom header component for the calendar, if set. */\n    @Input() calendarHeaderComponent: IComponentType<any>;\n\n    /** The view that the calendar should start in. */\n    @Input() startView: 'month' | 'year' | 'multi-year' = 'month';\n\n    /**\n     * Emits selected year in multiyear view.\n     * This doesn't imply a change on the selected date.\n     */\n    @Output() readonly yearSelected: EventEmitter<D> = new EventEmitter<D>();\n\n    /**\n     * Emits selected month in year view.\n     * This doesn't imply a change on the selected date.\n     */\n    @Output() readonly monthSelected: EventEmitter<D> = new EventEmitter<D>();\n\n    /** Classes to be passed to the date picker panel. Supports the same syntax as `ngClass`. */\n    @Input() panelClass: string | string[];\n\n    /** Function that can be used to add custom CSS classes to dates. */\n    @Input() dateClass: (date: D) => McCalendarCellCssClasses;\n\n    /** Emits when the datepicker has been opened. */\n    @Output('opened') openedStream: EventEmitter<void> = new EventEmitter<void>();\n\n    /** Emits when the datepicker has been closed. */\n    @Output('closed') closedStream: EventEmitter<void> = new EventEmitter<void>();\n\n    /** The id for the datepicker calendar. */\n    id: string = `mc-datepicker-${datepickerUid++}`;\n\n    /** A reference to the overlay when the calendar is opened as a popup. */\n    popupRef: OverlayRef;\n\n    /** The input element this datepicker is associated with. */\n    datepickerInput: McDatepickerInput<D>;\n\n    readonly stateChanges: Observable<void> = new Subject<void>();\n\n    /** Emits when the datepicker is disabled. */\n    readonly disabledChange = new Subject<boolean>();\n\n    /** Emits new selected date when selected date changes. */\n    readonly selectedChanged = new Subject<D>();\n    private scrollStrategy: () => IScrollStrategy;\n    private _startAt: D | null;\n    private _disabled: boolean;\n    private _opened = false;\n    private validSelected: D | null = null;\n    private _color: ThemePalette;\n\n    /** A portal containing the calendar for this datepicker. */\n    private calendarPortal: ComponentPortal<McDatepickerContent<D>>;\n\n    /** Reference to the component instantiated in popup mode. */\n    private popupComponentRef: ComponentRef<McDatepickerContent<D>> | null;\n\n    /** The element that was focused before the datepicker was opened. */\n    private focusedElementBeforeOpen: HTMLElement | null = null;\n\n    /** Subscription to value changes in the associated input element. */\n    private inputSubscription = Subscription.EMPTY;\n\n    constructor(private overlay: Overlay,\n                private ngZone: NgZone,\n                private viewContainerRef: ViewContainerRef,\n                @Inject(MC_DATEPICKER_SCROLL_STRATEGY) scrollStrategy: any,\n                @Optional() private dateAdapter: DateAdapter<D>,\n                @Optional() private dir: Directionality,\n                @Optional() @Inject(DOCUMENT) private document: any) {\n        if (!this.dateAdapter) {\n            throw createMissingDateImplError('DateAdapter');\n        }\n\n        this.scrollStrategy = scrollStrategy;\n    }\n\n    ngOnDestroy() {\n        this.close();\n        this.inputSubscription.unsubscribe();\n        this.disabledChange.complete();\n\n        if (this.popupRef) {\n            this.popupRef.dispose();\n            this.popupComponentRef = null;\n        }\n    }\n\n    /** Selects the given date */\n    select(date: D): void {\n        const oldValue = this.selected;\n        this.selected = date;\n        if (!this.dateAdapter.sameDate(oldValue, this.selected)) {\n            this.selectedChanged.next(date);\n        }\n    }\n\n    /** Emits the selected year in multiyear view */\n    selectYear(normalizedYear: D): void {\n        this.yearSelected.emit(normalizedYear);\n    }\n\n    /** Emits selected month in year view */\n    selectMonth(normalizedMonth: D): void {\n        this.monthSelected.emit(normalizedMonth);\n    }\n\n    /**\n     * Register an input with this datepicker.\n     * @param input The datepicker input to register with this datepicker.\n     */\n    registerInput(input: McDatepickerInput<D>): void {\n        if (this.datepickerInput) {\n            throw Error('A McDatepicker can only be associated with a single input.');\n        }\n        this.datepickerInput = input;\n        this.inputSubscription =\n            this.datepickerInput.valueChange.subscribe((value: D | null) => this.selected = value);\n    }\n\n    /** Open the calendar. */\n    open(): void {\n        if (this._opened || this.disabled) {\n            return;\n        }\n        if (!this.datepickerInput) {\n            throw Error('Attempted to open an McDatepicker with no associated input.');\n        }\n        if (this.document) {\n            this.focusedElementBeforeOpen = this.document.activeElement;\n        }\n\n        this.openAsPopup();\n\n        this._opened = true;\n        this.openedStream.emit();\n    }\n\n    /** Close the calendar. */\n    close(): void {\n        if (!this._opened) {\n            return;\n        }\n\n        if (this.popupRef && this.popupRef.hasAttached()) {\n            this.popupRef.detach();\n        }\n\n        if (this.calendarPortal && this.calendarPortal.isAttached) {\n            this.calendarPortal.detach();\n        }\n\n        const completeClose = () => {\n            // The `_opened` could've been reset already if\n            // we got two events in quick succession.\n            if (this._opened) {\n                this._opened = false;\n                this.closedStream.emit();\n                this.focusedElementBeforeOpen = null;\n            }\n        };\n\n        if (this.focusedElementBeforeOpen &&\n            typeof this.focusedElementBeforeOpen.focus === 'function') {\n            // Because IE moves focus asynchronously, we can't count on it being restored before we've\n            // marked the datepicker as closed. If the event fires out of sequence and the element that\n            // we're refocusing opens the datepicker on focus, the user could be stuck with not being\n            // able to close the calendar at all. We work around it by making the logic, that marks\n            // the datepicker as closed, async as well.\n            this.focusedElementBeforeOpen.focus();\n            setTimeout(completeClose);\n        } else {\n            completeClose();\n        }\n    }\n\n    /** Open the calendar as a popup. */\n    private openAsPopup(): void {\n        if (!this.calendarPortal) {\n            this.calendarPortal = new ComponentPortal<McDatepickerContent<D>>(McDatepickerContent,\n                this.viewContainerRef);\n        }\n\n        if (!this.popupRef) {\n            this.createPopup();\n        }\n\n        if (!this.popupRef.hasAttached()) {\n            this.popupComponentRef = this.popupRef.attach(this.calendarPortal);\n            this.popupComponentRef.instance.datepicker = this;\n            this.setColor();\n\n            // Update the position once the calendar has rendered.\n            this.ngZone.onStable.asObservable().pipe(take(1)).subscribe(() => {\n                this.popupRef.updatePosition();\n            });\n        }\n    }\n\n    /** Create the popup. */\n    private createPopup(): void {\n        const overlayConfig = new OverlayConfig({\n            positionStrategy: this.createPopupPositionStrategy(),\n            hasBackdrop: true,\n            backdropClass: 'mc-overlay-transparent-backdrop',\n            direction: this.dir,\n            scrollStrategy: this.scrollStrategy(),\n            panelClass: 'mc-datepicker__popup'\n        });\n\n        this.popupRef = this.overlay.create(overlayConfig);\n        this.popupRef.overlayElement.setAttribute('role', 'dialog');\n\n        merge(\n            this.popupRef.backdropClick(),\n            this.popupRef.detachments(),\n            this.popupRef.keydownEvents().pipe(filter((event) => {\n                // Closing on alt + up is only valid when there's an input associated with the datepicker.\n                // tslint:disable-next-line:deprecation\n                return event.keyCode === ESCAPE || (this.datepickerInput && event.altKey && event.keyCode === UP_ARROW);\n            }))\n        ).subscribe(() => this.close());\n    }\n\n    /** Create the popup PositionStrategy. */\n    private createPopupPositionStrategy(): IPositionStrategy {\n        return this.overlay.position()\n            .flexibleConnectedTo(this.datepickerInput.elementRef)\n            .withTransformOriginOn('.mc-datepicker__content')\n            .withFlexibleDimensions(false)\n            .withViewportMargin(8)\n            .withLockedPosition()\n            .withPositions([\n                {\n                    originX: 'start',\n                    originY: 'bottom',\n                    overlayX: 'start',\n                    overlayY: 'top'\n                },\n                {\n                    originX: 'start',\n                    originY: 'top',\n                    overlayX: 'start',\n                    overlayY: 'bottom'\n                },\n                {\n                    originX: 'end',\n                    originY: 'bottom',\n                    overlayX: 'end',\n                    overlayY: 'top'\n                },\n                {\n                    originX: 'end',\n                    originY: 'top',\n                    overlayX: 'end',\n                    overlayY: 'bottom'\n                }\n            ]);\n    }\n\n    /**\n     * @param obj The object to check.\n     * @returns The given object if it is both a date instance and valid, otherwise null.\n     */\n    private getValidDateOrNull(obj: any): D | null {\n        return (this.dateAdapter.isDateInstance(obj) && this.dateAdapter.isValid(obj)) ? obj : null;\n    }\n\n    /** Passes the current theme color along to the calendar overlay. */\n    private setColor(): void {\n        const color = this.color;\n        if (this.popupComponentRef) {\n            this.popupComponentRef.instance.color = color;\n        }\n    }\n}\n","// tslint:disable:no-empty\nimport {\n    Directive,\n    ElementRef,\n    EventEmitter,\n    forwardRef,\n    Inject,\n    Input,\n    OnDestroy,\n    Optional,\n    Output\n} from '@angular/core';\nimport {\n    AbstractControl,\n    ControlValueAccessor,\n    NG_VALIDATORS,\n    NG_VALUE_ACCESSOR,\n    ValidationErrors,\n    Validator,\n    ValidatorFn,\n    Validators\n} from '@angular/forms';\nimport { coerceBooleanProperty } from '@ptsecurity/cdk/coercion';\nimport { DateAdapter, MC_DATE_FORMATS, McDateFormats } from '@ptsecurity/cdk/datetime';\nimport { DOWN_ARROW } from '@ptsecurity/cdk/keycodes';\nimport { ThemePalette } from '@ptsecurity/mosaic/core';\nimport { McFormField } from '@ptsecurity/mosaic/form-field';\nimport { MC_INPUT_VALUE_ACCESSOR } from '@ptsecurity/mosaic/input';\nimport { Subscription } from 'rxjs';\n\nimport { McDatepicker } from './datepicker';\nimport { createMissingDateImplError } from './datepicker-errors';\n\n\n/** @docs-private */\nexport const MC_DATEPICKER_VALUE_ACCESSOR: any = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => McDatepickerInput),\n    multi: true\n};\n\n/** @docs-private */\nexport const MC_DATEPICKER_VALIDATORS: any = {\n    provide: NG_VALIDATORS,\n    useExisting: forwardRef(() => McDatepickerInput),\n    multi: true\n};\n\n\n/**\n * An event used for datepicker input and change events. We don't always have access to a native\n * input or change event because the event may have been triggered by the user clicking on the\n * calendar popup. For consistency, we always use McDatepickerInputEvent instead.\n */\nexport class McDatepickerInputEvent<D> {\n    /** The new value for the target datepicker input. */\n    value: D | null;\n\n    constructor(\n        /** Reference to the datepicker input component that emitted the event. */\n        public target: McDatepickerInput<D>,\n        /** Reference to the native input element associated with the datepicker input. */\n        public targetElement: HTMLElement) {\n        this.value = this.target.value;\n    }\n}\n\n\n/** Directive used to connect an input to a McDatepicker. */\n@Directive({\n    selector: 'input[mcDatepicker]',\n    providers: [\n        MC_DATEPICKER_VALUE_ACCESSOR,\n        MC_DATEPICKER_VALIDATORS,\n        { provide: MC_INPUT_VALUE_ACCESSOR, useExisting: McDatepickerInput }\n    ],\n    host: {\n        '[attr.aria-haspopup]': 'true',\n        '[attr.aria-owns]': '(datepicker?.opened && datepicker.id) || null',\n        '[attr.min]': 'min ? dateAdapter.toIso8601(min) : null',\n        '[attr.max]': 'max ? dateAdapter.toIso8601(max) : null',\n        '[disabled]': 'disabled',\n        '(input)': 'onInput($event.target.value)',\n        '(change)': 'onChange()',\n        '(blur)': 'onBlur()',\n        '(keydown)': 'onKeydown($event)'\n    },\n    exportAs: 'mcDatepickerInput'\n})\nexport class McDatepickerInput<D> implements ControlValueAccessor, OnDestroy, Validator {\n    /** The datepicker that this input is associated with. */\n    @Input()\n    set mcDatepicker(value: McDatepicker<D>) {\n        if (!value) {\n            return;\n        }\n\n        this.datepicker = value;\n        this.datepicker.registerInput(this);\n        this.datepickerSubscription.unsubscribe();\n\n        this.datepickerSubscription = this.datepicker.selectedChanged.subscribe((selected: D) => {\n            this.value = selected;\n            this.cvaOnChange(selected);\n            this.onTouched();\n            this.dateInput.emit(new McDatepickerInputEvent(this, this.elementRef.nativeElement));\n            this.dateChange.emit(new McDatepickerInputEvent(this, this.elementRef.nativeElement));\n        });\n    }\n\n    /** Function that can be used to filter out dates within the datepicker. */\n    @Input()\n    set mcDatepickerFilter(value: (date: D | null) => boolean) {\n        this.dateFilter = value;\n        this.validatorOnChange();\n    }\n\n    /** The value of the input. */\n    @Input()\n    get value(): D | null {\n        return this._value;\n    }\n\n    set value(value: D | null) {\n        // tslint:disable-next-line:no-parameter-reassignment\n        value = this.dateAdapter.deserialize(value);\n        this.lastValueValid = !value || this.dateAdapter.isValid(value);\n        // tslint:disable-next-line:no-parameter-reassignment\n        value = this.getValidDateOrNull(value);\n        const oldDate = this.value;\n        this._value = value;\n        this.formatValue(value);\n\n        if (!this.dateAdapter.sameDate(oldDate, value)) {\n            this.valueChange.emit(value);\n        }\n    }\n\n    /** The minimum valid date. */\n    @Input()\n    get min(): D | null {\n        return this._min;\n    }\n\n    set min(value: D | null) {\n        this._min = this.getValidDateOrNull(this.dateAdapter.deserialize(value));\n        this.validatorOnChange();\n    }\n\n    /** The maximum valid date. */\n    @Input()\n    get max(): D | null {\n        return this._max;\n    }\n\n    set max(value: D | null) {\n        this._max = this.getValidDateOrNull(this.dateAdapter.deserialize(value));\n        this.validatorOnChange();\n    }\n\n    /** Whether the datepicker-input is disabled. */\n    @Input()\n    get disabled(): boolean {\n        return !!this._disabled;\n    }\n\n    set disabled(value: boolean) {\n        const newValue = coerceBooleanProperty(value);\n        const element = this.elementRef.nativeElement;\n\n        if (this._disabled !== newValue) {\n            this._disabled = newValue;\n            this.disabledChange.emit(newValue);\n        }\n\n        // We need to null check the `blur` method, because it's undefined during SSR.\n        if (newValue && element.blur) {\n            // Normally, native input elements automatically blur if they turn disabled. This behavior\n            // is problematic, because it would mean that it triggers another change detection cycle,\n            // which then causes a changed after checked error if the input element was focused before.\n            element.blur();\n        }\n    }\n\n    datepicker: McDatepicker<D>;\n    dateFilter: (date: D | null) => boolean;\n\n    /** Emits when a `change` event is fired on this `<input>`. */\n    @Output() readonly dateChange: EventEmitter<McDatepickerInputEvent<D>> =\n        new EventEmitter<McDatepickerInputEvent<D>>();\n\n    /** Emits when an `input` event is fired on this `<input>`. */\n    @Output() readonly dateInput: EventEmitter<McDatepickerInputEvent<D>> =\n        new EventEmitter<McDatepickerInputEvent<D>>();\n\n    /** Emits when the value changes (either due to user input or programmatic change). */\n    valueChange = new EventEmitter<D | null>();\n\n    /** Emits when the disabled state has changed */\n    disabledChange = new EventEmitter<boolean>();\n    private _value: D | null;\n    private _min: D | null;\n    private _max: D | null;\n    private _disabled: boolean;\n\n    private datepickerSubscription = Subscription.EMPTY;\n\n    private localeSubscription = Subscription.EMPTY;\n\n    /** Whether the last value set on the input was valid. */\n    private lastValueValid = false;\n\n    constructor(\n        public elementRef: ElementRef<HTMLInputElement>,\n        @Optional() public dateAdapter: DateAdapter<D>,\n        @Optional() @Inject(MC_DATE_FORMATS) private dateFormats: McDateFormats,\n        @Optional() private formField: McFormField\n    ) {\n        if (!this.dateAdapter) {\n            throw createMissingDateImplError('DateAdapter');\n        }\n\n        if (!this.dateFormats) {\n            throw createMissingDateImplError('MC_DATE_FORMATS');\n        }\n\n        // Update the displayed date when the locale changes.\n        this.localeSubscription = dateAdapter.localeChanges.subscribe(() => {\n            this.value = this.value;\n        });\n    }\n\n    onTouched = () => {\n    }\n\n    ngOnDestroy() {\n        this.datepickerSubscription.unsubscribe();\n        this.localeSubscription.unsubscribe();\n        this.valueChange.complete();\n        this.disabledChange.complete();\n    }\n\n    /** @docs-private */\n    registerOnValidatorChange(fn: () => void): void {\n        this.validatorOnChange = fn;\n    }\n\n    /** @docs-private */\n    validate(c: AbstractControl): ValidationErrors | null {\n        return this.validator ? this.validator(c) : null;\n    }\n\n    // Implemented as part of ControlValueAccessor.\n    writeValue(value: D): void {\n        this.value = value;\n    }\n\n    // Implemented as part of ControlValueAccessor.\n    registerOnChange(fn: (value: any) => void): void {\n        this.cvaOnChange = fn;\n    }\n\n    // Implemented as part of ControlValueAccessor.\n    registerOnTouched(fn: () => void): void {\n        this.onTouched = fn;\n    }\n\n    // Implemented as part of ControlValueAccessor.\n    setDisabledState(isDisabled: boolean): void {\n        this.disabled = isDisabled;\n    }\n\n    onKeydown(event: KeyboardEvent) {\n        // tslint:disable-next-line:deprecation\n        const isAltDownArrow = event.altKey && event.keyCode === DOWN_ARROW;\n\n        if (this.datepicker && isAltDownArrow && !this.elementRef.nativeElement.readOnly) {\n            this.datepicker.open();\n            event.preventDefault();\n        }\n    }\n\n    onInput(value: string) {\n        let date = this.dateAdapter.parse(value, this.dateFormats.parse.dateInput);\n        this.lastValueValid = !date || this.dateAdapter.isValid(date);\n        date = this.getValidDateOrNull(date);\n\n        if (!this.dateAdapter.sameDate(date, this._value)) {\n            this._value = date;\n            this.cvaOnChange(date);\n            this.valueChange.emit(date);\n            this.dateInput.emit(new McDatepickerInputEvent(this, this.elementRef.nativeElement));\n        }\n    }\n\n    onChange() {\n        this.dateChange.emit(new McDatepickerInputEvent(this, this.elementRef.nativeElement));\n    }\n\n    /** Returns the palette used by the input's form field, if any. */\n    getThemePalette(): ThemePalette | undefined {\n        return this.formField ? this.formField.color : undefined;\n    }\n\n    /** Handles blur events on the input. */\n    onBlur() {\n        // Reformat the input only if we have a valid value.\n        if (this.value) {\n            this.formatValue(this.value);\n        }\n\n        this.onTouched();\n    }\n\n    private cvaOnChange: (value: any) => void = () => {\n    }\n\n    private validatorOnChange = () => {\n    }\n\n    /** The form control validator for whether the input parses. */\n    private parseValidator: ValidatorFn = (): ValidationErrors | null => {\n        return this.lastValueValid ?\n            null : { mcDatepickerParse: { text: this.elementRef.nativeElement.value } };\n    }\n\n    /** The form control validator for the min date. */\n    private minValidator: ValidatorFn = (control: AbstractControl): ValidationErrors | null => {\n        const controlValue = this.getValidDateOrNull(this.dateAdapter.deserialize(control.value));\n\n        return (!this.min || !controlValue ||\n            this.dateAdapter.compareDate(this.min, controlValue) <= 0) ?\n            null : { mcDatepickerMin: { min: this.min, actual: controlValue } };\n    }\n\n    /** The form control validator for the max date. */\n    private maxValidator: ValidatorFn = (control: AbstractControl): ValidationErrors | null => {\n        const controlValue = this.getValidDateOrNull(this.dateAdapter.deserialize(control.value));\n\n        return (!this.max || !controlValue ||\n            this.dateAdapter.compareDate(this.max, controlValue) >= 0) ?\n            null : { mcDatepickerMax: { max: this.max, actual: controlValue } };\n    }\n\n    /** The form control validator for the date filter. */\n    private filterValidator: ValidatorFn = (control: AbstractControl): ValidationErrors | null => {\n        const controlValue = this.getValidDateOrNull(this.dateAdapter.deserialize(control.value));\n\n        return !this.dateFilter || !controlValue || this.dateFilter(controlValue) ?\n            null : { mcDatepickerFilter: true };\n    }\n\n    /** Formats a value and sets it on the input element. */\n    private formatValue(value: D | null) {\n        this.elementRef.nativeElement.value =\n            value ? this.dateAdapter.format(value, this.dateFormats.display.dateInput) : '';\n    }\n\n    /** The combined form control validator for this input. */\n        // tslint:disable:member-ordering\n    private validator: ValidatorFn | null =\n        Validators.compose([\n            this.parseValidator,\n            this.minValidator,\n            this.maxValidator,\n            this.filterValidator\n        ]);\n\n    /**\n     * @param obj The object to check.\n     * @returns The given object if it is both a date instance and valid, otherwise null.\n     */\n    private getValidDateOrNull(obj: any): D | null {\n        return (this.dateAdapter.isDateInstance(obj) && this.dateAdapter.isValid(obj)) ? obj : null;\n    }\n}\n","import {\n    AfterContentInit,\n    Attribute,\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    ContentChild,\n    Directive,\n    Input,\n    OnChanges,\n    OnDestroy,\n    SimpleChanges,\n    ViewEncapsulation,\n    ViewChild\n} from '@angular/core';\nimport { coerceBooleanProperty } from '@ptsecurity/cdk/coercion';\nimport { McButton } from '@ptsecurity/mosaic/button';\nimport { merge, of as observableOf, Subscription } from 'rxjs';\n\nimport { McDatepicker } from './datepicker';\nimport { McDatepickerIntl } from './datepicker-intl';\n\n\n/** Can be used to override the icon of a `mcDatepickerToggle`. */\n@Directive({\n    selector: '[mcDatepickerToggleIcon]'\n})\nexport class McDatepickerToggleIcon {\n}\n\n\n@Component({\n    selector: 'mc-datepicker-toggle',\n    templateUrl: 'datepicker-toggle.html',\n    styleUrls: ['datepicker-toggle.css'],\n    host: {\n        class: 'mc-datepicker-toggle',\n        // Always set the tabindex to -1 so that it doesn't overlap with any custom tabindex the\n        // consumer may have provided, while still being able to receive focus.\n        '[attr.tabindex]': '-1',\n        '[class.mc-datepicker-toggle_active]': 'datepicker && datepicker.opened',\n        '[class.mc-warn]': 'datepicker && datepicker.color === \"error\"',\n        '(focus)': 'button.focus()'\n    },\n    exportAs: 'mcDatepickerToggle',\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class McDatepickerToggle<D> implements AfterContentInit, OnChanges, OnDestroy {\n\n    /** Whether the toggle button is disabled. */\n    @Input()\n    get disabled(): boolean {\n        return this._disabled === undefined ? this.datepicker.disabled : !!this._disabled;\n    }\n\n    set disabled(value: boolean) {\n        this._disabled = coerceBooleanProperty(value);\n    }\n\n    /** Datepicker instance that the button will toggle. */\n    @Input('for') datepicker: McDatepicker<D>;\n\n    /** Tabindex for the toggle. */\n    @Input() tabIndex: number | null;\n\n    /** Custom icon set by the consumer. */\n    @ContentChild(McDatepickerToggleIcon) customIcon: McDatepickerToggleIcon;\n\n    /** Underlying button element. */\n    @ViewChild('button') button: McButton;\n    private stateChanges = Subscription.EMPTY;\n\n    private _disabled: boolean;\n\n    constructor(\n        public intl: McDatepickerIntl,\n        private changeDetectorRef: ChangeDetectorRef,\n        @Attribute('tabindex') defaultTabIndex: string\n    ) {\n        const parsedTabIndex = Number(defaultTabIndex);\n        this.tabIndex = (parsedTabIndex || parsedTabIndex === 0) ? parsedTabIndex : null;\n    }\n\n    ngOnChanges(changes: SimpleChanges) {\n        if (changes.datepicker) {\n            this.watchStateChanges();\n        }\n    }\n\n    ngOnDestroy() {\n        this.stateChanges.unsubscribe();\n    }\n\n    ngAfterContentInit() {\n        this.watchStateChanges();\n    }\n\n    open(event: Event): void {\n        if (this.datepicker && !this.disabled) {\n            this.datepicker.open();\n            event.stopPropagation();\n        }\n    }\n\n    private watchStateChanges() {\n        const datepickerDisabled = this.datepicker ? this.datepicker.disabledChange : observableOf();\n        const inputDisabled = this.datepicker && this.datepicker.datepickerInput ?\n            this.datepicker.datepickerInput.disabledChange : observableOf();\n        const datepickerToggled = this.datepicker ?\n            merge(this.datepicker.openedStream, this.datepicker.closedStream) :\n            observableOf();\n\n        this.stateChanges.unsubscribe();\n        this.stateChanges = merge(\n            this.intl.changes,\n            datepickerDisabled,\n            inputDisabled,\n            datepickerToggled\n        ).subscribe(() => this.changeDetectorRef.markForCheck());\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { A11yModule } from '@ptsecurity/cdk/a11y';\nimport { OverlayModule } from '@ptsecurity/cdk/overlay';\nimport { PortalModule } from '@ptsecurity/cdk/portal';\nimport { McButtonModule } from '@ptsecurity/mosaic/button';\nimport { McIconModule } from '@ptsecurity/mosaic/icon';\n\nimport { McCalendar, McCalendarHeader } from './calendar';\nimport { McCalendarBody } from './calendar-body';\nimport {\n    McDatepicker,\n    McDatepickerContent,\n    MC_DATEPICKER_SCROLL_STRATEGY_FACTORY_PROVIDER\n} from './datepicker';\nimport { McDatepickerInput } from './datepicker-input';\nimport { McDatepickerIntl } from './datepicker-intl';\nimport { McDatepickerToggle, McDatepickerToggleIcon } from './datepicker-toggle';\nimport { McMonthView } from './month-view';\nimport { McMultiYearView } from './multi-year-view';\nimport { McYearView } from './year-view';\n\n\n@NgModule({\n    imports: [\n        CommonModule,\n        McButtonModule,\n        OverlayModule,\n        A11yModule,\n        PortalModule,\n        McButtonModule,\n        McIconModule\n    ],\n    exports: [\n        McCalendar,\n        McCalendarBody,\n        McDatepicker,\n        McDatepickerContent,\n        McDatepickerInput,\n        McDatepickerToggle,\n        McDatepickerToggleIcon,\n        McMonthView,\n        McYearView,\n        McMultiYearView,\n        McCalendarHeader\n    ],\n    declarations: [\n        McCalendar,\n        McCalendarBody,\n        McDatepicker,\n        McDatepickerContent,\n        McDatepickerInput,\n        McDatepickerToggle,\n        McDatepickerToggleIcon,\n        McMonthView,\n        McYearView,\n        McMultiYearView,\n        McCalendarHeader\n    ],\n    providers: [\n        McDatepickerIntl,\n        MC_DATEPICKER_SCROLL_STRATEGY_FACTORY_PROVIDER\n    ],\n    entryComponents: [\n        McDatepickerContent,\n        McCalendarHeader\n    ]\n})\nexport class McDatepickerModule {\n}\n","import { ChangeDetectionStrategy, Component, Input, ViewEncapsulation } from '@angular/core';\nimport { coerceBooleanProperty } from '@ptsecurity/cdk/coercion';\n\n\n@Component({\n    selector: 'mc-divider',\n    host: {\n        class: 'mc-divider',\n        role: 'separator',\n        '[attr.aria-orientation]': 'vertical ? \"vertical\" : \"horizontal\"',\n        '[class.mc-divider-vertical]': 'vertical',\n        '[class.mc-divider-inset]': 'inset'\n    },\n    template: '',\n    styleUrls: ['divider.css'],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    preserveWhitespaces: false\n})\nexport class McDivider {\n    // Whether the divider is vertically aligned.\n    @Input()\n    get vertical(): boolean {\n        return this._vertical;\n    }\n\n    set vertical(value: boolean) {\n        this._vertical = coerceBooleanProperty(value);\n    }\n\n    private _vertical: boolean = false;\n\n    // Whether the divider is an inset divider.\n    @Input()\n    get inset(): boolean {\n        return this._inset;\n    }\n\n    set inset(value: boolean) {\n        this._inset = coerceBooleanProperty(value);\n    }\n\n    private _inset: boolean = false;\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { McDivider } from './divider.component';\n\n\n@NgModule({\n    imports: [CommonModule],\n    exports: [McDivider],\n    declarations: [McDivider]\n})\nexport class McDividerModule {\n}\n","import { DOCUMENT } from '@angular/common';\nimport {\n    Directive,\n    TemplateRef,\n    ComponentFactoryResolver,\n    ApplicationRef,\n    Injector,\n    ViewContainerRef,\n    Inject,\n    OnDestroy\n} from '@angular/core';\nimport { TemplatePortal, DomPortalOutlet } from '@ptsecurity/cdk/portal';\nimport { Subject } from 'rxjs';\n\n\n/**\n * Dropdown content that will be rendered lazily once the dropdown is opened.\n */\n@Directive({\n    selector: 'ng-template[mcDropdownContent]'\n})\nexport class McDropdownContent implements OnDestroy {\n\n    /** Emits when the dropdown content has been attached. */\n    _attached = new Subject<void>();\n    private _portal: TemplatePortal;\n    private _outlet: DomPortalOutlet;\n\n    constructor(\n        private _template: TemplateRef<any>,\n        private _componentFactoryResolver: ComponentFactoryResolver,\n        private _appRef: ApplicationRef,\n        private _injector: Injector,\n        private _viewContainerRef: ViewContainerRef,\n        @Inject(DOCUMENT) private _document: any) {}\n\n    /**\n     * Attaches the content with a particular context.\n     * @docs-private\n     */\n    attach(context: any = {}) {\n        if (!this._portal) {\n            this._portal = new TemplatePortal(this._template, this._viewContainerRef);\n        }\n\n        this.detach();\n\n        if (!this._outlet) {\n            this._outlet = new DomPortalOutlet(this._document.createElement('div'),\n                this._componentFactoryResolver, this._appRef, this._injector);\n        }\n\n        const element: HTMLElement = this._template.elementRef.nativeElement;\n\n        // Because we support opening the same dropdown from different triggers (which in turn have their\n        // own `OverlayRef` panel), we have to re-insert the host element every time, otherwise we\n        // risk it staying attached to a pane that's no longer in the DOM.\n        element.parentNode!.insertBefore(this._outlet.outletElement, element);\n        this._portal.attach(this._outlet, context);\n        this._attached.next();\n    }\n\n    /**\n     * Detaches the content.\n     * @docs-private\n     */\n    detach() {\n        if (this._portal.isAttached) {\n            this._portal.detach();\n        }\n    }\n\n    ngOnDestroy() {\n        if (this._outlet) {\n            this._outlet.dispose();\n        }\n    }\n}\n","import { EventEmitter, TemplateRef, InjectionToken } from '@angular/core';\nimport { FocusOrigin } from '@ptsecurity/cdk/a11y';\nimport { Direction } from '@ptsecurity/cdk/bidi';\n\nimport { McDropdownContent } from './dropdown-content';\nimport { DropdownPositionX, DropdownPositionY } from './dropdown-positions';\n\n\n/**\n * Injection token used to provide the parent dropdown to dropdown-specific components.\n * @docs-private\n */\nexport const MC_DROPDOWN_PANEL = new InjectionToken<McDropdownPanel>('MC_DROPDOWN_PANEL');\n\n/**\n * Interface for a custom dropdown panel that can be used with `mcDropdownTriggerFor`.\n * @docs-private\n */\n// tslint:disable-next-line:interface-name\nexport interface McDropdownPanel<T = any> {\n    xPosition: DropdownPositionX;\n    yPosition: DropdownPositionY;\n    overlapTrigger: boolean;\n    templateRef: TemplateRef<any>;\n    closed: EventEmitter<void | 'click' | 'keydown' | 'tab'>;\n    direction?: Direction;\n    lazyContent?: McDropdownContent;\n    backdropClass?: string;\n    hasBackdrop?: boolean;\n    focusFirstItem(origin?: FocusOrigin): void;\n    resetActiveItem(): void;\n    setPositionClasses?(x: DropdownPositionX, y: DropdownPositionY): void;\n    addItem?(item: T): void;\n    removeItem?(item: T): void;\n}\n","import { DOCUMENT } from '@angular/common';\nimport {\n    ChangeDetectionStrategy,\n    Component,\n    ElementRef,\n    OnDestroy,\n    ViewEncapsulation,\n    Inject,\n    Optional\n} from '@angular/core';\nimport { IFocusableOption, FocusMonitor, FocusOrigin } from '@ptsecurity/cdk/a11y';\nimport {\n    CanDisable, CanDisableCtor,\n    mixinDisabled\n} from '@ptsecurity/mosaic/core';\n\nimport { MC_DROPDOWN_PANEL, McDropdownPanel } from './dropdown-panel';\n\n\n// Boilerplate for applying mixins to McDropdownItem.\n/** @docs-private */\nexport class McDropdownItemBase {}\nexport const _McDropdownItemMixinBase: CanDisableCtor & typeof McDropdownItemBase =\n    mixinDisabled(McDropdownItemBase);\n\n/**\n * This directive is intended to be used inside an mc-dropdown tag.\n * It exists mostly to set the role attribute.\n */\n@Component({\n    selector: 'mc-dropdown-item, [mc-dropdown-item]',\n    exportAs: 'mcDropdownItem',\n    inputs: ['disabled'],\n    host: {\n        role: 'dropdown-item',\n        class: 'mc-dropdown__item',\n        '[attr.tabindex]': '_getTabIndex()',\n        '[attr.disabled]': 'disabled || null',\n        '(click)': '_checkDisabled($event)'\n    },\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n    template: `<ng-content></ng-content>`\n})\nexport class McDropdownItem extends _McDropdownItemMixinBase\n    implements IFocusableOption, CanDisable, OnDestroy {\n\n    private _document: Document;\n\n    constructor(\n        private _elementRef: ElementRef<HTMLElement>,\n        @Inject(DOCUMENT) document: any,\n        private _focusMonitor: FocusMonitor,\n        @Inject(MC_DROPDOWN_PANEL) @Optional() private _parentDropdownPanel?: McDropdownPanel<McDropdownItem>) {\n        super();\n\n        if (_focusMonitor) {\n            // Start monitoring the element so it gets the appropriate focused classes. We want\n            // to show the focus style for dropdown items only when the focus was not caused by a\n            // mouse or touch interaction.\n            _focusMonitor.monitor(this._elementRef.nativeElement, false);\n        }\n\n        if (_parentDropdownPanel && _parentDropdownPanel.addItem) {\n            _parentDropdownPanel.addItem(this);\n        }\n\n        this._document = document;\n    }\n\n    /** Focuses the dropdown item. */\n    focus(origin: FocusOrigin = 'program'): void {\n        if (this._focusMonitor) {\n            this._focusMonitor.focusVia(this._getHostElement(), origin);\n        } else {\n            this._getHostElement().focus();\n        }\n    }\n\n    ngOnDestroy() {\n        if (this._focusMonitor) {\n            this._focusMonitor.stopMonitoring(this._elementRef.nativeElement);\n        }\n\n        if (this._parentDropdownPanel && this._parentDropdownPanel.removeItem) {\n            this._parentDropdownPanel.removeItem(this);\n        }\n    }\n\n    /** Used to set the `tabindex`. */\n    _getTabIndex(): string {\n        return this.disabled ? '-1' : '0';\n    }\n\n    /** Returns the host DOM element. */\n    _getHostElement(): HTMLElement {\n        return this._elementRef.nativeElement;\n    }\n\n    /** Prevents the default element actions if it is disabled. */\n    _checkDisabled(event: Event): void {\n        if (this.disabled) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n    }\n\n    /** Gets the label to be used when determining whether the option should be focused. */\n    getLabel(): string {\n        const element: HTMLElement = this._elementRef.nativeElement;\n        // tslint:disable-next-line:no-magic-numbers\n        const textNodeType = this._document ? this._document.TEXT_NODE : 3;\n        let output = '';\n\n        if (element.childNodes) {\n            const length = element.childNodes.length;\n\n            // Go through all the top-level text nodes and extract their text.\n            // We skip anything that's not a text node to prevent the text from\n            // being thrown off by something like an icon.\n            for (let i = 0; i < length; i++) {\n                if (element.childNodes[i].nodeType === textNodeType) {\n                    output += element.childNodes[i].textContent;\n                }\n            }\n        }\n\n        return output.trim();\n    }\n}\n","import {\n    trigger,\n    state,\n    style,\n    animate,\n    transition,\n    query,\n    group,\n    AnimationTriggerMetadata\n} from '@angular/animations';\n\n\n/**\n * Animations used by the mc-dropdown component.\n * Animation duration and timing values are based on:\n * https://material.io/guidelines/components/menus.html#menus-usage\n * @docs-private\n */\nexport const mcDropdownAnimations: {\n    readonly transformDropdown: AnimationTriggerMetadata;\n    readonly fadeInItems: AnimationTriggerMetadata;\n} = {\n    /**\n     * This animation controls the dropdown panel's entry and exit from the page.\n     *\n     * When the dropdown panel is added to the DOM, it scales in and fades in its border.\n     *\n     * When the dropdown panel is removed from the DOM, it simply fades out after a brief\n     * delay to display the ripple.\n     */\n    transformDropdown: trigger('transformDropdown', [\n        state('void', style({\n            opacity: 0,\n            transform: 'scale(0.8)'\n        })),\n        transition('void => enter', group([\n            query('.mc-dropdown__content', animate('50ms linear', style({opacity: 1}))),\n            animate('50ms cubic-bezier(0, 0, 0.2, 1)', style({transform: 'scale(1)'}))\n        ])),\n        transition('* => void', animate('50ms 25ms linear', style({opacity: 0})))\n    ]),\n\n\n    /**\n     * This animation fades in the background color and content of the dropdown panel\n     * after its containing element is scaled in.\n     */\n    fadeInItems: trigger('fadeInItems', [\n        // now. Remove next time we do breaking changes.\n        state('showing', style({opacity: 1})),\n        transition('void => *', [\n            style({opacity: 0}),\n            animate('200ms 60ms cubic-bezier(0.55, 0, 0.55, 0.2)')\n        ])\n    ])\n};\n\nexport const fadeInItems = mcDropdownAnimations.fadeInItems;\n\nexport const transformDropdown = mcDropdownAnimations.transformDropdown;\n","import {\n    Attribute,\n    Directive, DoCheck, ElementRef, Inject, Input, OnChanges,\n    OnDestroy, Optional, Self\n} from '@angular/core';\nimport {\n    FormGroupDirective,\n    NgControl,\n    NgForm, NgModel\n} from '@angular/forms';\nimport { coerceBooleanProperty } from '@ptsecurity/cdk/coercion';\nimport {\n    END, C, V, X, A, DELETE, BACKSPACE, TAB, ENTER,\n    ESCAPE, ZERO, NINE, NUMPAD_ZERO, NUMPAD_NINE, NUMPAD_MINUS, DASH,\n    FF_MINUS, LEFT_ARROW, RIGHT_ARROW, HOME, UP_ARROW, DOWN_ARROW, F1, F12\n} from '@ptsecurity/cdk/keycodes';\nimport { getSupportedInputTypes, Platform } from '@ptsecurity/cdk/platform';\nimport {\n    CanUpdateErrorState,\n    CanUpdateErrorStateCtor,\n    ErrorStateMatcher,\n    mixinErrorState\n} from '@ptsecurity/mosaic/core';\nimport { McFormFieldControl, McFormFieldNumberControl } from '@ptsecurity/mosaic/form-field';\nimport { Subject } from 'rxjs';\n\nimport { getMcInputUnsupportedTypeError } from './input-errors';\nimport { MC_INPUT_VALUE_ACCESSOR } from './input-value-accessor';\nimport { stepDown, stepUp } from './stepperUtils';\n\n\nconst MC_INPUT_INVALID_TYPES = [\n    'button',\n    'checkbox',\n    'file',\n    'hidden',\n    'image',\n    'radio',\n    'range',\n    'reset',\n    'submit'\n];\n\nexport const BIG_STEP = 10;\nexport const SMALL_STEP = 1;\n\nlet nextUniqueId = 0;\n\nexport class McInputBase {\n    constructor(public _defaultErrorStateMatcher: ErrorStateMatcher,\n                public _parentForm: NgForm,\n                public _parentFormGroup: FormGroupDirective,\n                public ngControl: NgControl) {\n    }\n}\n\nexport const _McInputMixinBase: CanUpdateErrorStateCtor & typeof McInputBase = mixinErrorState(McInputBase);\n\n\n@Directive({\n    selector: `input[mcInput][type=\"number\"]`,\n    exportAs: 'mcNumericalInput',\n    providers: [NgModel, { provide: McFormFieldNumberControl, useExisting: McNumberInput }],\n    host: {\n        '(blur)': '_focusChanged(false)',\n        '(focus)': '_focusChanged(true)',\n        '(paste)': 'onPaste($event)',\n        '(keydown)': 'onKeyDown($event)'\n    }\n})\nexport class McNumberInput implements McFormFieldNumberControl<any> {\n\n    /**\n     * Implemented as part of McFormFieldNumberControl.\n     * @docs-private\n     */\n    @Input()\n    bigStep: number;\n\n    /**\n     * Implemented as part of McFormFieldNumberControl.\n     * @docs-private\n     */\n    @Input()\n    step: number;\n\n    @Input()\n    min: number;\n\n    @Input()\n    max: number;\n\n    /**\n     * Implemented as part of McFormFieldNumberControl.\n     * @docs-private\n     */\n    value: any;\n\n    /**\n     * Implemented as part of McFormFieldNumberControl.\n     * @docs-private\n     */\n    focused: boolean = false;\n\n    /**\n     * Implemented as part of McFormFieldNumberControl.\n     * @docs-private\n     */\n    readonly stateChanges: Subject<void> = new Subject<void>();\n\n    private readonly _host: HTMLInputElement;\n\n    constructor(\n        private _platform: Platform ,\n        private _elementRef: ElementRef,\n        private _model: NgModel,\n        @Attribute('step') step: string,\n        @Attribute('big-step') bigStep: string,\n        @Attribute('min') min: string,\n        @Attribute('max') max: string\n    ) {\n        this.step = this.isDigit(step) ? parseFloat(step) : SMALL_STEP;\n        this.bigStep = this.isDigit(bigStep) ? parseFloat(bigStep) : BIG_STEP;\n        this.min = this.isDigit(min) ? parseFloat(min) : -Infinity;\n        this.max = this.isDigit(max) ? parseFloat(max) : Infinity;\n\n        this._host = this._elementRef.nativeElement;\n\n        const self = this;\n\n        if ('valueAsNumber' in this._host) {\n            Object.defineProperty(Object.getPrototypeOf(this._host), 'valueAsNumber', {\n                // tslint:disable-next-line:no-reserved-keywords\n                get() {\n                    const res = parseFloat(self.normalizeSplitter(this.value));\n\n                    return isNaN(res) ? null : res;\n                }\n            });\n        }\n    }\n\n    _focusChanged(isFocused: boolean) {\n        if (isFocused !== this.focused) {\n            this.focused = isFocused;\n            this.stateChanges.next();\n        }\n    }\n\n    onKeyDown(event: KeyboardEvent) {\n        // tslint:disable-next-line:deprecation\n        const keyCode = event.keyCode;\n\n        const isCtrlA = (e) => e.keyCode === A && (e.ctrlKey || e.metaKey);\n        const isCtrlC = (e) => e.keyCode === C && (e.ctrlKey || e.metaKey);\n        const isCtrlV = (e) => e.keyCode === V && (e.ctrlKey || e.metaKey);\n        const isCtrlX = (e) => e.keyCode === X && (e.ctrlKey || e.metaKey);\n\n        const isFKey = (e) => e.keyCode >= F1 && e.keyCode <= F12;\n\n        const isNumber = (e) => (e.keyCode >= ZERO && e.keyCode <= NINE) ||\n            (e.keyCode >= NUMPAD_ZERO && e.keyCode <= NUMPAD_NINE);\n\n        const minuses = [NUMPAD_MINUS, DASH, FF_MINUS];\n        const serviceKeys = [DELETE, BACKSPACE, TAB, ESCAPE, ENTER];\n        const arrows = [LEFT_ARROW, RIGHT_ARROW];\n        const allowedKeys =  [HOME, END].concat(arrows).concat(serviceKeys).concat(minuses);\n\n        const isIEPeriod = (e) => e.key === '.' || e.key === 'Decimal';\n        const isNotIEPeriod = (e) => e.key === '.' || e.key === ',';\n\n        // Decimal is for IE\n        const isPeriod = (e) => this._platform.EDGE || this._platform.TRIDENT\n            ? isIEPeriod(e)\n            : isNotIEPeriod(e);\n\n        if (allowedKeys.indexOf(keyCode) !== -1 ||\n            isCtrlA(event) ||\n            isCtrlC(event) ||\n            isCtrlV(event) ||\n            isCtrlX(event) ||\n            isFKey(event) ||\n            isPeriod(event)\n        ) {\n            // let it happen, don't do anything\n            return;\n        }\n        // Ensure that it is not a number and stop the keypress\n        if (event.shiftKey || !isNumber(event)) {\n            event.preventDefault();\n\n            // process steps\n            const step = event.shiftKey ? this.bigStep : this.step;\n\n            if (keyCode === UP_ARROW) {\n                this.stepUp(step);\n            }\n\n            if (keyCode === DOWN_ARROW) {\n                this.stepDown(step);\n            }\n        }\n    }\n\n    onPaste(event) {\n        let value = event.clipboardData.getData('text');\n        value = this.normalizeSplitter(value);\n\n        if (!this.isDigit(value)) {\n            event.preventDefault();\n        }\n    }\n\n    stepUp(step: number) {\n        this._elementRef.nativeElement.focus();\n        const res = stepUp(this._host.valueAsNumber, this.max, this.min, step);\n        this._host.value = res === null ? '' : res.toString();\n        this._model.update.emit(this._host.valueAsNumber);\n    }\n\n    stepDown(step: number) {\n        this._elementRef.nativeElement.focus();\n        const res = stepDown(this._host.valueAsNumber, this.max, this.min, step);\n        this._host.value = res === null ? '' : res.toString();\n        this._model.update.emit(this._host.valueAsNumber);\n    }\n\n    private normalizeSplitter(value: string): string {\n        return value ? value.replace(/,/g, '.') : value;\n    }\n\n    private isDigit(value: string): boolean {\n        return this.isFloat(value) || this.isInt(value);\n    }\n\n    private isFloat(value: string): boolean {\n        return /^-?\\d+\\.\\d+$/.test(value);\n    }\n\n    private isInt(value: string): boolean {\n        return /^-?\\d+$/.test(value);\n    }\n}\n\n@Directive({\n    selector: `input[mcInput]`,\n    exportAs: 'mcInput',\n    host: {\n        class: 'mc-input',\n        // Native input properties that are overwritten by Angular inputs need to be synced with\n        // the native input element. Otherwise property bindings for those don't work.\n        '[attr.id]': 'id',\n        '[attr.placeholder]': 'placeholder',\n        '[disabled]': 'disabled',\n        '[required]': 'required',\n        '(blur)': '_focusChanged(false)',\n        '(focus)': '_focusChanged(true)',\n        '(input)': '_onInput()'\n    },\n    providers: [{ provide: McFormFieldControl, useExisting: McInput }]\n})\nexport class McInput extends _McInputMixinBase implements McFormFieldControl<any>, OnChanges,\n    OnDestroy, DoCheck, CanUpdateErrorState {\n\n    /** An object used to control when error messages are shown. */\n    @Input() errorStateMatcher: ErrorStateMatcher;\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    focused: boolean = false;\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    readonly stateChanges: Subject<void> = new Subject<void>();\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    controlType: string = 'mc-input';\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    @Input()\n    get disabled(): boolean {\n        if (this.ngControl && this.ngControl.disabled !== null) {\n            return this.ngControl.disabled;\n        }\n\n        return this._disabled;\n    }\n\n    set disabled(value: boolean) {\n        this._disabled = coerceBooleanProperty(value);\n\n        // Browsers may not fire the blur event if the input is disabled too quickly.\n        // Reset from here to ensure that the element doesn't become stuck.\n        if (this.focused) {\n            this.focused = false;\n            this.stateChanges.next();\n        }\n    }\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    @Input()\n    get id(): string {\n        return this._id;\n    }\n\n    set id(value: string) {\n        this._id = value || this._uid;\n    }\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    @Input() placeholder: string;\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    @Input()\n    get required(): boolean {\n        return this._required;\n    }\n\n    set required(value: boolean) {\n        this._required = coerceBooleanProperty(value);\n    }\n\n    // tslint:disable no-reserved-keywords\n    /** Input type of the element. */\n    @Input()\n    get type(): string {\n        return this._type;\n    }\n\n    set type(value: string) {\n        this._type = value || 'text';\n        this._validateType();\n\n        // When using Angular inputs, developers are no longer able to set the properties on the native\n        // input element. To ensure that bindings for `type` work, we need to sync the setter\n        // with the native property. Textarea elements don't support the type property or attribute.\n        if (getSupportedInputTypes().has(this._type)) {\n            this._elementRef.nativeElement.type = this._type;\n        }\n    }\n    // tslint:enable no-reserved-keywords\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    @Input()\n    get value(): string {\n        return this._inputValueAccessor.value;\n    }\n\n    set value(value: string) {\n        if (value !== this.value) {\n            this._inputValueAccessor.value = value;\n            this.stateChanges.next();\n        }\n    }\n\n    protected _uid = `mc-input-${nextUniqueId++}`;\n    protected _previousNativeValue: any;\n    protected _disabled = false;\n    protected _id: string;\n    protected _required = false;\n    protected _type = 'text';\n    protected _neverEmptyInputTypes = [\n        'date',\n        'datetime',\n        'datetime-local',\n        'month',\n        'time',\n        'week'\n    ].filter((t) => getSupportedInputTypes().has(t));\n\n    private _inputValueAccessor: { value: any };\n\n    constructor(protected _elementRef: ElementRef,\n                @Optional() @Self() public ngControl: NgControl,\n                @Optional() _parentForm: NgForm,\n                @Optional() _parentFormGroup: FormGroupDirective,\n                _defaultErrorStateMatcher: ErrorStateMatcher,\n                @Optional() @Self() @Inject(MC_INPUT_VALUE_ACCESSOR) inputValueAccessor: any) {\n        super(_defaultErrorStateMatcher, _parentForm, _parentFormGroup, ngControl);\n        // If no input value accessor was explicitly specified, use the element as the input value\n        // accessor.\n        this._inputValueAccessor = inputValueAccessor || this._elementRef.nativeElement;\n\n        this._previousNativeValue = this.value;\n\n        // Force setter to be called in case id was not specified.\n        this.id = this.id;\n    }\n\n    ngOnChanges() {\n        this.stateChanges.next();\n    }\n\n    ngOnDestroy() {\n        this.stateChanges.complete();\n    }\n\n    ngDoCheck() {\n        if (this.ngControl) {\n            // We need to re-evaluate this on every change detection cycle, because there are some\n            // error triggers that we can't subscribe to (e.g. parent form submissions). This means\n            // that whatever logic is in here has to be super lean or we risk destroying the performance.\n            this.updateErrorState();\n        }\n\n        // We need to dirty-check the native element's value, because there are some cases where\n        // we won't be notified when it changes (e.g. the consumer isn't using forms or they're\n        // updating the value using `emitEvent: false`).\n        this._dirtyCheckNativeValue();\n    }\n\n    /** Focuses the input. */\n    focus(): void {\n        this._elementRef.nativeElement.focus();\n    }\n\n    /** Callback for the cases where the focused state of the input changes. */\n    _focusChanged(isFocused: boolean) {\n        if (isFocused !== this.focused) {\n            this.focused = isFocused;\n            this.stateChanges.next();\n        }\n    }\n\n    _onInput() {\n        // This is a noop function and is used to let Angular know whenever the value changes.\n        // Angular will run a new change detection each time the `input` event has been dispatched.\n        // It's necessary that Angular recognizes the value change, because when floatingLabel\n        // is set to false and Angular forms aren't used, the placeholder won't recognize the\n        // value changes and will not disappear.\n        // Listening to the input event wouldn't be necessary when the input is using the\n        // FormsModule or ReactiveFormsModule, because Angular forms also listens to input events.\n    }\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    get empty(): boolean {\n        return !this._isNeverEmpty() && !this._elementRef.nativeElement.value && !this._isBadInput();\n    }\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    onContainerClick() {\n        this.focus();\n    }\n\n    /** Does some manual dirty checking on the native input `value` property. */\n    protected _dirtyCheckNativeValue() {\n        const newValue = this.value;\n\n        if (this._previousNativeValue !== newValue) {\n            this._previousNativeValue = newValue;\n            this.stateChanges.next();\n        }\n    }\n\n    /** Make sure the input is a supported type. */\n    protected _validateType() {\n        if (MC_INPUT_INVALID_TYPES.indexOf(this._type) > -1) {\n            throw getMcInputUnsupportedTypeError(this._type);\n        }\n    }\n\n    /** Checks whether the input type is one of the types that are never empty. */\n    protected _isNeverEmpty() {\n        return this._neverEmptyInputTypes.indexOf(this._type) > -1;\n    }\n\n    /** Checks whether the input is invalid based on the native validation. */\n    protected _isBadInput() {\n        // The `validity` property won't be present on platform-server.\n        const validity = (this._elementRef.nativeElement as HTMLInputElement).validity;\n\n        return validity && validity.badInput;\n    }\n}\n\n@Directive({\n    selector: 'input[mcInputMonospace]',\n    exportAs: 'McInputMonospace',\n    host: { class: 'mc-input_monospace' }\n})\nexport class McInputMono {\n}\n","import { Directive, forwardRef, Input, OnChanges, Provider, SimpleChanges } from '@angular/core';\nimport { AbstractControl, NG_VALIDATORS, ValidationErrors, Validator, ValidatorFn, Validators } from '@angular/forms';\n\n\nexport const MIN_VALIDATOR: Provider = {\n    provide: NG_VALIDATORS,\n    useExisting: forwardRef(() => MinValidator),\n    multi: true\n};\n\n/**\n * A directive which installs the {@link MinValidator} for any `formControlName`,\n * `formControl`, or control with `ngModel` that also has a `min` attribute.\n *\n * @experimental\n */\n@Directive({\n    selector: '[min][formControlName],[min][formControl],[min][ngModel]',\n    providers: [MIN_VALIDATOR],\n    host: {'[attr.min]': 'min ? min : null'}\n})\nexport class MinValidator implements Validator, OnChanges {\n\n    @Input() min: string;\n    private _validator: ValidatorFn;\n    private _onChange: () => void;\n\n    ngOnChanges(changes: SimpleChanges): void {\n        if ('min' in changes) {\n            this._createValidator();\n            if (this._onChange) { this._onChange(); }\n        }\n    }\n\n    validate(c: AbstractControl): ValidationErrors | null { return this._validator(c); }\n\n    registerOnValidatorChange(fn: () => void): void { this._onChange = fn; }\n\n    private _createValidator(): void { this._validator = Validators.min(parseInt(this.min, 10)); }\n}\n\n\nexport const MAX_VALIDATOR: Provider = {\n    provide: NG_VALIDATORS,\n    useExisting: forwardRef(() => MaxValidator),\n    multi: true\n};\n\n/**\n * A directive which installs the {@link MaxValidator} for any `formControlName`,\n * `formControl`, or control with `ngModel` that also has a `min` attribute.\n *\n * @experimental\n */\n@Directive({\n    selector: '[max][formControlName],[max][formControl],[max][ngModel]',\n    providers: [MAX_VALIDATOR],\n    host: {\n        '[attr.max]': 'max ? max : null'\n    }\n})\nexport class MaxValidator implements Validator,\n    OnChanges {\n\n    @Input() max: string;\n    private _validator: ValidatorFn;\n    private _onChange: () => void;\n\n    ngOnChanges(changes: SimpleChanges): void {\n        if ('max' in changes) {\n            this._createValidator();\n            if (this._onChange) { this._onChange(); }\n        }\n    }\n\n    validate(c: AbstractControl): ValidationErrors | null { return this._validator(c); }\n\n    registerOnValidatorChange(fn: () => void): void { this._onChange = fn; }\n\n    private _createValidator(): void { this._validator = Validators.max(parseInt(this.max, 10)); }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { A11yModule } from '@ptsecurity/cdk/a11y';\nimport { McCommonModule } from '@ptsecurity/mosaic/core';\n\nimport { McInput, McInputMono, McNumberInput } from './input';\nimport { MaxValidator, MinValidator } from './input-number-validators';\n\n\n@NgModule({\n    imports: [CommonModule, A11yModule, McCommonModule, FormsModule],\n    exports: [McInput, McNumberInput, McInputMono, MinValidator, MaxValidator],\n    declarations: [McInput, McNumberInput, McInputMono, MinValidator, MaxValidator ]\n})\nexport class McInputModule {\n}\n","import { Injectable } from '@angular/core';\nimport { Subject } from 'rxjs';\n\n\n/** Datepicker data that requires internationalization. */\n@Injectable({ providedIn: 'root' })\nexport class McDatepickerIntl {\n    /**\n     * Stream that emits whenever the labels here are changed. Use this to notify\n     * components if the labels have changed after initialization.\n     */\n    readonly changes: Subject<void> = new Subject<void>();\n\n    /** A label for the calendar popup (used by screen readers). */\n    calendarLabel: string = 'Calendar';\n\n    /** A label for the button used to open the calendar popup (used by screen readers). */\n    openCalendarLabel: string = 'Open calendar';\n\n    /** A label for the previous month button (used by screen readers). */\n    prevMonthLabel: string = 'Previous month';\n\n    /** A label for the next month button (used by screen readers). */\n    nextMonthLabel: string = 'Next month';\n\n    /** A label for the previous year button (used by screen readers). */\n    prevYearLabel: string = 'Previous year';\n\n    /** A label for the next year button (used by screen readers). */\n    nextYearLabel: string = 'Next year';\n\n    /** A label for the previous multi-year button (used by screen readers). */\n    prevMultiYearLabel: string = 'Previous 20 years';\n\n    /** A label for the next multi-year button (used by screen readers). */\n    nextMultiYearLabel: string = 'Next 20 years';\n\n    /** A label for the 'switch to month view' button (used by screen readers). */\n    switchToMonthViewLabel: string = 'Choose date';\n\n    /** A label for the 'switch to year view' button (used by screen readers). */\n    switchToMultiYearViewLabel: string = 'Choose month and year';\n}\n","// tslint:disable:no-magic-numbers\nimport {\n    ChangeDetectionStrategy,\n    Component,\n    ElementRef,\n    EventEmitter,\n    Input,\n    Output,\n    ViewEncapsulation,\n    NgZone,\n    OnChanges,\n    SimpleChanges\n} from '@angular/core';\nimport { take } from 'rxjs/operators';\n\n\n/**\n * Extra CSS classes that can be associated with a calendar cell.\n */\nexport type McCalendarCellCssClasses = string | string[] | Set<string> | { [key: string]: any };\n\n/**\n * An internal class that represents the data corresponding to a single calendar cell.\n * @docs-private\n */\nexport class McCalendarCell {\n    constructor(\n        public value: number,\n        public displayValue: string,\n        public ariaLabel: string,\n        public enabled: boolean,\n        public cssClasses?: McCalendarCellCssClasses\n    ) {\n    }\n}\n\n\n/**\n * An internal component used to display calendar data in a table.\n * @docs-private\n */\n@Component({\n    selector: '[mc-calendar-body]',\n    templateUrl: 'calendar-body.html',\n    styleUrls: ['calendar-body.css'],\n    host: {\n        class: 'mc-calendar__body',\n        role: 'grid',\n        'aria-readonly': 'true'\n    },\n    exportAs: 'mcCalendarBody',\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class McCalendarBody implements OnChanges {\n    /** The label for the table. (e.g. \"Jan 2017\"). */\n    @Input() label: string;\n\n    /** The cells to display in the table. */\n    @Input() rows: McCalendarCell[][];\n\n    /** The value in the table that corresponds to today. */\n    @Input() todayValue: number;\n\n    /** The value in the table that is currently selected. */\n    @Input() selectedValue: number;\n\n    /** The minimum number of free cells needed to fit the label in the first row. */\n    @Input() labelMinRequiredCells: number;\n\n    /** The number of columns in the table. */\n    @Input() numCols = 7;\n\n    /** The cell number of the active cell in the table. */\n    @Input() activeCell = 0;\n\n    /**\n     * The aspect ratio (width / height) to use for the cells in the table. This aspect ratio will be\n     * maintained even as the table resizes.\n     */\n    @Input() cellAspectRatio = 1;\n\n    /** Emits when a new value is selected. */\n    @Output() readonly selectedValueChange: EventEmitter<number> = new EventEmitter<number>();\n\n    /** The number of blank cells to put at the beginning for the first row. */\n    firstRowOffset: number;\n\n    /** Padding for the individual date cells. */\n    cellPadding: string;\n\n    /** Width of an individual cell. */\n    cellWidth: string;\n\n    constructor(private elementRef: ElementRef<HTMLElement>, private ngZone: NgZone) {\n    }\n\n    cellClicked(cell: McCalendarCell): void {\n        if (cell.enabled) {\n            this.selectedValueChange.emit(cell.value);\n        }\n    }\n\n    ngOnChanges(changes: SimpleChanges) {\n        const columnChanges = changes.numCols;\n        // tslint:disable-next-line:no-this-assignment\n        const { rows, numCols } = this;\n\n        if (changes.rows || columnChanges) {\n            this.firstRowOffset = rows && rows.length && rows[0].length ? numCols - rows[0].length : 0;\n        }\n\n        if (changes.cellAspectRatio || columnChanges || !this.cellPadding) {\n            this.cellPadding = `${this.cellAspectRatio * 50 / numCols}%`;\n        }\n\n        if (columnChanges || !this.cellWidth) {\n            this.cellWidth = `${100 / numCols}%`;\n        }\n    }\n\n    isActiveCell(rowIndex: number, colIndex: number): boolean {\n        let cellNumber = rowIndex * this.numCols + colIndex;\n\n        // Account for the fact that the first row may not have as many cells.\n        if (rowIndex) {\n            cellNumber -= this.firstRowOffset;\n        }\n\n        return cellNumber === this.activeCell;\n    }\n\n    /** Focuses the active cell after the microtask queue is empty. */\n    focusActiveCell() {\n        this.ngZone.runOutsideAngular(() => {\n            this.ngZone.onStable.asObservable().pipe(take(1)).subscribe(() => {\n                const activeCell: HTMLElement | null =\n                    this.elementRef.nativeElement.querySelector('.mc-calendar__body_active');\n\n                if (activeCell) {\n                    activeCell.focus();\n                }\n            });\n        });\n    }\n}\n","// tslint:disable:no-magic-numbers\nimport {\n    AfterContentInit,\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    EventEmitter,\n    Inject,\n    Input,\n    Optional,\n    Output,\n    ViewEncapsulation,\n    ViewChild\n} from '@angular/core';\nimport { Directionality } from '@ptsecurity/cdk/bidi';\nimport { DateAdapter, MC_DATE_FORMATS, McDateFormats } from '@ptsecurity/cdk/datetime';\nimport {\n    DOWN_ARROW,\n    END,\n    ENTER,\n    HOME,\n    LEFT_ARROW,\n    PAGE_DOWN,\n    PAGE_UP,\n    RIGHT_ARROW,\n    UP_ARROW,\n    SPACE\n} from '@ptsecurity/cdk/keycodes';\n\nimport { McCalendarBody, McCalendarCell, McCalendarCellCssClasses } from './calendar-body';\nimport { createMissingDateImplError } from './datepicker-errors';\n\n\nconst DAYS_PER_WEEK = 7;\n\n\n/**\n * An internal component used to display a single month in the datepicker.\n * @docs-private\n */\n@Component({\n    selector: 'mc-month-view',\n    templateUrl: 'month-view.html',\n    exportAs: 'mcMonthView',\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class McMonthView<D> implements AfterContentInit {\n    /**\n     * The date to display in this month view (everything other than the month and year is ignored).\n     */\n    @Input()\n    get activeDate(): D {\n        return this._activeDate;\n    }\n\n    set activeDate(value: D) {\n        const oldActiveDate = this._activeDate;\n        const validDate =\n            this.getValidDateOrNull(this.dateAdapter.deserialize(value)) || this.dateAdapter.today();\n        this._activeDate = this.dateAdapter.clampDate(validDate, this.minDate, this.maxDate);\n\n        if (!this.hasSameMonthAndYear(oldActiveDate, this._activeDate)) {\n            this.init();\n        }\n    }\n\n    /** The currently selected date. */\n    @Input()\n    get selected(): D | null {\n        return this._selected;\n    }\n\n    set selected(value: D | null) {\n        this._selected = this.getValidDateOrNull(this.dateAdapter.deserialize(value));\n        this.selectedDate = this.getDateInCurrentMonth(this._selected);\n    }\n\n    /** The minimum selectable date. */\n    @Input()\n    get minDate(): D | null {\n        return this._minDate;\n    }\n\n    set minDate(value: D | null) {\n        this._minDate = this.getValidDateOrNull(this.dateAdapter.deserialize(value));\n    }\n\n    /** The maximum selectable date. */\n    @Input()\n    get maxDate(): D | null {\n        return this._maxDate;\n    }\n\n    set maxDate(value: D | null) {\n        this._maxDate = this.getValidDateOrNull(this.dateAdapter.deserialize(value));\n    }\n\n    /** Function used to filter which dates are selectable. */\n    @Input() dateFilter: (date: D) => boolean;\n\n    /** Function that can be used to add custom CSS classes to dates. */\n    @Input() dateClass: (date: D) => McCalendarCellCssClasses;\n\n    /** Emits when a new date is selected. */\n    @Output() readonly selectedChange: EventEmitter<D | null> = new EventEmitter<D | null>();\n\n    /** Emits when any date is selected. */\n    @Output() readonly userSelection: EventEmitter<void> = new EventEmitter<void>();\n\n    /** Emits when any date is activated. */\n    @Output() readonly activeDateChange: EventEmitter<D> = new EventEmitter<D>();\n\n    /** The body of calendar table */\n    @ViewChild(McCalendarBody) mcCalendarBody: McCalendarBody;\n\n    /** The label for this month (e.g. \"January 2017\"). */\n    monthLabel: string;\n\n    /** Grid of calendar cells representing the dates of the month. */\n    weeks: McCalendarCell[][];\n\n    /** The number of blank cells in the first row before the 1st of the month. */\n    firstWeekOffset: number;\n\n    /**\n     * The date of the month that the currently selected Date falls on.\n     * Null if the currently selected Date is in another month.\n     */\n    selectedDate: number | null;\n\n    /** The date of the month that today falls on. Null if today is in another month. */\n    todayDate: number | null;\n\n    /** The names of the weekdays. */\n    weekdays: { long: string; narrow: string }[];\n    private _activeDate: D;\n    private _selected: D | null;\n    private _minDate: D | null;\n    private _maxDate: D | null;\n\n    constructor(\n        private changeDetectorRef: ChangeDetectorRef,\n        @Optional() @Inject(MC_DATE_FORMATS) private dateFormats: McDateFormats,\n        @Optional() public dateAdapter: DateAdapter<D>,\n        @Optional() private dir?: Directionality\n    ) {\n\n        if (!this.dateAdapter) {\n            throw createMissingDateImplError('DateAdapter');\n        }\n\n        if (!this.dateFormats) {\n            throw createMissingDateImplError('MC_DATE_FORMATS');\n        }\n\n        const firstDayOfWeek = this.dateAdapter.getFirstDayOfWeek();\n        const narrowWeekdays = this.dateAdapter.getDayOfWeekNames('narrow');\n        const longWeekdays = this.dateAdapter.getDayOfWeekNames('long');\n\n        // Rotate the labels for days of the week based on the configured first day of the week.\n        const weekdays = longWeekdays.map((long, i) => {\n            return { long, narrow: narrowWeekdays[i] };\n        });\n        this.weekdays = weekdays.slice(firstDayOfWeek).concat(weekdays.slice(0, firstDayOfWeek));\n\n        this._activeDate = this.dateAdapter.today();\n    }\n\n    ngAfterContentInit() {\n        this.init();\n    }\n\n    /** Handles when a new date is selected. */\n    dateSelected(date: number) {\n        if (this.selectedDate !== date) {\n            const selectedYear = this.dateAdapter.getYear(this.activeDate);\n            const selectedMonth = this.dateAdapter.getMonth(this.activeDate);\n            const selectedDate = this.dateAdapter.createDate(selectedYear, selectedMonth, date);\n\n            this.selectedChange.emit(selectedDate);\n        }\n\n        this.userSelection.emit();\n    }\n\n    /** Handles keydown events on the calendar body when calendar is in month view. */\n    handleCalendarBodyKeydown(event: KeyboardEvent): void {\n        // TODO(mmalerba): We currently allow keyboard navigation to disabled dates, but just prevent\n        // disabled ones from being selected. This may not be ideal, we should look into whether\n        // navigation should skip over disabled dates, and if so, how to implement that efficiently.\n\n        const oldActiveDate = this._activeDate;\n        const isRtl = this.isRtl();\n\n        // tslint:disable-next-line:deprecation\n        switch (event.keyCode) {\n            case LEFT_ARROW:\n                this.activeDate = this.dateAdapter.addCalendarDays(this._activeDate, isRtl ? 1 : -1);\n                break;\n            case RIGHT_ARROW:\n                this.activeDate = this.dateAdapter.addCalendarDays(this._activeDate, isRtl ? -1 : 1);\n                break;\n            case UP_ARROW:\n                this.activeDate = this.dateAdapter.addCalendarDays(this._activeDate, -7);\n                break;\n            case DOWN_ARROW:\n                this.activeDate = this.dateAdapter.addCalendarDays(this._activeDate, 7);\n                break;\n            case HOME:\n                this.activeDate = this.dateAdapter.addCalendarDays(this._activeDate,\n                    1 - this.dateAdapter.getDate(this._activeDate));\n                break;\n            case END:\n                this.activeDate = this.dateAdapter.addCalendarDays(this._activeDate,\n                    (this.dateAdapter.getNumDaysInMonth(this._activeDate) -\n                        this.dateAdapter.getDate(this._activeDate)));\n                break;\n            case PAGE_UP:\n                this.activeDate = event.altKey ?\n                    this.dateAdapter.addCalendarYears(this._activeDate, -1) :\n                    this.dateAdapter.addCalendarMonths(this._activeDate, -1);\n                break;\n            case PAGE_DOWN:\n                this.activeDate = event.altKey ?\n                    this.dateAdapter.addCalendarYears(this._activeDate, 1) :\n                    this.dateAdapter.addCalendarMonths(this._activeDate, 1);\n                break;\n            case ENTER:\n            case SPACE:\n                if (!this.dateFilter || this.dateFilter(this._activeDate)) {\n                    this.dateSelected(this.dateAdapter.getDate(this._activeDate));\n                    this.userSelection.emit();\n                    // Prevent unexpected default actions such as form submission.\n                    event.preventDefault();\n                }\n\n                return;\n            default:\n                // Don't prevent default or focus active cell on keys that we don't explicitly handle.\n                return;\n        }\n\n        if (this.dateAdapter.compareDate(oldActiveDate, this.activeDate)) {\n            this.activeDateChange.emit(this.activeDate);\n        }\n\n        this.focusActiveCell();\n        // Prevent unexpected default actions such as form submission.\n        event.preventDefault();\n    }\n\n    /** Initializes this month view. */\n    init() {\n        this.selectedDate = this.getDateInCurrentMonth(this.selected);\n        this.todayDate = this.getDateInCurrentMonth(this.dateAdapter.today());\n        this.monthLabel =\n            this.dateAdapter.getMonthNames('short')[this.dateAdapter.getMonth(this.activeDate)];\n\n        this.monthLabel = this.monthLabel[0].toLocaleUpperCase() + this.monthLabel.substr(1);\n\n        const firstOfMonth = this.dateAdapter.createDate(this.dateAdapter.getYear(this.activeDate),\n            this.dateAdapter.getMonth(this.activeDate), 1);\n        this.firstWeekOffset =\n            (DAYS_PER_WEEK + this.dateAdapter.getDayOfWeek(firstOfMonth) -\n                this.dateAdapter.getFirstDayOfWeek()) % DAYS_PER_WEEK;\n\n        this.createWeekCells();\n        this.changeDetectorRef.markForCheck();\n    }\n\n    /** Focuses the active cell after the microtask queue is empty. */\n    focusActiveCell() {\n        this.mcCalendarBody.focusActiveCell();\n    }\n\n    /** Creates McCalendarCells for the dates in this month. */\n    private createWeekCells() {\n        const daysInMonth = this.dateAdapter.getNumDaysInMonth(this.activeDate);\n        const dateNames = this.dateAdapter.getDateNames();\n\n        this.weeks = [[]];\n\n        for (let i = 0, cell = this.firstWeekOffset; i < daysInMonth; i++, cell++) {\n            if (cell === DAYS_PER_WEEK) {\n                this.weeks.push([]);\n                cell = 0;\n            }\n            const date = this.dateAdapter.createDate(\n                this.dateAdapter.getYear(this.activeDate),\n                this.dateAdapter.getMonth(this.activeDate), i + 1);\n            const enabled = this.shouldEnableDate(date);\n            const ariaLabel = this.dateAdapter.format(date, this.dateFormats.display.dateA11yLabel);\n            const cellClasses = this.dateClass ? this.dateClass(date) : undefined;\n\n            this.weeks[this.weeks.length - 1]\n                .push(new McCalendarCell(i + 1, dateNames[i], ariaLabel, enabled, cellClasses));\n        }\n    }\n\n    /** Date filter for the month */\n    private shouldEnableDate(date: D): boolean {\n        return !!date &&\n            (!this.dateFilter || this.dateFilter(date)) &&\n            (!this.minDate || this.dateAdapter.compareDate(date, this.minDate) >= 0) &&\n            (!this.maxDate || this.dateAdapter.compareDate(date, this.maxDate) <= 0);\n    }\n\n    /**\n     * Gets the date in this month that the given Date falls on.\n     * Returns null if the given Date is in another month.\n     */\n    private getDateInCurrentMonth(date: D | null): number | null {\n        return date && this.hasSameMonthAndYear(date, this.activeDate) ?\n            this.dateAdapter.getDate(date) : null;\n    }\n\n    /** Checks whether the 2 dates are non-null and fall within the same month of the same year. */\n    private hasSameMonthAndYear(d1: D | null, d2: D | null): boolean {\n        return !!(d1 && d2 && this.dateAdapter.getMonth(d1) === this.dateAdapter.getMonth(d2) &&\n            this.dateAdapter.getYear(d1) === this.dateAdapter.getYear(d2));\n    }\n\n    /**\n     * @param obj The object to check.\n     * @returns The given object if it is both a date instance and valid, otherwise null.\n     */\n    private getValidDateOrNull(obj: any): D | null {\n        return (this.dateAdapter.isDateInstance(obj) && this.dateAdapter.isValid(obj)) ? obj : null;\n    }\n\n    /** Determines whether the user has the RTL layout direction. */\n    private isRtl() {\n        return this.dir && this.dir.value === 'rtl';\n    }\n}\n","// tslint:disable:no-magic-numbers\nimport {\n    AfterContentInit,\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    EventEmitter,\n    Input,\n    Optional,\n    Output,\n    ViewChild,\n    ViewEncapsulation\n} from '@angular/core';\nimport { Directionality } from '@ptsecurity/cdk/bidi';\nimport { DateAdapter } from '@ptsecurity/cdk/datetime';\nimport {\n    DOWN_ARROW,\n    END,\n    ENTER,\n    HOME,\n    LEFT_ARROW,\n    PAGE_DOWN,\n    PAGE_UP,\n    RIGHT_ARROW,\n    UP_ARROW,\n    SPACE\n} from '@ptsecurity/cdk/keycodes';\n\nimport { McCalendarBody, McCalendarCell } from './calendar-body';\nimport { createMissingDateImplError } from './datepicker-errors';\n\n\nexport const yearsPerPage = 24;\n\nexport const yearsPerRow = 4;\n\n\n/**\n * An internal component used to display a year selector in the datepicker.\n * @docs-private\n */\n@Component({\n    selector: 'mc-multi-year-view',\n    templateUrl: 'multi-year-view.html',\n    exportAs: 'mcMultiYearView',\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class McMultiYearView<D> implements AfterContentInit {\n    /** The date to display in this multi-year view (everything other than the year is ignored). */\n    @Input()\n    get activeDate(): D {\n        return this._activeDate;\n    }\n\n    set activeDate(value: D) {\n        const oldActiveDate = this._activeDate;\n        const validDate =\n            this.getValidDateOrNull(this.dateAdapter.deserialize(value)) || this.dateAdapter.today();\n        this._activeDate = this.dateAdapter.clampDate(validDate, this.minDate, this.maxDate);\n\n        if (Math.floor(this.dateAdapter.getYear(oldActiveDate) / yearsPerPage) !==\n            Math.floor(this.dateAdapter.getYear(this._activeDate) / yearsPerPage)) {\n            this.init();\n        }\n    }\n\n    /** The currently selected date. */\n    @Input()\n    get selected(): D | null {\n        return this._selected;\n    }\n\n    set selected(value: D | null) {\n        this._selected = this.getValidDateOrNull(this.dateAdapter.deserialize(value));\n        this.selectedYear = this._selected && this.dateAdapter.getYear(this._selected);\n    }\n\n    /** The minimum selectable date. */\n    @Input()\n    get minDate(): D | null {\n        return this._minDate;\n    }\n\n    set minDate(value: D | null) {\n        this._minDate = this.getValidDateOrNull(this.dateAdapter.deserialize(value));\n    }\n\n    /** The maximum selectable date. */\n    @Input()\n    get maxDate(): D | null {\n        return this._maxDate;\n    }\n\n    set maxDate(value: D | null) {\n        this._maxDate = this.getValidDateOrNull(this.dateAdapter.deserialize(value));\n    }\n\n    /** A function used to filter which dates are selectable. */\n    @Input() dateFilter: (date: D) => boolean;\n\n    /** Emits when a new year is selected. */\n    @Output() readonly selectedChange: EventEmitter<D> = new EventEmitter<D>();\n\n    /** Emits the selected year. This doesn't imply a change on the selected date */\n    @Output() readonly yearSelected: EventEmitter<D> = new EventEmitter<D>();\n\n    /** Emits when any date is activated. */\n    @Output() readonly activeDateChange: EventEmitter<D> = new EventEmitter<D>();\n\n    /** The body of calendar table */\n    @ViewChild(McCalendarBody) mcCalendarBody: McCalendarBody;\n\n    /** Grid of calendar cells representing the currently displayed years. */\n    years: McCalendarCell[][];\n\n    /** The year that today falls on. */\n    todayYear: number;\n\n    /** The year of the selected date. Null if the selected date is null. */\n    selectedYear: number | null;\n    private _activeDate: D;\n    private _selected: D | null;\n    private _minDate: D | null;\n    private _maxDate: D | null;\n\n    constructor(\n        private changeDetectorRef: ChangeDetectorRef,\n        @Optional() public dateAdapter: DateAdapter<D>,\n        @Optional() private dir?: Directionality\n    ) {\n        if (!this.dateAdapter) {\n            throw createMissingDateImplError('DateAdapter');\n        }\n\n        this._activeDate = this.dateAdapter.today();\n    }\n\n    ngAfterContentInit() {\n        this.init();\n    }\n\n    /** Initializes this multi-year view. */\n    init() {\n        this.todayYear = this.dateAdapter.getYear(this.dateAdapter.today());\n        const activeYear = this.dateAdapter.getYear(this._activeDate);\n        const activeOffset = activeYear % yearsPerPage;\n        this.years = [];\n        for (let i = 0, row: number[] = []; i < yearsPerPage; i++) {\n            row.push(activeYear - activeOffset + i);\n            if (row.length === yearsPerRow) {\n                this.years.push(row.map((year) => this.createCellForYear(year)));\n                row = [];\n            }\n        }\n        this.changeDetectorRef.markForCheck();\n    }\n\n    /** Handles when a new year is selected. */\n    onYearSelected(year: number) {\n        this.yearSelected.emit(this.dateAdapter.createDate(year, 0, 1));\n        const month = this.dateAdapter.getMonth(this.activeDate);\n        const daysInMonth =\n            this.dateAdapter.getNumDaysInMonth(this.dateAdapter.createDate(year, month, 1));\n        this.selectedChange.emit(this.dateAdapter.createDate(year, month,\n            Math.min(this.dateAdapter.getDate(this.activeDate), daysInMonth)));\n    }\n\n    /** Handles keydown events on the calendar body when calendar is in multi-year view. */\n    handleCalendarBodyKeydown(event: KeyboardEvent): void {\n        // TODO(mmalerba): We currently allow keyboard navigation to disabled dates, but just prevent\n        // disabled ones from being selected. This may not be ideal, we should look into whether\n        // navigation should skip over disabled dates, and if so, how to implement that efficiently.\n\n        const oldActiveDate = this._activeDate;\n        const isRtl = this.isRtl();\n\n        // tslint:disable-next-line:deprecation\n        switch (event.keyCode) {\n            case LEFT_ARROW:\n                this.activeDate = this.dateAdapter.addCalendarYears(this._activeDate, isRtl ? 1 : -1);\n                break;\n            case RIGHT_ARROW:\n                this.activeDate = this.dateAdapter.addCalendarYears(this._activeDate, isRtl ? -1 : 1);\n                break;\n            case UP_ARROW:\n                this.activeDate = this.dateAdapter.addCalendarYears(this._activeDate, -yearsPerRow);\n                break;\n            case DOWN_ARROW:\n                this.activeDate = this.dateAdapter.addCalendarYears(this._activeDate, yearsPerRow);\n                break;\n            case HOME:\n                this.activeDate = this.dateAdapter.addCalendarYears(this._activeDate,\n                    -this.dateAdapter.getYear(this._activeDate) % yearsPerPage);\n                break;\n            case END:\n                this.activeDate = this.dateAdapter.addCalendarYears(this._activeDate,\n                    yearsPerPage - this.dateAdapter.getYear(this._activeDate) % yearsPerPage - 1);\n                break;\n            case PAGE_UP:\n                this.activeDate =\n                    this.dateAdapter.addCalendarYears(\n                        this._activeDate, event.altKey ? -yearsPerPage * 10 : -yearsPerPage);\n                break;\n            case PAGE_DOWN:\n                this.activeDate =\n                    this.dateAdapter.addCalendarYears(\n                        this._activeDate, event.altKey ? yearsPerPage * 10 : yearsPerPage);\n                break;\n            case ENTER:\n            case SPACE:\n                this.onYearSelected(this.dateAdapter.getYear(this._activeDate));\n                break;\n            default:\n                // Don't prevent default or focus active cell on keys that we don't explicitly handle.\n                return;\n        }\n\n        if (this.dateAdapter.compareDate(oldActiveDate, this.activeDate)) {\n            this.activeDateChange.emit(this.activeDate);\n        }\n\n        this.focusActiveCell();\n        // Prevent unexpected default actions such as form submission.\n        event.preventDefault();\n    }\n\n    getActiveCell(): number {\n        return this.dateAdapter.getYear(this.activeDate) % yearsPerPage;\n    }\n\n    /** Focuses the active cell after the microtask queue is empty. */\n    focusActiveCell() {\n        this.mcCalendarBody.focusActiveCell();\n    }\n\n    /** Creates an McCalendarCell for the given year. */\n    private createCellForYear(year: number) {\n        const yearName = this.dateAdapter.getYearName(this.dateAdapter.createDate(year, 0, 1));\n\n        return new McCalendarCell(year, yearName, yearName, this.shouldEnableYear(year));\n    }\n\n    /** Whether the given year is enabled. */\n    private shouldEnableYear(year: number) {\n        // disable if the year is greater than maxDate lower than minDate\n        if (year === undefined || year === null ||\n            (this.maxDate && year > this.dateAdapter.getYear(this.maxDate)) ||\n            (this.minDate && year < this.dateAdapter.getYear(this.minDate))) {\n            return false;\n        }\n\n        // enable if it reaches here and there's no filter defined\n        if (!this.dateFilter) {\n            return true;\n        }\n\n        const firstOfYear = this.dateAdapter.createDate(year, 0, 1);\n\n        // If any date in the year is enabled count the year as enabled.\n        for (let date = firstOfYear; this.dateAdapter.getYear(date) === year;\n             date = this.dateAdapter.addCalendarDays(date, 1)) {\n            if (this.dateFilter(date)) {\n                return true;\n            }\n        }\n\n        return false;\n    }\n\n    /**\n     * @param obj The object to check.\n     * @returns The given object if it is both a date instance and valid, otherwise null.\n     */\n    private getValidDateOrNull(obj: any): D | null {\n        return (this.dateAdapter.isDateInstance(obj) && this.dateAdapter.isValid(obj)) ? obj : null;\n    }\n\n    /** Determines whether the user has the RTL layout direction. */\n    private isRtl() {\n        return this.dir && this.dir.value === 'rtl';\n    }\n}\n","import {\n    AfterContentInit,\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    EventEmitter,\n    Inject,\n    Input,\n    Optional,\n    Output,\n    ViewChild,\n    ViewEncapsulation\n} from '@angular/core';\nimport { Directionality } from '@ptsecurity/cdk/bidi';\nimport { DateAdapter, MC_DATE_FORMATS, McDateFormats } from '@ptsecurity/cdk/datetime';\nimport {\n    DOWN_ARROW,\n    END,\n    ENTER,\n    HOME,\n    LEFT_ARROW,\n    PAGE_DOWN,\n    PAGE_UP,\n    RIGHT_ARROW,\n    UP_ARROW,\n    SPACE\n} from '@ptsecurity/cdk/keycodes';\n\nimport { McCalendarBody, McCalendarCell } from './calendar-body';\nimport { createMissingDateImplError } from './datepicker-errors';\n\n\n/**\n * An internal component used to display a single year in the datepicker.\n * @docs-private\n */\n@Component({\n    selector: 'mc-year-view',\n    templateUrl: 'year-view.html',\n    exportAs: 'mcYearView',\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class McYearView<D> implements AfterContentInit {\n    /** The date to display in this year view (everything other than the year is ignored). */\n    @Input()\n    get activeDate(): D {\n        return this._activeDate;\n    }\n\n    set activeDate(value: D) {\n        const oldActiveDate = this._activeDate;\n        const validDate =\n            this.getValidDateOrNull(this.dateAdapter.deserialize(value)) || this.dateAdapter.today();\n        this._activeDate = this.dateAdapter.clampDate(validDate, this.minDate, this.maxDate);\n\n        if (this.dateAdapter.getYear(oldActiveDate) !== this.dateAdapter.getYear(this._activeDate)) {\n            this.init();\n        }\n    }\n\n    /** The currently selected date. */\n    @Input()\n    get selected(): D | null {\n        return this._selected;\n    }\n\n    set selected(value: D | null) {\n        this._selected = this.getValidDateOrNull(this.dateAdapter.deserialize(value));\n        this.selectedMonth = this.getMonthInCurrentYear(this._selected);\n    }\n\n    /** The minimum selectable date. */\n    @Input()\n    get minDate(): D | null {\n        return this._minDate;\n    }\n\n    set minDate(value: D | null) {\n        this._minDate = this.getValidDateOrNull(this.dateAdapter.deserialize(value));\n    }\n\n    /** The maximum selectable date. */\n    @Input()\n    get maxDate(): D | null {\n        return this._maxDate;\n    }\n\n    set maxDate(value: D | null) {\n        this._maxDate = this.getValidDateOrNull(this.dateAdapter.deserialize(value));\n    }\n\n    /** A function used to filter which dates are selectable. */\n    @Input() dateFilter: (date: D) => boolean;\n\n    /** Emits when a new month is selected. */\n    @Output() readonly selectedChange: EventEmitter<D> = new EventEmitter<D>();\n\n    /** Emits the selected month. This doesn't imply a change on the selected date */\n    @Output() readonly monthSelected: EventEmitter<D> = new EventEmitter<D>();\n\n    /** Emits when any date is activated. */\n    @Output() readonly activeDateChange: EventEmitter<D> = new EventEmitter<D>();\n\n    /** The body of calendar table */\n    @ViewChild(McCalendarBody) mcCalendarBody: McCalendarBody;\n\n    /** Grid of calendar cells representing the months of the year. */\n    months: McCalendarCell[][];\n\n    /** The label for this year (e.g. \"2017\"). */\n    yearLabel: string;\n\n    /** The month in this year that today falls on. Null if today is in a different year. */\n    todayMonth: number | null;\n\n    /**\n     * The month in this year that the selected Date falls on.\n     * Null if the selected Date is in a different year.\n     */\n    selectedMonth: number | null;\n    private _activeDate: D;\n    private _selected: D | null;\n    private _minDate: D | null;\n    private _maxDate: D | null;\n\n    constructor(\n        private changeDetectorRef: ChangeDetectorRef,\n        @Optional() @Inject(MC_DATE_FORMATS) private dateFormats: McDateFormats,\n        @Optional() public dateAdapter: DateAdapter<D>,\n        @Optional() private dir?: Directionality\n    ) {\n        if (!this.dateAdapter) {\n            throw createMissingDateImplError('DateAdapter');\n        }\n\n        if (!this.dateFormats) {\n            throw createMissingDateImplError('MC_DATE_FORMATS');\n        }\n\n        this._activeDate = this.dateAdapter.today();\n    }\n\n    ngAfterContentInit() {\n        this.init();\n    }\n\n    /** Handles when a new month is selected. */\n    onMonthSelected(month: number) {\n        const normalizedDate =\n            this.dateAdapter.createDate(this.dateAdapter.getYear(this.activeDate), month, 1);\n\n        this.monthSelected.emit(normalizedDate);\n\n        const daysInMonth = this.dateAdapter.getNumDaysInMonth(normalizedDate);\n\n        this.selectedChange.emit(this.dateAdapter.createDate(\n            this.dateAdapter.getYear(this.activeDate), month,\n            Math.min(this.dateAdapter.getDate(this.activeDate), daysInMonth)));\n    }\n\n    /** Handles keydown events on the calendar body when calendar is in year view. */\n    handleCalendarBodyKeydown(event: KeyboardEvent): void {\n        // TODO(mmalerba): We currently allow keyboard navigation to disabled dates, but just prevent\n        // disabled ones from being selected. This may not be ideal, we should look into whether\n        // navigation should skip over disabled dates, and if so, how to implement that efficiently.\n\n        const oldActiveDate = this._activeDate;\n        const isRtl = this.isRtl();\n\n        const VERTICAL_SHIFT = 4;\n        const PAGE_SHIFT = 10;\n        const MAX_MONTH_INDEX = 11;\n\n        // tslint:disable-next-line:deprecation\n        switch (event.keyCode) {\n            case LEFT_ARROW:\n                this.activeDate = this.dateAdapter.addCalendarMonths(this._activeDate, isRtl ? 1 : -1);\n                break;\n            case RIGHT_ARROW:\n                this.activeDate = this.dateAdapter.addCalendarMonths(this._activeDate, isRtl ? -1 : 1);\n                break;\n            case UP_ARROW:\n                this.activeDate = this.dateAdapter.addCalendarMonths(this._activeDate, -VERTICAL_SHIFT);\n                break;\n            case DOWN_ARROW:\n                this.activeDate = this.dateAdapter.addCalendarMonths(this._activeDate, VERTICAL_SHIFT);\n                break;\n            case HOME:\n                this.activeDate = this.dateAdapter.addCalendarMonths(this._activeDate,\n                    -this.dateAdapter.getMonth(this._activeDate));\n                break;\n            case END:\n                this.activeDate = this.dateAdapter.addCalendarMonths(this._activeDate,\n                    MAX_MONTH_INDEX - this.dateAdapter.getMonth(this._activeDate));\n                break;\n            case PAGE_UP:\n                this.activeDate =\n                    this.dateAdapter.addCalendarYears(this._activeDate, event.altKey ? -PAGE_SHIFT : -1);\n                break;\n            case PAGE_DOWN:\n                this.activeDate =\n                    this.dateAdapter.addCalendarYears(this._activeDate, event.altKey ? PAGE_SHIFT : 1);\n                break;\n            case ENTER:\n            case SPACE:\n                this.onMonthSelected(this.dateAdapter.getMonth(this._activeDate));\n                break;\n            default:\n                // Don't prevent default or focus active cell on keys that we don't explicitly handle.\n                return;\n        }\n\n        if (this.dateAdapter.compareDate(oldActiveDate, this.activeDate)) {\n            this.activeDateChange.emit(this.activeDate);\n        }\n\n        this.focusActiveCell();\n        // Prevent unexpected default actions such as form submission.\n        event.preventDefault();\n    }\n\n    /** Initializes this year view. */\n    init() {\n        this.selectedMonth = this.getMonthInCurrentYear(this.selected);\n        this.todayMonth = this.getMonthInCurrentYear(this.dateAdapter.today());\n        this.yearLabel = this.dateAdapter.getYearName(this.activeDate);\n\n        const monthNames = this.dateAdapter.getMonthNames('short');\n\n        // First row of months only contains 5 elements so we can fit the year label on the same row.\n        // tslint:disable-next-line:no-magic-numbers\n        this.months = [[0, 1, 2, 3], [4, 5, 6, 7], [8, 9, 10, 11]].map((row) => row.map(\n            (month) => this.createCellForMonth(month, monthNames[month])));\n        this.changeDetectorRef.markForCheck();\n    }\n\n    /** Focuses the active cell after the microtask queue is empty. */\n    focusActiveCell() {\n        this.mcCalendarBody.focusActiveCell();\n    }\n\n    /**\n     * Gets the month in this year that the given Date falls on.\n     * Returns null if the given Date is in another year.\n     */\n    private getMonthInCurrentYear(date: D | null) {\n        return date && this.dateAdapter.getYear(date) === this.dateAdapter.getYear(this.activeDate) ?\n            this.dateAdapter.getMonth(date) : null;\n    }\n\n    /** Creates an McCalendarCell for the given month. */\n    private createCellForMonth(month: number, monthName: string) {\n        const ariaLabel = this.dateAdapter.format(\n            this.dateAdapter.createDate(this.dateAdapter.getYear(this.activeDate), month, 1),\n            this.dateFormats.display.monthYearA11yLabel);\n\n        const newMonthName = monthName[0].toLocaleUpperCase() + monthName.substr(1);\n\n        return new McCalendarCell(\n            month, newMonthName, ariaLabel, this.shouldEnableMonth(month));\n    }\n\n    /** Whether the given month is enabled. */\n    private shouldEnableMonth(month: number) {\n\n        const activeYear = this.dateAdapter.getYear(this.activeDate);\n\n        if (month === undefined || month === null ||\n            this.isYearAndMonthAfterMaxDate(activeYear, month) ||\n            this.isYearAndMonthBeforeMinDate(activeYear, month)) {\n            return false;\n        }\n\n        if (!this.dateFilter) {\n            return true;\n        }\n\n        const firstOfMonth = this.dateAdapter.createDate(activeYear, month, 1);\n\n        // If any date in the month is enabled count the month as enabled.\n        for (let date = firstOfMonth; this.dateAdapter.getMonth(date) === month;\n             date = this.dateAdapter.addCalendarDays(date, 1)) {\n            if (this.dateFilter(date)) {\n                return true;\n            }\n        }\n\n        return false;\n    }\n\n    /**\n     * Tests whether the combination month/year is after this.maxDate, considering\n     * just the month and year of this.maxDate\n     */\n    private isYearAndMonthAfterMaxDate(year: number, month: number) {\n        if (this.maxDate) {\n            const maxYear = this.dateAdapter.getYear(this.maxDate);\n            const maxMonth = this.dateAdapter.getMonth(this.maxDate);\n\n            return year > maxYear || (year === maxYear && month > maxMonth);\n        }\n\n        return false;\n    }\n\n    /**\n     * Tests whether the combination month/year is before this.minDate, considering\n     * just the month and year of this.minDate\n     */\n    private isYearAndMonthBeforeMinDate(year: number, month: number) {\n        if (this.minDate) {\n            const minYear = this.dateAdapter.getYear(this.minDate);\n            const minMonth = this.dateAdapter.getMonth(this.minDate);\n\n            return year < minYear || (year === minYear && month < minMonth);\n        }\n\n        return false;\n    }\n\n    /**\n     * @param obj The object to check.\n     * @returns The given object if it is both a date instance and valid, otherwise null.\n     */\n    private getValidDateOrNull(obj: any): D | null {\n        return (this.dateAdapter.isDateInstance(obj) && this.dateAdapter.isValid(obj)) ? obj : null;\n    }\n\n    /** Determines whether the user has the RTL layout direction. */\n    private isRtl() {\n        return this.dir && this.dir.value === 'rtl';\n    }\n}\n","import {\n    ChangeDetectionStrategy,\n    Component,\n    Directive,\n    ElementRef,\n    OnDestroy,\n    QueryList,\n    ViewEncapsulation,\n    ContentChildren\n} from '@angular/core';\n\nimport { FocusMonitor } from '@ptsecurity/cdk/a11y';\n\nimport { mixinColor, mixinDisabled, CanColor, CanDisable, CanDisableCtor, CanColorCtor } from '@ptsecurity/mosaic/core';\nimport { McIcon } from '@ptsecurity/mosaic/icon';\n\n\n@Directive({\n    selector: 'button[mc-button], a[mc-button]',\n    host: { class: 'mc-button' }\n})\nexport class McButtonCSSStyler {}\n\n\n@Directive({\n    selector: 'button[mc-icon-button], a[mc-icon-button]',\n    queries: {\n        contentChildren: new ContentChildren(McIcon)\n    },\n    host: { class: 'mc-icon-button' }\n})\nexport class McIconButtonCSSStyler {\n    nativeElement: Element;\n\n    contentChildren: QueryList<McIcon>;\n\n    constructor(elementRef: ElementRef) {\n        this.nativeElement = elementRef.nativeElement;\n    }\n\n    ngAfterContentInit() {\n        this._addClassModificatorForIcons();\n    }\n\n    _addClassModificatorForIcons() {\n        const twoIcons = 2;\n        const icons = this.contentChildren.map((item) => item._elementRef.nativeElement);\n\n        if (icons.length === 1) {\n            const iconElement = icons[0];\n            const COMMENT_NODE = 8;\n\n            if (!iconElement.previousElementSibling && !iconElement.nextElementSibling) {\n                if (iconElement.nextSibling && iconElement.nextSibling.nodeType !== COMMENT_NODE) {\n                    iconElement.classList.add('mc-icon_left');\n                    this.nativeElement.classList.add('mc-icon-button_left');\n                }\n\n                if (iconElement.previousSibling && iconElement.previousSibling.nodeType !== COMMENT_NODE) {\n                    iconElement.classList.add('mc-icon_right');\n                    this.nativeElement.classList.add('mc-icon-button_right');\n                }\n            }\n        } else if (icons.length === twoIcons) {\n            const firstIconElement = icons[0];\n            const secondIconElement = icons[1];\n\n            firstIconElement.classList.add('mc-icon_left');\n            secondIconElement.classList.add('mc-icon_right');\n        }\n    }\n}\n\n\nexport class McButtonBase {\n    constructor(public _elementRef: ElementRef) {}\n}\n\nexport const _McButtonMixinBase:\n    CanDisableCtor &\n    CanColorCtor &\n    typeof McButtonBase =\n        mixinColor(mixinDisabled(McButtonBase));\n\n\n@Component({\n    selector: `\n        button[mc-button],\n        button[mc-xs-button],\n        button[mc-sm-button],\n        button[mc-lg-button],\n        button[mc-xl-button]\n    `,\n    templateUrl: './button.component.html',\n    styleUrls: ['./button.css'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n    inputs: ['disabled', 'color'],\n    host: {\n        '[disabled]': 'disabled || null'\n    }\n})\nexport class McButton extends _McButtonMixinBase implements OnDestroy, CanDisable, CanColor {\n    constructor(elementRef: ElementRef, private _focusMonitor: FocusMonitor) {\n        super(elementRef);\n\n        this._focusMonitor.monitor(this._elementRef.nativeElement, true);\n    }\n\n    ngOnDestroy() {\n        this._focusMonitor.stopMonitoring(this._elementRef.nativeElement);\n    }\n\n    focus(): void {\n        this._getHostElement().focus();\n    }\n\n    _getHostElement() {\n        return this._elementRef.nativeElement;\n    }\n}\n\n\n@Component({\n    selector: 'a[mc-button], a[mc-xs-button], a[mc-sm-button], a[mc-lg-button], a[mc-xl-button]',\n    templateUrl: './button.component.html',\n    styleUrls: ['./button.css'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n    inputs: ['disabled', 'color'],\n    host: {\n        '[attr.tabindex]': 'disabled ? -1 : 0',\n        '[attr.disabled]': 'disabled || null',\n        '(click)': '_haltDisabledEvents($event)'\n    }\n})\nexport class McAnchor extends McButton {\n    constructor(focusMonitor: FocusMonitor, elementRef: ElementRef) {\n        super(elementRef, focusMonitor);\n    }\n\n    _haltDisabledEvents(event: Event) {\n        if (this.disabled) {\n            event.preventDefault();\n            event.stopImmediatePropagation();\n        }\n    }\n}\n\n\n@Component({\n    selector: 'button[mc-icon-button]',\n    templateUrl: './button.component.html',\n    styleUrls: ['./button.css'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n    inputs: ['disabled', 'color'],\n    host: {\n        '[attr.tabindex]': 'disabled ? -1 : 0',\n        '[attr.disabled]': 'disabled || null'\n    }\n})\nexport class McIconButton extends McButton {\n    constructor(focusMonitor: FocusMonitor, elementRef: ElementRef) {\n        super(elementRef, focusMonitor);\n    }\n\n    _haltDisabledEvents(event: Event) {\n        if (this.disabled) {\n            event.preventDefault();\n            event.stopImmediatePropagation();\n        }\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { A11yModule } from '@ptsecurity/cdk/a11y';\nimport { PlatformModule } from '@ptsecurity/cdk/platform';\n\nimport {\n    McButton,\n    McAnchor,\n    McIconButton,\n    McButtonCSSStyler,\n    McIconButtonCSSStyler\n} from './button.component';\n\n\n@NgModule({\n    imports: [\n        CommonModule,\n        A11yModule,\n        PlatformModule\n    ],\n    exports: [\n        McButton,\n        McAnchor,\n        McIconButton,\n        McButtonCSSStyler,\n        McIconButtonCSSStyler\n    ],\n    declarations: [\n        McButton,\n        McAnchor,\n        McIconButton,\n        McButtonCSSStyler,\n        McIconButtonCSSStyler\n    ]\n})\nexport class McButtonModule {}\n","import {\n    Output,\n    ChangeDetectionStrategy,\n    Component,\n    ElementRef, Input,\n    OnDestroy, EventEmitter,\n    ViewEncapsulation, HostBinding\n} from '@angular/core';\n\nimport { FocusMonitor } from '@ptsecurity/cdk/a11y';\nimport { SPACE } from '@ptsecurity/cdk/keycodes';\n\n\n@Component({\n    selector: 'mc-card',\n    templateUrl: './card.component.html',\n    styleUrls: ['./card.component.css'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n    inputs: ['color'],\n    host: {\n        class: 'mc-card',\n        '[class.mc-card_readonly]': 'readonly',\n        '[class.mc-card_selected]': 'selected',\n        '(keydown)': 'onKeyDown($event)',\n        '(click)': 'onClick($event)'\n    }\n})\nexport class McCard implements OnDestroy {\n    get tabIndex(): number | null {\n        return this.readonly ? null : this._tabIndex;\n    }\n\n    @HostBinding('attr.tabIndex')\n    @Input()\n    set tabIndex(value: number | null) {\n        this._tabIndex = value;\n    }\n\n    @Input()\n    readonly = false;\n\n    @Input()\n    selected = false;\n\n    @Output()\n    selectedChange = new EventEmitter<boolean>();\n\n    private _tabIndex: number | null = 0;\n\n    constructor(private _elementRef: ElementRef, private _focusMonitor: FocusMonitor) {\n        this._focusMonitor.monitor(this._elementRef.nativeElement, false);\n    }\n\n    ngOnDestroy() {\n        this._focusMonitor.stopMonitoring(this._elementRef.nativeElement);\n    }\n\n    focus(): void {\n        this.hostElement.focus();\n    }\n\n    onClick($event: MouseEvent) {\n        if (!this.readonly) {\n            $event.stopPropagation();\n\n            this.selectedChange.emit(!this.selected);\n        }\n    }\n\n    private get hostElement() {\n        return this._elementRef.nativeElement;\n    }\n\n    onKeyDown($event: KeyboardEvent) {\n        switch ($event.keyCode) {\n            case SPACE:\n                if (!this.readonly) {\n                    $event.preventDefault();\n                    this.selectedChange.emit(!this.selected);\n                }\n                break;\n            default:\n        }\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { A11yModule } from '@ptsecurity/cdk/a11y';\nimport { PlatformModule } from '@ptsecurity/cdk/platform';\n\nimport {\n    McCard\n} from './card.component';\n\n\n@NgModule({\n    imports: [\n        CommonModule,\n        A11yModule,\n        PlatformModule\n    ],\n    exports: [McCard],\n    declarations: [McCard]\n})\nexport class McCardModule {}\n","import { InjectionToken } from '@angular/core';\n\n\n/**\n * Checkbox click action when user click on input element.\n * noop: Do not toggle checked or indeterminate.\n * check: Only toggle checked status, ignore indeterminate.\n * check-indeterminate: Toggle checked status, set indeterminate to false. Default behavior.\n * undefined: Same as `check-indeterminate`.\n */\nexport type McCheckboxClickAction = 'noop' | 'check' | 'check-indeterminate' | undefined;\n\n/**\n * Injection token that can be used to specify the checkbox click behavior.\n */\nexport const MC_CHECKBOX_CLICK_ACTION =\n    new InjectionToken<McCheckboxClickAction>('mc-checkbox-click-action');\n","import {\n    AfterViewInit,\n    Attribute,\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    ElementRef,\n    EventEmitter,\n    forwardRef,\n    Inject,\n    Input,\n    OnDestroy,\n    Optional,\n    Output,\n    ViewChild,\n    ViewEncapsulation\n} from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { FocusMonitor, FocusOrigin } from '@ptsecurity/cdk/a11y';\nimport {\n    CanColor, CanColorCtor,\n    CanDisable, CanDisableCtor,\n    HasTabIndex, HasTabIndexCtor,\n    mixinColor,\n    mixinDisabled,\n    mixinTabIndex,\n    toBoolean\n} from '@ptsecurity/mosaic/core';\n\nimport { MC_CHECKBOX_CLICK_ACTION, McCheckboxClickAction } from './checkbox-config';\n\n\n// Increasing integer for generating unique ids for checkbox components.\nlet nextUniqueId = 0;\n\n/**\n * Provider Expression that allows mc-checkbox to register as a ControlValueAccessor.\n * This allows it to support [(ngModel)].\n * @docs-private\n */\nexport const MC_CHECKBOX_CONTROL_VALUE_ACCESSOR: any = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => McCheckbox),\n    multi: true\n};\n\n/**\n * Represents the different states that require custom transitions between them.\n * @docs-private\n */\nexport enum TransitionCheckState {\n    /** The initial state of the component before any user interaction. */\n    Init,\n    /** The state representing the component when it's becoming checked. */\n    Checked,\n    /** The state representing the component when it's becoming unchecked. */\n    Unchecked,\n    /** The state representing the component when it's becoming indeterminate. */\n    Indeterminate\n}\n\n/** Change event object emitted by McCheckbox. */\nexport class McCheckboxChange {\n    /** The source McCheckbox of the event. */\n    source: McCheckbox;\n    /** The new `checked` value of the checkbox. */\n    checked: boolean;\n}\n\n// Boilerplate for applying mixins to McCheckbox.\n/** @docs-private */\nexport class McCheckboxBase {\n    constructor(public _elementRef: ElementRef) {\n    }\n}\n\nexport const _McCheckboxMixinBase:\n    HasTabIndexCtor &\n    CanColorCtor &\n    CanDisableCtor &\n    typeof McCheckboxBase =\n        mixinTabIndex(mixinColor(mixinDisabled(McCheckboxBase)));\n\n\n/**\n * A mosaic checkbox component. Supports all of the functionality of an HTML5 checkbox,\n * and exposes a similar API. A McCheckbox can be either checked, unchecked, indeterminate, or\n * disabled. Note that all additional accessibility attributes are taken care of by the component,\n * so there is no need to provide them yourself. However, if you want to omit a label and still\n * have the checkbox be accessible, you may supply an [aria-label] input.\n */\n@Component({\n    selector: 'mc-checkbox',\n    templateUrl: 'checkbox.html',\n    styleUrls: ['checkbox.css'],\n    exportAs: 'mcCheckbox',\n    host: {\n        class: 'mc-checkbox',\n        '[id]': 'id',\n        '[attr.id]': 'id',\n        '[class.mc-indeterminate]': 'indeterminate',\n        '[class.mc-checked]': 'checked',\n        '[class.mc-disabled]': 'disabled',\n        '[class.mc-checkbox-label-before]': 'labelPosition == \"before\"'\n    },\n    providers: [MC_CHECKBOX_CONTROL_VALUE_ACCESSOR],\n    inputs: ['color', 'tabIndex'],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class McCheckbox extends _McCheckboxMixinBase implements ControlValueAccessor,\n    AfterViewInit, OnDestroy, CanColor, CanDisable, HasTabIndex {\n\n    /**\n     * Attached to the aria-label attribute of the host element. In most cases, arial-labelledby will\n     * take precedence so this may be omitted.\n     */\n    @Input('aria-label') ariaLabel: string = '';\n\n    /**\n     * Users can specify the `aria-labelledby` attribute which will be forwarded to the input element\n     */\n    @Input('aria-labelledby') ariaLabelledby: string | null = null;\n\n    private _uniqueId: string = `mc-checkbox-${++nextUniqueId}`;\n\n    /** A unique id for the checkbox input. If none is supplied, it will be auto-generated. */\n    @Input() id: string = this._uniqueId;\n\n    /** Returns the unique id for the visual hidden input. */\n    get inputId(): string {\n        return `${this.id || this._uniqueId}-input`;\n    }\n\n    /** Whether the checkbox is required. */\n    @Input()\n    get required(): boolean {\n        return this._required;\n    }\n\n    set required(value: boolean) {\n        this._required = toBoolean(value);\n    }\n\n    private _required: boolean;\n\n    /** Whether the label should appear after or before the checkbox. Defaults to 'after' */\n    @Input() labelPosition: 'before' | 'after' = 'after';\n\n    /** Name value will be applied to the input element if present */\n    @Input() name: string | null = null;\n\n    /** Event emitted when the checkbox's `checked` value changes. */\n    @Output() readonly change: EventEmitter<McCheckboxChange> =\n        new EventEmitter<McCheckboxChange>();\n\n    /** Event emitted when the checkbox's `indeterminate` value changes. */\n    @Output() readonly indeterminateChange: EventEmitter<boolean> = new EventEmitter<boolean>();\n\n    /** The value attribute of the native input element */\n    @Input() value: string;\n\n    /** The native `<input type=\"checkbox\">` element */\n    @ViewChild('input') _inputElement: ElementRef;\n\n    /**\n     * Called when the checkbox is blurred. Needed to properly implement ControlValueAccessor.\n     * @docs-private\n     */\n    _onTouched: () => any = () => {\n    }\n\n    private _currentAnimationClass: string = '';\n\n    private _currentCheckState: TransitionCheckState = TransitionCheckState.Init;\n\n    private _controlValueAccessorChangeFn: (value: any) => void = () => {\n    }\n\n    constructor(elementRef: ElementRef,\n                private _changeDetectorRef: ChangeDetectorRef,\n                private _focusMonitor: FocusMonitor,\n                @Attribute('tabindex') tabIndex: string,\n                @Optional() @Inject(MC_CHECKBOX_CLICK_ACTION)\n                private _clickAction: McCheckboxClickAction) {\n        super(elementRef);\n\n        this.tabIndex = parseInt(tabIndex) || 0;\n    }\n\n    ngAfterViewInit() {\n        this._focusMonitor\n            .monitor(this._inputElement.nativeElement)\n            .subscribe((focusOrigin) => this._onInputFocusChange(focusOrigin));\n    }\n\n    ngOnDestroy() {\n        this._focusMonitor.stopMonitoring(this._inputElement.nativeElement);\n    }\n\n    /**\n     * Whether the checkbox is checked.\n     */\n    @Input()\n    get checked(): boolean {\n        return this._checked;\n    }\n\n    set checked(value: boolean) {\n        if (value != this.checked) {\n            this._checked = value;\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n\n    private _checked: boolean = false;\n\n    /**\n     * Whether the checkbox is disabled. This fully overrides the implementation provided by\n     * mixinDisabled, but the mixin is still required because mixinTabIndex requires it.\n     */\n    @Input()\n    get disabled() {\n        return this._disabled;\n    }\n\n    set disabled(value: any) {\n        if (value != this.disabled) {\n            this._disabled = value;\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n\n    private _disabled: boolean = false;\n\n    /**\n     * Whether the checkbox is indeterminate. This is also known as \"mixed\" mode and can be used to\n     * represent a checkbox with three states, e.g. a checkbox that represents a nested list of\n     * checkable items. Note that whenever checkbox is manually clicked, indeterminate is immediately\n     * set to false.\n     */\n    @Input()\n    get indeterminate(): boolean {\n        return this._indeterminate;\n    }\n\n    set indeterminate(value: boolean) {\n        const changed = value != this._indeterminate;\n        this._indeterminate = value;\n\n        if (changed) {\n            if (this._indeterminate) {\n                this._transitionCheckState(TransitionCheckState.Indeterminate);\n            } else {\n                this._transitionCheckState(\n                    this.checked ? TransitionCheckState.Checked : TransitionCheckState.Unchecked);\n            }\n            this.indeterminateChange.emit(this._indeterminate);\n        }\n    }\n\n    private _indeterminate: boolean = false;\n\n    /** Method being called whenever the label text changes. */\n    _onLabelTextChange() {\n        // This method is getting called whenever the label of the checkbox changes.\n        // Since the checkbox uses the OnPush strategy we need to notify it about the change\n        // that has been recognized by the cdkObserveContent directive.\n        this._changeDetectorRef.markForCheck();\n    }\n\n    // Implemented as part of ControlValueAccessor.\n    writeValue(value: any) {\n        this.checked = !!value;\n    }\n\n    // Implemented as part of ControlValueAccessor.\n    registerOnChange(fn: (value: any) => void) {\n        this._controlValueAccessorChangeFn = fn;\n    }\n\n    // Implemented as part of ControlValueAccessor.\n    registerOnTouched(fn: any) {\n        this._onTouched = fn;\n    }\n\n    // Implemented as part of ControlValueAccessor.\n    setDisabledState(isDisabled: boolean) {\n        this.disabled = isDisabled;\n    }\n\n    _getAriaChecked(): 'true' | 'false' | 'mixed' {\n        return this.checked ? 'true' : (this.indeterminate ? 'mixed' : 'false');\n    }\n\n    private _transitionCheckState(newState: TransitionCheckState) {\n        const oldState = this._currentCheckState;\n        const element: HTMLElement = this._elementRef.nativeElement;\n\n        if (oldState === newState) {\n            return;\n        }\n        if (this._currentAnimationClass.length > 0) {\n            element.classList.remove(this._currentAnimationClass);\n        }\n\n        this._currentCheckState = newState;\n\n        if (this._currentAnimationClass.length > 0) {\n            element.classList.add(this._currentAnimationClass);\n        }\n    }\n\n    private _emitChangeEvent() {\n        const event = new McCheckboxChange();\n        event.source = this;\n        event.checked = this.checked;\n\n        this._controlValueAccessorChangeFn(this.checked);\n        this.change.emit(event);\n    }\n\n    /** Function is called whenever the focus changes for the input element. */\n    private _onInputFocusChange(focusOrigin: FocusOrigin) {\n        if (focusOrigin) {\n            this._onTouched();\n        }\n    }\n\n    /** Toggles the `checked` state of the checkbox. */\n    toggle(): void {\n        this.checked = !this.checked;\n    }\n\n    /**\n     * Event handler for checkbox input element.\n     * Toggles checked state if element is not disabled.\n     * Do not toggle on (change) event since IE doesn't fire change event when\n     *   indeterminate checkbox is clicked.\n     * @param event\n     */\n    _onInputClick(event: Event) {\n        // We have to stop propagation for click events on the visual hidden input element.\n        // By default, when a user clicks on a label element, a generated click event will be\n        // dispatched on the associated input element. Since we are using a label element as our\n        // root container, the click event on the `checkbox` will be executed twice.\n        // The real click event will bubble up, and the generated click event also tries to bubble up.\n        // This will lead to multiple click events.\n        // Preventing bubbling for the second event will solve that issue.\n        event.stopPropagation();\n\n        // If resetIndeterminate is false, and the current state is indeterminate, do nothing on click\n        if (!this.disabled && this._clickAction !== 'noop') {\n            // When user manually click on the checkbox, `indeterminate` is set to false.\n            if (this.indeterminate && this._clickAction !== 'check') {\n\n                Promise.resolve().then(() => {\n                    this._indeterminate = false;\n                    this.indeterminateChange.emit(this._indeterminate);\n                });\n            }\n\n            this.toggle();\n            this._transitionCheckState(\n                this._checked ? TransitionCheckState.Checked : TransitionCheckState.Unchecked);\n\n            // Emit our custom change event if the native input emitted one.\n            // It is important to only emit it, if the native input triggered one, because\n            // we don't want to trigger a change event, when the `checked` variable changes for example.\n            this._emitChangeEvent();\n        } else if (!this.disabled && this._clickAction === 'noop') {\n            // Reset native input when clicked with noop. The native checkbox becomes checked after\n            // click, reset it to be align with `checked` value of `mc-checkbox`.\n            this._inputElement.nativeElement.checked = this.checked;\n            this._inputElement.nativeElement.indeterminate = this.indeterminate;\n        }\n    }\n\n    /** Focuses the checkbox. */\n    focus(): void {\n        this._focusMonitor.focusVia(this._inputElement.nativeElement, 'keyboard');\n    }\n\n    _onInteractionEvent(event: Event) {\n        // We always have to stop propagation on the change event.\n        // Otherwise the change event, from the input element, will bubble up and\n        // emit its event object to the `change` output.\n        event.stopPropagation();\n    }\n}\n","import {\n    Directive,\n    forwardRef,\n    Provider\n} from '@angular/core';\nimport {\n    CheckboxRequiredValidator,\n    NG_VALIDATORS\n} from '@angular/forms';\n\n\nexport const MC_CHECKBOX_REQUIRED_VALIDATOR: Provider = {\n    provide: NG_VALIDATORS,\n    useExisting: forwardRef(() => McCheckboxRequiredValidator),\n    multi: true\n};\n\n/**\n * Validator for Mosaic checkbox's required attribute in template-driven checkbox.\n * Current CheckboxRequiredValidator only work with `input type=checkbox` and does not\n * work with `mc-checkbox`.\n */\n@Directive({\n    selector: `mc-checkbox[required][formControlName],\n             mc-checkbox[required][formControl], mc-checkbox[required][ngModel]`,\n    providers: [MC_CHECKBOX_REQUIRED_VALIDATOR],\n    host: { '[attr.required]': 'required ? \"\" : null' }\n})\nexport class McCheckboxRequiredValidator extends CheckboxRequiredValidator {\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { McCheckbox } from './checkbox';\nimport { McCheckboxRequiredValidator } from './checkbox-required-validator';\n\n\n@NgModule({\n    imports: [CommonModule],\n    exports: [McCheckbox, McCheckboxRequiredValidator],\n    declarations: [McCheckbox, McCheckboxRequiredValidator]\n})\nexport class McCheckboxModule {\n}\n","import { Component } from '@angular/core';\n\n\n@Component({\n    selector: 'mc-cleaner',\n    template: '<i class=\"mc-icon_light\" mc-icon=\"mc-close-M_16\" color=\"second\"></i>'\n})\nexport class McCleaner {}\n","import { NgControl } from '@angular/forms';\nimport { Observable } from 'rxjs';\n\n\n/** An interface which allows a control to work inside of a `MсFormField`. */\nexport abstract class McFormFieldControl<T> {\n    /** The value of the control. */\n    value: T | null;\n\n    /**\n     * Stream that emits whenever the state of the control changes such that the parent `MсFormField`\n     * needs to run change detection.\n     */\n    readonly stateChanges: Observable<void>;\n\n    /** The element ID for this control. */\n    readonly id: string;\n\n    /** The placeholder for this control. */\n    readonly placeholder: string;\n\n    /** Gets the NgControl for this control. */\n    readonly ngControl: NgControl | null;\n\n    /** Whether the control is focused. */\n    readonly focused: boolean;\n\n    /** Whether the control is empty. */\n    readonly empty: boolean;\n\n    /** Whether the control is required. */\n    readonly required: boolean;\n\n    /** Whether the control is disabled. */\n    readonly disabled: boolean;\n\n    /** Whether the control is in an error state. */\n    readonly errorState: boolean;\n\n    /**\n     * An optional name for the control type that can be used to distinguish `mc-form-field` elements\n     * based on their control type. The form field will add a class,\n     * `mc-form-field-type-{{controlType}}` to its root element.\n     */\n    readonly controlType?: string;\n\n    /** Handles a click on the control's container. */\n    abstract onContainerClick(event: MouseEvent): void;\n}\n","import { Observable } from 'rxjs';\n\n\n/** An interface which allows a control to work inside of a `MсFormField`. */\nexport abstract class McFormFieldNumberControl<T> {\n    /** The value of the control. */\n    value: T | null;\n\n    /**\n     * Stream that emits whenever the state of the control changes such that the parent `MсFormField`\n     * needs to run change detection.\n     */\n    readonly stateChanges: Observable<void>;\n\n    /** the number step */\n    step: number;\n\n    /** the number big step */\n    bigStep: number;\n\n    /** Whether the control is focused. */\n    readonly focused: boolean;\n\n    /** Handles step up and down */\n    abstract stepUp(step: number): void;\n\n    abstract stepDown(step: number): void;\n}\n","import { Directive, Input } from '@angular/core';\n\n\nlet nextUniqueId = 0;\n\n@Directive({\n    selector: 'mc-hint',\n    host: {\n        class: 'mc-hint',\n        '[attr.id]': 'id'\n    }\n})\nexport class McHint {\n    @Input() id: string = `mc-hint-${nextUniqueId++}`;\n}\n","import { Directive } from '@angular/core';\n\n\n@Directive({\n    selector: '[mcPrefix]'\n})\nexport class McPrefix {\n}\n","import { Component, EventEmitter, Output } from '@angular/core';\n\n\n@Component({\n    selector: 'mc-stepper',\n    template: `\n        <i class=\"mc mc-icon mc-icon_light mc-second mc-stepper-step-up mc-angle-down-L_16\"\n           (mousedown)=\"onStepUp($event)\">\n        </i>\n        <i class=\"mc mc-icon mc-icon_light mc-second mc-stepper-step-down mc-angle-down-L_16\"\n           (mousedown)=\"onStepDown($event)\">\n        </i>\n    `\n})\nexport class McStepper {\n    @Output()\n    readonly stepUp: EventEmitter<void> = new EventEmitter<void>();\n    @Output()\n    readonly stepDown: EventEmitter<void> = new EventEmitter<void>();\n\n    onStepUp($event: MouseEvent) {\n        this.stepUp.emit();\n        $event.preventDefault();\n    }\n\n    onStepDown($event: MouseEvent) {\n        this.stepDown.emit();\n        $event.preventDefault();\n    }\n}\n","import { Directive } from '@angular/core';\n\n\n@Directive({\n    selector: '[mcSuffix]'\n})\nexport class McSuffix {\n}\n","import {\n    AfterContentChecked,\n    AfterContentInit,\n    AfterViewInit,\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    ContentChild,\n    ContentChildren, Directive,\n    ElementRef,\n    QueryList,\n    ViewEncapsulation\n} from '@angular/core';\nimport { NgControl } from '@angular/forms';\nimport { ESCAPE } from '@ptsecurity/cdk/keycodes';\nimport { CanColor, CanColorCtor, mixinColor } from '@ptsecurity/mosaic/core';\nimport { EMPTY, merge } from 'rxjs';\nimport { startWith } from 'rxjs/operators';\n\n\nimport { McCleaner } from './cleaner';\nimport { McFormFieldControl } from './form-field-control';\nimport { getMcFormFieldMissingControlError } from './form-field-errors';\nimport { McFormFieldNumberControl } from './form-field-number-control';\nimport { McHint } from './hint';\nimport { McPrefix } from './prefix';\nimport { McStepper } from './stepper';\nimport { McSuffix } from './suffix';\n\n\nlet nextUniqueId = 0;\n\nexport class McFormFieldBase {\n    constructor(public _elementRef: ElementRef) {}\n}\n\nexport const _McFormFieldMixinBase: CanColorCtor & typeof McFormFieldBase = mixinColor(McFormFieldBase);\n\n@Component({\n    selector: 'mc-form-field',\n    exportAs: 'mcFormField',\n    templateUrl: 'form-field.html',\n    // McInput is a directive and can't have styles, so we need to include its styles here.\n    // The McInput styles are fairly minimal so it shouldn't be a big deal for people who\n    // aren't using McInput.\n    styleUrls: [\n        'form-field.css',\n        '../input/input.css',\n        '../textarea/textarea.css'\n    ],\n    host: {\n        class: 'mc-form-field',\n        '[class.mc-form-field_invalid]': '_control.errorState',\n        '[class.mc-disabled]': '_control.disabled',\n        '[class.mc-form-field_has-prefix]': 'hasPrefix',\n        '[class.mc-form-field_has-suffix]': 'hasSuffix',\n        '[class.mc-form-field_has-cleaner]': 'canShowCleaner',\n        '[class.mc-form-field_has-stepper]': 'canShowStepper',\n        '[class.mc-focused]': '_control.focused',\n        '[class.ng-untouched]': '_shouldForward(\"untouched\")',\n        '[class.ng-touched]': '_shouldForward(\"touched\")',\n        '[class.ng-pristine]': '_shouldForward(\"pristine\")',\n        '[class.ng-dirty]': '_shouldForward(\"dirty\")',\n        '[class.ng-valid]': '_shouldForward(\"valid\")',\n        '[class.ng-invalid]': '_shouldForward(\"invalid\")',\n        '[class.ng-pending]': '_shouldForward(\"pending\")',\n        '(keydown)': 'onKeyDown($event)',\n        '(mouseenter)': 'onHoverChanged(true)',\n        '(mouseleave)': 'onHoverChanged(false)'\n    },\n    inputs: ['color'],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\n\nexport class McFormField extends _McFormFieldMixinBase implements\n    AfterContentInit, AfterContentChecked, AfterViewInit, CanColor {\n\n    @ContentChild(McFormFieldControl) _control: McFormFieldControl<any>;\n    @ContentChild(McFormFieldNumberControl) _numberControl: McFormFieldNumberControl<any>;\n    @ContentChild(McStepper) _stepper: McStepper;\n\n    @ContentChildren(McHint) _hint: QueryList<McHint>;\n    @ContentChildren(McSuffix) _suffix: QueryList<McSuffix>;\n    @ContentChildren(McPrefix) _prefix: QueryList<McPrefix>;\n    @ContentChildren(McCleaner) _cleaner: QueryList<McCleaner>;\n\n    // Unique id for the internal form field label.\n    _labelId = `mc-form-field-label-${nextUniqueId++}`;\n\n    hovered: boolean = false;\n\n    constructor(public _elementRef: ElementRef, private _changeDetectorRef: ChangeDetectorRef) {\n        super(_elementRef);\n    }\n\n    ngAfterContentInit() {\n        this._validateControlChild();\n\n        if (this._control.controlType) {\n            this._elementRef.nativeElement.classList\n                .add(`mc-form-field-type-${this._control.controlType}`);\n\n            if (this._numberControl && this.hasStepper) {\n                this._stepper.stepUp.subscribe(this.onStepUp.bind(this));\n                this._stepper.stepDown.subscribe(this.onStepDown.bind(this));\n            }\n        }\n\n        // Subscribe to changes in the child control state in order to update the form field UI.\n        this._control.stateChanges.pipe(startWith())\n            .subscribe(() => {\n                this._changeDetectorRef.markForCheck();\n            });\n\n        if (this._numberControl) {\n            this._numberControl.stateChanges.pipe(startWith())\n                .subscribe(() => {\n                    this._changeDetectorRef.markForCheck();\n                });\n        }\n\n        // Run change detection if the value changes.\n        const valueChanges = this._control.ngControl && this._control.ngControl.valueChanges || EMPTY;\n\n        merge(valueChanges)\n            .subscribe(() => this._changeDetectorRef.markForCheck());\n    }\n\n    ngAfterContentChecked() {\n        this._validateControlChild();\n    }\n\n    ngAfterViewInit() {\n        // Avoid animations on load.\n        this._changeDetectorRef.detectChanges();\n    }\n\n    clearValue($event) {\n        $event.stopPropagation();\n\n        if (this._control && this._control.ngControl) {\n            this._control.ngControl.reset();\n        }\n    }\n\n    onContainerClick($event) {\n        if (this._control.onContainerClick) {\n            this._control.onContainerClick($event);\n        }\n    }\n\n    onKeyDown(event: KeyboardEvent): void {\n        // tslint:disable-next-line:deprecation\n        if (event.keyCode === ESCAPE && this._control.focused && this.hasCleaner) {\n            if (this._control && this._control.ngControl) {\n                this._control.ngControl.reset();\n            }\n\n            event.preventDefault();\n        }\n    }\n\n    onHoverChanged(isHovered: boolean) {\n        if (isHovered !== this.hovered) {\n            this.hovered  = isHovered;\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n\n    onStepUp() {\n        if (this._numberControl) {\n            this._numberControl.stepUp(this._numberControl.step);\n        }\n    }\n\n    onStepDown() {\n        if (this._numberControl) {\n            this._numberControl.stepDown(this._numberControl.step);\n        }\n    }\n\n    /** Determines whether a class from the NgControl should be forwarded to the host element. */\n    _shouldForward(prop: keyof NgControl): boolean {\n        const ngControl = this._control ? this._control.ngControl : null;\n\n        return ngControl && ngControl[prop];\n    }\n\n    /** Throws an error if the form field's control is missing. */\n    protected _validateControlChild() {\n        if (!this._control) {\n            throw getMcFormFieldMissingControlError();\n        }\n    }\n\n    get hasHint(): boolean {\n        return this._hint && this._hint.length > 0;\n    }\n\n    get hasSuffix(): boolean {\n        return this._suffix && this._suffix.length > 0;\n    }\n\n    get hasPrefix(): boolean {\n        return this._prefix && this._prefix.length > 0;\n    }\n\n    get hasCleaner(): boolean {\n        return this._cleaner && this._cleaner.length > 0;\n    }\n\n    get hasStepper(): boolean {\n        return !!this._stepper;\n    }\n\n    get canShowCleaner(): boolean {\n        return this.hasCleaner &&\n            this._control &&\n            this._control.ngControl\n                ? this._control.ngControl.value && !this._control.disabled\n                : false;\n    }\n\n\n    get disabled(): boolean {\n        return this._control && this._control.disabled;\n    }\n\n    get canShowStepper(): boolean {\n        return this._numberControl &&\n            !this.disabled &&\n            (\n                this._numberControl.focused ||\n                this.hovered\n            );\n    }\n}\n\n@Directive({\n    selector: 'mc-form-field[mcFormFieldWithoutBorders]',\n    exportAs: 'mcFormFieldWithoutBorders',\n    host: { class: 'mc-form-field_without-borders' }\n})\nexport class McFormFieldWithoutBorders {}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { McIconModule } from '@ptsecurity/mosaic/icon';\n\nimport { McCleaner } from './cleaner';\nimport { McFormField, McFormFieldWithoutBorders } from './form-field';\nimport { McHint } from './hint';\nimport { McPrefix } from './prefix';\nimport { McStepper } from './stepper';\nimport { McSuffix } from './suffix';\n\n\n@NgModule({\n    declarations: [\n        McFormField,\n        McFormFieldWithoutBorders,\n        McHint,\n        McPrefix,\n        McSuffix,\n        McCleaner,\n        McStepper\n    ],\n    imports: [CommonModule, McIconModule],\n    exports: [\n        McFormField,\n        McFormFieldWithoutBorders,\n        McHint,\n        McPrefix,\n        McSuffix,\n        McCleaner,\n        McStepper\n    ]\n})\nexport class McFormFieldModule {\n}\n","import { InjectionToken } from '@angular/core';\n\n\nexport const MC_INPUT_VALUE_ACCESSOR =\n    new InjectionToken<{ value: any }>('MC_INPUT_VALUE_ACCESSOR');\n","function sanitizeNumber(value: number): number | null {\n    return !isFinite(value) || isNaN(value)\n        ? null\n        : value;\n}\n\nfunction getPrecision(value: number): number {\n    const arr = value.toString().split('.');\n\n    return arr.length === 1\n        ? 1\n        // tslint:disable-next-line:no-magic-numbers\n        :  Math.pow(10, arr[1].length);\n}\n\nfunction add(value1: number, value2: number) {\n    const precision = Math.max(getPrecision(value1), getPrecision(value2));\n\n    const res = (value1 * precision + value2 * precision) / precision;\n\n    return sanitizeNumber(res);\n}\n\nexport const stepUp = (value: number | null,\n                       max: number,\n                       min: number,\n                       step: number\n): number | null => {\n    let res;\n\n    if (value === null) {\n        res = add(min, step);\n\n        return res === null ? null : Math.min(res, max);\n    }\n\n    res = add(value, step);\n\n    return res === null ? null : Math.max(Math.min(res, max), min);\n};\n\nexport const stepDown = (value: number | null,\n                         max: number,\n                         min: number,\n                         step: number\n): number | null => {\n    let res;\n\n    if (value === null) {\n        res = add(max, -step);\n\n        return res === null ? null : Math.max(res, min);\n    }\n\n    res = add(value, -step);\n\n    return res === null ? null : Math.min(Math.max(res, min), max);\n};\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","\nexport function isBoolean(val: any): val is boolean { return typeof val === 'boolean'; }\n\nexport function toBoolean(value: any): boolean {\n    return value != null && `${value}` !== 'false';\n}\n","import { NgModule, InjectionToken, Optional, Inject, isDevMode } from '@angular/core';\nimport { BidiModule } from '@ptsecurity/cdk/bidi';\n\n\n// Injection token that configures whether the Mosaic sanity checks are enabled.\nexport const MC_SANITY_CHECKS = new InjectionToken<boolean>('mc-sanity-checks', {\n    providedIn: 'root',\n    factory: MC_SANITY_CHECKS_FACTORY\n});\n\nexport function MC_SANITY_CHECKS_FACTORY(): boolean {\n    return true;\n}\n\n/**\n * Module that captures anything that should be loaded and/or run for *all* Mosaic\n * components. This includes Bidi, etc.\n *\n * This module should be imported to each top-level component module (e.g., McTabsModule).\n */\n@NgModule({\n    imports: [ BidiModule ],\n    exports: [ BidiModule ]\n})\nexport class McCommonModule {\n    // Whether we've done the global sanity checks (e.g. a theme is loaded, there is a doctype).\n    private _hasDoneGlobalChecks = false;\n\n    // Reference to the global `document` object.\n    private _document = typeof document === 'object' && document ? document : null;\n\n    // Reference to the global 'window' object.\n    private _window = typeof window === 'object' && window ? window : null;\n\n    constructor(@Optional() @Inject(MC_SANITY_CHECKS) private _sanityChecksEnabled: boolean) {\n        if (this._areChecksEnabled() && !this._hasDoneGlobalChecks) {\n            this._checkDoctypeIsDefined();\n            this._checkThemeIsPresent();\n            this._hasDoneGlobalChecks = true;\n        }\n    }\n\n    // Whether any sanity checks are enabled\n    private _areChecksEnabled(): boolean {\n        return this._sanityChecksEnabled && isDevMode() && !this._isTestEnv();\n    }\n\n    // Whether the code is running in tests.\n    private _isTestEnv() {\n        // tslint:disable-next-line\n        return this._window && (this._window['__karma__'] || this._window['jasmine']);\n    }\n\n    private _checkDoctypeIsDefined(): void {\n        if (this._document && !this._document.doctype) {\n            console.warn(\n                'Current document does not have a doctype. This may cause ' +\n                'some Mosaic components not to behave as expected.'\n            );\n        }\n    }\n\n    private _checkThemeIsPresent(): void {\n        if (this._document && typeof getComputedStyle === 'function') {\n            const testElement = this._document.createElement('div');\n\n            testElement.classList.add('mc-theme-loaded-marker');\n            this._document.body.appendChild(testElement);\n\n            const computedStyle = getComputedStyle(testElement);\n\n            // In some situations, the computed style of the test element can be null. For example in\n            // Firefox, the computed style is null if an application is running inside of a hidden iframe.\n            // See: https://bugzilla.mozilla.org/show_bug.cgi?id=548397\n            if (computedStyle && computedStyle.display !== 'none') {\n                console.warn(\n                    'Could not find Mosaic core theme. Most Mosaic ' +\n                    'components may not work as expected. For more info refer ' +\n                    'to the theming guide: link there'\n                );\n            }\n\n            this._document.body.removeChild(testElement);\n        }\n    }\n}\n","import { coerceBooleanProperty } from '@ptsecurity/cdk/coercion';\n\nimport { Constructor } from './constructor';\n\n\nexport interface CanDisable {\n    disabled: boolean;\n}\n\n/** @docs-private */\nexport type CanDisableCtor = Constructor<CanDisable>;\n\n// Mixin to augment a directive with a `disabled` property.\nexport function mixinDisabled<T extends Constructor<{}>>(base: T): CanDisableCtor & T {\n    return class extends base {\n        private _disabled: boolean = false;\n\n        get disabled() {\n            return this._disabled;\n        }\n\n        set disabled(value: any) {\n            this._disabled = coerceBooleanProperty(value);\n        }\n\n        constructor(...args: any[]) {\n            // tslint:disable-next-line\n            super(...args);\n        }\n    };\n}\n","import { ElementRef } from '@angular/core';\n\nimport { Constructor } from './constructor';\n\n\nexport interface CanColor {\n    color: ThemePalette;\n}\n\n/** @docs-private */\nexport type CanColorCtor = Constructor<CanColor>;\n\nexport interface HasElementRef {\n    _elementRef: ElementRef;\n}\n\nexport enum ThemePalette {\n    Primary = 'primary',\n    Second = 'second',\n    Error = 'error',\n    Default = 'second',\n    Empty = ''\n}\n\n/** Mixin to augment a directive with a `color` property. */\nexport function mixinColor<T extends Constructor<HasElementRef>>(\n    base: T,\n    defaultColor: ThemePalette = ThemePalette.Default\n): CanColorCtor & T {\n    return class extends base {\n\n        private _color: ThemePalette;\n\n        get color(): ThemePalette {\n            return this._color;\n        }\n\n        set color(value: ThemePalette) {\n            const colorPalette = value || defaultColor;\n\n            if (colorPalette !== this._color) {\n                if (this._color) {\n                    this._elementRef.nativeElement.classList.remove(`mc-${this._color}`);\n                }\n\n                if (colorPalette) {\n                    this._elementRef.nativeElement.classList.add(`mc-${colorPalette}`);\n                }\n\n                this._color = colorPalette;\n            }\n        }\n\n        constructor(...args: any[]) {\n            super(...args);\n\n            this.color = defaultColor;\n        }\n    };\n}\n\n","import { Constructor } from './constructor';\nimport { CanDisable } from './disabled';\n\n\nexport interface HasTabIndex {\n    tabIndex: number;\n}\n\nexport type HasTabIndexCtor = Constructor<HasTabIndex>;\n\n// Mixin to augment a directive with a `tabIndex` property.\nexport function mixinTabIndex<T extends Constructor<CanDisable>>(base: T, defaultTabIndex = 0)\n    : HasTabIndexCtor & T {\n    return class extends base {\n        private _tabIndex: number = defaultTabIndex;\n\n        get tabIndex(): number {\n            return this.disabled ? -1 : this._tabIndex;\n        }\n\n        set tabIndex(value: number) {\n            this._tabIndex = value != null ? value : defaultTabIndex;\n        }\n\n        constructor(...args: any[]) {\n            super(...args);\n        }\n    };\n}\n","import { FormControl, FormGroupDirective, NgControl, NgForm } from '@angular/forms';\nimport { Subject } from 'rxjs';\n\nimport { ErrorStateMatcher } from '../error/error-options';\n\nimport { Constructor } from './constructor';\n\n\n/** @docs-private */\nexport interface CanUpdateErrorState {\n\n    readonly stateChanges: Subject<void>;\n\n    errorState: boolean;\n    errorStateMatcher: ErrorStateMatcher;\n\n    updateErrorState();\n}\n\n/** @docs-private */\nexport type CanUpdateErrorStateCtor = Constructor<CanUpdateErrorState>;\n\n/** @docs-private */\nexport interface HasErrorState {\n    _parentFormGroup: FormGroupDirective;\n    _parentForm: NgForm;\n    _defaultErrorStateMatcher: ErrorStateMatcher;\n    ngControl: NgControl;\n}\n\n/**\n * Mixin to augment a directive with updateErrorState method.\n * For component with `errorState` and need to update `errorState`.\n */\nexport function mixinErrorState<T extends Constructor<HasErrorState>>(base: T): CanUpdateErrorStateCtor & T {\n    return class extends base {\n        /** Whether the component is in an error state. */\n        errorState: boolean = false;\n\n        /**\n         * Stream that emits whenever the state of the input changes such that the wrapping\n         * `MatFormField` needs to run change detection.\n         */\n        readonly stateChanges = new Subject<void>();\n\n        errorStateMatcher: ErrorStateMatcher;\n\n        constructor(...args: any[]) {\n            super(...args);\n        }\n\n        updateErrorState() {\n            const oldState = this.errorState;\n            const parent = this._parentFormGroup || this._parentForm;\n            const matcher = this.errorStateMatcher || this._defaultErrorStateMatcher;\n            const control = this.ngControl ? this.ngControl.control as FormControl : null;\n            const newState = matcher.isErrorState(control, parent);\n\n            if (newState !== oldState) {\n                this.errorState = newState;\n                this.stateChanges.next();\n            }\n        }\n    };\n}\n","import {\n    AfterViewChecked,\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    ElementRef,\n    EventEmitter,\n    Inject,\n    InjectionToken,\n    Input,\n    OnDestroy,\n    Optional,\n    Output,\n    QueryList,\n    ViewEncapsulation\n} from '@angular/core';\nimport { coerceBooleanProperty } from '@ptsecurity/cdk/coercion';\nimport { ENTER, SPACE } from '@ptsecurity/cdk/keycodes';\nimport { Subject } from 'rxjs';\n\nimport { McOptgroup } from './optgroup';\n\n\n/**\n * Option IDs need to be unique across components, so this counter exists outside of\n * the component definition.\n */\nlet _uniqueIdCounter = 0;\n\n/** Event object emitted by McOption when selected or deselected. */\nexport class McOptionSelectionChange {\n    constructor(\n        /** Reference to the option that emitted the event. */\n        public source: McOption,\n        /** Whether the change in the option's value was a result of a user action. */\n        public isUserInput = false) {\n    }\n}\n\n/**\n * Describes a parent component that manages a list of options.\n * Contains properties that the options can inherit.\n * @docs-private\n */\nexport interface IMcOptionParentComponent {\n    disableRipple?: boolean;\n    multiple?: boolean;\n}\n\n/**\n * Injection token used to provide the parent component to options.\n */\nexport const MC_OPTION_PARENT_COMPONENT =\n    new InjectionToken<IMcOptionParentComponent>('MC_OPTION_PARENT_COMPONENT');\n\n/**\n * Single option inside of a `<mat-select>` element.\n */\n@Component({\n    selector: 'mc-option',\n    exportAs: 'mcOption',\n    host: {\n        '[attr.tabindex]': '_getTabIndex()',\n        '[class.mc-selected]': 'selected',\n        '[class.mc-option-multiple]': 'multiple',\n        '[class.mc-active]': 'active',\n        '[id]': 'id',\n        '[class.mc-disabled]': 'disabled',\n        '(click)': '_selectViaInteraction()',\n        '(keydown)': '_handleKeydown($event)',\n        class: 'mc-option'\n    },\n    styleUrls: ['option.css'],\n    templateUrl: 'option.html',\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class McOption implements AfterViewChecked, OnDestroy {\n    /** Whether the wrapping component is in multiple selection mode. */\n    get multiple() {\n        return this._parent && this._parent.multiple;\n    }\n\n    /** The unique ID of the option. */\n    get id(): string {\n        return this._id;\n    }\n\n    /** Whether or not the option is currently selected. */\n    get selected(): boolean {\n        return this._selected;\n    }\n\n    /** The form value of the option. */\n    @Input() value: any;\n\n    /** Whether the option is disabled. */\n    @Input()\n    get disabled() {\n        return (this.group && this.group.disabled) || this._disabled;\n    }\n\n    set disabled(value: any) {\n        this._disabled = coerceBooleanProperty(value);\n    }\n\n    /** Whether ripples for the option are disabled. */\n    get disableRipple() {\n        return this._parent && this._parent.disableRipple;\n    }\n\n    /** Event emitted when the option is selected or deselected. */\n        // tslint:disable-next-line:no-output-on-prefix\n    @Output() readonly onSelectionChange = new EventEmitter<McOptionSelectionChange>();\n\n    /** Emits when the state of the option changes and any parents have to be notified. */\n    readonly _stateChanges = new Subject<void>();\n\n    private _selected = false;\n    private _active = false;\n    private _disabled = false;\n    private readonly _id = `mc-option-${_uniqueIdCounter++}`;\n    private _mostRecentViewValue = '';\n\n    constructor(\n        private readonly _element: ElementRef,\n        private readonly _changeDetectorRef: ChangeDetectorRef,\n        @Optional() @Inject(MC_OPTION_PARENT_COMPONENT) private readonly _parent: IMcOptionParentComponent,\n        @Optional() readonly group: McOptgroup) {\n    }\n\n    /**\n     * Whether or not the option is currently active and ready to be selected.\n     * An active option displays styles as if it is focused, but the\n     * focus is actually retained somewhere else. This comes in handy\n     * for components like autocomplete where focus must remain on the input.\n     */\n    get active(): boolean {\n        return this._active;\n    }\n\n    /**\n     * The displayed value of the option. It is necessary to show the selected option in the\n     * select's trigger.\n     */\n    get viewValue(): string {\n        // TODO(kara): Add input property alternative for node envs.\n        return (this._getHostElement().textContent || '').trim();\n    }\n\n    /** Selects the option. */\n    select(): void {\n        if (!this._selected) {\n            this._selected = true;\n            this._changeDetectorRef.markForCheck();\n            this._emitSelectionChangeEvent();\n        }\n    }\n\n    /** Deselects the option. */\n    deselect(): void {\n        if (this._selected) {\n            this._selected = false;\n            this._changeDetectorRef.markForCheck();\n            this._emitSelectionChangeEvent();\n        }\n    }\n\n    /** Sets focus onto this option. */\n    focus(): void {\n        const element = this._getHostElement();\n\n        if (typeof element.focus === 'function') {\n            element.focus();\n        }\n    }\n\n    /**\n     * This method sets display styles on the option to make it appear\n     * active. This is used by the ActiveDescendantKeyManager so key\n     * events will display the proper options as active on arrow key events.\n     */\n    setActiveStyles(): void {\n        if (!this._active) {\n            this._active = true;\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n\n    /**\n     * This method removes display styles on the option that made it appear\n     * active. This is used by the ActiveDescendantKeyManager so key\n     * events will display the proper options as active on arrow key events.\n     */\n    setInactiveStyles(): void {\n        if (this._active) {\n            this._active = false;\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n\n    /** Gets the label to be used when determining whether the option should be focused. */\n    getLabel(): string {\n        return this.viewValue;\n    }\n\n    /** Ensures the option is selected when activated from the keyboard. */\n    _handleKeydown(event: KeyboardEvent): void {\n        // tslint:disable-next-line\n        if (event.keyCode === ENTER || event.keyCode === SPACE) {\n            this._selectViaInteraction();\n\n            // Prevent the page from scrolling down and form submits.\n            event.preventDefault();\n        }\n    }\n\n    /**\n     * `Selects the option while indicating the selection came from the user. Used to\n     * determine if the select's view -> model callback should be invoked.`\n     */\n    _selectViaInteraction(): void {\n        if (!this.disabled) {\n            this._selected = this.multiple ? !this._selected : true;\n            this._changeDetectorRef.markForCheck();\n            this._emitSelectionChangeEvent(true);\n        }\n    }\n\n    /** Returns the correct tabindex for the option depending on disabled state. */\n    _getTabIndex(): string {\n        return this.disabled ? '-1' : '0';\n    }\n\n    /** Gets the host DOM element. */\n    _getHostElement(): HTMLElement {\n        return this._element.nativeElement;\n    }\n\n    ngAfterViewChecked() {\n        // Since parent components could be using the option's label to display the selected values\n        // (e.g. `mat-select`) and they don't have a way of knowing if the option's label has changed\n        // we have to check for changes in the DOM ourselves and dispatch an event. These checks are\n        // relatively cheap, however we still limit them only to selected options in order to avoid\n        // hitting the DOM too often.\n        if (this._selected) {\n            const viewValue = this.viewValue;\n\n            if (viewValue !== this._mostRecentViewValue) {\n                this._mostRecentViewValue = viewValue;\n                this._stateChanges.next();\n            }\n        }\n    }\n\n    ngOnDestroy() {\n        this._stateChanges.complete();\n    }\n\n    /** Emits the selection change event. */\n    private _emitSelectionChangeEvent(isUserInput = false): void {\n        this.onSelectionChange.emit(new McOptionSelectionChange(this, isUserInput));\n    }\n}\n\n/**\n * Counts the amount of option group labels that precede the specified option.\n * @param optionIndex Index of the option at which to start counting.\n * @param options Flat list of all of the options.\n * @param optionGroups Flat list of all of the option groups.\n * @docs-private\n */\nexport function _countGroupLabelsBeforeOption(\n    optionIndex: number, options: QueryList<McOption>,\n    optionGroups: QueryList<McOptgroup>\n): number {\n\n    if (optionGroups.length) {\n        const optionsArray = options.toArray();\n        const groups = optionGroups.toArray();\n\n        let groupCounter = 0;\n\n        for (let i = 0; i < optionIndex + 1; i++) {\n            if (optionsArray[i].group && optionsArray[i].group === groups[groupCounter]) {\n                groupCounter++;\n            }\n        }\n\n        return groupCounter;\n    }\n\n    return 0;\n}\n\n/**\n * Determines the position to which to scroll a panel in order for an option to be into view.\n * @param optionIndex Index of the option to be scrolled into the view.\n * @param optionHeight Height of the options.\n * @param currentScrollPosition Current scroll position of the panel.\n * @param panelHeight Height of the panel.\n * @docs-private\n */\nexport function _getOptionScrollPosition(\n    optionIndex: number,\n    optionHeight: number,\n    currentScrollPosition: number,\n    panelHeight: number\n): number {\n    const optionOffset = optionIndex * optionHeight;\n\n    if (optionOffset < currentScrollPosition) { return optionOffset; }\n\n    if (optionOffset + optionHeight > currentScrollPosition + panelHeight) {\n        return Math.max(0, optionOffset - panelHeight + optionHeight);\n    }\n\n    return currentScrollPosition;\n}\n\n","import { ConnectionPositionPair } from '@ptsecurity/cdk/overlay';\n\n\nexport const POSITION_MAP: { [key: string]: ConnectionPositionPair } = {\n    top         : {\n        originX : 'center',\n        originY : 'top',\n        overlayX: 'center',\n        overlayY: 'bottom'\n    },\n    topCenter   : {\n        originX : 'center',\n        originY : 'top',\n        overlayX: 'center',\n        overlayY: 'bottom',\n        offsetX : undefined,\n        offsetY : undefined\n    },\n    topLeft     : {\n        originX : 'start',\n        originY : 'top',\n        overlayX: 'start',\n        overlayY: 'bottom',\n        offsetX : undefined,\n        offsetY : undefined\n    },\n    topRight    : {\n        originX : 'end',\n        originY : 'top',\n        overlayX: 'end',\n        overlayY: 'bottom',\n        offsetX : undefined,\n        offsetY : undefined\n    },\n    right       : {\n        originX : 'end',\n        originY : 'center',\n        overlayX: 'start',\n        overlayY: 'center'\n    },\n    rightTop    : {\n        originX : 'end',\n        originY : 'top',\n        overlayX: 'start',\n        overlayY: 'top',\n        offsetX : undefined,\n        offsetY : undefined\n    },\n    rightBottom : {\n        originX : 'end',\n        originY : 'bottom',\n        overlayX: 'start',\n        overlayY: 'bottom',\n        offsetX : undefined,\n        offsetY : undefined\n    },\n    bottom      : {\n        originX : 'center',\n        originY : 'bottom',\n        overlayX: 'center',\n        overlayY: 'top'\n    },\n    bottomCenter: {\n        originX : 'center',\n        originY : 'bottom',\n        overlayX: 'center',\n        overlayY: 'top'\n    },\n    bottomLeft  : {\n        originX : 'start',\n        originY : 'bottom',\n        overlayX: 'start',\n        overlayY: 'top'\n    },\n    bottomRight : {\n        originX : 'end',\n        originY : 'bottom',\n        overlayX: 'end',\n        overlayY: 'top'\n    },\n    left        : {\n        originX : 'start',\n        originY : 'center',\n        overlayX: 'end',\n        overlayY: 'center'\n    },\n    leftTop     : {\n        originX : 'start',\n        originY : 'top',\n        overlayX: 'end',\n        overlayY: 'top'\n    },\n    leftBottom  : {\n        originX : 'start',\n        originY : 'bottom',\n        overlayX: 'end',\n        overlayY: 'bottom'\n    }\n};\n\nexport const DEFAULT_4_POSITIONS = _objectValues([\n    POSITION_MAP.top, POSITION_MAP.right, POSITION_MAP.bottom, POSITION_MAP.left\n]);\n\nfunction arrayMap<T, S>(array: T[], iteratee: (item: T, index: number, arr: T[]) => S): S[] {\n    let index = -1;\n    const length = array == null ? 0 : array.length;\n    const result = Array(length);\n\n    while (++index < length) {\n        result[ index ] = iteratee(array[ index ], index, array);\n    }\n\n    return result;\n}\nfunction baseValues<T>(object: { [key: string]: T } | T[], props: string[]): T[] {\n    return arrayMap(props,  (key) => {\n        return object[ key ];\n    });\n}\nfunction _objectValues<T>(object: { [key: string]: T } | T[]): T[] {\n    return object == null ? [] : baseValues(object, Object.keys(object));\n}\n","export function getMcFormFieldMissingControlError(): Error {\n  return Error('mc-form-field must contain a McFormFieldControl.');\n}\n","export function getMcInputUnsupportedTypeError(inputType: string): Error {\n    return Error(`Input type \"${inputType}\" isn't supported by mcInput.`);\n}\n","/** @docs-private */\nexport function createMissingDateImplError(provider: string) {\n    return Error(\n        `McDatepicker: No provider found for ${provider}. You must import one of the existing ` +\n        `modules at your application root or provide a custom implementation or use exists ones.`);\n}\n","export function throwMcDropdownMissingError() {\n    throw Error(`mcDropdownTriggerFor: must pass in an mc-dropdown instance.\n    Example:\n      <mc-dropdown #dropdown=\"mcDropdown\"></mc-dropdown>\n      <button [mcDropdownTriggerFor]=\"dropdown\"></button>`);\n}\n\n/**\n * Throws an exception for the case when dropdown's x-position value isn't valid.\n * In other words, it doesn't match 'before' or 'after'.\n * @docs-private\n */\nexport function throwMcDropdownInvalidPositionX() {\n    throw Error(`xPosition value must be either 'before' or after'.\n      Example: <mc-dropdown xPosition=\"before\" #dropdown=\"mcDropdown\"></mc-dropdown>`);\n}\n\n/**\n * Throws an exception for the case when dropdown's y-position value isn't valid.\n * In other words, it doesn't match 'above' or 'below'.\n * @docs-private\n */\nexport function throwMcDropdownInvalidPositionY() {\n    throw Error(`yPosition value must be either 'above' or below'.\n      Example: <mc-dropdown yPosition=\"above\" #dropdown=\"mcDropdown\"></mc-dropdown>`);\n}\n","/**\n * Returns an exception to be thrown when attempting to change a select's `multiple` option\n * after initialization.\n * @docs-private\n */\nexport function getMcSelectDynamicMultipleError(): Error {\n    return Error('Cannot change `multiple` mode of select after initialization.');\n}\n\n/**\n * Returns an exception to be thrown when attempting to assign a non-array value to a select\n * in `multiple` mode. Note that `undefined` and `null` are still valid values to allow for\n * resetting the value.\n * @docs-private\n */\nexport function getMcSelectNonArrayValueError(): Error {\n    return Error('Value must be an array in multiple-selection mode.');\n}\n\n/**\n * Returns an exception to be thrown when assigning a non-function value to the comparator\n * used to determine if a value corresponds to an option. Note that whether the function\n * actually takes two values and returns a boolean is not checked.\n */\nexport function getMcSelectNonFunctionValueError(): Error {\n    return Error('`compareWith` must be a function.');\n}\n","import { NgModule, Directive, ElementRef, QueryList } from '@angular/core';\n\n\n/**\n * Shared directive to count lines inside a text area, such as a list item.\n * Line elements can be extracted with a @ContentChildren(McLine) query, then\n * counted by checking the query list's length.\n */\n@Directive({\n    selector: '[mc-line], [mcLine]',\n    host: { class: 'mc-line' }\n})\nexport class McLine {}\n\n/**\n * Helper that takes a query list of lines and sets the correct class on the host.\n * @docs-private\n */\nexport class McLineSetter {\n    constructor(private _lines: QueryList<McLine>, private _element: ElementRef) {\n        this._setLineClass(this._lines.length);\n\n        this._lines.changes.subscribe(() => {\n            this._setLineClass(this._lines.length);\n        });\n    }\n\n    private _setLineClass(count: number): void {\n        this._resetClasses();\n        if (count === 2 || count === 3) {\n            this._setClass(`mc-${count}-line`, true);\n        } else if (count > 3) {\n            this._setClass(`mc-multi-line`, true);\n        }\n    }\n\n    private _resetClasses(): void {\n        this._setClass('mc-2-line', false);\n        this._setClass('mc-3-line', false);\n        this._setClass('mc-multi-line', false);\n    }\n\n    private _setClass(className: string, isAdd: boolean): void {\n        if (isAdd) {\n            this._element.nativeElement.classList.add(className);\n        } else {\n            this._element.nativeElement.classList.remove(className);\n        }\n    }\n}\n\n@NgModule({\n    imports: [],\n    exports: [McLine],\n    declarations: [McLine]\n})\nexport class McLineModule {}\n","import { Injectable } from '@angular/core';\nimport { FormGroupDirective, NgForm, FormControl } from '@angular/forms';\n\n\n/** Error state matcher that matches when a control is invalid and dirty. */\n@Injectable()\nexport class ShowOnDirtyErrorStateMatcher implements ErrorStateMatcher {\n    isErrorState(control: FormControl | null, form: FormGroupDirective | NgForm | null): boolean {\n        return !!(control && control.invalid && (control.dirty || (form && form.submitted)));\n    }\n}\n\n/** Provider that defines how form controls behave with regards to displaying error messages. */\n@Injectable({ providedIn: 'root' })\nexport class ErrorStateMatcher {\n    isErrorState(control: FormControl | null, form: FormGroupDirective | NgForm | null): boolean {\n        return !!(control && control.invalid && (control.touched || (form && form.submitted)));\n    }\n}\n","import { Component, ViewEncapsulation, Input, ChangeDetectionStrategy } from '@angular/core';\n\n\nexport type McPseudoCheckboxState = 'unchecked' | 'checked' | 'indeterminate';\n\n/**\n * Component that shows a simplified checkbox without including any kind of \"real\" checkbox.\n * Meant to be used when the checkbox is purely decorative and a large number of them will be\n * included, such as for the options in a multi-select. Uses no SVGs or complex animations.\n * Note that theming is meant to be handled by the parent element, e.g.\n * `mc-primary .mc-pseudo-checkbox`.\n *\n * Note that this component will be completely invisible to screen-reader users. This is *not*\n * interchangeable with `<mc-checkbox>` and should *not* be used if the user would directly\n * interact with the checkbox. The pseudo-checkbox should only be used as an implementation detail\n * of more complex components that appropriately handle selected / checked state.\n * @docs-private\n */\n@Component({\n    encapsulation: ViewEncapsulation.None,\n    preserveWhitespaces: false,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    selector: 'mc-pseudo-checkbox',\n    styleUrls: ['pseudo-checkbox.css'],\n    templateUrl: 'pseudo-checkbox.partial.html',\n    host: {\n        class: 'mc-pseudo-checkbox',\n        '[class.mc-indeterminate]': 'state === \"indeterminate\"',\n        '[class.mc-checked]': 'state === \"checked\"',\n        '[class.mc-disabled]': 'disabled'\n    }\n})\nexport class McPseudoCheckbox {\n    @Input() state: McPseudoCheckboxState = 'unchecked';\n\n    @Input() disabled: boolean = false;\n}\n","import { NgModule } from '@angular/core';\n\nimport { McPseudoCheckbox } from './pseudo-checkbox/pseudo-checkbox';\n\n\n@NgModule({\n    exports: [McPseudoCheckbox],\n    declarations: [McPseudoCheckbox]\n})\nexport class McPseudoCheckboxModule {}\n\n\nexport * from './pseudo-checkbox/pseudo-checkbox';\n","import { DOCUMENT } from '@angular/common';\nimport { Inject, Injectable } from '@angular/core';\n\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class McMeasureScrollbarService {\n\n    get scrollBarWidth(): number {\n        if (this._scrollbarWidth) {\n            return this._scrollbarWidth;\n        }\n        this.initScrollBarWidth();\n\n        return this._scrollbarWidth;\n    }\n\n    private _scrollbarWidth: number;\n    private scrollbarMeasure = {\n        position: 'absolute',\n        top: '-9999px',\n        width: '50px',\n        height: '50px',\n        overflow: 'scroll'\n    };\n\n    constructor(\n        @Inject(DOCUMENT) private document: any\n    ) {\n        this.initScrollBarWidth();\n    }\n\n    initScrollBarWidth() {\n        const scrollDiv = this.document.createElement('div');\n\n        // tslint:disable-next-line\n        for (const scrollProp in this.scrollbarMeasure) {\n            if (this.scrollbarMeasure.hasOwnProperty(scrollProp)) {\n                scrollDiv.style[scrollProp] = this.scrollbarMeasure[scrollProp];\n            }\n        }\n\n        this.document.body.appendChild(scrollDiv);\n\n        const width = scrollDiv.offsetWidth - scrollDiv.clientWidth;\n\n        this.document.body.removeChild(scrollDiv);\n        this._scrollbarWidth = width;\n    }\n}\n","import { Component, ViewEncapsulation, Input, ChangeDetectionStrategy } from '@angular/core';\n\nimport { mixinDisabled, CanDisable, CanDisableCtor } from '../common-behaviors/index';\n\n\n// Boilerplate for applying mixins to McOptgroup.\n/** @docs-private */\nexport class McOptgroupBase {}\n\nexport const _McOptgroupMixinBase: CanDisableCtor & typeof McOptgroupBase = mixinDisabled(McOptgroupBase);\n\n// Counter for unique group ids.\nlet _uniqueOptgroupIdCounter = 0;\n\n/**\n * Component that is used to group instances of `mc-option`.\n */\n@Component({\n    selector: 'mc-optgroup',\n    exportAs: 'mcOptgroup',\n    templateUrl: 'optgroup.html',\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    inputs: ['disabled'],\n    styleUrls: ['optgroup.css'],\n    host: {\n        class: 'mc-optgroup',\n        role: 'group',\n        '[class.mc-optgroup-disabled]': 'disabled',\n        '[attr.aria-disabled]': 'disabled.toString()',\n        '[attr.aria-labelledby]': '_labelId'\n    }\n})\nexport class McOptgroup extends _McOptgroupMixinBase implements CanDisable {\n    /** Label for the option group. */\n    @Input() label: string;\n\n    /** Unique id for the underlying label. */\n    _labelId: string = `mc-optgroup-label-${_uniqueOptgroupIdCounter++}`;\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { McPseudoCheckboxModule } from '../selection/index';\n\nimport { McOptgroup } from './optgroup';\nimport { McOption } from './option';\n\n\n@NgModule({\n    imports: [CommonModule, McPseudoCheckboxModule],\n    exports: [McOption, McOptgroup],\n    declarations: [McOption, McOptgroup]\n})\nexport class McOptionModule {}\n\n\nexport * from './option';\nexport * from './optgroup';\n","import { InjectionToken } from '@angular/core';\n\n\n/** InjectionToken that can be used to specify the global label options. */\nexport const MC_LABEL_GLOBAL_OPTIONS =\n    new InjectionToken<LabelOptions>('mc-label-global-options');\n\n/** Type for the available floatLabel values. */\nexport type FloatLabelType = 'always' | 'never' | 'auto';\n\n/** Configurable options for floating labels. */\nexport interface LabelOptions {\n    /**\n     * Whether the label should float `always`, `never`, or `auto` (only when necessary).\n     * Default behavior is assumed to be `auto`.\n     */\n    float?: FloatLabelType;\n}\n","import {\n    animate,\n    state,\n    style,\n    transition,\n    trigger,\n    AnimationTriggerMetadata\n} from '@angular/animations';\n\n\nexport const fadeAnimation: AnimationTriggerMetadata =  trigger('fadeAnimation', [\n    state('void', style({ opacity: 0 })),\n    state('true', style({ opacity: 1 })),\n    state('false', style({ opacity: 0 })),\n    transition('* => true', animate('150ms cubic-bezier(0.0, 0.0, 0.2, 1)')),\n    transition('* => void', animate('150ms cubic-bezier(0.4, 0.0, 1, 1)'))\n]);\n","export enum AnimationCurves {\n    StandardCurve = 'cubic-bezier(0.4,0.0,0.2,1)',\n    DecelerationCurve = 'cubic-bezier(0.0,0.0,0.2,1)',\n    AccelerationCurve = 'cubic-bezier(0.4,0.0,1,1)',\n    SharpCurve = 'cubic-bezier(0.4,0.0,0.6,1)'\n}\n","import {\n    Attribute,\n    ChangeDetectionStrategy,\n    Component,\n    Directive,\n    ElementRef,\n    ViewEncapsulation\n} from '@angular/core';\n\nimport { mixinColor, CanColor, CanColorCtor, ThemePalette } from '@ptsecurity/mosaic/core';\n\n\n@Directive({\n    selector: '[mc-icon]',\n    host: { class: 'mc mc-icon' }\n})\nexport class McIconCSSStyler {}\n\n\nexport class McIconBase {\n    constructor(public _elementRef: ElementRef) {}\n}\n\nexport const _McIconMixinBase: CanColorCtor & typeof McIconBase = mixinColor(McIconBase, ThemePalette.Empty);\n\n\n@Component({\n    selector: `[mc-icon]`,\n    template: '<ng-content></ng-content>',\n    styleUrls: ['./icon.css'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n    inputs: ['color']\n})\nexport class McIcon extends _McIconMixinBase implements CanColor {\n    constructor(elementRef: ElementRef, @Attribute('mc-icon') iconName: string) {\n        super(elementRef);\n\n        elementRef.nativeElement.classList.add(iconName);\n    }\n\n    _getHostElement() {\n        return this._elementRef.nativeElement;\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { A11yModule } from '@ptsecurity/cdk/a11y';\nimport { PlatformModule } from '@ptsecurity/cdk/platform';\n\nimport {\n    McIcon,\n    McIconCSSStyler\n} from './icon.component';\n\n\n@NgModule({\n    imports: [\n        CommonModule,\n        A11yModule,\n        PlatformModule\n    ],\n    exports: [\n        McIcon,\n        McIconCSSStyler\n    ],\n    declarations: [\n        McIcon,\n        McIconCSSStyler\n    ]\n})\nexport class McIconModule {}\n"],"names":["exports","McToggleComponent","declarations","McToggleModule","McTooltipComponent","cdr","this","prefix","positions","DEFAULT_4_POSITIONS","slice","classMap","mcVisibleChange","EventEmitter","mcMouseEnterDelay","mcMouseLeaveDelay","_mcTrigger","_mcPlacement","_mcVisible","BehaviorSubject","onHideSubject","Subject","closeOnInteraction","availablePositions","POSITION_MAP","$visible","asObservable","Object","defineProperty","prototype","get","_mcTitle","set","value","isTitleString","TemplateRef","unshift","mcPlacement","visible","coerceBooleanProperty","next","emit","show","_this","hideTid","clearTimeout","isContentEmpty","mcTrigger","showTid","setTimeout","mcVisible","markForCheck","hide","setClassMap","mcTitle","afterHidden","handleBodyInteraction","tslib_1.__decorate","Output","tslib_1.__metadata","Input","Component","selector","inputs","outputs","animations","fadeAnimation","template","preserveWhitespaces","styles","encapsulation","ViewEncapsulation","None","changeDetection","ChangeDetectionStrategy","OnPush","host","(body:click)","ChangeDetectorRef","MC_TOOLTIP_SCROLL_STRATEGY","InjectionToken","MC_TOOLTIP_SCROLL_STRATEGY_FACTORY_PROVIDER","provide","deps","Overlay","useFactory","mcTooltipScrollStrategyFactory","McTooltip","overlay","elementRef","ngZone","scrollDispatcher","hostView","scrollStrategy","direction","isTooltipOpen","isDynamicTooltip","parentDisabled","$unsubscribe","_disabled","manualListeners","Map","destroyed","title","updateCompValue","_mcMouseEnterDelay","_mcMouseLeaveDelay","_mcTooltipClass","tooltip","externalValue","createOverlay","overlayRef","strategy","position","flexibleConnectedTo","withTransformOriginOn","withFlexibleDimensions","withViewportMargin","withPositions","scrollableAncestors","getAncestorScrollContainers","withScrollableContainers","positionChanges","pipe","takeUntil","subscribe","change","onPositionChange","scrollableViewProperties","isOverlayClipped","run","create","positionStrategy","panelClass","updatePosition","detachments","detach","hasAttached","$event","updatedPlacement","keys","some","key","connectionPair","originX","originY","overlayX","overlayY","handlePositioningUpdate","pos","overlayElement","clientHeight","element","nativeElement","currentContainer","style","top","parseInt","split","ngOnInit","initElementRefListeners","ngOnDestroy","dispose","forEach","listener","event","removeEventListener","clear","complete","handleKeydown","e","keyCode","ESCAPE","handleTouchend","addEventListener","disabled","portal","ComponentPortal","attach","instance","property","distinctUntilChanged","data","getConfig","origin","getOrigin","getOverlayPosition","tslib_1.__assign","main","fallback","originPosition","isLtr","getMcTooltipInvalidPositionError","_a","invertPosition","x","y","overlayPosition","newX","newY","HostBinding","Directive","exportAs","(keydown)","(touchend)","tslib_1.__param","Inject","Optional","ElementRef","NgZone","ScrollDispatcher","ViewContainerRef","Directionality","McToolTipModule","NgModule","imports","CommonModule","OverlayModule","providers","entryComponents","VERSION","Version","SELECT_PANEL_PADDING_X","McSelect","McSelect_1","[attr.id]","[attr.tabindex]","class","[class.mc-disabled]","[class.mc-select-invalid]","[class.mc-select-required]","(focus)","(blur)","(window:resize)","mcSelectAnimations","transformPanel","fadeInContent","McFormFieldControl","useExisting","MC_OPTION_PARENT_COMPONENT","Self","Attribute","MC_SELECT_SCROLL_STRATEGY","ViewportRuler","Renderer2","ErrorStateMatcher","NgForm","FormGroupDirective","McFormField","NgControl","String","_McSelectMixinBase","McSelectModule","McOptionModule","McIconModule","McTagModule","McFormFieldModule","McSelectTrigger","MC_SELECT_SCROLL_STRATEGY_PROVIDER","MC_SIDEPANEL_DATA","McSidepanelPosition","McSidepanelAnimationState","McSidepanelConfig","Right","hasBackdrop","requiredBackdrop","disableClose","overlayPanelClass","mcSidepanelTransformAnimation","right","in","out","left","bottom","mcSidepanelAnimations","sidepanelState","trigger","state","transform","params","transformIn","transformOut","transition","animate","AnimationCurves","AccelerationCurve","DecelerationCurve","MC_SIDEPANEL_WITH_INDENT","MC_SIDEPANEL_WITH_SHADOW","McSidepanelContainerComponent","_super","changeDetectorRef","sidepanelConfig","withIndent","withShadow","call","animationState","Void","animationStateChanged","tslib_1.__extends","attachComponentPortal","validatePortalAttached","setAnimation","setPanelClass","portalOutlet","attachTemplatePortal","enter","Visible","detectChanges","exit","Hidden","onAnimation","animationTransform","classList","add","Error","ViewChild","CdkPortalOutlet","tabindex","role","aria-modal","[@state]","(@state.start)","(@state.done)","Boolean","BasePortalOutlet","uniqueId","McSidepanelRef","containerInstance","config","afterClosed$","afterOpened$","id","filter","phaseName","toState","take","result","merge","backdropClick","keydownEvents","close","closed","detachBackdrop","afterClosed","afterOpened","MC_SIDEPANEL_DEFAULT_OPTIONS","McSidepanelService","injector","defaultOptions","parentSidepanelService","openedSidepanelsAtThisLevel","openedSidepanels","closeSidepanels","open","componentOrTemplateRef","fullConfig","getSidepanelById","container","attachContainer","ref","TemplatePortal","$implicit","sidepanelRef","createInjector","undefined","contentRef","push","removeOpenSidepanel","closeAll","find","sidepanel","openedSidepanelsWithSamePosition","getOpenedSidepanelsWithSamePosition","PortalInjector","WeakMap","length","containerPortal","sidepanelContainer","injectionTokens","overlayConfig","OverlayConfig","backdropClass","getBackdropClass","maxWidth","scrollStrategies","block","global","sidepanels","reverse","hasOpenedSidepanelWithBackdrop","index","indexOf","splice","Injectable","SkipSelf","Injector","McSidepanelClose","sidepanelService","getClosestSidepanel","ngOnChanges","changes","proxiedChange","mcSidepanelClose","sidepanelResult","currentValue","(click)","type","McSidepanelHeader","McSidepanelBody","McSidepanelFooter","McSidepanelActions","McSidepanelModule","PortalModule","McCommonModule","McSplitterComponent","renderer","areas","_gutterSize","isDragging","areaPositionDivider","listeners","_direction","gutterSize","size","coerceNumberProperty","addArea","area","order","getSize","setOrder","initialSize","setStyle","isVertical","onMouseDown","leftAreaIndex","rightAreaIndex","leftArea","rightArea","startPoint","screenX","screenY","item","disableFlex","setSize","runOutsideAngular","listen","onMouseUp","onMouseMove","removeArea","indexToRemove","endPoint","offset","newLeftAreaSize","newRightAreaSize","minLeftAreaSize","getMinSize","minRightAreaSize","rightAreaOffset","unsubscribe","pop","McGutterDirective","_order","_size","getCursor","getState","coerceCssPixelValue","setAttr","attribute","setAttribute","McSplitterAreaDirective","splitter","removeStyle","sz","getSizeProperty","getOffsetSizeProperty","getComputedStyle","parseFloat","getMinSizeProperty","McSplitterModule","nextUniqueId","McToggleBase","_elementRef","_McToggleMixinBase","mixinTabIndex","mixinColor","mixinDisabled","ThemePalette","Primary","McToggleChange","_focusMonitor","_changeDetectorRef","tabIndex","labelPosition","ariaLabel","ariaLabelledby","_uniqueId","name","_checked","_onTouchedCallback","_onChangeCallback","_","monitor","McToggleComponent_1","stopMonitoring","focus","focusVia","_inputElement","_getAriaChecked","checked","_onInteractionEvent","stopPropagation","_onLabelTextChange","_onInputClick","_updateModelValue","_emitChangeEvent","writeValue","registerOnChange","fn","registerOnTouched","setDisabledState","isDisabled","source","NG_VALUE_ACCESSOR","forwardRef","multi","[id]","[class.mc-toggle_off]","FocusMonitor","A11yModule","Math","max","minHeight","textarea","scrollHeight","diff","McTextarea","McTextarea_1","[class.mc-textarea-resizable]","[attr.placeholder]","[attr.aria-invalid]","[disabled]","[required]","MC_TEXTAREA_VALUE_ACCESSOR","McTextareaMixinBase","McTextareaModule","FormsModule","TimeParts","TimeFormats","TIMEFORMAT_PLACEHOLDERS","HHmmss","HHmm","DEFAULT_TIME_FORMAT","HOURS_MINUTES_SECONDS_REGEXP","RegExp","HOURS_MINUTES_REGEXP","HOURS_ONLY_REGEXP","uniqueComponentIdSuffix","formValidators","formValidatorOnChangeRegistrators","validatorOnChange","c","validatorOnChangeHandler","McTimepickerBase","_defaultErrorStateMatcher","_parentForm","_parentFormGroup","ngControl","McTimepickerMixinBase","mixinErrorState","ɵ1","validate","__validatorOnChangeHandler","validator","registerOnValidatorChange","McTimepicker","inputValueAccessor","focused","stateChanges","controlType","uid","_minTime","_maxTime","previousNativeValue","onChange","noop","placeholder","valueAccessor","control","Validators","compose","parseValidator","minTimeValidator","maxTimeValidator","McTimepicker_1","_id","_required","applyInputChanges","_timeFormat","formatValue","map","timeFormatKey","minValue","minDateTime","getDateFromTimeString","maxValue","maxDateTime","ngDoCheck","updateErrorState","dirtyCheckNativeValue","focusChanged","isFocused","onTouched","onBlur","onPaste","preventDefault","clipboardUserInput","clipboardData","getData","onInput","initialCursorStart","selectionStart","initialCursorEnd","selectionEnd","isAutocompleteTriggered","getParsedTimeParts","hoursOnly","hoursAndMinutes","hoursAndMinutesAndSeconds","doTimestringReformat","errors","createSelectionOfTimeComponentInInput","isBadInput","onContainerClick","setProperty","getTimeStringFromDate","timeFormat","onKeyDown","getKeyCode","upDownTimeByArrowKeys","switchSelectionBetweenTimeparts","newValue","validity","badInput","applyParams","changedTime","timeToApply","currentDateTimeInput","updateValueAndValidity","cursorPos","modifiedTimePart","getTimeEditMetrics","incrementTime","decrementTime","getCursorPositionOfPrevTimePartStart","getCursorPositionOfNextTimePartStart","code","newEditParams","cursorStartPosition","cursorEndPosition","dateVal","whatToIncrement","seconds","getTimeDigitsFromDate","hours","minutes","getDateFromTimeDigits","whatToDecrement","timeString","timeDevider","nextDividerPos","cursorPosition","minutesIndex","hoursIndex","secondsIndex","tempVal","getNumberWithLeadingZero","getHours","getMinutes","getSeconds","match","trim","Number","resultDate","Date","isNaN","getTime","digit","mcTimepickerParse","text","isTimeLowerThenMin","mcTimepickerLowerThenMintime","isTimeGreaterThenMax","mcTimepickerHigherThenMaxtime","timeToCompare","[attr.time-format]","[attr.min-time]","[attr.max-time]","[attr.value]","(input)","(paste)","NG_VALIDATORS","useValue","MC_INPUT_VALUE_ACCESSOR","McTimepickerModule","PlatformModule","minWidth","opacity","group","query","animateChild","MC_SELECT_SCROLL_STRATEGY_PROVIDER_FACTORY","McSelectChange","McSelectBase","_viewportRuler","_ngZone","_renderer","_dir","_parentFormField","_scrollStrategyFactory","_triggerFontSize","_optionIds","_transformOrigin","_panelDoneAnimating","_panelDoneAnimatingStream","_scrollStrategy","_offsetY","_positions","optionSelectionChanges","defer","options","apply","option","onSelectionChange","onStable","switchMap","openedChange","_openedStream","o","_closedStream","selectionChange","valueChange","hiddenItems","oneMoreText","_panelOpen","_scrollTop","_multiple","_uid","_destroy","_focused","_onChange","_onTouched","_compareWith","o1","o2","_placeholder","_selectionModel","getMcSelectDynamicMultipleError","getMcSelectNonFunctionValueError","_initializeSelection","_value","SelectionModel","multiple","panelOpen","overlayDir","offsetX","ngAfterContentInit","_initKeyManager","added","select","removed","deselect","startWith","_resetOptions","ngAfterViewInit","tags","_calculateHiddenItems","toggle","_triggerRect","getBoundingClientRect","_keyManager","withHorizontalOrientation","_calculateOverlayPosition","_highlightCorrectOption","fontSize","_isRtl","_setSelectionByValue","selected","empty","selectedOptions","viewValue","join","isEmpty","_handleKeydown","_handleOpenKeydown","_handleClosedKeydown","_onFadeInDone","_onFocus","_onBlur","_onAttached","positionChange","_calculateOverlayOffsetX","panel","scrollTop","_getPanelTheme","color","_calculateOverlayScroll","selectedIndex","scrollBuffer","maxScroll","itemHeight","_getItemHeight","optionOffsetFromScrollTop","halfOptionHeight","optimalScrollPosition","min","onRemoveMatcherItem","visibleItems","totalItemsWidth","_getTotalItemsWidthInMatcher","totalVisibleItemsWidth","tag","offsetTop","offsetHeight","width","itemsCounter","querySelector","matcherList","itemsCounterShowed","matcherListWidth","matcherWidth","triggerClone","cloneNode","remove","appendChild","querySelectorAll","isArrowKey","DOWN_ARROW","UP_ARROW","LEFT_ARROW","RIGHT_ARROW","ENTER","SPACE","altKey","onKeydown","manager","HOME","END","setFirstItemActive","setLastItemActive","activeItem","A","ctrlKey","hasDeselectedOptions_1","previouslyFocusedIndex","activeItemIndex","shiftKey","_selectViaInteraction","Promise","resolve","then","Array","isArray","getMcSelectNonArrayValueError","_selectValue","_sortValues","correspondingOption","setActiveItem","error","isDevMode","console","warn","ActiveDescendantKeyManager","withTypeAhead","withVerticalOrientation","tabOut","_scrollActiveOptionIntoView","changedOrDestroyed","_onSelect","isUserInput","_stateChanges","_setOptionIds","wasSelected","isSelected","_propagateChanges","options_1","toArray","sort","a","b","sortComparator","fallbackValue","valueToEmit","activeOptionIndex","labelCount","_countGroupLabelsBeforeOption","optionGroups","_getOptionScrollPosition","_getOptionIndex","reduce","current","items","_getItemCount","panelHeight","scrollContainerHeight","selectedOptionOffset","_calculateOverlayOffsetY","_checkOverlayWithinViewport","overlayRect","viewportSize","getViewportSize","isRtl","first","leftOverflow","rightOverflow","round","topSpaceAvailable","bottomSpaceAvailable","height","panelHeightTop","abs","totalPanelHeight","panelHeightBottom","_adjustPanelUp","_adjustPanelDown","_getOriginBasedOnOption","distanceBelowViewport","distanceAboveViewport","optionHeightAdjustment","ViewChildren","McTag","QueryList","CdkConnectedOverlay","ContentChildren","McOption","descendants","McOptgroup","ContentChild","Observable","McTabBody","PortalHostDirective","mcTabsAnimations","translateTab","McTabBodyPortal","componentFactoryResolver","viewContainerRef","centeringSub","Subscription","EMPTY","leavingSub","beforeCentering","isCenterPosition","bodyPosition","isCentering","content","afterLeavingCenter","ComponentFactoryResolver","McTabLabelWrapperBase","mcTabLabelWrapperMixinBase","McTabLabelWrapper","getOffsetLeft","offsetLeft","getOffsetWidth","offsetWidth","[attr.aria-disabled]","McTabHeaderBase","McTabHeader","viewportRuler","dir","showPaginationControls","disableScrollAfter","disableScrollBefore","selectFocusedIndex","indexFocused","_scrollDistance","selectedIndexChanged","_selectedIndex","coercedValue","keyManager","updateActiveItem","isValidIndex","focusIndex","v","getMaxScrollDistance","scrollDistanceChanged","checkScrollingControls","ngAfterContentChecked","tabLabelCount","labelWrappers","updatePagination","scrollToLabel","updateTabScrollPosition","dirChange","observableOf","resize","realign","FocusKeyManager","getLayoutDirection","withWrap","requestAnimationFrame","newFocusIndex","setTabFocus","onContentChanges","textContent","currentTextContent","zoneCallback","checkPaginationEnabled","tab","containerEl","tabListContainer","scrollLeft","scrollWidth","scrollDistance","translateX","tabList","scrollHeader","scrollDir","viewLength","labelIndex","selectedLabel","labelBeforePos","labelAfterPos","beforeVisiblePos","afterVisiblePos","isEnabled","[class.mc-tab-header__pagination-controls_enabled]","[class.mc-tab-header_rtl]","McLightTabsCssStyler","McAlignTabsCenterCssStyler","McAlignTabsEndCssStyler","McStretchTabsCssStyler","nextId","McTabChangeEvent","MC_TABS_CONFIG","McTabGroupBase","mcTabGroupMixinBase","McTabGroup","lightTabs","defaultConfig","headerPosition","selectedIndexChange","focusChange","animationDone","selectedTabChange","indexToSelect","tabBodyWrapperHeight","tabsSubscription","tabLabelSubscription","_dynamicHeight","lightTab","groupId","animationDuration","clampTabIndex","isFirstRun_1","createChangeEvent","tabs","isActive","subscribeToTabLabels","i","getTabLabelId","getTabContentId","setTabBodyWrapperHeight","tabHeight","wrapper","tabBodyWrapper","removeTabBodyWrapperHeight","handleClick","tabHeader","getTabIndex","McTab","[class.mc-tab-group_dynamic-height]","[class.mc-tab-group_inverted-header]","McTabNavBase","mcTabNavMixinBase","McTabNav","McTabLinkBase","mcTabLinkMixinBase","McTabLink","focusMonitor","[attr.aria-current]","[attr.tabIndex]","[class.mc-active]","McTabsModule","McTabLabel","McTabContent","McTagBase","_McTagMixinBase","_addClassModificatorForIcons","icons","contentChildren","iconElement","previousElementSibling","nextElementSibling","nextSibling","previousSibling","firstIconElement","secondIconElement","McIcon","McTextareaBase","canGrow","lineHeight","freeRowsHeight","growObserver","fromEvent","growSubscription","grow","bind","paddingTop","paddingBottom","outerHeight","window","getGrowHeight","toString","McNavbar","McNavbarModule","McNavbarContainer","McNavbarTitle","McNavbarItem","McNavbarBrand","McNavbarLogo","idIterator","McProgressBarBase","_McProgressBarMixinBase","McProgressBar","mode","McProgressBarModule","McProgressSpinnerBase","_McProgressSpinnerMixinBase","McProgressSpinner","percentage","McProgressSpinnerModule","McRadioChange","McRadioGroupBase","_McRadioGroupMixinBase","MC_RADIO_GROUP_CONTROL_VALUE_ACCESSOR","McRadioGroup","_changeDetector","_name","_selected","_isInitialized","_labelPosition","controlValueAccessorChangeFn","updateRadioButtonNames","markRadiosForCheck","updateSelectedRadioFromValue","checkSelectedRadioButton","toBoolean","touch","emitChangeEvent","_radios","radio","isAlreadySelected","McRadioButton","McRadioButtonBase","_McRadioButtonMixinBase","radioGroup","_radioDispatcher","removeUniqueSelectionListener","newCheckedState","notify","newDisabledState","required","onInputClick","onInputChange","groupValueChanged","[class.mc-checked]","UniqueSelectionDispatcher","McRadioModule","McTreeNodeDef","McTreeNodeDef_1","CdkTreeNodeDef","McTreeNodePadding","arguments","_baseLeftPadding","_iconWidth","_indent","McTreeNodePadding_1","_withIcon","_paddingIndent","nodeLevel","_treeNode","_tree","treeControl","getLevel","level","_level","leftPadding","isExpandable","_setPadding","CdkTreeNodePadding","McTreeNodeOption","treeSelection","_hasFocus","McTreeNodeOption_1","setSelected","setFocusedOption","_getHeight","getClientRects","_handleFocus","_handleBlur","_handleClick","[class.mc-selected]","[class.mc-focused]","[attr.aria-expanded]","[attr.aria-level]","CdkTreeNode","McTreeSelection","_McTreeSelectionBase","CdkTree","McTreeNavigationChange","McTreeSelectionChange","_differs","autoSelect","noUnselect","navigationChange","McTreeSelection_1","rawValue","log","_onKeyDown","withShift","withCtrl","collapse","expand","toggleFocusedOption","PAGE_UP","setPreviousPageItemActive","PAGE_DOWN","setNextPageItemActive","updateScrollSize","withScrollSize","floor","previousIndex_1","previousActiveItemIndex","activeIndex_1","_canDeselectLast","_emitNavigationEvent","focusedIndex","_isValidIndex","focusedOption","renderNodeChanges","dataDiffer","viewContainer","parentData","_dataDiffer","_nodeOutlet","arrayOfInstances","_embeddedViews","view","viewDef","def","nodes","node","nodeMatchedQueries","matchedQueryIds","nodeData","nodeIndex","reset","notifyOnChanges","CdkTreeNodeOutlet","[tabIndex]","IterableDiffers","MC_TREE_DIRECTIVES","McTreeModule","CdkTreeModule","McTreeFlattener","transformFunction","getChildren","_flattenNode","resultNodes","parentMap","flatNode","children","child","childParentMap","flattenNodes","structuredData","expandFlattenedNodes","results","currentExpand","isExpanded","McTreeFlatDataSource","treeFlattener","initialData","_flattenedData","_expandedData","_data","dataNodes","connect","collectionViewer","viewChange","expansionModel","disconnect","DataSource","McTreeNestedDataSource","CdkPortal","ctorParameters","McTabBase","mcTabMixinBase","textLabel","contentPortal","hasOwnProperty","explicitContent","implicitContent","read","onCentering","onCentered","dirChangeSubscription","computePositionAnimationState","positionIndex","computePositionFromOrigin","onTranslateTabStarted","onTranslateTabComplete","fromState","McModalControlService","parentService","openModals","rootOpenModals","registeredMetaMap","rootRegisteredMetaMap","registerModal","modalRef","hasRegistered","afterOpenSubscription","afterOpen","afterCloseSubscription","afterClose","removeOpenModal","has","afterAllClose","McModalRef","ModalUtil","document","lastPosition","listenDocumentClick","getLastClickPosition","clientX","clientY","ModalUtil$1","McModalComponent","cfr","mcMeasureScrollbarService","modalControl","changeDetector","mcModalType","mcZIndex","mcWidth","mcCloseByESC","_mcClosable","_mcMask","_mcMaskClosable","mcAfterOpen","mcAfterClose","mcOkType","_mcOkLoading","mcOnOk","_mcCancelLoading","mcOnCancel","transformOrigin","mcGetContainer","mcOkText","mcCancelText","isComponent","mcContent","createDynamicComponent","isModalButtons","mcFooter","formatModalButtons","HTMLElement","OverlayRef","handleVisibleStateChange","firstChange","contentComponentRef","bodyContainer","insert","autoFocusButtonOk","changeVisibleFromInside","destroy","triggerOk","onClickOkCancel","triggerCancel","getInstance","getContentComponentRef","getContentComponent","getElement","onClickMask","mcMask","mcMaskClosable","target","contains","isModalType","onClickCloseBtn","ok","cancel","loadingKey","caseClose_1","doClose","isPromise","handleThen","catch","isNonEmptyString","isTemplateRef","Type","animation","closeResult","changeBodyOverflow","animateTo","getButtonCallableProp","prop","args","onButtonClick","button","loading","changeAnimationState","maskAnimationClassMap","modalAnimationClassMap","_b","isVisible","updateTransformOrigin","buttons","autoLoading","component","factory","resolveComponentFactory","childInjector","parent","parentInjector","mcComponentParams","assign","modalElement","modalContainer","plusNum","body","scrollBarWidth","DOCUMENT","McMeasureScrollbarService","CssUnitPipe","defaultUnit","formatted","Pipe","ModalBuilderForService","createModal","changeProps","destroyModal","McModalService","confirm","confirmType","mcClassName","success","simpleConfirm","delete","McModalModule","McButtonModule","MC_NAVBAR_CONTAINER","MC_NAVBAR_ITEM","MC_NAVBAR_BRAND","MC_NAVBAR_TITLE","McNavbarItemBase","_McNavbarMixinBase","_platform","_cdRef","dropdownItems","isCollapsed","_subscription","encodeURI","dropdownContent","denyClickIfDisabled","_focusMonitor$","hasDropdownContent","listenClickOutside","startListenFocusDropdownItems","stopListenFocusDropdownItems","isActiveDropdownLink","link","isBrowser","location","href","handleClickByItem","toggleDropdown","isNavbarItem","handleClickByDropdownItem","forceCloseDropdown","_dropdownElements","el","events","eventListeners","hasAttribute","stopImmediatePropagation","[attr.disabled]","Platform","CollapsibleItem","_collapsed","processCollapsed","collapsed","updateCollapsedClass","CachedItemWidth","itemsForCollapse","_collapsedItemsWidth","calculateAndCacheCollapsedItemsWidth","updateTitle","acc","getTitle","computedTitle","getAttribute","decodeURI","innerText","removeAttribute","forceRecalculateItemsWidth","resizeDebounceInterval","firstLevelElement","secondLevelElements","resizeObserver","debounceTime","_resizeSubscription","updateCollapsed","_itemsWidths","calculateAndCacheItemsWidth","_totalItemsWidths","calculateAndCacheTotalItemsWidth","collapseDelta","maxAllowedWidth","itemsWidths","canCollapse","collapsedItemsWidth","getOuterElementWidth","getPropertyValue","allItemsSelector","allItems","from","getItemsForCollapse","McDropdown","resetActiveItem","addItem","_items","_itemChanges","removeItem","setPositionClasses","posX","posY","xPosition","yPosition","classes","_classList","_startAnimation","_panelAnimationState","_resetAnimation","_onAnimationDone","_animationDone","_isAnimating","McDropdownItem","McDropdownContent","McDropdown_1","mcDropdownAnimations","transformDropdown","fadeInItems","MC_DROPDOWN_PANEL","MC_DROPDOWN_DEFAULT_OPTIONS","MC_DROPDOWN_SCROLL_STRATEGY","MC_DROPDOWN_SCROLL_STRATEGY_FACTORY_PROVIDER","MC_DROPDOWN_SCROLL_STRATEGY_FACTORY","McDropdownTrigger","_overlay","_element","_viewContainerRef","_openedBy","dropdownOpened","dropdownClosed","_overlayRef","_opened","_closeSubscription","_hoverSubscription","dropdown","_check","_cleanUpSubscriptions","_createOverlay","_setPosition","_portal","lazyContent","_closingActions","_init","opened","_attached","_reset","_setIsOpened","focusFirstItem","isOpen","throwMcDropdownMissingError","templateRef","_getOverlayConfig","_subscribeToPositions","withLockedPosition","originFallbackX","overlayFallbackY","_c","originFallbackY","_d","overlayFallbackX","overlapTrigger","offsetY","backdrop","(touchstart)","McDropdownModule","McContentComponent","[class.mc-layout-content]","McFooterComponent","[class.mc-layout-footer]","McHeaderComponent","[class.mc-layout-header]","McLayoutComponent","hasSidebar","[class.mc-layout]","[class.mc-layout-has-sidebar]","McSidebarComponent","mcLayoutComponent","_mcWidth","mcCollapsedWidth","mcCollapsedChange","collapsible","mcCollapsed","[class.mc-layout-sidebar]","[class.mc-layout-sidebar-collapsed]","[style.flex]","[style.max-width.px]","[style.min-width.px]","[style.width.px]","Host","McLayoutModule","McListOption","listSelection","checkboxPosition","_reportValueChange","wasSelected_1","_lineSetter","McLineSetter","_lines","_removeOptionFromList","getLabel","_text","_getHostElement","McLine","McListSelection","MC_SELECTION_LIST_VALUE_ACCESSOR","McListSelectionChange","McListSelectionBase","_McListSelectionMixinBase","horizontal","_modelChanges","_tempValues","_setOptionsFromValues","_i","selectAll","deselectAll","values","getSelectedOptionValues","listOption","optionIndex","setPreviousItemActive","setNextItemActive","_getOptionByValue","McListBase","McList","McListSubheaderCssStyler","McListItemBase","McListItem","McListModule","McLineModule","McLinkBase","_McLinkBase","McLink","McLinkModule","rootAfterAllClose","activeDate","startAt","dateAdapter","today","_currentView","startView","McCalendar","ngAfterViewChecked","moveFocusOnNextTick","focusActiveCell","intlChanges","minDate","maxDate","dateFilter","getCurrentViewComponent","init","updateTodaysDate","currentView","monthView","yearView","multiYearView","dateSelected","date","sameDate","selectedChange","yearSelectedInMultiYearView","normalizedYear","yearSelected","monthSelectedInYearView","normalizedMonth","monthSelected","userSelected","userSelection","goToDateInView","getValidDateOrNull","obj","isDateInstance","isValid","McMonthView","McYearView","McMultiYearView","MC_DATE_FORMATS","McDatepickerIntl","DateAdapter","mcDatepickerAnimations","fadeInCalendar","Element","matches","msMatchesSelector","datepickerUid","MC_DATEPICKER_SCROLL_STRATEGY","MC_DATEPICKER_SCROLL_STRATEGY_FACTORY_PROVIDER","MC_DATEPICKER_SCROLL_STRATEGY_FACTORY","McDatepickerContentBase","McDatepickerContentMixinBase","McDatepickerContent","calendar","[@transformPanel]","McDatepicker","openedStream","closedStream","disabledChange","selectedChanged","validSelected","focusedElementBeforeOpen","inputSubscription","createMissingDateImplError","McDatepicker_1","_startAt","datepickerInput","deserialize","_color","getThemePalette","popupRef","popupComponentRef","oldValue","selectYear","selectMonth","registerInput","input","activeElement","openAsPopup","calendarPortal","isAttached","completeClose","createPopup","datepicker","setColor","createPopupPositionStrategy","MC_DATEPICKER_VALUE_ACCESSOR","McDatepickerInput","MC_DATEPICKER_VALIDATORS","McDatepickerInputEvent","targetElement","dateFormats","formField","dateChange","dateInput","datepickerSubscription","localeSubscription","lastValueValid","cvaOnChange","mcDatepickerParse","minValidator","controlValue","compareDate","mcDatepickerMin","actual","maxValidator","mcDatepickerMax","filterValidator","mcDatepickerFilter","localeChanges","McDatepickerInput_1","oldDate","_min","_max","blur","isAltDownArrow","readOnly","parse","format","display","[attr.aria-haspopup]","[attr.aria-owns]","[attr.min]","[attr.max]","(change)","McDatepickerToggleIcon","McDatepickerToggle","intl","defaultTabIndex","parsedTabIndex","watchStateChanges","datepickerDisabled","inputDisabled","datepickerToggled","McButton","[class.mc-datepicker-toggle_active]","[class.mc-warn]","McDatepickerModule","McCalendarBody","McCalendarHeader","McDivider","_vertical","_inset","[attr.aria-orientation]","[class.mc-divider-vertical]","[class.mc-divider-inset]","McDividerModule","_template","_componentFactoryResolver","_appRef","_injector","_document","context","_outlet","DomPortalOutlet","createElement","parentNode","insertBefore","outletElement","ApplicationRef","McDropdownItemBase","_McDropdownItemMixinBase","_parentDropdownPanel","_getTabIndex","_checkDisabled","textNodeType","TEXT_NODE","output","childNodes","length_1","nodeType","providedIn","MC_DROPDOWN_DEFAULT_OPTIONS_FACTORY","_defaultOptions","_xPosition","_yPosition","_tabSubscription","_overlapTrigger","_hasBackdrop","throwMcDropdownInvalidPositionX","throwMcDropdownInvalidPositionY","className","setFocusOrigin","McInputMono","MIN_VALIDATOR","MinValidator","_createValidator","_validator","MAX_VALIDATOR","MaxValidator","McInputModule","McInput","McNumberInput","calendarLabel","openCalendarLabel","prevMonthLabel","nextMonthLabel","prevYearLabel","nextYearLabel","prevMultiYearLabel","nextMultiYearLabel","switchToMonthViewLabel","switchToMultiYearViewLabel","McCalendarCell","displayValue","enabled","cssClasses","numCols","activeCell","cellAspectRatio","selectedValueChange","cellClicked","cell","columnChanges","rows","firstRowOffset","cellPadding","cellWidth","isActiveCell","rowIndex","colIndex","cellNumber","aria-readonly","activeDateChange","firstDayOfWeek","getFirstDayOfWeek","narrowWeekdays","getDayOfWeekNames","longWeekdays","weekdays","long","narrow","concat","_activeDate","oldActiveDate","validDate","clampDate","hasSameMonthAndYear","selectedDate","getDateInCurrentMonth","_minDate","_maxDate","selectedYear","getYear","selectedMonth","getMonth","createDate","handleCalendarBodyKeydown","addCalendarDays","getDate","getNumDaysInMonth","addCalendarYears","addCalendarMonths","todayDate","monthLabel","getMonthNames","toLocaleUpperCase","substr","firstOfMonth","firstWeekOffset","getDayOfWeek","createWeekCells","mcCalendarBody","daysInMonth","dateNames","getDateNames","weeks","shouldEnableDate","dateA11yLabel","cellClasses","dateClass","d1","d2","todayYear","activeYear","activeOffset","years","row","year","createCellForYear","onYearSelected","month","yearsPerPage","getActiveCell","yearName","getYearName","shouldEnableYear","firstOfYear","getMonthInCurrentYear","onMonthSelected","normalizedDate","todayMonth","yearLabel","monthNames","months","createCellForMonth","monthName","monthYearA11yLabel","newMonthName","shouldEnableMonth","isYearAndMonthAfterMaxDate","isYearAndMonthBeforeMinDate","maxYear","maxMonth","minYear","minMonth","label","monthYearLabel","multi-year","currentPeriodClicked","previousClicked","nextClicked","previousEnabled","isSameView","nextEnabled","date1","date2","clampedActiveDate","calendarHeaderPortal","headerComponent","McIconButton","McAnchor","McButtonCSSStyler","McIconButtonCSSStyler","McCard","readonly","_tabIndex","hostElement","onClick","[class.mc-card_readonly]","[class.mc-card_selected]","McCardModule","MC_CHECKBOX_CLICK_ACTION","MC_CHECKBOX_CONTROL_VALUE_ACCESSOR","McCheckbox","TransitionCheckState","McCheckboxChange","McCheckboxBase","_McCheckboxMixinBase","_clickAction","indeterminateChange","_currentAnimationClass","_currentCheckState","Init","_controlValueAccessorChangeFn","_indeterminate","focusOrigin","_onInputFocusChange","changed","_transitionCheckState","Indeterminate","Checked","Unchecked","indeterminate","newState","oldState","[class.mc-indeterminate]","[class.mc-checkbox-label-before]","MC_CHECKBOX_REQUIRED_VALIDATOR","McCheckboxRequiredValidator","[attr.required]","CheckboxRequiredValidator","McCheckboxModule","McCleaner","McFormFieldNumberControl","McHint","McPrefix","McStepper","stepUp","stepDown","onStepUp","onStepDown","McSuffix","McFormFieldBase","_McFormFieldMixinBase","_labelId","hovered","_validateControlChild","_control","_numberControl","hasStepper","_stepper","valueChanges","clearValue","hasCleaner","onHoverChanged","isHovered","step","_shouldForward","getMcFormFieldMissingControlError","_hint","_suffix","_prefix","_cleaner","[class.mc-form-field_invalid]","[class.mc-form-field_has-prefix]","[class.mc-form-field_has-suffix]","[class.mc-form-field_has-cleaner]","[class.mc-form-field_has-stepper]","[class.ng-untouched]","[class.ng-touched]","[class.ng-pristine]","[class.ng-dirty]","[class.ng-valid]","[class.ng-invalid]","[class.ng-pending]","(mouseenter)","(mouseleave)","McFormFieldWithoutBorders","res","MC_INPUT_INVALID_TYPES","BIG_STEP","SMALL_STEP","McInputBase","_McInputMixinBase","_model","bigStep","isDigit","Infinity","_host","self","getPrototypeOf","normalizeSplitter","McNumberInput_1","_focusChanged","minuses","NUMPAD_MINUS","DASH","FF_MINUS","serviceKeys","DELETE","BACKSPACE","TAB","arrows","allowedKeys","isIEPeriod","isNotIEPeriod","metaKey","C","V","X","F1","F12","EDGE","TRIDENT","ZERO","NINE","NUMPAD_ZERO","NUMPAD_NINE","valueAsNumber","update","replace","isFloat","isInt","test","NgModel","_type","_neverEmptyInputTypes","t","getSupportedInputTypes","_inputValueAccessor","_previousNativeValue","McInput_1","_validateType","_dirtyCheckNativeValue","_onInput","_isNeverEmpty","_isBadInput","getMcInputUnsupportedTypeError","__extends","d","__","constructor","extendStatics","__decorate","decorators","desc","r","getOwnPropertyDescriptor","Reflect","decorate","__param","paramIndex","decorator","__metadata","metadataKey","metadataValue","metadata","isBoolean","val","MC_SANITY_CHECKS_FACTORY","base","class_1","defaultColor","Default","colorPalette","errorState","matcher","errorStateMatcher","isErrorState","optionsArray","groups","groupCounter","optionHeight","currentScrollPosition","optionOffset","arrayMap","array","iteratee","baseValues","object","props","inputType","sanitizeNumber","isFinite","getPrecision","arr","pow","value1","value2","precision","provider","reposition","openSidepanels","parentElement","scrollThrottle","setPrototypeOf","__proto__","p","__assign","s","n","MC_SANITY_CHECKS","_sanityChecksEnabled","_hasDoneGlobalChecks","_window","_areChecksEnabled","_checkDoctypeIsDefined","_checkThemeIsPresent","_isTestEnv","doctype","testElement","computedStyle","removeChild","BidiModule","_setLineClass","count","_resetClasses","_setClass","isAdd","ShowOnDirtyErrorStateMatcher","form","invalid","dirty","submitted","touched","McPseudoCheckbox","McPseudoCheckboxModule","scrollbarMeasure","overflow","initScrollBarWidth","_scrollbarWidth","scrollDiv","scrollProp","clientWidth","McOptgroupBase","_McOptgroupMixinBase","_uniqueOptgroupIdCounter","[class.mc-optgroup-disabled]","[attr.aria-labelledby]","_uniqueIdCounter","McOptionSelectionChange","_parent","_active","_mostRecentViewValue","disableRipple","_emitSelectionChangeEvent","setActiveStyles","setInactiveStyles","[class.mc-option-multiple]","MC_LABEL_GLOBAL_OPTIONS","topCenter","topLeft","topRight","rightTop","rightBottom","bottomCenter","bottomLeft","bottomRight","leftTop","leftBottom","McIconCSSStyler","McIconBase","_McIconMixinBase","Empty","iconName","queries","McButtonBase","_McButtonMixinBase","_haltDisabledEvents"],"mappings":"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"}