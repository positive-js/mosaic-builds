{"version":3,"file":"mosaic.umd.min.js","sources":["../../src/lib/tooltip/tooltip.component.ts","../../src/lib/tooltip/tooltip.module.ts","../../src/lib/version.ts","../../src/lib/timepicker/timepicker.constants.ts","../../src/lib/select/select.component.ts","../../src/lib/select/select.module.ts","../../src/lib/splitter/splitter.component.ts","../../src/lib/splitter/splitter.module.ts","../../src/lib/toggle/toggle.component.ts","../../src/lib/toggle/toggle.module.ts","../../src/lib/tabs/tab-group.ts","../../src/lib/tabs/tab-nav-bar/tab-nav-bar.ts","../../src/lib/tabs/tabs.module.ts","../../src/lib/tag/tag.component.ts","../../src/lib/tag/tag.module.ts","../../src/lib/textarea/textarea.component.ts","../../src/lib/textarea/textarea.module.ts","../../src/lib/timepicker/timepicker.ts","../../src/lib/timepicker/timepicker.module.ts","../../src/lib/select/select-animations.ts","../../src/lib/tree/tree-selection.ts","../../src/lib/tree/tree.module.ts","../../src/lib/tree/data-source/flat-data-source.ts","../../src/lib/tree/data-source/nested-data-source.ts","../../src/lib/tabs/tab-content.ts","../../src/lib/tabs/tab-label.ts","../../src/lib/tabs/tab.ts","../../src/lib/tabs/tabs-animations.ts","../../src/lib/tabs/tab-body.ts","../../src/lib/tabs/tab-label-wrapper.ts","../../src/lib/tabs/tab-header.ts","../../src/lib/modal/modal.service.ts","../../src/lib/modal/modal.module.ts","../../src/lib/navbar/navbar.component.ts","../../src/lib/navbar/navbar.module.ts","../../src/lib/progress-bar/progress-bar.component.ts","../../src/lib/progress-bar/progress-bar.module.ts","../../src/lib/progress-spinner/progress-spinner.component.ts","../../src/lib/progress-spinner/progress-spinner.module.ts","../../src/lib/radio/radio.component.ts","../../src/lib/radio/radio.module.ts","../../src/lib/tree/node.ts","../../src/lib/tree/padding.ts","../../src/lib/list/list-selection.component.ts","../../src/lib/list/list.component.ts","../../src/lib/list/list.module.ts","../../src/lib/link/link.component.ts","../../src/lib/link/link.module.ts","../../src/lib/modal/modal-control.service.ts","../../src/lib/modal/modal-ref.class.ts","../../src/lib/modal/modal-util.ts","../../src/lib/modal/modal.component.ts","../../src/lib/modal/css-unit.pipe.ts","../../src/lib/form-field/form-field.ts","../../src/lib/form-field/form-field.module.ts","../../src/lib/input/input-value-accessor.ts","../../src/lib/input/stepperUtils.ts","../../src/lib/input/input.ts","../../src/lib/input/input-number-validators.ts","../../src/lib/input/input.module.ts","../../src/lib/layout/content.component.ts","../../src/lib/layout/footer.component.ts","../../src/lib/layout/header.component.ts","../../src/lib/layout/layout.component.ts","../../src/lib/layout/sidebar.component.ts","../../src/lib/layout/layout.module.ts","../../src/lib/button/button.component.ts","../../src/lib/button/button.module.ts","../../src/lib/card/card.component.ts","../../src/lib/card/card.module.ts","../../src/lib/checkbox/checkbox-config.ts","../../src/lib/checkbox/checkbox.ts","../../src/lib/checkbox/checkbox-required-validator.ts","../../src/lib/checkbox/checkbox-module.ts","../../src/lib/divider/divider.component.ts","../../src/lib/divider/divider.module.ts","../../src/lib/dropdown/dropdown-content.ts","../../src/lib/dropdown/dropdown-panel.ts","../../src/lib/dropdown/dropdown-item.ts","../../src/lib/dropdown/dropdown-animations.ts","../../src/lib/dropdown/dropdown.component.ts","../../src/lib/dropdown/dropdown-trigger.ts","../../src/lib/dropdown/dropdown.module.ts","../../src/lib/form-field/cleaner.ts","../../src/lib/form-field/form-field-control.ts","../../src/lib/form-field/form-field-number-control.ts","../../src/lib/form-field/hint.ts","../../src/lib/form-field/prefix.ts","../../src/lib/form-field/stepper.ts","../../src/lib/form-field/suffix.ts","../../node_modules/tslib/tslib.es6.js","../../src/lib/core/utils/utils.ts","../../src/lib/core/common-behaviors/common-module.ts","../../src/lib/core/common-behaviors/disabled.ts","../../src/lib/core/common-behaviors/color.ts","../../src/lib/core/common-behaviors/tabindex.ts","../../src/lib/core/common-behaviors/error-state.ts","../../src/lib/core/option/option.ts","../../src/lib/core/overlay/overlay-position-map.ts","../../src/lib/dropdown/dropdown-errors.ts","../../src/lib/form-field/form-field-errors.ts","../../src/lib/input/input-errors.ts","../../src/lib/select/select-errors.ts","../../src/lib/core/line/line.ts","../../src/lib/core/error/error-options.ts","../../src/lib/core/selection/pseudo-checkbox/pseudo-checkbox.ts","../../src/lib/core/selection/index.ts","../../src/lib/core/services/measure-scrollbar.service.ts","../../src/lib/core/option/optgroup.ts","../../src/lib/core/option/index.ts","../../src/lib/core/label/label-options.ts","../../src/lib/core/animation/fade-animations.ts","../../src/lib/icon/icon.component.ts","../../src/lib/icon/icon.module.ts"],"sourcesContent":["import {\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    Directive,\n    ElementRef,\n    EventEmitter,\n    HostBinding,\n    Inject,\n    InjectionToken,\n    Input,\n    NgZone,\n    OnDestroy,\n    OnInit,\n    Optional,\n    Output,\n    TemplateRef,\n    ViewContainerRef,\n    ViewEncapsulation\n} from '@angular/core';\nimport { Directionality } from '@ptsecurity/cdk/bidi';\nimport { coerceBooleanProperty } from '@ptsecurity/cdk/coercion';\nimport { ESCAPE } from '@ptsecurity/cdk/keycodes';\nimport {\n    ConnectedOverlayPositionChange,\n    ConnectionPositionPair,\n    Overlay,\n    OverlayRef,\n    ScrollDispatcher,\n    IScrollStrategy,\n    FlexibleConnectedPositionStrategy,\n    IOverlayConnectionPosition,\n    IOriginConnectionPosition,\n    HorizontalConnectionPos,\n    VerticalConnectionPos\n} from '@ptsecurity/cdk/overlay';\nimport { ComponentPortal } from '@ptsecurity/cdk/portal';\nimport {\n    fadeAnimation,\n    DEFAULT_4_POSITIONS,\n    POSITION_MAP\n} from '@ptsecurity/mosaic/core';\nimport { BehaviorSubject, Observable, Subject } from 'rxjs';\nimport { distinctUntilChanged, takeUntil } from 'rxjs/operators';\n\n\n@Component({\n    selector: 'mc-tooltip-component',\n    inputs: [\n        'mcMouseEnterDelay',\n        'mcMouseLeaveDelay',\n        'mcTitle',\n        'mcVisible',\n        'mcTrigger',\n        'mcPlacement'\n    ],\n    outputs: ['mcVisibleChange'],\n    animations: [ fadeAnimation ],\n    templateUrl: './tooltip.component.html',\n    preserveWhitespaces: false,\n    styleUrls: ['./tooltip.css'],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    host: {\n        '(body:click)': 'this.handleBodyInteraction()'\n    }\n})\nexport class McTooltipComponent {\n    prefix = 'mc-tooltip_placement';\n    positions: ConnectionPositionPair[] = [ ...DEFAULT_4_POSITIONS ];\n    classMap = {};\n    isTitleString: boolean;\n    showTid: number;\n    hideTid: number;\n    availablePositions: any;\n    $visible: Observable<boolean>;\n\n    @Output() mcVisibleChange: EventEmitter<boolean> = new EventEmitter();\n\n    @Input() mcMouseEnterDelay = 400;\n\n    @Input() mcMouseLeaveDelay = 0;\n\n    @Input()\n    get mcTitle(): string | TemplateRef<void> {\n        return this._mcTitle;\n    }\n    set mcTitle(value: string | TemplateRef<void>) {\n        this.isTitleString = !(value instanceof TemplateRef);\n\n        if (this.isTitleString) {\n            this._mcTitle = value;\n        }\n    }\n    private _mcTitle: string | TemplateRef<void>;\n\n    @Input()\n    get mcTrigger(): string {\n        return this._mcTrigger;\n    }\n    set mcTrigger(value: string) {\n        this._mcTrigger = value;\n    }\n    private _mcTrigger: string = 'hover';\n\n    @Input()\n    get mcPlacement(): string {\n        return this._mcPlacement;\n    }\n    set mcPlacement(value: string) {\n        if (value !== this._mcPlacement) {\n            this._mcPlacement = value;\n            this.positions.unshift(POSITION_MAP[ this.mcPlacement ]);\n        } else if (!value) {\n            this._mcPlacement = 'top';\n        }\n    }\n    private _mcPlacement: string = 'top';\n\n    @Input()\n    get mcVisible(): boolean {\n        return this._mcVisible.value;\n    }\n    set mcVisible(value: boolean) {\n        const visible = coerceBooleanProperty(value);\n\n        if (this._mcVisible.value !== visible) {\n            this._mcVisible.next(visible);\n            this.mcVisibleChange.emit(visible);\n        }\n    }\n    private _mcVisible: BehaviorSubject<boolean> = new BehaviorSubject<boolean>(false);\n\n    /** Subject for notifying that the tooltip has been hidden from the view */\n    private readonly onHideSubject: Subject<any> = new Subject();\n    private closeOnInteraction: boolean = false;\n\n    constructor(public cdr: ChangeDetectorRef) {\n        this.availablePositions = POSITION_MAP;\n        this.$visible = this._mcVisible.asObservable();\n    }\n\n    show(): void {\n        if (this.hideTid) {\n            clearTimeout(this.hideTid);\n        }\n\n        if (!this.isContentEmpty()) {\n            if (this.mcTrigger !== 'manual') {\n                this.closeOnInteraction = true;\n            }\n            this.showTid = setTimeout(() => {\n                this.mcVisible = true;\n                this.mcVisibleChange.emit(true);\n\n                // Mark for check so if any parent component has set the\n                // ChangeDetectionStrategy to OnPush it will be checked anyways\n                this.markForCheck();\n            }, this.mcMouseEnterDelay);\n        }\n    }\n\n    hide(): void {\n        if (this.showTid) {\n            clearTimeout(this.showTid);\n        }\n\n        this.hideTid = setTimeout(() => {\n            this.mcVisible = false;\n            this.mcVisibleChange.emit(false);\n            this.onHideSubject.next();\n\n            // Mark for check so if any parent component has set the\n            // ChangeDetectionStrategy to OnPush it will be checked anyways\n            this.markForCheck();\n        }, this.mcMouseLeaveDelay);\n    }\n\n    setClassMap(): void {\n        this.classMap = `${this.prefix}-${this.mcPlacement}`;\n    }\n\n    isContentEmpty(): boolean {\n        return this.isTitleString ? (this.mcTitle === '' || !this.mcTitle) : false;\n    }\n\n    /** Returns an observable that notifies when the tooltip has been hidden from view. */\n    afterHidden(): Observable<void> {\n        return this.onHideSubject.asObservable();\n    }\n\n    markForCheck(): void {\n        this.cdr.markForCheck();\n    }\n\n    handleBodyInteraction(): void {\n        if (this.closeOnInteraction) {\n            this.hide();\n        }\n    }\n}\n\nexport const MC_TOOLTIP_SCROLL_STRATEGY =\n    new InjectionToken<() => IScrollStrategy>('mc-tooltip-scroll-strategy');\n\n/** @docs-private */\nexport function mcTooltipScrollStrategyFactory(overlay: Overlay): () => IScrollStrategy {\n    return () => overlay.scrollStrategies.reposition({scrollThrottle: 20});\n}\n\n/** @docs-private */\nexport const MC_TOOLTIP_SCROLL_STRATEGY_FACTORY_PROVIDER = {\n    provide: MC_TOOLTIP_SCROLL_STRATEGY,\n    deps: [Overlay],\n    useFactory: mcTooltipScrollStrategyFactory\n};\n\n/** Creates an error to be thrown if the user supplied an invalid tooltip position. */\nexport function getMcTooltipInvalidPositionError(position: string) {\n    return Error(`McTooltip position \"${position}\" is invalid.`);\n}\n\nconst VIEWPORT_MARGIN: number = 8;\n\n@Directive({\n    selector: '[mcTooltip], [attribute^=\"mcTooltip\"]',\n    exportAs: 'mcTooltip',\n    host: {\n        '(keydown)': 'handleKeydown($event)',\n        '(touchend)': 'handleTouchend()'\n    }\n})\nexport class McTooltip implements OnInit, OnDestroy {\n    isTooltipOpen: boolean = false;\n    isDynamicTooltip = false;\n    parentDisabled: boolean = false;\n    overlayRef: OverlayRef | null;\n    portal: ComponentPortal<McTooltipComponent>;\n    availablePositions: any;\n    tooltip: McTooltipComponent | null;\n\n    @Output() mcVisibleChange = new EventEmitter<boolean>();\n    private $unsubscribe = new Subject<void>();\n\n    @Input('mcTooltip')\n    get mcTitle(): string {\n        return this._mcTitle;\n    }\n    set mcTitle(title: string) {\n        this._mcTitle = title;\n        this.updateCompValue('mcTitle', title);\n    }\n    private _mcTitle: string;\n\n    @Input('mcTitle')\n    set setTitle(title: string) {\n        this.mcTitle = title;\n    }\n\n    @Input('mcTooltipDisabled')\n    get disabled(): boolean { return this._disabled; }\n    set disabled(value) {\n        this._disabled = coerceBooleanProperty(value);\n    }\n    private _disabled: boolean = false;\n\n    @Input('mcMouseEnterDelay')\n    get mcMouseEnterDelay(): number {\n        return this._mcMouseEnterDelay;\n    }\n    set mcMouseEnterDelay(value: number) {\n        this._mcMouseEnterDelay = value;\n        this.updateCompValue('mcMouseEnterDelay', value);\n    }\n    private _mcMouseEnterDelay: number;\n\n    @Input('mcMouseLeaveDelay')\n    get mcMouseLeaveDelay(): number {\n        return this._mcMouseLeaveDelay;\n    }\n    set mcMouseLeaveDelay(value: number) {\n        this._mcMouseLeaveDelay = value;\n        this.updateCompValue('mcMouseLeaveDelay', value);\n    }\n    private _mcMouseLeaveDelay: number;\n\n    @Input('mcTrigger')\n    get mcTrigger(): string {\n        return this._mcTrigger;\n    }\n    set mcTrigger(value: string) {\n        if (value) {\n            this._mcTrigger = value;\n            this.updateCompValue('mcTrigger', value);\n        } else {\n            this._mcTrigger = 'hover';\n        }\n    }\n    private _mcTrigger: string = 'hover';\n\n    @Input('mcPlacement')\n    get mcPlacement(): string {\n        return this._mcPlacement;\n    }\n    set mcPlacement(value: string) {\n        if (value) {\n            this._mcPlacement = value;\n            this.updateCompValue('mcPlacement', value);\n        } else {\n            this._mcPlacement = 'top';\n        }\n    }\n    private _mcPlacement: string = 'top';\n\n    @Input('mcTooltipClass')\n    get mcTooltipClass() { return this._mcTooltipClass; }\n    set mсTooltipClass(value: string | string[] | Set<string> | {[key: string]: any}) {\n        this._mcTooltipClass = value;\n\n        if (this.tooltip) {\n            this.tooltip.setClassMap();\n        }\n    }\n    private _mcTooltipClass: string | string[] | Set<string> | {[key: string]: any};\n\n    @Input('mcVisible')\n    get mcVisible(): boolean {\n        return this._mcVisible;\n    }\n    set mcVisible(externalValue: boolean) {\n        const value = coerceBooleanProperty(externalValue);\n        this._mcVisible = value;\n        this.updateCompValue('mcVisible', value);\n\n        if (value) {\n            this.show();\n        }\n    }\n    private _mcVisible: boolean;\n\n    @HostBinding('class.mc-tooltip-open')\n    get isOpen(): boolean {\n        return this.isTooltipOpen;\n    }\n\n    @HostBinding('class.disabled')\n    get isParentDisabled(): boolean {\n        return this.parentDisabled;\n    }\n\n    private manualListeners = new Map<string, EventListenerOrEventListenerObject>();\n    private readonly destroyed = new Subject<void>();\n\n    constructor(\n        private overlay: Overlay,\n        private elementRef: ElementRef,\n        private ngZone: NgZone,\n        private scrollDispatcher: ScrollDispatcher,\n        private hostView: ViewContainerRef,\n        @Inject(MC_TOOLTIP_SCROLL_STRATEGY) private scrollStrategy,\n        @Optional() private direction: Directionality) {\n            this.availablePositions = POSITION_MAP;\n        }\n\n    /** Create the overlay config and position strategy */\n    createOverlay(): OverlayRef {\n        if (this.overlayRef) {\n            return this.overlayRef;\n        }\n\n        // Create connected position strategy that listens for scroll events to reposition.\n        const strategy = this.overlay.position()\n            .flexibleConnectedTo(this.elementRef)\n            .withTransformOriginOn('.mc-tooltip')\n            .withFlexibleDimensions(false)\n            .withViewportMargin(VIEWPORT_MARGIN)\n            .withPositions([ ...DEFAULT_4_POSITIONS ]);\n\n        const scrollableAncestors = this.scrollDispatcher\n            .getAncestorScrollContainers(this.elementRef);\n\n        strategy.withScrollableContainers(scrollableAncestors);\n\n        strategy.positionChanges.pipe(takeUntil(this.destroyed)).subscribe((change) => {\n            if (this.tooltip) {\n                this.onPositionChange(change);\n                if (change.scrollableViewProperties.isOverlayClipped && this.tooltip.mcVisible) {\n                    // After position changes occur and the overlay is clipped by\n                    // a parent scrollable then close the tooltip.\n                    this.ngZone.run(() => this.hide());\n                }\n            }\n        });\n\n        this.overlayRef = this.overlay.create({\n            direction: this.direction,\n            positionStrategy: strategy,\n            panelClass: 'mc-tooltip-panel',\n            scrollStrategy: this.scrollStrategy()\n        });\n\n        this.updatePosition();\n\n        this.overlayRef.detachments()\n            .pipe(takeUntil(this.destroyed))\n            .subscribe(() => this.detach());\n\n        return this.overlayRef;\n    }\n\n    detach() {\n        if (this.overlayRef && this.overlayRef.hasAttached()) {\n            this.overlayRef.detach();\n        }\n\n        this.tooltip = null;\n    }\n\n    onPositionChange($event: ConnectedOverlayPositionChange): void {\n        let updatedPlacement = this.mcPlacement;\n        Object.keys(this.availablePositions).some((key) => {\n            if ($event.connectionPair.originX === this.availablePositions[key].originX &&\n                $event.connectionPair.originY === this.availablePositions[key].originY &&\n                $event.connectionPair.overlayX === this.availablePositions[key].overlayX &&\n                $event.connectionPair.overlayY === this.availablePositions[key].overlayY) {\n                updatedPlacement = key;\n\n                return true;\n            }\n\n            return false;\n        });\n        this.updateCompValue('mcPlacement', updatedPlacement);\n\n        if (this.tooltip) {\n            this.tooltip.setClassMap();\n            this.tooltip.markForCheck();\n        }\n\n        this.handlePositioningUpdate();\n    }\n\n    handlePositioningUpdate() {\n        if (!this.overlayRef) {\n            this.overlayRef = this.createOverlay();\n        }\n        if (this.mcPlacement === 'right' || this.mcPlacement === 'left') {\n            const pos =\n                (this.overlayRef.overlayElement.clientHeight -\n                    this.hostView.element.nativeElement.clientHeight) / 2; // tslint:disable-line\n            const currentContainer = this.overlayRef.overlayElement.style.top || '0px';\n            this.overlayRef.overlayElement.style.top =\n                `${parseInt(currentContainer.split('px')[0], 10) + pos - 1}px`;\n            // TODO: обновлять положение стрелки\\указателя\\\"дятла\"\n        }\n    }\n\n    // tslint:disable-next-line:no-any\n    updateCompValue(key: string, value: any): void {\n        if (this.isDynamicTooltip && value) {\n            if (this.tooltip) {\n                this.tooltip[key] = value;\n            }\n        }\n    }\n\n    ngOnInit(): void {\n        this.initElementRefListeners();\n    }\n\n    ngOnDestroy(): void {\n        if (this.overlayRef) {\n            this.overlayRef.dispose();\n        }\n        this.manualListeners.forEach((listener, event) =>\n            this.elementRef.nativeElement.removeEventListener(event, listener));\n        this.manualListeners.clear();\n\n        this.$unsubscribe.next();\n        this.$unsubscribe.complete();\n    }\n\n    handleKeydown(e: KeyboardEvent) {\n        if (this.isTooltipOpen && e.keyCode === ESCAPE) { // tslint:disable-line\n            this.hide();\n        }\n    }\n\n    handleTouchend() {\n        this.hide();\n    }\n\n    initElementRefListeners() {\n        if (this.mcTrigger === 'hover') {\n\n            this.manualListeners\n                .set('mouseenter', () => this.show())\n                .set('mouseleave', () => this.hide())\n                .forEach((listener, event) => this.elementRef.nativeElement.addEventListener(event, listener));\n        }\n\n        if (this.mcTrigger === 'focus') {\n\n            this.manualListeners\n                .set('focus', () => this.show())\n                .set('blur', () => this.hide())\n                .forEach((listener, event) => this.elementRef.nativeElement.addEventListener(event, listener));\n        }\n    }\n\n    show(): void {\n        if (!this.disabled) {\n            if (!this.tooltip) {\n                const overlayRef = this.createOverlay();\n                this.detach();\n\n                this.portal = this.portal || new ComponentPortal(McTooltipComponent, this.hostView);\n\n                this.tooltip = overlayRef.attach(this.portal).instance;\n                this.tooltip.afterHidden()\n                    .pipe(takeUntil(this.destroyed))\n                    .subscribe(() => this.detach());\n                this.isDynamicTooltip = true;\n                const properties = [\n                    'mcTitle',\n                    'mcPlacement',\n                    'mcTrigger',\n                    'mcTooltipDisabled',\n                    'mcMouseEnterDelay',\n                    'mcMouseLeaveDelay',\n                    'mсTooltipClass',\n                    'mcVisible'\n                ];\n                properties.forEach((property) => this.updateCompValue(property, this[ property ]));\n                this.tooltip.mcVisibleChange.pipe(takeUntil(this.$unsubscribe), distinctUntilChanged())\n                    .subscribe((data) => {\n                        this.mcVisible = data;\n                        this.mcVisibleChange.emit(data);\n                        this.isTooltipOpen = data;\n                    });\n            }\n            this.updatePosition();\n            this.tooltip.show();\n        }\n    }\n\n    hide(): void {\n        if (this.tooltip) {\n            this.tooltip.hide();\n        }\n    }\n\n    /** Updates the position of the current tooltip. */\n    updatePosition() {\n        if (!this.overlayRef) {\n            this.overlayRef = this.createOverlay();\n        }\n        const position =\n            this.overlayRef.getConfig().positionStrategy as FlexibleConnectedPositionStrategy;\n        const origin = this.getOrigin();\n        const overlay = this.getOverlayPosition();\n\n        position.withPositions([\n            {...origin.main, ...overlay.main},\n            {...origin.fallback, ...overlay.fallback}\n        ]);\n    }\n\n    /**\n     * Returns the origin position and a fallback position based on the user's position preference.\n     * The fallback position is the inverse of the origin (e.g. `'below' -> 'above'`).\n     */\n    getOrigin(): {main: IOriginConnectionPosition; fallback: IOriginConnectionPosition} {\n        const position = this.mcPlacement;\n        const isLtr = !this.direction || this.direction.value === 'ltr';\n        let originPosition: IOriginConnectionPosition;\n\n        if (position === 'top' || position === 'bottom') {\n            originPosition = {originX: 'center', originY: position === 'top' ? 'top' : 'bottom'};\n        } else if (\n            position === 'top' ||\n            (position === 'left' && isLtr) ||\n            (position === 'right' && !isLtr)) {\n            originPosition = {originX: 'start', originY: 'center'};\n        } else if (\n            position === 'bottom' ||\n            (position === 'right' && isLtr) ||\n            (position === 'left' && !isLtr)) {\n            originPosition = {originX: 'end', originY: 'center'};\n        } else {\n            throw getMcTooltipInvalidPositionError(position);\n        }\n\n        const {x, y} = this.invertPosition(originPosition.originX, originPosition.originY);\n\n        return {\n            main: originPosition,\n            fallback: {originX: x, originY: y}\n        };\n    }\n\n    /** Returns the overlay position and a fallback position based on the user's preference */\n    getOverlayPosition(): {main: IOverlayConnectionPosition; fallback: IOverlayConnectionPosition} {\n        const position = this.mcPlacement;\n        const isLtr = !this.direction || this.direction.value === 'ltr';\n        let overlayPosition: IOverlayConnectionPosition;\n\n        if (position === 'top') {\n            overlayPosition = {overlayX: 'center', overlayY: 'bottom'};\n        } else if (position === 'bottom') {\n            overlayPosition = {overlayX: 'center', overlayY: 'top'};\n        } else if (\n            position === 'top' ||\n            (position === 'left' && isLtr) ||\n            (position === 'right' && !isLtr)) {\n            overlayPosition = {overlayX: 'end', overlayY: 'center'};\n        } else if (\n            position === 'bottom' ||\n            (position === 'right' && isLtr) ||\n            (position === 'left' && !isLtr)) {\n            overlayPosition = {overlayX: 'start', overlayY: 'center'};\n        } else {\n            throw getMcTooltipInvalidPositionError(position);\n        }\n\n        const {x, y} = this.invertPosition(overlayPosition.overlayX, overlayPosition.overlayY);\n\n        return {\n            main: overlayPosition,\n            fallback: {overlayX: x, overlayY: y}\n        };\n    }\n\n    /** Inverts an overlay position. */\n    private invertPosition(x: HorizontalConnectionPos, y: VerticalConnectionPos) {\n        let newX: HorizontalConnectionPos = x;\n        let newY: VerticalConnectionPos = y;\n        if (this.mcPlacement === 'top' || this.mcPlacement === 'bottom') {\n            if (y === 'top') {\n                newY = 'bottom';\n            } else if (y === 'bottom') {\n                newY = 'top';\n            }\n        } else {\n            if (x === 'end') {\n                newX = 'start';\n            } else if (x === 'start') {\n                newX = 'end';\n            }\n        }\n\n        return {x: newX, y: newY};\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { OverlayModule } from '@ptsecurity/cdk/overlay';\n\nimport {\n    McTooltipComponent,\n    McTooltip,\n    MC_TOOLTIP_SCROLL_STRATEGY_FACTORY_PROVIDER\n} from './tooltip.component';\n\n\n@NgModule({\n    declarations: [McTooltipComponent, McTooltip],\n    exports: [McTooltipComponent, McTooltip],\n    imports: [CommonModule, OverlayModule],\n    providers: [MC_TOOLTIP_SCROLL_STRATEGY_FACTORY_PROVIDER],\n    entryComponents: [McTooltipComponent]\n})\nexport class McToolTipModule {\n}\n","import { Version } from '@angular/core';\n\n\nexport const VERSION = new Version('1.0.0-beta.0-deb5de7');\n","export enum TimeParts {\n    hours,\n    minutes,\n    seconds\n}\n\nexport enum TimeFormats {\n    HHmmss = 'HH:mm:ss',\n    HHmm = 'HH:mm'\n}\n\nexport const TIMEFORMAT_PLACEHOLDERS: { [timeFormat: string]: string } = {\n    [TimeFormats.HHmmss]: '  :  :  ',\n    [TimeFormats.HHmm]: '  :  '\n};\n\nexport const DEFAULT_TIME_FORMAT: TimeFormats = TimeFormats.HHmm;\n\nexport const HOURS_MINUTES_SECONDS_REGEXP =\n    new RegExp(/^([0-9]|0[0-9]|1[0-9]|2[0-3]):([0-5][0-9]|[0-9]):([0-5][0-9]|[0-9])?$/);\nexport const HOURS_MINUTES_REGEXP = /^([0-9]|0[0-9]|1[0-9]|2[0-3]):([0-5][0-9]|[0-9])?$/;\nexport const HOURS_ONLY_REGEXP = /^([0-9]|0[0-9]|1[0-9]|2[0-3]):?$/;\n\nexport const SECONDS_PER_MINUTE: number = 59;\nexport const MINUTES_PER_HOUR: number = 59;\nexport const HOURS_PER_DAY: number = 23;\n\n// TODO Move it to common CDK\nexport const ARROW_UP_KEYCODE: string = 'ArrowUp';\nexport const ARROW_DOWN_KEYCODE: string = 'ArrowDown';\nexport const ARROW_LEFT_KEYCODE: string = 'ArrowLeft';\nexport const ARROW_RIGHT_KEYCODE: string = 'ArrowRight';\n","/* tslint:disable:no-empty */\n\nimport { ActiveDescendantKeyManager } from '@ptsecurity/cdk/a11y';\nimport { Directionality } from '@ptsecurity/cdk/bidi';\nimport { coerceBooleanProperty } from '@ptsecurity/cdk/coercion';\nimport { SelectionModel } from '@ptsecurity/cdk/collections';\nimport {\n    DOWN_ARROW,\n    END,\n    ENTER,\n    HOME,\n    LEFT_ARROW,\n    RIGHT_ARROW,\n    SPACE,\n    UP_ARROW,\n    A\n} from '@ptsecurity/cdk/keycodes';\nimport {\n    CdkConnectedOverlay,\n    Overlay,\n    RepositionScrollStrategy,\n    IScrollStrategy,\n    ViewportRuler\n} from '@ptsecurity/cdk/overlay';\n\nimport {\n    AfterContentInit, AfterViewInit,\n    Attribute,\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    ContentChild,\n    ContentChildren,\n    Directive,\n    DoCheck,\n    ElementRef,\n    EventEmitter,\n    Inject,\n    InjectionToken,\n    Input,\n    isDevMode,\n    NgZone,\n    OnChanges,\n    OnDestroy,\n    OnInit,\n    Optional,\n    Output,\n    QueryList, Renderer2,\n    Self,\n    SimpleChanges,\n    ViewChild, ViewChildren,\n    ViewEncapsulation\n} from '@angular/core';\nimport { ControlValueAccessor, FormGroupDirective, NgControl, NgForm } from '@angular/forms';\nimport {\n    _countGroupLabelsBeforeOption,\n    _getOptionScrollPosition,\n    CanDisable,\n    CanDisableCtor,\n    CanUpdateErrorState,\n    CanUpdateErrorStateCtor,\n    ErrorStateMatcher,\n    HasTabIndex, HasTabIndexCtor,\n    MC_OPTION_PARENT_COMPONENT,\n    McOptgroup,\n    McOption,\n    McOptionSelectionChange,\n    mixinDisabled,\n    mixinErrorState,\n    mixinTabIndex\n} from '@ptsecurity/mosaic/core';\n\nimport { McFormField, McFormFieldControl } from '@ptsecurity/mosaic/form-field';\nimport { McTag } from '@ptsecurity/mosaic/tag';\n\n\nimport { defer, merge, Observable, Subject } from 'rxjs';\nimport {\n    filter,\n    map,\n    startWith,\n    switchMap,\n    take,\n    takeUntil,\n    distinctUntilChanged\n} from 'rxjs/operators';\n\nimport {\n    getMcSelectDynamicMultipleError,\n    getMcSelectNonArrayValueError,\n    getMcSelectNonFunctionValueError\n} from './select-errors';\n\nimport { mcSelectAnimations } from './select-animations';\n\n\nlet nextUniqueId = 0;\n\n/**\n * The following style constants are necessary to save here in order\n * to properly calculate the alignment of the selected option over\n * the trigger element.\n */\n\n/** The max height of the select's overlay panel */\nexport const SELECT_PANEL_MAX_HEIGHT = 224;\n\n/** The panel's padding on the x-axis */\nexport const SELECT_PANEL_PADDING_X = 1;\n\n/** The panel's x axis padding if it is indented (e.g. there is an option group). */\n/* tslint:disable-next-line:no-magic-numbers */\nexport const SELECT_PANEL_INDENT_PADDING_X = SELECT_PANEL_PADDING_X * 2;\n\n/** The height of the select items in `em` units. */\nexport const SELECT_ITEM_HEIGHT_EM = 2;\n\n/**\n * The select panel will only \"fit\" inside the viewport if it is positioned at\n * this value or more away from the viewport boundary.\n */\nexport const SELECT_PANEL_VIEWPORT_PADDING = 8;\n\n/** Injection token that determines the scroll handling while a select is open. */\nexport const MC_SELECT_SCROLL_STRATEGY =\n    new InjectionToken<() => IScrollStrategy>('mc-select-scroll-strategy');\n\n/** @docs-private */\nexport function MC_SELECT_SCROLL_STRATEGY_PROVIDER_FACTORY(overlay: Overlay):\n    () => RepositionScrollStrategy {\n    return () => overlay.scrollStrategies.reposition();\n}\n\n/** @docs-private */\nexport const MC_SELECT_SCROLL_STRATEGY_PROVIDER = {\n    provide: MC_SELECT_SCROLL_STRATEGY,\n    deps: [Overlay],\n    useFactory: MC_SELECT_SCROLL_STRATEGY_PROVIDER_FACTORY\n};\n\n/** Change event object that is emitted when the select value has changed. */\nexport class McSelectChange {\n    constructor(\n        /** Reference to the select that emitted the change event. */\n        public source: McSelect,\n        /** Current value of the select that emitted the event. */\n        public value: any) {\n    }\n}\n\n// Boilerplate for applying mixins to McSelect.\n/** @docs-private */\nexport class McSelectBase {\n    constructor(\n        public _elementRef: ElementRef,\n        public _defaultErrorStateMatcher: ErrorStateMatcher,\n        public _parentForm: NgForm,\n        public _parentFormGroup: FormGroupDirective,\n        public ngControl: NgControl\n    ) {}\n}\n\nexport const _McSelectMixinBase:\n    CanDisableCtor &\n    HasTabIndexCtor &\n    CanUpdateErrorStateCtor & typeof McSelectBase\n    = mixinTabIndex(mixinDisabled(mixinErrorState(McSelectBase)));\n\n\n/**\n * Allows the user to customize the trigger that is displayed when the select has a value.\n */\n@Directive({ selector: 'mc-select-trigger' })\nexport class McSelectTrigger {}\n\n\n@Component({\n    selector: 'mc-select',\n    exportAs: 'mcSelect',\n    templateUrl: 'select.html',\n    styleUrls: ['./select.css'],\n    inputs: ['disabled', 'tabIndex'],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    host: {\n        '[attr.id]': 'id',\n        '[attr.tabindex]': 'tabIndex',\n        class: 'mc-select',\n        '[class.mc-disabled]': 'disabled',\n        '[class.mc-select-invalid]': 'errorState',\n        '[class.mc-select-required]': 'required',\n        '(keydown)': '_handleKeydown($event)',\n        '(focus)': '_onFocus()',\n        '(blur)': '_onBlur()',\n        '(window:resize)': '_calculateHiddenItems()'\n    },\n    animations: [\n        mcSelectAnimations.transformPanel,\n        mcSelectAnimations.fadeInContent\n    ],\n    providers: [\n        { provide: McFormFieldControl, useExisting: McSelect },\n        { provide: MC_OPTION_PARENT_COMPONENT, useExisting: McSelect }\n    ]\n})\nexport class McSelect extends _McSelectMixinBase implements\n    AfterContentInit, AfterViewInit, OnChanges, OnDestroy, OnInit, DoCheck, ControlValueAccessor, CanDisable,\n    HasTabIndex, McFormFieldControl<any>, CanUpdateErrorState {\n\n    /** The last measured value for the trigger's client bounding rect. */\n    _triggerRect: ClientRect;\n\n    /** The cached font-size of the trigger element. */\n    _triggerFontSize = 0;\n\n    /** Deals with the selection logic. */\n    _selectionModel: SelectionModel<McOption>;\n\n    /** Manages keyboard events for options in the panel. */\n    _keyManager: ActiveDescendantKeyManager<McOption>;\n\n    /** The IDs of child options to be passed to the aria-owns attribute. */\n    _optionIds: string = '';\n\n    /** The value of the select panel's transform-origin property. */\n    _transformOrigin: string = 'top';\n\n    /** Whether the panel's animation is done. */\n    _panelDoneAnimating: boolean = false;\n\n    /** Emits when the panel element is finished transforming in. */\n    _panelDoneAnimatingStream = new Subject<string>();\n\n    /** Strategy that will be used to handle scrolling while the select panel is open. */\n    _scrollStrategy = this._scrollStrategyFactory();\n\n    /**\n     * The y-offset of the overlay panel in relation to the trigger's top start corner.\n     * This must be adjusted to align the selected option text over the trigger text.\n     * when the panel opens. Will change based on the y-position of the selected option.\n     */\n    _offsetY = 0;\n\n    /**\n     * This position config ensures that the top \"start\" corner of the overlay\n     * is aligned with with the top \"start\" of the origin by default (overlapping\n     * the trigger completely). If the panel cannot fit below the trigger, it\n     * will fall back to a position above the trigger.\n     */\n    _positions = [\n        {\n            originX: 'start',\n            originY: 'bottom',\n            overlayX: 'start',\n            overlayY: 'top'\n        },\n        {\n            originX: 'start',\n            originY: 'top',\n            overlayX: 'start',\n            overlayY: 'bottom'\n        }\n    ];\n\n    /** Whether the select is focused. */\n    get focused(): boolean {\n        return this._focused || this._panelOpen;\n    }\n\n    /**\n     * @deprecated Setter to be removed as this property is intended to be readonly.\n     * @breaking-change 8.0.0\n     */\n    set focused(value: boolean) {\n        this._focused = value;\n    }\n\n    /** A name for this control that can be used by `mc-form-field`. */\n    controlType = 'mc-select';\n\n    @ViewChild('trigger') trigger: ElementRef;\n    @ViewChildren(McTag) tags: QueryList<McTag>;\n\n    @ViewChild('panel') panel: ElementRef;\n\n    /** Overlay pane containing the options. */\n    @ViewChild(CdkConnectedOverlay) overlayDir: CdkConnectedOverlay;\n\n    /** All of the defined select options. */\n    @ContentChildren(McOption, { descendants: true }) options: QueryList<McOption>;\n\n    /** All of the defined groups of options. */\n    @ContentChildren(McOptgroup) optionGroups: QueryList<McOptgroup>;\n\n    /** Classes to be passed to the select panel. Supports the same syntax as `ngClass`. */\n    @Input() panelClass: string | string[] | Set<string> | { [key: string]: any };\n\n    /** User-supplied override of the trigger element. */\n    @ContentChild(McSelectTrigger) customTrigger: McSelectTrigger;\n\n    /** Placeholder to be shown if no value has been selected. */\n    @Input()\n    get placeholder(): string {\n        return this._placeholder;\n    }\n\n    set placeholder(value: string) {\n        this._placeholder = value;\n        this.stateChanges.next();\n    }\n\n    /** Whether the component is required. */\n    @Input()\n    get required(): boolean {\n        return this._required;\n    }\n\n    set required(value: boolean) {\n        this._required = coerceBooleanProperty(value);\n        this.stateChanges.next();\n    }\n\n    /** Whether the user should be allowed to select multiple options. */\n    @Input()\n    get multiple(): boolean {\n        return this._multiple;\n    }\n\n    set multiple(value: boolean) {\n        if (this._selectionModel) {\n            throw getMcSelectDynamicMultipleError();\n        }\n\n        this._multiple = coerceBooleanProperty(value);\n    }\n\n    /**\n     * Function to compare the option values with the selected values. The first argument\n     * is a value from an option. The second is a value from the selection. A boolean\n     * should be returned.\n     */\n    @Input()\n    get compareWith() {\n        return this._compareWith;\n    }\n\n    set compareWith(fn: (o1: any, o2: any) => boolean) {\n        /* tslint:disable-next-line:strict-type-predicates */\n        if (typeof fn !== 'function') {\n            throw getMcSelectNonFunctionValueError();\n        }\n\n        this._compareWith = fn;\n\n        if (this._selectionModel) {\n            // A different comparator means the selection could change.\n            this._initializeSelection();\n        }\n    }\n\n    /** Value of the select control. */\n    @Input()\n    get value(): any {\n        return this._value;\n    }\n\n    set value(newValue: any) {\n        if (newValue !== this._value) {\n            this.writeValue(newValue);\n            this._value = newValue;\n        }\n    }\n\n    /** Object used to control when error messages are shown. */\n    @Input() errorStateMatcher: ErrorStateMatcher;\n\n    /**\n     * Function used to sort the values in a select in multiple mode.\n     * Follows the same logic as `Array.prototype.sort`.\n     */\n    @Input() sortComparator: (a: McOption, b: McOption, options: McOption[]) => number;\n\n    @Input()\n    get id(): string {\n        return this._id;\n    }\n\n    set id(value: string) {\n        this._id = value || this._uid;\n        this.stateChanges.next();\n    }\n\n    /** Combined stream of all of the child options' change events. */\n    readonly optionSelectionChanges: Observable<McOptionSelectionChange> = defer(() => {\n        if (this.options) {\n            return merge(...this.options.map((option) => option.onSelectionChange));\n        }\n\n        return this._ngZone.onStable\n            .asObservable()\n            .pipe(take(1), switchMap(() => this.optionSelectionChanges));\n    });\n\n    /** Event emitted when the select panel has been toggled. */\n    @Output() readonly openedChange: EventEmitter<boolean> = new EventEmitter<boolean>();\n\n    /** Event emitted when the select has been opened. */\n    @Output('opened') readonly _openedStream: Observable<void> =\n        this.openedChange.pipe(filter((o) => o), map(() => {}));\n\n    /** Event emitted when the select has been closed. */\n    @Output('closed') readonly _closedStream: Observable<void> =\n        this.openedChange.pipe(filter((o) => !o), map(() => {}));\n\n    /** Event emitted when the selected value has been changed by the user. */\n    @Output() readonly selectionChange: EventEmitter<McSelectChange> = new EventEmitter<McSelectChange>();\n\n    /**\n     * Event that emits whenever the raw value of the select changes. This is here primarily\n     * to facilitate the two-way binding for the `value` input.\n     * @docs-private\n     */\n    @Output() readonly valueChange: EventEmitter<any> = new EventEmitter<any>();\n\n    hiddenItems: number = 0;\n    oneMoreText: string = '...ещё';\n\n    /** Whether or not the overlay panel is open. */\n    private _panelOpen = false;\n\n    /** Whether filling out the select is required in the form. */\n    private _required: boolean = false;\n\n    /** The scroll position of the overlay panel, calculated to center the selected option. */\n    private _scrollTop = 0;\n\n    /** The placeholder displayed in the trigger of the select. */\n    private _placeholder: string;\n\n    /** Whether the component is in multiple selection mode. */\n    private _multiple: boolean = false;\n\n    /** Unique id for this input. */\n    private readonly _uid = `mc-select-${nextUniqueId++}`;\n\n    /** Emits whenever the component is destroyed. */\n    private readonly _destroy = new Subject<void>();\n\n    private _focused = false;\n\n    private _value: any;\n\n    private _id: string;\n\n    constructor(\n        private readonly _viewportRuler: ViewportRuler,\n        private readonly _changeDetectorRef: ChangeDetectorRef,\n        private readonly _ngZone: NgZone,\n        private readonly _renderer: Renderer2,\n        _defaultErrorStateMatcher: ErrorStateMatcher,\n        elementRef: ElementRef,\n        @Optional() private readonly _dir: Directionality,\n        @Optional() _parentForm: NgForm,\n        @Optional() _parentFormGroup: FormGroupDirective,\n        @Optional() private readonly _parentFormField: McFormField,\n        @Self() @Optional() public ngControl: NgControl,\n        @Attribute('tabindex') tabIndex: string,\n        @Inject(MC_SELECT_SCROLL_STRATEGY) private readonly _scrollStrategyFactory\n    ) {\n        super(elementRef, _defaultErrorStateMatcher, _parentForm, _parentFormGroup, ngControl);\n\n        if (this.ngControl) {\n            // Note: we provide the value accessor through here, instead of\n            // the `providers` to avoid running into a circular import.\n            this.ngControl.valueAccessor = this;\n        }\n\n        this.tabIndex = parseInt(tabIndex) || 0;\n\n        // Force setter to be called in case id was not specified.\n        this.id = this.id;\n    }\n\n    ngOnInit() {\n        this._selectionModel = new SelectionModel<McOption>(this.multiple);\n        this.stateChanges.next();\n\n        // We need `distinctUntilChanged` here, because some browsers will\n        // fire the animation end event twice for the same animation. See:\n        // https://github.com/angular/angular/issues/24084\n        this._panelDoneAnimatingStream\n            .pipe(distinctUntilChanged(), takeUntil(this._destroy))\n            .subscribe(() => {\n                if (this.panelOpen) {\n                    this._scrollTop = 0;\n                    this.openedChange.emit(true);\n                } else {\n                    this.openedChange.emit(false);\n                    this._panelDoneAnimating = false;\n                    this.overlayDir.offsetX = 0;\n                    this._changeDetectorRef.markForCheck();\n                }\n            });\n    }\n\n    ngAfterContentInit() {\n        this._initKeyManager();\n\n        this._selectionModel.onChange!\n            .pipe(takeUntil(this._destroy))\n            .subscribe((event) => {\n                event.added.forEach((option) => option.select());\n                event.removed.forEach((option) => option.deselect());\n            });\n\n        this.options.changes\n            .pipe(startWith(null), takeUntil(this._destroy))\n            .subscribe(() => {\n                this._resetOptions();\n                this._initializeSelection();\n            });\n    }\n\n    ngAfterViewInit(): void {\n        this.tags.changes\n            .subscribe(() => {\n                setTimeout(() => this._calculateHiddenItems(), 0);\n            });\n    }\n\n    ngDoCheck() {\n        if (this.ngControl) { this.updateErrorState(); }\n    }\n\n    ngOnChanges(changes: SimpleChanges) {\n        // Updating the disabled state is handled by `mixinDisabled`, but we need to additionally let\n        // the parent form field know to run change detection when the disabled state changes.\n        if (changes.disabled) {\n            this.stateChanges.next();\n        }\n    }\n\n    ngOnDestroy() {\n        this._destroy.next();\n        this._destroy.complete();\n        this.stateChanges.complete();\n    }\n\n    /** `View -> model callback called when value changes` */\n    _onChange: (value: any) => void = () => {};\n\n    /** `View -> model callback called when select has been touched` */\n    _onTouched = () => {};\n\n    /** Toggles the overlay panel open or closed. */\n    toggle(): void {\n        if (this.panelOpen) {\n            this.close();\n        } else {\n            this.open();\n        }\n    }\n\n    /** Opens the overlay panel. */\n    open(): void {\n        if (this.disabled || !this.options || !this.options.length || this._panelOpen) { return; }\n\n        this._triggerRect = this.trigger.nativeElement.getBoundingClientRect();\n        // Note: The computed font-size will be a string pixel value (e.g. \"16px\").\n        // `parseInt` ignores the trailing 'px' and converts this to a number.\n        this._triggerFontSize = parseInt(getComputedStyle(this.trigger.nativeElement)['font-size']);\n\n        this._panelOpen = true;\n        this._keyManager.withHorizontalOrientation(null);\n        this._calculateOverlayPosition();\n        this._highlightCorrectOption();\n        this._changeDetectorRef.markForCheck();\n\n        // Set the font size on the panel element once it exists.\n        this._ngZone.onStable.asObservable()\n            .pipe(take(1))\n            .subscribe(() => {\n                if (this._triggerFontSize && this.overlayDir.overlayRef &&\n                    this.overlayDir.overlayRef.overlayElement) {\n                    this.overlayDir.overlayRef.overlayElement.style.fontSize = `${this._triggerFontSize}px`;\n                }\n            });\n    }\n\n    /** Closes the overlay panel and focuses the host element. */\n    close(): void {\n        if (this._panelOpen) {\n            this._panelOpen = false;\n            this._keyManager.withHorizontalOrientation(this._isRtl() ? 'rtl' : 'ltr');\n            this._changeDetectorRef.markForCheck();\n            this._onTouched();\n        }\n    }\n\n    /**\n     * Sets the select's value. Part of the ControlValueAccessor interface\n     * required to integrate with Angular's core forms API.\n     *\n     * @param value New value to be written to the model.\n     */\n    writeValue(value: any): void {\n        if (this.options) {\n            this._setSelectionByValue(value);\n        }\n    }\n\n    /**\n     * Saves a callback function to be invoked when the select's value\n     * changes from user input. Part of the ControlValueAccessor interface\n     * required to integrate with Angular's core forms API.\n     *\n     * @param fn Callback to be triggered when the value changes.\n     */\n    registerOnChange(fn: (value: any) => void): void {\n        this._onChange = fn;\n    }\n\n    /**\n     * Saves a callback function to be invoked when the select is blurred\n     * by the user. Part of the ControlValueAccessor interface required\n     * to integrate with Angular's core forms API.\n     *\n     * @param fn Callback to be triggered when the component has been touched.\n     */\n    registerOnTouched(fn: () => {}): void {\n        this._onTouched = fn;\n    }\n\n    /**\n     * Disables the select. Part of the ControlValueAccessor interface required\n     * to integrate with Angular's core forms API.\n     *\n     * @param isDisabled Sets whether the component is disabled.\n     */\n    setDisabledState(isDisabled: boolean): void {\n        this.disabled = isDisabled;\n        this._changeDetectorRef.markForCheck();\n        this.stateChanges.next();\n    }\n\n    get panelOpen(): boolean {\n        return this._panelOpen;\n    }\n\n    get selected(): McOption | McOption[] {\n        return this.multiple ? this._selectionModel.selected : this._selectionModel.selected[0];\n    }\n\n    get triggerValue(): string {\n        if (this.empty) { return ''; }\n\n        if (this._multiple) {\n            const selectedOptions = this._selectionModel.selected.map((option) => option.viewValue);\n\n            if (this._isRtl()) { selectedOptions.reverse(); }\n\n            return selectedOptions.join(', ');\n        }\n\n        return this._selectionModel.selected[0].viewValue;\n    }\n\n    get triggerValues(): McOption[] {\n        if (this.empty) { return []; }\n\n        if (this._multiple) {\n            const selectedOptions = this._selectionModel.selected;\n\n            if (this._isRtl()) { selectedOptions.reverse(); }\n\n            return selectedOptions;\n        }\n\n        return [this._selectionModel.selected[0]];\n    }\n\n    get empty(): boolean {\n        return !this._selectionModel || this._selectionModel.isEmpty();\n    }\n\n    _isRtl(): boolean {\n        return this._dir ? this._dir.value === 'rtl' : false;\n    }\n\n    _handleKeydown(event: KeyboardEvent): void {\n        if (!this.disabled) {\n            if (this.panelOpen) {\n                this._handleOpenKeydown(event);\n            } else {\n                this._handleClosedKeydown(event);\n            }\n        }\n    }\n\n    /**\n     * When the panel content is done fading in, the _panelDoneAnimating property is\n     * set so the proper class can be added to the panel.\n     */\n    _onFadeInDone(): void {\n        this._panelDoneAnimating = this.panelOpen;\n        this._changeDetectorRef.markForCheck();\n    }\n\n    _onFocus() {\n        if (!this.disabled) {\n            this._focused = true;\n            this.stateChanges.next();\n        }\n    }\n\n    /**\n     * Calls the touched callback only if the panel is closed. Otherwise, the trigger will\n     * \"blur\" to the panel when it opens, causing a false positive.\n     */\n    _onBlur() {\n        this._focused = false;\n\n        if (!this.disabled && !this.panelOpen) {\n            this._onTouched();\n            this._changeDetectorRef.markForCheck();\n            this.stateChanges.next();\n        }\n    }\n\n    /**\n     * Callback that is invoked when the overlay panel has been attached.\n     */\n    _onAttached(): void {\n        this.overlayDir.positionChange\n            .pipe(take(1))\n            .subscribe(() => {\n                this._changeDetectorRef.detectChanges();\n                this._calculateOverlayOffsetX();\n                this.panel.nativeElement.scrollTop = this._scrollTop;\n            });\n    }\n\n    /** Returns the theme to be used on the panel. */\n    _getPanelTheme(): string {\n        return this._parentFormField ? `mc-${this._parentFormField.color}` : '';\n    }\n\n    /** Focuses the select element. */\n    focus(): void {\n        this._elementRef.nativeElement.focus();\n    }\n\n    /**\n     * Calculates the scroll position of the select's overlay panel.\n     *\n     * Attempts to center the selected option in the panel. If the option is\n     * too high or too low in the panel to be scrolled to the center, it clamps the\n     * scroll position to the min or max scroll positions respectively.\n     */\n    _calculateOverlayScroll(selectedIndex: number, scrollBuffer: number, maxScroll: number): number {\n        const itemHeight = this._getItemHeight();\n        const optionOffsetFromScrollTop = itemHeight * selectedIndex;\n\n        /* tslint:disable-next-line:no-magic-numbers */\n        const halfOptionHeight = itemHeight / 2;\n\n        // Starts at the optionOffsetFromScrollTop, which scrolls the option to the top of the\n        // scroll container, then subtracts the scroll buffer to scroll the option down to\n        // the center of the overlay panel. Half the option height must be re-added to the\n        // scrollTop so the option is centered based on its middle, not its top edge.\n        const optimalScrollPosition = optionOffsetFromScrollTop - scrollBuffer + halfOptionHeight;\n\n        return Math.min(Math.max(0, optimalScrollPosition), maxScroll);\n    }\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    onContainerClick() {\n        this.focus();\n        this.open();\n    }\n\n    /** Invoked when an option is clicked. */\n    onRemoveMatcherItem(option: McOption, $event): void {\n        $event.stopPropagation();\n\n        option.deselect();\n    }\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    get shouldLabelFloat(): boolean {\n        return this._panelOpen || !this.empty;\n    }\n\n    _calculateHiddenItems(): void {\n        if (this.empty) { return; }\n\n        let visibleItems: number = 0;\n        const totalItemsWidth = this._getTotalItemsWidthInMatcher();\n        let totalVisibleItemsWidth: number = 0;\n        const itemMargin: number = 4;\n\n        this.tags.forEach((tag) => {\n            if (tag.nativeElement.offsetTop < tag.nativeElement.offsetHeight) {\n                totalVisibleItemsWidth += tag.nativeElement.getBoundingClientRect().width + itemMargin;\n                visibleItems++;\n            }\n        });\n\n        this.hiddenItems = (this.selected as ArrayLike<McOption>).length - visibleItems;\n\n        if (this.hiddenItems) {\n            const itemsCounter = this.trigger.nativeElement.querySelector('.mc-select__match-hidden-text');\n            const matcherList = this.trigger.nativeElement.querySelector('.mc-select__match-list');\n\n            const itemsCounterShowed = itemsCounter.offsetTop < itemsCounter.offsetHeight;\n            // const itemsCounterWidth: number = itemsCounter.getBoundingClientRect().width;\n            const itemsCounterWidth: number = 86;\n\n            const matcherListWidth: number = matcherList.getBoundingClientRect().width;\n            const matcherWidth: number = matcherListWidth + itemsCounterWidth;\n\n            if (itemsCounterShowed && (totalItemsWidth < matcherWidth)) { this.hiddenItems = 0; }\n\n            if (\n                totalVisibleItemsWidth === matcherListWidth ||\n                (totalVisibleItemsWidth + itemsCounterWidth) < matcherListWidth\n            ) {\n                this._changeDetectorRef.markForCheck();\n\n                return ;\n            } else if (!itemsCounterShowed && (totalItemsWidth + itemsCounterWidth) > matcherWidth) {\n                this.hiddenItems++;\n            }\n        }\n\n        this._changeDetectorRef.markForCheck();\n    }\n\n    private _getTotalItemsWidthInMatcher(): number {\n        const triggerClone = this.trigger.nativeElement.cloneNode(true);\n        triggerClone.querySelector('.mc-select__match-hidden-text').remove();\n\n        this._renderer.setStyle(triggerClone, 'position', 'absolute');\n        this._renderer.setStyle(triggerClone, 'visibility', 'hidden');\n        this._renderer.setStyle(triggerClone, 'top', '-100%');\n        this._renderer.setStyle(triggerClone, 'left', '0');\n\n        this._renderer.appendChild(this.trigger.nativeElement, triggerClone);\n\n        let totalItemsWidth: number = 0;\n        const itemMargin: number = 4;\n        triggerClone.querySelectorAll('mc-tag').forEach((item) => {\n            totalItemsWidth += item.getBoundingClientRect().width as number + itemMargin;\n        });\n\n        triggerClone.remove();\n\n        return totalItemsWidth;\n    }\n\n    /** Handles keyboard events while the select is closed. */\n    private _handleClosedKeydown(event: KeyboardEvent): void {\n        /* tslint:disable-next-line */\n        const keyCode = event.keyCode;\n        const isArrowKey = keyCode === DOWN_ARROW || keyCode === UP_ARROW ||\n            keyCode === LEFT_ARROW || keyCode === RIGHT_ARROW;\n        const isOpenKey = keyCode === ENTER || keyCode === SPACE;\n\n        // Open the select on ALT + arrow key to match the native <select>\n        if (isOpenKey || ((this.multiple || event.altKey) && isArrowKey)) {\n            event.preventDefault(); // prevents the page from scrolling down when pressing space\n            this.open();\n        } else if (!this.multiple) {\n            this._keyManager.onKeydown(event);\n        }\n    }\n\n    /** Handles keyboard events when the selected is open. */\n    private _handleOpenKeydown(event: KeyboardEvent): void {\n        /* tslint:disable-next-line */\n        const keyCode = event.keyCode;\n        const isArrowKey = keyCode === DOWN_ARROW || keyCode === UP_ARROW;\n        const manager = this._keyManager;\n\n        if (keyCode === HOME || keyCode === END) {\n            event.preventDefault();\n\n            if (keyCode === HOME) {\n                manager.setFirstItemActive();\n            } else {\n                manager.setLastItemActive();\n            }\n\n        } else if (isArrowKey && event.altKey) {\n            // Close the select on ALT + arrow key to match the native <select>\n            event.preventDefault();\n            this.close();\n        } else if ((keyCode === ENTER || keyCode === SPACE) && manager.activeItem) {\n            event.preventDefault();\n            manager.activeItem._selectViaInteraction();\n        } else if (this._multiple && keyCode === A && event.ctrlKey) {\n            event.preventDefault();\n            const hasDeselectedOptions = this.options.some((option) => !option.selected);\n            this.options.forEach((option) => {\n                if (hasDeselectedOptions && !option.disabled) {\n                    option.select();\n                } else {\n                    option.deselect();\n                }\n            });\n        } else {\n            const previouslyFocusedIndex = manager.activeItemIndex;\n\n            manager.onKeydown(event);\n\n            if (this._multiple && isArrowKey && event.shiftKey && manager.activeItem &&\n                manager.activeItemIndex !== previouslyFocusedIndex) {\n                manager.activeItem._selectViaInteraction();\n            }\n        }\n    }\n\n    private _initializeSelection(): void {\n        // Defer setting the value in order to avoid the \"Expression\n        // has changed after it was checked\" errors from Angular.\n        Promise.resolve().then(() => {\n            this._setSelectionByValue(this.ngControl ? this.ngControl.value : this._value);\n        });\n    }\n\n    /**\n     * Sets the selected option based on a value. If no option can be\n     * found with the designated value, the select trigger is cleared.\n     */\n    private _setSelectionByValue(value: any | any[]): void {\n        if (this.multiple && value) {\n            if (!Array.isArray(value)) {\n                throw getMcSelectNonArrayValueError();\n            }\n\n            this._selectionModel.clear();\n            value.forEach((currentValue: any) => this._selectValue(currentValue));\n            this._sortValues();\n        } else {\n            this._selectionModel.clear();\n            const correspondingOption = this._selectValue(value);\n\n            // Shift focus to the active item. Note that we shouldn't do this in multiple\n            // mode, because we don't know what option the user interacted with last.\n            if (correspondingOption) {\n                this._keyManager.setActiveItem(correspondingOption);\n            }\n        }\n\n        this._changeDetectorRef.markForCheck();\n    }\n\n    /**\n     * Finds and selects and option based on its value.\n     * @returns Option that has the corresponding value.\n     */\n    private _selectValue(value: any): McOption | undefined {\n        const correspondingOption = this.options.find((option: McOption) => {\n            try {\n                // Treat null as a special reset value.\n                return option.value != null && this._compareWith(option.value, value);\n            } catch (error) {\n                if (isDevMode()) {\n                    // Notify developers of errors in their comparator.\n                    console.warn(error);\n                }\n\n                return false;\n            }\n        });\n\n        if (correspondingOption) {\n            this._selectionModel.select(correspondingOption);\n        }\n\n        return correspondingOption;\n    }\n\n    /** Sets up a key manager to listen to keyboard events on the overlay panel. */\n    private _initKeyManager() {\n        this._keyManager = new ActiveDescendantKeyManager<McOption>(this.options)\n            .withTypeAhead()\n            .withVerticalOrientation()\n            .withHorizontalOrientation(this._isRtl() ? 'rtl' : 'ltr');\n\n        this._keyManager.tabOut\n            .pipe(takeUntil(this._destroy))\n            .subscribe(() => {\n                // Restore focus to the trigger before closing. Ensures that the focus\n                // position won't be lost if the user got focus into the overlay.\n                this.focus();\n                this.close();\n            });\n\n        this._keyManager.change\n            .pipe(takeUntil(this._destroy))\n            .subscribe(() => {\n                if (this._panelOpen && this.panel) {\n                    this._scrollActiveOptionIntoView();\n                } else if (!this._panelOpen && !this.multiple && this._keyManager.activeItem) {\n                    this._keyManager.activeItem._selectViaInteraction();\n                }\n            });\n    }\n\n    /** Drops current option subscriptions and IDs and resets from scratch. */\n    private _resetOptions(): void {\n        const changedOrDestroyed = merge(this.options.changes, this._destroy);\n\n        this.optionSelectionChanges\n            .pipe(takeUntil(changedOrDestroyed))\n            .subscribe((event) => {\n                this._onSelect(event.source, event.isUserInput);\n\n                if (event.isUserInput && !this.multiple && this._panelOpen) {\n                    this.close();\n                    this.focus();\n                }\n            });\n\n        // Listen to changes in the internal state of the options and react accordingly.\n        // Handles cases like the labels of the selected options changing.\n        merge(...this.options.map((option) => option._stateChanges))\n            .pipe(takeUntil(changedOrDestroyed))\n            .subscribe(() => {\n                this._changeDetectorRef.markForCheck();\n                this.stateChanges.next();\n            });\n\n        this._setOptionIds();\n    }\n\n    /** Invoked when an option is clicked. */\n    private _onSelect(option: McOption, isUserInput: boolean): void {\n        const wasSelected = this._selectionModel.isSelected(option);\n\n        if (option.value == null && !this._multiple) {\n            option.deselect();\n            this._selectionModel.clear();\n            this._propagateChanges(option.value);\n        } else {\n            if (option.selected) {\n                this._selectionModel.select(option);\n            } else {\n                this._selectionModel.deselect(option);\n            }\n\n            if (isUserInput) {\n                this._keyManager.setActiveItem(option);\n            }\n\n            if (this.multiple) {\n                this._sortValues();\n\n                if (isUserInput) {\n                    // In case the user selected the option with their mouse, we\n                    // want to restore focus back to the trigger, in order to\n                    // prevent the select keyboard controls from clashing with\n                    // the ones from `mc-option`.\n                    this.focus();\n                }\n            }\n        }\n\n        if (wasSelected !== this._selectionModel.isSelected(option)) {\n            this._propagateChanges();\n        }\n\n        this.stateChanges.next();\n    }\n\n    /** Sorts the selected values in the selected based on their order in the panel. */\n    private _sortValues() {\n        if (this.multiple) {\n            const options = this.options.toArray();\n\n            this._selectionModel.sort((a, b) => {\n                return this.sortComparator ? this.sortComparator(a, b, options) :\n                    options.indexOf(a) - options.indexOf(b);\n            });\n            this.stateChanges.next();\n        }\n    }\n\n    /** Emits change event to set the model value. */\n    private _propagateChanges(fallbackValue?: any): void {\n        let valueToEmit: any = null;\n\n        if (this.multiple) {\n            valueToEmit = (this.selected as McOption[]).map((option) => option.value);\n        } else {\n            valueToEmit = this.selected ? (this.selected as McOption).value : fallbackValue;\n        }\n\n        this._value = valueToEmit;\n        this.valueChange.emit(valueToEmit);\n        this._onChange(valueToEmit);\n        this.selectionChange.emit(new McSelectChange(this, valueToEmit));\n        this._changeDetectorRef.markForCheck();\n    }\n\n    /** Records option IDs to pass to the aria-owns property. */\n    private _setOptionIds() {\n        this._optionIds = this.options.map((option) => option.id).join(' ');\n    }\n\n    /**\n     * Highlights the selected item. If no option is selected, it will highlight\n     * the first item instead.\n     */\n    private _highlightCorrectOption(): void {\n        if (this._keyManager) {\n            if (this.empty) {\n                this._keyManager.setFirstItemActive();\n            } else {\n                this._keyManager.setActiveItem(this._selectionModel.selected[0]);\n            }\n        }\n    }\n\n    /** Scrolls the active option into view. */\n    private _scrollActiveOptionIntoView(): void {\n        const activeOptionIndex = this._keyManager.activeItemIndex || 0;\n        const labelCount = _countGroupLabelsBeforeOption(activeOptionIndex, this.options, this.optionGroups);\n\n        this.panel.nativeElement.scrollTop = _getOptionScrollPosition(\n            activeOptionIndex + labelCount,\n            this._getItemHeight(),\n            this.panel.nativeElement.scrollTop,\n            SELECT_PANEL_MAX_HEIGHT\n        );\n    }\n\n    /** Gets the index of the provided option in the option list. */\n    private _getOptionIndex(option: McOption): number | undefined {\n        /* tslint:disable-next-line */\n        return this.options.reduce((result: number, current: McOption, index: number) => {\n            /* tslint:disable-next-line:strict-type-predicates */\n            return result === undefined ? (option === current ? index : undefined) : result;\n        }, undefined);\n    }\n\n    /** Calculates the scroll position and x- and y-offsets of the overlay panel. */\n    private _calculateOverlayPosition(): void {\n        const itemHeight = this._getItemHeight();\n        const items = this._getItemCount();\n        const panelHeight = Math.min(items * itemHeight, SELECT_PANEL_MAX_HEIGHT);\n        const scrollContainerHeight = items * itemHeight;\n\n        // The farthest the panel can be scrolled before it hits the bottom\n        const maxScroll = scrollContainerHeight - panelHeight;\n\n        // If no value is selected we open the popup to the first item.\n        let selectedOptionOffset =\n            this.empty ? 0 : this._getOptionIndex(this._selectionModel.selected[0])!;\n\n        selectedOptionOffset += _countGroupLabelsBeforeOption(selectedOptionOffset, this.options,\n            this.optionGroups);\n\n        // We must maintain a scroll buffer so the selected option will be scrolled to the\n        // center of the overlay panel rather than the top.\n        /* tslint:disable-next-line:no-magic-numbers */\n        const scrollBuffer = panelHeight / 2;\n        this._scrollTop = this._calculateOverlayScroll(selectedOptionOffset, scrollBuffer, maxScroll);\n        this._offsetY = this._calculateOverlayOffsetY();\n\n        this._checkOverlayWithinViewport(maxScroll);\n    }\n\n    /**\n     * Sets the x-offset of the overlay panel in relation to the trigger's top start corner.\n     * This must be adjusted to align the selected option text over the trigger text when\n     * the panel opens. Will change based on LTR or RTL text direction. Note that the offset\n     * can't be calculated until the panel has been attached, because we need to know the\n     * content width in order to constrain the panel within the viewport.\n     */\n    private _calculateOverlayOffsetX(): void {\n        const overlayRect = this.overlayDir.overlayRef.overlayElement.getBoundingClientRect();\n        const viewportSize = this._viewportRuler.getViewportSize();\n        const isRtl = this._isRtl();\n        /* tslint:disable-next-line:no-magic-numbers */\n        const paddingWidth = SELECT_PANEL_PADDING_X * 2;\n        let offsetX: number;\n\n        const selected = this._selectionModel.selected[0] || this.options.first;\n        offsetX = selected && selected.group ? SELECT_PANEL_INDENT_PADDING_X : SELECT_PANEL_PADDING_X;\n\n        // Invert the offset in LTR.\n        if (!isRtl) { offsetX *= -1; }\n\n        // Determine how much the select overflows on each side.\n        const leftOverflow = 0 - (overlayRect.left + offsetX - (isRtl ? paddingWidth : 0));\n        const rightOverflow = overlayRect.right + offsetX - viewportSize.width\n            + (isRtl ? 0 : paddingWidth);\n\n        // If the element overflows on either side, reduce the offset to allow it to fit.\n        if (leftOverflow > 0) {\n            offsetX += leftOverflow + SELECT_PANEL_VIEWPORT_PADDING;\n        } else if (rightOverflow > 0) {\n            offsetX -= rightOverflow + SELECT_PANEL_VIEWPORT_PADDING;\n        }\n\n        // Set the offset directly in order to avoid having to go through change detection and\n        // potentially triggering \"changed after it was checked\" errors. Round the value to avoid\n        // blurry content in some browsers.\n        this.overlayDir.offsetX = Math.round(offsetX);\n        this.overlayDir.overlayRef.updatePosition();\n    }\n\n    /**\n     * Calculates the y-offset of the select's overlay panel in relation to the\n     * top start corner of the trigger. It has to be adjusted in order for the\n     * selected option to be aligned over the trigger when the panel opens.\n     */\n    private _calculateOverlayOffsetY(): number {\n        // const itemHeight = this._getItemHeight();\n        // const optionHeightAdjustment = (itemHeight - this._triggerRect.height) / 2;\n\n        // todo I'm not sure that we will use it\n        return 0;\n        // return Math.round(-optionHeightAdjustment);\n    }\n\n    /**\n     * Checks that the attempted overlay position will fit within the viewport.\n     * If it will not fit, tries to adjust the scroll position and the associated\n     * y-offset so the panel can open fully on-screen. If it still won't fit,\n     * sets the offset back to 0 to allow the fallback position to take over.\n     */\n    private _checkOverlayWithinViewport(maxScroll: number): void {\n        const itemHeight = this._getItemHeight();\n        const viewportSize = this._viewportRuler.getViewportSize();\n\n        const topSpaceAvailable = this._triggerRect.top - SELECT_PANEL_VIEWPORT_PADDING;\n        const bottomSpaceAvailable =\n            viewportSize.height - this._triggerRect.bottom - SELECT_PANEL_VIEWPORT_PADDING;\n\n        const panelHeightTop = Math.abs(this._offsetY);\n        const totalPanelHeight =\n            Math.min(this._getItemCount() * itemHeight, SELECT_PANEL_MAX_HEIGHT);\n        const panelHeightBottom = totalPanelHeight - panelHeightTop - this._triggerRect.height;\n\n        if (panelHeightBottom > bottomSpaceAvailable) {\n            this._adjustPanelUp(panelHeightBottom, bottomSpaceAvailable);\n        } else if (panelHeightTop > topSpaceAvailable) {\n            this._adjustPanelDown(panelHeightTop, topSpaceAvailable, maxScroll);\n        } else {\n            this._transformOrigin = this._getOriginBasedOnOption();\n        }\n    }\n\n    /** Adjusts the overlay panel up to fit in the viewport. */\n    private _adjustPanelUp(panelHeightBottom: number, bottomSpaceAvailable: number) {\n        // Browsers ignore fractional scroll offsets, so we need to round.\n        const distanceBelowViewport = Math.round(panelHeightBottom - bottomSpaceAvailable);\n\n        // Scrolls the panel up by the distance it was extending past the boundary, then\n        // adjusts the offset by that amount to move the panel up into the viewport.\n        this._scrollTop -= distanceBelowViewport;\n        this._offsetY -= distanceBelowViewport;\n        this._transformOrigin = this._getOriginBasedOnOption();\n\n        // If the panel is scrolled to the very top, it won't be able to fit the panel\n        // by scrolling, so set the offset to 0 to allow the fallback position to take\n        // effect.\n        if (this._scrollTop <= 0) {\n            this._scrollTop = 0;\n            this._offsetY = 0;\n            this._transformOrigin = `50% bottom 0px`;\n        }\n    }\n\n    /** Adjusts the overlay panel down to fit in the viewport. */\n    private _adjustPanelDown(panelHeightTop: number, topSpaceAvailable: number, maxScroll: number) {\n        // Browsers ignore fractional scroll offsets, so we need to round.\n        const distanceAboveViewport = Math.round(panelHeightTop - topSpaceAvailable);\n\n        // Scrolls the panel down by the distance it was extending past the boundary, then\n        // adjusts the offset by that amount to move the panel down into the viewport.\n        this._scrollTop += distanceAboveViewport;\n        this._offsetY += distanceAboveViewport;\n        this._transformOrigin = this._getOriginBasedOnOption();\n\n        // If the panel is scrolled to the very bottom, it won't be able to fit the\n        // panel by scrolling, so set the offset to 0 to allow the fallback position\n        // to take effect.\n        if (this._scrollTop >= maxScroll) {\n            this._scrollTop = maxScroll;\n            this._offsetY = 0;\n            this._transformOrigin = `50% top 0px`;\n\n            return;\n        }\n    }\n\n    /** Sets the transform origin point based on the selected option. */\n    private _getOriginBasedOnOption(): string {\n        const itemHeight = this._getItemHeight();\n        /* tslint:disable-next-line:no-magic-numbers */\n        const optionHeightAdjustment = (itemHeight - this._triggerRect.height) / 2;\n        /* tslint:disable-next-line:no-magic-numbers */\n        const originY = Math.abs(this._offsetY) - optionHeightAdjustment + itemHeight / 2;\n\n        return `50% ${originY}px 0px`;\n    }\n\n    /** Calculates the amount of items in the select. This includes options and group labels. */\n    private _getItemCount(): number {\n        return this.options.length + this.optionGroups.length;\n    }\n\n    /** Calculates the height of the select's options. */\n    private _getItemHeight(): number {\n        /* tslint:disable-next-line:no-magic-numbers */\n        return 32;\n        // return this._triggerFontSize * SELECT_ITEM_HEIGHT_EM;\n    }\n\n    /** Comparison function to specify which option is displayed. Defaults to object equality. */\n    private _compareWith = (o1: any, o2: any) => o1 === o2;\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { OverlayModule } from '@ptsecurity/cdk/overlay';\nimport { McOptionModule } from '@ptsecurity/mosaic/core';\nimport { McFormFieldModule } from '@ptsecurity/mosaic/form-field';\nimport { McIconModule } from '@ptsecurity/mosaic/icon';\nimport { McTagModule } from '@ptsecurity/mosaic/tag';\n\nimport { MC_SELECT_SCROLL_STRATEGY_PROVIDER, McSelect, McSelectTrigger } from './select.component';\n\n\n@NgModule({\n    imports: [\n        CommonModule,\n        OverlayModule,\n        McOptionModule,\n        McIconModule,\n        McTagModule\n    ],\n    exports: [McFormFieldModule, McSelect, McSelectTrigger, McOptionModule, CommonModule],\n    declarations: [McSelect, McSelectTrigger],\n    providers: [MC_SELECT_SCROLL_STRATEGY_PROVIDER]\n})\nexport class McSelectModule {}\n","import {\n    ChangeDetectionStrategy,\n    Component,\n    Directive,\n    ElementRef,\n    Input,\n    NgZone, OnDestroy,\n    OnInit,\n    Renderer2,\n    ViewEncapsulation\n} from '@angular/core';\n\nimport { coerceBooleanProperty, coerceCssPixelValue, coerceNumberProperty } from '@ptsecurity/cdk/coercion';\n\n\ninterface IArea {\n    area: McSplitterAreaDirective;\n    index: number;\n    order: number;\n    initialSize: number;\n}\n\ninterface IPoint {\n    x: number;\n    y: number;\n}\n\n\nconst enum AttributeProperty {\n    Disabled = 'disabled'\n}\n\nconst enum Cursor {\n    Default = 'default',\n    ResizeColumn = 'col-resize',\n    ResizeRow = 'row-resize'\n}\n\nconst enum StyleProperty {\n    Cursor = 'cursor',\n    Flex = 'flex',\n    FlexBasis = 'flex-basis',\n    FlexDirection = 'flex-direction',\n    Height = 'height',\n    MaxWidth = 'max-width',\n    MinHeight = 'min-height',\n    MinWidth = 'minWidth',\n    OffsetHeight = 'offsetHeight',\n    OffsetWidth = 'offsetWidth',\n    Order = 'order',\n    Width = 'width'\n}\n\nconst enum State {\n    Disabled = 'disabled',\n    Horizontal = 'horizontal',\n    Vertical = 'vertical'\n}\n\nexport const enum Direction {\n    Horizontal = 'horizontal',\n    Vertical = 'vertical'\n}\n\n@Component({\n    selector: 'mc-splitter',\n    preserveWhitespaces: false,\n    styleUrls: ['splitter.css'],\n    templateUrl: './splitter.component.html',\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class McSplitterComponent implements OnInit {\n    readonly areas: IArea[] = [];\n\n    private _direction: Direction;\n    private _disabled: boolean = false;\n    private _gutterSize: number = 6;\n\n    private isDragging: boolean = false;\n\n    private readonly areaPositionDivider: number = 2;\n    private readonly listeners: (() => void)[] = [];\n\n    @Input()\n    set direction(direction: Direction) {\n        this._direction = direction;\n    }\n\n    get direction(): Direction {\n        return this._direction;\n    }\n\n    @Input()\n    set disabled(disabled: boolean) {\n        this._disabled = coerceBooleanProperty(disabled);\n    }\n\n    get disabled(): boolean {\n        return this._disabled;\n    }\n\n    @Input()\n    set gutterSize(gutterSize: number) {\n        const size = coerceNumberProperty(gutterSize);\n        this._gutterSize = size > 0 ? size : this.gutterSize;\n    }\n\n    get gutterSize(): number {\n        return this._gutterSize;\n    }\n\n    constructor(private elementRef: ElementRef,\n                private ngZone: NgZone,\n                private renderer: Renderer2) {}\n\n    addArea(area: McSplitterAreaDirective): void {\n        const index: number = this.areas.length;\n        const order: number = index * this.areaPositionDivider;\n        const size: number = area.getSize();\n\n        area.setOrder(order);\n\n        this.areas.push({\n            area,\n            index,\n            order,\n            initialSize: size\n        });\n    }\n\n    ngOnInit(): void {\n        if (!this.direction) {\n            this.direction = Direction.Horizontal;\n        }\n\n        this.setStyle(StyleProperty.FlexDirection, this.isVertical() ? 'column' : 'row');\n    }\n\n    onMouseDown(event: MouseEvent, leftAreaIndex: number, rightAreaIndex: number) {\n        if (this.disabled) {\n            return;\n        }\n\n        const leftArea = this.areas[leftAreaIndex];\n        const rightArea = this.areas[rightAreaIndex];\n\n        const startPoint: IPoint = {\n            x: event.screenX,\n            y: event.screenY\n        };\n\n        leftArea.initialSize = leftArea.area.getSize();\n        rightArea.initialSize = rightArea.area.getSize();\n\n        this.areas.forEach((item) => {\n            const size = item.area.getSize();\n            item.area.disableFlex();\n            item.area.setSize(size);\n        });\n\n        this.ngZone.runOutsideAngular(() => {\n            this.listeners.push(\n                this.renderer.listen(\n                    'document',\n                    'mouseup',\n                    () => this.onMouseUp()\n                )\n            );\n        });\n\n        this.ngZone.runOutsideAngular(() => {\n            this.listeners.push(\n                this.renderer.listen(\n                    'document',\n                    'mousemove',\n                    (e: MouseEvent) => this.onMouseMove(e, startPoint, leftArea, rightArea)\n                )\n            );\n        });\n\n        this.isDragging = true;\n    }\n\n    removeArea(area: McSplitterAreaDirective): void {\n        let indexToRemove: number = -1;\n\n        this.areas.some((item, index) => {\n            if (item.area === area) {\n                indexToRemove = index;\n\n                return true;\n            }\n\n            return false;\n        });\n\n        if (indexToRemove === -1) {\n            return;\n        }\n\n        this.areas.splice(indexToRemove, 1);\n    }\n\n    private isVertical(): boolean {\n        return this.direction === Direction.Vertical;\n    }\n\n    private onMouseMove(event: MouseEvent, startPoint: IPoint, leftArea: IArea, rightArea: IArea) {\n        if (!this.isDragging || this.disabled) {\n            return;\n        }\n\n        const endPoint: IPoint = {\n            x: event.screenX,\n            y: event.screenY\n        };\n\n        const offset = this.isVertical()\n            ? startPoint.y - endPoint.y\n            : startPoint.x - endPoint.x;\n\n        const newLeftAreaSize = leftArea.initialSize - offset;\n        const newRightAreaSize = rightArea.initialSize + offset;\n\n        const minLeftAreaSize = leftArea.area.getMinSize();\n        const minRightAreaSize = rightArea.area.getMinSize();\n\n        if (newLeftAreaSize <= minLeftAreaSize || newRightAreaSize <= minRightAreaSize) {\n            const rightAreaOffset = leftArea.initialSize - minLeftAreaSize;\n\n            leftArea.area.setSize(minLeftAreaSize);\n            rightArea.area.setSize(rightArea.initialSize + rightAreaOffset);\n        } else if (newLeftAreaSize <= 0) {\n            leftArea.area.setSize(0);\n            rightArea.area.setSize(rightArea.initialSize + leftArea.initialSize);\n        } else if (newRightAreaSize <= 0) {\n            leftArea.area.setSize(rightArea.initialSize + leftArea.initialSize);\n            rightArea.area.setSize(0);\n        } else {\n            leftArea.area.setSize(newLeftAreaSize);\n            rightArea.area.setSize(newRightAreaSize);\n        }\n    }\n\n    private onMouseUp() {\n        while (this.listeners.length > 0) {\n            const unsubscribe = this.listeners.pop();\n\n            if (unsubscribe) {\n                unsubscribe();\n            }\n        }\n\n        this.isDragging = false;\n    }\n\n    private setStyle(property: StyleProperty, value: string | number) {\n        this.renderer.setStyle(this.elementRef.nativeElement, property, value);\n    }\n}\n\n@Directive({\n    selector: 'mc-gutter'\n})\nexport class McGutterDirective implements OnInit {\n    private _direction: Direction = Direction.Vertical;\n    private _disabled: boolean = false;\n    private _order: number = 0;\n    private _size: number = 6;\n\n    @Input()\n    set direction(direction: Direction) {\n        this._direction = direction;\n    }\n\n    get direction(): Direction {\n        return this._direction;\n    }\n\n    @Input()\n    set disabled(disabled: boolean) {\n        this._disabled = coerceBooleanProperty(disabled);\n    }\n\n    get disabled(): boolean {\n        return this._disabled;\n    }\n\n    @Input()\n    set order(order: number) {\n        this._order = coerceNumberProperty(order);\n    }\n\n    get order(): number {\n        return this._order;\n    }\n\n    @Input()\n    set size(size: number) {\n        this._size = coerceNumberProperty(size);\n    }\n\n    get size(): number {\n        return this._size;\n    }\n\n    constructor(private renderer: Renderer2,\n                private elementRef: ElementRef) {\n    }\n\n    ngOnInit(): void {\n        this.setStyle(StyleProperty.Cursor, this.getCursor(this.getState()));\n        this.setStyle(StyleProperty.FlexBasis, coerceCssPixelValue(this.size));\n        this.setStyle(this.isVertical() ? StyleProperty.Height : StyleProperty.Width, coerceCssPixelValue(this.size));\n        this.setStyle(StyleProperty.Order, this.order);\n\n        if (!this.isVertical()) {\n            this.setStyle(StyleProperty.Height, '100%');\n        }\n\n        if (this.disabled) {\n            this.setAttr(AttributeProperty.Disabled, 'true');\n        }\n\n        // fix IE issue with gutter icon. flex-direction is requied for flex alignment options\n        this.setStyle(StyleProperty.FlexDirection, this.isVertical() ? 'row' : 'column');\n    }\n\n    private isVertical(): boolean {\n        return this.direction === Direction.Vertical;\n    }\n\n    private getCursor(state: State): string {\n        switch (state) {\n            case State.Disabled:\n                return Cursor.Default;\n            case State.Vertical:\n                return  Cursor.ResizeRow;\n            case State.Horizontal:\n                return Cursor.ResizeColumn;\n            default:\n                throw Error(`Unknown gutter state for cursor: ${state}`);\n        }\n    }\n\n    private getState(): State {\n        return this.disabled\n            ? State.Disabled\n            : this.direction === Direction.Vertical\n                ? State.Vertical\n                : State.Horizontal;\n    }\n\n    private setStyle(property: StyleProperty, value: string | number) {\n        this.renderer.setStyle(this.elementRef.nativeElement, property, value);\n    }\n\n    private setAttr(attribute: AttributeProperty, value: string) {\n        this.renderer.setAttribute(this.elementRef.nativeElement, attribute, value);\n    }\n}\n\n@Directive({\n    selector: 'mc-splitter-area'\n})\nexport class McSplitterAreaDirective implements OnInit, OnDestroy {\n    constructor(private elementRef: ElementRef,\n                private renderer: Renderer2,\n                private splitter: McSplitterComponent) {}\n\n    disableFlex(): void {\n        this.renderer.removeStyle(this.elementRef.nativeElement, 'flex');\n    }\n\n    ngOnInit(): void {\n        this.splitter.addArea(this);\n\n        this.removeStyle(StyleProperty.MaxWidth);\n        this.setStyle(StyleProperty.Flex, '1');\n\n        if (this.splitter.direction === Direction.Vertical) {\n            this.setStyle(StyleProperty.Width, '100%');\n            this.removeStyle(StyleProperty.Height);\n        } else {\n            this.setStyle(StyleProperty.Height, '100%');\n            this.removeStyle(StyleProperty.Width);\n        }\n    }\n\n    ngOnDestroy(): void {\n        this.splitter.removeArea(this);\n    }\n\n    setOrder(order: number): void {\n        this.setStyle(StyleProperty.Order, order);\n    }\n\n    setSize(size: number): void {\n        const sz = coerceNumberProperty(size);\n        this.setStyle(this.getSizeProperty(), coerceCssPixelValue(sz));\n    }\n\n    getSize(): number {\n        return this.elementRef.nativeElement[this.getOffsetSizeProperty()];\n    }\n\n    getMinSize(): number {\n        const styles = getComputedStyle(this.elementRef.nativeElement);\n\n        return parseFloat(styles[this.getMinSizeProperty()]);\n    }\n\n    private isVertical(): boolean {\n        return this.splitter.direction === Direction.Vertical;\n    }\n\n    private getMinSizeProperty(): StyleProperty {\n        return this.isVertical()\n            ? StyleProperty.MinHeight\n            : StyleProperty.MinWidth;\n    }\n\n    private getOffsetSizeProperty(): StyleProperty {\n        return this.isVertical()\n            ? StyleProperty.OffsetHeight\n            : StyleProperty.OffsetWidth;\n    }\n\n    private getSizeProperty(): StyleProperty {\n        return this.isVertical()\n            ? StyleProperty.Height\n            : StyleProperty.Width;\n    }\n\n    private setStyle(style: StyleProperty, value: string | number) {\n        this.renderer.setStyle(this.elementRef.nativeElement, style, value);\n    }\n\n    private removeStyle(style: StyleProperty) {\n        this.renderer.removeStyle(this.elementRef.nativeElement, style);\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { McIconModule } from '@ptsecurity/mosaic/icon';\n\nimport { McGutterDirective, McSplitterAreaDirective, McSplitterComponent } from './splitter.component';\n\n\n@NgModule({\n    imports: [\n        CommonModule,\n        McIconModule\n    ],\n    exports: [\n        McGutterDirective,\n        McSplitterAreaDirective,\n        McSplitterComponent\n    ],\n    declarations: [\n        McGutterDirective,\n        McSplitterAreaDirective,\n        McSplitterComponent\n    ]\n})\nexport class McSplitterModule {\n}\n","import { animate, state, style, transition, trigger } from '@angular/animations';\nimport {\n    Attribute,\n    ChangeDetectionStrategy, ChangeDetectorRef,\n    Component,\n    ElementRef, EventEmitter, forwardRef,\n    Input, Output, ViewChild,\n    ViewEncapsulation\n} from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { FocusMonitor } from '@ptsecurity/cdk/a11y';\nimport {\n    ThemePalette,\n    CanColor, CanColorCtor,\n    CanDisable, CanDisableCtor,\n    HasTabIndex, HasTabIndexCtor,\n    mixinColor,\n    mixinDisabled,\n    mixinTabIndex\n} from '@ptsecurity/mosaic/core';\n\n\nlet nextUniqueId = 0;\n\ntype ToggleLabelPositionType = 'left' | 'right';\n\nexport class McToggleBase {\n    constructor(public _elementRef: ElementRef) {}\n}\n\nexport const _McToggleMixinBase:\n    HasTabIndexCtor &\n    CanDisableCtor &\n    CanColorCtor &\n    typeof McToggleBase = mixinTabIndex(mixinColor(mixinDisabled(McToggleBase), ThemePalette.Primary));\n\nexport class McToggleChange {\n    source: McToggleComponent;\n    checked: boolean;\n}\n\n@Component({\n    selector: 'mc-toggle',\n    exportAs: 'mcToggle',\n    templateUrl: './toggle.component.html',\n    styleUrls: ['./toggle.css'],\n    providers: [\n        {provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => McToggleComponent), multi: true}\n    ],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n    inputs: ['disabled', 'color', 'tabIndex'],\n    host: {\n        class: 'mc-toggle',\n        '[id]': 'id',\n        '[attr.id]': 'id',\n        '[class.mc-disabled]': 'disabled',\n        '[class.mc-toggle_off]': '!checked'\n    },\n    animations: [\n        trigger('switch', [\n            state('true' , style({ left: '50%' })),\n            state('false', style({ left: '1px' })),\n            transition('true <=> false', animate('150ms'))\n        ])\n    ]\n})\nexport class McToggleComponent extends _McToggleMixinBase\n    implements ControlValueAccessor, CanColor, CanDisable, HasTabIndex {\n\n    @ViewChild('input') _inputElement: ElementRef;\n\n    @Input() labelPosition: ToggleLabelPositionType = 'right';\n\n    @Input('aria-label') ariaLabel: string = '';\n    @Input('aria-labelledby') ariaLabelledby: string | null = null;\n\n    private _uniqueId: string = `mc-toggle-${++nextUniqueId}`;\n\n    // tslint:disable:member-ordering\n    @Input() id: string = this._uniqueId;\n\n    get inputId(): string {\n        return `${this.id || this._uniqueId}-input`;\n    }\n\n    @Input() name: string | null = null;\n\n    @Input() value: string;\n\n    private _disabled: boolean = false;\n\n    @Input()\n    get disabled() {\n        return this._disabled;\n    }\n\n    set disabled(value: any) {\n        if (value !== this._disabled) {\n            this._disabled = value;\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n\n    private _checked: boolean = false;\n\n    get checked() {\n        return this._checked;\n    }\n\n    @Input()\n    set checked(value: boolean) {\n        if (value !== this._checked) {\n            this._checked = value;\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n\n    @Output() readonly change: EventEmitter<McToggleChange> =\n        new EventEmitter<McToggleChange>();\n\n    constructor(public _elementRef: ElementRef,\n                private _focusMonitor: FocusMonitor,\n                private _changeDetectorRef: ChangeDetectorRef,\n                @Attribute('tabindex') tabIndex: string\n    ) {\n        super(_elementRef);\n\n        this.tabIndex = parseInt(tabIndex) || 0;\n\n        this._focusMonitor.monitor(this._elementRef.nativeElement, true);\n    }\n\n    ngOnDestroy() {\n        this._focusMonitor.stopMonitoring(this._elementRef.nativeElement);\n    }\n\n    focus(): void {\n        this._focusMonitor.focusVia(this._inputElement.nativeElement, 'keyboard');\n    }\n\n    _getAriaChecked(): boolean {\n        return this.checked;\n    }\n\n    _onInteractionEvent(event: Event) {\n        event.stopPropagation();\n    }\n\n    _onLabelTextChange() {\n        this._changeDetectorRef.markForCheck();\n    }\n\n    _onInputClick(event: MouseEvent) {\n        event.stopPropagation();\n        this._updateModelValue();\n        this._emitChangeEvent();\n    }\n\n    writeValue(value: any) {\n        this.checked = !!value;\n    }\n\n    registerOnChange(fn: any) {\n        this._onChangeCallback = fn;\n    }\n\n    registerOnTouched(fn: any) {\n        this._onTouchedCallback = fn;\n    }\n\n    setDisabledState(isDisabled: boolean) {\n        this.disabled = isDisabled;\n    }\n\n    // tslint:disable-next-line:no-empty\n    private _onTouchedCallback = () => {};\n\n    // tslint:disable-next-line:no-empty\n    private _onChangeCallback = (_: any) => {};\n\n    private _updateModelValue() {\n        this._checked = !this.checked;\n        this._onChangeCallback(this.checked);\n        this._onTouchedCallback();\n    }\n\n    private _emitChangeEvent() {\n        const event = new McToggleChange();\n        event.source = this;\n        event.checked = this.checked;\n\n        this._onChangeCallback(this.checked);\n        this.change.emit(event);\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { A11yModule } from '@ptsecurity/cdk/a11y';\nimport { McCommonModule } from '@ptsecurity/mosaic/core';\n\nimport { McToggleComponent } from './toggle.component';\n\n\n@NgModule({\n    imports: [CommonModule, A11yModule, McCommonModule],\n    exports: [McToggleComponent],\n    declarations: [McToggleComponent]\n})\nexport class McToggleModule {\n}\n","import {\n    AfterContentChecked,\n    AfterContentInit,\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    ContentChildren,\n    ElementRef,\n    EventEmitter,\n    Input,\n    OnDestroy,\n    Output,\n    QueryList,\n    ViewChild,\n    ViewEncapsulation,\n    InjectionToken,\n    Inject,\n    Optional,\n    Directive, Attribute\n} from '@angular/core';\nimport { coerceBooleanProperty, coerceNumberProperty } from '@ptsecurity/cdk/coercion';\nimport {\n    CanColor,\n    CanColorCtor,\n    mixinColor,\n    mixinDisabled\n} from '@ptsecurity/mosaic/core';\nimport { merge, Subscription } from 'rxjs';\n\nimport { McTab } from './tab';\nimport { McTabHeader } from './tab-header';\n\n\n@Directive({\n    selector: 'mc-tab-group[mc-light-tabs], [mc-tab-nav-bar][mc-light-tabs]',\n    host: { class: 'mc-tab-group_light' }\n})\nexport class McLightTabsCssStyler { }\n\n@Directive({\n    selector: 'mc-tab-group[mc-align-tabs-center], [mc-tab-nav-bar][mc-align-tabs-center]',\n    host: { class: 'mc-tab-group_align-labels-center' }\n})\nexport class McAlignTabsCenterCssStyler { }\n\n@Directive({\n    selector: 'mc-tab-group[mc-align-tabs-end], [mc-tab-nav-bar][mc-align-tabs-end]',\n    host: { class: 'mc-tab-group_align-labels-end' }\n})\nexport class McAlignTabsEndCssStyler { }\n\n@Directive({\n    selector: 'mc-tab-group[mc-stretch-tabs], [mc-tab-nav-bar][mc-stretch-tabs]',\n    host: { class: 'mc-tab-group_stretch-labels' }\n})\nexport class McStretchTabsCssStyler { }\n\n/** Used to generate unique ID's for each tab component */\nlet nextId = 0;\n\n/** A simple change event emitted on focus or selection changes. */\nexport class McTabChangeEvent {\n    /** Index of the currently-selected tab. */\n    index: number;\n    /** Reference to the currently-selected tab. */\n    tab: McTab;\n}\n\n/** Possible positions for the tab header. */\nexport type McTabHeaderPosition = 'above' | 'below';\n\n/** Object that can be used to configure the default options for the tabs module. */\nexport interface IMcTabsConfig {\n    /** Duration for the tab animation. Must be a valid CSS value (e.g. 600ms). */\n    animationDuration?: string;\n}\n\n/** Injection token that can be used to provide the default options the tabs module. */\nexport const MC_TABS_CONFIG = new InjectionToken('MC_TABS_CONFIG');\n\n// Boilerplate for applying mixins to McTabGroup.\n/** @docs-private */\nexport class McTabGroupBase {\n    // tslint:disable-next-line:naming-convention\n    constructor(public _elementRef: ElementRef) { }\n}\nexport const mcTabGroupMixinBase:\n    CanColorCtor &\n    typeof McTabGroupBase =\n    mixinColor(mixinDisabled(McTabGroupBase));\n\n/**\n * Tab-group component.  Supports basic tab pairs (label + content) and includes\n * keyboard navigation.\n */\n@Component({\n    selector: 'mc-tab-group',\n    exportAs: 'mcTabGroup',\n    templateUrl: 'tab-group.html',\n    styleUrls: ['tab-group.css'],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    inputs: ['color'],\n    host: {\n        class: 'mc-tab-group',\n        '[class.mc-tab-group_dynamic-height]': 'dynamicHeight',\n        '[class.mc-tab-group_inverted-header]': 'headerPosition === \"below\"'\n    }\n})\nexport class McTabGroup extends mcTabGroupMixinBase implements AfterContentInit,\n    AfterContentChecked, OnDestroy, CanColor {\n    lightTab: boolean;\n\n    /** Whether the tab group should grow to the size of the active tab. */\n    @Input()\n    get dynamicHeight(): boolean { return this._dynamicHeight; }\n    set dynamicHeight(value: boolean) { this._dynamicHeight = coerceBooleanProperty(value); }\n\n    /** The index of the active tab. */\n    @Input()\n    get selectedIndex(): number | null { return this._selectedIndex; }\n    set selectedIndex(value: number | null) {\n        this.indexToSelect = coerceNumberProperty(value, null);\n    }\n\n    @ContentChildren(McTab) tabs: QueryList<McTab>;\n\n    @ViewChild('tabBodyWrapper') tabBodyWrapper: ElementRef;\n\n    @ViewChild('tabHeader') tabHeader: McTabHeader;\n\n    /** Position of the tab header. */\n    @Input() headerPosition: McTabHeaderPosition = 'above';\n\n    /** Duration for the tab animation. Must be a valid CSS value (e.g. 600ms). */\n    @Input() animationDuration: string;\n\n    /** Output to enable support for two-way binding on `[(selectedIndex)]` */\n    @Output() readonly selectedIndexChange: EventEmitter<number> = new EventEmitter<number>();\n\n    /** Event emitted when focus has changed within a tab group. */\n    @Output() readonly focusChange: EventEmitter<McTabChangeEvent> =\n        new EventEmitter<McTabChangeEvent>();\n\n    /** Event emitted when the body animation has completed */\n    @Output() readonly animationDone: EventEmitter<void> = new EventEmitter<void>();\n\n    /** Event emitted when the tab selection has changed. */\n    @Output() readonly selectedTabChange: EventEmitter<McTabChangeEvent> =\n        new EventEmitter<McTabChangeEvent>(true);\n\n    /** The tab index that should be selected after the content has been checked. */\n    private indexToSelect: number | null = 0;\n\n    /** Snapshot of the height of the tab body wrapper before another tab is activated. */\n    private tabBodyWrapperHeight: number = 0;\n\n    /** Subscription to tabs being added/removed. */\n    private tabsSubscription = Subscription.EMPTY;\n\n    /** Subscription to changes in the tab labels. */\n    private tabLabelSubscription = Subscription.EMPTY;\n    private _dynamicHeight: boolean = false;\n    private _selectedIndex: number | null = null;\n\n    private groupId: number;\n\n    constructor(\n        elementRef: ElementRef,\n        private changeDetectorRef: ChangeDetectorRef,\n        @Attribute('mc-light-tabs') lightTabs: string,\n        @Inject(MC_TABS_CONFIG) @Optional() defaultConfig?: IMcTabsConfig\n    ) {\n        super(elementRef);\n\n        this.lightTab = coerceBooleanProperty(lightTabs);\n\n        this.groupId = nextId++;\n        this.animationDuration = defaultConfig && defaultConfig.animationDuration ?\n            defaultConfig.animationDuration : '0ms';\n    }\n\n    /**\n     * After the content is checked, this component knows what tabs have been defined\n     * and what the selected index should be. This is where we can know exactly what position\n     * each tab should be in according to the new selected index, and additionally we know how\n     * a new selected tab should transition in (from the left or right).\n     */\n    ngAfterContentChecked() {\n        // Don't clamp the `indexToSelect` immediately in the setter because it can happen that\n        // the amount of tabs changes before the actual change detection runs.\n        const indexToSelect = this.indexToSelect = this.clampTabIndex(this.indexToSelect);\n\n        // If there is a change in selected index, emit a change event. Should not trigger if\n        // the selected index has not yet been initialized.\n        if (this._selectedIndex !== indexToSelect) {\n            const isFirstRun = this._selectedIndex == null;\n\n            if (!isFirstRun) {\n                this.selectedTabChange.emit(this.createChangeEvent(indexToSelect));\n            }\n\n            // Changing these values after change detection has run\n            // since the checked content may contain references to them.\n            Promise.resolve().then(() => {\n                this.tabs.forEach((tab, index) => tab.isActive = index === indexToSelect);\n\n                if (!isFirstRun) {\n                    this.selectedIndexChange.emit(indexToSelect);\n                }\n            });\n        }\n\n        // Setup the position for each tab and optionally setup an origin on the next selected tab.\n        this.tabs.forEach((tab: McTab, index: number) => {\n            tab.position = index - indexToSelect;\n\n            // If there is already a selected tab, then set up an origin for the next selected tab\n            // if it doesn't have one already.\n            if (this._selectedIndex != null && tab.position === 0 && !tab.origin) {\n                tab.origin = indexToSelect - this._selectedIndex;\n            }\n        });\n\n        if (this._selectedIndex !== indexToSelect) {\n            this._selectedIndex = indexToSelect;\n            this.changeDetectorRef.markForCheck();\n        }\n    }\n\n    ngAfterContentInit() {\n        this.subscribeToTabLabels();\n\n        // Subscribe to changes in the amount of tabs, in order to be\n        // able to re-render the content as new tabs are added or removed.\n        this.tabsSubscription = this.tabs.changes.subscribe(() => {\n            const indexToSelect = this.clampTabIndex(this.indexToSelect);\n\n            // Maintain the previously-selected tab if a new tab is added or removed and there is no\n            // explicit change that selects a different tab.\n            if (indexToSelect === this._selectedIndex) {\n                const tabs = this.tabs.toArray();\n\n                for (let i = 0; i < tabs.length; i++) {\n                    if (tabs[i].isActive) {\n                        // Assign both to the `_indexToSelect` and `_selectedIndex` so we don't fire a changed\n                        // event, otherwise the consumer may end up in an infinite loop in some edge cases like\n                        // adding a tab within the `selectedIndexChange` event.\n                        this.indexToSelect = this._selectedIndex = i;\n                        break;\n                    }\n                }\n            }\n\n            this.subscribeToTabLabels();\n            this.changeDetectorRef.markForCheck();\n        });\n    }\n\n    ngOnDestroy() {\n        this.tabsSubscription.unsubscribe();\n        this.tabLabelSubscription.unsubscribe();\n    }\n\n    focusChanged(index: number) {\n        this.focusChange.emit(this.createChangeEvent(index));\n    }\n\n    /** Returns a unique id for each tab label element */\n    getTabLabelId(i: number): string {\n        return `mc-tab-label-${this.groupId}-${i}`;\n    }\n\n    /** Returns a unique id for each tab content element */\n    getTabContentId(i: number): string {\n        return `mc-tab-content-${this.groupId}-${i}`;\n    }\n\n    /**\n     * Sets the height of the body wrapper to the height of the activating tab if dynamic\n     * height property is true.\n     */\n    setTabBodyWrapperHeight(tabHeight: number): void {\n        if (!this._dynamicHeight || !this.tabBodyWrapperHeight) { return; }\n\n        const wrapper: HTMLElement = this.tabBodyWrapper.nativeElement;\n\n        wrapper.style.height = `${this.tabBodyWrapperHeight}px`;\n\n        // This conditional forces the browser to paint the height so that\n        // the animation to the new height can have an origin.\n        if (this.tabBodyWrapper.nativeElement.offsetHeight) {\n            wrapper.style.height = `${tabHeight}px`;\n        }\n    }\n\n    /** Removes the height of the tab body wrapper. */\n    removeTabBodyWrapperHeight(): void {\n        this.tabBodyWrapperHeight = this.tabBodyWrapper.nativeElement.clientHeight;\n        this.tabBodyWrapper.nativeElement.style.height = '';\n        this.animationDone.emit();\n    }\n\n    /** Handle click events, setting new selected index if appropriate. */\n    handleClick(tab: McTab, tabHeader: McTabHeader, index: number) {\n        if (!tab.disabled) {\n            this.selectedIndex = tabHeader.focusIndex = index;\n        }\n    }\n\n    /** Retrieves the tabindex for the tab. */\n    getTabIndex(tab: McTab, index: number): number | null {\n        if (tab.disabled) {\n            return null;\n        }\n\n        return this.selectedIndex === index ? 0 : -1;\n    }\n\n    private createChangeEvent(index: number): McTabChangeEvent {\n        const event = new McTabChangeEvent();\n        event.index = index;\n        if (this.tabs && this.tabs.length) {\n            event.tab = this.tabs.toArray()[index];\n        }\n\n        return event;\n    }\n\n    /**\n     * Subscribes to changes in the tab labels. This is needed, because the @Input for the label is\n     * on the McTab component, whereas the data binding is inside the McTabGroup. In order for the\n     * binding to be updated, we need to subscribe to changes in it and trigger change detection\n     * manually.\n     */\n    private subscribeToTabLabels() {\n        if (this.tabLabelSubscription) {\n            this.tabLabelSubscription.unsubscribe();\n        }\n\n        this.tabLabelSubscription = merge(...this.tabs.map((tab) => tab.stateChanges))\n            .subscribe(() => this.changeDetectorRef.markForCheck());\n    }\n\n    /** Clamps the given index to the bounds of 0 and the tabs length. */\n    private clampTabIndex(index: number | null): number {\n        // Note the `|| 0`, which ensures that values like NaN can't get through\n        // and which would otherwise throw the component into an infinite loop\n        // (since Mch.max(NaN, 0) === NaN).\n        return Math.min(this.tabs.length - 1, Math.max(index || 0, 0));\n    }\n}\n","import {\n    Attribute,\n    ChangeDetectionStrategy,\n    Component,\n    Directive,\n    ElementRef,\n    Input,\n    OnDestroy,\n    ViewEncapsulation\n} from '@angular/core';\nimport { FocusMonitor } from '@ptsecurity/cdk/a11y';\nimport {\n    CanColor,\n    CanColorCtor,\n    CanDisable,\n    CanDisableCtor,\n    HasTabIndex,\n    HasTabIndexCtor,\n    mixinColor,\n    mixinDisabled,\n    mixinTabIndex\n} from '@ptsecurity/mosaic/core';\n\n\n// Boilerplate for applying mixins to McTabNav.\n/** @docs-private */\nexport class McTabNavBase {\n    // tslint:disable-next-line:naming-convention\n    constructor(public _elementRef: ElementRef) {}\n}\nexport const mcTabNavMixinBase: CanColorCtor &\n    typeof McTabNavBase = mixinColor(McTabNavBase);\n\n/**\n * Navigation component matching the styles of the tab group header.\n */\n@Component({\n    selector: '[mc-tab-nav-bar]',\n    exportAs: 'mcTabNavBar, mcTabNav',\n    inputs: ['color'],\n    templateUrl: 'tab-nav-bar.html',\n    styleUrls: ['tab-nav-bar.css'],\n    host: { class: 'mc-tab-nav-bar' },\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class McTabNav extends mcTabNavMixinBase\n    implements CanColor {\n        constructor(elementRef: ElementRef) {\n            super(elementRef);\n        }\n     }\n\n// Boilerplate for applying mixins to McTabLink.\nexport class McTabLinkBase {}\nexport const mcTabLinkMixinBase: HasTabIndexCtor & CanDisableCtor &\n    typeof McTabLinkBase = mixinTabIndex(mixinDisabled(McTabLinkBase));\n\n/**\n * Link inside of a `mc-tab-nav-bar`.\n */\n@Directive({\n    selector: '[mc-tab-link], [mcTabLink]',\n    exportAs: 'mcTabLink',\n    inputs: ['disabled', 'tabIndex'],\n    host: {\n        class: 'mc-tab-link',\n        '[attr.aria-current]': 'active',\n        '[attr.aria-disabled]': 'disabled.toString()',\n        '[attr.tabIndex]': 'tabIndex',\n        '[class.mc-disabled]': 'disabled',\n        '[class.mc-active]': 'active'\n    }\n})\nexport class McTabLink extends mcTabLinkMixinBase\n    implements OnDestroy, CanDisable, HasTabIndex {\n    /** Whether the link is active. */\n    @Input()\n    get active(): boolean {\n        return this.isActive;\n    }\n    set active(value: boolean) {\n        if (value !== this.isActive) {\n            this.isActive = value;\n        }\n    }\n\n    /** Whether the tab link is active or not. */\n    protected isActive: boolean = false;\n\n    constructor(\n        public elementRef: ElementRef,\n        @Attribute('tabindex') tabIndex: string,\n        private focusMonitor: FocusMonitor\n    ) {\n        super();\n\n        this.tabIndex = parseInt(tabIndex) || 0;\n        this.focusMonitor.monitor(this.elementRef.nativeElement);\n    }\n\n    ngOnDestroy() {\n        this.focusMonitor.stopMonitoring(this.elementRef.nativeElement);\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { A11yModule } from '@ptsecurity/cdk/a11y';\nimport { PortalModule } from '@ptsecurity/cdk/portal';\nimport { McCommonModule } from '@ptsecurity/mosaic/core';\n\nimport { McTab } from './tab';\nimport { McTabBody, McTabBodyPortal } from './tab-body';\nimport { McTabContent } from './tab-content';\nimport {\n    McTabGroup,\n    McLightTabsCssStyler,\n    McAlignTabsCenterCssStyler,\n    McAlignTabsEndCssStyler,\n    McStretchTabsCssStyler\n} from './tab-group';\nimport { McTabHeader } from './tab-header';\nimport { McTabLabel } from './tab-label';\nimport { McTabLabelWrapper } from './tab-label-wrapper';\nimport { McTabLink, McTabNav } from './tab-nav-bar/tab-nav-bar';\n\n\n@NgModule({\n    imports: [\n        CommonModule,\n        McCommonModule,\n        PortalModule,\n        A11yModule\n    ],\n    // Don't export all components because some are only to be used internally.\n    exports: [\n        McCommonModule,\n        McTabGroup,\n        McTabLabel,\n        McTab,\n        McTabNav,\n        McTabLink,\n        McTabContent,\n        McLightTabsCssStyler,\n        McAlignTabsCenterCssStyler,\n        McAlignTabsEndCssStyler,\n        McStretchTabsCssStyler\n    ],\n    declarations: [\n        McTabGroup,\n        McTabLabel,\n        McTab,\n        McTabLabelWrapper,\n        McTabNav,\n        McTabLink,\n        McTabBody,\n        McTabBodyPortal,\n        McTabHeader,\n        McTabContent,\n        McLightTabsCssStyler,\n        McAlignTabsCenterCssStyler,\n        McAlignTabsEndCssStyler,\n        McStretchTabsCssStyler\n    ]\n})\nexport class McTabsModule {}\n","import {\n    ElementRef,\n    QueryList,\n    ContentChildren,\n    Component,\n    ChangeDetectionStrategy,\n    ViewEncapsulation\n} from '@angular/core';\n\nimport {\n    mixinColor,\n    CanColor,\n    CanColorCtor,\n    CanDisable,\n    CanDisableCtor,\n    mixinDisabled\n} from '@ptsecurity/mosaic/core';\nimport { McIcon } from '@ptsecurity/mosaic/icon';\n\n\nexport class McTagBase {\n    constructor(public _elementRef: ElementRef) {}\n}\n\nexport const _McTagMixinBase: CanColorCtor & CanDisableCtor & typeof McTagBase = mixinColor(mixinDisabled(McTagBase));\n\n\n@Component({\n    selector: 'mc-tag',\n    templateUrl: 'tag.partial.html',\n    styleUrls: ['./tag.css'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n    host: {\n        class: 'mc-tag',\n        '[class.mc-disabled]': 'disabled'\n    },\n    inputs: ['color', 'disabled']\n})\nexport class McTag extends _McTagMixinBase implements CanColor, CanDisable {\n    @ContentChildren(McIcon) contentChildren: QueryList<McIcon>;\n\n    nativeElement: HTMLElement;\n\n    private _disabled: boolean = false;\n\n    get disabled() {\n        return this._disabled;\n    }\n\n    set disabled(value: any) {\n        if (value !== this.disabled) { this._disabled = value; }\n    }\n\n    constructor(elementRef: ElementRef) {\n        super(elementRef);\n\n        this.nativeElement = elementRef.nativeElement;\n    }\n\n    ngAfterContentInit() {\n        this._addClassModificatorForIcons();\n    }\n\n    _addClassModificatorForIcons() {\n        const icons = this.contentChildren.map((item) => item._elementRef.nativeElement);\n\n        if (icons.length === 1) {\n            const iconElement = icons[0];\n\n            if (!iconElement.previousElementSibling && !iconElement.nextElementSibling) {\n                if (iconElement.nextSibling) {\n                    iconElement.classList.add('mc-icon_left');\n                    this.nativeElement.classList.add('mc-left-icon');\n                }\n\n                if (iconElement.previousSibling) {\n                    iconElement.classList.add('mc-icon_right');\n                    this.nativeElement.classList.add('mc-right-icon');\n                }\n            }\n        } else if (icons.length > 1) {\n            const firstIconElement = icons[0];\n            const secondIconElement = icons[1];\n\n            firstIconElement.classList.add('mc-icon_left');\n            secondIconElement.classList.add('mc-icon_right');\n        }\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { PlatformModule } from '@ptsecurity/cdk/platform';\n\nimport { McTag } from './tag.component';\n\n\n@NgModule({\n    imports: [\n        CommonModule,\n        PlatformModule\n    ],\n    exports: [\n        McTag\n    ],\n    declarations: [\n        McTag\n    ]\n})\nexport class McTagModule {}\n","import {\n    Directive, DoCheck, ElementRef, Inject,\n    Input, OnChanges, OnDestroy, Optional,\n    Self, InjectionToken, NgZone, OnInit\n} from '@angular/core';\nimport { FormGroupDirective, NgControl, NgForm } from '@angular/forms';\nimport { coerceBooleanProperty } from '@ptsecurity/cdk/coercion';\nimport {\n    CanUpdateErrorState,\n    CanUpdateErrorStateCtor,\n    ErrorStateMatcher,\n    mixinErrorState\n} from '@ptsecurity/mosaic/core';\nimport { McFormFieldControl } from '@ptsecurity/mosaic/form-field';\nimport { fromEvent, Subscription, Subject } from 'rxjs';\nimport { distinctUntilChanged, map } from 'rxjs/operators';\n\n\nexport const MC_TEXTAREA_VALUE_ACCESSOR =\n    new InjectionToken<{ value: any }>('MC_TEXTAREA_VALUE_ACCESSOR');\n\nlet nextUniqueId = 0;\n\nconst ROW_SEPARATOR = '\\n';\n\nexport class McTextareaBase {\n    constructor(public _defaultErrorStateMatcher: ErrorStateMatcher,\n                public _parentForm: NgForm,\n                public _parentFormGroup: FormGroupDirective,\n                public ngControl: NgControl) {\n    }\n}\n\n// tslint:disable-next-line:naming-convention\nexport const McTextareaMixinBase: CanUpdateErrorStateCtor & typeof McTextareaBase = mixinErrorState(McTextareaBase);\n\n@Directive({\n    selector: 'textarea[mcTextarea]',\n    exportAs: 'mcTextarea',\n    host: {\n        class: 'mc-textarea',\n        '[class.mc-textarea-resizable]': '!canGrow',\n        '[attr.id]': 'id',\n        '[attr.placeholder]': 'placeholder',\n        '[disabled]': 'disabled',\n        '[required]': 'required',\n        '(blur)': 'focusChanged(false)',\n        '(focus)': 'focusChanged(true)'\n    },\n    providers: [{ provide: McFormFieldControl, useExisting: McTextarea }]\n})\nexport class McTextarea extends McTextareaMixinBase implements McFormFieldControl<any>, OnInit, OnChanges,\n    OnDestroy, DoCheck, CanUpdateErrorState {\n\n    @Input() canGrow: boolean = true;\n\n    /** An object used to control when error messages are shown. */\n    @Input() errorStateMatcher: ErrorStateMatcher;\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    focused: boolean = false;\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    readonly stateChanges: Subject<void> = new Subject<void>();\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    controlType: string = 'mc-textarea';\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    @Input()\n    get disabled(): boolean {\n        if (this.ngControl && this.ngControl.disabled !== null) {\n            return this.ngControl.disabled;\n        }\n\n        return this._disabled;\n    }\n\n    set disabled(value: boolean) {\n        this._disabled = coerceBooleanProperty(value);\n\n        if (this.focused) {\n            this.focused = false;\n            this.stateChanges.next();\n        }\n    }\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    @Input()\n    get id(): string {\n        return this._id;\n    }\n\n    set id(value: string) {\n        this._id = value || this.uid;\n    }\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    @Input() placeholder: string;\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    @Input()\n    get required(): boolean {\n        return this._required;\n    }\n\n    set required(value: boolean) {\n        this._required = coerceBooleanProperty(value);\n    }\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    @Input()\n    get value(): string {\n        return this.valueAccessor.value;\n    }\n\n    set value(value: string) {\n        if (value !== this.value) {\n            this.valueAccessor.value = value;\n            this.stateChanges.next();\n        }\n    }\n\n    protected uid = `mc-textsrea-${nextUniqueId++}`;\n    protected previousNativeValue: any;\n    protected _disabled = false;\n    protected _id: string;\n    protected _required = false;\n\n    private valueAccessor: { value: any };\n    private growSubscription: Subscription;\n\n    private lineHeight: number = 0;\n    private freeRowsHeight: number = 0;\n    private minHeight: number = 0;\n\n    constructor(protected elementRef: ElementRef,\n                @Optional() @Self() public ngControl: NgControl,\n                @Optional() _parentForm: NgForm,\n                @Optional() _parentFormGroup: FormGroupDirective,\n                _defaultErrorStateMatcher: ErrorStateMatcher,\n                @Optional() @Self() @Inject(MC_TEXTAREA_VALUE_ACCESSOR) inputValueAccessor: any,\n                private ngZone: NgZone) {\n        super(_defaultErrorStateMatcher, _parentForm, _parentFormGroup, ngControl);\n        // If no input value accessor was explicitly specified, use the element as the textarea value\n        // accessor.\n        this.valueAccessor = inputValueAccessor || this.elementRef.nativeElement;\n\n        this.previousNativeValue = this.value;\n\n        // Force setter to be called in case id was not specified.\n        this.id = this.id;\n\n        const growObserver = fromEvent(elementRef.nativeElement, 'input')\n            /*.pipe(\n                map((event: any) => this.getGrowHeight()),\n                // map((event: any) => event.target.scrollHeight),\n                distinctUntilChanged()\n            )*/;\n        this.growSubscription = growObserver.subscribe(this.grow.bind(this));\n    }\n\n    ngOnInit() {\n        setTimeout(() => this.grow(), 0);\n        this.lineHeight = parseInt(getComputedStyle(this.elementRef.nativeElement).lineHeight!, 10);\n\n        const paddingTop = parseInt(getComputedStyle(this.elementRef.nativeElement).paddingTop!, 10);\n        const paddingBottom = parseInt(getComputedStyle(this.elementRef.nativeElement).paddingBottom!, 10);\n\n        // tslint:disable-next-line:no-magic-numbers\n        this.minHeight = this.lineHeight * 2 + paddingTop + paddingBottom;\n        this.freeRowsHeight = this.lineHeight;\n    }\n\n    ngOnChanges() {\n        this.stateChanges.next();\n    }\n\n    ngOnDestroy() {\n        this.stateChanges.complete();\n        this.growSubscription.unsubscribe();\n    }\n\n    ngDoCheck() {\n        if (this.ngControl) {\n            // We need to re-evaluate this on every change detection cycle, because there are some\n            // error triggers that we can't subscribe to (e.g. parent form submissions). This means\n            // that whatever logic is in here has to be super lean or we risk destroying the performance.\n            this.updateErrorState();\n        }\n\n        // We need to dirty-check the native element's value, because there are some cases where\n        // we won't be notified when it changes (e.g. the consumer isn't using forms or they're\n        // updating the value using `emitEvent: false`).\n        this.dirtyCheckNativeValue();\n    }\n\n    /** Grow textarea height to avoid vertical scroll  */\n    grow() {\n        if (!this.canGrow) {\n            return;\n        }\n\n        this.ngZone.runOutsideAngular(() => {\n            const textarea = this.elementRef.nativeElement;\n\n            const outerHeight = parseInt(window.getComputedStyle(textarea).height!, 10);\n            const diff = outerHeight - textarea.clientHeight;\n\n            textarea.style.height = 0; // this line is important to height recalculation\n\n            const height = Math.max(this.minHeight, textarea.scrollHeight + diff + this.freeRowsHeight);\n            textarea.style.height = `${height}px`;\n        });\n    }\n\n    /** Focuses the textarea. */\n    focus(): void {\n        this.elementRef.nativeElement.focus();\n    }\n\n    /** Callback for the cases where the focused state of the textarea changes. */\n    focusChanged(isFocused: boolean) {\n        if (isFocused !== this.focused) {\n            this.focused = isFocused;\n            this.stateChanges.next();\n        }\n    }\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    get empty(): boolean {\n        return !this.elementRef.nativeElement.value && !this.isBadInput();\n    }\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    onContainerClick() {\n        this.focus();\n    }\n\n    /** Does some manual dirty checking on the native textarea `value` property. */\n    protected dirtyCheckNativeValue() {\n        const newValue = this.value;\n\n        if (this.previousNativeValue !== newValue) {\n            this.previousNativeValue = newValue;\n            this.stateChanges.next();\n        }\n    }\n\n    /** Checks whether the textarea is invalid based on the native validation. */\n    protected isBadInput(): boolean {\n        // The `validity` property won't be present on platform-server.\n        const validity = (this.elementRef.nativeElement as HTMLTextAreaElement).validity;\n\n        return validity && validity.badInput;\n    }\n\n    private getGrowHeight(): number {\n        const textarea = this.elementRef.nativeElement;\n        const outerHeight = parseInt(window.getComputedStyle(textarea).height!.toString(), 10);\n        const diff = outerHeight - textarea.clientHeight;\n\n        return Math.max(this.minHeight, textarea.scrollHeight + diff);\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { A11yModule } from '@ptsecurity/cdk/a11y';\nimport { McCommonModule } from '@ptsecurity/mosaic/core';\n\nimport { McTextarea } from './textarea.component';\n\n\n@NgModule({\n    imports: [CommonModule, A11yModule, McCommonModule, FormsModule],\n    exports: [McTextarea],\n    declarations: [McTextarea]\n})\nexport class McTextareaModule {\n}\n","import {\n    Directive,\n    DoCheck,\n    ElementRef,\n    forwardRef,\n    Inject,\n    InjectionToken,\n    Input,\n    OnChanges,\n    OnDestroy,\n    Optional,\n    Renderer2,\n    Self\n} from '@angular/core';\nimport {\n    ControlValueAccessor,\n    FormControl,\n    FormGroupDirective,\n    NG_VALIDATORS,\n    NgControl,\n    NgForm,\n    ValidationErrors,\n    ValidatorFn,\n    Validators\n} from '@angular/forms';\nimport {\n    noop,\n    Subject\n} from 'rxjs';\n\nimport { coerceBooleanProperty } from '@ptsecurity/cdk/coercion';\nimport {\n    CanUpdateErrorState,\n    CanUpdateErrorStateCtor,\n    ErrorStateMatcher,\n    mixinErrorState\n} from '@ptsecurity/mosaic/core';\nimport { McFormFieldControl } from '@ptsecurity/mosaic/form-field';\n\nimport {\n    ARROW_DOWN_KEYCODE,\n    ARROW_LEFT_KEYCODE,\n    ARROW_RIGHT_KEYCODE,\n    ARROW_UP_KEYCODE,\n    DEFAULT_TIME_FORMAT,\n    HOURS_PER_DAY,\n    HOURS_MINUTES_REGEXP,\n    HOURS_MINUTES_SECONDS_REGEXP,\n    HOURS_ONLY_REGEXP,\n    MINUTES_PER_HOUR,\n    SECONDS_PER_MINUTE,\n    TIMEFORMAT_PLACEHOLDERS,\n    TimeFormats,\n    TimeParts\n} from './timepicker.constants';\n\n\nlet uniqueComponentIdSuffix: number = 0;\nlet validatorOnChange: () => void = noop;\nlet validator: ValidatorFn | null = () => null;\n\nexport const MC_INPUT_VALUE_ACCESSOR =\n    new InjectionToken<{ value: any }>('MC_INPUT_VALUE_ACCESSOR');\n\nexport class McTimepickerBase {\n    constructor(\n        public _defaultErrorStateMatcher: ErrorStateMatcher,\n        public _parentForm: NgForm,\n        public _parentFormGroup: FormGroupDirective,\n        public ngControl: NgControl) { }\n}\n\n// tslint:disable-next-line naming-convention\nexport const McTimepickerMixinBase:\n    CanUpdateErrorStateCtor &\n    typeof McTimepickerBase = mixinErrorState(McTimepickerBase);\n\n@Directive({\n    selector: 'input[mcTimepicker]',\n    exportAs: 'mcTimepickerInput',\n    host: {\n        class: 'mc-timepicker mc-input',\n        // Native input properties that are overwritten by Angular inputs need to be synced with\n        // the native input element. Otherwise property bindings for those don't work.\n        '[attr.id]': 'id',\n        '[attr.placeholder]': 'placeholder',\n        '[disabled]': 'disabled',\n        '[required]': 'required',\n        '[attr.time-format]': 'timeFormat',\n        '[attr.min-time]': 'minTime',\n        '[attr.max-time]': 'maxTime',\n        '[attr.value]': 'value',\n        '(blur)': 'onBlur()',\n        '(focus)': 'focusChanged(true)',\n        '(input)': 'onInput()',\n        '(paste)': 'onPaste($event)',\n        '(keydown)': 'onKeyDown($event)'\n    },\n    providers: [\n        {\n            provide: NG_VALIDATORS,\n            useValue: {\n                validate(c) { return validator ? validator(c) : null; },\n                registerOnValidatorChange(fn: () => void): void { validatorOnChange = fn; }\n            },\n            multi: true\n        },\n        {\n            provide: McFormFieldControl,\n            useExisting: forwardRef(() => McTimepicker)\n        }\n    ]\n\n})\nexport class McTimepicker extends McTimepickerMixinBase\n    implements McFormFieldControl<any>,\n        OnChanges,\n        OnDestroy,\n        DoCheck,\n        CanUpdateErrorState,\n        ControlValueAccessor {\n\n    /** An object used to control when error messages are shown. */\n    @Input() errorStateMatcher: ErrorStateMatcher;\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    focused: boolean = false;\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    readonly stateChanges: Subject<void> = new Subject<void>();\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    controlType: string = 'mc-timepicker';\n\n    @Input()\n    get disabled(): boolean {\n        if (this.ngControl && this.ngControl.disabled !== null) { return this.ngControl.disabled; }\n\n        return this._disabled;\n    }\n\n    set disabled(value: boolean) {\n        this._disabled = coerceBooleanProperty(value);\n\n        // Browsers may not fire the blur event if the input is disabled too quickly.\n        // Reset from here to ensure that the element doesn't become stuck.\n        if (this.focused) {\n            this.focused = false;\n        }\n\n        this.stateChanges.next();\n    }\n\n    @Input()\n    get id(): string { return this._id; }\n\n    set id(value: string) { this._id = value || this.uid; }\n\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    @Input() placeholder: string;\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    @Input()\n    get required(): boolean { return this._required; }\n\n    set required(value: boolean) { this._required = coerceBooleanProperty(value); }\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    @Input()\n    get value(): string { return this.inputValueAccessor.value; }\n\n    set value(value: string) {\n        if (value !== this.value) {\n            this.inputValueAccessor.value = value;\n            this.applyInputChanges();\n        }\n    }\n\n    @Input('time-format')\n    get timeFormat(): TimeFormats { return this._timeFormat; }\n\n    set timeFormat(formatValue: TimeFormats) {\n        this._timeFormat = Object\n            .keys(TimeFormats)\n            .map((timeFormatKey) => TimeFormats[timeFormatKey])\n            .indexOf(formatValue) > -1 ? formatValue : DEFAULT_TIME_FORMAT;\n\n        validatorOnChange();\n        this.placeholder = TIMEFORMAT_PLACEHOLDERS[this._timeFormat];\n    }\n\n    @Input('min-time')\n    get minTime(): string | null { return this._minTime; }\n\n    set minTime(minValue: string | null) {\n        this._minTime = minValue;\n        this.minDateTime = minValue !== null ? this.getDateFromTimeString(minValue) : undefined;\n        validatorOnChange();\n    }\n\n    @Input('max-time')\n    get maxTime(): string | null { return this._maxTime; }\n\n    set maxTime(maxValue: string | null) {\n        this._maxTime = maxValue;\n        this.maxDateTime = maxValue !== null ? this.getDateFromTimeString(maxValue) : undefined;\n        validatorOnChange();\n    }\n\n    private _id: string;\n    private readonly uid = `mc-timepicker-${uniqueComponentIdSuffix++}`;\n    private _disabled: boolean;\n    private _required: boolean;\n    private previousNativeValue: any;\n    private readonly inputValueAccessor: { value: any };\n    private onChange: (value: any) => void;\n    private onTouched: () => void;\n    private _timeFormat: TimeFormats;\n    private _minTime: string | null = null;\n    private minDateTime: Date | undefined;\n    private _maxTime: string | null = null;\n    private maxDateTime: Date | undefined;\n    private currentDateTimeInput: Date | undefined;\n\n    constructor(private readonly elementRef: ElementRef,\n                @Optional() @Self() public ngControl: NgControl,\n                @Optional() _parentForm: NgForm,\n                @Optional() _parentFormGroup: FormGroupDirective,\n                _defaultErrorStateMatcher: ErrorStateMatcher,\n                @Optional() @Self() @Inject(MC_INPUT_VALUE_ACCESSOR) inputValueAccessor: any,\n                private readonly renderer: Renderer2) {\n        super(_defaultErrorStateMatcher, _parentForm, _parentFormGroup, ngControl);\n\n        // If no input value accessor was explicitly specified, use the element as the input value\n        // accessor.\n        this.inputValueAccessor = inputValueAccessor || this.elementRef.nativeElement;\n\n        this.previousNativeValue = this.value;\n        this.onChange = noop;\n\n        // Force setter to be called in case id was not specified.\n        this.id = this.id;\n\n        this.placeholder = TIMEFORMAT_PLACEHOLDERS[DEFAULT_TIME_FORMAT];\n\n        // Instead of NG_VALUE_ACCESSOR (https://github.com/angular/material2/issues/8158#issuecomment-344618103)\n        if (this.ngControl) { this.ngControl.valueAccessor = this; }\n\n        // Substitute initial empty validator with validator linked to directive object instance (workaround)\n        validator = Validators.compose([\n            () => this.parseValidator(),\n            () => this.minTimeValidator(),\n            () => this.maxTimeValidator()\n        ]);\n    }\n\n    ngOnChanges(): void {\n        this.stateChanges.next();\n    }\n\n    ngOnDestroy(): void {\n        this.stateChanges.complete();\n    }\n\n    ngDoCheck(): void {\n        if (this.ngControl) {\n            // We need to re-evaluate this on every change detection cycle, because there are some\n            // error triggers that we can't subscribe to (e.g. parent form submissions). This means\n            // that whatever logic is in here has to be super lean or we risk destroying the performance.\n            this.updateErrorState();\n        }\n\n        // We need to dirty-check the native element's value, because there are some cases where\n        // we won't be notified when it changes (e.g. the consumer isn't using forms or they're\n        // updating the value using `emitEvent: false`).\n        this.dirtyCheckNativeValue();\n    }\n\n    focus(): void {\n        this.elementRef.nativeElement.focus();\n    }\n\n    focusChanged(isFocused: boolean): void {\n        if (isFocused !== this.focused) {\n            this.focused = isFocused;\n            this.onTouched();\n            this.stateChanges.next();\n        }\n    }\n\n    onBlur() {\n        this.applyInputChanges();\n        this.focusChanged(false);\n    }\n\n    onPaste($event) {\n        $event.preventDefault();\n        const clipboardUserInput: string = $event.clipboardData.getData('text');\n\n        if (this.getDateFromTimeString(clipboardUserInput) === undefined) { return; }\n\n        this.elementRef.nativeElement.value = clipboardUserInput;\n        this.onInput();\n    }\n\n    onInput() {\n        const initialCursorStart: number = this.elementRef.nativeElement.selectionStart;\n        const initialCursorEnd: number = this.elementRef.nativeElement.selectionEnd;\n        let isAutocompleteTriggered: boolean = false;\n\n        const {\n            hoursOnly,\n            hoursAndMinutes,\n            hoursAndMinutesAndSeconds\n        } = this.getParsedTimeParts(this.elementRef.nativeElement.value);\n\n        // tslint:disable no-magic-numbers\n        if (hoursOnly &&\n            hoursOnly[1] &&\n            hoursOnly[1].length === 2) {\n            isAutocompleteTriggered = true;\n        } else if (hoursAndMinutes &&\n            hoursAndMinutes[1].length === 1 &&\n            hoursAndMinutes[2] &&\n            hoursAndMinutes[2].length === 2) {\n            isAutocompleteTriggered = true;\n        } else if (hoursAndMinutesAndSeconds &&\n            hoursAndMinutesAndSeconds[1].length === 2 &&\n            hoursAndMinutesAndSeconds[2].length === 2 &&\n            hoursAndMinutesAndSeconds[3] &&\n            hoursAndMinutesAndSeconds[3].length === 2) {\n            isAutocompleteTriggered = true;\n        }\n        // tslint:enable no-magic-numbers\n\n        this.applyInputChanges({ doTimestringReformat: isAutocompleteTriggered });\n\n        this.elementRef.nativeElement.selectionStart = initialCursorStart;\n        this.elementRef.nativeElement.selectionEnd = initialCursorEnd;\n\n        if (isAutocompleteTriggered && this.ngControl.errors === null) {\n            this.createSelectionOfTimeComponentInInput(initialCursorStart + 1);\n        }\n    }\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    get empty(): boolean {\n        return !this.elementRef.nativeElement.value && !this.isBadInput();\n    }\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    onContainerClick() {\n        this.focus();\n    }\n\n    writeValue(value: Date | null): void {\n        if (value !== null) {\n            this.renderer.setProperty(this.elementRef.nativeElement,\n                'value',\n                this.getTimeStringFromDate(value, this.timeFormat)\n            );\n        }\n        this.onChange(value || null);\n        this.applyInputChanges();\n    }\n\n    onKeyDown(event: KeyboardEvent): void {\n\n        const keyCode: string = this.getKeyCode(event);\n\n        if (keyCode === ARROW_UP_KEYCODE || keyCode === ARROW_DOWN_KEYCODE) {\n            this.upDownTimeByArrowKeys(event);\n        }\n        if (keyCode === ARROW_LEFT_KEYCODE || keyCode === ARROW_RIGHT_KEYCODE) {\n            this.switchSelectionBetweenTimeparts(event);\n        }\n    }\n\n    registerOnChange(fn: (value: Date) => void): void {\n        this.onChange = fn;\n    }\n\n    registerOnTouched(fn: () => void): void {\n        this.onTouched = fn;\n    }\n\n    /** Does some manual dirty checking on the native input `value` property. */\n    private dirtyCheckNativeValue() {\n        const newValue = this.value;\n\n        if (this.previousNativeValue !== newValue) {\n            this.previousNativeValue = newValue;\n            this.stateChanges.next();\n        }\n    }\n\n    /** Checks whether the input is invalid based on the native validation. */\n    private isBadInput(): boolean {\n        const validity = (<HTMLInputElement> this.elementRef.nativeElement).validity;\n\n        return validity && validity.badInput;\n    }\n\n    private applyInputChanges(applyParams: {\n        changedTime?: Date;\n        doTimestringReformat?: boolean;\n    } = {}): void {\n        const { changedTime, doTimestringReformat = true } = applyParams;\n\n        const timeToApply: Date | undefined = changedTime ||\n            this.getDateFromTimeString(this.elementRef.nativeElement.value);\n        this.currentDateTimeInput = timeToApply;\n\n        if (doTimestringReformat && timeToApply !== undefined) {\n            const selectionStart: number = this.elementRef.nativeElement.selectionStart;\n            const selectionEnd: number = this.elementRef.nativeElement.selectionEnd;\n            this.renderer.setProperty(\n                this.elementRef.nativeElement,\n                'value',\n                this.getTimeStringFromDate(timeToApply, this.timeFormat));\n            this.elementRef.nativeElement.selectionStart = selectionStart;\n            this.elementRef.nativeElement.selectionEnd = selectionEnd;\n        }\n\n        (<FormControl> this.ngControl.control).updateValueAndValidity();\n        const result = this.ngControl.errors === null && timeToApply !== undefined ? timeToApply : null;\n        this.onChange(result);\n        this.stateChanges.next();\n    }\n\n    private upDownTimeByArrowKeys(event: KeyboardEvent): void {\n        event.preventDefault();\n\n        let changedTime: Date | undefined = this.currentDateTimeInput;\n        if (changedTime !== undefined) {\n            const cursorPos = this.elementRef.nativeElement.selectionStart;\n\n            const modifiedTimePart = this.getTimeEditMetrics(cursorPos)\n                .modifiedTimePart;\n            const keyCode: string = this.getKeyCode(event);\n            if (keyCode === ARROW_UP_KEYCODE) { changedTime = this.incrementTime(changedTime, modifiedTimePart); }\n            if (keyCode === ARROW_DOWN_KEYCODE) { changedTime = this.decrementTime(changedTime, modifiedTimePart); }\n            this.applyInputChanges({ changedTime });\n            this.createSelectionOfTimeComponentInInput(cursorPos);\n        }\n    }\n\n    private switchSelectionBetweenTimeparts(event: KeyboardEvent): void {\n        const changedTime: Date | undefined = this.currentDateTimeInput;\n        const keyCode: string = this.getKeyCode(event);\n\n        if (changedTime !== undefined) {\n            let cursorPos: number = this.elementRef.nativeElement.selectionStart;\n            if (keyCode === ARROW_LEFT_KEYCODE) {\n                cursorPos = this.getCursorPositionOfPrevTimePartStart(cursorPos, this.elementRef.nativeElement.value);\n            } else if (keyCode === ARROW_RIGHT_KEYCODE) {\n                cursorPos = this.getCursorPositionOfNextTimePartStart(cursorPos, this.elementRef.nativeElement.value);\n            }\n            this.createSelectionOfTimeComponentInInput(cursorPos);\n        }\n    }\n\n    /**\n     * @description Microsoft EDGE doesn't support KeyboaedEvent.code thus we need this helper\n     */\n    private getKeyCode(event: KeyboardEvent): string {\n        return event.code || event.key;\n    }\n\n    private createSelectionOfTimeComponentInInput(cursorPos: number): void {\n        setTimeout(() => {\n            const newEditParams = this.getTimeEditMetrics(cursorPos);\n            this.elementRef.nativeElement.selectionStart = newEditParams.cursorStartPosition;\n            this.elementRef.nativeElement.selectionEnd = newEditParams.cursorEndPosition;\n        });\n    }\n\n    private incrementTime(dateVal: Date,\n                          whatToIncrement: TimeParts = TimeParts.seconds): Date {\n        let { hours, minutes, seconds } = this.getTimeDigitsFromDate(dateVal);\n\n        switch (whatToIncrement) {\n            case TimeParts.hours:\n                hours++;\n                break;\n            case TimeParts.minutes:\n                minutes++;\n                break;\n            case TimeParts.seconds:\n                seconds++;\n                break;\n            default:\n        }\n\n        if (seconds > SECONDS_PER_MINUTE) { seconds = 0; }\n\n        if (minutes > MINUTES_PER_HOUR) { minutes = 0; }\n\n        if (hours > HOURS_PER_DAY) { hours = 0; }\n\n        return <Date> this.getDateFromTimeDigits(hours, minutes, seconds);\n    }\n\n    /**\n     * @description Decrement part of time\n     */\n    private decrementTime(dateVal: Date,\n                          whatToDecrement: TimeParts = TimeParts.seconds): Date {\n        let { hours, minutes, seconds } = this.getTimeDigitsFromDate(dateVal);\n\n        switch (whatToDecrement) {\n            case TimeParts.hours:\n                hours--;\n                break;\n            case TimeParts.minutes:\n                minutes--;\n                break;\n            case TimeParts.seconds:\n                seconds--;\n                break;\n            default:\n        }\n\n        if (seconds < 0) { seconds = SECONDS_PER_MINUTE; }\n\n        if (minutes < 0) { minutes = MINUTES_PER_HOUR; }\n\n        if (hours < 0) { hours = HOURS_PER_DAY; }\n\n        return <Date> this.getDateFromTimeDigits(hours, minutes, seconds);\n    }\n\n    private getCursorPositionOfPrevTimePartStart(cursorPos: number, timeString: string): number {\n        return cursorPos === 0 ? timeString.length : cursorPos - 1;\n    }\n\n    private getCursorPositionOfNextTimePartStart(cursorPos: number,\n                                                 timeString: string,\n                                                 timeDevider: string = ':'): number {\n        const nextDividerPos: number = timeString.indexOf(timeDevider, cursorPos);\n\n        return nextDividerPos !== undefined ? nextDividerPos + 1 : 0;\n    }\n\n    /**\n     * @description Get params for arrow-keys (up/down) time valie edit.\n     * @param cursorPosition Current cursor position in timeString\n     */\n    private getTimeEditMetrics(cursorPosition: number): {\n        modifiedTimePart: TimeParts;\n        cursorStartPosition: number;\n        cursorEndPosition: number;\n    } {\n        const timeString: string = this.elementRef.nativeElement.value;\n        let modifiedTimePart: TimeParts;\n        let cursorStartPosition: number;\n        let cursorEndPosition: number;\n        const hoursIndex = 0;\n        const minutesIndex = timeString.indexOf(':', hoursIndex + 1);\n        const secondsIndex = minutesIndex !== -1 ? timeString.indexOf(':', minutesIndex + 1) : -1;\n\n        if (secondsIndex !== -1 && cursorPosition > secondsIndex) {\n            modifiedTimePart = TimeParts.seconds;\n            cursorStartPosition = secondsIndex + 1;\n            cursorEndPosition = timeString.length;\n        } else if (minutesIndex !== -1 && cursorPosition > minutesIndex) {\n            modifiedTimePart = TimeParts.minutes;\n            cursorStartPosition = minutesIndex + 1;\n            cursorEndPosition = secondsIndex > -1 ? secondsIndex : timeString.length;\n        } else {\n            modifiedTimePart = TimeParts.hours;\n            cursorStartPosition = hoursIndex;\n            cursorEndPosition = minutesIndex !== -1 ? minutesIndex : timeString.length;\n        }\n\n        return {\n            modifiedTimePart,\n            cursorStartPosition,\n            cursorEndPosition\n        };\n    }\n\n    /**\n     * @description Create time string for displaying inside input element of UI\n     */\n    private getTimeStringFromDate(tempVal: Date,\n                                  timeFormat: TimeFormats = DEFAULT_TIME_FORMAT): string {\n        const hours: string = this.getNumberWithLeadingZero(tempVal.getHours());\n        const minutes: string = this.getNumberWithLeadingZero(tempVal.getMinutes());\n        const seconds: string = this.getNumberWithLeadingZero(tempVal.getSeconds());\n\n        const formattedTimeGenerators = {\n            [TimeFormats.HHmm]: () => `${hours}:${minutes}`,\n            [TimeFormats.HHmmss]: () => `${hours}:${minutes}:${seconds}`\n        };\n\n        return formattedTimeGenerators[timeFormat]();\n    }\n\n    private getParsedTimeParts(timeString: string): {\n        hoursOnly: any;\n        hoursAndMinutes: any;\n        hoursAndMinutesAndSeconds: any;\n    } {\n        const hoursAndMinutesAndSeconds = timeString.match(HOURS_MINUTES_SECONDS_REGEXP);\n        const hoursAndMinutes = timeString.match(HOURS_MINUTES_REGEXP);\n        const hoursOnly = timeString.match(HOURS_ONLY_REGEXP);\n\n        return {\n            hoursOnly,\n            hoursAndMinutes,\n            hoursAndMinutesAndSeconds\n        };\n    }\n\n    /**\n     * @description Create Date object from separate parts of time\n     */\n    private getDateFromTimeDigits(hours: number, minutes: number, seconds: number = 0): Date | undefined {\n        return this.getDateFromTimeString(`${hours}:${minutes}:${seconds}`);\n    }\n\n    private getDateFromTimeString(timeString: string | undefined): Date | undefined {\n        // TODO Use moment-js\n        if (timeString === undefined) { return; }\n\n        const {\n            hoursOnly,\n            hoursAndMinutes,\n            hoursAndMinutesAndSeconds\n        } = this.getParsedTimeParts(timeString);\n\n        if (timeString.trim().length === 0 ||\n            hoursOnly === null && hoursAndMinutes === null && hoursAndMinutesAndSeconds === null) {\n            return;\n        }\n\n        // tslint:disable no-magic-numbers\n        let hours: number = 0;\n        let minutes: number = 0;\n        let seconds: number = 0;\n\n        if (hoursOnly) {\n            hours = Number(hoursOnly[1]);\n        } else if (hoursAndMinutes) {\n            hours = Number(hoursAndMinutes[1]);\n            minutes = Number(hoursAndMinutes[2]);\n        } else if (hoursAndMinutesAndSeconds) {\n            hours = Number(hoursAndMinutesAndSeconds[1]);\n            minutes = Number(hoursAndMinutesAndSeconds[2]);\n            seconds = Number(hoursAndMinutesAndSeconds[3]);\n        }\n        // const timestamp: number = Date.parse(fullDateString);\n        const resultDate: Date = new Date(1970, 0, 1, hours, minutes, seconds);\n        // tslint:enable no-magic-numbers\n\n        return isNaN(resultDate.getTime()) ? undefined : resultDate;\n    }\n\n    private getNumberWithLeadingZero(digit: number): string {\n        const MAX_DIGIT_WITH_LEADING_ZERO: number = 9;\n\n        return digit > MAX_DIGIT_WITH_LEADING_ZERO ? `${digit}` : `0${digit}`;\n    }\n\n    private getTimeDigitsFromDate(dateVal: Date): { hours: number; minutes: number; seconds: number } {\n        return {\n            hours: dateVal.getHours(),\n            minutes: dateVal.getMinutes(),\n            seconds: dateVal.getSeconds()\n        };\n    }\n\n    private parseValidator(): ValidationErrors | null {\n        return this.currentDateTimeInput === undefined ?\n            { mcTimepickerParse: { text: this.elementRef.nativeElement.value } } :\n            null;\n    }\n\n    private minTimeValidator(): ValidationErrors | null {\n\n        if (this.currentDateTimeInput !== undefined &&\n            this.minDateTime !== undefined &&\n            this.isTimeLowerThenMin(this.currentDateTimeInput)) {\n            return { mcTimepickerLowerThenMintime: { text: this.elementRef.nativeElement.value } };\n        }\n\n        return null;\n    }\n\n    private maxTimeValidator(): ValidationErrors | null {\n        if (this.currentDateTimeInput !== undefined &&\n            this.maxDateTime !== undefined &&\n            this.isTimeGreaterThenMax(this.currentDateTimeInput)) {\n            return { mcTimepickerHigherThenMaxtime: { text: this.elementRef.nativeElement.value } };\n        }\n\n        return null;\n    }\n\n    private isTimeLowerThenMin(timeToCompare: Date): boolean {\n        return timeToCompare.getTime() - (<Date> this.minDateTime).getTime() < 0;\n    }\n\n    private isTimeGreaterThenMax(timeToCompare: Date): boolean {\n        return timeToCompare.getTime() - (<Date> this.maxDateTime).getTime() >= 0;\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\n\nimport { A11yModule } from '@ptsecurity/cdk/a11y';\nimport { PlatformModule } from '@ptsecurity/cdk/platform';\n\nimport { McTimepicker } from './timepicker';\n\n\n@NgModule({\n    imports: [\n        CommonModule,\n        A11yModule,\n        PlatformModule,\n        FormsModule\n    ],\n    declarations: [\n        McTimepicker\n    ],\n    exports: [\n        McTimepicker\n    ]\n})\nexport class McTimepickerModule {}\n","import {\n    animate,\n    AnimationTriggerMetadata,\n    state,\n    style,\n    transition,\n    trigger,\n    query,\n    animateChild,\n    group\n} from '@angular/animations';\n\n\n/**\n * The following are all the animations for the mat-select component, with each\n * const containing the metadata for one animation.\n *\n * The values below match the implementation of the AngularJS Material mat-select animation.\n */\nexport const mcSelectAnimations: {\n    readonly transformPanel: AnimationTriggerMetadata;\n    readonly fadeInContent: AnimationTriggerMetadata;\n} = {\n    /**\n     * This animation transforms the select's overlay panel on and off the page.\n     *\n     * When the panel is attached to the DOM, it expands its width by the amount of padding, scales it\n     * up to 100% on the Y axis, fades in its border, and translates slightly up and to the\n     * side to ensure the option text correctly overlaps the trigger text.\n     *\n     * When the panel is removed from the DOM, it simply fades out linearly.\n     */\n    transformPanel: trigger('transformPanel', [\n        state('void', style({\n            transform: 'scaleY(0)',\n            minWidth: '100%',\n            opacity: 0\n        })),\n        transition('void => *', group([\n            query('@fadeInContent', animateChild()),\n            animate('150ms cubic-bezier(0.25, 0.8, 0.25, 1)')\n        ])),\n        transition('* => void', [\n            animate('250ms 100ms linear', style({ opacity: 0 }))\n        ])\n    ]),\n\n    /**\n     * This animation fades in the background color and text content of the\n     * select's options. It is time delayed to occur 100ms after the overlay\n     * panel has transformed in.\n     */\n    fadeInContent: trigger('fadeInContent', [\n        state('showing', style({ opacity: 1 })),\n        transition('void => showing', [\n            style({ opacity: 0 }),\n            animate('150ms 100ms cubic-bezier(0.55, 0, 0.55, 0.2)')\n        ])\n    ])\n};\n\n\n/**\n * @deprecated\n * @breaking-change 7.0.0\n */\nexport const transformPanel = mcSelectAnimations.transformPanel;\n\n/**\n * @deprecated\n * @breaking-change 7.0.0\n */\nexport const fadeInContent = mcSelectAnimations.fadeInContent;\n","import {\n    AfterContentInit,\n    Attribute,\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component, ContentChildren, EventEmitter, forwardRef, Input, IterableDiffer,\n    IterableDiffers, Output, QueryList,\n    ViewChild,\n    ViewEncapsulation,\n    Directive, ElementRef, Inject\n} from '@angular/core';\nimport { NodeDef, ViewData } from '@angular/core/src/view';\n\nimport { SelectionModel } from '@ptsecurity/cdk/collections';\nimport { CdkTreeNode, CdkTree, CdkTreeNodeOutlet } from '@ptsecurity/cdk/tree';\n\nimport {\n    CanDisable, CanDisableCtor,\n    HasTabIndex,\n    HasTabIndexCtor,\n    mixinDisabled,\n    mixinTabIndex,\n    toBoolean\n} from '@ptsecurity/mosaic/core';\n\nimport { FocusKeyManager } from '@ptsecurity/cdk/a11y';\n\nimport { END, ENTER, HOME, LEFT_ARROW, PAGE_DOWN, PAGE_UP, RIGHT_ARROW, SPACE } from '@ptsecurity/cdk/keycodes';\n\n\n/**\n * Wrapper for the CdkTree node with Material design styles.\n */\n@Directive({\n    exportAs: 'mcTreeNodeOption',\n    selector: 'mc-tree-node-option',\n    host: {\n        tabindex: '-1',\n        '[class.mc-selected]': 'selected',\n        '[class.mc-focused]': '_hasFocus',\n        '[attr.aria-expanded]': 'isExpanded',\n        '[attr.aria-level]': 'role === \"treeitem\" ? level : null',\n        class: 'mc-tree-node',\n\n        '(focus)': '_handleFocus()',\n        '(blur)': '_handleBlur()',\n\n        '(click)': '_handleClick()'\n    },\n    providers: [\n        { provide: CdkTreeNode, useExisting: McTreeNodeOption }\n    ]\n})\nexport class McTreeNodeOption<T> extends CdkTreeNode<T> implements CanDisable {\n    @Input() role: 'treeitem' | 'group' = 'treeitem';\n\n    @Input()\n    get disabled() {\n        return this._disabled;\n    }\n\n    set disabled(value: any) {\n        const newValue = toBoolean(value);\n\n        if (newValue !== this._disabled) {\n            this._disabled = newValue;\n        }\n    }\n\n    @Input()\n    get selected(): boolean {\n        return this.treeSelection.selectedOptions && this.treeSelection.selectedOptions.isSelected(this) || false;\n    }\n\n    set selected(value: boolean) {\n        const isSelected = toBoolean(value);\n\n        if (isSelected !== this._selected) {\n            this.setSelected(isSelected);\n\n            // this.treeSelection._reportValueChange();\n        }\n    }\n\n    private _hasFocus: boolean = false;\n\n    private _disabled: boolean = false;\n    private _selected: boolean = false;\n\n    constructor(\n        protected _elementRef: ElementRef,\n        @Inject(forwardRef(() => McTreeSelection))\n        protected treeSelection: McTreeSelection<T>\n    ) {\n        super(_elementRef, treeSelection);\n    }\n\n    focus(): void {\n        this._elementRef.nativeElement.focus();\n\n        this.treeSelection.setFocusedOption(this);\n    }\n\n    toggle(): void {\n        this.selected = !this.selected;\n    }\n\n    setSelected(selected: boolean) {\n        if (this._selected === selected || !this.treeSelection.selectedOptions) { return; }\n\n        this._selected = selected;\n\n        if (selected) {\n            this.treeSelection.selectedOptions.select(this);\n        } else {\n            this.treeSelection.selectedOptions.deselect(this);\n        }\n\n        // this._changeDetector.markForCheck();\n    }\n\n    _getHeight(): number {\n        return this._elementRef.nativeElement.getClientRects()[0].height;\n    }\n\n    _handleFocus(): void {\n        if (this.disabled || this._hasFocus) { return; }\n\n        this._hasFocus = true;\n    }\n\n    _handleBlur(): void {\n        this._hasFocus = false;\n    }\n\n    _handleClick(): void {\n        if (this.disabled) { return; }\n\n        this.treeSelection.setFocusedOption(this);\n    }\n}\n\nexport const _McTreeSelectionBase:\n    HasTabIndexCtor &\n    CanDisableCtor &\n    typeof CdkTree\n    = mixinTabIndex(mixinDisabled(CdkTree));\n\nexport class McTreeNavigationChange {\n    constructor(\n        public source: McTreeSelection<any>,\n        public option: McTreeNodeOption<any>\n    ) {}\n}\n\nexport class McTreeSelectionChange {\n    constructor(\n        public source: McTreeSelection<any>,\n        public option: McTreeNodeOption<any>\n    ) {}\n}\n\n@Component({\n    exportAs: 'mcTreeSelection',\n    selector: 'mc-tree-selection',\n    template: `<ng-container cdkTreeNodeOutlet></ng-container>`,\n    host: {\n        '[tabIndex]': 'tabIndex',\n        class: 'mc-tree-selection',\n        role: 'tree-selection',\n        '(keydown)': '_onKeyDown($event)',\n        '(window:resize)': 'updateScrollSize()'\n    },\n    styleUrls: ['./tree.css'],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    providers: [{ provide: CdkTree, useExisting: McTreeSelection }]\n})\nexport class McTreeSelection<T> extends _McTreeSelectionBase<T>\n    implements AfterContentInit, CanDisable, HasTabIndex {\n    // Outlets within the tree's template where the dataNodes will be inserted.\n    @ViewChild(CdkTreeNodeOutlet) _nodeOutlet: CdkTreeNodeOutlet;\n\n    @ContentChildren(forwardRef(() => McTreeNodeOption)) options: QueryList<McTreeNodeOption<T>>;\n\n    _keyManager: FocusKeyManager<McTreeNodeOption<T>>;\n\n    selectedOptions: SelectionModel<McTreeNodeOption<T>>;\n\n    _disabled: boolean = false;\n    tabIndex: number;\n    multiple: boolean;\n    autoSelect: boolean;\n    noUnselect: boolean;\n\n    // todo temporary solution\n    withShift: boolean;\n    withCtrl: boolean;\n\n    @Input()\n    get disabled(): boolean {\n        return this._disabled;\n    }\n\n    set disabled(rawValue: boolean) {\n        const value = toBoolean(rawValue);\n\n        if (this._disabled !== value) {\n            this._disabled = value;\n\n            if (this._disabled) {\n                console.log('need disable all options');\n            } else {\n                console.log('need enable all options');\n            }\n        }\n    }\n\n    @Output() readonly navigationChange = new EventEmitter<McTreeNavigationChange>();\n\n    @Output() readonly selectionChange = new EventEmitter<McTreeSelectionChange>();\n\n    constructor(\n        private _elementRef: ElementRef,\n        _differs: IterableDiffers,\n        _changeDetectorRef: ChangeDetectorRef,\n        @Attribute('tabindex') tabIndex: string,\n        @Attribute('multiple') multiple: string,\n        @Attribute('auto-select') autoSelect: string,\n        @Attribute('no-unselect') noUnselect: string\n    ) {\n        super(_differs, _changeDetectorRef);\n\n        this.tabIndex = parseInt(tabIndex) || 0;\n\n        this.multiple = multiple === null ? true : toBoolean(multiple);\n        this.autoSelect = autoSelect === null ? true : toBoolean(autoSelect);\n        this.noUnselect = noUnselect === null ? true : toBoolean(noUnselect);\n\n        this.selectedOptions = new SelectionModel<McTreeNodeOption<T>>(this.multiple);\n    }\n\n    _onKeyDown(event: KeyboardEvent) {\n        const keyCode = event.keyCode;\n        this.withShift = event.shiftKey;\n        this.withCtrl = event.ctrlKey;\n\n        switch (keyCode) {\n            case LEFT_ARROW:\n                if (this._keyManager.activeItem) {\n                    this.treeControl.collapse(this._keyManager.activeItem.data);\n                }\n\n                event.preventDefault();\n\n                break;\n            case RIGHT_ARROW:\n                if (this._keyManager.activeItem) {\n                    this.treeControl.expand(this._keyManager.activeItem.data);\n                }\n\n                event.preventDefault();\n\n                break;\n            case SPACE:\n            case ENTER:\n                this.toggleFocusedOption();\n                event.preventDefault();\n\n                break;\n            case HOME:\n                this._keyManager.setFirstItemActive();\n                event.preventDefault();\n\n                break;\n            case END:\n                this._keyManager.setLastItemActive();\n                event.preventDefault();\n\n                break;\n            case PAGE_UP:\n                this._keyManager.setPreviousPageItemActive();\n                event.preventDefault();\n\n                break;\n            case PAGE_DOWN:\n                this._keyManager.setNextPageItemActive();\n                event.preventDefault();\n\n                break;\n            default:\n                this._keyManager.onKeydown(event);\n        }\n    }\n\n    ngAfterContentInit(): void {\n        this._keyManager = new FocusKeyManager<McTreeNodeOption<T>>(this.options)\n            .withTypeAhead()\n            .withVerticalOrientation(true)\n            .withHorizontalOrientation(null);\n    }\n\n    updateScrollSize(): void {\n        if (!this.options.first) { return; }\n\n        this._keyManager.withScrollSize(Math.floor(this._getHeight() / this.options.first._getHeight()));\n    }\n\n    setFocusedOption(option: McTreeNodeOption<T>): void {\n        this._keyManager.updateActiveItem(option);\n\n        if (this.withShift && this.multiple) {\n            const previousIndex = this._keyManager.previousActiveItemIndex;\n            const activeIndex = this._keyManager.activeItemIndex;\n\n            if (previousIndex < activeIndex) {\n                this.options.forEach((item, index) => {\n                    if (index >= previousIndex && index <= activeIndex) { item.setSelected(true); }\n                });\n            } else {\n                this.options.forEach((item, index) => {\n                    if (index >= activeIndex && index <= previousIndex) { item.setSelected(true); }\n                });\n            }\n\n            this.withShift = false;\n        } else if (this.withCtrl) {\n            this.withCtrl = false;\n\n            if (!this._canDeselectLast(option)) { return; }\n\n            option.toggle();\n        } else {\n            if (this.autoSelect) {\n                this.options.forEach((item) => item.setSelected(false));\n                option.setSelected(true);\n            }\n        }\n\n        this._emitNavigationEvent(option);\n    }\n\n    // Toggles the selected state of the currently focused option.\n    toggleFocusedOption(): void {\n        const focusedIndex = this._keyManager.activeItemIndex;\n\n        if (focusedIndex != null && this._isValidIndex(focusedIndex)) {\n            const focusedOption: McTreeNodeOption<T> = this.options.toArray()[focusedIndex];\n\n            if (focusedOption && this._canDeselectLast(focusedOption)) {\n                focusedOption.toggle();\n\n                // Emit a change event because the focused option changed its state through user interaction.\n                this._emitChangeEvent(focusedOption);\n            }\n        }\n    }\n\n    renderNodeChanges(\n        data: T[],\n        dataDiffer: IterableDiffer<T> = this._dataDiffer,\n        viewContainer: any = this._nodeOutlet.viewContainer,\n        parentData?: T\n    ) {\n        super.renderNodeChanges(data, dataDiffer, viewContainer, parentData);\n\n        const arrayOfInstances = [];\n\n        viewContainer._embeddedViews.forEach((view: ViewData) => {\n            const viewDef = view.def;\n\n            viewDef.nodes.forEach((node: NodeDef) => {\n                if (viewDef.nodeMatchedQueries === node.matchedQueryIds) {\n                    const nodeData: any = view.nodes[node.nodeIndex];\n\n                    arrayOfInstances.push(nodeData.instance as never);\n                }\n            });\n        });\n\n        if (this.options) {\n            this.options.reset(arrayOfInstances);\n            this.options.notifyOnChanges();\n        }\n\n        this.updateScrollSize();\n    }\n\n    _getHeight(): number {\n        return this._elementRef.nativeElement.getClientRects()[0].height;\n    }\n\n    _emitNavigationEvent(option: McTreeNodeOption<T>): void {\n        this.navigationChange.emit(new McTreeNavigationChange(this, option));\n    }\n\n    _emitChangeEvent(option: McTreeNodeOption<T>): void {\n        this.selectionChange.emit(new McTreeNavigationChange(this, option));\n    }\n\n    /**\n     * Utility to ensure all indexes are valid.\n     * @param index The index to be checked.\n     * @returns True if the index is valid for our list of options.\n     */\n    private _isValidIndex(index: number): boolean {\n        return index >= 0 && index < this.options.length;\n    }\n\n    private _canDeselectLast(option: McTreeNodeOption<T>): boolean {\n        return !(this.noUnselect && this.selectedOptions.selected.length === 1 && option.selected);\n    }\n}\n\n","import { NgModule } from '@angular/core';\n\nimport { CommonModule } from '@angular/common';\nimport { CdkTreeModule } from '@ptsecurity/cdk/tree';\n\nimport { McTreeNodeDef } from './node';\nimport { McTreeNodePadding } from './padding';\nimport { McTreeSelection, McTreeNodeOption } from './tree-selection';\n\n\nconst MC_TREE_DIRECTIVES = [\n    McTreeNodeDef,\n    McTreeNodePadding,\n    McTreeSelection,\n    McTreeNodeOption\n];\n\n@NgModule({\n    imports: [CommonModule, CdkTreeModule],\n    exports: MC_TREE_DIRECTIVES,\n    declarations: MC_TREE_DIRECTIVES\n})\nexport class McTreeModule {}\n","import { ICollectionViewer, DataSource } from '@ptsecurity/cdk/collections';\nimport { FlatTreeControl, ITreeControl } from '@ptsecurity/cdk/tree';\nimport { BehaviorSubject, merge, Observable } from 'rxjs';\nimport { map, take } from 'rxjs/operators';\n\n\n/**\n * Tree flattener to convert a normal type of node to node with children & level information.\n * Transform nested nodes of type `T` to flattened nodes of type `F`.\n *\n * For example, the input data of type `T` is nested, and contains its children data:\n *   SomeNode: {\n *     key: 'Fruits',\n *     children: [\n *       NodeOne: {\n *         key: 'Apple',\n *       },\n *       NodeTwo: {\n *        key: 'Pear',\n *      }\n *    ]\n *  }\n *  After flattener flatten the tree, the structure will become\n *  SomeNode: {\n *    key: 'Fruits',\n *    expandable: true,\n *    level: 1\n *  },\n *  NodeOne: {\n *    key: 'Apple',\n *    expandable: false,\n *    level: 2\n *  },\n *  NodeTwo: {\n *   key: 'Pear',\n *   expandable: false,\n *   level: 2\n * }\n * and the output flattened type is `F` with additional information.\n */\nexport class McTreeFlattener<T, F> {\n\n    constructor(public transformFunction: (node: T, level: number) => F,\n                public getLevel: (node: F) => number,\n                public isExpandable: (node: F) => boolean,\n                public getChildren: (node: T) => Observable<T[]>) {\n    }\n\n    _flattenNode(node: T, level: number,\n                 resultNodes: F[], parentMap: boolean[]): F[] {\n        const flatNode = this.transformFunction(node, level);\n        resultNodes.push(flatNode);\n\n        if (this.isExpandable(flatNode)) {\n            this.getChildren(node).pipe(take(1)).subscribe((children) => {\n                children.forEach((child, index) => {\n                    const childParentMap: boolean[] = parentMap.slice();\n                    childParentMap.push(index !== children.length - 1);\n                    this._flattenNode(child, level + 1, resultNodes, childParentMap);\n                });\n            });\n        }\n\n        return resultNodes;\n    }\n\n    /**\n     * Flatten a list of node type T to flattened version of node F.\n     * Please note that type T may be nested, and the length of `structuredData` may be different\n     * from that of returned list `F[]`.\n     */\n    flattenNodes(structuredData: T[]): F[] {\n        const resultNodes: F[] = [];\n        structuredData.forEach((node) => this._flattenNode(node, 0, resultNodes, []));\n\n        return resultNodes;\n    }\n\n    /**\n     * Expand flattened node with current expansion status.\n     * The returned list may have different length.\n     */\n    expandFlattenedNodes(nodes: F[], treeControl: ITreeControl<F>): F[] {\n        const results: F[] = [];\n        const currentExpand: boolean[] = [];\n        currentExpand[0] = true;\n\n        nodes.forEach((node) => {\n            let expand = true;\n            for (let i = 0; i <= this.getLevel(node); i++) {\n                expand = expand && currentExpand[i];\n            }\n\n            if (expand) { results.push(node); }\n\n            if (this.isExpandable(node)) {\n                currentExpand[this.getLevel(node) + 1] = treeControl.isExpanded(node);\n            }\n        });\n\n        return results;\n    }\n}\n\n\n/**\n * Data source for flat tree.\n * The data source need to handle expansion/collapsion of the tree node and change the data feed\n * to `McTree`.\n * The nested tree nodes of type `T` are flattened through `MсTreeFlattener`, and converted\n * to type `F` for `McTree` to consume.\n */\nexport class McTreeFlatDataSource<T, F> extends DataSource<F> {\n    _flattenedData = new BehaviorSubject<F[]>([]);\n\n    _expandedData = new BehaviorSubject<F[]>([]);\n\n    _data: BehaviorSubject<T[]>;\n\n    get data() {\n        return this._data.value;\n    }\n\n    set data(value: T[]) {\n        this._data.next(value);\n        this._flattenedData.next(this.treeFlattener.flattenNodes(this.data));\n        this.treeControl.dataNodes = this._flattenedData.value;\n    }\n\n    constructor(private treeControl: FlatTreeControl<F>,\n                private treeFlattener: McTreeFlattener<T, F>,\n                initialData: T[] = []) {\n        super();\n        this._data = new BehaviorSubject<T[]>(initialData);\n    }\n\n    connect(collectionViewer: ICollectionViewer): Observable<F[]> {\n        const changes = [\n            collectionViewer.viewChange,\n            this.treeControl.expansionModel.onChange!,\n            this._flattenedData\n        ];\n\n        return merge(...changes).pipe(map(() => {\n            this._expandedData.next(\n                this.treeFlattener.expandFlattenedNodes(this._flattenedData.value, this.treeControl));\n\n            return this._expandedData.value;\n        }));\n    }\n\n    disconnect() {\n        // no op\n    }\n}\n\n","import { ICollectionViewer, DataSource } from '@ptsecurity/cdk/collections';\nimport { BehaviorSubject, merge, Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\n\n/**\n * Data source for nested tree.\n *\n * The data source for nested tree doesn't have to consider node flattener, or the way to expand\n * or collapse. The expansion/collapsion will be handled by ITreeControl and each non-leaf node.\n */\nexport class McTreeNestedDataSource<T> extends DataSource<T> {\n    _data = new BehaviorSubject<T[]>([]);\n\n    /**\n     * Data for the nested tree\n     */\n    get data() {\n        return this._data.value;\n    }\n\n    set data(value: T[]) {\n        this._data.next(value);\n    }\n\n    connect(collectionViewer: ICollectionViewer): Observable<T[]> {\n        return merge(...[collectionViewer.viewChange, this._data])\n            .pipe(map(() => this.data));\n    }\n\n    disconnect() {\n        // no op\n    }\n}\n\n","import { Directive, TemplateRef } from '@angular/core';\n\n\n/** Decorates the `ng-template` tags and reads out the template from it. */\n@Directive({ selector: '[mcTabContent]' })\nexport class McTabContent {\n    constructor(public template: TemplateRef<any>) { }\n}\n","import { Directive } from '@angular/core';\nimport { CdkPortal } from '@ptsecurity/cdk/portal';\n\n\n/** Used to flag tab labels for use with the portal directive */\n@Directive({\n    selector: '[mc-tab-label], [mcTabLabel]'\n})\nexport class McTabLabel extends CdkPortal {}\n\n// TODO: workaround for https://github.com/angular/material2/issues/12760\n(McTabLabel as any).ctorParameters = () => (CdkPortal as any).ctorParameters;\n","import {\n    ChangeDetectionStrategy,\n    Component,\n    ContentChild,\n    Input,\n    OnChanges,\n    OnDestroy,\n    OnInit,\n    SimpleChanges,\n    TemplateRef,\n    ViewChild,\n    ViewContainerRef,\n    ViewEncapsulation\n} from '@angular/core';\nimport { TemplatePortal } from '@ptsecurity/cdk/portal';\nimport {\n    CanDisable,\n    CanDisableCtor,\n    mixinDisabled\n} from '@ptsecurity/mosaic/core';\nimport { Subject } from 'rxjs';\n\nimport { McTabContent } from './tab-content';\nimport { McTabLabel } from './tab-label';\n\n\nexport class McTabBase {}\nexport const mcTabMixinBase: CanDisableCtor & typeof McTabBase = mixinDisabled(\n    McTabBase\n);\n\n@Component({\n    selector: 'mc-tab',\n    // Create a template for the content of the <mc-tab> so that we can grab a reference to this\n    // TemplateRef and use it in a Portal to render the tab content in the appropriate place in the\n    // tab-group.\n    template: '<ng-template><ng-content></ng-content></ng-template>',\n    inputs: ['disabled'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n    exportAs: 'mcTab'\n})\nexport class McTab extends mcTabMixinBase\n    implements OnInit, CanDisable, OnChanges, OnDestroy {\n    /** @docs-private */\n    get content(): TemplatePortal | null {\n        return this.contentPortal;\n    }\n    /** Content for the tab label given by `<ng-template mc-tab-label>`. */\n    @ContentChild(McTabLabel)\n    templateLabel: McTabLabel;\n\n    /**\n     * Template provided in the tab content that will be used if present, used to enable lazy-loading\n     */\n    @ContentChild(McTabContent, { read: TemplateRef })\n    explicitContent: TemplateRef<any>;\n\n    /** Template inside the McTab view that contains an `<ng-content>`. */\n    @ViewChild(TemplateRef)\n    implicitContent: TemplateRef<any>;\n\n    /** Plain text label for the tab, used when there is no template label. */\n    @Input('label')\n    textLabel: string = '';\n\n    /** Aria label for the tab. */\n    @Input('aria-label')\n    ariaLabel: string;\n\n    /**\n     * Reference to the element that the tab is labelled by.\n     * Will be cleared if `aria-label` is set at the same time.\n     */\n    @Input('aria-labelledby')\n    ariaLabelledby: string;\n\n    /** Emits whenever the internal state of the tab changes. */\n    readonly stateChanges = new Subject<void>();\n\n    /**\n     * The relatively indexed position where 0 represents the center, negative is left, and positive\n     * represents the right.\n     */\n    position: number | null = null;\n\n    /**\n     * The initial relatively index origin of the tab if it was created and selected after there\n     * was already a selected tab. Provides context of what position the tab should originate from.\n     */\n    origin: number | null = null;\n\n    /**\n     * Whether the tab is currently active.\n     */\n    isActive = false;\n\n    /** Portal that will be the hosted content of the tab */\n    private contentPortal: TemplatePortal | null = null;\n\n    constructor(private viewContainerRef: ViewContainerRef) {\n        super();\n    }\n\n    ngOnChanges(changes: SimpleChanges): void {\n        if (\n            changes.hasOwnProperty('textLabel') ||\n            changes.hasOwnProperty('disabled')\n        ) {\n            this.stateChanges.next();\n        }\n    }\n\n    ngOnDestroy(): void {\n        this.stateChanges.complete();\n    }\n\n    ngOnInit(): void {\n        this.contentPortal = new TemplatePortal(\n            this.explicitContent || this.implicitContent,\n            this.viewContainerRef\n        );\n    }\n}\n","import {\n    animate,\n    state,\n    style,\n    transition,\n    trigger,\n    AnimationTriggerMetadata\n} from '@angular/animations';\n\n\nexport const mcTabsAnimations: {\n    readonly translateTab: AnimationTriggerMetadata;\n} = {\n    /** Animation translates a tab along the X axis. */\n    translateTab: trigger('translateTab', [\n        // Note: transitions to `none` instead of 0, because some browsers might blur the content.\n        state(\n            'center, void, left-origin-center, right-origin-center',\n            style({ transform: 'none' })\n        ),\n\n        // If the tab is either on the left or right, we additionally add a `min-height` of 1px\n        // in order to ensure that the element has a height before its state changes. This is\n        // necessary because Chrome does seem to skip the transition in RTL mode if the element does\n        // not have a static height and is not rendered. See related issue: #9465\n        state(\n            'left',\n            style({ transform: 'translate3d(-100%, 0, 0)', minHeight: '1px' })\n        ),\n        state(\n            'right',\n            style({ transform: 'translate3d(100%, 0, 0)', minHeight: '1px' })\n        ),\n\n        transition(\n            '* => left, * => right, left => center, right => center',\n            animate('{{animationDuration}} cubic-bezier(0.35, 0, 0.25, 1)')\n        ),\n        transition('void => left-origin-center', [\n            style({ transform: 'translate3d(-100%, 0, 0)' }),\n            animate('{{animationDuration}} cubic-bezier(0.35, 0, 0.25, 1)')\n        ]),\n        transition('void => right-origin-center', [\n            style({ transform: 'translate3d(100%, 0, 0)' }),\n            animate('{{animationDuration}} cubic-bezier(0.35, 0, 0.25, 1)')\n        ])\n    ])\n};\n","import { AnimationEvent } from '@angular/animations';\nimport {\n    Component,\n    ChangeDetectorRef,\n    Input,\n    Inject,\n    Output,\n    EventEmitter,\n    OnDestroy,\n    OnInit,\n    ElementRef,\n    Directive,\n    Optional,\n    ViewEncapsulation,\n    ChangeDetectionStrategy,\n    ComponentFactoryResolver,\n    ViewContainerRef,\n    forwardRef,\n    ViewChild\n} from '@angular/core';\nimport { Directionality, Direction } from '@ptsecurity/cdk/bidi';\nimport { TemplatePortal, CdkPortalOutlet, PortalHostDirective } from '@ptsecurity/cdk/portal';\nimport { Subscription } from 'rxjs';\nimport { startWith } from 'rxjs/operators';\n\nimport { mcTabsAnimations } from './tabs-animations';\n\n\n/**\n * These position states are used internally as animation states for the tab body. Setting the\n * position state to left, right, or center will transition the tab body from its current\n * position to its respective state. If there is not current position (void, in the case of a new\n * tab body), then there will be no transition animation to its state.\n *\n * In the case of a new tab body that should immediately be centered with an animating transition,\n * then left-origin-center or right-origin-center can be used, which will use left or right as its\n * psuedo-prior state.\n */\nexport type McTabBodyPositionState =\n    'left' | 'center' | 'right' | 'left-origin-center' | 'right-origin-center';\n\n/**\n * The origin state is an internally used state that is set on a new tab body indicating if it\n * began to the left or right of the prior selected index. For example, if the selected index was\n * set to 1, and a new tab is created and selected at index 2, then the tab body would have an\n * origin of right because its index was greater than the prior selected index.\n */\nexport type McTabBodyOriginState = 'left' | 'right';\n\n/**\n * Wrapper for the contents of a tab.\n * @docs-private\n */\n@Component({\n    selector: 'mc-tab-body',\n    templateUrl: 'tab-body.html',\n    styleUrls: ['tab-body.css'],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    animations: [mcTabsAnimations.translateTab],\n    host: {\n        class: 'mc-tab-body'\n    }\n})\nexport class McTabBody implements OnInit, OnDestroy {\n\n    /** The shifted index position of the tab body, where zero represents the active center tab. */\n    @Input()\n    set position(position: number) {\n        this.positionIndex = position;\n        this.computePositionAnimationState();\n    }\n\n    /** Tab body position state. Used by the animation trigger for the current state. */\n    bodyPosition: McTabBodyPositionState;\n\n    /** Event emitted when the tab begins to animate towards the center as the active tab. */\n    @Output() readonly onCentering: EventEmitter<number> = new EventEmitter<number>();\n\n    /** Event emitted before the centering of the tab begins. */\n    @Output() readonly beforeCentering: EventEmitter<boolean> = new EventEmitter<boolean>();\n\n    /** Event emitted before the centering of the tab begins. */\n    @Output() readonly afterLeavingCenter: EventEmitter<boolean> = new EventEmitter<boolean>();\n\n    /** Event emitted when the tab completes its animation towards the center. */\n    @Output() readonly onCentered: EventEmitter<void> = new EventEmitter<void>(true);\n\n    /** The portal host inside of this container into which the tab body content will be loaded. */\n    @ViewChild(PortalHostDirective) portalHost: PortalHostDirective;\n\n    /** The tab body content to display. */\n    @Input('content') content: TemplatePortal;\n\n    /** Position that will be used when the tab is immediately becoming visible after creation. */\n    @Input() origin: number;\n\n    // Note that the default value will always be overwritten by `McTabBody`, but we need one\n    // anyway to prevent the animations module from throwing an error if the body is used on its own.\n    /** Duration for the tab's animation. */\n    @Input() animationDuration: string = '0ms';\n\n    /** Current position of the tab-body in the tab-group. Zero means that the tab is visible. */\n    private positionIndex: number;\n\n    /** Subscription to the directionality change observable. */\n    private dirChangeSubscription = Subscription.EMPTY;\n\n    constructor(private elementRef: ElementRef<HTMLElement>,\n                @Optional() private dir: Directionality,\n                changeDetectorRef: ChangeDetectorRef) {\n\n        if (this.dir && changeDetectorRef) {\n            this.dirChangeSubscription = this.dir.change.subscribe((direction: Direction) => {\n                this.computePositionAnimationState(direction);\n                changeDetectorRef.markForCheck();\n            });\n        }\n    }\n\n    /**\n     * After initialized, check if the content is centered and has an origin. If so, set the\n     * special position states that transition the tab from the left or right before centering.\n     */\n    ngOnInit() {\n        if (this.bodyPosition === 'center' && this.origin != null) {\n            this.bodyPosition = this.computePositionFromOrigin();\n        }\n    }\n\n    ngOnDestroy() {\n        this.dirChangeSubscription.unsubscribe();\n    }\n\n    onTranslateTabStarted(e: AnimationEvent): void {\n        const isCentering = this.isCenterPosition(e.toState);\n        this.beforeCentering.emit(isCentering);\n        if (isCentering) {\n            this.onCentering.emit(this.elementRef.nativeElement.clientHeight);\n        }\n    }\n\n    onTranslateTabComplete(e: AnimationEvent): void {\n        // If the transition to the center is complete, emit an event.\n        if (this.isCenterPosition(e.toState) && this.isCenterPosition(this.bodyPosition)) {\n            this.onCentered.emit();\n        }\n\n        if (this.isCenterPosition(e.fromState) && !this.isCenterPosition(this.bodyPosition)) {\n            this.afterLeavingCenter.emit();\n        }\n    }\n\n    /** The text direction of the containing app. */\n    getLayoutDirection(): Direction {\n        return this.dir && this.dir.value === 'rtl' ? 'rtl' : 'ltr';\n    }\n\n    /** Whether the provided position state is considered center, regardless of origin. */\n    isCenterPosition(position: McTabBodyPositionState | string): boolean {\n        return position === 'center' ||\n            position === 'left-origin-center' ||\n            position === 'right-origin-center';\n    }\n\n    /** Computes the position state that will be used for the tab-body animation trigger. */\n    private computePositionAnimationState(dir: Direction = this.getLayoutDirection()) {\n        if (this.positionIndex < 0) {\n            this.bodyPosition = dir === 'ltr' ? 'left' : 'right';\n        } else if (this.positionIndex > 0) {\n            this.bodyPosition = dir === 'ltr' ? 'right' : 'left';\n        } else {\n            this.bodyPosition = 'center';\n        }\n    }\n\n    /**\n     * Computes the position state based on the specified origin position. This is used if the\n     * tab is becoming visible immediately after creation.\n     */\n    private computePositionFromOrigin(): McTabBodyPositionState {\n        const dir = this.getLayoutDirection();\n\n        if ((dir === 'ltr' && this.origin <= 0) || (dir === 'rtl' && this.origin > 0)) {\n            return 'left-origin-center';\n        }\n\n        return 'right-origin-center';\n    }\n}\n\n/**\n * The portal host directive for the contents of the tab.\n * @docs-private\n */\n@Directive({\n    selector: '[mcTabBodyHost]'\n})\nexport class McTabBodyPortal extends CdkPortalOutlet implements OnInit, OnDestroy {\n    /** Subscription to events for when the tab body begins centering. */\n    private centeringSub = Subscription.EMPTY;\n    /** Subscription to events for when the tab body finishes leaving from center position. */\n    private leavingSub = Subscription.EMPTY;\n\n    constructor(\n        componentFactoryResolver: ComponentFactoryResolver,\n        viewContainerRef: ViewContainerRef,\n        @Inject(forwardRef(() => McTabBody)) private host: McTabBody) {\n        super(componentFactoryResolver, viewContainerRef);\n    }\n\n    /** Set initial visibility or set up subscription for changing visibility. */\n    ngOnInit(): void {\n        super.ngOnInit();\n\n        this.centeringSub = this.host.beforeCentering\n            .pipe(startWith(this.host.isCenterPosition(this.host.bodyPosition)))\n            .subscribe((isCentering: boolean) => {\n                if (isCentering && !this.hasAttached()) {\n                    this.attach(this.host.content);\n                }\n            });\n\n        this.leavingSub = this.host.afterLeavingCenter.subscribe(() => {\n            this.detach();\n        });\n    }\n\n    /** Clean up centering subscription. */\n    ngOnDestroy(): void {\n        super.ngOnDestroy();\n        this.centeringSub.unsubscribe();\n        this.leavingSub.unsubscribe();\n    }\n}\n","import { Directive, ElementRef } from '@angular/core';\nimport {\n    CanDisable,\n    CanDisableCtor,\n    mixinDisabled\n} from '@ptsecurity/mosaic/core';\n\n\n// Boilerplate for applying mixins to McTabLabelWrapper.\n/** @docs-private */\nexport class McTabLabelWrapperBase {}\nexport const mcTabLabelWrapperMixinBase: CanDisableCtor &\n    typeof McTabLabelWrapperBase = mixinDisabled(McTabLabelWrapperBase);\n\n/**\n * Used in the `mc-tab-group` view to display tab labels.\n * @docs-private\n */\n@Directive({\n    selector: '[mcTabLabelWrapper]',\n    inputs: ['disabled'],\n    host: {\n        '[class.mc-disabled]': 'disabled',\n        '[attr.aria-disabled]': '!!disabled'\n    }\n})\nexport class McTabLabelWrapper extends mcTabLabelWrapperMixinBase implements CanDisable {\n    constructor(public elementRef: ElementRef) {\n        super();\n    }\n\n    /** Sets focus on the wrapper element */\n    focus(): void {\n        this.elementRef.nativeElement.focus();\n    }\n\n    getOffsetLeft(): number {\n        return this.elementRef.nativeElement.offsetLeft;\n    }\n\n    getOffsetWidth(): number {\n        return this.elementRef.nativeElement.offsetWidth;\n    }\n}\n","import {\n    AfterContentChecked,\n    AfterContentInit,\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    ContentChildren,\n    ElementRef,\n    EventEmitter,\n    Input,\n    NgZone,\n    OnDestroy,\n    Optional,\n    Output,\n    QueryList,\n    ViewChild,\n    ViewEncapsulation\n} from '@angular/core';\nimport { FocusKeyManager } from '@ptsecurity/cdk/a11y';\nimport { Direction, Directionality } from '@ptsecurity/cdk/bidi';\nimport { coerceNumberProperty } from '@ptsecurity/cdk/coercion';\nimport { END, ENTER, HOME, SPACE } from '@ptsecurity/cdk/keycodes';\nimport { ViewportRuler } from '@ptsecurity/cdk/scrolling';\nimport { merge, of as observableOf, Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\n\nimport { McTabLabelWrapper } from './tab-label-wrapper';\n\n\nconst VIEWPORT_THROTTLE_TIME = 150;\nconst SCROLL_DISTANCE_DELIMITER = 3;\n\n\n/**\n * The directions that scrolling can go in when the header's tabs exceed the header width. 'After'\n * will scroll the header towards the end of the tabs list and 'before' will scroll towards the\n * beginning of the list.\n */\nexport type ScrollDirection = 'after' | 'before';\n\n/**\n * The distance in pixels that will be overshot when scrolling a tab label into view. This helps\n * provide a small affordance to the label next to it.\n */\nconst EXAGGERATED_OVERSCROLL = 60;\n\n// Boilerplate for applying mixins to McTabHeader.\n/** @docs-private */\nexport class McTabHeaderBase {}\n\n/**\n * The header of the tab group which displays a list of all the tabs in the tab group.\n * When the tabs list's width exceeds the width of the header container,\n * then arrows will be displayed to allow the user to scroll\n * left and right across the header.\n * @docs-private\n */\n@Component({\n    selector: 'mc-tab-header',\n    templateUrl: 'tab-header.html',\n    styleUrls: ['tab-header.css'],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    host: {\n        class: 'mc-tab-header',\n        '[class.mc-tab-header__pagination-controls_enabled]':\n            'showPaginationControls',\n        '[class.mc-tab-header_rtl]': 'getLayoutDirection() == \\'rtl\\''\n    }\n})\nexport class McTabHeader extends McTabHeaderBase\n    implements AfterContentChecked, AfterContentInit, OnDestroy {\n    /** The index of the active tab. */\n    @Input()\n    get selectedIndex(): number {\n        return this._selectedIndex;\n    }\n    set selectedIndex(value: number) {\n        const coercedValue = coerceNumberProperty(value);\n        this.selectedIndexChanged = this._selectedIndex !== coercedValue;\n        this._selectedIndex = coercedValue;\n\n        if (this.keyManager) {\n            this.keyManager.updateActiveItem(coercedValue);\n        }\n    }\n\n    /** Tracks which element has focus; used for keyboard navigation */\n    get focusIndex(): number {\n        return this.keyManager ? this.keyManager.activeItemIndex! : 0;\n    }\n\n    /** When the focus index is set, we must manually send focus to the correct label */\n    set focusIndex(value: number) {\n        if (\n            !this.isValidIndex(value) ||\n            this.focusIndex === value ||\n            !this.keyManager\n        ) {\n            return;\n        }\n\n        this.keyManager.setActiveItem(value);\n    }\n\n    /** Sets the distance in pixels that the tab header should be transformed in the X-axis. */\n    get scrollDistance(): number {\n        return this._scrollDistance;\n    }\n    set scrollDistance(v: number) {\n        this._scrollDistance = Math.max(\n            0,\n            Math.min(this.getMaxScrollDistance(), v)\n        );\n\n        // Mark that the scroll distance has changed so that after the view is checked, the CSS\n        // transformation can move the header.\n        this.scrollDistanceChanged = true;\n        this.checkScrollingControls();\n    }\n\n    @ContentChildren(McTabLabelWrapper)\n    labelWrappers: QueryList<McTabLabelWrapper>;\n    @ViewChild('tabListContainer')\n    tabListContainer: ElementRef;\n    @ViewChild('tabList')\n    tabList: ElementRef;\n\n    /** Whether the controls for pagination should be displayed */\n    showPaginationControls = false;\n\n    /** Whether the tab list can be scrolled more towards the end of the tab label list. */\n    disableScrollAfter = true;\n\n    /** Whether the tab list can be scrolled more towards the beginning of the tab label list. */\n    disableScrollBefore = true;\n\n    /** Event emitted when the option is selected. */\n    @Output()\n    readonly selectFocusedIndex: EventEmitter<number> = new EventEmitter<number>();\n\n    /** Event emitted when a label is focused. */\n    @Output()\n    readonly indexFocused: EventEmitter<number> = new EventEmitter<number>();\n\n    /** The distance in pixels that the tab labels should be translated to the left. */\n    private _scrollDistance = 0;\n\n    /** Whether the header should scroll to the selected index after the view has been checked. */\n    private selectedIndexChanged = false;\n\n    /** Emits when the component is destroyed. */\n    private readonly destroyed = new Subject<void>();\n\n    /**\n     * The number of tab labels that are displayed on the header. When this changes, the header\n     * should re-evaluate the scroll position.\n     */\n    private tabLabelCount: number;\n\n    /** Whether the scroll distance has changed and should be applied after the view is checked. */\n    private scrollDistanceChanged: boolean;\n\n    /** Used to manage focus between the tabs. */\n    private keyManager: FocusKeyManager<McTabLabelWrapper>;\n\n    /** Cached text content of the header. */\n    private currentTextContent: string;\n\n    private _selectedIndex: number = 0;\n\n    constructor(\n        private elementRef: ElementRef,\n        private changeDetectorRef: ChangeDetectorRef,\n        private viewportRuler: ViewportRuler,\n        @Optional() private dir: Directionality,\n        private ngZone: NgZone\n    ) {\n        super();\n    }\n\n    ngAfterContentChecked(): void {\n        // If the number of tab labels have changed, check if scrolling should be enabled\n        if (this.tabLabelCount !== this.labelWrappers.length) {\n            this.updatePagination();\n            this.tabLabelCount = this.labelWrappers.length;\n            this.changeDetectorRef.markForCheck();\n        }\n\n        // If the selected index has changed, scroll to the label and check if the scrolling controls\n        // should be disabled.\n        if (this.selectedIndexChanged) {\n            this.scrollToLabel(this._selectedIndex);\n            this.checkScrollingControls();\n            this.selectedIndexChanged = false;\n            this.changeDetectorRef.markForCheck();\n        }\n\n        // If the scroll distance has been changed (tab selected, focused, scroll controls activated),\n        // then translate the header to reflect this.\n        if (this.scrollDistanceChanged) {\n            this.updateTabScrollPosition();\n            this.scrollDistanceChanged = false;\n            this.changeDetectorRef.markForCheck();\n        }\n    }\n\n    handleKeydown(event: KeyboardEvent) {\n        switch (event.keyCode) {\n            case HOME:\n                this.keyManager.setFirstItemActive();\n                event.preventDefault();\n                break;\n            case END:\n                this.keyManager.setLastItemActive();\n                event.preventDefault();\n                break;\n            case ENTER:\n            case SPACE:\n                this.selectFocusedIndex.emit(this.focusIndex);\n                event.preventDefault();\n                break;\n            default:\n                this.keyManager.onKeydown(event);\n        }\n    }\n\n    ngAfterContentInit() {\n        const dirChange = this.dir ? this.dir.change : observableOf(null);\n        const resize = this.viewportRuler.change(VIEWPORT_THROTTLE_TIME);\n        const realign = () => {\n            this.updatePagination();\n        };\n\n        this.keyManager = new FocusKeyManager(this.labelWrappers)\n            .withHorizontalOrientation(this.getLayoutDirection())\n            .withWrap();\n\n        this.keyManager.updateActiveItem(0);\n\n        // Defer the first call in order to allow for slower browsers to lay out the elements.\n        // This helps in cases where the user lands directly on a page with paginated tabs.\n        typeof requestAnimationFrame === undefined\n            ? realign()\n            : requestAnimationFrame(realign);\n\n        // On dir change or window resize, update the orientation of\n        // the key manager if the direction has changed.\n        merge(dirChange, resize)\n            .pipe(takeUntil(this.destroyed))\n            .subscribe(() => {\n                realign();\n                this.keyManager.withHorizontalOrientation(\n                    this.getLayoutDirection()\n                );\n            });\n\n        // If there is a change in the focus key manager we need to emit the `indexFocused`\n        // event in order to provide a public event that notifies about focus changes. Also we realign\n        // the tabs container by scrolling the new focused tab into the visible section.\n        this.keyManager.change\n            .pipe(takeUntil(this.destroyed))\n            .subscribe((newFocusIndex) => {\n                this.indexFocused.emit(newFocusIndex);\n                this.setTabFocus(newFocusIndex);\n            });\n    }\n\n    ngOnDestroy() {\n        this.destroyed.next();\n        this.destroyed.complete();\n    }\n\n    /**\n     * Callback for when the MutationObserver detects that the content has changed.\n     */\n    onContentChanges() {\n        const textContent = this.elementRef.nativeElement.textContent;\n\n        // We need to diff the text content of the header, because the MutationObserver callback\n        // will fire even if the text content didn't change which is inefficient and is prone\n        // to infinite loops if a poorly constructed expression is passed in.\n\n        if (textContent !== this.currentTextContent) {\n            this.currentTextContent = textContent;\n\n            const zoneCallback = () => {\n                this.updatePagination();\n                this.changeDetectorRef.markForCheck();\n            };\n\n            // The content observer runs outside the `NgZone` by default, which\n            // means that we need to bring the callback back in ourselves.\n            // TODO: Remove null check for `_ngZone` once it's a required parameter.\n            this.ngZone ? this.ngZone.run(zoneCallback) : zoneCallback();\n        }\n    }\n\n    /**\n     * Updating the view whether pagination should be enabled or not\n     *\n     * WARNING: Calling this method can be very costly in terms of performance.  It should be called\n     * as infrequently as possible from outside of the Tabs component as it causes a reflow of the\n     * page.\n     */\n    updatePagination() {\n        this.checkPaginationEnabled();\n        this.checkScrollingControls();\n        this.updateTabScrollPosition();\n    }\n\n    /**\n     * Determines if an index is valid.  If the tabs are not ready yet, we assume that the user is\n     * providing a valid index and return true.\n     */\n    isValidIndex(index: number): boolean {\n        if (!this.labelWrappers) {\n            return true;\n        }\n\n        const tab = this.labelWrappers\n            ? this.labelWrappers.toArray()[index]\n            : null;\n\n        return !!tab && !tab.disabled;\n    }\n\n    /**\n     * Sets focus on the HTML element for the label wrapper and scrolls it into the view if\n     * scrolling is enabled.\n     */\n    setTabFocus(tabIndex: number) {\n        if (this.showPaginationControls) {\n            this.scrollToLabel(tabIndex);\n        }\n\n        if (this.labelWrappers && this.labelWrappers.length) {\n            this.labelWrappers.toArray()[tabIndex].focus();\n\n            // Do not let the browser manage scrolling to focus the element, this will be handled\n            // by using translation. In LTR, the scroll left should be 0. In RTL, the scroll width\n            // should be the full width minus the offset width.\n            const containerEl = this.tabListContainer.nativeElement;\n            const dir = this.getLayoutDirection();\n\n            if (dir === 'ltr') {\n                containerEl.scrollLeft = 0;\n            } else {\n                containerEl.scrollLeft =\n                    containerEl.scrollWidth - containerEl.offsetWidth;\n            }\n        }\n    }\n\n    /** The layout direction of the containing app. */\n    getLayoutDirection(): Direction {\n        return this.dir && this.dir.value === 'rtl' ? 'rtl' : 'ltr';\n    }\n\n    /** Performs the CSS transformation on the tab list that will cause the list to scroll. */\n    updateTabScrollPosition() {\n        const scrollDistance = this.scrollDistance;\n        const translateX =\n            this.getLayoutDirection() === 'ltr'\n                ? -scrollDistance\n                : scrollDistance;\n\n        // Don't use `translate3d` here because we don't want to create a new layer. A new layer\n        // seems to cause flickering and overflow in Internet Explorer.\n        // See: https://github.com/angular/material2/issues/10276\n        // We round the `transform` here, because transforms with sub-pixel precision cause some\n        // browsers to blur the content of the element.\n        this.tabList.nativeElement.style.transform = `translateX(${Math.round(translateX)}px)`;\n\n        // Setting the `transform` on IE will change the scroll offset of the parent, causing the\n        // position to be thrown off in some cases. We have to reset it ourselves to ensure that\n        // it doesn't get thrown off.\n        this.tabList.nativeElement.scrollLeft = 0;\n    }\n\n    /**\n     * Moves the tab list in the 'before' or 'after' direction (towards the beginning of the list or\n     * the end of the list, respectively). The distance to scroll is computed to be a third of the\n     * length of the tab list view window.\n     *\n     * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n     * should be called sparingly.\n     */\n    scrollHeader(scrollDir: ScrollDirection) {\n        const viewLength = this.tabListContainer.nativeElement.offsetWidth;\n\n        // Move the scroll distance one-third the length of the tab list's viewport.\n        this.scrollDistance +=\n            ((scrollDir === 'before' ? -1 : 1) * viewLength) / SCROLL_DISTANCE_DELIMITER;\n    }\n\n    /**\n     * Moves the tab list such that the desired tab label (marked by index) is moved into view.\n     *\n     * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n     * should be called sparingly.\n     */\n    scrollToLabel(labelIndex: number) {\n        const selectedLabel = this.labelWrappers\n            ? this.labelWrappers.toArray()[labelIndex]\n            : null;\n\n        if (!selectedLabel) {\n            return;\n        }\n\n        // The view length is the visible width of the tab labels.\n        const viewLength = this.tabListContainer.nativeElement.offsetWidth;\n\n        let labelBeforePos: number;\n        let labelAfterPos: number;\n\n        if (this.getLayoutDirection() === 'ltr') {\n            labelBeforePos = selectedLabel.getOffsetLeft();\n            labelAfterPos = labelBeforePos + selectedLabel.getOffsetWidth();\n        } else {\n            labelAfterPos =\n                this.tabList.nativeElement.offsetWidth -\n                selectedLabel.getOffsetLeft();\n            labelBeforePos = labelAfterPos - selectedLabel.getOffsetWidth();\n        }\n\n        const beforeVisiblePos = this.scrollDistance;\n        const afterVisiblePos = this.scrollDistance + viewLength;\n\n        if (labelBeforePos < beforeVisiblePos) {\n            // Scroll header to move label to the before direction\n            this.scrollDistance -=\n                beforeVisiblePos - labelBeforePos + EXAGGERATED_OVERSCROLL;\n        } else if (labelAfterPos > afterVisiblePos) {\n            // Scroll header to move label to the after direction\n            this.scrollDistance +=\n                labelAfterPos - afterVisiblePos + EXAGGERATED_OVERSCROLL;\n        }\n    }\n\n    /**\n     * Evaluate whether the pagination controls should be displayed. If the scroll width of the\n     * tab list is wider than the size of the header container, then the pagination controls should\n     * be shown.\n     *\n     * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n     * should be called sparingly.\n     */\n    checkPaginationEnabled() {\n        const isEnabled =\n            this.tabList.nativeElement.scrollWidth >\n            this.elementRef.nativeElement.offsetWidth;\n\n        if (!isEnabled) {\n            this.scrollDistance = 0;\n        }\n\n        if (isEnabled !== this.showPaginationControls) {\n            this.changeDetectorRef.markForCheck();\n        }\n\n        this.showPaginationControls = isEnabled;\n    }\n\n    /**\n     * Evaluate whether the before and after controls should be enabled or disabled.\n     * If the header is at the beginning of the list (scroll distance is equal to 0) then disable the\n     * before button. If the header is at the end of the list (scroll distance is equal to the\n     * maximum distance we can scroll), then disable the after button.\n     *\n     * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n     * should be called sparingly.\n     */\n    checkScrollingControls() {\n        // Check if the pagination arrows should be activated.\n        this.disableScrollBefore = this.scrollDistance === 0;\n        this.disableScrollAfter =\n            this.scrollDistance === this.getMaxScrollDistance();\n        this.changeDetectorRef.markForCheck();\n    }\n\n    /**\n     * Determines what is the maximum length in pixels that can be set for the scroll distance. This\n     * is equal to the difference in width between the tab list container and tab header container.\n     *\n     * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n     * should be called sparingly.\n     */\n    getMaxScrollDistance(): number {\n        const lengthOfTabList = this.tabList.nativeElement.scrollWidth;\n        const viewLength = this.tabListContainer.nativeElement.offsetWidth;\n\n        return lengthOfTabList - viewLength || 0;\n    }\n}\n","import { ComponentRef, Injectable } from '@angular/core';\n\nimport { Observable } from 'rxjs';\nimport { filter } from 'rxjs/operators';\n\nimport { ESCAPE } from '@ptsecurity/cdk/keycodes';\nimport { Overlay, OverlayRef } from '@ptsecurity/cdk/overlay';\nimport { ComponentPortal } from '@ptsecurity/cdk/portal';\n\nimport { McModalControlService } from './modal-control.service';\nimport { McModalRef } from './modal-ref.class';\nimport { McModalComponent } from './modal.component';\nimport { ConfirmType, IModalOptions, IModalOptionsForService } from './modal.type';\n\n\n// A builder used for managing service creating modals\nexport class ModalBuilderForService {\n\n    // Modal ComponentRef, \"null\" means it has been destroyed\n    private modalRef: ComponentRef<McModalComponent>;\n    private overlayRef: OverlayRef;\n\n    constructor(private overlay: Overlay, options: IModalOptionsForService = {}) {\n        this.createModal();\n\n        if (!('mcGetContainer' in options)) {\n            options.mcGetContainer = null;\n        }\n\n        this.changeProps(options);\n        this.modalRef.instance.open();\n        this.modalRef.instance.mcAfterClose.subscribe(() => this.destroyModal());\n\n        this.overlayRef.keydownEvents()\n            // @ts-ignore\n            .pipe(filter((event: KeyboardEvent) => {\n                return event.keyCode === ESCAPE && options.mcCloseByESC;\n            }))\n            .subscribe(() => this.modalRef.instance.close());\n    }\n\n    getInstance(): McModalComponent {\n        return this.modalRef && this.modalRef.instance;\n    }\n\n    destroyModal(): void {\n        if (this.modalRef) {\n            this.overlayRef.dispose();\n            // @ts-ignore\n            this.modalRef = null;\n        }\n    }\n\n    private changeProps(options: IModalOptions): void {\n        if (this.modalRef) {\n            // here not limit user's inputs at runtime\n            Object.assign(this.modalRef.instance, options);\n        }\n    }\n\n    // Create component to ApplicationRef\n    private createModal(): void {\n        this.overlayRef = this.overlay.create();\n        this.modalRef = this.overlayRef.attach(new ComponentPortal(McModalComponent));\n    }\n}\n\n@Injectable()\nexport class McModalService {\n    // Track of the current close modals (we assume invisible is close this time)\n    get openModals(): McModalRef[] {\n        return this.modalControl.openModals;\n    }\n\n    get afterAllClose(): Observable<void> {\n        return this.modalControl.afterAllClose.asObservable();\n    }\n\n    constructor(\n        private overlay: Overlay,\n        private modalControl: McModalControlService) {\n    }\n\n    // Closes all of the currently-open dialogs\n    closeAll(): void {\n        this.modalControl.closeAll();\n    }\n\n    create<T>(options: IModalOptionsForService<T> = {}): McModalRef<T> {\n\n        if (typeof options.mcOnCancel !== 'function') {\n            // Leave a empty function to close this modal by default\n            // tslint:disable-next-line\n            options.mcOnCancel = () => {};\n        }\n\n        if (!('mcCloseByESC' in options)) {\n            options.mcCloseByESC = true;\n        }\n\n\n        if (!('mcWidth' in options)) {\n            // tslint:disable-next-line\n            options.mcWidth = 480;\n        }\n\n        return new ModalBuilderForService(this.overlay, options).getInstance();\n    }\n\n    confirm<T>(options: IModalOptionsForService<T> = {}, confirmType: ConfirmType = 'confirm'): McModalRef<T> {\n        if ('mcFooter' in options) {\n            console.warn(`The Confirm-Modal doesn't support \"mcFooter\", this property will be ignored.`);\n        }\n\n        // NOTE: only support function currently by calling confirm()\n        if (typeof options.mcOnOk !== 'function') {\n            // Leave a empty function to close this modal by default\n            // tslint:disable-next-line\n            options.mcOnOk = () => {};\n        }\n\n        options.mcModalType = 'confirm';\n        options.mcClassName = `mc-confirm mc-confirm-${confirmType} ${options.mcClassName || ''}`;\n        options.mcMaskClosable = false;\n\n        return this.create(options);\n    }\n\n    success<T>(options: IModalOptionsForService<T> = {}): McModalRef<T> {\n        return this.simpleConfirm(options, 'success');\n    }\n\n    delete<T>(options: IModalOptionsForService<T> = {}): McModalRef<T> {\n        return this.simpleConfirm(options, 'warn');\n    }\n\n    private simpleConfirm<T>(options: IModalOptionsForService<T> = {}, confirmType: ConfirmType): McModalRef<T> {\n        // Remove the Cancel button if the user not specify a Cancel button\n        if (!('mcCancelText' in options)) {\n            // @ts-ignore\n            options.mcCancelText = null;\n        }\n\n        return this.confirm(options, confirmType);\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { OverlayModule } from '@ptsecurity/cdk/overlay';\nimport { McButtonModule } from '@ptsecurity/mosaic/button';\nimport { McIconModule } from '@ptsecurity/mosaic/icon';\n\nimport { CssUnitPipe } from './css-unit.pipe';\nimport { McModalControlService } from './modal-control.service';\nimport { McModalComponent } from './modal.component';\nimport { McModalService } from './modal.service';\n\n\n@NgModule({\n    imports: [ CommonModule, OverlayModule, McButtonModule, McIconModule ],\n    exports: [ McModalComponent ],\n    declarations: [ McModalComponent, CssUnitPipe ],\n    entryComponents: [ McModalComponent ],\n    providers: [ McModalControlService, McModalService ]\n})\nexport class McModalModule { }\n","import { fromEvent, Observable, Subscription } from 'rxjs';\nimport { debounceTime } from 'rxjs/operators';\n\nimport {\n    AfterViewInit,\n    Component, Directive,\n    ElementRef,\n    HostBinding,\n    Input,\n    OnDestroy,\n    OnInit,\n    ViewEncapsulation,\n    ContentChild,\n    TemplateRef,\n    ChangeDetectorRef,\n    ChangeDetectionStrategy,\n    ViewChild\n} from '@angular/core';\nimport { FocusMonitor, FocusOrigin } from '@ptsecurity/cdk/a11y';\nimport { SPACE } from '@ptsecurity/cdk/keycodes';\nimport { Platform } from '@ptsecurity/cdk/platform';\nimport { CanDisable, CanDisableCtor, mixinDisabled } from '@ptsecurity/mosaic/core';\n\n\nconst COLLAPSED_CLASS: string = 'mc-navbar-collapsed-title';\nconst MC_ICON = 'mc-icon';\nconst MC_NAVBAR = 'mc-navbar';\nconst MC_NAVBAR_CONTAINER = 'mc-navbar-container';\nconst MC_NAVBAR_ITEM = 'mc-navbar-item';\nconst MC_NAVBAR_BRAND = 'mc-navbar-brand';\nconst MC_NAVBAR_TITLE = 'mc-navbar-title';\nconst MC_NAVBAR_LOGO = 'mc-navbar-logo';\n\nexport type McNavbarContainerPositionType = 'left' | 'right';\n\nexport interface IMcNavbarDropdownItem {\n    link?: string;\n    text: string;\n}\n\n@Directive({\n    selector: MC_NAVBAR_LOGO,\n    host: {\n        class: MC_NAVBAR_LOGO\n    }\n})\nexport class McNavbarLogo {}\n\n@Directive({\n    selector: MC_NAVBAR_BRAND,\n    host: {\n        class: MC_NAVBAR_BRAND\n    }\n})\nexport class McNavbarBrand {}\n\n@Directive({\n    selector: MC_NAVBAR_TITLE,\n    host: {\n        class: MC_NAVBAR_TITLE\n    }\n})\nexport class McNavbarTitle {}\n\nexport class McNavbarItemBase {\n    constructor(public _elementRef: ElementRef) {}\n}\n\nexport const _McNavbarMixinBase: CanDisableCtor & typeof McNavbarItemBase = mixinDisabled(McNavbarItemBase);\n\n@Component({\n    selector: MC_NAVBAR_ITEM,\n    template: `\n        <a\n            [attr.tabindex]=\\\"disabled ? -1 : tabIndex\\\"\n            (click)=\"handleClickByItem()\"\n            (keydown)=\"handleKeydown($event)\"\n            class=\"mc-navbar-item\"\n        >\n            <ng-content></ng-content>\n            <i *ngIf=\"hasDropdownContent\" mc-icon=\"mc-angle-M_16\"></i>\n        </a>\n        <ul\n            #dropdownContent\n            *ngIf=\"hasDropdownContent\"\n            [ngClass]=\"{ 'is-collapsed': isCollapsed }\"\n            class=\"mc-navbar-dropdown\"\n        >\n            <li\n                *ngFor=\"let item of dropdownItems\"\n                (click)=\"handleClickByDropdownItem()\"\n                class=\"mc-navbar-dropdown-item\"\n            >\n                <ng-container *ngIf=\"dropdownItemTmpl\">\n                    <ng-container *ngTemplateOutlet=\"dropdownItemTmpl; context: { $implicit: item }\"></ng-container>\n                </ng-container>\n                <a\n                    *ngIf=\"!dropdownItemTmpl\"\n                    [attr.href]=\"item.link\"\n                    [ngClass]=\"{ 'is-active': isActiveDropdownLink(item.link) }\"\n                    class=\"mc-navbar-dropdown-link\"\n                >{{ item.text }}</a>\n            </li>\n        </ul>\n    `,\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    inputs: ['disabled'],\n    host: {\n        '[attr.disabled]': 'disabled || null',\n        '[attr.tabindex]': '-1'\n    }\n})\nexport class McNavbarItem extends _McNavbarMixinBase implements OnInit, AfterViewInit, OnDestroy, CanDisable {\n\n    @Input()\n    tabIndex: number = 0;\n\n    @Input()\n    dropdownItems: IMcNavbarDropdownItem[] = [];\n\n    @Input()\n    set collapsedTitle(value: string) {\n        this.elementRef.nativeElement.setAttribute('computedTitle', encodeURI(value));\n    }\n\n    @ContentChild('dropdownItemTmpl', { read: TemplateRef })\n    dropdownItemTmpl: TemplateRef<IMcNavbarDropdownItem>;\n\n    @ViewChild('dropdownContent', { read: ElementRef })\n    dropdownContent: ElementRef;\n\n    get hasDropdownContent() {\n        return this.dropdownItems.length > 0;\n    }\n\n    isCollapsed: boolean = true;\n\n    private _subscription: Subscription = new Subscription();\n    private _focusMonitor$: Observable<FocusOrigin>;\n\n    private get _dropdownElements(): HTMLElement[] {\n        return this.dropdownContent ? this.dropdownContent.nativeElement.querySelectorAll('li > *') : [];\n    }\n\n    constructor(\n        public  elementRef: ElementRef,\n        private _focusMonitor: FocusMonitor,\n        private _platform: Platform,\n        private _cdRef: ChangeDetectorRef\n    ) {\n        super(elementRef);\n    }\n\n    ngOnInit() {\n        this.denyClickIfDisabled();\n\n        this._focusMonitor$ = this._focusMonitor.monitor(this.elementRef.nativeElement, true);\n\n        if (this.hasDropdownContent) {\n            this.listenClickOutside();\n        }\n    }\n\n    ngAfterViewInit() {\n        if (!this.hasDropdownContent) {\n            return;\n        }\n\n        this.startListenFocusDropdownItems();\n    }\n\n    ngOnDestroy() {\n        this._subscription.unsubscribe();\n        this._focusMonitor.stopMonitoring(this.elementRef.nativeElement);\n        this.stopListenFocusDropdownItems();\n    }\n\n    isActiveDropdownLink(link: string): boolean {\n        if (!this._platform.isBrowser) {\n            return false;\n        }\n\n        return window.location.href.indexOf(link) >= 0;\n    }\n\n    handleClickByItem() {\n        this.toggleDropdown();\n    }\n\n    handleKeydown($event: KeyboardEvent) {\n        const isNavbarItem = ($event.target as HTMLElement).classList.contains(MC_NAVBAR_ITEM);\n\n        // tslint:disable-next-line\n        if (this.hasDropdownContent && $event.keyCode === SPACE && isNavbarItem) {\n            this.toggleDropdown();\n        }\n    }\n\n    handleClickByDropdownItem() {\n        this.forceCloseDropdown();\n    }\n\n    private listenClickOutside() {\n        this._subscription.add(\n            this._focusMonitor$.subscribe((origin) => {\n                if (origin === null) {\n                    this.forceCloseDropdown();\n                }\n            })\n        );\n    }\n\n    private toggleDropdown() {\n        this.isCollapsed = !this.isCollapsed;\n    }\n\n    private forceCloseDropdown() {\n        this.isCollapsed = true;\n        this._cdRef.detectChanges();\n    }\n\n    private startListenFocusDropdownItems() {\n        this._dropdownElements.forEach((el) => {\n            this._focusMonitor.monitor(el, true);\n        });\n    }\n\n    private stopListenFocusDropdownItems() {\n        this._dropdownElements.forEach((el) => {\n            this._focusMonitor.stopMonitoring(el);\n        });\n    }\n\n    // This method is required due to angular 2 issue https://github.com/angular/angular/issues/11200\n    private denyClickIfDisabled() {\n        const events: Event[] = this.elementRef.nativeElement.eventListeners('click');\n\n        events.forEach((event) => this.elementRef.nativeElement.removeEventListener('click', event));\n\n        this.elementRef.nativeElement.addEventListener('click', (event: MouseEvent) => {\n            if (this.elementRef.nativeElement.hasAttribute('disabled')) {\n                event.stopImmediatePropagation();\n            }\n        }, true);\n\n        events.forEach((event) => this.elementRef.nativeElement.addEventListener('click', event));\n    }\n}\n\n@Directive({\n    selector: MC_NAVBAR_CONTAINER\n})\nexport class McNavbarContainer {\n    @Input()\n    position: McNavbarContainerPositionType = 'left';\n\n    @HostBinding('class')\n    get cssClasses(): string {\n        return this.position === 'left' ? 'mc-navbar-left' : 'mc-navbar-right';\n    }\n}\n\nclass CollapsibleItem {\n    private _collapsed: boolean = false;\n\n    constructor(\n        public element: HTMLElement,\n        public width: number\n    ) {}\n\n    processCollapsed(collapsed: boolean) {\n        this._collapsed = collapsed;\n\n        this.updateCollapsedClass();\n    }\n\n    private updateCollapsedClass() {\n        if (this._collapsed) {\n            this.element.classList.add(COLLAPSED_CLASS);\n        } else {\n            this.element.classList.remove(COLLAPSED_CLASS);\n        }\n\n    }\n}\n\nclass CachedItemWidth {\n\n    get canCollapse(): boolean {\n        return this.itemsForCollapse.length > 0;\n    }\n\n    private _collapsedItemsWidth: number;\n\n    get collapsedItemsWidth(): number {\n        if (this._collapsedItemsWidth !== undefined) {\n            return this._collapsedItemsWidth;\n        }\n\n        this.calculateAndCacheCollapsedItemsWidth();\n\n        return this._collapsedItemsWidth;\n    }\n\n    constructor(\n        public element: HTMLElement,\n        public width: number,\n        public itemsForCollapse: CollapsibleItem[] = []\n    ) {}\n\n    processCollapsed(collapsed: boolean) {\n        if (this.itemsForCollapse.length > 0) {\n            this.updateTitle(collapsed);\n        }\n\n        this.itemsForCollapse.forEach((item) => item.processCollapsed(collapsed));\n    }\n\n    private calculateAndCacheCollapsedItemsWidth() {\n        this._collapsedItemsWidth = this.itemsForCollapse\n            .reduce((acc, item) => acc + item.width, 0);\n    }\n\n    private getTitle(): string {\n        const computedTitle = this.element.getAttribute('computedTitle');\n\n        return computedTitle\n            ? decodeURI(computedTitle)\n            : (this.itemsForCollapse.length > 0 ? this.itemsForCollapse[0].element.innerText : '');\n    }\n\n    private updateTitle(collapsed: boolean) {\n        if (collapsed) {\n            this.element.setAttribute('title', this.getTitle());\n        } else {\n            this.element.removeAttribute('title');\n        }\n    }\n}\n\n\n@Component({\n    selector: MC_NAVBAR,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    template: `\n        <nav class=\"mc-navbar\">\n            <ng-content select=\"[${MC_NAVBAR_CONTAINER}],${MC_NAVBAR_CONTAINER}\"></ng-content>\n        </nav>\n    `,\n    styleUrls: ['./navbar.css'],\n    encapsulation: ViewEncapsulation.None\n})\nexport class McNavbar implements AfterViewInit, OnDestroy {\n\n    private readonly forceRecalculateItemsWidth: boolean = false;\n    private readonly resizeDebounceInterval: number = 100;\n    private readonly firstLevelElement: string = MC_NAVBAR_CONTAINER;\n    private readonly secondLevelElements: string[] = [\n        MC_NAVBAR_ITEM,\n        MC_NAVBAR_BRAND,\n        MC_NAVBAR_TITLE\n    ];\n\n    private _totalItemsWidths: number;\n    private _itemsWidths: CachedItemWidth[];\n\n    private get maxAllowedWidth(): number {\n        return this._elementRef.nativeElement.querySelector('nav').getBoundingClientRect().width;\n    }\n\n    private get itemsWidths(): CachedItemWidth[] {\n        if (this._itemsWidths !== undefined && !this.forceRecalculateItemsWidth) {\n            return this._itemsWidths;\n        }\n\n        this.calculateAndCacheItemsWidth();\n\n        return this._itemsWidths;\n    }\n\n    private get totalItemsWidth(): number {\n        if (this._totalItemsWidths !== undefined && !this.forceRecalculateItemsWidth) {\n            return this._totalItemsWidths;\n        }\n\n        this.calculateAndCacheTotalItemsWidth();\n\n        return this._totalItemsWidths;\n    }\n\n    private _resizeSubscription: Subscription;\n\n    constructor(\n        private _elementRef: ElementRef\n    ) {\n        const resizeObserver = fromEvent(window, 'resize')\n            .pipe(debounceTime(this.resizeDebounceInterval));\n\n        this._resizeSubscription = resizeObserver.subscribe(this.updateCollapsed.bind(this));\n    }\n\n    updateCollapsed(): void {\n        let collapseDelta = this.totalItemsWidth - this.maxAllowedWidth;\n\n        for (let i = this.itemsWidths.length - 1; i >= 0; i--) {\n            const item = this.itemsWidths[i];\n\n            if (!item.canCollapse) {\n                continue;\n            }\n\n            item.processCollapsed(collapseDelta > 0);\n            collapseDelta -= item.collapsedItemsWidth;\n        }\n    }\n\n    ngAfterViewInit(): void {\n        // Note: this wait is required for loading and rendering fonts for icons;\n        // unfortunately we cannot control font rendering\n        setTimeout(() => this.updateCollapsed(), 0);\n    }\n\n    ngOnDestroy() {\n        this._resizeSubscription.unsubscribe();\n    }\n\n    private calculateAndCacheTotalItemsWidth() {\n        this._totalItemsWidths = this.itemsWidths\n            .reduce((acc, item) => acc + item.width, 0);\n    }\n\n    private getOuterElementWidth(element: HTMLElement): number {\n        const baseWidth  = element.getBoundingClientRect().width;\n        const marginRight = parseInt(getComputedStyle(element).getPropertyValue('margin-right'));\n        const marginLeft = parseInt(getComputedStyle(element).getPropertyValue('margin-left'));\n\n        return baseWidth + marginRight + marginLeft;\n    }\n\n    private calculateAndCacheItemsWidth() {\n        const allItemsSelector = this.secondLevelElements\n            .map((e: string) => `${this.firstLevelElement}>${e}`);\n        const allItems: HTMLElement[] = Array.from(this._elementRef.nativeElement.querySelectorAll(allItemsSelector));\n\n        this._itemsWidths = allItems\n            .map((el) => new CachedItemWidth(el, this.getOuterElementWidth(el), this.getItemsForCollapse(el)));\n    }\n\n    private getItemsForCollapse(element: HTMLElement): CollapsibleItem[] {\n        const icon = element.querySelector(`[${MC_ICON}],${MC_NAVBAR_LOGO},[${MC_NAVBAR_LOGO}]`);\n\n        if (!icon) {\n            return [];\n        }\n\n        return Array.from(element.querySelectorAll(MC_NAVBAR_TITLE))\n            .map((el) => new CollapsibleItem(<HTMLElement> el, el.getBoundingClientRect().width));\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { A11yModule } from '@ptsecurity/cdk/a11y';\nimport { PlatformModule } from '@ptsecurity/cdk/platform';\n\nimport { McIconModule } from '@ptsecurity/mosaic/icon';\n\nimport {\n    McNavbar,\n    McNavbarContainer,\n    McNavbarItem,\n    McNavbarTitle,\n    McNavbarBrand,\n    McNavbarLogo\n} from './navbar.component';\n\n\n@NgModule({\n    imports: [\n        CommonModule,\n        A11yModule,\n        PlatformModule,\n        McIconModule\n    ],\n    exports: [\n        McNavbar,\n        McNavbarContainer,\n        McNavbarTitle,\n        McNavbarItem,\n        McNavbarBrand,\n        McNavbarLogo\n    ],\n    declarations: [\n        McNavbar,\n        McNavbarContainer,\n        McNavbarTitle,\n        McNavbarItem,\n        McNavbarBrand,\n        McNavbarLogo\n    ]\n})\nexport class McNavbarModule {}\n","import {\n    ChangeDetectionStrategy,\n    Component,\n    ViewEncapsulation,\n    ElementRef,\n    Input\n} from '@angular/core';\nimport { CanColor, CanColorCtor, mixinColor, ThemePalette } from '@ptsecurity/mosaic/core';\n\n\nexport type ProgressBarMode = 'determinate' | 'indeterminate';\n\nlet idIterator = 0;\n\nconst MIN_PERCENT = 0;\nconst MAX_PERCENT = 100;\n\nexport class McProgressBarBase {\n    constructor(public _elementRef: ElementRef) {}\n}\n\nexport const _McProgressBarMixinBase:\n    CanColorCtor &\n    typeof McProgressBarBase =\n        mixinColor(McProgressBarBase);\n\n@Component({\n    selector: 'mc-progress-bar',\n    templateUrl: './progress-bar.component.html',\n    styleUrls: ['./progress-bar.css'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n    host: {\n        class: 'mc-progress-bar',\n        '[attr.id]': 'id'\n    }\n})\nexport class McProgressBar extends _McProgressBarMixinBase implements CanColor {\n    @Input() id: string = `mc-progress-bar-${idIterator++}`;\n    @Input() value: number = 0;\n    @Input() mode: ProgressBarMode = 'determinate';\n    @Input() color: ThemePalette = ThemePalette.Primary;\n\n    constructor(elementRef: ElementRef) {\n        super(elementRef);\n    }\n\n    get percentage(): number {\n        return Math.max(MIN_PERCENT, Math.min(MAX_PERCENT, this.value)) / MAX_PERCENT;\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { PlatformModule } from '@ptsecurity/cdk/platform';\n\nimport {\n    McProgressBar\n} from './progress-bar.component';\n\n\n@NgModule({\n    imports: [\n        CommonModule,\n        PlatformModule\n    ],\n    exports: [\n        McProgressBar\n    ],\n    declarations: [\n        McProgressBar\n    ]\n})\nexport class McProgressBarModule {}\n","import {\n    ChangeDetectionStrategy,\n    Component,\n    ViewEncapsulation,\n    ElementRef,\n    Input\n} from '@angular/core';\nimport { CanColor, CanColorCtor, mixinColor, ThemePalette } from '@ptsecurity/mosaic/core';\n\n\nexport type ProgressSpinnerMode = 'determinate' | 'indeterminate';\n\nlet idIterator = 0;\n\nconst MIN_PERCENT = 0;\nconst MAX_PERCENT = 100;\n\nexport class McProgressSpinnerBase {\n    constructor(public _elementRef: ElementRef) {}\n}\n\nexport const _McProgressSpinnerMixinBase:\n    CanColorCtor &\n    typeof McProgressSpinnerBase =\n        mixinColor(McProgressSpinnerBase);\n\nconst MAX_DASH_ARRAY = 273;\n\n@Component({\n    selector: 'mc-progress-spinner',\n    templateUrl: './progress-spinner.component.html',\n    styleUrls: ['./progress-spinner.css'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n    host: {\n        class: 'mc-progress-spinner',\n        '[attr.id]': 'id'\n    }\n})\nexport class McProgressSpinner extends _McProgressSpinnerMixinBase implements CanColor {\n    @Input() id: string = `mc-progress-spinner-${idIterator++}`;\n    @Input() value: number = 0;\n    @Input() mode: ProgressSpinnerMode = 'determinate';\n    @Input() color: ThemePalette = ThemePalette.Primary;\n\n    constructor(elementRef: ElementRef) {\n        super(elementRef);\n    }\n\n    get percentage(): number {\n        return Math.max(MIN_PERCENT, Math.min(MAX_PERCENT, this.value)) / MAX_PERCENT;\n    }\n\n    get dashOffsetPercent(): string {\n        return `${MAX_DASH_ARRAY - this.percentage * MAX_DASH_ARRAY}%`;\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { PlatformModule } from '@ptsecurity/cdk/platform';\n\nimport { McProgressSpinner } from './progress-spinner.component';\n\n\n@NgModule({\n    imports: [\n        CommonModule,\n        PlatformModule\n    ],\n    exports: [\n        McProgressSpinner\n    ],\n    declarations: [\n        McProgressSpinner\n    ]\n})\nexport class McProgressSpinnerModule {}\n","import {\n    AfterContentInit,\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component, ContentChildren, Directive, ElementRef, EventEmitter, forwardRef,\n    Input, OnDestroy, OnInit, Optional, Output, QueryList,\n    ViewChild,\n    ViewEncapsulation\n} from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\n\nimport { UniqueSelectionDispatcher } from '@ptsecurity/cdk/collections';\n\nimport {\n    CanColor, CanColorCtor,\n    CanDisable, CanDisableCtor,\n    HasTabIndex, HasTabIndexCtor,\n    mixinColor,\n    mixinDisabled,\n    mixinTabIndex,\n    toBoolean\n} from '@ptsecurity/mosaic/core';\n\n\n// Increasing integer for generating unique ids for radio components.\nlet nextUniqueId = 0;\n\n/** Change event object emitted by McRadio. */\nexport class McRadioChange {\n    constructor(\n        /** The McRadioButton that emits the change event. */\n        public source: McRadioButton,\n        /** The value of the McRadioButton. */\n        public value: any) {}\n}\n\n// Boilerplate for applying mixins to McRadioGroup.\n/** @docs-private */\nexport class McRadioGroupBase {}\nexport const _McRadioGroupMixinBase: CanDisableCtor & typeof McRadioGroupBase = mixinDisabled(McRadioGroupBase);\n\n/**\n * Provider Expression that allows mc-radio-group to register as a ControlValueAccessor. This\n * allows it to support [(ngModel)] and ngControl.\n * @docs-private\n */\nexport const MC_RADIO_GROUP_CONTROL_VALUE_ACCESSOR: any = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => McRadioGroup),\n    multi: true\n};\n\n@Directive({\n    selector: 'mc-radio-group',\n    exportAs: 'mcRadioGroup',\n    providers: [MC_RADIO_GROUP_CONTROL_VALUE_ACCESSOR],\n    host: {\n        role: 'radiogroup',\n        class: 'mc-radio-group'\n    },\n    inputs: ['disabled']\n})\nexport class McRadioGroup extends _McRadioGroupMixinBase\n    implements AfterContentInit, ControlValueAccessor, CanDisable {\n\n    /** Name of the radio button group. All radio buttons inside this group will use this name. */\n    @Input()\n    get name(): string { return this._name; }\n    set name(value: string) {\n        this._name = value;\n        this.updateRadioButtonNames();\n    }\n\n    /** Whether the labels should appear after or before the radio-buttons. Defaults to 'after' */\n    @Input()\n    get labelPosition(): 'before' | 'after' {\n        return this._labelPosition;\n    }\n    set labelPosition(v) {\n        this._labelPosition = v === 'before' ? 'before' : 'after';\n        this.markRadiosForCheck();\n    }\n\n    /** Value of the radio button. */\n    @Input()\n    get value(): any { return this._value; }\n    set value(newValue: any) {\n        if (this._value !== newValue) {\n            // Set this before proceeding to ensure no circular loop occurs with selection.\n            this._value = newValue;\n\n            this.updateSelectedRadioFromValue();\n            this.checkSelectedRadioButton();\n        }\n    }\n\n    /** Whether the radio button is selected. */\n    @Input()\n    get selected() { return this._selected; }\n    set selected(selected: McRadioButton | null) {\n        this._selected = selected;\n        this.value = selected ? selected.value : null;\n        this.checkSelectedRadioButton();\n    }\n\n    /** Whether the radio group is disabled */\n    @Input()\n    get disabled(): boolean { return this._disabled; }\n    set disabled(value) {\n        this._disabled = toBoolean(value);\n        this.markRadiosForCheck();\n    }\n\n    /** Whether the radio group is required */\n    @Input()\n    get required(): boolean { return this._required; }\n    set required(value: boolean) {\n        this._required = toBoolean(value);\n        this.markRadiosForCheck();\n    }\n\n    /**\n     * Event emitted when the group value changes.\n     * Change events are only emitted when the value changes due to user interaction with\n     * a radio button (the same behavior as `<input type-\"radio\">`).\n     */\n    @Output() readonly change: EventEmitter<McRadioChange> = new EventEmitter<McRadioChange>();\n\n    /** Child radio buttons. */\n    @ContentChildren(forwardRef(() => McRadioButton), { descendants: true })\n    _radios: QueryList<McRadioButton>;\n\n    /**\n     * Selected value for group. Should equal the value of the selected radio button if there *is*\n     * a corresponding radio button with a matching value. If there is *not* such a corresponding\n     * radio button, this value persists to be applied in case a new radio button is added with a\n     * matching value.\n     */\n    private _value: any = null;\n\n    /** The HTML name attribute applied to radio buttons in this group. */\n    private _name: string = `mc-radio-group-${nextUniqueId++}`;\n\n    /** The currently selected radio button. Should match value. */\n    private _selected: McRadioButton | null = null;\n\n    /** Whether the `value` has been set to its initial value. */\n    private _isInitialized: boolean = false;\n\n    /** Whether the labels should appear after or before the radio-buttons. Defaults to 'after' */\n    private _labelPosition: 'before' | 'after' = 'after';\n\n    /** Whether the radio group is disabled. */\n    private _disabled: boolean = false;\n\n    /** Whether the radio group is required. */\n    private _required: boolean = false;\n\n    constructor(\n        private readonly _changeDetector: ChangeDetectorRef\n    ) {\n        super();\n    }\n\n    /** The method to be called in order to update ngModel */\n    // tslint:disable-next-line\n    controlValueAccessorChangeFn: (value: any) => void = () => {};\n\n    /**\n     * onTouch function registered via registerOnTouch (ControlValueAccessor).\n     * @docs-private\n     */\n    // tslint:disable-next-line\n    onTouched: () => any = () => {};\n\n    checkSelectedRadioButton() {\n        if (this._selected && !this._selected.checked) {\n            this._selected.checked = true;\n        }\n    }\n\n    /**\n     * Initialize properties once content children are available.\n     * This allows us to propagate relevant attributes to associated buttons.\n     */\n    ngAfterContentInit() {\n        // Mark this component as initialized in AfterContentInit because the initial value can\n        // possibly be set by NgModel on McRadioGroup, and it is possible that the OnInit of the\n        // NgModel occurs *after* the OnInit of the McRadioGroup.\n        this._isInitialized = true;\n    }\n\n    /**\n     * Mark this group as being \"touched\" (for ngModel). Meant to be called by the contained\n     * radio buttons upon their blur.\n     */\n    touch() {\n        if (this.onTouched) {\n            this.onTouched();\n        }\n    }\n\n    /** Dispatch change event with current selection and group value. */\n    emitChangeEvent(): void {\n        if (this._isInitialized) {\n            this.change.emit(new McRadioChange(this._selected!, this._value));\n        }\n    }\n\n    markRadiosForCheck() {\n        if (this._radios) {\n            this._radios.forEach((radio) => radio.markForCheck());\n        }\n    }\n\n    /**\n     * Sets the model value. Implemented as part of ControlValueAccessor.\n     */\n    writeValue(value: any) {\n        this.value = value;\n        this._changeDetector.markForCheck();\n    }\n\n    /**\n     * Registers a callback to be triggered when the model value changes.\n     * Implemented as part of ControlValueAccessor.\n     * @param fn Callback to be registered.\n     */\n    registerOnChange(fn: (value: any) => void) {\n        this.controlValueAccessorChangeFn = fn;\n    }\n\n    /**\n     * Registers a callback to be triggered when the control is touched.\n     * Implemented as part of ControlValueAccessor.\n     * @param fn Callback to be registered.\n     */\n    registerOnTouched(fn: any) {\n        this.onTouched = fn;\n    }\n\n    /**\n     * Sets the disabled state of the control. Implemented as a part of ControlValueAccessor.\n     * @param isDisabled Whether the control should be disabled.\n     */\n    setDisabledState(isDisabled: boolean) {\n        this.disabled = isDisabled;\n        this._changeDetector.markForCheck();\n    }\n\n    private updateRadioButtonNames(): void {\n        if (this._radios) {\n            this._radios.forEach((radio) => {\n                radio.name = this.name;\n            });\n        }\n    }\n\n    /** Updates the `selected` radio button from the internal _value state. */\n    private updateSelectedRadioFromValue(): void {\n        // If the value already matches the selected radio, do nothing.\n        const isAlreadySelected = this._selected !== null && this._selected.value === this._value;\n\n        if (this._radios != null && !isAlreadySelected) {\n            this._selected = null;\n            this._radios.forEach((radio) => {\n                radio.checked = this.value === radio.value;\n                if (radio.checked) {\n                    this._selected = radio;\n                }\n            });\n        }\n    }\n}\n\n\n// Boilerplate for applying mixins to McRadioButton.\n/** @docs-private */\nexport class McRadioButtonBase {\n    // Since the disabled property is manually defined for the McRadioButton and isn't set up in\n    // the mixin base class. To be able to use the tabindex mixin, a disabled property must be\n    // defined to properly work.\n    disabled: boolean;\n\n    constructor(public _elementRef: ElementRef) {}\n}\n\nexport const _McRadioButtonMixinBase:\n    CanColorCtor &\n    HasTabIndexCtor &\n    typeof McRadioButtonBase =\n        mixinColor(mixinTabIndex(McRadioButtonBase));\n\n\n@Component({\n    selector: 'mc-radio-button',\n    templateUrl: 'radio.component.html',\n    styleUrls: ['radio.css'],\n    inputs: ['color', 'tabIndex'],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    exportAs: 'mcRadioButton',\n    host: {\n        class: 'mc-radio-button',\n        '[attr.id]': 'id',\n        '[class.mc-checked]': 'checked',\n        '[class.mc-disabled]': 'disabled',\n        '(focus)': '_inputElement.nativeElement.focus()'\n    }\n})\nexport class McRadioButton extends _McRadioButtonMixinBase\n    implements OnInit, OnDestroy, CanColor, HasTabIndex {\n\n    private readonly _uniqueId: string = `mc-radio-${++nextUniqueId}`;\n\n    /* tslint:disable:member-ordering */\n\n    /** The unique ID for the radio button. */\n    @Input() id: string = this._uniqueId;\n\n    /** Analog to HTML 'name' attribute used to group radios for unique selection. */\n    @Input() name: string;\n\n    /** Used to set the 'aria-label' attribute on the underlying input element. */\n    @Input('aria-label') ariaLabel: string;\n\n    /** The 'aria-labelledby' attribute takes precedence as the element's text alternative. */\n    @Input('aria-labelledby') ariaLabelledby: string;\n\n    /** The 'aria-describedby' attribute is read after the element's label and field type. */\n    @Input('aria-describedby') ariaDescribedby: string;\n\n    /** Whether this radio button is checked. */\n    @Input()\n    get checked(): boolean { return this._checked; }\n    set checked(value: boolean) {\n        const newCheckedState = toBoolean(value);\n\n        if (this._checked !== newCheckedState) {\n            this._checked = newCheckedState;\n\n            if (newCheckedState && this.radioGroup && this.radioGroup.value !== this.value) {\n                this.radioGroup.selected = this;\n            } else if (!newCheckedState && this.radioGroup && this.radioGroup.value === this.value) {\n                // When unchecking the selected radio button, update the selected radio\n                // property on the group.\n                this.radioGroup.selected = null;\n            }\n\n            if (newCheckedState) {\n                // Notify all radio buttons with the same name to un-check.\n                this._radioDispatcher.notify(this.id, this.name);\n            }\n            this._changeDetector.markForCheck();\n        }\n    }\n\n    /** The value of this radio button. */\n    @Input()\n    get value(): any { return this._value; }\n    set value(value: any) {\n        if (this._value !== value) {\n            this._value = value;\n            if (this.radioGroup != null) {\n                if (!this.checked) {\n                    // Update checked when the value changed to match the radio group's value\n                    this.checked = this.radioGroup.value === value;\n                }\n                if (this.checked) {\n                    this.radioGroup.selected = this;\n                }\n            }\n        }\n    }\n\n    /** Whether the radio button is disabled. */\n    @Input()\n    get disabled(): boolean {\n        return this._disabled || (this.radioGroup != null && this.radioGroup.disabled);\n    }\n    set disabled(value: boolean) {\n        const newDisabledState = toBoolean(value);\n\n        if (this._disabled !== newDisabledState) {\n\n            this._disabled = newDisabledState;\n            this._changeDetector.markForCheck();\n        }\n    }\n\n    /** Whether the radio button is required. */\n    @Input()\n    get required(): boolean {\n        return this._required || (this.radioGroup && this.radioGroup.required);\n    }\n    set required(value: boolean) {\n        this._required = toBoolean(value);\n    }\n\n    /** Whether the label should appear after or before the radio button. Defaults to 'after' */\n    @Input()\n    get labelPosition(): 'before' | 'after' {\n        return this._labelPosition || (this.radioGroup && this.radioGroup.labelPosition) || 'after';\n    }\n    set labelPosition(value) {\n        this._labelPosition = value;\n    }\n    private _labelPosition: 'before' | 'after';\n\n    /** The native `<input type=radio>` element */\n    @ViewChild('input') _inputElement: ElementRef;\n\n    /**\n     * Event emitted when the checked state of this radio button changes.\n     * Change events are only emitted when the value changes due to user interaction with\n     * the radio button (the same behavior as `<input type-\"radio\">`).\n     */\n    @Output() readonly change: EventEmitter<McRadioChange> = new EventEmitter<McRadioChange>();\n\n    /** The parent radio group. May or may not be present. */\n    radioGroup: McRadioGroup;\n\n    @Input()\n    isFocused: boolean = false;\n\n    /** ID of the native input element inside `<mc-radio-button>` */\n    get inputId(): string { return `${this.id || this._uniqueId}-input`; }\n\n    /** Whether this radio is checked. */\n    private _checked: boolean = false;\n\n    /** Whether this radio is disabled. */\n    private _disabled: boolean;\n\n    /** Whether this radio is required. */\n    private _required: boolean;\n\n    /** Value assigned to this radio. */\n    private _value: any = null;\n\n    /** Unregister function for _radioDispatcher */\n    // tslint:disable-next-line\n    private readonly removeUniqueSelectionListener: () => void = () => {};\n\n    constructor(\n        @Optional() radioGroup: McRadioGroup,\n        elementRef: ElementRef,\n        private readonly _changeDetector: ChangeDetectorRef,\n        private readonly _radioDispatcher: UniqueSelectionDispatcher\n    ) {\n\n        super(elementRef);\n\n        this.radioGroup = radioGroup;\n\n        this.removeUniqueSelectionListener =\n            _radioDispatcher.listen((id: string, name: string) => {\n                if (id !== this.id && name === this.name) {\n                    this.checked = false;\n                }\n            });\n    }\n\n    ngOnInit() {\n        if (this.radioGroup) {\n            // If the radio is inside a radio group, determine if it should be checked\n            this.checked = this.radioGroup.value === this._value;\n            // Copy name from parent radio group\n            this.name = this.radioGroup.name;\n        }\n    }\n\n    ngOnDestroy() {\n        this.removeUniqueSelectionListener();\n    }\n\n    /** Focuses the radio button. */\n    // tslint:disable-next-line\n    focus(): void {}\n\n    /**\n     * Marks the radio button as needing checking for change detection.\n     * This method is exposed because the parent radio group will directly\n     * update bound properties of the radio button.\n     */\n    markForCheck() {\n        // When group value changes, the button will not be notified. Use `markForCheck` to explicit\n        // update radio button's status\n        this._changeDetector.markForCheck();\n    }\n\n    onInputClick(event: Event) {\n        // We have to stop propagation for click events on the visual hidden input element.\n        // By default, when a user clicks on a label element, a generated click event will be\n        // dispatched on the associated input element. Since we are using a label element as our\n        // root container, the click event on the `radio-button` will be executed twice.\n        // The real click event will bubble up, and the generated click event also tries to bubble up.\n        // This will lead to multiple click events.\n        // Preventing bubbling for the second event will solve that issue.\n        event.stopPropagation();\n    }\n\n    onInputChange(event: Event) {\n        // We always have to stop propagation on the change event.\n        // Otherwise the change event, from the input element, will bubble up and\n        // emit its event object to the `change` output.\n        event.stopPropagation();\n\n        const groupValueChanged = this.radioGroup && this.value !== this.radioGroup.value;\n        this.checked = true;\n        this.emitChangeEvent();\n\n        if (this.radioGroup) {\n            this.radioGroup.controlValueAccessorChangeFn(this.value);\n            this.radioGroup.touch();\n            if (groupValueChanged) {\n                this.radioGroup.emitChangeEvent();\n            }\n        }\n    }\n\n    /** Dispatch change event with current value. */\n    private emitChangeEvent(): void {\n        this.change.emit(new McRadioChange(this, this._value));\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { A11yModule } from '@ptsecurity/cdk/a11y';\nimport { McCommonModule } from '@ptsecurity/mosaic/core';\n\nimport { McRadioButton, McRadioGroup } from './radio.component';\n\n\n@NgModule({\n    imports: [CommonModule, A11yModule, McCommonModule],\n    exports: [McRadioGroup, McRadioButton],\n    declarations: [McRadioGroup, McRadioButton]\n})\nexport class McRadioModule {\n}\n","import { Directive, Input } from '@angular/core';\n\nimport { CdkTreeNodeDef } from '@ptsecurity/cdk/tree';\n\n\n@Directive({\n    selector: '[mcTreeNodeDef]',\n    inputs: ['when: mcTreeNodeDefWhen'],\n    providers: [{ provide: CdkTreeNodeDef, useExisting: McTreeNodeDef }]\n})\nexport class McTreeNodeDef<T> extends CdkTreeNodeDef<T> {\n    @Input('mcTreeNode') data: T;\n}\n","import { Directive, Input, OnInit } from '@angular/core';\nimport { CdkTreeNodePadding } from '@ptsecurity/cdk/tree';\n\n\n@Directive({\n    selector: '[mcTreeNodePadding]',\n    providers: [{ provide: CdkTreeNodePadding, useExisting: McTreeNodePadding }]\n})\nexport class McTreeNodePadding<T> extends CdkTreeNodePadding<T> implements OnInit {\n    get leftPadding(): number {\n        return (this._withIcon ? 0 : this._iconWidth) + this._baseLeftPadding;\n    }\n\n    _baseLeftPadding: number = 6;\n    _iconWidth: number = 20;\n    _indent: number = 16;\n\n    @Input('mcTreeNodePadding') level: number;\n\n    @Input('mcTreeNodePaddingIndent') indent: number;\n\n    _withIcon: boolean;\n\n    _paddingIndent(): string | null {\n        const nodeLevel = (this._treeNode.data && this._tree.treeControl.getLevel)\n            ? this._tree.treeControl.getLevel(this._treeNode.data)\n            : null;\n\n        const level = this._level || nodeLevel;\n\n        return level ? `${(level * this._indent) + this.leftPadding}px` : `${this._baseLeftPadding}px`;\n    }\n\n    ngOnInit(): void {\n        this._withIcon = this._tree.treeControl.isExpandable(this._treeNode.data);\n        this._setPadding();\n    }\n}\n","import {\n    AfterContentInit,\n    Attribute,\n    ChangeDetectionStrategy,\n    Component,\n    ContentChildren,\n    ElementRef,\n    EventEmitter,\n    forwardRef,\n    Input,\n    Output,\n    QueryList,\n    ViewEncapsulation,\n    ChangeDetectorRef,\n    Inject,\n    OnDestroy,\n    OnInit,\n    ViewChild\n} from '@angular/core';\n\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\n\nimport { Subscription } from 'rxjs';\n\nimport { FocusKeyManager, IFocusableOption } from '@ptsecurity/cdk/a11y';\nimport { SelectionModel } from '@ptsecurity/cdk/collections';\nimport { END, ENTER, HOME, PAGE_DOWN, PAGE_UP, SPACE } from '@ptsecurity/cdk/keycodes';\n\nimport {\n    McLine,\n    McLineSetter,\n    CanDisable,\n    mixinDisabled,\n    toBoolean, CanDisableCtor\n} from '@ptsecurity/mosaic/core';\n\n\n/**\n * Component for list-options of selection-list. Each list-option can automatically\n * generate a checkbox and can put current item into the selectionModel of selection-list\n * if the current item is selected.\n */\n@Component({\n    exportAs: 'mcListOption',\n    selector: 'mc-list-option',\n    host: {\n        tabindex: '-1',\n\n        class: 'mc-list-option',\n        '[class.mc-selected]': 'selected',\n        '[class.mc-focused]': '_hasFocus',\n        '(focus)': '_handleFocus()',\n        '(blur)': '_handleBlur()',\n        '(click)': '_handleClick()'\n    },\n    templateUrl: 'list-option.html',\n    encapsulation: ViewEncapsulation.None,\n    preserveWhitespaces: false,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class McListOption implements AfterContentInit, OnDestroy, OnInit, IFocusableOption {\n    _hasFocus: boolean = false;\n\n    @ContentChildren(McLine) _lines: QueryList<McLine>;\n\n    @ViewChild('text') _text: ElementRef;\n\n    // Whether the label should appear before or after the checkbox. Defaults to 'after'\n    @Input() checkboxPosition: 'before' | 'after' = 'after';\n\n    @Input() value: any;\n\n    @Input()\n    get disabled() {\n        return this._disabled || (this.listSelection && this.listSelection.disabled);\n    }\n\n    set disabled(value: any) {\n        const newValue = toBoolean(value);\n\n        if (newValue !== this._disabled) {\n            this._disabled = newValue;\n            this._changeDetector.markForCheck();\n        }\n    }\n\n    @Input()\n    get selected(): boolean {\n        return this.listSelection.selectedOptions && this.listSelection.selectedOptions.isSelected(this) || false;\n    }\n\n    set selected(value: boolean) {\n        const isSelected = toBoolean(value);\n\n        if (isSelected !== this._selected) {\n            this.setSelected(isSelected);\n\n            this.listSelection._reportValueChange();\n        }\n    }\n\n    private _lineSetter: McLineSetter;\n    private _selected = false;\n    private _disabled = false;\n\n    constructor(\n        private _element: ElementRef,\n        private _changeDetector: ChangeDetectorRef,\n        @Inject(forwardRef(() => McListSelection))\n        public listSelection: McListSelection\n    ) {}\n\n    ngOnInit() {\n        if (this._selected) {\n            // List options that are selected at initialization can't be reported properly to the form\n            // control. This is because it takes some time until the selection-list knows about all\n            // available options. Also it can happen that the ControlValueAccessor has an initial value\n            // that should be used instead. Deferring the value change report to the next tick ensures\n            // that the form control value is not being overwritten.\n            const wasSelected = this._selected;\n\n            Promise.resolve().then(() => {\n                if (this._selected || wasSelected) {\n                    this.selected = true;\n                    this._changeDetector.markForCheck();\n                }\n            });\n        }\n    }\n\n    ngAfterContentInit() {\n        this._lineSetter = new McLineSetter(this._lines, this._element);\n    }\n\n    ngOnDestroy(): void {\n        if (this.selected) {\n            // We have to delay this until the next tick in order\n            // to avoid changed after checked errors.\n            Promise.resolve().then(() => this.selected = false);\n        }\n\n        this.listSelection._removeOptionFromList(this);\n    }\n\n    toggle(): void {\n        this.selected = !this.selected;\n    }\n\n    focus(): void {\n        this._element.nativeElement.focus();\n\n        this.listSelection.setFocusedOption(this);\n    }\n\n    getLabel() {\n        return this._text ? this._text.nativeElement.textContent : '';\n    }\n\n    setSelected(selected: boolean) {\n        if (this._selected === selected || !this.listSelection.selectedOptions) { return; }\n\n        this._selected = selected;\n\n        if (selected) {\n            this.listSelection.selectedOptions.select(this);\n        } else {\n            this.listSelection.selectedOptions.deselect(this);\n        }\n\n        this._changeDetector.markForCheck();\n    }\n\n    _getHeight(): number {\n        return this._element.nativeElement.getClientRects()[0].height;\n    }\n\n    _handleClick() {\n        if (this.disabled) { return; }\n\n        this.listSelection.setFocusedOption(this);\n    }\n\n    _handleFocus() {\n        if (this.disabled || this._hasFocus) { return; }\n\n        this._hasFocus = true;\n    }\n\n    _handleBlur() {\n        this._hasFocus = false;\n\n        this.listSelection._onTouched();\n    }\n\n    _getHostElement(): HTMLElement {\n        return this._element.nativeElement;\n    }\n}\n\n\nexport const MC_SELECTION_LIST_VALUE_ACCESSOR: any = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => McListSelection),\n    multi: true\n};\n\n// Change event that is being fired whenever the selected state of an option changes. */\nexport class McListSelectionChange {\n    constructor(\n        // Reference to the selection list that emitted the event.\n        public source: McListSelection,\n        // Reference to the option that has been changed.\n        public option: McListOption\n    ) {}\n}\n\n\nexport class McListSelectionBase {}\n\nexport const _McListSelectionMixinBase: CanDisableCtor & typeof McListSelectionBase\n    = mixinDisabled(McListSelectionBase);\n\n@Component({\n    exportAs: 'mcListSelection',\n    selector: 'mc-list-selection',\n    template: '<ng-content></ng-content>',\n    styleUrls: ['./list.css'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n    inputs: ['disabled', 'tabIndex'],\n    host: {\n        class: 'mc-list-selection',\n        '[tabIndex]': 'tabIndex',\n        '(focus)': 'focus()',\n        '(blur)': '_onTouched()',\n        '(keydown)': '_onKeyDown($event)',\n        '(window:resize)': 'updateScrollSize()'\n    },\n    providers: [MC_SELECTION_LIST_VALUE_ACCESSOR],\n    preserveWhitespaces: false\n})\nexport class McListSelection extends _McListSelectionMixinBase implements\n    IFocusableOption, CanDisable, AfterContentInit, ControlValueAccessor {\n\n    _keyManager: FocusKeyManager<McListOption>;\n\n    // The option components contained within this selection-list.\n    @ContentChildren(McListOption) options: QueryList<McListOption>;\n\n    tabIndex: number;\n\n    autoSelect: boolean;\n    noUnselect: boolean;\n    multiple: boolean;\n\n    // todo temporary solution\n    withShift: boolean;\n    withCtrl: boolean;\n\n    @Input() horizontal: boolean = false;\n\n    // Emits a change event whenever the selected state of an option changes.\n    @Output() readonly selectionChange: EventEmitter<McListSelectionChange> = new EventEmitter<McListSelectionChange>();\n\n    selectedOptions: SelectionModel<McListOption>;\n\n    // Used for storing the values that were assigned before the options were initialized.\n    private _tempValues: string[] | null;\n\n    private _modelChanges = Subscription.EMPTY;\n\n    constructor(\n        private _element: ElementRef,\n        @Attribute('tabindex') tabIndex: string,\n        @Attribute('auto-select') autoSelect: string,\n        @Attribute('no-unselect') noUnselect: string,\n        @Attribute('multiple') multiple: string\n    ) {\n        super();\n\n        this.autoSelect = autoSelect === null ? true : toBoolean(autoSelect);\n        this.multiple = multiple === null ? true : toBoolean(multiple);\n        this.noUnselect = noUnselect === null ? true : toBoolean(noUnselect);\n\n        this.tabIndex = parseInt(tabIndex) || 0;\n\n        this.selectedOptions = new SelectionModel<McListOption>(this.multiple);\n    }\n\n    ngAfterContentInit(): void {\n        this.horizontal = toBoolean(this.horizontal);\n\n        this._keyManager = new FocusKeyManager<McListOption>(this.options)\n            .withTypeAhead()\n            .withVerticalOrientation(!this.horizontal)\n            .withHorizontalOrientation(this.horizontal ? 'ltr' : null);\n\n        if (this._tempValues) {\n            this._setOptionsFromValues(this._tempValues);\n            this._tempValues = null;\n        }\n\n        // Sync external changes to the model back to the options.\n        this._modelChanges = this.selectedOptions.onChange!.subscribe((event) => {\n            for (const item of event.added) {\n                item.selected = true;\n            }\n\n            for (const item of event.removed) {\n                item.selected = false;\n            }\n        });\n\n        this.updateScrollSize();\n    }\n\n    ngOnDestroy() {\n        this._modelChanges.unsubscribe();\n    }\n\n    focus() {\n        this._element.nativeElement.focus();\n    }\n\n    selectAll() {\n        this.options.forEach((option) => option.setSelected(true));\n\n        this._reportValueChange();\n    }\n\n    deselectAll() {\n        this.options.forEach((option) => option.setSelected(false));\n\n        this._reportValueChange();\n    }\n\n    updateScrollSize(): void {\n        if (this.horizontal || !this.options.first) { return; }\n\n        this._keyManager.withScrollSize(Math.floor(this._getHeight() / this.options.first._getHeight()));\n    }\n\n    // Sets the focused option of the selection-list.\n    setFocusedOption(option: McListOption): void {\n        this._keyManager.updateActiveItem(option);\n\n        if (this.withShift && this.multiple) {\n            const previousIndex = this._keyManager.previousActiveItemIndex;\n            const activeIndex = this._keyManager.activeItemIndex;\n\n            if (previousIndex < activeIndex) {\n                this.options.forEach((item, index) => {\n                    if (index >= previousIndex && index <= activeIndex) { item.setSelected(true); }\n                });\n            } else {\n                this.options.forEach((item, index) => {\n                    if (index >= activeIndex && index <= previousIndex) { item.setSelected(true); }\n                });\n            }\n\n            this.withShift = false;\n        } else if (this.withCtrl) {\n            this.withCtrl = false;\n\n            if (!this._canDeselectLast(option)) { return; }\n\n            option.toggle();\n        } else {\n            if (this.autoSelect) {\n                this.options.forEach((item) => item.setSelected(false));\n                option.setSelected(true);\n            }\n        }\n\n        this._emitChangeEvent(option);\n        this._reportValueChange();\n    }\n\n    // Implemented as part of ControlValueAccessor.\n    writeValue(values: string[]): void {\n        if (this.options) {\n            this._setOptionsFromValues(values || []);\n        } else {\n            this._tempValues = values;\n        }\n    }\n\n    // Implemented as part of ControlValueAccessor.\n    registerOnChange(fn: (value: any) => void): void {\n        this._onChange = fn;\n    }\n\n    // Implemented as part of ControlValueAccessor.\n    registerOnTouched(fn: () => void): void {\n        this._onTouched = fn;\n    }\n\n    // Implemented as a part of ControlValueAccessor.\n    setDisabledState(isDisabled: boolean): void {\n        if (this.options) {\n            this.options.forEach((option) => option.disabled = isDisabled);\n        }\n    }\n\n    getSelectedOptionValues(): string[] {\n        return this.options.filter((option) => option.selected).map((option) => option.value);\n    }\n\n    // Toggles the selected state of the currently focused option.\n    toggleFocusedOption(): void {\n        const focusedIndex = this._keyManager.activeItemIndex;\n\n        if (focusedIndex != null && this._isValidIndex(focusedIndex)) {\n            const focusedOption: McListOption = this.options.toArray()[focusedIndex];\n\n            if (focusedOption && this._canDeselectLast(focusedOption)) {\n                focusedOption.toggle();\n\n                // Emit a change event because the focused option changed its state through user interaction.\n                this._emitChangeEvent(focusedOption);\n            }\n        }\n    }\n\n    _canDeselectLast(listOption: McListOption): boolean {\n        return !(this.noUnselect && this.selectedOptions.selected.length === 1 && listOption.selected);\n    }\n\n    _getHeight(): number {\n        return this._element.nativeElement.getClientRects()[0].height;\n    }\n\n    // View to model callback that should be called if the list or its options lost focus.\n    _onTouched: () => void = () => {};\n\n    // Removes an option from the selection list and updates the active item.\n    _removeOptionFromList(option: McListOption) {\n        if (option._hasFocus) {\n            const optionIndex = this._getOptionIndex(option);\n\n            // Check whether the option is the last item\n            if (optionIndex > 0) {\n                this._keyManager.setPreviousItemActive();\n            } else if (optionIndex === 0 && this.options.length > 1) {\n                this._keyManager.setNextItemActive();\n            }\n        }\n    }\n\n    _onKeyDown(event: KeyboardEvent) {\n        const keyCode = event.keyCode;\n        this.withShift = event.shiftKey;\n        this.withCtrl = event.ctrlKey;\n\n        switch (keyCode) {\n            case SPACE:\n            case ENTER:\n                this.toggleFocusedOption();\n                event.preventDefault();\n\n                break;\n            case HOME:\n                this._keyManager.setFirstItemActive();\n                event.preventDefault();\n\n                break;\n            case END:\n                this._keyManager.setLastItemActive();\n                event.preventDefault();\n\n                break;\n            case PAGE_UP:\n                if (!this.horizontal) { this._keyManager.setPreviousPageItemActive(); }\n\n                event.preventDefault();\n\n                break;\n            case PAGE_DOWN:\n                if (!this.horizontal) { this._keyManager.setNextPageItemActive(); }\n\n                event.preventDefault();\n\n                break;\n            default:\n                this._keyManager.onKeydown(event);\n        }\n    }\n\n    // Reports a value change to the ControlValueAccessor\n    _reportValueChange() {\n        if (this.options) {\n            this._onChange(this.getSelectedOptionValues());\n        }\n    }\n\n    // Emits a change event if the selected state of an option changed.\n    _emitChangeEvent(option: McListOption) {\n        this.selectionChange.emit(new McListSelectionChange(this, option));\n    }\n\n    // Returns the option with the specified value.\n    private _getOptionByValue(value: string): McListOption | undefined {\n        return this.options.find((option) => option.value === value);\n    }\n\n    // Sets the selected options based on the specified values.\n    private _setOptionsFromValues(values: string[]) {\n        this.options.forEach((option) => option.setSelected(false));\n\n        values\n            .map((value) => this._getOptionByValue(value))\n            .filter(Boolean)\n            .forEach((option) => option!.setSelected(true));\n    }\n\n    /**\n     * Utility to ensure all indexes are valid.\n     * @param index The index to be checked.\n     * @returns True if the index is valid for our list of options.\n     */\n    private _isValidIndex(index: number): boolean {\n        return index >= 0 && index < this.options.length;\n    }\n\n    // Returns the index of the specified list option.\n    private _getOptionIndex(option: McListOption): number {\n        return this.options.toArray().indexOf(option);\n    }\n\n    // View to model callback that should be called whenever the selected options change.\n    private _onChange: (value: any) => void = (_: any) => {};\n}\n","// todo пока не делаем, перенесено из материала, но у нас в доках таких простых списков нет.\nimport {\n    AfterContentInit, ChangeDetectionStrategy, Component, ContentChildren, Directive, ElementRef, QueryList,\n    ViewEncapsulation\n} from '@angular/core';\n\nimport { McLine, McLineSetter } from '@ptsecurity/mosaic/core';\n\n\nexport class McListBase {}\n\n@Component({\n    selector: 'mc-list',\n    host: { class: 'mc-list' },\n    template: '<ng-content></ng-content>',\n    styleUrls: ['./list.css'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None\n})\nexport class McList extends McListBase {}\n\n\n/**\n * Directive whose purpose is to add the mc- CSS styling to this selector.\n * @docs-private\n */\n@Directive({\n    selector: '[mc-subheader], [mcSubheader]',\n    host: { class: 'mc-subheader' }\n})\nexport class McListSubheaderCssStyler {}\n\n\n// Boilerplate for applying mixins to McListItem.\nexport class McListItemBase {}\n\n@Component({\n    selector: 'mc-list-item, a[mc-list-item]',\n    host: {\n        class: 'mc-list-item',\n        '(focus)': '_handleFocus()',\n        '(blur)': '_handleBlur()'\n    },\n    templateUrl: './list-item.html',\n    encapsulation: ViewEncapsulation.None,\n    preserveWhitespaces: false,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class McListItem extends McListItemBase implements AfterContentInit {\n    @ContentChildren(McLine) _lines: QueryList<McLine>;\n\n    private _lineSetter: McLineSetter;\n\n    constructor(private _element: ElementRef) {\n        super();\n    }\n\n    ngAfterContentInit() {\n        this._lineSetter = new McLineSetter(this._lines, this._element);\n    }\n\n    _handleFocus() {\n        this._element.nativeElement.classList.add('mc-focused');\n    }\n\n    _handleBlur() {\n        this._element.nativeElement.classList.remove('mc-focused');\n    }\n\n    _getHostElement(): HTMLElement {\n        return this._element.nativeElement;\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { A11yModule } from '@ptsecurity/cdk/a11y';\n\nimport { McLineModule } from '@ptsecurity/mosaic/core';\n\nimport { McListSelection, McListOption } from './list-selection.component';\nimport { McList, McListItem, McListSubheaderCssStyler } from './list.component';\n\n\n@NgModule({\n    imports: [\n        CommonModule,\n        A11yModule,\n        McLineModule\n    ],\n    exports: [\n        McList,\n        McListSelection,\n        McListItem,\n        McListOption,\n        McListSubheaderCssStyler\n    ],\n    declarations: [\n        McList,\n        McListSelection,\n        McListItem,\n        McListOption,\n        McListSubheaderCssStyler\n    ]\n})\nexport class McListModule {}\n","import {\n    Input,\n    Attribute,\n    Component,\n    ElementRef,\n    OnDestroy,\n    ViewEncapsulation,\n    ChangeDetectionStrategy,\n    ChangeDetectorRef\n} from '@angular/core';\n\nimport { FocusMonitor } from '@ptsecurity/cdk/a11y';\nimport {\n    CanDisable, CanDisableCtor,\n    HasTabIndex, HasTabIndexCtor,\n    mixinDisabled,\n    mixinTabIndex,\n    toBoolean\n} from '@ptsecurity/mosaic/core';\n\n\nexport class McLinkBase {\n    constructor(public _elementRef: ElementRef) {\n    }\n}\n\nexport const _McLinkBase: HasTabIndexCtor & CanDisableCtor & typeof McLinkBase\n    = mixinTabIndex(mixinDisabled(McLinkBase));\n\n@Component({\n    selector: 'a.mc-link',\n    template: `<ng-content></ng-content>`,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n    exportAs: 'mcLink',\n    styleUrls: ['./link.css'],\n    inputs: ['disabled'],\n    host: {\n        '[attr.disabled]': 'disabled || null',\n        '[attr.tabindex]': 'tabIndex'\n    }\n})\n\nexport class McLink extends _McLinkBase implements OnDestroy, HasTabIndex, CanDisable {\n\n    @Input()\n    get disabled() {\n        return this._disabled;\n    }\n\n    set disabled(value: any) {\n        const newValue = toBoolean(value);\n\n        if (newValue !== this._disabled) {\n            this._disabled = newValue;\n            this._changeDetector.markForCheck();\n        }\n    }\n\n    private _disabled = false;\n\n    constructor(\n        @Attribute('tabindex') tabIndex: string,\n        public elementRef: ElementRef,\n        private _focusMonitor: FocusMonitor,\n        private _changeDetector: ChangeDetectorRef) {\n\n        super(elementRef);\n        this._focusMonitor.monitor(elementRef.nativeElement, true);\n        this.tabIndex = parseInt(tabIndex) || 0;\n    }\n\n    ngOnDestroy() {\n        this._focusMonitor.stopMonitoring(this.elementRef.nativeElement);\n    }\n\n    focus(): void {\n        this._getHostElement().focus();\n    }\n\n    _getHostElement() {\n        return this.elementRef.nativeElement;\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { A11yModule } from '@ptsecurity/cdk/a11y';\n\nimport { McLink } from './link.component';\n\n\n@NgModule({\n    imports: [\n        CommonModule,\n        A11yModule\n    ],\n    declarations: [McLink],\n    exports: [McLink]\n})\nexport class McLinkModule {}\n","import { Injectable, Optional, SkipSelf } from '@angular/core';\nimport { Subject, Subscription } from 'rxjs';\n\nimport { McModalRef } from './modal-ref.class';\n\n\ninterface IRegisteredMeta {\n    modalRef: McModalRef;\n    afterOpenSubscription: Subscription;\n    afterCloseSubscription: Subscription;\n}\n\n@Injectable()\nexport class McModalControlService {\n\n    // Track singleton afterAllClose through over the injection tree\n    get afterAllClose(): Subject<void> {\n        return this.parentService ? this.parentService.afterAllClose : this.rootAfterAllClose;\n    }\n\n    // Track singleton openModals array through over the injection tree\n    get openModals(): McModalRef[] {\n        return this.parentService ? this.parentService.openModals : this.rootOpenModals;\n    }\n\n    // @ts-ignore\n    private rootOpenModals: McModalRef[] = this.parentService ? null : [];\n    // @ts-ignore\n    private rootAfterAllClose: Subject<void> = this.parentService ? null : new Subject<void>();\n    // @ts-ignore\n    private rootRegisteredMetaMap: Map<McModalRef, IRegisteredMeta> = this.parentService ? null : new Map();\n\n    // Registered modal for later usage\n    private get registeredMetaMap(): Map<McModalRef, IRegisteredMeta> {\n        return this.parentService ? this.parentService.registeredMetaMap : this.rootRegisteredMetaMap;\n    }\n\n    constructor(\n        @Optional() @SkipSelf() private parentService: McModalControlService) {\n    }\n\n    // Register a modal to listen its open/close\n    registerModal(modalRef: McModalRef): void {\n        if (!this.hasRegistered(modalRef)) {\n            const afterOpenSubscription = modalRef.afterOpen.subscribe(() => this.openModals.push(modalRef));\n            const afterCloseSubscription = modalRef.afterClose.subscribe(() => this.removeOpenModal(modalRef));\n\n            this.registeredMetaMap.set(modalRef, {modalRef, afterOpenSubscription, afterCloseSubscription});\n        }\n    }\n\n    hasRegistered(modalRef: McModalRef): boolean {\n        return this.registeredMetaMap.has(modalRef);\n    }\n\n    // Close all registered opened modals\n    closeAll(): void {\n        let i = this.openModals.length;\n\n        while (i--) {\n            this.openModals[i].close();\n        }\n    }\n\n    private removeOpenModal(modalRef: McModalRef): void {\n        const index = this.openModals.indexOf(modalRef);\n\n        if (index > -1) {\n            this.openModals.splice(index, 1);\n\n            if (!this.openModals.length) {\n                this.afterAllClose.next();\n            }\n        }\n    }\n}\n","import { Observable } from 'rxjs';\n\nimport { McModalComponent } from './modal.component';\n\n\n/**\n * API class that public to users to handle the modal instance.\n * McModalRef is aim to avoid accessing to the modal instance directly by users.\n */\nexport abstract class McModalRef<T = any, R = any> {\n    abstract afterOpen: Observable<void>;\n    abstract afterClose: Observable<R>;\n\n    abstract open(): void;\n\n    abstract close(result?: R): void;\n\n    abstract destroy(result?: R): void;\n\n    /**\n     * Trigger the nzOnOk/nzOnCancel by manual\n     */\n    abstract triggerOk(): void;\n\n    abstract triggerCancel(): void;\n\n    // /**\n    //  * Return the ComponentRef of nzContent when specify nzContent as a Component\n    //  * Note: this method may return undefined if the Component has not ready yet.\n    //    (it only available after Modal's ngOnInit)\n    //  */\n    // abstract getContentComponentRef(): ComponentRef<{}>;\n\n    /**\n     * Return the component instance of nzContent when specify nzContent as a Component\n     * Note: this method may return undefined if the Component has not ready yet.\n     * (it only available after Modal's ngOnInit)\n     */\n    abstract getContentComponent(): T;\n\n    /**\n     * Get the dom element of this Modal\n     */\n    abstract getElement(): HTMLElement;\n\n    /**\n     * Get the instance of the Modal itself\n     */\n    abstract getInstance(): McModalComponent;\n}\n","export interface IClickPosition {\n    x: number;\n    y: number;\n}\n\nexport class ModalUtil {\n    private lastPosition: IClickPosition;\n\n    constructor(private document: Document) {\n        this.lastPosition = {x: -1, y: -1};\n        this.listenDocumentClick();\n    }\n\n    getLastClickPosition(): IClickPosition {\n        return this.lastPosition;\n    }\n\n    listenDocumentClick(): void {\n        this.document.addEventListener('click', (event: MouseEvent) => {\n            this.lastPosition = {x: event.clientX, y: event.clientY};\n        });\n    }\n}\n\nexport default new ModalUtil(document);\n","import { DOCUMENT } from '@angular/common';\nimport {\n    AfterViewInit, ChangeDetectionStrategy, ChangeDetectorRef,\n    Component,\n    ComponentFactoryResolver,\n    ComponentRef,\n    ElementRef,\n    EventEmitter,\n    Inject,\n    Injector,\n    Input,\n    OnChanges,\n    OnDestroy,\n    OnInit,\n    Output,\n    Renderer2,\n    SimpleChanges,\n    TemplateRef,\n    Type,\n    ViewChild,\n    ViewContainerRef, ViewEncapsulation\n} from '@angular/core';\nimport { ESCAPE } from '@ptsecurity/cdk/keycodes';\nimport { Overlay, OverlayRef } from '@ptsecurity/cdk/overlay';\nimport { McMeasureScrollbarService } from '@ptsecurity/mosaic/core';\nimport { Observable } from 'rxjs';\n\nimport { McModalControlService } from './modal-control.service';\nimport { McModalRef } from './modal-ref.class';\n// tslint:disable-next-line\nimport ModalUtil from './modal-util';\nimport { IModalButtonOptions, IModalOptions, ModalType, OnClickCallback } from './modal.type';\n\n\n// Duration when perform animations (ms)\nexport const MODAL_ANIMATE_DURATION = 200;\n\ntype AnimationState = 'enter' | 'leave' | null;\n\n@Component({\n    selector: 'mc-modal',\n    templateUrl: './modal.component.html',\n    styleUrls: ['./modal.css'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n    host: {\n        '(keydown)': 'onKeyDown($event)'\n    }\n})\nexport class McModalComponent<T = any, R = any> extends McModalRef<T, R>\n    implements OnInit, OnChanges, AfterViewInit, OnDestroy, IModalOptions {\n\n    // tslint:disable-next-line:no-any\n    @Input() mcModalType: ModalType = 'default';\n    // If not specified, will use <ng-content>\n    @Input() mcContent: string | TemplateRef<{}> | Type<T>;\n    // available when mcContent is a component\n    @Input() mcComponentParams: object;\n    // Default Modal ONLY\n    @Input() mcFooter: string | TemplateRef<{}> | IModalButtonOptions<T>[];\n\n    @Input()\n    get mcVisible() { return this._mcVisible; }\n    set mcVisible(value) { this._mcVisible = value; }\n    _mcVisible = false;\n\n    @Output() mcVisibleChange = new EventEmitter<boolean>();\n\n    @Input() mcZIndex: number = 1000;\n    @Input() mcWidth: number | string = 480;\n    @Input() mcWrapClassName: string;\n    @Input() mcClassName: string;\n    @Input() mcStyle: object;\n    @Input() mcTitle: string | TemplateRef<{}>;\n    @Input() mcCloseByESC: boolean = true;\n\n    @Input()\n    get mcClosable() { return this._mcClosable; }\n    set mcClosable(value) { this._mcClosable = value; }\n    _mcClosable = true;\n\n    @Input()\n    get mcMask() { return this._mcMask; }\n    set mcMask(value) { this._mcMask = value; }\n    _mcMask = true;\n\n    @Input()\n    get mcMaskClosable() { return this._mcMaskClosable; }\n    set mcMaskClosable(value) { this._mcMaskClosable = value; }\n    _mcMaskClosable = true;\n\n    @Input() mcMaskStyle: object;\n    @Input() mcBodyStyle: object;\n\n    // Trigger when modal open(visible) after animations\n    @Output() mcAfterOpen = new EventEmitter<void>();\n    // Trigger when modal leave-animation over\n    @Output() mcAfterClose = new EventEmitter<R>();\n\n    // --- Predefined OK & Cancel buttons\n    @Input() mcOkText: string;\n    @Input() mcOkType = 'primary';\n\n    @Input()\n    get mcOkLoading() { return this._mcOkLoading; }\n    set mcOkLoading(value) { this._mcOkLoading = value; }\n    _mcOkLoading = false;\n\n    @Input() @Output() mcOnOk: EventEmitter<T> | OnClickCallback<T> = new EventEmitter<T>();\n    // Only aim to focus the ok button that needs to be auto focused\n    @ViewChild('autoFocusButtonOk', {read: ElementRef}) autoFocusButtonOk: ElementRef;\n    @Input() mcCancelText: string;\n\n    @Input()\n    get mcCancelLoading() { return this._mcCancelLoading; }\n    set mcCancelLoading(value) { this._mcCancelLoading = value; }\n    _mcCancelLoading = false;\n\n    @Input() @Output() mcOnCancel: EventEmitter<T> | OnClickCallback<T> = new EventEmitter<T>();\n    @ViewChild('modalContainer') modalContainer: ElementRef;\n    @ViewChild('bodyContainer', {read: ViewContainerRef}) bodyContainer: ViewContainerRef;\n    maskAnimationClassMap: object;\n    modalAnimationClassMap: object;\n    // The origin point that animation based on\n    transformOrigin = '0px 0px 0px';\n\n    // Observable alias for mcAfterOpen\n    get afterOpen(): Observable<void> {\n        return this.mcAfterOpen.asObservable();\n    }\n\n    // Observable alias for mcAfterClose\n    get afterClose(): Observable<R> {\n        return this.mcAfterClose.asObservable();\n    }\n\n    get okText(): string {\n        return this.mcOkText;\n    }\n\n    get cancelText(): string {\n        return this.mcCancelText;\n    }\n\n    // Indicate whether this dialog should hidden\n    get hidden(): boolean {\n        return !this.mcVisible && !this.animationState;\n    }\n\n    // Handle the reference when using mcContent as Component\n    private contentComponentRef: ComponentRef<T>;\n    // Current animation state\n    private animationState: AnimationState;\n    private container: HTMLElement | OverlayRef;\n\n    constructor(\n        private overlay: Overlay,\n        private renderer: Renderer2,\n        private cfr: ComponentFactoryResolver,\n        private elementRef: ElementRef,\n        private viewContainer: ViewContainerRef,\n        private mcMeasureScrollbarService: McMeasureScrollbarService,\n        private modalControl: McModalControlService,\n        private changeDetector: ChangeDetectorRef,\n        @Inject(DOCUMENT) private document: any) {\n\n        super();\n    }\n\n    @Input() mcGetContainer: HTMLElement | OverlayRef | (() => HTMLElement | OverlayRef) = () => this.overlay.create();\n\n    ngOnInit() {\n\n        // Create component along without View\n        if (this.isComponent(this.mcContent)) {\n            this.createDynamicComponent(this.mcContent as Type<T>);\n        }\n\n        // Setup default button options\n        if (this.isModalButtons(this.mcFooter)) {\n            this.mcFooter = this.formatModalButtons(this.mcFooter as IModalButtonOptions<T>[]);\n        }\n\n        // Place the modal dom to elsewhere\n        this.container = typeof this.mcGetContainer === 'function' ? this.mcGetContainer() : this.mcGetContainer;\n        if (this.container instanceof HTMLElement) {\n            this.container.appendChild(this.elementRef.nativeElement);\n        } else if (this.container instanceof OverlayRef) {\n            // NOTE: only attach the dom to overlay, the view container is not changed actually\n            this.container.overlayElement.appendChild(this.elementRef.nativeElement);\n        }\n\n        // Register modal when afterOpen/afterClose is stable\n        this.modalControl.registerModal(this);\n    }\n\n    // [NOTE] NOT available when using by service!\n    // Because ngOnChanges never be called when using by service,\n    // here we can't support \"mcContent\"(Component) etc. as inputs that initialized dynamically.\n    // BUT: User also can change \"mcContent\" dynamically to trigger UI changes\n    // (provided you don't use \bComponent that needs initializations)\n    ngOnChanges(changes: SimpleChanges) {\n        if (changes.mcVisible) {\n            // Do not trigger animation while initializing\n            this.handleVisibleStateChange(this.mcVisible, !changes.mcVisible.firstChange);\n        }\n    }\n\n    ngAfterViewInit() {\n        // If using Component, it is the time to attach View while bodyContainer is ready\n        if (this.contentComponentRef) {\n            this.bodyContainer.insert(this.contentComponentRef.hostView);\n        }\n\n        if (this.autoFocusButtonOk) {\n            (this.autoFocusButtonOk.nativeElement as HTMLButtonElement).focus();\n        }\n    }\n\n    ngOnDestroy() {\n        if (this.container instanceof OverlayRef) {\n            this.container.dispose();\n        }\n    }\n\n    open() {\n        this.changeVisibleFromInside(true);\n    }\n\n    close(result?: R) {\n        this.changeVisibleFromInside(false, result);\n    }\n\n    // Destroy equals Close\n    destroy(result?: R) {\n        this.close(result);\n    }\n\n    triggerOk() {\n        this.onClickOkCancel('ok');\n    }\n\n    triggerCancel() {\n        this.onClickOkCancel('cancel');\n    }\n\n    getInstance(): McModalComponent {\n        return this;\n    }\n\n    getContentComponentRef(): ComponentRef<T> {\n        return this.contentComponentRef;\n    }\n\n    getContentComponent(): T {\n        return this.contentComponentRef && this.contentComponentRef.instance;\n    }\n\n    getElement(): HTMLElement {\n        return this.elementRef && this.elementRef.nativeElement;\n    }\n\n    onClickMask($event: MouseEvent) {\n        if (\n            this.mcMask &&\n            this.mcMaskClosable &&\n            ($event.target as HTMLElement).classList.contains('mc-modal-wrap') &&\n            this.mcVisible\n        ) {\n            this.onClickOkCancel('cancel');\n        }\n    }\n\n    // tslint:disable-next-line\n    isModalType(type: ModalType): boolean {\n        return this.mcModalType === type;\n    }\n\n    onKeyDown(event: KeyboardEvent): void {\n\n        if (event.keyCode === ESCAPE && this.container && (this.container instanceof OverlayRef)) {\n\n            this.close();\n            event.preventDefault();\n        }\n    }\n\n    // AoT\n    onClickCloseBtn() {\n        if (this.mcVisible) {\n            this.onClickOkCancel('cancel');\n        }\n    }\n\n    // AoT\n    // tslint:disable-next-line\n    onClickOkCancel(type: 'ok' | 'cancel') {\n        const trigger = { ok: this.mcOnOk, cancel: this.mcOnCancel }[type];\n        const loadingKey = { ok: 'mcOkLoading', cancel: 'mcCancelLoading' }[type];\n\n        if (trigger instanceof EventEmitter) {\n            trigger.emit(this.getContentComponent());\n        } else if (typeof trigger === 'function') {\n\n            const result = trigger(this.getContentComponent());\n            // Users can return \"false\" to prevent closing by default\n            const caseClose = (doClose: boolean | void | {}) => (doClose !== false) && this.close(doClose as R);\n\n            if (isPromise(result)) {\n                this[loadingKey] = true;\n                const handleThen = (doClose) => {\n                    this[loadingKey] = false;\n                    caseClose(doClose);\n                };\n                (result as Promise<void>).then(handleThen).catch(handleThen);\n            } else {\n                caseClose(result);\n            }\n        }\n    }\n\n    // AoT\n    isNonEmptyString(value: {}): boolean {\n        return typeof value === 'string' && value !== '';\n    }\n\n    // AoT\n    isTemplateRef(value: {}): boolean {\n        return value instanceof TemplateRef;\n    }\n\n    // AoT\n    isComponent(value: {}): boolean {\n        return value instanceof Type;\n    }\n\n    // AoT\n    isModalButtons(value: {}): boolean {\n        return Array.isArray(value) && value.length > 0;\n    }\n\n    // Do rest things when visible state changed\n    private handleVisibleStateChange(visible: boolean, animation: boolean = true, closeResult?: R): Promise<any> {\n        // Hide scrollbar at the first time when shown up\n        if (visible) {\n            this.changeBodyOverflow(1);\n        }\n\n        return Promise\n            .resolve(animation && this.animateTo(visible))\n            // Emit open/close event after animations over\n            .then(() => {\n                if (visible) {\n                    this.mcAfterOpen.emit();\n                } else {\n                    this.mcAfterClose.emit(closeResult);\n                    // Show/hide scrollbar when animation is over\n                    this.changeBodyOverflow();\n                }\n            });\n    }\n\n    // Lookup a button's property, if the prop is a function, call & then return the result, otherwise, return itself.\n    // AoT\n    // tslint:disable-next-line\n    getButtonCallableProp(options: IModalButtonOptions<T>, prop: string): {} {\n        const value = options[prop];\n        const args: any[] = [];\n        if (this.contentComponentRef) {\n            args.push(this.contentComponentRef.instance);\n        }\n\n        return typeof value === 'function' ? value.apply(options, args) : value;\n    }\n\n    // On mcFooter's modal button click\n    // AoT\n    // tslint:disable-next-line\n    onButtonClick(button: IModalButtonOptions<T>) {\n        // Call onClick directly\n        const result = this.getButtonCallableProp(button, 'onClick');\n        if (isPromise(result)) {\n            button.loading = true;\n            (result as Promise<{}>).then(() => button.loading = false).catch(() => button.loading = false);\n        }\n    }\n\n    // Change mcVisible from inside\n    private changeVisibleFromInside(visible: boolean, closeResult?: R): Promise<void> {\n        if (this.mcVisible !== visible) {\n            // Change mcVisible value immediately\n            this.mcVisible = visible;\n            this.mcVisibleChange.emit(visible);\n\n            return this.handleVisibleStateChange(visible, true, closeResult);\n        }\n\n        return Promise.resolve();\n    }\n\n    private changeAnimationState(state: AnimationState) {\n        this.animationState = state;\n        if (state) {\n            this.maskAnimationClassMap = {\n                [`fade-${state}`]: true,\n                [`fade-${state}-active`]: true\n            };\n            this.modalAnimationClassMap = {\n                [`zoom-${state}`]: true,\n                [`zoom-${state}-active`]: true\n            };\n        } else {\n            // @ts-ignore\n            this.maskAnimationClassMap = this.modalAnimationClassMap = null;\n        }\n\n        if (this.contentComponentRef) {\n            this.contentComponentRef.changeDetectorRef.markForCheck();\n        } else {\n            this.changeDetector.markForCheck();\n        }\n    }\n\n    private animateTo(isVisible: boolean): Promise<any> {\n        // Figure out the lastest click position when shows up\n        if (isVisible) {\n            // [NOTE] Using timeout due to the document.click event is fired later than visible change,\n            // so if not postponed to next event-loop, we can't get the lastest click position\n            window.setTimeout(() => this.updateTransformOrigin());\n        }\n\n        this.changeAnimationState(isVisible ? 'enter' : 'leave');\n\n        // Return when animation is over\n        return new Promise((resolve) => window.setTimeout(() => {\n            this.changeAnimationState(null);\n            resolve();\n        }, MODAL_ANIMATE_DURATION));\n    }\n\n    private formatModalButtons(buttons: IModalButtonOptions<T>[]): IModalButtonOptions<T>[] {\n        return buttons.map((button) => {\n\n            return {\n                ...{\n                    type: 'default',\n                    size: 'default',\n                    autoLoading: true,\n                    show: true,\n                    loading: false,\n                    disabled: false\n                },\n                ...button\n            };\n        });\n    }\n\n    /**\n     * Create a component dynamically but not attach to any View\n     * (this action will be executed when bodyContainer is ready)\n     * @param component Component class\n     */\n    private createDynamicComponent(component: Type<T>) {\n        const factory = this.cfr.resolveComponentFactory(component);\n        const childInjector = Injector.create({\n            providers: [{provide: McModalRef, useValue: this}],\n            parent: this.viewContainer.parentInjector\n        });\n\n        this.contentComponentRef = factory.create(childInjector);\n\n        if (this.mcComponentParams) {\n            Object.assign(this.contentComponentRef.instance, this.mcComponentParams);\n        }\n\n        // Do the first change detection immediately\n        // (or we do detection at ngAfterViewInit, multi-changes error will be thrown)\n        this.contentComponentRef.changeDetectorRef.detectChanges();\n\n\n    }\n\n    // Update transform-origin to the last click position on document\n    private updateTransformOrigin() {\n        const modalElement = this.modalContainer.nativeElement as HTMLElement;\n        const lastPosition = ModalUtil.getLastClickPosition();\n\n        if (lastPosition) {\n            // tslint:disable-next-line\n            this.transformOrigin = `${lastPosition.x - modalElement.offsetLeft}px ${lastPosition.y - modalElement.offsetTop}px 0px`;\n        }\n    }\n\n    /**\n     * Take care of the body's overflow to decide the existense of scrollbar\n     * @param plusNum The number that the openModals.length will increase soon\n     */\n    private changeBodyOverflow(plusNum: number = 0) {\n        const openModals = this.modalControl.openModals;\n\n        if (openModals.length + plusNum > 0) {\n            // tslint:disable-next-line\n            this.renderer.setStyle(this.document.body, 'padding-right', `${this.mcMeasureScrollbarService.scrollBarWidth}px`);\n            this.renderer.setStyle(this.document.body, 'overflow', 'hidden');\n        } else {\n            this.renderer.removeStyle(this.document.body, 'padding-right');\n            this.renderer.removeStyle(this.document.body, 'overflow');\n        }\n    }\n}\n\n////////////\n\nfunction isPromise(obj: {} | void): boolean {\n    // tslint:disable-next-line\n    return !!obj && (typeof obj === 'object' || typeof obj === 'function') && typeof (obj as Promise<{}>).then === 'function' && typeof (obj as Promise<{}>).catch === 'function';\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n\n@Pipe({\n    name: 'toCssUnit'\n})\nexport class CssUnitPipe implements PipeTransform {\n    transform(value: number | string, defaultUnit: string = 'px'): string {\n        const formatted = +value;\n\n        return isNaN(formatted) ? `${value}` : `${formatted}${defaultUnit}`;\n    }\n}\n","import {\n    AfterContentChecked,\n    AfterContentInit,\n    AfterViewInit,\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    ContentChild,\n    ContentChildren, Directive,\n    ElementRef,\n    QueryList,\n    ViewEncapsulation\n} from '@angular/core';\nimport { NgControl } from '@angular/forms';\nimport { ESCAPE } from '@ptsecurity/cdk/keycodes';\nimport { CanColor, CanColorCtor, mixinColor } from '@ptsecurity/mosaic/core';\nimport { EMPTY, merge } from 'rxjs';\nimport { startWith } from 'rxjs/operators';\n\n\nimport { McCleaner } from './cleaner';\nimport { McFormFieldControl } from './form-field-control';\nimport { getMcFormFieldMissingControlError } from './form-field-errors';\nimport { McFormFieldNumberControl } from './form-field-number-control';\nimport { McHint } from './hint';\nimport { McPrefix } from './prefix';\nimport { McStepper } from './stepper';\nimport { McSuffix } from './suffix';\n\n\nlet nextUniqueId = 0;\n\nexport class McFormFieldBase {\n    constructor(public _elementRef: ElementRef) {}\n}\n\nexport const _McFormFieldMixinBase: CanColorCtor & typeof McFormFieldBase = mixinColor(McFormFieldBase);\n\n@Component({\n    selector: 'mc-form-field',\n    exportAs: 'mcFormField',\n    templateUrl: 'form-field.html',\n    // McInput is a directive and can't have styles, so we need to include its styles here.\n    // The McInput styles are fairly minimal so it shouldn't be a big deal for people who\n    // aren't using McInput.\n    styleUrls: [\n        'form-field.css',\n        '../input/input.css',\n        '../textarea/textarea.css'\n    ],\n    host: {\n        class: 'mc-form-field',\n        '[class.mc-form-field_invalid]': '_control.errorState',\n        '[class.mc-disabled]': '_control.disabled',\n        '[class.mc-form-field_has-prefix]': 'hasPrefix',\n        '[class.mc-form-field_has-suffix]': 'hasSuffix',\n        '[class.mc-form-field_has-cleaner]': 'canShowCleaner',\n        '[class.mc-form-field_has-stepper]': 'canShowStepper',\n        '[class.mc-focused]': '_control.focused',\n        '[class.ng-untouched]': '_shouldForward(\"untouched\")',\n        '[class.ng-touched]': '_shouldForward(\"touched\")',\n        '[class.ng-pristine]': '_shouldForward(\"pristine\")',\n        '[class.ng-dirty]': '_shouldForward(\"dirty\")',\n        '[class.ng-valid]': '_shouldForward(\"valid\")',\n        '[class.ng-invalid]': '_shouldForward(\"invalid\")',\n        '[class.ng-pending]': '_shouldForward(\"pending\")',\n        '(keydown)': 'onKeyDown($event)',\n        '(mouseenter)': 'onHoverChanged(true)',\n        '(mouseleave)': 'onHoverChanged(false)'\n    },\n    inputs: ['color'],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\n\nexport class McFormField extends _McFormFieldMixinBase implements\n    AfterContentInit, AfterContentChecked, AfterViewInit, CanColor {\n\n    @ContentChild(McFormFieldControl) _control: McFormFieldControl<any>;\n    @ContentChild(McFormFieldNumberControl) _numberControl: McFormFieldNumberControl<any>;\n    @ContentChild(McStepper) _stepper: McStepper;\n\n    @ContentChildren(McHint) _hint: QueryList<McHint>;\n    @ContentChildren(McSuffix) _suffix: QueryList<McSuffix>;\n    @ContentChildren(McPrefix) _prefix: QueryList<McPrefix>;\n    @ContentChildren(McCleaner) _cleaner: QueryList<McCleaner>;\n\n    // Unique id for the internal form field label.\n    _labelId = `mc-form-field-label-${nextUniqueId++}`;\n\n    hovered: boolean = false;\n\n    constructor(public _elementRef: ElementRef, private _changeDetectorRef: ChangeDetectorRef) {\n        super(_elementRef);\n    }\n\n    ngAfterContentInit() {\n        this._validateControlChild();\n\n        if (this._control.controlType) {\n            this._elementRef.nativeElement.classList\n                .add(`mc-form-field-type-${this._control.controlType}`);\n\n            if (this._numberControl && this.hasStepper) {\n                this._stepper.stepUp.subscribe(this.onStepUp.bind(this));\n                this._stepper.stepDown.subscribe(this.onStepDown.bind(this));\n            }\n        }\n\n        // Subscribe to changes in the child control state in order to update the form field UI.\n        this._control.stateChanges.pipe(startWith())\n            .subscribe(() => {\n                this._changeDetectorRef.markForCheck();\n            });\n\n        if (this._numberControl) {\n            this._numberControl.stateChanges.pipe(startWith())\n                .subscribe(() => {\n                    this._changeDetectorRef.markForCheck();\n                });\n        }\n\n        // Run change detection if the value changes.\n        const valueChanges = this._control.ngControl && this._control.ngControl.valueChanges || EMPTY;\n\n        merge(valueChanges)\n            .subscribe(() => this._changeDetectorRef.markForCheck());\n    }\n\n    ngAfterContentChecked() {\n        this._validateControlChild();\n    }\n\n    ngAfterViewInit() {\n        // Avoid animations on load.\n        this._changeDetectorRef.detectChanges();\n    }\n\n    clearValue($event) {\n        $event.stopPropagation();\n\n        if (this._control && this._control.ngControl) {\n            this._control.ngControl.reset();\n        }\n    }\n\n    onContainerClick($event) {\n        if (this._control.onContainerClick) {\n            this._control.onContainerClick($event);\n        }\n    }\n\n    onKeyDown(event: KeyboardEvent): void {\n        // tslint:disable-next-line:deprecation\n        if (event.keyCode === ESCAPE && this._control.focused && this.hasCleaner) {\n            if (this._control && this._control.ngControl) {\n                this._control.ngControl.reset();\n            }\n\n            event.preventDefault();\n        }\n    }\n\n    onHoverChanged(isHovered: boolean) {\n        if (isHovered !== this.hovered) {\n            this.hovered  = isHovered;\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n\n    onStepUp() {\n        if (this._numberControl) {\n            this._numberControl.stepUp(this._numberControl.step);\n        }\n    }\n\n    onStepDown() {\n        if (this._numberControl) {\n            this._numberControl.stepDown(this._numberControl.step);\n        }\n    }\n\n    /** Determines whether a class from the NgControl should be forwarded to the host element. */\n    _shouldForward(prop: keyof NgControl): boolean {\n        const ngControl = this._control ? this._control.ngControl : null;\n\n        return ngControl && ngControl[prop];\n    }\n\n    /** Throws an error if the form field's control is missing. */\n    protected _validateControlChild() {\n        if (!this._control) {\n            throw getMcFormFieldMissingControlError();\n        }\n    }\n\n    get hasHint(): boolean {\n        return this._hint && this._hint.length > 0;\n    }\n\n    get hasSuffix(): boolean {\n        return this._suffix && this._suffix.length > 0;\n    }\n\n    get hasPrefix(): boolean {\n        return this._prefix && this._prefix.length > 0;\n    }\n\n    get hasCleaner(): boolean {\n        return this._cleaner && this._cleaner.length > 0;\n    }\n\n    get hasStepper(): boolean {\n        return !!this._stepper;\n    }\n\n    get canShowCleaner(): boolean {\n        return this.hasCleaner &&\n            this._control &&\n            this._control.ngControl\n                ? this._control.ngControl.value && !this._control.disabled\n                : false;\n    }\n\n\n    get disabled(): boolean {\n        return this._control && this._control.disabled;\n    }\n\n    get canShowStepper(): boolean {\n        return this._numberControl &&\n            !this.disabled &&\n            (\n                this._numberControl.focused ||\n                this.hovered\n            );\n    }\n}\n\n@Directive({\n    selector: 'mc-form-field[mcFormFieldWithoutBorders]',\n    exportAs: 'mcFormFieldWithoutBorders',\n    host: { class: 'mc-form-field_without-borders' }\n})\nexport class McFormFieldWithoutBorders {}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { McIconModule } from '@ptsecurity/mosaic/icon';\n\nimport { McCleaner } from './cleaner';\nimport { McFormField, McFormFieldWithoutBorders } from './form-field';\nimport { McHint } from './hint';\nimport { McPrefix } from './prefix';\nimport { McStepper } from './stepper';\nimport { McSuffix } from './suffix';\n\n\n@NgModule({\n    declarations: [\n        McFormField,\n        McFormFieldWithoutBorders,\n        McHint,\n        McPrefix,\n        McSuffix,\n        McCleaner,\n        McStepper\n    ],\n    imports: [CommonModule, McIconModule],\n    exports: [\n        McFormField,\n        McFormFieldWithoutBorders,\n        McHint,\n        McPrefix,\n        McSuffix,\n        McCleaner,\n        McStepper\n    ]\n})\nexport class McFormFieldModule {\n}\n","import { InjectionToken } from '@angular/core';\n\n\nexport const MC_INPUT_VALUE_ACCESSOR =\n    new InjectionToken<{ value: any }>('MC_INPUT_VALUE_ACCESSOR');\n","function sanitizeNumber(value: number): number | null {\n    return !isFinite(value) || isNaN(value)\n        ? null\n        : value;\n}\n\nfunction getPrecision(value: number): number {\n    const arr = value.toString().split('.');\n\n    return arr.length === 1\n        ? 1\n        // tslint:disable-next-line:no-magic-numbers\n        :  Math.pow(10, arr[1].length);\n}\n\nfunction add(value1: number, value2: number) {\n    const precision = Math.max(getPrecision(value1), getPrecision(value2));\n\n    const res = (value1 * precision + value2 * precision) / precision;\n\n    return sanitizeNumber(res);\n}\n\nexport const stepUp = (value: number | null,\n                       max: number,\n                       min: number,\n                       step: number\n): number | null => {\n    let res;\n\n    if (value === null) {\n        res = add(min, step);\n\n        return res === null ? null : Math.min(res, max);\n    }\n\n    res = add(value, step);\n\n    return res === null ? null : Math.max(Math.min(res, max), min);\n};\n\nexport const stepDown = (value: number | null,\n                         max: number,\n                         min: number,\n                         step: number\n): number | null => {\n    let res;\n\n    if (value === null) {\n        res = add(max, -step);\n\n        return res === null ? null : Math.max(res, min);\n    }\n\n    res = add(value, -step);\n\n    return res === null ? null : Math.min(Math.max(res, min), max);\n};\n","import {\n    Attribute,\n    Directive, DoCheck, ElementRef, Inject, Input, OnChanges,\n    OnDestroy, Optional, Self\n} from '@angular/core';\nimport {\n    FormGroupDirective,\n    NgControl,\n    NgForm, NgModel\n} from '@angular/forms';\nimport { coerceBooleanProperty } from '@ptsecurity/cdk/coercion';\nimport {\n    END, C, V, X, A, DELETE, BACKSPACE, TAB, ENTER,\n    ESCAPE, ZERO, NINE, NUMPAD_ZERO, NUMPAD_NINE, NUMPAD_MINUS, DASH,\n    FF_MINUS, LEFT_ARROW, RIGHT_ARROW, HOME, UP_ARROW, DOWN_ARROW, F1, F12\n} from '@ptsecurity/cdk/keycodes';\nimport { getSupportedInputTypes, Platform } from '@ptsecurity/cdk/platform';\nimport {\n    CanUpdateErrorState,\n    CanUpdateErrorStateCtor,\n    ErrorStateMatcher,\n    mixinErrorState\n} from '@ptsecurity/mosaic/core';\nimport { McFormFieldControl, McFormFieldNumberControl } from '@ptsecurity/mosaic/form-field';\nimport { Subject } from 'rxjs';\n\nimport { getMcInputUnsupportedTypeError } from './input-errors';\nimport { MC_INPUT_VALUE_ACCESSOR } from './input-value-accessor';\nimport { stepDown, stepUp } from './stepperUtils';\n\n\nconst MC_INPUT_INVALID_TYPES = [\n    'button',\n    'checkbox',\n    'file',\n    'hidden',\n    'image',\n    'radio',\n    'range',\n    'reset',\n    'submit'\n];\n\nexport const BIG_STEP = 10;\nexport const SMALL_STEP = 1;\n\nlet nextUniqueId = 0;\n\nexport class McInputBase {\n    constructor(public _defaultErrorStateMatcher: ErrorStateMatcher,\n                public _parentForm: NgForm,\n                public _parentFormGroup: FormGroupDirective,\n                public ngControl: NgControl) {\n    }\n}\n\nexport const _McInputMixinBase: CanUpdateErrorStateCtor & typeof McInputBase = mixinErrorState(McInputBase);\n\n\n@Directive({\n    selector: `input[mcInput][type=\"number\"]`,\n    exportAs: 'mcNumericalInput',\n    providers: [NgModel, { provide: McFormFieldNumberControl, useExisting: McNumberInput }],\n    host: {\n        '(blur)': '_focusChanged(false)',\n        '(focus)': '_focusChanged(true)',\n        '(paste)': 'onPaste($event)',\n        '(keydown)': 'onKeyDown($event)'\n    }\n})\nexport class McNumberInput implements McFormFieldNumberControl<any> {\n\n    /**\n     * Implemented as part of McFormFieldNumberControl.\n     * @docs-private\n     */\n    @Input()\n    bigStep: number;\n\n    /**\n     * Implemented as part of McFormFieldNumberControl.\n     * @docs-private\n     */\n    @Input()\n    step: number;\n\n    @Input()\n    min: number;\n\n    @Input()\n    max: number;\n\n    /**\n     * Implemented as part of McFormFieldNumberControl.\n     * @docs-private\n     */\n    value: any;\n\n    /**\n     * Implemented as part of McFormFieldNumberControl.\n     * @docs-private\n     */\n    focused: boolean = false;\n\n    /**\n     * Implemented as part of McFormFieldNumberControl.\n     * @docs-private\n     */\n    readonly stateChanges: Subject<void> = new Subject<void>();\n\n    private readonly _host: HTMLInputElement;\n\n    constructor(\n        private _platform: Platform ,\n        private _elementRef: ElementRef,\n        private _model: NgModel,\n        @Attribute('step') step: string,\n        @Attribute('big-step') bigStep: string,\n        @Attribute('min') min: string,\n        @Attribute('max') max: string\n    ) {\n        this.step = this.isDigit(step) ? parseFloat(step) : SMALL_STEP;\n        this.bigStep = this.isDigit(bigStep) ? parseFloat(bigStep) : BIG_STEP;\n        this.min = this.isDigit(min) ? parseFloat(min) : -Infinity;\n        this.max = this.isDigit(max) ? parseFloat(max) : Infinity;\n\n        this._host = this._elementRef.nativeElement;\n\n        const self = this;\n\n        if ('valueAsNumber' in this._host) {\n            Object.defineProperty(Object.getPrototypeOf(this._host), 'valueAsNumber', {\n                // tslint:disable-next-line:no-reserved-keywords\n                get() {\n                    const res = parseFloat(self.normalizeSplitter(this.value));\n\n                    return isNaN(res) ? null : res;\n                }\n            });\n        }\n    }\n\n    _focusChanged(isFocused: boolean) {\n        if (isFocused !== this.focused) {\n            this.focused = isFocused;\n            this.stateChanges.next();\n        }\n    }\n\n    onKeyDown(event: KeyboardEvent) {\n        // tslint:disable-next-line:deprecation\n        const keyCode = event.keyCode;\n\n        const isCtrlA = (e) => e.keyCode === A && (e.ctrlKey || e.metaKey);\n        const isCtrlC = (e) => e.keyCode === C && (e.ctrlKey || e.metaKey);\n        const isCtrlV = (e) => e.keyCode === V && (e.ctrlKey || e.metaKey);\n        const isCtrlX = (e) => e.keyCode === X && (e.ctrlKey || e.metaKey);\n\n        const isFKey = (e) => e.keyCode >= F1 && e.keyCode <= F12;\n\n        const isNumber = (e) => (e.keyCode >= ZERO && e.keyCode <= NINE) ||\n            (e.keyCode >= NUMPAD_ZERO && e.keyCode <= NUMPAD_NINE);\n\n        const minuses = [NUMPAD_MINUS, DASH, FF_MINUS];\n        const serviceKeys = [DELETE, BACKSPACE, TAB, ESCAPE, ENTER];\n        const arrows = [LEFT_ARROW, RIGHT_ARROW];\n        const allowedKeys =  [HOME, END].concat(arrows).concat(serviceKeys).concat(minuses);\n\n        const isIEPeriod = (e) => e.key === '.' || e.key === 'Decimal';\n        const isNotIEPeriod = (e) => e.key === '.' || e.key === ',';\n\n        // Decimal is for IE\n        const isPeriod = (e) => this._platform.EDGE || this._platform.TRIDENT\n            ? isIEPeriod(e)\n            : isNotIEPeriod(e);\n\n        if (allowedKeys.indexOf(keyCode) !== -1 ||\n            isCtrlA(event) ||\n            isCtrlC(event) ||\n            isCtrlV(event) ||\n            isCtrlX(event) ||\n            isFKey(event) ||\n            isPeriod(event)\n        ) {\n            // let it happen, don't do anything\n            return;\n        }\n        // Ensure that it is not a number and stop the keypress\n        if (event.shiftKey || !isNumber(event)) {\n            event.preventDefault();\n\n            // process steps\n            const step = event.shiftKey ? this.bigStep : this.step;\n\n            if (keyCode === UP_ARROW) {\n                this.stepUp(step);\n            }\n\n            if (keyCode === DOWN_ARROW) {\n                this.stepDown(step);\n            }\n        }\n    }\n\n    onPaste(event) {\n        let value = event.clipboardData.getData('text');\n        value = this.normalizeSplitter(value);\n\n        if (!this.isDigit(value)) {\n            event.preventDefault();\n        }\n    }\n\n    stepUp(step: number) {\n        this._elementRef.nativeElement.focus();\n        const res = stepUp(this._host.valueAsNumber, this.max, this.min, step);\n        this._host.value = res === null ? '' : res.toString();\n        this._model.update.emit(this._host.valueAsNumber);\n    }\n\n    stepDown(step: number) {\n        this._elementRef.nativeElement.focus();\n        const res = stepDown(this._host.valueAsNumber, this.max, this.min, step);\n        this._host.value = res === null ? '' : res.toString();\n        this._model.update.emit(this._host.valueAsNumber);\n    }\n\n    private normalizeSplitter(value: string): string {\n        return value ? value.replace(/,/g, '.') : value;\n    }\n\n    private isDigit(value: string): boolean {\n        return this.isFloat(value) || this.isInt(value);\n    }\n\n    private isFloat(value: string): boolean {\n        return /^-?\\d+\\.\\d+$/.test(value);\n    }\n\n    private isInt(value: string): boolean {\n        return /^-?\\d+$/.test(value);\n    }\n}\n\n@Directive({\n    selector: `input[mcInput]`,\n    exportAs: 'mcInput',\n    host: {\n        class: 'mc-input',\n        // Native input properties that are overwritten by Angular inputs need to be synced with\n        // the native input element. Otherwise property bindings for those don't work.\n        '[attr.id]': 'id',\n        '[attr.placeholder]': 'placeholder',\n        '[disabled]': 'disabled',\n        '[required]': 'required',\n        '(blur)': '_focusChanged(false)',\n        '(focus)': '_focusChanged(true)',\n        '(input)': '_onInput()'\n    },\n    providers: [{ provide: McFormFieldControl, useExisting: McInput }]\n})\nexport class McInput extends _McInputMixinBase implements McFormFieldControl<any>, OnChanges,\n    OnDestroy, DoCheck, CanUpdateErrorState {\n\n    /** An object used to control when error messages are shown. */\n    @Input() errorStateMatcher: ErrorStateMatcher;\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    focused: boolean = false;\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    readonly stateChanges: Subject<void> = new Subject<void>();\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    controlType: string = 'mc-input';\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    @Input()\n    get disabled(): boolean {\n        if (this.ngControl && this.ngControl.disabled !== null) {\n            return this.ngControl.disabled;\n        }\n\n        return this._disabled;\n    }\n\n    set disabled(value: boolean) {\n        this._disabled = coerceBooleanProperty(value);\n\n        // Browsers may not fire the blur event if the input is disabled too quickly.\n        // Reset from here to ensure that the element doesn't become stuck.\n        if (this.focused) {\n            this.focused = false;\n            this.stateChanges.next();\n        }\n    }\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    @Input()\n    get id(): string {\n        return this._id;\n    }\n\n    set id(value: string) {\n        this._id = value || this._uid;\n    }\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    @Input() placeholder: string;\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    @Input()\n    get required(): boolean {\n        return this._required;\n    }\n\n    set required(value: boolean) {\n        this._required = coerceBooleanProperty(value);\n    }\n\n    // tslint:disable no-reserved-keywords\n    /** Input type of the element. */\n    @Input()\n    get type(): string {\n        return this._type;\n    }\n\n    set type(value: string) {\n        this._type = value || 'text';\n        this._validateType();\n\n        // When using Angular inputs, developers are no longer able to set the properties on the native\n        // input element. To ensure that bindings for `type` work, we need to sync the setter\n        // with the native property. Textarea elements don't support the type property or attribute.\n        if (getSupportedInputTypes().has(this._type)) {\n            this._elementRef.nativeElement.type = this._type;\n        }\n    }\n    // tslint:enable no-reserved-keywords\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    @Input()\n    get value(): string {\n        return this._inputValueAccessor.value;\n    }\n\n    set value(value: string) {\n        if (value !== this.value) {\n            this._inputValueAccessor.value = value;\n            this.stateChanges.next();\n        }\n    }\n\n    protected _uid = `mc-input-${nextUniqueId++}`;\n    protected _previousNativeValue: any;\n    protected _disabled = false;\n    protected _id: string;\n    protected _required = false;\n    protected _type = 'text';\n    protected _neverEmptyInputTypes = [\n        'date',\n        'datetime',\n        'datetime-local',\n        'month',\n        'time',\n        'week'\n    ].filter((t) => getSupportedInputTypes().has(t));\n\n    private _inputValueAccessor: { value: any };\n\n    constructor(protected _elementRef: ElementRef,\n                @Optional() @Self() public ngControl: NgControl,\n                @Optional() _parentForm: NgForm,\n                @Optional() _parentFormGroup: FormGroupDirective,\n                _defaultErrorStateMatcher: ErrorStateMatcher,\n                @Optional() @Self() @Inject(MC_INPUT_VALUE_ACCESSOR) inputValueAccessor: any) {\n        super(_defaultErrorStateMatcher, _parentForm, _parentFormGroup, ngControl);\n        // If no input value accessor was explicitly specified, use the element as the input value\n        // accessor.\n        this._inputValueAccessor = inputValueAccessor || this._elementRef.nativeElement;\n\n        this._previousNativeValue = this.value;\n\n        // Force setter to be called in case id was not specified.\n        this.id = this.id;\n    }\n\n    ngOnChanges() {\n        this.stateChanges.next();\n    }\n\n    ngOnDestroy() {\n        this.stateChanges.complete();\n    }\n\n    ngDoCheck() {\n        if (this.ngControl) {\n            // We need to re-evaluate this on every change detection cycle, because there are some\n            // error triggers that we can't subscribe to (e.g. parent form submissions). This means\n            // that whatever logic is in here has to be super lean or we risk destroying the performance.\n            this.updateErrorState();\n        }\n\n        // We need to dirty-check the native element's value, because there are some cases where\n        // we won't be notified when it changes (e.g. the consumer isn't using forms or they're\n        // updating the value using `emitEvent: false`).\n        this._dirtyCheckNativeValue();\n    }\n\n    /** Focuses the input. */\n    focus(): void {\n        this._elementRef.nativeElement.focus();\n    }\n\n    /** Callback for the cases where the focused state of the input changes. */\n    _focusChanged(isFocused: boolean) {\n        if (isFocused !== this.focused) {\n            this.focused = isFocused;\n            this.stateChanges.next();\n        }\n    }\n\n    _onInput() {\n        // This is a noop function and is used to let Angular know whenever the value changes.\n        // Angular will run a new change detection each time the `input` event has been dispatched.\n        // It's necessary that Angular recognizes the value change, because when floatingLabel\n        // is set to false and Angular forms aren't used, the placeholder won't recognize the\n        // value changes and will not disappear.\n        // Listening to the input event wouldn't be necessary when the input is using the\n        // FormsModule or ReactiveFormsModule, because Angular forms also listens to input events.\n    }\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    get empty(): boolean {\n        return !this._isNeverEmpty() && !this._elementRef.nativeElement.value && !this._isBadInput();\n    }\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    onContainerClick() {\n        this.focus();\n    }\n\n    /** Does some manual dirty checking on the native input `value` property. */\n    protected _dirtyCheckNativeValue() {\n        const newValue = this.value;\n\n        if (this._previousNativeValue !== newValue) {\n            this._previousNativeValue = newValue;\n            this.stateChanges.next();\n        }\n    }\n\n    /** Make sure the input is a supported type. */\n    protected _validateType() {\n        if (MC_INPUT_INVALID_TYPES.indexOf(this._type) > -1) {\n            throw getMcInputUnsupportedTypeError(this._type);\n        }\n    }\n\n    /** Checks whether the input type is one of the types that are never empty. */\n    protected _isNeverEmpty() {\n        return this._neverEmptyInputTypes.indexOf(this._type) > -1;\n    }\n\n    /** Checks whether the input is invalid based on the native validation. */\n    protected _isBadInput() {\n        // The `validity` property won't be present on platform-server.\n        const validity = (this._elementRef.nativeElement as HTMLInputElement).validity;\n\n        return validity && validity.badInput;\n    }\n}\n\n@Directive({\n    selector: 'input[mcInputMonospace]',\n    exportAs: 'McInputMonospace',\n    host: { class: 'mc-input_monospace' }\n})\nexport class McInputMono {\n}\n","import { Directive, forwardRef, Input, OnChanges, Provider, SimpleChanges } from '@angular/core';\nimport { AbstractControl, NG_VALIDATORS, ValidationErrors, Validator, ValidatorFn, Validators } from '@angular/forms';\n\n\nexport const MIN_VALIDATOR: Provider = {\n    provide: NG_VALIDATORS,\n    useExisting: forwardRef(() => MinValidator),\n    multi: true\n};\n\n/**\n * A directive which installs the {@link MinValidator} for any `formControlName`,\n * `formControl`, or control with `ngModel` that also has a `min` attribute.\n *\n * @experimental\n */\n@Directive({\n    selector: '[min][formControlName],[min][formControl],[min][ngModel]',\n    providers: [MIN_VALIDATOR],\n    host: {'[attr.min]': 'min ? min : null'}\n})\nexport class MinValidator implements Validator, OnChanges {\n\n    @Input() min: string;\n    private _validator: ValidatorFn;\n    private _onChange: () => void;\n\n    ngOnChanges(changes: SimpleChanges): void {\n        if ('min' in changes) {\n            this._createValidator();\n            if (this._onChange) { this._onChange(); }\n        }\n    }\n\n    validate(c: AbstractControl): ValidationErrors | null { return this._validator(c); }\n\n    registerOnValidatorChange(fn: () => void): void { this._onChange = fn; }\n\n    private _createValidator(): void { this._validator = Validators.min(parseInt(this.min, 10)); }\n}\n\n\nexport const MAX_VALIDATOR: Provider = {\n    provide: NG_VALIDATORS,\n    useExisting: forwardRef(() => MaxValidator),\n    multi: true\n};\n\n/**\n * A directive which installs the {@link MaxValidator} for any `formControlName`,\n * `formControl`, or control with `ngModel` that also has a `min` attribute.\n *\n * @experimental\n */\n@Directive({\n    selector: '[max][formControlName],[max][formControl],[max][ngModel]',\n    providers: [MAX_VALIDATOR],\n    host: {\n        '[attr.max]': 'max ? max : null'\n    }\n})\nexport class MaxValidator implements Validator,\n    OnChanges {\n\n    @Input() max: string;\n    private _validator: ValidatorFn;\n    private _onChange: () => void;\n\n    ngOnChanges(changes: SimpleChanges): void {\n        if ('max' in changes) {\n            this._createValidator();\n            if (this._onChange) { this._onChange(); }\n        }\n    }\n\n    validate(c: AbstractControl): ValidationErrors | null { return this._validator(c); }\n\n    registerOnValidatorChange(fn: () => void): void { this._onChange = fn; }\n\n    private _createValidator(): void { this._validator = Validators.max(parseInt(this.max, 10)); }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { A11yModule } from '@ptsecurity/cdk/a11y';\nimport { McCommonModule } from '@ptsecurity/mosaic/core';\n\nimport { McInput, McInputMono, McNumberInput } from './input';\nimport { MaxValidator, MinValidator } from './input-number-validators';\n\n\n@NgModule({\n    imports: [CommonModule, A11yModule, McCommonModule, FormsModule],\n    exports: [McInput, McNumberInput, McInputMono, MinValidator, MaxValidator],\n    declarations: [McInput, McNumberInput, McInputMono, MinValidator, MaxValidator ]\n})\nexport class McInputModule {\n}\n","import { Component } from '@angular/core';\n\n\n@Component({\n    selector: 'mc-content',\n    preserveWhitespaces: false,\n    templateUrl: './content.component.html',\n    styles: [\n        `:host {\n            display: block;\n        }`\n    ],\n    host: {\n        '[class.mc-layout-content]': 'true'\n    }\n})\nexport class McContentComponent {\n}\n","import { Component } from '@angular/core';\n\n\n@Component({\n    selector: 'mc-footer',\n    preserveWhitespaces: false,\n    templateUrl: './footer.component.html',\n    styles: [\n        `:host {\n            display: block;\n        }`\n    ],\n    host: {\n        '[class.mc-layout-footer]': 'true'\n    }\n})\nexport class McFooterComponent {\n}\n","import { Component } from '@angular/core';\n\n\n@Component({\n    selector : 'mc-header',\n    preserveWhitespaces: false,\n    templateUrl: './header.component.html',\n    styles: [\n        `:host {\n            display: block;\n        }`\n    ],\n    host: {\n        '[class.mc-layout-header]': 'true'\n    }\n})\nexport class McHeaderComponent {\n}\n","import { ChangeDetectionStrategy, Component, ViewEncapsulation } from '@angular/core';\n\n\n@Component({\n    selector: 'mc-layout',\n    preserveWhitespaces: false,\n    styleUrls: ['layout.css'],\n    templateUrl: './layout.component.html',\n    host: {\n        '[class.mc-layout]': 'true',\n        '[class.mc-layout-has-sidebar]': 'hasSidebar'\n    },\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class McLayoutComponent {\n    hasSidebar = false;\n}\n","import {\n    ChangeDetectionStrategy,\n    Component,\n    EventEmitter,\n    Host,\n    Input,\n    OnInit,\n    Optional,\n    Output\n} from '@angular/core';\nimport { toBoolean } from '@ptsecurity/mosaic/core';\n\nimport { McLayoutComponent } from './layout.component';\n\n\n@Component({\n    selector: 'mc-sidebar',\n    preserveWhitespaces: false,\n    templateUrl: './sidebar.component.html',\n    host: {\n        '[class.mc-layout-sidebar]': 'true',\n        '[class.mc-layout-sidebar-collapsed]': 'mcCollapsed',\n        '[style.flex]': 'mcFlex',\n        '[style.max-width.px]': 'mcWidth',\n        '[style.min-width.px]': 'mcWidth',\n        '[style.width.px]': 'mcWidth'\n    },\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class McSidebarComponent implements OnInit {\n\n    @Input() _mcWidth = 200;\n    @Input() mcCollapsedWidth = 80;\n\n    @Input()\n    set mcCollapsible(value: boolean) {\n        this.collapsible = toBoolean(value);\n    }\n\n    get mcCollapsible(): boolean {\n        return this.collapsible;\n    }\n\n    @Input()\n    set mcCollapsed(value: boolean) {\n        this.collapsed = toBoolean(value);\n    }\n\n    get mcCollapsed(): boolean {\n        return this.collapsed;\n    }\n\n    // tslint:disable-next-line\n    @Output() mcCollapsedChange = new EventEmitter();\n\n    private collapsed = false;\n    private collapsible = false;\n\n    get mcFlex(): string {\n        if (this.mcCollapsed) {\n            return `0 0 ${this.mcCollapsedWidth}px`;\n        } else {\n            return `0 0 ${this.mcWidth}px`;\n        }\n    }\n\n    get mcWidth(): number {\n        if (this.mcCollapsed) {\n            return this.mcCollapsedWidth;\n        } else {\n            return this._mcWidth;\n        }\n    }\n\n    constructor(\n        @Optional() @Host() private mcLayoutComponent: McLayoutComponent) {\n    }\n\n    ngOnInit() {\n        if (this.mcLayoutComponent) {\n            this.mcLayoutComponent.hasSidebar = true;\n        }\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { McContentComponent } from './content.component';\nimport { McFooterComponent } from './footer.component';\nimport { McHeaderComponent } from './header.component';\nimport { McLayoutComponent } from './layout.component';\nimport { McSidebarComponent } from './sidebar.component';\n\n\n@NgModule({\n    imports: [ CommonModule ],\n    exports: [\n        McLayoutComponent,\n        McContentComponent,\n        McFooterComponent,\n        McHeaderComponent,\n        McSidebarComponent\n    ],\n    declarations: [\n        McLayoutComponent,\n        McContentComponent,\n        McFooterComponent,\n        McHeaderComponent,\n        McSidebarComponent\n    ]\n})\nexport class McLayoutModule {\n}\n","import {\n    ChangeDetectionStrategy,\n    Component,\n    Directive,\n    ElementRef,\n    OnDestroy,\n    QueryList,\n    ViewEncapsulation,\n    ContentChildren\n} from '@angular/core';\n\nimport { FocusMonitor } from '@ptsecurity/cdk/a11y';\n\nimport { mixinColor, mixinDisabled, CanColor, CanDisable, CanDisableCtor, CanColorCtor } from '@ptsecurity/mosaic/core';\nimport { McIcon } from '@ptsecurity/mosaic/icon';\n\n\n@Directive({\n    selector: 'button[mc-button], a[mc-button]',\n    host: { class: 'mc-button' }\n})\nexport class McButtonCSSStyler {}\n\n\n@Directive({\n    selector: 'button[mc-icon-button], a[mc-icon-button]',\n    queries: {\n        contentChildren: new ContentChildren(McIcon)\n    },\n    host: { class: 'mc-icon-button' }\n})\nexport class McIconButtonCSSStyler {\n    nativeElement: Element;\n\n    contentChildren: QueryList<McIcon>;\n\n    constructor(elementRef: ElementRef) {\n        this.nativeElement = elementRef.nativeElement;\n    }\n\n    ngAfterContentInit() {\n        this._addClassModificatorForIcons();\n    }\n\n    _addClassModificatorForIcons() {\n        const twoIcons = 2;\n        const icons = this.contentChildren.map((item) => item._elementRef.nativeElement);\n\n        if (icons.length === 1) {\n            const iconElement = icons[0];\n            const COMMENT_NODE = 8;\n\n            if (!iconElement.previousElementSibling && !iconElement.nextElementSibling) {\n                if (iconElement.nextSibling && iconElement.nextSibling.nodeType !== COMMENT_NODE) {\n                    iconElement.classList.add('mc-icon_left');\n                    this.nativeElement.classList.add('mc-icon-button_left');\n                }\n\n                if (iconElement.previousSibling && iconElement.previousSibling.nodeType !== COMMENT_NODE) {\n                    iconElement.classList.add('mc-icon_right');\n                    this.nativeElement.classList.add('mc-icon-button_right');\n                }\n            }\n        } else if (icons.length === twoIcons) {\n            const firstIconElement = icons[0];\n            const secondIconElement = icons[1];\n\n            firstIconElement.classList.add('mc-icon_left');\n            secondIconElement.classList.add('mc-icon_right');\n        }\n    }\n}\n\n\nexport class McButtonBase {\n    constructor(public _elementRef: ElementRef) {}\n}\n\nexport const _McButtonMixinBase:\n    CanDisableCtor &\n    CanColorCtor &\n    typeof McButtonBase =\n        mixinColor(mixinDisabled(McButtonBase));\n\n\n@Component({\n    selector: `\n        button[mc-button],\n        button[mc-xs-button],\n        button[mc-sm-button],\n        button[mc-lg-button],\n        button[mc-xl-button]\n    `,\n    templateUrl: './button.component.html',\n    styleUrls: ['./button.css'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n    inputs: ['disabled', 'color'],\n    host: {\n        '[disabled]': 'disabled || null'\n    }\n})\nexport class McButton extends _McButtonMixinBase implements OnDestroy, CanDisable, CanColor {\n    constructor(elementRef: ElementRef, private _focusMonitor: FocusMonitor) {\n        super(elementRef);\n\n        this._focusMonitor.monitor(this._elementRef.nativeElement, true);\n    }\n\n    ngOnDestroy() {\n        this._focusMonitor.stopMonitoring(this._elementRef.nativeElement);\n    }\n\n    focus(): void {\n        this._getHostElement().focus();\n    }\n\n    _getHostElement() {\n        return this._elementRef.nativeElement;\n    }\n}\n\n\n@Component({\n    selector: 'a[mc-button], a[mc-xs-button], a[mc-sm-button], a[mc-lg-button], a[mc-xl-button]',\n    templateUrl: './button.component.html',\n    styleUrls: ['./button.css'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n    inputs: ['disabled', 'color'],\n    host: {\n        '[attr.tabindex]': 'disabled ? -1 : 0',\n        '[attr.disabled]': 'disabled || null',\n        '(click)': '_haltDisabledEvents($event)'\n    }\n})\nexport class McAnchor extends McButton {\n    constructor(focusMonitor: FocusMonitor, elementRef: ElementRef) {\n        super(elementRef, focusMonitor);\n    }\n\n    _haltDisabledEvents(event: Event) {\n        if (this.disabled) {\n            event.preventDefault();\n            event.stopImmediatePropagation();\n        }\n    }\n}\n\n\n@Component({\n    selector: 'button[mc-icon-button]',\n    templateUrl: './button.component.html',\n    styleUrls: ['./button.css'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n    inputs: ['disabled', 'color'],\n    host: {\n        '[attr.tabindex]': 'disabled ? -1 : 0',\n        '[attr.disabled]': 'disabled || null'\n    }\n})\nexport class McIconButton extends McButton {\n    constructor(focusMonitor: FocusMonitor, elementRef: ElementRef) {\n        super(elementRef, focusMonitor);\n    }\n\n    _haltDisabledEvents(event: Event) {\n        if (this.disabled) {\n            event.preventDefault();\n            event.stopImmediatePropagation();\n        }\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { A11yModule } from '@ptsecurity/cdk/a11y';\nimport { PlatformModule } from '@ptsecurity/cdk/platform';\n\nimport {\n    McButton,\n    McAnchor,\n    McIconButton,\n    McButtonCSSStyler,\n    McIconButtonCSSStyler\n} from './button.component';\n\n\n@NgModule({\n    imports: [\n        CommonModule,\n        A11yModule,\n        PlatformModule\n    ],\n    exports: [\n        McButton,\n        McAnchor,\n        McIconButton,\n        McButtonCSSStyler,\n        McIconButtonCSSStyler\n    ],\n    declarations: [\n        McButton,\n        McAnchor,\n        McIconButton,\n        McButtonCSSStyler,\n        McIconButtonCSSStyler\n    ]\n})\nexport class McButtonModule {}\n","import {\n    Output,\n    ChangeDetectionStrategy,\n    Component,\n    ElementRef, Input,\n    OnDestroy, EventEmitter,\n    ViewEncapsulation, HostBinding\n} from '@angular/core';\n\nimport { FocusMonitor } from '@ptsecurity/cdk/a11y';\nimport { SPACE } from '@ptsecurity/cdk/keycodes';\n\n\n@Component({\n    selector: 'mc-card',\n    templateUrl: './card.component.html',\n    styleUrls: ['./card.component.css'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n    inputs: ['color'],\n    host: {\n        class: 'mc-card',\n        '[class.mc-card_readonly]': 'readonly',\n        '[class.mc-card_selected]': 'selected',\n        '(keydown)': 'onKeyDown($event)',\n        '(click)': 'onClick($event)'\n    }\n})\nexport class McCard implements OnDestroy {\n    get tabIndex(): number | null {\n        return this.readonly ? null : this._tabIndex;\n    }\n\n    @HostBinding('attr.tabIndex')\n    @Input()\n    set tabIndex(value: number | null) {\n        this._tabIndex = value;\n    }\n\n    @Input()\n    readonly = false;\n\n    @Input()\n    selected = false;\n\n    @Output()\n    selectedChange = new EventEmitter<boolean>();\n\n    private _tabIndex: number | null = 0;\n\n    constructor(private _elementRef: ElementRef, private _focusMonitor: FocusMonitor) {\n        this._focusMonitor.monitor(this._elementRef.nativeElement, false);\n    }\n\n    ngOnDestroy() {\n        this._focusMonitor.stopMonitoring(this._elementRef.nativeElement);\n    }\n\n    focus(): void {\n        this.hostElement.focus();\n    }\n\n    onClick($event: MouseEvent) {\n        if (!this.readonly) {\n            $event.stopPropagation();\n\n            this.selectedChange.emit(!this.selected);\n        }\n    }\n\n    private get hostElement() {\n        return this._elementRef.nativeElement;\n    }\n\n    onKeyDown($event: KeyboardEvent) {\n        switch ($event.keyCode) {\n            case SPACE:\n                if (!this.readonly) {\n                    $event.preventDefault();\n                    this.selectedChange.emit(!this.selected);\n                }\n                break;\n            default:\n        }\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { A11yModule } from '@ptsecurity/cdk/a11y';\nimport { PlatformModule } from '@ptsecurity/cdk/platform';\n\nimport {\n    McCard\n} from './card.component';\n\n\n@NgModule({\n    imports: [\n        CommonModule,\n        A11yModule,\n        PlatformModule\n    ],\n    exports: [McCard],\n    declarations: [McCard]\n})\nexport class McCardModule {}\n","import { InjectionToken } from '@angular/core';\n\n\n/**\n * Checkbox click action when user click on input element.\n * noop: Do not toggle checked or indeterminate.\n * check: Only toggle checked status, ignore indeterminate.\n * check-indeterminate: Toggle checked status, set indeterminate to false. Default behavior.\n * undefined: Same as `check-indeterminate`.\n */\nexport type McCheckboxClickAction = 'noop' | 'check' | 'check-indeterminate' | undefined;\n\n/**\n * Injection token that can be used to specify the checkbox click behavior.\n */\nexport const MC_CHECKBOX_CLICK_ACTION =\n    new InjectionToken<McCheckboxClickAction>('mc-checkbox-click-action');\n","import {\n    AfterViewInit,\n    Attribute,\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    ElementRef,\n    EventEmitter,\n    forwardRef,\n    Inject,\n    Input,\n    OnDestroy,\n    Optional,\n    Output,\n    ViewChild,\n    ViewEncapsulation\n} from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { FocusMonitor, FocusOrigin } from '@ptsecurity/cdk/a11y';\nimport {\n    CanColor, CanColorCtor,\n    CanDisable, CanDisableCtor,\n    HasTabIndex, HasTabIndexCtor,\n    mixinColor,\n    mixinDisabled,\n    mixinTabIndex,\n    toBoolean\n} from '@ptsecurity/mosaic/core';\n\nimport { MC_CHECKBOX_CLICK_ACTION, McCheckboxClickAction } from './checkbox-config';\n\n\n// Increasing integer for generating unique ids for checkbox components.\nlet nextUniqueId = 0;\n\n/**\n * Provider Expression that allows mc-checkbox to register as a ControlValueAccessor.\n * This allows it to support [(ngModel)].\n * @docs-private\n */\nexport const MC_CHECKBOX_CONTROL_VALUE_ACCESSOR: any = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => McCheckbox),\n    multi: true\n};\n\n/**\n * Represents the different states that require custom transitions between them.\n * @docs-private\n */\nexport enum TransitionCheckState {\n    /** The initial state of the component before any user interaction. */\n    Init,\n    /** The state representing the component when it's becoming checked. */\n    Checked,\n    /** The state representing the component when it's becoming unchecked. */\n    Unchecked,\n    /** The state representing the component when it's becoming indeterminate. */\n    Indeterminate\n}\n\n/** Change event object emitted by McCheckbox. */\nexport class McCheckboxChange {\n    /** The source McCheckbox of the event. */\n    source: McCheckbox;\n    /** The new `checked` value of the checkbox. */\n    checked: boolean;\n}\n\n// Boilerplate for applying mixins to McCheckbox.\n/** @docs-private */\nexport class McCheckboxBase {\n    constructor(public _elementRef: ElementRef) {\n    }\n}\n\nexport const _McCheckboxMixinBase:\n    HasTabIndexCtor &\n    CanColorCtor &\n    CanDisableCtor &\n    typeof McCheckboxBase =\n        mixinTabIndex(mixinColor(mixinDisabled(McCheckboxBase)));\n\n\n/**\n * A mosaic checkbox component. Supports all of the functionality of an HTML5 checkbox,\n * and exposes a similar API. A McCheckbox can be either checked, unchecked, indeterminate, or\n * disabled. Note that all additional accessibility attributes are taken care of by the component,\n * so there is no need to provide them yourself. However, if you want to omit a label and still\n * have the checkbox be accessible, you may supply an [aria-label] input.\n */\n@Component({\n    selector: 'mc-checkbox',\n    templateUrl: 'checkbox.html',\n    styleUrls: ['checkbox.css'],\n    exportAs: 'mcCheckbox',\n    host: {\n        class: 'mc-checkbox',\n        '[id]': 'id',\n        '[attr.id]': 'id',\n        '[class.mc-indeterminate]': 'indeterminate',\n        '[class.mc-checked]': 'checked',\n        '[class.mc-disabled]': 'disabled',\n        '[class.mc-checkbox-label-before]': 'labelPosition == \"before\"'\n    },\n    providers: [MC_CHECKBOX_CONTROL_VALUE_ACCESSOR],\n    inputs: ['color', 'tabIndex'],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class McCheckbox extends _McCheckboxMixinBase implements ControlValueAccessor,\n    AfterViewInit, OnDestroy, CanColor, CanDisable, HasTabIndex {\n\n    /**\n     * Attached to the aria-label attribute of the host element. In most cases, arial-labelledby will\n     * take precedence so this may be omitted.\n     */\n    @Input('aria-label') ariaLabel: string = '';\n\n    /**\n     * Users can specify the `aria-labelledby` attribute which will be forwarded to the input element\n     */\n    @Input('aria-labelledby') ariaLabelledby: string | null = null;\n\n    private _uniqueId: string = `mc-checkbox-${++nextUniqueId}`;\n\n    /** A unique id for the checkbox input. If none is supplied, it will be auto-generated. */\n    @Input() id: string = this._uniqueId;\n\n    /** Returns the unique id for the visual hidden input. */\n    get inputId(): string {\n        return `${this.id || this._uniqueId}-input`;\n    }\n\n    /** Whether the checkbox is required. */\n    @Input()\n    get required(): boolean {\n        return this._required;\n    }\n\n    set required(value: boolean) {\n        this._required = toBoolean(value);\n    }\n\n    private _required: boolean;\n\n    /** Whether the label should appear after or before the checkbox. Defaults to 'after' */\n    @Input() labelPosition: 'before' | 'after' = 'after';\n\n    /** Name value will be applied to the input element if present */\n    @Input() name: string | null = null;\n\n    /** Event emitted when the checkbox's `checked` value changes. */\n    @Output() readonly change: EventEmitter<McCheckboxChange> =\n        new EventEmitter<McCheckboxChange>();\n\n    /** Event emitted when the checkbox's `indeterminate` value changes. */\n    @Output() readonly indeterminateChange: EventEmitter<boolean> = new EventEmitter<boolean>();\n\n    /** The value attribute of the native input element */\n    @Input() value: string;\n\n    /** The native `<input type=\"checkbox\">` element */\n    @ViewChild('input') _inputElement: ElementRef;\n\n    /**\n     * Called when the checkbox is blurred. Needed to properly implement ControlValueAccessor.\n     * @docs-private\n     */\n    _onTouched: () => any = () => {\n    }\n\n    private _currentAnimationClass: string = '';\n\n    private _currentCheckState: TransitionCheckState = TransitionCheckState.Init;\n\n    private _controlValueAccessorChangeFn: (value: any) => void = () => {\n    }\n\n    constructor(elementRef: ElementRef,\n                private _changeDetectorRef: ChangeDetectorRef,\n                private _focusMonitor: FocusMonitor,\n                @Attribute('tabindex') tabIndex: string,\n                @Optional() @Inject(MC_CHECKBOX_CLICK_ACTION)\n                private _clickAction: McCheckboxClickAction) {\n        super(elementRef);\n\n        this.tabIndex = parseInt(tabIndex) || 0;\n    }\n\n    ngAfterViewInit() {\n        this._focusMonitor\n            .monitor(this._inputElement.nativeElement)\n            .subscribe((focusOrigin) => this._onInputFocusChange(focusOrigin));\n    }\n\n    ngOnDestroy() {\n        this._focusMonitor.stopMonitoring(this._inputElement.nativeElement);\n    }\n\n    /**\n     * Whether the checkbox is checked.\n     */\n    @Input()\n    get checked(): boolean {\n        return this._checked;\n    }\n\n    set checked(value: boolean) {\n        if (value != this.checked) {\n            this._checked = value;\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n\n    private _checked: boolean = false;\n\n    /**\n     * Whether the checkbox is disabled. This fully overrides the implementation provided by\n     * mixinDisabled, but the mixin is still required because mixinTabIndex requires it.\n     */\n    @Input()\n    get disabled() {\n        return this._disabled;\n    }\n\n    set disabled(value: any) {\n        if (value != this.disabled) {\n            this._disabled = value;\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n\n    private _disabled: boolean = false;\n\n    /**\n     * Whether the checkbox is indeterminate. This is also known as \"mixed\" mode and can be used to\n     * represent a checkbox with three states, e.g. a checkbox that represents a nested list of\n     * checkable items. Note that whenever checkbox is manually clicked, indeterminate is immediately\n     * set to false.\n     */\n    @Input()\n    get indeterminate(): boolean {\n        return this._indeterminate;\n    }\n\n    set indeterminate(value: boolean) {\n        const changed = value != this._indeterminate;\n        this._indeterminate = value;\n\n        if (changed) {\n            if (this._indeterminate) {\n                this._transitionCheckState(TransitionCheckState.Indeterminate);\n            } else {\n                this._transitionCheckState(\n                    this.checked ? TransitionCheckState.Checked : TransitionCheckState.Unchecked);\n            }\n            this.indeterminateChange.emit(this._indeterminate);\n        }\n    }\n\n    private _indeterminate: boolean = false;\n\n    /** Method being called whenever the label text changes. */\n    _onLabelTextChange() {\n        // This method is getting called whenever the label of the checkbox changes.\n        // Since the checkbox uses the OnPush strategy we need to notify it about the change\n        // that has been recognized by the cdkObserveContent directive.\n        this._changeDetectorRef.markForCheck();\n    }\n\n    // Implemented as part of ControlValueAccessor.\n    writeValue(value: any) {\n        this.checked = !!value;\n    }\n\n    // Implemented as part of ControlValueAccessor.\n    registerOnChange(fn: (value: any) => void) {\n        this._controlValueAccessorChangeFn = fn;\n    }\n\n    // Implemented as part of ControlValueAccessor.\n    registerOnTouched(fn: any) {\n        this._onTouched = fn;\n    }\n\n    // Implemented as part of ControlValueAccessor.\n    setDisabledState(isDisabled: boolean) {\n        this.disabled = isDisabled;\n    }\n\n    _getAriaChecked(): 'true' | 'false' | 'mixed' {\n        return this.checked ? 'true' : (this.indeterminate ? 'mixed' : 'false');\n    }\n\n    private _transitionCheckState(newState: TransitionCheckState) {\n        const oldState = this._currentCheckState;\n        const element: HTMLElement = this._elementRef.nativeElement;\n\n        if (oldState === newState) {\n            return;\n        }\n        if (this._currentAnimationClass.length > 0) {\n            element.classList.remove(this._currentAnimationClass);\n        }\n\n        this._currentCheckState = newState;\n\n        if (this._currentAnimationClass.length > 0) {\n            element.classList.add(this._currentAnimationClass);\n        }\n    }\n\n    private _emitChangeEvent() {\n        const event = new McCheckboxChange();\n        event.source = this;\n        event.checked = this.checked;\n\n        this._controlValueAccessorChangeFn(this.checked);\n        this.change.emit(event);\n    }\n\n    /** Function is called whenever the focus changes for the input element. */\n    private _onInputFocusChange(focusOrigin: FocusOrigin) {\n        if (focusOrigin) {\n            this._onTouched();\n        }\n    }\n\n    /** Toggles the `checked` state of the checkbox. */\n    toggle(): void {\n        this.checked = !this.checked;\n    }\n\n    /**\n     * Event handler for checkbox input element.\n     * Toggles checked state if element is not disabled.\n     * Do not toggle on (change) event since IE doesn't fire change event when\n     *   indeterminate checkbox is clicked.\n     * @param event\n     */\n    _onInputClick(event: Event) {\n        // We have to stop propagation for click events on the visual hidden input element.\n        // By default, when a user clicks on a label element, a generated click event will be\n        // dispatched on the associated input element. Since we are using a label element as our\n        // root container, the click event on the `checkbox` will be executed twice.\n        // The real click event will bubble up, and the generated click event also tries to bubble up.\n        // This will lead to multiple click events.\n        // Preventing bubbling for the second event will solve that issue.\n        event.stopPropagation();\n\n        // If resetIndeterminate is false, and the current state is indeterminate, do nothing on click\n        if (!this.disabled && this._clickAction !== 'noop') {\n            // When user manually click on the checkbox, `indeterminate` is set to false.\n            if (this.indeterminate && this._clickAction !== 'check') {\n\n                Promise.resolve().then(() => {\n                    this._indeterminate = false;\n                    this.indeterminateChange.emit(this._indeterminate);\n                });\n            }\n\n            this.toggle();\n            this._transitionCheckState(\n                this._checked ? TransitionCheckState.Checked : TransitionCheckState.Unchecked);\n\n            // Emit our custom change event if the native input emitted one.\n            // It is important to only emit it, if the native input triggered one, because\n            // we don't want to trigger a change event, when the `checked` variable changes for example.\n            this._emitChangeEvent();\n        } else if (!this.disabled && this._clickAction === 'noop') {\n            // Reset native input when clicked with noop. The native checkbox becomes checked after\n            // click, reset it to be align with `checked` value of `mc-checkbox`.\n            this._inputElement.nativeElement.checked = this.checked;\n            this._inputElement.nativeElement.indeterminate = this.indeterminate;\n        }\n    }\n\n    /** Focuses the checkbox. */\n    focus(): void {\n        this._focusMonitor.focusVia(this._inputElement.nativeElement, 'keyboard');\n    }\n\n    _onInteractionEvent(event: Event) {\n        // We always have to stop propagation on the change event.\n        // Otherwise the change event, from the input element, will bubble up and\n        // emit its event object to the `change` output.\n        event.stopPropagation();\n    }\n}\n","import {\n    Directive,\n    forwardRef,\n    Provider\n} from '@angular/core';\nimport {\n    CheckboxRequiredValidator,\n    NG_VALIDATORS\n} from '@angular/forms';\n\n\nexport const MC_CHECKBOX_REQUIRED_VALIDATOR: Provider = {\n    provide: NG_VALIDATORS,\n    useExisting: forwardRef(() => McCheckboxRequiredValidator),\n    multi: true\n};\n\n/**\n * Validator for Mosaic checkbox's required attribute in template-driven checkbox.\n * Current CheckboxRequiredValidator only work with `input type=checkbox` and does not\n * work with `mc-checkbox`.\n */\n@Directive({\n    selector: `mc-checkbox[required][formControlName],\n             mc-checkbox[required][formControl], mc-checkbox[required][ngModel]`,\n    providers: [MC_CHECKBOX_REQUIRED_VALIDATOR],\n    host: { '[attr.required]': 'required ? \"\" : null' }\n})\nexport class McCheckboxRequiredValidator extends CheckboxRequiredValidator {\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { McCheckbox } from './checkbox';\nimport { McCheckboxRequiredValidator } from './checkbox-required-validator';\n\n\n@NgModule({\n    imports: [CommonModule],\n    exports: [McCheckbox, McCheckboxRequiredValidator],\n    declarations: [McCheckbox, McCheckboxRequiredValidator]\n})\nexport class McCheckboxModule {\n}\n","import { ChangeDetectionStrategy, Component, Input, ViewEncapsulation } from '@angular/core';\nimport { coerceBooleanProperty } from '@ptsecurity/cdk/coercion';\n\n\n@Component({\n    selector: 'mc-divider',\n    host: {\n        class: 'mc-divider',\n        role: 'separator',\n        '[attr.aria-orientation]': 'vertical ? \"vertical\" : \"horizontal\"',\n        '[class.mc-divider-vertical]': 'vertical',\n        '[class.mc-divider-inset]': 'inset'\n    },\n    template: '',\n    styleUrls: ['divider.css'],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    preserveWhitespaces: false\n})\nexport class McDivider {\n    // Whether the divider is vertically aligned.\n    @Input()\n    get vertical(): boolean {\n        return this._vertical;\n    }\n\n    set vertical(value: boolean) {\n        this._vertical = coerceBooleanProperty(value);\n    }\n\n    private _vertical: boolean = false;\n\n    // Whether the divider is an inset divider.\n    @Input()\n    get inset(): boolean {\n        return this._inset;\n    }\n\n    set inset(value: boolean) {\n        this._inset = coerceBooleanProperty(value);\n    }\n\n    private _inset: boolean = false;\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { McDivider } from './divider.component';\n\n\n@NgModule({\n    imports: [CommonModule],\n    exports: [McDivider],\n    declarations: [McDivider]\n})\nexport class McDividerModule {\n}\n","import { DOCUMENT } from '@angular/common';\nimport {\n    Directive,\n    TemplateRef,\n    ComponentFactoryResolver,\n    ApplicationRef,\n    Injector,\n    ViewContainerRef,\n    Inject,\n    OnDestroy\n} from '@angular/core';\nimport { TemplatePortal, DomPortalOutlet } from '@ptsecurity/cdk/portal';\nimport { Subject } from 'rxjs';\n\n\n/**\n * Dropdown content that will be rendered lazily once the dropdown is opened.\n */\n@Directive({\n    selector: 'ng-template[mcDropdownContent]'\n})\nexport class McDropdownContent implements OnDestroy {\n\n    /** Emits when the dropdown content has been attached. */\n    _attached = new Subject<void>();\n    private _portal: TemplatePortal;\n    private _outlet: DomPortalOutlet;\n\n    constructor(\n        private _template: TemplateRef<any>,\n        private _componentFactoryResolver: ComponentFactoryResolver,\n        private _appRef: ApplicationRef,\n        private _injector: Injector,\n        private _viewContainerRef: ViewContainerRef,\n        @Inject(DOCUMENT) private _document: any) {}\n\n    /**\n     * Attaches the content with a particular context.\n     * @docs-private\n     */\n    attach(context: any = {}) {\n        if (!this._portal) {\n            this._portal = new TemplatePortal(this._template, this._viewContainerRef);\n        }\n\n        this.detach();\n\n        if (!this._outlet) {\n            this._outlet = new DomPortalOutlet(this._document.createElement('div'),\n                this._componentFactoryResolver, this._appRef, this._injector);\n        }\n\n        const element: HTMLElement = this._template.elementRef.nativeElement;\n\n        // Because we support opening the same dropdown from different triggers (which in turn have their\n        // own `OverlayRef` panel), we have to re-insert the host element every time, otherwise we\n        // risk it staying attached to a pane that's no longer in the DOM.\n        element.parentNode!.insertBefore(this._outlet.outletElement, element);\n        this._portal.attach(this._outlet, context);\n        this._attached.next();\n    }\n\n    /**\n     * Detaches the content.\n     * @docs-private\n     */\n    detach() {\n        if (this._portal.isAttached) {\n            this._portal.detach();\n        }\n    }\n\n    ngOnDestroy() {\n        if (this._outlet) {\n            this._outlet.dispose();\n        }\n    }\n}\n","import { EventEmitter, TemplateRef, InjectionToken } from '@angular/core';\nimport { FocusOrigin } from '@ptsecurity/cdk/a11y';\nimport { Direction } from '@ptsecurity/cdk/bidi';\n\nimport { McDropdownContent } from './dropdown-content';\nimport { DropdownPositionX, DropdownPositionY } from './dropdown-positions';\n\n\n/**\n * Injection token used to provide the parent dropdown to dropdown-specific components.\n * @docs-private\n */\nexport const MC_DROPDOWN_PANEL = new InjectionToken<McDropdownPanel>('MC_DROPDOWN_PANEL');\n\n/**\n * Interface for a custom dropdown panel that can be used with `mcDropdownTriggerFor`.\n * @docs-private\n */\n// tslint:disable-next-line:interface-name\nexport interface McDropdownPanel<T = any> {\n    xPosition: DropdownPositionX;\n    yPosition: DropdownPositionY;\n    overlapTrigger: boolean;\n    templateRef: TemplateRef<any>;\n    closed: EventEmitter<void | 'click' | 'keydown' | 'tab'>;\n    direction?: Direction;\n    lazyContent?: McDropdownContent;\n    backdropClass?: string;\n    hasBackdrop?: boolean;\n    focusFirstItem(origin?: FocusOrigin): void;\n    resetActiveItem(): void;\n    setPositionClasses?(x: DropdownPositionX, y: DropdownPositionY): void;\n    addItem?(item: T): void;\n    removeItem?(item: T): void;\n}\n","import { DOCUMENT } from '@angular/common';\nimport {\n    ChangeDetectionStrategy,\n    Component,\n    ElementRef,\n    OnDestroy,\n    ViewEncapsulation,\n    Inject,\n    Optional\n} from '@angular/core';\nimport { IFocusableOption, FocusMonitor, FocusOrigin } from '@ptsecurity/cdk/a11y';\nimport {\n    CanDisable, CanDisableCtor,\n    mixinDisabled\n} from '@ptsecurity/mosaic/core';\n\nimport { MC_DROPDOWN_PANEL, McDropdownPanel } from './dropdown-panel';\n\n\n// Boilerplate for applying mixins to McDropdownItem.\n/** @docs-private */\nexport class McDropdownItemBase {}\nexport const _McDropdownItemMixinBase: CanDisableCtor & typeof McDropdownItemBase =\n    mixinDisabled(McDropdownItemBase);\n\n/**\n * This directive is intended to be used inside an mc-dropdown tag.\n * It exists mostly to set the role attribute.\n */\n@Component({\n    selector: 'mc-dropdown-item, [mc-dropdown-item]',\n    exportAs: 'mcDropdownItem',\n    inputs: ['disabled'],\n    host: {\n        role: 'dropdown-item',\n        class: 'mc-dropdown__item',\n        '[attr.tabindex]': '_getTabIndex()',\n        '[attr.disabled]': 'disabled || null',\n        '(click)': '_checkDisabled($event)'\n    },\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n    template: `<ng-content></ng-content>`\n})\nexport class McDropdownItem extends _McDropdownItemMixinBase\n    implements IFocusableOption, CanDisable, OnDestroy {\n\n    private _document: Document;\n\n    constructor(\n        private _elementRef: ElementRef<HTMLElement>,\n        @Inject(DOCUMENT) document: any,\n        private _focusMonitor: FocusMonitor,\n        @Inject(MC_DROPDOWN_PANEL) @Optional() private _parentDropdownPanel?: McDropdownPanel<McDropdownItem>) {\n        super();\n\n        if (_focusMonitor) {\n            // Start monitoring the element so it gets the appropriate focused classes. We want\n            // to show the focus style for dropdown items only when the focus was not caused by a\n            // mouse or touch interaction.\n            _focusMonitor.monitor(this._elementRef.nativeElement, false);\n        }\n\n        if (_parentDropdownPanel && _parentDropdownPanel.addItem) {\n            _parentDropdownPanel.addItem(this);\n        }\n\n        this._document = document;\n    }\n\n    /** Focuses the dropdown item. */\n    focus(origin: FocusOrigin = 'program'): void {\n        if (this._focusMonitor) {\n            this._focusMonitor.focusVia(this._getHostElement(), origin);\n        } else {\n            this._getHostElement().focus();\n        }\n    }\n\n    ngOnDestroy() {\n        if (this._focusMonitor) {\n            this._focusMonitor.stopMonitoring(this._elementRef.nativeElement);\n        }\n\n        if (this._parentDropdownPanel && this._parentDropdownPanel.removeItem) {\n            this._parentDropdownPanel.removeItem(this);\n        }\n    }\n\n    /** Used to set the `tabindex`. */\n    _getTabIndex(): string {\n        return this.disabled ? '-1' : '0';\n    }\n\n    /** Returns the host DOM element. */\n    _getHostElement(): HTMLElement {\n        return this._elementRef.nativeElement;\n    }\n\n    /** Prevents the default element actions if it is disabled. */\n    _checkDisabled(event: Event): void {\n        if (this.disabled) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n    }\n\n    /** Gets the label to be used when determining whether the option should be focused. */\n    getLabel(): string {\n        const element: HTMLElement = this._elementRef.nativeElement;\n        // tslint:disable-next-line:no-magic-numbers\n        const textNodeType = this._document ? this._document.TEXT_NODE : 3;\n        let output = '';\n\n        if (element.childNodes) {\n            const length = element.childNodes.length;\n\n            // Go through all the top-level text nodes and extract their text.\n            // We skip anything that's not a text node to prevent the text from\n            // being thrown off by something like an icon.\n            for (let i = 0; i < length; i++) {\n                if (element.childNodes[i].nodeType === textNodeType) {\n                    output += element.childNodes[i].textContent;\n                }\n            }\n        }\n\n        return output.trim();\n    }\n}\n","import {\n    trigger,\n    state,\n    style,\n    animate,\n    transition,\n    query,\n    group,\n    AnimationTriggerMetadata\n} from '@angular/animations';\n\n\n/**\n * Animations used by the mc-dropdown component.\n * Animation duration and timing values are based on:\n * https://material.io/guidelines/components/menus.html#menus-usage\n * @docs-private\n */\nexport const mcDropdownAnimations: {\n    readonly transformDropdown: AnimationTriggerMetadata;\n    readonly fadeInItems: AnimationTriggerMetadata;\n} = {\n    /**\n     * This animation controls the dropdown panel's entry and exit from the page.\n     *\n     * When the dropdown panel is added to the DOM, it scales in and fades in its border.\n     *\n     * When the dropdown panel is removed from the DOM, it simply fades out after a brief\n     * delay to display the ripple.\n     */\n    transformDropdown: trigger('transformDropdown', [\n        state('void', style({\n            opacity: 0,\n            transform: 'scale(0.8)'\n        })),\n        transition('void => enter', group([\n            query('.mc-dropdown__content', animate('50ms linear', style({opacity: 1}))),\n            animate('50ms cubic-bezier(0, 0, 0.2, 1)', style({transform: 'scale(1)'}))\n        ])),\n        transition('* => void', animate('50ms 25ms linear', style({opacity: 0})))\n    ]),\n\n\n    /**\n     * This animation fades in the background color and content of the dropdown panel\n     * after its containing element is scaled in.\n     */\n    fadeInItems: trigger('fadeInItems', [\n        // now. Remove next time we do breaking changes.\n        state('showing', style({opacity: 1})),\n        transition('void => *', [\n            style({opacity: 0}),\n            animate('200ms 60ms cubic-bezier(0.55, 0, 0.55, 0.2)')\n        ])\n    ])\n};\n\nexport const fadeInItems = mcDropdownAnimations.fadeInItems;\n\nexport const transformDropdown = mcDropdownAnimations.transformDropdown;\n","import { AnimationEvent } from '@angular/animations';\nimport {\n    AfterContentInit,\n    ChangeDetectionStrategy,\n    Component,\n    ContentChild,\n    ContentChildren,\n    ElementRef,\n    EventEmitter,\n    Inject,\n    InjectionToken,\n    Input,\n    NgZone,\n    OnDestroy,\n    Output,\n    TemplateRef,\n    QueryList,\n    ViewChild,\n    ViewEncapsulation,\n    OnInit\n} from '@angular/core';\nimport { FocusKeyManager, FocusOrigin } from '@ptsecurity/cdk/a11y';\nimport { Direction } from '@ptsecurity/cdk/bidi';\nimport { coerceBooleanProperty } from '@ptsecurity/cdk/coercion';\nimport { ESCAPE, DOWN_ARROW, UP_ARROW } from '@ptsecurity/cdk/keycodes';\nimport { Subject, Subscription } from 'rxjs';\nimport { take } from 'rxjs/operators';\n\nimport { mcDropdownAnimations } from './dropdown-animations';\nimport { McDropdownContent } from './dropdown-content';\nimport { throwMcDropdownInvalidPositionX, throwMcDropdownInvalidPositionY } from './dropdown-errors';\nimport { McDropdownItem } from './dropdown-item';\nimport { MC_DROPDOWN_PANEL, McDropdownPanel } from './dropdown-panel';\nimport { DropdownPositionX, DropdownPositionY } from './dropdown-positions';\n\n\n/** Default `mc-dropdown` options that can be overridden. */\n// tslint:disable-next-line:interface-name\nexport interface McDropdownDefaultOptions {\n    /** The x-axis position of the dropdown. */\n    xPosition: DropdownPositionX;\n\n    /** The y-axis position of the dropdown. */\n    yPosition: DropdownPositionY;\n\n    /** Whether the dropdown should overlap the dropdown trigger. */\n    overlapTrigger: boolean;\n\n    /** Class to be applied to the dropdown's backdrop. */\n    backdropClass: string;\n\n    /** Whether the dropdown has a backdrop. */\n    hasBackdrop?: boolean;\n}\n\n/** Injection token to be used to override the default options for `mc-dropdown`. */\nexport const MC_DROPDOWN_DEFAULT_OPTIONS =\n    new InjectionToken<McDropdownDefaultOptions>('mc-dropdown-default-options', {\n        providedIn: 'root',\n        factory: MC_DROPDOWN_DEFAULT_OPTIONS_FACTORY\n    });\n\n/** @docs-private */\nexport function MC_DROPDOWN_DEFAULT_OPTIONS_FACTORY(): McDropdownDefaultOptions {\n    return {\n        overlapTrigger: false,\n        xPosition: 'after',\n        yPosition: 'below',\n        backdropClass: 'cdk-overlay-transparent-backdrop'\n    };\n}\n\n@Component({\n    selector: 'mc-dropdown',\n    templateUrl: 'dropdown.html',\n    styleUrls: ['dropdown.css'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n    exportAs: 'mcDropdown',\n    animations: [\n        mcDropdownAnimations.transformDropdown,\n        mcDropdownAnimations.fadeInItems\n    ],\n    providers: [\n        { provide: MC_DROPDOWN_PANEL, useExisting: McDropdown }\n    ]\n})\nexport class McDropdown implements AfterContentInit, McDropdownPanel<McDropdownItem>, OnInit, OnDestroy {\n\n    /** Position of the dropdown in the X axis. */\n    @Input()\n    get xPosition(): DropdownPositionX { return this._xPosition; }\n    set xPosition(value: DropdownPositionX) {\n        if (value !== 'before' && value !== 'after') {\n            throwMcDropdownInvalidPositionX();\n        }\n\n        this._xPosition = value;\n        this.setPositionClasses();\n    }\n\n    /** Position of the dropdown in the Y axis. */\n    @Input()\n    get yPosition(): DropdownPositionY { return this._yPosition; }\n    set yPosition(value: DropdownPositionY) {\n        if (value !== 'above' && value !== 'below') {\n            throwMcDropdownInvalidPositionY();\n        }\n\n        this._yPosition = value;\n        this.setPositionClasses();\n    }\n\n    /** Whether the dropdown should overlap its trigger. */\n    @Input()\n    get overlapTrigger(): boolean { return this._overlapTrigger; }\n    set overlapTrigger(value: boolean) {\n        this._overlapTrigger = coerceBooleanProperty(value);\n    }\n\n    /** Whether the dropdown has a backdrop. */\n    @Input()\n    get hasBackdrop(): boolean | undefined { return this._hasBackdrop; }\n    set hasBackdrop(value: boolean | undefined) {\n        this._hasBackdrop = coerceBooleanProperty(value);\n    }\n\n    /**\n     * This method takes classes set on the host mc-dropdown element and applies them on the\n     * dropdown template that displays in the overlay container.  Otherwise, it's difficult\n     * to style the containing dropdown from outside the component.\n     * @param classes list of class names\n     */\n    @Input('class')\n    set panelClass(classes: string) {\n        if (classes && classes.length) {\n            this._classList = classes.split(' ').reduce((obj: any, className: string) => {\n                obj[className] = true;\n\n                return obj;\n            }, {});\n\n            this._elementRef.nativeElement.className = '';\n        }\n    }\n\n    /** Config object to be passed into the dropdown's ngClass */\n    _classList: {[key: string]: boolean} = {};\n\n    /** Current state of the panel animation. */\n    _panelAnimationState: 'void' | 'enter' = 'void';\n\n    /** Emits whenever an animation on the dropdown completes. */\n    _animationDone = new Subject<AnimationEvent>();\n\n    /** Whether the dropdown is animating. */\n    _isAnimating: boolean;\n\n    /** Layout direction of the dropdown. */\n    direction: Direction;\n\n    /** Class to be added to the backdrop element. */\n    @Input() backdropClass: string = this._defaultOptions.backdropClass;\n\n    /** @docs-private */\n    @ViewChild(TemplateRef) templateRef: TemplateRef<any>;\n\n    /**\n     * List of the items inside of a dropdown.\n     */\n    @ContentChildren(McDropdownItem) items: QueryList<McDropdownItem>;\n\n    /**\n     * Dropdown content that will be rendered lazily.\n     * @docs-private\n     */\n    @ContentChild(McDropdownContent) lazyContent: McDropdownContent;\n\n    /** Event emitted when the dropdown is closed. */\n    @Output() readonly closed: EventEmitter<void | 'click' | 'keydown' | 'tab'> =\n        new EventEmitter<void | 'click' | 'keydown' | 'tab'>();\n\n    private _keyManager: FocusKeyManager<McDropdownItem>;\n    private _xPosition: DropdownPositionX = this._defaultOptions.xPosition;\n    private _yPosition: DropdownPositionY = this._defaultOptions.yPosition;\n\n    /** Dropdown items inside the current dropdown. */\n    private _items: McDropdownItem[] = [];\n\n    /** Emits whenever the amount of dropdown items changes. */\n    private _itemChanges = new Subject<McDropdownItem[]>();\n\n    /** Subscription to tab events on the dropdown panel */\n    private _tabSubscription = Subscription.EMPTY;\n    private _overlapTrigger: boolean = this._defaultOptions.overlapTrigger;\n    private _hasBackdrop: boolean | undefined = this._defaultOptions.hasBackdrop;\n\n    constructor(\n        private _elementRef: ElementRef<HTMLElement>,\n        private _ngZone: NgZone,\n        @Inject(MC_DROPDOWN_DEFAULT_OPTIONS) private _defaultOptions: McDropdownDefaultOptions) { }\n\n    ngOnInit() {\n        this.setPositionClasses();\n    }\n\n    ngAfterContentInit() {\n        this._keyManager = new FocusKeyManager<McDropdownItem>(this.items).withWrap().withTypeAhead();\n        this._tabSubscription = this._keyManager.tabOut.subscribe(() => this.closed.emit('tab'));\n    }\n\n    ngOnDestroy() {\n        this._tabSubscription.unsubscribe();\n        this.closed.complete();\n    }\n\n    /** Handle a keyboard event from the dropdown, delegating to the appropriate action. */\n    _handleKeydown(event: KeyboardEvent) {\n\n        // tslint:disable-next-line:deprecation\n        switch (event.keyCode) {\n            case ESCAPE:\n                this.closed.emit('keydown');\n                break;\n            case UP_ARROW:\n            case DOWN_ARROW:\n                this._keyManager.setFocusOrigin('keyboard');\n                this._keyManager.onKeydown(event);\n                break;\n            default:\n                // todo зачем обрабатывать лишние события ?\n                this._keyManager.onKeydown(event);\n        }\n    }\n\n    /**\n     * Focus the first item in the dropdown.\n     * @param origin Action from which the focus originated. Used to set the correct styling.\n     */\n    focusFirstItem(origin: FocusOrigin = 'program'): void {\n        // When the content is rendered lazily, it takes a bit before the items are inside the DOM.\n        if (this.lazyContent) {\n            this._ngZone.onStable.asObservable()\n                .pipe(take(1))\n                .subscribe(() => this._keyManager.setFocusOrigin(origin).setFirstItemActive());\n        } else {\n            this._keyManager.setFocusOrigin(origin).setFirstItemActive();\n        }\n    }\n\n    /**\n     * Resets the active item in the dropdown. This is used when the dropdown is opened, allowing\n     * the user to start from the first option when pressing the down arrow.\n     */\n    resetActiveItem() {\n        this._keyManager.setActiveItem(-1);\n    }\n\n    /**\n     * Registers a dropdown item with the dropdown.\n     * @docs-private\n     */\n    addItem(item: McDropdownItem) {\n        // We register the items through this method, rather than picking them up through\n        // `ContentChildren`, because we need the items to be picked up by their closest\n        // `mc-dropdown` ancestor. If we used `@ContentChildren(McDropdownItem, {descendants: true})`,\n        // all descendant items will bleed into the top-level dropdown in the case where the consumer\n        // has `mc-dropdown` instances nested inside each other.\n        if (this._items.indexOf(item) === -1) {\n            this._items.push(item);\n            this._itemChanges.next(this._items);\n        }\n    }\n\n    /**\n     * Removes an item from the dropdown.\n     * @docs-private\n     */\n    removeItem(item: McDropdownItem) {\n        const index = this._items.indexOf(item);\n\n        if (this._items.indexOf(item) > -1) {\n            this._items.splice(index, 1);\n            this._itemChanges.next(this._items);\n        }\n    }\n\n    /**\n     * Adds classes to the dropdown panel based on its position. Can be used by\n     * consumers to add specific styling based on the position.\n     * @param posX Position of the dropdown along the x axis.\n     * @param posY Position of the dropdown along the y axis.\n     * @docs-private\n     */\n    setPositionClasses(posX: DropdownPositionX = this.xPosition, posY: DropdownPositionY = this.yPosition) {\n        const classes = this._classList;\n        classes['mc-dropdown-before'] = posX === 'before';\n        classes['mc-dropdown-after'] = posX === 'after';\n        classes['mc-dropdown-above'] = posY === 'above';\n        classes['mc-dropdown-below'] = posY === 'below';\n    }\n\n    /** Starts the enter animation. */\n    _startAnimation() {\n        this._panelAnimationState = 'enter';\n    }\n\n    /** Resets the panel animation to its initial state. */\n    _resetAnimation() {\n        this._panelAnimationState = 'void';\n    }\n\n    /** Callback that is invoked when the panel animation completes. */\n    _onAnimationDone(event: AnimationEvent) {\n        this._animationDone.next(event);\n        this._isAnimating = false;\n\n        // Scroll the content element to the top once the animation is done. This is necessary, because\n        // we move focus to the first item while it's still being animated, which can throw the browser\n        // off when it determines the scroll position. Alternatively we can move focus when the\n        // animation is done, however moving focus asynchronously will interrupt screen readers\n        // which are in the process of reading out the dropdown already. We take the `element` from\n        // the `event` since we can't use a `ViewChild` to access the pane.\n        if (event.toState === 'enter' && this._keyManager.activeItemIndex === 0) {\n            event.element.scrollTop = 0;\n        }\n    }\n}\n","import {\n    AfterContentInit,\n    Directive,\n    ElementRef,\n    EventEmitter,\n    Inject,\n    InjectionToken,\n    Input,\n    OnDestroy, OnInit,\n    Optional,\n    Output,\n    ViewContainerRef\n} from '@angular/core';\nimport { FocusMonitor, FocusOrigin } from '@ptsecurity/cdk/a11y';\nimport { Direction, Directionality } from '@ptsecurity/cdk/bidi';\nimport {\n    FlexibleConnectedPositionStrategy,\n    HorizontalConnectionPos,\n    Overlay,\n    OverlayConfig,\n    OverlayRef,\n    VerticalConnectionPos,\n    IScrollStrategy\n} from '@ptsecurity/cdk/overlay';\nimport { TemplatePortal } from '@ptsecurity/cdk/portal';\nimport { merge, Subscription } from 'rxjs';\nimport { filter, take, takeUntil } from 'rxjs/operators';\n\nimport { throwMcDropdownMissingError } from './dropdown-errors';\nimport { McDropdownPanel } from './dropdown-panel';\nimport { McDropdown } from './dropdown.component';\n\n\n/** Injection token that determines the scroll handling while the dropdown is open. */\nexport const MC_DROPDOWN_SCROLL_STRATEGY =\n    new InjectionToken<() => IScrollStrategy>('mc-dropdown-scroll-strategy');\n\n/** @docs-private */\nexport function MC_DROPDOWN_SCROLL_STRATEGY_FACTORY(overlay: Overlay): () => IScrollStrategy {\n    return () => overlay.scrollStrategies.reposition();\n}\n\n/** @docs-private */\nexport const MC_DROPDOWN_SCROLL_STRATEGY_FACTORY_PROVIDER = {\n    provide: MC_DROPDOWN_SCROLL_STRATEGY,\n    deps: [Overlay],\n    useFactory: MC_DROPDOWN_SCROLL_STRATEGY_FACTORY\n};\n\n/**\n * This directive is intended to be used in conjunction with an mc-dropdown tag.  It is\n * responsible for toggling the display of the provided dropdown instance.\n */\n@Directive({\n    selector: `[mcDropdownTriggerFor]`,\n    host: {\n        '(touchstart)': '_openedBy = \"touch\"',\n        '(click)': 'toggle()'\n    },\n    exportAs: 'mcDropdownTrigger'\n})\nexport class McDropdownTrigger implements OnInit, AfterContentInit, OnDestroy {\n\n    /** Whether the dropdown is open. */\n    get opened(): boolean {\n        return this._opened;\n    }\n\n    /** The text direction of the containing app. */\n    get dir(): Direction {\n        return this._dir && this._dir.value === 'rtl' ? 'rtl' : 'ltr';\n    }\n\n    // Tracking input type is necessary so it's possible to only auto-focus\n    // the first item of the list when the dropdown is opened via the keyboard\n    _openedBy: 'mouse' | 'touch' | null = null;\n\n    /** References the dropdown instance that the trigger is associated with. */\n    @Input('mcDropdownTriggerFor') dropdown: McDropdownPanel;\n\n    /** Data to be passed along to any lazily-rendered content. */\n    @Input('mcDropdownTriggerData') data: any;\n\n    /** Event emitted when the associated dropdown is opened. */\n    @Output() readonly dropdownOpened: EventEmitter<void> = new EventEmitter<void>();\n\n    /** Event emitted when the associated dropdown is closed. */\n    @Output() readonly dropdownClosed: EventEmitter<void> = new EventEmitter<void>();\n\n    private _portal: TemplatePortal;\n    private _overlayRef: OverlayRef | null = null;\n    private _opened: boolean = false;\n    private _closeSubscription = Subscription.EMPTY;\n    private _hoverSubscription = Subscription.EMPTY;\n\n    constructor(private _overlay: Overlay,\n                private _element: ElementRef<HTMLElement>,\n                private _viewContainerRef: ViewContainerRef,\n                @Inject(MC_DROPDOWN_SCROLL_STRATEGY) private _scrollStrategy: any,\n                @Optional() private _dir: Directionality,\n                private _focusMonitor?: FocusMonitor) {}\n\n    ngOnInit(): void {\n        this.dropdown.closed = this.dropdown.closed || new EventEmitter<void | 'click' | 'keydown' | 'tab'>();\n    }\n\n    ngAfterContentInit() {\n        this._check();\n\n        this.dropdown.closed.asObservable().subscribe(() => {\n            this._destroy();\n        });\n    }\n\n    ngOnDestroy() {\n        if (this._overlayRef) {\n            this._overlayRef.dispose();\n            this._overlayRef = null;\n        }\n\n        this._cleanUpSubscriptions();\n    }\n\n    /** Toggles the dropdown between the open and closed states. */\n    toggle(): void {\n        // tslint:disable-next-line:no-void-expression\n        return this._opened ? this.close() : this.open();\n    }\n\n    /** Opens the dropdown. */\n    open(): void {\n        if (this._opened) {\n            return;\n        }\n\n        this._check();\n\n        const overlayRef = this._createOverlay();\n        this._setPosition(overlayRef.getConfig().positionStrategy as FlexibleConnectedPositionStrategy);\n        overlayRef.attach(this._portal);\n\n        if (this.dropdown.lazyContent) {\n            this.dropdown.lazyContent.attach(this.data);\n        }\n\n        this._closeSubscription = this._closingActions().subscribe(() => this.close());\n        this._init();\n\n        if (this.dropdown instanceof McDropdown) {\n            this.dropdown._startAnimation();\n        }\n    }\n\n    /** Closes the dropdown. */\n    close(): void {\n        this.dropdown.closed.emit();\n    }\n\n    /**\n     * Focuses the dropdown trigger.\n     * @param origin Source of the dropdown trigger's focus.\n     */\n    focus(origin: FocusOrigin = 'program') {\n        if (this._focusMonitor) {\n            this._focusMonitor.focusVia(this._element.nativeElement, origin);\n        } else {\n            this._element.nativeElement.focus();\n        }\n    }\n\n    /** Closes the dropdown and does the necessary cleanup. */\n    private _destroy() {\n        if (!this._overlayRef || !this.opened) {\n            return;\n        }\n\n        const dropdown = this.dropdown;\n\n        this._closeSubscription.unsubscribe();\n        this._overlayRef.detach();\n\n        if (dropdown instanceof McDropdown) {\n            dropdown._resetAnimation();\n\n            if (dropdown.lazyContent) {\n                // Wait for the exit animation to finish before detaching the content.\n                dropdown._animationDone\n                    .pipe(\n                        filter((event) => event.toState === 'void'),\n                        take(1),\n                        // Interrupt if the content got re-attached.\n                        takeUntil(dropdown.lazyContent._attached)\n                    )\n                    .subscribe(() => dropdown.lazyContent.detach(), undefined, () => {\n                        // No matter whether the content got re-attached, reset the dropdown.\n                        this._reset();\n                    });\n            } else {\n                this._reset();\n            }\n        } else {\n            this._reset();\n\n            if (dropdown.lazyContent) {\n                dropdown.lazyContent.detach();\n            }\n        }\n    }\n\n    /**\n     * This method sets the dropdown state to open and focuses the first item if\n     * the dropdown was opened via the keyboard.\n     */\n    private _init(): void {\n        this.dropdown.direction = this.dir;\n        this._setIsOpened(true);\n        this.dropdown.focusFirstItem(this._openedBy || 'program');\n    }\n\n    /**\n     * This method resets the dropdown when it's closed, most importantly restoring\n     * focus to the dropdown trigger if the dropdown was opened via the keyboard.\n     */\n    private _reset(): void {\n        this._setIsOpened(false);\n\n        // We should reset focus if the user is navigating using a keyboard or\n        // if we have a top-level trigger which might cause focus to be lost\n        // when clicking on the backdrop.\n        if (!this._openedBy) {\n            // Note that the focus style will show up both for `program` and\n            // `keyboard` so we don't have to specify which one it is.\n            this.focus();\n        } else {\n            this.focus(this._openedBy);\n        }\n\n        this._openedBy = null;\n    }\n\n    // set state rather than toggle to support triggers sharing a dropdown\n    private _setIsOpened(isOpen: boolean): void {\n        this._opened = isOpen;\n        // tslint:disable-next-line:no-void-expression\n        this._opened ? this.dropdownOpened.emit() : this.dropdownClosed.emit();\n    }\n\n    /**\n     * This method checks that a valid instance of Dropdown has been passed into\n     * mcDropdownTriggerFor. If not, an exception is thrown.\n     */\n    private _check() {\n        if (!this.dropdown) {\n            throwMcDropdownMissingError();\n        }\n    }\n\n    /**\n     * This method creates the overlay from the provided dropdown's template and saves its\n     * OverlayRef so that it can be attached to the DOM when open is called.\n     */\n    private _createOverlay(): OverlayRef {\n        if (!this._overlayRef) {\n            this._portal = new TemplatePortal(this.dropdown.templateRef, this._viewContainerRef);\n            const config = this._getOverlayConfig();\n            this._subscribeToPositions(config.positionStrategy as FlexibleConnectedPositionStrategy);\n            this._overlayRef = this._overlay.create(config);\n\n            // Consume the `keydownEvents` in order to prevent them from going to another overlay.\n            // Ideally we'd also have our keyboard event logic in here, however doing so will\n            // break anybody that may have implemented the `McDropdownPanel` themselves.\n            this._overlayRef.keydownEvents().subscribe();\n        }\n\n        return this._overlayRef;\n    }\n\n    /**\n     * This method builds the configuration object needed to create the overlay, the OverlayState.\n     * @returns OverlayConfig\n     */\n    private _getOverlayConfig(): OverlayConfig {\n        return new OverlayConfig({\n            positionStrategy: this._overlay.position()\n                .flexibleConnectedTo(this._element)\n                .withLockedPosition()\n                .withTransformOriginOn('.mc-dropdown__panel'),\n            hasBackdrop: this.dropdown.hasBackdrop === null || this.dropdown.hasBackdrop === undefined\n                ? true\n                : this.dropdown.hasBackdrop,\n            backdropClass: this.dropdown.backdropClass || 'cdk-overlay-transparent-backdrop',\n            scrollStrategy: this._scrollStrategy(),\n            direction: this._dir\n        });\n    }\n\n    /**\n     * Listens to changes in the position of the overlay and sets the correct classes\n     * on the dropdown based on the new position. This ensures the animation origin is always\n     * correct, even if a fallback position is used for the overlay.\n     */\n    private _subscribeToPositions(position: FlexibleConnectedPositionStrategy): void {\n        if (this.dropdown.setPositionClasses) {\n            // todo possibly we should not recompute positions there\n            /*position.positionChanges.subscribe((change) => {\n                const posX: DropdownPositionX = change.connectionPair.overlayX === 'start' ? 'after' : 'before';\n                const posY: DropdownPositionY = change.connectionPair.overlayY === 'top' ? 'below' : 'above';\n\n                this.dropdown.setPositionClasses!(posX, posY);\n            });*/\n            position.positionChanges.subscribe(() => {\n                this.dropdown.setPositionClasses!(this.dropdown.xPosition, this.dropdown.yPosition);\n            });\n        }\n    }\n\n    /**\n     * Sets the appropriate positions on a position strategy\n     * so the overlay connects with the trigger correctly.\n     * @param positionStrategy Strategy whose position to update.\n     */\n    private _setPosition(positionStrategy: FlexibleConnectedPositionStrategy) {\n        const [originX, originFallbackX]: HorizontalConnectionPos[] =\n            this.dropdown.xPosition === 'before' ? ['end', 'start'] : ['start', 'end'];\n\n        const [overlayY, overlayFallbackY]: VerticalConnectionPos[] =\n            this.dropdown.yPosition === 'above' ? ['bottom', 'top'] : ['top', 'bottom'];\n\n        let [originY, originFallbackY] = [overlayY, overlayFallbackY];\n        const [overlayX, overlayFallbackX] = [originX, originFallbackX];\n        const offsetY = 0;\n\n        if (!this.dropdown.overlapTrigger) {\n            originY = overlayY === 'top' ? 'bottom' : 'top';\n            originFallbackY = overlayFallbackY === 'top' ? 'bottom' : 'top';\n        }\n\n        positionStrategy.withPositions([\n            {originX, originY, overlayX, overlayY, offsetY},\n            {originX: originFallbackX, originY, overlayX: overlayFallbackX, overlayY, offsetY},\n            {\n                originX,\n                originY: originFallbackY,\n                overlayX,\n                overlayY: overlayFallbackY,\n                offsetY: -offsetY\n            },\n            {\n                originX: originFallbackX,\n                originY: originFallbackY,\n                overlayX: overlayFallbackX,\n                overlayY: overlayFallbackY,\n                offsetY: -offsetY\n            }\n        ]);\n    }\n\n    /** Cleans up the active subscriptions. */\n    private _cleanUpSubscriptions(): void {\n        this._closeSubscription.unsubscribe();\n        this._hoverSubscription.unsubscribe();\n    }\n\n    /** Returns a stream that emits whenever an action that should close the dropdown occurs. */\n    private _closingActions() {\n        const backdrop = this._overlayRef!.backdropClick();\n        const detachments = this._overlayRef!.detachments();\n\n        return merge(backdrop, detachments);\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { OverlayModule } from '@ptsecurity/cdk/overlay';\n\nimport { McDropdownContent } from './dropdown-content';\nimport { McDropdownItem } from './dropdown-item';\nimport { MC_DROPDOWN_SCROLL_STRATEGY_FACTORY_PROVIDER, McDropdownTrigger } from './dropdown-trigger';\nimport { McDropdown } from './dropdown.component';\n\n\n@NgModule({\n    imports: [\n        CommonModule,\n        OverlayModule\n    ],\n    exports: [McDropdown, McDropdownItem, McDropdownTrigger, McDropdownContent],\n    declarations: [McDropdown, McDropdownItem, McDropdownTrigger, McDropdownContent],\n    providers: [MC_DROPDOWN_SCROLL_STRATEGY_FACTORY_PROVIDER]\n})\nexport class McDropdownModule {}\n","import { Component } from '@angular/core';\n\n\n@Component({\n    selector: 'mc-cleaner',\n    template: '<i class=\"mc-icon_light\" mc-icon=\"mc-close-M_16\" color=\"second\"></i>'\n})\nexport class McCleaner {}\n","import { NgControl } from '@angular/forms';\nimport { Observable } from 'rxjs';\n\n\n/** An interface which allows a control to work inside of a `MсFormField`. */\nexport abstract class McFormFieldControl<T> {\n    /** The value of the control. */\n    value: T | null;\n\n    /**\n     * Stream that emits whenever the state of the control changes such that the parent `MсFormField`\n     * needs to run change detection.\n     */\n    readonly stateChanges: Observable<void>;\n\n    /** The element ID for this control. */\n    readonly id: string;\n\n    /** The placeholder for this control. */\n    readonly placeholder: string;\n\n    /** Gets the NgControl for this control. */\n    readonly ngControl: NgControl | null;\n\n    /** Whether the control is focused. */\n    readonly focused: boolean;\n\n    /** Whether the control is empty. */\n    readonly empty: boolean;\n\n    /** Whether the control is required. */\n    readonly required: boolean;\n\n    /** Whether the control is disabled. */\n    readonly disabled: boolean;\n\n    /** Whether the control is in an error state. */\n    readonly errorState: boolean;\n\n    /**\n     * An optional name for the control type that can be used to distinguish `mc-form-field` elements\n     * based on their control type. The form field will add a class,\n     * `mc-form-field-type-{{controlType}}` to its root element.\n     */\n    readonly controlType?: string;\n\n    /** Handles a click on the control's container. */\n    abstract onContainerClick(event: MouseEvent): void;\n}\n","import { Observable } from 'rxjs';\n\n\n/** An interface which allows a control to work inside of a `MсFormField`. */\nexport abstract class McFormFieldNumberControl<T> {\n    /** The value of the control. */\n    value: T | null;\n\n    /**\n     * Stream that emits whenever the state of the control changes such that the parent `MсFormField`\n     * needs to run change detection.\n     */\n    readonly stateChanges: Observable<void>;\n\n    /** the number step */\n    step: number;\n\n    /** the number big step */\n    bigStep: number;\n\n    /** Whether the control is focused. */\n    readonly focused: boolean;\n\n    /** Handles step up and down */\n    abstract stepUp(step: number): void;\n\n    abstract stepDown(step: number): void;\n}\n","import { Directive, Input } from '@angular/core';\n\n\nlet nextUniqueId = 0;\n\n@Directive({\n    selector: 'mc-hint',\n    host: {\n        class: 'mc-hint',\n        '[attr.id]': 'id'\n    }\n})\nexport class McHint {\n    @Input() id: string = `mc-hint-${nextUniqueId++}`;\n}\n","import { Directive } from '@angular/core';\n\n\n@Directive({\n    selector: '[mcPrefix]'\n})\nexport class McPrefix {\n}\n","import { Component, EventEmitter, Output } from '@angular/core';\n\n\n@Component({\n    selector: 'mc-stepper',\n    template: `\n        <i class=\"mc mc-icon mc-icon_light mc-second mc-stepper-step-up mc-angle-L_16\"\n           (mousedown)=\"onStepUp($event)\">\n        </i>\n        <i class=\"mc mc-icon mc-icon_light mc-second mc-stepper-step-down mc-angle-L_16\"\n           (mousedown)=\"onStepDown($event)\">\n        </i>\n    `\n})\nexport class McStepper {\n    @Output()\n    readonly stepUp: EventEmitter<void> = new EventEmitter<void>();\n    @Output()\n    readonly stepDown: EventEmitter<void> = new EventEmitter<void>();\n\n    onStepUp($event: MouseEvent) {\n        this.stepUp.emit();\n        $event.preventDefault();\n    }\n\n    onStepDown($event: MouseEvent) {\n        this.stepDown.emit();\n        $event.preventDefault();\n    }\n}\n","import { Directive } from '@angular/core';\n\n\n@Directive({\n    selector: '[mcSuffix]'\n})\nexport class McSuffix {\n}\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","\nexport function isBoolean(val: any): val is boolean { return typeof val === 'boolean'; }\n\nexport function toBoolean(value: any): boolean {\n    return value != null && `${value}` !== 'false';\n}\n","import { NgModule, InjectionToken, Optional, Inject, isDevMode } from '@angular/core';\nimport { BidiModule } from '@ptsecurity/cdk/bidi';\n\n\n// Injection token that configures whether the Mosaic sanity checks are enabled.\nexport const MC_SANITY_CHECKS = new InjectionToken<boolean>('mc-sanity-checks', {\n    providedIn: 'root',\n    factory: MC_SANITY_CHECKS_FACTORY\n});\n\nexport function MC_SANITY_CHECKS_FACTORY(): boolean {\n    return true;\n}\n\n/**\n * Module that captures anything that should be loaded and/or run for *all* Mosaic\n * components. This includes Bidi, etc.\n *\n * This module should be imported to each top-level component module (e.g., McTabsModule).\n */\n@NgModule({\n    imports: [ BidiModule ],\n    exports: [ BidiModule ]\n})\nexport class McCommonModule {\n    // Whether we've done the global sanity checks (e.g. a theme is loaded, there is a doctype).\n    private _hasDoneGlobalChecks = false;\n\n    // Reference to the global `document` object.\n    private _document = typeof document === 'object' && document ? document : null;\n\n    // Reference to the global 'window' object.\n    private _window = typeof window === 'object' && window ? window : null;\n\n    constructor(@Optional() @Inject(MC_SANITY_CHECKS) private _sanityChecksEnabled: boolean) {\n        if (this._areChecksEnabled() && !this._hasDoneGlobalChecks) {\n            this._checkDoctypeIsDefined();\n            this._checkThemeIsPresent();\n            this._hasDoneGlobalChecks = true;\n        }\n    }\n\n    // Whether any sanity checks are enabled\n    private _areChecksEnabled(): boolean {\n        return this._sanityChecksEnabled && isDevMode() && !this._isTestEnv();\n    }\n\n    // Whether the code is running in tests.\n    private _isTestEnv() {\n        // tslint:disable-next-line\n        return this._window && (this._window['__karma__'] || this._window['jasmine']);\n    }\n\n    private _checkDoctypeIsDefined(): void {\n        if (this._document && !this._document.doctype) {\n            console.warn(\n                'Current document does not have a doctype. This may cause ' +\n                'some Mosaic components not to behave as expected.'\n            );\n        }\n    }\n\n    private _checkThemeIsPresent(): void {\n        if (this._document && typeof getComputedStyle === 'function') {\n            const testElement = this._document.createElement('div');\n\n            testElement.classList.add('mc-theme-loaded-marker');\n            this._document.body.appendChild(testElement);\n\n            const computedStyle = getComputedStyle(testElement);\n\n            // In some situations, the computed style of the test element can be null. For example in\n            // Firefox, the computed style is null if an application is running inside of a hidden iframe.\n            // See: https://bugzilla.mozilla.org/show_bug.cgi?id=548397\n            if (computedStyle && computedStyle.display !== 'none') {\n                console.warn(\n                    'Could not find Mosaic core theme. Most Mosaic ' +\n                    'components may not work as expected. For more info refer ' +\n                    'to the theming guide: link there'\n                );\n            }\n\n            this._document.body.removeChild(testElement);\n        }\n    }\n}\n","import { coerceBooleanProperty } from '@ptsecurity/cdk/coercion';\n\nimport { Constructor } from './constructor';\n\n\nexport interface CanDisable {\n    disabled: boolean;\n}\n\n/** @docs-private */\nexport type CanDisableCtor = Constructor<CanDisable>;\n\n// Mixin to augment a directive with a `disabled` property.\nexport function mixinDisabled<T extends Constructor<{}>>(base: T): CanDisableCtor & T {\n    return class extends base {\n        private _disabled: boolean = false;\n\n        get disabled() {\n            return this._disabled;\n        }\n\n        set disabled(value: any) {\n            this._disabled = coerceBooleanProperty(value);\n        }\n\n        constructor(...args: any[]) {\n            // tslint:disable-next-line\n            super(...args);\n        }\n    };\n}\n","import { ElementRef } from '@angular/core';\n\nimport { Constructor } from './constructor';\n\n\nexport interface CanColor {\n    color: ThemePalette;\n}\n\n/** @docs-private */\nexport type CanColorCtor = Constructor<CanColor>;\n\nexport interface HasElementRef {\n    _elementRef: ElementRef;\n}\n\nexport enum ThemePalette {\n    Primary = 'primary',\n    Second = 'second',\n    Error = 'error',\n    Default = 'second',\n    Empty = ''\n}\n\n/** Mixin to augment a directive with a `color` property. */\nexport function mixinColor<T extends Constructor<HasElementRef>>(\n    base: T,\n    defaultColor: ThemePalette = ThemePalette.Default\n): CanColorCtor & T {\n    return class extends base {\n\n        private _color: ThemePalette;\n\n        get color(): ThemePalette {\n            return this._color;\n        }\n\n        set color(value: ThemePalette) {\n            const colorPalette = value || defaultColor;\n\n            if (colorPalette !== this._color) {\n                if (this._color) {\n                    this._elementRef.nativeElement.classList.remove(`mc-${this._color}`);\n                }\n\n                if (colorPalette) {\n                    this._elementRef.nativeElement.classList.add(`mc-${colorPalette}`);\n                }\n\n                this._color = colorPalette;\n            }\n        }\n\n        constructor(...args: any[]) {\n            super(...args);\n\n            this.color = defaultColor;\n        }\n    };\n}\n\n","import { Constructor } from './constructor';\nimport { CanDisable } from './disabled';\n\n\nexport interface HasTabIndex {\n    tabIndex: number;\n}\n\nexport type HasTabIndexCtor = Constructor<HasTabIndex>;\n\n// Mixin to augment a directive with a `tabIndex` property.\nexport function mixinTabIndex<T extends Constructor<CanDisable>>(base: T, defaultTabIndex = 0)\n    : HasTabIndexCtor & T {\n    return class extends base {\n        private _tabIndex: number = defaultTabIndex;\n\n        get tabIndex(): number {\n            return this.disabled ? -1 : this._tabIndex;\n        }\n\n        set tabIndex(value: number) {\n            this._tabIndex = value != null ? value : defaultTabIndex;\n        }\n\n        constructor(...args: any[]) {\n            super(...args);\n        }\n    };\n}\n","import { FormControl, FormGroupDirective, NgControl, NgForm } from '@angular/forms';\nimport { Subject } from 'rxjs';\n\nimport { ErrorStateMatcher } from '../error/error-options';\n\nimport { Constructor } from './constructor';\n\n\n/** @docs-private */\nexport interface CanUpdateErrorState {\n\n    readonly stateChanges: Subject<void>;\n\n    errorState: boolean;\n    errorStateMatcher: ErrorStateMatcher;\n\n    updateErrorState();\n}\n\n/** @docs-private */\nexport type CanUpdateErrorStateCtor = Constructor<CanUpdateErrorState>;\n\n/** @docs-private */\nexport interface HasErrorState {\n    _parentFormGroup: FormGroupDirective;\n    _parentForm: NgForm;\n    _defaultErrorStateMatcher: ErrorStateMatcher;\n    ngControl: NgControl;\n}\n\n/**\n * Mixin to augment a directive with updateErrorState method.\n * For component with `errorState` and need to update `errorState`.\n */\nexport function mixinErrorState<T extends Constructor<HasErrorState>>(base: T): CanUpdateErrorStateCtor & T {\n    return class extends base {\n        /** Whether the component is in an error state. */\n        errorState: boolean = false;\n\n        /**\n         * Stream that emits whenever the state of the input changes such that the wrapping\n         * `MatFormField` needs to run change detection.\n         */\n        readonly stateChanges = new Subject<void>();\n\n        errorStateMatcher: ErrorStateMatcher;\n\n        constructor(...args: any[]) {\n            super(...args);\n        }\n\n        updateErrorState() {\n            const oldState = this.errorState;\n            const parent = this._parentFormGroup || this._parentForm;\n            const matcher = this.errorStateMatcher || this._defaultErrorStateMatcher;\n            const control = this.ngControl ? this.ngControl.control as FormControl : null;\n            const newState = matcher.isErrorState(control, parent);\n\n            if (newState !== oldState) {\n                this.errorState = newState;\n                this.stateChanges.next();\n            }\n        }\n    };\n}\n","import {\n    AfterViewChecked,\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    ElementRef,\n    EventEmitter,\n    Inject,\n    InjectionToken,\n    Input,\n    OnDestroy,\n    Optional,\n    Output,\n    QueryList,\n    ViewEncapsulation\n} from '@angular/core';\nimport { coerceBooleanProperty } from '@ptsecurity/cdk/coercion';\nimport { ENTER, SPACE } from '@ptsecurity/cdk/keycodes';\nimport { Subject } from 'rxjs';\n\nimport { McOptgroup } from './optgroup';\n\n\n/**\n * Option IDs need to be unique across components, so this counter exists outside of\n * the component definition.\n */\nlet _uniqueIdCounter = 0;\n\n/** Event object emitted by McOption when selected or deselected. */\nexport class McOptionSelectionChange {\n    constructor(\n        /** Reference to the option that emitted the event. */\n        public source: McOption,\n        /** Whether the change in the option's value was a result of a user action. */\n        public isUserInput = false) {\n    }\n}\n\n/**\n * Describes a parent component that manages a list of options.\n * Contains properties that the options can inherit.\n * @docs-private\n */\nexport interface IMcOptionParentComponent {\n    disableRipple?: boolean;\n    multiple?: boolean;\n}\n\n/**\n * Injection token used to provide the parent component to options.\n */\nexport const MC_OPTION_PARENT_COMPONENT =\n    new InjectionToken<IMcOptionParentComponent>('MC_OPTION_PARENT_COMPONENT');\n\n/**\n * Single option inside of a `<mat-select>` element.\n */\n@Component({\n    selector: 'mc-option',\n    exportAs: 'mcOption',\n    host: {\n        '[attr.tabindex]': '_getTabIndex()',\n        '[class.mc-selected]': 'selected',\n        '[class.mc-option-multiple]': 'multiple',\n        '[class.mc-active]': 'active',\n        '[id]': 'id',\n        '[class.mc-disabled]': 'disabled',\n        '(click)': '_selectViaInteraction()',\n        '(keydown)': '_handleKeydown($event)',\n        class: 'mc-option'\n    },\n    styleUrls: ['option.css'],\n    templateUrl: 'option.html',\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class McOption implements AfterViewChecked, OnDestroy {\n    /** Whether the wrapping component is in multiple selection mode. */\n    get multiple() {\n        return this._parent && this._parent.multiple;\n    }\n\n    /** The unique ID of the option. */\n    get id(): string {\n        return this._id;\n    }\n\n    /** Whether or not the option is currently selected. */\n    get selected(): boolean {\n        return this._selected;\n    }\n\n    /** The form value of the option. */\n    @Input() value: any;\n\n    /** Whether the option is disabled. */\n    @Input()\n    get disabled() {\n        return (this.group && this.group.disabled) || this._disabled;\n    }\n\n    set disabled(value: any) {\n        this._disabled = coerceBooleanProperty(value);\n    }\n\n    /** Whether ripples for the option are disabled. */\n    get disableRipple() {\n        return this._parent && this._parent.disableRipple;\n    }\n\n    /** Event emitted when the option is selected or deselected. */\n        // tslint:disable-next-line:no-output-on-prefix\n    @Output() readonly onSelectionChange = new EventEmitter<McOptionSelectionChange>();\n\n    /** Emits when the state of the option changes and any parents have to be notified. */\n    readonly _stateChanges = new Subject<void>();\n\n    private _selected = false;\n    private _active = false;\n    private _disabled = false;\n    private readonly _id = `mc-option-${_uniqueIdCounter++}`;\n    private _mostRecentViewValue = '';\n\n    constructor(\n        private readonly _element: ElementRef,\n        private readonly _changeDetectorRef: ChangeDetectorRef,\n        @Optional() @Inject(MC_OPTION_PARENT_COMPONENT) private readonly _parent: IMcOptionParentComponent,\n        @Optional() readonly group: McOptgroup) {\n    }\n\n    /**\n     * Whether or not the option is currently active and ready to be selected.\n     * An active option displays styles as if it is focused, but the\n     * focus is actually retained somewhere else. This comes in handy\n     * for components like autocomplete where focus must remain on the input.\n     */\n    get active(): boolean {\n        return this._active;\n    }\n\n    /**\n     * The displayed value of the option. It is necessary to show the selected option in the\n     * select's trigger.\n     */\n    get viewValue(): string {\n        // TODO(kara): Add input property alternative for node envs.\n        return (this._getHostElement().textContent || '').trim();\n    }\n\n    /** Selects the option. */\n    select(): void {\n        if (!this._selected) {\n            this._selected = true;\n            this._changeDetectorRef.markForCheck();\n            this._emitSelectionChangeEvent();\n        }\n    }\n\n    /** Deselects the option. */\n    deselect(): void {\n        if (this._selected) {\n            this._selected = false;\n            this._changeDetectorRef.markForCheck();\n            this._emitSelectionChangeEvent();\n        }\n    }\n\n    /** Sets focus onto this option. */\n    focus(): void {\n        const element = this._getHostElement();\n\n        if (typeof element.focus === 'function') {\n            element.focus();\n        }\n    }\n\n    /**\n     * This method sets display styles on the option to make it appear\n     * active. This is used by the ActiveDescendantKeyManager so key\n     * events will display the proper options as active on arrow key events.\n     */\n    setActiveStyles(): void {\n        if (!this._active) {\n            this._active = true;\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n\n    /**\n     * This method removes display styles on the option that made it appear\n     * active. This is used by the ActiveDescendantKeyManager so key\n     * events will display the proper options as active on arrow key events.\n     */\n    setInactiveStyles(): void {\n        if (this._active) {\n            this._active = false;\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n\n    /** Gets the label to be used when determining whether the option should be focused. */\n    getLabel(): string {\n        return this.viewValue;\n    }\n\n    /** Ensures the option is selected when activated from the keyboard. */\n    _handleKeydown(event: KeyboardEvent): void {\n        // tslint:disable-next-line\n        if (event.keyCode === ENTER || event.keyCode === SPACE) {\n            this._selectViaInteraction();\n\n            // Prevent the page from scrolling down and form submits.\n            event.preventDefault();\n        }\n    }\n\n    /**\n     * `Selects the option while indicating the selection came from the user. Used to\n     * determine if the select's view -> model callback should be invoked.`\n     */\n    _selectViaInteraction(): void {\n        if (!this.disabled) {\n            this._selected = this.multiple ? !this._selected : true;\n            this._changeDetectorRef.markForCheck();\n            this._emitSelectionChangeEvent(true);\n        }\n    }\n\n    /** Returns the correct tabindex for the option depending on disabled state. */\n    _getTabIndex(): string {\n        return this.disabled ? '-1' : '0';\n    }\n\n    /** Gets the host DOM element. */\n    _getHostElement(): HTMLElement {\n        return this._element.nativeElement;\n    }\n\n    ngAfterViewChecked() {\n        // Since parent components could be using the option's label to display the selected values\n        // (e.g. `mat-select`) and they don't have a way of knowing if the option's label has changed\n        // we have to check for changes in the DOM ourselves and dispatch an event. These checks are\n        // relatively cheap, however we still limit them only to selected options in order to avoid\n        // hitting the DOM too often.\n        if (this._selected) {\n            const viewValue = this.viewValue;\n\n            if (viewValue !== this._mostRecentViewValue) {\n                this._mostRecentViewValue = viewValue;\n                this._stateChanges.next();\n            }\n        }\n    }\n\n    ngOnDestroy() {\n        this._stateChanges.complete();\n    }\n\n    /** Emits the selection change event. */\n    private _emitSelectionChangeEvent(isUserInput = false): void {\n        this.onSelectionChange.emit(new McOptionSelectionChange(this, isUserInput));\n    }\n}\n\n/**\n * Counts the amount of option group labels that precede the specified option.\n * @param optionIndex Index of the option at which to start counting.\n * @param options Flat list of all of the options.\n * @param optionGroups Flat list of all of the option groups.\n * @docs-private\n */\nexport function _countGroupLabelsBeforeOption(\n    optionIndex: number, options: QueryList<McOption>,\n    optionGroups: QueryList<McOptgroup>\n): number {\n\n    if (optionGroups.length) {\n        const optionsArray = options.toArray();\n        const groups = optionGroups.toArray();\n\n        let groupCounter = 0;\n\n        for (let i = 0; i < optionIndex + 1; i++) {\n            if (optionsArray[i].group && optionsArray[i].group === groups[groupCounter]) {\n                groupCounter++;\n            }\n        }\n\n        return groupCounter;\n    }\n\n    return 0;\n}\n\n/**\n * Determines the position to which to scroll a panel in order for an option to be into view.\n * @param optionIndex Index of the option to be scrolled into the view.\n * @param optionHeight Height of the options.\n * @param currentScrollPosition Current scroll position of the panel.\n * @param panelHeight Height of the panel.\n * @docs-private\n */\nexport function _getOptionScrollPosition(\n    optionIndex: number,\n    optionHeight: number,\n    currentScrollPosition: number,\n    panelHeight: number\n): number {\n    const optionOffset = optionIndex * optionHeight;\n\n    if (optionOffset < currentScrollPosition) { return optionOffset; }\n\n    if (optionOffset + optionHeight > currentScrollPosition + panelHeight) {\n        return Math.max(0, optionOffset - panelHeight + optionHeight);\n    }\n\n    return currentScrollPosition;\n}\n\n","import { ConnectionPositionPair } from '@ptsecurity/cdk/overlay';\n\n\nexport const POSITION_MAP: { [key: string]: ConnectionPositionPair } = {\n    top         : {\n        originX : 'center',\n        originY : 'top',\n        overlayX: 'center',\n        overlayY: 'bottom'\n    },\n    topCenter   : {\n        originX : 'center',\n        originY : 'top',\n        overlayX: 'center',\n        overlayY: 'bottom',\n        offsetX : undefined,\n        offsetY : undefined\n    },\n    topLeft     : {\n        originX : 'start',\n        originY : 'top',\n        overlayX: 'start',\n        overlayY: 'bottom',\n        offsetX : undefined,\n        offsetY : undefined\n    },\n    topRight    : {\n        originX : 'end',\n        originY : 'top',\n        overlayX: 'end',\n        overlayY: 'bottom',\n        offsetX : undefined,\n        offsetY : undefined\n    },\n    right       : {\n        originX : 'end',\n        originY : 'center',\n        overlayX: 'start',\n        overlayY: 'center'\n    },\n    rightTop    : {\n        originX : 'end',\n        originY : 'top',\n        overlayX: 'start',\n        overlayY: 'top',\n        offsetX : undefined,\n        offsetY : undefined\n    },\n    rightBottom : {\n        originX : 'end',\n        originY : 'bottom',\n        overlayX: 'start',\n        overlayY: 'bottom',\n        offsetX : undefined,\n        offsetY : undefined\n    },\n    bottom      : {\n        originX : 'center',\n        originY : 'bottom',\n        overlayX: 'center',\n        overlayY: 'top'\n    },\n    bottomCenter: {\n        originX : 'center',\n        originY : 'bottom',\n        overlayX: 'center',\n        overlayY: 'top'\n    },\n    bottomLeft  : {\n        originX : 'start',\n        originY : 'bottom',\n        overlayX: 'start',\n        overlayY: 'top'\n    },\n    bottomRight : {\n        originX : 'end',\n        originY : 'bottom',\n        overlayX: 'end',\n        overlayY: 'top'\n    },\n    left        : {\n        originX : 'start',\n        originY : 'center',\n        overlayX: 'end',\n        overlayY: 'center'\n    },\n    leftTop     : {\n        originX : 'start',\n        originY : 'top',\n        overlayX: 'end',\n        overlayY: 'top'\n    },\n    leftBottom  : {\n        originX : 'start',\n        originY : 'bottom',\n        overlayX: 'end',\n        overlayY: 'bottom'\n    }\n};\n\nexport const DEFAULT_4_POSITIONS = _objectValues([\n    POSITION_MAP.top, POSITION_MAP.right, POSITION_MAP.bottom, POSITION_MAP.left\n]);\n\nfunction arrayMap<T, S>(array: T[], iteratee: (item: T, index: number, arr: T[]) => S): S[] {\n    let index = -1;\n    const length = array == null ? 0 : array.length;\n    const result = Array(length);\n\n    while (++index < length) {\n        result[ index ] = iteratee(array[ index ], index, array);\n    }\n\n    return result;\n}\nfunction baseValues<T>(object: { [key: string]: T } | T[], props: string[]): T[] {\n    return arrayMap(props,  (key) => {\n        return object[ key ];\n    });\n}\nfunction _objectValues<T>(object: { [key: string]: T } | T[]): T[] {\n    return object == null ? [] : baseValues(object, Object.keys(object));\n}\n","export function throwMcDropdownMissingError() {\n    throw Error(`mcDropdownTriggerFor: must pass in an mc-dropdown instance.\n    Example:\n      <mc-dropdown #dropdown=\"mcDropdown\"></mc-dropdown>\n      <button [mcDropdownTriggerFor]=\"dropdown\"></button>`);\n}\n\n/**\n * Throws an exception for the case when dropdown's x-position value isn't valid.\n * In other words, it doesn't match 'before' or 'after'.\n * @docs-private\n */\nexport function throwMcDropdownInvalidPositionX() {\n    throw Error(`xPosition value must be either 'before' or after'.\n      Example: <mc-dropdown xPosition=\"before\" #dropdown=\"mcDropdown\"></mc-dropdown>`);\n}\n\n/**\n * Throws an exception for the case when dropdown's y-position value isn't valid.\n * In other words, it doesn't match 'above' or 'below'.\n * @docs-private\n */\nexport function throwMcDropdownInvalidPositionY() {\n    throw Error(`yPosition value must be either 'above' or below'.\n      Example: <mc-dropdown yPosition=\"above\" #dropdown=\"mcDropdown\"></mc-dropdown>`);\n}\n","export function getMcFormFieldMissingControlError(): Error {\n  return Error('mc-form-field must contain a McFormFieldControl.');\n}\n","export function getMcInputUnsupportedTypeError(inputType: string): Error {\n    return Error(`Input type \"${inputType}\" isn't supported by mcInput.`);\n}\n","/**\n * Returns an exception to be thrown when attempting to change a select's `multiple` option\n * after initialization.\n * @docs-private\n */\nexport function getMcSelectDynamicMultipleError(): Error {\n    return Error('Cannot change `multiple` mode of select after initialization.');\n}\n\n/**\n * Returns an exception to be thrown when attempting to assign a non-array value to a select\n * in `multiple` mode. Note that `undefined` and `null` are still valid values to allow for\n * resetting the value.\n * @docs-private\n */\nexport function getMcSelectNonArrayValueError(): Error {\n    return Error('Value must be an array in multiple-selection mode.');\n}\n\n/**\n * Returns an exception to be thrown when assigning a non-function value to the comparator\n * used to determine if a value corresponds to an option. Note that whether the function\n * actually takes two values and returns a boolean is not checked.\n */\nexport function getMcSelectNonFunctionValueError(): Error {\n    return Error('`compareWith` must be a function.');\n}\n","import { NgModule, Directive, ElementRef, QueryList } from '@angular/core';\n\n\n/**\n * Shared directive to count lines inside a text area, such as a list item.\n * Line elements can be extracted with a @ContentChildren(McLine) query, then\n * counted by checking the query list's length.\n */\n@Directive({\n    selector: '[mc-line], [mcLine]',\n    host: { class: 'mc-line' }\n})\nexport class McLine {}\n\n/**\n * Helper that takes a query list of lines and sets the correct class on the host.\n * @docs-private\n */\nexport class McLineSetter {\n    constructor(private _lines: QueryList<McLine>, private _element: ElementRef) {\n        this._setLineClass(this._lines.length);\n\n        this._lines.changes.subscribe(() => {\n            this._setLineClass(this._lines.length);\n        });\n    }\n\n    private _setLineClass(count: number): void {\n        this._resetClasses();\n        if (count === 2 || count === 3) {\n            this._setClass(`mc-${count}-line`, true);\n        } else if (count > 3) {\n            this._setClass(`mc-multi-line`, true);\n        }\n    }\n\n    private _resetClasses(): void {\n        this._setClass('mc-2-line', false);\n        this._setClass('mc-3-line', false);\n        this._setClass('mc-multi-line', false);\n    }\n\n    private _setClass(className: string, isAdd: boolean): void {\n        if (isAdd) {\n            this._element.nativeElement.classList.add(className);\n        } else {\n            this._element.nativeElement.classList.remove(className);\n        }\n    }\n}\n\n@NgModule({\n    imports: [],\n    exports: [McLine],\n    declarations: [McLine]\n})\nexport class McLineModule {}\n","import { Injectable } from '@angular/core';\nimport { FormGroupDirective, NgForm, FormControl } from '@angular/forms';\n\n\n/** Error state matcher that matches when a control is invalid and dirty. */\n@Injectable()\nexport class ShowOnDirtyErrorStateMatcher implements ErrorStateMatcher {\n    isErrorState(control: FormControl | null, form: FormGroupDirective | NgForm | null): boolean {\n        return !!(control && control.invalid && (control.dirty || (form && form.submitted)));\n    }\n}\n\n/** Provider that defines how form controls behave with regards to displaying error messages. */\n@Injectable({ providedIn: 'root' })\nexport class ErrorStateMatcher {\n    isErrorState(control: FormControl | null, form: FormGroupDirective | NgForm | null): boolean {\n        return !!(control && control.invalid && (control.touched || (form && form.submitted)));\n    }\n}\n","import { Component, ViewEncapsulation, Input, ChangeDetectionStrategy } from '@angular/core';\n\n\nexport type McPseudoCheckboxState = 'unchecked' | 'checked' | 'indeterminate';\n\n/**\n * Component that shows a simplified checkbox without including any kind of \"real\" checkbox.\n * Meant to be used when the checkbox is purely decorative and a large number of them will be\n * included, such as for the options in a multi-select. Uses no SVGs or complex animations.\n * Note that theming is meant to be handled by the parent element, e.g.\n * `mc-primary .mc-pseudo-checkbox`.\n *\n * Note that this component will be completely invisible to screen-reader users. This is *not*\n * interchangeable with `<mc-checkbox>` and should *not* be used if the user would directly\n * interact with the checkbox. The pseudo-checkbox should only be used as an implementation detail\n * of more complex components that appropriately handle selected / checked state.\n * @docs-private\n */\n@Component({\n    encapsulation: ViewEncapsulation.None,\n    preserveWhitespaces: false,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    selector: 'mc-pseudo-checkbox',\n    styleUrls: ['pseudo-checkbox.css'],\n    templateUrl: 'pseudo-checkbox.partial.html',\n    host: {\n        class: 'mc-pseudo-checkbox',\n        '[class.mc-indeterminate]': 'state === \"indeterminate\"',\n        '[class.mc-checked]': 'state === \"checked\"',\n        '[class.mc-disabled]': 'disabled'\n    }\n})\nexport class McPseudoCheckbox {\n    @Input() state: McPseudoCheckboxState = 'unchecked';\n\n    @Input() disabled: boolean = false;\n}\n","import { NgModule } from '@angular/core';\n\nimport { McPseudoCheckbox } from './pseudo-checkbox/pseudo-checkbox';\n\n\n@NgModule({\n    exports: [McPseudoCheckbox],\n    declarations: [McPseudoCheckbox]\n})\nexport class McPseudoCheckboxModule {}\n\n\nexport * from './pseudo-checkbox/pseudo-checkbox';\n","import { DOCUMENT } from '@angular/common';\nimport { Inject, Injectable } from '@angular/core';\n\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class McMeasureScrollbarService {\n\n    get scrollBarWidth(): number {\n        if (this._scrollbarWidth) {\n            return this._scrollbarWidth;\n        }\n        this.initScrollBarWidth();\n\n        return this._scrollbarWidth;\n    }\n\n    private _scrollbarWidth: number;\n    private scrollbarMeasure = {\n        position: 'absolute',\n        top: '-9999px',\n        width: '50px',\n        height: '50px',\n        overflow: 'scroll'\n    };\n\n    constructor(\n        @Inject(DOCUMENT) private document: any\n    ) {\n        this.initScrollBarWidth();\n    }\n\n    initScrollBarWidth() {\n        const scrollDiv = this.document.createElement('div');\n\n        // tslint:disable-next-line\n        for (const scrollProp in this.scrollbarMeasure) {\n            if (this.scrollbarMeasure.hasOwnProperty(scrollProp)) {\n                scrollDiv.style[scrollProp] = this.scrollbarMeasure[scrollProp];\n            }\n        }\n\n        this.document.body.appendChild(scrollDiv);\n\n        const width = scrollDiv.offsetWidth - scrollDiv.clientWidth;\n\n        this.document.body.removeChild(scrollDiv);\n        this._scrollbarWidth = width;\n    }\n}\n","import { Component, ViewEncapsulation, Input, ChangeDetectionStrategy } from '@angular/core';\n\nimport { mixinDisabled, CanDisable, CanDisableCtor } from '../common-behaviors/index';\n\n\n// Boilerplate for applying mixins to McOptgroup.\n/** @docs-private */\nexport class McOptgroupBase {}\n\nexport const _McOptgroupMixinBase: CanDisableCtor & typeof McOptgroupBase = mixinDisabled(McOptgroupBase);\n\n// Counter for unique group ids.\nlet _uniqueOptgroupIdCounter = 0;\n\n/**\n * Component that is used to group instances of `mc-option`.\n */\n@Component({\n    selector: 'mc-optgroup',\n    exportAs: 'mcOptgroup',\n    templateUrl: 'optgroup.html',\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    inputs: ['disabled'],\n    styleUrls: ['optgroup.css'],\n    host: {\n        class: 'mc-optgroup',\n        role: 'group',\n        '[class.mc-optgroup-disabled]': 'disabled',\n        '[attr.aria-disabled]': 'disabled.toString()',\n        '[attr.aria-labelledby]': '_labelId'\n    }\n})\nexport class McOptgroup extends _McOptgroupMixinBase implements CanDisable {\n    /** Label for the option group. */\n    @Input() label: string;\n\n    /** Unique id for the underlying label. */\n    _labelId: string = `mc-optgroup-label-${_uniqueOptgroupIdCounter++}`;\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { McPseudoCheckboxModule } from '../selection/index';\n\nimport { McOptgroup } from './optgroup';\nimport { McOption } from './option';\n\n\n@NgModule({\n    imports: [CommonModule, McPseudoCheckboxModule],\n    exports: [McOption, McOptgroup],\n    declarations: [McOption, McOptgroup]\n})\nexport class McOptionModule {}\n\n\nexport * from './option';\nexport * from './optgroup';\n","import { InjectionToken } from '@angular/core';\n\n\n/** InjectionToken that can be used to specify the global label options. */\nexport const MC_LABEL_GLOBAL_OPTIONS =\n    new InjectionToken<LabelOptions>('mc-label-global-options');\n\n/** Type for the available floatLabel values. */\nexport type FloatLabelType = 'always' | 'never' | 'auto';\n\n/** Configurable options for floating labels. */\nexport interface LabelOptions {\n    /**\n     * Whether the label should float `always`, `never`, or `auto` (only when necessary).\n     * Default behavior is assumed to be `auto`.\n     */\n    float?: FloatLabelType;\n}\n","import {\n    animate,\n    state,\n    style,\n    transition,\n    trigger,\n    AnimationTriggerMetadata,\n} from '@angular/animations';\n\n\nexport const fadeAnimation: AnimationTriggerMetadata =  trigger('fadeAnimation', [\n    state('void', style({ opacity: 0 })),\n    state('true', style({ opacity: 1 })),\n    state('false', style({ opacity: 0 })),\n    transition('* => true', animate('150ms cubic-bezier(0.0, 0.0, 0.2, 1)')),\n    transition('* => void', animate('150ms cubic-bezier(0.4, 0.0, 1, 1)')),\n]);\n","import {\n    Attribute,\n    ChangeDetectionStrategy,\n    Component,\n    Directive,\n    ElementRef,\n    ViewEncapsulation\n} from '@angular/core';\n\nimport { mixinColor, CanColor, CanColorCtor, ThemePalette } from '@ptsecurity/mosaic/core';\n\n\n@Directive({\n    selector: '[mc-icon]',\n    host: { class: 'mc mc-icon' }\n})\nexport class McIconCSSStyler {}\n\n\nexport class McIconBase {\n    constructor(public _elementRef: ElementRef) {}\n}\n\nexport const _McIconMixinBase: CanColorCtor & typeof McIconBase = mixinColor(McIconBase, ThemePalette.Empty);\n\n\n@Component({\n    selector: `[mc-icon]`,\n    template: '<ng-content></ng-content>',\n    styleUrls: ['./icon.css'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n    inputs: ['color']\n})\nexport class McIcon extends _McIconMixinBase implements CanColor {\n    constructor(elementRef: ElementRef, @Attribute('mc-icon') iconName: string) {\n        super(elementRef);\n\n        elementRef.nativeElement.classList.add(iconName);\n    }\n\n    _getHostElement() {\n        return this._elementRef.nativeElement;\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { A11yModule } from '@ptsecurity/cdk/a11y';\nimport { PlatformModule } from '@ptsecurity/cdk/platform';\n\nimport {\n    McIcon,\n    McIconCSSStyler\n} from './icon.component';\n\n\n@NgModule({\n    imports: [\n        CommonModule,\n        A11yModule,\n        PlatformModule\n    ],\n    exports: [\n        McIcon,\n        McIconCSSStyler\n    ],\n    declarations: [\n        McIcon,\n        McIconCSSStyler\n    ]\n})\nexport class McIconModule {}\n"],"names":["_this","onHideSubject","next","markForCheck","this","mcMouseLeaveDelay","McTooltipComponent","prototype","setClassMap","classMap","prefix","mcPlacement","isContentEmpty","isTitleString","mcTitle","afterHidden","asObservable","cdr","handleBodyInteraction","closeOnInteraction","hide","tslib_1.__decorate","Output","tslib_1.__metadata","EventEmitter","Input","Component","selector","inputs","outputs","animations","fadeAnimation","template","preserveWhitespaces","styles","encapsulation","ViewEncapsulation","None","changeDetection","ChangeDetectionStrategy","OnPush","host","(body:click)","ChangeDetectorRef","MC_TOOLTIP_SCROLL_STRATEGY","InjectionToken","MC_TOOLTIP_SCROLL_STRATEGY_FACTORY_PROVIDER","provide","deps","Overlay","useFactory","mcTooltipScrollStrategyFactory","McTooltip","overlay","elementRef","ngZone","scrollDispatcher","hostView","scrollStrategy","direction","isTooltipOpen","isDynamicTooltip","parentDisabled","mcVisibleChange","$unsubscribe","Subject","_disabled","_mcTrigger","_mcPlacement","manualListeners","Map","destroyed","availablePositions","POSITION_MAP","Object","defineProperty","get","_mcTitle","set","title","updateCompValue","value","coerceBooleanProperty","_mcMouseEnterDelay","_mcMouseLeaveDelay","_mcTooltipClass","tooltip","_mcVisible","externalValue","show","createOverlay","overlayRef","strategy","position","flexibleConnectedTo","withTransformOriginOn","withFlexibleDimensions","withViewportMargin","withPositions","DEFAULT_4_POSITIONS","slice","scrollableAncestors","getAncestorScrollContainers","withScrollableContainers","positionChanges","pipe","takeUntil","subscribe","change","onPositionChange","scrollableViewProperties","isOverlayClipped","mcVisible","run","create","positionStrategy","panelClass","updatePosition","detachments","detach","hasAttached","$event","updatedPlacement","keys","some","key","connectionPair","originX","originY","overlayX","overlayY","handlePositioningUpdate","pos","overlayElement","clientHeight","element","nativeElement","currentContainer","style","top","parseInt","split","ngOnInit","initElementRefListeners","ngOnDestroy","dispose","forEach","listener","event","removeEventListener","clear","complete","handleKeydown","e","keyCode","ESCAPE","handleTouchend","mcTrigger","addEventListener","disabled","portal","ComponentPortal","attach","instance","property","distinctUntilChanged","data","emit","getConfig","origin","getOrigin","getOverlayPosition","tslib_1.__assign","main","fallback","originPosition","isLtr","getMcTooltipInvalidPositionError","_a","invertPosition","x","y","overlayPosition","newX","newY","HostBinding","Directive","exportAs","(keydown)","(touchend)","tslib_1.__param","Inject","Optional","ElementRef","NgZone","ScrollDispatcher","ViewContainerRef","Directionality","McToolTipModule","NgModule","declarations","exports","imports","CommonModule","OverlayModule","providers","entryComponents","VERSION","Version","SELECT_PANEL_PADDING_X","McSelect","_onFadeInDone","_panelDoneAnimating","panelOpen","_changeDetectorRef","_onFocus","_focused","stateChanges","_onBlur","_onTouched","_onAttached","overlayDir","positionChange","take","detectChanges","_calculateOverlayOffsetX","panel","scrollTop","_scrollTop","_getPanelTheme","_parentFormField","color","focus","_elementRef","_calculateOverlayScroll","selectedIndex","scrollBuffer","maxScroll","itemHeight","_getItemHeight","optionOffsetFromScrollTop","halfOptionHeight","optimalScrollPosition","Math","min","max","onContainerClick","open","onRemoveMatcherItem","option","stopPropagation","deselect","_panelOpen","empty","_calculateHiddenItems","visibleItems","totalItemsWidth","_getTotalItemsWidthInMatcher","totalVisibleItemsWidth","tags","tag","offsetTop","offsetHeight","getBoundingClientRect","width","hiddenItems","selected","length","itemsCounter","trigger","querySelector","matcherList","itemsCounterShowed","matcherListWidth","matcherWidth","triggerClone","cloneNode","remove","_renderer","setStyle","appendChild","querySelectorAll","item","_handleClosedKeydown","isArrowKey","DOWN_ARROW","UP_ARROW","LEFT_ARROW","RIGHT_ARROW","ENTER","SPACE","multiple","altKey","preventDefault","_keyManager","onKeydown","_handleOpenKeydown","manager","HOME","END","setFirstItemActive","setLastItemActive","close","activeItem","_multiple","A","ctrlKey","hasDeselectedOptions_1","options","select","previouslyFocusedIndex","activeItemIndex","shiftKey","_selectViaInteraction","_initializeSelection","Promise","resolve","then","_setSelectionByValue","ngControl","_value","Array","isArray","getMcSelectNonArrayValueError","_selectionModel","currentValue","_selectValue","_sortValues","correspondingOption","setActiveItem","find","_compareWith","error","isDevMode","console","warn","_initKeyManager","ActiveDescendantKeyManager","withTypeAhead","withVerticalOrientation","withHorizontalOrientation","_isRtl","tabOut","_destroy","_scrollActiveOptionIntoView","_resetOptions","changedOrDestroyed","merge","changes","optionSelectionChanges","_onSelect","source","isUserInput","apply","map","_stateChanges","_setOptionIds","wasSelected","isSelected","_propagateChanges","options_1","toArray","sort","a","b","sortComparator","indexOf","fallbackValue","valueToEmit","valueChange","_onChange","selectionChange","McSelectChange","_optionIds","id","join","_highlightCorrectOption","activeOptionIndex","labelCount","_countGroupLabelsBeforeOption","optionGroups","_getOptionScrollPosition","_getOptionIndex","reduce","result","current","index","undefined","_calculateOverlayPosition","items","_getItemCount","panelHeight","scrollContainerHeight","selectedOptionOffset","_offsetY","_calculateOverlayOffsetY","_checkOverlayWithinViewport","offsetX","overlayRect","viewportSize","_viewportRuler","getViewportSize","isRtl","first","group","leftOverflow","left","rightOverflow","right","round","topSpaceAvailable","_triggerRect","bottomSpaceAvailable","height","bottom","panelHeightTop","abs","totalPanelHeight","panelHeightBottom","_adjustPanelUp","_adjustPanelDown","_transformOrigin","_getOriginBasedOnOption","distanceBelowViewport","distanceAboveViewport","optionHeightAdjustment","ViewChild","ViewChildren","McTag","QueryList","CdkConnectedOverlay","ContentChildren","McOption","descendants","McOptgroup","ContentChild","McSelectTrigger","ErrorStateMatcher","Observable","McSelect_1","[attr.id]","[attr.tabindex]","class","[class.mc-disabled]","[class.mc-select-invalid]","[class.mc-select-required]","(focus)","(blur)","(window:resize)","mcSelectAnimations","transformPanel","fadeInContent","McFormFieldControl","useExisting","MC_OPTION_PARENT_COMPONENT","Self","Attribute","MC_SELECT_SCROLL_STRATEGY","ViewportRuler","Renderer2","NgForm","FormGroupDirective","McFormField","NgControl","String","_McSelectMixinBase","McSelectModule","McOptionModule","McIconModule","McTagModule","McFormFieldModule","MC_SELECT_SCROLL_STRATEGY_PROVIDER","McSplitterComponent","renderer","areas","_gutterSize","isDragging","areaPositionDivider","listeners","_direction","gutterSize","size","coerceNumberProperty","addArea","area","order","getSize","setOrder","push","initialSize","isVertical","onMouseDown","leftAreaIndex","rightAreaIndex","leftArea","rightArea","startPoint","screenX","screenY","disableFlex","setSize","runOutsideAngular","listen","onMouseUp","onMouseMove","removeArea","indexToRemove","splice","endPoint","offset","newLeftAreaSize","newRightAreaSize","minLeftAreaSize","getMinSize","minRightAreaSize","rightAreaOffset","unsubscribe","pop","McGutterDirective","_order","_size","getCursor","getState","coerceCssPixelValue","setAttr","state","Error","attribute","setAttribute","McSplitterAreaDirective","splitter","removeStyle","sz","getSizeProperty","getOffsetSizeProperty","getComputedStyle","parseFloat","getMinSizeProperty","McSplitterModule","nextUniqueId","McToggleBase","_McToggleMixinBase","mixinTabIndex","mixinColor","mixinDisabled","ThemePalette","Primary","McToggleChange","McToggleComponent","_super","_focusMonitor","tabIndex","call","labelPosition","ariaLabel","ariaLabelledby","_uniqueId","name","_checked","_onTouchedCallback","_onChangeCallback","_","monitor","tslib_1.__extends","McToggleComponent_1","stopMonitoring","focusVia","_inputElement","_getAriaChecked","checked","_onInteractionEvent","_onLabelTextChange","_onInputClick","_updateModelValue","_emitChangeEvent","writeValue","registerOnChange","fn","registerOnTouched","setDisabledState","isDisabled","NG_VALUE_ACCESSOR","forwardRef","multi","[id]","[class.mc-toggle_off]","transition","animate","FocusMonitor","McToggleModule","A11yModule","McCommonModule","positions","mcMouseEnterDelay","BehaviorSubject","$visible","TemplateRef","unshift","visible","hideTid","clearTimeout","showTid","setTimeout","mcTabGroupMixinBase","McTabNavBase","mcTabNavMixinBase","McTabNav","McTabLinkBase","mcTabLinkMixinBase","McTabLink","focusMonitor","isActive","[attr.aria-current]","[attr.aria-disabled]","[attr.tabIndex]","[class.mc-active]","McTabsModule","PortalModule","McTabGroup","McTabLabel","McTab","McTabContent","McLightTabsCssStyler","McAlignTabsCenterCssStyler","McAlignTabsEndCssStyler","McStretchTabsCssStyler","McTabLabelWrapper","McTabBody","McTabBodyPortal","McTabHeader","McTagBase","_McTagMixinBase","ngAfterContentInit","_addClassModificatorForIcons","icons","contentChildren","iconElement","previousElementSibling","nextElementSibling","nextSibling","classList","add","previousSibling","firstIconElement","secondIconElement","McIcon","PlatformModule","MC_TEXTAREA_VALUE_ACCESSOR","McTextareaBase","_defaultErrorStateMatcher","_parentForm","_parentFormGroup","McTextareaMixinBase","mixinErrorState","McTextarea","inputValueAccessor","canGrow","focused","controlType","uid","_required","lineHeight","freeRowsHeight","minHeight","valueAccessor","previousNativeValue","growObserver","fromEvent","growSubscription","grow","bind","McTextarea_1","_id","paddingTop","paddingBottom","ngOnChanges","ngDoCheck","updateErrorState","dirtyCheckNativeValue","textarea","outerHeight","window","diff","scrollHeight","focusChanged","isFocused","isBadInput","newValue","validity","badInput","getGrowHeight","toString","[class.mc-textarea-resizable]","[attr.placeholder]","[disabled]","[required]","McTextareaModule","FormsModule","TimeParts","TimeFormats","TIMEFORMAT_PLACEHOLDERS","HHmmss","HHmm","DEFAULT_TIME_FORMAT","HOURS_MINUTES_SECONDS_REGEXP","RegExp","HOURS_MINUTES_REGEXP","HOURS_ONLY_REGEXP","uniqueComponentIdSuffix","validatorOnChange","noop","validator","MC_INPUT_VALUE_ACCESSOR","McTimepickerBase","McTimepickerMixinBase","ɵ1","validate","c","registerOnValidatorChange","McTimepicker","_minTime","_maxTime","onChange","placeholder","Validators","compose","parseValidator","minTimeValidator","maxTimeValidator","McTimepicker_1","applyInputChanges","_timeFormat","formatValue","timeFormatKey","minValue","minDateTime","getDateFromTimeString","maxValue","maxDateTime","onTouched","onBlur","onPaste","clipboardUserInput","clipboardData","getData","onInput","initialCursorStart","selectionStart","initialCursorEnd","selectionEnd","isAutocompleteTriggered","getParsedTimeParts","hoursOnly","hoursAndMinutes","hoursAndMinutesAndSeconds","doTimestringReformat","errors","createSelectionOfTimeComponentInInput","setProperty","getTimeStringFromDate","timeFormat","onKeyDown","getKeyCode","upDownTimeByArrowKeys","switchSelectionBetweenTimeparts","applyParams","changedTime","timeToApply","currentDateTimeInput","control","updateValueAndValidity","cursorPos","modifiedTimePart","getTimeEditMetrics","incrementTime","decrementTime","getCursorPositionOfPrevTimePartStart","getCursorPositionOfNextTimePartStart","code","newEditParams","cursorStartPosition","cursorEndPosition","dateVal","whatToIncrement","seconds","getTimeDigitsFromDate","hours","minutes","getDateFromTimeDigits","whatToDecrement","timeString","timeDevider","nextDividerPos","cursorPosition","minutesIndex","hoursIndex","secondsIndex","tempVal","getNumberWithLeadingZero","getHours","getMinutes","getSeconds","match","trim","Number","resultDate","Date","isNaN","getTime","digit","mcTimepickerParse","text","isTimeLowerThenMin","mcTimepickerLowerThenMintime","isTimeGreaterThenMax","mcTimepickerHigherThenMaxtime","timeToCompare","[attr.time-format]","[attr.min-time]","[attr.max-time]","[attr.value]","(input)","(paste)","NG_VALIDATORS","useValue","McTimepickerModule","transform","minWidth","opacity","query","animateChild","MC_SELECT_SCROLL_STRATEGY_PROVIDER_FACTORY","McSelectBase","_ngZone","_dir","_scrollStrategyFactory","_triggerFontSize","_panelDoneAnimatingStream","_scrollStrategy","_positions","defer","onSelectionChange","onStable","switchMap","openedChange","_openedStream","filter","o","_closedStream","oneMoreText","_uid","o1","o2","_placeholder","getMcSelectDynamicMultipleError","getMcSelectNonFunctionValueError","SelectionModel","added","removed","startWith","ngAfterViewInit","toggle","fontSize","selectedOptions","viewValue","reverse","isEmpty","_handleKeydown","PAGE_DOWN","setNextPageItemActive","McTreeSelection","FocusKeyManager","updateScrollSize","withScrollSize","floor","_getHeight","setFocusedOption","updateActiveItem","withShift","previousIndex_1","previousActiveItemIndex","activeIndex_1","setSelected","withCtrl","_canDeselectLast","autoSelect","_emitNavigationEvent","toggleFocusedOption","focusedIndex","_isValidIndex","focusedOption","renderNodeChanges","dataDiffer","viewContainer","parentData","_dataDiffer","_nodeOutlet","arrayOfInstances","_embeddedViews","view","viewDef","def","nodes","node","nodeMatchedQueries","matchedQueryIds","nodeData","nodeIndex","reset","notifyOnChanges","getClientRects","navigationChange","McTreeNavigationChange","noUnselect","CdkTreeNodeOutlet","McTreeNodeOption","McTreeSelection_1","[tabIndex]","role","CdkTree","IterableDiffers","_McTreeSelectionBase","MC_TREE_DIRECTIVES","McTreeNodeDef","McTreeNodePadding","McTreeModule","CdkTreeModule","McTreeFlattener","transformFunction","getLevel","isExpandable","getChildren","_flattenNode","level","resultNodes","parentMap","flatNode","children","child","childParentMap","flattenNodes","structuredData","expandFlattenedNodes","treeControl","results","currentExpand","expand","i","isExpanded","McTreeFlatDataSource","treeFlattener","initialData","_flattenedData","_expandedData","_data","dataNodes","connect","collectionViewer","viewChange","expansionModel","disconnect","DataSource","McTreeNestedDataSource","arguments","CdkPortal","ctorParameters","McTabBase","mcTabMixinBase","viewContainerRef","textLabel","contentPortal","hasOwnProperty","TemplatePortal","explicitContent","implicitContent","read","mcTabsAnimations","translateTab","dir","changeDetectorRef","onCentering","beforeCentering","afterLeavingCenter","onCentered","animationDuration","dirChangeSubscription","Subscription","EMPTY","computePositionAnimationState","positionIndex","bodyPosition","computePositionFromOrigin","onTranslateTabStarted","isCentering","isCenterPosition","toState","onTranslateTabComplete","fromState","getLayoutDirection","PortalHostDirective","componentFactoryResolver","centeringSub","leavingSub","content","ComponentFactoryResolver","CdkPortalOutlet","McTabLabelWrapperBase","mcTabLabelWrapperMixinBase","getOffsetLeft","offsetLeft","getOffsetWidth","offsetWidth","McTabHeaderBase","viewportRuler","showPaginationControls","disableScrollAfter","disableScrollBefore","selectFocusedIndex","indexFocused","_scrollDistance","selectedIndexChanged","_selectedIndex","coercedValue","keyManager","isValidIndex","focusIndex","v","getMaxScrollDistance","scrollDistanceChanged","checkScrollingControls","ngAfterContentChecked","tabLabelCount","labelWrappers","updatePagination","scrollToLabel","updateTabScrollPosition","dirChange","observableOf","resize","realign","withWrap","requestAnimationFrame","newFocusIndex","setTabFocus","onContentChanges","textContent","currentTextContent","zoneCallback","checkPaginationEnabled","tab","containerEl","tabListContainer","scrollLeft","scrollWidth","scrollDistance","translateX","tabList","scrollHeader","scrollDir","viewLength","labelIndex","selectedLabel","labelBeforePos","labelAfterPos","beforeVisiblePos","afterVisiblePos","isEnabled","[class.mc-tab-header__pagination-controls_enabled]","[class.mc-tab-header_rtl]","nextId","McTabChangeEvent","MC_TABS_CONFIG","McTabGroupBase","lightTabs","defaultConfig","headerPosition","selectedIndexChange","focusChange","animationDone","selectedTabChange","indexToSelect","tabBodyWrapperHeight","tabsSubscription","tabLabelSubscription","_dynamicHeight","lightTab","groupId","clampTabIndex","isFirstRun_1","createChangeEvent","tabs","subscribeToTabLabels","getTabLabelId","getTabContentId","setTabBodyWrapperHeight","tabHeight","wrapper","tabBodyWrapper","removeTabBodyWrapperHeight","handleClick","tabHeader","getTabIndex","[class.mc-tab-group_dynamic-height]","[class.mc-tab-group_inverted-header]","modalControl","closeAll","McModalService","mcOnCancel","mcCloseByESC","mcWidth","ModalBuilderForService","getInstance","confirm","confirmType","mcOnOk","mcModalType","mcClassName","mcMaskClosable","success","simpleConfirm","delete","mcCancelText","Injectable","McModalControlService","McModalModule","McButtonModule","McModalComponent","CssUnitPipe","MC_NAVBAR_CONTAINER","MC_NAVBAR_ITEM","MC_NAVBAR_BRAND","MC_NAVBAR_TITLE","McNavbarLogo","McNavbarBrand","McNavbarTitle","McNavbarItemBase","_McNavbarMixinBase","McNavbarItem","_platform","_cdRef","dropdownItems","isCollapsed","_subscription","encodeURI","dropdownContent","denyClickIfDisabled","_focusMonitor$","hasDropdownContent","listenClickOutside","startListenFocusDropdownItems","stopListenFocusDropdownItems","isActiveDropdownLink","link","isBrowser","location","href","handleClickByItem","toggleDropdown","isNavbarItem","target","contains","handleClickByDropdownItem","forceCloseDropdown","_dropdownElements","el","events","eventListeners","hasAttribute","stopImmediatePropagation","[attr.disabled]","Platform","McNavbarContainer","CollapsibleItem","_collapsed","processCollapsed","collapsed","updateCollapsedClass","CachedItemWidth","itemsForCollapse","_collapsedItemsWidth","calculateAndCacheCollapsedItemsWidth","updateTitle","acc","getTitle","computedTitle","getAttribute","decodeURI","innerText","removeAttribute","McNavbar","forceRecalculateItemsWidth","resizeDebounceInterval","firstLevelElement","secondLevelElements","resizeObserver","debounceTime","_resizeSubscription","updateCollapsed","_itemsWidths","calculateAndCacheItemsWidth","_totalItemsWidths","calculateAndCacheTotalItemsWidth","collapseDelta","maxAllowedWidth","itemsWidths","canCollapse","collapsedItemsWidth","getOuterElementWidth","getPropertyValue","allItemsSelector","allItems","from","getItemsForCollapse","McNavbarModule","idIterator","McProgressBarBase","_McProgressBarMixinBase","McProgressBar","mode","McProgressBarModule","McProgressSpinnerBase","_McProgressSpinnerMixinBase","McProgressSpinner","percentage","McProgressSpinnerModule","McRadioChange","McRadioGroupBase","_McRadioGroupMixinBase","MC_RADIO_GROUP_CONTROL_VALUE_ACCESSOR","McRadioGroup","_changeDetector","_name","_selected","_isInitialized","_labelPosition","controlValueAccessorChangeFn","updateRadioButtonNames","markRadiosForCheck","updateSelectedRadioFromValue","checkSelectedRadioButton","toBoolean","touch","emitChangeEvent","_radios","radio","isAlreadySelected","McRadioButton","McRadioButtonBase","_McRadioButtonMixinBase","radioGroup","_radioDispatcher","removeUniqueSelectionListener","newCheckedState","notify","newDisabledState","required","onInputClick","onInputChange","groupValueChanged","[class.mc-checked]","UniqueSelectionDispatcher","McRadioModule","McTreeNodeDef_1","CdkTreeNodeDef","_baseLeftPadding","_iconWidth","_indent","McTreeNodePadding_1","_withIcon","_paddingIndent","nodeLevel","_treeNode","_tree","_level","leftPadding","_setPadding","CdkTreeNodePadding","treeSelection","_hasFocus","McTreeNodeOption_1","_handleFocus","_handleBlur","_handleClick","tabindex","[class.mc-selected]","[class.mc-focused]","[attr.aria-expanded]","[attr.aria-level]","(click)","CdkTreeNode","McTreeSelectionChange","_differs","rawValue","log","_onKeyDown","collapse","PAGE_UP","setPreviousPageItemActive","MC_SELECTION_LIST_VALUE_ACCESSOR","McListSelection","_McListSelectionMixinBase","McListBase","McList","McListSubheaderCssStyler","McListItemBase","McListItem","_element","_lineSetter","McLineSetter","_lines","_getHostElement","McLine","McListModule","McLineModule","McListOption","McLinkBase","_McLinkBase","McLink","McLinkModule","parentService","rootOpenModals","rootAfterAllClose","rootRegisteredMetaMap","afterAllClose","openModals","registeredMetaMap","registerModal","modalRef","hasRegistered","afterOpenSubscription","afterOpen","afterCloseSubscription","afterClose","removeOpenModal","has","SkipSelf","McModalRef","ModalUtil","document","lastPosition","listenDocumentClick","getLastClickPosition","clientX","clientY","ModalUtil$1","cfr","mcMeasureScrollbarService","changeDetector","mcZIndex","_mcClosable","_mcMask","_mcMaskClosable","mcAfterOpen","mcAfterClose","mcOkType","_mcOkLoading","_mcCancelLoading","transformOrigin","mcGetContainer","mcOkText","animationState","isComponent","mcContent","createDynamicComponent","isModalButtons","mcFooter","formatModalButtons","container","HTMLElement","OverlayRef","handleVisibleStateChange","firstChange","contentComponentRef","bodyContainer","insert","autoFocusButtonOk","changeVisibleFromInside","destroy","triggerOk","onClickOkCancel","triggerCancel","getContentComponentRef","getContentComponent","getElement","onClickMask","mcMask","isModalType","type","onClickCloseBtn","ok","cancel","loadingKey","caseClose_1","doClose","isPromise","handleThen","catch","isNonEmptyString","isTemplateRef","Type","animation","closeResult","changeBodyOverflow","animateTo","getButtonCallableProp","prop","args","onButtonClick","button","loading","changeAnimationState","maskAnimationClassMap","modalAnimationClassMap","_b","isVisible","updateTransformOrigin","buttons","autoLoading","component","factory","resolveComponentFactory","childInjector","Injector","parent","parentInjector","mcComponentParams","assign","modalElement","modalContainer","plusNum","body","scrollBarWidth","DOCUMENT","McMeasureScrollbarService","defaultUnit","formatted","Pipe","createModal","changeProps","destroyModal","keydownEvents","McFormFieldBase","_McFormFieldMixinBase","_labelId","hovered","_validateControlChild","_control","_numberControl","hasStepper","_stepper","stepUp","onStepUp","stepDown","onStepDown","valueChanges","clearValue","hasCleaner","onHoverChanged","isHovered","step","_shouldForward","getMcFormFieldMissingControlError","_hint","_suffix","_prefix","_cleaner","McFormFieldNumberControl","McStepper","McHint","McSuffix","McPrefix","McCleaner","[class.mc-form-field_invalid]","[class.mc-form-field_has-prefix]","[class.mc-form-field_has-suffix]","[class.mc-form-field_has-cleaner]","[class.mc-form-field_has-stepper]","[class.ng-untouched]","[class.ng-touched]","[class.ng-pristine]","[class.ng-dirty]","[class.ng-valid]","[class.ng-invalid]","[class.ng-pending]","(mouseenter)","(mouseleave)","McFormFieldWithoutBorders","res","MC_INPUT_INVALID_TYPES","BIG_STEP","SMALL_STEP","McInputBase","_McInputMixinBase","McNumberInput","_model","bigStep","isDigit","Infinity","_host","self","getPrototypeOf","normalizeSplitter","McNumberInput_1","_focusChanged","minuses","NUMPAD_MINUS","DASH","FF_MINUS","serviceKeys","DELETE","BACKSPACE","TAB","arrows","allowedKeys","concat","isIEPeriod","isNotIEPeriod","metaKey","C","V","X","F1","F12","EDGE","TRIDENT","ZERO","NINE","NUMPAD_ZERO","NUMPAD_NINE","valueAsNumber","update","replace","isFloat","isInt","test","NgModel","McInput","_type","_neverEmptyInputTypes","t","getSupportedInputTypes","_inputValueAccessor","_previousNativeValue","McInput_1","_validateType","_dirtyCheckNativeValue","_onInput","_isNeverEmpty","_isBadInput","getMcInputUnsupportedTypeError","McInputMono","MIN_VALIDATOR","MinValidator","_createValidator","_validator","[attr.min]","MAX_VALIDATOR","MaxValidator","[attr.max]","McInputModule","McContentComponent","[class.mc-layout-content]","McFooterComponent","[class.mc-layout-footer]","McHeaderComponent","[class.mc-layout-header]","McLayoutComponent","hasSidebar","[class.mc-layout]","[class.mc-layout-has-sidebar]","McSidebarComponent","mcLayoutComponent","_mcWidth","mcCollapsedWidth","mcCollapsedChange","collapsible","mcCollapsed","[class.mc-layout-sidebar]","[class.mc-layout-sidebar-collapsed]","[style.flex]","[style.max-width.px]","[style.min-width.px]","[style.width.px]","Host","McLayoutModule","listSelection","checkboxPosition","_reportValueChange","wasSelected_1","_removeOptionFromList","getLabel","_text","McListSelectionChange","McListSelectionBase","horizontal","_modelChanges","_tempValues","_setOptionsFromValues","_i","_c","selectAll","deselectAll","values","getSelectedOptionValues","listOption","optionIndex","setPreviousItemActive","setNextItemActive","_getOptionByValue","Boolean","McIconButton","McButton","McAnchor","McButtonCSSStyler","McIconButtonCSSStyler","McCard","readonly","selectedChange","_tabIndex","hostElement","onClick","[class.mc-card_readonly]","[class.mc-card_selected]","McCardModule","MC_CHECKBOX_CLICK_ACTION","MC_CHECKBOX_CONTROL_VALUE_ACCESSOR","McCheckbox","TransitionCheckState","McCheckboxChange","McCheckboxBase","_McCheckboxMixinBase","_clickAction","indeterminateChange","_currentAnimationClass","_currentCheckState","Init","_controlValueAccessorChangeFn","_indeterminate","focusOrigin","_onInputFocusChange","changed","_transitionCheckState","Indeterminate","Checked","Unchecked","indeterminate","newState","oldState","[class.mc-indeterminate]","[class.mc-checkbox-label-before]","MC_CHECKBOX_REQUIRED_VALIDATOR","McCheckboxRequiredValidator","[attr.required]","CheckboxRequiredValidator","McCheckboxModule","McDivider","_vertical","_inset","[attr.aria-orientation]","[class.mc-divider-vertical]","[class.mc-divider-inset]","McDividerModule","McDropdownContent","_template","_componentFactoryResolver","_appRef","_injector","_viewContainerRef","_document","_attached","context","_portal","_outlet","DomPortalOutlet","createElement","parentNode","insertBefore","outletElement","isAttached","ApplicationRef","MC_DROPDOWN_PANEL","McDropdownItemBase","_McDropdownItemMixinBase","McDropdownItem","_parentDropdownPanel","addItem","removeItem","_getTabIndex","_checkDisabled","textNodeType","TEXT_NODE","output","childNodes","length_1","nodeType","mcDropdownAnimations","transformDropdown","fadeInItems","MC_DROPDOWN_DEFAULT_OPTIONS","providedIn","MC_DROPDOWN_DEFAULT_OPTIONS_FACTORY","McDropdown","_defaultOptions","_classList","_panelAnimationState","_animationDone","backdropClass","closed","_xPosition","xPosition","_yPosition","yPosition","_items","_itemChanges","_tabSubscription","_overlapTrigger","overlapTrigger","_hasBackdrop","hasBackdrop","McDropdown_1","throwMcDropdownInvalidPositionX","setPositionClasses","throwMcDropdownInvalidPositionY","classes","obj","className","setFocusOrigin","focusFirstItem","lazyContent","resetActiveItem","posX","posY","_startAnimation","_resetAnimation","_onAnimationDone","_isAnimating","MC_DROPDOWN_SCROLL_STRATEGY","MC_DROPDOWN_SCROLL_STRATEGY_FACTORY_PROVIDER","MC_DROPDOWN_SCROLL_STRATEGY_FACTORY","McDropdownTrigger","_overlay","_openedBy","dropdownOpened","dropdownClosed","_overlayRef","_opened","_closeSubscription","_hoverSubscription","dropdown","_check","_cleanUpSubscriptions","_createOverlay","_setPosition","_closingActions","_init","opened","_reset","_setIsOpened","isOpen","throwMcDropdownMissingError","templateRef","config","_getOverlayConfig","_subscribeToPositions","OverlayConfig","withLockedPosition","originFallbackX","overlayFallbackY","originFallbackY","_d","overlayFallbackX","offsetY","backdrop","backdropClick","(touchstart)","McDropdownModule","__extends","d","__","constructor","extendStatics","__decorate","decorators","desc","r","getOwnPropertyDescriptor","Reflect","decorate","__param","paramIndex","decorator","__metadata","metadataKey","metadataValue","metadata","isBoolean","val","MC_SANITY_CHECKS_FACTORY","base","class_1","defaultColor","Default","_color","colorPalette","defaultTabIndex","errorState","matcher","errorStateMatcher","isErrorState","optionsArray","groups","groupCounter","optionHeight","currentScrollPosition","optionOffset","arrayMap","array","iteratee","baseValues","object","props","scrollStrategies","reposition","inputType","sanitizeNumber","isFinite","getPrecision","arr","pow","value1","value2","precision","scrollThrottle","setPrototypeOf","__proto__","p","__assign","s","n","MC_SANITY_CHECKS","_sanityChecksEnabled","_hasDoneGlobalChecks","_window","_areChecksEnabled","_checkDoctypeIsDefined","_checkThemeIsPresent","_isTestEnv","doctype","testElement","computedStyle","display","removeChild","BidiModule","_setLineClass","count","_resetClasses","_setClass","isAdd","ShowOnDirtyErrorStateMatcher","form","invalid","dirty","submitted","touched","McPseudoCheckbox","McPseudoCheckboxModule","scrollbarMeasure","overflow","initScrollBarWidth","_scrollbarWidth","scrollDiv","scrollProp","clientWidth","McOptgroupBase","_McOptgroupMixinBase","_uniqueOptgroupIdCounter","[class.mc-optgroup-disabled]","[attr.aria-labelledby]","_uniqueIdCounter","McOptionSelectionChange","_parent","_active","_mostRecentViewValue","disableRipple","_emitSelectionChangeEvent","setActiveStyles","setInactiveStyles","ngAfterViewChecked","[class.mc-option-multiple]","MC_LABEL_GLOBAL_OPTIONS","topCenter","topLeft","topRight","rightTop","rightBottom","bottomCenter","bottomLeft","bottomRight","leftTop","leftBottom","McIconCSSStyler","McIconBase","_McIconMixinBase","Empty","iconName","queries","McButtonBase","_McButtonMixinBase","_haltDisabledEvents"],"mappings":"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"}