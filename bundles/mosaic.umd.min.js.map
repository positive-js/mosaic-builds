{"version":3,"file":"mosaic.umd.min.js","sources":["../../src/lib/splitter/splitter.component.ts","../../src/lib/splitter/splitter.module.ts","../../src/lib/toggle/toggle.component.ts","../../src/lib/toggle/toggle.module.ts","../../src/lib/tooltip/tooltip.component.ts","../../src/lib/tooltip/tooltip.module.ts","../../src/lib/version.ts","../../src/lib/timepicker/timepicker.constants.ts","../../src/lib/select/select.component.ts","../../src/lib/timepicker/timepicker.ts","../../src/lib/timepicker/timepicker.module.ts","../../src/lib/select/select-animations.ts","../../src/lib/select/select.module.ts","../../src/lib/progress-spinner/progress-spinner.component.ts","../../src/lib/progress-spinner/progress-spinner.module.ts","../../src/lib/radio/radio.component.ts","../../src/lib/radio/radio.module.ts","../../src/lib/tree/node.ts","../../src/lib/tree/padding.ts","../../src/lib/tree/tree-selection.ts","../../src/lib/tree/tree.module.ts","../../src/lib/tree/data-source/flat-data-source.ts","../../src/lib/tree/data-source/nested-data-source.ts","../../src/lib/tag/tag.component.ts","../../src/lib/tag/tag.module.ts","../../src/lib/modal/modal.component.ts","../../src/lib/modal/css-unit.pipe.ts","../../src/lib/modal/modal.service.ts","../../src/lib/modal/modal.module.ts","../../src/lib/navbar/navbar.component.ts","../../src/lib/navbar/navbar.module.ts","../../src/lib/progress-bar/progress-bar.component.ts","../../src/lib/progress-bar/progress-bar.module.ts","../../src/lib/layout/layout.component.ts","../../src/lib/layout/sidebar.component.ts","../../src/lib/layout/layout.module.ts","../../src/lib/list/list-selection.component.ts","../../src/lib/list/list.component.ts","../../src/lib/list/list.module.ts","../../src/lib/link/link.component.ts","../../src/lib/link/link.module.ts","../../src/lib/modal/modal-control.service.ts","../../src/lib/modal/modal-ref.class.ts","../../src/lib/modal/modal-util.ts","../../src/lib/card/card.component.ts","../../src/lib/card/card.module.ts","../../src/lib/checkbox/checkbox-config.ts","../../src/lib/checkbox/checkbox.ts","../../src/lib/checkbox/checkbox-required-validator.ts","../../src/lib/checkbox/checkbox-module.ts","../../src/lib/divider/divider.component.ts","../../src/lib/divider/divider.module.ts","../../src/lib/form-field/cleaner.ts","../../src/lib/form-field/form-field-control.ts","../../src/lib/form-field/form-field-number-control.ts","../../src/lib/form-field/hint.ts","../../src/lib/form-field/prefix.ts","../../src/lib/form-field/stepper.ts","../../src/lib/form-field/suffix.ts","../../src/lib/form-field/form-field.ts","../../src/lib/form-field/form-field.module.ts","../../src/lib/input/input-value-accessor.ts","../../src/lib/input/stepperUtils.ts","../../src/lib/input/input.ts","../../src/lib/input/input-number-validators.ts","../../src/lib/input/input.module.ts","../../src/lib/layout/content.component.ts","../../src/lib/layout/footer.component.ts","../../src/lib/layout/header.component.ts","../../node_modules/tslib/tslib.es6.js","../../src/lib/core/utils/utils.ts","../../src/lib/core/common-behaviors/common-module.ts","../../src/lib/core/common-behaviors/disabled.ts","../../src/lib/core/common-behaviors/color.ts","../../src/lib/core/common-behaviors/tabindex.ts","../../src/lib/core/common-behaviors/error-state.ts","../../src/lib/core/option/option.ts","../../src/lib/core/overlay/overlay-position-map.ts","../../src/lib/form-field/form-field-errors.ts","../../src/lib/input/input-errors.ts","../../src/lib/select/select-errors.ts","../../src/lib/core/line/line.ts","../../src/lib/core/error/error-options.ts","../../src/lib/core/selection/pseudo-checkbox/pseudo-checkbox.ts","../../src/lib/core/selection/index.ts","../../src/lib/core/services/measure-scrollbar.service.ts","../../src/lib/core/option/optgroup.ts","../../src/lib/core/option/index.ts","../../src/lib/core/label/label-options.ts","../../src/lib/core/animation/fade-animations.ts","../../src/lib/icon/icon.component.ts","../../src/lib/icon/icon.module.ts","../../src/lib/button/button.component.ts","../../src/lib/button/button.module.ts"],"sourcesContent":["import {\n    ChangeDetectionStrategy,\n    Component,\n    Directive,\n    ElementRef,\n    Input,\n    NgZone, OnDestroy,\n    OnInit,\n    Renderer2,\n    ViewEncapsulation\n} from '@angular/core';\n\nimport { coerceBooleanProperty, coerceCssPixelValue, coerceNumberProperty } from '@ptsecurity/cdk/coercion';\n\n\ninterface IArea {\n    area: McSplitterAreaDirective;\n    index: number;\n    order: number;\n    initialSize: number;\n}\n\ninterface IPoint {\n    x: number;\n    y: number;\n}\n\n\nconst enum AttributeProperty {\n    Disabled = 'disabled'\n}\n\nconst enum Cursor {\n    Default = 'default',\n    ResizeColumn = 'col-resize',\n    ResizeRow = 'row-resize'\n}\n\nconst enum StyleProperty {\n    Cursor = 'cursor',\n    Flex = 'flex',\n    FlexBasis = 'flex-basis',\n    FlexDirection = 'flex-direction',\n    Height = 'height',\n    MaxWidth = 'max-width',\n    MinHeight = 'min-height',\n    MinWidth = 'minWidth',\n    OffsetHeight = 'offsetHeight',\n    OffsetWidth = 'offsetWidth',\n    Order = 'order',\n    Width = 'width'\n}\n\nconst enum State {\n    Disabled = 'disabled',\n    Horizontal = 'horizontal',\n    Vertical = 'vertical'\n}\n\nexport const enum Direction {\n    Horizontal = 'horizontal',\n    Vertical = 'vertical'\n}\n\n@Component({\n    selector: 'mc-splitter',\n    preserveWhitespaces: false,\n    styleUrls: ['splitter.css'],\n    templateUrl: './splitter.component.html',\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class McSplitterComponent implements OnInit {\n    readonly areas: IArea[] = [];\n\n    private _direction: Direction;\n    private _disabled: boolean = false;\n    private _gutterSize: number = 6;\n\n    private isDragging: boolean = false;\n\n    private readonly areaPositionDivider: number = 2;\n    private readonly listeners: (() => void)[] = [];\n\n    @Input()\n    set direction(direction: Direction) {\n        this._direction = direction;\n    }\n\n    get direction(): Direction {\n        return this._direction;\n    }\n\n    @Input()\n    set disabled(disabled: boolean) {\n        this._disabled = coerceBooleanProperty(disabled);\n    }\n\n    get disabled(): boolean {\n        return this._disabled;\n    }\n\n    @Input()\n    set gutterSize(gutterSize: number) {\n        const size = coerceNumberProperty(gutterSize);\n        this._gutterSize = size > 0 ? size : this.gutterSize;\n    }\n\n    get gutterSize(): number {\n        return this._gutterSize;\n    }\n\n    constructor(private elementRef: ElementRef,\n                private ngZone: NgZone,\n                private renderer: Renderer2) {}\n\n    addArea(area: McSplitterAreaDirective): void {\n        const index: number = this.areas.length;\n        const order: number = index * this.areaPositionDivider;\n        const size: number = area.getSize();\n\n        area.setOrder(order);\n\n        this.areas.push({\n            area,\n            index,\n            order,\n            initialSize: size\n        });\n    }\n\n    ngOnInit(): void {\n        if (!this.direction) {\n            this.direction = Direction.Horizontal;\n        }\n\n        this.setStyle(StyleProperty.FlexDirection, this.isVertical() ? 'column' : 'row');\n    }\n\n    onMouseDown(event: MouseEvent, leftAreaIndex: number, rightAreaIndex: number) {\n        if (this.disabled) {\n            return;\n        }\n\n        const leftArea = this.areas[leftAreaIndex];\n        const rightArea = this.areas[rightAreaIndex];\n\n        const startPoint: IPoint = {\n            x: event.screenX,\n            y: event.screenY\n        };\n\n        leftArea.initialSize = leftArea.area.getSize();\n        rightArea.initialSize = rightArea.area.getSize();\n\n        this.areas.forEach((item) => {\n            const size = item.area.getSize();\n            item.area.disableFlex();\n            item.area.setSize(size);\n        });\n\n        this.ngZone.runOutsideAngular(() => {\n            this.listeners.push(\n                this.renderer.listen(\n                    'document',\n                    'mouseup',\n                    () => this.onMouseUp()\n                )\n            );\n        });\n\n        this.ngZone.runOutsideAngular(() => {\n            this.listeners.push(\n                this.renderer.listen(\n                    'document',\n                    'mousemove',\n                    (e: MouseEvent) => this.onMouseMove(e, startPoint, leftArea, rightArea)\n                )\n            );\n        });\n\n        this.isDragging = true;\n    }\n\n    removeArea(area: McSplitterAreaDirective): void {\n        let indexToRemove: number = -1;\n\n        this.areas.some((item, index) => {\n            if (item.area === area) {\n                indexToRemove = index;\n\n                return true;\n            }\n\n            return false;\n        });\n\n        if (indexToRemove === -1) {\n            return;\n        }\n\n        this.areas.splice(indexToRemove, 1);\n    }\n\n    private isVertical(): boolean {\n        return this.direction === Direction.Vertical;\n    }\n\n    private onMouseMove(event: MouseEvent, startPoint: IPoint, leftArea: IArea, rightArea: IArea) {\n        if (!this.isDragging || this.disabled) {\n            return;\n        }\n\n        const endPoint: IPoint = {\n            x: event.screenX,\n            y: event.screenY\n        };\n\n        const offset = this.isVertical()\n            ? startPoint.y - endPoint.y\n            : startPoint.x - endPoint.x;\n\n        const newLeftAreaSize = leftArea.initialSize - offset;\n        const newRightAreaSize = rightArea.initialSize + offset;\n\n        const minLeftAreaSize = leftArea.area.getMinSize();\n        const minRightAreaSize = rightArea.area.getMinSize();\n\n        if (newLeftAreaSize <= minLeftAreaSize || newRightAreaSize <= minRightAreaSize) {\n            const rightAreaOffset = leftArea.initialSize - minLeftAreaSize;\n\n            leftArea.area.setSize(minLeftAreaSize);\n            rightArea.area.setSize(rightArea.initialSize + rightAreaOffset);\n        } else if (newLeftAreaSize <= 0) {\n            leftArea.area.setSize(0);\n            rightArea.area.setSize(rightArea.initialSize + leftArea.initialSize);\n        } else if (newRightAreaSize <= 0) {\n            leftArea.area.setSize(rightArea.initialSize + leftArea.initialSize);\n            rightArea.area.setSize(0);\n        } else {\n            leftArea.area.setSize(newLeftAreaSize);\n            rightArea.area.setSize(newRightAreaSize);\n        }\n    }\n\n    private onMouseUp() {\n        while (this.listeners.length > 0) {\n            const unsubscribe = this.listeners.pop();\n\n            if (unsubscribe) {\n                unsubscribe();\n            }\n        }\n\n        this.isDragging = false;\n    }\n\n    private setStyle(property: StyleProperty, value: string | number) {\n        this.renderer.setStyle(this.elementRef.nativeElement, property, value);\n    }\n}\n\n@Directive({\n    selector: 'mc-gutter'\n})\nexport class McGutterDirective implements OnInit {\n    private _direction: Direction = Direction.Vertical;\n    private _disabled: boolean = false;\n    private _order: number = 0;\n    private _size: number = 6;\n\n    @Input()\n    set direction(direction: Direction) {\n        this._direction = direction;\n    }\n\n    get direction(): Direction {\n        return this._direction;\n    }\n\n    @Input()\n    set disabled(disabled: boolean) {\n        this._disabled = coerceBooleanProperty(disabled);\n    }\n\n    get disabled(): boolean {\n        return this._disabled;\n    }\n\n    @Input()\n    set order(order: number) {\n        this._order = coerceNumberProperty(order);\n    }\n\n    get order(): number {\n        return this._order;\n    }\n\n    @Input()\n    set size(size: number) {\n        this._size = coerceNumberProperty(size);\n    }\n\n    get size(): number {\n        return this._size;\n    }\n\n    constructor(private renderer: Renderer2,\n                private elementRef: ElementRef) {\n    }\n\n    ngOnInit(): void {\n        this.setStyle(StyleProperty.Cursor, this.getCursor(this.getState()));\n        this.setStyle(StyleProperty.FlexBasis, coerceCssPixelValue(this.size));\n        this.setStyle(this.isVertical() ? StyleProperty.Height : StyleProperty.Width, coerceCssPixelValue(this.size));\n        this.setStyle(StyleProperty.Order, this.order);\n\n        if (!this.isVertical()) {\n            this.setStyle(StyleProperty.Height, '100%');\n        }\n\n        if (this.disabled) {\n            this.setAttr(AttributeProperty.Disabled, 'true');\n        }\n\n        // fix IE issue with gutter icon. flex-direction is requied for flex alignment options\n        this.setStyle(StyleProperty.FlexDirection, this.isVertical() ? 'row' : 'column');\n    }\n\n    private isVertical(): boolean {\n        return this.direction === Direction.Vertical;\n    }\n\n    private getCursor(state: State): string {\n        switch (state) {\n            case State.Disabled:\n                return Cursor.Default;\n            case State.Vertical:\n                return  Cursor.ResizeRow;\n            case State.Horizontal:\n                return Cursor.ResizeColumn;\n            default:\n                throw Error(`Unknown gutter state for cursor: ${state}`);\n        }\n    }\n\n    private getState(): State {\n        return this.disabled\n            ? State.Disabled\n            : this.direction === Direction.Vertical\n                ? State.Vertical\n                : State.Horizontal;\n    }\n\n    private setStyle(property: StyleProperty, value: string | number) {\n        this.renderer.setStyle(this.elementRef.nativeElement, property, value);\n    }\n\n    private setAttr(attribute: AttributeProperty, value: string) {\n        this.renderer.setAttribute(this.elementRef.nativeElement, attribute, value);\n    }\n}\n\n@Directive({\n    selector: 'mc-splitter-area'\n})\nexport class McSplitterAreaDirective implements OnInit, OnDestroy {\n    constructor(private elementRef: ElementRef,\n                private renderer: Renderer2,\n                private splitter: McSplitterComponent) {}\n\n    disableFlex(): void {\n        this.renderer.removeStyle(this.elementRef.nativeElement, 'flex');\n    }\n\n    ngOnInit(): void {\n        this.splitter.addArea(this);\n\n        this.removeStyle(StyleProperty.MaxWidth);\n        this.setStyle(StyleProperty.Flex, '1');\n\n        if (this.splitter.direction === Direction.Vertical) {\n            this.setStyle(StyleProperty.Width, '100%');\n            this.removeStyle(StyleProperty.Height);\n        } else {\n            this.setStyle(StyleProperty.Height, '100%');\n            this.removeStyle(StyleProperty.Width);\n        }\n    }\n\n    ngOnDestroy(): void {\n        this.splitter.removeArea(this);\n    }\n\n    setOrder(order: number): void {\n        this.setStyle(StyleProperty.Order, order);\n    }\n\n    setSize(size: number): void {\n        const sz = coerceNumberProperty(size);\n        this.setStyle(this.getSizeProperty(), coerceCssPixelValue(sz));\n    }\n\n    getSize(): number {\n        return this.elementRef.nativeElement[this.getOffsetSizeProperty()];\n    }\n\n    getMinSize(): number {\n        const styles = getComputedStyle(this.elementRef.nativeElement);\n\n        return parseFloat(styles[this.getMinSizeProperty()]);\n    }\n\n    private isVertical(): boolean {\n        return this.splitter.direction === Direction.Vertical;\n    }\n\n    private getMinSizeProperty(): StyleProperty {\n        return this.isVertical()\n            ? StyleProperty.MinHeight\n            : StyleProperty.MinWidth;\n    }\n\n    private getOffsetSizeProperty(): StyleProperty {\n        return this.isVertical()\n            ? StyleProperty.OffsetHeight\n            : StyleProperty.OffsetWidth;\n    }\n\n    private getSizeProperty(): StyleProperty {\n        return this.isVertical()\n            ? StyleProperty.Height\n            : StyleProperty.Width;\n    }\n\n    private setStyle(style: StyleProperty, value: string | number) {\n        this.renderer.setStyle(this.elementRef.nativeElement, style, value);\n    }\n\n    private removeStyle(style: StyleProperty) {\n        this.renderer.removeStyle(this.elementRef.nativeElement, style);\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { McIconModule } from '@ptsecurity/mosaic/icon';\n\nimport { McGutterDirective, McSplitterAreaDirective, McSplitterComponent } from './splitter.component';\n\n\n@NgModule({\n    imports: [\n        CommonModule,\n        McIconModule\n    ],\n    exports: [\n        McGutterDirective,\n        McSplitterAreaDirective,\n        McSplitterComponent\n    ],\n    declarations: [\n        McGutterDirective,\n        McSplitterAreaDirective,\n        McSplitterComponent\n    ]\n})\nexport class McSplitterModule {\n}\n","// tslint:disable:no-empty\nimport { animate, state, style, transition, trigger } from '@angular/animations';\nimport {\n    Attribute,\n    ChangeDetectionStrategy, ChangeDetectorRef,\n    Component,\n    ElementRef, EventEmitter, forwardRef,\n    Input, Output, ViewChild,\n    ViewEncapsulation\n} from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { FocusMonitor } from '@ptsecurity/cdk/a11y';\nimport {\n    ThemePalette,\n    CanColor, CanColorCtor,\n    CanDisable, CanDisableCtor,\n    HasTabIndex, HasTabIndexCtor,\n    mixinColor,\n    mixinDisabled,\n    mixinTabIndex\n} from '@ptsecurity/mosaic/core';\n\n\nlet nextUniqueId = 0;\n\ntype ToggleLabelPositionType = 'left' | 'right';\n\nexport class McToggleBase {\n    constructor(public _elementRef: ElementRef) {}\n}\n\nexport const _McToggleMixinBase:\n    HasTabIndexCtor &\n    CanDisableCtor &\n    CanColorCtor &\n    typeof McToggleBase = mixinTabIndex(mixinColor(mixinDisabled(McToggleBase)));\n\nexport class McToggleChange {\n    source: McToggleComponent;\n    checked: boolean;\n}\n\n@Component({\n    selector: 'mc-toggle',\n    exportAs: 'mcToggle',\n    templateUrl: './toggle.component.html',\n    styleUrls: ['./toggle.css'],\n    providers: [\n        {provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => McToggleComponent), multi: true}\n    ],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n    inputs: ['disabled', 'color', 'tabIndex'],\n    host: {\n        '[id]': 'id',\n        '[attr.id]': 'id',\n        '[class.mc-disabled]': 'disabled',\n        '[class.mc-toggle-off]': '!checked'\n    },\n    animations: [\n        trigger('switch', [\n            state('true' , style({ left: '50%' })),\n            state('false', style({ left: '1px' })),\n            transition('true <=> false', animate('150ms'))\n        ])\n    ]\n})\nexport class McToggleComponent extends _McToggleMixinBase\n    implements ControlValueAccessor, CanColor, CanDisable, HasTabIndex {\n\n    color: ThemePalette = ThemePalette.Primary;\n\n    @ViewChild('input') _inputElement: ElementRef;\n\n    @Input() labelPosition: ToggleLabelPositionType = 'right';\n\n    @Input('aria-label') ariaLabel: string = '';\n    @Input('aria-labelledby') ariaLabelledby: string | null = null;\n\n    private _uniqueId: string = `mc-toggle-${++nextUniqueId}`;\n\n    // tslint:disable:member-ordering\n    @Input() id: string = this._uniqueId;\n\n    get inputId(): string {\n        return `${this.id || this._uniqueId}-input`;\n    }\n\n    @Input() name: string | null = null;\n\n    @Input() value: string;\n\n    private _disabled: boolean = false;\n\n    @Input()\n    get disabled() {\n        return this._disabled;\n    }\n\n    set disabled(value: any) {\n        if (value !== this._disabled) {\n            this._disabled = value;\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n\n    private _checked: boolean = false;\n\n    get checked() {\n        return this._checked;\n    }\n\n    @Input()\n    set checked(value: boolean) {\n        if (value !== this._checked) {\n            this._checked = value;\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n\n    @Output() readonly change: EventEmitter<McToggleChange> =\n        new EventEmitter<McToggleChange>();\n\n    constructor(public _elementRef: ElementRef,\n                private _focusMonitor: FocusMonitor,\n                private _changeDetectorRef: ChangeDetectorRef,\n                @Attribute('tabindex') tabIndex: string\n    ) {\n        super(_elementRef);\n\n        this.tabIndex = parseInt(tabIndex) || 0;\n\n        this._focusMonitor.monitor(this._elementRef.nativeElement, true);\n    }\n\n    ngOnDestroy() {\n        this._focusMonitor.stopMonitoring(this._elementRef.nativeElement);\n    }\n\n    focus(): void {\n        this._focusMonitor.focusVia(this._inputElement.nativeElement, 'keyboard');\n    }\n\n    _getAriaChecked(): boolean {\n        return this.checked;\n    }\n\n    _onInteractionEvent(event: Event) {\n        event.stopPropagation();\n    }\n\n    _onLabelTextChange() {\n        this._changeDetectorRef.markForCheck();\n    }\n\n    _onInputClick(event: MouseEvent) {\n        event.stopPropagation();\n        this._updateModelValue();\n        this._emitChangeEvent();\n    }\n\n    writeValue(value: any) {\n        this.checked = !!value;\n    }\n\n    registerOnChange(fn: any) {\n        this._onChangeCallback = fn;\n    }\n\n    registerOnTouched(fn: any) {\n        this._onTouchedCallback = fn;\n    }\n\n    setDisabledState(isDisabled: boolean) {\n        this.disabled = isDisabled;\n    }\n\n    private _onTouchedCallback = () => {};\n\n    private _onChangeCallback = (_: any) => {};\n\n    private _updateModelValue() {\n        this._checked = !this.checked;\n        this._onChangeCallback(this.checked);\n        this._onTouchedCallback();\n    }\n\n    private _emitChangeEvent() {\n        const event = new McToggleChange();\n        event.source = this;\n        event.checked = this.checked;\n\n        this._onChangeCallback(this.checked);\n        this.change.emit(event);\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { A11yModule } from '@ptsecurity/cdk/a11y';\nimport { McCommonModule } from '@ptsecurity/mosaic/core';\n\nimport { McToggleComponent } from './toggle.component';\n\n\n@NgModule({\n    imports: [CommonModule, BrowserAnimationsModule, A11yModule, McCommonModule],\n    exports: [McToggleComponent],\n    declarations: [McToggleComponent]\n})\nexport class McToggleModule {\n}\n","import {\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    Directive,\n    ElementRef,\n    EventEmitter,\n    HostBinding,\n    Inject,\n    InjectionToken,\n    Input,\n    NgZone,\n    OnDestroy,\n    OnInit,\n    Optional,\n    Output,\n    TemplateRef,\n    ViewContainerRef,\n    ViewEncapsulation\n} from '@angular/core';\nimport { Directionality } from '@ptsecurity/cdk/bidi';\nimport { coerceBooleanProperty } from '@ptsecurity/cdk/coercion';\nimport { ESCAPE } from '@ptsecurity/cdk/keycodes';\nimport {\n    ConnectedOverlayPositionChange,\n    ConnectionPositionPair,\n    Overlay,\n    OverlayRef,\n    ScrollDispatcher,\n    IScrollStrategy,\n    FlexibleConnectedPositionStrategy,\n    IOverlayConnectionPosition,\n    IOriginConnectionPosition,\n    HorizontalConnectionPos,\n    VerticalConnectionPos\n} from '@ptsecurity/cdk/overlay';\nimport { ComponentPortal } from '@ptsecurity/cdk/portal';\nimport {\n    fadeAnimation,\n    DEFAULT_4_POSITIONS,\n    POSITION_MAP\n} from '@ptsecurity/mosaic/core';\nimport { BehaviorSubject, Observable, Subject } from 'rxjs';\nimport { distinctUntilChanged, takeUntil } from 'rxjs/operators';\n\n\n@Component({\n    selector: 'mc-tooltip',\n    animations: [ fadeAnimation ],\n    templateUrl: './tooltip.component.html',\n    preserveWhitespaces: false,\n    styleUrls: ['./tooltip.css'],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    host: {\n        '(body:click)': 'this._handleBodyInteraction()'\n    }\n})\n\nexport class McToolTipComponent {\n    _prefix = 'mc-tooltip_placement';\n    _positions: ConnectionPositionPair[] = [ ...DEFAULT_4_POSITIONS ];\n    _classMap = {};\n    _placement = 'top';\n    _trigger = 'hover';\n    isTitleString: boolean;\n    visibleSource = new BehaviorSubject<boolean>(false);\n    $visible: Observable<boolean> = this.visibleSource.asObservable();\n    _title: string | TemplateRef<void>;\n    showTId: number;\n    hideTId: number;\n    availablePositions: any;\n\n    @Output() mcVisibleChange: EventEmitter<boolean> = new EventEmitter();\n\n    @Input() mcMouseEnterDelay = 400;\n\n    @Input() mcMouseLeaveDelay = 0;\n\n    @Input()\n    set mcTitle(value: string | TemplateRef<void>) {\n        this.isTitleString = !(value instanceof TemplateRef);\n\n        if (this.isTitleString) {\n            this._title = value;\n        }\n    }\n\n    get mcTitle(): string | TemplateRef<void> {\n        return this._title;\n    }\n\n    @Input()\n    set mcVisible(value: boolean) {\n        const visible = coerceBooleanProperty(value);\n\n        if (this.visibleSource.value !== visible) {\n            this.visibleSource.next(visible);\n            this.mcVisibleChange.emit(visible);\n        }\n    }\n\n    get mcVisible(): boolean {\n        return this.visibleSource.value;\n    }\n\n    @Input()\n    set mcTrigger(value: string) {\n        this._trigger = value;\n    }\n\n    get mcTrigger(): string {\n        return this._trigger;\n    }\n\n    @Input()\n    set mcPlacement(value: string) {\n        if (value !== this._placement) {\n            this._placement = value;\n            this._positions.unshift(POSITION_MAP[ this.mcPlacement ]);\n        } else if (!value) {\n            this._placement = 'top';\n        }\n    }\n    get mcPlacement(): string {\n        return this._placement;\n    }\n\n    /** Subject for notifying that the tooltip has been hidden from the view */\n    private readonly _onHide: Subject<any> = new Subject();\n    private _closeOnInteraction: boolean = false;\n\n    constructor(public cdr: ChangeDetectorRef) {\n        this.availablePositions = POSITION_MAP;\n    }\n\n    show(): void {\n        if (this.hideTId) {\n            clearTimeout(this.hideTId);\n        }\n\n        if (!this.isContentEmpty()) {\n            this._closeOnInteraction = true;\n            this.showTId = setTimeout(() => {\n                this.mcVisible = true;\n                this.mcVisibleChange.emit(true);\n\n                // Mark for check so if any parent component has set the\n                // ChangeDetectionStrategy to OnPush it will be checked anyways\n                this._markForCheck();\n            }, this.mcMouseEnterDelay);\n        }\n    }\n\n    hide(): void {\n        if (this.showTId) {\n            clearTimeout(this.showTId);\n        }\n\n        this.hideTId = setTimeout(() => {\n            this.mcVisible = false;\n            this.mcVisibleChange.emit(false);\n            this._onHide.next();\n\n            // Mark for check so if any parent component has set the\n            // ChangeDetectionStrategy to OnPush it will be checked anyways\n            this._markForCheck();\n        }, this.mcMouseLeaveDelay);\n    }\n\n    setClassMap(): void {\n        this._classMap = {\n            [ `${this._prefix}-${this._placement}` ]: true\n        };\n    }\n\n    isContentEmpty(): boolean {\n        return this.isTitleString ? (this.mcTitle === '' || !this.mcTitle) : false;\n    }\n\n    /** Returns an observable that notifies when the tooltip has been hidden from view. */\n    afterHidden(): Observable<void> {\n        return this._onHide.asObservable();\n    }\n\n    _markForCheck(): void {\n        this.cdr.markForCheck();\n    }\n\n    _handleBodyInteraction(): void {\n        if (this._closeOnInteraction) {\n            this.hide();\n        }\n    }\n}\n\nexport const MC_TOOLTIP_SCROLL_STRATEGY =\n    new InjectionToken<() => IScrollStrategy>('mc-tooltip-scroll-strategy');\n\n/** @docs-private */\nexport function MC_TOOLTIP_SCROLL_STRATEGY_FACTORY(overlay: Overlay): () => IScrollStrategy {\n    return () => overlay.scrollStrategies.reposition({scrollThrottle: 20});\n}\n\n/** @docs-private */\nexport const MC_TOOLTIP_SCROLL_STRATEGY_FACTORY_PROVIDER = {\n    provide: MC_TOOLTIP_SCROLL_STRATEGY,\n    deps: [Overlay],\n    useFactory: MC_TOOLTIP_SCROLL_STRATEGY_FACTORY\n};\n\n/** Creates an error to be thrown if the user supplied an invalid tooltip position. */\nexport function getMcTooltipInvalidPositionError(position: string) {\n    return Error(`McTooltip position \"${position}\" is invalid.`);\n}\n\nconst VIEWPORT_MARGIN: number = 8;\n\n@Directive({\n    selector: '[mc-tooltip]',\n    host: {\n        '(keydown)': 'handleKeydown($event)',\n        '(touchend)': 'handleTouchend()'\n    }\n})\n\nexport class McTooltipDirective implements OnInit, OnDestroy {\n    isTooltipOpen: boolean = false;\n    isDynamicTooltip = false;\n    parentDisabled: boolean = false;\n    _title: string;\n    _disabled: boolean = false;\n    _mouseEnterDelay: number;\n    _mouseLeaveDelay: number;\n    _visible: boolean;\n    _trigger: string = 'hover';\n    _placement: string = 'top';\n    _overlayRef: OverlayRef | null;\n    _portal: ComponentPortal<McToolTipComponent>;\n    availablePositions: any;\n    tooltip: McToolTipComponent | null;\n\n    @Output() mcVisibleChange = new EventEmitter<boolean>();\n    private $unsubscribe = new Subject<void>();\n\n    @Input('mc-tooltip')\n    set mcTitle(title: string) {\n        this._title = title;\n        this.updateCompValue('mcTitle', title);\n    }\n\n    get mcTitle(): string {\n        return this._title;\n    }\n\n    @Input('mcTitle')\n    set setTitle(title: string) {\n        this.mcTitle = title;\n    }\n\n    @Input('mcTooltipDisabled')\n    get disabled(): boolean { return this._disabled; }\n    set disabled(value) {\n        this._disabled = coerceBooleanProperty(value);\n    }\n\n    @Input('mcMouseEnterDelay')\n    set mcMouseEnterDelay(value: number) {\n        this._mouseEnterDelay = value;\n        this.updateCompValue('mcMouseEnterDelay', value);\n    }\n\n    get mcMouseEnterDelay(): number {\n        return this._mouseEnterDelay;\n    }\n\n    @Input('mcMouseLeaveDelay')\n    set mcMouseLeaveDelay(value: number) {\n        this._mouseLeaveDelay = value;\n        this.updateCompValue('mcMouseLeaveDelay', value);\n    }\n\n    get mcMouseLeaveDelay(): number {\n        return this._mouseEnterDelay;\n    }\n\n    @Input('mcVisible')\n    set mcVisible(value: boolean) {\n        this._visible = value;\n        this.updateCompValue('mcVisible', value);\n    }\n\n    get mcVisible(): boolean {\n        return this._visible;\n    }\n\n    @Input('mcTrigger')\n    set mcTrigger(value: string) {\n        this._trigger = value;\n        this.updateCompValue('mcTrigger', value);\n    }\n\n    get mcTrigger(): string {\n        return this._trigger;\n    }\n\n    @Input('mcPlacement')\n    set mcPlacement(value: string) {\n        if (value) {\n            this._placement = value;\n            this.updateCompValue('mcPlacement', value);\n        } else {\n            this._placement = 'top';\n        }\n    }\n\n    get mcPlacement(): string {\n        return this._placement;\n    }\n\n    @HostBinding('class.mc-tooltip-open')\n    get isOpen(): boolean {\n        return this.isTooltipOpen;\n    }\n\n    @HostBinding('class.disabled')\n    get isParentDisabled(): boolean {\n        return this.parentDisabled;\n    }\n\n    private manualListeners = new Map<string, EventListenerOrEventListenerObject>();\n    private readonly _destroyed = new Subject<void>();\n\n    constructor(\n        private _overlay: Overlay,\n        private elementRef: ElementRef,\n        private _ngZone: NgZone,\n        private _scrollDispatcher: ScrollDispatcher,\n        private hostView: ViewContainerRef,\n        @Inject(MC_TOOLTIP_SCROLL_STRATEGY) private _scrollStrategy,\n        @Optional() private _dir: Directionality) {\n            this.availablePositions = POSITION_MAP;\n        }\n\n    /** Create the overlay config and position strategy */\n    _createOverlay(): OverlayRef {\n        if (this._overlayRef) {\n            return this._overlayRef;\n        }\n\n        // Create connected position strategy that listens for scroll events to reposition.\n        const strategy = this._overlay.position()\n            .flexibleConnectedTo(this.elementRef)\n            .withTransformOriginOn('.mc-tooltip')\n            .withFlexibleDimensions(false)\n            .withViewportMargin(VIEWPORT_MARGIN)\n            .withPositions([ ...DEFAULT_4_POSITIONS ]);\n\n        const scrollableAncestors = this._scrollDispatcher\n            .getAncestorScrollContainers(this.elementRef);\n\n        strategy.withScrollableContainers(scrollableAncestors);\n\n        strategy.positionChanges.pipe(takeUntil(this._destroyed)).subscribe((change) => {\n            if (this.tooltip) {\n                this.onPositionChange(change);\n                if (change.scrollableViewProperties.isOverlayClipped && this.tooltip.mcVisible) {\n                    // After position changes occur and the overlay is clipped by\n                    // a parent scrollable then close the tooltip.\n                    this._ngZone.run(() => this.hide());\n                }\n            }\n        });\n\n        this._overlayRef = this._overlay.create({\n            direction: this._dir,\n            positionStrategy: strategy,\n            panelClass: 'mc-tooltip-panel',\n            scrollStrategy: this._scrollStrategy()\n        });\n\n        this._updatePosition();\n\n        this._overlayRef.detachments()\n            .pipe(takeUntil(this._destroyed))\n            .subscribe(() => this._detach());\n\n        return this._overlayRef;\n    }\n\n    _detach() {\n        if (this._overlayRef && this._overlayRef.hasAttached()) {\n            this._overlayRef.detach();\n        }\n\n        this.tooltip = null;\n    }\n\n    onPositionChange($event: ConnectedOverlayPositionChange): void {\n        let updatedPlacement = this.mcPlacement;\n        Object.keys(this.availablePositions).some((key) => {\n            if ($event.connectionPair.originX === this.availablePositions[key].originX &&\n                $event.connectionPair.originY === this.availablePositions[key].originY &&\n                $event.connectionPair.overlayX === this.availablePositions[key].overlayX &&\n                $event.connectionPair.overlayY === this.availablePositions[key].overlayY) {\n                updatedPlacement = key;\n\n                return true;\n            }\n\n            return false;\n        });\n        this.updateCompValue('mcPlacement', updatedPlacement);\n\n        if (this.tooltip) {\n            this.tooltip.setClassMap();\n        }\n\n        this.handlePositioningUpdate();\n    }\n\n    handlePositioningUpdate() {\n        if (!this._overlayRef) {\n            this._overlayRef = this._createOverlay();\n        }\n        if (this.mcPlacement === 'right' || this.mcPlacement === 'left') {\n            const pos =\n                (this._overlayRef.overlayElement.clientHeight -\n                    this.hostView.element.nativeElement.clientHeight) / 2; // tslint:disable-line\n            const currentContainer = this._overlayRef.overlayElement.style.top || '0px';\n            this._overlayRef.overlayElement.style.top =\n                `${parseInt(currentContainer.split('px')[0], 10) + pos - 1}px`;\n            // TODO: обновлять положение стрелки\\указателя\\\"дятла\"\n        }\n    }\n\n    // tslint:disable-next-line:no-any\n    updateCompValue(key: string, value: any): void {\n        if (this.isDynamicTooltip && value) {\n            if (this.tooltip) {\n                this.tooltip[key] = value;\n            }\n        }\n    }\n\n    ngOnInit(): void {\n        if (this.mcTrigger === 'hover') {\n\n            this.manualListeners\n                .set('mouseenter', () => this.show())\n                .set('mouseleave', () => this.hide())\n                .forEach((listener, event) => this.elementRef.nativeElement.addEventListener(event, listener));\n        }\n\n        if (this.mcTrigger === 'focus') {\n\n            this.manualListeners\n                .set('focus', () => this.show())\n                .set('blur', () => this.hide())\n                .forEach((listener, event) => this.elementRef.nativeElement.addEventListener(event, listener));\n        }\n    }\n\n    ngOnDestroy(): void {\n        if (this._overlayRef) {\n            this._overlayRef.dispose();\n        }\n        this.manualListeners.forEach((listener, event) =>\n            this.elementRef.nativeElement.removeEventListener(event, listener));\n        this.manualListeners.clear();\n\n        this.$unsubscribe.next();\n        this.$unsubscribe.complete();\n    }\n\n    handleKeydown(e: KeyboardEvent) {\n        if (this.isTooltipOpen && e.keyCode === ESCAPE) { // tslint:disable-line\n            this.hide();\n        }\n    }\n\n    handleTouchend() {\n        this.hide();\n    }\n\n    /** Updates the position of the current tooltip. */\n    _updatePosition() {\n        if (!this._overlayRef) {\n            this._overlayRef = this._createOverlay();\n        }\n        const position =\n            this._overlayRef.getConfig().positionStrategy as FlexibleConnectedPositionStrategy;\n        const origin = this._getOrigin();\n        const overlay = this._getOverlayPosition();\n\n        position.withPositions([\n            {...origin.main, ...overlay.main},\n            {...origin.fallback, ...overlay.fallback}\n        ]);\n    }\n\n    /**\n     * Returns the origin position and a fallback position based on the user's position preference.\n     * The fallback position is the inverse of the origin (e.g. `'below' -> 'above'`).\n     */\n    _getOrigin(): {main: IOriginConnectionPosition; fallback: IOriginConnectionPosition} {\n        const position = this.mcPlacement;\n        const isLtr = !this._dir || this._dir.value === 'ltr';\n        let originPosition: IOriginConnectionPosition;\n\n        if (position === 'top' || position === 'bottom') {\n            originPosition = {originX: 'center', originY: position === 'top' ? 'top' : 'bottom'};\n        } else if (\n            position === 'top' ||\n            (position === 'left' && isLtr) ||\n            (position === 'right' && !isLtr)) {\n            originPosition = {originX: 'start', originY: 'center'};\n        } else if (\n            position === 'bottom' ||\n            (position === 'right' && isLtr) ||\n            (position === 'left' && !isLtr)) {\n            originPosition = {originX: 'end', originY: 'center'};\n        } else {\n            throw getMcTooltipInvalidPositionError(position);\n        }\n\n        const {x, y} = this._invertPosition(originPosition.originX, originPosition.originY);\n\n        return {\n            main: originPosition,\n            fallback: {originX: x, originY: y}\n        };\n    }\n\n    /** Returns the overlay position and a fallback position based on the user's preference */\n    _getOverlayPosition(): {main: IOverlayConnectionPosition; fallback: IOverlayConnectionPosition} {\n        const position = this.mcPlacement;\n        const isLtr = !this._dir || this._dir.value === 'ltr';\n        let overlayPosition: IOverlayConnectionPosition;\n\n        if (position === 'top') {\n            overlayPosition = {overlayX: 'center', overlayY: 'bottom'};\n        } else if (position === 'bottom') {\n            overlayPosition = {overlayX: 'center', overlayY: 'top'};\n        } else if (\n            position === 'top' ||\n            (position === 'left' && isLtr) ||\n            (position === 'right' && !isLtr)) {\n            overlayPosition = {overlayX: 'end', overlayY: 'center'};\n        } else if (\n            position === 'bottom' ||\n            (position === 'right' && isLtr) ||\n            (position === 'left' && !isLtr)) {\n            overlayPosition = {overlayX: 'start', overlayY: 'center'};\n        } else {\n            throw getMcTooltipInvalidPositionError(position);\n        }\n\n        const {x, y} = this._invertPosition(overlayPosition.overlayX, overlayPosition.overlayY);\n\n        return {\n            main: overlayPosition,\n            fallback: {overlayX: x, overlayY: y}\n        };\n    }\n\n    /** Inverts an overlay position. */\n    private _invertPosition(x: HorizontalConnectionPos, y: VerticalConnectionPos) {\n        let newX: HorizontalConnectionPos = x;\n        let newY: VerticalConnectionPos = y;\n        if (this.mcPlacement === 'top' || this.mcPlacement === 'bottom') {\n            if (y === 'top') {\n                newY = 'bottom';\n            } else if (y === 'bottom') {\n                newY = 'top';\n            }\n        } else {\n            if (x === 'end') {\n                newX = 'start';\n            } else if (x === 'start') {\n                newX = 'end';\n            }\n        }\n\n        return {x: newX, y: newY};\n    }\n\n    private show(): void {\n        if (!this.disabled) {\n            if (!this.tooltip) {\n                const overlayRef = this._createOverlay();\n                this._detach();\n                this._portal = this._portal || new ComponentPortal(McToolTipComponent, this.hostView);\n                this.tooltip = overlayRef.attach(this._portal).instance;\n                this.tooltip.afterHidden()\n                    .pipe(takeUntil(this._destroyed))\n                    .subscribe(() => this._detach());\n                this.isDynamicTooltip = true;\n                const properties = [\n                    'mcTitle',\n                    'mcMouseEnterDelay',\n                    'mcMouseLeaveDelay',\n                    'mcVisible',\n                    'mcTrigger',\n                    'mcPlacement' ];\n                properties.forEach((property) => this.updateCompValue(property, this[ property ]));\n                this.tooltip.mcVisibleChange.pipe(takeUntil(this.$unsubscribe), distinctUntilChanged())\n                    .subscribe((data) => {\n                        this._visible = data;\n                        this.mcVisibleChange.emit(data);\n                    });\n            }\n            this._updatePosition();\n            this.tooltip.show();\n            this.isTooltipOpen = true;\n        }\n    }\n\n    private hide(): void {\n        if (this.tooltip) {\n            this.tooltip.hide();\n            this.isTooltipOpen = false;\n        }\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { OverlayModule } from '@ptsecurity/cdk/overlay';\n\nimport {\n    McToolTipComponent,\n    McTooltipDirective,\n    MC_TOOLTIP_SCROLL_STRATEGY_FACTORY_PROVIDER\n} from './tooltip.component';\n\n\n@NgModule({\n    declarations: [ McToolTipComponent, McTooltipDirective ],\n    exports: [ McToolTipComponent, McTooltipDirective ],\n    imports: [ BrowserAnimationsModule, CommonModule, OverlayModule ],\n    providers: [MC_TOOLTIP_SCROLL_STRATEGY_FACTORY_PROVIDER],\n    entryComponents: [ McToolTipComponent ]\n})\nexport class McToolTipModule {\n}\n","import { Version } from '@angular/core';\n\n\nexport const VERSION = new Version('0.0.1-33e1fb0');\n","export enum TimeParts {\n    hours,\n    minutes,\n    seconds\n}\n\nexport enum TimeFormats {\n    HHmmss = 'HH:mm:ss',\n    HHmm = 'HH:mm'\n}\n\nexport const TIMEFORMAT_PLACEHOLDERS: { [timeFormat: string]: string } = {\n    [TimeFormats.HHmmss]: '  :  :  ',\n    [TimeFormats.HHmm]: '  :  '\n};\n\nexport const DEFAULT_TIME_FORMAT: TimeFormats = TimeFormats.HHmm;\n\nexport const HOURS_MINUTES_SECONDS_REGEXP =\n    new RegExp(/^([0-9]|0[0-9]|1[0-9]|2[0-3]):([0-5][0-9]|[0-9]):([0-5][0-9]|[0-9])?$/);\nexport const HOURS_MINUTES_REGEXP = /^([0-9]|0[0-9]|1[0-9]|2[0-3]):([0-5][0-9]|[0-9])?$/;\nexport const HOURS_ONLY_REGEXP = /^([0-9]|0[0-9]|1[0-9]|2[0-3]):?$/;\n\nexport const SECONDS_PER_MINUTE: number = 59;\nexport const MINUTES_PER_HOUR: number = 59;\nexport const HOURS_PER_DAY: number = 23;\n\n// TODO Move it to common CDK\nexport const ARROW_UP_KEYCODE: string = 'ArrowUp';\nexport const ARROW_DOWN_KEYCODE: string = 'ArrowDown';\nexport const ARROW_LEFT_KEYCODE: string = 'ArrowLeft';\nexport const ARROW_RIGHT_KEYCODE: string = 'ArrowRight';\n","/* tslint:disable:no-empty */\n\nimport { ActiveDescendantKeyManager } from '@ptsecurity/cdk/a11y';\nimport { Directionality } from '@ptsecurity/cdk/bidi';\nimport { coerceBooleanProperty } from '@ptsecurity/cdk/coercion';\nimport { SelectionModel } from '@ptsecurity/cdk/collections';\nimport {\n    DOWN_ARROW,\n    END,\n    ENTER,\n    HOME,\n    LEFT_ARROW,\n    RIGHT_ARROW,\n    SPACE,\n    UP_ARROW,\n    A\n} from '@ptsecurity/cdk/keycodes';\nimport {\n    CdkConnectedOverlay,\n    Overlay,\n    RepositionScrollStrategy,\n    IScrollStrategy,\n    ViewportRuler\n} from '@ptsecurity/cdk/overlay';\n\nimport {\n    AfterContentInit, AfterViewInit,\n    Attribute,\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    ContentChild,\n    ContentChildren,\n    Directive,\n    DoCheck,\n    ElementRef,\n    EventEmitter,\n    Inject,\n    InjectionToken,\n    Input,\n    isDevMode,\n    NgZone,\n    OnChanges,\n    OnDestroy,\n    OnInit,\n    Optional,\n    Output,\n    QueryList, Renderer2,\n    Self,\n    SimpleChanges,\n    ViewChild, ViewChildren,\n    ViewEncapsulation\n} from '@angular/core';\nimport { ControlValueAccessor, FormGroupDirective, NgControl, NgForm } from '@angular/forms';\nimport {\n    _countGroupLabelsBeforeOption,\n    _getOptionScrollPosition,\n    CanDisable,\n    CanDisableCtor,\n    CanUpdateErrorState,\n    CanUpdateErrorStateCtor,\n    ErrorStateMatcher,\n    HasTabIndex, HasTabIndexCtor,\n    MC_OPTION_PARENT_COMPONENT,\n    McOptgroup,\n    McOption,\n    McOptionSelectionChange,\n    mixinDisabled,\n    mixinErrorState,\n    mixinTabIndex\n} from '@ptsecurity/mosaic/core';\n\nimport { McFormField, McFormFieldControl } from '@ptsecurity/mosaic/form-field';\nimport { McTag } from '@ptsecurity/mosaic/tag';\n\n\nimport { defer, merge, Observable, Subject } from 'rxjs';\nimport {\n    filter,\n    map,\n    startWith,\n    switchMap,\n    take,\n    takeUntil,\n    distinctUntilChanged\n} from 'rxjs/operators';\n\nimport {\n    getMcSelectDynamicMultipleError,\n    getMcSelectNonArrayValueError,\n    getMcSelectNonFunctionValueError\n} from './select-errors';\n\nimport { mcSelectAnimations } from './select-animations';\n\n\nlet nextUniqueId = 0;\n\n/**\n * The following style constants are necessary to save here in order\n * to properly calculate the alignment of the selected option over\n * the trigger element.\n */\n\n/** The max height of the select's overlay panel */\nexport const SELECT_PANEL_MAX_HEIGHT = 224;\n\n/** The panel's padding on the x-axis */\nexport const SELECT_PANEL_PADDING_X = 1;\n\n/** The panel's x axis padding if it is indented (e.g. there is an option group). */\n/* tslint:disable-next-line:no-magic-numbers */\nexport const SELECT_PANEL_INDENT_PADDING_X = SELECT_PANEL_PADDING_X * 2;\n\n/** The height of the select items in `em` units. */\nexport const SELECT_ITEM_HEIGHT_EM = 2;\n\n/**\n * The select panel will only \"fit\" inside the viewport if it is positioned at\n * this value or more away from the viewport boundary.\n */\nexport const SELECT_PANEL_VIEWPORT_PADDING = 8;\n\n/** Injection token that determines the scroll handling while a select is open. */\nexport const MC_SELECT_SCROLL_STRATEGY =\n    new InjectionToken<() => IScrollStrategy>('mc-select-scroll-strategy');\n\n/** @docs-private */\nexport function MC_SELECT_SCROLL_STRATEGY_PROVIDER_FACTORY(overlay: Overlay):\n    () => RepositionScrollStrategy {\n    return () => overlay.scrollStrategies.reposition();\n}\n\n/** @docs-private */\nexport const MC_SELECT_SCROLL_STRATEGY_PROVIDER = {\n    provide: MC_SELECT_SCROLL_STRATEGY,\n    deps: [Overlay],\n    useFactory: MC_SELECT_SCROLL_STRATEGY_PROVIDER_FACTORY\n};\n\n/** Change event object that is emitted when the select value has changed. */\nexport class McSelectChange {\n    constructor(\n        /** Reference to the select that emitted the change event. */\n        public source: McSelect,\n        /** Current value of the select that emitted the event. */\n        public value: any) {\n    }\n}\n\n// Boilerplate for applying mixins to McSelect.\n/** @docs-private */\nexport class McSelectBase {\n    constructor(\n        public _elementRef: ElementRef,\n        public _defaultErrorStateMatcher: ErrorStateMatcher,\n        public _parentForm: NgForm,\n        public _parentFormGroup: FormGroupDirective,\n        public ngControl: NgControl\n    ) {}\n}\n\nexport const _McSelectMixinBase:\n    CanDisableCtor &\n    HasTabIndexCtor &\n    CanUpdateErrorStateCtor & typeof McSelectBase\n    = mixinTabIndex(mixinDisabled(mixinErrorState(McSelectBase)));\n\n\n/**\n * Allows the user to customize the trigger that is displayed when the select has a value.\n */\n@Directive({ selector: 'mc-select-trigger' })\nexport class McSelectTrigger {}\n\n\n@Component({\n    selector: 'mc-select',\n    exportAs: 'mcSelect',\n    templateUrl: 'select.html',\n    styleUrls: ['./select.css'],\n    inputs: ['disabled', 'tabIndex'],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    host: {\n        '[attr.id]': 'id',\n        '[attr.tabindex]': 'tabIndex',\n        class: 'mc-select',\n        '[class.mc-disabled]': 'disabled',\n        '[class.mc-select-invalid]': 'errorState',\n        '[class.mc-select-required]': 'required',\n        '(keydown)': '_handleKeydown($event)',\n        '(focus)': '_onFocus()',\n        '(blur)': '_onBlur()',\n        '(window:resize)': '_calculateHiddenItems()'\n    },\n    animations: [\n        mcSelectAnimations.transformPanel,\n        mcSelectAnimations.fadeInContent\n    ],\n    providers: [\n        { provide: McFormFieldControl, useExisting: McSelect },\n        { provide: MC_OPTION_PARENT_COMPONENT, useExisting: McSelect }\n    ]\n})\nexport class McSelect extends _McSelectMixinBase implements\n    AfterContentInit, AfterViewInit, OnChanges, OnDestroy, OnInit, DoCheck, ControlValueAccessor, CanDisable,\n    HasTabIndex, McFormFieldControl<any>, CanUpdateErrorState {\n\n    /** The last measured value for the trigger's client bounding rect. */\n    _triggerRect: ClientRect;\n\n    /** The cached font-size of the trigger element. */\n    _triggerFontSize = 0;\n\n    /** Deals with the selection logic. */\n    _selectionModel: SelectionModel<McOption>;\n\n    /** Manages keyboard events for options in the panel. */\n    _keyManager: ActiveDescendantKeyManager<McOption>;\n\n    /** The IDs of child options to be passed to the aria-owns attribute. */\n    _optionIds: string = '';\n\n    /** The value of the select panel's transform-origin property. */\n    _transformOrigin: string = 'top';\n\n    /** Whether the panel's animation is done. */\n    _panelDoneAnimating: boolean = false;\n\n    /** Emits when the panel element is finished transforming in. */\n    _panelDoneAnimatingStream = new Subject<string>();\n\n    /** Strategy that will be used to handle scrolling while the select panel is open. */\n    _scrollStrategy = this._scrollStrategyFactory();\n\n    /**\n     * The y-offset of the overlay panel in relation to the trigger's top start corner.\n     * This must be adjusted to align the selected option text over the trigger text.\n     * when the panel opens. Will change based on the y-position of the selected option.\n     */\n    _offsetY = 0;\n\n    /**\n     * This position config ensures that the top \"start\" corner of the overlay\n     * is aligned with with the top \"start\" of the origin by default (overlapping\n     * the trigger completely). If the panel cannot fit below the trigger, it\n     * will fall back to a position above the trigger.\n     */\n    _positions = [\n        {\n            originX: 'start',\n            originY: 'bottom',\n            overlayX: 'start',\n            overlayY: 'top'\n        },\n        {\n            originX: 'start',\n            originY: 'top',\n            overlayX: 'start',\n            overlayY: 'bottom'\n        }\n    ];\n\n    /** Whether the select is focused. */\n    get focused(): boolean {\n        return this._focused || this._panelOpen;\n    }\n\n    /**\n     * @deprecated Setter to be removed as this property is intended to be readonly.\n     * @breaking-change 8.0.0\n     */\n    set focused(value: boolean) {\n        this._focused = value;\n    }\n\n    /** A name for this control that can be used by `mc-form-field`. */\n    controlType = 'mc-select';\n\n    @ViewChild('trigger') trigger: ElementRef;\n    @ViewChildren(McTag) tags: QueryList<McTag>;\n\n    @ViewChild('panel') panel: ElementRef;\n\n    /** Overlay pane containing the options. */\n    @ViewChild(CdkConnectedOverlay) overlayDir: CdkConnectedOverlay;\n\n    /** All of the defined select options. */\n    @ContentChildren(McOption, { descendants: true }) options: QueryList<McOption>;\n\n    /** All of the defined groups of options. */\n    @ContentChildren(McOptgroup) optionGroups: QueryList<McOptgroup>;\n\n    /** Classes to be passed to the select panel. Supports the same syntax as `ngClass`. */\n    @Input() panelClass: string | string[] | Set<string> | { [key: string]: any };\n\n    /** User-supplied override of the trigger element. */\n    @ContentChild(McSelectTrigger) customTrigger: McSelectTrigger;\n\n    /** Placeholder to be shown if no value has been selected. */\n    @Input()\n    get placeholder(): string {\n        return this._placeholder;\n    }\n\n    set placeholder(value: string) {\n        this._placeholder = value;\n        this.stateChanges.next();\n    }\n\n    /** Whether the component is required. */\n    @Input()\n    get required(): boolean {\n        return this._required;\n    }\n\n    set required(value: boolean) {\n        this._required = coerceBooleanProperty(value);\n        this.stateChanges.next();\n    }\n\n    /** Whether the user should be allowed to select multiple options. */\n    @Input()\n    get multiple(): boolean {\n        return this._multiple;\n    }\n\n    set multiple(value: boolean) {\n        if (this._selectionModel) {\n            throw getMcSelectDynamicMultipleError();\n        }\n\n        this._multiple = coerceBooleanProperty(value);\n    }\n\n    /**\n     * Function to compare the option values with the selected values. The first argument\n     * is a value from an option. The second is a value from the selection. A boolean\n     * should be returned.\n     */\n    @Input()\n    get compareWith() {\n        return this._compareWith;\n    }\n\n    set compareWith(fn: (o1: any, o2: any) => boolean) {\n        /* tslint:disable-next-line:strict-type-predicates */\n        if (typeof fn !== 'function') {\n            throw getMcSelectNonFunctionValueError();\n        }\n\n        this._compareWith = fn;\n\n        if (this._selectionModel) {\n            // A different comparator means the selection could change.\n            this._initializeSelection();\n        }\n    }\n\n    /** Value of the select control. */\n    @Input()\n    get value(): any {\n        return this._value;\n    }\n\n    set value(newValue: any) {\n        if (newValue !== this._value) {\n            this.writeValue(newValue);\n            this._value = newValue;\n        }\n    }\n\n    /** Object used to control when error messages are shown. */\n    @Input() errorStateMatcher: ErrorStateMatcher;\n\n    /**\n     * Function used to sort the values in a select in multiple mode.\n     * Follows the same logic as `Array.prototype.sort`.\n     */\n    @Input() sortComparator: (a: McOption, b: McOption, options: McOption[]) => number;\n\n    @Input()\n    get id(): string {\n        return this._id;\n    }\n\n    set id(value: string) {\n        this._id = value || this._uid;\n        this.stateChanges.next();\n    }\n\n    /** Combined stream of all of the child options' change events. */\n    readonly optionSelectionChanges: Observable<McOptionSelectionChange> = defer(() => {\n        if (this.options) {\n            return merge(...this.options.map((option) => option.onSelectionChange));\n        }\n\n        return this._ngZone.onStable\n            .asObservable()\n            .pipe(take(1), switchMap(() => this.optionSelectionChanges));\n    });\n\n    /** Event emitted when the select panel has been toggled. */\n    @Output() readonly openedChange: EventEmitter<boolean> = new EventEmitter<boolean>();\n\n    /** Event emitted when the select has been opened. */\n    @Output('opened') readonly _openedStream: Observable<void> =\n        this.openedChange.pipe(filter((o) => o), map(() => {}));\n\n    /** Event emitted when the select has been closed. */\n    @Output('closed') readonly _closedStream: Observable<void> =\n        this.openedChange.pipe(filter((o) => !o), map(() => {}));\n\n    /** Event emitted when the selected value has been changed by the user. */\n    @Output() readonly selectionChange: EventEmitter<McSelectChange> = new EventEmitter<McSelectChange>();\n\n    /**\n     * Event that emits whenever the raw value of the select changes. This is here primarily\n     * to facilitate the two-way binding for the `value` input.\n     * @docs-private\n     */\n    @Output() readonly valueChange: EventEmitter<any> = new EventEmitter<any>();\n\n    hiddenItems: number = 0;\n\n    /** Whether or not the overlay panel is open. */\n    private _panelOpen = false;\n\n    /** Whether filling out the select is required in the form. */\n    private _required: boolean = false;\n\n    /** The scroll position of the overlay panel, calculated to center the selected option. */\n    private _scrollTop = 0;\n\n    /** The placeholder displayed in the trigger of the select. */\n    private _placeholder: string;\n\n    /** Whether the component is in multiple selection mode. */\n    private _multiple: boolean = false;\n\n    /** Unique id for this input. */\n    private readonly _uid = `mc-select-${nextUniqueId++}`;\n\n    /** Emits whenever the component is destroyed. */\n    private readonly _destroy = new Subject<void>();\n\n    private _focused = false;\n\n    private _value: any;\n\n    private _id: string;\n\n    constructor(\n        private readonly _viewportRuler: ViewportRuler,\n        private readonly _changeDetectorRef: ChangeDetectorRef,\n        private readonly _ngZone: NgZone,\n        private readonly _renderer: Renderer2,\n        _defaultErrorStateMatcher: ErrorStateMatcher,\n        elementRef: ElementRef,\n        @Optional() private readonly _dir: Directionality,\n        @Optional() _parentForm: NgForm,\n        @Optional() _parentFormGroup: FormGroupDirective,\n        @Optional() private readonly _parentFormField: McFormField,\n        @Self() @Optional() public ngControl: NgControl,\n        @Attribute('tabindex') tabIndex: string,\n        @Inject(MC_SELECT_SCROLL_STRATEGY) private readonly _scrollStrategyFactory\n    ) {\n        super(elementRef, _defaultErrorStateMatcher, _parentForm, _parentFormGroup, ngControl);\n\n        if (this.ngControl) {\n            // Note: we provide the value accessor through here, instead of\n            // the `providers` to avoid running into a circular import.\n            this.ngControl.valueAccessor = this;\n        }\n\n        this.tabIndex = parseInt(tabIndex) || 0;\n\n        // Force setter to be called in case id was not specified.\n        this.id = this.id;\n    }\n\n    ngOnInit() {\n        this._selectionModel = new SelectionModel<McOption>(this.multiple);\n        this.stateChanges.next();\n\n        // We need `distinctUntilChanged` here, because some browsers will\n        // fire the animation end event twice for the same animation. See:\n        // https://github.com/angular/angular/issues/24084\n        this._panelDoneAnimatingStream\n            .pipe(distinctUntilChanged(), takeUntil(this._destroy))\n            .subscribe(() => {\n                if (this.panelOpen) {\n                    this._scrollTop = 0;\n                    this.openedChange.emit(true);\n                } else {\n                    this.openedChange.emit(false);\n                    this._panelDoneAnimating = false;\n                    this.overlayDir.offsetX = 0;\n                    this._changeDetectorRef.markForCheck();\n                }\n            });\n    }\n\n    ngAfterContentInit() {\n        this._initKeyManager();\n\n        this._selectionModel.onChange!\n            .pipe(takeUntil(this._destroy))\n            .subscribe((event) => {\n                event.added.forEach((option) => option.select());\n                event.removed.forEach((option) => option.deselect());\n            });\n\n        this.options.changes\n            .pipe(startWith(null), takeUntil(this._destroy))\n            .subscribe(() => {\n                this._resetOptions();\n                this._initializeSelection();\n            });\n    }\n\n    ngAfterViewInit(): void {\n        this.tags.changes\n            .subscribe(() => {\n                setTimeout(() => this._calculateHiddenItems(), 0);\n            });\n    }\n\n    ngDoCheck() {\n        if (this.ngControl) { this.updateErrorState(); }\n    }\n\n    ngOnChanges(changes: SimpleChanges) {\n        // Updating the disabled state is handled by `mixinDisabled`, but we need to additionally let\n        // the parent form field know to run change detection when the disabled state changes.\n        if (changes.disabled) {\n            this.stateChanges.next();\n        }\n    }\n\n    ngOnDestroy() {\n        this._destroy.next();\n        this._destroy.complete();\n        this.stateChanges.complete();\n    }\n\n    /** `View -> model callback called when value changes` */\n    _onChange: (value: any) => void = () => {};\n\n    /** `View -> model callback called when select has been touched` */\n    _onTouched = () => {};\n\n    /** Toggles the overlay panel open or closed. */\n    toggle(): void {\n        if (this.panelOpen) {\n            this.close();\n        } else {\n            this.open();\n        }\n    }\n\n    /** Opens the overlay panel. */\n    open(): void {\n        if (this.disabled || !this.options || !this.options.length || this._panelOpen) { return; }\n\n        this._triggerRect = this.trigger.nativeElement.getBoundingClientRect();\n        // Note: The computed font-size will be a string pixel value (e.g. \"16px\").\n        // `parseInt` ignores the trailing 'px' and converts this to a number.\n        this._triggerFontSize = parseInt(getComputedStyle(this.trigger.nativeElement)['font-size']);\n\n        this._panelOpen = true;\n        this._keyManager.withHorizontalOrientation(null);\n        this._calculateOverlayPosition();\n        this._highlightCorrectOption();\n        this._changeDetectorRef.markForCheck();\n\n        // Set the font size on the panel element once it exists.\n        this._ngZone.onStable.asObservable()\n            .pipe(take(1))\n            .subscribe(() => {\n                if (this._triggerFontSize && this.overlayDir.overlayRef &&\n                    this.overlayDir.overlayRef.overlayElement) {\n                    this.overlayDir.overlayRef.overlayElement.style.fontSize = `${this._triggerFontSize}px`;\n                }\n            });\n    }\n\n    /** Closes the overlay panel and focuses the host element. */\n    close(): void {\n        if (this._panelOpen) {\n            this._panelOpen = false;\n            this._keyManager.withHorizontalOrientation(this._isRtl() ? 'rtl' : 'ltr');\n            this._changeDetectorRef.markForCheck();\n            this._onTouched();\n        }\n    }\n\n    /**\n     * Sets the select's value. Part of the ControlValueAccessor interface\n     * required to integrate with Angular's core forms API.\n     *\n     * @param value New value to be written to the model.\n     */\n    writeValue(value: any): void {\n        if (this.options) {\n            this._setSelectionByValue(value);\n        }\n    }\n\n    /**\n     * Saves a callback function to be invoked when the select's value\n     * changes from user input. Part of the ControlValueAccessor interface\n     * required to integrate with Angular's core forms API.\n     *\n     * @param fn Callback to be triggered when the value changes.\n     */\n    registerOnChange(fn: (value: any) => void): void {\n        this._onChange = fn;\n    }\n\n    /**\n     * Saves a callback function to be invoked when the select is blurred\n     * by the user. Part of the ControlValueAccessor interface required\n     * to integrate with Angular's core forms API.\n     *\n     * @param fn Callback to be triggered when the component has been touched.\n     */\n    registerOnTouched(fn: () => {}): void {\n        this._onTouched = fn;\n    }\n\n    /**\n     * Disables the select. Part of the ControlValueAccessor interface required\n     * to integrate with Angular's core forms API.\n     *\n     * @param isDisabled Sets whether the component is disabled.\n     */\n    setDisabledState(isDisabled: boolean): void {\n        this.disabled = isDisabled;\n        this._changeDetectorRef.markForCheck();\n        this.stateChanges.next();\n    }\n\n    get panelOpen(): boolean {\n        return this._panelOpen;\n    }\n\n    get selected(): McOption | McOption[] {\n        return this.multiple ? this._selectionModel.selected : this._selectionModel.selected[0];\n    }\n\n    get triggerValue(): string {\n        if (this.empty) { return ''; }\n\n        if (this._multiple) {\n            const selectedOptions = this._selectionModel.selected.map((option) => option.viewValue);\n\n            if (this._isRtl()) { selectedOptions.reverse(); }\n\n            return selectedOptions.join(', ');\n        }\n\n        return this._selectionModel.selected[0].viewValue;\n    }\n\n    get triggerValues(): McOption[] {\n        if (this.empty) { return []; }\n\n        if (this._multiple) {\n            const selectedOptions = this._selectionModel.selected;\n\n            if (this._isRtl()) { selectedOptions.reverse(); }\n\n            return selectedOptions;\n        }\n\n        return [this._selectionModel.selected[0]];\n    }\n\n    get empty(): boolean {\n        return !this._selectionModel || this._selectionModel.isEmpty();\n    }\n\n    _isRtl(): boolean {\n        return this._dir ? this._dir.value === 'rtl' : false;\n    }\n\n    _handleKeydown(event: KeyboardEvent): void {\n        if (!this.disabled) {\n            if (this.panelOpen) {\n                this._handleOpenKeydown(event);\n            } else {\n                this._handleClosedKeydown(event);\n            }\n        }\n    }\n\n    /**\n     * When the panel content is done fading in, the _panelDoneAnimating property is\n     * set so the proper class can be added to the panel.\n     */\n    _onFadeInDone(): void {\n        this._panelDoneAnimating = this.panelOpen;\n        this._changeDetectorRef.markForCheck();\n    }\n\n    _onFocus() {\n        if (!this.disabled) {\n            this._focused = true;\n            this.stateChanges.next();\n        }\n    }\n\n    /**\n     * Calls the touched callback only if the panel is closed. Otherwise, the trigger will\n     * \"blur\" to the panel when it opens, causing a false positive.\n     */\n    _onBlur() {\n        this._focused = false;\n\n        if (!this.disabled && !this.panelOpen) {\n            this._onTouched();\n            this._changeDetectorRef.markForCheck();\n            this.stateChanges.next();\n        }\n    }\n\n    /**\n     * Callback that is invoked when the overlay panel has been attached.\n     */\n    _onAttached(): void {\n        this.overlayDir.positionChange\n            .pipe(take(1))\n            .subscribe(() => {\n                this._changeDetectorRef.detectChanges();\n                this._calculateOverlayOffsetX();\n                this.panel.nativeElement.scrollTop = this._scrollTop;\n            });\n    }\n\n    /** Returns the theme to be used on the panel. */\n    _getPanelTheme(): string {\n        return this._parentFormField ? `mc-${this._parentFormField.color}` : '';\n    }\n\n    /** Focuses the select element. */\n    focus(): void {\n        this._elementRef.nativeElement.focus();\n    }\n\n    /**\n     * Calculates the scroll position of the select's overlay panel.\n     *\n     * Attempts to center the selected option in the panel. If the option is\n     * too high or too low in the panel to be scrolled to the center, it clamps the\n     * scroll position to the min or max scroll positions respectively.\n     */\n    _calculateOverlayScroll(selectedIndex: number, scrollBuffer: number, maxScroll: number): number {\n        const itemHeight = this._getItemHeight();\n        const optionOffsetFromScrollTop = itemHeight * selectedIndex;\n\n        /* tslint:disable-next-line:no-magic-numbers */\n        const halfOptionHeight = itemHeight / 2;\n\n        // Starts at the optionOffsetFromScrollTop, which scrolls the option to the top of the\n        // scroll container, then subtracts the scroll buffer to scroll the option down to\n        // the center of the overlay panel. Half the option height must be re-added to the\n        // scrollTop so the option is centered based on its middle, not its top edge.\n        const optimalScrollPosition = optionOffsetFromScrollTop - scrollBuffer + halfOptionHeight;\n\n        return Math.min(Math.max(0, optimalScrollPosition), maxScroll);\n    }\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    onContainerClick() {\n        this.focus();\n        this.open();\n    }\n\n    /** Invoked when an option is clicked. */\n    onRemoveMatcherItem(option: McOption, $event): void {\n        $event.stopPropagation();\n\n        option.deselect();\n    }\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    get shouldLabelFloat(): boolean {\n        return this._panelOpen || !this.empty;\n    }\n\n    _calculateHiddenItems(): void {\n        if (this.empty) { return; }\n\n        let visibleItems: number = 0;\n        const totalItemsWidth = this._getTotalItemsWidthInMatcher();\n        let totalVisibleItemsWidth: number = 0;\n        const itemMargin: number = 4;\n\n        this.tags.forEach((tag) => {\n            if (tag.nativeElement.offsetTop < tag.nativeElement.offsetHeight) {\n                totalVisibleItemsWidth += tag.nativeElement.getBoundingClientRect().width + itemMargin;\n                visibleItems++;\n            }\n        });\n\n        this.hiddenItems = (this.selected as ArrayLike<McOption>).length - visibleItems;\n\n        if (this.hiddenItems) {\n            const itemsCounter = this.trigger.nativeElement.querySelector('.mc-select__match-hidden-text');\n            const matcherList = this.trigger.nativeElement.querySelector('.mc-select__match-list');\n\n            const itemsCounterShowed = itemsCounter.offsetTop < itemsCounter.offsetHeight;\n            // const itemsCounterWidth: number = itemsCounter.getBoundingClientRect().width;\n            const itemsCounterWidth: number = 86;\n\n            const matcherListWidth: number = matcherList.getBoundingClientRect().width;\n            const matcherWidth: number = matcherListWidth + itemsCounterWidth;\n\n            if (itemsCounterShowed && (totalItemsWidth < matcherWidth)) { this.hiddenItems = 0; }\n\n            if (\n                totalVisibleItemsWidth === matcherListWidth ||\n                (totalVisibleItemsWidth + itemsCounterWidth) < matcherListWidth\n            ) {\n                this._changeDetectorRef.markForCheck();\n\n                return ;\n            } else if (!itemsCounterShowed && (totalItemsWidth + itemsCounterWidth) > matcherWidth) {\n                this.hiddenItems++;\n            }\n        }\n\n        this._changeDetectorRef.markForCheck();\n    }\n\n    private _getTotalItemsWidthInMatcher(): number {\n        const triggerClone = this.trigger.nativeElement.cloneNode(true);\n        triggerClone.querySelector('.mc-select__match-hidden-text').remove();\n\n        this._renderer.setStyle(triggerClone, 'position', 'absolute');\n        this._renderer.setStyle(triggerClone, 'visibility', 'hidden');\n        this._renderer.setStyle(triggerClone, 'top', '-100%');\n        this._renderer.setStyle(triggerClone, 'left', '0');\n\n        this._renderer.appendChild(this.trigger.nativeElement, triggerClone);\n\n        let totalItemsWidth: number = 0;\n        const itemMargin: number = 4;\n        triggerClone.querySelectorAll('mc-tag').forEach((item) => {\n            totalItemsWidth += item.getBoundingClientRect().width as number + itemMargin;\n        });\n\n        triggerClone.remove();\n\n        return totalItemsWidth;\n    }\n\n    /** Handles keyboard events while the select is closed. */\n    private _handleClosedKeydown(event: KeyboardEvent): void {\n        /* tslint:disable-next-line */\n        const keyCode = event.keyCode;\n        const isArrowKey = keyCode === DOWN_ARROW || keyCode === UP_ARROW ||\n            keyCode === LEFT_ARROW || keyCode === RIGHT_ARROW;\n        const isOpenKey = keyCode === ENTER || keyCode === SPACE;\n\n        // Open the select on ALT + arrow key to match the native <select>\n        if (isOpenKey || ((this.multiple || event.altKey) && isArrowKey)) {\n            event.preventDefault(); // prevents the page from scrolling down when pressing space\n            this.open();\n        } else if (!this.multiple) {\n            this._keyManager.onKeydown(event);\n        }\n    }\n\n    /** Handles keyboard events when the selected is open. */\n    private _handleOpenKeydown(event: KeyboardEvent): void {\n        /* tslint:disable-next-line */\n        const keyCode = event.keyCode;\n        const isArrowKey = keyCode === DOWN_ARROW || keyCode === UP_ARROW;\n        const manager = this._keyManager;\n\n        if (keyCode === HOME || keyCode === END) {\n            event.preventDefault();\n\n            if (keyCode === HOME) {\n                manager.setFirstItemActive();\n            } else {\n                manager.setLastItemActive();\n            }\n\n        } else if (isArrowKey && event.altKey) {\n            // Close the select on ALT + arrow key to match the native <select>\n            event.preventDefault();\n            this.close();\n        } else if ((keyCode === ENTER || keyCode === SPACE) && manager.activeItem) {\n            event.preventDefault();\n            manager.activeItem._selectViaInteraction();\n        } else if (this._multiple && keyCode === A && event.ctrlKey) {\n            event.preventDefault();\n            const hasDeselectedOptions = this.options.some((option) => !option.selected);\n            this.options.forEach((option) => {\n                if (hasDeselectedOptions && !option.disabled) {\n                    option.select();\n                } else {\n                    option.deselect();\n                }\n            });\n        } else {\n            const previouslyFocusedIndex = manager.activeItemIndex;\n\n            manager.onKeydown(event);\n\n            if (this._multiple && isArrowKey && event.shiftKey && manager.activeItem &&\n                manager.activeItemIndex !== previouslyFocusedIndex) {\n                manager.activeItem._selectViaInteraction();\n            }\n        }\n    }\n\n    private _initializeSelection(): void {\n        // Defer setting the value in order to avoid the \"Expression\n        // has changed after it was checked\" errors from Angular.\n        Promise.resolve().then(() => {\n            this._setSelectionByValue(this.ngControl ? this.ngControl.value : this._value);\n        });\n    }\n\n    /**\n     * Sets the selected option based on a value. If no option can be\n     * found with the designated value, the select trigger is cleared.\n     */\n    private _setSelectionByValue(value: any | any[]): void {\n        if (this.multiple && value) {\n            if (!Array.isArray(value)) {\n                throw getMcSelectNonArrayValueError();\n            }\n\n            this._selectionModel.clear();\n            value.forEach((currentValue: any) => this._selectValue(currentValue));\n            this._sortValues();\n        } else {\n            this._selectionModel.clear();\n            const correspondingOption = this._selectValue(value);\n\n            // Shift focus to the active item. Note that we shouldn't do this in multiple\n            // mode, because we don't know what option the user interacted with last.\n            if (correspondingOption) {\n                this._keyManager.setActiveItem(correspondingOption);\n            }\n        }\n\n        this._changeDetectorRef.markForCheck();\n    }\n\n    /**\n     * Finds and selects and option based on its value.\n     * @returns Option that has the corresponding value.\n     */\n    private _selectValue(value: any): McOption | undefined {\n        const correspondingOption = this.options.find((option: McOption) => {\n            try {\n                // Treat null as a special reset value.\n                return option.value != null && this._compareWith(option.value, value);\n            } catch (error) {\n                if (isDevMode()) {\n                    // Notify developers of errors in their comparator.\n                    console.warn(error);\n                }\n\n                return false;\n            }\n        });\n\n        if (correspondingOption) {\n            this._selectionModel.select(correspondingOption);\n        }\n\n        return correspondingOption;\n    }\n\n    /** Sets up a key manager to listen to keyboard events on the overlay panel. */\n    private _initKeyManager() {\n        this._keyManager = new ActiveDescendantKeyManager<McOption>(this.options)\n            .withTypeAhead()\n            .withVerticalOrientation()\n            .withHorizontalOrientation(this._isRtl() ? 'rtl' : 'ltr');\n\n        this._keyManager.tabOut\n            .pipe(takeUntil(this._destroy))\n            .subscribe(() => {\n                // Restore focus to the trigger before closing. Ensures that the focus\n                // position won't be lost if the user got focus into the overlay.\n                this.focus();\n                this.close();\n            });\n\n        this._keyManager.change\n            .pipe(takeUntil(this._destroy))\n            .subscribe(() => {\n                if (this._panelOpen && this.panel) {\n                    this._scrollActiveOptionIntoView();\n                } else if (!this._panelOpen && !this.multiple && this._keyManager.activeItem) {\n                    this._keyManager.activeItem._selectViaInteraction();\n                }\n            });\n    }\n\n    /** Drops current option subscriptions and IDs and resets from scratch. */\n    private _resetOptions(): void {\n        const changedOrDestroyed = merge(this.options.changes, this._destroy);\n\n        this.optionSelectionChanges\n            .pipe(takeUntil(changedOrDestroyed))\n            .subscribe((event) => {\n                this._onSelect(event.source, event.isUserInput);\n\n                if (event.isUserInput && !this.multiple && this._panelOpen) {\n                    this.close();\n                    this.focus();\n                }\n            });\n\n        // Listen to changes in the internal state of the options and react accordingly.\n        // Handles cases like the labels of the selected options changing.\n        merge(...this.options.map((option) => option._stateChanges))\n            .pipe(takeUntil(changedOrDestroyed))\n            .subscribe(() => {\n                this._changeDetectorRef.markForCheck();\n                this.stateChanges.next();\n            });\n\n        this._setOptionIds();\n    }\n\n    /** Invoked when an option is clicked. */\n    private _onSelect(option: McOption, isUserInput: boolean): void {\n        const wasSelected = this._selectionModel.isSelected(option);\n\n        if (option.value == null && !this._multiple) {\n            option.deselect();\n            this._selectionModel.clear();\n            this._propagateChanges(option.value);\n        } else {\n            if (option.selected) {\n                this._selectionModel.select(option);\n            } else {\n                this._selectionModel.deselect(option);\n            }\n\n            if (isUserInput) {\n                this._keyManager.setActiveItem(option);\n            }\n\n            if (this.multiple) {\n                this._sortValues();\n\n                if (isUserInput) {\n                    // In case the user selected the option with their mouse, we\n                    // want to restore focus back to the trigger, in order to\n                    // prevent the select keyboard controls from clashing with\n                    // the ones from `mc-option`.\n                    this.focus();\n                }\n            }\n        }\n\n        if (wasSelected !== this._selectionModel.isSelected(option)) {\n            this._propagateChanges();\n        }\n\n        this.stateChanges.next();\n    }\n\n    /** Sorts the selected values in the selected based on their order in the panel. */\n    private _sortValues() {\n        if (this.multiple) {\n            const options = this.options.toArray();\n\n            this._selectionModel.sort((a, b) => {\n                return this.sortComparator ? this.sortComparator(a, b, options) :\n                    options.indexOf(a) - options.indexOf(b);\n            });\n            this.stateChanges.next();\n        }\n    }\n\n    /** Emits change event to set the model value. */\n    private _propagateChanges(fallbackValue?: any): void {\n        let valueToEmit: any = null;\n\n        if (this.multiple) {\n            valueToEmit = (this.selected as McOption[]).map((option) => option.value);\n        } else {\n            valueToEmit = this.selected ? (this.selected as McOption).value : fallbackValue;\n        }\n\n        this._value = valueToEmit;\n        this.valueChange.emit(valueToEmit);\n        this._onChange(valueToEmit);\n        this.selectionChange.emit(new McSelectChange(this, valueToEmit));\n        this._changeDetectorRef.markForCheck();\n    }\n\n    /** Records option IDs to pass to the aria-owns property. */\n    private _setOptionIds() {\n        this._optionIds = this.options.map((option) => option.id).join(' ');\n    }\n\n    /**\n     * Highlights the selected item. If no option is selected, it will highlight\n     * the first item instead.\n     */\n    private _highlightCorrectOption(): void {\n        if (this._keyManager) {\n            if (this.empty) {\n                this._keyManager.setFirstItemActive();\n            } else {\n                this._keyManager.setActiveItem(this._selectionModel.selected[0]);\n            }\n        }\n    }\n\n    /** Scrolls the active option into view. */\n    private _scrollActiveOptionIntoView(): void {\n        const activeOptionIndex = this._keyManager.activeItemIndex || 0;\n        const labelCount = _countGroupLabelsBeforeOption(activeOptionIndex, this.options, this.optionGroups);\n\n        this.panel.nativeElement.scrollTop = _getOptionScrollPosition(\n            activeOptionIndex + labelCount,\n            this._getItemHeight(),\n            this.panel.nativeElement.scrollTop,\n            SELECT_PANEL_MAX_HEIGHT\n        );\n    }\n\n    /** Gets the index of the provided option in the option list. */\n    private _getOptionIndex(option: McOption): number | undefined {\n        /* tslint:disable-next-line */\n        return this.options.reduce((result: number, current: McOption, index: number) => {\n            /* tslint:disable-next-line:strict-type-predicates */\n            return result === undefined ? (option === current ? index : undefined) : result;\n        }, undefined);\n    }\n\n    /** Calculates the scroll position and x- and y-offsets of the overlay panel. */\n    private _calculateOverlayPosition(): void {\n        const itemHeight = this._getItemHeight();\n        const items = this._getItemCount();\n        const panelHeight = Math.min(items * itemHeight, SELECT_PANEL_MAX_HEIGHT);\n        const scrollContainerHeight = items * itemHeight;\n\n        // The farthest the panel can be scrolled before it hits the bottom\n        const maxScroll = scrollContainerHeight - panelHeight;\n\n        // If no value is selected we open the popup to the first item.\n        let selectedOptionOffset =\n            this.empty ? 0 : this._getOptionIndex(this._selectionModel.selected[0])!;\n\n        selectedOptionOffset += _countGroupLabelsBeforeOption(selectedOptionOffset, this.options,\n            this.optionGroups);\n\n        // We must maintain a scroll buffer so the selected option will be scrolled to the\n        // center of the overlay panel rather than the top.\n        /* tslint:disable-next-line:no-magic-numbers */\n        const scrollBuffer = panelHeight / 2;\n        this._scrollTop = this._calculateOverlayScroll(selectedOptionOffset, scrollBuffer, maxScroll);\n        this._offsetY = this._calculateOverlayOffsetY();\n\n        this._checkOverlayWithinViewport(maxScroll);\n    }\n\n    /**\n     * Sets the x-offset of the overlay panel in relation to the trigger's top start corner.\n     * This must be adjusted to align the selected option text over the trigger text when\n     * the panel opens. Will change based on LTR or RTL text direction. Note that the offset\n     * can't be calculated until the panel has been attached, because we need to know the\n     * content width in order to constrain the panel within the viewport.\n     */\n    private _calculateOverlayOffsetX(): void {\n        const overlayRect = this.overlayDir.overlayRef.overlayElement.getBoundingClientRect();\n        const viewportSize = this._viewportRuler.getViewportSize();\n        const isRtl = this._isRtl();\n        /* tslint:disable-next-line:no-magic-numbers */\n        const paddingWidth = SELECT_PANEL_PADDING_X * 2;\n        let offsetX: number;\n\n        const selected = this._selectionModel.selected[0] || this.options.first;\n        offsetX = selected && selected.group ? SELECT_PANEL_INDENT_PADDING_X : SELECT_PANEL_PADDING_X;\n\n        // Invert the offset in LTR.\n        if (!isRtl) { offsetX *= -1; }\n\n        // Determine how much the select overflows on each side.\n        const leftOverflow = 0 - (overlayRect.left + offsetX - (isRtl ? paddingWidth : 0));\n        const rightOverflow = overlayRect.right + offsetX - viewportSize.width\n            + (isRtl ? 0 : paddingWidth);\n\n        // If the element overflows on either side, reduce the offset to allow it to fit.\n        if (leftOverflow > 0) {\n            offsetX += leftOverflow + SELECT_PANEL_VIEWPORT_PADDING;\n        } else if (rightOverflow > 0) {\n            offsetX -= rightOverflow + SELECT_PANEL_VIEWPORT_PADDING;\n        }\n\n        // Set the offset directly in order to avoid having to go through change detection and\n        // potentially triggering \"changed after it was checked\" errors. Round the value to avoid\n        // blurry content in some browsers.\n        this.overlayDir.offsetX = Math.round(offsetX);\n        this.overlayDir.overlayRef.updatePosition();\n    }\n\n    /**\n     * Calculates the y-offset of the select's overlay panel in relation to the\n     * top start corner of the trigger. It has to be adjusted in order for the\n     * selected option to be aligned over the trigger when the panel opens.\n     */\n    private _calculateOverlayOffsetY(): number {\n        // const itemHeight = this._getItemHeight();\n        // const optionHeightAdjustment = (itemHeight - this._triggerRect.height) / 2;\n\n        // todo I'm not sure that we will use it\n        return 0;\n        // return Math.round(-optionHeightAdjustment);\n    }\n\n    /**\n     * Checks that the attempted overlay position will fit within the viewport.\n     * If it will not fit, tries to adjust the scroll position and the associated\n     * y-offset so the panel can open fully on-screen. If it still won't fit,\n     * sets the offset back to 0 to allow the fallback position to take over.\n     */\n    private _checkOverlayWithinViewport(maxScroll: number): void {\n        const itemHeight = this._getItemHeight();\n        const viewportSize = this._viewportRuler.getViewportSize();\n\n        const topSpaceAvailable = this._triggerRect.top - SELECT_PANEL_VIEWPORT_PADDING;\n        const bottomSpaceAvailable =\n            viewportSize.height - this._triggerRect.bottom - SELECT_PANEL_VIEWPORT_PADDING;\n\n        const panelHeightTop = Math.abs(this._offsetY);\n        const totalPanelHeight =\n            Math.min(this._getItemCount() * itemHeight, SELECT_PANEL_MAX_HEIGHT);\n        const panelHeightBottom = totalPanelHeight - panelHeightTop - this._triggerRect.height;\n\n        if (panelHeightBottom > bottomSpaceAvailable) {\n            this._adjustPanelUp(panelHeightBottom, bottomSpaceAvailable);\n        } else if (panelHeightTop > topSpaceAvailable) {\n            this._adjustPanelDown(panelHeightTop, topSpaceAvailable, maxScroll);\n        } else {\n            this._transformOrigin = this._getOriginBasedOnOption();\n        }\n    }\n\n    /** Adjusts the overlay panel up to fit in the viewport. */\n    private _adjustPanelUp(panelHeightBottom: number, bottomSpaceAvailable: number) {\n        // Browsers ignore fractional scroll offsets, so we need to round.\n        const distanceBelowViewport = Math.round(panelHeightBottom - bottomSpaceAvailable);\n\n        // Scrolls the panel up by the distance it was extending past the boundary, then\n        // adjusts the offset by that amount to move the panel up into the viewport.\n        this._scrollTop -= distanceBelowViewport;\n        this._offsetY -= distanceBelowViewport;\n        this._transformOrigin = this._getOriginBasedOnOption();\n\n        // If the panel is scrolled to the very top, it won't be able to fit the panel\n        // by scrolling, so set the offset to 0 to allow the fallback position to take\n        // effect.\n        if (this._scrollTop <= 0) {\n            this._scrollTop = 0;\n            this._offsetY = 0;\n            this._transformOrigin = `50% bottom 0px`;\n        }\n    }\n\n    /** Adjusts the overlay panel down to fit in the viewport. */\n    private _adjustPanelDown(panelHeightTop: number, topSpaceAvailable: number, maxScroll: number) {\n        // Browsers ignore fractional scroll offsets, so we need to round.\n        const distanceAboveViewport = Math.round(panelHeightTop - topSpaceAvailable);\n\n        // Scrolls the panel down by the distance it was extending past the boundary, then\n        // adjusts the offset by that amount to move the panel down into the viewport.\n        this._scrollTop += distanceAboveViewport;\n        this._offsetY += distanceAboveViewport;\n        this._transformOrigin = this._getOriginBasedOnOption();\n\n        // If the panel is scrolled to the very bottom, it won't be able to fit the\n        // panel by scrolling, so set the offset to 0 to allow the fallback position\n        // to take effect.\n        if (this._scrollTop >= maxScroll) {\n            this._scrollTop = maxScroll;\n            this._offsetY = 0;\n            this._transformOrigin = `50% top 0px`;\n\n            return;\n        }\n    }\n\n    /** Sets the transform origin point based on the selected option. */\n    private _getOriginBasedOnOption(): string {\n        const itemHeight = this._getItemHeight();\n        /* tslint:disable-next-line:no-magic-numbers */\n        const optionHeightAdjustment = (itemHeight - this._triggerRect.height) / 2;\n        /* tslint:disable-next-line:no-magic-numbers */\n        const originY = Math.abs(this._offsetY) - optionHeightAdjustment + itemHeight / 2;\n\n        return `50% ${originY}px 0px`;\n    }\n\n    /** Calculates the amount of items in the select. This includes options and group labels. */\n    private _getItemCount(): number {\n        return this.options.length + this.optionGroups.length;\n    }\n\n    /** Calculates the height of the select's options. */\n    private _getItemHeight(): number {\n        /* tslint:disable-next-line:no-magic-numbers */\n        return 32;\n        // return this._triggerFontSize * SELECT_ITEM_HEIGHT_EM;\n    }\n\n    /** Comparison function to specify which option is displayed. Defaults to object equality. */\n    private _compareWith = (o1: any, o2: any) => o1 === o2;\n}\n","import {\n    Directive,\n    DoCheck,\n    ElementRef,\n    forwardRef,\n    Inject,\n    InjectionToken,\n    Input,\n    OnChanges,\n    OnDestroy,\n    Optional,\n    Renderer2,\n    Self\n} from '@angular/core';\nimport {\n    ControlValueAccessor,\n    FormControl,\n    FormGroupDirective,\n    NG_VALIDATORS,\n    NgControl,\n    NgForm,\n    ValidationErrors,\n    ValidatorFn,\n    Validators\n} from '@angular/forms';\nimport {\n    noop,\n    Subject\n} from 'rxjs';\n\nimport { coerceBooleanProperty } from '@ptsecurity/cdk/coercion';\nimport {\n    CanUpdateErrorState,\n    CanUpdateErrorStateCtor,\n    ErrorStateMatcher,\n    mixinErrorState\n} from '@ptsecurity/mosaic/core';\nimport { McFormFieldControl } from '@ptsecurity/mosaic/form-field';\n\nimport {\n    ARROW_DOWN_KEYCODE,\n    ARROW_LEFT_KEYCODE,\n    ARROW_RIGHT_KEYCODE,\n    ARROW_UP_KEYCODE,\n    DEFAULT_TIME_FORMAT,\n    HOURS_PER_DAY,\n    HOURS_MINUTES_REGEXP,\n    HOURS_MINUTES_SECONDS_REGEXP,\n    HOURS_ONLY_REGEXP,\n    MINUTES_PER_HOUR,\n    SECONDS_PER_MINUTE,\n    TIMEFORMAT_PLACEHOLDERS,\n    TimeFormats,\n    TimeParts\n} from './timepicker.constants';\n\n\nlet uniqueComponentIdSuffix: number = 0;\nlet validatorOnChange: () => void = noop;\nlet validator: ValidatorFn | null = () => null;\n\nexport const MC_INPUT_VALUE_ACCESSOR =\n    new InjectionToken<{ value: any }>('MC_INPUT_VALUE_ACCESSOR');\n\nexport class McTimepickerBase {\n    constructor(\n        public _defaultErrorStateMatcher: ErrorStateMatcher,\n        public _parentForm: NgForm,\n        public _parentFormGroup: FormGroupDirective,\n        public ngControl: NgControl) { }\n}\n\n// tslint:disable-next-line naming-convention\nexport const McTimepickerMixinBase:\n    CanUpdateErrorStateCtor &\n    typeof McTimepickerBase = mixinErrorState(McTimepickerBase);\n\n@Directive({\n    selector: 'input[mcTimepicker]',\n    exportAs: 'mcTimepickerInput',\n    host: {\n        class: 'mc-timepicker mc-input',\n        // Native input properties that are overwritten by Angular inputs need to be synced with\n        // the native input element. Otherwise property bindings for those don't work.\n        '[attr.id]': 'id',\n        '[attr.placeholder]': 'placeholder',\n        '[disabled]': 'disabled',\n        '[required]': 'required',\n        '[attr.time-format]': 'timeFormat',\n        '[attr.min-time]': 'minTime',\n        '[attr.max-time]': 'maxTime',\n        '[attr.value]': 'value',\n        '(blur)': 'onBlur()',\n        '(focus)': 'focusChanged(true)',\n        '(input)': 'onInput()',\n        '(paste)': 'onPaste($event)',\n        '(keydown)': 'onKeyDown($event)'\n    },\n    providers: [\n        {\n            provide: NG_VALIDATORS,\n            useValue: {\n                validate(c) { return validator ? validator(c) : null; },\n                registerOnValidatorChange(fn: () => void): void { validatorOnChange = fn; }\n            },\n            multi: true\n        },\n        {\n            provide: McFormFieldControl,\n            useExisting: forwardRef(() => McTimepicker)\n        }\n    ]\n\n})\nexport class McTimepicker extends McTimepickerMixinBase\n    implements McFormFieldControl<any>,\n        OnChanges,\n        OnDestroy,\n        DoCheck,\n        CanUpdateErrorState,\n        ControlValueAccessor {\n\n    /** An object used to control when error messages are shown. */\n    @Input() errorStateMatcher: ErrorStateMatcher;\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    focused: boolean = false;\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    readonly stateChanges: Subject<void> = new Subject<void>();\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    controlType: string = 'mc-timepicker';\n\n    @Input()\n    get disabled(): boolean {\n        if (this.ngControl && this.ngControl.disabled !== null) { return this.ngControl.disabled; }\n\n        return this._disabled;\n    }\n\n    set disabled(value: boolean) {\n        this._disabled = coerceBooleanProperty(value);\n\n        // Browsers may not fire the blur event if the input is disabled too quickly.\n        // Reset from here to ensure that the element doesn't become stuck.\n        if (this.focused) {\n            this.focused = false;\n        }\n\n        this.stateChanges.next();\n    }\n\n    @Input()\n    get id(): string { return this._id; }\n\n    set id(value: string) { this._id = value || this.uid; }\n\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    @Input() placeholder: string;\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    @Input()\n    get required(): boolean { return this._required; }\n\n    set required(value: boolean) { this._required = coerceBooleanProperty(value); }\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    @Input()\n    get value(): string { return this.inputValueAccessor.value; }\n\n    set value(value: string) {\n        if (value !== this.value) {\n            this.inputValueAccessor.value = value;\n            this.applyInputChanges();\n        }\n    }\n\n    @Input('time-format')\n    get timeFormat(): TimeFormats { return this._timeFormat; }\n\n    set timeFormat(formatValue: TimeFormats) {\n        this._timeFormat = Object\n            .keys(TimeFormats)\n            .map((timeFormatKey) => TimeFormats[timeFormatKey])\n            .indexOf(formatValue) > -1 ? formatValue : DEFAULT_TIME_FORMAT;\n\n        validatorOnChange();\n        this.placeholder = TIMEFORMAT_PLACEHOLDERS[this._timeFormat];\n    }\n\n    @Input('min-time')\n    get minTime(): string | null { return this._minTime; }\n\n    set minTime(minValue: string | null) {\n        this._minTime = minValue;\n        this.minDateTime = minValue !== null ? this.getDateFromTimeString(minValue) : undefined;\n        validatorOnChange();\n    }\n\n    @Input('max-time')\n    get maxTime(): string | null { return this._maxTime; }\n\n    set maxTime(maxValue: string | null) {\n        this._maxTime = maxValue;\n        this.maxDateTime = maxValue !== null ? this.getDateFromTimeString(maxValue) : undefined;\n        validatorOnChange();\n    }\n\n    private _id: string;\n    private readonly uid = `mc-timepicker-${uniqueComponentIdSuffix++}`;\n    private _disabled: boolean;\n    private _required: boolean;\n    private previousNativeValue: any;\n    private readonly inputValueAccessor: { value: any };\n    private onChange: (value: any) => void;\n    private onTouched: () => void;\n    private _timeFormat: TimeFormats;\n    private _minTime: string | null = null;\n    private minDateTime: Date | undefined;\n    private _maxTime: string | null = null;\n    private maxDateTime: Date | undefined;\n    private currentDateTimeInput: Date | undefined;\n\n    constructor(private readonly elementRef: ElementRef,\n                @Optional() @Self() public ngControl: NgControl,\n                @Optional() _parentForm: NgForm,\n                @Optional() _parentFormGroup: FormGroupDirective,\n                _defaultErrorStateMatcher: ErrorStateMatcher,\n                @Optional() @Self() @Inject(MC_INPUT_VALUE_ACCESSOR) inputValueAccessor: any,\n                private readonly renderer: Renderer2) {\n        super(_defaultErrorStateMatcher, _parentForm, _parentFormGroup, ngControl);\n\n        // If no input value accessor was explicitly specified, use the element as the input value\n        // accessor.\n        this.inputValueAccessor = inputValueAccessor || this.elementRef.nativeElement;\n\n        this.previousNativeValue = this.value;\n        this.onChange = noop;\n\n        // Force setter to be called in case id was not specified.\n        this.id = this.id;\n\n        this.placeholder = TIMEFORMAT_PLACEHOLDERS[DEFAULT_TIME_FORMAT];\n\n        // Instead of NG_VALUE_ACCESSOR (https://github.com/angular/material2/issues/8158#issuecomment-344618103)\n        if (this.ngControl) { this.ngControl.valueAccessor = this; }\n\n        // Substitute initial empty validator with validator linked to directive object instance (workaround)\n        validator = Validators.compose([\n            () => this.parseValidator(),\n            () => this.minTimeValidator(),\n            () => this.maxTimeValidator()\n        ]);\n    }\n\n    ngOnChanges(): void {\n        this.stateChanges.next();\n    }\n\n    ngOnDestroy(): void {\n        this.stateChanges.complete();\n    }\n\n    ngDoCheck(): void {\n        if (this.ngControl) {\n            // We need to re-evaluate this on every change detection cycle, because there are some\n            // error triggers that we can't subscribe to (e.g. parent form submissions). This means\n            // that whatever logic is in here has to be super lean or we risk destroying the performance.\n            this.updateErrorState();\n        }\n\n        // We need to dirty-check the native element's value, because there are some cases where\n        // we won't be notified when it changes (e.g. the consumer isn't using forms or they're\n        // updating the value using `emitEvent: false`).\n        this.dirtyCheckNativeValue();\n    }\n\n    focus(): void {\n        this.elementRef.nativeElement.focus();\n    }\n\n    focusChanged(isFocused: boolean): void {\n        if (isFocused !== this.focused) {\n            this.focused = isFocused;\n            this.onTouched();\n            this.stateChanges.next();\n        }\n    }\n\n    onBlur() {\n        this.applyInputChanges();\n        this.focusChanged(false);\n    }\n\n    onPaste($event) {\n        $event.preventDefault();\n        const clipboardUserInput: string = $event.clipboardData.getData('text');\n\n        if (this.getDateFromTimeString(clipboardUserInput) === undefined) { return; }\n\n        this.elementRef.nativeElement.value = clipboardUserInput;\n        this.onInput();\n    }\n\n    onInput() {\n        const initialCursorStart: number = this.elementRef.nativeElement.selectionStart;\n        const initialCursorEnd: number = this.elementRef.nativeElement.selectionEnd;\n        let isAutocompleteTriggered: boolean = false;\n\n        const {\n            hoursOnly,\n            hoursAndMinutes,\n            hoursAndMinutesAndSeconds\n        } = this.getParsedTimeParts(this.elementRef.nativeElement.value);\n\n        // tslint:disable no-magic-numbers\n        if (hoursOnly &&\n            hoursOnly[1] &&\n            hoursOnly[1].length === 2) {\n            isAutocompleteTriggered = true;\n        } else if (hoursAndMinutes &&\n            hoursAndMinutes[1].length === 1 &&\n            hoursAndMinutes[2] &&\n            hoursAndMinutes[2].length === 2) {\n            isAutocompleteTriggered = true;\n        } else if (hoursAndMinutesAndSeconds &&\n            hoursAndMinutesAndSeconds[1].length === 2 &&\n            hoursAndMinutesAndSeconds[2].length === 2 &&\n            hoursAndMinutesAndSeconds[3] &&\n            hoursAndMinutesAndSeconds[3].length === 2) {\n            isAutocompleteTriggered = true;\n        }\n        // tslint:enable no-magic-numbers\n\n        this.applyInputChanges({ doTimestringReformat: isAutocompleteTriggered });\n\n        this.elementRef.nativeElement.selectionStart = initialCursorStart;\n        this.elementRef.nativeElement.selectionEnd = initialCursorEnd;\n\n        if (isAutocompleteTriggered && this.ngControl.errors === null) {\n            this.createSelectionOfTimeComponentInInput(initialCursorStart + 1);\n        }\n    }\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    get empty(): boolean {\n        return !this.elementRef.nativeElement.value && !this.isBadInput();\n    }\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    onContainerClick() {\n        this.focus();\n    }\n\n    writeValue(value: Date | null): void {\n        if (value !== null) {\n            this.renderer.setProperty(this.elementRef.nativeElement,\n                'value',\n                this.getTimeStringFromDate(value, this.timeFormat)\n            );\n        }\n        this.onChange(value || null);\n        this.applyInputChanges();\n    }\n\n    onKeyDown(event: KeyboardEvent): void {\n\n        const keyCode: string = this.getKeyCode(event);\n\n        if (keyCode === ARROW_UP_KEYCODE || keyCode === ARROW_DOWN_KEYCODE) {\n            this.upDownTimeByArrowKeys(event);\n        }\n        if (keyCode === ARROW_LEFT_KEYCODE || keyCode === ARROW_RIGHT_KEYCODE) {\n            this.switchSelectionBetweenTimeparts(event);\n        }\n    }\n\n    registerOnChange(fn: (value: Date) => void): void {\n        this.onChange = fn;\n    }\n\n    registerOnTouched(fn: () => void): void {\n        this.onTouched = fn;\n    }\n\n    /** Does some manual dirty checking on the native input `value` property. */\n    private dirtyCheckNativeValue() {\n        const newValue = this.value;\n\n        if (this.previousNativeValue !== newValue) {\n            this.previousNativeValue = newValue;\n            this.stateChanges.next();\n        }\n    }\n\n    /** Checks whether the input is invalid based on the native validation. */\n    private isBadInput(): boolean {\n        const validity = (<HTMLInputElement> this.elementRef.nativeElement).validity;\n\n        return validity && validity.badInput;\n    }\n\n    private applyInputChanges(applyParams: {\n        changedTime?: Date;\n        doTimestringReformat?: boolean;\n    } = {}): void {\n        const { changedTime, doTimestringReformat = true } = applyParams;\n\n        const timeToApply: Date | undefined = changedTime ||\n            this.getDateFromTimeString(this.elementRef.nativeElement.value);\n        this.currentDateTimeInput = timeToApply;\n\n        if (doTimestringReformat && timeToApply !== undefined) {\n            const selectionStart: number = this.elementRef.nativeElement.selectionStart;\n            const selectionEnd: number = this.elementRef.nativeElement.selectionEnd;\n            this.renderer.setProperty(\n                this.elementRef.nativeElement,\n                'value',\n                this.getTimeStringFromDate(timeToApply, this.timeFormat));\n            this.elementRef.nativeElement.selectionStart = selectionStart;\n            this.elementRef.nativeElement.selectionEnd = selectionEnd;\n        }\n\n        (<FormControl> this.ngControl.control).updateValueAndValidity();\n        const result = this.ngControl.errors === null && timeToApply !== undefined ? timeToApply : null;\n        this.onChange(result);\n        this.stateChanges.next();\n    }\n\n    private upDownTimeByArrowKeys(event: KeyboardEvent): void {\n        event.preventDefault();\n\n        let changedTime: Date | undefined = this.currentDateTimeInput;\n        if (changedTime !== undefined) {\n            const cursorPos = this.elementRef.nativeElement.selectionStart;\n\n            const modifiedTimePart = this.getTimeEditMetrics(cursorPos)\n                .modifiedTimePart;\n            const keyCode: string = this.getKeyCode(event);\n            if (keyCode === ARROW_UP_KEYCODE) { changedTime = this.incrementTime(changedTime, modifiedTimePart); }\n            if (keyCode === ARROW_DOWN_KEYCODE) { changedTime = this.decrementTime(changedTime, modifiedTimePart); }\n            this.applyInputChanges({ changedTime });\n            this.createSelectionOfTimeComponentInInput(cursorPos);\n        }\n    }\n\n    private switchSelectionBetweenTimeparts(event: KeyboardEvent): void {\n        const changedTime: Date | undefined = this.currentDateTimeInput;\n        const keyCode: string = this.getKeyCode(event);\n\n        if (changedTime !== undefined) {\n            let cursorPos: number = this.elementRef.nativeElement.selectionStart;\n            if (keyCode === ARROW_LEFT_KEYCODE) {\n                cursorPos = this.getCursorPositionOfPrevTimePartStart(cursorPos, this.elementRef.nativeElement.value);\n            } else if (keyCode === ARROW_RIGHT_KEYCODE) {\n                cursorPos = this.getCursorPositionOfNextTimePartStart(cursorPos, this.elementRef.nativeElement.value);\n            }\n            this.createSelectionOfTimeComponentInInput(cursorPos);\n        }\n    }\n\n    /**\n     * @description Microsoft EDGE doesn't support KeyboaedEvent.code thus we need this helper\n     */\n    private getKeyCode(event: KeyboardEvent): string {\n        return event.code || event.key;\n    }\n\n    private createSelectionOfTimeComponentInInput(cursorPos: number): void {\n        setTimeout(() => {\n            const newEditParams = this.getTimeEditMetrics(cursorPos);\n            this.elementRef.nativeElement.selectionStart = newEditParams.cursorStartPosition;\n            this.elementRef.nativeElement.selectionEnd = newEditParams.cursorEndPosition;\n        });\n    }\n\n    private incrementTime(dateVal: Date,\n                          whatToIncrement: TimeParts = TimeParts.seconds): Date {\n        let { hours, minutes, seconds } = this.getTimeDigitsFromDate(dateVal);\n\n        switch (whatToIncrement) {\n            case TimeParts.hours:\n                hours++;\n                break;\n            case TimeParts.minutes:\n                minutes++;\n                break;\n            case TimeParts.seconds:\n                seconds++;\n                break;\n            default:\n        }\n\n        if (seconds > SECONDS_PER_MINUTE) { seconds = 0; }\n\n        if (minutes > MINUTES_PER_HOUR) { minutes = 0; }\n\n        if (hours > HOURS_PER_DAY) { hours = 0; }\n\n        return <Date> this.getDateFromTimeDigits(hours, minutes, seconds);\n    }\n\n    /**\n     * @description Decrement part of time\n     */\n    private decrementTime(dateVal: Date,\n                          whatToDecrement: TimeParts = TimeParts.seconds): Date {\n        let { hours, minutes, seconds } = this.getTimeDigitsFromDate(dateVal);\n\n        switch (whatToDecrement) {\n            case TimeParts.hours:\n                hours--;\n                break;\n            case TimeParts.minutes:\n                minutes--;\n                break;\n            case TimeParts.seconds:\n                seconds--;\n                break;\n            default:\n        }\n\n        if (seconds < 0) { seconds = SECONDS_PER_MINUTE; }\n\n        if (minutes < 0) { minutes = MINUTES_PER_HOUR; }\n\n        if (hours < 0) { hours = HOURS_PER_DAY; }\n\n        return <Date> this.getDateFromTimeDigits(hours, minutes, seconds);\n    }\n\n    private getCursorPositionOfPrevTimePartStart(cursorPos: number, timeString: string): number {\n        return cursorPos === 0 ? timeString.length : cursorPos - 1;\n    }\n\n    private getCursorPositionOfNextTimePartStart(cursorPos: number,\n                                                 timeString: string,\n                                                 timeDevider: string = ':'): number {\n        const nextDividerPos: number = timeString.indexOf(timeDevider, cursorPos);\n\n        return nextDividerPos !== undefined ? nextDividerPos + 1 : 0;\n    }\n\n    /**\n     * @description Get params for arrow-keys (up/down) time valie edit.\n     * @param cursorPosition Current cursor position in timeString\n     */\n    private getTimeEditMetrics(cursorPosition: number): {\n        modifiedTimePart: TimeParts;\n        cursorStartPosition: number;\n        cursorEndPosition: number;\n    } {\n        const timeString: string = this.elementRef.nativeElement.value;\n        let modifiedTimePart: TimeParts;\n        let cursorStartPosition: number;\n        let cursorEndPosition: number;\n        const hoursIndex = 0;\n        const minutesIndex = timeString.indexOf(':', hoursIndex + 1);\n        const secondsIndex = minutesIndex !== -1 ? timeString.indexOf(':', minutesIndex + 1) : -1;\n\n        if (secondsIndex !== -1 && cursorPosition > secondsIndex) {\n            modifiedTimePart = TimeParts.seconds;\n            cursorStartPosition = secondsIndex + 1;\n            cursorEndPosition = timeString.length;\n        } else if (minutesIndex !== -1 && cursorPosition > minutesIndex) {\n            modifiedTimePart = TimeParts.minutes;\n            cursorStartPosition = minutesIndex + 1;\n            cursorEndPosition = secondsIndex > -1 ? secondsIndex : timeString.length;\n        } else {\n            modifiedTimePart = TimeParts.hours;\n            cursorStartPosition = hoursIndex;\n            cursorEndPosition = minutesIndex !== -1 ? minutesIndex : timeString.length;\n        }\n\n        return {\n            modifiedTimePart,\n            cursorStartPosition,\n            cursorEndPosition\n        };\n    }\n\n    /**\n     * @description Create time string for displaying inside input element of UI\n     */\n    private getTimeStringFromDate(tempVal: Date,\n                                  timeFormat: TimeFormats = DEFAULT_TIME_FORMAT): string {\n        const hours: string = this.getNumberWithLeadingZero(tempVal.getHours());\n        const minutes: string = this.getNumberWithLeadingZero(tempVal.getMinutes());\n        const seconds: string = this.getNumberWithLeadingZero(tempVal.getSeconds());\n\n        const formattedTimeGenerators = {\n            [TimeFormats.HHmm]: () => `${hours}:${minutes}`,\n            [TimeFormats.HHmmss]: () => `${hours}:${minutes}:${seconds}`\n        };\n\n        return formattedTimeGenerators[timeFormat]();\n    }\n\n    private getParsedTimeParts(timeString: string): {\n        hoursOnly: any;\n        hoursAndMinutes: any;\n        hoursAndMinutesAndSeconds: any;\n    } {\n        const hoursAndMinutesAndSeconds = timeString.match(HOURS_MINUTES_SECONDS_REGEXP);\n        const hoursAndMinutes = timeString.match(HOURS_MINUTES_REGEXP);\n        const hoursOnly = timeString.match(HOURS_ONLY_REGEXP);\n\n        return {\n            hoursOnly,\n            hoursAndMinutes,\n            hoursAndMinutesAndSeconds\n        };\n    }\n\n    /**\n     * @description Create Date object from separate parts of time\n     */\n    private getDateFromTimeDigits(hours: number, minutes: number, seconds: number = 0): Date | undefined {\n        return this.getDateFromTimeString(`${hours}:${minutes}:${seconds}`);\n    }\n\n    private getDateFromTimeString(timeString: string | undefined): Date | undefined {\n        // TODO Use moment-js\n        if (timeString === undefined) { return; }\n\n        const {\n            hoursOnly,\n            hoursAndMinutes,\n            hoursAndMinutesAndSeconds\n        } = this.getParsedTimeParts(timeString);\n\n        if (timeString.trim().length === 0 ||\n            hoursOnly === null && hoursAndMinutes === null && hoursAndMinutesAndSeconds === null) {\n            return;\n        }\n\n        // tslint:disable no-magic-numbers\n        let hours: number = 0;\n        let minutes: number = 0;\n        let seconds: number = 0;\n\n        if (hoursOnly) {\n            hours = Number(hoursOnly[1]);\n        } else if (hoursAndMinutes) {\n            hours = Number(hoursAndMinutes[1]);\n            minutes = Number(hoursAndMinutes[2]);\n        } else if (hoursAndMinutesAndSeconds) {\n            hours = Number(hoursAndMinutesAndSeconds[1]);\n            minutes = Number(hoursAndMinutesAndSeconds[2]);\n            seconds = Number(hoursAndMinutesAndSeconds[3]);\n        }\n        // const timestamp: number = Date.parse(fullDateString);\n        const resultDate: Date = new Date(1970, 0, 1, hours, minutes, seconds);\n        // tslint:enable no-magic-numbers\n\n        return isNaN(resultDate.getTime()) ? undefined : resultDate;\n    }\n\n    private getNumberWithLeadingZero(digit: number): string {\n        const MAX_DIGIT_WITH_LEADING_ZERO: number = 9;\n\n        return digit > MAX_DIGIT_WITH_LEADING_ZERO ? `${digit}` : `0${digit}`;\n    }\n\n    private getTimeDigitsFromDate(dateVal: Date): { hours: number; minutes: number; seconds: number } {\n        return {\n            hours: dateVal.getHours(),\n            minutes: dateVal.getMinutes(),\n            seconds: dateVal.getSeconds()\n        };\n    }\n\n    private parseValidator(): ValidationErrors | null {\n        return this.currentDateTimeInput === undefined ?\n            { mcTimepickerParse: { text: this.elementRef.nativeElement.value } } :\n            null;\n    }\n\n    private minTimeValidator(): ValidationErrors | null {\n\n        if (this.currentDateTimeInput !== undefined &&\n            this.minDateTime !== undefined &&\n            this.isTimeLowerThenMin(this.currentDateTimeInput)) {\n            return { mcTimepickerLowerThenMintime: { text: this.elementRef.nativeElement.value } };\n        }\n\n        return null;\n    }\n\n    private maxTimeValidator(): ValidationErrors | null {\n        if (this.currentDateTimeInput !== undefined &&\n            this.maxDateTime !== undefined &&\n            this.isTimeGreaterThenMax(this.currentDateTimeInput)) {\n            return { mcTimepickerHigherThenMaxtime: { text: this.elementRef.nativeElement.value } };\n        }\n\n        return null;\n    }\n\n    private isTimeLowerThenMin(timeToCompare: Date): boolean {\n        return timeToCompare.getTime() - (<Date> this.minDateTime).getTime() < 0;\n    }\n\n    private isTimeGreaterThenMax(timeToCompare: Date): boolean {\n        return timeToCompare.getTime() - (<Date> this.maxDateTime).getTime() >= 0;\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\n\nimport { A11yModule } from '@ptsecurity/cdk/a11y';\nimport { PlatformModule } from '@ptsecurity/cdk/platform';\n\nimport { McTimepicker } from './timepicker';\n\n\n@NgModule({\n    imports: [\n        CommonModule,\n        A11yModule,\n        PlatformModule,\n        FormsModule\n    ],\n    declarations: [\n        McTimepicker\n    ],\n    exports: [\n        McTimepicker\n    ]\n})\nexport class McTimepickerModule {}\n","import {\n    animate,\n    AnimationTriggerMetadata,\n    state,\n    style,\n    transition,\n    trigger,\n    query,\n    animateChild,\n    group\n} from '@angular/animations';\n\n\n/**\n * The following are all the animations for the mat-select component, with each\n * const containing the metadata for one animation.\n *\n * The values below match the implementation of the AngularJS Material mat-select animation.\n */\nexport const mcSelectAnimations: {\n    readonly transformPanel: AnimationTriggerMetadata;\n    readonly fadeInContent: AnimationTriggerMetadata;\n} = {\n    /**\n     * This animation transforms the select's overlay panel on and off the page.\n     *\n     * When the panel is attached to the DOM, it expands its width by the amount of padding, scales it\n     * up to 100% on the Y axis, fades in its border, and translates slightly up and to the\n     * side to ensure the option text correctly overlaps the trigger text.\n     *\n     * When the panel is removed from the DOM, it simply fades out linearly.\n     */\n    transformPanel: trigger('transformPanel', [\n        state('void', style({\n            transform: 'scaleY(0)',\n            minWidth: '100%',\n            opacity: 0\n        })),\n        transition('void => *', group([\n            query('@fadeInContent', animateChild()),\n            animate('150ms cubic-bezier(0.25, 0.8, 0.25, 1)')\n        ])),\n        transition('* => void', [\n            animate('250ms 100ms linear', style({ opacity: 0 }))\n        ])\n    ]),\n\n    /**\n     * This animation fades in the background color and text content of the\n     * select's options. It is time delayed to occur 100ms after the overlay\n     * panel has transformed in.\n     */\n    fadeInContent: trigger('fadeInContent', [\n        state('showing', style({ opacity: 1 })),\n        transition('void => showing', [\n            style({ opacity: 0 }),\n            animate('150ms 100ms cubic-bezier(0.55, 0, 0.55, 0.2)')\n        ])\n    ])\n};\n\n\n/**\n * @deprecated\n * @breaking-change 7.0.0\n */\nexport const transformPanel = mcSelectAnimations.transformPanel;\n\n/**\n * @deprecated\n * @breaking-change 7.0.0\n */\nexport const fadeInContent = mcSelectAnimations.fadeInContent;\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { OverlayModule } from '@ptsecurity/cdk/overlay';\nimport { McOptionModule } from '@ptsecurity/mosaic/core';\nimport { McFormFieldModule } from '@ptsecurity/mosaic/form-field';\nimport { McIconModule } from '@ptsecurity/mosaic/icon';\nimport { McTagModule } from '@ptsecurity/mosaic/tag';\n\nimport { MC_SELECT_SCROLL_STRATEGY_PROVIDER, McSelect, McSelectTrigger } from './select.component';\n\n\n@NgModule({\n    imports: [\n        CommonModule,\n        OverlayModule,\n        McOptionModule,\n        McIconModule,\n        McTagModule\n    ],\n    exports: [McFormFieldModule, McSelect, McSelectTrigger, McOptionModule, CommonModule],\n    declarations: [McSelect, McSelectTrigger],\n    providers: [MC_SELECT_SCROLL_STRATEGY_PROVIDER]\n})\nexport class McSelectModule {}\n","import {\n    ChangeDetectionStrategy,\n    Component,\n    ViewEncapsulation,\n    ElementRef,\n    Input\n} from '@angular/core';\nimport { CanColor, CanColorCtor, mixinColor, ThemePalette } from '@ptsecurity/mosaic/core';\n\n\nexport type ProgressSpinnerMode = 'determinate' | 'indeterminate';\n\nlet idIterator = 0;\n\nconst MIN_PERCENT = 0;\nconst MAX_PERCENT = 100;\n\nexport class McProgressSpinnerBase {\n    constructor(public _elementRef: ElementRef) {}\n}\n\nexport const _McProgressSpinnerMixinBase:\n    CanColorCtor &\n    typeof McProgressSpinnerBase =\n        mixinColor(McProgressSpinnerBase);\n\nconst MAX_DASH_ARRAY = 273;\n\n@Component({\n    selector: 'mc-progress-spinner',\n    templateUrl: './progress-spinner.component.html',\n    styleUrls: ['./progress-spinner.css'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n    host: {\n        class: 'mc-progress-spinner',\n        '[attr.id]': 'id'\n    }\n})\nexport class McProgressSpinner extends _McProgressSpinnerMixinBase implements CanColor {\n    @Input() id: string = `mc-progress-spinner-${idIterator++}`;\n    @Input() value: number = 0;\n    @Input() mode: ProgressSpinnerMode = 'determinate';\n    @Input() color: ThemePalette = ThemePalette.Primary;\n\n    constructor(elementRef: ElementRef) {\n        super(elementRef);\n    }\n\n    get percentage(): number {\n        return Math.max(MIN_PERCENT, Math.min(MAX_PERCENT, this.value)) / MAX_PERCENT;\n    }\n\n    get dashOffsetPercent(): string {\n        return `${MAX_DASH_ARRAY - this.percentage * MAX_DASH_ARRAY}%`;\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { PlatformModule } from '@ptsecurity/cdk/platform';\n\nimport { McProgressSpinner } from './progress-spinner.component';\n\n\n@NgModule({\n    imports: [\n        CommonModule,\n        PlatformModule\n    ],\n    exports: [\n        McProgressSpinner\n    ],\n    declarations: [\n        McProgressSpinner\n    ]\n})\nexport class McProgressSpinnerModule {}\n","import {\n    AfterContentInit,\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component, ContentChildren, Directive, ElementRef, EventEmitter, forwardRef,\n    Input, OnDestroy, OnInit, Optional, Output, QueryList,\n    ViewChild,\n    ViewEncapsulation\n} from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\n\nimport { UniqueSelectionDispatcher } from '@ptsecurity/cdk/collections';\n\nimport {\n    CanColor, CanColorCtor,\n    CanDisable, CanDisableCtor,\n    HasTabIndex, HasTabIndexCtor,\n    mixinColor,\n    mixinDisabled,\n    mixinTabIndex,\n    toBoolean\n} from '@ptsecurity/mosaic/core';\n\n\n// Increasing integer for generating unique ids for radio components.\nlet nextUniqueId = 0;\n\n/** Change event object emitted by McRadio. */\nexport class McRadioChange {\n    constructor(\n        /** The McRadioButton that emits the change event. */\n        public source: McRadioButton,\n        /** The value of the McRadioButton. */\n        public value: any) {}\n}\n\n// Boilerplate for applying mixins to McRadioGroup.\n/** @docs-private */\nexport class McRadioGroupBase {}\nexport const _McRadioGroupMixinBase: CanDisableCtor & typeof McRadioGroupBase = mixinDisabled(McRadioGroupBase);\n\n/**\n * Provider Expression that allows mc-radio-group to register as a ControlValueAccessor. This\n * allows it to support [(ngModel)] and ngControl.\n * @docs-private\n */\nexport const MC_RADIO_GROUP_CONTROL_VALUE_ACCESSOR: any = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => McRadioGroup),\n    multi: true\n};\n\n@Directive({\n    selector: 'mc-radio-group',\n    exportAs: 'mcRadioGroup',\n    providers: [MC_RADIO_GROUP_CONTROL_VALUE_ACCESSOR],\n    host: {\n        role: 'radiogroup',\n        class: 'mc-radio-group'\n    },\n    inputs: ['disabled']\n})\nexport class McRadioGroup extends _McRadioGroupMixinBase\n    implements AfterContentInit, ControlValueAccessor, CanDisable {\n\n    /** Name of the radio button group. All radio buttons inside this group will use this name. */\n    @Input()\n    get name(): string { return this._name; }\n    set name(value: string) {\n        this._name = value;\n        this.updateRadioButtonNames();\n    }\n\n    /** Whether the labels should appear after or before the radio-buttons. Defaults to 'after' */\n    @Input()\n    get labelPosition(): 'before' | 'after' {\n        return this._labelPosition;\n    }\n    set labelPosition(v) {\n        this._labelPosition = v === 'before' ? 'before' : 'after';\n        this.markRadiosForCheck();\n    }\n\n    /** Value of the radio button. */\n    @Input()\n    get value(): any { return this._value; }\n    set value(newValue: any) {\n        if (this._value !== newValue) {\n            // Set this before proceeding to ensure no circular loop occurs with selection.\n            this._value = newValue;\n\n            this.updateSelectedRadioFromValue();\n            this.checkSelectedRadioButton();\n        }\n    }\n\n    /** Whether the radio button is selected. */\n    @Input()\n    get selected() { return this._selected; }\n    set selected(selected: McRadioButton | null) {\n        this._selected = selected;\n        this.value = selected ? selected.value : null;\n        this.checkSelectedRadioButton();\n    }\n\n    /** Whether the radio group is disabled */\n    @Input()\n    get disabled(): boolean { return this._disabled; }\n    set disabled(value) {\n        this._disabled = toBoolean(value);\n        this.markRadiosForCheck();\n    }\n\n    /** Whether the radio group is required */\n    @Input()\n    get required(): boolean { return this._required; }\n    set required(value: boolean) {\n        this._required = toBoolean(value);\n        this.markRadiosForCheck();\n    }\n\n    /**\n     * Event emitted when the group value changes.\n     * Change events are only emitted when the value changes due to user interaction with\n     * a radio button (the same behavior as `<input type-\"radio\">`).\n     */\n    @Output() readonly change: EventEmitter<McRadioChange> = new EventEmitter<McRadioChange>();\n\n    /** Child radio buttons. */\n    @ContentChildren(forwardRef(() => McRadioButton), { descendants: true })\n    _radios: QueryList<McRadioButton>;\n\n    /**\n     * Selected value for group. Should equal the value of the selected radio button if there *is*\n     * a corresponding radio button with a matching value. If there is *not* such a corresponding\n     * radio button, this value persists to be applied in case a new radio button is added with a\n     * matching value.\n     */\n    private _value: any = null;\n\n    /** The HTML name attribute applied to radio buttons in this group. */\n    private _name: string = `mc-radio-group-${nextUniqueId++}`;\n\n    /** The currently selected radio button. Should match value. */\n    private _selected: McRadioButton | null = null;\n\n    /** Whether the `value` has been set to its initial value. */\n    private _isInitialized: boolean = false;\n\n    /** Whether the labels should appear after or before the radio-buttons. Defaults to 'after' */\n    private _labelPosition: 'before' | 'after' = 'after';\n\n    /** Whether the radio group is disabled. */\n    private _disabled: boolean = false;\n\n    /** Whether the radio group is required. */\n    private _required: boolean = false;\n\n    constructor(\n        private readonly _changeDetector: ChangeDetectorRef\n    ) {\n        super();\n    }\n\n    /** The method to be called in order to update ngModel */\n    // tslint:disable-next-line\n    controlValueAccessorChangeFn: (value: any) => void = () => {};\n\n    /**\n     * onTouch function registered via registerOnTouch (ControlValueAccessor).\n     * @docs-private\n     */\n    // tslint:disable-next-line\n    onTouched: () => any = () => {};\n\n    checkSelectedRadioButton() {\n        if (this._selected && !this._selected.checked) {\n            this._selected.checked = true;\n        }\n    }\n\n    /**\n     * Initialize properties once content children are available.\n     * This allows us to propagate relevant attributes to associated buttons.\n     */\n    ngAfterContentInit() {\n        // Mark this component as initialized in AfterContentInit because the initial value can\n        // possibly be set by NgModel on McRadioGroup, and it is possible that the OnInit of the\n        // NgModel occurs *after* the OnInit of the McRadioGroup.\n        this._isInitialized = true;\n    }\n\n    /**\n     * Mark this group as being \"touched\" (for ngModel). Meant to be called by the contained\n     * radio buttons upon their blur.\n     */\n    touch() {\n        if (this.onTouched) {\n            this.onTouched();\n        }\n    }\n\n    /** Dispatch change event with current selection and group value. */\n    emitChangeEvent(): void {\n        if (this._isInitialized) {\n            this.change.emit(new McRadioChange(this._selected!, this._value));\n        }\n    }\n\n    markRadiosForCheck() {\n        if (this._radios) {\n            this._radios.forEach((radio) => radio.markForCheck());\n        }\n    }\n\n    /**\n     * Sets the model value. Implemented as part of ControlValueAccessor.\n     */\n    writeValue(value: any) {\n        this.value = value;\n        this._changeDetector.markForCheck();\n    }\n\n    /**\n     * Registers a callback to be triggered when the model value changes.\n     * Implemented as part of ControlValueAccessor.\n     * @param fn Callback to be registered.\n     */\n    registerOnChange(fn: (value: any) => void) {\n        this.controlValueAccessorChangeFn = fn;\n    }\n\n    /**\n     * Registers a callback to be triggered when the control is touched.\n     * Implemented as part of ControlValueAccessor.\n     * @param fn Callback to be registered.\n     */\n    registerOnTouched(fn: any) {\n        this.onTouched = fn;\n    }\n\n    /**\n     * Sets the disabled state of the control. Implemented as a part of ControlValueAccessor.\n     * @param isDisabled Whether the control should be disabled.\n     */\n    setDisabledState(isDisabled: boolean) {\n        this.disabled = isDisabled;\n        this._changeDetector.markForCheck();\n    }\n\n    private updateRadioButtonNames(): void {\n        if (this._radios) {\n            this._radios.forEach((radio) => {\n                radio.name = this.name;\n            });\n        }\n    }\n\n    /** Updates the `selected` radio button from the internal _value state. */\n    private updateSelectedRadioFromValue(): void {\n        // If the value already matches the selected radio, do nothing.\n        const isAlreadySelected = this._selected !== null && this._selected.value === this._value;\n\n        if (this._radios != null && !isAlreadySelected) {\n            this._selected = null;\n            this._radios.forEach((radio) => {\n                radio.checked = this.value === radio.value;\n                if (radio.checked) {\n                    this._selected = radio;\n                }\n            });\n        }\n    }\n}\n\n\n// Boilerplate for applying mixins to McRadioButton.\n/** @docs-private */\nexport class McRadioButtonBase {\n    // Since the disabled property is manually defined for the McRadioButton and isn't set up in\n    // the mixin base class. To be able to use the tabindex mixin, a disabled property must be\n    // defined to properly work.\n    disabled: boolean;\n\n    constructor(public _elementRef: ElementRef) {}\n}\n\nexport const _McRadioButtonMixinBase:\n    CanColorCtor &\n    HasTabIndexCtor &\n    typeof McRadioButtonBase =\n        mixinColor(mixinTabIndex(McRadioButtonBase));\n\n\n@Component({\n    selector: 'mc-radio-button',\n    templateUrl: 'radio.component.html',\n    styleUrls: ['radio.css'],\n    inputs: ['color', 'tabIndex'],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    exportAs: 'mcRadioButton',\n    host: {\n        class: 'mc-radio-button',\n        '[attr.id]': 'id',\n        '[class.mc-radio-checked]': 'checked',\n        '[class.mc-radio-disabled]': 'disabled',\n        '(focus)': '_inputElement.nativeElement.focus()'\n    }\n})\nexport class McRadioButton extends _McRadioButtonMixinBase\n    implements OnInit, OnDestroy, CanColor, HasTabIndex {\n\n    private readonly _uniqueId: string = `mc-radio-${++nextUniqueId}`;\n\n    /* tslint:disable:member-ordering */\n\n    /** The unique ID for the radio button. */\n    @Input() id: string = this._uniqueId;\n\n    /** Analog to HTML 'name' attribute used to group radios for unique selection. */\n    @Input() name: string;\n\n    /** Used to set the 'aria-label' attribute on the underlying input element. */\n    @Input('aria-label') ariaLabel: string;\n\n    /** The 'aria-labelledby' attribute takes precedence as the element's text alternative. */\n    @Input('aria-labelledby') ariaLabelledby: string;\n\n    /** The 'aria-describedby' attribute is read after the element's label and field type. */\n    @Input('aria-describedby') ariaDescribedby: string;\n\n    /** Whether this radio button is checked. */\n    @Input()\n    get checked(): boolean { return this._checked; }\n    set checked(value: boolean) {\n        const newCheckedState = toBoolean(value);\n\n        if (this._checked !== newCheckedState) {\n            this._checked = newCheckedState;\n\n            if (newCheckedState && this.radioGroup && this.radioGroup.value !== this.value) {\n                this.radioGroup.selected = this;\n            } else if (!newCheckedState && this.radioGroup && this.radioGroup.value === this.value) {\n                // When unchecking the selected radio button, update the selected radio\n                // property on the group.\n                this.radioGroup.selected = null;\n            }\n\n            if (newCheckedState) {\n                // Notify all radio buttons with the same name to un-check.\n                this._radioDispatcher.notify(this.id, this.name);\n            }\n            this._changeDetector.markForCheck();\n        }\n    }\n\n    /** The value of this radio button. */\n    @Input()\n    get value(): any { return this._value; }\n    set value(value: any) {\n        if (this._value !== value) {\n            this._value = value;\n            if (this.radioGroup != null) {\n                if (!this.checked) {\n                    // Update checked when the value changed to match the radio group's value\n                    this.checked = this.radioGroup.value === value;\n                }\n                if (this.checked) {\n                    this.radioGroup.selected = this;\n                }\n            }\n        }\n    }\n\n    /** Whether the radio button is disabled. */\n    @Input()\n    get disabled(): boolean {\n        return this._disabled || (this.radioGroup != null && this.radioGroup.disabled);\n    }\n    set disabled(value: boolean) {\n        const newDisabledState = toBoolean(value);\n\n        if (this._disabled !== newDisabledState) {\n\n            this._disabled = newDisabledState;\n            this._changeDetector.markForCheck();\n        }\n    }\n\n    /** Whether the radio button is required. */\n    @Input()\n    get required(): boolean {\n        return this._required || (this.radioGroup && this.radioGroup.required);\n    }\n    set required(value: boolean) {\n        this._required = toBoolean(value);\n    }\n\n    /** Whether the label should appear after or before the radio button. Defaults to 'after' */\n    @Input()\n    get labelPosition(): 'before' | 'after' {\n        return this._labelPosition || (this.radioGroup && this.radioGroup.labelPosition) || 'after';\n    }\n    set labelPosition(value) {\n        this._labelPosition = value;\n    }\n    private _labelPosition: 'before' | 'after';\n\n    /** The native `<input type=radio>` element */\n    @ViewChild('input') _inputElement: ElementRef;\n\n    /**\n     * Event emitted when the checked state of this radio button changes.\n     * Change events are only emitted when the value changes due to user interaction with\n     * the radio button (the same behavior as `<input type-\"radio\">`).\n     */\n    @Output() readonly change: EventEmitter<McRadioChange> = new EventEmitter<McRadioChange>();\n\n    /** The parent radio group. May or may not be present. */\n    radioGroup: McRadioGroup;\n\n    @Input()\n    isFocused: boolean = false;\n\n    /** ID of the native input element inside `<mc-radio-button>` */\n    get inputId(): string { return `${this.id || this._uniqueId}-input`; }\n\n    /** Whether this radio is checked. */\n    private _checked: boolean = false;\n\n    /** Whether this radio is disabled. */\n    private _disabled: boolean;\n\n    /** Whether this radio is required. */\n    private _required: boolean;\n\n    /** Value assigned to this radio. */\n    private _value: any = null;\n\n    /** Unregister function for _radioDispatcher */\n    // tslint:disable-next-line\n    private readonly removeUniqueSelectionListener: () => void = () => {};\n\n    constructor(\n        @Optional() radioGroup: McRadioGroup,\n        elementRef: ElementRef,\n        private readonly _changeDetector: ChangeDetectorRef,\n        private readonly _radioDispatcher: UniqueSelectionDispatcher\n    ) {\n\n        super(elementRef);\n\n        this.radioGroup = radioGroup;\n\n        this.removeUniqueSelectionListener =\n            _radioDispatcher.listen((id: string, name: string) => {\n                if (id !== this.id && name === this.name) {\n                    this.checked = false;\n                }\n            });\n    }\n\n    ngOnInit() {\n        if (this.radioGroup) {\n            // If the radio is inside a radio group, determine if it should be checked\n            this.checked = this.radioGroup.value === this._value;\n            // Copy name from parent radio group\n            this.name = this.radioGroup.name;\n        }\n    }\n\n    ngOnDestroy() {\n        this.removeUniqueSelectionListener();\n    }\n\n    /** Focuses the radio button. */\n    // tslint:disable-next-line\n    focus(): void {}\n\n    /**\n     * Marks the radio button as needing checking for change detection.\n     * This method is exposed because the parent radio group will directly\n     * update bound properties of the radio button.\n     */\n    markForCheck() {\n        // When group value changes, the button will not be notified. Use `markForCheck` to explicit\n        // update radio button's status\n        this._changeDetector.markForCheck();\n    }\n\n    onInputClick(event: Event) {\n        // We have to stop propagation for click events on the visual hidden input element.\n        // By default, when a user clicks on a label element, a generated click event will be\n        // dispatched on the associated input element. Since we are using a label element as our\n        // root container, the click event on the `radio-button` will be executed twice.\n        // The real click event will bubble up, and the generated click event also tries to bubble up.\n        // This will lead to multiple click events.\n        // Preventing bubbling for the second event will solve that issue.\n        event.stopPropagation();\n    }\n\n    onInputChange(event: Event) {\n        // We always have to stop propagation on the change event.\n        // Otherwise the change event, from the input element, will bubble up and\n        // emit its event object to the `change` output.\n        event.stopPropagation();\n\n        const groupValueChanged = this.radioGroup && this.value !== this.radioGroup.value;\n        this.checked = true;\n        this.emitChangeEvent();\n\n        if (this.radioGroup) {\n            this.radioGroup.controlValueAccessorChangeFn(this.value);\n            this.radioGroup.touch();\n            if (groupValueChanged) {\n                this.radioGroup.emitChangeEvent();\n            }\n        }\n    }\n\n    /** Dispatch change event with current value. */\n    private emitChangeEvent(): void {\n        this.change.emit(new McRadioChange(this, this._value));\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { A11yModule } from '@ptsecurity/cdk/a11y';\nimport { McCommonModule } from '@ptsecurity/mosaic/core';\n\nimport { McRadioButton, McRadioGroup } from './radio.component';\n\n\n@NgModule({\n    imports: [CommonModule, A11yModule, McCommonModule],\n    exports: [McRadioGroup, McRadioButton],\n    declarations: [McRadioGroup, McRadioButton]\n})\nexport class McRadioModule {\n}\n","import { Directive, Input } from '@angular/core';\n\nimport { CdkTreeNodeDef } from '@ptsecurity/cdk/tree';\n\n\n@Directive({\n    selector: '[mcTreeNodeDef]',\n    inputs: ['when: mcTreeNodeDefWhen'],\n    providers: [{ provide: CdkTreeNodeDef, useExisting: McTreeNodeDef }]\n})\nexport class McTreeNodeDef<T> extends CdkTreeNodeDef<T> {\n    @Input('mcTreeNode') data: T;\n}\n","import { Directive, Input, OnInit } from '@angular/core';\nimport { CdkTreeNodePadding } from '@ptsecurity/cdk/tree';\n\n\n@Directive({\n    selector: '[mcTreeNodePadding]',\n    providers: [{ provide: CdkTreeNodePadding, useExisting: McTreeNodePadding }]\n})\nexport class McTreeNodePadding<T> extends CdkTreeNodePadding<T> implements OnInit {\n    get leftPadding(): number {\n        return (this._withIcon ? 0 : this._iconWidth) + this._baseLeftPadding;\n    }\n\n    _baseLeftPadding: number = 6;\n    _iconWidth: number = 20;\n    _indent: number = 16;\n\n    @Input('mcTreeNodePadding') level: number;\n\n    @Input('mcTreeNodePaddingIndent') indent: number;\n\n    _withIcon: boolean;\n\n    _paddingIndent(): string | null {\n        const nodeLevel = (this._treeNode.data && this._tree.treeControl.getLevel)\n            ? this._tree.treeControl.getLevel(this._treeNode.data)\n            : null;\n\n        const level = this._level || nodeLevel;\n\n        return level ? `${(level * this._indent) + this.leftPadding}px` : `${this._baseLeftPadding}px`;\n    }\n\n    ngOnInit(): void {\n        this._withIcon = this._tree.treeControl.isExpandable(this._treeNode.data);\n        this._setPadding();\n    }\n}\n","import {\n    AfterContentInit,\n    Attribute,\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component, ContentChildren, EventEmitter, forwardRef, Input, IterableDiffer,\n    IterableDiffers, Output, QueryList,\n    ViewChild,\n    ViewEncapsulation,\n    Directive, ElementRef, Inject\n} from '@angular/core';\nimport { NodeDef, ViewData } from '@angular/core/src/view';\n\nimport { SelectionModel } from '@ptsecurity/cdk/collections';\nimport { CdkTreeNode, CdkTree, CdkTreeNodeOutlet } from '@ptsecurity/cdk/tree';\n\nimport {\n    CanDisable, CanDisableCtor,\n    HasTabIndex,\n    HasTabIndexCtor,\n    mixinDisabled,\n    mixinTabIndex,\n    toBoolean\n} from '@ptsecurity/mosaic/core';\n\nimport { FocusKeyManager } from '@ptsecurity/cdk/a11y';\n\nimport { END, ENTER, HOME, LEFT_ARROW, PAGE_DOWN, PAGE_UP, RIGHT_ARROW, SPACE } from '@ptsecurity/cdk/keycodes';\n\n\n/**\n * Wrapper for the CdkTree node with Material design styles.\n */\n@Directive({\n    exportAs: 'mcTreeNodeOption',\n    selector: 'mc-tree-node-option',\n    host: {\n        tabindex: '-1',\n        '[class.mc-selected]': 'selected',\n        '[class.mc-focused]': '_hasFocus',\n        '[attr.aria-expanded]': 'isExpanded',\n        '[attr.aria-level]': 'role === \"treeitem\" ? level : null',\n        class: 'mc-tree-node',\n\n        '(focus)': '_handleFocus()',\n        '(blur)': '_handleBlur()',\n\n        '(click)': '_handleClick()'\n    },\n    providers: [\n        { provide: CdkTreeNode, useExisting: McTreeNodeOption }\n    ]\n})\nexport class McTreeNodeOption<T> extends CdkTreeNode<T> implements CanDisable {\n    @Input() role: 'treeitem' | 'group' = 'treeitem';\n\n    @Input()\n    get disabled() {\n        return this._disabled;\n    }\n\n    set disabled(value: any) {\n        const newValue = toBoolean(value);\n\n        if (newValue !== this._disabled) {\n            this._disabled = newValue;\n        }\n    }\n\n    @Input()\n    get selected(): boolean {\n        return this.treeSelection.selectedOptions && this.treeSelection.selectedOptions.isSelected(this) || false;\n    }\n\n    set selected(value: boolean) {\n        const isSelected = toBoolean(value);\n\n        if (isSelected !== this._selected) {\n            this.setSelected(isSelected);\n\n            // this.treeSelection._reportValueChange();\n        }\n    }\n\n    private _hasFocus: boolean = false;\n\n    private _disabled: boolean = false;\n    private _selected: boolean = false;\n\n    constructor(\n        protected _elementRef: ElementRef,\n        @Inject(forwardRef(() => McTreeSelection))\n        protected treeSelection: McTreeSelection<T>\n    ) {\n        super(_elementRef, treeSelection);\n    }\n\n    focus(): void {\n        this._elementRef.nativeElement.focus();\n\n        this.treeSelection.setFocusedOption(this);\n    }\n\n    toggle(): void {\n        this.selected = !this.selected;\n    }\n\n    setSelected(selected: boolean) {\n        if (this._selected === selected || !this.treeSelection.selectedOptions) { return; }\n\n        this._selected = selected;\n\n        if (selected) {\n            this.treeSelection.selectedOptions.select(this);\n        } else {\n            this.treeSelection.selectedOptions.deselect(this);\n        }\n\n        // this._changeDetector.markForCheck();\n    }\n\n    _getHeight(): number {\n        return this._elementRef.nativeElement.getClientRects()[0].height;\n    }\n\n    _handleFocus(): void {\n        if (this.disabled || this._hasFocus) { return; }\n\n        this._hasFocus = true;\n    }\n\n    _handleBlur(): void {\n        this._hasFocus = false;\n    }\n\n    _handleClick(): void {\n        if (this.disabled) { return; }\n\n        this.treeSelection.setFocusedOption(this);\n    }\n}\n\nexport const _McTreeSelectionBase:\n    HasTabIndexCtor &\n    CanDisableCtor &\n    typeof CdkTree\n    = mixinTabIndex(mixinDisabled(CdkTree));\n\nexport class McTreeNavigationChange {\n    constructor(\n        public source: McTreeSelection<any>,\n        public option: McTreeNodeOption<any>\n    ) {}\n}\n\nexport class McTreeSelectionChange {\n    constructor(\n        public source: McTreeSelection<any>,\n        public option: McTreeNodeOption<any>\n    ) {}\n}\n\n@Component({\n    exportAs: 'mcTreeSelection',\n    selector: 'mc-tree-selection',\n    template: `<ng-container cdkTreeNodeOutlet></ng-container>`,\n    host: {\n        '[tabIndex]': 'tabIndex',\n        class: 'mc-tree-selection',\n        role: 'tree-selection',\n        '(keydown)': '_onKeyDown($event)',\n        '(window:resize)': 'updateScrollSize()'\n    },\n    styleUrls: ['./tree.css'],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    providers: [{ provide: CdkTree, useExisting: McTreeSelection }]\n})\nexport class McTreeSelection<T> extends _McTreeSelectionBase<T>\n    implements AfterContentInit, CanDisable, HasTabIndex {\n    // Outlets within the tree's template where the dataNodes will be inserted.\n    @ViewChild(CdkTreeNodeOutlet) _nodeOutlet: CdkTreeNodeOutlet;\n\n    @ContentChildren(forwardRef(() => McTreeNodeOption)) options: QueryList<McTreeNodeOption<T>>;\n\n    _keyManager: FocusKeyManager<McTreeNodeOption<T>>;\n\n    selectedOptions: SelectionModel<McTreeNodeOption<T>>;\n\n    _disabled: boolean = false;\n    tabIndex: number;\n    multiple: boolean;\n    autoSelect: boolean;\n    noUnselect: boolean;\n\n    // todo temporary solution\n    withShift: boolean;\n    withCtrl: boolean;\n\n    @Input()\n    get disabled(): boolean {\n        return this._disabled;\n    }\n\n    set disabled(rawValue: boolean) {\n        const value = toBoolean(rawValue);\n\n        if (this._disabled !== value) {\n            this._disabled = value;\n\n            if (this._disabled) {\n                console.log('need disable all options');\n            } else {\n                console.log('need enable all options');\n            }\n        }\n    }\n\n    @Output() readonly navigationChange = new EventEmitter<McTreeNavigationChange>();\n\n    @Output() readonly selectionChange = new EventEmitter<McTreeSelectionChange>();\n\n    constructor(\n        private _elementRef: ElementRef,\n        _differs: IterableDiffers,\n        _changeDetectorRef: ChangeDetectorRef,\n        @Attribute('tabindex') tabIndex: string,\n        @Attribute('multiple') multiple: string,\n        @Attribute('auto-select') autoSelect: string,\n        @Attribute('no-unselect') noUnselect: string\n    ) {\n        super(_differs, _changeDetectorRef);\n\n        this.tabIndex = parseInt(tabIndex) || 0;\n\n        this.multiple = multiple === null ? true : toBoolean(multiple);\n        this.autoSelect = autoSelect === null ? true : toBoolean(autoSelect);\n        this.noUnselect = noUnselect === null ? true : toBoolean(noUnselect);\n\n        this.selectedOptions = new SelectionModel<McTreeNodeOption<T>>(this.multiple);\n    }\n\n    _onKeyDown(event: KeyboardEvent) {\n        const keyCode = event.keyCode;\n        this.withShift = event.shiftKey;\n        this.withCtrl = event.ctrlKey;\n\n        switch (keyCode) {\n            case LEFT_ARROW:\n                if (this._keyManager.activeItem) {\n                    this.treeControl.collapse(this._keyManager.activeItem.data);\n                }\n\n                event.preventDefault();\n\n                break;\n            case RIGHT_ARROW:\n                if (this._keyManager.activeItem) {\n                    this.treeControl.expand(this._keyManager.activeItem.data);\n                }\n\n                event.preventDefault();\n\n                break;\n            case SPACE:\n            case ENTER:\n                this.toggleFocusedOption();\n                event.preventDefault();\n\n                break;\n            case HOME:\n                this._keyManager.setFirstItemActive();\n                event.preventDefault();\n\n                break;\n            case END:\n                this._keyManager.setLastItemActive();\n                event.preventDefault();\n\n                break;\n            case PAGE_UP:\n                this._keyManager.setPreviousPageItemActive();\n                event.preventDefault();\n\n                break;\n            case PAGE_DOWN:\n                this._keyManager.setNextPageItemActive();\n                event.preventDefault();\n\n                break;\n            default:\n                this._keyManager.onKeydown(event);\n        }\n    }\n\n    ngAfterContentInit(): void {\n        this._keyManager = new FocusKeyManager<McTreeNodeOption<T>>(this.options)\n            .withTypeAhead()\n            .withVerticalOrientation(true)\n            .withHorizontalOrientation(null);\n    }\n\n    updateScrollSize(): void {\n        if (!this.options.first) { return; }\n\n        this._keyManager.withScrollSize(Math.floor(this._getHeight() / this.options.first._getHeight()));\n    }\n\n    setFocusedOption(option: McTreeNodeOption<T>): void {\n        this._keyManager.updateActiveItem(option);\n\n        if (this.withShift && this.multiple) {\n            const previousIndex = this._keyManager.previousActiveItemIndex;\n            const activeIndex = this._keyManager.activeItemIndex;\n\n            if (previousIndex < activeIndex) {\n                this.options.forEach((item, index) => {\n                    if (index >= previousIndex && index <= activeIndex) { item.setSelected(true); }\n                });\n            } else {\n                this.options.forEach((item, index) => {\n                    if (index >= activeIndex && index <= previousIndex) { item.setSelected(true); }\n                });\n            }\n\n            this.withShift = false;\n        } else if (this.withCtrl) {\n            this.withCtrl = false;\n\n            if (!this._canDeselectLast(option)) { return; }\n\n            option.toggle();\n        } else {\n            if (this.autoSelect) {\n                this.options.forEach((item) => item.setSelected(false));\n                option.setSelected(true);\n            }\n        }\n\n        this._emitNavigationEvent(option);\n    }\n\n    // Toggles the selected state of the currently focused option.\n    toggleFocusedOption(): void {\n        const focusedIndex = this._keyManager.activeItemIndex;\n\n        if (focusedIndex != null && this._isValidIndex(focusedIndex)) {\n            const focusedOption: McTreeNodeOption<T> = this.options.toArray()[focusedIndex];\n\n            if (focusedOption && this._canDeselectLast(focusedOption)) {\n                focusedOption.toggle();\n\n                // Emit a change event because the focused option changed its state through user interaction.\n                this._emitChangeEvent(focusedOption);\n            }\n        }\n    }\n\n    renderNodeChanges(\n        data: T[],\n        dataDiffer: IterableDiffer<T> = this._dataDiffer,\n        viewContainer: any = this._nodeOutlet.viewContainer,\n        parentData?: T\n    ) {\n        super.renderNodeChanges(data, dataDiffer, viewContainer, parentData);\n\n        const arrayOfInstances = [];\n\n        viewContainer._embeddedViews.forEach((view: ViewData) => {\n            const viewDef = view.def;\n\n            viewDef.nodes.forEach((node: NodeDef) => {\n                if (viewDef.nodeMatchedQueries === node.matchedQueryIds) {\n                    const nodeData: any = view.nodes[node.nodeIndex];\n\n                    arrayOfInstances.push(nodeData.instance as never);\n                }\n            });\n        });\n\n        if (this.options) {\n            this.options.reset(arrayOfInstances);\n            this.options.notifyOnChanges();\n        }\n\n        this.updateScrollSize();\n    }\n\n    _getHeight(): number {\n        return this._elementRef.nativeElement.getClientRects()[0].height;\n    }\n\n    _emitNavigationEvent(option: McTreeNodeOption<T>): void {\n        this.navigationChange.emit(new McTreeNavigationChange(this, option));\n    }\n\n    _emitChangeEvent(option: McTreeNodeOption<T>): void {\n        this.selectionChange.emit(new McTreeNavigationChange(this, option));\n    }\n\n    /**\n     * Utility to ensure all indexes are valid.\n     * @param index The index to be checked.\n     * @returns True if the index is valid for our list of options.\n     */\n    private _isValidIndex(index: number): boolean {\n        return index >= 0 && index < this.options.length;\n    }\n\n    private _canDeselectLast(option: McTreeNodeOption<T>): boolean {\n        return !(this.noUnselect && this.selectedOptions.selected.length === 1 && option.selected);\n    }\n}\n\n","import { NgModule } from '@angular/core';\n\nimport { CommonModule } from '@angular/common';\nimport { CdkTreeModule } from '@ptsecurity/cdk/tree';\n\nimport { McTreeNodeDef } from './node';\nimport { McTreeNodePadding } from './padding';\nimport { McTreeSelection, McTreeNodeOption } from './tree-selection';\n\n\nconst MC_TREE_DIRECTIVES = [\n    McTreeNodeDef,\n    McTreeNodePadding,\n    McTreeSelection,\n    McTreeNodeOption\n];\n\n@NgModule({\n    imports: [CommonModule, CdkTreeModule],\n    exports: MC_TREE_DIRECTIVES,\n    declarations: MC_TREE_DIRECTIVES\n})\nexport class McTreeModule {}\n","import { ICollectionViewer, DataSource } from '@ptsecurity/cdk/collections';\nimport { FlatTreeControl, ITreeControl } from '@ptsecurity/cdk/tree';\nimport { BehaviorSubject, merge, Observable } from 'rxjs';\nimport { map, take } from 'rxjs/operators';\n\n\n/**\n * Tree flattener to convert a normal type of node to node with children & level information.\n * Transform nested nodes of type `T` to flattened nodes of type `F`.\n *\n * For example, the input data of type `T` is nested, and contains its children data:\n *   SomeNode: {\n *     key: 'Fruits',\n *     children: [\n *       NodeOne: {\n *         key: 'Apple',\n *       },\n *       NodeTwo: {\n *        key: 'Pear',\n *      }\n *    ]\n *  }\n *  After flattener flatten the tree, the structure will become\n *  SomeNode: {\n *    key: 'Fruits',\n *    expandable: true,\n *    level: 1\n *  },\n *  NodeOne: {\n *    key: 'Apple',\n *    expandable: false,\n *    level: 2\n *  },\n *  NodeTwo: {\n *   key: 'Pear',\n *   expandable: false,\n *   level: 2\n * }\n * and the output flattened type is `F` with additional information.\n */\nexport class McTreeFlattener<T, F> {\n\n    constructor(public transformFunction: (node: T, level: number) => F,\n                public getLevel: (node: F) => number,\n                public isExpandable: (node: F) => boolean,\n                public getChildren: (node: T) => Observable<T[]>) {\n    }\n\n    _flattenNode(node: T, level: number,\n                 resultNodes: F[], parentMap: boolean[]): F[] {\n        const flatNode = this.transformFunction(node, level);\n        resultNodes.push(flatNode);\n\n        if (this.isExpandable(flatNode)) {\n            this.getChildren(node).pipe(take(1)).subscribe((children) => {\n                children.forEach((child, index) => {\n                    const childParentMap: boolean[] = parentMap.slice();\n                    childParentMap.push(index !== children.length - 1);\n                    this._flattenNode(child, level + 1, resultNodes, childParentMap);\n                });\n            });\n        }\n\n        return resultNodes;\n    }\n\n    /**\n     * Flatten a list of node type T to flattened version of node F.\n     * Please note that type T may be nested, and the length of `structuredData` may be different\n     * from that of returned list `F[]`.\n     */\n    flattenNodes(structuredData: T[]): F[] {\n        const resultNodes: F[] = [];\n        structuredData.forEach((node) => this._flattenNode(node, 0, resultNodes, []));\n\n        return resultNodes;\n    }\n\n    /**\n     * Expand flattened node with current expansion status.\n     * The returned list may have different length.\n     */\n    expandFlattenedNodes(nodes: F[], treeControl: ITreeControl<F>): F[] {\n        const results: F[] = [];\n        const currentExpand: boolean[] = [];\n        currentExpand[0] = true;\n\n        nodes.forEach((node) => {\n            let expand = true;\n            for (let i = 0; i <= this.getLevel(node); i++) {\n                expand = expand && currentExpand[i];\n            }\n\n            if (expand) { results.push(node); }\n\n            if (this.isExpandable(node)) {\n                currentExpand[this.getLevel(node) + 1] = treeControl.isExpanded(node);\n            }\n        });\n\n        return results;\n    }\n}\n\n\n/**\n * Data source for flat tree.\n * The data source need to handle expansion/collapsion of the tree node and change the data feed\n * to `McTree`.\n * The nested tree nodes of type `T` are flattened through `MсTreeFlattener`, and converted\n * to type `F` for `McTree` to consume.\n */\nexport class McTreeFlatDataSource<T, F> extends DataSource<F> {\n    _flattenedData = new BehaviorSubject<F[]>([]);\n\n    _expandedData = new BehaviorSubject<F[]>([]);\n\n    _data: BehaviorSubject<T[]>;\n\n    get data() {\n        return this._data.value;\n    }\n\n    set data(value: T[]) {\n        this._data.next(value);\n        this._flattenedData.next(this.treeFlattener.flattenNodes(this.data));\n        this.treeControl.dataNodes = this._flattenedData.value;\n    }\n\n    constructor(private treeControl: FlatTreeControl<F>,\n                private treeFlattener: McTreeFlattener<T, F>,\n                initialData: T[] = []) {\n        super();\n        this._data = new BehaviorSubject<T[]>(initialData);\n    }\n\n    connect(collectionViewer: ICollectionViewer): Observable<F[]> {\n        const changes = [\n            collectionViewer.viewChange,\n            this.treeControl.expansionModel.onChange!,\n            this._flattenedData\n        ];\n\n        return merge(...changes).pipe(map(() => {\n            this._expandedData.next(\n                this.treeFlattener.expandFlattenedNodes(this._flattenedData.value, this.treeControl));\n\n            return this._expandedData.value;\n        }));\n    }\n\n    disconnect() {\n        // no op\n    }\n}\n\n","import { ICollectionViewer, DataSource } from '@ptsecurity/cdk/collections';\nimport { BehaviorSubject, merge, Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\n\n/**\n * Data source for nested tree.\n *\n * The data source for nested tree doesn't have to consider node flattener, or the way to expand\n * or collapse. The expansion/collapsion will be handled by ITreeControl and each non-leaf node.\n */\nexport class McTreeNestedDataSource<T> extends DataSource<T> {\n    _data = new BehaviorSubject<T[]>([]);\n\n    /**\n     * Data for the nested tree\n     */\n    get data() {\n        return this._data.value;\n    }\n\n    set data(value: T[]) {\n        this._data.next(value);\n    }\n\n    connect(collectionViewer: ICollectionViewer): Observable<T[]> {\n        return merge(...[collectionViewer.viewChange, this._data])\n            .pipe(map(() => this.data));\n    }\n\n    disconnect() {\n        // no op\n    }\n}\n\n","import {\n    ElementRef,\n    QueryList,\n    ContentChildren,\n    Component,\n    ChangeDetectionStrategy,\n    ViewEncapsulation\n} from '@angular/core';\n\nimport { mixinColor, CanColor, CanColorCtor } from '@ptsecurity/mosaic/core';\nimport { McIcon } from '@ptsecurity/mosaic/icon';\n\n\nexport class McTagBase {\n    constructor(public _elementRef: ElementRef) {}\n}\n\nexport const _McTagMixinBase: CanColorCtor & typeof McTagBase\n    = mixinColor(McTagBase);\n\n\n@Component({\n    selector: 'mc-tag',\n    templateUrl: 'tag.partial.html',\n    styleUrls: ['./tag.css'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n    host: { class: 'mc-tag' },\n    inputs: ['color']\n})\nexport class McTag extends _McTagMixinBase implements CanColor {\n    @ContentChildren(McIcon) contentChildren: QueryList<McIcon>;\n\n    nativeElement: HTMLElement;\n\n    constructor(elementRef: ElementRef) {\n        super(elementRef);\n\n        this.nativeElement = elementRef.nativeElement;\n    }\n\n    ngAfterContentInit() {\n        this._addClassModificatorForIcons();\n    }\n\n    _addClassModificatorForIcons() {\n        const icons = this.contentChildren.map((item) => item._elementRef.nativeElement);\n\n        if (icons.length === 1) {\n            const iconElement = icons[0];\n\n            if (!iconElement.previousElementSibling && !iconElement.nextElementSibling) {\n                if (iconElement.nextSibling) {\n                    iconElement.classList.add('mc-icon_left');\n                    this.nativeElement.classList.add('mc-left-icon');\n                }\n\n                if (iconElement.previousSibling) {\n                    iconElement.classList.add('mc-icon_right');\n                    this.nativeElement.classList.add('mc-right-icon');\n                }\n            }\n        } else if (icons.length > 1) {\n            const firstIconElement = icons[0];\n            const secondIconElement = icons[1];\n\n            firstIconElement.classList.add('mc-icon_left');\n            secondIconElement.classList.add('mc-icon_right');\n        }\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { PlatformModule } from '@ptsecurity/cdk/platform';\n\nimport { McTag } from './tag.component';\n\n\n@NgModule({\n    imports: [\n        CommonModule,\n        PlatformModule\n    ],\n    exports: [\n        McTag\n    ],\n    declarations: [\n        McTag\n    ]\n})\nexport class McTagModule {}\n","import { DOCUMENT } from '@angular/common';\nimport {\n    AfterViewInit, ChangeDetectionStrategy, ChangeDetectorRef,\n    Component,\n    ComponentFactoryResolver,\n    ComponentRef,\n    ElementRef,\n    EventEmitter,\n    Inject,\n    Injector,\n    Input,\n    OnChanges,\n    OnDestroy,\n    OnInit,\n    Output,\n    Renderer2,\n    SimpleChanges,\n    TemplateRef,\n    Type,\n    ViewChild,\n    ViewContainerRef, ViewEncapsulation\n} from '@angular/core';\nimport { ESCAPE } from '@ptsecurity/cdk/keycodes';\nimport { Overlay, OverlayRef } from '@ptsecurity/cdk/overlay';\nimport { McMeasureScrollbarService } from '@ptsecurity/mosaic/core';\nimport { Observable } from 'rxjs';\n\nimport { McModalControlService } from './modal-control.service';\nimport { McModalRef } from './modal-ref.class';\n// tslint:disable-next-line\nimport ModalUtil from './modal-util';\nimport { IModalButtonOptions, IModalOptions, ModalType, OnClickCallback } from './modal.type';\n\n\n// Duration when perform animations (ms)\nexport const MODAL_ANIMATE_DURATION = 200;\n\ntype AnimationState = 'enter' | 'leave' | null;\n\n@Component({\n    selector: 'mc-modal',\n    templateUrl: './modal.component.html',\n    styleUrls: ['./modal.css'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n    host: {\n        '(keydown)': 'onKeyDown($event)'\n    }\n})\nexport class McModalComponent<T = any, R = any> extends McModalRef<T, R>\n    implements OnInit, OnChanges, AfterViewInit, OnDestroy, IModalOptions {\n\n    // tslint:disable-next-line:no-any\n    @Input() mcModalType: ModalType = 'default';\n    // If not specified, will use <ng-content>\n    @Input() mcContent: string | TemplateRef<{}> | Type<T>;\n    // available when mcContent is a component\n    @Input() mcComponentParams: object;\n    // Default Modal ONLY\n    @Input() mcFooter: string | TemplateRef<{}> | IModalButtonOptions<T>[];\n\n    @Input()\n    get mcVisible() { return this._mcVisible; }\n    set mcVisible(value) { this._mcVisible = value; }\n    _mcVisible = false;\n\n    @Output() mcVisibleChange = new EventEmitter<boolean>();\n\n    @Input() mcZIndex: number = 1000;\n    @Input() mcWidth: number | string = 480;\n    @Input() mcWrapClassName: string;\n    @Input() mcClassName: string;\n    @Input() mcStyle: object;\n    @Input() mcTitle: string | TemplateRef<{}>;\n    @Input() mcCloseByESC: boolean = true;\n\n    @Input()\n    get mcClosable() { return this._mcClosable; }\n    set mcClosable(value) { this._mcClosable = value; }\n    _mcClosable = true;\n\n    @Input()\n    get mcMask() { return this._mcMask; }\n    set mcMask(value) { this._mcMask = value; }\n    _mcMask = true;\n\n    @Input()\n    get mcMaskClosable() { return this._mcMaskClosable; }\n    set mcMaskClosable(value) { this._mcMaskClosable = value; }\n    _mcMaskClosable = true;\n\n    @Input() mcMaskStyle: object;\n    @Input() mcBodyStyle: object;\n\n    // Trigger when modal open(visible) after animations\n    @Output() mcAfterOpen = new EventEmitter<void>();\n    // Trigger when modal leave-animation over\n    @Output() mcAfterClose = new EventEmitter<R>();\n\n    // --- Predefined OK & Cancel buttons\n    @Input() mcOkText: string;\n    @Input() mcOkType = 'primary';\n\n    @Input()\n    get mcOkLoading() { return this._mcOkLoading; }\n    set mcOkLoading(value) { this._mcOkLoading = value; }\n    _mcOkLoading = false;\n\n    @Input() @Output() mcOnOk: EventEmitter<T> | OnClickCallback<T> = new EventEmitter<T>();\n    // Only aim to focus the ok button that needs to be auto focused\n    @ViewChild('autoFocusButtonOk', {read: ElementRef}) autoFocusButtonOk: ElementRef;\n    @Input() mcCancelText: string;\n\n    @Input()\n    get mcCancelLoading() { return this._mcCancelLoading; }\n    set mcCancelLoading(value) { this._mcCancelLoading = value; }\n    _mcCancelLoading = false;\n\n    @Input() @Output() mcOnCancel: EventEmitter<T> | OnClickCallback<T> = new EventEmitter<T>();\n    @ViewChild('modalContainer') modalContainer: ElementRef;\n    @ViewChild('bodyContainer', {read: ViewContainerRef}) bodyContainer: ViewContainerRef;\n    maskAnimationClassMap: object;\n    modalAnimationClassMap: object;\n    // The origin point that animation based on\n    transformOrigin = '0px 0px 0px';\n\n    // Observable alias for mcAfterOpen\n    get afterOpen(): Observable<void> {\n        return this.mcAfterOpen.asObservable();\n    }\n\n    // Observable alias for mcAfterClose\n    get afterClose(): Observable<R> {\n        return this.mcAfterClose.asObservable();\n    }\n\n    get okText(): string {\n        return this.mcOkText;\n    }\n\n    get cancelText(): string {\n        return this.mcCancelText;\n    }\n\n    // Indicate whether this dialog should hidden\n    get hidden(): boolean {\n        return !this.mcVisible && !this.animationState;\n    }\n\n    // Handle the reference when using mcContent as Component\n    private contentComponentRef: ComponentRef<T>;\n    // Current animation state\n    private animationState: AnimationState;\n    private container: HTMLElement | OverlayRef;\n\n    constructor(\n        private overlay: Overlay,\n        private renderer: Renderer2,\n        private cfr: ComponentFactoryResolver,\n        private elementRef: ElementRef,\n        private viewContainer: ViewContainerRef,\n        private mcMeasureScrollbarService: McMeasureScrollbarService,\n        private modalControl: McModalControlService,\n        private changeDetector: ChangeDetectorRef,\n        @Inject(DOCUMENT) private document: any) {\n\n        super();\n    }\n\n    @Input() mcGetContainer: HTMLElement | OverlayRef | (() => HTMLElement | OverlayRef) = () => this.overlay.create();\n\n    ngOnInit() {\n\n        // Create component along without View\n        if (this.isComponent(this.mcContent)) {\n            this.createDynamicComponent(this.mcContent as Type<T>);\n        }\n\n        // Setup default button options\n        if (this.isModalButtons(this.mcFooter)) {\n            this.mcFooter = this.formatModalButtons(this.mcFooter as IModalButtonOptions<T>[]);\n        }\n\n        // Place the modal dom to elsewhere\n        this.container = typeof this.mcGetContainer === 'function' ? this.mcGetContainer() : this.mcGetContainer;\n        if (this.container instanceof HTMLElement) {\n            this.container.appendChild(this.elementRef.nativeElement);\n        } else if (this.container instanceof OverlayRef) {\n            // NOTE: only attach the dom to overlay, the view container is not changed actually\n            this.container.overlayElement.appendChild(this.elementRef.nativeElement);\n        }\n\n        // Register modal when afterOpen/afterClose is stable\n        this.modalControl.registerModal(this);\n    }\n\n    // [NOTE] NOT available when using by service!\n    // Because ngOnChanges never be called when using by service,\n    // here we can't support \"mcContent\"(Component) etc. as inputs that initialized dynamically.\n    // BUT: User also can change \"mcContent\" dynamically to trigger UI changes\n    // (provided you don't use \bComponent that needs initializations)\n    ngOnChanges(changes: SimpleChanges) {\n        if (changes.mcVisible) {\n            // Do not trigger animation while initializing\n            this.handleVisibleStateChange(this.mcVisible, !changes.mcVisible.firstChange);\n        }\n    }\n\n    ngAfterViewInit() {\n        // If using Component, it is the time to attach View while bodyContainer is ready\n        if (this.contentComponentRef) {\n            this.bodyContainer.insert(this.contentComponentRef.hostView);\n        }\n\n        if (this.autoFocusButtonOk) {\n            (this.autoFocusButtonOk.nativeElement as HTMLButtonElement).focus();\n        }\n    }\n\n    ngOnDestroy() {\n        if (this.container instanceof OverlayRef) {\n            this.container.dispose();\n        }\n    }\n\n    open() {\n        this.changeVisibleFromInside(true);\n    }\n\n    close(result?: R) {\n        this.changeVisibleFromInside(false, result);\n    }\n\n    // Destroy equals Close\n    destroy(result?: R) {\n        this.close(result);\n    }\n\n    triggerOk() {\n        this.onClickOkCancel('ok');\n    }\n\n    triggerCancel() {\n        this.onClickOkCancel('cancel');\n    }\n\n    getInstance(): McModalComponent {\n        return this;\n    }\n\n    getContentComponentRef(): ComponentRef<T> {\n        return this.contentComponentRef;\n    }\n\n    getContentComponent(): T {\n        return this.contentComponentRef && this.contentComponentRef.instance;\n    }\n\n    getElement(): HTMLElement {\n        return this.elementRef && this.elementRef.nativeElement;\n    }\n\n    onClickMask($event: MouseEvent) {\n        if (\n            this.mcMask &&\n            this.mcMaskClosable &&\n            ($event.target as HTMLElement).classList.contains('mc-modal-wrap') &&\n            this.mcVisible\n        ) {\n            this.onClickOkCancel('cancel');\n        }\n    }\n\n    // tslint:disable-next-line\n    isModalType(type: ModalType): boolean {\n        return this.mcModalType === type;\n    }\n\n    onKeyDown(event: KeyboardEvent): void {\n\n        if (event.keyCode === ESCAPE && this.container && (this.container instanceof OverlayRef)) {\n\n            this.close();\n            event.preventDefault();\n        }\n    }\n\n    // AoT\n    onClickCloseBtn() {\n        if (this.mcVisible) {\n            this.onClickOkCancel('cancel');\n        }\n    }\n\n    // AoT\n    // tslint:disable-next-line\n    onClickOkCancel(type: 'ok' | 'cancel') {\n        const trigger = { ok: this.mcOnOk, cancel: this.mcOnCancel }[type];\n        const loadingKey = { ok: 'mcOkLoading', cancel: 'mcCancelLoading' }[type];\n\n        if (trigger instanceof EventEmitter) {\n            trigger.emit(this.getContentComponent());\n        } else if (typeof trigger === 'function') {\n\n            const result = trigger(this.getContentComponent());\n            // Users can return \"false\" to prevent closing by default\n            const caseClose = (doClose: boolean | void | {}) => (doClose !== false) && this.close(doClose as R);\n\n            if (isPromise(result)) {\n                this[loadingKey] = true;\n                const handleThen = (doClose) => {\n                    this[loadingKey] = false;\n                    caseClose(doClose);\n                };\n                (result as Promise<void>).then(handleThen).catch(handleThen);\n            } else {\n                caseClose(result);\n            }\n        }\n    }\n\n    // AoT\n    isNonEmptyString(value: {}): boolean {\n        return typeof value === 'string' && value !== '';\n    }\n\n    // AoT\n    isTemplateRef(value: {}): boolean {\n        return value instanceof TemplateRef;\n    }\n\n    // AoT\n    isComponent(value: {}): boolean {\n        return value instanceof Type;\n    }\n\n    // AoT\n    isModalButtons(value: {}): boolean {\n        return Array.isArray(value) && value.length > 0;\n    }\n\n    // Do rest things when visible state changed\n    private handleVisibleStateChange(visible: boolean, animation: boolean = true, closeResult?: R): Promise<any> {\n        // Hide scrollbar at the first time when shown up\n        if (visible) {\n            this.changeBodyOverflow(1);\n        }\n\n        return Promise\n            .resolve(animation && this.animateTo(visible))\n            // Emit open/close event after animations over\n            .then(() => {\n                if (visible) {\n                    this.mcAfterOpen.emit();\n                } else {\n                    this.mcAfterClose.emit(closeResult);\n                    // Show/hide scrollbar when animation is over\n                    this.changeBodyOverflow();\n                }\n            });\n    }\n\n    // Lookup a button's property, if the prop is a function, call & then return the result, otherwise, return itself.\n    // AoT\n    // tslint:disable-next-line\n    getButtonCallableProp(options: IModalButtonOptions<T>, prop: string): {} {\n        const value = options[prop];\n        const args: any[] = [];\n        if (this.contentComponentRef) {\n            args.push(this.contentComponentRef.instance);\n        }\n\n        return typeof value === 'function' ? value.apply(options, args) : value;\n    }\n\n    // On mcFooter's modal button click\n    // AoT\n    // tslint:disable-next-line\n    onButtonClick(button: IModalButtonOptions<T>) {\n        // Call onClick directly\n        const result = this.getButtonCallableProp(button, 'onClick');\n        if (isPromise(result)) {\n            button.loading = true;\n            (result as Promise<{}>).then(() => button.loading = false).catch(() => button.loading = false);\n        }\n    }\n\n    // Change mcVisible from inside\n    private changeVisibleFromInside(visible: boolean, closeResult?: R): Promise<void> {\n        if (this.mcVisible !== visible) {\n            // Change mcVisible value immediately\n            this.mcVisible = visible;\n            this.mcVisibleChange.emit(visible);\n\n            return this.handleVisibleStateChange(visible, true, closeResult);\n        }\n\n        return Promise.resolve();\n    }\n\n    private changeAnimationState(state: AnimationState) {\n        this.animationState = state;\n        if (state) {\n            this.maskAnimationClassMap = {\n                [`fade-${state}`]: true,\n                [`fade-${state}-active`]: true\n            };\n            this.modalAnimationClassMap = {\n                [`zoom-${state}`]: true,\n                [`zoom-${state}-active`]: true\n            };\n        } else {\n            // @ts-ignore\n            this.maskAnimationClassMap = this.modalAnimationClassMap = null;\n        }\n\n        if (this.contentComponentRef) {\n            this.contentComponentRef.changeDetectorRef.markForCheck();\n        } else {\n            this.changeDetector.markForCheck();\n        }\n    }\n\n    private animateTo(isVisible: boolean): Promise<any> {\n        // Figure out the lastest click position when shows up\n        if (isVisible) {\n            // [NOTE] Using timeout due to the document.click event is fired later than visible change,\n            // so if not postponed to next event-loop, we can't get the lastest click position\n            window.setTimeout(() => this.updateTransformOrigin());\n        }\n\n        this.changeAnimationState(isVisible ? 'enter' : 'leave');\n\n        // Return when animation is over\n        return new Promise((resolve) => window.setTimeout(() => {\n            this.changeAnimationState(null);\n            resolve();\n        }, MODAL_ANIMATE_DURATION));\n    }\n\n    private formatModalButtons(buttons: IModalButtonOptions<T>[]): IModalButtonOptions<T>[] {\n        return buttons.map((button) => {\n\n            return {\n                ...{\n                    type: 'default',\n                    size: 'default',\n                    autoLoading: true,\n                    show: true,\n                    loading: false,\n                    disabled: false\n                },\n                ...button\n            };\n        });\n    }\n\n    /**\n     * Create a component dynamically but not attach to any View\n     * (this action will be executed when bodyContainer is ready)\n     * @param component Component class\n     */\n    private createDynamicComponent(component: Type<T>) {\n        const factory = this.cfr.resolveComponentFactory(component);\n        const childInjector = Injector.create({\n            providers: [{provide: McModalRef, useValue: this}],\n            parent: this.viewContainer.parentInjector\n        });\n\n        this.contentComponentRef = factory.create(childInjector);\n\n        if (this.mcComponentParams) {\n            Object.assign(this.contentComponentRef.instance, this.mcComponentParams);\n        }\n\n        // Do the first change detection immediately\n        // (or we do detection at ngAfterViewInit, multi-changes error will be thrown)\n        this.contentComponentRef.changeDetectorRef.detectChanges();\n\n\n    }\n\n    // Update transform-origin to the last click position on document\n    private updateTransformOrigin() {\n        const modalElement = this.modalContainer.nativeElement as HTMLElement;\n        const lastPosition = ModalUtil.getLastClickPosition();\n\n        if (lastPosition) {\n            // tslint:disable-next-line\n            this.transformOrigin = `${lastPosition.x - modalElement.offsetLeft}px ${lastPosition.y - modalElement.offsetTop}px 0px`;\n        }\n    }\n\n    /**\n     * Take care of the body's overflow to decide the existense of scrollbar\n     * @param plusNum The number that the openModals.length will increase soon\n     */\n    private changeBodyOverflow(plusNum: number = 0) {\n        const openModals = this.modalControl.openModals;\n\n        if (openModals.length + plusNum > 0) {\n            // tslint:disable-next-line\n            this.renderer.setStyle(this.document.body, 'padding-right', `${this.mcMeasureScrollbarService.scrollBarWidth}px`);\n            this.renderer.setStyle(this.document.body, 'overflow', 'hidden');\n        } else {\n            this.renderer.removeStyle(this.document.body, 'padding-right');\n            this.renderer.removeStyle(this.document.body, 'overflow');\n        }\n    }\n}\n\n////////////\n\nfunction isPromise(obj: {} | void): boolean {\n    // tslint:disable-next-line\n    return !!obj && (typeof obj === 'object' || typeof obj === 'function') && typeof (obj as Promise<{}>).then === 'function' && typeof (obj as Promise<{}>).catch === 'function';\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n\n@Pipe({\n    name: 'toCssUnit'\n})\nexport class CssUnitPipe implements PipeTransform {\n    transform(value: number | string, defaultUnit: string = 'px'): string {\n        const formatted = +value;\n\n        return isNaN(formatted) ? `${value}` : `${formatted}${defaultUnit}`;\n    }\n}\n","import { ComponentRef, Injectable } from '@angular/core';\n\nimport { Observable } from 'rxjs';\nimport { filter } from 'rxjs/operators';\n\nimport { ESCAPE } from '@ptsecurity/cdk/keycodes';\nimport { Overlay, OverlayRef } from '@ptsecurity/cdk/overlay';\nimport { ComponentPortal } from '@ptsecurity/cdk/portal';\n\nimport { McModalControlService } from './modal-control.service';\nimport { McModalRef } from './modal-ref.class';\nimport { McModalComponent } from './modal.component';\nimport { ConfirmType, IModalOptions, IModalOptionsForService } from './modal.type';\n\n\n// A builder used for managing service creating modals\nexport class ModalBuilderForService {\n\n    // Modal ComponentRef, \"null\" means it has been destroyed\n    private modalRef: ComponentRef<McModalComponent>;\n    private overlayRef: OverlayRef;\n\n    constructor(private overlay: Overlay, options: IModalOptionsForService = {}) {\n        this.createModal();\n\n        if (!('mcGetContainer' in options)) {\n            options.mcGetContainer = null;\n        }\n\n        this.changeProps(options);\n        this.modalRef.instance.open();\n        this.modalRef.instance.mcAfterClose.subscribe(() => this.destroyModal());\n\n        this.overlayRef.keydownEvents()\n            // @ts-ignore\n            .pipe(filter((event: KeyboardEvent) => {\n                return event.keyCode === ESCAPE && options.mcCloseByESC;\n            }))\n            .subscribe(() => this.modalRef.instance.close());\n    }\n\n    getInstance(): McModalComponent {\n        return this.modalRef && this.modalRef.instance;\n    }\n\n    destroyModal(): void {\n        if (this.modalRef) {\n            this.overlayRef.dispose();\n            // @ts-ignore\n            this.modalRef = null;\n        }\n    }\n\n    private changeProps(options: IModalOptions): void {\n        if (this.modalRef) {\n            // here not limit user's inputs at runtime\n            Object.assign(this.modalRef.instance, options);\n        }\n    }\n\n    // Create component to ApplicationRef\n    private createModal(): void {\n        this.overlayRef = this.overlay.create();\n        this.modalRef = this.overlayRef.attach(new ComponentPortal(McModalComponent));\n    }\n}\n\n@Injectable()\nexport class McModalService {\n    // Track of the current close modals (we assume invisible is close this time)\n    get openModals(): McModalRef[] {\n        return this.modalControl.openModals;\n    }\n\n    get afterAllClose(): Observable<void> {\n        return this.modalControl.afterAllClose.asObservable();\n    }\n\n    constructor(\n        private overlay: Overlay,\n        private modalControl: McModalControlService) {\n    }\n\n    // Closes all of the currently-open dialogs\n    closeAll(): void {\n        this.modalControl.closeAll();\n    }\n\n    create<T>(options: IModalOptionsForService<T> = {}): McModalRef<T> {\n\n        if (typeof options.mcOnCancel !== 'function') {\n            // Leave a empty function to close this modal by default\n            // tslint:disable-next-line\n            options.mcOnCancel = () => {};\n        }\n\n        if (!('mcCloseByESC' in options)) {\n            options.mcCloseByESC = true;\n        }\n\n\n        if (!('mcWidth' in options)) {\n            // tslint:disable-next-line\n            options.mcWidth = 480;\n        }\n\n        return new ModalBuilderForService(this.overlay, options).getInstance();\n    }\n\n    confirm<T>(options: IModalOptionsForService<T> = {}, confirmType: ConfirmType = 'confirm'): McModalRef<T> {\n        if ('mcFooter' in options) {\n            console.warn(`The Confirm-Modal doesn't support \"mcFooter\", this property will be ignored.`);\n        }\n\n        // NOTE: only support function currently by calling confirm()\n        if (typeof options.mcOnOk !== 'function') {\n            // Leave a empty function to close this modal by default\n            // tslint:disable-next-line\n            options.mcOnOk = () => {};\n        }\n\n        options.mcModalType = 'confirm';\n        options.mcClassName = `mc-confirm mc-confirm-${confirmType} ${options.mcClassName || ''}`;\n        options.mcMaskClosable = false;\n\n        return this.create(options);\n    }\n\n    success<T>(options: IModalOptionsForService<T> = {}): McModalRef<T> {\n        return this.simpleConfirm(options, 'success');\n    }\n\n    delete<T>(options: IModalOptionsForService<T> = {}): McModalRef<T> {\n        return this.simpleConfirm(options, 'warn');\n    }\n\n    private simpleConfirm<T>(options: IModalOptionsForService<T> = {}, confirmType: ConfirmType): McModalRef<T> {\n        // Remove the Cancel button if the user not specify a Cancel button\n        if (!('mcCancelText' in options)) {\n            // @ts-ignore\n            options.mcCancelText = null;\n        }\n\n        return this.confirm(options, confirmType);\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { OverlayModule } from '@ptsecurity/cdk/overlay';\nimport { McButtonModule } from '@ptsecurity/mosaic/button';\nimport { McIconModule } from '@ptsecurity/mosaic/icon';\n\nimport { CssUnitPipe } from './css-unit.pipe';\nimport { McModalControlService } from './modal-control.service';\nimport { McModalComponent } from './modal.component';\nimport { McModalService } from './modal.service';\n\n\n@NgModule({\n    imports: [ CommonModule, OverlayModule, McButtonModule, McIconModule ],\n    exports: [ McModalComponent ],\n    declarations: [ McModalComponent, CssUnitPipe ],\n    entryComponents: [ McModalComponent ],\n    providers: [ McModalControlService, McModalService ]\n})\nexport class McModalModule { }\n","import { fromEvent, Observable, Subscription } from 'rxjs';\nimport { debounceTime } from 'rxjs/operators';\n\nimport {\n    AfterViewInit,\n    Component, Directive,\n    ElementRef,\n    HostBinding,\n    Input,\n    OnDestroy,\n    OnInit,\n    ViewEncapsulation,\n    ContentChild,\n    TemplateRef,\n    ChangeDetectorRef,\n    ChangeDetectionStrategy,\n    ViewChild\n} from '@angular/core';\nimport { FocusMonitor, FocusOrigin } from '@ptsecurity/cdk/a11y';\nimport { SPACE } from '@ptsecurity/cdk/keycodes';\nimport { Platform } from '@ptsecurity/cdk/platform';\nimport { CanDisable, CanDisableCtor, mixinDisabled } from '@ptsecurity/mosaic/core';\n\n\nconst COLLAPSED_CLASS: string = 'mc-navbar-collapsed-title';\nconst MC_ICON = 'mc-icon';\nconst MC_NAVBAR = 'mc-navbar';\nconst MC_NAVBAR_CONTAINER = 'mc-navbar-container';\nconst MC_NAVBAR_ITEM = 'mc-navbar-item';\nconst MC_NAVBAR_BRAND = 'mc-navbar-brand';\nconst MC_NAVBAR_TITLE = 'mc-navbar-title';\nconst MC_NAVBAR_LOGO = 'mc-navbar-logo';\n\nexport type McNavbarContainerPositionType = 'left' | 'right';\n\nexport interface IMcNavbarDropdownItem {\n    link?: string;\n    text: string;\n}\n\n@Directive({\n    selector: MC_NAVBAR_LOGO,\n    host: {\n        class: MC_NAVBAR_LOGO\n    }\n})\nexport class McNavbarLogo {}\n\n@Directive({\n    selector: MC_NAVBAR_BRAND,\n    host: {\n        class: MC_NAVBAR_BRAND\n    }\n})\nexport class McNavbarBrand {}\n\n@Directive({\n    selector: MC_NAVBAR_TITLE,\n    host: {\n        class: MC_NAVBAR_TITLE\n    }\n})\nexport class McNavbarTitle {}\n\nexport class McNavbarItemBase {\n    constructor(public _elementRef: ElementRef) {}\n}\n\nexport const _McNavbarMixinBase: CanDisableCtor & typeof McNavbarItemBase = mixinDisabled(McNavbarItemBase);\n\n@Component({\n    selector: MC_NAVBAR_ITEM,\n    template: `\n        <a\n            [attr.tabindex]=\\\"disabled ? -1 : tabIndex\\\"\n            (click)=\"handleClickByItem()\"\n            (keydown)=\"handleKeydown($event)\"\n            class=\"mc-navbar-item\"\n        >\n            <ng-content></ng-content>\n            <i *ngIf=\"hasDropdownContent\" mc-icon=\"mc-angle-M_16\"></i>\n        </a>\n        <ul\n            #dropdownContent\n            *ngIf=\"hasDropdownContent\"\n            [ngClass]=\"{ 'is-collapsed': isCollapsed }\"\n            class=\"mc-navbar-dropdown\"\n        >\n            <li\n                *ngFor=\"let item of dropdownItems\"\n                (click)=\"handleClickByDropdownItem()\"\n                class=\"mc-navbar-dropdown-item\"\n            >\n                <ng-container *ngIf=\"dropdownItemTmpl\">\n                    <ng-container *ngTemplateOutlet=\"dropdownItemTmpl; context: { $implicit: item }\"></ng-container>\n                </ng-container>\n                <a\n                    *ngIf=\"!dropdownItemTmpl\"\n                    [attr.href]=\"item.link\"\n                    [ngClass]=\"{ 'is-active': isActiveDropdownLink(item.link) }\"\n                    class=\"mc-navbar-dropdown-link\"\n                >{{ item.text }}</a>\n            </li>\n        </ul>\n    `,\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    inputs: ['disabled'],\n    host: {\n        '[attr.disabled]': 'disabled || null',\n        '[attr.tabindex]': '-1'\n    }\n})\nexport class McNavbarItem extends _McNavbarMixinBase implements OnInit, AfterViewInit, OnDestroy, CanDisable {\n\n    @Input()\n    tabIndex: number = 0;\n\n    @Input()\n    dropdownItems: IMcNavbarDropdownItem[] = [];\n\n    @Input()\n    set collapsedTitle(value: string) {\n        this.elementRef.nativeElement.setAttribute('computedTitle', encodeURI(value));\n    }\n\n    @ContentChild('dropdownItemTmpl', { read: TemplateRef })\n    dropdownItemTmpl: TemplateRef<IMcNavbarDropdownItem>;\n\n    @ViewChild('dropdownContent', { read: ElementRef })\n    dropdownContent: ElementRef;\n\n    get hasDropdownContent() {\n        return this.dropdownItems.length > 0;\n    }\n\n    isCollapsed: boolean = true;\n\n    private _subscription: Subscription = new Subscription();\n    private _focusMonitor$: Observable<FocusOrigin>;\n\n    private get _dropdownElements(): HTMLElement[] {\n        return this.dropdownContent ? this.dropdownContent.nativeElement.querySelectorAll('li > *') : [];\n    }\n\n    constructor(\n        public  elementRef: ElementRef,\n        private _focusMonitor: FocusMonitor,\n        private _platform: Platform,\n        private _cdRef: ChangeDetectorRef\n    ) {\n        super(elementRef);\n    }\n\n    ngOnInit() {\n        this.denyClickIfDisabled();\n\n        this._focusMonitor$ = this._focusMonitor.monitor(this.elementRef.nativeElement, true);\n\n        if (this.hasDropdownContent) {\n            this.listenClickOutside();\n        }\n    }\n\n    ngAfterViewInit() {\n        if (!this.hasDropdownContent) {\n            return;\n        }\n\n        this.startListenFocusDropdownItems();\n    }\n\n    ngOnDestroy() {\n        this._subscription.unsubscribe();\n        this._focusMonitor.stopMonitoring(this.elementRef.nativeElement);\n        this.stopListenFocusDropdownItems();\n    }\n\n    isActiveDropdownLink(link: string): boolean {\n        if (!this._platform.isBrowser) {\n            return false;\n        }\n\n        return window.location.href.indexOf(link) >= 0;\n    }\n\n    handleClickByItem() {\n        this.toggleDropdown();\n    }\n\n    handleKeydown($event: KeyboardEvent) {\n        const isNavbarItem = ($event.target as HTMLElement).classList.contains(MC_NAVBAR_ITEM);\n\n        // tslint:disable-next-line\n        if (this.hasDropdownContent && $event.keyCode === SPACE && isNavbarItem) {\n            this.toggleDropdown();\n        }\n    }\n\n    handleClickByDropdownItem() {\n        this.forceCloseDropdown();\n    }\n\n    private listenClickOutside() {\n        this._subscription.add(\n            this._focusMonitor$.subscribe((origin) => {\n                if (origin === null) {\n                    this.forceCloseDropdown();\n                }\n            })\n        );\n    }\n\n    private toggleDropdown() {\n        this.isCollapsed = !this.isCollapsed;\n    }\n\n    private forceCloseDropdown() {\n        this.isCollapsed = true;\n        this._cdRef.detectChanges();\n    }\n\n    private startListenFocusDropdownItems() {\n        this._dropdownElements.forEach((el) => {\n            this._focusMonitor.monitor(el, true);\n        });\n    }\n\n    private stopListenFocusDropdownItems() {\n        this._dropdownElements.forEach((el) => {\n            this._focusMonitor.stopMonitoring(el);\n        });\n    }\n\n    // This method is required due to angular 2 issue https://github.com/angular/angular/issues/11200\n    private denyClickIfDisabled() {\n        const events: Event[] = this.elementRef.nativeElement.eventListeners('click');\n\n        events.forEach((event) => this.elementRef.nativeElement.removeEventListener('click', event));\n\n        this.elementRef.nativeElement.addEventListener('click', (event: MouseEvent) => {\n            if (this.elementRef.nativeElement.hasAttribute('disabled')) {\n                event.stopImmediatePropagation();\n            }\n        }, true);\n\n        events.forEach((event) => this.elementRef.nativeElement.addEventListener('click', event));\n    }\n}\n\n@Directive({\n    selector: MC_NAVBAR_CONTAINER\n})\nexport class McNavbarContainer {\n    @Input()\n    position: McNavbarContainerPositionType = 'left';\n\n    @HostBinding('class')\n    get cssClasses(): string {\n        return this.position === 'left' ? 'mc-navbar-left' : 'mc-navbar-right';\n    }\n}\n\nclass CollapsibleItem {\n    private _collapsed: boolean = false;\n\n    constructor(\n        public element: HTMLElement,\n        public width: number\n    ) {}\n\n    processCollapsed(collapsed: boolean) {\n        this._collapsed = collapsed;\n\n        this.updateCollapsedClass();\n    }\n\n    private updateCollapsedClass() {\n        if (this._collapsed) {\n            this.element.classList.add(COLLAPSED_CLASS);\n        } else {\n            this.element.classList.remove(COLLAPSED_CLASS);\n        }\n\n    }\n}\n\nclass CachedItemWidth {\n\n    get canCollapse(): boolean {\n        return this.itemsForCollapse.length > 0;\n    }\n\n    private _collapsedItemsWidth: number;\n\n    get collapsedItemsWidth(): number {\n        if (this._collapsedItemsWidth !== undefined) {\n            return this._collapsedItemsWidth;\n        }\n\n        this.calculateAndCacheCollapsedItemsWidth();\n\n        return this._collapsedItemsWidth;\n    }\n\n    constructor(\n        public element: HTMLElement,\n        public width: number,\n        public itemsForCollapse: CollapsibleItem[] = []\n    ) {}\n\n    processCollapsed(collapsed: boolean) {\n        if (this.itemsForCollapse.length > 0) {\n            this.updateTitle(collapsed);\n        }\n\n        this.itemsForCollapse.forEach((item) => item.processCollapsed(collapsed));\n    }\n\n    private calculateAndCacheCollapsedItemsWidth() {\n        this._collapsedItemsWidth = this.itemsForCollapse\n            .reduce((acc, item) => acc + item.width, 0);\n    }\n\n    private getTitle(): string {\n        const computedTitle = this.element.getAttribute('computedTitle');\n\n        return computedTitle\n            ? decodeURI(computedTitle)\n            : (this.itemsForCollapse.length > 0 ? this.itemsForCollapse[0].element.innerText : '');\n    }\n\n    private updateTitle(collapsed: boolean) {\n        if (collapsed) {\n            this.element.setAttribute('title', this.getTitle());\n        } else {\n            this.element.removeAttribute('title');\n        }\n    }\n}\n\n\n@Component({\n    selector: MC_NAVBAR,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    template: `\n        <nav class=\"mc-navbar\">\n            <ng-content select=\"[${MC_NAVBAR_CONTAINER}],${MC_NAVBAR_CONTAINER}\"></ng-content>\n        </nav>\n    `,\n    styleUrls: ['./navbar.css'],\n    encapsulation: ViewEncapsulation.None\n})\nexport class McNavbar implements AfterViewInit, OnDestroy {\n\n    private readonly forceRecalculateItemsWidth: boolean = false;\n    private readonly resizeDebounceInterval: number = 100;\n    private readonly firstLevelElement: string = MC_NAVBAR_CONTAINER;\n    private readonly secondLevelElements: string[] = [\n        MC_NAVBAR_ITEM,\n        MC_NAVBAR_BRAND,\n        MC_NAVBAR_TITLE\n    ];\n\n    private _totalItemsWidths: number;\n    private _itemsWidths: CachedItemWidth[];\n\n    private get maxAllowedWidth(): number {\n        return this._elementRef.nativeElement.querySelector('nav').getBoundingClientRect().width;\n    }\n\n    private get itemsWidths(): CachedItemWidth[] {\n        if (this._itemsWidths !== undefined && !this.forceRecalculateItemsWidth) {\n            return this._itemsWidths;\n        }\n\n        this.calculateAndCacheItemsWidth();\n\n        return this._itemsWidths;\n    }\n\n    private get totalItemsWidth(): number {\n        if (this._totalItemsWidths !== undefined && !this.forceRecalculateItemsWidth) {\n            return this._totalItemsWidths;\n        }\n\n        this.calculateAndCacheTotalItemsWidth();\n\n        return this._totalItemsWidths;\n    }\n\n    private _resizeSubscription: Subscription;\n\n    constructor(\n        private _elementRef: ElementRef\n    ) {\n        const resizeObserver = fromEvent(window, 'resize')\n            .pipe(debounceTime(this.resizeDebounceInterval));\n\n        this._resizeSubscription = resizeObserver.subscribe(this.updateCollapsed.bind(this));\n    }\n\n    updateCollapsed(): void {\n        let collapseDelta = this.totalItemsWidth - this.maxAllowedWidth;\n\n        for (let i = this.itemsWidths.length - 1; i >= 0; i--) {\n            const item = this.itemsWidths[i];\n\n            if (!item.canCollapse) {\n                continue;\n            }\n\n            item.processCollapsed(collapseDelta > 0);\n            collapseDelta -= item.collapsedItemsWidth;\n        }\n    }\n\n    ngAfterViewInit(): void {\n        // Note: this wait is required for loading and rendering fonts for icons;\n        // unfortunately we cannot control font rendering\n        setTimeout(() => this.updateCollapsed(), 0);\n    }\n\n    ngOnDestroy() {\n        this._resizeSubscription.unsubscribe();\n    }\n\n    private calculateAndCacheTotalItemsWidth() {\n        this._totalItemsWidths = this.itemsWidths\n            .reduce((acc, item) => acc + item.width, 0);\n    }\n\n    private getOuterElementWidth(element: HTMLElement): number {\n        const baseWidth  = element.getBoundingClientRect().width;\n        const marginRight = parseInt(getComputedStyle(element).getPropertyValue('margin-right'));\n        const marginLeft = parseInt(getComputedStyle(element).getPropertyValue('margin-left'));\n\n        return baseWidth + marginRight + marginLeft;\n    }\n\n    private calculateAndCacheItemsWidth() {\n        const allItemsSelector = this.secondLevelElements\n            .map((e: string) => `${this.firstLevelElement}>${e}`);\n        const allItems: HTMLElement[] = Array.from(this._elementRef.nativeElement.querySelectorAll(allItemsSelector));\n\n        this._itemsWidths = allItems\n            .map((el) => new CachedItemWidth(el, this.getOuterElementWidth(el), this.getItemsForCollapse(el)));\n    }\n\n    private getItemsForCollapse(element: HTMLElement): CollapsibleItem[] {\n        const icon = element.querySelector(`[${MC_ICON}],${MC_NAVBAR_LOGO},[${MC_NAVBAR_LOGO}]`);\n\n        if (!icon) {\n            return [];\n        }\n\n        return Array.from(element.querySelectorAll(MC_NAVBAR_TITLE))\n            .map((el) => new CollapsibleItem(<HTMLElement> el, el.getBoundingClientRect().width));\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { A11yModule } from '@ptsecurity/cdk/a11y';\nimport { PlatformModule } from '@ptsecurity/cdk/platform';\n\nimport { McIconModule } from '@ptsecurity/mosaic/icon';\n\nimport {\n    McNavbar,\n    McNavbarContainer,\n    McNavbarItem,\n    McNavbarTitle,\n    McNavbarBrand,\n    McNavbarLogo\n} from './navbar.component';\n\n\n@NgModule({\n    imports: [\n        CommonModule,\n        A11yModule,\n        PlatformModule,\n        McIconModule\n    ],\n    exports: [\n        McNavbar,\n        McNavbarContainer,\n        McNavbarTitle,\n        McNavbarItem,\n        McNavbarBrand,\n        McNavbarLogo\n    ],\n    declarations: [\n        McNavbar,\n        McNavbarContainer,\n        McNavbarTitle,\n        McNavbarItem,\n        McNavbarBrand,\n        McNavbarLogo\n    ]\n})\nexport class McNavbarModule {}\n","import {\n    ChangeDetectionStrategy,\n    Component,\n    ViewEncapsulation,\n    ElementRef,\n    Input\n} from '@angular/core';\nimport { CanColor, CanColorCtor, mixinColor, ThemePalette } from '@ptsecurity/mosaic/core';\n\n\nexport type ProgressBarMode = 'determinate' | 'indeterminate';\n\nlet idIterator = 0;\n\nconst MIN_PERCENT = 0;\nconst MAX_PERCENT = 100;\n\nexport class McProgressBarBase {\n    constructor(public _elementRef: ElementRef) {}\n}\n\nexport const _McProgressBarMixinBase:\n    CanColorCtor &\n    typeof McProgressBarBase =\n        mixinColor(McProgressBarBase);\n\n@Component({\n    selector: 'mc-progress-bar',\n    templateUrl: './progress-bar.component.html',\n    styleUrls: ['./progress-bar.css'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n    host: {\n        class: 'mc-progress-bar',\n        '[attr.id]': 'id'\n    }\n})\nexport class McProgressBar extends _McProgressBarMixinBase implements CanColor {\n    @Input() id: string = `mc-progress-bar-${idIterator++}`;\n    @Input() value: number = 0;\n    @Input() mode: ProgressBarMode = 'determinate';\n    @Input() color: ThemePalette = ThemePalette.Primary;\n\n    constructor(elementRef: ElementRef) {\n        super(elementRef);\n    }\n\n    get percentage(): number {\n        return Math.max(MIN_PERCENT, Math.min(MAX_PERCENT, this.value)) / MAX_PERCENT;\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { PlatformModule } from '@ptsecurity/cdk/platform';\n\nimport {\n    McProgressBar\n} from './progress-bar.component';\n\n\n@NgModule({\n    imports: [\n        CommonModule,\n        PlatformModule\n    ],\n    exports: [\n        McProgressBar\n    ],\n    declarations: [\n        McProgressBar\n    ]\n})\nexport class McProgressBarModule {}\n","import { ChangeDetectionStrategy, Component, ViewEncapsulation } from '@angular/core';\n\n\n@Component({\n    selector: 'mc-layout',\n    preserveWhitespaces: false,\n    styleUrls: ['layout.css'],\n    templateUrl: './layout.component.html',\n    host: {\n        '[class.mc-layout]': 'true',\n        '[class.mc-layout-has-sidebar]': 'hasSidebar'\n    },\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class McLayoutComponent {\n    hasSidebar = false;\n}\n","import {\n    ChangeDetectionStrategy,\n    Component,\n    EventEmitter,\n    Host,\n    Input,\n    OnInit,\n    Optional,\n    Output\n} from '@angular/core';\nimport { toBoolean } from '@ptsecurity/mosaic/core';\n\nimport { McLayoutComponent } from './layout.component';\n\n\n@Component({\n    selector: 'mc-sidebar',\n    preserveWhitespaces: false,\n    templateUrl: './sidebar.component.html',\n    host: {\n        '[class.mc-layout-sidebar]': 'true',\n        '[class.mc-layout-sidebar-collapsed]': 'mcCollapsed',\n        '[style.flex]': 'mcFlex',\n        '[style.max-width.px]': 'mcWidth',\n        '[style.min-width.px]': 'mcWidth',\n        '[style.width.px]': 'mcWidth'\n    },\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class McSidebarComponent implements OnInit {\n\n    @Input() _mcWidth = 200;\n    @Input() mcCollapsedWidth = 80;\n\n    @Input()\n    set mcCollapsible(value: boolean) {\n        this.collapsible = toBoolean(value);\n    }\n\n    get mcCollapsible(): boolean {\n        return this.collapsible;\n    }\n\n    @Input()\n    set mcCollapsed(value: boolean) {\n        this.collapsed = toBoolean(value);\n    }\n\n    get mcCollapsed(): boolean {\n        return this.collapsed;\n    }\n\n    // tslint:disable-next-line\n    @Output() mcCollapsedChange = new EventEmitter();\n\n    private collapsed = false;\n    private collapsible = false;\n\n    get mcFlex(): string {\n        if (this.mcCollapsed) {\n            return `0 0 ${this.mcCollapsedWidth}px`;\n        } else {\n            return `0 0 ${this.mcWidth}px`;\n        }\n    }\n\n    get mcWidth(): number {\n        if (this.mcCollapsed) {\n            return this.mcCollapsedWidth;\n        } else {\n            return this._mcWidth;\n        }\n    }\n\n    constructor(\n        @Optional() @Host() private mcLayoutComponent: McLayoutComponent) {\n    }\n\n    ngOnInit() {\n        if (this.mcLayoutComponent) {\n            this.mcLayoutComponent.hasSidebar = true;\n        }\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { McContentComponent } from './content.component';\nimport { McFooterComponent } from './footer.component';\nimport { McHeaderComponent } from './header.component';\nimport { McLayoutComponent } from './layout.component';\nimport { McSidebarComponent } from './sidebar.component';\n\n\n@NgModule({\n    imports: [ CommonModule ],\n    exports: [\n        McLayoutComponent,\n        McContentComponent,\n        McFooterComponent,\n        McHeaderComponent,\n        McSidebarComponent\n    ],\n    declarations: [\n        McLayoutComponent,\n        McContentComponent,\n        McFooterComponent,\n        McHeaderComponent,\n        McSidebarComponent\n    ]\n})\nexport class McLayoutModule {\n}\n","import {\n    AfterContentInit,\n    Attribute,\n    ChangeDetectionStrategy,\n    Component,\n    ContentChildren,\n    ElementRef,\n    EventEmitter,\n    forwardRef,\n    Input,\n    Output,\n    QueryList,\n    ViewEncapsulation,\n    ChangeDetectorRef,\n    Inject,\n    OnDestroy,\n    OnInit,\n    ViewChild\n} from '@angular/core';\n\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\n\nimport { Subscription } from 'rxjs';\n\nimport { FocusKeyManager, IFocusableOption } from '@ptsecurity/cdk/a11y';\nimport { SelectionModel } from '@ptsecurity/cdk/collections';\nimport { END, ENTER, HOME, PAGE_DOWN, PAGE_UP, SPACE } from '@ptsecurity/cdk/keycodes';\n\nimport {\n    McLine,\n    McLineSetter,\n    CanDisable,\n    mixinDisabled,\n    toBoolean, CanDisableCtor\n} from '@ptsecurity/mosaic/core';\n\n\n/**\n * Component for list-options of selection-list. Each list-option can automatically\n * generate a checkbox and can put current item into the selectionModel of selection-list\n * if the current item is selected.\n */\n@Component({\n    exportAs: 'mcListOption',\n    selector: 'mc-list-option',\n    host: {\n        tabindex: '-1',\n\n        class: 'mc-list-option',\n        '[class.mc-selected]': 'selected',\n        '[class.mc-focused]': '_hasFocus',\n        '(focus)': '_handleFocus()',\n        '(blur)': '_handleBlur()',\n        '(click)': '_handleClick()'\n    },\n    templateUrl: 'list-option.html',\n    encapsulation: ViewEncapsulation.None,\n    preserveWhitespaces: false,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class McListOption implements AfterContentInit, OnDestroy, OnInit, IFocusableOption {\n    _hasFocus: boolean = false;\n\n    @ContentChildren(McLine) _lines: QueryList<McLine>;\n\n    @ViewChild('text') _text: ElementRef;\n\n    // Whether the label should appear before or after the checkbox. Defaults to 'after'\n    @Input() checkboxPosition: 'before' | 'after' = 'after';\n\n    @Input() value: any;\n\n    @Input()\n    get disabled() {\n        return this._disabled || (this.listSelection && this.listSelection.disabled);\n    }\n\n    set disabled(value: any) {\n        const newValue = toBoolean(value);\n\n        if (newValue !== this._disabled) {\n            this._disabled = newValue;\n            this._changeDetector.markForCheck();\n        }\n    }\n\n    @Input()\n    get selected(): boolean {\n        return this.listSelection.selectedOptions && this.listSelection.selectedOptions.isSelected(this) || false;\n    }\n\n    set selected(value: boolean) {\n        const isSelected = toBoolean(value);\n\n        if (isSelected !== this._selected) {\n            this.setSelected(isSelected);\n\n            this.listSelection._reportValueChange();\n        }\n    }\n\n    private _lineSetter: McLineSetter;\n    private _selected = false;\n    private _disabled = false;\n\n    constructor(\n        private _element: ElementRef,\n        private _changeDetector: ChangeDetectorRef,\n        @Inject(forwardRef(() => McListSelection))\n        public listSelection: McListSelection\n    ) {}\n\n    ngOnInit() {\n        if (this._selected) {\n            // List options that are selected at initialization can't be reported properly to the form\n            // control. This is because it takes some time until the selection-list knows about all\n            // available options. Also it can happen that the ControlValueAccessor has an initial value\n            // that should be used instead. Deferring the value change report to the next tick ensures\n            // that the form control value is not being overwritten.\n            const wasSelected = this._selected;\n\n            Promise.resolve().then(() => {\n                if (this._selected || wasSelected) {\n                    this.selected = true;\n                    this._changeDetector.markForCheck();\n                }\n            });\n        }\n    }\n\n    ngAfterContentInit() {\n        this._lineSetter = new McLineSetter(this._lines, this._element);\n    }\n\n    ngOnDestroy(): void {\n        if (this.selected) {\n            // We have to delay this until the next tick in order\n            // to avoid changed after checked errors.\n            Promise.resolve().then(() => this.selected = false);\n        }\n\n        this.listSelection._removeOptionFromList(this);\n    }\n\n    toggle(): void {\n        this.selected = !this.selected;\n    }\n\n    focus(): void {\n        this._element.nativeElement.focus();\n\n        this.listSelection.setFocusedOption(this);\n    }\n\n    getLabel() {\n        return this._text ? this._text.nativeElement.textContent : '';\n    }\n\n    setSelected(selected: boolean) {\n        if (this._selected === selected || !this.listSelection.selectedOptions) { return; }\n\n        this._selected = selected;\n\n        if (selected) {\n            this.listSelection.selectedOptions.select(this);\n        } else {\n            this.listSelection.selectedOptions.deselect(this);\n        }\n\n        this._changeDetector.markForCheck();\n    }\n\n    _getHeight(): number {\n        return this._element.nativeElement.getClientRects()[0].height;\n    }\n\n    _handleClick() {\n        if (this.disabled) { return; }\n\n        this.listSelection.setFocusedOption(this);\n    }\n\n    _handleFocus() {\n        if (this.disabled || this._hasFocus) { return; }\n\n        this._hasFocus = true;\n    }\n\n    _handleBlur() {\n        this._hasFocus = false;\n\n        this.listSelection._onTouched();\n    }\n\n    _getHostElement(): HTMLElement {\n        return this._element.nativeElement;\n    }\n}\n\n\nexport const MC_SELECTION_LIST_VALUE_ACCESSOR: any = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => McListSelection),\n    multi: true\n};\n\n// Change event that is being fired whenever the selected state of an option changes. */\nexport class McListSelectionChange {\n    constructor(\n        // Reference to the selection list that emitted the event.\n        public source: McListSelection,\n        // Reference to the option that has been changed.\n        public option: McListOption\n    ) {}\n}\n\n\nexport class McListSelectionBase {}\n\nexport const _McListSelectionMixinBase: CanDisableCtor & typeof McListSelectionBase\n    = mixinDisabled(McListSelectionBase);\n\n@Component({\n    exportAs: 'mcListSelection',\n    selector: 'mc-list-selection',\n    template: '<ng-content></ng-content>',\n    styleUrls: ['./list.css'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n    inputs: ['disabled', 'tabIndex'],\n    host: {\n        class: 'mc-list-selection',\n        '[tabIndex]': 'tabIndex',\n        '(focus)': 'focus()',\n        '(blur)': '_onTouched()',\n        '(keydown)': '_onKeyDown($event)',\n        '(window:resize)': 'updateScrollSize()'\n    },\n    providers: [MC_SELECTION_LIST_VALUE_ACCESSOR],\n    preserveWhitespaces: false\n})\nexport class McListSelection extends _McListSelectionMixinBase implements\n    IFocusableOption, CanDisable, AfterContentInit, ControlValueAccessor {\n\n    _keyManager: FocusKeyManager<McListOption>;\n\n    // The option components contained within this selection-list.\n    @ContentChildren(McListOption) options: QueryList<McListOption>;\n\n    tabIndex: number;\n\n    autoSelect: boolean;\n    noUnselect: boolean;\n    multiple: boolean;\n\n    // todo temporary solution\n    withShift: boolean;\n    withCtrl: boolean;\n\n    @Input() horizontal: boolean = false;\n\n    // Emits a change event whenever the selected state of an option changes.\n    @Output() readonly selectionChange: EventEmitter<McListSelectionChange> = new EventEmitter<McListSelectionChange>();\n\n    selectedOptions: SelectionModel<McListOption>;\n\n    // Used for storing the values that were assigned before the options were initialized.\n    private _tempValues: string[] | null;\n\n    private _modelChanges = Subscription.EMPTY;\n\n    constructor(\n        private _element: ElementRef,\n        @Attribute('tabindex') tabIndex: string,\n        @Attribute('auto-select') autoSelect: string,\n        @Attribute('no-unselect') noUnselect: string,\n        @Attribute('multiple') multiple: string\n    ) {\n        super();\n\n        this.autoSelect = autoSelect === null ? true : toBoolean(autoSelect);\n        this.multiple = multiple === null ? true : toBoolean(multiple);\n        this.noUnselect = noUnselect === null ? true : toBoolean(noUnselect);\n\n        this.tabIndex = parseInt(tabIndex) || 0;\n\n        this.selectedOptions = new SelectionModel<McListOption>(this.multiple);\n    }\n\n    ngAfterContentInit(): void {\n        this.horizontal = toBoolean(this.horizontal);\n\n        this._keyManager = new FocusKeyManager<McListOption>(this.options)\n            .withTypeAhead()\n            .withVerticalOrientation(!this.horizontal)\n            .withHorizontalOrientation(this.horizontal ? 'ltr' : null);\n\n        if (this._tempValues) {\n            this._setOptionsFromValues(this._tempValues);\n            this._tempValues = null;\n        }\n\n        // Sync external changes to the model back to the options.\n        this._modelChanges = this.selectedOptions.onChange!.subscribe((event) => {\n            for (const item of event.added) {\n                item.selected = true;\n            }\n\n            for (const item of event.removed) {\n                item.selected = false;\n            }\n        });\n\n        this.updateScrollSize();\n    }\n\n    ngOnDestroy() {\n        this._modelChanges.unsubscribe();\n    }\n\n    focus() {\n        this._element.nativeElement.focus();\n    }\n\n    selectAll() {\n        this.options.forEach((option) => option.setSelected(true));\n\n        this._reportValueChange();\n    }\n\n    deselectAll() {\n        this.options.forEach((option) => option.setSelected(false));\n\n        this._reportValueChange();\n    }\n\n    updateScrollSize(): void {\n        if (this.horizontal || !this.options.first) { return; }\n\n        this._keyManager.withScrollSize(Math.floor(this._getHeight() / this.options.first._getHeight()));\n    }\n\n    // Sets the focused option of the selection-list.\n    setFocusedOption(option: McListOption): void {\n        this._keyManager.updateActiveItem(option);\n\n        if (this.withShift && this.multiple) {\n            const previousIndex = this._keyManager.previousActiveItemIndex;\n            const activeIndex = this._keyManager.activeItemIndex;\n\n            if (previousIndex < activeIndex) {\n                this.options.forEach((item, index) => {\n                    if (index >= previousIndex && index <= activeIndex) { item.setSelected(true); }\n                });\n            } else {\n                this.options.forEach((item, index) => {\n                    if (index >= activeIndex && index <= previousIndex) { item.setSelected(true); }\n                });\n            }\n\n            this.withShift = false;\n        } else if (this.withCtrl) {\n            this.withCtrl = false;\n\n            if (!this._canDeselectLast(option)) { return; }\n\n            option.toggle();\n        } else {\n            if (this.autoSelect) {\n                this.options.forEach((item) => item.setSelected(false));\n                option.setSelected(true);\n            }\n        }\n\n        this._emitChangeEvent(option);\n        this._reportValueChange();\n    }\n\n    // Implemented as part of ControlValueAccessor.\n    writeValue(values: string[]): void {\n        if (this.options) {\n            this._setOptionsFromValues(values || []);\n        } else {\n            this._tempValues = values;\n        }\n    }\n\n    // Implemented as part of ControlValueAccessor.\n    registerOnChange(fn: (value: any) => void): void {\n        this._onChange = fn;\n    }\n\n    // Implemented as part of ControlValueAccessor.\n    registerOnTouched(fn: () => void): void {\n        this._onTouched = fn;\n    }\n\n    // Implemented as a part of ControlValueAccessor.\n    setDisabledState(isDisabled: boolean): void {\n        if (this.options) {\n            this.options.forEach((option) => option.disabled = isDisabled);\n        }\n    }\n\n    getSelectedOptionValues(): string[] {\n        return this.options.filter((option) => option.selected).map((option) => option.value);\n    }\n\n    // Toggles the selected state of the currently focused option.\n    toggleFocusedOption(): void {\n        const focusedIndex = this._keyManager.activeItemIndex;\n\n        if (focusedIndex != null && this._isValidIndex(focusedIndex)) {\n            const focusedOption: McListOption = this.options.toArray()[focusedIndex];\n\n            if (focusedOption && this._canDeselectLast(focusedOption)) {\n                focusedOption.toggle();\n\n                // Emit a change event because the focused option changed its state through user interaction.\n                this._emitChangeEvent(focusedOption);\n            }\n        }\n    }\n\n    _canDeselectLast(listOption: McListOption): boolean {\n        return !(this.noUnselect && this.selectedOptions.selected.length === 1 && listOption.selected);\n    }\n\n    _getHeight(): number {\n        return this._element.nativeElement.getClientRects()[0].height;\n    }\n\n    // View to model callback that should be called if the list or its options lost focus.\n    _onTouched: () => void = () => {};\n\n    // Removes an option from the selection list and updates the active item.\n    _removeOptionFromList(option: McListOption) {\n        if (option._hasFocus) {\n            const optionIndex = this._getOptionIndex(option);\n\n            // Check whether the option is the last item\n            if (optionIndex > 0) {\n                this._keyManager.setPreviousItemActive();\n            } else if (optionIndex === 0 && this.options.length > 1) {\n                this._keyManager.setNextItemActive();\n            }\n        }\n    }\n\n    _onKeyDown(event: KeyboardEvent) {\n        const keyCode = event.keyCode;\n        this.withShift = event.shiftKey;\n        this.withCtrl = event.ctrlKey;\n\n        switch (keyCode) {\n            case SPACE:\n            case ENTER:\n                this.toggleFocusedOption();\n                event.preventDefault();\n\n                break;\n            case HOME:\n                this._keyManager.setFirstItemActive();\n                event.preventDefault();\n\n                break;\n            case END:\n                this._keyManager.setLastItemActive();\n                event.preventDefault();\n\n                break;\n            case PAGE_UP:\n                if (!this.horizontal) { this._keyManager.setPreviousPageItemActive(); }\n\n                event.preventDefault();\n\n                break;\n            case PAGE_DOWN:\n                if (!this.horizontal) { this._keyManager.setNextPageItemActive(); }\n\n                event.preventDefault();\n\n                break;\n            default:\n                this._keyManager.onKeydown(event);\n        }\n    }\n\n    // Reports a value change to the ControlValueAccessor\n    _reportValueChange() {\n        if (this.options) {\n            this._onChange(this.getSelectedOptionValues());\n        }\n    }\n\n    // Emits a change event if the selected state of an option changed.\n    _emitChangeEvent(option: McListOption) {\n        this.selectionChange.emit(new McListSelectionChange(this, option));\n    }\n\n    // Returns the option with the specified value.\n    private _getOptionByValue(value: string): McListOption | undefined {\n        return this.options.find((option) => option.value === value);\n    }\n\n    // Sets the selected options based on the specified values.\n    private _setOptionsFromValues(values: string[]) {\n        this.options.forEach((option) => option.setSelected(false));\n\n        values\n            .map((value) => this._getOptionByValue(value))\n            .filter(Boolean)\n            .forEach((option) => option!.setSelected(true));\n    }\n\n    /**\n     * Utility to ensure all indexes are valid.\n     * @param index The index to be checked.\n     * @returns True if the index is valid for our list of options.\n     */\n    private _isValidIndex(index: number): boolean {\n        return index >= 0 && index < this.options.length;\n    }\n\n    // Returns the index of the specified list option.\n    private _getOptionIndex(option: McListOption): number {\n        return this.options.toArray().indexOf(option);\n    }\n\n    // View to model callback that should be called whenever the selected options change.\n    private _onChange: (value: any) => void = (_: any) => {};\n}\n","// todo пока не делаем, перенесено из материала, но у нас в доках таких простых списков нет.\nimport {\n    AfterContentInit, ChangeDetectionStrategy, Component, ContentChildren, Directive, ElementRef, QueryList,\n    ViewEncapsulation\n} from '@angular/core';\n\nimport { McLine, McLineSetter } from '@ptsecurity/mosaic/core';\n\n\nexport class McListBase {}\n\n@Component({\n    selector: 'mc-list',\n    host: { class: 'mc-list' },\n    template: '<ng-content></ng-content>',\n    styleUrls: ['./list.css'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None\n})\nexport class McList extends McListBase {}\n\n\n/**\n * Directive whose purpose is to add the mc- CSS styling to this selector.\n * @docs-private\n */\n@Directive({\n    selector: '[mc-subheader], [mcSubheader]',\n    host: { class: 'mc-subheader' }\n})\nexport class McListSubheaderCssStyler {}\n\n\n// Boilerplate for applying mixins to McListItem.\nexport class McListItemBase {}\n\n@Component({\n    selector: 'mc-list-item, a[mc-list-item]',\n    host: {\n        class: 'mc-list-item',\n        '(focus)': '_handleFocus()',\n        '(blur)': '_handleBlur()'\n    },\n    templateUrl: './list-item.html',\n    encapsulation: ViewEncapsulation.None,\n    preserveWhitespaces: false,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class McListItem extends McListItemBase implements AfterContentInit {\n    @ContentChildren(McLine) _lines: QueryList<McLine>;\n\n    private _lineSetter: McLineSetter;\n\n    constructor(private _element: ElementRef) {\n        super();\n    }\n\n    ngAfterContentInit() {\n        this._lineSetter = new McLineSetter(this._lines, this._element);\n    }\n\n    _handleFocus() {\n        this._element.nativeElement.classList.add('mc-focused');\n    }\n\n    _handleBlur() {\n        this._element.nativeElement.classList.remove('mc-focused');\n    }\n\n    _getHostElement(): HTMLElement {\n        return this._element.nativeElement;\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { A11yModule } from '@ptsecurity/cdk/a11y';\n\nimport { McLineModule } from '@ptsecurity/mosaic/core';\n\nimport { McListSelection, McListOption } from './list-selection.component';\nimport { McList, McListItem, McListSubheaderCssStyler } from './list.component';\n\n\n@NgModule({\n    imports: [\n        CommonModule,\n        A11yModule,\n        McLineModule\n    ],\n    exports: [\n        McList,\n        McListSelection,\n        McListItem,\n        McListOption,\n        McListSubheaderCssStyler\n    ],\n    declarations: [\n        McList,\n        McListSelection,\n        McListItem,\n        McListOption,\n        McListSubheaderCssStyler\n    ]\n})\nexport class McListModule {}\n","import {\n    Input,\n    Attribute,\n    Component,\n    ElementRef,\n    OnDestroy,\n    ViewEncapsulation,\n    ChangeDetectionStrategy,\n    ChangeDetectorRef\n} from '@angular/core';\n\nimport { FocusMonitor } from '@ptsecurity/cdk/a11y';\nimport {\n    CanDisable, CanDisableCtor,\n    HasTabIndex, HasTabIndexCtor,\n    mixinDisabled,\n    mixinTabIndex,\n    toBoolean\n} from '@ptsecurity/mosaic/core';\n\n\nexport class McLinkBase {\n    constructor(public _elementRef: ElementRef) {\n    }\n}\n\nexport const _McLinkBase: HasTabIndexCtor & CanDisableCtor & typeof McLinkBase\n    = mixinTabIndex(mixinDisabled(McLinkBase));\n\n@Component({\n    selector: 'a.mc-link',\n    template: `<ng-content></ng-content>`,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n    exportAs: 'mcLink',\n    styleUrls: ['./link.css'],\n    inputs: ['disabled'],\n    host: {\n        '[attr.disabled]': 'disabled || null',\n        '[attr.tabindex]': 'tabIndex'\n    }\n})\n\nexport class McLink extends _McLinkBase implements OnDestroy, HasTabIndex, CanDisable {\n\n    @Input()\n    get disabled() {\n        return this._disabled;\n    }\n\n    set disabled(value: any) {\n        const newValue = toBoolean(value);\n\n        if (newValue !== this._disabled) {\n            this._disabled = newValue;\n            this._changeDetector.markForCheck();\n        }\n    }\n\n    private _disabled = false;\n\n    constructor(\n        @Attribute('tabindex') tabIndex: string,\n        public elementRef: ElementRef,\n        private _focusMonitor: FocusMonitor,\n        private _changeDetector: ChangeDetectorRef) {\n\n        super(elementRef);\n        this._focusMonitor.monitor(elementRef.nativeElement, true);\n        this.tabIndex = parseInt(tabIndex) || 0;\n    }\n\n    ngOnDestroy() {\n        this._focusMonitor.stopMonitoring(this.elementRef.nativeElement);\n    }\n\n    focus(): void {\n        this._getHostElement().focus();\n    }\n\n    _getHostElement() {\n        return this.elementRef.nativeElement;\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { A11yModule } from '@ptsecurity/cdk/a11y';\n\nimport { McLink } from './link.component';\n\n\n@NgModule({\n    imports: [\n        CommonModule,\n        A11yModule\n    ],\n    declarations: [McLink],\n    exports: [McLink]\n})\nexport class McLinkModule {}\n","import { Injectable, Optional, SkipSelf } from '@angular/core';\nimport { Subject, Subscription } from 'rxjs';\n\nimport { McModalRef } from './modal-ref.class';\n\n\ninterface IRegisteredMeta {\n    modalRef: McModalRef;\n    afterOpenSubscription: Subscription;\n    afterCloseSubscription: Subscription;\n}\n\n@Injectable()\nexport class McModalControlService {\n\n    // Track singleton afterAllClose through over the injection tree\n    get afterAllClose(): Subject<void> {\n        return this.parentService ? this.parentService.afterAllClose : this.rootAfterAllClose;\n    }\n\n    // Track singleton openModals array through over the injection tree\n    get openModals(): McModalRef[] {\n        return this.parentService ? this.parentService.openModals : this.rootOpenModals;\n    }\n\n    // @ts-ignore\n    private rootOpenModals: McModalRef[] = this.parentService ? null : [];\n    // @ts-ignore\n    private rootAfterAllClose: Subject<void> = this.parentService ? null : new Subject<void>();\n    // @ts-ignore\n    private rootRegisteredMetaMap: Map<McModalRef, IRegisteredMeta> = this.parentService ? null : new Map();\n\n    // Registered modal for later usage\n    private get registeredMetaMap(): Map<McModalRef, IRegisteredMeta> {\n        return this.parentService ? this.parentService.registeredMetaMap : this.rootRegisteredMetaMap;\n    }\n\n    constructor(\n        @Optional() @SkipSelf() private parentService: McModalControlService) {\n    }\n\n    // Register a modal to listen its open/close\n    registerModal(modalRef: McModalRef): void {\n        if (!this.hasRegistered(modalRef)) {\n            const afterOpenSubscription = modalRef.afterOpen.subscribe(() => this.openModals.push(modalRef));\n            const afterCloseSubscription = modalRef.afterClose.subscribe(() => this.removeOpenModal(modalRef));\n\n            this.registeredMetaMap.set(modalRef, {modalRef, afterOpenSubscription, afterCloseSubscription});\n        }\n    }\n\n    hasRegistered(modalRef: McModalRef): boolean {\n        return this.registeredMetaMap.has(modalRef);\n    }\n\n    // Close all registered opened modals\n    closeAll(): void {\n        let i = this.openModals.length;\n\n        while (i--) {\n            this.openModals[i].close();\n        }\n    }\n\n    private removeOpenModal(modalRef: McModalRef): void {\n        const index = this.openModals.indexOf(modalRef);\n\n        if (index > -1) {\n            this.openModals.splice(index, 1);\n\n            if (!this.openModals.length) {\n                this.afterAllClose.next();\n            }\n        }\n    }\n}\n","import { Observable } from 'rxjs';\n\nimport { McModalComponent } from './modal.component';\n\n\n/**\n * API class that public to users to handle the modal instance.\n * McModalRef is aim to avoid accessing to the modal instance directly by users.\n */\nexport abstract class McModalRef<T = any, R = any> {\n    abstract afterOpen: Observable<void>;\n    abstract afterClose: Observable<R>;\n\n    abstract open(): void;\n\n    abstract close(result?: R): void;\n\n    abstract destroy(result?: R): void;\n\n    /**\n     * Trigger the nzOnOk/nzOnCancel by manual\n     */\n    abstract triggerOk(): void;\n\n    abstract triggerCancel(): void;\n\n    // /**\n    //  * Return the ComponentRef of nzContent when specify nzContent as a Component\n    //  * Note: this method may return undefined if the Component has not ready yet.\n    //    (it only available after Modal's ngOnInit)\n    //  */\n    // abstract getContentComponentRef(): ComponentRef<{}>;\n\n    /**\n     * Return the component instance of nzContent when specify nzContent as a Component\n     * Note: this method may return undefined if the Component has not ready yet.\n     * (it only available after Modal's ngOnInit)\n     */\n    abstract getContentComponent(): T;\n\n    /**\n     * Get the dom element of this Modal\n     */\n    abstract getElement(): HTMLElement;\n\n    /**\n     * Get the instance of the Modal itself\n     */\n    abstract getInstance(): McModalComponent;\n}\n","export interface IClickPosition {\n    x: number;\n    y: number;\n}\n\nexport class ModalUtil {\n    private lastPosition: IClickPosition;\n\n    constructor(private document: Document) {\n        this.lastPosition = {x: -1, y: -1};\n        this.listenDocumentClick();\n    }\n\n    getLastClickPosition(): IClickPosition {\n        return this.lastPosition;\n    }\n\n    listenDocumentClick(): void {\n        this.document.addEventListener('click', (event: MouseEvent) => {\n            this.lastPosition = {x: event.clientX, y: event.clientY};\n        });\n    }\n}\n\nexport default new ModalUtil(document);\n","import {\n    Output,\n    ChangeDetectionStrategy,\n    Component,\n    ElementRef, Input,\n    OnDestroy, EventEmitter,\n    ViewEncapsulation, HostBinding\n} from '@angular/core';\n\nimport { FocusMonitor } from '@ptsecurity/cdk/a11y';\nimport { SPACE } from '@ptsecurity/cdk/keycodes';\n\n\n@Component({\n    selector: 'mc-card',\n    templateUrl: './card.component.html',\n    styleUrls: ['./card.component.css'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n    inputs: ['color'],\n    host: {\n        class: 'mc-card',\n        '[class.mc-card_readonly]': 'readonly',\n        '[class.mc-card_selected]': 'selected',\n        '(keydown)': 'onKeyDown($event)',\n        '(click)': 'onClick($event)'\n    }\n})\nexport class McCard implements OnDestroy {\n    get tabIndex(): number | null {\n        return this.readonly ? null : this._tabIndex;\n    }\n\n    @HostBinding('attr.tabIndex')\n    @Input()\n    set tabIndex(value: number | null) {\n        this._tabIndex = value;\n    }\n\n    @Input()\n    readonly = false;\n\n    @Input()\n    selected = false;\n\n    @Output()\n    selectedChange = new EventEmitter<boolean>();\n\n    private _tabIndex: number | null = 0;\n\n    constructor(private _elementRef: ElementRef, private _focusMonitor: FocusMonitor) {\n        this._focusMonitor.monitor(this._elementRef.nativeElement, false);\n    }\n\n    ngOnDestroy() {\n        this._focusMonitor.stopMonitoring(this._elementRef.nativeElement);\n    }\n\n    focus(): void {\n        this.hostElement.focus();\n    }\n\n    onClick($event: MouseEvent) {\n        if (!this.readonly) {\n            $event.stopPropagation();\n\n            this.selectedChange.emit(!this.selected);\n        }\n    }\n\n    private get hostElement() {\n        return this._elementRef.nativeElement;\n    }\n\n    onKeyDown($event: KeyboardEvent) {\n        switch ($event.keyCode) {\n            case SPACE:\n                if (!this.readonly) {\n                    $event.preventDefault();\n                    this.selectedChange.emit(!this.selected);\n                }\n                break;\n            default:\n        }\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { A11yModule } from '@ptsecurity/cdk/a11y';\nimport { PlatformModule } from '@ptsecurity/cdk/platform';\n\nimport {\n    McCard\n} from './card.component';\n\n\n@NgModule({\n    imports: [\n        CommonModule,\n        A11yModule,\n        PlatformModule\n    ],\n    exports: [McCard],\n    declarations: [McCard]\n})\nexport class McCardModule {}\n","import { InjectionToken } from '@angular/core';\n\n\n/**\n * Checkbox click action when user click on input element.\n * noop: Do not toggle checked or indeterminate.\n * check: Only toggle checked status, ignore indeterminate.\n * check-indeterminate: Toggle checked status, set indeterminate to false. Default behavior.\n * undefined: Same as `check-indeterminate`.\n */\nexport type McCheckboxClickAction = 'noop' | 'check' | 'check-indeterminate' | undefined;\n\n/**\n * Injection token that can be used to specify the checkbox click behavior.\n */\nexport const MC_CHECKBOX_CLICK_ACTION =\n    new InjectionToken<McCheckboxClickAction>('mc-checkbox-click-action');\n","import {\n    AfterViewInit,\n    Attribute,\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    ElementRef,\n    EventEmitter,\n    forwardRef,\n    Inject,\n    Input,\n    OnDestroy,\n    Optional,\n    Output,\n    ViewChild,\n    ViewEncapsulation\n} from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { FocusMonitor, FocusOrigin } from '@ptsecurity/cdk/a11y';\nimport {\n    CanColor, CanColorCtor,\n    CanDisable, CanDisableCtor,\n    HasTabIndex, HasTabIndexCtor,\n    mixinColor,\n    mixinDisabled,\n    mixinTabIndex,\n    toBoolean\n} from '@ptsecurity/mosaic/core';\n\nimport { MC_CHECKBOX_CLICK_ACTION, McCheckboxClickAction } from './checkbox-config';\n\n\n// Increasing integer for generating unique ids for checkbox components.\nlet nextUniqueId = 0;\n\n/**\n * Provider Expression that allows mc-checkbox to register as a ControlValueAccessor.\n * This allows it to support [(ngModel)].\n * @docs-private\n */\nexport const MC_CHECKBOX_CONTROL_VALUE_ACCESSOR: any = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => McCheckbox),\n    multi: true\n};\n\n/**\n * Represents the different states that require custom transitions between them.\n * @docs-private\n */\nexport enum TransitionCheckState {\n    /** The initial state of the component before any user interaction. */\n    Init,\n    /** The state representing the component when it's becoming checked. */\n    Checked,\n    /** The state representing the component when it's becoming unchecked. */\n    Unchecked,\n    /** The state representing the component when it's becoming indeterminate. */\n    Indeterminate\n}\n\n/** Change event object emitted by McCheckbox. */\nexport class McCheckboxChange {\n    /** The source McCheckbox of the event. */\n    source: McCheckbox;\n    /** The new `checked` value of the checkbox. */\n    checked: boolean;\n}\n\n// Boilerplate for applying mixins to McCheckbox.\n/** @docs-private */\nexport class McCheckboxBase {\n    constructor(public _elementRef: ElementRef) {\n    }\n}\n\nexport const _McCheckboxMixinBase:\n    HasTabIndexCtor &\n    CanColorCtor &\n    CanDisableCtor &\n    typeof McCheckboxBase =\n        mixinTabIndex(mixinColor(mixinDisabled(McCheckboxBase)));\n\n\n/**\n * A mosaic checkbox component. Supports all of the functionality of an HTML5 checkbox,\n * and exposes a similar API. A McCheckbox can be either checked, unchecked, indeterminate, or\n * disabled. Note that all additional accessibility attributes are taken care of by the component,\n * so there is no need to provide them yourself. However, if you want to omit a label and still\n * have the checkbox be accessible, you may supply an [aria-label] input.\n */\n@Component({\n    selector: 'mc-checkbox',\n    templateUrl: 'checkbox.html',\n    styleUrls: ['checkbox.css'],\n    exportAs: 'mcCheckbox',\n    host: {\n        class: 'mc-checkbox',\n        '[id]': 'id',\n        '[attr.id]': 'id',\n        '[class.mc-checkbox-indeterminate]': 'indeterminate',\n        '[class.mc-checkbox-checked]': 'checked',\n        '[class.mc-checkbox-disabled]': 'disabled',\n        '[class.mc-checkbox-label-before]': 'labelPosition == \"before\"'\n    },\n    providers: [MC_CHECKBOX_CONTROL_VALUE_ACCESSOR],\n    inputs: ['color', 'tabIndex'],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class McCheckbox extends _McCheckboxMixinBase implements ControlValueAccessor,\n    AfterViewInit, OnDestroy, CanColor, CanDisable, HasTabIndex {\n\n    /**\n     * Attached to the aria-label attribute of the host element. In most cases, arial-labelledby will\n     * take precedence so this may be omitted.\n     */\n    @Input('aria-label') ariaLabel: string = '';\n\n    /**\n     * Users can specify the `aria-labelledby` attribute which will be forwarded to the input element\n     */\n    @Input('aria-labelledby') ariaLabelledby: string | null = null;\n\n    private _uniqueId: string = `mc-checkbox-${++nextUniqueId}`;\n\n    /** A unique id for the checkbox input. If none is supplied, it will be auto-generated. */\n    @Input() id: string = this._uniqueId;\n\n    /** Returns the unique id for the visual hidden input. */\n    get inputId(): string {\n        return `${this.id || this._uniqueId}-input`;\n    }\n\n    /** Whether the checkbox is required. */\n    @Input()\n    get required(): boolean {\n        return this._required;\n    }\n\n    set required(value: boolean) {\n        this._required = toBoolean(value);\n    }\n\n    private _required: boolean;\n\n    /** Whether the label should appear after or before the checkbox. Defaults to 'after' */\n    @Input() labelPosition: 'before' | 'after' = 'after';\n\n    /** Name value will be applied to the input element if present */\n    @Input() name: string | null = null;\n\n    /** Event emitted when the checkbox's `checked` value changes. */\n    @Output() readonly change: EventEmitter<McCheckboxChange> =\n        new EventEmitter<McCheckboxChange>();\n\n    /** Event emitted when the checkbox's `indeterminate` value changes. */\n    @Output() readonly indeterminateChange: EventEmitter<boolean> = new EventEmitter<boolean>();\n\n    /** The value attribute of the native input element */\n    @Input() value: string;\n\n    /** The native `<input type=\"checkbox\">` element */\n    @ViewChild('input') _inputElement: ElementRef;\n\n    /**\n     * Called when the checkbox is blurred. Needed to properly implement ControlValueAccessor.\n     * @docs-private\n     */\n    _onTouched: () => any = () => {\n    }\n\n    private _currentAnimationClass: string = '';\n\n    private _currentCheckState: TransitionCheckState = TransitionCheckState.Init;\n\n    private _controlValueAccessorChangeFn: (value: any) => void = () => {\n    }\n\n    constructor(elementRef: ElementRef,\n                private _changeDetectorRef: ChangeDetectorRef,\n                private _focusMonitor: FocusMonitor,\n                @Attribute('tabindex') tabIndex: string,\n                @Optional() @Inject(MC_CHECKBOX_CLICK_ACTION)\n                private _clickAction: McCheckboxClickAction) {\n        super(elementRef);\n\n        this.tabIndex = parseInt(tabIndex) || 0;\n    }\n\n    ngAfterViewInit() {\n        this._focusMonitor\n            .monitor(this._inputElement.nativeElement)\n            .subscribe((focusOrigin) => this._onInputFocusChange(focusOrigin));\n    }\n\n    ngOnDestroy() {\n        this._focusMonitor.stopMonitoring(this._inputElement.nativeElement);\n    }\n\n    /**\n     * Whether the checkbox is checked.\n     */\n    @Input()\n    get checked(): boolean {\n        return this._checked;\n    }\n\n    set checked(value: boolean) {\n        if (value != this.checked) {\n            this._checked = value;\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n\n    private _checked: boolean = false;\n\n    /**\n     * Whether the checkbox is disabled. This fully overrides the implementation provided by\n     * mixinDisabled, but the mixin is still required because mixinTabIndex requires it.\n     */\n    @Input()\n    get disabled() {\n        return this._disabled;\n    }\n\n    set disabled(value: any) {\n        if (value != this.disabled) {\n            this._disabled = value;\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n\n    private _disabled: boolean = false;\n\n    /**\n     * Whether the checkbox is indeterminate. This is also known as \"mixed\" mode and can be used to\n     * represent a checkbox with three states, e.g. a checkbox that represents a nested list of\n     * checkable items. Note that whenever checkbox is manually clicked, indeterminate is immediately\n     * set to false.\n     */\n    @Input()\n    get indeterminate(): boolean {\n        return this._indeterminate;\n    }\n\n    set indeterminate(value: boolean) {\n        const changed = value != this._indeterminate;\n        this._indeterminate = value;\n\n        if (changed) {\n            if (this._indeterminate) {\n                this._transitionCheckState(TransitionCheckState.Indeterminate);\n            } else {\n                this._transitionCheckState(\n                    this.checked ? TransitionCheckState.Checked : TransitionCheckState.Unchecked);\n            }\n            this.indeterminateChange.emit(this._indeterminate);\n        }\n    }\n\n    private _indeterminate: boolean = false;\n\n    /** Method being called whenever the label text changes. */\n    _onLabelTextChange() {\n        // This method is getting called whenever the label of the checkbox changes.\n        // Since the checkbox uses the OnPush strategy we need to notify it about the change\n        // that has been recognized by the cdkObserveContent directive.\n        this._changeDetectorRef.markForCheck();\n    }\n\n    // Implemented as part of ControlValueAccessor.\n    writeValue(value: any) {\n        this.checked = !!value;\n    }\n\n    // Implemented as part of ControlValueAccessor.\n    registerOnChange(fn: (value: any) => void) {\n        this._controlValueAccessorChangeFn = fn;\n    }\n\n    // Implemented as part of ControlValueAccessor.\n    registerOnTouched(fn: any) {\n        this._onTouched = fn;\n    }\n\n    // Implemented as part of ControlValueAccessor.\n    setDisabledState(isDisabled: boolean) {\n        this.disabled = isDisabled;\n    }\n\n    _getAriaChecked(): 'true' | 'false' | 'mixed' {\n        return this.checked ? 'true' : (this.indeterminate ? 'mixed' : 'false');\n    }\n\n    private _transitionCheckState(newState: TransitionCheckState) {\n        const oldState = this._currentCheckState;\n        const element: HTMLElement = this._elementRef.nativeElement;\n\n        if (oldState === newState) {\n            return;\n        }\n        if (this._currentAnimationClass.length > 0) {\n            element.classList.remove(this._currentAnimationClass);\n        }\n\n        this._currentCheckState = newState;\n\n        if (this._currentAnimationClass.length > 0) {\n            element.classList.add(this._currentAnimationClass);\n        }\n    }\n\n    private _emitChangeEvent() {\n        const event = new McCheckboxChange();\n        event.source = this;\n        event.checked = this.checked;\n\n        this._controlValueAccessorChangeFn(this.checked);\n        this.change.emit(event);\n    }\n\n    /** Function is called whenever the focus changes for the input element. */\n    private _onInputFocusChange(focusOrigin: FocusOrigin) {\n        if (focusOrigin) {\n            this._onTouched();\n        }\n    }\n\n    /** Toggles the `checked` state of the checkbox. */\n    toggle(): void {\n        this.checked = !this.checked;\n    }\n\n    /**\n     * Event handler for checkbox input element.\n     * Toggles checked state if element is not disabled.\n     * Do not toggle on (change) event since IE doesn't fire change event when\n     *   indeterminate checkbox is clicked.\n     * @param event\n     */\n    _onInputClick(event: Event) {\n        // We have to stop propagation for click events on the visual hidden input element.\n        // By default, when a user clicks on a label element, a generated click event will be\n        // dispatched on the associated input element. Since we are using a label element as our\n        // root container, the click event on the `checkbox` will be executed twice.\n        // The real click event will bubble up, and the generated click event also tries to bubble up.\n        // This will lead to multiple click events.\n        // Preventing bubbling for the second event will solve that issue.\n        event.stopPropagation();\n\n        // If resetIndeterminate is false, and the current state is indeterminate, do nothing on click\n        if (!this.disabled && this._clickAction !== 'noop') {\n            // When user manually click on the checkbox, `indeterminate` is set to false.\n            if (this.indeterminate && this._clickAction !== 'check') {\n\n                Promise.resolve().then(() => {\n                    this._indeterminate = false;\n                    this.indeterminateChange.emit(this._indeterminate);\n                });\n            }\n\n            this.toggle();\n            this._transitionCheckState(\n                this._checked ? TransitionCheckState.Checked : TransitionCheckState.Unchecked);\n\n            // Emit our custom change event if the native input emitted one.\n            // It is important to only emit it, if the native input triggered one, because\n            // we don't want to trigger a change event, when the `checked` variable changes for example.\n            this._emitChangeEvent();\n        } else if (!this.disabled && this._clickAction === 'noop') {\n            // Reset native input when clicked with noop. The native checkbox becomes checked after\n            // click, reset it to be align with `checked` value of `mc-checkbox`.\n            this._inputElement.nativeElement.checked = this.checked;\n            this._inputElement.nativeElement.indeterminate = this.indeterminate;\n        }\n    }\n\n    /** Focuses the checkbox. */\n    focus(): void {\n        this._focusMonitor.focusVia(this._inputElement.nativeElement, 'keyboard');\n    }\n\n    _onInteractionEvent(event: Event) {\n        // We always have to stop propagation on the change event.\n        // Otherwise the change event, from the input element, will bubble up and\n        // emit its event object to the `change` output.\n        event.stopPropagation();\n    }\n}\n","import {\n    Directive,\n    forwardRef,\n    Provider\n} from '@angular/core';\nimport {\n    CheckboxRequiredValidator,\n    NG_VALIDATORS\n} from '@angular/forms';\n\n\nexport const MC_CHECKBOX_REQUIRED_VALIDATOR: Provider = {\n    provide: NG_VALIDATORS,\n    useExisting: forwardRef(() => McCheckboxRequiredValidator),\n    multi: true\n};\n\n/**\n * Validator for Mosaic checkbox's required attribute in template-driven checkbox.\n * Current CheckboxRequiredValidator only work with `input type=checkbox` and does not\n * work with `mc-checkbox`.\n */\n@Directive({\n    selector: `mc-checkbox[required][formControlName],\n             mc-checkbox[required][formControl], mc-checkbox[required][ngModel]`,\n    providers: [MC_CHECKBOX_REQUIRED_VALIDATOR],\n    host: { '[attr.required]': 'required ? \"\" : null' }\n})\nexport class McCheckboxRequiredValidator extends CheckboxRequiredValidator {\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { McCheckbox } from './checkbox';\nimport { McCheckboxRequiredValidator } from './checkbox-required-validator';\n\n\n@NgModule({\n    imports: [CommonModule],\n    exports: [McCheckbox, McCheckboxRequiredValidator],\n    declarations: [McCheckbox, McCheckboxRequiredValidator]\n})\nexport class McCheckboxModule {\n}\n","import { ChangeDetectionStrategy, Component, Input, ViewEncapsulation } from '@angular/core';\nimport { coerceBooleanProperty } from '@ptsecurity/cdk/coercion';\n\n\n@Component({\n    selector: 'mc-divider',\n    host: {\n        class: 'mc-divider',\n        role: 'separator',\n        '[attr.aria-orientation]': 'vertical ? \"vertical\" : \"horizontal\"',\n        '[class.mc-divider-vertical]': 'vertical',\n        '[class.mc-divider-inset]': 'inset'\n    },\n    template: '',\n    styleUrls: ['divider.css'],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    preserveWhitespaces: false\n})\nexport class McDivider {\n    // Whether the divider is vertically aligned.\n    @Input()\n    get vertical(): boolean {\n        return this._vertical;\n    }\n\n    set vertical(value: boolean) {\n        this._vertical = coerceBooleanProperty(value);\n    }\n\n    private _vertical: boolean = false;\n\n    // Whether the divider is an inset divider.\n    @Input()\n    get inset(): boolean {\n        return this._inset;\n    }\n\n    set inset(value: boolean) {\n        this._inset = coerceBooleanProperty(value);\n    }\n\n    private _inset: boolean = false;\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { McDivider } from './divider.component';\n\n\n@NgModule({\n    imports: [CommonModule],\n    exports: [McDivider],\n    declarations: [McDivider]\n})\nexport class McDividerModule {\n}\n","import { Component } from '@angular/core';\n\n\n@Component({\n    selector: 'mc-cleaner',\n    template: '<i class=\"mc-icon_light\" mc-icon=\"mc-close-M_16\" color=\"second\"></i>'\n})\nexport class McCleaner {\n}\n","import { NgControl } from '@angular/forms';\nimport { Observable } from 'rxjs';\n\n\n/** An interface which allows a control to work inside of a `MсFormField`. */\nexport abstract class McFormFieldControl<T> {\n    /** The value of the control. */\n    value: T | null;\n\n    /**\n     * Stream that emits whenever the state of the control changes such that the parent `MсFormField`\n     * needs to run change detection.\n     */\n    readonly stateChanges: Observable<void>;\n\n    /** The element ID for this control. */\n    readonly id: string;\n\n    /** The placeholder for this control. */\n    readonly placeholder: string;\n\n    /** Gets the NgControl for this control. */\n    readonly ngControl: NgControl | null;\n\n    /** Whether the control is focused. */\n    readonly focused: boolean;\n\n    /** Whether the control is empty. */\n    readonly empty: boolean;\n\n    /** Whether the control is required. */\n    readonly required: boolean;\n\n    /** Whether the control is disabled. */\n    readonly disabled: boolean;\n\n    /** Whether the control is in an error state. */\n    readonly errorState: boolean;\n\n    /**\n     * An optional name for the control type that can be used to distinguish `mc-form-field` elements\n     * based on their control type. The form field will add a class,\n     * `mc-form-field-type-{{controlType}}` to its root element.\n     */\n    readonly controlType?: string;\n\n    /** Handles a click on the control's container. */\n    abstract onContainerClick(event: MouseEvent): void;\n}\n","import { Observable } from 'rxjs';\n\n\n/** An interface which allows a control to work inside of a `MсFormField`. */\nexport abstract class McFormFieldNumberControl<T> {\n    /** The value of the control. */\n    value: T | null;\n\n    /**\n     * Stream that emits whenever the state of the control changes such that the parent `MсFormField`\n     * needs to run change detection.\n     */\n    readonly stateChanges: Observable<void>;\n\n    /** the number step */\n    step: number;\n\n    /** the number big step */\n    bigStep: number;\n\n    /** Whether the control is focused. */\n    readonly focused: boolean;\n\n    /** Handles step up and down */\n    abstract stepUp(step: number): void;\n\n    abstract stepDown(step: number): void;\n}\n","import { Directive, Input } from '@angular/core';\n\n\nlet nextUniqueId = 0;\n\n@Directive({\n    selector: 'mc-hint',\n    host: {\n        class: 'mc-hint',\n        '[attr.id]': 'id'\n    }\n})\nexport class McHint {\n    @Input() id: string = `mc-hint-${nextUniqueId++}`;\n}\n","import { Directive } from '@angular/core';\n\n\n@Directive({\n    selector: '[mcPrefix]'\n})\nexport class McPrefix {\n}\n","import { Component, EventEmitter, Output } from '@angular/core';\n\n\n@Component({\n    selector: 'mc-stepper',\n    template: `\n        <i class=\"mc mc-icon mc-icon_light mc-second mc-stepper-step-up mc-angle-L_16\"\n           (mousedown)=\"onStepUp($event)\">\n        </i>\n        <i class=\"mc mc-icon mc-icon_light mc-second mc-stepper-step-down mc-angle-L_16\"\n           (mousedown)=\"onStepDown($event)\">\n        </i>\n    `\n})\nexport class McStepper {\n    @Output()\n    readonly stepUp: EventEmitter<void> = new EventEmitter<void>();\n    @Output()\n    readonly stepDown: EventEmitter<void> = new EventEmitter<void>();\n\n    onStepUp($event: MouseEvent) {\n        this.stepUp.emit();\n        $event.preventDefault();\n    }\n\n    onStepDown($event: MouseEvent) {\n        this.stepDown.emit();\n        $event.preventDefault();\n    }\n}\n","import { Directive } from '@angular/core';\n\n\n@Directive({\n    selector: '[mcSuffix]'\n})\nexport class McSuffix {\n}\n","import {\n    AfterContentChecked,\n    AfterContentInit,\n    AfterViewInit,\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    ContentChild,\n    ContentChildren, Directive,\n    ElementRef,\n    QueryList,\n    ViewEncapsulation\n} from '@angular/core';\nimport { ESCAPE } from '@ptsecurity/cdk/keycodes';\nimport { CanColor, CanColorCtor, mixinColor } from '@ptsecurity/mosaic/core';\nimport { EMPTY, merge } from 'rxjs';\nimport { startWith } from 'rxjs/operators';\n\n\nimport { McCleaner } from './cleaner';\nimport { McFormFieldControl } from './form-field-control';\nimport { getMcFormFieldMissingControlError } from './form-field-errors';\nimport { McFormFieldNumberControl } from './form-field-number-control';\nimport { McHint } from './hint';\nimport { McPrefix } from './prefix';\nimport { McStepper } from './stepper';\nimport { McSuffix } from './suffix';\n\n\nlet nextUniqueId = 0;\n\nexport class McFormFieldBase {\n    constructor(public _elementRef: ElementRef) {}\n}\n\nexport const _McFormFieldMixinBase: CanColorCtor & typeof McFormFieldBase = mixinColor(McFormFieldBase);\n\n@Component({\n    selector: 'mc-form-field',\n    exportAs: 'mcFormField',\n    templateUrl: 'form-field.html',\n    // McInput is a directive and can't have styles, so we need to include its styles here.\n    // The McInput styles are fairly minimal so it shouldn't be a big deal for people who\n    // aren't using McInput.\n    styleUrls: [\n        'form-field.css',\n        '../input/input.css'\n    ],\n    host: {\n        class: 'mc-form-field',\n        '[class.mc-form-field_invalid]': '_control.errorState',\n        '[class.mc-disabled]': '_control.disabled',\n        '[class.mc-form-field_has-prefix]': 'hasPrefix',\n        '[class.mc-form-field_has-suffix]': 'hasSuffix',\n        '[class.mc-form-field_has-cleaner]': 'canShowCleaner',\n        '[class.mc-form-field_has-stepper]': 'canShowStepper',\n        '[class.mc-focused]': '_control.focused',\n        '[class.ng-untouched]': '_shouldForward(\"untouched\")',\n        '[class.ng-touched]': '_shouldForward(\"touched\")',\n        '[class.ng-pristine]': '_shouldForward(\"pristine\")',\n        '[class.ng-dirty]': '_shouldForward(\"dirty\")',\n        '[class.ng-valid]': '_shouldForward(\"valid\")',\n        '[class.ng-invalid]': '_shouldForward(\"invalid\")',\n        '[class.ng-pending]': '_shouldForward(\"pending\")',\n        '(keydown)': 'onKeyDown($event)',\n        '(mouseenter)': 'onHoverChanged(true)',\n        '(mouseleave)': 'onHoverChanged(false)'\n    },\n    inputs: ['color'],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\n\nexport class McFormField extends _McFormFieldMixinBase implements\n    AfterContentInit, AfterContentChecked, AfterViewInit, CanColor {\n\n    @ContentChild(McFormFieldControl) _control: McFormFieldControl<any>;\n    @ContentChild(McFormFieldNumberControl) _numberControl: McFormFieldNumberControl<any>;\n    @ContentChild(McStepper) _stepper: McStepper;\n\n    @ContentChildren(McHint) _hint: QueryList<McHint>;\n    @ContentChildren(McSuffix) _suffix: QueryList<McSuffix>;\n    @ContentChildren(McPrefix) _prefix: QueryList<McPrefix>;\n    @ContentChildren(McCleaner) _cleaner: QueryList<McCleaner>;\n\n    // Unique id for the internal form field label.\n    _labelId = `mc-form-field-label-${nextUniqueId++}`;\n\n    hovered: boolean = false;\n\n    constructor(public _elementRef: ElementRef, private _changeDetectorRef: ChangeDetectorRef) {\n        super(_elementRef);\n    }\n\n    ngAfterContentInit() {\n        this._validateControlChild();\n        if (this._control.controlType) {\n            this._elementRef.nativeElement.classList\n                .add(`mc-form-field-type-${this._control.controlType}`);\n\n            if (this._numberControl && this.hasStepper) {\n                this._stepper.stepUp.subscribe(this.onStepUp.bind(this));\n                this._stepper.stepDown.subscribe(this.onStepDown.bind(this));\n            }\n        }\n\n        // Subscribe to changes in the child control state in order to update the form field UI.\n        this._control.stateChanges.pipe(startWith())\n            .subscribe(() => {\n                this._changeDetectorRef.markForCheck();\n            });\n\n        if (this._numberControl) {\n            this._numberControl.stateChanges.pipe(startWith())\n                .subscribe(() => {\n                    this._changeDetectorRef.markForCheck();\n                });\n        }\n\n        // Run change detection if the value changes.\n        const valueChanges = this._control.ngControl && this._control.ngControl.valueChanges || EMPTY;\n        merge(valueChanges)\n            .subscribe(() => this._changeDetectorRef.markForCheck());\n    }\n\n    ngAfterContentChecked() {\n        this._validateControlChild();\n    }\n\n    ngAfterViewInit() {\n        // Avoid animations on load.\n        this._changeDetectorRef.detectChanges();\n    }\n\n    clearValue($event) {\n        $event.stopPropagation();\n\n        if (this._control && this._control.ngControl) {\n            this._control.ngControl.reset();\n        }\n    }\n\n    onContainerClick($event) {\n        if (this._control.onContainerClick) {\n            this._control.onContainerClick($event);\n        }\n    }\n\n    onKeyDown(e: KeyboardEvent): void {\n        // tslint:disable-next-line:deprecation\n        if (e.keyCode === ESCAPE &&\n            this._control.focused &&\n            this.hasCleaner) {\n\n            if (this._control && this._control.ngControl) {\n                this._control.ngControl.reset();\n            }\n\n            e.preventDefault();\n        }\n    }\n\n    onHoverChanged(isHovered: boolean) {\n        if (isHovered !== this.hovered) {\n            this.hovered  = isHovered;\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n\n    onStepUp() {\n        if (this._numberControl) {\n            this._numberControl.stepUp(this._numberControl.step);\n        }\n    }\n\n    onStepDown() {\n        if (this._numberControl) {\n            this._numberControl.stepDown(this._numberControl.step);\n        }\n    }\n\n    /** Determines whether a class from the NgControl should be forwarded to the host element. */\n    _shouldForward(prop: string): boolean {\n        const ngControl = this._control ? this._control.ngControl : null;\n\n        return ngControl && ngControl[prop];\n    }\n\n    /** Throws an error if the form field's control is missing. */\n    protected _validateControlChild() {\n        if (!this._control) {\n            throw getMcFormFieldMissingControlError();\n        }\n    }\n\n    get hasHint(): boolean {\n        return this._hint && this._hint.length > 0;\n    }\n\n    get hasSuffix(): boolean {\n        return this._suffix && this._suffix.length > 0;\n    }\n\n    get hasPrefix(): boolean {\n        return this._prefix && this._prefix.length > 0;\n    }\n\n    get hasCleaner(): boolean {\n        return this._cleaner && this._cleaner.length > 0;\n    }\n\n    get hasStepper(): boolean {\n        return !!this._stepper;\n    }\n\n    get canShowCleaner(): boolean {\n        return this.hasCleaner &&\n            this._control &&\n            this._control.ngControl\n                ? this._control.ngControl.value && !this._control.disabled\n                : false;\n    }\n\n\n    get disabled(): boolean {\n        return this._control && this._control.disabled;\n    }\n\n    get canShowStepper(): boolean {\n        return this._numberControl &&\n            !this.disabled &&\n            (\n                this._numberControl.focused ||\n                this.hovered\n            );\n    }\n}\n\n@Directive({\n    selector: 'mc-form-field[mcFormFieldWithoutBorders]',\n    exportAs: 'mcFormFieldWithoutBorders',\n    host: { class: 'mc-form-field_without-borders' }\n})\nexport class McFormFieldWithoutBorders {\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { McIconModule } from '@ptsecurity/mosaic/icon';\n\nimport { McCleaner } from './cleaner';\nimport { McFormField, McFormFieldWithoutBorders } from './form-field';\nimport { McHint } from './hint';\nimport { McPrefix } from './prefix';\nimport { McStepper } from './stepper';\nimport { McSuffix } from './suffix';\n\n\n@NgModule({\n    declarations: [\n        McFormField,\n        McFormFieldWithoutBorders,\n        McHint,\n        McPrefix,\n        McSuffix,\n        McCleaner,\n        McStepper\n    ],\n    imports: [CommonModule, McIconModule],\n    exports: [\n        McFormField,\n        McFormFieldWithoutBorders,\n        McHint,\n        McPrefix,\n        McSuffix,\n        McCleaner,\n        McStepper\n    ]\n})\nexport class McFormFieldModule {\n}\n","import { InjectionToken } from '@angular/core';\n\n\nexport const MC_INPUT_VALUE_ACCESSOR =\n    new InjectionToken<{ value: any }>('MC_INPUT_VALUE_ACCESSOR');\n","function sanitizeNumber(value: number): number | null {\n    return !isFinite(value) || isNaN(value)\n        ? null\n        : value;\n}\n\nfunction getPrecision(value: number): number {\n    const arr = value.toString().split('.');\n\n    return arr.length === 1\n        ? 1\n        // tslint:disable-next-line:no-magic-numbers\n        :  Math.pow(10, arr[1].length);\n}\n\nfunction add(value1: number, value2: number) {\n    const precision = Math.max(getPrecision(value1), getPrecision(value2));\n\n    const res = (value1 * precision + value2 * precision) / precision;\n\n    return sanitizeNumber(res);\n}\n\nexport const stepUp = (value: number | null,\n                       max: number,\n                       min: number,\n                       step: number\n): number | null => {\n    let res;\n\n    if (value === null) {\n        res = add(min, step);\n\n        return res === null ? null : Math.min(res, max);\n    }\n\n    res = add(value, step);\n\n    return res === null ? null : Math.max(Math.min(res, max), min);\n};\n\nexport const stepDown = (value: number | null,\n                         max: number,\n                         min: number,\n                         step: number\n): number | null => {\n    let res;\n\n    if (value === null) {\n        res = add(max, -step);\n\n        return res === null ? null : Math.max(res, min);\n    }\n\n    res = add(value, -step);\n\n    return res === null ? null : Math.min(Math.max(res, min), max);\n};\n","import {\n    Attribute,\n    Directive, DoCheck, ElementRef, Inject, Input, OnChanges,\n    OnDestroy, Optional, Self\n} from '@angular/core';\nimport {\n    FormGroupDirective,\n    NgControl,\n    NgForm, NgModel\n} from '@angular/forms';\nimport { coerceBooleanProperty } from '@ptsecurity/cdk/coercion';\nimport {\n    END, C, V, X, A, DELETE, BACKSPACE, TAB, ENTER,\n    ESCAPE, ZERO, NINE, NUMPAD_ZERO, NUMPAD_NINE, NUMPAD_MINUS, DASH,\n    FF_MINUS, LEFT_ARROW, RIGHT_ARROW, HOME, UP_ARROW, DOWN_ARROW, F1, F12\n} from '@ptsecurity/cdk/keycodes';\nimport { getSupportedInputTypes, Platform } from '@ptsecurity/cdk/platform';\nimport {\n    CanUpdateErrorState,\n    CanUpdateErrorStateCtor,\n    ErrorStateMatcher,\n    mixinErrorState\n} from '@ptsecurity/mosaic/core';\nimport { McFormFieldControl, McFormFieldNumberControl } from '@ptsecurity/mosaic/form-field';\nimport { Subject } from 'rxjs';\n\nimport { getMcInputUnsupportedTypeError } from './input-errors';\nimport { MC_INPUT_VALUE_ACCESSOR } from './input-value-accessor';\nimport { stepDown, stepUp } from './stepperUtils';\n\n\nconst MC_INPUT_INVALID_TYPES = [\n    'button',\n    'checkbox',\n    'file',\n    'hidden',\n    'image',\n    'radio',\n    'range',\n    'reset',\n    'submit'\n];\n\nexport const BIG_STEP = 10;\nexport const SMALL_STEP = 1;\n\nlet nextUniqueId = 0;\n\nexport class McInputBase {\n    constructor(public _defaultErrorStateMatcher: ErrorStateMatcher,\n                public _parentForm: NgForm,\n                public _parentFormGroup: FormGroupDirective,\n                public ngControl: NgControl) {\n    }\n}\n\nexport const _McInputMixinBase: CanUpdateErrorStateCtor & typeof McInputBase = mixinErrorState(McInputBase);\n\n\n@Directive({\n    selector: `input[mcInput][type=\"number\"]`,\n    exportAs: 'mcNumericalInput',\n    providers: [NgModel, { provide: McFormFieldNumberControl, useExisting: McNumberInput }],\n    host: {\n        '(blur)': '_focusChanged(false)',\n        '(focus)': '_focusChanged(true)',\n        '(paste)': 'onPaste($event)',\n        '(keydown)': 'onKeyDown($event)'\n    }\n})\nexport class McNumberInput implements McFormFieldNumberControl<any> {\n\n    /**\n     * Implemented as part of McFormFieldNumberControl.\n     * @docs-private\n     */\n    @Input()\n    bigStep: number;\n\n    /**\n     * Implemented as part of McFormFieldNumberControl.\n     * @docs-private\n     */\n    @Input()\n    step: number;\n\n    @Input()\n    min: number;\n\n    @Input()\n    max: number;\n\n    /**\n     * Implemented as part of McFormFieldNumberControl.\n     * @docs-private\n     */\n    value: any;\n\n    /**\n     * Implemented as part of McFormFieldNumberControl.\n     * @docs-private\n     */\n    focused: boolean = false;\n\n    /**\n     * Implemented as part of McFormFieldNumberControl.\n     * @docs-private\n     */\n    readonly stateChanges: Subject<void> = new Subject<void>();\n\n    private readonly _host: HTMLInputElement;\n\n    constructor(\n        private _platform: Platform ,\n        private _elementRef: ElementRef,\n        private _model: NgModel,\n        @Attribute('step') step: string,\n        @Attribute('big-step') bigStep: string,\n        @Attribute('min') min: string,\n        @Attribute('max') max: string\n    ) {\n        this.step = this.isDigit(step) ? parseFloat(step) : SMALL_STEP;\n        this.bigStep = this.isDigit(bigStep) ? parseFloat(bigStep) : BIG_STEP;\n        this.min = this.isDigit(min) ? parseFloat(min) : -Infinity;\n        this.max = this.isDigit(max) ? parseFloat(max) : Infinity;\n\n        this._host = this._elementRef.nativeElement;\n\n        const self = this;\n\n        if ('valueAsNumber' in this._host) {\n            Object.defineProperty(Object.getPrototypeOf(this._host), 'valueAsNumber', {\n                // tslint:disable-next-line:no-reserved-keywords\n                get() {\n                    const res = parseFloat(self.normalizeSplitter(this.value));\n\n                    return isNaN(res) ? null : res;\n                }\n            });\n        }\n    }\n\n    _focusChanged(isFocused: boolean) {\n        if (isFocused !== this.focused) {\n            this.focused = isFocused;\n            this.stateChanges.next();\n        }\n    }\n\n    onKeyDown(event: KeyboardEvent) {\n        // tslint:disable-next-line:deprecation\n        const keyCode = event.keyCode;\n\n        const isCtrlA = (e) => e.keyCode === A && (e.ctrlKey || e.metaKey);\n        const isCtrlC = (e) => e.keyCode === C && (e.ctrlKey || e.metaKey);\n        const isCtrlV = (e) => e.keyCode === V && (e.ctrlKey || e.metaKey);\n        const isCtrlX = (e) => e.keyCode === X && (e.ctrlKey || e.metaKey);\n\n        const isFKey = (e) => e.keyCode >= F1 && e.keyCode <= F12;\n\n        const isNumber = (e) => (e.keyCode >= ZERO && e.keyCode <= NINE) ||\n            (e.keyCode >= NUMPAD_ZERO && e.keyCode <= NUMPAD_NINE);\n\n        const minuses = [NUMPAD_MINUS, DASH, FF_MINUS];\n        const serviceKeys = [DELETE, BACKSPACE, TAB, ESCAPE, ENTER];\n        const arrows = [LEFT_ARROW, RIGHT_ARROW];\n        const allowedKeys =  [HOME, END].concat(arrows).concat(serviceKeys).concat(minuses);\n\n        const isIEPeriod = (e) => e.key === '.' || e.key === 'Decimal';\n        const isNotIEPeriod = (e) => e.key === '.' || e.key === ',';\n\n        // Decimal is for IE\n        const isPeriod = (e) => this._platform.EDGE || this._platform.TRIDENT\n            ? isIEPeriod(e)\n            : isNotIEPeriod(e);\n\n        if (allowedKeys.indexOf(keyCode) !== -1 ||\n            isCtrlA(event) ||\n            isCtrlC(event) ||\n            isCtrlV(event) ||\n            isCtrlX(event) ||\n            isFKey(event) ||\n            isPeriod(event)\n        ) {\n            // let it happen, don't do anything\n            return;\n        }\n        // Ensure that it is not a number and stop the keypress\n        if (event.shiftKey || !isNumber(event)) {\n            event.preventDefault();\n\n            // process steps\n            const step = event.shiftKey ? this.bigStep : this.step;\n\n            if (keyCode === UP_ARROW) {\n                this.stepUp(step);\n            }\n\n            if (keyCode === DOWN_ARROW) {\n                this.stepDown(step);\n            }\n        }\n    }\n\n    onPaste(event) {\n        let value = event.clipboardData.getData('text');\n        value = this.normalizeSplitter(value);\n\n        if (!this.isDigit(value)) {\n            event.preventDefault();\n        }\n    }\n\n    stepUp(step: number) {\n        this._elementRef.nativeElement.focus();\n        const res = stepUp(this._host.valueAsNumber, this.max, this.min, step);\n        this._host.value = res === null ? '' : res.toString();\n        this._model.update.emit(this._host.valueAsNumber);\n    }\n\n    stepDown(step: number) {\n        this._elementRef.nativeElement.focus();\n        const res = stepDown(this._host.valueAsNumber, this.max, this.min, step);\n        this._host.value = res === null ? '' : res.toString();\n        this._model.update.emit(this._host.valueAsNumber);\n    }\n\n    private normalizeSplitter(value: string): string {\n        return value ? value.replace(/,/g, '.') : value;\n    }\n\n    private isDigit(value: string): boolean {\n        return this.isFloat(value) || this.isInt(value);\n    }\n\n    private isFloat(value: string): boolean {\n        return /^-?\\d+\\.\\d+$/.test(value);\n    }\n\n    private isInt(value: string): boolean {\n        return /^-?\\d+$/.test(value);\n    }\n}\n\n@Directive({\n    selector: `input[mcInput]`,\n    exportAs: 'mcInput',\n    host: {\n        class: 'mc-input',\n        // Native input properties that are overwritten by Angular inputs need to be synced with\n        // the native input element. Otherwise property bindings for those don't work.\n        '[attr.id]': 'id',\n        '[attr.placeholder]': 'placeholder',\n        '[disabled]': 'disabled',\n        '[required]': 'required',\n        '(blur)': '_focusChanged(false)',\n        '(focus)': '_focusChanged(true)',\n        '(input)': '_onInput()'\n    },\n    providers: [{ provide: McFormFieldControl, useExisting: McInput }]\n})\nexport class McInput extends _McInputMixinBase implements McFormFieldControl<any>, OnChanges,\n    OnDestroy, DoCheck, CanUpdateErrorState {\n\n    /** An object used to control when error messages are shown. */\n    @Input() errorStateMatcher: ErrorStateMatcher;\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    focused: boolean = false;\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    readonly stateChanges: Subject<void> = new Subject<void>();\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    controlType: string = 'mc-input';\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    @Input()\n    get disabled(): boolean {\n        if (this.ngControl && this.ngControl.disabled !== null) {\n            return this.ngControl.disabled;\n        }\n\n        return this._disabled;\n    }\n\n    set disabled(value: boolean) {\n        this._disabled = coerceBooleanProperty(value);\n\n        // Browsers may not fire the blur event if the input is disabled too quickly.\n        // Reset from here to ensure that the element doesn't become stuck.\n        if (this.focused) {\n            this.focused = false;\n            this.stateChanges.next();\n        }\n    }\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    @Input()\n    get id(): string {\n        return this._id;\n    }\n\n    set id(value: string) {\n        this._id = value || this._uid;\n    }\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    @Input() placeholder: string;\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    @Input()\n    get required(): boolean {\n        return this._required;\n    }\n\n    set required(value: boolean) {\n        this._required = coerceBooleanProperty(value);\n    }\n\n    // tslint:disable no-reserved-keywords\n    /** Input type of the element. */\n    @Input()\n    get type(): string {\n        return this._type;\n    }\n\n    set type(value: string) {\n        this._type = value || 'text';\n        this._validateType();\n\n        // When using Angular inputs, developers are no longer able to set the properties on the native\n        // input element. To ensure that bindings for `type` work, we need to sync the setter\n        // with the native property. Textarea elements don't support the type property or attribute.\n        if (getSupportedInputTypes().has(this._type)) {\n            this._elementRef.nativeElement.type = this._type;\n        }\n    }\n    // tslint:enable no-reserved-keywords\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    @Input()\n    get value(): string {\n        return this._inputValueAccessor.value;\n    }\n\n    set value(value: string) {\n        if (value !== this.value) {\n            this._inputValueAccessor.value = value;\n            this.stateChanges.next();\n        }\n    }\n\n    protected _uid = `mc-input-${nextUniqueId++}`;\n    protected _previousNativeValue: any;\n    protected _disabled = false;\n    protected _id: string;\n    protected _required = false;\n    protected _type = 'text';\n    protected _neverEmptyInputTypes = [\n        'date',\n        'datetime',\n        'datetime-local',\n        'month',\n        'time',\n        'week'\n    ].filter((t) => getSupportedInputTypes().has(t));\n\n    private _inputValueAccessor: { value: any };\n\n    constructor(protected _elementRef: ElementRef,\n                @Optional() @Self() public ngControl: NgControl,\n                @Optional() _parentForm: NgForm,\n                @Optional() _parentFormGroup: FormGroupDirective,\n                _defaultErrorStateMatcher: ErrorStateMatcher,\n                @Optional() @Self() @Inject(MC_INPUT_VALUE_ACCESSOR) inputValueAccessor: any) {\n        super(_defaultErrorStateMatcher, _parentForm, _parentFormGroup, ngControl);\n        // If no input value accessor was explicitly specified, use the element as the input value\n        // accessor.\n        this._inputValueAccessor = inputValueAccessor || this._elementRef.nativeElement;\n\n        this._previousNativeValue = this.value;\n\n        // Force setter to be called in case id was not specified.\n        this.id = this.id;\n    }\n\n    ngOnChanges() {\n        this.stateChanges.next();\n    }\n\n    ngOnDestroy() {\n        this.stateChanges.complete();\n    }\n\n    ngDoCheck() {\n        if (this.ngControl) {\n            // We need to re-evaluate this on every change detection cycle, because there are some\n            // error triggers that we can't subscribe to (e.g. parent form submissions). This means\n            // that whatever logic is in here has to be super lean or we risk destroying the performance.\n            this.updateErrorState();\n        }\n\n        // We need to dirty-check the native element's value, because there are some cases where\n        // we won't be notified when it changes (e.g. the consumer isn't using forms or they're\n        // updating the value using `emitEvent: false`).\n        this._dirtyCheckNativeValue();\n    }\n\n    /** Focuses the input. */\n    focus(): void {\n        this._elementRef.nativeElement.focus();\n    }\n\n    /** Callback for the cases where the focused state of the input changes. */\n    _focusChanged(isFocused: boolean) {\n        if (isFocused !== this.focused) {\n            this.focused = isFocused;\n            this.stateChanges.next();\n        }\n    }\n\n    _onInput() {\n        // This is a noop function and is used to let Angular know whenever the value changes.\n        // Angular will run a new change detection each time the `input` event has been dispatched.\n        // It's necessary that Angular recognizes the value change, because when floatingLabel\n        // is set to false and Angular forms aren't used, the placeholder won't recognize the\n        // value changes and will not disappear.\n        // Listening to the input event wouldn't be necessary when the input is using the\n        // FormsModule or ReactiveFormsModule, because Angular forms also listens to input events.\n    }\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    get empty(): boolean {\n        return !this._isNeverEmpty() && !this._elementRef.nativeElement.value && !this._isBadInput();\n    }\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    onContainerClick() {\n        this.focus();\n    }\n\n    /** Does some manual dirty checking on the native input `value` property. */\n    protected _dirtyCheckNativeValue() {\n        const newValue = this.value;\n\n        if (this._previousNativeValue !== newValue) {\n            this._previousNativeValue = newValue;\n            this.stateChanges.next();\n        }\n    }\n\n    /** Make sure the input is a supported type. */\n    protected _validateType() {\n        if (MC_INPUT_INVALID_TYPES.indexOf(this._type) > -1) {\n            throw getMcInputUnsupportedTypeError(this._type);\n        }\n    }\n\n    /** Checks whether the input type is one of the types that are never empty. */\n    protected _isNeverEmpty() {\n        return this._neverEmptyInputTypes.indexOf(this._type) > -1;\n    }\n\n    /** Checks whether the input is invalid based on the native validation. */\n    protected _isBadInput() {\n        // The `validity` property won't be present on platform-server.\n        const validity = (this._elementRef.nativeElement as HTMLInputElement).validity;\n\n        return validity && validity.badInput;\n    }\n}\n\n@Directive({\n    selector: 'input[mcInputMonospace]',\n    exportAs: 'McInputMonospace',\n    host: { class: 'mc-input_monospace' }\n})\nexport class McInputMono {\n}\n","import { Directive, forwardRef, Input, OnChanges, Provider, SimpleChanges } from '@angular/core';\nimport { AbstractControl, NG_VALIDATORS, ValidationErrors, Validator, ValidatorFn, Validators } from '@angular/forms';\n\n\nexport const MIN_VALIDATOR: Provider = {\n    provide: NG_VALIDATORS,\n    useExisting: forwardRef(() => MinValidator),\n    multi: true\n};\n\n/**\n * A directive which installs the {@link MinValidator} for any `formControlName`,\n * `formControl`, or control with `ngModel` that also has a `min` attribute.\n *\n * @experimental\n */\n@Directive({\n    selector: '[min][formControlName],[min][formControl],[min][ngModel]',\n    providers: [MIN_VALIDATOR],\n    host: {'[attr.min]': 'min ? min : null'}\n})\nexport class MinValidator implements Validator, OnChanges {\n\n    @Input() min: string;\n    private _validator: ValidatorFn;\n    private _onChange: () => void;\n\n    ngOnChanges(changes: SimpleChanges): void {\n        if ('min' in changes) {\n            this._createValidator();\n            if (this._onChange) { this._onChange(); }\n        }\n    }\n\n    validate(c: AbstractControl): ValidationErrors | null { return this._validator(c); }\n\n    registerOnValidatorChange(fn: () => void): void { this._onChange = fn; }\n\n    private _createValidator(): void { this._validator = Validators.min(parseInt(this.min, 10)); }\n}\n\n\nexport const MAX_VALIDATOR: Provider = {\n    provide: NG_VALIDATORS,\n    useExisting: forwardRef(() => MaxValidator),\n    multi: true\n};\n\n/**\n * A directive which installs the {@link MaxValidator} for any `formControlName`,\n * `formControl`, or control with `ngModel` that also has a `min` attribute.\n *\n * @experimental\n */\n@Directive({\n    selector: '[max][formControlName],[max][formControl],[max][ngModel]',\n    providers: [MAX_VALIDATOR],\n    host: {\n        '[attr.max]': 'max ? max : null'\n    }\n})\nexport class MaxValidator implements Validator,\n    OnChanges {\n\n    @Input() max: string;\n    private _validator: ValidatorFn;\n    private _onChange: () => void;\n\n    ngOnChanges(changes: SimpleChanges): void {\n        if ('max' in changes) {\n            this._createValidator();\n            if (this._onChange) { this._onChange(); }\n        }\n    }\n\n    validate(c: AbstractControl): ValidationErrors | null { return this._validator(c); }\n\n    registerOnValidatorChange(fn: () => void): void { this._onChange = fn; }\n\n    private _createValidator(): void { this._validator = Validators.max(parseInt(this.max, 10)); }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { A11yModule } from '@ptsecurity/cdk/a11y';\nimport { McCommonModule } from '@ptsecurity/mosaic/core';\n\nimport { McInput, McInputMono, McNumberInput } from './input';\nimport { MaxValidator, MinValidator } from './input-number-validators';\n\n\n@NgModule({\n    imports: [CommonModule, A11yModule, McCommonModule, FormsModule],\n    exports: [McInput, McNumberInput, McInputMono, MinValidator, MaxValidator],\n    declarations: [McInput, McNumberInput, McInputMono, MinValidator, MaxValidator ]\n})\nexport class McInputModule {\n}\n","import { Component } from '@angular/core';\n\n\n@Component({\n    selector: 'mc-content',\n    preserveWhitespaces: false,\n    templateUrl: './content.component.html',\n    styles: [\n        `:host {\n            display: block;\n        }`\n    ],\n    host: {\n        '[class.mc-layout-content]': 'true'\n    }\n})\nexport class McContentComponent {\n}\n","import { Component } from '@angular/core';\n\n\n@Component({\n    selector: 'mc-footer',\n    preserveWhitespaces: false,\n    templateUrl: './footer.component.html',\n    styles: [\n        `:host {\n            display: block;\n        }`\n    ],\n    host: {\n        '[class.mc-layout-footer]': 'true'\n    }\n})\nexport class McFooterComponent {\n}\n","import { Component } from '@angular/core';\n\n\n@Component({\n    selector : 'mc-header',\n    preserveWhitespaces: false,\n    templateUrl: './header.component.html',\n    styles: [\n        `:host {\n            display: block;\n        }`\n    ],\n    host: {\n        '[class.mc-layout-header]': 'true'\n    }\n})\nexport class McHeaderComponent {\n}\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","\nexport function isBoolean(val: any): val is boolean { return typeof val === 'boolean'; }\n\nexport function toBoolean(value: any): boolean {\n    return value != null && `${value}` !== 'false';\n}\n","import { NgModule, InjectionToken, Optional, Inject, isDevMode } from '@angular/core';\nimport { BidiModule } from '@ptsecurity/cdk/bidi';\n\n\n// Injection token that configures whether the Mosaic sanity checks are enabled.\nexport const MC_SANITY_CHECKS = new InjectionToken<boolean>('mc-sanity-checks', {\n    providedIn: 'root',\n    factory: MC_SANITY_CHECKS_FACTORY\n});\n\nexport function MC_SANITY_CHECKS_FACTORY(): boolean {\n    return true;\n}\n\n/**\n * Module that captures anything that should be loaded and/or run for *all* Mosaic\n * components. This includes Bidi, etc.\n *\n * This module should be imported to each top-level component module (e.g., MatTabsModule).\n */\n@NgModule({\n    imports: [ BidiModule ],\n    exports: [ BidiModule ]\n})\nexport class McCommonModule {\n    // Whether we've done the global sanity checks (e.g. a theme is loaded, there is a doctype).\n    private _hasDoneGlobalChecks = false;\n\n    // Reference to the global `document` object.\n    private _document = typeof document === 'object' && document ? document : null;\n\n    // Reference to the global 'window' object.\n    private _window = typeof window === 'object' && window ? window : null;\n\n    constructor(@Optional() @Inject(MC_SANITY_CHECKS) private _sanityChecksEnabled: boolean) {\n        if (this._areChecksEnabled() && !this._hasDoneGlobalChecks) {\n            this._checkDoctypeIsDefined();\n            this._checkThemeIsPresent();\n            this._hasDoneGlobalChecks = true;\n        }\n    }\n\n    // Whether any sanity checks are enabled\n    private _areChecksEnabled(): boolean {\n        return this._sanityChecksEnabled && isDevMode() && !this._isTestEnv();\n    }\n\n    // Whether the code is running in tests.\n    private _isTestEnv() {\n        // tslint:disable-next-line\n        return this._window && (this._window['__karma__'] || this._window['jasmine']);\n    }\n\n    private _checkDoctypeIsDefined(): void {\n        if (this._document && !this._document.doctype) {\n            console.warn(\n                'Current document does not have a doctype. This may cause ' +\n                'some Mosaic components not to behave as expected.'\n            );\n        }\n    }\n\n    private _checkThemeIsPresent(): void {\n        if (this._document && typeof getComputedStyle === 'function') {\n            const testElement = this._document.createElement('div');\n\n            testElement.classList.add('mc-theme-loaded-marker');\n            this._document.body.appendChild(testElement);\n\n            const computedStyle = getComputedStyle(testElement);\n\n            // In some situations, the computed style of the test element can be null. For example in\n            // Firefox, the computed style is null if an application is running inside of a hidden iframe.\n            // See: https://bugzilla.mozilla.org/show_bug.cgi?id=548397\n            if (computedStyle && computedStyle.display !== 'none') {\n                console.warn(\n                    'Could not find Mosaic core theme. Most Mosaic ' +\n                    'components may not work as expected. For more info refer ' +\n                    'to the theming guide: link there'\n                );\n            }\n\n            this._document.body.removeChild(testElement);\n        }\n    }\n}\n","import { coerceBooleanProperty } from '@ptsecurity/cdk/coercion';\n\nimport { Constructor } from './constructor';\n\n\nexport interface CanDisable {\n    disabled: boolean;\n}\n\n/** @docs-private */\nexport type CanDisableCtor = Constructor<CanDisable>;\n\n// Mixin to augment a directive with a `disabled` property.\nexport function mixinDisabled<T extends Constructor<{}>>(base: T): CanDisableCtor & T {\n    return class extends base {\n        private _disabled: boolean = false;\n\n        get disabled() {\n            return this._disabled;\n        }\n\n        set disabled(value: any) {\n            this._disabled = coerceBooleanProperty(value);\n        }\n\n        constructor(...args: any[]) {\n            // tslint:disable-next-line\n            super(...args);\n        }\n    };\n}\n","import { ElementRef } from '@angular/core';\n\nimport { Constructor } from './constructor';\n\n\nexport interface CanColor {\n    color: ThemePalette;\n}\n\n/** @docs-private */\nexport type CanColorCtor = Constructor<CanColor>;\n\nexport interface HasElementRef {\n    _elementRef: ElementRef;\n}\n\nexport enum ThemePalette {\n    Primary = 'primary',\n    Second = 'second',\n    Error = 'error',\n    Default = 'second',\n    Empty = ''\n}\n\n/** Mixin to augment a directive with a `color` property. */\nexport function mixinColor<T extends Constructor<HasElementRef>>(\n    base: T,\n    defaultColor: ThemePalette = ThemePalette.Default\n): CanColorCtor & T {\n    return class extends base {\n\n        private _color: ThemePalette;\n\n        get color(): ThemePalette {\n            return this._color;\n        }\n\n        set color(value: ThemePalette) {\n            const colorPalette = value || defaultColor;\n\n            if (colorPalette !== this._color) {\n                if (this._color) {\n                    this._elementRef.nativeElement.classList.remove(`mc-${this._color}`);\n                }\n\n                if (colorPalette) {\n                    this._elementRef.nativeElement.classList.add(`mc-${colorPalette}`);\n                }\n\n                this._color = colorPalette;\n            }\n        }\n\n        constructor(...args: any[]) {\n            super(...args);\n\n            this.color = defaultColor;\n        }\n    };\n}\n\n","import { Constructor } from './constructor';\nimport { CanDisable } from './disabled';\n\n\nexport interface HasTabIndex {\n    tabIndex: number;\n}\n\nexport type HasTabIndexCtor = Constructor<HasTabIndex>;\n\n// Mixin to augment a directive with a `tabIndex` property.\nexport function mixinTabIndex<T extends Constructor<CanDisable>>(base: T, defaultTabIndex = 0)\n    : HasTabIndexCtor & T {\n    return class extends base {\n        private _tabIndex: number = defaultTabIndex;\n\n        get tabIndex(): number {\n            return this.disabled ? -1 : this._tabIndex;\n        }\n\n        set tabIndex(value: number) {\n            this._tabIndex = value != null ? value : defaultTabIndex;\n        }\n\n        constructor(...args: any[]) {\n            super(...args);\n        }\n    };\n}\n","import { FormControl, FormGroupDirective, NgControl, NgForm } from '@angular/forms';\nimport { Subject } from 'rxjs';\n\nimport { ErrorStateMatcher } from '../error/error-options';\n\nimport { Constructor } from './constructor';\n\n\n/** @docs-private */\nexport interface CanUpdateErrorState {\n\n    readonly stateChanges: Subject<void>;\n\n    errorState: boolean;\n    errorStateMatcher: ErrorStateMatcher;\n\n    updateErrorState();\n}\n\n/** @docs-private */\nexport type CanUpdateErrorStateCtor = Constructor<CanUpdateErrorState>;\n\n/** @docs-private */\nexport interface HasErrorState {\n    _parentFormGroup: FormGroupDirective;\n    _parentForm: NgForm;\n    _defaultErrorStateMatcher: ErrorStateMatcher;\n    ngControl: NgControl;\n}\n\n/**\n * Mixin to augment a directive with updateErrorState method.\n * For component with `errorState` and need to update `errorState`.\n */\nexport function mixinErrorState<T extends Constructor<HasErrorState>>(base: T)\n    : CanUpdateErrorStateCtor & T {\n    return class extends base {\n        /** Whether the component is in an error state. */\n        errorState: boolean = false;\n\n        /**\n         * Stream that emits whenever the state of the input changes such that the wrapping\n         * `MatFormField` needs to run change detection.\n         */\n        readonly stateChanges = new Subject<void>();\n\n        errorStateMatcher: ErrorStateMatcher;\n\n        constructor(...args: any[]) {\n            super(...args);\n        }\n\n        updateErrorState() {\n            const oldState = this.errorState;\n            const parent = this._parentFormGroup || this._parentForm;\n            const matcher = this.errorStateMatcher || this._defaultErrorStateMatcher;\n            const control = this.ngControl ? this.ngControl.control as FormControl : null;\n            const newState = matcher.isErrorState(control, parent);\n\n            if (newState !== oldState) {\n                this.errorState = newState;\n                this.stateChanges.next();\n            }\n        }\n    };\n}\n","import {\n    AfterViewChecked,\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    ElementRef,\n    EventEmitter,\n    Inject,\n    InjectionToken,\n    Input,\n    OnDestroy,\n    Optional,\n    Output,\n    QueryList,\n    ViewEncapsulation\n} from '@angular/core';\nimport { coerceBooleanProperty } from '@ptsecurity/cdk/coercion';\nimport { ENTER, SPACE } from '@ptsecurity/cdk/keycodes';\nimport { Subject } from 'rxjs';\n\nimport { McOptgroup } from './optgroup';\n\n\n/**\n * Option IDs need to be unique across components, so this counter exists outside of\n * the component definition.\n */\nlet _uniqueIdCounter = 0;\n\n/** Event object emitted by McOption when selected or deselected. */\nexport class McOptionSelectionChange {\n    constructor(\n        /** Reference to the option that emitted the event. */\n        public source: McOption,\n        /** Whether the change in the option's value was a result of a user action. */\n        public isUserInput = false) {\n    }\n}\n\n/**\n * Describes a parent component that manages a list of options.\n * Contains properties that the options can inherit.\n * @docs-private\n */\nexport interface IMcOptionParentComponent {\n    disableRipple?: boolean;\n    multiple?: boolean;\n}\n\n/**\n * Injection token used to provide the parent component to options.\n */\nexport const MC_OPTION_PARENT_COMPONENT =\n    new InjectionToken<IMcOptionParentComponent>('MC_OPTION_PARENT_COMPONENT');\n\n/**\n * Single option inside of a `<mat-select>` element.\n */\n@Component({\n    selector: 'mc-option',\n    exportAs: 'mcOption',\n    host: {\n        '[attr.tabindex]': '_getTabIndex()',\n        '[class.mc-selected]': 'selected',\n        '[class.mc-option-multiple]': 'multiple',\n        '[class.mc-active]': 'active',\n        '[id]': 'id',\n        '[class.mc-disabled]': 'disabled',\n        '(click)': '_selectViaInteraction()',\n        '(keydown)': '_handleKeydown($event)',\n        class: 'mc-option'\n    },\n    styleUrls: ['option.css'],\n    templateUrl: 'option.html',\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class McOption implements AfterViewChecked, OnDestroy {\n    /** Whether the wrapping component is in multiple selection mode. */\n    get multiple() {\n        return this._parent && this._parent.multiple;\n    }\n\n    /** The unique ID of the option. */\n    get id(): string {\n        return this._id;\n    }\n\n    /** Whether or not the option is currently selected. */\n    get selected(): boolean {\n        return this._selected;\n    }\n\n    /** The form value of the option. */\n    @Input() value: any;\n\n    /** Whether the option is disabled. */\n    @Input()\n    get disabled() {\n        return (this.group && this.group.disabled) || this._disabled;\n    }\n\n    set disabled(value: any) {\n        this._disabled = coerceBooleanProperty(value);\n    }\n\n    /** Whether ripples for the option are disabled. */\n    get disableRipple() {\n        return this._parent && this._parent.disableRipple;\n    }\n\n    /** Event emitted when the option is selected or deselected. */\n        // tslint:disable-next-line:no-output-on-prefix\n    @Output() readonly onSelectionChange = new EventEmitter<McOptionSelectionChange>();\n\n    /** Emits when the state of the option changes and any parents have to be notified. */\n    readonly _stateChanges = new Subject<void>();\n\n    private _selected = false;\n    private _active = false;\n    private _disabled = false;\n    private readonly _id = `mc-option-${_uniqueIdCounter++}`;\n    private _mostRecentViewValue = '';\n\n    constructor(\n        private readonly _element: ElementRef,\n        private readonly _changeDetectorRef: ChangeDetectorRef,\n        @Optional() @Inject(MC_OPTION_PARENT_COMPONENT) private readonly _parent: IMcOptionParentComponent,\n        @Optional() readonly group: McOptgroup) {\n    }\n\n    /**\n     * Whether or not the option is currently active and ready to be selected.\n     * An active option displays styles as if it is focused, but the\n     * focus is actually retained somewhere else. This comes in handy\n     * for components like autocomplete where focus must remain on the input.\n     */\n    get active(): boolean {\n        return this._active;\n    }\n\n    /**\n     * The displayed value of the option. It is necessary to show the selected option in the\n     * select's trigger.\n     */\n    get viewValue(): string {\n        // TODO(kara): Add input property alternative for node envs.\n        return (this._getHostElement().textContent || '').trim();\n    }\n\n    /** Selects the option. */\n    select(): void {\n        if (!this._selected) {\n            this._selected = true;\n            this._changeDetectorRef.markForCheck();\n            this._emitSelectionChangeEvent();\n        }\n    }\n\n    /** Deselects the option. */\n    deselect(): void {\n        if (this._selected) {\n            this._selected = false;\n            this._changeDetectorRef.markForCheck();\n            this._emitSelectionChangeEvent();\n        }\n    }\n\n    /** Sets focus onto this option. */\n    focus(): void {\n        const element = this._getHostElement();\n\n        if (typeof element.focus === 'function') {\n            element.focus();\n        }\n    }\n\n    /**\n     * This method sets display styles on the option to make it appear\n     * active. This is used by the ActiveDescendantKeyManager so key\n     * events will display the proper options as active on arrow key events.\n     */\n    setActiveStyles(): void {\n        if (!this._active) {\n            this._active = true;\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n\n    /**\n     * This method removes display styles on the option that made it appear\n     * active. This is used by the ActiveDescendantKeyManager so key\n     * events will display the proper options as active on arrow key events.\n     */\n    setInactiveStyles(): void {\n        if (this._active) {\n            this._active = false;\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n\n    /** Gets the label to be used when determining whether the option should be focused. */\n    getLabel(): string {\n        return this.viewValue;\n    }\n\n    /** Ensures the option is selected when activated from the keyboard. */\n    _handleKeydown(event: KeyboardEvent): void {\n        // tslint:disable-next-line\n        if (event.keyCode === ENTER || event.keyCode === SPACE) {\n            this._selectViaInteraction();\n\n            // Prevent the page from scrolling down and form submits.\n            event.preventDefault();\n        }\n    }\n\n    /**\n     * `Selects the option while indicating the selection came from the user. Used to\n     * determine if the select's view -> model callback should be invoked.`\n     */\n    _selectViaInteraction(): void {\n        if (!this.disabled) {\n            this._selected = this.multiple ? !this._selected : true;\n            this._changeDetectorRef.markForCheck();\n            this._emitSelectionChangeEvent(true);\n        }\n    }\n\n    /** Returns the correct tabindex for the option depending on disabled state. */\n    _getTabIndex(): string {\n        return this.disabled ? '-1' : '0';\n    }\n\n    /** Gets the host DOM element. */\n    _getHostElement(): HTMLElement {\n        return this._element.nativeElement;\n    }\n\n    ngAfterViewChecked() {\n        // Since parent components could be using the option's label to display the selected values\n        // (e.g. `mat-select`) and they don't have a way of knowing if the option's label has changed\n        // we have to check for changes in the DOM ourselves and dispatch an event. These checks are\n        // relatively cheap, however we still limit them only to selected options in order to avoid\n        // hitting the DOM too often.\n        if (this._selected) {\n            const viewValue = this.viewValue;\n\n            if (viewValue !== this._mostRecentViewValue) {\n                this._mostRecentViewValue = viewValue;\n                this._stateChanges.next();\n            }\n        }\n    }\n\n    ngOnDestroy() {\n        this._stateChanges.complete();\n    }\n\n    /** Emits the selection change event. */\n    private _emitSelectionChangeEvent(isUserInput = false): void {\n        this.onSelectionChange.emit(new McOptionSelectionChange(this, isUserInput));\n    }\n}\n\n/**\n * Counts the amount of option group labels that precede the specified option.\n * @param optionIndex Index of the option at which to start counting.\n * @param options Flat list of all of the options.\n * @param optionGroups Flat list of all of the option groups.\n * @docs-private\n */\nexport function _countGroupLabelsBeforeOption(\n    optionIndex: number, options: QueryList<McOption>,\n    optionGroups: QueryList<McOptgroup>\n): number {\n\n    if (optionGroups.length) {\n        const optionsArray = options.toArray();\n        const groups = optionGroups.toArray();\n\n        let groupCounter = 0;\n\n        for (let i = 0; i < optionIndex + 1; i++) {\n            if (optionsArray[i].group && optionsArray[i].group === groups[groupCounter]) {\n                groupCounter++;\n            }\n        }\n\n        return groupCounter;\n    }\n\n    return 0;\n}\n\n/**\n * Determines the position to which to scroll a panel in order for an option to be into view.\n * @param optionIndex Index of the option to be scrolled into the view.\n * @param optionHeight Height of the options.\n * @param currentScrollPosition Current scroll position of the panel.\n * @param panelHeight Height of the panel.\n * @docs-private\n */\nexport function _getOptionScrollPosition(\n    optionIndex: number,\n    optionHeight: number,\n    currentScrollPosition: number,\n    panelHeight: number\n): number {\n    const optionOffset = optionIndex * optionHeight;\n\n    if (optionOffset < currentScrollPosition) { return optionOffset; }\n\n    if (optionOffset + optionHeight > currentScrollPosition + panelHeight) {\n        return Math.max(0, optionOffset - panelHeight + optionHeight);\n    }\n\n    return currentScrollPosition;\n}\n\n","import { ConnectionPositionPair } from '@ptsecurity/cdk/overlay';\n\n\nexport const POSITION_MAP: { [key: string]: ConnectionPositionPair } = {\n    top         : {\n        originX : 'center',\n        originY : 'top',\n        overlayX: 'center',\n        overlayY: 'bottom'\n    },\n    topCenter   : {\n        originX : 'center',\n        originY : 'top',\n        overlayX: 'center',\n        overlayY: 'bottom',\n        offsetX : undefined,\n        offsetY : undefined\n    },\n    topLeft     : {\n        originX : 'start',\n        originY : 'top',\n        overlayX: 'start',\n        overlayY: 'bottom',\n        offsetX : undefined,\n        offsetY : undefined\n    },\n    topRight    : {\n        originX : 'end',\n        originY : 'top',\n        overlayX: 'end',\n        overlayY: 'bottom',\n        offsetX : undefined,\n        offsetY : undefined\n    },\n    right       : {\n        originX : 'end',\n        originY : 'center',\n        overlayX: 'start',\n        overlayY: 'center'\n    },\n    rightTop    : {\n        originX : 'end',\n        originY : 'top',\n        overlayX: 'start',\n        overlayY: 'top',\n        offsetX : undefined,\n        offsetY : undefined\n    },\n    rightBottom : {\n        originX : 'end',\n        originY : 'bottom',\n        overlayX: 'start',\n        overlayY: 'bottom',\n        offsetX : undefined,\n        offsetY : undefined\n    },\n    bottom      : {\n        originX : 'center',\n        originY : 'bottom',\n        overlayX: 'center',\n        overlayY: 'top'\n    },\n    bottomCenter: {\n        originX : 'center',\n        originY : 'bottom',\n        overlayX: 'center',\n        overlayY: 'top'\n    },\n    bottomLeft  : {\n        originX : 'start',\n        originY : 'bottom',\n        overlayX: 'start',\n        overlayY: 'top'\n    },\n    bottomRight : {\n        originX : 'end',\n        originY : 'bottom',\n        overlayX: 'end',\n        overlayY: 'top'\n    },\n    left        : {\n        originX : 'start',\n        originY : 'center',\n        overlayX: 'end',\n        overlayY: 'center'\n    },\n    leftTop     : {\n        originX : 'start',\n        originY : 'top',\n        overlayX: 'end',\n        overlayY: 'top'\n    },\n    leftBottom  : {\n        originX : 'start',\n        originY : 'bottom',\n        overlayX: 'end',\n        overlayY: 'bottom'\n    }\n};\n\nexport const DEFAULT_4_POSITIONS = _objectValues([\n    POSITION_MAP.top, POSITION_MAP.right, POSITION_MAP.bottom, POSITION_MAP.left\n]);\n\nfunction arrayMap<T, S>(array: T[], iteratee: (item: T, index: number, arr: T[]) => S): S[] {\n    let index = -1;\n    const length = array == null ? 0 : array.length;\n    const result = Array(length);\n\n    while (++index < length) {\n        result[ index ] = iteratee(array[ index ], index, array);\n    }\n\n    return result;\n}\nfunction baseValues<T>(object: { [key: string]: T } | T[], props: string[]): T[] {\n    return arrayMap(props,  (key) => {\n        return object[ key ];\n    });\n}\nfunction _objectValues<T>(object: { [key: string]: T } | T[]): T[] {\n    return object == null ? [] : baseValues(object, Object.keys(object));\n}\n","export function getMcFormFieldMissingControlError(): Error {\n  return Error('mc-form-field must contain a McFormFieldControl.');\n}\n","export function getMcInputUnsupportedTypeError(inputType: string): Error {\n    return Error(`Input type \"${inputType}\" isn't supported by mcInput.`);\n}\n","/**\n * Returns an exception to be thrown when attempting to change a select's `multiple` option\n * after initialization.\n * @docs-private\n */\nexport function getMcSelectDynamicMultipleError(): Error {\n    return Error('Cannot change `multiple` mode of select after initialization.');\n}\n\n/**\n * Returns an exception to be thrown when attempting to assign a non-array value to a select\n * in `multiple` mode. Note that `undefined` and `null` are still valid values to allow for\n * resetting the value.\n * @docs-private\n */\nexport function getMcSelectNonArrayValueError(): Error {\n    return Error('Value must be an array in multiple-selection mode.');\n}\n\n/**\n * Returns an exception to be thrown when assigning a non-function value to the comparator\n * used to determine if a value corresponds to an option. Note that whether the function\n * actually takes two values and returns a boolean is not checked.\n */\nexport function getMcSelectNonFunctionValueError(): Error {\n    return Error('`compareWith` must be a function.');\n}\n","import { NgModule, Directive, ElementRef, QueryList } from '@angular/core';\n\n\n/**\n * Shared directive to count lines inside a text area, such as a list item.\n * Line elements can be extracted with a @ContentChildren(McLine) query, then\n * counted by checking the query list's length.\n */\n@Directive({\n    selector: '[mc-line], [mcLine]',\n    host: { class: 'mc-line' }\n})\nexport class McLine {}\n\n/**\n * Helper that takes a query list of lines and sets the correct class on the host.\n * @docs-private\n */\nexport class McLineSetter {\n    constructor(private _lines: QueryList<McLine>, private _element: ElementRef) {\n        this._setLineClass(this._lines.length);\n\n        this._lines.changes.subscribe(() => {\n            this._setLineClass(this._lines.length);\n        });\n    }\n\n    private _setLineClass(count: number): void {\n        this._resetClasses();\n        if (count === 2 || count === 3) {\n            this._setClass(`mc-${count}-line`, true);\n        } else if (count > 3) {\n            this._setClass(`mc-multi-line`, true);\n        }\n    }\n\n    private _resetClasses(): void {\n        this._setClass('mc-2-line', false);\n        this._setClass('mc-3-line', false);\n        this._setClass('mc-multi-line', false);\n    }\n\n    private _setClass(className: string, isAdd: boolean): void {\n        if (isAdd) {\n            this._element.nativeElement.classList.add(className);\n        } else {\n            this._element.nativeElement.classList.remove(className);\n        }\n    }\n}\n\n@NgModule({\n    imports: [],\n    exports: [McLine],\n    declarations: [McLine]\n})\nexport class McLineModule {}\n","import { Injectable } from '@angular/core';\nimport { FormGroupDirective, NgForm, FormControl } from '@angular/forms';\n\n\n/** Error state matcher that matches when a control is invalid and dirty. */\n@Injectable()\nexport class ShowOnDirtyErrorStateMatcher implements ErrorStateMatcher {\n    isErrorState(control: FormControl | null, form: FormGroupDirective | NgForm | null): boolean {\n        return !!(control && control.invalid && (control.dirty || (form && form.submitted)));\n    }\n}\n\n/** Provider that defines how form controls behave with regards to displaying error messages. */\n@Injectable({ providedIn: 'root' })\nexport class ErrorStateMatcher {\n    isErrorState(control: FormControl | null, form: FormGroupDirective | NgForm | null): boolean {\n        return !!(control && control.invalid && (control.touched || (form && form.submitted)));\n    }\n}\n","import { Component, ViewEncapsulation, Input, ChangeDetectionStrategy } from '@angular/core';\n\n\nexport type McPseudoCheckboxState = 'unchecked' | 'checked' | 'indeterminate';\n\n/**\n * Component that shows a simplified checkbox without including any kind of \"real\" checkbox.\n * Meant to be used when the checkbox is purely decorative and a large number of them will be\n * included, such as for the options in a multi-select. Uses no SVGs or complex animations.\n * Note that theming is meant to be handled by the parent element, e.g.\n * `mc-primary .mc-pseudo-checkbox`.\n *\n * Note that this component will be completely invisible to screen-reader users. This is *not*\n * interchangeable with `<mc-checkbox>` and should *not* be used if the user would directly\n * interact with the checkbox. The pseudo-checkbox should only be used as an implementation detail\n * of more complex components that appropriately handle selected / checked state.\n * @docs-private\n */\n@Component({\n    encapsulation: ViewEncapsulation.None,\n    preserveWhitespaces: false,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    selector: 'mc-pseudo-checkbox',\n    styleUrls: ['pseudo-checkbox.css'],\n    templateUrl: 'pseudo-checkbox.partial.html',\n    host: {\n        class: 'mc-pseudo-checkbox',\n        '[class.mc-pseudo-checkbox_indeterminate]': 'state === \"indeterminate\"',\n        '[class.mc-pseudo-checkbox_checked]': 'state === \"checked\"',\n        '[class.mc-disabled]': 'disabled'\n    }\n})\nexport class McPseudoCheckbox {\n    @Input() state: McPseudoCheckboxState = 'unchecked';\n\n    @Input() disabled: boolean = false;\n}\n","import { NgModule } from '@angular/core';\n\nimport { McPseudoCheckbox } from './pseudo-checkbox/pseudo-checkbox';\n\n\n@NgModule({\n    exports: [McPseudoCheckbox],\n    declarations: [McPseudoCheckbox]\n})\nexport class McPseudoCheckboxModule {}\n\n\nexport * from './pseudo-checkbox/pseudo-checkbox';\n","import { DOCUMENT } from '@angular/common';\nimport { Inject, Injectable } from '@angular/core';\n\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class McMeasureScrollbarService {\n\n    get scrollBarWidth(): number {\n        if (this._scrollbarWidth) {\n            return this._scrollbarWidth;\n        }\n        this.initScrollBarWidth();\n\n        return this._scrollbarWidth;\n    }\n\n    private _scrollbarWidth: number;\n    private scrollbarMeasure = {\n        position: 'absolute',\n        top: '-9999px',\n        width: '50px',\n        height: '50px',\n        overflow: 'scroll'\n    };\n\n    constructor(\n        @Inject(DOCUMENT) private document: any\n    ) {\n        this.initScrollBarWidth();\n    }\n\n    initScrollBarWidth() {\n        const scrollDiv = this.document.createElement('div');\n\n        // tslint:disable-next-line\n        for (const scrollProp in this.scrollbarMeasure) {\n            if (this.scrollbarMeasure.hasOwnProperty(scrollProp)) {\n                scrollDiv.style[scrollProp] = this.scrollbarMeasure[scrollProp];\n            }\n        }\n\n        this.document.body.appendChild(scrollDiv);\n\n        const width = scrollDiv.offsetWidth - scrollDiv.clientWidth;\n\n        this.document.body.removeChild(scrollDiv);\n        this._scrollbarWidth = width;\n    }\n}\n","import { Component, ViewEncapsulation, Input, ChangeDetectionStrategy } from '@angular/core';\n\nimport { mixinDisabled, CanDisable, CanDisableCtor } from '../common-behaviors/index';\n\n\n// Boilerplate for applying mixins to McOptgroup.\n/** @docs-private */\nexport class McOptgroupBase {}\n\nexport const _McOptgroupMixinBase: CanDisableCtor & typeof McOptgroupBase = mixinDisabled(McOptgroupBase);\n\n// Counter for unique group ids.\nlet _uniqueOptgroupIdCounter = 0;\n\n/**\n * Component that is used to group instances of `mc-option`.\n */\n@Component({\n    selector: 'mc-optgroup',\n    exportAs: 'mcOptgroup',\n    templateUrl: 'optgroup.html',\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    inputs: ['disabled'],\n    styleUrls: ['optgroup.css'],\n    host: {\n        class: 'mc-optgroup',\n        role: 'group',\n        '[class.mc-optgroup-disabled]': 'disabled',\n        '[attr.aria-disabled]': 'disabled.toString()',\n        '[attr.aria-labelledby]': '_labelId'\n    }\n})\nexport class McOptgroup extends _McOptgroupMixinBase implements CanDisable {\n    /** Label for the option group. */\n    @Input() label: string;\n\n    /** Unique id for the underlying label. */\n    _labelId: string = `mc-optgroup-label-${_uniqueOptgroupIdCounter++}`;\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { McPseudoCheckboxModule } from '../selection/index';\n\nimport { McOptgroup } from './optgroup';\nimport { McOption } from './option';\n\n\n@NgModule({\n    imports: [CommonModule, McPseudoCheckboxModule],\n    exports: [McOption, McOptgroup],\n    declarations: [McOption, McOptgroup]\n})\nexport class McOptionModule {}\n\n\nexport * from './option';\nexport * from './optgroup';\n","import { InjectionToken } from '@angular/core';\n\n\n/** InjectionToken that can be used to specify the global label options. */\nexport const MC_LABEL_GLOBAL_OPTIONS =\n    new InjectionToken<LabelOptions>('mc-label-global-options');\n\n/** Type for the available floatLabel values. */\nexport type FloatLabelType = 'always' | 'never' | 'auto';\n\n/** Configurable options for floating labels. */\nexport interface LabelOptions {\n    /**\n     * Whether the label should float `always`, `never`, or `auto` (only when necessary).\n     * Default behavior is assumed to be `auto`.\n     */\n    float?: FloatLabelType;\n}\n","import {\n    animate,\n    state,\n    style,\n    transition,\n    trigger,\n    AnimationTriggerMetadata,\n} from '@angular/animations';\n\n\nexport const fadeAnimation: AnimationTriggerMetadata =  trigger('fadeAnimation', [\n    state('void', style({ opacity: 0 })),\n    state('true', style({ opacity: 1 })),\n    state('false', style({ opacity: 0 })),\n    transition('* => true', animate('150ms cubic-bezier(0.0, 0.0, 0.2, 1)')),\n    transition('* => void', animate('150ms cubic-bezier(0.4, 0.0, 1, 1)')),\n]);\n","import {\n    Attribute,\n    ChangeDetectionStrategy,\n    Component,\n    Directive,\n    ElementRef,\n    ViewEncapsulation\n} from '@angular/core';\n\nimport { mixinColor, CanColor, CanColorCtor, ThemePalette } from '@ptsecurity/mosaic/core';\n\n\n@Directive({\n    selector: '[mc-icon]',\n    host: { class: 'mc mc-icon' }\n})\nexport class McIconCSSStyler {}\n\n\nexport class McIconBase {\n    constructor(public _elementRef: ElementRef) {}\n}\n\nexport const _McIconMixinBase: CanColorCtor & typeof McIconBase = mixinColor(McIconBase, ThemePalette.Empty);\n\n\n@Component({\n    selector: `[mc-icon]`,\n    template: '<ng-content></ng-content>',\n    styleUrls: ['./icon.css'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n    inputs: ['color']\n})\nexport class McIcon extends _McIconMixinBase implements CanColor {\n    constructor(elementRef: ElementRef, @Attribute('mc-icon') iconName: string) {\n        super(elementRef);\n\n        elementRef.nativeElement.classList.add(iconName);\n    }\n\n    _getHostElement() {\n        return this._elementRef.nativeElement;\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { A11yModule } from '@ptsecurity/cdk/a11y';\nimport { PlatformModule } from '@ptsecurity/cdk/platform';\n\nimport {\n    McIcon,\n    McIconCSSStyler\n} from './icon.component';\n\n\n@NgModule({\n    imports: [\n        CommonModule,\n        A11yModule,\n        PlatformModule\n    ],\n    exports: [\n        McIcon,\n        McIconCSSStyler\n    ],\n    declarations: [\n        McIcon,\n        McIconCSSStyler\n    ]\n})\nexport class McIconModule {}\n","import {\n    ChangeDetectionStrategy,\n    Component,\n    Directive,\n    ElementRef,\n    OnDestroy,\n    QueryList,\n    ViewEncapsulation,\n    ContentChildren\n} from '@angular/core';\n\nimport { FocusMonitor } from '@ptsecurity/cdk/a11y';\n\nimport { mixinColor, mixinDisabled, CanColor, CanDisable, CanDisableCtor, CanColorCtor } from '@ptsecurity/mosaic/core';\nimport { McIcon } from '@ptsecurity/mosaic/icon';\n\n\n@Directive({\n    selector: 'button[mc-button], a[mc-button]',\n    host: { class: 'mc-button' }\n})\nexport class McButtonCSSStyler {}\n\n\n@Directive({\n    selector: 'button[mc-icon-button], a[mc-icon-button]',\n    queries: {\n        contentChildren: new ContentChildren(McIcon)\n    },\n    host: { class: 'mc-icon-button' }\n})\nexport class McIconButtonCSSStyler {\n    nativeElement: Element;\n\n    contentChildren: QueryList<McIcon>;\n\n    constructor(elementRef: ElementRef) {\n        this.nativeElement = elementRef.nativeElement;\n    }\n\n    ngAfterContentInit() {\n        this._addClassModificatorForIcons();\n    }\n\n    _addClassModificatorForIcons() {\n        const twoIcons = 2;\n        const icons = this.contentChildren.map((item) => item._elementRef.nativeElement);\n\n        if (icons.length === 1) {\n            const iconElement = icons[0];\n\n            if (!iconElement.previousElementSibling && !iconElement.nextElementSibling) {\n                if (iconElement.nextSibling) {\n                    iconElement.classList.add('mc-icon_left');\n                    this.nativeElement.classList.add('mc-icon-button_left');\n                }\n\n                if (iconElement.previousSibling) {\n                    iconElement.classList.add('mc-icon_right');\n                    this.nativeElement.classList.add('mc-icon-button_right');\n                }\n            }\n        } else if (icons.length === twoIcons) {\n            const firstIconElement = icons[0];\n            const secondIconElement = icons[1];\n\n            firstIconElement.classList.add('mc-icon_left');\n            secondIconElement.classList.add('mc-icon_right');\n        }\n    }\n}\n\n\nexport class McButtonBase {\n    constructor(public _elementRef: ElementRef) {}\n}\n\nexport const _McButtonMixinBase:\n    CanDisableCtor &\n    CanColorCtor &\n    typeof McButtonBase =\n        mixinColor(mixinDisabled(McButtonBase));\n\n\n@Component({\n    selector: `\n        button[mc-button],\n        button[mc-xs-button],\n        button[mc-sm-button],\n        button[mc-lg-button],\n        button[mc-xl-button]\n    `,\n    templateUrl: './button.component.html',\n    styleUrls: ['./button.css'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n    inputs: ['disabled', 'color'],\n    host: {\n        '[disabled]': 'disabled || null'\n    }\n})\nexport class McButton extends _McButtonMixinBase implements OnDestroy, CanDisable, CanColor {\n    constructor(elementRef: ElementRef, private _focusMonitor: FocusMonitor) {\n        super(elementRef);\n\n        this._focusMonitor.monitor(this._elementRef.nativeElement, true);\n    }\n\n    ngOnDestroy() {\n        this._focusMonitor.stopMonitoring(this._elementRef.nativeElement);\n    }\n\n    focus(): void {\n        this._getHostElement().focus();\n    }\n\n    _getHostElement() {\n        return this._elementRef.nativeElement;\n    }\n}\n\n\n@Component({\n    selector: 'a[mc-button], a[mc-xs-button], a[mc-sm-button], a[mc-lg-button], a[mc-xl-button]',\n    templateUrl: './button.component.html',\n    styleUrls: ['./button.css'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n    inputs: ['disabled', 'color'],\n    host: {\n        '[attr.tabindex]': 'disabled ? -1 : 0',\n        '[attr.disabled]': 'disabled || null',\n        '(click)': '_haltDisabledEvents($event)'\n    }\n})\nexport class McAnchor extends McButton {\n    constructor(focusMonitor: FocusMonitor, elementRef: ElementRef) {\n        super(elementRef, focusMonitor);\n    }\n\n    _haltDisabledEvents(event: Event) {\n        if (this.disabled) {\n            event.preventDefault();\n            event.stopImmediatePropagation();\n        }\n    }\n}\n\n\n@Component({\n    selector: 'button[mc-icon-button]',\n    templateUrl: './button.component.html',\n    styleUrls: ['./button.css'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n    inputs: ['disabled', 'color'],\n    host: {\n        '[attr.tabindex]': 'disabled ? -1 : 0',\n        '[attr.disabled]': 'disabled || null'\n    }\n})\nexport class McIconButton extends McButton {\n    constructor(focusMonitor: FocusMonitor, elementRef: ElementRef) {\n        super(elementRef, focusMonitor);\n    }\n\n    _haltDisabledEvents(event: Event) {\n        if (this.disabled) {\n            event.preventDefault();\n            event.stopImmediatePropagation();\n        }\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { A11yModule } from '@ptsecurity/cdk/a11y';\nimport { PlatformModule } from '@ptsecurity/cdk/platform';\n\nimport {\n    McButton,\n    McAnchor,\n    McIconButton,\n    McButtonCSSStyler,\n    McIconButtonCSSStyler\n} from './button.component';\n\n\n@NgModule({\n    imports: [\n        CommonModule,\n        A11yModule,\n        PlatformModule\n    ],\n    exports: [\n        McButton,\n        McAnchor,\n        McIconButton,\n        McButtonCSSStyler,\n        McIconButtonCSSStyler\n    ],\n    declarations: [\n        McButton,\n        McAnchor,\n        McIconButton,\n        McButtonCSSStyler,\n        McIconButtonCSSStyler\n    ]\n})\nexport class McButtonModule {}\n"],"names":["get","this","_disabled","set","disabled","coerceBooleanProperty","Object","defineProperty","McGutterDirective","prototype","_order","order","coerceNumberProperty","_size","size","ngOnInit","setStyle","getCursor","getState","coerceCssPixelValue","isVertical","setAttr","direction","state","Error","property","value","renderer","elementRef","nativeElement","attribute","setAttribute","tslib_1.__decorate","Input","Directive","selector","tslib_1.__metadata","Renderer2","ElementRef","McSplitterAreaDirective","splitter","disableFlex","removeStyle","addArea","ngOnDestroy","removeArea","setOrder","setSize","sz","getSizeProperty","getSize","getOffsetSizeProperty","getMinSize","styles","getComputedStyle","parseFloat","getMinSizeProperty","style","McSplitterComponent","McSplitterModule","NgModule","imports","CommonModule","McIconModule","exports","declarations","nextUniqueId","McToggleBase","_elementRef","_McToggleMixinBase","mixinTabIndex","mixinColor","mixinDisabled","McToggleChange","McToggleComponent","_super","_focusMonitor","_changeDetectorRef","tabIndex","_this","call","color","ThemePalette","Primary","labelPosition","ariaLabel","ariaLabelledby","_uniqueId","id","name","_checked","change","EventEmitter","_onTouchedCallback","_onChangeCallback","_","parseInt","monitor","tslib_1.__extends","McToggleComponent_1","markForCheck","stopMonitoring","focus","focusVia","_inputElement","_getAriaChecked","checked","_onInteractionEvent","event","stopPropagation","_onLabelTextChange","_onInputClick","_updateModelValue","_emitChangeEvent","writeValue","registerOnChange","fn","registerOnTouched","setDisabledState","isDisabled","source","emit","ViewChild","Output","Component","exportAs","template","providers","provide","NG_VALUE_ACCESSOR","useExisting","forwardRef","multi","changeDetection","ChangeDetectionStrategy","OnPush","encapsulation","ViewEncapsulation","None","inputs","host","[id]","[attr.id]","[class.mc-disabled]","[class.mc-toggle-off]","animations","trigger","left","transition","animate","tslib_1.__param","Attribute","FocusMonitor","ChangeDetectorRef","String","McToggleModule","BrowserAnimationsModule","A11yModule","McCommonModule","McToolTipComponent","cdr","_prefix","_positions","DEFAULT_4_POSITIONS","slice","_classMap","_placement","_trigger","visibleSource","BehaviorSubject","$visible","asObservable","mcVisibleChange","mcMouseEnterDelay","mcMouseLeaveDelay","_onHide","Subject","_closeOnInteraction","availablePositions","POSITION_MAP","_title","isTitleString","TemplateRef","visible","next","unshift","mcPlacement","show","hideTId","clearTimeout","isContentEmpty","showTId","setTimeout","mcVisible","_markForCheck","hide","setClassMap","_a","mcTitle","afterHidden","_handleBodyInteraction","fadeAnimation","preserveWhitespaces","(body:click)","MC_TOOLTIP_SCROLL_STRATEGY","InjectionToken","MC_TOOLTIP_SCROLL_STRATEGY_FACTORY_PROVIDER","deps","Overlay","useFactory","MC_TOOLTIP_SCROLL_STRATEGY_FACTORY","McTooltipDirective","_overlay","_ngZone","_scrollDispatcher","hostView","_scrollStrategy","_dir","isTooltipOpen","isDynamicTooltip","parentDisabled","$unsubscribe","manualListeners","Map","_destroyed","title","updateCompValue","_mouseEnterDelay","_mouseLeaveDelay","_visible","_createOverlay","_overlayRef","strategy","position","flexibleConnectedTo","withTransformOriginOn","withFlexibleDimensions","withViewportMargin","withPositions","scrollableAncestors","getAncestorScrollContainers","withScrollableContainers","positionChanges","pipe","takeUntil","subscribe","tooltip","onPositionChange","scrollableViewProperties","isOverlayClipped","run","create","positionStrategy","panelClass","scrollStrategy","_updatePosition","detachments","_detach","hasAttached","detach","$event","updatedPlacement","keys","some","key","connectionPair","originX","originY","overlayX","overlayY","handlePositioningUpdate","pos","overlayElement","clientHeight","element","currentContainer","top","split","mcTrigger","forEach","listener","addEventListener","dispose","removeEventListener","clear","complete","handleKeydown","e","keyCode","ESCAPE","handleTouchend","getConfig","origin","_getOrigin","overlay","_getOverlayPosition","tslib_1.__assign","main","fallback","originPosition","isLtr","getMcTooltipInvalidPositionError","_invertPosition","x","y","overlayPosition","newX","newY","overlayRef","_portal","ComponentPortal","attach","instance","distinctUntilChanged","data","HostBinding","(keydown)","(touchend)","Inject","Optional","NgZone","ScrollDispatcher","ViewContainerRef","Directionality","McToolTipModule","OverlayModule","entryComponents","VERSION","Version","SELECT_PANEL_PADDING_X","nextDividerPos","timeString","indexOf","timeDevider","cursorPos","undefined","McTimepicker","getTimeEditMetrics","cursorPosition","modifiedTimePart","cursorStartPosition","cursorEndPosition","minutesIndex","hoursIndex","secondsIndex","TimeParts","seconds","length","minutes","hours","getTimeStringFromDate","tempVal","timeFormat","DEFAULT_TIME_FORMAT","getNumberWithLeadingZero","getHours","getMinutes","getSeconds","TimeFormats","HHmm","HHmmss","getParsedTimeParts","hoursAndMinutesAndSeconds","match","HOURS_MINUTES_SECONDS_REGEXP","hoursAndMinutes","HOURS_MINUTES_REGEXP","hoursOnly","HOURS_ONLY_REGEXP","getDateFromTimeDigits","getDateFromTimeString","trim","Number","resultDate","Date","isNaN","getTime","digit","getTimeDigitsFromDate","dateVal","parseValidator","currentDateTimeInput","mcTimepickerParse","text","minTimeValidator","minDateTime","isTimeLowerThenMin","mcTimepickerLowerThenMintime","maxTimeValidator","maxDateTime","isTimeGreaterThenMax","mcTimepickerHigherThenMaxtime","timeToCompare","ErrorStateMatcher","McTimepicker_1","class","[attr.placeholder]","[disabled]","[required]","[attr.time-format]","[attr.min-time]","[attr.max-time]","[attr.value]","(blur)","(focus)","(input)","(paste)","NG_VALIDATORS","useValue","ɵ1","McFormFieldControl","Self","MC_INPUT_VALUE_ACCESSOR","NgControl","NgForm","FormGroupDirective","McTimepickerMixinBase","McTimepickerModule","PlatformModule","FormsModule","mcSelectAnimations","transformPanel","transform","minWidth","opacity","group","query","animateChild","fadeInContent","MC_SELECT_SCROLL_STRATEGY","MC_SELECT_SCROLL_STRATEGY_PROVIDER","MC_SELECT_SCROLL_STRATEGY_PROVIDER_FACTORY","McSelectChange","McSelectBase","_defaultErrorStateMatcher","_parentForm","_parentFormGroup","ngControl","_McSelectMixinBase","mixinErrorState","McSelectTrigger","McSelect","_viewportRuler","_renderer","_parentFormField","_scrollStrategyFactory","_triggerFontSize","_optionIds","_transformOrigin","_panelDoneAnimating","_panelDoneAnimatingStream","_offsetY","controlType","optionSelectionChanges","defer","options","merge","apply","map","option","onSelectionChange","onStable","take","switchMap","openedChange","_openedStream","filter","o","_closedStream","selectionChange","valueChange","hiddenItems","_panelOpen","_required","_scrollTop","_multiple","_uid","_destroy","_focused","_onChange","_onTouched","_compareWith","o1","o2","valueAccessor","McSelect_1","_placeholder","stateChanges","_selectionModel","getMcSelectDynamicMultipleError","getMcSelectNonFunctionValueError","_initializeSelection","_value","newValue","_id","SelectionModel","multiple","panelOpen","overlayDir","offsetX","ngAfterContentInit","_initKeyManager","onChange","added","select","removed","deselect","changes","startWith","_resetOptions","ngAfterViewInit","tags","_calculateHiddenItems","ngDoCheck","updateErrorState","ngOnChanges","toggle","close","open","_triggerRect","getBoundingClientRect","_keyManager","withHorizontalOrientation","_calculateOverlayPosition","_highlightCorrectOption","fontSize","_isRtl","_setSelectionByValue","selected","empty","selectedOptions","viewValue","reverse","join","isEmpty","_handleKeydown","_handleOpenKeydown","_handleClosedKeydown","_onFadeInDone","_onFocus","_onBlur","_onAttached","positionChange","detectChanges","_calculateOverlayOffsetX","panel","scrollTop","_getPanelTheme","_calculateOverlayScroll","selectedIndex","scrollBuffer","maxScroll","itemHeight","_getItemHeight","optionOffsetFromScrollTop","halfOptionHeight","optimalScrollPosition","Math","min","max","onContainerClick","onRemoveMatcherItem","visibleItems","totalItemsWidth","_getTotalItemsWidthInMatcher","totalVisibleItemsWidth","tag","offsetTop","offsetHeight","width","itemsCounter","querySelector","matcherList","itemsCounterShowed","matcherListWidth","matcherWidth","triggerClone","cloneNode","remove","appendChild","querySelectorAll","item","isArrowKey","DOWN_ARROW","UP_ARROW","LEFT_ARROW","RIGHT_ARROW","ENTER","SPACE","altKey","preventDefault","onKeydown","manager","HOME","END","setFirstItemActive","setLastItemActive","activeItem","A","ctrlKey","hasDeselectedOptions_1","previouslyFocusedIndex","activeItemIndex","shiftKey","_selectViaInteraction","Promise","resolve","then","Array","isArray","getMcSelectNonArrayValueError","currentValue","_selectValue","_sortValues","correspondingOption","setActiveItem","find","error","isDevMode","console","warn","ActiveDescendantKeyManager","withTypeAhead","withVerticalOrientation","tabOut","_scrollActiveOptionIntoView","changedOrDestroyed","_onSelect","isUserInput","_stateChanges","_setOptionIds","wasSelected","isSelected","_propagateChanges","options_1","toArray","sort","a","b","sortComparator","fallbackValue","valueToEmit","activeOptionIndex","labelCount","_countGroupLabelsBeforeOption","optionGroups","_getOptionScrollPosition","_getOptionIndex","reduce","result","current","index","items","_getItemCount","panelHeight","scrollContainerHeight","selectedOptionOffset","_calculateOverlayOffsetY","_checkOverlayWithinViewport","overlayRect","viewportSize","getViewportSize","isRtl","first","leftOverflow","rightOverflow","right","round","updatePosition","topSpaceAvailable","bottomSpaceAvailable","height","bottom","panelHeightTop","abs","totalPanelHeight","panelHeightBottom","_adjustPanelUp","_adjustPanelDown","_getOriginBasedOnOption","distanceBelowViewport","distanceAboveViewport","optionHeightAdjustment","ViewChildren","McTag","QueryList","CdkConnectedOverlay","ContentChildren","McOption","descendants","McOptgroup","ContentChild","Observable","[attr.tabindex]","[class.mc-select-invalid]","[class.mc-select-required]","(window:resize)","MC_OPTION_PARENT_COMPONENT","ViewportRuler","McFormField","McSelectModule","McOptionModule","McTagModule","McFormFieldModule","ngZone","areas","_gutterSize","isDragging","areaPositionDivider","listeners","_direction","gutterSize","area","push","initialSize","onMouseDown","leftAreaIndex","rightAreaIndex","leftArea","rightArea","startPoint","screenX","screenY","runOutsideAngular","listen","onMouseUp","onMouseMove","indexToRemove","splice","endPoint","offset","newLeftAreaSize","newRightAreaSize","minLeftAreaSize","minRightAreaSize","rightAreaOffset","unsubscribe","pop","McProgressSpinner","_McProgressSpinnerMixinBase","McProgressSpinnerModule","McRadioChange","McRadioGroupBase","_McRadioGroupMixinBase","MC_RADIO_GROUP_CONTROL_VALUE_ACCESSOR","McRadioGroup","_changeDetector","_name","_selected","_isInitialized","_labelPosition","controlValueAccessorChangeFn","onTouched","updateRadioButtonNames","v","markRadiosForCheck","updateSelectedRadioFromValue","checkSelectedRadioButton","toBoolean","touch","emitChangeEvent","_radios","radio","isAlreadySelected","McRadioButton","role","McRadioButtonBase","_McRadioButtonMixinBase","radioGroup","_radioDispatcher","isFocused","removeUniqueSelectionListener","newCheckedState","notify","newDisabledState","required","onInputClick","onInputChange","groupValueChanged","[class.mc-radio-checked]","[class.mc-radio-disabled]","UniqueSelectionDispatcher","McRadioModule","McTreeNodeDef","McTreeNodeDef_1","CdkTreeNodeDef","McTreeNodePadding","arguments","_baseLeftPadding","_iconWidth","_indent","McTreeNodePadding_1","_withIcon","_paddingIndent","nodeLevel","_treeNode","_tree","treeControl","getLevel","level","_level","leftPadding","isExpandable","_setPadding","CdkTreeNodePadding","McTreeNodeOption","treeSelection","_hasFocus","McTreeNodeOption_1","setSelected","setFocusedOption","_getHeight","getClientRects","_handleFocus","_handleBlur","_handleClick","tabindex","[class.mc-selected]","[class.mc-focused]","[attr.aria-expanded]","[attr.aria-level]","(click)","CdkTreeNode","McTreeSelection","_McTreeSelectionBase","CdkTree","McTreeNavigationChange","McTreeSelectionChange","_differs","autoSelect","noUnselect","navigationChange","McTreeSelection_1","rawValue","log","_onKeyDown","withShift","withCtrl","collapse","expand","toggleFocusedOption","PAGE_UP","setPreviousPageItemActive","PAGE_DOWN","setNextPageItemActive","FocusKeyManager","updateScrollSize","withScrollSize","floor","updateActiveItem","previousIndex_1","previousActiveItemIndex","activeIndex_1","_canDeselectLast","_emitNavigationEvent","focusedIndex","_isValidIndex","focusedOption","renderNodeChanges","dataDiffer","viewContainer","parentData","_dataDiffer","_nodeOutlet","arrayOfInstances","_embeddedViews","view","viewDef","def","nodes","node","nodeMatchedQueries","matchedQueryIds","nodeData","nodeIndex","reset","notifyOnChanges","CdkTreeNodeOutlet","[tabIndex]","IterableDiffers","MC_TREE_DIRECTIVES","McTreeModule","CdkTreeModule","McTreeFlattener","transformFunction","getChildren","_flattenNode","resultNodes","parentMap","flatNode","children","child","childParentMap","flattenNodes","structuredData","expandFlattenedNodes","results","currentExpand","i","isExpanded","McTreeFlatDataSource","treeFlattener","initialData","_flattenedData","_expandedData","_data","dataNodes","connect","collectionViewer","viewChange","expansionModel","disconnect","DataSource","McTreeNestedDataSource","McTagBase","_McTagMixinBase","_addClassModificatorForIcons","icons","contentChildren","iconElement","previousElementSibling","nextElementSibling","nextSibling","classList","add","previousSibling","firstIconElement","secondIconElement","McIcon","TIMEFORMAT_PLACEHOLDERS","RegExp","uniqueComponentIdSuffix","validatorOnChange","noop","validator","McTimepickerBase","validate","c","registerOnValidatorChange","inputValueAccessor","focused","uid","_minTime","_maxTime","previousNativeValue","placeholder","Validators","compose","applyInputChanges","_timeFormat","formatValue","timeFormatKey","minValue","maxValue","dirtyCheckNativeValue","focusChanged","onBlur","onPaste","clipboardUserInput","clipboardData","getData","onInput","initialCursorStart","selectionStart","initialCursorEnd","selectionEnd","isAutocompleteTriggered","doTimestringReformat","errors","createSelectionOfTimeComponentInInput","isBadInput","setProperty","onKeyDown","getKeyCode","upDownTimeByArrowKeys","switchSelectionBetweenTimeparts","validity","badInput","applyParams","changedTime","timeToApply","control","updateValueAndValidity","incrementTime","decrementTime","getCursorPositionOfPrevTimePartStart","getCursorPositionOfNextTimePartStart","code","newEditParams","whatToIncrement","whatToDecrement","contentComponentRef","McModalComponent","getContentComponent","getElement","onClickMask","mcMask","mcMaskClosable","target","contains","onClickOkCancel","isModalType","type","mcModalType","container","OverlayRef","onClickCloseBtn","ok","mcOnOk","cancel","mcOnCancel","loadingKey","caseClose_1","doClose","isPromise","handleThen","catch","isNonEmptyString","isTemplateRef","isComponent","Type","isModalButtons","handleVisibleStateChange","animation","closeResult","changeBodyOverflow","animateTo","mcAfterOpen","mcAfterClose","getButtonCallableProp","prop","args","onButtonClick","button","loading","changeVisibleFromInside","changeAnimationState","animationState","maskAnimationClassMap","modalAnimationClassMap","_b","changeDetectorRef","changeDetector","isVisible","window","updateTransformOrigin","formatModalButtons","buttons","autoLoading","createDynamicComponent","component","factory","cfr","resolveComponentFactory","childInjector","Injector","McModalRef","parent","parentInjector","mcComponentParams","assign","modalElement","modalContainer","lastPosition","ModalUtil","getLastClickPosition","transformOrigin","offsetLeft","plusNum","modalControl","openModals","document","body","mcMeasureScrollbarService","scrollBarWidth","read","DOCUMENT","ComponentFactoryResolver","McMeasureScrollbarService","McModalControlService","CssUnitPipe","defaultUnit","formatted","Pipe","ModalBuilderForService","createModal","mcGetContainer","changeProps","modalRef","destroyModal","keydownEvents","mcCloseByESC","getInstance","McModalService","afterAllClose","closeAll","mcWidth","confirm","confirmType","mcClassName","success","simpleConfirm","delete","mcCancelText","Injectable","McModalModule","McButtonModule","MC_NAVBAR_CONTAINER","MC_NAVBAR_ITEM","MC_NAVBAR_BRAND","MC_NAVBAR_TITLE","McNavbarLogo","McNavbarBrand","McNavbarTitle","McNavbarItemBase","_McNavbarMixinBase","McNavbarItem","_platform","_cdRef","dropdownItems","isCollapsed","_subscription","Subscription","encodeURI","dropdownContent","denyClickIfDisabled","_focusMonitor$","hasDropdownContent","listenClickOutside","startListenFocusDropdownItems","stopListenFocusDropdownItems","isActiveDropdownLink","link","isBrowser","location","href","handleClickByItem","toggleDropdown","isNavbarItem","handleClickByDropdownItem","forceCloseDropdown","_dropdownElements","el","events","eventListeners","hasAttribute","stopImmediatePropagation","[attr.disabled]","Platform","McNavbarContainer","CollapsibleItem","_collapsed","processCollapsed","collapsed","updateCollapsedClass","CachedItemWidth","itemsForCollapse","_collapsedItemsWidth","calculateAndCacheCollapsedItemsWidth","updateTitle","acc","getTitle","computedTitle","getAttribute","decodeURI","innerText","removeAttribute","McNavbar","forceRecalculateItemsWidth","resizeDebounceInterval","firstLevelElement","secondLevelElements","resizeObserver","fromEvent","debounceTime","_resizeSubscription","updateCollapsed","bind","_itemsWidths","calculateAndCacheItemsWidth","_totalItemsWidths","calculateAndCacheTotalItemsWidth","collapseDelta","maxAllowedWidth","itemsWidths","canCollapse","collapsedItemsWidth","getOuterElementWidth","getPropertyValue","allItemsSelector","allItems","from","getItemsForCollapse","McNavbarModule","idIterator","McProgressBarBase","_McProgressBarMixinBase","McProgressBar","mode","McProgressBarModule","McProgressSpinnerBase","percentage","[class.mc-layout]","[class.mc-layout-has-sidebar]","McLayoutComponent","McSidebarComponent","mcLayoutComponent","_mcWidth","mcCollapsedWidth","mcCollapsedChange","collapsible","mcCollapsed","hasSidebar","[class.mc-layout-sidebar]","[class.mc-layout-sidebar-collapsed]","[style.flex]","[style.max-width.px]","[style.min-width.px]","[style.width.px]","Host","McLayoutModule","McContentComponent","McFooterComponent","McHeaderComponent","McListOption","_element","listSelection","checkboxPosition","_reportValueChange","wasSelected_1","_lineSetter","McLineSetter","_lines","_removeOptionFromList","getLabel","_text","textContent","_getHostElement","McLine","McListSelection","MC_SELECTION_LIST_VALUE_ACCESSOR","McListSelectionChange","McListSelectionBase","_McListSelectionMixinBase","horizontal","_modelChanges","EMPTY","_tempValues","_setOptionsFromValues","_i","_c","selectAll","deselectAll","values","getSelectedOptionValues","listOption","optionIndex","setPreviousItemActive","setNextItemActive","_getOptionByValue","Boolean","McListBase","McList","McListSubheaderCssStyler","McListItemBase","McListItem","McListModule","McLineModule","McLinkBase","_McLinkBase","McLink","McLinkModule","parentService","rootOpenModals","rootAfterAllClose","rootRegisteredMetaMap","registeredMetaMap","registerModal","hasRegistered","afterOpenSubscription","afterOpen","afterCloseSubscription","afterClose","removeOpenModal","has","SkipSelf","listenDocumentClick","clientX","clientY","ModalUtil$1","_mcVisible","mcZIndex","_mcClosable","_mcMask","_mcMaskClosable","mcOkType","_mcOkLoading","_mcCancelLoading","mcOkText","mcContent","mcFooter","HTMLElement","firstChange","bodyContainer","insert","autoFocusButtonOk","destroy","triggerOk","triggerCancel","getContentComponentRef","McCard","hostElement","onClick","readonly","selectedChange","[class.mc-card_readonly]","[class.mc-card_selected]","McCardModule","MC_CHECKBOX_CLICK_ACTION","MC_CHECKBOX_CONTROL_VALUE_ACCESSOR","McCheckbox","TransitionCheckState","McCheckboxChange","McCheckboxBase","_McCheckboxMixinBase","_clickAction","indeterminateChange","_currentAnimationClass","_currentCheckState","Init","_controlValueAccessorChangeFn","_indeterminate","focusOrigin","_onInputFocusChange","changed","_transitionCheckState","Indeterminate","Checked","Unchecked","indeterminate","newState","oldState","[class.mc-checkbox-indeterminate]","[class.mc-checkbox-checked]","[class.mc-checkbox-disabled]","[class.mc-checkbox-label-before]","MC_CHECKBOX_REQUIRED_VALIDATOR","McCheckboxRequiredValidator","[attr.required]","CheckboxRequiredValidator","McCheckboxModule","McDivider","_vertical","_inset","[attr.aria-orientation]","[class.mc-divider-vertical]","[class.mc-divider-inset]","McDividerModule","McCleaner","McFormFieldNumberControl","McHint","McPrefix","McStepper","stepUp","stepDown","onStepUp","onStepDown","McSuffix","McFormFieldBase","_McFormFieldMixinBase","_labelId","hovered","_validateControlChild","_control","_numberControl","hasStepper","_stepper","valueChanges","ngAfterContentChecked","clearValue","hasCleaner","onHoverChanged","isHovered","step","_shouldForward","getMcFormFieldMissingControlError","_hint","_suffix","_cleaner","[class.mc-form-field_invalid]","[class.mc-form-field_has-prefix]","[class.mc-form-field_has-suffix]","[class.mc-form-field_has-cleaner]","[class.mc-form-field_has-stepper]","[class.ng-untouched]","[class.ng-touched]","[class.ng-pristine]","[class.ng-dirty]","[class.ng-valid]","[class.ng-invalid]","[class.ng-pending]","(mouseenter)","(mouseleave)","McFormFieldWithoutBorders","res","MC_INPUT_INVALID_TYPES","BIG_STEP","SMALL_STEP","McInputBase","_McInputMixinBase","McNumberInput","_model","bigStep","isDigit","Infinity","_host","self","getPrototypeOf","normalizeSplitter","McNumberInput_1","_focusChanged","minuses","NUMPAD_MINUS","DASH","FF_MINUS","serviceKeys","DELETE","BACKSPACE","TAB","arrows","allowedKeys","concat","isIEPeriod","isNotIEPeriod","metaKey","C","V","X","F1","F12","EDGE","TRIDENT","ZERO","NINE","NUMPAD_ZERO","NUMPAD_NINE","valueAsNumber","toString","update","replace","isFloat","isInt","test","NgModel","McInput","_type","_neverEmptyInputTypes","t","getSupportedInputTypes","_inputValueAccessor","_previousNativeValue","McInput_1","_validateType","_dirtyCheckNativeValue","_onInput","_isNeverEmpty","_isBadInput","getMcInputUnsupportedTypeError","McInputMono","MIN_VALIDATOR","MinValidator","_createValidator","_validator","[attr.min]","MAX_VALIDATOR","MaxValidator","[attr.max]","McInputModule","[class.mc-layout-content]","[class.mc-layout-footer]","[class.mc-layout-header]","__extends","d","__","constructor","extendStatics","__decorate","decorators","desc","r","getOwnPropertyDescriptor","Reflect","decorate","__param","paramIndex","decorator","__metadata","metadataKey","metadataValue","metadata","isBoolean","val","MC_SANITY_CHECKS_FACTORY","base","class_1","defaultColor","Default","_color","colorPalette","defaultTabIndex","_tabIndex","errorState","matcher","errorStateMatcher","isErrorState","optionsArray","groups","groupCounter","optionHeight","currentScrollPosition","optionOffset","arrayMap","array","iteratee","baseValues","object","props","inputType","sanitizeNumber","isFinite","getPrecision","arr","pow","value1","value2","precision","obj","scrollStrategies","reposition","scrollThrottle","setPrototypeOf","__proto__","p","hasOwnProperty","__assign","s","n","MC_SANITY_CHECKS","providedIn","_sanityChecksEnabled","_hasDoneGlobalChecks","_document","_window","_areChecksEnabled","_checkDoctypeIsDefined","_checkThemeIsPresent","_isTestEnv","doctype","testElement","createElement","computedStyle","display","removeChild","BidiModule","_setLineClass","count","_resetClasses","_setClass","className","isAdd","ShowOnDirtyErrorStateMatcher","form","invalid","dirty","submitted","touched","McPseudoCheckbox","[class.mc-pseudo-checkbox_indeterminate]","[class.mc-pseudo-checkbox_checked]","McPseudoCheckboxModule","scrollbarMeasure","overflow","initScrollBarWidth","_scrollbarWidth","scrollDiv","scrollProp","offsetWidth","clientWidth","McOptgroupBase","_McOptgroupMixinBase","_uniqueOptgroupIdCounter","[class.mc-optgroup-disabled]","[attr.aria-disabled]","[attr.aria-labelledby]","_uniqueIdCounter","McOptionSelectionChange","_parent","_active","_mostRecentViewValue","disableRipple","_emitSelectionChangeEvent","setActiveStyles","setInactiveStyles","_getTabIndex","ngAfterViewChecked","[class.mc-option-multiple]","[class.mc-active]","MC_LABEL_GLOBAL_OPTIONS","topCenter","offsetY","topLeft","topRight","rightTop","rightBottom","bottomCenter","bottomLeft","bottomRight","leftTop","leftBottom","McIconCSSStyler","McIconBase","_McIconMixinBase","Empty","iconName","McButtonCSSStyler","McIconButtonCSSStyler","queries","McButtonBase","_McButtonMixinBase","McButton","McAnchor","focusMonitor","_haltDisabledEvents","McIconButton"],"mappings":"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"}