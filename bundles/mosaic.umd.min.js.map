{"version":3,"file":"mosaic.umd.min.js","sources":["../../src/lib/tooltip/tooltip.component.ts","../../src/lib/tooltip/tooltip.module.ts","../../src/lib/version.ts","../../src/lib/timepicker/timepicker.constants.ts","../../src/lib/select/select.component.ts","../../src/lib/select/select.module.ts","../../src/lib/splitter/splitter.component.ts","../../src/lib/splitter/splitter.module.ts","../../src/lib/toggle/toggle.component.ts","../../src/lib/toggle/toggle.module.ts","../../src/lib/radio/radio.component.ts","../../src/lib/radio/radio.module.ts","../../src/lib/tree/node.ts","../../src/lib/tree/padding.ts","../../src/lib/tree/tree-selection.ts","../../src/lib/tree/tree.module.ts","../../src/lib/tree/data-source/flat-data-source.ts","../../src/lib/tree/data-source/nested-data-source.ts","../../src/lib/tag/tag.component.ts","../../src/lib/tag/tag.module.ts","../../src/lib/timepicker/timepicker.ts","../../src/lib/timepicker/timepicker.module.ts","../../src/lib/select/select-animations.ts","../../src/lib/modal/modal.component.ts","../../src/lib/modal/css-unit.pipe.ts","../../src/lib/modal/modal.service.ts","../../src/lib/modal/modal.module.ts","../../src/lib/navbar/navbar.component.ts","../../src/lib/navbar/navbar.module.ts","../../src/lib/progress-bar/progress-bar.component.ts","../../src/lib/progress-bar/progress-bar.module.ts","../../src/lib/progress-spinner/progress-spinner.component.ts","../../src/lib/progress-spinner/progress-spinner.module.ts","../../src/lib/list/list-selection.component.ts","../../src/lib/list/list.component.ts","../../src/lib/list/list.module.ts","../../src/lib/link/link.component.ts","../../src/lib/link/link.module.ts","../../src/lib/modal/modal-control.service.ts","../../src/lib/modal/modal-ref.class.ts","../../src/lib/modal/modal-util.ts","../../src/lib/form-field/form-field.ts","../../src/lib/form-field/form-field.module.ts","../../src/lib/input/input-value-accessor.ts","../../src/lib/input/stepperUtils.ts","../../src/lib/input/input.ts","../../src/lib/input/input-number-validators.ts","../../src/lib/input/input.module.ts","../../src/lib/layout/content.component.ts","../../src/lib/layout/footer.component.ts","../../src/lib/layout/header.component.ts","../../src/lib/layout/layout.component.ts","../../src/lib/layout/sidebar.component.ts","../../src/lib/layout/layout.module.ts","../../src/lib/button/button.component.ts","../../src/lib/button/button.module.ts","../../src/lib/card/card.component.ts","../../src/lib/card/card.module.ts","../../src/lib/checkbox/checkbox-config.ts","../../src/lib/checkbox/checkbox.ts","../../src/lib/checkbox/checkbox-required-validator.ts","../../src/lib/checkbox/checkbox-module.ts","../../src/lib/divider/divider.component.ts","../../src/lib/divider/divider.module.ts","../../src/lib/dropdown/dropdown-content.ts","../../src/lib/dropdown/dropdown-panel.ts","../../src/lib/dropdown/dropdown-item.ts","../../src/lib/dropdown/dropdown-animations.ts","../../src/lib/dropdown/dropdown.component.ts","../../src/lib/dropdown/dropdown-trigger.ts","../../src/lib/dropdown/dropdown.module.ts","../../src/lib/form-field/cleaner.ts","../../src/lib/form-field/form-field-control.ts","../../src/lib/form-field/form-field-number-control.ts","../../src/lib/form-field/hint.ts","../../src/lib/form-field/prefix.ts","../../src/lib/form-field/stepper.ts","../../src/lib/form-field/suffix.ts","../../node_modules/tslib/tslib.es6.js","../../src/lib/core/utils/utils.ts","../../src/lib/core/common-behaviors/common-module.ts","../../src/lib/core/common-behaviors/disabled.ts","../../src/lib/core/common-behaviors/color.ts","../../src/lib/core/common-behaviors/tabindex.ts","../../src/lib/core/common-behaviors/error-state.ts","../../src/lib/core/option/option.ts","../../src/lib/core/overlay/overlay-position-map.ts","../../src/lib/dropdown/dropdown-errors.ts","../../src/lib/form-field/form-field-errors.ts","../../src/lib/input/input-errors.ts","../../src/lib/select/select-errors.ts","../../src/lib/core/line/line.ts","../../src/lib/core/error/error-options.ts","../../src/lib/core/selection/pseudo-checkbox/pseudo-checkbox.ts","../../src/lib/core/selection/index.ts","../../src/lib/core/services/measure-scrollbar.service.ts","../../src/lib/core/option/optgroup.ts","../../src/lib/core/option/index.ts","../../src/lib/core/label/label-options.ts","../../src/lib/core/animation/fade-animations.ts","../../src/lib/icon/icon.component.ts","../../src/lib/icon/icon.module.ts"],"sourcesContent":["import {\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    Directive,\n    ElementRef,\n    EventEmitter,\n    HostBinding,\n    Inject,\n    InjectionToken,\n    Input,\n    NgZone,\n    OnDestroy,\n    OnInit,\n    Optional,\n    Output,\n    TemplateRef,\n    ViewContainerRef,\n    ViewEncapsulation\n} from '@angular/core';\nimport { Directionality } from '@ptsecurity/cdk/bidi';\nimport { coerceBooleanProperty } from '@ptsecurity/cdk/coercion';\nimport { ESCAPE } from '@ptsecurity/cdk/keycodes';\nimport {\n    ConnectedOverlayPositionChange,\n    ConnectionPositionPair,\n    Overlay,\n    OverlayRef,\n    ScrollDispatcher,\n    IScrollStrategy,\n    FlexibleConnectedPositionStrategy,\n    IOverlayConnectionPosition,\n    IOriginConnectionPosition,\n    HorizontalConnectionPos,\n    VerticalConnectionPos\n} from '@ptsecurity/cdk/overlay';\nimport { ComponentPortal } from '@ptsecurity/cdk/portal';\nimport {\n    fadeAnimation,\n    DEFAULT_4_POSITIONS,\n    POSITION_MAP\n} from '@ptsecurity/mosaic/core';\nimport { BehaviorSubject, Observable, Subject } from 'rxjs';\nimport { distinctUntilChanged, takeUntil } from 'rxjs/operators';\n\n\n@Component({\n    selector: 'mc-tooltip',\n    animations: [ fadeAnimation ],\n    templateUrl: './tooltip.component.html',\n    preserveWhitespaces: false,\n    styleUrls: ['./tooltip.css'],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    host: {\n        '(body:click)': 'this._handleBodyInteraction()'\n    }\n})\n\nexport class McToolTipComponent {\n    _prefix = 'mc-tooltip_placement';\n    _positions: ConnectionPositionPair[] = [ ...DEFAULT_4_POSITIONS ];\n    _classMap = {};\n    _placement = 'top';\n    _trigger = 'hover';\n    isTitleString: boolean;\n    visibleSource = new BehaviorSubject<boolean>(false);\n    $visible: Observable<boolean> = this.visibleSource.asObservable();\n    _title: string | TemplateRef<void>;\n    showTId: number;\n    hideTId: number;\n    availablePositions: any;\n\n    @Output() mcVisibleChange: EventEmitter<boolean> = new EventEmitter();\n\n    @Input() mcMouseEnterDelay = 400;\n\n    @Input() mcMouseLeaveDelay = 0;\n\n    @Input()\n    set mcTitle(value: string | TemplateRef<void>) {\n        this.isTitleString = !(value instanceof TemplateRef);\n\n        if (this.isTitleString) {\n            this._title = value;\n        }\n    }\n\n    get mcTitle(): string | TemplateRef<void> {\n        return this._title;\n    }\n\n    @Input()\n    set mcVisible(value: boolean) {\n        const visible = coerceBooleanProperty(value);\n\n        if (this.visibleSource.value !== visible) {\n            this.visibleSource.next(visible);\n            this.mcVisibleChange.emit(visible);\n        }\n    }\n\n    get mcVisible(): boolean {\n        return this.visibleSource.value;\n    }\n\n    @Input()\n    set mcTrigger(value: string) {\n        this._trigger = value;\n    }\n\n    get mcTrigger(): string {\n        return this._trigger;\n    }\n\n    @Input()\n    set mcPlacement(value: string) {\n        if (value !== this._placement) {\n            this._placement = value;\n            this._positions.unshift(POSITION_MAP[ this.mcPlacement ]);\n        } else if (!value) {\n            this._placement = 'top';\n        }\n    }\n    get mcPlacement(): string {\n        return this._placement;\n    }\n\n    /** Subject for notifying that the tooltip has been hidden from the view */\n    private readonly _onHide: Subject<any> = new Subject();\n    private _closeOnInteraction: boolean = false;\n\n    constructor(public cdr: ChangeDetectorRef) {\n        this.availablePositions = POSITION_MAP;\n    }\n\n    show(): void {\n        if (this.hideTId) {\n            clearTimeout(this.hideTId);\n        }\n\n        if (!this.isContentEmpty()) {\n            this._closeOnInteraction = true;\n            this.showTId = setTimeout(() => {\n                this.mcVisible = true;\n                this.mcVisibleChange.emit(true);\n\n                // Mark for check so if any parent component has set the\n                // ChangeDetectionStrategy to OnPush it will be checked anyways\n                this._markForCheck();\n            }, this.mcMouseEnterDelay);\n        }\n    }\n\n    hide(): void {\n        if (this.showTId) {\n            clearTimeout(this.showTId);\n        }\n\n        this.hideTId = setTimeout(() => {\n            this.mcVisible = false;\n            this.mcVisibleChange.emit(false);\n            this._onHide.next();\n\n            // Mark for check so if any parent component has set the\n            // ChangeDetectionStrategy to OnPush it will be checked anyways\n            this._markForCheck();\n        }, this.mcMouseLeaveDelay);\n    }\n\n    setClassMap(): void {\n        this._classMap = {\n            [ `${this._prefix}-${this._placement}` ]: true\n        };\n    }\n\n    isContentEmpty(): boolean {\n        return this.isTitleString ? (this.mcTitle === '' || !this.mcTitle) : false;\n    }\n\n    /** Returns an observable that notifies when the tooltip has been hidden from view. */\n    afterHidden(): Observable<void> {\n        return this._onHide.asObservable();\n    }\n\n    _markForCheck(): void {\n        this.cdr.markForCheck();\n    }\n\n    _handleBodyInteraction(): void {\n        if (this._closeOnInteraction) {\n            this.hide();\n        }\n    }\n}\n\nexport const MC_TOOLTIP_SCROLL_STRATEGY =\n    new InjectionToken<() => IScrollStrategy>('mc-tooltip-scroll-strategy');\n\n/** @docs-private */\nexport function MC_TOOLTIP_SCROLL_STRATEGY_FACTORY(overlay: Overlay): () => IScrollStrategy {\n    return () => overlay.scrollStrategies.reposition({scrollThrottle: 20});\n}\n\n/** @docs-private */\nexport const MC_TOOLTIP_SCROLL_STRATEGY_FACTORY_PROVIDER = {\n    provide: MC_TOOLTIP_SCROLL_STRATEGY,\n    deps: [Overlay],\n    useFactory: MC_TOOLTIP_SCROLL_STRATEGY_FACTORY\n};\n\n/** Creates an error to be thrown if the user supplied an invalid tooltip position. */\nexport function getMcTooltipInvalidPositionError(position: string) {\n    return Error(`McTooltip position \"${position}\" is invalid.`);\n}\n\nconst VIEWPORT_MARGIN: number = 8;\n\n@Directive({\n    selector: '[mc-tooltip]',\n    host: {\n        '(keydown)': 'handleKeydown($event)',\n        '(touchend)': 'handleTouchend()'\n    }\n})\n\nexport class McTooltipDirective implements OnInit, OnDestroy {\n    isTooltipOpen: boolean = false;\n    isDynamicTooltip = false;\n    parentDisabled: boolean = false;\n    _title: string;\n    _disabled: boolean = false;\n    _mouseEnterDelay: number;\n    _mouseLeaveDelay: number;\n    _visible: boolean;\n    _trigger: string = 'hover';\n    _placement: string = 'top';\n    _overlayRef: OverlayRef | null;\n    _portal: ComponentPortal<McToolTipComponent>;\n    availablePositions: any;\n    tooltip: McToolTipComponent | null;\n\n    @Output() mcVisibleChange = new EventEmitter<boolean>();\n    private $unsubscribe = new Subject<void>();\n\n    @Input('mc-tooltip')\n    set mcTitle(title: string) {\n        this._title = title;\n        this.updateCompValue('mcTitle', title);\n    }\n\n    get mcTitle(): string {\n        return this._title;\n    }\n\n    @Input('mcTitle')\n    set setTitle(title: string) {\n        this.mcTitle = title;\n    }\n\n    @Input('mcTooltipDisabled')\n    get disabled(): boolean { return this._disabled; }\n    set disabled(value) {\n        this._disabled = coerceBooleanProperty(value);\n    }\n\n    @Input('mcMouseEnterDelay')\n    set mcMouseEnterDelay(value: number) {\n        this._mouseEnterDelay = value;\n        this.updateCompValue('mcMouseEnterDelay', value);\n    }\n\n    get mcMouseEnterDelay(): number {\n        return this._mouseEnterDelay;\n    }\n\n    @Input('mcMouseLeaveDelay')\n    set mcMouseLeaveDelay(value: number) {\n        this._mouseLeaveDelay = value;\n        this.updateCompValue('mcMouseLeaveDelay', value);\n    }\n\n    get mcMouseLeaveDelay(): number {\n        return this._mouseEnterDelay;\n    }\n\n    @Input('mcVisible')\n    set mcVisible(value: boolean) {\n        this._visible = value;\n        this.updateCompValue('mcVisible', value);\n    }\n\n    get mcVisible(): boolean {\n        return this._visible;\n    }\n\n    @Input('mcTrigger')\n    set mcTrigger(value: string) {\n        this._trigger = value;\n        this.updateCompValue('mcTrigger', value);\n    }\n\n    get mcTrigger(): string {\n        return this._trigger;\n    }\n\n    @Input('mcPlacement')\n    set mcPlacement(value: string) {\n        if (value) {\n            this._placement = value;\n            this.updateCompValue('mcPlacement', value);\n        } else {\n            this._placement = 'top';\n        }\n    }\n\n    get mcPlacement(): string {\n        return this._placement;\n    }\n\n    @HostBinding('class.mc-tooltip-open')\n    get isOpen(): boolean {\n        return this.isTooltipOpen;\n    }\n\n    @HostBinding('class.disabled')\n    get isParentDisabled(): boolean {\n        return this.parentDisabled;\n    }\n\n    private manualListeners = new Map<string, EventListenerOrEventListenerObject>();\n    private readonly _destroyed = new Subject<void>();\n\n    constructor(\n        private _overlay: Overlay,\n        private elementRef: ElementRef,\n        private _ngZone: NgZone,\n        private _scrollDispatcher: ScrollDispatcher,\n        private hostView: ViewContainerRef,\n        @Inject(MC_TOOLTIP_SCROLL_STRATEGY) private _scrollStrategy,\n        @Optional() private _dir: Directionality) {\n            this.availablePositions = POSITION_MAP;\n        }\n\n    /** Create the overlay config and position strategy */\n    _createOverlay(): OverlayRef {\n        if (this._overlayRef) {\n            return this._overlayRef;\n        }\n\n        // Create connected position strategy that listens for scroll events to reposition.\n        const strategy = this._overlay.position()\n            .flexibleConnectedTo(this.elementRef)\n            .withTransformOriginOn('.mc-tooltip')\n            .withFlexibleDimensions(false)\n            .withViewportMargin(VIEWPORT_MARGIN)\n            .withPositions([ ...DEFAULT_4_POSITIONS ]);\n\n        const scrollableAncestors = this._scrollDispatcher\n            .getAncestorScrollContainers(this.elementRef);\n\n        strategy.withScrollableContainers(scrollableAncestors);\n\n        strategy.positionChanges.pipe(takeUntil(this._destroyed)).subscribe((change) => {\n            if (this.tooltip) {\n                this.onPositionChange(change);\n                if (change.scrollableViewProperties.isOverlayClipped && this.tooltip.mcVisible) {\n                    // After position changes occur and the overlay is clipped by\n                    // a parent scrollable then close the tooltip.\n                    this._ngZone.run(() => this.hide());\n                }\n            }\n        });\n\n        this._overlayRef = this._overlay.create({\n            direction: this._dir,\n            positionStrategy: strategy,\n            panelClass: 'mc-tooltip-panel',\n            scrollStrategy: this._scrollStrategy()\n        });\n\n        this._updatePosition();\n\n        this._overlayRef.detachments()\n            .pipe(takeUntil(this._destroyed))\n            .subscribe(() => this._detach());\n\n        return this._overlayRef;\n    }\n\n    _detach() {\n        if (this._overlayRef && this._overlayRef.hasAttached()) {\n            this._overlayRef.detach();\n        }\n\n        this.tooltip = null;\n    }\n\n    onPositionChange($event: ConnectedOverlayPositionChange): void {\n        let updatedPlacement = this.mcPlacement;\n        Object.keys(this.availablePositions).some((key) => {\n            if ($event.connectionPair.originX === this.availablePositions[key].originX &&\n                $event.connectionPair.originY === this.availablePositions[key].originY &&\n                $event.connectionPair.overlayX === this.availablePositions[key].overlayX &&\n                $event.connectionPair.overlayY === this.availablePositions[key].overlayY) {\n                updatedPlacement = key;\n\n                return true;\n            }\n\n            return false;\n        });\n        this.updateCompValue('mcPlacement', updatedPlacement);\n\n        if (this.tooltip) {\n            this.tooltip.setClassMap();\n        }\n\n        this.handlePositioningUpdate();\n    }\n\n    handlePositioningUpdate() {\n        if (!this._overlayRef) {\n            this._overlayRef = this._createOverlay();\n        }\n        if (this.mcPlacement === 'right' || this.mcPlacement === 'left') {\n            const pos =\n                (this._overlayRef.overlayElement.clientHeight -\n                    this.hostView.element.nativeElement.clientHeight) / 2; // tslint:disable-line\n            const currentContainer = this._overlayRef.overlayElement.style.top || '0px';\n            this._overlayRef.overlayElement.style.top =\n                `${parseInt(currentContainer.split('px')[0], 10) + pos - 1}px`;\n            // TODO: обновлять положение стрелки\\указателя\\\"дятла\"\n        }\n    }\n\n    // tslint:disable-next-line:no-any\n    updateCompValue(key: string, value: any): void {\n        if (this.isDynamicTooltip && value) {\n            if (this.tooltip) {\n                this.tooltip[key] = value;\n            }\n        }\n    }\n\n    ngOnInit(): void {\n        if (this.mcTrigger === 'hover') {\n\n            this.manualListeners\n                .set('mouseenter', () => this.show())\n                .set('mouseleave', () => this.hide())\n                .forEach((listener, event) => this.elementRef.nativeElement.addEventListener(event, listener));\n        }\n\n        if (this.mcTrigger === 'focus') {\n\n            this.manualListeners\n                .set('focus', () => this.show())\n                .set('blur', () => this.hide())\n                .forEach((listener, event) => this.elementRef.nativeElement.addEventListener(event, listener));\n        }\n    }\n\n    ngOnDestroy(): void {\n        if (this._overlayRef) {\n            this._overlayRef.dispose();\n        }\n        this.manualListeners.forEach((listener, event) =>\n            this.elementRef.nativeElement.removeEventListener(event, listener));\n        this.manualListeners.clear();\n\n        this.$unsubscribe.next();\n        this.$unsubscribe.complete();\n    }\n\n    handleKeydown(e: KeyboardEvent) {\n        if (this.isTooltipOpen && e.keyCode === ESCAPE) { // tslint:disable-line\n            this.hide();\n        }\n    }\n\n    handleTouchend() {\n        this.hide();\n    }\n\n    /** Updates the position of the current tooltip. */\n    _updatePosition() {\n        if (!this._overlayRef) {\n            this._overlayRef = this._createOverlay();\n        }\n        const position =\n            this._overlayRef.getConfig().positionStrategy as FlexibleConnectedPositionStrategy;\n        const origin = this._getOrigin();\n        const overlay = this._getOverlayPosition();\n\n        position.withPositions([\n            {...origin.main, ...overlay.main},\n            {...origin.fallback, ...overlay.fallback}\n        ]);\n    }\n\n    /**\n     * Returns the origin position and a fallback position based on the user's position preference.\n     * The fallback position is the inverse of the origin (e.g. `'below' -> 'above'`).\n     */\n    _getOrigin(): {main: IOriginConnectionPosition; fallback: IOriginConnectionPosition} {\n        const position = this.mcPlacement;\n        const isLtr = !this._dir || this._dir.value === 'ltr';\n        let originPosition: IOriginConnectionPosition;\n\n        if (position === 'top' || position === 'bottom') {\n            originPosition = {originX: 'center', originY: position === 'top' ? 'top' : 'bottom'};\n        } else if (\n            position === 'top' ||\n            (position === 'left' && isLtr) ||\n            (position === 'right' && !isLtr)) {\n            originPosition = {originX: 'start', originY: 'center'};\n        } else if (\n            position === 'bottom' ||\n            (position === 'right' && isLtr) ||\n            (position === 'left' && !isLtr)) {\n            originPosition = {originX: 'end', originY: 'center'};\n        } else {\n            throw getMcTooltipInvalidPositionError(position);\n        }\n\n        const {x, y} = this._invertPosition(originPosition.originX, originPosition.originY);\n\n        return {\n            main: originPosition,\n            fallback: {originX: x, originY: y}\n        };\n    }\n\n    /** Returns the overlay position and a fallback position based on the user's preference */\n    _getOverlayPosition(): {main: IOverlayConnectionPosition; fallback: IOverlayConnectionPosition} {\n        const position = this.mcPlacement;\n        const isLtr = !this._dir || this._dir.value === 'ltr';\n        let overlayPosition: IOverlayConnectionPosition;\n\n        if (position === 'top') {\n            overlayPosition = {overlayX: 'center', overlayY: 'bottom'};\n        } else if (position === 'bottom') {\n            overlayPosition = {overlayX: 'center', overlayY: 'top'};\n        } else if (\n            position === 'top' ||\n            (position === 'left' && isLtr) ||\n            (position === 'right' && !isLtr)) {\n            overlayPosition = {overlayX: 'end', overlayY: 'center'};\n        } else if (\n            position === 'bottom' ||\n            (position === 'right' && isLtr) ||\n            (position === 'left' && !isLtr)) {\n            overlayPosition = {overlayX: 'start', overlayY: 'center'};\n        } else {\n            throw getMcTooltipInvalidPositionError(position);\n        }\n\n        const {x, y} = this._invertPosition(overlayPosition.overlayX, overlayPosition.overlayY);\n\n        return {\n            main: overlayPosition,\n            fallback: {overlayX: x, overlayY: y}\n        };\n    }\n\n    /** Inverts an overlay position. */\n    private _invertPosition(x: HorizontalConnectionPos, y: VerticalConnectionPos) {\n        let newX: HorizontalConnectionPos = x;\n        let newY: VerticalConnectionPos = y;\n        if (this.mcPlacement === 'top' || this.mcPlacement === 'bottom') {\n            if (y === 'top') {\n                newY = 'bottom';\n            } else if (y === 'bottom') {\n                newY = 'top';\n            }\n        } else {\n            if (x === 'end') {\n                newX = 'start';\n            } else if (x === 'start') {\n                newX = 'end';\n            }\n        }\n\n        return {x: newX, y: newY};\n    }\n\n    private show(): void {\n        if (!this.disabled) {\n            if (!this.tooltip) {\n                const overlayRef = this._createOverlay();\n                this._detach();\n                this._portal = this._portal || new ComponentPortal(McToolTipComponent, this.hostView);\n                this.tooltip = overlayRef.attach(this._portal).instance;\n                this.tooltip.afterHidden()\n                    .pipe(takeUntil(this._destroyed))\n                    .subscribe(() => this._detach());\n                this.isDynamicTooltip = true;\n                const properties = [\n                    'mcTitle',\n                    'mcMouseEnterDelay',\n                    'mcMouseLeaveDelay',\n                    'mcVisible',\n                    'mcTrigger',\n                    'mcPlacement' ];\n                properties.forEach((property) => this.updateCompValue(property, this[ property ]));\n                this.tooltip.mcVisibleChange.pipe(takeUntil(this.$unsubscribe), distinctUntilChanged())\n                    .subscribe((data) => {\n                        this._visible = data;\n                        this.mcVisibleChange.emit(data);\n                    });\n            }\n            this._updatePosition();\n            this.tooltip.show();\n            this.isTooltipOpen = true;\n        }\n    }\n\n    private hide(): void {\n        if (this.tooltip) {\n            this.tooltip.hide();\n            this.isTooltipOpen = false;\n        }\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { OverlayModule } from '@ptsecurity/cdk/overlay';\n\nimport {\n    McToolTipComponent,\n    McTooltipDirective,\n    MC_TOOLTIP_SCROLL_STRATEGY_FACTORY_PROVIDER\n} from './tooltip.component';\n\n\n@NgModule({\n    declarations: [ McToolTipComponent, McTooltipDirective ],\n    exports: [ McToolTipComponent, McTooltipDirective ],\n    imports: [ BrowserAnimationsModule, CommonModule, OverlayModule ],\n    providers: [MC_TOOLTIP_SCROLL_STRATEGY_FACTORY_PROVIDER],\n    entryComponents: [ McToolTipComponent ]\n})\nexport class McToolTipModule {\n}\n","import { Version } from '@angular/core';\n\n\nexport const VERSION = new Version('0.0.1-a639a2b');\n","export enum TimeParts {\n    hours,\n    minutes,\n    seconds\n}\n\nexport enum TimeFormats {\n    HHmmss = 'HH:mm:ss',\n    HHmm = 'HH:mm'\n}\n\nexport const TIMEFORMAT_PLACEHOLDERS: { [timeFormat: string]: string } = {\n    [TimeFormats.HHmmss]: '  :  :  ',\n    [TimeFormats.HHmm]: '  :  '\n};\n\nexport const DEFAULT_TIME_FORMAT: TimeFormats = TimeFormats.HHmm;\n\nexport const HOURS_MINUTES_SECONDS_REGEXP =\n    new RegExp(/^([0-9]|0[0-9]|1[0-9]|2[0-3]):([0-5][0-9]|[0-9]):([0-5][0-9]|[0-9])?$/);\nexport const HOURS_MINUTES_REGEXP = /^([0-9]|0[0-9]|1[0-9]|2[0-3]):([0-5][0-9]|[0-9])?$/;\nexport const HOURS_ONLY_REGEXP = /^([0-9]|0[0-9]|1[0-9]|2[0-3]):?$/;\n\nexport const SECONDS_PER_MINUTE: number = 59;\nexport const MINUTES_PER_HOUR: number = 59;\nexport const HOURS_PER_DAY: number = 23;\n\n// TODO Move it to common CDK\nexport const ARROW_UP_KEYCODE: string = 'ArrowUp';\nexport const ARROW_DOWN_KEYCODE: string = 'ArrowDown';\nexport const ARROW_LEFT_KEYCODE: string = 'ArrowLeft';\nexport const ARROW_RIGHT_KEYCODE: string = 'ArrowRight';\n","/* tslint:disable:no-empty */\n\nimport { ActiveDescendantKeyManager } from '@ptsecurity/cdk/a11y';\nimport { Directionality } from '@ptsecurity/cdk/bidi';\nimport { coerceBooleanProperty } from '@ptsecurity/cdk/coercion';\nimport { SelectionModel } from '@ptsecurity/cdk/collections';\nimport {\n    DOWN_ARROW,\n    END,\n    ENTER,\n    HOME,\n    LEFT_ARROW,\n    RIGHT_ARROW,\n    SPACE,\n    UP_ARROW,\n    A\n} from '@ptsecurity/cdk/keycodes';\nimport {\n    CdkConnectedOverlay,\n    Overlay,\n    RepositionScrollStrategy,\n    IScrollStrategy,\n    ViewportRuler\n} from '@ptsecurity/cdk/overlay';\n\nimport {\n    AfterContentInit, AfterViewInit,\n    Attribute,\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    ContentChild,\n    ContentChildren,\n    Directive,\n    DoCheck,\n    ElementRef,\n    EventEmitter,\n    Inject,\n    InjectionToken,\n    Input,\n    isDevMode,\n    NgZone,\n    OnChanges,\n    OnDestroy,\n    OnInit,\n    Optional,\n    Output,\n    QueryList, Renderer2,\n    Self,\n    SimpleChanges,\n    ViewChild, ViewChildren,\n    ViewEncapsulation\n} from '@angular/core';\nimport { ControlValueAccessor, FormGroupDirective, NgControl, NgForm } from '@angular/forms';\nimport {\n    _countGroupLabelsBeforeOption,\n    _getOptionScrollPosition,\n    CanDisable,\n    CanDisableCtor,\n    CanUpdateErrorState,\n    CanUpdateErrorStateCtor,\n    ErrorStateMatcher,\n    HasTabIndex, HasTabIndexCtor,\n    MC_OPTION_PARENT_COMPONENT,\n    McOptgroup,\n    McOption,\n    McOptionSelectionChange,\n    mixinDisabled,\n    mixinErrorState,\n    mixinTabIndex\n} from '@ptsecurity/mosaic/core';\n\nimport { McFormField, McFormFieldControl } from '@ptsecurity/mosaic/form-field';\nimport { McTag } from '@ptsecurity/mosaic/tag';\n\n\nimport { defer, merge, Observable, Subject } from 'rxjs';\nimport {\n    filter,\n    map,\n    startWith,\n    switchMap,\n    take,\n    takeUntil,\n    distinctUntilChanged\n} from 'rxjs/operators';\n\nimport {\n    getMcSelectDynamicMultipleError,\n    getMcSelectNonArrayValueError,\n    getMcSelectNonFunctionValueError\n} from './select-errors';\n\nimport { mcSelectAnimations } from './select-animations';\n\n\nlet nextUniqueId = 0;\n\n/**\n * The following style constants are necessary to save here in order\n * to properly calculate the alignment of the selected option over\n * the trigger element.\n */\n\n/** The max height of the select's overlay panel */\nexport const SELECT_PANEL_MAX_HEIGHT = 224;\n\n/** The panel's padding on the x-axis */\nexport const SELECT_PANEL_PADDING_X = 1;\n\n/** The panel's x axis padding if it is indented (e.g. there is an option group). */\n/* tslint:disable-next-line:no-magic-numbers */\nexport const SELECT_PANEL_INDENT_PADDING_X = SELECT_PANEL_PADDING_X * 2;\n\n/** The height of the select items in `em` units. */\nexport const SELECT_ITEM_HEIGHT_EM = 2;\n\n/**\n * The select panel will only \"fit\" inside the viewport if it is positioned at\n * this value or more away from the viewport boundary.\n */\nexport const SELECT_PANEL_VIEWPORT_PADDING = 8;\n\n/** Injection token that determines the scroll handling while a select is open. */\nexport const MC_SELECT_SCROLL_STRATEGY =\n    new InjectionToken<() => IScrollStrategy>('mc-select-scroll-strategy');\n\n/** @docs-private */\nexport function MC_SELECT_SCROLL_STRATEGY_PROVIDER_FACTORY(overlay: Overlay):\n    () => RepositionScrollStrategy {\n    return () => overlay.scrollStrategies.reposition();\n}\n\n/** @docs-private */\nexport const MC_SELECT_SCROLL_STRATEGY_PROVIDER = {\n    provide: MC_SELECT_SCROLL_STRATEGY,\n    deps: [Overlay],\n    useFactory: MC_SELECT_SCROLL_STRATEGY_PROVIDER_FACTORY\n};\n\n/** Change event object that is emitted when the select value has changed. */\nexport class McSelectChange {\n    constructor(\n        /** Reference to the select that emitted the change event. */\n        public source: McSelect,\n        /** Current value of the select that emitted the event. */\n        public value: any) {\n    }\n}\n\n// Boilerplate for applying mixins to McSelect.\n/** @docs-private */\nexport class McSelectBase {\n    constructor(\n        public _elementRef: ElementRef,\n        public _defaultErrorStateMatcher: ErrorStateMatcher,\n        public _parentForm: NgForm,\n        public _parentFormGroup: FormGroupDirective,\n        public ngControl: NgControl\n    ) {}\n}\n\nexport const _McSelectMixinBase:\n    CanDisableCtor &\n    HasTabIndexCtor &\n    CanUpdateErrorStateCtor & typeof McSelectBase\n    = mixinTabIndex(mixinDisabled(mixinErrorState(McSelectBase)));\n\n\n/**\n * Allows the user to customize the trigger that is displayed when the select has a value.\n */\n@Directive({ selector: 'mc-select-trigger' })\nexport class McSelectTrigger {}\n\n\n@Component({\n    selector: 'mc-select',\n    exportAs: 'mcSelect',\n    templateUrl: 'select.html',\n    styleUrls: ['./select.css'],\n    inputs: ['disabled', 'tabIndex'],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    host: {\n        '[attr.id]': 'id',\n        '[attr.tabindex]': 'tabIndex',\n        class: 'mc-select',\n        '[class.mc-disabled]': 'disabled',\n        '[class.mc-select-invalid]': 'errorState',\n        '[class.mc-select-required]': 'required',\n        '(keydown)': '_handleKeydown($event)',\n        '(focus)': '_onFocus()',\n        '(blur)': '_onBlur()',\n        '(window:resize)': '_calculateHiddenItems()'\n    },\n    animations: [\n        mcSelectAnimations.transformPanel,\n        mcSelectAnimations.fadeInContent\n    ],\n    providers: [\n        { provide: McFormFieldControl, useExisting: McSelect },\n        { provide: MC_OPTION_PARENT_COMPONENT, useExisting: McSelect }\n    ]\n})\nexport class McSelect extends _McSelectMixinBase implements\n    AfterContentInit, AfterViewInit, OnChanges, OnDestroy, OnInit, DoCheck, ControlValueAccessor, CanDisable,\n    HasTabIndex, McFormFieldControl<any>, CanUpdateErrorState {\n\n    /** The last measured value for the trigger's client bounding rect. */\n    _triggerRect: ClientRect;\n\n    /** The cached font-size of the trigger element. */\n    _triggerFontSize = 0;\n\n    /** Deals with the selection logic. */\n    _selectionModel: SelectionModel<McOption>;\n\n    /** Manages keyboard events for options in the panel. */\n    _keyManager: ActiveDescendantKeyManager<McOption>;\n\n    /** The IDs of child options to be passed to the aria-owns attribute. */\n    _optionIds: string = '';\n\n    /** The value of the select panel's transform-origin property. */\n    _transformOrigin: string = 'top';\n\n    /** Whether the panel's animation is done. */\n    _panelDoneAnimating: boolean = false;\n\n    /** Emits when the panel element is finished transforming in. */\n    _panelDoneAnimatingStream = new Subject<string>();\n\n    /** Strategy that will be used to handle scrolling while the select panel is open. */\n    _scrollStrategy = this._scrollStrategyFactory();\n\n    /**\n     * The y-offset of the overlay panel in relation to the trigger's top start corner.\n     * This must be adjusted to align the selected option text over the trigger text.\n     * when the panel opens. Will change based on the y-position of the selected option.\n     */\n    _offsetY = 0;\n\n    /**\n     * This position config ensures that the top \"start\" corner of the overlay\n     * is aligned with with the top \"start\" of the origin by default (overlapping\n     * the trigger completely). If the panel cannot fit below the trigger, it\n     * will fall back to a position above the trigger.\n     */\n    _positions = [\n        {\n            originX: 'start',\n            originY: 'bottom',\n            overlayX: 'start',\n            overlayY: 'top'\n        },\n        {\n            originX: 'start',\n            originY: 'top',\n            overlayX: 'start',\n            overlayY: 'bottom'\n        }\n    ];\n\n    /** Whether the select is focused. */\n    get focused(): boolean {\n        return this._focused || this._panelOpen;\n    }\n\n    /**\n     * @deprecated Setter to be removed as this property is intended to be readonly.\n     * @breaking-change 8.0.0\n     */\n    set focused(value: boolean) {\n        this._focused = value;\n    }\n\n    /** A name for this control that can be used by `mc-form-field`. */\n    controlType = 'mc-select';\n\n    @ViewChild('trigger') trigger: ElementRef;\n    @ViewChildren(McTag) tags: QueryList<McTag>;\n\n    @ViewChild('panel') panel: ElementRef;\n\n    /** Overlay pane containing the options. */\n    @ViewChild(CdkConnectedOverlay) overlayDir: CdkConnectedOverlay;\n\n    /** All of the defined select options. */\n    @ContentChildren(McOption, { descendants: true }) options: QueryList<McOption>;\n\n    /** All of the defined groups of options. */\n    @ContentChildren(McOptgroup) optionGroups: QueryList<McOptgroup>;\n\n    /** Classes to be passed to the select panel. Supports the same syntax as `ngClass`. */\n    @Input() panelClass: string | string[] | Set<string> | { [key: string]: any };\n\n    /** User-supplied override of the trigger element. */\n    @ContentChild(McSelectTrigger) customTrigger: McSelectTrigger;\n\n    /** Placeholder to be shown if no value has been selected. */\n    @Input()\n    get placeholder(): string {\n        return this._placeholder;\n    }\n\n    set placeholder(value: string) {\n        this._placeholder = value;\n        this.stateChanges.next();\n    }\n\n    /** Whether the component is required. */\n    @Input()\n    get required(): boolean {\n        return this._required;\n    }\n\n    set required(value: boolean) {\n        this._required = coerceBooleanProperty(value);\n        this.stateChanges.next();\n    }\n\n    /** Whether the user should be allowed to select multiple options. */\n    @Input()\n    get multiple(): boolean {\n        return this._multiple;\n    }\n\n    set multiple(value: boolean) {\n        if (this._selectionModel) {\n            throw getMcSelectDynamicMultipleError();\n        }\n\n        this._multiple = coerceBooleanProperty(value);\n    }\n\n    /**\n     * Function to compare the option values with the selected values. The first argument\n     * is a value from an option. The second is a value from the selection. A boolean\n     * should be returned.\n     */\n    @Input()\n    get compareWith() {\n        return this._compareWith;\n    }\n\n    set compareWith(fn: (o1: any, o2: any) => boolean) {\n        /* tslint:disable-next-line:strict-type-predicates */\n        if (typeof fn !== 'function') {\n            throw getMcSelectNonFunctionValueError();\n        }\n\n        this._compareWith = fn;\n\n        if (this._selectionModel) {\n            // A different comparator means the selection could change.\n            this._initializeSelection();\n        }\n    }\n\n    /** Value of the select control. */\n    @Input()\n    get value(): any {\n        return this._value;\n    }\n\n    set value(newValue: any) {\n        if (newValue !== this._value) {\n            this.writeValue(newValue);\n            this._value = newValue;\n        }\n    }\n\n    /** Object used to control when error messages are shown. */\n    @Input() errorStateMatcher: ErrorStateMatcher;\n\n    /**\n     * Function used to sort the values in a select in multiple mode.\n     * Follows the same logic as `Array.prototype.sort`.\n     */\n    @Input() sortComparator: (a: McOption, b: McOption, options: McOption[]) => number;\n\n    @Input()\n    get id(): string {\n        return this._id;\n    }\n\n    set id(value: string) {\n        this._id = value || this._uid;\n        this.stateChanges.next();\n    }\n\n    /** Combined stream of all of the child options' change events. */\n    readonly optionSelectionChanges: Observable<McOptionSelectionChange> = defer(() => {\n        if (this.options) {\n            return merge(...this.options.map((option) => option.onSelectionChange));\n        }\n\n        return this._ngZone.onStable\n            .asObservable()\n            .pipe(take(1), switchMap(() => this.optionSelectionChanges));\n    });\n\n    /** Event emitted when the select panel has been toggled. */\n    @Output() readonly openedChange: EventEmitter<boolean> = new EventEmitter<boolean>();\n\n    /** Event emitted when the select has been opened. */\n    @Output('opened') readonly _openedStream: Observable<void> =\n        this.openedChange.pipe(filter((o) => o), map(() => {}));\n\n    /** Event emitted when the select has been closed. */\n    @Output('closed') readonly _closedStream: Observable<void> =\n        this.openedChange.pipe(filter((o) => !o), map(() => {}));\n\n    /** Event emitted when the selected value has been changed by the user. */\n    @Output() readonly selectionChange: EventEmitter<McSelectChange> = new EventEmitter<McSelectChange>();\n\n    /**\n     * Event that emits whenever the raw value of the select changes. This is here primarily\n     * to facilitate the two-way binding for the `value` input.\n     * @docs-private\n     */\n    @Output() readonly valueChange: EventEmitter<any> = new EventEmitter<any>();\n\n    hiddenItems: number = 0;\n\n    /** Whether or not the overlay panel is open. */\n    private _panelOpen = false;\n\n    /** Whether filling out the select is required in the form. */\n    private _required: boolean = false;\n\n    /** The scroll position of the overlay panel, calculated to center the selected option. */\n    private _scrollTop = 0;\n\n    /** The placeholder displayed in the trigger of the select. */\n    private _placeholder: string;\n\n    /** Whether the component is in multiple selection mode. */\n    private _multiple: boolean = false;\n\n    /** Unique id for this input. */\n    private readonly _uid = `mc-select-${nextUniqueId++}`;\n\n    /** Emits whenever the component is destroyed. */\n    private readonly _destroy = new Subject<void>();\n\n    private _focused = false;\n\n    private _value: any;\n\n    private _id: string;\n\n    constructor(\n        private readonly _viewportRuler: ViewportRuler,\n        private readonly _changeDetectorRef: ChangeDetectorRef,\n        private readonly _ngZone: NgZone,\n        private readonly _renderer: Renderer2,\n        _defaultErrorStateMatcher: ErrorStateMatcher,\n        elementRef: ElementRef,\n        @Optional() private readonly _dir: Directionality,\n        @Optional() _parentForm: NgForm,\n        @Optional() _parentFormGroup: FormGroupDirective,\n        @Optional() private readonly _parentFormField: McFormField,\n        @Self() @Optional() public ngControl: NgControl,\n        @Attribute('tabindex') tabIndex: string,\n        @Inject(MC_SELECT_SCROLL_STRATEGY) private readonly _scrollStrategyFactory\n    ) {\n        super(elementRef, _defaultErrorStateMatcher, _parentForm, _parentFormGroup, ngControl);\n\n        if (this.ngControl) {\n            // Note: we provide the value accessor through here, instead of\n            // the `providers` to avoid running into a circular import.\n            this.ngControl.valueAccessor = this;\n        }\n\n        this.tabIndex = parseInt(tabIndex) || 0;\n\n        // Force setter to be called in case id was not specified.\n        this.id = this.id;\n    }\n\n    ngOnInit() {\n        this._selectionModel = new SelectionModel<McOption>(this.multiple);\n        this.stateChanges.next();\n\n        // We need `distinctUntilChanged` here, because some browsers will\n        // fire the animation end event twice for the same animation. See:\n        // https://github.com/angular/angular/issues/24084\n        this._panelDoneAnimatingStream\n            .pipe(distinctUntilChanged(), takeUntil(this._destroy))\n            .subscribe(() => {\n                if (this.panelOpen) {\n                    this._scrollTop = 0;\n                    this.openedChange.emit(true);\n                } else {\n                    this.openedChange.emit(false);\n                    this._panelDoneAnimating = false;\n                    this.overlayDir.offsetX = 0;\n                    this._changeDetectorRef.markForCheck();\n                }\n            });\n    }\n\n    ngAfterContentInit() {\n        this._initKeyManager();\n\n        this._selectionModel.onChange!\n            .pipe(takeUntil(this._destroy))\n            .subscribe((event) => {\n                event.added.forEach((option) => option.select());\n                event.removed.forEach((option) => option.deselect());\n            });\n\n        this.options.changes\n            .pipe(startWith(null), takeUntil(this._destroy))\n            .subscribe(() => {\n                this._resetOptions();\n                this._initializeSelection();\n            });\n    }\n\n    ngAfterViewInit(): void {\n        this.tags.changes\n            .subscribe(() => {\n                setTimeout(() => this._calculateHiddenItems(), 0);\n            });\n    }\n\n    ngDoCheck() {\n        if (this.ngControl) { this.updateErrorState(); }\n    }\n\n    ngOnChanges(changes: SimpleChanges) {\n        // Updating the disabled state is handled by `mixinDisabled`, but we need to additionally let\n        // the parent form field know to run change detection when the disabled state changes.\n        if (changes.disabled) {\n            this.stateChanges.next();\n        }\n    }\n\n    ngOnDestroy() {\n        this._destroy.next();\n        this._destroy.complete();\n        this.stateChanges.complete();\n    }\n\n    /** `View -> model callback called when value changes` */\n    _onChange: (value: any) => void = () => {};\n\n    /** `View -> model callback called when select has been touched` */\n    _onTouched = () => {};\n\n    /** Toggles the overlay panel open or closed. */\n    toggle(): void {\n        if (this.panelOpen) {\n            this.close();\n        } else {\n            this.open();\n        }\n    }\n\n    /** Opens the overlay panel. */\n    open(): void {\n        if (this.disabled || !this.options || !this.options.length || this._panelOpen) { return; }\n\n        this._triggerRect = this.trigger.nativeElement.getBoundingClientRect();\n        // Note: The computed font-size will be a string pixel value (e.g. \"16px\").\n        // `parseInt` ignores the trailing 'px' and converts this to a number.\n        this._triggerFontSize = parseInt(getComputedStyle(this.trigger.nativeElement)['font-size']);\n\n        this._panelOpen = true;\n        this._keyManager.withHorizontalOrientation(null);\n        this._calculateOverlayPosition();\n        this._highlightCorrectOption();\n        this._changeDetectorRef.markForCheck();\n\n        // Set the font size on the panel element once it exists.\n        this._ngZone.onStable.asObservable()\n            .pipe(take(1))\n            .subscribe(() => {\n                if (this._triggerFontSize && this.overlayDir.overlayRef &&\n                    this.overlayDir.overlayRef.overlayElement) {\n                    this.overlayDir.overlayRef.overlayElement.style.fontSize = `${this._triggerFontSize}px`;\n                }\n            });\n    }\n\n    /** Closes the overlay panel and focuses the host element. */\n    close(): void {\n        if (this._panelOpen) {\n            this._panelOpen = false;\n            this._keyManager.withHorizontalOrientation(this._isRtl() ? 'rtl' : 'ltr');\n            this._changeDetectorRef.markForCheck();\n            this._onTouched();\n        }\n    }\n\n    /**\n     * Sets the select's value. Part of the ControlValueAccessor interface\n     * required to integrate with Angular's core forms API.\n     *\n     * @param value New value to be written to the model.\n     */\n    writeValue(value: any): void {\n        if (this.options) {\n            this._setSelectionByValue(value);\n        }\n    }\n\n    /**\n     * Saves a callback function to be invoked when the select's value\n     * changes from user input. Part of the ControlValueAccessor interface\n     * required to integrate with Angular's core forms API.\n     *\n     * @param fn Callback to be triggered when the value changes.\n     */\n    registerOnChange(fn: (value: any) => void): void {\n        this._onChange = fn;\n    }\n\n    /**\n     * Saves a callback function to be invoked when the select is blurred\n     * by the user. Part of the ControlValueAccessor interface required\n     * to integrate with Angular's core forms API.\n     *\n     * @param fn Callback to be triggered when the component has been touched.\n     */\n    registerOnTouched(fn: () => {}): void {\n        this._onTouched = fn;\n    }\n\n    /**\n     * Disables the select. Part of the ControlValueAccessor interface required\n     * to integrate with Angular's core forms API.\n     *\n     * @param isDisabled Sets whether the component is disabled.\n     */\n    setDisabledState(isDisabled: boolean): void {\n        this.disabled = isDisabled;\n        this._changeDetectorRef.markForCheck();\n        this.stateChanges.next();\n    }\n\n    get panelOpen(): boolean {\n        return this._panelOpen;\n    }\n\n    get selected(): McOption | McOption[] {\n        return this.multiple ? this._selectionModel.selected : this._selectionModel.selected[0];\n    }\n\n    get triggerValue(): string {\n        if (this.empty) { return ''; }\n\n        if (this._multiple) {\n            const selectedOptions = this._selectionModel.selected.map((option) => option.viewValue);\n\n            if (this._isRtl()) { selectedOptions.reverse(); }\n\n            return selectedOptions.join(', ');\n        }\n\n        return this._selectionModel.selected[0].viewValue;\n    }\n\n    get triggerValues(): McOption[] {\n        if (this.empty) { return []; }\n\n        if (this._multiple) {\n            const selectedOptions = this._selectionModel.selected;\n\n            if (this._isRtl()) { selectedOptions.reverse(); }\n\n            return selectedOptions;\n        }\n\n        return [this._selectionModel.selected[0]];\n    }\n\n    get empty(): boolean {\n        return !this._selectionModel || this._selectionModel.isEmpty();\n    }\n\n    _isRtl(): boolean {\n        return this._dir ? this._dir.value === 'rtl' : false;\n    }\n\n    _handleKeydown(event: KeyboardEvent): void {\n        if (!this.disabled) {\n            if (this.panelOpen) {\n                this._handleOpenKeydown(event);\n            } else {\n                this._handleClosedKeydown(event);\n            }\n        }\n    }\n\n    /**\n     * When the panel content is done fading in, the _panelDoneAnimating property is\n     * set so the proper class can be added to the panel.\n     */\n    _onFadeInDone(): void {\n        this._panelDoneAnimating = this.panelOpen;\n        this._changeDetectorRef.markForCheck();\n    }\n\n    _onFocus() {\n        if (!this.disabled) {\n            this._focused = true;\n            this.stateChanges.next();\n        }\n    }\n\n    /**\n     * Calls the touched callback only if the panel is closed. Otherwise, the trigger will\n     * \"blur\" to the panel when it opens, causing a false positive.\n     */\n    _onBlur() {\n        this._focused = false;\n\n        if (!this.disabled && !this.panelOpen) {\n            this._onTouched();\n            this._changeDetectorRef.markForCheck();\n            this.stateChanges.next();\n        }\n    }\n\n    /**\n     * Callback that is invoked when the overlay panel has been attached.\n     */\n    _onAttached(): void {\n        this.overlayDir.positionChange\n            .pipe(take(1))\n            .subscribe(() => {\n                this._changeDetectorRef.detectChanges();\n                this._calculateOverlayOffsetX();\n                this.panel.nativeElement.scrollTop = this._scrollTop;\n            });\n    }\n\n    /** Returns the theme to be used on the panel. */\n    _getPanelTheme(): string {\n        return this._parentFormField ? `mc-${this._parentFormField.color}` : '';\n    }\n\n    /** Focuses the select element. */\n    focus(): void {\n        this._elementRef.nativeElement.focus();\n    }\n\n    /**\n     * Calculates the scroll position of the select's overlay panel.\n     *\n     * Attempts to center the selected option in the panel. If the option is\n     * too high or too low in the panel to be scrolled to the center, it clamps the\n     * scroll position to the min or max scroll positions respectively.\n     */\n    _calculateOverlayScroll(selectedIndex: number, scrollBuffer: number, maxScroll: number): number {\n        const itemHeight = this._getItemHeight();\n        const optionOffsetFromScrollTop = itemHeight * selectedIndex;\n\n        /* tslint:disable-next-line:no-magic-numbers */\n        const halfOptionHeight = itemHeight / 2;\n\n        // Starts at the optionOffsetFromScrollTop, which scrolls the option to the top of the\n        // scroll container, then subtracts the scroll buffer to scroll the option down to\n        // the center of the overlay panel. Half the option height must be re-added to the\n        // scrollTop so the option is centered based on its middle, not its top edge.\n        const optimalScrollPosition = optionOffsetFromScrollTop - scrollBuffer + halfOptionHeight;\n\n        return Math.min(Math.max(0, optimalScrollPosition), maxScroll);\n    }\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    onContainerClick() {\n        this.focus();\n        this.open();\n    }\n\n    /** Invoked when an option is clicked. */\n    onRemoveMatcherItem(option: McOption, $event): void {\n        $event.stopPropagation();\n\n        option.deselect();\n    }\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    get shouldLabelFloat(): boolean {\n        return this._panelOpen || !this.empty;\n    }\n\n    _calculateHiddenItems(): void {\n        if (this.empty) { return; }\n\n        let visibleItems: number = 0;\n        const totalItemsWidth = this._getTotalItemsWidthInMatcher();\n        let totalVisibleItemsWidth: number = 0;\n        const itemMargin: number = 4;\n\n        this.tags.forEach((tag) => {\n            if (tag.nativeElement.offsetTop < tag.nativeElement.offsetHeight) {\n                totalVisibleItemsWidth += tag.nativeElement.getBoundingClientRect().width + itemMargin;\n                visibleItems++;\n            }\n        });\n\n        this.hiddenItems = (this.selected as ArrayLike<McOption>).length - visibleItems;\n\n        if (this.hiddenItems) {\n            const itemsCounter = this.trigger.nativeElement.querySelector('.mc-select__match-hidden-text');\n            const matcherList = this.trigger.nativeElement.querySelector('.mc-select__match-list');\n\n            const itemsCounterShowed = itemsCounter.offsetTop < itemsCounter.offsetHeight;\n            // const itemsCounterWidth: number = itemsCounter.getBoundingClientRect().width;\n            const itemsCounterWidth: number = 86;\n\n            const matcherListWidth: number = matcherList.getBoundingClientRect().width;\n            const matcherWidth: number = matcherListWidth + itemsCounterWidth;\n\n            if (itemsCounterShowed && (totalItemsWidth < matcherWidth)) { this.hiddenItems = 0; }\n\n            if (\n                totalVisibleItemsWidth === matcherListWidth ||\n                (totalVisibleItemsWidth + itemsCounterWidth) < matcherListWidth\n            ) {\n                this._changeDetectorRef.markForCheck();\n\n                return ;\n            } else if (!itemsCounterShowed && (totalItemsWidth + itemsCounterWidth) > matcherWidth) {\n                this.hiddenItems++;\n            }\n        }\n\n        this._changeDetectorRef.markForCheck();\n    }\n\n    private _getTotalItemsWidthInMatcher(): number {\n        const triggerClone = this.trigger.nativeElement.cloneNode(true);\n        triggerClone.querySelector('.mc-select__match-hidden-text').remove();\n\n        this._renderer.setStyle(triggerClone, 'position', 'absolute');\n        this._renderer.setStyle(triggerClone, 'visibility', 'hidden');\n        this._renderer.setStyle(triggerClone, 'top', '-100%');\n        this._renderer.setStyle(triggerClone, 'left', '0');\n\n        this._renderer.appendChild(this.trigger.nativeElement, triggerClone);\n\n        let totalItemsWidth: number = 0;\n        const itemMargin: number = 4;\n        triggerClone.querySelectorAll('mc-tag').forEach((item) => {\n            totalItemsWidth += item.getBoundingClientRect().width as number + itemMargin;\n        });\n\n        triggerClone.remove();\n\n        return totalItemsWidth;\n    }\n\n    /** Handles keyboard events while the select is closed. */\n    private _handleClosedKeydown(event: KeyboardEvent): void {\n        /* tslint:disable-next-line */\n        const keyCode = event.keyCode;\n        const isArrowKey = keyCode === DOWN_ARROW || keyCode === UP_ARROW ||\n            keyCode === LEFT_ARROW || keyCode === RIGHT_ARROW;\n        const isOpenKey = keyCode === ENTER || keyCode === SPACE;\n\n        // Open the select on ALT + arrow key to match the native <select>\n        if (isOpenKey || ((this.multiple || event.altKey) && isArrowKey)) {\n            event.preventDefault(); // prevents the page from scrolling down when pressing space\n            this.open();\n        } else if (!this.multiple) {\n            this._keyManager.onKeydown(event);\n        }\n    }\n\n    /** Handles keyboard events when the selected is open. */\n    private _handleOpenKeydown(event: KeyboardEvent): void {\n        /* tslint:disable-next-line */\n        const keyCode = event.keyCode;\n        const isArrowKey = keyCode === DOWN_ARROW || keyCode === UP_ARROW;\n        const manager = this._keyManager;\n\n        if (keyCode === HOME || keyCode === END) {\n            event.preventDefault();\n\n            if (keyCode === HOME) {\n                manager.setFirstItemActive();\n            } else {\n                manager.setLastItemActive();\n            }\n\n        } else if (isArrowKey && event.altKey) {\n            // Close the select on ALT + arrow key to match the native <select>\n            event.preventDefault();\n            this.close();\n        } else if ((keyCode === ENTER || keyCode === SPACE) && manager.activeItem) {\n            event.preventDefault();\n            manager.activeItem._selectViaInteraction();\n        } else if (this._multiple && keyCode === A && event.ctrlKey) {\n            event.preventDefault();\n            const hasDeselectedOptions = this.options.some((option) => !option.selected);\n            this.options.forEach((option) => {\n                if (hasDeselectedOptions && !option.disabled) {\n                    option.select();\n                } else {\n                    option.deselect();\n                }\n            });\n        } else {\n            const previouslyFocusedIndex = manager.activeItemIndex;\n\n            manager.onKeydown(event);\n\n            if (this._multiple && isArrowKey && event.shiftKey && manager.activeItem &&\n                manager.activeItemIndex !== previouslyFocusedIndex) {\n                manager.activeItem._selectViaInteraction();\n            }\n        }\n    }\n\n    private _initializeSelection(): void {\n        // Defer setting the value in order to avoid the \"Expression\n        // has changed after it was checked\" errors from Angular.\n        Promise.resolve().then(() => {\n            this._setSelectionByValue(this.ngControl ? this.ngControl.value : this._value);\n        });\n    }\n\n    /**\n     * Sets the selected option based on a value. If no option can be\n     * found with the designated value, the select trigger is cleared.\n     */\n    private _setSelectionByValue(value: any | any[]): void {\n        if (this.multiple && value) {\n            if (!Array.isArray(value)) {\n                throw getMcSelectNonArrayValueError();\n            }\n\n            this._selectionModel.clear();\n            value.forEach((currentValue: any) => this._selectValue(currentValue));\n            this._sortValues();\n        } else {\n            this._selectionModel.clear();\n            const correspondingOption = this._selectValue(value);\n\n            // Shift focus to the active item. Note that we shouldn't do this in multiple\n            // mode, because we don't know what option the user interacted with last.\n            if (correspondingOption) {\n                this._keyManager.setActiveItem(correspondingOption);\n            }\n        }\n\n        this._changeDetectorRef.markForCheck();\n    }\n\n    /**\n     * Finds and selects and option based on its value.\n     * @returns Option that has the corresponding value.\n     */\n    private _selectValue(value: any): McOption | undefined {\n        const correspondingOption = this.options.find((option: McOption) => {\n            try {\n                // Treat null as a special reset value.\n                return option.value != null && this._compareWith(option.value, value);\n            } catch (error) {\n                if (isDevMode()) {\n                    // Notify developers of errors in their comparator.\n                    console.warn(error);\n                }\n\n                return false;\n            }\n        });\n\n        if (correspondingOption) {\n            this._selectionModel.select(correspondingOption);\n        }\n\n        return correspondingOption;\n    }\n\n    /** Sets up a key manager to listen to keyboard events on the overlay panel. */\n    private _initKeyManager() {\n        this._keyManager = new ActiveDescendantKeyManager<McOption>(this.options)\n            .withTypeAhead()\n            .withVerticalOrientation()\n            .withHorizontalOrientation(this._isRtl() ? 'rtl' : 'ltr');\n\n        this._keyManager.tabOut\n            .pipe(takeUntil(this._destroy))\n            .subscribe(() => {\n                // Restore focus to the trigger before closing. Ensures that the focus\n                // position won't be lost if the user got focus into the overlay.\n                this.focus();\n                this.close();\n            });\n\n        this._keyManager.change\n            .pipe(takeUntil(this._destroy))\n            .subscribe(() => {\n                if (this._panelOpen && this.panel) {\n                    this._scrollActiveOptionIntoView();\n                } else if (!this._panelOpen && !this.multiple && this._keyManager.activeItem) {\n                    this._keyManager.activeItem._selectViaInteraction();\n                }\n            });\n    }\n\n    /** Drops current option subscriptions and IDs and resets from scratch. */\n    private _resetOptions(): void {\n        const changedOrDestroyed = merge(this.options.changes, this._destroy);\n\n        this.optionSelectionChanges\n            .pipe(takeUntil(changedOrDestroyed))\n            .subscribe((event) => {\n                this._onSelect(event.source, event.isUserInput);\n\n                if (event.isUserInput && !this.multiple && this._panelOpen) {\n                    this.close();\n                    this.focus();\n                }\n            });\n\n        // Listen to changes in the internal state of the options and react accordingly.\n        // Handles cases like the labels of the selected options changing.\n        merge(...this.options.map((option) => option._stateChanges))\n            .pipe(takeUntil(changedOrDestroyed))\n            .subscribe(() => {\n                this._changeDetectorRef.markForCheck();\n                this.stateChanges.next();\n            });\n\n        this._setOptionIds();\n    }\n\n    /** Invoked when an option is clicked. */\n    private _onSelect(option: McOption, isUserInput: boolean): void {\n        const wasSelected = this._selectionModel.isSelected(option);\n\n        if (option.value == null && !this._multiple) {\n            option.deselect();\n            this._selectionModel.clear();\n            this._propagateChanges(option.value);\n        } else {\n            if (option.selected) {\n                this._selectionModel.select(option);\n            } else {\n                this._selectionModel.deselect(option);\n            }\n\n            if (isUserInput) {\n                this._keyManager.setActiveItem(option);\n            }\n\n            if (this.multiple) {\n                this._sortValues();\n\n                if (isUserInput) {\n                    // In case the user selected the option with their mouse, we\n                    // want to restore focus back to the trigger, in order to\n                    // prevent the select keyboard controls from clashing with\n                    // the ones from `mc-option`.\n                    this.focus();\n                }\n            }\n        }\n\n        if (wasSelected !== this._selectionModel.isSelected(option)) {\n            this._propagateChanges();\n        }\n\n        this.stateChanges.next();\n    }\n\n    /** Sorts the selected values in the selected based on their order in the panel. */\n    private _sortValues() {\n        if (this.multiple) {\n            const options = this.options.toArray();\n\n            this._selectionModel.sort((a, b) => {\n                return this.sortComparator ? this.sortComparator(a, b, options) :\n                    options.indexOf(a) - options.indexOf(b);\n            });\n            this.stateChanges.next();\n        }\n    }\n\n    /** Emits change event to set the model value. */\n    private _propagateChanges(fallbackValue?: any): void {\n        let valueToEmit: any = null;\n\n        if (this.multiple) {\n            valueToEmit = (this.selected as McOption[]).map((option) => option.value);\n        } else {\n            valueToEmit = this.selected ? (this.selected as McOption).value : fallbackValue;\n        }\n\n        this._value = valueToEmit;\n        this.valueChange.emit(valueToEmit);\n        this._onChange(valueToEmit);\n        this.selectionChange.emit(new McSelectChange(this, valueToEmit));\n        this._changeDetectorRef.markForCheck();\n    }\n\n    /** Records option IDs to pass to the aria-owns property. */\n    private _setOptionIds() {\n        this._optionIds = this.options.map((option) => option.id).join(' ');\n    }\n\n    /**\n     * Highlights the selected item. If no option is selected, it will highlight\n     * the first item instead.\n     */\n    private _highlightCorrectOption(): void {\n        if (this._keyManager) {\n            if (this.empty) {\n                this._keyManager.setFirstItemActive();\n            } else {\n                this._keyManager.setActiveItem(this._selectionModel.selected[0]);\n            }\n        }\n    }\n\n    /** Scrolls the active option into view. */\n    private _scrollActiveOptionIntoView(): void {\n        const activeOptionIndex = this._keyManager.activeItemIndex || 0;\n        const labelCount = _countGroupLabelsBeforeOption(activeOptionIndex, this.options, this.optionGroups);\n\n        this.panel.nativeElement.scrollTop = _getOptionScrollPosition(\n            activeOptionIndex + labelCount,\n            this._getItemHeight(),\n            this.panel.nativeElement.scrollTop,\n            SELECT_PANEL_MAX_HEIGHT\n        );\n    }\n\n    /** Gets the index of the provided option in the option list. */\n    private _getOptionIndex(option: McOption): number | undefined {\n        /* tslint:disable-next-line */\n        return this.options.reduce((result: number, current: McOption, index: number) => {\n            /* tslint:disable-next-line:strict-type-predicates */\n            return result === undefined ? (option === current ? index : undefined) : result;\n        }, undefined);\n    }\n\n    /** Calculates the scroll position and x- and y-offsets of the overlay panel. */\n    private _calculateOverlayPosition(): void {\n        const itemHeight = this._getItemHeight();\n        const items = this._getItemCount();\n        const panelHeight = Math.min(items * itemHeight, SELECT_PANEL_MAX_HEIGHT);\n        const scrollContainerHeight = items * itemHeight;\n\n        // The farthest the panel can be scrolled before it hits the bottom\n        const maxScroll = scrollContainerHeight - panelHeight;\n\n        // If no value is selected we open the popup to the first item.\n        let selectedOptionOffset =\n            this.empty ? 0 : this._getOptionIndex(this._selectionModel.selected[0])!;\n\n        selectedOptionOffset += _countGroupLabelsBeforeOption(selectedOptionOffset, this.options,\n            this.optionGroups);\n\n        // We must maintain a scroll buffer so the selected option will be scrolled to the\n        // center of the overlay panel rather than the top.\n        /* tslint:disable-next-line:no-magic-numbers */\n        const scrollBuffer = panelHeight / 2;\n        this._scrollTop = this._calculateOverlayScroll(selectedOptionOffset, scrollBuffer, maxScroll);\n        this._offsetY = this._calculateOverlayOffsetY();\n\n        this._checkOverlayWithinViewport(maxScroll);\n    }\n\n    /**\n     * Sets the x-offset of the overlay panel in relation to the trigger's top start corner.\n     * This must be adjusted to align the selected option text over the trigger text when\n     * the panel opens. Will change based on LTR or RTL text direction. Note that the offset\n     * can't be calculated until the panel has been attached, because we need to know the\n     * content width in order to constrain the panel within the viewport.\n     */\n    private _calculateOverlayOffsetX(): void {\n        const overlayRect = this.overlayDir.overlayRef.overlayElement.getBoundingClientRect();\n        const viewportSize = this._viewportRuler.getViewportSize();\n        const isRtl = this._isRtl();\n        /* tslint:disable-next-line:no-magic-numbers */\n        const paddingWidth = SELECT_PANEL_PADDING_X * 2;\n        let offsetX: number;\n\n        const selected = this._selectionModel.selected[0] || this.options.first;\n        offsetX = selected && selected.group ? SELECT_PANEL_INDENT_PADDING_X : SELECT_PANEL_PADDING_X;\n\n        // Invert the offset in LTR.\n        if (!isRtl) { offsetX *= -1; }\n\n        // Determine how much the select overflows on each side.\n        const leftOverflow = 0 - (overlayRect.left + offsetX - (isRtl ? paddingWidth : 0));\n        const rightOverflow = overlayRect.right + offsetX - viewportSize.width\n            + (isRtl ? 0 : paddingWidth);\n\n        // If the element overflows on either side, reduce the offset to allow it to fit.\n        if (leftOverflow > 0) {\n            offsetX += leftOverflow + SELECT_PANEL_VIEWPORT_PADDING;\n        } else if (rightOverflow > 0) {\n            offsetX -= rightOverflow + SELECT_PANEL_VIEWPORT_PADDING;\n        }\n\n        // Set the offset directly in order to avoid having to go through change detection and\n        // potentially triggering \"changed after it was checked\" errors. Round the value to avoid\n        // blurry content in some browsers.\n        this.overlayDir.offsetX = Math.round(offsetX);\n        this.overlayDir.overlayRef.updatePosition();\n    }\n\n    /**\n     * Calculates the y-offset of the select's overlay panel in relation to the\n     * top start corner of the trigger. It has to be adjusted in order for the\n     * selected option to be aligned over the trigger when the panel opens.\n     */\n    private _calculateOverlayOffsetY(): number {\n        // const itemHeight = this._getItemHeight();\n        // const optionHeightAdjustment = (itemHeight - this._triggerRect.height) / 2;\n\n        // todo I'm not sure that we will use it\n        return 0;\n        // return Math.round(-optionHeightAdjustment);\n    }\n\n    /**\n     * Checks that the attempted overlay position will fit within the viewport.\n     * If it will not fit, tries to adjust the scroll position and the associated\n     * y-offset so the panel can open fully on-screen. If it still won't fit,\n     * sets the offset back to 0 to allow the fallback position to take over.\n     */\n    private _checkOverlayWithinViewport(maxScroll: number): void {\n        const itemHeight = this._getItemHeight();\n        const viewportSize = this._viewportRuler.getViewportSize();\n\n        const topSpaceAvailable = this._triggerRect.top - SELECT_PANEL_VIEWPORT_PADDING;\n        const bottomSpaceAvailable =\n            viewportSize.height - this._triggerRect.bottom - SELECT_PANEL_VIEWPORT_PADDING;\n\n        const panelHeightTop = Math.abs(this._offsetY);\n        const totalPanelHeight =\n            Math.min(this._getItemCount() * itemHeight, SELECT_PANEL_MAX_HEIGHT);\n        const panelHeightBottom = totalPanelHeight - panelHeightTop - this._triggerRect.height;\n\n        if (panelHeightBottom > bottomSpaceAvailable) {\n            this._adjustPanelUp(panelHeightBottom, bottomSpaceAvailable);\n        } else if (panelHeightTop > topSpaceAvailable) {\n            this._adjustPanelDown(panelHeightTop, topSpaceAvailable, maxScroll);\n        } else {\n            this._transformOrigin = this._getOriginBasedOnOption();\n        }\n    }\n\n    /** Adjusts the overlay panel up to fit in the viewport. */\n    private _adjustPanelUp(panelHeightBottom: number, bottomSpaceAvailable: number) {\n        // Browsers ignore fractional scroll offsets, so we need to round.\n        const distanceBelowViewport = Math.round(panelHeightBottom - bottomSpaceAvailable);\n\n        // Scrolls the panel up by the distance it was extending past the boundary, then\n        // adjusts the offset by that amount to move the panel up into the viewport.\n        this._scrollTop -= distanceBelowViewport;\n        this._offsetY -= distanceBelowViewport;\n        this._transformOrigin = this._getOriginBasedOnOption();\n\n        // If the panel is scrolled to the very top, it won't be able to fit the panel\n        // by scrolling, so set the offset to 0 to allow the fallback position to take\n        // effect.\n        if (this._scrollTop <= 0) {\n            this._scrollTop = 0;\n            this._offsetY = 0;\n            this._transformOrigin = `50% bottom 0px`;\n        }\n    }\n\n    /** Adjusts the overlay panel down to fit in the viewport. */\n    private _adjustPanelDown(panelHeightTop: number, topSpaceAvailable: number, maxScroll: number) {\n        // Browsers ignore fractional scroll offsets, so we need to round.\n        const distanceAboveViewport = Math.round(panelHeightTop - topSpaceAvailable);\n\n        // Scrolls the panel down by the distance it was extending past the boundary, then\n        // adjusts the offset by that amount to move the panel down into the viewport.\n        this._scrollTop += distanceAboveViewport;\n        this._offsetY += distanceAboveViewport;\n        this._transformOrigin = this._getOriginBasedOnOption();\n\n        // If the panel is scrolled to the very bottom, it won't be able to fit the\n        // panel by scrolling, so set the offset to 0 to allow the fallback position\n        // to take effect.\n        if (this._scrollTop >= maxScroll) {\n            this._scrollTop = maxScroll;\n            this._offsetY = 0;\n            this._transformOrigin = `50% top 0px`;\n\n            return;\n        }\n    }\n\n    /** Sets the transform origin point based on the selected option. */\n    private _getOriginBasedOnOption(): string {\n        const itemHeight = this._getItemHeight();\n        /* tslint:disable-next-line:no-magic-numbers */\n        const optionHeightAdjustment = (itemHeight - this._triggerRect.height) / 2;\n        /* tslint:disable-next-line:no-magic-numbers */\n        const originY = Math.abs(this._offsetY) - optionHeightAdjustment + itemHeight / 2;\n\n        return `50% ${originY}px 0px`;\n    }\n\n    /** Calculates the amount of items in the select. This includes options and group labels. */\n    private _getItemCount(): number {\n        return this.options.length + this.optionGroups.length;\n    }\n\n    /** Calculates the height of the select's options. */\n    private _getItemHeight(): number {\n        /* tslint:disable-next-line:no-magic-numbers */\n        return 32;\n        // return this._triggerFontSize * SELECT_ITEM_HEIGHT_EM;\n    }\n\n    /** Comparison function to specify which option is displayed. Defaults to object equality. */\n    private _compareWith = (o1: any, o2: any) => o1 === o2;\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { OverlayModule } from '@ptsecurity/cdk/overlay';\nimport { McOptionModule } from '@ptsecurity/mosaic/core';\nimport { McFormFieldModule } from '@ptsecurity/mosaic/form-field';\nimport { McIconModule } from '@ptsecurity/mosaic/icon';\nimport { McTagModule } from '@ptsecurity/mosaic/tag';\n\nimport { MC_SELECT_SCROLL_STRATEGY_PROVIDER, McSelect, McSelectTrigger } from './select.component';\n\n\n@NgModule({\n    imports: [\n        CommonModule,\n        OverlayModule,\n        McOptionModule,\n        McIconModule,\n        McTagModule\n    ],\n    exports: [McFormFieldModule, McSelect, McSelectTrigger, McOptionModule, CommonModule],\n    declarations: [McSelect, McSelectTrigger],\n    providers: [MC_SELECT_SCROLL_STRATEGY_PROVIDER]\n})\nexport class McSelectModule {}\n","import {\n    ChangeDetectionStrategy,\n    Component,\n    Directive,\n    ElementRef,\n    Input,\n    NgZone, OnDestroy,\n    OnInit,\n    Renderer2,\n    ViewEncapsulation\n} from '@angular/core';\n\nimport { coerceBooleanProperty, coerceCssPixelValue, coerceNumberProperty } from '@ptsecurity/cdk/coercion';\n\n\ninterface IArea {\n    area: McSplitterAreaDirective;\n    index: number;\n    order: number;\n    initialSize: number;\n}\n\ninterface IPoint {\n    x: number;\n    y: number;\n}\n\n\nconst enum AttributeProperty {\n    Disabled = 'disabled'\n}\n\nconst enum Cursor {\n    Default = 'default',\n    ResizeColumn = 'col-resize',\n    ResizeRow = 'row-resize'\n}\n\nconst enum StyleProperty {\n    Cursor = 'cursor',\n    Flex = 'flex',\n    FlexBasis = 'flex-basis',\n    FlexDirection = 'flex-direction',\n    Height = 'height',\n    MaxWidth = 'max-width',\n    MinHeight = 'min-height',\n    MinWidth = 'minWidth',\n    OffsetHeight = 'offsetHeight',\n    OffsetWidth = 'offsetWidth',\n    Order = 'order',\n    Width = 'width'\n}\n\nconst enum State {\n    Disabled = 'disabled',\n    Horizontal = 'horizontal',\n    Vertical = 'vertical'\n}\n\nexport const enum Direction {\n    Horizontal = 'horizontal',\n    Vertical = 'vertical'\n}\n\n@Component({\n    selector: 'mc-splitter',\n    preserveWhitespaces: false,\n    styleUrls: ['splitter.css'],\n    templateUrl: './splitter.component.html',\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class McSplitterComponent implements OnInit {\n    readonly areas: IArea[] = [];\n\n    private _direction: Direction;\n    private _disabled: boolean = false;\n    private _gutterSize: number = 6;\n\n    private isDragging: boolean = false;\n\n    private readonly areaPositionDivider: number = 2;\n    private readonly listeners: (() => void)[] = [];\n\n    @Input()\n    set direction(direction: Direction) {\n        this._direction = direction;\n    }\n\n    get direction(): Direction {\n        return this._direction;\n    }\n\n    @Input()\n    set disabled(disabled: boolean) {\n        this._disabled = coerceBooleanProperty(disabled);\n    }\n\n    get disabled(): boolean {\n        return this._disabled;\n    }\n\n    @Input()\n    set gutterSize(gutterSize: number) {\n        const size = coerceNumberProperty(gutterSize);\n        this._gutterSize = size > 0 ? size : this.gutterSize;\n    }\n\n    get gutterSize(): number {\n        return this._gutterSize;\n    }\n\n    constructor(private elementRef: ElementRef,\n                private ngZone: NgZone,\n                private renderer: Renderer2) {}\n\n    addArea(area: McSplitterAreaDirective): void {\n        const index: number = this.areas.length;\n        const order: number = index * this.areaPositionDivider;\n        const size: number = area.getSize();\n\n        area.setOrder(order);\n\n        this.areas.push({\n            area,\n            index,\n            order,\n            initialSize: size\n        });\n    }\n\n    ngOnInit(): void {\n        if (!this.direction) {\n            this.direction = Direction.Horizontal;\n        }\n\n        this.setStyle(StyleProperty.FlexDirection, this.isVertical() ? 'column' : 'row');\n    }\n\n    onMouseDown(event: MouseEvent, leftAreaIndex: number, rightAreaIndex: number) {\n        if (this.disabled) {\n            return;\n        }\n\n        const leftArea = this.areas[leftAreaIndex];\n        const rightArea = this.areas[rightAreaIndex];\n\n        const startPoint: IPoint = {\n            x: event.screenX,\n            y: event.screenY\n        };\n\n        leftArea.initialSize = leftArea.area.getSize();\n        rightArea.initialSize = rightArea.area.getSize();\n\n        this.areas.forEach((item) => {\n            const size = item.area.getSize();\n            item.area.disableFlex();\n            item.area.setSize(size);\n        });\n\n        this.ngZone.runOutsideAngular(() => {\n            this.listeners.push(\n                this.renderer.listen(\n                    'document',\n                    'mouseup',\n                    () => this.onMouseUp()\n                )\n            );\n        });\n\n        this.ngZone.runOutsideAngular(() => {\n            this.listeners.push(\n                this.renderer.listen(\n                    'document',\n                    'mousemove',\n                    (e: MouseEvent) => this.onMouseMove(e, startPoint, leftArea, rightArea)\n                )\n            );\n        });\n\n        this.isDragging = true;\n    }\n\n    removeArea(area: McSplitterAreaDirective): void {\n        let indexToRemove: number = -1;\n\n        this.areas.some((item, index) => {\n            if (item.area === area) {\n                indexToRemove = index;\n\n                return true;\n            }\n\n            return false;\n        });\n\n        if (indexToRemove === -1) {\n            return;\n        }\n\n        this.areas.splice(indexToRemove, 1);\n    }\n\n    private isVertical(): boolean {\n        return this.direction === Direction.Vertical;\n    }\n\n    private onMouseMove(event: MouseEvent, startPoint: IPoint, leftArea: IArea, rightArea: IArea) {\n        if (!this.isDragging || this.disabled) {\n            return;\n        }\n\n        const endPoint: IPoint = {\n            x: event.screenX,\n            y: event.screenY\n        };\n\n        const offset = this.isVertical()\n            ? startPoint.y - endPoint.y\n            : startPoint.x - endPoint.x;\n\n        const newLeftAreaSize = leftArea.initialSize - offset;\n        const newRightAreaSize = rightArea.initialSize + offset;\n\n        const minLeftAreaSize = leftArea.area.getMinSize();\n        const minRightAreaSize = rightArea.area.getMinSize();\n\n        if (newLeftAreaSize <= minLeftAreaSize || newRightAreaSize <= minRightAreaSize) {\n            const rightAreaOffset = leftArea.initialSize - minLeftAreaSize;\n\n            leftArea.area.setSize(minLeftAreaSize);\n            rightArea.area.setSize(rightArea.initialSize + rightAreaOffset);\n        } else if (newLeftAreaSize <= 0) {\n            leftArea.area.setSize(0);\n            rightArea.area.setSize(rightArea.initialSize + leftArea.initialSize);\n        } else if (newRightAreaSize <= 0) {\n            leftArea.area.setSize(rightArea.initialSize + leftArea.initialSize);\n            rightArea.area.setSize(0);\n        } else {\n            leftArea.area.setSize(newLeftAreaSize);\n            rightArea.area.setSize(newRightAreaSize);\n        }\n    }\n\n    private onMouseUp() {\n        while (this.listeners.length > 0) {\n            const unsubscribe = this.listeners.pop();\n\n            if (unsubscribe) {\n                unsubscribe();\n            }\n        }\n\n        this.isDragging = false;\n    }\n\n    private setStyle(property: StyleProperty, value: string | number) {\n        this.renderer.setStyle(this.elementRef.nativeElement, property, value);\n    }\n}\n\n@Directive({\n    selector: 'mc-gutter'\n})\nexport class McGutterDirective implements OnInit {\n    private _direction: Direction = Direction.Vertical;\n    private _disabled: boolean = false;\n    private _order: number = 0;\n    private _size: number = 6;\n\n    @Input()\n    set direction(direction: Direction) {\n        this._direction = direction;\n    }\n\n    get direction(): Direction {\n        return this._direction;\n    }\n\n    @Input()\n    set disabled(disabled: boolean) {\n        this._disabled = coerceBooleanProperty(disabled);\n    }\n\n    get disabled(): boolean {\n        return this._disabled;\n    }\n\n    @Input()\n    set order(order: number) {\n        this._order = coerceNumberProperty(order);\n    }\n\n    get order(): number {\n        return this._order;\n    }\n\n    @Input()\n    set size(size: number) {\n        this._size = coerceNumberProperty(size);\n    }\n\n    get size(): number {\n        return this._size;\n    }\n\n    constructor(private renderer: Renderer2,\n                private elementRef: ElementRef) {\n    }\n\n    ngOnInit(): void {\n        this.setStyle(StyleProperty.Cursor, this.getCursor(this.getState()));\n        this.setStyle(StyleProperty.FlexBasis, coerceCssPixelValue(this.size));\n        this.setStyle(this.isVertical() ? StyleProperty.Height : StyleProperty.Width, coerceCssPixelValue(this.size));\n        this.setStyle(StyleProperty.Order, this.order);\n\n        if (!this.isVertical()) {\n            this.setStyle(StyleProperty.Height, '100%');\n        }\n\n        if (this.disabled) {\n            this.setAttr(AttributeProperty.Disabled, 'true');\n        }\n\n        // fix IE issue with gutter icon. flex-direction is requied for flex alignment options\n        this.setStyle(StyleProperty.FlexDirection, this.isVertical() ? 'row' : 'column');\n    }\n\n    private isVertical(): boolean {\n        return this.direction === Direction.Vertical;\n    }\n\n    private getCursor(state: State): string {\n        switch (state) {\n            case State.Disabled:\n                return Cursor.Default;\n            case State.Vertical:\n                return  Cursor.ResizeRow;\n            case State.Horizontal:\n                return Cursor.ResizeColumn;\n            default:\n                throw Error(`Unknown gutter state for cursor: ${state}`);\n        }\n    }\n\n    private getState(): State {\n        return this.disabled\n            ? State.Disabled\n            : this.direction === Direction.Vertical\n                ? State.Vertical\n                : State.Horizontal;\n    }\n\n    private setStyle(property: StyleProperty, value: string | number) {\n        this.renderer.setStyle(this.elementRef.nativeElement, property, value);\n    }\n\n    private setAttr(attribute: AttributeProperty, value: string) {\n        this.renderer.setAttribute(this.elementRef.nativeElement, attribute, value);\n    }\n}\n\n@Directive({\n    selector: 'mc-splitter-area'\n})\nexport class McSplitterAreaDirective implements OnInit, OnDestroy {\n    constructor(private elementRef: ElementRef,\n                private renderer: Renderer2,\n                private splitter: McSplitterComponent) {}\n\n    disableFlex(): void {\n        this.renderer.removeStyle(this.elementRef.nativeElement, 'flex');\n    }\n\n    ngOnInit(): void {\n        this.splitter.addArea(this);\n\n        this.removeStyle(StyleProperty.MaxWidth);\n        this.setStyle(StyleProperty.Flex, '1');\n\n        if (this.splitter.direction === Direction.Vertical) {\n            this.setStyle(StyleProperty.Width, '100%');\n            this.removeStyle(StyleProperty.Height);\n        } else {\n            this.setStyle(StyleProperty.Height, '100%');\n            this.removeStyle(StyleProperty.Width);\n        }\n    }\n\n    ngOnDestroy(): void {\n        this.splitter.removeArea(this);\n    }\n\n    setOrder(order: number): void {\n        this.setStyle(StyleProperty.Order, order);\n    }\n\n    setSize(size: number): void {\n        const sz = coerceNumberProperty(size);\n        this.setStyle(this.getSizeProperty(), coerceCssPixelValue(sz));\n    }\n\n    getSize(): number {\n        return this.elementRef.nativeElement[this.getOffsetSizeProperty()];\n    }\n\n    getMinSize(): number {\n        const styles = getComputedStyle(this.elementRef.nativeElement);\n\n        return parseFloat(styles[this.getMinSizeProperty()]);\n    }\n\n    private isVertical(): boolean {\n        return this.splitter.direction === Direction.Vertical;\n    }\n\n    private getMinSizeProperty(): StyleProperty {\n        return this.isVertical()\n            ? StyleProperty.MinHeight\n            : StyleProperty.MinWidth;\n    }\n\n    private getOffsetSizeProperty(): StyleProperty {\n        return this.isVertical()\n            ? StyleProperty.OffsetHeight\n            : StyleProperty.OffsetWidth;\n    }\n\n    private getSizeProperty(): StyleProperty {\n        return this.isVertical()\n            ? StyleProperty.Height\n            : StyleProperty.Width;\n    }\n\n    private setStyle(style: StyleProperty, value: string | number) {\n        this.renderer.setStyle(this.elementRef.nativeElement, style, value);\n    }\n\n    private removeStyle(style: StyleProperty) {\n        this.renderer.removeStyle(this.elementRef.nativeElement, style);\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { McIconModule } from '@ptsecurity/mosaic/icon';\n\nimport { McGutterDirective, McSplitterAreaDirective, McSplitterComponent } from './splitter.component';\n\n\n@NgModule({\n    imports: [\n        CommonModule,\n        McIconModule\n    ],\n    exports: [\n        McGutterDirective,\n        McSplitterAreaDirective,\n        McSplitterComponent\n    ],\n    declarations: [\n        McGutterDirective,\n        McSplitterAreaDirective,\n        McSplitterComponent\n    ]\n})\nexport class McSplitterModule {\n}\n","// tslint:disable:no-empty\nimport { animate, state, style, transition, trigger } from '@angular/animations';\nimport {\n    Attribute,\n    ChangeDetectionStrategy, ChangeDetectorRef,\n    Component,\n    ElementRef, EventEmitter, forwardRef,\n    Input, Output, ViewChild,\n    ViewEncapsulation\n} from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { FocusMonitor } from '@ptsecurity/cdk/a11y';\nimport {\n    ThemePalette,\n    CanColor, CanColorCtor,\n    CanDisable, CanDisableCtor,\n    HasTabIndex, HasTabIndexCtor,\n    mixinColor,\n    mixinDisabled,\n    mixinTabIndex\n} from '@ptsecurity/mosaic/core';\n\n\nlet nextUniqueId = 0;\n\ntype ToggleLabelPositionType = 'left' | 'right';\n\nexport class McToggleBase {\n    constructor(public _elementRef: ElementRef) {}\n}\n\nexport const _McToggleMixinBase:\n    HasTabIndexCtor &\n    CanDisableCtor &\n    CanColorCtor &\n    typeof McToggleBase = mixinTabIndex(mixinColor(mixinDisabled(McToggleBase)));\n\nexport class McToggleChange {\n    source: McToggleComponent;\n    checked: boolean;\n}\n\n@Component({\n    selector: 'mc-toggle',\n    exportAs: 'mcToggle',\n    templateUrl: './toggle.component.html',\n    styleUrls: ['./toggle.css'],\n    providers: [\n        {provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => McToggleComponent), multi: true}\n    ],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n    inputs: ['disabled', 'color', 'tabIndex'],\n    host: {\n        '[id]': 'id',\n        '[attr.id]': 'id',\n        '[class.mc-disabled]': 'disabled',\n        '[class.mc-toggle-off]': '!checked'\n    },\n    animations: [\n        trigger('switch', [\n            state('true' , style({ left: '50%' })),\n            state('false', style({ left: '1px' })),\n            transition('true <=> false', animate('150ms'))\n        ])\n    ]\n})\nexport class McToggleComponent extends _McToggleMixinBase\n    implements ControlValueAccessor, CanColor, CanDisable, HasTabIndex {\n\n    color: ThemePalette = ThemePalette.Primary;\n\n    @ViewChild('input') _inputElement: ElementRef;\n\n    @Input() labelPosition: ToggleLabelPositionType = 'right';\n\n    @Input('aria-label') ariaLabel: string = '';\n    @Input('aria-labelledby') ariaLabelledby: string | null = null;\n\n    private _uniqueId: string = `mc-toggle-${++nextUniqueId}`;\n\n    // tslint:disable:member-ordering\n    @Input() id: string = this._uniqueId;\n\n    get inputId(): string {\n        return `${this.id || this._uniqueId}-input`;\n    }\n\n    @Input() name: string | null = null;\n\n    @Input() value: string;\n\n    private _disabled: boolean = false;\n\n    @Input()\n    get disabled() {\n        return this._disabled;\n    }\n\n    set disabled(value: any) {\n        if (value !== this._disabled) {\n            this._disabled = value;\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n\n    private _checked: boolean = false;\n\n    get checked() {\n        return this._checked;\n    }\n\n    @Input()\n    set checked(value: boolean) {\n        if (value !== this._checked) {\n            this._checked = value;\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n\n    @Output() readonly change: EventEmitter<McToggleChange> =\n        new EventEmitter<McToggleChange>();\n\n    constructor(public _elementRef: ElementRef,\n                private _focusMonitor: FocusMonitor,\n                private _changeDetectorRef: ChangeDetectorRef,\n                @Attribute('tabindex') tabIndex: string\n    ) {\n        super(_elementRef);\n\n        this.tabIndex = parseInt(tabIndex) || 0;\n\n        this._focusMonitor.monitor(this._elementRef.nativeElement, true);\n    }\n\n    ngOnDestroy() {\n        this._focusMonitor.stopMonitoring(this._elementRef.nativeElement);\n    }\n\n    focus(): void {\n        this._focusMonitor.focusVia(this._inputElement.nativeElement, 'keyboard');\n    }\n\n    _getAriaChecked(): boolean {\n        return this.checked;\n    }\n\n    _onInteractionEvent(event: Event) {\n        event.stopPropagation();\n    }\n\n    _onLabelTextChange() {\n        this._changeDetectorRef.markForCheck();\n    }\n\n    _onInputClick(event: MouseEvent) {\n        event.stopPropagation();\n        this._updateModelValue();\n        this._emitChangeEvent();\n    }\n\n    writeValue(value: any) {\n        this.checked = !!value;\n    }\n\n    registerOnChange(fn: any) {\n        this._onChangeCallback = fn;\n    }\n\n    registerOnTouched(fn: any) {\n        this._onTouchedCallback = fn;\n    }\n\n    setDisabledState(isDisabled: boolean) {\n        this.disabled = isDisabled;\n    }\n\n    private _onTouchedCallback = () => {};\n\n    private _onChangeCallback = (_: any) => {};\n\n    private _updateModelValue() {\n        this._checked = !this.checked;\n        this._onChangeCallback(this.checked);\n        this._onTouchedCallback();\n    }\n\n    private _emitChangeEvent() {\n        const event = new McToggleChange();\n        event.source = this;\n        event.checked = this.checked;\n\n        this._onChangeCallback(this.checked);\n        this.change.emit(event);\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { A11yModule } from '@ptsecurity/cdk/a11y';\nimport { McCommonModule } from '@ptsecurity/mosaic/core';\n\nimport { McToggleComponent } from './toggle.component';\n\n\n@NgModule({\n    imports: [CommonModule, BrowserAnimationsModule, A11yModule, McCommonModule],\n    exports: [McToggleComponent],\n    declarations: [McToggleComponent]\n})\nexport class McToggleModule {\n}\n","import {\n    AfterContentInit,\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component, ContentChildren, Directive, ElementRef, EventEmitter, forwardRef,\n    Input, OnDestroy, OnInit, Optional, Output, QueryList,\n    ViewChild,\n    ViewEncapsulation\n} from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\n\nimport { UniqueSelectionDispatcher } from '@ptsecurity/cdk/collections';\n\nimport {\n    CanColor, CanColorCtor,\n    CanDisable, CanDisableCtor,\n    HasTabIndex, HasTabIndexCtor,\n    mixinColor,\n    mixinDisabled,\n    mixinTabIndex,\n    toBoolean\n} from '@ptsecurity/mosaic/core';\n\n\n// Increasing integer for generating unique ids for radio components.\nlet nextUniqueId = 0;\n\n/** Change event object emitted by McRadio. */\nexport class McRadioChange {\n    constructor(\n        /** The McRadioButton that emits the change event. */\n        public source: McRadioButton,\n        /** The value of the McRadioButton. */\n        public value: any) {}\n}\n\n// Boilerplate for applying mixins to McRadioGroup.\n/** @docs-private */\nexport class McRadioGroupBase {}\nexport const _McRadioGroupMixinBase: CanDisableCtor & typeof McRadioGroupBase = mixinDisabled(McRadioGroupBase);\n\n/**\n * Provider Expression that allows mc-radio-group to register as a ControlValueAccessor. This\n * allows it to support [(ngModel)] and ngControl.\n * @docs-private\n */\nexport const MC_RADIO_GROUP_CONTROL_VALUE_ACCESSOR: any = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => McRadioGroup),\n    multi: true\n};\n\n@Directive({\n    selector: 'mc-radio-group',\n    exportAs: 'mcRadioGroup',\n    providers: [MC_RADIO_GROUP_CONTROL_VALUE_ACCESSOR],\n    host: {\n        role: 'radiogroup',\n        class: 'mc-radio-group'\n    },\n    inputs: ['disabled']\n})\nexport class McRadioGroup extends _McRadioGroupMixinBase\n    implements AfterContentInit, ControlValueAccessor, CanDisable {\n\n    /** Name of the radio button group. All radio buttons inside this group will use this name. */\n    @Input()\n    get name(): string { return this._name; }\n    set name(value: string) {\n        this._name = value;\n        this.updateRadioButtonNames();\n    }\n\n    /** Whether the labels should appear after or before the radio-buttons. Defaults to 'after' */\n    @Input()\n    get labelPosition(): 'before' | 'after' {\n        return this._labelPosition;\n    }\n    set labelPosition(v) {\n        this._labelPosition = v === 'before' ? 'before' : 'after';\n        this.markRadiosForCheck();\n    }\n\n    /** Value of the radio button. */\n    @Input()\n    get value(): any { return this._value; }\n    set value(newValue: any) {\n        if (this._value !== newValue) {\n            // Set this before proceeding to ensure no circular loop occurs with selection.\n            this._value = newValue;\n\n            this.updateSelectedRadioFromValue();\n            this.checkSelectedRadioButton();\n        }\n    }\n\n    /** Whether the radio button is selected. */\n    @Input()\n    get selected() { return this._selected; }\n    set selected(selected: McRadioButton | null) {\n        this._selected = selected;\n        this.value = selected ? selected.value : null;\n        this.checkSelectedRadioButton();\n    }\n\n    /** Whether the radio group is disabled */\n    @Input()\n    get disabled(): boolean { return this._disabled; }\n    set disabled(value) {\n        this._disabled = toBoolean(value);\n        this.markRadiosForCheck();\n    }\n\n    /** Whether the radio group is required */\n    @Input()\n    get required(): boolean { return this._required; }\n    set required(value: boolean) {\n        this._required = toBoolean(value);\n        this.markRadiosForCheck();\n    }\n\n    /**\n     * Event emitted when the group value changes.\n     * Change events are only emitted when the value changes due to user interaction with\n     * a radio button (the same behavior as `<input type-\"radio\">`).\n     */\n    @Output() readonly change: EventEmitter<McRadioChange> = new EventEmitter<McRadioChange>();\n\n    /** Child radio buttons. */\n    @ContentChildren(forwardRef(() => McRadioButton), { descendants: true })\n    _radios: QueryList<McRadioButton>;\n\n    /**\n     * Selected value for group. Should equal the value of the selected radio button if there *is*\n     * a corresponding radio button with a matching value. If there is *not* such a corresponding\n     * radio button, this value persists to be applied in case a new radio button is added with a\n     * matching value.\n     */\n    private _value: any = null;\n\n    /** The HTML name attribute applied to radio buttons in this group. */\n    private _name: string = `mc-radio-group-${nextUniqueId++}`;\n\n    /** The currently selected radio button. Should match value. */\n    private _selected: McRadioButton | null = null;\n\n    /** Whether the `value` has been set to its initial value. */\n    private _isInitialized: boolean = false;\n\n    /** Whether the labels should appear after or before the radio-buttons. Defaults to 'after' */\n    private _labelPosition: 'before' | 'after' = 'after';\n\n    /** Whether the radio group is disabled. */\n    private _disabled: boolean = false;\n\n    /** Whether the radio group is required. */\n    private _required: boolean = false;\n\n    constructor(\n        private readonly _changeDetector: ChangeDetectorRef\n    ) {\n        super();\n    }\n\n    /** The method to be called in order to update ngModel */\n    // tslint:disable-next-line\n    controlValueAccessorChangeFn: (value: any) => void = () => {};\n\n    /**\n     * onTouch function registered via registerOnTouch (ControlValueAccessor).\n     * @docs-private\n     */\n    // tslint:disable-next-line\n    onTouched: () => any = () => {};\n\n    checkSelectedRadioButton() {\n        if (this._selected && !this._selected.checked) {\n            this._selected.checked = true;\n        }\n    }\n\n    /**\n     * Initialize properties once content children are available.\n     * This allows us to propagate relevant attributes to associated buttons.\n     */\n    ngAfterContentInit() {\n        // Mark this component as initialized in AfterContentInit because the initial value can\n        // possibly be set by NgModel on McRadioGroup, and it is possible that the OnInit of the\n        // NgModel occurs *after* the OnInit of the McRadioGroup.\n        this._isInitialized = true;\n    }\n\n    /**\n     * Mark this group as being \"touched\" (for ngModel). Meant to be called by the contained\n     * radio buttons upon their blur.\n     */\n    touch() {\n        if (this.onTouched) {\n            this.onTouched();\n        }\n    }\n\n    /** Dispatch change event with current selection and group value. */\n    emitChangeEvent(): void {\n        if (this._isInitialized) {\n            this.change.emit(new McRadioChange(this._selected!, this._value));\n        }\n    }\n\n    markRadiosForCheck() {\n        if (this._radios) {\n            this._radios.forEach((radio) => radio.markForCheck());\n        }\n    }\n\n    /**\n     * Sets the model value. Implemented as part of ControlValueAccessor.\n     */\n    writeValue(value: any) {\n        this.value = value;\n        this._changeDetector.markForCheck();\n    }\n\n    /**\n     * Registers a callback to be triggered when the model value changes.\n     * Implemented as part of ControlValueAccessor.\n     * @param fn Callback to be registered.\n     */\n    registerOnChange(fn: (value: any) => void) {\n        this.controlValueAccessorChangeFn = fn;\n    }\n\n    /**\n     * Registers a callback to be triggered when the control is touched.\n     * Implemented as part of ControlValueAccessor.\n     * @param fn Callback to be registered.\n     */\n    registerOnTouched(fn: any) {\n        this.onTouched = fn;\n    }\n\n    /**\n     * Sets the disabled state of the control. Implemented as a part of ControlValueAccessor.\n     * @param isDisabled Whether the control should be disabled.\n     */\n    setDisabledState(isDisabled: boolean) {\n        this.disabled = isDisabled;\n        this._changeDetector.markForCheck();\n    }\n\n    private updateRadioButtonNames(): void {\n        if (this._radios) {\n            this._radios.forEach((radio) => {\n                radio.name = this.name;\n            });\n        }\n    }\n\n    /** Updates the `selected` radio button from the internal _value state. */\n    private updateSelectedRadioFromValue(): void {\n        // If the value already matches the selected radio, do nothing.\n        const isAlreadySelected = this._selected !== null && this._selected.value === this._value;\n\n        if (this._radios != null && !isAlreadySelected) {\n            this._selected = null;\n            this._radios.forEach((radio) => {\n                radio.checked = this.value === radio.value;\n                if (radio.checked) {\n                    this._selected = radio;\n                }\n            });\n        }\n    }\n}\n\n\n// Boilerplate for applying mixins to McRadioButton.\n/** @docs-private */\nexport class McRadioButtonBase {\n    // Since the disabled property is manually defined for the McRadioButton and isn't set up in\n    // the mixin base class. To be able to use the tabindex mixin, a disabled property must be\n    // defined to properly work.\n    disabled: boolean;\n\n    constructor(public _elementRef: ElementRef) {}\n}\n\nexport const _McRadioButtonMixinBase:\n    CanColorCtor &\n    HasTabIndexCtor &\n    typeof McRadioButtonBase =\n        mixinColor(mixinTabIndex(McRadioButtonBase));\n\n\n@Component({\n    selector: 'mc-radio-button',\n    templateUrl: 'radio.component.html',\n    styleUrls: ['radio.css'],\n    inputs: ['color', 'tabIndex'],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    exportAs: 'mcRadioButton',\n    host: {\n        class: 'mc-radio-button',\n        '[attr.id]': 'id',\n        '[class.mc-radio-checked]': 'checked',\n        '[class.mc-radio-disabled]': 'disabled',\n        '(focus)': '_inputElement.nativeElement.focus()'\n    }\n})\nexport class McRadioButton extends _McRadioButtonMixinBase\n    implements OnInit, OnDestroy, CanColor, HasTabIndex {\n\n    private readonly _uniqueId: string = `mc-radio-${++nextUniqueId}`;\n\n    /* tslint:disable:member-ordering */\n\n    /** The unique ID for the radio button. */\n    @Input() id: string = this._uniqueId;\n\n    /** Analog to HTML 'name' attribute used to group radios for unique selection. */\n    @Input() name: string;\n\n    /** Used to set the 'aria-label' attribute on the underlying input element. */\n    @Input('aria-label') ariaLabel: string;\n\n    /** The 'aria-labelledby' attribute takes precedence as the element's text alternative. */\n    @Input('aria-labelledby') ariaLabelledby: string;\n\n    /** The 'aria-describedby' attribute is read after the element's label and field type. */\n    @Input('aria-describedby') ariaDescribedby: string;\n\n    /** Whether this radio button is checked. */\n    @Input()\n    get checked(): boolean { return this._checked; }\n    set checked(value: boolean) {\n        const newCheckedState = toBoolean(value);\n\n        if (this._checked !== newCheckedState) {\n            this._checked = newCheckedState;\n\n            if (newCheckedState && this.radioGroup && this.radioGroup.value !== this.value) {\n                this.radioGroup.selected = this;\n            } else if (!newCheckedState && this.radioGroup && this.radioGroup.value === this.value) {\n                // When unchecking the selected radio button, update the selected radio\n                // property on the group.\n                this.radioGroup.selected = null;\n            }\n\n            if (newCheckedState) {\n                // Notify all radio buttons with the same name to un-check.\n                this._radioDispatcher.notify(this.id, this.name);\n            }\n            this._changeDetector.markForCheck();\n        }\n    }\n\n    /** The value of this radio button. */\n    @Input()\n    get value(): any { return this._value; }\n    set value(value: any) {\n        if (this._value !== value) {\n            this._value = value;\n            if (this.radioGroup != null) {\n                if (!this.checked) {\n                    // Update checked when the value changed to match the radio group's value\n                    this.checked = this.radioGroup.value === value;\n                }\n                if (this.checked) {\n                    this.radioGroup.selected = this;\n                }\n            }\n        }\n    }\n\n    /** Whether the radio button is disabled. */\n    @Input()\n    get disabled(): boolean {\n        return this._disabled || (this.radioGroup != null && this.radioGroup.disabled);\n    }\n    set disabled(value: boolean) {\n        const newDisabledState = toBoolean(value);\n\n        if (this._disabled !== newDisabledState) {\n\n            this._disabled = newDisabledState;\n            this._changeDetector.markForCheck();\n        }\n    }\n\n    /** Whether the radio button is required. */\n    @Input()\n    get required(): boolean {\n        return this._required || (this.radioGroup && this.radioGroup.required);\n    }\n    set required(value: boolean) {\n        this._required = toBoolean(value);\n    }\n\n    /** Whether the label should appear after or before the radio button. Defaults to 'after' */\n    @Input()\n    get labelPosition(): 'before' | 'after' {\n        return this._labelPosition || (this.radioGroup && this.radioGroup.labelPosition) || 'after';\n    }\n    set labelPosition(value) {\n        this._labelPosition = value;\n    }\n    private _labelPosition: 'before' | 'after';\n\n    /** The native `<input type=radio>` element */\n    @ViewChild('input') _inputElement: ElementRef;\n\n    /**\n     * Event emitted when the checked state of this radio button changes.\n     * Change events are only emitted when the value changes due to user interaction with\n     * the radio button (the same behavior as `<input type-\"radio\">`).\n     */\n    @Output() readonly change: EventEmitter<McRadioChange> = new EventEmitter<McRadioChange>();\n\n    /** The parent radio group. May or may not be present. */\n    radioGroup: McRadioGroup;\n\n    @Input()\n    isFocused: boolean = false;\n\n    /** ID of the native input element inside `<mc-radio-button>` */\n    get inputId(): string { return `${this.id || this._uniqueId}-input`; }\n\n    /** Whether this radio is checked. */\n    private _checked: boolean = false;\n\n    /** Whether this radio is disabled. */\n    private _disabled: boolean;\n\n    /** Whether this radio is required. */\n    private _required: boolean;\n\n    /** Value assigned to this radio. */\n    private _value: any = null;\n\n    /** Unregister function for _radioDispatcher */\n    // tslint:disable-next-line\n    private readonly removeUniqueSelectionListener: () => void = () => {};\n\n    constructor(\n        @Optional() radioGroup: McRadioGroup,\n        elementRef: ElementRef,\n        private readonly _changeDetector: ChangeDetectorRef,\n        private readonly _radioDispatcher: UniqueSelectionDispatcher\n    ) {\n\n        super(elementRef);\n\n        this.radioGroup = radioGroup;\n\n        this.removeUniqueSelectionListener =\n            _radioDispatcher.listen((id: string, name: string) => {\n                if (id !== this.id && name === this.name) {\n                    this.checked = false;\n                }\n            });\n    }\n\n    ngOnInit() {\n        if (this.radioGroup) {\n            // If the radio is inside a radio group, determine if it should be checked\n            this.checked = this.radioGroup.value === this._value;\n            // Copy name from parent radio group\n            this.name = this.radioGroup.name;\n        }\n    }\n\n    ngOnDestroy() {\n        this.removeUniqueSelectionListener();\n    }\n\n    /** Focuses the radio button. */\n    // tslint:disable-next-line\n    focus(): void {}\n\n    /**\n     * Marks the radio button as needing checking for change detection.\n     * This method is exposed because the parent radio group will directly\n     * update bound properties of the radio button.\n     */\n    markForCheck() {\n        // When group value changes, the button will not be notified. Use `markForCheck` to explicit\n        // update radio button's status\n        this._changeDetector.markForCheck();\n    }\n\n    onInputClick(event: Event) {\n        // We have to stop propagation for click events on the visual hidden input element.\n        // By default, when a user clicks on a label element, a generated click event will be\n        // dispatched on the associated input element. Since we are using a label element as our\n        // root container, the click event on the `radio-button` will be executed twice.\n        // The real click event will bubble up, and the generated click event also tries to bubble up.\n        // This will lead to multiple click events.\n        // Preventing bubbling for the second event will solve that issue.\n        event.stopPropagation();\n    }\n\n    onInputChange(event: Event) {\n        // We always have to stop propagation on the change event.\n        // Otherwise the change event, from the input element, will bubble up and\n        // emit its event object to the `change` output.\n        event.stopPropagation();\n\n        const groupValueChanged = this.radioGroup && this.value !== this.radioGroup.value;\n        this.checked = true;\n        this.emitChangeEvent();\n\n        if (this.radioGroup) {\n            this.radioGroup.controlValueAccessorChangeFn(this.value);\n            this.radioGroup.touch();\n            if (groupValueChanged) {\n                this.radioGroup.emitChangeEvent();\n            }\n        }\n    }\n\n    /** Dispatch change event with current value. */\n    private emitChangeEvent(): void {\n        this.change.emit(new McRadioChange(this, this._value));\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { A11yModule } from '@ptsecurity/cdk/a11y';\nimport { McCommonModule } from '@ptsecurity/mosaic/core';\n\nimport { McRadioButton, McRadioGroup } from './radio.component';\n\n\n@NgModule({\n    imports: [CommonModule, A11yModule, McCommonModule],\n    exports: [McRadioGroup, McRadioButton],\n    declarations: [McRadioGroup, McRadioButton]\n})\nexport class McRadioModule {\n}\n","import { Directive, Input } from '@angular/core';\n\nimport { CdkTreeNodeDef } from '@ptsecurity/cdk/tree';\n\n\n@Directive({\n    selector: '[mcTreeNodeDef]',\n    inputs: ['when: mcTreeNodeDefWhen'],\n    providers: [{ provide: CdkTreeNodeDef, useExisting: McTreeNodeDef }]\n})\nexport class McTreeNodeDef<T> extends CdkTreeNodeDef<T> {\n    @Input('mcTreeNode') data: T;\n}\n","import { Directive, Input, OnInit } from '@angular/core';\nimport { CdkTreeNodePadding } from '@ptsecurity/cdk/tree';\n\n\n@Directive({\n    selector: '[mcTreeNodePadding]',\n    providers: [{ provide: CdkTreeNodePadding, useExisting: McTreeNodePadding }]\n})\nexport class McTreeNodePadding<T> extends CdkTreeNodePadding<T> implements OnInit {\n    get leftPadding(): number {\n        return (this._withIcon ? 0 : this._iconWidth) + this._baseLeftPadding;\n    }\n\n    _baseLeftPadding: number = 6;\n    _iconWidth: number = 20;\n    _indent: number = 16;\n\n    @Input('mcTreeNodePadding') level: number;\n\n    @Input('mcTreeNodePaddingIndent') indent: number;\n\n    _withIcon: boolean;\n\n    _paddingIndent(): string | null {\n        const nodeLevel = (this._treeNode.data && this._tree.treeControl.getLevel)\n            ? this._tree.treeControl.getLevel(this._treeNode.data)\n            : null;\n\n        const level = this._level || nodeLevel;\n\n        return level ? `${(level * this._indent) + this.leftPadding}px` : `${this._baseLeftPadding}px`;\n    }\n\n    ngOnInit(): void {\n        this._withIcon = this._tree.treeControl.isExpandable(this._treeNode.data);\n        this._setPadding();\n    }\n}\n","import {\n    AfterContentInit,\n    Attribute,\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component, ContentChildren, EventEmitter, forwardRef, Input, IterableDiffer,\n    IterableDiffers, Output, QueryList,\n    ViewChild,\n    ViewEncapsulation,\n    Directive, ElementRef, Inject\n} from '@angular/core';\nimport { NodeDef, ViewData } from '@angular/core/src/view';\n\nimport { SelectionModel } from '@ptsecurity/cdk/collections';\nimport { CdkTreeNode, CdkTree, CdkTreeNodeOutlet } from '@ptsecurity/cdk/tree';\n\nimport {\n    CanDisable, CanDisableCtor,\n    HasTabIndex,\n    HasTabIndexCtor,\n    mixinDisabled,\n    mixinTabIndex,\n    toBoolean\n} from '@ptsecurity/mosaic/core';\n\nimport { FocusKeyManager } from '@ptsecurity/cdk/a11y';\n\nimport { END, ENTER, HOME, LEFT_ARROW, PAGE_DOWN, PAGE_UP, RIGHT_ARROW, SPACE } from '@ptsecurity/cdk/keycodes';\n\n\n/**\n * Wrapper for the CdkTree node with Material design styles.\n */\n@Directive({\n    exportAs: 'mcTreeNodeOption',\n    selector: 'mc-tree-node-option',\n    host: {\n        tabindex: '-1',\n        '[class.mc-selected]': 'selected',\n        '[class.mc-focused]': '_hasFocus',\n        '[attr.aria-expanded]': 'isExpanded',\n        '[attr.aria-level]': 'role === \"treeitem\" ? level : null',\n        class: 'mc-tree-node',\n\n        '(focus)': '_handleFocus()',\n        '(blur)': '_handleBlur()',\n\n        '(click)': '_handleClick()'\n    },\n    providers: [\n        { provide: CdkTreeNode, useExisting: McTreeNodeOption }\n    ]\n})\nexport class McTreeNodeOption<T> extends CdkTreeNode<T> implements CanDisable {\n    @Input() role: 'treeitem' | 'group' = 'treeitem';\n\n    @Input()\n    get disabled() {\n        return this._disabled;\n    }\n\n    set disabled(value: any) {\n        const newValue = toBoolean(value);\n\n        if (newValue !== this._disabled) {\n            this._disabled = newValue;\n        }\n    }\n\n    @Input()\n    get selected(): boolean {\n        return this.treeSelection.selectedOptions && this.treeSelection.selectedOptions.isSelected(this) || false;\n    }\n\n    set selected(value: boolean) {\n        const isSelected = toBoolean(value);\n\n        if (isSelected !== this._selected) {\n            this.setSelected(isSelected);\n\n            // this.treeSelection._reportValueChange();\n        }\n    }\n\n    private _hasFocus: boolean = false;\n\n    private _disabled: boolean = false;\n    private _selected: boolean = false;\n\n    constructor(\n        protected _elementRef: ElementRef,\n        @Inject(forwardRef(() => McTreeSelection))\n        protected treeSelection: McTreeSelection<T>\n    ) {\n        super(_elementRef, treeSelection);\n    }\n\n    focus(): void {\n        this._elementRef.nativeElement.focus();\n\n        this.treeSelection.setFocusedOption(this);\n    }\n\n    toggle(): void {\n        this.selected = !this.selected;\n    }\n\n    setSelected(selected: boolean) {\n        if (this._selected === selected || !this.treeSelection.selectedOptions) { return; }\n\n        this._selected = selected;\n\n        if (selected) {\n            this.treeSelection.selectedOptions.select(this);\n        } else {\n            this.treeSelection.selectedOptions.deselect(this);\n        }\n\n        // this._changeDetector.markForCheck();\n    }\n\n    _getHeight(): number {\n        return this._elementRef.nativeElement.getClientRects()[0].height;\n    }\n\n    _handleFocus(): void {\n        if (this.disabled || this._hasFocus) { return; }\n\n        this._hasFocus = true;\n    }\n\n    _handleBlur(): void {\n        this._hasFocus = false;\n    }\n\n    _handleClick(): void {\n        if (this.disabled) { return; }\n\n        this.treeSelection.setFocusedOption(this);\n    }\n}\n\nexport const _McTreeSelectionBase:\n    HasTabIndexCtor &\n    CanDisableCtor &\n    typeof CdkTree\n    = mixinTabIndex(mixinDisabled(CdkTree));\n\nexport class McTreeNavigationChange {\n    constructor(\n        public source: McTreeSelection<any>,\n        public option: McTreeNodeOption<any>\n    ) {}\n}\n\nexport class McTreeSelectionChange {\n    constructor(\n        public source: McTreeSelection<any>,\n        public option: McTreeNodeOption<any>\n    ) {}\n}\n\n@Component({\n    exportAs: 'mcTreeSelection',\n    selector: 'mc-tree-selection',\n    template: `<ng-container cdkTreeNodeOutlet></ng-container>`,\n    host: {\n        '[tabIndex]': 'tabIndex',\n        class: 'mc-tree-selection',\n        role: 'tree-selection',\n        '(keydown)': '_onKeyDown($event)',\n        '(window:resize)': 'updateScrollSize()'\n    },\n    styleUrls: ['./tree.css'],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    providers: [{ provide: CdkTree, useExisting: McTreeSelection }]\n})\nexport class McTreeSelection<T> extends _McTreeSelectionBase<T>\n    implements AfterContentInit, CanDisable, HasTabIndex {\n    // Outlets within the tree's template where the dataNodes will be inserted.\n    @ViewChild(CdkTreeNodeOutlet) _nodeOutlet: CdkTreeNodeOutlet;\n\n    @ContentChildren(forwardRef(() => McTreeNodeOption)) options: QueryList<McTreeNodeOption<T>>;\n\n    _keyManager: FocusKeyManager<McTreeNodeOption<T>>;\n\n    selectedOptions: SelectionModel<McTreeNodeOption<T>>;\n\n    _disabled: boolean = false;\n    tabIndex: number;\n    multiple: boolean;\n    autoSelect: boolean;\n    noUnselect: boolean;\n\n    // todo temporary solution\n    withShift: boolean;\n    withCtrl: boolean;\n\n    @Input()\n    get disabled(): boolean {\n        return this._disabled;\n    }\n\n    set disabled(rawValue: boolean) {\n        const value = toBoolean(rawValue);\n\n        if (this._disabled !== value) {\n            this._disabled = value;\n\n            if (this._disabled) {\n                console.log('need disable all options');\n            } else {\n                console.log('need enable all options');\n            }\n        }\n    }\n\n    @Output() readonly navigationChange = new EventEmitter<McTreeNavigationChange>();\n\n    @Output() readonly selectionChange = new EventEmitter<McTreeSelectionChange>();\n\n    constructor(\n        private _elementRef: ElementRef,\n        _differs: IterableDiffers,\n        _changeDetectorRef: ChangeDetectorRef,\n        @Attribute('tabindex') tabIndex: string,\n        @Attribute('multiple') multiple: string,\n        @Attribute('auto-select') autoSelect: string,\n        @Attribute('no-unselect') noUnselect: string\n    ) {\n        super(_differs, _changeDetectorRef);\n\n        this.tabIndex = parseInt(tabIndex) || 0;\n\n        this.multiple = multiple === null ? true : toBoolean(multiple);\n        this.autoSelect = autoSelect === null ? true : toBoolean(autoSelect);\n        this.noUnselect = noUnselect === null ? true : toBoolean(noUnselect);\n\n        this.selectedOptions = new SelectionModel<McTreeNodeOption<T>>(this.multiple);\n    }\n\n    _onKeyDown(event: KeyboardEvent) {\n        const keyCode = event.keyCode;\n        this.withShift = event.shiftKey;\n        this.withCtrl = event.ctrlKey;\n\n        switch (keyCode) {\n            case LEFT_ARROW:\n                if (this._keyManager.activeItem) {\n                    this.treeControl.collapse(this._keyManager.activeItem.data);\n                }\n\n                event.preventDefault();\n\n                break;\n            case RIGHT_ARROW:\n                if (this._keyManager.activeItem) {\n                    this.treeControl.expand(this._keyManager.activeItem.data);\n                }\n\n                event.preventDefault();\n\n                break;\n            case SPACE:\n            case ENTER:\n                this.toggleFocusedOption();\n                event.preventDefault();\n\n                break;\n            case HOME:\n                this._keyManager.setFirstItemActive();\n                event.preventDefault();\n\n                break;\n            case END:\n                this._keyManager.setLastItemActive();\n                event.preventDefault();\n\n                break;\n            case PAGE_UP:\n                this._keyManager.setPreviousPageItemActive();\n                event.preventDefault();\n\n                break;\n            case PAGE_DOWN:\n                this._keyManager.setNextPageItemActive();\n                event.preventDefault();\n\n                break;\n            default:\n                this._keyManager.onKeydown(event);\n        }\n    }\n\n    ngAfterContentInit(): void {\n        this._keyManager = new FocusKeyManager<McTreeNodeOption<T>>(this.options)\n            .withTypeAhead()\n            .withVerticalOrientation(true)\n            .withHorizontalOrientation(null);\n    }\n\n    updateScrollSize(): void {\n        if (!this.options.first) { return; }\n\n        this._keyManager.withScrollSize(Math.floor(this._getHeight() / this.options.first._getHeight()));\n    }\n\n    setFocusedOption(option: McTreeNodeOption<T>): void {\n        this._keyManager.updateActiveItem(option);\n\n        if (this.withShift && this.multiple) {\n            const previousIndex = this._keyManager.previousActiveItemIndex;\n            const activeIndex = this._keyManager.activeItemIndex;\n\n            if (previousIndex < activeIndex) {\n                this.options.forEach((item, index) => {\n                    if (index >= previousIndex && index <= activeIndex) { item.setSelected(true); }\n                });\n            } else {\n                this.options.forEach((item, index) => {\n                    if (index >= activeIndex && index <= previousIndex) { item.setSelected(true); }\n                });\n            }\n\n            this.withShift = false;\n        } else if (this.withCtrl) {\n            this.withCtrl = false;\n\n            if (!this._canDeselectLast(option)) { return; }\n\n            option.toggle();\n        } else {\n            if (this.autoSelect) {\n                this.options.forEach((item) => item.setSelected(false));\n                option.setSelected(true);\n            }\n        }\n\n        this._emitNavigationEvent(option);\n    }\n\n    // Toggles the selected state of the currently focused option.\n    toggleFocusedOption(): void {\n        const focusedIndex = this._keyManager.activeItemIndex;\n\n        if (focusedIndex != null && this._isValidIndex(focusedIndex)) {\n            const focusedOption: McTreeNodeOption<T> = this.options.toArray()[focusedIndex];\n\n            if (focusedOption && this._canDeselectLast(focusedOption)) {\n                focusedOption.toggle();\n\n                // Emit a change event because the focused option changed its state through user interaction.\n                this._emitChangeEvent(focusedOption);\n            }\n        }\n    }\n\n    renderNodeChanges(\n        data: T[],\n        dataDiffer: IterableDiffer<T> = this._dataDiffer,\n        viewContainer: any = this._nodeOutlet.viewContainer,\n        parentData?: T\n    ) {\n        super.renderNodeChanges(data, dataDiffer, viewContainer, parentData);\n\n        const arrayOfInstances = [];\n\n        viewContainer._embeddedViews.forEach((view: ViewData) => {\n            const viewDef = view.def;\n\n            viewDef.nodes.forEach((node: NodeDef) => {\n                if (viewDef.nodeMatchedQueries === node.matchedQueryIds) {\n                    const nodeData: any = view.nodes[node.nodeIndex];\n\n                    arrayOfInstances.push(nodeData.instance as never);\n                }\n            });\n        });\n\n        if (this.options) {\n            this.options.reset(arrayOfInstances);\n            this.options.notifyOnChanges();\n        }\n\n        this.updateScrollSize();\n    }\n\n    _getHeight(): number {\n        return this._elementRef.nativeElement.getClientRects()[0].height;\n    }\n\n    _emitNavigationEvent(option: McTreeNodeOption<T>): void {\n        this.navigationChange.emit(new McTreeNavigationChange(this, option));\n    }\n\n    _emitChangeEvent(option: McTreeNodeOption<T>): void {\n        this.selectionChange.emit(new McTreeNavigationChange(this, option));\n    }\n\n    /**\n     * Utility to ensure all indexes are valid.\n     * @param index The index to be checked.\n     * @returns True if the index is valid for our list of options.\n     */\n    private _isValidIndex(index: number): boolean {\n        return index >= 0 && index < this.options.length;\n    }\n\n    private _canDeselectLast(option: McTreeNodeOption<T>): boolean {\n        return !(this.noUnselect && this.selectedOptions.selected.length === 1 && option.selected);\n    }\n}\n\n","import { NgModule } from '@angular/core';\n\nimport { CommonModule } from '@angular/common';\nimport { CdkTreeModule } from '@ptsecurity/cdk/tree';\n\nimport { McTreeNodeDef } from './node';\nimport { McTreeNodePadding } from './padding';\nimport { McTreeSelection, McTreeNodeOption } from './tree-selection';\n\n\nconst MC_TREE_DIRECTIVES = [\n    McTreeNodeDef,\n    McTreeNodePadding,\n    McTreeSelection,\n    McTreeNodeOption\n];\n\n@NgModule({\n    imports: [CommonModule, CdkTreeModule],\n    exports: MC_TREE_DIRECTIVES,\n    declarations: MC_TREE_DIRECTIVES\n})\nexport class McTreeModule {}\n","import { ICollectionViewer, DataSource } from '@ptsecurity/cdk/collections';\nimport { FlatTreeControl, ITreeControl } from '@ptsecurity/cdk/tree';\nimport { BehaviorSubject, merge, Observable } from 'rxjs';\nimport { map, take } from 'rxjs/operators';\n\n\n/**\n * Tree flattener to convert a normal type of node to node with children & level information.\n * Transform nested nodes of type `T` to flattened nodes of type `F`.\n *\n * For example, the input data of type `T` is nested, and contains its children data:\n *   SomeNode: {\n *     key: 'Fruits',\n *     children: [\n *       NodeOne: {\n *         key: 'Apple',\n *       },\n *       NodeTwo: {\n *        key: 'Pear',\n *      }\n *    ]\n *  }\n *  After flattener flatten the tree, the structure will become\n *  SomeNode: {\n *    key: 'Fruits',\n *    expandable: true,\n *    level: 1\n *  },\n *  NodeOne: {\n *    key: 'Apple',\n *    expandable: false,\n *    level: 2\n *  },\n *  NodeTwo: {\n *   key: 'Pear',\n *   expandable: false,\n *   level: 2\n * }\n * and the output flattened type is `F` with additional information.\n */\nexport class McTreeFlattener<T, F> {\n\n    constructor(public transformFunction: (node: T, level: number) => F,\n                public getLevel: (node: F) => number,\n                public isExpandable: (node: F) => boolean,\n                public getChildren: (node: T) => Observable<T[]>) {\n    }\n\n    _flattenNode(node: T, level: number,\n                 resultNodes: F[], parentMap: boolean[]): F[] {\n        const flatNode = this.transformFunction(node, level);\n        resultNodes.push(flatNode);\n\n        if (this.isExpandable(flatNode)) {\n            this.getChildren(node).pipe(take(1)).subscribe((children) => {\n                children.forEach((child, index) => {\n                    const childParentMap: boolean[] = parentMap.slice();\n                    childParentMap.push(index !== children.length - 1);\n                    this._flattenNode(child, level + 1, resultNodes, childParentMap);\n                });\n            });\n        }\n\n        return resultNodes;\n    }\n\n    /**\n     * Flatten a list of node type T to flattened version of node F.\n     * Please note that type T may be nested, and the length of `structuredData` may be different\n     * from that of returned list `F[]`.\n     */\n    flattenNodes(structuredData: T[]): F[] {\n        const resultNodes: F[] = [];\n        structuredData.forEach((node) => this._flattenNode(node, 0, resultNodes, []));\n\n        return resultNodes;\n    }\n\n    /**\n     * Expand flattened node with current expansion status.\n     * The returned list may have different length.\n     */\n    expandFlattenedNodes(nodes: F[], treeControl: ITreeControl<F>): F[] {\n        const results: F[] = [];\n        const currentExpand: boolean[] = [];\n        currentExpand[0] = true;\n\n        nodes.forEach((node) => {\n            let expand = true;\n            for (let i = 0; i <= this.getLevel(node); i++) {\n                expand = expand && currentExpand[i];\n            }\n\n            if (expand) { results.push(node); }\n\n            if (this.isExpandable(node)) {\n                currentExpand[this.getLevel(node) + 1] = treeControl.isExpanded(node);\n            }\n        });\n\n        return results;\n    }\n}\n\n\n/**\n * Data source for flat tree.\n * The data source need to handle expansion/collapsion of the tree node and change the data feed\n * to `McTree`.\n * The nested tree nodes of type `T` are flattened through `MсTreeFlattener`, and converted\n * to type `F` for `McTree` to consume.\n */\nexport class McTreeFlatDataSource<T, F> extends DataSource<F> {\n    _flattenedData = new BehaviorSubject<F[]>([]);\n\n    _expandedData = new BehaviorSubject<F[]>([]);\n\n    _data: BehaviorSubject<T[]>;\n\n    get data() {\n        return this._data.value;\n    }\n\n    set data(value: T[]) {\n        this._data.next(value);\n        this._flattenedData.next(this.treeFlattener.flattenNodes(this.data));\n        this.treeControl.dataNodes = this._flattenedData.value;\n    }\n\n    constructor(private treeControl: FlatTreeControl<F>,\n                private treeFlattener: McTreeFlattener<T, F>,\n                initialData: T[] = []) {\n        super();\n        this._data = new BehaviorSubject<T[]>(initialData);\n    }\n\n    connect(collectionViewer: ICollectionViewer): Observable<F[]> {\n        const changes = [\n            collectionViewer.viewChange,\n            this.treeControl.expansionModel.onChange!,\n            this._flattenedData\n        ];\n\n        return merge(...changes).pipe(map(() => {\n            this._expandedData.next(\n                this.treeFlattener.expandFlattenedNodes(this._flattenedData.value, this.treeControl));\n\n            return this._expandedData.value;\n        }));\n    }\n\n    disconnect() {\n        // no op\n    }\n}\n\n","import { ICollectionViewer, DataSource } from '@ptsecurity/cdk/collections';\nimport { BehaviorSubject, merge, Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\n\n/**\n * Data source for nested tree.\n *\n * The data source for nested tree doesn't have to consider node flattener, or the way to expand\n * or collapse. The expansion/collapsion will be handled by ITreeControl and each non-leaf node.\n */\nexport class McTreeNestedDataSource<T> extends DataSource<T> {\n    _data = new BehaviorSubject<T[]>([]);\n\n    /**\n     * Data for the nested tree\n     */\n    get data() {\n        return this._data.value;\n    }\n\n    set data(value: T[]) {\n        this._data.next(value);\n    }\n\n    connect(collectionViewer: ICollectionViewer): Observable<T[]> {\n        return merge(...[collectionViewer.viewChange, this._data])\n            .pipe(map(() => this.data));\n    }\n\n    disconnect() {\n        // no op\n    }\n}\n\n","import {\n    ElementRef,\n    QueryList,\n    ContentChildren,\n    Component,\n    ChangeDetectionStrategy,\n    ViewEncapsulation\n} from '@angular/core';\n\nimport { mixinColor, CanColor, CanColorCtor } from '@ptsecurity/mosaic/core';\nimport { McIcon } from '@ptsecurity/mosaic/icon';\n\n\nexport class McTagBase {\n    constructor(public _elementRef: ElementRef) {}\n}\n\nexport const _McTagMixinBase: CanColorCtor & typeof McTagBase\n    = mixinColor(McTagBase);\n\n\n@Component({\n    selector: 'mc-tag',\n    templateUrl: 'tag.partial.html',\n    styleUrls: ['./tag.css'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n    host: { class: 'mc-tag' },\n    inputs: ['color']\n})\nexport class McTag extends _McTagMixinBase implements CanColor {\n    @ContentChildren(McIcon) contentChildren: QueryList<McIcon>;\n\n    nativeElement: HTMLElement;\n\n    constructor(elementRef: ElementRef) {\n        super(elementRef);\n\n        this.nativeElement = elementRef.nativeElement;\n    }\n\n    ngAfterContentInit() {\n        this._addClassModificatorForIcons();\n    }\n\n    _addClassModificatorForIcons() {\n        const icons = this.contentChildren.map((item) => item._elementRef.nativeElement);\n\n        if (icons.length === 1) {\n            const iconElement = icons[0];\n\n            if (!iconElement.previousElementSibling && !iconElement.nextElementSibling) {\n                if (iconElement.nextSibling) {\n                    iconElement.classList.add('mc-icon_left');\n                    this.nativeElement.classList.add('mc-left-icon');\n                }\n\n                if (iconElement.previousSibling) {\n                    iconElement.classList.add('mc-icon_right');\n                    this.nativeElement.classList.add('mc-right-icon');\n                }\n            }\n        } else if (icons.length > 1) {\n            const firstIconElement = icons[0];\n            const secondIconElement = icons[1];\n\n            firstIconElement.classList.add('mc-icon_left');\n            secondIconElement.classList.add('mc-icon_right');\n        }\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { PlatformModule } from '@ptsecurity/cdk/platform';\n\nimport { McTag } from './tag.component';\n\n\n@NgModule({\n    imports: [\n        CommonModule,\n        PlatformModule\n    ],\n    exports: [\n        McTag\n    ],\n    declarations: [\n        McTag\n    ]\n})\nexport class McTagModule {}\n","import {\n    Directive,\n    DoCheck,\n    ElementRef,\n    forwardRef,\n    Inject,\n    InjectionToken,\n    Input,\n    OnChanges,\n    OnDestroy,\n    Optional,\n    Renderer2,\n    Self\n} from '@angular/core';\nimport {\n    ControlValueAccessor,\n    FormControl,\n    FormGroupDirective,\n    NG_VALIDATORS,\n    NgControl,\n    NgForm,\n    ValidationErrors,\n    ValidatorFn,\n    Validators\n} from '@angular/forms';\nimport {\n    noop,\n    Subject\n} from 'rxjs';\n\nimport { coerceBooleanProperty } from '@ptsecurity/cdk/coercion';\nimport {\n    CanUpdateErrorState,\n    CanUpdateErrorStateCtor,\n    ErrorStateMatcher,\n    mixinErrorState\n} from '@ptsecurity/mosaic/core';\nimport { McFormFieldControl } from '@ptsecurity/mosaic/form-field';\n\nimport {\n    ARROW_DOWN_KEYCODE,\n    ARROW_LEFT_KEYCODE,\n    ARROW_RIGHT_KEYCODE,\n    ARROW_UP_KEYCODE,\n    DEFAULT_TIME_FORMAT,\n    HOURS_PER_DAY,\n    HOURS_MINUTES_REGEXP,\n    HOURS_MINUTES_SECONDS_REGEXP,\n    HOURS_ONLY_REGEXP,\n    MINUTES_PER_HOUR,\n    SECONDS_PER_MINUTE,\n    TIMEFORMAT_PLACEHOLDERS,\n    TimeFormats,\n    TimeParts\n} from './timepicker.constants';\n\n\nlet uniqueComponentIdSuffix: number = 0;\nlet validatorOnChange: () => void = noop;\nlet validator: ValidatorFn | null = () => null;\n\nexport const MC_INPUT_VALUE_ACCESSOR =\n    new InjectionToken<{ value: any }>('MC_INPUT_VALUE_ACCESSOR');\n\nexport class McTimepickerBase {\n    constructor(\n        public _defaultErrorStateMatcher: ErrorStateMatcher,\n        public _parentForm: NgForm,\n        public _parentFormGroup: FormGroupDirective,\n        public ngControl: NgControl) { }\n}\n\n// tslint:disable-next-line naming-convention\nexport const McTimepickerMixinBase:\n    CanUpdateErrorStateCtor &\n    typeof McTimepickerBase = mixinErrorState(McTimepickerBase);\n\n@Directive({\n    selector: 'input[mcTimepicker]',\n    exportAs: 'mcTimepickerInput',\n    host: {\n        class: 'mc-timepicker mc-input',\n        // Native input properties that are overwritten by Angular inputs need to be synced with\n        // the native input element. Otherwise property bindings for those don't work.\n        '[attr.id]': 'id',\n        '[attr.placeholder]': 'placeholder',\n        '[disabled]': 'disabled',\n        '[required]': 'required',\n        '[attr.time-format]': 'timeFormat',\n        '[attr.min-time]': 'minTime',\n        '[attr.max-time]': 'maxTime',\n        '[attr.value]': 'value',\n        '(blur)': 'onBlur()',\n        '(focus)': 'focusChanged(true)',\n        '(input)': 'onInput()',\n        '(paste)': 'onPaste($event)',\n        '(keydown)': 'onKeyDown($event)'\n    },\n    providers: [\n        {\n            provide: NG_VALIDATORS,\n            useValue: {\n                validate(c) { return validator ? validator(c) : null; },\n                registerOnValidatorChange(fn: () => void): void { validatorOnChange = fn; }\n            },\n            multi: true\n        },\n        {\n            provide: McFormFieldControl,\n            useExisting: forwardRef(() => McTimepicker)\n        }\n    ]\n\n})\nexport class McTimepicker extends McTimepickerMixinBase\n    implements McFormFieldControl<any>,\n        OnChanges,\n        OnDestroy,\n        DoCheck,\n        CanUpdateErrorState,\n        ControlValueAccessor {\n\n    /** An object used to control when error messages are shown. */\n    @Input() errorStateMatcher: ErrorStateMatcher;\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    focused: boolean = false;\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    readonly stateChanges: Subject<void> = new Subject<void>();\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    controlType: string = 'mc-timepicker';\n\n    @Input()\n    get disabled(): boolean {\n        if (this.ngControl && this.ngControl.disabled !== null) { return this.ngControl.disabled; }\n\n        return this._disabled;\n    }\n\n    set disabled(value: boolean) {\n        this._disabled = coerceBooleanProperty(value);\n\n        // Browsers may not fire the blur event if the input is disabled too quickly.\n        // Reset from here to ensure that the element doesn't become stuck.\n        if (this.focused) {\n            this.focused = false;\n        }\n\n        this.stateChanges.next();\n    }\n\n    @Input()\n    get id(): string { return this._id; }\n\n    set id(value: string) { this._id = value || this.uid; }\n\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    @Input() placeholder: string;\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    @Input()\n    get required(): boolean { return this._required; }\n\n    set required(value: boolean) { this._required = coerceBooleanProperty(value); }\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    @Input()\n    get value(): string { return this.inputValueAccessor.value; }\n\n    set value(value: string) {\n        if (value !== this.value) {\n            this.inputValueAccessor.value = value;\n            this.applyInputChanges();\n        }\n    }\n\n    @Input('time-format')\n    get timeFormat(): TimeFormats { return this._timeFormat; }\n\n    set timeFormat(formatValue: TimeFormats) {\n        this._timeFormat = Object\n            .keys(TimeFormats)\n            .map((timeFormatKey) => TimeFormats[timeFormatKey])\n            .indexOf(formatValue) > -1 ? formatValue : DEFAULT_TIME_FORMAT;\n\n        validatorOnChange();\n        this.placeholder = TIMEFORMAT_PLACEHOLDERS[this._timeFormat];\n    }\n\n    @Input('min-time')\n    get minTime(): string | null { return this._minTime; }\n\n    set minTime(minValue: string | null) {\n        this._minTime = minValue;\n        this.minDateTime = minValue !== null ? this.getDateFromTimeString(minValue) : undefined;\n        validatorOnChange();\n    }\n\n    @Input('max-time')\n    get maxTime(): string | null { return this._maxTime; }\n\n    set maxTime(maxValue: string | null) {\n        this._maxTime = maxValue;\n        this.maxDateTime = maxValue !== null ? this.getDateFromTimeString(maxValue) : undefined;\n        validatorOnChange();\n    }\n\n    private _id: string;\n    private readonly uid = `mc-timepicker-${uniqueComponentIdSuffix++}`;\n    private _disabled: boolean;\n    private _required: boolean;\n    private previousNativeValue: any;\n    private readonly inputValueAccessor: { value: any };\n    private onChange: (value: any) => void;\n    private onTouched: () => void;\n    private _timeFormat: TimeFormats;\n    private _minTime: string | null = null;\n    private minDateTime: Date | undefined;\n    private _maxTime: string | null = null;\n    private maxDateTime: Date | undefined;\n    private currentDateTimeInput: Date | undefined;\n\n    constructor(private readonly elementRef: ElementRef,\n                @Optional() @Self() public ngControl: NgControl,\n                @Optional() _parentForm: NgForm,\n                @Optional() _parentFormGroup: FormGroupDirective,\n                _defaultErrorStateMatcher: ErrorStateMatcher,\n                @Optional() @Self() @Inject(MC_INPUT_VALUE_ACCESSOR) inputValueAccessor: any,\n                private readonly renderer: Renderer2) {\n        super(_defaultErrorStateMatcher, _parentForm, _parentFormGroup, ngControl);\n\n        // If no input value accessor was explicitly specified, use the element as the input value\n        // accessor.\n        this.inputValueAccessor = inputValueAccessor || this.elementRef.nativeElement;\n\n        this.previousNativeValue = this.value;\n        this.onChange = noop;\n\n        // Force setter to be called in case id was not specified.\n        this.id = this.id;\n\n        this.placeholder = TIMEFORMAT_PLACEHOLDERS[DEFAULT_TIME_FORMAT];\n\n        // Instead of NG_VALUE_ACCESSOR (https://github.com/angular/material2/issues/8158#issuecomment-344618103)\n        if (this.ngControl) { this.ngControl.valueAccessor = this; }\n\n        // Substitute initial empty validator with validator linked to directive object instance (workaround)\n        validator = Validators.compose([\n            () => this.parseValidator(),\n            () => this.minTimeValidator(),\n            () => this.maxTimeValidator()\n        ]);\n    }\n\n    ngOnChanges(): void {\n        this.stateChanges.next();\n    }\n\n    ngOnDestroy(): void {\n        this.stateChanges.complete();\n    }\n\n    ngDoCheck(): void {\n        if (this.ngControl) {\n            // We need to re-evaluate this on every change detection cycle, because there are some\n            // error triggers that we can't subscribe to (e.g. parent form submissions). This means\n            // that whatever logic is in here has to be super lean or we risk destroying the performance.\n            this.updateErrorState();\n        }\n\n        // We need to dirty-check the native element's value, because there are some cases where\n        // we won't be notified when it changes (e.g. the consumer isn't using forms or they're\n        // updating the value using `emitEvent: false`).\n        this.dirtyCheckNativeValue();\n    }\n\n    focus(): void {\n        this.elementRef.nativeElement.focus();\n    }\n\n    focusChanged(isFocused: boolean): void {\n        if (isFocused !== this.focused) {\n            this.focused = isFocused;\n            this.onTouched();\n            this.stateChanges.next();\n        }\n    }\n\n    onBlur() {\n        this.applyInputChanges();\n        this.focusChanged(false);\n    }\n\n    onPaste($event) {\n        $event.preventDefault();\n        const clipboardUserInput: string = $event.clipboardData.getData('text');\n\n        if (this.getDateFromTimeString(clipboardUserInput) === undefined) { return; }\n\n        this.elementRef.nativeElement.value = clipboardUserInput;\n        this.onInput();\n    }\n\n    onInput() {\n        const initialCursorStart: number = this.elementRef.nativeElement.selectionStart;\n        const initialCursorEnd: number = this.elementRef.nativeElement.selectionEnd;\n        let isAutocompleteTriggered: boolean = false;\n\n        const {\n            hoursOnly,\n            hoursAndMinutes,\n            hoursAndMinutesAndSeconds\n        } = this.getParsedTimeParts(this.elementRef.nativeElement.value);\n\n        // tslint:disable no-magic-numbers\n        if (hoursOnly &&\n            hoursOnly[1] &&\n            hoursOnly[1].length === 2) {\n            isAutocompleteTriggered = true;\n        } else if (hoursAndMinutes &&\n            hoursAndMinutes[1].length === 1 &&\n            hoursAndMinutes[2] &&\n            hoursAndMinutes[2].length === 2) {\n            isAutocompleteTriggered = true;\n        } else if (hoursAndMinutesAndSeconds &&\n            hoursAndMinutesAndSeconds[1].length === 2 &&\n            hoursAndMinutesAndSeconds[2].length === 2 &&\n            hoursAndMinutesAndSeconds[3] &&\n            hoursAndMinutesAndSeconds[3].length === 2) {\n            isAutocompleteTriggered = true;\n        }\n        // tslint:enable no-magic-numbers\n\n        this.applyInputChanges({ doTimestringReformat: isAutocompleteTriggered });\n\n        this.elementRef.nativeElement.selectionStart = initialCursorStart;\n        this.elementRef.nativeElement.selectionEnd = initialCursorEnd;\n\n        if (isAutocompleteTriggered && this.ngControl.errors === null) {\n            this.createSelectionOfTimeComponentInInput(initialCursorStart + 1);\n        }\n    }\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    get empty(): boolean {\n        return !this.elementRef.nativeElement.value && !this.isBadInput();\n    }\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    onContainerClick() {\n        this.focus();\n    }\n\n    writeValue(value: Date | null): void {\n        if (value !== null) {\n            this.renderer.setProperty(this.elementRef.nativeElement,\n                'value',\n                this.getTimeStringFromDate(value, this.timeFormat)\n            );\n        }\n        this.onChange(value || null);\n        this.applyInputChanges();\n    }\n\n    onKeyDown(event: KeyboardEvent): void {\n\n        const keyCode: string = this.getKeyCode(event);\n\n        if (keyCode === ARROW_UP_KEYCODE || keyCode === ARROW_DOWN_KEYCODE) {\n            this.upDownTimeByArrowKeys(event);\n        }\n        if (keyCode === ARROW_LEFT_KEYCODE || keyCode === ARROW_RIGHT_KEYCODE) {\n            this.switchSelectionBetweenTimeparts(event);\n        }\n    }\n\n    registerOnChange(fn: (value: Date) => void): void {\n        this.onChange = fn;\n    }\n\n    registerOnTouched(fn: () => void): void {\n        this.onTouched = fn;\n    }\n\n    /** Does some manual dirty checking on the native input `value` property. */\n    private dirtyCheckNativeValue() {\n        const newValue = this.value;\n\n        if (this.previousNativeValue !== newValue) {\n            this.previousNativeValue = newValue;\n            this.stateChanges.next();\n        }\n    }\n\n    /** Checks whether the input is invalid based on the native validation. */\n    private isBadInput(): boolean {\n        const validity = (<HTMLInputElement> this.elementRef.nativeElement).validity;\n\n        return validity && validity.badInput;\n    }\n\n    private applyInputChanges(applyParams: {\n        changedTime?: Date;\n        doTimestringReformat?: boolean;\n    } = {}): void {\n        const { changedTime, doTimestringReformat = true } = applyParams;\n\n        const timeToApply: Date | undefined = changedTime ||\n            this.getDateFromTimeString(this.elementRef.nativeElement.value);\n        this.currentDateTimeInput = timeToApply;\n\n        if (doTimestringReformat && timeToApply !== undefined) {\n            const selectionStart: number = this.elementRef.nativeElement.selectionStart;\n            const selectionEnd: number = this.elementRef.nativeElement.selectionEnd;\n            this.renderer.setProperty(\n                this.elementRef.nativeElement,\n                'value',\n                this.getTimeStringFromDate(timeToApply, this.timeFormat));\n            this.elementRef.nativeElement.selectionStart = selectionStart;\n            this.elementRef.nativeElement.selectionEnd = selectionEnd;\n        }\n\n        (<FormControl> this.ngControl.control).updateValueAndValidity();\n        const result = this.ngControl.errors === null && timeToApply !== undefined ? timeToApply : null;\n        this.onChange(result);\n        this.stateChanges.next();\n    }\n\n    private upDownTimeByArrowKeys(event: KeyboardEvent): void {\n        event.preventDefault();\n\n        let changedTime: Date | undefined = this.currentDateTimeInput;\n        if (changedTime !== undefined) {\n            const cursorPos = this.elementRef.nativeElement.selectionStart;\n\n            const modifiedTimePart = this.getTimeEditMetrics(cursorPos)\n                .modifiedTimePart;\n            const keyCode: string = this.getKeyCode(event);\n            if (keyCode === ARROW_UP_KEYCODE) { changedTime = this.incrementTime(changedTime, modifiedTimePart); }\n            if (keyCode === ARROW_DOWN_KEYCODE) { changedTime = this.decrementTime(changedTime, modifiedTimePart); }\n            this.applyInputChanges({ changedTime });\n            this.createSelectionOfTimeComponentInInput(cursorPos);\n        }\n    }\n\n    private switchSelectionBetweenTimeparts(event: KeyboardEvent): void {\n        const changedTime: Date | undefined = this.currentDateTimeInput;\n        const keyCode: string = this.getKeyCode(event);\n\n        if (changedTime !== undefined) {\n            let cursorPos: number = this.elementRef.nativeElement.selectionStart;\n            if (keyCode === ARROW_LEFT_KEYCODE) {\n                cursorPos = this.getCursorPositionOfPrevTimePartStart(cursorPos, this.elementRef.nativeElement.value);\n            } else if (keyCode === ARROW_RIGHT_KEYCODE) {\n                cursorPos = this.getCursorPositionOfNextTimePartStart(cursorPos, this.elementRef.nativeElement.value);\n            }\n            this.createSelectionOfTimeComponentInInput(cursorPos);\n        }\n    }\n\n    /**\n     * @description Microsoft EDGE doesn't support KeyboaedEvent.code thus we need this helper\n     */\n    private getKeyCode(event: KeyboardEvent): string {\n        return event.code || event.key;\n    }\n\n    private createSelectionOfTimeComponentInInput(cursorPos: number): void {\n        setTimeout(() => {\n            const newEditParams = this.getTimeEditMetrics(cursorPos);\n            this.elementRef.nativeElement.selectionStart = newEditParams.cursorStartPosition;\n            this.elementRef.nativeElement.selectionEnd = newEditParams.cursorEndPosition;\n        });\n    }\n\n    private incrementTime(dateVal: Date,\n                          whatToIncrement: TimeParts = TimeParts.seconds): Date {\n        let { hours, minutes, seconds } = this.getTimeDigitsFromDate(dateVal);\n\n        switch (whatToIncrement) {\n            case TimeParts.hours:\n                hours++;\n                break;\n            case TimeParts.minutes:\n                minutes++;\n                break;\n            case TimeParts.seconds:\n                seconds++;\n                break;\n            default:\n        }\n\n        if (seconds > SECONDS_PER_MINUTE) { seconds = 0; }\n\n        if (minutes > MINUTES_PER_HOUR) { minutes = 0; }\n\n        if (hours > HOURS_PER_DAY) { hours = 0; }\n\n        return <Date> this.getDateFromTimeDigits(hours, minutes, seconds);\n    }\n\n    /**\n     * @description Decrement part of time\n     */\n    private decrementTime(dateVal: Date,\n                          whatToDecrement: TimeParts = TimeParts.seconds): Date {\n        let { hours, minutes, seconds } = this.getTimeDigitsFromDate(dateVal);\n\n        switch (whatToDecrement) {\n            case TimeParts.hours:\n                hours--;\n                break;\n            case TimeParts.minutes:\n                minutes--;\n                break;\n            case TimeParts.seconds:\n                seconds--;\n                break;\n            default:\n        }\n\n        if (seconds < 0) { seconds = SECONDS_PER_MINUTE; }\n\n        if (minutes < 0) { minutes = MINUTES_PER_HOUR; }\n\n        if (hours < 0) { hours = HOURS_PER_DAY; }\n\n        return <Date> this.getDateFromTimeDigits(hours, minutes, seconds);\n    }\n\n    private getCursorPositionOfPrevTimePartStart(cursorPos: number, timeString: string): number {\n        return cursorPos === 0 ? timeString.length : cursorPos - 1;\n    }\n\n    private getCursorPositionOfNextTimePartStart(cursorPos: number,\n                                                 timeString: string,\n                                                 timeDevider: string = ':'): number {\n        const nextDividerPos: number = timeString.indexOf(timeDevider, cursorPos);\n\n        return nextDividerPos !== undefined ? nextDividerPos + 1 : 0;\n    }\n\n    /**\n     * @description Get params for arrow-keys (up/down) time valie edit.\n     * @param cursorPosition Current cursor position in timeString\n     */\n    private getTimeEditMetrics(cursorPosition: number): {\n        modifiedTimePart: TimeParts;\n        cursorStartPosition: number;\n        cursorEndPosition: number;\n    } {\n        const timeString: string = this.elementRef.nativeElement.value;\n        let modifiedTimePart: TimeParts;\n        let cursorStartPosition: number;\n        let cursorEndPosition: number;\n        const hoursIndex = 0;\n        const minutesIndex = timeString.indexOf(':', hoursIndex + 1);\n        const secondsIndex = minutesIndex !== -1 ? timeString.indexOf(':', minutesIndex + 1) : -1;\n\n        if (secondsIndex !== -1 && cursorPosition > secondsIndex) {\n            modifiedTimePart = TimeParts.seconds;\n            cursorStartPosition = secondsIndex + 1;\n            cursorEndPosition = timeString.length;\n        } else if (minutesIndex !== -1 && cursorPosition > minutesIndex) {\n            modifiedTimePart = TimeParts.minutes;\n            cursorStartPosition = minutesIndex + 1;\n            cursorEndPosition = secondsIndex > -1 ? secondsIndex : timeString.length;\n        } else {\n            modifiedTimePart = TimeParts.hours;\n            cursorStartPosition = hoursIndex;\n            cursorEndPosition = minutesIndex !== -1 ? minutesIndex : timeString.length;\n        }\n\n        return {\n            modifiedTimePart,\n            cursorStartPosition,\n            cursorEndPosition\n        };\n    }\n\n    /**\n     * @description Create time string for displaying inside input element of UI\n     */\n    private getTimeStringFromDate(tempVal: Date,\n                                  timeFormat: TimeFormats = DEFAULT_TIME_FORMAT): string {\n        const hours: string = this.getNumberWithLeadingZero(tempVal.getHours());\n        const minutes: string = this.getNumberWithLeadingZero(tempVal.getMinutes());\n        const seconds: string = this.getNumberWithLeadingZero(tempVal.getSeconds());\n\n        const formattedTimeGenerators = {\n            [TimeFormats.HHmm]: () => `${hours}:${minutes}`,\n            [TimeFormats.HHmmss]: () => `${hours}:${minutes}:${seconds}`\n        };\n\n        return formattedTimeGenerators[timeFormat]();\n    }\n\n    private getParsedTimeParts(timeString: string): {\n        hoursOnly: any;\n        hoursAndMinutes: any;\n        hoursAndMinutesAndSeconds: any;\n    } {\n        const hoursAndMinutesAndSeconds = timeString.match(HOURS_MINUTES_SECONDS_REGEXP);\n        const hoursAndMinutes = timeString.match(HOURS_MINUTES_REGEXP);\n        const hoursOnly = timeString.match(HOURS_ONLY_REGEXP);\n\n        return {\n            hoursOnly,\n            hoursAndMinutes,\n            hoursAndMinutesAndSeconds\n        };\n    }\n\n    /**\n     * @description Create Date object from separate parts of time\n     */\n    private getDateFromTimeDigits(hours: number, minutes: number, seconds: number = 0): Date | undefined {\n        return this.getDateFromTimeString(`${hours}:${minutes}:${seconds}`);\n    }\n\n    private getDateFromTimeString(timeString: string | undefined): Date | undefined {\n        // TODO Use moment-js\n        if (timeString === undefined) { return; }\n\n        const {\n            hoursOnly,\n            hoursAndMinutes,\n            hoursAndMinutesAndSeconds\n        } = this.getParsedTimeParts(timeString);\n\n        if (timeString.trim().length === 0 ||\n            hoursOnly === null && hoursAndMinutes === null && hoursAndMinutesAndSeconds === null) {\n            return;\n        }\n\n        // tslint:disable no-magic-numbers\n        let hours: number = 0;\n        let minutes: number = 0;\n        let seconds: number = 0;\n\n        if (hoursOnly) {\n            hours = Number(hoursOnly[1]);\n        } else if (hoursAndMinutes) {\n            hours = Number(hoursAndMinutes[1]);\n            minutes = Number(hoursAndMinutes[2]);\n        } else if (hoursAndMinutesAndSeconds) {\n            hours = Number(hoursAndMinutesAndSeconds[1]);\n            minutes = Number(hoursAndMinutesAndSeconds[2]);\n            seconds = Number(hoursAndMinutesAndSeconds[3]);\n        }\n        // const timestamp: number = Date.parse(fullDateString);\n        const resultDate: Date = new Date(1970, 0, 1, hours, minutes, seconds);\n        // tslint:enable no-magic-numbers\n\n        return isNaN(resultDate.getTime()) ? undefined : resultDate;\n    }\n\n    private getNumberWithLeadingZero(digit: number): string {\n        const MAX_DIGIT_WITH_LEADING_ZERO: number = 9;\n\n        return digit > MAX_DIGIT_WITH_LEADING_ZERO ? `${digit}` : `0${digit}`;\n    }\n\n    private getTimeDigitsFromDate(dateVal: Date): { hours: number; minutes: number; seconds: number } {\n        return {\n            hours: dateVal.getHours(),\n            minutes: dateVal.getMinutes(),\n            seconds: dateVal.getSeconds()\n        };\n    }\n\n    private parseValidator(): ValidationErrors | null {\n        return this.currentDateTimeInput === undefined ?\n            { mcTimepickerParse: { text: this.elementRef.nativeElement.value } } :\n            null;\n    }\n\n    private minTimeValidator(): ValidationErrors | null {\n\n        if (this.currentDateTimeInput !== undefined &&\n            this.minDateTime !== undefined &&\n            this.isTimeLowerThenMin(this.currentDateTimeInput)) {\n            return { mcTimepickerLowerThenMintime: { text: this.elementRef.nativeElement.value } };\n        }\n\n        return null;\n    }\n\n    private maxTimeValidator(): ValidationErrors | null {\n        if (this.currentDateTimeInput !== undefined &&\n            this.maxDateTime !== undefined &&\n            this.isTimeGreaterThenMax(this.currentDateTimeInput)) {\n            return { mcTimepickerHigherThenMaxtime: { text: this.elementRef.nativeElement.value } };\n        }\n\n        return null;\n    }\n\n    private isTimeLowerThenMin(timeToCompare: Date): boolean {\n        return timeToCompare.getTime() - (<Date> this.minDateTime).getTime() < 0;\n    }\n\n    private isTimeGreaterThenMax(timeToCompare: Date): boolean {\n        return timeToCompare.getTime() - (<Date> this.maxDateTime).getTime() >= 0;\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\n\nimport { A11yModule } from '@ptsecurity/cdk/a11y';\nimport { PlatformModule } from '@ptsecurity/cdk/platform';\n\nimport { McTimepicker } from './timepicker';\n\n\n@NgModule({\n    imports: [\n        CommonModule,\n        A11yModule,\n        PlatformModule,\n        FormsModule\n    ],\n    declarations: [\n        McTimepicker\n    ],\n    exports: [\n        McTimepicker\n    ]\n})\nexport class McTimepickerModule {}\n","import {\n    animate,\n    AnimationTriggerMetadata,\n    state,\n    style,\n    transition,\n    trigger,\n    query,\n    animateChild,\n    group\n} from '@angular/animations';\n\n\n/**\n * The following are all the animations for the mat-select component, with each\n * const containing the metadata for one animation.\n *\n * The values below match the implementation of the AngularJS Material mat-select animation.\n */\nexport const mcSelectAnimations: {\n    readonly transformPanel: AnimationTriggerMetadata;\n    readonly fadeInContent: AnimationTriggerMetadata;\n} = {\n    /**\n     * This animation transforms the select's overlay panel on and off the page.\n     *\n     * When the panel is attached to the DOM, it expands its width by the amount of padding, scales it\n     * up to 100% on the Y axis, fades in its border, and translates slightly up and to the\n     * side to ensure the option text correctly overlaps the trigger text.\n     *\n     * When the panel is removed from the DOM, it simply fades out linearly.\n     */\n    transformPanel: trigger('transformPanel', [\n        state('void', style({\n            transform: 'scaleY(0)',\n            minWidth: '100%',\n            opacity: 0\n        })),\n        transition('void => *', group([\n            query('@fadeInContent', animateChild()),\n            animate('150ms cubic-bezier(0.25, 0.8, 0.25, 1)')\n        ])),\n        transition('* => void', [\n            animate('250ms 100ms linear', style({ opacity: 0 }))\n        ])\n    ]),\n\n    /**\n     * This animation fades in the background color and text content of the\n     * select's options. It is time delayed to occur 100ms after the overlay\n     * panel has transformed in.\n     */\n    fadeInContent: trigger('fadeInContent', [\n        state('showing', style({ opacity: 1 })),\n        transition('void => showing', [\n            style({ opacity: 0 }),\n            animate('150ms 100ms cubic-bezier(0.55, 0, 0.55, 0.2)')\n        ])\n    ])\n};\n\n\n/**\n * @deprecated\n * @breaking-change 7.0.0\n */\nexport const transformPanel = mcSelectAnimations.transformPanel;\n\n/**\n * @deprecated\n * @breaking-change 7.0.0\n */\nexport const fadeInContent = mcSelectAnimations.fadeInContent;\n","import { DOCUMENT } from '@angular/common';\nimport {\n    AfterViewInit, ChangeDetectionStrategy, ChangeDetectorRef,\n    Component,\n    ComponentFactoryResolver,\n    ComponentRef,\n    ElementRef,\n    EventEmitter,\n    Inject,\n    Injector,\n    Input,\n    OnChanges,\n    OnDestroy,\n    OnInit,\n    Output,\n    Renderer2,\n    SimpleChanges,\n    TemplateRef,\n    Type,\n    ViewChild,\n    ViewContainerRef, ViewEncapsulation\n} from '@angular/core';\nimport { ESCAPE } from '@ptsecurity/cdk/keycodes';\nimport { Overlay, OverlayRef } from '@ptsecurity/cdk/overlay';\nimport { McMeasureScrollbarService } from '@ptsecurity/mosaic/core';\nimport { Observable } from 'rxjs';\n\nimport { McModalControlService } from './modal-control.service';\nimport { McModalRef } from './modal-ref.class';\n// tslint:disable-next-line\nimport ModalUtil from './modal-util';\nimport { IModalButtonOptions, IModalOptions, ModalType, OnClickCallback } from './modal.type';\n\n\n// Duration when perform animations (ms)\nexport const MODAL_ANIMATE_DURATION = 200;\n\ntype AnimationState = 'enter' | 'leave' | null;\n\n@Component({\n    selector: 'mc-modal',\n    templateUrl: './modal.component.html',\n    styleUrls: ['./modal.css'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n    host: {\n        '(keydown)': 'onKeyDown($event)'\n    }\n})\nexport class McModalComponent<T = any, R = any> extends McModalRef<T, R>\n    implements OnInit, OnChanges, AfterViewInit, OnDestroy, IModalOptions {\n\n    // tslint:disable-next-line:no-any\n    @Input() mcModalType: ModalType = 'default';\n    // If not specified, will use <ng-content>\n    @Input() mcContent: string | TemplateRef<{}> | Type<T>;\n    // available when mcContent is a component\n    @Input() mcComponentParams: object;\n    // Default Modal ONLY\n    @Input() mcFooter: string | TemplateRef<{}> | IModalButtonOptions<T>[];\n\n    @Input()\n    get mcVisible() { return this._mcVisible; }\n    set mcVisible(value) { this._mcVisible = value; }\n    _mcVisible = false;\n\n    @Output() mcVisibleChange = new EventEmitter<boolean>();\n\n    @Input() mcZIndex: number = 1000;\n    @Input() mcWidth: number | string = 480;\n    @Input() mcWrapClassName: string;\n    @Input() mcClassName: string;\n    @Input() mcStyle: object;\n    @Input() mcTitle: string | TemplateRef<{}>;\n    @Input() mcCloseByESC: boolean = true;\n\n    @Input()\n    get mcClosable() { return this._mcClosable; }\n    set mcClosable(value) { this._mcClosable = value; }\n    _mcClosable = true;\n\n    @Input()\n    get mcMask() { return this._mcMask; }\n    set mcMask(value) { this._mcMask = value; }\n    _mcMask = true;\n\n    @Input()\n    get mcMaskClosable() { return this._mcMaskClosable; }\n    set mcMaskClosable(value) { this._mcMaskClosable = value; }\n    _mcMaskClosable = true;\n\n    @Input() mcMaskStyle: object;\n    @Input() mcBodyStyle: object;\n\n    // Trigger when modal open(visible) after animations\n    @Output() mcAfterOpen = new EventEmitter<void>();\n    // Trigger when modal leave-animation over\n    @Output() mcAfterClose = new EventEmitter<R>();\n\n    // --- Predefined OK & Cancel buttons\n    @Input() mcOkText: string;\n    @Input() mcOkType = 'primary';\n\n    @Input()\n    get mcOkLoading() { return this._mcOkLoading; }\n    set mcOkLoading(value) { this._mcOkLoading = value; }\n    _mcOkLoading = false;\n\n    @Input() @Output() mcOnOk: EventEmitter<T> | OnClickCallback<T> = new EventEmitter<T>();\n    // Only aim to focus the ok button that needs to be auto focused\n    @ViewChild('autoFocusButtonOk', {read: ElementRef}) autoFocusButtonOk: ElementRef;\n    @Input() mcCancelText: string;\n\n    @Input()\n    get mcCancelLoading() { return this._mcCancelLoading; }\n    set mcCancelLoading(value) { this._mcCancelLoading = value; }\n    _mcCancelLoading = false;\n\n    @Input() @Output() mcOnCancel: EventEmitter<T> | OnClickCallback<T> = new EventEmitter<T>();\n    @ViewChild('modalContainer') modalContainer: ElementRef;\n    @ViewChild('bodyContainer', {read: ViewContainerRef}) bodyContainer: ViewContainerRef;\n    maskAnimationClassMap: object;\n    modalAnimationClassMap: object;\n    // The origin point that animation based on\n    transformOrigin = '0px 0px 0px';\n\n    // Observable alias for mcAfterOpen\n    get afterOpen(): Observable<void> {\n        return this.mcAfterOpen.asObservable();\n    }\n\n    // Observable alias for mcAfterClose\n    get afterClose(): Observable<R> {\n        return this.mcAfterClose.asObservable();\n    }\n\n    get okText(): string {\n        return this.mcOkText;\n    }\n\n    get cancelText(): string {\n        return this.mcCancelText;\n    }\n\n    // Indicate whether this dialog should hidden\n    get hidden(): boolean {\n        return !this.mcVisible && !this.animationState;\n    }\n\n    // Handle the reference when using mcContent as Component\n    private contentComponentRef: ComponentRef<T>;\n    // Current animation state\n    private animationState: AnimationState;\n    private container: HTMLElement | OverlayRef;\n\n    constructor(\n        private overlay: Overlay,\n        private renderer: Renderer2,\n        private cfr: ComponentFactoryResolver,\n        private elementRef: ElementRef,\n        private viewContainer: ViewContainerRef,\n        private mcMeasureScrollbarService: McMeasureScrollbarService,\n        private modalControl: McModalControlService,\n        private changeDetector: ChangeDetectorRef,\n        @Inject(DOCUMENT) private document: any) {\n\n        super();\n    }\n\n    @Input() mcGetContainer: HTMLElement | OverlayRef | (() => HTMLElement | OverlayRef) = () => this.overlay.create();\n\n    ngOnInit() {\n\n        // Create component along without View\n        if (this.isComponent(this.mcContent)) {\n            this.createDynamicComponent(this.mcContent as Type<T>);\n        }\n\n        // Setup default button options\n        if (this.isModalButtons(this.mcFooter)) {\n            this.mcFooter = this.formatModalButtons(this.mcFooter as IModalButtonOptions<T>[]);\n        }\n\n        // Place the modal dom to elsewhere\n        this.container = typeof this.mcGetContainer === 'function' ? this.mcGetContainer() : this.mcGetContainer;\n        if (this.container instanceof HTMLElement) {\n            this.container.appendChild(this.elementRef.nativeElement);\n        } else if (this.container instanceof OverlayRef) {\n            // NOTE: only attach the dom to overlay, the view container is not changed actually\n            this.container.overlayElement.appendChild(this.elementRef.nativeElement);\n        }\n\n        // Register modal when afterOpen/afterClose is stable\n        this.modalControl.registerModal(this);\n    }\n\n    // [NOTE] NOT available when using by service!\n    // Because ngOnChanges never be called when using by service,\n    // here we can't support \"mcContent\"(Component) etc. as inputs that initialized dynamically.\n    // BUT: User also can change \"mcContent\" dynamically to trigger UI changes\n    // (provided you don't use \bComponent that needs initializations)\n    ngOnChanges(changes: SimpleChanges) {\n        if (changes.mcVisible) {\n            // Do not trigger animation while initializing\n            this.handleVisibleStateChange(this.mcVisible, !changes.mcVisible.firstChange);\n        }\n    }\n\n    ngAfterViewInit() {\n        // If using Component, it is the time to attach View while bodyContainer is ready\n        if (this.contentComponentRef) {\n            this.bodyContainer.insert(this.contentComponentRef.hostView);\n        }\n\n        if (this.autoFocusButtonOk) {\n            (this.autoFocusButtonOk.nativeElement as HTMLButtonElement).focus();\n        }\n    }\n\n    ngOnDestroy() {\n        if (this.container instanceof OverlayRef) {\n            this.container.dispose();\n        }\n    }\n\n    open() {\n        this.changeVisibleFromInside(true);\n    }\n\n    close(result?: R) {\n        this.changeVisibleFromInside(false, result);\n    }\n\n    // Destroy equals Close\n    destroy(result?: R) {\n        this.close(result);\n    }\n\n    triggerOk() {\n        this.onClickOkCancel('ok');\n    }\n\n    triggerCancel() {\n        this.onClickOkCancel('cancel');\n    }\n\n    getInstance(): McModalComponent {\n        return this;\n    }\n\n    getContentComponentRef(): ComponentRef<T> {\n        return this.contentComponentRef;\n    }\n\n    getContentComponent(): T {\n        return this.contentComponentRef && this.contentComponentRef.instance;\n    }\n\n    getElement(): HTMLElement {\n        return this.elementRef && this.elementRef.nativeElement;\n    }\n\n    onClickMask($event: MouseEvent) {\n        if (\n            this.mcMask &&\n            this.mcMaskClosable &&\n            ($event.target as HTMLElement).classList.contains('mc-modal-wrap') &&\n            this.mcVisible\n        ) {\n            this.onClickOkCancel('cancel');\n        }\n    }\n\n    // tslint:disable-next-line\n    isModalType(type: ModalType): boolean {\n        return this.mcModalType === type;\n    }\n\n    onKeyDown(event: KeyboardEvent): void {\n\n        if (event.keyCode === ESCAPE && this.container && (this.container instanceof OverlayRef)) {\n\n            this.close();\n            event.preventDefault();\n        }\n    }\n\n    // AoT\n    onClickCloseBtn() {\n        if (this.mcVisible) {\n            this.onClickOkCancel('cancel');\n        }\n    }\n\n    // AoT\n    // tslint:disable-next-line\n    onClickOkCancel(type: 'ok' | 'cancel') {\n        const trigger = { ok: this.mcOnOk, cancel: this.mcOnCancel }[type];\n        const loadingKey = { ok: 'mcOkLoading', cancel: 'mcCancelLoading' }[type];\n\n        if (trigger instanceof EventEmitter) {\n            trigger.emit(this.getContentComponent());\n        } else if (typeof trigger === 'function') {\n\n            const result = trigger(this.getContentComponent());\n            // Users can return \"false\" to prevent closing by default\n            const caseClose = (doClose: boolean | void | {}) => (doClose !== false) && this.close(doClose as R);\n\n            if (isPromise(result)) {\n                this[loadingKey] = true;\n                const handleThen = (doClose) => {\n                    this[loadingKey] = false;\n                    caseClose(doClose);\n                };\n                (result as Promise<void>).then(handleThen).catch(handleThen);\n            } else {\n                caseClose(result);\n            }\n        }\n    }\n\n    // AoT\n    isNonEmptyString(value: {}): boolean {\n        return typeof value === 'string' && value !== '';\n    }\n\n    // AoT\n    isTemplateRef(value: {}): boolean {\n        return value instanceof TemplateRef;\n    }\n\n    // AoT\n    isComponent(value: {}): boolean {\n        return value instanceof Type;\n    }\n\n    // AoT\n    isModalButtons(value: {}): boolean {\n        return Array.isArray(value) && value.length > 0;\n    }\n\n    // Do rest things when visible state changed\n    private handleVisibleStateChange(visible: boolean, animation: boolean = true, closeResult?: R): Promise<any> {\n        // Hide scrollbar at the first time when shown up\n        if (visible) {\n            this.changeBodyOverflow(1);\n        }\n\n        return Promise\n            .resolve(animation && this.animateTo(visible))\n            // Emit open/close event after animations over\n            .then(() => {\n                if (visible) {\n                    this.mcAfterOpen.emit();\n                } else {\n                    this.mcAfterClose.emit(closeResult);\n                    // Show/hide scrollbar when animation is over\n                    this.changeBodyOverflow();\n                }\n            });\n    }\n\n    // Lookup a button's property, if the prop is a function, call & then return the result, otherwise, return itself.\n    // AoT\n    // tslint:disable-next-line\n    getButtonCallableProp(options: IModalButtonOptions<T>, prop: string): {} {\n        const value = options[prop];\n        const args: any[] = [];\n        if (this.contentComponentRef) {\n            args.push(this.contentComponentRef.instance);\n        }\n\n        return typeof value === 'function' ? value.apply(options, args) : value;\n    }\n\n    // On mcFooter's modal button click\n    // AoT\n    // tslint:disable-next-line\n    onButtonClick(button: IModalButtonOptions<T>) {\n        // Call onClick directly\n        const result = this.getButtonCallableProp(button, 'onClick');\n        if (isPromise(result)) {\n            button.loading = true;\n            (result as Promise<{}>).then(() => button.loading = false).catch(() => button.loading = false);\n        }\n    }\n\n    // Change mcVisible from inside\n    private changeVisibleFromInside(visible: boolean, closeResult?: R): Promise<void> {\n        if (this.mcVisible !== visible) {\n            // Change mcVisible value immediately\n            this.mcVisible = visible;\n            this.mcVisibleChange.emit(visible);\n\n            return this.handleVisibleStateChange(visible, true, closeResult);\n        }\n\n        return Promise.resolve();\n    }\n\n    private changeAnimationState(state: AnimationState) {\n        this.animationState = state;\n        if (state) {\n            this.maskAnimationClassMap = {\n                [`fade-${state}`]: true,\n                [`fade-${state}-active`]: true\n            };\n            this.modalAnimationClassMap = {\n                [`zoom-${state}`]: true,\n                [`zoom-${state}-active`]: true\n            };\n        } else {\n            // @ts-ignore\n            this.maskAnimationClassMap = this.modalAnimationClassMap = null;\n        }\n\n        if (this.contentComponentRef) {\n            this.contentComponentRef.changeDetectorRef.markForCheck();\n        } else {\n            this.changeDetector.markForCheck();\n        }\n    }\n\n    private animateTo(isVisible: boolean): Promise<any> {\n        // Figure out the lastest click position when shows up\n        if (isVisible) {\n            // [NOTE] Using timeout due to the document.click event is fired later than visible change,\n            // so if not postponed to next event-loop, we can't get the lastest click position\n            window.setTimeout(() => this.updateTransformOrigin());\n        }\n\n        this.changeAnimationState(isVisible ? 'enter' : 'leave');\n\n        // Return when animation is over\n        return new Promise((resolve) => window.setTimeout(() => {\n            this.changeAnimationState(null);\n            resolve();\n        }, MODAL_ANIMATE_DURATION));\n    }\n\n    private formatModalButtons(buttons: IModalButtonOptions<T>[]): IModalButtonOptions<T>[] {\n        return buttons.map((button) => {\n\n            return {\n                ...{\n                    type: 'default',\n                    size: 'default',\n                    autoLoading: true,\n                    show: true,\n                    loading: false,\n                    disabled: false\n                },\n                ...button\n            };\n        });\n    }\n\n    /**\n     * Create a component dynamically but not attach to any View\n     * (this action will be executed when bodyContainer is ready)\n     * @param component Component class\n     */\n    private createDynamicComponent(component: Type<T>) {\n        const factory = this.cfr.resolveComponentFactory(component);\n        const childInjector = Injector.create({\n            providers: [{provide: McModalRef, useValue: this}],\n            parent: this.viewContainer.parentInjector\n        });\n\n        this.contentComponentRef = factory.create(childInjector);\n\n        if (this.mcComponentParams) {\n            Object.assign(this.contentComponentRef.instance, this.mcComponentParams);\n        }\n\n        // Do the first change detection immediately\n        // (or we do detection at ngAfterViewInit, multi-changes error will be thrown)\n        this.contentComponentRef.changeDetectorRef.detectChanges();\n\n\n    }\n\n    // Update transform-origin to the last click position on document\n    private updateTransformOrigin() {\n        const modalElement = this.modalContainer.nativeElement as HTMLElement;\n        const lastPosition = ModalUtil.getLastClickPosition();\n\n        if (lastPosition) {\n            // tslint:disable-next-line\n            this.transformOrigin = `${lastPosition.x - modalElement.offsetLeft}px ${lastPosition.y - modalElement.offsetTop}px 0px`;\n        }\n    }\n\n    /**\n     * Take care of the body's overflow to decide the existense of scrollbar\n     * @param plusNum The number that the openModals.length will increase soon\n     */\n    private changeBodyOverflow(plusNum: number = 0) {\n        const openModals = this.modalControl.openModals;\n\n        if (openModals.length + plusNum > 0) {\n            // tslint:disable-next-line\n            this.renderer.setStyle(this.document.body, 'padding-right', `${this.mcMeasureScrollbarService.scrollBarWidth}px`);\n            this.renderer.setStyle(this.document.body, 'overflow', 'hidden');\n        } else {\n            this.renderer.removeStyle(this.document.body, 'padding-right');\n            this.renderer.removeStyle(this.document.body, 'overflow');\n        }\n    }\n}\n\n////////////\n\nfunction isPromise(obj: {} | void): boolean {\n    // tslint:disable-next-line\n    return !!obj && (typeof obj === 'object' || typeof obj === 'function') && typeof (obj as Promise<{}>).then === 'function' && typeof (obj as Promise<{}>).catch === 'function';\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n\n@Pipe({\n    name: 'toCssUnit'\n})\nexport class CssUnitPipe implements PipeTransform {\n    transform(value: number | string, defaultUnit: string = 'px'): string {\n        const formatted = +value;\n\n        return isNaN(formatted) ? `${value}` : `${formatted}${defaultUnit}`;\n    }\n}\n","import { ComponentRef, Injectable } from '@angular/core';\n\nimport { Observable } from 'rxjs';\nimport { filter } from 'rxjs/operators';\n\nimport { ESCAPE } from '@ptsecurity/cdk/keycodes';\nimport { Overlay, OverlayRef } from '@ptsecurity/cdk/overlay';\nimport { ComponentPortal } from '@ptsecurity/cdk/portal';\n\nimport { McModalControlService } from './modal-control.service';\nimport { McModalRef } from './modal-ref.class';\nimport { McModalComponent } from './modal.component';\nimport { ConfirmType, IModalOptions, IModalOptionsForService } from './modal.type';\n\n\n// A builder used for managing service creating modals\nexport class ModalBuilderForService {\n\n    // Modal ComponentRef, \"null\" means it has been destroyed\n    private modalRef: ComponentRef<McModalComponent>;\n    private overlayRef: OverlayRef;\n\n    constructor(private overlay: Overlay, options: IModalOptionsForService = {}) {\n        this.createModal();\n\n        if (!('mcGetContainer' in options)) {\n            options.mcGetContainer = null;\n        }\n\n        this.changeProps(options);\n        this.modalRef.instance.open();\n        this.modalRef.instance.mcAfterClose.subscribe(() => this.destroyModal());\n\n        this.overlayRef.keydownEvents()\n            // @ts-ignore\n            .pipe(filter((event: KeyboardEvent) => {\n                return event.keyCode === ESCAPE && options.mcCloseByESC;\n            }))\n            .subscribe(() => this.modalRef.instance.close());\n    }\n\n    getInstance(): McModalComponent {\n        return this.modalRef && this.modalRef.instance;\n    }\n\n    destroyModal(): void {\n        if (this.modalRef) {\n            this.overlayRef.dispose();\n            // @ts-ignore\n            this.modalRef = null;\n        }\n    }\n\n    private changeProps(options: IModalOptions): void {\n        if (this.modalRef) {\n            // here not limit user's inputs at runtime\n            Object.assign(this.modalRef.instance, options);\n        }\n    }\n\n    // Create component to ApplicationRef\n    private createModal(): void {\n        this.overlayRef = this.overlay.create();\n        this.modalRef = this.overlayRef.attach(new ComponentPortal(McModalComponent));\n    }\n}\n\n@Injectable()\nexport class McModalService {\n    // Track of the current close modals (we assume invisible is close this time)\n    get openModals(): McModalRef[] {\n        return this.modalControl.openModals;\n    }\n\n    get afterAllClose(): Observable<void> {\n        return this.modalControl.afterAllClose.asObservable();\n    }\n\n    constructor(\n        private overlay: Overlay,\n        private modalControl: McModalControlService) {\n    }\n\n    // Closes all of the currently-open dialogs\n    closeAll(): void {\n        this.modalControl.closeAll();\n    }\n\n    create<T>(options: IModalOptionsForService<T> = {}): McModalRef<T> {\n\n        if (typeof options.mcOnCancel !== 'function') {\n            // Leave a empty function to close this modal by default\n            // tslint:disable-next-line\n            options.mcOnCancel = () => {};\n        }\n\n        if (!('mcCloseByESC' in options)) {\n            options.mcCloseByESC = true;\n        }\n\n\n        if (!('mcWidth' in options)) {\n            // tslint:disable-next-line\n            options.mcWidth = 480;\n        }\n\n        return new ModalBuilderForService(this.overlay, options).getInstance();\n    }\n\n    confirm<T>(options: IModalOptionsForService<T> = {}, confirmType: ConfirmType = 'confirm'): McModalRef<T> {\n        if ('mcFooter' in options) {\n            console.warn(`The Confirm-Modal doesn't support \"mcFooter\", this property will be ignored.`);\n        }\n\n        // NOTE: only support function currently by calling confirm()\n        if (typeof options.mcOnOk !== 'function') {\n            // Leave a empty function to close this modal by default\n            // tslint:disable-next-line\n            options.mcOnOk = () => {};\n        }\n\n        options.mcModalType = 'confirm';\n        options.mcClassName = `mc-confirm mc-confirm-${confirmType} ${options.mcClassName || ''}`;\n        options.mcMaskClosable = false;\n\n        return this.create(options);\n    }\n\n    success<T>(options: IModalOptionsForService<T> = {}): McModalRef<T> {\n        return this.simpleConfirm(options, 'success');\n    }\n\n    delete<T>(options: IModalOptionsForService<T> = {}): McModalRef<T> {\n        return this.simpleConfirm(options, 'warn');\n    }\n\n    private simpleConfirm<T>(options: IModalOptionsForService<T> = {}, confirmType: ConfirmType): McModalRef<T> {\n        // Remove the Cancel button if the user not specify a Cancel button\n        if (!('mcCancelText' in options)) {\n            // @ts-ignore\n            options.mcCancelText = null;\n        }\n\n        return this.confirm(options, confirmType);\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { OverlayModule } from '@ptsecurity/cdk/overlay';\nimport { McButtonModule } from '@ptsecurity/mosaic/button';\nimport { McIconModule } from '@ptsecurity/mosaic/icon';\n\nimport { CssUnitPipe } from './css-unit.pipe';\nimport { McModalControlService } from './modal-control.service';\nimport { McModalComponent } from './modal.component';\nimport { McModalService } from './modal.service';\n\n\n@NgModule({\n    imports: [ CommonModule, OverlayModule, McButtonModule, McIconModule ],\n    exports: [ McModalComponent ],\n    declarations: [ McModalComponent, CssUnitPipe ],\n    entryComponents: [ McModalComponent ],\n    providers: [ McModalControlService, McModalService ]\n})\nexport class McModalModule { }\n","import { fromEvent, Observable, Subscription } from 'rxjs';\nimport { debounceTime } from 'rxjs/operators';\n\nimport {\n    AfterViewInit,\n    Component, Directive,\n    ElementRef,\n    HostBinding,\n    Input,\n    OnDestroy,\n    OnInit,\n    ViewEncapsulation,\n    ContentChild,\n    TemplateRef,\n    ChangeDetectorRef,\n    ChangeDetectionStrategy,\n    ViewChild\n} from '@angular/core';\nimport { FocusMonitor, FocusOrigin } from '@ptsecurity/cdk/a11y';\nimport { SPACE } from '@ptsecurity/cdk/keycodes';\nimport { Platform } from '@ptsecurity/cdk/platform';\nimport { CanDisable, CanDisableCtor, mixinDisabled } from '@ptsecurity/mosaic/core';\n\n\nconst COLLAPSED_CLASS: string = 'mc-navbar-collapsed-title';\nconst MC_ICON = 'mc-icon';\nconst MC_NAVBAR = 'mc-navbar';\nconst MC_NAVBAR_CONTAINER = 'mc-navbar-container';\nconst MC_NAVBAR_ITEM = 'mc-navbar-item';\nconst MC_NAVBAR_BRAND = 'mc-navbar-brand';\nconst MC_NAVBAR_TITLE = 'mc-navbar-title';\nconst MC_NAVBAR_LOGO = 'mc-navbar-logo';\n\nexport type McNavbarContainerPositionType = 'left' | 'right';\n\nexport interface IMcNavbarDropdownItem {\n    link?: string;\n    text: string;\n}\n\n@Directive({\n    selector: MC_NAVBAR_LOGO,\n    host: {\n        class: MC_NAVBAR_LOGO\n    }\n})\nexport class McNavbarLogo {}\n\n@Directive({\n    selector: MC_NAVBAR_BRAND,\n    host: {\n        class: MC_NAVBAR_BRAND\n    }\n})\nexport class McNavbarBrand {}\n\n@Directive({\n    selector: MC_NAVBAR_TITLE,\n    host: {\n        class: MC_NAVBAR_TITLE\n    }\n})\nexport class McNavbarTitle {}\n\nexport class McNavbarItemBase {\n    constructor(public _elementRef: ElementRef) {}\n}\n\nexport const _McNavbarMixinBase: CanDisableCtor & typeof McNavbarItemBase = mixinDisabled(McNavbarItemBase);\n\n@Component({\n    selector: MC_NAVBAR_ITEM,\n    template: `\n        <a\n            [attr.tabindex]=\\\"disabled ? -1 : tabIndex\\\"\n            (click)=\"handleClickByItem()\"\n            (keydown)=\"handleKeydown($event)\"\n            class=\"mc-navbar-item\"\n        >\n            <ng-content></ng-content>\n            <i *ngIf=\"hasDropdownContent\" mc-icon=\"mc-angle-M_16\"></i>\n        </a>\n        <ul\n            #dropdownContent\n            *ngIf=\"hasDropdownContent\"\n            [ngClass]=\"{ 'is-collapsed': isCollapsed }\"\n            class=\"mc-navbar-dropdown\"\n        >\n            <li\n                *ngFor=\"let item of dropdownItems\"\n                (click)=\"handleClickByDropdownItem()\"\n                class=\"mc-navbar-dropdown-item\"\n            >\n                <ng-container *ngIf=\"dropdownItemTmpl\">\n                    <ng-container *ngTemplateOutlet=\"dropdownItemTmpl; context: { $implicit: item }\"></ng-container>\n                </ng-container>\n                <a\n                    *ngIf=\"!dropdownItemTmpl\"\n                    [attr.href]=\"item.link\"\n                    [ngClass]=\"{ 'is-active': isActiveDropdownLink(item.link) }\"\n                    class=\"mc-navbar-dropdown-link\"\n                >{{ item.text }}</a>\n            </li>\n        </ul>\n    `,\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    inputs: ['disabled'],\n    host: {\n        '[attr.disabled]': 'disabled || null',\n        '[attr.tabindex]': '-1'\n    }\n})\nexport class McNavbarItem extends _McNavbarMixinBase implements OnInit, AfterViewInit, OnDestroy, CanDisable {\n\n    @Input()\n    tabIndex: number = 0;\n\n    @Input()\n    dropdownItems: IMcNavbarDropdownItem[] = [];\n\n    @Input()\n    set collapsedTitle(value: string) {\n        this.elementRef.nativeElement.setAttribute('computedTitle', encodeURI(value));\n    }\n\n    @ContentChild('dropdownItemTmpl', { read: TemplateRef })\n    dropdownItemTmpl: TemplateRef<IMcNavbarDropdownItem>;\n\n    @ViewChild('dropdownContent', { read: ElementRef })\n    dropdownContent: ElementRef;\n\n    get hasDropdownContent() {\n        return this.dropdownItems.length > 0;\n    }\n\n    isCollapsed: boolean = true;\n\n    private _subscription: Subscription = new Subscription();\n    private _focusMonitor$: Observable<FocusOrigin>;\n\n    private get _dropdownElements(): HTMLElement[] {\n        return this.dropdownContent ? this.dropdownContent.nativeElement.querySelectorAll('li > *') : [];\n    }\n\n    constructor(\n        public  elementRef: ElementRef,\n        private _focusMonitor: FocusMonitor,\n        private _platform: Platform,\n        private _cdRef: ChangeDetectorRef\n    ) {\n        super(elementRef);\n    }\n\n    ngOnInit() {\n        this.denyClickIfDisabled();\n\n        this._focusMonitor$ = this._focusMonitor.monitor(this.elementRef.nativeElement, true);\n\n        if (this.hasDropdownContent) {\n            this.listenClickOutside();\n        }\n    }\n\n    ngAfterViewInit() {\n        if (!this.hasDropdownContent) {\n            return;\n        }\n\n        this.startListenFocusDropdownItems();\n    }\n\n    ngOnDestroy() {\n        this._subscription.unsubscribe();\n        this._focusMonitor.stopMonitoring(this.elementRef.nativeElement);\n        this.stopListenFocusDropdownItems();\n    }\n\n    isActiveDropdownLink(link: string): boolean {\n        if (!this._platform.isBrowser) {\n            return false;\n        }\n\n        return window.location.href.indexOf(link) >= 0;\n    }\n\n    handleClickByItem() {\n        this.toggleDropdown();\n    }\n\n    handleKeydown($event: KeyboardEvent) {\n        const isNavbarItem = ($event.target as HTMLElement).classList.contains(MC_NAVBAR_ITEM);\n\n        // tslint:disable-next-line\n        if (this.hasDropdownContent && $event.keyCode === SPACE && isNavbarItem) {\n            this.toggleDropdown();\n        }\n    }\n\n    handleClickByDropdownItem() {\n        this.forceCloseDropdown();\n    }\n\n    private listenClickOutside() {\n        this._subscription.add(\n            this._focusMonitor$.subscribe((origin) => {\n                if (origin === null) {\n                    this.forceCloseDropdown();\n                }\n            })\n        );\n    }\n\n    private toggleDropdown() {\n        this.isCollapsed = !this.isCollapsed;\n    }\n\n    private forceCloseDropdown() {\n        this.isCollapsed = true;\n        this._cdRef.detectChanges();\n    }\n\n    private startListenFocusDropdownItems() {\n        this._dropdownElements.forEach((el) => {\n            this._focusMonitor.monitor(el, true);\n        });\n    }\n\n    private stopListenFocusDropdownItems() {\n        this._dropdownElements.forEach((el) => {\n            this._focusMonitor.stopMonitoring(el);\n        });\n    }\n\n    // This method is required due to angular 2 issue https://github.com/angular/angular/issues/11200\n    private denyClickIfDisabled() {\n        const events: Event[] = this.elementRef.nativeElement.eventListeners('click');\n\n        events.forEach((event) => this.elementRef.nativeElement.removeEventListener('click', event));\n\n        this.elementRef.nativeElement.addEventListener('click', (event: MouseEvent) => {\n            if (this.elementRef.nativeElement.hasAttribute('disabled')) {\n                event.stopImmediatePropagation();\n            }\n        }, true);\n\n        events.forEach((event) => this.elementRef.nativeElement.addEventListener('click', event));\n    }\n}\n\n@Directive({\n    selector: MC_NAVBAR_CONTAINER\n})\nexport class McNavbarContainer {\n    @Input()\n    position: McNavbarContainerPositionType = 'left';\n\n    @HostBinding('class')\n    get cssClasses(): string {\n        return this.position === 'left' ? 'mc-navbar-left' : 'mc-navbar-right';\n    }\n}\n\nclass CollapsibleItem {\n    private _collapsed: boolean = false;\n\n    constructor(\n        public element: HTMLElement,\n        public width: number\n    ) {}\n\n    processCollapsed(collapsed: boolean) {\n        this._collapsed = collapsed;\n\n        this.updateCollapsedClass();\n    }\n\n    private updateCollapsedClass() {\n        if (this._collapsed) {\n            this.element.classList.add(COLLAPSED_CLASS);\n        } else {\n            this.element.classList.remove(COLLAPSED_CLASS);\n        }\n\n    }\n}\n\nclass CachedItemWidth {\n\n    get canCollapse(): boolean {\n        return this.itemsForCollapse.length > 0;\n    }\n\n    private _collapsedItemsWidth: number;\n\n    get collapsedItemsWidth(): number {\n        if (this._collapsedItemsWidth !== undefined) {\n            return this._collapsedItemsWidth;\n        }\n\n        this.calculateAndCacheCollapsedItemsWidth();\n\n        return this._collapsedItemsWidth;\n    }\n\n    constructor(\n        public element: HTMLElement,\n        public width: number,\n        public itemsForCollapse: CollapsibleItem[] = []\n    ) {}\n\n    processCollapsed(collapsed: boolean) {\n        if (this.itemsForCollapse.length > 0) {\n            this.updateTitle(collapsed);\n        }\n\n        this.itemsForCollapse.forEach((item) => item.processCollapsed(collapsed));\n    }\n\n    private calculateAndCacheCollapsedItemsWidth() {\n        this._collapsedItemsWidth = this.itemsForCollapse\n            .reduce((acc, item) => acc + item.width, 0);\n    }\n\n    private getTitle(): string {\n        const computedTitle = this.element.getAttribute('computedTitle');\n\n        return computedTitle\n            ? decodeURI(computedTitle)\n            : (this.itemsForCollapse.length > 0 ? this.itemsForCollapse[0].element.innerText : '');\n    }\n\n    private updateTitle(collapsed: boolean) {\n        if (collapsed) {\n            this.element.setAttribute('title', this.getTitle());\n        } else {\n            this.element.removeAttribute('title');\n        }\n    }\n}\n\n\n@Component({\n    selector: MC_NAVBAR,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    template: `\n        <nav class=\"mc-navbar\">\n            <ng-content select=\"[${MC_NAVBAR_CONTAINER}],${MC_NAVBAR_CONTAINER}\"></ng-content>\n        </nav>\n    `,\n    styleUrls: ['./navbar.css'],\n    encapsulation: ViewEncapsulation.None\n})\nexport class McNavbar implements AfterViewInit, OnDestroy {\n\n    private readonly forceRecalculateItemsWidth: boolean = false;\n    private readonly resizeDebounceInterval: number = 100;\n    private readonly firstLevelElement: string = MC_NAVBAR_CONTAINER;\n    private readonly secondLevelElements: string[] = [\n        MC_NAVBAR_ITEM,\n        MC_NAVBAR_BRAND,\n        MC_NAVBAR_TITLE\n    ];\n\n    private _totalItemsWidths: number;\n    private _itemsWidths: CachedItemWidth[];\n\n    private get maxAllowedWidth(): number {\n        return this._elementRef.nativeElement.querySelector('nav').getBoundingClientRect().width;\n    }\n\n    private get itemsWidths(): CachedItemWidth[] {\n        if (this._itemsWidths !== undefined && !this.forceRecalculateItemsWidth) {\n            return this._itemsWidths;\n        }\n\n        this.calculateAndCacheItemsWidth();\n\n        return this._itemsWidths;\n    }\n\n    private get totalItemsWidth(): number {\n        if (this._totalItemsWidths !== undefined && !this.forceRecalculateItemsWidth) {\n            return this._totalItemsWidths;\n        }\n\n        this.calculateAndCacheTotalItemsWidth();\n\n        return this._totalItemsWidths;\n    }\n\n    private _resizeSubscription: Subscription;\n\n    constructor(\n        private _elementRef: ElementRef\n    ) {\n        const resizeObserver = fromEvent(window, 'resize')\n            .pipe(debounceTime(this.resizeDebounceInterval));\n\n        this._resizeSubscription = resizeObserver.subscribe(this.updateCollapsed.bind(this));\n    }\n\n    updateCollapsed(): void {\n        let collapseDelta = this.totalItemsWidth - this.maxAllowedWidth;\n\n        for (let i = this.itemsWidths.length - 1; i >= 0; i--) {\n            const item = this.itemsWidths[i];\n\n            if (!item.canCollapse) {\n                continue;\n            }\n\n            item.processCollapsed(collapseDelta > 0);\n            collapseDelta -= item.collapsedItemsWidth;\n        }\n    }\n\n    ngAfterViewInit(): void {\n        // Note: this wait is required for loading and rendering fonts for icons;\n        // unfortunately we cannot control font rendering\n        setTimeout(() => this.updateCollapsed(), 0);\n    }\n\n    ngOnDestroy() {\n        this._resizeSubscription.unsubscribe();\n    }\n\n    private calculateAndCacheTotalItemsWidth() {\n        this._totalItemsWidths = this.itemsWidths\n            .reduce((acc, item) => acc + item.width, 0);\n    }\n\n    private getOuterElementWidth(element: HTMLElement): number {\n        const baseWidth  = element.getBoundingClientRect().width;\n        const marginRight = parseInt(getComputedStyle(element).getPropertyValue('margin-right'));\n        const marginLeft = parseInt(getComputedStyle(element).getPropertyValue('margin-left'));\n\n        return baseWidth + marginRight + marginLeft;\n    }\n\n    private calculateAndCacheItemsWidth() {\n        const allItemsSelector = this.secondLevelElements\n            .map((e: string) => `${this.firstLevelElement}>${e}`);\n        const allItems: HTMLElement[] = Array.from(this._elementRef.nativeElement.querySelectorAll(allItemsSelector));\n\n        this._itemsWidths = allItems\n            .map((el) => new CachedItemWidth(el, this.getOuterElementWidth(el), this.getItemsForCollapse(el)));\n    }\n\n    private getItemsForCollapse(element: HTMLElement): CollapsibleItem[] {\n        const icon = element.querySelector(`[${MC_ICON}],${MC_NAVBAR_LOGO},[${MC_NAVBAR_LOGO}]`);\n\n        if (!icon) {\n            return [];\n        }\n\n        return Array.from(element.querySelectorAll(MC_NAVBAR_TITLE))\n            .map((el) => new CollapsibleItem(<HTMLElement> el, el.getBoundingClientRect().width));\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { A11yModule } from '@ptsecurity/cdk/a11y';\nimport { PlatformModule } from '@ptsecurity/cdk/platform';\n\nimport { McIconModule } from '@ptsecurity/mosaic/icon';\n\nimport {\n    McNavbar,\n    McNavbarContainer,\n    McNavbarItem,\n    McNavbarTitle,\n    McNavbarBrand,\n    McNavbarLogo\n} from './navbar.component';\n\n\n@NgModule({\n    imports: [\n        CommonModule,\n        A11yModule,\n        PlatformModule,\n        McIconModule\n    ],\n    exports: [\n        McNavbar,\n        McNavbarContainer,\n        McNavbarTitle,\n        McNavbarItem,\n        McNavbarBrand,\n        McNavbarLogo\n    ],\n    declarations: [\n        McNavbar,\n        McNavbarContainer,\n        McNavbarTitle,\n        McNavbarItem,\n        McNavbarBrand,\n        McNavbarLogo\n    ]\n})\nexport class McNavbarModule {}\n","import {\n    ChangeDetectionStrategy,\n    Component,\n    ViewEncapsulation,\n    ElementRef,\n    Input\n} from '@angular/core';\nimport { CanColor, CanColorCtor, mixinColor, ThemePalette } from '@ptsecurity/mosaic/core';\n\n\nexport type ProgressBarMode = 'determinate' | 'indeterminate';\n\nlet idIterator = 0;\n\nconst MIN_PERCENT = 0;\nconst MAX_PERCENT = 100;\n\nexport class McProgressBarBase {\n    constructor(public _elementRef: ElementRef) {}\n}\n\nexport const _McProgressBarMixinBase:\n    CanColorCtor &\n    typeof McProgressBarBase =\n        mixinColor(McProgressBarBase);\n\n@Component({\n    selector: 'mc-progress-bar',\n    templateUrl: './progress-bar.component.html',\n    styleUrls: ['./progress-bar.css'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n    host: {\n        class: 'mc-progress-bar',\n        '[attr.id]': 'id'\n    }\n})\nexport class McProgressBar extends _McProgressBarMixinBase implements CanColor {\n    @Input() id: string = `mc-progress-bar-${idIterator++}`;\n    @Input() value: number = 0;\n    @Input() mode: ProgressBarMode = 'determinate';\n    @Input() color: ThemePalette = ThemePalette.Primary;\n\n    constructor(elementRef: ElementRef) {\n        super(elementRef);\n    }\n\n    get percentage(): number {\n        return Math.max(MIN_PERCENT, Math.min(MAX_PERCENT, this.value)) / MAX_PERCENT;\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { PlatformModule } from '@ptsecurity/cdk/platform';\n\nimport {\n    McProgressBar\n} from './progress-bar.component';\n\n\n@NgModule({\n    imports: [\n        CommonModule,\n        PlatformModule\n    ],\n    exports: [\n        McProgressBar\n    ],\n    declarations: [\n        McProgressBar\n    ]\n})\nexport class McProgressBarModule {}\n","import {\n    ChangeDetectionStrategy,\n    Component,\n    ViewEncapsulation,\n    ElementRef,\n    Input\n} from '@angular/core';\nimport { CanColor, CanColorCtor, mixinColor, ThemePalette } from '@ptsecurity/mosaic/core';\n\n\nexport type ProgressSpinnerMode = 'determinate' | 'indeterminate';\n\nlet idIterator = 0;\n\nconst MIN_PERCENT = 0;\nconst MAX_PERCENT = 100;\n\nexport class McProgressSpinnerBase {\n    constructor(public _elementRef: ElementRef) {}\n}\n\nexport const _McProgressSpinnerMixinBase:\n    CanColorCtor &\n    typeof McProgressSpinnerBase =\n        mixinColor(McProgressSpinnerBase);\n\nconst MAX_DASH_ARRAY = 273;\n\n@Component({\n    selector: 'mc-progress-spinner',\n    templateUrl: './progress-spinner.component.html',\n    styleUrls: ['./progress-spinner.css'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n    host: {\n        class: 'mc-progress-spinner',\n        '[attr.id]': 'id'\n    }\n})\nexport class McProgressSpinner extends _McProgressSpinnerMixinBase implements CanColor {\n    @Input() id: string = `mc-progress-spinner-${idIterator++}`;\n    @Input() value: number = 0;\n    @Input() mode: ProgressSpinnerMode = 'determinate';\n    @Input() color: ThemePalette = ThemePalette.Primary;\n\n    constructor(elementRef: ElementRef) {\n        super(elementRef);\n    }\n\n    get percentage(): number {\n        return Math.max(MIN_PERCENT, Math.min(MAX_PERCENT, this.value)) / MAX_PERCENT;\n    }\n\n    get dashOffsetPercent(): string {\n        return `${MAX_DASH_ARRAY - this.percentage * MAX_DASH_ARRAY}%`;\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { PlatformModule } from '@ptsecurity/cdk/platform';\n\nimport { McProgressSpinner } from './progress-spinner.component';\n\n\n@NgModule({\n    imports: [\n        CommonModule,\n        PlatformModule\n    ],\n    exports: [\n        McProgressSpinner\n    ],\n    declarations: [\n        McProgressSpinner\n    ]\n})\nexport class McProgressSpinnerModule {}\n","import {\n    AfterContentInit,\n    Attribute,\n    ChangeDetectionStrategy,\n    Component,\n    ContentChildren,\n    ElementRef,\n    EventEmitter,\n    forwardRef,\n    Input,\n    Output,\n    QueryList,\n    ViewEncapsulation,\n    ChangeDetectorRef,\n    Inject,\n    OnDestroy,\n    OnInit,\n    ViewChild\n} from '@angular/core';\n\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\n\nimport { Subscription } from 'rxjs';\n\nimport { FocusKeyManager, IFocusableOption } from '@ptsecurity/cdk/a11y';\nimport { SelectionModel } from '@ptsecurity/cdk/collections';\nimport { END, ENTER, HOME, PAGE_DOWN, PAGE_UP, SPACE } from '@ptsecurity/cdk/keycodes';\n\nimport {\n    McLine,\n    McLineSetter,\n    CanDisable,\n    mixinDisabled,\n    toBoolean, CanDisableCtor\n} from '@ptsecurity/mosaic/core';\n\n\n/**\n * Component for list-options of selection-list. Each list-option can automatically\n * generate a checkbox and can put current item into the selectionModel of selection-list\n * if the current item is selected.\n */\n@Component({\n    exportAs: 'mcListOption',\n    selector: 'mc-list-option',\n    host: {\n        tabindex: '-1',\n\n        class: 'mc-list-option',\n        '[class.mc-selected]': 'selected',\n        '[class.mc-focused]': '_hasFocus',\n        '(focus)': '_handleFocus()',\n        '(blur)': '_handleBlur()',\n        '(click)': '_handleClick()'\n    },\n    templateUrl: 'list-option.html',\n    encapsulation: ViewEncapsulation.None,\n    preserveWhitespaces: false,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class McListOption implements AfterContentInit, OnDestroy, OnInit, IFocusableOption {\n    _hasFocus: boolean = false;\n\n    @ContentChildren(McLine) _lines: QueryList<McLine>;\n\n    @ViewChild('text') _text: ElementRef;\n\n    // Whether the label should appear before or after the checkbox. Defaults to 'after'\n    @Input() checkboxPosition: 'before' | 'after' = 'after';\n\n    @Input() value: any;\n\n    @Input()\n    get disabled() {\n        return this._disabled || (this.listSelection && this.listSelection.disabled);\n    }\n\n    set disabled(value: any) {\n        const newValue = toBoolean(value);\n\n        if (newValue !== this._disabled) {\n            this._disabled = newValue;\n            this._changeDetector.markForCheck();\n        }\n    }\n\n    @Input()\n    get selected(): boolean {\n        return this.listSelection.selectedOptions && this.listSelection.selectedOptions.isSelected(this) || false;\n    }\n\n    set selected(value: boolean) {\n        const isSelected = toBoolean(value);\n\n        if (isSelected !== this._selected) {\n            this.setSelected(isSelected);\n\n            this.listSelection._reportValueChange();\n        }\n    }\n\n    private _lineSetter: McLineSetter;\n    private _selected = false;\n    private _disabled = false;\n\n    constructor(\n        private _element: ElementRef,\n        private _changeDetector: ChangeDetectorRef,\n        @Inject(forwardRef(() => McListSelection))\n        public listSelection: McListSelection\n    ) {}\n\n    ngOnInit() {\n        if (this._selected) {\n            // List options that are selected at initialization can't be reported properly to the form\n            // control. This is because it takes some time until the selection-list knows about all\n            // available options. Also it can happen that the ControlValueAccessor has an initial value\n            // that should be used instead. Deferring the value change report to the next tick ensures\n            // that the form control value is not being overwritten.\n            const wasSelected = this._selected;\n\n            Promise.resolve().then(() => {\n                if (this._selected || wasSelected) {\n                    this.selected = true;\n                    this._changeDetector.markForCheck();\n                }\n            });\n        }\n    }\n\n    ngAfterContentInit() {\n        this._lineSetter = new McLineSetter(this._lines, this._element);\n    }\n\n    ngOnDestroy(): void {\n        if (this.selected) {\n            // We have to delay this until the next tick in order\n            // to avoid changed after checked errors.\n            Promise.resolve().then(() => this.selected = false);\n        }\n\n        this.listSelection._removeOptionFromList(this);\n    }\n\n    toggle(): void {\n        this.selected = !this.selected;\n    }\n\n    focus(): void {\n        this._element.nativeElement.focus();\n\n        this.listSelection.setFocusedOption(this);\n    }\n\n    getLabel() {\n        return this._text ? this._text.nativeElement.textContent : '';\n    }\n\n    setSelected(selected: boolean) {\n        if (this._selected === selected || !this.listSelection.selectedOptions) { return; }\n\n        this._selected = selected;\n\n        if (selected) {\n            this.listSelection.selectedOptions.select(this);\n        } else {\n            this.listSelection.selectedOptions.deselect(this);\n        }\n\n        this._changeDetector.markForCheck();\n    }\n\n    _getHeight(): number {\n        return this._element.nativeElement.getClientRects()[0].height;\n    }\n\n    _handleClick() {\n        if (this.disabled) { return; }\n\n        this.listSelection.setFocusedOption(this);\n    }\n\n    _handleFocus() {\n        if (this.disabled || this._hasFocus) { return; }\n\n        this._hasFocus = true;\n    }\n\n    _handleBlur() {\n        this._hasFocus = false;\n\n        this.listSelection._onTouched();\n    }\n\n    _getHostElement(): HTMLElement {\n        return this._element.nativeElement;\n    }\n}\n\n\nexport const MC_SELECTION_LIST_VALUE_ACCESSOR: any = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => McListSelection),\n    multi: true\n};\n\n// Change event that is being fired whenever the selected state of an option changes. */\nexport class McListSelectionChange {\n    constructor(\n        // Reference to the selection list that emitted the event.\n        public source: McListSelection,\n        // Reference to the option that has been changed.\n        public option: McListOption\n    ) {}\n}\n\n\nexport class McListSelectionBase {}\n\nexport const _McListSelectionMixinBase: CanDisableCtor & typeof McListSelectionBase\n    = mixinDisabled(McListSelectionBase);\n\n@Component({\n    exportAs: 'mcListSelection',\n    selector: 'mc-list-selection',\n    template: '<ng-content></ng-content>',\n    styleUrls: ['./list.css'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n    inputs: ['disabled', 'tabIndex'],\n    host: {\n        class: 'mc-list-selection',\n        '[tabIndex]': 'tabIndex',\n        '(focus)': 'focus()',\n        '(blur)': '_onTouched()',\n        '(keydown)': '_onKeyDown($event)',\n        '(window:resize)': 'updateScrollSize()'\n    },\n    providers: [MC_SELECTION_LIST_VALUE_ACCESSOR],\n    preserveWhitespaces: false\n})\nexport class McListSelection extends _McListSelectionMixinBase implements\n    IFocusableOption, CanDisable, AfterContentInit, ControlValueAccessor {\n\n    _keyManager: FocusKeyManager<McListOption>;\n\n    // The option components contained within this selection-list.\n    @ContentChildren(McListOption) options: QueryList<McListOption>;\n\n    tabIndex: number;\n\n    autoSelect: boolean;\n    noUnselect: boolean;\n    multiple: boolean;\n\n    // todo temporary solution\n    withShift: boolean;\n    withCtrl: boolean;\n\n    @Input() horizontal: boolean = false;\n\n    // Emits a change event whenever the selected state of an option changes.\n    @Output() readonly selectionChange: EventEmitter<McListSelectionChange> = new EventEmitter<McListSelectionChange>();\n\n    selectedOptions: SelectionModel<McListOption>;\n\n    // Used for storing the values that were assigned before the options were initialized.\n    private _tempValues: string[] | null;\n\n    private _modelChanges = Subscription.EMPTY;\n\n    constructor(\n        private _element: ElementRef,\n        @Attribute('tabindex') tabIndex: string,\n        @Attribute('auto-select') autoSelect: string,\n        @Attribute('no-unselect') noUnselect: string,\n        @Attribute('multiple') multiple: string\n    ) {\n        super();\n\n        this.autoSelect = autoSelect === null ? true : toBoolean(autoSelect);\n        this.multiple = multiple === null ? true : toBoolean(multiple);\n        this.noUnselect = noUnselect === null ? true : toBoolean(noUnselect);\n\n        this.tabIndex = parseInt(tabIndex) || 0;\n\n        this.selectedOptions = new SelectionModel<McListOption>(this.multiple);\n    }\n\n    ngAfterContentInit(): void {\n        this.horizontal = toBoolean(this.horizontal);\n\n        this._keyManager = new FocusKeyManager<McListOption>(this.options)\n            .withTypeAhead()\n            .withVerticalOrientation(!this.horizontal)\n            .withHorizontalOrientation(this.horizontal ? 'ltr' : null);\n\n        if (this._tempValues) {\n            this._setOptionsFromValues(this._tempValues);\n            this._tempValues = null;\n        }\n\n        // Sync external changes to the model back to the options.\n        this._modelChanges = this.selectedOptions.onChange!.subscribe((event) => {\n            for (const item of event.added) {\n                item.selected = true;\n            }\n\n            for (const item of event.removed) {\n                item.selected = false;\n            }\n        });\n\n        this.updateScrollSize();\n    }\n\n    ngOnDestroy() {\n        this._modelChanges.unsubscribe();\n    }\n\n    focus() {\n        this._element.nativeElement.focus();\n    }\n\n    selectAll() {\n        this.options.forEach((option) => option.setSelected(true));\n\n        this._reportValueChange();\n    }\n\n    deselectAll() {\n        this.options.forEach((option) => option.setSelected(false));\n\n        this._reportValueChange();\n    }\n\n    updateScrollSize(): void {\n        if (this.horizontal || !this.options.first) { return; }\n\n        this._keyManager.withScrollSize(Math.floor(this._getHeight() / this.options.first._getHeight()));\n    }\n\n    // Sets the focused option of the selection-list.\n    setFocusedOption(option: McListOption): void {\n        this._keyManager.updateActiveItem(option);\n\n        if (this.withShift && this.multiple) {\n            const previousIndex = this._keyManager.previousActiveItemIndex;\n            const activeIndex = this._keyManager.activeItemIndex;\n\n            if (previousIndex < activeIndex) {\n                this.options.forEach((item, index) => {\n                    if (index >= previousIndex && index <= activeIndex) { item.setSelected(true); }\n                });\n            } else {\n                this.options.forEach((item, index) => {\n                    if (index >= activeIndex && index <= previousIndex) { item.setSelected(true); }\n                });\n            }\n\n            this.withShift = false;\n        } else if (this.withCtrl) {\n            this.withCtrl = false;\n\n            if (!this._canDeselectLast(option)) { return; }\n\n            option.toggle();\n        } else {\n            if (this.autoSelect) {\n                this.options.forEach((item) => item.setSelected(false));\n                option.setSelected(true);\n            }\n        }\n\n        this._emitChangeEvent(option);\n        this._reportValueChange();\n    }\n\n    // Implemented as part of ControlValueAccessor.\n    writeValue(values: string[]): void {\n        if (this.options) {\n            this._setOptionsFromValues(values || []);\n        } else {\n            this._tempValues = values;\n        }\n    }\n\n    // Implemented as part of ControlValueAccessor.\n    registerOnChange(fn: (value: any) => void): void {\n        this._onChange = fn;\n    }\n\n    // Implemented as part of ControlValueAccessor.\n    registerOnTouched(fn: () => void): void {\n        this._onTouched = fn;\n    }\n\n    // Implemented as a part of ControlValueAccessor.\n    setDisabledState(isDisabled: boolean): void {\n        if (this.options) {\n            this.options.forEach((option) => option.disabled = isDisabled);\n        }\n    }\n\n    getSelectedOptionValues(): string[] {\n        return this.options.filter((option) => option.selected).map((option) => option.value);\n    }\n\n    // Toggles the selected state of the currently focused option.\n    toggleFocusedOption(): void {\n        const focusedIndex = this._keyManager.activeItemIndex;\n\n        if (focusedIndex != null && this._isValidIndex(focusedIndex)) {\n            const focusedOption: McListOption = this.options.toArray()[focusedIndex];\n\n            if (focusedOption && this._canDeselectLast(focusedOption)) {\n                focusedOption.toggle();\n\n                // Emit a change event because the focused option changed its state through user interaction.\n                this._emitChangeEvent(focusedOption);\n            }\n        }\n    }\n\n    _canDeselectLast(listOption: McListOption): boolean {\n        return !(this.noUnselect && this.selectedOptions.selected.length === 1 && listOption.selected);\n    }\n\n    _getHeight(): number {\n        return this._element.nativeElement.getClientRects()[0].height;\n    }\n\n    // View to model callback that should be called if the list or its options lost focus.\n    _onTouched: () => void = () => {};\n\n    // Removes an option from the selection list and updates the active item.\n    _removeOptionFromList(option: McListOption) {\n        if (option._hasFocus) {\n            const optionIndex = this._getOptionIndex(option);\n\n            // Check whether the option is the last item\n            if (optionIndex > 0) {\n                this._keyManager.setPreviousItemActive();\n            } else if (optionIndex === 0 && this.options.length > 1) {\n                this._keyManager.setNextItemActive();\n            }\n        }\n    }\n\n    _onKeyDown(event: KeyboardEvent) {\n        const keyCode = event.keyCode;\n        this.withShift = event.shiftKey;\n        this.withCtrl = event.ctrlKey;\n\n        switch (keyCode) {\n            case SPACE:\n            case ENTER:\n                this.toggleFocusedOption();\n                event.preventDefault();\n\n                break;\n            case HOME:\n                this._keyManager.setFirstItemActive();\n                event.preventDefault();\n\n                break;\n            case END:\n                this._keyManager.setLastItemActive();\n                event.preventDefault();\n\n                break;\n            case PAGE_UP:\n                if (!this.horizontal) { this._keyManager.setPreviousPageItemActive(); }\n\n                event.preventDefault();\n\n                break;\n            case PAGE_DOWN:\n                if (!this.horizontal) { this._keyManager.setNextPageItemActive(); }\n\n                event.preventDefault();\n\n                break;\n            default:\n                this._keyManager.onKeydown(event);\n        }\n    }\n\n    // Reports a value change to the ControlValueAccessor\n    _reportValueChange() {\n        if (this.options) {\n            this._onChange(this.getSelectedOptionValues());\n        }\n    }\n\n    // Emits a change event if the selected state of an option changed.\n    _emitChangeEvent(option: McListOption) {\n        this.selectionChange.emit(new McListSelectionChange(this, option));\n    }\n\n    // Returns the option with the specified value.\n    private _getOptionByValue(value: string): McListOption | undefined {\n        return this.options.find((option) => option.value === value);\n    }\n\n    // Sets the selected options based on the specified values.\n    private _setOptionsFromValues(values: string[]) {\n        this.options.forEach((option) => option.setSelected(false));\n\n        values\n            .map((value) => this._getOptionByValue(value))\n            .filter(Boolean)\n            .forEach((option) => option!.setSelected(true));\n    }\n\n    /**\n     * Utility to ensure all indexes are valid.\n     * @param index The index to be checked.\n     * @returns True if the index is valid for our list of options.\n     */\n    private _isValidIndex(index: number): boolean {\n        return index >= 0 && index < this.options.length;\n    }\n\n    // Returns the index of the specified list option.\n    private _getOptionIndex(option: McListOption): number {\n        return this.options.toArray().indexOf(option);\n    }\n\n    // View to model callback that should be called whenever the selected options change.\n    private _onChange: (value: any) => void = (_: any) => {};\n}\n","// todo пока не делаем, перенесено из материала, но у нас в доках таких простых списков нет.\nimport {\n    AfterContentInit, ChangeDetectionStrategy, Component, ContentChildren, Directive, ElementRef, QueryList,\n    ViewEncapsulation\n} from '@angular/core';\n\nimport { McLine, McLineSetter } from '@ptsecurity/mosaic/core';\n\n\nexport class McListBase {}\n\n@Component({\n    selector: 'mc-list',\n    host: { class: 'mc-list' },\n    template: '<ng-content></ng-content>',\n    styleUrls: ['./list.css'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None\n})\nexport class McList extends McListBase {}\n\n\n/**\n * Directive whose purpose is to add the mc- CSS styling to this selector.\n * @docs-private\n */\n@Directive({\n    selector: '[mc-subheader], [mcSubheader]',\n    host: { class: 'mc-subheader' }\n})\nexport class McListSubheaderCssStyler {}\n\n\n// Boilerplate for applying mixins to McListItem.\nexport class McListItemBase {}\n\n@Component({\n    selector: 'mc-list-item, a[mc-list-item]',\n    host: {\n        class: 'mc-list-item',\n        '(focus)': '_handleFocus()',\n        '(blur)': '_handleBlur()'\n    },\n    templateUrl: './list-item.html',\n    encapsulation: ViewEncapsulation.None,\n    preserveWhitespaces: false,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class McListItem extends McListItemBase implements AfterContentInit {\n    @ContentChildren(McLine) _lines: QueryList<McLine>;\n\n    private _lineSetter: McLineSetter;\n\n    constructor(private _element: ElementRef) {\n        super();\n    }\n\n    ngAfterContentInit() {\n        this._lineSetter = new McLineSetter(this._lines, this._element);\n    }\n\n    _handleFocus() {\n        this._element.nativeElement.classList.add('mc-focused');\n    }\n\n    _handleBlur() {\n        this._element.nativeElement.classList.remove('mc-focused');\n    }\n\n    _getHostElement(): HTMLElement {\n        return this._element.nativeElement;\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { A11yModule } from '@ptsecurity/cdk/a11y';\n\nimport { McLineModule } from '@ptsecurity/mosaic/core';\n\nimport { McListSelection, McListOption } from './list-selection.component';\nimport { McList, McListItem, McListSubheaderCssStyler } from './list.component';\n\n\n@NgModule({\n    imports: [\n        CommonModule,\n        A11yModule,\n        McLineModule\n    ],\n    exports: [\n        McList,\n        McListSelection,\n        McListItem,\n        McListOption,\n        McListSubheaderCssStyler\n    ],\n    declarations: [\n        McList,\n        McListSelection,\n        McListItem,\n        McListOption,\n        McListSubheaderCssStyler\n    ]\n})\nexport class McListModule {}\n","import {\n    Input,\n    Attribute,\n    Component,\n    ElementRef,\n    OnDestroy,\n    ViewEncapsulation,\n    ChangeDetectionStrategy,\n    ChangeDetectorRef\n} from '@angular/core';\n\nimport { FocusMonitor } from '@ptsecurity/cdk/a11y';\nimport {\n    CanDisable, CanDisableCtor,\n    HasTabIndex, HasTabIndexCtor,\n    mixinDisabled,\n    mixinTabIndex,\n    toBoolean\n} from '@ptsecurity/mosaic/core';\n\n\nexport class McLinkBase {\n    constructor(public _elementRef: ElementRef) {\n    }\n}\n\nexport const _McLinkBase: HasTabIndexCtor & CanDisableCtor & typeof McLinkBase\n    = mixinTabIndex(mixinDisabled(McLinkBase));\n\n@Component({\n    selector: 'a.mc-link',\n    template: `<ng-content></ng-content>`,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n    exportAs: 'mcLink',\n    styleUrls: ['./link.css'],\n    inputs: ['disabled'],\n    host: {\n        '[attr.disabled]': 'disabled || null',\n        '[attr.tabindex]': 'tabIndex'\n    }\n})\n\nexport class McLink extends _McLinkBase implements OnDestroy, HasTabIndex, CanDisable {\n\n    @Input()\n    get disabled() {\n        return this._disabled;\n    }\n\n    set disabled(value: any) {\n        const newValue = toBoolean(value);\n\n        if (newValue !== this._disabled) {\n            this._disabled = newValue;\n            this._changeDetector.markForCheck();\n        }\n    }\n\n    private _disabled = false;\n\n    constructor(\n        @Attribute('tabindex') tabIndex: string,\n        public elementRef: ElementRef,\n        private _focusMonitor: FocusMonitor,\n        private _changeDetector: ChangeDetectorRef) {\n\n        super(elementRef);\n        this._focusMonitor.monitor(elementRef.nativeElement, true);\n        this.tabIndex = parseInt(tabIndex) || 0;\n    }\n\n    ngOnDestroy() {\n        this._focusMonitor.stopMonitoring(this.elementRef.nativeElement);\n    }\n\n    focus(): void {\n        this._getHostElement().focus();\n    }\n\n    _getHostElement() {\n        return this.elementRef.nativeElement;\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { A11yModule } from '@ptsecurity/cdk/a11y';\n\nimport { McLink } from './link.component';\n\n\n@NgModule({\n    imports: [\n        CommonModule,\n        A11yModule\n    ],\n    declarations: [McLink],\n    exports: [McLink]\n})\nexport class McLinkModule {}\n","import { Injectable, Optional, SkipSelf } from '@angular/core';\nimport { Subject, Subscription } from 'rxjs';\n\nimport { McModalRef } from './modal-ref.class';\n\n\ninterface IRegisteredMeta {\n    modalRef: McModalRef;\n    afterOpenSubscription: Subscription;\n    afterCloseSubscription: Subscription;\n}\n\n@Injectable()\nexport class McModalControlService {\n\n    // Track singleton afterAllClose through over the injection tree\n    get afterAllClose(): Subject<void> {\n        return this.parentService ? this.parentService.afterAllClose : this.rootAfterAllClose;\n    }\n\n    // Track singleton openModals array through over the injection tree\n    get openModals(): McModalRef[] {\n        return this.parentService ? this.parentService.openModals : this.rootOpenModals;\n    }\n\n    // @ts-ignore\n    private rootOpenModals: McModalRef[] = this.parentService ? null : [];\n    // @ts-ignore\n    private rootAfterAllClose: Subject<void> = this.parentService ? null : new Subject<void>();\n    // @ts-ignore\n    private rootRegisteredMetaMap: Map<McModalRef, IRegisteredMeta> = this.parentService ? null : new Map();\n\n    // Registered modal for later usage\n    private get registeredMetaMap(): Map<McModalRef, IRegisteredMeta> {\n        return this.parentService ? this.parentService.registeredMetaMap : this.rootRegisteredMetaMap;\n    }\n\n    constructor(\n        @Optional() @SkipSelf() private parentService: McModalControlService) {\n    }\n\n    // Register a modal to listen its open/close\n    registerModal(modalRef: McModalRef): void {\n        if (!this.hasRegistered(modalRef)) {\n            const afterOpenSubscription = modalRef.afterOpen.subscribe(() => this.openModals.push(modalRef));\n            const afterCloseSubscription = modalRef.afterClose.subscribe(() => this.removeOpenModal(modalRef));\n\n            this.registeredMetaMap.set(modalRef, {modalRef, afterOpenSubscription, afterCloseSubscription});\n        }\n    }\n\n    hasRegistered(modalRef: McModalRef): boolean {\n        return this.registeredMetaMap.has(modalRef);\n    }\n\n    // Close all registered opened modals\n    closeAll(): void {\n        let i = this.openModals.length;\n\n        while (i--) {\n            this.openModals[i].close();\n        }\n    }\n\n    private removeOpenModal(modalRef: McModalRef): void {\n        const index = this.openModals.indexOf(modalRef);\n\n        if (index > -1) {\n            this.openModals.splice(index, 1);\n\n            if (!this.openModals.length) {\n                this.afterAllClose.next();\n            }\n        }\n    }\n}\n","import { Observable } from 'rxjs';\n\nimport { McModalComponent } from './modal.component';\n\n\n/**\n * API class that public to users to handle the modal instance.\n * McModalRef is aim to avoid accessing to the modal instance directly by users.\n */\nexport abstract class McModalRef<T = any, R = any> {\n    abstract afterOpen: Observable<void>;\n    abstract afterClose: Observable<R>;\n\n    abstract open(): void;\n\n    abstract close(result?: R): void;\n\n    abstract destroy(result?: R): void;\n\n    /**\n     * Trigger the nzOnOk/nzOnCancel by manual\n     */\n    abstract triggerOk(): void;\n\n    abstract triggerCancel(): void;\n\n    // /**\n    //  * Return the ComponentRef of nzContent when specify nzContent as a Component\n    //  * Note: this method may return undefined if the Component has not ready yet.\n    //    (it only available after Modal's ngOnInit)\n    //  */\n    // abstract getContentComponentRef(): ComponentRef<{}>;\n\n    /**\n     * Return the component instance of nzContent when specify nzContent as a Component\n     * Note: this method may return undefined if the Component has not ready yet.\n     * (it only available after Modal's ngOnInit)\n     */\n    abstract getContentComponent(): T;\n\n    /**\n     * Get the dom element of this Modal\n     */\n    abstract getElement(): HTMLElement;\n\n    /**\n     * Get the instance of the Modal itself\n     */\n    abstract getInstance(): McModalComponent;\n}\n","export interface IClickPosition {\n    x: number;\n    y: number;\n}\n\nexport class ModalUtil {\n    private lastPosition: IClickPosition;\n\n    constructor(private document: Document) {\n        this.lastPosition = {x: -1, y: -1};\n        this.listenDocumentClick();\n    }\n\n    getLastClickPosition(): IClickPosition {\n        return this.lastPosition;\n    }\n\n    listenDocumentClick(): void {\n        this.document.addEventListener('click', (event: MouseEvent) => {\n            this.lastPosition = {x: event.clientX, y: event.clientY};\n        });\n    }\n}\n\nexport default new ModalUtil(document);\n","import {\n    AfterContentChecked,\n    AfterContentInit,\n    AfterViewInit,\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    ContentChild,\n    ContentChildren, Directive,\n    ElementRef,\n    QueryList,\n    ViewEncapsulation\n} from '@angular/core';\nimport { ESCAPE } from '@ptsecurity/cdk/keycodes';\nimport { CanColor, CanColorCtor, mixinColor } from '@ptsecurity/mosaic/core';\nimport { EMPTY, merge } from 'rxjs';\nimport { startWith } from 'rxjs/operators';\n\n\nimport { McCleaner } from './cleaner';\nimport { McFormFieldControl } from './form-field-control';\nimport { getMcFormFieldMissingControlError } from './form-field-errors';\nimport { McFormFieldNumberControl } from './form-field-number-control';\nimport { McHint } from './hint';\nimport { McPrefix } from './prefix';\nimport { McStepper } from './stepper';\nimport { McSuffix } from './suffix';\n\n\nlet nextUniqueId = 0;\n\nexport class McFormFieldBase {\n    constructor(public _elementRef: ElementRef) {}\n}\n\nexport const _McFormFieldMixinBase: CanColorCtor & typeof McFormFieldBase = mixinColor(McFormFieldBase);\n\n@Component({\n    selector: 'mc-form-field',\n    exportAs: 'mcFormField',\n    templateUrl: 'form-field.html',\n    // McInput is a directive and can't have styles, so we need to include its styles here.\n    // The McInput styles are fairly minimal so it shouldn't be a big deal for people who\n    // aren't using McInput.\n    styleUrls: [\n        'form-field.css',\n        '../input/input.css',\n        '../textarea/textarea.css'\n    ],\n    host: {\n        class: 'mc-form-field',\n        '[class.mc-form-field_invalid]': '_control.errorState',\n        '[class.mc-disabled]': '_control.disabled',\n        '[class.mc-form-field_has-prefix]': 'hasPrefix',\n        '[class.mc-form-field_has-suffix]': 'hasSuffix',\n        '[class.mc-form-field_has-cleaner]': 'canShowCleaner',\n        '[class.mc-form-field_has-stepper]': 'canShowStepper',\n        '[class.mc-focused]': '_control.focused',\n        '[class.ng-untouched]': '_shouldForward(\"untouched\")',\n        '[class.ng-touched]': '_shouldForward(\"touched\")',\n        '[class.ng-pristine]': '_shouldForward(\"pristine\")',\n        '[class.ng-dirty]': '_shouldForward(\"dirty\")',\n        '[class.ng-valid]': '_shouldForward(\"valid\")',\n        '[class.ng-invalid]': '_shouldForward(\"invalid\")',\n        '[class.ng-pending]': '_shouldForward(\"pending\")',\n        '(keydown)': 'onKeyDown($event)',\n        '(mouseenter)': 'onHoverChanged(true)',\n        '(mouseleave)': 'onHoverChanged(false)'\n    },\n    inputs: ['color'],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\n\nexport class McFormField extends _McFormFieldMixinBase implements\n    AfterContentInit, AfterContentChecked, AfterViewInit, CanColor {\n\n    @ContentChild(McFormFieldControl) _control: McFormFieldControl<any>;\n    @ContentChild(McFormFieldNumberControl) _numberControl: McFormFieldNumberControl<any>;\n    @ContentChild(McStepper) _stepper: McStepper;\n\n    @ContentChildren(McHint) _hint: QueryList<McHint>;\n    @ContentChildren(McSuffix) _suffix: QueryList<McSuffix>;\n    @ContentChildren(McPrefix) _prefix: QueryList<McPrefix>;\n    @ContentChildren(McCleaner) _cleaner: QueryList<McCleaner>;\n\n    // Unique id for the internal form field label.\n    _labelId = `mc-form-field-label-${nextUniqueId++}`;\n\n    hovered: boolean = false;\n\n    constructor(public _elementRef: ElementRef, private _changeDetectorRef: ChangeDetectorRef) {\n        super(_elementRef);\n    }\n\n    ngAfterContentInit() {\n        this._validateControlChild();\n        if (this._control.controlType) {\n            this._elementRef.nativeElement.classList\n                .add(`mc-form-field-type-${this._control.controlType}`);\n\n            if (this._numberControl && this.hasStepper) {\n                this._stepper.stepUp.subscribe(this.onStepUp.bind(this));\n                this._stepper.stepDown.subscribe(this.onStepDown.bind(this));\n            }\n        }\n\n        // Subscribe to changes in the child control state in order to update the form field UI.\n        this._control.stateChanges.pipe(startWith())\n            .subscribe(() => {\n                this._changeDetectorRef.markForCheck();\n            });\n\n        if (this._numberControl) {\n            this._numberControl.stateChanges.pipe(startWith())\n                .subscribe(() => {\n                    this._changeDetectorRef.markForCheck();\n                });\n        }\n\n        // Run change detection if the value changes.\n        const valueChanges = this._control.ngControl && this._control.ngControl.valueChanges || EMPTY;\n        merge(valueChanges)\n            .subscribe(() => this._changeDetectorRef.markForCheck());\n    }\n\n    ngAfterContentChecked() {\n        this._validateControlChild();\n    }\n\n    ngAfterViewInit() {\n        // Avoid animations on load.\n        this._changeDetectorRef.detectChanges();\n    }\n\n    clearValue($event) {\n        $event.stopPropagation();\n\n        if (this._control && this._control.ngControl) {\n            this._control.ngControl.reset();\n        }\n    }\n\n    onContainerClick($event) {\n        if (this._control.onContainerClick) {\n            this._control.onContainerClick($event);\n        }\n    }\n\n    onKeyDown(e: KeyboardEvent): void {\n        // tslint:disable-next-line:deprecation\n        if (e.keyCode === ESCAPE &&\n            this._control.focused &&\n            this.hasCleaner) {\n\n            if (this._control && this._control.ngControl) {\n                this._control.ngControl.reset();\n            }\n\n            e.preventDefault();\n        }\n    }\n\n    onHoverChanged(isHovered: boolean) {\n        if (isHovered !== this.hovered) {\n            this.hovered  = isHovered;\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n\n    onStepUp() {\n        if (this._numberControl) {\n            this._numberControl.stepUp(this._numberControl.step);\n        }\n    }\n\n    onStepDown() {\n        if (this._numberControl) {\n            this._numberControl.stepDown(this._numberControl.step);\n        }\n    }\n\n    /** Determines whether a class from the NgControl should be forwarded to the host element. */\n    _shouldForward(prop: string): boolean {\n        const ngControl = this._control ? this._control.ngControl : null;\n\n        return ngControl && ngControl[prop];\n    }\n\n    /** Throws an error if the form field's control is missing. */\n    protected _validateControlChild() {\n        if (!this._control) {\n            throw getMcFormFieldMissingControlError();\n        }\n    }\n\n    get hasHint(): boolean {\n        return this._hint && this._hint.length > 0;\n    }\n\n    get hasSuffix(): boolean {\n        return this._suffix && this._suffix.length > 0;\n    }\n\n    get hasPrefix(): boolean {\n        return this._prefix && this._prefix.length > 0;\n    }\n\n    get hasCleaner(): boolean {\n        return this._cleaner && this._cleaner.length > 0;\n    }\n\n    get hasStepper(): boolean {\n        return !!this._stepper;\n    }\n\n    get canShowCleaner(): boolean {\n        return this.hasCleaner &&\n            this._control &&\n            this._control.ngControl\n                ? this._control.ngControl.value && !this._control.disabled\n                : false;\n    }\n\n\n    get disabled(): boolean {\n        return this._control && this._control.disabled;\n    }\n\n    get canShowStepper(): boolean {\n        return this._numberControl &&\n            !this.disabled &&\n            (\n                this._numberControl.focused ||\n                this.hovered\n            );\n    }\n}\n\n@Directive({\n    selector: 'mc-form-field[mcFormFieldWithoutBorders]',\n    exportAs: 'mcFormFieldWithoutBorders',\n    host: { class: 'mc-form-field_without-borders' }\n})\nexport class McFormFieldWithoutBorders {\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { McIconModule } from '@ptsecurity/mosaic/icon';\n\nimport { McCleaner } from './cleaner';\nimport { McFormField, McFormFieldWithoutBorders } from './form-field';\nimport { McHint } from './hint';\nimport { McPrefix } from './prefix';\nimport { McStepper } from './stepper';\nimport { McSuffix } from './suffix';\n\n\n@NgModule({\n    declarations: [\n        McFormField,\n        McFormFieldWithoutBorders,\n        McHint,\n        McPrefix,\n        McSuffix,\n        McCleaner,\n        McStepper\n    ],\n    imports: [CommonModule, McIconModule],\n    exports: [\n        McFormField,\n        McFormFieldWithoutBorders,\n        McHint,\n        McPrefix,\n        McSuffix,\n        McCleaner,\n        McStepper\n    ]\n})\nexport class McFormFieldModule {\n}\n","import { InjectionToken } from '@angular/core';\n\n\nexport const MC_INPUT_VALUE_ACCESSOR =\n    new InjectionToken<{ value: any }>('MC_INPUT_VALUE_ACCESSOR');\n","function sanitizeNumber(value: number): number | null {\n    return !isFinite(value) || isNaN(value)\n        ? null\n        : value;\n}\n\nfunction getPrecision(value: number): number {\n    const arr = value.toString().split('.');\n\n    return arr.length === 1\n        ? 1\n        // tslint:disable-next-line:no-magic-numbers\n        :  Math.pow(10, arr[1].length);\n}\n\nfunction add(value1: number, value2: number) {\n    const precision = Math.max(getPrecision(value1), getPrecision(value2));\n\n    const res = (value1 * precision + value2 * precision) / precision;\n\n    return sanitizeNumber(res);\n}\n\nexport const stepUp = (value: number | null,\n                       max: number,\n                       min: number,\n                       step: number\n): number | null => {\n    let res;\n\n    if (value === null) {\n        res = add(min, step);\n\n        return res === null ? null : Math.min(res, max);\n    }\n\n    res = add(value, step);\n\n    return res === null ? null : Math.max(Math.min(res, max), min);\n};\n\nexport const stepDown = (value: number | null,\n                         max: number,\n                         min: number,\n                         step: number\n): number | null => {\n    let res;\n\n    if (value === null) {\n        res = add(max, -step);\n\n        return res === null ? null : Math.max(res, min);\n    }\n\n    res = add(value, -step);\n\n    return res === null ? null : Math.min(Math.max(res, min), max);\n};\n","import {\n    Attribute,\n    Directive, DoCheck, ElementRef, Inject, Input, OnChanges,\n    OnDestroy, Optional, Self\n} from '@angular/core';\nimport {\n    FormGroupDirective,\n    NgControl,\n    NgForm, NgModel\n} from '@angular/forms';\nimport { coerceBooleanProperty } from '@ptsecurity/cdk/coercion';\nimport {\n    END, C, V, X, A, DELETE, BACKSPACE, TAB, ENTER,\n    ESCAPE, ZERO, NINE, NUMPAD_ZERO, NUMPAD_NINE, NUMPAD_MINUS, DASH,\n    FF_MINUS, LEFT_ARROW, RIGHT_ARROW, HOME, UP_ARROW, DOWN_ARROW, F1, F12\n} from '@ptsecurity/cdk/keycodes';\nimport { getSupportedInputTypes, Platform } from '@ptsecurity/cdk/platform';\nimport {\n    CanUpdateErrorState,\n    CanUpdateErrorStateCtor,\n    ErrorStateMatcher,\n    mixinErrorState\n} from '@ptsecurity/mosaic/core';\nimport { McFormFieldControl, McFormFieldNumberControl } from '@ptsecurity/mosaic/form-field';\nimport { Subject } from 'rxjs';\n\nimport { getMcInputUnsupportedTypeError } from './input-errors';\nimport { MC_INPUT_VALUE_ACCESSOR } from './input-value-accessor';\nimport { stepDown, stepUp } from './stepperUtils';\n\n\nconst MC_INPUT_INVALID_TYPES = [\n    'button',\n    'checkbox',\n    'file',\n    'hidden',\n    'image',\n    'radio',\n    'range',\n    'reset',\n    'submit'\n];\n\nexport const BIG_STEP = 10;\nexport const SMALL_STEP = 1;\n\nlet nextUniqueId = 0;\n\nexport class McInputBase {\n    constructor(public _defaultErrorStateMatcher: ErrorStateMatcher,\n                public _parentForm: NgForm,\n                public _parentFormGroup: FormGroupDirective,\n                public ngControl: NgControl) {\n    }\n}\n\nexport const _McInputMixinBase: CanUpdateErrorStateCtor & typeof McInputBase = mixinErrorState(McInputBase);\n\n\n@Directive({\n    selector: `input[mcInput][type=\"number\"]`,\n    exportAs: 'mcNumericalInput',\n    providers: [NgModel, { provide: McFormFieldNumberControl, useExisting: McNumberInput }],\n    host: {\n        '(blur)': '_focusChanged(false)',\n        '(focus)': '_focusChanged(true)',\n        '(paste)': 'onPaste($event)',\n        '(keydown)': 'onKeyDown($event)'\n    }\n})\nexport class McNumberInput implements McFormFieldNumberControl<any> {\n\n    /**\n     * Implemented as part of McFormFieldNumberControl.\n     * @docs-private\n     */\n    @Input()\n    bigStep: number;\n\n    /**\n     * Implemented as part of McFormFieldNumberControl.\n     * @docs-private\n     */\n    @Input()\n    step: number;\n\n    @Input()\n    min: number;\n\n    @Input()\n    max: number;\n\n    /**\n     * Implemented as part of McFormFieldNumberControl.\n     * @docs-private\n     */\n    value: any;\n\n    /**\n     * Implemented as part of McFormFieldNumberControl.\n     * @docs-private\n     */\n    focused: boolean = false;\n\n    /**\n     * Implemented as part of McFormFieldNumberControl.\n     * @docs-private\n     */\n    readonly stateChanges: Subject<void> = new Subject<void>();\n\n    private readonly _host: HTMLInputElement;\n\n    constructor(\n        private _platform: Platform ,\n        private _elementRef: ElementRef,\n        private _model: NgModel,\n        @Attribute('step') step: string,\n        @Attribute('big-step') bigStep: string,\n        @Attribute('min') min: string,\n        @Attribute('max') max: string\n    ) {\n        this.step = this.isDigit(step) ? parseFloat(step) : SMALL_STEP;\n        this.bigStep = this.isDigit(bigStep) ? parseFloat(bigStep) : BIG_STEP;\n        this.min = this.isDigit(min) ? parseFloat(min) : -Infinity;\n        this.max = this.isDigit(max) ? parseFloat(max) : Infinity;\n\n        this._host = this._elementRef.nativeElement;\n\n        const self = this;\n\n        if ('valueAsNumber' in this._host) {\n            Object.defineProperty(Object.getPrototypeOf(this._host), 'valueAsNumber', {\n                // tslint:disable-next-line:no-reserved-keywords\n                get() {\n                    const res = parseFloat(self.normalizeSplitter(this.value));\n\n                    return isNaN(res) ? null : res;\n                }\n            });\n        }\n    }\n\n    _focusChanged(isFocused: boolean) {\n        if (isFocused !== this.focused) {\n            this.focused = isFocused;\n            this.stateChanges.next();\n        }\n    }\n\n    onKeyDown(event: KeyboardEvent) {\n        // tslint:disable-next-line:deprecation\n        const keyCode = event.keyCode;\n\n        const isCtrlA = (e) => e.keyCode === A && (e.ctrlKey || e.metaKey);\n        const isCtrlC = (e) => e.keyCode === C && (e.ctrlKey || e.metaKey);\n        const isCtrlV = (e) => e.keyCode === V && (e.ctrlKey || e.metaKey);\n        const isCtrlX = (e) => e.keyCode === X && (e.ctrlKey || e.metaKey);\n\n        const isFKey = (e) => e.keyCode >= F1 && e.keyCode <= F12;\n\n        const isNumber = (e) => (e.keyCode >= ZERO && e.keyCode <= NINE) ||\n            (e.keyCode >= NUMPAD_ZERO && e.keyCode <= NUMPAD_NINE);\n\n        const minuses = [NUMPAD_MINUS, DASH, FF_MINUS];\n        const serviceKeys = [DELETE, BACKSPACE, TAB, ESCAPE, ENTER];\n        const arrows = [LEFT_ARROW, RIGHT_ARROW];\n        const allowedKeys =  [HOME, END].concat(arrows).concat(serviceKeys).concat(minuses);\n\n        const isIEPeriod = (e) => e.key === '.' || e.key === 'Decimal';\n        const isNotIEPeriod = (e) => e.key === '.' || e.key === ',';\n\n        // Decimal is for IE\n        const isPeriod = (e) => this._platform.EDGE || this._platform.TRIDENT\n            ? isIEPeriod(e)\n            : isNotIEPeriod(e);\n\n        if (allowedKeys.indexOf(keyCode) !== -1 ||\n            isCtrlA(event) ||\n            isCtrlC(event) ||\n            isCtrlV(event) ||\n            isCtrlX(event) ||\n            isFKey(event) ||\n            isPeriod(event)\n        ) {\n            // let it happen, don't do anything\n            return;\n        }\n        // Ensure that it is not a number and stop the keypress\n        if (event.shiftKey || !isNumber(event)) {\n            event.preventDefault();\n\n            // process steps\n            const step = event.shiftKey ? this.bigStep : this.step;\n\n            if (keyCode === UP_ARROW) {\n                this.stepUp(step);\n            }\n\n            if (keyCode === DOWN_ARROW) {\n                this.stepDown(step);\n            }\n        }\n    }\n\n    onPaste(event) {\n        let value = event.clipboardData.getData('text');\n        value = this.normalizeSplitter(value);\n\n        if (!this.isDigit(value)) {\n            event.preventDefault();\n        }\n    }\n\n    stepUp(step: number) {\n        this._elementRef.nativeElement.focus();\n        const res = stepUp(this._host.valueAsNumber, this.max, this.min, step);\n        this._host.value = res === null ? '' : res.toString();\n        this._model.update.emit(this._host.valueAsNumber);\n    }\n\n    stepDown(step: number) {\n        this._elementRef.nativeElement.focus();\n        const res = stepDown(this._host.valueAsNumber, this.max, this.min, step);\n        this._host.value = res === null ? '' : res.toString();\n        this._model.update.emit(this._host.valueAsNumber);\n    }\n\n    private normalizeSplitter(value: string): string {\n        return value ? value.replace(/,/g, '.') : value;\n    }\n\n    private isDigit(value: string): boolean {\n        return this.isFloat(value) || this.isInt(value);\n    }\n\n    private isFloat(value: string): boolean {\n        return /^-?\\d+\\.\\d+$/.test(value);\n    }\n\n    private isInt(value: string): boolean {\n        return /^-?\\d+$/.test(value);\n    }\n}\n\n@Directive({\n    selector: `input[mcInput]`,\n    exportAs: 'mcInput',\n    host: {\n        class: 'mc-input',\n        // Native input properties that are overwritten by Angular inputs need to be synced with\n        // the native input element. Otherwise property bindings for those don't work.\n        '[attr.id]': 'id',\n        '[attr.placeholder]': 'placeholder',\n        '[disabled]': 'disabled',\n        '[required]': 'required',\n        '(blur)': '_focusChanged(false)',\n        '(focus)': '_focusChanged(true)',\n        '(input)': '_onInput()'\n    },\n    providers: [{ provide: McFormFieldControl, useExisting: McInput }]\n})\nexport class McInput extends _McInputMixinBase implements McFormFieldControl<any>, OnChanges,\n    OnDestroy, DoCheck, CanUpdateErrorState {\n\n    /** An object used to control when error messages are shown. */\n    @Input() errorStateMatcher: ErrorStateMatcher;\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    focused: boolean = false;\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    readonly stateChanges: Subject<void> = new Subject<void>();\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    controlType: string = 'mc-input';\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    @Input()\n    get disabled(): boolean {\n        if (this.ngControl && this.ngControl.disabled !== null) {\n            return this.ngControl.disabled;\n        }\n\n        return this._disabled;\n    }\n\n    set disabled(value: boolean) {\n        this._disabled = coerceBooleanProperty(value);\n\n        // Browsers may not fire the blur event if the input is disabled too quickly.\n        // Reset from here to ensure that the element doesn't become stuck.\n        if (this.focused) {\n            this.focused = false;\n            this.stateChanges.next();\n        }\n    }\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    @Input()\n    get id(): string {\n        return this._id;\n    }\n\n    set id(value: string) {\n        this._id = value || this._uid;\n    }\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    @Input() placeholder: string;\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    @Input()\n    get required(): boolean {\n        return this._required;\n    }\n\n    set required(value: boolean) {\n        this._required = coerceBooleanProperty(value);\n    }\n\n    // tslint:disable no-reserved-keywords\n    /** Input type of the element. */\n    @Input()\n    get type(): string {\n        return this._type;\n    }\n\n    set type(value: string) {\n        this._type = value || 'text';\n        this._validateType();\n\n        // When using Angular inputs, developers are no longer able to set the properties on the native\n        // input element. To ensure that bindings for `type` work, we need to sync the setter\n        // with the native property. Textarea elements don't support the type property or attribute.\n        if (getSupportedInputTypes().has(this._type)) {\n            this._elementRef.nativeElement.type = this._type;\n        }\n    }\n    // tslint:enable no-reserved-keywords\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    @Input()\n    get value(): string {\n        return this._inputValueAccessor.value;\n    }\n\n    set value(value: string) {\n        if (value !== this.value) {\n            this._inputValueAccessor.value = value;\n            this.stateChanges.next();\n        }\n    }\n\n    protected _uid = `mc-input-${nextUniqueId++}`;\n    protected _previousNativeValue: any;\n    protected _disabled = false;\n    protected _id: string;\n    protected _required = false;\n    protected _type = 'text';\n    protected _neverEmptyInputTypes = [\n        'date',\n        'datetime',\n        'datetime-local',\n        'month',\n        'time',\n        'week'\n    ].filter((t) => getSupportedInputTypes().has(t));\n\n    private _inputValueAccessor: { value: any };\n\n    constructor(protected _elementRef: ElementRef,\n                @Optional() @Self() public ngControl: NgControl,\n                @Optional() _parentForm: NgForm,\n                @Optional() _parentFormGroup: FormGroupDirective,\n                _defaultErrorStateMatcher: ErrorStateMatcher,\n                @Optional() @Self() @Inject(MC_INPUT_VALUE_ACCESSOR) inputValueAccessor: any) {\n        super(_defaultErrorStateMatcher, _parentForm, _parentFormGroup, ngControl);\n        // If no input value accessor was explicitly specified, use the element as the input value\n        // accessor.\n        this._inputValueAccessor = inputValueAccessor || this._elementRef.nativeElement;\n\n        this._previousNativeValue = this.value;\n\n        // Force setter to be called in case id was not specified.\n        this.id = this.id;\n    }\n\n    ngOnChanges() {\n        this.stateChanges.next();\n    }\n\n    ngOnDestroy() {\n        this.stateChanges.complete();\n    }\n\n    ngDoCheck() {\n        if (this.ngControl) {\n            // We need to re-evaluate this on every change detection cycle, because there are some\n            // error triggers that we can't subscribe to (e.g. parent form submissions). This means\n            // that whatever logic is in here has to be super lean or we risk destroying the performance.\n            this.updateErrorState();\n        }\n\n        // We need to dirty-check the native element's value, because there are some cases where\n        // we won't be notified when it changes (e.g. the consumer isn't using forms or they're\n        // updating the value using `emitEvent: false`).\n        this._dirtyCheckNativeValue();\n    }\n\n    /** Focuses the input. */\n    focus(): void {\n        this._elementRef.nativeElement.focus();\n    }\n\n    /** Callback for the cases where the focused state of the input changes. */\n    _focusChanged(isFocused: boolean) {\n        if (isFocused !== this.focused) {\n            this.focused = isFocused;\n            this.stateChanges.next();\n        }\n    }\n\n    _onInput() {\n        // This is a noop function and is used to let Angular know whenever the value changes.\n        // Angular will run a new change detection each time the `input` event has been dispatched.\n        // It's necessary that Angular recognizes the value change, because when floatingLabel\n        // is set to false and Angular forms aren't used, the placeholder won't recognize the\n        // value changes and will not disappear.\n        // Listening to the input event wouldn't be necessary when the input is using the\n        // FormsModule or ReactiveFormsModule, because Angular forms also listens to input events.\n    }\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    get empty(): boolean {\n        return !this._isNeverEmpty() && !this._elementRef.nativeElement.value && !this._isBadInput();\n    }\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    onContainerClick() {\n        this.focus();\n    }\n\n    /** Does some manual dirty checking on the native input `value` property. */\n    protected _dirtyCheckNativeValue() {\n        const newValue = this.value;\n\n        if (this._previousNativeValue !== newValue) {\n            this._previousNativeValue = newValue;\n            this.stateChanges.next();\n        }\n    }\n\n    /** Make sure the input is a supported type. */\n    protected _validateType() {\n        if (MC_INPUT_INVALID_TYPES.indexOf(this._type) > -1) {\n            throw getMcInputUnsupportedTypeError(this._type);\n        }\n    }\n\n    /** Checks whether the input type is one of the types that are never empty. */\n    protected _isNeverEmpty() {\n        return this._neverEmptyInputTypes.indexOf(this._type) > -1;\n    }\n\n    /** Checks whether the input is invalid based on the native validation. */\n    protected _isBadInput() {\n        // The `validity` property won't be present on platform-server.\n        const validity = (this._elementRef.nativeElement as HTMLInputElement).validity;\n\n        return validity && validity.badInput;\n    }\n}\n\n@Directive({\n    selector: 'input[mcInputMonospace]',\n    exportAs: 'McInputMonospace',\n    host: { class: 'mc-input_monospace' }\n})\nexport class McInputMono {\n}\n","import { Directive, forwardRef, Input, OnChanges, Provider, SimpleChanges } from '@angular/core';\nimport { AbstractControl, NG_VALIDATORS, ValidationErrors, Validator, ValidatorFn, Validators } from '@angular/forms';\n\n\nexport const MIN_VALIDATOR: Provider = {\n    provide: NG_VALIDATORS,\n    useExisting: forwardRef(() => MinValidator),\n    multi: true\n};\n\n/**\n * A directive which installs the {@link MinValidator} for any `formControlName`,\n * `formControl`, or control with `ngModel` that also has a `min` attribute.\n *\n * @experimental\n */\n@Directive({\n    selector: '[min][formControlName],[min][formControl],[min][ngModel]',\n    providers: [MIN_VALIDATOR],\n    host: {'[attr.min]': 'min ? min : null'}\n})\nexport class MinValidator implements Validator, OnChanges {\n\n    @Input() min: string;\n    private _validator: ValidatorFn;\n    private _onChange: () => void;\n\n    ngOnChanges(changes: SimpleChanges): void {\n        if ('min' in changes) {\n            this._createValidator();\n            if (this._onChange) { this._onChange(); }\n        }\n    }\n\n    validate(c: AbstractControl): ValidationErrors | null { return this._validator(c); }\n\n    registerOnValidatorChange(fn: () => void): void { this._onChange = fn; }\n\n    private _createValidator(): void { this._validator = Validators.min(parseInt(this.min, 10)); }\n}\n\n\nexport const MAX_VALIDATOR: Provider = {\n    provide: NG_VALIDATORS,\n    useExisting: forwardRef(() => MaxValidator),\n    multi: true\n};\n\n/**\n * A directive which installs the {@link MaxValidator} for any `formControlName`,\n * `formControl`, or control with `ngModel` that also has a `min` attribute.\n *\n * @experimental\n */\n@Directive({\n    selector: '[max][formControlName],[max][formControl],[max][ngModel]',\n    providers: [MAX_VALIDATOR],\n    host: {\n        '[attr.max]': 'max ? max : null'\n    }\n})\nexport class MaxValidator implements Validator,\n    OnChanges {\n\n    @Input() max: string;\n    private _validator: ValidatorFn;\n    private _onChange: () => void;\n\n    ngOnChanges(changes: SimpleChanges): void {\n        if ('max' in changes) {\n            this._createValidator();\n            if (this._onChange) { this._onChange(); }\n        }\n    }\n\n    validate(c: AbstractControl): ValidationErrors | null { return this._validator(c); }\n\n    registerOnValidatorChange(fn: () => void): void { this._onChange = fn; }\n\n    private _createValidator(): void { this._validator = Validators.max(parseInt(this.max, 10)); }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { A11yModule } from '@ptsecurity/cdk/a11y';\nimport { McCommonModule } from '@ptsecurity/mosaic/core';\n\nimport { McInput, McInputMono, McNumberInput } from './input';\nimport { MaxValidator, MinValidator } from './input-number-validators';\n\n\n@NgModule({\n    imports: [CommonModule, A11yModule, McCommonModule, FormsModule],\n    exports: [McInput, McNumberInput, McInputMono, MinValidator, MaxValidator],\n    declarations: [McInput, McNumberInput, McInputMono, MinValidator, MaxValidator ]\n})\nexport class McInputModule {\n}\n","import { Component } from '@angular/core';\n\n\n@Component({\n    selector: 'mc-content',\n    preserveWhitespaces: false,\n    templateUrl: './content.component.html',\n    styles: [\n        `:host {\n            display: block;\n        }`\n    ],\n    host: {\n        '[class.mc-layout-content]': 'true'\n    }\n})\nexport class McContentComponent {\n}\n","import { Component } from '@angular/core';\n\n\n@Component({\n    selector: 'mc-footer',\n    preserveWhitespaces: false,\n    templateUrl: './footer.component.html',\n    styles: [\n        `:host {\n            display: block;\n        }`\n    ],\n    host: {\n        '[class.mc-layout-footer]': 'true'\n    }\n})\nexport class McFooterComponent {\n}\n","import { Component } from '@angular/core';\n\n\n@Component({\n    selector : 'mc-header',\n    preserveWhitespaces: false,\n    templateUrl: './header.component.html',\n    styles: [\n        `:host {\n            display: block;\n        }`\n    ],\n    host: {\n        '[class.mc-layout-header]': 'true'\n    }\n})\nexport class McHeaderComponent {\n}\n","import { ChangeDetectionStrategy, Component, ViewEncapsulation } from '@angular/core';\n\n\n@Component({\n    selector: 'mc-layout',\n    preserveWhitespaces: false,\n    styleUrls: ['layout.css'],\n    templateUrl: './layout.component.html',\n    host: {\n        '[class.mc-layout]': 'true',\n        '[class.mc-layout-has-sidebar]': 'hasSidebar'\n    },\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class McLayoutComponent {\n    hasSidebar = false;\n}\n","import {\n    ChangeDetectionStrategy,\n    Component,\n    EventEmitter,\n    Host,\n    Input,\n    OnInit,\n    Optional,\n    Output\n} from '@angular/core';\nimport { toBoolean } from '@ptsecurity/mosaic/core';\n\nimport { McLayoutComponent } from './layout.component';\n\n\n@Component({\n    selector: 'mc-sidebar',\n    preserveWhitespaces: false,\n    templateUrl: './sidebar.component.html',\n    host: {\n        '[class.mc-layout-sidebar]': 'true',\n        '[class.mc-layout-sidebar-collapsed]': 'mcCollapsed',\n        '[style.flex]': 'mcFlex',\n        '[style.max-width.px]': 'mcWidth',\n        '[style.min-width.px]': 'mcWidth',\n        '[style.width.px]': 'mcWidth'\n    },\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class McSidebarComponent implements OnInit {\n\n    @Input() _mcWidth = 200;\n    @Input() mcCollapsedWidth = 80;\n\n    @Input()\n    set mcCollapsible(value: boolean) {\n        this.collapsible = toBoolean(value);\n    }\n\n    get mcCollapsible(): boolean {\n        return this.collapsible;\n    }\n\n    @Input()\n    set mcCollapsed(value: boolean) {\n        this.collapsed = toBoolean(value);\n    }\n\n    get mcCollapsed(): boolean {\n        return this.collapsed;\n    }\n\n    // tslint:disable-next-line\n    @Output() mcCollapsedChange = new EventEmitter();\n\n    private collapsed = false;\n    private collapsible = false;\n\n    get mcFlex(): string {\n        if (this.mcCollapsed) {\n            return `0 0 ${this.mcCollapsedWidth}px`;\n        } else {\n            return `0 0 ${this.mcWidth}px`;\n        }\n    }\n\n    get mcWidth(): number {\n        if (this.mcCollapsed) {\n            return this.mcCollapsedWidth;\n        } else {\n            return this._mcWidth;\n        }\n    }\n\n    constructor(\n        @Optional() @Host() private mcLayoutComponent: McLayoutComponent) {\n    }\n\n    ngOnInit() {\n        if (this.mcLayoutComponent) {\n            this.mcLayoutComponent.hasSidebar = true;\n        }\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { McContentComponent } from './content.component';\nimport { McFooterComponent } from './footer.component';\nimport { McHeaderComponent } from './header.component';\nimport { McLayoutComponent } from './layout.component';\nimport { McSidebarComponent } from './sidebar.component';\n\n\n@NgModule({\n    imports: [ CommonModule ],\n    exports: [\n        McLayoutComponent,\n        McContentComponent,\n        McFooterComponent,\n        McHeaderComponent,\n        McSidebarComponent\n    ],\n    declarations: [\n        McLayoutComponent,\n        McContentComponent,\n        McFooterComponent,\n        McHeaderComponent,\n        McSidebarComponent\n    ]\n})\nexport class McLayoutModule {\n}\n","import {\n    ChangeDetectionStrategy,\n    Component,\n    Directive,\n    ElementRef,\n    OnDestroy,\n    QueryList,\n    ViewEncapsulation,\n    ContentChildren\n} from '@angular/core';\n\nimport { FocusMonitor } from '@ptsecurity/cdk/a11y';\n\nimport { mixinColor, mixinDisabled, CanColor, CanDisable, CanDisableCtor, CanColorCtor } from '@ptsecurity/mosaic/core';\nimport { McIcon } from '@ptsecurity/mosaic/icon';\n\n\n@Directive({\n    selector: 'button[mc-button], a[mc-button]',\n    host: { class: 'mc-button' }\n})\nexport class McButtonCSSStyler {}\n\n\n@Directive({\n    selector: 'button[mc-icon-button], a[mc-icon-button]',\n    queries: {\n        contentChildren: new ContentChildren(McIcon)\n    },\n    host: { class: 'mc-icon-button' }\n})\nexport class McIconButtonCSSStyler {\n    nativeElement: Element;\n\n    contentChildren: QueryList<McIcon>;\n\n    constructor(elementRef: ElementRef) {\n        this.nativeElement = elementRef.nativeElement;\n    }\n\n    ngAfterContentInit() {\n        this._addClassModificatorForIcons();\n    }\n\n    _addClassModificatorForIcons() {\n        const twoIcons = 2;\n        const icons = this.contentChildren.map((item) => item._elementRef.nativeElement);\n\n        if (icons.length === 1) {\n            const iconElement = icons[0];\n\n            if (!iconElement.previousElementSibling && !iconElement.nextElementSibling) {\n                if (iconElement.nextSibling) {\n                    iconElement.classList.add('mc-icon_left');\n                    this.nativeElement.classList.add('mc-icon-button_left');\n                }\n\n                if (iconElement.previousSibling) {\n                    iconElement.classList.add('mc-icon_right');\n                    this.nativeElement.classList.add('mc-icon-button_right');\n                }\n            }\n        } else if (icons.length === twoIcons) {\n            const firstIconElement = icons[0];\n            const secondIconElement = icons[1];\n\n            firstIconElement.classList.add('mc-icon_left');\n            secondIconElement.classList.add('mc-icon_right');\n        }\n    }\n}\n\n\nexport class McButtonBase {\n    constructor(public _elementRef: ElementRef) {}\n}\n\nexport const _McButtonMixinBase:\n    CanDisableCtor &\n    CanColorCtor &\n    typeof McButtonBase =\n        mixinColor(mixinDisabled(McButtonBase));\n\n\n@Component({\n    selector: `\n        button[mc-button],\n        button[mc-xs-button],\n        button[mc-sm-button],\n        button[mc-lg-button],\n        button[mc-xl-button]\n    `,\n    templateUrl: './button.component.html',\n    styleUrls: ['./button.css'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n    inputs: ['disabled', 'color'],\n    host: {\n        '[disabled]': 'disabled || null'\n    }\n})\nexport class McButton extends _McButtonMixinBase implements OnDestroy, CanDisable, CanColor {\n    constructor(elementRef: ElementRef, private _focusMonitor: FocusMonitor) {\n        super(elementRef);\n\n        this._focusMonitor.monitor(this._elementRef.nativeElement, true);\n    }\n\n    ngOnDestroy() {\n        this._focusMonitor.stopMonitoring(this._elementRef.nativeElement);\n    }\n\n    focus(): void {\n        this._getHostElement().focus();\n    }\n\n    _getHostElement() {\n        return this._elementRef.nativeElement;\n    }\n}\n\n\n@Component({\n    selector: 'a[mc-button], a[mc-xs-button], a[mc-sm-button], a[mc-lg-button], a[mc-xl-button]',\n    templateUrl: './button.component.html',\n    styleUrls: ['./button.css'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n    inputs: ['disabled', 'color'],\n    host: {\n        '[attr.tabindex]': 'disabled ? -1 : 0',\n        '[attr.disabled]': 'disabled || null',\n        '(click)': '_haltDisabledEvents($event)'\n    }\n})\nexport class McAnchor extends McButton {\n    constructor(focusMonitor: FocusMonitor, elementRef: ElementRef) {\n        super(elementRef, focusMonitor);\n    }\n\n    _haltDisabledEvents(event: Event) {\n        if (this.disabled) {\n            event.preventDefault();\n            event.stopImmediatePropagation();\n        }\n    }\n}\n\n\n@Component({\n    selector: 'button[mc-icon-button]',\n    templateUrl: './button.component.html',\n    styleUrls: ['./button.css'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n    inputs: ['disabled', 'color'],\n    host: {\n        '[attr.tabindex]': 'disabled ? -1 : 0',\n        '[attr.disabled]': 'disabled || null'\n    }\n})\nexport class McIconButton extends McButton {\n    constructor(focusMonitor: FocusMonitor, elementRef: ElementRef) {\n        super(elementRef, focusMonitor);\n    }\n\n    _haltDisabledEvents(event: Event) {\n        if (this.disabled) {\n            event.preventDefault();\n            event.stopImmediatePropagation();\n        }\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { A11yModule } from '@ptsecurity/cdk/a11y';\nimport { PlatformModule } from '@ptsecurity/cdk/platform';\n\nimport {\n    McButton,\n    McAnchor,\n    McIconButton,\n    McButtonCSSStyler,\n    McIconButtonCSSStyler\n} from './button.component';\n\n\n@NgModule({\n    imports: [\n        CommonModule,\n        A11yModule,\n        PlatformModule\n    ],\n    exports: [\n        McButton,\n        McAnchor,\n        McIconButton,\n        McButtonCSSStyler,\n        McIconButtonCSSStyler\n    ],\n    declarations: [\n        McButton,\n        McAnchor,\n        McIconButton,\n        McButtonCSSStyler,\n        McIconButtonCSSStyler\n    ]\n})\nexport class McButtonModule {}\n","import {\n    Output,\n    ChangeDetectionStrategy,\n    Component,\n    ElementRef, Input,\n    OnDestroy, EventEmitter,\n    ViewEncapsulation, HostBinding\n} from '@angular/core';\n\nimport { FocusMonitor } from '@ptsecurity/cdk/a11y';\nimport { SPACE } from '@ptsecurity/cdk/keycodes';\n\n\n@Component({\n    selector: 'mc-card',\n    templateUrl: './card.component.html',\n    styleUrls: ['./card.component.css'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n    inputs: ['color'],\n    host: {\n        class: 'mc-card',\n        '[class.mc-card_readonly]': 'readonly',\n        '[class.mc-card_selected]': 'selected',\n        '(keydown)': 'onKeyDown($event)',\n        '(click)': 'onClick($event)'\n    }\n})\nexport class McCard implements OnDestroy {\n    get tabIndex(): number | null {\n        return this.readonly ? null : this._tabIndex;\n    }\n\n    @HostBinding('attr.tabIndex')\n    @Input()\n    set tabIndex(value: number | null) {\n        this._tabIndex = value;\n    }\n\n    @Input()\n    readonly = false;\n\n    @Input()\n    selected = false;\n\n    @Output()\n    selectedChange = new EventEmitter<boolean>();\n\n    private _tabIndex: number | null = 0;\n\n    constructor(private _elementRef: ElementRef, private _focusMonitor: FocusMonitor) {\n        this._focusMonitor.monitor(this._elementRef.nativeElement, false);\n    }\n\n    ngOnDestroy() {\n        this._focusMonitor.stopMonitoring(this._elementRef.nativeElement);\n    }\n\n    focus(): void {\n        this.hostElement.focus();\n    }\n\n    onClick($event: MouseEvent) {\n        if (!this.readonly) {\n            $event.stopPropagation();\n\n            this.selectedChange.emit(!this.selected);\n        }\n    }\n\n    private get hostElement() {\n        return this._elementRef.nativeElement;\n    }\n\n    onKeyDown($event: KeyboardEvent) {\n        switch ($event.keyCode) {\n            case SPACE:\n                if (!this.readonly) {\n                    $event.preventDefault();\n                    this.selectedChange.emit(!this.selected);\n                }\n                break;\n            default:\n        }\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { A11yModule } from '@ptsecurity/cdk/a11y';\nimport { PlatformModule } from '@ptsecurity/cdk/platform';\n\nimport {\n    McCard\n} from './card.component';\n\n\n@NgModule({\n    imports: [\n        CommonModule,\n        A11yModule,\n        PlatformModule\n    ],\n    exports: [McCard],\n    declarations: [McCard]\n})\nexport class McCardModule {}\n","import { InjectionToken } from '@angular/core';\n\n\n/**\n * Checkbox click action when user click on input element.\n * noop: Do not toggle checked or indeterminate.\n * check: Only toggle checked status, ignore indeterminate.\n * check-indeterminate: Toggle checked status, set indeterminate to false. Default behavior.\n * undefined: Same as `check-indeterminate`.\n */\nexport type McCheckboxClickAction = 'noop' | 'check' | 'check-indeterminate' | undefined;\n\n/**\n * Injection token that can be used to specify the checkbox click behavior.\n */\nexport const MC_CHECKBOX_CLICK_ACTION =\n    new InjectionToken<McCheckboxClickAction>('mc-checkbox-click-action');\n","import {\n    AfterViewInit,\n    Attribute,\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    ElementRef,\n    EventEmitter,\n    forwardRef,\n    Inject,\n    Input,\n    OnDestroy,\n    Optional,\n    Output,\n    ViewChild,\n    ViewEncapsulation\n} from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { FocusMonitor, FocusOrigin } from '@ptsecurity/cdk/a11y';\nimport {\n    CanColor, CanColorCtor,\n    CanDisable, CanDisableCtor,\n    HasTabIndex, HasTabIndexCtor,\n    mixinColor,\n    mixinDisabled,\n    mixinTabIndex,\n    toBoolean\n} from '@ptsecurity/mosaic/core';\n\nimport { MC_CHECKBOX_CLICK_ACTION, McCheckboxClickAction } from './checkbox-config';\n\n\n// Increasing integer for generating unique ids for checkbox components.\nlet nextUniqueId = 0;\n\n/**\n * Provider Expression that allows mc-checkbox to register as a ControlValueAccessor.\n * This allows it to support [(ngModel)].\n * @docs-private\n */\nexport const MC_CHECKBOX_CONTROL_VALUE_ACCESSOR: any = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => McCheckbox),\n    multi: true\n};\n\n/**\n * Represents the different states that require custom transitions between them.\n * @docs-private\n */\nexport enum TransitionCheckState {\n    /** The initial state of the component before any user interaction. */\n    Init,\n    /** The state representing the component when it's becoming checked. */\n    Checked,\n    /** The state representing the component when it's becoming unchecked. */\n    Unchecked,\n    /** The state representing the component when it's becoming indeterminate. */\n    Indeterminate\n}\n\n/** Change event object emitted by McCheckbox. */\nexport class McCheckboxChange {\n    /** The source McCheckbox of the event. */\n    source: McCheckbox;\n    /** The new `checked` value of the checkbox. */\n    checked: boolean;\n}\n\n// Boilerplate for applying mixins to McCheckbox.\n/** @docs-private */\nexport class McCheckboxBase {\n    constructor(public _elementRef: ElementRef) {\n    }\n}\n\nexport const _McCheckboxMixinBase:\n    HasTabIndexCtor &\n    CanColorCtor &\n    CanDisableCtor &\n    typeof McCheckboxBase =\n        mixinTabIndex(mixinColor(mixinDisabled(McCheckboxBase)));\n\n\n/**\n * A mosaic checkbox component. Supports all of the functionality of an HTML5 checkbox,\n * and exposes a similar API. A McCheckbox can be either checked, unchecked, indeterminate, or\n * disabled. Note that all additional accessibility attributes are taken care of by the component,\n * so there is no need to provide them yourself. However, if you want to omit a label and still\n * have the checkbox be accessible, you may supply an [aria-label] input.\n */\n@Component({\n    selector: 'mc-checkbox',\n    templateUrl: 'checkbox.html',\n    styleUrls: ['checkbox.css'],\n    exportAs: 'mcCheckbox',\n    host: {\n        class: 'mc-checkbox',\n        '[id]': 'id',\n        '[attr.id]': 'id',\n        '[class.mc-checkbox-indeterminate]': 'indeterminate',\n        '[class.mc-checkbox-checked]': 'checked',\n        '[class.mc-checkbox-disabled]': 'disabled',\n        '[class.mc-checkbox-label-before]': 'labelPosition == \"before\"'\n    },\n    providers: [MC_CHECKBOX_CONTROL_VALUE_ACCESSOR],\n    inputs: ['color', 'tabIndex'],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class McCheckbox extends _McCheckboxMixinBase implements ControlValueAccessor,\n    AfterViewInit, OnDestroy, CanColor, CanDisable, HasTabIndex {\n\n    /**\n     * Attached to the aria-label attribute of the host element. In most cases, arial-labelledby will\n     * take precedence so this may be omitted.\n     */\n    @Input('aria-label') ariaLabel: string = '';\n\n    /**\n     * Users can specify the `aria-labelledby` attribute which will be forwarded to the input element\n     */\n    @Input('aria-labelledby') ariaLabelledby: string | null = null;\n\n    private _uniqueId: string = `mc-checkbox-${++nextUniqueId}`;\n\n    /** A unique id for the checkbox input. If none is supplied, it will be auto-generated. */\n    @Input() id: string = this._uniqueId;\n\n    /** Returns the unique id for the visual hidden input. */\n    get inputId(): string {\n        return `${this.id || this._uniqueId}-input`;\n    }\n\n    /** Whether the checkbox is required. */\n    @Input()\n    get required(): boolean {\n        return this._required;\n    }\n\n    set required(value: boolean) {\n        this._required = toBoolean(value);\n    }\n\n    private _required: boolean;\n\n    /** Whether the label should appear after or before the checkbox. Defaults to 'after' */\n    @Input() labelPosition: 'before' | 'after' = 'after';\n\n    /** Name value will be applied to the input element if present */\n    @Input() name: string | null = null;\n\n    /** Event emitted when the checkbox's `checked` value changes. */\n    @Output() readonly change: EventEmitter<McCheckboxChange> =\n        new EventEmitter<McCheckboxChange>();\n\n    /** Event emitted when the checkbox's `indeterminate` value changes. */\n    @Output() readonly indeterminateChange: EventEmitter<boolean> = new EventEmitter<boolean>();\n\n    /** The value attribute of the native input element */\n    @Input() value: string;\n\n    /** The native `<input type=\"checkbox\">` element */\n    @ViewChild('input') _inputElement: ElementRef;\n\n    /**\n     * Called when the checkbox is blurred. Needed to properly implement ControlValueAccessor.\n     * @docs-private\n     */\n    _onTouched: () => any = () => {\n    }\n\n    private _currentAnimationClass: string = '';\n\n    private _currentCheckState: TransitionCheckState = TransitionCheckState.Init;\n\n    private _controlValueAccessorChangeFn: (value: any) => void = () => {\n    }\n\n    constructor(elementRef: ElementRef,\n                private _changeDetectorRef: ChangeDetectorRef,\n                private _focusMonitor: FocusMonitor,\n                @Attribute('tabindex') tabIndex: string,\n                @Optional() @Inject(MC_CHECKBOX_CLICK_ACTION)\n                private _clickAction: McCheckboxClickAction) {\n        super(elementRef);\n\n        this.tabIndex = parseInt(tabIndex) || 0;\n    }\n\n    ngAfterViewInit() {\n        this._focusMonitor\n            .monitor(this._inputElement.nativeElement)\n            .subscribe((focusOrigin) => this._onInputFocusChange(focusOrigin));\n    }\n\n    ngOnDestroy() {\n        this._focusMonitor.stopMonitoring(this._inputElement.nativeElement);\n    }\n\n    /**\n     * Whether the checkbox is checked.\n     */\n    @Input()\n    get checked(): boolean {\n        return this._checked;\n    }\n\n    set checked(value: boolean) {\n        if (value != this.checked) {\n            this._checked = value;\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n\n    private _checked: boolean = false;\n\n    /**\n     * Whether the checkbox is disabled. This fully overrides the implementation provided by\n     * mixinDisabled, but the mixin is still required because mixinTabIndex requires it.\n     */\n    @Input()\n    get disabled() {\n        return this._disabled;\n    }\n\n    set disabled(value: any) {\n        if (value != this.disabled) {\n            this._disabled = value;\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n\n    private _disabled: boolean = false;\n\n    /**\n     * Whether the checkbox is indeterminate. This is also known as \"mixed\" mode and can be used to\n     * represent a checkbox with three states, e.g. a checkbox that represents a nested list of\n     * checkable items. Note that whenever checkbox is manually clicked, indeterminate is immediately\n     * set to false.\n     */\n    @Input()\n    get indeterminate(): boolean {\n        return this._indeterminate;\n    }\n\n    set indeterminate(value: boolean) {\n        const changed = value != this._indeterminate;\n        this._indeterminate = value;\n\n        if (changed) {\n            if (this._indeterminate) {\n                this._transitionCheckState(TransitionCheckState.Indeterminate);\n            } else {\n                this._transitionCheckState(\n                    this.checked ? TransitionCheckState.Checked : TransitionCheckState.Unchecked);\n            }\n            this.indeterminateChange.emit(this._indeterminate);\n        }\n    }\n\n    private _indeterminate: boolean = false;\n\n    /** Method being called whenever the label text changes. */\n    _onLabelTextChange() {\n        // This method is getting called whenever the label of the checkbox changes.\n        // Since the checkbox uses the OnPush strategy we need to notify it about the change\n        // that has been recognized by the cdkObserveContent directive.\n        this._changeDetectorRef.markForCheck();\n    }\n\n    // Implemented as part of ControlValueAccessor.\n    writeValue(value: any) {\n        this.checked = !!value;\n    }\n\n    // Implemented as part of ControlValueAccessor.\n    registerOnChange(fn: (value: any) => void) {\n        this._controlValueAccessorChangeFn = fn;\n    }\n\n    // Implemented as part of ControlValueAccessor.\n    registerOnTouched(fn: any) {\n        this._onTouched = fn;\n    }\n\n    // Implemented as part of ControlValueAccessor.\n    setDisabledState(isDisabled: boolean) {\n        this.disabled = isDisabled;\n    }\n\n    _getAriaChecked(): 'true' | 'false' | 'mixed' {\n        return this.checked ? 'true' : (this.indeterminate ? 'mixed' : 'false');\n    }\n\n    private _transitionCheckState(newState: TransitionCheckState) {\n        const oldState = this._currentCheckState;\n        const element: HTMLElement = this._elementRef.nativeElement;\n\n        if (oldState === newState) {\n            return;\n        }\n        if (this._currentAnimationClass.length > 0) {\n            element.classList.remove(this._currentAnimationClass);\n        }\n\n        this._currentCheckState = newState;\n\n        if (this._currentAnimationClass.length > 0) {\n            element.classList.add(this._currentAnimationClass);\n        }\n    }\n\n    private _emitChangeEvent() {\n        const event = new McCheckboxChange();\n        event.source = this;\n        event.checked = this.checked;\n\n        this._controlValueAccessorChangeFn(this.checked);\n        this.change.emit(event);\n    }\n\n    /** Function is called whenever the focus changes for the input element. */\n    private _onInputFocusChange(focusOrigin: FocusOrigin) {\n        if (focusOrigin) {\n            this._onTouched();\n        }\n    }\n\n    /** Toggles the `checked` state of the checkbox. */\n    toggle(): void {\n        this.checked = !this.checked;\n    }\n\n    /**\n     * Event handler for checkbox input element.\n     * Toggles checked state if element is not disabled.\n     * Do not toggle on (change) event since IE doesn't fire change event when\n     *   indeterminate checkbox is clicked.\n     * @param event\n     */\n    _onInputClick(event: Event) {\n        // We have to stop propagation for click events on the visual hidden input element.\n        // By default, when a user clicks on a label element, a generated click event will be\n        // dispatched on the associated input element. Since we are using a label element as our\n        // root container, the click event on the `checkbox` will be executed twice.\n        // The real click event will bubble up, and the generated click event also tries to bubble up.\n        // This will lead to multiple click events.\n        // Preventing bubbling for the second event will solve that issue.\n        event.stopPropagation();\n\n        // If resetIndeterminate is false, and the current state is indeterminate, do nothing on click\n        if (!this.disabled && this._clickAction !== 'noop') {\n            // When user manually click on the checkbox, `indeterminate` is set to false.\n            if (this.indeterminate && this._clickAction !== 'check') {\n\n                Promise.resolve().then(() => {\n                    this._indeterminate = false;\n                    this.indeterminateChange.emit(this._indeterminate);\n                });\n            }\n\n            this.toggle();\n            this._transitionCheckState(\n                this._checked ? TransitionCheckState.Checked : TransitionCheckState.Unchecked);\n\n            // Emit our custom change event if the native input emitted one.\n            // It is important to only emit it, if the native input triggered one, because\n            // we don't want to trigger a change event, when the `checked` variable changes for example.\n            this._emitChangeEvent();\n        } else if (!this.disabled && this._clickAction === 'noop') {\n            // Reset native input when clicked with noop. The native checkbox becomes checked after\n            // click, reset it to be align with `checked` value of `mc-checkbox`.\n            this._inputElement.nativeElement.checked = this.checked;\n            this._inputElement.nativeElement.indeterminate = this.indeterminate;\n        }\n    }\n\n    /** Focuses the checkbox. */\n    focus(): void {\n        this._focusMonitor.focusVia(this._inputElement.nativeElement, 'keyboard');\n    }\n\n    _onInteractionEvent(event: Event) {\n        // We always have to stop propagation on the change event.\n        // Otherwise the change event, from the input element, will bubble up and\n        // emit its event object to the `change` output.\n        event.stopPropagation();\n    }\n}\n","import {\n    Directive,\n    forwardRef,\n    Provider\n} from '@angular/core';\nimport {\n    CheckboxRequiredValidator,\n    NG_VALIDATORS\n} from '@angular/forms';\n\n\nexport const MC_CHECKBOX_REQUIRED_VALIDATOR: Provider = {\n    provide: NG_VALIDATORS,\n    useExisting: forwardRef(() => McCheckboxRequiredValidator),\n    multi: true\n};\n\n/**\n * Validator for Mosaic checkbox's required attribute in template-driven checkbox.\n * Current CheckboxRequiredValidator only work with `input type=checkbox` and does not\n * work with `mc-checkbox`.\n */\n@Directive({\n    selector: `mc-checkbox[required][formControlName],\n             mc-checkbox[required][formControl], mc-checkbox[required][ngModel]`,\n    providers: [MC_CHECKBOX_REQUIRED_VALIDATOR],\n    host: { '[attr.required]': 'required ? \"\" : null' }\n})\nexport class McCheckboxRequiredValidator extends CheckboxRequiredValidator {\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { McCheckbox } from './checkbox';\nimport { McCheckboxRequiredValidator } from './checkbox-required-validator';\n\n\n@NgModule({\n    imports: [CommonModule],\n    exports: [McCheckbox, McCheckboxRequiredValidator],\n    declarations: [McCheckbox, McCheckboxRequiredValidator]\n})\nexport class McCheckboxModule {\n}\n","import { ChangeDetectionStrategy, Component, Input, ViewEncapsulation } from '@angular/core';\nimport { coerceBooleanProperty } from '@ptsecurity/cdk/coercion';\n\n\n@Component({\n    selector: 'mc-divider',\n    host: {\n        class: 'mc-divider',\n        role: 'separator',\n        '[attr.aria-orientation]': 'vertical ? \"vertical\" : \"horizontal\"',\n        '[class.mc-divider-vertical]': 'vertical',\n        '[class.mc-divider-inset]': 'inset'\n    },\n    template: '',\n    styleUrls: ['divider.css'],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    preserveWhitespaces: false\n})\nexport class McDivider {\n    // Whether the divider is vertically aligned.\n    @Input()\n    get vertical(): boolean {\n        return this._vertical;\n    }\n\n    set vertical(value: boolean) {\n        this._vertical = coerceBooleanProperty(value);\n    }\n\n    private _vertical: boolean = false;\n\n    // Whether the divider is an inset divider.\n    @Input()\n    get inset(): boolean {\n        return this._inset;\n    }\n\n    set inset(value: boolean) {\n        this._inset = coerceBooleanProperty(value);\n    }\n\n    private _inset: boolean = false;\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { McDivider } from './divider.component';\n\n\n@NgModule({\n    imports: [CommonModule],\n    exports: [McDivider],\n    declarations: [McDivider]\n})\nexport class McDividerModule {\n}\n","import { DOCUMENT } from '@angular/common';\nimport {\n    Directive,\n    TemplateRef,\n    ComponentFactoryResolver,\n    ApplicationRef,\n    Injector,\n    ViewContainerRef,\n    Inject,\n    OnDestroy\n} from '@angular/core';\nimport { TemplatePortal, DomPortalOutlet } from '@ptsecurity/cdk/portal';\nimport { Subject } from 'rxjs';\n\n\n/**\n * Dropdown content that will be rendered lazily once the dropdown is opened.\n */\n@Directive({\n    selector: 'ng-template[mcDropdownContent]'\n})\nexport class McDropdownContent implements OnDestroy {\n\n    /** Emits when the dropdown content has been attached. */\n    _attached = new Subject<void>();\n    private _portal: TemplatePortal;\n    private _outlet: DomPortalOutlet;\n\n    constructor(\n        private _template: TemplateRef<any>,\n        private _componentFactoryResolver: ComponentFactoryResolver,\n        private _appRef: ApplicationRef,\n        private _injector: Injector,\n        private _viewContainerRef: ViewContainerRef,\n        @Inject(DOCUMENT) private _document: any) {}\n\n    /**\n     * Attaches the content with a particular context.\n     * @docs-private\n     */\n    attach(context: any = {}) {\n        if (!this._portal) {\n            this._portal = new TemplatePortal(this._template, this._viewContainerRef);\n        }\n\n        this.detach();\n\n        if (!this._outlet) {\n            this._outlet = new DomPortalOutlet(this._document.createElement('div'),\n                this._componentFactoryResolver, this._appRef, this._injector);\n        }\n\n        const element: HTMLElement = this._template.elementRef.nativeElement;\n\n        // Because we support opening the same dropdown from different triggers (which in turn have their\n        // own `OverlayRef` panel), we have to re-insert the host element every time, otherwise we\n        // risk it staying attached to a pane that's no longer in the DOM.\n        element.parentNode!.insertBefore(this._outlet.outletElement, element);\n        this._portal.attach(this._outlet, context);\n        this._attached.next();\n    }\n\n    /**\n     * Detaches the content.\n     * @docs-private\n     */\n    detach() {\n        if (this._portal.isAttached) {\n            this._portal.detach();\n        }\n    }\n\n    ngOnDestroy() {\n        if (this._outlet) {\n            this._outlet.dispose();\n        }\n    }\n}\n","import { EventEmitter, TemplateRef, InjectionToken } from '@angular/core';\nimport { FocusOrigin } from '@ptsecurity/cdk/a11y';\nimport { Direction } from '@ptsecurity/cdk/bidi';\n\nimport { McDropdownContent } from './dropdown-content';\nimport { DropdownPositionX, DropdownPositionY } from './dropdown-positions';\n\n\n/**\n * Injection token used to provide the parent dropdown to dropdown-specific components.\n * @docs-private\n */\nexport const MC_DROPDOWN_PANEL = new InjectionToken<McDropdownPanel>('MC_DROPDOWN_PANEL');\n\n/**\n * Interface for a custom dropdown panel that can be used with `mcDropdownTriggerFor`.\n * @docs-private\n */\n// tslint:disable-next-line:interface-name\nexport interface McDropdownPanel<T = any> {\n    xPosition: DropdownPositionX;\n    yPosition: DropdownPositionY;\n    overlapTrigger: boolean;\n    templateRef: TemplateRef<any>;\n    closed: EventEmitter<void | 'click' | 'keydown' | 'tab'>;\n    direction?: Direction;\n    lazyContent?: McDropdownContent;\n    backdropClass?: string;\n    hasBackdrop?: boolean;\n    focusFirstItem(origin?: FocusOrigin): void;\n    resetActiveItem(): void;\n    setPositionClasses?(x: DropdownPositionX, y: DropdownPositionY): void;\n    addItem?(item: T): void;\n    removeItem?(item: T): void;\n}\n","import { DOCUMENT } from '@angular/common';\nimport {\n    ChangeDetectionStrategy,\n    Component,\n    ElementRef,\n    OnDestroy,\n    ViewEncapsulation,\n    Inject,\n    Optional\n} from '@angular/core';\nimport { IFocusableOption, FocusMonitor, FocusOrigin } from '@ptsecurity/cdk/a11y';\nimport {\n    CanDisable, CanDisableCtor,\n    mixinDisabled\n} from '@ptsecurity/mosaic/core';\n\nimport { MC_DROPDOWN_PANEL, McDropdownPanel } from './dropdown-panel';\n\n\n// Boilerplate for applying mixins to McDropdownItem.\n/** @docs-private */\nexport class McDropdownItemBase {}\nexport const _McDropdownItemMixinBase: CanDisableCtor & typeof McDropdownItemBase =\n    mixinDisabled(McDropdownItemBase);\n\n/**\n * This directive is intended to be used inside an mc-dropdown tag.\n * It exists mostly to set the role attribute.\n */\n@Component({\n    selector: 'mc-dropdown-item, [mc-dropdown-item]',\n    exportAs: 'mcDropdownItem',\n    inputs: ['disabled'],\n    host: {\n        role: 'dropdown-item',\n        class: 'mc-dropdown__item',\n        '[attr.tabindex]': '_getTabIndex()',\n        '[attr.disabled]': 'disabled || null',\n        '(click)': '_checkDisabled($event)'\n    },\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n    template: `<ng-content></ng-content>`\n})\nexport class McDropdownItem extends _McDropdownItemMixinBase\n    implements IFocusableOption, CanDisable, OnDestroy {\n\n    private _document: Document;\n\n    constructor(\n        private _elementRef: ElementRef<HTMLElement>,\n        @Inject(DOCUMENT) document: any,\n        private _focusMonitor: FocusMonitor,\n        @Inject(MC_DROPDOWN_PANEL) @Optional() private _parentDropdownPanel?: McDropdownPanel<McDropdownItem>) {\n        super();\n\n        if (_focusMonitor) {\n            // Start monitoring the element so it gets the appropriate focused classes. We want\n            // to show the focus style for dropdown items only when the focus was not caused by a\n            // mouse or touch interaction.\n            _focusMonitor.monitor(this._elementRef.nativeElement, false);\n        }\n\n        if (_parentDropdownPanel && _parentDropdownPanel.addItem) {\n            _parentDropdownPanel.addItem(this);\n        }\n\n        this._document = document;\n    }\n\n    /** Focuses the dropdown item. */\n    focus(origin: FocusOrigin = 'program'): void {\n        if (this._focusMonitor) {\n            this._focusMonitor.focusVia(this._getHostElement(), origin);\n        } else {\n            this._getHostElement().focus();\n        }\n    }\n\n    ngOnDestroy() {\n        if (this._focusMonitor) {\n            this._focusMonitor.stopMonitoring(this._elementRef.nativeElement);\n        }\n\n        if (this._parentDropdownPanel && this._parentDropdownPanel.removeItem) {\n            this._parentDropdownPanel.removeItem(this);\n        }\n    }\n\n    /** Used to set the `tabindex`. */\n    _getTabIndex(): string {\n        return this.disabled ? '-1' : '0';\n    }\n\n    /** Returns the host DOM element. */\n    _getHostElement(): HTMLElement {\n        return this._elementRef.nativeElement;\n    }\n\n    /** Prevents the default element actions if it is disabled. */\n    _checkDisabled(event: Event): void {\n        if (this.disabled) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n    }\n\n    /** Gets the label to be used when determining whether the option should be focused. */\n    getLabel(): string {\n        const element: HTMLElement = this._elementRef.nativeElement;\n        // tslint:disable-next-line:no-magic-numbers\n        const textNodeType = this._document ? this._document.TEXT_NODE : 3;\n        let output = '';\n\n        if (element.childNodes) {\n            const length = element.childNodes.length;\n\n            // Go through all the top-level text nodes and extract their text.\n            // We skip anything that's not a text node to prevent the text from\n            // being thrown off by something like an icon.\n            for (let i = 0; i < length; i++) {\n                if (element.childNodes[i].nodeType === textNodeType) {\n                    output += element.childNodes[i].textContent;\n                }\n            }\n        }\n\n        return output.trim();\n    }\n}\n","import {\n    trigger,\n    state,\n    style,\n    animate,\n    transition,\n    query,\n    group,\n    AnimationTriggerMetadata\n} from '@angular/animations';\n\n\n/**\n * Animations used by the mc-dropdown component.\n * Animation duration and timing values are based on:\n * https://material.io/guidelines/components/menus.html#menus-usage\n * @docs-private\n */\nexport const mcDropdownAnimations: {\n    readonly transformDropdown: AnimationTriggerMetadata;\n    readonly fadeInItems: AnimationTriggerMetadata;\n} = {\n    /**\n     * This animation controls the dropdown panel's entry and exit from the page.\n     *\n     * When the dropdown panel is added to the DOM, it scales in and fades in its border.\n     *\n     * When the dropdown panel is removed from the DOM, it simply fades out after a brief\n     * delay to display the ripple.\n     */\n    transformDropdown: trigger('transformDropdown', [\n        state('void', style({\n            opacity: 0,\n            transform: 'scale(0.8)'\n        })),\n        transition('void => enter', group([\n            query('.mc-dropdown__content', animate('50ms linear', style({opacity: 1}))),\n            animate('50ms cubic-bezier(0, 0, 0.2, 1)', style({transform: 'scale(1)'}))\n        ])),\n        transition('* => void', animate('50ms 25ms linear', style({opacity: 0})))\n    ]),\n\n\n    /**\n     * This animation fades in the background color and content of the dropdown panel\n     * after its containing element is scaled in.\n     */\n    fadeInItems: trigger('fadeInItems', [\n        // now. Remove next time we do breaking changes.\n        state('showing', style({opacity: 1})),\n        transition('void => *', [\n            style({opacity: 0}),\n            animate('200ms 60ms cubic-bezier(0.55, 0, 0.55, 0.2)')\n        ])\n    ])\n};\n\nexport const fadeInItems = mcDropdownAnimations.fadeInItems;\n\nexport const transformDropdown = mcDropdownAnimations.transformDropdown;\n","import { AnimationEvent } from '@angular/animations';\nimport {\n    AfterContentInit,\n    ChangeDetectionStrategy,\n    Component,\n    ContentChild,\n    ContentChildren,\n    ElementRef,\n    EventEmitter,\n    Inject,\n    InjectionToken,\n    Input,\n    NgZone,\n    OnDestroy,\n    Output,\n    TemplateRef,\n    QueryList,\n    ViewChild,\n    ViewEncapsulation,\n    OnInit\n} from '@angular/core';\nimport { FocusKeyManager, FocusOrigin } from '@ptsecurity/cdk/a11y';\nimport { Direction } from '@ptsecurity/cdk/bidi';\nimport { coerceBooleanProperty } from '@ptsecurity/cdk/coercion';\nimport { ESCAPE, DOWN_ARROW, UP_ARROW } from '@ptsecurity/cdk/keycodes';\nimport { Subject, Subscription } from 'rxjs';\nimport { take } from 'rxjs/operators';\n\nimport { mcDropdownAnimations } from './dropdown-animations';\nimport { McDropdownContent } from './dropdown-content';\nimport { throwMcDropdownInvalidPositionX, throwMcDropdownInvalidPositionY } from './dropdown-errors';\nimport { McDropdownItem } from './dropdown-item';\nimport { MC_DROPDOWN_PANEL, McDropdownPanel } from './dropdown-panel';\nimport { DropdownPositionX, DropdownPositionY } from './dropdown-positions';\n\n\n/** Default `mc-dropdown` options that can be overridden. */\n// tslint:disable-next-line:interface-name\nexport interface McDropdownDefaultOptions {\n    /** The x-axis position of the dropdown. */\n    xPosition: DropdownPositionX;\n\n    /** The y-axis position of the dropdown. */\n    yPosition: DropdownPositionY;\n\n    /** Whether the dropdown should overlap the dropdown trigger. */\n    overlapTrigger: boolean;\n\n    /** Class to be applied to the dropdown's backdrop. */\n    backdropClass: string;\n\n    /** Whether the dropdown has a backdrop. */\n    hasBackdrop?: boolean;\n}\n\n/** Injection token to be used to override the default options for `mc-dropdown`. */\nexport const MC_DROPDOWN_DEFAULT_OPTIONS =\n    new InjectionToken<McDropdownDefaultOptions>('mc-dropdown-default-options', {\n        providedIn: 'root',\n        factory: MC_DROPDOWN_DEFAULT_OPTIONS_FACTORY\n    });\n\n/** @docs-private */\nexport function MC_DROPDOWN_DEFAULT_OPTIONS_FACTORY(): McDropdownDefaultOptions {\n    return {\n        overlapTrigger: false,\n        xPosition: 'after',\n        yPosition: 'below',\n        backdropClass: 'cdk-overlay-transparent-backdrop'\n    };\n}\n\n@Component({\n    selector: 'mc-dropdown',\n    templateUrl: 'dropdown.html',\n    styleUrls: ['dropdown.css'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n    exportAs: 'mcDropdown',\n    animations: [\n        mcDropdownAnimations.transformDropdown,\n        mcDropdownAnimations.fadeInItems\n    ],\n    providers: [\n        {provide: MC_DROPDOWN_PANEL, useExisting: McDropdown}\n    ]\n})\nexport class McDropdown implements AfterContentInit, McDropdownPanel<McDropdownItem>, OnInit, OnDestroy {\n\n    /** Position of the dropdown in the X axis. */\n    @Input()\n    get xPosition(): DropdownPositionX { return this._xPosition; }\n    set xPosition(value: DropdownPositionX) {\n        if (value !== 'before' && value !== 'after') {\n            throwMcDropdownInvalidPositionX();\n        }\n        this._xPosition = value;\n        this.setPositionClasses();\n    }\n\n    /** Position of the dropdown in the Y axis. */\n    @Input()\n    get yPosition(): DropdownPositionY { return this._yPosition; }\n    set yPosition(value: DropdownPositionY) {\n        if (value !== 'above' && value !== 'below') {\n            throwMcDropdownInvalidPositionY();\n        }\n        this._yPosition = value;\n        this.setPositionClasses();\n    }\n\n    /** Whether the dropdown should overlap its trigger. */\n    @Input()\n    get overlapTrigger(): boolean { return this._overlapTrigger; }\n    set overlapTrigger(value: boolean) {\n        this._overlapTrigger = coerceBooleanProperty(value);\n    }\n\n    /** Whether the dropdown has a backdrop. */\n    @Input()\n    get hasBackdrop(): boolean | undefined { return this._hasBackdrop; }\n    set hasBackdrop(value: boolean | undefined) {\n        this._hasBackdrop = coerceBooleanProperty(value);\n    }\n\n    /**\n     * This method takes classes set on the host mc-dropdown element and applies them on the\n     * dropdown template that displays in the overlay container.  Otherwise, it's difficult\n     * to style the containing dropdown from outside the component.\n     * @param classes list of class names\n     */\n    @Input('class')\n    set panelClass(classes: string) {\n        if (classes && classes.length) {\n            this._classList = classes.split(' ').reduce((obj: any, className: string) => {\n                obj[className] = true;\n\n                return obj;\n            }, {});\n\n            this._elementRef.nativeElement.className = '';\n        }\n    }\n\n    /** Config object to be passed into the dropdown's ngClass */\n    _classList: {[key: string]: boolean} = {};\n\n    /** Current state of the panel animation. */\n    _panelAnimationState: 'void' | 'enter' = 'void';\n\n    /** Emits whenever an animation on the dropdown completes. */\n    _animationDone = new Subject<AnimationEvent>();\n\n    /** Whether the dropdown is animating. */\n    _isAnimating: boolean;\n\n    /** Layout direction of the dropdown. */\n    direction: Direction;\n\n    /** Class to be added to the backdrop element. */\n    @Input() backdropClass: string = this._defaultOptions.backdropClass;\n\n    /** @docs-private */\n    @ViewChild(TemplateRef) templateRef: TemplateRef<any>;\n\n    /**\n     * List of the items inside of a dropdown.\n     */\n    @ContentChildren(McDropdownItem) items: QueryList<McDropdownItem>;\n\n    /**\n     * Dropdown content that will be rendered lazily.\n     * @docs-private\n     */\n    @ContentChild(McDropdownContent) lazyContent: McDropdownContent;\n\n    /** Event emitted when the dropdown is closed. */\n    @Output() readonly closed: EventEmitter<void | 'click' | 'keydown' | 'tab'> =\n        new EventEmitter<void | 'click' | 'keydown' | 'tab'>();\n\n    private _keyManager: FocusKeyManager<McDropdownItem>;\n    private _xPosition: DropdownPositionX = this._defaultOptions.xPosition;\n    private _yPosition: DropdownPositionY = this._defaultOptions.yPosition;\n\n    /** Dropdown items inside the current dropdown. */\n    private _items: McDropdownItem[] = [];\n\n    /** Emits whenever the amount of dropdown items changes. */\n    private _itemChanges = new Subject<McDropdownItem[]>();\n\n    /** Subscription to tab events on the dropdown panel */\n    private _tabSubscription = Subscription.EMPTY;\n    private _overlapTrigger: boolean = this._defaultOptions.overlapTrigger;\n    private _hasBackdrop: boolean | undefined = this._defaultOptions.hasBackdrop;\n\n    constructor(\n        private _elementRef: ElementRef<HTMLElement>,\n        private _ngZone: NgZone,\n        @Inject(MC_DROPDOWN_DEFAULT_OPTIONS) private _defaultOptions: McDropdownDefaultOptions) { }\n\n    ngOnInit() {\n        this.setPositionClasses();\n    }\n\n    ngAfterContentInit() {\n        this._keyManager = new FocusKeyManager<McDropdownItem>(this.items).withWrap().withTypeAhead();\n        this._tabSubscription = this._keyManager.tabOut.subscribe(() => this.closed.emit('tab'));\n    }\n\n    ngOnDestroy() {\n        this._tabSubscription.unsubscribe();\n        this.closed.complete();\n    }\n\n    /** Handle a keyboard event from the dropdown, delegating to the appropriate action. */\n    _handleKeydown(event: KeyboardEvent) {\n        // tslint:disable-next-line:deprecation\n        const keyCode = event.keyCode;\n\n        switch (keyCode) {\n            case ESCAPE:\n                this.closed.emit('keydown');\n                break;\n            case UP_ARROW:\n            case DOWN_ARROW:\n                this._keyManager.setFocusOrigin('keyboard');\n                this._keyManager.onKeydown(event);\n                break;\n              default:\n                this._keyManager.onKeydown(event);\n        }\n    }\n\n    /**\n     * Focus the first item in the dropdown.\n     * @param origin Action from which the focus originated. Used to set the correct styling.\n     */\n    focusFirstItem(origin: FocusOrigin = 'program'): void {\n        // When the content is rendered lazily, it takes a bit before the items are inside the DOM.\n        if (this.lazyContent) {\n            this._ngZone.onStable.asObservable()\n                .pipe(take(1))\n                .subscribe(() => this._keyManager.setFocusOrigin(origin).setFirstItemActive());\n        } else {\n            this._keyManager.setFocusOrigin(origin).setFirstItemActive();\n        }\n    }\n\n    /**\n     * Resets the active item in the dropdown. This is used when the dropdown is opened, allowing\n     * the user to start from the first option when pressing the down arrow.\n     */\n    resetActiveItem() {\n        this._keyManager.setActiveItem(-1);\n    }\n\n    /**\n     * Registers a dropdown item with the dropdown.\n     * @docs-private\n     */\n    addItem(item: McDropdownItem) {\n        // We register the items through this method, rather than picking them up through\n        // `ContentChildren`, because we need the items to be picked up by their closest\n        // `mc-dropdown` ancestor. If we used `@ContentChildren(McDropdownItem, {descendants: true})`,\n        // all descendant items will bleed into the top-level dropdown in the case where the consumer\n        // has `mc-dropdown` instances nested inside each other.\n        if (this._items.indexOf(item) === -1) {\n            this._items.push(item);\n            this._itemChanges.next(this._items);\n        }\n    }\n\n    /**\n     * Removes an item from the dropdown.\n     * @docs-private\n     */\n    removeItem(item: McDropdownItem) {\n        const index = this._items.indexOf(item);\n\n        if (this._items.indexOf(item) > -1) {\n            this._items.splice(index, 1);\n            this._itemChanges.next(this._items);\n        }\n    }\n\n    /**\n     * Adds classes to the dropdown panel based on its position. Can be used by\n     * consumers to add specific styling based on the position.\n     * @param posX Position of the dropdown along the x axis.\n     * @param posY Position of the dropdown along the y axis.\n     * @docs-private\n     */\n    setPositionClasses(posX: DropdownPositionX = this.xPosition, posY: DropdownPositionY = this.yPosition) {\n        const classes = this._classList;\n        classes['mc-dropdown-before'] = posX === 'before';\n        classes['mc-dropdown-after'] = posX === 'after';\n        classes['mc-dropdown-above'] = posY === 'above';\n        classes['mc-dropdown-below'] = posY === 'below';\n    }\n\n    /** Starts the enter animation. */\n    _startAnimation() {\n        this._panelAnimationState = 'enter';\n    }\n\n    /** Resets the panel animation to its initial state. */\n    _resetAnimation() {\n        this._panelAnimationState = 'void';\n    }\n\n    /** Callback that is invoked when the panel animation completes. */\n    _onAnimationDone(event: AnimationEvent) {\n        this._animationDone.next(event);\n        this._isAnimating = false;\n\n        // Scroll the content element to the top once the animation is done. This is necessary, because\n        // we move focus to the first item while it's still being animated, which can throw the browser\n        // off when it determines the scroll position. Alternatively we can move focus when the\n        // animation is done, however moving focus asynchronously will interrupt screen readers\n        // which are in the process of reading out the dropdown already. We take the `element` from\n        // the `event` since we can't use a `ViewChild` to access the pane.\n        if (event.toState === 'enter' && this._keyManager.activeItemIndex === 0) {\n            event.element.scrollTop = 0;\n        }\n    }\n}\n","import {\n    AfterContentInit,\n    Directive,\n    ElementRef,\n    EventEmitter,\n    Inject,\n    InjectionToken,\n    Input,\n    OnDestroy, OnInit,\n    Optional,\n    Output,\n    ViewContainerRef\n} from '@angular/core';\nimport { FocusMonitor, FocusOrigin } from '@ptsecurity/cdk/a11y';\nimport { Direction, Directionality } from '@ptsecurity/cdk/bidi';\nimport {\n    FlexibleConnectedPositionStrategy,\n    HorizontalConnectionPos,\n    Overlay,\n    OverlayConfig,\n    OverlayRef,\n    VerticalConnectionPos,\n    IScrollStrategy\n} from '@ptsecurity/cdk/overlay';\nimport { TemplatePortal } from '@ptsecurity/cdk/portal';\nimport { merge, Subscription } from 'rxjs';\nimport { filter, take, takeUntil } from 'rxjs/operators';\n\nimport { throwMcDropdownMissingError } from './dropdown-errors';\nimport { McDropdownPanel } from './dropdown-panel';\nimport { McDropdown } from './dropdown.component';\n\n\n/** Injection token that determines the scroll handling while the dropdown is open. */\nexport const MC_DROPDOWN_SCROLL_STRATEGY =\n    new InjectionToken<() => IScrollStrategy>('mc-dropdown-scroll-strategy');\n\n/** @docs-private */\nexport function MC_DROPDOWN_SCROLL_STRATEGY_FACTORY(overlay: Overlay): () => IScrollStrategy {\n    return () => overlay.scrollStrategies.reposition();\n}\n\n/** @docs-private */\nexport const MC_DROPDOWN_SCROLL_STRATEGY_FACTORY_PROVIDER = {\n    provide: MC_DROPDOWN_SCROLL_STRATEGY,\n    deps: [Overlay],\n    useFactory: MC_DROPDOWN_SCROLL_STRATEGY_FACTORY\n};\n\n/**\n * This directive is intended to be used in conjunction with an mc-dropdown tag.  It is\n * responsible for toggling the display of the provided dropdown instance.\n */\n@Directive({\n    selector: `[mcDropdownTriggerFor]`,\n    host: {\n        '(touchstart)': '_openedBy = \"touch\"',\n        '(click)': 'toggle()'\n    },\n    exportAs: 'mcDropdownTrigger'\n})\nexport class McDropdownTrigger implements OnInit, AfterContentInit, OnDestroy {\n\n    /** Whether the dropdown is open. */\n    get opened(): boolean {\n        return this._opened;\n    }\n\n    /** The text direction of the containing app. */\n    get dir(): Direction {\n        return this._dir && this._dir.value === 'rtl' ? 'rtl' : 'ltr';\n    }\n\n    // Tracking input type is necessary so it's possible to only auto-focus\n    // the first item of the list when the dropdown is opened via the keyboard\n    _openedBy: 'mouse' | 'touch' | null = null;\n\n    /** References the dropdown instance that the trigger is associated with. */\n    @Input('mcDropdownTriggerFor') dropdown: McDropdownPanel;\n\n    /** Data to be passed along to any lazily-rendered content. */\n    @Input('mcDropdownTriggerData') data: any;\n\n    /** Event emitted when the associated dropdown is opened. */\n    @Output() readonly dropdownOpened: EventEmitter<void> = new EventEmitter<void>();\n\n    /** Event emitted when the associated dropdown is closed. */\n    @Output() readonly dropdownClosed: EventEmitter<void> = new EventEmitter<void>();\n\n    private _portal: TemplatePortal;\n    private _overlayRef: OverlayRef | null = null;\n    private _opened: boolean = false;\n    private _closeSubscription = Subscription.EMPTY;\n    private _hoverSubscription = Subscription.EMPTY;\n\n    constructor(private _overlay: Overlay,\n                private _element: ElementRef<HTMLElement>,\n                private _viewContainerRef: ViewContainerRef,\n                @Inject(MC_DROPDOWN_SCROLL_STRATEGY) private _scrollStrategy: any,\n                @Optional() private _dir: Directionality,\n                private _focusMonitor?: FocusMonitor) {}\n\n    ngOnInit(): void {\n        this.dropdown.closed = this.dropdown.closed || new EventEmitter<void | 'click' | 'keydown' | 'tab'>();\n    }\n\n    ngAfterContentInit() {\n        this._check();\n\n        this.dropdown.closed.asObservable().subscribe(() => {\n            this._destroy();\n        });\n    }\n\n    ngOnDestroy() {\n        if (this._overlayRef) {\n            this._overlayRef.dispose();\n            this._overlayRef = null;\n        }\n\n        this._cleanUpSubscriptions();\n    }\n\n    /** Toggles the dropdown between the open and closed states. */\n    toggle(): void {\n        // tslint:disable-next-line:no-void-expression\n        return this._opened ? this.close() : this.open();\n    }\n\n    /** Opens the dropdown. */\n    open(): void {\n        if (this._opened) {\n            return;\n        }\n\n        this._check();\n\n        const overlayRef = this._createOverlay();\n        this._setPosition(overlayRef.getConfig().positionStrategy as FlexibleConnectedPositionStrategy);\n        overlayRef.attach(this._portal);\n\n        if (this.dropdown.lazyContent) {\n            this.dropdown.lazyContent.attach(this.data);\n        }\n\n        this._closeSubscription = this._closingActions().subscribe(() => this.close());\n        this._init();\n\n        if (this.dropdown instanceof McDropdown) {\n            this.dropdown._startAnimation();\n        }\n    }\n\n    /** Closes the dropdown. */\n    close(): void {\n        this.dropdown.closed.emit();\n    }\n\n    /**\n     * Focuses the dropdown trigger.\n     * @param origin Source of the dropdown trigger's focus.\n     */\n    focus(origin: FocusOrigin = 'program') {\n        if (this._focusMonitor) {\n            this._focusMonitor.focusVia(this._element.nativeElement, origin);\n        } else {\n            this._element.nativeElement.focus();\n        }\n    }\n\n    /** Closes the dropdown and does the necessary cleanup. */\n    private _destroy() {\n        if (!this._overlayRef || !this.opened) {\n            return;\n        }\n\n        const dropdown = this.dropdown;\n\n        this._closeSubscription.unsubscribe();\n        this._overlayRef.detach();\n\n        if (dropdown instanceof McDropdown) {\n            dropdown._resetAnimation();\n\n            if (dropdown.lazyContent) {\n                // Wait for the exit animation to finish before detaching the content.\n                dropdown._animationDone\n                    .pipe(\n                        filter((event) => event.toState === 'void'),\n                        take(1),\n                        // Interrupt if the content got re-attached.\n                        takeUntil(dropdown.lazyContent._attached)\n                    )\n                    .subscribe(() => dropdown.lazyContent.detach(), undefined, () => {\n                        // No matter whether the content got re-attached, reset the dropdown.\n                        this._reset();\n                    });\n            } else {\n                this._reset();\n            }\n        } else {\n            this._reset();\n\n            if (dropdown.lazyContent) {\n                dropdown.lazyContent.detach();\n            }\n        }\n    }\n\n    /**\n     * This method sets the dropdown state to open and focuses the first item if\n     * the dropdown was opened via the keyboard.\n     */\n    private _init(): void {\n        this.dropdown.direction = this.dir;\n        this._setIsOpened(true);\n        this.dropdown.focusFirstItem(this._openedBy || 'program');\n    }\n\n    /**\n     * This method resets the dropdown when it's closed, most importantly restoring\n     * focus to the dropdown trigger if the dropdown was opened via the keyboard.\n     */\n    private _reset(): void {\n        this._setIsOpened(false);\n\n        // We should reset focus if the user is navigating using a keyboard or\n        // if we have a top-level trigger which might cause focus to be lost\n        // when clicking on the backdrop.\n        if (!this._openedBy) {\n            // Note that the focus style will show up both for `program` and\n            // `keyboard` so we don't have to specify which one it is.\n            this.focus();\n        } else {\n            this.focus(this._openedBy);\n        }\n\n        this._openedBy = null;\n    }\n\n    // set state rather than toggle to support triggers sharing a dropdown\n    private _setIsOpened(isOpen: boolean): void {\n        this._opened = isOpen;\n        // tslint:disable-next-line:no-void-expression\n        this._opened ? this.dropdownOpened.emit() : this.dropdownClosed.emit();\n    }\n\n    /**\n     * This method checks that a valid instance of Dropdown has been passed into\n     * mcDropdownTriggerFor. If not, an exception is thrown.\n     */\n    private _check() {\n        if (!this.dropdown) {\n            throwMcDropdownMissingError();\n        }\n    }\n\n    /**\n     * This method creates the overlay from the provided dropdown's template and saves its\n     * OverlayRef so that it can be attached to the DOM when open is called.\n     */\n    private _createOverlay(): OverlayRef {\n        if (!this._overlayRef) {\n            this._portal = new TemplatePortal(this.dropdown.templateRef, this._viewContainerRef);\n            const config = this._getOverlayConfig();\n            this._subscribeToPositions(config.positionStrategy as FlexibleConnectedPositionStrategy);\n            this._overlayRef = this._overlay.create(config);\n\n            // Consume the `keydownEvents` in order to prevent them from going to another overlay.\n            // Ideally we'd also have our keyboard event logic in here, however doing so will\n            // break anybody that may have implemented the `McDropdownPanel` themselves.\n            this._overlayRef.keydownEvents().subscribe();\n        }\n\n        return this._overlayRef;\n    }\n\n    /**\n     * This method builds the configuration object needed to create the overlay, the OverlayState.\n     * @returns OverlayConfig\n     */\n    private _getOverlayConfig(): OverlayConfig {\n        return new OverlayConfig({\n            positionStrategy: this._overlay.position()\n                .flexibleConnectedTo(this._element)\n                .withLockedPosition()\n                .withTransformOriginOn('.mc-dropdown__panel'),\n            hasBackdrop: this.dropdown.hasBackdrop === null || this.dropdown.hasBackdrop === undefined\n                ? true\n                : this.dropdown.hasBackdrop,\n            backdropClass: this.dropdown.backdropClass || 'cdk-overlay-transparent-backdrop',\n            scrollStrategy: this._scrollStrategy(),\n            direction: this._dir\n        });\n    }\n\n    /**\n     * Listens to changes in the position of the overlay and sets the correct classes\n     * on the dropdown based on the new position. This ensures the animation origin is always\n     * correct, even if a fallback position is used for the overlay.\n     */\n    private _subscribeToPositions(position: FlexibleConnectedPositionStrategy): void {\n        if (this.dropdown.setPositionClasses) {\n            // todo possibly we should not recompute positions there\n            /*position.positionChanges.subscribe((change) => {\n                const posX: DropdownPositionX = change.connectionPair.overlayX === 'start' ? 'after' : 'before';\n                const posY: DropdownPositionY = change.connectionPair.overlayY === 'top' ? 'below' : 'above';\n\n                this.dropdown.setPositionClasses!(posX, posY);\n            });*/\n            position.positionChanges.subscribe(() => {\n                this.dropdown.setPositionClasses!(this.dropdown.xPosition, this.dropdown.yPosition);\n            });\n        }\n    }\n\n    /**\n     * Sets the appropriate positions on a position strategy\n     * so the overlay connects with the trigger correctly.\n     * @param positionStrategy Strategy whose position to update.\n     */\n    private _setPosition(positionStrategy: FlexibleConnectedPositionStrategy) {\n        const [originX, originFallbackX]: HorizontalConnectionPos[] =\n            this.dropdown.xPosition === 'before' ? ['end', 'start'] : ['start', 'end'];\n\n        const [overlayY, overlayFallbackY]: VerticalConnectionPos[] =\n            this.dropdown.yPosition === 'above' ? ['bottom', 'top'] : ['top', 'bottom'];\n\n        let [originY, originFallbackY] = [overlayY, overlayFallbackY];\n        const [overlayX, overlayFallbackX] = [originX, originFallbackX];\n        const offsetY = 0;\n\n        if (!this.dropdown.overlapTrigger) {\n            originY = overlayY === 'top' ? 'bottom' : 'top';\n            originFallbackY = overlayFallbackY === 'top' ? 'bottom' : 'top';\n        }\n\n        positionStrategy.withPositions([\n            {originX, originY, overlayX, overlayY, offsetY},\n            {originX: originFallbackX, originY, overlayX: overlayFallbackX, overlayY, offsetY},\n            {\n                originX,\n                originY: originFallbackY,\n                overlayX,\n                overlayY: overlayFallbackY,\n                offsetY: -offsetY\n            },\n            {\n                originX: originFallbackX,\n                originY: originFallbackY,\n                overlayX: overlayFallbackX,\n                overlayY: overlayFallbackY,\n                offsetY: -offsetY\n            }\n        ]);\n    }\n\n    /** Cleans up the active subscriptions. */\n    private _cleanUpSubscriptions(): void {\n        this._closeSubscription.unsubscribe();\n        this._hoverSubscription.unsubscribe();\n    }\n\n    /** Returns a stream that emits whenever an action that should close the dropdown occurs. */\n    private _closingActions() {\n        const backdrop = this._overlayRef!.backdropClick();\n        const detachments = this._overlayRef!.detachments();\n\n        return merge(backdrop, detachments);\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { OverlayModule } from '@ptsecurity/cdk/overlay';\n\nimport { McDropdownContent } from './dropdown-content';\nimport { McDropdownItem } from './dropdown-item';\nimport { MC_DROPDOWN_SCROLL_STRATEGY_FACTORY_PROVIDER, McDropdownTrigger } from './dropdown-trigger';\nimport { McDropdown } from './dropdown.component';\n\n\n@NgModule({\n    imports: [\n        CommonModule,\n        OverlayModule\n    ],\n    exports: [McDropdown, McDropdownItem, McDropdownTrigger, McDropdownContent],\n    declarations: [McDropdown, McDropdownItem, McDropdownTrigger, McDropdownContent],\n    providers: [MC_DROPDOWN_SCROLL_STRATEGY_FACTORY_PROVIDER]\n})\nexport class McDropdownModule {}\n","import { Component } from '@angular/core';\n\n\n@Component({\n    selector: 'mc-cleaner',\n    template: '<i class=\"mc-icon_light\" mc-icon=\"mc-close-M_16\" color=\"second\"></i>'\n})\nexport class McCleaner {\n}\n","import { NgControl } from '@angular/forms';\nimport { Observable } from 'rxjs';\n\n\n/** An interface which allows a control to work inside of a `MсFormField`. */\nexport abstract class McFormFieldControl<T> {\n    /** The value of the control. */\n    value: T | null;\n\n    /**\n     * Stream that emits whenever the state of the control changes such that the parent `MсFormField`\n     * needs to run change detection.\n     */\n    readonly stateChanges: Observable<void>;\n\n    /** The element ID for this control. */\n    readonly id: string;\n\n    /** The placeholder for this control. */\n    readonly placeholder: string;\n\n    /** Gets the NgControl for this control. */\n    readonly ngControl: NgControl | null;\n\n    /** Whether the control is focused. */\n    readonly focused: boolean;\n\n    /** Whether the control is empty. */\n    readonly empty: boolean;\n\n    /** Whether the control is required. */\n    readonly required: boolean;\n\n    /** Whether the control is disabled. */\n    readonly disabled: boolean;\n\n    /** Whether the control is in an error state. */\n    readonly errorState: boolean;\n\n    /**\n     * An optional name for the control type that can be used to distinguish `mc-form-field` elements\n     * based on their control type. The form field will add a class,\n     * `mc-form-field-type-{{controlType}}` to its root element.\n     */\n    readonly controlType?: string;\n\n    /** Handles a click on the control's container. */\n    abstract onContainerClick(event: MouseEvent): void;\n}\n","import { Observable } from 'rxjs';\n\n\n/** An interface which allows a control to work inside of a `MсFormField`. */\nexport abstract class McFormFieldNumberControl<T> {\n    /** The value of the control. */\n    value: T | null;\n\n    /**\n     * Stream that emits whenever the state of the control changes such that the parent `MсFormField`\n     * needs to run change detection.\n     */\n    readonly stateChanges: Observable<void>;\n\n    /** the number step */\n    step: number;\n\n    /** the number big step */\n    bigStep: number;\n\n    /** Whether the control is focused. */\n    readonly focused: boolean;\n\n    /** Handles step up and down */\n    abstract stepUp(step: number): void;\n\n    abstract stepDown(step: number): void;\n}\n","import { Directive, Input } from '@angular/core';\n\n\nlet nextUniqueId = 0;\n\n@Directive({\n    selector: 'mc-hint',\n    host: {\n        class: 'mc-hint',\n        '[attr.id]': 'id'\n    }\n})\nexport class McHint {\n    @Input() id: string = `mc-hint-${nextUniqueId++}`;\n}\n","import { Directive } from '@angular/core';\n\n\n@Directive({\n    selector: '[mcPrefix]'\n})\nexport class McPrefix {\n}\n","import { Component, EventEmitter, Output } from '@angular/core';\n\n\n@Component({\n    selector: 'mc-stepper',\n    template: `\n        <i class=\"mc mc-icon mc-icon_light mc-second mc-stepper-step-up mc-angle-L_16\"\n           (mousedown)=\"onStepUp($event)\">\n        </i>\n        <i class=\"mc mc-icon mc-icon_light mc-second mc-stepper-step-down mc-angle-L_16\"\n           (mousedown)=\"onStepDown($event)\">\n        </i>\n    `\n})\nexport class McStepper {\n    @Output()\n    readonly stepUp: EventEmitter<void> = new EventEmitter<void>();\n    @Output()\n    readonly stepDown: EventEmitter<void> = new EventEmitter<void>();\n\n    onStepUp($event: MouseEvent) {\n        this.stepUp.emit();\n        $event.preventDefault();\n    }\n\n    onStepDown($event: MouseEvent) {\n        this.stepDown.emit();\n        $event.preventDefault();\n    }\n}\n","import { Directive } from '@angular/core';\n\n\n@Directive({\n    selector: '[mcSuffix]'\n})\nexport class McSuffix {\n}\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","\nexport function isBoolean(val: any): val is boolean { return typeof val === 'boolean'; }\n\nexport function toBoolean(value: any): boolean {\n    return value != null && `${value}` !== 'false';\n}\n","import { NgModule, InjectionToken, Optional, Inject, isDevMode } from '@angular/core';\nimport { BidiModule } from '@ptsecurity/cdk/bidi';\n\n\n// Injection token that configures whether the Mosaic sanity checks are enabled.\nexport const MC_SANITY_CHECKS = new InjectionToken<boolean>('mc-sanity-checks', {\n    providedIn: 'root',\n    factory: MC_SANITY_CHECKS_FACTORY\n});\n\nexport function MC_SANITY_CHECKS_FACTORY(): boolean {\n    return true;\n}\n\n/**\n * Module that captures anything that should be loaded and/or run for *all* Mosaic\n * components. This includes Bidi, etc.\n *\n * This module should be imported to each top-level component module (e.g., MatTabsModule).\n */\n@NgModule({\n    imports: [ BidiModule ],\n    exports: [ BidiModule ]\n})\nexport class McCommonModule {\n    // Whether we've done the global sanity checks (e.g. a theme is loaded, there is a doctype).\n    private _hasDoneGlobalChecks = false;\n\n    // Reference to the global `document` object.\n    private _document = typeof document === 'object' && document ? document : null;\n\n    // Reference to the global 'window' object.\n    private _window = typeof window === 'object' && window ? window : null;\n\n    constructor(@Optional() @Inject(MC_SANITY_CHECKS) private _sanityChecksEnabled: boolean) {\n        if (this._areChecksEnabled() && !this._hasDoneGlobalChecks) {\n            this._checkDoctypeIsDefined();\n            this._checkThemeIsPresent();\n            this._hasDoneGlobalChecks = true;\n        }\n    }\n\n    // Whether any sanity checks are enabled\n    private _areChecksEnabled(): boolean {\n        return this._sanityChecksEnabled && isDevMode() && !this._isTestEnv();\n    }\n\n    // Whether the code is running in tests.\n    private _isTestEnv() {\n        // tslint:disable-next-line\n        return this._window && (this._window['__karma__'] || this._window['jasmine']);\n    }\n\n    private _checkDoctypeIsDefined(): void {\n        if (this._document && !this._document.doctype) {\n            console.warn(\n                'Current document does not have a doctype. This may cause ' +\n                'some Mosaic components not to behave as expected.'\n            );\n        }\n    }\n\n    private _checkThemeIsPresent(): void {\n        if (this._document && typeof getComputedStyle === 'function') {\n            const testElement = this._document.createElement('div');\n\n            testElement.classList.add('mc-theme-loaded-marker');\n            this._document.body.appendChild(testElement);\n\n            const computedStyle = getComputedStyle(testElement);\n\n            // In some situations, the computed style of the test element can be null. For example in\n            // Firefox, the computed style is null if an application is running inside of a hidden iframe.\n            // See: https://bugzilla.mozilla.org/show_bug.cgi?id=548397\n            if (computedStyle && computedStyle.display !== 'none') {\n                console.warn(\n                    'Could not find Mosaic core theme. Most Mosaic ' +\n                    'components may not work as expected. For more info refer ' +\n                    'to the theming guide: link there'\n                );\n            }\n\n            this._document.body.removeChild(testElement);\n        }\n    }\n}\n","import { coerceBooleanProperty } from '@ptsecurity/cdk/coercion';\n\nimport { Constructor } from './constructor';\n\n\nexport interface CanDisable {\n    disabled: boolean;\n}\n\n/** @docs-private */\nexport type CanDisableCtor = Constructor<CanDisable>;\n\n// Mixin to augment a directive with a `disabled` property.\nexport function mixinDisabled<T extends Constructor<{}>>(base: T): CanDisableCtor & T {\n    return class extends base {\n        private _disabled: boolean = false;\n\n        get disabled() {\n            return this._disabled;\n        }\n\n        set disabled(value: any) {\n            this._disabled = coerceBooleanProperty(value);\n        }\n\n        constructor(...args: any[]) {\n            // tslint:disable-next-line\n            super(...args);\n        }\n    };\n}\n","import { ElementRef } from '@angular/core';\n\nimport { Constructor } from './constructor';\n\n\nexport interface CanColor {\n    color: ThemePalette;\n}\n\n/** @docs-private */\nexport type CanColorCtor = Constructor<CanColor>;\n\nexport interface HasElementRef {\n    _elementRef: ElementRef;\n}\n\nexport enum ThemePalette {\n    Primary = 'primary',\n    Second = 'second',\n    Error = 'error',\n    Default = 'second',\n    Empty = ''\n}\n\n/** Mixin to augment a directive with a `color` property. */\nexport function mixinColor<T extends Constructor<HasElementRef>>(\n    base: T,\n    defaultColor: ThemePalette = ThemePalette.Default\n): CanColorCtor & T {\n    return class extends base {\n\n        private _color: ThemePalette;\n\n        get color(): ThemePalette {\n            return this._color;\n        }\n\n        set color(value: ThemePalette) {\n            const colorPalette = value || defaultColor;\n\n            if (colorPalette !== this._color) {\n                if (this._color) {\n                    this._elementRef.nativeElement.classList.remove(`mc-${this._color}`);\n                }\n\n                if (colorPalette) {\n                    this._elementRef.nativeElement.classList.add(`mc-${colorPalette}`);\n                }\n\n                this._color = colorPalette;\n            }\n        }\n\n        constructor(...args: any[]) {\n            super(...args);\n\n            this.color = defaultColor;\n        }\n    };\n}\n\n","import { Constructor } from './constructor';\nimport { CanDisable } from './disabled';\n\n\nexport interface HasTabIndex {\n    tabIndex: number;\n}\n\nexport type HasTabIndexCtor = Constructor<HasTabIndex>;\n\n// Mixin to augment a directive with a `tabIndex` property.\nexport function mixinTabIndex<T extends Constructor<CanDisable>>(base: T, defaultTabIndex = 0)\n    : HasTabIndexCtor & T {\n    return class extends base {\n        private _tabIndex: number = defaultTabIndex;\n\n        get tabIndex(): number {\n            return this.disabled ? -1 : this._tabIndex;\n        }\n\n        set tabIndex(value: number) {\n            this._tabIndex = value != null ? value : defaultTabIndex;\n        }\n\n        constructor(...args: any[]) {\n            super(...args);\n        }\n    };\n}\n","import { FormControl, FormGroupDirective, NgControl, NgForm } from '@angular/forms';\nimport { Subject } from 'rxjs';\n\nimport { ErrorStateMatcher } from '../error/error-options';\n\nimport { Constructor } from './constructor';\n\n\n/** @docs-private */\nexport interface CanUpdateErrorState {\n\n    readonly stateChanges: Subject<void>;\n\n    errorState: boolean;\n    errorStateMatcher: ErrorStateMatcher;\n\n    updateErrorState();\n}\n\n/** @docs-private */\nexport type CanUpdateErrorStateCtor = Constructor<CanUpdateErrorState>;\n\n/** @docs-private */\nexport interface HasErrorState {\n    _parentFormGroup: FormGroupDirective;\n    _parentForm: NgForm;\n    _defaultErrorStateMatcher: ErrorStateMatcher;\n    ngControl: NgControl;\n}\n\n/**\n * Mixin to augment a directive with updateErrorState method.\n * For component with `errorState` and need to update `errorState`.\n */\nexport function mixinErrorState<T extends Constructor<HasErrorState>>(base: T)\n    : CanUpdateErrorStateCtor & T {\n    return class extends base {\n        /** Whether the component is in an error state. */\n        errorState: boolean = false;\n\n        /**\n         * Stream that emits whenever the state of the input changes such that the wrapping\n         * `MatFormField` needs to run change detection.\n         */\n        readonly stateChanges = new Subject<void>();\n\n        errorStateMatcher: ErrorStateMatcher;\n\n        constructor(...args: any[]) {\n            super(...args);\n        }\n\n        updateErrorState() {\n            const oldState = this.errorState;\n            const parent = this._parentFormGroup || this._parentForm;\n            const matcher = this.errorStateMatcher || this._defaultErrorStateMatcher;\n            const control = this.ngControl ? this.ngControl.control as FormControl : null;\n            const newState = matcher.isErrorState(control, parent);\n\n            if (newState !== oldState) {\n                this.errorState = newState;\n                this.stateChanges.next();\n            }\n        }\n    };\n}\n","import {\n    AfterViewChecked,\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    ElementRef,\n    EventEmitter,\n    Inject,\n    InjectionToken,\n    Input,\n    OnDestroy,\n    Optional,\n    Output,\n    QueryList,\n    ViewEncapsulation\n} from '@angular/core';\nimport { coerceBooleanProperty } from '@ptsecurity/cdk/coercion';\nimport { ENTER, SPACE } from '@ptsecurity/cdk/keycodes';\nimport { Subject } from 'rxjs';\n\nimport { McOptgroup } from './optgroup';\n\n\n/**\n * Option IDs need to be unique across components, so this counter exists outside of\n * the component definition.\n */\nlet _uniqueIdCounter = 0;\n\n/** Event object emitted by McOption when selected or deselected. */\nexport class McOptionSelectionChange {\n    constructor(\n        /** Reference to the option that emitted the event. */\n        public source: McOption,\n        /** Whether the change in the option's value was a result of a user action. */\n        public isUserInput = false) {\n    }\n}\n\n/**\n * Describes a parent component that manages a list of options.\n * Contains properties that the options can inherit.\n * @docs-private\n */\nexport interface IMcOptionParentComponent {\n    disableRipple?: boolean;\n    multiple?: boolean;\n}\n\n/**\n * Injection token used to provide the parent component to options.\n */\nexport const MC_OPTION_PARENT_COMPONENT =\n    new InjectionToken<IMcOptionParentComponent>('MC_OPTION_PARENT_COMPONENT');\n\n/**\n * Single option inside of a `<mat-select>` element.\n */\n@Component({\n    selector: 'mc-option',\n    exportAs: 'mcOption',\n    host: {\n        '[attr.tabindex]': '_getTabIndex()',\n        '[class.mc-selected]': 'selected',\n        '[class.mc-option-multiple]': 'multiple',\n        '[class.mc-active]': 'active',\n        '[id]': 'id',\n        '[class.mc-disabled]': 'disabled',\n        '(click)': '_selectViaInteraction()',\n        '(keydown)': '_handleKeydown($event)',\n        class: 'mc-option'\n    },\n    styleUrls: ['option.css'],\n    templateUrl: 'option.html',\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class McOption implements AfterViewChecked, OnDestroy {\n    /** Whether the wrapping component is in multiple selection mode. */\n    get multiple() {\n        return this._parent && this._parent.multiple;\n    }\n\n    /** The unique ID of the option. */\n    get id(): string {\n        return this._id;\n    }\n\n    /** Whether or not the option is currently selected. */\n    get selected(): boolean {\n        return this._selected;\n    }\n\n    /** The form value of the option. */\n    @Input() value: any;\n\n    /** Whether the option is disabled. */\n    @Input()\n    get disabled() {\n        return (this.group && this.group.disabled) || this._disabled;\n    }\n\n    set disabled(value: any) {\n        this._disabled = coerceBooleanProperty(value);\n    }\n\n    /** Whether ripples for the option are disabled. */\n    get disableRipple() {\n        return this._parent && this._parent.disableRipple;\n    }\n\n    /** Event emitted when the option is selected or deselected. */\n        // tslint:disable-next-line:no-output-on-prefix\n    @Output() readonly onSelectionChange = new EventEmitter<McOptionSelectionChange>();\n\n    /** Emits when the state of the option changes and any parents have to be notified. */\n    readonly _stateChanges = new Subject<void>();\n\n    private _selected = false;\n    private _active = false;\n    private _disabled = false;\n    private readonly _id = `mc-option-${_uniqueIdCounter++}`;\n    private _mostRecentViewValue = '';\n\n    constructor(\n        private readonly _element: ElementRef,\n        private readonly _changeDetectorRef: ChangeDetectorRef,\n        @Optional() @Inject(MC_OPTION_PARENT_COMPONENT) private readonly _parent: IMcOptionParentComponent,\n        @Optional() readonly group: McOptgroup) {\n    }\n\n    /**\n     * Whether or not the option is currently active and ready to be selected.\n     * An active option displays styles as if it is focused, but the\n     * focus is actually retained somewhere else. This comes in handy\n     * for components like autocomplete where focus must remain on the input.\n     */\n    get active(): boolean {\n        return this._active;\n    }\n\n    /**\n     * The displayed value of the option. It is necessary to show the selected option in the\n     * select's trigger.\n     */\n    get viewValue(): string {\n        // TODO(kara): Add input property alternative for node envs.\n        return (this._getHostElement().textContent || '').trim();\n    }\n\n    /** Selects the option. */\n    select(): void {\n        if (!this._selected) {\n            this._selected = true;\n            this._changeDetectorRef.markForCheck();\n            this._emitSelectionChangeEvent();\n        }\n    }\n\n    /** Deselects the option. */\n    deselect(): void {\n        if (this._selected) {\n            this._selected = false;\n            this._changeDetectorRef.markForCheck();\n            this._emitSelectionChangeEvent();\n        }\n    }\n\n    /** Sets focus onto this option. */\n    focus(): void {\n        const element = this._getHostElement();\n\n        if (typeof element.focus === 'function') {\n            element.focus();\n        }\n    }\n\n    /**\n     * This method sets display styles on the option to make it appear\n     * active. This is used by the ActiveDescendantKeyManager so key\n     * events will display the proper options as active on arrow key events.\n     */\n    setActiveStyles(): void {\n        if (!this._active) {\n            this._active = true;\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n\n    /**\n     * This method removes display styles on the option that made it appear\n     * active. This is used by the ActiveDescendantKeyManager so key\n     * events will display the proper options as active on arrow key events.\n     */\n    setInactiveStyles(): void {\n        if (this._active) {\n            this._active = false;\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n\n    /** Gets the label to be used when determining whether the option should be focused. */\n    getLabel(): string {\n        return this.viewValue;\n    }\n\n    /** Ensures the option is selected when activated from the keyboard. */\n    _handleKeydown(event: KeyboardEvent): void {\n        // tslint:disable-next-line\n        if (event.keyCode === ENTER || event.keyCode === SPACE) {\n            this._selectViaInteraction();\n\n            // Prevent the page from scrolling down and form submits.\n            event.preventDefault();\n        }\n    }\n\n    /**\n     * `Selects the option while indicating the selection came from the user. Used to\n     * determine if the select's view -> model callback should be invoked.`\n     */\n    _selectViaInteraction(): void {\n        if (!this.disabled) {\n            this._selected = this.multiple ? !this._selected : true;\n            this._changeDetectorRef.markForCheck();\n            this._emitSelectionChangeEvent(true);\n        }\n    }\n\n    /** Returns the correct tabindex for the option depending on disabled state. */\n    _getTabIndex(): string {\n        return this.disabled ? '-1' : '0';\n    }\n\n    /** Gets the host DOM element. */\n    _getHostElement(): HTMLElement {\n        return this._element.nativeElement;\n    }\n\n    ngAfterViewChecked() {\n        // Since parent components could be using the option's label to display the selected values\n        // (e.g. `mat-select`) and they don't have a way of knowing if the option's label has changed\n        // we have to check for changes in the DOM ourselves and dispatch an event. These checks are\n        // relatively cheap, however we still limit them only to selected options in order to avoid\n        // hitting the DOM too often.\n        if (this._selected) {\n            const viewValue = this.viewValue;\n\n            if (viewValue !== this._mostRecentViewValue) {\n                this._mostRecentViewValue = viewValue;\n                this._stateChanges.next();\n            }\n        }\n    }\n\n    ngOnDestroy() {\n        this._stateChanges.complete();\n    }\n\n    /** Emits the selection change event. */\n    private _emitSelectionChangeEvent(isUserInput = false): void {\n        this.onSelectionChange.emit(new McOptionSelectionChange(this, isUserInput));\n    }\n}\n\n/**\n * Counts the amount of option group labels that precede the specified option.\n * @param optionIndex Index of the option at which to start counting.\n * @param options Flat list of all of the options.\n * @param optionGroups Flat list of all of the option groups.\n * @docs-private\n */\nexport function _countGroupLabelsBeforeOption(\n    optionIndex: number, options: QueryList<McOption>,\n    optionGroups: QueryList<McOptgroup>\n): number {\n\n    if (optionGroups.length) {\n        const optionsArray = options.toArray();\n        const groups = optionGroups.toArray();\n\n        let groupCounter = 0;\n\n        for (let i = 0; i < optionIndex + 1; i++) {\n            if (optionsArray[i].group && optionsArray[i].group === groups[groupCounter]) {\n                groupCounter++;\n            }\n        }\n\n        return groupCounter;\n    }\n\n    return 0;\n}\n\n/**\n * Determines the position to which to scroll a panel in order for an option to be into view.\n * @param optionIndex Index of the option to be scrolled into the view.\n * @param optionHeight Height of the options.\n * @param currentScrollPosition Current scroll position of the panel.\n * @param panelHeight Height of the panel.\n * @docs-private\n */\nexport function _getOptionScrollPosition(\n    optionIndex: number,\n    optionHeight: number,\n    currentScrollPosition: number,\n    panelHeight: number\n): number {\n    const optionOffset = optionIndex * optionHeight;\n\n    if (optionOffset < currentScrollPosition) { return optionOffset; }\n\n    if (optionOffset + optionHeight > currentScrollPosition + panelHeight) {\n        return Math.max(0, optionOffset - panelHeight + optionHeight);\n    }\n\n    return currentScrollPosition;\n}\n\n","import { ConnectionPositionPair } from '@ptsecurity/cdk/overlay';\n\n\nexport const POSITION_MAP: { [key: string]: ConnectionPositionPair } = {\n    top         : {\n        originX : 'center',\n        originY : 'top',\n        overlayX: 'center',\n        overlayY: 'bottom'\n    },\n    topCenter   : {\n        originX : 'center',\n        originY : 'top',\n        overlayX: 'center',\n        overlayY: 'bottom',\n        offsetX : undefined,\n        offsetY : undefined\n    },\n    topLeft     : {\n        originX : 'start',\n        originY : 'top',\n        overlayX: 'start',\n        overlayY: 'bottom',\n        offsetX : undefined,\n        offsetY : undefined\n    },\n    topRight    : {\n        originX : 'end',\n        originY : 'top',\n        overlayX: 'end',\n        overlayY: 'bottom',\n        offsetX : undefined,\n        offsetY : undefined\n    },\n    right       : {\n        originX : 'end',\n        originY : 'center',\n        overlayX: 'start',\n        overlayY: 'center'\n    },\n    rightTop    : {\n        originX : 'end',\n        originY : 'top',\n        overlayX: 'start',\n        overlayY: 'top',\n        offsetX : undefined,\n        offsetY : undefined\n    },\n    rightBottom : {\n        originX : 'end',\n        originY : 'bottom',\n        overlayX: 'start',\n        overlayY: 'bottom',\n        offsetX : undefined,\n        offsetY : undefined\n    },\n    bottom      : {\n        originX : 'center',\n        originY : 'bottom',\n        overlayX: 'center',\n        overlayY: 'top'\n    },\n    bottomCenter: {\n        originX : 'center',\n        originY : 'bottom',\n        overlayX: 'center',\n        overlayY: 'top'\n    },\n    bottomLeft  : {\n        originX : 'start',\n        originY : 'bottom',\n        overlayX: 'start',\n        overlayY: 'top'\n    },\n    bottomRight : {\n        originX : 'end',\n        originY : 'bottom',\n        overlayX: 'end',\n        overlayY: 'top'\n    },\n    left        : {\n        originX : 'start',\n        originY : 'center',\n        overlayX: 'end',\n        overlayY: 'center'\n    },\n    leftTop     : {\n        originX : 'start',\n        originY : 'top',\n        overlayX: 'end',\n        overlayY: 'top'\n    },\n    leftBottom  : {\n        originX : 'start',\n        originY : 'bottom',\n        overlayX: 'end',\n        overlayY: 'bottom'\n    }\n};\n\nexport const DEFAULT_4_POSITIONS = _objectValues([\n    POSITION_MAP.top, POSITION_MAP.right, POSITION_MAP.bottom, POSITION_MAP.left\n]);\n\nfunction arrayMap<T, S>(array: T[], iteratee: (item: T, index: number, arr: T[]) => S): S[] {\n    let index = -1;\n    const length = array == null ? 0 : array.length;\n    const result = Array(length);\n\n    while (++index < length) {\n        result[ index ] = iteratee(array[ index ], index, array);\n    }\n\n    return result;\n}\nfunction baseValues<T>(object: { [key: string]: T } | T[], props: string[]): T[] {\n    return arrayMap(props,  (key) => {\n        return object[ key ];\n    });\n}\nfunction _objectValues<T>(object: { [key: string]: T } | T[]): T[] {\n    return object == null ? [] : baseValues(object, Object.keys(object));\n}\n","export function throwMcDropdownMissingError() {\n    throw Error(`mcDropdownTriggerFor: must pass in an mc-dropdown instance.\n    Example:\n      <mc-dropdown #dropdown=\"mcDropdown\"></mc-dropdown>\n      <button [mcDropdownTriggerFor]=\"dropdown\"></button>`);\n}\n\n/**\n * Throws an exception for the case when dropdown's x-position value isn't valid.\n * In other words, it doesn't match 'before' or 'after'.\n * @docs-private\n */\nexport function throwMcDropdownInvalidPositionX() {\n    throw Error(`xPosition value must be either 'before' or after'.\n      Example: <mc-dropdown xPosition=\"before\" #dropdown=\"mcDropdown\"></mc-dropdown>`);\n}\n\n/**\n * Throws an exception for the case when dropdown's y-position value isn't valid.\n * In other words, it doesn't match 'above' or 'below'.\n * @docs-private\n */\nexport function throwMcDropdownInvalidPositionY() {\n    throw Error(`yPosition value must be either 'above' or below'.\n      Example: <mc-dropdown yPosition=\"above\" #dropdown=\"mcDropdown\"></mc-dropdown>`);\n}\n","export function getMcFormFieldMissingControlError(): Error {\n  return Error('mc-form-field must contain a McFormFieldControl.');\n}\n","export function getMcInputUnsupportedTypeError(inputType: string): Error {\n    return Error(`Input type \"${inputType}\" isn't supported by mcInput.`);\n}\n","/**\n * Returns an exception to be thrown when attempting to change a select's `multiple` option\n * after initialization.\n * @docs-private\n */\nexport function getMcSelectDynamicMultipleError(): Error {\n    return Error('Cannot change `multiple` mode of select after initialization.');\n}\n\n/**\n * Returns an exception to be thrown when attempting to assign a non-array value to a select\n * in `multiple` mode. Note that `undefined` and `null` are still valid values to allow for\n * resetting the value.\n * @docs-private\n */\nexport function getMcSelectNonArrayValueError(): Error {\n    return Error('Value must be an array in multiple-selection mode.');\n}\n\n/**\n * Returns an exception to be thrown when assigning a non-function value to the comparator\n * used to determine if a value corresponds to an option. Note that whether the function\n * actually takes two values and returns a boolean is not checked.\n */\nexport function getMcSelectNonFunctionValueError(): Error {\n    return Error('`compareWith` must be a function.');\n}\n","import { NgModule, Directive, ElementRef, QueryList } from '@angular/core';\n\n\n/**\n * Shared directive to count lines inside a text area, such as a list item.\n * Line elements can be extracted with a @ContentChildren(McLine) query, then\n * counted by checking the query list's length.\n */\n@Directive({\n    selector: '[mc-line], [mcLine]',\n    host: { class: 'mc-line' }\n})\nexport class McLine {}\n\n/**\n * Helper that takes a query list of lines and sets the correct class on the host.\n * @docs-private\n */\nexport class McLineSetter {\n    constructor(private _lines: QueryList<McLine>, private _element: ElementRef) {\n        this._setLineClass(this._lines.length);\n\n        this._lines.changes.subscribe(() => {\n            this._setLineClass(this._lines.length);\n        });\n    }\n\n    private _setLineClass(count: number): void {\n        this._resetClasses();\n        if (count === 2 || count === 3) {\n            this._setClass(`mc-${count}-line`, true);\n        } else if (count > 3) {\n            this._setClass(`mc-multi-line`, true);\n        }\n    }\n\n    private _resetClasses(): void {\n        this._setClass('mc-2-line', false);\n        this._setClass('mc-3-line', false);\n        this._setClass('mc-multi-line', false);\n    }\n\n    private _setClass(className: string, isAdd: boolean): void {\n        if (isAdd) {\n            this._element.nativeElement.classList.add(className);\n        } else {\n            this._element.nativeElement.classList.remove(className);\n        }\n    }\n}\n\n@NgModule({\n    imports: [],\n    exports: [McLine],\n    declarations: [McLine]\n})\nexport class McLineModule {}\n","import { Injectable } from '@angular/core';\nimport { FormGroupDirective, NgForm, FormControl } from '@angular/forms';\n\n\n/** Error state matcher that matches when a control is invalid and dirty. */\n@Injectable()\nexport class ShowOnDirtyErrorStateMatcher implements ErrorStateMatcher {\n    isErrorState(control: FormControl | null, form: FormGroupDirective | NgForm | null): boolean {\n        return !!(control && control.invalid && (control.dirty || (form && form.submitted)));\n    }\n}\n\n/** Provider that defines how form controls behave with regards to displaying error messages. */\n@Injectable({ providedIn: 'root' })\nexport class ErrorStateMatcher {\n    isErrorState(control: FormControl | null, form: FormGroupDirective | NgForm | null): boolean {\n        return !!(control && control.invalid && (control.touched || (form && form.submitted)));\n    }\n}\n","import { Component, ViewEncapsulation, Input, ChangeDetectionStrategy } from '@angular/core';\n\n\nexport type McPseudoCheckboxState = 'unchecked' | 'checked' | 'indeterminate';\n\n/**\n * Component that shows a simplified checkbox without including any kind of \"real\" checkbox.\n * Meant to be used when the checkbox is purely decorative and a large number of them will be\n * included, such as for the options in a multi-select. Uses no SVGs or complex animations.\n * Note that theming is meant to be handled by the parent element, e.g.\n * `mc-primary .mc-pseudo-checkbox`.\n *\n * Note that this component will be completely invisible to screen-reader users. This is *not*\n * interchangeable with `<mc-checkbox>` and should *not* be used if the user would directly\n * interact with the checkbox. The pseudo-checkbox should only be used as an implementation detail\n * of more complex components that appropriately handle selected / checked state.\n * @docs-private\n */\n@Component({\n    encapsulation: ViewEncapsulation.None,\n    preserveWhitespaces: false,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    selector: 'mc-pseudo-checkbox',\n    styleUrls: ['pseudo-checkbox.css'],\n    templateUrl: 'pseudo-checkbox.partial.html',\n    host: {\n        class: 'mc-pseudo-checkbox',\n        '[class.mc-pseudo-checkbox_indeterminate]': 'state === \"indeterminate\"',\n        '[class.mc-pseudo-checkbox_checked]': 'state === \"checked\"',\n        '[class.mc-disabled]': 'disabled'\n    }\n})\nexport class McPseudoCheckbox {\n    @Input() state: McPseudoCheckboxState = 'unchecked';\n\n    @Input() disabled: boolean = false;\n}\n","import { NgModule } from '@angular/core';\n\nimport { McPseudoCheckbox } from './pseudo-checkbox/pseudo-checkbox';\n\n\n@NgModule({\n    exports: [McPseudoCheckbox],\n    declarations: [McPseudoCheckbox]\n})\nexport class McPseudoCheckboxModule {}\n\n\nexport * from './pseudo-checkbox/pseudo-checkbox';\n","import { DOCUMENT } from '@angular/common';\nimport { Inject, Injectable } from '@angular/core';\n\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class McMeasureScrollbarService {\n\n    get scrollBarWidth(): number {\n        if (this._scrollbarWidth) {\n            return this._scrollbarWidth;\n        }\n        this.initScrollBarWidth();\n\n        return this._scrollbarWidth;\n    }\n\n    private _scrollbarWidth: number;\n    private scrollbarMeasure = {\n        position: 'absolute',\n        top: '-9999px',\n        width: '50px',\n        height: '50px',\n        overflow: 'scroll'\n    };\n\n    constructor(\n        @Inject(DOCUMENT) private document: any\n    ) {\n        this.initScrollBarWidth();\n    }\n\n    initScrollBarWidth() {\n        const scrollDiv = this.document.createElement('div');\n\n        // tslint:disable-next-line\n        for (const scrollProp in this.scrollbarMeasure) {\n            if (this.scrollbarMeasure.hasOwnProperty(scrollProp)) {\n                scrollDiv.style[scrollProp] = this.scrollbarMeasure[scrollProp];\n            }\n        }\n\n        this.document.body.appendChild(scrollDiv);\n\n        const width = scrollDiv.offsetWidth - scrollDiv.clientWidth;\n\n        this.document.body.removeChild(scrollDiv);\n        this._scrollbarWidth = width;\n    }\n}\n","import { Component, ViewEncapsulation, Input, ChangeDetectionStrategy } from '@angular/core';\n\nimport { mixinDisabled, CanDisable, CanDisableCtor } from '../common-behaviors/index';\n\n\n// Boilerplate for applying mixins to McOptgroup.\n/** @docs-private */\nexport class McOptgroupBase {}\n\nexport const _McOptgroupMixinBase: CanDisableCtor & typeof McOptgroupBase = mixinDisabled(McOptgroupBase);\n\n// Counter for unique group ids.\nlet _uniqueOptgroupIdCounter = 0;\n\n/**\n * Component that is used to group instances of `mc-option`.\n */\n@Component({\n    selector: 'mc-optgroup',\n    exportAs: 'mcOptgroup',\n    templateUrl: 'optgroup.html',\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    inputs: ['disabled'],\n    styleUrls: ['optgroup.css'],\n    host: {\n        class: 'mc-optgroup',\n        role: 'group',\n        '[class.mc-optgroup-disabled]': 'disabled',\n        '[attr.aria-disabled]': 'disabled.toString()',\n        '[attr.aria-labelledby]': '_labelId'\n    }\n})\nexport class McOptgroup extends _McOptgroupMixinBase implements CanDisable {\n    /** Label for the option group. */\n    @Input() label: string;\n\n    /** Unique id for the underlying label. */\n    _labelId: string = `mc-optgroup-label-${_uniqueOptgroupIdCounter++}`;\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { McPseudoCheckboxModule } from '../selection/index';\n\nimport { McOptgroup } from './optgroup';\nimport { McOption } from './option';\n\n\n@NgModule({\n    imports: [CommonModule, McPseudoCheckboxModule],\n    exports: [McOption, McOptgroup],\n    declarations: [McOption, McOptgroup]\n})\nexport class McOptionModule {}\n\n\nexport * from './option';\nexport * from './optgroup';\n","import { InjectionToken } from '@angular/core';\n\n\n/** InjectionToken that can be used to specify the global label options. */\nexport const MC_LABEL_GLOBAL_OPTIONS =\n    new InjectionToken<LabelOptions>('mc-label-global-options');\n\n/** Type for the available floatLabel values. */\nexport type FloatLabelType = 'always' | 'never' | 'auto';\n\n/** Configurable options for floating labels. */\nexport interface LabelOptions {\n    /**\n     * Whether the label should float `always`, `never`, or `auto` (only when necessary).\n     * Default behavior is assumed to be `auto`.\n     */\n    float?: FloatLabelType;\n}\n","import {\n    animate,\n    state,\n    style,\n    transition,\n    trigger,\n    AnimationTriggerMetadata,\n} from '@angular/animations';\n\n\nexport const fadeAnimation: AnimationTriggerMetadata =  trigger('fadeAnimation', [\n    state('void', style({ opacity: 0 })),\n    state('true', style({ opacity: 1 })),\n    state('false', style({ opacity: 0 })),\n    transition('* => true', animate('150ms cubic-bezier(0.0, 0.0, 0.2, 1)')),\n    transition('* => void', animate('150ms cubic-bezier(0.4, 0.0, 1, 1)')),\n]);\n","import {\n    Attribute,\n    ChangeDetectionStrategy,\n    Component,\n    Directive,\n    ElementRef,\n    ViewEncapsulation\n} from '@angular/core';\n\nimport { mixinColor, CanColor, CanColorCtor, ThemePalette } from '@ptsecurity/mosaic/core';\n\n\n@Directive({\n    selector: '[mc-icon]',\n    host: { class: 'mc mc-icon' }\n})\nexport class McIconCSSStyler {}\n\n\nexport class McIconBase {\n    constructor(public _elementRef: ElementRef) {}\n}\n\nexport const _McIconMixinBase: CanColorCtor & typeof McIconBase = mixinColor(McIconBase, ThemePalette.Empty);\n\n\n@Component({\n    selector: `[mc-icon]`,\n    template: '<ng-content></ng-content>',\n    styleUrls: ['./icon.css'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n    inputs: ['color']\n})\nexport class McIcon extends _McIconMixinBase implements CanColor {\n    constructor(elementRef: ElementRef, @Attribute('mc-icon') iconName: string) {\n        super(elementRef);\n\n        elementRef.nativeElement.classList.add(iconName);\n    }\n\n    _getHostElement() {\n        return this._elementRef.nativeElement;\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { A11yModule } from '@ptsecurity/cdk/a11y';\nimport { PlatformModule } from '@ptsecurity/cdk/platform';\n\nimport {\n    McIcon,\n    McIconCSSStyler\n} from './icon.component';\n\n\n@NgModule({\n    imports: [\n        CommonModule,\n        A11yModule,\n        PlatformModule\n    ],\n    exports: [\n        McIcon,\n        McIconCSSStyler\n    ],\n    declarations: [\n        McIcon,\n        McIconCSSStyler\n    ]\n})\nexport class McIconModule {}\n"],"names":["set","value","this","_placement","_positions","unshift","POSITION_MAP","mcPlacement","McToolTipComponent","prototype","show","_this","hideTId","clearTimeout","isContentEmpty","_closeOnInteraction","showTId","setTimeout","mcVisible","mcVisibleChange","emit","_markForCheck","mcMouseEnterDelay","hide","_onHide","next","mcMouseLeaveDelay","setClassMap","_classMap","_a","_prefix","isTitleString","mcTitle","afterHidden","asObservable","cdr","markForCheck","_handleBodyInteraction","tslib_1.__decorate","Output","tslib_1.__metadata","EventEmitter","Input","Component","selector","animations","fadeAnimation","template","preserveWhitespaces","styles","encapsulation","ViewEncapsulation","None","changeDetection","ChangeDetectionStrategy","OnPush","host","(body:click)","ChangeDetectorRef","MC_TOOLTIP_SCROLL_STRATEGY","InjectionToken","MC_TOOLTIP_SCROLL_STRATEGY_FACTORY_PROVIDER","provide","deps","Overlay","useFactory","MC_TOOLTIP_SCROLL_STRATEGY_FACTORY","McTooltipDirective","_overlay","elementRef","_ngZone","_scrollDispatcher","hostView","_scrollStrategy","_dir","isTooltipOpen","isDynamicTooltip","parentDisabled","_disabled","_trigger","$unsubscribe","Subject","manualListeners","Map","_destroyed","availablePositions","Object","defineProperty","get","_title","title","updateCompValue","coerceBooleanProperty","_mouseEnterDelay","_mouseLeaveDelay","_visible","_createOverlay","_overlayRef","strategy","position","flexibleConnectedTo","withTransformOriginOn","withFlexibleDimensions","withViewportMargin","withPositions","DEFAULT_4_POSITIONS","slice","scrollableAncestors","getAncestorScrollContainers","withScrollableContainers","positionChanges","pipe","takeUntil","subscribe","change","tooltip","onPositionChange","scrollableViewProperties","isOverlayClipped","run","create","direction","positionStrategy","panelClass","scrollStrategy","_updatePosition","detachments","_detach","hasAttached","detach","$event","updatedPlacement","keys","some","key","connectionPair","originX","originY","overlayX","overlayY","handlePositioningUpdate","pos","overlayElement","clientHeight","element","nativeElement","currentContainer","style","top","parseInt","split","ngOnInit","mcTrigger","forEach","listener","event","addEventListener","ngOnDestroy","dispose","removeEventListener","clear","complete","handleKeydown","e","keyCode","ESCAPE","handleTouchend","getConfig","origin","_getOrigin","overlay","_getOverlayPosition","tslib_1.__assign","main","fallback","originPosition","isLtr","getMcTooltipInvalidPositionError","_invertPosition","x","y","overlayPosition","newX","newY","disabled","overlayRef","_portal","ComponentPortal","attach","instance","property","distinctUntilChanged","data","HostBinding","Directive","(keydown)","(touchend)","tslib_1.__param","Inject","Optional","ElementRef","NgZone","ScrollDispatcher","ViewContainerRef","Directionality","McToolTipModule","NgModule","declarations","exports","imports","BrowserAnimationsModule","CommonModule","OverlayModule","providers","entryComponents","VERSION","Version","SELECT_PANEL_PADDING_X","option","viewValue","_isRtl","selectedOptions","reverse","join","_selectionModel","selected","McSelect","empty","_multiple","isEmpty","_handleKeydown","panelOpen","_handleOpenKeydown","_handleClosedKeydown","_onFadeInDone","_panelDoneAnimating","_changeDetectorRef","_onFocus","_focused","stateChanges","_onBlur","_onTouched","_onAttached","overlayDir","positionChange","take","detectChanges","_calculateOverlayOffsetX","panel","scrollTop","_scrollTop","_getPanelTheme","_parentFormField","color","focus","_elementRef","_calculateOverlayScroll","selectedIndex","scrollBuffer","maxScroll","itemHeight","_getItemHeight","optionOffsetFromScrollTop","halfOptionHeight","optimalScrollPosition","Math","min","max","onContainerClick","open","onRemoveMatcherItem","stopPropagation","deselect","_panelOpen","_calculateHiddenItems","visibleItems","totalItemsWidth","_getTotalItemsWidthInMatcher","totalVisibleItemsWidth","tags","tag","offsetTop","offsetHeight","getBoundingClientRect","width","hiddenItems","length","itemsCounter","trigger","querySelector","matcherList","itemsCounterShowed","matcherListWidth","matcherWidth","triggerClone","cloneNode","remove","_renderer","setStyle","appendChild","querySelectorAll","item","isArrowKey","DOWN_ARROW","UP_ARROW","LEFT_ARROW","RIGHT_ARROW","ENTER","SPACE","multiple","altKey","preventDefault","_keyManager","onKeydown","manager","HOME","END","setFirstItemActive","setLastItemActive","close","activeItem","A","ctrlKey","hasDeselectedOptions_1","options","select","previouslyFocusedIndex","activeItemIndex","shiftKey","_selectViaInteraction","_initializeSelection","Promise","resolve","then","_setSelectionByValue","ngControl","_value","Array","isArray","getMcSelectNonArrayValueError","currentValue","_selectValue","_sortValues","correspondingOption","setActiveItem","find","_compareWith","error","isDevMode","console","warn","_initKeyManager","ActiveDescendantKeyManager","withTypeAhead","withVerticalOrientation","withHorizontalOrientation","tabOut","_destroy","_scrollActiveOptionIntoView","_resetOptions","changedOrDestroyed","merge","changes","optionSelectionChanges","_onSelect","source","isUserInput","apply","map","_stateChanges","_setOptionIds","wasSelected","isSelected","_propagateChanges","options_1","toArray","sort","a","b","sortComparator","indexOf","fallbackValue","valueToEmit","valueChange","_onChange","selectionChange","McSelectChange","_optionIds","id","_highlightCorrectOption","activeOptionIndex","labelCount","_countGroupLabelsBeforeOption","optionGroups","_getOptionScrollPosition","_getOptionIndex","reduce","result","current","index","undefined","_calculateOverlayPosition","items","_getItemCount","panelHeight","scrollContainerHeight","selectedOptionOffset","_offsetY","_calculateOverlayOffsetY","_checkOverlayWithinViewport","offsetX","overlayRect","viewportSize","_viewportRuler","getViewportSize","isRtl","first","group","leftOverflow","left","rightOverflow","right","round","updatePosition","topSpaceAvailable","_triggerRect","bottomSpaceAvailable","height","bottom","panelHeightTop","abs","totalPanelHeight","panelHeightBottom","_adjustPanelUp","_adjustPanelDown","_transformOrigin","_getOriginBasedOnOption","distanceBelowViewport","distanceAboveViewport","optionHeightAdjustment","ViewChild","ViewChildren","McTag","QueryList","CdkConnectedOverlay","ContentChildren","McOption","descendants","McOptgroup","ContentChild","McSelectTrigger","ErrorStateMatcher","Observable","McSelect_1","exportAs","inputs","[attr.id]","[attr.tabindex]","class","[class.mc-disabled]","[class.mc-select-invalid]","[class.mc-select-required]","(focus)","(blur)","(window:resize)","mcSelectAnimations","transformPanel","fadeInContent","McFormFieldControl","useExisting","MC_OPTION_PARENT_COMPONENT","Self","Attribute","MC_SELECT_SCROLL_STRATEGY","ViewportRuler","Renderer2","NgForm","FormGroupDirective","McFormField","NgControl","String","_McSelectMixinBase","McSelectModule","McOptionModule","McIconModule","McTagModule","McFormFieldModule","MC_SELECT_SCROLL_STRATEGY_PROVIDER","McSplitterComponent","ngZone","renderer","areas","_gutterSize","isDragging","areaPositionDivider","listeners","_direction","gutterSize","size","coerceNumberProperty","addArea","area","order","getSize","setOrder","push","initialSize","isVertical","onMouseDown","leftAreaIndex","rightAreaIndex","leftArea","rightArea","startPoint","screenX","screenY","disableFlex","setSize","runOutsideAngular","listen","onMouseUp","onMouseMove","removeArea","indexToRemove","splice","endPoint","offset","newLeftAreaSize","newRightAreaSize","minLeftAreaSize","getMinSize","minRightAreaSize","rightAreaOffset","unsubscribe","pop","McGutterDirective","_order","_size","getCursor","getState","coerceCssPixelValue","setAttr","state","Error","attribute","setAttribute","McSplitterAreaDirective","splitter","removeStyle","sz","getSizeProperty","getOffsetSizeProperty","getComputedStyle","parseFloat","getMinSizeProperty","McSplitterModule","nextUniqueId","McToggleBase","_McToggleMixinBase","mixinTabIndex","mixinColor","mixinDisabled","McToggleChange","McToggleComponent","_super","_focusMonitor","tabIndex","call","ThemePalette","Primary","labelPosition","ariaLabel","ariaLabelledby","_uniqueId","name","_checked","_onTouchedCallback","_onChangeCallback","_","monitor","tslib_1.__extends","McToggleComponent_1","stopMonitoring","focusVia","_inputElement","_getAriaChecked","checked","_onInteractionEvent","_onLabelTextChange","_onInputClick","_updateModelValue","_emitChangeEvent","writeValue","registerOnChange","fn","registerOnTouched","setDisabledState","isDisabled","NG_VALUE_ACCESSOR","forwardRef","multi","[id]","[class.mc-toggle-off]","transition","animate","FocusMonitor","McToggleModule","A11yModule","McCommonModule","visibleSource","BehaviorSubject","$visible","TemplateRef","visible","_McRadioButtonMixinBase","McRadioModule","McRadioGroup","McRadioButton","McTreeNodeDef","McTreeNodeDef_1","CdkTreeNodeDef","McTreeNodePadding","arguments","_baseLeftPadding","_iconWidth","_indent","McTreeNodePadding_1","_withIcon","_paddingIndent","nodeLevel","_treeNode","_tree","treeControl","getLevel","level","_level","leftPadding","isExpandable","_setPadding","CdkTreeNodePadding","McTreeNodeOption","treeSelection","role","_hasFocus","_selected","McTreeNodeOption_1","newValue","toBoolean","setSelected","setFocusedOption","toggle","_getHeight","getClientRects","_handleFocus","_handleBlur","_handleClick","tabindex","[class.mc-selected]","[class.mc-focused]","[attr.aria-expanded]","[attr.aria-level]","(click)","CdkTreeNode","McTreeSelection","_McTreeSelectionBase","CdkTree","McTreeNavigationChange","McTreeSelectionChange","_differs","autoSelect","noUnselect","navigationChange","SelectionModel","McTreeSelection_1","rawValue","log","_onKeyDown","withShift","withCtrl","collapse","expand","toggleFocusedOption","PAGE_UP","setPreviousPageItemActive","PAGE_DOWN","setNextPageItemActive","ngAfterContentInit","FocusKeyManager","updateScrollSize","withScrollSize","floor","updateActiveItem","previousIndex_1","previousActiveItemIndex","activeIndex_1","_canDeselectLast","_emitNavigationEvent","focusedIndex","_isValidIndex","focusedOption","renderNodeChanges","dataDiffer","viewContainer","parentData","_dataDiffer","_nodeOutlet","arrayOfInstances","_embeddedViews","view","viewDef","def","nodes","node","nodeMatchedQueries","matchedQueryIds","nodeData","nodeIndex","reset","notifyOnChanges","CdkTreeNodeOutlet","[tabIndex]","IterableDiffers","MC_TREE_DIRECTIVES","McTreeModule","CdkTreeModule","McTreeFlattener","transformFunction","getChildren","_flattenNode","resultNodes","parentMap","flatNode","children","child","childParentMap","flattenNodes","structuredData","expandFlattenedNodes","results","currentExpand","i","isExpanded","McTreeFlatDataSource","treeFlattener","initialData","_flattenedData","_expandedData","_data","dataNodes","connect","collectionViewer","viewChange","expansionModel","onChange","disconnect","DataSource","McTreeNestedDataSource","McTagBase","_McTagMixinBase","_addClassModificatorForIcons","icons","contentChildren","iconElement","previousElementSibling","nextElementSibling","nextSibling","classList","add","previousSibling","firstIconElement","secondIconElement","McIcon","PlatformModule","TimeParts","TimeFormats","TIMEFORMAT_PLACEHOLDERS","HHmmss","HHmm","DEFAULT_TIME_FORMAT","HOURS_MINUTES_SECONDS_REGEXP","RegExp","HOURS_MINUTES_REGEXP","HOURS_ONLY_REGEXP","uniqueComponentIdSuffix","validatorOnChange","noop","validator","MC_INPUT_VALUE_ACCESSOR","McTimepickerBase","_defaultErrorStateMatcher","_parentForm","_parentFormGroup","McTimepickerMixinBase","mixinErrorState","ɵ1","validate","c","registerOnValidatorChange","McTimepicker","inputValueAccessor","focused","controlType","uid","_minTime","_maxTime","previousNativeValue","placeholder","valueAccessor","Validators","compose","parseValidator","minTimeValidator","maxTimeValidator","McTimepicker_1","_id","_required","applyInputChanges","_timeFormat","formatValue","timeFormatKey","minValue","minDateTime","getDateFromTimeString","maxValue","maxDateTime","ngOnChanges","ngDoCheck","updateErrorState","dirtyCheckNativeValue","focusChanged","isFocused","onTouched","onBlur","onPaste","clipboardUserInput","clipboardData","getData","onInput","initialCursorStart","selectionStart","initialCursorEnd","selectionEnd","isAutocompleteTriggered","getParsedTimeParts","hoursOnly","hoursAndMinutes","hoursAndMinutesAndSeconds","doTimestringReformat","errors","createSelectionOfTimeComponentInInput","isBadInput","setProperty","getTimeStringFromDate","timeFormat","onKeyDown","getKeyCode","upDownTimeByArrowKeys","switchSelectionBetweenTimeparts","validity","badInput","applyParams","changedTime","timeToApply","currentDateTimeInput","control","updateValueAndValidity","cursorPos","modifiedTimePart","getTimeEditMetrics","incrementTime","decrementTime","getCursorPositionOfPrevTimePartStart","getCursorPositionOfNextTimePartStart","code","newEditParams","cursorStartPosition","cursorEndPosition","dateVal","whatToIncrement","seconds","getTimeDigitsFromDate","hours","minutes","getDateFromTimeDigits","whatToDecrement","timeString","timeDevider","nextDividerPos","cursorPosition","minutesIndex","hoursIndex","secondsIndex","tempVal","getNumberWithLeadingZero","getHours","getMinutes","getSeconds","match","trim","Number","resultDate","Date","isNaN","getTime","digit","mcTimepickerParse","text","isTimeLowerThenMin","mcTimepickerLowerThenMintime","isTimeGreaterThenMax","mcTimepickerHigherThenMaxtime","timeToCompare","[attr.placeholder]","[disabled]","[required]","[attr.time-format]","[attr.min-time]","[attr.max-time]","[attr.value]","(input)","(paste)","NG_VALIDATORS","useValue","McTimepickerModule","FormsModule","transform","minWidth","opacity","query","animateChild","MC_SELECT_SCROLL_STRATEGY_PROVIDER_FACTORY","McSelectBase","_scrollStrategyFactory","_triggerFontSize","_panelDoneAnimatingStream","defer","onSelectionChange","onStable","switchMap","openedChange","_openedStream","filter","o","_closedStream","_uid","o1","o2","_placeholder","getMcSelectDynamicMultipleError","getMcSelectNonFunctionValueError","added","removed","startWith","ngAfterViewInit","fontSize","DOCUMENT","ComponentFactoryResolver","McMeasureScrollbarService","McModalControlService","McModalComponent","McModalRef","CssUnitPipe","defaultUnit","formatted","Pipe","ModalBuilderForService","createModal","mcGetContainer","changeProps","modalRef","mcAfterClose","destroyModal","keydownEvents","mcCloseByESC","getInstance","assign","McModalService","modalControl","openModals","afterAllClose","closeAll","mcOnCancel","mcWidth","confirm","confirmType","mcOnOk","mcModalType","mcClassName","mcMaskClosable","success","simpleConfirm","delete","mcCancelText","Injectable","McModalModule","McButtonModule","MC_NAVBAR_CONTAINER","MC_NAVBAR_ITEM","MC_NAVBAR_BRAND","MC_NAVBAR_TITLE","McNavbarLogo","McNavbarBrand","McNavbarTitle","McNavbarItemBase","_McNavbarMixinBase","McNavbarItem","_platform","_cdRef","dropdownItems","isCollapsed","_subscription","Subscription","encodeURI","dropdownContent","denyClickIfDisabled","_focusMonitor$","hasDropdownContent","listenClickOutside","startListenFocusDropdownItems","stopListenFocusDropdownItems","isActiveDropdownLink","link","isBrowser","window","location","href","handleClickByItem","toggleDropdown","isNavbarItem","target","contains","handleClickByDropdownItem","forceCloseDropdown","_dropdownElements","el","events","eventListeners","hasAttribute","stopImmediatePropagation","read","[attr.disabled]","Platform","McNavbarContainer","CollapsibleItem","_collapsed","processCollapsed","collapsed","updateCollapsedClass","CachedItemWidth","itemsForCollapse","_collapsedItemsWidth","calculateAndCacheCollapsedItemsWidth","updateTitle","acc","getTitle","computedTitle","getAttribute","decodeURI","innerText","removeAttribute","McNavbar","forceRecalculateItemsWidth","resizeDebounceInterval","firstLevelElement","secondLevelElements","resizeObserver","fromEvent","debounceTime","_resizeSubscription","updateCollapsed","bind","_itemsWidths","calculateAndCacheItemsWidth","_totalItemsWidths","calculateAndCacheTotalItemsWidth","collapseDelta","maxAllowedWidth","itemsWidths","canCollapse","collapsedItemsWidth","getOuterElementWidth","getPropertyValue","allItemsSelector","allItems","from","getItemsForCollapse","McNavbarModule","idIterator","McProgressBarBase","_McProgressBarMixinBase","McProgressBar","mode","McProgressBarModule","McProgressSpinnerBase","_McProgressSpinnerMixinBase","McProgressSpinner","percentage","McProgressSpinnerModule","McRadioChange","McRadioGroupBase","_McRadioGroupMixinBase","MC_RADIO_GROUP_CONTROL_VALUE_ACCESSOR","_changeDetector","_name","_isInitialized","_labelPosition","controlValueAccessorChangeFn","updateRadioButtonNames","v","markRadiosForCheck","updateSelectedRadioFromValue","checkSelectedRadioButton","touch","emitChangeEvent","_radios","radio","isAlreadySelected","McRadioButtonBase","radioGroup","_radioDispatcher","removeUniqueSelectionListener","newCheckedState","notify","newDisabledState","required","onInputClick","onInputChange","groupValueChanged","[class.mc-radio-checked]","[class.mc-radio-disabled]","UniqueSelectionDispatcher","MC_SELECTION_LIST_VALUE_ACCESSOR","McListSelection","_McListSelectionMixinBase","McListBase","McList","McListSubheaderCssStyler","McListItemBase","McListItem","_element","_lineSetter","McLineSetter","_lines","_getHostElement","McLine","McListModule","McLineModule","McListOption","McLinkBase","_McLinkBase","McLink","McLinkModule","parentService","rootOpenModals","rootAfterAllClose","rootRegisteredMetaMap","registeredMetaMap","registerModal","hasRegistered","afterOpenSubscription","afterOpen","afterCloseSubscription","afterClose","removeOpenModal","has","SkipSelf","ModalUtil","document","lastPosition","listenDocumentClick","getLastClickPosition","clientX","clientY","ModalUtil$1","cfr","mcMeasureScrollbarService","changeDetector","_mcVisible","mcZIndex","_mcClosable","_mcMask","_mcMaskClosable","mcAfterOpen","mcOkType","_mcOkLoading","_mcCancelLoading","transformOrigin","mcOkText","animationState","isComponent","mcContent","createDynamicComponent","isModalButtons","mcFooter","formatModalButtons","container","HTMLElement","OverlayRef","handleVisibleStateChange","firstChange","contentComponentRef","bodyContainer","insert","autoFocusButtonOk","changeVisibleFromInside","destroy","triggerOk","onClickOkCancel","triggerCancel","getContentComponentRef","getContentComponent","getElement","onClickMask","mcMask","isModalType","type","onClickCloseBtn","ok","cancel","loadingKey","caseClose_1","doClose","isPromise","handleThen","catch","isNonEmptyString","isTemplateRef","Type","animation","closeResult","changeBodyOverflow","animateTo","getButtonCallableProp","prop","args","onButtonClick","button","loading","changeAnimationState","maskAnimationClassMap","modalAnimationClassMap","_b","changeDetectorRef","isVisible","updateTransformOrigin","buttons","autoLoading","component","factory","resolveComponentFactory","childInjector","Injector","parent","parentInjector","mcComponentParams","modalElement","modalContainer","offsetLeft","plusNum","body","scrollBarWidth","hasCleaner","_control","_numberControl","hovered","McFormFieldNumberControl","McStepper","McHint","McSuffix","McPrefix","McCleaner","[class.mc-form-field_invalid]","[class.mc-form-field_has-prefix]","[class.mc-form-field_has-suffix]","[class.mc-form-field_has-cleaner]","[class.mc-form-field_has-stepper]","[class.ng-untouched]","[class.ng-touched]","[class.ng-pristine]","[class.ng-dirty]","[class.ng-valid]","[class.ng-invalid]","[class.ng-pending]","(mouseenter)","(mouseleave)","_McFormFieldMixinBase","McFormFieldWithoutBorders","stepUp","step","res","stepDown","MC_INPUT_INVALID_TYPES","BIG_STEP","SMALL_STEP","McInputBase","_McInputMixinBase","McNumberInput","_model","bigStep","isDigit","Infinity","_host","self","getPrototypeOf","normalizeSplitter","McNumberInput_1","_focusChanged","minuses","NUMPAD_MINUS","DASH","FF_MINUS","serviceKeys","DELETE","BACKSPACE","TAB","arrows","allowedKeys","concat","isIEPeriod","isNotIEPeriod","metaKey","C","V","X","F1","F12","EDGE","TRIDENT","ZERO","NINE","NUMPAD_ZERO","NUMPAD_NINE","valueAsNumber","toString","update","replace","isFloat","isInt","test","NgModel","McInput","_type","_neverEmptyInputTypes","t","getSupportedInputTypes","_inputValueAccessor","_previousNativeValue","McInput_1","_validateType","_dirtyCheckNativeValue","_onInput","_isNeverEmpty","_isBadInput","getMcInputUnsupportedTypeError","McInputMono","MIN_VALIDATOR","MinValidator","_createValidator","_validator","[attr.min]","MAX_VALIDATOR","MaxValidator","[attr.max]","McInputModule","McContentComponent","[class.mc-layout-content]","McFooterComponent","[class.mc-layout-footer]","McHeaderComponent","[class.mc-layout-header]","McLayoutComponent","hasSidebar","[class.mc-layout]","[class.mc-layout-has-sidebar]","McSidebarComponent","mcLayoutComponent","_mcWidth","mcCollapsedWidth","mcCollapsedChange","collapsible","mcCollapsed","[class.mc-layout-sidebar]","[class.mc-layout-sidebar-collapsed]","[style.flex]","[style.max-width.px]","[style.min-width.px]","[style.width.px]","Host","McLayoutModule","listSelection","checkboxPosition","_reportValueChange","wasSelected_1","_removeOptionFromList","getLabel","_text","textContent","McListSelectionChange","McListSelectionBase","horizontal","_modelChanges","EMPTY","_tempValues","_setOptionsFromValues","_i","_c","selectAll","deselectAll","values","getSelectedOptionValues","listOption","optionIndex","setPreviousItemActive","setNextItemActive","_getOptionByValue","Boolean","McIconButton","McButton","McAnchor","McButtonCSSStyler","McIconButtonCSSStyler","McCard","readonly","selectedChange","_tabIndex","hostElement","onClick","[class.mc-card_readonly]","[class.mc-card_selected]","McCardModule","MC_CHECKBOX_CLICK_ACTION","MC_CHECKBOX_CONTROL_VALUE_ACCESSOR","McCheckbox","TransitionCheckState","McCheckboxChange","McCheckboxBase","_McCheckboxMixinBase","_clickAction","indeterminateChange","_currentAnimationClass","_currentCheckState","Init","_controlValueAccessorChangeFn","_indeterminate","focusOrigin","_onInputFocusChange","changed","_transitionCheckState","Indeterminate","Checked","Unchecked","indeterminate","newState","oldState","[class.mc-checkbox-indeterminate]","[class.mc-checkbox-checked]","[class.mc-checkbox-disabled]","[class.mc-checkbox-label-before]","MC_CHECKBOX_REQUIRED_VALIDATOR","McCheckboxRequiredValidator","[attr.required]","CheckboxRequiredValidator","McCheckboxModule","McDivider","_vertical","_inset","[attr.aria-orientation]","[class.mc-divider-vertical]","[class.mc-divider-inset]","McDividerModule","McDropdownContent","_template","_componentFactoryResolver","_appRef","_injector","_viewContainerRef","_document","_attached","context","TemplatePortal","_outlet","DomPortalOutlet","createElement","parentNode","insertBefore","outletElement","isAttached","ApplicationRef","MC_DROPDOWN_PANEL","McDropdownItemBase","_McDropdownItemMixinBase","McDropdownItem","_parentDropdownPanel","addItem","removeItem","_getTabIndex","_checkDisabled","textNodeType","TEXT_NODE","output","childNodes","length_1","nodeType","mcDropdownAnimations","transformDropdown","fadeInItems","MC_DROPDOWN_DEFAULT_OPTIONS","providedIn","MC_DROPDOWN_DEFAULT_OPTIONS_FACTORY","McDropdown","_defaultOptions","_classList","_panelAnimationState","_animationDone","backdropClass","closed","_xPosition","xPosition","_yPosition","yPosition","_items","_itemChanges","_tabSubscription","_overlapTrigger","overlapTrigger","_hasBackdrop","hasBackdrop","McDropdown_1","throwMcDropdownInvalidPositionX","setPositionClasses","throwMcDropdownInvalidPositionY","classes","obj","className","withWrap","setFocusOrigin","focusFirstItem","lazyContent","resetActiveItem","posX","posY","_startAnimation","_resetAnimation","_onAnimationDone","_isAnimating","toState","MC_DROPDOWN_SCROLL_STRATEGY","MC_DROPDOWN_SCROLL_STRATEGY_FACTORY_PROVIDER","MC_DROPDOWN_SCROLL_STRATEGY_FACTORY","McDropdownTrigger","_openedBy","dropdownOpened","dropdownClosed","_opened","_closeSubscription","_hoverSubscription","dropdown","_check","_cleanUpSubscriptions","_setPosition","_closingActions","_init","opened","_reset","dir","_setIsOpened","isOpen","throwMcDropdownMissingError","templateRef","config","_getOverlayConfig","_subscribeToPositions","OverlayConfig","withLockedPosition","originFallbackX","overlayFallbackY","originFallbackY","_d","overlayFallbackX","offsetY","backdrop","backdropClick","(touchstart)","McDropdownModule","onStepUp","onStepDown","McFormFieldBase","_labelId","_validateControlChild","hasStepper","_stepper","valueChanges","ngAfterContentChecked","clearValue","onHoverChanged","isHovered","_shouldForward","getMcFormFieldMissingControlError","_hint","_suffix","_cleaner","__extends","d","__","constructor","extendStatics","__decorate","decorators","desc","r","getOwnPropertyDescriptor","Reflect","decorate","__param","paramIndex","decorator","__metadata","metadataKey","metadataValue","metadata","isBoolean","val","MC_SANITY_CHECKS_FACTORY","base","class_1","defaultColor","Default","_color","colorPalette","defaultTabIndex","errorState","matcher","errorStateMatcher","isErrorState","optionsArray","groups","groupCounter","optionHeight","currentScrollPosition","optionOffset","arrayMap","array","iteratee","baseValues","object","props","scrollStrategies","reposition","inputType","sanitizeNumber","isFinite","getPrecision","arr","pow","value1","value2","precision","scrollThrottle","setPrototypeOf","__proto__","p","hasOwnProperty","__assign","s","n","MC_SANITY_CHECKS","_sanityChecksEnabled","_hasDoneGlobalChecks","_window","_areChecksEnabled","_checkDoctypeIsDefined","_checkThemeIsPresent","_isTestEnv","doctype","testElement","computedStyle","display","removeChild","BidiModule","_setLineClass","count","_resetClasses","_setClass","isAdd","ShowOnDirtyErrorStateMatcher","form","invalid","dirty","submitted","touched","McPseudoCheckbox","[class.mc-pseudo-checkbox_indeterminate]","[class.mc-pseudo-checkbox_checked]","McPseudoCheckboxModule","scrollbarMeasure","overflow","initScrollBarWidth","_scrollbarWidth","scrollDiv","scrollProp","offsetWidth","clientWidth","McOptgroupBase","_McOptgroupMixinBase","_uniqueOptgroupIdCounter","[class.mc-optgroup-disabled]","[attr.aria-disabled]","[attr.aria-labelledby]","_uniqueIdCounter","McOptionSelectionChange","_parent","_active","_mostRecentViewValue","disableRipple","_emitSelectionChangeEvent","setActiveStyles","setInactiveStyles","ngAfterViewChecked","[class.mc-option-multiple]","[class.mc-active]","MC_LABEL_GLOBAL_OPTIONS","topCenter","topLeft","topRight","rightTop","rightBottom","bottomCenter","bottomLeft","bottomRight","leftTop","leftBottom","McIconCSSStyler","McIconBase","_McIconMixinBase","Empty","iconName","queries","McButtonBase","_McButtonMixinBase","focusMonitor","_haltDisabledEvents"],"mappings":"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"}