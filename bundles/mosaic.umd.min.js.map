{"version":3,"file":"mosaic.umd.min.js","sources":["../../src/lib/tooltip/tooltip.component.ts","../../src/lib/tooltip/tooltip.module.ts","../../src/lib/version.ts","../../src/lib/timepicker/timepicker.constants.ts","../../src/lib/select/select.component.ts","../../src/lib/select/select.module.ts","../../src/lib/sidepanel/sidepanel-config.ts","../../src/lib/sidepanel/sidepanel-animations.ts","../../src/lib/sidepanel/sidepanel-container.component.ts","../../src/lib/sidepanel/sidepanel-ref.ts","../../src/lib/sidepanel/sidepanel.service.ts","../../src/lib/sidepanel/sidepanel-directives.ts","../../src/lib/sidepanel/sidepanel.module.ts","../../src/lib/splitter/splitter.component.ts","../../src/lib/splitter/splitter.module.ts","../../src/lib/toggle/toggle.component.ts","../../src/lib/toggle/toggle.module.ts","../../src/lib/textarea/textarea.component.ts","../../src/lib/textarea/textarea.module.ts","../../src/lib/timepicker/timepicker.ts","../../src/lib/timepicker/timepicker.module.ts","../../src/lib/select/select-animations.ts","../../src/lib/tabs/tab-body.ts","../../src/lib/tabs/tab-label-wrapper.ts","../../src/lib/tabs/tab-header.ts","../../src/lib/tabs/tab-group.ts","../../src/lib/tabs/tab-nav-bar/tab-nav-bar.ts","../../src/lib/tabs/tabs.module.ts","../../src/lib/tag/tag.component.ts","../../src/lib/tag/tag.module.ts","../../src/lib/navbar/navbar.component.ts","../../src/lib/navbar/navbar.module.ts","../../src/lib/progress-bar/progress-bar.component.ts","../../src/lib/progress-bar/progress-bar.module.ts","../../src/lib/progress-spinner/progress-spinner.component.ts","../../src/lib/progress-spinner/progress-spinner.module.ts","../../src/lib/radio/radio.component.ts","../../src/lib/radio/radio.module.ts","../../src/lib/tree/node.ts","../../src/lib/tree/padding.ts","../../src/lib/tree/tree-selection.ts","../../src/lib/tree/tree.module.ts","../../src/lib/tree/data-source/flat-data-source.ts","../../src/lib/tree/data-source/nested-data-source.ts","../../src/lib/tabs/tab-content.ts","../../src/lib/tabs/tab-label.ts","../../src/lib/tabs/tab.ts","../../src/lib/tabs/tabs-animations.ts","../../src/lib/modal/modal-control.service.ts","../../src/lib/modal/modal-ref.class.ts","../../src/lib/modal/modal-util.ts","../../src/lib/modal/modal.component.ts","../../src/lib/modal/css-unit.pipe.ts","../../src/lib/modal/modal.service.ts","../../src/lib/modal/modal.module.ts","../../src/lib/dropdown/dropdown.component.ts","../../src/lib/dropdown/dropdown-trigger.ts","../../src/lib/dropdown/dropdown.module.ts","../../src/lib/layout/content.component.ts","../../src/lib/layout/footer.component.ts","../../src/lib/layout/header.component.ts","../../src/lib/layout/layout.component.ts","../../src/lib/layout/sidebar.component.ts","../../src/lib/layout/layout.module.ts","../../src/lib/list/list-selection.component.ts","../../src/lib/list/list.component.ts","../../src/lib/list/list.module.ts","../../src/lib/link/link.component.ts","../../src/lib/link/link.module.ts","../../src/lib/datepicker/calendar.ts","../../src/lib/datepicker/datepicker-animations.ts","../../src/lib/datepicker/datepicker.ts","../../src/lib/datepicker/datepicker-input.ts","../../src/lib/datepicker/datepicker-toggle.ts","../../src/lib/datepicker/datepicker-module.ts","../../src/lib/divider/divider.component.ts","../../src/lib/divider/divider.module.ts","../../src/lib/dropdown/dropdown-content.ts","../../src/lib/dropdown/dropdown-panel.ts","../../src/lib/dropdown/dropdown-item.ts","../../src/lib/dropdown/dropdown-animations.ts","../../src/lib/input/input.ts","../../src/lib/input/input-number-validators.ts","../../src/lib/input/input.module.ts","../../src/lib/datepicker/datepicker-intl.ts","../../src/lib/datepicker/calendar-body.ts","../../src/lib/datepicker/month-view.ts","../../src/lib/datepicker/multi-year-view.ts","../../src/lib/datepicker/year-view.ts","../../src/lib/button/button.component.ts","../../src/lib/button/button.module.ts","../../src/lib/card/card.component.ts","../../src/lib/card/card.module.ts","../../src/lib/checkbox/checkbox-config.ts","../../src/lib/checkbox/checkbox.ts","../../src/lib/checkbox/checkbox-required-validator.ts","../../src/lib/checkbox/checkbox-module.ts","../../src/lib/form-field/cleaner.ts","../../src/lib/form-field/form-field-control.ts","../../src/lib/form-field/form-field-number-control.ts","../../src/lib/form-field/hint.ts","../../src/lib/form-field/prefix.ts","../../src/lib/form-field/stepper.ts","../../src/lib/form-field/suffix.ts","../../src/lib/form-field/form-field.ts","../../src/lib/form-field/form-field.module.ts","../../src/lib/input/input-value-accessor.ts","../../src/lib/input/stepperUtils.ts","../../node_modules/tslib/tslib.es6.js","../../src/lib/core/utils/utils.ts","../../src/lib/core/common-behaviors/common-module.ts","../../src/lib/core/common-behaviors/disabled.ts","../../src/lib/core/common-behaviors/color.ts","../../src/lib/core/common-behaviors/tabindex.ts","../../src/lib/core/common-behaviors/error-state.ts","../../src/lib/core/option/option.ts","../../src/lib/core/overlay/overlay-position-map.ts","../../src/lib/form-field/form-field-errors.ts","../../src/lib/input/input-errors.ts","../../src/lib/datepicker/datepicker-errors.ts","../../src/lib/dropdown/dropdown-errors.ts","../../src/lib/select/select-errors.ts","../../src/lib/core/line/line.ts","../../src/lib/core/error/error-options.ts","../../src/lib/core/selection/pseudo-checkbox/pseudo-checkbox.ts","../../src/lib/core/selection/index.ts","../../src/lib/core/services/measure-scrollbar.service.ts","../../src/lib/core/option/optgroup.ts","../../src/lib/core/option/index.ts","../../src/lib/core/label/label-options.ts","../../src/lib/core/animation/fade-animations.ts","../../src/lib/core/animation/animation.ts","../../src/lib/icon/icon.component.ts","../../src/lib/icon/icon.module.ts"],"sourcesContent":["import {\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    Directive,\n    ElementRef,\n    EventEmitter,\n    HostBinding,\n    Inject,\n    InjectionToken,\n    Input,\n    NgZone,\n    OnDestroy,\n    OnInit,\n    Optional,\n    Output,\n    TemplateRef,\n    ViewContainerRef,\n    ViewEncapsulation\n} from '@angular/core';\nimport { Directionality } from '@ptsecurity/cdk/bidi';\nimport { coerceBooleanProperty } from '@ptsecurity/cdk/coercion';\nimport { ESCAPE } from '@ptsecurity/cdk/keycodes';\nimport {\n    ConnectedOverlayPositionChange,\n    ConnectionPositionPair,\n    Overlay,\n    OverlayRef,\n    ScrollDispatcher,\n    IScrollStrategy,\n    FlexibleConnectedPositionStrategy,\n    IOverlayConnectionPosition,\n    IOriginConnectionPosition,\n    HorizontalConnectionPos,\n    VerticalConnectionPos\n} from '@ptsecurity/cdk/overlay';\nimport { ComponentPortal } from '@ptsecurity/cdk/portal';\nimport {\n    fadeAnimation,\n    DEFAULT_4_POSITIONS,\n    POSITION_MAP\n} from '@ptsecurity/mosaic/core';\nimport { BehaviorSubject, Observable, Subject } from 'rxjs';\nimport { distinctUntilChanged, takeUntil } from 'rxjs/operators';\n\n\n@Component({\n    selector: 'mc-tooltip-component',\n    inputs: [\n        'mcMouseEnterDelay',\n        'mcMouseLeaveDelay',\n        'mcTitle',\n        'mcVisible',\n        'mcTrigger',\n        'mcPlacement'\n    ],\n    outputs: ['mcVisibleChange'],\n    animations: [ fadeAnimation ],\n    templateUrl: './tooltip.component.html',\n    preserveWhitespaces: false,\n    styleUrls: ['./tooltip.css'],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    host: {\n        '(body:click)': 'this.handleBodyInteraction()'\n    }\n})\nexport class McTooltipComponent {\n    prefix = 'mc-tooltip_placement';\n    positions: ConnectionPositionPair[] = [ ...DEFAULT_4_POSITIONS ];\n    classMap = {};\n    isTitleString: boolean;\n    showTid: number;\n    hideTid: number;\n    availablePositions: any;\n    $visible: Observable<boolean>;\n\n    @Output() mcVisibleChange: EventEmitter<boolean> = new EventEmitter();\n\n    @Input() mcMouseEnterDelay = 400;\n\n    @Input() mcMouseLeaveDelay = 0;\n\n    @Input()\n    get mcTitle(): string | TemplateRef<void> {\n        return this._mcTitle;\n    }\n    set mcTitle(value: string | TemplateRef<void>) {\n        this.isTitleString = !(value instanceof TemplateRef);\n\n        if (this.isTitleString) {\n            this._mcTitle = value;\n        }\n    }\n    private _mcTitle: string | TemplateRef<void>;\n\n    @Input()\n    get mcTrigger(): string {\n        return this._mcTrigger;\n    }\n    set mcTrigger(value: string) {\n        this._mcTrigger = value;\n    }\n    private _mcTrigger: string = 'hover';\n\n    @Input()\n    get mcPlacement(): string {\n        return this._mcPlacement;\n    }\n    set mcPlacement(value: string) {\n        if (value !== this._mcPlacement) {\n            this._mcPlacement = value;\n            this.positions.unshift(POSITION_MAP[ this.mcPlacement ]);\n        } else if (!value) {\n            this._mcPlacement = 'top';\n        }\n    }\n    private _mcPlacement: string = 'top';\n\n    @Input()\n    get mcVisible(): boolean {\n        return this._mcVisible.value;\n    }\n    set mcVisible(value: boolean) {\n        const visible = coerceBooleanProperty(value);\n\n        if (this._mcVisible.value !== visible) {\n            this._mcVisible.next(visible);\n            this.mcVisibleChange.emit(visible);\n        }\n    }\n    private _mcVisible: BehaviorSubject<boolean> = new BehaviorSubject<boolean>(false);\n\n    /** Subject for notifying that the tooltip has been hidden from the view */\n    private readonly onHideSubject: Subject<any> = new Subject();\n    private closeOnInteraction: boolean = false;\n\n    constructor(public cdr: ChangeDetectorRef) {\n        this.availablePositions = POSITION_MAP;\n        this.$visible = this._mcVisible.asObservable();\n    }\n\n    show(): void {\n        if (this.hideTid) {\n            clearTimeout(this.hideTid);\n        }\n\n        if (!this.isContentEmpty()) {\n            if (this.mcTrigger !== 'manual') {\n                this.closeOnInteraction = true;\n            }\n            this.showTid = setTimeout(() => {\n                this.mcVisible = true;\n                this.mcVisibleChange.emit(true);\n\n                // Mark for check so if any parent component has set the\n                // ChangeDetectionStrategy to OnPush it will be checked anyways\n                this.markForCheck();\n            }, this.mcMouseEnterDelay);\n        }\n    }\n\n    hide(): void {\n        if (this.showTid) {\n            clearTimeout(this.showTid);\n        }\n\n        this.hideTid = setTimeout(() => {\n            this.mcVisible = false;\n            this.mcVisibleChange.emit(false);\n            this.onHideSubject.next();\n\n            // Mark for check so if any parent component has set the\n            // ChangeDetectionStrategy to OnPush it will be checked anyways\n            this.markForCheck();\n        }, this.mcMouseLeaveDelay);\n    }\n\n    setClassMap(): void {\n        this.classMap = `${this.prefix}-${this.mcPlacement}`;\n    }\n\n    isContentEmpty(): boolean {\n        return this.isTitleString ? (this.mcTitle === '' || !this.mcTitle) : false;\n    }\n\n    /** Returns an observable that notifies when the tooltip has been hidden from view. */\n    afterHidden(): Observable<void> {\n        return this.onHideSubject.asObservable();\n    }\n\n    markForCheck(): void {\n        this.cdr.markForCheck();\n    }\n\n    handleBodyInteraction(): void {\n        if (this.closeOnInteraction) {\n            this.hide();\n        }\n    }\n}\n\nexport const MC_TOOLTIP_SCROLL_STRATEGY =\n    new InjectionToken<() => IScrollStrategy>('mc-tooltip-scroll-strategy');\n\n/** @docs-private */\nexport function mcTooltipScrollStrategyFactory(overlay: Overlay): () => IScrollStrategy {\n    return () => overlay.scrollStrategies.reposition({scrollThrottle: 20});\n}\n\n/** @docs-private */\nexport const MC_TOOLTIP_SCROLL_STRATEGY_FACTORY_PROVIDER = {\n    provide: MC_TOOLTIP_SCROLL_STRATEGY,\n    deps: [Overlay],\n    useFactory: mcTooltipScrollStrategyFactory\n};\n\n/** Creates an error to be thrown if the user supplied an invalid tooltip position. */\nexport function getMcTooltipInvalidPositionError(position: string) {\n    return Error(`McTooltip position \"${position}\" is invalid.`);\n}\n\nconst VIEWPORT_MARGIN: number = 8;\n\n@Directive({\n    selector: '[mcTooltip], [attribute^=\"mcTooltip\"]',\n    exportAs: 'mcTooltip',\n    host: {\n        '(keydown)': 'handleKeydown($event)',\n        '(touchend)': 'handleTouchend()'\n    }\n})\nexport class McTooltip implements OnInit, OnDestroy {\n    isTooltipOpen: boolean = false;\n    isDynamicTooltip = false;\n    parentDisabled: boolean = false;\n    overlayRef: OverlayRef | null;\n    portal: ComponentPortal<McTooltipComponent>;\n    availablePositions: any;\n    tooltip: McTooltipComponent | null;\n\n    @Output() mcVisibleChange = new EventEmitter<boolean>();\n    private $unsubscribe = new Subject<void>();\n\n    @Input('mcTooltip')\n    get mcTitle(): string {\n        return this._mcTitle;\n    }\n    set mcTitle(title: string) {\n        this._mcTitle = title;\n        this.updateCompValue('mcTitle', title);\n    }\n    private _mcTitle: string;\n\n    @Input('mcTitle')\n    set setTitle(title: string) {\n        this.mcTitle = title;\n    }\n\n    @Input('mcTooltipDisabled')\n    get disabled(): boolean { return this._disabled; }\n    set disabled(value) {\n        this._disabled = coerceBooleanProperty(value);\n    }\n    private _disabled: boolean = false;\n\n    @Input('mcMouseEnterDelay')\n    get mcMouseEnterDelay(): number {\n        return this._mcMouseEnterDelay;\n    }\n    set mcMouseEnterDelay(value: number) {\n        this._mcMouseEnterDelay = value;\n        this.updateCompValue('mcMouseEnterDelay', value);\n    }\n    private _mcMouseEnterDelay: number;\n\n    @Input('mcMouseLeaveDelay')\n    get mcMouseLeaveDelay(): number {\n        return this._mcMouseLeaveDelay;\n    }\n    set mcMouseLeaveDelay(value: number) {\n        this._mcMouseLeaveDelay = value;\n        this.updateCompValue('mcMouseLeaveDelay', value);\n    }\n    private _mcMouseLeaveDelay: number;\n\n    @Input('mcTrigger')\n    get mcTrigger(): string {\n        return this._mcTrigger;\n    }\n    set mcTrigger(value: string) {\n        if (value) {\n            this._mcTrigger = value;\n            this.updateCompValue('mcTrigger', value);\n        } else {\n            this._mcTrigger = 'hover';\n        }\n    }\n    private _mcTrigger: string = 'hover';\n\n    @Input('mcPlacement')\n    get mcPlacement(): string {\n        return this._mcPlacement;\n    }\n    set mcPlacement(value: string) {\n        if (value) {\n            this._mcPlacement = value;\n            this.updateCompValue('mcPlacement', value);\n        } else {\n            this._mcPlacement = 'top';\n        }\n    }\n    private _mcPlacement: string = 'top';\n\n    @Input('mcTooltipClass')\n    get mcTooltipClass() { return this._mcTooltipClass; }\n    set mсTooltipClass(value: string | string[] | Set<string> | {[key: string]: any}) {\n        this._mcTooltipClass = value;\n\n        if (this.tooltip) {\n            this.tooltip.setClassMap();\n        }\n    }\n    private _mcTooltipClass: string | string[] | Set<string> | {[key: string]: any};\n\n    @Input('mcVisible')\n    get mcVisible(): boolean {\n        return this._mcVisible;\n    }\n    set mcVisible(externalValue: boolean) {\n        const value = coerceBooleanProperty(externalValue);\n        this._mcVisible = value;\n        this.updateCompValue('mcVisible', value);\n\n        if (value) {\n            this.show();\n        }\n    }\n    private _mcVisible: boolean;\n\n    @HostBinding('class.mc-tooltip-open')\n    get isOpen(): boolean {\n        return this.isTooltipOpen;\n    }\n\n    @HostBinding('class.disabled')\n    get isParentDisabled(): boolean {\n        return this.parentDisabled;\n    }\n\n    private manualListeners = new Map<string, EventListenerOrEventListenerObject>();\n    private readonly destroyed = new Subject<void>();\n\n    constructor(\n        private overlay: Overlay,\n        private elementRef: ElementRef,\n        private ngZone: NgZone,\n        private scrollDispatcher: ScrollDispatcher,\n        private hostView: ViewContainerRef,\n        @Inject(MC_TOOLTIP_SCROLL_STRATEGY) private scrollStrategy,\n        @Optional() private direction: Directionality) {\n            this.availablePositions = POSITION_MAP;\n        }\n\n    /** Create the overlay config and position strategy */\n    createOverlay(): OverlayRef {\n        if (this.overlayRef) {\n            return this.overlayRef;\n        }\n\n        // Create connected position strategy that listens for scroll events to reposition.\n        const strategy = this.overlay.position()\n            .flexibleConnectedTo(this.elementRef)\n            .withTransformOriginOn('.mc-tooltip')\n            .withFlexibleDimensions(false)\n            .withViewportMargin(VIEWPORT_MARGIN)\n            .withPositions([ ...DEFAULT_4_POSITIONS ]);\n\n        const scrollableAncestors = this.scrollDispatcher\n            .getAncestorScrollContainers(this.elementRef);\n\n        strategy.withScrollableContainers(scrollableAncestors);\n\n        strategy.positionChanges.pipe(takeUntil(this.destroyed)).subscribe((change) => {\n            if (this.tooltip) {\n                this.onPositionChange(change);\n                if (change.scrollableViewProperties.isOverlayClipped && this.tooltip.mcVisible) {\n                    // After position changes occur and the overlay is clipped by\n                    // a parent scrollable then close the tooltip.\n                    this.ngZone.run(() => this.hide());\n                }\n            }\n        });\n\n        this.overlayRef = this.overlay.create({\n            direction: this.direction,\n            positionStrategy: strategy,\n            panelClass: 'mc-tooltip-panel',\n            scrollStrategy: this.scrollStrategy()\n        });\n\n        this.updatePosition();\n\n        this.overlayRef.detachments()\n            .pipe(takeUntil(this.destroyed))\n            .subscribe(() => this.detach());\n\n        return this.overlayRef;\n    }\n\n    detach() {\n        if (this.overlayRef && this.overlayRef.hasAttached()) {\n            this.overlayRef.detach();\n        }\n\n        this.tooltip = null;\n    }\n\n    onPositionChange($event: ConnectedOverlayPositionChange): void {\n        let updatedPlacement = this.mcPlacement;\n        Object.keys(this.availablePositions).some((key) => {\n            if ($event.connectionPair.originX === this.availablePositions[key].originX &&\n                $event.connectionPair.originY === this.availablePositions[key].originY &&\n                $event.connectionPair.overlayX === this.availablePositions[key].overlayX &&\n                $event.connectionPair.overlayY === this.availablePositions[key].overlayY) {\n                updatedPlacement = key;\n\n                return true;\n            }\n\n            return false;\n        });\n        this.updateCompValue('mcPlacement', updatedPlacement);\n\n        if (this.tooltip) {\n            this.tooltip.setClassMap();\n            this.tooltip.markForCheck();\n        }\n\n        this.handlePositioningUpdate();\n    }\n\n    handlePositioningUpdate() {\n        if (!this.overlayRef) {\n            this.overlayRef = this.createOverlay();\n        }\n        if (this.mcPlacement === 'right' || this.mcPlacement === 'left') {\n            const pos =\n                (this.overlayRef.overlayElement.clientHeight -\n                    this.hostView.element.nativeElement.clientHeight) / 2; // tslint:disable-line\n            const currentContainer = this.overlayRef.overlayElement.style.top || '0px';\n            this.overlayRef.overlayElement.style.top =\n                `${parseInt(currentContainer.split('px')[0], 10) + pos - 1}px`;\n            // TODO: обновлять положение стрелки\\указателя\\\"дятла\"\n        }\n    }\n\n    // tslint:disable-next-line:no-any\n    updateCompValue(key: string, value: any): void {\n        if (this.isDynamicTooltip && value) {\n            if (this.tooltip) {\n                this.tooltip[key] = value;\n            }\n        }\n    }\n\n    ngOnInit(): void {\n        this.initElementRefListeners();\n    }\n\n    ngOnDestroy(): void {\n        if (this.overlayRef) {\n            this.overlayRef.dispose();\n        }\n        this.manualListeners.forEach((listener, event) =>\n            this.elementRef.nativeElement.removeEventListener(event, listener));\n        this.manualListeners.clear();\n\n        this.$unsubscribe.next();\n        this.$unsubscribe.complete();\n    }\n\n    handleKeydown(e: KeyboardEvent) {\n        if (this.isTooltipOpen && e.keyCode === ESCAPE) { // tslint:disable-line\n            this.hide();\n        }\n    }\n\n    handleTouchend() {\n        this.hide();\n    }\n\n    initElementRefListeners() {\n        if (this.mcTrigger === 'hover') {\n\n            this.manualListeners\n                .set('mouseenter', () => this.show())\n                .set('mouseleave', () => this.hide())\n                .forEach((listener, event) => this.elementRef.nativeElement.addEventListener(event, listener));\n        }\n\n        if (this.mcTrigger === 'focus') {\n\n            this.manualListeners\n                .set('focus', () => this.show())\n                .set('blur', () => this.hide())\n                .forEach((listener, event) => this.elementRef.nativeElement.addEventListener(event, listener));\n        }\n    }\n\n    show(): void {\n        if (!this.disabled) {\n            if (!this.tooltip) {\n                const overlayRef = this.createOverlay();\n                this.detach();\n\n                this.portal = this.portal || new ComponentPortal(McTooltipComponent, this.hostView);\n\n                this.tooltip = overlayRef.attach(this.portal).instance;\n                this.tooltip.afterHidden()\n                    .pipe(takeUntil(this.destroyed))\n                    .subscribe(() => this.detach());\n                this.isDynamicTooltip = true;\n                const properties = [\n                    'mcTitle',\n                    'mcPlacement',\n                    'mcTrigger',\n                    'mcTooltipDisabled',\n                    'mcMouseEnterDelay',\n                    'mcMouseLeaveDelay',\n                    'mсTooltipClass',\n                    'mcVisible'\n                ];\n                properties.forEach((property) => this.updateCompValue(property, this[ property ]));\n                this.tooltip.mcVisibleChange.pipe(takeUntil(this.$unsubscribe), distinctUntilChanged())\n                    .subscribe((data) => {\n                        this.mcVisible = data;\n                        this.mcVisibleChange.emit(data);\n                        this.isTooltipOpen = data;\n                    });\n            }\n            this.updatePosition();\n            this.tooltip.show();\n        }\n    }\n\n    hide(): void {\n        if (this.tooltip) {\n            this.tooltip.hide();\n        }\n    }\n\n    /** Updates the position of the current tooltip. */\n    updatePosition() {\n        if (!this.overlayRef) {\n            this.overlayRef = this.createOverlay();\n        }\n        const position =\n            this.overlayRef.getConfig().positionStrategy as FlexibleConnectedPositionStrategy;\n        const origin = this.getOrigin();\n        const overlay = this.getOverlayPosition();\n\n        position.withPositions([\n            {...origin.main, ...overlay.main},\n            {...origin.fallback, ...overlay.fallback}\n        ]);\n    }\n\n    /**\n     * Returns the origin position and a fallback position based on the user's position preference.\n     * The fallback position is the inverse of the origin (e.g. `'below' -> 'above'`).\n     */\n    getOrigin(): {main: IOriginConnectionPosition; fallback: IOriginConnectionPosition} {\n        const position = this.mcPlacement;\n        const isLtr = !this.direction || this.direction.value === 'ltr';\n        let originPosition: IOriginConnectionPosition;\n\n        if (position === 'top' || position === 'bottom') {\n            originPosition = {originX: 'center', originY: position === 'top' ? 'top' : 'bottom'};\n        } else if (\n            position === 'top' ||\n            (position === 'left' && isLtr) ||\n            (position === 'right' && !isLtr)) {\n            originPosition = {originX: 'start', originY: 'center'};\n        } else if (\n            position === 'bottom' ||\n            (position === 'right' && isLtr) ||\n            (position === 'left' && !isLtr)) {\n            originPosition = {originX: 'end', originY: 'center'};\n        } else {\n            throw getMcTooltipInvalidPositionError(position);\n        }\n\n        const {x, y} = this.invertPosition(originPosition.originX, originPosition.originY);\n\n        return {\n            main: originPosition,\n            fallback: {originX: x, originY: y}\n        };\n    }\n\n    /** Returns the overlay position and a fallback position based on the user's preference */\n    getOverlayPosition(): {main: IOverlayConnectionPosition; fallback: IOverlayConnectionPosition} {\n        const position = this.mcPlacement;\n        const isLtr = !this.direction || this.direction.value === 'ltr';\n        let overlayPosition: IOverlayConnectionPosition;\n\n        if (position === 'top') {\n            overlayPosition = {overlayX: 'center', overlayY: 'bottom'};\n        } else if (position === 'bottom') {\n            overlayPosition = {overlayX: 'center', overlayY: 'top'};\n        } else if (\n            position === 'top' ||\n            (position === 'left' && isLtr) ||\n            (position === 'right' && !isLtr)) {\n            overlayPosition = {overlayX: 'end', overlayY: 'center'};\n        } else if (\n            position === 'bottom' ||\n            (position === 'right' && isLtr) ||\n            (position === 'left' && !isLtr)) {\n            overlayPosition = {overlayX: 'start', overlayY: 'center'};\n        } else {\n            throw getMcTooltipInvalidPositionError(position);\n        }\n\n        const {x, y} = this.invertPosition(overlayPosition.overlayX, overlayPosition.overlayY);\n\n        return {\n            main: overlayPosition,\n            fallback: {overlayX: x, overlayY: y}\n        };\n    }\n\n    /** Inverts an overlay position. */\n    private invertPosition(x: HorizontalConnectionPos, y: VerticalConnectionPos) {\n        let newX: HorizontalConnectionPos = x;\n        let newY: VerticalConnectionPos = y;\n        if (this.mcPlacement === 'top' || this.mcPlacement === 'bottom') {\n            if (y === 'top') {\n                newY = 'bottom';\n            } else if (y === 'bottom') {\n                newY = 'top';\n            }\n        } else {\n            if (x === 'end') {\n                newX = 'start';\n            } else if (x === 'start') {\n                newX = 'end';\n            }\n        }\n\n        return {x: newX, y: newY};\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { OverlayModule } from '@ptsecurity/cdk/overlay';\n\nimport {\n    McTooltipComponent,\n    McTooltip,\n    MC_TOOLTIP_SCROLL_STRATEGY_FACTORY_PROVIDER\n} from './tooltip.component';\n\n\n@NgModule({\n    declarations: [McTooltipComponent, McTooltip],\n    exports: [McTooltipComponent, McTooltip],\n    imports: [CommonModule, OverlayModule],\n    providers: [MC_TOOLTIP_SCROLL_STRATEGY_FACTORY_PROVIDER],\n    entryComponents: [McTooltipComponent]\n})\nexport class McToolTipModule {\n}\n","import { Version } from '@angular/core';\n\n\nexport const VERSION = new Version('1.0.0-beta.1-abed2d5');\n","export enum TimeParts {\n    hours,\n    minutes,\n    seconds\n}\n\nexport enum TimeFormats {\n    HHmmss = 'HH:mm:ss',\n    HHmm = 'HH:mm'\n}\n\nexport const TIMEFORMAT_PLACEHOLDERS: { [timeFormat: string]: string } = {\n    [TimeFormats.HHmmss]: '  :  :  ',\n    [TimeFormats.HHmm]: '  :  '\n};\n\nexport const DEFAULT_TIME_FORMAT: TimeFormats = TimeFormats.HHmm;\n\nexport const HOURS_MINUTES_SECONDS_REGEXP =\n    new RegExp(/^([0-9]|0[0-9]|1[0-9]|2[0-3]):([0-5][0-9]|[0-9]):([0-5][0-9]|[0-9])?$/);\nexport const HOURS_MINUTES_REGEXP = /^([0-9]|0[0-9]|1[0-9]|2[0-3]):([0-5][0-9]|[0-9])?$/;\nexport const HOURS_ONLY_REGEXP = /^([0-9]|0[0-9]|1[0-9]|2[0-3]):?$/;\n\nexport const SECONDS_PER_MINUTE: number = 59;\nexport const MINUTES_PER_HOUR: number = 59;\nexport const HOURS_PER_DAY: number = 23;\n\n// TODO Move it to common CDK\nexport const ARROW_UP_KEYCODE: string = 'ArrowUp';\nexport const ARROW_DOWN_KEYCODE: string = 'ArrowDown';\nexport const ARROW_LEFT_KEYCODE: string = 'ArrowLeft';\nexport const ARROW_RIGHT_KEYCODE: string = 'ArrowRight';\n","/* tslint:disable:no-empty */\n\nimport { ActiveDescendantKeyManager } from '@ptsecurity/cdk/a11y';\nimport { Directionality } from '@ptsecurity/cdk/bidi';\nimport { coerceBooleanProperty } from '@ptsecurity/cdk/coercion';\nimport { SelectionModel } from '@ptsecurity/cdk/collections';\nimport {\n    DOWN_ARROW,\n    END,\n    ENTER,\n    HOME,\n    LEFT_ARROW,\n    RIGHT_ARROW,\n    SPACE,\n    UP_ARROW,\n    A\n} from '@ptsecurity/cdk/keycodes';\nimport {\n    CdkConnectedOverlay,\n    Overlay,\n    RepositionScrollStrategy,\n    IScrollStrategy,\n    ViewportRuler\n} from '@ptsecurity/cdk/overlay';\n\nimport {\n    AfterContentInit, AfterViewInit,\n    Attribute,\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    ContentChild,\n    ContentChildren,\n    Directive,\n    DoCheck,\n    ElementRef,\n    EventEmitter,\n    Inject,\n    InjectionToken,\n    Input,\n    isDevMode,\n    NgZone,\n    OnChanges,\n    OnDestroy,\n    OnInit,\n    Optional,\n    Output,\n    QueryList, Renderer2,\n    Self,\n    SimpleChanges,\n    ViewChild, ViewChildren,\n    ViewEncapsulation\n} from '@angular/core';\nimport { ControlValueAccessor, FormGroupDirective, NgControl, NgForm } from '@angular/forms';\nimport {\n    _countGroupLabelsBeforeOption,\n    _getOptionScrollPosition,\n    CanDisable,\n    CanDisableCtor,\n    CanUpdateErrorState,\n    CanUpdateErrorStateCtor,\n    ErrorStateMatcher,\n    HasTabIndex, HasTabIndexCtor,\n    MC_OPTION_PARENT_COMPONENT,\n    McOptgroup,\n    McOption,\n    McOptionSelectionChange,\n    mixinDisabled,\n    mixinErrorState,\n    mixinTabIndex\n} from '@ptsecurity/mosaic/core';\n\nimport { McFormField, McFormFieldControl } from '@ptsecurity/mosaic/form-field';\nimport { McTag } from '@ptsecurity/mosaic/tag';\n\n\nimport { defer, merge, Observable, Subject } from 'rxjs';\nimport {\n    filter,\n    map,\n    startWith,\n    switchMap,\n    take,\n    takeUntil,\n    distinctUntilChanged\n} from 'rxjs/operators';\n\nimport {\n    getMcSelectDynamicMultipleError,\n    getMcSelectNonArrayValueError,\n    getMcSelectNonFunctionValueError\n} from './select-errors';\n\nimport { mcSelectAnimations } from './select-animations';\n\n\nlet nextUniqueId = 0;\n\n/**\n * The following style constants are necessary to save here in order\n * to properly calculate the alignment of the selected option over\n * the trigger element.\n */\n\n/** The max height of the select's overlay panel */\nexport const SELECT_PANEL_MAX_HEIGHT = 224;\n\n/** The panel's padding on the x-axis */\nexport const SELECT_PANEL_PADDING_X = 1;\n\n/** The panel's x axis padding if it is indented (e.g. there is an option group). */\n/* tslint:disable-next-line:no-magic-numbers */\nexport const SELECT_PANEL_INDENT_PADDING_X = SELECT_PANEL_PADDING_X * 2;\n\n/** The height of the select items in `em` units. */\nexport const SELECT_ITEM_HEIGHT_EM = 2;\n\n/**\n * The select panel will only \"fit\" inside the viewport if it is positioned at\n * this value or more away from the viewport boundary.\n */\nexport const SELECT_PANEL_VIEWPORT_PADDING = 8;\n\n/** Injection token that determines the scroll handling while a select is open. */\nexport const MC_SELECT_SCROLL_STRATEGY =\n    new InjectionToken<() => IScrollStrategy>('mc-select-scroll-strategy');\n\n/** @docs-private */\nexport function MC_SELECT_SCROLL_STRATEGY_PROVIDER_FACTORY(overlay: Overlay):\n    () => RepositionScrollStrategy {\n    return () => overlay.scrollStrategies.reposition();\n}\n\n/** @docs-private */\nexport const MC_SELECT_SCROLL_STRATEGY_PROVIDER = {\n    provide: MC_SELECT_SCROLL_STRATEGY,\n    deps: [Overlay],\n    useFactory: MC_SELECT_SCROLL_STRATEGY_PROVIDER_FACTORY\n};\n\n/** Change event object that is emitted when the select value has changed. */\nexport class McSelectChange {\n    constructor(\n        /** Reference to the select that emitted the change event. */\n        public source: McSelect,\n        /** Current value of the select that emitted the event. */\n        public value: any) {\n    }\n}\n\n// Boilerplate for applying mixins to McSelect.\n/** @docs-private */\nexport class McSelectBase {\n    constructor(\n        public _elementRef: ElementRef,\n        public _defaultErrorStateMatcher: ErrorStateMatcher,\n        public _parentForm: NgForm,\n        public _parentFormGroup: FormGroupDirective,\n        public ngControl: NgControl\n    ) {}\n}\n\nexport const _McSelectMixinBase:\n    CanDisableCtor &\n    HasTabIndexCtor &\n    CanUpdateErrorStateCtor & typeof McSelectBase\n    = mixinTabIndex(mixinDisabled(mixinErrorState(McSelectBase)));\n\n\n/**\n * Allows the user to customize the trigger that is displayed when the select has a value.\n */\n@Directive({ selector: 'mc-select-trigger' })\nexport class McSelectTrigger {}\n\n\n@Component({\n    selector: 'mc-select',\n    exportAs: 'mcSelect',\n    templateUrl: 'select.html',\n    styleUrls: ['./select.css'],\n    inputs: ['disabled', 'tabIndex'],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    host: {\n        '[attr.id]': 'id',\n        '[attr.tabindex]': 'tabIndex',\n        class: 'mc-select',\n        '[class.mc-disabled]': 'disabled',\n        '[class.mc-select-invalid]': 'errorState',\n        '[class.mc-select-required]': 'required',\n        '(keydown)': '_handleKeydown($event)',\n        '(focus)': '_onFocus()',\n        '(blur)': '_onBlur()',\n        '(window:resize)': '_calculateHiddenItems()'\n    },\n    animations: [\n        mcSelectAnimations.transformPanel,\n        mcSelectAnimations.fadeInContent\n    ],\n    providers: [\n        { provide: McFormFieldControl, useExisting: McSelect },\n        { provide: MC_OPTION_PARENT_COMPONENT, useExisting: McSelect }\n    ]\n})\nexport class McSelect extends _McSelectMixinBase implements\n    AfterContentInit, AfterViewInit, OnChanges, OnDestroy, OnInit, DoCheck, ControlValueAccessor, CanDisable,\n    HasTabIndex, McFormFieldControl<any>, CanUpdateErrorState {\n\n    /** The last measured value for the trigger's client bounding rect. */\n    _triggerRect: ClientRect;\n\n    /** The cached font-size of the trigger element. */\n    _triggerFontSize = 0;\n\n    /** Deals with the selection logic. */\n    _selectionModel: SelectionModel<McOption>;\n\n    /** Manages keyboard events for options in the panel. */\n    _keyManager: ActiveDescendantKeyManager<McOption>;\n\n    /** The IDs of child options to be passed to the aria-owns attribute. */\n    _optionIds: string = '';\n\n    /** The value of the select panel's transform-origin property. */\n    _transformOrigin: string = 'top';\n\n    /** Whether the panel's animation is done. */\n    _panelDoneAnimating: boolean = false;\n\n    /** Emits when the panel element is finished transforming in. */\n    _panelDoneAnimatingStream = new Subject<string>();\n\n    /** Strategy that will be used to handle scrolling while the select panel is open. */\n    _scrollStrategy = this._scrollStrategyFactory();\n\n    /**\n     * The y-offset of the overlay panel in relation to the trigger's top start corner.\n     * This must be adjusted to align the selected option text over the trigger text.\n     * when the panel opens. Will change based on the y-position of the selected option.\n     */\n    _offsetY = 0;\n\n    /**\n     * This position config ensures that the top \"start\" corner of the overlay\n     * is aligned with with the top \"start\" of the origin by default (overlapping\n     * the trigger completely). If the panel cannot fit below the trigger, it\n     * will fall back to a position above the trigger.\n     */\n    _positions = [\n        {\n            originX: 'start',\n            originY: 'bottom',\n            overlayX: 'start',\n            overlayY: 'top'\n        },\n        {\n            originX: 'start',\n            originY: 'top',\n            overlayX: 'start',\n            overlayY: 'bottom'\n        }\n    ];\n\n    /** Whether the select is focused. */\n    get focused(): boolean {\n        return this._focused || this._panelOpen;\n    }\n\n    /**\n     * @deprecated Setter to be removed as this property is intended to be readonly.\n     * @breaking-change 8.0.0\n     */\n    set focused(value: boolean) {\n        this._focused = value;\n    }\n\n    /** A name for this control that can be used by `mc-form-field`. */\n    controlType = 'mc-select';\n\n    @ViewChild('trigger') trigger: ElementRef;\n    @ViewChildren(McTag) tags: QueryList<McTag>;\n\n    @ViewChild('panel') panel: ElementRef;\n\n    /** Overlay pane containing the options. */\n    @ViewChild(CdkConnectedOverlay) overlayDir: CdkConnectedOverlay;\n\n    /** All of the defined select options. */\n    @ContentChildren(McOption, { descendants: true }) options: QueryList<McOption>;\n\n    /** All of the defined groups of options. */\n    @ContentChildren(McOptgroup) optionGroups: QueryList<McOptgroup>;\n\n    /** Classes to be passed to the select panel. Supports the same syntax as `ngClass`. */\n    @Input() panelClass: string | string[] | Set<string> | { [key: string]: any };\n\n    /** User-supplied override of the trigger element. */\n    @ContentChild(McSelectTrigger) customTrigger: McSelectTrigger;\n\n    /** Placeholder to be shown if no value has been selected. */\n    @Input()\n    get placeholder(): string {\n        return this._placeholder;\n    }\n\n    set placeholder(value: string) {\n        this._placeholder = value;\n        this.stateChanges.next();\n    }\n\n    /** Whether the component is required. */\n    @Input()\n    get required(): boolean {\n        return this._required;\n    }\n\n    set required(value: boolean) {\n        this._required = coerceBooleanProperty(value);\n        this.stateChanges.next();\n    }\n\n    /** Whether the user should be allowed to select multiple options. */\n    @Input()\n    get multiple(): boolean {\n        return this._multiple;\n    }\n\n    set multiple(value: boolean) {\n        if (this._selectionModel) {\n            throw getMcSelectDynamicMultipleError();\n        }\n\n        this._multiple = coerceBooleanProperty(value);\n    }\n\n    /**\n     * Function to compare the option values with the selected values. The first argument\n     * is a value from an option. The second is a value from the selection. A boolean\n     * should be returned.\n     */\n    @Input()\n    get compareWith() {\n        return this._compareWith;\n    }\n\n    set compareWith(fn: (o1: any, o2: any) => boolean) {\n        /* tslint:disable-next-line:strict-type-predicates */\n        if (typeof fn !== 'function') {\n            throw getMcSelectNonFunctionValueError();\n        }\n\n        this._compareWith = fn;\n\n        if (this._selectionModel) {\n            // A different comparator means the selection could change.\n            this._initializeSelection();\n        }\n    }\n\n    /** Value of the select control. */\n    @Input()\n    get value(): any {\n        return this._value;\n    }\n\n    set value(newValue: any) {\n        if (newValue !== this._value) {\n            this.writeValue(newValue);\n            this._value = newValue;\n        }\n    }\n\n    /** Object used to control when error messages are shown. */\n    @Input() errorStateMatcher: ErrorStateMatcher;\n\n    /**\n     * Function used to sort the values in a select in multiple mode.\n     * Follows the same logic as `Array.prototype.sort`.\n     */\n    @Input() sortComparator: (a: McOption, b: McOption, options: McOption[]) => number;\n\n    @Input()\n    get id(): string {\n        return this._id;\n    }\n\n    set id(value: string) {\n        this._id = value || this._uid;\n        this.stateChanges.next();\n    }\n\n    /** Combined stream of all of the child options' change events. */\n    readonly optionSelectionChanges: Observable<McOptionSelectionChange> = defer(() => {\n        if (this.options) {\n            return merge(...this.options.map((option) => option.onSelectionChange));\n        }\n\n        return this._ngZone.onStable\n            .asObservable()\n            .pipe(take(1), switchMap(() => this.optionSelectionChanges));\n    });\n\n    /** Event emitted when the select panel has been toggled. */\n    @Output() readonly openedChange: EventEmitter<boolean> = new EventEmitter<boolean>();\n\n    /** Event emitted when the select has been opened. */\n    @Output('opened') readonly _openedStream: Observable<void> =\n        this.openedChange.pipe(filter((o) => o), map(() => {}));\n\n    /** Event emitted when the select has been closed. */\n    @Output('closed') readonly _closedStream: Observable<void> =\n        this.openedChange.pipe(filter((o) => !o), map(() => {}));\n\n    /** Event emitted when the selected value has been changed by the user. */\n    @Output() readonly selectionChange: EventEmitter<McSelectChange> = new EventEmitter<McSelectChange>();\n\n    /**\n     * Event that emits whenever the raw value of the select changes. This is here primarily\n     * to facilitate the two-way binding for the `value` input.\n     * @docs-private\n     */\n    @Output() readonly valueChange: EventEmitter<any> = new EventEmitter<any>();\n\n    hiddenItems: number = 0;\n    oneMoreText: string = '...ещё';\n\n    /** Whether or not the overlay panel is open. */\n    private _panelOpen = false;\n\n    /** Whether filling out the select is required in the form. */\n    private _required: boolean = false;\n\n    /** The scroll position of the overlay panel, calculated to center the selected option. */\n    private _scrollTop = 0;\n\n    /** The placeholder displayed in the trigger of the select. */\n    private _placeholder: string;\n\n    /** Whether the component is in multiple selection mode. */\n    private _multiple: boolean = false;\n\n    /** Unique id for this input. */\n    private readonly _uid = `mc-select-${nextUniqueId++}`;\n\n    /** Emits whenever the component is destroyed. */\n    private readonly _destroy = new Subject<void>();\n\n    private _focused = false;\n\n    private _value: any;\n\n    private _id: string;\n\n    constructor(\n        private readonly _viewportRuler: ViewportRuler,\n        private readonly _changeDetectorRef: ChangeDetectorRef,\n        private readonly _ngZone: NgZone,\n        private readonly _renderer: Renderer2,\n        _defaultErrorStateMatcher: ErrorStateMatcher,\n        elementRef: ElementRef,\n        @Optional() private readonly _dir: Directionality,\n        @Optional() _parentForm: NgForm,\n        @Optional() _parentFormGroup: FormGroupDirective,\n        @Optional() private readonly _parentFormField: McFormField,\n        @Self() @Optional() public ngControl: NgControl,\n        @Attribute('tabindex') tabIndex: string,\n        @Inject(MC_SELECT_SCROLL_STRATEGY) private readonly _scrollStrategyFactory\n    ) {\n        super(elementRef, _defaultErrorStateMatcher, _parentForm, _parentFormGroup, ngControl);\n\n        if (this.ngControl) {\n            // Note: we provide the value accessor through here, instead of\n            // the `providers` to avoid running into a circular import.\n            this.ngControl.valueAccessor = this;\n        }\n\n        this.tabIndex = parseInt(tabIndex) || 0;\n\n        // Force setter to be called in case id was not specified.\n        this.id = this.id;\n    }\n\n    ngOnInit() {\n        this._selectionModel = new SelectionModel<McOption>(this.multiple);\n        this.stateChanges.next();\n\n        // We need `distinctUntilChanged` here, because some browsers will\n        // fire the animation end event twice for the same animation. See:\n        // https://github.com/angular/angular/issues/24084\n        this._panelDoneAnimatingStream\n            .pipe(distinctUntilChanged(), takeUntil(this._destroy))\n            .subscribe(() => {\n                if (this.panelOpen) {\n                    this._scrollTop = 0;\n                    this.openedChange.emit(true);\n                } else {\n                    this.openedChange.emit(false);\n                    this._panelDoneAnimating = false;\n                    this.overlayDir.offsetX = 0;\n                    this._changeDetectorRef.markForCheck();\n                }\n            });\n    }\n\n    ngAfterContentInit() {\n        this._initKeyManager();\n\n        this._selectionModel.onChange!\n            .pipe(takeUntil(this._destroy))\n            .subscribe((event) => {\n                event.added.forEach((option) => option.select());\n                event.removed.forEach((option) => option.deselect());\n            });\n\n        this.options.changes\n            .pipe(startWith(null), takeUntil(this._destroy))\n            .subscribe(() => {\n                this._resetOptions();\n                this._initializeSelection();\n            });\n    }\n\n    ngAfterViewInit(): void {\n        this.tags.changes\n            .subscribe(() => {\n                setTimeout(() => this._calculateHiddenItems(), 0);\n            });\n    }\n\n    ngDoCheck() {\n        if (this.ngControl) { this.updateErrorState(); }\n    }\n\n    ngOnChanges(changes: SimpleChanges) {\n        // Updating the disabled state is handled by `mixinDisabled`, but we need to additionally let\n        // the parent form field know to run change detection when the disabled state changes.\n        if (changes.disabled) {\n            this.stateChanges.next();\n        }\n    }\n\n    ngOnDestroy() {\n        this._destroy.next();\n        this._destroy.complete();\n        this.stateChanges.complete();\n    }\n\n    /** `View -> model callback called when value changes` */\n    _onChange: (value: any) => void = () => {};\n\n    /** `View -> model callback called when select has been touched` */\n    _onTouched = () => {};\n\n    /** Toggles the overlay panel open or closed. */\n    toggle(): void {\n        if (this.panelOpen) {\n            this.close();\n        } else {\n            this.open();\n        }\n    }\n\n    /** Opens the overlay panel. */\n    open(): void {\n        if (this.disabled || !this.options || !this.options.length || this._panelOpen) { return; }\n\n        this._triggerRect = this.trigger.nativeElement.getBoundingClientRect();\n        // Note: The computed font-size will be a string pixel value (e.g. \"16px\").\n        // `parseInt` ignores the trailing 'px' and converts this to a number.\n        this._triggerFontSize = parseInt(getComputedStyle(this.trigger.nativeElement)['font-size']);\n\n        this._panelOpen = true;\n        this._keyManager.withHorizontalOrientation(null);\n        this._calculateOverlayPosition();\n        this._highlightCorrectOption();\n        this._changeDetectorRef.markForCheck();\n\n        // Set the font size on the panel element once it exists.\n        this._ngZone.onStable.asObservable()\n            .pipe(take(1))\n            .subscribe(() => {\n                if (this._triggerFontSize && this.overlayDir.overlayRef &&\n                    this.overlayDir.overlayRef.overlayElement) {\n                    this.overlayDir.overlayRef.overlayElement.style.fontSize = `${this._triggerFontSize}px`;\n                }\n            });\n    }\n\n    /** Closes the overlay panel and focuses the host element. */\n    close(): void {\n        if (this._panelOpen) {\n            this._panelOpen = false;\n            this._keyManager.withHorizontalOrientation(this._isRtl() ? 'rtl' : 'ltr');\n            this._changeDetectorRef.markForCheck();\n            this._onTouched();\n        }\n    }\n\n    /**\n     * Sets the select's value. Part of the ControlValueAccessor interface\n     * required to integrate with Angular's core forms API.\n     *\n     * @param value New value to be written to the model.\n     */\n    writeValue(value: any): void {\n        if (this.options) {\n            this._setSelectionByValue(value);\n        }\n    }\n\n    /**\n     * Saves a callback function to be invoked when the select's value\n     * changes from user input. Part of the ControlValueAccessor interface\n     * required to integrate with Angular's core forms API.\n     *\n     * @param fn Callback to be triggered when the value changes.\n     */\n    registerOnChange(fn: (value: any) => void): void {\n        this._onChange = fn;\n    }\n\n    /**\n     * Saves a callback function to be invoked when the select is blurred\n     * by the user. Part of the ControlValueAccessor interface required\n     * to integrate with Angular's core forms API.\n     *\n     * @param fn Callback to be triggered when the component has been touched.\n     */\n    registerOnTouched(fn: () => {}): void {\n        this._onTouched = fn;\n    }\n\n    /**\n     * Disables the select. Part of the ControlValueAccessor interface required\n     * to integrate with Angular's core forms API.\n     *\n     * @param isDisabled Sets whether the component is disabled.\n     */\n    setDisabledState(isDisabled: boolean): void {\n        this.disabled = isDisabled;\n        this._changeDetectorRef.markForCheck();\n        this.stateChanges.next();\n    }\n\n    get panelOpen(): boolean {\n        return this._panelOpen;\n    }\n\n    get selected(): McOption | McOption[] {\n        return this.multiple ? this._selectionModel.selected : this._selectionModel.selected[0];\n    }\n\n    get triggerValue(): string {\n        if (this.empty) { return ''; }\n\n        if (this._multiple) {\n            const selectedOptions = this._selectionModel.selected.map((option) => option.viewValue);\n\n            if (this._isRtl()) { selectedOptions.reverse(); }\n\n            return selectedOptions.join(', ');\n        }\n\n        return this._selectionModel.selected[0].viewValue;\n    }\n\n    get triggerValues(): McOption[] {\n        if (this.empty) { return []; }\n\n        if (this._multiple) {\n            const selectedOptions = this._selectionModel.selected;\n\n            if (this._isRtl()) { selectedOptions.reverse(); }\n\n            return selectedOptions;\n        }\n\n        return [this._selectionModel.selected[0]];\n    }\n\n    get empty(): boolean {\n        return !this._selectionModel || this._selectionModel.isEmpty();\n    }\n\n    _isRtl(): boolean {\n        return this._dir ? this._dir.value === 'rtl' : false;\n    }\n\n    _handleKeydown(event: KeyboardEvent): void {\n        if (!this.disabled) {\n            if (this.panelOpen) {\n                this._handleOpenKeydown(event);\n            } else {\n                this._handleClosedKeydown(event);\n            }\n        }\n    }\n\n    /**\n     * When the panel content is done fading in, the _panelDoneAnimating property is\n     * set so the proper class can be added to the panel.\n     */\n    _onFadeInDone(): void {\n        this._panelDoneAnimating = this.panelOpen;\n        this._changeDetectorRef.markForCheck();\n    }\n\n    _onFocus() {\n        if (!this.disabled) {\n            this._focused = true;\n            this.stateChanges.next();\n        }\n    }\n\n    /**\n     * Calls the touched callback only if the panel is closed. Otherwise, the trigger will\n     * \"blur\" to the panel when it opens, causing a false positive.\n     */\n    _onBlur() {\n        this._focused = false;\n\n        if (!this.disabled && !this.panelOpen) {\n            this._onTouched();\n            this._changeDetectorRef.markForCheck();\n            this.stateChanges.next();\n        }\n    }\n\n    /**\n     * Callback that is invoked when the overlay panel has been attached.\n     */\n    _onAttached(): void {\n        this.overlayDir.positionChange\n            .pipe(take(1))\n            .subscribe(() => {\n                this._changeDetectorRef.detectChanges();\n                this._calculateOverlayOffsetX();\n                this.panel.nativeElement.scrollTop = this._scrollTop;\n            });\n    }\n\n    /** Returns the theme to be used on the panel. */\n    _getPanelTheme(): string {\n        return this._parentFormField ? `mc-${this._parentFormField.color}` : '';\n    }\n\n    /** Focuses the select element. */\n    focus(): void {\n        this._elementRef.nativeElement.focus();\n    }\n\n    /**\n     * Calculates the scroll position of the select's overlay panel.\n     *\n     * Attempts to center the selected option in the panel. If the option is\n     * too high or too low in the panel to be scrolled to the center, it clamps the\n     * scroll position to the min or max scroll positions respectively.\n     */\n    _calculateOverlayScroll(selectedIndex: number, scrollBuffer: number, maxScroll: number): number {\n        const itemHeight = this._getItemHeight();\n        const optionOffsetFromScrollTop = itemHeight * selectedIndex;\n\n        /* tslint:disable-next-line:no-magic-numbers */\n        const halfOptionHeight = itemHeight / 2;\n\n        // Starts at the optionOffsetFromScrollTop, which scrolls the option to the top of the\n        // scroll container, then subtracts the scroll buffer to scroll the option down to\n        // the center of the overlay panel. Half the option height must be re-added to the\n        // scrollTop so the option is centered based on its middle, not its top edge.\n        const optimalScrollPosition = optionOffsetFromScrollTop - scrollBuffer + halfOptionHeight;\n\n        return Math.min(Math.max(0, optimalScrollPosition), maxScroll);\n    }\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    onContainerClick() {\n        this.focus();\n        this.open();\n    }\n\n    /** Invoked when an option is clicked. */\n    onRemoveMatcherItem(option: McOption, $event): void {\n        $event.stopPropagation();\n\n        option.deselect();\n    }\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    get shouldLabelFloat(): boolean {\n        return this._panelOpen || !this.empty;\n    }\n\n    _calculateHiddenItems(): void {\n        if (this.empty) { return; }\n\n        let visibleItems: number = 0;\n        const totalItemsWidth = this._getTotalItemsWidthInMatcher();\n        let totalVisibleItemsWidth: number = 0;\n        const itemMargin: number = 4;\n\n        this.tags.forEach((tag) => {\n            if (tag.nativeElement.offsetTop < tag.nativeElement.offsetHeight) {\n                totalVisibleItemsWidth += tag.nativeElement.getBoundingClientRect().width + itemMargin;\n                visibleItems++;\n            }\n        });\n\n        this.hiddenItems = (this.selected as ArrayLike<McOption>).length - visibleItems;\n\n        if (this.hiddenItems) {\n            const itemsCounter = this.trigger.nativeElement.querySelector('.mc-select__match-hidden-text');\n            const matcherList = this.trigger.nativeElement.querySelector('.mc-select__match-list');\n\n            const itemsCounterShowed = itemsCounter.offsetTop < itemsCounter.offsetHeight;\n            // const itemsCounterWidth: number = itemsCounter.getBoundingClientRect().width;\n            const itemsCounterWidth: number = 86;\n\n            const matcherListWidth: number = matcherList.getBoundingClientRect().width;\n            const matcherWidth: number = matcherListWidth + itemsCounterWidth;\n\n            if (itemsCounterShowed && (totalItemsWidth < matcherWidth)) { this.hiddenItems = 0; }\n\n            if (\n                totalVisibleItemsWidth === matcherListWidth ||\n                (totalVisibleItemsWidth + itemsCounterWidth) < matcherListWidth\n            ) {\n                this._changeDetectorRef.markForCheck();\n\n                return ;\n            } else if (!itemsCounterShowed && (totalItemsWidth + itemsCounterWidth) > matcherWidth) {\n                this.hiddenItems++;\n            }\n        }\n\n        this._changeDetectorRef.markForCheck();\n    }\n\n    private _getTotalItemsWidthInMatcher(): number {\n        const triggerClone = this.trigger.nativeElement.cloneNode(true);\n        triggerClone.querySelector('.mc-select__match-hidden-text').remove();\n\n        this._renderer.setStyle(triggerClone, 'position', 'absolute');\n        this._renderer.setStyle(triggerClone, 'visibility', 'hidden');\n        this._renderer.setStyle(triggerClone, 'top', '-100%');\n        this._renderer.setStyle(triggerClone, 'left', '0');\n\n        this._renderer.appendChild(this.trigger.nativeElement, triggerClone);\n\n        let totalItemsWidth: number = 0;\n        const itemMargin: number = 4;\n        triggerClone.querySelectorAll('mc-tag').forEach((item) => {\n            totalItemsWidth += item.getBoundingClientRect().width as number + itemMargin;\n        });\n\n        triggerClone.remove();\n\n        return totalItemsWidth;\n    }\n\n    /** Handles keyboard events while the select is closed. */\n    private _handleClosedKeydown(event: KeyboardEvent): void {\n        /* tslint:disable-next-line */\n        const keyCode = event.keyCode;\n        const isArrowKey = keyCode === DOWN_ARROW || keyCode === UP_ARROW ||\n            keyCode === LEFT_ARROW || keyCode === RIGHT_ARROW;\n        const isOpenKey = keyCode === ENTER || keyCode === SPACE;\n\n        // Open the select on ALT + arrow key to match the native <select>\n        if (isOpenKey || ((this.multiple || event.altKey) && isArrowKey)) {\n            event.preventDefault(); // prevents the page from scrolling down when pressing space\n            this.open();\n        } else if (!this.multiple) {\n            this._keyManager.onKeydown(event);\n        }\n    }\n\n    /** Handles keyboard events when the selected is open. */\n    private _handleOpenKeydown(event: KeyboardEvent): void {\n        /* tslint:disable-next-line */\n        const keyCode = event.keyCode;\n        const isArrowKey = keyCode === DOWN_ARROW || keyCode === UP_ARROW;\n        const manager = this._keyManager;\n\n        if (keyCode === HOME || keyCode === END) {\n            event.preventDefault();\n\n            if (keyCode === HOME) {\n                manager.setFirstItemActive();\n            } else {\n                manager.setLastItemActive();\n            }\n\n        } else if (isArrowKey && event.altKey) {\n            // Close the select on ALT + arrow key to match the native <select>\n            event.preventDefault();\n            this.close();\n        } else if ((keyCode === ENTER || keyCode === SPACE) && manager.activeItem) {\n            event.preventDefault();\n            manager.activeItem._selectViaInteraction();\n        } else if (this._multiple && keyCode === A && event.ctrlKey) {\n            event.preventDefault();\n            const hasDeselectedOptions = this.options.some((option) => !option.selected);\n            this.options.forEach((option) => {\n                if (hasDeselectedOptions && !option.disabled) {\n                    option.select();\n                } else {\n                    option.deselect();\n                }\n            });\n        } else {\n            const previouslyFocusedIndex = manager.activeItemIndex;\n\n            manager.onKeydown(event);\n\n            if (this._multiple && isArrowKey && event.shiftKey && manager.activeItem &&\n                manager.activeItemIndex !== previouslyFocusedIndex) {\n                manager.activeItem._selectViaInteraction();\n            }\n        }\n    }\n\n    private _initializeSelection(): void {\n        // Defer setting the value in order to avoid the \"Expression\n        // has changed after it was checked\" errors from Angular.\n        Promise.resolve().then(() => {\n            this._setSelectionByValue(this.ngControl ? this.ngControl.value : this._value);\n        });\n    }\n\n    /**\n     * Sets the selected option based on a value. If no option can be\n     * found with the designated value, the select trigger is cleared.\n     */\n    private _setSelectionByValue(value: any | any[]): void {\n        if (this.multiple && value) {\n            if (!Array.isArray(value)) {\n                throw getMcSelectNonArrayValueError();\n            }\n\n            this._selectionModel.clear();\n            value.forEach((currentValue: any) => this._selectValue(currentValue));\n            this._sortValues();\n        } else {\n            this._selectionModel.clear();\n            const correspondingOption = this._selectValue(value);\n\n            // Shift focus to the active item. Note that we shouldn't do this in multiple\n            // mode, because we don't know what option the user interacted with last.\n            if (correspondingOption) {\n                this._keyManager.setActiveItem(correspondingOption);\n            }\n        }\n\n        this._changeDetectorRef.markForCheck();\n    }\n\n    /**\n     * Finds and selects and option based on its value.\n     * @returns Option that has the corresponding value.\n     */\n    private _selectValue(value: any): McOption | undefined {\n        const correspondingOption = this.options.find((option: McOption) => {\n            try {\n                // Treat null as a special reset value.\n                return option.value != null && this._compareWith(option.value, value);\n            } catch (error) {\n                if (isDevMode()) {\n                    // Notify developers of errors in their comparator.\n                    console.warn(error);\n                }\n\n                return false;\n            }\n        });\n\n        if (correspondingOption) {\n            this._selectionModel.select(correspondingOption);\n        }\n\n        return correspondingOption;\n    }\n\n    /** Sets up a key manager to listen to keyboard events on the overlay panel. */\n    private _initKeyManager() {\n        this._keyManager = new ActiveDescendantKeyManager<McOption>(this.options)\n            .withTypeAhead()\n            .withVerticalOrientation()\n            .withHorizontalOrientation(this._isRtl() ? 'rtl' : 'ltr');\n\n        this._keyManager.tabOut\n            .pipe(takeUntil(this._destroy))\n            .subscribe(() => {\n                // Restore focus to the trigger before closing. Ensures that the focus\n                // position won't be lost if the user got focus into the overlay.\n                this.focus();\n                this.close();\n            });\n\n        this._keyManager.change\n            .pipe(takeUntil(this._destroy))\n            .subscribe(() => {\n                if (this._panelOpen && this.panel) {\n                    this._scrollActiveOptionIntoView();\n                } else if (!this._panelOpen && !this.multiple && this._keyManager.activeItem) {\n                    this._keyManager.activeItem._selectViaInteraction();\n                }\n            });\n    }\n\n    /** Drops current option subscriptions and IDs and resets from scratch. */\n    private _resetOptions(): void {\n        const changedOrDestroyed = merge(this.options.changes, this._destroy);\n\n        this.optionSelectionChanges\n            .pipe(takeUntil(changedOrDestroyed))\n            .subscribe((event) => {\n                this._onSelect(event.source, event.isUserInput);\n\n                if (event.isUserInput && !this.multiple && this._panelOpen) {\n                    this.close();\n                    this.focus();\n                }\n            });\n\n        // Listen to changes in the internal state of the options and react accordingly.\n        // Handles cases like the labels of the selected options changing.\n        merge(...this.options.map((option) => option._stateChanges))\n            .pipe(takeUntil(changedOrDestroyed))\n            .subscribe(() => {\n                this._changeDetectorRef.markForCheck();\n                this.stateChanges.next();\n            });\n\n        this._setOptionIds();\n    }\n\n    /** Invoked when an option is clicked. */\n    private _onSelect(option: McOption, isUserInput: boolean): void {\n        const wasSelected = this._selectionModel.isSelected(option);\n\n        if (option.value == null && !this._multiple) {\n            option.deselect();\n            this._selectionModel.clear();\n            this._propagateChanges(option.value);\n        } else {\n            if (option.selected) {\n                this._selectionModel.select(option);\n            } else {\n                this._selectionModel.deselect(option);\n            }\n\n            if (isUserInput) {\n                this._keyManager.setActiveItem(option);\n            }\n\n            if (this.multiple) {\n                this._sortValues();\n\n                if (isUserInput) {\n                    // In case the user selected the option with their mouse, we\n                    // want to restore focus back to the trigger, in order to\n                    // prevent the select keyboard controls from clashing with\n                    // the ones from `mc-option`.\n                    this.focus();\n                }\n            }\n        }\n\n        if (wasSelected !== this._selectionModel.isSelected(option)) {\n            this._propagateChanges();\n        }\n\n        this.stateChanges.next();\n    }\n\n    /** Sorts the selected values in the selected based on their order in the panel. */\n    private _sortValues() {\n        if (this.multiple) {\n            const options = this.options.toArray();\n\n            this._selectionModel.sort((a, b) => {\n                return this.sortComparator ? this.sortComparator(a, b, options) :\n                    options.indexOf(a) - options.indexOf(b);\n            });\n            this.stateChanges.next();\n        }\n    }\n\n    /** Emits change event to set the model value. */\n    private _propagateChanges(fallbackValue?: any): void {\n        let valueToEmit: any = null;\n\n        if (this.multiple) {\n            valueToEmit = (this.selected as McOption[]).map((option) => option.value);\n        } else {\n            valueToEmit = this.selected ? (this.selected as McOption).value : fallbackValue;\n        }\n\n        this._value = valueToEmit;\n        this.valueChange.emit(valueToEmit);\n        this._onChange(valueToEmit);\n        this.selectionChange.emit(new McSelectChange(this, valueToEmit));\n        this._changeDetectorRef.markForCheck();\n    }\n\n    /** Records option IDs to pass to the aria-owns property. */\n    private _setOptionIds() {\n        this._optionIds = this.options.map((option) => option.id).join(' ');\n    }\n\n    /**\n     * Highlights the selected item. If no option is selected, it will highlight\n     * the first item instead.\n     */\n    private _highlightCorrectOption(): void {\n        if (this._keyManager) {\n            if (this.empty) {\n                this._keyManager.setFirstItemActive();\n            } else {\n                this._keyManager.setActiveItem(this._selectionModel.selected[0]);\n            }\n        }\n    }\n\n    /** Scrolls the active option into view. */\n    private _scrollActiveOptionIntoView(): void {\n        const activeOptionIndex = this._keyManager.activeItemIndex || 0;\n        const labelCount = _countGroupLabelsBeforeOption(activeOptionIndex, this.options, this.optionGroups);\n\n        this.panel.nativeElement.scrollTop = _getOptionScrollPosition(\n            activeOptionIndex + labelCount,\n            this._getItemHeight(),\n            this.panel.nativeElement.scrollTop,\n            SELECT_PANEL_MAX_HEIGHT\n        );\n    }\n\n    /** Gets the index of the provided option in the option list. */\n    private _getOptionIndex(option: McOption): number | undefined {\n        /* tslint:disable-next-line */\n        return this.options.reduce((result: number, current: McOption, index: number) => {\n            /* tslint:disable-next-line:strict-type-predicates */\n            return result === undefined ? (option === current ? index : undefined) : result;\n        }, undefined);\n    }\n\n    /** Calculates the scroll position and x- and y-offsets of the overlay panel. */\n    private _calculateOverlayPosition(): void {\n        const itemHeight = this._getItemHeight();\n        const items = this._getItemCount();\n        const panelHeight = Math.min(items * itemHeight, SELECT_PANEL_MAX_HEIGHT);\n        const scrollContainerHeight = items * itemHeight;\n\n        // The farthest the panel can be scrolled before it hits the bottom\n        const maxScroll = scrollContainerHeight - panelHeight;\n\n        // If no value is selected we open the popup to the first item.\n        let selectedOptionOffset =\n            this.empty ? 0 : this._getOptionIndex(this._selectionModel.selected[0])!;\n\n        selectedOptionOffset += _countGroupLabelsBeforeOption(selectedOptionOffset, this.options,\n            this.optionGroups);\n\n        // We must maintain a scroll buffer so the selected option will be scrolled to the\n        // center of the overlay panel rather than the top.\n        /* tslint:disable-next-line:no-magic-numbers */\n        const scrollBuffer = panelHeight / 2;\n        this._scrollTop = this._calculateOverlayScroll(selectedOptionOffset, scrollBuffer, maxScroll);\n        this._offsetY = this._calculateOverlayOffsetY();\n\n        this._checkOverlayWithinViewport(maxScroll);\n    }\n\n    /**\n     * Sets the x-offset of the overlay panel in relation to the trigger's top start corner.\n     * This must be adjusted to align the selected option text over the trigger text when\n     * the panel opens. Will change based on LTR or RTL text direction. Note that the offset\n     * can't be calculated until the panel has been attached, because we need to know the\n     * content width in order to constrain the panel within the viewport.\n     */\n    private _calculateOverlayOffsetX(): void {\n        const overlayRect = this.overlayDir.overlayRef.overlayElement.getBoundingClientRect();\n        const viewportSize = this._viewportRuler.getViewportSize();\n        const isRtl = this._isRtl();\n        /* tslint:disable-next-line:no-magic-numbers */\n        const paddingWidth = SELECT_PANEL_PADDING_X * 2;\n        let offsetX: number;\n\n        const selected = this._selectionModel.selected[0] || this.options.first;\n        offsetX = selected && selected.group ? SELECT_PANEL_INDENT_PADDING_X : SELECT_PANEL_PADDING_X;\n\n        // Invert the offset in LTR.\n        if (!isRtl) { offsetX *= -1; }\n\n        // Determine how much the select overflows on each side.\n        const leftOverflow = 0 - (overlayRect.left + offsetX - (isRtl ? paddingWidth : 0));\n        const rightOverflow = overlayRect.right + offsetX - viewportSize.width\n            + (isRtl ? 0 : paddingWidth);\n\n        // If the element overflows on either side, reduce the offset to allow it to fit.\n        if (leftOverflow > 0) {\n            offsetX += leftOverflow + SELECT_PANEL_VIEWPORT_PADDING;\n        } else if (rightOverflow > 0) {\n            offsetX -= rightOverflow + SELECT_PANEL_VIEWPORT_PADDING;\n        }\n\n        // Set the offset directly in order to avoid having to go through change detection and\n        // potentially triggering \"changed after it was checked\" errors. Round the value to avoid\n        // blurry content in some browsers.\n        this.overlayDir.offsetX = Math.round(offsetX);\n        this.overlayDir.overlayRef.updatePosition();\n    }\n\n    /**\n     * Calculates the y-offset of the select's overlay panel in relation to the\n     * top start corner of the trigger. It has to be adjusted in order for the\n     * selected option to be aligned over the trigger when the panel opens.\n     */\n    private _calculateOverlayOffsetY(): number {\n        // const itemHeight = this._getItemHeight();\n        // const optionHeightAdjustment = (itemHeight - this._triggerRect.height) / 2;\n\n        // todo I'm not sure that we will use it\n        return 0;\n        // return Math.round(-optionHeightAdjustment);\n    }\n\n    /**\n     * Checks that the attempted overlay position will fit within the viewport.\n     * If it will not fit, tries to adjust the scroll position and the associated\n     * y-offset so the panel can open fully on-screen. If it still won't fit,\n     * sets the offset back to 0 to allow the fallback position to take over.\n     */\n    private _checkOverlayWithinViewport(maxScroll: number): void {\n        const itemHeight = this._getItemHeight();\n        const viewportSize = this._viewportRuler.getViewportSize();\n\n        const topSpaceAvailable = this._triggerRect.top - SELECT_PANEL_VIEWPORT_PADDING;\n        const bottomSpaceAvailable =\n            viewportSize.height - this._triggerRect.bottom - SELECT_PANEL_VIEWPORT_PADDING;\n\n        const panelHeightTop = Math.abs(this._offsetY);\n        const totalPanelHeight =\n            Math.min(this._getItemCount() * itemHeight, SELECT_PANEL_MAX_HEIGHT);\n        const panelHeightBottom = totalPanelHeight - panelHeightTop - this._triggerRect.height;\n\n        if (panelHeightBottom > bottomSpaceAvailable) {\n            this._adjustPanelUp(panelHeightBottom, bottomSpaceAvailable);\n        } else if (panelHeightTop > topSpaceAvailable) {\n            this._adjustPanelDown(panelHeightTop, topSpaceAvailable, maxScroll);\n        } else {\n            this._transformOrigin = this._getOriginBasedOnOption();\n        }\n    }\n\n    /** Adjusts the overlay panel up to fit in the viewport. */\n    private _adjustPanelUp(panelHeightBottom: number, bottomSpaceAvailable: number) {\n        // Browsers ignore fractional scroll offsets, so we need to round.\n        const distanceBelowViewport = Math.round(panelHeightBottom - bottomSpaceAvailable);\n\n        // Scrolls the panel up by the distance it was extending past the boundary, then\n        // adjusts the offset by that amount to move the panel up into the viewport.\n        this._scrollTop -= distanceBelowViewport;\n        this._offsetY -= distanceBelowViewport;\n        this._transformOrigin = this._getOriginBasedOnOption();\n\n        // If the panel is scrolled to the very top, it won't be able to fit the panel\n        // by scrolling, so set the offset to 0 to allow the fallback position to take\n        // effect.\n        if (this._scrollTop <= 0) {\n            this._scrollTop = 0;\n            this._offsetY = 0;\n            this._transformOrigin = `50% bottom 0px`;\n        }\n    }\n\n    /** Adjusts the overlay panel down to fit in the viewport. */\n    private _adjustPanelDown(panelHeightTop: number, topSpaceAvailable: number, maxScroll: number) {\n        // Browsers ignore fractional scroll offsets, so we need to round.\n        const distanceAboveViewport = Math.round(panelHeightTop - topSpaceAvailable);\n\n        // Scrolls the panel down by the distance it was extending past the boundary, then\n        // adjusts the offset by that amount to move the panel down into the viewport.\n        this._scrollTop += distanceAboveViewport;\n        this._offsetY += distanceAboveViewport;\n        this._transformOrigin = this._getOriginBasedOnOption();\n\n        // If the panel is scrolled to the very bottom, it won't be able to fit the\n        // panel by scrolling, so set the offset to 0 to allow the fallback position\n        // to take effect.\n        if (this._scrollTop >= maxScroll) {\n            this._scrollTop = maxScroll;\n            this._offsetY = 0;\n            this._transformOrigin = `50% top 0px`;\n\n            return;\n        }\n    }\n\n    /** Sets the transform origin point based on the selected option. */\n    private _getOriginBasedOnOption(): string {\n        const itemHeight = this._getItemHeight();\n        /* tslint:disable-next-line:no-magic-numbers */\n        const optionHeightAdjustment = (itemHeight - this._triggerRect.height) / 2;\n        /* tslint:disable-next-line:no-magic-numbers */\n        const originY = Math.abs(this._offsetY) - optionHeightAdjustment + itemHeight / 2;\n\n        return `50% ${originY}px 0px`;\n    }\n\n    /** Calculates the amount of items in the select. This includes options and group labels. */\n    private _getItemCount(): number {\n        return this.options.length + this.optionGroups.length;\n    }\n\n    /** Calculates the height of the select's options. */\n    private _getItemHeight(): number {\n        /* tslint:disable-next-line:no-magic-numbers */\n        return 32;\n        // return this._triggerFontSize * SELECT_ITEM_HEIGHT_EM;\n    }\n\n    /** Comparison function to specify which option is displayed. Defaults to object equality. */\n    private _compareWith = (o1: any, o2: any) => o1 === o2;\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { OverlayModule } from '@ptsecurity/cdk/overlay';\nimport { McOptionModule } from '@ptsecurity/mosaic/core';\nimport { McFormFieldModule } from '@ptsecurity/mosaic/form-field';\nimport { McIconModule } from '@ptsecurity/mosaic/icon';\nimport { McTagModule } from '@ptsecurity/mosaic/tag';\n\nimport { MC_SELECT_SCROLL_STRATEGY_PROVIDER, McSelect, McSelectTrigger } from './select.component';\n\n\n@NgModule({\n    imports: [\n        CommonModule,\n        OverlayModule,\n        McOptionModule,\n        McIconModule,\n        McTagModule\n    ],\n    exports: [McFormFieldModule, McSelect, McSelectTrigger, McOptionModule, CommonModule],\n    declarations: [McSelect, McSelectTrigger],\n    providers: [MC_SELECT_SCROLL_STRATEGY_PROVIDER]\n})\nexport class McSelectModule {}\n","import { InjectionToken } from '@angular/core';\n\n\n/** Injection token that can be used to access the data that was passed in to a sidepanel. */\nexport const MC_SIDEPANEL_DATA = new InjectionToken<any>('McSidepanelData');\n\nexport enum McSidepanelPosition {\n    Right = 'right',\n    Left = 'left',\n    Top = 'top',\n    Bottom = 'bottom'\n}\n\nexport class McSidepanelConfig<D = any> {\n    /** ID for the sidepanel. If omitted, a unique one will be generated. */\n    id?: string;\n\n    /** Data being injected into the child component. */\n    data?: D | null = null;\n\n    position?: McSidepanelPosition = McSidepanelPosition.Right;\n\n    /** Whether the sidepanel has a backdrop. */\n    hasBackdrop?: boolean = true;\n\n    /** When we open multiple sidepanels, backdrop appears only once, except cases then this flag is true. */\n    requiredBackdrop?: boolean = false;\n\n    /** Whether the user can use escape or clicking outside to close the sidepanel. */\n    disableClose?: boolean = false;\n\n    /** Custom class for the overlay pane. */\n    overlayPanelClass?: string | string[] = '';\n}\n","import { animate, AnimationTriggerMetadata, state, style, transition, trigger } from '@angular/animations';\nimport { AnimationCurves } from '@ptsecurity/mosaic/core';\n\nimport { McSidepanelPosition } from './sidepanel-config';\n\n\nexport enum McSidepanelAnimationState {\n    Void = 'void',\n    Visible = 'visible',\n    Hidden = 'hidden'\n}\n\n// TODO Find a way to use dynamic keys and avoid error \"Expression form not supported.\"\n// tslint:disable-next-line\nexport const mcSidepanelTransformAnimation: Record<McSidepanelPosition, { in: string; out: string }> = {\n    right: { in: 'translateX(100%)', out: 'translateX(0%)' },\n    left: { in: 'translateX(-100%)', out: 'translateX(0%)' },\n    top: { in: 'translateY(-100%)', out: 'translateY(0%)' },\n    bottom: { in: 'translateY(100%)', out: 'translateY(0%)' }\n};\n\nexport const mcSidepanelAnimations: {\n    readonly sidepanelState: AnimationTriggerMetadata;\n} = {\n    sidepanelState: trigger('state', [\n        state('hidden',\n            style({ transform: '{{transformIn}}' }),\n            { params: { transformIn: mcSidepanelTransformAnimation[McSidepanelPosition.Right].in }}\n        ),\n        state('visible',\n            style({ transform: '{{transformOut}}' }),\n            { params: { transformOut: mcSidepanelTransformAnimation[McSidepanelPosition.Right].out }}\n        ),\n        transition('visible => void, visible => hidden',\n            animate(`200ms ${AnimationCurves.AccelerationCurve}`)),\n        transition('void => visible',\n            animate(`200ms ${AnimationCurves.DecelerationCurve}`))\n    ])\n};\n","import { AnimationEvent } from '@angular/animations';\nimport {\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    ComponentRef,\n    ElementRef,\n    EmbeddedViewRef,\n    EventEmitter, Inject, InjectionToken,\n    OnDestroy,\n    ViewChild,\n    ViewEncapsulation\n} from '@angular/core';\n\nimport { BasePortalOutlet, CdkPortalOutlet, ComponentPortal, TemplatePortal } from '@ptsecurity/cdk/portal';\n\nimport {\n    mcSidepanelAnimations,\n    McSidepanelAnimationState,\n    mcSidepanelTransformAnimation\n} from './sidepanel-animations';\n\nimport { McSidepanelConfig, McSidepanelPosition } from './sidepanel-config';\n\n\nexport const MC_SIDEPANEL_WITH_INDENT =\n    new InjectionToken<boolean>('mc-sidepanel-with-indent');\n\nexport const MC_SIDEPANEL_WITH_SHADOW =\n    new InjectionToken<boolean>('mc-sidepanel-with-shadow');\n\n@Component({\n    selector: 'mc-sidepanel-container',\n    templateUrl: './sidepanel-container.component.html',\n    styleUrls: ['./sidepanel.css'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n    animations: [mcSidepanelAnimations.sidepanelState],\n    host: {\n        class: 'mc-sidepanel-container',\n        tabindex: '-1',\n        role: 'dialog',\n        'aria-modal': 'true',\n        '[attr.id]': 'id',\n        '[@state]': `{\n            value: animationState,\n            params: animationTransform\n        }`,\n        '(@state.start)': 'onAnimation($event)',\n        '(@state.done)': 'onAnimation($event)'\n    }\n})\nexport class McSidepanelContainerComponent extends BasePortalOutlet implements OnDestroy {\n    /** ID for the container DOM element. */\n    id: string;\n\n    /** The portal outlet inside of this container into which the content will be loaded. */\n    @ViewChild(CdkPortalOutlet) portalOutlet: CdkPortalOutlet;\n\n    /** The state of the sidepanel animations. */\n    animationState: McSidepanelAnimationState = McSidepanelAnimationState.Void;\n\n    animationTransform: { transformIn: string; transformOut: string };\n\n    /** Emits whenever the state of the animation changes. */\n    animationStateChanged = new EventEmitter<AnimationEvent>();\n\n    /** Whether the component has been destroyed. */\n    private destroyed: boolean;\n\n    constructor(\n        private elementRef: ElementRef<HTMLElement>,\n        private changeDetectorRef: ChangeDetectorRef,\n        public sidepanelConfig: McSidepanelConfig,\n        @Inject(MC_SIDEPANEL_WITH_INDENT) public withIndent: boolean,\n        @Inject(MC_SIDEPANEL_WITH_SHADOW) public withShadow: boolean) {\n        super();\n    }\n\n    ngOnDestroy(): void {\n        this.destroyed = true;\n    }\n\n    /** Attach a component portal as content to this sidepanel container. */\n    attachComponentPortal<T>(portal: ComponentPortal<T>): ComponentRef<T> {\n        this.validatePortalAttached();\n        this.setAnimation();\n        this.setPanelClass();\n\n        return this.portalOutlet.attachComponentPortal(portal);\n    }\n\n    /** Attach a template portal as content to this sidepanel container. */\n    attachTemplatePortal<C>(portal: TemplatePortal<C>): EmbeddedViewRef<C> {\n        this.validatePortalAttached();\n        this.setAnimation();\n        this.setPanelClass();\n\n        return this.portalOutlet.attachTemplatePortal(portal);\n    }\n\n    /** Begin animation of the sidepanel entrance into view. */\n    enter(): void {\n        if (!this.destroyed) {\n            this.animationState = McSidepanelAnimationState.Visible;\n            this.changeDetectorRef.detectChanges();\n        }\n    }\n\n    /** Begin animation of the sidepanel exiting from view. */\n    exit(): void {\n        if (!this.destroyed) {\n            this.animationState = McSidepanelAnimationState.Hidden;\n            this.changeDetectorRef.markForCheck();\n        }\n    }\n\n    onAnimation(event: AnimationEvent) {\n        this.animationStateChanged.emit(event);\n    }\n\n    private setAnimation() {\n        const position: McSidepanelPosition = this.sidepanelConfig.position!;\n\n        this.animationTransform = {\n            transformIn: mcSidepanelTransformAnimation[position].in,\n            transformOut: mcSidepanelTransformAnimation[position].out\n        };\n    }\n\n    private setPanelClass() {\n        const element: HTMLElement = this.elementRef.nativeElement;\n        const position: McSidepanelPosition = this.sidepanelConfig.position!;\n\n        element.classList.add(`mc-sidepanel-container_${position}`);\n\n        if (this.withShadow) {\n            element.classList.add('mc-sidepanel-container_shadowed');\n        }\n    }\n\n    private validatePortalAttached() {\n        if (this.portalOutlet.hasAttached()) {\n            throw Error('Attempting to attach sidepanel content after content is already attached');\n        }\n    }\n}\n","import { ESCAPE } from '@ptsecurity/cdk/keycodes';\nimport { OverlayRef } from '@ptsecurity/cdk/overlay';\nimport { merge, Observable, Subject } from 'rxjs';\nimport { filter, take } from 'rxjs/operators';\n\nimport { McSidepanelAnimationState } from './sidepanel-animations';\nimport { McSidepanelConfig } from './sidepanel-config';\nimport { McSidepanelContainerComponent } from './sidepanel-container.component';\n\n\n// Counter for unique sidepanel ids.\nlet uniqueId = 0;\n\nexport class McSidepanelRef<T = any, R = any> {\n    readonly id: string;\n\n    /** Instance of the component making up the content of the sidepanel. */\n    instance: T;\n\n    /** Subject for notifying the user that the sidepanel has been closed and dismissed. */\n    private readonly afterClosed$ = new Subject<R | undefined>();\n\n    /** Subject for notifying the user that the sidepanel has opened and appeared. */\n    private readonly afterOpened$ = new Subject<void>();\n\n    /** Result to be passed down to the `afterDismissed` stream. */\n    private result: R | undefined;\n\n    constructor(\n        public containerInstance: McSidepanelContainerComponent,\n        private overlayRef: OverlayRef,\n        public config: McSidepanelConfig) {\n\n        this.id = this.config.id || `mc-sidepanel-${uniqueId++}`;\n        this.containerInstance.id = this.id;\n\n        // Emit when opening animation completes\n        containerInstance.animationStateChanged.pipe(\n            filter(\n                (event) => event.phaseName === 'done' && event.toState === McSidepanelAnimationState.Visible\n            ),\n            take(1)\n        ).subscribe(() => {\n            this.afterOpened$.next();\n            this.afterOpened$.complete();\n        });\n\n        // Dispose overlay when closing animation is complete\n        containerInstance.animationStateChanged.pipe(\n            filter(\n                (event) => event.phaseName === 'done' && event.toState === McSidepanelAnimationState.Hidden\n            ),\n            take(1)\n        ).subscribe(() => {\n            overlayRef.dispose();\n            this.afterClosed$.next(this.result);\n            this.afterClosed$.complete();\n        });\n\n        if (!containerInstance.sidepanelConfig.disableClose) {\n            merge(\n                overlayRef.backdropClick(),\n                overlayRef.keydownEvents().pipe(\n                    // tslint:disable:deprecation\n                    // keyCode is deprecated, but IE11 and Edge don't support code property, which we need use instead\n                    filter((event) => event.keyCode === ESCAPE)\n                )\n            ).subscribe(() => this.close());\n        }\n    }\n\n    close(result?: R): void {\n        if (!this.afterClosed$.closed) {\n            // Transition the backdrop in parallel to the sidepanel.\n            this.containerInstance.animationStateChanged.pipe(\n                filter((event) => event.phaseName === 'done'),\n                take(1)\n            ).subscribe(() => this.overlayRef.detachBackdrop());\n\n            this.result = result;\n            this.containerInstance.exit();\n        }\n    }\n\n    /** Gets an observable that is notified when the sidepanel is finished closing. */\n    afterClosed(): Observable<R | undefined> {\n        return this.afterClosed$.asObservable();\n    }\n\n    /** Gets an observable that is notified when the sidepanel has opened and appeared. */\n    afterOpened(): Observable<void> {\n        return this.afterOpened$.asObservable();\n    }\n}\n","import {\n    ComponentRef,\n    Inject,\n    Injectable,\n    InjectionToken,\n    Injector, OnDestroy,\n    Optional,\n    SkipSelf,\n    TemplateRef\n} from '@angular/core';\nimport { Overlay, OverlayConfig, OverlayRef } from '@ptsecurity/cdk/overlay';\nimport { ComponentPortal, IComponentType, PortalInjector, TemplatePortal } from '@ptsecurity/cdk/portal';\n\nimport { MC_SIDEPANEL_DATA, McSidepanelConfig } from './sidepanel-config';\nimport {\n    McSidepanelContainerComponent,\n    MC_SIDEPANEL_WITH_INDENT,\n    MC_SIDEPANEL_WITH_SHADOW\n} from './sidepanel-container.component';\nimport { McSidepanelRef } from './sidepanel-ref';\n\n\n/** Injection token that can be used to specify default sidepanel options. */\nexport const MC_SIDEPANEL_DEFAULT_OPTIONS =\n    new InjectionToken<McSidepanelConfig>('mc-sidepanel-default-options');\n\n@Injectable()\nexport class McSidepanelService implements OnDestroy {\n    private openedSidepanelsAtThisLevel: McSidepanelRef[] = [];\n\n    /** Keeps track of the currently-open sidepanels. */\n    get openedSidepanels(): McSidepanelRef[] {\n        return this.parentSidepanelService ? this.parentSidepanelService.openedSidepanels :\n            this.openedSidepanelsAtThisLevel;\n    }\n\n    constructor(\n        private overlay: Overlay,\n        private injector: Injector,\n        @Optional() @Inject(MC_SIDEPANEL_DEFAULT_OPTIONS) private defaultOptions: McSidepanelConfig,\n        @Optional() @SkipSelf() private parentSidepanelService: McSidepanelService) {\n    }\n\n    ngOnDestroy() {\n        // Only close the sidepanels at this level on destroy\n        // since the parent service may still be active.\n        this.closeSidepanels(this.openedSidepanelsAtThisLevel);\n    }\n\n    open<T, D = any>(componentOrTemplateRef: IComponentType<T> | TemplateRef<T>,\n                     config?: McSidepanelConfig<D>): McSidepanelRef<T> {\n        const fullConfig = {\n            ...(this.defaultOptions || new McSidepanelConfig()),\n            ...config\n        };\n\n        if (fullConfig.id && this.getSidepanelById(fullConfig.id)) {\n            throw Error(`Sidepanel with id \"${fullConfig.id}\" exists already. The sidepanel id must be unique.`);\n        }\n\n        const overlayRef = this.createOverlay(fullConfig);\n        const container = this.attachContainer(overlayRef, fullConfig);\n        const ref = new McSidepanelRef(container, overlayRef, fullConfig);\n\n        if (componentOrTemplateRef instanceof TemplateRef) {\n            container.attachTemplatePortal(new TemplatePortal<T>(componentOrTemplateRef, null!, {\n                $implicit: fullConfig.data,\n                sidepanelRef: ref\n            } as any));\n        } else {\n            const injector = this.createInjector(fullConfig, ref, container);\n            const portal = new ComponentPortal(componentOrTemplateRef, undefined, injector);\n            const contentRef = container.attachComponentPortal(portal);\n\n            ref.instance = contentRef.instance;\n        }\n\n        this.openedSidepanels.push(ref);\n        ref.afterClosed().subscribe(() => this.removeOpenSidepanel(ref));\n        container.enter();\n\n        return ref;\n    }\n\n    /**\n     * Closes all of the currently-open sidepanels.\n     */\n    closeAll(): void {\n        this.closeSidepanels(this.openedSidepanels);\n    }\n\n    /**\n     * Finds an open sidepanel by its id.\n     * @param id ID to use when looking up the sidepanel.\n     */\n    getSidepanelById(id: string): McSidepanelRef | undefined {\n        return this.openedSidepanels.find((sidepanel) => sidepanel.id === id);\n    }\n\n    /**\n     * Attaches the sidepanel container component to the overlay.\n     */\n    private attachContainer(overlayRef: OverlayRef, config: McSidepanelConfig): McSidepanelContainerComponent {\n        const openedSidepanelsWithSamePosition = this.getOpenedSidepanelsWithSamePosition(config);\n\n        const injector = new PortalInjector(this.injector, new WeakMap<any>([\n            [McSidepanelConfig, config],\n            [MC_SIDEPANEL_WITH_INDENT, openedSidepanelsWithSamePosition.length >= 1],\n            [MC_SIDEPANEL_WITH_SHADOW, openedSidepanelsWithSamePosition.length < 2] // tslint:disable-line\n        ]));\n\n        const containerPortal = new ComponentPortal(McSidepanelContainerComponent, undefined, injector);\n        const containerRef: ComponentRef<McSidepanelContainerComponent> = overlayRef.attach(containerPortal);\n\n        return containerRef.instance;\n    }\n\n    /**\n     * Creates a custom injector to be used inside the sidepanel. This allows a component loaded inside\n     * of a sidepanel to close itself and, optionally, to return a value.\n     * @param config Config object that is used to construct the sidepanel.\n     * @param sidepanelRef Reference to the sidepanel.\n     * @param sidepanelContainer Sidepanel container element that wraps all of the contents.\n     * @returns The custom injector that can be used inside the sidepanel.\n     */\n    private createInjector<T>(\n        config: McSidepanelConfig,\n        sidepanelRef: McSidepanelRef<T>,\n        sidepanelContainer: McSidepanelContainerComponent): PortalInjector {\n\n        // The McSidepanelContainerComponent is injected in the portal as the McSidepanelContainerComponent and\n        // the sidepanel's content are created out of the same ViewContainerRef and as such, are siblings for injector\n        // purposes. To allow the hierarchy that is expected, the McSidepanelContainerComponent is explicitly\n        // added to the injection tokens.\n        const injectionTokens = new WeakMap<any>([\n            [McSidepanelContainerComponent, sidepanelContainer],\n            [MC_SIDEPANEL_DATA, config.data],\n            [McSidepanelRef, sidepanelRef]\n        ]);\n\n        return new PortalInjector(this.injector, injectionTokens);\n    }\n\n    /**\n     * Creates a new overlay and places it in the correct location.\n     * @param config The user-specified sidepanel config.\n     */\n    private createOverlay(config: McSidepanelConfig): OverlayRef {\n        const overlayConfig = new OverlayConfig({\n            hasBackdrop: config.hasBackdrop,\n            backdropClass: this.getBackdropClass(config),\n            maxWidth: '100%',\n            panelClass: config.overlayPanelClass,\n            scrollStrategy: this.overlay.scrollStrategies.block(),\n            positionStrategy: this.overlay.position().global()\n        });\n\n        return this.overlay.create(overlayConfig);\n    }\n\n    private closeSidepanels(sidepanels: McSidepanelRef[]) {\n        const reversedOpenedSidepanels = [...sidepanels.reverse()];\n\n        reversedOpenedSidepanels.forEach((sidepanelRef: McSidepanelRef) => {\n            sidepanelRef.close();\n        });\n    }\n\n    private getBackdropClass(config: McSidepanelConfig): string {\n        const hasOpenedSidepanelWithBackdrop =\n            this.openedSidepanels.some((sidepanelRef) => sidepanelRef.config.hasBackdrop!);\n\n        return config.requiredBackdrop || !hasOpenedSidepanelWithBackdrop ? 'cdk-overlay-dark-backdrop' :\n            'cdk-overlay-transparent-backdrop';\n    }\n\n    private getOpenedSidepanelsWithSamePosition(config: McSidepanelConfig): McSidepanelRef[] {\n        return this.openedSidepanels.filter((sidepanelRef) => sidepanelRef.config.position === config.position);\n    }\n\n    /**\n     * Removes a sidepanel from the array of open sidepanels.\n     * @param sidepanelRef Sidepanel to be removed.\n     */\n    private removeOpenSidepanel(sidepanelRef: McSidepanelRef) {\n        const index = this.openedSidepanels.indexOf(sidepanelRef);\n\n        if (index > -1) {\n            this.openedSidepanels.splice(index, 1);\n        }\n    }\n}\n","import { Component, Directive, ElementRef, Input, OnChanges, OnInit, Optional, SimpleChanges } from '@angular/core';\n\nimport { McSidepanelRef } from './sidepanel-ref';\nimport { McSidepanelService } from './sidepanel.service';\n\n\n/**\n * Button that will close the current sidepanel.\n */\n@Directive({\n    selector: 'button[mc-sidepanel-close], button[mcSidepanelClose]',\n    host: {\n        '(click)': 'sidepanelRef.close(sidepanelResult)',\n        class: 'mc-sidepanel-close',\n        type: 'button'\n    }\n})\nexport class McSidepanelClose implements OnInit, OnChanges {\n    @Input('mc-sidepanel-close') sidepanelResult: any;\n\n    @Input('mcSidepanelClose') mcSidepanelClose: any;\n\n    constructor(\n        @Optional() public sidepanelRef: McSidepanelRef,\n        private elementRef: ElementRef<HTMLElement>,\n        private sidepanelService: McSidepanelService\n    ) {}\n\n    ngOnInit() {\n        if (!this.sidepanelRef) {\n            // When this directive is included in a sidepanel via TemplateRef (rather than being\n            // in a Component), the SidepanelRef isn't available via injection because embedded\n            // views cannot be given a custom injector. Instead, we look up the SidepanelRef by\n            // ID.\n            // This must occur in `onInit`, as the ID binding for the sidepanel container won't\n            // be resolved at constructor time. We use setTimeout by same reason.\n            setTimeout(() => {\n                this.sidepanelRef = getClosestSidepanel(this.elementRef, this.sidepanelService.openedSidepanels)!;\n            });\n        }\n    }\n\n    ngOnChanges(changes: SimpleChanges) {\n        const proxiedChange = changes.mcSidepanelClose || changes.sidepanelResult;\n\n        if (proxiedChange) {\n            this.sidepanelResult = proxiedChange.currentValue;\n        }\n    }\n}\n\n/**\n * Header of a sidepanel.\n */\n@Component({\n    selector: 'mc-sidepanel-header',\n    template: `\n        <div class=\"mc-sidepanel-title\">\n            <ng-content></ng-content>\n        </div>\n        <button *ngIf=\"closeable\" mc-sidepanel-close>\n            <span class=\"mc-sidepanel-close-x\">\n                <i mc-icon=\"mc-close-L_16\" class=\"mc-icon mc-icon_light\" color=\"second\"></i>\n            </span>\n        </button>\n    `,\n    host: {\n        class: 'mc-sidepanel-header'\n    }\n})\nexport class McSidepanelHeader {\n    @Input() closeable: boolean;\n}\n\n/**\n * Scrollable content container of a sidepanel.\n */\n@Directive({\n    selector: 'mc-sidepanel-body, [mc-sidepanel-body], mcSidepanelBody',\n    host: {\n        class: 'mc-sidepanel-body'\n    }\n})\nexport class McSidepanelBody {}\n\n/**\n * Footer of a sidepanel.\n */\n@Directive({\n    selector: 'mc-sidepanel-footer, [mc-sidepanel-footer], mcSidepanelFooter',\n    host: {\n        class: 'mc-sidepanel-footer'\n    }\n})\nexport class McSidepanelFooter {}\n\n/**\n * Actions block of a sidepanel footer.\n */\n@Directive({\n    selector: 'mc-sidepanel-actions, [mc-sidepanel-actions], mcSidepanelActions',\n    host: {\n        class: 'mc-sidepanel-actions'\n    }\n})\nexport class McSidepanelActions {}\n\n/**\n * Finds the closest McSidepanelRef to an element by looking at the DOM.\n * @param element Element relative to which to look for a sidepanel.\n * @param openSidepanels References to the currently-open sidepanels.\n */\nfunction getClosestSidepanel(element: ElementRef<HTMLElement>, openSidepanels: McSidepanelRef[]) {\n    let parent: HTMLElement | null = element.nativeElement.parentElement;\n\n    while (parent && !parent.classList.contains('mc-sidepanel-container')) {\n        parent = parent.parentElement;\n    }\n\n    return parent ? openSidepanels.find((sidepanel) => sidepanel.id === parent!.id) : null;\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { OverlayModule } from '@ptsecurity/cdk/overlay';\nimport { PortalModule } from '@ptsecurity/cdk/portal';\nimport { McCommonModule } from '@ptsecurity/mosaic/core';\nimport { McIconModule } from '@ptsecurity/mosaic/icon';\n\nimport { McSidepanelContainerComponent } from './sidepanel-container.component';\nimport {\n    McSidepanelActions,\n    McSidepanelBody,\n    McSidepanelClose,\n    McSidepanelFooter,\n    McSidepanelHeader\n} from './sidepanel-directives';\nimport { McSidepanelService } from './sidepanel.service';\n\n\n@NgModule({\n    imports: [\n        CommonModule,\n        OverlayModule,\n        PortalModule,\n        McCommonModule,\n        McIconModule\n    ],\n    providers: [McSidepanelService],\n    declarations: [\n        McSidepanelContainerComponent,\n        McSidepanelClose,\n        McSidepanelHeader,\n        McSidepanelBody,\n        McSidepanelFooter,\n        McSidepanelActions\n    ],\n    entryComponents: [McSidepanelContainerComponent],\n    exports: [\n        McSidepanelContainerComponent,\n        McSidepanelClose,\n        McSidepanelHeader,\n        McSidepanelBody,\n        McSidepanelFooter,\n        McSidepanelActions\n    ]\n})\nexport class McSidepanelModule {}\n","import {\n    ChangeDetectionStrategy,\n    Component,\n    Directive,\n    ElementRef,\n    Input,\n    NgZone, OnDestroy,\n    OnInit,\n    Renderer2,\n    ViewEncapsulation\n} from '@angular/core';\n\nimport { coerceBooleanProperty, coerceCssPixelValue, coerceNumberProperty } from '@ptsecurity/cdk/coercion';\n\n\ninterface IArea {\n    area: McSplitterAreaDirective;\n    index: number;\n    order: number;\n    initialSize: number;\n}\n\ninterface IPoint {\n    x: number;\n    y: number;\n}\n\n\nconst enum AttributeProperty {\n    Disabled = 'disabled'\n}\n\nconst enum Cursor {\n    Default = 'default',\n    ResizeColumn = 'col-resize',\n    ResizeRow = 'row-resize'\n}\n\nconst enum StyleProperty {\n    Cursor = 'cursor',\n    Flex = 'flex',\n    FlexBasis = 'flex-basis',\n    FlexDirection = 'flex-direction',\n    Height = 'height',\n    MaxWidth = 'max-width',\n    MinHeight = 'min-height',\n    MinWidth = 'minWidth',\n    OffsetHeight = 'offsetHeight',\n    OffsetWidth = 'offsetWidth',\n    Order = 'order',\n    Width = 'width'\n}\n\nconst enum State {\n    Disabled = 'disabled',\n    Horizontal = 'horizontal',\n    Vertical = 'vertical'\n}\n\nexport const enum Direction {\n    Horizontal = 'horizontal',\n    Vertical = 'vertical'\n}\n\n@Component({\n    selector: 'mc-splitter',\n    preserveWhitespaces: false,\n    styleUrls: ['splitter.css'],\n    templateUrl: './splitter.component.html',\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class McSplitterComponent implements OnInit {\n    readonly areas: IArea[] = [];\n\n    private _direction: Direction;\n    private _disabled: boolean = false;\n    private _gutterSize: number = 6;\n\n    private isDragging: boolean = false;\n\n    private readonly areaPositionDivider: number = 2;\n    private readonly listeners: (() => void)[] = [];\n\n    @Input()\n    set direction(direction: Direction) {\n        this._direction = direction;\n    }\n\n    get direction(): Direction {\n        return this._direction;\n    }\n\n    @Input()\n    set disabled(disabled: boolean) {\n        this._disabled = coerceBooleanProperty(disabled);\n    }\n\n    get disabled(): boolean {\n        return this._disabled;\n    }\n\n    @Input()\n    set gutterSize(gutterSize: number) {\n        const size = coerceNumberProperty(gutterSize);\n        this._gutterSize = size > 0 ? size : this.gutterSize;\n    }\n\n    get gutterSize(): number {\n        return this._gutterSize;\n    }\n\n    constructor(private elementRef: ElementRef,\n                private ngZone: NgZone,\n                private renderer: Renderer2) {}\n\n    addArea(area: McSplitterAreaDirective): void {\n        const index: number = this.areas.length;\n        const order: number = index * this.areaPositionDivider;\n        const size: number = area.getSize();\n\n        area.setOrder(order);\n\n        this.areas.push({\n            area,\n            index,\n            order,\n            initialSize: size\n        });\n    }\n\n    ngOnInit(): void {\n        if (!this.direction) {\n            this.direction = Direction.Horizontal;\n        }\n\n        this.setStyle(StyleProperty.FlexDirection, this.isVertical() ? 'column' : 'row');\n    }\n\n    onMouseDown(event: MouseEvent, leftAreaIndex: number, rightAreaIndex: number) {\n        if (this.disabled) {\n            return;\n        }\n\n        const leftArea = this.areas[leftAreaIndex];\n        const rightArea = this.areas[rightAreaIndex];\n\n        const startPoint: IPoint = {\n            x: event.screenX,\n            y: event.screenY\n        };\n\n        leftArea.initialSize = leftArea.area.getSize();\n        rightArea.initialSize = rightArea.area.getSize();\n\n        this.areas.forEach((item) => {\n            const size = item.area.getSize();\n            item.area.disableFlex();\n            item.area.setSize(size);\n        });\n\n        this.ngZone.runOutsideAngular(() => {\n            this.listeners.push(\n                this.renderer.listen(\n                    'document',\n                    'mouseup',\n                    () => this.onMouseUp()\n                )\n            );\n        });\n\n        this.ngZone.runOutsideAngular(() => {\n            this.listeners.push(\n                this.renderer.listen(\n                    'document',\n                    'mousemove',\n                    (e: MouseEvent) => this.onMouseMove(e, startPoint, leftArea, rightArea)\n                )\n            );\n        });\n\n        this.isDragging = true;\n    }\n\n    removeArea(area: McSplitterAreaDirective): void {\n        let indexToRemove: number = -1;\n\n        this.areas.some((item, index) => {\n            if (item.area === area) {\n                indexToRemove = index;\n\n                return true;\n            }\n\n            return false;\n        });\n\n        if (indexToRemove === -1) {\n            return;\n        }\n\n        this.areas.splice(indexToRemove, 1);\n    }\n\n    private isVertical(): boolean {\n        return this.direction === Direction.Vertical;\n    }\n\n    private onMouseMove(event: MouseEvent, startPoint: IPoint, leftArea: IArea, rightArea: IArea) {\n        if (!this.isDragging || this.disabled) {\n            return;\n        }\n\n        const endPoint: IPoint = {\n            x: event.screenX,\n            y: event.screenY\n        };\n\n        const offset = this.isVertical()\n            ? startPoint.y - endPoint.y\n            : startPoint.x - endPoint.x;\n\n        const newLeftAreaSize = leftArea.initialSize - offset;\n        const newRightAreaSize = rightArea.initialSize + offset;\n\n        const minLeftAreaSize = leftArea.area.getMinSize();\n        const minRightAreaSize = rightArea.area.getMinSize();\n\n        if (newLeftAreaSize <= minLeftAreaSize || newRightAreaSize <= minRightAreaSize) {\n            const rightAreaOffset = leftArea.initialSize - minLeftAreaSize;\n\n            leftArea.area.setSize(minLeftAreaSize);\n            rightArea.area.setSize(rightArea.initialSize + rightAreaOffset);\n        } else if (newLeftAreaSize <= 0) {\n            leftArea.area.setSize(0);\n            rightArea.area.setSize(rightArea.initialSize + leftArea.initialSize);\n        } else if (newRightAreaSize <= 0) {\n            leftArea.area.setSize(rightArea.initialSize + leftArea.initialSize);\n            rightArea.area.setSize(0);\n        } else {\n            leftArea.area.setSize(newLeftAreaSize);\n            rightArea.area.setSize(newRightAreaSize);\n        }\n    }\n\n    private onMouseUp() {\n        while (this.listeners.length > 0) {\n            const unsubscribe = this.listeners.pop();\n\n            if (unsubscribe) {\n                unsubscribe();\n            }\n        }\n\n        this.isDragging = false;\n    }\n\n    private setStyle(property: StyleProperty, value: string | number) {\n        this.renderer.setStyle(this.elementRef.nativeElement, property, value);\n    }\n}\n\n@Directive({\n    selector: 'mc-gutter'\n})\nexport class McGutterDirective implements OnInit {\n    private _direction: Direction = Direction.Vertical;\n    private _disabled: boolean = false;\n    private _order: number = 0;\n    private _size: number = 6;\n\n    @Input()\n    set direction(direction: Direction) {\n        this._direction = direction;\n    }\n\n    get direction(): Direction {\n        return this._direction;\n    }\n\n    @Input()\n    set disabled(disabled: boolean) {\n        this._disabled = coerceBooleanProperty(disabled);\n    }\n\n    get disabled(): boolean {\n        return this._disabled;\n    }\n\n    @Input()\n    set order(order: number) {\n        this._order = coerceNumberProperty(order);\n    }\n\n    get order(): number {\n        return this._order;\n    }\n\n    @Input()\n    set size(size: number) {\n        this._size = coerceNumberProperty(size);\n    }\n\n    get size(): number {\n        return this._size;\n    }\n\n    constructor(private renderer: Renderer2,\n                private elementRef: ElementRef) {\n    }\n\n    ngOnInit(): void {\n        this.setStyle(StyleProperty.Cursor, this.getCursor(this.getState()));\n        this.setStyle(StyleProperty.FlexBasis, coerceCssPixelValue(this.size));\n        this.setStyle(this.isVertical() ? StyleProperty.Height : StyleProperty.Width, coerceCssPixelValue(this.size));\n        this.setStyle(StyleProperty.Order, this.order);\n\n        if (!this.isVertical()) {\n            this.setStyle(StyleProperty.Height, '100%');\n        }\n\n        if (this.disabled) {\n            this.setAttr(AttributeProperty.Disabled, 'true');\n        }\n\n        // fix IE issue with gutter icon. flex-direction is requied for flex alignment options\n        this.setStyle(StyleProperty.FlexDirection, this.isVertical() ? 'row' : 'column');\n    }\n\n    private isVertical(): boolean {\n        return this.direction === Direction.Vertical;\n    }\n\n    private getCursor(state: State): string {\n        switch (state) {\n            case State.Disabled:\n                return Cursor.Default;\n            case State.Vertical:\n                return  Cursor.ResizeRow;\n            case State.Horizontal:\n                return Cursor.ResizeColumn;\n            default:\n                throw Error(`Unknown gutter state for cursor: ${state}`);\n        }\n    }\n\n    private getState(): State {\n        return this.disabled\n            ? State.Disabled\n            : this.direction === Direction.Vertical\n                ? State.Vertical\n                : State.Horizontal;\n    }\n\n    private setStyle(property: StyleProperty, value: string | number) {\n        this.renderer.setStyle(this.elementRef.nativeElement, property, value);\n    }\n\n    private setAttr(attribute: AttributeProperty, value: string) {\n        this.renderer.setAttribute(this.elementRef.nativeElement, attribute, value);\n    }\n}\n\n@Directive({\n    selector: 'mc-splitter-area'\n})\nexport class McSplitterAreaDirective implements OnInit, OnDestroy {\n    constructor(private elementRef: ElementRef,\n                private renderer: Renderer2,\n                private splitter: McSplitterComponent) {}\n\n    disableFlex(): void {\n        this.renderer.removeStyle(this.elementRef.nativeElement, 'flex');\n    }\n\n    ngOnInit(): void {\n        this.splitter.addArea(this);\n\n        this.removeStyle(StyleProperty.MaxWidth);\n        this.setStyle(StyleProperty.Flex, '1');\n\n        if (this.splitter.direction === Direction.Vertical) {\n            this.setStyle(StyleProperty.Width, '100%');\n            this.removeStyle(StyleProperty.Height);\n        } else {\n            this.setStyle(StyleProperty.Height, '100%');\n            this.removeStyle(StyleProperty.Width);\n        }\n    }\n\n    ngOnDestroy(): void {\n        this.splitter.removeArea(this);\n    }\n\n    setOrder(order: number): void {\n        this.setStyle(StyleProperty.Order, order);\n    }\n\n    setSize(size: number): void {\n        const sz = coerceNumberProperty(size);\n        this.setStyle(this.getSizeProperty(), coerceCssPixelValue(sz));\n    }\n\n    getSize(): number {\n        return this.elementRef.nativeElement[this.getOffsetSizeProperty()];\n    }\n\n    getMinSize(): number {\n        const styles = getComputedStyle(this.elementRef.nativeElement);\n\n        return parseFloat(styles[this.getMinSizeProperty()]);\n    }\n\n    private isVertical(): boolean {\n        return this.splitter.direction === Direction.Vertical;\n    }\n\n    private getMinSizeProperty(): StyleProperty {\n        return this.isVertical()\n            ? StyleProperty.MinHeight\n            : StyleProperty.MinWidth;\n    }\n\n    private getOffsetSizeProperty(): StyleProperty {\n        return this.isVertical()\n            ? StyleProperty.OffsetHeight\n            : StyleProperty.OffsetWidth;\n    }\n\n    private getSizeProperty(): StyleProperty {\n        return this.isVertical()\n            ? StyleProperty.Height\n            : StyleProperty.Width;\n    }\n\n    private setStyle(style: StyleProperty, value: string | number) {\n        this.renderer.setStyle(this.elementRef.nativeElement, style, value);\n    }\n\n    private removeStyle(style: StyleProperty) {\n        this.renderer.removeStyle(this.elementRef.nativeElement, style);\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { McIconModule } from '@ptsecurity/mosaic/icon';\n\nimport { McGutterDirective, McSplitterAreaDirective, McSplitterComponent } from './splitter.component';\n\n\n@NgModule({\n    imports: [\n        CommonModule,\n        McIconModule\n    ],\n    exports: [\n        McGutterDirective,\n        McSplitterAreaDirective,\n        McSplitterComponent\n    ],\n    declarations: [\n        McGutterDirective,\n        McSplitterAreaDirective,\n        McSplitterComponent\n    ]\n})\nexport class McSplitterModule {\n}\n","import { animate, state, style, transition, trigger } from '@angular/animations';\nimport {\n    Attribute,\n    ChangeDetectionStrategy, ChangeDetectorRef,\n    Component,\n    ElementRef, EventEmitter, forwardRef,\n    Input, Output, ViewChild,\n    ViewEncapsulation\n} from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { FocusMonitor } from '@ptsecurity/cdk/a11y';\nimport {\n    ThemePalette,\n    CanColor, CanColorCtor,\n    CanDisable, CanDisableCtor,\n    HasTabIndex, HasTabIndexCtor,\n    mixinColor,\n    mixinDisabled,\n    mixinTabIndex\n} from '@ptsecurity/mosaic/core';\n\n\nlet nextUniqueId = 0;\n\ntype ToggleLabelPositionType = 'left' | 'right';\n\nexport class McToggleBase {\n    constructor(public _elementRef: ElementRef) {}\n}\n\nexport const _McToggleMixinBase:\n    HasTabIndexCtor &\n    CanDisableCtor &\n    CanColorCtor &\n    typeof McToggleBase = mixinTabIndex(mixinColor(mixinDisabled(McToggleBase), ThemePalette.Primary));\n\nexport class McToggleChange {\n    source: McToggleComponent;\n    checked: boolean;\n}\n\n@Component({\n    selector: 'mc-toggle',\n    exportAs: 'mcToggle',\n    templateUrl: './toggle.component.html',\n    styleUrls: ['./toggle.css'],\n    providers: [\n        {provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => McToggleComponent), multi: true}\n    ],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n    inputs: ['disabled', 'color', 'tabIndex'],\n    host: {\n        class: 'mc-toggle',\n        '[id]': 'id',\n        '[attr.id]': 'id',\n        '[class.mc-disabled]': 'disabled',\n        '[class.mc-toggle_off]': '!checked'\n    },\n    animations: [\n        trigger('switch', [\n            state('true' , style({ left: '50%' })),\n            state('false', style({ left: '1px' })),\n            transition('true <=> false', animate('150ms'))\n        ])\n    ]\n})\nexport class McToggleComponent extends _McToggleMixinBase\n    implements ControlValueAccessor, CanColor, CanDisable, HasTabIndex {\n\n    @ViewChild('input') _inputElement: ElementRef;\n\n    @Input() labelPosition: ToggleLabelPositionType = 'right';\n\n    @Input('aria-label') ariaLabel: string = '';\n    @Input('aria-labelledby') ariaLabelledby: string | null = null;\n\n    private _uniqueId: string = `mc-toggle-${++nextUniqueId}`;\n\n    // tslint:disable:member-ordering\n    @Input() id: string = this._uniqueId;\n\n    get inputId(): string {\n        return `${this.id || this._uniqueId}-input`;\n    }\n\n    @Input() name: string | null = null;\n\n    @Input() value: string;\n\n    private _disabled: boolean = false;\n\n    @Input()\n    get disabled() {\n        return this._disabled;\n    }\n\n    set disabled(value: any) {\n        if (value !== this._disabled) {\n            this._disabled = value;\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n\n    private _checked: boolean = false;\n\n    get checked() {\n        return this._checked;\n    }\n\n    @Input()\n    set checked(value: boolean) {\n        if (value !== this._checked) {\n            this._checked = value;\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n\n    @Output() readonly change: EventEmitter<McToggleChange> =\n        new EventEmitter<McToggleChange>();\n\n    constructor(public _elementRef: ElementRef,\n                private _focusMonitor: FocusMonitor,\n                private _changeDetectorRef: ChangeDetectorRef,\n                @Attribute('tabindex') tabIndex: string\n    ) {\n        super(_elementRef);\n\n        this.tabIndex = parseInt(tabIndex) || 0;\n\n        this._focusMonitor.monitor(this._elementRef.nativeElement, true);\n    }\n\n    ngOnDestroy() {\n        this._focusMonitor.stopMonitoring(this._elementRef.nativeElement);\n    }\n\n    focus(): void {\n        this._focusMonitor.focusVia(this._inputElement.nativeElement, 'keyboard');\n    }\n\n    _getAriaChecked(): boolean {\n        return this.checked;\n    }\n\n    _onInteractionEvent(event: Event) {\n        event.stopPropagation();\n    }\n\n    _onLabelTextChange() {\n        this._changeDetectorRef.markForCheck();\n    }\n\n    _onInputClick(event: MouseEvent) {\n        event.stopPropagation();\n        this._updateModelValue();\n        this._emitChangeEvent();\n    }\n\n    writeValue(value: any) {\n        this.checked = !!value;\n    }\n\n    registerOnChange(fn: any) {\n        this._onChangeCallback = fn;\n    }\n\n    registerOnTouched(fn: any) {\n        this._onTouchedCallback = fn;\n    }\n\n    setDisabledState(isDisabled: boolean) {\n        this.disabled = isDisabled;\n    }\n\n    // tslint:disable-next-line:no-empty\n    private _onTouchedCallback = () => {};\n\n    // tslint:disable-next-line:no-empty\n    private _onChangeCallback = (_: any) => {};\n\n    private _updateModelValue() {\n        this._checked = !this.checked;\n        this._onChangeCallback(this.checked);\n        this._onTouchedCallback();\n    }\n\n    private _emitChangeEvent() {\n        const event = new McToggleChange();\n        event.source = this;\n        event.checked = this.checked;\n\n        this._onChangeCallback(this.checked);\n        this.change.emit(event);\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { A11yModule } from '@ptsecurity/cdk/a11y';\nimport { McCommonModule } from '@ptsecurity/mosaic/core';\n\nimport { McToggleComponent } from './toggle.component';\n\n\n@NgModule({\n    imports: [CommonModule, A11yModule, McCommonModule],\n    exports: [McToggleComponent],\n    declarations: [McToggleComponent]\n})\nexport class McToggleModule {\n}\n","import {\n    Directive, DoCheck, ElementRef, Inject,\n    Input, OnChanges, OnDestroy, Optional,\n    Self, InjectionToken, NgZone, OnInit\n} from '@angular/core';\nimport { FormGroupDirective, NgControl, NgForm } from '@angular/forms';\nimport { coerceBooleanProperty } from '@ptsecurity/cdk/coercion';\nimport {\n    CanUpdateErrorState,\n    CanUpdateErrorStateCtor,\n    ErrorStateMatcher,\n    mixinErrorState\n} from '@ptsecurity/mosaic/core';\nimport { McFormFieldControl } from '@ptsecurity/mosaic/form-field';\nimport { fromEvent, Subscription, Subject } from 'rxjs';\nimport { distinctUntilChanged, map } from 'rxjs/operators';\n\n\nexport const MC_TEXTAREA_VALUE_ACCESSOR =\n    new InjectionToken<{ value: any }>('MC_TEXTAREA_VALUE_ACCESSOR');\n\nlet nextUniqueId = 0;\n\nconst ROW_SEPARATOR = '\\n';\n\nexport class McTextareaBase {\n    constructor(public _defaultErrorStateMatcher: ErrorStateMatcher,\n                public _parentForm: NgForm,\n                public _parentFormGroup: FormGroupDirective,\n                public ngControl: NgControl) {\n    }\n}\n\n// tslint:disable-next-line:naming-convention\nexport const McTextareaMixinBase: CanUpdateErrorStateCtor & typeof McTextareaBase = mixinErrorState(McTextareaBase);\n\n@Directive({\n    selector: 'textarea[mcTextarea]',\n    exportAs: 'mcTextarea',\n    host: {\n        class: 'mc-textarea',\n        '[class.mc-textarea-resizable]': '!canGrow',\n        '[attr.id]': 'id',\n        '[attr.placeholder]': 'placeholder',\n        '[disabled]': 'disabled',\n        '[required]': 'required',\n        '(blur)': 'focusChanged(false)',\n        '(focus)': 'focusChanged(true)'\n    },\n    providers: [{ provide: McFormFieldControl, useExisting: McTextarea }]\n})\nexport class McTextarea extends McTextareaMixinBase implements McFormFieldControl<any>, OnInit, OnChanges,\n    OnDestroy, DoCheck, CanUpdateErrorState {\n\n    @Input() canGrow: boolean = true;\n\n    /** An object used to control when error messages are shown. */\n    @Input() errorStateMatcher: ErrorStateMatcher;\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    focused: boolean = false;\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    readonly stateChanges: Subject<void> = new Subject<void>();\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    controlType: string = 'mc-textarea';\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    @Input()\n    get disabled(): boolean {\n        if (this.ngControl && this.ngControl.disabled !== null) {\n            return this.ngControl.disabled;\n        }\n\n        return this._disabled;\n    }\n\n    set disabled(value: boolean) {\n        this._disabled = coerceBooleanProperty(value);\n\n        if (this.focused) {\n            this.focused = false;\n            this.stateChanges.next();\n        }\n    }\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    @Input()\n    get id(): string {\n        return this._id;\n    }\n\n    set id(value: string) {\n        this._id = value || this.uid;\n    }\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    @Input() placeholder: string;\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    @Input()\n    get required(): boolean {\n        return this._required;\n    }\n\n    set required(value: boolean) {\n        this._required = coerceBooleanProperty(value);\n    }\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    @Input()\n    get value(): string {\n        return this.valueAccessor.value;\n    }\n\n    set value(value: string) {\n        if (value !== this.value) {\n            this.valueAccessor.value = value;\n            this.stateChanges.next();\n        }\n    }\n\n    protected uid = `mc-textsrea-${nextUniqueId++}`;\n    protected previousNativeValue: any;\n    protected _disabled = false;\n    protected _id: string;\n    protected _required = false;\n\n    private valueAccessor: { value: any };\n    private growSubscription: Subscription;\n\n    private lineHeight: number = 0;\n    private freeRowsHeight: number = 0;\n    private minHeight: number = 0;\n\n    constructor(protected elementRef: ElementRef,\n                @Optional() @Self() public ngControl: NgControl,\n                @Optional() _parentForm: NgForm,\n                @Optional() _parentFormGroup: FormGroupDirective,\n                _defaultErrorStateMatcher: ErrorStateMatcher,\n                @Optional() @Self() @Inject(MC_TEXTAREA_VALUE_ACCESSOR) inputValueAccessor: any,\n                private ngZone: NgZone) {\n        super(_defaultErrorStateMatcher, _parentForm, _parentFormGroup, ngControl);\n        // If no input value accessor was explicitly specified, use the element as the textarea value\n        // accessor.\n        this.valueAccessor = inputValueAccessor || this.elementRef.nativeElement;\n\n        this.previousNativeValue = this.value;\n\n        // Force setter to be called in case id was not specified.\n        this.id = this.id;\n\n        const growObserver = fromEvent(elementRef.nativeElement, 'input')\n            /*.pipe(\n                map((event: any) => this.getGrowHeight()),\n                // map((event: any) => event.target.scrollHeight),\n                distinctUntilChanged()\n            )*/;\n        this.growSubscription = growObserver.subscribe(this.grow.bind(this));\n    }\n\n    ngOnInit() {\n        setTimeout(() => this.grow(), 0);\n        this.lineHeight = parseInt(getComputedStyle(this.elementRef.nativeElement).lineHeight!, 10);\n\n        const paddingTop = parseInt(getComputedStyle(this.elementRef.nativeElement).paddingTop!, 10);\n        const paddingBottom = parseInt(getComputedStyle(this.elementRef.nativeElement).paddingBottom!, 10);\n\n        // tslint:disable-next-line:no-magic-numbers\n        this.minHeight = this.lineHeight * 2 + paddingTop + paddingBottom;\n        this.freeRowsHeight = this.lineHeight;\n    }\n\n    ngOnChanges() {\n        this.stateChanges.next();\n    }\n\n    ngOnDestroy() {\n        this.stateChanges.complete();\n        this.growSubscription.unsubscribe();\n    }\n\n    ngDoCheck() {\n        if (this.ngControl) {\n            // We need to re-evaluate this on every change detection cycle, because there are some\n            // error triggers that we can't subscribe to (e.g. parent form submissions). This means\n            // that whatever logic is in here has to be super lean or we risk destroying the performance.\n            this.updateErrorState();\n        }\n\n        // We need to dirty-check the native element's value, because there are some cases where\n        // we won't be notified when it changes (e.g. the consumer isn't using forms or they're\n        // updating the value using `emitEvent: false`).\n        this.dirtyCheckNativeValue();\n    }\n\n    /** Grow textarea height to avoid vertical scroll  */\n    grow() {\n        if (!this.canGrow) {\n            return;\n        }\n\n        this.ngZone.runOutsideAngular(() => {\n            const textarea = this.elementRef.nativeElement;\n\n            const outerHeight = parseInt(window.getComputedStyle(textarea).height!, 10);\n            const diff = outerHeight - textarea.clientHeight;\n\n            textarea.style.height = 0; // this line is important to height recalculation\n\n            const height = Math.max(this.minHeight, textarea.scrollHeight + diff + this.freeRowsHeight);\n            textarea.style.height = `${height}px`;\n        });\n    }\n\n    /** Focuses the textarea. */\n    focus(): void {\n        this.elementRef.nativeElement.focus();\n    }\n\n    /** Callback for the cases where the focused state of the textarea changes. */\n    focusChanged(isFocused: boolean) {\n        if (isFocused !== this.focused) {\n            this.focused = isFocused;\n            this.stateChanges.next();\n        }\n    }\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    get empty(): boolean {\n        return !this.elementRef.nativeElement.value && !this.isBadInput();\n    }\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    onContainerClick() {\n        this.focus();\n    }\n\n    /** Does some manual dirty checking on the native textarea `value` property. */\n    protected dirtyCheckNativeValue() {\n        const newValue = this.value;\n\n        if (this.previousNativeValue !== newValue) {\n            this.previousNativeValue = newValue;\n            this.stateChanges.next();\n        }\n    }\n\n    /** Checks whether the textarea is invalid based on the native validation. */\n    protected isBadInput(): boolean {\n        // The `validity` property won't be present on platform-server.\n        const validity = (this.elementRef.nativeElement as HTMLTextAreaElement).validity;\n\n        return validity && validity.badInput;\n    }\n\n    private getGrowHeight(): number {\n        const textarea = this.elementRef.nativeElement;\n        const outerHeight = parseInt(window.getComputedStyle(textarea).height!.toString(), 10);\n        const diff = outerHeight - textarea.clientHeight;\n\n        return Math.max(this.minHeight, textarea.scrollHeight + diff);\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { A11yModule } from '@ptsecurity/cdk/a11y';\nimport { McCommonModule } from '@ptsecurity/mosaic/core';\n\nimport { McTextarea } from './textarea.component';\n\n\n@NgModule({\n    imports: [CommonModule, A11yModule, McCommonModule, FormsModule],\n    exports: [McTextarea],\n    declarations: [McTextarea]\n})\nexport class McTextareaModule {\n}\n","import {\n    Directive,\n    DoCheck,\n    ElementRef,\n    forwardRef,\n    Inject,\n    Input,\n    OnChanges,\n    OnDestroy,\n    Optional,\n    Renderer2,\n    Self\n} from '@angular/core';\nimport {\n    ControlValueAccessor,\n    FormControl,\n    FormGroupDirective,\n    NG_VALIDATORS,\n    NgControl,\n    NgForm,\n    ValidationErrors,\n    ValidatorFn,\n    Validators\n} from '@angular/forms';\nimport { coerceBooleanProperty } from '@ptsecurity/cdk/coercion';\nimport {\n    CanUpdateErrorState,\n    CanUpdateErrorStateCtor,\n    ErrorStateMatcher,\n    mixinErrorState\n} from '@ptsecurity/mosaic/core';\nimport { McFormFieldControl } from '@ptsecurity/mosaic/form-field';\nimport { MC_INPUT_VALUE_ACCESSOR } from '@ptsecurity/mosaic/input';\nimport {\n    noop,\n    Subject\n} from 'rxjs';\n\nimport {\n    ARROW_DOWN_KEYCODE,\n    ARROW_LEFT_KEYCODE,\n    ARROW_RIGHT_KEYCODE,\n    ARROW_UP_KEYCODE,\n    DEFAULT_TIME_FORMAT,\n    HOURS_PER_DAY,\n    HOURS_MINUTES_REGEXP,\n    HOURS_MINUTES_SECONDS_REGEXP,\n    HOURS_ONLY_REGEXP,\n    MINUTES_PER_HOUR,\n    SECONDS_PER_MINUTE,\n    TIMEFORMAT_PLACEHOLDERS,\n    TimeFormats,\n    TimeParts\n} from './timepicker.constants';\n\n\nlet uniqueComponentIdSuffix: number = 0;\n\nconst formValidators: WeakMap<FormControl, ValidatorFn | null> = new WeakMap();\nconst formValidatorOnChangeRegistrators: WeakMap<FormControl, () => void> = new WeakMap();\nconst validatorOnChange = (c: FormControl) => {\n    const validatorOnChangeHandler = formValidatorOnChangeRegistrators.get(c);\n\n    if (validatorOnChangeHandler !== undefined) { validatorOnChangeHandler(); }\n};\n\nexport class McTimepickerBase {\n    constructor(\n        // tslint:disable-next-line naming-convention\n        public _defaultErrorStateMatcher: ErrorStateMatcher,\n        // tslint:disable-next-line naming-convention\n        public _parentForm: NgForm,\n        // tslint:disable-next-line naming-convention\n        public _parentFormGroup: FormGroupDirective,\n        public ngControl: NgControl) { }\n}\n\n// tslint:disable-next-line naming-convention\nexport const McTimepickerMixinBase:\n    CanUpdateErrorStateCtor &\n    typeof McTimepickerBase = mixinErrorState(McTimepickerBase);\n\n@Directive({\n    selector: 'input[mcTimepicker]',\n    exportAs: 'mcTimepickerInput',\n    host: {\n        class: 'mc-timepicker mc-input',\n        // Native input properties that are overwritten by Angular inputs need to be synced with\n        // the native input element. Otherwise property bindings for those don't work.\n        '[attr.id]': 'id',\n        '[attr.placeholder]': 'placeholder',\n        '[disabled]': 'disabled',\n        '[required]': 'required',\n        '[attr.time-format]': 'timeFormat',\n        '[attr.min-time]': 'minTime',\n        '[attr.max-time]': 'maxTime',\n        '[attr.value]': 'value',\n        '(blur)': 'onBlur()',\n        '(focus)': 'focusChanged(true)',\n        '(input)': 'onInput()',\n        '(paste)': 'onPaste($event)',\n        '(keydown)': 'onKeyDown($event)'\n    },\n    providers: [\n        {\n            provide: NG_VALIDATORS,\n            useValue: {\n                validate(c: FormControl) {\n                    // TODO This is `workaround` to bind singleton-like Validator implementation to\n                    // context of each validated component. This MUST be realized in proper way!\n                    if (this.__validatorOnChangeHandler !== undefined) {\n                        formValidatorOnChangeRegistrators.set(c, this.__validatorOnChangeHandler);\n                        this.__validatorOnChangeHandler = undefined;\n                    }\n                    const validator = formValidators.get(c);\n\n                    return validator ? validator(c) : null;\n                },\n                registerOnValidatorChange(fn: () => void): void {\n                    this.__validatorOnChangeHandler = fn;\n                }\n            },\n            multi: true\n        },\n        {\n            provide: McFormFieldControl,\n            useExisting: forwardRef(() => McTimepicker)\n        }\n    ]\n\n})\nexport class McTimepicker extends McTimepickerMixinBase\n    implements McFormFieldControl<any>,\n        OnChanges,\n        OnDestroy,\n        DoCheck,\n        CanUpdateErrorState,\n        ControlValueAccessor {\n\n    /** An object used to control when error messages are shown. */\n    @Input() errorStateMatcher: ErrorStateMatcher;\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    focused: boolean = false;\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    readonly stateChanges: Subject<void> = new Subject<void>();\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    controlType: string = 'mc-timepicker';\n\n    @Input()\n    get disabled(): boolean {\n        if (this.ngControl && this.ngControl.disabled !== null) { return this.ngControl.disabled; }\n\n        return this._disabled;\n    }\n\n    set disabled(value: boolean) {\n        this._disabled = coerceBooleanProperty(value);\n\n        // Browsers may not fire the blur event if the input is disabled too quickly.\n        // Reset from here to ensure that the element doesn't become stuck.\n        if (this.focused) {\n            this.focused = false;\n        }\n\n        this.stateChanges.next();\n    }\n\n    @Input()\n    get id(): string { return this._id; }\n\n    set id(value: string) { this._id = value || this.uid; }\n\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    @Input() placeholder: string;\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    @Input()\n    get required(): boolean { return this._required; }\n\n    set required(value: boolean) { this._required = coerceBooleanProperty(value); }\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    @Input()\n    get value(): string { return this.inputValueAccessor.value; }\n\n    set value(value: string) {\n        if (value !== this.value) {\n            this.inputValueAccessor.value = value;\n            this.applyInputChanges();\n        }\n    }\n\n    @Input('time-format')\n    get timeFormat(): TimeFormats { return this._timeFormat; }\n\n    set timeFormat(formatValue: TimeFormats) {\n        this._timeFormat = Object\n            .keys(TimeFormats)\n            .map((timeFormatKey) => TimeFormats[timeFormatKey])\n            .indexOf(formatValue) > -1 ? formatValue : DEFAULT_TIME_FORMAT;\n\n        validatorOnChange(<FormControl> this.ngControl.control);\n        this.placeholder = TIMEFORMAT_PLACEHOLDERS[this._timeFormat];\n    }\n\n    @Input('min-time')\n    get minTime(): string | null { return this._minTime; }\n\n    set minTime(minValue: string | null) {\n        this._minTime = minValue;\n        this.minDateTime = minValue !== null ? this.getDateFromTimeString(minValue) : undefined;\n        validatorOnChange(<FormControl> this.ngControl.control);\n    }\n\n    @Input('max-time')\n    get maxTime(): string | null { return this._maxTime; }\n\n    set maxTime(maxValue: string | null) {\n        this._maxTime = maxValue;\n        this.maxDateTime = maxValue !== null ? this.getDateFromTimeString(maxValue) : undefined;\n        validatorOnChange(<FormControl> this.ngControl.control);\n    }\n\n    private _id: string;\n    private readonly uid = `mc-timepicker-${uniqueComponentIdSuffix++}`;\n    private _disabled: boolean;\n    private _required: boolean;\n    private previousNativeValue: any;\n    private readonly inputValueAccessor: { value: any };\n    private onChange: (value: any) => void;\n    private onTouched: () => void;\n    private _timeFormat: TimeFormats;\n    private _minTime: string | null = null;\n    private minDateTime: Date | undefined;\n    private _maxTime: string | null = null;\n    private maxDateTime: Date | undefined;\n    private currentDateTimeInput: Date | undefined;\n\n    constructor(private readonly elementRef: ElementRef,\n                @Optional() @Self() public ngControl: NgControl,\n                // tslint:disable-next-line naming-convention\n                @Optional() _parentForm: NgForm,\n                // tslint:disable-next-line naming-convention\n                @Optional() _parentFormGroup: FormGroupDirective,\n                // tslint:disable-next-line naming-convention\n                _defaultErrorStateMatcher: ErrorStateMatcher,\n                @Optional() @Self() @Inject(MC_INPUT_VALUE_ACCESSOR) inputValueAccessor: any,\n                private readonly renderer: Renderer2) {\n        super(_defaultErrorStateMatcher, _parentForm, _parentFormGroup, ngControl);\n\n        // If no input value accessor was explicitly specified, use the element as the input value\n        // accessor.\n        this.inputValueAccessor = inputValueAccessor || this.elementRef.nativeElement;\n\n        this.previousNativeValue = this.value;\n        this.onChange = noop;\n\n        // Force setter to be called in case id was not specified.\n        this.id = this.id;\n\n        this.placeholder = TIMEFORMAT_PLACEHOLDERS[DEFAULT_TIME_FORMAT];\n\n        // Instead of NG_VALUE_ACCESSOR (https://github.com/angular/material2/issues/8158#issuecomment-344618103)\n        if (this.ngControl) { this.ngControl.valueAccessor = this; }\n\n        // Substitute initial empty validator with validator linked to directive object instance (workaround)\n\n        formValidators.set(\n            <FormControl> this.ngControl.control,\n            Validators.compose([\n                () => this.parseValidator(),\n                () => this.minTimeValidator(),\n                () => this.maxTimeValidator()\n            ])\n        );\n    }\n\n    ngOnChanges(): void {\n        this.stateChanges.next();\n    }\n\n    ngOnDestroy(): void {\n        this.stateChanges.complete();\n    }\n\n    ngDoCheck(): void {\n        if (this.ngControl) {\n            // We need to re-evaluate this on every change detection cycle, because there are some\n            // error triggers that we can't subscribe to (e.g. parent form submissions). This means\n            // that whatever logic is in here has to be super lean or we risk destroying the performance.\n            this.updateErrorState();\n        }\n\n        // We need to dirty-check the native element's value, because there are some cases where\n        // we won't be notified when it changes (e.g. the consumer isn't using forms or they're\n        // updating the value using `emitEvent: false`).\n        this.dirtyCheckNativeValue();\n    }\n\n    focus(): void {\n        this.elementRef.nativeElement.focus();\n    }\n\n    focusChanged(isFocused: boolean): void {\n        if (isFocused !== this.focused) {\n            this.focused = isFocused;\n            this.onTouched();\n            this.stateChanges.next();\n        }\n    }\n\n    onBlur() {\n        this.applyInputChanges();\n        this.focusChanged(false);\n    }\n\n    onPaste($event) {\n        $event.preventDefault();\n        const clipboardUserInput: string = $event.clipboardData.getData('text');\n\n        if (this.getDateFromTimeString(clipboardUserInput) === undefined) { return; }\n\n        this.elementRef.nativeElement.value = clipboardUserInput;\n        this.onInput();\n    }\n\n    onInput() {\n        const initialCursorStart: number = this.elementRef.nativeElement.selectionStart;\n        const initialCursorEnd: number = this.elementRef.nativeElement.selectionEnd;\n        let isAutocompleteTriggered: boolean = false;\n\n        const {\n            hoursOnly,\n            hoursAndMinutes,\n            hoursAndMinutesAndSeconds\n        } = this.getParsedTimeParts(this.elementRef.nativeElement.value);\n\n        // tslint:disable no-magic-numbers\n        if (hoursOnly &&\n            hoursOnly[1] &&\n            hoursOnly[1].length === 2) {\n            isAutocompleteTriggered = true;\n        } else if (hoursAndMinutes &&\n            hoursAndMinutes[1].length === 1 &&\n            hoursAndMinutes[2] &&\n            hoursAndMinutes[2].length === 2) {\n            isAutocompleteTriggered = true;\n        } else if (hoursAndMinutesAndSeconds &&\n            hoursAndMinutesAndSeconds[1].length === 2 &&\n            hoursAndMinutesAndSeconds[2].length === 2 &&\n            hoursAndMinutesAndSeconds[3] &&\n            hoursAndMinutesAndSeconds[3].length === 2) {\n            isAutocompleteTriggered = true;\n        }\n        // tslint:enable no-magic-numbers\n\n        this.applyInputChanges({ doTimestringReformat: isAutocompleteTriggered });\n\n        this.elementRef.nativeElement.selectionStart = initialCursorStart;\n        this.elementRef.nativeElement.selectionEnd = initialCursorEnd;\n\n        if (isAutocompleteTriggered && this.ngControl.errors === null) {\n            this.createSelectionOfTimeComponentInInput(initialCursorStart + 1);\n        }\n    }\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    get empty(): boolean {\n        return !this.elementRef.nativeElement.value && !this.isBadInput();\n    }\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    onContainerClick() {\n        this.focus();\n    }\n\n    writeValue(value: Date | null): void {\n        if (value !== null) {\n            this.renderer.setProperty(this.elementRef.nativeElement,\n                'value',\n                this.getTimeStringFromDate(value, this.timeFormat)\n            );\n        }\n        this.onChange(value || null);\n        this.applyInputChanges();\n    }\n\n    onKeyDown(event: KeyboardEvent): void {\n\n        const keyCode: string = this.getKeyCode(event);\n\n        if (keyCode === ARROW_UP_KEYCODE || keyCode === ARROW_DOWN_KEYCODE) {\n            this.upDownTimeByArrowKeys(event);\n        }\n        if (keyCode === ARROW_LEFT_KEYCODE || keyCode === ARROW_RIGHT_KEYCODE) {\n            this.switchSelectionBetweenTimeparts(event);\n        }\n    }\n\n    registerOnChange(fn: (value: Date) => void): void {\n        this.onChange = fn;\n    }\n\n    registerOnTouched(fn: () => void): void {\n        this.onTouched = fn;\n    }\n\n    /** Does some manual dirty checking on the native input `value` property. */\n    private dirtyCheckNativeValue() {\n        const newValue = this.value;\n\n        if (this.previousNativeValue !== newValue) {\n            this.previousNativeValue = newValue;\n            this.stateChanges.next();\n        }\n    }\n\n    /** Checks whether the input is invalid based on the native validation. */\n    private isBadInput(): boolean {\n        const validity = (<HTMLInputElement> this.elementRef.nativeElement).validity;\n\n        return validity && validity.badInput;\n    }\n\n    private applyInputChanges(applyParams: {\n        changedTime?: Date;\n        doTimestringReformat?: boolean;\n    } = {}): void {\n        const { changedTime, doTimestringReformat = true } = applyParams;\n        const timeToApply: Date | undefined = changedTime ||\n            this.getDateFromTimeString(this.elementRef.nativeElement.value);\n        this.currentDateTimeInput = timeToApply;\n\n        if (doTimestringReformat && timeToApply !== undefined) {\n            const selectionStart: number = this.elementRef.nativeElement.selectionStart;\n            const selectionEnd: number = this.elementRef.nativeElement.selectionEnd;\n            this.renderer.setProperty(\n                this.elementRef.nativeElement,\n                'value',\n                this.getTimeStringFromDate(timeToApply, this.timeFormat));\n            this.elementRef.nativeElement.selectionStart = selectionStart;\n            this.elementRef.nativeElement.selectionEnd = selectionEnd;\n        }\n\n        (<FormControl> this.ngControl.control).updateValueAndValidity();\n        const result = this.ngControl.errors === null && timeToApply !== undefined ? timeToApply : null;\n        this.onChange(result);\n        this.stateChanges.next();\n    }\n\n    private upDownTimeByArrowKeys(event: KeyboardEvent): void {\n        event.preventDefault();\n\n        let changedTime: Date | undefined = this.currentDateTimeInput;\n        if (changedTime !== undefined) {\n            const cursorPos = this.elementRef.nativeElement.selectionStart;\n\n            const modifiedTimePart = this.getTimeEditMetrics(cursorPos)\n                .modifiedTimePart;\n            const keyCode: string = this.getKeyCode(event);\n            if (keyCode === ARROW_UP_KEYCODE) { changedTime = this.incrementTime(changedTime, modifiedTimePart); }\n            if (keyCode === ARROW_DOWN_KEYCODE) { changedTime = this.decrementTime(changedTime, modifiedTimePart); }\n            this.applyInputChanges({ changedTime });\n            this.createSelectionOfTimeComponentInInput(cursorPos);\n        }\n    }\n\n    private switchSelectionBetweenTimeparts(event: KeyboardEvent): void {\n        const changedTime: Date | undefined = this.currentDateTimeInput;\n        const keyCode: string = this.getKeyCode(event);\n\n        if (changedTime !== undefined) {\n            let cursorPos: number = this.elementRef.nativeElement.selectionStart;\n            if (keyCode === ARROW_LEFT_KEYCODE) {\n                cursorPos = this.getCursorPositionOfPrevTimePartStart(cursorPos, this.elementRef.nativeElement.value);\n            } else if (keyCode === ARROW_RIGHT_KEYCODE) {\n                cursorPos = this.getCursorPositionOfNextTimePartStart(cursorPos, this.elementRef.nativeElement.value);\n            }\n            this.createSelectionOfTimeComponentInInput(cursorPos);\n        }\n    }\n\n    /**\n     * @description Microsoft EDGE doesn't support KeyboaedEvent.code thus we need this helper\n     */\n    private getKeyCode(event: KeyboardEvent): string {\n        return event.code || event.key;\n    }\n\n    private createSelectionOfTimeComponentInInput(cursorPos: number): void {\n        setTimeout(() => {\n            const newEditParams = this.getTimeEditMetrics(cursorPos);\n            this.elementRef.nativeElement.selectionStart = newEditParams.cursorStartPosition;\n            this.elementRef.nativeElement.selectionEnd = newEditParams.cursorEndPosition;\n        });\n    }\n\n    private incrementTime(dateVal: Date,\n                          whatToIncrement: TimeParts = TimeParts.seconds): Date {\n        let { hours, minutes, seconds } = this.getTimeDigitsFromDate(dateVal);\n\n        switch (whatToIncrement) {\n            case TimeParts.hours:\n                hours++;\n                break;\n            case TimeParts.minutes:\n                minutes++;\n                break;\n            case TimeParts.seconds:\n                seconds++;\n                break;\n            default:\n        }\n\n        if (seconds > SECONDS_PER_MINUTE) { seconds = 0; }\n\n        if (minutes > MINUTES_PER_HOUR) { minutes = 0; }\n\n        if (hours > HOURS_PER_DAY) { hours = 0; }\n\n        return <Date> this.getDateFromTimeDigits(hours, minutes, seconds);\n    }\n\n    /**\n     * @description Decrement part of time\n     */\n    private decrementTime(dateVal: Date,\n                          whatToDecrement: TimeParts = TimeParts.seconds): Date {\n        let { hours, minutes, seconds } = this.getTimeDigitsFromDate(dateVal);\n\n        switch (whatToDecrement) {\n            case TimeParts.hours:\n                hours--;\n                break;\n            case TimeParts.minutes:\n                minutes--;\n                break;\n            case TimeParts.seconds:\n                seconds--;\n                break;\n            default:\n        }\n\n        if (seconds < 0) { seconds = SECONDS_PER_MINUTE; }\n\n        if (minutes < 0) { minutes = MINUTES_PER_HOUR; }\n\n        if (hours < 0) { hours = HOURS_PER_DAY; }\n\n        return <Date> this.getDateFromTimeDigits(hours, minutes, seconds);\n    }\n\n    private getCursorPositionOfPrevTimePartStart(cursorPos: number, timeString: string): number {\n        return cursorPos === 0 ? timeString.length : cursorPos - 1;\n    }\n\n    private getCursorPositionOfNextTimePartStart(cursorPos: number,\n                                                 timeString: string,\n                                                 timeDevider: string = ':'): number {\n        const nextDividerPos: number = timeString.indexOf(timeDevider, cursorPos);\n\n        return nextDividerPos !== undefined ? nextDividerPos + 1 : 0;\n    }\n\n    /**\n     * @description Get params for arrow-keys (up/down) time valie edit.\n     * @param cursorPosition Current cursor position in timeString\n     */\n    private getTimeEditMetrics(cursorPosition: number): {\n        modifiedTimePart: TimeParts;\n        cursorStartPosition: number;\n        cursorEndPosition: number;\n    } {\n        const timeString: string = this.elementRef.nativeElement.value;\n        let modifiedTimePart: TimeParts;\n        let cursorStartPosition: number;\n        let cursorEndPosition: number;\n        const hoursIndex = 0;\n        const minutesIndex = timeString.indexOf(':', hoursIndex + 1);\n        const secondsIndex = minutesIndex !== -1 ? timeString.indexOf(':', minutesIndex + 1) : -1;\n\n        if (secondsIndex !== -1 && cursorPosition > secondsIndex) {\n            modifiedTimePart = TimeParts.seconds;\n            cursorStartPosition = secondsIndex + 1;\n            cursorEndPosition = timeString.length;\n        } else if (minutesIndex !== -1 && cursorPosition > minutesIndex) {\n            modifiedTimePart = TimeParts.minutes;\n            cursorStartPosition = minutesIndex + 1;\n            cursorEndPosition = secondsIndex > -1 ? secondsIndex : timeString.length;\n        } else {\n            modifiedTimePart = TimeParts.hours;\n            cursorStartPosition = hoursIndex;\n            cursorEndPosition = minutesIndex !== -1 ? minutesIndex : timeString.length;\n        }\n\n        return {\n            modifiedTimePart,\n            cursorStartPosition,\n            cursorEndPosition\n        };\n    }\n\n    /**\n     * @description Create time string for displaying inside input element of UI\n     */\n    private getTimeStringFromDate(tempVal: Date,\n                                  timeFormat: TimeFormats = DEFAULT_TIME_FORMAT): string {\n        const hours: string = this.getNumberWithLeadingZero(tempVal.getHours());\n        const minutes: string = this.getNumberWithLeadingZero(tempVal.getMinutes());\n        const seconds: string = this.getNumberWithLeadingZero(tempVal.getSeconds());\n\n        const formattedTimeGenerators = {\n            [TimeFormats.HHmm]: () => `${hours}:${minutes}`,\n            [TimeFormats.HHmmss]: () => `${hours}:${minutes}:${seconds}`\n        };\n\n        return formattedTimeGenerators[timeFormat]();\n    }\n\n    private getParsedTimeParts(timeString: string): {\n        hoursOnly: any;\n        hoursAndMinutes: any;\n        hoursAndMinutesAndSeconds: any;\n    } {\n        const hoursAndMinutesAndSeconds = timeString.match(HOURS_MINUTES_SECONDS_REGEXP);\n        const hoursAndMinutes = timeString.match(HOURS_MINUTES_REGEXP);\n        const hoursOnly = timeString.match(HOURS_ONLY_REGEXP);\n\n        return {\n            hoursOnly,\n            hoursAndMinutes,\n            hoursAndMinutesAndSeconds\n        };\n    }\n\n    /**\n     * @description Create Date object from separate parts of time\n     */\n    private getDateFromTimeDigits(hours: number, minutes: number, seconds: number = 0): Date | undefined {\n        return this.getDateFromTimeString(`${hours}:${minutes}:${seconds}`);\n    }\n\n    private getDateFromTimeString(timeString: string | undefined): Date | undefined {\n        // TODO Use moment-js\n        if (timeString === undefined) { return; }\n\n        const {\n            hoursOnly,\n            hoursAndMinutes,\n            hoursAndMinutesAndSeconds\n        } = this.getParsedTimeParts(timeString);\n\n        if (timeString.trim().length === 0 ||\n            hoursOnly === null && hoursAndMinutes === null && hoursAndMinutesAndSeconds === null) {\n            return;\n        }\n\n        // tslint:disable no-magic-numbers\n        let hours: number = 0;\n        let minutes: number = 0;\n        let seconds: number = 0;\n\n        if (hoursOnly) {\n            hours = Number(hoursOnly[1]);\n        } else if (hoursAndMinutes) {\n            hours = Number(hoursAndMinutes[1]);\n            minutes = Number(hoursAndMinutes[2]);\n        } else if (hoursAndMinutesAndSeconds) {\n            hours = Number(hoursAndMinutesAndSeconds[1]);\n            minutes = Number(hoursAndMinutesAndSeconds[2]);\n            seconds = Number(hoursAndMinutesAndSeconds[3]);\n        }\n        // const timestamp: number = Date.parse(fullDateString);\n        const resultDate: Date = new Date(1970, 0, 1, hours, minutes, seconds);\n        // tslint:enable no-magic-numbers\n\n        return isNaN(resultDate.getTime()) ? undefined : resultDate;\n    }\n\n    private getNumberWithLeadingZero(digit: number): string {\n        const MAX_DIGIT_WITH_LEADING_ZERO: number = 9;\n\n        return digit > MAX_DIGIT_WITH_LEADING_ZERO ? `${digit}` : `0${digit}`;\n    }\n\n    private getTimeDigitsFromDate(dateVal: Date): { hours: number; minutes: number; seconds: number } {\n        return {\n            hours: dateVal.getHours(),\n            minutes: dateVal.getMinutes(),\n            seconds: dateVal.getSeconds()\n        };\n    }\n\n    private parseValidator(): ValidationErrors | null {\n        return this.currentDateTimeInput === undefined ?\n            { mcTimepickerParse: { text: this.elementRef.nativeElement.value } } :\n            null;\n    }\n\n    private minTimeValidator(): ValidationErrors | null {\n\n        if (this.currentDateTimeInput !== undefined &&\n            this.minDateTime !== undefined &&\n            this.isTimeLowerThenMin(this.currentDateTimeInput)) {\n            return { mcTimepickerLowerThenMintime: { text: this.elementRef.nativeElement.value } };\n        }\n\n        return null;\n    }\n\n    private maxTimeValidator(): ValidationErrors | null {\n        if (this.currentDateTimeInput !== undefined &&\n            this.maxDateTime !== undefined &&\n            this.isTimeGreaterThenMax(this.currentDateTimeInput)) {\n            return { mcTimepickerHigherThenMaxtime: { text: this.elementRef.nativeElement.value } };\n        }\n\n        return null;\n    }\n\n    private isTimeLowerThenMin(timeToCompare: Date): boolean {\n        return timeToCompare.getTime() - (<Date> this.minDateTime).getTime() < 0;\n    }\n\n    private isTimeGreaterThenMax(timeToCompare: Date): boolean {\n        return timeToCompare.getTime() - (<Date> this.maxDateTime).getTime() >= 0;\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\n\nimport { A11yModule } from '@ptsecurity/cdk/a11y';\nimport { PlatformModule } from '@ptsecurity/cdk/platform';\n\nimport { McTimepicker } from './timepicker';\n\n\n@NgModule({\n    imports: [\n        CommonModule,\n        A11yModule,\n        PlatformModule,\n        FormsModule\n    ],\n    declarations: [\n        McTimepicker\n    ],\n    exports: [\n        McTimepicker\n    ]\n})\nexport class McTimepickerModule {}\n","import {\n    animate,\n    AnimationTriggerMetadata,\n    state,\n    style,\n    transition,\n    trigger,\n    query,\n    animateChild,\n    group\n} from '@angular/animations';\n\n\n/**\n * The following are all the animations for the mat-select component, with each\n * const containing the metadata for one animation.\n *\n * The values below match the implementation of the AngularJS Material mat-select animation.\n */\nexport const mcSelectAnimations: {\n    readonly transformPanel: AnimationTriggerMetadata;\n    readonly fadeInContent: AnimationTriggerMetadata;\n} = {\n    /**\n     * This animation transforms the select's overlay panel on and off the page.\n     *\n     * When the panel is attached to the DOM, it expands its width by the amount of padding, scales it\n     * up to 100% on the Y axis, fades in its border, and translates slightly up and to the\n     * side to ensure the option text correctly overlaps the trigger text.\n     *\n     * When the panel is removed from the DOM, it simply fades out linearly.\n     */\n    transformPanel: trigger('transformPanel', [\n        state('void', style({\n            transform: 'scaleY(0)',\n            minWidth: '100%',\n            opacity: 0\n        })),\n        transition('void => *', group([\n            query('@fadeInContent', animateChild()),\n            animate('150ms cubic-bezier(0.25, 0.8, 0.25, 1)')\n        ])),\n        transition('* => void', [\n            animate('250ms 100ms linear', style({ opacity: 0 }))\n        ])\n    ]),\n\n    /**\n     * This animation fades in the background color and text content of the\n     * select's options. It is time delayed to occur 100ms after the overlay\n     * panel has transformed in.\n     */\n    fadeInContent: trigger('fadeInContent', [\n        state('showing', style({ opacity: 1 })),\n        transition('void => showing', [\n            style({ opacity: 0 }),\n            animate('150ms 100ms cubic-bezier(0.55, 0, 0.55, 0.2)')\n        ])\n    ])\n};\n\n\n/**\n * @deprecated\n * @breaking-change 7.0.0\n */\nexport const transformPanel = mcSelectAnimations.transformPanel;\n\n/**\n * @deprecated\n * @breaking-change 7.0.0\n */\nexport const fadeInContent = mcSelectAnimations.fadeInContent;\n","import { AnimationEvent } from '@angular/animations';\nimport {\n    Component,\n    ChangeDetectorRef,\n    Input,\n    Inject,\n    Output,\n    EventEmitter,\n    OnDestroy,\n    OnInit,\n    ElementRef,\n    Directive,\n    Optional,\n    ViewEncapsulation,\n    ChangeDetectionStrategy,\n    ComponentFactoryResolver,\n    ViewContainerRef,\n    forwardRef,\n    ViewChild\n} from '@angular/core';\nimport { Directionality, Direction } from '@ptsecurity/cdk/bidi';\nimport { TemplatePortal, CdkPortalOutlet, PortalHostDirective } from '@ptsecurity/cdk/portal';\nimport { Subscription } from 'rxjs';\nimport { startWith } from 'rxjs/operators';\n\nimport { mcTabsAnimations } from './tabs-animations';\n\n\n/**\n * These position states are used internally as animation states for the tab body. Setting the\n * position state to left, right, or center will transition the tab body from its current\n * position to its respective state. If there is not current position (void, in the case of a new\n * tab body), then there will be no transition animation to its state.\n *\n * In the case of a new tab body that should immediately be centered with an animating transition,\n * then left-origin-center or right-origin-center can be used, which will use left or right as its\n * psuedo-prior state.\n */\nexport type McTabBodyPositionState =\n    'left' | 'center' | 'right' | 'left-origin-center' | 'right-origin-center';\n\n/**\n * The origin state is an internally used state that is set on a new tab body indicating if it\n * began to the left or right of the prior selected index. For example, if the selected index was\n * set to 1, and a new tab is created and selected at index 2, then the tab body would have an\n * origin of right because its index was greater than the prior selected index.\n */\nexport type McTabBodyOriginState = 'left' | 'right';\n\n/**\n * Wrapper for the contents of a tab.\n * @docs-private\n */\n@Component({\n    selector: 'mc-tab-body',\n    templateUrl: 'tab-body.html',\n    styleUrls: ['tab-body.css'],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    animations: [mcTabsAnimations.translateTab],\n    host: {\n        class: 'mc-tab-body'\n    }\n})\nexport class McTabBody implements OnInit, OnDestroy {\n\n    /** The shifted index position of the tab body, where zero represents the active center tab. */\n    @Input()\n    set position(position: number) {\n        this.positionIndex = position;\n        this.computePositionAnimationState();\n    }\n\n    /** Tab body position state. Used by the animation trigger for the current state. */\n    bodyPosition: McTabBodyPositionState;\n\n    /** Event emitted when the tab begins to animate towards the center as the active tab. */\n    @Output() readonly onCentering: EventEmitter<number> = new EventEmitter<number>();\n\n    /** Event emitted before the centering of the tab begins. */\n    @Output() readonly beforeCentering: EventEmitter<boolean> = new EventEmitter<boolean>();\n\n    /** Event emitted before the centering of the tab begins. */\n    @Output() readonly afterLeavingCenter: EventEmitter<boolean> = new EventEmitter<boolean>();\n\n    /** Event emitted when the tab completes its animation towards the center. */\n    @Output() readonly onCentered: EventEmitter<void> = new EventEmitter<void>(true);\n\n    /** The portal host inside of this container into which the tab body content will be loaded. */\n    @ViewChild(PortalHostDirective) portalHost: PortalHostDirective;\n\n    /** The tab body content to display. */\n    @Input('content') content: TemplatePortal;\n\n    /** Position that will be used when the tab is immediately becoming visible after creation. */\n    @Input() origin: number;\n\n    // Note that the default value will always be overwritten by `McTabBody`, but we need one\n    // anyway to prevent the animations module from throwing an error if the body is used on its own.\n    /** Duration for the tab's animation. */\n    @Input() animationDuration: string = '0ms';\n\n    /** Current position of the tab-body in the tab-group. Zero means that the tab is visible. */\n    private positionIndex: number;\n\n    /** Subscription to the directionality change observable. */\n    private dirChangeSubscription = Subscription.EMPTY;\n\n    constructor(private elementRef: ElementRef<HTMLElement>,\n                @Optional() private dir: Directionality,\n                changeDetectorRef: ChangeDetectorRef) {\n\n        if (this.dir && changeDetectorRef) {\n            this.dirChangeSubscription = this.dir.change.subscribe((direction: Direction) => {\n                this.computePositionAnimationState(direction);\n                changeDetectorRef.markForCheck();\n            });\n        }\n    }\n\n    /**\n     * After initialized, check if the content is centered and has an origin. If so, set the\n     * special position states that transition the tab from the left or right before centering.\n     */\n    ngOnInit() {\n        if (this.bodyPosition === 'center' && this.origin != null) {\n            this.bodyPosition = this.computePositionFromOrigin();\n        }\n    }\n\n    ngOnDestroy() {\n        this.dirChangeSubscription.unsubscribe();\n    }\n\n    onTranslateTabStarted(e: AnimationEvent): void {\n        const isCentering = this.isCenterPosition(e.toState);\n        this.beforeCentering.emit(isCentering);\n        if (isCentering) {\n            this.onCentering.emit(this.elementRef.nativeElement.clientHeight);\n        }\n    }\n\n    onTranslateTabComplete(e: AnimationEvent): void {\n        // If the transition to the center is complete, emit an event.\n        if (this.isCenterPosition(e.toState) && this.isCenterPosition(this.bodyPosition)) {\n            this.onCentered.emit();\n        }\n\n        if (this.isCenterPosition(e.fromState) && !this.isCenterPosition(this.bodyPosition)) {\n            this.afterLeavingCenter.emit();\n        }\n    }\n\n    /** The text direction of the containing app. */\n    getLayoutDirection(): Direction {\n        return this.dir && this.dir.value === 'rtl' ? 'rtl' : 'ltr';\n    }\n\n    /** Whether the provided position state is considered center, regardless of origin. */\n    isCenterPosition(position: McTabBodyPositionState | string): boolean {\n        return position === 'center' ||\n            position === 'left-origin-center' ||\n            position === 'right-origin-center';\n    }\n\n    /** Computes the position state that will be used for the tab-body animation trigger. */\n    private computePositionAnimationState(dir: Direction = this.getLayoutDirection()) {\n        if (this.positionIndex < 0) {\n            this.bodyPosition = dir === 'ltr' ? 'left' : 'right';\n        } else if (this.positionIndex > 0) {\n            this.bodyPosition = dir === 'ltr' ? 'right' : 'left';\n        } else {\n            this.bodyPosition = 'center';\n        }\n    }\n\n    /**\n     * Computes the position state based on the specified origin position. This is used if the\n     * tab is becoming visible immediately after creation.\n     */\n    private computePositionFromOrigin(): McTabBodyPositionState {\n        const dir = this.getLayoutDirection();\n\n        if ((dir === 'ltr' && this.origin <= 0) || (dir === 'rtl' && this.origin > 0)) {\n            return 'left-origin-center';\n        }\n\n        return 'right-origin-center';\n    }\n}\n\n/**\n * The portal host directive for the contents of the tab.\n * @docs-private\n */\n@Directive({\n    selector: '[mcTabBodyHost]'\n})\nexport class McTabBodyPortal extends CdkPortalOutlet implements OnInit, OnDestroy {\n    /** Subscription to events for when the tab body begins centering. */\n    private centeringSub = Subscription.EMPTY;\n    /** Subscription to events for when the tab body finishes leaving from center position. */\n    private leavingSub = Subscription.EMPTY;\n\n    constructor(\n        componentFactoryResolver: ComponentFactoryResolver,\n        viewContainerRef: ViewContainerRef,\n        @Inject(forwardRef(() => McTabBody)) private host: McTabBody) {\n        super(componentFactoryResolver, viewContainerRef);\n    }\n\n    /** Set initial visibility or set up subscription for changing visibility. */\n    ngOnInit(): void {\n        super.ngOnInit();\n\n        this.centeringSub = this.host.beforeCentering\n            .pipe(startWith(this.host.isCenterPosition(this.host.bodyPosition)))\n            .subscribe((isCentering: boolean) => {\n                if (isCentering && !this.hasAttached()) {\n                    this.attach(this.host.content);\n                }\n            });\n\n        this.leavingSub = this.host.afterLeavingCenter.subscribe(() => {\n            this.detach();\n        });\n    }\n\n    /** Clean up centering subscription. */\n    ngOnDestroy(): void {\n        super.ngOnDestroy();\n        this.centeringSub.unsubscribe();\n        this.leavingSub.unsubscribe();\n    }\n}\n","import { Directive, ElementRef } from '@angular/core';\nimport {\n    CanDisable,\n    CanDisableCtor,\n    mixinDisabled\n} from '@ptsecurity/mosaic/core';\n\n\n// Boilerplate for applying mixins to McTabLabelWrapper.\n/** @docs-private */\nexport class McTabLabelWrapperBase {}\nexport const mcTabLabelWrapperMixinBase: CanDisableCtor &\n    typeof McTabLabelWrapperBase = mixinDisabled(McTabLabelWrapperBase);\n\n/**\n * Used in the `mc-tab-group` view to display tab labels.\n * @docs-private\n */\n@Directive({\n    selector: '[mcTabLabelWrapper]',\n    inputs: ['disabled'],\n    host: {\n        '[class.mc-disabled]': 'disabled',\n        '[attr.aria-disabled]': '!!disabled'\n    }\n})\nexport class McTabLabelWrapper extends mcTabLabelWrapperMixinBase implements CanDisable {\n    constructor(public elementRef: ElementRef) {\n        super();\n    }\n\n    /** Sets focus on the wrapper element */\n    focus(): void {\n        this.elementRef.nativeElement.focus();\n    }\n\n    getOffsetLeft(): number {\n        return this.elementRef.nativeElement.offsetLeft;\n    }\n\n    getOffsetWidth(): number {\n        return this.elementRef.nativeElement.offsetWidth;\n    }\n}\n","import {\n    AfterContentChecked,\n    AfterContentInit,\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    ContentChildren,\n    ElementRef,\n    EventEmitter,\n    Input,\n    NgZone,\n    OnDestroy,\n    Optional,\n    Output,\n    QueryList,\n    ViewChild,\n    ViewEncapsulation\n} from '@angular/core';\nimport { FocusKeyManager } from '@ptsecurity/cdk/a11y';\nimport { Direction, Directionality } from '@ptsecurity/cdk/bidi';\nimport { coerceNumberProperty } from '@ptsecurity/cdk/coercion';\nimport { END, ENTER, HOME, SPACE } from '@ptsecurity/cdk/keycodes';\nimport { ViewportRuler } from '@ptsecurity/cdk/scrolling';\nimport { merge, of as observableOf, Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\n\nimport { McTabLabelWrapper } from './tab-label-wrapper';\n\n\nconst VIEWPORT_THROTTLE_TIME = 150;\nconst SCROLL_DISTANCE_DELIMITER = 3;\n\n\n/**\n * The directions that scrolling can go in when the header's tabs exceed the header width. 'After'\n * will scroll the header towards the end of the tabs list and 'before' will scroll towards the\n * beginning of the list.\n */\nexport type ScrollDirection = 'after' | 'before';\n\n/**\n * The distance in pixels that will be overshot when scrolling a tab label into view. This helps\n * provide a small affordance to the label next to it.\n */\nconst EXAGGERATED_OVERSCROLL = 60;\n\n// Boilerplate for applying mixins to McTabHeader.\n/** @docs-private */\nexport class McTabHeaderBase {}\n\n/**\n * The header of the tab group which displays a list of all the tabs in the tab group.\n * When the tabs list's width exceeds the width of the header container,\n * then arrows will be displayed to allow the user to scroll\n * left and right across the header.\n * @docs-private\n */\n@Component({\n    selector: 'mc-tab-header',\n    templateUrl: 'tab-header.html',\n    styleUrls: ['tab-header.css'],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    host: {\n        class: 'mc-tab-header',\n        '[class.mc-tab-header__pagination-controls_enabled]':\n            'showPaginationControls',\n        '[class.mc-tab-header_rtl]': 'getLayoutDirection() == \\'rtl\\''\n    }\n})\nexport class McTabHeader extends McTabHeaderBase\n    implements AfterContentChecked, AfterContentInit, OnDestroy {\n    /** The index of the active tab. */\n    @Input()\n    get selectedIndex(): number {\n        return this._selectedIndex;\n    }\n    set selectedIndex(value: number) {\n        const coercedValue = coerceNumberProperty(value);\n        this.selectedIndexChanged = this._selectedIndex !== coercedValue;\n        this._selectedIndex = coercedValue;\n\n        if (this.keyManager) {\n            this.keyManager.updateActiveItem(coercedValue);\n        }\n    }\n\n    /** Tracks which element has focus; used for keyboard navigation */\n    get focusIndex(): number {\n        return this.keyManager ? this.keyManager.activeItemIndex! : 0;\n    }\n\n    /** When the focus index is set, we must manually send focus to the correct label */\n    set focusIndex(value: number) {\n        if (\n            !this.isValidIndex(value) ||\n            this.focusIndex === value ||\n            !this.keyManager\n        ) {\n            return;\n        }\n\n        this.keyManager.setActiveItem(value);\n    }\n\n    /** Sets the distance in pixels that the tab header should be transformed in the X-axis. */\n    get scrollDistance(): number {\n        return this._scrollDistance;\n    }\n    set scrollDistance(v: number) {\n        this._scrollDistance = Math.max(\n            0,\n            Math.min(this.getMaxScrollDistance(), v)\n        );\n\n        // Mark that the scroll distance has changed so that after the view is checked, the CSS\n        // transformation can move the header.\n        this.scrollDistanceChanged = true;\n        this.checkScrollingControls();\n    }\n\n    @ContentChildren(McTabLabelWrapper)\n    labelWrappers: QueryList<McTabLabelWrapper>;\n    @ViewChild('tabListContainer')\n    tabListContainer: ElementRef;\n    @ViewChild('tabList')\n    tabList: ElementRef;\n\n    /** Whether the controls for pagination should be displayed */\n    showPaginationControls = false;\n\n    /** Whether the tab list can be scrolled more towards the end of the tab label list. */\n    disableScrollAfter = true;\n\n    /** Whether the tab list can be scrolled more towards the beginning of the tab label list. */\n    disableScrollBefore = true;\n\n    /** Event emitted when the option is selected. */\n    @Output()\n    readonly selectFocusedIndex: EventEmitter<number> = new EventEmitter<number>();\n\n    /** Event emitted when a label is focused. */\n    @Output()\n    readonly indexFocused: EventEmitter<number> = new EventEmitter<number>();\n\n    /** The distance in pixels that the tab labels should be translated to the left. */\n    private _scrollDistance = 0;\n\n    /** Whether the header should scroll to the selected index after the view has been checked. */\n    private selectedIndexChanged = false;\n\n    /** Emits when the component is destroyed. */\n    private readonly destroyed = new Subject<void>();\n\n    /**\n     * The number of tab labels that are displayed on the header. When this changes, the header\n     * should re-evaluate the scroll position.\n     */\n    private tabLabelCount: number;\n\n    /** Whether the scroll distance has changed and should be applied after the view is checked. */\n    private scrollDistanceChanged: boolean;\n\n    /** Used to manage focus between the tabs. */\n    private keyManager: FocusKeyManager<McTabLabelWrapper>;\n\n    /** Cached text content of the header. */\n    private currentTextContent: string;\n\n    private _selectedIndex: number = 0;\n\n    constructor(\n        private elementRef: ElementRef,\n        private changeDetectorRef: ChangeDetectorRef,\n        private viewportRuler: ViewportRuler,\n        @Optional() private dir: Directionality,\n        private ngZone: NgZone\n    ) {\n        super();\n    }\n\n    ngAfterContentChecked(): void {\n        // If the number of tab labels have changed, check if scrolling should be enabled\n        if (this.tabLabelCount !== this.labelWrappers.length) {\n            this.updatePagination();\n            this.tabLabelCount = this.labelWrappers.length;\n            this.changeDetectorRef.markForCheck();\n        }\n\n        // If the selected index has changed, scroll to the label and check if the scrolling controls\n        // should be disabled.\n        if (this.selectedIndexChanged) {\n            this.scrollToLabel(this._selectedIndex);\n            this.checkScrollingControls();\n            this.selectedIndexChanged = false;\n            this.changeDetectorRef.markForCheck();\n        }\n\n        // If the scroll distance has been changed (tab selected, focused, scroll controls activated),\n        // then translate the header to reflect this.\n        if (this.scrollDistanceChanged) {\n            this.updateTabScrollPosition();\n            this.scrollDistanceChanged = false;\n            this.changeDetectorRef.markForCheck();\n        }\n    }\n\n    handleKeydown(event: KeyboardEvent) {\n        switch (event.keyCode) {\n            case HOME:\n                this.keyManager.setFirstItemActive();\n                event.preventDefault();\n                break;\n            case END:\n                this.keyManager.setLastItemActive();\n                event.preventDefault();\n                break;\n            case ENTER:\n            case SPACE:\n                this.selectFocusedIndex.emit(this.focusIndex);\n                event.preventDefault();\n                break;\n            default:\n                this.keyManager.onKeydown(event);\n        }\n    }\n\n    ngAfterContentInit() {\n        const dirChange = this.dir ? this.dir.change : observableOf(null);\n        const resize = this.viewportRuler.change(VIEWPORT_THROTTLE_TIME);\n        const realign = () => {\n            this.updatePagination();\n        };\n\n        this.keyManager = new FocusKeyManager(this.labelWrappers)\n            .withHorizontalOrientation(this.getLayoutDirection())\n            .withWrap();\n\n        this.keyManager.updateActiveItem(0);\n\n        // Defer the first call in order to allow for slower browsers to lay out the elements.\n        // This helps in cases where the user lands directly on a page with paginated tabs.\n        typeof requestAnimationFrame === undefined\n            ? realign()\n            : requestAnimationFrame(realign);\n\n        // On dir change or window resize, update the orientation of\n        // the key manager if the direction has changed.\n        merge(dirChange, resize)\n            .pipe(takeUntil(this.destroyed))\n            .subscribe(() => {\n                realign();\n                this.keyManager.withHorizontalOrientation(\n                    this.getLayoutDirection()\n                );\n            });\n\n        // If there is a change in the focus key manager we need to emit the `indexFocused`\n        // event in order to provide a public event that notifies about focus changes. Also we realign\n        // the tabs container by scrolling the new focused tab into the visible section.\n        this.keyManager.change\n            .pipe(takeUntil(this.destroyed))\n            .subscribe((newFocusIndex) => {\n                this.indexFocused.emit(newFocusIndex);\n                this.setTabFocus(newFocusIndex);\n            });\n    }\n\n    ngOnDestroy() {\n        this.destroyed.next();\n        this.destroyed.complete();\n    }\n\n    /**\n     * Callback for when the MutationObserver detects that the content has changed.\n     */\n    onContentChanges() {\n        const textContent = this.elementRef.nativeElement.textContent;\n\n        // We need to diff the text content of the header, because the MutationObserver callback\n        // will fire even if the text content didn't change which is inefficient and is prone\n        // to infinite loops if a poorly constructed expression is passed in.\n\n        if (textContent !== this.currentTextContent) {\n            this.currentTextContent = textContent;\n\n            const zoneCallback = () => {\n                this.updatePagination();\n                this.changeDetectorRef.markForCheck();\n            };\n\n            // The content observer runs outside the `NgZone` by default, which\n            // means that we need to bring the callback back in ourselves.\n            // TODO: Remove null check for `_ngZone` once it's a required parameter.\n            this.ngZone ? this.ngZone.run(zoneCallback) : zoneCallback();\n        }\n    }\n\n    /**\n     * Updating the view whether pagination should be enabled or not\n     *\n     * WARNING: Calling this method can be very costly in terms of performance.  It should be called\n     * as infrequently as possible from outside of the Tabs component as it causes a reflow of the\n     * page.\n     */\n    updatePagination() {\n        this.checkPaginationEnabled();\n        this.checkScrollingControls();\n        this.updateTabScrollPosition();\n    }\n\n    /**\n     * Determines if an index is valid.  If the tabs are not ready yet, we assume that the user is\n     * providing a valid index and return true.\n     */\n    isValidIndex(index: number): boolean {\n        if (!this.labelWrappers) {\n            return true;\n        }\n\n        const tab = this.labelWrappers\n            ? this.labelWrappers.toArray()[index]\n            : null;\n\n        return !!tab && !tab.disabled;\n    }\n\n    /**\n     * Sets focus on the HTML element for the label wrapper and scrolls it into the view if\n     * scrolling is enabled.\n     */\n    setTabFocus(tabIndex: number) {\n        if (this.showPaginationControls) {\n            this.scrollToLabel(tabIndex);\n        }\n\n        if (this.labelWrappers && this.labelWrappers.length) {\n            this.labelWrappers.toArray()[tabIndex].focus();\n\n            // Do not let the browser manage scrolling to focus the element, this will be handled\n            // by using translation. In LTR, the scroll left should be 0. In RTL, the scroll width\n            // should be the full width minus the offset width.\n            const containerEl = this.tabListContainer.nativeElement;\n            const dir = this.getLayoutDirection();\n\n            if (dir === 'ltr') {\n                containerEl.scrollLeft = 0;\n            } else {\n                containerEl.scrollLeft =\n                    containerEl.scrollWidth - containerEl.offsetWidth;\n            }\n        }\n    }\n\n    /** The layout direction of the containing app. */\n    getLayoutDirection(): Direction {\n        return this.dir && this.dir.value === 'rtl' ? 'rtl' : 'ltr';\n    }\n\n    /** Performs the CSS transformation on the tab list that will cause the list to scroll. */\n    updateTabScrollPosition() {\n        const scrollDistance = this.scrollDistance;\n        const translateX =\n            this.getLayoutDirection() === 'ltr'\n                ? -scrollDistance\n                : scrollDistance;\n\n        // Don't use `translate3d` here because we don't want to create a new layer. A new layer\n        // seems to cause flickering and overflow in Internet Explorer.\n        // See: https://github.com/angular/material2/issues/10276\n        // We round the `transform` here, because transforms with sub-pixel precision cause some\n        // browsers to blur the content of the element.\n        this.tabList.nativeElement.style.transform = `translateX(${Math.round(translateX)}px)`;\n\n        // Setting the `transform` on IE will change the scroll offset of the parent, causing the\n        // position to be thrown off in some cases. We have to reset it ourselves to ensure that\n        // it doesn't get thrown off.\n        this.tabList.nativeElement.scrollLeft = 0;\n    }\n\n    /**\n     * Moves the tab list in the 'before' or 'after' direction (towards the beginning of the list or\n     * the end of the list, respectively). The distance to scroll is computed to be a third of the\n     * length of the tab list view window.\n     *\n     * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n     * should be called sparingly.\n     */\n    scrollHeader(scrollDir: ScrollDirection) {\n        const viewLength = this.tabListContainer.nativeElement.offsetWidth;\n\n        // Move the scroll distance one-third the length of the tab list's viewport.\n        this.scrollDistance +=\n            ((scrollDir === 'before' ? -1 : 1) * viewLength) / SCROLL_DISTANCE_DELIMITER;\n    }\n\n    /**\n     * Moves the tab list such that the desired tab label (marked by index) is moved into view.\n     *\n     * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n     * should be called sparingly.\n     */\n    scrollToLabel(labelIndex: number) {\n        const selectedLabel = this.labelWrappers\n            ? this.labelWrappers.toArray()[labelIndex]\n            : null;\n\n        if (!selectedLabel) {\n            return;\n        }\n\n        // The view length is the visible width of the tab labels.\n        const viewLength = this.tabListContainer.nativeElement.offsetWidth;\n\n        let labelBeforePos: number;\n        let labelAfterPos: number;\n\n        if (this.getLayoutDirection() === 'ltr') {\n            labelBeforePos = selectedLabel.getOffsetLeft();\n            labelAfterPos = labelBeforePos + selectedLabel.getOffsetWidth();\n        } else {\n            labelAfterPos =\n                this.tabList.nativeElement.offsetWidth -\n                selectedLabel.getOffsetLeft();\n            labelBeforePos = labelAfterPos - selectedLabel.getOffsetWidth();\n        }\n\n        const beforeVisiblePos = this.scrollDistance;\n        const afterVisiblePos = this.scrollDistance + viewLength;\n\n        if (labelBeforePos < beforeVisiblePos) {\n            // Scroll header to move label to the before direction\n            this.scrollDistance -=\n                beforeVisiblePos - labelBeforePos + EXAGGERATED_OVERSCROLL;\n        } else if (labelAfterPos > afterVisiblePos) {\n            // Scroll header to move label to the after direction\n            this.scrollDistance +=\n                labelAfterPos - afterVisiblePos + EXAGGERATED_OVERSCROLL;\n        }\n    }\n\n    /**\n     * Evaluate whether the pagination controls should be displayed. If the scroll width of the\n     * tab list is wider than the size of the header container, then the pagination controls should\n     * be shown.\n     *\n     * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n     * should be called sparingly.\n     */\n    checkPaginationEnabled() {\n        const isEnabled =\n            this.tabList.nativeElement.scrollWidth >\n            this.elementRef.nativeElement.offsetWidth;\n\n        if (!isEnabled) {\n            this.scrollDistance = 0;\n        }\n\n        if (isEnabled !== this.showPaginationControls) {\n            this.changeDetectorRef.markForCheck();\n        }\n\n        this.showPaginationControls = isEnabled;\n    }\n\n    /**\n     * Evaluate whether the before and after controls should be enabled or disabled.\n     * If the header is at the beginning of the list (scroll distance is equal to 0) then disable the\n     * before button. If the header is at the end of the list (scroll distance is equal to the\n     * maximum distance we can scroll), then disable the after button.\n     *\n     * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n     * should be called sparingly.\n     */\n    checkScrollingControls() {\n        // Check if the pagination arrows should be activated.\n        this.disableScrollBefore = this.scrollDistance === 0;\n        this.disableScrollAfter =\n            this.scrollDistance === this.getMaxScrollDistance();\n        this.changeDetectorRef.markForCheck();\n    }\n\n    /**\n     * Determines what is the maximum length in pixels that can be set for the scroll distance. This\n     * is equal to the difference in width between the tab list container and tab header container.\n     *\n     * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n     * should be called sparingly.\n     */\n    getMaxScrollDistance(): number {\n        const lengthOfTabList = this.tabList.nativeElement.scrollWidth;\n        const viewLength = this.tabListContainer.nativeElement.offsetWidth;\n\n        return lengthOfTabList - viewLength || 0;\n    }\n}\n","import {\n    AfterContentChecked,\n    AfterContentInit,\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    ContentChildren,\n    ElementRef,\n    EventEmitter,\n    Input,\n    OnDestroy,\n    Output,\n    QueryList,\n    ViewChild,\n    ViewEncapsulation,\n    InjectionToken,\n    Inject,\n    Optional,\n    Directive, Attribute\n} from '@angular/core';\nimport { coerceBooleanProperty, coerceNumberProperty } from '@ptsecurity/cdk/coercion';\nimport {\n    CanColor,\n    CanColorCtor,\n    mixinColor,\n    mixinDisabled\n} from '@ptsecurity/mosaic/core';\nimport { merge, Subscription } from 'rxjs';\n\nimport { McTab } from './tab';\nimport { McTabHeader } from './tab-header';\n\n\n@Directive({\n    selector: 'mc-tab-group[mc-light-tabs], [mc-tab-nav-bar][mc-light-tabs]',\n    host: { class: 'mc-tab-group_light' }\n})\nexport class McLightTabsCssStyler { }\n\n@Directive({\n    selector: 'mc-tab-group[mc-align-tabs-center], [mc-tab-nav-bar][mc-align-tabs-center]',\n    host: { class: 'mc-tab-group_align-labels-center' }\n})\nexport class McAlignTabsCenterCssStyler { }\n\n@Directive({\n    selector: 'mc-tab-group[mc-align-tabs-end], [mc-tab-nav-bar][mc-align-tabs-end]',\n    host: { class: 'mc-tab-group_align-labels-end' }\n})\nexport class McAlignTabsEndCssStyler { }\n\n@Directive({\n    selector: 'mc-tab-group[mc-stretch-tabs], [mc-tab-nav-bar][mc-stretch-tabs]',\n    host: { class: 'mc-tab-group_stretch-labels' }\n})\nexport class McStretchTabsCssStyler { }\n\n/** Used to generate unique ID's for each tab component */\nlet nextId = 0;\n\n/** A simple change event emitted on focus or selection changes. */\nexport class McTabChangeEvent {\n    /** Index of the currently-selected tab. */\n    index: number;\n    /** Reference to the currently-selected tab. */\n    tab: McTab;\n}\n\n/** Possible positions for the tab header. */\nexport type McTabHeaderPosition = 'above' | 'below';\n\n/** Object that can be used to configure the default options for the tabs module. */\nexport interface IMcTabsConfig {\n    /** Duration for the tab animation. Must be a valid CSS value (e.g. 600ms). */\n    animationDuration?: string;\n}\n\n/** Injection token that can be used to provide the default options the tabs module. */\nexport const MC_TABS_CONFIG = new InjectionToken('MC_TABS_CONFIG');\n\n// Boilerplate for applying mixins to McTabGroup.\n/** @docs-private */\nexport class McTabGroupBase {\n    // tslint:disable-next-line:naming-convention\n    constructor(public _elementRef: ElementRef) { }\n}\nexport const mcTabGroupMixinBase:\n    CanColorCtor &\n    typeof McTabGroupBase =\n    mixinColor(mixinDisabled(McTabGroupBase));\n\n/**\n * Tab-group component.  Supports basic tab pairs (label + content) and includes\n * keyboard navigation.\n */\n@Component({\n    selector: 'mc-tab-group',\n    exportAs: 'mcTabGroup',\n    templateUrl: 'tab-group.html',\n    styleUrls: ['tab-group.css'],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    inputs: ['color'],\n    host: {\n        class: 'mc-tab-group',\n        '[class.mc-tab-group_dynamic-height]': 'dynamicHeight',\n        '[class.mc-tab-group_inverted-header]': 'headerPosition === \"below\"'\n    }\n})\nexport class McTabGroup extends mcTabGroupMixinBase implements AfterContentInit,\n    AfterContentChecked, OnDestroy, CanColor {\n    lightTab: boolean;\n\n    /** Whether the tab group should grow to the size of the active tab. */\n    @Input()\n    get dynamicHeight(): boolean { return this._dynamicHeight; }\n    set dynamicHeight(value: boolean) { this._dynamicHeight = coerceBooleanProperty(value); }\n\n    /** The index of the active tab. */\n    @Input()\n    get selectedIndex(): number | null { return this._selectedIndex; }\n    set selectedIndex(value: number | null) {\n        this.indexToSelect = coerceNumberProperty(value, null);\n    }\n\n    @ContentChildren(McTab) tabs: QueryList<McTab>;\n\n    @ViewChild('tabBodyWrapper') tabBodyWrapper: ElementRef;\n\n    @ViewChild('tabHeader') tabHeader: McTabHeader;\n\n    /** Position of the tab header. */\n    @Input() headerPosition: McTabHeaderPosition = 'above';\n\n    /** Duration for the tab animation. Must be a valid CSS value (e.g. 600ms). */\n    @Input() animationDuration: string;\n\n    /** Output to enable support for two-way binding on `[(selectedIndex)]` */\n    @Output() readonly selectedIndexChange: EventEmitter<number> = new EventEmitter<number>();\n\n    /** Event emitted when focus has changed within a tab group. */\n    @Output() readonly focusChange: EventEmitter<McTabChangeEvent> =\n        new EventEmitter<McTabChangeEvent>();\n\n    /** Event emitted when the body animation has completed */\n    @Output() readonly animationDone: EventEmitter<void> = new EventEmitter<void>();\n\n    /** Event emitted when the tab selection has changed. */\n    @Output() readonly selectedTabChange: EventEmitter<McTabChangeEvent> =\n        new EventEmitter<McTabChangeEvent>(true);\n\n    /** The tab index that should be selected after the content has been checked. */\n    private indexToSelect: number | null = 0;\n\n    /** Snapshot of the height of the tab body wrapper before another tab is activated. */\n    private tabBodyWrapperHeight: number = 0;\n\n    /** Subscription to tabs being added/removed. */\n    private tabsSubscription = Subscription.EMPTY;\n\n    /** Subscription to changes in the tab labels. */\n    private tabLabelSubscription = Subscription.EMPTY;\n    private _dynamicHeight: boolean = false;\n    private _selectedIndex: number | null = null;\n\n    private groupId: number;\n\n    constructor(\n        elementRef: ElementRef,\n        private changeDetectorRef: ChangeDetectorRef,\n        @Attribute('mc-light-tabs') lightTabs: string,\n        @Inject(MC_TABS_CONFIG) @Optional() defaultConfig?: IMcTabsConfig\n    ) {\n        super(elementRef);\n\n        this.lightTab = coerceBooleanProperty(lightTabs);\n\n        this.groupId = nextId++;\n        this.animationDuration = defaultConfig && defaultConfig.animationDuration ?\n            defaultConfig.animationDuration : '0ms';\n    }\n\n    /**\n     * After the content is checked, this component knows what tabs have been defined\n     * and what the selected index should be. This is where we can know exactly what position\n     * each tab should be in according to the new selected index, and additionally we know how\n     * a new selected tab should transition in (from the left or right).\n     */\n    ngAfterContentChecked() {\n        // Don't clamp the `indexToSelect` immediately in the setter because it can happen that\n        // the amount of tabs changes before the actual change detection runs.\n        const indexToSelect = this.indexToSelect = this.clampTabIndex(this.indexToSelect);\n\n        // If there is a change in selected index, emit a change event. Should not trigger if\n        // the selected index has not yet been initialized.\n        if (this._selectedIndex !== indexToSelect) {\n            const isFirstRun = this._selectedIndex == null;\n\n            if (!isFirstRun) {\n                this.selectedTabChange.emit(this.createChangeEvent(indexToSelect));\n            }\n\n            // Changing these values after change detection has run\n            // since the checked content may contain references to them.\n            Promise.resolve().then(() => {\n                this.tabs.forEach((tab, index) => tab.isActive = index === indexToSelect);\n\n                if (!isFirstRun) {\n                    this.selectedIndexChange.emit(indexToSelect);\n                }\n            });\n        }\n\n        // Setup the position for each tab and optionally setup an origin on the next selected tab.\n        this.tabs.forEach((tab: McTab, index: number) => {\n            tab.position = index - indexToSelect;\n\n            // If there is already a selected tab, then set up an origin for the next selected tab\n            // if it doesn't have one already.\n            if (this._selectedIndex != null && tab.position === 0 && !tab.origin) {\n                tab.origin = indexToSelect - this._selectedIndex;\n            }\n        });\n\n        if (this._selectedIndex !== indexToSelect) {\n            this._selectedIndex = indexToSelect;\n            this.changeDetectorRef.markForCheck();\n        }\n    }\n\n    ngAfterContentInit() {\n        this.subscribeToTabLabels();\n\n        // Subscribe to changes in the amount of tabs, in order to be\n        // able to re-render the content as new tabs are added or removed.\n        this.tabsSubscription = this.tabs.changes.subscribe(() => {\n            const indexToSelect = this.clampTabIndex(this.indexToSelect);\n\n            // Maintain the previously-selected tab if a new tab is added or removed and there is no\n            // explicit change that selects a different tab.\n            if (indexToSelect === this._selectedIndex) {\n                const tabs = this.tabs.toArray();\n\n                for (let i = 0; i < tabs.length; i++) {\n                    if (tabs[i].isActive) {\n                        // Assign both to the `_indexToSelect` and `_selectedIndex` so we don't fire a changed\n                        // event, otherwise the consumer may end up in an infinite loop in some edge cases like\n                        // adding a tab within the `selectedIndexChange` event.\n                        this.indexToSelect = this._selectedIndex = i;\n                        break;\n                    }\n                }\n            }\n\n            this.subscribeToTabLabels();\n            this.changeDetectorRef.markForCheck();\n        });\n    }\n\n    ngOnDestroy() {\n        this.tabsSubscription.unsubscribe();\n        this.tabLabelSubscription.unsubscribe();\n    }\n\n    focusChanged(index: number) {\n        this.focusChange.emit(this.createChangeEvent(index));\n    }\n\n    /** Returns a unique id for each tab label element */\n    getTabLabelId(i: number): string {\n        return `mc-tab-label-${this.groupId}-${i}`;\n    }\n\n    /** Returns a unique id for each tab content element */\n    getTabContentId(i: number): string {\n        return `mc-tab-content-${this.groupId}-${i}`;\n    }\n\n    /**\n     * Sets the height of the body wrapper to the height of the activating tab if dynamic\n     * height property is true.\n     */\n    setTabBodyWrapperHeight(tabHeight: number): void {\n        if (!this._dynamicHeight || !this.tabBodyWrapperHeight) { return; }\n\n        const wrapper: HTMLElement = this.tabBodyWrapper.nativeElement;\n\n        wrapper.style.height = `${this.tabBodyWrapperHeight}px`;\n\n        // This conditional forces the browser to paint the height so that\n        // the animation to the new height can have an origin.\n        if (this.tabBodyWrapper.nativeElement.offsetHeight) {\n            wrapper.style.height = `${tabHeight}px`;\n        }\n    }\n\n    /** Removes the height of the tab body wrapper. */\n    removeTabBodyWrapperHeight(): void {\n        this.tabBodyWrapperHeight = this.tabBodyWrapper.nativeElement.clientHeight;\n        this.tabBodyWrapper.nativeElement.style.height = '';\n        this.animationDone.emit();\n    }\n\n    /** Handle click events, setting new selected index if appropriate. */\n    handleClick(tab: McTab, tabHeader: McTabHeader, index: number) {\n        if (!tab.disabled) {\n            this.selectedIndex = tabHeader.focusIndex = index;\n        }\n    }\n\n    /** Retrieves the tabindex for the tab. */\n    getTabIndex(tab: McTab, index: number): number | null {\n        if (tab.disabled) {\n            return null;\n        }\n\n        return this.selectedIndex === index ? 0 : -1;\n    }\n\n    private createChangeEvent(index: number): McTabChangeEvent {\n        const event = new McTabChangeEvent();\n        event.index = index;\n        if (this.tabs && this.tabs.length) {\n            event.tab = this.tabs.toArray()[index];\n        }\n\n        return event;\n    }\n\n    /**\n     * Subscribes to changes in the tab labels. This is needed, because the @Input for the label is\n     * on the McTab component, whereas the data binding is inside the McTabGroup. In order for the\n     * binding to be updated, we need to subscribe to changes in it and trigger change detection\n     * manually.\n     */\n    private subscribeToTabLabels() {\n        if (this.tabLabelSubscription) {\n            this.tabLabelSubscription.unsubscribe();\n        }\n\n        this.tabLabelSubscription = merge(...this.tabs.map((tab) => tab.stateChanges))\n            .subscribe(() => this.changeDetectorRef.markForCheck());\n    }\n\n    /** Clamps the given index to the bounds of 0 and the tabs length. */\n    private clampTabIndex(index: number | null): number {\n        // Note the `|| 0`, which ensures that values like NaN can't get through\n        // and which would otherwise throw the component into an infinite loop\n        // (since Mch.max(NaN, 0) === NaN).\n        return Math.min(this.tabs.length - 1, Math.max(index || 0, 0));\n    }\n}\n","import {\n    Attribute,\n    ChangeDetectionStrategy,\n    Component,\n    Directive,\n    ElementRef,\n    Input,\n    OnDestroy,\n    ViewEncapsulation\n} from '@angular/core';\nimport { FocusMonitor } from '@ptsecurity/cdk/a11y';\nimport {\n    CanColor,\n    CanColorCtor,\n    CanDisable,\n    CanDisableCtor,\n    HasTabIndex,\n    HasTabIndexCtor,\n    mixinColor,\n    mixinDisabled,\n    mixinTabIndex\n} from '@ptsecurity/mosaic/core';\n\n\n// Boilerplate for applying mixins to McTabNav.\n/** @docs-private */\nexport class McTabNavBase {\n    // tslint:disable-next-line:naming-convention\n    constructor(public _elementRef: ElementRef) {}\n}\nexport const mcTabNavMixinBase: CanColorCtor &\n    typeof McTabNavBase = mixinColor(McTabNavBase);\n\n/**\n * Navigation component matching the styles of the tab group header.\n */\n@Component({\n    selector: '[mc-tab-nav-bar]',\n    exportAs: 'mcTabNavBar, mcTabNav',\n    inputs: ['color'],\n    templateUrl: 'tab-nav-bar.html',\n    styleUrls: ['tab-nav-bar.css'],\n    host: { class: 'mc-tab-nav-bar' },\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class McTabNav extends mcTabNavMixinBase\n    implements CanColor {\n        constructor(elementRef: ElementRef) {\n            super(elementRef);\n        }\n     }\n\n// Boilerplate for applying mixins to McTabLink.\nexport class McTabLinkBase {}\nexport const mcTabLinkMixinBase: HasTabIndexCtor & CanDisableCtor &\n    typeof McTabLinkBase = mixinTabIndex(mixinDisabled(McTabLinkBase));\n\n/**\n * Link inside of a `mc-tab-nav-bar`.\n */\n@Directive({\n    selector: '[mc-tab-link], [mcTabLink]',\n    exportAs: 'mcTabLink',\n    inputs: ['disabled', 'tabIndex'],\n    host: {\n        class: 'mc-tab-link',\n        '[attr.aria-current]': 'active',\n        '[attr.aria-disabled]': 'disabled.toString()',\n        '[attr.tabIndex]': 'tabIndex',\n        '[class.mc-disabled]': 'disabled',\n        '[class.mc-active]': 'active'\n    }\n})\nexport class McTabLink extends mcTabLinkMixinBase\n    implements OnDestroy, CanDisable, HasTabIndex {\n    /** Whether the link is active. */\n    @Input()\n    get active(): boolean {\n        return this.isActive;\n    }\n    set active(value: boolean) {\n        if (value !== this.isActive) {\n            this.isActive = value;\n        }\n    }\n\n    /** Whether the tab link is active or not. */\n    protected isActive: boolean = false;\n\n    constructor(\n        public elementRef: ElementRef,\n        @Attribute('tabindex') tabIndex: string,\n        private focusMonitor: FocusMonitor\n    ) {\n        super();\n\n        this.tabIndex = parseInt(tabIndex) || 0;\n        this.focusMonitor.monitor(this.elementRef.nativeElement);\n    }\n\n    ngOnDestroy() {\n        this.focusMonitor.stopMonitoring(this.elementRef.nativeElement);\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { A11yModule } from '@ptsecurity/cdk/a11y';\nimport { PortalModule } from '@ptsecurity/cdk/portal';\nimport { McCommonModule } from '@ptsecurity/mosaic/core';\n\nimport { McTab } from './tab';\nimport { McTabBody, McTabBodyPortal } from './tab-body';\nimport { McTabContent } from './tab-content';\nimport {\n    McTabGroup,\n    McLightTabsCssStyler,\n    McAlignTabsCenterCssStyler,\n    McAlignTabsEndCssStyler,\n    McStretchTabsCssStyler\n} from './tab-group';\nimport { McTabHeader } from './tab-header';\nimport { McTabLabel } from './tab-label';\nimport { McTabLabelWrapper } from './tab-label-wrapper';\nimport { McTabLink, McTabNav } from './tab-nav-bar/tab-nav-bar';\n\n\n@NgModule({\n    imports: [\n        CommonModule,\n        McCommonModule,\n        PortalModule,\n        A11yModule\n    ],\n    // Don't export all components because some are only to be used internally.\n    exports: [\n        McCommonModule,\n        McTabGroup,\n        McTabLabel,\n        McTab,\n        McTabNav,\n        McTabLink,\n        McTabContent,\n        McLightTabsCssStyler,\n        McAlignTabsCenterCssStyler,\n        McAlignTabsEndCssStyler,\n        McStretchTabsCssStyler\n    ],\n    declarations: [\n        McTabGroup,\n        McTabLabel,\n        McTab,\n        McTabLabelWrapper,\n        McTabNav,\n        McTabLink,\n        McTabBody,\n        McTabBodyPortal,\n        McTabHeader,\n        McTabContent,\n        McLightTabsCssStyler,\n        McAlignTabsCenterCssStyler,\n        McAlignTabsEndCssStyler,\n        McStretchTabsCssStyler\n    ]\n})\nexport class McTabsModule {}\n","import {\n    ElementRef,\n    QueryList,\n    ContentChildren,\n    Component,\n    ChangeDetectionStrategy,\n    ViewEncapsulation\n} from '@angular/core';\n\nimport {\n    mixinColor,\n    CanColor,\n    CanColorCtor,\n    CanDisable,\n    CanDisableCtor,\n    mixinDisabled\n} from '@ptsecurity/mosaic/core';\nimport { McIcon } from '@ptsecurity/mosaic/icon';\n\n\nexport class McTagBase {\n    constructor(public _elementRef: ElementRef) {}\n}\n\nexport const _McTagMixinBase: CanColorCtor & CanDisableCtor & typeof McTagBase = mixinColor(mixinDisabled(McTagBase));\n\n\n@Component({\n    selector: 'mc-tag',\n    templateUrl: 'tag.partial.html',\n    styleUrls: ['./tag.css'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n    host: {\n        class: 'mc-tag',\n        '[class.mc-disabled]': 'disabled'\n    },\n    inputs: ['color', 'disabled']\n})\nexport class McTag extends _McTagMixinBase implements CanColor, CanDisable {\n    @ContentChildren(McIcon) contentChildren: QueryList<McIcon>;\n\n    nativeElement: HTMLElement;\n\n    private _disabled: boolean = false;\n\n    get disabled() {\n        return this._disabled;\n    }\n\n    set disabled(value: any) {\n        if (value !== this.disabled) { this._disabled = value; }\n    }\n\n    constructor(elementRef: ElementRef) {\n        super(elementRef);\n\n        this.nativeElement = elementRef.nativeElement;\n    }\n\n    ngAfterContentInit() {\n        this._addClassModificatorForIcons();\n    }\n\n    _addClassModificatorForIcons() {\n        const icons = this.contentChildren.map((item) => item._elementRef.nativeElement);\n\n        if (icons.length === 1) {\n            const iconElement = icons[0];\n\n            if (!iconElement.previousElementSibling && !iconElement.nextElementSibling) {\n                if (iconElement.nextSibling) {\n                    iconElement.classList.add('mc-icon_left');\n                    this.nativeElement.classList.add('mc-left-icon');\n                }\n\n                if (iconElement.previousSibling) {\n                    iconElement.classList.add('mc-icon_right');\n                    this.nativeElement.classList.add('mc-right-icon');\n                }\n            }\n        } else if (icons.length > 1) {\n            const firstIconElement = icons[0];\n            const secondIconElement = icons[1];\n\n            firstIconElement.classList.add('mc-icon_left');\n            secondIconElement.classList.add('mc-icon_right');\n        }\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { PlatformModule } from '@ptsecurity/cdk/platform';\n\nimport { McTag } from './tag.component';\n\n\n@NgModule({\n    imports: [\n        CommonModule,\n        PlatformModule\n    ],\n    exports: [\n        McTag\n    ],\n    declarations: [\n        McTag\n    ]\n})\nexport class McTagModule {}\n","import { fromEvent, Observable, Subscription } from 'rxjs';\nimport { debounceTime } from 'rxjs/operators';\n\nimport {\n    AfterViewInit,\n    Component, Directive,\n    ElementRef,\n    HostBinding,\n    Input,\n    OnDestroy,\n    OnInit,\n    ViewEncapsulation,\n    ContentChild,\n    TemplateRef,\n    ChangeDetectorRef,\n    ChangeDetectionStrategy,\n    ViewChild\n} from '@angular/core';\nimport { FocusMonitor, FocusOrigin } from '@ptsecurity/cdk/a11y';\nimport { SPACE } from '@ptsecurity/cdk/keycodes';\nimport { Platform } from '@ptsecurity/cdk/platform';\nimport { CanDisable, CanDisableCtor, mixinDisabled } from '@ptsecurity/mosaic/core';\n\n\nconst COLLAPSED_CLASS: string = 'mc-navbar-collapsed-title';\nconst MC_ICON = 'mc-icon';\nconst MC_NAVBAR = 'mc-navbar';\nconst MC_NAVBAR_CONTAINER = 'mc-navbar-container';\nconst MC_NAVBAR_ITEM = 'mc-navbar-item';\nconst MC_NAVBAR_BRAND = 'mc-navbar-brand';\nconst MC_NAVBAR_TITLE = 'mc-navbar-title';\nconst MC_NAVBAR_LOGO = 'mc-navbar-logo';\n\nexport type McNavbarContainerPositionType = 'left' | 'right';\n\nexport interface IMcNavbarDropdownItem {\n    link?: string;\n    text: string;\n}\n\n@Directive({\n    selector: MC_NAVBAR_LOGO,\n    host: {\n        class: MC_NAVBAR_LOGO\n    }\n})\nexport class McNavbarLogo {}\n\n@Directive({\n    selector: MC_NAVBAR_BRAND,\n    host: {\n        class: MC_NAVBAR_BRAND\n    }\n})\nexport class McNavbarBrand {}\n\n@Directive({\n    selector: MC_NAVBAR_TITLE,\n    host: {\n        class: MC_NAVBAR_TITLE\n    }\n})\nexport class McNavbarTitle {}\n\nexport class McNavbarItemBase {\n    constructor(public _elementRef: ElementRef) {}\n}\n\nexport const _McNavbarMixinBase: CanDisableCtor & typeof McNavbarItemBase = mixinDisabled(McNavbarItemBase);\n\n@Component({\n    selector: MC_NAVBAR_ITEM,\n    template: `\n        <a\n            [attr.tabindex]=\\\"disabled ? -1 : tabIndex\\\"\n            (click)=\"handleClickByItem()\"\n            (keydown)=\"handleKeydown($event)\"\n            class=\"mc-navbar-item\"\n        >\n            <ng-content></ng-content>\n            <i *ngIf=\"hasDropdownContent\" mc-icon=\"mc-angle-down-M_16\"></i>\n        </a>\n        <ul\n            #dropdownContent\n            *ngIf=\"hasDropdownContent\"\n            [ngClass]=\"{ 'is-collapsed': isCollapsed }\"\n            class=\"mc-navbar-dropdown\"\n        >\n            <li\n                *ngFor=\"let item of dropdownItems\"\n                (click)=\"handleClickByDropdownItem()\"\n                class=\"mc-navbar-dropdown-item\"\n            >\n                <ng-container *ngIf=\"dropdownItemTmpl\">\n                    <ng-container *ngTemplateOutlet=\"dropdownItemTmpl; context: { $implicit: item }\"></ng-container>\n                </ng-container>\n                <a\n                    *ngIf=\"!dropdownItemTmpl\"\n                    [attr.href]=\"item.link\"\n                    [ngClass]=\"{ 'is-active': isActiveDropdownLink(item.link) }\"\n                    class=\"mc-navbar-dropdown-link\"\n                >{{ item.text }}</a>\n            </li>\n        </ul>\n    `,\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    inputs: ['disabled'],\n    host: {\n        '[attr.disabled]': 'disabled || null',\n        '[attr.tabindex]': '-1'\n    }\n})\nexport class McNavbarItem extends _McNavbarMixinBase implements OnInit, AfterViewInit, OnDestroy, CanDisable {\n\n    @Input()\n    tabIndex: number = 0;\n\n    @Input()\n    dropdownItems: IMcNavbarDropdownItem[] = [];\n\n    @Input()\n    set collapsedTitle(value: string) {\n        this.elementRef.nativeElement.setAttribute('computedTitle', encodeURI(value));\n    }\n\n    @ContentChild('dropdownItemTmpl', { read: TemplateRef })\n    dropdownItemTmpl: TemplateRef<IMcNavbarDropdownItem>;\n\n    @ViewChild('dropdownContent', { read: ElementRef })\n    dropdownContent: ElementRef;\n\n    get hasDropdownContent() {\n        return this.dropdownItems.length > 0;\n    }\n\n    isCollapsed: boolean = true;\n\n    private _subscription: Subscription = new Subscription();\n    private _focusMonitor$: Observable<FocusOrigin>;\n\n    private get _dropdownElements(): HTMLElement[] {\n        return this.dropdownContent ? this.dropdownContent.nativeElement.querySelectorAll('li > *') : [];\n    }\n\n    constructor(\n        public  elementRef: ElementRef,\n        private _focusMonitor: FocusMonitor,\n        private _platform: Platform,\n        private _cdRef: ChangeDetectorRef\n    ) {\n        super(elementRef);\n    }\n\n    ngOnInit() {\n        this.denyClickIfDisabled();\n\n        this._focusMonitor$ = this._focusMonitor.monitor(this.elementRef.nativeElement, true);\n\n        if (this.hasDropdownContent) {\n            this.listenClickOutside();\n        }\n    }\n\n    ngAfterViewInit() {\n        if (!this.hasDropdownContent) {\n            return;\n        }\n\n        this.startListenFocusDropdownItems();\n    }\n\n    ngOnDestroy() {\n        this._subscription.unsubscribe();\n        this._focusMonitor.stopMonitoring(this.elementRef.nativeElement);\n        this.stopListenFocusDropdownItems();\n    }\n\n    isActiveDropdownLink(link: string): boolean {\n        if (!this._platform.isBrowser) {\n            return false;\n        }\n\n        return window.location.href.indexOf(link) >= 0;\n    }\n\n    handleClickByItem() {\n        this.toggleDropdown();\n    }\n\n    handleKeydown($event: KeyboardEvent) {\n        const isNavbarItem = ($event.target as HTMLElement).classList.contains(MC_NAVBAR_ITEM);\n\n        // tslint:disable-next-line\n        if (this.hasDropdownContent && $event.keyCode === SPACE && isNavbarItem) {\n            this.toggleDropdown();\n        }\n    }\n\n    handleClickByDropdownItem() {\n        this.forceCloseDropdown();\n    }\n\n    private listenClickOutside() {\n        this._subscription.add(\n            this._focusMonitor$.subscribe((origin) => {\n                if (origin === null) {\n                    this.forceCloseDropdown();\n                }\n            })\n        );\n    }\n\n    private toggleDropdown() {\n        this.isCollapsed = !this.isCollapsed;\n    }\n\n    private forceCloseDropdown() {\n        this.isCollapsed = true;\n        this._cdRef.detectChanges();\n    }\n\n    private startListenFocusDropdownItems() {\n        this._dropdownElements.forEach((el) => {\n            this._focusMonitor.monitor(el, true);\n        });\n    }\n\n    private stopListenFocusDropdownItems() {\n        this._dropdownElements.forEach((el) => {\n            this._focusMonitor.stopMonitoring(el);\n        });\n    }\n\n    // This method is required due to angular 2 issue https://github.com/angular/angular/issues/11200\n    private denyClickIfDisabled() {\n        const events: Event[] = this.elementRef.nativeElement.eventListeners('click');\n\n        events.forEach((event) => this.elementRef.nativeElement.removeEventListener('click', event));\n\n        this.elementRef.nativeElement.addEventListener('click', (event: MouseEvent) => {\n            if (this.elementRef.nativeElement.hasAttribute('disabled')) {\n                event.stopImmediatePropagation();\n            }\n        }, true);\n\n        events.forEach((event) => this.elementRef.nativeElement.addEventListener('click', event));\n    }\n}\n\n@Directive({\n    selector: MC_NAVBAR_CONTAINER\n})\nexport class McNavbarContainer {\n    @Input()\n    position: McNavbarContainerPositionType = 'left';\n\n    @HostBinding('class')\n    get cssClasses(): string {\n        return this.position === 'left' ? 'mc-navbar-left' : 'mc-navbar-right';\n    }\n}\n\nclass CollapsibleItem {\n    private _collapsed: boolean = false;\n\n    constructor(\n        public element: HTMLElement,\n        public width: number\n    ) {}\n\n    processCollapsed(collapsed: boolean) {\n        this._collapsed = collapsed;\n\n        this.updateCollapsedClass();\n    }\n\n    private updateCollapsedClass() {\n        if (this._collapsed) {\n            this.element.classList.add(COLLAPSED_CLASS);\n        } else {\n            this.element.classList.remove(COLLAPSED_CLASS);\n        }\n\n    }\n}\n\nclass CachedItemWidth {\n\n    get canCollapse(): boolean {\n        return this.itemsForCollapse.length > 0;\n    }\n\n    private _collapsedItemsWidth: number;\n\n    get collapsedItemsWidth(): number {\n        if (this._collapsedItemsWidth !== undefined) {\n            return this._collapsedItemsWidth;\n        }\n\n        this.calculateAndCacheCollapsedItemsWidth();\n\n        return this._collapsedItemsWidth;\n    }\n\n    constructor(\n        public element: HTMLElement,\n        public width: number,\n        public itemsForCollapse: CollapsibleItem[] = []\n    ) {}\n\n    processCollapsed(collapsed: boolean) {\n        if (this.itemsForCollapse.length > 0) {\n            this.updateTitle(collapsed);\n        }\n\n        this.itemsForCollapse.forEach((item) => item.processCollapsed(collapsed));\n    }\n\n    private calculateAndCacheCollapsedItemsWidth() {\n        this._collapsedItemsWidth = this.itemsForCollapse\n            .reduce((acc, item) => acc + item.width, 0);\n    }\n\n    private getTitle(): string {\n        const computedTitle = this.element.getAttribute('computedTitle');\n\n        return computedTitle\n            ? decodeURI(computedTitle)\n            : (this.itemsForCollapse.length > 0 ? this.itemsForCollapse[0].element.innerText : '');\n    }\n\n    private updateTitle(collapsed: boolean) {\n        if (collapsed) {\n            this.element.setAttribute('title', this.getTitle());\n        } else {\n            this.element.removeAttribute('title');\n        }\n    }\n}\n\n\n@Component({\n    selector: MC_NAVBAR,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    template: `\n        <nav class=\"mc-navbar\">\n            <ng-content select=\"[${MC_NAVBAR_CONTAINER}],${MC_NAVBAR_CONTAINER}\"></ng-content>\n        </nav>\n    `,\n    styleUrls: ['./navbar.css'],\n    encapsulation: ViewEncapsulation.None\n})\nexport class McNavbar implements AfterViewInit, OnDestroy {\n\n    private readonly forceRecalculateItemsWidth: boolean = false;\n    private readonly resizeDebounceInterval: number = 100;\n    private readonly firstLevelElement: string = MC_NAVBAR_CONTAINER;\n    private readonly secondLevelElements: string[] = [\n        MC_NAVBAR_ITEM,\n        MC_NAVBAR_BRAND,\n        MC_NAVBAR_TITLE\n    ];\n\n    private _totalItemsWidths: number;\n    private _itemsWidths: CachedItemWidth[];\n\n    private get maxAllowedWidth(): number {\n        return this._elementRef.nativeElement.querySelector('nav').getBoundingClientRect().width;\n    }\n\n    private get itemsWidths(): CachedItemWidth[] {\n        if (this._itemsWidths !== undefined && !this.forceRecalculateItemsWidth) {\n            return this._itemsWidths;\n        }\n\n        this.calculateAndCacheItemsWidth();\n\n        return this._itemsWidths;\n    }\n\n    private get totalItemsWidth(): number {\n        if (this._totalItemsWidths !== undefined && !this.forceRecalculateItemsWidth) {\n            return this._totalItemsWidths;\n        }\n\n        this.calculateAndCacheTotalItemsWidth();\n\n        return this._totalItemsWidths;\n    }\n\n    private _resizeSubscription: Subscription;\n\n    constructor(\n        private _elementRef: ElementRef\n    ) {\n        const resizeObserver = fromEvent(window, 'resize')\n            .pipe(debounceTime(this.resizeDebounceInterval));\n\n        this._resizeSubscription = resizeObserver.subscribe(this.updateCollapsed.bind(this));\n    }\n\n    updateCollapsed(): void {\n        let collapseDelta = this.totalItemsWidth - this.maxAllowedWidth;\n\n        for (let i = this.itemsWidths.length - 1; i >= 0; i--) {\n            const item = this.itemsWidths[i];\n\n            if (!item.canCollapse) {\n                continue;\n            }\n\n            item.processCollapsed(collapseDelta > 0);\n            collapseDelta -= item.collapsedItemsWidth;\n        }\n    }\n\n    ngAfterViewInit(): void {\n        // Note: this wait is required for loading and rendering fonts for icons;\n        // unfortunately we cannot control font rendering\n        setTimeout(() => this.updateCollapsed(), 0);\n    }\n\n    ngOnDestroy() {\n        this._resizeSubscription.unsubscribe();\n    }\n\n    private calculateAndCacheTotalItemsWidth() {\n        this._totalItemsWidths = this.itemsWidths\n            .reduce((acc, item) => acc + item.width, 0);\n    }\n\n    private getOuterElementWidth(element: HTMLElement): number {\n        const baseWidth  = element.getBoundingClientRect().width;\n        const marginRight = parseInt(getComputedStyle(element).getPropertyValue('margin-right'));\n        const marginLeft = parseInt(getComputedStyle(element).getPropertyValue('margin-left'));\n\n        return baseWidth + marginRight + marginLeft;\n    }\n\n    private calculateAndCacheItemsWidth() {\n        const allItemsSelector = this.secondLevelElements\n            .map((e: string) => `${this.firstLevelElement}>${e}`);\n        const allItems: HTMLElement[] = Array.from(this._elementRef.nativeElement.querySelectorAll(allItemsSelector));\n\n        this._itemsWidths = allItems\n            .map((el) => new CachedItemWidth(el, this.getOuterElementWidth(el), this.getItemsForCollapse(el)));\n    }\n\n    private getItemsForCollapse(element: HTMLElement): CollapsibleItem[] {\n        const icon = element.querySelector(`[${MC_ICON}],${MC_NAVBAR_LOGO},[${MC_NAVBAR_LOGO}]`);\n\n        if (!icon) {\n            return [];\n        }\n\n        return Array.from(element.querySelectorAll(MC_NAVBAR_TITLE))\n            .map((el) => new CollapsibleItem(<HTMLElement> el, el.getBoundingClientRect().width));\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { A11yModule } from '@ptsecurity/cdk/a11y';\nimport { PlatformModule } from '@ptsecurity/cdk/platform';\n\nimport { McIconModule } from '@ptsecurity/mosaic/icon';\n\nimport {\n    McNavbar,\n    McNavbarContainer,\n    McNavbarItem,\n    McNavbarTitle,\n    McNavbarBrand,\n    McNavbarLogo\n} from './navbar.component';\n\n\n@NgModule({\n    imports: [\n        CommonModule,\n        A11yModule,\n        PlatformModule,\n        McIconModule\n    ],\n    exports: [\n        McNavbar,\n        McNavbarContainer,\n        McNavbarTitle,\n        McNavbarItem,\n        McNavbarBrand,\n        McNavbarLogo\n    ],\n    declarations: [\n        McNavbar,\n        McNavbarContainer,\n        McNavbarTitle,\n        McNavbarItem,\n        McNavbarBrand,\n        McNavbarLogo\n    ]\n})\nexport class McNavbarModule {}\n","import {\n    ChangeDetectionStrategy,\n    Component,\n    ViewEncapsulation,\n    ElementRef,\n    Input\n} from '@angular/core';\nimport { CanColor, CanColorCtor, mixinColor, ThemePalette } from '@ptsecurity/mosaic/core';\n\n\nexport type ProgressBarMode = 'determinate' | 'indeterminate';\n\nlet idIterator = 0;\n\nconst MIN_PERCENT = 0;\nconst MAX_PERCENT = 100;\n\nexport class McProgressBarBase {\n    constructor(public _elementRef: ElementRef) {}\n}\n\nexport const _McProgressBarMixinBase:\n    CanColorCtor &\n    typeof McProgressBarBase =\n        mixinColor(McProgressBarBase);\n\n@Component({\n    selector: 'mc-progress-bar',\n    templateUrl: './progress-bar.component.html',\n    styleUrls: ['./progress-bar.css'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n    host: {\n        class: 'mc-progress-bar',\n        '[attr.id]': 'id'\n    }\n})\nexport class McProgressBar extends _McProgressBarMixinBase implements CanColor {\n    @Input() id: string = `mc-progress-bar-${idIterator++}`;\n    @Input() value: number = 0;\n    @Input() mode: ProgressBarMode = 'determinate';\n    @Input() color: ThemePalette = ThemePalette.Primary;\n\n    constructor(elementRef: ElementRef) {\n        super(elementRef);\n    }\n\n    get percentage(): number {\n        return Math.max(MIN_PERCENT, Math.min(MAX_PERCENT, this.value)) / MAX_PERCENT;\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { PlatformModule } from '@ptsecurity/cdk/platform';\n\nimport {\n    McProgressBar\n} from './progress-bar.component';\n\n\n@NgModule({\n    imports: [\n        CommonModule,\n        PlatformModule\n    ],\n    exports: [\n        McProgressBar\n    ],\n    declarations: [\n        McProgressBar\n    ]\n})\nexport class McProgressBarModule {}\n","import {\n    ChangeDetectionStrategy,\n    Component,\n    ViewEncapsulation,\n    ElementRef,\n    Input\n} from '@angular/core';\nimport { CanColor, CanColorCtor, mixinColor, ThemePalette } from '@ptsecurity/mosaic/core';\n\n\nexport type ProgressSpinnerMode = 'determinate' | 'indeterminate';\n\nlet idIterator = 0;\n\nconst MIN_PERCENT = 0;\nconst MAX_PERCENT = 100;\n\nexport class McProgressSpinnerBase {\n    constructor(public _elementRef: ElementRef) {}\n}\n\nexport const _McProgressSpinnerMixinBase:\n    CanColorCtor &\n    typeof McProgressSpinnerBase =\n        mixinColor(McProgressSpinnerBase);\n\nconst MAX_DASH_ARRAY = 273;\n\n@Component({\n    selector: 'mc-progress-spinner',\n    templateUrl: './progress-spinner.component.html',\n    styleUrls: ['./progress-spinner.css'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n    host: {\n        class: 'mc-progress-spinner',\n        '[attr.id]': 'id'\n    }\n})\nexport class McProgressSpinner extends _McProgressSpinnerMixinBase implements CanColor {\n    @Input() id: string = `mc-progress-spinner-${idIterator++}`;\n    @Input() value: number = 0;\n    @Input() mode: ProgressSpinnerMode = 'determinate';\n    @Input() color: ThemePalette = ThemePalette.Primary;\n\n    constructor(elementRef: ElementRef) {\n        super(elementRef);\n    }\n\n    get percentage(): number {\n        return Math.max(MIN_PERCENT, Math.min(MAX_PERCENT, this.value)) / MAX_PERCENT;\n    }\n\n    get dashOffsetPercent(): string {\n        return `${MAX_DASH_ARRAY - this.percentage * MAX_DASH_ARRAY}%`;\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { PlatformModule } from '@ptsecurity/cdk/platform';\n\nimport { McProgressSpinner } from './progress-spinner.component';\n\n\n@NgModule({\n    imports: [\n        CommonModule,\n        PlatformModule\n    ],\n    exports: [\n        McProgressSpinner\n    ],\n    declarations: [\n        McProgressSpinner\n    ]\n})\nexport class McProgressSpinnerModule {}\n","import {\n    AfterContentInit,\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component, ContentChildren, Directive, ElementRef, EventEmitter, forwardRef,\n    Input, OnDestroy, OnInit, Optional, Output, QueryList,\n    ViewChild,\n    ViewEncapsulation\n} from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\n\nimport { UniqueSelectionDispatcher } from '@ptsecurity/cdk/collections';\n\nimport {\n    CanColor, CanColorCtor,\n    CanDisable, CanDisableCtor,\n    HasTabIndex, HasTabIndexCtor,\n    mixinColor,\n    mixinDisabled,\n    mixinTabIndex,\n    toBoolean\n} from '@ptsecurity/mosaic/core';\n\n\n// Increasing integer for generating unique ids for radio components.\nlet nextUniqueId = 0;\n\n/** Change event object emitted by McRadio. */\nexport class McRadioChange {\n    constructor(\n        /** The McRadioButton that emits the change event. */\n        public source: McRadioButton,\n        /** The value of the McRadioButton. */\n        public value: any) {}\n}\n\n// Boilerplate for applying mixins to McRadioGroup.\n/** @docs-private */\nexport class McRadioGroupBase {}\nexport const _McRadioGroupMixinBase: CanDisableCtor & typeof McRadioGroupBase = mixinDisabled(McRadioGroupBase);\n\n/**\n * Provider Expression that allows mc-radio-group to register as a ControlValueAccessor. This\n * allows it to support [(ngModel)] and ngControl.\n * @docs-private\n */\nexport const MC_RADIO_GROUP_CONTROL_VALUE_ACCESSOR: any = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => McRadioGroup),\n    multi: true\n};\n\n@Directive({\n    selector: 'mc-radio-group',\n    exportAs: 'mcRadioGroup',\n    providers: [MC_RADIO_GROUP_CONTROL_VALUE_ACCESSOR],\n    host: {\n        role: 'radiogroup',\n        class: 'mc-radio-group'\n    },\n    inputs: ['disabled']\n})\nexport class McRadioGroup extends _McRadioGroupMixinBase\n    implements AfterContentInit, ControlValueAccessor, CanDisable {\n\n    /** Name of the radio button group. All radio buttons inside this group will use this name. */\n    @Input()\n    get name(): string { return this._name; }\n    set name(value: string) {\n        this._name = value;\n        this.updateRadioButtonNames();\n    }\n\n    /** Whether the labels should appear after or before the radio-buttons. Defaults to 'after' */\n    @Input()\n    get labelPosition(): 'before' | 'after' {\n        return this._labelPosition;\n    }\n    set labelPosition(v) {\n        this._labelPosition = v === 'before' ? 'before' : 'after';\n        this.markRadiosForCheck();\n    }\n\n    /** Value of the radio button. */\n    @Input()\n    get value(): any { return this._value; }\n    set value(newValue: any) {\n        if (this._value !== newValue) {\n            // Set this before proceeding to ensure no circular loop occurs with selection.\n            this._value = newValue;\n\n            this.updateSelectedRadioFromValue();\n            this.checkSelectedRadioButton();\n        }\n    }\n\n    /** Whether the radio button is selected. */\n    @Input()\n    get selected() { return this._selected; }\n    set selected(selected: McRadioButton | null) {\n        this._selected = selected;\n        this.value = selected ? selected.value : null;\n        this.checkSelectedRadioButton();\n    }\n\n    /** Whether the radio group is disabled */\n    @Input()\n    get disabled(): boolean { return this._disabled; }\n    set disabled(value) {\n        this._disabled = toBoolean(value);\n        this.markRadiosForCheck();\n    }\n\n    /** Whether the radio group is required */\n    @Input()\n    get required(): boolean { return this._required; }\n    set required(value: boolean) {\n        this._required = toBoolean(value);\n        this.markRadiosForCheck();\n    }\n\n    /**\n     * Event emitted when the group value changes.\n     * Change events are only emitted when the value changes due to user interaction with\n     * a radio button (the same behavior as `<input type-\"radio\">`).\n     */\n    @Output() readonly change: EventEmitter<McRadioChange> = new EventEmitter<McRadioChange>();\n\n    /** Child radio buttons. */\n    @ContentChildren(forwardRef(() => McRadioButton), { descendants: true })\n    _radios: QueryList<McRadioButton>;\n\n    /**\n     * Selected value for group. Should equal the value of the selected radio button if there *is*\n     * a corresponding radio button with a matching value. If there is *not* such a corresponding\n     * radio button, this value persists to be applied in case a new radio button is added with a\n     * matching value.\n     */\n    private _value: any = null;\n\n    /** The HTML name attribute applied to radio buttons in this group. */\n    private _name: string = `mc-radio-group-${nextUniqueId++}`;\n\n    /** The currently selected radio button. Should match value. */\n    private _selected: McRadioButton | null = null;\n\n    /** Whether the `value` has been set to its initial value. */\n    private _isInitialized: boolean = false;\n\n    /** Whether the labels should appear after or before the radio-buttons. Defaults to 'after' */\n    private _labelPosition: 'before' | 'after' = 'after';\n\n    /** Whether the radio group is disabled. */\n    private _disabled: boolean = false;\n\n    /** Whether the radio group is required. */\n    private _required: boolean = false;\n\n    constructor(\n        private readonly _changeDetector: ChangeDetectorRef\n    ) {\n        super();\n    }\n\n    /** The method to be called in order to update ngModel */\n    // tslint:disable-next-line\n    controlValueAccessorChangeFn: (value: any) => void = () => {};\n\n    /**\n     * onTouch function registered via registerOnTouch (ControlValueAccessor).\n     * @docs-private\n     */\n    // tslint:disable-next-line\n    onTouched: () => any = () => {};\n\n    checkSelectedRadioButton() {\n        if (this._selected && !this._selected.checked) {\n            this._selected.checked = true;\n        }\n    }\n\n    /**\n     * Initialize properties once content children are available.\n     * This allows us to propagate relevant attributes to associated buttons.\n     */\n    ngAfterContentInit() {\n        // Mark this component as initialized in AfterContentInit because the initial value can\n        // possibly be set by NgModel on McRadioGroup, and it is possible that the OnInit of the\n        // NgModel occurs *after* the OnInit of the McRadioGroup.\n        this._isInitialized = true;\n    }\n\n    /**\n     * Mark this group as being \"touched\" (for ngModel). Meant to be called by the contained\n     * radio buttons upon their blur.\n     */\n    touch() {\n        if (this.onTouched) {\n            this.onTouched();\n        }\n    }\n\n    /** Dispatch change event with current selection and group value. */\n    emitChangeEvent(): void {\n        if (this._isInitialized) {\n            this.change.emit(new McRadioChange(this._selected!, this._value));\n        }\n    }\n\n    markRadiosForCheck() {\n        if (this._radios) {\n            this._radios.forEach((radio) => radio.markForCheck());\n        }\n    }\n\n    /**\n     * Sets the model value. Implemented as part of ControlValueAccessor.\n     */\n    writeValue(value: any) {\n        this.value = value;\n        this._changeDetector.markForCheck();\n    }\n\n    /**\n     * Registers a callback to be triggered when the model value changes.\n     * Implemented as part of ControlValueAccessor.\n     * @param fn Callback to be registered.\n     */\n    registerOnChange(fn: (value: any) => void) {\n        this.controlValueAccessorChangeFn = fn;\n    }\n\n    /**\n     * Registers a callback to be triggered when the control is touched.\n     * Implemented as part of ControlValueAccessor.\n     * @param fn Callback to be registered.\n     */\n    registerOnTouched(fn: any) {\n        this.onTouched = fn;\n    }\n\n    /**\n     * Sets the disabled state of the control. Implemented as a part of ControlValueAccessor.\n     * @param isDisabled Whether the control should be disabled.\n     */\n    setDisabledState(isDisabled: boolean) {\n        this.disabled = isDisabled;\n        this._changeDetector.markForCheck();\n    }\n\n    private updateRadioButtonNames(): void {\n        if (this._radios) {\n            this._radios.forEach((radio) => {\n                radio.name = this.name;\n            });\n        }\n    }\n\n    /** Updates the `selected` radio button from the internal _value state. */\n    private updateSelectedRadioFromValue(): void {\n        // If the value already matches the selected radio, do nothing.\n        const isAlreadySelected = this._selected !== null && this._selected.value === this._value;\n\n        if (this._radios != null && !isAlreadySelected) {\n            this._selected = null;\n            this._radios.forEach((radio) => {\n                radio.checked = this.value === radio.value;\n                if (radio.checked) {\n                    this._selected = radio;\n                }\n            });\n        }\n    }\n}\n\n\n// Boilerplate for applying mixins to McRadioButton.\n/** @docs-private */\nexport class McRadioButtonBase {\n    // Since the disabled property is manually defined for the McRadioButton and isn't set up in\n    // the mixin base class. To be able to use the tabindex mixin, a disabled property must be\n    // defined to properly work.\n    disabled: boolean;\n\n    constructor(public _elementRef: ElementRef) {}\n}\n\nexport const _McRadioButtonMixinBase:\n    CanColorCtor &\n    HasTabIndexCtor &\n    typeof McRadioButtonBase =\n        mixinColor(mixinTabIndex(McRadioButtonBase));\n\n\n@Component({\n    selector: 'mc-radio-button',\n    templateUrl: 'radio.component.html',\n    styleUrls: ['radio.css'],\n    inputs: ['color', 'tabIndex'],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    exportAs: 'mcRadioButton',\n    host: {\n        class: 'mc-radio-button',\n        '[attr.id]': 'id',\n        '[class.mc-checked]': 'checked',\n        '[class.mc-disabled]': 'disabled',\n        '(focus)': '_inputElement.nativeElement.focus()'\n    }\n})\nexport class McRadioButton extends _McRadioButtonMixinBase\n    implements OnInit, OnDestroy, CanColor, HasTabIndex {\n\n    private readonly _uniqueId: string = `mc-radio-${++nextUniqueId}`;\n\n    /* tslint:disable:member-ordering */\n\n    /** The unique ID for the radio button. */\n    @Input() id: string = this._uniqueId;\n\n    /** Analog to HTML 'name' attribute used to group radios for unique selection. */\n    @Input() name: string;\n\n    /** Used to set the 'aria-label' attribute on the underlying input element. */\n    @Input('aria-label') ariaLabel: string;\n\n    /** The 'aria-labelledby' attribute takes precedence as the element's text alternative. */\n    @Input('aria-labelledby') ariaLabelledby: string;\n\n    /** The 'aria-describedby' attribute is read after the element's label and field type. */\n    @Input('aria-describedby') ariaDescribedby: string;\n\n    /** Whether this radio button is checked. */\n    @Input()\n    get checked(): boolean { return this._checked; }\n    set checked(value: boolean) {\n        const newCheckedState = toBoolean(value);\n\n        if (this._checked !== newCheckedState) {\n            this._checked = newCheckedState;\n\n            if (newCheckedState && this.radioGroup && this.radioGroup.value !== this.value) {\n                this.radioGroup.selected = this;\n            } else if (!newCheckedState && this.radioGroup && this.radioGroup.value === this.value) {\n                // When unchecking the selected radio button, update the selected radio\n                // property on the group.\n                this.radioGroup.selected = null;\n            }\n\n            if (newCheckedState) {\n                // Notify all radio buttons with the same name to un-check.\n                this._radioDispatcher.notify(this.id, this.name);\n            }\n            this._changeDetector.markForCheck();\n        }\n    }\n\n    /** The value of this radio button. */\n    @Input()\n    get value(): any { return this._value; }\n    set value(value: any) {\n        if (this._value !== value) {\n            this._value = value;\n            if (this.radioGroup != null) {\n                if (!this.checked) {\n                    // Update checked when the value changed to match the radio group's value\n                    this.checked = this.radioGroup.value === value;\n                }\n                if (this.checked) {\n                    this.radioGroup.selected = this;\n                }\n            }\n        }\n    }\n\n    /** Whether the radio button is disabled. */\n    @Input()\n    get disabled(): boolean {\n        return this._disabled || (this.radioGroup != null && this.radioGroup.disabled);\n    }\n    set disabled(value: boolean) {\n        const newDisabledState = toBoolean(value);\n\n        if (this._disabled !== newDisabledState) {\n\n            this._disabled = newDisabledState;\n            this._changeDetector.markForCheck();\n        }\n    }\n\n    /** Whether the radio button is required. */\n    @Input()\n    get required(): boolean {\n        return this._required || (this.radioGroup && this.radioGroup.required);\n    }\n    set required(value: boolean) {\n        this._required = toBoolean(value);\n    }\n\n    /** Whether the label should appear after or before the radio button. Defaults to 'after' */\n    @Input()\n    get labelPosition(): 'before' | 'after' {\n        return this._labelPosition || (this.radioGroup && this.radioGroup.labelPosition) || 'after';\n    }\n    set labelPosition(value) {\n        this._labelPosition = value;\n    }\n    private _labelPosition: 'before' | 'after';\n\n    /** The native `<input type=radio>` element */\n    @ViewChild('input') _inputElement: ElementRef;\n\n    /**\n     * Event emitted when the checked state of this radio button changes.\n     * Change events are only emitted when the value changes due to user interaction with\n     * the radio button (the same behavior as `<input type-\"radio\">`).\n     */\n    @Output() readonly change: EventEmitter<McRadioChange> = new EventEmitter<McRadioChange>();\n\n    /** The parent radio group. May or may not be present. */\n    radioGroup: McRadioGroup;\n\n    @Input()\n    isFocused: boolean = false;\n\n    /** ID of the native input element inside `<mc-radio-button>` */\n    get inputId(): string { return `${this.id || this._uniqueId}-input`; }\n\n    /** Whether this radio is checked. */\n    private _checked: boolean = false;\n\n    /** Whether this radio is disabled. */\n    private _disabled: boolean;\n\n    /** Whether this radio is required. */\n    private _required: boolean;\n\n    /** Value assigned to this radio. */\n    private _value: any = null;\n\n    /** Unregister function for _radioDispatcher */\n    // tslint:disable-next-line\n    private readonly removeUniqueSelectionListener: () => void = () => {};\n\n    constructor(\n        @Optional() radioGroup: McRadioGroup,\n        elementRef: ElementRef,\n        private readonly _changeDetector: ChangeDetectorRef,\n        private readonly _radioDispatcher: UniqueSelectionDispatcher\n    ) {\n\n        super(elementRef);\n\n        this.radioGroup = radioGroup;\n\n        this.removeUniqueSelectionListener =\n            _radioDispatcher.listen((id: string, name: string) => {\n                if (id !== this.id && name === this.name) {\n                    this.checked = false;\n                }\n            });\n    }\n\n    ngOnInit() {\n        if (this.radioGroup) {\n            // If the radio is inside a radio group, determine if it should be checked\n            this.checked = this.radioGroup.value === this._value;\n            // Copy name from parent radio group\n            this.name = this.radioGroup.name;\n        }\n    }\n\n    ngOnDestroy() {\n        this.removeUniqueSelectionListener();\n    }\n\n    /** Focuses the radio button. */\n    // tslint:disable-next-line\n    focus(): void {}\n\n    /**\n     * Marks the radio button as needing checking for change detection.\n     * This method is exposed because the parent radio group will directly\n     * update bound properties of the radio button.\n     */\n    markForCheck() {\n        // When group value changes, the button will not be notified. Use `markForCheck` to explicit\n        // update radio button's status\n        this._changeDetector.markForCheck();\n    }\n\n    onInputClick(event: Event) {\n        // We have to stop propagation for click events on the visual hidden input element.\n        // By default, when a user clicks on a label element, a generated click event will be\n        // dispatched on the associated input element. Since we are using a label element as our\n        // root container, the click event on the `radio-button` will be executed twice.\n        // The real click event will bubble up, and the generated click event also tries to bubble up.\n        // This will lead to multiple click events.\n        // Preventing bubbling for the second event will solve that issue.\n        event.stopPropagation();\n    }\n\n    onInputChange(event: Event) {\n        // We always have to stop propagation on the change event.\n        // Otherwise the change event, from the input element, will bubble up and\n        // emit its event object to the `change` output.\n        event.stopPropagation();\n\n        const groupValueChanged = this.radioGroup && this.value !== this.radioGroup.value;\n        this.checked = true;\n        this.emitChangeEvent();\n\n        if (this.radioGroup) {\n            this.radioGroup.controlValueAccessorChangeFn(this.value);\n            this.radioGroup.touch();\n            if (groupValueChanged) {\n                this.radioGroup.emitChangeEvent();\n            }\n        }\n    }\n\n    /** Dispatch change event with current value. */\n    private emitChangeEvent(): void {\n        this.change.emit(new McRadioChange(this, this._value));\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { A11yModule } from '@ptsecurity/cdk/a11y';\nimport { McCommonModule } from '@ptsecurity/mosaic/core';\n\nimport { McRadioButton, McRadioGroup } from './radio.component';\n\n\n@NgModule({\n    imports: [CommonModule, A11yModule, McCommonModule],\n    exports: [McRadioGroup, McRadioButton],\n    declarations: [McRadioGroup, McRadioButton]\n})\nexport class McRadioModule {\n}\n","import { Directive, Input } from '@angular/core';\n\nimport { CdkTreeNodeDef } from '@ptsecurity/cdk/tree';\n\n\n@Directive({\n    selector: '[mcTreeNodeDef]',\n    inputs: ['when: mcTreeNodeDefWhen'],\n    providers: [{ provide: CdkTreeNodeDef, useExisting: McTreeNodeDef }]\n})\nexport class McTreeNodeDef<T> extends CdkTreeNodeDef<T> {\n    @Input('mcTreeNode') data: T;\n}\n","import { Directive, Input, OnInit } from '@angular/core';\nimport { CdkTreeNodePadding } from '@ptsecurity/cdk/tree';\n\n\n@Directive({\n    selector: '[mcTreeNodePadding]',\n    providers: [{ provide: CdkTreeNodePadding, useExisting: McTreeNodePadding }]\n})\nexport class McTreeNodePadding<T> extends CdkTreeNodePadding<T> implements OnInit {\n    get leftPadding(): number {\n        return (this._withIcon ? 0 : this._iconWidth) + this._baseLeftPadding;\n    }\n\n    _baseLeftPadding: number = 6;\n    _iconWidth: number = 20;\n    _indent: number = 16;\n\n    @Input('mcTreeNodePadding') level: number;\n\n    @Input('mcTreeNodePaddingIndent') indent: number;\n\n    _withIcon: boolean;\n\n    _paddingIndent(): string | null {\n        const nodeLevel = (this._treeNode.data && this._tree.treeControl.getLevel)\n            ? this._tree.treeControl.getLevel(this._treeNode.data)\n            : null;\n\n        const level = this._level || nodeLevel;\n\n        return level ? `${(level * this._indent) + this.leftPadding}px` : `${this._baseLeftPadding}px`;\n    }\n\n    ngOnInit(): void {\n        this._withIcon = this._tree.treeControl.isExpandable(this._treeNode.data);\n        this._setPadding();\n    }\n}\n","import {\n    AfterContentInit,\n    Attribute,\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component, ContentChildren, EventEmitter, forwardRef, Input, IterableDiffer,\n    IterableDiffers, Output, QueryList,\n    ViewChild,\n    ViewEncapsulation,\n    Directive, ElementRef, Inject\n} from '@angular/core';\nimport { NodeDef, ViewData } from '@angular/core/src/view';\n\nimport { SelectionModel } from '@ptsecurity/cdk/collections';\nimport { CdkTreeNode, CdkTree, CdkTreeNodeOutlet } from '@ptsecurity/cdk/tree';\n\nimport {\n    CanDisable, CanDisableCtor,\n    HasTabIndex,\n    HasTabIndexCtor,\n    mixinDisabled,\n    mixinTabIndex,\n    toBoolean\n} from '@ptsecurity/mosaic/core';\n\nimport { FocusKeyManager } from '@ptsecurity/cdk/a11y';\n\nimport { END, ENTER, HOME, LEFT_ARROW, PAGE_DOWN, PAGE_UP, RIGHT_ARROW, SPACE } from '@ptsecurity/cdk/keycodes';\n\n\n/**\n * Wrapper for the CdkTree node with Material design styles.\n */\n@Directive({\n    exportAs: 'mcTreeNodeOption',\n    selector: 'mc-tree-node-option',\n    host: {\n        tabindex: '-1',\n        '[class.mc-selected]': 'selected',\n        '[class.mc-focused]': '_hasFocus',\n        '[attr.aria-expanded]': 'isExpanded',\n        '[attr.aria-level]': 'role === \"treeitem\" ? level : null',\n        class: 'mc-tree-node',\n\n        '(focus)': '_handleFocus()',\n        '(blur)': '_handleBlur()',\n\n        '(click)': '_handleClick()'\n    },\n    providers: [\n        { provide: CdkTreeNode, useExisting: McTreeNodeOption }\n    ]\n})\nexport class McTreeNodeOption<T> extends CdkTreeNode<T> implements CanDisable {\n    @Input() role: 'treeitem' | 'group' = 'treeitem';\n\n    @Input()\n    get disabled() {\n        return this._disabled;\n    }\n\n    set disabled(value: any) {\n        const newValue = toBoolean(value);\n\n        if (newValue !== this._disabled) {\n            this._disabled = newValue;\n        }\n    }\n\n    @Input()\n    get selected(): boolean {\n        return this.treeSelection.selectedOptions && this.treeSelection.selectedOptions.isSelected(this) || false;\n    }\n\n    set selected(value: boolean) {\n        const isSelected = toBoolean(value);\n\n        if (isSelected !== this._selected) {\n            this.setSelected(isSelected);\n\n            // this.treeSelection._reportValueChange();\n        }\n    }\n\n    private _hasFocus: boolean = false;\n\n    private _disabled: boolean = false;\n    private _selected: boolean = false;\n\n    constructor(\n        protected _elementRef: ElementRef,\n        @Inject(forwardRef(() => McTreeSelection))\n        protected treeSelection: McTreeSelection<T>\n    ) {\n        super(_elementRef, treeSelection);\n    }\n\n    focus(): void {\n        this._elementRef.nativeElement.focus();\n\n        this.treeSelection.setFocusedOption(this);\n    }\n\n    toggle(): void {\n        this.selected = !this.selected;\n    }\n\n    setSelected(selected: boolean) {\n        if (this._selected === selected || !this.treeSelection.selectedOptions) { return; }\n\n        this._selected = selected;\n\n        if (selected) {\n            this.treeSelection.selectedOptions.select(this);\n        } else {\n            this.treeSelection.selectedOptions.deselect(this);\n        }\n\n        // this._changeDetector.markForCheck();\n    }\n\n    _getHeight(): number {\n        return this._elementRef.nativeElement.getClientRects()[0].height;\n    }\n\n    _handleFocus(): void {\n        if (this.disabled || this._hasFocus) { return; }\n\n        this._hasFocus = true;\n    }\n\n    _handleBlur(): void {\n        this._hasFocus = false;\n    }\n\n    _handleClick(): void {\n        if (this.disabled) { return; }\n\n        this.treeSelection.setFocusedOption(this);\n    }\n}\n\nexport const _McTreeSelectionBase:\n    HasTabIndexCtor &\n    CanDisableCtor &\n    typeof CdkTree\n    = mixinTabIndex(mixinDisabled(CdkTree));\n\nexport class McTreeNavigationChange {\n    constructor(\n        public source: McTreeSelection<any>,\n        public option: McTreeNodeOption<any>\n    ) {}\n}\n\nexport class McTreeSelectionChange {\n    constructor(\n        public source: McTreeSelection<any>,\n        public option: McTreeNodeOption<any>\n    ) {}\n}\n\n@Component({\n    exportAs: 'mcTreeSelection',\n    selector: 'mc-tree-selection',\n    template: `<ng-container cdkTreeNodeOutlet></ng-container>`,\n    host: {\n        '[tabIndex]': 'tabIndex',\n        class: 'mc-tree-selection',\n        role: 'tree-selection',\n        '(keydown)': '_onKeyDown($event)',\n        '(window:resize)': 'updateScrollSize()'\n    },\n    styleUrls: ['./tree.css'],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    providers: [{ provide: CdkTree, useExisting: McTreeSelection }]\n})\nexport class McTreeSelection<T> extends _McTreeSelectionBase<T>\n    implements AfterContentInit, CanDisable, HasTabIndex {\n    // Outlets within the tree's template where the dataNodes will be inserted.\n    @ViewChild(CdkTreeNodeOutlet) _nodeOutlet: CdkTreeNodeOutlet;\n\n    @ContentChildren(forwardRef(() => McTreeNodeOption)) options: QueryList<McTreeNodeOption<T>>;\n\n    _keyManager: FocusKeyManager<McTreeNodeOption<T>>;\n\n    selectedOptions: SelectionModel<McTreeNodeOption<T>>;\n\n    _disabled: boolean = false;\n    tabIndex: number;\n    multiple: boolean;\n    autoSelect: boolean;\n    noUnselect: boolean;\n\n    // todo temporary solution\n    withShift: boolean;\n    withCtrl: boolean;\n\n    @Input()\n    get disabled(): boolean {\n        return this._disabled;\n    }\n\n    set disabled(rawValue: boolean) {\n        const value = toBoolean(rawValue);\n\n        if (this._disabled !== value) {\n            this._disabled = value;\n\n            if (this._disabled) {\n                console.log('need disable all options');\n            } else {\n                console.log('need enable all options');\n            }\n        }\n    }\n\n    @Output() readonly navigationChange = new EventEmitter<McTreeNavigationChange>();\n\n    @Output() readonly selectionChange = new EventEmitter<McTreeSelectionChange>();\n\n    constructor(\n        private _elementRef: ElementRef,\n        _differs: IterableDiffers,\n        _changeDetectorRef: ChangeDetectorRef,\n        @Attribute('tabindex') tabIndex: string,\n        @Attribute('multiple') multiple: string,\n        @Attribute('auto-select') autoSelect: string,\n        @Attribute('no-unselect') noUnselect: string\n    ) {\n        super(_differs, _changeDetectorRef);\n\n        this.tabIndex = parseInt(tabIndex) || 0;\n\n        this.multiple = multiple === null ? true : toBoolean(multiple);\n        this.autoSelect = autoSelect === null ? true : toBoolean(autoSelect);\n        this.noUnselect = noUnselect === null ? true : toBoolean(noUnselect);\n\n        this.selectedOptions = new SelectionModel<McTreeNodeOption<T>>(this.multiple);\n    }\n\n    _onKeyDown(event: KeyboardEvent) {\n        const keyCode = event.keyCode;\n        this.withShift = event.shiftKey;\n        this.withCtrl = event.ctrlKey;\n\n        switch (keyCode) {\n            case LEFT_ARROW:\n                if (this._keyManager.activeItem) {\n                    this.treeControl.collapse(this._keyManager.activeItem.data);\n                }\n\n                event.preventDefault();\n\n                break;\n            case RIGHT_ARROW:\n                if (this._keyManager.activeItem) {\n                    this.treeControl.expand(this._keyManager.activeItem.data);\n                }\n\n                event.preventDefault();\n\n                break;\n            case SPACE:\n            case ENTER:\n                this.toggleFocusedOption();\n                event.preventDefault();\n\n                break;\n            case HOME:\n                this._keyManager.setFirstItemActive();\n                event.preventDefault();\n\n                break;\n            case END:\n                this._keyManager.setLastItemActive();\n                event.preventDefault();\n\n                break;\n            case PAGE_UP:\n                this._keyManager.setPreviousPageItemActive();\n                event.preventDefault();\n\n                break;\n            case PAGE_DOWN:\n                this._keyManager.setNextPageItemActive();\n                event.preventDefault();\n\n                break;\n            default:\n                this._keyManager.onKeydown(event);\n        }\n    }\n\n    ngAfterContentInit(): void {\n        this._keyManager = new FocusKeyManager<McTreeNodeOption<T>>(this.options)\n            .withTypeAhead()\n            .withVerticalOrientation(true)\n            .withHorizontalOrientation(null);\n    }\n\n    updateScrollSize(): void {\n        if (!this.options.first) { return; }\n\n        this._keyManager.withScrollSize(Math.floor(this._getHeight() / this.options.first._getHeight()));\n    }\n\n    setFocusedOption(option: McTreeNodeOption<T>): void {\n        this._keyManager.updateActiveItem(option);\n\n        if (this.withShift && this.multiple) {\n            const previousIndex = this._keyManager.previousActiveItemIndex;\n            const activeIndex = this._keyManager.activeItemIndex;\n\n            if (previousIndex < activeIndex) {\n                this.options.forEach((item, index) => {\n                    if (index >= previousIndex && index <= activeIndex) { item.setSelected(true); }\n                });\n            } else {\n                this.options.forEach((item, index) => {\n                    if (index >= activeIndex && index <= previousIndex) { item.setSelected(true); }\n                });\n            }\n\n            this.withShift = false;\n        } else if (this.withCtrl) {\n            this.withCtrl = false;\n\n            if (!this._canDeselectLast(option)) { return; }\n\n            option.toggle();\n        } else {\n            if (this.autoSelect) {\n                this.options.forEach((item) => item.setSelected(false));\n                option.setSelected(true);\n            }\n        }\n\n        this._emitNavigationEvent(option);\n    }\n\n    // Toggles the selected state of the currently focused option.\n    toggleFocusedOption(): void {\n        const focusedIndex = this._keyManager.activeItemIndex;\n\n        if (focusedIndex != null && this._isValidIndex(focusedIndex)) {\n            const focusedOption: McTreeNodeOption<T> = this.options.toArray()[focusedIndex];\n\n            if (focusedOption && this._canDeselectLast(focusedOption)) {\n                focusedOption.toggle();\n\n                // Emit a change event because the focused option changed its state through user interaction.\n                this._emitChangeEvent(focusedOption);\n            }\n        }\n    }\n\n    renderNodeChanges(\n        data: T[],\n        dataDiffer: IterableDiffer<T> = this._dataDiffer,\n        viewContainer: any = this._nodeOutlet.viewContainer,\n        parentData?: T\n    ) {\n        super.renderNodeChanges(data, dataDiffer, viewContainer, parentData);\n\n        const arrayOfInstances = [];\n\n        viewContainer._embeddedViews.forEach((view: ViewData) => {\n            const viewDef = view.def;\n\n            viewDef.nodes.forEach((node: NodeDef) => {\n                if (viewDef.nodeMatchedQueries === node.matchedQueryIds) {\n                    const nodeData: any = view.nodes[node.nodeIndex];\n\n                    arrayOfInstances.push(nodeData.instance as never);\n                }\n            });\n        });\n\n        if (this.options) {\n            this.options.reset(arrayOfInstances);\n            this.options.notifyOnChanges();\n        }\n\n        this.updateScrollSize();\n    }\n\n    _getHeight(): number {\n        return this._elementRef.nativeElement.getClientRects()[0].height;\n    }\n\n    _emitNavigationEvent(option: McTreeNodeOption<T>): void {\n        this.navigationChange.emit(new McTreeNavigationChange(this, option));\n    }\n\n    _emitChangeEvent(option: McTreeNodeOption<T>): void {\n        this.selectionChange.emit(new McTreeNavigationChange(this, option));\n    }\n\n    /**\n     * Utility to ensure all indexes are valid.\n     * @param index The index to be checked.\n     * @returns True if the index is valid for our list of options.\n     */\n    private _isValidIndex(index: number): boolean {\n        return index >= 0 && index < this.options.length;\n    }\n\n    private _canDeselectLast(option: McTreeNodeOption<T>): boolean {\n        return !(this.noUnselect && this.selectedOptions.selected.length === 1 && option.selected);\n    }\n}\n\n","import { NgModule } from '@angular/core';\n\nimport { CommonModule } from '@angular/common';\nimport { CdkTreeModule } from '@ptsecurity/cdk/tree';\n\nimport { McTreeNodeDef } from './node';\nimport { McTreeNodePadding } from './padding';\nimport { McTreeSelection, McTreeNodeOption } from './tree-selection';\n\n\nconst MC_TREE_DIRECTIVES = [\n    McTreeNodeDef,\n    McTreeNodePadding,\n    McTreeSelection,\n    McTreeNodeOption\n];\n\n@NgModule({\n    imports: [CommonModule, CdkTreeModule],\n    exports: MC_TREE_DIRECTIVES,\n    declarations: MC_TREE_DIRECTIVES\n})\nexport class McTreeModule {}\n","import { ICollectionViewer, DataSource } from '@ptsecurity/cdk/collections';\nimport { FlatTreeControl, ITreeControl } from '@ptsecurity/cdk/tree';\nimport { BehaviorSubject, merge, Observable } from 'rxjs';\nimport { map, take } from 'rxjs/operators';\n\n\n/**\n * Tree flattener to convert a normal type of node to node with children & level information.\n * Transform nested nodes of type `T` to flattened nodes of type `F`.\n *\n * For example, the input data of type `T` is nested, and contains its children data:\n *   SomeNode: {\n *     key: 'Fruits',\n *     children: [\n *       NodeOne: {\n *         key: 'Apple',\n *       },\n *       NodeTwo: {\n *        key: 'Pear',\n *      }\n *    ]\n *  }\n *  After flattener flatten the tree, the structure will become\n *  SomeNode: {\n *    key: 'Fruits',\n *    expandable: true,\n *    level: 1\n *  },\n *  NodeOne: {\n *    key: 'Apple',\n *    expandable: false,\n *    level: 2\n *  },\n *  NodeTwo: {\n *   key: 'Pear',\n *   expandable: false,\n *   level: 2\n * }\n * and the output flattened type is `F` with additional information.\n */\nexport class McTreeFlattener<T, F> {\n\n    constructor(public transformFunction: (node: T, level: number) => F,\n                public getLevel: (node: F) => number,\n                public isExpandable: (node: F) => boolean,\n                public getChildren: (node: T) => Observable<T[]>) {\n    }\n\n    _flattenNode(node: T, level: number,\n                 resultNodes: F[], parentMap: boolean[]): F[] {\n        const flatNode = this.transformFunction(node, level);\n        resultNodes.push(flatNode);\n\n        if (this.isExpandable(flatNode)) {\n            this.getChildren(node).pipe(take(1)).subscribe((children) => {\n                children.forEach((child, index) => {\n                    const childParentMap: boolean[] = parentMap.slice();\n                    childParentMap.push(index !== children.length - 1);\n                    this._flattenNode(child, level + 1, resultNodes, childParentMap);\n                });\n            });\n        }\n\n        return resultNodes;\n    }\n\n    /**\n     * Flatten a list of node type T to flattened version of node F.\n     * Please note that type T may be nested, and the length of `structuredData` may be different\n     * from that of returned list `F[]`.\n     */\n    flattenNodes(structuredData: T[]): F[] {\n        const resultNodes: F[] = [];\n        structuredData.forEach((node) => this._flattenNode(node, 0, resultNodes, []));\n\n        return resultNodes;\n    }\n\n    /**\n     * Expand flattened node with current expansion status.\n     * The returned list may have different length.\n     */\n    expandFlattenedNodes(nodes: F[], treeControl: ITreeControl<F>): F[] {\n        const results: F[] = [];\n        const currentExpand: boolean[] = [];\n        currentExpand[0] = true;\n\n        nodes.forEach((node) => {\n            let expand = true;\n            for (let i = 0; i <= this.getLevel(node); i++) {\n                expand = expand && currentExpand[i];\n            }\n\n            if (expand) { results.push(node); }\n\n            if (this.isExpandable(node)) {\n                currentExpand[this.getLevel(node) + 1] = treeControl.isExpanded(node);\n            }\n        });\n\n        return results;\n    }\n}\n\n\n/**\n * Data source for flat tree.\n * The data source need to handle expansion/collapsion of the tree node and change the data feed\n * to `McTree`.\n * The nested tree nodes of type `T` are flattened through `MсTreeFlattener`, and converted\n * to type `F` for `McTree` to consume.\n */\nexport class McTreeFlatDataSource<T, F> extends DataSource<F> {\n    _flattenedData = new BehaviorSubject<F[]>([]);\n\n    _expandedData = new BehaviorSubject<F[]>([]);\n\n    _data: BehaviorSubject<T[]>;\n\n    get data() {\n        return this._data.value;\n    }\n\n    set data(value: T[]) {\n        this._data.next(value);\n        this._flattenedData.next(this.treeFlattener.flattenNodes(this.data));\n        this.treeControl.dataNodes = this._flattenedData.value;\n    }\n\n    constructor(private treeControl: FlatTreeControl<F>,\n                private treeFlattener: McTreeFlattener<T, F>,\n                initialData: T[] = []) {\n        super();\n        this._data = new BehaviorSubject<T[]>(initialData);\n    }\n\n    connect(collectionViewer: ICollectionViewer): Observable<F[]> {\n        const changes = [\n            collectionViewer.viewChange,\n            this.treeControl.expansionModel.onChange!,\n            this._flattenedData\n        ];\n\n        return merge(...changes).pipe(map(() => {\n            this._expandedData.next(\n                this.treeFlattener.expandFlattenedNodes(this._flattenedData.value, this.treeControl));\n\n            return this._expandedData.value;\n        }));\n    }\n\n    disconnect() {\n        // no op\n    }\n}\n\n","import { ICollectionViewer, DataSource } from '@ptsecurity/cdk/collections';\nimport { BehaviorSubject, merge, Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\n\n/**\n * Data source for nested tree.\n *\n * The data source for nested tree doesn't have to consider node flattener, or the way to expand\n * or collapse. The expansion/collapsion will be handled by ITreeControl and each non-leaf node.\n */\nexport class McTreeNestedDataSource<T> extends DataSource<T> {\n    _data = new BehaviorSubject<T[]>([]);\n\n    /**\n     * Data for the nested tree\n     */\n    get data() {\n        return this._data.value;\n    }\n\n    set data(value: T[]) {\n        this._data.next(value);\n    }\n\n    connect(collectionViewer: ICollectionViewer): Observable<T[]> {\n        return merge(...[collectionViewer.viewChange, this._data])\n            .pipe(map(() => this.data));\n    }\n\n    disconnect() {\n        // no op\n    }\n}\n\n","import { Directive, TemplateRef } from '@angular/core';\n\n\n/** Decorates the `ng-template` tags and reads out the template from it. */\n@Directive({ selector: '[mcTabContent]' })\nexport class McTabContent {\n    constructor(public template: TemplateRef<any>) { }\n}\n","import { Directive } from '@angular/core';\nimport { CdkPortal } from '@ptsecurity/cdk/portal';\n\n\n/** Used to flag tab labels for use with the portal directive */\n@Directive({\n    selector: '[mc-tab-label], [mcTabLabel]'\n})\nexport class McTabLabel extends CdkPortal {}\n\n// TODO: workaround for https://github.com/angular/material2/issues/12760\n(McTabLabel as any).ctorParameters = () => (CdkPortal as any).ctorParameters;\n","import {\n    ChangeDetectionStrategy,\n    Component,\n    ContentChild,\n    Input,\n    OnChanges,\n    OnDestroy,\n    OnInit,\n    SimpleChanges,\n    TemplateRef,\n    ViewChild,\n    ViewContainerRef,\n    ViewEncapsulation\n} from '@angular/core';\nimport { TemplatePortal } from '@ptsecurity/cdk/portal';\nimport {\n    CanDisable,\n    CanDisableCtor,\n    mixinDisabled\n} from '@ptsecurity/mosaic/core';\nimport { Subject } from 'rxjs';\n\nimport { McTabContent } from './tab-content';\nimport { McTabLabel } from './tab-label';\n\n\nexport class McTabBase {}\nexport const mcTabMixinBase: CanDisableCtor & typeof McTabBase = mixinDisabled(\n    McTabBase\n);\n\n@Component({\n    selector: 'mc-tab',\n    // Create a template for the content of the <mc-tab> so that we can grab a reference to this\n    // TemplateRef and use it in a Portal to render the tab content in the appropriate place in the\n    // tab-group.\n    template: '<ng-template><ng-content></ng-content></ng-template>',\n    inputs: ['disabled'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n    exportAs: 'mcTab'\n})\nexport class McTab extends mcTabMixinBase\n    implements OnInit, CanDisable, OnChanges, OnDestroy {\n    /** @docs-private */\n    get content(): TemplatePortal | null {\n        return this.contentPortal;\n    }\n    /** Content for the tab label given by `<ng-template mc-tab-label>`. */\n    @ContentChild(McTabLabel)\n    templateLabel: McTabLabel;\n\n    /**\n     * Template provided in the tab content that will be used if present, used to enable lazy-loading\n     */\n    @ContentChild(McTabContent, { read: TemplateRef })\n    explicitContent: TemplateRef<any>;\n\n    /** Template inside the McTab view that contains an `<ng-content>`. */\n    @ViewChild(TemplateRef)\n    implicitContent: TemplateRef<any>;\n\n    /** Plain text label for the tab, used when there is no template label. */\n    @Input('label')\n    textLabel: string = '';\n\n    /** Aria label for the tab. */\n    @Input('aria-label')\n    ariaLabel: string;\n\n    /**\n     * Reference to the element that the tab is labelled by.\n     * Will be cleared if `aria-label` is set at the same time.\n     */\n    @Input('aria-labelledby')\n    ariaLabelledby: string;\n\n    /** Emits whenever the internal state of the tab changes. */\n    readonly stateChanges = new Subject<void>();\n\n    /**\n     * The relatively indexed position where 0 represents the center, negative is left, and positive\n     * represents the right.\n     */\n    position: number | null = null;\n\n    /**\n     * The initial relatively index origin of the tab if it was created and selected after there\n     * was already a selected tab. Provides context of what position the tab should originate from.\n     */\n    origin: number | null = null;\n\n    /**\n     * Whether the tab is currently active.\n     */\n    isActive = false;\n\n    /** Portal that will be the hosted content of the tab */\n    private contentPortal: TemplatePortal | null = null;\n\n    constructor(private viewContainerRef: ViewContainerRef) {\n        super();\n    }\n\n    ngOnChanges(changes: SimpleChanges): void {\n        if (\n            changes.hasOwnProperty('textLabel') ||\n            changes.hasOwnProperty('disabled')\n        ) {\n            this.stateChanges.next();\n        }\n    }\n\n    ngOnDestroy(): void {\n        this.stateChanges.complete();\n    }\n\n    ngOnInit(): void {\n        this.contentPortal = new TemplatePortal(\n            this.explicitContent || this.implicitContent,\n            this.viewContainerRef\n        );\n    }\n}\n","import {\n    animate,\n    state,\n    style,\n    transition,\n    trigger,\n    AnimationTriggerMetadata\n} from '@angular/animations';\n\n\nexport const mcTabsAnimations: {\n    readonly translateTab: AnimationTriggerMetadata;\n} = {\n    /** Animation translates a tab along the X axis. */\n    translateTab: trigger('translateTab', [\n        // Note: transitions to `none` instead of 0, because some browsers might blur the content.\n        state(\n            'center, void, left-origin-center, right-origin-center',\n            style({ transform: 'none' })\n        ),\n\n        // If the tab is either on the left or right, we additionally add a `min-height` of 1px\n        // in order to ensure that the element has a height before its state changes. This is\n        // necessary because Chrome does seem to skip the transition in RTL mode if the element does\n        // not have a static height and is not rendered. See related issue: #9465\n        state(\n            'left',\n            style({ transform: 'translate3d(-100%, 0, 0)', minHeight: '1px' })\n        ),\n        state(\n            'right',\n            style({ transform: 'translate3d(100%, 0, 0)', minHeight: '1px' })\n        ),\n\n        transition(\n            '* => left, * => right, left => center, right => center',\n            animate('{{animationDuration}} cubic-bezier(0.35, 0, 0.25, 1)')\n        ),\n        transition('void => left-origin-center', [\n            style({ transform: 'translate3d(-100%, 0, 0)' }),\n            animate('{{animationDuration}} cubic-bezier(0.35, 0, 0.25, 1)')\n        ]),\n        transition('void => right-origin-center', [\n            style({ transform: 'translate3d(100%, 0, 0)' }),\n            animate('{{animationDuration}} cubic-bezier(0.35, 0, 0.25, 1)')\n        ])\n    ])\n};\n","import { Injectable, Optional, SkipSelf } from '@angular/core';\nimport { Subject, Subscription } from 'rxjs';\n\nimport { McModalRef } from './modal-ref.class';\n\n\ninterface IRegisteredMeta {\n    modalRef: McModalRef;\n    afterOpenSubscription: Subscription;\n    afterCloseSubscription: Subscription;\n}\n\n@Injectable()\nexport class McModalControlService {\n\n    // Track singleton afterAllClose through over the injection tree\n    get afterAllClose(): Subject<void> {\n        return this.parentService ? this.parentService.afterAllClose : this.rootAfterAllClose;\n    }\n\n    // Track singleton openModals array through over the injection tree\n    get openModals(): McModalRef[] {\n        return this.parentService ? this.parentService.openModals : this.rootOpenModals;\n    }\n\n    // @ts-ignore\n    private rootOpenModals: McModalRef[] = this.parentService ? null : [];\n    // @ts-ignore\n    private rootAfterAllClose: Subject<void> = this.parentService ? null : new Subject<void>();\n    // @ts-ignore\n    private rootRegisteredMetaMap: Map<McModalRef, IRegisteredMeta> = this.parentService ? null : new Map();\n\n    // Registered modal for later usage\n    private get registeredMetaMap(): Map<McModalRef, IRegisteredMeta> {\n        return this.parentService ? this.parentService.registeredMetaMap : this.rootRegisteredMetaMap;\n    }\n\n    constructor(\n        @Optional() @SkipSelf() private parentService: McModalControlService) {\n    }\n\n    // Register a modal to listen its open/close\n    registerModal(modalRef: McModalRef): void {\n        if (!this.hasRegistered(modalRef)) {\n            const afterOpenSubscription = modalRef.afterOpen.subscribe(() => this.openModals.push(modalRef));\n            const afterCloseSubscription = modalRef.afterClose.subscribe(() => this.removeOpenModal(modalRef));\n\n            this.registeredMetaMap.set(modalRef, {modalRef, afterOpenSubscription, afterCloseSubscription});\n        }\n    }\n\n    hasRegistered(modalRef: McModalRef): boolean {\n        return this.registeredMetaMap.has(modalRef);\n    }\n\n    // Close all registered opened modals\n    closeAll(): void {\n        let i = this.openModals.length;\n\n        while (i--) {\n            this.openModals[i].close();\n        }\n    }\n\n    private removeOpenModal(modalRef: McModalRef): void {\n        const index = this.openModals.indexOf(modalRef);\n\n        if (index > -1) {\n            this.openModals.splice(index, 1);\n\n            if (!this.openModals.length) {\n                this.afterAllClose.next();\n            }\n        }\n    }\n}\n","import { Observable } from 'rxjs';\n\nimport { McModalComponent } from './modal.component';\n\n\n/**\n * API class that public to users to handle the modal instance.\n * McModalRef is aim to avoid accessing to the modal instance directly by users.\n */\nexport abstract class McModalRef<T = any, R = any> {\n    abstract afterOpen: Observable<void>;\n    abstract afterClose: Observable<R>;\n\n    abstract open(): void;\n\n    abstract close(result?: R): void;\n\n    abstract destroy(result?: R): void;\n\n    /**\n     * Trigger the nzOnOk/nzOnCancel by manual\n     */\n    abstract triggerOk(): void;\n\n    abstract triggerCancel(): void;\n\n    // /**\n    //  * Return the ComponentRef of nzContent when specify nzContent as a Component\n    //  * Note: this method may return undefined if the Component has not ready yet.\n    //    (it only available after Modal's ngOnInit)\n    //  */\n    // abstract getContentComponentRef(): ComponentRef<{}>;\n\n    /**\n     * Return the component instance of nzContent when specify nzContent as a Component\n     * Note: this method may return undefined if the Component has not ready yet.\n     * (it only available after Modal's ngOnInit)\n     */\n    abstract getContentComponent(): T;\n\n    /**\n     * Get the dom element of this Modal\n     */\n    abstract getElement(): HTMLElement;\n\n    /**\n     * Get the instance of the Modal itself\n     */\n    abstract getInstance(): McModalComponent;\n}\n","export interface IClickPosition {\n    x: number;\n    y: number;\n}\n\nexport class ModalUtil {\n    private lastPosition: IClickPosition;\n\n    constructor(private document: Document) {\n        this.lastPosition = {x: -1, y: -1};\n        this.listenDocumentClick();\n    }\n\n    getLastClickPosition(): IClickPosition {\n        return this.lastPosition;\n    }\n\n    listenDocumentClick(): void {\n        this.document.addEventListener('click', (event: MouseEvent) => {\n            this.lastPosition = {x: event.clientX, y: event.clientY};\n        });\n    }\n}\n\nexport default new ModalUtil(document);\n","import { DOCUMENT } from '@angular/common';\nimport {\n    AfterViewInit, ChangeDetectionStrategy, ChangeDetectorRef,\n    Component,\n    ComponentFactoryResolver,\n    ComponentRef,\n    ElementRef,\n    EventEmitter,\n    Inject,\n    Injector,\n    Input,\n    OnChanges,\n    OnDestroy,\n    OnInit,\n    Output,\n    Renderer2,\n    SimpleChanges,\n    TemplateRef,\n    Type,\n    ViewChild,\n    ViewContainerRef, ViewEncapsulation\n} from '@angular/core';\nimport { ESCAPE } from '@ptsecurity/cdk/keycodes';\nimport { Overlay, OverlayRef } from '@ptsecurity/cdk/overlay';\nimport { McMeasureScrollbarService } from '@ptsecurity/mosaic/core';\nimport { Observable } from 'rxjs';\n\nimport { McModalControlService } from './modal-control.service';\nimport { McModalRef } from './modal-ref.class';\n// tslint:disable-next-line\nimport ModalUtil from './modal-util';\nimport { IModalButtonOptions, IModalOptions, ModalType, OnClickCallback } from './modal.type';\n\n\n// Duration when perform animations (ms)\nexport const MODAL_ANIMATE_DURATION = 200;\n\ntype AnimationState = 'enter' | 'leave' | null;\n\n@Component({\n    selector: 'mc-modal',\n    templateUrl: './modal.component.html',\n    styleUrls: ['./modal.css'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n    host: {\n        '(keydown)': 'onKeyDown($event)'\n    }\n})\nexport class McModalComponent<T = any, R = any> extends McModalRef<T, R>\n    implements OnInit, OnChanges, AfterViewInit, OnDestroy, IModalOptions {\n\n    // tslint:disable-next-line:no-any\n    @Input() mcModalType: ModalType = 'default';\n    // If not specified, will use <ng-content>\n    @Input() mcContent: string | TemplateRef<{}> | Type<T>;\n    // available when mcContent is a component\n    @Input() mcComponentParams: object;\n    // Default Modal ONLY\n    @Input() mcFooter: string | TemplateRef<{}> | IModalButtonOptions<T>[];\n\n    @Input()\n    get mcVisible() { return this._mcVisible; }\n    set mcVisible(value) { this._mcVisible = value; }\n    _mcVisible = false;\n\n    @Output() mcVisibleChange = new EventEmitter<boolean>();\n\n    @Input() mcZIndex: number = 1000;\n    @Input() mcWidth: number | string = 480;\n    @Input() mcWrapClassName: string;\n    @Input() mcClassName: string;\n    @Input() mcStyle: object;\n    @Input() mcTitle: string | TemplateRef<{}>;\n    @Input() mcCloseByESC: boolean = true;\n\n    @Input()\n    get mcClosable() { return this._mcClosable; }\n    set mcClosable(value) { this._mcClosable = value; }\n    _mcClosable = true;\n\n    @Input()\n    get mcMask() { return this._mcMask; }\n    set mcMask(value) { this._mcMask = value; }\n    _mcMask = true;\n\n    @Input()\n    get mcMaskClosable() { return this._mcMaskClosable; }\n    set mcMaskClosable(value) { this._mcMaskClosable = value; }\n    _mcMaskClosable = true;\n\n    @Input() mcMaskStyle: object;\n    @Input() mcBodyStyle: object;\n\n    // Trigger when modal open(visible) after animations\n    @Output() mcAfterOpen = new EventEmitter<void>();\n    // Trigger when modal leave-animation over\n    @Output() mcAfterClose = new EventEmitter<R>();\n\n    // --- Predefined OK & Cancel buttons\n    @Input() mcOkText: string;\n    @Input() mcOkType = 'primary';\n\n    @Input()\n    get mcOkLoading() { return this._mcOkLoading; }\n    set mcOkLoading(value) { this._mcOkLoading = value; }\n    _mcOkLoading = false;\n\n    @Input() @Output() mcOnOk: EventEmitter<T> | OnClickCallback<T> = new EventEmitter<T>();\n    // Only aim to focus the ok button that needs to be auto focused\n    @ViewChild('autoFocusButtonOk', {read: ElementRef}) autoFocusButtonOk: ElementRef;\n    @Input() mcCancelText: string;\n\n    @Input()\n    get mcCancelLoading() { return this._mcCancelLoading; }\n    set mcCancelLoading(value) { this._mcCancelLoading = value; }\n    _mcCancelLoading = false;\n\n    @Input() @Output() mcOnCancel: EventEmitter<T> | OnClickCallback<T> = new EventEmitter<T>();\n    @ViewChild('modalContainer') modalContainer: ElementRef;\n    @ViewChild('bodyContainer', {read: ViewContainerRef}) bodyContainer: ViewContainerRef;\n    maskAnimationClassMap: object;\n    modalAnimationClassMap: object;\n    // The origin point that animation based on\n    transformOrigin = '0px 0px 0px';\n\n    // Observable alias for mcAfterOpen\n    get afterOpen(): Observable<void> {\n        return this.mcAfterOpen.asObservable();\n    }\n\n    // Observable alias for mcAfterClose\n    get afterClose(): Observable<R> {\n        return this.mcAfterClose.asObservable();\n    }\n\n    get okText(): string {\n        return this.mcOkText;\n    }\n\n    get cancelText(): string {\n        return this.mcCancelText;\n    }\n\n    // Indicate whether this dialog should hidden\n    get hidden(): boolean {\n        return !this.mcVisible && !this.animationState;\n    }\n\n    // Handle the reference when using mcContent as Component\n    private contentComponentRef: ComponentRef<T>;\n    // Current animation state\n    private animationState: AnimationState;\n    private container: HTMLElement | OverlayRef;\n\n    constructor(\n        private overlay: Overlay,\n        private renderer: Renderer2,\n        private cfr: ComponentFactoryResolver,\n        private elementRef: ElementRef,\n        private viewContainer: ViewContainerRef,\n        private mcMeasureScrollbarService: McMeasureScrollbarService,\n        private modalControl: McModalControlService,\n        private changeDetector: ChangeDetectorRef,\n        @Inject(DOCUMENT) private document: any) {\n\n        super();\n    }\n\n    @Input() mcGetContainer: HTMLElement | OverlayRef | (() => HTMLElement | OverlayRef) = () => this.overlay.create();\n\n    ngOnInit() {\n\n        // Create component along without View\n        if (this.isComponent(this.mcContent)) {\n            this.createDynamicComponent(this.mcContent as Type<T>);\n        }\n\n        // Setup default button options\n        if (this.isModalButtons(this.mcFooter)) {\n            this.mcFooter = this.formatModalButtons(this.mcFooter as IModalButtonOptions<T>[]);\n        }\n\n        // Place the modal dom to elsewhere\n        this.container = typeof this.mcGetContainer === 'function' ? this.mcGetContainer() : this.mcGetContainer;\n        if (this.container instanceof HTMLElement) {\n            this.container.appendChild(this.elementRef.nativeElement);\n        } else if (this.container instanceof OverlayRef) {\n            // NOTE: only attach the dom to overlay, the view container is not changed actually\n            this.container.overlayElement.appendChild(this.elementRef.nativeElement);\n        }\n\n        // Register modal when afterOpen/afterClose is stable\n        this.modalControl.registerModal(this);\n    }\n\n    // [NOTE] NOT available when using by service!\n    // Because ngOnChanges never be called when using by service,\n    // here we can't support \"mcContent\"(Component) etc. as inputs that initialized dynamically.\n    // BUT: User also can change \"mcContent\" dynamically to trigger UI changes\n    // (provided you don't use \bComponent that needs initializations)\n    ngOnChanges(changes: SimpleChanges) {\n        if (changes.mcVisible) {\n            // Do not trigger animation while initializing\n            this.handleVisibleStateChange(this.mcVisible, !changes.mcVisible.firstChange);\n        }\n    }\n\n    ngAfterViewInit() {\n        // If using Component, it is the time to attach View while bodyContainer is ready\n        if (this.contentComponentRef) {\n            this.bodyContainer.insert(this.contentComponentRef.hostView);\n        }\n\n        if (this.autoFocusButtonOk) {\n            (this.autoFocusButtonOk.nativeElement as HTMLButtonElement).focus();\n        }\n    }\n\n    ngOnDestroy() {\n        if (this.container instanceof OverlayRef) {\n            this.container.dispose();\n        }\n    }\n\n    open() {\n        this.changeVisibleFromInside(true);\n    }\n\n    close(result?: R) {\n        this.changeVisibleFromInside(false, result);\n    }\n\n    // Destroy equals Close\n    destroy(result?: R) {\n        this.close(result);\n    }\n\n    triggerOk() {\n        this.onClickOkCancel('ok');\n    }\n\n    triggerCancel() {\n        this.onClickOkCancel('cancel');\n    }\n\n    getInstance(): McModalComponent {\n        return this;\n    }\n\n    getContentComponentRef(): ComponentRef<T> {\n        return this.contentComponentRef;\n    }\n\n    getContentComponent(): T {\n        return this.contentComponentRef && this.contentComponentRef.instance;\n    }\n\n    getElement(): HTMLElement {\n        return this.elementRef && this.elementRef.nativeElement;\n    }\n\n    onClickMask($event: MouseEvent) {\n        if (\n            this.mcMask &&\n            this.mcMaskClosable &&\n            ($event.target as HTMLElement).classList.contains('mc-modal-wrap') &&\n            this.mcVisible\n        ) {\n            this.onClickOkCancel('cancel');\n        }\n    }\n\n    // tslint:disable-next-line\n    isModalType(type: ModalType): boolean {\n        return this.mcModalType === type;\n    }\n\n    onKeyDown(event: KeyboardEvent): void {\n\n        if (event.keyCode === ESCAPE && this.container && (this.container instanceof OverlayRef)) {\n\n            this.close();\n            event.preventDefault();\n        }\n    }\n\n    // AoT\n    onClickCloseBtn() {\n        if (this.mcVisible) {\n            this.onClickOkCancel('cancel');\n        }\n    }\n\n    // AoT\n    // tslint:disable-next-line\n    onClickOkCancel(type: 'ok' | 'cancel') {\n        const trigger = { ok: this.mcOnOk, cancel: this.mcOnCancel }[type];\n        const loadingKey = { ok: 'mcOkLoading', cancel: 'mcCancelLoading' }[type];\n\n        if (trigger instanceof EventEmitter) {\n            trigger.emit(this.getContentComponent());\n        } else if (typeof trigger === 'function') {\n\n            const result = trigger(this.getContentComponent());\n            // Users can return \"false\" to prevent closing by default\n            const caseClose = (doClose: boolean | void | {}) => (doClose !== false) && this.close(doClose as R);\n\n            if (isPromise(result)) {\n                this[loadingKey] = true;\n                const handleThen = (doClose) => {\n                    this[loadingKey] = false;\n                    caseClose(doClose);\n                };\n                (result as Promise<void>).then(handleThen).catch(handleThen);\n            } else {\n                caseClose(result);\n            }\n        }\n    }\n\n    // AoT\n    isNonEmptyString(value: {}): boolean {\n        return typeof value === 'string' && value !== '';\n    }\n\n    // AoT\n    isTemplateRef(value: {}): boolean {\n        return value instanceof TemplateRef;\n    }\n\n    // AoT\n    isComponent(value: {}): boolean {\n        return value instanceof Type;\n    }\n\n    // AoT\n    isModalButtons(value: {}): boolean {\n        return Array.isArray(value) && value.length > 0;\n    }\n\n    // Do rest things when visible state changed\n    private handleVisibleStateChange(visible: boolean, animation: boolean = true, closeResult?: R): Promise<any> {\n        // Hide scrollbar at the first time when shown up\n        if (visible) {\n            this.changeBodyOverflow(1);\n        }\n\n        return Promise\n            .resolve(animation && this.animateTo(visible))\n            // Emit open/close event after animations over\n            .then(() => {\n                if (visible) {\n                    this.mcAfterOpen.emit();\n                } else {\n                    this.mcAfterClose.emit(closeResult);\n                    // Show/hide scrollbar when animation is over\n                    this.changeBodyOverflow();\n                }\n            });\n    }\n\n    // Lookup a button's property, if the prop is a function, call & then return the result, otherwise, return itself.\n    // AoT\n    // tslint:disable-next-line\n    getButtonCallableProp(options: IModalButtonOptions<T>, prop: string): {} {\n        const value = options[prop];\n        const args: any[] = [];\n        if (this.contentComponentRef) {\n            args.push(this.contentComponentRef.instance);\n        }\n\n        return typeof value === 'function' ? value.apply(options, args) : value;\n    }\n\n    // On mcFooter's modal button click\n    // AoT\n    // tslint:disable-next-line\n    onButtonClick(button: IModalButtonOptions<T>) {\n        // Call onClick directly\n        const result = this.getButtonCallableProp(button, 'onClick');\n        if (isPromise(result)) {\n            button.loading = true;\n            (result as Promise<{}>).then(() => button.loading = false).catch(() => button.loading = false);\n        }\n    }\n\n    // Change mcVisible from inside\n    private changeVisibleFromInside(visible: boolean, closeResult?: R): Promise<void> {\n        if (this.mcVisible !== visible) {\n            // Change mcVisible value immediately\n            this.mcVisible = visible;\n            this.mcVisibleChange.emit(visible);\n\n            return this.handleVisibleStateChange(visible, true, closeResult);\n        }\n\n        return Promise.resolve();\n    }\n\n    private changeAnimationState(state: AnimationState) {\n        this.animationState = state;\n        if (state) {\n            this.maskAnimationClassMap = {\n                [`fade-${state}`]: true,\n                [`fade-${state}-active`]: true\n            };\n            this.modalAnimationClassMap = {\n                [`zoom-${state}`]: true,\n                [`zoom-${state}-active`]: true\n            };\n        } else {\n            // @ts-ignore\n            this.maskAnimationClassMap = this.modalAnimationClassMap = null;\n        }\n\n        if (this.contentComponentRef) {\n            this.contentComponentRef.changeDetectorRef.markForCheck();\n        } else {\n            this.changeDetector.markForCheck();\n        }\n    }\n\n    private animateTo(isVisible: boolean): Promise<any> {\n        // Figure out the lastest click position when shows up\n        if (isVisible) {\n            // [NOTE] Using timeout due to the document.click event is fired later than visible change,\n            // so if not postponed to next event-loop, we can't get the lastest click position\n            window.setTimeout(() => this.updateTransformOrigin());\n        }\n\n        this.changeAnimationState(isVisible ? 'enter' : 'leave');\n\n        // Return when animation is over\n        return new Promise((resolve) => window.setTimeout(() => {\n            this.changeAnimationState(null);\n            resolve();\n        }, MODAL_ANIMATE_DURATION));\n    }\n\n    private formatModalButtons(buttons: IModalButtonOptions<T>[]): IModalButtonOptions<T>[] {\n        return buttons.map((button) => {\n\n            return {\n                ...{\n                    type: 'default',\n                    size: 'default',\n                    autoLoading: true,\n                    show: true,\n                    loading: false,\n                    disabled: false\n                },\n                ...button\n            };\n        });\n    }\n\n    /**\n     * Create a component dynamically but not attach to any View\n     * (this action will be executed when bodyContainer is ready)\n     * @param component Component class\n     */\n    private createDynamicComponent(component: Type<T>) {\n        const factory = this.cfr.resolveComponentFactory(component);\n        const childInjector = Injector.create({\n            providers: [{provide: McModalRef, useValue: this}],\n            parent: this.viewContainer.parentInjector\n        });\n\n        this.contentComponentRef = factory.create(childInjector);\n\n        if (this.mcComponentParams) {\n            Object.assign(this.contentComponentRef.instance, this.mcComponentParams);\n        }\n\n        // Do the first change detection immediately\n        // (or we do detection at ngAfterViewInit, multi-changes error will be thrown)\n        this.contentComponentRef.changeDetectorRef.detectChanges();\n\n\n    }\n\n    // Update transform-origin to the last click position on document\n    private updateTransformOrigin() {\n        const modalElement = this.modalContainer.nativeElement as HTMLElement;\n        const lastPosition = ModalUtil.getLastClickPosition();\n\n        if (lastPosition) {\n            // tslint:disable-next-line\n            this.transformOrigin = `${lastPosition.x - modalElement.offsetLeft}px ${lastPosition.y - modalElement.offsetTop}px 0px`;\n        }\n    }\n\n    /**\n     * Take care of the body's overflow to decide the existense of scrollbar\n     * @param plusNum The number that the openModals.length will increase soon\n     */\n    private changeBodyOverflow(plusNum: number = 0) {\n        const openModals = this.modalControl.openModals;\n\n        if (openModals.length + plusNum > 0) {\n            // tslint:disable-next-line\n            this.renderer.setStyle(this.document.body, 'padding-right', `${this.mcMeasureScrollbarService.scrollBarWidth}px`);\n            this.renderer.setStyle(this.document.body, 'overflow', 'hidden');\n        } else {\n            this.renderer.removeStyle(this.document.body, 'padding-right');\n            this.renderer.removeStyle(this.document.body, 'overflow');\n        }\n    }\n}\n\n////////////\n\nfunction isPromise(obj: {} | void): boolean {\n    // tslint:disable-next-line\n    return !!obj && (typeof obj === 'object' || typeof obj === 'function') && typeof (obj as Promise<{}>).then === 'function' && typeof (obj as Promise<{}>).catch === 'function';\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n\n@Pipe({\n    name: 'toCssUnit'\n})\nexport class CssUnitPipe implements PipeTransform {\n    transform(value: number | string, defaultUnit: string = 'px'): string {\n        const formatted = +value;\n\n        return isNaN(formatted) ? `${value}` : `${formatted}${defaultUnit}`;\n    }\n}\n","import { ComponentRef, Injectable } from '@angular/core';\n\nimport { Observable } from 'rxjs';\nimport { filter } from 'rxjs/operators';\n\nimport { ESCAPE } from '@ptsecurity/cdk/keycodes';\nimport { Overlay, OverlayRef } from '@ptsecurity/cdk/overlay';\nimport { ComponentPortal } from '@ptsecurity/cdk/portal';\n\nimport { McModalControlService } from './modal-control.service';\nimport { McModalRef } from './modal-ref.class';\nimport { McModalComponent } from './modal.component';\nimport { ConfirmType, IModalOptions, IModalOptionsForService } from './modal.type';\n\n\n// A builder used for managing service creating modals\nexport class ModalBuilderForService {\n\n    // Modal ComponentRef, \"null\" means it has been destroyed\n    private modalRef: ComponentRef<McModalComponent>;\n    private overlayRef: OverlayRef;\n\n    constructor(private overlay: Overlay, options: IModalOptionsForService = {}) {\n        this.createModal();\n\n        if (!('mcGetContainer' in options)) {\n            options.mcGetContainer = null;\n        }\n\n        this.changeProps(options);\n        this.modalRef.instance.open();\n        this.modalRef.instance.mcAfterClose.subscribe(() => this.destroyModal());\n\n        this.overlayRef.keydownEvents()\n            // @ts-ignore\n            .pipe(filter((event: KeyboardEvent) => {\n                return event.keyCode === ESCAPE && options.mcCloseByESC;\n            }))\n            .subscribe(() => this.modalRef.instance.close());\n    }\n\n    getInstance(): McModalComponent {\n        return this.modalRef && this.modalRef.instance;\n    }\n\n    destroyModal(): void {\n        if (this.modalRef) {\n            this.overlayRef.dispose();\n            // @ts-ignore\n            this.modalRef = null;\n        }\n    }\n\n    private changeProps(options: IModalOptions): void {\n        if (this.modalRef) {\n            // here not limit user's inputs at runtime\n            Object.assign(this.modalRef.instance, options);\n        }\n    }\n\n    // Create component to ApplicationRef\n    private createModal(): void {\n        this.overlayRef = this.overlay.create();\n        this.modalRef = this.overlayRef.attach(new ComponentPortal(McModalComponent));\n    }\n}\n\n@Injectable()\nexport class McModalService {\n    // Track of the current close modals (we assume invisible is close this time)\n    get openModals(): McModalRef[] {\n        return this.modalControl.openModals;\n    }\n\n    get afterAllClose(): Observable<void> {\n        return this.modalControl.afterAllClose.asObservable();\n    }\n\n    constructor(\n        private overlay: Overlay,\n        private modalControl: McModalControlService) {\n    }\n\n    // Closes all of the currently-open dialogs\n    closeAll(): void {\n        this.modalControl.closeAll();\n    }\n\n    create<T>(options: IModalOptionsForService<T> = {}): McModalRef<T> {\n\n        if (typeof options.mcOnCancel !== 'function') {\n            // Leave a empty function to close this modal by default\n            // tslint:disable-next-line\n            options.mcOnCancel = () => {};\n        }\n\n        if (!('mcCloseByESC' in options)) {\n            options.mcCloseByESC = true;\n        }\n\n\n        if (!('mcWidth' in options)) {\n            // tslint:disable-next-line\n            options.mcWidth = 480;\n        }\n\n        return new ModalBuilderForService(this.overlay, options).getInstance();\n    }\n\n    confirm<T>(options: IModalOptionsForService<T> = {}, confirmType: ConfirmType = 'confirm'): McModalRef<T> {\n        if ('mcFooter' in options) {\n            console.warn(`The Confirm-Modal doesn't support \"mcFooter\", this property will be ignored.`);\n        }\n\n        // NOTE: only support function currently by calling confirm()\n        if (typeof options.mcOnOk !== 'function') {\n            // Leave a empty function to close this modal by default\n            // tslint:disable-next-line\n            options.mcOnOk = () => {};\n        }\n\n        options.mcModalType = 'confirm';\n        options.mcClassName = `mc-confirm mc-confirm-${confirmType} ${options.mcClassName || ''}`;\n        options.mcMaskClosable = false;\n\n        return this.create(options);\n    }\n\n    success<T>(options: IModalOptionsForService<T> = {}): McModalRef<T> {\n        return this.simpleConfirm(options, 'success');\n    }\n\n    delete<T>(options: IModalOptionsForService<T> = {}): McModalRef<T> {\n        return this.simpleConfirm(options, 'warn');\n    }\n\n    private simpleConfirm<T>(options: IModalOptionsForService<T> = {}, confirmType: ConfirmType): McModalRef<T> {\n        // Remove the Cancel button if the user not specify a Cancel button\n        if (!('mcCancelText' in options)) {\n            // @ts-ignore\n            options.mcCancelText = null;\n        }\n\n        return this.confirm(options, confirmType);\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { OverlayModule } from '@ptsecurity/cdk/overlay';\nimport { McButtonModule } from '@ptsecurity/mosaic/button';\nimport { McIconModule } from '@ptsecurity/mosaic/icon';\n\nimport { CssUnitPipe } from './css-unit.pipe';\nimport { McModalControlService } from './modal-control.service';\nimport { McModalComponent } from './modal.component';\nimport { McModalService } from './modal.service';\n\n\n@NgModule({\n    imports: [ CommonModule, OverlayModule, McButtonModule, McIconModule ],\n    exports: [ McModalComponent ],\n    declarations: [ McModalComponent, CssUnitPipe ],\n    entryComponents: [ McModalComponent ],\n    providers: [ McModalControlService, McModalService ]\n})\nexport class McModalModule { }\n","import { AnimationEvent } from '@angular/animations';\nimport {\n    AfterContentInit,\n    ChangeDetectionStrategy,\n    Component,\n    ContentChild,\n    ContentChildren,\n    ElementRef,\n    EventEmitter,\n    Inject,\n    InjectionToken,\n    Input,\n    NgZone,\n    OnDestroy,\n    Output,\n    TemplateRef,\n    QueryList,\n    ViewChild,\n    ViewEncapsulation,\n    OnInit\n} from '@angular/core';\nimport { FocusKeyManager, FocusOrigin } from '@ptsecurity/cdk/a11y';\nimport { Direction } from '@ptsecurity/cdk/bidi';\nimport { coerceBooleanProperty } from '@ptsecurity/cdk/coercion';\nimport { ESCAPE, DOWN_ARROW, UP_ARROW } from '@ptsecurity/cdk/keycodes';\nimport { Subject, Subscription } from 'rxjs';\nimport { take } from 'rxjs/operators';\n\nimport { mcDropdownAnimations } from './dropdown-animations';\nimport { McDropdownContent } from './dropdown-content';\nimport { throwMcDropdownInvalidPositionX, throwMcDropdownInvalidPositionY } from './dropdown-errors';\nimport { McDropdownItem } from './dropdown-item';\nimport { MC_DROPDOWN_PANEL, McDropdownPanel } from './dropdown-panel';\nimport { DropdownPositionX, DropdownPositionY } from './dropdown-positions';\n\n\n/** Default `mc-dropdown` options that can be overridden. */\n// tslint:disable-next-line:interface-name\nexport interface McDropdownDefaultOptions {\n    /** The x-axis position of the dropdown. */\n    xPosition: DropdownPositionX;\n\n    /** The y-axis position of the dropdown. */\n    yPosition: DropdownPositionY;\n\n    /** Whether the dropdown should overlap the dropdown trigger. */\n    overlapTrigger: boolean;\n\n    /** Class to be applied to the dropdown's backdrop. */\n    backdropClass: string;\n\n    /** Whether the dropdown has a backdrop. */\n    hasBackdrop?: boolean;\n}\n\n/** Injection token to be used to override the default options for `mc-dropdown`. */\nexport const MC_DROPDOWN_DEFAULT_OPTIONS =\n    new InjectionToken<McDropdownDefaultOptions>('mc-dropdown-default-options', {\n        providedIn: 'root',\n        factory: MC_DROPDOWN_DEFAULT_OPTIONS_FACTORY\n    });\n\n/** @docs-private */\nexport function MC_DROPDOWN_DEFAULT_OPTIONS_FACTORY(): McDropdownDefaultOptions {\n    return {\n        overlapTrigger: false,\n        xPosition: 'after',\n        yPosition: 'below',\n        backdropClass: 'cdk-overlay-transparent-backdrop'\n    };\n}\n\n@Component({\n    selector: 'mc-dropdown',\n    templateUrl: 'dropdown.html',\n    styleUrls: ['dropdown.css'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n    exportAs: 'mcDropdown',\n    animations: [\n        mcDropdownAnimations.transformDropdown,\n        mcDropdownAnimations.fadeInItems\n    ],\n    providers: [\n        { provide: MC_DROPDOWN_PANEL, useExisting: McDropdown }\n    ]\n})\nexport class McDropdown implements AfterContentInit, McDropdownPanel<McDropdownItem>, OnInit, OnDestroy {\n\n    /** Position of the dropdown in the X axis. */\n    @Input()\n    get xPosition(): DropdownPositionX { return this._xPosition; }\n    set xPosition(value: DropdownPositionX) {\n        if (value !== 'before' && value !== 'after') {\n            throwMcDropdownInvalidPositionX();\n        }\n\n        this._xPosition = value;\n        this.setPositionClasses();\n    }\n\n    /** Position of the dropdown in the Y axis. */\n    @Input()\n    get yPosition(): DropdownPositionY { return this._yPosition; }\n    set yPosition(value: DropdownPositionY) {\n        if (value !== 'above' && value !== 'below') {\n            throwMcDropdownInvalidPositionY();\n        }\n\n        this._yPosition = value;\n        this.setPositionClasses();\n    }\n\n    /** Whether the dropdown should overlap its trigger. */\n    @Input()\n    get overlapTrigger(): boolean { return this._overlapTrigger; }\n    set overlapTrigger(value: boolean) {\n        this._overlapTrigger = coerceBooleanProperty(value);\n    }\n\n    /** Whether the dropdown has a backdrop. */\n    @Input()\n    get hasBackdrop(): boolean | undefined { return this._hasBackdrop; }\n    set hasBackdrop(value: boolean | undefined) {\n        this._hasBackdrop = coerceBooleanProperty(value);\n    }\n\n    /**\n     * This method takes classes set on the host mc-dropdown element and applies them on the\n     * dropdown template that displays in the overlay container.  Otherwise, it's difficult\n     * to style the containing dropdown from outside the component.\n     * @param classes list of class names\n     */\n    @Input('class')\n    set panelClass(classes: string) {\n        if (classes && classes.length) {\n            this._classList = classes.split(' ').reduce((obj: any, className: string) => {\n                obj[className] = true;\n\n                return obj;\n            }, {});\n\n            this._elementRef.nativeElement.className = '';\n        }\n    }\n\n    /** Config object to be passed into the dropdown's ngClass */\n    _classList: {[key: string]: boolean} = {};\n\n    /** Current state of the panel animation. */\n    _panelAnimationState: 'void' | 'enter' = 'void';\n\n    /** Emits whenever an animation on the dropdown completes. */\n    _animationDone = new Subject<AnimationEvent>();\n\n    /** Whether the dropdown is animating. */\n    _isAnimating: boolean;\n\n    /** Layout direction of the dropdown. */\n    direction: Direction;\n\n    /** Class to be added to the backdrop element. */\n    @Input() backdropClass: string = this._defaultOptions.backdropClass;\n\n    /** @docs-private */\n    @ViewChild(TemplateRef) templateRef: TemplateRef<any>;\n\n    /**\n     * List of the items inside of a dropdown.\n     */\n    @ContentChildren(McDropdownItem) items: QueryList<McDropdownItem>;\n\n    /**\n     * Dropdown content that will be rendered lazily.\n     * @docs-private\n     */\n    @ContentChild(McDropdownContent) lazyContent: McDropdownContent;\n\n    /** Event emitted when the dropdown is closed. */\n    @Output() readonly closed: EventEmitter<void | 'click' | 'keydown' | 'tab'> =\n        new EventEmitter<void | 'click' | 'keydown' | 'tab'>();\n\n    private _keyManager: FocusKeyManager<McDropdownItem>;\n    private _xPosition: DropdownPositionX = this._defaultOptions.xPosition;\n    private _yPosition: DropdownPositionY = this._defaultOptions.yPosition;\n\n    /** Dropdown items inside the current dropdown. */\n    private _items: McDropdownItem[] = [];\n\n    /** Emits whenever the amount of dropdown items changes. */\n    private _itemChanges = new Subject<McDropdownItem[]>();\n\n    /** Subscription to tab events on the dropdown panel */\n    private _tabSubscription = Subscription.EMPTY;\n    private _overlapTrigger: boolean = this._defaultOptions.overlapTrigger;\n    private _hasBackdrop: boolean | undefined = this._defaultOptions.hasBackdrop;\n\n    constructor(\n        private _elementRef: ElementRef<HTMLElement>,\n        private _ngZone: NgZone,\n        @Inject(MC_DROPDOWN_DEFAULT_OPTIONS) private _defaultOptions: McDropdownDefaultOptions) { }\n\n    ngOnInit() {\n        this.setPositionClasses();\n    }\n\n    ngAfterContentInit() {\n        this._keyManager = new FocusKeyManager<McDropdownItem>(this.items).withWrap().withTypeAhead();\n        this._tabSubscription = this._keyManager.tabOut.subscribe(() => this.closed.emit('tab'));\n    }\n\n    ngOnDestroy() {\n        this._tabSubscription.unsubscribe();\n        this.closed.complete();\n    }\n\n    /** Handle a keyboard event from the dropdown, delegating to the appropriate action. */\n    _handleKeydown(event: KeyboardEvent) {\n\n        // tslint:disable-next-line:deprecation\n        switch (event.keyCode) {\n            case ESCAPE:\n                this.closed.emit('keydown');\n                break;\n            case UP_ARROW:\n            case DOWN_ARROW:\n                this._keyManager.setFocusOrigin('keyboard');\n                this._keyManager.onKeydown(event);\n                break;\n            default:\n                // todo зачем обрабатывать лишние события ?\n                this._keyManager.onKeydown(event);\n        }\n    }\n\n    /**\n     * Focus the first item in the dropdown.\n     * @param origin Action from which the focus originated. Used to set the correct styling.\n     */\n    focusFirstItem(origin: FocusOrigin = 'program'): void {\n        // When the content is rendered lazily, it takes a bit before the items are inside the DOM.\n        if (this.lazyContent) {\n            this._ngZone.onStable.asObservable()\n                .pipe(take(1))\n                .subscribe(() => this._keyManager.setFocusOrigin(origin).setFirstItemActive());\n        } else {\n            this._keyManager.setFocusOrigin(origin).setFirstItemActive();\n        }\n    }\n\n    /**\n     * Resets the active item in the dropdown. This is used when the dropdown is opened, allowing\n     * the user to start from the first option when pressing the down arrow.\n     */\n    resetActiveItem() {\n        this._keyManager.setActiveItem(-1);\n    }\n\n    /**\n     * Registers a dropdown item with the dropdown.\n     * @docs-private\n     */\n    addItem(item: McDropdownItem) {\n        // We register the items through this method, rather than picking them up through\n        // `ContentChildren`, because we need the items to be picked up by their closest\n        // `mc-dropdown` ancestor. If we used `@ContentChildren(McDropdownItem, {descendants: true})`,\n        // all descendant items will bleed into the top-level dropdown in the case where the consumer\n        // has `mc-dropdown` instances nested inside each other.\n        if (this._items.indexOf(item) === -1) {\n            this._items.push(item);\n            this._itemChanges.next(this._items);\n        }\n    }\n\n    /**\n     * Removes an item from the dropdown.\n     * @docs-private\n     */\n    removeItem(item: McDropdownItem) {\n        const index = this._items.indexOf(item);\n\n        if (this._items.indexOf(item) > -1) {\n            this._items.splice(index, 1);\n            this._itemChanges.next(this._items);\n        }\n    }\n\n    /**\n     * Adds classes to the dropdown panel based on its position. Can be used by\n     * consumers to add specific styling based on the position.\n     * @param posX Position of the dropdown along the x axis.\n     * @param posY Position of the dropdown along the y axis.\n     * @docs-private\n     */\n    setPositionClasses(posX: DropdownPositionX = this.xPosition, posY: DropdownPositionY = this.yPosition) {\n        const classes = this._classList;\n        classes['mc-dropdown-before'] = posX === 'before';\n        classes['mc-dropdown-after'] = posX === 'after';\n        classes['mc-dropdown-above'] = posY === 'above';\n        classes['mc-dropdown-below'] = posY === 'below';\n    }\n\n    /** Starts the enter animation. */\n    _startAnimation() {\n        this._panelAnimationState = 'enter';\n    }\n\n    /** Resets the panel animation to its initial state. */\n    _resetAnimation() {\n        this._panelAnimationState = 'void';\n    }\n\n    /** Callback that is invoked when the panel animation completes. */\n    _onAnimationDone(event: AnimationEvent) {\n        this._animationDone.next(event);\n        this._isAnimating = false;\n\n        // Scroll the content element to the top once the animation is done. This is necessary, because\n        // we move focus to the first item while it's still being animated, which can throw the browser\n        // off when it determines the scroll position. Alternatively we can move focus when the\n        // animation is done, however moving focus asynchronously will interrupt screen readers\n        // which are in the process of reading out the dropdown already. We take the `element` from\n        // the `event` since we can't use a `ViewChild` to access the pane.\n        if (event.toState === 'enter' && this._keyManager.activeItemIndex === 0) {\n            event.element.scrollTop = 0;\n        }\n    }\n}\n","import {\n    AfterContentInit,\n    Directive,\n    ElementRef,\n    EventEmitter,\n    Inject,\n    InjectionToken,\n    Input,\n    OnDestroy, OnInit,\n    Optional,\n    Output,\n    ViewContainerRef\n} from '@angular/core';\nimport { FocusMonitor, FocusOrigin } from '@ptsecurity/cdk/a11y';\nimport { Direction, Directionality } from '@ptsecurity/cdk/bidi';\nimport {\n    FlexibleConnectedPositionStrategy,\n    HorizontalConnectionPos,\n    Overlay,\n    OverlayConfig,\n    OverlayRef,\n    VerticalConnectionPos,\n    IScrollStrategy\n} from '@ptsecurity/cdk/overlay';\nimport { TemplatePortal } from '@ptsecurity/cdk/portal';\nimport { merge, Subscription } from 'rxjs';\nimport { filter, take, takeUntil } from 'rxjs/operators';\n\nimport { throwMcDropdownMissingError } from './dropdown-errors';\nimport { McDropdownPanel } from './dropdown-panel';\nimport { McDropdown } from './dropdown.component';\n\n\n/** Injection token that determines the scroll handling while the dropdown is open. */\nexport const MC_DROPDOWN_SCROLL_STRATEGY =\n    new InjectionToken<() => IScrollStrategy>('mc-dropdown-scroll-strategy');\n\n/** @docs-private */\nexport function MC_DROPDOWN_SCROLL_STRATEGY_FACTORY(overlay: Overlay): () => IScrollStrategy {\n    return () => overlay.scrollStrategies.reposition();\n}\n\n/** @docs-private */\nexport const MC_DROPDOWN_SCROLL_STRATEGY_FACTORY_PROVIDER = {\n    provide: MC_DROPDOWN_SCROLL_STRATEGY,\n    deps: [Overlay],\n    useFactory: MC_DROPDOWN_SCROLL_STRATEGY_FACTORY\n};\n\n/**\n * This directive is intended to be used in conjunction with an mc-dropdown tag.  It is\n * responsible for toggling the display of the provided dropdown instance.\n */\n@Directive({\n    selector: `[mcDropdownTriggerFor]`,\n    host: {\n        '(touchstart)': '_openedBy = \"touch\"',\n        '(click)': 'toggle()'\n    },\n    exportAs: 'mcDropdownTrigger'\n})\nexport class McDropdownTrigger implements OnInit, AfterContentInit, OnDestroy {\n\n    /** Whether the dropdown is open. */\n    get opened(): boolean {\n        return this._opened;\n    }\n\n    /** The text direction of the containing app. */\n    get dir(): Direction {\n        return this._dir && this._dir.value === 'rtl' ? 'rtl' : 'ltr';\n    }\n\n    // Tracking input type is necessary so it's possible to only auto-focus\n    // the first item of the list when the dropdown is opened via the keyboard\n    _openedBy: 'mouse' | 'touch' | null = null;\n\n    /** References the dropdown instance that the trigger is associated with. */\n    @Input('mcDropdownTriggerFor') dropdown: McDropdownPanel;\n\n    /** Data to be passed along to any lazily-rendered content. */\n    @Input('mcDropdownTriggerData') data: any;\n\n    /** Event emitted when the associated dropdown is opened. */\n    @Output() readonly dropdownOpened: EventEmitter<void> = new EventEmitter<void>();\n\n    /** Event emitted when the associated dropdown is closed. */\n    @Output() readonly dropdownClosed: EventEmitter<void> = new EventEmitter<void>();\n\n    private _portal: TemplatePortal;\n    private _overlayRef: OverlayRef | null = null;\n    private _opened: boolean = false;\n    private _closeSubscription = Subscription.EMPTY;\n    private _hoverSubscription = Subscription.EMPTY;\n\n    constructor(private _overlay: Overlay,\n                private _element: ElementRef<HTMLElement>,\n                private _viewContainerRef: ViewContainerRef,\n                @Inject(MC_DROPDOWN_SCROLL_STRATEGY) private _scrollStrategy: any,\n                @Optional() private _dir: Directionality,\n                private _focusMonitor?: FocusMonitor) {}\n\n    ngOnInit(): void {\n        this.dropdown.closed = this.dropdown.closed || new EventEmitter<void | 'click' | 'keydown' | 'tab'>();\n    }\n\n    ngAfterContentInit() {\n        this._check();\n\n        this.dropdown.closed.asObservable().subscribe(() => {\n            this._destroy();\n        });\n    }\n\n    ngOnDestroy() {\n        if (this._overlayRef) {\n            this._overlayRef.dispose();\n            this._overlayRef = null;\n        }\n\n        this._cleanUpSubscriptions();\n    }\n\n    /** Toggles the dropdown between the open and closed states. */\n    toggle(): void {\n        // tslint:disable-next-line:no-void-expression\n        return this._opened ? this.close() : this.open();\n    }\n\n    /** Opens the dropdown. */\n    open(): void {\n        if (this._opened) {\n            return;\n        }\n\n        this._check();\n\n        const overlayRef = this._createOverlay();\n        this._setPosition(overlayRef.getConfig().positionStrategy as FlexibleConnectedPositionStrategy);\n        overlayRef.attach(this._portal);\n\n        if (this.dropdown.lazyContent) {\n            this.dropdown.lazyContent.attach(this.data);\n        }\n\n        this._closeSubscription = this._closingActions().subscribe(() => this.close());\n        this._init();\n\n        if (this.dropdown instanceof McDropdown) {\n            this.dropdown._startAnimation();\n        }\n    }\n\n    /** Closes the dropdown. */\n    close(): void {\n        this.dropdown.closed.emit();\n    }\n\n    /**\n     * Focuses the dropdown trigger.\n     * @param origin Source of the dropdown trigger's focus.\n     */\n    focus(origin: FocusOrigin = 'program') {\n        if (this._focusMonitor) {\n            this._focusMonitor.focusVia(this._element.nativeElement, origin);\n        } else {\n            this._element.nativeElement.focus();\n        }\n    }\n\n    /** Closes the dropdown and does the necessary cleanup. */\n    private _destroy() {\n        if (!this._overlayRef || !this.opened) {\n            return;\n        }\n\n        const dropdown = this.dropdown;\n\n        this._closeSubscription.unsubscribe();\n        this._overlayRef.detach();\n\n        if (dropdown instanceof McDropdown) {\n            dropdown._resetAnimation();\n\n            if (dropdown.lazyContent) {\n                // Wait for the exit animation to finish before detaching the content.\n                dropdown._animationDone\n                    .pipe(\n                        filter((event) => event.toState === 'void'),\n                        take(1),\n                        // Interrupt if the content got re-attached.\n                        takeUntil(dropdown.lazyContent._attached)\n                    )\n                    .subscribe(() => dropdown.lazyContent.detach(), undefined, () => {\n                        // No matter whether the content got re-attached, reset the dropdown.\n                        this._reset();\n                    });\n            } else {\n                this._reset();\n            }\n        } else {\n            this._reset();\n\n            if (dropdown.lazyContent) {\n                dropdown.lazyContent.detach();\n            }\n        }\n    }\n\n    /**\n     * This method sets the dropdown state to open and focuses the first item if\n     * the dropdown was opened via the keyboard.\n     */\n    private _init(): void {\n        this.dropdown.direction = this.dir;\n        this._setIsOpened(true);\n        this.dropdown.focusFirstItem(this._openedBy || 'program');\n    }\n\n    /**\n     * This method resets the dropdown when it's closed, most importantly restoring\n     * focus to the dropdown trigger if the dropdown was opened via the keyboard.\n     */\n    private _reset(): void {\n        this._setIsOpened(false);\n\n        // We should reset focus if the user is navigating using a keyboard or\n        // if we have a top-level trigger which might cause focus to be lost\n        // when clicking on the backdrop.\n        if (!this._openedBy) {\n            // Note that the focus style will show up both for `program` and\n            // `keyboard` so we don't have to specify which one it is.\n            this.focus();\n        } else {\n            this.focus(this._openedBy);\n        }\n\n        this._openedBy = null;\n    }\n\n    // set state rather than toggle to support triggers sharing a dropdown\n    private _setIsOpened(isOpen: boolean): void {\n        this._opened = isOpen;\n        // tslint:disable-next-line:no-void-expression\n        this._opened ? this.dropdownOpened.emit() : this.dropdownClosed.emit();\n    }\n\n    /**\n     * This method checks that a valid instance of Dropdown has been passed into\n     * mcDropdownTriggerFor. If not, an exception is thrown.\n     */\n    private _check() {\n        if (!this.dropdown) {\n            throwMcDropdownMissingError();\n        }\n    }\n\n    /**\n     * This method creates the overlay from the provided dropdown's template and saves its\n     * OverlayRef so that it can be attached to the DOM when open is called.\n     */\n    private _createOverlay(): OverlayRef {\n        if (!this._overlayRef) {\n            this._portal = new TemplatePortal(this.dropdown.templateRef, this._viewContainerRef);\n            const config = this._getOverlayConfig();\n            this._subscribeToPositions(config.positionStrategy as FlexibleConnectedPositionStrategy);\n            this._overlayRef = this._overlay.create(config);\n\n            // Consume the `keydownEvents` in order to prevent them from going to another overlay.\n            // Ideally we'd also have our keyboard event logic in here, however doing so will\n            // break anybody that may have implemented the `McDropdownPanel` themselves.\n            this._overlayRef.keydownEvents().subscribe();\n        }\n\n        return this._overlayRef;\n    }\n\n    /**\n     * This method builds the configuration object needed to create the overlay, the OverlayState.\n     * @returns OverlayConfig\n     */\n    private _getOverlayConfig(): OverlayConfig {\n        return new OverlayConfig({\n            positionStrategy: this._overlay.position()\n                .flexibleConnectedTo(this._element)\n                .withLockedPosition()\n                .withTransformOriginOn('.mc-dropdown__panel'),\n            hasBackdrop: this.dropdown.hasBackdrop === null || this.dropdown.hasBackdrop === undefined\n                ? true\n                : this.dropdown.hasBackdrop,\n            backdropClass: this.dropdown.backdropClass || 'cdk-overlay-transparent-backdrop',\n            scrollStrategy: this._scrollStrategy(),\n            direction: this._dir\n        });\n    }\n\n    /**\n     * Listens to changes in the position of the overlay and sets the correct classes\n     * on the dropdown based on the new position. This ensures the animation origin is always\n     * correct, even if a fallback position is used for the overlay.\n     */\n    private _subscribeToPositions(position: FlexibleConnectedPositionStrategy): void {\n        if (this.dropdown.setPositionClasses) {\n            // todo possibly we should not recompute positions there\n            /*position.positionChanges.subscribe((change) => {\n                const posX: DropdownPositionX = change.connectionPair.overlayX === 'start' ? 'after' : 'before';\n                const posY: DropdownPositionY = change.connectionPair.overlayY === 'top' ? 'below' : 'above';\n\n                this.dropdown.setPositionClasses!(posX, posY);\n            });*/\n            position.positionChanges.subscribe(() => {\n                this.dropdown.setPositionClasses!(this.dropdown.xPosition, this.dropdown.yPosition);\n            });\n        }\n    }\n\n    /**\n     * Sets the appropriate positions on a position strategy\n     * so the overlay connects with the trigger correctly.\n     * @param positionStrategy Strategy whose position to update.\n     */\n    private _setPosition(positionStrategy: FlexibleConnectedPositionStrategy) {\n        const [originX, originFallbackX]: HorizontalConnectionPos[] =\n            this.dropdown.xPosition === 'before' ? ['end', 'start'] : ['start', 'end'];\n\n        const [overlayY, overlayFallbackY]: VerticalConnectionPos[] =\n            this.dropdown.yPosition === 'above' ? ['bottom', 'top'] : ['top', 'bottom'];\n\n        let [originY, originFallbackY] = [overlayY, overlayFallbackY];\n        const [overlayX, overlayFallbackX] = [originX, originFallbackX];\n        const offsetY = 0;\n\n        if (!this.dropdown.overlapTrigger) {\n            originY = overlayY === 'top' ? 'bottom' : 'top';\n            originFallbackY = overlayFallbackY === 'top' ? 'bottom' : 'top';\n        }\n\n        positionStrategy.withPositions([\n            {originX, originY, overlayX, overlayY, offsetY},\n            {originX: originFallbackX, originY, overlayX: overlayFallbackX, overlayY, offsetY},\n            {\n                originX,\n                originY: originFallbackY,\n                overlayX,\n                overlayY: overlayFallbackY,\n                offsetY: -offsetY\n            },\n            {\n                originX: originFallbackX,\n                originY: originFallbackY,\n                overlayX: overlayFallbackX,\n                overlayY: overlayFallbackY,\n                offsetY: -offsetY\n            }\n        ]);\n    }\n\n    /** Cleans up the active subscriptions. */\n    private _cleanUpSubscriptions(): void {\n        this._closeSubscription.unsubscribe();\n        this._hoverSubscription.unsubscribe();\n    }\n\n    /** Returns a stream that emits whenever an action that should close the dropdown occurs. */\n    private _closingActions() {\n        const backdrop = this._overlayRef!.backdropClick();\n        const detachments = this._overlayRef!.detachments();\n\n        return merge(backdrop, detachments);\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { OverlayModule } from '@ptsecurity/cdk/overlay';\n\nimport { McDropdownContent } from './dropdown-content';\nimport { McDropdownItem } from './dropdown-item';\nimport { MC_DROPDOWN_SCROLL_STRATEGY_FACTORY_PROVIDER, McDropdownTrigger } from './dropdown-trigger';\nimport { McDropdown } from './dropdown.component';\n\n\n@NgModule({\n    imports: [\n        CommonModule,\n        OverlayModule\n    ],\n    exports: [McDropdown, McDropdownItem, McDropdownTrigger, McDropdownContent],\n    declarations: [McDropdown, McDropdownItem, McDropdownTrigger, McDropdownContent],\n    providers: [MC_DROPDOWN_SCROLL_STRATEGY_FACTORY_PROVIDER]\n})\nexport class McDropdownModule {}\n","import { Component } from '@angular/core';\n\n\n@Component({\n    selector: 'mc-content',\n    preserveWhitespaces: false,\n    templateUrl: './content.component.html',\n    styles: [\n        `:host {\n            display: block;\n        }`\n    ],\n    host: {\n        '[class.mc-layout-content]': 'true'\n    }\n})\nexport class McContentComponent {\n}\n","import { Component } from '@angular/core';\n\n\n@Component({\n    selector: 'mc-footer',\n    preserveWhitespaces: false,\n    templateUrl: './footer.component.html',\n    styles: [\n        `:host {\n            display: block;\n        }`\n    ],\n    host: {\n        '[class.mc-layout-footer]': 'true'\n    }\n})\nexport class McFooterComponent {\n}\n","import { Component } from '@angular/core';\n\n\n@Component({\n    selector : 'mc-header',\n    preserveWhitespaces: false,\n    templateUrl: './header.component.html',\n    styles: [\n        `:host {\n            display: block;\n        }`\n    ],\n    host: {\n        '[class.mc-layout-header]': 'true'\n    }\n})\nexport class McHeaderComponent {\n}\n","import { ChangeDetectionStrategy, Component, ViewEncapsulation } from '@angular/core';\n\n\n@Component({\n    selector: 'mc-layout',\n    preserveWhitespaces: false,\n    styleUrls: ['layout.css'],\n    templateUrl: './layout.component.html',\n    host: {\n        '[class.mc-layout]': 'true',\n        '[class.mc-layout-has-sidebar]': 'hasSidebar'\n    },\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class McLayoutComponent {\n    hasSidebar = false;\n}\n","import {\n    ChangeDetectionStrategy,\n    Component,\n    EventEmitter,\n    Host,\n    Input,\n    OnInit,\n    Optional,\n    Output\n} from '@angular/core';\nimport { toBoolean } from '@ptsecurity/mosaic/core';\n\nimport { McLayoutComponent } from './layout.component';\n\n\n@Component({\n    selector: 'mc-sidebar',\n    preserveWhitespaces: false,\n    templateUrl: './sidebar.component.html',\n    host: {\n        '[class.mc-layout-sidebar]': 'true',\n        '[class.mc-layout-sidebar-collapsed]': 'mcCollapsed',\n        '[style.flex]': 'mcFlex',\n        '[style.max-width.px]': 'mcWidth',\n        '[style.min-width.px]': 'mcWidth',\n        '[style.width.px]': 'mcWidth'\n    },\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class McSidebarComponent implements OnInit {\n\n    @Input() _mcWidth = 200;\n    @Input() mcCollapsedWidth = 80;\n\n    @Input()\n    set mcCollapsible(value: boolean) {\n        this.collapsible = toBoolean(value);\n    }\n\n    get mcCollapsible(): boolean {\n        return this.collapsible;\n    }\n\n    @Input()\n    set mcCollapsed(value: boolean) {\n        this.collapsed = toBoolean(value);\n    }\n\n    get mcCollapsed(): boolean {\n        return this.collapsed;\n    }\n\n    // tslint:disable-next-line\n    @Output() mcCollapsedChange = new EventEmitter();\n\n    private collapsed = false;\n    private collapsible = false;\n\n    get mcFlex(): string {\n        if (this.mcCollapsed) {\n            return `0 0 ${this.mcCollapsedWidth}px`;\n        } else {\n            return `0 0 ${this.mcWidth}px`;\n        }\n    }\n\n    get mcWidth(): number {\n        if (this.mcCollapsed) {\n            return this.mcCollapsedWidth;\n        } else {\n            return this._mcWidth;\n        }\n    }\n\n    constructor(\n        @Optional() @Host() private mcLayoutComponent: McLayoutComponent) {\n    }\n\n    ngOnInit() {\n        if (this.mcLayoutComponent) {\n            this.mcLayoutComponent.hasSidebar = true;\n        }\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { McContentComponent } from './content.component';\nimport { McFooterComponent } from './footer.component';\nimport { McHeaderComponent } from './header.component';\nimport { McLayoutComponent } from './layout.component';\nimport { McSidebarComponent } from './sidebar.component';\n\n\n@NgModule({\n    imports: [ CommonModule ],\n    exports: [\n        McLayoutComponent,\n        McContentComponent,\n        McFooterComponent,\n        McHeaderComponent,\n        McSidebarComponent\n    ],\n    declarations: [\n        McLayoutComponent,\n        McContentComponent,\n        McFooterComponent,\n        McHeaderComponent,\n        McSidebarComponent\n    ]\n})\nexport class McLayoutModule {\n}\n","import {\n    AfterContentInit,\n    Attribute,\n    ChangeDetectionStrategy,\n    Component,\n    ContentChildren,\n    ElementRef,\n    EventEmitter,\n    forwardRef,\n    Input,\n    Output,\n    QueryList,\n    ViewEncapsulation,\n    ChangeDetectorRef,\n    Inject,\n    OnDestroy,\n    OnInit,\n    ViewChild\n} from '@angular/core';\n\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\n\nimport { Subscription } from 'rxjs';\n\nimport { FocusKeyManager, IFocusableOption } from '@ptsecurity/cdk/a11y';\nimport { SelectionModel } from '@ptsecurity/cdk/collections';\nimport { END, ENTER, HOME, PAGE_DOWN, PAGE_UP, SPACE } from '@ptsecurity/cdk/keycodes';\n\nimport {\n    McLine,\n    McLineSetter,\n    CanDisable,\n    mixinDisabled,\n    toBoolean, CanDisableCtor\n} from '@ptsecurity/mosaic/core';\n\n\n/**\n * Component for list-options of selection-list. Each list-option can automatically\n * generate a checkbox and can put current item into the selectionModel of selection-list\n * if the current item is selected.\n */\n@Component({\n    exportAs: 'mcListOption',\n    selector: 'mc-list-option',\n    host: {\n        tabindex: '-1',\n\n        class: 'mc-list-option',\n        '[class.mc-selected]': 'selected',\n        '[class.mc-focused]': '_hasFocus',\n        '(focus)': '_handleFocus()',\n        '(blur)': '_handleBlur()',\n        '(click)': '_handleClick()'\n    },\n    templateUrl: 'list-option.html',\n    encapsulation: ViewEncapsulation.None,\n    preserveWhitespaces: false,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class McListOption implements AfterContentInit, OnDestroy, OnInit, IFocusableOption {\n    _hasFocus: boolean = false;\n\n    @ContentChildren(McLine) _lines: QueryList<McLine>;\n\n    @ViewChild('text') _text: ElementRef;\n\n    // Whether the label should appear before or after the checkbox. Defaults to 'after'\n    @Input() checkboxPosition: 'before' | 'after' = 'after';\n\n    @Input() value: any;\n\n    @Input()\n    get disabled() {\n        return this._disabled || (this.listSelection && this.listSelection.disabled);\n    }\n\n    set disabled(value: any) {\n        const newValue = toBoolean(value);\n\n        if (newValue !== this._disabled) {\n            this._disabled = newValue;\n            this._changeDetector.markForCheck();\n        }\n    }\n\n    @Input()\n    get selected(): boolean {\n        return this.listSelection.selectedOptions && this.listSelection.selectedOptions.isSelected(this) || false;\n    }\n\n    set selected(value: boolean) {\n        const isSelected = toBoolean(value);\n\n        if (isSelected !== this._selected) {\n            this.setSelected(isSelected);\n\n            this.listSelection._reportValueChange();\n        }\n    }\n\n    private _lineSetter: McLineSetter;\n    private _selected = false;\n    private _disabled = false;\n\n    constructor(\n        private _element: ElementRef,\n        private _changeDetector: ChangeDetectorRef,\n        @Inject(forwardRef(() => McListSelection))\n        public listSelection: McListSelection\n    ) {}\n\n    ngOnInit() {\n        if (this._selected) {\n            // List options that are selected at initialization can't be reported properly to the form\n            // control. This is because it takes some time until the selection-list knows about all\n            // available options. Also it can happen that the ControlValueAccessor has an initial value\n            // that should be used instead. Deferring the value change report to the next tick ensures\n            // that the form control value is not being overwritten.\n            const wasSelected = this._selected;\n\n            Promise.resolve().then(() => {\n                if (this._selected || wasSelected) {\n                    this.selected = true;\n                    this._changeDetector.markForCheck();\n                }\n            });\n        }\n    }\n\n    ngAfterContentInit() {\n        this._lineSetter = new McLineSetter(this._lines, this._element);\n    }\n\n    ngOnDestroy(): void {\n        if (this.selected) {\n            // We have to delay this until the next tick in order\n            // to avoid changed after checked errors.\n            Promise.resolve().then(() => this.selected = false);\n        }\n\n        this.listSelection._removeOptionFromList(this);\n    }\n\n    toggle(): void {\n        this.selected = !this.selected;\n    }\n\n    focus(): void {\n        this._element.nativeElement.focus();\n\n        this.listSelection.setFocusedOption(this);\n    }\n\n    getLabel() {\n        return this._text ? this._text.nativeElement.textContent : '';\n    }\n\n    setSelected(selected: boolean) {\n        if (this._selected === selected || !this.listSelection.selectedOptions) { return; }\n\n        this._selected = selected;\n\n        if (selected) {\n            this.listSelection.selectedOptions.select(this);\n        } else {\n            this.listSelection.selectedOptions.deselect(this);\n        }\n\n        this._changeDetector.markForCheck();\n    }\n\n    _getHeight(): number {\n        return this._element.nativeElement.getClientRects()[0].height;\n    }\n\n    _handleClick() {\n        if (this.disabled) { return; }\n\n        this.listSelection.setFocusedOption(this);\n    }\n\n    _handleFocus() {\n        if (this.disabled || this._hasFocus) { return; }\n\n        this._hasFocus = true;\n    }\n\n    _handleBlur() {\n        this._hasFocus = false;\n\n        this.listSelection._onTouched();\n    }\n\n    _getHostElement(): HTMLElement {\n        return this._element.nativeElement;\n    }\n}\n\n\nexport const MC_SELECTION_LIST_VALUE_ACCESSOR: any = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => McListSelection),\n    multi: true\n};\n\n// Change event that is being fired whenever the selected state of an option changes. */\nexport class McListSelectionChange {\n    constructor(\n        // Reference to the selection list that emitted the event.\n        public source: McListSelection,\n        // Reference to the option that has been changed.\n        public option: McListOption\n    ) {}\n}\n\n\nexport class McListSelectionBase {}\n\nexport const _McListSelectionMixinBase: CanDisableCtor & typeof McListSelectionBase\n    = mixinDisabled(McListSelectionBase);\n\n@Component({\n    exportAs: 'mcListSelection',\n    selector: 'mc-list-selection',\n    template: '<ng-content></ng-content>',\n    styleUrls: ['./list.css'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n    inputs: ['disabled', 'tabIndex'],\n    host: {\n        class: 'mc-list-selection',\n        '[tabIndex]': 'tabIndex',\n        '(focus)': 'focus()',\n        '(blur)': '_onTouched()',\n        '(keydown)': '_onKeyDown($event)',\n        '(window:resize)': 'updateScrollSize()'\n    },\n    providers: [MC_SELECTION_LIST_VALUE_ACCESSOR],\n    preserveWhitespaces: false\n})\nexport class McListSelection extends _McListSelectionMixinBase implements\n    IFocusableOption, CanDisable, AfterContentInit, ControlValueAccessor {\n\n    _keyManager: FocusKeyManager<McListOption>;\n\n    // The option components contained within this selection-list.\n    @ContentChildren(McListOption) options: QueryList<McListOption>;\n\n    tabIndex: number;\n\n    autoSelect: boolean;\n    noUnselect: boolean;\n    multiple: boolean;\n\n    // todo temporary solution\n    withShift: boolean;\n    withCtrl: boolean;\n\n    @Input() horizontal: boolean = false;\n\n    // Emits a change event whenever the selected state of an option changes.\n    @Output() readonly selectionChange: EventEmitter<McListSelectionChange> = new EventEmitter<McListSelectionChange>();\n\n    selectedOptions: SelectionModel<McListOption>;\n\n    // Used for storing the values that were assigned before the options were initialized.\n    private _tempValues: string[] | null;\n\n    private _modelChanges = Subscription.EMPTY;\n\n    constructor(\n        private _element: ElementRef,\n        @Attribute('tabindex') tabIndex: string,\n        @Attribute('auto-select') autoSelect: string,\n        @Attribute('no-unselect') noUnselect: string,\n        @Attribute('multiple') multiple: string\n    ) {\n        super();\n\n        this.autoSelect = autoSelect === null ? true : toBoolean(autoSelect);\n        this.multiple = multiple === null ? true : toBoolean(multiple);\n        this.noUnselect = noUnselect === null ? true : toBoolean(noUnselect);\n\n        this.tabIndex = parseInt(tabIndex) || 0;\n\n        this.selectedOptions = new SelectionModel<McListOption>(this.multiple);\n    }\n\n    ngAfterContentInit(): void {\n        this.horizontal = toBoolean(this.horizontal);\n\n        this._keyManager = new FocusKeyManager<McListOption>(this.options)\n            .withTypeAhead()\n            .withVerticalOrientation(!this.horizontal)\n            .withHorizontalOrientation(this.horizontal ? 'ltr' : null);\n\n        if (this._tempValues) {\n            this._setOptionsFromValues(this._tempValues);\n            this._tempValues = null;\n        }\n\n        // Sync external changes to the model back to the options.\n        this._modelChanges = this.selectedOptions.onChange!.subscribe((event) => {\n            for (const item of event.added) {\n                item.selected = true;\n            }\n\n            for (const item of event.removed) {\n                item.selected = false;\n            }\n        });\n\n        this.updateScrollSize();\n    }\n\n    ngOnDestroy() {\n        this._modelChanges.unsubscribe();\n    }\n\n    focus() {\n        this._element.nativeElement.focus();\n    }\n\n    selectAll() {\n        this.options.forEach((option) => option.setSelected(true));\n\n        this._reportValueChange();\n    }\n\n    deselectAll() {\n        this.options.forEach((option) => option.setSelected(false));\n\n        this._reportValueChange();\n    }\n\n    updateScrollSize(): void {\n        if (this.horizontal || !this.options.first) { return; }\n\n        this._keyManager.withScrollSize(Math.floor(this._getHeight() / this.options.first._getHeight()));\n    }\n\n    // Sets the focused option of the selection-list.\n    setFocusedOption(option: McListOption): void {\n        this._keyManager.updateActiveItem(option);\n\n        if (this.withShift && this.multiple) {\n            const previousIndex = this._keyManager.previousActiveItemIndex;\n            const activeIndex = this._keyManager.activeItemIndex;\n\n            if (previousIndex < activeIndex) {\n                this.options.forEach((item, index) => {\n                    if (index >= previousIndex && index <= activeIndex) { item.setSelected(true); }\n                });\n            } else {\n                this.options.forEach((item, index) => {\n                    if (index >= activeIndex && index <= previousIndex) { item.setSelected(true); }\n                });\n            }\n\n            this.withShift = false;\n        } else if (this.withCtrl) {\n            this.withCtrl = false;\n\n            if (!this._canDeselectLast(option)) { return; }\n\n            option.toggle();\n        } else {\n            if (this.autoSelect) {\n                this.options.forEach((item) => item.setSelected(false));\n                option.setSelected(true);\n            }\n        }\n\n        this._emitChangeEvent(option);\n        this._reportValueChange();\n    }\n\n    // Implemented as part of ControlValueAccessor.\n    writeValue(values: string[]): void {\n        if (this.options) {\n            this._setOptionsFromValues(values || []);\n        } else {\n            this._tempValues = values;\n        }\n    }\n\n    // Implemented as part of ControlValueAccessor.\n    registerOnChange(fn: (value: any) => void): void {\n        this._onChange = fn;\n    }\n\n    // Implemented as part of ControlValueAccessor.\n    registerOnTouched(fn: () => void): void {\n        this._onTouched = fn;\n    }\n\n    // Implemented as a part of ControlValueAccessor.\n    setDisabledState(isDisabled: boolean): void {\n        if (this.options) {\n            this.options.forEach((option) => option.disabled = isDisabled);\n        }\n    }\n\n    getSelectedOptionValues(): string[] {\n        return this.options.filter((option) => option.selected).map((option) => option.value);\n    }\n\n    // Toggles the selected state of the currently focused option.\n    toggleFocusedOption(): void {\n        const focusedIndex = this._keyManager.activeItemIndex;\n\n        if (focusedIndex != null && this._isValidIndex(focusedIndex)) {\n            const focusedOption: McListOption = this.options.toArray()[focusedIndex];\n\n            if (focusedOption && this._canDeselectLast(focusedOption)) {\n                focusedOption.toggle();\n\n                // Emit a change event because the focused option changed its state through user interaction.\n                this._emitChangeEvent(focusedOption);\n            }\n        }\n    }\n\n    _canDeselectLast(listOption: McListOption): boolean {\n        return !(this.noUnselect && this.selectedOptions.selected.length === 1 && listOption.selected);\n    }\n\n    _getHeight(): number {\n        return this._element.nativeElement.getClientRects()[0].height;\n    }\n\n    // View to model callback that should be called if the list or its options lost focus.\n    _onTouched: () => void = () => {};\n\n    // Removes an option from the selection list and updates the active item.\n    _removeOptionFromList(option: McListOption) {\n        if (option._hasFocus) {\n            const optionIndex = this._getOptionIndex(option);\n\n            // Check whether the option is the last item\n            if (optionIndex > 0) {\n                this._keyManager.setPreviousItemActive();\n            } else if (optionIndex === 0 && this.options.length > 1) {\n                this._keyManager.setNextItemActive();\n            }\n        }\n    }\n\n    _onKeyDown(event: KeyboardEvent) {\n        const keyCode = event.keyCode;\n        this.withShift = event.shiftKey;\n        this.withCtrl = event.ctrlKey;\n\n        switch (keyCode) {\n            case SPACE:\n            case ENTER:\n                this.toggleFocusedOption();\n                event.preventDefault();\n\n                break;\n            case HOME:\n                this._keyManager.setFirstItemActive();\n                event.preventDefault();\n\n                break;\n            case END:\n                this._keyManager.setLastItemActive();\n                event.preventDefault();\n\n                break;\n            case PAGE_UP:\n                if (!this.horizontal) { this._keyManager.setPreviousPageItemActive(); }\n\n                event.preventDefault();\n\n                break;\n            case PAGE_DOWN:\n                if (!this.horizontal) { this._keyManager.setNextPageItemActive(); }\n\n                event.preventDefault();\n\n                break;\n            default:\n                this._keyManager.onKeydown(event);\n        }\n    }\n\n    // Reports a value change to the ControlValueAccessor\n    _reportValueChange() {\n        if (this.options) {\n            this._onChange(this.getSelectedOptionValues());\n        }\n    }\n\n    // Emits a change event if the selected state of an option changed.\n    _emitChangeEvent(option: McListOption) {\n        this.selectionChange.emit(new McListSelectionChange(this, option));\n    }\n\n    // Returns the option with the specified value.\n    private _getOptionByValue(value: string): McListOption | undefined {\n        return this.options.find((option) => option.value === value);\n    }\n\n    // Sets the selected options based on the specified values.\n    private _setOptionsFromValues(values: string[]) {\n        this.options.forEach((option) => option.setSelected(false));\n\n        values\n            .map((value) => this._getOptionByValue(value))\n            .filter(Boolean)\n            .forEach((option) => option!.setSelected(true));\n    }\n\n    /**\n     * Utility to ensure all indexes are valid.\n     * @param index The index to be checked.\n     * @returns True if the index is valid for our list of options.\n     */\n    private _isValidIndex(index: number): boolean {\n        return index >= 0 && index < this.options.length;\n    }\n\n    // Returns the index of the specified list option.\n    private _getOptionIndex(option: McListOption): number {\n        return this.options.toArray().indexOf(option);\n    }\n\n    // View to model callback that should be called whenever the selected options change.\n    private _onChange: (value: any) => void = (_: any) => {};\n}\n","// todo пока не делаем, перенесено из материала, но у нас в доках таких простых списков нет.\nimport {\n    AfterContentInit, ChangeDetectionStrategy, Component, ContentChildren, Directive, ElementRef, QueryList,\n    ViewEncapsulation\n} from '@angular/core';\n\nimport { McLine, McLineSetter } from '@ptsecurity/mosaic/core';\n\n\nexport class McListBase {}\n\n@Component({\n    selector: 'mc-list',\n    host: { class: 'mc-list' },\n    template: '<ng-content></ng-content>',\n    styleUrls: ['./list.css'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None\n})\nexport class McList extends McListBase {}\n\n\n/**\n * Directive whose purpose is to add the mc- CSS styling to this selector.\n * @docs-private\n */\n@Directive({\n    selector: '[mc-subheader], [mcSubheader]',\n    host: { class: 'mc-subheader' }\n})\nexport class McListSubheaderCssStyler {}\n\n\n// Boilerplate for applying mixins to McListItem.\nexport class McListItemBase {}\n\n@Component({\n    selector: 'mc-list-item, a[mc-list-item]',\n    host: {\n        class: 'mc-list-item',\n        '(focus)': '_handleFocus()',\n        '(blur)': '_handleBlur()'\n    },\n    templateUrl: './list-item.html',\n    encapsulation: ViewEncapsulation.None,\n    preserveWhitespaces: false,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class McListItem extends McListItemBase implements AfterContentInit {\n    @ContentChildren(McLine) _lines: QueryList<McLine>;\n\n    private _lineSetter: McLineSetter;\n\n    constructor(private _element: ElementRef) {\n        super();\n    }\n\n    ngAfterContentInit() {\n        this._lineSetter = new McLineSetter(this._lines, this._element);\n    }\n\n    _handleFocus() {\n        this._element.nativeElement.classList.add('mc-focused');\n    }\n\n    _handleBlur() {\n        this._element.nativeElement.classList.remove('mc-focused');\n    }\n\n    _getHostElement(): HTMLElement {\n        return this._element.nativeElement;\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { A11yModule } from '@ptsecurity/cdk/a11y';\n\nimport { McLineModule } from '@ptsecurity/mosaic/core';\n\nimport { McListSelection, McListOption } from './list-selection.component';\nimport { McList, McListItem, McListSubheaderCssStyler } from './list.component';\n\n\n@NgModule({\n    imports: [\n        CommonModule,\n        A11yModule,\n        McLineModule\n    ],\n    exports: [\n        McList,\n        McListSelection,\n        McListItem,\n        McListOption,\n        McListSubheaderCssStyler\n    ],\n    declarations: [\n        McList,\n        McListSelection,\n        McListItem,\n        McListOption,\n        McListSubheaderCssStyler\n    ]\n})\nexport class McListModule {}\n","import {\n    Input,\n    Attribute,\n    Component,\n    ElementRef,\n    OnDestroy,\n    ViewEncapsulation,\n    ChangeDetectionStrategy,\n    ChangeDetectorRef\n} from '@angular/core';\n\nimport { FocusMonitor } from '@ptsecurity/cdk/a11y';\nimport {\n    CanDisable, CanDisableCtor,\n    HasTabIndex, HasTabIndexCtor,\n    mixinDisabled,\n    mixinTabIndex,\n    toBoolean\n} from '@ptsecurity/mosaic/core';\n\n\nexport class McLinkBase {\n    constructor(public _elementRef: ElementRef) {\n    }\n}\n\nexport const _McLinkBase: HasTabIndexCtor & CanDisableCtor & typeof McLinkBase\n    = mixinTabIndex(mixinDisabled(McLinkBase));\n\n@Component({\n    selector: 'a.mc-link',\n    template: `<ng-content></ng-content>`,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n    exportAs: 'mcLink',\n    styleUrls: ['./link.css'],\n    inputs: ['disabled'],\n    host: {\n        '[attr.disabled]': 'disabled || null',\n        '[attr.tabindex]': 'tabIndex'\n    }\n})\n\nexport class McLink extends _McLinkBase implements OnDestroy, HasTabIndex, CanDisable {\n\n    @Input()\n    get disabled() {\n        return this._disabled;\n    }\n\n    set disabled(value: any) {\n        const newValue = toBoolean(value);\n\n        if (newValue !== this._disabled) {\n            this._disabled = newValue;\n            this._changeDetector.markForCheck();\n        }\n    }\n\n    private _disabled = false;\n\n    constructor(\n        @Attribute('tabindex') tabIndex: string,\n        public elementRef: ElementRef,\n        private _focusMonitor: FocusMonitor,\n        private _changeDetector: ChangeDetectorRef) {\n\n        super(elementRef);\n        this._focusMonitor.monitor(elementRef.nativeElement, true);\n        this.tabIndex = parseInt(tabIndex) || 0;\n    }\n\n    ngOnDestroy() {\n        this._focusMonitor.stopMonitoring(this.elementRef.nativeElement);\n    }\n\n    focus(): void {\n        this._getHostElement().focus();\n    }\n\n    _getHostElement() {\n        return this.elementRef.nativeElement;\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { A11yModule } from '@ptsecurity/cdk/a11y';\n\nimport { McLink } from './link.component';\n\n\n@NgModule({\n    imports: [\n        CommonModule,\n        A11yModule\n    ],\n    declarations: [McLink],\n    exports: [McLink]\n})\nexport class McLinkModule {}\n","import {\n    AfterContentInit,\n    AfterViewChecked,\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    EventEmitter,\n    forwardRef,\n    Inject,\n    Input,\n    OnChanges,\n    OnDestroy,\n    Optional,\n    Output,\n    SimpleChanges,\n    ViewChild,\n    ViewEncapsulation\n} from '@angular/core';\nimport { DateAdapter, MC_DATE_FORMATS, McDateFormats } from '@ptsecurity/cdk/datetime';\nimport { ComponentPortal, IComponentType, Portal } from '@ptsecurity/cdk/portal';\nimport { Subject, Subscription } from 'rxjs';\n\nimport { McCalendarCellCssClasses } from './calendar-body';\nimport { createMissingDateImplError } from './datepicker-errors';\nimport { McDatepickerIntl } from './datepicker-intl';\nimport { McMonthView } from './month-view';\nimport { McMultiYearView, yearsPerPage } from './multi-year-view';\nimport { McYearView } from './year-view';\n\n\n/**\n * Possible views for the calendar.\n * @docs-private\n */\nexport type McCalendarView = 'month' | 'year' | 'multi-year';\n\n/** Default header for McCalendar */\n@Component({\n    selector: 'mc-calendar-header',\n    templateUrl: 'calendar-header.html',\n    exportAs: 'mcCalendarHeader',\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class McCalendarHeader<D> {\n    constructor(private intl: McDatepickerIntl,\n                @Inject(forwardRef(() => McCalendar)) public calendar: McCalendar<D>,\n                @Optional() private dateAdapter: DateAdapter<D>,\n                @Optional() @Inject(MC_DATE_FORMATS) private dateFormats: McDateFormats,\n                changeDetectorRef: ChangeDetectorRef) {\n\n        this.calendar.stateChanges.subscribe(() => changeDetectorRef.markForCheck());\n    }\n\n    /** The label for the current calendar view. */\n    get periodButtonText(): string {\n        if (this.calendar.currentView === 'month') {\n            const label = this.dateAdapter\n                .format(this.calendar.activeDate, this.dateFormats.display.monthYearLabel);\n\n            return label[0].toLocaleUpperCase() + label.substr(1);\n        }\n\n        if (this.calendar.currentView === 'year') {\n            return this.dateAdapter.getYearName(this.calendar.activeDate);\n        }\n\n        const activeYear = this.dateAdapter.getYear(this.calendar.activeDate);\n        const firstYearInView = this.dateAdapter.getYearName(\n            // tslint:disable-next-line:no-magic-numbers\n            this.dateAdapter.createDate(activeYear - activeYear % 24, 0, 1));\n        const lastYearInView = this.dateAdapter.getYearName(\n            // tslint:disable-next-line:no-magic-numbers\n            this.dateAdapter.createDate(activeYear + yearsPerPage - 1 - activeYear % 24, 0, 1));\n\n        return `${firstYearInView} \\u2013 ${lastYearInView}`;\n    }\n\n    get periodButtonLabel(): string {\n        return this.calendar.currentView === 'month' ?\n            this.intl.switchToMultiYearViewLabel : this.intl.switchToMonthViewLabel;\n    }\n\n    /** The label for the previous button. */\n    get prevButtonLabel(): string {\n        return {\n            month: this.intl.prevMonthLabel,\n            year: this.intl.prevYearLabel,\n            'multi-year': this.intl.prevMultiYearLabel\n        }[this.calendar.currentView];\n    }\n\n    /** The label for the next button. */\n    get nextButtonLabel(): string {\n        return {\n            month: this.intl.nextMonthLabel,\n            year: this.intl.nextYearLabel,\n            'multi-year': this.intl.nextMultiYearLabel\n        }[this.calendar.currentView];\n    }\n\n    /** Handles user clicks on the period label. */\n    currentPeriodClicked(): void {\n        this.calendar.currentView = this.calendar.currentView === 'month' ? 'multi-year' : 'month';\n    }\n\n    /** Handles user clicks on the previous button. */\n    previousClicked(): void {\n        this.calendar.activeDate = this.calendar.currentView === 'month' ?\n            this.dateAdapter.addCalendarMonths(this.calendar.activeDate, -1) :\n            this.dateAdapter.addCalendarYears(\n                this.calendar.activeDate, this.calendar.currentView === 'year' ? -1 : -yearsPerPage\n            );\n    }\n\n    /** Handles user clicks on the next button. */\n    nextClicked(): void {\n        this.calendar.activeDate = this.calendar.currentView === 'month' ?\n            this.dateAdapter.addCalendarMonths(this.calendar.activeDate, 1) :\n            this.dateAdapter.addCalendarYears(\n                this.calendar.activeDate,\n                this.calendar.currentView === 'year' ? 1 : yearsPerPage\n            );\n    }\n\n    /** Whether the previous period button is enabled. */\n    previousEnabled(): boolean {\n        if (!this.calendar.minDate) {\n            return true;\n        }\n\n        return !this.calendar.minDate ||\n            !this.isSameView(this.calendar.activeDate, this.calendar.minDate);\n    }\n\n    /** Whether the next period button is enabled. */\n    nextEnabled(): boolean {\n        return !this.calendar.maxDate ||\n            !this.isSameView(this.calendar.activeDate, this.calendar.maxDate);\n    }\n\n    /** Whether the two dates represent the same view in the current view mode (month or year). */\n    private isSameView(date1: D, date2: D): boolean {\n        if (this.calendar.currentView === 'month') {\n            return this.dateAdapter.getYear(date1) === this.dateAdapter.getYear(date2) &&\n                this.dateAdapter.getMonth(date1) === this.dateAdapter.getMonth(date2);\n        }\n        if (this.calendar.currentView === 'year') {\n            return this.dateAdapter.getYear(date1) === this.dateAdapter.getYear(date2);\n        }\n\n        // Otherwise we are in 'multi-year' view.\n        return Math.floor(this.dateAdapter.getYear(date1) / yearsPerPage) ===\n            Math.floor(this.dateAdapter.getYear(date2) / yearsPerPage);\n    }\n}\n\n/**\n * A calendar that is used as part of the datepicker.\n * @docs-private\n */\n@Component({\n    selector: 'mc-calendar',\n    templateUrl: 'calendar.html',\n    styleUrls: ['calendar.css'],\n    host: {\n        class: 'mc-calendar'\n    },\n    exportAs: 'mcCalendar',\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class McCalendar<D> implements AfterContentInit, AfterViewChecked, OnDestroy, OnChanges {\n\n    /** A date representing the period (month or year) to start the calendar in. */\n    @Input()\n    get startAt(): D | null {\n        return this._startAt;\n    }\n\n    set startAt(value: D | null) {\n        this._startAt = this.getValidDateOrNull(this.dateAdapter.deserialize(value));\n    }\n\n    /** The currently selected date. */\n    @Input()\n    get selected(): D | null {\n        return this._selected;\n    }\n\n    set selected(value: D | null) {\n        this._selected = this.getValidDateOrNull(this.dateAdapter.deserialize(value));\n    }\n\n    /** The minimum selectable date. */\n    @Input()\n    get minDate(): D | null {\n        return this._minDate;\n    }\n\n    set minDate(value: D | null) {\n        this._minDate = this.getValidDateOrNull(this.dateAdapter.deserialize(value));\n    }\n\n    /** The maximum selectable date. */\n    @Input()\n    get maxDate(): D | null {\n        return this._maxDate;\n    }\n\n    set maxDate(value: D | null) {\n        this._maxDate = this.getValidDateOrNull(this.dateAdapter.deserialize(value));\n    }\n\n    /**\n     * The current active date. This determines which time period is shown and which date is\n     * highlighted when using keyboard navigation.\n     */\n    get activeDate(): D {\n        return this.clampedActiveDate;\n    }\n\n    set activeDate(value: D) {\n        this.clampedActiveDate = this.dateAdapter.clampDate(value, this.minDate, this.maxDate);\n        this.stateChanges.next();\n    }\n\n    /** Whether the calendar is in month view. */\n    get currentView(): McCalendarView {\n        return this._currentView;\n    }\n\n    set currentView(value: McCalendarView) {\n        this._currentView = value;\n        this.moveFocusOnNextTick = true;\n    }\n\n    /** An input indicating the type of the header component, if set. */\n    @Input() headerComponent: IComponentType<any>;\n\n    /** A portal containing the header component type for this calendar. */\n    calendarHeaderPortal: Portal<any>;\n\n    /** Whether the calendar should be started in month or year view. */\n    @Input() startView: McCalendarView = 'month';\n\n    /** Function used to filter which dates are selectable. */\n    @Input() dateFilter: (date: D) => boolean;\n\n    /** Function that can be used to add custom CSS classes to dates. */\n    @Input() dateClass: (date: D) => McCalendarCellCssClasses;\n\n    /** Emits when the currently selected date changes. */\n    @Output() readonly selectedChange: EventEmitter<D> = new EventEmitter<D>();\n\n    /**\n     * Emits the year chosen in multiyear view.\n     * This doesn't imply a change on the selected date.\n     */\n    @Output() readonly yearSelected: EventEmitter<D> = new EventEmitter<D>();\n\n    /**\n     * Emits the month chosen in year view.\n     * This doesn't imply a change on the selected date.\n     */\n    @Output() readonly monthSelected: EventEmitter<D> = new EventEmitter<D>();\n\n    /** Emits when any date is selected. */\n    @Output() readonly userSelection: EventEmitter<void> = new EventEmitter<void>();\n\n    /** Reference to the current month view component. */\n    @ViewChild(McMonthView) monthView: McMonthView<D>;\n\n    /** Reference to the current year view component. */\n    @ViewChild(McYearView) yearView: McYearView<D>;\n\n    /** Reference to the current multi-year view component. */\n    @ViewChild(McMultiYearView) multiYearView: McMultiYearView<D>;\n\n    /**\n     * Emits whenever there is a state change that the header may need to respond to.\n     */\n    stateChanges = new Subject<void>();\n\n    private intlChanges: Subscription;\n\n    /**\n     * Used for scheduling that focus should be moved to the active cell on the next tick.\n     * We need to schedule it, rather than do it immediately, because we have to wait\n     * for Angular to re-evaluate the view children.\n     */\n    private moveFocusOnNextTick = false;\n    private _startAt: D | null;\n    private _selected: D | null;\n    private _minDate: D | null;\n    private _maxDate: D | null;\n    private clampedActiveDate: D;\n    private _currentView: McCalendarView;\n\n    constructor(\n        intl: McDatepickerIntl,\n        @Optional() private dateAdapter: DateAdapter<D>,\n        @Optional() @Inject(MC_DATE_FORMATS) private dateFormats: McDateFormats,\n        private changeDetectorRef: ChangeDetectorRef\n    ) {\n        if (!this.dateAdapter) {\n            throw createMissingDateImplError('DateAdapter');\n        }\n\n        if (!this.dateFormats) {\n            throw createMissingDateImplError('MC_DATE_FORMATS');\n        }\n\n        this.intlChanges = intl.changes.subscribe(() => {\n            changeDetectorRef.markForCheck();\n            this.stateChanges.next();\n        });\n    }\n\n    ngAfterContentInit() {\n        this.calendarHeaderPortal = new ComponentPortal(this.headerComponent || McCalendarHeader);\n        this.activeDate = this.startAt || this.dateAdapter.today();\n\n        // Assign to the private property since we don't want to move focus on init.\n        this._currentView = this.startView;\n    }\n\n    ngAfterViewChecked() {\n        if (this.moveFocusOnNextTick) {\n            this.moveFocusOnNextTick = false;\n            this.focusActiveCell();\n        }\n    }\n\n    ngOnDestroy() {\n        this.intlChanges.unsubscribe();\n        this.stateChanges.complete();\n    }\n\n    ngOnChanges(changes: SimpleChanges) {\n        const change = changes.minDate || changes.maxDate || changes.dateFilter;\n\n        if (change && !change.firstChange) {\n            const view = this.getCurrentViewComponent();\n\n            if (view) {\n                // We need to `detectChanges` manually here, because the `minDate`, `maxDate` etc. are\n                // passed down to the view via data bindings which won't be up-to-date when we call `init`.\n                this.changeDetectorRef.detectChanges();\n                view.init();\n            }\n        }\n\n        this.stateChanges.next();\n    }\n\n    focusActiveCell() {\n        this.getCurrentViewComponent().focusActiveCell();\n    }\n\n    /** Updates today's date after an update of the active date */\n    updateTodaysDate() {\n        const view = this.currentView === 'month' ? this.monthView :\n            (this.currentView === 'year' ? this.yearView : this.multiYearView);\n\n        view.ngAfterContentInit();\n    }\n\n    /** Handles date selection in the month view. */\n    dateSelected(date: D): void {\n        if (!this.dateAdapter.sameDate(date, this.selected)) {\n            this.selectedChange.emit(date);\n        }\n    }\n\n    /** Handles year selection in the multiyear view. */\n    yearSelectedInMultiYearView(normalizedYear: D) {\n        this.yearSelected.emit(normalizedYear);\n    }\n\n    /** Handles month selection in the year view. */\n    monthSelectedInYearView(normalizedMonth: D) {\n        this.monthSelected.emit(normalizedMonth);\n    }\n\n    userSelected(): void {\n        this.userSelection.emit();\n    }\n\n    /** Handles year/month selection in the multi-year/year views. */\n    goToDateInView(date: D, view: 'month' | 'year' | 'multi-year'): void {\n        this.activeDate = date;\n        this.currentView = view;\n    }\n\n    /**\n     * @param obj The object to check.\n     * @returns The given object if it is both a date instance and valid, otherwise null.\n     */\n    private getValidDateOrNull(obj: any): D | null {\n        return (this.dateAdapter.isDateInstance(obj) && this.dateAdapter.isValid(obj)) ? obj : null;\n    }\n\n    /** Returns the component instance that corresponds to the current calendar view. */\n    private getCurrentViewComponent() {\n        return this.monthView || this.yearView || this.multiYearView;\n    }\n}\n","import {\n    animate,\n    state,\n    style,\n    transition,\n    trigger,\n    AnimationTriggerMetadata\n} from '@angular/animations';\n\n\n/**\n * Animations used by the mosaic datepicker.\n * @docs-private\n */\nexport const mcDatepickerAnimations: {\n    readonly transformPanel: AnimationTriggerMetadata;\n    readonly fadeInCalendar: AnimationTriggerMetadata;\n} = {\n    /** Transforms the height of the datepicker's calendar. */\n    transformPanel: trigger('transformPanel', [\n        state('void', style({\n            opacity: 0,\n            transform: 'scale(1, 0.8)'\n        })),\n        transition('void => enter', animate('120ms cubic-bezier(0, 0, 0.2, 1)', style({\n            opacity: 1,\n            transform: 'scale(1, 1)'\n        }))),\n        transition('* => void', animate('100ms linear', style({ opacity: 0 })))\n    ]),\n\n    /** Fades in the content of the calendar. */\n    fadeInCalendar: trigger('fadeInCalendar', [\n        state('void', style({ opacity: 0 })),\n        state('enter', style({ opacity: 1 })),\n\n        // need to keep it until #12440 gets in, otherwise the exit animation will look glitchy.\n        transition('void => *', animate('120ms 100ms cubic-bezier(0.55, 0, 0.55, 0.2)'))\n    ])\n};\n\n// todo should be put into polyfils\n// https://github.com/angular/angular/issues/24769\nif (!Element.prototype.matches) {\n    Element.prototype.matches = (Element.prototype as any).msMatchesSelector;\n}\n","// tslint:disable:no-unbound-method\n// tslint:disable:no-magic-numbers\nimport { DOCUMENT } from '@angular/common';\nimport {\n    AfterViewInit,\n    ChangeDetectionStrategy,\n    Component,\n    ComponentRef,\n    ElementRef,\n    EventEmitter,\n    Inject,\n    InjectionToken,\n    Input,\n    NgZone,\n    OnDestroy,\n    Optional,\n    Output,\n    ViewChild,\n    ViewContainerRef,\n    ViewEncapsulation\n} from '@angular/core';\nimport { Directionality } from '@ptsecurity/cdk/bidi';\nimport { coerceBooleanProperty } from '@ptsecurity/cdk/coercion';\nimport { DateAdapter } from '@ptsecurity/cdk/datetime';\nimport { ESCAPE, UP_ARROW } from '@ptsecurity/cdk/keycodes';\nimport {\n    Overlay,\n    OverlayConfig,\n    OverlayRef,\n    IPositionStrategy,\n    IScrollStrategy\n} from '@ptsecurity/cdk/overlay';\nimport { ComponentPortal, IComponentType } from '@ptsecurity/cdk/portal';\nimport {\n    CanColor,\n    CanColorCtor,\n    mixinColor,\n    ThemePalette\n} from '@ptsecurity/mosaic/core';\nimport { McFormFieldControl } from '@ptsecurity/mosaic/form-field';\nimport { merge, Observable, Subject, Subscription } from 'rxjs';\nimport { filter, take } from 'rxjs/operators';\n\nimport { McCalendar } from './calendar';\nimport { McCalendarCellCssClasses } from './calendar-body';\nimport { mcDatepickerAnimations } from './datepicker-animations';\nimport { createMissingDateImplError } from './datepicker-errors';\nimport { McDatepickerInput } from './datepicker-input';\n\n\n/** Used to generate a unique ID for each datepicker instance. */\nlet datepickerUid = 0;\n\n/** Injection token that determines the scroll handling while the calendar is open. */\nexport const MC_DATEPICKER_SCROLL_STRATEGY =\n    new InjectionToken<() => IScrollStrategy>('mc-datepicker-scroll-strategy');\n\n/** @docs-private */\n// tslint:disable-next-line:naming-convention\nexport function MC_DATEPICKER_SCROLL_STRATEGY_FACTORY(overlay: Overlay): () => IScrollStrategy {\n    return () => overlay.scrollStrategies.reposition();\n}\n\n/** @docs-private */\nexport const MC_DATEPICKER_SCROLL_STRATEGY_FACTORY_PROVIDER = {\n    provide: MC_DATEPICKER_SCROLL_STRATEGY,\n    deps: [Overlay],\n    useFactory: MC_DATEPICKER_SCROLL_STRATEGY_FACTORY\n};\n\n// Boilerplate for applying mixins to McDatepickerContent.\n/** @docs-private */\nexport class McDatepickerContentBase {\n    // tslint:disable-next-line:naming-convention\n    constructor(public _elementRef: ElementRef) {\n    }\n}\n\n// tslint:disable-next-line:naming-convention\nexport const McDatepickerContentMixinBase: CanColorCtor & typeof McDatepickerContentBase =\n    mixinColor(McDatepickerContentBase);\n\n/**\n * Component used as the content for the datepicker dialog and popup. We use this instead of using\n * McCalendar directly as the content so we can control the initial focus. This also gives us a\n * place to put additional features of the popup that are not part of the calendar itself in the\n * future. (e.g. confirmation buttons).\n * @docs-private\n */\n@Component({\n    selector: 'mc-datepicker__content',\n    templateUrl: 'datepicker-content.html',\n    styleUrls: ['datepicker-content.css'],\n    host: {\n        class: 'mc-datepicker__content',\n        '[@transformPanel]': '\"enter\"'\n    },\n    animations: [\n        mcDatepickerAnimations.transformPanel,\n        mcDatepickerAnimations.fadeInCalendar\n    ],\n    exportAs: 'mcDatepickerContent',\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    inputs: ['color']\n})\nexport class McDatepickerContent<D> extends McDatepickerContentMixinBase\n    implements AfterViewInit, CanColor {\n\n    /** Reference to the internal calendar component. */\n    @ViewChild(McCalendar) calendar: McCalendar<D>;\n\n    /** Reference to the datepicker that created the overlay. */\n    datepicker: McDatepicker<D>;\n\n    /** Whether the datepicker is above or below the input. */\n    isAbove: boolean;\n\n    constructor(elementRef: ElementRef) {\n        super(elementRef);\n    }\n\n    ngAfterViewInit() {\n        this.calendar.focusActiveCell();\n    }\n}\n\n\n// TODO: We use a component instead of a directive here so the user can use implicit\n// template reference variables (e.g. #d vs #d=\"mcDatepicker\"). We can change this to a directive\n// if angular adds support for `exportAs: '$implicit'` on directives.\n/** Component responsible for managing the datepicker popup/dialog. */\n@Component({\n    selector: 'mc-datepicker',\n    template: '',\n    exportAs: 'mcDatepicker',\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n    providers: [{ provide: McFormFieldControl, useExisting: McDatepicker }]\n})\nexport class McDatepicker<D> implements OnDestroy, CanColor {\n\n    /** The date to open the calendar to initially. */\n    @Input()\n    get startAt(): D | null {\n        // If an explicit startAt is set we start there, otherwise we start at whatever the currently\n        // selected value is.\n        return this._startAt || (this.datepickerInput ? this.datepickerInput.value : null);\n    }\n\n    set startAt(value: D | null) {\n        this._startAt = this.getValidDateOrNull(this.dateAdapter.deserialize(value));\n    }\n\n    /** Color palette to use on the datepicker's calendar. */\n    @Input()\n    get color(): ThemePalette {\n        // @ts-ignore:next-line\n        return this._color ||\n            (this.datepickerInput ? this.datepickerInput.getThemePalette() : undefined);\n    }\n\n    set color(value: ThemePalette) {\n        this._color = value;\n    }\n\n    /** Whether the datepicker pop-up should be disabled. */\n    @Input()\n    get disabled(): boolean {\n        return this._disabled === undefined && this.datepickerInput ?\n            this.datepickerInput.disabled : !!this._disabled;\n    }\n\n    set disabled(value: boolean) {\n        const newValue = coerceBooleanProperty(value);\n\n        if (newValue !== this._disabled) {\n            this._disabled = newValue;\n            this.disabledChange.next(newValue);\n        }\n    }\n\n    /** Whether the calendar is open. */\n    @Input()\n    get opened(): boolean {\n        return this._opened;\n    }\n\n    set opened(value: boolean) {\n        if (value) {\n            this.open();\n        } else {\n            this.close();\n        }\n    }\n\n    /** The currently selected date. */\n    get selected(): D | null {\n        return this.validSelected;\n    }\n\n    set selected(value: D | null) {\n        this.validSelected = value;\n    }\n\n    /** The minimum selectable date. */\n    get minDate(): D | null {\n        return this.datepickerInput && this.datepickerInput.min;\n    }\n\n    /** The maximum selectable date. */\n    get maxDate(): D | null {\n        return this.datepickerInput && this.datepickerInput.max;\n    }\n\n    get dateFilter(): (date: D | null) => boolean {\n        return this.datepickerInput && this.datepickerInput.dateFilter;\n    }\n\n\n    get value(): D | null {\n        return this.selected;\n    }\n\n    /** An input indicating the type of the custom header component for the calendar, if set. */\n    @Input() calendarHeaderComponent: IComponentType<any>;\n\n    /** The view that the calendar should start in. */\n    @Input() startView: 'month' | 'year' | 'multi-year' = 'month';\n\n    /**\n     * Emits selected year in multiyear view.\n     * This doesn't imply a change on the selected date.\n     */\n    @Output() readonly yearSelected: EventEmitter<D> = new EventEmitter<D>();\n\n    /**\n     * Emits selected month in year view.\n     * This doesn't imply a change on the selected date.\n     */\n    @Output() readonly monthSelected: EventEmitter<D> = new EventEmitter<D>();\n\n    /** Classes to be passed to the date picker panel. Supports the same syntax as `ngClass`. */\n    @Input() panelClass: string | string[];\n\n    /** Function that can be used to add custom CSS classes to dates. */\n    @Input() dateClass: (date: D) => McCalendarCellCssClasses;\n\n    /** Emits when the datepicker has been opened. */\n    @Output('opened') openedStream: EventEmitter<void> = new EventEmitter<void>();\n\n    /** Emits when the datepicker has been closed. */\n    @Output('closed') closedStream: EventEmitter<void> = new EventEmitter<void>();\n\n    /** The id for the datepicker calendar. */\n    id: string = `mc-datepicker-${datepickerUid++}`;\n\n    /** A reference to the overlay when the calendar is opened as a popup. */\n    popupRef: OverlayRef;\n\n    /** The input element this datepicker is associated with. */\n    datepickerInput: McDatepickerInput<D>;\n\n    readonly stateChanges: Observable<void> = new Subject<void>();\n\n    /** Emits when the datepicker is disabled. */\n    readonly disabledChange = new Subject<boolean>();\n\n    /** Emits new selected date when selected date changes. */\n    readonly selectedChanged = new Subject<D>();\n    private scrollStrategy: () => IScrollStrategy;\n    private _startAt: D | null;\n    private _disabled: boolean;\n    private _opened = false;\n    private validSelected: D | null = null;\n    private _color: ThemePalette;\n\n    /** A portal containing the calendar for this datepicker. */\n    private calendarPortal: ComponentPortal<McDatepickerContent<D>>;\n\n    /** Reference to the component instantiated in popup mode. */\n    private popupComponentRef: ComponentRef<McDatepickerContent<D>> | null;\n\n    /** The element that was focused before the datepicker was opened. */\n    private focusedElementBeforeOpen: HTMLElement | null = null;\n\n    /** Subscription to value changes in the associated input element. */\n    private inputSubscription = Subscription.EMPTY;\n\n    constructor(private overlay: Overlay,\n                private ngZone: NgZone,\n                private viewContainerRef: ViewContainerRef,\n                @Inject(MC_DATEPICKER_SCROLL_STRATEGY) scrollStrategy: any,\n                @Optional() private dateAdapter: DateAdapter<D>,\n                @Optional() private dir: Directionality,\n                @Optional() @Inject(DOCUMENT) private document: any) {\n        if (!this.dateAdapter) {\n            throw createMissingDateImplError('DateAdapter');\n        }\n\n        this.scrollStrategy = scrollStrategy;\n    }\n\n    ngOnDestroy() {\n        this.close();\n        this.inputSubscription.unsubscribe();\n        this.disabledChange.complete();\n\n        if (this.popupRef) {\n            this.popupRef.dispose();\n            this.popupComponentRef = null;\n        }\n    }\n\n    /** Selects the given date */\n    select(date: D): void {\n        const oldValue = this.selected;\n        this.selected = date;\n        if (!this.dateAdapter.sameDate(oldValue, this.selected)) {\n            this.selectedChanged.next(date);\n        }\n    }\n\n    /** Emits the selected year in multiyear view */\n    selectYear(normalizedYear: D): void {\n        this.yearSelected.emit(normalizedYear);\n    }\n\n    /** Emits selected month in year view */\n    selectMonth(normalizedMonth: D): void {\n        this.monthSelected.emit(normalizedMonth);\n    }\n\n    /**\n     * Register an input with this datepicker.\n     * @param input The datepicker input to register with this datepicker.\n     */\n    registerInput(input: McDatepickerInput<D>): void {\n        if (this.datepickerInput) {\n            throw Error('A McDatepicker can only be associated with a single input.');\n        }\n        this.datepickerInput = input;\n        this.inputSubscription =\n            this.datepickerInput.valueChange.subscribe((value: D | null) => this.selected = value);\n    }\n\n    /** Open the calendar. */\n    open(): void {\n        if (this._opened || this.disabled) {\n            return;\n        }\n        if (!this.datepickerInput) {\n            throw Error('Attempted to open an McDatepicker with no associated input.');\n        }\n        if (this.document) {\n            this.focusedElementBeforeOpen = this.document.activeElement;\n        }\n\n        this.openAsPopup();\n\n        this._opened = true;\n        this.openedStream.emit();\n    }\n\n    /** Close the calendar. */\n    close(): void {\n        if (!this._opened) {\n            return;\n        }\n\n        if (this.popupRef && this.popupRef.hasAttached()) {\n            this.popupRef.detach();\n        }\n\n        if (this.calendarPortal && this.calendarPortal.isAttached) {\n            this.calendarPortal.detach();\n        }\n\n        const completeClose = () => {\n            // The `_opened` could've been reset already if\n            // we got two events in quick succession.\n            if (this._opened) {\n                this._opened = false;\n                this.closedStream.emit();\n                this.focusedElementBeforeOpen = null;\n            }\n        };\n\n        if (this.focusedElementBeforeOpen &&\n            typeof this.focusedElementBeforeOpen.focus === 'function') {\n            // Because IE moves focus asynchronously, we can't count on it being restored before we've\n            // marked the datepicker as closed. If the event fires out of sequence and the element that\n            // we're refocusing opens the datepicker on focus, the user could be stuck with not being\n            // able to close the calendar at all. We work around it by making the logic, that marks\n            // the datepicker as closed, async as well.\n            this.focusedElementBeforeOpen.focus();\n            setTimeout(completeClose);\n        } else {\n            completeClose();\n        }\n    }\n\n    /** Open the calendar as a popup. */\n    private openAsPopup(): void {\n        if (!this.calendarPortal) {\n            this.calendarPortal = new ComponentPortal<McDatepickerContent<D>>(McDatepickerContent,\n                this.viewContainerRef);\n        }\n\n        if (!this.popupRef) {\n            this.createPopup();\n        }\n\n        if (!this.popupRef.hasAttached()) {\n            this.popupComponentRef = this.popupRef.attach(this.calendarPortal);\n            this.popupComponentRef.instance.datepicker = this;\n            this.setColor();\n\n            // Update the position once the calendar has rendered.\n            this.ngZone.onStable.asObservable().pipe(take(1)).subscribe(() => {\n                this.popupRef.updatePosition();\n            });\n        }\n    }\n\n    /** Create the popup. */\n    private createPopup(): void {\n        const overlayConfig = new OverlayConfig({\n            positionStrategy: this.createPopupPositionStrategy(),\n            hasBackdrop: true,\n            backdropClass: 'mc-overlay-transparent-backdrop',\n            direction: this.dir,\n            scrollStrategy: this.scrollStrategy(),\n            panelClass: 'mc-datepicker__popup'\n        });\n\n        this.popupRef = this.overlay.create(overlayConfig);\n        this.popupRef.overlayElement.setAttribute('role', 'dialog');\n\n        merge(\n            this.popupRef.backdropClick(),\n            this.popupRef.detachments(),\n            this.popupRef.keydownEvents().pipe(filter((event) => {\n                // Closing on alt + up is only valid when there's an input associated with the datepicker.\n                // tslint:disable-next-line:deprecation\n                return event.keyCode === ESCAPE || (this.datepickerInput && event.altKey && event.keyCode === UP_ARROW);\n            }))\n        ).subscribe(() => this.close());\n    }\n\n    /** Create the popup PositionStrategy. */\n    private createPopupPositionStrategy(): IPositionStrategy {\n        return this.overlay.position()\n            .flexibleConnectedTo(this.datepickerInput.elementRef)\n            .withTransformOriginOn('.mc-datepicker__content')\n            .withFlexibleDimensions(false)\n            .withViewportMargin(8)\n            .withLockedPosition()\n            .withPositions([\n                {\n                    originX: 'start',\n                    originY: 'bottom',\n                    overlayX: 'start',\n                    overlayY: 'top'\n                },\n                {\n                    originX: 'start',\n                    originY: 'top',\n                    overlayX: 'start',\n                    overlayY: 'bottom'\n                },\n                {\n                    originX: 'end',\n                    originY: 'bottom',\n                    overlayX: 'end',\n                    overlayY: 'top'\n                },\n                {\n                    originX: 'end',\n                    originY: 'top',\n                    overlayX: 'end',\n                    overlayY: 'bottom'\n                }\n            ]);\n    }\n\n    /**\n     * @param obj The object to check.\n     * @returns The given object if it is both a date instance and valid, otherwise null.\n     */\n    private getValidDateOrNull(obj: any): D | null {\n        return (this.dateAdapter.isDateInstance(obj) && this.dateAdapter.isValid(obj)) ? obj : null;\n    }\n\n    /** Passes the current theme color along to the calendar overlay. */\n    private setColor(): void {\n        const color = this.color;\n        if (this.popupComponentRef) {\n            this.popupComponentRef.instance.color = color;\n        }\n    }\n}\n","// tslint:disable:no-empty\nimport {\n    Directive,\n    ElementRef,\n    EventEmitter,\n    forwardRef,\n    Inject,\n    Input,\n    OnDestroy,\n    Optional,\n    Output\n} from '@angular/core';\nimport {\n    AbstractControl,\n    ControlValueAccessor,\n    NG_VALIDATORS,\n    NG_VALUE_ACCESSOR,\n    ValidationErrors,\n    Validator,\n    ValidatorFn,\n    Validators\n} from '@angular/forms';\nimport { coerceBooleanProperty } from '@ptsecurity/cdk/coercion';\nimport { DateAdapter, MC_DATE_FORMATS, McDateFormats } from '@ptsecurity/cdk/datetime';\nimport { DOWN_ARROW } from '@ptsecurity/cdk/keycodes';\nimport { ThemePalette } from '@ptsecurity/mosaic/core';\nimport { McFormField } from '@ptsecurity/mosaic/form-field';\nimport { MC_INPUT_VALUE_ACCESSOR } from '@ptsecurity/mosaic/input';\nimport { Subscription } from 'rxjs';\n\nimport { McDatepicker } from './datepicker';\nimport { createMissingDateImplError } from './datepicker-errors';\n\n\n/** @docs-private */\nexport const MC_DATEPICKER_VALUE_ACCESSOR: any = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => McDatepickerInput),\n    multi: true\n};\n\n/** @docs-private */\nexport const MC_DATEPICKER_VALIDATORS: any = {\n    provide: NG_VALIDATORS,\n    useExisting: forwardRef(() => McDatepickerInput),\n    multi: true\n};\n\n\n/**\n * An event used for datepicker input and change events. We don't always have access to a native\n * input or change event because the event may have been triggered by the user clicking on the\n * calendar popup. For consistency, we always use McDatepickerInputEvent instead.\n */\nexport class McDatepickerInputEvent<D> {\n    /** The new value for the target datepicker input. */\n    value: D | null;\n\n    constructor(\n        /** Reference to the datepicker input component that emitted the event. */\n        public target: McDatepickerInput<D>,\n        /** Reference to the native input element associated with the datepicker input. */\n        public targetElement: HTMLElement) {\n        this.value = this.target.value;\n    }\n}\n\n\n/** Directive used to connect an input to a McDatepicker. */\n@Directive({\n    selector: 'input[mcDatepicker]',\n    providers: [\n        MC_DATEPICKER_VALUE_ACCESSOR,\n        MC_DATEPICKER_VALIDATORS,\n        { provide: MC_INPUT_VALUE_ACCESSOR, useExisting: McDatepickerInput }\n    ],\n    host: {\n        '[attr.aria-haspopup]': 'true',\n        '[attr.aria-owns]': '(datepicker?.opened && datepicker.id) || null',\n        '[attr.min]': 'min ? dateAdapter.toIso8601(min) : null',\n        '[attr.max]': 'max ? dateAdapter.toIso8601(max) : null',\n        '[disabled]': 'disabled',\n        '(input)': 'onInput($event.target.value)',\n        '(change)': 'onChange()',\n        '(blur)': 'onBlur()',\n        '(keydown)': 'onKeydown($event)'\n    },\n    exportAs: 'mcDatepickerInput'\n})\nexport class McDatepickerInput<D> implements ControlValueAccessor, OnDestroy, Validator {\n    /** The datepicker that this input is associated with. */\n    @Input()\n    set mcDatepicker(value: McDatepicker<D>) {\n        if (!value) {\n            return;\n        }\n\n        this.datepicker = value;\n        this.datepicker.registerInput(this);\n        this.datepickerSubscription.unsubscribe();\n\n        this.datepickerSubscription = this.datepicker.selectedChanged.subscribe((selected: D) => {\n            this.value = selected;\n            this.cvaOnChange(selected);\n            this.onTouched();\n            this.dateInput.emit(new McDatepickerInputEvent(this, this.elementRef.nativeElement));\n            this.dateChange.emit(new McDatepickerInputEvent(this, this.elementRef.nativeElement));\n        });\n    }\n\n    /** Function that can be used to filter out dates within the datepicker. */\n    @Input()\n    set mcDatepickerFilter(value: (date: D | null) => boolean) {\n        this.dateFilter = value;\n        this.validatorOnChange();\n    }\n\n    /** The value of the input. */\n    @Input()\n    get value(): D | null {\n        return this._value;\n    }\n\n    set value(value: D | null) {\n        // tslint:disable-next-line:no-parameter-reassignment\n        value = this.dateAdapter.deserialize(value);\n        this.lastValueValid = !value || this.dateAdapter.isValid(value);\n        // tslint:disable-next-line:no-parameter-reassignment\n        value = this.getValidDateOrNull(value);\n        const oldDate = this.value;\n        this._value = value;\n        this.formatValue(value);\n\n        if (!this.dateAdapter.sameDate(oldDate, value)) {\n            this.valueChange.emit(value);\n        }\n    }\n\n    /** The minimum valid date. */\n    @Input()\n    get min(): D | null {\n        return this._min;\n    }\n\n    set min(value: D | null) {\n        this._min = this.getValidDateOrNull(this.dateAdapter.deserialize(value));\n        this.validatorOnChange();\n    }\n\n    /** The maximum valid date. */\n    @Input()\n    get max(): D | null {\n        return this._max;\n    }\n\n    set max(value: D | null) {\n        this._max = this.getValidDateOrNull(this.dateAdapter.deserialize(value));\n        this.validatorOnChange();\n    }\n\n    /** Whether the datepicker-input is disabled. */\n    @Input()\n    get disabled(): boolean {\n        return !!this._disabled;\n    }\n\n    set disabled(value: boolean) {\n        const newValue = coerceBooleanProperty(value);\n        const element = this.elementRef.nativeElement;\n\n        if (this._disabled !== newValue) {\n            this._disabled = newValue;\n            this.disabledChange.emit(newValue);\n        }\n\n        // We need to null check the `blur` method, because it's undefined during SSR.\n        if (newValue && element.blur) {\n            // Normally, native input elements automatically blur if they turn disabled. This behavior\n            // is problematic, because it would mean that it triggers another change detection cycle,\n            // which then causes a changed after checked error if the input element was focused before.\n            element.blur();\n        }\n    }\n\n    datepicker: McDatepicker<D>;\n    dateFilter: (date: D | null) => boolean;\n\n    /** Emits when a `change` event is fired on this `<input>`. */\n    @Output() readonly dateChange: EventEmitter<McDatepickerInputEvent<D>> =\n        new EventEmitter<McDatepickerInputEvent<D>>();\n\n    /** Emits when an `input` event is fired on this `<input>`. */\n    @Output() readonly dateInput: EventEmitter<McDatepickerInputEvent<D>> =\n        new EventEmitter<McDatepickerInputEvent<D>>();\n\n    /** Emits when the value changes (either due to user input or programmatic change). */\n    valueChange = new EventEmitter<D | null>();\n\n    /** Emits when the disabled state has changed */\n    disabledChange = new EventEmitter<boolean>();\n    private _value: D | null;\n    private _min: D | null;\n    private _max: D | null;\n    private _disabled: boolean;\n\n    private datepickerSubscription = Subscription.EMPTY;\n\n    private localeSubscription = Subscription.EMPTY;\n\n    /** Whether the last value set on the input was valid. */\n    private lastValueValid = false;\n\n    constructor(\n        public elementRef: ElementRef<HTMLInputElement>,\n        @Optional() public dateAdapter: DateAdapter<D>,\n        @Optional() @Inject(MC_DATE_FORMATS) private dateFormats: McDateFormats,\n        @Optional() private formField: McFormField\n    ) {\n        if (!this.dateAdapter) {\n            throw createMissingDateImplError('DateAdapter');\n        }\n\n        if (!this.dateFormats) {\n            throw createMissingDateImplError('MC_DATE_FORMATS');\n        }\n\n        // Update the displayed date when the locale changes.\n        this.localeSubscription = dateAdapter.localeChanges.subscribe(() => {\n            this.value = this.value;\n        });\n    }\n\n    onTouched = () => {\n    }\n\n    ngOnDestroy() {\n        this.datepickerSubscription.unsubscribe();\n        this.localeSubscription.unsubscribe();\n        this.valueChange.complete();\n        this.disabledChange.complete();\n    }\n\n    /** @docs-private */\n    registerOnValidatorChange(fn: () => void): void {\n        this.validatorOnChange = fn;\n    }\n\n    /** @docs-private */\n    validate(c: AbstractControl): ValidationErrors | null {\n        return this.validator ? this.validator(c) : null;\n    }\n\n    // Implemented as part of ControlValueAccessor.\n    writeValue(value: D): void {\n        this.value = value;\n    }\n\n    // Implemented as part of ControlValueAccessor.\n    registerOnChange(fn: (value: any) => void): void {\n        this.cvaOnChange = fn;\n    }\n\n    // Implemented as part of ControlValueAccessor.\n    registerOnTouched(fn: () => void): void {\n        this.onTouched = fn;\n    }\n\n    // Implemented as part of ControlValueAccessor.\n    setDisabledState(isDisabled: boolean): void {\n        this.disabled = isDisabled;\n    }\n\n    onKeydown(event: KeyboardEvent) {\n        // tslint:disable-next-line:deprecation\n        const isAltDownArrow = event.altKey && event.keyCode === DOWN_ARROW;\n\n        if (this.datepicker && isAltDownArrow && !this.elementRef.nativeElement.readOnly) {\n            this.datepicker.open();\n            event.preventDefault();\n        }\n    }\n\n    onInput(value: string) {\n        let date = this.dateAdapter.parse(value, this.dateFormats.parse.dateInput);\n        this.lastValueValid = !date || this.dateAdapter.isValid(date);\n        date = this.getValidDateOrNull(date);\n\n        if (!this.dateAdapter.sameDate(date, this._value)) {\n            this._value = date;\n            this.cvaOnChange(date);\n            this.valueChange.emit(date);\n            this.dateInput.emit(new McDatepickerInputEvent(this, this.elementRef.nativeElement));\n        }\n    }\n\n    onChange() {\n        this.dateChange.emit(new McDatepickerInputEvent(this, this.elementRef.nativeElement));\n    }\n\n    /** Returns the palette used by the input's form field, if any. */\n    getThemePalette(): ThemePalette | undefined {\n        return this.formField ? this.formField.color : undefined;\n    }\n\n    /** Handles blur events on the input. */\n    onBlur() {\n        // Reformat the input only if we have a valid value.\n        if (this.value) {\n            this.formatValue(this.value);\n        }\n\n        this.onTouched();\n    }\n\n    private cvaOnChange: (value: any) => void = () => {\n    }\n\n    private validatorOnChange = () => {\n    }\n\n    /** The form control validator for whether the input parses. */\n    private parseValidator: ValidatorFn = (): ValidationErrors | null => {\n        return this.lastValueValid ?\n            null : { mcDatepickerParse: { text: this.elementRef.nativeElement.value } };\n    }\n\n    /** The form control validator for the min date. */\n    private minValidator: ValidatorFn = (control: AbstractControl): ValidationErrors | null => {\n        const controlValue = this.getValidDateOrNull(this.dateAdapter.deserialize(control.value));\n\n        return (!this.min || !controlValue ||\n            this.dateAdapter.compareDate(this.min, controlValue) <= 0) ?\n            null : { mcDatepickerMin: { min: this.min, actual: controlValue } };\n    }\n\n    /** The form control validator for the max date. */\n    private maxValidator: ValidatorFn = (control: AbstractControl): ValidationErrors | null => {\n        const controlValue = this.getValidDateOrNull(this.dateAdapter.deserialize(control.value));\n\n        return (!this.max || !controlValue ||\n            this.dateAdapter.compareDate(this.max, controlValue) >= 0) ?\n            null : { mcDatepickerMax: { max: this.max, actual: controlValue } };\n    }\n\n    /** The form control validator for the date filter. */\n    private filterValidator: ValidatorFn = (control: AbstractControl): ValidationErrors | null => {\n        const controlValue = this.getValidDateOrNull(this.dateAdapter.deserialize(control.value));\n\n        return !this.dateFilter || !controlValue || this.dateFilter(controlValue) ?\n            null : { mcDatepickerFilter: true };\n    }\n\n    /** Formats a value and sets it on the input element. */\n    private formatValue(value: D | null) {\n        this.elementRef.nativeElement.value =\n            value ? this.dateAdapter.format(value, this.dateFormats.display.dateInput) : '';\n    }\n\n    /** The combined form control validator for this input. */\n        // tslint:disable:member-ordering\n    private validator: ValidatorFn | null =\n        Validators.compose([\n            this.parseValidator,\n            this.minValidator,\n            this.maxValidator,\n            this.filterValidator\n        ]);\n\n    /**\n     * @param obj The object to check.\n     * @returns The given object if it is both a date instance and valid, otherwise null.\n     */\n    private getValidDateOrNull(obj: any): D | null {\n        return (this.dateAdapter.isDateInstance(obj) && this.dateAdapter.isValid(obj)) ? obj : null;\n    }\n}\n","import {\n    AfterContentInit,\n    Attribute,\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    ContentChild,\n    Directive,\n    Input,\n    OnChanges,\n    OnDestroy,\n    SimpleChanges,\n    ViewEncapsulation,\n    ViewChild\n} from '@angular/core';\nimport { coerceBooleanProperty } from '@ptsecurity/cdk/coercion';\nimport { McButton } from '@ptsecurity/mosaic/button';\nimport { merge, of as observableOf, Subscription } from 'rxjs';\n\nimport { McDatepicker } from './datepicker';\nimport { McDatepickerIntl } from './datepicker-intl';\n\n\n/** Can be used to override the icon of a `mcDatepickerToggle`. */\n@Directive({\n    selector: '[mcDatepickerToggleIcon]'\n})\nexport class McDatepickerToggleIcon {\n}\n\n\n@Component({\n    selector: 'mc-datepicker-toggle',\n    templateUrl: 'datepicker-toggle.html',\n    styleUrls: ['datepicker-toggle.css'],\n    host: {\n        class: 'mc-datepicker-toggle',\n        // Always set the tabindex to -1 so that it doesn't overlap with any custom tabindex the\n        // consumer may have provided, while still being able to receive focus.\n        '[attr.tabindex]': '-1',\n        '[class.mc-datepicker-toggle_active]': 'datepicker && datepicker.opened',\n        '[class.mc-warn]': 'datepicker && datepicker.color === \"error\"',\n        '(focus)': 'button.focus()'\n    },\n    exportAs: 'mcDatepickerToggle',\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class McDatepickerToggle<D> implements AfterContentInit, OnChanges, OnDestroy {\n\n    /** Whether the toggle button is disabled. */\n    @Input()\n    get disabled(): boolean {\n        return this._disabled === undefined ? this.datepicker.disabled : !!this._disabled;\n    }\n\n    set disabled(value: boolean) {\n        this._disabled = coerceBooleanProperty(value);\n    }\n\n    /** Datepicker instance that the button will toggle. */\n    @Input('for') datepicker: McDatepicker<D>;\n\n    /** Tabindex for the toggle. */\n    @Input() tabIndex: number | null;\n\n    /** Custom icon set by the consumer. */\n    @ContentChild(McDatepickerToggleIcon) customIcon: McDatepickerToggleIcon;\n\n    /** Underlying button element. */\n    @ViewChild('button') button: McButton;\n    private stateChanges = Subscription.EMPTY;\n\n    private _disabled: boolean;\n\n    constructor(\n        public intl: McDatepickerIntl,\n        private changeDetectorRef: ChangeDetectorRef,\n        @Attribute('tabindex') defaultTabIndex: string\n    ) {\n        const parsedTabIndex = Number(defaultTabIndex);\n        this.tabIndex = (parsedTabIndex || parsedTabIndex === 0) ? parsedTabIndex : null;\n    }\n\n    ngOnChanges(changes: SimpleChanges) {\n        if (changes.datepicker) {\n            this.watchStateChanges();\n        }\n    }\n\n    ngOnDestroy() {\n        this.stateChanges.unsubscribe();\n    }\n\n    ngAfterContentInit() {\n        this.watchStateChanges();\n    }\n\n    open(event: Event): void {\n        if (this.datepicker && !this.disabled) {\n            this.datepicker.open();\n            event.stopPropagation();\n        }\n    }\n\n    private watchStateChanges() {\n        const datepickerDisabled = this.datepicker ? this.datepicker.disabledChange : observableOf();\n        const inputDisabled = this.datepicker && this.datepicker.datepickerInput ?\n            this.datepicker.datepickerInput.disabledChange : observableOf();\n        const datepickerToggled = this.datepicker ?\n            merge(this.datepicker.openedStream, this.datepicker.closedStream) :\n            observableOf();\n\n        this.stateChanges.unsubscribe();\n        this.stateChanges = merge(\n            this.intl.changes,\n            datepickerDisabled,\n            inputDisabled,\n            datepickerToggled\n        ).subscribe(() => this.changeDetectorRef.markForCheck());\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { A11yModule } from '@ptsecurity/cdk/a11y';\nimport { OverlayModule } from '@ptsecurity/cdk/overlay';\nimport { PortalModule } from '@ptsecurity/cdk/portal';\nimport { McButtonModule } from '@ptsecurity/mosaic/button';\nimport { McIconModule } from '@ptsecurity/mosaic/icon';\n\nimport { McCalendar, McCalendarHeader } from './calendar';\nimport { McCalendarBody } from './calendar-body';\nimport {\n    McDatepicker,\n    McDatepickerContent,\n    MC_DATEPICKER_SCROLL_STRATEGY_FACTORY_PROVIDER\n} from './datepicker';\nimport { McDatepickerInput } from './datepicker-input';\nimport { McDatepickerIntl } from './datepicker-intl';\nimport { McDatepickerToggle, McDatepickerToggleIcon } from './datepicker-toggle';\nimport { McMonthView } from './month-view';\nimport { McMultiYearView } from './multi-year-view';\nimport { McYearView } from './year-view';\n\n\n@NgModule({\n    imports: [\n        CommonModule,\n        McButtonModule,\n        OverlayModule,\n        A11yModule,\n        PortalModule,\n        McButtonModule,\n        McIconModule\n    ],\n    exports: [\n        McCalendar,\n        McCalendarBody,\n        McDatepicker,\n        McDatepickerContent,\n        McDatepickerInput,\n        McDatepickerToggle,\n        McDatepickerToggleIcon,\n        McMonthView,\n        McYearView,\n        McMultiYearView,\n        McCalendarHeader\n    ],\n    declarations: [\n        McCalendar,\n        McCalendarBody,\n        McDatepicker,\n        McDatepickerContent,\n        McDatepickerInput,\n        McDatepickerToggle,\n        McDatepickerToggleIcon,\n        McMonthView,\n        McYearView,\n        McMultiYearView,\n        McCalendarHeader\n    ],\n    providers: [\n        McDatepickerIntl,\n        MC_DATEPICKER_SCROLL_STRATEGY_FACTORY_PROVIDER\n    ],\n    entryComponents: [\n        McDatepickerContent,\n        McCalendarHeader\n    ]\n})\nexport class McDatepickerModule {\n}\n","import { ChangeDetectionStrategy, Component, Input, ViewEncapsulation } from '@angular/core';\nimport { coerceBooleanProperty } from '@ptsecurity/cdk/coercion';\n\n\n@Component({\n    selector: 'mc-divider',\n    host: {\n        class: 'mc-divider',\n        role: 'separator',\n        '[attr.aria-orientation]': 'vertical ? \"vertical\" : \"horizontal\"',\n        '[class.mc-divider-vertical]': 'vertical',\n        '[class.mc-divider-inset]': 'inset'\n    },\n    template: '',\n    styleUrls: ['divider.css'],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    preserveWhitespaces: false\n})\nexport class McDivider {\n    // Whether the divider is vertically aligned.\n    @Input()\n    get vertical(): boolean {\n        return this._vertical;\n    }\n\n    set vertical(value: boolean) {\n        this._vertical = coerceBooleanProperty(value);\n    }\n\n    private _vertical: boolean = false;\n\n    // Whether the divider is an inset divider.\n    @Input()\n    get inset(): boolean {\n        return this._inset;\n    }\n\n    set inset(value: boolean) {\n        this._inset = coerceBooleanProperty(value);\n    }\n\n    private _inset: boolean = false;\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { McDivider } from './divider.component';\n\n\n@NgModule({\n    imports: [CommonModule],\n    exports: [McDivider],\n    declarations: [McDivider]\n})\nexport class McDividerModule {\n}\n","import { DOCUMENT } from '@angular/common';\nimport {\n    Directive,\n    TemplateRef,\n    ComponentFactoryResolver,\n    ApplicationRef,\n    Injector,\n    ViewContainerRef,\n    Inject,\n    OnDestroy\n} from '@angular/core';\nimport { TemplatePortal, DomPortalOutlet } from '@ptsecurity/cdk/portal';\nimport { Subject } from 'rxjs';\n\n\n/**\n * Dropdown content that will be rendered lazily once the dropdown is opened.\n */\n@Directive({\n    selector: 'ng-template[mcDropdownContent]'\n})\nexport class McDropdownContent implements OnDestroy {\n\n    /** Emits when the dropdown content has been attached. */\n    _attached = new Subject<void>();\n    private _portal: TemplatePortal;\n    private _outlet: DomPortalOutlet;\n\n    constructor(\n        private _template: TemplateRef<any>,\n        private _componentFactoryResolver: ComponentFactoryResolver,\n        private _appRef: ApplicationRef,\n        private _injector: Injector,\n        private _viewContainerRef: ViewContainerRef,\n        @Inject(DOCUMENT) private _document: any) {}\n\n    /**\n     * Attaches the content with a particular context.\n     * @docs-private\n     */\n    attach(context: any = {}) {\n        if (!this._portal) {\n            this._portal = new TemplatePortal(this._template, this._viewContainerRef);\n        }\n\n        this.detach();\n\n        if (!this._outlet) {\n            this._outlet = new DomPortalOutlet(this._document.createElement('div'),\n                this._componentFactoryResolver, this._appRef, this._injector);\n        }\n\n        const element: HTMLElement = this._template.elementRef.nativeElement;\n\n        // Because we support opening the same dropdown from different triggers (which in turn have their\n        // own `OverlayRef` panel), we have to re-insert the host element every time, otherwise we\n        // risk it staying attached to a pane that's no longer in the DOM.\n        element.parentNode!.insertBefore(this._outlet.outletElement, element);\n        this._portal.attach(this._outlet, context);\n        this._attached.next();\n    }\n\n    /**\n     * Detaches the content.\n     * @docs-private\n     */\n    detach() {\n        if (this._portal.isAttached) {\n            this._portal.detach();\n        }\n    }\n\n    ngOnDestroy() {\n        if (this._outlet) {\n            this._outlet.dispose();\n        }\n    }\n}\n","import { EventEmitter, TemplateRef, InjectionToken } from '@angular/core';\nimport { FocusOrigin } from '@ptsecurity/cdk/a11y';\nimport { Direction } from '@ptsecurity/cdk/bidi';\n\nimport { McDropdownContent } from './dropdown-content';\nimport { DropdownPositionX, DropdownPositionY } from './dropdown-positions';\n\n\n/**\n * Injection token used to provide the parent dropdown to dropdown-specific components.\n * @docs-private\n */\nexport const MC_DROPDOWN_PANEL = new InjectionToken<McDropdownPanel>('MC_DROPDOWN_PANEL');\n\n/**\n * Interface for a custom dropdown panel that can be used with `mcDropdownTriggerFor`.\n * @docs-private\n */\n// tslint:disable-next-line:interface-name\nexport interface McDropdownPanel<T = any> {\n    xPosition: DropdownPositionX;\n    yPosition: DropdownPositionY;\n    overlapTrigger: boolean;\n    templateRef: TemplateRef<any>;\n    closed: EventEmitter<void | 'click' | 'keydown' | 'tab'>;\n    direction?: Direction;\n    lazyContent?: McDropdownContent;\n    backdropClass?: string;\n    hasBackdrop?: boolean;\n    focusFirstItem(origin?: FocusOrigin): void;\n    resetActiveItem(): void;\n    setPositionClasses?(x: DropdownPositionX, y: DropdownPositionY): void;\n    addItem?(item: T): void;\n    removeItem?(item: T): void;\n}\n","import { DOCUMENT } from '@angular/common';\nimport {\n    ChangeDetectionStrategy,\n    Component,\n    ElementRef,\n    OnDestroy,\n    ViewEncapsulation,\n    Inject,\n    Optional\n} from '@angular/core';\nimport { IFocusableOption, FocusMonitor, FocusOrigin } from '@ptsecurity/cdk/a11y';\nimport {\n    CanDisable, CanDisableCtor,\n    mixinDisabled\n} from '@ptsecurity/mosaic/core';\n\nimport { MC_DROPDOWN_PANEL, McDropdownPanel } from './dropdown-panel';\n\n\n// Boilerplate for applying mixins to McDropdownItem.\n/** @docs-private */\nexport class McDropdownItemBase {}\nexport const _McDropdownItemMixinBase: CanDisableCtor & typeof McDropdownItemBase =\n    mixinDisabled(McDropdownItemBase);\n\n/**\n * This directive is intended to be used inside an mc-dropdown tag.\n * It exists mostly to set the role attribute.\n */\n@Component({\n    selector: 'mc-dropdown-item, [mc-dropdown-item]',\n    exportAs: 'mcDropdownItem',\n    inputs: ['disabled'],\n    host: {\n        role: 'dropdown-item',\n        class: 'mc-dropdown__item',\n        '[attr.tabindex]': '_getTabIndex()',\n        '[attr.disabled]': 'disabled || null',\n        '(click)': '_checkDisabled($event)'\n    },\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n    template: `<ng-content></ng-content>`\n})\nexport class McDropdownItem extends _McDropdownItemMixinBase\n    implements IFocusableOption, CanDisable, OnDestroy {\n\n    private _document: Document;\n\n    constructor(\n        private _elementRef: ElementRef<HTMLElement>,\n        @Inject(DOCUMENT) document: any,\n        private _focusMonitor: FocusMonitor,\n        @Inject(MC_DROPDOWN_PANEL) @Optional() private _parentDropdownPanel?: McDropdownPanel<McDropdownItem>) {\n        super();\n\n        if (_focusMonitor) {\n            // Start monitoring the element so it gets the appropriate focused classes. We want\n            // to show the focus style for dropdown items only when the focus was not caused by a\n            // mouse or touch interaction.\n            _focusMonitor.monitor(this._elementRef.nativeElement, false);\n        }\n\n        if (_parentDropdownPanel && _parentDropdownPanel.addItem) {\n            _parentDropdownPanel.addItem(this);\n        }\n\n        this._document = document;\n    }\n\n    /** Focuses the dropdown item. */\n    focus(origin: FocusOrigin = 'program'): void {\n        if (this._focusMonitor) {\n            this._focusMonitor.focusVia(this._getHostElement(), origin);\n        } else {\n            this._getHostElement().focus();\n        }\n    }\n\n    ngOnDestroy() {\n        if (this._focusMonitor) {\n            this._focusMonitor.stopMonitoring(this._elementRef.nativeElement);\n        }\n\n        if (this._parentDropdownPanel && this._parentDropdownPanel.removeItem) {\n            this._parentDropdownPanel.removeItem(this);\n        }\n    }\n\n    /** Used to set the `tabindex`. */\n    _getTabIndex(): string {\n        return this.disabled ? '-1' : '0';\n    }\n\n    /** Returns the host DOM element. */\n    _getHostElement(): HTMLElement {\n        return this._elementRef.nativeElement;\n    }\n\n    /** Prevents the default element actions if it is disabled. */\n    _checkDisabled(event: Event): void {\n        if (this.disabled) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n    }\n\n    /** Gets the label to be used when determining whether the option should be focused. */\n    getLabel(): string {\n        const element: HTMLElement = this._elementRef.nativeElement;\n        // tslint:disable-next-line:no-magic-numbers\n        const textNodeType = this._document ? this._document.TEXT_NODE : 3;\n        let output = '';\n\n        if (element.childNodes) {\n            const length = element.childNodes.length;\n\n            // Go through all the top-level text nodes and extract their text.\n            // We skip anything that's not a text node to prevent the text from\n            // being thrown off by something like an icon.\n            for (let i = 0; i < length; i++) {\n                if (element.childNodes[i].nodeType === textNodeType) {\n                    output += element.childNodes[i].textContent;\n                }\n            }\n        }\n\n        return output.trim();\n    }\n}\n","import {\n    trigger,\n    state,\n    style,\n    animate,\n    transition,\n    query,\n    group,\n    AnimationTriggerMetadata\n} from '@angular/animations';\n\n\n/**\n * Animations used by the mc-dropdown component.\n * Animation duration and timing values are based on:\n * https://material.io/guidelines/components/menus.html#menus-usage\n * @docs-private\n */\nexport const mcDropdownAnimations: {\n    readonly transformDropdown: AnimationTriggerMetadata;\n    readonly fadeInItems: AnimationTriggerMetadata;\n} = {\n    /**\n     * This animation controls the dropdown panel's entry and exit from the page.\n     *\n     * When the dropdown panel is added to the DOM, it scales in and fades in its border.\n     *\n     * When the dropdown panel is removed from the DOM, it simply fades out after a brief\n     * delay to display the ripple.\n     */\n    transformDropdown: trigger('transformDropdown', [\n        state('void', style({\n            opacity: 0,\n            transform: 'scale(0.8)'\n        })),\n        transition('void => enter', group([\n            query('.mc-dropdown__content', animate('50ms linear', style({opacity: 1}))),\n            animate('50ms cubic-bezier(0, 0, 0.2, 1)', style({transform: 'scale(1)'}))\n        ])),\n        transition('* => void', animate('50ms 25ms linear', style({opacity: 0})))\n    ]),\n\n\n    /**\n     * This animation fades in the background color and content of the dropdown panel\n     * after its containing element is scaled in.\n     */\n    fadeInItems: trigger('fadeInItems', [\n        // now. Remove next time we do breaking changes.\n        state('showing', style({opacity: 1})),\n        transition('void => *', [\n            style({opacity: 0}),\n            animate('200ms 60ms cubic-bezier(0.55, 0, 0.55, 0.2)')\n        ])\n    ])\n};\n\nexport const fadeInItems = mcDropdownAnimations.fadeInItems;\n\nexport const transformDropdown = mcDropdownAnimations.transformDropdown;\n","import {\n    Attribute,\n    Directive, DoCheck, ElementRef, Inject, Input, OnChanges,\n    OnDestroy, Optional, Self\n} from '@angular/core';\nimport {\n    FormGroupDirective,\n    NgControl,\n    NgForm, NgModel\n} from '@angular/forms';\nimport { coerceBooleanProperty } from '@ptsecurity/cdk/coercion';\nimport {\n    END, C, V, X, A, DELETE, BACKSPACE, TAB, ENTER,\n    ESCAPE, ZERO, NINE, NUMPAD_ZERO, NUMPAD_NINE, NUMPAD_MINUS, DASH,\n    FF_MINUS, LEFT_ARROW, RIGHT_ARROW, HOME, UP_ARROW, DOWN_ARROW, F1, F12\n} from '@ptsecurity/cdk/keycodes';\nimport { getSupportedInputTypes, Platform } from '@ptsecurity/cdk/platform';\nimport {\n    CanUpdateErrorState,\n    CanUpdateErrorStateCtor,\n    ErrorStateMatcher,\n    mixinErrorState\n} from '@ptsecurity/mosaic/core';\nimport { McFormFieldControl, McFormFieldNumberControl } from '@ptsecurity/mosaic/form-field';\nimport { Subject } from 'rxjs';\n\nimport { getMcInputUnsupportedTypeError } from './input-errors';\nimport { MC_INPUT_VALUE_ACCESSOR } from './input-value-accessor';\nimport { stepDown, stepUp } from './stepperUtils';\n\n\nconst MC_INPUT_INVALID_TYPES = [\n    'button',\n    'checkbox',\n    'file',\n    'hidden',\n    'image',\n    'radio',\n    'range',\n    'reset',\n    'submit'\n];\n\nexport const BIG_STEP = 10;\nexport const SMALL_STEP = 1;\n\nlet nextUniqueId = 0;\n\nexport class McInputBase {\n    constructor(public _defaultErrorStateMatcher: ErrorStateMatcher,\n                public _parentForm: NgForm,\n                public _parentFormGroup: FormGroupDirective,\n                public ngControl: NgControl) {\n    }\n}\n\nexport const _McInputMixinBase: CanUpdateErrorStateCtor & typeof McInputBase = mixinErrorState(McInputBase);\n\n\n@Directive({\n    selector: `input[mcInput][type=\"number\"]`,\n    exportAs: 'mcNumericalInput',\n    providers: [NgModel, { provide: McFormFieldNumberControl, useExisting: McNumberInput }],\n    host: {\n        '(blur)': '_focusChanged(false)',\n        '(focus)': '_focusChanged(true)',\n        '(paste)': 'onPaste($event)',\n        '(keydown)': 'onKeyDown($event)'\n    }\n})\nexport class McNumberInput implements McFormFieldNumberControl<any> {\n\n    /**\n     * Implemented as part of McFormFieldNumberControl.\n     * @docs-private\n     */\n    @Input()\n    bigStep: number;\n\n    /**\n     * Implemented as part of McFormFieldNumberControl.\n     * @docs-private\n     */\n    @Input()\n    step: number;\n\n    @Input()\n    min: number;\n\n    @Input()\n    max: number;\n\n    /**\n     * Implemented as part of McFormFieldNumberControl.\n     * @docs-private\n     */\n    value: any;\n\n    /**\n     * Implemented as part of McFormFieldNumberControl.\n     * @docs-private\n     */\n    focused: boolean = false;\n\n    /**\n     * Implemented as part of McFormFieldNumberControl.\n     * @docs-private\n     */\n    readonly stateChanges: Subject<void> = new Subject<void>();\n\n    private readonly _host: HTMLInputElement;\n\n    constructor(\n        private _platform: Platform ,\n        private _elementRef: ElementRef,\n        private _model: NgModel,\n        @Attribute('step') step: string,\n        @Attribute('big-step') bigStep: string,\n        @Attribute('min') min: string,\n        @Attribute('max') max: string\n    ) {\n        this.step = this.isDigit(step) ? parseFloat(step) : SMALL_STEP;\n        this.bigStep = this.isDigit(bigStep) ? parseFloat(bigStep) : BIG_STEP;\n        this.min = this.isDigit(min) ? parseFloat(min) : -Infinity;\n        this.max = this.isDigit(max) ? parseFloat(max) : Infinity;\n\n        this._host = this._elementRef.nativeElement;\n\n        const self = this;\n\n        if ('valueAsNumber' in this._host) {\n            Object.defineProperty(Object.getPrototypeOf(this._host), 'valueAsNumber', {\n                // tslint:disable-next-line:no-reserved-keywords\n                get() {\n                    const res = parseFloat(self.normalizeSplitter(this.value));\n\n                    return isNaN(res) ? null : res;\n                }\n            });\n        }\n    }\n\n    _focusChanged(isFocused: boolean) {\n        if (isFocused !== this.focused) {\n            this.focused = isFocused;\n            this.stateChanges.next();\n        }\n    }\n\n    onKeyDown(event: KeyboardEvent) {\n        // tslint:disable-next-line:deprecation\n        const keyCode = event.keyCode;\n\n        const isCtrlA = (e) => e.keyCode === A && (e.ctrlKey || e.metaKey);\n        const isCtrlC = (e) => e.keyCode === C && (e.ctrlKey || e.metaKey);\n        const isCtrlV = (e) => e.keyCode === V && (e.ctrlKey || e.metaKey);\n        const isCtrlX = (e) => e.keyCode === X && (e.ctrlKey || e.metaKey);\n\n        const isFKey = (e) => e.keyCode >= F1 && e.keyCode <= F12;\n\n        const isNumber = (e) => (e.keyCode >= ZERO && e.keyCode <= NINE) ||\n            (e.keyCode >= NUMPAD_ZERO && e.keyCode <= NUMPAD_NINE);\n\n        const minuses = [NUMPAD_MINUS, DASH, FF_MINUS];\n        const serviceKeys = [DELETE, BACKSPACE, TAB, ESCAPE, ENTER];\n        const arrows = [LEFT_ARROW, RIGHT_ARROW];\n        const allowedKeys =  [HOME, END].concat(arrows).concat(serviceKeys).concat(minuses);\n\n        const isIEPeriod = (e) => e.key === '.' || e.key === 'Decimal';\n        const isNotIEPeriod = (e) => e.key === '.' || e.key === ',';\n\n        // Decimal is for IE\n        const isPeriod = (e) => this._platform.EDGE || this._platform.TRIDENT\n            ? isIEPeriod(e)\n            : isNotIEPeriod(e);\n\n        if (allowedKeys.indexOf(keyCode) !== -1 ||\n            isCtrlA(event) ||\n            isCtrlC(event) ||\n            isCtrlV(event) ||\n            isCtrlX(event) ||\n            isFKey(event) ||\n            isPeriod(event)\n        ) {\n            // let it happen, don't do anything\n            return;\n        }\n        // Ensure that it is not a number and stop the keypress\n        if (event.shiftKey || !isNumber(event)) {\n            event.preventDefault();\n\n            // process steps\n            const step = event.shiftKey ? this.bigStep : this.step;\n\n            if (keyCode === UP_ARROW) {\n                this.stepUp(step);\n            }\n\n            if (keyCode === DOWN_ARROW) {\n                this.stepDown(step);\n            }\n        }\n    }\n\n    onPaste(event) {\n        let value = event.clipboardData.getData('text');\n        value = this.normalizeSplitter(value);\n\n        if (!this.isDigit(value)) {\n            event.preventDefault();\n        }\n    }\n\n    stepUp(step: number) {\n        this._elementRef.nativeElement.focus();\n        const res = stepUp(this._host.valueAsNumber, this.max, this.min, step);\n        this._host.value = res === null ? '' : res.toString();\n        this._model.update.emit(this._host.valueAsNumber);\n    }\n\n    stepDown(step: number) {\n        this._elementRef.nativeElement.focus();\n        const res = stepDown(this._host.valueAsNumber, this.max, this.min, step);\n        this._host.value = res === null ? '' : res.toString();\n        this._model.update.emit(this._host.valueAsNumber);\n    }\n\n    private normalizeSplitter(value: string): string {\n        return value ? value.replace(/,/g, '.') : value;\n    }\n\n    private isDigit(value: string): boolean {\n        return this.isFloat(value) || this.isInt(value);\n    }\n\n    private isFloat(value: string): boolean {\n        return /^-?\\d+\\.\\d+$/.test(value);\n    }\n\n    private isInt(value: string): boolean {\n        return /^-?\\d+$/.test(value);\n    }\n}\n\n@Directive({\n    selector: `input[mcInput]`,\n    exportAs: 'mcInput',\n    host: {\n        class: 'mc-input',\n        // Native input properties that are overwritten by Angular inputs need to be synced with\n        // the native input element. Otherwise property bindings for those don't work.\n        '[attr.id]': 'id',\n        '[attr.placeholder]': 'placeholder',\n        '[disabled]': 'disabled',\n        '[required]': 'required',\n        '(blur)': '_focusChanged(false)',\n        '(focus)': '_focusChanged(true)',\n        '(input)': '_onInput()'\n    },\n    providers: [{ provide: McFormFieldControl, useExisting: McInput }]\n})\nexport class McInput extends _McInputMixinBase implements McFormFieldControl<any>, OnChanges,\n    OnDestroy, DoCheck, CanUpdateErrorState {\n\n    /** An object used to control when error messages are shown. */\n    @Input() errorStateMatcher: ErrorStateMatcher;\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    focused: boolean = false;\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    readonly stateChanges: Subject<void> = new Subject<void>();\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    controlType: string = 'mc-input';\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    @Input()\n    get disabled(): boolean {\n        if (this.ngControl && this.ngControl.disabled !== null) {\n            return this.ngControl.disabled;\n        }\n\n        return this._disabled;\n    }\n\n    set disabled(value: boolean) {\n        this._disabled = coerceBooleanProperty(value);\n\n        // Browsers may not fire the blur event if the input is disabled too quickly.\n        // Reset from here to ensure that the element doesn't become stuck.\n        if (this.focused) {\n            this.focused = false;\n            this.stateChanges.next();\n        }\n    }\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    @Input()\n    get id(): string {\n        return this._id;\n    }\n\n    set id(value: string) {\n        this._id = value || this._uid;\n    }\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    @Input() placeholder: string;\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    @Input()\n    get required(): boolean {\n        return this._required;\n    }\n\n    set required(value: boolean) {\n        this._required = coerceBooleanProperty(value);\n    }\n\n    // tslint:disable no-reserved-keywords\n    /** Input type of the element. */\n    @Input()\n    get type(): string {\n        return this._type;\n    }\n\n    set type(value: string) {\n        this._type = value || 'text';\n        this._validateType();\n\n        // When using Angular inputs, developers are no longer able to set the properties on the native\n        // input element. To ensure that bindings for `type` work, we need to sync the setter\n        // with the native property. Textarea elements don't support the type property or attribute.\n        if (getSupportedInputTypes().has(this._type)) {\n            this._elementRef.nativeElement.type = this._type;\n        }\n    }\n    // tslint:enable no-reserved-keywords\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    @Input()\n    get value(): string {\n        return this._inputValueAccessor.value;\n    }\n\n    set value(value: string) {\n        if (value !== this.value) {\n            this._inputValueAccessor.value = value;\n            this.stateChanges.next();\n        }\n    }\n\n    protected _uid = `mc-input-${nextUniqueId++}`;\n    protected _previousNativeValue: any;\n    protected _disabled = false;\n    protected _id: string;\n    protected _required = false;\n    protected _type = 'text';\n    protected _neverEmptyInputTypes = [\n        'date',\n        'datetime',\n        'datetime-local',\n        'month',\n        'time',\n        'week'\n    ].filter((t) => getSupportedInputTypes().has(t));\n\n    private _inputValueAccessor: { value: any };\n\n    constructor(protected _elementRef: ElementRef,\n                @Optional() @Self() public ngControl: NgControl,\n                @Optional() _parentForm: NgForm,\n                @Optional() _parentFormGroup: FormGroupDirective,\n                _defaultErrorStateMatcher: ErrorStateMatcher,\n                @Optional() @Self() @Inject(MC_INPUT_VALUE_ACCESSOR) inputValueAccessor: any) {\n        super(_defaultErrorStateMatcher, _parentForm, _parentFormGroup, ngControl);\n        // If no input value accessor was explicitly specified, use the element as the input value\n        // accessor.\n        this._inputValueAccessor = inputValueAccessor || this._elementRef.nativeElement;\n\n        this._previousNativeValue = this.value;\n\n        // Force setter to be called in case id was not specified.\n        this.id = this.id;\n    }\n\n    ngOnChanges() {\n        this.stateChanges.next();\n    }\n\n    ngOnDestroy() {\n        this.stateChanges.complete();\n    }\n\n    ngDoCheck() {\n        if (this.ngControl) {\n            // We need to re-evaluate this on every change detection cycle, because there are some\n            // error triggers that we can't subscribe to (e.g. parent form submissions). This means\n            // that whatever logic is in here has to be super lean or we risk destroying the performance.\n            this.updateErrorState();\n        }\n\n        // We need to dirty-check the native element's value, because there are some cases where\n        // we won't be notified when it changes (e.g. the consumer isn't using forms or they're\n        // updating the value using `emitEvent: false`).\n        this._dirtyCheckNativeValue();\n    }\n\n    /** Focuses the input. */\n    focus(): void {\n        this._elementRef.nativeElement.focus();\n    }\n\n    /** Callback for the cases where the focused state of the input changes. */\n    _focusChanged(isFocused: boolean) {\n        if (isFocused !== this.focused) {\n            this.focused = isFocused;\n            this.stateChanges.next();\n        }\n    }\n\n    _onInput() {\n        // This is a noop function and is used to let Angular know whenever the value changes.\n        // Angular will run a new change detection each time the `input` event has been dispatched.\n        // It's necessary that Angular recognizes the value change, because when floatingLabel\n        // is set to false and Angular forms aren't used, the placeholder won't recognize the\n        // value changes and will not disappear.\n        // Listening to the input event wouldn't be necessary when the input is using the\n        // FormsModule or ReactiveFormsModule, because Angular forms also listens to input events.\n    }\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    get empty(): boolean {\n        return !this._isNeverEmpty() && !this._elementRef.nativeElement.value && !this._isBadInput();\n    }\n\n    /**\n     * Implemented as part of McFormFieldControl.\n     * @docs-private\n     */\n    onContainerClick() {\n        this.focus();\n    }\n\n    /** Does some manual dirty checking on the native input `value` property. */\n    protected _dirtyCheckNativeValue() {\n        const newValue = this.value;\n\n        if (this._previousNativeValue !== newValue) {\n            this._previousNativeValue = newValue;\n            this.stateChanges.next();\n        }\n    }\n\n    /** Make sure the input is a supported type. */\n    protected _validateType() {\n        if (MC_INPUT_INVALID_TYPES.indexOf(this._type) > -1) {\n            throw getMcInputUnsupportedTypeError(this._type);\n        }\n    }\n\n    /** Checks whether the input type is one of the types that are never empty. */\n    protected _isNeverEmpty() {\n        return this._neverEmptyInputTypes.indexOf(this._type) > -1;\n    }\n\n    /** Checks whether the input is invalid based on the native validation. */\n    protected _isBadInput() {\n        // The `validity` property won't be present on platform-server.\n        const validity = (this._elementRef.nativeElement as HTMLInputElement).validity;\n\n        return validity && validity.badInput;\n    }\n}\n\n@Directive({\n    selector: 'input[mcInputMonospace]',\n    exportAs: 'McInputMonospace',\n    host: { class: 'mc-input_monospace' }\n})\nexport class McInputMono {\n}\n","import { Directive, forwardRef, Input, OnChanges, Provider, SimpleChanges } from '@angular/core';\nimport { AbstractControl, NG_VALIDATORS, ValidationErrors, Validator, ValidatorFn, Validators } from '@angular/forms';\n\n\nexport const MIN_VALIDATOR: Provider = {\n    provide: NG_VALIDATORS,\n    useExisting: forwardRef(() => MinValidator),\n    multi: true\n};\n\n/**\n * A directive which installs the {@link MinValidator} for any `formControlName`,\n * `formControl`, or control with `ngModel` that also has a `min` attribute.\n *\n * @experimental\n */\n@Directive({\n    selector: '[min][formControlName],[min][formControl],[min][ngModel]',\n    providers: [MIN_VALIDATOR],\n    host: {'[attr.min]': 'min ? min : null'}\n})\nexport class MinValidator implements Validator, OnChanges {\n\n    @Input() min: string;\n    private _validator: ValidatorFn;\n    private _onChange: () => void;\n\n    ngOnChanges(changes: SimpleChanges): void {\n        if ('min' in changes) {\n            this._createValidator();\n            if (this._onChange) { this._onChange(); }\n        }\n    }\n\n    validate(c: AbstractControl): ValidationErrors | null { return this._validator(c); }\n\n    registerOnValidatorChange(fn: () => void): void { this._onChange = fn; }\n\n    private _createValidator(): void { this._validator = Validators.min(parseInt(this.min, 10)); }\n}\n\n\nexport const MAX_VALIDATOR: Provider = {\n    provide: NG_VALIDATORS,\n    useExisting: forwardRef(() => MaxValidator),\n    multi: true\n};\n\n/**\n * A directive which installs the {@link MaxValidator} for any `formControlName`,\n * `formControl`, or control with `ngModel` that also has a `min` attribute.\n *\n * @experimental\n */\n@Directive({\n    selector: '[max][formControlName],[max][formControl],[max][ngModel]',\n    providers: [MAX_VALIDATOR],\n    host: {\n        '[attr.max]': 'max ? max : null'\n    }\n})\nexport class MaxValidator implements Validator,\n    OnChanges {\n\n    @Input() max: string;\n    private _validator: ValidatorFn;\n    private _onChange: () => void;\n\n    ngOnChanges(changes: SimpleChanges): void {\n        if ('max' in changes) {\n            this._createValidator();\n            if (this._onChange) { this._onChange(); }\n        }\n    }\n\n    validate(c: AbstractControl): ValidationErrors | null { return this._validator(c); }\n\n    registerOnValidatorChange(fn: () => void): void { this._onChange = fn; }\n\n    private _createValidator(): void { this._validator = Validators.max(parseInt(this.max, 10)); }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { A11yModule } from '@ptsecurity/cdk/a11y';\nimport { McCommonModule } from '@ptsecurity/mosaic/core';\n\nimport { McInput, McInputMono, McNumberInput } from './input';\nimport { MaxValidator, MinValidator } from './input-number-validators';\n\n\n@NgModule({\n    imports: [CommonModule, A11yModule, McCommonModule, FormsModule],\n    exports: [McInput, McNumberInput, McInputMono, MinValidator, MaxValidator],\n    declarations: [McInput, McNumberInput, McInputMono, MinValidator, MaxValidator ]\n})\nexport class McInputModule {\n}\n","import { Injectable } from '@angular/core';\nimport { Subject } from 'rxjs';\n\n\n/** Datepicker data that requires internationalization. */\n@Injectable({ providedIn: 'root' })\nexport class McDatepickerIntl {\n    /**\n     * Stream that emits whenever the labels here are changed. Use this to notify\n     * components if the labels have changed after initialization.\n     */\n    readonly changes: Subject<void> = new Subject<void>();\n\n    /** A label for the calendar popup (used by screen readers). */\n    calendarLabel: string = 'Calendar';\n\n    /** A label for the button used to open the calendar popup (used by screen readers). */\n    openCalendarLabel: string = 'Open calendar';\n\n    /** A label for the previous month button (used by screen readers). */\n    prevMonthLabel: string = 'Previous month';\n\n    /** A label for the next month button (used by screen readers). */\n    nextMonthLabel: string = 'Next month';\n\n    /** A label for the previous year button (used by screen readers). */\n    prevYearLabel: string = 'Previous year';\n\n    /** A label for the next year button (used by screen readers). */\n    nextYearLabel: string = 'Next year';\n\n    /** A label for the previous multi-year button (used by screen readers). */\n    prevMultiYearLabel: string = 'Previous 20 years';\n\n    /** A label for the next multi-year button (used by screen readers). */\n    nextMultiYearLabel: string = 'Next 20 years';\n\n    /** A label for the 'switch to month view' button (used by screen readers). */\n    switchToMonthViewLabel: string = 'Choose date';\n\n    /** A label for the 'switch to year view' button (used by screen readers). */\n    switchToMultiYearViewLabel: string = 'Choose month and year';\n}\n","// tslint:disable:no-magic-numbers\nimport {\n    ChangeDetectionStrategy,\n    Component,\n    ElementRef,\n    EventEmitter,\n    Input,\n    Output,\n    ViewEncapsulation,\n    NgZone,\n    OnChanges,\n    SimpleChanges\n} from '@angular/core';\nimport { take } from 'rxjs/operators';\n\n\n/**\n * Extra CSS classes that can be associated with a calendar cell.\n */\nexport type McCalendarCellCssClasses = string | string[] | Set<string> | { [key: string]: any };\n\n/**\n * An internal class that represents the data corresponding to a single calendar cell.\n * @docs-private\n */\nexport class McCalendarCell {\n    constructor(\n        public value: number,\n        public displayValue: string,\n        public ariaLabel: string,\n        public enabled: boolean,\n        public cssClasses?: McCalendarCellCssClasses\n    ) {\n    }\n}\n\n\n/**\n * An internal component used to display calendar data in a table.\n * @docs-private\n */\n@Component({\n    selector: '[mc-calendar-body]',\n    templateUrl: 'calendar-body.html',\n    styleUrls: ['calendar-body.css'],\n    host: {\n        class: 'mc-calendar__body',\n        role: 'grid',\n        'aria-readonly': 'true'\n    },\n    exportAs: 'mcCalendarBody',\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class McCalendarBody implements OnChanges {\n    /** The label for the table. (e.g. \"Jan 2017\"). */\n    @Input() label: string;\n\n    /** The cells to display in the table. */\n    @Input() rows: McCalendarCell[][];\n\n    /** The value in the table that corresponds to today. */\n    @Input() todayValue: number;\n\n    /** The value in the table that is currently selected. */\n    @Input() selectedValue: number;\n\n    /** The minimum number of free cells needed to fit the label in the first row. */\n    @Input() labelMinRequiredCells: number;\n\n    /** The number of columns in the table. */\n    @Input() numCols = 7;\n\n    /** The cell number of the active cell in the table. */\n    @Input() activeCell = 0;\n\n    /**\n     * The aspect ratio (width / height) to use for the cells in the table. This aspect ratio will be\n     * maintained even as the table resizes.\n     */\n    @Input() cellAspectRatio = 1;\n\n    /** Emits when a new value is selected. */\n    @Output() readonly selectedValueChange: EventEmitter<number> = new EventEmitter<number>();\n\n    /** The number of blank cells to put at the beginning for the first row. */\n    firstRowOffset: number;\n\n    /** Padding for the individual date cells. */\n    cellPadding: string;\n\n    /** Width of an individual cell. */\n    cellWidth: string;\n\n    constructor(private elementRef: ElementRef<HTMLElement>, private ngZone: NgZone) {\n    }\n\n    cellClicked(cell: McCalendarCell): void {\n        if (cell.enabled) {\n            this.selectedValueChange.emit(cell.value);\n        }\n    }\n\n    ngOnChanges(changes: SimpleChanges) {\n        const columnChanges = changes.numCols;\n        // tslint:disable-next-line:no-this-assignment\n        const { rows, numCols } = this;\n\n        if (changes.rows || columnChanges) {\n            this.firstRowOffset = rows && rows.length && rows[0].length ? numCols - rows[0].length : 0;\n        }\n\n        if (changes.cellAspectRatio || columnChanges || !this.cellPadding) {\n            this.cellPadding = `${this.cellAspectRatio * 50 / numCols}%`;\n        }\n\n        if (columnChanges || !this.cellWidth) {\n            this.cellWidth = `${100 / numCols}%`;\n        }\n    }\n\n    isActiveCell(rowIndex: number, colIndex: number): boolean {\n        let cellNumber = rowIndex * this.numCols + colIndex;\n\n        // Account for the fact that the first row may not have as many cells.\n        if (rowIndex) {\n            cellNumber -= this.firstRowOffset;\n        }\n\n        return cellNumber === this.activeCell;\n    }\n\n    /** Focuses the active cell after the microtask queue is empty. */\n    focusActiveCell() {\n        this.ngZone.runOutsideAngular(() => {\n            this.ngZone.onStable.asObservable().pipe(take(1)).subscribe(() => {\n                const activeCell: HTMLElement | null =\n                    this.elementRef.nativeElement.querySelector('.mc-calendar__body_active');\n\n                if (activeCell) {\n                    activeCell.focus();\n                }\n            });\n        });\n    }\n}\n","// tslint:disable:no-magic-numbers\nimport {\n    AfterContentInit,\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    EventEmitter,\n    Inject,\n    Input,\n    Optional,\n    Output,\n    ViewEncapsulation,\n    ViewChild\n} from '@angular/core';\nimport { Directionality } from '@ptsecurity/cdk/bidi';\nimport { DateAdapter, MC_DATE_FORMATS, McDateFormats } from '@ptsecurity/cdk/datetime';\nimport {\n    DOWN_ARROW,\n    END,\n    ENTER,\n    HOME,\n    LEFT_ARROW,\n    PAGE_DOWN,\n    PAGE_UP,\n    RIGHT_ARROW,\n    UP_ARROW,\n    SPACE\n} from '@ptsecurity/cdk/keycodes';\n\nimport { McCalendarBody, McCalendarCell, McCalendarCellCssClasses } from './calendar-body';\nimport { createMissingDateImplError } from './datepicker-errors';\n\n\nconst DAYS_PER_WEEK = 7;\n\n\n/**\n * An internal component used to display a single month in the datepicker.\n * @docs-private\n */\n@Component({\n    selector: 'mc-month-view',\n    templateUrl: 'month-view.html',\n    exportAs: 'mcMonthView',\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class McMonthView<D> implements AfterContentInit {\n    /**\n     * The date to display in this month view (everything other than the month and year is ignored).\n     */\n    @Input()\n    get activeDate(): D {\n        return this._activeDate;\n    }\n\n    set activeDate(value: D) {\n        const oldActiveDate = this._activeDate;\n        const validDate =\n            this.getValidDateOrNull(this.dateAdapter.deserialize(value)) || this.dateAdapter.today();\n        this._activeDate = this.dateAdapter.clampDate(validDate, this.minDate, this.maxDate);\n\n        if (!this.hasSameMonthAndYear(oldActiveDate, this._activeDate)) {\n            this.init();\n        }\n    }\n\n    /** The currently selected date. */\n    @Input()\n    get selected(): D | null {\n        return this._selected;\n    }\n\n    set selected(value: D | null) {\n        this._selected = this.getValidDateOrNull(this.dateAdapter.deserialize(value));\n        this.selectedDate = this.getDateInCurrentMonth(this._selected);\n    }\n\n    /** The minimum selectable date. */\n    @Input()\n    get minDate(): D | null {\n        return this._minDate;\n    }\n\n    set minDate(value: D | null) {\n        this._minDate = this.getValidDateOrNull(this.dateAdapter.deserialize(value));\n    }\n\n    /** The maximum selectable date. */\n    @Input()\n    get maxDate(): D | null {\n        return this._maxDate;\n    }\n\n    set maxDate(value: D | null) {\n        this._maxDate = this.getValidDateOrNull(this.dateAdapter.deserialize(value));\n    }\n\n    /** Function used to filter which dates are selectable. */\n    @Input() dateFilter: (date: D) => boolean;\n\n    /** Function that can be used to add custom CSS classes to dates. */\n    @Input() dateClass: (date: D) => McCalendarCellCssClasses;\n\n    /** Emits when a new date is selected. */\n    @Output() readonly selectedChange: EventEmitter<D | null> = new EventEmitter<D | null>();\n\n    /** Emits when any date is selected. */\n    @Output() readonly userSelection: EventEmitter<void> = new EventEmitter<void>();\n\n    /** Emits when any date is activated. */\n    @Output() readonly activeDateChange: EventEmitter<D> = new EventEmitter<D>();\n\n    /** The body of calendar table */\n    @ViewChild(McCalendarBody) mcCalendarBody: McCalendarBody;\n\n    /** The label for this month (e.g. \"January 2017\"). */\n    monthLabel: string;\n\n    /** Grid of calendar cells representing the dates of the month. */\n    weeks: McCalendarCell[][];\n\n    /** The number of blank cells in the first row before the 1st of the month. */\n    firstWeekOffset: number;\n\n    /**\n     * The date of the month that the currently selected Date falls on.\n     * Null if the currently selected Date is in another month.\n     */\n    selectedDate: number | null;\n\n    /** The date of the month that today falls on. Null if today is in another month. */\n    todayDate: number | null;\n\n    /** The names of the weekdays. */\n    weekdays: { long: string; narrow: string }[];\n    private _activeDate: D;\n    private _selected: D | null;\n    private _minDate: D | null;\n    private _maxDate: D | null;\n\n    constructor(\n        private changeDetectorRef: ChangeDetectorRef,\n        @Optional() @Inject(MC_DATE_FORMATS) private dateFormats: McDateFormats,\n        @Optional() public dateAdapter: DateAdapter<D>,\n        @Optional() private dir?: Directionality\n    ) {\n\n        if (!this.dateAdapter) {\n            throw createMissingDateImplError('DateAdapter');\n        }\n\n        if (!this.dateFormats) {\n            throw createMissingDateImplError('MC_DATE_FORMATS');\n        }\n\n        const firstDayOfWeek = this.dateAdapter.getFirstDayOfWeek();\n        const narrowWeekdays = this.dateAdapter.getDayOfWeekNames('narrow');\n        const longWeekdays = this.dateAdapter.getDayOfWeekNames('long');\n\n        // Rotate the labels for days of the week based on the configured first day of the week.\n        const weekdays = longWeekdays.map((long, i) => {\n            return { long, narrow: narrowWeekdays[i] };\n        });\n        this.weekdays = weekdays.slice(firstDayOfWeek).concat(weekdays.slice(0, firstDayOfWeek));\n\n        this._activeDate = this.dateAdapter.today();\n    }\n\n    ngAfterContentInit() {\n        this.init();\n    }\n\n    /** Handles when a new date is selected. */\n    dateSelected(date: number) {\n        if (this.selectedDate !== date) {\n            const selectedYear = this.dateAdapter.getYear(this.activeDate);\n            const selectedMonth = this.dateAdapter.getMonth(this.activeDate);\n            const selectedDate = this.dateAdapter.createDate(selectedYear, selectedMonth, date);\n\n            this.selectedChange.emit(selectedDate);\n        }\n\n        this.userSelection.emit();\n    }\n\n    /** Handles keydown events on the calendar body when calendar is in month view. */\n    handleCalendarBodyKeydown(event: KeyboardEvent): void {\n        // TODO(mmalerba): We currently allow keyboard navigation to disabled dates, but just prevent\n        // disabled ones from being selected. This may not be ideal, we should look into whether\n        // navigation should skip over disabled dates, and if so, how to implement that efficiently.\n\n        const oldActiveDate = this._activeDate;\n        const isRtl = this.isRtl();\n\n        // tslint:disable-next-line:deprecation\n        switch (event.keyCode) {\n            case LEFT_ARROW:\n                this.activeDate = this.dateAdapter.addCalendarDays(this._activeDate, isRtl ? 1 : -1);\n                break;\n            case RIGHT_ARROW:\n                this.activeDate = this.dateAdapter.addCalendarDays(this._activeDate, isRtl ? -1 : 1);\n                break;\n            case UP_ARROW:\n                this.activeDate = this.dateAdapter.addCalendarDays(this._activeDate, -7);\n                break;\n            case DOWN_ARROW:\n                this.activeDate = this.dateAdapter.addCalendarDays(this._activeDate, 7);\n                break;\n            case HOME:\n                this.activeDate = this.dateAdapter.addCalendarDays(this._activeDate,\n                    1 - this.dateAdapter.getDate(this._activeDate));\n                break;\n            case END:\n                this.activeDate = this.dateAdapter.addCalendarDays(this._activeDate,\n                    (this.dateAdapter.getNumDaysInMonth(this._activeDate) -\n                        this.dateAdapter.getDate(this._activeDate)));\n                break;\n            case PAGE_UP:\n                this.activeDate = event.altKey ?\n                    this.dateAdapter.addCalendarYears(this._activeDate, -1) :\n                    this.dateAdapter.addCalendarMonths(this._activeDate, -1);\n                break;\n            case PAGE_DOWN:\n                this.activeDate = event.altKey ?\n                    this.dateAdapter.addCalendarYears(this._activeDate, 1) :\n                    this.dateAdapter.addCalendarMonths(this._activeDate, 1);\n                break;\n            case ENTER:\n            case SPACE:\n                if (!this.dateFilter || this.dateFilter(this._activeDate)) {\n                    this.dateSelected(this.dateAdapter.getDate(this._activeDate));\n                    this.userSelection.emit();\n                    // Prevent unexpected default actions such as form submission.\n                    event.preventDefault();\n                }\n\n                return;\n            default:\n                // Don't prevent default or focus active cell on keys that we don't explicitly handle.\n                return;\n        }\n\n        if (this.dateAdapter.compareDate(oldActiveDate, this.activeDate)) {\n            this.activeDateChange.emit(this.activeDate);\n        }\n\n        this.focusActiveCell();\n        // Prevent unexpected default actions such as form submission.\n        event.preventDefault();\n    }\n\n    /** Initializes this month view. */\n    init() {\n        this.selectedDate = this.getDateInCurrentMonth(this.selected);\n        this.todayDate = this.getDateInCurrentMonth(this.dateAdapter.today());\n        this.monthLabel =\n            this.dateAdapter.getMonthNames('short')[this.dateAdapter.getMonth(this.activeDate)];\n\n        this.monthLabel = this.monthLabel[0].toLocaleUpperCase() + this.monthLabel.substr(1);\n\n        const firstOfMonth = this.dateAdapter.createDate(this.dateAdapter.getYear(this.activeDate),\n            this.dateAdapter.getMonth(this.activeDate), 1);\n        this.firstWeekOffset =\n            (DAYS_PER_WEEK + this.dateAdapter.getDayOfWeek(firstOfMonth) -\n                this.dateAdapter.getFirstDayOfWeek()) % DAYS_PER_WEEK;\n\n        this.createWeekCells();\n        this.changeDetectorRef.markForCheck();\n    }\n\n    /** Focuses the active cell after the microtask queue is empty. */\n    focusActiveCell() {\n        this.mcCalendarBody.focusActiveCell();\n    }\n\n    /** Creates McCalendarCells for the dates in this month. */\n    private createWeekCells() {\n        const daysInMonth = this.dateAdapter.getNumDaysInMonth(this.activeDate);\n        const dateNames = this.dateAdapter.getDateNames();\n\n        this.weeks = [[]];\n\n        for (let i = 0, cell = this.firstWeekOffset; i < daysInMonth; i++, cell++) {\n            if (cell === DAYS_PER_WEEK) {\n                this.weeks.push([]);\n                cell = 0;\n            }\n            const date = this.dateAdapter.createDate(\n                this.dateAdapter.getYear(this.activeDate),\n                this.dateAdapter.getMonth(this.activeDate), i + 1);\n            const enabled = this.shouldEnableDate(date);\n            const ariaLabel = this.dateAdapter.format(date, this.dateFormats.display.dateA11yLabel);\n            const cellClasses = this.dateClass ? this.dateClass(date) : undefined;\n\n            this.weeks[this.weeks.length - 1]\n                .push(new McCalendarCell(i + 1, dateNames[i], ariaLabel, enabled, cellClasses));\n        }\n    }\n\n    /** Date filter for the month */\n    private shouldEnableDate(date: D): boolean {\n        return !!date &&\n            (!this.dateFilter || this.dateFilter(date)) &&\n            (!this.minDate || this.dateAdapter.compareDate(date, this.minDate) >= 0) &&\n            (!this.maxDate || this.dateAdapter.compareDate(date, this.maxDate) <= 0);\n    }\n\n    /**\n     * Gets the date in this month that the given Date falls on.\n     * Returns null if the given Date is in another month.\n     */\n    private getDateInCurrentMonth(date: D | null): number | null {\n        return date && this.hasSameMonthAndYear(date, this.activeDate) ?\n            this.dateAdapter.getDate(date) : null;\n    }\n\n    /** Checks whether the 2 dates are non-null and fall within the same month of the same year. */\n    private hasSameMonthAndYear(d1: D | null, d2: D | null): boolean {\n        return !!(d1 && d2 && this.dateAdapter.getMonth(d1) === this.dateAdapter.getMonth(d2) &&\n            this.dateAdapter.getYear(d1) === this.dateAdapter.getYear(d2));\n    }\n\n    /**\n     * @param obj The object to check.\n     * @returns The given object if it is both a date instance and valid, otherwise null.\n     */\n    private getValidDateOrNull(obj: any): D | null {\n        return (this.dateAdapter.isDateInstance(obj) && this.dateAdapter.isValid(obj)) ? obj : null;\n    }\n\n    /** Determines whether the user has the RTL layout direction. */\n    private isRtl() {\n        return this.dir && this.dir.value === 'rtl';\n    }\n}\n","// tslint:disable:no-magic-numbers\nimport {\n    AfterContentInit,\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    EventEmitter,\n    Input,\n    Optional,\n    Output,\n    ViewChild,\n    ViewEncapsulation\n} from '@angular/core';\nimport { Directionality } from '@ptsecurity/cdk/bidi';\nimport { DateAdapter } from '@ptsecurity/cdk/datetime';\nimport {\n    DOWN_ARROW,\n    END,\n    ENTER,\n    HOME,\n    LEFT_ARROW,\n    PAGE_DOWN,\n    PAGE_UP,\n    RIGHT_ARROW,\n    UP_ARROW,\n    SPACE\n} from '@ptsecurity/cdk/keycodes';\n\nimport { McCalendarBody, McCalendarCell } from './calendar-body';\nimport { createMissingDateImplError } from './datepicker-errors';\n\n\nexport const yearsPerPage = 24;\n\nexport const yearsPerRow = 4;\n\n\n/**\n * An internal component used to display a year selector in the datepicker.\n * @docs-private\n */\n@Component({\n    selector: 'mc-multi-year-view',\n    templateUrl: 'multi-year-view.html',\n    exportAs: 'mcMultiYearView',\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class McMultiYearView<D> implements AfterContentInit {\n    /** The date to display in this multi-year view (everything other than the year is ignored). */\n    @Input()\n    get activeDate(): D {\n        return this._activeDate;\n    }\n\n    set activeDate(value: D) {\n        const oldActiveDate = this._activeDate;\n        const validDate =\n            this.getValidDateOrNull(this.dateAdapter.deserialize(value)) || this.dateAdapter.today();\n        this._activeDate = this.dateAdapter.clampDate(validDate, this.minDate, this.maxDate);\n\n        if (Math.floor(this.dateAdapter.getYear(oldActiveDate) / yearsPerPage) !==\n            Math.floor(this.dateAdapter.getYear(this._activeDate) / yearsPerPage)) {\n            this.init();\n        }\n    }\n\n    /** The currently selected date. */\n    @Input()\n    get selected(): D | null {\n        return this._selected;\n    }\n\n    set selected(value: D | null) {\n        this._selected = this.getValidDateOrNull(this.dateAdapter.deserialize(value));\n        this.selectedYear = this._selected && this.dateAdapter.getYear(this._selected);\n    }\n\n    /** The minimum selectable date. */\n    @Input()\n    get minDate(): D | null {\n        return this._minDate;\n    }\n\n    set minDate(value: D | null) {\n        this._minDate = this.getValidDateOrNull(this.dateAdapter.deserialize(value));\n    }\n\n    /** The maximum selectable date. */\n    @Input()\n    get maxDate(): D | null {\n        return this._maxDate;\n    }\n\n    set maxDate(value: D | null) {\n        this._maxDate = this.getValidDateOrNull(this.dateAdapter.deserialize(value));\n    }\n\n    /** A function used to filter which dates are selectable. */\n    @Input() dateFilter: (date: D) => boolean;\n\n    /** Emits when a new year is selected. */\n    @Output() readonly selectedChange: EventEmitter<D> = new EventEmitter<D>();\n\n    /** Emits the selected year. This doesn't imply a change on the selected date */\n    @Output() readonly yearSelected: EventEmitter<D> = new EventEmitter<D>();\n\n    /** Emits when any date is activated. */\n    @Output() readonly activeDateChange: EventEmitter<D> = new EventEmitter<D>();\n\n    /** The body of calendar table */\n    @ViewChild(McCalendarBody) mcCalendarBody: McCalendarBody;\n\n    /** Grid of calendar cells representing the currently displayed years. */\n    years: McCalendarCell[][];\n\n    /** The year that today falls on. */\n    todayYear: number;\n\n    /** The year of the selected date. Null if the selected date is null. */\n    selectedYear: number | null;\n    private _activeDate: D;\n    private _selected: D | null;\n    private _minDate: D | null;\n    private _maxDate: D | null;\n\n    constructor(\n        private changeDetectorRef: ChangeDetectorRef,\n        @Optional() public dateAdapter: DateAdapter<D>,\n        @Optional() private dir?: Directionality\n    ) {\n        if (!this.dateAdapter) {\n            throw createMissingDateImplError('DateAdapter');\n        }\n\n        this._activeDate = this.dateAdapter.today();\n    }\n\n    ngAfterContentInit() {\n        this.init();\n    }\n\n    /** Initializes this multi-year view. */\n    init() {\n        this.todayYear = this.dateAdapter.getYear(this.dateAdapter.today());\n        const activeYear = this.dateAdapter.getYear(this._activeDate);\n        const activeOffset = activeYear % yearsPerPage;\n        this.years = [];\n        for (let i = 0, row: number[] = []; i < yearsPerPage; i++) {\n            row.push(activeYear - activeOffset + i);\n            if (row.length === yearsPerRow) {\n                this.years.push(row.map((year) => this.createCellForYear(year)));\n                row = [];\n            }\n        }\n        this.changeDetectorRef.markForCheck();\n    }\n\n    /** Handles when a new year is selected. */\n    onYearSelected(year: number) {\n        this.yearSelected.emit(this.dateAdapter.createDate(year, 0, 1));\n        const month = this.dateAdapter.getMonth(this.activeDate);\n        const daysInMonth =\n            this.dateAdapter.getNumDaysInMonth(this.dateAdapter.createDate(year, month, 1));\n        this.selectedChange.emit(this.dateAdapter.createDate(year, month,\n            Math.min(this.dateAdapter.getDate(this.activeDate), daysInMonth)));\n    }\n\n    /** Handles keydown events on the calendar body when calendar is in multi-year view. */\n    handleCalendarBodyKeydown(event: KeyboardEvent): void {\n        // TODO(mmalerba): We currently allow keyboard navigation to disabled dates, but just prevent\n        // disabled ones from being selected. This may not be ideal, we should look into whether\n        // navigation should skip over disabled dates, and if so, how to implement that efficiently.\n\n        const oldActiveDate = this._activeDate;\n        const isRtl = this.isRtl();\n\n        // tslint:disable-next-line:deprecation\n        switch (event.keyCode) {\n            case LEFT_ARROW:\n                this.activeDate = this.dateAdapter.addCalendarYears(this._activeDate, isRtl ? 1 : -1);\n                break;\n            case RIGHT_ARROW:\n                this.activeDate = this.dateAdapter.addCalendarYears(this._activeDate, isRtl ? -1 : 1);\n                break;\n            case UP_ARROW:\n                this.activeDate = this.dateAdapter.addCalendarYears(this._activeDate, -yearsPerRow);\n                break;\n            case DOWN_ARROW:\n                this.activeDate = this.dateAdapter.addCalendarYears(this._activeDate, yearsPerRow);\n                break;\n            case HOME:\n                this.activeDate = this.dateAdapter.addCalendarYears(this._activeDate,\n                    -this.dateAdapter.getYear(this._activeDate) % yearsPerPage);\n                break;\n            case END:\n                this.activeDate = this.dateAdapter.addCalendarYears(this._activeDate,\n                    yearsPerPage - this.dateAdapter.getYear(this._activeDate) % yearsPerPage - 1);\n                break;\n            case PAGE_UP:\n                this.activeDate =\n                    this.dateAdapter.addCalendarYears(\n                        this._activeDate, event.altKey ? -yearsPerPage * 10 : -yearsPerPage);\n                break;\n            case PAGE_DOWN:\n                this.activeDate =\n                    this.dateAdapter.addCalendarYears(\n                        this._activeDate, event.altKey ? yearsPerPage * 10 : yearsPerPage);\n                break;\n            case ENTER:\n            case SPACE:\n                this.onYearSelected(this.dateAdapter.getYear(this._activeDate));\n                break;\n            default:\n                // Don't prevent default or focus active cell on keys that we don't explicitly handle.\n                return;\n        }\n\n        if (this.dateAdapter.compareDate(oldActiveDate, this.activeDate)) {\n            this.activeDateChange.emit(this.activeDate);\n        }\n\n        this.focusActiveCell();\n        // Prevent unexpected default actions such as form submission.\n        event.preventDefault();\n    }\n\n    getActiveCell(): number {\n        return this.dateAdapter.getYear(this.activeDate) % yearsPerPage;\n    }\n\n    /** Focuses the active cell after the microtask queue is empty. */\n    focusActiveCell() {\n        this.mcCalendarBody.focusActiveCell();\n    }\n\n    /** Creates an McCalendarCell for the given year. */\n    private createCellForYear(year: number) {\n        const yearName = this.dateAdapter.getYearName(this.dateAdapter.createDate(year, 0, 1));\n\n        return new McCalendarCell(year, yearName, yearName, this.shouldEnableYear(year));\n    }\n\n    /** Whether the given year is enabled. */\n    private shouldEnableYear(year: number) {\n        // disable if the year is greater than maxDate lower than minDate\n        if (year === undefined || year === null ||\n            (this.maxDate && year > this.dateAdapter.getYear(this.maxDate)) ||\n            (this.minDate && year < this.dateAdapter.getYear(this.minDate))) {\n            return false;\n        }\n\n        // enable if it reaches here and there's no filter defined\n        if (!this.dateFilter) {\n            return true;\n        }\n\n        const firstOfYear = this.dateAdapter.createDate(year, 0, 1);\n\n        // If any date in the year is enabled count the year as enabled.\n        for (let date = firstOfYear; this.dateAdapter.getYear(date) === year;\n             date = this.dateAdapter.addCalendarDays(date, 1)) {\n            if (this.dateFilter(date)) {\n                return true;\n            }\n        }\n\n        return false;\n    }\n\n    /**\n     * @param obj The object to check.\n     * @returns The given object if it is both a date instance and valid, otherwise null.\n     */\n    private getValidDateOrNull(obj: any): D | null {\n        return (this.dateAdapter.isDateInstance(obj) && this.dateAdapter.isValid(obj)) ? obj : null;\n    }\n\n    /** Determines whether the user has the RTL layout direction. */\n    private isRtl() {\n        return this.dir && this.dir.value === 'rtl';\n    }\n}\n","import {\n    AfterContentInit,\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    EventEmitter,\n    Inject,\n    Input,\n    Optional,\n    Output,\n    ViewChild,\n    ViewEncapsulation\n} from '@angular/core';\nimport { Directionality } from '@ptsecurity/cdk/bidi';\nimport { DateAdapter, MC_DATE_FORMATS, McDateFormats } from '@ptsecurity/cdk/datetime';\nimport {\n    DOWN_ARROW,\n    END,\n    ENTER,\n    HOME,\n    LEFT_ARROW,\n    PAGE_DOWN,\n    PAGE_UP,\n    RIGHT_ARROW,\n    UP_ARROW,\n    SPACE\n} from '@ptsecurity/cdk/keycodes';\n\nimport { McCalendarBody, McCalendarCell } from './calendar-body';\nimport { createMissingDateImplError } from './datepicker-errors';\n\n\n/**\n * An internal component used to display a single year in the datepicker.\n * @docs-private\n */\n@Component({\n    selector: 'mc-year-view',\n    templateUrl: 'year-view.html',\n    exportAs: 'mcYearView',\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class McYearView<D> implements AfterContentInit {\n    /** The date to display in this year view (everything other than the year is ignored). */\n    @Input()\n    get activeDate(): D {\n        return this._activeDate;\n    }\n\n    set activeDate(value: D) {\n        const oldActiveDate = this._activeDate;\n        const validDate =\n            this.getValidDateOrNull(this.dateAdapter.deserialize(value)) || this.dateAdapter.today();\n        this._activeDate = this.dateAdapter.clampDate(validDate, this.minDate, this.maxDate);\n\n        if (this.dateAdapter.getYear(oldActiveDate) !== this.dateAdapter.getYear(this._activeDate)) {\n            this.init();\n        }\n    }\n\n    /** The currently selected date. */\n    @Input()\n    get selected(): D | null {\n        return this._selected;\n    }\n\n    set selected(value: D | null) {\n        this._selected = this.getValidDateOrNull(this.dateAdapter.deserialize(value));\n        this.selectedMonth = this.getMonthInCurrentYear(this._selected);\n    }\n\n    /** The minimum selectable date. */\n    @Input()\n    get minDate(): D | null {\n        return this._minDate;\n    }\n\n    set minDate(value: D | null) {\n        this._minDate = this.getValidDateOrNull(this.dateAdapter.deserialize(value));\n    }\n\n    /** The maximum selectable date. */\n    @Input()\n    get maxDate(): D | null {\n        return this._maxDate;\n    }\n\n    set maxDate(value: D | null) {\n        this._maxDate = this.getValidDateOrNull(this.dateAdapter.deserialize(value));\n    }\n\n    /** A function used to filter which dates are selectable. */\n    @Input() dateFilter: (date: D) => boolean;\n\n    /** Emits when a new month is selected. */\n    @Output() readonly selectedChange: EventEmitter<D> = new EventEmitter<D>();\n\n    /** Emits the selected month. This doesn't imply a change on the selected date */\n    @Output() readonly monthSelected: EventEmitter<D> = new EventEmitter<D>();\n\n    /** Emits when any date is activated. */\n    @Output() readonly activeDateChange: EventEmitter<D> = new EventEmitter<D>();\n\n    /** The body of calendar table */\n    @ViewChild(McCalendarBody) mcCalendarBody: McCalendarBody;\n\n    /** Grid of calendar cells representing the months of the year. */\n    months: McCalendarCell[][];\n\n    /** The label for this year (e.g. \"2017\"). */\n    yearLabel: string;\n\n    /** The month in this year that today falls on. Null if today is in a different year. */\n    todayMonth: number | null;\n\n    /**\n     * The month in this year that the selected Date falls on.\n     * Null if the selected Date is in a different year.\n     */\n    selectedMonth: number | null;\n    private _activeDate: D;\n    private _selected: D | null;\n    private _minDate: D | null;\n    private _maxDate: D | null;\n\n    constructor(\n        private changeDetectorRef: ChangeDetectorRef,\n        @Optional() @Inject(MC_DATE_FORMATS) private dateFormats: McDateFormats,\n        @Optional() public dateAdapter: DateAdapter<D>,\n        @Optional() private dir?: Directionality\n    ) {\n        if (!this.dateAdapter) {\n            throw createMissingDateImplError('DateAdapter');\n        }\n\n        if (!this.dateFormats) {\n            throw createMissingDateImplError('MC_DATE_FORMATS');\n        }\n\n        this._activeDate = this.dateAdapter.today();\n    }\n\n    ngAfterContentInit() {\n        this.init();\n    }\n\n    /** Handles when a new month is selected. */\n    onMonthSelected(month: number) {\n        const normalizedDate =\n            this.dateAdapter.createDate(this.dateAdapter.getYear(this.activeDate), month, 1);\n\n        this.monthSelected.emit(normalizedDate);\n\n        const daysInMonth = this.dateAdapter.getNumDaysInMonth(normalizedDate);\n\n        this.selectedChange.emit(this.dateAdapter.createDate(\n            this.dateAdapter.getYear(this.activeDate), month,\n            Math.min(this.dateAdapter.getDate(this.activeDate), daysInMonth)));\n    }\n\n    /** Handles keydown events on the calendar body when calendar is in year view. */\n    handleCalendarBodyKeydown(event: KeyboardEvent): void {\n        // TODO(mmalerba): We currently allow keyboard navigation to disabled dates, but just prevent\n        // disabled ones from being selected. This may not be ideal, we should look into whether\n        // navigation should skip over disabled dates, and if so, how to implement that efficiently.\n\n        const oldActiveDate = this._activeDate;\n        const isRtl = this.isRtl();\n\n        const VERTICAL_SHIFT = 4;\n        const PAGE_SHIFT = 10;\n        const MAX_MONTH_INDEX = 11;\n\n        // tslint:disable-next-line:deprecation\n        switch (event.keyCode) {\n            case LEFT_ARROW:\n                this.activeDate = this.dateAdapter.addCalendarMonths(this._activeDate, isRtl ? 1 : -1);\n                break;\n            case RIGHT_ARROW:\n                this.activeDate = this.dateAdapter.addCalendarMonths(this._activeDate, isRtl ? -1 : 1);\n                break;\n            case UP_ARROW:\n                this.activeDate = this.dateAdapter.addCalendarMonths(this._activeDate, -VERTICAL_SHIFT);\n                break;\n            case DOWN_ARROW:\n                this.activeDate = this.dateAdapter.addCalendarMonths(this._activeDate, VERTICAL_SHIFT);\n                break;\n            case HOME:\n                this.activeDate = this.dateAdapter.addCalendarMonths(this._activeDate,\n                    -this.dateAdapter.getMonth(this._activeDate));\n                break;\n            case END:\n                this.activeDate = this.dateAdapter.addCalendarMonths(this._activeDate,\n                    MAX_MONTH_INDEX - this.dateAdapter.getMonth(this._activeDate));\n                break;\n            case PAGE_UP:\n                this.activeDate =\n                    this.dateAdapter.addCalendarYears(this._activeDate, event.altKey ? -PAGE_SHIFT : -1);\n                break;\n            case PAGE_DOWN:\n                this.activeDate =\n                    this.dateAdapter.addCalendarYears(this._activeDate, event.altKey ? PAGE_SHIFT : 1);\n                break;\n            case ENTER:\n            case SPACE:\n                this.onMonthSelected(this.dateAdapter.getMonth(this._activeDate));\n                break;\n            default:\n                // Don't prevent default or focus active cell on keys that we don't explicitly handle.\n                return;\n        }\n\n        if (this.dateAdapter.compareDate(oldActiveDate, this.activeDate)) {\n            this.activeDateChange.emit(this.activeDate);\n        }\n\n        this.focusActiveCell();\n        // Prevent unexpected default actions such as form submission.\n        event.preventDefault();\n    }\n\n    /** Initializes this year view. */\n    init() {\n        this.selectedMonth = this.getMonthInCurrentYear(this.selected);\n        this.todayMonth = this.getMonthInCurrentYear(this.dateAdapter.today());\n        this.yearLabel = this.dateAdapter.getYearName(this.activeDate);\n\n        const monthNames = this.dateAdapter.getMonthNames('short');\n\n        // First row of months only contains 5 elements so we can fit the year label on the same row.\n        // tslint:disable-next-line:no-magic-numbers\n        this.months = [[0, 1, 2, 3], [4, 5, 6, 7], [8, 9, 10, 11]].map((row) => row.map(\n            (month) => this.createCellForMonth(month, monthNames[month])));\n        this.changeDetectorRef.markForCheck();\n    }\n\n    /** Focuses the active cell after the microtask queue is empty. */\n    focusActiveCell() {\n        this.mcCalendarBody.focusActiveCell();\n    }\n\n    /**\n     * Gets the month in this year that the given Date falls on.\n     * Returns null if the given Date is in another year.\n     */\n    private getMonthInCurrentYear(date: D | null) {\n        return date && this.dateAdapter.getYear(date) === this.dateAdapter.getYear(this.activeDate) ?\n            this.dateAdapter.getMonth(date) : null;\n    }\n\n    /** Creates an McCalendarCell for the given month. */\n    private createCellForMonth(month: number, monthName: string) {\n        const ariaLabel = this.dateAdapter.format(\n            this.dateAdapter.createDate(this.dateAdapter.getYear(this.activeDate), month, 1),\n            this.dateFormats.display.monthYearA11yLabel);\n\n        const newMonthName = monthName[0].toLocaleUpperCase() + monthName.substr(1);\n\n        return new McCalendarCell(\n            month, newMonthName, ariaLabel, this.shouldEnableMonth(month));\n    }\n\n    /** Whether the given month is enabled. */\n    private shouldEnableMonth(month: number) {\n\n        const activeYear = this.dateAdapter.getYear(this.activeDate);\n\n        if (month === undefined || month === null ||\n            this.isYearAndMonthAfterMaxDate(activeYear, month) ||\n            this.isYearAndMonthBeforeMinDate(activeYear, month)) {\n            return false;\n        }\n\n        if (!this.dateFilter) {\n            return true;\n        }\n\n        const firstOfMonth = this.dateAdapter.createDate(activeYear, month, 1);\n\n        // If any date in the month is enabled count the month as enabled.\n        for (let date = firstOfMonth; this.dateAdapter.getMonth(date) === month;\n             date = this.dateAdapter.addCalendarDays(date, 1)) {\n            if (this.dateFilter(date)) {\n                return true;\n            }\n        }\n\n        return false;\n    }\n\n    /**\n     * Tests whether the combination month/year is after this.maxDate, considering\n     * just the month and year of this.maxDate\n     */\n    private isYearAndMonthAfterMaxDate(year: number, month: number) {\n        if (this.maxDate) {\n            const maxYear = this.dateAdapter.getYear(this.maxDate);\n            const maxMonth = this.dateAdapter.getMonth(this.maxDate);\n\n            return year > maxYear || (year === maxYear && month > maxMonth);\n        }\n\n        return false;\n    }\n\n    /**\n     * Tests whether the combination month/year is before this.minDate, considering\n     * just the month and year of this.minDate\n     */\n    private isYearAndMonthBeforeMinDate(year: number, month: number) {\n        if (this.minDate) {\n            const minYear = this.dateAdapter.getYear(this.minDate);\n            const minMonth = this.dateAdapter.getMonth(this.minDate);\n\n            return year < minYear || (year === minYear && month < minMonth);\n        }\n\n        return false;\n    }\n\n    /**\n     * @param obj The object to check.\n     * @returns The given object if it is both a date instance and valid, otherwise null.\n     */\n    private getValidDateOrNull(obj: any): D | null {\n        return (this.dateAdapter.isDateInstance(obj) && this.dateAdapter.isValid(obj)) ? obj : null;\n    }\n\n    /** Determines whether the user has the RTL layout direction. */\n    private isRtl() {\n        return this.dir && this.dir.value === 'rtl';\n    }\n}\n","import {\n    ChangeDetectionStrategy,\n    Component,\n    Directive,\n    ElementRef,\n    OnDestroy,\n    QueryList,\n    ViewEncapsulation,\n    ContentChildren\n} from '@angular/core';\n\nimport { FocusMonitor } from '@ptsecurity/cdk/a11y';\n\nimport { mixinColor, mixinDisabled, CanColor, CanDisable, CanDisableCtor, CanColorCtor } from '@ptsecurity/mosaic/core';\nimport { McIcon } from '@ptsecurity/mosaic/icon';\n\n\n@Directive({\n    selector: 'button[mc-button], a[mc-button]',\n    host: { class: 'mc-button' }\n})\nexport class McButtonCSSStyler {}\n\n\n@Directive({\n    selector: 'button[mc-icon-button], a[mc-icon-button]',\n    queries: {\n        contentChildren: new ContentChildren(McIcon)\n    },\n    host: { class: 'mc-icon-button' }\n})\nexport class McIconButtonCSSStyler {\n    nativeElement: Element;\n\n    contentChildren: QueryList<McIcon>;\n\n    constructor(elementRef: ElementRef) {\n        this.nativeElement = elementRef.nativeElement;\n    }\n\n    ngAfterContentInit() {\n        this._addClassModificatorForIcons();\n    }\n\n    _addClassModificatorForIcons() {\n        const twoIcons = 2;\n        const icons = this.contentChildren.map((item) => item._elementRef.nativeElement);\n\n        if (icons.length === 1) {\n            const iconElement = icons[0];\n            const COMMENT_NODE = 8;\n\n            if (!iconElement.previousElementSibling && !iconElement.nextElementSibling) {\n                if (iconElement.nextSibling && iconElement.nextSibling.nodeType !== COMMENT_NODE) {\n                    iconElement.classList.add('mc-icon_left');\n                    this.nativeElement.classList.add('mc-icon-button_left');\n                }\n\n                if (iconElement.previousSibling && iconElement.previousSibling.nodeType !== COMMENT_NODE) {\n                    iconElement.classList.add('mc-icon_right');\n                    this.nativeElement.classList.add('mc-icon-button_right');\n                }\n            }\n        } else if (icons.length === twoIcons) {\n            const firstIconElement = icons[0];\n            const secondIconElement = icons[1];\n\n            firstIconElement.classList.add('mc-icon_left');\n            secondIconElement.classList.add('mc-icon_right');\n        }\n    }\n}\n\n\nexport class McButtonBase {\n    constructor(public _elementRef: ElementRef) {}\n}\n\nexport const _McButtonMixinBase:\n    CanDisableCtor &\n    CanColorCtor &\n    typeof McButtonBase =\n        mixinColor(mixinDisabled(McButtonBase));\n\n\n@Component({\n    selector: `\n        button[mc-button],\n        button[mc-xs-button],\n        button[mc-sm-button],\n        button[mc-lg-button],\n        button[mc-xl-button]\n    `,\n    templateUrl: './button.component.html',\n    styleUrls: ['./button.css'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n    inputs: ['disabled', 'color'],\n    host: {\n        '[disabled]': 'disabled || null'\n    }\n})\nexport class McButton extends _McButtonMixinBase implements OnDestroy, CanDisable, CanColor {\n    constructor(elementRef: ElementRef, private _focusMonitor: FocusMonitor) {\n        super(elementRef);\n\n        this._focusMonitor.monitor(this._elementRef.nativeElement, true);\n    }\n\n    ngOnDestroy() {\n        this._focusMonitor.stopMonitoring(this._elementRef.nativeElement);\n    }\n\n    focus(): void {\n        this._getHostElement().focus();\n    }\n\n    _getHostElement() {\n        return this._elementRef.nativeElement;\n    }\n}\n\n\n@Component({\n    selector: 'a[mc-button], a[mc-xs-button], a[mc-sm-button], a[mc-lg-button], a[mc-xl-button]',\n    templateUrl: './button.component.html',\n    styleUrls: ['./button.css'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n    inputs: ['disabled', 'color'],\n    host: {\n        '[attr.tabindex]': 'disabled ? -1 : 0',\n        '[attr.disabled]': 'disabled || null',\n        '(click)': '_haltDisabledEvents($event)'\n    }\n})\nexport class McAnchor extends McButton {\n    constructor(focusMonitor: FocusMonitor, elementRef: ElementRef) {\n        super(elementRef, focusMonitor);\n    }\n\n    _haltDisabledEvents(event: Event) {\n        if (this.disabled) {\n            event.preventDefault();\n            event.stopImmediatePropagation();\n        }\n    }\n}\n\n\n@Component({\n    selector: 'button[mc-icon-button]',\n    templateUrl: './button.component.html',\n    styleUrls: ['./button.css'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n    inputs: ['disabled', 'color'],\n    host: {\n        '[attr.tabindex]': 'disabled ? -1 : 0',\n        '[attr.disabled]': 'disabled || null'\n    }\n})\nexport class McIconButton extends McButton {\n    constructor(focusMonitor: FocusMonitor, elementRef: ElementRef) {\n        super(elementRef, focusMonitor);\n    }\n\n    _haltDisabledEvents(event: Event) {\n        if (this.disabled) {\n            event.preventDefault();\n            event.stopImmediatePropagation();\n        }\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { A11yModule } from '@ptsecurity/cdk/a11y';\nimport { PlatformModule } from '@ptsecurity/cdk/platform';\n\nimport {\n    McButton,\n    McAnchor,\n    McIconButton,\n    McButtonCSSStyler,\n    McIconButtonCSSStyler\n} from './button.component';\n\n\n@NgModule({\n    imports: [\n        CommonModule,\n        A11yModule,\n        PlatformModule\n    ],\n    exports: [\n        McButton,\n        McAnchor,\n        McIconButton,\n        McButtonCSSStyler,\n        McIconButtonCSSStyler\n    ],\n    declarations: [\n        McButton,\n        McAnchor,\n        McIconButton,\n        McButtonCSSStyler,\n        McIconButtonCSSStyler\n    ]\n})\nexport class McButtonModule {}\n","import {\n    Output,\n    ChangeDetectionStrategy,\n    Component,\n    ElementRef, Input,\n    OnDestroy, EventEmitter,\n    ViewEncapsulation, HostBinding\n} from '@angular/core';\n\nimport { FocusMonitor } from '@ptsecurity/cdk/a11y';\nimport { SPACE } from '@ptsecurity/cdk/keycodes';\n\n\n@Component({\n    selector: 'mc-card',\n    templateUrl: './card.component.html',\n    styleUrls: ['./card.component.css'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n    inputs: ['color'],\n    host: {\n        class: 'mc-card',\n        '[class.mc-card_readonly]': 'readonly',\n        '[class.mc-card_selected]': 'selected',\n        '(keydown)': 'onKeyDown($event)',\n        '(click)': 'onClick($event)'\n    }\n})\nexport class McCard implements OnDestroy {\n    get tabIndex(): number | null {\n        return this.readonly ? null : this._tabIndex;\n    }\n\n    @HostBinding('attr.tabIndex')\n    @Input()\n    set tabIndex(value: number | null) {\n        this._tabIndex = value;\n    }\n\n    @Input()\n    readonly = false;\n\n    @Input()\n    selected = false;\n\n    @Output()\n    selectedChange = new EventEmitter<boolean>();\n\n    private _tabIndex: number | null = 0;\n\n    constructor(private _elementRef: ElementRef, private _focusMonitor: FocusMonitor) {\n        this._focusMonitor.monitor(this._elementRef.nativeElement, false);\n    }\n\n    ngOnDestroy() {\n        this._focusMonitor.stopMonitoring(this._elementRef.nativeElement);\n    }\n\n    focus(): void {\n        this.hostElement.focus();\n    }\n\n    onClick($event: MouseEvent) {\n        if (!this.readonly) {\n            $event.stopPropagation();\n\n            this.selectedChange.emit(!this.selected);\n        }\n    }\n\n    private get hostElement() {\n        return this._elementRef.nativeElement;\n    }\n\n    onKeyDown($event: KeyboardEvent) {\n        switch ($event.keyCode) {\n            case SPACE:\n                if (!this.readonly) {\n                    $event.preventDefault();\n                    this.selectedChange.emit(!this.selected);\n                }\n                break;\n            default:\n        }\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { A11yModule } from '@ptsecurity/cdk/a11y';\nimport { PlatformModule } from '@ptsecurity/cdk/platform';\n\nimport {\n    McCard\n} from './card.component';\n\n\n@NgModule({\n    imports: [\n        CommonModule,\n        A11yModule,\n        PlatformModule\n    ],\n    exports: [McCard],\n    declarations: [McCard]\n})\nexport class McCardModule {}\n","import { InjectionToken } from '@angular/core';\n\n\n/**\n * Checkbox click action when user click on input element.\n * noop: Do not toggle checked or indeterminate.\n * check: Only toggle checked status, ignore indeterminate.\n * check-indeterminate: Toggle checked status, set indeterminate to false. Default behavior.\n * undefined: Same as `check-indeterminate`.\n */\nexport type McCheckboxClickAction = 'noop' | 'check' | 'check-indeterminate' | undefined;\n\n/**\n * Injection token that can be used to specify the checkbox click behavior.\n */\nexport const MC_CHECKBOX_CLICK_ACTION =\n    new InjectionToken<McCheckboxClickAction>('mc-checkbox-click-action');\n","import {\n    AfterViewInit,\n    Attribute,\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    ElementRef,\n    EventEmitter,\n    forwardRef,\n    Inject,\n    Input,\n    OnDestroy,\n    Optional,\n    Output,\n    ViewChild,\n    ViewEncapsulation\n} from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { FocusMonitor, FocusOrigin } from '@ptsecurity/cdk/a11y';\nimport {\n    CanColor, CanColorCtor,\n    CanDisable, CanDisableCtor,\n    HasTabIndex, HasTabIndexCtor,\n    mixinColor,\n    mixinDisabled,\n    mixinTabIndex,\n    toBoolean\n} from '@ptsecurity/mosaic/core';\n\nimport { MC_CHECKBOX_CLICK_ACTION, McCheckboxClickAction } from './checkbox-config';\n\n\n// Increasing integer for generating unique ids for checkbox components.\nlet nextUniqueId = 0;\n\n/**\n * Provider Expression that allows mc-checkbox to register as a ControlValueAccessor.\n * This allows it to support [(ngModel)].\n * @docs-private\n */\nexport const MC_CHECKBOX_CONTROL_VALUE_ACCESSOR: any = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => McCheckbox),\n    multi: true\n};\n\n/**\n * Represents the different states that require custom transitions between them.\n * @docs-private\n */\nexport enum TransitionCheckState {\n    /** The initial state of the component before any user interaction. */\n    Init,\n    /** The state representing the component when it's becoming checked. */\n    Checked,\n    /** The state representing the component when it's becoming unchecked. */\n    Unchecked,\n    /** The state representing the component when it's becoming indeterminate. */\n    Indeterminate\n}\n\n/** Change event object emitted by McCheckbox. */\nexport class McCheckboxChange {\n    /** The source McCheckbox of the event. */\n    source: McCheckbox;\n    /** The new `checked` value of the checkbox. */\n    checked: boolean;\n}\n\n// Boilerplate for applying mixins to McCheckbox.\n/** @docs-private */\nexport class McCheckboxBase {\n    constructor(public _elementRef: ElementRef) {\n    }\n}\n\nexport const _McCheckboxMixinBase:\n    HasTabIndexCtor &\n    CanColorCtor &\n    CanDisableCtor &\n    typeof McCheckboxBase =\n        mixinTabIndex(mixinColor(mixinDisabled(McCheckboxBase)));\n\n\n/**\n * A mosaic checkbox component. Supports all of the functionality of an HTML5 checkbox,\n * and exposes a similar API. A McCheckbox can be either checked, unchecked, indeterminate, or\n * disabled. Note that all additional accessibility attributes are taken care of by the component,\n * so there is no need to provide them yourself. However, if you want to omit a label and still\n * have the checkbox be accessible, you may supply an [aria-label] input.\n */\n@Component({\n    selector: 'mc-checkbox',\n    templateUrl: 'checkbox.html',\n    styleUrls: ['checkbox.css'],\n    exportAs: 'mcCheckbox',\n    host: {\n        class: 'mc-checkbox',\n        '[id]': 'id',\n        '[attr.id]': 'id',\n        '[class.mc-indeterminate]': 'indeterminate',\n        '[class.mc-checked]': 'checked',\n        '[class.mc-disabled]': 'disabled',\n        '[class.mc-checkbox-label-before]': 'labelPosition == \"before\"'\n    },\n    providers: [MC_CHECKBOX_CONTROL_VALUE_ACCESSOR],\n    inputs: ['color', 'tabIndex'],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class McCheckbox extends _McCheckboxMixinBase implements ControlValueAccessor,\n    AfterViewInit, OnDestroy, CanColor, CanDisable, HasTabIndex {\n\n    /**\n     * Attached to the aria-label attribute of the host element. In most cases, arial-labelledby will\n     * take precedence so this may be omitted.\n     */\n    @Input('aria-label') ariaLabel: string = '';\n\n    /**\n     * Users can specify the `aria-labelledby` attribute which will be forwarded to the input element\n     */\n    @Input('aria-labelledby') ariaLabelledby: string | null = null;\n\n    private _uniqueId: string = `mc-checkbox-${++nextUniqueId}`;\n\n    /** A unique id for the checkbox input. If none is supplied, it will be auto-generated. */\n    @Input() id: string = this._uniqueId;\n\n    /** Returns the unique id for the visual hidden input. */\n    get inputId(): string {\n        return `${this.id || this._uniqueId}-input`;\n    }\n\n    /** Whether the checkbox is required. */\n    @Input()\n    get required(): boolean {\n        return this._required;\n    }\n\n    set required(value: boolean) {\n        this._required = toBoolean(value);\n    }\n\n    private _required: boolean;\n\n    /** Whether the label should appear after or before the checkbox. Defaults to 'after' */\n    @Input() labelPosition: 'before' | 'after' = 'after';\n\n    /** Name value will be applied to the input element if present */\n    @Input() name: string | null = null;\n\n    /** Event emitted when the checkbox's `checked` value changes. */\n    @Output() readonly change: EventEmitter<McCheckboxChange> =\n        new EventEmitter<McCheckboxChange>();\n\n    /** Event emitted when the checkbox's `indeterminate` value changes. */\n    @Output() readonly indeterminateChange: EventEmitter<boolean> = new EventEmitter<boolean>();\n\n    /** The value attribute of the native input element */\n    @Input() value: string;\n\n    /** The native `<input type=\"checkbox\">` element */\n    @ViewChild('input') _inputElement: ElementRef;\n\n    /**\n     * Called when the checkbox is blurred. Needed to properly implement ControlValueAccessor.\n     * @docs-private\n     */\n    _onTouched: () => any = () => {\n    }\n\n    private _currentAnimationClass: string = '';\n\n    private _currentCheckState: TransitionCheckState = TransitionCheckState.Init;\n\n    private _controlValueAccessorChangeFn: (value: any) => void = () => {\n    }\n\n    constructor(elementRef: ElementRef,\n                private _changeDetectorRef: ChangeDetectorRef,\n                private _focusMonitor: FocusMonitor,\n                @Attribute('tabindex') tabIndex: string,\n                @Optional() @Inject(MC_CHECKBOX_CLICK_ACTION)\n                private _clickAction: McCheckboxClickAction) {\n        super(elementRef);\n\n        this.tabIndex = parseInt(tabIndex) || 0;\n    }\n\n    ngAfterViewInit() {\n        this._focusMonitor\n            .monitor(this._inputElement.nativeElement)\n            .subscribe((focusOrigin) => this._onInputFocusChange(focusOrigin));\n    }\n\n    ngOnDestroy() {\n        this._focusMonitor.stopMonitoring(this._inputElement.nativeElement);\n    }\n\n    /**\n     * Whether the checkbox is checked.\n     */\n    @Input()\n    get checked(): boolean {\n        return this._checked;\n    }\n\n    set checked(value: boolean) {\n        if (value != this.checked) {\n            this._checked = value;\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n\n    private _checked: boolean = false;\n\n    /**\n     * Whether the checkbox is disabled. This fully overrides the implementation provided by\n     * mixinDisabled, but the mixin is still required because mixinTabIndex requires it.\n     */\n    @Input()\n    get disabled() {\n        return this._disabled;\n    }\n\n    set disabled(value: any) {\n        if (value != this.disabled) {\n            this._disabled = value;\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n\n    private _disabled: boolean = false;\n\n    /**\n     * Whether the checkbox is indeterminate. This is also known as \"mixed\" mode and can be used to\n     * represent a checkbox with three states, e.g. a checkbox that represents a nested list of\n     * checkable items. Note that whenever checkbox is manually clicked, indeterminate is immediately\n     * set to false.\n     */\n    @Input()\n    get indeterminate(): boolean {\n        return this._indeterminate;\n    }\n\n    set indeterminate(value: boolean) {\n        const changed = value != this._indeterminate;\n        this._indeterminate = value;\n\n        if (changed) {\n            if (this._indeterminate) {\n                this._transitionCheckState(TransitionCheckState.Indeterminate);\n            } else {\n                this._transitionCheckState(\n                    this.checked ? TransitionCheckState.Checked : TransitionCheckState.Unchecked);\n            }\n            this.indeterminateChange.emit(this._indeterminate);\n        }\n    }\n\n    private _indeterminate: boolean = false;\n\n    /** Method being called whenever the label text changes. */\n    _onLabelTextChange() {\n        // This method is getting called whenever the label of the checkbox changes.\n        // Since the checkbox uses the OnPush strategy we need to notify it about the change\n        // that has been recognized by the cdkObserveContent directive.\n        this._changeDetectorRef.markForCheck();\n    }\n\n    // Implemented as part of ControlValueAccessor.\n    writeValue(value: any) {\n        this.checked = !!value;\n    }\n\n    // Implemented as part of ControlValueAccessor.\n    registerOnChange(fn: (value: any) => void) {\n        this._controlValueAccessorChangeFn = fn;\n    }\n\n    // Implemented as part of ControlValueAccessor.\n    registerOnTouched(fn: any) {\n        this._onTouched = fn;\n    }\n\n    // Implemented as part of ControlValueAccessor.\n    setDisabledState(isDisabled: boolean) {\n        this.disabled = isDisabled;\n    }\n\n    _getAriaChecked(): 'true' | 'false' | 'mixed' {\n        return this.checked ? 'true' : (this.indeterminate ? 'mixed' : 'false');\n    }\n\n    private _transitionCheckState(newState: TransitionCheckState) {\n        const oldState = this._currentCheckState;\n        const element: HTMLElement = this._elementRef.nativeElement;\n\n        if (oldState === newState) {\n            return;\n        }\n        if (this._currentAnimationClass.length > 0) {\n            element.classList.remove(this._currentAnimationClass);\n        }\n\n        this._currentCheckState = newState;\n\n        if (this._currentAnimationClass.length > 0) {\n            element.classList.add(this._currentAnimationClass);\n        }\n    }\n\n    private _emitChangeEvent() {\n        const event = new McCheckboxChange();\n        event.source = this;\n        event.checked = this.checked;\n\n        this._controlValueAccessorChangeFn(this.checked);\n        this.change.emit(event);\n    }\n\n    /** Function is called whenever the focus changes for the input element. */\n    private _onInputFocusChange(focusOrigin: FocusOrigin) {\n        if (focusOrigin) {\n            this._onTouched();\n        }\n    }\n\n    /** Toggles the `checked` state of the checkbox. */\n    toggle(): void {\n        this.checked = !this.checked;\n    }\n\n    /**\n     * Event handler for checkbox input element.\n     * Toggles checked state if element is not disabled.\n     * Do not toggle on (change) event since IE doesn't fire change event when\n     *   indeterminate checkbox is clicked.\n     * @param event\n     */\n    _onInputClick(event: Event) {\n        // We have to stop propagation for click events on the visual hidden input element.\n        // By default, when a user clicks on a label element, a generated click event will be\n        // dispatched on the associated input element. Since we are using a label element as our\n        // root container, the click event on the `checkbox` will be executed twice.\n        // The real click event will bubble up, and the generated click event also tries to bubble up.\n        // This will lead to multiple click events.\n        // Preventing bubbling for the second event will solve that issue.\n        event.stopPropagation();\n\n        // If resetIndeterminate is false, and the current state is indeterminate, do nothing on click\n        if (!this.disabled && this._clickAction !== 'noop') {\n            // When user manually click on the checkbox, `indeterminate` is set to false.\n            if (this.indeterminate && this._clickAction !== 'check') {\n\n                Promise.resolve().then(() => {\n                    this._indeterminate = false;\n                    this.indeterminateChange.emit(this._indeterminate);\n                });\n            }\n\n            this.toggle();\n            this._transitionCheckState(\n                this._checked ? TransitionCheckState.Checked : TransitionCheckState.Unchecked);\n\n            // Emit our custom change event if the native input emitted one.\n            // It is important to only emit it, if the native input triggered one, because\n            // we don't want to trigger a change event, when the `checked` variable changes for example.\n            this._emitChangeEvent();\n        } else if (!this.disabled && this._clickAction === 'noop') {\n            // Reset native input when clicked with noop. The native checkbox becomes checked after\n            // click, reset it to be align with `checked` value of `mc-checkbox`.\n            this._inputElement.nativeElement.checked = this.checked;\n            this._inputElement.nativeElement.indeterminate = this.indeterminate;\n        }\n    }\n\n    /** Focuses the checkbox. */\n    focus(): void {\n        this._focusMonitor.focusVia(this._inputElement.nativeElement, 'keyboard');\n    }\n\n    _onInteractionEvent(event: Event) {\n        // We always have to stop propagation on the change event.\n        // Otherwise the change event, from the input element, will bubble up and\n        // emit its event object to the `change` output.\n        event.stopPropagation();\n    }\n}\n","import {\n    Directive,\n    forwardRef,\n    Provider\n} from '@angular/core';\nimport {\n    CheckboxRequiredValidator,\n    NG_VALIDATORS\n} from '@angular/forms';\n\n\nexport const MC_CHECKBOX_REQUIRED_VALIDATOR: Provider = {\n    provide: NG_VALIDATORS,\n    useExisting: forwardRef(() => McCheckboxRequiredValidator),\n    multi: true\n};\n\n/**\n * Validator for Mosaic checkbox's required attribute in template-driven checkbox.\n * Current CheckboxRequiredValidator only work with `input type=checkbox` and does not\n * work with `mc-checkbox`.\n */\n@Directive({\n    selector: `mc-checkbox[required][formControlName],\n             mc-checkbox[required][formControl], mc-checkbox[required][ngModel]`,\n    providers: [MC_CHECKBOX_REQUIRED_VALIDATOR],\n    host: { '[attr.required]': 'required ? \"\" : null' }\n})\nexport class McCheckboxRequiredValidator extends CheckboxRequiredValidator {\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { McCheckbox } from './checkbox';\nimport { McCheckboxRequiredValidator } from './checkbox-required-validator';\n\n\n@NgModule({\n    imports: [CommonModule],\n    exports: [McCheckbox, McCheckboxRequiredValidator],\n    declarations: [McCheckbox, McCheckboxRequiredValidator]\n})\nexport class McCheckboxModule {\n}\n","import { Component } from '@angular/core';\n\n\n@Component({\n    selector: 'mc-cleaner',\n    template: '<i class=\"mc-icon_light\" mc-icon=\"mc-close-M_16\" color=\"second\"></i>'\n})\nexport class McCleaner {}\n","import { NgControl } from '@angular/forms';\nimport { Observable } from 'rxjs';\n\n\n/** An interface which allows a control to work inside of a `MсFormField`. */\nexport abstract class McFormFieldControl<T> {\n    /** The value of the control. */\n    value: T | null;\n\n    /**\n     * Stream that emits whenever the state of the control changes such that the parent `MсFormField`\n     * needs to run change detection.\n     */\n    readonly stateChanges: Observable<void>;\n\n    /** The element ID for this control. */\n    readonly id: string;\n\n    /** The placeholder for this control. */\n    readonly placeholder: string;\n\n    /** Gets the NgControl for this control. */\n    readonly ngControl: NgControl | null;\n\n    /** Whether the control is focused. */\n    readonly focused: boolean;\n\n    /** Whether the control is empty. */\n    readonly empty: boolean;\n\n    /** Whether the control is required. */\n    readonly required: boolean;\n\n    /** Whether the control is disabled. */\n    readonly disabled: boolean;\n\n    /** Whether the control is in an error state. */\n    readonly errorState: boolean;\n\n    /**\n     * An optional name for the control type that can be used to distinguish `mc-form-field` elements\n     * based on their control type. The form field will add a class,\n     * `mc-form-field-type-{{controlType}}` to its root element.\n     */\n    readonly controlType?: string;\n\n    /** Handles a click on the control's container. */\n    abstract onContainerClick(event: MouseEvent): void;\n}\n","import { Observable } from 'rxjs';\n\n\n/** An interface which allows a control to work inside of a `MсFormField`. */\nexport abstract class McFormFieldNumberControl<T> {\n    /** The value of the control. */\n    value: T | null;\n\n    /**\n     * Stream that emits whenever the state of the control changes such that the parent `MсFormField`\n     * needs to run change detection.\n     */\n    readonly stateChanges: Observable<void>;\n\n    /** the number step */\n    step: number;\n\n    /** the number big step */\n    bigStep: number;\n\n    /** Whether the control is focused. */\n    readonly focused: boolean;\n\n    /** Handles step up and down */\n    abstract stepUp(step: number): void;\n\n    abstract stepDown(step: number): void;\n}\n","import { Directive, Input } from '@angular/core';\n\n\nlet nextUniqueId = 0;\n\n@Directive({\n    selector: 'mc-hint',\n    host: {\n        class: 'mc-hint',\n        '[attr.id]': 'id'\n    }\n})\nexport class McHint {\n    @Input() id: string = `mc-hint-${nextUniqueId++}`;\n}\n","import { Directive } from '@angular/core';\n\n\n@Directive({\n    selector: '[mcPrefix]'\n})\nexport class McPrefix {\n}\n","import { Component, EventEmitter, Output } from '@angular/core';\n\n\n@Component({\n    selector: 'mc-stepper',\n    template: `\n        <i class=\"mc mc-icon mc-icon_light mc-second mc-stepper-step-up mc-angle-down-L_16\"\n           (mousedown)=\"onStepUp($event)\">\n        </i>\n        <i class=\"mc mc-icon mc-icon_light mc-second mc-stepper-step-down mc-angle-down-L_16\"\n           (mousedown)=\"onStepDown($event)\">\n        </i>\n    `\n})\nexport class McStepper {\n    @Output()\n    readonly stepUp: EventEmitter<void> = new EventEmitter<void>();\n    @Output()\n    readonly stepDown: EventEmitter<void> = new EventEmitter<void>();\n\n    onStepUp($event: MouseEvent) {\n        this.stepUp.emit();\n        $event.preventDefault();\n    }\n\n    onStepDown($event: MouseEvent) {\n        this.stepDown.emit();\n        $event.preventDefault();\n    }\n}\n","import { Directive } from '@angular/core';\n\n\n@Directive({\n    selector: '[mcSuffix]'\n})\nexport class McSuffix {\n}\n","import {\n    AfterContentChecked,\n    AfterContentInit,\n    AfterViewInit,\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    ContentChild,\n    ContentChildren, Directive,\n    ElementRef,\n    QueryList,\n    ViewEncapsulation\n} from '@angular/core';\nimport { NgControl } from '@angular/forms';\nimport { ESCAPE } from '@ptsecurity/cdk/keycodes';\nimport { CanColor, CanColorCtor, mixinColor } from '@ptsecurity/mosaic/core';\nimport { EMPTY, merge } from 'rxjs';\nimport { startWith } from 'rxjs/operators';\n\n\nimport { McCleaner } from './cleaner';\nimport { McFormFieldControl } from './form-field-control';\nimport { getMcFormFieldMissingControlError } from './form-field-errors';\nimport { McFormFieldNumberControl } from './form-field-number-control';\nimport { McHint } from './hint';\nimport { McPrefix } from './prefix';\nimport { McStepper } from './stepper';\nimport { McSuffix } from './suffix';\n\n\nlet nextUniqueId = 0;\n\nexport class McFormFieldBase {\n    constructor(public _elementRef: ElementRef) {}\n}\n\nexport const _McFormFieldMixinBase: CanColorCtor & typeof McFormFieldBase = mixinColor(McFormFieldBase);\n\n@Component({\n    selector: 'mc-form-field',\n    exportAs: 'mcFormField',\n    templateUrl: 'form-field.html',\n    // McInput is a directive and can't have styles, so we need to include its styles here.\n    // The McInput styles are fairly minimal so it shouldn't be a big deal for people who\n    // aren't using McInput.\n    styleUrls: [\n        'form-field.css',\n        '../input/input.css',\n        '../textarea/textarea.css'\n    ],\n    host: {\n        class: 'mc-form-field',\n        '[class.mc-form-field_invalid]': '_control.errorState',\n        '[class.mc-disabled]': '_control.disabled',\n        '[class.mc-form-field_has-prefix]': 'hasPrefix',\n        '[class.mc-form-field_has-suffix]': 'hasSuffix',\n        '[class.mc-form-field_has-cleaner]': 'canShowCleaner',\n        '[class.mc-form-field_has-stepper]': 'canShowStepper',\n        '[class.mc-focused]': '_control.focused',\n        '[class.ng-untouched]': '_shouldForward(\"untouched\")',\n        '[class.ng-touched]': '_shouldForward(\"touched\")',\n        '[class.ng-pristine]': '_shouldForward(\"pristine\")',\n        '[class.ng-dirty]': '_shouldForward(\"dirty\")',\n        '[class.ng-valid]': '_shouldForward(\"valid\")',\n        '[class.ng-invalid]': '_shouldForward(\"invalid\")',\n        '[class.ng-pending]': '_shouldForward(\"pending\")',\n        '(keydown)': 'onKeyDown($event)',\n        '(mouseenter)': 'onHoverChanged(true)',\n        '(mouseleave)': 'onHoverChanged(false)'\n    },\n    inputs: ['color'],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\n\nexport class McFormField extends _McFormFieldMixinBase implements\n    AfterContentInit, AfterContentChecked, AfterViewInit, CanColor {\n\n    @ContentChild(McFormFieldControl) _control: McFormFieldControl<any>;\n    @ContentChild(McFormFieldNumberControl) _numberControl: McFormFieldNumberControl<any>;\n    @ContentChild(McStepper) _stepper: McStepper;\n\n    @ContentChildren(McHint) _hint: QueryList<McHint>;\n    @ContentChildren(McSuffix) _suffix: QueryList<McSuffix>;\n    @ContentChildren(McPrefix) _prefix: QueryList<McPrefix>;\n    @ContentChildren(McCleaner) _cleaner: QueryList<McCleaner>;\n\n    // Unique id for the internal form field label.\n    _labelId = `mc-form-field-label-${nextUniqueId++}`;\n\n    hovered: boolean = false;\n\n    constructor(public _elementRef: ElementRef, private _changeDetectorRef: ChangeDetectorRef) {\n        super(_elementRef);\n    }\n\n    ngAfterContentInit() {\n        this._validateControlChild();\n\n        if (this._control.controlType) {\n            this._elementRef.nativeElement.classList\n                .add(`mc-form-field-type-${this._control.controlType}`);\n\n            if (this._numberControl && this.hasStepper) {\n                this._stepper.stepUp.subscribe(this.onStepUp.bind(this));\n                this._stepper.stepDown.subscribe(this.onStepDown.bind(this));\n            }\n        }\n\n        // Subscribe to changes in the child control state in order to update the form field UI.\n        this._control.stateChanges.pipe(startWith())\n            .subscribe(() => {\n                this._changeDetectorRef.markForCheck();\n            });\n\n        if (this._numberControl) {\n            this._numberControl.stateChanges.pipe(startWith())\n                .subscribe(() => {\n                    this._changeDetectorRef.markForCheck();\n                });\n        }\n\n        // Run change detection if the value changes.\n        const valueChanges = this._control.ngControl && this._control.ngControl.valueChanges || EMPTY;\n\n        merge(valueChanges)\n            .subscribe(() => this._changeDetectorRef.markForCheck());\n    }\n\n    ngAfterContentChecked() {\n        this._validateControlChild();\n    }\n\n    ngAfterViewInit() {\n        // Avoid animations on load.\n        this._changeDetectorRef.detectChanges();\n    }\n\n    clearValue($event) {\n        $event.stopPropagation();\n\n        if (this._control && this._control.ngControl) {\n            this._control.ngControl.reset();\n        }\n    }\n\n    onContainerClick($event) {\n        if (this._control.onContainerClick) {\n            this._control.onContainerClick($event);\n        }\n    }\n\n    onKeyDown(event: KeyboardEvent): void {\n        // tslint:disable-next-line:deprecation\n        if (event.keyCode === ESCAPE && this._control.focused && this.hasCleaner) {\n            if (this._control && this._control.ngControl) {\n                this._control.ngControl.reset();\n            }\n\n            event.preventDefault();\n        }\n    }\n\n    onHoverChanged(isHovered: boolean) {\n        if (isHovered !== this.hovered) {\n            this.hovered  = isHovered;\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n\n    onStepUp() {\n        if (this._numberControl) {\n            this._numberControl.stepUp(this._numberControl.step);\n        }\n    }\n\n    onStepDown() {\n        if (this._numberControl) {\n            this._numberControl.stepDown(this._numberControl.step);\n        }\n    }\n\n    /** Determines whether a class from the NgControl should be forwarded to the host element. */\n    _shouldForward(prop: keyof NgControl): boolean {\n        const ngControl = this._control ? this._control.ngControl : null;\n\n        return ngControl && ngControl[prop];\n    }\n\n    /** Throws an error if the form field's control is missing. */\n    protected _validateControlChild() {\n        if (!this._control) {\n            throw getMcFormFieldMissingControlError();\n        }\n    }\n\n    get hasHint(): boolean {\n        return this._hint && this._hint.length > 0;\n    }\n\n    get hasSuffix(): boolean {\n        return this._suffix && this._suffix.length > 0;\n    }\n\n    get hasPrefix(): boolean {\n        return this._prefix && this._prefix.length > 0;\n    }\n\n    get hasCleaner(): boolean {\n        return this._cleaner && this._cleaner.length > 0;\n    }\n\n    get hasStepper(): boolean {\n        return !!this._stepper;\n    }\n\n    get canShowCleaner(): boolean {\n        return this.hasCleaner &&\n            this._control &&\n            this._control.ngControl\n                ? this._control.ngControl.value && !this._control.disabled\n                : false;\n    }\n\n\n    get disabled(): boolean {\n        return this._control && this._control.disabled;\n    }\n\n    get canShowStepper(): boolean {\n        return this._numberControl &&\n            !this.disabled &&\n            (\n                this._numberControl.focused ||\n                this.hovered\n            );\n    }\n}\n\n@Directive({\n    selector: 'mc-form-field[mcFormFieldWithoutBorders]',\n    exportAs: 'mcFormFieldWithoutBorders',\n    host: { class: 'mc-form-field_without-borders' }\n})\nexport class McFormFieldWithoutBorders {}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { McIconModule } from '@ptsecurity/mosaic/icon';\n\nimport { McCleaner } from './cleaner';\nimport { McFormField, McFormFieldWithoutBorders } from './form-field';\nimport { McHint } from './hint';\nimport { McPrefix } from './prefix';\nimport { McStepper } from './stepper';\nimport { McSuffix } from './suffix';\n\n\n@NgModule({\n    declarations: [\n        McFormField,\n        McFormFieldWithoutBorders,\n        McHint,\n        McPrefix,\n        McSuffix,\n        McCleaner,\n        McStepper\n    ],\n    imports: [CommonModule, McIconModule],\n    exports: [\n        McFormField,\n        McFormFieldWithoutBorders,\n        McHint,\n        McPrefix,\n        McSuffix,\n        McCleaner,\n        McStepper\n    ]\n})\nexport class McFormFieldModule {\n}\n","import { InjectionToken } from '@angular/core';\n\n\nexport const MC_INPUT_VALUE_ACCESSOR =\n    new InjectionToken<{ value: any }>('MC_INPUT_VALUE_ACCESSOR');\n","function sanitizeNumber(value: number): number | null {\n    return !isFinite(value) || isNaN(value)\n        ? null\n        : value;\n}\n\nfunction getPrecision(value: number): number {\n    const arr = value.toString().split('.');\n\n    return arr.length === 1\n        ? 1\n        // tslint:disable-next-line:no-magic-numbers\n        :  Math.pow(10, arr[1].length);\n}\n\nfunction add(value1: number, value2: number) {\n    const precision = Math.max(getPrecision(value1), getPrecision(value2));\n\n    const res = (value1 * precision + value2 * precision) / precision;\n\n    return sanitizeNumber(res);\n}\n\nexport const stepUp = (value: number | null,\n                       max: number,\n                       min: number,\n                       step: number\n): number | null => {\n    let res;\n\n    if (value === null) {\n        res = add(min, step);\n\n        return res === null ? null : Math.min(res, max);\n    }\n\n    res = add(value, step);\n\n    return res === null ? null : Math.max(Math.min(res, max), min);\n};\n\nexport const stepDown = (value: number | null,\n                         max: number,\n                         min: number,\n                         step: number\n): number | null => {\n    let res;\n\n    if (value === null) {\n        res = add(max, -step);\n\n        return res === null ? null : Math.max(res, min);\n    }\n\n    res = add(value, -step);\n\n    return res === null ? null : Math.min(Math.max(res, min), max);\n};\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","\nexport function isBoolean(val: any): val is boolean { return typeof val === 'boolean'; }\n\nexport function toBoolean(value: any): boolean {\n    return value != null && `${value}` !== 'false';\n}\n","import { NgModule, InjectionToken, Optional, Inject, isDevMode } from '@angular/core';\nimport { BidiModule } from '@ptsecurity/cdk/bidi';\n\n\n// Injection token that configures whether the Mosaic sanity checks are enabled.\nexport const MC_SANITY_CHECKS = new InjectionToken<boolean>('mc-sanity-checks', {\n    providedIn: 'root',\n    factory: MC_SANITY_CHECKS_FACTORY\n});\n\nexport function MC_SANITY_CHECKS_FACTORY(): boolean {\n    return true;\n}\n\n/**\n * Module that captures anything that should be loaded and/or run for *all* Mosaic\n * components. This includes Bidi, etc.\n *\n * This module should be imported to each top-level component module (e.g., McTabsModule).\n */\n@NgModule({\n    imports: [ BidiModule ],\n    exports: [ BidiModule ]\n})\nexport class McCommonModule {\n    // Whether we've done the global sanity checks (e.g. a theme is loaded, there is a doctype).\n    private _hasDoneGlobalChecks = false;\n\n    // Reference to the global `document` object.\n    private _document = typeof document === 'object' && document ? document : null;\n\n    // Reference to the global 'window' object.\n    private _window = typeof window === 'object' && window ? window : null;\n\n    constructor(@Optional() @Inject(MC_SANITY_CHECKS) private _sanityChecksEnabled: boolean) {\n        if (this._areChecksEnabled() && !this._hasDoneGlobalChecks) {\n            this._checkDoctypeIsDefined();\n            this._checkThemeIsPresent();\n            this._hasDoneGlobalChecks = true;\n        }\n    }\n\n    // Whether any sanity checks are enabled\n    private _areChecksEnabled(): boolean {\n        return this._sanityChecksEnabled && isDevMode() && !this._isTestEnv();\n    }\n\n    // Whether the code is running in tests.\n    private _isTestEnv() {\n        // tslint:disable-next-line\n        return this._window && (this._window['__karma__'] || this._window['jasmine']);\n    }\n\n    private _checkDoctypeIsDefined(): void {\n        if (this._document && !this._document.doctype) {\n            console.warn(\n                'Current document does not have a doctype. This may cause ' +\n                'some Mosaic components not to behave as expected.'\n            );\n        }\n    }\n\n    private _checkThemeIsPresent(): void {\n        if (this._document && typeof getComputedStyle === 'function') {\n            const testElement = this._document.createElement('div');\n\n            testElement.classList.add('mc-theme-loaded-marker');\n            this._document.body.appendChild(testElement);\n\n            const computedStyle = getComputedStyle(testElement);\n\n            // In some situations, the computed style of the test element can be null. For example in\n            // Firefox, the computed style is null if an application is running inside of a hidden iframe.\n            // See: https://bugzilla.mozilla.org/show_bug.cgi?id=548397\n            if (computedStyle && computedStyle.display !== 'none') {\n                console.warn(\n                    'Could not find Mosaic core theme. Most Mosaic ' +\n                    'components may not work as expected. For more info refer ' +\n                    'to the theming guide: link there'\n                );\n            }\n\n            this._document.body.removeChild(testElement);\n        }\n    }\n}\n","import { coerceBooleanProperty } from '@ptsecurity/cdk/coercion';\n\nimport { Constructor } from './constructor';\n\n\nexport interface CanDisable {\n    disabled: boolean;\n}\n\n/** @docs-private */\nexport type CanDisableCtor = Constructor<CanDisable>;\n\n// Mixin to augment a directive with a `disabled` property.\nexport function mixinDisabled<T extends Constructor<{}>>(base: T): CanDisableCtor & T {\n    return class extends base {\n        private _disabled: boolean = false;\n\n        get disabled() {\n            return this._disabled;\n        }\n\n        set disabled(value: any) {\n            this._disabled = coerceBooleanProperty(value);\n        }\n\n        constructor(...args: any[]) {\n            // tslint:disable-next-line\n            super(...args);\n        }\n    };\n}\n","import { ElementRef } from '@angular/core';\n\nimport { Constructor } from './constructor';\n\n\nexport interface CanColor {\n    color: ThemePalette;\n}\n\n/** @docs-private */\nexport type CanColorCtor = Constructor<CanColor>;\n\nexport interface HasElementRef {\n    _elementRef: ElementRef;\n}\n\nexport enum ThemePalette {\n    Primary = 'primary',\n    Second = 'second',\n    Error = 'error',\n    Default = 'second',\n    Empty = ''\n}\n\n/** Mixin to augment a directive with a `color` property. */\nexport function mixinColor<T extends Constructor<HasElementRef>>(\n    base: T,\n    defaultColor: ThemePalette = ThemePalette.Default\n): CanColorCtor & T {\n    return class extends base {\n\n        private _color: ThemePalette;\n\n        get color(): ThemePalette {\n            return this._color;\n        }\n\n        set color(value: ThemePalette) {\n            const colorPalette = value || defaultColor;\n\n            if (colorPalette !== this._color) {\n                if (this._color) {\n                    this._elementRef.nativeElement.classList.remove(`mc-${this._color}`);\n                }\n\n                if (colorPalette) {\n                    this._elementRef.nativeElement.classList.add(`mc-${colorPalette}`);\n                }\n\n                this._color = colorPalette;\n            }\n        }\n\n        constructor(...args: any[]) {\n            super(...args);\n\n            this.color = defaultColor;\n        }\n    };\n}\n\n","import { Constructor } from './constructor';\nimport { CanDisable } from './disabled';\n\n\nexport interface HasTabIndex {\n    tabIndex: number;\n}\n\nexport type HasTabIndexCtor = Constructor<HasTabIndex>;\n\n// Mixin to augment a directive with a `tabIndex` property.\nexport function mixinTabIndex<T extends Constructor<CanDisable>>(base: T, defaultTabIndex = 0)\n    : HasTabIndexCtor & T {\n    return class extends base {\n        private _tabIndex: number = defaultTabIndex;\n\n        get tabIndex(): number {\n            return this.disabled ? -1 : this._tabIndex;\n        }\n\n        set tabIndex(value: number) {\n            this._tabIndex = value != null ? value : defaultTabIndex;\n        }\n\n        constructor(...args: any[]) {\n            super(...args);\n        }\n    };\n}\n","import { FormControl, FormGroupDirective, NgControl, NgForm } from '@angular/forms';\nimport { Subject } from 'rxjs';\n\nimport { ErrorStateMatcher } from '../error/error-options';\n\nimport { Constructor } from './constructor';\n\n\n/** @docs-private */\nexport interface CanUpdateErrorState {\n\n    readonly stateChanges: Subject<void>;\n\n    errorState: boolean;\n    errorStateMatcher: ErrorStateMatcher;\n\n    updateErrorState();\n}\n\n/** @docs-private */\nexport type CanUpdateErrorStateCtor = Constructor<CanUpdateErrorState>;\n\n/** @docs-private */\nexport interface HasErrorState {\n    _parentFormGroup: FormGroupDirective;\n    _parentForm: NgForm;\n    _defaultErrorStateMatcher: ErrorStateMatcher;\n    ngControl: NgControl;\n}\n\n/**\n * Mixin to augment a directive with updateErrorState method.\n * For component with `errorState` and need to update `errorState`.\n */\nexport function mixinErrorState<T extends Constructor<HasErrorState>>(base: T): CanUpdateErrorStateCtor & T {\n    return class extends base {\n        /** Whether the component is in an error state. */\n        errorState: boolean = false;\n\n        /**\n         * Stream that emits whenever the state of the input changes such that the wrapping\n         * `MatFormField` needs to run change detection.\n         */\n        readonly stateChanges = new Subject<void>();\n\n        errorStateMatcher: ErrorStateMatcher;\n\n        constructor(...args: any[]) {\n            super(...args);\n        }\n\n        updateErrorState() {\n            const oldState = this.errorState;\n            const parent = this._parentFormGroup || this._parentForm;\n            const matcher = this.errorStateMatcher || this._defaultErrorStateMatcher;\n            const control = this.ngControl ? this.ngControl.control as FormControl : null;\n            const newState = matcher.isErrorState(control, parent);\n\n            if (newState !== oldState) {\n                this.errorState = newState;\n                this.stateChanges.next();\n            }\n        }\n    };\n}\n","import {\n    AfterViewChecked,\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    ElementRef,\n    EventEmitter,\n    Inject,\n    InjectionToken,\n    Input,\n    OnDestroy,\n    Optional,\n    Output,\n    QueryList,\n    ViewEncapsulation\n} from '@angular/core';\nimport { coerceBooleanProperty } from '@ptsecurity/cdk/coercion';\nimport { ENTER, SPACE } from '@ptsecurity/cdk/keycodes';\nimport { Subject } from 'rxjs';\n\nimport { McOptgroup } from './optgroup';\n\n\n/**\n * Option IDs need to be unique across components, so this counter exists outside of\n * the component definition.\n */\nlet _uniqueIdCounter = 0;\n\n/** Event object emitted by McOption when selected or deselected. */\nexport class McOptionSelectionChange {\n    constructor(\n        /** Reference to the option that emitted the event. */\n        public source: McOption,\n        /** Whether the change in the option's value was a result of a user action. */\n        public isUserInput = false) {\n    }\n}\n\n/**\n * Describes a parent component that manages a list of options.\n * Contains properties that the options can inherit.\n * @docs-private\n */\nexport interface IMcOptionParentComponent {\n    disableRipple?: boolean;\n    multiple?: boolean;\n}\n\n/**\n * Injection token used to provide the parent component to options.\n */\nexport const MC_OPTION_PARENT_COMPONENT =\n    new InjectionToken<IMcOptionParentComponent>('MC_OPTION_PARENT_COMPONENT');\n\n/**\n * Single option inside of a `<mat-select>` element.\n */\n@Component({\n    selector: 'mc-option',\n    exportAs: 'mcOption',\n    host: {\n        '[attr.tabindex]': '_getTabIndex()',\n        '[class.mc-selected]': 'selected',\n        '[class.mc-option-multiple]': 'multiple',\n        '[class.mc-active]': 'active',\n        '[id]': 'id',\n        '[class.mc-disabled]': 'disabled',\n        '(click)': '_selectViaInteraction()',\n        '(keydown)': '_handleKeydown($event)',\n        class: 'mc-option'\n    },\n    styleUrls: ['option.css'],\n    templateUrl: 'option.html',\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class McOption implements AfterViewChecked, OnDestroy {\n    /** Whether the wrapping component is in multiple selection mode. */\n    get multiple() {\n        return this._parent && this._parent.multiple;\n    }\n\n    /** The unique ID of the option. */\n    get id(): string {\n        return this._id;\n    }\n\n    /** Whether or not the option is currently selected. */\n    get selected(): boolean {\n        return this._selected;\n    }\n\n    /** The form value of the option. */\n    @Input() value: any;\n\n    /** Whether the option is disabled. */\n    @Input()\n    get disabled() {\n        return (this.group && this.group.disabled) || this._disabled;\n    }\n\n    set disabled(value: any) {\n        this._disabled = coerceBooleanProperty(value);\n    }\n\n    /** Whether ripples for the option are disabled. */\n    get disableRipple() {\n        return this._parent && this._parent.disableRipple;\n    }\n\n    /** Event emitted when the option is selected or deselected. */\n        // tslint:disable-next-line:no-output-on-prefix\n    @Output() readonly onSelectionChange = new EventEmitter<McOptionSelectionChange>();\n\n    /** Emits when the state of the option changes and any parents have to be notified. */\n    readonly _stateChanges = new Subject<void>();\n\n    private _selected = false;\n    private _active = false;\n    private _disabled = false;\n    private readonly _id = `mc-option-${_uniqueIdCounter++}`;\n    private _mostRecentViewValue = '';\n\n    constructor(\n        private readonly _element: ElementRef,\n        private readonly _changeDetectorRef: ChangeDetectorRef,\n        @Optional() @Inject(MC_OPTION_PARENT_COMPONENT) private readonly _parent: IMcOptionParentComponent,\n        @Optional() readonly group: McOptgroup) {\n    }\n\n    /**\n     * Whether or not the option is currently active and ready to be selected.\n     * An active option displays styles as if it is focused, but the\n     * focus is actually retained somewhere else. This comes in handy\n     * for components like autocomplete where focus must remain on the input.\n     */\n    get active(): boolean {\n        return this._active;\n    }\n\n    /**\n     * The displayed value of the option. It is necessary to show the selected option in the\n     * select's trigger.\n     */\n    get viewValue(): string {\n        // TODO(kara): Add input property alternative for node envs.\n        return (this._getHostElement().textContent || '').trim();\n    }\n\n    /** Selects the option. */\n    select(): void {\n        if (!this._selected) {\n            this._selected = true;\n            this._changeDetectorRef.markForCheck();\n            this._emitSelectionChangeEvent();\n        }\n    }\n\n    /** Deselects the option. */\n    deselect(): void {\n        if (this._selected) {\n            this._selected = false;\n            this._changeDetectorRef.markForCheck();\n            this._emitSelectionChangeEvent();\n        }\n    }\n\n    /** Sets focus onto this option. */\n    focus(): void {\n        const element = this._getHostElement();\n\n        if (typeof element.focus === 'function') {\n            element.focus();\n        }\n    }\n\n    /**\n     * This method sets display styles on the option to make it appear\n     * active. This is used by the ActiveDescendantKeyManager so key\n     * events will display the proper options as active on arrow key events.\n     */\n    setActiveStyles(): void {\n        if (!this._active) {\n            this._active = true;\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n\n    /**\n     * This method removes display styles on the option that made it appear\n     * active. This is used by the ActiveDescendantKeyManager so key\n     * events will display the proper options as active on arrow key events.\n     */\n    setInactiveStyles(): void {\n        if (this._active) {\n            this._active = false;\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n\n    /** Gets the label to be used when determining whether the option should be focused. */\n    getLabel(): string {\n        return this.viewValue;\n    }\n\n    /** Ensures the option is selected when activated from the keyboard. */\n    _handleKeydown(event: KeyboardEvent): void {\n        // tslint:disable-next-line\n        if (event.keyCode === ENTER || event.keyCode === SPACE) {\n            this._selectViaInteraction();\n\n            // Prevent the page from scrolling down and form submits.\n            event.preventDefault();\n        }\n    }\n\n    /**\n     * `Selects the option while indicating the selection came from the user. Used to\n     * determine if the select's view -> model callback should be invoked.`\n     */\n    _selectViaInteraction(): void {\n        if (!this.disabled) {\n            this._selected = this.multiple ? !this._selected : true;\n            this._changeDetectorRef.markForCheck();\n            this._emitSelectionChangeEvent(true);\n        }\n    }\n\n    /** Returns the correct tabindex for the option depending on disabled state. */\n    _getTabIndex(): string {\n        return this.disabled ? '-1' : '0';\n    }\n\n    /** Gets the host DOM element. */\n    _getHostElement(): HTMLElement {\n        return this._element.nativeElement;\n    }\n\n    ngAfterViewChecked() {\n        // Since parent components could be using the option's label to display the selected values\n        // (e.g. `mat-select`) and they don't have a way of knowing if the option's label has changed\n        // we have to check for changes in the DOM ourselves and dispatch an event. These checks are\n        // relatively cheap, however we still limit them only to selected options in order to avoid\n        // hitting the DOM too often.\n        if (this._selected) {\n            const viewValue = this.viewValue;\n\n            if (viewValue !== this._mostRecentViewValue) {\n                this._mostRecentViewValue = viewValue;\n                this._stateChanges.next();\n            }\n        }\n    }\n\n    ngOnDestroy() {\n        this._stateChanges.complete();\n    }\n\n    /** Emits the selection change event. */\n    private _emitSelectionChangeEvent(isUserInput = false): void {\n        this.onSelectionChange.emit(new McOptionSelectionChange(this, isUserInput));\n    }\n}\n\n/**\n * Counts the amount of option group labels that precede the specified option.\n * @param optionIndex Index of the option at which to start counting.\n * @param options Flat list of all of the options.\n * @param optionGroups Flat list of all of the option groups.\n * @docs-private\n */\nexport function _countGroupLabelsBeforeOption(\n    optionIndex: number, options: QueryList<McOption>,\n    optionGroups: QueryList<McOptgroup>\n): number {\n\n    if (optionGroups.length) {\n        const optionsArray = options.toArray();\n        const groups = optionGroups.toArray();\n\n        let groupCounter = 0;\n\n        for (let i = 0; i < optionIndex + 1; i++) {\n            if (optionsArray[i].group && optionsArray[i].group === groups[groupCounter]) {\n                groupCounter++;\n            }\n        }\n\n        return groupCounter;\n    }\n\n    return 0;\n}\n\n/**\n * Determines the position to which to scroll a panel in order for an option to be into view.\n * @param optionIndex Index of the option to be scrolled into the view.\n * @param optionHeight Height of the options.\n * @param currentScrollPosition Current scroll position of the panel.\n * @param panelHeight Height of the panel.\n * @docs-private\n */\nexport function _getOptionScrollPosition(\n    optionIndex: number,\n    optionHeight: number,\n    currentScrollPosition: number,\n    panelHeight: number\n): number {\n    const optionOffset = optionIndex * optionHeight;\n\n    if (optionOffset < currentScrollPosition) { return optionOffset; }\n\n    if (optionOffset + optionHeight > currentScrollPosition + panelHeight) {\n        return Math.max(0, optionOffset - panelHeight + optionHeight);\n    }\n\n    return currentScrollPosition;\n}\n\n","import { ConnectionPositionPair } from '@ptsecurity/cdk/overlay';\n\n\nexport const POSITION_MAP: { [key: string]: ConnectionPositionPair } = {\n    top         : {\n        originX : 'center',\n        originY : 'top',\n        overlayX: 'center',\n        overlayY: 'bottom'\n    },\n    topCenter   : {\n        originX : 'center',\n        originY : 'top',\n        overlayX: 'center',\n        overlayY: 'bottom',\n        offsetX : undefined,\n        offsetY : undefined\n    },\n    topLeft     : {\n        originX : 'start',\n        originY : 'top',\n        overlayX: 'start',\n        overlayY: 'bottom',\n        offsetX : undefined,\n        offsetY : undefined\n    },\n    topRight    : {\n        originX : 'end',\n        originY : 'top',\n        overlayX: 'end',\n        overlayY: 'bottom',\n        offsetX : undefined,\n        offsetY : undefined\n    },\n    right       : {\n        originX : 'end',\n        originY : 'center',\n        overlayX: 'start',\n        overlayY: 'center'\n    },\n    rightTop    : {\n        originX : 'end',\n        originY : 'top',\n        overlayX: 'start',\n        overlayY: 'top',\n        offsetX : undefined,\n        offsetY : undefined\n    },\n    rightBottom : {\n        originX : 'end',\n        originY : 'bottom',\n        overlayX: 'start',\n        overlayY: 'bottom',\n        offsetX : undefined,\n        offsetY : undefined\n    },\n    bottom      : {\n        originX : 'center',\n        originY : 'bottom',\n        overlayX: 'center',\n        overlayY: 'top'\n    },\n    bottomCenter: {\n        originX : 'center',\n        originY : 'bottom',\n        overlayX: 'center',\n        overlayY: 'top'\n    },\n    bottomLeft  : {\n        originX : 'start',\n        originY : 'bottom',\n        overlayX: 'start',\n        overlayY: 'top'\n    },\n    bottomRight : {\n        originX : 'end',\n        originY : 'bottom',\n        overlayX: 'end',\n        overlayY: 'top'\n    },\n    left        : {\n        originX : 'start',\n        originY : 'center',\n        overlayX: 'end',\n        overlayY: 'center'\n    },\n    leftTop     : {\n        originX : 'start',\n        originY : 'top',\n        overlayX: 'end',\n        overlayY: 'top'\n    },\n    leftBottom  : {\n        originX : 'start',\n        originY : 'bottom',\n        overlayX: 'end',\n        overlayY: 'bottom'\n    }\n};\n\nexport const DEFAULT_4_POSITIONS = _objectValues([\n    POSITION_MAP.top, POSITION_MAP.right, POSITION_MAP.bottom, POSITION_MAP.left\n]);\n\nfunction arrayMap<T, S>(array: T[], iteratee: (item: T, index: number, arr: T[]) => S): S[] {\n    let index = -1;\n    const length = array == null ? 0 : array.length;\n    const result = Array(length);\n\n    while (++index < length) {\n        result[ index ] = iteratee(array[ index ], index, array);\n    }\n\n    return result;\n}\nfunction baseValues<T>(object: { [key: string]: T } | T[], props: string[]): T[] {\n    return arrayMap(props,  (key) => {\n        return object[ key ];\n    });\n}\nfunction _objectValues<T>(object: { [key: string]: T } | T[]): T[] {\n    return object == null ? [] : baseValues(object, Object.keys(object));\n}\n","export function getMcFormFieldMissingControlError(): Error {\n  return Error('mc-form-field must contain a McFormFieldControl.');\n}\n","export function getMcInputUnsupportedTypeError(inputType: string): Error {\n    return Error(`Input type \"${inputType}\" isn't supported by mcInput.`);\n}\n","/** @docs-private */\nexport function createMissingDateImplError(provider: string) {\n    return Error(\n        `McDatepicker: No provider found for ${provider}. You must import one of the existing ` +\n        `modules at your application root or provide a custom implementation or use exists ones.`);\n}\n","export function throwMcDropdownMissingError() {\n    throw Error(`mcDropdownTriggerFor: must pass in an mc-dropdown instance.\n    Example:\n      <mc-dropdown #dropdown=\"mcDropdown\"></mc-dropdown>\n      <button [mcDropdownTriggerFor]=\"dropdown\"></button>`);\n}\n\n/**\n * Throws an exception for the case when dropdown's x-position value isn't valid.\n * In other words, it doesn't match 'before' or 'after'.\n * @docs-private\n */\nexport function throwMcDropdownInvalidPositionX() {\n    throw Error(`xPosition value must be either 'before' or after'.\n      Example: <mc-dropdown xPosition=\"before\" #dropdown=\"mcDropdown\"></mc-dropdown>`);\n}\n\n/**\n * Throws an exception for the case when dropdown's y-position value isn't valid.\n * In other words, it doesn't match 'above' or 'below'.\n * @docs-private\n */\nexport function throwMcDropdownInvalidPositionY() {\n    throw Error(`yPosition value must be either 'above' or below'.\n      Example: <mc-dropdown yPosition=\"above\" #dropdown=\"mcDropdown\"></mc-dropdown>`);\n}\n","/**\n * Returns an exception to be thrown when attempting to change a select's `multiple` option\n * after initialization.\n * @docs-private\n */\nexport function getMcSelectDynamicMultipleError(): Error {\n    return Error('Cannot change `multiple` mode of select after initialization.');\n}\n\n/**\n * Returns an exception to be thrown when attempting to assign a non-array value to a select\n * in `multiple` mode. Note that `undefined` and `null` are still valid values to allow for\n * resetting the value.\n * @docs-private\n */\nexport function getMcSelectNonArrayValueError(): Error {\n    return Error('Value must be an array in multiple-selection mode.');\n}\n\n/**\n * Returns an exception to be thrown when assigning a non-function value to the comparator\n * used to determine if a value corresponds to an option. Note that whether the function\n * actually takes two values and returns a boolean is not checked.\n */\nexport function getMcSelectNonFunctionValueError(): Error {\n    return Error('`compareWith` must be a function.');\n}\n","import { NgModule, Directive, ElementRef, QueryList } from '@angular/core';\n\n\n/**\n * Shared directive to count lines inside a text area, such as a list item.\n * Line elements can be extracted with a @ContentChildren(McLine) query, then\n * counted by checking the query list's length.\n */\n@Directive({\n    selector: '[mc-line], [mcLine]',\n    host: { class: 'mc-line' }\n})\nexport class McLine {}\n\n/**\n * Helper that takes a query list of lines and sets the correct class on the host.\n * @docs-private\n */\nexport class McLineSetter {\n    constructor(private _lines: QueryList<McLine>, private _element: ElementRef) {\n        this._setLineClass(this._lines.length);\n\n        this._lines.changes.subscribe(() => {\n            this._setLineClass(this._lines.length);\n        });\n    }\n\n    private _setLineClass(count: number): void {\n        this._resetClasses();\n        if (count === 2 || count === 3) {\n            this._setClass(`mc-${count}-line`, true);\n        } else if (count > 3) {\n            this._setClass(`mc-multi-line`, true);\n        }\n    }\n\n    private _resetClasses(): void {\n        this._setClass('mc-2-line', false);\n        this._setClass('mc-3-line', false);\n        this._setClass('mc-multi-line', false);\n    }\n\n    private _setClass(className: string, isAdd: boolean): void {\n        if (isAdd) {\n            this._element.nativeElement.classList.add(className);\n        } else {\n            this._element.nativeElement.classList.remove(className);\n        }\n    }\n}\n\n@NgModule({\n    imports: [],\n    exports: [McLine],\n    declarations: [McLine]\n})\nexport class McLineModule {}\n","import { Injectable } from '@angular/core';\nimport { FormGroupDirective, NgForm, FormControl } from '@angular/forms';\n\n\n/** Error state matcher that matches when a control is invalid and dirty. */\n@Injectable()\nexport class ShowOnDirtyErrorStateMatcher implements ErrorStateMatcher {\n    isErrorState(control: FormControl | null, form: FormGroupDirective | NgForm | null): boolean {\n        return !!(control && control.invalid && (control.dirty || (form && form.submitted)));\n    }\n}\n\n/** Provider that defines how form controls behave with regards to displaying error messages. */\n@Injectable({ providedIn: 'root' })\nexport class ErrorStateMatcher {\n    isErrorState(control: FormControl | null, form: FormGroupDirective | NgForm | null): boolean {\n        return !!(control && control.invalid && (control.touched || (form && form.submitted)));\n    }\n}\n","import { Component, ViewEncapsulation, Input, ChangeDetectionStrategy } from '@angular/core';\n\n\nexport type McPseudoCheckboxState = 'unchecked' | 'checked' | 'indeterminate';\n\n/**\n * Component that shows a simplified checkbox without including any kind of \"real\" checkbox.\n * Meant to be used when the checkbox is purely decorative and a large number of them will be\n * included, such as for the options in a multi-select. Uses no SVGs or complex animations.\n * Note that theming is meant to be handled by the parent element, e.g.\n * `mc-primary .mc-pseudo-checkbox`.\n *\n * Note that this component will be completely invisible to screen-reader users. This is *not*\n * interchangeable with `<mc-checkbox>` and should *not* be used if the user would directly\n * interact with the checkbox. The pseudo-checkbox should only be used as an implementation detail\n * of more complex components that appropriately handle selected / checked state.\n * @docs-private\n */\n@Component({\n    encapsulation: ViewEncapsulation.None,\n    preserveWhitespaces: false,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    selector: 'mc-pseudo-checkbox',\n    styleUrls: ['pseudo-checkbox.css'],\n    templateUrl: 'pseudo-checkbox.partial.html',\n    host: {\n        class: 'mc-pseudo-checkbox',\n        '[class.mc-indeterminate]': 'state === \"indeterminate\"',\n        '[class.mc-checked]': 'state === \"checked\"',\n        '[class.mc-disabled]': 'disabled'\n    }\n})\nexport class McPseudoCheckbox {\n    @Input() state: McPseudoCheckboxState = 'unchecked';\n\n    @Input() disabled: boolean = false;\n}\n","import { NgModule } from '@angular/core';\n\nimport { McPseudoCheckbox } from './pseudo-checkbox/pseudo-checkbox';\n\n\n@NgModule({\n    exports: [McPseudoCheckbox],\n    declarations: [McPseudoCheckbox]\n})\nexport class McPseudoCheckboxModule {}\n\n\nexport * from './pseudo-checkbox/pseudo-checkbox';\n","import { DOCUMENT } from '@angular/common';\nimport { Inject, Injectable } from '@angular/core';\n\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class McMeasureScrollbarService {\n\n    get scrollBarWidth(): number {\n        if (this._scrollbarWidth) {\n            return this._scrollbarWidth;\n        }\n        this.initScrollBarWidth();\n\n        return this._scrollbarWidth;\n    }\n\n    private _scrollbarWidth: number;\n    private scrollbarMeasure = {\n        position: 'absolute',\n        top: '-9999px',\n        width: '50px',\n        height: '50px',\n        overflow: 'scroll'\n    };\n\n    constructor(\n        @Inject(DOCUMENT) private document: any\n    ) {\n        this.initScrollBarWidth();\n    }\n\n    initScrollBarWidth() {\n        const scrollDiv = this.document.createElement('div');\n\n        // tslint:disable-next-line\n        for (const scrollProp in this.scrollbarMeasure) {\n            if (this.scrollbarMeasure.hasOwnProperty(scrollProp)) {\n                scrollDiv.style[scrollProp] = this.scrollbarMeasure[scrollProp];\n            }\n        }\n\n        this.document.body.appendChild(scrollDiv);\n\n        const width = scrollDiv.offsetWidth - scrollDiv.clientWidth;\n\n        this.document.body.removeChild(scrollDiv);\n        this._scrollbarWidth = width;\n    }\n}\n","import { Component, ViewEncapsulation, Input, ChangeDetectionStrategy } from '@angular/core';\n\nimport { mixinDisabled, CanDisable, CanDisableCtor } from '../common-behaviors/index';\n\n\n// Boilerplate for applying mixins to McOptgroup.\n/** @docs-private */\nexport class McOptgroupBase {}\n\nexport const _McOptgroupMixinBase: CanDisableCtor & typeof McOptgroupBase = mixinDisabled(McOptgroupBase);\n\n// Counter for unique group ids.\nlet _uniqueOptgroupIdCounter = 0;\n\n/**\n * Component that is used to group instances of `mc-option`.\n */\n@Component({\n    selector: 'mc-optgroup',\n    exportAs: 'mcOptgroup',\n    templateUrl: 'optgroup.html',\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    inputs: ['disabled'],\n    styleUrls: ['optgroup.css'],\n    host: {\n        class: 'mc-optgroup',\n        role: 'group',\n        '[class.mc-optgroup-disabled]': 'disabled',\n        '[attr.aria-disabled]': 'disabled.toString()',\n        '[attr.aria-labelledby]': '_labelId'\n    }\n})\nexport class McOptgroup extends _McOptgroupMixinBase implements CanDisable {\n    /** Label for the option group. */\n    @Input() label: string;\n\n    /** Unique id for the underlying label. */\n    _labelId: string = `mc-optgroup-label-${_uniqueOptgroupIdCounter++}`;\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { McPseudoCheckboxModule } from '../selection/index';\n\nimport { McOptgroup } from './optgroup';\nimport { McOption } from './option';\n\n\n@NgModule({\n    imports: [CommonModule, McPseudoCheckboxModule],\n    exports: [McOption, McOptgroup],\n    declarations: [McOption, McOptgroup]\n})\nexport class McOptionModule {}\n\n\nexport * from './option';\nexport * from './optgroup';\n","import { InjectionToken } from '@angular/core';\n\n\n/** InjectionToken that can be used to specify the global label options. */\nexport const MC_LABEL_GLOBAL_OPTIONS =\n    new InjectionToken<LabelOptions>('mc-label-global-options');\n\n/** Type for the available floatLabel values. */\nexport type FloatLabelType = 'always' | 'never' | 'auto';\n\n/** Configurable options for floating labels. */\nexport interface LabelOptions {\n    /**\n     * Whether the label should float `always`, `never`, or `auto` (only when necessary).\n     * Default behavior is assumed to be `auto`.\n     */\n    float?: FloatLabelType;\n}\n","import {\n    animate,\n    state,\n    style,\n    transition,\n    trigger,\n    AnimationTriggerMetadata\n} from '@angular/animations';\n\n\nexport const fadeAnimation: AnimationTriggerMetadata =  trigger('fadeAnimation', [\n    state('void', style({ opacity: 0 })),\n    state('true', style({ opacity: 1 })),\n    state('false', style({ opacity: 0 })),\n    transition('* => true', animate('150ms cubic-bezier(0.0, 0.0, 0.2, 1)')),\n    transition('* => void', animate('150ms cubic-bezier(0.4, 0.0, 1, 1)'))\n]);\n","export enum AnimationCurves {\n    StandardCurve = 'cubic-bezier(0.4,0.0,0.2,1)',\n    DecelerationCurve = 'cubic-bezier(0.0,0.0,0.2,1)',\n    AccelerationCurve = 'cubic-bezier(0.4,0.0,1,1)',\n    SharpCurve = 'cubic-bezier(0.4,0.0,0.6,1)'\n}\n","import {\n    Attribute,\n    ChangeDetectionStrategy,\n    Component,\n    Directive,\n    ElementRef,\n    ViewEncapsulation\n} from '@angular/core';\n\nimport { mixinColor, CanColor, CanColorCtor, ThemePalette } from '@ptsecurity/mosaic/core';\n\n\n@Directive({\n    selector: '[mc-icon]',\n    host: { class: 'mc mc-icon' }\n})\nexport class McIconCSSStyler {}\n\n\nexport class McIconBase {\n    constructor(public _elementRef: ElementRef) {}\n}\n\nexport const _McIconMixinBase: CanColorCtor & typeof McIconBase = mixinColor(McIconBase, ThemePalette.Empty);\n\n\n@Component({\n    selector: `[mc-icon]`,\n    template: '<ng-content></ng-content>',\n    styleUrls: ['./icon.css'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n    inputs: ['color']\n})\nexport class McIcon extends _McIconMixinBase implements CanColor {\n    constructor(elementRef: ElementRef, @Attribute('mc-icon') iconName: string) {\n        super(elementRef);\n\n        elementRef.nativeElement.classList.add(iconName);\n    }\n\n    _getHostElement() {\n        return this._elementRef.nativeElement;\n    }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { A11yModule } from '@ptsecurity/cdk/a11y';\nimport { PlatformModule } from '@ptsecurity/cdk/platform';\n\nimport {\n    McIcon,\n    McIconCSSStyler\n} from './icon.component';\n\n\n@NgModule({\n    imports: [\n        CommonModule,\n        A11yModule,\n        PlatformModule\n    ],\n    exports: [\n        McIcon,\n        McIconCSSStyler\n    ],\n    declarations: [\n        McIcon,\n        McIconCSSStyler\n    ]\n})\nexport class McIconModule {}\n"],"names":["this","cdr","prefix","positions","DEFAULT_4_POSITIONS","slice","classMap","mcVisibleChange","EventEmitter","mcMouseEnterDelay","mcMouseLeaveDelay","_mcTrigger","_mcPlacement","_mcVisible","BehaviorSubject","onHideSubject","Subject","closeOnInteraction","availablePositions","POSITION_MAP","$visible","asObservable","Object","defineProperty","McTooltipComponent","prototype","get","_mcTitle","set","value","isTitleString","TemplateRef","unshift","mcPlacement","visible","coerceBooleanProperty","next","emit","show","_this","hideTid","clearTimeout","isContentEmpty","mcTrigger","showTid","setTimeout","mcVisible","markForCheck","hide","setClassMap","mcTitle","afterHidden","handleBodyInteraction","tslib_1.__decorate","Output","tslib_1.__metadata","Input","Component","selector","inputs","outputs","animations","fadeAnimation","template","preserveWhitespaces","styles","encapsulation","ViewEncapsulation","None","changeDetection","ChangeDetectionStrategy","OnPush","host","(body:click)","ChangeDetectorRef","MC_TOOLTIP_SCROLL_STRATEGY","InjectionToken","MC_TOOLTIP_SCROLL_STRATEGY_FACTORY_PROVIDER","provide","deps","Overlay","useFactory","mcTooltipScrollStrategyFactory","McTooltip","overlay","elementRef","ngZone","scrollDispatcher","hostView","scrollStrategy","direction","isTooltipOpen","isDynamicTooltip","parentDisabled","$unsubscribe","_disabled","manualListeners","Map","destroyed","title","updateCompValue","_mcMouseEnterDelay","_mcMouseLeaveDelay","_mcTooltipClass","tooltip","externalValue","createOverlay","overlayRef","strategy","position","flexibleConnectedTo","withTransformOriginOn","withFlexibleDimensions","withViewportMargin","withPositions","scrollableAncestors","getAncestorScrollContainers","withScrollableContainers","positionChanges","pipe","takeUntil","subscribe","change","onPositionChange","scrollableViewProperties","isOverlayClipped","run","create","positionStrategy","panelClass","updatePosition","detachments","detach","hasAttached","$event","updatedPlacement","keys","some","key","connectionPair","originX","originY","overlayX","overlayY","handlePositioningUpdate","pos","overlayElement","clientHeight","element","nativeElement","currentContainer","style","top","parseInt","split","ngOnInit","initElementRefListeners","ngOnDestroy","dispose","forEach","listener","event","removeEventListener","clear","complete","handleKeydown","e","keyCode","ESCAPE","handleTouchend","addEventListener","disabled","portal","ComponentPortal","attach","instance","property","distinctUntilChanged","data","getConfig","origin","getOrigin","getOverlayPosition","tslib_1.__assign","main","fallback","originPosition","isLtr","getMcTooltipInvalidPositionError","_a","invertPosition","x","y","overlayPosition","newX","newY","HostBinding","Directive","exportAs","(keydown)","(touchend)","tslib_1.__param","Inject","Optional","ElementRef","NgZone","ScrollDispatcher","ViewContainerRef","Directionality","McToolTipModule","NgModule","declarations","exports","imports","CommonModule","OverlayModule","providers","entryComponents","VERSION","Version","SELECT_PANEL_PADDING_X","McSelect","McSelect_1","[attr.id]","[attr.tabindex]","class","[class.mc-disabled]","[class.mc-select-invalid]","[class.mc-select-required]","(focus)","(blur)","(window:resize)","mcSelectAnimations","transformPanel","fadeInContent","McFormFieldControl","useExisting","MC_OPTION_PARENT_COMPONENT","Self","Attribute","MC_SELECT_SCROLL_STRATEGY","ViewportRuler","Renderer2","ErrorStateMatcher","NgForm","FormGroupDirective","McFormField","NgControl","String","_McSelectMixinBase","McSelectModule","McOptionModule","McIconModule","McTagModule","McFormFieldModule","McSelectTrigger","MC_SELECT_SCROLL_STRATEGY_PROVIDER","MC_SIDEPANEL_DATA","McSidepanelPosition","McSidepanelAnimationState","McSidepanelConfig","Right","hasBackdrop","requiredBackdrop","disableClose","overlayPanelClass","mcSidepanelTransformAnimation","right","in","out","left","bottom","mcSidepanelAnimations","sidepanelState","trigger","state","transform","params","transformIn","transformOut","transition","animate","AnimationCurves","AccelerationCurve","DecelerationCurve","MC_SIDEPANEL_WITH_INDENT","MC_SIDEPANEL_WITH_SHADOW","McSidepanelContainerComponent","_super","changeDetectorRef","sidepanelConfig","withIndent","withShadow","call","animationState","Void","animationStateChanged","tslib_1.__extends","attachComponentPortal","validatePortalAttached","setAnimation","setPanelClass","portalOutlet","attachTemplatePortal","enter","Visible","detectChanges","exit","Hidden","onAnimation","animationTransform","classList","add","Error","ViewChild","CdkPortalOutlet","tabindex","role","aria-modal","[@state]","(@state.start)","(@state.done)","Boolean","BasePortalOutlet","uniqueId","McSidepanelRef","containerInstance","config","afterClosed$","afterOpened$","id","filter","phaseName","toState","take","result","merge","backdropClick","keydownEvents","close","closed","detachBackdrop","afterClosed","afterOpened","MC_SIDEPANEL_DEFAULT_OPTIONS","McSidepanelService","injector","defaultOptions","parentSidepanelService","openedSidepanelsAtThisLevel","openedSidepanels","closeSidepanels","open","componentOrTemplateRef","fullConfig","getSidepanelById","container","attachContainer","ref","TemplatePortal","$implicit","sidepanelRef","createInjector","undefined","contentRef","push","removeOpenSidepanel","closeAll","find","sidepanel","openedSidepanelsWithSamePosition","getOpenedSidepanelsWithSamePosition","PortalInjector","WeakMap","length","containerPortal","sidepanelContainer","injectionTokens","overlayConfig","OverlayConfig","backdropClass","getBackdropClass","maxWidth","scrollStrategies","block","global","sidepanels","reverse","hasOpenedSidepanelWithBackdrop","index","indexOf","splice","Injectable","SkipSelf","Injector","McSidepanelClose","sidepanelService","getClosestSidepanel","ngOnChanges","changes","proxiedChange","mcSidepanelClose","sidepanelResult","currentValue","(click)","type","McSidepanelHeader","McSidepanelBody","McSidepanelFooter","McSidepanelActions","McSidepanelModule","PortalModule","McCommonModule","McSplitterComponent","renderer","areas","_gutterSize","isDragging","areaPositionDivider","listeners","_direction","gutterSize","size","coerceNumberProperty","addArea","area","order","getSize","setOrder","initialSize","setStyle","isVertical","onMouseDown","leftAreaIndex","rightAreaIndex","leftArea","rightArea","startPoint","screenX","screenY","item","disableFlex","setSize","runOutsideAngular","listen","onMouseUp","onMouseMove","removeArea","indexToRemove","endPoint","offset","newLeftAreaSize","newRightAreaSize","minLeftAreaSize","getMinSize","minRightAreaSize","rightAreaOffset","unsubscribe","pop","McGutterDirective","_order","_size","getCursor","getState","coerceCssPixelValue","setAttr","attribute","setAttribute","McSplitterAreaDirective","splitter","removeStyle","sz","getSizeProperty","getOffsetSizeProperty","getComputedStyle","parseFloat","getMinSizeProperty","McSplitterModule","nextUniqueId","McToggleBase","_elementRef","_McToggleMixinBase","mixinTabIndex","mixinColor","mixinDisabled","ThemePalette","Primary","McToggleChange","McToggleComponent","_focusMonitor","_changeDetectorRef","tabIndex","labelPosition","ariaLabel","ariaLabelledby","_uniqueId","name","_checked","_onTouchedCallback","_onChangeCallback","_","monitor","McToggleComponent_1","stopMonitoring","focus","focusVia","_inputElement","_getAriaChecked","checked","_onInteractionEvent","stopPropagation","_onLabelTextChange","_onInputClick","_updateModelValue","_emitChangeEvent","writeValue","registerOnChange","fn","registerOnTouched","setDisabledState","isDisabled","source","NG_VALUE_ACCESSOR","forwardRef","multi","[id]","[class.mc-toggle_off]","FocusMonitor","McToggleModule","A11yModule","Math","max","minHeight","textarea","scrollHeight","diff","McTextarea","McTextarea_1","[class.mc-textarea-resizable]","[attr.placeholder]","[disabled]","[required]","MC_TEXTAREA_VALUE_ACCESSOR","McTextareaMixinBase","McTextareaModule","FormsModule","TimeParts","TimeFormats","TIMEFORMAT_PLACEHOLDERS","HHmmss","HHmm","DEFAULT_TIME_FORMAT","HOURS_MINUTES_SECONDS_REGEXP","RegExp","HOURS_MINUTES_REGEXP","HOURS_ONLY_REGEXP","uniqueComponentIdSuffix","formValidators","formValidatorOnChangeRegistrators","validatorOnChange","c","validatorOnChangeHandler","McTimepickerBase","_defaultErrorStateMatcher","_parentForm","_parentFormGroup","ngControl","McTimepickerMixinBase","mixinErrorState","ɵ1","validate","__validatorOnChangeHandler","validator","registerOnValidatorChange","McTimepicker","inputValueAccessor","focused","stateChanges","controlType","uid","_minTime","_maxTime","previousNativeValue","onChange","noop","placeholder","valueAccessor","control","Validators","compose","parseValidator","minTimeValidator","maxTimeValidator","McTimepicker_1","_id","_required","applyInputChanges","_timeFormat","formatValue","map","timeFormatKey","minValue","minDateTime","getDateFromTimeString","maxValue","maxDateTime","ngDoCheck","updateErrorState","dirtyCheckNativeValue","focusChanged","isFocused","onTouched","onBlur","onPaste","preventDefault","clipboardUserInput","clipboardData","getData","onInput","initialCursorStart","selectionStart","initialCursorEnd","selectionEnd","isAutocompleteTriggered","getParsedTimeParts","hoursOnly","hoursAndMinutes","hoursAndMinutesAndSeconds","doTimestringReformat","errors","createSelectionOfTimeComponentInInput","isBadInput","onContainerClick","setProperty","getTimeStringFromDate","timeFormat","onKeyDown","getKeyCode","upDownTimeByArrowKeys","switchSelectionBetweenTimeparts","newValue","validity","badInput","applyParams","changedTime","timeToApply","currentDateTimeInput","updateValueAndValidity","cursorPos","modifiedTimePart","getTimeEditMetrics","incrementTime","decrementTime","getCursorPositionOfPrevTimePartStart","getCursorPositionOfNextTimePartStart","code","newEditParams","cursorStartPosition","cursorEndPosition","dateVal","whatToIncrement","seconds","getTimeDigitsFromDate","hours","minutes","getDateFromTimeDigits","whatToDecrement","timeString","timeDevider","nextDividerPos","cursorPosition","minutesIndex","hoursIndex","secondsIndex","tempVal","getNumberWithLeadingZero","getHours","getMinutes","getSeconds","match","trim","Number","resultDate","Date","isNaN","getTime","digit","mcTimepickerParse","text","isTimeLowerThenMin","mcTimepickerLowerThenMintime","isTimeGreaterThenMax","mcTimepickerHigherThenMaxtime","timeToCompare","[attr.time-format]","[attr.min-time]","[attr.max-time]","[attr.value]","(input)","(paste)","NG_VALIDATORS","useValue","MC_INPUT_VALUE_ACCESSOR","McTimepickerModule","PlatformModule","minWidth","opacity","group","query","animateChild","MC_SELECT_SCROLL_STRATEGY_PROVIDER_FACTORY","McSelectChange","McSelectBase","_viewportRuler","_ngZone","_renderer","_dir","_parentFormField","_scrollStrategyFactory","_triggerFontSize","_optionIds","_transformOrigin","_panelDoneAnimating","_panelDoneAnimatingStream","_scrollStrategy","_offsetY","_positions","optionSelectionChanges","defer","options","apply","option","onSelectionChange","onStable","switchMap","openedChange","_openedStream","o","_closedStream","selectionChange","valueChange","hiddenItems","oneMoreText","_panelOpen","_scrollTop","_multiple","_uid","_destroy","_focused","_onChange","_onTouched","_compareWith","o1","o2","_placeholder","_selectionModel","getMcSelectDynamicMultipleError","getMcSelectNonFunctionValueError","_initializeSelection","_value","SelectionModel","multiple","panelOpen","overlayDir","offsetX","ngAfterContentInit","_initKeyManager","added","select","removed","deselect","startWith","_resetOptions","ngAfterViewInit","tags","_calculateHiddenItems","toggle","_triggerRect","getBoundingClientRect","_keyManager","withHorizontalOrientation","_calculateOverlayPosition","_highlightCorrectOption","fontSize","_isRtl","_setSelectionByValue","selected","empty","selectedOptions","viewValue","join","isEmpty","_handleKeydown","_handleOpenKeydown","_handleClosedKeydown","_onFadeInDone","_onFocus","_onBlur","_onAttached","positionChange","_calculateOverlayOffsetX","panel","scrollTop","_getPanelTheme","color","_calculateOverlayScroll","selectedIndex","scrollBuffer","maxScroll","itemHeight","_getItemHeight","optionOffsetFromScrollTop","halfOptionHeight","optimalScrollPosition","min","onRemoveMatcherItem","visibleItems","totalItemsWidth","_getTotalItemsWidthInMatcher","totalVisibleItemsWidth","tag","offsetTop","offsetHeight","width","itemsCounter","querySelector","matcherList","itemsCounterShowed","matcherListWidth","matcherWidth","triggerClone","cloneNode","remove","appendChild","querySelectorAll","isArrowKey","DOWN_ARROW","UP_ARROW","LEFT_ARROW","RIGHT_ARROW","ENTER","SPACE","altKey","onKeydown","manager","HOME","END","setFirstItemActive","setLastItemActive","activeItem","A","ctrlKey","hasDeselectedOptions_1","previouslyFocusedIndex","activeItemIndex","shiftKey","_selectViaInteraction","Promise","resolve","then","Array","isArray","getMcSelectNonArrayValueError","_selectValue","_sortValues","correspondingOption","setActiveItem","error","isDevMode","console","warn","ActiveDescendantKeyManager","withTypeAhead","withVerticalOrientation","tabOut","_scrollActiveOptionIntoView","changedOrDestroyed","_onSelect","isUserInput","_stateChanges","_setOptionIds","wasSelected","isSelected","_propagateChanges","options_1","toArray","sort","a","b","sortComparator","fallbackValue","valueToEmit","activeOptionIndex","labelCount","_countGroupLabelsBeforeOption","optionGroups","_getOptionScrollPosition","_getOptionIndex","reduce","current","items","_getItemCount","panelHeight","scrollContainerHeight","selectedOptionOffset","_calculateOverlayOffsetY","_checkOverlayWithinViewport","overlayRect","viewportSize","getViewportSize","isRtl","first","leftOverflow","rightOverflow","round","topSpaceAvailable","bottomSpaceAvailable","height","panelHeightTop","abs","totalPanelHeight","panelHeightBottom","_adjustPanelUp","_adjustPanelDown","_getOriginBasedOnOption","distanceBelowViewport","distanceAboveViewport","optionHeightAdjustment","ViewChildren","McTag","QueryList","CdkConnectedOverlay","ContentChildren","McOption","descendants","McOptgroup","ContentChild","Observable","McTabBody","PortalHostDirective","mcTabsAnimations","translateTab","McTabBodyPortal","componentFactoryResolver","viewContainerRef","centeringSub","Subscription","EMPTY","leavingSub","beforeCentering","isCenterPosition","bodyPosition","isCentering","content","afterLeavingCenter","ComponentFactoryResolver","McTabLabelWrapperBase","mcTabLabelWrapperMixinBase","McTabLabelWrapper","getOffsetLeft","offsetLeft","getOffsetWidth","offsetWidth","[attr.aria-disabled]","McTabHeaderBase","McTabHeader","viewportRuler","dir","showPaginationControls","disableScrollAfter","disableScrollBefore","selectFocusedIndex","indexFocused","_scrollDistance","selectedIndexChanged","_selectedIndex","coercedValue","keyManager","updateActiveItem","isValidIndex","focusIndex","v","getMaxScrollDistance","scrollDistanceChanged","checkScrollingControls","ngAfterContentChecked","tabLabelCount","labelWrappers","updatePagination","scrollToLabel","updateTabScrollPosition","dirChange","observableOf","resize","realign","FocusKeyManager","getLayoutDirection","withWrap","requestAnimationFrame","newFocusIndex","setTabFocus","onContentChanges","textContent","currentTextContent","zoneCallback","checkPaginationEnabled","tab","containerEl","tabListContainer","scrollLeft","scrollWidth","scrollDistance","translateX","tabList","scrollHeader","scrollDir","viewLength","labelIndex","selectedLabel","labelBeforePos","labelAfterPos","beforeVisiblePos","afterVisiblePos","isEnabled","[class.mc-tab-header__pagination-controls_enabled]","[class.mc-tab-header_rtl]","McLightTabsCssStyler","McAlignTabsCenterCssStyler","McAlignTabsEndCssStyler","McStretchTabsCssStyler","nextId","McTabChangeEvent","MC_TABS_CONFIG","McTabGroupBase","mcTabGroupMixinBase","McTabGroup","lightTabs","defaultConfig","headerPosition","selectedIndexChange","focusChange","animationDone","selectedTabChange","indexToSelect","tabBodyWrapperHeight","tabsSubscription","tabLabelSubscription","_dynamicHeight","lightTab","groupId","animationDuration","clampTabIndex","isFirstRun_1","createChangeEvent","tabs","isActive","subscribeToTabLabels","i","getTabLabelId","getTabContentId","setTabBodyWrapperHeight","tabHeight","wrapper","tabBodyWrapper","removeTabBodyWrapperHeight","handleClick","tabHeader","getTabIndex","McTab","[class.mc-tab-group_dynamic-height]","[class.mc-tab-group_inverted-header]","McTabNavBase","mcTabNavMixinBase","McTabNav","McTabLinkBase","mcTabLinkMixinBase","McTabLink","focusMonitor","[attr.aria-current]","[attr.tabIndex]","[class.mc-active]","McTabsModule","McTabLabel","McTabContent","McTagBase","_McTagMixinBase","_addClassModificatorForIcons","icons","contentChildren","iconElement","previousElementSibling","nextElementSibling","nextSibling","previousSibling","firstIconElement","secondIconElement","McIcon","McTextareaBase","canGrow","lineHeight","freeRowsHeight","growObserver","fromEvent","growSubscription","grow","bind","paddingTop","paddingBottom","outerHeight","window","getGrowHeight","toString","McNavbar","McNavbarModule","McNavbarContainer","McNavbarTitle","McNavbarItem","McNavbarBrand","McNavbarLogo","idIterator","McProgressBarBase","_McProgressBarMixinBase","McProgressBar","mode","McProgressBarModule","McProgressSpinnerBase","_McProgressSpinnerMixinBase","McProgressSpinner","percentage","McProgressSpinnerModule","McRadioChange","McRadioGroupBase","_McRadioGroupMixinBase","MC_RADIO_GROUP_CONTROL_VALUE_ACCESSOR","McRadioGroup","_changeDetector","_name","_selected","_isInitialized","_labelPosition","controlValueAccessorChangeFn","updateRadioButtonNames","markRadiosForCheck","updateSelectedRadioFromValue","checkSelectedRadioButton","toBoolean","touch","emitChangeEvent","_radios","radio","isAlreadySelected","McRadioButton","McRadioButtonBase","_McRadioButtonMixinBase","radioGroup","_radioDispatcher","removeUniqueSelectionListener","newCheckedState","notify","newDisabledState","required","onInputClick","onInputChange","groupValueChanged","[class.mc-checked]","UniqueSelectionDispatcher","McRadioModule","McTreeNodeDef","McTreeNodeDef_1","CdkTreeNodeDef","McTreeNodePadding","arguments","_baseLeftPadding","_iconWidth","_indent","McTreeNodePadding_1","_withIcon","_paddingIndent","nodeLevel","_treeNode","_tree","treeControl","getLevel","level","_level","leftPadding","isExpandable","_setPadding","CdkTreeNodePadding","McTreeNodeOption","treeSelection","_hasFocus","McTreeNodeOption_1","setSelected","setFocusedOption","_getHeight","getClientRects","_handleFocus","_handleBlur","_handleClick","[class.mc-selected]","[class.mc-focused]","[attr.aria-expanded]","[attr.aria-level]","CdkTreeNode","McTreeSelection","_McTreeSelectionBase","CdkTree","McTreeNavigationChange","McTreeSelectionChange","_differs","autoSelect","noUnselect","navigationChange","McTreeSelection_1","rawValue","log","_onKeyDown","withShift","withCtrl","collapse","expand","toggleFocusedOption","PAGE_UP","setPreviousPageItemActive","PAGE_DOWN","setNextPageItemActive","updateScrollSize","withScrollSize","floor","previousIndex_1","previousActiveItemIndex","activeIndex_1","_canDeselectLast","_emitNavigationEvent","focusedIndex","_isValidIndex","focusedOption","renderNodeChanges","dataDiffer","viewContainer","parentData","_dataDiffer","_nodeOutlet","arrayOfInstances","_embeddedViews","view","viewDef","def","nodes","node","nodeMatchedQueries","matchedQueryIds","nodeData","nodeIndex","reset","notifyOnChanges","CdkTreeNodeOutlet","[tabIndex]","IterableDiffers","MC_TREE_DIRECTIVES","McTreeModule","CdkTreeModule","McTreeFlattener","transformFunction","getChildren","_flattenNode","resultNodes","parentMap","flatNode","children","child","childParentMap","flattenNodes","structuredData","expandFlattenedNodes","results","currentExpand","isExpanded","McTreeFlatDataSource","treeFlattener","initialData","_flattenedData","_expandedData","_data","dataNodes","connect","collectionViewer","viewChange","expansionModel","disconnect","DataSource","McTreeNestedDataSource","CdkPortal","ctorParameters","McTabBase","mcTabMixinBase","textLabel","contentPortal","hasOwnProperty","explicitContent","implicitContent","read","onCentering","onCentered","dirChangeSubscription","computePositionAnimationState","positionIndex","computePositionFromOrigin","onTranslateTabStarted","onTranslateTabComplete","fromState","McModalControlService","parentService","openModals","rootOpenModals","registeredMetaMap","rootRegisteredMetaMap","registerModal","modalRef","hasRegistered","afterOpenSubscription","afterOpen","afterCloseSubscription","afterClose","removeOpenModal","has","afterAllClose","McModalRef","ModalUtil","document","lastPosition","listenDocumentClick","getLastClickPosition","clientX","clientY","ModalUtil$1","McModalComponent","cfr","mcMeasureScrollbarService","modalControl","changeDetector","mcModalType","mcZIndex","mcWidth","mcCloseByESC","_mcClosable","_mcMask","_mcMaskClosable","mcAfterOpen","mcAfterClose","mcOkType","_mcOkLoading","mcOnOk","_mcCancelLoading","mcOnCancel","transformOrigin","mcGetContainer","mcOkText","mcCancelText","isComponent","mcContent","createDynamicComponent","isModalButtons","mcFooter","formatModalButtons","HTMLElement","OverlayRef","handleVisibleStateChange","firstChange","contentComponentRef","bodyContainer","insert","autoFocusButtonOk","changeVisibleFromInside","destroy","triggerOk","onClickOkCancel","triggerCancel","getInstance","getContentComponentRef","getContentComponent","getElement","onClickMask","mcMask","mcMaskClosable","target","contains","isModalType","onClickCloseBtn","ok","cancel","loadingKey","caseClose_1","doClose","isPromise","handleThen","catch","isNonEmptyString","isTemplateRef","Type","animation","closeResult","changeBodyOverflow","animateTo","getButtonCallableProp","prop","args","onButtonClick","button","loading","changeAnimationState","maskAnimationClassMap","modalAnimationClassMap","_b","isVisible","updateTransformOrigin","buttons","autoLoading","component","factory","resolveComponentFactory","childInjector","parent","parentInjector","mcComponentParams","assign","modalElement","modalContainer","plusNum","body","scrollBarWidth","DOCUMENT","McMeasureScrollbarService","CssUnitPipe","defaultUnit","formatted","Pipe","ModalBuilderForService","createModal","changeProps","destroyModal","McModalService","confirm","confirmType","mcClassName","success","simpleConfirm","delete","McModalModule","McButtonModule","MC_NAVBAR_CONTAINER","MC_NAVBAR_ITEM","MC_NAVBAR_BRAND","MC_NAVBAR_TITLE","McNavbarItemBase","_McNavbarMixinBase","_platform","_cdRef","dropdownItems","isCollapsed","_subscription","encodeURI","dropdownContent","denyClickIfDisabled","_focusMonitor$","hasDropdownContent","listenClickOutside","startListenFocusDropdownItems","stopListenFocusDropdownItems","isActiveDropdownLink","link","isBrowser","location","href","handleClickByItem","toggleDropdown","isNavbarItem","handleClickByDropdownItem","forceCloseDropdown","_dropdownElements","el","events","eventListeners","hasAttribute","stopImmediatePropagation","[attr.disabled]","Platform","CollapsibleItem","_collapsed","processCollapsed","collapsed","updateCollapsedClass","CachedItemWidth","itemsForCollapse","_collapsedItemsWidth","calculateAndCacheCollapsedItemsWidth","updateTitle","acc","getTitle","computedTitle","getAttribute","decodeURI","innerText","removeAttribute","forceRecalculateItemsWidth","resizeDebounceInterval","firstLevelElement","secondLevelElements","resizeObserver","debounceTime","_resizeSubscription","updateCollapsed","_itemsWidths","calculateAndCacheItemsWidth","_totalItemsWidths","calculateAndCacheTotalItemsWidth","collapseDelta","maxAllowedWidth","itemsWidths","canCollapse","collapsedItemsWidth","getOuterElementWidth","getPropertyValue","allItemsSelector","allItems","from","getItemsForCollapse","McDropdown","resetActiveItem","addItem","_items","_itemChanges","removeItem","setPositionClasses","posX","posY","xPosition","yPosition","classes","_classList","_startAnimation","_panelAnimationState","_resetAnimation","_onAnimationDone","_animationDone","_isAnimating","McDropdownItem","McDropdownContent","McDropdown_1","mcDropdownAnimations","transformDropdown","fadeInItems","MC_DROPDOWN_PANEL","MC_DROPDOWN_DEFAULT_OPTIONS","MC_DROPDOWN_SCROLL_STRATEGY","MC_DROPDOWN_SCROLL_STRATEGY_FACTORY_PROVIDER","MC_DROPDOWN_SCROLL_STRATEGY_FACTORY","McDropdownTrigger","_overlay","_element","_viewContainerRef","_openedBy","dropdownOpened","dropdownClosed","_overlayRef","_opened","_closeSubscription","_hoverSubscription","dropdown","_check","_cleanUpSubscriptions","_createOverlay","_setPosition","_portal","lazyContent","_closingActions","_init","opened","_attached","_reset","_setIsOpened","focusFirstItem","isOpen","throwMcDropdownMissingError","templateRef","_getOverlayConfig","_subscribeToPositions","withLockedPosition","originFallbackX","overlayFallbackY","_c","originFallbackY","_d","overlayFallbackX","overlapTrigger","offsetY","backdrop","(touchstart)","McDropdownModule","McContentComponent","[class.mc-layout-content]","McFooterComponent","[class.mc-layout-footer]","McHeaderComponent","[class.mc-layout-header]","McLayoutComponent","hasSidebar","[class.mc-layout]","[class.mc-layout-has-sidebar]","McSidebarComponent","mcLayoutComponent","_mcWidth","mcCollapsedWidth","mcCollapsedChange","collapsible","mcCollapsed","[class.mc-layout-sidebar]","[class.mc-layout-sidebar-collapsed]","[style.flex]","[style.max-width.px]","[style.min-width.px]","[style.width.px]","Host","McLayoutModule","McListOption","listSelection","checkboxPosition","_reportValueChange","wasSelected_1","_lineSetter","McLineSetter","_lines","_removeOptionFromList","getLabel","_text","_getHostElement","McLine","McListSelection","MC_SELECTION_LIST_VALUE_ACCESSOR","McListSelectionChange","McListSelectionBase","_McListSelectionMixinBase","horizontal","_modelChanges","_tempValues","_setOptionsFromValues","_i","selectAll","deselectAll","values","getSelectedOptionValues","listOption","optionIndex","setPreviousItemActive","setNextItemActive","_getOptionByValue","McListBase","McList","McListSubheaderCssStyler","McListItemBase","McListItem","McListModule","McLineModule","McLinkBase","_McLinkBase","McLink","McLinkModule","rootAfterAllClose","activeDate","startAt","dateAdapter","today","_currentView","startView","McCalendar","ngAfterViewChecked","moveFocusOnNextTick","focusActiveCell","intlChanges","minDate","maxDate","dateFilter","getCurrentViewComponent","init","updateTodaysDate","currentView","monthView","yearView","multiYearView","dateSelected","date","sameDate","selectedChange","yearSelectedInMultiYearView","normalizedYear","yearSelected","monthSelectedInYearView","normalizedMonth","monthSelected","userSelected","userSelection","goToDateInView","getValidDateOrNull","obj","isDateInstance","isValid","McMonthView","McYearView","McMultiYearView","MC_DATE_FORMATS","McDatepickerIntl","DateAdapter","mcDatepickerAnimations","fadeInCalendar","Element","matches","msMatchesSelector","datepickerUid","MC_DATEPICKER_SCROLL_STRATEGY","MC_DATEPICKER_SCROLL_STRATEGY_FACTORY_PROVIDER","MC_DATEPICKER_SCROLL_STRATEGY_FACTORY","McDatepickerContentBase","McDatepickerContentMixinBase","McDatepickerContent","calendar","[@transformPanel]","McDatepicker","openedStream","closedStream","disabledChange","selectedChanged","validSelected","focusedElementBeforeOpen","inputSubscription","createMissingDateImplError","McDatepicker_1","_startAt","datepickerInput","deserialize","_color","getThemePalette","popupRef","popupComponentRef","oldValue","selectYear","selectMonth","registerInput","input","activeElement","openAsPopup","calendarPortal","isAttached","completeClose","createPopup","datepicker","setColor","createPopupPositionStrategy","MC_DATEPICKER_VALUE_ACCESSOR","McDatepickerInput","MC_DATEPICKER_VALIDATORS","McDatepickerInputEvent","targetElement","dateFormats","formField","dateChange","dateInput","datepickerSubscription","localeSubscription","lastValueValid","cvaOnChange","mcDatepickerParse","minValidator","controlValue","compareDate","mcDatepickerMin","actual","maxValidator","mcDatepickerMax","filterValidator","mcDatepickerFilter","localeChanges","McDatepickerInput_1","oldDate","_min","_max","blur","isAltDownArrow","readOnly","parse","format","display","[attr.aria-haspopup]","[attr.aria-owns]","[attr.min]","[attr.max]","(change)","McDatepickerToggleIcon","McDatepickerToggle","intl","defaultTabIndex","parsedTabIndex","watchStateChanges","datepickerDisabled","inputDisabled","datepickerToggled","McButton","[class.mc-datepicker-toggle_active]","[class.mc-warn]","McDatepickerModule","McCalendarBody","McCalendarHeader","McDivider","_vertical","_inset","[attr.aria-orientation]","[class.mc-divider-vertical]","[class.mc-divider-inset]","McDividerModule","_template","_componentFactoryResolver","_appRef","_injector","_document","context","_outlet","DomPortalOutlet","createElement","parentNode","insertBefore","outletElement","ApplicationRef","McDropdownItemBase","_McDropdownItemMixinBase","_parentDropdownPanel","_getTabIndex","_checkDisabled","textNodeType","TEXT_NODE","output","childNodes","length_1","nodeType","providedIn","MC_DROPDOWN_DEFAULT_OPTIONS_FACTORY","_defaultOptions","_xPosition","_yPosition","_tabSubscription","_overlapTrigger","_hasBackdrop","throwMcDropdownInvalidPositionX","throwMcDropdownInvalidPositionY","className","setFocusOrigin","McInputMono","MIN_VALIDATOR","MinValidator","_createValidator","_validator","MAX_VALIDATOR","MaxValidator","McInputModule","McInput","McNumberInput","calendarLabel","openCalendarLabel","prevMonthLabel","nextMonthLabel","prevYearLabel","nextYearLabel","prevMultiYearLabel","nextMultiYearLabel","switchToMonthViewLabel","switchToMultiYearViewLabel","McCalendarCell","displayValue","enabled","cssClasses","numCols","activeCell","cellAspectRatio","selectedValueChange","cellClicked","cell","columnChanges","rows","firstRowOffset","cellPadding","cellWidth","isActiveCell","rowIndex","colIndex","cellNumber","aria-readonly","activeDateChange","firstDayOfWeek","getFirstDayOfWeek","narrowWeekdays","getDayOfWeekNames","longWeekdays","weekdays","long","narrow","concat","_activeDate","oldActiveDate","validDate","clampDate","hasSameMonthAndYear","selectedDate","getDateInCurrentMonth","_minDate","_maxDate","selectedYear","getYear","selectedMonth","getMonth","createDate","handleCalendarBodyKeydown","addCalendarDays","getDate","getNumDaysInMonth","addCalendarYears","addCalendarMonths","todayDate","monthLabel","getMonthNames","toLocaleUpperCase","substr","firstOfMonth","firstWeekOffset","getDayOfWeek","createWeekCells","mcCalendarBody","daysInMonth","dateNames","getDateNames","weeks","shouldEnableDate","dateA11yLabel","cellClasses","dateClass","d1","d2","todayYear","activeYear","activeOffset","years","row","year","createCellForYear","onYearSelected","month","yearsPerPage","getActiveCell","yearName","getYearName","shouldEnableYear","firstOfYear","getMonthInCurrentYear","onMonthSelected","normalizedDate","todayMonth","yearLabel","monthNames","months","createCellForMonth","monthName","monthYearA11yLabel","newMonthName","shouldEnableMonth","isYearAndMonthAfterMaxDate","isYearAndMonthBeforeMinDate","maxYear","maxMonth","minYear","minMonth","label","monthYearLabel","multi-year","currentPeriodClicked","previousClicked","nextClicked","previousEnabled","isSameView","nextEnabled","date1","date2","clampedActiveDate","calendarHeaderPortal","headerComponent","McIconButton","McAnchor","McButtonCSSStyler","McIconButtonCSSStyler","McCard","readonly","_tabIndex","hostElement","onClick","[class.mc-card_readonly]","[class.mc-card_selected]","McCardModule","MC_CHECKBOX_CLICK_ACTION","MC_CHECKBOX_CONTROL_VALUE_ACCESSOR","McCheckbox","TransitionCheckState","McCheckboxChange","McCheckboxBase","_McCheckboxMixinBase","_clickAction","indeterminateChange","_currentAnimationClass","_currentCheckState","Init","_controlValueAccessorChangeFn","_indeterminate","focusOrigin","_onInputFocusChange","changed","_transitionCheckState","Indeterminate","Checked","Unchecked","indeterminate","newState","oldState","[class.mc-indeterminate]","[class.mc-checkbox-label-before]","MC_CHECKBOX_REQUIRED_VALIDATOR","McCheckboxRequiredValidator","[attr.required]","CheckboxRequiredValidator","McCheckboxModule","McCleaner","McFormFieldNumberControl","McHint","McPrefix","McStepper","stepUp","stepDown","onStepUp","onStepDown","McSuffix","McFormFieldBase","_McFormFieldMixinBase","_labelId","hovered","_validateControlChild","_control","_numberControl","hasStepper","_stepper","valueChanges","clearValue","hasCleaner","onHoverChanged","isHovered","step","_shouldForward","getMcFormFieldMissingControlError","_hint","_suffix","_prefix","_cleaner","[class.mc-form-field_invalid]","[class.mc-form-field_has-prefix]","[class.mc-form-field_has-suffix]","[class.mc-form-field_has-cleaner]","[class.mc-form-field_has-stepper]","[class.ng-untouched]","[class.ng-touched]","[class.ng-pristine]","[class.ng-dirty]","[class.ng-valid]","[class.ng-invalid]","[class.ng-pending]","(mouseenter)","(mouseleave)","McFormFieldWithoutBorders","res","MC_INPUT_INVALID_TYPES","BIG_STEP","SMALL_STEP","McInputBase","_McInputMixinBase","_model","bigStep","isDigit","Infinity","_host","self","getPrototypeOf","normalizeSplitter","McNumberInput_1","_focusChanged","minuses","NUMPAD_MINUS","DASH","FF_MINUS","serviceKeys","DELETE","BACKSPACE","TAB","arrows","allowedKeys","isIEPeriod","isNotIEPeriod","metaKey","C","V","X","F1","F12","EDGE","TRIDENT","ZERO","NINE","NUMPAD_ZERO","NUMPAD_NINE","valueAsNumber","update","replace","isFloat","isInt","test","NgModel","_type","_neverEmptyInputTypes","t","getSupportedInputTypes","_inputValueAccessor","_previousNativeValue","McInput_1","_validateType","_dirtyCheckNativeValue","_onInput","_isNeverEmpty","_isBadInput","getMcInputUnsupportedTypeError","__extends","d","__","constructor","extendStatics","__decorate","decorators","desc","r","getOwnPropertyDescriptor","Reflect","decorate","__param","paramIndex","decorator","__metadata","metadataKey","metadataValue","metadata","isBoolean","val","MC_SANITY_CHECKS_FACTORY","base","class_1","defaultColor","Default","colorPalette","errorState","matcher","errorStateMatcher","isErrorState","optionsArray","groups","groupCounter","optionHeight","currentScrollPosition","optionOffset","arrayMap","array","iteratee","baseValues","object","props","inputType","sanitizeNumber","isFinite","getPrecision","arr","pow","value1","value2","precision","provider","reposition","openSidepanels","parentElement","scrollThrottle","setPrototypeOf","__proto__","p","__assign","s","n","MC_SANITY_CHECKS","_sanityChecksEnabled","_hasDoneGlobalChecks","_window","_areChecksEnabled","_checkDoctypeIsDefined","_checkThemeIsPresent","_isTestEnv","doctype","testElement","computedStyle","removeChild","BidiModule","_setLineClass","count","_resetClasses","_setClass","isAdd","ShowOnDirtyErrorStateMatcher","form","invalid","dirty","submitted","touched","McPseudoCheckbox","McPseudoCheckboxModule","scrollbarMeasure","overflow","initScrollBarWidth","_scrollbarWidth","scrollDiv","scrollProp","clientWidth","McOptgroupBase","_McOptgroupMixinBase","_uniqueOptgroupIdCounter","[class.mc-optgroup-disabled]","[attr.aria-labelledby]","_uniqueIdCounter","McOptionSelectionChange","_parent","_active","_mostRecentViewValue","disableRipple","_emitSelectionChangeEvent","setActiveStyles","setInactiveStyles","[class.mc-option-multiple]","MC_LABEL_GLOBAL_OPTIONS","topCenter","topLeft","topRight","rightTop","rightBottom","bottomCenter","bottomLeft","bottomRight","leftTop","leftBottom","McIconCSSStyler","McIconBase","_McIconMixinBase","Empty","iconName","queries","McButtonBase","_McButtonMixinBase","_haltDisabledEvents"],"mappings":"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"}